1
00:00:00,200 --> 00:00:06,770
[Music]

2
00:00:03,000 --> 00:00:15,610
please welcome to the stage JB

3
00:00:06,770 --> 00:00:19,549
[Music]

4
00:00:15,610 --> 00:00:21,800
man madam at the Showbox I feel like I

5
00:00:19,550 --> 00:00:24,680
feel like a rock star of some sort I I

6
00:00:21,800 --> 00:00:27,320
feel like it's singing and dancing but

7
00:00:24,680 --> 00:00:28,970
that's probably a different party well

8
00:00:27,320 --> 00:00:33,710
maybe at the end depending on how time

9
00:00:28,970 --> 00:00:36,500
runs okay so hi I'm Jay Beale I'm really

10
00:00:33,710 --> 00:00:37,850
happy to be speaking here at blue hat

11
00:00:36,500 --> 00:00:40,760
I've been coming to blue hat for years

12
00:00:37,850 --> 00:00:42,079
and I've always been the you know I've

13
00:00:40,760 --> 00:00:45,079
always been the Linux guy and now the

14
00:00:42,079 --> 00:00:47,450
you know Linux and cloud guy and

15
00:00:45,079 --> 00:00:50,840
Microsoft used to be a Windows place

16
00:00:47,450 --> 00:00:53,510
with you know so blue hats become blue

17
00:00:50,840 --> 00:00:55,460
hat just like Microsoft has become more

18
00:00:53,510 --> 00:00:59,210
modern and much cooler at least to me a

19
00:00:55,460 --> 00:01:01,610
Linux guy so anyway here's my title

20
00:00:59,210 --> 00:01:04,579
slide I have a bio on all my slide decks

21
00:01:01,610 --> 00:01:06,680
but since nobody reads BIOS this is my

22
00:01:04,578 --> 00:01:10,758
seat this is a replaces my sea of text

23
00:01:06,680 --> 00:01:12,649
with my graphical bio so what we're

24
00:01:10,759 --> 00:01:14,540
gonna do now is I'm gonna talk to you

25
00:01:12,649 --> 00:01:16,640
about kubernetes security and we're

26
00:01:14,540 --> 00:01:20,000
gonna do a ton of this by way of a demo

27
00:01:16,640 --> 00:01:21,920
and so I'm gonna talk to you I try I'm

28
00:01:20,000 --> 00:01:23,510
trying really really hard to leave out

29
00:01:21,920 --> 00:01:26,300
the introductory material on what

30
00:01:23,510 --> 00:01:28,280
cribben eTI's is and the hard part is

31
00:01:26,300 --> 00:01:31,370
how many of you know a lot about

32
00:01:28,280 --> 00:01:32,990
kubernetes or know what it is okay how

33
00:01:31,370 --> 00:01:35,299
many of you don't give me hands come on

34
00:01:32,990 --> 00:01:37,130
be brave there were tons of you okay and

35
00:01:35,299 --> 00:01:41,960
then anyone who's aren't okay anyone's

36
00:01:37,130 --> 00:01:44,479
arms didn't work cuz like yeah okay cool

37
00:01:41,960 --> 00:01:46,970
so anyway I'm gonna give you just the

38
00:01:44,479 --> 00:01:49,700
tiniest bit of a sense of what

39
00:01:46,970 --> 00:01:51,350
kubernetes is and does and from a slide

40
00:01:49,700 --> 00:01:53,030
perspective I'm solely gonna do that

41
00:01:51,350 --> 00:01:56,390
from the perspective of talking about

42
00:01:53,030 --> 00:01:58,790
what I might attack so short version

43
00:01:56,390 --> 00:02:01,010
what is kubernetes why does it exist

44
00:01:58,790 --> 00:02:02,750
imagine your Google you have two and a

45
00:02:01,010 --> 00:02:04,909
half million computers that was an

46
00:02:02,750 --> 00:02:06,860
accurate number back in 2014 or so

47
00:02:04,909 --> 00:02:09,200
you've got two and a half million

48
00:02:06,860 --> 00:02:11,900
computers you are staging something

49
00:02:09,199 --> 00:02:13,399
around the around 3 billion workloads

50
00:02:11,900 --> 00:02:14,720
per week to those computers they

51
00:02:13,400 --> 00:02:17,420
specifically specifically said

52
00:02:14,720 --> 00:02:19,040
containers and you need some kind of

53
00:02:17,420 --> 00:02:20,510
system to manage it all you need

54
00:02:19,040 --> 00:02:22,129
assistants gonna do a few things one

55
00:02:20,510 --> 00:02:23,328
it's gonna figure out for any given a

56
00:02:22,129 --> 00:02:25,939
workload whether that workloads gonna

57
00:02:23,329 --> 00:02:27,120
last for three seconds or three days or

58
00:02:25,939 --> 00:02:29,069
three months

59
00:02:27,120 --> 00:02:30,360
which machine should it be on how do you

60
00:02:29,069 --> 00:02:31,768
do that with redundancy because when you

61
00:02:30,360 --> 00:02:33,989
have that many computers you have hard

62
00:02:31,769 --> 00:02:35,250
drive failures I think it comes out for

63
00:02:33,989 --> 00:02:38,550
Google to something like every 90

64
00:02:35,250 --> 00:02:39,989
minutes by my calculation so you're

65
00:02:38,550 --> 00:02:41,010
starting workloads and you don't know

66
00:02:39,989 --> 00:02:41,849
whether they're actually gonna finish

67
00:02:41,010 --> 00:02:43,018
because you don't know whether the

68
00:02:41,849 --> 00:02:44,040
computers they're on are gonna fail

69
00:02:43,019 --> 00:02:46,980
because you have two and a half million

70
00:02:44,040 --> 00:02:48,750
machines so that's part of what you're

71
00:02:46,980 --> 00:02:50,429
doing the other part of what you're

72
00:02:48,750 --> 00:02:52,080
doing is basically saying I'm trying to

73
00:02:50,430 --> 00:02:53,489
support this micro service thing and

74
00:02:52,080 --> 00:02:56,670
you're gonna see that a whole bunch in

75
00:02:53,489 --> 00:02:58,680
the demo basically I'm trying to say hey

76
00:02:56,670 --> 00:03:00,390
it's a heck of a lot faster if I want to

77
00:02:58,680 --> 00:03:02,340
develop a piece of software instead of

78
00:03:00,390 --> 00:03:04,589
having a hundred developers all working

79
00:03:02,340 --> 00:03:05,700
on one piece of software and trying to

80
00:03:04,590 --> 00:03:08,280
actually in trying to actually

81
00:03:05,700 --> 00:03:10,410
coordinate so that they can release once

82
00:03:08,280 --> 00:03:13,290
a year we're gonna instead break that up

83
00:03:10,410 --> 00:03:14,730
into ten and ten microservices so one

84
00:03:13,290 --> 00:03:16,980
piece of software one application

85
00:03:14,730 --> 00:03:19,679
becomes ten microservices each of those

86
00:03:16,980 --> 00:03:21,149
ten gets a team of ten that team of ten

87
00:03:19,680 --> 00:03:24,060
can release a heck of a lot more often

88
00:03:21,150 --> 00:03:25,650
and so what kubernetes is comes entirely

89
00:03:24,060 --> 00:03:27,299
out of basically those two things

90
00:03:25,650 --> 00:03:29,280
wanting that kind of software-defined

91
00:03:27,299 --> 00:03:32,250
data center where infrastructure is code

92
00:03:29,280 --> 00:03:34,260
and wanting to be able to get micro

93
00:03:32,250 --> 00:03:36,810
services and be able to say how can I

94
00:03:34,260 --> 00:03:38,340
make a whole lot of different things run

95
00:03:36,810 --> 00:03:39,810
and be able to find each other and be

96
00:03:38,340 --> 00:03:41,519
able to work together because if you're

97
00:03:39,810 --> 00:03:44,459
going to have your application broken to

98
00:03:41,519 --> 00:03:45,750
ten pieces well you're gonna have ten

99
00:03:44,459 --> 00:03:47,549
pieces that all need to find each other

100
00:03:45,750 --> 00:03:49,319
they all need to be able to have a whole

101
00:03:47,549 --> 00:03:51,329
bunch of intelligence and basically

102
00:03:49,319 --> 00:03:53,099
kubernetes gonna provide that so that

103
00:03:51,329 --> 00:03:54,480
was my what kubernetes what kubernetes

104
00:03:53,099 --> 00:03:58,040
is for anybody who didn't know already

105
00:03:54,480 --> 00:04:01,138
hopefully the rest of you do know and

106
00:03:58,040 --> 00:04:02,429
here we are so gonna talk about what

107
00:04:01,139 --> 00:04:03,750
you're attacking with kubernetes from an

108
00:04:02,430 --> 00:04:05,790
attackers point of view we've got kind

109
00:04:03,750 --> 00:04:07,709
of two classes of machine you've got

110
00:04:05,790 --> 00:04:10,078
master nodes and you've got worker nodes

111
00:04:07,709 --> 00:04:11,849
the master node has some pieces these

112
00:04:10,079 --> 00:04:14,280
are pieces we're gonna attack you have

113
00:04:11,849 --> 00:04:16,409
an API server all of kerbin a DS is

114
00:04:14,280 --> 00:04:17,639
basically an API driven data center so

115
00:04:16,410 --> 00:04:19,560
you've got this API server that

116
00:04:17,639 --> 00:04:21,359
basically gets all the requests serves

117
00:04:19,560 --> 00:04:24,000
as first point of contact you have a net

118
00:04:21,358 --> 00:04:26,190
CD server whatever the API server is

119
00:04:24,000 --> 00:04:27,630
asked to do if it can be done it stores

120
00:04:26,190 --> 00:04:30,210
that as the new state of the world in

121
00:04:27,630 --> 00:04:31,710
the @ CD server and the @ CD service s

122
00:04:30,210 --> 00:04:33,479
CD server says ok that's the state of

123
00:04:31,710 --> 00:04:34,979
the world I'm tracking that and then a

124
00:04:33,479 --> 00:04:37,380
whole bunch of other components are all

125
00:04:34,979 --> 00:04:38,289
basically subscribed to at CD and saying

126
00:04:37,380 --> 00:04:39,909
hey tell me when

127
00:04:38,290 --> 00:04:41,740
there's a new PTIN that new work needs

128
00:04:39,910 --> 00:04:43,960
to be staged so I can decide where to

129
00:04:41,740 --> 00:04:46,180
stage it hey let me know if anything

130
00:04:43,960 --> 00:04:48,219
else and they're basically you have all

131
00:04:46,180 --> 00:04:50,830
of kubernetes basically looking at at CD

132
00:04:48,220 --> 00:04:53,100
and saying okay is the state of the

133
00:04:50,830 --> 00:04:55,630
world right now what it's supposed to be

134
00:04:53,100 --> 00:04:59,020
what's stored in that CD if it is cool

135
00:04:55,630 --> 00:05:00,310
if it isn't I'll fix that so the nice

136
00:04:59,020 --> 00:05:02,770
thing is that means if you can get that

137
00:05:00,310 --> 00:05:04,930
CD you the game's over

138
00:05:02,770 --> 00:05:06,280
you've got controllers which are running

139
00:05:04,930 --> 00:05:07,210
these control loops always checking that

140
00:05:06,280 --> 00:05:08,619
state of the world you've got a

141
00:05:07,210 --> 00:05:10,810
scheduler doing that bidden packing

142
00:05:08,620 --> 00:05:13,600
deciding where to put workloads you've

143
00:05:10,810 --> 00:05:15,280
got a coop DNS so that every one of the

144
00:05:13,600 --> 00:05:17,410
every one of the internal or external

145
00:05:15,280 --> 00:05:19,299
network services can all be found they

146
00:05:17,410 --> 00:05:22,360
can all be found by name and you'll see

147
00:05:19,300 --> 00:05:24,010
that a little bit in our demo so let's

148
00:05:22,360 --> 00:05:25,870
talk about the let's talk about the

149
00:05:24,010 --> 00:05:27,700
worker node stuff all the machines

150
00:05:25,870 --> 00:05:29,080
running kubernetes some of I know some

151
00:05:27,700 --> 00:05:31,390
of you are like what's the difference

152
00:05:29,080 --> 00:05:33,340
between kubernetes and docker all the

153
00:05:31,390 --> 00:05:35,349
machines running kubernetes are running

154
00:05:33,340 --> 00:05:36,820
a container runtime like docker they're

155
00:05:35,350 --> 00:05:38,350
also running a program called a couplet

156
00:05:36,820 --> 00:05:40,030
and that Kubel it's kind of like a

157
00:05:38,350 --> 00:05:42,460
little mini API server for that node

158
00:05:40,030 --> 00:05:44,140
that just basically ties it into the

159
00:05:42,460 --> 00:05:45,969
rest of kubernetes and accepts requests

160
00:05:44,140 --> 00:05:48,039
from the API server accepts request from

161
00:05:45,970 --> 00:05:49,560
the user especially if the users an

162
00:05:48,040 --> 00:05:51,970
attacker and it's badly configured

163
00:05:49,560 --> 00:05:53,680
you've got the host operating system we

164
00:05:51,970 --> 00:05:55,630
can attack though we can attack that the

165
00:05:53,680 --> 00:05:56,920
normal parts we could there we can

166
00:05:55,630 --> 00:05:58,420
affect the workloads the containers

167
00:05:56,920 --> 00:06:01,210
there on the system and we can attack

168
00:05:58,420 --> 00:06:03,640
all of the we can talk all the proxying

169
00:06:01,210 --> 00:06:06,370
that gets traffic from one thing to

170
00:06:03,640 --> 00:06:08,800
another so anyway that was a lot of talk

171
00:06:06,370 --> 00:06:11,470
and now I want to get to the fun part

172
00:06:08,800 --> 00:06:13,030
so who's seen Scott Pilgrim vs. the

173
00:06:11,470 --> 00:06:16,450
world and I need all arms working now

174
00:06:13,030 --> 00:06:19,419
who's seen it well who hasn't seen it

175
00:06:16,450 --> 00:06:21,789
all arms working cool okay we're about

176
00:06:19,420 --> 00:06:24,370
50/50 so half the people in this room

177
00:06:21,790 --> 00:06:28,270
may may may or may not have good taste

178
00:06:24,370 --> 00:06:32,440
in movies depending on what you think so

179
00:06:28,270 --> 00:06:34,210
what I'm gonna do real quick is provided

180
00:06:32,440 --> 00:06:38,170
everything works right I'm going to give

181
00:06:34,210 --> 00:06:41,409
you a quick little YouTube video the

182
00:06:38,170 --> 00:06:42,490
short version this is just a tiny bit

183
00:06:41,410 --> 00:06:46,360
for anybody who's worried about

184
00:06:42,490 --> 00:06:49,630
copyright so the plot of Scott Pilgrim

185
00:06:46,360 --> 00:06:52,030
vs. the world and this is tied deeply

186
00:06:49,630 --> 00:06:54,370
into Kubrick no it isn't the plot of

187
00:06:52,030 --> 00:06:56,200
Pilgrim vs. the world is this Scott

188
00:06:54,370 --> 00:06:58,060
Pilgrim is this guy who seems to

189
00:06:56,200 --> 00:06:59,409
potentially be a comic book character or

190
00:06:58,060 --> 00:07:01,540
video game character it's not quite

191
00:06:59,410 --> 00:07:03,820
clear but I mean it seems like tapping

192
00:07:01,540 --> 00:07:05,560
the real world but really Scott Pilgrim

193
00:07:03,820 --> 00:07:07,719
is basically like a musical is like a

194
00:07:05,560 --> 00:07:10,840
play that occasionally breaks into song

195
00:07:07,720 --> 00:07:13,810
for no reason in Scott Pilgrim it's kind

196
00:07:10,840 --> 00:07:16,479
of a movie that breaks into a video game

197
00:07:13,810 --> 00:07:17,770
world staged fight well like I said it

198
00:07:16,480 --> 00:07:20,050
might be comic book you'd have to watch

199
00:07:17,770 --> 00:07:23,590
watch the parts it's really fun it's on

200
00:07:20,050 --> 00:07:26,280
Netflix the important plot point is that

201
00:07:23,590 --> 00:07:28,719
we have Scott Pilgrim Michael Cera and

202
00:07:26,280 --> 00:07:30,789
Scott Pilgrim wants to date Ramona

203
00:07:28,720 --> 00:07:33,490
Flowers in order to date Ramona flowers

204
00:07:30,790 --> 00:07:36,970
he turns out how to defeat each of her

205
00:07:33,490 --> 00:07:38,800
seven evil exes and so what we're going

206
00:07:36,970 --> 00:07:41,260
to do is bust our way through kubernetes

207
00:07:38,800 --> 00:07:43,030
cluster attacking and each part of this

208
00:07:41,260 --> 00:07:45,550
will each part of the demo will be

209
00:07:43,030 --> 00:07:47,440
defeating another evil ex from the movie

210
00:07:45,550 --> 00:07:48,700
so I'm not going to show you a spot of

211
00:07:47,440 --> 00:07:50,740
video the whole time but I just want to

212
00:07:48,700 --> 00:07:53,170
kind of give you a quick flavor for what

213
00:07:50,740 --> 00:07:55,450
this world or what this movie looks like

214
00:07:53,170 --> 00:07:58,380
and they've hooked me up with a

215
00:07:55,450 --> 00:08:00,729
hard-line so that we have good internet

216
00:07:58,380 --> 00:08:03,280
so

217
00:08:00,730 --> 00:08:09,070
this is our first evil ex he's just

218
00:08:03,280 --> 00:08:12,909
confronted and we find well gosh like I

219
00:08:09,070 --> 00:08:14,740
said we're either in a video game or a

220
00:08:12,910 --> 00:08:17,200
comic book because video games don't say

221
00:08:14,740 --> 00:08:19,810
poom comic books - but comic books don't

222
00:08:17,200 --> 00:08:24,880
have 64 hit counts so anyway the whole

223
00:08:19,810 --> 00:08:29,830
movie kind of works like this and he'll

224
00:08:24,880 --> 00:08:51,400
explain just for a second you're quite

225
00:08:29,830 --> 00:08:54,040
the opponent and this is and I will I

226
00:08:51,400 --> 00:08:56,380
will I will take away the exciting part

227
00:08:54,040 --> 00:09:01,180
and move us back to the boring parts

228
00:08:56,380 --> 00:09:04,020
that's me and let me just fight power

229
00:09:01,180 --> 00:09:06,250
point for a second

230
00:09:04,020 --> 00:09:09,880
or maybe I'm fighting the Mac I should

231
00:09:06,250 --> 00:09:12,420
remember who my who's putting me on a

232
00:09:09,880 --> 00:09:12,420
stage today

233
00:09:14,830 --> 00:09:20,840
so so anyway what Matthew Patel goes it

234
00:09:19,070 --> 00:09:22,730
explains is he's the first of the evil

235
00:09:20,840 --> 00:09:24,200
ex-boyfriends and spell pogrom has to

236
00:09:22,730 --> 00:09:26,690
fight him and kill him if he wants to

237
00:09:24,200 --> 00:09:29,870
defeat if he wants to date if it wants

238
00:09:26,690 --> 00:09:32,300
to date ramona flowers so what i've done

239
00:09:29,870 --> 00:09:35,330
is i've created i have this open source

240
00:09:32,300 --> 00:09:37,459
project there's a sticker that I have on

241
00:09:35,330 --> 00:09:38,600
my laptop and a that I'll hand any of

242
00:09:37,460 --> 00:09:39,710
you that you they want but I have this

243
00:09:38,600 --> 00:09:40,880
open source project and it's an

244
00:09:39,710 --> 00:09:43,400
intentionally vulnerable kubernetes

245
00:09:40,880 --> 00:09:44,360
cluster and you go and tell this cluster

246
00:09:43,400 --> 00:09:46,520
hey put yourself in one of these

247
00:09:44,360 --> 00:09:48,170
scenarios and then you work your way

248
00:09:46,520 --> 00:09:50,480
through attacking the cluster and

249
00:09:48,170 --> 00:09:52,010
capturing flags and as you get flags

250
00:09:50,480 --> 00:09:54,170
you're kind of having fun with some

251
00:09:52,010 --> 00:09:55,550
movie the first couple scenarios that

252
00:09:54,170 --> 00:09:58,130
are available for download right now

253
00:09:55,550 --> 00:10:00,740
that's the matrix the new one which I've

254
00:09:58,130 --> 00:10:02,570
done for you guys is Scott Pilgrim so

255
00:10:00,740 --> 00:10:04,190
anybody who's downloads this this

256
00:10:02,570 --> 00:10:05,750
open-source project it's probably gonna

257
00:10:04,190 --> 00:10:07,730
take a few weeks before this moves from

258
00:10:05,750 --> 00:10:09,860
being a cloud-based thing into the thing

259
00:10:07,730 --> 00:10:11,990
you can download but will get to play

260
00:10:09,860 --> 00:10:13,370
against this one so here's our

261
00:10:11,990 --> 00:10:16,010
kubernetes cluster our kerbin in this

262
00:10:13,370 --> 00:10:18,350
cluster is like a number i've found in

263
00:10:16,010 --> 00:10:19,880
penetration tests hosting one critical

264
00:10:18,350 --> 00:10:22,010
app that's made up of a bunch of micro

265
00:10:19,880 --> 00:10:25,400
services this app doesn't look all that

266
00:10:22,010 --> 00:10:27,380
critical it's kind of $19.99 HTML based

267
00:10:25,400 --> 00:10:30,079
forms or what-have-you but it says hey

268
00:10:27,380 --> 00:10:32,630
welcome to the leave League of Evil axis

269
00:10:30,080 --> 00:10:35,660
here are each of those evil exes that

270
00:10:32,630 --> 00:10:37,700
have to be defeated and it says which

271
00:10:35,660 --> 00:10:39,760
bio would you like to see and

272
00:10:37,700 --> 00:10:44,660
sorry i've dropped my fullscreen thing

273
00:10:39,760 --> 00:10:47,420
so i'm just gonna move this guy and

274
00:10:44,660 --> 00:10:49,780
maybe shrink it a little like it was

275
00:10:47,420 --> 00:10:49,780
before

276
00:10:49,960 --> 00:10:56,840
or okay we're gonna leave it floating

277
00:10:53,030 --> 00:10:58,370
there so what i've got is this nice

278
00:10:56,840 --> 00:11:00,290
little web app and it says hey which

279
00:10:58,370 --> 00:11:02,330
evil x do you want to achieve Alexis by

280
00:11:00,290 --> 00:11:03,949
or do you want to see I should note some

281
00:11:02,330 --> 00:11:05,960
of you were in the back of the room and

282
00:11:03,950 --> 00:11:07,100
you've got your own monitors and the

283
00:11:05,960 --> 00:11:09,200
people in the front of the room you've

284
00:11:07,100 --> 00:11:10,550
got you've got a pretty big screen but

285
00:11:09,200 --> 00:11:13,030
some of you in the back of the room dead

286
00:11:10,550 --> 00:11:15,800
center who can't see those monitors I

287
00:11:13,030 --> 00:11:18,470
apologize a bunch of my demos are done

288
00:11:15,800 --> 00:11:21,199
at this text size and I've been

289
00:11:18,470 --> 00:11:22,880
furiously today re crafting them to make

290
00:11:21,200 --> 00:11:24,350
them bigger so if you're getting a

291
00:11:22,880 --> 00:11:25,670
little frustrated realize somewhere

292
00:11:24,350 --> 00:11:26,930
somewhere during

293
00:11:25,670 --> 00:11:29,810
demo we're gonna switch to a bigger

294
00:11:26,930 --> 00:11:32,959
bigger font so here we go we've got a

295
00:11:29,810 --> 00:11:35,119
web application and you can go and

296
00:11:32,960 --> 00:11:37,790
basically pull up an evil exes bio if

297
00:11:35,120 --> 00:11:39,530
you go to Lucas Lee the second one you

298
00:11:37,790 --> 00:11:41,719
find this kind of debug message it says

299
00:11:39,530 --> 00:11:43,880
hey this command failed so it turns out

300
00:11:41,720 --> 00:11:46,550
your inputs being passed into into a

301
00:11:43,880 --> 00:11:48,020
shell command which we all know from

302
00:11:46,550 --> 00:11:49,939
shell shock and lots of other things

303
00:11:48,020 --> 00:11:52,670
that's a bad idea

304
00:11:49,940 --> 00:11:54,320
so let's go and tweak this let's go and

305
00:11:52,670 --> 00:11:55,370
see if it let's see if we can do

306
00:11:54,320 --> 00:11:57,740
something with it so I'm gonna choose

307
00:11:55,370 --> 00:11:59,600
that Lucas Lee I'm gonna intercept it

308
00:11:57,740 --> 00:12:02,240
with Bert proxy I've just taken a little

309
00:11:59,600 --> 00:12:04,220
proxy you can get a plugin like this but

310
00:12:02,240 --> 00:12:06,230
I'm doing all of this from Kali Linux so

311
00:12:04,220 --> 00:12:08,060
that you can basically do everything you

312
00:12:06,230 --> 00:12:09,860
see here you're kind of getting a quick

313
00:12:08,060 --> 00:12:11,660
free training so everything you see here

314
00:12:09,860 --> 00:12:13,850
is something you could do by downloading

315
00:12:11,660 --> 00:12:15,860
bus toku by downloading Kali Linux both

316
00:12:13,850 --> 00:12:19,040
free so I'm gonna go and basically

317
00:12:15,860 --> 00:12:20,510
change this Lucas Lee thing and I'm

318
00:12:19,040 --> 00:12:23,990
putting some ecole at the end and put ID

319
00:12:20,510 --> 00:12:26,420
and when I do that I find on the web

320
00:12:23,990 --> 00:12:29,810
page that I get it says oh here's the

321
00:12:26,420 --> 00:12:31,640
user ID the web servers running ass so

322
00:12:29,810 --> 00:12:34,369
that's that's good for me and what that

323
00:12:31,640 --> 00:12:36,319
suggests is I could I'm running commands

324
00:12:34,370 --> 00:12:38,930
in here so I'm gonna send this to a tool

325
00:12:36,320 --> 00:12:41,390
called repeater and I'm going to change

326
00:12:38,930 --> 00:12:42,770
that Lucas Lee evil x-parameter so

327
00:12:41,390 --> 00:12:44,689
instead of running ID it's gonna run a

328
00:12:42,770 --> 00:12:46,370
curl command it's gonna pull down a

329
00:12:44,690 --> 00:12:49,010
matter Pradesh also-- or meterpreter

330
00:12:46,370 --> 00:12:52,640
binary basically a remote access trojan

331
00:12:49,010 --> 00:12:54,530
and it's gonna do it from my Kali system

332
00:12:52,640 --> 00:12:57,439
which for the magic of port forwarding

333
00:12:54,530 --> 00:13:00,230
is located they need AWS as cloud not an

334
00:12:57,440 --> 00:13:03,580
azure just because I didn't want anyone

335
00:13:00,230 --> 00:13:03,580
dragging me off the stage at handcuffs

336
00:13:05,290 --> 00:13:14,120
so I got Metasploit setup and I'm gonna

337
00:13:08,930 --> 00:13:16,040
catch that shell so I just have a quick

338
00:13:14,120 --> 00:13:17,840
little RC file this kind of shows you

339
00:13:16,040 --> 00:13:20,180
how you setup Metasploit to catch the

340
00:13:17,840 --> 00:13:23,620
shell that were there were now I've hit

341
00:13:20,180 --> 00:13:27,439
go and now I've got a connection to the

342
00:13:23,620 --> 00:13:29,300
I've got a connection to my I've got a

343
00:13:27,440 --> 00:13:34,960
connection to the from that from that

344
00:13:29,300 --> 00:13:37,160
pod and so if I run bash right now what

345
00:13:34,960 --> 00:13:38,570
I'm gonna stop for a second and just

346
00:13:37,160 --> 00:13:42,199
show you

347
00:13:38,570 --> 00:13:44,360
that I have this playback set on speed

348
00:13:42,200 --> 00:13:46,850
because I'm far because I types I'm

349
00:13:44,360 --> 00:13:49,190
typing too slowly so I've got a shell

350
00:13:46,850 --> 00:13:52,240
I'm in a pod and now what I'm gonna do

351
00:13:49,190 --> 00:13:55,250
is stop for a second

352
00:13:52,240 --> 00:13:56,630
so have that bash shell it's running in

353
00:13:55,250 --> 00:13:58,430
a container in kubernetes

354
00:13:56,630 --> 00:14:00,140
and now what I'm going to do is stop for

355
00:13:58,430 --> 00:14:02,630
a second and grab a copy of coop control

356
00:14:00,140 --> 00:14:05,030
not coop CTL not coop cuddle cube

357
00:14:02,630 --> 00:14:07,130
control this is really important to the

358
00:14:05,030 --> 00:14:10,569
kubernetes project to the C and C F and

359
00:14:07,130 --> 00:14:12,650
to extremely uptight people everywhere

360
00:14:10,570 --> 00:14:15,890
so I'm going to grab a copy of coop

361
00:14:12,650 --> 00:14:18,110
control into the pod I'm going to make

362
00:14:15,890 --> 00:14:21,770
it executable and this is the cool thing

363
00:14:18,110 --> 00:14:23,540
about kubernetes is basically is

364
00:14:21,770 --> 00:14:25,520
basically that when you compromise the

365
00:14:23,540 --> 00:14:27,079
system in kubernetes you're in an api

366
00:14:25,520 --> 00:14:28,760
defined data center which means you have

367
00:14:27,080 --> 00:14:31,760
a chance of taking the entire data

368
00:14:28,760 --> 00:14:33,470
center over just using api is doing

369
00:14:31,760 --> 00:14:36,800
mostly nothing but curl commands coop

370
00:14:33,470 --> 00:14:40,190
control can can be useful too so i have

371
00:14:36,800 --> 00:14:41,270
to go and set this thing up what I end

372
00:14:40,190 --> 00:14:42,710
up doing here is saying there's a

373
00:14:41,270 --> 00:14:44,689
service account token that's mounted

374
00:14:42,710 --> 00:14:46,400
into every single container into every

375
00:14:44,690 --> 00:14:48,650
single pot in kubernetes unless you turn

376
00:14:46,400 --> 00:14:51,470
it off and so I'm gonna see what Matthew

377
00:14:48,650 --> 00:14:53,360
Patel's service account token can do so

378
00:14:51,470 --> 00:14:55,370
to do that I have to go and basically

379
00:14:53,360 --> 00:14:57,410
pass all these arguments in that say

380
00:14:55,370 --> 00:14:58,760
it's a coop controls saying here's where

381
00:14:57,410 --> 00:15:00,319
you find the service account I got to do

382
00:14:58,760 --> 00:15:04,069
all the things that ordinarily it would

383
00:15:00,320 --> 00:15:06,290
be code that would be doing and I'll go

384
00:15:04,070 --> 00:15:07,970
and say here's you know coop control

385
00:15:06,290 --> 00:15:13,480
every time I type coop control I want it

386
00:15:07,970 --> 00:15:16,010
to be this whole set of arguments and

387
00:15:13,480 --> 00:15:18,830
once I do that I just want to quick get

388
00:15:16,010 --> 00:15:20,180
pods to find out whether it's working

389
00:15:18,830 --> 00:15:22,730
that's kind of the first thing I do

390
00:15:20,180 --> 00:15:24,349
every single time and what I see is each

391
00:15:22,730 --> 00:15:26,360
of the evil axis has their own pod I

392
00:15:24,350 --> 00:15:29,120
have a Matthew Patel intro pod I've got

393
00:15:26,360 --> 00:15:31,250
the Lucas leaf fan requests pod each of

394
00:15:29,120 --> 00:15:33,530
the axes that that are Fault in the

395
00:15:31,250 --> 00:15:35,150
movie have their own pod so I'm going to

396
00:15:33,530 --> 00:15:38,510
try some stuff here I'm gonna go and

397
00:15:35,150 --> 00:15:39,800
upload some yeah mole in kubernetes you

398
00:15:38,510 --> 00:15:41,210
basically do everything either with coop

399
00:15:39,800 --> 00:15:44,120
control on the command line or more

400
00:15:41,210 --> 00:15:46,580
popularly with yamo yet another markup

401
00:15:44,120 --> 00:15:48,440
language or JSON so I'm gonna go and

402
00:15:46,580 --> 00:15:50,960
basically upload some custom yeah Mille

403
00:15:48,440 --> 00:15:52,490
and that custom yeah Mille is an attack

404
00:15:50,960 --> 00:15:55,490
pod I want to basically see if I can

405
00:15:52,490 --> 00:15:57,800
Mount Mayon pod on the cluster if I can

406
00:15:55,490 --> 00:15:59,000
then I've got you know I've got a lot

407
00:15:57,800 --> 00:16:01,520
I've got a much better position to

408
00:15:59,000 --> 00:16:03,740
attack from and it turns out it

409
00:16:01,520 --> 00:16:07,880
basically says no your service account

410
00:16:03,740 --> 00:16:12,980
isn't allowed to do this okay

411
00:16:07,880 --> 00:16:14,209
well can I list secrets No darn it

412
00:16:12,980 --> 00:16:16,070
okay that would be where I might find

413
00:16:14,209 --> 00:16:19,969
passwords I might find SS and you know

414
00:16:16,070 --> 00:16:23,570
TLS certs I can still get pods let's see

415
00:16:19,970 --> 00:16:25,730
if I can execute into another one up no

416
00:16:23,570 --> 00:16:27,470
my user isn't allowed to execute each of

417
00:16:25,730 --> 00:16:29,420
those three things if you're able to do

418
00:16:27,470 --> 00:16:31,730
them turn out to be incredibly useful

419
00:16:29,420 --> 00:16:33,709
and get you and usually move things

420
00:16:31,730 --> 00:16:36,740
forward so let's see what else I can do

421
00:16:33,709 --> 00:16:40,670
I find a flag file and the flag file

422
00:16:36,740 --> 00:16:43,040
says hey you've beat Matthew Patel so

423
00:16:40,670 --> 00:16:46,399
look at your graphic and here's our cool

424
00:16:43,040 --> 00:16:49,040
little graphic and it says now go after

425
00:16:46,399 --> 00:16:50,630
Lucas Lee and Lucas Lee was the second

426
00:16:49,040 --> 00:16:55,279
evil acts he's played by the same guy

427
00:16:50,630 --> 00:16:58,000
plays Captain America Chris Evans his

428
00:16:55,279 --> 00:17:00,380
superpower turns out to be that he has

429
00:16:58,000 --> 00:17:02,360
eight stunt doubles or nine stunt

430
00:17:00,380 --> 00:17:10,160
doubles look just like him and I'll just

431
00:17:02,360 --> 00:17:11,839
spring out of nowhere but anyway it

432
00:17:10,160 --> 00:17:14,300
turns out when I look at Lucas Lee Lucas

433
00:17:11,839 --> 00:17:15,800
Lee has a Lucas Lisa microservice here

434
00:17:14,300 --> 00:17:18,198
and one of the big things in kerbin at

435
00:17:15,800 --> 00:17:19,520
ease is a lot of your attack a lot of

436
00:17:18,199 --> 00:17:21,170
what you do is in attackers basically

437
00:17:19,520 --> 00:17:22,429
say from outside the cluster I could

438
00:17:21,170 --> 00:17:24,709
only see one thing I can see this web

439
00:17:22,429 --> 00:17:26,720
server from inside the cluster I often

440
00:17:24,709 --> 00:17:28,459
get to be able to see everything I often

441
00:17:26,720 --> 00:17:30,470
get network access to just tons of

442
00:17:28,459 --> 00:17:33,050
things that I would never have access to

443
00:17:30,470 --> 00:17:35,330
in the normally that's a basically

444
00:17:33,050 --> 00:17:37,070
default setting so what I find here is

445
00:17:35,330 --> 00:17:39,800
this cool little API and it says hey

446
00:17:37,070 --> 00:17:41,870
this API takes two things it takes bio

447
00:17:39,800 --> 00:17:44,540
which is that thing that shows me Lucas

448
00:17:41,870 --> 00:17:47,870
Lee's bio but it also takes as in the

449
00:17:44,540 --> 00:17:50,059
movie grindy thingy which is how Scott

450
00:17:47,870 --> 00:17:54,370
defeats and he asks him he goads him

451
00:17:50,059 --> 00:17:56,660
into doing a a grind on a skateboard and

452
00:17:54,370 --> 00:17:58,580
we passing grindy thing here we get a

453
00:17:56,660 --> 00:17:59,870
quote from the movie says hey you really

454
00:17:58,580 --> 00:18:03,340
didn't Gold me into doing trick like

455
00:17:59,870 --> 00:18:05,260
this like that and and

456
00:18:03,340 --> 00:18:06,939
our hero says there are girls watching

457
00:18:05,260 --> 00:18:09,580
at which point he grabs his skateboard

458
00:18:06,940 --> 00:18:12,000
and basically kills himself with us

459
00:18:09,580 --> 00:18:16,389
kills himself trying to do a grind down

460
00:18:12,000 --> 00:18:19,090
300 300 feet worth of steps basically so

461
00:18:16,390 --> 00:18:20,710
the cool thing is this micro service

462
00:18:19,090 --> 00:18:22,090
says it'll run things for us if we just

463
00:18:20,710 --> 00:18:26,559
pass them passed commands in

464
00:18:22,090 --> 00:18:28,120
base64-encoded so let's do that now you

465
00:18:26,559 --> 00:18:29,649
won't as an attacker usually find the

466
00:18:28,120 --> 00:18:31,899
micro-services are just saying hey I'll

467
00:18:29,650 --> 00:18:34,030
run whatever command you want but we're

468
00:18:31,900 --> 00:18:35,679
kind of on the easy level and it's and

469
00:18:34,030 --> 00:18:40,330
I'm trying to work my way through seven

470
00:18:35,679 --> 00:18:41,679
evil exes the this would often be where

471
00:18:40,330 --> 00:18:43,120
you'd have some other kind of flaw that

472
00:18:41,679 --> 00:18:44,590
gets you more at that gets you more

473
00:18:43,120 --> 00:18:47,439
access so in this case have made it

474
00:18:44,590 --> 00:18:49,209
simple remote command execution and what

475
00:18:47,440 --> 00:18:51,789
I found is I can run an ID command that

476
00:18:49,210 --> 00:18:53,350
says I'm rude and now I'm gonna make my

477
00:18:51,789 --> 00:18:57,879
next commands that same kind of pull

478
00:18:53,350 --> 00:19:00,129
done my meterpreter binary and and run

479
00:18:57,880 --> 00:19:05,260
it and if I skip forward just a little

480
00:19:00,130 --> 00:19:09,610
bit what I find is that if I pull that

481
00:19:05,260 --> 00:19:11,379
binary down if I base64 encode that the

482
00:19:09,610 --> 00:19:14,219
binary gets pulled gets pulled from the

483
00:19:11,380 --> 00:19:14,220
web server I'd staged

484
00:19:18,190 --> 00:19:24,730
and I'll have a new session and I'm just

485
00:19:22,420 --> 00:19:30,040
fast-forwarding because it's a lot of

486
00:19:24,730 --> 00:19:34,270
typing so I'll get that new session and

487
00:19:30,040 --> 00:19:36,760
now I am come on

488
00:19:34,270 --> 00:19:39,730
and now I'm in a different pod called

489
00:19:36,760 --> 00:19:42,879
Lucas Lee fan requests and for all of

490
00:19:39,730 --> 00:19:45,250
you who've been bummed about the who've

491
00:19:42,880 --> 00:19:49,050
been bummed about our font size up till

492
00:19:45,250 --> 00:19:49,050
now it's about to get much better

493
00:19:50,760 --> 00:19:55,180
because now we're in something that I

494
00:19:52,960 --> 00:19:57,760
had so now from here we're in Lucas

495
00:19:55,180 --> 00:19:59,710
Lee's pod our next evil ex is Todd

496
00:19:57,760 --> 00:20:02,260
Ingram this guy played Superman and now

497
00:19:59,710 --> 00:20:04,180
plays the Adam on for some reason all

498
00:20:02,260 --> 00:20:06,040
these comic book people all still stick

499
00:20:04,180 --> 00:20:08,980
in the same movies they get typecast a

500
00:20:06,040 --> 00:20:10,570
little bit but this is a fun one so if

501
00:20:08,980 --> 00:20:11,980
you're if you've seen other if you've

502
00:20:10,570 --> 00:20:14,379
seen other kubernetes attack talks

503
00:20:11,980 --> 00:20:16,150
before this is something that I've

504
00:20:14,380 --> 00:20:17,500
actually never seen in any of them it's

505
00:20:16,150 --> 00:20:19,690
kind of new it's kind of cool it was a

506
00:20:17,500 --> 00:20:22,330
little hard to pull together and it was

507
00:20:19,690 --> 00:20:25,120
even harder to go and do twice so this

508
00:20:22,330 --> 00:20:28,060
is uh this is a fun one and what it says

509
00:20:25,120 --> 00:20:29,500
is our flag here says okay now you're

510
00:20:28,060 --> 00:20:31,240
gonna face Scott Pilgrim we're always

511
00:20:29,500 --> 00:20:33,190
trying to get Scott Pilgrim to eat

512
00:20:31,240 --> 00:20:35,350
something it isn't vegan and the reason

513
00:20:33,190 --> 00:20:38,650
is that in the movie Scott Pilgrim has

514
00:20:35,350 --> 00:20:40,929
basically Jedi telekinetic powers that

515
00:20:38,650 --> 00:20:46,150
entirely come out of not eating any of

516
00:20:40,930 --> 00:20:47,770
the you know dairy meat eggs and so what

517
00:20:46,150 --> 00:20:49,420
we're gonna do is the thing is the other

518
00:20:47,770 --> 00:20:52,240
thing is that Todd is basically really

519
00:20:49,420 --> 00:20:55,270
dumb and so our story here to bring us

520
00:20:52,240 --> 00:20:57,550
back into kubernetes is that we've just

521
00:20:55,270 --> 00:21:00,370
broken it broken into micro service now

522
00:20:57,550 --> 00:21:03,220
we're going after another one and that

523
00:21:00,370 --> 00:21:05,080
one actually consults another one so

524
00:21:03,220 --> 00:21:06,400
we're gonna man-in-the-middle we're

525
00:21:05,080 --> 00:21:08,320
gonna man-in-the-middle microservice

526
00:21:06,400 --> 00:21:11,560
three trying to reach microservice four

527
00:21:08,320 --> 00:21:13,389
so Lucas Lee we're gonna ask him if he

528
00:21:11,560 --> 00:21:15,159
wants to eat something that's not vegan

529
00:21:13,390 --> 00:21:17,830
if we can get him to eat something it's

530
00:21:15,160 --> 00:21:19,930
not vegan we win he's gonna go and take

531
00:21:17,830 --> 00:21:22,570
whatever we asked is it vegan or not and

532
00:21:19,930 --> 00:21:25,060
consult a micro service and say hey is

533
00:21:22,570 --> 00:21:27,520
this vegan and if the micro service says

534
00:21:25,060 --> 00:21:31,320
yes you can eat it yes it's vegan he'll

535
00:21:27,520 --> 00:21:33,389
eat it and we will win so the cool

536
00:21:31,320 --> 00:21:37,230
about kubernetes or maybe not cool thing

537
00:21:33,390 --> 00:21:39,840
is that everything's based on labels so

538
00:21:37,230 --> 00:21:41,310
if I want to get Todd if I want a man in

539
00:21:39,840 --> 00:21:43,560
the middle of traffic coming out of this

540
00:21:41,310 --> 00:21:45,540
coming out of Todd Ingram's pod that's

541
00:21:43,560 --> 00:21:48,060
going to the next evil acts Roxy Richter

542
00:21:45,540 --> 00:21:51,330
what I want to do is figure out what

543
00:21:48,060 --> 00:21:53,310
service what service Todd's talking to

544
00:21:51,330 --> 00:21:54,530
and then I want to impersonate it so

545
00:21:53,310 --> 00:21:57,389
what I'm gonna do is I'm gonna look at

546
00:21:54,530 --> 00:22:00,180
this this demo sorry

547
00:21:57,390 --> 00:22:02,130
this flag tells me use this curve use

548
00:22:00,180 --> 00:22:03,720
this thing to ask and eat gelato use

549
00:22:02,130 --> 00:22:05,250
this thing they've asked him deep tofu

550
00:22:03,720 --> 00:22:07,610
so we can try that out real quick with a

551
00:22:05,250 --> 00:22:10,680
couple of these asked by tainting gelato

552
00:22:07,610 --> 00:22:12,810
he says he won't eat it I'm gonna do

553
00:22:10,680 --> 00:22:15,630
coupe control get services I get that

554
00:22:12,810 --> 00:22:19,620
list of services these services are all

555
00:22:15,630 --> 00:22:21,480
the internal load balancers remember the

556
00:22:19,620 --> 00:22:23,790
designers of kubernetes basically said

557
00:22:21,480 --> 00:22:25,170
that any workload that you run you

558
00:22:23,790 --> 00:22:26,610
should probably be running two or three

559
00:22:25,170 --> 00:22:28,920
of them because a computer could crash

560
00:22:26,610 --> 00:22:30,149
and because the program could crash so

561
00:22:28,920 --> 00:22:32,310
what you do is instead of saying I'd

562
00:22:30,150 --> 00:22:34,110
like to I'd like to talk to that machine

563
00:22:32,310 --> 00:22:35,820
please or that virtual machine or

564
00:22:34,110 --> 00:22:38,820
whatever you say I'd like to talk to

565
00:22:35,820 --> 00:22:40,409
that service and that service then sends

566
00:22:38,820 --> 00:22:42,439
your traffic load balances your traffic

567
00:22:40,410 --> 00:22:45,510
and sends it to one of the pods that

568
00:22:42,440 --> 00:22:47,160
matches its selector cool thing is that

569
00:22:45,510 --> 00:22:49,050
selectors labels and if you know the

570
00:22:47,160 --> 00:22:51,420
labels for something else you can make

571
00:22:49,050 --> 00:22:53,790
your workload have the same labels and

572
00:22:51,420 --> 00:22:55,890
get its traffic so this is what we're

573
00:22:53,790 --> 00:22:58,470
gonna do so we're we got a list of

574
00:22:55,890 --> 00:23:00,720
services we're gonna get the yeah Mille

575
00:22:58,470 --> 00:23:04,440
that defines the is it vegan service

576
00:23:00,720 --> 00:23:05,760
he's checking and this tells us here's

577
00:23:04,440 --> 00:23:08,220
the cluster IP it's been assigned but

578
00:23:05,760 --> 00:23:10,620
here's the selector any pods that have

579
00:23:08,220 --> 00:23:13,230
any pods in the default namespace that

580
00:23:10,620 --> 00:23:15,629
have the that have the label app set to

581
00:23:13,230 --> 00:23:19,740
evil X 4 that's Roxy Richter's number

582
00:23:15,630 --> 00:23:22,290
will get this traffic so I've gone and

583
00:23:19,740 --> 00:23:23,910
built a man-in-the-middle pod and this

584
00:23:22,290 --> 00:23:26,159
man-in-the-middle pod is running my own

585
00:23:23,910 --> 00:23:28,920
container image but it also happens to

586
00:23:26,160 --> 00:23:30,150
have that same label app evil x4 so I've

587
00:23:28,920 --> 00:23:33,300
set that label so now I'm going to apply

588
00:23:30,150 --> 00:23:37,170
that pod to the cluster now that pod

589
00:23:33,300 --> 00:23:39,659
exists and now when I ask Todd to eat it

590
00:23:37,170 --> 00:23:41,700
I got lucky this time what's gonna

591
00:23:39,660 --> 00:23:43,680
happen in general is Todd's gonna

592
00:23:41,700 --> 00:23:44,970
sometimes try my evil X pod and

593
00:23:43,680 --> 00:23:47,190
sometimes try the real one

594
00:23:44,970 --> 00:23:50,970
so if I asked Todd enough questions

595
00:23:47,190 --> 00:23:53,039
within two or three tries this guy just

596
00:23:50,970 --> 00:23:55,740
got off the stage so roughly within two

597
00:23:53,039 --> 00:23:57,150
or three tries Todd's gonna come and ask

598
00:23:55,740 --> 00:24:00,570
me instead of the thing he's supposed to

599
00:23:57,150 --> 00:24:03,360
ask and so when he asks me he says yeah

600
00:24:00,570 --> 00:24:05,399
yeah gelato is vegan I'll eat that at

601
00:24:03,360 --> 00:24:09,059
which point the vegan police show up he

602
00:24:05,400 --> 00:24:11,309
says no and he coughs up his token and

603
00:24:09,059 --> 00:24:14,039
this this this is a kubernetes service

604
00:24:11,309 --> 00:24:16,980
count token it's basically a it's a JSON

605
00:24:14,039 --> 00:24:18,658
web token to JWT so you could basic ste

606
00:24:16,980 --> 00:24:20,190
40 code it and learn more about it but I

607
00:24:18,659 --> 00:24:22,650
can take that token pass it in the coop

608
00:24:20,190 --> 00:24:24,990
control and I can impersonate Todd now

609
00:24:22,650 --> 00:24:28,200
so because I'm an in the middle traffic

610
00:24:24,990 --> 00:24:30,330
going to him and that was our success

611
00:24:28,200 --> 00:24:33,210
condition he died he gave us this token

612
00:24:30,330 --> 00:24:35,039
and we are now in his pod and we can

613
00:24:33,210 --> 00:24:37,530
count out his flag since you defeated

614
00:24:35,039 --> 00:24:39,150
Todd Ingram so let's look at the let's

615
00:24:37,530 --> 00:24:42,450
look at from the movie Todd Ingram's

616
00:24:39,150 --> 00:24:52,350
death scene involves a DV gun izing ray

617
00:24:42,450 --> 00:25:00,809
and that's in my next video so here's

618
00:24:52,350 --> 00:25:06,480
our flag a little bit of overlap d

619
00:25:00,809 --> 00:25:08,370
veganizing right hit him and Todd Ingram

620
00:25:06,480 --> 00:25:11,429
Liat loses all of his special vegan

621
00:25:08,370 --> 00:25:12,510
powers in the movie he actually just in

622
00:25:11,429 --> 00:25:13,860
case any of you were thinking it's not

623
00:25:12,510 --> 00:25:16,669
fair that he could just screw up one

624
00:25:13,860 --> 00:25:19,559
sneak gelato in the movie he ate gelato

625
00:25:16,669 --> 00:25:21,780
and didn't know if it was vegan or not -

626
00:25:19,559 --> 00:25:23,010
which - which he someone says anybody

627
00:25:21,780 --> 00:25:25,559
want to say the line for me so I don't

628
00:25:23,010 --> 00:25:29,250
have to curse on stage it's milk and

629
00:25:25,559 --> 00:25:31,139
eggs [ __ ] right so then so then he he

630
00:25:29,250 --> 00:25:32,970
ate chicken parmesan and Scott Pilgrim

631
00:25:31,140 --> 00:25:37,140
tricks him into drinking half-and-half

632
00:25:32,970 --> 00:25:39,120
so anyway here we go now we got to get

633
00:25:37,140 --> 00:25:41,010
to the next evil acts Roxy Richter and

634
00:25:39,120 --> 00:25:43,379
she's the one who was operating that is

635
00:25:41,010 --> 00:25:44,789
it vegan microservice remember the cool

636
00:25:43,380 --> 00:25:46,590
thing is that microservice wasn't

637
00:25:44,789 --> 00:25:49,320
reachable before but because we've been

638
00:25:46,590 --> 00:25:50,639
hopping through we're getting access

639
00:25:49,320 --> 00:25:52,500
we're getting access to all these

640
00:25:50,640 --> 00:25:53,850
back-end programs that we would have

641
00:25:52,500 --> 00:25:55,110
been able to access before and they

642
00:25:53,850 --> 00:25:56,399
weren't getting the same level of co2

643
00:25:55,110 --> 00:25:57,830
auditor fuzzing because they weren't

644
00:25:56,399 --> 00:26:00,529
directly accessible to anybody

645
00:25:57,830 --> 00:26:04,158
but now they Kenard or they're at least

646
00:26:00,529 --> 00:26:06,230
a little more accessible so let's take a

647
00:26:04,159 --> 00:26:08,659
look at Todd's micro service program

648
00:26:06,230 --> 00:26:10,610
just to get the URL so he's been he's

649
00:26:08,659 --> 00:26:13,159
been submitting his requests - is it

650
00:26:10,610 --> 00:26:15,080
vegan and this is what a crew burn ID

651
00:26:13,159 --> 00:26:18,049
service looks like you basically say is

652
00:26:15,080 --> 00:26:19,519
it vegan and you say what labels that

653
00:26:18,049 --> 00:26:21,279
what labels any traffic going to that

654
00:26:19,519 --> 00:26:23,539
should go - and it goes to whatever pods

655
00:26:21,279 --> 00:26:26,779
get the is it vegan traffic now I've

656
00:26:23,539 --> 00:26:30,259
removed my man-in-the-middle pod and we

657
00:26:26,779 --> 00:26:32,179
try our little test again that curl but

658
00:26:30,259 --> 00:26:35,749
we're gonna send to this to this micro

659
00:26:32,179 --> 00:26:37,100
service is it vegan some food and we're

660
00:26:35,749 --> 00:26:39,019
gonna pass in the half and a half and it

661
00:26:37,100 --> 00:26:41,418
says hey no you don't want to keep that

662
00:26:39,019 --> 00:26:43,940
out of your coffee that's not vegan so

663
00:26:41,419 --> 00:26:47,570
if we base64 decode that it turns out

664
00:26:43,940 --> 00:26:51,080
it's just a JSON it's just a JSON JSON

665
00:26:47,570 --> 00:26:53,600
serialization from the node from the

666
00:26:51,080 --> 00:26:56,600
from the node serialization library

667
00:26:53,600 --> 00:27:00,049
which is permanently broken just has an

668
00:26:56,600 --> 00:27:01,399
RC e and they're not fixing it so

669
00:27:00,049 --> 00:27:04,668
there's tons of code out there this with

670
00:27:01,399 --> 00:27:07,399
this same flaw and and by the flow I

671
00:27:04,669 --> 00:27:09,859
mean that that library if you pass in

672
00:27:07,399 --> 00:27:11,689
anything you want if you pass in some

673
00:27:09,859 --> 00:27:14,199
jail if you pass in some JavaScript code

674
00:27:11,690 --> 00:27:18,049
like that's embedded as a JSON object

675
00:27:14,200 --> 00:27:19,730
then that than anything that DC realises

676
00:27:18,049 --> 00:27:22,009
that JSON object using this particular

677
00:27:19,730 --> 00:27:23,299
library that they are not fixing and

678
00:27:22,009 --> 00:27:27,980
it's been have this vulnerability for

679
00:27:23,299 --> 00:27:30,950
years will run will run your code and so

680
00:27:27,980 --> 00:27:32,659
we're gonna pass that in so all we're

681
00:27:30,950 --> 00:27:34,999
doing is basically consulting the same

682
00:27:32,659 --> 00:27:36,830
thing that Todd was and we're doing it

683
00:27:34,999 --> 00:27:40,820
from Todd's pod that gets us past the

684
00:27:36,830 --> 00:27:46,629
network controls and when we do that we

685
00:27:40,820 --> 00:27:46,629
end up let's go back in the Metasploit

686
00:27:49,650 --> 00:27:56,020
we end up getting another session so

687
00:27:53,740 --> 00:27:58,390
we've got a shell and now we're in Roxy

688
00:27:56,020 --> 00:28:01,210
Richter's pod which was writing a quick

689
00:27:58,390 --> 00:28:02,680
little node.js application we can look

690
00:28:01,210 --> 00:28:05,080
at the flag and the flag says oK you've

691
00:28:02,680 --> 00:28:07,570
defeated Roxy restrictor can you defeat

692
00:28:05,080 --> 00:28:12,600
the katta naga twins and the cat and

693
00:28:07,570 --> 00:28:16,060
Nagi twins their thing is that they are

694
00:28:12,600 --> 00:28:18,639
running a redis service and now we're

695
00:28:16,060 --> 00:28:20,770
unfortunately sorry back in the smaller

696
00:28:18,640 --> 00:28:23,830
text but they're running a Redis service

697
00:28:20,770 --> 00:28:26,290
that Redis service has no password which

698
00:28:23,830 --> 00:28:27,370
there were tons of reticent Redis

699
00:28:26,290 --> 00:28:30,310
servers out in the internet that no

700
00:28:27,370 --> 00:28:32,379
passwords the Creator actually said are

701
00:28:30,310 --> 00:28:34,030
you people dumb you should never expose

702
00:28:32,380 --> 00:28:36,790
it's the Internet here I'll show you how

703
00:28:34,030 --> 00:28:38,530
easy it would be to get our seat to get

704
00:28:36,790 --> 00:28:40,570
code execution if you were to put your

705
00:28:38,530 --> 00:28:43,690
read his server on the Internet and so

706
00:28:40,570 --> 00:28:45,100
he does a he does a post he does a post

707
00:28:43,690 --> 00:28:46,960
and he links up on I don't think it was

708
00:28:45,100 --> 00:28:48,070
read it was maybe a neat cool news and

709
00:28:46,960 --> 00:28:50,200
then got linked on reddit the whole

710
00:28:48,070 --> 00:28:51,639
world knew about it and then we got a

711
00:28:50,200 --> 00:28:54,010
whole bunch of worms including one

712
00:28:51,640 --> 00:28:55,810
called Redis wanna mine that would use

713
00:28:54,010 --> 00:28:58,810
Redis too that would use Redis to

714
00:28:55,810 --> 00:29:01,149
install Bitcoin mining or cryptocurrency

715
00:28:58,810 --> 00:29:03,610
mining us on servers so we're gonna use

716
00:29:01,150 --> 00:29:05,590
that same that same vulnerability inside

717
00:29:03,610 --> 00:29:07,330
the cluster somebody thought this thing

718
00:29:05,590 --> 00:29:08,980
was safe because it was in a cluster and

719
00:29:07,330 --> 00:29:11,770
it wasn't reachable from the internet

720
00:29:08,980 --> 00:29:14,760
and it turns out it's not so I've

721
00:29:11,770 --> 00:29:19,060
created a quick little script for this

722
00:29:14,760 --> 00:29:20,530
called exploit Redis and it's similar to

723
00:29:19,060 --> 00:29:22,419
the what's on that too what's on that

724
00:29:20,530 --> 00:29:24,670
webpage except that the one on the

725
00:29:22,420 --> 00:29:27,850
webpage has been crippled just a little

726
00:29:24,670 --> 00:29:29,470
bit and so I've fixed it up but the cool

727
00:29:27,850 --> 00:29:30,699
thing is I think I skipped past the

728
00:29:29,470 --> 00:29:32,380
point where we're reading the flag but

729
00:29:30,700 --> 00:29:35,110
the flag for the cat and Auggie Brothers

730
00:29:32,380 --> 00:29:38,590
the cavenaghi twins said hey by the way

731
00:29:35,110 --> 00:29:42,669
these guys have mounted slash home slash

732
00:29:38,590 --> 00:29:45,159
Redis into the pod because they just

733
00:29:42,670 --> 00:29:47,680
they need a volume mount and they want

734
00:29:45,160 --> 00:29:49,210
persistent data and the unread it's and

735
00:29:47,680 --> 00:29:52,390
basically the whole deal with kubernetes

736
00:29:49,210 --> 00:29:55,780
with with pods is the the primary

737
00:29:52,390 --> 00:29:57,670
pattern is non-persistent is basically

738
00:29:55,780 --> 00:29:59,710
the idea that any pod could died anytime

739
00:29:57,670 --> 00:30:01,420
heck any node could die at any time and

740
00:29:59,710 --> 00:30:03,130
that should all be fine and

741
00:30:01,420 --> 00:30:04,570
people will go and do workarounds and I

742
00:30:03,130 --> 00:30:05,950
got a actually got a question earlier

743
00:30:04,570 --> 00:30:07,780
today from somebody who's talking about

744
00:30:05,950 --> 00:30:11,350
this and I'm like yeah actually that's

745
00:30:07,780 --> 00:30:13,420
one of my demos so in this case the cat

746
00:30:11,350 --> 00:30:15,459
and Augie brothers have have linked

747
00:30:13,420 --> 00:30:17,350
in-home Redis straight into their

748
00:30:15,460 --> 00:30:18,880
straight into their container that's

749
00:30:17,350 --> 00:30:21,100
running Redis so when we compromised

750
00:30:18,880 --> 00:30:23,440
rightists were able to put an SSH key on

751
00:30:21,100 --> 00:30:25,629
one of the nodes in this cluster and

752
00:30:23,440 --> 00:30:27,760
when we finish with that Redis

753
00:30:25,630 --> 00:30:30,370
compromised here's where we are so we're

754
00:30:27,760 --> 00:30:32,530
now on the cluster and this is the point

755
00:30:30,370 --> 00:30:33,760
where this is the point this is the

756
00:30:32,530 --> 00:30:36,250
point this is the part of kubernetes

757
00:30:33,760 --> 00:30:39,700
attack that I enjoy the most and what it

758
00:30:36,250 --> 00:30:41,920
is is I'm going to say okay I'm in I'm

759
00:30:39,700 --> 00:30:44,110
in the cluster I'm running on some node

760
00:30:41,920 --> 00:30:46,900
in the cloud provider this case Amazon's

761
00:30:44,110 --> 00:30:48,820
don't worry right and the cloud provider

762
00:30:46,900 --> 00:30:50,080
well they they make all kinds of nice

763
00:30:48,820 --> 00:30:53,080
little services available there's all

764
00:30:50,080 --> 00:30:54,730
kind of api's my favorite API my

765
00:30:53,080 --> 00:30:56,470
favorite fruit well I have a few

766
00:30:54,730 --> 00:30:59,830
favorite API so one of my favorite API s

767
00:30:56,470 --> 00:31:02,140
is s3 cuz lots of stuff often stored

768
00:30:59,830 --> 00:31:04,570
publicly that shouldn't be but my other

769
00:31:02,140 --> 00:31:07,030
favorite API is the metadata API because

770
00:31:04,570 --> 00:31:09,220
if you're if you get code execution on

771
00:31:07,030 --> 00:31:11,470
anything running on a cloud provider if

772
00:31:09,220 --> 00:31:13,870
you can reach this special the special

773
00:31:11,470 --> 00:31:16,810
URL one six nine two five four one six

774
00:31:13,870 --> 00:31:18,699
nine 254 the actually what the API does

775
00:31:16,810 --> 00:31:21,610
beyond that differs by provider but that

776
00:31:18,700 --> 00:31:24,220
IP address seems to be uniform so if you

777
00:31:21,610 --> 00:31:26,889
can reach that IP address you can get an

778
00:31:24,220 --> 00:31:28,540
account for the machine or for the

779
00:31:26,890 --> 00:31:30,010
instance that you're running on and that

780
00:31:28,540 --> 00:31:33,010
will even happen in some serverless

781
00:31:30,010 --> 00:31:34,540
environments so I'm gonna go to one six

782
00:31:33,010 --> 00:31:36,670
nine two five four one six nine two five

783
00:31:34,540 --> 00:31:39,280
four latest metadata and it gives me a

784
00:31:36,670 --> 00:31:40,990
list of things that I might ask for like

785
00:31:39,280 --> 00:31:43,030
my IP address or what have you but I

786
00:31:40,990 --> 00:31:45,490
don't want my IP address I want to say

787
00:31:43,030 --> 00:31:46,870
for I am I would like my security

788
00:31:45,490 --> 00:31:48,490
credentials please and it says there's

789
00:31:46,870 --> 00:31:50,949
there's one security credential here

790
00:31:48,490 --> 00:31:55,120
starts with masters ends with busta Kubb

791
00:31:50,950 --> 00:31:56,830
so I'm gonna put that string that it

792
00:31:55,120 --> 00:32:01,389
says are my security credentials in and

793
00:31:56,830 --> 00:32:03,669
ask for it and what I get back are the

794
00:32:01,390 --> 00:32:06,580
things that you can figure into your AWS

795
00:32:03,670 --> 00:32:08,380
command line client to go and well like

796
00:32:06,580 --> 00:32:10,780
I'm going to do here take a look at s3

797
00:32:08,380 --> 00:32:12,700
so I've done some copy and paste to make

798
00:32:10,780 --> 00:32:14,870
this go a little faster and I'm copying

799
00:32:12,700 --> 00:32:16,580
in those that access key ID the

800
00:32:14,870 --> 00:32:18,770
the secret access key in the session

801
00:32:16,580 --> 00:32:21,230
token into environment variables and are

802
00:32:18,770 --> 00:32:23,780
on AWS s3 LS and it'll say you're not

803
00:32:21,230 --> 00:32:24,680
allowed to list buckets but luckily my

804
00:32:23,780 --> 00:32:28,879
flag

805
00:32:24,680 --> 00:32:31,430
I said luckily my flag luckily the flag

806
00:32:28,880 --> 00:32:33,050
when I compromise these guys said hey

807
00:32:31,430 --> 00:32:34,670
you've beaten the catalog II twins can

808
00:32:33,050 --> 00:32:36,770
you take down the whole cluster by the

809
00:32:34,670 --> 00:32:38,690
way the cluster was built with the cops

810
00:32:36,770 --> 00:32:41,660
one of the major communities installers

811
00:32:38,690 --> 00:32:43,700
is called cops Kop s and it keeps it

812
00:32:41,660 --> 00:32:47,000
stayed store in a bucket called Splunk

813
00:32:43,700 --> 00:32:50,240
con Buster coupe calm state store and so

814
00:32:47,000 --> 00:32:54,680
I'm gonna take that bucket name and I'll

815
00:32:50,240 --> 00:32:57,140
do AWS s3 LS and it says okay there's

816
00:32:54,680 --> 00:33:01,040
just one content cool let me go and take

817
00:32:57,140 --> 00:33:03,230
that and let get a list of that well

818
00:33:01,040 --> 00:33:04,940
that's got add-ons backup instance

819
00:33:03,230 --> 00:33:06,260
groups manifests PKI

820
00:33:04,940 --> 00:33:09,170
that's starting to sound interesting

821
00:33:06,260 --> 00:33:11,210
secret sounds better though let's look

822
00:33:09,170 --> 00:33:13,430
at secrets oh it's got a bunch of files

823
00:33:11,210 --> 00:33:15,740
these files are named for the major

824
00:33:13,430 --> 00:33:17,420
service accounts that were used to that

825
00:33:15,740 --> 00:33:19,760
were that were created at the time the

826
00:33:17,420 --> 00:33:22,010
cluster was installed to bootstrap the

827
00:33:19,760 --> 00:33:23,540
cluster I wonder if any of those you

828
00:33:22,010 --> 00:33:26,210
know potentially long-lived ones still

829
00:33:23,540 --> 00:33:28,310
work let's grab the admin one so I'm

830
00:33:26,210 --> 00:33:31,700
gonna go and using AWS command copy just

831
00:33:28,310 --> 00:33:36,350
gonna download that admin token I'll

832
00:33:31,700 --> 00:33:37,700
call it admin token and I got it

833
00:33:36,350 --> 00:33:39,290
downloaded cuz I'm trying to download to

834
00:33:37,700 --> 00:33:45,680
a directory that my user can't write to

835
00:33:39,290 --> 00:33:52,670
so I'll do it again and when I base64

836
00:33:45,680 --> 00:33:55,940
decode this what I end up with is this

837
00:33:52,670 --> 00:33:58,070
nice little nice little JSON block and

838
00:33:55,940 --> 00:34:01,250
the JSON block says data and then the

839
00:33:58,070 --> 00:34:04,790
data contents are a token for the

840
00:34:01,250 --> 00:34:08,300
kubernetes cluster and so when I base64

841
00:34:04,790 --> 00:34:09,830
decode that into my admin token file and

842
00:34:08,300 --> 00:34:12,530
look at that and I can run a coop

843
00:34:09,830 --> 00:34:14,150
control command - I've been token just

844
00:34:12,530 --> 00:34:14,690
like I did with the attack on Todd get

845
00:34:14,150 --> 00:34:16,850
pods

846
00:34:14,690 --> 00:34:19,040
okay get piles just to make sure works

847
00:34:16,850 --> 00:34:21,020
but now let's see if we can do something

848
00:34:19,040 --> 00:34:23,779
we shouldn't able to do so I've just

849
00:34:21,020 --> 00:34:24,900
chosen one are we exactly into the chaos

850
00:34:23,780 --> 00:34:27,300
theater one Oh

851
00:34:24,900 --> 00:34:28,410
that was cool I could do that but let me

852
00:34:27,300 --> 00:34:30,420
try something else

853
00:34:28,409 --> 00:34:32,489
I'm created I've got this attack pod

854
00:34:30,420 --> 00:34:35,130
that I couldn't stage earlier because I

855
00:34:32,489 --> 00:34:37,709
didn't have rights and this pod I'll

856
00:34:35,130 --> 00:34:41,160
show you in just a second this pod is

857
00:34:37,710 --> 00:34:43,380
allowed to like first it's custom second

858
00:34:41,159 --> 00:34:45,540
it's allowed to it's allowed to mount

859
00:34:43,380 --> 00:34:49,440
hosts files the the note host file

860
00:34:45,540 --> 00:34:52,670
systems so I've I've done it I've

861
00:34:49,440 --> 00:34:57,030
created it and now let's take a look I

862
00:34:52,670 --> 00:34:58,770
go into that pod and I should have my

863
00:34:57,030 --> 00:35:02,100
flag which would be nice but let's do a

864
00:34:58,770 --> 00:35:04,500
true root bin bash so I'm going and

865
00:35:02,100 --> 00:35:07,620
saying this pod basically is mounting

866
00:35:04,500 --> 00:35:09,780
the node so I'm in a container in a

867
00:35:07,620 --> 00:35:13,799
container in a pod that pod is mounting

868
00:35:09,780 --> 00:35:17,340
the node the hosts root file system into

869
00:35:13,800 --> 00:35:22,020
slash root and if I can do that I get

870
00:35:17,340 --> 00:35:23,940
lots of privilege so I've true did so

871
00:35:22,020 --> 00:35:27,120
when I type Etsy shadow what I'm seeing

872
00:35:23,940 --> 00:35:30,750
is on the node so now I've got access to

873
00:35:27,120 --> 00:35:34,730
read the shadow file and I ended my demo

874
00:35:30,750 --> 00:35:37,890
there but if I kept going with that

875
00:35:34,730 --> 00:35:39,720
sorry if I kept going with that then I

876
00:35:37,890 --> 00:35:41,700
could do quite a bit

877
00:35:39,720 --> 00:35:42,959
I've actually actually have a tool that

878
00:35:41,700 --> 00:35:45,480
I'm going to show you next called

879
00:35:42,960 --> 00:35:47,070
peratis and if it finds this capability

880
00:35:45,480 --> 00:35:49,140
if it can balance a pod that came out

881
00:35:47,070 --> 00:35:51,870
the hosts file system it'll go and say

882
00:35:49,140 --> 00:35:54,359
write a crontab file and writing that

883
00:35:51,870 --> 00:35:57,000
crontab file will basically have a we'll

884
00:35:54,360 --> 00:35:59,190
set it up so that that node is once a

885
00:35:57,000 --> 00:36:01,470
minute sending a reverse shell back to

886
00:35:59,190 --> 00:36:03,540
the attacker so if I can modify the host

887
00:36:01,470 --> 00:36:05,459
file system on one of the nodes in the

888
00:36:03,540 --> 00:36:07,680
cluster then I've actually end up

889
00:36:05,460 --> 00:36:09,840
getting grant execution on the node

890
00:36:07,680 --> 00:36:12,210
itself kind of indirectly through the

891
00:36:09,840 --> 00:36:13,800
file system but I'll take it none of

892
00:36:12,210 --> 00:36:15,570
what we've been doing here by the way

893
00:36:13,800 --> 00:36:17,550
has been anything that any a that's got

894
00:36:15,570 --> 00:36:19,800
a CDE attached to it this is all just

895
00:36:17,550 --> 00:36:21,060
normal red teaming or penetration

896
00:36:19,800 --> 00:36:24,030
testing whatever you want to call this

897
00:36:21,060 --> 00:36:25,770
is abusing configuration and there are

898
00:36:24,030 --> 00:36:27,120
some security controls on this thing but

899
00:36:25,770 --> 00:36:29,610
I'm just kind of walking around them and

900
00:36:27,120 --> 00:36:31,230
because the our talk formats short I'm

901
00:36:29,610 --> 00:36:32,880
not showing you like all the other

902
00:36:31,230 --> 00:36:34,830
things I wasn't able to do and I'm kind

903
00:36:32,880 --> 00:36:37,510
of walking around through that I'll have

904
00:36:34,830 --> 00:36:42,299
a longer version of this online

905
00:36:37,510 --> 00:36:44,470
in a little while so so that's the

906
00:36:42,300 --> 00:36:46,090
that's our last thing I want to show you

907
00:36:44,470 --> 00:36:48,189
I've got I've got some slides and I want

908
00:36:46,090 --> 00:36:49,570
to show you one more demo and I just

909
00:36:48,190 --> 00:36:58,330
have to remember how to find my

910
00:36:49,570 --> 00:37:00,040
playlists there we go so this is a tool

911
00:36:58,330 --> 00:37:01,540
that we created in guardians it's

912
00:37:00,040 --> 00:37:04,450
another open-source tool like basta

913
00:37:01,540 --> 00:37:05,800
Kubas and this one's called peratis it

914
00:37:04,450 --> 00:37:07,660
doesn't have much of a UI it's kind of

915
00:37:05,800 --> 00:37:10,510
tax base interactive but what it lets

916
00:37:07,660 --> 00:37:12,490
you do is if you get code execution in a

917
00:37:10,510 --> 00:37:13,480
pod so that's if you get it from a fish

918
00:37:12,490 --> 00:37:15,399
developer if you get it from

919
00:37:13,480 --> 00:37:17,380
compromising from compromising a

920
00:37:15,400 --> 00:37:19,210
workload you're in a pod and what you

921
00:37:17,380 --> 00:37:21,670
can do is basically set is basically use

922
00:37:19,210 --> 00:37:23,140
a bunch of command line things that

923
00:37:21,670 --> 00:37:25,540
automate the kinds of things I've been

924
00:37:23,140 --> 00:37:27,400
doing so it'll go and say hey do you

925
00:37:25,540 --> 00:37:29,170
want to see if you're able to lift the

926
00:37:27,400 --> 00:37:30,609
secrets out of the API server maybe get

927
00:37:29,170 --> 00:37:32,980
some service account tokens from it do

928
00:37:30,609 --> 00:37:36,759
you want to check the do you want to

929
00:37:32,980 --> 00:37:38,530
check the AWS or GCP metadata API s and

930
00:37:36,760 --> 00:37:40,990
see if you can get service accounts for

931
00:37:38,530 --> 00:37:43,570
i.m accounts do you want to see if you

932
00:37:40,990 --> 00:37:45,520
can if you can basically take control of

933
00:37:43,570 --> 00:37:48,070
the cluster by way of the cloud account

934
00:37:45,520 --> 00:37:51,940
and so I've got one quick demo here

935
00:37:48,070 --> 00:37:54,310
that's of peratis doing that so I'm this

936
00:37:51,940 --> 00:37:56,470
is a this is a sample thing I'm in a

937
00:37:54,310 --> 00:37:58,480
WordPress I mean so I've just

938
00:37:56,470 --> 00:38:01,149
compromised WordPress because WordPress

939
00:37:58,480 --> 00:38:02,619
never gets compromised right so I've got

940
00:38:01,150 --> 00:38:05,020
remote code execution inside of

941
00:38:02,619 --> 00:38:08,440
WordPress and I want to turn that into

942
00:38:05,020 --> 00:38:12,550
something bigger this thing's on GCP is

943
00:38:08,440 --> 00:38:14,560
on Google's cloud so I'm just gonna run

944
00:38:12,550 --> 00:38:18,670
a couple commands I'm gonna run number

945
00:38:14,560 --> 00:38:20,980
13 which says hey go and check the go

946
00:38:18,670 --> 00:38:22,630
and check the metadata API and see if

947
00:38:20,980 --> 00:38:24,820
you get some i''m credentials so I get

948
00:38:22,630 --> 00:38:26,410
some ion credentials these are just

949
00:38:24,820 --> 00:38:27,640
these are just standard ones they're not

950
00:38:26,410 --> 00:38:30,100
administrative in any way they're just

951
00:38:27,640 --> 00:38:32,049
what basically the nodes had and now I

952
00:38:30,100 --> 00:38:34,509
run fifteen and say can you see if you

953
00:38:32,050 --> 00:38:36,310
can find service count tokens and Google

954
00:38:34,510 --> 00:38:39,180
Cloud Storage Google's equivalent of s3

955
00:38:36,310 --> 00:38:42,609
yep those same kind of ones we just got

956
00:38:39,180 --> 00:38:44,169
so once I once those all scroll by it

957
00:38:42,609 --> 00:38:46,779
says ah these are all the ones we've

958
00:38:44,170 --> 00:38:49,930
acquired from GCS and now let's take

959
00:38:46,780 --> 00:38:53,110
that admin one and we'll use that

960
00:38:49,930 --> 00:38:54,609
and then we can just see if like let's

961
00:38:53,110 --> 00:38:56,160
test and see if it's really admin so

962
00:38:54,610 --> 00:38:59,650
I'll switch to the coop system namespace

963
00:38:56,160 --> 00:39:04,120
and I'm gonna just run a command in

964
00:38:59,650 --> 00:39:05,860
every single pot on the cluster or every

965
00:39:04,120 --> 00:39:08,500
single pot in this namespace yep

966
00:39:05,860 --> 00:39:10,000
something I got code execution on all of

967
00:39:08,500 --> 00:39:13,600
the infrastructure in this crib Anandi's

968
00:39:10,000 --> 00:39:17,620
cluster and that was automated one tool

969
00:39:13,600 --> 00:39:20,470
two commands we're done so that's kind

970
00:39:17,620 --> 00:39:22,180
of fun so that's my that's my demo I

971
00:39:20,470 --> 00:39:24,459
like to do talks that are that are very

972
00:39:22,180 --> 00:39:27,870
very demo focused what I'm gonna do now

973
00:39:24,460 --> 00:39:27,870
is talk to you a little bit about fence

974
00:39:28,350 --> 00:39:33,759
so clearly I had some slides at a slide

975
00:39:32,410 --> 00:39:34,870
that basically was there to tell you

976
00:39:33,760 --> 00:39:37,450
what we were doing with the whole movie

977
00:39:34,870 --> 00:39:39,069
tie-in bus to Kubb is the cluster we

978
00:39:37,450 --> 00:39:40,060
were operating against so ask me for a

979
00:39:39,070 --> 00:39:42,190
sticker later on

980
00:39:40,060 --> 00:39:43,840
that's the kubernetes logo with a you

981
00:39:42,190 --> 00:39:45,760
know broken app I'm gonna talk about the

982
00:39:43,840 --> 00:39:47,230
fences right now so here are the kinds

983
00:39:45,760 --> 00:39:48,490
of defenses that you have some of these

984
00:39:47,230 --> 00:39:51,670
were deployed on this cluster and some

985
00:39:48,490 --> 00:39:53,859
of them weren't we have first we've got

986
00:39:51,670 --> 00:39:55,690
network policies that sounds so boring

987
00:39:53,860 --> 00:39:57,700
like it's a most boring way in the world

988
00:39:55,690 --> 00:39:59,770
to say firewalling but basically you

989
00:39:57,700 --> 00:40:03,299
have network policies you have pod

990
00:39:59,770 --> 00:40:05,890
security policies and I've got a slide

991
00:40:03,300 --> 00:40:07,690
so the network policy is basically

992
00:40:05,890 --> 00:40:09,700
defined there's some yama land they

993
00:40:07,690 --> 00:40:11,890
define what pods can be reached by what

994
00:40:09,700 --> 00:40:14,410
things and here's the more important

995
00:40:11,890 --> 00:40:15,970
thing we shouldn't from that from any

996
00:40:14,410 --> 00:40:17,080
from any of those workloads we should

997
00:40:15,970 --> 00:40:22,209
have been able to reach them at a data

998
00:40:17,080 --> 00:40:25,000
API or reach the AWS or GC or or GC PAP

999
00:40:22,210 --> 00:40:27,070
is unless we actually had a need to and

1000
00:40:25,000 --> 00:40:28,690
most of the time we don't like WordPress

1001
00:40:27,070 --> 00:40:30,880
probably didn't need to reach out to

1002
00:40:28,690 --> 00:40:33,040
those api's so if I have an egress

1003
00:40:30,880 --> 00:40:35,200
policy in place and that's not the fault

1004
00:40:33,040 --> 00:40:36,670
by far it's really uncommon but if I

1005
00:40:35,200 --> 00:40:38,529
have an egress policy in place then I

1006
00:40:36,670 --> 00:40:41,590
don't I don't end up with my attacker

1007
00:40:38,530 --> 00:40:44,170
able to reach all those api's and do the

1008
00:40:41,590 --> 00:40:45,520
kind of damage we were doing we also can

1009
00:40:44,170 --> 00:40:47,620
make it so that the attacker isn't like

1010
00:40:45,520 --> 00:40:49,590
I didn't hop between X's I didn't go

1011
00:40:47,620 --> 00:40:51,850
from X number one Dex number three

1012
00:40:49,590 --> 00:40:54,990
because I had network policies that

1013
00:40:51,850 --> 00:40:58,600
prevented that what else

1014
00:40:54,990 --> 00:41:00,850
so pod security policies are one of the

1015
00:40:58,600 --> 00:41:03,700
big places where you get a ton of

1016
00:41:00,850 --> 00:41:06,700
defensive power and pod security policy

1017
00:41:03,700 --> 00:41:08,740
basically say here as the owner of the

1018
00:41:06,700 --> 00:41:11,618
cluster or as the owner of a namespace

1019
00:41:08,740 --> 00:41:14,529
in a cluster you can basically say no

1020
00:41:11,619 --> 00:41:16,480
pause no workloads can be deployed on my

1021
00:41:14,530 --> 00:41:19,150
cluster unless they have these defenses

1022
00:41:16,480 --> 00:41:21,940
and so one is you can basically have a

1023
00:41:19,150 --> 00:41:23,920
live All you might list you can say the

1024
00:41:21,940 --> 00:41:26,380
pods in my cluster can mount this from

1025
00:41:23,920 --> 00:41:27,819
NFS so they can mount this from the host

1026
00:41:26,380 --> 00:41:30,250
file system but they can't just mount

1027
00:41:27,819 --> 00:41:33,069
the root filesystem on the node they're

1028
00:41:30,250 --> 00:41:35,140
on that's insane and that's a really

1029
00:41:33,069 --> 00:41:36,609
easy thing to setup you can also have

1030
00:41:35,140 --> 00:41:39,129
what are called route capability limits

1031
00:41:36,609 --> 00:41:41,558
and that is that if you've got and I

1032
00:41:39,130 --> 00:41:43,359
honestly I do defense like I do defense

1033
00:41:41,559 --> 00:41:45,819
as a you know full day class so I'm

1034
00:41:43,359 --> 00:41:48,009
giving you the quick a quick rundown I

1035
00:41:45,819 --> 00:41:49,540
can do capability limits and that's kind

1036
00:41:48,010 --> 00:41:51,819
of cool because all of routes special

1037
00:41:49,540 --> 00:41:53,109
powers the ability to like write to any

1038
00:41:51,819 --> 00:41:55,270
file they want on the system whether

1039
00:41:53,109 --> 00:41:57,369
they own it or not all of those special

1040
00:41:55,270 --> 00:41:58,569
powers are actually numbered and so you

1041
00:41:57,369 --> 00:42:02,079
can make it so you can have something

1042
00:41:58,569 --> 00:42:04,630
run in a container on a cluster and it's

1043
00:42:02,079 --> 00:42:07,240
got route privilege it's got its running

1044
00:42:04,630 --> 00:42:08,650
as routes but it doesn't have the

1045
00:42:07,240 --> 00:42:09,819
ability to write arbitrarily the

1046
00:42:08,650 --> 00:42:11,680
filesystem or it doesn't have the

1047
00:42:09,819 --> 00:42:13,839
ability to bind to a port below 1024

1048
00:42:11,680 --> 00:42:15,368
literally the only route special powers

1049
00:42:13,839 --> 00:42:16,990
it would have would be the ones that are

1050
00:42:15,369 --> 00:42:18,940
known the ones that are in its profile

1051
00:42:16,990 --> 00:42:20,169
and so you can say anything running on

1052
00:42:18,940 --> 00:42:23,950
my cluster has to have one of these

1053
00:42:20,170 --> 00:42:26,410
profiles you can do app armor if Crispin

1054
00:42:23,950 --> 00:42:31,390
Cohen's in the house way to go man he's

1055
00:42:26,410 --> 00:42:33,009
a you can do set comps it's called white

1056
00:42:31,390 --> 00:42:34,930
listing like browsers have been doing

1057
00:42:33,010 --> 00:42:37,180
where basically you can say even though

1058
00:42:34,930 --> 00:42:38,890
you're not the developer the program you

1059
00:42:37,180 --> 00:42:41,049
can put a set comp profile on it what's

1060
00:42:38,890 --> 00:42:43,720
the second profile means all the system

1061
00:42:41,049 --> 00:42:46,180
calls that a program calls you can make

1062
00:42:43,720 --> 00:42:47,919
a profile and say the program can only

1063
00:42:46,180 --> 00:42:50,290
run the system calls that it normally

1064
00:42:47,920 --> 00:42:53,290
runs and that profile comes straight out

1065
00:42:50,290 --> 00:42:55,299
can come straight out of s trace you can

1066
00:42:53,290 --> 00:42:56,558
do read-only root file systems which

1067
00:42:55,299 --> 00:42:58,089
really would have gotten my way going

1068
00:42:56,559 --> 00:43:01,540
and pulling my remote access Trojans

1069
00:42:58,089 --> 00:43:02,890
down and you can do service meshes and

1070
00:43:01,540 --> 00:43:05,319
I've just kind of talked through my

1071
00:43:02,890 --> 00:43:07,150
table of contents slide so I talked

1072
00:43:05,319 --> 00:43:08,980
about the cisco whitelisting basically

1073
00:43:07,150 --> 00:43:10,480
saying what system calls the program

1074
00:43:08,980 --> 00:43:12,700
normally used let's restrict it to just

1075
00:43:10,480 --> 00:43:15,130
those

1076
00:43:12,700 --> 00:43:19,480
I talked about read-only route file

1077
00:43:15,130 --> 00:43:21,220
systems and I've talked to and I'm gonna

1078
00:43:19,480 --> 00:43:23,680
I'm mentioning service meshes now so

1079
00:43:21,220 --> 00:43:25,899
this is sto but you could have a service

1080
00:43:23,680 --> 00:43:27,850
mesh and that service mesh is service

1081
00:43:25,900 --> 00:43:29,410
meshes are incredibly powerful they are

1082
00:43:27,850 --> 00:43:31,930
some heavy lifting but once you've got

1083
00:43:29,410 --> 00:43:33,430
it it's really really nice what they let

1084
00:43:31,930 --> 00:43:34,839
you do among other things they do let

1085
00:43:33,430 --> 00:43:36,430
you have control and say only these

1086
00:43:34,840 --> 00:43:38,380
things can reach this can reach these

1087
00:43:36,430 --> 00:43:39,430
things my man in the middle trick never

1088
00:43:38,380 --> 00:43:42,310
would have worked for the service mesh

1089
00:43:39,430 --> 00:43:44,200
in place but you also make it you've got

1090
00:43:42,310 --> 00:43:46,270
you've got encryption added between

1091
00:43:44,200 --> 00:43:48,399
every single pod that interacts with

1092
00:43:46,270 --> 00:43:49,900
anything else whether it whether it was

1093
00:43:48,400 --> 00:43:52,420
coded for it or not it gets encryption

1094
00:43:49,900 --> 00:43:53,740
it also gets you know full on you know

1095
00:43:52,420 --> 00:43:54,820
full on certificate checking and

1096
00:43:53,740 --> 00:43:57,759
basically you're authenticating the

1097
00:43:54,820 --> 00:43:59,530
endpoints and this is another open

1098
00:43:57,760 --> 00:44:01,360
source project there are a few of them

1099
00:43:59,530 --> 00:44:04,170
this ones this tio but there there's

1100
00:44:01,360 --> 00:44:08,530
another one link or D that's also free I

1101
00:44:04,170 --> 00:44:10,870
talked about peratis and then I've got I

1102
00:44:08,530 --> 00:44:12,370
talked about peratis and showed you a

1103
00:44:10,870 --> 00:44:13,690
demo of that basically it's a

1104
00:44:12,370 --> 00:44:14,950
penetration testing tool I actually

1105
00:44:13,690 --> 00:44:16,660
thought I was gonna run short on time

1106
00:44:14,950 --> 00:44:21,759
and I'm in a minute in 23 seconds so

1107
00:44:16,660 --> 00:44:23,500
woah so anyway some quick references

1108
00:44:21,760 --> 00:44:25,630
these are kinds of things we did in the

1109
00:44:23,500 --> 00:44:27,070
demo like the kinds of attacks and I'm

1110
00:44:25,630 --> 00:44:28,510
gonna some point I'm gonna put together

1111
00:44:27,070 --> 00:44:31,120
like the kind of like miter attack

1112
00:44:28,510 --> 00:44:32,950
framework for kubernetes but as an

1113
00:44:31,120 --> 00:44:34,839
attacker I can ask the API server which

1114
00:44:32,950 --> 00:44:36,850
is basically the bulk of what I did here

1115
00:44:34,840 --> 00:44:39,100
to stage a container I can ask it to

1116
00:44:36,850 --> 00:44:41,740
modify containers I can ask it to let me

1117
00:44:39,100 --> 00:44:43,150
man the middle traffic I can put in my

1118
00:44:41,740 --> 00:44:45,220
own I can basically it's a

1119
00:44:43,150 --> 00:44:47,230
software-defined data centers so if I

1120
00:44:45,220 --> 00:44:49,240
have the privileges I can do anything if

1121
00:44:47,230 --> 00:44:51,220
that would let me do I can run commands

1122
00:44:49,240 --> 00:44:53,439
containers I don't own the cool thing is

1123
00:44:51,220 --> 00:44:55,359
that until a few versions back a default

1124
00:44:53,440 --> 00:44:58,120
behavior was if you could reach the

1125
00:44:55,360 --> 00:44:59,650
Kubla process on any of the nodes you

1126
00:44:58,120 --> 00:45:01,690
could ask the Kubla to let you run

1127
00:44:59,650 --> 00:45:04,030
commands in any pot in any container on

1128
00:45:01,690 --> 00:45:05,860
the system on that node and it would I

1129
00:45:04,030 --> 00:45:12,550
thought was kind of like just game over

1130
00:45:05,860 --> 00:45:14,560
easy compromise so finally the other

1131
00:45:12,550 --> 00:45:16,090
kinds of attacks we did this is

1132
00:45:14,560 --> 00:45:17,950
basically what we just did we interacted

1133
00:45:16,090 --> 00:45:19,330
with the cloud provider we get the

1134
00:45:17,950 --> 00:45:22,118
credentials for the node from the

1135
00:45:19,330 --> 00:45:24,609
metadata API we get

1136
00:45:22,119 --> 00:45:26,020
authentication tokens and then used out

1137
00:45:24,609 --> 00:45:27,490
of the out of the cloud storage buckets

1138
00:45:26,020 --> 00:45:28,840
just basically searching and seeing what

1139
00:45:27,490 --> 00:45:31,060
I can do

1140
00:45:28,840 --> 00:45:34,119
yeah I'm like watching my ten nine eight

1141
00:45:31,060 --> 00:45:35,619
and this is awesome so I I have so much

1142
00:45:34,119 --> 00:45:37,510
more to share with you and I'd love to

1143
00:45:35,619 --> 00:45:38,680
share it I really hope you'll come and

1144
00:45:37,510 --> 00:45:41,050
meet me in the speaker's corner which

1145
00:45:38,680 --> 00:45:43,750
I'm told is basically right over there

1146
00:45:41,050 --> 00:45:46,000
so yeah come talk to me about kubernetes

1147
00:45:43,750 --> 00:45:47,710
attackers come and get his sticker come

1148
00:45:46,000 --> 00:45:51,250
tell me about something cool you did in

1149
00:45:47,710 --> 00:45:52,450
cloud native or in yeah or a Linux

1150
00:45:51,250 --> 00:45:53,990
hacker and Windows backing for that

1151
00:45:52,450 --> 00:46:00,750
matter thank you very much

1152
00:45:53,990 --> 00:46:00,750
[Applause]

