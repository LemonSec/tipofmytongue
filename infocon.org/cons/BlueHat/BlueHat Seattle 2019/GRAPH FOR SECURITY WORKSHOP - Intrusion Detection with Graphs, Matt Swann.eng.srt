1
00:00:00,000 --> 00:00:05,370
up next is Matt Swan Matt Swan is the

2
00:00:03,540 --> 00:00:07,439
chief security architect for onedrive

3
00:00:05,370 --> 00:00:10,980
and SharePoint team he leads an

4
00:00:07,440 --> 00:00:14,490
engineering team that is focused on

5
00:00:10,980 --> 00:00:16,470
defending customers he is a 14 year

6
00:00:14,490 --> 00:00:18,080
veteran of the SharePoint team at

7
00:00:16,470 --> 00:00:20,640
Microsoft he's passionate about

8
00:00:18,080 --> 00:00:22,070
intrusion detection incident response

9
00:00:20,640 --> 00:00:32,489
and digital forensics

10
00:00:22,070 --> 00:00:35,670
let's welcome Matt all right thank you I

11
00:00:32,488 --> 00:00:38,280
have a fancy title but I am an engineer

12
00:00:35,670 --> 00:00:41,100
I lead an engineering team and so what I

13
00:00:38,280 --> 00:00:43,770
want to share with you today is how my

14
00:00:41,100 --> 00:00:46,260
team uses graphs to get more value out

15
00:00:43,770 --> 00:00:49,620
of the intrusion detection results the

16
00:00:46,260 --> 00:00:52,110
alerts that we already have my team

17
00:00:49,620 --> 00:00:54,538
operates with an agile principle and so

18
00:00:52,110 --> 00:00:57,600
we try to build everything incrementally

19
00:00:54,539 --> 00:01:01,260
right we built intrusion detection that

20
00:00:57,600 --> 00:01:02,699
was giving us alerts in free text we

21
00:01:01,260 --> 00:01:05,129
learned how to take those alerts in free

22
00:01:02,699 --> 00:01:06,780
text and schematize them and then we

23
00:01:05,129 --> 00:01:09,689
learned how to use those schema Tyus

24
00:01:06,780 --> 00:01:12,600
alerts that schematize data to represent

25
00:01:09,689 --> 00:01:16,048
them as graphs to help our analysts make

26
00:01:12,600 --> 00:01:17,280
more value get more value out of that so

27
00:01:16,049 --> 00:01:19,770
that's what I'm gonna walk you through

28
00:01:17,280 --> 00:01:21,930
today so a little bit of background my

29
00:01:19,770 --> 00:01:23,908
team is responsible for keeping your

30
00:01:21,930 --> 00:01:26,369
engineers your organization's most

31
00:01:23,909 --> 00:01:29,220
valuable intellectual property safe in

32
00:01:26,369 --> 00:01:32,130
office 365 and onedrive and in

33
00:01:29,220 --> 00:01:32,579
SharePoint and so this is over 300,000

34
00:01:32,130 --> 00:01:35,189
machines

35
00:01:32,579 --> 00:01:37,470
uploading security event logs and custom

36
00:01:35,189 --> 00:01:40,320
telemetry from our etw agent to the

37
00:01:37,470 --> 00:01:42,720
cloud now for us to deliver on our

38
00:01:40,320 --> 00:01:44,699
customer promise detection in this

39
00:01:42,720 --> 00:01:47,310
environment needs to be accurate timely

40
00:01:44,700 --> 00:01:49,890
and comprehensive right and I measure

41
00:01:47,310 --> 00:01:52,380
that both by how quickly my engineers

42
00:01:49,890 --> 00:01:54,299
can get paged or how rapidly we can take

43
00:01:52,380 --> 00:01:56,610
automated actions when something

44
00:01:54,299 --> 00:01:59,520
malicious gets into the environment but

45
00:01:56,610 --> 00:02:02,460
also my breadth of coverage across the

46
00:01:59,520 --> 00:02:04,530
kill chain if I only have one alert that

47
00:02:02,460 --> 00:02:06,689
tells me that an adversary is you know

48
00:02:04,530 --> 00:02:08,459
on his way towards an objective that

49
00:02:06,689 --> 00:02:11,008
means I have something fragile and that

50
00:02:08,459 --> 00:02:13,020
makes me worried right

51
00:02:11,008 --> 00:02:14,760
and so my detection pipeline probably

52
00:02:13,020 --> 00:02:16,890
looks a lot like yours I mean I've got

53
00:02:14,760 --> 00:02:17,760
Windows security event logs logs from my

54
00:02:16,890 --> 00:02:19,859
custom agents

55
00:02:17,760 --> 00:02:21,959
I've got etw based monitoring Network

56
00:02:19,860 --> 00:02:23,730
based monitoring and I take those

57
00:02:21,959 --> 00:02:26,040
detection results I crack out the

58
00:02:23,730 --> 00:02:27,869
entities and the properties using

59
00:02:26,040 --> 00:02:28,950
something similar to the common eventing

60
00:02:27,870 --> 00:02:31,080
framework but it's something we

61
00:02:28,950 --> 00:02:33,119
developed in-house and we store this in

62
00:02:31,080 --> 00:02:35,160
a database a columnar database called

63
00:02:33,120 --> 00:02:38,519
Azure data Explorer it's much like

64
00:02:35,160 --> 00:02:39,720
elasticsearch we do normalization to

65
00:02:38,519 --> 00:02:41,670
make sure that all of those column

66
00:02:39,720 --> 00:02:44,970
values have a consistent semantic

67
00:02:41,670 --> 00:02:48,420
meaning so user name is a user name not

68
00:02:44,970 --> 00:02:51,000
a domain not a UPN it's lowercase domain

69
00:02:48,420 --> 00:02:53,099
names are uppercase host names are

70
00:02:51,000 --> 00:02:55,349
always lower cased and normalized and

71
00:02:53,099 --> 00:02:58,410
then we classify our detection results

72
00:02:55,349 --> 00:03:01,380
our alerts according to the fidelity of

73
00:02:58,410 --> 00:03:03,359
that detection so we have many alerts

74
00:03:01,380 --> 00:03:05,609
that just give us context right we never

75
00:03:03,360 --> 00:03:07,920
page anybody about these but we show

76
00:03:05,610 --> 00:03:09,630
them in context with other results so

77
00:03:07,920 --> 00:03:12,720
that our engineers our analysts can make

78
00:03:09,630 --> 00:03:14,400
better decisions next we have behavioral

79
00:03:12,720 --> 00:03:16,889
detection and these are things that

80
00:03:14,400 --> 00:03:18,480
often happen just because an engineer is

81
00:03:16,889 --> 00:03:21,690
getting their work done or the

82
00:03:18,480 --> 00:03:23,340
environment has changed next we have

83
00:03:21,690 --> 00:03:25,560
atomic alerts and these are things that

84
00:03:23,340 --> 00:03:27,359
we always want to review whenever they

85
00:03:25,560 --> 00:03:29,130
happen in the environment for instance

86
00:03:27,359 --> 00:03:31,680
if someone installs a service on a

87
00:03:29,130 --> 00:03:33,209
machine I want an alert that somebody's

88
00:03:31,680 --> 00:03:36,150
going to look at and if that isn't

89
00:03:33,209 --> 00:03:39,780
happening across all 350,000 machines in

90
00:03:36,150 --> 00:03:41,579
my environment I'm concerned and finally

91
00:03:39,780 --> 00:03:43,500
I have alerts and these are that small

92
00:03:41,579 --> 00:03:46,049
population of extremely high fidelity

93
00:03:43,500 --> 00:03:48,000
things that as soon as they happen they

94
00:03:46,049 --> 00:03:51,959
page an engineer and we jump in and we

95
00:03:48,000 --> 00:03:54,150
respond so if I'm gonna get value out of

96
00:03:51,959 --> 00:03:55,500
this system I have to be able to

97
00:03:54,150 --> 00:03:58,290
optimize for a couple of things I need

98
00:03:55,500 --> 00:04:00,420
to solve three problems first my

99
00:03:58,290 --> 00:04:03,030
analysts need to see these results in

100
00:04:00,420 --> 00:04:05,518
context because otherwise if I'm sorting

101
00:04:03,030 --> 00:04:07,829
by type of detection and I'm just

102
00:04:05,519 --> 00:04:09,900
resolving all of the alert type a first

103
00:04:07,829 --> 00:04:12,930
and then alert type be next you know

104
00:04:09,900 --> 00:04:15,180
that's maybe easiest to do but if I'm

105
00:04:12,930 --> 00:04:16,620
not making the connections between three

106
00:04:15,180 --> 00:04:19,289
different alerts that happened on the

107
00:04:16,620 --> 00:04:21,840
same user or the same host then I'm

108
00:04:19,289 --> 00:04:24,000
missing the story right I'm looking at

109
00:04:21,839 --> 00:04:25,140
page 37 of a novel

110
00:04:24,000 --> 00:04:27,330
saying it looks good ripping it out

111
00:04:25,140 --> 00:04:32,010
throwing it away but not considering the

112
00:04:27,330 --> 00:04:34,140
full ark next my analyst time is is

113
00:04:32,010 --> 00:04:35,610
scarce right I have hundreds of

114
00:04:34,140 --> 00:04:38,370
thousands of detection results coming

115
00:04:35,610 --> 00:04:40,530
out each day generated from between 14

116
00:04:38,370 --> 00:04:43,770
and 20 terabytes of security event logs

117
00:04:40,530 --> 00:04:45,630
a ttw telemetry every day and I need to

118
00:04:43,770 --> 00:04:48,090
make sure that my analysts are looking

119
00:04:45,630 --> 00:04:49,980
at the thing that is most likely to be a

120
00:04:48,090 --> 00:04:53,969
true positive evidence of an intrusion

121
00:04:49,980 --> 00:04:56,100
when they start looking at that finally

122
00:04:53,970 --> 00:04:58,590
I want to turn my engineers loose to add

123
00:04:56,100 --> 00:05:00,570
as many detections as possible to cover

124
00:04:58,590 --> 00:05:03,440
as much of the kyo-chan as we can see

125
00:05:00,570 --> 00:05:06,599
into and if they're stymied or Hank

126
00:05:03,440 --> 00:05:09,000
handicapped or handcuffed by the false

127
00:05:06,600 --> 00:05:10,620
positive true positive ratio then I'm

128
00:05:09,000 --> 00:05:12,780
only going to be able to add a certain

129
00:05:10,620 --> 00:05:14,070
small number of defections and many of

130
00:05:12,780 --> 00:05:16,559
them all turn on and then immediately

131
00:05:14,070 --> 00:05:18,900
turn back off unless I have some way to

132
00:05:16,560 --> 00:05:20,310
link these together and deal with them

133
00:05:18,900 --> 00:05:23,669
in a way that doesn't overwhelm my

134
00:05:20,310 --> 00:05:26,040
analysts and here's where I use graphs

135
00:05:23,669 --> 00:05:27,599
so there's two ways that I found that we

136
00:05:26,040 --> 00:05:29,550
can represent the events or the

137
00:05:27,600 --> 00:05:31,770
detection results that we already have

138
00:05:29,550 --> 00:05:33,930
as graphs on a walk you want to walk you

139
00:05:31,770 --> 00:05:36,150
through both of those and the first kind

140
00:05:33,930 --> 00:05:38,550
is a causality graph and here we're

141
00:05:36,150 --> 00:05:40,679
gonna take on two nouns and a verb and

142
00:05:38,550 --> 00:05:43,290
we're gonna use that to represent every

143
00:05:40,680 --> 00:05:44,940
event that goes through your system so

144
00:05:43,290 --> 00:05:47,310
imagine for a minute that you have an

145
00:05:44,940 --> 00:05:49,919
alert saying a large amount of data has

146
00:05:47,310 --> 00:05:51,630
left a machine coming from a process and

147
00:05:49,919 --> 00:05:53,310
going to an IP address on the Internet

148
00:05:51,630 --> 00:05:55,680
all right you could say well that's a

149
00:05:53,310 --> 00:05:58,560
noun right I've got a machine or a

150
00:05:55,680 --> 00:06:00,419
process it's doing a verb that's sending

151
00:05:58,560 --> 00:06:02,010
traffic and where is it sending it to

152
00:06:00,419 --> 00:06:04,440
it's sending it to an IP address right

153
00:06:02,010 --> 00:06:07,590
now in verb noun there a subject verb

154
00:06:04,440 --> 00:06:09,479
direct object and this is really useful

155
00:06:07,590 --> 00:06:11,909
for forensics and so this is where we

156
00:06:09,479 --> 00:06:13,919
started with graphs at a blue hat

157
00:06:11,910 --> 00:06:16,860
conference just like this about five

158
00:06:13,919 --> 00:06:18,120
years ago I got distracted open my

159
00:06:16,860 --> 00:06:21,030
laptop and started writing the

160
00:06:18,120 --> 00:06:23,610
translator that says 440 688 process

161
00:06:21,030 --> 00:06:26,099
start extract the nouns extract the verb

162
00:06:23,610 --> 00:06:27,720
put that into a graph and then what's

163
00:06:26,100 --> 00:06:29,700
the next most common event type I guess

164
00:06:27,720 --> 00:06:31,979
that would be a 46 24 successful logon

165
00:06:29,700 --> 00:06:34,110
and you work your way down the list of

166
00:06:31,979 --> 00:06:36,900
windows event logs turn them all into

167
00:06:34,110 --> 00:06:37,980
graphs nodes edges insert them and then

168
00:06:36,900 --> 00:06:40,229
voila

169
00:06:37,980 --> 00:06:42,240
have a bunch of dots and edges and I can

170
00:06:40,230 --> 00:06:44,430
take an event log and show it to someone

171
00:06:42,240 --> 00:06:48,780
and even an engineer who doesn't know

172
00:06:44,430 --> 00:06:51,840
that 46 88 means windows process start

173
00:06:48,780 --> 00:06:53,880
can follow causality and understand what

174
00:06:51,840 --> 00:06:56,369
happened before and after a malicious

175
00:06:53,880 --> 00:06:58,770
event but that isn't really what I want

176
00:06:56,370 --> 00:07:00,690
to do in order to solve you know the the

177
00:06:58,770 --> 00:07:02,729
things here right I'm not looking at

178
00:07:00,690 --> 00:07:05,130
forensics I'm talking about whether my

179
00:07:02,730 --> 00:07:10,500
detection results are useful and

180
00:07:05,130 --> 00:07:12,870
actionable so something else I can do is

181
00:07:10,500 --> 00:07:15,900
called a hyper graph now I'm gonna still

182
00:07:12,870 --> 00:07:18,720
take those nouns and verbs but I'm gonna

183
00:07:15,900 --> 00:07:20,700
extract entities instead and say if I

184
00:07:18,720 --> 00:07:23,370
have a process that's uploading I'm

185
00:07:20,700 --> 00:07:26,039
gonna represent that process uploading

186
00:07:23,370 --> 00:07:28,560
event that detection as one node with a

187
00:07:26,040 --> 00:07:30,600
timestamp and then I'm gonna pull out

188
00:07:28,560 --> 00:07:33,060
all of the entities associated with it

189
00:07:30,600 --> 00:07:35,550
and I have a process I have a user on a

190
00:07:33,060 --> 00:07:37,560
machine and I have the destination that

191
00:07:35,550 --> 00:07:40,710
it's sending traffic to and I'm gonna

192
00:07:37,560 --> 00:07:42,570
make this an undirected graph right I

193
00:07:40,710 --> 00:07:45,030
can get from that IP address to that

194
00:07:42,570 --> 00:07:47,610
detection or from that detection to that

195
00:07:45,030 --> 00:07:50,489
IP address and the mental model the

196
00:07:47,610 --> 00:07:52,890
reason that this has some affinity with

197
00:07:50,490 --> 00:07:55,140
me is that this looks a lot like how as

198
00:07:52,890 --> 00:07:57,390
an analyst I would pivot between one

199
00:07:55,140 --> 00:07:58,710
detection and maybe the user that was

200
00:07:57,390 --> 00:08:00,719
compromised or the host that was

201
00:07:58,710 --> 00:08:03,299
compromised and then go look at other

202
00:08:00,720 --> 00:08:06,150
things that happened on that user or on

203
00:08:03,300 --> 00:08:08,670
that host so if you remember my

204
00:08:06,150 --> 00:08:10,710
detection journey we started with just

205
00:08:08,670 --> 00:08:13,530
plain text alerts and our incident

206
00:08:10,710 --> 00:08:15,239
management system the next thing we did

207
00:08:13,530 --> 00:08:17,820
we schematized them and we broke out

208
00:08:15,240 --> 00:08:20,160
host names and users and process names

209
00:08:17,820 --> 00:08:21,960
and detection types well here's how we

210
00:08:20,160 --> 00:08:24,210
build that hyper graph we take a

211
00:08:21,960 --> 00:08:26,700
detection type on the top connect it to

212
00:08:24,210 --> 00:08:28,349
entities we do the same thing for the

213
00:08:26,700 --> 00:08:29,940
next detection type and we reuse

214
00:08:28,350 --> 00:08:33,210
entities that are already in the graph

215
00:08:29,940 --> 00:08:35,970
and likewise with the third and when

216
00:08:33,210 --> 00:08:38,669
we're done we end up with clusters or

217
00:08:35,970 --> 00:08:41,400
components disconnected portions of the

218
00:08:38,669 --> 00:08:42,659
graph that are all related to those

219
00:08:41,400 --> 00:08:45,689
detection x' and those entities that

220
00:08:42,659 --> 00:08:47,640
have something in common so this is a

221
00:08:45,690 --> 00:08:49,800
real graph of real alerts from office

222
00:08:47,640 --> 00:08:51,390
365 at a time when we had done

223
00:08:49,800 --> 00:08:54,390
penetration test with

224
00:08:51,390 --> 00:08:56,010
office365 red team and we had just

225
00:08:54,390 --> 00:08:59,400
worked through this hypergraph model and

226
00:08:56,010 --> 00:09:01,080
we had a hunch that if this model if we

227
00:08:59,400 --> 00:09:03,750
imported this data into this model that

228
00:09:01,080 --> 00:09:06,810
the adversary activity would pop out and

229
00:09:03,750 --> 00:09:08,280
be obvious and so there's two two

230
00:09:06,810 --> 00:09:11,520
patterns that you'll see throughout

231
00:09:08,280 --> 00:09:14,310
these graphs on their right each dot is

232
00:09:11,520 --> 00:09:16,590
a distinct detection type each gray box

233
00:09:14,310 --> 00:09:19,680
is an entity a user or a machine

234
00:09:16,590 --> 00:09:22,020
I have many distinct detection types

235
00:09:19,680 --> 00:09:25,199
firing on a relatively small number of

236
00:09:22,020 --> 00:09:28,470
entities that's red team behavior that's

237
00:09:25,200 --> 00:09:31,050
a true positive on the right I have one

238
00:09:28,470 --> 00:09:33,720
detection type firing on a whole bunch

239
00:09:31,050 --> 00:09:36,180
of machines and no other adversary

240
00:09:33,720 --> 00:09:38,610
activity there all right that in our

241
00:09:36,180 --> 00:09:41,310
experience and in our mostly homogeneous

242
00:09:38,610 --> 00:09:43,440
wide-scale environment that's a false

243
00:09:41,310 --> 00:09:45,359
positive this is a behavior change that

244
00:09:43,440 --> 00:09:47,250
happened on those machines that my

245
00:09:45,360 --> 00:09:49,380
system doesn't yet know about and I need

246
00:09:47,250 --> 00:09:52,980
to tune it or add rules to damp that

247
00:09:49,380 --> 00:09:54,270
down and so as a visual thinker seeing

248
00:09:52,980 --> 00:09:56,460
this and seeing things that I

249
00:09:54,270 --> 00:09:57,990
intuitively knew were true about my

250
00:09:56,460 --> 00:10:00,000
environment or about the pattern of

251
00:09:57,990 --> 00:10:02,130
detection that I would get seeing that

252
00:10:00,000 --> 00:10:04,860
pop out and suddenly be visual in a way

253
00:10:02,130 --> 00:10:09,060
that I can apply math to where I was

254
00:10:04,860 --> 00:10:11,460
amazing as a revolution to me and so we

255
00:10:09,060 --> 00:10:12,900
call that clustering I know for folks

256
00:10:11,460 --> 00:10:14,670
with a data science background those are

257
00:10:12,900 --> 00:10:16,740
components not clusters and those mean

258
00:10:14,670 --> 00:10:19,020
different things but I work with

259
00:10:16,740 --> 00:10:20,940
engineers I'm an engineer so clustering

260
00:10:19,020 --> 00:10:23,100
is a term that is a little more visceral

261
00:10:20,940 --> 00:10:25,650
and evokes the right image and in lay

262
00:10:23,100 --> 00:10:28,560
people here so we call each each of

263
00:10:25,650 --> 00:10:31,470
those in incidence and then what we do

264
00:10:28,560 --> 00:10:33,750
is we take that cluster we save it off

265
00:10:31,470 --> 00:10:35,340
and then our engineers look at all of

266
00:10:33,750 --> 00:10:37,860
the results that happened in that

267
00:10:35,340 --> 00:10:39,960
cluster together and they don't look at

268
00:10:37,860 --> 00:10:41,850
that in that graphical form they look at

269
00:10:39,960 --> 00:10:43,830
it almost like Excel right in tabular

270
00:10:41,850 --> 00:10:46,610
form where they can expand and collapse

271
00:10:43,830 --> 00:10:49,140
and link and filter and define terms

272
00:10:46,610 --> 00:10:50,670
because that's the interface that shows

273
00:10:49,140 --> 00:10:53,790
them all the context and information

274
00:10:50,670 --> 00:10:55,469
that they need densely and it works at

275
00:10:53,790 --> 00:10:57,990
adapts to their phone it adapts to their

276
00:10:55,470 --> 00:11:00,750
laptop or their desktop machine or very

277
00:10:57,990 --> 00:11:02,940
large interactive displays and then we

278
00:11:00,750 --> 00:11:05,220
also merge clusters that are identical

279
00:11:02,940 --> 00:11:07,800
so for example these clusters have

280
00:11:05,220 --> 00:11:10,110
the same detection zhan them linked to a

281
00:11:07,800 --> 00:11:12,420
handful of machines oftentimes that's

282
00:11:10,110 --> 00:11:14,670
the same maybe new environment behavior

283
00:11:12,420 --> 00:11:16,829
that's happening on many machines and so

284
00:11:14,670 --> 00:11:18,628
if we link that together the analyst can

285
00:11:16,829 --> 00:11:21,209
see that this is happening and create

286
00:11:18,629 --> 00:11:25,350
rules for it to improve our detection

287
00:11:21,209 --> 00:11:27,420
fidelity now once I have clusters I can

288
00:11:25,350 --> 00:11:29,129
take actions on them right one thing I

289
00:11:27,420 --> 00:11:31,019
can do is I can look for activity that

290
00:11:29,129 --> 00:11:33,629
is clustered together because its

291
00:11:31,019 --> 00:11:36,000
environment wide and those environment

292
00:11:33,629 --> 00:11:37,500
wide changes might be indicative of new

293
00:11:36,000 --> 00:11:38,939
features rolling out our new

294
00:11:37,500 --> 00:11:40,889
architecture decisions that have been

295
00:11:38,939 --> 00:11:43,170
made in the service and my system can

296
00:11:40,889 --> 00:11:45,120
automatically say you know this is one

297
00:11:43,170 --> 00:11:46,860
of two things this is either an

298
00:11:45,120 --> 00:11:50,339
adversary who has compromised

299
00:11:46,860 --> 00:11:51,779
350 machines simultaneously or this is a

300
00:11:50,339 --> 00:11:54,149
system behavior right this is a new

301
00:11:51,779 --> 00:11:56,879
change that rolled out I'm going to take

302
00:11:54,149 --> 00:11:59,069
an informed hypothesis create a rule for

303
00:11:56,879 --> 00:12:00,660
it and alert you that I've taken that

304
00:11:59,069 --> 00:12:02,610
action so that you have the opportunity

305
00:12:00,660 --> 00:12:04,860
to roll it back in case it's ransomware

306
00:12:02,610 --> 00:12:07,620
or a previously unknown vulnerability

307
00:12:04,860 --> 00:12:09,540
being exploited but the other really

308
00:12:07,620 --> 00:12:13,110
powerful thing we can do is we can alert

309
00:12:09,540 --> 00:12:16,740
when clusters breach a score and so now

310
00:12:13,110 --> 00:12:19,170
I can I can infer or synthesize a high

311
00:12:16,740 --> 00:12:21,480
fidelity paging alert from a collection

312
00:12:19,170 --> 00:12:23,729
of low fidelity behavioral or contextual

313
00:12:21,480 --> 00:12:26,699
detection results that we're all linked

314
00:12:23,730 --> 00:12:28,529
together by entities in common that begs

315
00:12:26,699 --> 00:12:32,099
the question of how do we score these

316
00:12:28,529 --> 00:12:34,949
things so our initial tab or initial

317
00:12:32,100 --> 00:12:37,620
attack at scoring these was to look at

318
00:12:34,949 --> 00:12:39,209
the topology of the cluster and we said

319
00:12:37,620 --> 00:12:40,829
I you know I know I have different kinds

320
00:12:39,209 --> 00:12:43,199
of detection results different fidelity

321
00:12:40,829 --> 00:12:45,508
ones so I'll say that any cluster that

322
00:12:43,199 --> 00:12:48,559
contains an atomic result or an alert

323
00:12:45,509 --> 00:12:50,879
result that cluster has to be triaged

324
00:12:48,559 --> 00:12:53,279
but anything that has just one

325
00:12:50,879 --> 00:12:55,649
behavioral result and nothing else in it

326
00:12:53,279 --> 00:12:57,000
you know that's anomalous activity but

327
00:12:55,649 --> 00:12:59,850
not malicious that happens all the time

328
00:12:57,000 --> 00:13:02,759
I'm gonna ignore those but if I ever get

329
00:12:59,850 --> 00:13:03,839
two different behavioral alerts two

330
00:13:02,759 --> 00:13:07,019
different behavioral detections

331
00:13:03,839 --> 00:13:08,910
low-fidelity on the same entity that

332
00:13:07,019 --> 00:13:10,559
whole cluster suddenly became in scope

333
00:13:08,910 --> 00:13:12,509
for me to look at because that's the

334
00:13:10,559 --> 00:13:14,100
beginning of a story right we're

335
00:13:12,509 --> 00:13:15,959
grounding ourselves in the concept of

336
00:13:14,100 --> 00:13:17,519
the kill chain and saying that for an

337
00:13:15,959 --> 00:13:18,199
adversary to be successful in our

338
00:13:17,519 --> 00:13:20,540
environment

339
00:13:18,200 --> 00:13:22,519
he or she needs to accomplish multiple

340
00:13:20,540 --> 00:13:24,349
stages of that kill chain between their

341
00:13:22,519 --> 00:13:26,510
entry point and their ultimate actions

342
00:13:24,350 --> 00:13:28,579
on objective so I'm going to look for

343
00:13:26,510 --> 00:13:30,620
evidence that a story is taking place

344
00:13:28,579 --> 00:13:32,870
across the entities in my environment

345
00:13:30,620 --> 00:13:34,459
and I'm gonna pay the most attention to

346
00:13:32,870 --> 00:13:37,760
places where that story is most

347
00:13:34,459 --> 00:13:40,369
prevalent and I'll use topology for

348
00:13:37,760 --> 00:13:42,260
scoring so I'll say for each detection

349
00:13:40,370 --> 00:13:43,910
type in that cluster I'll give it some

350
00:13:42,260 --> 00:13:46,579
points depending on if it's high

351
00:13:43,910 --> 00:13:49,069
fidelity or low fidelity and I'll divide

352
00:13:46,579 --> 00:13:51,349
that point score by the number of

353
00:13:49,070 --> 00:13:54,170
machines exhibiting or that detection

354
00:13:51,350 --> 00:13:57,050
and so like the pink example on the

355
00:13:54,170 --> 00:13:59,000
right in my previous slide if I have one

356
00:13:57,050 --> 00:14:02,209
behavior that happens on many many many

357
00:13:59,000 --> 00:14:04,730
machines more often than not that is a

358
00:14:02,209 --> 00:14:06,439
new system behavior that my detection

359
00:14:04,730 --> 00:14:09,410
system is overly sensitive to I want a

360
00:14:06,440 --> 00:14:12,709
downvote that's that detection x'

361
00:14:09,410 --> 00:14:14,630
significance but if I have anomalous

362
00:14:12,709 --> 00:14:16,670
behavior that's happening on only a

363
00:14:14,630 --> 00:14:18,230
handful of machines that is more

364
00:14:16,670 --> 00:14:21,800
significant to me and I want to upload

365
00:14:18,230 --> 00:14:23,779
that but it turns out that although this

366
00:14:21,800 --> 00:14:25,130
has been working really well for us for

367
00:14:23,779 --> 00:14:27,110
the last several years this has some

368
00:14:25,130 --> 00:14:28,550
disadvantages and so what I would like

369
00:14:27,110 --> 00:14:30,740
to share with you for the remainder of

370
00:14:28,550 --> 00:14:34,430
the talk is what are the disadvantages

371
00:14:30,740 --> 00:14:36,079
that we've seen there's six things that

372
00:14:34,430 --> 00:14:37,849
we're going to do this year to make up

373
00:14:36,079 --> 00:14:40,430
for those disadvantages and put in place

374
00:14:37,850 --> 00:14:41,630
a better scoring mechanism and then I'm

375
00:14:40,430 --> 00:14:43,880
gonna leave you with an open question

376
00:14:41,630 --> 00:14:47,360
that I have then I would love your help

377
00:14:43,880 --> 00:14:50,209
with as someone who is an engineer and

378
00:14:47,360 --> 00:14:52,430
not a statistician I unfortunately don't

379
00:14:50,209 --> 00:14:54,199
know the techniques that I don't know

380
00:14:52,430 --> 00:14:56,779
and so there's problems that I don't

381
00:14:54,199 --> 00:14:58,550
know how to solve but I'm confident that

382
00:14:56,779 --> 00:15:01,660
more than one person in this audience

383
00:14:58,550 --> 00:15:04,189
does and so I'd love to love to listen

384
00:15:01,660 --> 00:15:05,959
so one of the problems with my cluster

385
00:15:04,190 --> 00:15:08,089
topology scoring is that it treats every

386
00:15:05,959 --> 00:15:10,010
detection the same it doesn't look at

387
00:15:08,089 --> 00:15:13,160
things like business value or kill chain

388
00:15:10,010 --> 00:15:13,670
stage so why don't we take that into

389
00:15:13,160 --> 00:15:16,010
account

390
00:15:13,670 --> 00:15:17,599
so for when we think about scoring v2

391
00:15:16,010 --> 00:15:20,060
I'm still going to use my graph

392
00:15:17,600 --> 00:15:22,430
representation to identify linked alerts

393
00:15:20,060 --> 00:15:25,430
I'm still going to use some scoring or

394
00:15:22,430 --> 00:15:27,109
topology to decide what gets triaged but

395
00:15:25,430 --> 00:15:29,750
then I'm gonna rank these clusters more

396
00:15:27,110 --> 00:15:30,710
effectively based on what I know to be

397
00:15:29,750 --> 00:15:34,250
true about the end

398
00:15:30,710 --> 00:15:35,630
or the detections themselves so for

399
00:15:34,250 --> 00:15:37,160
example the first thing I can look at is

400
00:15:35,630 --> 00:15:38,570
kind of obvious and this in fact

401
00:15:37,160 --> 00:15:39,469
embarrassing man we didn't think of this

402
00:15:38,570 --> 00:15:42,110
in the first place

403
00:15:39,470 --> 00:15:44,779
why don't I map each detection to its

404
00:15:42,110 --> 00:15:46,399
associated kill change stage and then

405
00:15:44,779 --> 00:15:49,130
when I see a cluster that has multiple

406
00:15:46,399 --> 00:15:52,070
hits along the kill chain that tells

407
00:15:49,130 --> 00:15:53,870
more of that adversary story and it's

408
00:15:52,070 --> 00:15:55,839
more likely to be a true intrusion I

409
00:15:53,870 --> 00:15:59,120
want to promote those to the top

410
00:15:55,839 --> 00:16:01,490
likewise if I see evidence of an

411
00:15:59,120 --> 00:16:04,580
intrusion on a high privileged asset oh

412
00:16:01,490 --> 00:16:06,950
I care about that more than evidence of

413
00:16:04,580 --> 00:16:09,350
an intrusion on a low privileged asset

414
00:16:06,950 --> 00:16:11,270
or a low privileged user so again I want

415
00:16:09,350 --> 00:16:12,770
to rank some of those or bubble up

416
00:16:11,270 --> 00:16:14,750
promote some of those detection results

417
00:16:12,770 --> 00:16:19,670
based on the business impact of those

418
00:16:14,750 --> 00:16:21,830
entities likewise if I see many results

419
00:16:19,670 --> 00:16:24,079
in a short period of time across

420
00:16:21,830 --> 00:16:26,810
different entities those are more likely

421
00:16:24,080 --> 00:16:28,730
to be part of the same story when we do

422
00:16:26,810 --> 00:16:30,859
clustering we look back at seven days of

423
00:16:28,730 --> 00:16:32,270
data and we do that partially because we

424
00:16:30,860 --> 00:16:34,700
want to give our engineers the

425
00:16:32,270 --> 00:16:37,130
opportunity to say you know I'm pretty

426
00:16:34,700 --> 00:16:39,950
sure this is benign but I'm not positive

427
00:16:37,130 --> 00:16:42,800
so I'm not gonna mark this as system

428
00:16:39,950 --> 00:16:44,180
behavior or detection bug I don't have

429
00:16:42,800 --> 00:16:47,750
enough evidence to think that it's

430
00:16:44,180 --> 00:16:50,089
malicious or even discouraged activity

431
00:16:47,750 --> 00:16:53,089
maybe by an engineer I'm pretty sure

432
00:16:50,089 --> 00:16:55,880
this is okay and because these are

433
00:16:53,089 --> 00:16:58,430
humans human analysts looking at data I

434
00:16:55,880 --> 00:17:00,620
don't want to force them into kind of a

435
00:16:58,430 --> 00:17:01,339
binary model in their mind that is

436
00:17:00,620 --> 00:17:04,369
something is either

437
00:17:01,339 --> 00:17:06,350
absolutely fine or absolutely not okay

438
00:17:04,369 --> 00:17:08,448
I want to give them the grace to say you

439
00:17:06,349 --> 00:17:10,760
know I'm 60 percent certain this is fine

440
00:17:08,449 --> 00:17:12,260
none of my spidey senses going off I

441
00:17:10,760 --> 00:17:15,800
asked the rest of the team they think

442
00:17:12,260 --> 00:17:17,750
it's okay to but in the future if we see

443
00:17:15,800 --> 00:17:20,329
other detection results on that same

444
00:17:17,750 --> 00:17:23,059
entity we're gonna show those okay

445
00:17:20,329 --> 00:17:25,698
detection results again in context so

446
00:17:23,059 --> 00:17:28,459
that if that was the beginning of a

447
00:17:25,699 --> 00:17:31,760
story and I got a later chapter I have a

448
00:17:28,459 --> 00:17:34,580
second chance to revisit it so the seven

449
00:17:31,760 --> 00:17:36,830
days of data is important to me but I

450
00:17:34,580 --> 00:17:38,809
think sometimes it it combines data

451
00:17:36,830 --> 00:17:40,850
together or events together that aren't

452
00:17:38,809 --> 00:17:43,190
part of the same story right and if I

453
00:17:40,850 --> 00:17:44,090
see a small number of things temporarily

454
00:17:43,190 --> 00:17:47,450
clustered together

455
00:17:44,090 --> 00:17:49,010
I want to promote those up one of the

456
00:17:47,450 --> 00:17:50,990
other problems I have with my existing

457
00:17:49,010 --> 00:17:52,640
cluster detection logic or clustering

458
00:17:50,990 --> 00:17:55,400
logic is that I might be missing a

459
00:17:52,640 --> 00:17:57,110
detection that spans adversary activity

460
00:17:55,400 --> 00:18:00,380
going from one machine to another or one

461
00:17:57,110 --> 00:18:02,389
user to another and so what might be one

462
00:18:00,380 --> 00:18:05,270
very high-scoring cluster gets broken up

463
00:18:02,390 --> 00:18:06,320
into two and those clusters sync because

464
00:18:05,270 --> 00:18:08,330
they're they're missing that

465
00:18:06,320 --> 00:18:09,860
relationship and so something that we

466
00:18:08,330 --> 00:18:13,010
need to solve in the coming year is how

467
00:18:09,860 --> 00:18:16,639
can I infer that activity on asset a

468
00:18:13,010 --> 00:18:18,980
machine a user a could be linked to this

469
00:18:16,640 --> 00:18:21,320
activity in this other cluster because I

470
00:18:18,980 --> 00:18:23,600
know that there are some aspects of how

471
00:18:21,320 --> 00:18:25,129
my data center is designed that could

472
00:18:23,600 --> 00:18:26,809
allow privilege elevation from one to

473
00:18:25,130 --> 00:18:31,760
the other in a way that maybe I

474
00:18:26,809 --> 00:18:33,860
currently can't detect finally detection

475
00:18:31,760 --> 00:18:35,890
likelihood and non likelihood is

476
00:18:33,860 --> 00:18:37,879
something that we can incorporate so

477
00:18:35,890 --> 00:18:40,370
imagine that you had a detection that

478
00:18:37,880 --> 00:18:44,210
said hey a new security sensitive

479
00:18:40,370 --> 00:18:45,620
registry key has been added not all of

480
00:18:44,210 --> 00:18:47,390
those registry keys are going to be

481
00:18:45,620 --> 00:18:49,279
commonly touched right if you were to

482
00:18:47,390 --> 00:18:50,990
build the list of auto start entry

483
00:18:49,279 --> 00:18:53,270
points registry keys that can be used

484
00:18:50,990 --> 00:18:56,120
for persistence that is an extremely

485
00:18:53,270 --> 00:18:58,850
long list but day to day you really only

486
00:18:56,120 --> 00:19:01,820
see five to ten of those locations get

487
00:18:58,850 --> 00:19:05,689
touched new scheduled tasks new service

488
00:19:01,820 --> 00:19:08,059
is being installed new printers or dll's

489
00:19:05,690 --> 00:19:11,960
very rarely do you see a new com

490
00:19:08,059 --> 00:19:14,210
registration being created so I don't

491
00:19:11,960 --> 00:19:16,460
want to treat all of those new auto

492
00:19:14,210 --> 00:19:19,130
start entry point registry he alerts the

493
00:19:16,460 --> 00:19:21,230
same I want to treat the ones that we're

494
00:19:19,130 --> 00:19:23,539
a new service is installed differently

495
00:19:21,230 --> 00:19:26,539
because those fire quite frequently in

496
00:19:23,539 --> 00:19:28,190
fact versus if I see a new comma object

497
00:19:26,539 --> 00:19:30,408
get registered even though that's the

498
00:19:28,190 --> 00:19:32,779
same detection that is much less likely

499
00:19:30,409 --> 00:19:35,539
to be benign behavior and I want to

500
00:19:32,779 --> 00:19:37,039
promote that differently then I have the

501
00:19:35,539 --> 00:19:39,770
opposite problem though too

502
00:19:37,039 --> 00:19:41,899
I already get a detection for a service

503
00:19:39,770 --> 00:19:43,520
being installed and I get a detection

504
00:19:41,899 --> 00:19:46,250
for the registry key that that creates

505
00:19:43,520 --> 00:19:48,260
those two detection link up and promote

506
00:19:46,250 --> 00:19:51,470
that cluster to get triaged every time

507
00:19:48,260 --> 00:19:52,700
these guys always come in pairs and so

508
00:19:51,470 --> 00:19:54,770
something that we need to do over the

509
00:19:52,700 --> 00:19:57,590
next year is to look backwards through

510
00:19:54,770 --> 00:20:00,139
our data set to identify these depend

511
00:19:57,590 --> 00:20:02,299
events that always fire together cluster

512
00:20:00,140 --> 00:20:07,929
them treat them like one events and rank

513
00:20:02,299 --> 00:20:11,299
them appropriately finally last slide I

514
00:20:07,929 --> 00:20:14,600
don't know how to combine all of those

515
00:20:11,299 --> 00:20:16,010
scores on a given cluster I'd imagine I

516
00:20:14,600 --> 00:20:18,649
have one squaring mechanism that says

517
00:20:16,010 --> 00:20:20,870
for this cluster I see three things in

518
00:20:18,650 --> 00:20:22,279
different parts of the kill chain so

519
00:20:20,870 --> 00:20:23,799
that gives me one score that I want to

520
00:20:22,279 --> 00:20:26,980
apply to the cluster as a whole

521
00:20:23,799 --> 00:20:29,840
next I have detections that say oh this

522
00:20:26,980 --> 00:20:32,539
asset implicated in one of your

523
00:20:29,840 --> 00:20:36,049
detection results is very high value to

524
00:20:32,539 --> 00:20:37,520
the business promote that something else

525
00:20:36,049 --> 00:20:39,500
looks over here and says that registry

526
00:20:37,520 --> 00:20:42,549
key that's touched that registry key

527
00:20:39,500 --> 00:20:46,130
gets touched all the time down vote that

528
00:20:42,549 --> 00:20:49,279
how should i incorporate those

529
00:20:46,130 --> 00:20:51,799
individual detection boosts and you know

530
00:20:49,279 --> 00:20:53,090
boosts and sinks and the overall score

531
00:20:51,799 --> 00:20:56,950
that I want to apply to the cluster

532
00:20:53,090 --> 00:20:59,120
because of its relationships or the

533
00:20:56,950 --> 00:21:00,620
progress along the kill chain that I saw

534
00:20:59,120 --> 00:21:01,969
I know there's somebody in the audience

535
00:21:00,620 --> 00:21:04,580
that can help me with this I'd love to

536
00:21:01,970 --> 00:21:06,680
chat with you afterwards and that's it

537
00:21:04,580 --> 00:21:13,239
for me thank you

538
00:21:06,680 --> 00:21:13,239
[Applause]

