1
00:00:00,000 --> 00:00:08,700
[Music]

2
00:00:09,679 --> 00:00:12,679
thank you

3
00:00:12,900 --> 00:00:16,320
hello uh thank you for being here I'm so

4
00:00:16,320 --> 00:00:18,119
excited to be here in Tel Aviv for my

5
00:00:18,119 --> 00:00:19,980
first time presenting my name is Justin

6
00:00:19,980 --> 00:00:22,140
I'm a security researcher at Microsoft

7
00:00:22,140 --> 00:00:23,880
and I work in our threat Intelligence

8
00:00:23,880 --> 00:00:25,500
Division so I work across all of

9
00:00:25,500 --> 00:00:27,359
Microsoft's products and data to

10
00:00:27,359 --> 00:00:28,800
identify and track threat activity

11
00:00:28,800 --> 00:00:32,040
hoping to disrupt it and increase the

12
00:00:32,040 --> 00:00:33,540
cost for our attackers the Microsoft's

13
00:00:33,540 --> 00:00:34,620
customers

14
00:00:34,620 --> 00:00:36,719
uh I'm glad to see people came back from

15
00:00:36,719 --> 00:00:38,219
break I was wondering how that was going

16
00:00:38,219 --> 00:00:40,920
to work out so we'll jump straight in So

17
00:00:40,920 --> 00:00:42,420
today we're going to be talking about a

18
00:00:42,420 --> 00:00:44,520
threat actor that Microsoft has named

19
00:00:44,520 --> 00:00:47,040
strontium strontium is one of the

20
00:00:47,040 --> 00:00:49,379
busiest and most active threat actors we

21
00:00:49,379 --> 00:00:51,899
track within Microsoft and they were

22
00:00:51,899 --> 00:00:54,000
responsible for a number of different

23
00:00:54,000 --> 00:00:56,160
threat activity or activity groups that

24
00:00:56,160 --> 00:00:58,559
we follow we're only going to dive into

25
00:00:58,559 --> 00:01:01,020
one of these today with some examples

26
00:01:01,020 --> 00:01:03,120
but there's a lot that you can dig into

27
00:01:03,120 --> 00:01:05,339
with these actors they most commonly

28
00:01:05,339 --> 00:01:07,140
overlap with two other names that are

29
00:01:07,140 --> 00:01:09,840
common in industry for apt-28 or fancy

30
00:01:09,840 --> 00:01:11,280
bear so if you're looking up other

31
00:01:11,280 --> 00:01:13,080
reporting or looking to get background

32
00:01:13,080 --> 00:01:15,119
on this actor it would be good to dive

33
00:01:15,119 --> 00:01:18,360
into these various reports now who does

34
00:01:18,360 --> 00:01:20,640
this actor Target this actor focuses a

35
00:01:20,640 --> 00:01:22,560
lot on Western countries the United

36
00:01:22,560 --> 00:01:25,259
States Europe but also in areas in

37
00:01:25,259 --> 00:01:27,900
Central Asia South America and some

38
00:01:27,900 --> 00:01:29,640
other geographies and smaller numbers

39
00:01:29,640 --> 00:01:32,340
they do a lot of different sectors and

40
00:01:32,340 --> 00:01:34,200
targeting they're interested in

41
00:01:34,200 --> 00:01:36,240
government and Military organizations

42
00:01:36,240 --> 00:01:38,400
any anything that touches government

43
00:01:38,400 --> 00:01:41,040
organizations which commonly is ngos or

44
00:01:41,040 --> 00:01:44,040
igos or think tanks defense contractors

45
00:01:44,040 --> 00:01:47,040
primarily in the US and Europe and then

46
00:01:47,040 --> 00:01:49,200
pretty much anything where there is a

47
00:01:49,200 --> 00:01:51,299
counter-russia narrative which is a

48
00:01:51,299 --> 00:01:52,979
really interesting strand of targeting

49
00:01:52,979 --> 00:01:55,740
when you look at this actor that also

50
00:01:55,740 --> 00:01:57,380
extends into

51
00:01:57,380 --> 00:02:00,840
journalists and other different smaller

52
00:02:00,840 --> 00:02:03,899
types of targeting

53
00:02:03,899 --> 00:02:05,700
so we're going to talk mostly about a

54
00:02:05,700 --> 00:02:07,439
malware family today called we call

55
00:02:07,439 --> 00:02:10,258
Fusion drive it's also known as trellix

56
00:02:10,258 --> 00:02:12,540
and open source reporting Fusion Drive

57
00:02:12,540 --> 00:02:15,300
is a lightweight tool that the actors

58
00:02:15,300 --> 00:02:17,580
use to collect system information and

59
00:02:17,580 --> 00:02:20,520
stage down additional code to compromise

60
00:02:20,520 --> 00:02:22,620
systems the interesting part about

61
00:02:22,620 --> 00:02:24,420
Fusion drive for Microsoft is if you

62
00:02:24,420 --> 00:02:26,520
look at the diagram there's the actor on

63
00:02:26,520 --> 00:02:28,680
the top and the victim on the bottom and

64
00:02:28,680 --> 00:02:30,780
smack dab in the middle is Microsoft

65
00:02:30,780 --> 00:02:34,379
this tool uses Microsoft services and

66
00:02:34,379 --> 00:02:37,379
platforms to nna fraudulent and an

67
00:02:37,379 --> 00:02:38,580
abusive way

68
00:02:38,580 --> 00:02:42,000
in order to try to obfuscate uh and

69
00:02:42,000 --> 00:02:44,040
detection from the victim

70
00:02:44,040 --> 00:02:46,200
this is a perfect opportunity for

71
00:02:46,200 --> 00:02:48,660
Microsoft in that it allows us to gain a

72
00:02:48,660 --> 00:02:50,340
lot of visibility over the actor and

73
00:02:50,340 --> 00:02:52,980
stay on top and detect that and do a

74
00:02:52,980 --> 00:02:55,440
global shutdown on this campaign whereas

75
00:02:55,440 --> 00:02:58,680
uh when they're not using our platform

76
00:02:58,680 --> 00:03:01,319
we may be limited to other methods so we

77
00:03:01,319 --> 00:03:03,180
can be very strategic here and this

78
00:03:03,180 --> 00:03:05,580
raises the interest and priority of this

79
00:03:05,580 --> 00:03:07,319
type of activity we're going to talk

80
00:03:07,319 --> 00:03:08,760
about several of these components for

81
00:03:08,760 --> 00:03:10,200
Fusion Drive

82
00:03:10,200 --> 00:03:11,819
before going into the specific

83
00:03:11,819 --> 00:03:13,500
components there's more I'd like to give

84
00:03:13,500 --> 00:03:15,420
acknowledgments to a few other research

85
00:03:15,420 --> 00:03:16,739
blogs that have been put out on this

86
00:03:16,739 --> 00:03:18,900
some of this is going to be overlapping

87
00:03:18,900 --> 00:03:21,239
content from what's in these blogs so

88
00:03:21,239 --> 00:03:22,739
this is really really good background

89
00:03:22,739 --> 00:03:24,420
reading or if you're going to go get

90
00:03:24,420 --> 00:03:25,920
additional information and you want to

91
00:03:25,920 --> 00:03:28,560
dive in for yourself good place to start

92
00:03:28,560 --> 00:03:29,879
here

93
00:03:29,879 --> 00:03:31,920
so in theme with the conference we're

94
00:03:31,920 --> 00:03:34,019
going to go back in time and we're going

95
00:03:34,019 --> 00:03:36,239
to go back in time to November of 2021

96
00:03:36,239 --> 00:03:38,280
October and November and we're going to

97
00:03:38,280 --> 00:03:40,500
do that for a couple of reasons most

98
00:03:40,500 --> 00:03:43,080
prominently that this campaign has a lot

99
00:03:43,080 --> 00:03:44,819
of publicly available information for

100
00:03:44,819 --> 00:03:46,379
people who are interested in this and

101
00:03:46,379 --> 00:03:48,360
want to look at the stuff after the fact

102
00:03:48,360 --> 00:03:51,180
but also because it's one instance where

103
00:03:51,180 --> 00:03:53,280
Microsoft was able to investigate the

104
00:03:53,280 --> 00:03:54,959
entire length of the intrusion from the

105
00:03:54,959 --> 00:03:57,000
very early stages to the very late

106
00:03:57,000 --> 00:03:58,560
stages with incident response and

107
00:03:58,560 --> 00:04:00,780
investigations and we were able to put

108
00:04:00,780 --> 00:04:03,180
together the entire attack chain and

109
00:04:03,180 --> 00:04:05,340
show it in a very simple and Exemplar

110
00:04:05,340 --> 00:04:07,620
manner there have been several campaigns

111
00:04:07,620 --> 00:04:09,420
since November of 2021 all the way up

112
00:04:09,420 --> 00:04:11,939
until middle of 2022 and even continuing

113
00:04:11,939 --> 00:04:15,000
in different variants today but this is

114
00:04:15,000 --> 00:04:17,040
the most I would say the best example

115
00:04:17,040 --> 00:04:20,339
end end of what we saw with this actor

116
00:04:20,339 --> 00:04:22,440
this is my mandated slide to tell you

117
00:04:22,440 --> 00:04:24,720
that we did in fact notify our customers

118
00:04:24,720 --> 00:04:26,520
when they are compromised or targeted on

119
00:04:26,520 --> 00:04:28,740
their online services so if you are

120
00:04:28,740 --> 00:04:29,940
wondering if you were one of these

121
00:04:29,940 --> 00:04:33,300
people you would know at this point and

122
00:04:33,300 --> 00:04:36,600
this is something we do going forward

123
00:04:36,600 --> 00:04:38,280
so we're going to start this campaign

124
00:04:38,280 --> 00:04:40,860
looking at the phishing email so unlike

125
00:04:40,860 --> 00:04:42,780
the phishing training that you may

126
00:04:42,780 --> 00:04:45,120
receive in your organization this

127
00:04:45,120 --> 00:04:47,040
phishing email actually looked really

128
00:04:47,040 --> 00:04:49,520
good I'm a former offensive security

129
00:04:49,520 --> 00:04:51,960
engineer and I spent a lot of time

130
00:04:51,960 --> 00:04:54,419
fishing organizations as part of my

131
00:04:54,419 --> 00:04:57,720
exercises and work I hated fishing and I

132
00:04:57,720 --> 00:05:00,000
hated fishing because to get it right

133
00:05:00,000 --> 00:05:03,840
you have to get every detail correct

134
00:05:03,840 --> 00:05:07,320
the slightest inconsistency will tip off

135
00:05:07,320 --> 00:05:09,479
a human and once you tip off a human you

136
00:05:09,479 --> 00:05:11,220
expose your most vulnerable point of

137
00:05:11,220 --> 00:05:13,280
your operation when you have no access

138
00:05:13,280 --> 00:05:16,500
in this specific case the email looked

139
00:05:16,500 --> 00:05:19,259
very very good it leveraged a compromise

140
00:05:19,259 --> 00:05:21,479
sender which was a known organization

141
00:05:21,479 --> 00:05:23,220
that would normally communicate with the

142
00:05:23,220 --> 00:05:24,600
victims that were targeted in this

143
00:05:24,600 --> 00:05:27,479
campaign it leveraged a known Persona in

144
00:05:27,479 --> 00:05:30,120
that organization and Alias and

145
00:05:30,120 --> 00:05:31,740
everything about this email the

146
00:05:31,740 --> 00:05:33,600
signature block the contact information

147
00:05:33,600 --> 00:05:37,020
they spoofed this the the grammar the

148
00:05:37,020 --> 00:05:39,960
sentences it would all fit this matched

149
00:05:39,960 --> 00:05:41,880
exactly the normal interactions that

150
00:05:41,880 --> 00:05:43,199
this account would have with these

151
00:05:43,199 --> 00:05:45,199
organizations

152
00:05:45,199 --> 00:05:48,720
uh the the email was sent to a number of

153
00:05:48,720 --> 00:05:51,360
organizations in Western Asia and Europe

154
00:05:51,360 --> 00:05:54,660
particularly the Balkans

155
00:05:54,660 --> 00:05:57,060
attached to this email was this really

156
00:05:57,060 --> 00:05:58,860
horrendous budget spreadsheet I'm very

157
00:05:58,860 --> 00:06:00,479
glad I do not work in accounting because

158
00:06:00,479 --> 00:06:01,919
if this is what accounting looks like

159
00:06:01,919 --> 00:06:05,100
I'll stick with computer code in this

160
00:06:05,100 --> 00:06:09,360
case the spreadsheet was not the exactly

161
00:06:09,360 --> 00:06:11,759
being used for accounting what most

162
00:06:11,759 --> 00:06:13,500
stuck out to us when we discovered this

163
00:06:13,500 --> 00:06:15,660
and started to do our analysis was that

164
00:06:15,660 --> 00:06:17,400
when you opened it it immediately

165
00:06:17,400 --> 00:06:20,160
started downloading something else in

166
00:06:20,160 --> 00:06:22,319
any time that you see Excel start

167
00:06:22,319 --> 00:06:23,759
downloading something else without

168
00:06:23,759 --> 00:06:28,680
asking you that's bad and so we uh we uh

169
00:06:28,680 --> 00:06:30,780
this jumped out to us and immediately

170
00:06:30,780 --> 00:06:33,960
triggered a priority analysis on behalf

171
00:06:33,960 --> 00:06:36,840
of Microsoft and so you should be asking

172
00:06:36,840 --> 00:06:39,840
where is the affectionate gold bar where

173
00:06:39,840 --> 00:06:41,340
is the thing that I have to click to

174
00:06:41,340 --> 00:06:44,880
allow content to run and it's not here

175
00:06:44,880 --> 00:06:46,800
and so when we start to dive deeper into

176
00:06:46,800 --> 00:06:49,800
the attachment everything looks very

177
00:06:49,800 --> 00:06:52,020
benign actually there's there's no

178
00:06:52,020 --> 00:06:56,060
macros there's no kind of traditional

179
00:06:56,060 --> 00:06:58,080
vulnerability vectors you would look for

180
00:06:58,080 --> 00:07:00,720
that's executing code but there is one

181
00:07:00,720 --> 00:07:03,600
unique element of this code and it was

182
00:07:03,600 --> 00:07:06,120
the implementation or the addition of

183
00:07:06,120 --> 00:07:09,720
something called a custom UI element

184
00:07:09,720 --> 00:07:12,419
in office there is the ability to

185
00:07:12,419 --> 00:07:14,759
customize the UI through ribbons and

186
00:07:14,759 --> 00:07:17,940
other sort of vectors and this custom UI

187
00:07:17,940 --> 00:07:20,340
element this capability follows the

188
00:07:20,340 --> 00:07:23,099
standard open XML schema and this

189
00:07:23,099 --> 00:07:24,960
particular custom UI element was

190
00:07:24,960 --> 00:07:27,360
interesting because it implemented an on

191
00:07:27,360 --> 00:07:30,060
load Handler which means that when the

192
00:07:30,060 --> 00:07:33,240
UI element is loaded inside of excel it

193
00:07:33,240 --> 00:07:36,840
immediately triggers a callback to

194
00:07:36,840 --> 00:07:39,840
whatever is pointed at and on load well

195
00:07:39,840 --> 00:07:41,400
as you can see on the screen here the

196
00:07:41,400 --> 00:07:43,020
thing that is pointed out in the on load

197
00:07:43,020 --> 00:07:46,020
parameter is not actually local it's

198
00:07:46,020 --> 00:07:49,020
hosted on a remote spreadsheet and so

199
00:07:49,020 --> 00:07:51,180
when the document was opened the custom

200
00:07:51,180 --> 00:07:53,220
UI element rendered

201
00:07:53,220 --> 00:07:55,080
and then downloaded a secondary

202
00:07:55,080 --> 00:07:56,819
spreadsheet

203
00:07:56,819 --> 00:07:59,039
the interesting part about this was that

204
00:07:59,039 --> 00:08:01,139
secondary spreadsheet is not loaded

205
00:08:01,139 --> 00:08:03,900
inside a protected view hence the no

206
00:08:03,900 --> 00:08:06,900
gold bar and so when we discovered this

207
00:08:06,900 --> 00:08:09,960
the teams across Microsoft Works to

208
00:08:09,960 --> 00:08:14,840
analyze this and we got a cve cve

209
00:08:14,840 --> 00:08:18,720
2021-42292 and this was a released

210
00:08:18,720 --> 00:08:21,120
uh very quickly after the campaign was

211
00:08:21,120 --> 00:08:24,000
observed in the wild and the cve the

212
00:08:24,000 --> 00:08:25,680
vulnerability is essentially that an

213
00:08:25,680 --> 00:08:28,440
external attacker can leverage custom UI

214
00:08:28,440 --> 00:08:31,259
features to load remote code outside of

215
00:08:31,259 --> 00:08:34,440
a protected View and when you're reading

216
00:08:34,440 --> 00:08:36,240
patch notes if you see acknowledgments

217
00:08:36,240 --> 00:08:38,339
and it says Mystic or Microsoft thread

218
00:08:38,339 --> 00:08:39,958
Intel that usually means we're finding

219
00:08:39,958 --> 00:08:41,279
attackers doing things in the wild

220
00:08:41,279 --> 00:08:43,500
because that's our job and in this case

221
00:08:43,500 --> 00:08:45,720
we we went live with this without

222
00:08:45,720 --> 00:08:47,880
providing a lot of the contextual threat

223
00:08:47,880 --> 00:08:49,440
information because the campaigns were

224
00:08:49,440 --> 00:08:52,019
ongoing and we were working to disrupt

225
00:08:52,019 --> 00:08:54,060
the actor but I'm here to tell you more

226
00:08:54,060 --> 00:08:55,320
of the story today

227
00:08:55,320 --> 00:08:57,540
so in addition to bypassing protected

228
00:08:57,540 --> 00:08:59,459
view what was notable about this

229
00:08:59,459 --> 00:09:00,420
document

230
00:09:00,420 --> 00:09:02,519
was that the actors gained an additional

231
00:09:02,519 --> 00:09:04,980
benefit by staging their malicious code

232
00:09:04,980 --> 00:09:06,779
or multiple levels of their malicious

233
00:09:06,779 --> 00:09:10,440
code not in the original fish as I said

234
00:09:10,440 --> 00:09:12,959
I hate fishing it's a terrible terrible

235
00:09:12,959 --> 00:09:15,360
thing to do and

236
00:09:15,360 --> 00:09:17,459
when you're most vulnerable like that

237
00:09:17,459 --> 00:09:19,620
you want to show as little of your hand

238
00:09:19,620 --> 00:09:22,140
as possible in the early stages

239
00:09:22,140 --> 00:09:24,839
by doing this method of staging down

240
00:09:24,839 --> 00:09:26,940
multiple levels of code it enabled the

241
00:09:26,940 --> 00:09:29,700
attackers to provide control over their

242
00:09:29,700 --> 00:09:31,980
secondary payload that first document

243
00:09:31,980 --> 00:09:34,260
with the vulnerability it had to call

244
00:09:34,260 --> 00:09:36,600
out to get the second document if they

245
00:09:36,600 --> 00:09:38,399
monitored their logs they could see

246
00:09:38,399 --> 00:09:40,380
anyone who was researching or

247
00:09:40,380 --> 00:09:42,720
investigating the infrastructure they

248
00:09:42,720 --> 00:09:44,820
could see sandboxes detonating that may

249
00:09:44,820 --> 00:09:47,399
detect the activity they may see victims

250
00:09:47,399 --> 00:09:49,380
who were just mindlessly trying to

251
00:09:49,380 --> 00:09:51,540
explore what just got downloaded on

252
00:09:51,540 --> 00:09:53,760
their system but they can see it which

253
00:09:53,760 --> 00:09:55,500
allows them an affordable control over

254
00:09:55,500 --> 00:09:57,120
that campaign

255
00:09:57,120 --> 00:09:58,920
by getting that control they can then

256
00:09:58,920 --> 00:10:00,660
protect the operational security going

257
00:10:00,660 --> 00:10:02,760
forward and so they actually gained a

258
00:10:02,760 --> 00:10:04,860
lot of benefit through this staging

259
00:10:04,860 --> 00:10:07,740
process with Excel

260
00:10:07,740 --> 00:10:10,380
now when you stage you also introduce

261
00:10:10,380 --> 00:10:12,779
hurdles for sandboxes if you can

262
00:10:12,779 --> 00:10:14,880
properly Implement staging in your

263
00:10:14,880 --> 00:10:17,160
campaigns such as in this case sandbox

264
00:10:17,160 --> 00:10:18,899
tools may never download that secondary

265
00:10:18,899 --> 00:10:20,880
payload depending on how they render

266
00:10:20,880 --> 00:10:24,060
documents and that prohibits the

267
00:10:24,060 --> 00:10:26,279
effective detection early in the attack

268
00:10:26,279 --> 00:10:28,140
cycle

269
00:10:28,140 --> 00:10:30,000
so this was the second document that

270
00:10:30,000 --> 00:10:31,620
would be downloaded and displayed to the

271
00:10:31,620 --> 00:10:33,959
user there is no cool budget diagram on

272
00:10:33,959 --> 00:10:35,519
this one it's just blank which should

273
00:10:35,519 --> 00:10:37,800
naturally erase some questions but by

274
00:10:37,800 --> 00:10:39,720
the time that this is loaded things are

275
00:10:39,720 --> 00:10:41,700
not going well for the victim and so

276
00:10:41,700 --> 00:10:44,160
naturally the actor is a little less

277
00:10:44,160 --> 00:10:45,959
cautious here

278
00:10:45,959 --> 00:10:47,640
now when we did analysis of this

279
00:10:47,640 --> 00:10:49,620
document some really interesting things

280
00:10:49,620 --> 00:10:52,200
did in fact stand out I can tell you

281
00:10:52,200 --> 00:10:54,180
that the victim that executed this

282
00:10:54,180 --> 00:10:57,120
document their name wasn't Harry and so

283
00:10:57,120 --> 00:10:58,920
it naturally begged the question as to

284
00:10:58,920 --> 00:11:01,019
why we saw Paz for Harry

285
00:11:01,019 --> 00:11:02,940
seemingly the attackers actually left

286
00:11:02,940 --> 00:11:05,220
multiple artifacts in this document from

287
00:11:05,220 --> 00:11:07,920
their build or developer systems which

288
00:11:07,920 --> 00:11:11,399
were really interesting one that the

289
00:11:11,399 --> 00:11:14,519
uses the name of Harry you can actually

290
00:11:14,519 --> 00:11:16,500
start to track a build and development

291
00:11:16,500 --> 00:11:18,180
artifacts if you do this enough over

292
00:11:18,180 --> 00:11:20,579
time and over scale and this provides a

293
00:11:20,579 --> 00:11:22,200
really interesting tool Mark for the

294
00:11:22,200 --> 00:11:24,899
actors additionally there was a string

295
00:11:24,899 --> 00:11:27,060
in the in the document that referenced

296
00:11:27,060 --> 00:11:30,320
an e Drive particularly a folder called

297
00:11:30,320 --> 00:11:34,380
office-v.5 slash test it looks a lot

298
00:11:34,380 --> 00:11:36,240
like that this document was maybe part

299
00:11:36,240 --> 00:11:38,519
of some sort of Builder and some sort of

300
00:11:38,519 --> 00:11:40,440
capability that the actor was using to

301
00:11:40,440 --> 00:11:42,779
generate these documents why is that

302
00:11:42,779 --> 00:11:44,459
important it could speak to some

303
00:11:44,459 --> 00:11:47,720
sophistication and attribution elements

304
00:11:47,720 --> 00:11:49,920
naturally if someone's just building a

305
00:11:49,920 --> 00:11:51,959
document by hand versus being provided a

306
00:11:51,959 --> 00:11:54,000
capability that builds custom documents

307
00:11:54,000 --> 00:11:57,480
for them with zero days it is more

308
00:11:57,480 --> 00:11:59,100
interesting and speaks to where this

309
00:11:59,100 --> 00:12:00,660
could have come from

310
00:12:00,660 --> 00:12:03,360
now what did this do this document did

311
00:12:03,360 --> 00:12:05,279
additional staging activities so now

312
00:12:05,279 --> 00:12:06,959
we're you know stage one or two

313
00:12:06,959 --> 00:12:08,459
depending on if we start counting at

314
00:12:08,459 --> 00:12:10,920
zero and in this case the extra staging

315
00:12:10,920 --> 00:12:13,320
activity was part of an exploit chain

316
00:12:13,320 --> 00:12:15,959
for an additional vulnerability now at

317
00:12:15,959 --> 00:12:17,579
the time that this was done in the wild

318
00:12:17,579 --> 00:12:19,560
this vulnerability was no longer a zero

319
00:12:19,560 --> 00:12:21,300
day it was actually already patched at

320
00:12:21,300 --> 00:12:23,820
the very beginning of 2021 and so they

321
00:12:23,820 --> 00:12:25,980
were targeting users that were still

322
00:12:25,980 --> 00:12:27,540
vulnerable to this

323
00:12:27,540 --> 00:12:30,079
however this vulnerability

324
00:12:30,079 --> 00:12:34,320
2021-40444 it does require I'm sorry it

325
00:12:34,320 --> 00:12:36,360
works inside of perfected view so when

326
00:12:36,360 --> 00:12:38,700
this vulnerability was released the user

327
00:12:38,700 --> 00:12:40,320
would have to click enable content for

328
00:12:40,320 --> 00:12:42,360
it to work so by chaining these two

329
00:12:42,360 --> 00:12:44,100
vulnerabilities now the attacker

330
00:12:44,100 --> 00:12:46,079
effectively had a zero click code

331
00:12:46,079 --> 00:12:48,120
execution on the system

332
00:12:48,120 --> 00:12:50,279
this vulnerability is a it's a

333
00:12:50,279 --> 00:12:52,200
vulnerability in the mshtml engine

334
00:12:52,200 --> 00:12:54,480
inside of office and particularly it was

335
00:12:54,480 --> 00:12:56,760
weaponized here inside of excel but

336
00:12:56,760 --> 00:12:58,320
popularly when this vulnerability was

337
00:12:58,320 --> 00:13:00,320
released it was most often seen in word

338
00:13:00,320 --> 00:13:04,019
and this vulnerability calls out and

339
00:13:04,019 --> 00:13:06,720
retrieves additional uh files from the

340
00:13:06,720 --> 00:13:08,820
internet which then essentially trigger

341
00:13:08,820 --> 00:13:12,839
a certain file to be executed as a dll

342
00:13:12,839 --> 00:13:15,720
allowing for code execution now really

343
00:13:15,720 --> 00:13:17,220
interesting is that a tool mark inside

344
00:13:17,220 --> 00:13:19,139
of this particular document and their

345
00:13:19,139 --> 00:13:21,540
implementation of this vulnerability was

346
00:13:21,540 --> 00:13:24,899
that they had a custom CLS ID here used

347
00:13:24,899 --> 00:13:26,820
which was different than what we had

348
00:13:26,820 --> 00:13:28,920
seen in campaigns in the wild or in any

349
00:13:28,920 --> 00:13:30,959
example templates online so again

350
00:13:30,959 --> 00:13:32,459
another tool marker that really allowed

351
00:13:32,459 --> 00:13:34,139
us to hone in and track activity long

352
00:13:34,139 --> 00:13:35,700
term

353
00:13:35,700 --> 00:13:37,019
we're going to do a quick demo I'm not

354
00:13:37,019 --> 00:13:38,700
brave enough to do a live demo so we'll

355
00:13:38,700 --> 00:13:42,180
watch our our GIF play the in this case

356
00:13:42,180 --> 00:13:43,680
I'm basically showing that this is a

357
00:13:43,680 --> 00:13:46,079
fully sorry a not fully patched system

358
00:13:46,079 --> 00:13:48,660
this is a very old patch very old system

359
00:13:48,660 --> 00:13:51,000
and that I'm running Excel with all of

360
00:13:51,000 --> 00:13:53,399
these standard things turned on so you

361
00:13:53,399 --> 00:13:55,139
can see that we have prompts turned on

362
00:13:55,139 --> 00:13:57,899
we we have only the defaults and

363
00:13:57,899 --> 00:13:59,880
protected view is in fact enabled in

364
00:13:59,880 --> 00:14:02,279
this Excel instance

365
00:14:02,279 --> 00:14:04,500
and so when I open the malicious

366
00:14:04,500 --> 00:14:06,720
document the stage zero that was

367
00:14:06,720 --> 00:14:08,700
attached to the phishing email you can

368
00:14:08,700 --> 00:14:10,500
see that in the background I immediately

369
00:14:10,500 --> 00:14:12,480
download another spreadsheet behind you

370
00:14:12,480 --> 00:14:14,360
can see Wireshark fired a whole bunch of

371
00:14:14,360 --> 00:14:18,060
malicious activity and then calc pops

372
00:14:18,060 --> 00:14:20,700
zero collect zero interaction

373
00:14:20,700 --> 00:14:23,760
thank you don't think me think strontium

374
00:14:23,760 --> 00:14:26,100
they uh they gave us this entire

375
00:14:26,100 --> 00:14:27,959
entertainment today wherever they are

376
00:14:27,959 --> 00:14:30,600
and so in this case this is obviously a

377
00:14:30,600 --> 00:14:32,700
lab Recreation of this vulnerability so

378
00:14:32,700 --> 00:14:34,200
don't don't look at the IP addresses

379
00:14:34,200 --> 00:14:35,760
that's not the real IP on the internet

380
00:14:35,760 --> 00:14:38,160
however it is a perfect demonstration of

381
00:14:38,160 --> 00:14:39,839
how this was happening in the wild and

382
00:14:39,839 --> 00:14:41,760
why this was so successful in the

383
00:14:41,760 --> 00:14:45,019
campaigns that we saw it used

384
00:14:45,180 --> 00:14:48,779
so after this after they exploited cve

385
00:14:48,779 --> 00:14:53,160
2021 4044 we saw them then load

386
00:14:53,160 --> 00:14:55,380
something called Fusion drive and fusion

387
00:14:55,380 --> 00:14:57,480
Drive starts with its own custom and

388
00:14:57,480 --> 00:15:00,120
implemented loader so again we're at

389
00:15:00,120 --> 00:15:01,560
stage two or three we're going on like

390
00:15:01,560 --> 00:15:04,620
number four here it's getting deep and

391
00:15:04,620 --> 00:15:07,500
this loader was a custom utility created

392
00:15:07,500 --> 00:15:10,079
by the actors PE file

393
00:15:10,079 --> 00:15:13,199
that essentially decrypts private key or

394
00:15:13,199 --> 00:15:16,800
decrypts a blob from uh from memory

395
00:15:16,800 --> 00:15:19,860
using an RSA key it downloads another

396
00:15:19,860 --> 00:15:23,940
stage from the internet again so yay

397
00:15:23,940 --> 00:15:26,820
more staging decrypts that with the key

398
00:15:26,820 --> 00:15:29,519
that I got previously and interestingly

399
00:15:29,519 --> 00:15:32,100
it does integrity checks how many actors

400
00:15:32,100 --> 00:15:33,959
do you see doing Integrity checks on

401
00:15:33,959 --> 00:15:35,339
their downloaded payloads to make sure

402
00:15:35,339 --> 00:15:36,959
that it's downloading the right thing

403
00:15:36,959 --> 00:15:38,399
and that it's downloading what they

404
00:15:38,399 --> 00:15:39,959
expected it hasn't been tampered with

405
00:15:39,959 --> 00:15:42,000
it's another kind of interesting marker

406
00:15:42,000 --> 00:15:44,519
of the sophistication or what this actor

407
00:15:44,519 --> 00:15:46,560
was worried about and planning for

408
00:15:46,560 --> 00:15:48,360
after that it just does some standard

409
00:15:48,360 --> 00:15:49,980
memory allocation and injection

410
00:15:49,980 --> 00:15:52,139
ultimately resulting in the downloaded

411
00:15:52,139 --> 00:15:55,740
payload being executed

412
00:15:55,740 --> 00:15:57,480
when Fusion Drive is downloaded and

413
00:15:57,480 --> 00:16:00,420
executed it immediately starts doing a

414
00:16:00,420 --> 00:16:02,339
de-obfuscation routine so it is

415
00:16:02,339 --> 00:16:04,079
naturally obfuscated when it comes down

416
00:16:04,079 --> 00:16:06,920
in memory and it does steps to

417
00:16:06,920 --> 00:16:09,959
resolve the windows API it does this to

418
00:16:09,959 --> 00:16:12,959
avoid static analysis by endpoint tools

419
00:16:12,959 --> 00:16:15,120
by not having those already resolved

420
00:16:15,120 --> 00:16:17,339
like in a standard functional Manner and

421
00:16:17,339 --> 00:16:19,199
then it eventually does a kind of Brute

422
00:16:19,199 --> 00:16:21,480
Force resolution of the offset of the

423
00:16:21,480 --> 00:16:23,760
embedded executable inside of this blob

424
00:16:23,760 --> 00:16:26,399
so there's multiple stages and multiple

425
00:16:26,399 --> 00:16:29,579
levels of embedding involved here

426
00:16:29,579 --> 00:16:31,440
but eventually when it finds the

427
00:16:31,440 --> 00:16:34,320
embedded offset it will then go ahead

428
00:16:34,320 --> 00:16:37,259
and execute that embedded offset

429
00:16:37,259 --> 00:16:39,300
now this looks basically like every

430
00:16:39,300 --> 00:16:41,040
other remote access tool you've seen an

431
00:16:41,040 --> 00:16:43,620
actor use at a high level it essentially

432
00:16:43,620 --> 00:16:45,720
does some things to make sure that

433
00:16:45,720 --> 00:16:47,160
there's no other versions of it running

434
00:16:47,160 --> 00:16:48,899
actors don't like when their tool has

435
00:16:48,899 --> 00:16:51,000
like 15 copies of itself running on the

436
00:16:51,000 --> 00:16:53,160
box so they do things like creating a

437
00:16:53,160 --> 00:16:55,500
mutax they go through the process of

438
00:16:55,500 --> 00:16:57,240
de-obfuscating and decrypting all the

439
00:16:57,240 --> 00:16:58,800
strings that they don't want people to

440
00:16:58,800 --> 00:17:02,160
see with static analysis in this case it

441
00:17:02,160 --> 00:17:04,559
generates a unique bot ID using a very

442
00:17:04,559 --> 00:17:06,179
specific reg scheme in the registry that

443
00:17:06,179 --> 00:17:08,640
represents the machine that it's on and

444
00:17:08,640 --> 00:17:11,160
then it enters a sort of endless loop in

445
00:17:11,160 --> 00:17:12,660
which it'll just continuously perform

446
00:17:12,660 --> 00:17:14,040
these activities

447
00:17:14,040 --> 00:17:17,220
now inside of this Loop the malware will

448
00:17:17,220 --> 00:17:19,079
upload the system information on its

449
00:17:19,079 --> 00:17:22,559
initial run up to Microsoft's back-end

450
00:17:22,559 --> 00:17:24,660
platform and services so in the versions

451
00:17:24,660 --> 00:17:28,020
that we saw in 2021 this capability was

452
00:17:28,020 --> 00:17:30,360
abusing OneDrive and it would use the

453
00:17:30,360 --> 00:17:32,820
graph API inside of Microsoft which is a

454
00:17:32,820 --> 00:17:35,160
unique API that allows you to interact

455
00:17:35,160 --> 00:17:37,679
across Microsoft services

456
00:17:37,679 --> 00:17:40,020
to interact with OneDrive

457
00:17:40,020 --> 00:17:41,700
so it uploads the system information

458
00:17:41,700 --> 00:17:44,400
that it encrypted into OneDrive and then

459
00:17:44,400 --> 00:17:46,200
it looks in OneDrive to see if there's a

460
00:17:46,200 --> 00:17:48,720
task available for it and if there is a

461
00:17:48,720 --> 00:17:51,480
task available there are only two tasks

462
00:17:51,480 --> 00:17:53,760
that were possible in this capability a

463
00:17:53,760 --> 00:17:56,100
number one or a number two not very cool

464
00:17:56,100 --> 00:17:58,380
of it but in this case you could either

465
00:17:58,380 --> 00:18:00,240
get more system information check if

466
00:18:00,240 --> 00:18:02,539
anything changed or you could execute

467
00:18:02,539 --> 00:18:07,020
yet another stage and so in this case it

468
00:18:07,020 --> 00:18:08,940
provided that capability and as soon as

469
00:18:08,940 --> 00:18:11,280
the task would be executed it would

470
00:18:11,280 --> 00:18:12,780
delete the task and post the task

471
00:18:12,780 --> 00:18:15,299
results to OneDrive so essentially

472
00:18:15,299 --> 00:18:16,860
implementing a full command and control

473
00:18:16,860 --> 00:18:20,220
structure using OneDrive

474
00:18:20,220 --> 00:18:22,380
now there are some interesting notable

475
00:18:22,380 --> 00:18:24,000
aspects of this tool that we like to

476
00:18:24,000 --> 00:18:25,320
walk through and it's interesting

477
00:18:25,320 --> 00:18:27,480
because at a big level this this tool is

478
00:18:27,480 --> 00:18:29,280
actually pretty simple I mean it's a

479
00:18:29,280 --> 00:18:31,020
beaconing loop with two possible

480
00:18:31,020 --> 00:18:33,059
capabilities and so when you start to

481
00:18:33,059 --> 00:18:34,919
get into looking at how do we know like

482
00:18:34,919 --> 00:18:37,679
after we have 15 or 20 copies of this

483
00:18:37,679 --> 00:18:39,720
how do we still know that this is Fusion

484
00:18:39,720 --> 00:18:41,520
drive and not like another malware

485
00:18:41,520 --> 00:18:43,799
family from another actor and they there

486
00:18:43,799 --> 00:18:45,419
are some of these notable aspects that

487
00:18:45,419 --> 00:18:47,940
we rely on to do this in one particular

488
00:18:47,940 --> 00:18:50,460
way the way that this tool does string

489
00:18:50,460 --> 00:18:53,340
decryption uh was was kind of unique

490
00:18:53,340 --> 00:18:55,620
it's not fully unique but it was notable

491
00:18:55,620 --> 00:18:57,720
and the way that it does it is that

492
00:18:57,720 --> 00:18:59,940
rather than having a single xor key that

493
00:18:59,940 --> 00:19:02,580
it decrypts you know all strings with it

494
00:19:02,580 --> 00:19:05,520
actually had a per string xor key and it

495
00:19:05,520 --> 00:19:07,020
would call their xor decrypt routine

496
00:19:07,020 --> 00:19:08,940
with a different key on every string

497
00:19:08,940 --> 00:19:11,640
that was embedded into the file that's

498
00:19:11,640 --> 00:19:13,260
not really effective against debugging

499
00:19:13,260 --> 00:19:15,600
or memory analysis so maybe they were

500
00:19:15,600 --> 00:19:17,820
just trying to annoy the person using

501
00:19:17,820 --> 00:19:21,299
Ida I'm not really sure uh but you know

502
00:19:21,299 --> 00:19:23,340
with a little bit of Ida python or a

503
00:19:23,340 --> 00:19:24,480
little bit of scripting you can pull

504
00:19:24,480 --> 00:19:25,679
these all out

505
00:19:25,679 --> 00:19:27,840
and you can see some of the strings that

506
00:19:27,840 --> 00:19:30,059
we can start to resolve by looking at

507
00:19:30,059 --> 00:19:31,919
this some of the tasking results and

508
00:19:31,919 --> 00:19:33,480
commands you can see the embedded user

509
00:19:33,480 --> 00:19:34,500
agent that it used for its

510
00:19:34,500 --> 00:19:35,580
Communications

511
00:19:35,580 --> 00:19:38,120
now what was really interesting from uh

512
00:19:38,120 --> 00:19:40,260
engineering and attacker mindset

513
00:19:40,260 --> 00:19:41,820
perspective that there were two strings

514
00:19:41,820 --> 00:19:45,600
in the file that aren't xor encoded so

515
00:19:45,600 --> 00:19:46,980
if you're naturally encoding everything

516
00:19:46,980 --> 00:19:49,799
like why leave out two the two that they

517
00:19:49,799 --> 00:19:52,919
did not encode was the client ID and the

518
00:19:52,919 --> 00:19:55,380
refresh token and the refresh token and

519
00:19:55,380 --> 00:19:57,600
client ID are unique credential values

520
00:19:57,600 --> 00:19:59,640
in Microsoft that are used to

521
00:19:59,640 --> 00:20:02,059
communicate via oauth or establish

522
00:20:02,059 --> 00:20:05,820
authentication via oauth to OneDrive

523
00:20:05,820 --> 00:20:08,100
so we assess that most likely the reason

524
00:20:08,100 --> 00:20:09,840
that these were plain text and not part

525
00:20:09,840 --> 00:20:12,360
of the compiled xor routine was that

526
00:20:12,360 --> 00:20:14,580
they were using a builder like we saw in

527
00:20:14,580 --> 00:20:16,799
the previous slides to just stamp and

528
00:20:16,799 --> 00:20:18,900
patch in these values as they wanted to

529
00:20:18,900 --> 00:20:21,419
run new campaigns again speaking to the

530
00:20:21,419 --> 00:20:23,640
fact that they have Automation and code

531
00:20:23,640 --> 00:20:26,340
there built to allow them to continue to

532
00:20:26,340 --> 00:20:28,559
run campaigns

533
00:20:28,559 --> 00:20:30,600
so when you look at the oauth and graph

534
00:20:30,600 --> 00:20:32,039
interactions this is the what's most

535
00:20:32,039 --> 00:20:34,080
interesting to us because this is where

536
00:20:34,080 --> 00:20:36,360
our opportunity space comes in and our

537
00:20:36,360 --> 00:20:38,280
ability to protect our customers comes

538
00:20:38,280 --> 00:20:39,480
in

539
00:20:39,480 --> 00:20:41,940
strontium leverage fraudulently created

540
00:20:41,940 --> 00:20:44,280
newly registered Microsoft Outlook

541
00:20:44,280 --> 00:20:46,500
accounts to build and create oauth apps

542
00:20:46,500 --> 00:20:48,780
on our platform and then use those oauth

543
00:20:48,780 --> 00:20:51,000
apps to establish Communications and

544
00:20:51,000 --> 00:20:53,640
authentication so in order to even do

545
00:20:53,640 --> 00:20:55,559
this malware they had to go to Microsoft

546
00:20:55,559 --> 00:20:58,020
create an account and create an oauth

547
00:20:58,020 --> 00:20:59,940
application and then generate a refresh

548
00:20:59,940 --> 00:21:01,020
token

549
00:21:01,020 --> 00:21:02,820
so that process is really important

550
00:21:02,820 --> 00:21:04,620
because it provides us a lot of signals

551
00:21:04,620 --> 00:21:06,720
that we can use in the early stage prior

552
00:21:06,720 --> 00:21:08,820
to the campaigns even being launched to

553
00:21:08,820 --> 00:21:11,640
identify potential strontium activity

554
00:21:11,640 --> 00:21:13,500
then they hard code these values into

555
00:21:13,500 --> 00:21:15,120
the fusion Drive malware they

556
00:21:15,120 --> 00:21:16,500
authenticate and they make all the calls

557
00:21:16,500 --> 00:21:18,480
to OneDrive so you can see some examples

558
00:21:18,480 --> 00:21:20,580
of the URLs that they would pass to the

559
00:21:20,580 --> 00:21:24,360
graph API in order to perform OneDrive

560
00:21:24,360 --> 00:21:26,280
interaction and they always had this

561
00:21:26,280 --> 00:21:28,020
static embedded user agent which again

562
00:21:28,020 --> 00:21:29,840
comes in very handy when you start doing

563
00:21:29,840 --> 00:21:33,780
analysis on graph data

564
00:21:33,780 --> 00:21:36,000
so at Microsoft you know a client ID and

565
00:21:36,000 --> 00:21:38,220
a refresh token uh particularly a client

566
00:21:38,220 --> 00:21:39,960
ID doesn't mean much to the average

567
00:21:39,960 --> 00:21:41,700
reverse engineer but at Microsoft we can

568
00:21:41,700 --> 00:21:43,500
peel that back a layer and we can

569
00:21:43,500 --> 00:21:45,600
actually go in and look at the oauth

570
00:21:45,600 --> 00:21:47,760
application that was created and who

571
00:21:47,760 --> 00:21:49,559
created it and start working backwards

572
00:21:49,559 --> 00:21:51,900
there so our investigation took us down

573
00:21:51,900 --> 00:21:54,360
this road and we identified Mr Jeremy

574
00:21:54,360 --> 00:21:57,900
vide outlook.com was used to create this

575
00:21:57,900 --> 00:21:59,940
particular oauth application

576
00:21:59,940 --> 00:22:02,640
it was created uh roughly a month or two

577
00:22:02,640 --> 00:22:04,500
there before the campaigns began

578
00:22:04,500 --> 00:22:07,140
launching and was only ever interacted

579
00:22:07,140 --> 00:22:10,200
with from commercial VPN Services if

580
00:22:10,200 --> 00:22:12,179
anyone has ever tracked apt-28 or

581
00:22:12,179 --> 00:22:13,679
strontium before that'll look really

582
00:22:13,679 --> 00:22:15,780
familiar because they carry out almost

583
00:22:15,780 --> 00:22:19,380
all of their operations using iot

584
00:22:19,380 --> 00:22:22,440
devices or commercial VPN services

585
00:22:22,440 --> 00:22:24,419
and so it started to help build toward

586
00:22:24,419 --> 00:22:25,919
that actor fingerprint that we looked

587
00:22:25,919 --> 00:22:28,080
for there was a lot of other aspects of

588
00:22:28,080 --> 00:22:29,220
this account that were clearly

589
00:22:29,220 --> 00:22:31,200
fraudulent such as the fact that it was

590
00:22:31,200 --> 00:22:34,320
created weeks before the intrusion it

591
00:22:34,320 --> 00:22:35,940
uses commercial VPN for all its

592
00:22:35,940 --> 00:22:37,380
interactions like we mentioned it had a

593
00:22:37,380 --> 00:22:38,880
burner phone number all kind of

594
00:22:38,880 --> 00:22:40,679
pretending that they were located in

595
00:22:40,679 --> 00:22:42,900
Germany

596
00:22:42,900 --> 00:22:44,700
now when this malware would run it would

597
00:22:44,700 --> 00:22:46,020
generate generate system information

598
00:22:46,020 --> 00:22:48,600
this is another unique aspect of fusion

599
00:22:48,600 --> 00:22:50,880
drive in this this routine that they use

600
00:22:50,880 --> 00:22:53,039
to generate system information it

601
00:22:53,039 --> 00:22:55,020
particularly looks for three distinct

602
00:22:55,020 --> 00:22:57,960
steps on the system so it will query all

603
00:22:57,960 --> 00:23:00,179
the running processes using the NT query

604
00:23:00,179 --> 00:23:02,820
system information function which is uh

605
00:23:02,820 --> 00:23:04,860
interesting to see how they did that it

606
00:23:04,860 --> 00:23:08,039
will pull the CLR or the common language

607
00:23:08,039 --> 00:23:10,020
runtime version of the system

608
00:23:10,020 --> 00:23:11,400
essentially looking at what version

609
00:23:11,400 --> 00:23:13,440
of.net you have installed on your system

610
00:23:13,440 --> 00:23:15,559
which is important for them from a

611
00:23:15,559 --> 00:23:18,600
prevention or detection perspective and

612
00:23:18,600 --> 00:23:20,100
then it will get your OS version in

613
00:23:20,100 --> 00:23:22,020
particularly your patch version and send

614
00:23:22,020 --> 00:23:24,299
all that up to OneDrive

615
00:23:24,299 --> 00:23:26,880
when it gets issued the correct code it

616
00:23:26,880 --> 00:23:29,340
essentially will pull that code down and

617
00:23:29,340 --> 00:23:31,200
just do a standard create thread crawl

618
00:23:31,200 --> 00:23:34,080
so this is nothing too too Nifty on how

619
00:23:34,080 --> 00:23:36,299
they execute code standard position

620
00:23:36,299 --> 00:23:40,080
independent code to create a thread

621
00:23:40,080 --> 00:23:42,600
so the next stage that came down yet

622
00:23:42,600 --> 00:23:45,299
another stage after Fusion drive this is

623
00:23:45,299 --> 00:23:47,220
what they would put on OneDrive and task

624
00:23:47,220 --> 00:23:49,919
for download this stage was another

625
00:23:49,919 --> 00:23:52,620
portable executable file that allowed

626
00:23:52,620 --> 00:23:56,700
them to instantiate and run a debt.net

627
00:23:56,700 --> 00:24:00,000
binary and so essentially this was a you

628
00:24:00,000 --> 00:24:03,059
know written in C plus and the C plus

629
00:24:03,059 --> 00:24:06,059
would instantiate a net runtime it would

630
00:24:06,059 --> 00:24:08,640
extract an embedded blob and run that

631
00:24:08,640 --> 00:24:10,860
embedded.net binary inside of the con

632
00:24:10,860 --> 00:24:15,240
inside of the CLR the.net run space

633
00:24:15,240 --> 00:24:16,799
and this is a technique that's been

634
00:24:16,799 --> 00:24:20,100
popularized over the years amongst

635
00:24:20,100 --> 00:24:23,159
various offensive teams and penetration

636
00:24:23,159 --> 00:24:25,980
testers and red teamers

637
00:24:25,980 --> 00:24:28,020
from there the c-sharp binary that was

638
00:24:28,020 --> 00:24:30,659
embedded was a very similar it was very

639
00:24:30,659 --> 00:24:33,900
similar to open source code that allows

640
00:24:33,900 --> 00:24:37,220
you to run Powershell from inside of.net

641
00:24:37,220 --> 00:24:39,840
they modified some aspects of how they

642
00:24:39,840 --> 00:24:43,380
do this string Bay 64ing and decoding

643
00:24:43,380 --> 00:24:46,080
which was unique enough to make it

644
00:24:46,080 --> 00:24:47,940
interesting but nothing particularly

645
00:24:47,940 --> 00:24:50,159
special here at the end of the day this

646
00:24:50,159 --> 00:24:52,020
code essentially launches Powershell

647
00:24:52,020 --> 00:24:54,179
Empire calling out to a domain that

648
00:24:54,179 --> 00:24:55,980
looks a lot like the first one but no

649
00:24:55,980 --> 00:24:58,440
it's dot org instead of.net so they

650
00:24:58,440 --> 00:25:00,120
they've purchased two domains with the

651
00:25:00,120 --> 00:25:03,260
same top level

652
00:25:03,539 --> 00:25:05,880
so what did we do with this you know we

653
00:25:05,880 --> 00:25:07,440
talked a lot about malware and all this

654
00:25:07,440 --> 00:25:08,880
thread Intel stuff but the most

655
00:25:08,880 --> 00:25:10,320
interesting and most important part

656
00:25:10,320 --> 00:25:12,539
about this is how Microsoft takes thread

657
00:25:12,539 --> 00:25:15,179
information and leverages it to globally

658
00:25:15,179 --> 00:25:17,520
protect the platform so moving beyond

659
00:25:17,520 --> 00:25:20,460
iocs and fancy names and moving into

660
00:25:20,460 --> 00:25:22,440
hardening our platform which is the most

661
00:25:22,440 --> 00:25:23,880
important thing

662
00:25:23,880 --> 00:25:26,400
so before we do that we saw a lot more

663
00:25:26,400 --> 00:25:29,760
Fusion drive it wasn't just in 2021 we

664
00:25:29,760 --> 00:25:33,059
saw this used in 2022 most notably in

665
00:25:33,059 --> 00:25:35,700
early 2022 we saw another campaign using

666
00:25:35,700 --> 00:25:37,260
office documents in this case it was

667
00:25:37,260 --> 00:25:39,360
PowerPoint documents attempting to

668
00:25:39,360 --> 00:25:42,720
exploit a slightly version of cve 2021

669
00:25:42,720 --> 00:25:45,179
4044 at this time it's pretty well

670
00:25:45,179 --> 00:25:46,980
patched we don't assess that this was

671
00:25:46,980 --> 00:25:48,600
overly

672
00:25:48,600 --> 00:25:49,200
um

673
00:25:49,200 --> 00:25:51,419
successful however

674
00:25:51,419 --> 00:25:53,039
it was interesting to see them continue

675
00:25:53,039 --> 00:25:55,320
to try to use that and then after that

676
00:25:55,320 --> 00:25:57,960
we saw them continue to deploy this tool

677
00:25:57,960 --> 00:25:59,580
actually interactively via other

678
00:25:59,580 --> 00:26:02,159
on-premises intrusions so we start to

679
00:26:02,159 --> 00:26:03,480
see a merge between some of their

680
00:26:03,480 --> 00:26:06,539
exploit campaigns on Exchange and Via

681
00:26:06,539 --> 00:26:08,159
VPN concentrators and they actually

682
00:26:08,159 --> 00:26:09,600
start leaving this behind for

683
00:26:09,600 --> 00:26:12,360
persistence as a long hold capability

684
00:26:12,360 --> 00:26:14,340
which was a big change to when they

685
00:26:14,340 --> 00:26:16,919
would just use it for initial access and

686
00:26:16,919 --> 00:26:18,720
in this case we saw this throughout

687
00:26:18,720 --> 00:26:21,539
Europe and also in some of the

688
00:26:21,539 --> 00:26:23,760
operations we saw them carry out after

689
00:26:23,760 --> 00:26:26,580
the war in Ukraine

690
00:26:26,580 --> 00:26:29,760
now Microsoft does have a history of uh

691
00:26:29,760 --> 00:26:32,039
chasing down actors that are using the

692
00:26:32,039 --> 00:26:34,380
graph API and OneDrive and teams and

693
00:26:34,380 --> 00:26:35,940
we've been pretty vocal about chasing

694
00:26:35,940 --> 00:26:37,559
actors that do this we put out several

695
00:26:37,559 --> 00:26:40,559
blogs and tweets a little back story

696
00:26:40,559 --> 00:26:43,380
here though is that in 2020 uh the first

697
00:26:43,380 --> 00:26:45,360
time we ever started to investigate

698
00:26:45,360 --> 00:26:47,640
abuse of the graph API maybe not the

699
00:26:47,640 --> 00:26:48,960
first time but one of the earliest times

700
00:26:48,960 --> 00:26:50,700
we started investigating it it was

701
00:26:50,700 --> 00:26:53,039
actually because of strontium and it was

702
00:26:53,039 --> 00:26:55,140
because of strontium using Powershell

703
00:26:55,140 --> 00:26:58,320
Empire with a particular command control

704
00:26:58,320 --> 00:27:00,779
mechanisms that used Microsoft services

705
00:27:00,779 --> 00:27:03,360
so strontium started us down the road of

706
00:27:03,360 --> 00:27:04,980
investigating and detecting actors on

707
00:27:04,980 --> 00:27:07,020
the graph and many years later here we

708
00:27:07,020 --> 00:27:09,179
are continuing to detect them but you

709
00:27:09,179 --> 00:27:10,799
should note that we've kind of gone on

710
00:27:10,799 --> 00:27:13,380
this journey of uh of using the graph

711
00:27:13,380 --> 00:27:15,600
API and the data that we have on it to

712
00:27:15,600 --> 00:27:18,059
detect malware so what does that look

713
00:27:18,059 --> 00:27:19,440
like what does it look like behind the

714
00:27:19,440 --> 00:27:21,900
curtain one of the world's largest

715
00:27:21,900 --> 00:27:24,720
platforms to detect this well it's it's

716
00:27:24,720 --> 00:27:27,059
not all that interesting actually it

717
00:27:27,059 --> 00:27:28,679
looks a lot like standard Fraud and

718
00:27:28,679 --> 00:27:31,020
Abuse if anyone ever worked in product

719
00:27:31,020 --> 00:27:33,480
abuse before you had a couple people

720
00:27:33,480 --> 00:27:36,539
it's a thankless job so I thank you it's

721
00:27:36,539 --> 00:27:38,039
one of the most difficult jobs coming

722
00:27:38,039 --> 00:27:39,779
from a security researcher perspective

723
00:27:39,779 --> 00:27:42,179
uh whatever day I look at a Fraud and

724
00:27:42,179 --> 00:27:43,919
Abuse problem which threat actors are

725
00:27:43,919 --> 00:27:46,020
often a Fraud and Abuse problem at the

726
00:27:46,020 --> 00:27:48,120
end of the day and

727
00:27:48,120 --> 00:27:52,020
uh this is very very difficult to do due

728
00:27:52,020 --> 00:27:54,059
to the balance of maintaining the

729
00:27:54,059 --> 00:27:57,360
business uh and also Defending Your

730
00:27:57,360 --> 00:27:59,760
platform in this case with the Fraud and

731
00:27:59,760 --> 00:28:01,679
Abuse triggers that most often fired on

732
00:28:01,679 --> 00:28:03,539
strontium attributed accounts when we

733
00:28:03,539 --> 00:28:05,520
went back and did it were things like

734
00:28:05,520 --> 00:28:07,080
newly registered accounts that

735
00:28:07,080 --> 00:28:09,080
immediately stood up oauth applications

736
00:28:09,080 --> 00:28:11,700
only being interacted with from

737
00:28:11,700 --> 00:28:13,740
commercial VPN infrastructure with

738
00:28:13,740 --> 00:28:17,640
python user agents things like you know

739
00:28:17,640 --> 00:28:19,679
specific proof and backup details that

740
00:28:19,679 --> 00:28:21,659
never really lined up or enriched you

741
00:28:21,659 --> 00:28:22,860
know when you enriched it all the

742
00:28:22,860 --> 00:28:24,779
different ways it didn't make a lot of

743
00:28:24,779 --> 00:28:27,659
sense and then interestingly enough when

744
00:28:27,659 --> 00:28:29,640
they would create oauth applications

745
00:28:29,640 --> 00:28:31,679
there was something that was just

746
00:28:31,679 --> 00:28:33,299
special enough about how they created

747
00:28:33,299 --> 00:28:35,520
them that created an extremely high

748
00:28:35,520 --> 00:28:37,740
signal in our data allowing us to work

749
00:28:37,740 --> 00:28:41,039
backwards retrospectively and create a

750
00:28:41,039 --> 00:28:42,659
detection going forward to identify

751
00:28:42,659 --> 00:28:44,640
these

752
00:28:44,640 --> 00:28:46,620
once that oauth app was starting to be

753
00:28:46,620 --> 00:28:49,020
used in the wild there was more data for

754
00:28:49,020 --> 00:28:50,940
us to look at so we could look at the

755
00:28:50,940 --> 00:28:53,460
graph API interactions for particular

756
00:28:53,460 --> 00:28:55,559
oauth apps and we would see things like

757
00:28:55,559 --> 00:28:58,200
periodicity a kind of standard Universal

758
00:28:58,200 --> 00:29:00,299
analytic that works well for command and

759
00:29:00,299 --> 00:29:02,340
control there was a little bit of a you

760
00:29:02,340 --> 00:29:04,440
know sleep interval in this tool but at

761
00:29:04,440 --> 00:29:06,179
the end of the day when you have a

762
00:29:06,179 --> 00:29:07,980
victim that's you know beaconing Out

763
00:29:07,980 --> 00:29:10,320
full speed all day long out to the graph

764
00:29:10,320 --> 00:29:13,700
API single oauth app single user agent

765
00:29:13,700 --> 00:29:16,440
in very specific ways it stands out

766
00:29:16,440 --> 00:29:18,240
quite a bit when you isolate it in the

767
00:29:18,240 --> 00:29:20,460
graph API data

768
00:29:20,460 --> 00:29:22,740
again they would also use oauth apps

769
00:29:22,740 --> 00:29:24,179
with these kind of Outlook accounts

770
00:29:24,179 --> 00:29:26,039
which stood out and then there were

771
00:29:26,039 --> 00:29:28,200
strong indications of control so when

772
00:29:28,200 --> 00:29:29,760
you're looking at one oauth application

773
00:29:29,760 --> 00:29:32,399
and all of its interactions are from one

774
00:29:32,399 --> 00:29:34,679
IP address in the world with a fake

775
00:29:34,679 --> 00:29:36,539
Firefox user agent and then all of a

776
00:29:36,539 --> 00:29:38,100
sudden some python stuff from commercial

777
00:29:38,100 --> 00:29:41,240
VPN like it creates a very strong

778
00:29:41,240 --> 00:29:43,620
indication that this is not legitimate

779
00:29:43,620 --> 00:29:45,600
activity and it allowed us to start

780
00:29:45,600 --> 00:29:49,140
shutting these down in near real time so

781
00:29:49,140 --> 00:29:51,000
not only did we work backwards to find

782
00:29:51,000 --> 00:29:53,220
all these campaigns we also started

783
00:29:53,220 --> 00:29:54,720
working forward and every time we would

784
00:29:54,720 --> 00:29:56,940
see one of these registered even before

785
00:29:56,940 --> 00:29:58,860
it was used in the wild we could

786
00:29:58,860 --> 00:30:00,600
immediately terminate this for a Fraud

787
00:30:00,600 --> 00:30:02,640
and Abuse claim and feel confident about

788
00:30:02,640 --> 00:30:04,799
what we were terminating and we were

789
00:30:04,799 --> 00:30:06,480
actually starting to get ahead of in

790
00:30:06,480 --> 00:30:08,880
control and prevent strontium from using

791
00:30:08,880 --> 00:30:10,679
this ahead of time so they're again

792
00:30:10,679 --> 00:30:12,419
fraud and abuses thinkless sometimes

793
00:30:12,419 --> 00:30:14,279
cyber threat intel if you're doing it

794
00:30:14,279 --> 00:30:15,960
right it's also pretty thankless because

795
00:30:15,960 --> 00:30:17,399
the victim will never know they were

796
00:30:17,399 --> 00:30:18,899
about to be a victim

797
00:30:18,899 --> 00:30:20,760
so we were proactive consistent and

798
00:30:20,760 --> 00:30:23,279
robust and working across these two

799
00:30:23,279 --> 00:30:26,100
years and into this year disrupting

800
00:30:26,100 --> 00:30:28,080
Fusion Drive activity

801
00:30:28,080 --> 00:30:30,360
in some of these cases we went from

802
00:30:30,360 --> 00:30:32,039
detection which is finding in our

803
00:30:32,039 --> 00:30:34,200
platform to notification so again

804
00:30:34,200 --> 00:30:36,299
anytime we find stuff like this we do

805
00:30:36,299 --> 00:30:38,220
notify the End customer and then

806
00:30:38,220 --> 00:30:39,720
building an actual technology

807
00:30:39,720 --> 00:30:41,580
preventions and Fraud and Abuse triggers

808
00:30:41,580 --> 00:30:44,600
to find this activity

809
00:30:45,120 --> 00:30:47,700
now where does that bring us to today so

810
00:30:47,700 --> 00:30:49,679
from August 22 when we're you know

811
00:30:49,679 --> 00:30:51,240
completely starting to shut this stuff

812
00:30:51,240 --> 00:30:54,720
down uh we now see something new happen

813
00:30:54,720 --> 00:30:57,000
in a victim where we knew strontium was

814
00:30:57,000 --> 00:30:58,620
and we had been working to investigate

815
00:30:58,620 --> 00:31:01,260
and notify this customer uh all of a

816
00:31:01,260 --> 00:31:03,000
sudden on the same system where there

817
00:31:03,000 --> 00:31:05,039
used to be an old Fusion Drive variant

818
00:31:05,039 --> 00:31:07,140
talking to OneDrive there's this new

819
00:31:07,140 --> 00:31:09,480
Fusion Drive area and we don't see it

820
00:31:09,480 --> 00:31:11,460
talking to OneDrive and so we get

821
00:31:11,460 --> 00:31:13,380
naturally curious if maybe we're missing

822
00:31:13,380 --> 00:31:16,140
something and we're able to identify a

823
00:31:16,140 --> 00:31:18,179
copy of this file that we're able to

824
00:31:18,179 --> 00:31:20,880
obtain and in this one specific case we

825
00:31:20,880 --> 00:31:23,399
found that it no longer used OneDrive

826
00:31:23,399 --> 00:31:25,440
they all together upped and changed

827
00:31:25,440 --> 00:31:27,600
their code and decided to move to

828
00:31:27,600 --> 00:31:29,159
telegram so this is something we haven't

829
00:31:29,159 --> 00:31:31,500
talked publicly about but from at least

830
00:31:31,500 --> 00:31:33,840
in one or small limited number of cases

831
00:31:33,840 --> 00:31:36,179
we've seen this toolkit be ported over

832
00:31:36,179 --> 00:31:38,039
to a variant that works entirely over

833
00:31:38,039 --> 00:31:39,779
Telegram

834
00:31:39,779 --> 00:31:41,880
which is interesting that they just up

835
00:31:41,880 --> 00:31:43,740
and moved to a new platform I actually

836
00:31:43,740 --> 00:31:45,659
really thank them for doing that it's

837
00:31:45,659 --> 00:31:47,580
nice

838
00:31:47,580 --> 00:31:49,679
now this new variant over telegram why

839
00:31:49,679 --> 00:31:51,000
do we think this is still Fusion drive

840
00:31:51,000 --> 00:31:52,320
like why are we still using the same

841
00:31:52,320 --> 00:31:54,779
name well it's almost literally an exact

842
00:31:54,779 --> 00:31:56,700
code copy it uses the same functional

843
00:31:56,700 --> 00:31:58,740
resolution uses the same xor string

844
00:31:58,740 --> 00:32:01,080
decryption routines uses the same exact

845
00:32:01,080 --> 00:32:03,600
system survey code and routines the same

846
00:32:03,600 --> 00:32:06,059
three things the same exact functions

847
00:32:06,059 --> 00:32:08,039
they literally ripped out the part where

848
00:32:08,039 --> 00:32:09,779
there's one drive and they dropped in a

849
00:32:09,779 --> 00:32:13,919
new library the TG bot C plus library to

850
00:32:13,919 --> 00:32:15,840
implement a new transport entirely over

851
00:32:15,840 --> 00:32:18,059
a telegram

852
00:32:18,059 --> 00:32:21,000
so overall it is basically the exact

853
00:32:21,000 --> 00:32:23,580
same thing as Fusion Drive

854
00:32:23,580 --> 00:32:25,380
just slightly shifted for the

855
00:32:25,380 --> 00:32:27,059
convenience of the attacker I will note

856
00:32:27,059 --> 00:32:28,620
that in this function we do see a little

857
00:32:28,620 --> 00:32:30,179
bit of anti-debug and a little bit of a

858
00:32:30,179 --> 00:32:33,500
new anti-analysis features nothing

859
00:32:33,500 --> 00:32:35,640
significant but it could indicate kind

860
00:32:35,640 --> 00:32:37,500
of that increased paranoia of just

861
00:32:37,500 --> 00:32:39,419
knowing that they're being tracked at

862
00:32:39,419 --> 00:32:41,520
this point and trying to do more work to

863
00:32:41,520 --> 00:32:44,899
make it harder for us

864
00:32:45,360 --> 00:32:47,640
so I'm going to spend some time really

865
00:32:47,640 --> 00:32:49,620
talking about some of the big picture

866
00:32:49,620 --> 00:32:52,320
takeaways because this is really the the

867
00:32:52,320 --> 00:32:54,000
point of this talk you know we go back

868
00:32:54,000 --> 00:32:55,500
in time we talk about all this old

869
00:32:55,500 --> 00:32:58,320
thread Intel stuff IPS and actor names

870
00:32:58,320 --> 00:33:00,120
and all these code words that threat and

871
00:33:00,120 --> 00:33:02,220
tell people tend to use and that's great

872
00:33:02,220 --> 00:33:05,340
there's a lot of value and and Technical

873
00:33:05,340 --> 00:33:07,860
and tactical intelligence where we're

874
00:33:07,860 --> 00:33:09,539
sharing indicators and we're blocking

875
00:33:09,539 --> 00:33:11,940
those but there's also a lot of value in

876
00:33:11,940 --> 00:33:14,580
recognizing the Strategic implications

877
00:33:14,580 --> 00:33:17,220
of threat intelligence moving beyond

878
00:33:17,220 --> 00:33:20,399
just iocs and even operational behaviors

879
00:33:20,399 --> 00:33:23,039
and patterns and starting to look at

880
00:33:23,039 --> 00:33:24,960
learning from the actor to know what we

881
00:33:24,960 --> 00:33:27,059
need to do to make this not possible

882
00:33:27,059 --> 00:33:29,100
anymore from a platform or vector

883
00:33:29,100 --> 00:33:31,559
approach what can we do at Microsoft or

884
00:33:31,559 --> 00:33:34,260
any other big technology vendor to take

885
00:33:34,260 --> 00:33:36,299
this from the actor go to product teams

886
00:33:36,299 --> 00:33:38,220
and say let's not let anybody do this

887
00:33:38,220 --> 00:33:41,159
not just strontium but anybody and

888
00:33:41,159 --> 00:33:42,539
that's a challenging thing it's it's

889
00:33:42,539 --> 00:33:44,519
equally if not more challenging and then

890
00:33:44,519 --> 00:33:46,500
Fraud and Abuse which is very

891
00:33:46,500 --> 00:33:48,539
challenging and so

892
00:33:48,539 --> 00:33:51,360
I think that it's in I I you know as an

893
00:33:51,360 --> 00:33:52,860
offensive security engineer I used to

894
00:33:52,860 --> 00:33:55,140
find uh I've actually done now three

895
00:33:55,140 --> 00:33:57,899
talks on using legitimate or cloud

896
00:33:57,899 --> 00:34:00,179
services for C2 or command and control

897
00:34:00,179 --> 00:34:02,820
the first two was as an offensive person

898
00:34:02,820 --> 00:34:06,059
doing it and and saying how awesome it

899
00:34:06,059 --> 00:34:08,099
was and how useful it was and and now

900
00:34:08,099 --> 00:34:09,719
I'm here telling you that I completely

901
00:34:09,719 --> 00:34:13,080
changed my viewpoint uh I was wrong all

902
00:34:13,080 --> 00:34:16,080
those years uh it's actually really not

903
00:34:16,080 --> 00:34:19,320
that great for the attacker to come to a

904
00:34:19,320 --> 00:34:22,679
well-resourced uh large provider who

905
00:34:22,679 --> 00:34:25,739
invests in threat intelligence uh who is

906
00:34:25,739 --> 00:34:28,500
going to find them quickly

907
00:34:28,500 --> 00:34:30,839
and is going to work to globally disrupt

908
00:34:30,839 --> 00:34:32,699
the campaign versus setting up their own

909
00:34:32,699 --> 00:34:35,580
one-off infrastructure and so the

910
00:34:35,580 --> 00:34:38,339
message kind of is that platforms and

911
00:34:38,339 --> 00:34:40,918
vendors and technology is very uniquely

912
00:34:40,918 --> 00:34:42,960
positioned and strongly positioned to

913
00:34:42,960 --> 00:34:45,239
have a very positive impact on

914
00:34:45,239 --> 00:34:47,099
Enterprises and consumers around the

915
00:34:47,099 --> 00:34:49,139
world that includes everything from your

916
00:34:49,139 --> 00:34:52,199
large companies to the smallest of of

917
00:34:52,199 --> 00:34:54,960
office shops that may need protection

918
00:34:54,960 --> 00:34:57,180
from various threat actors who are

919
00:34:57,180 --> 00:34:59,580
seeking to do them harm and ultimately

920
00:34:59,580 --> 00:35:02,220
learning from an actor and studying

921
00:35:02,220 --> 00:35:04,260
these actors and what they do is part of

922
00:35:04,260 --> 00:35:07,020
that because in order to decide and

923
00:35:07,020 --> 00:35:08,820
prioritize what you're going to change

924
00:35:08,820 --> 00:35:10,560
in your platform to make it more secure

925
00:35:10,560 --> 00:35:12,359
you can look at the data in the real

926
00:35:12,359 --> 00:35:14,520
world and draw inspiration from these

927
00:35:14,520 --> 00:35:15,540
actors

928
00:35:15,540 --> 00:35:17,940
the kind of second bullet takeaway would

929
00:35:17,940 --> 00:35:20,640
be that again I was wrong I don't

930
00:35:20,640 --> 00:35:22,020
actually think using cloud services

931
00:35:22,020 --> 00:35:24,060
provides all that much operational

932
00:35:24,060 --> 00:35:26,640
security it may protect you against the

933
00:35:26,640 --> 00:35:28,920
end victim should you get through on

934
00:35:28,920 --> 00:35:30,960
that first campaign But ultimately it's

935
00:35:30,960 --> 00:35:33,119
going to bring intense scrutiny to

936
00:35:33,119 --> 00:35:35,700
everything you do from there on out and

937
00:35:35,700 --> 00:35:37,980
it's going to cause a big loss and

938
00:35:37,980 --> 00:35:41,460
increased costs and so the message to

939
00:35:41,460 --> 00:35:43,320
attackers is maybe a hopeful plea to

940
00:35:43,320 --> 00:35:45,720
recognize that stay away from Microsoft

941
00:35:45,720 --> 00:35:49,800
in OneDrive and go somewhere else please

942
00:35:49,800 --> 00:35:51,140
so

943
00:35:51,140 --> 00:35:53,520
we talk about intelligence-informed

944
00:35:53,520 --> 00:35:56,339
defense for those who may have to work

945
00:35:56,339 --> 00:35:59,579
an incident response for this actor I

946
00:35:59,579 --> 00:36:01,200
did want to put in kind of a generic

947
00:36:01,200 --> 00:36:04,079
running list of my high level wave of

948
00:36:04,079 --> 00:36:05,400
things that would be really interesting

949
00:36:05,400 --> 00:36:06,960
to look for if you're ever dealing with

950
00:36:06,960 --> 00:36:09,900
a apd-28 or strontium problem I think if

951
00:36:09,900 --> 00:36:11,400
you were to look at this list you would

952
00:36:11,400 --> 00:36:13,920
Encompass a good percentage of of the

953
00:36:13,920 --> 00:36:15,960
campaigns and investigations we've

954
00:36:15,960 --> 00:36:19,800
conducted so again noisy low reputation

955
00:36:19,800 --> 00:36:22,020
infrastructure or things that you

956
00:36:22,020 --> 00:36:23,640
shouldn't be talking to your boundary

957
00:36:23,640 --> 00:36:25,260
that don't ever normally talk to your

958
00:36:25,260 --> 00:36:27,060
boundary I know that's easier said than

959
00:36:27,060 --> 00:36:29,460
done in terms of identifying things like

960
00:36:29,460 --> 00:36:30,960
credential guessing on external

961
00:36:30,960 --> 00:36:34,140
public-facing Services access via a

962
00:36:34,140 --> 00:36:37,560
single Factor authentication on vpns or

963
00:36:37,560 --> 00:36:39,900
remote access Solutions

964
00:36:39,900 --> 00:36:42,480
they love to manipulate identities and

965
00:36:42,480 --> 00:36:44,520
post compromise most often we'll see

966
00:36:44,520 --> 00:36:46,980
them granting application impersonation

967
00:36:46,980 --> 00:36:49,820
on accounts to allow them to access

968
00:36:49,820 --> 00:36:52,500
mailbox folders of Interest again this

969
00:36:52,500 --> 00:36:55,500
is a most likely information motivated

970
00:36:55,500 --> 00:36:58,140
actor they love to steal email so we'll

971
00:36:58,140 --> 00:36:59,520
see that either via application

972
00:36:59,520 --> 00:37:01,800
impersonation or mailbox folder

973
00:37:01,800 --> 00:37:04,020
permissions they love to collect data

974
00:37:04,020 --> 00:37:06,060
via a legacy kind of exchange web

975
00:37:06,060 --> 00:37:08,220
services activity and so looking for

976
00:37:08,220 --> 00:37:09,839
that where it's non-standard can be very

977
00:37:09,839 --> 00:37:11,760
valuable and we found a lot of a lot of

978
00:37:11,760 --> 00:37:14,040
Investigations have used that

979
00:37:14,040 --> 00:37:16,200
they love to exploit single Factor

980
00:37:16,200 --> 00:37:17,880
authentication I cannot say that enough

981
00:37:17,880 --> 00:37:20,520
if I uh almost every intrusion from

982
00:37:20,520 --> 00:37:22,680
these folks turns into access to a VPN

983
00:37:22,680 --> 00:37:24,359
concentrator or remote access in some

984
00:37:24,359 --> 00:37:26,520
way after they obtain credentials so

985
00:37:26,520 --> 00:37:29,280
it's an absolute must find for them and

986
00:37:29,280 --> 00:37:31,260
then much like many of the actors

987
00:37:31,260 --> 00:37:33,119
nowadays they they leverage or

988
00:37:33,119 --> 00:37:34,560
incorporate lots of different open

989
00:37:34,560 --> 00:37:37,500
source tools most notably impact it is

990
00:37:37,500 --> 00:37:39,720
one that we see consistently throughout

991
00:37:39,720 --> 00:37:43,440
intrusions from this actor and and other

992
00:37:43,440 --> 00:37:47,119
actors in a similar nature

993
00:37:47,520 --> 00:37:49,380
so we're going to be toward the end I

994
00:37:49,380 --> 00:37:51,599
don't think we're taking questions but I

995
00:37:51,599 --> 00:37:52,859
just want to say again thank you for

996
00:37:52,859 --> 00:37:54,540
hosting me in Tel Aviv and I hope this

997
00:37:54,540 --> 00:37:56,099
was informative happy to talk to you

998
00:37:56,099 --> 00:37:58,280
outside

999
00:37:58,560 --> 00:38:01,290
foreign

1000
00:38:01,290 --> 00:38:05,899
[Music]

