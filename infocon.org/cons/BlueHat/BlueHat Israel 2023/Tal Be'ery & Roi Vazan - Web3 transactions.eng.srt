1
00:00:00,000 --> 00:00:08,700
[Music]

2
00:00:09,679 --> 00:00:11,440
thank you

3
00:00:11,440 --> 00:00:13,500
[Music]

4
00:00:13,500 --> 00:00:16,800
I see only the finest made it to this

5
00:00:16,800 --> 00:00:18,480
talk which is

6
00:00:18,480 --> 00:00:22,859
pretty great yeah you are the finest you

7
00:00:22,859 --> 00:00:24,480
are the finest

8
00:00:24,480 --> 00:00:27,900
okay so my name is talberry I'm CDO and

9
00:00:27,900 --> 00:00:30,359
co-founder for Django we're making a

10
00:00:30,359 --> 00:00:33,480
super secure Mobile cryptocurrency

11
00:00:33,480 --> 00:00:34,620
Wallet

12
00:00:34,620 --> 00:00:36,960
a powered by multi-party computation

13
00:00:36,960 --> 00:00:39,059
which we're not going to talk about

14
00:00:39,059 --> 00:00:42,719
today but more on the web 3 stuff and

15
00:00:42,719 --> 00:00:46,079
I'm Roy a researcher lazengo working on

16
00:00:46,079 --> 00:00:48,960
the researching team with the top yeah

17
00:00:48,960 --> 00:00:51,059
so let's start with the beginning and

18
00:00:51,059 --> 00:00:53,219
don't worry this is self-contained you

19
00:00:53,219 --> 00:00:55,020
don't need to know blockchain will get

20
00:00:55,020 --> 00:00:57,539
you up to speed in no time so we'll talk

21
00:00:57,539 --> 00:00:59,820
about the uh the blockchain evolution

22
00:00:59,820 --> 00:01:02,820
from Bitcoin to ethereum we'll talk

23
00:01:02,820 --> 00:01:05,280
about ethereum apps and how they drive

24
00:01:05,280 --> 00:01:07,920
web3 how that they are the power behind

25
00:01:07,920 --> 00:01:10,560
web3 and we'll talk about the revolution

26
00:01:10,560 --> 00:01:12,900
of web3 and I think this is by the way

27
00:01:12,900 --> 00:01:15,840
the most important thing in this talk if

28
00:01:15,840 --> 00:01:18,840
you remember just that you will see that

29
00:01:18,840 --> 00:01:21,299
web3 is not just a bus mode but really A

30
00:01:21,299 --> 00:01:26,000
revolution but it creates some security

31
00:01:26,000 --> 00:01:29,220
problems because of this new paradigm

32
00:01:29,220 --> 00:01:31,020
we'll talk about it and mainly because

33
00:01:31,020 --> 00:01:34,020
it gives no visibility to the user of

34
00:01:34,020 --> 00:01:37,439
what they're about to do and then Roy

35
00:01:37,439 --> 00:01:39,540
will tell you about the solutions for

36
00:01:39,540 --> 00:01:43,740
that using a web 3 simulation and how to

37
00:01:43,740 --> 00:01:47,040
solve the visibility problem but since

38
00:01:47,040 --> 00:01:49,380
we are not good guys we're very bad guys

39
00:01:49,380 --> 00:01:52,380
we cannot just you know leave you with

40
00:01:52,380 --> 00:01:54,299
solution we have to find out more

41
00:01:54,299 --> 00:01:57,899
problems and how this visibility can be

42
00:01:57,899 --> 00:01:59,759
attacked to create some false visibility

43
00:01:59,759 --> 00:02:02,399
to the user which is much worse than

44
00:02:02,399 --> 00:02:04,799
having no visibility at all

45
00:02:04,799 --> 00:02:09,538
so a contrary to Common belief and some

46
00:02:09,538 --> 00:02:12,780
conspiracy theories mainly fueled by my

47
00:02:12,780 --> 00:02:15,080
private Twitter account

48
00:02:15,080 --> 00:02:18,000
coinbase does want us to talk about

49
00:02:18,000 --> 00:02:20,160
vulnerabilities that we found in their

50
00:02:20,160 --> 00:02:24,360
product so thank you coinbase for you

51
00:02:24,360 --> 00:02:26,580
know allowing us to talk about that so

52
00:02:26,580 --> 00:02:29,280
strictly kosher probably I will not be

53
00:02:29,280 --> 00:02:31,860
arrested by the security researcher

54
00:02:31,860 --> 00:02:34,800
police after this talk so let's start

55
00:02:34,800 --> 00:02:37,620
with the beginning what are blockchains

56
00:02:37,620 --> 00:02:40,200
so blockchains are pretty much a global

57
00:02:40,200 --> 00:02:43,560
name for distributed database but it

58
00:02:43,560 --> 00:02:45,900
really it's not just distributed

59
00:02:45,900 --> 00:02:49,500
database to just do it it requires

60
00:02:49,500 --> 00:02:51,900
solving a lot of hard problems just

61
00:02:51,900 --> 00:02:53,879
think of it if you have multiple copies

62
00:02:53,879 --> 00:02:56,519
a multiple version of the database which

63
00:02:56,519 --> 00:02:58,860
one is the correct one so a blockchain

64
00:02:58,860 --> 00:03:01,260
solved that and it reaches consensus

65
00:03:01,260 --> 00:03:04,500
about the right version of the database

66
00:03:04,500 --> 00:03:06,540
and so of all kind of other practical

67
00:03:06,540 --> 00:03:09,120
issues how do you authenticate user

68
00:03:09,120 --> 00:03:11,340
again in the distributed system with the

69
00:03:11,340 --> 00:03:13,280
private public key

70
00:03:13,280 --> 00:03:18,540
system and apparently this blockchain is

71
00:03:18,540 --> 00:03:21,720
very good for one application which

72
00:03:21,720 --> 00:03:24,120
happens to be very important and we're

73
00:03:24,120 --> 00:03:26,459
very profitable of money transfer so you

74
00:03:26,459 --> 00:03:28,760
have a database distributed database

75
00:03:28,760 --> 00:03:32,040
it's not operated by one entity but

76
00:03:32,040 --> 00:03:34,980
everyone operates that and you can send

77
00:03:34,980 --> 00:03:37,860
money with this database because all you

78
00:03:37,860 --> 00:03:40,860
need to do is when you send money there

79
00:03:40,860 --> 00:03:43,739
are the one application that Bitcoin

80
00:03:43,739 --> 00:03:47,340
does is reduce that amount from your

81
00:03:47,340 --> 00:03:50,459
account and add it to the destination

82
00:03:50,459 --> 00:03:53,340
account and of course making sure that

83
00:03:53,340 --> 00:03:56,280
it's all authenticated so Bitcoin is a

84
00:03:56,280 --> 00:03:58,200
really great app but it's an arcade

85
00:03:58,200 --> 00:04:01,019
machine like the ones you see outside it

86
00:04:01,019 --> 00:04:03,000
has it's just one app it's a hardware

87
00:04:03,000 --> 00:04:05,780
only allows you to do one thing

88
00:04:05,780 --> 00:04:07,560
oversimplifying but

89
00:04:07,560 --> 00:04:12,439
generally true so in 2016

90
00:04:12,439 --> 00:04:15,780
vitalik which was a Avid supporter for

91
00:04:15,780 --> 00:04:18,478
Bitcoin so okay we can do much better

92
00:04:18,478 --> 00:04:21,779
with this distributed database why we

93
00:04:21,779 --> 00:04:24,000
should limit ourselves to just

94
00:04:24,000 --> 00:04:27,660
storing balances we can also store code

95
00:04:27,660 --> 00:04:30,840
on this database and the transaction

96
00:04:30,840 --> 00:04:33,419
instead of just being you know moving

97
00:04:33,419 --> 00:04:35,880
money from one user to another we can

98
00:04:35,880 --> 00:04:38,520
encode our parameters there so we would

99
00:04:38,520 --> 00:04:41,460
upload code it's called smart contracts

100
00:04:41,460 --> 00:04:44,160
but it's actually code and to interact

101
00:04:44,160 --> 00:04:46,500
with it you create some RPC remote

102
00:04:46,500 --> 00:04:49,160
procedure call which are the transaction

103
00:04:49,160 --> 00:04:51,780
the ultra reduction that used to just

104
00:04:51,780 --> 00:04:54,419
move money from address a to address B

105
00:04:54,419 --> 00:04:57,660
is now actually sending parameters to

106
00:04:57,660 --> 00:05:01,100
that code so this

107
00:05:01,100 --> 00:05:04,320
arcade machine Bitcoin was an arcade

108
00:05:04,320 --> 00:05:06,360
machine but ethereum is a game console

109
00:05:06,360 --> 00:05:08,400
and can change apps if there are

110
00:05:08,400 --> 00:05:10,500
multiple apps that you can run over

111
00:05:10,500 --> 00:05:14,400
ethereum so let's go make it more

112
00:05:14,400 --> 00:05:16,740
concrete with some examples so what kind

113
00:05:16,740 --> 00:05:20,340
of apps can you run over ethereum so

114
00:05:20,340 --> 00:05:23,880
your assets are actually can be an app

115
00:05:23,880 --> 00:05:27,180
and not a hardwire program and why is

116
00:05:27,180 --> 00:05:29,639
that important but because before

117
00:05:29,639 --> 00:05:32,280
ethereum if I wanted to do some kind of

118
00:05:32,280 --> 00:05:35,580
other kind of of a of a coin let's say a

119
00:05:35,580 --> 00:05:37,680
stable coin account that is packed to

120
00:05:37,680 --> 00:05:40,020
the US dollar so to do that I have to

121
00:05:40,020 --> 00:05:41,820
replicate the whole blockchain and

122
00:05:41,820 --> 00:05:45,300
create new miners validator system Etc

123
00:05:45,300 --> 00:05:48,600
and now with ethereum this is just a

124
00:05:48,600 --> 00:05:51,060
program and to support that to create a

125
00:05:51,060 --> 00:05:54,000
new coin everyone can hear in here can

126
00:05:54,000 --> 00:05:56,160
create a new cone interior it's just an

127
00:05:56,160 --> 00:05:58,800
app and you just need to implement six

128
00:05:58,800 --> 00:06:01,380
functions including one of them we'll

129
00:06:01,380 --> 00:06:04,139
talk about later is the approve function

130
00:06:04,139 --> 00:06:07,039
very important how do you can

131
00:06:07,039 --> 00:06:10,560
add control to another entity over your

132
00:06:10,560 --> 00:06:13,919
asset so you with six functions and two

133
00:06:13,919 --> 00:06:17,039
events which are basically log and you

134
00:06:17,039 --> 00:06:18,060
have

135
00:06:18,060 --> 00:06:20,520
you have a coin without doing anything

136
00:06:20,520 --> 00:06:23,039
else you just call that software eats

137
00:06:23,039 --> 00:06:26,160
world and why is it interesting besides

138
00:06:26,160 --> 00:06:28,860
of course you can do Ico initial con

139
00:06:28,860 --> 00:06:31,319
offering and be very rich that's what we

140
00:06:31,319 --> 00:06:35,160
they used to do in 2017 to seven and

141
00:06:35,160 --> 00:06:39,120
2018 you can since this is code and this

142
00:06:39,120 --> 00:06:42,060
is our apps and you have multiple uh

143
00:06:42,060 --> 00:06:43,620
coins that support the same interface

144
00:06:43,620 --> 00:06:46,380
you can build another app on top of the

145
00:06:46,380 --> 00:06:49,020
some other apps like exchange because

146
00:06:49,020 --> 00:06:51,539
the format is known so you can exchange

147
00:06:51,539 --> 00:06:54,840
from one a coin to another you can

148
00:06:54,840 --> 00:06:58,020
create a loan system which pays your

149
00:06:58,020 --> 00:07:01,259
interest to the user again supporting

150
00:07:01,259 --> 00:07:04,800
all of these new coins and this in

151
00:07:04,800 --> 00:07:06,960
Innovation does not stop because this is

152
00:07:06,960 --> 00:07:09,900
money like on top of that you can do all

153
00:07:09,900 --> 00:07:12,080
kind of mix and match let's think about

154
00:07:12,080 --> 00:07:15,900
for example a swap and earn so you have

155
00:07:15,900 --> 00:07:19,620
that you can earn using that the loan

156
00:07:19,620 --> 00:07:21,900
system lending system and you can also

157
00:07:21,900 --> 00:07:24,300
exchange so I can make an application

158
00:07:24,300 --> 00:07:27,599
that that is doing both of them for you

159
00:07:27,599 --> 00:07:30,360
and doing the finding you the best coin

160
00:07:30,360 --> 00:07:32,580
and exchange to it that gets you the

161
00:07:32,580 --> 00:07:34,680
best interest and then deposit your

162
00:07:34,680 --> 00:07:37,080
funds there so this is money Lego and

163
00:07:37,080 --> 00:07:40,620
The Innovation is really uh great and

164
00:07:40,620 --> 00:07:42,900
you can do whatever you dream with that

165
00:07:42,900 --> 00:07:44,639
compared to the traditional banking

166
00:07:44,639 --> 00:07:47,580
system where you need to ask someone for

167
00:07:47,580 --> 00:07:49,800
permission and get API access and so on

168
00:07:49,800 --> 00:07:54,539
so this money Lego is another uh outcome

169
00:07:54,539 --> 00:07:58,199
of this of make of this game console

170
00:07:58,199 --> 00:08:02,460
that your assets are also code and can

171
00:08:02,460 --> 00:08:05,639
be supported in a standard way across

172
00:08:05,639 --> 00:08:09,419
application and one final example is our

173
00:08:09,419 --> 00:08:12,539
nfts I'm sure you heard about nfcs but

174
00:08:12,539 --> 00:08:15,120
currently they are mostly funny jpegs

175
00:08:15,120 --> 00:08:18,419
you can sell and buy both apps for

176
00:08:18,419 --> 00:08:21,599
ridiculous amount but in future and also

177
00:08:21,599 --> 00:08:23,759
in future like today is also the future

178
00:08:23,759 --> 00:08:26,819
like just yesterday I read The Ticket

179
00:08:26,819 --> 00:08:30,479
Masters are now a support selling

180
00:08:30,479 --> 00:08:33,179
tickets as nfts they are non-fungible

181
00:08:33,179 --> 00:08:36,958
tokens like coins are fungible every

182
00:08:36,958 --> 00:08:39,479
token is the same as the other but with

183
00:08:39,479 --> 00:08:43,200
nfts they are each token is unique and

184
00:08:43,200 --> 00:08:46,380
again to support it just man functions

185
00:08:46,380 --> 00:08:50,160
three events and what do you gain as a

186
00:08:50,160 --> 00:08:52,800
result because we could have like you

187
00:08:52,800 --> 00:08:56,100
could own funny jpegs even before you

188
00:08:56,100 --> 00:08:57,720
can let's say you're on some social

189
00:08:57,720 --> 00:09:00,779
network and the platform says okay your

190
00:09:00,779 --> 00:09:01,980
account

191
00:09:01,980 --> 00:09:05,519
holds that that nft however if you

192
00:09:05,519 --> 00:09:07,920
banned from this platform or the

193
00:09:07,920 --> 00:09:10,500
platform decide to take it away from

194
00:09:10,500 --> 00:09:14,760
from you they can do it but now this

195
00:09:14,760 --> 00:09:17,100
information of ownership is stored on

196
00:09:17,100 --> 00:09:18,899
the blockchain so no one can take it

197
00:09:18,899 --> 00:09:21,060
from you so you can see it on a

198
00:09:21,060 --> 00:09:23,459
blockchain explorer that you own this

199
00:09:23,459 --> 00:09:27,839
great looking body and and as a result

200
00:09:27,839 --> 00:09:29,940
you can trade it in one platform like

201
00:09:29,940 --> 00:09:32,700
openc but also in another one like in

202
00:09:32,700 --> 00:09:35,760
wearable so you truly own your digital

203
00:09:35,760 --> 00:09:37,399
asset and it makes a lot of difference

204
00:09:37,399 --> 00:09:40,620
so and this brings us to web3

205
00:09:40,620 --> 00:09:42,779
so if the classic blockchain

206
00:09:42,779 --> 00:09:44,640
all you need is the user wallet and

207
00:09:44,640 --> 00:09:46,500
blockchain and transaction work very

208
00:09:46,500 --> 00:09:49,019
very simple like your address the

209
00:09:49,019 --> 00:09:51,120
destination address the amount pretty

210
00:09:51,120 --> 00:09:52,140
much it

211
00:09:52,140 --> 00:09:55,140
but now how do you consume apps because

212
00:09:55,140 --> 00:09:57,480
we said like you're connecting to some

213
00:09:57,480 --> 00:10:01,440
contract and you're doing an RPC call

214
00:10:01,440 --> 00:10:03,600
but how do you know as a user what are

215
00:10:03,600 --> 00:10:05,399
the parameters now you should encode

216
00:10:05,399 --> 00:10:08,279
that so when you think of it we kind of

217
00:10:08,279 --> 00:10:10,019
solve that problem because this is what

218
00:10:10,019 --> 00:10:12,600
happens every day on on on the internet

219
00:10:12,600 --> 00:10:14,519
because you're interacting with all kind

220
00:10:14,519 --> 00:10:16,500
of you're doing remote procedure call

221
00:10:16,500 --> 00:10:19,080
and you're not bothered with exactly how

222
00:10:19,080 --> 00:10:21,060
do you encode it this the HTML the

223
00:10:21,060 --> 00:10:23,519
JavaScript takes care of it for you so

224
00:10:23,519 --> 00:10:27,420
we want to marry web 2 with the classic

225
00:10:27,420 --> 00:10:30,000
blockchain and we did that and we got

226
00:10:30,000 --> 00:10:33,000
the web3 triangle in which you have the

227
00:10:33,000 --> 00:10:34,580
user browser

228
00:10:34,580 --> 00:10:38,519
which is the wallet talks to a web 2

229
00:10:38,519 --> 00:10:41,220
interface that tells it what are the

230
00:10:41,220 --> 00:10:44,880
parameters and it already suggests a

231
00:10:44,880 --> 00:10:46,980
transaction for it to send to the

232
00:10:46,980 --> 00:10:49,320
blockchain smart contract then the user

233
00:10:49,320 --> 00:10:51,420
sent it to the blockchain smart contract

234
00:10:51,420 --> 00:10:53,820
get the results and the results are also

235
00:10:53,820 --> 00:10:55,860
updated to the web to interface so let's

236
00:10:55,860 --> 00:10:59,760
see that maybe in action

237
00:10:59,760 --> 00:11:04,500
so this is a Zengo wallet and we're

238
00:11:04,500 --> 00:11:07,140
connecting it to the web 2 interface

239
00:11:07,140 --> 00:11:12,060
using QR code with scanning that and it

240
00:11:12,060 --> 00:11:14,040
shows you were connected to blur let's

241
00:11:14,040 --> 00:11:17,459
say this is the nft marketplace then

242
00:11:17,459 --> 00:11:19,740
blur suggests some transaction to sign

243
00:11:19,740 --> 00:11:21,360
and then the user decide whether they

244
00:11:21,360 --> 00:11:23,760
want to sign it or not and sends that to

245
00:11:23,760 --> 00:11:25,920
the blockchain so we have that triangle

246
00:11:25,920 --> 00:11:27,000
going on

247
00:11:27,000 --> 00:11:30,959
and so just to sum it up we had web one

248
00:11:30,959 --> 00:11:34,560
which was about just static content and

249
00:11:34,560 --> 00:11:37,920
they started this Millennium we had web

250
00:11:37,920 --> 00:11:41,399
2 user content user can upload content

251
00:11:41,399 --> 00:11:43,920
and interact with the apps now with web

252
00:11:43,920 --> 00:11:47,040
3 there is also the ownership which is

253
00:11:47,040 --> 00:11:50,000
really important and allows you a lot

254
00:11:50,000 --> 00:11:52,980
of new applications for that

255
00:11:52,980 --> 00:11:55,500
so this is the reason why Zango loves

256
00:11:55,500 --> 00:11:58,380
Italian web 3 because it's so it's

257
00:11:58,380 --> 00:12:01,260
Revolution it can Revel uh create great

258
00:12:01,260 --> 00:12:03,060
revolution in everything we do

259
00:12:03,060 --> 00:12:05,519
financially but also all other aspects

260
00:12:05,519 --> 00:12:08,579
we just mentioned tickets and digital

261
00:12:08,579 --> 00:12:11,880
ownership of assets and we heard that

262
00:12:11,880 --> 00:12:14,040
Microsoft loved ethereum 2 this is from

263
00:12:14,040 --> 00:12:18,180
Twitter some developer branch of edge

264
00:12:18,180 --> 00:12:22,399
um allegedly supporting ethereum

265
00:12:22,399 --> 00:12:26,040
wallet within edge browser which makes a

266
00:12:26,040 --> 00:12:28,860
lot of sense so brave move Microsoft way

267
00:12:28,860 --> 00:12:32,040
to go and if you want to talk to us

268
00:12:32,040 --> 00:12:35,399
we're here so let's talk about web 3

269
00:12:35,399 --> 00:12:38,100
security okay so we did all these great

270
00:12:38,100 --> 00:12:40,620
things and finally we can talk about

271
00:12:40,620 --> 00:12:42,959
security so I want to surprise you

272
00:12:42,959 --> 00:12:45,000
because there was a lot of talking here

273
00:12:45,000 --> 00:12:48,480
about what uh what is the most trusted

274
00:12:48,480 --> 00:12:51,720
platform for trusted execution and with

275
00:12:51,720 --> 00:12:53,880
trusted execution you have two problems

276
00:12:53,880 --> 00:12:55,800
you have to worry about the Integrity of

277
00:12:55,800 --> 00:12:58,500
your code and the Integrity of the input

278
00:12:58,500 --> 00:13:01,800
because and it's very hard to get it on

279
00:13:01,800 --> 00:13:03,720
traditional system because they can be

280
00:13:03,720 --> 00:13:06,300
malware that can be supply chain attacks

281
00:13:06,300 --> 00:13:09,420
and so on so forth and and usually we

282
00:13:09,420 --> 00:13:11,279
try to solve it with going deeper into

283
00:13:11,279 --> 00:13:13,220
the hardware Italian takes another

284
00:13:13,220 --> 00:13:17,600
approach and it does that by a plurality

285
00:13:17,600 --> 00:13:20,880
the code is run by hundreds of thousands

286
00:13:20,880 --> 00:13:24,959
of validators so for attacker to uh to

287
00:13:24,959 --> 00:13:27,240
really change a calculation and

288
00:13:27,240 --> 00:13:29,399
execution they need to attack the

289
00:13:29,399 --> 00:13:32,820
majority of of the validators like

290
00:13:32,820 --> 00:13:36,600
attack simultaneously take over a

291
00:13:36,600 --> 00:13:39,660
hundreds of thousands of computers so I

292
00:13:39,660 --> 00:13:43,019
would say in a sense ethereum is the

293
00:13:43,019 --> 00:13:47,160
most general purpose a secure platform

294
00:13:47,160 --> 00:13:50,519
against such attacks so it's red and

295
00:13:50,519 --> 00:13:52,740
also it has an implicit back Bounty of

296
00:13:52,740 --> 00:13:55,320
200 billion dollar because these are the

297
00:13:55,320 --> 00:13:57,600
assets that are installed directly on

298
00:13:57,600 --> 00:13:59,880
ethereum so if someone had a way to

299
00:13:59,880 --> 00:14:02,220
break it they could get 200 billion

300
00:14:02,220 --> 00:14:04,800
dollars so it's pretty much a high back

301
00:14:04,800 --> 00:14:07,500
Bounty so if it's so good if it's so

302
00:14:07,500 --> 00:14:09,959
good as I said it's the most trust the

303
00:14:09,959 --> 00:14:12,420
best the most secure platform so how

304
00:14:12,420 --> 00:14:14,880
come it's so bad like why are we keep

305
00:14:14,880 --> 00:14:17,220
hearing about hundreds of millions of

306
00:14:17,220 --> 00:14:21,600
dollars lost in web 3 attacks and so the

307
00:14:21,600 --> 00:14:23,760
reason is that because human makes

308
00:14:23,760 --> 00:14:25,500
mistake

309
00:14:25,500 --> 00:14:28,560
the program it in itself is executed

310
00:14:28,560 --> 00:14:31,800
perfectly you cannot really change as an

311
00:14:31,800 --> 00:14:34,079
attacker change the execution but this

312
00:14:34,079 --> 00:14:35,519
is not the issue

313
00:14:35,519 --> 00:14:37,620
it could be that the either code or new

314
00:14:37,620 --> 00:14:40,139
input or both are malicious and we'll

315
00:14:40,139 --> 00:14:43,620
see it in the Triangle so each of the

316
00:14:43,620 --> 00:14:45,660
vertices of this triangle can be

317
00:14:45,660 --> 00:14:47,880
malicious could be that the user is

318
00:14:47,880 --> 00:14:51,800
malicious and sending a

319
00:14:51,800 --> 00:14:54,480
malicious input to the smart contract

320
00:14:54,480 --> 00:14:58,139
contract and as a result try if there

321
00:14:58,139 --> 00:14:59,519
are vulnerabilities in that smart

322
00:14:59,519 --> 00:15:02,459
contract the user can exploit that and

323
00:15:02,459 --> 00:15:04,380
we're not going to talk about that today

324
00:15:04,380 --> 00:15:06,300
but we're going to talk about two other

325
00:15:06,300 --> 00:15:08,519
kind of attack could be that the web 2

326
00:15:08,519 --> 00:15:11,699
interface is Rogue or malicious and

327
00:15:11,699 --> 00:15:15,420
suggests bad transactions to the user

328
00:15:15,420 --> 00:15:18,779
or it could be that the smart contract

329
00:15:18,779 --> 00:15:21,779
itself is malicious and transactions

330
00:15:21,779 --> 00:15:23,220
that go from the user to the smart

331
00:15:23,220 --> 00:15:25,220
contract will be

332
00:15:25,220 --> 00:15:28,260
executed by that malicious code because

333
00:15:28,260 --> 00:15:29,720
we don't know

334
00:15:29,720 --> 00:15:33,779
if this code is good or bad and

335
00:15:33,779 --> 00:15:36,180
so let's make it concrete with the one

336
00:15:36,180 --> 00:15:39,000
example so malicious interfacing in the

337
00:15:39,000 --> 00:15:42,360
world it was about a year ago a badger

338
00:15:42,360 --> 00:15:45,600
Dao and a system that tried to bring

339
00:15:45,600 --> 00:15:48,240
that defy Lego that high interest rate

340
00:15:48,240 --> 00:15:50,720
into the Bitcoin so they created a new

341
00:15:50,720 --> 00:15:54,779
erc20 a new token standard that is back

342
00:15:54,779 --> 00:15:57,660
to the Bitcoin so you could have Bitcoin

343
00:15:57,660 --> 00:16:01,680
but also trade them uh using over

344
00:16:01,680 --> 00:16:04,860
ethereum this was the claim to fame and

345
00:16:04,860 --> 00:16:06,899
their web to interface was hacked

346
00:16:06,899 --> 00:16:10,620
injected with some raw code

347
00:16:10,620 --> 00:16:12,480
and

348
00:16:12,480 --> 00:16:15,000
hundreds of millions were lost including

349
00:16:15,000 --> 00:16:18,959
50 million by the now defunct the

350
00:16:18,959 --> 00:16:22,019
Celsius company allegedly using a

351
00:16:22,019 --> 00:16:25,040
metamask to manually manage their

352
00:16:25,040 --> 00:16:27,180
customers funds

353
00:16:27,180 --> 00:16:31,019
and what was the actual problem there

354
00:16:31,019 --> 00:16:33,300
what was injected so remember we talked

355
00:16:33,300 --> 00:16:36,779
about the pro function so a proof

356
00:16:36,779 --> 00:16:38,699
function allows other entities to

357
00:16:38,699 --> 00:16:40,800
control your funds and it

358
00:16:40,800 --> 00:16:44,000
it's a customer to do that

359
00:16:44,000 --> 00:16:48,779
within within the ethereum apps however

360
00:16:48,779 --> 00:16:51,720
like this is how usual approves looks

361
00:16:51,720 --> 00:16:53,940
like you kind of understand what's going

362
00:16:53,940 --> 00:16:56,040
on give permission to access your Shield

363
00:16:56,040 --> 00:16:58,199
like this is how we would would look

364
00:16:58,199 --> 00:17:01,500
like in matamask but they were using a

365
00:17:01,500 --> 00:17:03,899
variant of of their pool function called

366
00:17:03,899 --> 00:17:07,280
increase allowance that has some

367
00:17:07,280 --> 00:17:11,339
it was newer if it was at Microsoft like

368
00:17:11,339 --> 00:17:13,799
in Gen4 show it was would probably

369
00:17:13,799 --> 00:17:17,459
called approve x 2 but it's from

370
00:17:17,459 --> 00:17:19,500
Microsoft so it's a Chris allowance and

371
00:17:19,500 --> 00:17:21,480
it was not known to the wallet so the

372
00:17:21,480 --> 00:17:24,119
wallet said okay this is function it's

373
00:17:24,119 --> 00:17:25,740
called the case allowance I don't know

374
00:17:25,740 --> 00:17:28,199
what it does but you can sign over it if

375
00:17:28,199 --> 00:17:30,540
you if you want to and people just sign

376
00:17:30,540 --> 00:17:35,940
that okay so this is hints of the give

377
00:17:35,940 --> 00:17:38,160
you a hint of the problem like do you

378
00:17:38,160 --> 00:17:41,340
really own what you own if you sign find

379
00:17:41,340 --> 00:17:43,320
things you cannot understand what they

380
00:17:43,320 --> 00:17:46,380
mean so the visibility is a problem and

381
00:17:46,380 --> 00:17:50,160
this is a was an example for rogue webto

382
00:17:50,160 --> 00:17:52,440
interface and we said there could be

383
00:17:52,440 --> 00:17:55,140
also Rogue smart contract but this is

384
00:17:55,140 --> 00:17:58,080
not much of a problem because a rock

385
00:17:58,080 --> 00:18:00,780
smart contract doesn't have any access

386
00:18:00,780 --> 00:18:05,340
to your funds and you know it the most

387
00:18:05,340 --> 00:18:08,100
it can do it cannot tell you please send

388
00:18:08,100 --> 00:18:11,160
me funds and I will return you much more

389
00:18:11,160 --> 00:18:14,640
in return but if you believe that also I

390
00:18:14,640 --> 00:18:16,500
have a bridge to sell you why would you

391
00:18:16,500 --> 00:18:18,900
why would you do that kind of thing and

392
00:18:18,900 --> 00:18:21,799
we will show that with some

393
00:18:21,799 --> 00:18:25,679
Force visibility we can persuade the

394
00:18:25,679 --> 00:18:29,100
victim to do so so this is so this is in

395
00:18:29,100 --> 00:18:31,380
Roy Park so stay with us

396
00:18:31,380 --> 00:18:34,559
so really this is the last time before

397
00:18:34,559 --> 00:18:38,160
we moved to to hit to the part where we

398
00:18:38,160 --> 00:18:41,220
really talk about simulation and attacks

399
00:18:41,220 --> 00:18:44,280
so really the problem for a web stream

400
00:18:44,280 --> 00:18:48,240
user is to understand beforehand uh what

401
00:18:48,240 --> 00:18:51,299
the the result of the execution of the

402
00:18:51,299 --> 00:18:54,120
transaction it's going to do what would

403
00:18:54,120 --> 00:18:56,880
be the result so this combination of the

404
00:18:56,880 --> 00:18:59,940
parameter it sent and the code it's it

405
00:18:59,940 --> 00:19:04,080
is sending is sending to what what would

406
00:19:04,080 --> 00:19:06,840
be the outcome so we know that to do it

407
00:19:06,840 --> 00:19:09,299
analytically if we study computer

408
00:19:09,299 --> 00:19:12,799
science we know this is an undecidable

409
00:19:12,799 --> 00:19:16,320
a problem you cannot know what the

410
00:19:16,320 --> 00:19:20,039
computer program would do however if we

411
00:19:20,039 --> 00:19:22,980
are in coming from computer security we

412
00:19:22,980 --> 00:19:24,960
know that we actually try to do that

413
00:19:24,960 --> 00:19:27,299
every day with antivirus we try to

414
00:19:27,299 --> 00:19:30,720
understand if a binary is malicious of

415
00:19:30,720 --> 00:19:32,160
benign and one of the the way we're

416
00:19:32,160 --> 00:19:33,960
doing that instead of analytically

417
00:19:33,960 --> 00:19:36,840
trying to understand what he does we say

418
00:19:36,840 --> 00:19:40,080
okay let's just let it run in a sandbox

419
00:19:40,080 --> 00:19:42,000
environment and see if it does good

420
00:19:42,000 --> 00:19:44,160
things or bad ticket then we decide so

421
00:19:44,160 --> 00:19:45,539
this is basically the idea about

422
00:19:45,539 --> 00:19:49,620
simulation instead of actually executing

423
00:19:49,620 --> 00:19:54,780
this function on chain before we would

424
00:19:54,780 --> 00:19:58,140
execute it on chain let's execute it in

425
00:19:58,140 --> 00:20:00,480
a contained environment the sandbox

426
00:20:00,480 --> 00:20:02,820
environment see what the result would be

427
00:20:02,820 --> 00:20:05,880
and then we can design intelligently as

428
00:20:05,880 --> 00:20:08,580
a user if we want to do that or not so

429
00:20:08,580 --> 00:20:12,179
this brings us to simulation yes

430
00:20:12,179 --> 00:20:16,080
okay so simulation is allegedly our

431
00:20:16,080 --> 00:20:20,220
solution to predict what's the input is

432
00:20:20,220 --> 00:20:23,700
going to do in the blockchain but before

433
00:20:23,700 --> 00:20:26,700
we will explain what simulation is let's

434
00:20:26,700 --> 00:20:29,280
take a show Deep dive into ethereum and

435
00:20:29,280 --> 00:20:33,900
how it works so first evm is the runtime

436
00:20:33,900 --> 00:20:37,559
environment of a smart contacts in the

437
00:20:37,559 --> 00:20:41,039
ethereum and what basically happens is

438
00:20:41,039 --> 00:20:43,559
that there is a transition between

439
00:20:43,559 --> 00:20:47,340
blocks each blocks as a certain State

440
00:20:47,340 --> 00:20:50,900
and the the state is being

441
00:20:50,900 --> 00:20:53,880
changed by an input of a user's

442
00:20:53,880 --> 00:20:57,299
transaction so all these process is

443
00:20:57,299 --> 00:21:00,360
being operated through the evm

444
00:21:00,360 --> 00:21:04,020
and I would say how it's working under

445
00:21:04,020 --> 00:21:07,799
the wood so uh it works by processing

446
00:21:07,799 --> 00:21:11,100
evm opcodes which are a low level calls

447
00:21:11,100 --> 00:21:14,280
to the evm environment something let's

448
00:21:14,280 --> 00:21:16,559
say like assembly so these are a

449
00:21:16,559 --> 00:21:17,890
predefined instruction

450
00:21:17,890 --> 00:21:19,039
[Music]

451
00:21:19,039 --> 00:21:22,380
smart contacts are broken down into

452
00:21:22,380 --> 00:21:25,140
evmob codes at the end of the day

453
00:21:25,140 --> 00:21:26,580
so

454
00:21:26,580 --> 00:21:28,860
um within this evmo code there are some

455
00:21:28,860 --> 00:21:31,640
special ones some some variables that

456
00:21:31,640 --> 00:21:35,580
depends on the environment that their

457
00:21:35,580 --> 00:21:40,440
ran into and these are these verbal are

458
00:21:40,440 --> 00:21:43,520
not part of the regular State

459
00:21:43,520 --> 00:21:45,600
means they are part of the environment

460
00:21:45,600 --> 00:21:48,299
the user input for example a coinbase

461
00:21:48,299 --> 00:21:52,440
what's a coinbase op code it it hints

462
00:21:52,440 --> 00:21:55,980
what address is going to be the The

463
00:21:55,980 --> 00:21:58,559
Miner of the current block which

464
00:21:58,559 --> 00:22:03,179
obviously change between block to blocks

465
00:22:03,179 --> 00:22:05,880
so let's sum it up in the runtime

466
00:22:05,880 --> 00:22:08,340
execution so we have the user

467
00:22:08,340 --> 00:22:12,539
transaction user input data into the evm

468
00:22:12,539 --> 00:22:13,980
execution environment

469
00:22:13,980 --> 00:22:15,260
[Music]

470
00:22:15,260 --> 00:22:19,740
uh the smart contract which then can

471
00:22:19,740 --> 00:22:22,200
change the state and potentially emit a

472
00:22:22,200 --> 00:22:26,760
log will will talk more deep into this

473
00:22:26,760 --> 00:22:30,179
log keep this in your mind

474
00:22:30,179 --> 00:22:33,840
so if we take all of this into one

475
00:22:33,840 --> 00:22:36,960
picture so you can see in here there's a

476
00:22:36,960 --> 00:22:40,380
smart contact that is being debugged and

477
00:22:40,380 --> 00:22:42,860
so we have the stock the the the the the

478
00:22:42,860 --> 00:22:47,100
call data from the user input and the

479
00:22:47,100 --> 00:22:49,500
evmo codes in here and that's the

480
00:22:49,500 --> 00:22:52,860
solidity the high level language of the

481
00:22:52,860 --> 00:22:56,220
common eye level language of ethereum

482
00:22:56,220 --> 00:22:58,919
okay so now that we have all this in

483
00:22:58,919 --> 00:23:01,799
mind are we ready to simulate the

484
00:23:01,799 --> 00:23:04,679
execution environment so the answer is

485
00:23:04,679 --> 00:23:09,419
uh not yet why because although we have

486
00:23:09,419 --> 00:23:11,400
all the what we need to process the

487
00:23:11,400 --> 00:23:16,080
execution and we will have a very hard

488
00:23:16,080 --> 00:23:20,400
time to understand what's the input is

489
00:23:20,400 --> 00:23:22,400
going to be if we will

490
00:23:22,400 --> 00:23:28,740
baste our simulation on a on a a state

491
00:23:28,740 --> 00:23:30,179
changes

492
00:23:30,179 --> 00:23:34,080
and why is that because a stage state is

493
00:23:34,080 --> 00:23:36,120
basically just a storage flow that is

494
00:23:36,120 --> 00:23:37,520
being modified

495
00:23:37,520 --> 00:23:42,419
in a specific slot to uh to some uh some

496
00:23:42,419 --> 00:23:44,520
value so what would be our solution for

497
00:23:44,520 --> 00:23:47,039
that problem we'll just look into this

498
00:23:47,039 --> 00:23:49,380
event that I mentioned before and we'll

499
00:23:49,380 --> 00:23:54,120
try to pass them and explain their the

500
00:23:54,120 --> 00:23:57,139
results to the users

501
00:23:57,299 --> 00:24:01,020
so let's explain this event

502
00:24:01,020 --> 00:24:04,200
Italian events are invoked by smart

503
00:24:04,200 --> 00:24:06,659
contracts that so means that they are

504
00:24:06,659 --> 00:24:08,760
being generated on chain however they

505
00:24:08,760 --> 00:24:11,700
they are not consumed on chain it means

506
00:24:11,700 --> 00:24:14,039
the smart contracts can can't consume

507
00:24:14,039 --> 00:24:16,860
them by a but they can be consumed by

508
00:24:16,860 --> 00:24:18,480
off-chain services

509
00:24:18,480 --> 00:24:22,440
and so can we trust events the answer is

510
00:24:22,440 --> 00:24:25,500
that we can trust events of applications

511
00:24:25,500 --> 00:24:29,700
or smart contracts that we we trust that

512
00:24:29,700 --> 00:24:31,820
we trust

513
00:24:31,820 --> 00:24:36,559
and probably most common events in

514
00:24:36,559 --> 00:24:41,220
ELC and ethereum are the erc20 and EOC

515
00:24:41,220 --> 00:24:44,640
721 events which are the approval event

516
00:24:44,640 --> 00:24:47,100
as a tal mentioned before and the

517
00:24:47,100 --> 00:24:50,658
transfer Toronto events

518
00:24:50,760 --> 00:24:52,440
so

519
00:24:52,440 --> 00:24:55,380
um the simulation engine basically looks

520
00:24:55,380 --> 00:24:59,940
for this event and then show the the

521
00:24:59,940 --> 00:25:01,799
potential result to the user so let's

522
00:25:01,799 --> 00:25:05,400
take a look on how it looks in action so

523
00:25:05,400 --> 00:25:07,260
there is an input transaction to the

524
00:25:07,260 --> 00:25:09,840
user and

525
00:25:09,840 --> 00:25:13,940
you can see that the user inputs a 0.1

526
00:25:13,940 --> 00:25:18,120
Matic to a certain smart contract and

527
00:25:18,120 --> 00:25:21,120
the simulation engines tell the user

528
00:25:21,120 --> 00:25:23,779
that he's going to get a

529
00:25:23,779 --> 00:25:27,900
0.016 with which is an ELC token based

530
00:25:27,900 --> 00:25:30,679
on a potential transfer

531
00:25:30,679 --> 00:25:33,299
event that is being emitted by the smart

532
00:25:33,299 --> 00:25:36,679
contract and now the user given this

533
00:25:36,679 --> 00:25:40,039
this details need to decide whether he

534
00:25:40,039 --> 00:25:41,880
whether he wants to confirm the

535
00:25:41,880 --> 00:25:44,659
transaction or not

536
00:25:45,059 --> 00:25:48,960
so if we we would have this solution in

537
00:25:48,960 --> 00:25:51,200
the vegetable case that

538
00:25:51,200 --> 00:25:55,559
showed we will probably could reject the

539
00:25:55,559 --> 00:25:57,120
the transaction

540
00:25:57,120 --> 00:25:59,520
using a firewall that knows how to

541
00:25:59,520 --> 00:26:04,559
interpret these events okay so let's see

542
00:26:04,559 --> 00:26:08,400
if we can attack this engine

543
00:26:08,400 --> 00:26:11,059
so we'll talk about the red and loop is

544
00:26:11,059 --> 00:26:13,740
and attacks

545
00:26:13,740 --> 00:26:14,960
probably

546
00:26:14,960 --> 00:26:17,760
we all heard of them before in the Cyber

547
00:26:17,760 --> 00:26:20,159
traditional cyber security space let's

548
00:26:20,159 --> 00:26:23,100
see how we can take that page and

549
00:26:23,100 --> 00:26:25,679
implement it in a web tree but first

550
00:26:25,679 --> 00:26:29,400
like let's make a short brief so

551
00:26:29,400 --> 00:26:31,400
um

552
00:26:32,960 --> 00:26:36,659
so we will need first to find a red pill

553
00:26:36,659 --> 00:26:40,740
predicate which has can help us to

554
00:26:40,740 --> 00:26:43,940
understand whether we run under a

555
00:26:43,940 --> 00:26:46,340
simulation yes or not

556
00:26:46,340 --> 00:26:49,620
if we are on a simulation so we sure

557
00:26:49,620 --> 00:26:52,080
have been nine be able to use them

558
00:26:52,080 --> 00:26:54,960
otherwise means we are in a real

559
00:26:54,960 --> 00:26:59,220
environment we simply attack the user

560
00:26:59,220 --> 00:27:02,000
so in cyber security we have the

561
00:27:02,000 --> 00:27:05,880
VM detection is debugger present

562
00:27:05,880 --> 00:27:09,480
and sandbox detection and Etc

563
00:27:09,480 --> 00:27:11,600
in web3 security

564
00:27:11,600 --> 00:27:14,640
as a smart contract we try to understand

565
00:27:14,640 --> 00:27:17,820
whether we run under simulation or not

566
00:27:17,820 --> 00:27:19,380
hmm

567
00:27:19,380 --> 00:27:22,559
okay so giving all that in mind what was

568
00:27:22,559 --> 00:27:26,539
our hypothesis when we try to exploit

569
00:27:26,539 --> 00:27:30,120
this issue so the special variables that

570
00:27:30,120 --> 00:27:33,600
I mentioned before

571
00:27:33,600 --> 00:27:34,500
um

572
00:27:34,500 --> 00:27:37,440
so in real-time environment the these

573
00:27:37,440 --> 00:27:39,600
variables are derived from the

574
00:27:39,600 --> 00:27:42,720
environment or the of the user's input

575
00:27:42,720 --> 00:27:47,340
for example a gas price or a gas limit

576
00:27:47,340 --> 00:27:49,799
and Etc however in simulation they're

577
00:27:49,799 --> 00:27:51,539
being generated by the simulational

578
00:27:51,539 --> 00:27:55,679
provider the same provider that execute

579
00:27:55,679 --> 00:27:58,140
the simulation for us and show us the

580
00:27:58,140 --> 00:28:01,980
potential result

581
00:28:02,340 --> 00:28:06,539
um so almost any value is reason is

582
00:28:06,539 --> 00:28:08,760
valid over not every value is

583
00:28:08,760 --> 00:28:11,820
necessarily reasonable so we'll check

584
00:28:11,820 --> 00:28:14,360
this one

585
00:28:14,820 --> 00:28:17,220
when we wanted to validate our

586
00:28:17,220 --> 00:28:19,140
hypothesis

587
00:28:19,140 --> 00:28:22,380
so in first it's very hard to debug

588
00:28:22,380 --> 00:28:24,419
these values like we don't have any

589
00:28:24,419 --> 00:28:29,100
interface like it's just a wallet or

590
00:28:29,100 --> 00:28:32,700
or an extension that shows us the the

591
00:28:32,700 --> 00:28:35,880
emitted events so what could we uh can

592
00:28:35,880 --> 00:28:39,120
we do in order to debug this value so we

593
00:28:39,120 --> 00:28:40,500
deploy the

594
00:28:40,500 --> 00:28:42,960
smart contracts for example you can see

595
00:28:42,960 --> 00:28:45,840
in this code snippet that's a solidity

596
00:28:45,840 --> 00:28:48,320
function that

597
00:28:48,320 --> 00:28:51,659
emits 20 events you can see there is the

598
00:28:51,659 --> 00:28:53,220
loop

599
00:28:53,220 --> 00:28:55,760
um which every event

600
00:28:55,760 --> 00:28:59,760
within this 20 is the byte is one byte

601
00:28:59,760 --> 00:29:03,440
which represents a digit or a

602
00:29:03,440 --> 00:29:06,659
represents a byte of the address of the

603
00:29:06,659 --> 00:29:09,779
current block coinbase address the

604
00:29:09,779 --> 00:29:12,120
current Miner and that's because that

605
00:29:12,120 --> 00:29:14,000
the ethereum

606
00:29:14,000 --> 00:29:17,580
addresses are 20 bytes so in here we

607
00:29:17,580 --> 00:29:21,240
emitting 20 transfer events that show

608
00:29:21,240 --> 00:29:24,559
that together and compose the the the

609
00:29:24,559 --> 00:29:28,100
coinbase address

610
00:29:28,860 --> 00:29:31,200
so Bingo applying this technique we were

611
00:29:31,200 --> 00:29:32,480
able to

612
00:29:32,480 --> 00:29:35,640
debug all the environment variables of

613
00:29:35,640 --> 00:29:37,740
all the providers and then we could

614
00:29:37,740 --> 00:29:40,140
check if there are some constant

615
00:29:40,140 --> 00:29:42,080
unreasonable

616
00:29:42,080 --> 00:29:45,659
values for example if a certain provider

617
00:29:45,659 --> 00:29:49,140
use zero for its coinbase address so

618
00:29:49,140 --> 00:29:51,419
that's probably

619
00:29:51,419 --> 00:29:52,020
um

620
00:29:52,020 --> 00:29:55,799
won't meet us in a Ricky scenario the

621
00:29:55,799 --> 00:29:57,899
same the same applies for the gas price

622
00:29:57,899 --> 00:30:00,440
which can't be zero never

623
00:30:00,440 --> 00:30:03,659
otherwise the the in transaction won't

624
00:30:03,659 --> 00:30:05,360
be included or

625
00:30:05,360 --> 00:30:08,580
it won't enter the the contract from the

626
00:30:08,580 --> 00:30:10,500
beginning

627
00:30:10,500 --> 00:30:14,399
okay so once we discover uh discovered

628
00:30:14,399 --> 00:30:17,039
is unreasonable variables for each

629
00:30:17,039 --> 00:30:20,159
provider we could deploy a malicious

630
00:30:20,159 --> 00:30:22,740
smart contract and exploit them one one

631
00:30:22,740 --> 00:30:25,460
by one

632
00:30:25,559 --> 00:30:27,899
let's see an example for a coinbase

633
00:30:27,899 --> 00:30:30,070
coinbase op code which

634
00:30:30,070 --> 00:30:32,399
[Music]

635
00:30:32,399 --> 00:30:33,299
um

636
00:30:33,299 --> 00:30:35,940
which also was the applied for coinbase

637
00:30:35,940 --> 00:30:39,779
extension coinbase wallet and so in here

638
00:30:39,779 --> 00:30:43,080
we check the coinbase address of the

639
00:30:43,080 --> 00:30:44,659
current

640
00:30:44,659 --> 00:30:48,240
block Miner if it equals zero we

641
00:30:48,240 --> 00:30:50,340
understand that we run under simulation

642
00:30:50,340 --> 00:30:52,140
and we show the user will be nine

643
00:30:52,140 --> 00:30:54,240
behavior that tricks him into a

644
00:30:54,240 --> 00:30:56,039
confirming this from transaction into

645
00:30:56,039 --> 00:30:58,860
the blockchain otherwise we still use

646
00:30:58,860 --> 00:31:00,419
the funds because we understand that we

647
00:31:00,419 --> 00:31:02,480
are in a real time

648
00:31:02,480 --> 00:31:05,580
runtime execution

649
00:31:05,580 --> 00:31:07,980
so let's see let's see how we exploited

650
00:31:07,980 --> 00:31:09,480
the coinbase

651
00:31:09,480 --> 00:31:12,860
in this demo

652
00:31:13,320 --> 00:31:18,000
so in here the user inputs some funds

653
00:31:18,000 --> 00:31:19,980
into the contract

654
00:31:19,980 --> 00:31:23,279
clicks clicks right you can see that now

655
00:31:23,279 --> 00:31:25,440
the simulation engine we said that the

656
00:31:25,440 --> 00:31:28,559
user is going to get funds in return

657
00:31:28,559 --> 00:31:30,120
but

658
00:31:30,120 --> 00:31:32,640
the truth is that

659
00:31:32,640 --> 00:31:35,340
unfortunately the user just lost its

660
00:31:35,340 --> 00:31:37,520
fund and actually the simulation engine

661
00:31:37,520 --> 00:31:41,100
tricked the user into into confirming

662
00:31:41,100 --> 00:31:42,659
this transaction

663
00:31:42,659 --> 00:31:44,820
yeah so the user didn't get anything in

664
00:31:44,820 --> 00:31:45,899
return

665
00:31:45,899 --> 00:31:49,559
so yeah that's uh how exploited the

666
00:31:49,559 --> 00:31:50,620
coinbase

667
00:31:50,620 --> 00:31:56,340
[Applause]

668
00:31:56,340 --> 00:31:57,179
um

669
00:31:57,179 --> 00:31:59,940
then applying this technique we were

670
00:31:59,940 --> 00:32:02,460
very surprised to discover that almost

671
00:32:02,460 --> 00:32:05,100
every vendor that we checked was

672
00:32:05,100 --> 00:32:09,899
vulnerable to this exploit including you

673
00:32:09,899 --> 00:32:12,720
can see several wallets and some

674
00:32:12,720 --> 00:32:15,559
security extensions

675
00:32:15,559 --> 00:32:19,340
and we were able to get

676
00:32:19,340 --> 00:32:24,000
by reporting this issue some bounties

677
00:32:24,000 --> 00:32:28,679
from a providers that has that have a an

678
00:32:28,679 --> 00:32:33,659
active program and we also got a grant

679
00:32:33,659 --> 00:32:35,760
for the for research from the Italian

680
00:32:35,760 --> 00:32:38,779
foundation so that's something we will

681
00:32:38,779 --> 00:32:42,559
we're currently working on

682
00:32:42,559 --> 00:32:46,399
and how to fix this issue so

683
00:32:46,399 --> 00:32:49,020
the probably the obvious suggestion is

684
00:32:49,020 --> 00:32:52,260
just to use some some real environment

685
00:32:52,260 --> 00:32:55,380
variable for example for coinbase

686
00:32:55,380 --> 00:32:57,960
address so you can't know what's going

687
00:32:57,960 --> 00:32:59,279
to be there

688
00:32:59,279 --> 00:33:02,460
necessarily going to be the the coin the

689
00:33:02,460 --> 00:33:04,140
others of the current Miner but you can

690
00:33:04,140 --> 00:33:06,659
take the the address of the preview

691
00:33:06,659 --> 00:33:08,640
Miner in in a way that the simulation

692
00:33:08,640 --> 00:33:10,980
engine won't be able to uh the the

693
00:33:10,980 --> 00:33:14,220
malicious won't be able to predict what

694
00:33:14,220 --> 00:33:18,140
the simulation engine is going to use

695
00:33:18,140 --> 00:33:20,940
and also some other variables for

696
00:33:20,940 --> 00:33:23,340
example gas price and gas limits will be

697
00:33:23,340 --> 00:33:26,519
taken from the user input and not being

698
00:33:26,519 --> 00:33:29,880
provided by the simulation engine

699
00:33:29,880 --> 00:33:34,320
and then comes the Ken Mouse game time

700
00:33:34,320 --> 00:33:37,380
of check time of use so assuming the all

701
00:33:37,380 --> 00:33:40,080
the process takes uh some time between

702
00:33:40,080 --> 00:33:43,919
the um the trans the input that was

703
00:33:43,919 --> 00:33:46,679
introduced to the wallet until the user

704
00:33:46,679 --> 00:33:49,740
uh checked it and decided whether they

705
00:33:49,740 --> 00:33:52,260
want to sign or not

706
00:33:52,260 --> 00:33:53,220
um

707
00:33:53,220 --> 00:33:58,320
so we assume that if we can check if

708
00:33:58,320 --> 00:34:01,700
there is a a block difference between

709
00:34:01,700 --> 00:34:06,120
the time that the user

710
00:34:06,120 --> 00:34:07,860
initiate a transaction on the

711
00:34:07,860 --> 00:34:11,040
application on the web 2 interface until

712
00:34:11,040 --> 00:34:14,520
it's a lands on chain so if it if the

713
00:34:14,520 --> 00:34:16,918
block diff doesn't transmit a certain

714
00:34:16,918 --> 00:34:19,560
threshold so probably

715
00:34:19,560 --> 00:34:20,159
um

716
00:34:20,159 --> 00:34:24,599
we under the simulation otherwise means

717
00:34:24,599 --> 00:34:30,139
that it elapsed that block diff

718
00:34:30,179 --> 00:34:30,839
um

719
00:34:30,839 --> 00:34:34,260
threshold it means that we are in a real

720
00:34:34,260 --> 00:34:35,760
environment so

721
00:34:35,760 --> 00:34:39,359
let's let's see this one and and now

722
00:34:39,359 --> 00:34:41,699
we're with the show this using another

723
00:34:41,699 --> 00:34:43,739
wallet

724
00:34:43,739 --> 00:34:45,739
so we need the user

725
00:34:45,739 --> 00:34:48,300
is accessing a malicious swap to

726
00:34:48,300 --> 00:34:50,460
interface and you can see that he said

727
00:34:50,460 --> 00:34:52,560
that he's going to get some funds in

728
00:34:52,560 --> 00:34:54,799
return

729
00:34:56,219 --> 00:34:59,099
but again actually

730
00:34:59,099 --> 00:35:02,820
because the block diff threshold enough

731
00:35:02,820 --> 00:35:05,220
met so the user didn't get anything in

732
00:35:05,220 --> 00:35:07,080
return and you can see that the block

733
00:35:07,080 --> 00:35:10,440
number input was provided by the Melissa

734
00:35:10,440 --> 00:35:12,960
malicious webtoon interface so it could

735
00:35:12,960 --> 00:35:16,339
be verified on chain

736
00:35:17,240 --> 00:35:21,900
[Applause]

737
00:35:21,900 --> 00:35:27,440
okay so yeah let's have a wrap up

738
00:35:28,339 --> 00:35:32,880
okay so what we learned today so really

739
00:35:32,880 --> 00:35:35,520
takeaways and if you just coming in

740
00:35:35,520 --> 00:35:38,579
today you can this is cheat sheet you

741
00:35:38,579 --> 00:35:40,320
can say you you've been throughout the

742
00:35:40,320 --> 00:35:44,460
whole talk so web3 enables decentralized

743
00:35:44,460 --> 00:35:47,339
apps with some thrilling use case the

744
00:35:47,339 --> 00:35:50,640
true ownership of a digital asset really

745
00:35:50,640 --> 00:35:53,700
enables you to do a lot of interesting

746
00:35:53,700 --> 00:35:55,619
new stuff you couldn't you couldn't do

747
00:35:55,619 --> 00:35:58,200
in the past however it creates new

748
00:35:58,200 --> 00:36:01,740
attack surfaces such as raw contracts or

749
00:36:01,740 --> 00:36:04,680
log interfaces and the problem is that

750
00:36:04,680 --> 00:36:06,900
the user have no visibility to what

751
00:36:06,900 --> 00:36:10,260
they're signing so can you really own

752
00:36:10,260 --> 00:36:13,740
something if you don't understand what

753
00:36:13,740 --> 00:36:15,540
it means when you sign to do something

754
00:36:15,540 --> 00:36:17,460
with it you really don't have that

755
00:36:17,460 --> 00:36:20,880
ownership so visibility is crucial

756
00:36:20,880 --> 00:36:24,359
building block for web 3 and that's what

757
00:36:24,359 --> 00:36:27,660
simulations try to do uh it provides

758
00:36:27,660 --> 00:36:29,520
that visibility of what's going to

759
00:36:29,520 --> 00:36:32,640
happen before it happens so the user can

760
00:36:32,640 --> 00:36:36,839
make intelligent decision about uh about

761
00:36:36,839 --> 00:36:40,020
signing or not signing that was actually

762
00:36:40,020 --> 00:36:42,660
just it's suggested to it however we

763
00:36:42,660 --> 00:36:45,000
showed that when simulation is not

764
00:36:45,000 --> 00:36:47,339
properly implemented or implemented in

765
00:36:47,339 --> 00:36:50,099
in a secure way we can have all kind of

766
00:36:50,099 --> 00:36:54,240
red pills attacks that allows a contract

767
00:36:54,240 --> 00:36:56,359
to know whether it runs in simulation

768
00:36:56,359 --> 00:37:00,540
and if it if the contract is aware that

769
00:37:00,540 --> 00:37:03,000
they are running in simulation they can

770
00:37:03,000 --> 00:37:06,599
line simulation to say they are good but

771
00:37:06,599 --> 00:37:08,280
actually they're doing some bad stuff

772
00:37:08,280 --> 00:37:10,619
and this is a classic example in which

773
00:37:10,619 --> 00:37:13,980
you know having no visibility is better

774
00:37:13,980 --> 00:37:17,180
than having false visibility

775
00:37:17,180 --> 00:37:20,339
but once transaction simulation is

776
00:37:20,339 --> 00:37:23,220
different securely it's indeed provide

777
00:37:23,220 --> 00:37:27,000
that visibility and together with some

778
00:37:27,000 --> 00:37:30,780
security logic such as a web 3 personal

779
00:37:30,780 --> 00:37:33,660
firewall embedded within the wallet so

780
00:37:33,660 --> 00:37:36,180
this firewall can take this visibility

781
00:37:36,180 --> 00:37:39,119
now that I know I'm going to approve oh

782
00:37:39,119 --> 00:37:41,220
I'm going to send money or something

783
00:37:41,220 --> 00:37:43,800
like that and apply some security logic

784
00:37:43,800 --> 00:37:47,099
over it to help the user decide whether

785
00:37:47,099 --> 00:37:49,680
they're doing good thing or a bad thing

786
00:37:49,680 --> 00:37:52,260
so with that we conclude you can reach

787
00:37:52,260 --> 00:37:56,040
out to us in all kind of ways so thank

788
00:37:56,040 --> 00:37:58,380
you blue hat I have

789
00:37:58,380 --> 00:38:00,170
congratulations

790
00:38:00,170 --> 00:38:06,939
[Music]

