1
00:00:11,590 --> 00:00:17,750
hi everyone thanks for the introduction

2
00:00:14,540 --> 00:00:20,750
my name is Susana and I work for ESET as

3
00:00:17,750 --> 00:00:23,779
a malware researcher and this dog will

4
00:00:20,750 --> 00:00:26,599
actually be about malware about some apt

5
00:00:23,779 --> 00:00:29,180
that we found in the wild where the bad

6
00:00:26,599 --> 00:00:31,550
guys leverage some old school protocol

7
00:00:29,180 --> 00:00:34,970
for GSM fingerprinting which is

8
00:00:31,550 --> 00:00:38,200
interesting so let's have a show of hand

9
00:00:34,970 --> 00:00:40,970
do you recognize any of these strings

10
00:00:38,200 --> 00:00:43,070
okay some of you do I didn't

11
00:00:40,970 --> 00:00:46,970
maybe because these are some commands

12
00:00:43,070 --> 00:00:49,010
that are older than me but let's just be

13
00:00:46,970 --> 00:00:50,449
serious here so these are actually

14
00:00:49,010 --> 00:00:53,449
comments from a so called

15
00:00:50,450 --> 00:00:56,900
haze command set or 80 comments and

16
00:00:53,450 --> 00:00:59,690
these were developed back in the 80s to

17
00:00:56,900 --> 00:01:02,570
control some devices such as GSM modems

18
00:00:59,690 --> 00:01:05,000
or mobile phones for example to change

19
00:01:02,570 --> 00:01:08,299
connection settings or to dial-up and

20
00:01:05,000 --> 00:01:11,180
then later this common set was extended

21
00:01:08,299 --> 00:01:13,939
and new commands were added and they

22
00:01:11,180 --> 00:01:17,179
were born above vendor-specific

23
00:01:13,939 --> 00:01:19,898
and also standardized so they were able

24
00:01:17,179 --> 00:01:24,560
to support more functionality and

25
00:01:19,899 --> 00:01:27,259
actually in 2018 there was a security

26
00:01:24,560 --> 00:01:29,689
research that showed that these 80

27
00:01:27,259 --> 00:01:32,270
comments are not only supported by

28
00:01:29,689 --> 00:01:35,678
modems and older mobile phones but also

29
00:01:32,270 --> 00:01:39,259
by most of the modern smartphones and

30
00:01:35,679 --> 00:01:41,869
what is worse that these commands pose a

31
00:01:39,259 --> 00:01:44,210
huge security risk so what these

32
00:01:41,869 --> 00:01:46,639
researchers did is that they extracted

33
00:01:44,210 --> 00:01:49,460
firmware images from several smartphones

34
00:01:46,639 --> 00:01:51,740
from several Android devices from

35
00:01:49,460 --> 00:01:54,619
several manufacturers and then they

36
00:01:51,740 --> 00:01:57,469
examine these firmware images to extract

37
00:01:54,619 --> 00:01:59,509
the various 80 commands because a lot of

38
00:01:57,469 --> 00:02:01,339
them are vendor specific so each of

39
00:01:59,509 --> 00:02:03,289
these Android smartphones had different

40
00:02:01,340 --> 00:02:05,539
set of commands to support some

41
00:02:03,289 --> 00:02:08,090
different functionality and they

42
00:02:05,539 --> 00:02:10,429
actually found thousands of different ad

43
00:02:08,090 --> 00:02:12,350
comments and then they were doing some

44
00:02:10,429 --> 00:02:14,540
tests where they connected the

45
00:02:12,350 --> 00:02:16,760
smartphone to the computer and they were

46
00:02:14,540 --> 00:02:19,609
sending 80 commands to the smartphone

47
00:02:16,760 --> 00:02:21,649
and just by sending these 80 commands

48
00:02:19,610 --> 00:02:24,280
they were able to bypass android

49
00:02:21,650 --> 00:02:29,000
security settings to inject

50
00:02:24,280 --> 00:02:31,910
firmware or touch events or exfiltrate

51
00:02:29,000 --> 00:02:37,010
some sensitive data so this was a

52
00:02:31,910 --> 00:02:39,590
research front way 20:18 theoretical but

53
00:02:37,010 --> 00:02:41,649
actually it's not the only people who

54
00:02:39,590 --> 00:02:45,080
were looking at these eighty cards

55
00:02:41,650 --> 00:02:47,120
exactly at the same time in 2018 there

56
00:02:45,080 --> 00:02:49,520
was another group of people who was who

57
00:02:47,120 --> 00:02:52,550
were doing research on 80 comments and

58
00:02:49,520 --> 00:02:55,130
we were at we actually found these coins

59
00:02:52,550 --> 00:02:57,650
being misused by malware that is

60
00:02:55,130 --> 00:03:00,739
targeting Windows platform is an

61
00:02:57,650 --> 00:03:03,410
espionage platform that we called a

62
00:03:00,739 --> 00:03:06,680
torque and that's actually what we're

63
00:03:03,410 --> 00:03:10,220
going to talk about today so to have

64
00:03:06,680 --> 00:03:13,370
some perspective this platform is active

65
00:03:10,220 --> 00:03:15,290
since at least 2014 and there were a lot

66
00:03:13,370 --> 00:03:17,690
of different versions but what we are

67
00:03:15,290 --> 00:03:20,989
looking at today is this version that

68
00:03:17,690 --> 00:03:23,890
was released in 2018 with a major code

69
00:03:20,989 --> 00:03:26,360
upgrade where our architecture was

70
00:03:23,890 --> 00:03:28,518
significantly changed and improved the

71
00:03:26,360 --> 00:03:30,200
code is now more professional and

72
00:03:28,519 --> 00:03:33,170
actually this is the version of

73
00:03:30,200 --> 00:03:36,589
authorities still used today we have

74
00:03:33,170 --> 00:03:38,000
seen the late samples the last year so

75
00:03:36,590 --> 00:03:42,890
this is what we're going to talk about

76
00:03:38,000 --> 00:03:45,170
and it brings me to today's agenda so of

77
00:03:42,890 --> 00:03:47,958
course I want to talk about this GSM

78
00:03:45,170 --> 00:03:51,048
fingerprinting feature which is then

79
00:03:47,959 --> 00:03:53,480
used using these 80 comments and also I

80
00:03:51,049 --> 00:03:55,579
want to talk about the other interesting

81
00:03:53,480 --> 00:03:58,548
functionality that gave this platform

82
00:03:55,579 --> 00:04:00,829
its name and that is the elaborate

83
00:03:58,549 --> 00:04:03,650
network communication which is a

84
00:04:00,829 --> 00:04:05,989
customized store but before I go into

85
00:04:03,650 --> 00:04:09,140
that I also want to talk about some

86
00:04:05,989 --> 00:04:11,570
context so whoever is looking at where

87
00:04:09,140 --> 00:04:13,790
the targets and of course we want to see

88
00:04:11,570 --> 00:04:16,399
something about the architecture of the

89
00:04:13,790 --> 00:04:20,149
platform so that we are able to better

90
00:04:16,399 --> 00:04:22,820
understand the specifics of the later so

91
00:04:20,149 --> 00:04:25,099
let's start with the targets the first

92
00:04:22,820 --> 00:04:27,710
thing we knew about at our targets is

93
00:04:25,100 --> 00:04:30,440
that it is highly targeted we've seen

94
00:04:27,710 --> 00:04:32,630
less than 30 targets and these included

95
00:04:30,440 --> 00:04:36,350
some high profile users in Eastern

96
00:04:32,630 --> 00:04:38,120
Europe but this is our telemetry

97
00:04:36,350 --> 00:04:40,820
that's like just a part of the picture

98
00:04:38,120 --> 00:04:43,520
so we also wanted to know more about the

99
00:04:40,820 --> 00:04:44,780
intended targets of a tour so what we

100
00:04:43,520 --> 00:04:47,419
did is that we looked at the

101
00:04:44,780 --> 00:04:49,880
functionality and some artifacts in the

102
00:04:47,420 --> 00:04:54,140
code and we're actually able to learn

103
00:04:49,880 --> 00:04:56,120
more so how we did it first you need to

104
00:04:54,140 --> 00:04:59,450
know something about the platform and

105
00:04:56,120 --> 00:05:03,380
then we look at the artifacts so actor

106
00:04:59,450 --> 00:05:06,320
has the main part say a dispatcher which

107
00:05:03,380 --> 00:05:09,110
comes both in 32 and 64-bit version and

108
00:05:06,320 --> 00:05:11,450
then there is a series of plugins for

109
00:05:09,110 --> 00:05:14,270
both of these versions and how this

110
00:05:11,450 --> 00:05:16,729
whole platform comes to life is that the

111
00:05:14,270 --> 00:05:19,580
plugins are first injected into all the

112
00:05:16,730 --> 00:05:22,370
running processes and then they load all

113
00:05:19,580 --> 00:05:24,229
of the the dispatchers are injected and

114
00:05:22,370 --> 00:05:27,080
that they allowed all the plugins and

115
00:05:24,230 --> 00:05:28,490
the plugins themselves then decide in

116
00:05:27,080 --> 00:05:30,859
which of the processes they will get

117
00:05:28,490 --> 00:05:33,230
activated for example the network

118
00:05:30,860 --> 00:05:35,420
communication plugins only get activated

119
00:05:33,230 --> 00:05:37,880
in processes that already communicate

120
00:05:35,420 --> 00:05:39,860
over the Internet of course this is to

121
00:05:37,880 --> 00:05:42,920
hide the malicious traffic within a

122
00:05:39,860 --> 00:05:46,370
regular stream of network traffic so

123
00:05:42,920 --> 00:05:49,010
similarly the audio recording plug-in is

124
00:05:46,370 --> 00:05:51,890
only activated in the processes that

125
00:05:49,010 --> 00:05:55,010
already communicate using the microphone

126
00:05:51,890 --> 00:05:57,919
such as teleconferencing or VoIP apps

127
00:05:55,010 --> 00:06:00,680
and it is also true for other plugins

128
00:05:57,920 --> 00:06:02,570
but we are only interested about a

129
00:06:00,680 --> 00:06:04,610
screen grabbing plugging at the moment

130
00:06:02,570 --> 00:06:07,400
this is the one that takes screenshots

131
00:06:04,610 --> 00:06:09,830
of several applications to be able to

132
00:06:07,400 --> 00:06:12,830
report on the victims activities and

133
00:06:09,830 --> 00:06:15,950
again it only looks at some specific

134
00:06:12,830 --> 00:06:18,440
processes by the process name or by the

135
00:06:15,950 --> 00:06:21,530
windows title and then it only activates

136
00:06:18,440 --> 00:06:24,469
in some of the processes when we look at

137
00:06:21,530 --> 00:06:26,150
which processes it wants to be activated

138
00:06:24,470 --> 00:06:28,550
we know which application

139
00:06:26,150 --> 00:06:31,580
it's interested in and then which

140
00:06:28,550 --> 00:06:34,340
targets its interested in so when you

141
00:06:31,580 --> 00:06:37,130
first look at the list of the targeted

142
00:06:34,340 --> 00:06:39,890
applications it's nothing special what

143
00:06:37,130 --> 00:06:43,010
you'd expect some mail services some

144
00:06:39,890 --> 00:06:43,820
social networks and office utilities but

145
00:06:43,010 --> 00:06:47,000
there's more

146
00:06:43,820 --> 00:06:49,550
there are also strings like progressing

147
00:06:47,000 --> 00:06:52,550
it GT or and export

148
00:06:49,550 --> 00:06:55,160
and is actually all referred to popular

149
00:06:52,550 --> 00:06:57,380
Russian applications including the two

150
00:06:55,160 --> 00:07:00,500
most popular social networks in Russia

151
00:06:57,380 --> 00:07:03,440
or a VoIP application provided by a

152
00:07:00,500 --> 00:07:05,420
Russian telecom operator so this seems

153
00:07:03,440 --> 00:07:09,020
like a tour is specifically interested

154
00:07:05,420 --> 00:07:12,110
in russian-speaking users and indeed

155
00:07:09,020 --> 00:07:14,900
just confirmed by our telemetry most of

156
00:07:12,110 --> 00:07:18,440
the most of the targets of a tour we're

157
00:07:14,900 --> 00:07:21,549
located in Russia but that's not all

158
00:07:18,440 --> 00:07:24,680
there are also other interesting strings

159
00:07:21,550 --> 00:07:28,490
that point to applications like digital

160
00:07:24,680 --> 00:07:31,340
signature utilities or VPN applications

161
00:07:28,490 --> 00:07:33,980
secure email secure browser so it also

162
00:07:31,340 --> 00:07:36,789
seems like a third is specifically

163
00:07:33,980 --> 00:07:39,620
interested in privacy concern users and

164
00:07:36,790 --> 00:07:42,290
again this is confirmed by another part

165
00:07:39,620 --> 00:07:44,750
of the code so see the true rip other is

166
00:07:42,290 --> 00:07:47,030
taking screenshots of TrueCrypt but also

167
00:07:44,750 --> 00:07:50,030
it tries to contact the TrueCrypt driver

168
00:07:47,030 --> 00:07:53,900
if present on the system and then it's

169
00:07:50,030 --> 00:07:57,909
sent an IOC TL codes to the driver so if

170
00:07:53,900 --> 00:08:00,289
I OC deals are actually used for

171
00:07:57,910 --> 00:08:02,930
determining the version of the true

172
00:08:00,290 --> 00:08:05,090
crypt I've installed and the interesting

173
00:08:02,930 --> 00:08:06,860
part here is that these are through

174
00:08:05,090 --> 00:08:09,979
crypt specific there are not standard

175
00:08:06,860 --> 00:08:12,110
i/o CTO cups so not only not only the

176
00:08:09,980 --> 00:08:15,230
confirms that a tour is interested in

177
00:08:12,110 --> 00:08:17,210
privacy conscious users but also it

178
00:08:15,230 --> 00:08:19,340
shows us something about the skills of

179
00:08:17,210 --> 00:08:21,500
the developers because you first need to

180
00:08:19,340 --> 00:08:24,080
be familiar with the TrueCrypt code and

181
00:08:21,500 --> 00:08:27,320
to see how it works before you can use

182
00:08:24,080 --> 00:08:31,520
this rare technique so let's just prep

183
00:08:27,320 --> 00:08:34,700
the target after it's interested in two

184
00:08:31,520 --> 00:08:37,699
main groups of targets we have seen high

185
00:08:34,700 --> 00:08:40,370
profile users in Eastern Europe and then

186
00:08:37,700 --> 00:08:44,510
individual russian-speaking privacy

187
00:08:40,370 --> 00:08:48,470
concerned users now for the platform

188
00:08:44,510 --> 00:08:51,319
itself so we already seen that the main

189
00:08:48,470 --> 00:08:53,480
part is the dispatcher but then there

190
00:08:51,320 --> 00:08:55,400
are also the other parts the plugins

191
00:08:53,480 --> 00:08:58,490
that are loaded by the dispatcher and

192
00:08:55,400 --> 00:09:01,939
then synchronized with each other then

193
00:08:58,490 --> 00:09:02,930
maybe aside now there are four local

194
00:09:01,940 --> 00:09:06,140
shared folder

195
00:09:02,930 --> 00:09:08,930
are used by the components of other to

196
00:09:06,140 --> 00:09:11,660
share information so some of the plugins

197
00:09:08,930 --> 00:09:14,420
create files in these plug these folders

198
00:09:11,660 --> 00:09:16,969
and other read from them so as for the

199
00:09:14,420 --> 00:09:19,160
plugins there is a installer plugin that

200
00:09:16,970 --> 00:09:21,709
of course ensures persistence of the

201
00:09:19,160 --> 00:09:23,689
whole platform that there are others but

202
00:09:21,709 --> 00:09:26,959
the most interesting ones are maybe

203
00:09:23,690 --> 00:09:28,700
these espionage plugins which collects

204
00:09:26,959 --> 00:09:30,739
some information from the compromised

205
00:09:28,700 --> 00:09:33,320
computer and these are information that

206
00:09:30,740 --> 00:09:35,930
gets stored in the central upload folder

207
00:09:33,320 --> 00:09:38,209
and now you may imagine that this

208
00:09:35,930 --> 00:09:40,520
information gets ultimately exfiltrated

209
00:09:38,209 --> 00:09:43,579
to a CNC server but this is not done

210
00:09:40,520 --> 00:09:46,250
directly because it's a third service so

211
00:09:43,580 --> 00:09:48,920
after is using a series of other plugins

212
00:09:46,250 --> 00:09:51,080
to do so so there is a file uploader

213
00:09:48,920 --> 00:09:53,300
plugin that would regularly check this

214
00:09:51,080 --> 00:09:55,399
upload folder and if there's any new

215
00:09:53,300 --> 00:09:58,880
data then it prepares the data for

216
00:09:55,399 --> 00:09:59,450
exfiltration then there is a torque one

217
00:09:58,880 --> 00:10:03,860
plugin

218
00:09:59,450 --> 00:10:05,920
this is not the door eggsy standard

219
00:10:03,860 --> 00:10:08,930
process but it's a customized version

220
00:10:05,920 --> 00:10:11,029
because atour uses a specific interface

221
00:10:08,930 --> 00:10:14,270
for all of these plugins but it is based

222
00:10:11,029 --> 00:10:16,910
on torque and this one makes sure that

223
00:10:14,270 --> 00:10:20,000
it resolves the onion domain and it

224
00:10:16,910 --> 00:10:22,730
generates the circuit and then encrypts

225
00:10:20,000 --> 00:10:25,339
the data and then it uses the last

226
00:10:22,730 --> 00:10:28,370
plugin which is a Sox proxy that would

227
00:10:25,339 --> 00:10:30,620
then contact the server directly and

228
00:10:28,370 --> 00:10:33,380
that was just one part of the

229
00:10:30,620 --> 00:10:35,480
communication but also the server one to

230
00:10:33,380 --> 00:10:37,880
reach back to the compromised computer

231
00:10:35,480 --> 00:10:41,600
so that you can send some additional

232
00:10:37,880 --> 00:10:44,240
code or data or comments and this is

233
00:10:41,600 --> 00:10:46,760
again then using the socks proxy enter

234
00:10:44,240 --> 00:10:49,130
plugin and they stand the comments get

235
00:10:46,760 --> 00:10:51,500
relayed to another plugin that we named

236
00:10:49,130 --> 00:10:53,720
a command dispatcher and if there's any

237
00:10:51,500 --> 00:10:56,510
new tools pushed to the computer then

238
00:10:53,720 --> 00:10:59,480
these get stored in other central upload

239
00:10:56,510 --> 00:11:01,790
folders and these are then monitored by

240
00:10:59,480 --> 00:11:04,339
the dispatcher so if there is an update

241
00:11:01,790 --> 00:11:07,099
for a plugin then the dispatcher can

242
00:11:04,339 --> 00:11:09,260
load it so there is a mechanism how you

243
00:11:07,100 --> 00:11:13,670
can have your malware always up-to-date

244
00:11:09,260 --> 00:11:16,640
and it works this way so the interesting

245
00:11:13,670 --> 00:11:18,530
part here is that the dispatcher never

246
00:11:16,640 --> 00:11:21,230
directly communicates with the CNC

247
00:11:18,530 --> 00:11:23,420
server it always goes to the other four

248
00:11:21,230 --> 00:11:26,120
plugins and that's the same for these

249
00:11:23,420 --> 00:11:28,189
plugins that collect information so

250
00:11:26,120 --> 00:11:31,040
focusing just on the network

251
00:11:28,190 --> 00:11:33,580
communication it split into four

252
00:11:31,040 --> 00:11:36,380
different components and each of them

253
00:11:33,580 --> 00:11:38,360
implements a different layer two of the

254
00:11:36,380 --> 00:11:40,100
components are running local server so

255
00:11:38,360 --> 00:11:42,950
that the other components can contact

256
00:11:40,100 --> 00:11:45,470
these components and relay the

257
00:11:42,950 --> 00:11:47,900
communication through them I also

258
00:11:45,470 --> 00:11:50,090
already mentioned that these plugins get

259
00:11:47,900 --> 00:11:52,640
only activated in applications where

260
00:11:50,090 --> 00:11:54,950
they're able to hide an the malicious

261
00:11:52,640 --> 00:11:59,510
traffic within a regular stream of

262
00:11:54,950 --> 00:12:03,620
network traffic and also the server is a

263
00:11:59,510 --> 00:12:06,530
Tyrolean service protocol and it's it

264
00:12:03,620 --> 00:12:10,040
used is a customized store for anonymity

265
00:12:06,530 --> 00:12:12,740
and traceability so this was the

266
00:12:10,040 --> 00:12:15,469
platform as a whole but also the

267
00:12:12,740 --> 00:12:17,870
interesting part is how the individual

268
00:12:15,470 --> 00:12:21,440
plugins are implemented and how they are

269
00:12:17,870 --> 00:12:23,060
synchronized with the dispatcher so when

270
00:12:21,440 --> 00:12:25,130
you look at the plugins and they don't

271
00:12:23,060 --> 00:12:26,959
have the dispatcher you're not able to

272
00:12:25,130 --> 00:12:29,660
analyze them because there are a lot of

273
00:12:26,960 --> 00:12:32,810
references to some mysterious function

274
00:12:29,660 --> 00:12:35,209
and this function is actually

275
00:12:32,810 --> 00:12:37,790
implemented in the others dispatcher and

276
00:12:35,210 --> 00:12:40,790
acts like a proxy for Windows API

277
00:12:37,790 --> 00:12:42,860
functions or cryptographic functions and

278
00:12:40,790 --> 00:12:44,719
other functions like this so only if you

279
00:12:42,860 --> 00:12:48,650
have access to the dispatcher you're

280
00:12:44,720 --> 00:12:50,570
able to map it with the plugins and to

281
00:12:48,650 --> 00:12:55,040
actually give some meaningful names to

282
00:12:50,570 --> 00:12:57,530
the romance and why this is able to work

283
00:12:55,040 --> 00:13:00,410
is there remember the dispatcher is

284
00:12:57,530 --> 00:13:02,720
injected into the processes where the

285
00:13:00,410 --> 00:13:04,880
plugins are injected as well that means

286
00:13:02,720 --> 00:13:07,070
they share the same address space so

287
00:13:04,880 --> 00:13:09,470
it's a it's possible that they call each

288
00:13:07,070 --> 00:13:11,510
other's function so for this specific

289
00:13:09,470 --> 00:13:13,670
function this is passed to the plugins

290
00:13:11,510 --> 00:13:16,550
onload by the dispatcher and then

291
00:13:13,670 --> 00:13:19,209
subsequently plugins always use the

292
00:13:16,550 --> 00:13:22,310
functions of the dispatcher to do the

293
00:13:19,210 --> 00:13:26,570
basic window API functions and crypto

294
00:13:22,310 --> 00:13:29,390
functions and so this is how the load

295
00:13:26,570 --> 00:13:30,220
looks like the plugins are implemented

296
00:13:29,390 --> 00:13:34,810
as the

297
00:13:30,220 --> 00:13:37,240
else with a I'd say traditional expert

298
00:13:34,810 --> 00:13:40,989
named DLL get class object but this is

299
00:13:37,240 --> 00:13:44,170
not the important part there to other

300
00:13:40,990 --> 00:13:47,590
parts so first this is where the

301
00:13:44,170 --> 00:13:49,420
dispatcher passes the pointer to the

302
00:13:47,590 --> 00:13:52,390
helper function or the dispatcher

303
00:13:49,420 --> 00:13:55,120
function to the plugins and then this is

304
00:13:52,390 --> 00:13:57,939
where the plugins returned the plugin ID

305
00:13:55,120 --> 00:14:00,700
and the plug-in version and this helped

306
00:13:57,940 --> 00:14:05,890
us sort all of the plugins that we had

307
00:14:00,700 --> 00:14:08,650
and to track which plugins are in which

308
00:14:05,890 --> 00:14:11,530
version of the development cycle these

309
00:14:08,650 --> 00:14:14,050
are all the plugins that we have you can

310
00:14:11,530 --> 00:14:18,370
see the IDS and analyze versions over

311
00:14:14,050 --> 00:14:21,010
here and now this IDs look like the

312
00:14:18,370 --> 00:14:22,720
numbering is continuous and you can

313
00:14:21,010 --> 00:14:25,240
notice that we are probably missing some

314
00:14:22,720 --> 00:14:30,100
plugins and that's not so surprising

315
00:14:25,240 --> 00:14:32,380
because remember the platform is highly

316
00:14:30,100 --> 00:14:34,360
targeted so likely they're using

317
00:14:32,380 --> 00:14:36,760
differences of plugins for different

318
00:14:34,360 --> 00:14:38,440
things so we probably don't see all the

319
00:14:36,760 --> 00:14:42,640
victims and don't have all the plugins

320
00:14:38,440 --> 00:14:45,430
but also it was difficult to obtain the

321
00:14:42,640 --> 00:14:48,400
plugins because they're only present on

322
00:14:45,430 --> 00:14:51,489
this encrypted with a strong encryption

323
00:14:48,400 --> 00:14:54,579
so you need access to the function to

324
00:14:51,490 --> 00:14:56,410
the dispatcher to be able to decrypt the

325
00:14:54,580 --> 00:14:58,690
plugin so if you don't have them you

326
00:14:56,410 --> 00:15:01,480
cannot analyze them so that's why we

327
00:14:58,690 --> 00:15:04,420
don't have all the plugins nevertheless

328
00:15:01,480 --> 00:15:06,880
from all these plugins we are only going

329
00:15:04,420 --> 00:15:09,910
to talk about this one the device

330
00:15:06,880 --> 00:15:12,330
monitor plug-in which is responsible for

331
00:15:09,910 --> 00:15:14,920
GSM fingerprinting among other

332
00:15:12,330 --> 00:15:18,250
functionalities so two notes to this

333
00:15:14,920 --> 00:15:22,270
plug-in before we dive in first one is

334
00:15:18,250 --> 00:15:24,160
that this plug-in is assigned ID one is

335
00:15:22,270 --> 00:15:26,980
interesting it's a such a prominent

336
00:15:24,160 --> 00:15:29,260
space maybe it indicates that this is

337
00:15:26,980 --> 00:15:32,230
the most important functionality of a

338
00:15:29,260 --> 00:15:34,390
tour but also the version that we

339
00:15:32,230 --> 00:15:36,190
analyze is number fourteen and that's

340
00:15:34,390 --> 00:15:38,680
the highest of all the versions that we

341
00:15:36,190 --> 00:15:41,710
analyzed and that could also mean that

342
00:15:38,680 --> 00:15:43,239
the developers put some more effort into

343
00:15:41,710 --> 00:15:47,020
developing these in the

344
00:15:43,240 --> 00:15:49,390
this specific plugin let's look at it

345
00:15:47,020 --> 00:15:52,510
closer let's look at the GSM

346
00:15:49,390 --> 00:15:56,410
fingerprinting functionality so we've

347
00:15:52,510 --> 00:15:59,110
already seen these strings now let's

348
00:15:56,410 --> 00:16:02,280
give them some meaning so these are

349
00:15:59,110 --> 00:16:05,200
commands that are referred from a tour

350
00:16:02,280 --> 00:16:07,780
when some device is connected to the

351
00:16:05,200 --> 00:16:10,060
compromised computer a tour is using

352
00:16:07,780 --> 00:16:12,939
this ad command protocol these are just

353
00:16:10,060 --> 00:16:16,060
the commands that are used inside the

354
00:16:12,940 --> 00:16:18,580
protocol so we have this a deployment

355
00:16:16,060 --> 00:16:21,640
that always denotes start of

356
00:16:18,580 --> 00:16:25,270
communication with the device 84

357
00:16:21,640 --> 00:16:28,390
attention then if the computer wants to

358
00:16:25,270 --> 00:16:30,790
use this extended set of extended 80

359
00:16:28,390 --> 00:16:33,490
comments it would use this command and

360
00:16:30,790 --> 00:16:37,480
then there are more interesting commands

361
00:16:33,490 --> 00:16:42,490
such as retrieving model number place

362
00:16:37,480 --> 00:16:44,260
manufacturer software version and then

363
00:16:42,490 --> 00:16:47,980
the IMEI number which is a unique

364
00:16:44,260 --> 00:16:50,230
identifier of the device the IMS ID

365
00:16:47,980 --> 00:16:53,290
number which is a unique identifier of

366
00:16:50,230 --> 00:16:56,860
the device subscriber or owner of the

367
00:16:53,290 --> 00:16:59,650
SIM card and finally the IMS ISDN number

368
00:16:56,860 --> 00:17:04,180
and that's the mapping between the owner

369
00:16:59,650 --> 00:17:08,800
identity and the telephone number so

370
00:17:04,180 --> 00:17:11,050
just to recap what a tour is doing is

371
00:17:08,800 --> 00:17:13,810
that when it detects a device connected

372
00:17:11,050 --> 00:17:15,669
to the computer it starts sending 80

373
00:17:13,810 --> 00:17:18,399
commands to communicate with the device

374
00:17:15,670 --> 00:17:21,070
and by that it's able to retrieve

375
00:17:18,400 --> 00:17:24,190
information both about the device itself

376
00:17:21,069 --> 00:17:30,189
but also about its subscriber identity

377
00:17:24,190 --> 00:17:32,140
and also its telephone number and you

378
00:17:30,190 --> 00:17:34,570
may have noticed that I have used the

379
00:17:32,140 --> 00:17:38,170
term device a lot but I never specified

380
00:17:34,570 --> 00:17:40,120
what kind of device a tour is after so

381
00:17:38,170 --> 00:17:44,440
there was actually the question that we

382
00:17:40,120 --> 00:17:47,530
were asking as well so what devices is

383
00:17:44,440 --> 00:17:49,900
at or trying to fingerprint is it the

384
00:17:47,530 --> 00:17:52,990
modems because originally the ad

385
00:17:49,900 --> 00:17:56,490
commands were developed for modems or is

386
00:17:52,990 --> 00:17:59,700
it some older phones which also have

387
00:17:56,490 --> 00:18:02,220
card and support 80 commands or is it

388
00:17:59,700 --> 00:18:04,920
possible that it targets a more modern

389
00:18:02,220 --> 00:18:08,010
devices that also have SIM cards such as

390
00:18:04,920 --> 00:18:13,260
smart camera smart watches or smart

391
00:18:08,010 --> 00:18:15,660
phones from the research from 2018 we

392
00:18:13,260 --> 00:18:17,900
have seen that smart phones also 480

393
00:18:15,660 --> 00:18:21,059
commands so it would be possible to

394
00:18:17,900 --> 00:18:23,010
exfiltrate sensitive data from the smart

395
00:18:21,059 --> 00:18:26,160
phones just by using 80 comments and

396
00:18:23,010 --> 00:18:29,370
also also much more so that was our

397
00:18:26,160 --> 00:18:31,890
first hypothesis and we checked how

398
00:18:29,370 --> 00:18:34,620
other is actually connecting to the

399
00:18:31,890 --> 00:18:36,990
devices so this is part of the code

400
00:18:34,620 --> 00:18:39,419
where Authority tags that some device

401
00:18:36,990 --> 00:18:41,730
was connected to the computer and this

402
00:18:39,420 --> 00:18:44,550
says whether it would come it would send

403
00:18:41,730 --> 00:18:46,710
any commands to the device or not so

404
00:18:44,550 --> 00:18:48,690
what it does is that it checks for the

405
00:18:46,710 --> 00:18:51,179
device friendly name and then it

406
00:18:48,690 --> 00:18:53,970
searches for a calm substring in the

407
00:18:51,179 --> 00:18:56,520
friendly name and that means it targets

408
00:18:53,970 --> 00:18:59,100
devices that they're either connected to

409
00:18:56,520 --> 00:19:01,530
a serial port or a virtual serial port

410
00:18:59,100 --> 00:19:03,629
so not your standard smartphones

411
00:19:01,530 --> 00:19:06,210
normally when you connect smart phones

412
00:19:03,630 --> 00:19:08,160
to your computer you use the USB port

413
00:19:06,210 --> 00:19:10,380
and then the friendly name looks

414
00:19:08,160 --> 00:19:13,380
completely different so either there's

415
00:19:10,380 --> 00:19:16,470
like the smartphone name or there is a

416
00:19:13,380 --> 00:19:18,720
USB substring but this comes up string

417
00:19:16,470 --> 00:19:21,540
so it seems like although it would be

418
00:19:18,720 --> 00:19:24,360
possible to fingerprint smart phones

419
00:19:21,540 --> 00:19:27,000
other is completely ignoring them if

420
00:19:24,360 --> 00:19:29,909
there is a device device connected to a

421
00:19:27,000 --> 00:19:33,809
USB port it doesn't send the 80 commands

422
00:19:29,910 --> 00:19:37,110
at all so then we considered a totally

423
00:19:33,809 --> 00:19:40,800
different hypothesis maybe this is

424
00:19:37,110 --> 00:19:44,750
indeed just that author is trying to

425
00:19:40,800 --> 00:19:48,059
look for some old modems or old phones

426
00:19:44,750 --> 00:19:51,690
platform has been around since 2013 so

427
00:19:48,059 --> 00:19:54,090
it could be some residual if we remember

428
00:19:51,690 --> 00:19:56,130
that it only targets devices that are

429
00:19:54,090 --> 00:20:00,510
either connected to the serial port or

430
00:19:56,130 --> 00:20:03,360
by a USB to come adapter and also if we

431
00:20:00,510 --> 00:20:08,190
remember that GSM modems and some older

432
00:20:03,360 --> 00:20:09,870
phones do support 80 commands but this

433
00:20:08,190 --> 00:20:13,320
also turned out not to be

434
00:20:09,870 --> 00:20:15,209
right because we've seen the plug-in

435
00:20:13,320 --> 00:20:17,850
used for the first time in a new

436
00:20:15,210 --> 00:20:20,580
upgraded version that was released in

437
00:20:17,850 --> 00:20:23,490
2018 so never before but more

438
00:20:20,580 --> 00:20:25,460
importantly in 2019 we have seen a new

439
00:20:23,490 --> 00:20:29,220
upgraded version of this plug-in

440
00:20:25,460 --> 00:20:31,500
recompile to 64-bit architecture so if

441
00:20:29,220 --> 00:20:33,960
it was really just a resume not used

442
00:20:31,500 --> 00:20:37,110
anymore why would the attackers bother

443
00:20:33,960 --> 00:20:39,960
recompiling the plug-in for a 64-bit

444
00:20:37,110 --> 00:20:43,040
architecture so we don't really think

445
00:20:39,960 --> 00:20:46,320
this is the case we think that the

446
00:20:43,040 --> 00:20:48,510
developers behind a tour do know what

447
00:20:46,320 --> 00:20:50,730
they are using the plugin for and they

448
00:20:48,510 --> 00:20:54,800
do know where they keeping it up-to-date

449
00:20:50,730 --> 00:20:57,630
and so there are different theories and

450
00:20:54,800 --> 00:21:02,340
different kind of devices that could be

451
00:20:57,630 --> 00:21:04,920
affected by this malware so first of all

452
00:21:02,340 --> 00:21:07,620
obviously it's the modems and older

453
00:21:04,920 --> 00:21:11,850
phones which can be both connected by

454
00:21:07,620 --> 00:21:14,309
serial bird and support 80 commands but

455
00:21:11,850 --> 00:21:16,800
then also if you consider the types of

456
00:21:14,309 --> 00:21:19,350
victims that author is after which is

457
00:21:16,800 --> 00:21:21,690
also some high profile users these can

458
00:21:19,350 --> 00:21:24,719
be some governmental organizations and

459
00:21:21,690 --> 00:21:28,320
they can use some specific specialized

460
00:21:24,720 --> 00:21:30,420
GSM communication devices or basically

461
00:21:28,320 --> 00:21:33,389
any other devices that satisfy these

462
00:21:30,420 --> 00:21:35,880
conditions the attackers behind a tour

463
00:21:33,390 --> 00:21:38,100
could have learned about these specific

464
00:21:35,880 --> 00:21:40,920
devices using other reconnaissance

465
00:21:38,100 --> 00:21:44,459
method methods and we can only guess

466
00:21:40,920 --> 00:21:46,860
what types of devices these are and then

467
00:21:44,460 --> 00:21:49,890
there are further possibilities these

468
00:21:46,860 --> 00:21:52,229
are not probably targeted by at all but

469
00:21:49,890 --> 00:21:55,110
there can be any other malware which

470
00:21:52,230 --> 00:21:58,890
will take these other devices as targets

471
00:21:55,110 --> 00:22:01,949
such as ICS devices which do support 80

472
00:21:58,890 --> 00:22:05,429
commands and are connected using serial

473
00:22:01,950 --> 00:22:08,940
ports are as I mentioned before it can

474
00:22:05,429 --> 00:22:12,000
take smartphones at targets and do the

475
00:22:08,940 --> 00:22:15,240
same just by not ignoring devices that

476
00:22:12,000 --> 00:22:18,240
are connected to the USB port and if

477
00:22:15,240 --> 00:22:21,570
this is true then the implications are

478
00:22:18,240 --> 00:22:22,860
huge so first of all we've already seen

479
00:22:21,570 --> 00:22:25,379
that other is doing

480
00:22:22,860 --> 00:22:28,289
device fingerprinting so it queries for

481
00:22:25,380 --> 00:22:31,799
the identifiers of the device and the

482
00:22:28,289 --> 00:22:34,549
subscriber so after it has this

483
00:22:31,799 --> 00:22:38,429
information it can do several things

484
00:22:34,549 --> 00:22:41,549
either it can do geolocation in some

485
00:22:38,429 --> 00:22:43,529
certain scenarios with these numbers if

486
00:22:41,549 --> 00:22:47,279
you have also other resources you are

487
00:22:43,529 --> 00:22:50,100
able to locate the connected device but

488
00:22:47,279 --> 00:22:52,440
also in other scenarios remember there

489
00:22:50,100 --> 00:22:55,049
are thousands of other 80 comments and

490
00:22:52,440 --> 00:22:57,750
they are mostly vendor specific so the

491
00:22:55,049 --> 00:23:01,379
attacker has this information they can

492
00:22:57,750 --> 00:23:04,470
then craft another plugin which is

493
00:23:01,380 --> 00:23:06,000
specifically made using the eight

494
00:23:04,470 --> 00:23:08,700
commands that are supported by this

495
00:23:06,000 --> 00:23:12,059
specific device and that can serve as a

496
00:23:08,700 --> 00:23:15,360
base for further data theft or device

497
00:23:12,059 --> 00:23:18,990
compromise such as pushing some

498
00:23:15,360 --> 00:23:24,479
corrupted firmware or whatever else the

499
00:23:18,990 --> 00:23:27,419
attackers have in mind so to conclude we

500
00:23:24,480 --> 00:23:30,840
have seen three things I would like to

501
00:23:27,419 --> 00:23:33,240
have us free takeout from today so first

502
00:23:30,840 --> 00:23:35,580
of course we are talking about this

503
00:23:33,240 --> 00:23:39,029
utter malware but this is not the most

504
00:23:35,580 --> 00:23:42,269
important one but let me just summarize

505
00:23:39,029 --> 00:23:45,240
the other malware is targeting to rupes

506
00:23:42,269 --> 00:23:46,769
of users its individual privacy

507
00:23:45,240 --> 00:23:49,500
concerned users that are

508
00:23:46,769 --> 00:23:52,200
russian-speaking but also it targets

509
00:23:49,500 --> 00:23:54,389
high-profile users in Eastern Europe

510
00:23:52,200 --> 00:23:57,120
and we don't know who is behind this

511
00:23:54,389 --> 00:23:59,850
malware but judging from the technical

512
00:23:57,120 --> 00:24:02,279
complexity and the unusual functionality

513
00:23:59,850 --> 00:24:04,439
we certainly know that substantial

514
00:24:02,279 --> 00:24:06,600
resources must have been invested into

515
00:24:04,440 --> 00:24:09,240
development of this malware so it's

516
00:24:06,600 --> 00:24:11,580
worth further tracking but more

517
00:24:09,240 --> 00:24:14,399
importantly what we have seen today is

518
00:24:11,580 --> 00:24:16,320
that even these old-school protocols

519
00:24:14,399 --> 00:24:19,018
such as eight commands are worth

520
00:24:16,320 --> 00:24:21,178
checking and looking into because they

521
00:24:19,019 --> 00:24:25,110
still can pose a security threat

522
00:24:21,179 --> 00:24:27,240
nowadays even if you have it supported

523
00:24:25,110 --> 00:24:30,360
in some modern by some modern devices

524
00:24:27,240 --> 00:24:32,159
and most importantly we can see that

525
00:24:30,360 --> 00:24:35,209
it's really important to do both

526
00:24:32,159 --> 00:24:39,710
theoretical and practical research

527
00:24:35,210 --> 00:24:41,779
we need to do more research that is also

528
00:24:39,710 --> 00:24:44,090
looking at what is currently being used

529
00:24:41,779 --> 00:24:46,549
in the wild but also looking for other

530
00:24:44,090 --> 00:24:48,289
possibilities because as we can see the

531
00:24:46,549 --> 00:24:51,139
attackers are also doing their own

532
00:24:48,289 --> 00:24:53,690
research and we need to know where they

533
00:24:51,140 --> 00:24:57,020
are and wait to be up-to-date with what

534
00:24:53,690 --> 00:24:59,960
they are up to so with this I would like

535
00:24:57,020 --> 00:25:03,049
to conclude my presentation if you would

536
00:24:59,960 --> 00:25:06,140
like to read hold white paper on a Turk

537
00:25:03,049 --> 00:25:06,980
and you can use this link and thank you

538
00:25:06,140 --> 00:25:11,339
for your attention

539
00:25:06,980 --> 00:25:11,339
[Applause]

