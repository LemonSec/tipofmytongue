1
00:00:00,000 --> 00:00:05,609
<font color="#E5E5E5">all right welcome back for the last</font>

2
00:00:02,100 --> 00:00:07,830
track of the hardware<font color="#E5E5E5"> session we are</font>

3
00:00:05,609 --> 00:00:10,710
<font color="#CCCCCC">going to go and talk some more about</font>

4
00:00:07,830 --> 00:00:14,309
<font color="#CCCCCC">some</font><font color="#E5E5E5"> interesting play with both physics</font>

5
00:00:10,710 --> 00:00:15,719
<font color="#CCCCCC">and exploits</font><font color="#E5E5E5"> that are going on a lot</font><font color="#CCCCCC"> of</font>

6
00:00:14,309 --> 00:00:17,460
the time when we are<font color="#E5E5E5"> getting</font>

7
00:00:15,719 --> 00:00:20,220
vulnerability<font color="#CCCCCC"> reports we're all thinking</font>

8
00:00:17,460 --> 00:00:22,500
<font color="#E5E5E5">about remote execution</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> as you can</font>

9
00:00:20,220 --> 00:00:24,630
<font color="#E5E5E5">tell with the last presentation some</font><font color="#CCCCCC"> of</font>

10
00:00:22,500 --> 00:00:26,730
the adversaries and threats<font color="#E5E5E5"> that our</font>

11
00:00:24,630 --> 00:00:29,038
customers are facing<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> necessarily</font>

12
00:00:26,730 --> 00:00:31,610
assume that you don't have the bad guy

13
00:00:29,039 --> 00:00:34,860
doesn't<font color="#E5E5E5"> have access to</font><font color="#CCCCCC"> your hardware</font>

14
00:00:31,610 --> 00:00:36,750
<font color="#CCCCCC">ally</font><font color="#E5E5E5"> and Posse are here to challenge us</font>

15
00:00:34,860 --> 00:00:38,600
a little<font color="#E5E5E5"> bit on what we're</font><font color="#CCCCCC"> doing in the</font>

16
00:00:36,750 --> 00:00:42,480
<font color="#E5E5E5">operating system and how we can</font><font color="#CCCCCC"> protect</font>

17
00:00:38,600 --> 00:00:44,070
customers if the attackers actually get

18
00:00:42,480 --> 00:00:45,779
access<font color="#CCCCCC"> to their</font><font color="#E5E5E5"> hardware so with that</font>

19
00:00:44,070 --> 00:00:52,620
please welcome<font color="#E5E5E5"> them to the blue hat</font>

20
00:00:45,780 --> 00:00:58,199
stage thank you<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> you guys</font><font color="#CCCCCC"> hear</font>

21
00:00:52,620 --> 00:01:01,828
<font color="#CCCCCC">me</font><font color="#E5E5E5"> okay yeah good</font><font color="#CCCCCC"> okay so</font><font color="#E5E5E5"> I'm all up</font>

22
00:00:58,199 --> 00:01:04,589
<font color="#CCCCCC">this is bussy</font><font color="#E5E5E5"> we're consultants so</font><font color="#CCCCCC"> by</font>

23
00:01:01,829 --> 00:01:07,260
<font color="#CCCCCC">day</font><font color="#E5E5E5"> our job</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> basically helping</font><font color="#CCCCCC"> our</font>

24
00:01:04,589 --> 00:01:08,760
<font color="#CCCCCC">customers</font><font color="#E5E5E5"> get better at you know doing</font>

25
00:01:07,260 --> 00:01:11,610
security protecting themselves and

26
00:01:08,760 --> 00:01:12,900
sometimes<font color="#CCCCCC"> that</font><font color="#E5E5E5"> means actually</font><font color="#CCCCCC"> going and</font>

27
00:01:11,610 --> 00:01:14,840
breaking their stuff before somebody

28
00:01:12,900 --> 00:01:21,450
else does

29
00:01:14,840 --> 00:01:24,630
so let's see if<font color="#E5E5E5"> we can get slide</font>

30
00:01:21,450 --> 00:01:27,270
transitions going<font color="#E5E5E5"> yeah so this was</font>

31
00:01:24,630 --> 00:01:29,070
actually something<font color="#E5E5E5"> that started out at a</font>

32
00:01:27,270 --> 00:01:32,429
customer assignment so a customer of

33
00:01:29,070 --> 00:01:33,809
ours came to us and<font color="#E5E5E5"> said we</font><font color="#CCCCCC"> have these</font>

34
00:01:32,430 --> 00:01:35,400
you

35
00:01:33,810 --> 00:01:37,950
we're basically upgrading<font color="#CCCCCC"> our whole</font>

36
00:01:35,400 --> 00:01:40,020
fleet<font color="#CCCCCC"> of client laptops flight machines</font>

37
00:01:37,950 --> 00:01:41,790
I should say<font color="#E5E5E5"> to Windows 10 and we're</font>

38
00:01:40,020 --> 00:01:42,929
buying all new<font color="#E5E5E5"> hardware and we think</font>

39
00:01:41,790 --> 00:01:44,720
we've done<font color="#CCCCCC"> a good job of setting</font>

40
00:01:42,930 --> 00:01:47,159
<font color="#E5E5E5">everything up and hardening everything</font>

41
00:01:44,720 --> 00:01:50,610
<font color="#CCCCCC">we</font><font color="#E5E5E5"> think we've</font><font color="#CCCCCC"> got done a good job with</font>

42
00:01:47,159 --> 00:01:51,810
detection<font color="#CCCCCC"> so could you guys just have a</font>

43
00:01:50,610 --> 00:01:54,360
look and see<font color="#CCCCCC"> if there's anything we</font>

44
00:01:51,810 --> 00:01:57,810
<font color="#CCCCCC">missed so we put together a proposal for</font>

45
00:01:54,360 --> 00:01:59,340
them<font color="#CCCCCC"> we're part of it was</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> okay</font>

46
00:01:57,810 --> 00:02:01,860
let's<font color="#CCCCCC"> run through the scenario that</font>

47
00:01:59,340 --> 00:02:03,180
somebody has lost their laptop<font color="#CCCCCC"> in a taxi</font>

48
00:02:01,860 --> 00:02:04,619
or it was<font color="#E5E5E5"> stolen the restaurant</font>

49
00:02:03,180 --> 00:02:06,840
something like that just give us a

50
00:02:04,619 --> 00:02:08,399
couple<font color="#E5E5E5"> of machines</font><font color="#CCCCCC"> and we'll pretend</font>

51
00:02:06,840 --> 00:02:10,319
<font color="#CCCCCC">that they're stolen and we'll see what</font>

52
00:02:08,399 --> 00:02:11,520
we can<font color="#E5E5E5"> do with it and then of</font><font color="#CCCCCC"> course we</font>

53
00:02:10,318 --> 00:02:12,890
had several<font color="#E5E5E5"> different</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> options</font>

54
00:02:11,520 --> 00:02:15,590
<font color="#CCCCCC">later on where</font>

55
00:02:12,890 --> 00:02:18,440
you know once we get<font color="#E5E5E5"> into a machine</font><font color="#CCCCCC"> can</font>

56
00:02:15,590 --> 00:02:20,300
we get<font color="#E5E5E5"> into their network can we persist</font>

57
00:02:18,440 --> 00:02:22,370
malware on a machine<font color="#CCCCCC"> that kind of thing</font>

58
00:02:20,300 --> 00:02:25,840
as<font color="#CCCCCC"> well but</font><font color="#E5E5E5"> this was like step</font><font color="#CCCCCC"> one of</font>

59
00:02:22,370 --> 00:02:28,490
<font color="#E5E5E5">this scenario that we played out</font><font color="#CCCCCC"> so</font>

60
00:02:25,840 --> 00:02:29,930
since they'd configured it correctly

61
00:02:28,490 --> 00:02:33,230
<font color="#CCCCCC">like according</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> all the Microsoft</font>

62
00:02:29,930 --> 00:02:36,560
<font color="#CCCCCC">recommended settings</font><font color="#E5E5E5"> they were using</font>

63
00:02:33,230 --> 00:02:38,720
BitLocker of course<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> kind of</font>

64
00:02:36,560 --> 00:02:40,250
figured<font color="#E5E5E5"> our first step would be</font><font color="#CCCCCC"> to have</font>

65
00:02:38,720 --> 00:02:42,200
a look<font color="#E5E5E5"> at how do we actually get</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

66
00:02:40,250 --> 00:02:44,569
BitLocker key is to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> able</font><font color="#CCCCCC"> to unlock</font>

67
00:02:42,200 --> 00:02:46,630
<font color="#CCCCCC">the hard drive</font><font color="#E5E5E5"> steal secrets or or</font>

68
00:02:44,569 --> 00:02:48,589
perhaps even plant<font color="#CCCCCC"> the backdoor on there</font>

69
00:02:46,630 --> 00:02:50,930
so there's<font color="#E5E5E5"> several</font><font color="#CCCCCC"> different ways</font><font color="#E5E5E5"> that</font>

70
00:02:48,590 --> 00:02:54,170
<font color="#CCCCCC">you could get to those keys</font><font color="#E5E5E5"> so you could</font>

71
00:02:50,930 --> 00:02:57,019
for example use<font color="#CCCCCC"> the</font><font color="#E5E5E5"> key escrow system</font>

72
00:02:54,170 --> 00:02:59,809
<font color="#E5E5E5">that's built into</font><font color="#CCCCCC"> two BitLocker so every</font>

73
00:02:57,019 --> 00:03:02,330
time you set up BitLocker it's gonna

74
00:02:59,810 --> 00:03:03,860
save some recovery<font color="#CCCCCC"> keys either if you're</font>

75
00:03:02,330 --> 00:03:06,950
<font color="#E5E5E5">a consumer</font><font color="#CCCCCC"> it's gonna save them with</font>

76
00:03:03,860 --> 00:03:08,420
Microsoft cloud if it's a domain join

77
00:03:06,950 --> 00:03:11,060
machine and the corporation it's gonna

78
00:03:08,420 --> 00:03:12,170
save them in the<font color="#CCCCCC"> active directory but</font>

79
00:03:11,060 --> 00:03:13,459
that was kind of out of<font color="#E5E5E5"> scope for the</font>

80
00:03:12,170 --> 00:03:15,950
testing that<font color="#E5E5E5"> we were</font><font color="#CCCCCC"> doing for our</font>

81
00:03:13,459 --> 00:03:18,019
<font color="#CCCCCC">customer</font><font color="#E5E5E5"> so you</font><font color="#CCCCCC"> know we we weren't</font><font color="#E5E5E5"> about</font>

82
00:03:15,950 --> 00:03:21,470
<font color="#CCCCCC">to you know</font><font color="#E5E5E5"> call up helpdesk and ask for</font>

83
00:03:18,019 --> 00:03:23,780
the recovery<font color="#E5E5E5"> keys</font><font color="#CCCCCC"> you could kind of talk</font>

84
00:03:21,470 --> 00:03:26,269
<font color="#CCCCCC">to the TPM chip that</font><font color="#E5E5E5"> holds the keys when</font>

85
00:03:23,780 --> 00:03:29,000
the machine<font color="#CCCCCC"> is off</font><font color="#E5E5E5"> and try to you know</font>

86
00:03:26,269 --> 00:03:31,459
<font color="#E5E5E5">fake communications with the TPM to try</font>

87
00:03:29,000 --> 00:03:34,610
to fool it<font color="#E5E5E5"> to giving me the keys but you</font>

88
00:03:31,459 --> 00:03:38,090
<font color="#CCCCCC">know that was a bit more work than we</font>

89
00:03:34,610 --> 00:03:41,239
were prepared<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> initially so we had</font>

90
00:03:38,090 --> 00:03:42,980
a<font color="#E5E5E5"> look at</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> these keys that encrypt</font>

91
00:03:41,239 --> 00:03:45,590
the information<font color="#CCCCCC"> stored</font><font color="#E5E5E5"> on the</font><font color="#CCCCCC"> hard drive</font>

92
00:03:42,980 --> 00:03:46,760
have to be in RAM<font color="#CCCCCC"> because the operating</font>

93
00:03:45,590 --> 00:03:48,860
<font color="#CCCCCC">speed lock</font><font color="#E5E5E5"> is part of the operating</font>

94
00:03:46,760 --> 00:03:50,179
<font color="#E5E5E5">system the</font><font color="#CCCCCC"> operating system is</font><font color="#E5E5E5"> doing the</font>

95
00:03:48,860 --> 00:03:51,170
<font color="#E5E5E5">encryption and decryption of the data</font>

96
00:03:50,180 --> 00:03:54,049
before<font color="#E5E5E5"> it</font><font color="#CCCCCC"> goes to</font><font color="#E5E5E5"> the hard drive</font>

97
00:03:51,170 --> 00:03:56,450
<font color="#CCCCCC">therefore the the encryption keys have</font>

98
00:03:54,049 --> 00:03:58,310
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be in memory somewhere so how can we</font>

99
00:03:56,450 --> 00:04:00,920
get at those keys<font color="#CCCCCC"> in memory well our</font>

100
00:03:58,310 --> 00:04:03,700
friend old frisk has this nice<font color="#CCCCCC"> piece erh</font>

101
00:04:00,920 --> 00:04:06,410
toolkit that<font color="#E5E5E5"> you could use to kind of</font>

102
00:04:03,700 --> 00:04:08,209
extract<font color="#E5E5E5"> memory from the</font><font color="#CCCCCC"> machine by</font>

103
00:04:06,410 --> 00:04:09,640
<font color="#E5E5E5">connecting to for example</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> thunderbolt</font>

104
00:04:08,209 --> 00:04:11,420
port or something like<font color="#CCCCCC"> that but</font>

105
00:04:09,640 --> 00:04:12,529
<font color="#CCCCCC">Thunderbolt protections were in place</font>

106
00:04:11,420 --> 00:04:15,350
there as well they<font color="#E5E5E5"> follow those</font>

107
00:04:12,530 --> 00:04:17,060
recommendations<font color="#CCCCCC"> you couldn't move the</font>

108
00:04:15,350 --> 00:04:18,680
<font color="#E5E5E5">RAM chips from</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> machine and put them</font>

109
00:04:17,060 --> 00:04:22,340
into<font color="#E5E5E5"> another device</font><font color="#CCCCCC"> to read out the</font>

110
00:04:18,680 --> 00:04:23,960
contents but you know either

111
00:04:22,340 --> 00:04:25,669
those RAM chips were soldered to the

112
00:04:23,960 --> 00:04:27,710
motherboard<font color="#E5E5E5"> so that wasn't an option</font>

113
00:04:25,670 --> 00:04:29,300
or you know we figured there's probably

114
00:04:27,710 --> 00:04:33,049
easier things<font color="#E5E5E5"> to do so we had two</font>

115
00:04:29,300 --> 00:04:34,940
options<font color="#CCCCCC"> left on our attack path mapping</font>

116
00:04:33,050 --> 00:04:37,700
which was either we attack the OS

117
00:04:34,940 --> 00:04:39,290
directly<font color="#E5E5E5"> so if we have a machine we can</font>

118
00:04:37,700 --> 00:04:40,460
connect<font color="#E5E5E5"> to</font><font color="#CCCCCC"> it over the network something</font>

119
00:04:39,290 --> 00:04:42,530
<font color="#E5E5E5">like that sooner or later there's going</font>

120
00:04:40,460 --> 00:04:44,690
<font color="#CCCCCC">to be some kind of vulnerability</font><font color="#E5E5E5"> we can</font>

121
00:04:42,530 --> 00:04:46,700
use to exploit<font color="#E5E5E5"> to get</font><font color="#CCCCCC"> onto the</font><font color="#E5E5E5"> machine</font>

122
00:04:44,690 --> 00:04:49,040
<font color="#E5E5E5">or we can try to try out these cold</font>

123
00:04:46,700 --> 00:04:50,960
<font color="#E5E5E5">attacks and I'm guessing</font><font color="#CCCCCC"> that you</font>

124
00:04:49,040 --> 00:04:54,620
already<font color="#CCCCCC"> figured out</font><font color="#E5E5E5"> that we chose the</font>

125
00:04:50,960 --> 00:04:58,090
<font color="#E5E5E5">second option</font><font color="#CCCCCC"> so quick recap on what</font><font color="#E5E5E5"> is</font>

126
00:04:54,620 --> 00:05:00,650
<font color="#CCCCCC">code word</font><font color="#E5E5E5"> attack basically like I said</font>

127
00:04:58,090 --> 00:05:02,390
<font color="#E5E5E5">the RAM contains secrets when the OS is</font>

128
00:05:00,650 --> 00:05:03,620
booted up<font color="#E5E5E5"> and running</font><font color="#CCCCCC"> could be things</font>

129
00:05:02,390 --> 00:05:05,450
<font color="#E5E5E5">you're typing into a document could be</font>

130
00:05:03,620 --> 00:05:09,320
passwords could be these encryption keys

131
00:05:05,450 --> 00:05:11,240
right<font color="#E5E5E5"> and the contents</font><font color="#CCCCCC"> of RAM aren't</font>

132
00:05:09,320 --> 00:05:14,960
lost<font color="#CCCCCC"> immediately when you power down the</font>

133
00:05:11,240 --> 00:05:17,150
<font color="#E5E5E5">machine so sometime after let's say</font><font color="#CCCCCC"> a</font>

134
00:05:14,960 --> 00:05:19,820
couple<font color="#E5E5E5"> of seconds after</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> RAM chips</font>

135
00:05:17,150 --> 00:05:21,440
lose power<font color="#CCCCCC"> and start</font><font color="#E5E5E5"> to to degrade</font>

136
00:05:19,820 --> 00:05:26,180
enough that you<font color="#E5E5E5"> won't be able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> recover</font>

137
00:05:21,440 --> 00:05:29,480
<font color="#E5E5E5">the contents but if you cool down the</font>

138
00:05:26,180 --> 00:05:33,710
<font color="#CCCCCC">RAM chips to a you know</font><font color="#E5E5E5"> freezing</font>

139
00:05:29,480 --> 00:05:37,420
temperature<font color="#E5E5E5"> this remanence effect gets</font>

140
00:05:33,710 --> 00:05:39,770
stronger and the contents of RAM will be

141
00:05:37,420 --> 00:05:42,130
preserved<font color="#E5E5E5"> for a longer</font><font color="#CCCCCC"> amount of time</font><font color="#E5E5E5"> so</font>

142
00:05:39,770 --> 00:05:44,780
<font color="#CCCCCC">that kind of increases your chances of</font>

143
00:05:42,130 --> 00:05:46,580
getting out those contents so you have

144
00:05:44,780 --> 00:05:49,070
two possible approaches to<font color="#E5E5E5"> getting at</font>

145
00:05:46,580 --> 00:05:50,960
the contents of<font color="#E5E5E5"> RAM</font><font color="#CCCCCC"> one would</font><font color="#E5E5E5"> be like I</font>

146
00:05:49,070 --> 00:05:52,430
mentioned<font color="#CCCCCC"> earlier it's actually cool</font>

147
00:05:50,960 --> 00:05:54,260
down<font color="#E5E5E5"> memory chips remove them from the</font>

148
00:05:52,430 --> 00:05:55,730
machines<font color="#E5E5E5"> put them in another machine and</font>

149
00:05:54,260 --> 00:05:58,640
<font color="#CCCCCC">read out the contents that way</font>

150
00:05:55,730 --> 00:06:01,550
that's finicky<font color="#E5E5E5"> it's fiddly and difficult</font>

151
00:05:58,640 --> 00:06:03,200
and it takes<font color="#CCCCCC"> a</font><font color="#E5E5E5"> bit of</font><font color="#CCCCCC"> time like I</font>

152
00:06:01,550 --> 00:06:04,670
mentioned earlier<font color="#E5E5E5"> if the RAM chips are</font>

153
00:06:03,200 --> 00:06:06,800
soldered directly to the motherboard<font color="#CCCCCC"> as</font>

154
00:06:04,670 --> 00:06:08,270
is increasingly<font color="#E5E5E5"> the</font><font color="#CCCCCC"> case with modern</font>

155
00:06:06,800 --> 00:06:10,790
machines<font color="#E5E5E5"> that's not an</font><font color="#CCCCCC"> option you have</font>

156
00:06:08,270 --> 00:06:13,099
so the easy<font color="#E5E5E5"> way is just to leave</font>

157
00:06:10,790 --> 00:06:15,770
everything<font color="#E5E5E5"> in place</font><font color="#CCCCCC"> and boot</font><font color="#E5E5E5"> another</font>

158
00:06:13,100 --> 00:06:18,560
operating system<font color="#E5E5E5"> off of</font><font color="#CCCCCC"> extol media for</font>

159
00:06:15,770 --> 00:06:20,719
example<font color="#E5E5E5"> to just dump the</font><font color="#CCCCCC"> contents of</font>

160
00:06:18,560 --> 00:06:24,110
<font color="#CCCCCC">memory</font><font color="#E5E5E5"> so that's the way that's a route</font>

161
00:06:20,720 --> 00:06:26,560
we went and this is exactly what

162
00:06:24,110 --> 00:06:30,830
<font color="#CCCCCC">researchers from Princeton University</font>

163
00:06:26,560 --> 00:06:32,270
showed<font color="#CCCCCC"> 10 years ago I think that they</font>

164
00:06:30,830 --> 00:06:33,950
might<font color="#E5E5E5"> have coined the term cold boot</font>

165
00:06:32,270 --> 00:06:35,840
attack I'm not totally<font color="#CCCCCC"> sure about</font><font color="#E5E5E5"> that</font>

166
00:06:33,950 --> 00:06:39,529
but they<font color="#E5E5E5"> definitely popular popularized</font>

167
00:06:35,840 --> 00:06:41,479
it and they published all of their<font color="#CCCCCC"> Rhys</font>

168
00:06:39,529 --> 00:06:43,849
so you have<font color="#CCCCCC"> like proof of concept</font><font color="#E5E5E5"> code</font>

169
00:06:41,479 --> 00:06:45,589
to actually<font color="#E5E5E5"> do the stack of dumping the</font>

170
00:06:43,849 --> 00:06:48,949
memory<font color="#E5E5E5"> booting from like pixie boot or</font>

171
00:06:45,589 --> 00:06:50,449
USB<font color="#CCCCCC"> Drive and</font><font color="#E5E5E5"> dumping the memory and</font>

172
00:06:48,949 --> 00:06:52,549
then analyzing<font color="#CCCCCC"> the memory contents to</font>

173
00:06:50,449 --> 00:06:54,999
find those encryption<font color="#E5E5E5"> keys all of that</font>

174
00:06:52,549 --> 00:06:58,459
was published<font color="#E5E5E5"> already</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> years ago so</font>

175
00:06:54,999 --> 00:07:00,859
<font color="#E5E5E5">basically nothing new but our good</font>

176
00:06:58,459 --> 00:07:04,279
friend and<font color="#CCCCCC"> colleague team were here</font>

177
00:07:00,859 --> 00:07:07,549
<font color="#E5E5E5">Berlin presented at a Finnish conference</font>

178
00:07:04,279 --> 00:07:09,739
last<font color="#E5E5E5"> year about actually updating this</font>

179
00:07:07,549 --> 00:07:11,119
<font color="#E5E5E5">and modernizing it putting it into a</font>

180
00:07:09,739 --> 00:07:12,589
<font color="#E5E5E5">form where it's</font><font color="#CCCCCC"> actually practical</font>

181
00:07:11,119 --> 00:07:14,149
instead of research tools and

182
00:07:12,589 --> 00:07:16,159
<font color="#CCCCCC">proof-of-concept tools</font><font color="#E5E5E5"> actually making</font>

183
00:07:14,149 --> 00:07:17,959
<font color="#E5E5E5">this into a practical attack and</font>

184
00:07:16,159 --> 00:07:21,649
updating it<font color="#E5E5E5"> for modern firmware which</font>

185
00:07:17,959 --> 00:07:24,939
uses<font color="#CCCCCC"> EFI</font><font color="#E5E5E5"> sorry</font><font color="#CCCCCC"> what platforms we choose</font>

186
00:07:21,649 --> 00:07:27,469
EFI firmware and not all the<font color="#E5E5E5"> buyer stuff</font>

187
00:07:24,939 --> 00:07:29,059
<font color="#CCCCCC">so we thought that</font><font color="#E5E5E5"> great he's done all</font>

188
00:07:27,469 --> 00:07:31,429
the<font color="#E5E5E5"> hard work it's gonna be easy for</font><font color="#CCCCCC"> us</font>

189
00:07:29,059 --> 00:07:33,769
so we'll<font color="#CCCCCC"> just you know cool down the</font><font color="#E5E5E5"> RAM</font>

190
00:07:31,429 --> 00:07:36,018
chips<font color="#E5E5E5"> will put</font><font color="#CCCCCC"> teemo's code on a USB</font>

191
00:07:33,769 --> 00:07:36,439
<font color="#E5E5E5">stick</font><font color="#CCCCCC"> boot from</font><font color="#E5E5E5"> that and we'll</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> fine</font>

192
00:07:36,019 --> 00:07:41,929
right

193
00:07:36,439 --> 00:07:44,749
but what<font color="#CCCCCC"> Wow turns out when we when we</font>

194
00:07:41,929 --> 00:07:46,458
<font color="#E5E5E5">did that dumped all the memory saved it</font>

195
00:07:44,749 --> 00:07:48,889
the USB stick<font color="#CCCCCC"> analyzed it on a separate</font>

196
00:07:46,459 --> 00:07:51,019
<font color="#CCCCCC">machine and saw that basically</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> of</font>

197
00:07:48,889 --> 00:07:54,379
the contents<font color="#E5E5E5"> of memory were wiped it was</font>

198
00:07:51,019 --> 00:07:56,659
all<font color="#CCCCCC"> zeroes</font><font color="#E5E5E5"> so we had to kind of figure</font>

199
00:07:54,379 --> 00:07:59,959
<font color="#E5E5E5">out okay if we're gonna do this we</font><font color="#CCCCCC"> have</font>

200
00:07:56,659 --> 00:08:02,360
<font color="#CCCCCC">to we have</font><font color="#E5E5E5"> to figure out why</font><font color="#CCCCCC"> are why is</font>

201
00:07:59,959 --> 00:08:04,879
the memory contents being<font color="#E5E5E5"> white and what</font>

202
00:08:02,360 --> 00:08:09,919
can we do to kind<font color="#CCCCCC"> of bypass that</font><font color="#E5E5E5"> so what</font>

203
00:08:04,879 --> 00:08:12,949
we<font color="#E5E5E5"> did was just buy a cheap chip</font>

204
00:08:09,919 --> 00:08:15,169
programmer off<font color="#CCCCCC"> eBay the test lead</font><font color="#E5E5E5"> put it</font>

205
00:08:12,949 --> 00:08:19,609
on the<font color="#CCCCCC"> spi flash chip to read out the</font>

206
00:08:15,169 --> 00:08:22,339
BIOS<font color="#E5E5E5"> and that's basically what if you</font>

207
00:08:19,609 --> 00:08:25,399
saw the previous<font color="#E5E5E5"> presentation is you'll</font>

208
00:08:22,339 --> 00:08:27,379
recognize this<font color="#E5E5E5"> tool UEFI tool which</font><font color="#CCCCCC"> can</font>

209
00:08:25,399 --> 00:08:32,328
then tell you what's on that<font color="#CCCCCC"> SPI flash</font>

210
00:08:27,379 --> 00:08:35,688
chip in this case<font color="#E5E5E5"> the machines that we</font>

211
00:08:32,328 --> 00:08:38,929
got were kind<font color="#E5E5E5"> of new machines latest</font>

212
00:08:35,688 --> 00:08:42,228
platform revision<font color="#E5E5E5"> from Intel using Intel</font>

213
00:08:38,929 --> 00:08:44,088
<font color="#E5E5E5">boot guard which means that the firmware</font>

214
00:08:42,229 --> 00:08:47,149
is actually signed so we<font color="#E5E5E5"> couldn't just</font>

215
00:08:44,089 --> 00:08:49,730
<font color="#E5E5E5">go in and patch out the code that was</font>

216
00:08:47,149 --> 00:08:52,430
<font color="#E5E5E5">doing the memory wiping because there</font>

217
00:08:49,730 --> 00:08:54,500
are integrity protections in place right

218
00:08:52,430 --> 00:08:57,979
<font color="#CCCCCC">but we did</font><font color="#E5E5E5"> find that there are other</font>

219
00:08:54,500 --> 00:09:02,600
regions<font color="#E5E5E5"> in or other volumes in in this</font>

220
00:08:57,980 --> 00:09:07,100
<font color="#E5E5E5">SPI flash for example this</font><font color="#CCCCCC"> EFI variable</font>

221
00:09:02,600 --> 00:09:09,890
store<font color="#E5E5E5"> which is basically if EFI is your</font>

222
00:09:07,100 --> 00:09:11,990
<font color="#CCCCCC">bios then these nvram variables</font><font color="#E5E5E5"> efi</font>

223
00:09:09,890 --> 00:09:14,569
variables are your bios settings<font color="#E5E5E5"> or</font>

224
00:09:11,990 --> 00:09:16,370
where they're stored basically stores a

225
00:09:14,570 --> 00:09:18,170
<font color="#E5E5E5">lot</font><font color="#CCCCCC"> of other things as well</font><font color="#E5E5E5"> but you know</font>

226
00:09:16,370 --> 00:09:19,850
that<font color="#E5E5E5"> that kind of information is stored</font>

227
00:09:18,170 --> 00:09:21,649
<font color="#E5E5E5">there</font><font color="#CCCCCC"> and those aren't integrity</font>

228
00:09:19,850 --> 00:09:22,970
protected because<font color="#E5E5E5"> they're supposed to be</font>

229
00:09:21,649 --> 00:09:26,480
changed<font color="#CCCCCC"> right you're</font><font color="#E5E5E5"> supposed to be able</font>

230
00:09:22,970 --> 00:09:29,570
<font color="#E5E5E5">to change those</font><font color="#CCCCCC"> settings so scrolling</font>

231
00:09:26,480 --> 00:09:31,880
<font color="#E5E5E5">through that list of</font><font color="#CCCCCC"> efi variables we</font>

232
00:09:29,570 --> 00:09:33,770
found one<font color="#CCCCCC"> that had like an interesting</font>

233
00:09:31,880 --> 00:09:37,189
<font color="#E5E5E5">ring to it it was called memory</font><font color="#CCCCCC"> override</font>

234
00:09:33,770 --> 00:09:38,810
request control<font color="#E5E5E5"> so we thought</font><font color="#CCCCCC"> hmmm this</font>

235
00:09:37,190 --> 00:09:41,089
is<font color="#CCCCCC"> probably something we should look</font>

236
00:09:38,810 --> 00:09:44,839
<font color="#E5E5E5">into so party can tell you what happened</font>

237
00:09:41,089 --> 00:09:47,360
then yeah so the first<font color="#CCCCCC"> thing you do when</font>

238
00:09:44,839 --> 00:09:50,750
<font color="#CCCCCC">you find something</font><font color="#E5E5E5"> interesting you could</font>

239
00:09:47,360 --> 00:09:54,200
rule it and what we found was this

240
00:09:50,750 --> 00:09:55,959
lovely specification<font color="#E5E5E5"> the platform reset</font>

241
00:09:54,200 --> 00:09:58,970
attack mitigation specification

242
00:09:55,959 --> 00:10:03,290
published<font color="#CCCCCC"> the same year as the</font><font color="#E5E5E5"> cold boot</font>

243
00:09:58,970 --> 00:10:05,050
attack was published which is actually

244
00:10:03,290 --> 00:10:08,779
<font color="#E5E5E5">very impressive</font><font color="#CCCCCC"> that it was done so</font>

245
00:10:05,050 --> 00:10:11,630
<font color="#E5E5E5">maybe it wasn't a response or I'm not</font>

246
00:10:08,779 --> 00:10:16,310
really sure<font color="#E5E5E5"> but it's like it basically</font>

247
00:10:11,630 --> 00:10:20,330
the specification describes how how they

248
00:10:16,310 --> 00:10:25,489
print<font color="#E5E5E5"> this cold boot original cold boot</font>

249
00:10:20,330 --> 00:10:29,420
attack by having a bit that is used to

250
00:10:25,490 --> 00:10:34,100
flag if the computer<font color="#E5E5E5"> has been crashed so</font>

251
00:10:29,420 --> 00:10:37,279
in a<font color="#E5E5E5"> normal scenario the computer starts</font>

252
00:10:34,100 --> 00:10:40,579
up and<font color="#E5E5E5"> you will load your secrets into</font>

253
00:10:37,279 --> 00:10:43,000
memory and part of the shutdown<font color="#CCCCCC"> process</font>

254
00:10:40,579 --> 00:10:48,109
when you're finished<font color="#E5E5E5"> is cleaning of</font>

255
00:10:43,000 --> 00:10:53,089
cleaning out the secrets from<font color="#E5E5E5"> memory so</font>

256
00:10:48,110 --> 00:10:56,860
the realization<font color="#CCCCCC"> is that if the computer</font>

257
00:10:53,089 --> 00:10:59,959
<font color="#CCCCCC">is</font><font color="#E5E5E5"> crashed then you never did this clean</font>

258
00:10:56,860 --> 00:11:02,720
cleaning of the memory so you<font color="#CCCCCC"> need to</font>

259
00:10:59,959 --> 00:11:04,849
<font color="#E5E5E5">have the some other part do that for you</font>

260
00:11:02,720 --> 00:11:06,230
<font color="#E5E5E5">and that's what this bit is signaling</font>

261
00:11:04,850 --> 00:11:09,080
<font color="#E5E5E5">it's the OS telling</font>

262
00:11:06,230 --> 00:11:11,900
the firmware<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you know secrets are</font>

263
00:11:09,080 --> 00:11:14,270
<font color="#CCCCCC">in memory</font><font color="#E5E5E5"> if you</font><font color="#CCCCCC"> don't hear from me then</font>

264
00:11:11,900 --> 00:11:17,270
please wipe all<font color="#CCCCCC"> of memory to be safe</font>

265
00:11:14,270 --> 00:11:22,189
<font color="#E5E5E5">right yeah so basically the flow here</font>

266
00:11:17,270 --> 00:11:27,199
you can see how<font color="#E5E5E5"> them probably switch to</font>

267
00:11:22,190 --> 00:11:29,750
the<font color="#CCCCCC"> is that one</font><font color="#E5E5E5"> okay so</font><font color="#CCCCCC"> this is the flow</font>

268
00:11:27,200 --> 00:11:32,920
in case you crash the<font color="#E5E5E5"> machine the</font>

269
00:11:29,750 --> 00:11:36,730
computer<font color="#CCCCCC"> starts up the bias reads the</font>

270
00:11:32,920 --> 00:11:39,199
memory<font color="#E5E5E5"> more bit as it's called and</font>

271
00:11:36,730 --> 00:11:41,540
realize<font color="#CCCCCC"> that it's</font><font color="#E5E5E5"> zero in the first case</font>

272
00:11:39,200 --> 00:11:45,020
<font color="#E5E5E5">and</font><font color="#CCCCCC"> then when it's starting it's</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> a</font>

273
00:11:41,540 --> 00:11:48,520
<font color="#CCCCCC">bit</font><font color="#E5E5E5"> like I have booted I have secrets in</font>

274
00:11:45,020 --> 00:11:51,380
memory and then<font color="#E5E5E5"> when always it's crashed</font>

275
00:11:48,520 --> 00:11:53,420
<font color="#E5E5E5">in the normal case</font><font color="#CCCCCC"> if it was shut down</font>

276
00:11:51,380 --> 00:11:55,550
it would have cleared this bit but when

277
00:11:53,420 --> 00:11:59,300
it's crashed<font color="#CCCCCC"> it doesn't clear this so</font>

278
00:11:55,550 --> 00:12:01,250
the next time the computer<font color="#E5E5E5"> boots it the</font>

279
00:11:59,300 --> 00:12:05,420
bias will realize oh this bit is still

280
00:12:01,250 --> 00:12:07,310
set<font color="#CCCCCC"> I need to clear the memory</font><font color="#E5E5E5"> to make</font>

281
00:12:05,420 --> 00:12:13,520
sure<font color="#E5E5E5"> that there are no secrets</font><font color="#CCCCCC"> left here</font>

282
00:12:07,310 --> 00:12:18,170
<font color="#CCCCCC">so that's a</font><font color="#E5E5E5"> very easy fix to a complex</font>

283
00:12:13,520 --> 00:12:23,210
problem<font color="#CCCCCC"> so reading</font><font color="#E5E5E5"> through the</font>

284
00:12:18,170 --> 00:12:28,069
specification we found<font color="#E5E5E5"> these lovely</font>

285
00:12:23,210 --> 00:12:35,150
sentences and if we look<font color="#E5E5E5"> at the first</font>

286
00:12:28,070 --> 00:12:39,230
sentence which<font color="#CCCCCC"> is informational you can</font>

287
00:12:35,150 --> 00:12:41,449
see that requires the bias to attempt to

288
00:12:39,230 --> 00:12:46,340
<font color="#E5E5E5">detect any potential tampering with the</font>

289
00:12:41,450 --> 00:12:49,040
more bit that would<font color="#CCCCCC"> be awesome</font><font color="#E5E5E5"> but this</font>

290
00:12:46,340 --> 00:12:51,350
is an informative comment in a

291
00:12:49,040 --> 00:12:54,680
specification<font color="#CCCCCC"> so it's actually not</font>

292
00:12:51,350 --> 00:12:59,510
required<font color="#E5E5E5"> to be infinitely even though it</font>

293
00:12:54,680 --> 00:13:02,750
says required<font color="#CCCCCC"> it's and the normative</font>

294
00:12:59,510 --> 00:13:09,110
text<font color="#E5E5E5"> also says</font><font color="#CCCCCC"> that it should</font><font color="#E5E5E5"> detect but</font>

295
00:13:02,750 --> 00:13:09,500
it's not asked here and so of<font color="#CCCCCC"> course it</font>

296
00:13:09,110 --> 00:13:10,630
<font color="#CCCCCC">doesn't</font>

297
00:13:09,500 --> 00:13:12,910
yeah

298
00:13:10,630 --> 00:13:19,480
of course we need<font color="#CCCCCC"> to check</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> it's</font>

299
00:13:12,910 --> 00:13:23,829
actually doing that<font color="#E5E5E5"> so back to the</font>

300
00:13:19,480 --> 00:13:26,560
drawing<font color="#CCCCCC"> board we have</font><font color="#E5E5E5"> this lovely tool</font>

301
00:13:23,830 --> 00:13:28,330
to dump the memory<font color="#E5E5E5"> so we start working</font>

302
00:13:26,560 --> 00:13:32,319
<font color="#E5E5E5">with</font><font color="#CCCCCC"> that but of course that's not</font>

303
00:13:28,330 --> 00:13:34,930
<font color="#E5E5E5">practical</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> reprogram the whole whole</font>

304
00:13:32,320 --> 00:13:38,710
flash<font color="#E5E5E5"> ship every time so we start</font>

305
00:13:34,930 --> 00:13:42,189
working<font color="#E5E5E5"> on this very basic or do we know</font>

306
00:13:38,710 --> 00:13:46,240
based programmer<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we'll just program</font>

307
00:13:42,190 --> 00:13:48,130
this single bit and yeah so this is<font color="#E5E5E5"> this</font>

308
00:13:46,240 --> 00:13:50,320
<font color="#CCCCCC">is just an example</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is not</font>

309
00:13:48,130 --> 00:13:51,760
magic it's not it's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> something very</font>

310
00:13:50,320 --> 00:13:54,640
<font color="#E5E5E5">complicated you can just</font><font color="#CCCCCC"> google</font><font color="#E5E5E5"> for</font>

311
00:13:51,760 --> 00:13:56,560
instructions<font color="#CCCCCC"> online</font><font color="#E5E5E5"> like from</font><font color="#CCCCCC"> Trammell</font>

312
00:13:54,640 --> 00:13:59,319
Hudson's<font color="#CCCCCC"> webpage here that we we show</font>

313
00:13:56,560 --> 00:14:01,390
you and basically<font color="#E5E5E5"> we just follow those</font>

314
00:13:59,320 --> 00:14:03,490
instructions let's say or<font color="#E5E5E5"> just use a</font>

315
00:14:01,390 --> 00:14:05,140
different<font color="#E5E5E5"> piece</font><font color="#CCCCCC"> of hardware but still</font>

316
00:14:03,490 --> 00:14:07,900
just<font color="#CCCCCC"> a cheap easy microcontroller off</font>

317
00:14:05,140 --> 00:14:11,800
<font color="#E5E5E5">eBay</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can program directly in C</font>

318
00:14:07,900 --> 00:14:13,630
to talk to an SPI flash chip and then we

319
00:14:11,800 --> 00:14:14,979
have the<font color="#E5E5E5"> flexibility to</font><font color="#CCCCCC"> actually be able</font>

320
00:14:13,630 --> 00:14:17,439
to<font color="#E5E5E5"> perform this attack instead of using</font>

321
00:14:14,980 --> 00:14:19,240
an off-the-shelf<font color="#CCCCCC"> chip programmer which</font>

322
00:14:17,440 --> 00:14:23,290
would just support<font color="#E5E5E5"> reading and writing</font>

323
00:14:19,240 --> 00:14:26,020
the whole chip right yeah<font color="#E5E5E5"> so this is</font>

324
00:14:23,290 --> 00:14:27,400
<font color="#E5E5E5">just a picture</font><font color="#CCCCCC"> of our first prototype</font>

325
00:14:26,020 --> 00:14:30,189
<font color="#CCCCCC">yeah</font>

326
00:14:27,400 --> 00:14:33,600
and it worked<font color="#CCCCCC"> very well with</font><font color="#E5E5E5"> this chip</font>

327
00:14:30,190 --> 00:14:36,310
<font color="#CCCCCC">tip it's easy to plug it connect to the</font>

328
00:14:33,600 --> 00:14:40,650
SPI flash you don't have to<font color="#E5E5E5"> so there</font>

329
00:14:36,310 --> 00:14:43,390
solder<font color="#CCCCCC"> anything</font><font color="#E5E5E5"> so demo time</font>

330
00:14:40,650 --> 00:14:45,069
<font color="#E5E5E5">unfortunately we don't</font><font color="#CCCCCC"> have all of the</font>

331
00:14:43,390 --> 00:14:48,600
<font color="#E5E5E5">stuff here to perform a lifetime</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> you</font>

332
00:14:45,070 --> 00:14:51,970
guys but<font color="#E5E5E5"> we do have a pre-recorded one</font>

333
00:14:48,600 --> 00:14:53,740
yeah so the user is using<font color="#E5E5E5"> his laptop he</font>

334
00:14:51,970 --> 00:14:57,610
has some secret<font color="#CCCCCC"> passwords stored</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> the</font>

335
00:14:53,740 --> 00:14:59,500
<font color="#E5E5E5">hard drive</font><font color="#CCCCCC"> he leaves</font><font color="#E5E5E5"> his laptop</font><font color="#CCCCCC"> I'm</font>

336
00:14:57,610 --> 00:15:05,200
guarded for a moment and<font color="#E5E5E5"> the evil hacker</font>

337
00:14:59,500 --> 00:15:07,330
comes and steals it plugs it into the<font color="#E5E5E5"> AC</font>

338
00:15:05,200 --> 00:15:09,370
power<font color="#CCCCCC"> removes the battery</font><font color="#E5E5E5"> and the case</font>

339
00:15:07,330 --> 00:15:12,120
<font color="#E5E5E5">to get to the flash chip on the</font>

340
00:15:09,370 --> 00:15:17,080
motherboard<font color="#CCCCCC"> cools down the RAM chips</font>

341
00:15:12,120 --> 00:15:20,530
plugs in a USB<font color="#CCCCCC"> Drive tampers with the</font>

342
00:15:17,080 --> 00:15:22,520
<font color="#CCCCCC">firmware settings</font><font color="#E5E5E5"> and reboots the</font>

343
00:15:20,530 --> 00:15:24,680
machine

344
00:15:22,520 --> 00:15:26,900
uses<font color="#CCCCCC"> teemo's nice tool to</font><font color="#E5E5E5"> dump the</font>

345
00:15:24,680 --> 00:15:28,370
<font color="#E5E5E5">contents of memory find the a s</font>

346
00:15:26,900 --> 00:15:30,350
encryption keys and mounts the hard

347
00:15:28,370 --> 00:15:33,470
drive using<font color="#E5E5E5"> Linux and there's your</font>

348
00:15:30,350 --> 00:15:39,760
secret passwords so it can be that<font color="#CCCCCC"> easy</font>

349
00:15:33,470 --> 00:15:44,200
basically and yeah

350
00:15:39,760 --> 00:15:44,200
before you applaud there's one caveat

351
00:15:44,770 --> 00:15:50,240
<font color="#CCCCCC">yeah</font><font color="#E5E5E5"> well we should mention that there</font>

352
00:15:47,840 --> 00:15:52,400
was some cutting in this video but all

353
00:15:50,240 --> 00:15:54,290
in all the attack takes<font color="#E5E5E5"> two minutes</font>

354
00:15:52,400 --> 00:15:55,760
something<font color="#E5E5E5"> like that it depends on how</font>

355
00:15:54,290 --> 00:15:59,180
hard it is to<font color="#E5E5E5"> unscrew the screws right</font>

356
00:15:55,760 --> 00:16:02,540
<font color="#E5E5E5">yeah that's and how much memory yeah</font>

357
00:15:59,180 --> 00:16:05,209
<font color="#E5E5E5">yeah it's yeah can take like 20 seconds</font>

358
00:16:02,540 --> 00:16:10,640
perhaps if you've got 16 gigs or more

359
00:16:05,210 --> 00:16:13,430
<font color="#E5E5E5">yeah so of course you need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have</font>

360
00:16:10,640 --> 00:16:18,290
something in<font color="#CCCCCC"> the ROM so that we can seal</font>

361
00:16:13,430 --> 00:16:20,270
it so if you start the machine as an

362
00:16:18,290 --> 00:16:20,750
attacker<font color="#E5E5E5"> and you see this then you're</font>

363
00:16:20,270 --> 00:16:22,579
<font color="#CCCCCC">screwed</font>

364
00:16:20,750 --> 00:16:26,510
there's nothing in the round we<font color="#CCCCCC"> can do</font>

365
00:16:22,580 --> 00:16:29,360
nothing<font color="#CCCCCC"> but</font><font color="#E5E5E5"> if you</font><font color="#CCCCCC"> open the case and/or</font>

366
00:16:26,510 --> 00:16:32,060
<font color="#CCCCCC">open</font><font color="#E5E5E5"> the lid and you see this then</font><font color="#CCCCCC"> you</font>

367
00:16:29,360 --> 00:16:32,240
have secrets<font color="#E5E5E5"> in memory and we're good to</font>

368
00:16:32,060 --> 00:16:35,209
go

369
00:16:32,240 --> 00:16:36,710
yeah<font color="#E5E5E5"> so a common pair would</font><font color="#CCCCCC"> be that for</font>

370
00:16:35,210 --> 00:16:40,010
example<font color="#E5E5E5"> if you're running Windows</font><font color="#CCCCCC"> home</font>

371
00:16:36,710 --> 00:16:41,300
<font color="#E5E5E5">licensed if you're running home licensed</font>

372
00:16:40,010 --> 00:16:44,840
<font color="#E5E5E5">windows for</font><font color="#CCCCCC"> example if you bought</font><font color="#E5E5E5"> a</font>

373
00:16:41,300 --> 00:16:49,370
retail machine off of<font color="#E5E5E5"> Best Buy or</font>

374
00:16:44,840 --> 00:16:51,260
<font color="#E5E5E5">whatever and</font><font color="#CCCCCC"> that home license windows</font>

375
00:16:49,370 --> 00:16:53,990
still in Windows 10 I<font color="#CCCCCC"> think does not</font>

376
00:16:51,260 --> 00:16:56,240
support<font color="#E5E5E5"> actually using BitLocker with a</font>

377
00:16:53,990 --> 00:16:57,710
pre-boot authentication pin which means

378
00:16:56,240 --> 00:16:59,630
that every time<font color="#CCCCCC"> you press the power</font>

379
00:16:57,710 --> 00:17:01,310
<font color="#E5E5E5">button to start up the</font><font color="#CCCCCC"> Machine it'll</font>

380
00:16:59,630 --> 00:17:04,250
boot fine and give you the windows login

381
00:17:01,310 --> 00:17:06,379
prompt and like pass I mentioned that

382
00:17:04,250 --> 00:17:07,910
means that during<font color="#E5E5E5"> that process the in</font>

383
00:17:06,380 --> 00:17:10,070
creation encryption keys will have been

384
00:17:07,910 --> 00:17:14,780
loaded<font color="#E5E5E5"> out of the TPM chip into RAM and</font>

385
00:17:10,069 --> 00:17:18,230
<font color="#E5E5E5">there yeah therefore the stealing but I</font>

386
00:17:14,780 --> 00:17:21,940
guess<font color="#E5E5E5"> people</font><font color="#CCCCCC"> were</font><font color="#E5E5E5"> wondering like I have</font>

387
00:17:18,230 --> 00:17:24,430
all these<font color="#E5E5E5"> BIOS protection things like</font>

388
00:17:21,940 --> 00:17:29,960
shouldn't they protect from all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these</font>

389
00:17:24,430 --> 00:17:32,180
yep<font color="#E5E5E5"> so for example</font><font color="#CCCCCC"> we mentioned TPM so</font>

390
00:17:29,960 --> 00:17:35,539
I've got TPM protection I've got secure

391
00:17:32,180 --> 00:17:38,520
boot enabled all of that stuff

392
00:17:35,539 --> 00:17:40,470
we mentioned we boot from a USB Drive

393
00:17:38,520 --> 00:17:41,970
perhaps we've locked that down in the

394
00:17:40,470 --> 00:17:46,409
firmware<font color="#CCCCCC"> settings so</font><font color="#E5E5E5"> you can't boot from</font>

395
00:17:41,970 --> 00:17:49,529
an<font color="#E5E5E5"> external device</font><font color="#CCCCCC"> you know setting a</font>

396
00:17:46,409 --> 00:17:51,659
<font color="#E5E5E5">BIOS part password to disable booting</font>

397
00:17:49,529 --> 00:17:55,110
<font color="#CCCCCC">from another device than the hard drive</font>

398
00:17:51,659 --> 00:17:57,799
for<font color="#CCCCCC"> example might</font><font color="#E5E5E5"> help or you know</font><font color="#CCCCCC"> even</font>

399
00:17:55,110 --> 00:18:00,120
the actually the<font color="#E5E5E5"> machine</font><font color="#CCCCCC"> that we first</font>

400
00:17:57,799 --> 00:18:01,500
started this research<font color="#E5E5E5"> on actually had</font>

401
00:18:00,120 --> 00:18:03,840
some tamper switches on the<font color="#E5E5E5"> motherboard</font>

402
00:18:01,500 --> 00:18:05,070
<font color="#CCCCCC">so that when you</font><font color="#E5E5E5"> open the case it trips</font>

403
00:18:03,840 --> 00:18:08,129
those tamper switches and the machine

404
00:18:05,070 --> 00:18:11,370
<font color="#E5E5E5">won't boot</font><font color="#CCCCCC"> anymore so you know all of</font>

405
00:18:08,130 --> 00:18:14,940
<font color="#E5E5E5">these things might be stuff</font><font color="#CCCCCC"> that would</font>

406
00:18:11,370 --> 00:18:17,039
prevent such an attack<font color="#E5E5E5"> but we thought</font>

407
00:18:14,940 --> 00:18:18,600
we'd go<font color="#CCCCCC"> through all of those</font><font color="#E5E5E5"> steps and</font>

408
00:18:17,039 --> 00:18:22,289
show you how they also<font color="#E5E5E5"> can be</font><font color="#CCCCCC"> bypassed</font>

409
00:18:18,600 --> 00:18:25,709
so secure boot<font color="#E5E5E5"> for example is designed</font>

410
00:18:22,289 --> 00:18:29,220
to prevent people<font color="#E5E5E5"> from getting in</font>

411
00:18:25,710 --> 00:18:32,820
between<font color="#CCCCCC"> the firmware initialization and</font>

412
00:18:29,220 --> 00:18:35,309
the OS start and tampering<font color="#CCCCCC"> with the code</font>

413
00:18:32,820 --> 00:18:37,620
<font color="#E5E5E5">in</font><font color="#CCCCCC"> between there so it only allows boot</font>

414
00:18:35,309 --> 00:18:40,529
loaders<font color="#CCCCCC"> efi programs signed by Microsoft</font>

415
00:18:37,620 --> 00:18:44,010
<font color="#CCCCCC">to run but to be able</font><font color="#E5E5E5"> to boot Linux for</font>

416
00:18:40,529 --> 00:18:46,380
example there's a special<font color="#E5E5E5"> bootloader</font>

417
00:18:44,010 --> 00:18:49,080
<font color="#E5E5E5">that you can use as a shim in the middle</font>

418
00:18:46,380 --> 00:18:51,539
between the EFI firmware<font color="#E5E5E5"> and your OS</font>

419
00:18:49,080 --> 00:18:53,220
loader which is signed by Microsoft<font color="#CCCCCC"> to</font>

420
00:18:51,539 --> 00:18:55,590
allow these Linux distributions<font color="#CCCCCC"> to</font>

421
00:18:53,220 --> 00:18:58,409
actually work on modern machines<font color="#E5E5E5"> with</font>

422
00:18:55,590 --> 00:19:00,629
secure boot<font color="#E5E5E5"> and the shim bootloader</font>

423
00:18:58,409 --> 00:19:02,850
actually allows you to manually<font color="#E5E5E5"> enroll a</font>

424
00:19:00,630 --> 00:19:05,370
white list of<font color="#CCCCCC"> efi programs</font><font color="#E5E5E5"> that are</font>

425
00:19:02,850 --> 00:19:07,379
allowed to<font color="#CCCCCC"> boot if you have</font><font color="#E5E5E5"> physical</font>

426
00:19:05,370 --> 00:19:09,389
access<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> machine it looks</font><font color="#E5E5E5"> like this</font>

427
00:19:07,380 --> 00:19:11,100
for<font color="#E5E5E5"> example</font>

428
00:19:09,390 --> 00:19:13,950
where you just choose which file to

429
00:19:11,100 --> 00:19:16,500
trust and then you know<font color="#E5E5E5"> you've bypassed</font>

430
00:19:13,950 --> 00:19:19,620
the secure boot protection and can boot

431
00:19:16,500 --> 00:19:21,570
anything<font color="#CCCCCC"> we mentioned as well boot order</font>

432
00:19:19,620 --> 00:19:23,789
<font color="#E5E5E5">you might have something locked down in</font>

433
00:19:21,570 --> 00:19:25,860
BIOS settings where you're not booting

434
00:19:23,789 --> 00:19:30,049
off of external devices<font color="#CCCCCC"> not not pixi</font>

435
00:19:25,860 --> 00:19:33,479
booting not their work booting<font color="#E5E5E5"> those</font>

436
00:19:30,049 --> 00:19:35,668
settings are also stored in an EFI

437
00:19:33,480 --> 00:19:38,460
variable probably one called boot<font color="#E5E5E5"> order</font>

438
00:19:35,669 --> 00:19:40,980
most commonly and since that's stored in

439
00:19:38,460 --> 00:19:42,299
an EFI variable<font color="#E5E5E5"> when we're tempering</font>

440
00:19:40,980 --> 00:19:44,250
with the more bit which is<font color="#CCCCCC"> also starting</font>

441
00:19:42,299 --> 00:19:45,779
<font color="#CCCCCC">to</font><font color="#E5E5E5"> me if I variable we can just as</font>

442
00:19:44,250 --> 00:19:47,429
easily tamper with the boot order<font color="#E5E5E5"> to</font>

443
00:19:45,779 --> 00:19:48,029
change the boot<font color="#CCCCCC"> order to make it boot</font>

444
00:19:47,429 --> 00:19:53,909
from USB

445
00:19:48,029 --> 00:19:56,729
first<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> so you</font><font color="#E5E5E5"> could even re-enable</font>

446
00:19:53,909 --> 00:20:02,429
disabled boot options<font color="#E5E5E5"> using</font><font color="#CCCCCC"> the same</font>

447
00:19:56,729 --> 00:20:04,830
same method<font color="#E5E5E5"> and failing that I mean</font>

448
00:20:02,429 --> 00:20:07,469
worst<font color="#CCCCCC"> case we have physical access to</font>

449
00:20:04,830 --> 00:20:10,468
the machine<font color="#CCCCCC"> could probably remove the</font>

450
00:20:07,469 --> 00:20:12,960
boot device the SSD<font color="#CCCCCC"> or the hard drive</font>

451
00:20:10,469 --> 00:20:14,639
<font color="#E5E5E5">and just</font><font color="#CCCCCC"> plug in something</font><font color="#E5E5E5"> instead that</font>

452
00:20:12,960 --> 00:20:16,799
<font color="#E5E5E5">would</font><font color="#CCCCCC"> be feasible in this kind of attack</font>

453
00:20:14,639 --> 00:20:19,049
scenario so that won't<font color="#E5E5E5"> save you either</font>

454
00:20:16,799 --> 00:20:21,479
<font color="#CCCCCC">and we mentioned</font><font color="#E5E5E5"> BIOS passwords being</font>

455
00:20:19,049 --> 00:20:23,789
good protection to<font color="#E5E5E5"> protect these</font>

456
00:20:21,479 --> 00:20:28,799
settings from you know manual<font color="#CCCCCC"> tampering</font>

457
00:20:23,789 --> 00:20:30,960
using the keyboard<font color="#CCCCCC"> unfortunately you</font>

458
00:20:28,799 --> 00:20:33,658
know modifying the<font color="#E5E5E5"> firmware can most</font>

459
00:20:30,960 --> 00:20:35,999
oftenly<font color="#E5E5E5"> either bypass the password</font>

460
00:20:33,659 --> 00:20:40,649
protection<font color="#CCCCCC"> or just clear or change the</font>

461
00:20:35,999 --> 00:20:44,759
password so there's a nice web page at

462
00:20:40,649 --> 00:20:48,689
<font color="#CCCCCC">BIOS - PW org</font><font color="#E5E5E5"> and it looks like this if</font>

463
00:20:44,759 --> 00:20:51,659
you enter<font color="#CCCCCC"> you're in this</font><font color="#E5E5E5"> case serial</font>

464
00:20:48,690 --> 00:20:55,019
number or service tag I think it's

465
00:20:51,659 --> 00:20:57,539
called<font color="#E5E5E5"> because this is Dell</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> actually</font>

466
00:20:55,019 --> 00:20:59,190
gives you<font color="#CCCCCC"> a master backdoor password for</font>

467
00:20:57,539 --> 00:21:02,759
<font color="#E5E5E5">that</font><font color="#CCCCCC"> machine that'll</font><font color="#E5E5E5"> let you remove the</font>

468
00:20:59,190 --> 00:21:04,649
bios password<font color="#E5E5E5"> really quick and easy so</font>

469
00:21:02,759 --> 00:21:05,879
the bios password probably not save you

470
00:21:04,649 --> 00:21:08,728
either from this<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of attack where</font>

471
00:21:05,879 --> 00:21:11,699
especially if it's a<font color="#CCCCCC"> Dell machine</font><font color="#E5E5E5"> yeah</font>

472
00:21:08,729 --> 00:21:13,649
yeah<font color="#E5E5E5"> some some vendors are better at</font>

473
00:21:11,700 --> 00:21:16,109
protecting<font color="#E5E5E5"> the password than others but</font>

474
00:21:13,649 --> 00:21:18,178
you<font color="#E5E5E5"> know most of them do</font><font color="#CCCCCC"> have some way</font>

475
00:21:16,109 --> 00:21:21,178
<font color="#CCCCCC">of recovering</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> a lost biased</font>

476
00:21:18,179 --> 00:21:24,269
<font color="#CCCCCC">password because</font><font color="#E5E5E5"> users tend to you know</font>

477
00:21:21,179 --> 00:21:26,279
forget passwords temper detection<font color="#E5E5E5"> you</font>

478
00:21:24,269 --> 00:21:27,629
have these<font color="#CCCCCC"> twice</font><font color="#E5E5E5"> tamper switches on on</font>

479
00:21:26,279 --> 00:21:29,190
the motherboard<font color="#CCCCCC"> you might think that</font>

480
00:21:27,629 --> 00:21:31,309
<font color="#CCCCCC">that would</font><font color="#E5E5E5"> save you from an attacker</font>

481
00:21:29,190 --> 00:21:35,369
opening the case to<font color="#E5E5E5"> get to the</font><font color="#CCCCCC"> SPI flash</font>

482
00:21:31,309 --> 00:21:38,879
<font color="#E5E5E5">well not unless the attacker knows how</font>

483
00:21:35,369 --> 00:21:41,639
to<font color="#E5E5E5"> use Google eBay and tear downs on</font>

484
00:21:38,879 --> 00:21:42,869
<font color="#CCCCCC">Google Image Search</font><font color="#E5E5E5"> are really easy to</font>

485
00:21:41,639 --> 00:21:44,609
<font color="#CCCCCC">find where</font><font color="#E5E5E5"> these switches are located</font>

486
00:21:42,869 --> 00:21:46,678
<font color="#CCCCCC">and if you know where the switch is</font>

487
00:21:44,609 --> 00:21:49,109
located<font color="#E5E5E5"> then it's quite easy to bypass</font>

488
00:21:46,679 --> 00:21:50,789
<font color="#E5E5E5">it</font><font color="#CCCCCC"> by just you know the worst-case</font>

489
00:21:49,109 --> 00:21:53,369
trembling open the case not touching

490
00:21:50,789 --> 00:21:54,649
that<font color="#E5E5E5"> part of of the so this is an</font>

491
00:21:53,369 --> 00:21:57,149
<font color="#E5E5E5">example of what</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> would look like</font>

492
00:21:54,649 --> 00:21:58,830
<font color="#E5E5E5">bring up Google Image Search find some</font>

493
00:21:57,149 --> 00:22:00,988
you know<font color="#E5E5E5"> high resolution photos of the</font>

494
00:21:58,830 --> 00:22:01,800
motherboard<font color="#CCCCCC"> and you can see quite</font>

495
00:22:00,989 --> 00:22:04,860
clearly the

496
00:22:01,800 --> 00:22:06,389
that's the physical<font color="#E5E5E5"> tamper switch that's</font>

497
00:22:04,860 --> 00:22:08,399
the<font color="#E5E5E5"> SPI flash there are two different</font>

498
00:22:06,390 --> 00:22:10,320
sides of the computer so just<font color="#E5E5E5"> don't</font>

499
00:22:08,400 --> 00:22:11,520
touch that side of the computer<font color="#E5E5E5"> open the</font>

500
00:22:10,320 --> 00:22:18,570
<font color="#CCCCCC">other side of the case and you'll be</font>

501
00:22:11,520 --> 00:22:20,400
fine<font color="#CCCCCC"> so biosecurity</font><font color="#E5E5E5"> settings they also</font>

502
00:22:18,570 --> 00:22:21,750
depend on<font color="#E5E5E5"> the integrity</font><font color="#CCCCCC"> of the firmware</font>

503
00:22:20,400 --> 00:22:23,700
<font color="#E5E5E5">and the firmware settings the efi</font>

504
00:22:21,750 --> 00:22:25,400
variables we talked about<font color="#E5E5E5"> so they're not</font>

505
00:22:23,700 --> 00:22:28,010
<font color="#E5E5E5">gonna save you in</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> kind of scenario</font>

506
00:22:25,400 --> 00:22:33,600
<font color="#E5E5E5">because they can be tampered</font><font color="#CCCCCC"> with</font>

507
00:22:28,010 --> 00:22:38,870
so in summary<font color="#E5E5E5"> device encryption depends</font>

508
00:22:33,600 --> 00:22:41,189
on the integrity<font color="#CCCCCC"> of firmware</font><font color="#E5E5E5"> and the</font>

509
00:22:38,870 --> 00:22:44,520
firmware settings<font color="#E5E5E5"> as well that we</font>

510
00:22:41,190 --> 00:22:46,830
tampered in<font color="#E5E5E5"> in this example so if you</font>

511
00:22:44,520 --> 00:22:48,660
have a<font color="#E5E5E5"> machine</font><font color="#CCCCCC"> that's a bit older then</font>

512
00:22:46,830 --> 00:22:51,720
perhaps<font color="#E5E5E5"> even tampering with a firmware</font>

513
00:22:48,660 --> 00:22:53,790
<font color="#E5E5E5">code would be feasible</font><font color="#CCCCCC"> like in the</font>

514
00:22:51,720 --> 00:22:57,840
previous<font color="#E5E5E5"> session if you so the efi</font>

515
00:22:53,790 --> 00:23:00,780
rootkit presentation<font color="#CCCCCC"> physical</font><font color="#E5E5E5"> attacks on</font>

516
00:22:57,840 --> 00:23:03,600
firmware<font color="#E5E5E5"> come in almost</font><font color="#CCCCCC"> every</font><font color="#E5E5E5"> case</font>

517
00:23:00,780 --> 00:23:06,360
bypass all<font color="#CCCCCC"> of the firmer security</font>

518
00:23:03,600 --> 00:23:10,050
features so that's something to<font color="#E5E5E5"> be aware</font>

519
00:23:06,360 --> 00:23:11,850
<font color="#E5E5E5">of and so our summary</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this is</font>

520
00:23:10,050 --> 00:23:14,820
<font color="#E5E5E5">basically that you</font><font color="#CCCCCC"> know existing</font>

521
00:23:11,850 --> 00:23:16,620
mitigations<font color="#CCCCCC"> and firmware and OS and</font>

522
00:23:14,820 --> 00:23:19,010
firmware corporation aren't<font color="#E5E5E5"> enough to</font>

523
00:23:16,620 --> 00:23:22,110
protect you against<font color="#E5E5E5"> these cobalt attacks</font>

524
00:23:19,010 --> 00:23:23,700
<font color="#E5E5E5">except for the one scenario that we</font>

525
00:23:22,110 --> 00:23:26,939
showed where the<font color="#CCCCCC"> machine is totally</font>

526
00:23:23,700 --> 00:23:29,550
powered off<font color="#E5E5E5"> and you have the pre boot</font>

527
00:23:26,940 --> 00:23:33,000
BitLocker pin and TPM protections in

528
00:23:29,550 --> 00:23:34,440
place which you might not be<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> do</font>

529
00:23:33,000 --> 00:23:37,590
if you're a small<font color="#CCCCCC"> business or a</font><font color="#E5E5E5"> consumer</font>

530
00:23:34,440 --> 00:23:39,360
<font color="#E5E5E5">if you're a corporation</font><font color="#CCCCCC"> with an IT</font>

531
00:23:37,590 --> 00:23:41,459
<font color="#CCCCCC">department</font><font color="#E5E5E5"> and the low stuff then maybe</font>

532
00:23:39,360 --> 00:23:43,830
they<font color="#E5E5E5"> could configure that for you but</font>

533
00:23:41,460 --> 00:23:47,700
again<font color="#CCCCCC"> it's another password</font><font color="#E5E5E5"> for users to</font>

534
00:23:43,830 --> 00:23:49,020
remember<font color="#E5E5E5"> and forget and it is a bit of a</font>

535
00:23:47,700 --> 00:23:51,300
hassle we've heard<font color="#E5E5E5"> feedback from</font>

536
00:23:49,020 --> 00:23:54,930
<font color="#E5E5E5">different clients saying that you know</font>

537
00:23:51,300 --> 00:23:56,280
it makes having<font color="#E5E5E5"> a shared machine or a</font>

538
00:23:54,930 --> 00:23:58,530
machine<font color="#E5E5E5"> that's just lying there</font>

539
00:23:56,280 --> 00:24:00,600
pre-configured to<font color="#E5E5E5"> just give out somebody</font>

540
00:23:58,530 --> 00:24:03,090
who's you know<font color="#E5E5E5"> forgot their machine or</font>

541
00:24:00,600 --> 00:24:05,120
lost their<font color="#E5E5E5"> machine makes that a whole</font>

542
00:24:03,090 --> 00:24:08,790
lot<font color="#E5E5E5"> harder because you have to manually</font>

543
00:24:05,120 --> 00:24:12,629
<font color="#CCCCCC">keep track of</font><font color="#E5E5E5"> all these TPM or BitLocker</font>

544
00:24:08,790 --> 00:24:15,210
passwords so we<font color="#CCCCCC"> had to put in a slide as</font>

545
00:24:12,630 --> 00:24:17,460
well for the Microsoft people here

546
00:24:15,210 --> 00:24:20,580
or the developers in the audience<font color="#CCCCCC"> what</font>

547
00:24:17,460 --> 00:24:22,859
can we kind<font color="#E5E5E5"> of learn by generalizing</font>

548
00:24:20,580 --> 00:24:27,299
from<font color="#E5E5E5"> this and seeing you know what went</font>

549
00:24:22,859 --> 00:24:29,189
<font color="#E5E5E5">wrong here basically so one thing would</font>

550
00:24:27,299 --> 00:24:32,249
be don't<font color="#E5E5E5"> just adopt somebody else's</font>

551
00:24:29,190 --> 00:24:35,389
<font color="#CCCCCC">threaten oh don't when you import</font><font color="#E5E5E5"> some</font>

552
00:24:32,249 --> 00:24:38,429
piece of<font color="#E5E5E5"> code implement a specification</font>

553
00:24:35,389 --> 00:24:40,199
<font color="#E5E5E5">when you trust</font><font color="#CCCCCC"> that somebody</font><font color="#E5E5E5"> else has</font>

554
00:24:38,429 --> 00:24:42,989
probably<font color="#E5E5E5"> thought about these security</font>

555
00:24:40,200 --> 00:24:45,359
things<font color="#E5E5E5"> just don't trust</font><font color="#CCCCCC"> that implicitly</font>

556
00:24:42,989 --> 00:24:46,889
<font color="#E5E5E5">actually have a look at what is your</font>

557
00:24:45,359 --> 00:24:49,408
contact what's the context you're using

558
00:24:46,889 --> 00:24:51,059
the stuff in<font color="#E5E5E5"> what are the threats</font><font color="#CCCCCC"> that</font>

559
00:24:49,409 --> 00:24:53,159
are relevant<font color="#E5E5E5"> to you and your users and</font>

560
00:24:51,059 --> 00:24:54,479
do your own threat modeling don't just

561
00:24:53,159 --> 00:24:57,359
rely on somebody else<font color="#E5E5E5"> having done</font><font color="#CCCCCC"> it</font>

562
00:24:54,479 --> 00:24:59,700
before<font color="#CCCCCC"> because that's yeah</font><font color="#E5E5E5"> making</font>

563
00:24:57,359 --> 00:25:02,820
assumptions about somebody else doing

564
00:24:59,700 --> 00:25:05,309
<font color="#CCCCCC">the work for you can be a problem</font><font color="#E5E5E5"> and</font>

565
00:25:02,820 --> 00:25:07,589
they also usually<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> different</font>

566
00:25:05,309 --> 00:25:10,349
<font color="#E5E5E5">mindset</font><font color="#CCCCCC"> and thinking of a different kind</font>

567
00:25:07,589 --> 00:25:13,729
of attacker so we have heard a<font color="#E5E5E5"> lot about</font>

568
00:25:10,349 --> 00:25:16,289
nation-state attackers here and most

569
00:25:13,729 --> 00:25:18,889
<font color="#E5E5E5">people will consider that out of scope</font>

570
00:25:16,289 --> 00:25:21,029
yeah so not everybody might be

571
00:25:18,889 --> 00:25:22,559
interested<font color="#E5E5E5"> in protecting against a</font>

572
00:25:21,029 --> 00:25:24,089
physical attacker that<font color="#E5E5E5"> stolen a machine</font>

573
00:25:22,559 --> 00:25:27,629
that specifically wants to steal<font color="#E5E5E5"> your</font>

574
00:25:24,089 --> 00:25:29,489
<font color="#CCCCCC">secrets from your machine</font><font color="#E5E5E5"> but if you do</font>

575
00:25:27,629 --> 00:25:31,559
have that<font color="#CCCCCC"> kind of an attacker in your</font>

576
00:25:29,489 --> 00:25:33,719
threat<font color="#CCCCCC"> model if you really need to</font>

577
00:25:31,559 --> 00:25:38,609
<font color="#CCCCCC">protect against</font><font color="#E5E5E5"> that kind of attack then</font>

578
00:25:33,719 --> 00:25:40,200
yeah<font color="#E5E5E5"> so a vendor response slide as well</font>

579
00:25:38,609 --> 00:25:42,989
we have to put that<font color="#E5E5E5"> in there we've</font>

580
00:25:40,200 --> 00:25:47,489
talked to<font color="#E5E5E5"> to Microsoft we talked to in</font>

581
00:25:42,989 --> 00:25:52,049
<font color="#E5E5E5">tow and basically they yeah the response</font>

582
00:25:47,489 --> 00:25:54,239
is that<font color="#CCCCCC"> the</font><font color="#E5E5E5"> TCG specification or the</font><font color="#CCCCCC"> TCG</font>

583
00:25:52,049 --> 00:25:55,859
<font color="#CCCCCC">see TCG working group responsible for</font>

584
00:25:54,239 --> 00:25:57,419
the<font color="#E5E5E5"> specification has kind of decided</font>

585
00:25:55,859 --> 00:26:00,869
that<font color="#E5E5E5"> these kind of attacks are currently</font>

586
00:25:57,419 --> 00:26:02,639
out<font color="#CCCCCC"> of scope and</font><font color="#E5E5E5"> there's yeah not much</font>

587
00:26:00,869 --> 00:26:04,918
<font color="#E5E5E5">they can do we should give them</font><font color="#CCCCCC"> some</font>

588
00:26:02,639 --> 00:26:08,609
credit<font color="#E5E5E5"> because it was actually done in</font>

589
00:26:04,919 --> 00:26:10,289
<font color="#CCCCCC">the same year as the</font><font color="#E5E5E5"> mm-hm</font><font color="#CCCCCC"> attack it</font><font color="#E5E5E5"> was</font>

590
00:26:08,609 --> 00:26:11,399
like and we should give Microsoft some

591
00:26:10,289 --> 00:26:12,929
credit as well

592
00:26:11,399 --> 00:26:14,758
they've they've<font color="#E5E5E5"> improved on the</font>

593
00:26:12,929 --> 00:26:19,830
<font color="#CCCCCC">specifications actually make it harder</font>

594
00:26:14,759 --> 00:26:24,169
to<font color="#E5E5E5"> bypass this mitigation just using a</font>

595
00:26:19,830 --> 00:26:27,629
malware<font color="#E5E5E5"> without physical access and</font>

596
00:26:24,169 --> 00:26:28,320
basically yeah as<font color="#CCCCCC"> a operating system</font>

597
00:26:27,629 --> 00:26:30,539
vendor there's

598
00:26:28,320 --> 00:26:34,490
not much more<font color="#E5E5E5"> Microsoft could do without</font>

599
00:26:30,539 --> 00:26:34,490
the cooperation of the<font color="#CCCCCC"> firmware</font>

600
00:26:34,639 --> 00:26:39,779
people so yeah<font color="#E5E5E5"> but that's that's a</font>

601
00:26:38,549 --> 00:26:42,149
difficult part<font color="#E5E5E5"> and that's why</font><font color="#CCCCCC"> this</font>

602
00:26:39,779 --> 00:26:44,279
standard exists is<font color="#CCCCCC"> to make sure</font><font color="#E5E5E5"> that the</font>

603
00:26:42,149 --> 00:26:45,508
operating system<font color="#E5E5E5"> people the device</font>

604
00:26:44,279 --> 00:26:46,559
manufacturers the firmware people

605
00:26:45,509 --> 00:26:48,559
actually<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> each other and figure</font>

606
00:26:46,559 --> 00:26:53,668
<font color="#CCCCCC">out how</font><font color="#E5E5E5"> to solve this</font><font color="#CCCCCC"> problem together</font>

607
00:26:48,559 --> 00:26:55,230
<font color="#E5E5E5">so going to client recommendations</font>

608
00:26:53,669 --> 00:26:59,009
people are actually<font color="#CCCCCC"> using this and want</font>

609
00:26:55,230 --> 00:27:00,600
to protect<font color="#CCCCCC"> against</font><font color="#E5E5E5"> this scenario keep</font>

610
00:26:59,009 --> 00:27:05,700
firmware up-to-date<font color="#CCCCCC"> firmware</font><font color="#E5E5E5"> it is</font>

611
00:27:00,600 --> 00:27:07,320
software it needs to be<font color="#E5E5E5"> patched use</font>

612
00:27:05,700 --> 00:27:09,570
those<font color="#E5E5E5"> existing mitigations even though</font>

613
00:27:07,320 --> 00:27:11,490
they're imperfect<font color="#E5E5E5"> they still put</font>

614
00:27:09,570 --> 00:27:13,769
stumbling blocks in<font color="#CCCCCC"> front of an attacker</font>

615
00:27:11,490 --> 00:27:16,049
might<font color="#CCCCCC"> make it a bit</font><font color="#E5E5E5"> harder for them</font>

616
00:27:13,769 --> 00:27:20,399
worst case it'll<font color="#E5E5E5"> at least get</font><font color="#CCCCCC"> rid of</font>

617
00:27:16,049 --> 00:27:23,509
<font color="#E5E5E5">those people</font><font color="#CCCCCC"> who don't have the you know</font>

618
00:27:20,399 --> 00:27:27,719
<font color="#E5E5E5">the attack</font><font color="#CCCCCC"> all planned out before but</font>

619
00:27:23,509 --> 00:27:30,570
yeah another<font color="#CCCCCC"> thing that's really</font>

620
00:27:27,720 --> 00:27:32,309
important<font color="#E5E5E5"> don't just rely on full disk</font>

621
00:27:30,570 --> 00:27:33,840
encryption<font color="#E5E5E5"> when you lose a device don't</font>

622
00:27:32,309 --> 00:27:37,049
just say<font color="#E5E5E5"> oh it was encrypted it we're</font>

623
00:27:33,840 --> 00:27:39,750
fine<font color="#E5E5E5"> no problem actually</font><font color="#CCCCCC"> have procedures</font>

624
00:27:37,049 --> 00:27:41,850
in<font color="#CCCCCC"> place to invalidate credentials if</font>

625
00:27:39,750 --> 00:27:42,870
there's VPN credentials or that machine

626
00:27:41,850 --> 00:27:45,750
<font color="#CCCCCC">you want to invalidate</font><font color="#E5E5E5"> those</font>

627
00:27:42,870 --> 00:27:49,289
certificates<font color="#E5E5E5"> for example passwords need</font>

628
00:27:45,750 --> 00:27:51,659
to be changed<font color="#E5E5E5"> all that kind of stuff to</font>

629
00:27:49,289 --> 00:27:53,399
make<font color="#CCCCCC"> it harder for the or</font><font color="#E5E5E5"> to to make the</font>

630
00:27:51,659 --> 00:27:55,019
<font color="#CCCCCC">information that an attacker could steal</font>

631
00:27:53,399 --> 00:27:57,508
off that machine<font color="#E5E5E5"> as useless as possible</font>

632
00:27:55,019 --> 00:27:58,919
to the<font color="#CCCCCC"> right and be wary of</font><font color="#E5E5E5"> those</font>

633
00:27:57,509 --> 00:28:00,389
<font color="#E5E5E5">machines that might have been lost for a</font>

634
00:27:58,919 --> 00:28:03,929
while<font color="#CCCCCC"> and then suddenly magically</font>

635
00:28:00,389 --> 00:28:07,199
reappeared<font color="#CCCCCC"> as I mentioned before</font><font color="#E5E5E5"> it's</font>

636
00:28:03,929 --> 00:28:09,179
<font color="#E5E5E5">not just</font><font color="#CCCCCC"> a confidentiality problem we</font>

637
00:28:07,200 --> 00:28:11,549
could<font color="#E5E5E5"> just as easily easily have put a</font>

638
00:28:09,179 --> 00:28:14,669
<font color="#E5E5E5">backdoor</font><font color="#CCCCCC"> on there and and then given</font><font color="#E5E5E5"> the</font>

639
00:28:11,549 --> 00:28:16,559
<font color="#E5E5E5">machine back</font><font color="#CCCCCC"> somebody</font><font color="#E5E5E5"> so basically</font>

640
00:28:14,669 --> 00:28:19,279
conduct some kind of impact assessment

641
00:28:16,559 --> 00:28:22,620
to find<font color="#E5E5E5"> out is this kind of scenario</font>

642
00:28:19,279 --> 00:28:25,080
<font color="#E5E5E5">relevant to us is it feasible to protect</font>

643
00:28:22,620 --> 00:28:27,928
against you know in<font color="#E5E5E5"> our current</font>

644
00:28:25,080 --> 00:28:30,590
situation<font color="#E5E5E5"> what would it cost to actually</font>

645
00:28:27,929 --> 00:28:33,450
<font color="#E5E5E5">put those implementation put those</font>

646
00:28:30,590 --> 00:28:36,330
procedures<font color="#E5E5E5"> and technical mitigations in</font>

647
00:28:33,450 --> 00:28:38,690
place and if justified by<font color="#CCCCCC"> the impact</font>

648
00:28:36,330 --> 00:28:41,010
assessment you could for example<font color="#CCCCCC"> use the</font>

649
00:28:38,690 --> 00:28:44,840
<font color="#CCCCCC">pre-boot authentication and</font><font color="#E5E5E5"> and</font>

650
00:28:41,010 --> 00:28:47,010
<font color="#E5E5E5">power policy to let windows actually</font>

651
00:28:44,840 --> 00:28:48,659
switch yourself off after a certain

652
00:28:47,010 --> 00:28:51,530
<font color="#CCCCCC">amount</font><font color="#E5E5E5"> of inactivity</font><font color="#CCCCCC"> to make sure the</font>

653
00:28:48,660 --> 00:28:55,770
machine<font color="#CCCCCC"> is in a properly</font><font color="#E5E5E5"> shutdown</font><font color="#CCCCCC"> state</font>

654
00:28:51,530 --> 00:29:00,780
<font color="#CCCCCC">together with the TPM plus pin pre-built</font>

655
00:28:55,770 --> 00:29:01,950
authentication that is a safe<font color="#CCCCCC"> state</font>

656
00:29:00,780 --> 00:29:03,180
you should also evaluate<font color="#E5E5E5"> the</font>

657
00:29:01,950 --> 00:29:04,920
effectiveness of these firmware

658
00:29:03,180 --> 00:29:08,190
<font color="#CCCCCC">protections</font><font color="#E5E5E5"> we talked about so for</font>

659
00:29:04,920 --> 00:29:11,580
example the Intel<font color="#E5E5E5"> boot guard</font><font color="#CCCCCC"> firmware</font>

660
00:29:08,190 --> 00:29:14,460
signing and other security features

661
00:29:11,580 --> 00:29:16,290
<font color="#E5E5E5">provided by the the platform vendor they</font>

662
00:29:14,460 --> 00:29:18,150
may or may<font color="#CCCCCC"> not be</font><font color="#E5E5E5"> implemented correctly</font>

663
00:29:16,290 --> 00:29:21,090
<font color="#CCCCCC">you</font><font color="#E5E5E5"> don't know so you</font><font color="#CCCCCC"> probably should go</font>

664
00:29:18,150 --> 00:29:23,910
find out and you<font color="#CCCCCC"> can also consider</font>

665
00:29:21,090 --> 00:29:27,720
adding like physical tamper resistant

666
00:29:23,910 --> 00:29:29,310
tamper resistance<font color="#E5E5E5"> measures like just</font>

667
00:29:27,720 --> 00:29:30,810
putting<font color="#E5E5E5"> some epoxy over</font><font color="#CCCCCC"> that chip for</font>

668
00:29:29,310 --> 00:29:33,960
example<font color="#E5E5E5"> making a bit harder</font><font color="#CCCCCC"> to connect</font>

669
00:29:30,810 --> 00:29:37,080
to it I mean these machines<font color="#E5E5E5"> that are in</font>

670
00:29:33,960 --> 00:29:40,650
like a tablet form factor<font color="#CCCCCC"> are usually</font>

671
00:29:37,080 --> 00:29:42,689
harder to take apart not that<font color="#E5E5E5"> that will</font>

672
00:29:40,650 --> 00:29:43,710
prevent an attacker<font color="#CCCCCC"> from performing this</font>

673
00:29:42,690 --> 00:29:45,060
<font color="#CCCCCC">kind of attack cos they don't have to</font>

674
00:29:43,710 --> 00:29:47,040
<font color="#E5E5E5">put it back together again they</font><font color="#CCCCCC"> just</font>

675
00:29:45,060 --> 00:29:49,230
want the contents of<font color="#E5E5E5"> the machine but</font>

676
00:29:47,040 --> 00:29:51,629
still making it harder to get<font color="#CCCCCC"> to</font><font color="#E5E5E5"> that</font>

677
00:29:49,230 --> 00:29:53,130
chip<font color="#E5E5E5"> will still buy you time to for</font>

678
00:29:51,630 --> 00:29:56,850
example respond and invalidate

679
00:29:53,130 --> 00:30:00,570
credentials or something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that we</font>

680
00:29:56,850 --> 00:30:02,250
have more content but it's around other

681
00:30:00,570 --> 00:30:04,350
<font color="#E5E5E5">voices and</font><font color="#CCCCCC"> stuff so we thought we'd</font>

682
00:30:02,250 --> 00:30:09,720
rather just<font color="#E5E5E5"> throw it open to</font><font color="#CCCCCC"> keep</font>

683
00:30:04,350 --> 00:30:11,909
<font color="#E5E5E5">questions at this point</font><font color="#CCCCCC"> I will</font><font color="#E5E5E5"> see if</font>

684
00:30:09,720 --> 00:30:20,340
questions about other<font color="#CCCCCC"> OSS come up then</font>

685
00:30:11,910 --> 00:30:22,020
we might talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that oh nice</font><font color="#CCCCCC"> very</font>

686
00:30:20,340 --> 00:30:25,639
<font color="#CCCCCC">nice presentations thank you very much</font>

687
00:30:22,020 --> 00:30:28,260
<font color="#CCCCCC">you</font><font color="#E5E5E5"> know my deal was about a very simple</font>

688
00:30:25,640 --> 00:30:30,630
<font color="#CCCCCC">example to store</font><font color="#E5E5E5"> passwords from I</font><font color="#CCCCCC"> think</font>

689
00:30:28,260 --> 00:30:34,530
Microsoft<font color="#CCCCCC"> worlds but from your</font>

690
00:30:30,630 --> 00:30:37,650
experience did<font color="#E5E5E5"> you achieve to recover by</font>

691
00:30:34,530 --> 00:30:39,600
example a<font color="#E5E5E5"> big volume key in memory yeah</font>

692
00:30:37,650 --> 00:30:42,450
yeah yeah<font color="#CCCCCC"> so that that's what the demo</font>

693
00:30:39,600 --> 00:30:44,969
was<font color="#E5E5E5"> showing is recovering the the volume</font>

694
00:30:42,450 --> 00:30:47,220
key for BitLocker<font color="#CCCCCC"> out of</font><font color="#E5E5E5"> RAM using that</font>

695
00:30:44,970 --> 00:30:48,960
<font color="#CCCCCC">volume key to mount the</font><font color="#E5E5E5"> disk using Linux</font>

696
00:30:47,220 --> 00:30:50,730
<font color="#E5E5E5">to be able</font><font color="#CCCCCC"> to extract</font><font color="#E5E5E5"> the secrets from</font>

697
00:30:48,960 --> 00:30:51,990
from the hard<font color="#E5E5E5"> drive or potentially</font>

698
00:30:50,730 --> 00:30:53,670
<font color="#E5E5E5">planted backdoor</font>

699
00:30:51,990 --> 00:30:54,630
you could also steal other secrets from

700
00:30:53,670 --> 00:30:56,880
memory like

701
00:30:54,630 --> 00:30:58,200
<font color="#CCCCCC">mention passwords or anything else that</font>

702
00:30:56,880 --> 00:31:00,150
<font color="#E5E5E5">might be</font><font color="#CCCCCC"> in memory but</font><font color="#E5E5E5"> once you have</font>

703
00:30:58,200 --> 00:31:01,560
<font color="#E5E5E5">that that that's the juicy target right</font>

704
00:31:00,150 --> 00:31:02,940
stealing the volume keys because<font color="#E5E5E5"> then</font>

705
00:31:01,560 --> 00:31:04,260
you<font color="#CCCCCC"> have access</font><font color="#E5E5E5"> to everything that was</font>

706
00:31:02,940 --> 00:31:06,000
<font color="#E5E5E5">stored on the hard drive all the secrets</font>

707
00:31:04,260 --> 00:31:08,940
<font color="#E5E5E5">that</font><font color="#CCCCCC"> was stored on the hard drive okay</font>

708
00:31:06,000 --> 00:31:15,390
maybe the video<font color="#E5E5E5"> was a shortcut so thank</font>

709
00:31:08,940 --> 00:31:18,510
you<font color="#E5E5E5"> you said you</font><font color="#CCCCCC"> mentioned</font><font color="#E5E5E5"> you tried</font>

710
00:31:15,390 --> 00:31:22,590
DMA attacks using<font color="#CCCCCC"> Thunderbolt yes have</font>

711
00:31:18,510 --> 00:31:24,870
you tried over an a vacant<font color="#CCCCCC"> pci bus yeah</font>

712
00:31:22,590 --> 00:31:28,320
<font color="#E5E5E5">actually what we did in this case was on</font>

713
00:31:24,870 --> 00:31:29,879
a PCI<font color="#CCCCCC"> Express</font><font color="#E5E5E5"> not Thunderbolt so since</font>

714
00:31:28,320 --> 00:31:31,800
you're<font color="#E5E5E5"> able to open</font><font color="#CCCCCC"> the case you have</font>

715
00:31:29,880 --> 00:31:34,830
<font color="#E5E5E5">handy access to</font><font color="#CCCCCC"> a PCI Express slot</font>

716
00:31:31,800 --> 00:31:36,960
<font color="#E5E5E5">that's prime target for DMA attacks as</font>

717
00:31:34,830 --> 00:31:40,290
well<font color="#CCCCCC"> and that could also be</font><font color="#E5E5E5"> performed</font>

718
00:31:36,960 --> 00:31:42,510
either when<font color="#E5E5E5"> the OS is booted up to steal</font>

719
00:31:40,290 --> 00:31:44,610
volume keys or whatever<font color="#E5E5E5"> from memory it</font>

720
00:31:42,510 --> 00:31:46,500
could also be<font color="#E5E5E5"> used</font><font color="#CCCCCC"> during the boot</font>

721
00:31:44,610 --> 00:31:48,750
sequence<font color="#CCCCCC"> when</font><font color="#E5E5E5"> efi is running to</font>

722
00:31:46,500 --> 00:31:50,790
initialize the<font color="#E5E5E5"> system to</font><font color="#CCCCCC"> actually you</font>

723
00:31:48,750 --> 00:31:55,980
know place a<font color="#CCCCCC"> backdoor</font><font color="#E5E5E5"> into the system at</font>

724
00:31:50,790 --> 00:31:57,860
that<font color="#E5E5E5"> point so yeah good question</font><font color="#CCCCCC"> a key</font>

725
00:31:55,980 --> 00:32:05,340
part of this attack was<font color="#CCCCCC"> the ability to</font>

726
00:31:57,860 --> 00:32:07,199
disable<font color="#E5E5E5"> the memory</font><font color="#CCCCCC"> write feature</font><font color="#E5E5E5"> being</font>

727
00:32:05,340 --> 00:32:09,899
able<font color="#E5E5E5"> to disable</font><font color="#CCCCCC"> that memory wiping</font>

728
00:32:07,200 --> 00:32:11,370
feature on after the OS has crashed<font color="#E5E5E5"> is</font>

729
00:32:09,900 --> 00:32:12,650
there a<font color="#E5E5E5"> reason that setting needs to</font>

730
00:32:11,370 --> 00:32:15,300
exist<font color="#E5E5E5"> in firmwares could they just</font>

731
00:32:12,650 --> 00:32:17,610
<font color="#CCCCCC">always wipe memory if the OS is crashed</font>

732
00:32:15,300 --> 00:32:20,850
<font color="#E5E5E5">they could they could but</font><font color="#CCCCCC"> they couldn't</font>

733
00:32:17,610 --> 00:32:22,080
wipe memory on every boot<font color="#CCCCCC"> problem is</font>

734
00:32:20,850 --> 00:32:24,330
<font color="#E5E5E5">that it takes a couple of seconds to</font>

735
00:32:22,080 --> 00:32:28,139
<font color="#E5E5E5">wipe a couple of gigs of memory using</font>

736
00:32:24,330 --> 00:32:30,929
just one process core<font color="#E5E5E5"> so the platform</font>

737
00:32:28,140 --> 00:32:32,100
<font color="#CCCCCC">vendors want to limit the boot time</font><font color="#E5E5E5"> to</font>

738
00:32:30,930 --> 00:32:33,540
the shortest<font color="#E5E5E5"> amount possible</font><font color="#CCCCCC"> because</font>

739
00:32:32,100 --> 00:32:35,399
<font color="#E5E5E5">that's you know it's a marketing</font>

740
00:32:33,540 --> 00:32:37,440
requirement user<font color="#CCCCCC"> Quatro user requirement</font>

741
00:32:35,400 --> 00:32:41,100
<font color="#E5E5E5">so that's competing with the security</font>

742
00:32:37,440 --> 00:32:44,190
requirement and the existence of this

743
00:32:41,100 --> 00:32:46,889
TCG platform reset mitigation spec is

744
00:32:44,190 --> 00:32:48,450
basically<font color="#E5E5E5"> to weigh those against each</font>

745
00:32:46,890 --> 00:32:51,630
other and find a scenario where<font color="#E5E5E5"> you</font>

746
00:32:48,450 --> 00:32:53,120
could in the<font color="#E5E5E5"> normal case where the</font>

747
00:32:51,630 --> 00:32:56,850
machine<font color="#CCCCCC"> is going to be shut down</font>

748
00:32:53,120 --> 00:33:00,090
<font color="#E5E5E5">properly not</font><font color="#CCCCCC"> how to</font><font color="#E5E5E5"> do that</font>

749
00:32:56,850 --> 00:33:03,419
you know<font color="#CCCCCC"> a couple of seconds</font>

750
00:33:00,090 --> 00:33:05,490
wiping procedure on every boot<font color="#E5E5E5"> but only</font>

751
00:33:03,420 --> 00:33:07,800
when you<font color="#CCCCCC"> actually detect that somebody</font>

752
00:33:05,490 --> 00:33:13,170
has or that<font color="#E5E5E5"> the OS has crashed</font>

753
00:33:07,800 --> 00:33:16,110
or and<font color="#E5E5E5"> that's basically that's what why</font>

754
00:33:13,170 --> 00:33:18,450
we think the<font color="#CCCCCC"> speck exists is because the</font>

755
00:33:16,110 --> 00:33:20,459
easy fix<font color="#E5E5E5"> would</font><font color="#CCCCCC"> be just a</font><font color="#E5E5E5"> wipe memory on</font>

756
00:33:18,450 --> 00:33:23,790
every boot<font color="#E5E5E5"> and you'd be done with it</font>

757
00:33:20,460 --> 00:33:25,110
but since it<font color="#E5E5E5"> takes time people don't</font>

758
00:33:23,790 --> 00:33:28,980
want to do that every<font color="#CCCCCC"> time and that's</font>

759
00:33:25,110 --> 00:33:30,479
<font color="#E5E5E5">why we have these you know</font><font color="#CCCCCC"> trade</font><font color="#E5E5E5"> offs ya</font>

760
00:33:28,980 --> 00:33:32,490
know<font color="#E5E5E5"> that implementation seems like a</font>

761
00:33:30,480 --> 00:33:33,810
really<font color="#E5E5E5"> good way of yeah as you said not</font>

762
00:33:32,490 --> 00:33:35,610
impacting performance<font color="#CCCCCC"> on the standard</font>

763
00:33:33,810 --> 00:33:36,810
boot scenario so<font color="#E5E5E5"> yeah but it would seem</font>

764
00:33:35,610 --> 00:33:38,850
<font color="#CCCCCC">like the logical</font><font color="#E5E5E5"> answer here for the</font>

765
00:33:36,810 --> 00:33:40,980
firmware vendors<font color="#E5E5E5"> would be don't let</font>

766
00:33:38,850 --> 00:33:45,060
people<font color="#E5E5E5"> turn that off is that way their</font>

767
00:33:40,980 --> 00:33:49,440
<font color="#E5E5E5">windows smart</font><font color="#CCCCCC"> it's hard I mean as it</font>

768
00:33:45,060 --> 00:33:51,750
exists today<font color="#E5E5E5"> they have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> integrity</font>

769
00:33:49,440 --> 00:33:53,700
protect or just hide somewhere this

770
00:33:51,750 --> 00:33:57,360
variable<font color="#E5E5E5"> instead of just leaving it open</font>

771
00:33:53,700 --> 00:34:01,170
to anybody who<font color="#E5E5E5"> can access the</font><font color="#CCCCCC"> spots by</font>

772
00:33:57,360 --> 00:34:02,909
flash<font color="#E5E5E5"> so there are I mentioned there are</font>

773
00:34:01,170 --> 00:34:04,680
some vendors who do a good job<font color="#E5E5E5"> of trying</font>

774
00:34:02,910 --> 00:34:07,740
to protect the password instead<font color="#CCCCCC"> of</font>

775
00:34:04,680 --> 00:34:10,110
having that just available<font color="#CCCCCC"> as a NVRAM</font>

776
00:34:07,740 --> 00:34:12,570
variable<font color="#E5E5E5"> they might for example hide it</font>

777
00:34:10,110 --> 00:34:14,429
in the embedded controller that you<font color="#CCCCCC"> know</font>

778
00:34:12,570 --> 00:34:16,940
back in<font color="#E5E5E5"> the day used to control the</font>

779
00:34:14,429 --> 00:34:19,410
<font color="#E5E5E5">keyboard on a laptop</font><font color="#CCCCCC"> that kind of</font><font color="#E5E5E5"> thing</font>

780
00:34:16,940 --> 00:34:21,810
which makes it a bit<font color="#E5E5E5"> harder</font><font color="#CCCCCC"> to get to</font>

781
00:34:19,409 --> 00:34:23,460
<font color="#E5E5E5">not impossible but if you get efi</font>

782
00:34:21,810 --> 00:34:26,370
execution then you could talk<font color="#CCCCCC"> to that</font>

783
00:34:23,460 --> 00:34:28,409
<font color="#E5E5E5">chip and yeah so it you you can do</font>

784
00:34:26,370 --> 00:34:30,418
things to<font color="#CCCCCC"> kind of hide it and try to</font>

785
00:34:28,409 --> 00:34:34,678
<font color="#CCCCCC">integrity protect it but I</font><font color="#E5E5E5"> think the</font>

786
00:34:30,418 --> 00:34:36,239
<font color="#CCCCCC">real the real</font><font color="#E5E5E5"> fix for this is probably</font>

787
00:34:34,679 --> 00:34:39,150
to go back and have<font color="#CCCCCC"> another look</font><font color="#E5E5E5"> at the</font>

788
00:34:36,239 --> 00:34:40,979
spec see how<font color="#CCCCCC"> can</font><font color="#E5E5E5"> we retool this to</font>

789
00:34:39,150 --> 00:34:42,389
<font color="#CCCCCC">actually work in a scenario where</font>

790
00:34:40,980 --> 00:34:44,690
somebody<font color="#E5E5E5"> has physical access</font><font color="#CCCCCC"> to the</font>

791
00:34:42,389 --> 00:34:47,489
machine<font color="#E5E5E5"> and that might mean</font><font color="#CCCCCC"> for example</font>

792
00:34:44,690 --> 00:34:49,200
<font color="#E5E5E5">using an area special area of memory</font>

793
00:34:47,489 --> 00:34:51,418
physical memory to store secrets in

794
00:34:49,199 --> 00:34:53,189
that's always<font color="#E5E5E5"> wiped but it's a small</font>

795
00:34:51,418 --> 00:34:54,960
area<font color="#CCCCCC"> so it doesn't impact performance</font><font color="#E5E5E5"> so</font>

796
00:34:53,190 --> 00:35:00,060
that<font color="#CCCCCC"> might be one</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know other other</font>

797
00:34:54,960 --> 00:35:05,400
<font color="#E5E5E5">trade-off</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can make so when you</font>

798
00:35:00,060 --> 00:35:07,680
<font color="#E5E5E5">did the demo was the machine hey he did</font>

799
00:35:05,400 --> 00:35:10,260
the the<font color="#CCCCCC"> demo was the</font><font color="#E5E5E5"> machine and powered</font>

800
00:35:07,680 --> 00:35:12,210
offers<font color="#E5E5E5"> our was it as sorry was a powered</font>

801
00:35:10,260 --> 00:35:14,070
on or<font color="#E5E5E5"> sleep and in the demo it was</font>

802
00:35:12,210 --> 00:35:15,540
sleeping yet it was sleeping<font color="#E5E5E5"> okay and</font>

803
00:35:14,070 --> 00:35:17,580
<font color="#CCCCCC">were</font><font color="#E5E5E5"> there other than hibernate and</font>

804
00:35:15,540 --> 00:35:19,700
<font color="#E5E5E5">power off are there any other states</font>

805
00:35:17,580 --> 00:35:24,589
where this attack<font color="#E5E5E5"> is difficult</font>

806
00:35:19,700 --> 00:35:26,990
not<font color="#E5E5E5"> really because if I mean if</font><font color="#CCCCCC"> you have</font>

807
00:35:24,589 --> 00:35:28,520
physical<font color="#CCCCCC"> access to the machine</font><font color="#E5E5E5"> like I</font>

808
00:35:26,990 --> 00:35:30,368
<font color="#E5E5E5">said if it's off and you don't have</font>

809
00:35:28,520 --> 00:35:33,200
<font color="#CCCCCC">pre-boot you can just boot it up</font>

810
00:35:30,369 --> 00:35:36,559
<font color="#CCCCCC">basically the only</font><font color="#E5E5E5"> state where it's hard</font>

811
00:35:33,200 --> 00:35:37,879
is<font color="#E5E5E5"> if it's hard to get the</font><font color="#CCCCCC"> secret's</font>

812
00:35:36,559 --> 00:35:41,230
loaded into memory in the<font color="#E5E5E5"> first place</font>

813
00:35:37,880 --> 00:35:47,119
which<font color="#CCCCCC"> is the</font><font color="#E5E5E5"> scenario with TPM + pin and</font>

814
00:35:41,230 --> 00:35:50,210
parallel<font color="#E5E5E5"> state nobody wants to</font><font color="#CCCCCC"> know</font>

815
00:35:47,119 --> 00:35:51,740
<font color="#CCCCCC">about other OSS ok I was</font><font color="#E5E5E5"> just about to</font>

816
00:35:50,210 --> 00:35:53,540
<font color="#CCCCCC">ask that</font><font color="#E5E5E5"> since you alerted</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> other</font>

817
00:35:51,740 --> 00:35:56,479
operating systems did you look at<font color="#E5E5E5"> Mac's</font>

818
00:35:53,540 --> 00:35:59,990
with<font color="#CCCCCC"> File Vault</font><font color="#E5E5E5"> yep</font><font color="#CCCCCC"> if that's what you</font>

819
00:35:56,480 --> 00:36:01,880
want to see so what we'll<font color="#CCCCCC"> just</font><font color="#E5E5E5"> quickly</font>

820
00:35:59,990 --> 00:36:03,290
go through this so for example you don't

821
00:36:01,880 --> 00:36:05,720
<font color="#CCCCCC">want to leave your penguin showing other</font>

822
00:36:03,290 --> 00:36:08,270
either so let's talk<font color="#E5E5E5"> about that for a</font>

823
00:36:05,720 --> 00:36:10,009
second<font color="#CCCCCC"> the Linux kernel actually</font>

824
00:36:08,270 --> 00:36:13,549
<font color="#E5E5E5">received a patch from matthew</font><font color="#CCCCCC"> garrett</font><font color="#E5E5E5"> a</font>

825
00:36:10,010 --> 00:36:15,920
year ago to implement this specification

826
00:36:13,549 --> 00:36:19,309
<font color="#E5E5E5">to set the more bit</font>

827
00:36:15,920 --> 00:36:21,440
unfortunately it's behind a<font color="#CCCCCC"> and if def</font>

828
00:36:19,309 --> 00:36:23,000
<font color="#E5E5E5">so you actually have to know about it</font>

829
00:36:21,440 --> 00:36:26,000
and enable<font color="#E5E5E5"> it when you compile</font><font color="#CCCCCC"> your</font>

830
00:36:23,000 --> 00:36:28,040
kernel<font color="#E5E5E5"> and not all</font><font color="#CCCCCC"> Linux distributions</font>

831
00:36:26,000 --> 00:36:30,680
actually do<font color="#E5E5E5"> that so if you want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> check</font>

832
00:36:28,040 --> 00:36:34,339
<font color="#CCCCCC">for</font><font color="#E5E5E5"> the support in your just you know</font>

833
00:36:30,680 --> 00:36:37,460
<font color="#E5E5E5">hex dump that file in the</font><font color="#CCCCCC"> SIS filesystem</font>

834
00:36:34,339 --> 00:36:39,650
and check the value there if it's a zero

835
00:36:37,460 --> 00:36:42,109
then<font color="#E5E5E5"> the more bit is not set which means</font>

836
00:36:39,650 --> 00:36:44,270
<font color="#E5E5E5">that your</font><font color="#CCCCCC"> Linux vendor</font><font color="#E5E5E5"> should probably</font>

837
00:36:42,109 --> 00:36:47,240
have a<font color="#E5E5E5"> look at that enabling that in the</font>

838
00:36:44,270 --> 00:36:49,009
kernel<font color="#CCCCCC"> 5-volt you mentioned well I think</font>

839
00:36:47,240 --> 00:36:54,410
<font color="#CCCCCC">we have time</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> show</font><font color="#E5E5E5"> you the demo</font><font color="#CCCCCC"> on</font>

840
00:36:49,010 --> 00:36:57,290
<font color="#CCCCCC">that as</font><font color="#E5E5E5"> well</font><font color="#CCCCCC"> so let's do that or is it</font>

841
00:36:54,410 --> 00:36:59,540
<font color="#E5E5E5">gonna it's moving is moving yeah so this</font>

842
00:36:57,290 --> 00:37:02,720
<font color="#E5E5E5">one's a we can talk over it it's a bit</font>

843
00:36:59,540 --> 00:37:05,270
it's a bit longer because it's not cut

844
00:37:02,720 --> 00:37:06,589
down<font color="#E5E5E5"> like like the one we showed you</font>

845
00:37:05,270 --> 00:37:09,980
earlier but<font color="#E5E5E5"> it's basically</font><font color="#CCCCCC"> showing you</font>

846
00:37:06,589 --> 00:37:12,109
<font color="#CCCCCC">the same thing so a user has secrets</font><font color="#E5E5E5"> in</font>

847
00:37:09,980 --> 00:37:13,880
a file on the<font color="#E5E5E5"> hard drive the attacker</font>

848
00:37:12,109 --> 00:37:17,770
comes along finds the machine in<font color="#E5E5E5"> a</font>

849
00:37:13,880 --> 00:37:23,030
booted up<font color="#E5E5E5"> state plugs in a USB</font><font color="#CCCCCC"> Drive</font>

850
00:37:17,770 --> 00:37:25,880
yeah yeah<font color="#E5E5E5"> that for convenience sake the</font>

851
00:37:23,030 --> 00:37:28,420
machine was already open<font color="#CCCCCC"> cools down the</font>

852
00:37:25,880 --> 00:37:28,420
<font color="#CCCCCC">RAM chips</font>

853
00:37:28,440 --> 00:37:36,200
[Music]

854
00:37:31,210 --> 00:37:39,140
resets the machine<font color="#CCCCCC"> with I think it's</font>

855
00:37:36,200 --> 00:37:42,290
option power there you go<font color="#E5E5E5"> boots it up</font>

856
00:37:39,140 --> 00:37:49,339
again presses the option key to get<font color="#E5E5E5"> to</font>

857
00:37:42,290 --> 00:37:51,770
the boot volume selection menu and you

858
00:37:49,339 --> 00:37:57,380
note in this case<font color="#CCCCCC"> there's no</font><font color="#E5E5E5"> programming</font>

859
00:37:51,770 --> 00:38:01,339
of the<font color="#CCCCCC"> spi</font><font color="#E5E5E5"> flash action so choose to</font>

860
00:37:57,380 --> 00:38:03,680
boot from external<font color="#E5E5E5"> USB Drive runs the</font>

861
00:38:01,339 --> 00:38:10,640
tool to<font color="#E5E5E5"> extract the secrets out of</font>

862
00:38:03,680 --> 00:38:12,890
memory reboots into Linux that's just a

863
00:38:10,640 --> 00:38:16,279
Linux kernel booting it's not very

864
00:38:12,890 --> 00:38:19,970
interesting<font color="#CCCCCC"> but</font><font color="#E5E5E5"> soon we'll get a</font><font color="#CCCCCC"> close</font>

865
00:38:16,280 --> 00:38:21,760
<font color="#CCCCCC">up of the screen</font><font color="#E5E5E5"> where it</font><font color="#CCCCCC"> actually shows</font>

866
00:38:19,970 --> 00:38:24,439
you that the volume is mounted and<font color="#CCCCCC"> the</font>

867
00:38:21,760 --> 00:38:29,690
<font color="#E5E5E5">secrets of the hard drive have been</font>

868
00:38:24,440 --> 00:38:32,810
stolen<font color="#CCCCCC"> so exactly</font><font color="#E5E5E5"> the same scenario</font>

869
00:38:29,690 --> 00:38:35,839
exactly the same demo but on a touch<font color="#E5E5E5"> bar</font>

870
00:38:32,810 --> 00:38:37,990
<font color="#CCCCCC">MacBook Pro</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we talked</font><font color="#E5E5E5"> to Apple about</font>

871
00:38:35,839 --> 00:38:42,349
that of course their response<font color="#E5E5E5"> was that</font>

872
00:38:37,990 --> 00:38:45,828
<font color="#CCCCCC">in the very very latest</font><font color="#E5E5E5"> hardware models</font>

873
00:38:42,349 --> 00:38:50,900
so 2018<font color="#CCCCCC"> touch bar MacBook Pro and</font><font color="#E5E5E5"> the</font>

874
00:38:45,829 --> 00:38:52,430
latest latest<font color="#E5E5E5"> Mac Pro</font><font color="#CCCCCC"> I I'm not too sure</font>

875
00:38:50,900 --> 00:38:55,760
about your<font color="#CCCCCC"> laughs did</font><font color="#E5E5E5"> Google that but</font>

876
00:38:52,430 --> 00:38:58,430
those have a new chip called<font color="#E5E5E5"> the the</font>

877
00:38:55,760 --> 00:39:00,650
Apple<font color="#CCCCCC"> t2 chip which is responsible for</font>

878
00:38:58,430 --> 00:39:03,859
<font color="#E5E5E5">doing hard drive encryption so they've</font>

879
00:39:00,650 --> 00:39:05,780
moved<font color="#E5E5E5"> full disk encryption functionality</font>

880
00:39:03,859 --> 00:39:08,270
out<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> operating system and</font><font color="#CCCCCC"> onto a</font>

881
00:39:05,780 --> 00:39:11,480
separate dedicated chip<font color="#E5E5E5"> which means that</font>

882
00:39:08,270 --> 00:39:14,990
<font color="#E5E5E5">this attack scenario is not no longer</font>

883
00:39:11,480 --> 00:39:16,220
relevant to to those<font color="#E5E5E5"> machines</font><font color="#CCCCCC"> also they</font>

884
00:39:14,990 --> 00:39:18,319
recommend setting<font color="#E5E5E5"> a firmware password</font>

885
00:39:16,220 --> 00:39:20,328
which if a firmware<font color="#E5E5E5"> password had been</font>

886
00:39:18,319 --> 00:39:24,170
set on<font color="#E5E5E5"> that machine then Timo wouldn't</font>

887
00:39:20,329 --> 00:39:25,940
have been able to just press the option

888
00:39:24,170 --> 00:39:27,859
key to boot off<font color="#CCCCCC"> of USB</font><font color="#E5E5E5"> it actually had</font>

889
00:39:25,940 --> 00:39:31,369
to<font color="#E5E5E5"> you know get around the firmware</font>

890
00:39:27,859 --> 00:39:35,690
password protection which might be

891
00:39:31,369 --> 00:39:38,030
<font color="#CCCCCC">impossible yep</font><font color="#E5E5E5"> any other questions</font><font color="#CCCCCC"> over</font>

892
00:39:35,690 --> 00:39:42,140
there we'll<font color="#E5E5E5"> just put this light up</font><font color="#CCCCCC"> hi</font>

893
00:39:38,030 --> 00:39:43,760
<font color="#E5E5E5">hey</font><font color="#CCCCCC"> all right</font><font color="#E5E5E5"> hey I just very nice work</font>

894
00:39:42,140 --> 00:39:45,319
and I<font color="#CCCCCC"> just have these sort of</font>

895
00:39:43,760 --> 00:39:48,140
<font color="#E5E5E5">and rather than question which is you</font>

896
00:39:45,320 --> 00:39:49,880
did say<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you know entering the pinna</font>

897
00:39:48,140 --> 00:39:51,500
actually would stop<font color="#E5E5E5"> configuring your</font>

898
00:39:49,880 --> 00:39:53,119
BitLocker<font color="#E5E5E5"> to require a pin up on a</font>

899
00:39:51,500 --> 00:39:55,010
<font color="#CCCCCC">startup would actually prevent your</font>

900
00:39:53,119 --> 00:39:57,080
attack<font color="#E5E5E5"> and just open</font><font color="#CCCCCC"> my Windows machine</font>

901
00:39:55,010 --> 00:39:59,660
here and I look at BitLocker and<font color="#E5E5E5"> says</font>

902
00:39:57,080 --> 00:40:02,029
the recommended way to<font color="#E5E5E5"> configure</font>

903
00:39:59,660 --> 00:40:05,118
BitLocker is to enter a pin<font color="#E5E5E5"> it looks</font>

904
00:40:02,030 --> 00:40:07,550
like<font color="#E5E5E5"> so in some sense it seems like from</font>

905
00:40:05,119 --> 00:40:11,260
<font color="#E5E5E5">a security standpoint making BitLocker</font>

906
00:40:07,550 --> 00:40:13,910
not requiring<font color="#E5E5E5"> a pin is insecure</font><font color="#CCCCCC"> period</font>

907
00:40:11,260 --> 00:40:17,660
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> to say that</font><font color="#E5E5E5"> even offered that</font>

908
00:40:13,910 --> 00:40:23,060
option yeah so again<font color="#CCCCCC"> it's a usability</font>

909
00:40:17,660 --> 00:40:25,850
thing right so<font color="#E5E5E5"> no not all</font><font color="#CCCCCC"> the people</font>

910
00:40:23,060 --> 00:40:27,830
<font color="#E5E5E5">that perhaps should or could enable the</font>

911
00:40:25,850 --> 00:40:29,630
BitLocker pin have done so because<font color="#E5E5E5"> of</font>

912
00:40:27,830 --> 00:40:31,970
usability<font color="#E5E5E5"> issues and what we want to</font>

913
00:40:29,630 --> 00:40:35,450
<font color="#E5E5E5">spread awareness about is that those</font>

914
00:40:31,970 --> 00:40:38,810
<font color="#CCCCCC">people might</font><font color="#E5E5E5"> be at risk</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> this kind</font>

915
00:40:35,450 --> 00:40:40,069
<font color="#CCCCCC">of</font><font color="#E5E5E5"> attack and we should</font><font color="#CCCCCC"> give props to</font>

916
00:40:38,810 --> 00:40:41,570
Microsoft as well for updating<font color="#E5E5E5"> the</font>

917
00:40:40,070 --> 00:40:45,200
documentation online<font color="#E5E5E5"> to actually make it</font>

918
00:40:41,570 --> 00:40:53,359
<font color="#E5E5E5">clearer</font><font color="#CCCCCC"> the trade-offs</font><font color="#E5E5E5"> involved so there</font>

919
00:40:45,200 --> 00:40:55,118
that's that's good given the the<font color="#CCCCCC"> raw</font>

920
00:40:53,359 --> 00:40:58,460
<font color="#CCCCCC">modules themselves</font><font color="#E5E5E5"> these days have</font>

921
00:40:55,119 --> 00:40:59,540
temperature diode on them is thus a way

922
00:40:58,460 --> 00:41:01,490
that they could use<font color="#CCCCCC"> to mitigate</font><font color="#E5E5E5"> the</font>

923
00:40:59,540 --> 00:41:05,350
attack<font color="#E5E5E5"> just detect a sudden drop and</font>

924
00:41:01,490 --> 00:41:05,350
just wipe memory or is there any way to

925
00:41:05,440 --> 00:41:10,340
that that's<font color="#E5E5E5"> probably too complex</font><font color="#CCCCCC"> a</font>

926
00:41:08,359 --> 00:41:12,920
scenario<font color="#CCCCCC"> to actually be</font><font color="#E5E5E5"> feasible in the</font>

927
00:41:10,340 --> 00:41:14,780
<font color="#E5E5E5">real world</font><font color="#CCCCCC"> you also have to</font><font color="#E5E5E5"> remember</font>

928
00:41:12,920 --> 00:41:16,520
that<font color="#CCCCCC"> all of</font><font color="#E5E5E5"> these attacks that we're</font>

929
00:41:14,780 --> 00:41:18,710
performing<font color="#E5E5E5"> are done when the machine</font><font color="#CCCCCC"> is</font>

930
00:41:16,520 --> 00:41:21,230
in<font color="#E5E5E5"> an off state right there's no power</font>

931
00:41:18,710 --> 00:41:24,890
<font color="#E5E5E5">to the</font><font color="#CCCCCC"> machine any kind</font><font color="#E5E5E5"> of active</font>

932
00:41:21,230 --> 00:41:28,910
measures<font color="#E5E5E5"> like that would</font><font color="#CCCCCC"> require some</font>

933
00:41:24,890 --> 00:41:31,670
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> of thing to be some kind of code or</font>

934
00:41:28,910 --> 00:41:34,879
<font color="#E5E5E5">something to be active and actually</font>

935
00:41:31,670 --> 00:41:37,070
clear memory contents before<font color="#CCCCCC"> we get to</font>

936
00:41:34,880 --> 00:41:41,030
resetting the<font color="#E5E5E5"> machine and before we get</font>

937
00:41:37,070 --> 00:41:43,850
some hardware solution for us<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> and</font>

938
00:41:41,030 --> 00:41:47,869
still it would be a time race there

939
00:41:43,850 --> 00:41:50,990
right<font color="#E5E5E5"> so if we</font><font color="#CCCCCC"> manage to cool down the</font>

940
00:41:47,869 --> 00:41:53,690
RAM chips and then turn off<font color="#CCCCCC"> the</font><font color="#E5E5E5"> power so</font>

941
00:41:50,990 --> 00:41:56,118
<font color="#E5E5E5">that you know quickly enough that the</font>

942
00:41:53,690 --> 00:41:56,900
active measure wouldn't have triggered

943
00:41:56,119 --> 00:41:59,330
<font color="#E5E5E5">yet then</font>

944
00:41:56,900 --> 00:42:01,010
<font color="#CCCCCC">No yeah</font><font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> I don't think that's a</font>

945
00:41:59,330 --> 00:42:02,390
<font color="#E5E5E5">viable option because it's it's a bit</font>

946
00:42:01,010 --> 00:42:04,190
too complex and there's always<font color="#E5E5E5"> gonna be</font>

947
00:42:02,390 --> 00:42:08,180
<font color="#E5E5E5">that</font><font color="#CCCCCC"> race condition though have you done</font>

948
00:42:04,190 --> 00:42:11,570
any testings with octane as the memory

949
00:42:08,180 --> 00:42:14,690
instead of using ramp<font color="#E5E5E5"> no the Intel new X</font>

950
00:42:11,570 --> 00:42:16,700
points there yeah we didn't<font color="#CCCCCC"> mention that</font>

951
00:42:14,690 --> 00:42:18,440
before<font color="#E5E5E5"> but that there are several</font>

952
00:42:16,700 --> 00:42:20,689
different<font color="#E5E5E5"> other ways</font><font color="#CCCCCC"> you could go about</font>

953
00:42:18,440 --> 00:42:22,460
<font color="#E5E5E5">getting out contents of RAM</font><font color="#CCCCCC"> I mean you</font>

954
00:42:20,690 --> 00:42:25,190
you could even<font color="#E5E5E5"> if you've got physical</font>

955
00:42:22,460 --> 00:42:27,560
access and you have socketed<font color="#CCCCCC"> Ram</font><font color="#E5E5E5"> modules</font>

956
00:42:25,190 --> 00:42:30,770
for example<font color="#E5E5E5"> you could plug in like a</font>

957
00:42:27,560 --> 00:42:32,480
dram<font color="#E5E5E5"> emulator or something to get at the</font>

958
00:42:30,770 --> 00:42:33,890
sequence in memory so<font color="#E5E5E5"> that there are</font>

959
00:42:32,480 --> 00:42:35,780
lots of different<font color="#E5E5E5"> ways to</font><font color="#CCCCCC"> actually do</font>

960
00:42:33,890 --> 00:42:37,490
that<font color="#E5E5E5"> but you know it's all getting into</font>

961
00:42:35,780 --> 00:42:39,920
<font color="#E5E5E5">the slightly theoretical at that point</font>

962
00:42:37,490 --> 00:42:41,509
we just<font color="#CCCCCC"> want to show that</font><font color="#E5E5E5"> today</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

963
00:42:39,920 --> 00:42:43,780
a practical attack that anybody could

964
00:42:41,510 --> 00:42:48,340
carry out<font color="#E5E5E5"> and that probably needs some</font>

965
00:42:43,780 --> 00:42:50,900
further work<font color="#CCCCCC"> to make that harder again</font>

966
00:42:48,340 --> 00:42:53,210
<font color="#CCCCCC">same thing with</font><font color="#E5E5E5"> their round directly it</font>

967
00:42:50,900 --> 00:42:54,950
would<font color="#E5E5E5"> be quite the expensive compared to</font>

968
00:42:53,210 --> 00:42:56,810
this which is<font color="#E5E5E5"> so we did we didn't</font>

969
00:42:54,950 --> 00:42:58,339
mention<font color="#E5E5E5"> but the obvious</font><font color="#CCCCCC"> solution to</font><font color="#E5E5E5"> this</font>

970
00:42:56,810 --> 00:43:01,250
is of<font color="#E5E5E5"> course to implement some kind of</font>

971
00:42:58,340 --> 00:43:02,990
<font color="#CCCCCC">Ram encryption in Hardware so</font><font color="#E5E5E5"> that the</font>

972
00:43:01,250 --> 00:43:04,460
memory controller would encrypt

973
00:43:02,990 --> 00:43:08,569
everything<font color="#E5E5E5"> before going out</font><font color="#CCCCCC"> to the RAM</font>

974
00:43:04,460 --> 00:43:10,850
modules<font color="#CCCCCC"> but of</font><font color="#E5E5E5"> course</font><font color="#CCCCCC"> that's you know</font>

975
00:43:08,570 --> 00:43:12,500
that's<font color="#CCCCCC"> totally feasible there's that</font>

976
00:43:10,850 --> 00:43:15,910
<font color="#CCCCCC">technology exists</font><font color="#E5E5E5"> it's just you know</font>

977
00:43:12,500 --> 00:43:17,870
having<font color="#E5E5E5"> some kind of you know high speed</font>

978
00:43:15,910 --> 00:43:21,140
<font color="#E5E5E5">encryption algorithm in</font><font color="#CCCCCC"> Hardware in the</font>

979
00:43:17,870 --> 00:43:22,880
<font color="#E5E5E5">memory controller but yeah there's</font>

980
00:43:21,140 --> 00:43:24,560
<font color="#E5E5E5">there's not much of</font><font color="#CCCCCC"> a business</font><font color="#E5E5E5"> case to</font>

981
00:43:22,880 --> 00:43:25,550
<font color="#E5E5E5">be made there because it's just a</font>

982
00:43:24,560 --> 00:43:27,320
security<font color="#E5E5E5"> feature it doesn't have</font>

983
00:43:25,550 --> 00:43:29,420
anything<font color="#E5E5E5"> else and it's a lot of</font><font color="#CCCCCC"> die</font>

984
00:43:27,320 --> 00:43:31,730
<font color="#E5E5E5">space perhaps to devote to just that</font>

985
00:43:29,420 --> 00:43:34,640
security feature so that that might<font color="#E5E5E5"> be a</font>

986
00:43:31,730 --> 00:43:37,000
possible way to fix<font color="#E5E5E5"> it but it it comes</font>

987
00:43:34,640 --> 00:43:37,000
at a<font color="#E5E5E5"> cost</font>

988
00:43:40,090 --> 00:43:45,010
curiosity question<font color="#CCCCCC"> in your</font><font color="#E5E5E5"> demos you're</font>

989
00:43:42,350 --> 00:43:48,259
showing this cold boot being done with

990
00:43:45,010 --> 00:43:50,960
free spray is that enough to give you

991
00:43:48,260 --> 00:43:54,820
<font color="#E5E5E5">the time</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> - oh yeah yeah I mean</font>

992
00:43:50,960 --> 00:43:57,170
<font color="#E5E5E5">cooling the memory chips down</font><font color="#CCCCCC"> to I know</font>

993
00:43:54,820 --> 00:44:00,680
<font color="#E5E5E5">at least below freezing point</font>

994
00:43:57,170 --> 00:44:02,510
I mean<font color="#CCCCCC"> free support of water gives you</font>

995
00:44:00,680 --> 00:44:05,870
enough seconds to be able<font color="#CCCCCC"> to perform</font>

996
00:44:02,510 --> 00:44:08,420
<font color="#E5E5E5">this kind of attack so we basically</font>

997
00:44:05,870 --> 00:44:10,580
haven't hit that<font color="#CCCCCC"> limit in our test</font>

998
00:44:08,420 --> 00:44:13,370
<font color="#E5E5E5">thing because I mean you only need like</font>

999
00:44:10,580 --> 00:44:15,560
what are the most<font color="#E5E5E5"> 5-10 seconds and</font>

1000
00:44:13,370 --> 00:44:18,529
that's easily done<font color="#E5E5E5"> by just cooling them</font>

1001
00:44:15,560 --> 00:44:20,060
down<font color="#E5E5E5"> with some compressed air or exactly</font>

1002
00:44:18,530 --> 00:44:24,530
<font color="#E5E5E5">the driver gas not the compressed air</font>

1003
00:44:20,060 --> 00:44:26,810
but yeah<font color="#E5E5E5"> our colleague Timo actually</font>

1004
00:44:24,530 --> 00:44:30,860
managed<font color="#CCCCCC"> to do this without</font><font color="#E5E5E5"> cooling the</font>

1005
00:44:26,810 --> 00:44:32,990
<font color="#E5E5E5">RAM at all yeah yeah depends on the</font>

1006
00:44:30,860 --> 00:44:40,040
normal running<font color="#CCCCCC"> temperature of the</font>

1007
00:44:32,990 --> 00:44:41,810
machine and and how if the RAM chips are

1008
00:44:40,040 --> 00:44:43,190
being<font color="#E5E5E5"> like pushed to their limit or not</font>

1009
00:44:41,810 --> 00:44:44,840
so there's lots of variables<font color="#CCCCCC"> in there</font>

1010
00:44:43,190 --> 00:44:45,890
there's a<font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> academic research in</font>

1011
00:44:44,840 --> 00:44:47,480
the past<font color="#E5E5E5"> ten years have gone into</font>

1012
00:44:45,890 --> 00:44:49,940
figuring out whether it's where these

1013
00:44:47,480 --> 00:44:51,770
limits lie so<font color="#E5E5E5"> you can just go have a</font>

1014
00:44:49,940 --> 00:44:53,330
look at the academic<font color="#E5E5E5"> papers on codeword</font>

1015
00:44:51,770 --> 00:44:54,950
<font color="#E5E5E5">if you're interesting in numbers around</font>

1016
00:44:53,330 --> 00:44:56,270
that we don't have any any numbers

1017
00:44:54,950 --> 00:44:57,470
because like I said we haven't<font color="#E5E5E5"> hit that</font>

1018
00:44:56,270 --> 00:45:03,530
<font color="#E5E5E5">limit in our testing</font>

1019
00:44:57,470 --> 00:45:04,850
thank you just to check<font color="#E5E5E5"> so basically you</font>

1020
00:45:03,530 --> 00:45:08,530
<font color="#E5E5E5">were saying there once the machine is</font>

1021
00:45:04,850 --> 00:45:10,940
<font color="#E5E5E5">off is not exploitable for this case</font><font color="#CCCCCC"> if</font>

1022
00:45:08,530 --> 00:45:12,380
you have pre-boot authentication with a

1023
00:45:10,940 --> 00:45:14,930
BitLocker pin<font color="#E5E5E5"> otherwise you can just</font>

1024
00:45:12,380 --> 00:45:18,050
<font color="#CCCCCC">pull</font><font color="#E5E5E5"> it up again so</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> remember</font>

1025
00:45:14,930 --> 00:45:20,089
<font color="#E5E5E5">nation</font><font color="#CCCCCC"> yep yep so hibernate will save</font>

1026
00:45:18,050 --> 00:45:21,890
the RAM contents to<font color="#E5E5E5"> the encrypted</font><font color="#CCCCCC"> volume</font>

1027
00:45:20,090 --> 00:45:24,920
and then shut down<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Machine properly</font>

1028
00:45:21,890 --> 00:45:26,150
<font color="#E5E5E5">so hibernation is is the same as power</font>

1029
00:45:24,920 --> 00:45:29,300
off<font color="#E5E5E5"> basically when you're done with it</font>

1030
00:45:26,150 --> 00:45:33,530
yeah<font color="#E5E5E5"> okay and the last part is</font><font color="#CCCCCC"> that well</font>

1031
00:45:29,300 --> 00:45:36,020
and those Intel SGX chips<font color="#E5E5E5"> help not</font>

1032
00:45:33,530 --> 00:45:37,670
<font color="#E5E5E5">really that</font><font color="#CCCCCC"> III assume you're talking</font>

1033
00:45:36,020 --> 00:45:40,610
<font color="#E5E5E5">about the memory encryption stuff yep</font>

1034
00:45:37,670 --> 00:45:43,130
yeah so like like<font color="#E5E5E5"> I said the technology</font>

1035
00:45:40,610 --> 00:45:46,160
<font color="#E5E5E5">exists</font><font color="#CCCCCC"> to do actual encryption of the</font>

1036
00:45:43,130 --> 00:45:48,320
<font color="#CCCCCC">RAM</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> the memory controller and</font><font color="#E5E5E5"> intel</font>

1037
00:45:46,160 --> 00:45:52,069
has that kind<font color="#E5E5E5"> of function functionality</font>

1038
00:45:48,320 --> 00:45:54,380
bundled into the X STX stuff as<font color="#E5E5E5"> far as I</font>

1039
00:45:52,070 --> 00:45:56,750
know it<font color="#CCCCCC"> actually only protects the STX</font>

1040
00:45:54,380 --> 00:45:59,210
enclaves and not all<font color="#CCCCCC"> of memory</font><font color="#E5E5E5"> so I</font>

1041
00:45:56,750 --> 00:46:01,310
<font color="#E5E5E5">don't think it's a viable option</font><font color="#CCCCCC"> to</font>

1042
00:45:59,210 --> 00:46:05,090
<font color="#E5E5E5">protect the BitLocker keys in that in</font>

1043
00:46:01,310 --> 00:46:06,440
<font color="#E5E5E5">location but that technology could</font><font color="#CCCCCC"> be</font>

1044
00:46:05,090 --> 00:46:09,440
<font color="#E5E5E5">extended to protect all of</font><font color="#CCCCCC"> the memory</font>

1045
00:46:06,440 --> 00:46:11,690
right but<font color="#E5E5E5"> again it's it's a trade-off</font>

1046
00:46:09,440 --> 00:46:14,510
<font color="#E5E5E5">because it requires some dice based on</font>

1047
00:46:11,690 --> 00:46:20,840
the I guess it's a<font color="#CCCCCC"> PCH the memory</font>

1048
00:46:14,510 --> 00:46:23,540
controller anyway<font color="#CCCCCC"> so yeah yes a comment</font>

1049
00:46:20,840 --> 00:46:27,320
and what for AMD AMD does have<font color="#E5E5E5"> on rice</font>

1050
00:46:23,540 --> 00:46:29,990
<font color="#CCCCCC">and processors</font><font color="#E5E5E5"> total memory encryption</font>

1051
00:46:27,320 --> 00:46:32,540
so we do have what we call a transparent

1052
00:46:29,990 --> 00:46:37,220
<font color="#CCCCCC">system memory encryption</font><font color="#E5E5E5"> that encrypts</font>

1053
00:46:32,540 --> 00:46:39,290
into a memory<font color="#CCCCCC"> unable</font><font color="#E5E5E5"> to bias settings so</font>

1054
00:46:37,220 --> 00:46:41,990
then it's<font color="#E5E5E5"> the encryption engineers in a</font>

1055
00:46:39,290 --> 00:46:45,290
memory controller and it encrypts<font color="#CCCCCC"> entire</font>

1056
00:46:41,990 --> 00:46:50,509
<font color="#E5E5E5">memory so that that's so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> does it</font>

1057
00:46:45,290 --> 00:46:53,690
<font color="#CCCCCC">then like randomize the key on only one</font>

1058
00:46:50,510 --> 00:46:55,609
on each boot that's the kind<font color="#E5E5E5"> of that's</font>

1059
00:46:53,690 --> 00:46:58,660
the<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> mitigation that we were</font>

1060
00:46:55,609 --> 00:47:00,950
talking about where if you have

1061
00:46:58,660 --> 00:47:02,839
something in the<font color="#CCCCCC"> memory controller that</font>

1062
00:47:00,950 --> 00:47:04,390
<font color="#E5E5E5">would encrypt all the RAM contents</font>

1063
00:47:02,840 --> 00:47:07,099
before<font color="#CCCCCC"> they go out to the DRAM modules</font>

1064
00:47:04,390 --> 00:47:09,290
<font color="#CCCCCC">and the key is randomized</font><font color="#E5E5E5"> in every boot</font>

1065
00:47:07,099 --> 00:47:11,270
then all of<font color="#E5E5E5"> these attacks would</font><font color="#CCCCCC"> be</font>

1066
00:47:09,290 --> 00:47:13,130
pretty much<font color="#E5E5E5"> unfeasible</font><font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> pretty</font>

1067
00:47:11,270 --> 00:47:23,119
<font color="#E5E5E5">good</font><font color="#CCCCCC"> oh that's</font><font color="#E5E5E5"> great that's available</font>

1068
00:47:13,130 --> 00:47:31,670
<font color="#E5E5E5">today unless you can turn it off</font><font color="#CCCCCC"> but</font>

1069
00:47:23,119 --> 00:47:34,930
it's configurable<font color="#CCCCCC"> then okay so thank you</font>

1070
00:47:31,670 --> 00:47:34,930
<font color="#CCCCCC">very much Thanks</font>

1071
00:47:38,009 --> 00:47:43,079
<font color="#CCCCCC">Thank You Ali and Posse for that great</font>

1072
00:47:40,900 --> 00:47:43,079
presentation

