1
00:00:00,060 --> 00:00:05,879
good afternoon I<font color="#CCCCCC"> said honored to be here</font>

2
00:00:02,700 --> 00:00:08,550
to present my<font color="#E5E5E5"> work and it's a medication</font>

3
00:00:05,879 --> 00:00:12,059
<font color="#E5E5E5">for</font><font color="#CCCCCC"> Colonel TOC</font><font color="#E5E5E5"> to your abilities and</font>

4
00:00:08,550 --> 00:00:15,000
I'm<font color="#E5E5E5"> min</font><font color="#CCCCCC"> puja</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> Susan from Rutgers</font>

5
00:00:12,059 --> 00:00:19,410
University and my<font color="#CCCCCC"> adviser</font><font color="#E5E5E5"> is a man who</font>

6
00:00:15,000 --> 00:00:21,990
knows<font color="#E5E5E5"> he'll</font><font color="#CCCCCC"> see to you you stand for</font>

7
00:00:19,410 --> 00:00:25,500
<font color="#CCCCCC">temporal check to</font><font color="#E5E5E5"> time OU's I think</font>

8
00:00:21,990 --> 00:00:29,459
maybe<font color="#E5E5E5"> you heard</font><font color="#CCCCCC"> that and it's not a new</font>

9
00:00:25,500 --> 00:00:32,549
availability<font color="#CCCCCC"> it exists properly two</font><font color="#E5E5E5"> or</font>

10
00:00:29,460 --> 00:00:35,190
<font color="#CCCCCC">three</font><font color="#E5E5E5"> decades and it has different many</font>

11
00:00:32,549 --> 00:00:37,530
different forms and the one we're going

12
00:00:35,190 --> 00:00:40,079
to talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> this plantation is</font><font color="#CCCCCC"> the one</font>

13
00:00:37,530 --> 00:00:43,680
that happened in opening system kernels

14
00:00:40,079 --> 00:00:46,590
<font color="#E5E5E5">and sometimes</font><font color="#CCCCCC"> Colonel Tia say to you</font>

15
00:00:43,680 --> 00:00:49,680
also known as double fetches sometimes

16
00:00:46,590 --> 00:00:53,340
<font color="#E5E5E5">with conditions and here are the least</font>

17
00:00:49,680 --> 00:00:56,699
some of the<font color="#CCCCCC"> cities</font><font color="#E5E5E5"> in recent years just</font>

18
00:00:53,340 --> 00:01:03,449
<font color="#E5E5E5">to show that's a</font><font color="#CCCCCC"> realistic kind of real</font>

19
00:00:56,699 --> 00:01:07,460
<font color="#E5E5E5">threat so here's a</font><font color="#CCCCCC"> peaceful kernel code</font>

20
00:01:03,449 --> 00:01:10,080
which has<font color="#CCCCCC"> a kernel TOC to your abilities</font>

21
00:01:07,460 --> 00:01:12,929
<font color="#E5E5E5">like the kernel function</font><font color="#CCCCCC"> take parameters</font>

22
00:01:10,080 --> 00:01:16,170
from user and the parameters<font color="#CCCCCC"> may</font><font color="#E5E5E5"> contain</font>

23
00:01:12,930 --> 00:01:18,840
<font color="#E5E5E5">other pointers that directly point to</font>

24
00:01:16,170 --> 00:01:22,200
user space<font color="#E5E5E5"> so when this function runs it</font>

25
00:01:18,840 --> 00:01:24,630
may reference this pointer and try to

26
00:01:22,200 --> 00:01:27,450
get data from<font color="#CCCCCC"> resource space directly</font>

27
00:01:24,630 --> 00:01:31,890
<font color="#E5E5E5">let's say in</font><font color="#CCCCCC"> cad data FF for the first</font>

28
00:01:27,450 --> 00:01:35,850
time<font color="#E5E5E5"> and it uses</font><font color="#CCCCCC"> data try to</font><font color="#E5E5E5"> allocate</font><font color="#CCCCCC"> a</font>

29
00:01:31,890 --> 00:01:38,549
buffer but meanwhile there could be

30
00:01:35,850 --> 00:01:41,399
attacker that<font color="#E5E5E5"> used other user</font><font color="#CCCCCC"> modes</font>

31
00:01:38,549 --> 00:01:42,450
<font color="#E5E5E5">rights keep changing the data for</font>

32
00:01:41,400 --> 00:01:45,689
example<font color="#CCCCCC"> we changed</font>

33
00:01:42,450 --> 00:01:48,119
FF to 8 FF so you can see it's much

34
00:01:45,689 --> 00:01:50,189
<font color="#CCCCCC">larger but the</font><font color="#E5E5E5"> kernel function</font><font color="#CCCCCC"> doesn't</font>

35
00:01:48,119 --> 00:01:53,130
know that<font color="#CCCCCC"> so the curve function</font><font color="#E5E5E5"> when the</font>

36
00:01:50,189 --> 00:01:56,219
second time it's<font color="#CCCCCC"> reference</font><font color="#E5E5E5"> the pointer</font>

37
00:01:53,130 --> 00:01:59,339
and<font color="#CCCCCC"> the cat data is get a much larger</font>

38
00:01:56,219 --> 00:02:01,710
value and use this value to<font color="#E5E5E5"> copy the</font>

39
00:01:59,340 --> 00:02:05,159
buffer and now we can see<font color="#CCCCCC"> it there will</font>

40
00:02:01,710 --> 00:02:07,048
be a buffer overflow<font color="#E5E5E5"> and that's</font>

41
00:02:05,159 --> 00:02:12,600
basically<font color="#E5E5E5"> how kernel to use ATO works</font>

42
00:02:07,049 --> 00:02:16,310
and we think<font color="#CCCCCC"> about why it happens</font>

43
00:02:12,600 --> 00:02:20,850
I think it's because<font color="#CCCCCC"> curl gets</font><font color="#E5E5E5"> data</font>

44
00:02:16,310 --> 00:02:22,980
directly from user memory<font color="#E5E5E5"> twice and the</font>

45
00:02:20,850 --> 00:02:25,230
user<font color="#E5E5E5"> memory is a shared resource so</font>

46
00:02:22,980 --> 00:02:28,739
there's no mechanism<font color="#E5E5E5"> so when people</font>

47
00:02:25,230 --> 00:02:30,450
always<font color="#E5E5E5"> thread changing those memories</font>

48
00:02:28,740 --> 00:02:32,910
<font color="#E5E5E5">there's no mechanism to inform the</font>

49
00:02:30,450 --> 00:02:36,660
kernel<font color="#CCCCCC"> or other interest rate</font><font color="#E5E5E5"> when that</font>

50
00:02:32,910 --> 00:02:39,480
happens<font color="#E5E5E5"> and the right way to do it</font>

51
00:02:36,660 --> 00:02:42,600
especially for<font color="#E5E5E5"> Windows kernel is to</font>

52
00:02:39,480 --> 00:02:45,390
capture<font color="#CCCCCC"> the value means</font><font color="#E5E5E5"> copy the value</font>

53
00:02:42,600 --> 00:02:46,859
and makes<font color="#E5E5E5"> its own kernel copy so no</font>

54
00:02:45,390 --> 00:02:49,799
matter how<font color="#E5E5E5"> many kernel functions need to</font>

55
00:02:46,860 --> 00:02:52,680
use this value needs to use this value

56
00:02:49,800 --> 00:02:56,460
it only uses of own kernel copy so it

57
00:02:52,680 --> 00:02:58,560
won't be changed by<font color="#E5E5E5"> others read but</font>

58
00:02:56,460 --> 00:03:01,920
unfortunately not all codes do that some

59
00:02:58,560 --> 00:03:03,750
some code may forget<font color="#E5E5E5"> that and we know</font>

60
00:03:01,920 --> 00:03:09,200
that's<font color="#E5E5E5"> why we try</font><font color="#CCCCCC"> to come with a</font>

61
00:03:03,750 --> 00:03:12,240
medication<font color="#E5E5E5"> and our idea is very simple</font>

62
00:03:09,200 --> 00:03:15,149
<font color="#E5E5E5">basically anything kernel touches should</font>

63
00:03:12,240 --> 00:03:18,540
stay the same so let's say<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> one's</font>

64
00:03:15,150 --> 00:03:21,120
<font color="#CCCCCC">user thread initiated a Cisco with</font>

65
00:03:18,540 --> 00:03:25,079
parameters passed in and those

66
00:03:21,120 --> 00:03:27,180
parameters<font color="#E5E5E5"> contain other pointers so</font>

67
00:03:25,080 --> 00:03:31,260
when the kernel rieflin those pointers

68
00:03:27,180 --> 00:03:33,930
<font color="#E5E5E5">and access user page and we think this</font>

69
00:03:31,260 --> 00:03:36,810
page should be protected<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it should</font>

70
00:03:33,930 --> 00:03:43,410
not<font color="#E5E5E5"> allow other users rights to override</font>

71
00:03:36,810 --> 00:03:47,490
it but the problem is how do we<font color="#E5E5E5"> know</font>

72
00:03:43,410 --> 00:03:50,070
when the kernel access user memory there

73
00:03:47,490 --> 00:03:54,330
may be some solutions like for example

74
00:03:50,070 --> 00:03:56,730
<font color="#E5E5E5">people use page what points that's</font>

75
00:03:54,330 --> 00:03:58,500
<font color="#CCCCCC">Hardware break a pointer to set the</font>

76
00:03:56,730 --> 00:04:00,149
little traps<font color="#E5E5E5"> in the memory space so</font>

77
00:03:58,500 --> 00:04:02,580
<font color="#CCCCCC">wherever it's kernel</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> triggered</font><font color="#E5E5E5"> all</font>

78
00:04:00,150 --> 00:04:07,670
the trips<font color="#E5E5E5"> you kind of pay default and</font>

79
00:04:02,580 --> 00:04:10,110
<font color="#E5E5E5">correct no or there may be you can use</font>

80
00:04:07,670 --> 00:04:14,820
<font color="#CCCCCC">transactional Hardware transactional</font>

81
00:04:10,110 --> 00:04:18,810
memory is that you can keep dating

82
00:04:14,820 --> 00:04:20,640
charity<font color="#E5E5E5"> but I think both Hardware</font>

83
00:04:18,810 --> 00:04:22,410
transactional memory and data<font color="#E5E5E5"> world</font>

84
00:04:20,640 --> 00:04:25,729
points are quite<font color="#CCCCCC"> limited hardware</font>

85
00:04:22,410 --> 00:04:30,670
resource<font color="#CCCCCC"> for example we can out</font>

86
00:04:25,730 --> 00:04:33,380
through the whole<font color="#E5E5E5"> Cisco into a one giant</font>

87
00:04:30,670 --> 00:04:36,020
transactional operation and for the

88
00:04:33,380 --> 00:04:40,460
<font color="#CCCCCC">taste</font><font color="#E5E5E5"> watch points</font><font color="#CCCCCC"> basically you</font><font color="#E5E5E5"> only</font>

89
00:04:36,020 --> 00:04:42,169
have four of them for each<font color="#E5E5E5"> core so we</font>

90
00:04:40,460 --> 00:04:45,169
notice there's a harder feature from

91
00:04:42,170 --> 00:04:48,880
Intel it's called<font color="#CCCCCC"> supervisor</font><font color="#E5E5E5"> remote</font>

92
00:04:45,170 --> 00:04:50,960
access prevention and this feature<font color="#E5E5E5"> does</font>

93
00:04:48,880 --> 00:04:54,590
exactly<font color="#E5E5E5"> what</font><font color="#CCCCCC"> we need</font>

94
00:04:50,960 --> 00:04:59,060
so basically what<font color="#CCCCCC"> kernel access user</font>

95
00:04:54,590 --> 00:05:02,900
pages each trigger page faults and so we

96
00:04:59,060 --> 00:05:05,630
know things happens<font color="#E5E5E5"> and to be able it's</font>

97
00:05:02,900 --> 00:05:08,960
also very easy very<font color="#CCCCCC"> simple it</font><font color="#E5E5E5"> just need</font>

98
00:05:05,630 --> 00:05:12,800
<font color="#E5E5E5">to set as</font><font color="#CCCCCC"> a maybe bit in</font><font color="#E5E5E5"> there are four</font>

99
00:05:08,960 --> 00:05:15,590
<font color="#CCCCCC">registers</font><font color="#E5E5E5"> and you also can disable this</font>

100
00:05:12,800 --> 00:05:21,380
feature<font color="#E5E5E5"> temporarily by city setting a</font>

101
00:05:15,590 --> 00:05:23,030
<font color="#E5E5E5">snippet in</font><font color="#CCCCCC"> e-flat registers this feature</font>

102
00:05:21,380 --> 00:05:26,960
already<font color="#E5E5E5"> been the up to the</font><font color="#CCCCCC"> lead colonel</font>

103
00:05:23,030 --> 00:05:30,229
<font color="#E5E5E5">so</font><font color="#CCCCCC"> why</font><font color="#E5E5E5"> were little colonel want to</font><font color="#CCCCCC"> gets</font>

104
00:05:26,960 --> 00:05:32,840
us to use the remote memory<font color="#E5E5E5"> you need to</font>

105
00:05:30,230 --> 00:05:35,240
go through those<font color="#CCCCCC"> two</font><font color="#E5E5E5"> gateway functions</font>

106
00:05:32,840 --> 00:05:38,200
<font color="#E5E5E5">those who are copy to user and copy from</font>

107
00:05:35,240 --> 00:05:43,070
user and within<font color="#CCCCCC"> those two functions</font>

108
00:05:38,200 --> 00:05:45,080
<font color="#CCCCCC">Isom AP</font><font color="#E5E5E5"> is temporarily disabled so other</font>

109
00:05:43,070 --> 00:05:47,710
<font color="#CCCCCC">than that</font><font color="#E5E5E5"> if the colonel try to access</font>

110
00:05:45,080 --> 00:05:49,640
user<font color="#E5E5E5"> memory it will trigger</font><font color="#CCCCCC"> pager falls</font>

111
00:05:47,710 --> 00:05:51,799
in this<font color="#CCCCCC"> practice icalled</font>

112
00:05:49,640 --> 00:05:54,200
<font color="#CCCCCC">i some AP exception but actually as a</font>

113
00:05:51,800 --> 00:05:58,670
maybe exception is one type of page

114
00:05:54,200 --> 00:06:01,070
fault so even though linux<font color="#E5E5E5"> top as a</font>

115
00:05:58,670 --> 00:06:03,110
maybe<font color="#E5E5E5"> that means it don't have</font><font color="#CCCCCC"> colonel</font>

116
00:06:01,070 --> 00:06:06,380
<font color="#E5E5E5">your city or your abilities because</font>

117
00:06:03,110 --> 00:06:08,090
<font color="#CCCCCC">parish programmers may for example use</font>

118
00:06:06,380 --> 00:06:11,540
copy from user twice for the same

119
00:06:08,090 --> 00:06:17,960
variable<font color="#CCCCCC"> so this problem</font><font color="#E5E5E5"> still exists in</font>

120
00:06:11,540 --> 00:06:22,760
linux kernel but for us<font color="#E5E5E5"> we want to</font>

121
00:06:17,960 --> 00:06:24,500
<font color="#E5E5E5">leverage this feature differently so</font>

122
00:06:22,760 --> 00:06:27,620
when the kernel memory<font color="#E5E5E5"> the kernel code</font>

123
00:06:24,500 --> 00:06:30,730
<font color="#E5E5E5">access user memory of trigger page</font>

124
00:06:27,620 --> 00:06:34,250
faults and we<font color="#CCCCCC"> handles page faults</font>

125
00:06:30,730 --> 00:06:37,670
instead of<font color="#CCCCCC"> crushing</font><font color="#E5E5E5"> the kernel we want</font>

126
00:06:34,250 --> 00:06:38,729
to put the page into kernel space by

127
00:06:37,670 --> 00:06:40,830
setting

128
00:06:38,729 --> 00:06:44,159
<font color="#CCCCCC">user supplies repeat in the</font>

129
00:06:40,830 --> 00:06:47,210
corresponding PD tables PD entry so

130
00:06:44,159 --> 00:06:50,789
doing that<font color="#CCCCCC"> we have it has two</font><font color="#E5E5E5"> benefits</font>

131
00:06:47,210 --> 00:06:53,370
what is this page is protected from all

132
00:06:50,789 --> 00:06:55,860
other<font color="#E5E5E5"> users stress because in the kernel</font>

133
00:06:53,370 --> 00:07:00,289
space now so no other<font color="#E5E5E5"> interest rate can</font>

134
00:06:55,860 --> 00:07:04,050
override a kernel page and the second is

135
00:07:00,289 --> 00:07:07,949
<font color="#E5E5E5">by</font><font color="#CCCCCC"> doing that we</font><font color="#E5E5E5"> can satisfy the current</font>

136
00:07:04,050 --> 00:07:10,680
this<font color="#CCCCCC"> item an</font><font color="#E5E5E5"> AP paid fault so when we</font>

137
00:07:07,949 --> 00:07:13,229
react<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the fourteen instruction</font><font color="#E5E5E5"> it</font>

138
00:07:10,680 --> 00:07:15,749
won't be trigger again because it's no

139
00:07:13,229 --> 00:07:18,419
<font color="#CCCCCC">longer a kernel code the user user</font><font color="#E5E5E5"> it's</font>

140
00:07:15,749 --> 00:07:25,349
no longer a kernel code<font color="#E5E5E5"> access user</font>

141
00:07:18,419 --> 00:07:28,229
memory<font color="#CCCCCC"> anymore so what if other threads</font>

142
00:07:25,349 --> 00:07:31,080
really<font color="#E5E5E5"> need to read the same page</font><font color="#CCCCCC"> and</font>

143
00:07:28,229 --> 00:07:34,649
what we do is really<font color="#E5E5E5"> simple</font><font color="#CCCCCC"> we just</font><font color="#E5E5E5"> put</font>

144
00:07:31,080 --> 00:07:38,818
this page back again but<font color="#E5E5E5"> with used a bit</font>

145
00:07:34,649 --> 00:07:41,339
but with<font color="#E5E5E5"> read-only probe it because is</font>

146
00:07:38,819 --> 00:07:43,860
<font color="#CCCCCC">useless right access a kernel page this</font>

147
00:07:41,339 --> 00:07:46,020
<font color="#CCCCCC">time</font><font color="#E5E5E5"> it will also trigger a page fault</font>

148
00:07:43,860 --> 00:07:50,879
<font color="#CCCCCC">and</font><font color="#E5E5E5"> we handle set page fault and written</font>

149
00:07:46,020 --> 00:07:53,279
<font color="#E5E5E5">to this so to tune the whole time from</font>

150
00:07:50,879 --> 00:07:56,300
<font color="#E5E5E5">the first time</font><font color="#CCCCCC"> I Cisco refresh</font><font color="#E5E5E5"> the user</font>

151
00:07:53,279 --> 00:07:59,279
page and until the current Cisco ends

152
00:07:56,300 --> 00:08:01,770
the page is<font color="#E5E5E5"> being protected</font><font color="#CCCCCC"> either by</font>

153
00:07:59,279 --> 00:08:03,389
putting<font color="#CCCCCC"> into Carosa base or putting in</font>

154
00:08:01,770 --> 00:08:06,508
users to base with the reader<font color="#E5E5E5"> only</font>

155
00:08:03,389 --> 00:08:08,180
<font color="#CCCCCC">permit read-only permit</font><font color="#E5E5E5"> so the whole</font>

156
00:08:06,509 --> 00:08:16,110
<font color="#E5E5E5">time we</font><font color="#CCCCCC"> protect this</font><font color="#E5E5E5"> page from other</font>

157
00:08:08,180 --> 00:08:19,770
thread<font color="#E5E5E5"> overrated until now the</font>

158
00:08:16,110 --> 00:08:23,009
<font color="#CCCCCC">implementation is</font><font color="#E5E5E5"> very simple we just</font>

159
00:08:19,770 --> 00:08:26,930
need to hook page fault handler<font color="#E5E5E5"> and most</font>

160
00:08:23,009 --> 00:08:29,550
work are<font color="#CCCCCC"> done there and we also need</font><font color="#E5E5E5"> to</font>

161
00:08:26,930 --> 00:08:33,299
<font color="#E5E5E5">hook</font><font color="#CCCCCC"> up one</font><font color="#E5E5E5"> more windows internal</font>

162
00:08:29,550 --> 00:08:40,680
<font color="#E5E5E5">function</font><font color="#CCCCCC"> that's ki</font><font color="#E5E5E5"> Cisco exit just to</font>

163
00:08:33,299 --> 00:08:43,919
let us<font color="#CCCCCC"> know when the cisco ends so in</font>

164
00:08:40,679 --> 00:08:46,800
page fault handler<font color="#CCCCCC"> we only handle</font><font color="#E5E5E5"> the</font>

165
00:08:43,919 --> 00:08:48,720
exceptions such related to<font color="#CCCCCC"> Assam ap or</font>

166
00:08:46,800 --> 00:08:51,870
others were just<font color="#CCCCCC"> pass through OS kernel</font>

167
00:08:48,720 --> 00:08:53,010
and in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> handle</font><font color="#E5E5E5"> can get some useful</font>

168
00:08:51,870 --> 00:08:56,400
<font color="#CCCCCC">year</font><font color="#E5E5E5"> for me</font>

169
00:08:53,010 --> 00:08:59,610
from stack like we cast page<font color="#CCCCCC"> fold error</font>

170
00:08:56,400 --> 00:09:02,640
code<font color="#E5E5E5"> and we got some registers image and</font>

171
00:08:59,610 --> 00:09:06,450
we can<font color="#E5E5E5"> get current page directory base</font>

172
00:09:02,640 --> 00:09:09,960
from<font color="#CCCCCC"> cs3 that he also tells</font><font color="#E5E5E5"> us who is</font>

173
00:09:06,450 --> 00:09:15,930
<font color="#E5E5E5">the current the process and we get 14</font>

174
00:09:09,960 --> 00:09:18,960
water<font color="#E5E5E5"> address from CR</font><font color="#CCCCCC"> 2 but problem is</font>

175
00:09:15,930 --> 00:09:23,120
we may<font color="#E5E5E5"> be able to</font><font color="#CCCCCC"> the feature</font><font color="#E5E5E5"> there will</font>

176
00:09:18,960 --> 00:09:27,720
be huge amount of exceptions because I

177
00:09:23,120 --> 00:09:29,550
some<font color="#E5E5E5"> ap is a system-wide feature when</font>

178
00:09:27,720 --> 00:09:31,260
you enable<font color="#E5E5E5"> it you be able</font><font color="#CCCCCC"> for the whole</font>

179
00:09:29,550 --> 00:09:35,400
person<font color="#CCCCCC"> the whole system</font><font color="#E5E5E5"> every</font><font color="#CCCCCC"> process</font>

180
00:09:31,260 --> 00:09:39,180
and<font color="#E5E5E5"> Windows kernel didn't adopt this</font>

181
00:09:35,400 --> 00:09:43,020
feature yet<font color="#E5E5E5"> so it gets user data you use</font>

182
00:09:39,180 --> 00:09:45,689
<font color="#E5E5E5">his own way that's directly</font><font color="#CCCCCC"> CAD data so</font>

183
00:09:43,020 --> 00:09:49,650
every time it<font color="#E5E5E5"> does that it trigger page</font>

184
00:09:45,690 --> 00:09:53,400
faults<font color="#E5E5E5"> and a lot of system</font><font color="#CCCCCC"> code has user</font>

185
00:09:49,650 --> 00:09:56,850
parameters and perhaps<font color="#E5E5E5"> there's some</font>

186
00:09:53,400 --> 00:10:00,750
reason behind this<font color="#E5E5E5"> is there may be some</font>

187
00:09:56,850 --> 00:10:03,480
kernel modules such<font color="#CCCCCC"> as when 32k I think</font>

188
00:10:00,750 --> 00:10:06,840
they may store some data in the user

189
00:10:03,480 --> 00:10:11,850
memory<font color="#CCCCCC"> in the user part so that's</font><font color="#E5E5E5"> why</font>

190
00:10:06,840 --> 00:10:17,070
there<font color="#CCCCCC"> are so many</font><font color="#E5E5E5"> exceptions and what we</font>

191
00:10:11,850 --> 00:10:21,930
have is windows debugger<font color="#CCCCCC"> and when the</font>

192
00:10:17,070 --> 00:10:24,960
debugger<font color="#CCCCCC"> when dbg is a software debugger</font>

193
00:10:21,930 --> 00:10:28,560
<font color="#E5E5E5">so when i use windows debugger to debug</font>

194
00:10:24,960 --> 00:10:31,110
a low level system<font color="#E5E5E5"> mechanism such as</font>

195
00:10:28,560 --> 00:10:33,000
page fault sometimes<font color="#CCCCCC"> in</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> very</font>

196
00:10:31,110 --> 00:10:36,090
<font color="#CCCCCC">convenient</font><font color="#E5E5E5"> because I think the debugger</font>

197
00:10:33,000 --> 00:10:39,930
itself may further figure<font color="#E5E5E5"> pitfalls but</font>

198
00:10:36,090 --> 00:10:43,160
that easily get us into a<font color="#CCCCCC"> Tad's loop so</font>

199
00:10:39,930 --> 00:10:46,550
we<font color="#CCCCCC"> need to heavily reduce exceptions to</font>

200
00:10:43,160 --> 00:10:50,370
let us be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to debug the whole thing</font>

201
00:10:46,550 --> 00:10:54,089
and we want to debug one process at time

202
00:10:50,370 --> 00:10:55,350
<font color="#E5E5E5">not so the whole system altogether</font><font color="#CCCCCC"> so I</font>

203
00:10:54,090 --> 00:10:57,710
think properly<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can use</font>

204
00:10:55,350 --> 00:11:03,630
virtualizations<font color="#CCCCCC"> tooken find this feature</font>

205
00:10:57,710 --> 00:11:06,440
within one or several process so we

206
00:11:03,630 --> 00:11:12,340
implement<font color="#E5E5E5"> a very simple help either</font>

207
00:11:06,440 --> 00:11:15,770
and but basically it loaded I say

208
00:11:12,340 --> 00:11:17,990
<font color="#CCCCCC">Windows kernel driver</font><font color="#E5E5E5"> and it doesn't it</font>

209
00:11:15,770 --> 00:11:21,260
doesn't ameliorate any<font color="#E5E5E5"> devices</font>

210
00:11:17,990 --> 00:11:23,330
so when<font color="#CCCCCC"> intervals is just lift the whole</font>

211
00:11:21,260 --> 00:11:27,890
opening<font color="#E5E5E5"> system up into</font><font color="#CCCCCC"> guest mode and</font>

212
00:11:23,330 --> 00:11:31,130
<font color="#E5E5E5">his self he intercept all the way a max</font>

213
00:11:27,890 --> 00:11:36,970
events underneath<font color="#E5E5E5"> as the hypervisor</font><font color="#CCCCCC"> with</font>

214
00:11:31,130 --> 00:11:40,400
a more higher privilege<font color="#E5E5E5"> and our goal is</font>

215
00:11:36,970 --> 00:11:43,070
<font color="#CCCCCC">where only we want only</font><font color="#E5E5E5"> said I said</font>

216
00:11:40,400 --> 00:11:48,560
miffy<font color="#CCCCCC"> bid when the CPU runs on the</font>

217
00:11:43,070 --> 00:11:50,630
target process<font color="#E5E5E5"> and here's example we</font>

218
00:11:48,560 --> 00:11:53,810
monitor<font color="#CCCCCC"> process contacts which events</font>

219
00:11:50,630 --> 00:11:57,680
for<font color="#CCCCCC"> us does move away general register</font>

220
00:11:53,810 --> 00:12:04,069
to<font color="#E5E5E5"> see</font><font color="#CCCCCC"> our three register so when that</font>

221
00:11:57,680 --> 00:12:05,660
happens it will cost way I'm exit and<font color="#E5E5E5"> it</font>

222
00:12:04,070 --> 00:12:09,610
will exit<font color="#E5E5E5"> to the hypervisor and the</font>

223
00:12:05,660 --> 00:12:12,140
hypervisor<font color="#E5E5E5"> was set as</font><font color="#CCCCCC"> 80 bit to 1 and</font>

224
00:12:09,610 --> 00:12:15,440
when hypo eyes go back to<font color="#CCCCCC"> we am again</font>

225
00:12:12,140 --> 00:12:19,670
<font color="#E5E5E5">the data will be flashed back to</font><font color="#CCCCCC"> the</font>

226
00:12:15,440 --> 00:12:22,730
real processor and so for the target

227
00:12:19,670 --> 00:12:27,920
<font color="#CCCCCC">process it feels that</font><font color="#E5E5E5"> I some AP is</font>

228
00:12:22,730 --> 00:12:30,890
already been enabled and when the target

229
00:12:27,920 --> 00:12:35,689
<font color="#CCCCCC">process which out we do the opposite</font>

230
00:12:30,890 --> 00:12:39,890
thing which just<font color="#E5E5E5"> said I</font><font color="#CCCCCC"> submitted it to</font>

231
00:12:35,690 --> 00:12:41,480
<font color="#CCCCCC">zero</font><font color="#E5E5E5"> in those related fields of</font><font color="#CCCCCC"> BMC s</font>

232
00:12:39,890 --> 00:12:45,410
that's what<font color="#CCCCCC"> emerges in control structure</font>

233
00:12:41,480 --> 00:12:48,530
and it the same when<font color="#CCCCCC"> flag when go back</font>

234
00:12:45,410 --> 00:12:51,530
to<font color="#CCCCCC"> VM</font><font color="#E5E5E5"> flashed it back so for other</font>

235
00:12:48,530 --> 00:12:55,520
process they think I so many P is not

236
00:12:51,530 --> 00:12:58,250
yet<font color="#CCCCCC"> bought but by doing this we can</font>

237
00:12:55,520 --> 00:13:01,960
<font color="#E5E5E5">allow as I may be paid</font><font color="#CCCCCC"> fault</font>

238
00:12:58,250 --> 00:13:01,960
<font color="#CCCCCC">only happened inside the target process</font>

239
00:13:05,110 --> 00:13:11,320
and we need to try to solve this thing

240
00:13:09,339 --> 00:13:14,769
so<font color="#E5E5E5"> we protected the page already but</font>

241
00:13:11,320 --> 00:13:17,100
what<font color="#E5E5E5"> if some users</font><font color="#CCCCCC"> read</font><font color="#E5E5E5"> won't really</font>

242
00:13:14,769 --> 00:13:20,230
<font color="#E5E5E5">want to write this particular page</font>

243
00:13:17,100 --> 00:13:24,100
<font color="#E5E5E5">because it could be</font><font color="#CCCCCC"> either it could</font><font color="#E5E5E5"> be</font>

244
00:13:20,230 --> 00:13:27,850
global<font color="#E5E5E5"> variable in</font><font color="#CCCCCC"> that page or we know</font>

245
00:13:24,100 --> 00:13:29,950
thread they share<font color="#CCCCCC"> heap memories</font><font color="#E5E5E5"> so we</font>

246
00:13:27,850 --> 00:13:33,579
think<font color="#E5E5E5"> about</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> to solve this problem</font><font color="#CCCCCC"> so</font>

247
00:13:29,950 --> 00:13:36,579
<font color="#E5E5E5">the red conflict so at the beginning</font><font color="#CCCCCC"> we</font>

248
00:13:33,579 --> 00:13:39,189
<font color="#CCCCCC">think we</font><font color="#E5E5E5"> probably can implement a thread</font>

249
00:13:36,579 --> 00:13:41,050
<font color="#E5E5E5">level copy-on-write mechanism so</font><font color="#CCCCCC"> what</font>

250
00:13:39,190 --> 00:13:44,709
others thread<font color="#E5E5E5"> try to access this</font>

251
00:13:41,050 --> 00:13:51,670
protected page<font color="#CCCCCC"> we split page tables and</font>

252
00:13:44,709 --> 00:13:55,089
give them<font color="#E5E5E5"> actual physical page but it</font>

253
00:13:51,670 --> 00:13:58,300
has a problem<font color="#E5E5E5"> because we need to figure</font>

254
00:13:55,089 --> 00:14:02,200
out when we are<font color="#CCCCCC"> going to merge those two</font>

255
00:13:58,300 --> 00:14:04,899
physical<font color="#CCCCCC"> pages back and we have to</font>

256
00:14:02,200 --> 00:14:08,610
<font color="#E5E5E5">decide which copy we're going to use so</font>

257
00:14:04,899 --> 00:14:12,519
eventually we go<font color="#E5E5E5"> give up that idea and</font>

258
00:14:08,610 --> 00:14:16,060
we come<font color="#E5E5E5"> up with</font><font color="#CCCCCC"> a much easier idea that</font>

259
00:14:12,519 --> 00:14:19,750
is when<font color="#E5E5E5"> other users</font><font color="#CCCCCC"> thread</font><font color="#E5E5E5"> try to rest</font>

260
00:14:16,060 --> 00:14:23,739
<font color="#E5E5E5">the user protected page we simply let</font>

261
00:14:19,750 --> 00:14:27,180
other users thread<font color="#E5E5E5"> wait there until the</font>

262
00:14:23,740 --> 00:14:30,250
current<font color="#CCCCCC"> Cisco ends and damage the page</font>

263
00:14:27,180 --> 00:14:33,370
what that means we have to let us<font color="#E5E5E5"> read</font>

264
00:14:30,250 --> 00:14:35,890
looping inside the page fault handler<font color="#E5E5E5"> so</font>

265
00:14:33,370 --> 00:14:39,670
at<font color="#E5E5E5"> first that doesn't sound very nice</font>

266
00:14:35,890 --> 00:14:42,610
because<font color="#E5E5E5"> it's page fault handler ways we</font>

267
00:14:39,670 --> 00:14:45,610
should do things quick and<font color="#E5E5E5"> get out for</font>

268
00:14:42,610 --> 00:14:51,640
<font color="#CCCCCC">sensor I read through the manual</font><font color="#E5E5E5"> it</font>

269
00:14:45,610 --> 00:14:54,100
seems quite doable because<font color="#CCCCCC"> interrupts</font>

270
00:14:51,640 --> 00:14:57,910
this clever table contains two type<font color="#CCCCCC"> of</font>

271
00:14:54,100 --> 00:15:00,730
things one<font color="#E5E5E5"> is</font><font color="#CCCCCC"> interrupts</font><font color="#E5E5E5"> in the other is</font>

272
00:14:57,910 --> 00:15:04,589
exception and<font color="#CCCCCC"> interrupts basically</font>

273
00:15:00,730 --> 00:15:08,079
caused by external devices and exception

274
00:15:04,589 --> 00:15:12,190
caused<font color="#CCCCCC"> by the processor itself</font><font color="#E5E5E5"> and page</font>

275
00:15:08,079 --> 00:15:15,189
saw<font color="#E5E5E5"> a page fault is an exception so when</font>

276
00:15:12,190 --> 00:15:16,540
interrupts happens the wise will bring

277
00:15:15,190 --> 00:15:21,010
is

278
00:15:16,540 --> 00:15:24,280
priority in to a very high level<font color="#CCCCCC"> so for</font>

279
00:15:21,010 --> 00:15:27,220
Windows kernel that's<font color="#E5E5E5"> irq out so in a</font>

280
00:15:24,280 --> 00:15:29,920
page in the<font color="#E5E5E5"> interrupt situation we need</font>

281
00:15:27,220 --> 00:15:34,600
to do things quick and<font color="#E5E5E5"> get out part of</font>

282
00:15:29,920 --> 00:15:38,589
but for exception the<font color="#CCCCCC"> IR</font><font color="#E5E5E5"> cure depends on</font>

283
00:15:34,600 --> 00:15:43,000
the context<font color="#E5E5E5"> so in our case is the</font><font color="#CCCCCC"> users</font>

284
00:15:38,590 --> 00:15:46,540
<font color="#CCCCCC">read trigger this page fault</font><font color="#E5E5E5"> so the</font>

285
00:15:43,000 --> 00:15:48,340
alcohol<font color="#E5E5E5"> will be at passive level and we</font>

286
00:15:46,540 --> 00:15:51,310
know at passive level who can call a lot

287
00:15:48,340 --> 00:15:55,150
<font color="#CCCCCC">Windows kernel api's so we choose this</font>

288
00:15:51,310 --> 00:15:57,819
ke delay<font color="#CCCCCC"> askew threat there's a kernel</font>

289
00:15:55,150 --> 00:16:00,430
version sleep function<font color="#CCCCCC"> and we</font><font color="#E5E5E5"> can let</font>

290
00:15:57,820 --> 00:16:04,900
<font color="#E5E5E5">the thread sleep in the page fault</font>

291
00:16:00,430 --> 00:16:10,900
<font color="#E5E5E5">handler and let us rescheduling so now</font>

292
00:16:04,900 --> 00:16:13,150
that sounds not too horrible and we see

293
00:16:10,900 --> 00:16:15,790
<font color="#CCCCCC">this</font><font color="#E5E5E5"> picture</font><font color="#CCCCCC"> again those pages protected</font>

294
00:16:13,150 --> 00:16:20,199
<font color="#E5E5E5">and when a user</font><font color="#CCCCCC"> sir I try to read this</font>

295
00:16:15,790 --> 00:16:23,560
page in the<font color="#CCCCCC"> page fault handler</font><font color="#E5E5E5"> it will</font>

296
00:16:20,200 --> 00:16:27,970
sleep for<font color="#E5E5E5"> several milliseconds</font><font color="#CCCCCC"> wake up</font>

297
00:16:23,560 --> 00:16:30,579
and checked permit if the<font color="#CCCCCC"> kernel</font><font color="#E5E5E5"> Cisco</font>

298
00:16:27,970 --> 00:16:33,730
done with the page and let's page go

299
00:16:30,580 --> 00:16:37,410
then the thread can react killed the

300
00:16:33,730 --> 00:16:41,050
<font color="#E5E5E5">faulting instruction and do it</font><font color="#CCCCCC"> twist a</font>

301
00:16:37,410 --> 00:16:46,300
<font color="#E5E5E5">if not it will</font><font color="#CCCCCC"> go back to sleep</font><font color="#E5E5E5"> and try</font>

302
00:16:41,050 --> 00:16:48,729
several times and if no luck<font color="#E5E5E5"> either all</font>

303
00:16:46,300 --> 00:16:51,670
<font color="#E5E5E5">will just return access violation to</font>

304
00:16:48,730 --> 00:16:54,510
terminate<font color="#CCCCCC"> this thread in order to avoid</font>

305
00:16:51,670 --> 00:16:54,510
any deadlock

306
00:16:57,390 --> 00:17:03,580
here are some implementation details<font color="#E5E5E5"> I</font>

307
00:17:01,720 --> 00:17:06,699
think<font color="#CCCCCC"> actually the mention here because</font>

308
00:17:03,580 --> 00:17:09,069
<font color="#CCCCCC">our medication based on</font><font color="#E5E5E5"> through the page</font>

309
00:17:06,699 --> 00:17:11,920
into<font color="#E5E5E5"> kernel and user space back on the</font>

310
00:17:09,069 --> 00:17:15,790
force<font color="#E5E5E5"> and basically what we do is modify</font>

311
00:17:11,920 --> 00:17:18,280
the<font color="#E5E5E5"> its corresponding page table entry</font>

312
00:17:15,790 --> 00:17:21,250
<font color="#E5E5E5">so we do that we need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> consider in how</font>

313
00:17:18,280 --> 00:17:23,670
to do it in a multiple processor<font color="#CCCCCC"> system</font>

314
00:17:21,250 --> 00:17:26,980
and we<font color="#E5E5E5"> also need to invalidate</font>

315
00:17:23,670 --> 00:17:29,980
corresponding therapy entries because

316
00:17:26,980 --> 00:17:34,480
every core has its own TLB

317
00:17:29,980 --> 00:17:37,420
and I would do<font color="#E5E5E5"> it in</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> local core we</font>

318
00:17:34,480 --> 00:17:41,140
just issue a instruction but we also

319
00:17:37,420 --> 00:17:43,660
need<font color="#CCCCCC"> to send</font><font color="#E5E5E5"> a inter processor it's</font>

320
00:17:41,140 --> 00:17:47,770
rabbit<font color="#CCCCCC"> interrupts</font><font color="#E5E5E5"> to all other course</font>

321
00:17:43,660 --> 00:17:50,560
<font color="#E5E5E5">and but in this case I took we took a</font>

322
00:17:47,770 --> 00:17:53,200
<font color="#E5E5E5">shortcut but just go</font><font color="#CCCCCC"> in those internal</font>

323
00:17:50,560 --> 00:17:53,620
functions as ke<font color="#CCCCCC"> flexing OTB to do that</font>

324
00:17:53,200 --> 00:17:58,030
<font color="#E5E5E5">for us</font>

325
00:17:53,620 --> 00:18:00,459
and it works well<font color="#E5E5E5"> actually before this</font>

326
00:17:58,030 --> 00:18:02,710
<font color="#E5E5E5">presentation I</font><font color="#CCCCCC"> think I properly should</font>

327
00:18:00,460 --> 00:18:05,410
check the manual more and try to

328
00:18:02,710 --> 00:18:07,900
implement<font color="#E5E5E5"> the whole IP I think but I</font>

329
00:18:05,410 --> 00:18:14,110
<font color="#E5E5E5">just</font><font color="#CCCCCC"> spent too much time preparing</font><font color="#E5E5E5"> this</font>

330
00:18:07,900 --> 00:18:17,230
slice<font color="#E5E5E5"> and there are another thing we</font>

331
00:18:14,110 --> 00:18:20,260
need<font color="#CCCCCC"> to set interrupt flag in</font><font color="#E5E5E5"> the page</font>

332
00:18:17,230 --> 00:18:23,290
fault handler<font color="#E5E5E5"> because</font><font color="#CCCCCC"> it is</font><font color="#E5E5E5"> very</font>

333
00:18:20,260 --> 00:18:26,400
<font color="#CCCCCC">interesting and confusing concept page</font>

334
00:18:23,290 --> 00:18:30,040
fault<font color="#E5E5E5"> is an exception but it's also</font>

335
00:18:26,400 --> 00:18:31,240
implement<font color="#CCCCCC"> sulu an interrupt gate</font><font color="#E5E5E5"> and we</font>

336
00:18:30,040 --> 00:18:33,940
know<font color="#CCCCCC"> there for Intel there are</font>

337
00:18:31,240 --> 00:18:37,870
interrupted trap gate and<font color="#CCCCCC"> task aids</font>

338
00:18:33,940 --> 00:18:41,170
<font color="#CCCCCC">colgate but basically interrupt case</font>

339
00:18:37,870 --> 00:18:43,719
means when page fault happens the

340
00:18:41,170 --> 00:18:46,450
<font color="#E5E5E5">processor will automatically clear the</font>

341
00:18:43,720 --> 00:18:50,560
interrupt enable flag in the<font color="#E5E5E5"> if flags</font>

342
00:18:46,450 --> 00:18:54,820
register and set it<font color="#E5E5E5"> back when the page</font>

343
00:18:50,560 --> 00:18:58,840
fault<font color="#E5E5E5"> returns but we think the</font><font color="#CCCCCC"> reason we</font>

344
00:18:54,820 --> 00:19:01,270
need<font color="#CCCCCC"> to do that is because our page</font>

345
00:18:58,840 --> 00:19:03,310
fault handler may further trigger more

346
00:19:01,270 --> 00:19:05,410
page fault<font color="#CCCCCC"> like we walk us through the</font>

347
00:19:03,310 --> 00:19:07,750
page tables it may trigger more page

348
00:19:05,410 --> 00:19:10,390
<font color="#CCCCCC">faults</font><font color="#E5E5E5"> and actually I didn't know this</font>

349
00:19:07,750 --> 00:19:12,640
before<font color="#E5E5E5"> it's just after so many crushing</font>

350
00:19:10,390 --> 00:19:15,640
the system and debugger<font color="#CCCCCC"> crash or 3 the</font>

351
00:19:12,640 --> 00:19:21,130
<font color="#E5E5E5">other altogether</font><font color="#CCCCCC"> I just ran out</font><font color="#E5E5E5"> of</font>

352
00:19:15,640 --> 00:19:23,080
option and I think the project is start

353
00:19:21,130 --> 00:19:25,360
already half year<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> already too late</font>

354
00:19:23,080 --> 00:19:29,590
<font color="#E5E5E5">to quit so I just randomly try things</font>

355
00:19:25,360 --> 00:19:32,740
and after<font color="#E5E5E5"> that is flag he</font><font color="#CCCCCC"> solves a lot</font>

356
00:19:29,590 --> 00:19:36,639
of problem and I know I<font color="#E5E5E5"> need to set this</font>

357
00:19:32,740 --> 00:19:40,740
quick and right after I get the<font color="#E5E5E5"> water</font><font color="#CCCCCC"> at</font>

358
00:19:36,640 --> 00:19:40,740
14<font color="#E5E5E5"> what redress from CR to register</font>

359
00:19:41,860 --> 00:19:48,610
here's evaluation<font color="#E5E5E5"> our test bed is a core</font>

360
00:19:45,730 --> 00:19:52,299
Intel Core i5<font color="#E5E5E5"> sixth generation processor</font>

361
00:19:48,610 --> 00:19:56,488
with each volunteer<font color="#E5E5E5"> or chip site and we</font>

362
00:19:52,299 --> 00:20:00,639
use this quite classic<font color="#CCCCCC"> CBE 2008 to 252</font>

363
00:19:56,489 --> 00:20:03,999
<font color="#E5E5E5">portability and we write a little simple</font>

364
00:20:00,639 --> 00:20:06,248
<font color="#E5E5E5">piace code which just trigger the word</font>

365
00:20:03,999 --> 00:20:12,070
melody and<font color="#E5E5E5"> crush</font><font color="#CCCCCC"> the system there's no</font>

366
00:20:06,249 --> 00:20:14,369
payload so that's<font color="#E5E5E5"> one about code and</font>

367
00:20:12,070 --> 00:20:17,918
there are three places in<font color="#E5E5E5"> the code</font>

368
00:20:14,369 --> 00:20:19,509
<font color="#CCCCCC">access the user page actually the circle</font>

369
00:20:17,919 --> 00:20:21,940
<font color="#CCCCCC">true and circle straight plays are</font><font color="#E5E5E5"> the</font>

370
00:20:19,509 --> 00:20:25,179
really the real double fetches<font color="#CCCCCC"> as I</font>

371
00:20:21,940 --> 00:20:29,200
introduced in the C code earlier<font color="#CCCCCC"> but</font>

372
00:20:25,179 --> 00:20:31,720
<font color="#CCCCCC">circle</font><font color="#E5E5E5"> one the first place is</font><font color="#CCCCCC"> it's</font>

373
00:20:29,200 --> 00:20:35,499
verbal<font color="#E5E5E5"> code the first time access user</font>

374
00:20:31,720 --> 00:20:40,359
page so when it acts as a page trigger

375
00:20:35,499 --> 00:20:43,359
page<font color="#E5E5E5"> fault and or my turn that's where</font>

376
00:20:40,359 --> 00:20:47,799
our medication kicks in<font color="#E5E5E5"> we put</font><font color="#CCCCCC"> the page</font>

377
00:20:43,359 --> 00:20:50,199
into kernel<font color="#E5E5E5"> space so your and in our POS</font>

378
00:20:47,799 --> 00:20:52,989
a code we have a tacking thread<font color="#E5E5E5"> looping</font>

379
00:20:50,200 --> 00:20:56,759
there try to modify<font color="#E5E5E5"> the data and then we</font>

380
00:20:52,989 --> 00:21:00,159
<font color="#CCCCCC">blocked in the</font><font color="#E5E5E5"> page fault handler and</font>

381
00:20:56,759 --> 00:21:03,369
until the current<font color="#E5E5E5"> Cisco ends and</font><font color="#CCCCCC"> damage</font>

382
00:21:00,159 --> 00:21:06,669
<font color="#E5E5E5">the page so at this time attacking</font>

383
00:21:03,369 --> 00:21:09,820
thread clear on but it's ready to<font color="#CCCCCC"> late</font>

384
00:21:06,669 --> 00:21:14,230
we already protect that part of whatever

385
00:21:09,820 --> 00:21:18,070
<font color="#E5E5E5">code and here's the evaluation for for</font>

386
00:21:14,230 --> 00:21:21,159
<font color="#E5E5E5">most overhead</font><font color="#CCCCCC"> we are quite lucky to</font><font color="#E5E5E5"> be</font>

387
00:21:18,070 --> 00:21:27,269
able<font color="#E5E5E5"> to run our medications on several</font>

388
00:21:21,159 --> 00:21:29,139
applications and it's quite difficult to

389
00:21:27,269 --> 00:21:31,480
precisely<font color="#E5E5E5"> measure</font><font color="#CCCCCC"> the performance</font>

390
00:21:29,139 --> 00:21:36,008
<font color="#E5E5E5">overhead so for example for the Bible</font>

391
00:21:31,480 --> 00:21:37,779
<font color="#E5E5E5">server we just run Apache tool to send</font>

392
00:21:36,009 --> 00:21:44,559
multiple requests and<font color="#E5E5E5"> to counter time</font>

393
00:21:37,779 --> 00:21:47,619
and perform low<font color="#CCCCCC"> had is reasonable among</font>

394
00:21:44,559 --> 00:21:51,480
four or five percent<font color="#CCCCCC"> and I</font><font color="#E5E5E5"> think it</font>

395
00:21:47,619 --> 00:21:51,480
based on how often you cause<font color="#E5E5E5"> it's called</font>

396
00:21:52,130 --> 00:22:04,530
here's our<font color="#E5E5E5"> sad project</font><font color="#CCCCCC"> I think it's keep</font>

397
00:22:00,720 --> 00:22:07,320
the slice<font color="#CCCCCC"> we want to use the same</font>

398
00:22:04,530 --> 00:22:10,280
hardware feature<font color="#E5E5E5"> say</font><font color="#CCCCCC"> Sam not for</font>

399
00:22:07,320 --> 00:22:14,280
medication but try to find more

400
00:22:10,280 --> 00:22:16,860
vulnerabilities of the<font color="#CCCCCC"> same kind</font><font color="#E5E5E5"> so this</font>

401
00:22:14,280 --> 00:22:20,428
project<font color="#CCCCCC"> a</font><font color="#E5E5E5"> trick it's inspired by box</font>

402
00:22:16,860 --> 00:22:22,590
palm identifying and exploring<font color="#CCCCCC"> windows</font>

403
00:22:20,429 --> 00:22:25,559
kernel<font color="#E5E5E5"> rich</font><font color="#CCCCCC"> condition where memory</font>

404
00:22:22,590 --> 00:22:28,139
access patterns<font color="#CCCCCC"> basically this project</font>

405
00:22:25,559 --> 00:22:32,129
<font color="#CCCCCC">your sparks</font><font color="#E5E5E5"> a fully software emulated</font>

406
00:22:28,140 --> 00:22:33,150
<font color="#CCCCCC">adviser to monitoring all kernel all the</font>

407
00:22:32,130 --> 00:22:36,150
memory accesses

408
00:22:33,150 --> 00:22:39,120
but the problem is<font color="#CCCCCC"> parks is very slow</font>

409
00:22:36,150 --> 00:22:42,870
it's a fully software software<font color="#E5E5E5"> immolated</font>

410
00:22:39,120 --> 00:22:46,229
hypervisor<font color="#E5E5E5"> it doesn't have any hardware</font>

411
00:22:42,870 --> 00:22:48,928
<font color="#E5E5E5">assistant virtualization and it</font>

412
00:22:46,230 --> 00:22:52,140
interprets<font color="#E5E5E5"> each instruction it executes</font>

413
00:22:48,929 --> 00:22:54,690
<font color="#E5E5E5">so it's very slow we just want to eat</font>

414
00:22:52,140 --> 00:23:00,780
better<font color="#E5E5E5"> and more fast</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> maybe we can run</font>

415
00:22:54,690 --> 00:23:02,309
more deep<font color="#E5E5E5"> into the application so we</font>

416
00:23:00,780 --> 00:23:04,910
want to use as<font color="#CCCCCC"> I'm ap just for</font>

417
00:23:02,309 --> 00:23:06,990
monitoring and<font color="#E5E5E5"> it will be much easier</font>

418
00:23:04,910 --> 00:23:09,990
<font color="#E5E5E5">when when the kernel trigger</font>

419
00:23:06,990 --> 00:23:12,150
I said<font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> pay defaults will just</font>

420
00:23:09,990 --> 00:23:15,540
<font color="#E5E5E5">record some information and let the</font>

421
00:23:12,150 --> 00:23:16,429
kernel go but still<font color="#CCCCCC"> just also</font><font color="#E5E5E5"> have a</font>

422
00:23:15,540 --> 00:23:21,360
<font color="#E5E5E5">problem</font>

423
00:23:16,429 --> 00:23:24,660
so once<font color="#E5E5E5"> SM ap triggered it's already too</font>

424
00:23:21,360 --> 00:23:25,610
<font color="#CCCCCC">late to disable it by setting s abd</font>

425
00:23:24,660 --> 00:23:29,670
flags

426
00:23:25,610 --> 00:23:32,189
so for us<font color="#E5E5E5"> we have to do the same the old</font>

427
00:23:29,670 --> 00:23:36,840
trick we<font color="#E5E5E5"> have to put a page into</font><font color="#CCCCCC"> kernel</font>

428
00:23:32,190 --> 00:23:42,210
<font color="#CCCCCC">space</font><font color="#E5E5E5"> and satisfy the current page fault</font>

429
00:23:36,840 --> 00:23:42,928
<font color="#E5E5E5">and we also won't release this page</font>

430
00:23:42,210 --> 00:23:46,650
really<font color="#E5E5E5"> soon</font>

431
00:23:42,929 --> 00:23:50,610
because we want<font color="#E5E5E5"> to record all accesses</font>

432
00:23:46,650 --> 00:23:55,590
<font color="#E5E5E5">so</font><font color="#CCCCCC"> we think</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> things as immediately</font>

433
00:23:50,610 --> 00:23:57,629
<font color="#E5E5E5">made single</font><font color="#CCCCCC"> step trap so we can get</font><font color="#E5E5E5"> back</font>

434
00:23:55,590 --> 00:24:00,449
and show right<font color="#E5E5E5"> after the next</font>

435
00:23:57,630 --> 00:24:04,230
instruction but

436
00:24:00,450 --> 00:24:08,130
the problem is<font color="#CCCCCC"> isolated but I thought</font>

437
00:24:04,230 --> 00:24:11,150
what debugger do you set trap flag and

438
00:24:08,130 --> 00:24:13,850
he<font color="#CCCCCC"> also needs</font><font color="#E5E5E5"> to set</font><font color="#CCCCCC"> resume flag</font><font color="#E5E5E5"> and</font>

439
00:24:11,150 --> 00:24:18,900
because you<font color="#E5E5E5"> don't want single</font><font color="#CCCCCC"> stab trap</font>

440
00:24:13,850 --> 00:24:22,860
right<font color="#E5E5E5"> triggered inside your handler but</font>

441
00:24:18,900 --> 00:24:28,740
the problem is that<font color="#CCCCCC"> resume flag only</font>

442
00:24:22,860 --> 00:24:30,899
<font color="#CCCCCC">works in a debugger context handler so</font>

443
00:24:28,740 --> 00:24:33,260
for<font color="#E5E5E5"> us our work is done in page fault</font>

444
00:24:30,900 --> 00:24:38,010
handler<font color="#CCCCCC"> so this resume flag</font><font color="#E5E5E5"> doesn't work</font>

445
00:24:33,260 --> 00:24:42,150
so we have<font color="#E5E5E5"> to do it in a very hard way</font>

446
00:24:38,010 --> 00:24:44,400
<font color="#E5E5E5">we have to set breakpoints manually so</font>

447
00:24:42,150 --> 00:24:48,390
in page fault handler<font color="#CCCCCC"> we just set a</font>

448
00:24:44,400 --> 00:24:51,030
breakpoint<font color="#CCCCCC"> that's a bite SEC into the</font>

449
00:24:48,390 --> 00:24:56,610
next instruction so when that triggers

450
00:24:51,030 --> 00:25:00,990
our hypervisor<font color="#E5E5E5"> will intercept the</font>

451
00:24:56,610 --> 00:25:02,850
breakpoint<font color="#E5E5E5"> trap event and</font><font color="#CCCCCC"> we will read</font>

452
00:25:00,990 --> 00:25:05,730
<font color="#CCCCCC">back to original bite and</font><font color="#E5E5E5"> release</font>

453
00:25:02,850 --> 00:25:11,179
<font color="#E5E5E5">protected page we ask you the fourth</font>

454
00:25:05,730 --> 00:25:14,760
instruction and let the car go again and

455
00:25:11,180 --> 00:25:17,280
that works<font color="#E5E5E5"> and the memory access pattern</font>

456
00:25:14,760 --> 00:25:20,400
we are<font color="#E5E5E5"> looking for is same user mode</font>

457
00:25:17,280 --> 00:25:24,120
<font color="#E5E5E5">water address that being accessed more</font>

458
00:25:20,400 --> 00:25:30,180
<font color="#E5E5E5">than once has to be wasted in one cisco</font>

459
00:25:24,120 --> 00:25:35,820
has to be done by the same thread and<font color="#CCCCCC"> we</font>

460
00:25:30,180 --> 00:25:39,720
get some result there are<font color="#E5E5E5"> two type</font><font color="#CCCCCC"> of</font>

461
00:25:35,820 --> 00:25:42,480
things<font color="#CCCCCC"> away identify some places in the</font>

462
00:25:39,720 --> 00:25:46,050
kernel module that it access user mode

463
00:25:42,480 --> 00:25:48,210
memory<font color="#E5E5E5"> without a track cache block so</font>

464
00:25:46,050 --> 00:25:52,290
that's just minor issue but<font color="#CCCCCC"> that can</font>

465
00:25:48,210 --> 00:25:56,580
lead to local do s attacks and we also

466
00:25:52,290 --> 00:25:59,250
find some<font color="#CCCCCC"> turbo fetches here's the part</font>

467
00:25:56,580 --> 00:26:02,310
of the<font color="#CCCCCC"> log</font><font color="#E5E5E5"> you can you can see there are</font>

468
00:25:59,250 --> 00:26:05,010
those<font color="#E5E5E5"> who are same process same thread</font>

469
00:26:02,310 --> 00:26:08,940
you happy now<font color="#CCCCCC"> to</font><font color="#E5E5E5"> far away access</font><font color="#CCCCCC"> same</font>

470
00:26:05,010 --> 00:26:12,090
water address in this example within one

471
00:26:08,940 --> 00:26:13,800
kernel function<font color="#E5E5E5"> two places as the</font>

472
00:26:12,090 --> 00:26:18,720
<font color="#CCCCCC">similar try the dress</font>

473
00:26:13,800 --> 00:26:21,510
and here's<font color="#CCCCCC"> example two color functions</font>

474
00:26:18,720 --> 00:26:23,010
<font color="#CCCCCC">axis system water address</font><font color="#E5E5E5"> but those two</font>

475
00:26:21,510 --> 00:26:25,350
kernel<font color="#E5E5E5"> functions are very close in the</font>

476
00:26:23,010 --> 00:26:28,740
<font color="#CCCCCC">caustic is the first function called</font>

477
00:26:25,350 --> 00:26:31,500
second function so I think this case

478
00:26:28,740 --> 00:26:33,980
could<font color="#E5E5E5"> be a little bit more difficult for</font>

479
00:26:31,500 --> 00:26:37,790
<font color="#CCCCCC">the shtetl analyzed tools to find out</font>

480
00:26:33,980 --> 00:26:41,180
but those are just table<font color="#E5E5E5"> fetch bugs</font>

481
00:26:37,790 --> 00:26:45,510
I think it's not more ability yet

482
00:26:41,180 --> 00:26:49,100
probably<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of the table fetches are</font>

483
00:26:45,510 --> 00:26:52,879
benign but some could<font color="#E5E5E5"> be turned into a</font>

484
00:26:49,100 --> 00:26:57,480
<font color="#E5E5E5">vulnerability and I think that's our</font>

485
00:26:52,880 --> 00:27:00,720
future work so future work we want<font color="#E5E5E5"> to</font>

486
00:26:57,480 --> 00:27:03,470
further look<font color="#CCCCCC"> into those double fetches</font>

487
00:27:00,720 --> 00:27:06,660
and because I need more knowledge<font color="#E5E5E5"> about</font>

488
00:27:03,470 --> 00:27:09,120
<font color="#CCCCCC">Windows kernel graphic</font><font color="#E5E5E5"> interface how it</font>

489
00:27:06,660 --> 00:27:14,150
works and<font color="#E5E5E5"> how they structure organized</font>

490
00:27:09,120 --> 00:27:17,340
and we also want to because this

491
00:27:14,150 --> 00:27:22,070
<font color="#E5E5E5">medication also also this funding to a</font>

492
00:27:17,340 --> 00:27:26,129
<font color="#E5E5E5">quick quite opening system independent</font>

493
00:27:22,070 --> 00:27:29,100
not exactly but kind<font color="#E5E5E5"> of so we want to</font>

494
00:27:26,130 --> 00:27:31,560
move<font color="#E5E5E5"> our medication and it's</font><font color="#CCCCCC"> falling</font>

495
00:27:29,100 --> 00:27:34,189
<font color="#E5E5E5">tour to</font><font color="#CCCCCC"> linux kernel's</font><font color="#E5E5E5"> and micro s try</font>

496
00:27:31,560 --> 00:27:37,100
to find more more abilities and

497
00:27:34,190 --> 00:27:41,460
currently we are only<font color="#E5E5E5"> years implement a</font>

498
00:27:37,100 --> 00:27:48,480
32-bit so properly<font color="#E5E5E5"> we need</font><font color="#CCCCCC"> to implement</font>

499
00:27:41,460 --> 00:27:50,430
<font color="#E5E5E5">a 64-bit version finally conclusions so</font>

500
00:27:48,480 --> 00:27:52,620
we provide a real-time medication for

501
00:27:50,430 --> 00:27:55,350
<font color="#CCCCCC">Colonel TSA to your vulnerability and</font>

502
00:27:52,620 --> 00:27:59,879
the<font color="#CCCCCC"> performers overhead is</font><font color="#E5E5E5"> not too bad</font>

503
00:27:55,350 --> 00:28:03,740
and we also<font color="#E5E5E5"> provides a tool that</font><font color="#CCCCCC"> montane</font>

504
00:27:59,880 --> 00:28:03,740
<font color="#E5E5E5">kernel to user memory access patterns</font>

505
00:28:05,090 --> 00:28:09,699
that's it

506
00:28:07,220 --> 00:28:21,340
questions

507
00:28:09,700 --> 00:28:24,810
thank you<font color="#CCCCCC"> hey</font><font color="#E5E5E5"> so for the mitigation how</font>

508
00:28:21,340 --> 00:28:28,510
do you protect between threads that

509
00:28:24,810 --> 00:28:33,159
<font color="#CCCCCC">write</font><font color="#E5E5E5"> to some memory location using the</font>

510
00:28:28,510 --> 00:28:38,650
<font color="#E5E5E5">caramel so you can issue a Cisco that</font>

511
00:28:33,160 --> 00:28:41,650
<font color="#CCCCCC">will write to your address that you're</font>

512
00:28:38,650 --> 00:28:45,640
trying<font color="#E5E5E5"> to protect and currently it looks</font>

513
00:28:41,650 --> 00:28:50,590
<font color="#E5E5E5">like</font><font color="#CCCCCC"> you're you</font><font color="#E5E5E5"> have two modes user and</font>

514
00:28:45,640 --> 00:28:52,270
<font color="#CCCCCC">kernel oh yeah you mean</font><font color="#E5E5E5"> what if we</font>

515
00:28:50,590 --> 00:28:55,389
<font color="#E5E5E5">kernel try to access protected page</font>

516
00:28:52,270 --> 00:28:57,370
right yes<font color="#E5E5E5"> right because</font><font color="#CCCCCC"> of the page</font><font color="#E5E5E5"> when</font>

517
00:28:55,390 --> 00:28:59,290
we<font color="#CCCCCC"> first time protected the page will be</font>

518
00:28:57,370 --> 00:29:01,360
put into<font color="#CCCCCC"> a Carosa base somewhere</font><font color="#E5E5E5"> other</font>

519
00:28:59,290 --> 00:29:04,810
<font color="#CCCCCC">Carosa has</font><font color="#E5E5E5"> try to access it that's fine</font>

520
00:29:01,360 --> 00:29:06,610
<font color="#E5E5E5">because it's no</font><font color="#CCCCCC"> longer a because kernel</font>

521
00:29:04,810 --> 00:29:08,980
code which was<font color="#E5E5E5"> it you are in kernel</font>

522
00:29:06,610 --> 00:29:12,280
codes that<font color="#E5E5E5"> won't trigger more abilities</font>

523
00:29:08,980 --> 00:29:14,980
but that's not in but the other<font color="#E5E5E5"> thread</font>

524
00:29:12,280 --> 00:29:18,490
might be controlled by a<font color="#E5E5E5"> user mode that</font>

525
00:29:14,980 --> 00:29:21,780
treats<font color="#E5E5E5"> say from a file especially</font><font color="#CCCCCC"> to</font>

526
00:29:18,490 --> 00:29:25,420
that location instead<font color="#E5E5E5"> of writing</font>

527
00:29:21,780 --> 00:29:27,940
directly to<font color="#CCCCCC"> that location it makes the</font>

528
00:29:25,420 --> 00:29:31,740
kernel<font color="#CCCCCC"> write to that</font><font color="#E5E5E5"> location</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> mean</font>

529
00:29:27,940 --> 00:29:34,840
<font color="#CCCCCC">this</font><font color="#E5E5E5"> user said : Cisco</font><font color="#CCCCCC"> will make some</font>

530
00:29:31,740 --> 00:29:39,340
operation that<font color="#CCCCCC"> letter Carosa read change</font>

531
00:29:34,840 --> 00:29:41,439
that page<font color="#E5E5E5"> yes well I never think about</font>

532
00:29:39,340 --> 00:29:45,500
<font color="#CCCCCC">that</font>

533
00:29:41,440 --> 00:29:49,840
yet<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> how funny the question</font><font color="#E5E5E5"> yeah I</font>

534
00:29:45,500 --> 00:29:52,760
think I should<font color="#E5E5E5"> consume about more yeah</font><font color="#CCCCCC"> I</font>

535
00:29:49,840 --> 00:29:55,370
<font color="#E5E5E5">probably I was think about it and yeah</font>

536
00:29:52,760 --> 00:29:58,280
in that case medication doesn't work

537
00:29:55,370 --> 00:30:02,629
<font color="#E5E5E5">away yeah yeah</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> what I think</font>

538
00:29:58,280 --> 00:30:04,070
detection part<font color="#E5E5E5"> is it's brilliant sense</font>

539
00:30:02,630 --> 00:30:13,460
<font color="#E5E5E5">wonderful point taken</font>

540
00:30:04,070 --> 00:30:16,669
I<font color="#E5E5E5"> will further think about it what looks</font>

541
00:30:13,460 --> 00:30:19,570
<font color="#CCCCCC">like</font><font color="#E5E5E5"> that's a</font><font color="#CCCCCC"> very authentic question</font><font color="#E5E5E5"> I</font>

542
00:30:16,670 --> 00:30:19,570
should<font color="#E5E5E5"> work on that</font>

543
00:30:31,830 --> 00:30:37,290
any more questions<font color="#E5E5E5"> yeah great thanks for</font>

544
00:30:35,460 --> 00:30:42,880
<font color="#E5E5E5">watching go</font><font color="#CCCCCC"> oh thank</font><font color="#E5E5E5"> you</font>

545
00:30:37,290 --> 00:30:42,879
[Applause]

