1
00:00:00,079 --> 00:00:05,640
so as you can<font color="#CCCCCC"> tell by</font><font color="#E5E5E5"> the title which</font>

2
00:00:03,389 --> 00:00:07,589
always<font color="#E5E5E5"> makes my job easier we have</font>

3
00:00:05,640 --> 00:00:09,870
<font color="#E5E5E5">Jessica and</font><font color="#CCCCCC"> mark here here to talk to</font>

4
00:00:07,589 --> 00:00:12,090
you about the evolution<font color="#E5E5E5"> of</font><font color="#CCCCCC"> what was sort</font>

5
00:00:09,870 --> 00:00:14,849
<font color="#E5E5E5">of</font><font color="#CCCCCC"> a a novel and</font><font color="#E5E5E5"> interesting new thing</font>

6
00:00:12,090 --> 00:00:16,619
at Microsoft<font color="#CCCCCC"> some number of</font><font color="#E5E5E5"> years ago</font>

7
00:00:14,849 --> 00:00:20,100
<font color="#E5E5E5">those of you that are familiar</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> what</font>

8
00:00:16,619 --> 00:00:22,350
<font color="#E5E5E5">Emmett is it became sort of an</font>

9
00:00:20,100 --> 00:00:24,539
interesting but<font color="#CCCCCC"> bolt-on solution to</font>

10
00:00:22,350 --> 00:00:27,150
Windows to try to<font color="#CCCCCC"> answer</font><font color="#E5E5E5"> the question of</font>

11
00:00:24,539 --> 00:00:29,519
what if<font color="#E5E5E5"> we already kind of knew what to</font>

12
00:00:27,150 --> 00:00:31,229
<font color="#CCCCCC">expect in a tax base and extrapolated a</font>

13
00:00:29,519 --> 00:00:34,079
bit from that<font color="#E5E5E5"> to try to keep the bad</font>

14
00:00:31,230 --> 00:00:38,250
things from<font color="#CCCCCC"> having to get caught by the</font>

15
00:00:34,079 --> 00:00:41,520
OS at all<font color="#E5E5E5"> so and it became sort of a</font>

16
00:00:38,250 --> 00:00:44,010
more offensively oriented defensive

17
00:00:41,520 --> 00:00:45,539
technique that had a fair<font color="#E5E5E5"> amount of</font>

18
00:00:44,010 --> 00:00:47,489
lifting to do to<font color="#CCCCCC"> get it</font><font color="#E5E5E5"> configured</font>

19
00:00:45,539 --> 00:00:49,710
correctly and workable in an environment

20
00:00:47,489 --> 00:00:53,000
but it had some<font color="#CCCCCC"> remarkable capabilities</font>

21
00:00:49,710 --> 00:00:55,860
and then it sort<font color="#CCCCCC"> of disappeared didn't</font>

22
00:00:53,000 --> 00:00:57,420
because in the world of Microsoft one of

23
00:00:55,860 --> 00:01:01,469
the things we were looking<font color="#E5E5E5"> at ways</font><font color="#CCCCCC"> to</font>

24
00:00:57,420 --> 00:01:03,570
<font color="#E5E5E5">take in it from a you sort of</font><font color="#CCCCCC"> flat-pack</font>

25
00:01:01,469 --> 00:01:06,360
<font color="#E5E5E5">IKEA model of security where you have to</font>

26
00:01:03,570 --> 00:01:08,189
<font color="#E5E5E5">bring it all home swear a lot risk</font>

27
00:01:06,360 --> 00:01:10,140
<font color="#E5E5E5">whatever relationship you're</font><font color="#CCCCCC"> in and then</font>

28
00:01:08,189 --> 00:01:11,850
bolt this<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> together into something</font>

29
00:01:10,140 --> 00:01:13,740
<font color="#CCCCCC">that</font><font color="#E5E5E5"> was actually accessible to</font>

30
00:01:11,850 --> 00:01:16,250
everybody while providing<font color="#E5E5E5"> even more</font>

31
00:01:13,740 --> 00:01:18,360
security with<font color="#E5E5E5"> lower latency</font><font color="#CCCCCC"> and overhead</font>

32
00:01:16,250 --> 00:01:20,520
<font color="#E5E5E5">that's what the founder exploit guard is</font>

33
00:01:18,360 --> 00:01:22,290
so this is going to be your guided tour

34
00:01:20,520 --> 00:01:24,149
<font color="#CCCCCC">of how we got from</font><font color="#E5E5E5"> something that was a</font>

35
00:01:22,290 --> 00:01:25,979
great<font color="#E5E5E5"> idea</font><font color="#CCCCCC"> and maybe a little rough</font>

36
00:01:24,150 --> 00:01:28,080
<font color="#CCCCCC">around the edges so something that</font>

37
00:01:25,979 --> 00:01:29,759
actually<font color="#E5E5E5"> made it</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> the integral core</font>

38
00:01:28,080 --> 00:01:31,860
feature set of<font color="#E5E5E5"> the latest version of</font>

39
00:01:29,759 --> 00:01:36,200
Windows<font color="#CCCCCC"> it's also a great plug as to why</font>

40
00:01:31,860 --> 00:01:36,200
you might<font color="#CCCCCC"> want to update thanks so much</font>

41
00:01:36,380 --> 00:01:40,170
so thanks a<font color="#CCCCCC"> lot</font><font color="#E5E5E5"> for that</font><font color="#CCCCCC"> awesome</font>

42
00:01:38,640 --> 00:01:42,570
introduction<font color="#E5E5E5"> that kind of saves me a bit</font>

43
00:01:40,170 --> 00:01:44,310
<font color="#CCCCCC">of my preamble but</font><font color="#E5E5E5"> Emmett mark and I</font><font color="#CCCCCC"> are</font>

44
00:01:42,570 --> 00:01:47,789
here to talk to you folks a bit about

45
00:01:44,310 --> 00:01:50,430
how we on<font color="#E5E5E5"> Windows security</font><font color="#CCCCCC"> we're able to</font>

46
00:01:47,790 --> 00:01:53,460
learn from finally embrace and then

47
00:01:50,430 --> 00:01:54,869
modernize<font color="#CCCCCC"> Emmett</font><font color="#E5E5E5"> for for Windows 10 so</font>

48
00:01:53,460 --> 00:01:57,780
just a quick show of hands how<font color="#CCCCCC"> many</font>

49
00:01:54,869 --> 00:02:00,930
folks<font color="#E5E5E5"> in the room are familiar with have</font>

50
00:01:57,780 --> 00:02:04,020
contributed to love have heard of Emmett

51
00:02:00,930 --> 00:02:09,000
in general I<font color="#E5E5E5"> see a ton of hands think</font>

52
00:02:04,020 --> 00:02:11,700
some of them are plants but<font color="#CCCCCC"> good so for</font>

53
00:02:09,000 --> 00:02:13,300
<font color="#E5E5E5">the few folks that maybe are less</font>

54
00:02:11,700 --> 00:02:14,950
<font color="#E5E5E5">familiar</font><font color="#CCCCCC"> with Emin</font>

55
00:02:13,300 --> 00:02:17,200
I pulled a couple<font color="#CCCCCC"> of snippets</font><font color="#E5E5E5"> out of</font>

56
00:02:14,950 --> 00:02:19,839
<font color="#CCCCCC">Emmett's Wikipedia page which it does</font>

57
00:02:17,200 --> 00:02:21,190
have it was not created<font color="#E5E5E5"> by me</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> promise</font>

58
00:02:19,840 --> 00:02:22,090
that's just how much of<font color="#CCCCCC"> a fan following</font>

59
00:02:21,190 --> 00:02:24,820
<font color="#E5E5E5">Emmett has</font>

60
00:02:22,090 --> 00:02:28,090
so<font color="#CCCCCC"> evident is a</font><font color="#E5E5E5"> freeware security</font>

61
00:02:24,820 --> 00:02:32,370
toolkit<font color="#CCCCCC"> as we</font><font color="#E5E5E5"> mentioned earlier it was</font>

62
00:02:28,090 --> 00:02:32,370
built by Microsoft<font color="#CCCCCC"> for Windows</font>

63
00:02:32,650 --> 00:02:38,110
Emmett helps to provide a unified

64
00:02:34,960 --> 00:02:40,510
interface for<font color="#E5E5E5"> you to be able</font><font color="#CCCCCC"> to turn</font><font color="#E5E5E5"> on</font>

65
00:02:38,110 --> 00:02:43,570
turn off fine tune a lot of<font color="#E5E5E5"> Windows</font>

66
00:02:40,510 --> 00:02:47,200
<font color="#CCCCCC">security features exploit mitigations in</font>

67
00:02:43,570 --> 00:02:49,750
particular I want<font color="#E5E5E5"> to talk a little bit</font>

68
00:02:47,200 --> 00:02:52,359
<font color="#CCCCCC">about its initial release its initial</font>

69
00:02:49,750 --> 00:02:55,360
sort of conception so<font color="#E5E5E5"> Emmett was</font>

70
00:02:52,360 --> 00:02:59,050
released in 2009<font color="#CCCCCC"> if you think back to</font>

71
00:02:55,360 --> 00:03:01,990
<font color="#E5E5E5">what was going</font><font color="#CCCCCC"> on then Windows was still</font>

72
00:02:59,050 --> 00:03:03,760
on a pretty slow release cadence<font color="#CCCCCC"> I</font>

73
00:03:01,990 --> 00:03:06,940
believe it was once every three years

74
00:03:03,760 --> 00:03:08,290
<font color="#CCCCCC">ish around</font><font color="#E5E5E5"> this time frame but the</font>

75
00:03:06,940 --> 00:03:10,600
overall<font color="#E5E5E5"> point that were trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make</font>

76
00:03:08,290 --> 00:03:13,420
<font color="#E5E5E5">here is</font><font color="#CCCCCC"> that windows</font><font color="#E5E5E5"> release cadence</font>

77
00:03:10,600 --> 00:03:15,690
wasn't fast<font color="#CCCCCC"> enough</font><font color="#E5E5E5"> for us over on</font>

78
00:03:13,420 --> 00:03:19,299
Windows to be able<font color="#CCCCCC"> to keep</font><font color="#E5E5E5"> track with</font>

79
00:03:15,690 --> 00:03:20,829
<font color="#E5E5E5">evolving attacker trends this is kind of</font>

80
00:03:19,300 --> 00:03:23,380
where Emmett came into play<font color="#E5E5E5"> because</font>

81
00:03:20,830 --> 00:03:25,030
Emmett was a<font color="#CCCCCC"> toolkit</font><font color="#E5E5E5"> on top of Windows</font>

82
00:03:23,380 --> 00:03:27,609
we were able<font color="#CCCCCC"> to update</font><font color="#E5E5E5"> it a lot more</font>

83
00:03:25,030 --> 00:03:29,440
<font color="#CCCCCC">frequently and the great news for</font>

84
00:03:27,610 --> 00:03:32,170
Windows is that we were<font color="#CCCCCC"> able to test out</font>

85
00:03:29,440 --> 00:03:35,410
a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> security</font><font color="#E5E5E5"> features via Emmett</font><font color="#CCCCCC"> a</font>

86
00:03:32,170 --> 00:03:37,780
lot<font color="#E5E5E5"> of those sort of tactical stopgap</font>

87
00:03:35,410 --> 00:03:41,470
exploit mitigations that<font color="#E5E5E5"> allowed</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> to</font>

88
00:03:37,780 --> 00:03:43,120
<font color="#E5E5E5">react in real time to evolving attacker</font>

89
00:03:41,470 --> 00:03:46,859
techniques in a way that we were not

90
00:03:43,120 --> 00:03:49,150
able to do using<font color="#E5E5E5"> Windows at the time and</font>

91
00:03:46,860 --> 00:03:50,620
I think<font color="#E5E5E5"> we noticed from</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> show of</font>

92
00:03:49,150 --> 00:03:54,400
hands<font color="#CCCCCC"> in the beginning</font>

93
00:03:50,620 --> 00:03:57,010
Emmett<font color="#CCCCCC"> is a super super love tool our</font>

94
00:03:54,400 --> 00:04:00,640
customers loved it<font color="#CCCCCC"> this admins loved it</font>

95
00:03:57,010 --> 00:04:03,160
security influencers and<font color="#E5E5E5"> enthusiasts</font>

96
00:04:00,640 --> 00:04:05,049
alike<font color="#CCCCCC"> huge fans of Emmett these are just</font>

97
00:04:03,160 --> 00:04:08,140
some snippets<font color="#E5E5E5"> that I was able to find</font>

98
00:04:05,050 --> 00:04:10,239
quick<font color="#E5E5E5"> Google search</font><font color="#CCCCCC"> I want to draw your</font>

99
00:04:08,140 --> 00:04:12,010
attention<font color="#CCCCCC"> to</font><font color="#E5E5E5"> a couple of the</font><font color="#CCCCCC"> things on</font>

100
00:04:10,239 --> 00:04:15,280
<font color="#E5E5E5">this slide one I think which is really</font>

101
00:04:12,010 --> 00:04:17,560
<font color="#E5E5E5">cool is that</font><font color="#CCCCCC"> Emmett was actually part of</font>

102
00:04:15,280 --> 00:04:19,600
this<font color="#E5E5E5"> dig requirements and for</font><font color="#CCCCCC"> those who</font>

103
00:04:17,560 --> 00:04:22,720
aren't<font color="#E5E5E5"> familiar with these the kind of a</font>

104
00:04:19,600 --> 00:04:24,820
security<font color="#E5E5E5"> baseline that's created that is</font>

105
00:04:22,720 --> 00:04:25,940
actually followed by a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> our really</font>

106
00:04:24,820 --> 00:04:27,740
big customers

107
00:04:25,940 --> 00:04:30,650
big government<font color="#CCCCCC"> customers they sort</font><font color="#E5E5E5"> of</font>

108
00:04:27,740 --> 00:04:32,570
follow the stings as somewhat of a

109
00:04:30,650 --> 00:04:34,580
security baseline in terms of best

110
00:04:32,570 --> 00:04:36,920
recommendations best practices from<font color="#CCCCCC"> a</font>

111
00:04:34,580 --> 00:04:39,109
<font color="#E5E5E5">security posture standpoint and</font><font color="#CCCCCC"> Emmet</font>

112
00:04:36,920 --> 00:04:42,080
was actually<font color="#E5E5E5"> recommended as part</font><font color="#CCCCCC"> of the</font>

113
00:04:39,110 --> 00:04:44,240
sting<font color="#CCCCCC"> another quick shout out to</font><font color="#E5E5E5"> Furman</font>

114
00:04:42,080 --> 00:04:46,520
over here he<font color="#E5E5E5"> was nice enough to point</font>

115
00:04:44,240 --> 00:04:48,680
out<font color="#E5E5E5"> that actually the head of the NSA at</font>

116
00:04:46,520 --> 00:04:50,180
one point was recommending<font color="#CCCCCC"> Emmet was</font>

117
00:04:48,680 --> 00:04:53,210
<font color="#E5E5E5">saying hey you know this</font><font color="#CCCCCC"> really helps us</font>

118
00:04:50,180 --> 00:04:55,280
raise<font color="#E5E5E5"> the bar in</font><font color="#CCCCCC"> terms</font><font color="#E5E5E5"> of our reaction</font>

119
00:04:53,210 --> 00:04:56,539
<font color="#CCCCCC">to the</font><font color="#E5E5E5"> attacker landscape definitely</font>

120
00:04:55,280 --> 00:04:58,669
<font color="#E5E5E5">recommend going ahead and turning that</font>

121
00:04:56,540 --> 00:05:00,500
<font color="#CCCCCC">on so we have this tool that we've</font>

122
00:04:58,670 --> 00:05:02,300
developed<font color="#CCCCCC"> with all of</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> love</font><font color="#E5E5E5"> coming</font>

123
00:05:00,500 --> 00:05:05,480
out if the TWC team trustworthy

124
00:05:02,300 --> 00:05:07,910
competing<font color="#E5E5E5"> people love it people know</font>

125
00:05:05,480 --> 00:05:10,400
about it people<font color="#E5E5E5"> are talking about it us</font>

126
00:05:07,910 --> 00:05:16,880
being Microsoft<font color="#E5E5E5"> what do you think we did</font>

127
00:05:10,400 --> 00:05:18,380
<font color="#CCCCCC">next</font><font color="#E5E5E5"> we decided to kill it</font><font color="#CCCCCC"> I feel like I</font>

128
00:05:16,880 --> 00:05:20,210
can make fun<font color="#E5E5E5"> of this because I was part</font>

129
00:05:18,380 --> 00:05:23,330
<font color="#E5E5E5">of the team that that actually made this</font>

130
00:05:20,210 --> 00:05:25,580
<font color="#E5E5E5">decision</font><font color="#CCCCCC"> and I promise that this wasn't</font>

131
00:05:23,330 --> 00:05:27,979
a decision<font color="#CCCCCC"> that we made lightly</font><font color="#E5E5E5"> or that</font>

132
00:05:25,580 --> 00:05:29,930
we weren't<font color="#CCCCCC"> taking into account the huge</font>

133
00:05:27,980 --> 00:05:32,360
fan following that<font color="#CCCCCC"> Emmet had and all</font><font color="#E5E5E5"> the</font>

134
00:05:29,930 --> 00:05:34,610
goodness it had to<font color="#E5E5E5"> offer</font><font color="#CCCCCC"> we made this</font>

135
00:05:32,360 --> 00:05:37,040
decision<font color="#E5E5E5"> to end a flight end of life</font>

136
00:05:34,610 --> 00:05:40,130
<font color="#E5E5E5">Emmet on the basis of really three main</font>

137
00:05:37,040 --> 00:05:42,169
things the first one<font color="#E5E5E5"> is that Emmet</font>

138
00:05:40,130 --> 00:05:44,390
because it was<font color="#E5E5E5"> developed sort of outside</font>

139
00:05:42,169 --> 00:05:46,130
of<font color="#E5E5E5"> the windows team because it was</font>

140
00:05:44,390 --> 00:05:48,409
<font color="#E5E5E5">developed as an extra</font><font color="#CCCCCC"> toolkit that you</font>

141
00:05:46,130 --> 00:05:49,940
run on<font color="#E5E5E5"> top of Windows it wasn't really</font>

142
00:05:48,410 --> 00:05:52,040
developed with the same sort<font color="#E5E5E5"> of</font>

143
00:05:49,940 --> 00:05:54,469
engineering rigor that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> maintained</font>

144
00:05:52,040 --> 00:05:55,970
from within<font color="#E5E5E5"> the windows team so think</font>

145
00:05:54,470 --> 00:05:58,010
<font color="#E5E5E5">about things like performance</font><font color="#CCCCCC"> things</font>

146
00:05:55,970 --> 00:05:59,570
like reliability<font color="#CCCCCC"> these are things that</font>

147
00:05:58,010 --> 00:06:01,280
are ingrained into<font color="#E5E5E5"> the windows</font>

148
00:05:59,570 --> 00:06:04,190
engineering mindset<font color="#E5E5E5"> from a gates</font>

149
00:06:01,280 --> 00:06:07,130
perspective<font color="#E5E5E5"> and these were not</font><font color="#CCCCCC"> things</font>

150
00:06:04,190 --> 00:06:08,890
that<font color="#E5E5E5"> were part of Emmet at the time</font><font color="#CCCCCC"> the</font>

151
00:06:07,130 --> 00:06:12,080
second thing and we talked a bit about

152
00:06:08,890 --> 00:06:14,630
taking<font color="#CCCCCC"> a</font><font color="#E5E5E5"> trip</font><font color="#CCCCCC"> down memory</font><font color="#E5E5E5"> lane</font><font color="#CCCCCC"> in terms</font>

153
00:06:12,080 --> 00:06:17,030
of what was happening back in 2009 with

154
00:06:14,630 --> 00:06:19,580
Windows 10<font color="#CCCCCC"> we really felt that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> had</font>

155
00:06:17,030 --> 00:06:21,260
reached this pretty good<font color="#E5E5E5"> release cadence</font>

156
00:06:19,580 --> 00:06:23,510
now you see first<font color="#E5E5E5"> of all</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> our</font>

157
00:06:21,260 --> 00:06:26,060
windows insider<font color="#E5E5E5"> built all the time we</font>

158
00:06:23,510 --> 00:06:27,469
have a twice a year release cadence so

159
00:06:26,060 --> 00:06:29,900
we felt<font color="#CCCCCC"> like we</font><font color="#E5E5E5"> were</font><font color="#CCCCCC"> in a much better</font>

160
00:06:27,470 --> 00:06:32,150
position from a window standpoint to

161
00:06:29,900 --> 00:06:34,789
react a lot quicker to<font color="#E5E5E5"> these evolving</font>

162
00:06:32,150 --> 00:06:36,500
attacker trends and then<font color="#E5E5E5"> the third one</font>

163
00:06:34,789 --> 00:06:38,690
<font color="#CCCCCC">of course going</font><font color="#E5E5E5"> back to the core of</font>

164
00:06:36,500 --> 00:06:39,560
<font color="#E5E5E5">Emmet really the</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> that makes</font>

165
00:06:38,690 --> 00:06:41,719
security for

166
00:06:39,560 --> 00:06:43,820
really enthusiastic<font color="#E5E5E5"> about this tool is</font>

167
00:06:41,720 --> 00:06:45,590
<font color="#E5E5E5">really the exploit mitigations the</font>

168
00:06:43,820 --> 00:06:48,620
<font color="#CCCCCC">defense's that are part</font><font color="#E5E5E5"> of this toolkit</font>

169
00:06:45,590 --> 00:06:50,780
<font color="#CCCCCC">and really taking a step back at that</font>

170
00:06:48,620 --> 00:06:53,540
time for Windows 10<font color="#E5E5E5"> we felt like we had</font>

171
00:06:50,780 --> 00:06:55,369
<font color="#CCCCCC">a really</font><font color="#E5E5E5"> good modern defense stack we'd</font>

172
00:06:53,540 --> 00:06:57,770
invested a ton of resources<font color="#E5E5E5"> into</font>

173
00:06:55,370 --> 00:07:00,350
building mitigations like CFG<font color="#E5E5E5"> control</font>

174
00:06:57,770 --> 00:07:01,669
flow guard that actually superseded<font color="#E5E5E5"> a</font>

175
00:07:00,350 --> 00:07:04,160
lot of the mitigations that<font color="#E5E5E5"> were</font>

176
00:07:01,669 --> 00:07:06,260
included as part<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Emmet</font><font color="#E5E5E5"> and so we have</font>

177
00:07:04,160 --> 00:07:08,150
this really measured response<font color="#E5E5E5"> saying hey</font>

178
00:07:06,260 --> 00:07:10,730
you know these are our reasonings<font color="#E5E5E5"> we</font>

179
00:07:08,150 --> 00:07:13,729
believe that when<font color="#CCCCCC"> use</font><font color="#E5E5E5"> 10 is your modern</font>

180
00:07:10,730 --> 00:07:15,410
OS for this evolving<font color="#CCCCCC"> attacker landscape</font>

181
00:07:13,729 --> 00:07:18,469
and we don't<font color="#E5E5E5"> believe you really need</font>

182
00:07:15,410 --> 00:07:20,810
<font color="#CCCCCC">Emmitt anymore so with these reasonings</font>

183
00:07:18,470 --> 00:07:22,760
<font color="#CCCCCC">I hope that you believe me that we were</font>

184
00:07:20,810 --> 00:07:26,840
<font color="#E5E5E5">sincerely not trying to troll our</font>

185
00:07:22,760 --> 00:07:28,159
customers or<font color="#E5E5E5"> Emmett enthusiasts</font><font color="#CCCCCC"> we</font>

186
00:07:26,840 --> 00:07:32,479
really felt like<font color="#E5E5E5"> we had some sound</font>

187
00:07:28,160 --> 00:07:34,610
reasoning behind this decision<font color="#CCCCCC"> so what</font>

188
00:07:32,479 --> 00:07:35,960
if<font color="#E5E5E5"> folks think was the</font><font color="#CCCCCC"> reaction</font><font color="#E5E5E5"> to this</font>

189
00:07:34,610 --> 00:07:38,570
sort<font color="#E5E5E5"> of announcement</font><font color="#CCCCCC"> well we definitely</font>

190
00:07:35,960 --> 00:07:40,280
receive<font color="#E5E5E5"> things like you know we don't</font>

191
00:07:38,570 --> 00:07:42,139
disagree<font color="#E5E5E5"> when this town is a great</font>

192
00:07:40,280 --> 00:07:43,700
platform<font color="#CCCCCC"> you guys have really built it</font>

193
00:07:42,139 --> 00:07:45,530
<font color="#E5E5E5">with security</font><font color="#CCCCCC"> in mind from</font><font color="#E5E5E5"> the get-go</font>

194
00:07:43,700 --> 00:07:48,849
<font color="#E5E5E5">it's releasing on a pretty decent</font>

195
00:07:45,530 --> 00:07:51,469
cadence compared to how<font color="#CCCCCC"> it used</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> me</font>

196
00:07:48,850 --> 00:07:51,979
<font color="#E5E5E5">but then we also receive quotes like</font>

197
00:07:51,470 --> 00:07:54,350
<font color="#E5E5E5">this</font>

198
00:07:51,979 --> 00:07:56,780
I picked a very friendly looking picture

199
00:07:54,350 --> 00:08:00,200
of will<font color="#CCCCCC"> doorman</font><font color="#E5E5E5"> he's quite famous</font><font color="#CCCCCC"> in our</font>

200
00:07:56,780 --> 00:08:02,299
hallways<font color="#CCCCCC"> an actually interesting fact</font>

201
00:08:00,200 --> 00:08:04,610
<font color="#E5E5E5">both of</font><font color="#CCCCCC"> these quotes</font><font color="#E5E5E5"> are both by will</font>

202
00:08:02,300 --> 00:08:06,830
doorman in the same article<font color="#E5E5E5"> the reason</font>

203
00:08:04,610 --> 00:08:08,360
<font color="#E5E5E5">that this</font><font color="#CCCCCC"> is interesting and</font><font color="#E5E5E5"> the reason</font>

204
00:08:06,830 --> 00:08:10,550
it really<font color="#CCCCCC"> caught our attention from</font><font color="#E5E5E5"> the</font>

205
00:08:08,360 --> 00:08:12,620
product team perspective<font color="#E5E5E5"> is will</font><font color="#CCCCCC"> was</font>

206
00:08:10,550 --> 00:08:14,090
<font color="#E5E5E5">speaking on behalf of the search which</font>

207
00:08:12,620 --> 00:08:15,950
as a lot of<font color="#CCCCCC"> folks in this room</font><font color="#E5E5E5"> probably</font>

208
00:08:14,090 --> 00:08:17,929
know is kind<font color="#CCCCCC"> of taken as the gold</font>

209
00:08:15,950 --> 00:08:19,789
<font color="#CCCCCC">standard of you know what should my</font>

210
00:08:17,930 --> 00:08:21,889
enterprise follow what should my<font color="#E5E5E5"> you</font>

211
00:08:19,789 --> 00:08:24,469
know big government customers<font color="#CCCCCC"> etc they</font>

212
00:08:21,889 --> 00:08:25,729
think along those lines<font color="#E5E5E5"> so</font><font color="#CCCCCC"> well really</font>

213
00:08:24,470 --> 00:08:27,260
<font color="#E5E5E5">took a step back and he was like you</font>

214
00:08:25,729 --> 00:08:28,820
know I don't<font color="#E5E5E5"> disagree it's an awesome</font>

215
00:08:27,260 --> 00:08:31,340
platform<font color="#E5E5E5"> you guys have built a really</font>

216
00:08:28,820 --> 00:08:33,140
great platform<font color="#E5E5E5"> here but Windows 10</font>

217
00:08:31,340 --> 00:08:35,809
<font color="#E5E5E5">cannot protect</font><font color="#CCCCCC"> insecure applications</font>

218
00:08:33,140 --> 00:08:38,900
like<font color="#CCCCCC"> Emmitt can this is because of the</font>

219
00:08:35,809 --> 00:08:40,338
big<font color="#E5E5E5"> asterisk in the room so he was</font>

220
00:08:38,900 --> 00:08:42,500
mentioning<font color="#E5E5E5"> things like you</font><font color="#CCCCCC"> know what</font>

221
00:08:40,339 --> 00:08:45,050
<font color="#CCCCCC">about vendors out</font><font color="#E5E5E5"> there that are not</font>

222
00:08:42,500 --> 00:08:47,540
<font color="#CCCCCC">making</font><font color="#E5E5E5"> use of all the applicable</font>

223
00:08:45,050 --> 00:08:49,310
mitigations that<font color="#E5E5E5"> they could be</font><font color="#CCCCCC"> using we</font>

224
00:08:47,540 --> 00:08:51,860
ourselves are sometimes to blame of the

225
00:08:49,310 --> 00:08:52,569
about<font color="#E5E5E5"> this here at Microsoft</font><font color="#CCCCCC"> but there's</font>

226
00:08:51,860 --> 00:08:54,850
a ton<font color="#CCCCCC"> of other</font>

227
00:08:52,570 --> 00:08:56,800
out there that are not<font color="#E5E5E5"> necessarily using</font>

228
00:08:54,850 --> 00:08:59,320
<font color="#E5E5E5">all the mitigations that</font><font color="#CCCCCC"> might be</font>

229
00:08:56,800 --> 00:09:00,819
applicable to<font color="#E5E5E5"> their apps</font><font color="#CCCCCC"> and we have a</font>

230
00:08:59,320 --> 00:09:03,310
couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> examples about</font><font color="#CCCCCC"> this as</font><font color="#E5E5E5"> well</font>

231
00:09:00,820 --> 00:09:04,870
mark is<font color="#E5E5E5"> going to show us one the second</font>

232
00:09:03,310 --> 00:09:06,819
<font color="#E5E5E5">one which was really</font><font color="#CCCCCC"> really big is what</font>

233
00:09:04,870 --> 00:09:08,529
<font color="#E5E5E5">about apps that weren't built</font><font color="#CCCCCC"> to you CFG</font>

234
00:09:06,820 --> 00:09:10,569
so I mentioned<font color="#E5E5E5"> this awesome</font>

235
00:09:08,529 --> 00:09:12,610
communication that<font color="#E5E5E5"> we had built the one</font>

236
00:09:10,569 --> 00:09:15,069
thing that I didn't mention<font color="#E5E5E5"> is that in</font>

237
00:09:12,610 --> 00:09:17,740
order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> take</font><font color="#CCCCCC"> advantage</font><font color="#E5E5E5"> of CFG your app</font>

238
00:09:15,069 --> 00:09:19,990
<font color="#E5E5E5">actually has to be recompiled for CFG</font>

239
00:09:17,740 --> 00:09:22,480
now the problem<font color="#E5E5E5"> that we were</font><font color="#CCCCCC"> hearing is</font>

240
00:09:19,990 --> 00:09:24,190
a lot<font color="#E5E5E5"> of our</font><font color="#CCCCCC"> customers like</font><font color="#E5E5E5"> we can tree</font>

241
00:09:22,480 --> 00:09:26,170
compile our<font color="#E5E5E5"> apps and a lot of the cases</font>

242
00:09:24,190 --> 00:09:27,279
we<font color="#E5E5E5"> don't even have</font><font color="#CCCCCC"> this source code</font><font color="#E5E5E5"> for</font>

243
00:09:26,170 --> 00:09:30,670
these apps anymore

244
00:09:27,279 --> 00:09:32,560
these are<font color="#E5E5E5"> LOV apps that we rely on how</font>

245
00:09:30,670 --> 00:09:33,759
are we supposed to make<font color="#E5E5E5"> use of CFG and</font>

246
00:09:32,560 --> 00:09:35,529
now we don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> those other</font>

247
00:09:33,759 --> 00:09:38,170
mitigations<font color="#CCCCCC"> that</font><font color="#E5E5E5"> Emmett was offering</font>

248
00:09:35,529 --> 00:09:40,839
<font color="#E5E5E5">because you say that CFG supersedes them</font>

249
00:09:38,170 --> 00:09:43,149
<font color="#E5E5E5">which it does but again they weren't</font>

250
00:09:40,839 --> 00:09:44,459
recompiled the third thing that<font color="#E5E5E5"> he</font>

251
00:09:43,149 --> 00:09:48,220
<font color="#E5E5E5">mentioned which</font><font color="#CCCCCC"> is really interesting</font>

252
00:09:44,459 --> 00:09:49,989
<font color="#E5E5E5">sort</font><font color="#CCCCCC"> of concept is Emmett provided a lot</font>

253
00:09:48,220 --> 00:09:52,389
<font color="#E5E5E5">of</font><font color="#CCCCCC"> protection from what</font><font color="#E5E5E5"> we call forever</font>

254
00:09:49,990 --> 00:09:55,360
days so these are<font color="#E5E5E5"> essentially zero days</font>

255
00:09:52,389 --> 00:09:56,920
in unsupported<font color="#CCCCCC"> products which means that</font>

256
00:09:55,360 --> 00:09:59,319
they never get patched<font color="#E5E5E5"> and so they're</font>

257
00:09:56,920 --> 00:10:00,880
<font color="#E5E5E5">kind of</font><font color="#CCCCCC"> there forever and</font><font color="#E5E5E5"> it was a good</font>

258
00:09:59,319 --> 00:10:02,740
stopgap solution for<font color="#E5E5E5"> these kinds of</font>

259
00:10:00,880 --> 00:10:04,870
<font color="#E5E5E5">things we didn't offer anything along</font>

260
00:10:02,740 --> 00:10:07,089
those lines<font color="#E5E5E5"> anymore and then finally and</font>

261
00:10:04,870 --> 00:10:09,430
we saw this from<font color="#E5E5E5"> the Wikipedia entry</font><font color="#CCCCCC"> I'm</font>

262
00:10:07,089 --> 00:10:10,779
it had a cool GUI<font color="#CCCCCC"> that allowed you to me</font>

263
00:10:09,430 --> 00:10:13,449
to apply it

264
00:10:10,779 --> 00:10:15,490
excellent mitigations to your system to

265
00:10:13,449 --> 00:10:17,920
<font color="#E5E5E5">your apps for those of you have seen it</font>

266
00:10:15,490 --> 00:10:19,810
it's a big<font color="#E5E5E5"> sieve</font><font color="#CCCCCC"> checkboxes it has a</font>

267
00:10:17,920 --> 00:10:22,180
bunch<font color="#E5E5E5"> of apps on one axis a bunch of</font>

268
00:10:19,810 --> 00:10:25,239
mitigations on the other<font color="#E5E5E5"> axis where is</font>

269
00:10:22,180 --> 00:10:27,489
this<font color="#CCCCCC"> GUI so this is really</font><font color="#E5E5E5"> the</font>

270
00:10:25,240 --> 00:10:29,800
<font color="#CCCCCC">birthplace of</font><font color="#E5E5E5"> Windows Defender exploit</font>

271
00:10:27,490 --> 00:10:32,019
<font color="#E5E5E5">card we figured why let</font><font color="#CCCCCC"> Weston and so on</font>

272
00:10:29,800 --> 00:10:33,819
and have all the fun<font color="#E5E5E5"> with app card we</font>

273
00:10:32,019 --> 00:10:37,209
put<font color="#E5E5E5"> me in our own</font><font color="#CCCCCC"> guard so now we're</font>

274
00:10:33,819 --> 00:10:38,709
part of the guards for<font color="#CCCCCC"> Windows and so</font>

275
00:10:37,209 --> 00:10:41,260
this is a<font color="#CCCCCC"> brand new</font><font color="#E5E5E5"> set</font><font color="#CCCCCC"> of hosting</font>

276
00:10:38,709 --> 00:10:43,630
<font color="#E5E5E5">intrusion prevention</font><font color="#CCCCCC"> capabilities for</font>

277
00:10:41,260 --> 00:10:45,459
Windows 10<font color="#E5E5E5"> also introduced as part</font><font color="#CCCCCC"> of</font>

278
00:10:43,630 --> 00:10:46,839
the fall<font color="#E5E5E5"> creators update so folks who</font>

279
00:10:45,459 --> 00:10:49,660
are<font color="#E5E5E5"> getting that</font><font color="#CCCCCC"> updating you</font><font color="#E5E5E5"> have a ton</font>

280
00:10:46,839 --> 00:10:50,620
of goodness<font color="#E5E5E5"> in there and like this guy</font>

281
00:10:49,660 --> 00:10:54,160
on<font color="#E5E5E5"> my slave</font>

282
00:10:50,620 --> 00:10:56,439
exploit<font color="#E5E5E5"> card wears a lot of hats</font><font color="#CCCCCC"> in</font>

283
00:10:54,160 --> 00:10:58,149
<font color="#CCCCCC">particular we</font><font color="#E5E5E5"> have four big features</font>

284
00:10:56,439 --> 00:11:00,250
that are part of Windows<font color="#E5E5E5"> Defender</font>

285
00:10:58,149 --> 00:11:02,319
<font color="#CCCCCC">exploit guard that we feel is really</font><font color="#E5E5E5"> a</font>

286
00:11:00,250 --> 00:11:04,329
<font color="#CCCCCC">comprehensive solution a comprehensive</font>

287
00:11:02,319 --> 00:11:05,120
answer to the pain points<font color="#CCCCCC"> that are</font>

288
00:11:04,329 --> 00:11:07,489
<font color="#CCCCCC">Emmitt custom</font>

289
00:11:05,120 --> 00:11:09,680
we're having so the first one<font color="#E5E5E5"> that we</font>

290
00:11:07,490 --> 00:11:11,420
<font color="#CCCCCC">have here is attack surface reduction</font>

291
00:11:09,680 --> 00:11:14,989
rules for the folks that are<font color="#E5E5E5"> familiar</font>

292
00:11:11,420 --> 00:11:17,089
<font color="#E5E5E5">with the ASR feature of</font><font color="#CCCCCC"> Emmett what we</font>

293
00:11:14,990 --> 00:11:19,610
<font color="#E5E5E5">tried to do is to make that feature a</font>

294
00:11:17,089 --> 00:11:22,900
little<font color="#E5E5E5"> more robust</font><font color="#CCCCCC"> a little more on the</font>

295
00:11:19,610 --> 00:11:25,550
basis of behavior<font color="#E5E5E5"> as opposed to blocking</font>

296
00:11:22,900 --> 00:11:27,560
<font color="#E5E5E5">specific processes from loading specific</font>

297
00:11:25,550 --> 00:11:30,770
modules<font color="#E5E5E5"> so we try</font><font color="#CCCCCC"> to make it a little</font>

298
00:11:27,560 --> 00:11:32,900
<font color="#E5E5E5">more</font><font color="#CCCCCC"> generic</font><font color="#E5E5E5"> and behavior based based on</font>

299
00:11:30,770 --> 00:11:34,610
<font color="#E5E5E5">what we saw</font><font color="#CCCCCC"> really in</font><font color="#E5E5E5"> terms of common</font>

300
00:11:32,900 --> 00:11:36,290
patterns<font color="#CCCCCC"> and malware and</font><font color="#E5E5E5"> common patterns</font>

301
00:11:34,610 --> 00:11:37,850
in the attacker landscape<font color="#E5E5E5"> and we'll look</font>

302
00:11:36,290 --> 00:11:40,010
at a couple<font color="#CCCCCC"> of examples of</font><font color="#E5E5E5"> this just to</font>

303
00:11:37,850 --> 00:11:41,960
make<font color="#E5E5E5"> that really clear the second</font>

304
00:11:40,010 --> 00:11:43,970
feature as<font color="#CCCCCC"> part of exploit guard is</font>

305
00:11:41,960 --> 00:11:46,190
exploit protection this is really your

306
00:11:43,970 --> 00:11:49,220
comprehensive<font color="#E5E5E5"> set of exploit mitigations</font>

307
00:11:46,190 --> 00:11:51,980
<font color="#E5E5E5">we built that UI and</font><font color="#CCCCCC"> we built it better</font>

308
00:11:49,220 --> 00:11:54,070
I<font color="#E5E5E5"> believe than Emmett did so now you</font>

309
00:11:51,980 --> 00:11:57,380
have a centralized UI and to be able to

310
00:11:54,070 --> 00:11:59,890
turn on and off mitigations on what your

311
00:11:57,380 --> 00:12:03,260
system<font color="#E5E5E5"> as well as on a per app basis</font><font color="#CCCCCC"> and</font>

312
00:11:59,890 --> 00:12:05,210
finally we<font color="#E5E5E5"> also brought in</font><font color="#CCCCCC"> some of those</font>

313
00:12:03,260 --> 00:12:08,180
mitigations<font color="#CCCCCC"> in Emmett that are</font>

314
00:12:05,210 --> 00:12:10,279
superseded by CFG which is a<font color="#E5E5E5"> stronger</font>

315
00:12:08,180 --> 00:12:12,319
mitigation but we still brought them

316
00:12:10,279 --> 00:12:14,270
<font color="#E5E5E5">into Windows understanding</font><font color="#CCCCCC"> that there</font>

317
00:12:12,320 --> 00:12:16,730
are<font color="#E5E5E5"> legacy apps out there that cannot be</font>

318
00:12:14,270 --> 00:12:18,319
recompiled for CFG<font color="#E5E5E5"> that can't take</font>

319
00:12:16,730 --> 00:12:19,940
<font color="#CCCCCC">advantage of</font><font color="#E5E5E5"> these and</font><font color="#CCCCCC"> Mark is gonna</font>

320
00:12:18,320 --> 00:12:22,790
<font color="#E5E5E5">give</font><font color="#CCCCCC"> us a technical deep dive on some of</font>

321
00:12:19,940 --> 00:12:24,740
those finally just<font color="#E5E5E5"> for good measure we</font>

322
00:12:22,790 --> 00:12:26,839
added a couple<font color="#CCCCCC"> extra features</font><font color="#E5E5E5"> in to</font>

323
00:12:24,740 --> 00:12:29,779
exploit<font color="#CCCCCC"> Garen just so I can</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> all the</font>

324
00:12:26,839 --> 00:12:32,360
hats we have a third feature called

325
00:12:29,779 --> 00:12:34,520
controlled folder access<font color="#E5E5E5"> this is really</font>

326
00:12:32,360 --> 00:12:38,180
<font color="#CCCCCC">about protecting</font><font color="#E5E5E5"> your files which are in</font>

327
00:12:34,520 --> 00:12:39,790
key system folders<font color="#CCCCCC"> sort</font><font color="#E5E5E5"> of preventing</font>

328
00:12:38,180 --> 00:12:42,170
them from<font color="#E5E5E5"> being modified by</font>

329
00:12:39,790 --> 00:12:45,199
<font color="#E5E5E5">suspicious-looking or untrusted apps</font>

330
00:12:42,170 --> 00:12:46,880
including ransomware<font color="#E5E5E5"> and then finally</font>

331
00:12:45,200 --> 00:12:48,860
with network protection<font color="#CCCCCC"> and what we've</font>

332
00:12:46,880 --> 00:12:51,680
been<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> do is we took the goodness</font>

333
00:12:48,860 --> 00:12:54,050
<font color="#E5E5E5">of smart screen now called Windows</font>

334
00:12:51,680 --> 00:12:56,120
Defender smart screen and we brought it

335
00:12:54,050 --> 00:12:58,400
<font color="#E5E5E5">all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> down the stack to cover all</font>

336
00:12:56,120 --> 00:13:03,380
network<font color="#E5E5E5"> traffic on your device</font><font color="#CCCCCC"> so all</font>

337
00:12:58,400 --> 00:13:05,390
outbound<font color="#E5E5E5"> HTTP HTTP traffic</font><font color="#CCCCCC"> we will be</font>

338
00:13:03,380 --> 00:13:07,730
blocking low<font color="#CCCCCC"> rep sites on the basis of</font>

339
00:13:05,390 --> 00:13:11,300
<font color="#E5E5E5">hostname and domain with</font><font color="#CCCCCC"> the network</font>

340
00:13:07,730 --> 00:13:13,010
protection<font color="#E5E5E5"> feature just because we don't</font>

341
00:13:11,300 --> 00:13:15,170
have enough time<font color="#CCCCCC"> today we're</font><font color="#E5E5E5"> going to</font>

342
00:13:13,010 --> 00:13:17,420
focus<font color="#E5E5E5"> in terms of a technical deep dive</font>

343
00:13:15,170 --> 00:13:18,829
<font color="#E5E5E5">on the first two features here but I</font>

344
00:13:17,420 --> 00:13:22,910
definitely<font color="#CCCCCC"> encourage folks to read</font>

345
00:13:18,830 --> 00:13:24,800
about all<font color="#E5E5E5"> of them on</font><font color="#CCCCCC"> tec-9 so first up</font>

346
00:13:22,910 --> 00:13:26,959
we have<font color="#CCCCCC"> a tax service reduction</font><font color="#E5E5E5"> rules so</font>

347
00:13:24,800 --> 00:13:29,060
now<font color="#CCCCCC"> again</font><font color="#E5E5E5"> well we started with was</font>

348
00:13:26,960 --> 00:13:30,920
<font color="#E5E5E5">Emmett's ASR we're trying to make this a</font>

349
00:13:29,060 --> 00:13:34,010
lot more<font color="#E5E5E5"> robust</font><font color="#CCCCCC"> we're trying</font><font color="#E5E5E5"> to make</font>

350
00:13:30,920 --> 00:13:35,449
this a lot more<font color="#CCCCCC"> behavioural latest</font><font color="#E5E5E5"> and I</font>

351
00:13:34,010 --> 00:13:37,189
like to explain this with the<font color="#E5E5E5"> help</font><font color="#CCCCCC"> of an</font>

352
00:13:35,450 --> 00:13:40,760
example rather<font color="#E5E5E5"> than giving you a bunch</font>

353
00:13:37,190 --> 00:13:42,580
of architectural lingo so I like<font color="#CCCCCC"> to</font>

354
00:13:40,760 --> 00:13:44,840
<font color="#E5E5E5">start</font><font color="#CCCCCC"> with this office files example</font>

355
00:13:42,580 --> 00:13:47,030
<font color="#CCCCCC">what we're really trying to</font><font color="#E5E5E5"> do here</font><font color="#CCCCCC"> is</font>

356
00:13:44,840 --> 00:13:49,790
maintain a good<font color="#E5E5E5"> balance</font><font color="#CCCCCC"> between</font><font color="#E5E5E5"> security</font>

357
00:13:47,030 --> 00:13:51,079
and productivity<font color="#E5E5E5"> which is something</font><font color="#CCCCCC"> that</font>

358
00:13:49,790 --> 00:13:53,990
we<font color="#CCCCCC"> believe</font><font color="#E5E5E5"> is really important from the</font>

359
00:13:51,080 --> 00:13:55,700
windows standpoint of course if<font color="#E5E5E5"> security</font>

360
00:13:53,990 --> 00:13:57,890
folks<font color="#CCCCCC"> if we had our</font><font color="#E5E5E5"> way we just block</font>

361
00:13:55,700 --> 00:13:59,750
<font color="#CCCCCC">everything</font><font color="#E5E5E5"> but we want to make</font><font color="#CCCCCC"> sure that</font>

362
00:13:57,890 --> 00:14:03,530
<font color="#E5E5E5">our</font><font color="#CCCCCC"> customers can actually</font><font color="#E5E5E5"> do their jobs</font>

363
00:13:59,750 --> 00:14:05,840
<font color="#E5E5E5">on on our platform</font><font color="#CCCCCC"> so for this example</font>

364
00:14:03,530 --> 00:14:11,449
please put<font color="#E5E5E5"> yourselves into the shoes of</font>

365
00:14:05,840 --> 00:14:14,090
<font color="#E5E5E5">our well-meaning SEC ops admin</font><font color="#CCCCCC"> he's been</font>

366
00:14:11,450 --> 00:14:16,700
super proactive reading up<font color="#E5E5E5"> online</font><font color="#CCCCCC"> all</font>

367
00:14:14,090 --> 00:14:18,200
the<font color="#CCCCCC"> blogs all the tweets</font><font color="#E5E5E5"> and he realizes</font>

368
00:14:16,700 --> 00:14:19,940
you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> there's something</font><font color="#CCCCCC"> going on in</font>

369
00:14:18,200 --> 00:14:22,190
the attacker landscape<font color="#E5E5E5"> these days that</font>

370
00:14:19,940 --> 00:14:24,770
is<font color="#E5E5E5"> office related and I want to protect</font>

371
00:14:22,190 --> 00:14:28,340
<font color="#E5E5E5">the endpoints in my organization from</font>

372
00:14:24,770 --> 00:14:31,010
these office based threats can you block

373
00:14:28,340 --> 00:14:33,500
all office usage<font color="#E5E5E5"> within his environment</font>

374
00:14:31,010 --> 00:14:35,180
<font color="#CCCCCC">I don't think I see a lot of</font><font color="#E5E5E5"> folks</font>

375
00:14:33,500 --> 00:14:37,150
<font color="#E5E5E5">looking very positive</font><font color="#CCCCCC"> about this so</font>

376
00:14:35,180 --> 00:14:39,680
that's<font color="#CCCCCC"> obviously not possible</font>

377
00:14:37,150 --> 00:14:41,209
now the next<font color="#E5E5E5"> step he takes as he's</font>

378
00:14:39,680 --> 00:14:42,800
<font color="#E5E5E5">reading through some</font><font color="#CCCCCC"> of these blogs and</font>

379
00:14:41,210 --> 00:14:46,250
he realizes hey you know a lot<font color="#E5E5E5"> of these</font>

380
00:14:42,800 --> 00:14:48,589
<font color="#CCCCCC">attacks seem to be mentioning macros so</font>

381
00:14:46,250 --> 00:14:52,130
maybe macros is something that seems to

382
00:14:48,590 --> 00:14:54,560
<font color="#E5E5E5">be sort of malicious</font><font color="#CCCCCC"> let me go ahead and</font>

383
00:14:52,130 --> 00:14:57,350
block all office files that use macros

384
00:14:54,560 --> 00:14:58,699
<font color="#E5E5E5">in my environment so disable macros we</font>

385
00:14:57,350 --> 00:15:01,160
have a group<font color="#CCCCCC"> policy that helps you do</font>

386
00:14:58,700 --> 00:15:03,350
<font color="#E5E5E5">this how many folks think</font><font color="#CCCCCC"> that this is</font>

387
00:15:01,160 --> 00:15:05,180
something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this set office admin can</font>

388
00:15:03,350 --> 00:15:08,300
actually deploy<font color="#E5E5E5"> in his organization</font>

389
00:15:05,180 --> 00:15:10,969
<font color="#CCCCCC">I see no hands so either your folks are</font>

390
00:15:08,300 --> 00:15:12,770
<font color="#E5E5E5">not listening</font><font color="#CCCCCC"> or you're right</font><font color="#E5E5E5"> because</font>

391
00:15:10,970 --> 00:15:14,780
that's really<font color="#E5E5E5"> hard to do I mean we tried</font>

392
00:15:12,770 --> 00:15:16,610
<font color="#E5E5E5">to do that here at Microsoft</font><font color="#CCCCCC"> it did</font><font color="#E5E5E5"> not</font>

393
00:15:14,780 --> 00:15:19,579
<font color="#CCCCCC">end well we got emails from</font><font color="#E5E5E5"> the finance</font>

394
00:15:16,610 --> 00:15:22,880
department<font color="#CCCCCC"> they were not pleased</font><font color="#E5E5E5"> so</font>

395
00:15:19,580 --> 00:15:24,560
interesting story<font color="#CCCCCC"> the the GP that I</font>

396
00:15:22,880 --> 00:15:26,120
mentioned that<font color="#E5E5E5"> lets you disable macros</font>

397
00:15:24,560 --> 00:15:28,369
in your environment<font color="#E5E5E5"> until Windows</font>

398
00:15:26,120 --> 00:15:30,140
Defender exploit<font color="#E5E5E5"> guard that was really</font>

399
00:15:28,370 --> 00:15:31,850
the most granular<font color="#E5E5E5"> you could get with</font>

400
00:15:30,140 --> 00:15:32,120
this kind of behavior<font color="#CCCCCC"> that was pretty</font>

401
00:15:31,850 --> 00:15:34,150
<font color="#E5E5E5">much</font>

402
00:15:32,120 --> 00:15:37,100
<font color="#CCCCCC">your big hammer pretty much your</font><font color="#E5E5E5"> stopgap</font>

403
00:15:34,150 --> 00:15:39,829
<font color="#CCCCCC">but we're</font><font color="#E5E5E5"> trying to do with the ASR</font>

404
00:15:37,100 --> 00:15:41,810
feature of<font color="#E5E5E5"> Windows Defender exploit</font>

405
00:15:39,830 --> 00:15:43,640
<font color="#E5E5E5">guard is to</font><font color="#CCCCCC"> take another</font><font color="#E5E5E5"> step in and say</font>

406
00:15:41,810 --> 00:15:45,619
what is<font color="#CCCCCC"> really the malicious behavior</font>

407
00:15:43,640 --> 00:15:48,770
<font color="#E5E5E5">that is being displayed</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> so what if</font>

408
00:15:45,620 --> 00:15:50,740
instead of<font color="#E5E5E5"> just</font><font color="#CCCCCC"> blocking all macros we</font>

409
00:15:48,770 --> 00:15:53,870
could block<font color="#CCCCCC"> office files that are</font>

410
00:15:50,740 --> 00:15:55,880
executing content or<font color="#E5E5E5"> even better still</font>

411
00:15:53,870 --> 00:15:57,680
blocking<font color="#E5E5E5"> Office files that are</font>

412
00:15:55,880 --> 00:16:00,290
downloading<font color="#CCCCCC"> content from the web and</font>

413
00:15:57,680 --> 00:16:02,060
<font color="#E5E5E5">then executing that so as you can see</font>

414
00:16:00,290 --> 00:16:04,990
<font color="#CCCCCC">from the final</font><font color="#E5E5E5"> oval here it's very</font>

415
00:16:02,060 --> 00:16:07,250
<font color="#E5E5E5">orange because based on our research</font>

416
00:16:04,990 --> 00:16:09,470
that we've<font color="#CCCCCC"> been able to do on</font><font color="#E5E5E5"> our team</font>

417
00:16:07,250 --> 00:16:10,760
we see<font color="#E5E5E5"> that the vast majority of files</font>

418
00:16:09,470 --> 00:16:13,250
that<font color="#E5E5E5"> are displaying this sort of</font>

419
00:16:10,760 --> 00:16:14,990
behavior<font color="#CCCCCC"> are in fact malicious there are</font>

420
00:16:13,250 --> 00:16:17,660
still definitely<font color="#E5E5E5"> some of the teal colors</font>

421
00:16:14,990 --> 00:16:19,550
or some false positives<font color="#CCCCCC"> but for the most</font>

422
00:16:17,660 --> 00:16:22,069
<font color="#E5E5E5">part</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> a pretty sort of suspicious</font>

423
00:16:19,550 --> 00:16:24,469
behavior pattern and that's exactly<font color="#E5E5E5"> an</font>

424
00:16:22,070 --> 00:16:27,020
example<font color="#CCCCCC"> of what we might turn</font><font color="#E5E5E5"> into an</font>

425
00:16:24,470 --> 00:16:28,700
attack service reduction rule so you see

426
00:16:27,020 --> 00:16:31,550
<font color="#CCCCCC">Bloch office ops from creating</font>

427
00:16:28,700 --> 00:16:33,410
executable content and so what you can

428
00:16:31,550 --> 00:16:35,120
<font color="#CCCCCC">see here this is</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> initial set of</font>

429
00:16:33,410 --> 00:16:37,250
<font color="#E5E5E5">seven rules that we shipped with</font><font color="#CCCCCC"> the</font>

430
00:16:35,120 --> 00:16:38,930
fall<font color="#E5E5E5"> creators update we're constantly</font>

431
00:16:37,250 --> 00:16:40,490
looking<font color="#CCCCCC"> to</font><font color="#E5E5E5"> add more</font><font color="#CCCCCC"> rules we're</font>

432
00:16:38,930 --> 00:16:43,729
constantly looking<font color="#CCCCCC"> to</font><font color="#E5E5E5"> even tweak these</font>

433
00:16:40,490 --> 00:16:45,200
existing rules which we can do but what

434
00:16:43,730 --> 00:16:47,000
<font color="#CCCCCC">you see here is really that we're trying</font>

435
00:16:45,200 --> 00:16:49,640
to<font color="#E5E5E5"> block things on the basis of behavior</font>

436
00:16:47,000 --> 00:16:51,529
<font color="#E5E5E5">patterns which is a little more robust</font>

437
00:16:49,640 --> 00:16:55,720
than just blocking specific modules from

438
00:16:51,529 --> 00:16:55,720
being loaded<font color="#E5E5E5"> by specific processes a</font>

439
00:16:55,779 --> 00:17:00,170
quick word on how we anticipate that

440
00:16:58,279 --> 00:17:02,200
<font color="#E5E5E5">attack surface reduction rules can</font>

441
00:17:00,170 --> 00:17:05,389
actually be<font color="#CCCCCC"> deployed in your environment</font>

442
00:17:02,200 --> 00:17:07,370
<font color="#CCCCCC">we start kind</font><font color="#E5E5E5"> of like in</font><font color="#CCCCCC"> my example</font><font color="#E5E5E5"> with</font>

443
00:17:05,390 --> 00:17:09,980
either a<font color="#CCCCCC"> proactive stance so maybe I</font>

444
00:17:07,369 --> 00:17:13,129
read this<font color="#CCCCCC"> tweet from</font><font color="#E5E5E5"> Taylor</font><font color="#CCCCCC"> Swift on</font>

445
00:17:09,980 --> 00:17:14,599
security<font color="#CCCCCC"> or maybe even a reactive stance</font>

446
00:17:13,130 --> 00:17:16,579
so maybe<font color="#E5E5E5"> I'm seeing a bunch of beaches</font>

447
00:17:14,599 --> 00:17:19,639
<font color="#E5E5E5">in my network based on my</font><font color="#CCCCCC"> windows</font>

448
00:17:16,579 --> 00:17:21,109
<font color="#CCCCCC">defender HCP data</font><font color="#E5E5E5"> and I want</font><font color="#CCCCCC"> to do</font>

449
00:17:19,640 --> 00:17:22,490
something about<font color="#E5E5E5"> it in my environment so</font>

450
00:17:21,109 --> 00:17:24,800
<font color="#E5E5E5">you start</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> either a</font><font color="#CCCCCC"> proactive or</font>

451
00:17:22,490 --> 00:17:26,870
reactive stance<font color="#E5E5E5"> you evaluate the rules</font>

452
00:17:24,800 --> 00:17:28,520
that<font color="#CCCCCC"> you have at</font><font color="#E5E5E5"> hand and you</font><font color="#CCCCCC"> can</font>

453
00:17:26,869 --> 00:17:30,620
<font color="#CCCCCC">actually turn on</font><font color="#E5E5E5"> what we call an audit</font>

454
00:17:28,520 --> 00:17:32,360
mode for these rules<font color="#E5E5E5"> so this means that</font>

455
00:17:30,620 --> 00:17:34,280
the rules will be applied<font color="#E5E5E5"> in your</font>

456
00:17:32,360 --> 00:17:36,620
organization without<font color="#E5E5E5"> any blocking</font>

457
00:17:34,280 --> 00:17:38,990
behavior and instead every time we would

458
00:17:36,620 --> 00:17:42,439
<font color="#CCCCCC">have</font><font color="#E5E5E5"> done a block we write out an event</font>

459
00:17:38,990 --> 00:17:44,090
<font color="#E5E5E5">to your Windows Event log those events</font>

460
00:17:42,440 --> 00:17:44,880
are<font color="#E5E5E5"> also being channeled back to Windows</font>

461
00:17:44,090 --> 00:17:47,370
Defender<font color="#CCCCCC"> ATP</font>

462
00:17:44,880 --> 00:17:49,980
need to provide you an awesome<font color="#E5E5E5"> one-stop</font>

463
00:17:47,370 --> 00:17:51,780
shop<font color="#CCCCCC"> unified UI experience</font>

464
00:17:49,980 --> 00:17:53,910
so<font color="#CCCCCC"> the second stuff here</font><font color="#E5E5E5"> you can see a</font>

465
00:17:51,780 --> 00:17:55,379
<font color="#CCCCCC">little</font><font color="#E5E5E5"> snippet of the ATP portal is of</font>

466
00:17:53,910 --> 00:17:57,720
course now that<font color="#CCCCCC"> you've deployed those</font>

467
00:17:55,380 --> 00:17:59,190
rules<font color="#E5E5E5"> and audit mode sort of reviewing</font>

468
00:17:57,720 --> 00:18:01,260
the impact of you<font color="#CCCCCC"> know what would</font>

469
00:17:59,190 --> 00:18:03,480
actually<font color="#E5E5E5"> happen in my organization if I</font>

470
00:18:01,260 --> 00:18:05,220
had turned this<font color="#E5E5E5"> rule on so now if you</font>

471
00:18:03,480 --> 00:18:07,410
<font color="#CCCCCC">think back to my example about the</font>

472
00:18:05,220 --> 00:18:08,910
finance department getting mad at us we

473
00:18:07,410 --> 00:18:11,730
could<font color="#E5E5E5"> have known that ahead of time</font><font color="#CCCCCC"> if</font>

474
00:18:08,910 --> 00:18:13,620
<font color="#E5E5E5">we had deployed audit mode</font><font color="#CCCCCC"> and then of</font>

475
00:18:11,730 --> 00:18:14,970
course evaluated what the impact of

476
00:18:13,620 --> 00:18:17,639
turning those rules on would have<font color="#CCCCCC"> been</font>

477
00:18:14,970 --> 00:18:19,890
and then<font color="#E5E5E5"> finally based on the rules that</font>

478
00:18:17,640 --> 00:18:22,380
we feel we can safely turn on in our

479
00:18:19,890 --> 00:18:24,570
<font color="#E5E5E5">environment</font><font color="#CCCCCC"> we selectively</font><font color="#E5E5E5"> flip those on</font>

480
00:18:22,380 --> 00:18:27,810
we have full support<font color="#CCCCCC"> for your modern</font>

481
00:18:24,570 --> 00:18:31,620
manageability<font color="#E5E5E5"> stock so GP MDM SCCM</font>

482
00:18:27,810 --> 00:18:33,929
<font color="#CCCCCC">Intune are all supported I wanted to</font>

483
00:18:31,620 --> 00:18:36,810
pick one real-world<font color="#E5E5E5"> exploit example to</font>

484
00:18:33,930 --> 00:18:38,640
show<font color="#E5E5E5"> you guys how ASR can actually be</font>

485
00:18:36,810 --> 00:18:40,320
put to good<font color="#CCCCCC"> use and</font><font color="#E5E5E5"> so we're</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> look</font>

486
00:18:38,640 --> 00:18:42,840
at this one<font color="#E5E5E5"> that was</font><font color="#CCCCCC"> actually a really</font>

487
00:18:40,320 --> 00:18:46,110
<font color="#E5E5E5">interesting case of lock you</font><font color="#CCCCCC"> an</font>

488
00:18:42,840 --> 00:18:50,879
<font color="#E5E5E5">somewhere being installed on</font><font color="#CCCCCC"> our users</font>

489
00:18:46,110 --> 00:18:54,030
machines<font color="#E5E5E5"> via a</font><font color="#CCCCCC"> dde exploit so what we</font>

490
00:18:50,880 --> 00:18:57,990
start with<font color="#E5E5E5"> here is socially engineered</font>

491
00:18:54,030 --> 00:19:01,080
<font color="#E5E5E5">mouth spam so spam emails that law he</font>

492
00:18:57,990 --> 00:19:02,010
had actually rented a bit of the<font color="#CCCCCC"> occures</font>

493
00:19:01,080 --> 00:19:03,540
botnet

494
00:19:02,010 --> 00:19:05,430
so this botnet was basically

495
00:19:03,540 --> 00:19:07,470
distributing spam on their behalf

496
00:19:05,430 --> 00:19:10,470
so you get an email<font color="#E5E5E5"> that kind</font><font color="#CCCCCC"> of looks</font>

497
00:19:07,470 --> 00:19:12,450
like<font color="#CCCCCC"> that little picture there looks</font>

498
00:19:10,470 --> 00:19:15,180
<font color="#E5E5E5">like a pretty innocuous email it has a</font>

499
00:19:12,450 --> 00:19:18,000
word document<font color="#E5E5E5"> attachment and these were</font>

500
00:19:15,180 --> 00:19:19,950
<font color="#CCCCCC">very specifically targeted to folks</font><font color="#E5E5E5"> so</font>

501
00:19:18,000 --> 00:19:24,090
<font color="#E5E5E5">they made this quite enticing in terms</font>

502
00:19:19,950 --> 00:19:25,500
of a phishing attempt once the user<font color="#CCCCCC"> sort</font>

503
00:19:24,090 --> 00:19:26,669
<font color="#E5E5E5">of opens this word document because</font>

504
00:19:25,500 --> 00:19:29,700
they're curious<font color="#E5E5E5"> about what they're being</font>

505
00:19:26,670 --> 00:19:31,680
invoiced about<font color="#CCCCCC"> this is actually where we</font>

506
00:19:29,700 --> 00:19:34,050
<font color="#E5E5E5">have this sort of malicious</font><font color="#CCCCCC"> Word</font>

507
00:19:31,680 --> 00:19:35,760
document that<font color="#E5E5E5"> is leveraging the</font><font color="#CCCCCC"> dde</font>

508
00:19:34,050 --> 00:19:37,649
attack<font color="#E5E5E5"> vectors so for the folks in the</font>

509
00:19:35,760 --> 00:19:40,290
room<font color="#CCCCCC"> that aren't super familiar with</font>

510
00:19:37,650 --> 00:19:42,960
what this is<font color="#E5E5E5"> it stands for dynamic data</font>

511
00:19:40,290 --> 00:19:45,990
exchange<font color="#E5E5E5"> it's very similar</font><font color="#CCCCCC"> to macros and</font>

512
00:19:42,960 --> 00:19:48,420
only in the sense that it's a legitimate

513
00:19:45,990 --> 00:19:50,490
feature of office and be it helps you

514
00:19:48,420 --> 00:19:52,380
pull data from<font color="#E5E5E5"> one</font><font color="#CCCCCC"> document into another</font>

515
00:19:50,490 --> 00:19:56,490
or at least<font color="#E5E5E5"> that's the intended use case</font>

516
00:19:52,380 --> 00:19:58,020
so when<font color="#CCCCCC"> DDT kicks in you see</font><font color="#E5E5E5"> you see a</font>

517
00:19:56,490 --> 00:19:59,700
dialog box<font color="#E5E5E5"> similar</font><font color="#CCCCCC"> to</font>

518
00:19:58,020 --> 00:20:01,620
one here and we'll see<font color="#E5E5E5"> that in the demo</font>

519
00:19:59,700 --> 00:20:02,820
example in a second<font color="#CCCCCC"> looks</font><font color="#E5E5E5"> pretty</font>

520
00:20:01,620 --> 00:20:05,159
innocuous it doesn't<font color="#E5E5E5"> really</font><font color="#CCCCCC"> say anything</font>

521
00:20:02,820 --> 00:20:07,830
<font color="#E5E5E5">scary</font><font color="#CCCCCC"> it's like oh I want to pull data</font>

522
00:20:05,160 --> 00:20:09,180
from<font color="#E5E5E5"> one</font><font color="#CCCCCC"> location to another cool</font><font color="#E5E5E5"> now</font>

523
00:20:07,830 --> 00:20:11,220
<font color="#E5E5E5">little do</font><font color="#CCCCCC"> you know is</font><font color="#E5E5E5"> that there is a</font>

524
00:20:09,180 --> 00:20:12,840
hidden formula in this Word<font color="#CCCCCC"> document</font>

525
00:20:11,220 --> 00:20:14,760
they actually did a<font color="#E5E5E5"> really good job with</font>

526
00:20:12,840 --> 00:20:17,250
<font color="#E5E5E5">it they</font><font color="#CCCCCC"> hid it on</font><font color="#E5E5E5"> the second page of the</font>

527
00:20:14,760 --> 00:20:18,930
document<font color="#E5E5E5"> so</font><font color="#CCCCCC"> it's right not clear as to</font>

528
00:20:17,250 --> 00:20:21,510
what's<font color="#E5E5E5"> going on it just looks like kind</font>

529
00:20:18,930 --> 00:20:24,210
of<font color="#E5E5E5"> a blank</font><font color="#CCCCCC"> document and what you see</font>

530
00:20:21,510 --> 00:20:26,100
<font color="#CCCCCC">here in the black box is</font><font color="#E5E5E5"> exactly the</font>

531
00:20:24,210 --> 00:20:28,530
hidden formula that<font color="#E5E5E5"> was in this document</font>

532
00:20:26,100 --> 00:20:30,449
so you<font color="#E5E5E5"> can see the de call there but</font>

533
00:20:28,530 --> 00:20:32,490
<font color="#E5E5E5">instead</font><font color="#CCCCCC"> of pulling data from</font><font color="#E5E5E5"> one dog to</font>

534
00:20:30,450 --> 00:20:35,130
another<font color="#E5E5E5"> and what you see is we're trying</font>

535
00:20:32,490 --> 00:20:39,450
to<font color="#E5E5E5"> execute a PowerShell payload via</font>

536
00:20:35,130 --> 00:20:41,700
cmd.exe<font color="#E5E5E5"> now what happens when CMD runs</font>

537
00:20:39,450 --> 00:20:45,510
this<font color="#CCCCCC"> powershell</font><font color="#E5E5E5"> is it actually goes</font>

538
00:20:41,700 --> 00:20:48,060
ahead and pulls<font color="#E5E5E5"> down</font><font color="#CCCCCC"> another another</font>

539
00:20:45,510 --> 00:20:50,340
file so another downloader<font color="#CCCCCC"> and that too</font>

540
00:20:48,060 --> 00:20:51,870
gets run<font color="#CCCCCC"> via powershell now what we're</font>

541
00:20:50,340 --> 00:20:54,149
doing<font color="#CCCCCC"> here is we're again reaching out</font>

542
00:20:51,870 --> 00:20:58,020
to a bunch<font color="#E5E5E5"> of URLs</font><font color="#CCCCCC"> that's really the c2</font>

543
00:20:54,150 --> 00:20:59,940
and once you reach out<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the c2</font><font color="#E5E5E5"> you end</font>

544
00:20:58,020 --> 00:21:02,400
up downloading the<font color="#CCCCCC"> locky</font><font color="#E5E5E5"> ransomware</font>

545
00:20:59,940 --> 00:21:04,800
<font color="#E5E5E5">binary</font><font color="#CCCCCC"> it's encoded it gets decoded on</font>

546
00:21:02,400 --> 00:21:07,290
your local<font color="#E5E5E5"> machine</font><font color="#CCCCCC"> and I think everyone</font>

547
00:21:04,800 --> 00:21:09,030
else knows the end of the story<font color="#CCCCCC"> the</font>

548
00:21:07,290 --> 00:21:10,290
files that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> stoled on</font><font color="#E5E5E5"> your stored on</font>

549
00:21:09,030 --> 00:21:12,180
your local<font color="#E5E5E5"> hard drive end up getting</font>

550
00:21:10,290 --> 00:21:13,649
encrypted you see<font color="#E5E5E5"> a</font><font color="#CCCCCC"> scary</font><font color="#E5E5E5"> message like</font>

551
00:21:12,180 --> 00:21:16,620
the one<font color="#E5E5E5"> over</font><font color="#CCCCCC"> there that's actually</font><font color="#E5E5E5"> gonna</font>

552
00:21:13,650 --> 00:21:18,120
be<font color="#CCCCCC"> your desktop screen</font><font color="#E5E5E5"> scary now if you</font>

553
00:21:16,620 --> 00:21:21,300
think<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to this slide that</font><font color="#E5E5E5"> we looked</font>

554
00:21:18,120 --> 00:21:24,000
at with the example ASR rules<font color="#E5E5E5"> one of</font>

555
00:21:21,300 --> 00:21:26,790
them was called prevent<font color="#E5E5E5"> office from</font>

556
00:21:24,000 --> 00:21:29,810
<font color="#E5E5E5">opening child processes now imagine a</font>

557
00:21:26,790 --> 00:21:32,250
<font color="#CCCCCC">world</font><font color="#E5E5E5"> in which this rule was enabled</font>

558
00:21:29,810 --> 00:21:34,320
essentially only<font color="#CCCCCC"> the first two</font><font color="#E5E5E5"> stages of</font>

559
00:21:32,250 --> 00:21:36,540
<font color="#CCCCCC">this attack are applicable</font><font color="#E5E5E5"> because the</font>

560
00:21:34,320 --> 00:21:38,340
first one is of course<font color="#E5E5E5"> the</font><font color="#CCCCCC"> mouse spam is</font>

561
00:21:36,540 --> 00:21:40,320
going out doesn't really affect that

562
00:21:38,340 --> 00:21:42,840
<font color="#E5E5E5">piece of course I can open that word</font>

563
00:21:40,320 --> 00:21:45,179
<font color="#E5E5E5">document</font><font color="#CCCCCC"> that works fine</font><font color="#E5E5E5"> but as soon as</font>

564
00:21:42,840 --> 00:21:47,699
word tries to open<font color="#CCCCCC"> that CMD that you</font>

565
00:21:45,180 --> 00:21:49,500
remember from the hidden formula it

566
00:21:47,700 --> 00:21:51,870
can't because it's being blocked<font color="#E5E5E5"> from</font>

567
00:21:49,500 --> 00:21:52,890
<font color="#E5E5E5">opening child processes by this rule</font><font color="#CCCCCC"> so</font>

568
00:21:51,870 --> 00:21:55,770
let's take a look<font color="#CCCCCC"> at what this</font><font color="#E5E5E5"> looks</font>

569
00:21:52,890 --> 00:21:59,160
<font color="#CCCCCC">like in practice</font><font color="#E5E5E5"> with this demo video so</font>

570
00:21:55,770 --> 00:22:01,350
that's the<font color="#CCCCCC"> email you see my user</font><font color="#E5E5E5"> for</font>

571
00:21:59,160 --> 00:22:04,620
thing opening<font color="#E5E5E5"> this word</font><font color="#CCCCCC"> documents the</font>

572
00:22:01,350 --> 00:22:09,659
<font color="#E5E5E5">first page is empty protected views up</font>

573
00:22:04,620 --> 00:22:10,908
there to protect<font color="#E5E5E5"> you but doesn't we go</font>

574
00:22:09,660 --> 00:22:12,499
ahead<font color="#CCCCCC"> and click through</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> DD</font>

575
00:22:10,909 --> 00:22:14,840
a message prompt<font color="#CCCCCC"> because it doesn't look</font>

576
00:22:12,499 --> 00:22:16,369
terrifying<font color="#E5E5E5"> enough and now we're</font><font color="#CCCCCC"> seeing</font>

577
00:22:14,840 --> 00:22:18,859
<font color="#CCCCCC">something about some inaccessible data</font>

578
00:22:16,369 --> 00:22:20,418
but we see that<font color="#E5E5E5"> block down there fun</font>

579
00:22:18,859 --> 00:22:23,149
fact that<font color="#CCCCCC"> notification is fully</font>

580
00:22:20,419 --> 00:22:24,619
customizable<font color="#CCCCCC"> so</font><font color="#E5E5E5"> any</font><font color="#CCCCCC"> tech ops person can</font>

581
00:22:23,149 --> 00:22:26,840
kind of put whatever text<font color="#E5E5E5"> they want in</font>

582
00:22:24,619 --> 00:22:28,639
there what<font color="#E5E5E5"> you see here is the hidden</font>

583
00:22:26,840 --> 00:22:31,209
formula that we took a look at that's

584
00:22:28,639 --> 00:22:34,609
very cleverly hidden on the second page

585
00:22:31,210 --> 00:22:36,679
<font color="#CCCCCC">and as I promised earlier with audit</font>

586
00:22:34,609 --> 00:22:38,269
mode we also write<font color="#CCCCCC"> out these</font><font color="#E5E5E5"> logs when</font>

587
00:22:36,679 --> 00:22:41,149
you're in block mode so<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> see that</font>

588
00:22:38,269 --> 00:22:42,979
log written<font color="#E5E5E5"> to the to the console to</font><font color="#CCCCCC"> the</font>

589
00:22:41,149 --> 00:22:47,059
Windows<font color="#E5E5E5"> Event log over</font><font color="#CCCCCC"> there that proves</font>

590
00:22:42,979 --> 00:22:48,619
<font color="#E5E5E5">that I wasn't</font><font color="#CCCCCC"> lying</font><font color="#E5E5E5"> and then one</font><font color="#CCCCCC"> final</font>

591
00:22:47,059 --> 00:22:50,149
quick<font color="#E5E5E5"> note before I</font><font color="#CCCCCC"> handover it to</font><font color="#E5E5E5"> mark</font>

592
00:22:48,619 --> 00:22:52,039
to talk to us a<font color="#E5E5E5"> bit more about the</font>

593
00:22:50,149 --> 00:22:54,349
exploit mitigations as part of exploit

594
00:22:52,039 --> 00:22:56,509
protection we're seeing<font color="#E5E5E5"> a really cool</font>

595
00:22:54,349 --> 00:22:57,859
trend and let's just<font color="#E5E5E5"> take this one rule</font>

596
00:22:56,509 --> 00:22:59,779
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we've been looking at as an example</font>

597
00:22:57,859 --> 00:23:03,830
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is prevent office from opening</font>

598
00:22:59,779 --> 00:23:06,739
child processes<font color="#CCCCCC"> worried especially as</font>

599
00:23:03,830 --> 00:23:08,779
part<font color="#CCCCCC"> of office</font><font color="#E5E5E5"> seems to be being used as</font>

600
00:23:06,739 --> 00:23:10,940
the sort of delivery method<font color="#E5E5E5"> do sure</font>

601
00:23:08,779 --> 00:23:13,249
these<font color="#E5E5E5"> days of a bunch of targeted</font>

602
00:23:10,940 --> 00:23:14,899
attacks<font color="#E5E5E5"> and so what we're really seeing</font>

603
00:23:13,249 --> 00:23:17,539
is<font color="#E5E5E5"> that some of these rules can</font><font color="#CCCCCC"> be very</font>

604
00:23:14,899 --> 00:23:19,820
<font color="#CCCCCC">effective in terms of 0d neutralizers so</font>

605
00:23:17,539 --> 00:23:22,429
blocking sort of exploit attempts before

606
00:23:19,820 --> 00:23:24,289
<font color="#E5E5E5">there's</font><font color="#CCCCCC"> even a patch</font><font color="#E5E5E5"> for that so have a</font>

607
00:23:22,429 --> 00:23:27,590
couple of<font color="#E5E5E5"> different</font><font color="#CCCCCC"> examples here</font><font color="#E5E5E5"> this</font>

608
00:23:24,289 --> 00:23:29,090
<font color="#CCCCCC">CVE</font><font color="#E5E5E5"> and actually these</font><font color="#CCCCCC"> CBE's are all in</font>

609
00:23:27,590 --> 00:23:32,418
<font color="#CCCCCC">different products</font><font color="#E5E5E5"> so this</font><font color="#CCCCCC"> CVE is a</font>

610
00:23:29,090 --> 00:23:34,459
<font color="#E5E5E5">civilian in dotnet but in this case word</font>

611
00:23:32,419 --> 00:23:36,979
was used<font color="#E5E5E5"> as</font><font color="#CCCCCC"> the initial</font><font color="#E5E5E5"> sort of delivery</font>

612
00:23:34,460 --> 00:23:38,869
vector<font color="#E5E5E5"> the payload that</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> downloaded</font>

613
00:23:36,979 --> 00:23:41,090
to the user the victim's machine here

614
00:23:38,869 --> 00:23:43,249
was finfisher so this is sort of a

615
00:23:41,090 --> 00:23:45,619
commercial surveillance<font color="#CCCCCC"> package for</font>

616
00:23:43,249 --> 00:23:49,039
those who are<font color="#E5E5E5"> familiar with it</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> in</font>

617
00:23:45,619 --> 00:23:51,109
this case<font color="#CCCCCC"> again if you had that No Child</font>

618
00:23:49,039 --> 00:23:54,710
proc rule turned on this would<font color="#E5E5E5"> not have</font>

619
00:23:51,109 --> 00:23:58,489
<font color="#E5E5E5">been effective</font><font color="#CCCCCC"> a second example this CVE</font>

620
00:23:54,710 --> 00:24:00,559
<font color="#E5E5E5">is a</font><font color="#CCCCCC"> CBE in Adobe Flash so again nothing</font>

621
00:23:58,489 --> 00:24:03,080
<font color="#E5E5E5">related</font><font color="#CCCCCC"> to word but word</font><font color="#E5E5E5"> is being used</font>

622
00:24:00,559 --> 00:24:05,450
as that sort of delivery vector<font color="#CCCCCC"> the</font>

623
00:24:03,080 --> 00:24:08,239
flash<font color="#E5E5E5"> the malicious flash was embedded</font>

624
00:24:05,450 --> 00:24:10,070
via ActiveX into this word<font color="#E5E5E5"> document the</font>

625
00:24:08,239 --> 00:24:11,479
final payload for this which was

626
00:24:10,070 --> 00:24:13,849
<font color="#E5E5E5">actually turned out</font><font color="#CCCCCC"> to be the black</font>

627
00:24:11,479 --> 00:24:16,399
<font color="#CCCCCC">oasis campaign final payload was also</font>

628
00:24:13,849 --> 00:24:19,970
finfisher so surveillance<font color="#E5E5E5"> these are very</font>

629
00:24:16,399 --> 00:24:22,539
highly targeted attacks<font color="#CCCCCC"> but again</font><font color="#E5E5E5"> with</font>

630
00:24:19,970 --> 00:24:25,269
child proc turned off word can't open

631
00:24:22,539 --> 00:24:28,359
that flash objects are safe there<font color="#E5E5E5"> and</font>

632
00:24:25,269 --> 00:24:30,579
then<font color="#E5E5E5"> finally this</font><font color="#CCCCCC"> CV is</font><font color="#E5E5E5"> actually a CV in</font>

633
00:24:28,359 --> 00:24:33,158
office<font color="#E5E5E5"> but it only applies to legacy</font>

634
00:24:30,579 --> 00:24:35,049
office<font color="#E5E5E5"> 2010</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> earlier the ones that</font>

635
00:24:33,159 --> 00:24:38,199
were not compiled with<font color="#E5E5E5"> force</font><font color="#CCCCCC"> ASL are</font>

636
00:24:35,049 --> 00:24:41,109
turned on<font color="#CCCCCC"> this</font><font color="#E5E5E5"> was also seen exploited</font>

637
00:24:38,199 --> 00:24:44,109
in the<font color="#E5E5E5"> wild delivered via RT F in this</font>

638
00:24:41,109 --> 00:24:45,668
<font color="#CCCCCC">case but again you see that</font><font color="#E5E5E5"> same exact</font>

639
00:24:44,109 --> 00:24:47,918
<font color="#CCCCCC">role being</font><font color="#E5E5E5"> able to kick in over there</font>

640
00:24:45,669 --> 00:24:50,289
protect you before<font color="#E5E5E5"> the patch is even</font>

641
00:24:47,919 --> 00:24:54,429
<font color="#E5E5E5">available final payload in this case was</font>

642
00:24:50,289 --> 00:24:56,469
also<font color="#CCCCCC"> a rat</font><font color="#E5E5E5"> tool essentially so with that</font>

643
00:24:54,429 --> 00:24:58,690
<font color="#CCCCCC">I promised I would hand over to</font><font color="#E5E5E5"> mark to</font>

644
00:24:56,469 --> 00:25:01,089
talk to us a little<font color="#CCCCCC"> bit about</font><font color="#E5E5E5"> exploit</font>

645
00:24:58,690 --> 00:25:05,229
protection which is<font color="#CCCCCC"> our second hat</font>

646
00:25:01,089 --> 00:25:07,749
thank you right so as Jessica<font color="#CCCCCC"> mentioned</font>

647
00:25:05,229 --> 00:25:09,759
<font color="#E5E5E5">exploit protection is the the second</font>

648
00:25:07,749 --> 00:25:13,449
piece of Windows Defender exploit guard

649
00:25:09,759 --> 00:25:15,039
and it's kind of the functionality that

650
00:25:13,449 --> 00:25:18,099
<font color="#CCCCCC">allows you to apply mitigations to</font>

651
00:25:15,039 --> 00:25:21,219
applications<font color="#E5E5E5"> and kind of replace</font><font color="#CCCCCC"> Emmet's</font>

652
00:25:18,099 --> 00:25:23,889
<font color="#E5E5E5">so what we had in Windows 10 before</font><font color="#CCCCCC"> the</font>

653
00:25:21,219 --> 00:25:25,569
<font color="#CCCCCC">full creators update</font><font color="#E5E5E5"> as the result of a</font>

654
00:25:23,889 --> 00:25:28,599
long evolution of security mitigations

655
00:25:25,569 --> 00:25:30,969
in Windows<font color="#E5E5E5"> is a whole bunch of platform</font>

656
00:25:28,599 --> 00:25:34,239
mitigations<font color="#CCCCCC"> that were available for you</font>

657
00:25:30,969 --> 00:25:36,099
to use<font color="#E5E5E5"> things</font><font color="#CCCCCC"> like depth</font><font color="#E5E5E5"> to prevent you</font>

658
00:25:34,239 --> 00:25:38,499
from executing code on the heap or data

659
00:25:36,099 --> 00:25:40,239
on the heap as if it's code<font color="#CCCCCC"> ASLR that</font>

660
00:25:38,499 --> 00:25:44,169
randomizes where things are<font color="#CCCCCC"> loaded in a</font>

661
00:25:40,239 --> 00:25:45,759
program CFG<font color="#E5E5E5"> ACG all of these kind of</font>

662
00:25:44,169 --> 00:25:47,979
low-level mitigations<font color="#CCCCCC"> that could be</font>

663
00:25:45,759 --> 00:25:49,539
turned<font color="#E5E5E5"> on and</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> Dave Weston and</font>

664
00:25:47,979 --> 00:25:51,969
<font color="#E5E5E5">Sarah had mentioned in the</font><font color="#CCCCCC"> previous talk</font>

665
00:25:49,539 --> 00:25:54,129
<font color="#E5E5E5">a lot of these mitigations are applied</font>

666
00:25:51,969 --> 00:25:58,659
to<font color="#CCCCCC"> inbox</font><font color="#E5E5E5"> components in the operating</font>

667
00:25:54,129 --> 00:26:00,218
system<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the edge browser and to ie to</font>

668
00:25:58,659 --> 00:26:02,229
make them super secure and hard for

669
00:26:00,219 --> 00:26:04,629
attackers to exploit<font color="#E5E5E5"> but we didn't</font>

670
00:26:02,229 --> 00:26:06,159
really have<font color="#CCCCCC"> a good way for</font><font color="#E5E5E5"> users to go</font>

671
00:26:04,629 --> 00:26:07,629
and configure<font color="#E5E5E5"> them for their legacy</font>

672
00:26:06,159 --> 00:26:09,159
applications that they wanted<font color="#E5E5E5"> to</font><font color="#CCCCCC"> protect</font>

673
00:26:07,629 --> 00:26:10,689
and they were<font color="#E5E5E5"> hidden away in the</font>

674
00:26:09,159 --> 00:26:13,179
registry behind a<font color="#E5E5E5"> kind of very opaque</font>

675
00:26:10,690 --> 00:26:16,419
registry key<font color="#E5E5E5"> and it was not easy for</font>

676
00:26:13,179 --> 00:26:18,069
<font color="#E5E5E5">people to</font><font color="#CCCCCC"> actually enable</font><font color="#E5E5E5"> them we also</font>

677
00:26:16,419 --> 00:26:20,169
didn't<font color="#E5E5E5"> before the full creators update</font>

678
00:26:18,069 --> 00:26:21,999
we didn't have a way<font color="#CCCCCC"> for users</font><font color="#E5E5E5"> to enable</font>

679
00:26:20,169 --> 00:26:24,639
<font color="#E5E5E5">these in an audit mode and kind of try</font>

680
00:26:21,999 --> 00:26:25,899
them out see<font color="#CCCCCC"> what would break</font><font color="#E5E5E5"> let's see</font>

681
00:26:24,639 --> 00:26:28,178
if<font color="#E5E5E5"> their enterprise could actually be</font>

682
00:26:25,899 --> 00:26:30,609
protected with these mitigations without

683
00:26:28,179 --> 00:26:32,109
impacting productivity so what we wanted

684
00:26:30,609 --> 00:26:35,139
to<font color="#E5E5E5"> do in the full creators update as</font>

685
00:26:32,109 --> 00:26:37,389
part of<font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> fooling this</font><font color="#E5E5E5"> whole that</font>

686
00:26:35,140 --> 00:26:40,120
Emmet's being end-of-life created is

687
00:26:37,390 --> 00:26:42,910
have an easy<font color="#E5E5E5"> way for people to configure</font>

688
00:26:40,120 --> 00:26:45,280
<font color="#E5E5E5">these existing inbox mitigations for</font>

689
00:26:42,910 --> 00:26:47,530
their legacy applications and also use

690
00:26:45,280 --> 00:26:49,780
audit<font color="#E5E5E5"> mode to try them out</font><font color="#CCCCCC"> and see</font><font color="#E5E5E5"> what</font>

691
00:26:47,530 --> 00:26:51,010
would<font color="#CCCCCC"> work and what wouldn't work</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we</font>

692
00:26:49,780 --> 00:26:53,500
did a<font color="#E5E5E5"> bunch of work kind of on these</font>

693
00:26:51,010 --> 00:26:56,140
existing mitigations<font color="#E5E5E5"> but obviously that</font>

694
00:26:53,500 --> 00:26:57,370
wouldn't<font color="#E5E5E5"> be</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> enough</font><font color="#CCCCCC"> to really you</font>

695
00:26:56,140 --> 00:26:59,560
know make<font color="#CCCCCC"> up</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> Emmett being</font><font color="#E5E5E5"> end of</font>

696
00:26:57,370 --> 00:27:01,300
<font color="#E5E5E5">life so we realized that for some of the</font>

697
00:26:59,560 --> 00:27:03,600
mitigations<font color="#CCCCCC"> Emmett provided we really</font>

698
00:27:01,300 --> 00:27:06,340
needed<font color="#E5E5E5"> to add them in box in Windows</font>

699
00:27:03,600 --> 00:27:08,379
they do provide<font color="#E5E5E5"> value for legacy</font>

700
00:27:06,340 --> 00:27:11,439
applications that can't be rebuilt with

701
00:27:08,380 --> 00:27:14,140
CFG<font color="#E5E5E5"> and can't be</font><font color="#CCCCCC"> recompiled</font><font color="#E5E5E5"> to use the</font>

702
00:27:11,440 --> 00:27:15,460
<font color="#E5E5E5">latest mitigations in the OS and you</font>

703
00:27:14,140 --> 00:27:16,870
<font color="#E5E5E5">know while they're not perfectly secure</font>

704
00:27:15,460 --> 00:27:19,390
they do add value<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we do want to</font>

705
00:27:16,870 --> 00:27:22,090
<font color="#E5E5E5">allow</font><font color="#CCCCCC"> people</font><font color="#E5E5E5"> to use them as a fully</font>

706
00:27:19,390 --> 00:27:24,550
supported<font color="#CCCCCC"> inbox feature in Windows from</font>

707
00:27:22,090 --> 00:27:27,850
now on as part of<font color="#E5E5E5"> that</font><font color="#CCCCCC"> work we also</font>

708
00:27:24,550 --> 00:27:29,800
added<font color="#E5E5E5"> a new mitigation so it's kind of</font>

709
00:27:27,850 --> 00:27:31,330
even even<font color="#CCCCCC"> better than Emmett was we</font>

710
00:27:29,800 --> 00:27:33,399
didn't<font color="#E5E5E5"> just directly port what was there</font>

711
00:27:31,330 --> 00:27:35,290
<font color="#E5E5E5">and we really looked at kind of what was</font>

712
00:27:33,400 --> 00:27:37,540
the<font color="#E5E5E5"> overall</font><font color="#CCCCCC"> States once we</font><font color="#E5E5E5"> added these</font>

713
00:27:35,290 --> 00:27:38,950
and only ported the<font color="#E5E5E5"> Emmett mitigations</font>

714
00:27:37,540 --> 00:27:41,170
<font color="#E5E5E5">that make sense and</font><font color="#CCCCCC"> actually add value</font>

715
00:27:38,950 --> 00:27:43,180
<font color="#CCCCCC">in the modern</font><font color="#E5E5E5"> kind of exploit landscape</font>

716
00:27:41,170 --> 00:27:44,980
we didn't port everything like the<font color="#E5E5E5"> the</font>

717
00:27:43,180 --> 00:27:49,960
anti heap spray and some mitigations

718
00:27:44,980 --> 00:27:53,820
<font color="#CCCCCC">that really</font><font color="#E5E5E5"> don't add value</font><font color="#CCCCCC"> in 2017</font><font color="#E5E5E5"> so</font>

719
00:27:49,960 --> 00:27:57,070
<font color="#CCCCCC">I'm going to</font><font color="#E5E5E5"> kind of talk about a real</font>

720
00:27:53,820 --> 00:27:59,470
exploit example that shows<font color="#E5E5E5"> how these</font>

721
00:27:57,070 --> 00:28:01,540
mitigations can be used against<font color="#CCCCCC"> a legacy</font>

722
00:27:59,470 --> 00:28:03,820
application I'm going<font color="#CCCCCC"> to be using</font>

723
00:28:01,540 --> 00:28:06,610
<font color="#CCCCCC">Firefox because</font><font color="#E5E5E5"> it's a</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> a real-world</font>

724
00:28:03,820 --> 00:28:09,340
<font color="#E5E5E5">case there was an exploit discovered in</font>

725
00:28:06,610 --> 00:28:11,979
the wild<font color="#CCCCCC"> real</font><font color="#E5E5E5"> zero day it was actually</font>

726
00:28:09,340 --> 00:28:13,689
<font color="#CCCCCC">discovered in 2016 in November targeting</font>

727
00:28:11,980 --> 00:28:16,680
<font color="#E5E5E5">the tor browser which people use to</font>

728
00:28:13,690 --> 00:28:19,900
browse<font color="#CCCCCC"> the web you know anonymously and</font>

729
00:28:16,680 --> 00:28:22,000
Firefox kind of<font color="#CCCCCC"> back</font><font color="#E5E5E5"> then didn't use a</font>

730
00:28:19,900 --> 00:28:23,560
<font color="#E5E5E5">lot of the latest security mitigations</font>

731
00:28:22,000 --> 00:28:25,990
that<font color="#E5E5E5"> were available in Windows even if</font>

732
00:28:23,560 --> 00:28:27,520
you are using<font color="#E5E5E5"> Windows 10 it was</font>

733
00:28:25,990 --> 00:28:29,770
<font color="#E5E5E5">relatively easy</font><font color="#CCCCCC"> for an attacker to</font>

734
00:28:27,520 --> 00:28:32,110
exploit Firefox<font color="#E5E5E5"> the good news is that</font>

735
00:28:29,770 --> 00:28:34,420
Firefox responded very<font color="#CCCCCC"> quickly and</font>

736
00:28:32,110 --> 00:28:35,679
patched this so for<font color="#E5E5E5"> the demo I'm</font><font color="#CCCCCC"> going</font>

737
00:28:34,420 --> 00:28:38,230
<font color="#E5E5E5">to be using I've seen an old unpatched</font>

738
00:28:35,680 --> 00:28:40,030
version<font color="#E5E5E5"> and Firefox is moving forwards</font>

739
00:28:38,230 --> 00:28:42,130
<font color="#E5E5E5">and adding new security mitigations in</font>

740
00:28:40,030 --> 00:28:43,750
the current<font color="#E5E5E5"> versions so I don't beat up</font>

741
00:28:42,130 --> 00:28:46,870
on them<font color="#E5E5E5"> you know this was a point</font><font color="#CCCCCC"> in</font>

742
00:28:43,750 --> 00:28:48,280
<font color="#E5E5E5">time you're more than a year</font><font color="#CCCCCC"> ago or and</font>

743
00:28:46,870 --> 00:28:50,050
<font color="#E5E5E5">you know they've</font><font color="#CCCCCC"> made great</font><font color="#E5E5E5"> strides in</font>

744
00:28:48,280 --> 00:28:52,240
<font color="#E5E5E5">terms of security but this is a good</font>

745
00:28:50,050 --> 00:28:56,139
<font color="#E5E5E5">kind of</font><font color="#CCCCCC"> legacy application type of view</font>

746
00:28:52,240 --> 00:28:57,820
that we can demo<font color="#E5E5E5"> obviously the tor</font>

747
00:28:56,140 --> 00:29:00,160
browser<font color="#E5E5E5"> is a juicy target</font><font color="#CCCCCC"> for people to</font>

748
00:28:57,820 --> 00:29:02,889
go after so being able<font color="#CCCCCC"> to apply</font>

749
00:29:00,160 --> 00:29:05,559
mitigations to browsers and processes

750
00:29:02,890 --> 00:29:07,420
<font color="#E5E5E5">like this or things that are targeted is</font>

751
00:29:05,559 --> 00:29:09,399
something that<font color="#CCCCCC"> users want</font><font color="#E5E5E5"> to do because</font>

752
00:29:07,420 --> 00:29:10,990
they<font color="#CCCCCC"> know that</font><font color="#E5E5E5"> people have a lot of</font>

753
00:29:09,400 --> 00:29:12,460
money that they're actually targeting in

754
00:29:10,990 --> 00:29:15,850
terms of researching<font color="#CCCCCC"> and developing</font>

755
00:29:12,460 --> 00:29:17,320
exploits for products<font color="#CCCCCC"> like this</font><font color="#E5E5E5"> the bad</font>

756
00:29:15,850 --> 00:29:18,820
<font color="#E5E5E5">guys out</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> you know if they want to</font>

757
00:29:17,320 --> 00:29:19,840
<font color="#E5E5E5">get you and I have enough money they're</font>

758
00:29:18,820 --> 00:29:21,790
probably going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be able to put</font>

759
00:29:19,840 --> 00:29:24,100
together a<font color="#E5E5E5"> working exploit and the more</font>

760
00:29:21,790 --> 00:29:27,040
mitigations that<font color="#E5E5E5"> you can enable the</font>

761
00:29:24,100 --> 00:29:28,000
better off you're going to<font color="#CCCCCC"> be so the</font>

762
00:29:27,040 --> 00:29:31,600
vulnerability<font color="#E5E5E5"> that I'm going to be</font>

763
00:29:28,000 --> 00:29:34,860
<font color="#E5E5E5">demoing is the CVE which was a use after</font>

764
00:29:31,600 --> 00:29:37,120
free<font color="#E5E5E5"> in the firefox SVG animation code</font>

765
00:29:34,860 --> 00:29:39,300
as I said it was discovered<font color="#E5E5E5"> in the wild</font>

766
00:29:37,120 --> 00:29:42,459
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then patched</font><font color="#CCCCCC"> within a month by</font>

767
00:29:39,300 --> 00:29:44,260
<font color="#E5E5E5">Mozilla the targeted machine is going to</font>

768
00:29:42,460 --> 00:29:45,940
<font color="#E5E5E5">be using an old</font><font color="#CCCCCC"> version and I'm going</font><font color="#E5E5E5"> to</font>

769
00:29:44,260 --> 00:29:50,050
be<font color="#E5E5E5"> running</font><font color="#CCCCCC"> Metasploit</font><font color="#E5E5E5"> it's kind of</font>

770
00:29:45,940 --> 00:29:52,270
existing exploit library to target the

771
00:29:50,050 --> 00:29:54,010
vulnerable machine and just<font color="#CCCCCC"> I have</font>

772
00:29:52,270 --> 00:29:55,330
something<font color="#CCCCCC"> visible that</font><font color="#E5E5E5"> you guys can see</font>

773
00:29:54,010 --> 00:29:58,690
when the exploit succeeds I'm going to

774
00:29:55,330 --> 00:30:00,600
be launching<font color="#E5E5E5"> kxe so that familiar you</font>

775
00:29:58,690 --> 00:30:02,980
know attacker

776
00:30:00,600 --> 00:30:08,590
<font color="#CCCCCC">payday of</font><font color="#E5E5E5"> having the</font><font color="#CCCCCC"> calc</font><font color="#E5E5E5"> pup is is</font>

777
00:30:02,980 --> 00:30:10,030
gonna be<font color="#CCCCCC"> the the payday so before we</font>

778
00:30:08,590 --> 00:30:11,530
actually go<font color="#CCCCCC"> through</font><font color="#E5E5E5"> and look at the</font>

779
00:30:10,030 --> 00:30:12,460
video of<font color="#E5E5E5"> the demo running</font><font color="#CCCCCC"> I wanted to</font>

780
00:30:11,530 --> 00:30:14,230
kind of walk<font color="#CCCCCC"> you through what the</font>

781
00:30:12,460 --> 00:30:16,929
<font color="#E5E5E5">exploit is doing under the covers so you</font>

782
00:30:14,230 --> 00:30:18,250
can kind of understand the kind<font color="#CCCCCC"> of steps</font>

783
00:30:16,929 --> 00:30:20,679
<font color="#CCCCCC">that</font><font color="#E5E5E5"> the attacker had to go through to</font>

784
00:30:18,250 --> 00:30:21,790
get their code execution<font color="#E5E5E5"> to work and a</font>

785
00:30:20,679 --> 00:30:23,410
lot of<font color="#CCCCCC"> these steps are kind</font><font color="#E5E5E5"> of the</font>

786
00:30:21,790 --> 00:30:24,850
<font color="#E5E5E5">things that people would be doing if</font>

787
00:30:23,410 --> 00:30:26,559
they<font color="#CCCCCC"> were</font><font color="#E5E5E5"> attacking edge or</font><font color="#CCCCCC"> chrome as</font>

788
00:30:24,850 --> 00:30:28,959
well they may<font color="#E5E5E5"> have different do our</font>

789
00:30:26,559 --> 00:30:30,940
container<font color="#CCCCCC"> sign boxes and</font><font color="#E5E5E5"> things I have</font>

790
00:30:28,960 --> 00:30:32,559
to bypass<font color="#E5E5E5"> but a lot</font><font color="#CCCCCC"> of these</font><font color="#E5E5E5"> techniques</font>

791
00:30:30,940 --> 00:30:35,500
are kind<font color="#CCCCCC"> of what modern attackers have</font>

792
00:30:32,559 --> 00:30:36,940
to do to exploit programs we can<font color="#E5E5E5"> then</font>

793
00:30:35,500 --> 00:30:38,470
look at<font color="#E5E5E5"> the different stages</font><font color="#CCCCCC"> and see</font>

794
00:30:36,940 --> 00:30:41,410
where the mitigations have a chance to

795
00:30:38,470 --> 00:30:43,870
block the exploit<font color="#E5E5E5"> so initially the</font>

796
00:30:41,410 --> 00:30:45,280
vulnerable browser is<font color="#CCCCCC"> going to be</font>

797
00:30:43,870 --> 00:30:47,770
loading a<font color="#CCCCCC"> web page that the attacker</font>

798
00:30:45,280 --> 00:30:48,970
controls<font color="#E5E5E5"> and</font><font color="#CCCCCC"> JavaScript that the</font>

799
00:30:47,770 --> 00:30:51,550
attacker<font color="#CCCCCC"> has written</font><font color="#E5E5E5"> is going to trigger</font>

800
00:30:48,970 --> 00:30:52,900
this use after free<font color="#CCCCCC"> condition</font><font color="#E5E5E5"> so some</font>

801
00:30:51,550 --> 00:30:54,790
<font color="#CCCCCC">heap memory is going to be freed</font><font color="#E5E5E5"> and</font>

802
00:30:52,900 --> 00:30:56,140
replaced with attacker data but the

803
00:30:54,790 --> 00:30:58,629
program will still<font color="#E5E5E5"> think</font><font color="#CCCCCC"> that it has</font>

804
00:30:56,140 --> 00:30:59,740
<font color="#CCCCCC">it's objects that it is</font><font color="#E5E5E5"> allocated</font>

805
00:30:58,630 --> 00:31:00,380
sitting there<font color="#E5E5E5"> and it's going to try</font><font color="#CCCCCC"> and</font>

806
00:30:59,740 --> 00:31:02,940
use

807
00:31:00,380 --> 00:31:05,360
when that<font color="#CCCCCC"> gets triggered</font><font color="#E5E5E5"> the attacker</font>

808
00:31:02,940 --> 00:31:08,190
<font color="#E5E5E5">then has what's</font><font color="#CCCCCC"> called an arbitrary read</font>

809
00:31:05,360 --> 00:31:10,560
<font color="#CCCCCC">primitive so they corrupt something like</font>

810
00:31:08,190 --> 00:31:13,020
an array<font color="#E5E5E5"> which effectively by correcting</font>

811
00:31:10,560 --> 00:31:14,310
<font color="#E5E5E5">the length allows them to read anywhere</font>

812
00:31:13,020 --> 00:31:18,240
<font color="#E5E5E5">in process memory and they can even</font>

813
00:31:14,310 --> 00:31:20,940
write process<font color="#E5E5E5"> memory using this so by</font>

814
00:31:18,240 --> 00:31:23,310
<font color="#E5E5E5">reading memory they can</font><font color="#CCCCCC"> then break a</font><font color="#E5E5E5"> SLR</font>

815
00:31:20,940 --> 00:31:25,770
<font color="#CCCCCC">in a SLR if you remember is</font><font color="#E5E5E5"> the thing</font>

816
00:31:23,310 --> 00:31:27,840
that randomizes<font color="#CCCCCC"> where dll's are loaded</font>

817
00:31:25,770 --> 00:31:29,370
in the program the attacker needs to

818
00:31:27,840 --> 00:31:30,990
know where things are loaded<font color="#CCCCCC"> so they can</font>

819
00:31:29,370 --> 00:31:33,030
start piecing together code that they're

820
00:31:30,990 --> 00:31:34,650
going<font color="#E5E5E5"> to be using</font><font color="#CCCCCC"> later on</font><font color="#E5E5E5"> so by</font><font color="#CCCCCC"> reading</font>

821
00:31:33,030 --> 00:31:38,399
memory they find this one<font color="#E5E5E5"> dll that</font>

822
00:31:34,650 --> 00:31:39,990
Firefox has called<font color="#CCCCCC"> SQL</font><font color="#E5E5E5"> and from that</font><font color="#CCCCCC"> dll</font>

823
00:31:38,400 --> 00:31:41,970
they then go in there look and see what

824
00:31:39,990 --> 00:31:43,950
<font color="#CCCCCC">ap eyes are imported and they know that</font>

825
00:31:41,970 --> 00:31:45,240
<font color="#CCCCCC">for their export to work there's some</font>

826
00:31:43,950 --> 00:31:48,780
system<font color="#CCCCCC"> API</font><font color="#E5E5E5"> as they want to be able to</font>

827
00:31:45,240 --> 00:31:50,370
<font color="#E5E5E5">call that ntdll implements but instead</font>

828
00:31:48,780 --> 00:31:52,230
of<font color="#E5E5E5"> getting</font><font color="#CCCCCC"> them directly from ntdll</font>

829
00:31:50,370 --> 00:31:53,840
they're going to<font color="#E5E5E5"> basically kind of do a</font>

830
00:31:52,230 --> 00:31:56,880
level of indirection and go to this

831
00:31:53,840 --> 00:31:58,620
<font color="#CCCCCC">Firefox DLL that imports those api's and</font>

832
00:31:56,880 --> 00:32:02,460
use that import table as a way to find

833
00:31:58,620 --> 00:32:04,439
them<font color="#E5E5E5"> then once I have those API is they</font>

834
00:32:02,460 --> 00:32:06,300
can start<font color="#E5E5E5"> putting</font><font color="#CCCCCC"> them together in</font><font color="#E5E5E5"> a</font>

835
00:32:04,440 --> 00:32:07,470
kind<font color="#E5E5E5"> of a</font><font color="#CCCCCC"> rough</font><font color="#E5E5E5"> gadget payload and this</font>

836
00:32:06,300 --> 00:32:11,310
is<font color="#E5E5E5"> basically it stitching together</font>

837
00:32:07,470 --> 00:32:14,100
<font color="#E5E5E5">existing code in a binary in a kind of</font>

838
00:32:11,310 --> 00:32:15,300
unexpected way so<font color="#E5E5E5"> it'll execute what the</font>

839
00:32:14,100 --> 00:32:17,040
attacker<font color="#E5E5E5"> wants it to do and actually</font>

840
00:32:15,300 --> 00:32:19,320
<font color="#E5E5E5">give them code execution</font>

841
00:32:17,040 --> 00:32:21,389
they'll fill in a heap<font color="#CCCCCC"> memory with that</font>

842
00:32:19,320 --> 00:32:23,010
<font color="#E5E5E5">rock payload and then they'll trigger</font>

843
00:32:21,390 --> 00:32:25,140
what's called a stack pivot so normally

844
00:32:23,010 --> 00:32:27,540
your thread has some<font color="#E5E5E5"> memory which it's</font>

845
00:32:25,140 --> 00:32:29,220
using for a stack the attacker<font color="#E5E5E5"> can pivot</font>

846
00:32:27,540 --> 00:32:30,780
<font color="#E5E5E5">that and actually</font><font color="#CCCCCC"> make the stack point</font>

847
00:32:29,220 --> 00:32:32,850
at this heap memory<font color="#E5E5E5"> that they filled in</font>

848
00:32:30,780 --> 00:32:34,889
<font color="#E5E5E5">and now return</font><font color="#CCCCCC"> addresses and parameters</font>

849
00:32:32,850 --> 00:32:37,860
<font color="#E5E5E5">for function</font><font color="#CCCCCC"> calls will be coming from</font>

850
00:32:34,890 --> 00:32:39,180
the attackers heap data so this is all

851
00:32:37,860 --> 00:32:42,510
<font color="#E5E5E5">happening in JavaScript in your web page</font>

852
00:32:39,180 --> 00:32:44,370
<font color="#CCCCCC">when that stack pivot is triggered we're</font>

853
00:32:42,510 --> 00:32:46,680
now executing the<font color="#CCCCCC"> raw payload that the</font>

854
00:32:44,370 --> 00:32:48,449
attacker is full Dame<font color="#E5E5E5"> and it's going to</font>

855
00:32:46,680 --> 00:32:49,470
start invoking some<font color="#CCCCCC"> ap</font><font color="#E5E5E5"> is that they</font>

856
00:32:48,450 --> 00:32:51,450
<font color="#E5E5E5">found from ntdll</font>

857
00:32:49,470 --> 00:32:53,850
which are designed<font color="#E5E5E5"> to make memory in the</font>

858
00:32:51,450 --> 00:32:55,380
process executable because by<font color="#CCCCCC"> default</font>

859
00:32:53,850 --> 00:32:58,080
with<font color="#CCCCCC"> death</font><font color="#E5E5E5"> your heap data is not</font>

860
00:32:55,380 --> 00:32:59,640
executable once it is executable<font color="#E5E5E5"> then</font>

861
00:32:58,080 --> 00:33:01,500
<font color="#CCCCCC">they can just jump into</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> shellcode</font>

862
00:32:59,640 --> 00:33:03,750
and<font color="#E5E5E5"> do whatever they want so</font><font color="#CCCCCC"> the</font>

863
00:33:01,500 --> 00:33:05,160
<font color="#E5E5E5">shellcode payload</font><font color="#CCCCCC"> then it has some</font>

864
00:33:03,750 --> 00:33:07,620
actions it wants to do so it's<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

865
00:33:05,160 --> 00:33:08,970
find<font color="#CCCCCC"> API so</font><font color="#E5E5E5"> maybe it's going to</font><font color="#CCCCCC"> download</font>

866
00:33:07,620 --> 00:33:10,860
stuff<font color="#CCCCCC"> from the internet</font><font color="#E5E5E5"> or maybe it's</font>

867
00:33:08,970 --> 00:33:12,780
<font color="#E5E5E5">going to create a process</font><font color="#CCCCCC"> it's going to</font>

868
00:33:10,860 --> 00:33:13,709
find those<font color="#E5E5E5"> API is using export tables</font>

869
00:33:12,780 --> 00:33:16,020
typically

870
00:33:13,710 --> 00:33:17,039
and then it's going<font color="#E5E5E5"> to invoke the api's</font>

871
00:33:16,020 --> 00:33:19,950
and<font color="#CCCCCC"> profits</font>

872
00:33:17,039 --> 00:33:23,370
the<font color="#E5E5E5"> attackers job is done</font><font color="#CCCCCC"> so if you look</font>

873
00:33:19,950 --> 00:33:25,409
at<font color="#CCCCCC"> the whole view where do the exploit</font>

874
00:33:23,370 --> 00:33:27,510
mitigations and the payload<font color="#E5E5E5"> restrictions</font>

875
00:33:25,409 --> 00:33:29,730
like the<font color="#CCCCCC"> Emmet mitigations where would</font>

876
00:33:27,510 --> 00:33:32,820
they<font color="#E5E5E5"> actually have a chance</font><font color="#CCCCCC"> of blocking</font>

877
00:33:29,730 --> 00:33:35,460
this exploit chain the<font color="#E5E5E5"> first place where</font>

878
00:33:32,820 --> 00:33:37,760
they can kick in is this first<font color="#E5E5E5"> step of</font>

879
00:33:35,460 --> 00:33:40,110
resolving API is using the<font color="#E5E5E5"> import table</font>

880
00:33:37,760 --> 00:33:41,970
this<font color="#E5E5E5"> is where we added a new mitigation</font>

881
00:33:40,110 --> 00:33:43,918
in the full<font color="#E5E5E5"> creators update which is</font>

882
00:33:41,970 --> 00:33:45,330
<font color="#CCCCCC">called import address filter and we'll</font>

883
00:33:43,919 --> 00:33:47,520
talk about<font color="#E5E5E5"> that in</font><font color="#CCCCCC"> kind of more detail</font>

884
00:33:45,330 --> 00:33:50,189
and kind of see why we added<font color="#E5E5E5"> it and how</font>

885
00:33:47,520 --> 00:33:52,710
it works<font color="#E5E5E5"> if that was bypassed or not</font>

886
00:33:50,190 --> 00:33:53,820
enabled for some reason<font color="#E5E5E5"> then the next</font>

887
00:33:52,710 --> 00:33:56,520
place we could actually<font color="#E5E5E5"> block</font><font color="#CCCCCC"> the</font>

888
00:33:53,820 --> 00:33:58,799
exploit is<font color="#E5E5E5"> under up execution the</font>

889
00:33:56,520 --> 00:34:00,870
initial<font color="#CCCCCC"> wrap execution</font><font color="#E5E5E5"> so when those</font><font color="#CCCCCC"> api</font>

890
00:33:58,799 --> 00:34:02,399
is start being invoked from<font color="#E5E5E5"> wrap the</font>

891
00:34:00,870 --> 00:34:04,678
<font color="#E5E5E5">anti rock mitigations that we poured it</font>

892
00:34:02,399 --> 00:34:08,190
over<font color="#CCCCCC"> from emmet</font><font color="#E5E5E5"> would take effect and</font>

893
00:34:04,679 --> 00:34:09,869
block<font color="#CCCCCC"> is and then lastly when the export</font>

894
00:34:08,190 --> 00:34:11,668
tables are<font color="#E5E5E5"> being used to locate</font><font color="#CCCCCC"> api is</font>

895
00:34:09,869 --> 00:34:13,830
the export address<font color="#E5E5E5"> filter mitigation</font>

896
00:34:11,668 --> 00:34:16,049
<font color="#E5E5E5">will kick in there and can block the</font>

897
00:34:13,830 --> 00:34:17,879
exploit at that point so now you have an

898
00:34:16,050 --> 00:34:19,589
<font color="#CCCCCC">idea</font><font color="#E5E5E5"> of kind of what the exploit is</font>

899
00:34:17,879 --> 00:34:22,080
doing under<font color="#CCCCCC"> the covers</font><font color="#E5E5E5"> and these three</font>

900
00:34:19,589 --> 00:34:23,969
mitigations<font color="#E5E5E5"> can be used to detect and</font>

901
00:34:22,080 --> 00:34:25,500
block the exploit<font color="#E5E5E5"> so for</font><font color="#CCCCCC"> the demo</font>

902
00:34:23,969 --> 00:34:28,109
purposes what<font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> be doing is</font>

903
00:34:25,500 --> 00:34:29,250
<font color="#E5E5E5">showing your live machine running the</font>

904
00:34:28,109 --> 00:34:31,139
exploit<font color="#E5E5E5"> I'm going to do it kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> in</font>

905
00:34:29,250 --> 00:34:33,589
three steps<font color="#E5E5E5"> because we wanted to show</font>

906
00:34:31,139 --> 00:34:36,179
<font color="#E5E5E5">each of these mitigations firing in turn</font>

907
00:34:33,589 --> 00:34:37,918
normally if<font color="#E5E5E5"> you're an admin rolling the</font>

908
00:34:36,179 --> 00:34:39,629
<font color="#CCCCCC">sod in your</font><font color="#E5E5E5"> enterprise you would turn on</font>

909
00:34:37,918 --> 00:34:41,460
<font color="#E5E5E5">all the mitigations at once you kind of</font>

910
00:34:39,629 --> 00:34:43,649
enable the most<font color="#E5E5E5"> secure</font><font color="#CCCCCC"> statute you could</font>

911
00:34:41,460 --> 00:34:45,359
and which every mitigation triggered

912
00:34:43,649 --> 00:34:47,250
first so in this case it<font color="#E5E5E5"> would be</font>

913
00:34:45,359 --> 00:34:48,509
employed restful<font color="#CCCCCC"> tour</font><font color="#E5E5E5"> that would block</font>

914
00:34:47,250 --> 00:34:50,790
the exploit there and you wouldn't see

915
00:34:48,510 --> 00:34:52,020
the<font color="#CCCCCC"> other</font><font color="#E5E5E5"> two fire because you want to</font>

916
00:34:50,790 --> 00:34:55,259
show all three we're<font color="#E5E5E5"> going to kind of do</font>

917
00:34:52,020 --> 00:34:56,399
them one<font color="#CCCCCC"> at a time</font><font color="#E5E5E5"> in the video so it's</font>

918
00:34:55,260 --> 00:35:02,580
<font color="#E5E5E5">not the video and we're going</font><font color="#CCCCCC"> to run</font>

919
00:34:56,399 --> 00:35:04,920
Firefox<font color="#E5E5E5"> on the victim machine and go to</font>

920
00:35:02,580 --> 00:35:07,200
our attacker URL and as you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see we</font>

921
00:35:04,920 --> 00:35:08,550
have calc when the exploit succeeds<font color="#CCCCCC"> we</font>

922
00:35:07,200 --> 00:35:10,319
don't have any mitigations<font color="#CCCCCC"> configured</font>

923
00:35:08,550 --> 00:35:12,780
this is sort of out of the<font color="#E5E5E5"> box</font><font color="#CCCCCC"> States</font>

924
00:35:10,320 --> 00:35:14,580
<font color="#E5E5E5">before</font><font color="#CCCCCC"> you configure anything so now</font>

925
00:35:12,780 --> 00:35:16,380
let's go and actually<font color="#E5E5E5"> use the UI that we</font>

926
00:35:14,580 --> 00:35:18,920
added<font color="#E5E5E5"> to</font><font color="#CCCCCC"> full</font><font color="#E5E5E5"> creators update in the</font>

927
00:35:16,380 --> 00:35:21,560
defender<font color="#E5E5E5"> security</font><font color="#CCCCCC"> center to go and</font>

928
00:35:18,920 --> 00:35:23,760
configure<font color="#E5E5E5"> the mitigations for Firefox</font>

929
00:35:21,560 --> 00:35:25,920
<font color="#E5E5E5">you have to kind of scroll down and</font><font color="#CCCCCC"> go</font>

930
00:35:23,760 --> 00:35:27,480
<font color="#CCCCCC">to exploit protection</font><font color="#E5E5E5"> settings and here</font>

931
00:35:25,920 --> 00:35:30,030
we have system settings<font color="#E5E5E5"> so in it</font>

932
00:35:27,480 --> 00:35:31,440
which are applied system-wide<font color="#E5E5E5"> but we</font>

933
00:35:30,030 --> 00:35:33,690
want to add program settings

934
00:35:31,440 --> 00:35:36,210
specifically for<font color="#CCCCCC"> Firefox</font><font color="#E5E5E5"> so we're going</font>

935
00:35:33,690 --> 00:35:37,829
<font color="#E5E5E5">to add a new program put in the binary</font>

936
00:35:36,210 --> 00:35:39,869
name where you can browse just<font color="#CCCCCC"> a</font>

937
00:35:37,829 --> 00:35:41,460
<font color="#E5E5E5">specific</font><font color="#CCCCCC"> application</font><font color="#E5E5E5"> and then we have</font>

938
00:35:39,869 --> 00:35:43,109
this<font color="#E5E5E5"> window that pops up with all of the</font>

939
00:35:41,460 --> 00:35:45,690
granular mitigations<font color="#CCCCCC"> that can be applied</font>

940
00:35:43,109 --> 00:35:47,460
for<font color="#E5E5E5"> Firefox we're going to scroll down</font>

941
00:35:45,690 --> 00:35:50,400
<font color="#E5E5E5">and</font><font color="#CCCCCC"> find the</font><font color="#E5E5E5"> exported rest filter</font>

942
00:35:47,460 --> 00:35:52,230
mitigation and turn that<font color="#E5E5E5"> on and then</font><font color="#CCCCCC"> ef+</font>

943
00:35:50,400 --> 00:35:54,900
<font color="#E5E5E5">is kind of an extra mode that we checked</font>

944
00:35:52,230 --> 00:35:58,410
there as well<font color="#E5E5E5"> which emits mitigation</font>

945
00:35:54,900 --> 00:36:01,190
Emmet had now if<font color="#E5E5E5"> we rerun Firefox and go</font>

946
00:35:58,410 --> 00:36:04,109
to our attacker<font color="#E5E5E5"> website we will see</font>

947
00:36:01,190 --> 00:36:06,599
<font color="#E5E5E5">hopefully</font><font color="#CCCCCC"> what's going to happen but</font>

948
00:36:04,109 --> 00:36:08,339
first when<font color="#CCCCCC"> it does trigger we as I said</font>

949
00:36:06,599 --> 00:36:10,140
<font color="#E5E5E5">have ordered events</font><font color="#CCCCCC"> to get</font><font color="#E5E5E5"> generated on</font>

950
00:36:08,339 --> 00:36:12,089
<font color="#E5E5E5">the machine Jessica mentioned this in</font>

951
00:36:10,140 --> 00:36:13,560
<font color="#E5E5E5">the event log that gets stored in under</font>

952
00:36:12,089 --> 00:36:15,328
the<font color="#CCCCCC"> security mitigations user</font><font color="#E5E5E5"> mode</font>

953
00:36:13,560 --> 00:36:17,190
folder and we have<font color="#CCCCCC"> nothing there yet</font>

954
00:36:15,329 --> 00:36:19,470
<font color="#CCCCCC">because we didn't</font><font color="#E5E5E5"> actually run the</font>

955
00:36:17,190 --> 00:36:22,310
exploit<font color="#E5E5E5"> with mitigations turned on let's</font>

956
00:36:19,470 --> 00:36:24,540
<font color="#E5E5E5">try again</font><font color="#CCCCCC"> and see what happens this time</font>

957
00:36:22,310 --> 00:36:25,770
we see that<font color="#CCCCCC"> the application is</font><font color="#E5E5E5"> stopped</font>

958
00:36:24,540 --> 00:36:27,450
working<font color="#E5E5E5"> and here we basically have a</font>

959
00:36:25,770 --> 00:36:29,700
crash that<font color="#E5E5E5"> Windows Error reporting is</font>

960
00:36:27,450 --> 00:36:32,220
picking up<font color="#E5E5E5"> and if you look in the event</font>

961
00:36:29,700 --> 00:36:35,520
log we see we have<font color="#CCCCCC"> our events for export</font>

962
00:36:32,220 --> 00:36:42,839
address filter caching<font color="#E5E5E5"> access to ntdll</font>

963
00:36:35,520 --> 00:36:44,849
<font color="#E5E5E5">api's so success and if you look in the</font>

964
00:36:42,839 --> 00:36:48,150
application log we<font color="#CCCCCC"> can see we have</font>

965
00:36:44,849 --> 00:36:49,800
<font color="#E5E5E5">crashes and</font><font color="#CCCCCC"> we're events</font><font color="#E5E5E5"> we actually get</font>

966
00:36:48,150 --> 00:36:52,560
some<font color="#CCCCCC"> telemetry from</font><font color="#E5E5E5"> these crashes we can</font>

967
00:36:49,800 --> 00:36:54,000
look at to see what potential exploits

968
00:36:52,560 --> 00:36:56,069
are we<font color="#CCCCCC"> actually blocking</font><font color="#E5E5E5"> in the wild if</font>

969
00:36:54,000 --> 00:36:58,710
customers<font color="#E5E5E5"> turn the Sun and we can see a</font>

970
00:36:56,069 --> 00:37:00,210
<font color="#CCCCCC">DLL</font><font color="#E5E5E5"> as being loaded into the process</font><font color="#CCCCCC"> to</font>

971
00:36:58,710 --> 00:37:02,640
<font color="#CCCCCC">implement the</font><font color="#E5E5E5"> mediations that's what</font>

972
00:37:00,210 --> 00:37:04,440
triggers the crash now we're going to

973
00:37:02,640 --> 00:37:05,910
show<font color="#E5E5E5"> you using enabling the other</font>

974
00:37:04,440 --> 00:37:07,140
mitigation<font color="#CCCCCC"> import address filter and</font>

975
00:37:05,910 --> 00:37:09,690
we're going<font color="#E5E5E5"> to use PowerShell instead</font>

976
00:37:07,140 --> 00:37:11,730
which<font color="#CCCCCC"> is another way to</font><font color="#E5E5E5"> configure and</font>

977
00:37:09,690 --> 00:37:13,109
and view settings on a<font color="#CCCCCC"> machine</font><font color="#E5E5E5"> so we</font>

978
00:37:11,730 --> 00:37:15,690
have some partial<font color="#E5E5E5"> command that's where</font>

979
00:37:13,109 --> 00:37:18,000
we can basically add mitigation options

980
00:37:15,690 --> 00:37:21,000
for a process<font color="#CCCCCC"> and we're going</font><font color="#E5E5E5"> to enable</font>

981
00:37:18,000 --> 00:37:24,780
the<font color="#E5E5E5"> import address filter mitigation</font>

982
00:37:21,000 --> 00:37:26,160
this time so this<font color="#E5E5E5"> will</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> enabled in</font>

983
00:37:24,780 --> 00:37:27,750
addition to export address filter that

984
00:37:26,160 --> 00:37:31,259
we had already<font color="#E5E5E5"> so if we run the get</font>

985
00:37:27,750 --> 00:37:33,660
command<font color="#E5E5E5"> we can see the state now we have</font>

986
00:37:31,260 --> 00:37:35,190
<font color="#CCCCCC">import address</font><font color="#E5E5E5"> filter turned on and</font>

987
00:37:33,660 --> 00:37:38,190
above at the<font color="#E5E5E5"> top you can see</font><font color="#CCCCCC"> exploit</font>

988
00:37:35,190 --> 00:37:41,040
address filter let's rerun<font color="#E5E5E5"> Firefox again</font>

989
00:37:38,190 --> 00:37:43,140
<font color="#E5E5E5">go to our attacker website</font>

990
00:37:41,040 --> 00:37:45,650
and we'll see<font color="#CCCCCC"> very similar</font><font color="#E5E5E5"> kind of flows</font>

991
00:37:43,140 --> 00:37:48,410
before<font color="#CCCCCC"> I have the crash be triggered and</font>

992
00:37:45,650 --> 00:37:50,550
if we look in the event dog this<font color="#E5E5E5"> time</font>

993
00:37:48,410 --> 00:37:52,080
<font color="#E5E5E5">we'll have a new event that's been added</font>

994
00:37:50,550 --> 00:37:54,630
<font color="#E5E5E5">therefore the input address filtering</font>

995
00:37:52,080 --> 00:37:56,220
<font color="#E5E5E5">mitigation triggering and we can see</font>

996
00:37:54,630 --> 00:37:57,990
<font color="#E5E5E5">that the API</font><font color="#CCCCCC"> that the attacker</font><font color="#E5E5E5"> was</font>

997
00:37:56,220 --> 00:37:59,339
trying to find<font color="#E5E5E5"> was load library and we</font>

998
00:37:57,990 --> 00:38:03,390
<font color="#CCCCCC">can actually figure out</font><font color="#E5E5E5"> which API they</font>

999
00:37:59,340 --> 00:38:05,010
were looking for so lastly if we want<font color="#E5E5E5"> to</font>

1000
00:38:03,390 --> 00:38:07,350
enable<font color="#E5E5E5"> the</font><font color="#CCCCCC"> anti-rock mitigations again</font>

1001
00:38:05,010 --> 00:38:09,090
in<font color="#E5E5E5"> powershell it's just a case</font><font color="#CCCCCC"> of using</font>

1002
00:38:07,350 --> 00:38:12,450
<font color="#E5E5E5">the enable option and then putting in</font>

1003
00:38:09,090 --> 00:38:14,040
the additional mitigation<font color="#E5E5E5"> names and we</font>

1004
00:38:12,450 --> 00:38:17,339
can kind of separate them if you want<font color="#E5E5E5"> to</font>

1005
00:38:14,040 --> 00:38:21,509
do<font color="#CCCCCC"> multiple ones in one shot turn those</font>

1006
00:38:17,340 --> 00:38:25,440
on<font color="#CCCCCC"> and then we're going to actually</font>

1007
00:38:21,510 --> 00:38:27,360
<font color="#E5E5E5">disable import address filter because it</font>

1008
00:38:25,440 --> 00:38:35,640
would block the exploit before it does

1009
00:38:27,360 --> 00:38:37,710
the<font color="#CCCCCC"> rap executions let's turn it off and</font>

1010
00:38:35,640 --> 00:38:42,379
see<font color="#E5E5E5"> everything is turned on as we want</font>

1011
00:38:37,710 --> 00:38:42,380
it to be we can rerun Firefox

1012
00:38:50,369 --> 00:38:53,369
<font color="#E5E5E5">boom</font>

1013
00:38:59,730 --> 00:39:06,660
so we have some<font color="#E5E5E5"> more crash events and we</font>

1014
00:39:04,170 --> 00:39:08,460
have<font color="#E5E5E5"> our events and the</font><font color="#CCCCCC"> events are</font>

1015
00:39:06,660 --> 00:39:11,819
<font color="#E5E5E5">written in audit mode and enforcement</font>

1016
00:39:08,460 --> 00:39:15,330
mode so<font color="#E5E5E5"> you can kind of see in both</font>

1017
00:39:11,820 --> 00:39:17,580
cases<font color="#E5E5E5"> right so that showed the three</font>

1018
00:39:15,330 --> 00:39:22,230
exploit mitigation options<font color="#E5E5E5"> actually</font>

1019
00:39:17,580 --> 00:39:24,720
protecting Firefox in this case if you

1020
00:39:22,230 --> 00:39:26,640
are<font color="#E5E5E5"> using Windows Defender</font><font color="#CCCCCC"> HTTP if your</font>

1021
00:39:24,720 --> 00:39:27,959
<font color="#E5E5E5">enterprise is using that then all</font><font color="#CCCCCC"> of</font>

1022
00:39:26,640 --> 00:39:29,400
<font color="#E5E5E5">that telemetry that we saw in the event</font>

1023
00:39:27,960 --> 00:39:31,320
<font color="#E5E5E5">tag is actually</font><font color="#CCCCCC"> being collected</font><font color="#E5E5E5"> by the</font>

1024
00:39:29,400 --> 00:39:33,450
<font color="#E5E5E5">the agent on</font><font color="#CCCCCC"> your machine and</font><font color="#E5E5E5"> sent to</font>

1025
00:39:31,320 --> 00:39:36,570
the cloud<font color="#E5E5E5"> as well and is visible in the</font>

1026
00:39:33,450 --> 00:39:38,310
<font color="#CCCCCC">Machine timeline</font><font color="#E5E5E5"> and we have detection</font>

1027
00:39:36,570 --> 00:39:40,710
that will<font color="#CCCCCC"> actually fire alerts if we see</font>

1028
00:39:38,310 --> 00:39:42,720
any exploit indicators from exploit

1029
00:39:40,710 --> 00:39:45,150
<font color="#CCCCCC">guard</font><font color="#E5E5E5"> so here's an example of the</font>

1030
00:39:42,720 --> 00:39:47,939
Firefox<font color="#E5E5E5"> attack that we saw where exploit</font>

1031
00:39:45,150 --> 00:39:52,380
guard is blocking the exploit due to

1032
00:39:47,940 --> 00:39:54,000
<font color="#E5E5E5">export address filtering and in the</font>

1033
00:39:52,380 --> 00:39:56,010
<font color="#E5E5E5">timeline is all we can see for the</font><font color="#CCCCCC"> rack</font>

1034
00:39:54,000 --> 00:40:00,180
mitigation we can see an event<font color="#E5E5E5"> in the</font>

1035
00:39:56,010 --> 00:40:02,010
timeline for the rack exploits<font color="#CCCCCC"> we can</font>

1036
00:40:00,180 --> 00:40:04,500
see virtual<font color="#CCCCCC"> Alec was the API that was</font>

1037
00:40:02,010 --> 00:40:08,550
<font color="#E5E5E5">being executed by rock when</font><font color="#CCCCCC"> the</font>

1038
00:40:04,500 --> 00:40:10,500
mitigation<font color="#E5E5E5"> check happened and then here</font>

1039
00:40:08,550 --> 00:40:12,480
for the import address filter again we

1040
00:40:10,500 --> 00:40:14,250
can see<font color="#E5E5E5"> low library X was trying to be</font>

1041
00:40:12,480 --> 00:40:17,700
located by<font color="#E5E5E5"> the attacker we blocked that</font>

1042
00:40:14,250 --> 00:40:18,990
and<font color="#E5E5E5"> stopped the exploit so defender ATP</font>

1043
00:40:17,700 --> 00:40:20,759
is really a<font color="#E5E5E5"> good way to collect all of</font>

1044
00:40:18,990 --> 00:40:23,040
symmetry in ordered mode or<font color="#E5E5E5"> enforcement</font>

1045
00:40:20,760 --> 00:40:24,859
mode<font color="#E5E5E5"> detect real exploits once you've</font>

1046
00:40:23,040 --> 00:40:28,230
configured this for your enterprise<font color="#E5E5E5"> and</font>

1047
00:40:24,859 --> 00:40:32,759
kind of manage<font color="#CCCCCC"> your whole</font><font color="#E5E5E5"> fleet</font><font color="#CCCCCC"> of</font>

1048
00:40:28,230 --> 00:40:34,830
machines<font color="#CCCCCC"> that way so let's have a</font><font color="#E5E5E5"> look</font>

1049
00:40:32,760 --> 00:40:36,990
and see what is<font color="#E5E5E5"> actually happening under</font>

1050
00:40:34,830 --> 00:40:38,790
<font color="#CCCCCC">the covers how these mitigations</font>

1051
00:40:36,990 --> 00:40:41,009
implement it and a lot of<font color="#CCCCCC"> this was</font>

1052
00:40:38,790 --> 00:40:42,240
ported<font color="#E5E5E5"> from the way</font><font color="#CCCCCC"> Emmet implemented</font>

1053
00:40:41,010 --> 00:40:44,700
them but we did make improvements to

1054
00:40:42,240 --> 00:40:46,740
<font color="#E5E5E5">make performance better kind of improve</font>

1055
00:40:44,700 --> 00:40:47,970
<font color="#E5E5E5">appcompat</font><font color="#CCCCCC"> and actually make the</font>

1056
00:40:46,740 --> 00:40:49,439
mitigations a little bit harder<font color="#CCCCCC"> to</font>

1057
00:40:47,970 --> 00:40:51,509
bypass because<font color="#E5E5E5"> there was some known</font>

1058
00:40:49,440 --> 00:40:54,510
bypasses for Emmet that we wanted<font color="#E5E5E5"> to try</font>

1059
00:40:51,510 --> 00:40:56,400
<font color="#CCCCCC">and address wherever we could so the</font>

1060
00:40:54,510 --> 00:40:58,050
attacker originally<font color="#E5E5E5"> their kind of</font>

1061
00:40:56,400 --> 00:41:00,800
foothold in the process is<font color="#E5E5E5"> to get code</font>

1062
00:40:58,050 --> 00:41:03,150
<font color="#CCCCCC">executions somehow triggering a UAF for</font>

1063
00:41:00,800 --> 00:41:05,340
doing some some<font color="#CCCCCC"> exploit and their goal</font>

1064
00:41:03,150 --> 00:41:07,369
<font color="#CCCCCC">is to</font><font color="#E5E5E5"> find</font><font color="#CCCCCC"> ap</font><font color="#E5E5E5"> is that they can then</font>

1065
00:41:05,340 --> 00:41:09,600
execute as part of their exploit chain

1066
00:41:07,369 --> 00:41:11,550
they first need to<font color="#E5E5E5"> find out where those</font>

1067
00:41:09,600 --> 00:41:13,109
modules<font color="#CCCCCC"> that they want to invoke</font><font color="#E5E5E5"> are</font>

1068
00:41:11,550 --> 00:41:13,650
located<font color="#E5E5E5"> in memory they have to break a</font>

1069
00:41:13,109 --> 00:41:16,098
<font color="#E5E5E5">SLR</font>

1070
00:41:13,650 --> 00:41:19,049
and the way they do that<font color="#E5E5E5"> currently is by</font>

1071
00:41:16,099 --> 00:41:20,730
<font color="#E5E5E5">information leaks reading arbitrary</font>

1072
00:41:19,049 --> 00:41:22,890
addresses in memory finding where things

1073
00:41:20,730 --> 00:41:24,749
are<font color="#E5E5E5"> and grabbing</font><font color="#CCCCCC"> stuff that way</font>

1074
00:41:22,890 --> 00:41:26,249
especially<font color="#CCCCCC"> in the web browser because</font>

1075
00:41:24,749 --> 00:41:29,098
<font color="#CCCCCC">you have so much power with a scripting</font>

1076
00:41:26,249 --> 00:41:30,660
engine<font color="#E5E5E5"> at your disposal</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> very</font>

1077
00:41:29,099 --> 00:41:32,430
powerful<font color="#E5E5E5"> primitive for attackers to have</font>

1078
00:41:30,660 --> 00:41:34,348
so let's say the attacker is an<font color="#E5E5E5"> hour</font>

1079
00:41:32,430 --> 00:41:36,149
scanning the modulus that's loaded in

1080
00:41:34,349 --> 00:41:37,769
your<font color="#E5E5E5"> process</font><font color="#CCCCCC"> and they're</font><font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> find</font>

1081
00:41:36,150 --> 00:41:42,299
ntdll because they want<font color="#E5E5E5"> to call the API</font>

1082
00:41:37,769 --> 00:41:44,609
<font color="#CCCCCC">s</font><font color="#E5E5E5"> that are exposed by that binary once</font>

1083
00:41:42,299 --> 00:41:46,579
they<font color="#E5E5E5"> find ntdll in memory they can</font><font color="#CCCCCC"> then</font>

1084
00:41:44,609 --> 00:41:49,430
start<font color="#E5E5E5"> walking the actual image data and</font>

1085
00:41:46,579 --> 00:41:52,019
pausing the<font color="#CCCCCC"> dass header the PE header</font>

1086
00:41:49,430 --> 00:41:54,359
<font color="#CCCCCC">optional header has a data</font><font color="#E5E5E5"> directory</font>

1087
00:41:52,019 --> 00:41:56,459
with all<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> different sections</font><font color="#CCCCCC"> and</font>

1088
00:41:54,359 --> 00:41:57,720
the one that<font color="#E5E5E5"> they're</font><font color="#CCCCCC"> interested in is</font>

1089
00:41:56,460 --> 00:41:59,970
called<font color="#E5E5E5"> the export directory which has</font><font color="#CCCCCC"> a</font>

1090
00:41:57,720 --> 00:42:02,129
list of all<font color="#CCCCCC"> of the api's that are</font>

1091
00:41:59,970 --> 00:42:04,828
exported<font color="#E5E5E5"> once they find that kind of</font>

1092
00:42:02,130 --> 00:42:07,499
<font color="#CCCCCC">there their goal is</font><font color="#E5E5E5"> pretty much achieved</font>

1093
00:42:04,829 --> 00:42:10,499
they can look at the<font color="#E5E5E5"> table and find</font>

1094
00:42:07,499 --> 00:42:12,990
whatever<font color="#E5E5E5"> API from the string name when</font>

1095
00:42:10,499 --> 00:42:14,519
they find a match they can<font color="#E5E5E5"> then grab</font><font color="#CCCCCC"> the</font>

1096
00:42:12,990 --> 00:42:16,919
address for<font color="#CCCCCC"> that API and</font><font color="#E5E5E5"> then they can</font>

1097
00:42:14,519 --> 00:42:18,479
use<font color="#CCCCCC"> it in their</font><font color="#E5E5E5"> rap payload</font><font color="#CCCCCC"> or you know</font>

1098
00:42:16,920 --> 00:42:21,739
<font color="#E5E5E5">depending on what primitives they have</font>

1099
00:42:18,480 --> 00:42:24,599
they may just be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to execute those</font>

1100
00:42:21,739 --> 00:42:26,999
so<font color="#E5E5E5"> attacker goal has been achieved they</font>

1101
00:42:24,599 --> 00:42:29,970
know where these api's are in memory<font color="#E5E5E5"> we</font>

1102
00:42:26,999 --> 00:42:31,259
want to block<font color="#CCCCCC"> that somehow</font><font color="#E5E5E5"> so you know</font>

1103
00:42:29,970 --> 00:42:32,700
how did<font color="#CCCCCC"> Emmet actually block</font><font color="#E5E5E5"> this</font>

1104
00:42:31,259 --> 00:42:34,980
initially and how do<font color="#E5E5E5"> we do it</font><font color="#CCCCCC"> in full</font>

1105
00:42:32,700 --> 00:42:38,069
<font color="#CCCCCC">creators update with the</font><font color="#E5E5E5"> built-in</font><font color="#CCCCCC"> Emmet</font>

1106
00:42:34,980 --> 00:42:39,720
support in the OS<font color="#E5E5E5"> the way we do it is by</font>

1107
00:42:38,069 --> 00:42:42,480
<font color="#CCCCCC">actually changing</font><font color="#E5E5E5"> protections in memory</font>

1108
00:42:39,720 --> 00:42:44,970
for critical system dll's like ntdll

1109
00:42:42,480 --> 00:42:47,670
<font color="#E5E5E5">kernel</font><font color="#CCCCCC"> Basin kernel32</font><font color="#E5E5E5"> because we know</font>

1110
00:42:44,970 --> 00:42:50,029
<font color="#E5E5E5">these all export API is</font><font color="#CCCCCC"> that attackers</font>

1111
00:42:47,670 --> 00:42:52,109
<font color="#CCCCCC">want to target</font><font color="#E5E5E5"> they give them</font>

1112
00:42:50,029 --> 00:42:54,180
<font color="#CCCCCC">functionality that they need as part of</font>

1113
00:42:52,109 --> 00:42:56,160
<font color="#E5E5E5">getting their payload running so</font>

1114
00:42:54,180 --> 00:42:58,078
changing memory protection creating

1115
00:42:56,160 --> 00:43:00,480
<font color="#CCCCCC">processes loading dll's all of these bad</font>

1116
00:42:58,079 --> 00:43:02,549
things<font color="#E5E5E5"> if we can block them</font><font color="#CCCCCC"> from looking</font>

1117
00:43:00,480 --> 00:43:04,619
<font color="#E5E5E5">at the export directory for these three</font>

1118
00:43:02,549 --> 00:43:06,029
system dll's and we can kind of put a

1119
00:43:04,619 --> 00:43:09,059
<font color="#E5E5E5">roadblock in</font><font color="#CCCCCC"> their way in terms of</font><font color="#E5E5E5"> their</font>

1120
00:43:06,029 --> 00:43:10,920
exploit executing so a<font color="#CCCCCC"> God</font><font color="#E5E5E5"> paid guide</font>

1121
00:43:09,059 --> 00:43:13,109
page protection in case you may not<font color="#E5E5E5"> know</font>

1122
00:43:10,920 --> 00:43:14,519
exactly<font color="#CCCCCC"> what that</font><font color="#E5E5E5"> is this is</font><font color="#CCCCCC"> an existing</font>

1123
00:43:13,109 --> 00:43:17,038
protection that the memory manager in

1124
00:43:14,519 --> 00:43:19,680
Windows supports and it basically<font color="#CCCCCC"> allows</font>

1125
00:43:17,039 --> 00:43:22,529
you to<font color="#E5E5E5"> say if anybody</font><font color="#CCCCCC"> touches this part</font>

1126
00:43:19,680 --> 00:43:24,180
of memory<font color="#CCCCCC"> trigger an event and we have a</font>

1127
00:43:22,529 --> 00:43:26,609
vector exception handler which will

1128
00:43:24,180 --> 00:43:28,859
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> be invoked at that point</font>

1129
00:43:26,609 --> 00:43:30,450
and we can then<font color="#CCCCCC"> see who is</font><font color="#E5E5E5"> trying to</font>

1130
00:43:28,859 --> 00:43:30,749
touch that memory we<font color="#CCCCCC"> can inspect who it</font>

1131
00:43:30,450 --> 00:43:32,700
is

1132
00:43:30,749 --> 00:43:34,259
so if the attacker comes and tries<font color="#E5E5E5"> to</font>

1133
00:43:32,700 --> 00:43:36,509
<font color="#E5E5E5">look at</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> export directory for</font><font color="#CCCCCC"> that</font>

1134
00:43:34,259 --> 00:43:38,670
<font color="#E5E5E5">say ntdll it'll trigger the</font><font color="#CCCCCC"> guide page</font>

1135
00:43:36,509 --> 00:43:40,079
exception<font color="#E5E5E5"> our</font><font color="#CCCCCC"> code will then take</font>

1136
00:43:38,670 --> 00:43:42,480
<font color="#E5E5E5">control of the thread in</font><font color="#CCCCCC"> that process</font>

1137
00:43:40,079 --> 00:43:44,670
<font color="#CCCCCC">and we</font><font color="#E5E5E5"> can inspect and</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> okay who's</font>

1138
00:43:42,480 --> 00:43:46,950
reading this export table is it a normal

1139
00:43:44,670 --> 00:43:49,140
valid<font color="#E5E5E5"> scenario for looking at the export</font>

1140
00:43:46,950 --> 00:43:51,089
table because there are<font color="#CCCCCC"> your</font><font color="#E5E5E5"> normal use</font>

1141
00:43:49,140 --> 00:43:52,558
cases<font color="#E5E5E5"> where this happens or it doesn't</font>

1142
00:43:51,089 --> 00:43:54,660
<font color="#E5E5E5">look suspicious does it look like an</font>

1143
00:43:52,559 --> 00:43:56,910
exploit and should be<font color="#E5E5E5"> blackish what is</font>

1144
00:43:54,660 --> 00:43:58,739
suspicious well if there's code running

1145
00:43:56,910 --> 00:44:01,288
on the heap and outside<font color="#CCCCCC"> of any loaded</font>

1146
00:43:58,739 --> 00:44:04,349
module<font color="#E5E5E5"> that's pretty much an obvious bad</font>

1147
00:44:01,289 --> 00:44:08,160
sign<font color="#E5E5E5"> I wish</font><font color="#CCCCCC"> to block that</font><font color="#E5E5E5"> if it's a</font>

1148
00:44:04,349 --> 00:44:09,749
valid<font color="#CCCCCC"> P valid DLL like I say it's</font>

1149
00:44:08,160 --> 00:44:12,839
JavaScript<font color="#CCCCCC"> or</font><font color="#E5E5E5"> DLL</font><font color="#CCCCCC"> that's touching the</font>

1150
00:44:09,749 --> 00:44:14,910
<font color="#CCCCCC">export table that may be</font><font color="#E5E5E5"> okay but</font><font color="#CCCCCC"> you</font>

1151
00:44:12,839 --> 00:44:16,380
know if<font color="#E5E5E5"> Java scripts or VB script are</font>

1152
00:44:14,910 --> 00:44:17,879
doing it usually that indicates<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

1153
00:44:16,380 --> 00:44:20,489
attacker<font color="#E5E5E5"> is corrupted memory in such a</font>

1154
00:44:17,880 --> 00:44:22,289
way that<font color="#E5E5E5"> they can use JavaScript</font><font color="#CCCCCC"> to do</font>

1155
00:44:20,489 --> 00:44:24,299
kind<font color="#E5E5E5"> of like</font><font color="#CCCCCC"> a reader gadget operation</font>

1156
00:44:22,289 --> 00:44:27,720
they can make<font color="#CCCCCC"> JavaScript code read</font>

1157
00:44:24,299 --> 00:44:30,299
anywhere in memory using actual<font color="#E5E5E5"> code in</font>

1158
00:44:27,720 --> 00:44:32,730
JavaScript<font color="#E5E5E5"> so we call those suspicious</font>

1159
00:44:30,299 --> 00:44:35,369
reader gadgets and<font color="#CCCCCC"> ef+</font><font color="#E5E5E5"> will try and</font>

1160
00:44:32,730 --> 00:44:36,839
detect<font color="#E5E5E5"> those and block them or then we</font>

1161
00:44:35,369 --> 00:44:39,059
<font color="#CCCCCC">can actually see like are you doing some</font>

1162
00:44:36,839 --> 00:44:41,999
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> rap execution where the stack is</font>

1163
00:44:39,059 --> 00:44:44,489
pivoted to<font color="#E5E5E5"> the heap so that's great yeah</font>

1164
00:44:41,999 --> 00:44:46,919
<font color="#E5E5E5">Emmet had</font><font color="#CCCCCC"> EAF and we ported that over</font><font color="#E5E5E5"> to</font>

1165
00:44:44,489 --> 00:44:49,349
full creators update but it's not really

1166
00:44:46,920 --> 00:44:51,690
good enough<font color="#E5E5E5"> in terms of modern exploits</font>

1167
00:44:49,349 --> 00:44:55,140
and we've seen real in the wild exploits

1168
00:44:51,690 --> 00:44:56,789
<font color="#E5E5E5">exploit</font><font color="#CCCCCC"> kids like</font><font color="#E5E5E5"> angular where Emmet is</font>

1169
00:44:55,140 --> 00:44:57,930
being used by more<font color="#E5E5E5"> and more</font><font color="#CCCCCC"> people</font><font color="#E5E5E5"> and</font>

1170
00:44:56,789 --> 00:45:00,210
they won't<font color="#E5E5E5"> actually have</font><font color="#CCCCCC"> their exploit</font>

1171
00:44:57,930 --> 00:45:03,239
work even if<font color="#E5E5E5"> Emmet is there so they</font>

1172
00:45:00,210 --> 00:45:04,680
found<font color="#E5E5E5"> a way</font><font color="#CCCCCC"> to bypass</font><font color="#E5E5E5"> CIF how did they</font>

1173
00:45:03,239 --> 00:45:05,970
do that<font color="#E5E5E5"> well the fireEye guys had</font>

1174
00:45:04,680 --> 00:45:07,950
discovered<font color="#E5E5E5"> this when they did their blog</font>

1175
00:45:05,970 --> 00:45:10,828
they<font color="#CCCCCC"> looked at it and the actual payload</font>

1176
00:45:07,950 --> 00:45:12,569
<font color="#E5E5E5">that was being used</font><font color="#CCCCCC"> did something sneaky</font>

1177
00:45:10,829 --> 00:45:13,890
where instead<font color="#CCCCCC"> of looking</font><font color="#E5E5E5"> at the</font><font color="#CCCCCC"> exported</font>

1178
00:45:12,569 --> 00:45:15,749
<font color="#CCCCCC">rest</font><font color="#E5E5E5"> table they use the import address</font>

1179
00:45:13,890 --> 00:45:18,720
<font color="#E5E5E5">table kind of like what I was showing in</font>

1180
00:45:15,749 --> 00:45:20,399
the Firefox exploit as well and because

1181
00:45:18,720 --> 00:45:22,980
Emmet<font color="#E5E5E5"> was not kind of designed with</font>

1182
00:45:20,400 --> 00:45:24,690
blocking<font color="#E5E5E5"> this technique it wasn't part</font>

1183
00:45:22,980 --> 00:45:26,460
of the original design<font color="#CCCCCC"> there's no</font><font color="#E5E5E5"> God</font>

1184
00:45:24,690 --> 00:45:27,989
page protection and this access<font color="#CCCCCC"> is</font>

1185
00:45:26,460 --> 00:45:30,960
allowed and<font color="#CCCCCC"> the exploit</font><font color="#E5E5E5"> is able to get</font>

1186
00:45:27,989 --> 00:45:32,220
<font color="#E5E5E5">the API is</font><font color="#CCCCCC"> they want a call so</font><font color="#E5E5E5"> we wanted</font>

1187
00:45:30,960 --> 00:45:33,869
<font color="#CCCCCC">to see if we could</font><font color="#E5E5E5"> raise</font><font color="#CCCCCC"> the bar in</font>

1188
00:45:32,220 --> 00:45:36,058
<font color="#E5E5E5">terms</font><font color="#CCCCCC"> of you know</font><font color="#E5E5E5"> the protections that</font>

1189
00:45:33,869 --> 00:45:38,640
Emmet could provide when we added<font color="#CCCCCC"> it in</font>

1190
00:45:36,059 --> 00:45:40,180
box<font color="#E5E5E5"> so we thought about you know how</font>

1191
00:45:38,640 --> 00:45:43,420
<font color="#E5E5E5">could we break this import address</font>

1192
00:45:40,180 --> 00:45:45,160
<font color="#E5E5E5">table technique and the way that the OS</font>

1193
00:45:43,420 --> 00:45:48,250
works when you<font color="#CCCCCC"> have a dll loaded</font><font color="#E5E5E5"> into</font>

1194
00:45:45,160 --> 00:45:50,770
<font color="#E5E5E5">your process your</font><font color="#CCCCCC"> DLL you</font><font color="#E5E5E5"> know module X</font>

1195
00:45:48,250 --> 00:45:52,569
in this example<font color="#E5E5E5"> here it could</font><font color="#CCCCCC"> depend on</font>

1196
00:45:50,770 --> 00:45:54,730
some other API is<font color="#E5E5E5"> that other dll's</font>

1197
00:45:52,569 --> 00:45:57,759
expose on<font color="#E5E5E5"> the system and the</font><font color="#CCCCCC"> operating</font>

1198
00:45:54,730 --> 00:45:59,740
system is responsible for<font color="#E5E5E5"> loading your</font>

1199
00:45:57,760 --> 00:46:01,150
<font color="#CCCCCC">DLL and then any</font><font color="#E5E5E5"> of your dependencies</font>

1200
00:45:59,740 --> 00:46:04,058
will be loaded as well if they're<font color="#CCCCCC"> not</font>

1201
00:46:01,150 --> 00:46:06,099
<font color="#E5E5E5">there currently and the loader will fix</font>

1202
00:46:04,059 --> 00:46:09,040
<font color="#E5E5E5">up your dependencies by kind of finding</font>

1203
00:46:06,099 --> 00:46:11,920
out or you depend on<font color="#E5E5E5"> let's say load</font>

1204
00:46:09,040 --> 00:46:13,540
library<font color="#E5E5E5"> in your input the scripture</font><font color="#CCCCCC"> you</font>

1205
00:46:11,920 --> 00:46:16,030
have an entry<font color="#CCCCCC"> that says</font><font color="#E5E5E5"> I need some</font>

1206
00:46:13,540 --> 00:46:17,680
<font color="#CCCCCC">api's</font><font color="#E5E5E5"> from anti</font><font color="#CCCCCC"> DLL please go and</font><font color="#E5E5E5"> find</font>

1207
00:46:16,030 --> 00:46:19,480
<font color="#CCCCCC">them for me as</font><font color="#E5E5E5"> part of loading me and</font>

1208
00:46:17,680 --> 00:46:20,980
fill them in in<font color="#E5E5E5"> this table</font><font color="#CCCCCC"> and once</font>

1209
00:46:19,480 --> 00:46:23,530
you've<font color="#E5E5E5"> filled them in OS does this</font>

1210
00:46:20,980 --> 00:46:26,170
itself<font color="#E5E5E5"> the code can</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> just use these</font>

1211
00:46:23,530 --> 00:46:27,640
addresses to call the<font color="#E5E5E5"> API</font><font color="#CCCCCC"> s so this</font><font color="#E5E5E5"> is</font>

1212
00:46:26,170 --> 00:46:31,540
<font color="#CCCCCC">the normal operation of the</font><font color="#E5E5E5"> import</font>

1213
00:46:27,640 --> 00:46:33,069
<font color="#CCCCCC">address table</font><font color="#E5E5E5"> looking at this it's kind</font>

1214
00:46:31,540 --> 00:46:33,940
of not immediately obvious<font color="#CCCCCC"> how</font><font color="#E5E5E5"> you would</font>

1215
00:46:33,069 --> 00:46:37,089
block this how you would<font color="#E5E5E5"> have a</font>

1216
00:46:33,940 --> 00:46:38,200
<font color="#CCCCCC">mitigation to protect it</font><font color="#E5E5E5"> so when the</font>

1217
00:46:37,089 --> 00:46:40,210
attacker is kind of looking<font color="#E5E5E5"> at the</font>

1218
00:46:38,200 --> 00:46:45,759
import table<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> directly finding</font>

1219
00:46:40,210 --> 00:46:48,069
these bound<font color="#E5E5E5"> import address</font><font color="#CCCCCC"> entries how</font>

1220
00:46:45,760 --> 00:46:49,540
can we<font color="#E5E5E5"> break that so I kind of</font>

1221
00:46:48,069 --> 00:46:50,859
simplified things a little bit for the

1222
00:46:49,540 --> 00:46:53,470
diagram here<font color="#E5E5E5"> the way it's actually</font>

1223
00:46:50,859 --> 00:46:55,960
<font color="#E5E5E5">implemented if you look at the the PE</font>

1224
00:46:53,470 --> 00:46:57,939
kind of spec<font color="#E5E5E5"> in the format is that these</font>

1225
00:46:55,960 --> 00:47:00,250
strings for the<font color="#E5E5E5"> API names are not kind</font>

1226
00:46:57,940 --> 00:47:02,200
of directly in in one table<font color="#E5E5E5"> there's</font>

1227
00:47:00,250 --> 00:47:04,299
actually a set<font color="#CCCCCC"> of pointers</font><font color="#E5E5E5"> or relative</font>

1228
00:47:02,200 --> 00:47:07,569
virtual addresses<font color="#E5E5E5"> in the binary that</font>

1229
00:47:04,299 --> 00:47:09,430
point to the string data<font color="#E5E5E5"> so for all</font><font color="#CCCCCC"> of</font>

1230
00:47:07,569 --> 00:47:11,380
the<font color="#E5E5E5"> API is that</font><font color="#CCCCCC"> say you need</font><font color="#E5E5E5"> from anti</font>

1231
00:47:09,430 --> 00:47:13,270
<font color="#CCCCCC">DLL they'll be different</font><font color="#E5E5E5"> pointers to</font>

1232
00:47:11,380 --> 00:47:14,950
each of these strings<font color="#E5E5E5"> and the loader</font>

1233
00:47:13,270 --> 00:47:16,569
will<font color="#CCCCCC"> go and</font><font color="#E5E5E5"> look at the string and</font><font color="#CCCCCC"> in</font>

1234
00:47:14,950 --> 00:47:19,480
figure<font color="#E5E5E5"> out okay how</font><font color="#CCCCCC"> do I find that API</font>

1235
00:47:16,569 --> 00:47:20,920
and<font color="#E5E5E5"> get the right address for you so we</font>

1236
00:47:19,480 --> 00:47:22,450
know that<font color="#E5E5E5"> attackers are looking for</font>

1237
00:47:20,920 --> 00:47:26,290
sensitive API is<font color="#E5E5E5"> that they want to call</font>

1238
00:47:22,450 --> 00:47:27,879
in their exploit<font color="#E5E5E5"> and we can have kind of</font>

1239
00:47:26,290 --> 00:47:30,130
a bound list of these sensitive<font color="#E5E5E5"> API so</font>

1240
00:47:27,880 --> 00:47:33,040
we want to detect and block resolution

1241
00:47:30,130 --> 00:47:34,809
of through the import table for the ones

1242
00:47:33,040 --> 00:47:37,270
that<font color="#E5E5E5"> we care</font><font color="#CCCCCC"> about we can do</font><font color="#E5E5E5"> same sneaky</font>

1243
00:47:34,809 --> 00:47:39,010
and<font color="#E5E5E5"> we can actually redirect these</font>

1244
00:47:37,270 --> 00:47:40,210
pointers or relative addresses instead

1245
00:47:39,010 --> 00:47:43,180
of having<font color="#E5E5E5"> them point to the string data</font>

1246
00:47:40,210 --> 00:47:45,460
in the<font color="#E5E5E5"> DLL the way it would normally be</font>

1247
00:47:43,180 --> 00:47:46,750
we can point them at<font color="#E5E5E5"> some memory</font><font color="#CCCCCC"> that we</font>

1248
00:47:45,460 --> 00:47:48,490
allocate as part of<font color="#E5E5E5"> the mitigation</font>

1249
00:47:46,750 --> 00:47:51,460
create something called<font color="#E5E5E5"> a shadow table</font>

1250
00:47:48,490 --> 00:47:53,078
shadow import table and the shadow table

1251
00:47:51,460 --> 00:47:53,590
will have<font color="#CCCCCC"> basically the same</font><font color="#E5E5E5"> data will</font>

1252
00:47:53,079 --> 00:47:55,600
have<font color="#E5E5E5"> the same</font>

1253
00:47:53,590 --> 00:47:58,180
strings<font color="#CCCCCC"> it will have the same bound</font>

1254
00:47:55,600 --> 00:48:00,130
<font color="#E5E5E5">employed addresses but because we</font>

1255
00:47:58,180 --> 00:48:03,609
allocated we can control the protection

1256
00:48:00,130 --> 00:48:06,910
<font color="#E5E5E5">and</font><font color="#CCCCCC"> anytime this is accessed it's kind</font>

1257
00:48:03,610 --> 00:48:08,980
of suspicious because normally this<font color="#CCCCCC"> kind</font>

1258
00:48:06,910 --> 00:48:10,890
of<font color="#CCCCCC"> input</font><font color="#E5E5E5"> resolution</font><font color="#CCCCCC"> is done once by the</font>

1259
00:48:08,980 --> 00:48:14,080
loader at the beginning of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> process</font>

1260
00:48:10,890 --> 00:48:16,000
so if we look at<font color="#CCCCCC"> especially the strings</font>

1261
00:48:14,080 --> 00:48:17,259
the strings are looked at once and then

1262
00:48:16,000 --> 00:48:18,880
not<font color="#CCCCCC"> who said again the addresses are</font>

1263
00:48:17,260 --> 00:48:21,880
looked at all the time whenever the

1264
00:48:18,880 --> 00:48:23,440
application calls these<font color="#E5E5E5"> api's so we can</font>

1265
00:48:21,880 --> 00:48:25,660
put the guide page protection approach

1266
00:48:23,440 --> 00:48:28,540
to work here<font color="#E5E5E5"> again</font><font color="#CCCCCC"> and protect this</font>

1267
00:48:25,660 --> 00:48:32,140
whole shadow<font color="#CCCCCC"> input</font><font color="#E5E5E5"> address table using</font>

1268
00:48:28,540 --> 00:48:34,330
the same mechanism<font color="#E5E5E5"> so when the attacker</font>

1269
00:48:32,140 --> 00:48:36,670
now tries to walk the import address

1270
00:48:34,330 --> 00:48:38,710
<font color="#CCCCCC">table and look at</font><font color="#E5E5E5"> these strings to find</font>

1271
00:48:36,670 --> 00:48:40,810
api's they want to use they trigger<font color="#E5E5E5"> that</font>

1272
00:48:38,710 --> 00:48:42,400
<font color="#E5E5E5">guard page and we can</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> go and</font>

1273
00:48:40,810 --> 00:48:45,009
<font color="#CCCCCC">inspect them</font><font color="#E5E5E5"> again the same</font><font color="#CCCCCC"> way as we</font>

1274
00:48:42,400 --> 00:48:47,320
did<font color="#CCCCCC"> for export address filter and block</font>

1275
00:48:45,010 --> 00:48:48,940
them so that kind of<font color="#CCCCCC"> gives you</font><font color="#E5E5E5"> an</font>

1276
00:48:47,320 --> 00:48:50,290
overview<font color="#CCCCCC"> of kind of how the mitigations</font>

1277
00:48:48,940 --> 00:48:51,880
work kind of<font color="#E5E5E5"> at a high</font><font color="#CCCCCC"> level but</font>

1278
00:48:50,290 --> 00:48:54,250
understanding what's happening<font color="#CCCCCC"> under the</font>

1279
00:48:51,880 --> 00:48:56,320
<font color="#E5E5E5">cover the</font><font color="#CCCCCC"> anti rock mitigations</font><font color="#E5E5E5"> that we</font>

1280
00:48:54,250 --> 00:48:58,900
have reported from<font color="#CCCCCC"> Emmet's</font><font color="#E5E5E5"> without too</font>

1281
00:48:56,320 --> 00:49:00,610
many<font color="#E5E5E5"> changes and</font><font color="#CCCCCC"> i'm not</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go</font>

1282
00:48:58,900 --> 00:49:04,120
<font color="#E5E5E5">into a lot of detail</font><font color="#CCCCCC"> about how those</font>

1283
00:49:00,610 --> 00:49:05,820
work<font color="#E5E5E5"> but the way that</font><font color="#CCCCCC"> Emmet kind of</font>

1284
00:49:04,120 --> 00:49:08,589
implemented<font color="#CCCCCC"> it and</font><font color="#E5E5E5"> we preserve is by</font>

1285
00:49:05,820 --> 00:49:10,690
triggering<font color="#E5E5E5"> checks for</font><font color="#CCCCCC"> rock mitigations</font>

1286
00:49:08,590 --> 00:49:12,910
through API hooking<font color="#E5E5E5"> all of those</font>

1287
00:49:10,690 --> 00:49:14,260
sensitive<font color="#CCCCCC"> api's</font><font color="#E5E5E5"> and the the api's are</font>

1288
00:49:12,910 --> 00:49:16,990
pretty<font color="#E5E5E5"> similar between</font><font color="#CCCCCC"> import address</font>

1289
00:49:14,260 --> 00:49:20,110
<font color="#CCCCCC">filtering and anti</font><font color="#E5E5E5"> rock we want</font><font color="#CCCCCC"> to</font>

1290
00:49:16,990 --> 00:49:24,009
basically trap any call<font color="#CCCCCC"> to</font><font color="#E5E5E5"> those api's</font>

1291
00:49:20,110 --> 00:49:26,380
and check them using three checks<font color="#E5E5E5"> so the</font>

1292
00:49:24,010 --> 00:49:28,510
first check will check for stack

1293
00:49:26,380 --> 00:49:31,930
pivoting where the stack pointer<font color="#E5E5E5"> is</font>

1294
00:49:28,510 --> 00:49:33,730
<font color="#E5E5E5">pointing outside</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> usual range next</font>

1295
00:49:31,930 --> 00:49:36,399
<font color="#CCCCCC">check color check</font><font color="#E5E5E5"> will see if the return</font>

1296
00:49:33,730 --> 00:49:37,720
address on<font color="#E5E5E5"> the stack is not preceded by</font>

1297
00:49:36,400 --> 00:49:39,250
a call<font color="#E5E5E5"> instruction which</font><font color="#CCCCCC"> you would</font>

1298
00:49:37,720 --> 00:49:41,919
<font color="#CCCCCC">normally</font><font color="#E5E5E5"> see for a normal invocation of</font>

1299
00:49:39,250 --> 00:49:44,110
<font color="#E5E5E5">an API and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> the third one which is</font>

1300
00:49:41,920 --> 00:49:46,870
<font color="#E5E5E5">kind of most complicated</font><font color="#CCCCCC"> when does a</font>

1301
00:49:44,110 --> 00:49:49,540
forward simulation so when our targeted

1302
00:49:46,870 --> 00:49:50,920
API returns<font color="#E5E5E5"> what does the stack have in</font>

1303
00:49:49,540 --> 00:49:52,210
terms<font color="#E5E5E5"> of return</font><font color="#CCCCCC"> addresses and do they</font>

1304
00:49:50,920 --> 00:49:54,490
look<font color="#E5E5E5"> suspicious are you chaining</font>

1305
00:49:52,210 --> 00:49:56,740
together<font color="#CCCCCC"> very short snippets of assembly</font>

1306
00:49:54,490 --> 00:49:59,319
machine instructions<font color="#E5E5E5"> with lots of</font>

1307
00:49:56,740 --> 00:50:03,850
written instructions which is what a

1308
00:49:59,320 --> 00:50:05,170
<font color="#E5E5E5">wrap</font><font color="#CCCCCC"> expert typically would do so that</font>

1309
00:50:03,850 --> 00:50:07,150
was a<font color="#E5E5E5"> quick blast through kind of what</font>

1310
00:50:05,170 --> 00:50:09,010
<font color="#E5E5E5">exploit protection does</font>

1311
00:50:07,150 --> 00:50:10,330
how it works<font color="#E5E5E5"> under the covers</font><font color="#CCCCCC"> and thanks</font>

1312
00:50:09,010 --> 00:50:12,720
to<font color="#CCCCCC"> all these folks and the teams that</font>

1313
00:50:10,330 --> 00:50:14,830
<font color="#E5E5E5">worked on</font><font color="#CCCCCC"> Emmett's</font><font color="#E5E5E5"> and exploit guard and</font>

1314
00:50:12,720 --> 00:50:25,990
now I'll open<font color="#E5E5E5"> it up for questions if</font>

1315
00:50:14,830 --> 00:50:27,730
anybody<font color="#E5E5E5"> has anything thanks for such a</font>

1316
00:50:25,990 --> 00:50:28,810
<font color="#E5E5E5">great presentation on what whatever</font>

1317
00:50:27,730 --> 00:50:31,360
<font color="#E5E5E5">became of Emmett</font>

1318
00:50:28,810 --> 00:50:33,430
so<font color="#E5E5E5"> that was it's great to see how we</font>

1319
00:50:31,360 --> 00:50:34,870
move from<font color="#E5E5E5"> sort</font><font color="#CCCCCC"> of a conceptual product</font>

1320
00:50:33,430 --> 00:50:37,240
into<font color="#CCCCCC"> something that</font><font color="#E5E5E5"> actually has real</font>

1321
00:50:34,870 --> 00:50:39,069
<font color="#CCCCCC">value to people</font><font color="#E5E5E5"> using modern os's</font>

1322
00:50:37,240 --> 00:50:40,750
<font color="#E5E5E5">so we have time for just a couple of</font>

1323
00:50:39,070 --> 00:50:44,620
<font color="#E5E5E5">questions</font><font color="#CCCCCC"> because we need to prep for</font>

1324
00:50:40,750 --> 00:50:46,200
the next<font color="#E5E5E5"> session</font><font color="#CCCCCC"> so let's take two or</font>

1325
00:50:44,620 --> 00:50:51,759
three<font color="#E5E5E5"> questions depending on the length</font>

1326
00:50:46,200 --> 00:50:55,750
yeah so regarding<font color="#CCCCCC"> the integration this</font>

1327
00:50:51,760 --> 00:50:58,570
<font color="#CCCCCC">side okay okay regarding the integration</font>

1328
00:50:55,750 --> 00:51:01,060
with the<font color="#E5E5E5"> AEDPA</font><font color="#CCCCCC"> you mentioned about the</font>

1329
00:50:58,570 --> 00:51:03,280
export<font color="#CCCCCC"> card</font><font color="#E5E5E5"> it mentions that these files</font>

1330
00:51:01,060 --> 00:51:05,920
have<font color="#E5E5E5"> been kind of found by the exploit</font>

1331
00:51:03,280 --> 00:51:08,740
guide<font color="#E5E5E5"> now there is an option over there</font>

1332
00:51:05,920 --> 00:51:10,150
from<font color="#E5E5E5"> the ADP perspective where and we</font>

1333
00:51:08,740 --> 00:51:12,939
have to<font color="#E5E5E5"> block the file through</font><font color="#CCCCCC"> the</font>

1334
00:51:10,150 --> 00:51:14,950
defender<font color="#CCCCCC"> AV that</font><font color="#E5E5E5"> has a requirement</font>

1335
00:51:12,940 --> 00:51:17,710
wherein you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> to have the</font><font color="#CCCCCC"> real-time</font>

1336
00:51:14,950 --> 00:51:20,290
<font color="#CCCCCC">AV across the board on all the</font><font color="#E5E5E5"> endpoints</font>

1337
00:51:17,710 --> 00:51:21,790
are you guys<font color="#E5E5E5"> thinking that any kind of</font>

1338
00:51:20,290 --> 00:51:24,100
<font color="#E5E5E5">integration with the exploit card</font>

1339
00:51:21,790 --> 00:51:26,529
<font color="#CCCCCC">variant you</font><font color="#E5E5E5"> can block the file on those</font>

1340
00:51:24,100 --> 00:51:31,120
<font color="#CCCCCC">endpoints</font><font color="#E5E5E5"> any kind of signal exchange</font>

1341
00:51:26,530 --> 00:51:34,210
through<font color="#CCCCCC"> ADP in the future I would</font><font color="#E5E5E5"> say</font>

1342
00:51:31,120 --> 00:51:35,560
that the blocking<font color="#E5E5E5"> of file functionality</font>

1343
00:51:34,210 --> 00:51:37,870
that<font color="#E5E5E5"> you're describing from the ATP</font>

1344
00:51:35,560 --> 00:51:40,000
portal<font color="#CCCCCC"> I would see that</font><font color="#E5E5E5"> as sort of</font>

1345
00:51:37,870 --> 00:51:42,520
<font color="#CCCCCC">orthogonal to the features that we</font>

1346
00:51:40,000 --> 00:51:44,170
described today<font color="#CCCCCC"> one good thing that you</font>

1347
00:51:42,520 --> 00:51:47,530
pointed<font color="#E5E5E5"> out though is</font><font color="#CCCCCC"> that feature does</font>

1348
00:51:44,170 --> 00:51:50,410
require<font color="#E5E5E5"> defender AV to be the active AV</font>

1349
00:51:47,530 --> 00:51:52,030
on your machine out<font color="#E5E5E5"> of the two features</font>

1350
00:51:50,410 --> 00:51:54,129
<font color="#CCCCCC">that Marc and I described the one that I</font>

1351
00:51:52,030 --> 00:51:56,560
talked about<font color="#E5E5E5"> attack service reduction</font>

1352
00:51:54,130 --> 00:51:59,590
actually<font color="#CCCCCC"> also has a similar</font><font color="#E5E5E5"> requirement</font>

1353
00:51:56,560 --> 00:52:01,480
<font color="#E5E5E5">in</font><font color="#CCCCCC"> that we're using defender</font><font color="#E5E5E5"> AV to</font>

1354
00:51:59,590 --> 00:52:03,250
perform the blocking on your client

1355
00:52:01,480 --> 00:52:04,690
machine<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> stuff that</font><font color="#E5E5E5"> Marc</font>

1356
00:52:03,250 --> 00:52:07,390
described though is built<font color="#E5E5E5"> into the</font>

1357
00:52:04,690 --> 00:52:10,200
operating<font color="#CCCCCC"> system does not require AV</font>

1358
00:52:07,390 --> 00:52:10,200
intervention at all

1359
00:52:15,930 --> 00:52:21,040
blocking would take take place on the

1360
00:52:18,220 --> 00:52:23,470
client<font color="#CCCCCC"> but</font><font color="#E5E5E5"> what you see on the HTTP</font>

1361
00:52:21,040 --> 00:52:24,550
portal is hey this was blocked<font color="#E5E5E5"> or this</font>

1362
00:52:23,470 --> 00:52:26,560
would have been<font color="#E5E5E5"> locked</font>

1363
00:52:24,550 --> 00:52:28,270
it's an audit mode<font color="#E5E5E5"> that kind</font><font color="#CCCCCC"> of</font>

1364
00:52:26,560 --> 00:52:30,250
<font color="#E5E5E5">information so the blocking itself is</font>

1365
00:52:28,270 --> 00:52:32,410
happening on the Windows machine<font color="#CCCCCC"> but</font><font color="#E5E5E5"> you</font>

1366
00:52:30,250 --> 00:52:33,940
do see that<font color="#E5E5E5"> data back on the</font><font color="#CCCCCC"> HTTP portal</font>

1367
00:52:32,410 --> 00:52:36,910
<font color="#E5E5E5">and we're gonna take one</font><font color="#CCCCCC"> more question</font>

1368
00:52:33,940 --> 00:52:38,740
right<font color="#CCCCCC"> over</font><font color="#E5E5E5"> here so my question is all</font>

1369
00:52:36,910 --> 00:52:42,040
<font color="#E5E5E5">the mitigation steps that you have</font><font color="#CCCCCC"> is</font>

1370
00:52:38,740 --> 00:52:43,720
there<font color="#CCCCCC"> a way</font><font color="#E5E5E5"> to plug in for somebody</font>

1371
00:52:42,040 --> 00:52:45,550
<font color="#E5E5E5">that's not a part of your team I mean</font>

1372
00:52:43,720 --> 00:52:48,609
<font color="#CCCCCC">what is the extension mechanism is there</font>

1373
00:52:45,550 --> 00:52:50,530
one we<font color="#E5E5E5"> don't really offer an extension</font>

1374
00:52:48,610 --> 00:52:53,200
mechanism<font color="#CCCCCC"> to add new mitigations to the</font>

1375
00:52:50,530 --> 00:52:55,210
OS this way it's kind of I guess we're

1376
00:52:53,200 --> 00:52:56,890
<font color="#CCCCCC">gonna be looking at</font><font color="#E5E5E5"> if there any</font>

1377
00:52:55,210 --> 00:52:58,120
bypasses<font color="#E5E5E5"> our new exploit techniques that</font>

1378
00:52:56,890 --> 00:52:59,830
<font color="#E5E5E5">come up in the wire that we need to</font>

1379
00:52:58,120 --> 00:53:02,109
respond<font color="#E5E5E5"> to we can then use our regular</font>

1380
00:52:59,830 --> 00:53:04,360
like twice a<font color="#E5E5E5"> year or windows insider</font>

1381
00:53:02,110 --> 00:53:06,340
preview program<font color="#CCCCCC"> as</font><font color="#E5E5E5"> a way to kind of</font>

1382
00:53:04,360 --> 00:53:08,050
quickly<font color="#E5E5E5"> improve mitigations to cover</font>

1383
00:53:06,340 --> 00:53:09,340
that<font color="#E5E5E5"> but we didn't build it as kind of</font><font color="#CCCCCC"> a</font>

1384
00:53:08,050 --> 00:53:13,200
generic platform<font color="#E5E5E5"> where third parties</font>

1385
00:53:09,340 --> 00:53:15,970
could add new mitigations<font color="#E5E5E5"> to to the OS a</font>

1386
00:53:13,200 --> 00:53:18,549
big<font color="#E5E5E5"> thank you to Jessica and</font><font color="#CCCCCC"> Mark for</font>

1387
00:53:15,970 --> 00:53:22,049
<font color="#E5E5E5">the actual and tour of defense</font>

1388
00:53:18,550 --> 00:53:22,050
technologies inside Windows 10

