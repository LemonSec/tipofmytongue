1
00:00:00,930 --> 00:00:08,260
[Music]

2
00:00:11,790 --> 00:00:11,980
[Applause]

3
00:00:11,980 --> 00:00:15,210
[Music]

4
00:00:15,599 --> 00:00:15,799
good hello

5
00:00:16,160 --> 00:00:19,520
tel aviv good evening blue hat such a

6
00:00:19,520 --> 00:00:22,080
great experience to see a lot of people

7
00:00:22,080 --> 00:00:26,000
there after all discovered and you know

8
00:00:26,000 --> 00:00:28,480
live events no more zoom yeah

9
00:00:28,480 --> 00:00:29,279
so

10
00:00:29,279 --> 00:00:32,079
today we're going to talk about web3

11
00:00:32,079 --> 00:00:34,880
security the blockchain is your same

12
00:00:34,880 --> 00:00:37,120
my name is talberry and i'm co-founder

13
00:00:37,120 --> 00:00:38,960
cto for xango

14
00:00:38,960 --> 00:00:41,920
developing a cq mobile a cryptocurrency

15
00:00:41,920 --> 00:00:44,079
wallet

16
00:00:44,079 --> 00:00:46,480
hi i'm shalev and i'm a cryptography and

17
00:00:46,480 --> 00:00:49,360
blockchain researcher at xango

18
00:00:49,360 --> 00:00:50,160
yeah

19
00:00:50,160 --> 00:00:51,680
yeah

20
00:00:51,680 --> 00:00:54,000
so what are we going to talk about today

21
00:00:54,000 --> 00:00:57,039
so we'll start what the hell is web3

22
00:00:57,039 --> 00:00:59,120
everybody's saying it nobody know what

23
00:00:59,120 --> 00:01:00,079
it is

24
00:01:00,079 --> 00:01:02,320
so hopefully after this talk you will

25
00:01:02,320 --> 00:01:03,120
know

26
00:01:03,120 --> 00:01:03,920
and

27
00:01:03,920 --> 00:01:06,560
web3 is web on blockchain don't worry

28
00:01:06,560 --> 00:01:08,880
we'll talk about both of these things

29
00:01:08,880 --> 00:01:12,720
and then we will dissect web3 into its

30
00:01:12,720 --> 00:01:15,759
three main components the wallet the web

31
00:01:15,759 --> 00:01:19,360
2 interface and smart contracts

32
00:01:19,360 --> 00:01:21,600
and once we had

33
00:01:21,600 --> 00:01:24,240
dissected it we can analyze the security

34
00:01:24,240 --> 00:01:26,640
of all of these three elements

35
00:01:26,640 --> 00:01:29,200
and we will leverage the fact that the

36
00:01:29,200 --> 00:01:31,200
blockchain is your theme

37
00:01:31,200 --> 00:01:33,119
sim if you don't know this term is

38
00:01:33,119 --> 00:01:36,079
security incident and event management

39
00:01:36,079 --> 00:01:38,720
which is a fancy word for a database

40
00:01:38,720 --> 00:01:40,400
where everything is

41
00:01:40,400 --> 00:01:42,960
saved hopefully and

42
00:01:42,960 --> 00:01:45,520
we will leverage the fact that this the

43
00:01:45,520 --> 00:01:49,360
blockchain is actually a great theme and

44
00:01:49,360 --> 00:01:51,840
using that we will present two

45
00:01:51,840 --> 00:01:55,280
a analysis that we made two postmortem

46
00:01:55,280 --> 00:01:57,840
on a recent attacks the badger dao

47
00:01:57,840 --> 00:02:00,159
attack and the multi-chain attack each

48
00:02:00,159 --> 00:02:02,719
representing a different attack vector

49
00:02:02,719 --> 00:02:05,920
in this triangle of a web 3 and we will

50
00:02:05,920 --> 00:02:08,639
conclude with some uh

51
00:02:08,639 --> 00:02:11,280
aspect that we think that

52
00:02:11,280 --> 00:02:13,440
we can leverage that fact that the

53
00:02:13,440 --> 00:02:15,599
blockchain is your theme into something

54
00:02:15,599 --> 00:02:17,040
greater than just

55
00:02:17,040 --> 00:02:19,760
having great postmortem but also make it

56
00:02:19,760 --> 00:02:22,800
actionable so we can stop attacks before

57
00:02:22,800 --> 00:02:25,599
they happen and not just analyze what

58
00:02:25,599 --> 00:02:26,560
they did

59
00:02:26,560 --> 00:02:29,040
so let's start with the beginning and we

60
00:02:29,040 --> 00:02:31,440
want to start with the story

61
00:02:31,440 --> 00:02:33,519
so this is vitalik buterin one of the

62
00:02:33,519 --> 00:02:37,680
co-founders of ethereum and when

63
00:02:37,680 --> 00:02:39,840
vitalik was a kid he used to play world

64
00:02:39,840 --> 00:02:42,400
of warcraft and he had

65
00:02:42,400 --> 00:02:45,280
he played a lot and was able to achieve

66
00:02:45,280 --> 00:02:48,239
some great asset i don't know what it is

67
00:02:48,239 --> 00:02:50,640
it's a life spell if someone played

68
00:02:50,640 --> 00:02:52,560
world of warcraft but maybe they know

69
00:02:52,560 --> 00:02:56,160
what it is but then the platform decided

70
00:02:56,160 --> 00:02:58,800
they no longer support this asset for

71
00:02:58,800 --> 00:03:00,720
some reason maybe it was too powerful or

72
00:03:00,720 --> 00:03:03,120
something like that so they just took it

73
00:03:03,120 --> 00:03:05,760
from vitalik the kid and

74
00:03:05,760 --> 00:03:08,319
vitalik cried that night and realized

75
00:03:08,319 --> 00:03:09,760
that

76
00:03:09,760 --> 00:03:11,440
centralized systems

77
00:03:11,440 --> 00:03:12,560
are evil

78
00:03:12,560 --> 00:03:15,200
and because you don't own

79
00:03:15,200 --> 00:03:18,080
the digital assets on that platform the

80
00:03:18,080 --> 00:03:20,480
platform owns it not you

81
00:03:20,480 --> 00:03:22,959
and he decided and we see it afterwards

82
00:03:22,959 --> 00:03:24,239
how to

83
00:03:24,239 --> 00:03:25,360
break

84
00:03:25,360 --> 00:03:27,760
from the grasp of that centralized

85
00:03:27,760 --> 00:03:28,720
system

86
00:03:28,720 --> 00:03:32,640
so this is your normal web 2 application

87
00:03:32,640 --> 00:03:35,760
and you can see what is very easy for

88
00:03:35,760 --> 00:03:36,560
them

89
00:03:36,560 --> 00:03:39,280
for the platform to deprive you from

90
00:03:39,280 --> 00:03:42,400
your assets because everything there the

91
00:03:42,400 --> 00:03:45,360
database the compute the interface is

92
00:03:45,360 --> 00:03:48,239
all under the control of the

93
00:03:48,239 --> 00:03:51,360
window of the platform and the user just

94
00:03:51,360 --> 00:03:53,680
have a browser but every so when they

95
00:03:53,680 --> 00:03:55,519
want to remove an asset they just remove

96
00:03:55,519 --> 00:03:57,599
it from the database off of the compute

97
00:03:57,599 --> 00:03:59,599
or just block it in the interface and

98
00:03:59,599 --> 00:04:01,599
there's nothing you can do you don't

99
00:04:01,599 --> 00:04:02,959
really own

100
00:04:02,959 --> 00:04:06,000
your digital assets on current web and

101
00:04:06,000 --> 00:04:09,120
that's exactly what web3 comes to change

102
00:04:09,120 --> 00:04:12,640
this is the core problem web3 is solving

103
00:04:12,640 --> 00:04:13,760
so

104
00:04:13,760 --> 00:04:16,320
it represents the third revolution or

105
00:04:16,320 --> 00:04:19,040
evolution of web if we had the web one

106
00:04:19,040 --> 00:04:21,199
the original web if you're i'm old

107
00:04:21,199 --> 00:04:23,120
enough to remember it when it was just

108
00:04:23,120 --> 00:04:25,360
static and you can just read these

109
00:04:25,360 --> 00:04:28,880
digital brochures over the internet then

110
00:04:28,880 --> 00:04:30,639
there's the web we know as we know it

111
00:04:30,639 --> 00:04:33,280
today it's reactive you can read and

112
00:04:33,280 --> 00:04:35,360
write you can interact with the web

113
00:04:35,360 --> 00:04:38,400
application it's not just static website

114
00:04:38,400 --> 00:04:42,240
but web3 is about owning the content

115
00:04:42,240 --> 00:04:46,000
owning digital assets so how do would

116
00:04:46,000 --> 00:04:48,479
you own that you have to remove the

117
00:04:48,479 --> 00:04:51,600
control of the platform and move it to

118
00:04:51,600 --> 00:04:55,120
somewhere else where is this other place

119
00:04:55,120 --> 00:04:58,479
the blockchain so what is a blockchain

120
00:04:58,479 --> 00:05:00,479
blockchain is just a distributed

121
00:05:00,479 --> 00:05:03,360
database it's no magic i'm saying just

122
00:05:03,360 --> 00:05:05,520
with quotes because it's a hard problem

123
00:05:05,520 --> 00:05:07,600
to reach consensus in a distributed

124
00:05:07,600 --> 00:05:08,639
system

125
00:05:08,639 --> 00:05:10,960
but blockchain solved that and on

126
00:05:10,960 --> 00:05:13,520
blockchain messages are authenticated

127
00:05:13,520 --> 00:05:16,240
which means users has addresses that

128
00:05:16,240 --> 00:05:17,919
correspond to

129
00:05:17,919 --> 00:05:19,440
their public key

130
00:05:19,440 --> 00:05:20,479
and

131
00:05:20,479 --> 00:05:23,120
they hold a private key

132
00:05:23,120 --> 00:05:25,120
they have that pair and the private key

133
00:05:25,120 --> 00:05:27,840
is typically saved in a wallet

134
00:05:27,840 --> 00:05:30,880
and this contra construction is very

135
00:05:30,880 --> 00:05:31,919
helpful

136
00:05:31,919 --> 00:05:34,800
uh in the arena of money transfer and

137
00:05:34,800 --> 00:05:37,840
that's exactly what bitcoin did so

138
00:05:37,840 --> 00:05:40,960
bitcoin has one built-in program we'll

139
00:05:40,960 --> 00:05:43,440
talk about more about that in the next

140
00:05:43,440 --> 00:05:46,080
slide which is basically if we think of

141
00:05:46,080 --> 00:05:48,000
it as a program it's send

142
00:05:48,000 --> 00:05:50,880
from source to destination and amount so

143
00:05:50,880 --> 00:05:53,199
it's really a program so when you send a

144
00:05:53,199 --> 00:05:54,720
transaction

145
00:05:54,720 --> 00:05:56,319
the

146
00:05:56,319 --> 00:05:59,440
the this distributed database first

147
00:05:59,440 --> 00:06:02,960
verifies the authenticity of the message

148
00:06:02,960 --> 00:06:05,120
by verifying the signature

149
00:06:05,120 --> 00:06:07,840
then they're doing a very simple

150
00:06:07,840 --> 00:06:10,080
executing a very simple program you can

151
00:06:10,080 --> 00:06:13,680
write it it's the second

152
00:06:13,680 --> 00:06:15,440
program you would write right after

153
00:06:15,440 --> 00:06:17,919
hello world it's

154
00:06:17,919 --> 00:06:19,600
verifying that the sender has enough

155
00:06:19,600 --> 00:06:21,120
balance then

156
00:06:21,120 --> 00:06:22,560
subtracting

157
00:06:22,560 --> 00:06:24,400
the amount from their balance and

158
00:06:24,400 --> 00:06:28,000
incrementing that into the receiver

159
00:06:28,000 --> 00:06:30,800
account and finally the result is

160
00:06:30,800 --> 00:06:33,759
persisted and stored on that distributed

161
00:06:33,759 --> 00:06:36,960
database the blockchain so blockchain

162
00:06:36,960 --> 00:06:39,759
can serve as a database so we can remove

163
00:06:39,759 --> 00:06:41,199
the database

164
00:06:41,199 --> 00:06:44,960
from a let's the

165
00:06:44,960 --> 00:06:46,800
platforms cloud and move it to the

166
00:06:46,800 --> 00:06:49,520
blockchain but still we have to handle

167
00:06:49,520 --> 00:06:51,919
the execution because right now it's

168
00:06:51,919 --> 00:06:54,160
just a database it's not really

169
00:06:54,160 --> 00:06:56,960
executing a code and we want to play

170
00:06:56,960 --> 00:06:59,440
games world of warcraft for example

171
00:06:59,440 --> 00:07:01,840
so uh this is so this is the classic

172
00:07:01,840 --> 00:07:03,440
blockchain you just have a wallet you

173
00:07:03,440 --> 00:07:05,759
want to send something you send a signed

174
00:07:05,759 --> 00:07:08,560
transaction to the blockchain and when

175
00:07:08,560 --> 00:07:10,720
someone sends a transaction to you you

176
00:07:10,720 --> 00:07:12,639
get it as a notification from the

177
00:07:12,639 --> 00:07:14,080
blockchain

178
00:07:14,080 --> 00:07:16,319
and but we want to go further and this

179
00:07:16,319 --> 00:07:18,639
is where we meet vitalik again vitalik

180
00:07:18,639 --> 00:07:21,280
the little boy from uh the story of

181
00:07:21,280 --> 00:07:23,919
world of warcraft now is a few years

182
00:07:23,919 --> 00:07:26,720
older and he co-founded the

183
00:07:26,720 --> 00:07:29,120
ethereum so ethereum has the same one

184
00:07:29,120 --> 00:07:33,120
built uh one a built-in program

185
00:07:33,120 --> 00:07:35,360
the same as bitcoin but

186
00:07:35,360 --> 00:07:38,639
it has a really great feature and this

187
00:07:38,639 --> 00:07:40,880
is like what uh

188
00:07:40,880 --> 00:07:42,960
the new uh

189
00:07:42,960 --> 00:07:46,400
in innovation that ethereum brought to

190
00:07:46,400 --> 00:07:50,319
the blockchain world you can also

191
00:07:50,319 --> 00:07:52,800
you don't just hold in this database

192
00:07:52,800 --> 00:07:54,319
just balances

193
00:07:54,319 --> 00:07:57,919
you can also store programs and

194
00:07:57,919 --> 00:07:59,520
something like

195
00:07:59,520 --> 00:08:01,039
dlls

196
00:08:01,039 --> 00:08:04,240
libraries you can upload binary code and

197
00:08:04,240 --> 00:08:07,199
it will be stored and have some address

198
00:08:07,199 --> 00:08:10,240
and when you want to interact with it or

199
00:08:10,240 --> 00:08:12,479
anyone wants to interact with it they

200
00:08:12,479 --> 00:08:14,479
just need to send a transaction to that

201
00:08:14,479 --> 00:08:17,680
address and that transaction is a

202
00:08:17,680 --> 00:08:19,680
serialization

203
00:08:19,680 --> 00:08:22,000
it's an rpc the next talk by the way is

204
00:08:22,000 --> 00:08:24,879
about rpc so the same concept

205
00:08:24,879 --> 00:08:26,720
you serialize the

206
00:08:26,720 --> 00:08:29,759
function name and the parameters and now

207
00:08:29,759 --> 00:08:31,840
instead of the blockchain just executing

208
00:08:31,840 --> 00:08:35,039
that one program of transferring money

209
00:08:35,039 --> 00:08:37,599
it i execute your

210
00:08:37,599 --> 00:08:40,479
arbitrary code the code that someone has

211
00:08:40,479 --> 00:08:43,279
uploaded in the past it gets evaluated

212
00:08:43,279 --> 00:08:46,480
with the parameters uh that you

213
00:08:46,480 --> 00:08:49,519
specified and the results are then

214
00:08:49,519 --> 00:08:51,600
persisted to the blockchain

215
00:08:51,600 --> 00:08:54,480
uh to that distributed database so we

216
00:08:54,480 --> 00:08:57,839
gained the ability to uh upload

217
00:08:57,839 --> 00:09:01,440
arbitrary code into a distributed system

218
00:09:01,440 --> 00:09:04,160
so we managed to move also not only the

219
00:09:04,160 --> 00:09:06,560
database but also the compute to the

220
00:09:06,560 --> 00:09:10,480
blockchain so we're almost independent

221
00:09:10,480 --> 00:09:13,519
from the platform so the platform no

222
00:09:13,519 --> 00:09:15,600
longer controls that and cannot change

223
00:09:15,600 --> 00:09:17,440
the rule in the middle like world of

224
00:09:17,440 --> 00:09:20,480
warcraft so what we got this is web3 we

225
00:09:20,480 --> 00:09:23,440
married web and blockchain together

226
00:09:23,440 --> 00:09:27,200
and now there is that triangle so when

227
00:09:27,200 --> 00:09:28,720
you want to

228
00:09:28,720 --> 00:09:33,200
do something in a web 3 you go to the

229
00:09:33,200 --> 00:09:34,720
web to interface because we are

230
00:09:34,720 --> 00:09:36,640
engineers

231
00:09:36,640 --> 00:09:40,000
we say we will figure out ux in the end

232
00:09:40,000 --> 00:09:42,640
and so ux the user experience still

233
00:09:42,640 --> 00:09:46,560
stays on the old web 2 interface but

234
00:09:46,560 --> 00:09:48,800
you go there and this

235
00:09:48,800 --> 00:09:51,680
interface interacts with your wallet and

236
00:09:51,680 --> 00:09:54,720
suggests transaction to be signed if you

237
00:09:54,720 --> 00:09:57,680
want to sign it then you go ahead as a

238
00:09:57,680 --> 00:09:59,680
user you sign it and send it to the

239
00:09:59,680 --> 00:10:02,720
blockchain and the blockchain execute

240
00:10:02,720 --> 00:10:06,560
that on the smart contract and the

241
00:10:06,560 --> 00:10:09,360
the web 2 interface is updated with the

242
00:10:09,360 --> 00:10:13,680
result and this triangle goes on and on

243
00:10:13,680 --> 00:10:15,920
and the so there are three main

244
00:10:15,920 --> 00:10:18,160
components to web3

245
00:10:18,160 --> 00:10:20,640
web 2 app interface wallet blockchain

246
00:10:20,640 --> 00:10:23,120
and blockchain smart contracts

247
00:10:23,120 --> 00:10:25,839
and for example this is the poster child

248
00:10:25,839 --> 00:10:27,200
of

249
00:10:27,200 --> 00:10:30,959
a of web 3 nfts or digital assets so

250
00:10:30,959 --> 00:10:34,000
what does it mean that the user owns nft

251
00:10:34,000 --> 00:10:35,519
the ownership is public on the

252
00:10:35,519 --> 00:10:37,680
blockchain you can look at the

253
00:10:37,680 --> 00:10:40,480
blockchain explorer a visual

254
00:10:40,480 --> 00:10:42,240
to visualize the blockchain and you can

255
00:10:42,240 --> 00:10:44,480
see that this address

256
00:10:44,480 --> 00:10:47,519
is the owner of this magnificent bold

257
00:10:47,519 --> 00:10:48,959
ape

258
00:10:48,959 --> 00:10:51,600
and because it the user is not binded

259
00:10:51,600 --> 00:10:54,320
it's not bound to a specific platform it

260
00:10:54,320 --> 00:10:57,600
can be listed in multiple

261
00:10:57,600 --> 00:11:00,560
marketplaces it can be listed on openc

262
00:11:00,560 --> 00:11:02,320
and wearable because the user actually

263
00:11:02,320 --> 00:11:05,360
own it and can transfer it however they

264
00:11:05,360 --> 00:11:08,959
like so i think we can stop the talk

265
00:11:08,959 --> 00:11:10,560
here because we got the perfect

266
00:11:10,560 --> 00:11:14,000
hollywood a happy end like vitalik the

267
00:11:14,000 --> 00:11:16,880
little kid deprived from their digital

268
00:11:16,880 --> 00:11:20,399
assets uh so it takes his revenge with

269
00:11:20,399 --> 00:11:22,480
on centralized uh

270
00:11:22,480 --> 00:11:25,440
on centralized apps and decentralized

271
00:11:25,440 --> 00:11:27,839
them and in the way it becomes a

272
00:11:27,839 --> 00:11:30,640
billionaire and everybody happy so

273
00:11:30,640 --> 00:11:33,040
apparently there are some problems and

274
00:11:33,040 --> 00:11:35,600
that's where we're going with the talk

275
00:11:35,600 --> 00:11:36,320
so

276
00:11:36,320 --> 00:11:39,760
web3 has a serious security problem

277
00:11:39,760 --> 00:11:43,920
so web3 apps are being hacked with the

278
00:11:43,920 --> 00:11:45,120
uh

279
00:11:45,120 --> 00:11:46,880
hundreds of millions of dollars but also

280
00:11:46,880 --> 00:11:48,800
users this is a screenshot someone

281
00:11:48,800 --> 00:11:51,440
complaining to the wallet vendo that

282
00:11:51,440 --> 00:11:53,360
all of their digital assets are gone and

283
00:11:53,360 --> 00:11:56,000
say okay there could be five reasons why

284
00:11:56,000 --> 00:11:58,079
it happened it's normal it's warp three

285
00:11:58,079 --> 00:11:59,839
you can lose everything

286
00:11:59,839 --> 00:12:03,200
and so let's go on and dissect that

287
00:12:03,200 --> 00:12:05,440
problems in the

288
00:12:05,440 --> 00:12:06,880
triangle

289
00:12:06,880 --> 00:12:07,839
model

290
00:12:07,839 --> 00:12:10,560
so first the wallet problems wallet is

291
00:12:10,560 --> 00:12:12,639
actually problem with the private key

292
00:12:12,639 --> 00:12:15,200
the private key can be stolen hacked

293
00:12:15,200 --> 00:12:17,040
socially engineered

294
00:12:17,040 --> 00:12:20,560
or just get lost and this is not new to

295
00:12:20,560 --> 00:12:23,040
web3 so we just briefly mention it

296
00:12:23,040 --> 00:12:25,200
because this is the same problem is with

297
00:12:25,200 --> 00:12:26,800
classic blockchain

298
00:12:26,800 --> 00:12:29,519
bitcoin has that problem too it's not

299
00:12:29,519 --> 00:12:32,160
ethereum did not invent that invent that

300
00:12:32,160 --> 00:12:34,880
so and the solution is around a secure

301
00:12:34,880 --> 00:12:36,160
storage of

302
00:12:36,160 --> 00:12:37,760
private keys could be hardware or what

303
00:12:37,760 --> 00:12:39,360
we're doing in xango multipatter

304
00:12:39,360 --> 00:12:43,120
computation so in xengo in our wallet we

305
00:12:43,120 --> 00:12:44,639
utilizing

306
00:12:44,639 --> 00:12:49,519
mpc and you using distributed algorithms

307
00:12:49,519 --> 00:12:52,000
state-of-the-art cryptography we are

308
00:12:52,000 --> 00:12:53,600
able to

309
00:12:53,600 --> 00:12:56,160
generate a key in a distributed manner

310
00:12:56,160 --> 00:12:58,800
and send messages in distributed manner

311
00:12:58,800 --> 00:13:01,040
so the private key is never in one place

312
00:13:01,040 --> 00:13:04,639
and cannot be stolen easily stolen so

313
00:13:04,639 --> 00:13:06,639
it's a lot harder for the attacker to

314
00:13:06,639 --> 00:13:08,639
steal that but we don't want to focus on

315
00:13:08,639 --> 00:13:11,920
that because again this also existed for

316
00:13:11,920 --> 00:13:13,360
older system

317
00:13:13,360 --> 00:13:15,440
when we want to start looking into

318
00:13:15,440 --> 00:13:19,440
specifics of web 3 attack so

319
00:13:19,440 --> 00:13:22,800
shalev go on with the first thing okay

320
00:13:22,800 --> 00:13:24,880
so hi um

321
00:13:24,880 --> 00:13:26,320
so what we're going to talk about now is

322
00:13:26,320 --> 00:13:28,560
is we looked at the the wallet and the

323
00:13:28,560 --> 00:13:30,000
issues that we had on that end and now

324
00:13:30,000 --> 00:13:31,279
we want to look at the front end so this

325
00:13:31,279 --> 00:13:33,120
is like the web 2 version like we said

326
00:13:33,120 --> 00:13:34,240
at the end of the day you do have a

327
00:13:34,240 --> 00:13:37,040
smart contract and you have uh

328
00:13:37,040 --> 00:13:38,639
wallets that can interact with it but

329
00:13:38,639 --> 00:13:40,079
the users don't know how to actually

330
00:13:40,079 --> 00:13:41,279
interact with the blockchain and they

331
00:13:41,279 --> 00:13:43,040
don't know how to form these special

332
00:13:43,040 --> 00:13:45,120
transactions and create these method

333
00:13:45,120 --> 00:13:46,639
calls and send them to the blockchain

334
00:13:46,639 --> 00:13:48,320
they need some sort of gui to do this

335
00:13:48,320 --> 00:13:49,120
right

336
00:13:49,120 --> 00:13:50,639
so we're going to look at a specific one

337
00:13:50,639 --> 00:13:52,880
called badger dao now badger dao the

338
00:13:52,880 --> 00:13:54,720
their like slogan was there we are

339
00:13:54,720 --> 00:13:57,600
bringing defy to bitcoin um

340
00:13:57,600 --> 00:13:59,120
they sort of want you to be able to earn

341
00:13:59,120 --> 00:14:00,560
interest on your bitcoin it's a very

342
00:14:00,560 --> 00:14:03,360
common thing in defy and

343
00:14:03,360 --> 00:14:04,800
the way that they're doing this is that

344
00:14:04,800 --> 00:14:05,920
you have some sort of wrapped version

345
00:14:05,920 --> 00:14:07,120
we're also we're going to explain the

346
00:14:07,120 --> 00:14:08,800
wrapped version in a second but they

347
00:14:08,800 --> 00:14:10,079
have some sort of wrapped version on bit

348
00:14:10,079 --> 00:14:12,000
of bitcoin on ethereum and they let you

349
00:14:12,000 --> 00:14:14,160
sort of deposit it uh into all these

350
00:14:14,160 --> 00:14:15,760
kinds of votes and that you get these

351
00:14:15,760 --> 00:14:16,639
sort of

352
00:14:16,639 --> 00:14:18,959
incredibly high uh annual percentages of

353
00:14:18,959 --> 00:14:21,360
like 75 percent on your bitcoin which is

354
00:14:21,360 --> 00:14:23,360
uh really nice uh

355
00:14:23,360 --> 00:14:25,920
if you if you if you want to do that um

356
00:14:25,920 --> 00:14:28,399
so firstly we'll just mention quickly uh

357
00:14:28,399 --> 00:14:30,800
something called an erc20 token so you

358
00:14:30,800 --> 00:14:32,320
might have heard the term erc20 you

359
00:14:32,320 --> 00:14:34,000
might have not but essentially like we

360
00:14:34,000 --> 00:14:36,000
said ethereum is just a virtual machine

361
00:14:36,000 --> 00:14:38,800
that can run any piece of code so uh

362
00:14:38,800 --> 00:14:39,760
something very simple that you might

363
00:14:39,760 --> 00:14:41,440
want to do is implement wait i actually

364
00:14:41,440 --> 00:14:43,279
want to have a token like for myself i

365
00:14:43,279 --> 00:14:44,720
know there's bitcoin there's ethereum

366
00:14:44,720 --> 00:14:46,320
and there's plenty of others but i don't

367
00:14:46,320 --> 00:14:47,360
want to go and create this whole

368
00:14:47,360 --> 00:14:49,040
blockchain and this whole consensus

369
00:14:49,040 --> 00:14:50,880
protocol and everything just because i

370
00:14:50,880 --> 00:14:52,720
want to implement my own coin for maybe

371
00:14:52,720 --> 00:14:54,959
my company or whatever it is i'm doing

372
00:14:54,959 --> 00:14:56,880
um so

373
00:14:56,880 --> 00:14:59,040
in ethereum the ethereum foundation uh

374
00:14:59,040 --> 00:15:01,600
sort of worked on uh this erc20 token

375
00:15:01,600 --> 00:15:03,440
it's like an rfc in uh

376
00:15:03,440 --> 00:15:05,440
normal like tcp protocols and internet

377
00:15:05,440 --> 00:15:06,720
protocols

378
00:15:06,720 --> 00:15:08,720
uh it's just a standard this is how you

379
00:15:08,720 --> 00:15:10,720
should implement a program that

380
00:15:10,720 --> 00:15:12,480
implements a token and what does the

381
00:15:12,480 --> 00:15:13,680
token have well you can see all these

382
00:15:13,680 --> 00:15:15,440
kinds of functions that you have to to

383
00:15:15,440 --> 00:15:16,720
sort of implement the total supply

384
00:15:16,720 --> 00:15:18,800
balance off somebody transfer you can

385
00:15:18,800 --> 00:15:20,320
transfer money you can allow somebody to

386
00:15:20,320 --> 00:15:21,440
spend your money we'll talk about that

387
00:15:21,440 --> 00:15:23,279
in a minute and you can do all kinds of

388
00:15:23,279 --> 00:15:24,240
things

389
00:15:24,240 --> 00:15:26,240
okay so now we know there's this way of

390
00:15:26,240 --> 00:15:28,560
doing uh uh creating a coin and

391
00:15:28,560 --> 00:15:30,320
everybody can create a cone very quickly

392
00:15:30,320 --> 00:15:31,199
um

393
00:15:31,199 --> 00:15:33,199
it's just writing a few lines of code

394
00:15:33,199 --> 00:15:35,279
and uploading it to the ethereum uh

395
00:15:35,279 --> 00:15:37,600
virtual machine uh we'll sort of talk a

396
00:15:37,600 --> 00:15:40,399
bit about oh sorry

397
00:15:40,399 --> 00:15:42,800
okay we're talking about how uh bajo dao

398
00:15:42,800 --> 00:15:45,279
was hacked so what was acts here as i

399
00:15:45,279 --> 00:15:47,199
said was this interface the web 2

400
00:15:47,199 --> 00:15:48,560
interface that people want to go on like

401
00:15:48,560 --> 00:15:50,720
budget app.budgetdow.com

402
00:15:50,720 --> 00:15:51,839
um

403
00:15:51,839 --> 00:15:54,480
and what happened was in uh we still

404
00:15:54,480 --> 00:15:56,079
talk about the story here a little bit

405
00:15:56,079 --> 00:15:58,639
uh in august of 2021 there was a

406
00:15:58,639 --> 00:16:01,360
vulnerability uh disclosed in cloudflare

407
00:16:01,360 --> 00:16:03,759
and some attackers uh that we won't go

408
00:16:03,759 --> 00:16:04,959
into this of the verbality but

409
00:16:04,959 --> 00:16:06,240
essentially the vulnerability worked in

410
00:16:06,240 --> 00:16:08,800
a way that you send a request

411
00:16:08,800 --> 00:16:10,959
something okay cloudflare is a cdn you

412
00:16:10,959 --> 00:16:11,920
can

413
00:16:11,920 --> 00:16:13,759
send static content to your users very

414
00:16:13,759 --> 00:16:15,040
efficiently

415
00:16:15,040 --> 00:16:16,480
one of the features that cloudflare has

416
00:16:16,480 --> 00:16:18,880
is adding injecting javascript into your

417
00:16:18,880 --> 00:16:20,639
static content which is obviously very

418
00:16:20,639 --> 00:16:23,519
interesting and um

419
00:16:23,519 --> 00:16:25,279
the the what happened was the attackers

420
00:16:25,279 --> 00:16:27,519
managed to like override that and inject

421
00:16:27,519 --> 00:16:30,000
their own javascript uh via this sort of

422
00:16:30,000 --> 00:16:32,639
uh sort of one-click vulnerability that

423
00:16:32,639 --> 00:16:35,600
was discovered and they sent a request

424
00:16:35,600 --> 00:16:37,279
to inject some javascript and the admin

425
00:16:37,279 --> 00:16:39,600
sort of didn't notice properly and like

426
00:16:39,600 --> 00:16:41,440
clicked accept and then they could sort

427
00:16:41,440 --> 00:16:43,360
of inject whatever code they wanted so

428
00:16:43,360 --> 00:16:45,440
now we want to to look about sort of

429
00:16:45,440 --> 00:16:47,279
what they actually did

430
00:16:47,279 --> 00:16:48,000
so

431
00:16:48,000 --> 00:16:50,240
luckily like we said blockchain is your

432
00:16:50,240 --> 00:16:51,839
cm so we you can see everything that

433
00:16:51,839 --> 00:16:52,959
happens on the blockchain but you can't

434
00:16:52,959 --> 00:16:54,320
see everything that happens in web 2.

435
00:16:54,320 --> 00:16:56,480
luckily we have the web archive and what

436
00:16:56,480 --> 00:16:58,079
we can do is sort of

437
00:16:58,079 --> 00:17:00,320
see the version from november 2021 and

438
00:17:00,320 --> 00:17:01,839
you can see this bunch of code here that

439
00:17:01,839 --> 00:17:02,959
wasn't before

440
00:17:02,959 --> 00:17:04,400
that sort of this is the malicious code

441
00:17:04,400 --> 00:17:06,959
it's like obfuscated we have some get a

442
00:17:06,959 --> 00:17:09,119
project of where we de-obfuscated it uh

443
00:17:09,119 --> 00:17:10,799
but let's go to what they did

444
00:17:10,799 --> 00:17:12,959
so the attack worked with

445
00:17:12,959 --> 00:17:14,400
what the code does essentially three

446
00:17:14,400 --> 00:17:16,079
main things so the first thing they want

447
00:17:16,079 --> 00:17:17,839
to sort of hook the communication of the

448
00:17:17,839 --> 00:17:19,679
dap basically the web to interface with

449
00:17:19,679 --> 00:17:20,720
the wallet right we said there's a

450
00:17:20,720 --> 00:17:21,919
triangle there's a blockchain and

451
00:17:21,919 --> 00:17:23,919
there's the web to interface and we have

452
00:17:23,919 --> 00:17:26,400
uh the wallet and what happens in sort

453
00:17:26,400 --> 00:17:29,600
of the ui part is that the ui works hard

454
00:17:29,600 --> 00:17:31,440
and to like analyze the blockchain and

455
00:17:31,440 --> 00:17:32,880
create some sort of meaningful

456
00:17:32,880 --> 00:17:35,039
transaction for the user say the user is

457
00:17:35,039 --> 00:17:36,799
looking at the votes and they want to

458
00:17:36,799 --> 00:17:38,320
add some more money to one of the votes

459
00:17:38,320 --> 00:17:40,559
then the gui just sort of looks into the

460
00:17:40,559 --> 00:17:42,240
blockchain knows the exact the right

461
00:17:42,240 --> 00:17:43,919
smart contract the right method to call

462
00:17:43,919 --> 00:17:45,760
the right parameters to call it with and

463
00:17:45,760 --> 00:17:47,679
it forms this transaction and it sends

464
00:17:47,679 --> 00:17:49,840
it to the wallet so what the attackers

465
00:17:49,840 --> 00:17:51,280
want to do is obviously to hook this

466
00:17:51,280 --> 00:17:53,760
mechanism so all they did the way this

467
00:17:53,760 --> 00:17:54,799
usually happens

468
00:17:54,799 --> 00:17:55,760
specifically with a wallet called

469
00:17:55,760 --> 00:17:57,360
metamask they attack only targeted

470
00:17:57,360 --> 00:17:59,520
metamask but every other wallet works in

471
00:17:59,520 --> 00:18:01,120
a very similar way

472
00:18:01,120 --> 00:18:03,760
uh metamask is just a chrome extension

473
00:18:03,760 --> 00:18:06,400
and it injects an object called ethereum

474
00:18:06,400 --> 00:18:09,360
into the javascript namespace uh so you

475
00:18:09,360 --> 00:18:10,320
can sort of

476
00:18:10,320 --> 00:18:12,559
see here uh try to sort of uh the

477
00:18:12,559 --> 00:18:14,400
obfuscated they basically just take the

478
00:18:14,400 --> 00:18:17,120
ethereum object and they hook a specific

479
00:18:17,120 --> 00:18:20,559
function and this function was the one

480
00:18:20,559 --> 00:18:22,160
that they are sort of looking in is one

481
00:18:22,160 --> 00:18:23,760
that's called each send transaction

482
00:18:23,760 --> 00:18:25,840
which as you might uh as the name

483
00:18:25,840 --> 00:18:27,600
suggests it sends a transaction to the

484
00:18:27,600 --> 00:18:30,160
ethereum network so they were hooking

485
00:18:30,160 --> 00:18:31,600
this and you can see they were sort of

486
00:18:31,600 --> 00:18:32,960
looking for specific methods there's

487
00:18:32,960 --> 00:18:35,520
some sort of claim and withdrawal

488
00:18:35,520 --> 00:18:37,360
and these are just the normal things

489
00:18:37,360 --> 00:18:38,480
that you do when you interact with your

490
00:18:38,480 --> 00:18:40,240
volts on

491
00:18:40,240 --> 00:18:41,840
on badger dam

492
00:18:41,840 --> 00:18:43,679
okay so that's the first thing now they

493
00:18:43,679 --> 00:18:45,120
are able to hook the the communication

494
00:18:45,120 --> 00:18:47,520
between the wallet and the web to

495
00:18:47,520 --> 00:18:49,120
interface now what do they want to do

496
00:18:49,120 --> 00:18:50,720
first of all we want to filter unwanted

497
00:18:50,720 --> 00:18:52,160
victims right because you don't want

498
00:18:52,160 --> 00:18:54,080
everybody in the world to see

499
00:18:54,080 --> 00:18:55,360
you don't sort of try and attack

500
00:18:55,360 --> 00:18:57,440
everybody because then you might attack

501
00:18:57,440 --> 00:18:59,039
a thousand people with like one dollar

502
00:18:59,039 --> 00:19:00,320
and then you won't really get anything

503
00:19:00,320 --> 00:19:02,080
out of the attack before you get blocked

504
00:19:02,080 --> 00:19:03,600
so first of all what they did they sort

505
00:19:03,600 --> 00:19:05,919
of had this uh black list of badger dow

506
00:19:05,919 --> 00:19:08,480
devs which they didn't attack and the

507
00:19:08,480 --> 00:19:09,600
other thing they did is they would only

508
00:19:09,600 --> 00:19:10,880
attack somebody if they have more than

509
00:19:10,880 --> 00:19:12,640
fifty thousand dollars like in their

510
00:19:12,640 --> 00:19:15,200
total balance on baja dao another cool

511
00:19:15,200 --> 00:19:16,400
thing that we found is that they have

512
00:19:16,400 --> 00:19:19,280
this special test account um

513
00:19:19,280 --> 00:19:21,200
that's sort of uh that it's their own

514
00:19:21,200 --> 00:19:23,600
address so you know when you send a

515
00:19:23,600 --> 00:19:24,880
exploit into the wild you want to check

516
00:19:24,880 --> 00:19:26,880
it out in the real world to make sure it

517
00:19:26,880 --> 00:19:28,559
works so this is how they did this or

518
00:19:28,559 --> 00:19:31,120
without sacrificing 50 000 of their own

519
00:19:31,120 --> 00:19:32,320
uh

520
00:19:32,320 --> 00:19:34,240
money and sort of the last thing is okay

521
00:19:34,240 --> 00:19:36,880
so we injected this as a script we can

522
00:19:36,880 --> 00:19:38,559
filter whoever we don't want but now we

523
00:19:38,559 --> 00:19:39,760
actually want to do something right like

524
00:19:39,760 --> 00:19:41,520
how how do we fool the user into signing

525
00:19:41,520 --> 00:19:43,679
a transaction that will give me money

526
00:19:43,679 --> 00:19:46,720
um so we talked a little bit about erc20

527
00:19:46,720 --> 00:19:48,080
and we talked about sort of allowing

528
00:19:48,080 --> 00:19:49,840
somebody else to spend your money and

529
00:19:49,840 --> 00:19:52,080
we'll go into that in a second but the

530
00:19:52,080 --> 00:19:53,440
way that you do this is with something

531
00:19:53,440 --> 00:19:54,960
called an approve

532
00:19:54,960 --> 00:19:57,039
function and

533
00:19:57,039 --> 00:19:58,400
the way this works is essentially you're

534
00:19:58,400 --> 00:19:59,919
approving somebody

535
00:19:59,919 --> 00:20:01,919
basically an allowance to spend your

536
00:20:01,919 --> 00:20:04,400
money on your behalf it's it sounds a

537
00:20:04,400 --> 00:20:06,480
bit strange but it's usually used for

538
00:20:06,480 --> 00:20:08,159
like decentralized exchanges and all

539
00:20:08,159 --> 00:20:09,840
kinds of things and it's based on the

540
00:20:09,840 --> 00:20:12,559
sort of limitations of ethereum um so

541
00:20:12,559 --> 00:20:14,320
here you can see that what they do is if

542
00:20:14,320 --> 00:20:15,600
if what you're trying to interact with

543
00:20:15,600 --> 00:20:17,360
is the vault with most of the money they

544
00:20:17,360 --> 00:20:19,039
will send you a normal approve that sort

545
00:20:19,039 --> 00:20:21,760
of let me let the attacker

546
00:20:21,760 --> 00:20:24,799
spend your money but then if you're

547
00:20:24,799 --> 00:20:26,640
using another vault that's not the vault

548
00:20:26,640 --> 00:20:28,159
of most of the money in your account

549
00:20:28,159 --> 00:20:29,600
then they will sort of do this sort of

550
00:20:29,600 --> 00:20:31,600
sneak increase allowance which as we'll

551
00:20:31,600 --> 00:20:32,960
show in a second

552
00:20:32,960 --> 00:20:34,640
looks a bit different so like the on the

553
00:20:34,640 --> 00:20:35,679
left you have the normal sort of

554
00:20:35,679 --> 00:20:37,520
allowance you know better must ask you

555
00:20:37,520 --> 00:20:39,600
do you want to give whoever it is access

556
00:20:39,600 --> 00:20:42,080
to your shiba inu tokens uh and then on

557
00:20:42,080 --> 00:20:43,520
the right the exact same thing would

558
00:20:43,520 --> 00:20:44,799
happen but

559
00:20:44,799 --> 00:20:47,039
so metamask just sort of it it will

560
00:20:47,039 --> 00:20:48,799
write increased allowance but most users

561
00:20:48,799 --> 00:20:50,720
might fall for that more easily than the

562
00:20:50,720 --> 00:20:52,880
sort of very plain and simple somebody's

563
00:20:52,880 --> 00:20:54,559
trying to access your funds

564
00:20:54,559 --> 00:20:55,760
um

565
00:20:55,760 --> 00:20:57,919
we created this test we injected it into

566
00:20:57,919 --> 00:21:00,320
sort of a live session via burp you can

567
00:21:00,320 --> 00:21:02,480
see that this is the the malicious

568
00:21:02,480 --> 00:21:04,559
script sort of works and injects what it

569
00:21:04,559 --> 00:21:06,480
wants us to do this is the approve and

570
00:21:06,480 --> 00:21:07,520
this is what it looks like with

571
00:21:07,520 --> 00:21:10,080
increased allowance and now we'll talk

572
00:21:10,080 --> 00:21:12,240
very briefly about how the attack

573
00:21:12,240 --> 00:21:14,000
actually uh unfolded as we said

574
00:21:14,000 --> 00:21:16,000
blockchain is your cm so you can just go

575
00:21:16,000 --> 00:21:17,600
in the blockchain and see exactly what

576
00:21:17,600 --> 00:21:19,760
happened like how the attack unfolded

577
00:21:19,760 --> 00:21:21,600
which is really cool so we can see that

578
00:21:21,600 --> 00:21:23,520
there's a first approved function on the

579
00:21:23,520 --> 00:21:25,600
20th of november there's the transaction

580
00:21:25,600 --> 00:21:27,360
you can see it like on ether scan and

581
00:21:27,360 --> 00:21:29,840
there's an improved to where to although

582
00:21:29,840 --> 00:21:32,320
this one fc db is the attacker address

583
00:21:32,320 --> 00:21:33,760
that all the funds were sort of routed

584
00:21:33,760 --> 00:21:35,760
to at the end

585
00:21:35,760 --> 00:21:38,080
then you can see that a few days later

586
00:21:38,080 --> 00:21:41,760
on the 1st of december you have

587
00:21:41,760 --> 00:21:43,200
an increased allowance which as we said

588
00:21:43,200 --> 00:21:45,039
is like the sneakier version and this

589
00:21:45,039 --> 00:21:46,640
worked on somebody moving 50 million

590
00:21:46,640 --> 00:21:48,880
dollars so now the attacker has control

591
00:21:48,880 --> 00:21:51,039
of 50 million dollars and all the other

592
00:21:51,039 --> 00:21:52,320
sort of money that they have gathered

593
00:21:52,320 --> 00:21:53,760
until now

594
00:21:53,760 --> 00:21:55,600
and so everybody was sort of talking

595
00:21:55,600 --> 00:21:57,840
about who this 50 million fish is and

596
00:21:57,840 --> 00:21:59,600
according to press it's uh celsius which

597
00:21:59,600 --> 00:22:02,000
is a big company that sort of

598
00:22:02,000 --> 00:22:03,280
lets people have interest on their

599
00:22:03,280 --> 00:22:04,880
bitcoins and one of the ways they're

600
00:22:04,880 --> 00:22:07,200
doing it is obviously via this uh via

601
00:22:07,200 --> 00:22:08,960
the badger dow system they were using

602
00:22:08,960 --> 00:22:11,280
metamask so this is a bit crazy you know

603
00:22:11,280 --> 00:22:12,640
it's like 54 million dollars you're

604
00:22:12,640 --> 00:22:15,120
moving in one transaction and it's all

605
00:22:15,120 --> 00:22:17,760
sort of uh in a metamask wallet that

606
00:22:17,760 --> 00:22:19,840
everybody uses like a consumer grade

607
00:22:19,840 --> 00:22:21,760
type of type of solution

608
00:22:21,760 --> 00:22:22,960
um

609
00:22:22,960 --> 00:22:24,240
okay so

610
00:22:24,240 --> 00:22:25,440
now that they have this big fish they

611
00:22:25,440 --> 00:22:27,919
want to pull it all in uh so you can see

612
00:22:27,919 --> 00:22:29,760
it's probably automated six hours later

613
00:22:29,760 --> 00:22:32,480
right at zero zero zero utc time uh you

614
00:22:32,480 --> 00:22:33,760
can see that the transactions are sort

615
00:22:33,760 --> 00:22:35,120
of in the reverse order so the first one

616
00:22:35,120 --> 00:22:36,640
is actually is the proof infinite for

617
00:22:36,640 --> 00:22:39,440
this wrapped bitcoin uh token and then

618
00:22:39,440 --> 00:22:41,520
you see the the user is just interacting

619
00:22:41,520 --> 00:22:43,760
normally with the moving tokens around

620
00:22:43,760 --> 00:22:45,039
uh whatever's that what they were doing

621
00:22:45,039 --> 00:22:48,159
and then sort of a bit later you can see

622
00:22:48,159 --> 00:22:51,039
minus 900 bitcoins uh taken from their

623
00:22:51,039 --> 00:22:53,679
account which is 50 well it was 54

624
00:22:53,679 --> 00:22:54,960
million dollars

625
00:22:54,960 --> 00:22:57,280
um and then if we look sort of what

626
00:22:57,280 --> 00:22:58,799
happened after that you can just see

627
00:22:58,799 --> 00:23:00,640
this transfer transfer stuff this all

628
00:23:00,640 --> 00:23:02,640
just moves funds to the attack address

629
00:23:02,640 --> 00:23:04,400
so it's like everybody they could get as

630
00:23:04,400 --> 00:23:06,159
fast as they could and the interesting

631
00:23:06,159 --> 00:23:08,480
thing uh was that sort of within a few

632
00:23:08,480 --> 00:23:09,600
hours

633
00:23:09,600 --> 00:23:11,280
badger dao managed to sort of freeze

634
00:23:11,280 --> 00:23:12,240
everything

635
00:23:12,240 --> 00:23:14,960
uh and the attackers managed to steal

636
00:23:14,960 --> 00:23:16,960
120 million dollars

637
00:23:16,960 --> 00:23:18,720
to their accounts so now we'll talk

638
00:23:18,720 --> 00:23:21,200
about the smart contract side of things

639
00:23:21,200 --> 00:23:24,480
with tom thank you shalev so we talked

640
00:23:24,480 --> 00:23:25,840
about

641
00:23:25,840 --> 00:23:27,360
two of the three

642
00:23:27,360 --> 00:23:30,480
uh part of the triangle we talked about

643
00:23:30,480 --> 00:23:32,720
a little bit about wallet attack now

644
00:23:32,720 --> 00:23:34,799
shall i talked about the

645
00:23:34,799 --> 00:23:37,360
interface attack now let's talk about

646
00:23:37,360 --> 00:23:40,000
attacking the smart contract themselves

647
00:23:40,000 --> 00:23:41,600
and again we'll use the fact that the

648
00:23:41,600 --> 00:23:43,440
blockchain is our same we will analyze

649
00:23:43,440 --> 00:23:45,760
the multi-chain router

650
00:23:45,760 --> 00:23:48,240
incident so the multi-chain router is a

651
00:23:48,240 --> 00:23:50,720
bridge allowing users to freely swap

652
00:23:50,720 --> 00:23:53,440
tokens i heard that tomorrow there will

653
00:23:53,440 --> 00:23:54,640
be a

654
00:23:54,640 --> 00:23:57,440
a talk by a nivea haskell about

655
00:23:57,440 --> 00:23:59,679
attacking bridges so this is

656
00:23:59,679 --> 00:24:02,000
you can consider it as a preview

657
00:24:02,000 --> 00:24:02,880
and

658
00:24:02,880 --> 00:24:05,840
multi-chain was exploited in mid

659
00:24:05,840 --> 00:24:08,880
this january so uh two months ago

660
00:24:08,880 --> 00:24:10,080
and

661
00:24:10,080 --> 00:24:11,520
oh and

662
00:24:11,520 --> 00:24:14,559
almost 2000 if was stolen so around 5

663
00:24:14,559 --> 00:24:16,320
million 6 million depends on the

664
00:24:16,320 --> 00:24:19,200
ethereum rate today and it's still

665
00:24:19,200 --> 00:24:21,600
ongoing by the way so we'll talk about

666
00:24:21,600 --> 00:24:23,279
that a little bit and this was because

667
00:24:23,279 --> 00:24:26,320
of smart contract logical error or

668
00:24:26,320 --> 00:24:29,360
vulnerability as we call it and there's

669
00:24:29,360 --> 00:24:30,080
a

670
00:24:30,080 --> 00:24:32,960
more extended the analysis on our blog

671
00:24:32,960 --> 00:24:35,919
and but we will present the gist of it

672
00:24:35,919 --> 00:24:37,039
so

673
00:24:37,039 --> 00:24:39,600
blockchain is our theme we were able to

674
00:24:39,600 --> 00:24:41,360
locate that

675
00:24:41,360 --> 00:24:44,400
one of the exploiting transaction and

676
00:24:44,400 --> 00:24:47,200
well we said transaction is just remote

677
00:24:47,200 --> 00:24:49,760
the procedure call rpc

678
00:24:49,760 --> 00:24:52,480
so it's just called let's debug it let's

679
00:24:52,480 --> 00:24:54,960
run it let's rerun it let's replay it

680
00:24:54,960 --> 00:24:57,120
and there are tools free tools to do so

681
00:24:57,120 --> 00:24:59,039
for example tenderly this is the

682
00:24:59,039 --> 00:25:02,320
screenshot and we put that transaction

683
00:25:02,320 --> 00:25:04,880
in this tool and we were able

684
00:25:04,880 --> 00:25:07,440
uh to see with which function it

685
00:25:07,440 --> 00:25:10,880
interacts so it interacts with that

686
00:25:10,880 --> 00:25:12,960
any swap out

687
00:25:12,960 --> 00:25:16,159
underlying with permit so what does this

688
00:25:16,159 --> 00:25:20,480
function do and again this is web3 so

689
00:25:20,480 --> 00:25:23,360
all of the code is

690
00:25:23,360 --> 00:25:26,159
open source so you can audit and

691
00:25:26,159 --> 00:25:28,159
don't need to blindly trust that the

692
00:25:28,159 --> 00:25:29,440
application

693
00:25:29,440 --> 00:25:32,640
and let's zoom in on the first two line

694
00:25:32,640 --> 00:25:35,039
of the function because this was the

695
00:25:35,039 --> 00:25:37,760
attacker has exploited so originally

696
00:25:37,760 --> 00:25:40,080
what is the meaning of this function and

697
00:25:40,080 --> 00:25:42,080
this function you present a permit a

698
00:25:42,080 --> 00:25:44,480
signed permit from a user to it the

699
00:25:44,480 --> 00:25:46,240
caller

700
00:25:46,240 --> 00:25:49,039
presents another user's permit

701
00:25:49,039 --> 00:25:50,720
and

702
00:25:50,720 --> 00:25:52,880
but it's signed so the

703
00:25:52,880 --> 00:25:56,080
the smart contract supposed to verify

704
00:25:56,080 --> 00:25:58,240
the signature and if it's verified then

705
00:25:58,240 --> 00:26:01,120
move this the money from the user to the

706
00:26:01,120 --> 00:26:02,159
caller

707
00:26:02,159 --> 00:26:05,679
and so the first line is really

708
00:26:05,679 --> 00:26:08,720
because it's this bridge is moving

709
00:26:08,720 --> 00:26:10,720
tokens from one chain to another it

710
00:26:10,720 --> 00:26:12,799
needs some internal representation so

711
00:26:12,799 --> 00:26:16,080
it's any swap multi-chain former names

712
00:26:16,080 --> 00:26:19,279
uh internal token that has

713
00:26:19,279 --> 00:26:22,480
it's wrapping that uh token

714
00:26:22,480 --> 00:26:25,200
the real token so it's just a parameter

715
00:26:25,200 --> 00:26:27,600
within this

716
00:26:27,600 --> 00:26:30,000
any swap token so the first line just

717
00:26:30,000 --> 00:26:32,159
extracts that inner

718
00:26:32,159 --> 00:26:33,279
token

719
00:26:33,279 --> 00:26:36,000
and then it calls that inner token the

720
00:26:36,000 --> 00:26:38,720
underlying token permit function and

721
00:26:38,720 --> 00:26:40,720
this permit function of the token is

722
00:26:40,720 --> 00:26:42,799
really very supposed to verify the

723
00:26:42,799 --> 00:26:45,840
signature this is denoted by the vrs

724
00:26:45,840 --> 00:26:48,159
parameters in the end of the

725
00:26:48,159 --> 00:26:49,679
line and

726
00:26:49,679 --> 00:26:52,960
if it verifies it's successfully then

727
00:26:52,960 --> 00:26:56,320
the execution continues and if it's not

728
00:26:56,320 --> 00:26:58,799
verified then it throws something and

729
00:26:58,799 --> 00:27:01,279
the execution stops so the really the

730
00:27:01,279 --> 00:27:03,760
rest of the function is assumes that if

731
00:27:03,760 --> 00:27:07,679
we got past that then the signature was

732
00:27:07,679 --> 00:27:10,400
verified correctly successfully and this

733
00:27:10,400 --> 00:27:12,640
is what the attackers really abused

734
00:27:12,640 --> 00:27:13,600
because

735
00:27:13,600 --> 00:27:16,799
although it's intended to be used just

736
00:27:16,799 --> 00:27:19,039
with any swap token nothing in the code

737
00:27:19,039 --> 00:27:21,679
unfolds that there should have been an

738
00:27:21,679 --> 00:27:24,320
allow list this is the primal scene uh

739
00:27:24,320 --> 00:27:27,760
an allow list of allowed any swap tokens

740
00:27:27,760 --> 00:27:29,840
that are supposed to be used with that

741
00:27:29,840 --> 00:27:32,799
but there wasn't and

742
00:27:32,799 --> 00:27:35,919
and we we're seeing that in the in the

743
00:27:35,919 --> 00:27:37,760
in the debugger that

744
00:27:37,760 --> 00:27:40,640
the attacker was able to call that

745
00:27:40,640 --> 00:27:43,840
function directly and pop it in token is

746
00:27:43,840 --> 00:27:46,000
an attacker control parameter so they

747
00:27:46,000 --> 00:27:49,120
put them there their malicious contract

748
00:27:49,120 --> 00:27:51,840
and that malicious contract returns the

749
00:27:51,840 --> 00:27:55,919
underlying token is worth okay so

750
00:27:55,919 --> 00:27:57,440
so

751
00:27:57,440 --> 00:28:00,000
it's not working according to plans but

752
00:28:00,000 --> 00:28:01,520
we don't have to worry because we have

753
00:28:01,520 --> 00:28:03,440
the next line that was supposed to

754
00:28:03,440 --> 00:28:05,760
verify that uh

755
00:28:05,760 --> 00:28:07,120
signature

756
00:28:07,120 --> 00:28:08,080
so

757
00:28:08,080 --> 00:28:09,760
let's see the

758
00:28:09,760 --> 00:28:12,480
but the problem is web token

759
00:28:12,480 --> 00:28:15,200
does not have a permit function or was

760
00:28:15,200 --> 00:28:18,000
saying okay that's not not it's not so

761
00:28:18,000 --> 00:28:20,559
bad actually because there is no permit

762
00:28:20,559 --> 00:28:22,480
the virtual machine will try to execute

763
00:28:22,480 --> 00:28:24,399
that they get some error and the

764
00:28:24,399 --> 00:28:26,399
execution will be stopped

765
00:28:26,399 --> 00:28:30,000
no because in west there is a mechanism

766
00:28:30,000 --> 00:28:32,240
it's called fallback function you can

767
00:28:32,240 --> 00:28:34,960
see it again from the debugger and so if

768
00:28:34,960 --> 00:28:35,679
the

769
00:28:35,679 --> 00:28:37,679
the virtual machine does not find the

770
00:28:37,679 --> 00:28:39,760
function it falls back to another

771
00:28:39,760 --> 00:28:42,320
function and in this case deposit it

772
00:28:42,320 --> 00:28:44,320
doesn't really matter the most important

773
00:28:44,320 --> 00:28:47,760
thing is that the

774
00:28:48,000 --> 00:28:51,440
you call you call a permit function and

775
00:28:51,440 --> 00:28:54,000
it does not fail it returns normally

776
00:28:54,000 --> 00:28:56,640
without checking really checking the

777
00:28:56,640 --> 00:28:58,880
signature so although the attacker

778
00:28:58,880 --> 00:29:01,840
didn't have a valid signed permit

779
00:29:01,840 --> 00:29:04,480
they were got past that check and can

780
00:29:04,480 --> 00:29:07,440
spend the victims money

781
00:29:07,440 --> 00:29:08,799
okay so

782
00:29:08,799 --> 00:29:12,320
and that's led to 6 million losses for a

783
00:29:12,320 --> 00:29:14,000
for a

784
00:29:14,000 --> 00:29:17,600
multi-chain or router users

785
00:29:17,600 --> 00:29:19,520
we were able to further analyze this

786
00:29:19,520 --> 00:29:21,520
attack there's a great tool called dune

787
00:29:21,520 --> 00:29:24,640
analytics that actually etls

788
00:29:24,640 --> 00:29:27,360
just move the database that distributed

789
00:29:27,360 --> 00:29:30,159
database into a sql based database and

790
00:29:30,159 --> 00:29:33,279
so you we can query it and we ran a

791
00:29:33,279 --> 00:29:36,720
query to see when was the function first

792
00:29:36,720 --> 00:29:39,200
used was we were sort of wondering what

793
00:29:39,200 --> 00:29:40,960
is the normal usage of it how much it

794
00:29:40,960 --> 00:29:44,240
would use and the answer is it was never

795
00:29:44,240 --> 00:29:46,640
used before the attack like the first

796
00:29:46,640 --> 00:29:49,840
user the first time this

797
00:29:49,840 --> 00:29:51,840
function was used in production was by

798
00:29:51,840 --> 00:29:53,360
the attacker so actually this is

799
00:29:53,360 --> 00:29:55,520
redundant code that had this

800
00:29:55,520 --> 00:29:58,399
vulnerability but no one got to that

801
00:29:58,399 --> 00:30:01,120
because it was never used so this is a

802
00:30:01,120 --> 00:30:02,960
one interesting insight

803
00:30:02,960 --> 00:30:06,799
and just taking it to the next level

804
00:30:06,799 --> 00:30:09,279
dual analytics also has dashboarding

805
00:30:09,279 --> 00:30:12,159
utilities so right now we can

806
00:30:12,159 --> 00:30:15,360
monitor this attack in online you can

807
00:30:15,360 --> 00:30:17,600
go to this dashboard that we built and

808
00:30:17,600 --> 00:30:20,720
it's updated online with more and more

809
00:30:20,720 --> 00:30:23,440
victims that are still being abused by

810
00:30:23,440 --> 00:30:25,760
this attack

811
00:30:25,760 --> 00:30:26,880
so

812
00:30:26,880 --> 00:30:28,720
we finish with the pessimistic part of

813
00:30:28,720 --> 00:30:31,200
this talk a lot of hacks now we'll let's

814
00:30:31,200 --> 00:30:33,200
talk about how we can defend and we're

815
00:30:33,200 --> 00:30:35,600
very optimistic about web3 security

816
00:30:35,600 --> 00:30:38,159
because we have done dozens of post

817
00:30:38,159 --> 00:30:40,799
modems so we gained a lot of insights

818
00:30:40,799 --> 00:30:44,320
and we because blockchain is our theme

819
00:30:44,320 --> 00:30:46,480
like it's really paradise for

820
00:30:46,480 --> 00:30:48,559
researchers because usually

821
00:30:48,559 --> 00:30:50,640
you don't get to see the raw technical

822
00:30:50,640 --> 00:30:53,200
data of attack only the incident

823
00:30:53,200 --> 00:30:55,039
response company that comes into the

824
00:30:55,039 --> 00:30:58,720
victim site and touch the systems there

825
00:30:58,720 --> 00:31:01,120
are able to see the gory details and

826
00:31:01,120 --> 00:31:03,200
derive some meaningful technical

827
00:31:03,200 --> 00:31:06,559
insights but in this case everybody gets

828
00:31:06,559 --> 00:31:09,360
to see the data you it's just you and

829
00:31:09,360 --> 00:31:11,600
your creativity because you have all the

830
00:31:11,600 --> 00:31:14,240
data now come up with insights and

831
00:31:14,240 --> 00:31:17,200
discover that okay there's a usage of a

832
00:31:17,200 --> 00:31:20,000
sneaky a method that does not look well

833
00:31:20,000 --> 00:31:22,320
on metamask as shall have

834
00:31:22,320 --> 00:31:23,919
discussed or

835
00:31:23,919 --> 00:31:26,320
this function was used in its redundant

836
00:31:26,320 --> 00:31:28,799
function so we were able to derive some

837
00:31:28,799 --> 00:31:31,279
meaningful insights

838
00:31:31,279 --> 00:31:34,880
that you know it was just us in our

839
00:31:34,880 --> 00:31:37,440
analysis no we need we didn't need any

840
00:31:37,440 --> 00:31:40,880
help from anyone uh for that so this is

841
00:31:40,880 --> 00:31:42,799
great potential and i encourage all of

842
00:31:42,799 --> 00:31:45,919
you to go into web3 security because the

843
00:31:45,919 --> 00:31:48,480
potential is so great and you can

844
00:31:48,480 --> 00:31:50,799
learn so much and do a lot of things by

845
00:31:50,799 --> 00:31:53,039
yourself without needing to depend on

846
00:31:53,039 --> 00:31:54,640
third parties

847
00:31:54,640 --> 00:31:57,279
but we also realize this is not limited

848
00:31:57,279 --> 00:32:00,000
to post modems like it's just you know

849
00:32:00,000 --> 00:32:02,320
sketching the surface of the potential

850
00:32:02,320 --> 00:32:03,519
because

851
00:32:03,519 --> 00:32:05,840
most of our analysis everything we did

852
00:32:05,840 --> 00:32:07,519
could be done in real time and

853
00:32:07,519 --> 00:32:09,200
beforehand and

854
00:32:09,200 --> 00:32:12,320
as we go so there is a potential here to

855
00:32:12,320 --> 00:32:13,200
build

856
00:32:13,200 --> 00:32:15,519
a firewall-like solution

857
00:32:15,519 --> 00:32:16,880
to

858
00:32:16,880 --> 00:32:18,720
to protect customers

859
00:32:18,720 --> 00:32:21,760
and users against rogue interfaces like

860
00:32:21,760 --> 00:32:23,919
the badger dog case and protect also

861
00:32:23,919 --> 00:32:26,799
smart contracts against log transactions

862
00:32:26,799 --> 00:32:28,480
such as the multi-chain

863
00:32:28,480 --> 00:32:29,279
uh

864
00:32:29,279 --> 00:32:31,840
case and there are some special bonuses

865
00:32:31,840 --> 00:32:33,360
for all of your

866
00:32:33,360 --> 00:32:37,039
firewall lovers in the crowd so

867
00:32:37,039 --> 00:32:38,799
because the blockchain is your sim and

868
00:32:38,799 --> 00:32:40,640
everybody that ever did

869
00:32:40,640 --> 00:32:43,760
created a rule for a firewall knows

870
00:32:43,760 --> 00:32:45,440
you know this process you know you

871
00:32:45,440 --> 00:32:47,279
create a rule you think you thought

872
00:32:47,279 --> 00:32:49,360
about all the eventualities

873
00:32:49,360 --> 00:32:52,880
and then you ship it and

874
00:32:52,880 --> 00:32:55,039
two days later

875
00:32:55,039 --> 00:32:57,120
the support is full with the false

876
00:32:57,120 --> 00:32:59,519
positives report and you tweak it and

877
00:32:59,519 --> 00:33:02,559
it's some somewhat better but then other

878
00:33:02,559 --> 00:33:04,799
things come up and so on so forth so

879
00:33:04,799 --> 00:33:07,360
this is really a cycle of

880
00:33:07,360 --> 00:33:10,080
tweaking but when the blockchain is your

881
00:33:10,080 --> 00:33:12,480
sim you have full access to everything

882
00:33:12,480 --> 00:33:15,760
that ever happened so you can test your

883
00:33:15,760 --> 00:33:18,720
your rule and if they are false positive

884
00:33:18,720 --> 00:33:20,080
you tweak them

885
00:33:20,080 --> 00:33:23,760
before you deploy so you can get with

886
00:33:23,760 --> 00:33:26,559
really good rules right away and same

887
00:33:26,559 --> 00:33:29,600
goes for anomaly detection so usually

888
00:33:29,600 --> 00:33:32,720
like if you ever did a proof of concept

889
00:33:32,720 --> 00:33:35,519
in a customer side so you can never show

890
00:33:35,519 --> 00:33:38,799
anomaly detection there because oh it

891
00:33:38,799 --> 00:33:40,799
needs to learn now for three months and

892
00:33:40,799 --> 00:33:42,399
so on but no

893
00:33:42,399 --> 00:33:44,720
we have the full history we can learn

894
00:33:44,720 --> 00:33:47,120
from the whole of the history everything

895
00:33:47,120 --> 00:33:48,880
that happened or a portion of the

896
00:33:48,880 --> 00:33:51,279
relevant portion out of it and we can

897
00:33:51,279 --> 00:33:54,640
come up with a good model and also tweak

898
00:33:54,640 --> 00:33:56,640
it before we

899
00:33:56,640 --> 00:33:59,200
deploy it so this is great potential for

900
00:33:59,200 --> 00:34:01,760
security solution

901
00:34:01,760 --> 00:34:03,679
so what

902
00:34:03,679 --> 00:34:06,000
let's make it more concrete what we can

903
00:34:06,000 --> 00:34:08,399
we do so we can do a web 3 personal

904
00:34:08,399 --> 00:34:11,520
firewall again to protect users against

905
00:34:11,520 --> 00:34:13,839
a web 2 interface

906
00:34:13,839 --> 00:34:16,560
injections just that shalev showed with

907
00:34:16,560 --> 00:34:19,199
the badger dao attack so how could it

908
00:34:19,199 --> 00:34:24,079
help in that case so we could have um

909
00:34:24,079 --> 00:34:26,639
analyze rogue-approved transaction and

910
00:34:26,639 --> 00:34:29,280
based on the reputation of the spender

911
00:34:29,280 --> 00:34:32,239
address so in the case of better dow

912
00:34:32,239 --> 00:34:35,199
the address was eoa a regular address

913
00:34:35,199 --> 00:34:37,760
and not a smart contract so this is a

914
00:34:37,760 --> 00:34:40,159
bright red flag

915
00:34:40,159 --> 00:34:42,000
that we could have flagged for the user

916
00:34:42,000 --> 00:34:46,079
or just block it or or let him let he or

917
00:34:46,079 --> 00:34:47,359
she no

918
00:34:47,359 --> 00:34:49,679
and but even if the attacker was smarter

919
00:34:49,679 --> 00:34:51,440
than that and were using a smart

920
00:34:51,440 --> 00:34:53,520
contract then

921
00:34:53,520 --> 00:34:55,199
this contract would have serious

922
00:34:55,199 --> 00:34:57,440
reputation problem because

923
00:34:57,440 --> 00:34:58,240
uh

924
00:34:58,240 --> 00:35:00,560
who deployed it like

925
00:35:00,560 --> 00:35:02,720
was it related to badger dao

926
00:35:02,720 --> 00:35:06,400
administrator the deployer is the contra

927
00:35:06,400 --> 00:35:08,000
code publicly available if i was

928
00:35:08,000 --> 00:35:10,720
attacker i would probably not publish my

929
00:35:10,720 --> 00:35:13,359
uh smart contract attacking code and so

930
00:35:13,359 --> 00:35:16,640
on so forth so it's really a solid

931
00:35:16,640 --> 00:35:19,040
defense against uh

932
00:35:19,040 --> 00:35:20,400
such attacks

933
00:35:20,400 --> 00:35:21,839
and all it

934
00:35:21,839 --> 00:35:24,480
can also be used to protect

935
00:35:24,480 --> 00:35:28,079
apps smart contracts against malicious

936
00:35:28,079 --> 00:35:30,560
attacks malicious transaction

937
00:35:30,560 --> 00:35:32,960
such as the multi-chain so

938
00:35:32,960 --> 00:35:35,520
how we could have helped them we could

939
00:35:35,520 --> 00:35:36,640
have

940
00:35:36,640 --> 00:35:39,359
uh detect the uses of the usage of

941
00:35:39,359 --> 00:35:41,520
redundant function or if the function

942
00:35:41,520 --> 00:35:44,400
was not redundant we were able to learn

943
00:35:44,400 --> 00:35:45,440
that it

944
00:35:45,440 --> 00:35:48,160
is always called with any swap

945
00:35:48,160 --> 00:35:49,440
multi-chain

946
00:35:49,440 --> 00:35:52,240
internal representation tokens and not

947
00:35:52,240 --> 00:35:53,200
with

948
00:35:53,200 --> 00:35:56,400
this abnormal smart contract that the

949
00:35:56,400 --> 00:35:57,760
attacker had

950
00:35:57,760 --> 00:35:59,839
called that function with so there's a

951
00:35:59,839 --> 00:36:01,599
lot of potential and this is just

952
00:36:01,599 --> 00:36:04,720
example in that kind of solution so we

953
00:36:04,720 --> 00:36:07,119
want to conclude with that and

954
00:36:07,119 --> 00:36:08,480
this is what the

955
00:36:08,480 --> 00:36:10,240
we would like you to take home with you

956
00:36:10,240 --> 00:36:11,359
so

957
00:36:11,359 --> 00:36:12,400
i hope that

958
00:36:12,400 --> 00:36:15,040
at the very least you now have better

959
00:36:15,040 --> 00:36:17,680
understanding what web stream means and

960
00:36:17,680 --> 00:36:20,400
why it's important the the

961
00:36:20,400 --> 00:36:24,839
ownership upon digital assists and wise

962
00:36:24,839 --> 00:36:27,839
revolution and but currently web3

963
00:36:27,839 --> 00:36:30,720
security is a very bad shape

964
00:36:30,720 --> 00:36:32,000
however

965
00:36:32,000 --> 00:36:34,320
let's not be pessimistic because there's

966
00:36:34,320 --> 00:36:36,240
a great potential to secure it because

967
00:36:36,240 --> 00:36:40,079
the blockchain is your theme and this is

968
00:36:40,079 --> 00:36:42,160
an untapped potential

969
00:36:42,160 --> 00:36:45,280
like it's just waiting for uh

970
00:36:45,280 --> 00:36:47,760
guys like you to come up and and do it

971
00:36:47,760 --> 00:36:49,440
and i'm sure some of you

972
00:36:49,440 --> 00:36:52,000
are already planning to do that

973
00:36:52,000 --> 00:36:55,040
because and even if you're not doing it

974
00:36:55,040 --> 00:36:56,400
just you know

975
00:36:56,400 --> 00:36:59,040
this is a really interesting field for

976
00:36:59,040 --> 00:37:01,520
security researchers because the data is

977
00:37:01,520 --> 00:37:03,920
a very is available to all of you and

978
00:37:03,920 --> 00:37:06,640
it's para that's really fun to do it so

979
00:37:06,640 --> 00:37:09,760
i encourage all of you to uh

980
00:37:09,760 --> 00:37:12,480
learn more about it do it play with it

981
00:37:12,480 --> 00:37:15,119
everything free everything is available

982
00:37:15,119 --> 00:37:17,760
and if you have further questions uh

983
00:37:17,760 --> 00:37:20,240
come and talk to us right after

984
00:37:20,240 --> 00:37:21,599
the talk or

985
00:37:21,599 --> 00:37:23,839
in all of this digital media so thank

986
00:37:23,839 --> 00:37:26,030
you so much blewett

987
00:37:26,030 --> 00:37:35,599
[Applause]

988
00:37:36,980 --> 00:37:39,680
[Music]

989
00:37:39,680 --> 00:37:41,759
you

