1
00:00:00,030 --> 00:00:06,420
so yeah I wanted<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about covert</font>

2
00:00:04,080 --> 00:00:10,170
channels<font color="#E5E5E5"> are we okay</font>

3
00:00:06,420 --> 00:00:12,840
<font color="#E5E5E5">I actually intended</font><font color="#CCCCCC"> this to</font><font color="#E5E5E5"> be kind of</font>

4
00:00:10,170 --> 00:00:14,879
an educational talk<font color="#E5E5E5"> just to introduce</font>

5
00:00:12,840 --> 00:00:18,750
<font color="#E5E5E5">people to the concept of covert channels</font>

6
00:00:14,880 --> 00:00:20,100
<font color="#E5E5E5">when I see in when I when I look at</font>

7
00:00:18,750 --> 00:00:21,750
covert channel tools<font color="#CCCCCC"> there's a lot of</font>

8
00:00:20,100 --> 00:00:23,310
prepackaged<font color="#CCCCCC"> stuff out there</font><font color="#E5E5E5"> and I'll</font>

9
00:00:21,750 --> 00:00:26,189
mention a<font color="#E5E5E5"> couple of them in my talk but</font>

10
00:00:23,310 --> 00:00:28,109
I see a lot of stuff where we've got

11
00:00:26,189 --> 00:00:30,810
<font color="#E5E5E5">these tools that do one very specific</font>

12
00:00:28,109 --> 00:00:32,610
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> but they're not very flexible</font><font color="#E5E5E5"> nor</font>

13
00:00:30,810 --> 00:00:35,519
easy to signature right<font color="#E5E5E5"> I mean if we're</font>

14
00:00:32,610 --> 00:00:37,050
<font color="#CCCCCC">talking about reducing detectability we</font>

15
00:00:35,520 --> 00:00:39,329
want to<font color="#CCCCCC"> reduce the capability to</font>

16
00:00:37,050 --> 00:00:43,530
signature that or to be profiled<font color="#E5E5E5"> by</font>

17
00:00:39,329 --> 00:00:46,320
heuristics<font color="#E5E5E5"> so all I should probably</font>

18
00:00:43,530 --> 00:00:48,629
mention my<font color="#CCCCCC"> name is Jennifer</font><font color="#E5E5E5"> Allen</font><font color="#CCCCCC"> I am</font>

19
00:00:46,320 --> 00:00:52,530
the<font color="#CCCCCC"> rent team manager between State I've</font>

20
00:00:48,629 --> 00:00:54,989
<font color="#E5E5E5">been in some tech jobs</font><font color="#CCCCCC"> I really love all</font>

21
00:00:52,530 --> 00:00:56,879
<font color="#CCCCCC">things hacking and I you know started</font>

22
00:00:54,989 --> 00:00:59,250
coding<font color="#E5E5E5"> when I was little and just kind</font>

23
00:00:56,879 --> 00:01:04,768
of went<font color="#CCCCCC"> from there I've got some certs I</font>

24
00:00:59,250 --> 00:01:06,479
am a ham radio dork and that's it so

25
00:01:04,769 --> 00:01:08,880
this talk as I<font color="#CCCCCC"> mention</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> going to be</font>

26
00:01:06,479 --> 00:01:10,080
<font color="#E5E5E5">covert exfiltration of data and I'm</font>

27
00:01:08,880 --> 00:01:12,179
<font color="#E5E5E5">going to be talking about topics</font>

28
00:01:10,080 --> 00:01:13,380
<font color="#CCCCCC">concerning successful exfiltration so</font>

29
00:01:12,180 --> 00:01:14,850
it's<font color="#E5E5E5"> going to be kind of a broad</font>

30
00:01:13,380 --> 00:01:16,380
overview for people who aren't<font color="#CCCCCC"> very</font>

31
00:01:14,850 --> 00:01:21,419
<font color="#CCCCCC">familiar with</font><font color="#E5E5E5"> the concept</font><font color="#CCCCCC"> but also</font>

32
00:01:16,380 --> 00:01:26,009
<font color="#E5E5E5">getting into some escapee</font><font color="#CCCCCC"> and Python I</font>

33
00:01:21,420 --> 00:01:28,259
will tell you I am<font color="#CCCCCC"> NOT a longtime Python</font>

34
00:01:26,009 --> 00:01:30,299
coder<font color="#E5E5E5"> so I have a developer on my team</font>

35
00:01:28,259 --> 00:01:31,259
<font color="#E5E5E5">and I'll hand</font><font color="#CCCCCC"> him a piece</font><font color="#E5E5E5"> of code and</font>

36
00:01:30,299 --> 00:01:34,950
he'll just give me this

37
00:01:31,259 --> 00:01:38,640
remorseful look I<font color="#CCCCCC"> just want to warn you</font>

38
00:01:34,950 --> 00:01:40,140
<font color="#CCCCCC">guys this is pretty raw stuff I</font><font color="#E5E5E5"> also</font>

39
00:01:38,640 --> 00:01:45,329
gives me a bad look when I use Python

40
00:01:40,140 --> 00:01:47,159
2.7<font color="#E5E5E5"> so</font><font color="#CCCCCC"> Python I</font><font color="#E5E5E5"> only do this it comes</font>

41
00:01:45,329 --> 00:01:48,689
<font color="#CCCCCC">comes out</font><font color="#E5E5E5"> of the package it's ready to</font>

42
00:01:47,159 --> 00:01:49,409
<font color="#CCCCCC">go I just I'm trying</font><font color="#E5E5E5"> to roll some code</font>

43
00:01:48,689 --> 00:01:53,520
leave me<font color="#E5E5E5"> alone</font>

44
00:01:49,409 --> 00:01:55,020
so so the the<font color="#CCCCCC"> supper covering today</font>

45
00:01:53,520 --> 00:01:57,240
<font color="#CCCCCC">escape he does actually work for Python</font>

46
00:01:55,020 --> 00:01:58,770
<font color="#E5E5E5">3</font><font color="#CCCCCC"> I wanted</font><font color="#E5E5E5"> to make this simple so</font><font color="#CCCCCC"> that</font>

47
00:01:57,240 --> 00:02:00,809
people who aren't familiar<font color="#E5E5E5"> with any of</font>

48
00:01:58,770 --> 00:02:02,610
<font color="#CCCCCC">this can</font><font color="#E5E5E5"> just jump into say a Kali Linux</font>

49
00:02:00,810 --> 00:02:03,780
box<font color="#E5E5E5"> and be ready to</font><font color="#CCCCCC"> go and I'll have to</font>

50
00:02:02,610 --> 00:02:04,710
worry about importing extra libraries

51
00:02:03,780 --> 00:02:08,759
<font color="#E5E5E5">yeah</font>

52
00:02:04,710 --> 00:02:11,730
so you can be you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> really good and</font>

53
00:02:08,758 --> 00:02:13,849
do proper code and use Python 3<font color="#E5E5E5"> just so</font>

54
00:02:11,730 --> 00:02:13,849
you know

55
00:02:14,090 --> 00:02:19,010
so this attack<font color="#E5E5E5"> this assume is not very</font>

56
00:02:17,090 --> 00:02:20,360
much experience<font color="#CCCCCC"> it helps if</font><font color="#E5E5E5"> you</font>

57
00:02:19,010 --> 00:02:21,590
understand<font color="#E5E5E5"> network protocols because I'm</font>

58
00:02:20,360 --> 00:02:23,209
really<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be looking</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> you know</font>

59
00:02:21,590 --> 00:02:25,580
<font color="#CCCCCC">some packet captures and talking about</font>

60
00:02:23,209 --> 00:02:26,900
<font color="#E5E5E5">the field in protocols and stuff like</font>

61
00:02:25,580 --> 00:02:28,910
that<font color="#E5E5E5"> so if you don't</font><font color="#CCCCCC"> really understand</font>

62
00:02:26,900 --> 00:02:31,520
<font color="#CCCCCC">that you might get a</font><font color="#E5E5E5"> little off</font>

63
00:02:28,910 --> 00:02:33,319
<font color="#E5E5E5">hopefully not too much though</font><font color="#CCCCCC"> and the</font>

64
00:02:31,520 --> 00:02:35,120
next level<font color="#E5E5E5"> like I'm saying this is</font>

65
00:02:33,319 --> 00:02:36,530
really<font color="#E5E5E5"> going to go into</font><font color="#CCCCCC"> some basics</font><font color="#E5E5E5"> but</font>

66
00:02:35,120 --> 00:02:39,080
<font color="#CCCCCC">I</font><font color="#E5E5E5"> highly</font><font color="#CCCCCC"> recommend you check out covert</font>

67
00:02:36,530 --> 00:02:40,790
channels on like how<font color="#E5E5E5"> to ban</font><font color="#CCCCCC"> air</font><font color="#E5E5E5"> gap</font>

68
00:02:39,080 --> 00:02:42,860
<font color="#E5E5E5">media there's some really amazing air</font>

69
00:02:40,790 --> 00:02:44,690
<font color="#E5E5E5">gapped covert channels out there</font><font color="#CCCCCC"> these</font>

70
00:02:42,860 --> 00:02:46,160
days<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> the things they can</font><font color="#CCCCCC"> make a</font>

71
00:02:44,690 --> 00:02:49,910
piece<font color="#E5E5E5"> of hardware do that it was never</font>

72
00:02:46,160 --> 00:02:51,769
<font color="#E5E5E5">designed to do it</font><font color="#CCCCCC"> blows my mind as well</font>

73
00:02:49,910 --> 00:02:53,780
as things like covert timing channels

74
00:02:51,769 --> 00:02:55,730
<font color="#E5E5E5">really subtle stuff and detection</font>

75
00:02:53,780 --> 00:02:56,780
algorithms<font color="#E5E5E5"> so if you want to make a</font>

76
00:02:55,730 --> 00:02:57,829
covert<font color="#E5E5E5"> channel you really need to</font>

77
00:02:56,780 --> 00:02:59,720
understand how you're gonna<font color="#CCCCCC"> get picked</font>

78
00:02:57,830 --> 00:03:03,170
up<font color="#E5E5E5"> right so this gentleman here could</font>

79
00:02:59,720 --> 00:03:08,510
<font color="#E5E5E5">probably tell us how about that and then</font>

80
00:03:03,170 --> 00:03:09,890
<font color="#CCCCCC">I all right</font><font color="#E5E5E5"> so the Python I'm</font><font color="#CCCCCC"> using in</font>

81
00:03:08,510 --> 00:03:12,350
the presentation again<font color="#E5E5E5"> very rudimentary</font>

82
00:03:09,890 --> 00:03:14,119
but I just<font color="#E5E5E5"> throw it up on a github</font>

83
00:03:12,350 --> 00:03:16,670
repository just so you can take a quick

84
00:03:14,120 --> 00:03:19,220
peek if you want to try<font color="#E5E5E5"> it out you</font><font color="#CCCCCC"> know</font>

85
00:03:16,670 --> 00:03:22,820
while I'm talking<font color="#E5E5E5"> so here's one</font><font color="#CCCCCC"> way to</font>

86
00:03:19,220 --> 00:03:25,010
<font color="#E5E5E5">do it</font><font color="#CCCCCC"> okay first of all why are we</font>

87
00:03:22,820 --> 00:03:26,510
hiding there's a lot of reasons to<font color="#E5E5E5"> hide</font>

88
00:03:25,010 --> 00:03:28,250
a lot<font color="#E5E5E5"> of reasons to use covert channels</font>

89
00:03:26,510 --> 00:03:30,590
<font color="#E5E5E5">usually when you say you're using a</font>

90
00:03:28,250 --> 00:03:33,340
covert<font color="#E5E5E5"> channel you're either a you know</font>

91
00:03:30,590 --> 00:03:36,200
a spy or a bad guy<font color="#E5E5E5"> that's like</font><font color="#CCCCCC"> the -</font>

92
00:03:33,340 --> 00:03:37,970
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> two assumptions there but in</font>

93
00:03:36,200 --> 00:03:40,130
reality<font color="#E5E5E5"> you know you may you</font><font color="#CCCCCC"> may be</font><font color="#E5E5E5"> an</font>

94
00:03:37,970 --> 00:03:41,840
attacker you<font color="#E5E5E5"> may be stealing data</font><font color="#CCCCCC"> you</font>

95
00:03:40,130 --> 00:03:44,329
may actually want<font color="#CCCCCC"> to protect</font>

96
00:03:41,840 --> 00:03:46,820
intellectual<font color="#CCCCCC"> property or some form</font><font color="#E5E5E5"> of</font>

97
00:03:44,329 --> 00:03:48,920
data that you can't risk exposure of you

98
00:03:46,820 --> 00:03:51,200
might be<font color="#E5E5E5"> subverting security controls</font>

99
00:03:48,920 --> 00:03:52,970
<font color="#CCCCCC">you also might just be attempting</font><font color="#E5E5E5"> to</font>

100
00:03:51,200 --> 00:03:55,310
avoid attention<font color="#E5E5E5"> so if you're a person of</font>

101
00:03:52,970 --> 00:03:57,829
interest<font color="#E5E5E5"> and you want to protect</font><font color="#CCCCCC"> your</font>

102
00:03:55,310 --> 00:04:01,549
data or your<font color="#CCCCCC"> communications you may want</font>

103
00:03:57,829 --> 00:04:03,760
<font color="#CCCCCC">to not only use encryption</font><font color="#E5E5E5"> but also</font>

104
00:04:01,549 --> 00:04:06,320
reduce<font color="#E5E5E5"> detectability</font>

105
00:04:03,760 --> 00:04:08,358
so how to hide again<font color="#CCCCCC"> encrypting data</font>

106
00:04:06,320 --> 00:04:10,010
that's a different talk but there's

107
00:04:08,359 --> 00:04:11,989
<font color="#CCCCCC">really these are the two components of</font>

108
00:04:10,010 --> 00:04:14,750
hiding<font color="#E5E5E5"> right you can either encrypt your</font>

109
00:04:11,989 --> 00:04:16,310
<font color="#CCCCCC">data or you can reduce the detection</font><font color="#E5E5E5"> so</font>

110
00:04:14,750 --> 00:04:17,798
people aren't<font color="#CCCCCC"> even looking at it</font><font color="#E5E5E5"> and</font>

111
00:04:16,310 --> 00:04:19,430
those are<font color="#CCCCCC"> when people look at</font>

112
00:04:17,798 --> 00:04:22,700
communications they look at those two

113
00:04:19,430 --> 00:04:25,010
<font color="#E5E5E5">realms right detectability and decrypt</font>

114
00:04:22,700 --> 00:04:26,479
ability I guess you can say<font color="#E5E5E5"> so the</font>

115
00:04:25,010 --> 00:04:28,250
signature based detection

116
00:04:26,480 --> 00:04:32,720
is what we see in<font color="#CCCCCC"> a lot of environments</font>

117
00:04:28,250 --> 00:04:35,630
<font color="#CCCCCC">a lot</font><font color="#E5E5E5"> of the folks I work with</font><font color="#CCCCCC"> clients</font>

118
00:04:32,720 --> 00:04:36,830
<font color="#E5E5E5">and individuals this is really all that</font>

119
00:04:35,630 --> 00:04:39,590
they're<font color="#E5E5E5"> doing they're doing signature</font>

120
00:04:36,830 --> 00:04:41,719
based detection via<font color="#CCCCCC"> AV a.m.</font><font color="#E5E5E5"> maybe</font>

121
00:04:39,590 --> 00:04:44,239
they've<font color="#E5E5E5"> even got some</font><font color="#CCCCCC"> log correlation</font>

122
00:04:41,720 --> 00:04:45,560
and a<font color="#E5E5E5"> sim something to that effect</font><font color="#CCCCCC"> you</font>

123
00:04:44,240 --> 00:04:48,130
get<font color="#E5E5E5"> into some of the bigger</font>

124
00:04:45,560 --> 00:04:50,870
organizations we may also see<font color="#CCCCCC"> some</font>

125
00:04:48,130 --> 00:04:53,480
behavioral pattern<font color="#CCCCCC"> detections</font>

126
00:04:50,870 --> 00:04:55,970
deviations<font color="#CCCCCC"> they're going</font><font color="#E5E5E5"> to be looking</font>

127
00:04:53,480 --> 00:04:59,600
<font color="#CCCCCC">at things on the host you know accounts</font>

128
00:04:55,970 --> 00:05:01,460
processes storage changes<font color="#E5E5E5"> they'll be</font>

129
00:04:59,600 --> 00:05:04,370
looking at the network<font color="#E5E5E5"> so protocols and</font>

130
00:05:01,460 --> 00:05:06,710
endpoints how the network<font color="#E5E5E5"> lives in</font>

131
00:05:04,370 --> 00:05:08,390
breeze and<font color="#E5E5E5"> that's what I'm gonna that's</font>

132
00:05:06,710 --> 00:05:10,460
what I want you to<font color="#CCCCCC"> be thinking</font><font color="#E5E5E5"> about as</font>

133
00:05:08,390 --> 00:05:12,320
I go through<font color="#CCCCCC"> this top is not just saying</font>

134
00:05:10,460 --> 00:05:15,260
well<font color="#E5E5E5"> how can I shove</font><font color="#CCCCCC"> this into a data</font>

135
00:05:12,320 --> 00:05:16,909
packet<font color="#E5E5E5"> but understand why you're</font><font color="#CCCCCC"> putting</font>

136
00:05:15,260 --> 00:05:19,400
it into one packet versus<font color="#E5E5E5"> another</font><font color="#CCCCCC"> and</font>

137
00:05:16,910 --> 00:05:21,680
how the package<font color="#E5E5E5"> should behave how</font><font color="#CCCCCC"> they</font>

138
00:05:19,400 --> 00:05:23,870
<font color="#E5E5E5">should look</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> like you</font><font color="#CCCCCC"> know the</font>

139
00:05:21,680 --> 00:05:25,430
teenager who's trying to<font color="#E5E5E5"> to act normal</font>

140
00:05:23,870 --> 00:05:28,160
when they've they totally done something

141
00:05:25,430 --> 00:05:30,800
wrong<font color="#CCCCCC"> like you know</font><font color="#E5E5E5"> like walking in the</font>

142
00:05:28,160 --> 00:05:34,160
house like past curfew<font color="#CCCCCC"> it's cool</font><font color="#E5E5E5"> fine I</font>

143
00:05:30,800 --> 00:05:39,160
didn't do anything totally fine<font color="#CCCCCC"> so the</font>

144
00:05:34,160 --> 00:05:42,830
data types<font color="#E5E5E5"> quantity as well as traffic</font>

145
00:05:39,160 --> 00:05:46,040
<font color="#E5E5E5">Peaks user norms</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> there's a lot</font>

146
00:05:42,830 --> 00:05:48,229
that we<font color="#CCCCCC"> can identify just by</font><font color="#E5E5E5"> seeing you</font>

147
00:05:46,040 --> 00:05:50,060
know well<font color="#E5E5E5"> Bob doesn't work from 2:00</font>

148
00:05:48,230 --> 00:05:51,920
a.m. to 3:00 a.m. why is he

149
00:05:50,060 --> 00:05:53,330
browsing the web for this<font color="#E5E5E5"> one</font><font color="#CCCCCC"> website</font>

150
00:05:51,920 --> 00:05:54,310
<font color="#CCCCCC">that doesn't</font><font color="#E5E5E5"> actually exist that's</font>

151
00:05:53,330 --> 00:05:57,680
really weird

152
00:05:54,310 --> 00:05:59,420
so you're going to want<font color="#CCCCCC"> to understand</font>

153
00:05:57,680 --> 00:06:01,940
the environment<font color="#E5E5E5"> that you're working in</font>

154
00:05:59,420 --> 00:06:05,330
and make<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that you know what you're</font>

155
00:06:01,940 --> 00:06:07,070
trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> hide from okay so there's a</font>

156
00:06:05,330 --> 00:06:09,560
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> existing</font><font color="#CCCCCC"> tools as I mentioned</font>

157
00:06:07,070 --> 00:06:10,790
there are<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know covert channels are</font>

158
00:06:09,560 --> 00:06:12,170
nothing new they've been around for a

159
00:06:10,790 --> 00:06:14,810
very<font color="#CCCCCC"> long time there are</font><font color="#E5E5E5"> a lot of</font>

160
00:06:12,170 --> 00:06:17,720
existing<font color="#E5E5E5"> apps you can download some of</font>

161
00:06:14,810 --> 00:06:19,790
<font color="#CCCCCC">the concepts</font><font color="#E5E5E5"> in hiding data</font>

162
00:06:17,720 --> 00:06:23,180
steganography for instance<font color="#E5E5E5"> hiding data</font>

163
00:06:19,790 --> 00:06:25,280
within other media<font color="#CCCCCC"> so things like J</font>

164
00:06:23,180 --> 00:06:28,250
<font color="#CCCCCC">steak steak hide open pop there's a</font>

165
00:06:25,280 --> 00:06:30,349
whole<font color="#E5E5E5"> bunch of yes you've</font><font color="#CCCCCC"> heard these a</font>

166
00:06:28,250 --> 00:06:33,950
lot<font color="#CCCCCC"> a lot of ways to hide vias</font>

167
00:06:30,350 --> 00:06:37,190
steganography<font color="#E5E5E5"> identifying entropy in a</font>

168
00:06:33,950 --> 00:06:39,260
file<font color="#E5E5E5"> that has been stay code will give</font>

169
00:06:37,190 --> 00:06:39,860
you<font color="#CCCCCC"> away though so that's something that</font>

170
00:06:39,260 --> 00:06:42,889
<font color="#E5E5E5">you know</font>

171
00:06:39,860 --> 00:06:45,409
you have a really<font color="#E5E5E5"> good heuristic system</font>

172
00:06:42,889 --> 00:06:48,050
or<font color="#E5E5E5"> signature based detection</font><font color="#CCCCCC"> they may</font>

173
00:06:45,409 --> 00:06:50,688
identify whoa that<font color="#E5E5E5"> JPEG is really weird</font>

174
00:06:48,050 --> 00:06:53,060
<font color="#E5E5E5">if you</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> get these levels here on the</font>

175
00:06:50,689 --> 00:06:58,520
the least significant bit<font color="#CCCCCC"> something</font>

176
00:06:53,060 --> 00:07:00,379
<font color="#CCCCCC">going on right so yeah yep so the next</font>

177
00:06:58,520 --> 00:07:02,719
thing that we would<font color="#E5E5E5"> look at is a</font>

178
00:07:00,379 --> 00:07:06,050
<font color="#E5E5E5">prepackaged</font><font color="#CCCCCC"> covert channels</font><font color="#E5E5E5"> things like</font>

179
00:07:02,719 --> 00:07:07,639
iodine<font color="#CCCCCC"> P Tunnel C CT T you can Google e</font>

180
00:07:06,050 --> 00:07:10,009
this there's<font color="#E5E5E5"> lots</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> I described a</font>

181
00:07:07,639 --> 00:07:12,349
<font color="#E5E5E5">couple of them as examples and</font><font color="#CCCCCC"> these are</font>

182
00:07:10,009 --> 00:07:14,810
all pre-built<font color="#E5E5E5"> tools so they have a</font>

183
00:07:12,349 --> 00:07:16,669
pre-built designation and<font color="#CCCCCC"> the problem</font>

184
00:07:14,810 --> 00:07:18,650
with that<font color="#E5E5E5"> is that you can't</font><font color="#CCCCCC"> really</font>

185
00:07:16,669 --> 00:07:20,990
customize<font color="#CCCCCC"> it it's not</font><font color="#E5E5E5"> as flexible</font><font color="#CCCCCC"> so</font>

186
00:07:18,650 --> 00:07:23,779
what I want<font color="#E5E5E5"> to talk about today</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> build</font>

187
00:07:20,990 --> 00:07:26,240
tools where you can more flexibly and

188
00:07:23,779 --> 00:07:28,879
<font color="#E5E5E5">dynamically create covert channels</font>

189
00:07:26,240 --> 00:07:31,490
<font color="#E5E5E5">possibly switch communication mechanisms</font>

190
00:07:28,879 --> 00:07:32,629
<font color="#E5E5E5">in transit</font><font color="#CCCCCC"> and there are tools</font><font color="#E5E5E5"> out there</font>

191
00:07:31,490 --> 00:07:35,569
<font color="#E5E5E5">for that so ettercap</font>

192
00:07:32,629 --> 00:07:36,650
is one of them<font color="#E5E5E5"> scape e is the one we're</font>

193
00:07:35,569 --> 00:07:38,659
going to<font color="#CCCCCC"> be looking at</font><font color="#E5E5E5"> today</font><font color="#CCCCCC"> is actually</font>

194
00:07:36,650 --> 00:07:40,429
a<font color="#E5E5E5"> Python library so anyone who likes</font>

195
00:07:38,659 --> 00:07:42,310
Python will be<font color="#CCCCCC"> familiar</font><font color="#E5E5E5"> with the command</font>

196
00:07:40,430 --> 00:07:44,330
prompt and the<font color="#E5E5E5"> interactive version and</font>

197
00:07:42,310 --> 00:07:47,479
there's a talk<font color="#E5E5E5"> later today about a</font>

198
00:07:44,330 --> 00:07:48,859
<font color="#E5E5E5">Python covert channel called stuffer so</font>

199
00:07:47,479 --> 00:07:53,870
if you guys really are digging<font color="#E5E5E5"> this</font>

200
00:07:48,860 --> 00:07:58,430
concept check those guys out<font color="#CCCCCC"> so</font><font color="#E5E5E5"> first of</font>

201
00:07:53,870 --> 00:08:01,610
all corporate channels again elephants

202
00:07:58,430 --> 00:08:03,259
right<font color="#E5E5E5"> right we see elephants so that's</font>

203
00:08:01,610 --> 00:08:05,900
that's the obvious<font color="#E5E5E5"> right this is us</font>

204
00:08:03,259 --> 00:08:07,669
<font color="#E5E5E5">seeing</font><font color="#CCCCCC"> a you know an HTTP packet on</font><font color="#E5E5E5"> the</font>

205
00:08:05,900 --> 00:08:11,810
network okay we've got somebody trying

206
00:08:07,669 --> 00:08:13,818
<font color="#E5E5E5">to get a</font><font color="#CCCCCC"> web site there's more data here</font>

207
00:08:11,810 --> 00:08:15,409
than we really<font color="#E5E5E5"> recognize and we</font>

208
00:08:13,819 --> 00:08:17,569
<font color="#E5E5E5">initially identify it though</font>

209
00:08:15,409 --> 00:08:19,639
our brains are trained to<font color="#CCCCCC"> look at a</font>

210
00:08:17,569 --> 00:08:21,979
picture<font color="#CCCCCC"> like this and pick out key</font>

211
00:08:19,639 --> 00:08:23,839
<font color="#E5E5E5">Gestalt right we're saying well</font><font color="#CCCCCC"> there's</font>

212
00:08:21,979 --> 00:08:26,120
<font color="#CCCCCC">a two elephants there's a baby elephant</font>

213
00:08:23,839 --> 00:08:29,150
<font color="#E5E5E5">they're doing something</font><font color="#CCCCCC"> or interacting</font>

214
00:08:26,120 --> 00:08:32,269
we begin to relate<font color="#E5E5E5"> to it</font><font color="#CCCCCC"> and we focus in</font>

215
00:08:29,150 --> 00:08:33,828
<font color="#CCCCCC">on specific data within</font><font color="#E5E5E5"> the image so we</font>

216
00:08:32,269 --> 00:08:35,120
see three elephants<font color="#CCCCCC"> there's another</font>

217
00:08:33,828 --> 00:08:35,958
piece<font color="#E5E5E5"> of data if we were really drilling</font>

218
00:08:35,120 --> 00:08:37,159
<font color="#CCCCCC">down we say whoa</font>

219
00:08:35,958 --> 00:08:40,039
that wasn't just elephants that's three

220
00:08:37,159 --> 00:08:42,529
elephants<font color="#E5E5E5"> furthermore we</font><font color="#CCCCCC"> can also</font>

221
00:08:40,039 --> 00:08:44,269
<font color="#E5E5E5">identify that there's more data encoded</font>

222
00:08:42,529 --> 00:08:48,500
in this picture there's a juvenile and

223
00:08:44,269 --> 00:08:50,410
two<font color="#CCCCCC"> adults</font><font color="#E5E5E5"> no tasks so we can keep doing</font>

224
00:08:48,500 --> 00:08:52,800
this

225
00:08:50,410 --> 00:08:58,410
how many<font color="#CCCCCC"> trans solder</font>

226
00:08:52,800 --> 00:09:00,510
<font color="#E5E5E5">and my tree trunks so the point here is</font>

227
00:08:58,410 --> 00:09:03,839
<font color="#E5E5E5">when you look at a piece of</font><font color="#CCCCCC"> data</font>

228
00:09:00,510 --> 00:09:06,330
<font color="#E5E5E5">understand that every single bit every</font>

229
00:09:03,839 --> 00:09:09,839
single<font color="#CCCCCC"> aspect you know</font><font color="#E5E5E5"> we can look at</font>

230
00:09:06,330 --> 00:09:12,029
all of<font color="#CCCCCC"> the color values on this</font>

231
00:09:09,839 --> 00:09:15,240
collection<font color="#E5E5E5"> we could look at quantities</font>

232
00:09:12,029 --> 00:09:17,939
of<font color="#E5E5E5"> items we can look at a lot</font><font color="#CCCCCC"> of</font>

233
00:09:15,240 --> 00:09:19,260
<font color="#CCCCCC">information</font><font color="#E5E5E5"> and use that to encode more</font>

234
00:09:17,940 --> 00:09:22,290
info than<font color="#E5E5E5"> would</font><font color="#CCCCCC"> be immediately</font>

235
00:09:19,260 --> 00:09:24,870
<font color="#E5E5E5">identified by the brain the signature</font>

236
00:09:22,290 --> 00:09:28,170
matching mechanism that is looking<font color="#E5E5E5"> for</font>

237
00:09:24,870 --> 00:09:29,490
specific data to<font color="#CCCCCC"> quantify</font><font color="#E5E5E5"> so this is</font>

238
00:09:28,170 --> 00:09:31,790
what we're really<font color="#CCCCCC"> going to do when</font><font color="#E5E5E5"> we</font>

239
00:09:29,490 --> 00:09:34,170
get<font color="#E5E5E5"> into covert channel development</font>

240
00:09:31,790 --> 00:09:35,939
<font color="#CCCCCC">we're going to start by looking at</font><font color="#E5E5E5"> our</font>

241
00:09:34,170 --> 00:09:42,569
average<font color="#CCCCCC"> Network and we're going</font><font color="#E5E5E5"> to</font>

242
00:09:35,940 --> 00:09:45,209
understand the<font color="#CCCCCC"> D up pardon me I knew</font>

243
00:09:42,570 --> 00:09:48,329
<font color="#E5E5E5">that was going to get me we're going to</font>

244
00:09:45,209 --> 00:09:50,399
look at the pattern matching that the

245
00:09:48,329 --> 00:09:52,319
network brain is doing<font color="#CCCCCC"> so we're going</font><font color="#E5E5E5"> to</font>

246
00:09:50,399 --> 00:09:54,269
<font color="#E5E5E5">say okay this network has these</font>

247
00:09:52,320 --> 00:09:56,070
<font color="#E5E5E5">characteristics what are they looking</font>

248
00:09:54,269 --> 00:09:57,060
for<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know are they picking out the</font>

249
00:09:56,070 --> 00:09:59,370
elephants<font color="#E5E5E5"> are they picking out the</font>

250
00:09:57,060 --> 00:10:01,979
trunks on the elephants<font color="#E5E5E5"> where does</font><font color="#CCCCCC"> that</font>

251
00:09:59,370 --> 00:10:04,649
data recognition end<font color="#E5E5E5"> and where is the</font>

252
00:10:01,980 --> 00:10:07,790
<font color="#CCCCCC">avoid the black box where I can put</font>

253
00:10:04,649 --> 00:10:09,899
<font color="#E5E5E5">information that won't be noticed</font><font color="#CCCCCC"> so</font>

254
00:10:07,790 --> 00:10:12,569
<font color="#CCCCCC">first of</font><font color="#E5E5E5"> all we</font><font color="#CCCCCC"> really need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> create a</font>

255
00:10:09,899 --> 00:10:14,310
baseline<font color="#E5E5E5"> we can do this in a couple</font><font color="#CCCCCC"> ways</font>

256
00:10:12,570 --> 00:10:16,560
so you can<font color="#E5E5E5"> say okay well I'm on an IP</font>

257
00:10:14,310 --> 00:10:17,939
network<font color="#CCCCCC"> I can use</font><font color="#E5E5E5"> public and research</font>

258
00:10:16,560 --> 00:10:19,469
data right you can go out there<font color="#CCCCCC"> and you</font>

259
00:10:17,940 --> 00:10:21,630
can find a lot<font color="#CCCCCC"> of information about</font>

260
00:10:19,470 --> 00:10:25,380
statistic on an average IP network or

261
00:10:21,630 --> 00:10:27,510
any other public protocol<font color="#E5E5E5"> that you land</font>

262
00:10:25,380 --> 00:10:29,550
in you can also analyze existing

263
00:10:27,510 --> 00:10:32,069
<font color="#E5E5E5">signature sets so this is a great way of</font>

264
00:10:29,550 --> 00:10:34,560
<font color="#E5E5E5">you know hitting the masses</font><font color="#CCCCCC"> if you want</font>

265
00:10:32,070 --> 00:10:37,589
to go into<font color="#CCCCCC"> a network</font><font color="#E5E5E5"> and get nine out of</font>

266
00:10:34,560 --> 00:10:39,569
<font color="#E5E5E5">ten</font><font color="#CCCCCC"> go and look at the signature set for</font>

267
00:10:37,589 --> 00:10:41,040
products that<font color="#E5E5E5"> are designed to catch that</font>

268
00:10:39,570 --> 00:10:44,550
activity<font color="#E5E5E5"> right I mean that's</font><font color="#CCCCCC"> a really</font>

269
00:10:41,040 --> 00:10:47,490
<font color="#CCCCCC">easy</font><font color="#E5E5E5"> way of finding those empty spaces</font>

270
00:10:44,550 --> 00:10:49,859
within<font color="#E5E5E5"> the data even better yet though</font>

271
00:10:47,490 --> 00:10:51,750
is to monitor in the target<font color="#CCCCCC"> network and</font>

272
00:10:49,860 --> 00:10:55,529
actually<font color="#CCCCCC"> start</font><font color="#E5E5E5"> to do a</font><font color="#CCCCCC"> baseline</font><font color="#E5E5E5"> yourself</font>

273
00:10:51,750 --> 00:10:57,149
<font color="#E5E5E5">start to understand the the</font><font color="#CCCCCC"> enemy so to</font>

274
00:10:55,529 --> 00:11:00,600
speak or the the<font color="#E5E5E5"> network that you're</font>

275
00:10:57,149 --> 00:11:03,930
attempting<font color="#CCCCCC"> to</font><font color="#E5E5E5"> breach or rather move</font>

276
00:11:00,600 --> 00:11:05,089
through quietly<font color="#E5E5E5"> so when you think</font><font color="#CCCCCC"> about</font>

277
00:11:03,930 --> 00:11:07,128
a<font color="#E5E5E5"> network</font>

278
00:11:05,089 --> 00:11:08,779
understand<font color="#E5E5E5"> there are so many different</font>

279
00:11:07,129 --> 00:11:12,439
<font color="#E5E5E5">ways of</font><font color="#CCCCCC"> detection you know without IDs</font>

280
00:11:08,779 --> 00:11:14,300
and IPS<font color="#CCCCCC"> firewalls sim ABAM maybe</font><font color="#E5E5E5"> even a</font>

281
00:11:12,439 --> 00:11:16,069
user<font color="#CCCCCC"> notice that something off</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so</font>

282
00:11:14,300 --> 00:11:18,680
if you start throwing<font color="#E5E5E5"> packets into an</font>

283
00:11:16,069 --> 00:11:20,120
environment<font color="#E5E5E5"> and some device catches it</font>

284
00:11:18,680 --> 00:11:21,349
and<font color="#E5E5E5"> it's like</font><font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> know what's going</font>

285
00:11:20,120 --> 00:11:22,730
on there's something<font color="#E5E5E5"> happening here</font>

286
00:11:21,350 --> 00:11:26,480
we're<font color="#CCCCCC"> getting all these packets we don't</font>

287
00:11:22,730 --> 00:11:29,720
want them<font color="#CCCCCC"> a user</font><font color="#E5E5E5"> may call out</font><font color="#CCCCCC"> nack HIDs</font>

288
00:11:26,480 --> 00:11:32,720
<font color="#CCCCCC">all sorts of different</font><font color="#E5E5E5"> hosts and network</font>

289
00:11:29,720 --> 00:11:34,579
based platforms<font color="#CCCCCC"> will catch unexpected</font>

290
00:11:32,720 --> 00:11:39,379
behavior<font color="#E5E5E5"> so what we really want</font><font color="#CCCCCC"> to do is</font>

291
00:11:34,579 --> 00:11:42,620
<font color="#E5E5E5">identify on the network the largest</font>

292
00:11:39,379 --> 00:11:45,470
<font color="#CCCCCC">amount of traffic right</font><font color="#E5E5E5"> we're going to</font>

293
00:11:42,620 --> 00:11:46,670
look for the level of<font color="#CCCCCC"> detect ability in</font>

294
00:11:45,470 --> 00:11:49,040
the environment<font color="#E5E5E5"> so we see a lot of</font>

295
00:11:46,670 --> 00:11:51,199
Ethernet<font color="#E5E5E5"> on an average</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> we're</font>

296
00:11:49,040 --> 00:11:52,809
going to see a lot of<font color="#E5E5E5"> ARP</font><font color="#CCCCCC"> we're</font>

297
00:11:51,199 --> 00:11:55,430
definitely going<font color="#E5E5E5"> to see</font><font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> IP</font>

298
00:11:52,809 --> 00:11:58,279
protocol I mean most<font color="#CCCCCC"> everything on layer</font>

299
00:11:55,430 --> 00:12:02,569
<font color="#CCCCCC">3</font><font color="#E5E5E5"> you're going</font><font color="#CCCCCC"> to sees</font><font color="#E5E5E5"> IP then we'll</font>

300
00:11:58,279 --> 00:12:07,249
start to see a divergence<font color="#E5E5E5"> and what I</font>

301
00:12:02,569 --> 00:12:09,709
find is that<font color="#E5E5E5"> the network admins and</font>

302
00:12:07,249 --> 00:12:12,410
network engineers who understand<font color="#CCCCCC"> network</font>

303
00:12:09,709 --> 00:12:15,709
protocols will know the love<font color="#CCCCCC"> for UDP</font>

304
00:12:12,410 --> 00:12:17,569
<font color="#E5E5E5">right</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> however unfortunately a</font>

305
00:12:15,709 --> 00:12:19,219
lot<font color="#CCCCCC"> of folks don't even</font><font color="#E5E5E5"> it's like not</font>

306
00:12:17,569 --> 00:12:21,550
even<font color="#E5E5E5"> on the radar</font><font color="#CCCCCC"> right so a lot of</font>

307
00:12:19,220 --> 00:12:25,910
hacking<font color="#E5E5E5"> tools out there attack using a</font>

308
00:12:21,550 --> 00:12:27,649
UDP as a transit medium<font color="#E5E5E5"> TCP is</font>

309
00:12:25,910 --> 00:12:29,269
definitely above<font color="#E5E5E5"> board that's going</font><font color="#CCCCCC"> to</font>

310
00:12:27,649 --> 00:12:34,040
be noticed a lot of<font color="#CCCCCC"> TCP you're going to</font>

311
00:12:29,269 --> 00:12:35,509
see recognized HTTP web filtering<font color="#E5E5E5"> I mean</font>

312
00:12:34,040 --> 00:12:36,889
even well<font color="#CCCCCC"> filling</font><font color="#E5E5E5"> that's like the basic</font>

313
00:12:35,509 --> 00:12:38,899
stuff<font color="#E5E5E5"> you know so if you're throwing</font>

314
00:12:36,889 --> 00:12:40,610
stuff in and you're trying to<font color="#E5E5E5"> reach a</font>

315
00:12:38,899 --> 00:12:41,839
<font color="#E5E5E5">website that's unknown</font><font color="#CCCCCC"> C&C</font>

316
00:12:40,610 --> 00:12:47,540
<font color="#E5E5E5">you're going to be throwing up alarms</font>

317
00:12:41,839 --> 00:12:49,339
everywhere<font color="#E5E5E5"> DNS sometimes this is less</font>

318
00:12:47,540 --> 00:12:50,480
detected sometimes it's<font color="#E5E5E5"> not so it</font>

319
00:12:49,339 --> 00:12:51,620
depends on the<font color="#CCCCCC"> network you're</font><font color="#E5E5E5"> in right</font>

320
00:12:50,480 --> 00:12:54,050
so if you've got<font color="#CCCCCC"> a network</font><font color="#E5E5E5"> that</font>

321
00:12:51,620 --> 00:12:55,910
understands<font color="#E5E5E5"> that botnets love to use DNS</font>

322
00:12:54,050 --> 00:13:02,329
as a CNC mechanism<font color="#E5E5E5"> they might actually</font>

323
00:12:55,910 --> 00:13:04,639
be<font color="#E5E5E5"> watching</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and the signature</font><font color="#CCCCCC"> inest</font>

324
00:13:02,329 --> 00:13:08,269
traffic mmm excuse me<font color="#CCCCCC"> doesn't look</font>

325
00:13:04,639 --> 00:13:10,309
<font color="#E5E5E5">normal the CDP so let's go discovery</font>

326
00:13:08,269 --> 00:13:12,220
protocol for instance<font color="#E5E5E5"> little little</font>

327
00:13:10,309 --> 00:13:15,679
protocol you might catch out there

328
00:13:12,220 --> 00:13:17,209
icmpv6<font color="#CCCCCC"> all the v6 protocols are great a</font>

329
00:13:15,679 --> 00:13:19,160
lot<font color="#E5E5E5"> of people don't know</font>

330
00:13:17,209 --> 00:13:22,429
<font color="#E5E5E5">to think about those you know they're</font>

331
00:13:19,160 --> 00:13:24,439
<font color="#E5E5E5">like</font><font color="#CCCCCC"> ah who's</font><font color="#E5E5E5"> using ipv6</font><font color="#CCCCCC"> nobody except</font>

332
00:13:22,429 --> 00:13:28,160
all<font color="#CCCCCC"> the devices secretly</font><font color="#E5E5E5"> behind your</font>

333
00:13:24,439 --> 00:13:29,899
backs<font color="#E5E5E5"> so those are a good one and then a</font>

334
00:13:28,160 --> 00:13:33,319
lot of<font color="#E5E5E5"> protocols</font><font color="#CCCCCC"> that we don't even</font>

335
00:13:29,899 --> 00:13:35,300
<font color="#E5E5E5">think</font><font color="#CCCCCC"> about right SSCP I'm going to</font><font color="#E5E5E5"> hold</font>

336
00:13:33,319 --> 00:13:37,998
your<font color="#E5E5E5"> questions the end yep thank you</font>

337
00:13:35,300 --> 00:13:40,429
so<font color="#CCCCCC"> SFTP</font><font color="#E5E5E5"> and I'll talk about this one in</font>

338
00:13:37,999 --> 00:13:43,399
<font color="#CCCCCC">a</font><font color="#E5E5E5"> little bit</font><font color="#CCCCCC"> this is a really</font>

339
00:13:40,429 --> 00:13:45,589
interesting HTTP over UDP protocol<font color="#E5E5E5"> that</font>

340
00:13:43,399 --> 00:13:48,110
<font color="#E5E5E5">you'll see a lot of from like smart TVs</font>

341
00:13:45,589 --> 00:13:51,319
and it's actually a service discovery

342
00:13:48,110 --> 00:13:53,329
protocol<font color="#CCCCCC"> RR</font><font color="#E5E5E5"> CP which is the realtek</font>

343
00:13:51,319 --> 00:13:55,219
remote control protocol<font color="#E5E5E5"> I</font><font color="#CCCCCC"> caught some of</font>

344
00:13:53,329 --> 00:13:57,769
<font color="#CCCCCC">that in a packet capture</font><font color="#E5E5E5"> the other day</font>

345
00:13:55,220 --> 00:13:59,720
yeah<font color="#E5E5E5"> some custom</font><font color="#CCCCCC"> asks</font><font color="#E5E5E5"> some really</font>

346
00:13:57,769 --> 00:14:01,519
fascinating stuff out there<font color="#E5E5E5"> so there's a</font>

347
00:13:59,720 --> 00:14:03,800
lot<font color="#E5E5E5"> of protocols that you may catch in</font>

348
00:14:01,519 --> 00:14:08,029
the living environment that you won't

349
00:14:03,800 --> 00:14:09,740
see<font color="#E5E5E5"> in</font><font color="#CCCCCC"> public data or in research</font><font color="#E5E5E5"> papers</font>

350
00:14:08,029 --> 00:14:11,179
and this is why it's worth understanding

351
00:14:09,740 --> 00:14:12,679
<font color="#E5E5E5">the network that you're actually</font>

352
00:14:11,179 --> 00:14:14,660
profiling<font color="#E5E5E5"> that you're going to be using</font>

353
00:14:12,679 --> 00:14:18,529
covert channels in so that<font color="#CCCCCC"> that'll</font>

354
00:14:14,660 --> 00:14:20,420
sounds easy right<font color="#E5E5E5"> like how do we do that</font>

355
00:14:18,529 --> 00:14:24,499
<font color="#CCCCCC">so we we start by understanding the</font>

356
00:14:20,420 --> 00:14:26,589
<font color="#CCCCCC">common</font><font color="#E5E5E5"> protocols so protocol is</font>

357
00:14:24,499 --> 00:14:29,660
transmitted too frequently for cheap and

358
00:14:26,589 --> 00:14:31,399
<font color="#E5E5E5">inspection so this gets this means we're</font>

359
00:14:29,660 --> 00:14:33,410
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to be cutting down the likelihood</font>

360
00:14:31,399 --> 00:14:35,959
<font color="#CCCCCC">and everything that we look at every</font>

361
00:14:33,410 --> 00:14:38,839
every<font color="#E5E5E5"> consideration we take is just</font>

362
00:14:35,959 --> 00:14:40,849
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to be helping us reduce detection</font>

363
00:14:38,839 --> 00:14:42,589
<font color="#CCCCCC">a little bit more a little bit more</font><font color="#E5E5E5"> so</font>

364
00:14:40,850 --> 00:14:46,160
identifying protocols that<font color="#CCCCCC"> are either</font>

365
00:14:42,589 --> 00:14:49,790
too<font color="#E5E5E5"> frequent for very basic</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> this is</font>

366
00:14:46,160 --> 00:14:52,309
this<font color="#E5E5E5"> is really the the very simplest of</font>

367
00:14:49,790 --> 00:14:54,949
detection<font color="#CCCCCC"> so cheep-cheep inspection HTTP</font>

368
00:14:52,309 --> 00:14:57,649
<font color="#E5E5E5">arp</font><font color="#CCCCCC"> dns you know if you have those</font>

369
00:14:54,949 --> 00:14:59,868
really<font color="#E5E5E5"> cheap firewall devices that are</font>

370
00:14:57,649 --> 00:15:01,220
doing<font color="#E5E5E5"> like some tiny bits of IDs and</font><font color="#CCCCCC"> I</font>

371
00:14:59,869 --> 00:15:02,660
said they're like<font color="#E5E5E5"> they're matching like</font>

372
00:15:01,220 --> 00:15:04,910
five vulnerabilities<font color="#CCCCCC"> that happened ten</font>

373
00:15:02,660 --> 00:15:07,399
years<font color="#E5E5E5"> ago so you might get possibly like</font>

374
00:15:04,910 --> 00:15:09,529
that payloads<font color="#CCCCCC"> that occur regularly on</font>

375
00:15:07,399 --> 00:15:12,170
the<font color="#E5E5E5"> target</font><font color="#CCCCCC"> network so a lot of times</font>

376
00:15:09,529 --> 00:15:14,569
we'll see<font color="#E5E5E5"> as I mentioned</font><font color="#CCCCCC"> the DNS</font>

377
00:15:12,170 --> 00:15:17,689
resolution<font color="#CCCCCC"> so if you're seeing</font>

378
00:15:14,569 --> 00:15:18,979
resolution for an Amazon AWS site<font color="#E5E5E5"> you</font>

379
00:15:17,689 --> 00:15:21,410
know oh it's fine<font color="#E5E5E5"> since it's from the</font>

380
00:15:18,980 --> 00:15:24,529
cloud it's it's<font color="#E5E5E5"> Amazon safe right I mean</font>

381
00:15:21,410 --> 00:15:28,189
nobody<font color="#E5E5E5"> would ever put up a bad Amazon</font>

382
00:15:24,529 --> 00:15:30,329
host<font color="#CCCCCC"> okay so as well as</font><font color="#E5E5E5"> unpredictable</font>

383
00:15:28,189 --> 00:15:32,160
and obscure protocols

384
00:15:30,329 --> 00:15:33,899
protocols that<font color="#E5E5E5"> are to obfuscate</font><font color="#CCCCCC"> adorn</font>

385
00:15:32,160 --> 00:15:37,170
unfamiliar for easy<font color="#E5E5E5"> fingerprinting and</font>

386
00:15:33,899 --> 00:15:40,259
signature<font color="#CCCCCC"> developed</font><font color="#E5E5E5"> then I caught some</font>

387
00:15:37,170 --> 00:15:42,179
Oh X<font color="#E5E5E5"> 88 99 which is the RCP protocol and</font>

388
00:15:40,259 --> 00:15:44,879
I was like what is<font color="#E5E5E5"> that</font>

389
00:15:42,179 --> 00:15:48,839
I spent a little<font color="#E5E5E5"> while tracking it down</font>

390
00:15:44,879 --> 00:15:52,050
it actually<font color="#E5E5E5"> is</font><font color="#CCCCCC"> I it's a layer 2 protocol</font>

391
00:15:48,839 --> 00:15:54,029
from<font color="#E5E5E5"> a switch</font>

392
00:15:52,050 --> 00:15:55,679
it's like pretending to be a managed

393
00:15:54,029 --> 00:15:57,029
<font color="#E5E5E5">switch it's actually a dumb switch but</font>

394
00:15:55,679 --> 00:15:58,800
<font color="#E5E5E5">it uses</font><font color="#CCCCCC"> this protocol</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

395
00:15:57,029 --> 00:16:01,019
<font color="#CCCCCC">actually get it to</font><font color="#E5E5E5"> do some rudimentary</font>

396
00:15:58,800 --> 00:16:02,969
management over the network<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it</font>

397
00:16:01,019 --> 00:16:04,759
<font color="#E5E5E5">broadcast by default unless you set a</font>

398
00:16:02,970 --> 00:16:07,290
pin<font color="#E5E5E5"> so just like one</font><font color="#CCCCCC"> of those weird</font>

399
00:16:04,759 --> 00:16:10,290
<font color="#CCCCCC">ad-hoc kind of things</font><font color="#E5E5E5"> that I would not</font>

400
00:16:07,290 --> 00:16:11,459
<font color="#E5E5E5">have seen on an average</font><font color="#CCCCCC"> Network you</font>

401
00:16:10,290 --> 00:16:13,829
might see payloads from<font color="#CCCCCC"> high-level</font>

402
00:16:11,459 --> 00:16:16,469
sources<font color="#E5E5E5"> like userland</font><font color="#CCCCCC"> and vendor centric</font>

403
00:16:13,829 --> 00:16:19,199
protocols<font color="#CCCCCC"> the Batman protocol is an open</font>

404
00:16:16,470 --> 00:16:21,149
<font color="#CCCCCC">source wireless mesh protocol</font><font color="#E5E5E5"> I caught</font>

405
00:16:19,199 --> 00:16:24,479
<font color="#E5E5E5">one</font><font color="#CCCCCC"> day out in</font><font color="#E5E5E5"> the you know out in</font><font color="#CCCCCC"> the</font>

406
00:16:21,149 --> 00:16:26,579
<font color="#E5E5E5">session say</font><font color="#CCCCCC"> ether</font><font color="#E5E5E5"> out in the air</font><font color="#CCCCCC"> on the</font>

407
00:16:24,480 --> 00:16:28,980
airwaves payloads that<font color="#E5E5E5"> are highly</font>

408
00:16:26,579 --> 00:16:32,429
dynamic and thus harder<font color="#CCCCCC"> some profile so</font>

409
00:16:28,980 --> 00:16:35,160
the the<font color="#E5E5E5"> SFTP protocol</font><font color="#CCCCCC"> we're going to</font>

410
00:16:32,429 --> 00:16:37,439
look at is<font color="#CCCCCC"> text base and it's been it's</font>

411
00:16:35,160 --> 00:16:38,819
very vendor centric so it's easy<font color="#E5E5E5"> to kind</font>

412
00:16:37,439 --> 00:16:43,170
<font color="#CCCCCC">of put stuff in</font><font color="#E5E5E5"> there that's</font><font color="#CCCCCC"> really hard</font>

413
00:16:38,819 --> 00:16:44,549
to signature<font color="#CCCCCC"> ok so let's take a look I'm</font>

414
00:16:43,170 --> 00:16:45,929
going<font color="#CCCCCC"> to switch gears on you a little</font>

415
00:16:44,549 --> 00:16:50,970
<font color="#CCCCCC">bit and we'll take</font><font color="#E5E5E5"> a look at scape</font><font color="#CCCCCC"> Ian</font>

416
00:16:45,929 --> 00:16:54,209
Python<font color="#CCCCCC"> SCAP e so first of all the</font>

417
00:16:50,970 --> 00:16:56,699
escapees<font color="#E5E5E5"> basics constructing packet</font>

418
00:16:54,209 --> 00:17:00,149
since<font color="#CCCCCC"> Kathy is pretty straightforward it</font>

419
00:16:56,699 --> 00:17:02,609
<font color="#E5E5E5">uses a concept of layers for protocols</font>

420
00:17:00,149 --> 00:17:04,890
<font color="#E5E5E5">so we're looking at fields that build</font>

421
00:17:02,610 --> 00:17:07,829
into layers that build into full packets

422
00:17:04,890 --> 00:17:10,319
so you'll see I've got just a snippet<font color="#E5E5E5"> of</font>

423
00:17:07,829 --> 00:17:12,480
code here<font color="#CCCCCC"> I'm building</font><font color="#E5E5E5"> a packet and I'm</font>

424
00:17:10,319 --> 00:17:15,389
identifying<font color="#E5E5E5"> at the base layer the IP</font>

425
00:17:12,480 --> 00:17:18,209
layer<font color="#E5E5E5"> all I'm telling</font><font color="#CCCCCC"> it is a</font>

426
00:17:15,390 --> 00:17:21,839
<font color="#E5E5E5">destination IP address</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> loopback</font>

427
00:17:18,209 --> 00:17:24,689
<font color="#E5E5E5">and that's all I have to do</font><font color="#CCCCCC"> Scapa will</font>

428
00:17:21,839 --> 00:17:26,639
intelligently populate<font color="#E5E5E5"> defaults into</font><font color="#CCCCCC"> the</font>

429
00:17:24,689 --> 00:17:30,600
packet<font color="#CCCCCC"> that we're</font><font color="#E5E5E5"> constructing in each</font>

430
00:17:26,640 --> 00:17:32,100
layer if it's not identified the<font color="#CCCCCC"> next</font>

431
00:17:30,600 --> 00:17:33,840
layer up and<font color="#E5E5E5"> you can see the syntax is</font>

432
00:17:32,100 --> 00:17:35,760
really straightforward<font color="#CCCCCC"> is TCP</font>

433
00:17:33,840 --> 00:17:37,559
<font color="#E5E5E5">transmission control protocol</font><font color="#CCCCCC"> we're</font>

434
00:17:35,760 --> 00:17:38,908
going to destination port of 25 and I'm

435
00:17:37,559 --> 00:17:40,440
not specifying anything<font color="#CCCCCC"> gnash so it's</font>

436
00:17:38,909 --> 00:17:42,480
<font color="#E5E5E5">going to use this defaults for the</font><font color="#CCCCCC"> TCP</font>

437
00:17:40,440 --> 00:17:43,770
<font color="#CCCCCC">layer as well</font><font color="#E5E5E5"> and scrap is really</font>

438
00:17:42,480 --> 00:17:46,280
intelligent<font color="#E5E5E5"> about</font>

439
00:17:43,770 --> 00:17:48,600
constructing packets<font color="#E5E5E5"> layer by layer</font>

440
00:17:46,280 --> 00:17:51,300
<font color="#E5E5E5">based on the protocol</font><font color="#CCCCCC"> that you're</font>

441
00:17:48,600 --> 00:17:54,179
<font color="#CCCCCC">specified</font><font color="#E5E5E5"> now you can build some really</font>

442
00:17:51,300 --> 00:17:55,860
<font color="#CCCCCC">mangled packets whose caffee</font><font color="#E5E5E5"> so if you</font>

443
00:17:54,180 --> 00:17:58,770
throw a packet out there and you put

444
00:17:55,860 --> 00:18:00,330
some crazy<font color="#E5E5E5"> parameters it's going to try</font>

445
00:17:58,770 --> 00:18:03,420
to toss it on<font color="#E5E5E5"> the network</font><font color="#CCCCCC"> and you'll</font>

446
00:18:00,330 --> 00:18:05,820
open up Wireshark or start TCP dump<font color="#E5E5E5"> and</font>

447
00:18:03,420 --> 00:18:07,800
it'll<font color="#E5E5E5"> just like I don't know this is</font>

448
00:18:05,820 --> 00:18:10,740
<font color="#E5E5E5">like here's a hex dump just have that I</font>

449
00:18:07,800 --> 00:18:13,800
have no<font color="#E5E5E5"> idea what this</font><font color="#CCCCCC"> protocol is</font><font color="#E5E5E5"> this</font>

450
00:18:10,740 --> 00:18:16,440
packet<font color="#CCCCCC"> but</font><font color="#E5E5E5"> usually you can intelligently</font>

451
00:18:13,800 --> 00:18:18,540
<font color="#E5E5E5">build these if you understand at a basic</font>

452
00:18:16,440 --> 00:18:21,210
level<font color="#CCCCCC"> how the protocol stack and how to</font>

453
00:18:18,540 --> 00:18:23,879
construct<font color="#CCCCCC"> them there's really</font><font color="#E5E5E5"> easy</font>

454
00:18:21,210 --> 00:18:26,430
syntax since<font color="#CCCCCC"> copy as well so packet</font><font color="#E5E5E5"> dots</font>

455
00:18:23,880 --> 00:18:28,350
show is going<font color="#E5E5E5"> to show us the whole</font>

456
00:18:26,430 --> 00:18:31,650
construction<font color="#CCCCCC"> of the packet and</font><font color="#E5E5E5"> we'll see</font>

457
00:18:28,350 --> 00:18:33,449
those in<font color="#E5E5E5"> just a</font><font color="#CCCCCC"> little bit pack it TCP</font>

458
00:18:31,650 --> 00:18:35,820
is just<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to narrow in on the TCP</font>

459
00:18:33,450 --> 00:18:39,690
<font color="#CCCCCC">layer and then send packet it's that</font>

460
00:18:35,820 --> 00:18:41,730
easy<font color="#E5E5E5"> that's it I just built a TCP packet</font>

461
00:18:39,690 --> 00:18:42,870
<font color="#E5E5E5">going to port 25 and through on the</font>

462
00:18:41,730 --> 00:18:44,720
network<font color="#E5E5E5"> that's all it takes</font>

463
00:18:42,870 --> 00:18:49,620
<font color="#E5E5E5">so scrapping is a really really flexible</font>

464
00:18:44,720 --> 00:18:51,870
<font color="#E5E5E5">library</font><font color="#CCCCCC"> sending and receiving</font><font color="#E5E5E5"> is pretty</font>

465
00:18:49,620 --> 00:18:54,750
<font color="#E5E5E5">straightforward and</font><font color="#CCCCCC"> we can also send and</font>

466
00:18:51,870 --> 00:18:57,379
receive expecting a packet negotiation

467
00:18:54,750 --> 00:19:00,540
<font color="#CCCCCC">come back Scapa has a lot of default</font>

468
00:18:57,380 --> 00:19:04,020
<font color="#CCCCCC">protocols built</font><font color="#E5E5E5"> in so that if you say</font>

469
00:19:00,540 --> 00:19:05,730
send an ICMP<font color="#CCCCCC"> you send an echo request</font>

470
00:19:04,020 --> 00:19:07,170
<font color="#CCCCCC">and you get an echo</font><font color="#E5E5E5"> reply it's going to</font>

471
00:19:05,730 --> 00:19:11,550
intelligently recognize that with the

472
00:19:07,170 --> 00:19:14,910
response we can<font color="#E5E5E5"> identify that the</font><font color="#CCCCCC"> count</font>

473
00:19:11,550 --> 00:19:17,639
<font color="#E5E5E5">that we want to send</font><font color="#CCCCCC"> out is</font><font color="#E5E5E5"> 10 and we</font>

474
00:19:14,910 --> 00:19:21,000
can also apply<font color="#E5E5E5"> filters as well</font><font color="#CCCCCC"> so we</font><font color="#E5E5E5"> can</font>

475
00:19:17,640 --> 00:19:25,020
say well I<font color="#E5E5E5"> only want any destined to</font>

476
00:19:21,000 --> 00:19:26,220
port 8080<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I'll talk a little bit</font>

477
00:19:25,020 --> 00:19:29,400
<font color="#CCCCCC">more about</font><font color="#E5E5E5"> those</font><font color="#CCCCCC"> as we get</font><font color="#E5E5E5"> into the code</font>

478
00:19:26,220 --> 00:19:31,560
so sniffing and handling<font color="#E5E5E5"> sketchy does a</font>

479
00:19:29,400 --> 00:19:34,350
good<font color="#CCCCCC"> job with this as well</font>

480
00:19:31,560 --> 00:19:39,240
we can in<font color="#E5E5E5"> in this case I'm building out</font>

481
00:19:34,350 --> 00:19:41,010
a packet<font color="#E5E5E5"> I'm preparing to sniff the</font>

482
00:19:39,240 --> 00:19:44,310
packet<font color="#E5E5E5"> that I've constructed</font><font color="#CCCCCC"> on the</font>

483
00:19:41,010 --> 00:19:46,800
<font color="#CCCCCC">first line</font><font color="#E5E5E5"> and then I'm defining a way</font>

484
00:19:44,310 --> 00:19:47,790
to handle that packet so<font color="#E5E5E5"> def do you</font>

485
00:19:46,800 --> 00:19:49,620
understand

486
00:19:47,790 --> 00:19:50,850
I'm just going<font color="#E5E5E5"> to print it out in this</font>

487
00:19:49,620 --> 00:19:53,760
case but we'll see some more<font color="#E5E5E5"> complex</font>

488
00:19:50,850 --> 00:19:56,490
<font color="#CCCCCC">functions in just a bit</font><font color="#E5E5E5"> and then I'm</font>

489
00:19:53,760 --> 00:19:59,040
looping on the sniffing function and

490
00:19:56,490 --> 00:20:02,400
time I receive so you've got sniff<font color="#E5E5E5"> every</font>

491
00:19:59,040 --> 00:20:04,230
time I receive a packet<font color="#E5E5E5"> I'm going to say</font>

492
00:20:02,400 --> 00:20:06,720
<font color="#CCCCCC">okay I'm only receiving</font><font color="#E5E5E5"> a single packet</font>

493
00:20:04,230 --> 00:20:09,059
and<font color="#E5E5E5"> then I want to do the functionality</font>

494
00:20:06,720 --> 00:20:10,770
and<font color="#E5E5E5"> do underscore this and I'm only</font>

495
00:20:09,059 --> 00:20:14,490
doing<font color="#CCCCCC"> this</font><font color="#E5E5E5"> two packets to match the</font>

496
00:20:10,770 --> 00:20:15,870
filter<font color="#CCCCCC"> TCP and port 80 or port 8080 the</font>

497
00:20:14,490 --> 00:20:18,150
cool thing about<font color="#CCCCCC"> scalping is you can use</font>

498
00:20:15,870 --> 00:20:20,699
both<font color="#E5E5E5"> a</font><font color="#CCCCCC"> Berkeley packet filter format or</font>

499
00:20:18,150 --> 00:20:22,500
<font color="#E5E5E5">you can use a Python function so</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

500
00:20:20,700 --> 00:20:28,559
use<font color="#E5E5E5"> lambda functions which is really</font>

501
00:20:22,500 --> 00:20:30,390
really<font color="#E5E5E5"> neat and the protocol layers are</font>

502
00:20:28,559 --> 00:20:32,639
really<font color="#CCCCCC"> easy to identify</font><font color="#E5E5E5"> so if you want</font>

503
00:20:30,390 --> 00:20:35,730
to see what since<font color="#CCCCCC"> copy</font><font color="#E5E5E5"> all you got to do</font>

504
00:20:32,640 --> 00:20:37,890
is go<font color="#E5E5E5"> to a prompt where the scapulae</font>

505
00:20:35,730 --> 00:20:40,770
library has been<font color="#CCCCCC"> imported type Skippy</font>

506
00:20:37,890 --> 00:20:42,330
it'll come<font color="#CCCCCC"> up with the arrows just like</font>

507
00:20:40,770 --> 00:20:44,429
you would<font color="#E5E5E5"> see in Python</font><font color="#CCCCCC"> and you can type</font>

508
00:20:42,330 --> 00:20:45,899
LS and<font color="#E5E5E5"> it will</font><font color="#CCCCCC"> actually give you a list</font>

509
00:20:44,429 --> 00:20:48,480
<font color="#CCCCCC">of every protocol that</font><font color="#E5E5E5"> it's natively</font>

510
00:20:45,900 --> 00:20:50,120
built into<font color="#E5E5E5"> your version of copy so it's</font>

511
00:20:48,480 --> 00:20:52,770
a really<font color="#E5E5E5"> really straightforward</font>

512
00:20:50,120 --> 00:20:55,050
<font color="#CCCCCC">environment</font><font color="#E5E5E5"> you can see more information</font>

513
00:20:52,770 --> 00:20:59,760
<font color="#CCCCCC">about a particular protocol so let's see</font>

514
00:20:55,050 --> 00:21:01,590
I<font color="#E5E5E5"> want to build ICMP</font><font color="#CCCCCC"> I can just type</font><font color="#E5E5E5"> LS</font>

515
00:20:59,760 --> 00:21:05,070
ICMP and it will give<font color="#E5E5E5"> me the information</font>

516
00:21:01,590 --> 00:21:07,409
on the<font color="#CCCCCC"> fields</font><font color="#E5E5E5"> I can</font><font color="#CCCCCC"> also look at sub</font>

517
00:21:05,070 --> 00:21:08,879
layers so if I'm building<font color="#E5E5E5"> a DNS packet</font>

518
00:21:07,410 --> 00:21:09,210
and we're going<font color="#E5E5E5"> to do that in</font><font color="#CCCCCC"> just a</font>

519
00:21:08,880 --> 00:21:11,520
little<font color="#E5E5E5"> bit</font>

520
00:21:09,210 --> 00:21:15,510
I'm building<font color="#CCCCCC"> a DNS packet I can</font><font color="#E5E5E5"> look at</font>

521
00:21:11,520 --> 00:21:17,520
the query response section<font color="#CCCCCC"> so Li</font><font color="#E5E5E5"> which</font>

522
00:21:15,510 --> 00:21:20,520
is going<font color="#E5E5E5"> to help us when we start to</font>

523
00:21:17,520 --> 00:21:22,590
build the<font color="#E5E5E5"> command and control that we're</font>

524
00:21:20,520 --> 00:21:24,900
going<font color="#E5E5E5"> to be doing in just a bit</font>

525
00:21:22,590 --> 00:21:26,459
<font color="#E5E5E5">oh one call-out if you're not familiar</font>

526
00:21:24,900 --> 00:21:28,530
with<font color="#E5E5E5"> the environment help and LS are</font>

527
00:21:26,460 --> 00:21:29,610
definitely a<font color="#E5E5E5"> friend</font><font color="#CCCCCC"> to do check those</font>

528
00:21:28,530 --> 00:21:31,649
out because<font color="#CCCCCC"> you can almost always get</font>

529
00:21:29,610 --> 00:21:34,620
information<font color="#E5E5E5"> and it has very full</font>

530
00:21:31,650 --> 00:21:36,929
documentation<font color="#E5E5E5"> online</font><font color="#CCCCCC"> okay so let's get</font>

531
00:21:34,620 --> 00:21:38,699
to<font color="#E5E5E5"> the covert channel</font><font color="#CCCCCC"> piece</font><font color="#E5E5E5"> okay so a</font>

532
00:21:36,929 --> 00:21:41,040
<font color="#E5E5E5">few scenarios that I want to talk about</font>

533
00:21:38,700 --> 00:21:44,490
and I'm<font color="#E5E5E5"> really going</font><font color="#CCCCCC"> to focus on the</font>

534
00:21:41,040 --> 00:21:47,820
firewall and an out-of-band<font color="#E5E5E5"> or IOT</font>

535
00:21:44,490 --> 00:21:53,070
channel but we have a lot of<font color="#CCCCCC"> situations</font>

536
00:21:47,820 --> 00:21:55,409
that<font color="#CCCCCC"> we can use</font><font color="#E5E5E5"> to our advantage</font><font color="#CCCCCC"> so</font>

537
00:21:53,070 --> 00:21:58,290
first of all we've<font color="#CCCCCC"> got our compromised</font>

538
00:21:55,410 --> 00:22:00,630
so<font color="#E5E5E5"> the sad face on the left and then</font>

539
00:21:58,290 --> 00:22:02,879
we've<font color="#E5E5E5"> got Eve on the right waiting</font><font color="#CCCCCC"> for</font>

540
00:22:00,630 --> 00:22:04,620
the covert either covert full covert

541
00:22:02,880 --> 00:22:07,169
<font color="#E5E5E5">channel or maybe exfiltration of data</font>

542
00:22:04,620 --> 00:22:09,209
and typically we would<font color="#E5E5E5"> be going through</font>

543
00:22:07,169 --> 00:22:10,320
<font color="#CCCCCC">a fire off right so that that's the</font>

544
00:22:09,210 --> 00:22:12,029
least desirable

545
00:22:10,320 --> 00:22:14,639
situation because that's<font color="#E5E5E5"> where a lot of</font>

546
00:22:12,029 --> 00:22:16,679
<font color="#E5E5E5">egress is going to be aggressive enough</font>

547
00:22:14,639 --> 00:22:19,258
is going to be occurring<font color="#E5E5E5"> signature</font>

548
00:22:16,679 --> 00:22:21,990
<font color="#CCCCCC">detection and in the</font><font color="#E5E5E5"> environment in a</font>

549
00:22:19,259 --> 00:22:24,630
lot<font color="#E5E5E5"> of networks so if we can avoid that</font>

550
00:22:21,990 --> 00:22:28,919
<font color="#CCCCCC">that would be ideal one way</font><font color="#E5E5E5"> to do this</font>

551
00:22:24,630 --> 00:22:30,870
is mobile<font color="#CCCCCC"> if anyone manages a number of</font>

552
00:22:28,919 --> 00:22:32,820
<font color="#CCCCCC">networks here I'm sure you've seen</font><font color="#E5E5E5"> those</font>

553
00:22:30,870 --> 00:22:34,168
really annoying mobile devices pop up in

554
00:22:32,820 --> 00:22:35,279
the network<font color="#E5E5E5"> and your heart stops for a</font>

555
00:22:34,169 --> 00:22:37,440
minute because<font color="#E5E5E5"> you're like oh my gosh</font>

556
00:22:35,279 --> 00:22:40,200
what's what's it loaded with how<font color="#CCCCCC"> many</font>

557
00:22:37,440 --> 00:22:42,899
free apps this person download so<font color="#E5E5E5"> you</font>

558
00:22:40,200 --> 00:22:46,799
have a lot of BYOD<font color="#CCCCCC"> in networks these</font>

559
00:22:42,899 --> 00:22:49,289
<font color="#E5E5E5">days</font><font color="#CCCCCC"> you can also use to your</font><font color="#E5E5E5"> advantage</font>

560
00:22:46,799 --> 00:22:50,908
<font color="#CCCCCC">the</font><font color="#E5E5E5"> wireless</font><font color="#CCCCCC"> environment a lot of</font>

561
00:22:49,289 --> 00:22:52,860
organizations will have internal

562
00:22:50,909 --> 00:22:54,659
wireless<font color="#CCCCCC"> as well as external</font><font color="#E5E5E5"> wireless</font>

563
00:22:52,860 --> 00:22:56,279
<font color="#E5E5E5">the internal</font><font color="#CCCCCC"> Wireless is typically</font>

564
00:22:54,659 --> 00:22:59,399
sitting right in<font color="#E5E5E5"> the sweet spot</font><font color="#CCCCCC"> in the</font>

565
00:22:56,279 --> 00:23:01,679
internal network<font color="#CCCCCC"> why not</font>

566
00:22:59,399 --> 00:23:03,899
either<font color="#E5E5E5"> you can even crack</font><font color="#CCCCCC"> the wireless</font>

567
00:23:01,679 --> 00:23:05,789
<font color="#E5E5E5">you know that the typical</font><font color="#CCCCCC"> attack surface</font>

568
00:23:03,899 --> 00:23:08,549
there or you can<font color="#E5E5E5"> use</font><font color="#CCCCCC"> it to your</font>

569
00:23:05,789 --> 00:23:11,610
<font color="#CCCCCC">advantage in</font><font color="#E5E5E5"> conjunction</font><font color="#CCCCCC"> with an IOT</font>

570
00:23:08,549 --> 00:23:13,529
device and I'm going to invite<font color="#E5E5E5"> anyone</font>

571
00:23:11,610 --> 00:23:16,789
who's interested to visit the hardware

572
00:23:13,529 --> 00:23:19,769
hacking<font color="#CCCCCC"> village later today for another</font>

573
00:23:16,789 --> 00:23:21,840
<font color="#E5E5E5">esp8266 workshop if you want to see an</font>

574
00:23:19,769 --> 00:23:25,759
<font color="#E5E5E5">example of an IMT device that can</font>

575
00:23:21,840 --> 00:23:30,209
provide this kind of firewall<font color="#E5E5E5"> skirting</font>

576
00:23:25,759 --> 00:23:31,649
technology so the exultation of a

577
00:23:30,210 --> 00:23:33,629
firewall we really want<font color="#E5E5E5"> to identify the</font>

578
00:23:31,649 --> 00:23:35,758
source and<font color="#E5E5E5"> endpoints that</font><font color="#CCCCCC"> we're working</font>

579
00:23:33,629 --> 00:23:38,100
<font color="#E5E5E5">with so we know exactly what path we</font>

580
00:23:35,759 --> 00:23:40,830
have<font color="#E5E5E5"> to traverse</font><font color="#CCCCCC"> with our covert channel</font>

581
00:23:38,100 --> 00:23:43,709
and what identification we're going to

582
00:23:40,830 --> 00:23:45,629
need to<font color="#E5E5E5"> avoid we need to</font><font color="#CCCCCC"> determine the</font>

583
00:23:43,710 --> 00:23:48,179
best protocol for the network and

584
00:23:45,629 --> 00:23:51,408
<font color="#CCCCCC">timeline</font><font color="#E5E5E5"> that we have and then create a</font>

585
00:23:48,179 --> 00:23:51,409
covert<font color="#E5E5E5"> channel according</font><font color="#CCCCCC"> to the the</font>

586
00:23:51,470 --> 00:23:58,799
constraints so let's put<font color="#E5E5E5"> together what</font>

587
00:23:56,100 --> 00:24:00,809
we've seen in<font color="#E5E5E5"> Skype</font><font color="#CCCCCC"> II and and I just</font>

588
00:23:58,799 --> 00:24:03,870
want<font color="#E5E5E5"> to show that it's we've seen enough</font>

589
00:24:00,809 --> 00:24:05,970
that we can start<font color="#E5E5E5"> to</font><font color="#CCCCCC"> build</font><font color="#E5E5E5"> right now</font><font color="#CCCCCC"> so</font>

590
00:24:03,870 --> 00:24:09,570
we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to have Bob the compromised</font>

591
00:24:05,970 --> 00:24:11,580
host and Eve the attacker<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we're</font>

592
00:24:09,570 --> 00:24:15,299
going<font color="#E5E5E5"> to build a two-way comm using just</font>

593
00:24:11,580 --> 00:24:17,668
a<font color="#E5E5E5"> few simple Skippy functions</font>

594
00:24:15,299 --> 00:24:21,139
<font color="#E5E5E5">Eva's going to be sending DNS command in</font>

595
00:24:17,669 --> 00:24:23,390
inbound<font color="#CCCCCC"> so this is again this</font>

596
00:24:21,140 --> 00:24:25,910
this may be<font color="#E5E5E5"> detected by certain networks</font>

597
00:24:23,390 --> 00:24:29,090
<font color="#E5E5E5">and well I'll show you how to get a</font>

598
00:24:25,910 --> 00:24:32,420
<font color="#E5E5E5">little more</font><font color="#CCCCCC"> picky after this but</font><font color="#E5E5E5"> DNS</font>

599
00:24:29,090 --> 00:24:36,350
commands<font color="#CCCCCC"> into Bob and then</font><font color="#E5E5E5"> HD / HTTP</font>

600
00:24:32,420 --> 00:24:39,320
replies<font color="#E5E5E5"> with the shell command standard</font>

601
00:24:36,350 --> 00:24:41,449
output<font color="#E5E5E5"> back to ease so this is this is</font>

602
00:24:39,320 --> 00:24:43,220
<font color="#CCCCCC">really fascinating I promise so we have</font>

603
00:24:41,450 --> 00:24:44,990
<font color="#E5E5E5">easy attacker and if you want to grab</font>

604
00:24:43,220 --> 00:24:47,060
the command dot<font color="#CCCCCC"> PI</font><font color="#E5E5E5"> that's on the github</font>

605
00:24:44,990 --> 00:24:51,290
<font color="#E5E5E5">first of all we're going to encode</font><font color="#CCCCCC"> this</font>

606
00:24:47,060 --> 00:24:53,750
shell command into a DNS query<font color="#E5E5E5"> so to use</font>

607
00:24:51,290 --> 00:24:58,510
Skippy it's very simple<font color="#E5E5E5"> from scape</font><font color="#CCCCCC"> you</font>

608
00:24:53,750 --> 00:25:01,220
<font color="#CCCCCC">got all import star and the command and</font>

609
00:24:58,510 --> 00:25:03,110
IP address of<font color="#E5E5E5"> Bob are going to be taken</font>

610
00:25:01,220 --> 00:25:06,680
<font color="#E5E5E5">from the command line</font><font color="#CCCCCC"> as I warned you</font>

611
00:25:03,110 --> 00:25:11,060
it's<font color="#CCCCCC"> very raw</font><font color="#E5E5E5"> dirty Python I'm sorry</font>

612
00:25:06,680 --> 00:25:15,200
the next line<font color="#CCCCCC"> here ENC command</font><font color="#E5E5E5"> and see</font>

613
00:25:11,060 --> 00:25:17,840
my pointer sorry guys<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to just</font>

614
00:25:15,200 --> 00:25:19,550
do some<font color="#E5E5E5"> really basic encoding so that</font>

615
00:25:17,840 --> 00:25:22,070
it's not really<font color="#E5E5E5"> obvious</font><font color="#CCCCCC"> that we're</font>

616
00:25:19,550 --> 00:25:23,629
sending<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know cat Etsy shadow across</font>

617
00:25:22,070 --> 00:25:26,060
<font color="#E5E5E5">the network in a DNS command</font><font color="#CCCCCC"> it's a</font>

618
00:25:23,630 --> 00:25:28,520
little<font color="#CCCCCC"> obvious</font><font color="#E5E5E5"> so well we'll just</font><font color="#CCCCCC"> use</font>

619
00:25:26,060 --> 00:25:30,320
<font color="#E5E5E5">basically for at this point this is</font><font color="#CCCCCC"> not</font>

620
00:25:28,520 --> 00:25:32,360
what I would<font color="#CCCCCC"> consider a very</font><font color="#E5E5E5"> good</font>

621
00:25:30,320 --> 00:25:33,830
approach to<font color="#CCCCCC"> this basics before</font><font color="#E5E5E5"> we know</font>

622
00:25:32,360 --> 00:25:36,860
<font color="#E5E5E5">that's easily reversible and pretty</font>

623
00:25:33,830 --> 00:25:38,389
identifiable<font color="#E5E5E5"> furthermore when we see the</font>

624
00:25:36,860 --> 00:25:39,949
<font color="#E5E5E5">DNS</font><font color="#CCCCCC"> data outputs we're going to</font><font color="#E5E5E5"> notice</font>

625
00:25:38,390 --> 00:25:44,540
<font color="#E5E5E5">that there are capitals and lowercase</font>

626
00:25:39,950 --> 00:25:47,510
<font color="#CCCCCC">letters now I will say that</font><font color="#E5E5E5"> if a user</font>

627
00:25:44,540 --> 00:25:48,950
say doesn't nslookup<font color="#CCCCCC"> and types capitals</font>

628
00:25:47,510 --> 00:25:50,780
<font color="#E5E5E5">and lowercase letters</font><font color="#CCCCCC"> that will actually</font>

629
00:25:48,950 --> 00:25:53,990
get transmitted in the packet<font color="#CCCCCC"> some</font>

630
00:25:50,780 --> 00:25:55,340
<font color="#E5E5E5">applications read retain the case and</font>

631
00:25:53,990 --> 00:25:57,590
<font color="#CCCCCC">will just drop it on</font><font color="#E5E5E5"> the network</font><font color="#CCCCCC"> that</font>

632
00:25:55,340 --> 00:26:01,610
way<font color="#E5E5E5"> so it's not</font><font color="#CCCCCC"> unheard of to</font><font color="#E5E5E5"> see that</font>

633
00:25:57,590 --> 00:26:03,949
<font color="#E5E5E5">but it's definitely</font><font color="#CCCCCC"> something that</font><font color="#E5E5E5"> is</font>

634
00:26:01,610 --> 00:26:07,429
<font color="#E5E5E5">looking at this they may notice so you</font>

635
00:26:03,950 --> 00:26:10,490
may want to you may want to come up with

636
00:26:07,430 --> 00:26:12,470
<font color="#CCCCCC">a more complex scheme to hide the</font>

637
00:26:10,490 --> 00:26:15,560
command in the packet<font color="#E5E5E5"> but we're going to</font>

638
00:26:12,470 --> 00:26:19,180
<font color="#E5E5E5">use basic support encoding and we're</font>

639
00:26:15,560 --> 00:26:21,860
going to<font color="#E5E5E5"> because basically</font><font color="#CCCCCC"> for is a</font>

640
00:26:19,180 --> 00:26:24,110
<font color="#E5E5E5">padded</font><font color="#CCCCCC"> we're going to</font><font color="#E5E5E5"> replace the equal</font>

641
00:26:21,860 --> 00:26:26,120
equal when when it's padding with a

642
00:26:24,110 --> 00:26:29,419
double<font color="#E5E5E5"> equal sign with a calm place</font>

643
00:26:26,120 --> 00:26:32,510
<font color="#E5E5E5">equal the net and if it's on the line</font>

644
00:26:29,420 --> 00:26:34,940
we're just going to<font color="#E5E5E5"> put org and from</font>

645
00:26:32,510 --> 00:26:37,490
here we're going<font color="#E5E5E5"> to</font>

646
00:26:34,940 --> 00:26:39,860
also create a random transaction ID<font color="#E5E5E5"> and</font>

647
00:26:37,490 --> 00:26:41,660
it's not fully random<font color="#E5E5E5"> we're going to do</font>

648
00:26:39,860 --> 00:26:43,070
<font color="#E5E5E5">this so that it's a signal to Bob saying</font>

649
00:26:41,660 --> 00:26:45,860
hey this<font color="#E5E5E5"> is Yves speaking you need to</font>

650
00:26:43,070 --> 00:26:47,810
pay attention<font color="#CCCCCC"> so we're going to make the</font>

651
00:26:45,860 --> 00:26:51,260
first<font color="#CCCCCC"> eight bits of the 16-bit</font>

652
00:26:47,810 --> 00:26:53,600
transaction ID in a<font color="#E5E5E5"> DNS request the all</font>

653
00:26:51,260 --> 00:26:54,860
<font color="#E5E5E5">ones so it'll be an SS and then the</font>

654
00:26:53,600 --> 00:26:57,080
second<font color="#E5E5E5"> eight bits are going</font><font color="#CCCCCC"> to be</font>

655
00:26:54,860 --> 00:26:59,479
randomized<font color="#E5E5E5"> so that it's not obvious</font><font color="#CCCCCC"> that</font>

656
00:26:57,080 --> 00:27:02,720
we're constantly sending<font color="#E5E5E5"> FF 0 0</font><font color="#CCCCCC"> FF</font><font color="#E5E5E5"> 0 0</font>

657
00:26:59,480 --> 00:27:05,930
that's not natural<font color="#E5E5E5"> in a DNS environment</font>

658
00:27:02,720 --> 00:27:09,590
<font color="#E5E5E5">so now that we have</font><font color="#CCCCCC"> our partially a</font>

659
00:27:05,930 --> 00:27:11,540
random transaction ID and are encoded

660
00:27:09,590 --> 00:27:14,480
DNS we're going to send that to<font color="#E5E5E5"> Bob</font><font color="#CCCCCC"> so</font>

661
00:27:11,540 --> 00:27:15,920
you can see we've<font color="#CCCCCC"> got Bob packet and</font>

662
00:27:14,480 --> 00:27:19,010
that's sending just<font color="#E5E5E5"> an IP</font><font color="#CCCCCC"> with the</font>

663
00:27:15,920 --> 00:27:21,020
<font color="#E5E5E5">destination</font><font color="#CCCCCC"> of Bob now I would recommend</font>

664
00:27:19,010 --> 00:27:22,270
<font color="#CCCCCC">in your environment</font><font color="#E5E5E5"> you get a little</font>

665
00:27:21,020 --> 00:27:24,950
more complex about how you're

666
00:27:22,270 --> 00:27:27,500
constructing your<font color="#E5E5E5"> IP packets you may</font>

667
00:27:24,950 --> 00:27:31,490
want to<font color="#CCCCCC"> identify a specific MAC address</font>

668
00:27:27,500 --> 00:27:33,350
<font color="#CCCCCC">you may want to use a source IP that's</font>

669
00:27:31,490 --> 00:27:37,490
going to be trusted<font color="#E5E5E5"> you can change all</font>

670
00:27:33,350 --> 00:27:40,790
of these in scaping the UDP we don't

671
00:27:37,490 --> 00:27:43,100
need to specify<font color="#CCCCCC"> skippy will actually</font>

672
00:27:40,790 --> 00:27:44,930
intelligently identify<font color="#CCCCCC"> things like the</font>

673
00:27:43,100 --> 00:27:48,679
destination port based on the upper

674
00:27:44,930 --> 00:27:52,070
protocols<font color="#CCCCCC"> so it will say this</font><font color="#E5E5E5"> is DNS so</font>

675
00:27:48,680 --> 00:27:54,680
the default<font color="#E5E5E5"> is going</font><font color="#CCCCCC"> to be port 53 we're</font>

676
00:27:52,070 --> 00:27:57,290
going to drop in our transaction ID<font color="#E5E5E5"> and</font>

677
00:27:54,680 --> 00:27:59,750
then you can see I'm building a sub

678
00:27:57,290 --> 00:28:01,550
layer there of the DNS query and

679
00:27:59,750 --> 00:28:03,740
response<font color="#E5E5E5"> and I'm dropping</font><font color="#CCCCCC"> my encoded</font>

680
00:28:01,550 --> 00:28:07,580
command in there and we're sending<font color="#E5E5E5"> it to</font>

681
00:28:03,740 --> 00:28:09,380
Bob next<font color="#E5E5E5"> Bob the compromised host has</font>

682
00:28:07,580 --> 00:28:10,540
another short piece of<font color="#CCCCCC"> code on it</font>

683
00:28:09,380 --> 00:28:13,220
<font color="#E5E5E5">receive that</font><font color="#CCCCCC"> PI</font>

684
00:28:10,540 --> 00:28:16,190
we are sniffing<font color="#E5E5E5"> for DNS queries with our</font>

685
00:28:13,220 --> 00:28:18,010
not quite random transaction ID<font color="#E5E5E5"> so you</font>

686
00:28:16,190 --> 00:28:21,200
can see if you drop down<font color="#CCCCCC"> to the bottom</font>

687
00:28:18,010 --> 00:28:24,110
<font color="#E5E5E5">while true</font><font color="#CCCCCC"> pack equal sniffs</font><font color="#E5E5E5"> count equal</font>

688
00:28:21,200 --> 00:28:26,390
1<font color="#CCCCCC"> PRN equal du underscore this meaning</font>

689
00:28:24,110 --> 00:28:29,350
if you catch a packet<font color="#E5E5E5"> that matches the</font>

690
00:28:26,390 --> 00:28:32,780
lambda filter then do this function and

691
00:28:29,350 --> 00:28:34,969
lambda X<font color="#E5E5E5"> X dot has layer and it's just</font>

692
00:28:32,780 --> 00:28:38,450
<font color="#E5E5E5">looking for a DNS query specifically and</font>

693
00:28:34,970 --> 00:28:40,550
a<font color="#E5E5E5"> DNS transaction ID that</font><font color="#CCCCCC"> is greater</font>

694
00:28:38,450 --> 00:28:41,180
<font color="#E5E5E5">than or equal to</font><font color="#CCCCCC"> FF 0 0 pretty</font>

695
00:28:40,550 --> 00:28:42,590
straightforward

696
00:28:41,180 --> 00:28:44,810
our ID is always<font color="#E5E5E5"> going to land in</font><font color="#CCCCCC"> that</font>

697
00:28:42,590 --> 00:28:48,029
range<font color="#CCCCCC"> so we</font><font color="#E5E5E5"> can just make short easy</font>

698
00:28:44,810 --> 00:28:50,759
code here<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this example</font><font color="#CCCCCC"> you again</font>

699
00:28:48,029 --> 00:28:54,119
a more complex scheme but this is an

700
00:28:50,759 --> 00:28:56,369
easy one to<font color="#E5E5E5"> throw on</font><font color="#CCCCCC"> the slide so at</font>

701
00:28:54,119 --> 00:28:58,619
this point<font color="#E5E5E5"> it's going to catch any</font>

702
00:28:56,369 --> 00:29:01,408
packets from<font color="#E5E5E5"> Eve with this special</font>

703
00:28:58,619 --> 00:29:03,840
<font color="#E5E5E5">consideration and at that point it's</font>

704
00:29:01,409 --> 00:29:06,779
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to grab the packet</font><font color="#CCCCCC"> you can see</font>

705
00:29:03,840 --> 00:29:09,689
that I'm identifying<font color="#CCCCCC"> in the PRM the the</font>

706
00:29:06,779 --> 00:29:11,789
function<font color="#CCCCCC"> I'm identifying</font><font color="#E5E5E5"> the packet</font>

707
00:29:09,690 --> 00:29:14,669
inbound as in packet and then I'm

708
00:29:11,789 --> 00:29:16,590
<font color="#E5E5E5">pulling out Eve's IP from the packet so</font>

709
00:29:14,669 --> 00:29:18,419
you can actually<font color="#E5E5E5"> jump from one IP to</font>

710
00:29:16,590 --> 00:29:20,549
another<font color="#E5E5E5"> and I don't have to let Bob know</font>

711
00:29:18,419 --> 00:29:23,309
<font color="#CCCCCC">we're users ID which is</font><font color="#E5E5E5"> convenient if</font>

712
00:29:20,549 --> 00:29:24,690
say I'm bouncing off of<font color="#E5E5E5"> an IOT somewhere</font>

713
00:29:23,309 --> 00:29:28,109
in the network<font color="#CCCCCC"> and I'm not always</font><font color="#E5E5E5"> going</font>

714
00:29:24,690 --> 00:29:30,080
to have the same<font color="#CCCCCC"> ip address at this</font>

715
00:29:28,109 --> 00:29:33,718
<font color="#E5E5E5">point I'm going to strip the command</font>

716
00:29:30,080 --> 00:29:38,339
<font color="#E5E5E5">replace the dot-com net and dot-org with</font>

717
00:29:33,719 --> 00:29:40,830
the correct base64 symbols and then

718
00:29:38,339 --> 00:29:44,339
decode the base64 to get the command and

719
00:29:40,830 --> 00:29:50,759
<font color="#E5E5E5">I will</font><font color="#CCCCCC"> drop it to a shell grab the</font>

720
00:29:44,339 --> 00:29:52,918
output and actually run that oops<font color="#CCCCCC"> and</font>

721
00:29:50,759 --> 00:29:54,599
I'm sorry<font color="#E5E5E5"> I missed a</font><font color="#CCCCCC"> little bit here so</font>

722
00:29:52,919 --> 00:29:57,330
at<font color="#E5E5E5"> that point I'm going to send the</font>

723
00:29:54,599 --> 00:30:00,389
standard<font color="#E5E5E5"> output of the shell in an HTTP</font>

724
00:29:57,330 --> 00:30:02,428
GET request as<font color="#CCCCCC"> well</font><font color="#E5E5E5"> then I jumped ahead</font>

725
00:30:00,389 --> 00:30:04,709
just a<font color="#CCCCCC"> little bit so with that get</font>

726
00:30:02,429 --> 00:30:09,749
string equal and I'm actually building

727
00:30:04,710 --> 00:30:12,659
<font color="#E5E5E5">out a raw HTTP packet at this point</font><font color="#CCCCCC"> that</font>

728
00:30:09,749 --> 00:30:16,830
is<font color="#E5E5E5"> going to simply create</font><font color="#CCCCCC"> a get request</font>

729
00:30:12,659 --> 00:30:18,570
for<font color="#E5E5E5"> pork / index.php question mark</font><font color="#CCCCCC"> a C</font>

730
00:30:16,830 --> 00:30:20,099
equal and this is<font color="#E5E5E5"> just kind of like</font><font color="#CCCCCC"> a</font>

731
00:30:18,570 --> 00:30:22,499
typical<font color="#E5E5E5"> format you might</font><font color="#CCCCCC"> see in any</font>

732
00:30:20,099 --> 00:30:27,889
<font color="#E5E5E5">random web server log then I'm dropping</font>

733
00:30:22,499 --> 00:30:30,989
the encoded string<font color="#E5E5E5"> into or excuse me</font><font color="#CCCCCC"> the</font>

734
00:30:27,889 --> 00:30:33,178
<font color="#E5E5E5">output</font><font color="#CCCCCC"> of the command that</font><font color="#E5E5E5"> we ran</font><font color="#CCCCCC"> i'm</font>

735
00:30:30,989 --> 00:30:34,830
<font color="#CCCCCC">Rhian coding it so that it's going</font><font color="#E5E5E5"> to be</font>

736
00:30:33,179 --> 00:30:36,059
just<font color="#CCCCCC"> a big string and not you</font><font color="#E5E5E5"> guys will</font>

737
00:30:34,830 --> 00:30:38,939
see this in just<font color="#E5E5E5"> a moment it's</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to</font>

738
00:30:36,059 --> 00:30:41,279
a big string of base64 looks like just a

739
00:30:38,940 --> 00:30:43,950
poor coding you know like some some web

740
00:30:41,279 --> 00:30:46,109
designer<font color="#E5E5E5"> did</font><font color="#CCCCCC"> support coding</font><font color="#E5E5E5"> so now he</font>

741
00:30:43,950 --> 00:30:48,029
was<font color="#E5E5E5"> going to be sniffing for that and</font>

742
00:30:46,109 --> 00:30:50,549
<font color="#CCCCCC">I've actually extended command</font><font color="#E5E5E5"> dot pi</font>

743
00:30:48,029 --> 00:30:55,049
here<font color="#E5E5E5"> so you can see the added code below</font>

744
00:30:50,549 --> 00:30:57,629
I'm<font color="#CCCCCC"> going to be looking for</font><font color="#E5E5E5"> the HTTP</font>

745
00:30:55,049 --> 00:30:59,789
<font color="#E5E5E5">catch Bob's reply and then parse the</font>

746
00:30:57,629 --> 00:31:01,158
output so I'll be decoding<font color="#CCCCCC"> that</font><font color="#E5E5E5"> basic C</font>

747
00:30:59,789 --> 00:31:06,590
<font color="#E5E5E5">for string</font>

748
00:31:01,159 --> 00:31:09,320
and then<font color="#E5E5E5"> I can see the</font><font color="#CCCCCC"> results</font><font color="#E5E5E5"> so here</font>

749
00:31:06,590 --> 00:31:11,330
is the sequence actually<font color="#CCCCCC"> occurring so</font>

750
00:31:09,320 --> 00:31:13,700
we've got command dot<font color="#E5E5E5"> pi and I want to</font>

751
00:31:11,330 --> 00:31:15,918
<font color="#E5E5E5">get an ifconfig readout from Bob</font>

752
00:31:13,700 --> 00:31:17,720
so I've identified<font color="#E5E5E5"> Bob's IP address and</font>

753
00:31:15,919 --> 00:31:20,509
the command I want<font color="#CCCCCC"> to send and you can</font>

754
00:31:17,720 --> 00:31:21,999
see in the packet capture of<font color="#E5E5E5"> each packet</font>

755
00:31:20,509 --> 00:31:25,009
out down the command packet<font color="#E5E5E5"> it is</font>

756
00:31:21,999 --> 00:31:29,659
creating a<font color="#E5E5E5"> DNS request</font><font color="#CCCCCC"> and you can see</font>

757
00:31:25,009 --> 00:31:33,499
I'm looking<font color="#E5E5E5"> for</font><font color="#CCCCCC"> a wzj</font><font color="#E5E5E5"> b25 m and WC net</font>

758
00:31:29,659 --> 00:31:35,720
<font color="#CCCCCC">I'm sure that's a</font><font color="#E5E5E5"> hole somewhere and my</font>

759
00:31:33,499 --> 00:31:39,409
transaction ID is<font color="#CCCCCC"> f FD F</font><font color="#E5E5E5"> so this is</font>

760
00:31:35,720 --> 00:31:40,580
going<font color="#E5E5E5"> to be a note to Bob now first of</font>

761
00:31:39,409 --> 00:31:41,419
<font color="#E5E5E5">all one of</font><font color="#CCCCCC"> those signatures that would</font>

762
00:31:40,580 --> 00:31:45,049
catch<font color="#E5E5E5"> this right away</font>

763
00:31:41,419 --> 00:31:47,059
<font color="#E5E5E5">just you guys know if Bob's not a DNS</font>

764
00:31:45,049 --> 00:31:48,950
server or shouldn't<font color="#E5E5E5"> be getting DNS</font>

765
00:31:47,059 --> 00:31:51,470
queries that's going to be a gotcha

766
00:31:48,950 --> 00:31:53,179
<font color="#E5E5E5">right so this is</font><font color="#CCCCCC"> this is just for an</font>

767
00:31:51,470 --> 00:31:55,749
<font color="#CCCCCC">example so you</font><font color="#E5E5E5"> guys can see scape</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> in</font>

768
00:31:53,179 --> 00:31:58,580
action<font color="#CCCCCC"> but</font><font color="#E5E5E5"> you want to understand the</font>

769
00:31:55,749 --> 00:31:59,869
<font color="#CCCCCC">behavior of your source and endpoints</font>

770
00:31:58,580 --> 00:32:01,879
right you want<font color="#E5E5E5"> to understand well</font><font color="#CCCCCC"> what</font>

771
00:31:59,869 --> 00:32:03,738
did Bob<font color="#E5E5E5"> doing is it a workstation</font><font color="#CCCCCC"> is it</font>

772
00:32:01,879 --> 00:32:06,289
a DNS you know should it<font color="#E5E5E5"> be resolving</font>

773
00:32:03,739 --> 00:32:07,549
DNS getting DNS requests<font color="#CCCCCC"> so that's</font>

774
00:32:06,289 --> 00:32:10,190
something<font color="#E5E5E5"> to keep in mind when you're</font>

775
00:32:07,549 --> 00:32:13,399
designing these so now a<font color="#E5E5E5"> Bob replies</font>

776
00:32:10,190 --> 00:32:14,809
<font color="#E5E5E5">please received the DNS command and has</font>

777
00:32:13,399 --> 00:32:16,428
created<font color="#E5E5E5"> an encoded string and you can</font>

778
00:32:14,809 --> 00:32:18,739
see<font color="#E5E5E5"> that's kind of a messy looking in</font>

779
00:32:16,429 --> 00:32:21,229
Wireshark but it's requesting get for

780
00:32:18,739 --> 00:32:26,239
<font color="#E5E5E5">clash index dot PHP and it's sending the</font>

781
00:32:21,229 --> 00:32:29,269
variable<font color="#E5E5E5"> AC in the request URI and then</font>

782
00:32:26,239 --> 00:32:32,179
<font color="#CCCCCC">IVA</font><font color="#E5E5E5"> coats so Eve receives the ifconfig</font>

783
00:32:29,269 --> 00:32:36,019
results decodes that from the response

784
00:32:32,179 --> 00:32:37,489
in<font color="#E5E5E5"> the HTTP packet and puts that up to</font>

785
00:32:36,019 --> 00:32:39,799
the terminal so this is really really

786
00:32:37,489 --> 00:32:42,080
<font color="#CCCCCC">basic code as I said I would challenge</font>

787
00:32:39,799 --> 00:32:44,359
<font color="#E5E5E5">everyone</font><font color="#CCCCCC"> to download</font><font color="#E5E5E5"> a copy this get</font>

788
00:32:42,080 --> 00:32:46,158
familiar with escapee try this out you

789
00:32:44,359 --> 00:32:48,619
<font color="#E5E5E5">can set it up on the same host you don't</font>

790
00:32:46,159 --> 00:32:50,779
have to have two different<font color="#E5E5E5"> hosts see if</font>

791
00:32:48,619 --> 00:32:52,519
you can modify the functionality<font color="#CCCCCC"> to make</font>

792
00:32:50,779 --> 00:32:56,960
this a little<font color="#E5E5E5"> bit stealthier in the</font>

793
00:32:52,519 --> 00:32:58,879
environment<font color="#E5E5E5"> what we really want to do at</font>

794
00:32:56,960 --> 00:33:01,279
this<font color="#E5E5E5"> point though is use the best</font>

795
00:32:58,879 --> 00:33:04,219
carrier protocol right so we<font color="#E5E5E5"> just saw a</font>

796
00:33:01,279 --> 00:33:07,129
<font color="#E5E5E5">basic command control setup with Skippy</font>

797
00:33:04,220 --> 00:33:08,659
and<font color="#CCCCCC"> Python</font><font color="#E5E5E5"> but we want to understand</font>

798
00:33:07,129 --> 00:33:09,889
what's running<font color="#E5E5E5"> in the environment so we</font>

799
00:33:08,659 --> 00:33:12,950
can find<font color="#E5E5E5"> something that's a little less</font>

800
00:33:09,889 --> 00:33:14,669
<font color="#CCCCCC">likely to be caught you know sending dns</font>

801
00:33:12,950 --> 00:33:18,030
to<font color="#CCCCCC"> workstations is not a good idea</font>

802
00:33:14,670 --> 00:33:19,920
yeah spending HTTP GET request at<font color="#CCCCCC"> 2:00</font>

803
00:33:18,030 --> 00:33:21,960
a.m.<font color="#E5E5E5"> from</font><font color="#CCCCCC"> Bob sortation is</font><font color="#E5E5E5"> also not a</font>

804
00:33:19,920 --> 00:33:24,240
<font color="#E5E5E5">good idea</font><font color="#CCCCCC"> so these will likely</font><font color="#E5E5E5"> be</font>

805
00:33:21,960 --> 00:33:26,790
identified<font color="#E5E5E5"> you want to analyze the</font>

806
00:33:24,240 --> 00:33:31,110
<font color="#CCCCCC">traffic in the</font><font color="#E5E5E5"> environment there's a lot</font>

807
00:33:26,790 --> 00:33:33,510
of ways to do<font color="#E5E5E5"> this</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> recognize you</font>

808
00:33:31,110 --> 00:33:37,020
I<font color="#E5E5E5"> are on a</font><font color="#CCCCCC"> compromised host</font><font color="#E5E5E5"> that will</font>

809
00:33:33,510 --> 00:33:38,340
<font color="#E5E5E5">probably be</font><font color="#CCCCCC"> cut</font><font color="#E5E5E5"> yeah so that you you</font>

810
00:33:37,020 --> 00:33:39,480
probably<font color="#E5E5E5"> don't want to do that</font>

811
00:33:38,340 --> 00:33:41,310
furthermore you may not<font color="#E5E5E5"> have access</font>

812
00:33:39,480 --> 00:33:43,650
<font color="#E5E5E5">something like TCP dump but luckily</font>

813
00:33:41,310 --> 00:33:45,870
<font color="#CCCCCC">Skippy comes to the rescue again we can</font>

814
00:33:43,650 --> 00:33:47,760
<font color="#E5E5E5">implement some really basic code</font><font color="#CCCCCC"> to</font>

815
00:33:45,870 --> 00:33:49,649
analyze the environment<font color="#E5E5E5"> because</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

816
00:33:47,760 --> 00:33:52,710
<font color="#CCCCCC">sniff functionality so we can we can</font>

817
00:33:49,650 --> 00:33:55,530
sniff traffic<font color="#CCCCCC"> there's a quick and dirty</font>

818
00:33:52,710 --> 00:33:58,170
script on the github repository<font color="#E5E5E5"> to sniff</font>

819
00:33:55,530 --> 00:33:59,790
traffic<font color="#E5E5E5"> identify the layers in the</font>

820
00:33:58,170 --> 00:34:02,160
environment<font color="#E5E5E5"> so that you can see what</font>

821
00:33:59,790 --> 00:34:03,690
traffic<font color="#E5E5E5"> is occurring most often and sort</font>

822
00:34:02,160 --> 00:34:06,270
<font color="#E5E5E5">it in that fashion</font>

823
00:34:03,690 --> 00:34:07,560
you may also you can extend<font color="#E5E5E5"> this</font>

824
00:34:06,270 --> 00:34:09,449
functionality<font color="#E5E5E5"> let's say you want</font><font color="#CCCCCC"> to</font>

825
00:34:07,560 --> 00:34:11,340
target<font color="#E5E5E5"> the traffic that's going</font><font color="#CCCCCC"> to</font>

826
00:34:09,449 --> 00:34:13,678
specific<font color="#CCCCCC"> coast</font><font color="#E5E5E5"> or from specific</font><font color="#CCCCCC"> coasts</font>

827
00:34:11,340 --> 00:34:15,540
it's very easy<font color="#E5E5E5"> to build code that will</font>

828
00:34:13,679 --> 00:34:17,780
provide<font color="#CCCCCC"> that so you can really</font><font color="#E5E5E5"> start to</font>

829
00:34:15,540 --> 00:34:23,009
baseline your network environment<font color="#E5E5E5"> and</font>

830
00:34:17,780 --> 00:34:25,500
identify the best carrier<font color="#E5E5E5"> so the command</font>

831
00:34:23,010 --> 00:34:27,810
<font color="#E5E5E5">I'm not going to go through all</font><font color="#CCCCCC"> of the</font>

832
00:34:25,500 --> 00:34:30,840
functionality<font color="#E5E5E5"> here but as you can see at</font>

833
00:34:27,810 --> 00:34:34,830
the top I<font color="#E5E5E5"> use this on</font><font color="#CCCCCC"> 300 packets so I</font>

834
00:34:30,840 --> 00:34:37,260
<font color="#E5E5E5">captured 300 a thern net 209 UDP 137 raw</font>

835
00:34:34,830 --> 00:34:40,469
raw is the<font color="#CCCCCC"> indication that escapee has</font>

836
00:34:37,260 --> 00:34:42,450
no way of<font color="#E5E5E5"> decoding and identifying the</font>

837
00:34:40,469 --> 00:34:44,580
information<font color="#CCCCCC"> so you might see raw if you</font>

838
00:34:42,449 --> 00:34:47,100
see a TCP packet with some strange

839
00:34:44,580 --> 00:34:48,630
<font color="#CCCCCC">unknown protocol or one of those</font><font color="#E5E5E5"> those</font>

840
00:34:47,100 --> 00:34:49,949
weird little<font color="#E5E5E5"> proprietary protocols that</font>

841
00:34:48,630 --> 00:34:53,490
vendors like to develop<font color="#E5E5E5"> and put out</font>

842
00:34:49,949 --> 00:34:57,169
there<font color="#E5E5E5"> and then we have things like ipv6</font>

843
00:34:53,489 --> 00:34:59,729
<font color="#E5E5E5">ARP padding layers in the protocols IP</font>

844
00:34:57,170 --> 00:35:02,130
<font color="#E5E5E5">DNS question records</font><font color="#CCCCCC"> so you can start</font><font color="#E5E5E5"> to</font>

845
00:34:59,730 --> 00:35:07,770
see what<font color="#E5E5E5"> the network is providing in</font>

846
00:35:02,130 --> 00:35:09,420
terms of a<font color="#E5E5E5"> transmission</font><font color="#CCCCCC"> medium</font><font color="#E5E5E5"> this is</font>

847
00:35:07,770 --> 00:35:11,520
where we<font color="#E5E5E5"> get to have</font><font color="#CCCCCC"> a lot of fun</font>

848
00:35:09,420 --> 00:35:14,240
<font color="#E5E5E5">looking at Network protocols and there's</font>

849
00:35:11,520 --> 00:35:18,990
two<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> that I</font><font color="#E5E5E5"> usually do this</font>

850
00:35:14,240 --> 00:35:21,000
Wikipedia<font color="#CCCCCC"> is a really great source you</font>

851
00:35:18,990 --> 00:35:22,680
can you can you can<font color="#CCCCCC"> google sue but</font>

852
00:35:21,000 --> 00:35:26,430
<font color="#E5E5E5">Wikipedia almost always has a really</font>

853
00:35:22,680 --> 00:35:28,200
excellent article facto<font color="#CCCCCC"> exudate 99 the</font>

854
00:35:26,430 --> 00:35:30,480
<font color="#E5E5E5">realtek remote control protocol</font>

855
00:35:28,200 --> 00:35:33,180
an<font color="#E5E5E5"> article on</font><font color="#CCCCCC"> that so you can usually</font>

856
00:35:30,480 --> 00:35:35,460
<font color="#CCCCCC">find information about</font><font color="#E5E5E5"> the protocols in</font>

857
00:35:33,180 --> 00:35:38,240
<font color="#E5E5E5">the environment in Wikipedia and get</font>

858
00:35:35,460 --> 00:35:40,700
some really good<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> community</font>

859
00:35:38,240 --> 00:35:44,098
<font color="#E5E5E5">developed</font><font color="#CCCCCC"> human readable stuff</font>

860
00:35:40,700 --> 00:35:47,279
<font color="#E5E5E5">alternatively</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can go to the IETF and</font>

861
00:35:44,099 --> 00:35:49,050
read the RFC<font color="#E5E5E5"> for the protocol that</font><font color="#CCCCCC"> is</font>

862
00:35:47,280 --> 00:35:50,579
really small<font color="#E5E5E5"> but</font><font color="#CCCCCC"> is it some beautiful</font>

863
00:35:49,050 --> 00:35:53,820
<font color="#CCCCCC">ASCII art of the exact same picture</font><font color="#E5E5E5"> I</font>

864
00:35:50,579 --> 00:35:56,010
just<font color="#CCCCCC"> showed you</font><font color="#E5E5E5"> this is from the RFC for</font>

865
00:35:53,820 --> 00:35:57,630
transmission control protocol<font color="#CCCCCC"> the</font>

866
00:35:56,010 --> 00:36:01,440
original one and this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the state</font>

867
00:35:57,630 --> 00:36:04,530
diagram<font color="#CCCCCC"> I have actually printed up RFC s</font>

868
00:36:01,440 --> 00:36:07,589
and read them<font color="#CCCCCC"> well parts of them but it</font>

869
00:36:04,530 --> 00:36:09,089
is<font color="#E5E5E5"> it's pretty</font><font color="#CCCCCC"> bulky so I recommend that</font>

870
00:36:07,589 --> 00:36:10,589
<font color="#CCCCCC">if you're going to</font><font color="#E5E5E5"> identify the</font>

871
00:36:09,089 --> 00:36:13,980
protocols<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the working</font><font color="#E5E5E5"> environment</font>

872
00:36:10,589 --> 00:36:16,230
<font color="#CCCCCC">just</font><font color="#E5E5E5"> go to Wikipedia look on Google</font><font color="#CCCCCC"> you</font>

873
00:36:13,980 --> 00:36:18,030
know<font color="#E5E5E5"> you may also find</font><font color="#CCCCCC"> information so</font>

874
00:36:16,230 --> 00:36:19,589
for instance when I<font color="#CCCCCC"> was looking up</font><font color="#E5E5E5"> SSDP</font>

875
00:36:18,030 --> 00:36:21,990
I<font color="#CCCCCC"> get to read</font><font color="#E5E5E5"> all the nice articles</font>

876
00:36:19,589 --> 00:36:24,328
around 2014 on<font color="#E5E5E5"> the denial of service</font>

877
00:36:21,990 --> 00:36:26,520
attacks<font color="#E5E5E5"> that became</font><font color="#CCCCCC"> very popular</font><font color="#E5E5E5"> using</font>

878
00:36:24,329 --> 00:36:28,079
SFTP right around that<font color="#CCCCCC"> time so you may</font>

879
00:36:26,520 --> 00:36:30,390
find some added information<font color="#CCCCCC"> that might</font>

880
00:36:28,079 --> 00:36:32,070
help<font color="#E5E5E5"> you</font><font color="#CCCCCC"> make a</font><font color="#E5E5E5"> better decision more</font>

881
00:36:30,390 --> 00:36:34,020
informed decision<font color="#E5E5E5"> when you read up on</font>

882
00:36:32,070 --> 00:36:35,550
the protocol<font color="#E5E5E5"> so don't rely</font><font color="#CCCCCC"> just on</font><font color="#E5E5E5"> your</font>

883
00:36:34,020 --> 00:36:36,440
packet captures or even<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Skype you</font>

884
00:36:35,550 --> 00:36:39,480
build

885
00:36:36,440 --> 00:36:41,460
okay so<font color="#CCCCCC"> SSCP is going to give</font><font color="#E5E5E5"> us first</font>

886
00:36:39,480 --> 00:36:43,650
of all<font color="#CCCCCC"> a little bit more space in the</font>

887
00:36:41,460 --> 00:36:47,310
environment<font color="#E5E5E5"> so this is really helpful</font>

888
00:36:43,650 --> 00:36:49,290
<font color="#E5E5E5">because let's say</font><font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to build a</font>

889
00:36:47,310 --> 00:36:51,089
channel<font color="#E5E5E5"> where I'm going to isolate some</font>

890
00:36:49,290 --> 00:36:53,630
data and I'm really<font color="#E5E5E5"> excited and I'm like</font>

891
00:36:51,089 --> 00:36:56,339
<font color="#E5E5E5">oh cool there's this reserved flag</font>

892
00:36:53,630 --> 00:36:59,190
awesome so I get one bit for every

893
00:36:56,339 --> 00:37:00,779
<font color="#E5E5E5">packet I send out right so you need to</font>

894
00:36:59,190 --> 00:37:03,540
<font color="#E5E5E5">identify a protocol that's not only</font>

895
00:37:00,780 --> 00:37:05,310
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> provide you with the covert</font>

896
00:37:03,540 --> 00:37:06,750
level that you need<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> going to</font>

897
00:37:05,310 --> 00:37:08,339
match the environment<font color="#E5E5E5"> but</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> the</font>

898
00:37:06,750 --> 00:37:09,690
transmission<font color="#CCCCCC"> rate is</font><font color="#E5E5E5"> a big deal unless</font>

899
00:37:08,339 --> 00:37:11,250
you've got infinite<font color="#CCCCCC"> time and you</font><font color="#E5E5E5"> don't</font>

900
00:37:09,690 --> 00:37:12,869
really care<font color="#CCCCCC"> about exfiltrating in which</font>

901
00:37:11,250 --> 00:37:15,750
case I have no idea why<font color="#E5E5E5"> you're even</font>

902
00:37:12,869 --> 00:37:17,609
<font color="#E5E5E5">worried</font><font color="#CCCCCC"> about this</font><font color="#E5E5E5"> so you want to</font>

903
00:37:15,750 --> 00:37:20,250
<font color="#E5E5E5">identify</font><font color="#CCCCCC"> protocol</font><font color="#E5E5E5"> that's going to give</font>

904
00:37:17,609 --> 00:37:23,040
you a<font color="#E5E5E5"> mechanism to put less easily</font>

905
00:37:20,250 --> 00:37:27,990
signature data in less easily<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> I</font>

906
00:37:23,040 --> 00:37:29,970
<font color="#CCCCCC">analyzed information and you</font><font color="#E5E5E5"> can start</font>

907
00:37:27,990 --> 00:37:32,339
by targeting information<font color="#E5E5E5"> that you see a</font>

908
00:37:29,970 --> 00:37:35,529
lot<font color="#CCCCCC"> of again vendor centric the more</font>

909
00:37:32,339 --> 00:37:37,270
obscure protocols<font color="#E5E5E5"> or the more</font>

910
00:37:35,530 --> 00:37:41,080
dynamic protocols<font color="#E5E5E5"> so this is a</font>

911
00:37:37,270 --> 00:37:43,390
<font color="#CCCCCC">text-based protocol HTTP over UDP pretty</font>

912
00:37:41,080 --> 00:37:44,860
<font color="#E5E5E5">useful because if you look in an average</font>

913
00:37:43,390 --> 00:37:48,609
environment where there's<font color="#E5E5E5"> more than one</font>

914
00:37:44,860 --> 00:37:49,990
device<font color="#E5E5E5"> sending out SFTP</font><font color="#CCCCCC"> you're going to</font>

915
00:37:48,610 --> 00:37:51,970
<font color="#E5E5E5">notice that</font><font color="#CCCCCC"> there they all do it a</font>

916
00:37:49,990 --> 00:37:53,080
<font color="#CCCCCC">little bit different</font><font color="#E5E5E5"> and it's a very</font>

917
00:37:51,970 --> 00:37:55,299
heavily text-based

918
00:37:53,080 --> 00:37:57,520
when I see a heavily text-based protocol

919
00:37:55,300 --> 00:38:00,490
<font color="#CCCCCC">I think we</font><font color="#E5E5E5"> look at all those bits</font><font color="#CCCCCC"> I have</font>

920
00:37:57,520 --> 00:38:03,280
so many bits there to use so this is

921
00:38:00,490 --> 00:38:05,410
going<font color="#E5E5E5"> to be a useful one particularly if</font>

922
00:38:03,280 --> 00:38:07,600
the network<font color="#E5E5E5"> administrator wasn't</font>

923
00:38:05,410 --> 00:38:10,240
thinking<font color="#E5E5E5"> about something like</font><font color="#CCCCCC"> SSD PA</font>

924
00:38:07,600 --> 00:38:13,690
when they developed the the<font color="#CCCCCC"> environment</font>

925
00:38:10,240 --> 00:38:15,430
that<font color="#E5E5E5"> they're working in so skimpy</font>

926
00:38:13,690 --> 00:38:17,080
provides a lot of<font color="#CCCCCC"> ways of doing this</font><font color="#E5E5E5"> so</font>

927
00:38:15,430 --> 00:38:19,359
as<font color="#E5E5E5"> I mentioned our raw layer this is a</font>

928
00:38:17,080 --> 00:38:20,830
really easy<font color="#E5E5E5"> quick way of throwing this</font>

929
00:38:19,360 --> 00:38:22,360
together<font color="#CCCCCC"> I know what the protocol looks</font>

930
00:38:20,830 --> 00:38:25,450
<font color="#E5E5E5">like I'm just going to construct it</font><font color="#CCCCCC"> by</font>

931
00:38:22,360 --> 00:38:27,850
strings<font color="#E5E5E5"> piece</font><font color="#CCCCCC"> by piece so I'm going to</font>

932
00:38:25,450 --> 00:38:30,220
create a variable<font color="#E5E5E5"> SSDP</font>

933
00:38:27,850 --> 00:38:33,040
and I know what the<font color="#CCCCCC"> SSDP</font><font color="#E5E5E5"> looks like so</font>

934
00:38:30,220 --> 00:38:35,470
I'm just<font color="#E5E5E5"> going to put it together</font><font color="#CCCCCC"> step</font>

935
00:38:33,040 --> 00:38:37,750
<font color="#E5E5E5">by step and then create a packet so I'm</font>

936
00:38:35,470 --> 00:38:39,640
<font color="#E5E5E5">sending an IP</font><font color="#CCCCCC"> packet</font><font color="#E5E5E5"> this is a multicast</font>

937
00:38:37,750 --> 00:38:41,560
<font color="#E5E5E5">protocol</font><font color="#CCCCCC"> so that's why you'll see</font><font color="#E5E5E5"> a lot</font>

938
00:38:39,640 --> 00:38:43,319
of SSDP on a network<font color="#E5E5E5"> going everywhere</font>

939
00:38:41,560 --> 00:38:44,920
<font color="#CCCCCC">that's kind of convenient right because</font>

940
00:38:43,320 --> 00:38:46,300
someone's<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to say oh it's a</font>

941
00:38:44,920 --> 00:38:47,470
multicast protocol<font color="#E5E5E5"> of course it's going</font>

942
00:38:46,300 --> 00:38:52,450
to<font color="#E5E5E5"> be going to Bob why not</font>

943
00:38:47,470 --> 00:38:55,899
I<font color="#E5E5E5"> think but so we've got the multicast</font>

944
00:38:52,450 --> 00:38:59,560
IP address we've got UDP<font color="#CCCCCC"> it is a UDP</font>

945
00:38:55,900 --> 00:39:03,370
1900<font color="#E5E5E5"> protocol</font><font color="#CCCCCC"> and then</font><font color="#E5E5E5"> we're throwing in</font>

946
00:38:59,560 --> 00:39:06,400
<font color="#CCCCCC">oops and</font><font color="#E5E5E5"> I should say SSDP without the</font>

947
00:39:03,370 --> 00:39:09,940
<font color="#CCCCCC">parentheses and that'll</font><font color="#E5E5E5"> actually send</font>

948
00:39:06,400 --> 00:39:11,680
out the SFTP packet<font color="#E5E5E5"> constructed as a raw</font>

949
00:39:09,940 --> 00:39:14,080
component it'll<font color="#E5E5E5"> look right on</font><font color="#CCCCCC"> the</font>

950
00:39:11,680 --> 00:39:15,549
network if<font color="#CCCCCC"> you sniff</font><font color="#E5E5E5"> it with wire</font><font color="#CCCCCC"> start</font>

951
00:39:14,080 --> 00:39:18,910
<font color="#E5E5E5">you'll actually see that</font><font color="#CCCCCC"> it picks it up</font>

952
00:39:15,550 --> 00:39:19,870
as an SFTP packet<font color="#CCCCCC"> but you're not really</font>

953
00:39:18,910 --> 00:39:23,200
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be able to do a lot</font><font color="#CCCCCC"> of</font>

954
00:39:19,870 --> 00:39:24,850
transactions within<font color="#E5E5E5"> escaping for you can</font>

955
00:39:23,200 --> 00:39:26,259
create a cleaner constructed custom

956
00:39:24,850 --> 00:39:28,029
layer and this<font color="#E5E5E5"> is where a</font><font color="#CCCCCC"> staple</font><font color="#E5E5E5"> gets</font>

957
00:39:26,260 --> 00:39:30,940
really cool so you can<font color="#CCCCCC"> actually create a</font>

958
00:39:28,030 --> 00:39:33,010
class with the packets<font color="#CCCCCC"> that you want to</font>

959
00:39:30,940 --> 00:39:34,990
use so here<font color="#E5E5E5"> I'm doing almost the same</font>

960
00:39:33,010 --> 00:39:37,570
say I'm really<font color="#E5E5E5"> basically building out</font>

961
00:39:34,990 --> 00:39:39,790
the fields in<font color="#E5E5E5"> an</font><font color="#CCCCCC"> SSCP packet and this is</font>

962
00:39:37,570 --> 00:39:41,830
just<font color="#E5E5E5"> a concatenated version this is the</font>

963
00:39:39,790 --> 00:39:44,320
minimum header that<font color="#E5E5E5"> you would need</font><font color="#CCCCCC"> for a</font>

964
00:39:41,830 --> 00:39:47,140
packet sniffer<font color="#E5E5E5"> to pick this up as SSDP</font>

965
00:39:44,320 --> 00:39:49,270
<font color="#E5E5E5">so I've got the field and I'm just using</font>

966
00:39:47,140 --> 00:39:51,520
<font color="#E5E5E5">string fields for</font><font color="#CCCCCC"> requests</font>

967
00:39:49,270 --> 00:39:53,380
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> even adding spaces in manually this</font>

968
00:39:51,520 --> 00:39:58,630
is very simple<font color="#E5E5E5"> and that will also get</font>

969
00:39:53,380 --> 00:40:02,530
picked up as SSDP<font color="#E5E5E5"> and here's that exact</font>

970
00:39:58,630 --> 00:40:04,450
packet<font color="#E5E5E5"> thrown onto the</font><font color="#CCCCCC"> network and</font><font color="#E5E5E5"> you</font>

971
00:40:02,530 --> 00:40:07,150
<font color="#E5E5E5">can see that we've got a lot of space</font>

972
00:40:04,450 --> 00:40:10,870
<font color="#E5E5E5">left</font><font color="#CCCCCC"> to add the typical string values</font>

973
00:40:07,150 --> 00:40:12,100
that we would in SSDP<font color="#CCCCCC"> okay I'm actually</font>

974
00:40:10,870 --> 00:40:12,970
running<font color="#E5E5E5"> out of time</font><font color="#CCCCCC"> so I'm</font><font color="#E5E5E5"> going to wrap</font>

975
00:40:12,100 --> 00:40:17,920
<font color="#E5E5E5">this up</font>

976
00:40:12,970 --> 00:40:19,930
so the<font color="#CCCCCC"> excel dot</font><font color="#E5E5E5"> pi and I didn't have</font>

977
00:40:17,920 --> 00:40:22,600
<font color="#CCCCCC">copied</font><font color="#E5E5E5"> the code in</font><font color="#CCCCCC"> the slide</font><font color="#E5E5E5"> but that</font>

978
00:40:19,930 --> 00:40:25,810
shows the basics on construction

979
00:40:22,600 --> 00:40:27,730
the next topic you'd want<font color="#CCCCCC"> to D into you</font>

980
00:40:25,810 --> 00:40:29,670
can build<font color="#CCCCCC"> anomaly packets but you can</font>

981
00:40:27,730 --> 00:40:31,990
actually build custom<font color="#CCCCCC"> fields</font><font color="#E5E5E5"> and</font>

982
00:40:29,670 --> 00:40:33,970
manipulate the fields as you<font color="#CCCCCC"> need to</font>

983
00:40:31,990 --> 00:40:35,259
<font color="#E5E5E5">based on the format of the field</font>

984
00:40:33,970 --> 00:40:37,089
<font color="#CCCCCC">Sosuke P has very extensive</font>

985
00:40:35,260 --> 00:40:39,340
documentation I'd only be repeating

986
00:40:37,090 --> 00:40:42,210
<font color="#CCCCCC">myself to throw</font><font color="#E5E5E5"> in the slides but</font><font color="#CCCCCC"> you</font>

987
00:40:39,340 --> 00:40:45,610
can actually<font color="#E5E5E5"> construct any amount of</font>

988
00:40:42,210 --> 00:40:47,950
packet architecture<font color="#E5E5E5"> and you can also</font>

989
00:40:45,610 --> 00:40:49,900
identify<font color="#E5E5E5"> things like default behavior so</font>

990
00:40:47,950 --> 00:40:53,259
I<font color="#E5E5E5"> mentioned DNS I automatically assumed</font>

991
00:40:49,900 --> 00:40:55,150
UDP port 53<font color="#E5E5E5"> you can bind the layers and</font>

992
00:40:53,260 --> 00:40:56,400
identify default<font color="#E5E5E5"> behaviors within</font><font color="#CCCCCC"> skippy</font>

993
00:40:55,150 --> 00:41:01,150
as well<font color="#E5E5E5"> so you can build a very</font>

994
00:40:56,400 --> 00:41:02,350
full-featured<font color="#E5E5E5"> extension to the escapee</font>

995
00:41:01,150 --> 00:41:05,230
library

996
00:41:02,350 --> 00:41:08,009
the last piece as I mentioned I'm doing

997
00:41:05,230 --> 00:41:11,050
<font color="#E5E5E5">another workshop</font><font color="#CCCCCC"> today on the esp8266</font>

998
00:41:08,010 --> 00:41:13,510
<font color="#CCCCCC">you can use them for subversive</font><font color="#E5E5E5"> IOT</font>

999
00:41:11,050 --> 00:41:14,770
there are a lot of other<font color="#CCCCCC"> platforms</font><font color="#E5E5E5"> this</font>

1000
00:41:13,510 --> 00:41:16,270
<font color="#E5E5E5">is the one</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> doing the workshop</font>

1001
00:41:14,770 --> 00:41:19,330
because<font color="#E5E5E5"> it's easy to</font><font color="#CCCCCC"> use and really</font>

1002
00:41:16,270 --> 00:41:22,030
<font color="#CCCCCC">cheap but Raspberry Pi zero W I'm really</font>

1003
00:41:19,330 --> 00:41:24,340
excited to dig into<font color="#CCCCCC"> some of</font><font color="#E5E5E5"> those after</font>

1004
00:41:22,030 --> 00:41:27,310
any con<font color="#E5E5E5"> because I've got a new</font><font color="#CCCCCC"> project</font>

1005
00:41:24,340 --> 00:41:29,740
with those<font color="#E5E5E5"> Arduino teensy</font><font color="#CCCCCC"> we've actually</font>

1006
00:41:27,310 --> 00:41:32,680
<font color="#E5E5E5">got a discussion on teensy in</font>

1007
00:41:29,740 --> 00:41:36,040
penetration testing in the the hacking

1008
00:41:32,680 --> 00:41:40,060
village<font color="#CCCCCC"> in a little bit ok I've got five</font>

1009
00:41:36,040 --> 00:41:42,790
<font color="#CCCCCC">minutes</font><font color="#E5E5E5"> left</font><font color="#CCCCCC"> so any questions</font><font color="#E5E5E5"> I just</font>

1010
00:41:40,060 --> 00:41:46,450
<font color="#CCCCCC">flew through</font><font color="#E5E5E5"> that a lot a lot of talking</font>

1011
00:41:42,790 --> 00:41:49,300
<font color="#E5E5E5">in a lot of Python verbage if you guys</font>

1012
00:41:46,450 --> 00:41:51,879
if you<font color="#E5E5E5"> guys I have any questions later</font>

1013
00:41:49,300 --> 00:41:54,400
<font color="#CCCCCC">comment up to the village and feel</font><font color="#E5E5E5"> free</font>

1014
00:41:51,880 --> 00:41:56,500
to<font color="#E5E5E5"> check</font><font color="#CCCCCC"> out all</font><font color="#E5E5E5"> the gear the esp8266</font>

1015
00:41:54,400 --> 00:41:58,840
workshop<font color="#CCCCCC"> is a little more popular than</font>

1016
00:41:56,500 --> 00:42:01,060
we expected<font color="#E5E5E5"> so you may or may</font><font color="#CCCCCC"> not be</font>

1017
00:41:58,840 --> 00:42:01,560
able<font color="#E5E5E5"> to get a kit but if you don't let</font>

1018
00:42:01,060 --> 00:42:03,509
me<font color="#CCCCCC"> know</font>

1019
00:42:01,560 --> 00:42:05,490
I will get you a copy<font color="#E5E5E5"> of the handout and</font>

1020
00:42:03,510 --> 00:42:08,250
I will show<font color="#E5E5E5"> you the parts on Amazon it</font>

1021
00:42:05,490 --> 00:42:10,379
is seriously about<font color="#E5E5E5"> 20 bucks</font><font color="#CCCCCC"> it's very</font>

1022
00:42:08,250 --> 00:42:11,520
cheap very<font color="#E5E5E5"> easy and the handout will</font>

1023
00:42:10,380 --> 00:42:13,800
walk you through<font color="#CCCCCC"> the whole thing</font><font color="#E5E5E5"> because</font>

1024
00:42:11,520 --> 00:42:15,950
you want<font color="#E5E5E5"> to try it out</font><font color="#CCCCCC"> alright thank you</font>

1025
00:42:13,800 --> 00:42:15,950
<font color="#CCCCCC">guys</font>

