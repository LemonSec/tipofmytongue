1
00:00:00,030 --> 00:00:05,460
all right all right hello thank you for

2
00:00:03,750 --> 00:00:06,390
coming to our talk last time of the day

3
00:00:05,460 --> 00:00:08,610
glad you guys are still here

4
00:00:06,390 --> 00:00:09,990
so in this talk we're gonna be sharing

5
00:00:08,610 --> 00:00:11,399
some of the insights that we've built up

6
00:00:09,990 --> 00:00:13,049
from teaching what is consider one of

7
00:00:11,400 --> 00:00:15,299
the most technically challenging topics

8
00:00:13,049 --> 00:00:17,369
in street this is experience that we've

9
00:00:15,299 --> 00:00:21,359
gathered over several years and you guys

10
00:00:17,369 --> 00:00:23,490
are gonna enjoy some stuff that so talk

11
00:00:21,359 --> 00:00:26,699
titled building on these building cyber

12
00:00:23,490 --> 00:00:28,709
armies at scale and so I'm brief intro

13
00:00:26,699 --> 00:00:30,660
my name is Marcus Kazama and this is my

14
00:00:28,710 --> 00:00:33,780
coworker Patrick for now we're

15
00:00:30,660 --> 00:00:34,680
cofounders of a small security research

16
00:00:33,780 --> 00:00:36,540
firm called

17
00:00:34,680 --> 00:00:38,579
rep C systems but also alumni of

18
00:00:36,540 --> 00:00:39,780
Rensselaer Polytechnic Institute just up

19
00:00:38,579 --> 00:00:44,340
the river for those of you that are

20
00:00:39,780 --> 00:00:46,559
familiar local so just a brief silence

21
00:00:44,340 --> 00:00:48,140
RPI RP I've been pumping out some

22
00:00:46,559 --> 00:00:50,129
extremely talented

23
00:00:48,140 --> 00:00:52,440
security-oriented students past couple

24
00:00:50,129 --> 00:00:54,149
years and this presentation helps shed

25
00:00:52,440 --> 00:00:58,019
some light on the storm that's kind of

26
00:00:54,149 --> 00:01:00,539
growing up there so this is a brief

27
00:00:58,020 --> 00:01:02,129
agenda of the talk we'll start off by

28
00:01:00,539 --> 00:01:03,719
defining binary exploitation since it's

29
00:01:02,129 --> 00:01:05,880
a whole basis of the talk and for those

30
00:01:03,719 --> 00:01:07,409
that are not familiar with what we're

31
00:01:05,880 --> 00:01:10,170
gonna be trying to teach essentially

32
00:01:07,409 --> 00:01:11,430
what we've talked and so after that

33
00:01:10,170 --> 00:01:13,820
we're going to cover some traditional

34
00:01:11,430 --> 00:01:16,229
methods for learning binary exploitation

35
00:01:13,820 --> 00:01:17,758
along with some of the more recent

36
00:01:16,229 --> 00:01:20,280
innovations that we've kind of added to

37
00:01:17,759 --> 00:01:21,540
this space will also have any

38
00:01:20,280 --> 00:01:23,009
interactive demo for those of you that

39
00:01:21,540 --> 00:01:25,890
I've run a clock off if you're

40
00:01:23,009 --> 00:01:27,360
interested to play around with it and

41
00:01:25,890 --> 00:01:28,049
that's going to be in the third session

42
00:01:27,360 --> 00:01:32,640
of talk here

43
00:01:28,049 --> 00:01:35,280
so moving on a binary presentation so

44
00:01:32,640 --> 00:01:36,720
yes since this is the basis of the talk

45
00:01:35,280 --> 00:01:38,790
we'd like to write some backgrounds

46
00:01:36,720 --> 00:01:41,009
ensure everyone is on the same page and

47
00:01:38,790 --> 00:01:45,180
you have some idea what this turn

48
00:01:41,009 --> 00:01:46,890
compasses so what's a binary you're

49
00:01:45,180 --> 00:01:49,140
gonna you're gonna hear us use this turn

50
00:01:46,890 --> 00:01:51,210
throughout the whole talk and in the

51
00:01:49,140 --> 00:01:54,090
context of this talk it's a executable

52
00:01:51,210 --> 00:01:56,429
file such as in AFC an elf hamako

53
00:01:54,090 --> 00:01:59,070
or any other kind of code container that

54
00:01:56,430 --> 00:02:01,229
runs on a machine to be your phone it

55
00:01:59,070 --> 00:02:04,469
could be a laptop whatever

56
00:02:01,229 --> 00:02:07,079
competing device that has a CPM a for

57
00:02:04,469 --> 00:02:08,459
you on windows binary some kind of

58
00:02:07,079 --> 00:02:10,348
something like this this is just a file

59
00:02:08,459 --> 00:02:11,760
listing of your system 32 directory

60
00:02:10,348 --> 00:02:12,799
where most of your operating system

61
00:02:11,760 --> 00:02:16,019
China besides

62
00:02:12,800 --> 00:02:19,410
nipsey's DLL files those are libraries

63
00:02:16,019 --> 00:02:20,849
stuff like that Linux users I'm sure

64
00:02:19,410 --> 00:02:23,940
you're familiar where binaries are there

65
00:02:20,849 --> 00:02:25,709
all over the place in directory and

66
00:02:23,940 --> 00:02:27,750
inside a better and higher level kind of

67
00:02:25,709 --> 00:02:30,750
general example your web browser is what

68
00:02:27,750 --> 00:02:32,489
you might call an application and every

69
00:02:30,750 --> 00:02:34,110
application is often made up of many

70
00:02:32,489 --> 00:02:38,549
binaries working together on your system

71
00:02:34,110 --> 00:02:39,890
to do and so save one binary in a

72
00:02:38,549 --> 00:02:42,420
browser could be responsible for

73
00:02:39,890 --> 00:02:45,179
executing JavaScript code another could

74
00:02:42,420 --> 00:02:47,488
be responsible for a rendering that HTML

75
00:02:45,180 --> 00:02:49,019
that is the web page or communicating

76
00:02:47,489 --> 00:02:52,980
with websites over the network stuff

77
00:02:49,019 --> 00:02:53,700
like that and you can take your phone as

78
00:02:52,980 --> 00:02:55,349
another example

79
00:02:53,700 --> 00:02:56,429
although supple apps on your home screen

80
00:02:55,349 --> 00:02:58,980
and if you download from the iTunes

81
00:02:56,430 --> 00:03:03,540
Store those are all apps backed by

82
00:02:58,980 --> 00:03:05,399
multiple binaries potentially and yeah

83
00:03:03,540 --> 00:03:08,760
so Angry Birds for tonight iMessage

84
00:03:05,400 --> 00:03:10,590
signal all of these are binaries for all

85
00:03:08,760 --> 00:03:12,060
applications essentially even their

86
00:03:10,590 --> 00:03:12,389
operating system on your computer or

87
00:03:12,060 --> 00:03:15,480
your phone

88
00:03:12,389 --> 00:03:16,859
iOS it's just a general sense let's just

89
00:03:15,480 --> 00:03:18,959
say they're all made up of lots of

90
00:03:16,859 --> 00:03:24,180
binaries work together

91
00:03:18,959 --> 00:03:26,010
I mean contain code so in actually since

92
00:03:24,180 --> 00:03:29,639
we know what a binary is we can kind of

93
00:03:26,010 --> 00:03:31,200
define an exploit and so when we say

94
00:03:29,639 --> 00:03:32,880
exploit in this talk we're going to be

95
00:03:31,200 --> 00:03:36,959
talking about specially crafted data

96
00:03:32,880 --> 00:03:39,420
that employs vulnerabilities aka CVS to

97
00:03:36,959 --> 00:03:41,549
force a binary or some code into doing

98
00:03:39,420 --> 00:03:44,790
something that was never intended by the

99
00:03:41,549 --> 00:03:46,670
original programmer all right and so

100
00:03:44,790 --> 00:03:51,150
something I'm intended is a very broad

101
00:03:46,670 --> 00:03:52,349
term and that's because I mean I guess

102
00:03:51,150 --> 00:03:54,359
yeah there's a million different things

103
00:03:52,349 --> 00:03:55,560
that could go wrong with your program or

104
00:03:54,359 --> 00:03:58,709
it could behave in ways that you don't

105
00:03:55,560 --> 00:04:01,139
expect and in terms of binary

106
00:03:58,709 --> 00:04:03,269
exploitation in the most general sense

107
00:04:01,139 --> 00:04:05,400
in exploit is used to gain access to

108
00:04:03,269 --> 00:04:08,160
computer systems through these enigmatic

109
00:04:05,400 --> 00:04:10,140
doors that are not meant to exist so

110
00:04:08,160 --> 00:04:12,269
they're kind of like skeleton keys or

111
00:04:10,140 --> 00:04:14,559
technology they get you into systems in

112
00:04:12,269 --> 00:04:16,959
ways that most people would think

113
00:04:14,560 --> 00:04:18,790
possible essentially and almost

114
00:04:16,959 --> 00:04:21,040
exclusively truly novel exploits which

115
00:04:18,790 --> 00:04:22,810
are generally called zero days are used

116
00:04:21,040 --> 00:04:24,610
around the world by nation states our

117
00:04:22,810 --> 00:04:28,000
intelligence communities in the gameís

118
00:04:24,610 --> 00:04:29,200
flies right so the right chain of

119
00:04:28,000 --> 00:04:31,540
exploits going to be used to break into

120
00:04:29,200 --> 00:04:33,400
virtually any device or a system to

121
00:04:31,540 --> 00:04:35,919
steal sensitive information it's all

122
00:04:33,400 --> 00:04:39,460
persistent power

123
00:04:35,919 --> 00:04:41,650
and so I've given you a great example of

124
00:04:39,460 --> 00:04:45,310
exploits in action kind of happened in

125
00:04:41,650 --> 00:04:48,310
2016 summer 2016 almost two years to the

126
00:04:45,310 --> 00:04:50,020
date August where an iOS exploit was

127
00:04:48,310 --> 00:04:51,639
discovered in the wild by group of

128
00:04:50,020 --> 00:04:54,130
security researchers and this was the

129
00:04:51,639 --> 00:04:57,160
first time then iOS Escalade was

130
00:04:54,130 --> 00:04:57,880
actually found in the wild which is kind

131
00:04:57,160 --> 00:05:00,340
of a big deal

132
00:04:57,880 --> 00:05:01,840
and so of a state-sponsored actor was

133
00:05:00,340 --> 00:05:03,820
using this escalate to target a human

134
00:05:01,840 --> 00:05:08,380
rights activist called alpha bun cert in

135
00:05:03,820 --> 00:05:09,669
the UAE and this is kind of what it

136
00:05:08,380 --> 00:05:12,610
looked like when I got the word his home

137
00:05:09,669 --> 00:05:14,500
and so by clicking the link that was

138
00:05:12,610 --> 00:05:17,260
texted to him so you can kind of see

139
00:05:14,500 --> 00:05:19,060
some links on here in two separate

140
00:05:17,260 --> 00:05:20,950
messages so they tried twice end of clip

141
00:05:19,060 --> 00:05:23,289
that's basically and he didn't like

142
00:05:20,950 --> 00:05:24,849
either time but if you're a cyclist an

143
00:05:23,289 --> 00:05:26,770
exploit would have broken into his phone

144
00:05:24,850 --> 00:05:28,390
giving the attacker incivility to steal

145
00:05:26,770 --> 00:05:30,810
all his text messages his emails

146
00:05:28,390 --> 00:05:33,130
contacts pictures Facebook signal naming

147
00:05:30,810 --> 00:05:34,960
and not only that but they could not

148
00:05:33,130 --> 00:05:36,490
attract him 24/7 they could turn on this

149
00:05:34,960 --> 00:05:38,409
Mike dick to turn on this video or Sarah

150
00:05:36,490 --> 00:05:39,940
and the reason you need not to look at

151
00:05:38,410 --> 00:05:42,760
these links is he has been targeted by

152
00:05:39,940 --> 00:05:45,180
this su under attack of the passage so

153
00:05:42,760 --> 00:05:47,680
he knew it afforded this time on to some

154
00:05:45,180 --> 00:05:50,200
very experienced researchers who were

155
00:05:47,680 --> 00:05:52,810
able to actually capture this in

156
00:05:50,200 --> 00:05:54,180
documented and so just think about this

157
00:05:52,810 --> 00:05:56,560
though someone breaking in your bone

158
00:05:54,180 --> 00:05:58,000
bones are our most personal computing

159
00:05:56,560 --> 00:05:59,740
device especially in the modern age

160
00:05:58,000 --> 00:06:01,780
so if you feel uncomfortable with your

161
00:05:59,740 --> 00:06:04,000
significant other ever digging around in

162
00:06:01,780 --> 00:06:05,500
your phone let's say you can bet you

163
00:06:04,000 --> 00:06:09,100
don't want an intelligence agency in

164
00:06:05,500 --> 00:06:10,870
their unit and so we don't even know the

165
00:06:09,100 --> 00:06:13,060
extent of our own secrets that you have

166
00:06:10,870 --> 00:06:14,320
in our devices right you're kind of may

167
00:06:13,060 --> 00:06:15,789
be worried if so much shuffling through

168
00:06:14,320 --> 00:06:19,960
your phone you don't know what's in

169
00:06:15,789 --> 00:06:21,550
there and so from the perspective of

170
00:06:19,960 --> 00:06:23,799
intelligence it should be no surprise

171
00:06:21,550 --> 00:06:25,630
that there's a lot of money in building

172
00:06:23,800 --> 00:06:27,030
these types of capabilities so this is

173
00:06:25,630 --> 00:06:31,000
kind of

174
00:06:27,030 --> 00:06:34,539
almost like a sell to us at this price

175
00:06:31,000 --> 00:06:37,060
by a independent exploit broker and so

176
00:06:34,540 --> 00:06:38,350
you can see in iOS Safari on our CD

177
00:06:37,060 --> 00:06:41,620
which means a remote code execution

178
00:06:38,350 --> 00:06:44,320
against the browser they're paying

179
00:06:41,620 --> 00:06:46,810
upwards of two million dollars two to

180
00:06:44,320 --> 00:06:48,700
three million dollars to get that kind

181
00:06:46,810 --> 00:06:49,990
of capability I think it's very next

182
00:06:48,700 --> 00:06:51,190
play broker so they're actually going to

183
00:06:49,990 --> 00:06:54,010
turn around and start selling this to

184
00:06:51,190 --> 00:06:56,680
other people for millions more dollars

185
00:06:54,010 --> 00:06:58,240
I mean iOS exploit some range up to

186
00:06:56,680 --> 00:07:01,030
potentially ten million dollars on black

187
00:06:58,240 --> 00:07:03,790
market because imagine that being able

188
00:07:01,030 --> 00:07:05,710
to break into someone's phone like

189
00:07:03,790 --> 00:07:07,900
within one suspecting from anyone the

190
00:07:05,710 --> 00:07:10,359
world that's a huge amount of

191
00:07:07,900 --> 00:07:16,960
intelligence you can gather a lot of

192
00:07:10,360 --> 00:07:19,120
damage you can do to individuals or so

193
00:07:16,960 --> 00:07:20,289
another bigamous incident you may have

194
00:07:19,120 --> 00:07:22,270
heard about some years back with stuff

195
00:07:20,290 --> 00:07:24,640
snap and so scoffs that was a

196
00:07:22,270 --> 00:07:27,340
state-sponsored piece of malware which

197
00:07:24,640 --> 00:07:29,890
was used to destroy centrifuges in

198
00:07:27,340 --> 00:07:32,560
Iran's nuclear enrichment program so

199
00:07:29,890 --> 00:07:35,469
this was a joint us Israeli program

200
00:07:32,560 --> 00:07:38,430
allegedly to try to essentially use

201
00:07:35,470 --> 00:07:40,360
hyper warfare to do connect damage

202
00:07:38,430 --> 00:07:42,550
instead of to get deep enough into the

203
00:07:40,360 --> 00:07:44,260
facility steps that employed at least

204
00:07:42,550 --> 00:07:46,300
four different zero day exploits to gain

205
00:07:44,260 --> 00:07:48,190
unauthorized access to Windows computers

206
00:07:46,300 --> 00:07:51,700
with the goal of causing yeah

207
00:07:48,190 --> 00:07:54,250
destructive damage to these giant gas

208
00:07:51,700 --> 00:07:56,650
cylinders essentially deep within a

209
00:07:54,250 --> 00:07:58,090
nuclear facility in Iran all from you

210
00:07:56,650 --> 00:08:04,450
know behind a keyboard somewhere in the

211
00:07:58,090 --> 00:08:05,679
US so another big one person yeah many

212
00:08:04,450 --> 00:08:07,870
of you have probably heard about eternal

213
00:08:05,680 --> 00:08:10,180
blue which happened about a year ago so

214
00:08:07,870 --> 00:08:13,060
that was an epic exploit that leaked

215
00:08:10,180 --> 00:08:14,530
from the NSA 2017 it's estimated it cost

216
00:08:13,060 --> 00:08:17,140
close to twenty billion dollars and

217
00:08:14,530 --> 00:08:18,520
damage so far and was also honest table

218
00:08:17,140 --> 00:08:21,520
closest we've come to seeing a nuclear

219
00:08:18,520 --> 00:08:23,200
bomb detonate on the internet so all

220
00:08:21,520 --> 00:08:25,740
this shows that exploits are analogous

221
00:08:23,200 --> 00:08:30,030
to cyber weapons where sagres v

222
00:08:25,740 --> 00:08:32,760
or so teaching individuals how to make

223
00:08:30,030 --> 00:08:36,329
these unique capabilities has started to

224
00:08:32,760 --> 00:08:40,020
become more of a matter in crisis with

225
00:08:36,330 --> 00:08:42,180
national security and yeah they're

226
00:08:40,020 --> 00:08:45,030
actually calling these exploits cyber

227
00:08:42,179 --> 00:08:47,699
weapons these are starting to be used in

228
00:08:45,030 --> 00:08:49,530
war effectively and so in 2017 out

229
00:08:47,700 --> 00:08:51,570
stainless the former CEO so basically

230
00:08:49,530 --> 00:08:56,189
who's now going to be a professor at CMU

231
00:08:51,570 --> 00:08:58,620
or Stanford is this pyramid this slide

232
00:08:56,190 --> 00:09:00,330
specifically this determines is talk to

233
00:08:58,620 --> 00:09:03,420
visualize the categories of traditional

234
00:09:00,330 --> 00:09:05,220
info set at the apex of this fields it's

235
00:09:03,420 --> 00:09:06,300
a tiny pool of individuals at the very

236
00:09:05,220 --> 00:09:08,760
top they don't even have their own

237
00:09:06,300 --> 00:09:11,819
section it's literally a vertex at the

238
00:09:08,760 --> 00:09:13,530
very top and this small pool of

239
00:09:11,820 --> 00:09:15,030
individuals are the ones that are

240
00:09:13,530 --> 00:09:16,709
actually qualified to develop the

241
00:09:15,030 --> 00:09:19,050
caliber of exploits that we've seized in

242
00:09:16,710 --> 00:09:22,230
the previous slide sir it's a very very

243
00:09:19,050 --> 00:09:24,439
tiny portion of the field and so this is

244
00:09:22,230 --> 00:09:26,610
a part due to the immense amount of like

245
00:09:24,440 --> 00:09:29,460
prerequisite knowledge that's required

246
00:09:26,610 --> 00:09:31,950
to produce an exploit but also the

247
00:09:29,460 --> 00:09:36,960
rising complexity of writing these

248
00:09:31,950 --> 00:09:38,520
really unique technologies so but one

249
00:09:36,960 --> 00:09:40,650
thing to keep in mind is that this

250
00:09:38,520 --> 00:09:43,290
skills and craftsmanship required to

251
00:09:40,650 --> 00:09:45,300
make these capabilities they're relevant

252
00:09:43,290 --> 00:09:47,459
far beyond the tradecraft of

253
00:09:45,300 --> 00:09:49,469
exploitation but you really have to know

254
00:09:47,460 --> 00:09:50,850
the system in and out and you have to

255
00:09:49,470 --> 00:09:52,830
know these binaries and you're trying to

256
00:09:50,850 --> 00:09:56,180
exploit better than the author's better

257
00:09:52,830 --> 00:09:58,560
than anyone in the world basically so uh

258
00:09:56,180 --> 00:09:59,969
I'm gonna hang over to Patrick and let

259
00:09:58,560 --> 00:10:07,500
him talk about some of the existing

260
00:09:59,970 --> 00:10:10,410
excellent education and yeah all right

261
00:10:07,500 --> 00:10:12,870
so I know we reviewed most of subjects

262
00:10:10,410 --> 00:10:15,360
on the same page we can move on to

263
00:10:12,870 --> 00:10:16,950
discussing how binary exploitation

264
00:10:15,360 --> 00:10:20,010
usually been learned by his

265
00:10:16,950 --> 00:10:22,950
practitioners so as a general rule this

266
00:10:20,010 --> 00:10:26,700
is a very informal field there's no real

267
00:10:22,950 --> 00:10:28,800
standard path available towards learning

268
00:10:26,700 --> 00:10:29,970
binary exploitation you can't get a

269
00:10:28,800 --> 00:10:32,849
degree in this stuff there's no

270
00:10:29,970 --> 00:10:35,490
certifications that really cover this at

271
00:10:32,850 --> 00:10:38,040
least not going to depth necessary

272
00:10:35,490 --> 00:10:40,320
attachment targeted modern applications

273
00:10:38,040 --> 00:10:42,060
and so there's all of that most

274
00:10:40,320 --> 00:10:43,860
vulnerable researchers are either

275
00:10:42,060 --> 00:10:45,869
self-taught or they've been mentored by

276
00:10:43,860 --> 00:10:48,779
the co-workers over the years and

277
00:10:45,870 --> 00:10:51,300
throughout their career and so today a

278
00:10:48,779 --> 00:10:54,149
really complex topic this diagram it

279
00:10:51,300 --> 00:10:55,920
shows kind of a broad hierarchy all the

280
00:10:54,149 --> 00:10:58,160
concepts and skills you need to have

281
00:10:55,920 --> 00:11:01,399
before you can start independently

282
00:10:58,160 --> 00:11:04,290
performing modern vulnerability research

283
00:11:01,399 --> 00:11:07,140
so the first fourth the third of this

284
00:11:04,290 --> 00:11:08,849
diagram kind of shows the basic multiple

285
00:11:07,140 --> 00:11:10,290
concepts you need to know so you need to

286
00:11:08,850 --> 00:11:12,060
know everything from assembly up through

287
00:11:10,290 --> 00:11:15,449
the operating system memory is laid out

288
00:11:12,060 --> 00:11:16,649
those kinds of things and once you

289
00:11:15,450 --> 00:11:18,839
finally have an understanding of all

290
00:11:16,649 --> 00:11:21,269
those you finally start to get into the

291
00:11:18,839 --> 00:11:23,720
kind of basics of exploitation which is

292
00:11:21,269 --> 00:11:25,769
sort of like stack smashing shell coding

293
00:11:23,720 --> 00:11:27,570
and then once you learn of those you can

294
00:11:25,769 --> 00:11:31,079
move on to modern mitigation techniques

295
00:11:27,570 --> 00:11:32,699
and water and exploitation techniques so

296
00:11:31,079 --> 00:11:33,510
how do people start learning this kind

297
00:11:32,699 --> 00:11:35,939
of stuff

298
00:11:33,510 --> 00:11:39,930
well one of those common ways is through

299
00:11:35,940 --> 00:11:41,550
war games and war games are series of

300
00:11:39,930 --> 00:11:43,890
computer security challenges that are

301
00:11:41,550 --> 00:11:49,339
meant to hone and refine ones technical

302
00:11:43,890 --> 00:11:52,649
skills so here's some examples

303
00:11:49,339 --> 00:11:55,800
they are semesters that over the wire

304
00:11:52,649 --> 00:11:58,440
and these are kind of merged in the past

305
00:11:55,800 --> 00:12:00,089
couple years as sort of the standard of

306
00:11:58,440 --> 00:12:02,310
somebody you would ask me or ask

307
00:12:00,089 --> 00:12:03,750
somebody else who's kind of deep into

308
00:12:02,310 --> 00:12:05,489
this field where do I get started at a

309
00:12:03,750 --> 00:12:10,050
point important these websites it's a

310
00:12:05,490 --> 00:12:12,720
Jones so they look kinda like this their

311
00:12:10,050 --> 00:12:14,939
structure usually based around levels so

312
00:12:12,720 --> 00:12:17,970
you can start at level zero you can

313
00:12:14,940 --> 00:12:23,370
solve that you get one solve that to

314
00:12:17,970 --> 00:12:24,810
song basically the progression is like

315
00:12:23,370 --> 00:12:26,610
you get below you would find a challenge

316
00:12:24,810 --> 00:12:28,529
that's difficult for your level of

317
00:12:26,610 --> 00:12:30,060
expertise you'd solve it and you repeat

318
00:12:28,529 --> 00:12:37,290
that over and over again until you come

319
00:12:30,060 --> 00:12:39,869
back it so we got to CES these are our

320
00:12:37,290 --> 00:12:42,930
summative organs but these are typically

321
00:12:39,870 --> 00:12:44,399
in a time box and team context so many

322
00:12:42,930 --> 00:12:46,020
of you guys would probably some of you

323
00:12:44,399 --> 00:12:49,709
able to see Jeff's there's one going on

324
00:12:46,020 --> 00:12:51,360
upstairs right now and these are been

325
00:12:49,709 --> 00:12:52,619
getting a lot more popular the past few

326
00:12:51,360 --> 00:12:54,570
years we're getting a lot more attention

327
00:12:52,620 --> 00:12:57,060
because they are a really valuable

328
00:12:54,570 --> 00:13:00,080
teaching tool so what we're looking at

329
00:12:57,060 --> 00:13:02,790
here on the slide is actually just a

330
00:13:00,080 --> 00:13:05,100
kind of a global informal leader board

331
00:13:02,790 --> 00:13:07,649
called CTF time relative teams across

332
00:13:05,100 --> 00:13:12,860
the world kind of gather and see how

333
00:13:07,649 --> 00:13:16,380
they do so if you haven't heard of CTF

334
00:13:12,860 --> 00:13:18,029
something like this it'll have a wide

335
00:13:16,380 --> 00:13:20,970
selection of challenges from across

336
00:13:18,029 --> 00:13:22,709
multiple domains and security and try to

337
00:13:20,970 --> 00:13:26,010
solve them in order to get points for

338
00:13:22,709 --> 00:13:28,109
your team so we're interested in finding

339
00:13:26,010 --> 00:13:29,939
expectations and so most of the stuff we

340
00:13:28,110 --> 00:13:31,950
tend to focus on is that they're inverse

341
00:13:29,940 --> 00:13:33,450
engineering which is tearing apart

342
00:13:31,950 --> 00:13:35,279
boundaries and understanding how they

343
00:13:33,450 --> 00:13:37,980
work without source code and

344
00:13:35,279 --> 00:13:42,300
exploitation which is actually writing

345
00:13:37,980 --> 00:13:43,709
exploits and taking control this is kind

346
00:13:42,300 --> 00:13:46,140
of what it would look like if you were

347
00:13:43,709 --> 00:13:48,359
to actually write an exploit so this is

348
00:13:46,140 --> 00:13:52,110
a picture from the CTF we did a few

349
00:13:48,360 --> 00:13:54,360
years ago where we had given a binary we

350
00:13:52,110 --> 00:13:56,970
found some vulnerabilities we exploited

351
00:13:54,360 --> 00:14:00,240
it and we're gonna run our own code on a

352
00:13:56,970 --> 00:14:01,920
remote server that was run using that

353
00:14:00,240 --> 00:14:06,029
you could dump a bunch of memory from it

354
00:14:01,920 --> 00:14:11,339
and then we can find this we find this

355
00:14:06,029 --> 00:14:12,959
flat that's right here so in the context

356
00:14:11,339 --> 00:14:14,820
with CTF you're trying to steal these

357
00:14:12,959 --> 00:14:16,739
flags and you submit these you get

358
00:14:14,820 --> 00:14:19,079
points for your team and that's how you

359
00:14:16,740 --> 00:14:21,630
prove it that you found this one of

360
00:14:19,079 --> 00:14:23,939
these bindings you know it to the real

361
00:14:21,630 --> 00:14:26,820
world is this would be something like it

362
00:14:23,940 --> 00:14:29,250
password a user name the coordinates

363
00:14:26,820 --> 00:14:33,529
phone numbers basically sensitive data

364
00:14:29,250 --> 00:14:36,480
that you force the program to give up

365
00:14:33,529 --> 00:14:37,650
and so if you have some more games are a

366
00:14:36,480 --> 00:14:39,930
great resource

367
00:14:37,650 --> 00:14:42,860
they're kind of fun and then force you

368
00:14:39,930 --> 00:14:45,599
to learn a whole bunch of new things

369
00:14:42,860 --> 00:14:47,490
typically we need to start a CTF

370
00:14:45,600 --> 00:14:48,990
challenge you don't really know what's

371
00:14:47,490 --> 00:14:52,290
gonna be expected of you to solve it and

372
00:14:48,990 --> 00:14:54,240
as I read some of that you read dozens

373
00:14:52,290 --> 00:14:57,930
and dozens of articles blog posts

374
00:14:54,240 --> 00:14:59,850
probably talking to multiple people all

375
00:14:57,930 --> 00:15:01,829
in search of that one tiny bit of

376
00:14:59,850 --> 00:15:04,320
information that will finally give you a

377
00:15:01,829 --> 00:15:07,140
great view and kind of show you the way

378
00:15:04,320 --> 00:15:09,060
towards solving the problem the other

379
00:15:07,140 --> 00:15:11,130
side of that of course as you can see in

380
00:15:09,060 --> 00:15:12,719
the slide is that the vast majority of

381
00:15:11,130 --> 00:15:16,980
information you find is not extra

382
00:15:12,720 --> 00:15:19,020
development and so you might spend 6 8

383
00:15:16,980 --> 00:15:20,399
12 hours working on a challenge that if

384
00:15:19,020 --> 00:15:25,110
you the crips and knowledge of the take

385
00:15:20,399 --> 00:15:27,209
you maybe only two hours and so take a

386
00:15:25,110 --> 00:15:28,890
look at how that process goes may

387
00:15:27,209 --> 00:15:34,469
instruct a sort of comment on the

388
00:15:28,890 --> 00:15:36,089
difficulty curve associated with it

389
00:15:34,470 --> 00:15:39,089
looks kinda like this or that's usually

390
00:15:36,089 --> 00:15:41,149
how we like to draw it at the very

391
00:15:39,089 --> 00:15:43,860
bottom we have things like C and C++

392
00:15:41,149 --> 00:15:46,820
need to learn what pointers are and how

393
00:15:43,860 --> 00:15:49,740
they work in the binders are they work

394
00:15:46,820 --> 00:15:51,649
need to learn some of the language for

395
00:15:49,740 --> 00:15:54,600
whatever architecture you're targeting

396
00:15:51,649 --> 00:15:57,930
you join your tools so GB you're

397
00:15:54,600 --> 00:16:01,680
buggered assembler needs memory layout

398
00:15:57,930 --> 00:16:03,319
and these are all or these at least tend

399
00:16:01,680 --> 00:16:06,209
to be extremely non-intuitive

400
00:16:03,320 --> 00:16:08,339
topics for most people and that's true

401
00:16:06,209 --> 00:16:11,369
not only for the general public but also

402
00:16:08,339 --> 00:16:13,020
for people who already have potentially

403
00:16:11,370 --> 00:16:16,649
significant computer science experience

404
00:16:13,020 --> 00:16:17,710
and as a result of that that's why this

405
00:16:16,649 --> 00:16:19,870
curve

406
00:16:17,710 --> 00:16:22,540
here at the very beginning is extremely

407
00:16:19,870 --> 00:16:24,190
see it's almost vertical you're

408
00:16:22,540 --> 00:16:26,500
basically trying to learn tons of really

409
00:16:24,190 --> 00:16:30,340
non-intuitive things very quickly just

410
00:16:26,500 --> 00:16:32,680
so you can start to contribute so we get

411
00:16:30,340 --> 00:16:34,330
there let's say you've dedicated to this

412
00:16:32,680 --> 00:16:36,699
you take the time to learn these topics

413
00:16:34,330 --> 00:16:39,220
and you start actually getting into more

414
00:16:36,700 --> 00:16:41,440
traditional exploitation concepts so you

415
00:16:39,220 --> 00:16:46,420
got stack smashing shell coding maybe

416
00:16:41,440 --> 00:16:48,730
your cellular what Rob and so either

417
00:16:46,420 --> 00:16:50,829
still very unfamiliar there's still kind

418
00:16:48,730 --> 00:16:53,110
of weird but we just start to see this

419
00:16:50,830 --> 00:16:55,960
curve like not really being as very

420
00:16:53,110 --> 00:16:57,450
blended one these topics and the

421
00:16:55,960 --> 00:16:59,860
knowledge of higher to get around them

422
00:16:57,450 --> 00:17:01,360
kind of builds and naturally upon the

423
00:16:59,860 --> 00:17:05,980
framework that you've gotten from the

424
00:17:01,360 --> 00:17:08,620
first five or six points once you've

425
00:17:05,980 --> 00:17:10,209
mastered those and other stuff SLR deep

426
00:17:08,619 --> 00:17:13,060
explanation use after three

427
00:17:10,209 --> 00:17:17,200
vulnerabilities race conditions kernel

428
00:17:13,060 --> 00:17:19,450
other stuff this is the kind of thing

429
00:17:17,200 --> 00:17:21,490
that starts being relevant to modern

430
00:17:19,450 --> 00:17:23,170
context and modern Arni's they're still

431
00:17:21,490 --> 00:17:24,880
very difficult but at this point you've

432
00:17:23,170 --> 00:17:28,840
learned enough and you know enough kind

433
00:17:24,880 --> 00:17:31,240
of incrementally learn on your own and

434
00:17:28,840 --> 00:17:33,490
so that curve is a definitely reality

435
00:17:31,240 --> 00:17:35,950
but it also represented a big problem

436
00:17:33,490 --> 00:17:38,170
for us when we were we're meeting our

437
00:17:35,950 --> 00:17:39,910
key I said and the reason for that is

438
00:17:38,170 --> 00:17:41,950
once people start getting really good at

439
00:17:39,910 --> 00:17:43,440
this stuff it's time to graduate and if

440
00:17:41,950 --> 00:17:46,960
you don't want to compete with the clock

441
00:17:43,440 --> 00:17:48,670
and so our first attempt at kind of

442
00:17:46,960 --> 00:17:50,530
trying to obtain that learning curve was

443
00:17:48,670 --> 00:17:54,460
a class called water behind explanation

444
00:17:50,530 --> 00:17:56,740
that we taught in the spring of 2015 and

445
00:17:54,460 --> 00:17:59,740
so what we really wanted to do was to

446
00:17:56,740 --> 00:18:01,390
give a fairly large group students the

447
00:17:59,740 --> 00:18:03,400
ability to tear through binaries

448
00:18:01,390 --> 00:18:04,960
understand them discover vulnerabilities

449
00:18:03,400 --> 00:18:06,730
and then ultimately exploit those

450
00:18:04,960 --> 00:18:08,760
vulnerabilities so that they would be

451
00:18:06,730 --> 00:18:13,820
able to compete effectively with us

452
00:18:08,760 --> 00:18:16,500
dirty CBS and you can think of us as

453
00:18:13,820 --> 00:18:18,480
trying to guide a large group of

454
00:18:16,500 --> 00:18:20,640
students through this maze of the

455
00:18:18,480 --> 00:18:23,520
expectation skill tree on a single

456
00:18:20,640 --> 00:18:25,770
semester so probably coined with some of

457
00:18:23,520 --> 00:18:28,139
this knowledge like CA c++ just by

458
00:18:25,770 --> 00:18:29,370
coming through Coursera yeah but then we

459
00:18:28,140 --> 00:18:30,990
have to teach so I'm about level

460
00:18:29,370 --> 00:18:33,120
concepts like behind yours operating

461
00:18:30,990 --> 00:18:36,660
systems pointers to suddenly memory

462
00:18:33,120 --> 00:18:39,479
layout all the different tools and then

463
00:18:36,660 --> 00:18:43,040
finally the basics of the modern

464
00:18:39,480 --> 00:18:45,780
exploitation and so we have nope that

465
00:18:43,040 --> 00:18:47,550
you devotes to take all these topics

466
00:18:45,780 --> 00:18:49,350
condense them down into a single

467
00:18:47,550 --> 00:18:54,629
semester but still keep it class barely

468
00:18:49,350 --> 00:18:56,790
completely and so this is just during

469
00:18:54,630 --> 00:18:58,890
that first iteration and there's a few

470
00:18:56,790 --> 00:19:03,270
interesting things about the class that

471
00:18:58,890 --> 00:19:05,160
aren't immediately obvious so first off

472
00:19:03,270 --> 00:19:07,350
this was a very large group people for

473
00:19:05,160 --> 00:19:09,600
such a teenager subject we had I want to

474
00:19:07,350 --> 00:19:12,179
say about 50 people taking this class

475
00:19:09,600 --> 00:19:15,120
and we got extremely very demographics

476
00:19:12,180 --> 00:19:18,420
so this was a 4000 level course which is

477
00:19:15,120 --> 00:19:21,239
RTI responds roughly to a senior level

478
00:19:18,420 --> 00:19:22,860
course and we had people from basically

479
00:19:21,240 --> 00:19:24,110
in the entire spectrum so we had rest

480
00:19:22,860 --> 00:19:27,840
for the sophomores juniors seniors

481
00:19:24,110 --> 00:19:29,490
thinking it we actually had it two or

482
00:19:27,840 --> 00:19:31,490
three graduate students that sat in and

483
00:19:29,490 --> 00:19:35,940
I'm also completed the course and we had

484
00:19:31,490 --> 00:19:37,830
I want to say maybe three or four ROTC

485
00:19:35,940 --> 00:19:42,360
members just the Reserve Officer

486
00:19:37,830 --> 00:19:44,419
Training Corps but this is all basically

487
00:19:42,360 --> 00:19:47,399
building up to the point this is a

488
00:19:44,420 --> 00:19:50,730
larger people that we can teach this

489
00:19:47,400 --> 00:19:52,140
very nature selling soup and so we got

490
00:19:50,730 --> 00:19:54,060
the class hopefully that was very

491
00:19:52,140 --> 00:19:56,220
successful you're seeing really good

492
00:19:54,060 --> 00:19:57,780
feedback from students and many of those

493
00:19:56,220 --> 00:20:00,180
dudes who took this class ended up being

494
00:19:57,780 --> 00:20:05,220
corps members and also future leaders of

495
00:20:00,180 --> 00:20:08,130
our Casa we also have open sourced us

496
00:20:05,220 --> 00:20:10,480
and became extremely popular a resource

497
00:20:08,130 --> 00:20:13,600
by the time security community

498
00:20:10,480 --> 00:20:17,350
that we've got about 2600 stars that

499
00:20:13,600 --> 00:20:18,820
give them which is a pretty high much

500
00:20:17,350 --> 00:20:22,629
higher than we expected before any topic

501
00:20:18,820 --> 00:20:25,480
that's this niche within security and so

502
00:20:22,630 --> 00:20:27,520
of course is structured mostly as a

503
00:20:25,480 --> 00:20:28,900
traditional class might be with the

504
00:20:27,520 --> 00:20:33,639
exception that we actually built our own

505
00:20:28,900 --> 00:20:36,669
warning which would basically sub in for

506
00:20:33,640 --> 00:20:38,919
labs and home runs so you'd get two

507
00:20:36,669 --> 00:20:41,140
lectures a week and that's a log on to

508
00:20:38,919 --> 00:20:42,549
our board game and solve a series of

509
00:20:41,140 --> 00:20:46,419
challenges in order to get credit for

510
00:20:42,549 --> 00:20:49,360
that particular week so we did consider

511
00:20:46,419 --> 00:20:51,400
the class a huge success but we knew

512
00:20:49,360 --> 00:20:53,590
there also a ton of ways that we could

513
00:20:51,400 --> 00:20:55,000
have improved it further so the next

514
00:20:53,590 --> 00:20:57,280
couple slides I'm going to go through

515
00:20:55,000 --> 00:20:58,840
about half the syllabus and just point

516
00:20:57,280 --> 00:21:02,799
out some of the pain points that we

517
00:20:58,840 --> 00:21:04,840
encounter a lot easier and so here you

518
00:21:02,799 --> 00:21:07,059
have the first real lab right after the

519
00:21:04,840 --> 00:21:08,889
syllabus interview we're trying to teach

520
00:21:07,059 --> 00:21:10,360
go reverse engineering and to do that we

521
00:21:08,890 --> 00:21:13,480
need them to install a whole bunch of

522
00:21:10,360 --> 00:21:19,240
tools to install at least one virtual

523
00:21:13,480 --> 00:21:20,980
machine depending and so wrap that

524
00:21:19,240 --> 00:21:23,620
doesn't I think we're getting a whole

525
00:21:20,980 --> 00:21:29,280
bunch of questions about VMware virtual

526
00:21:23,620 --> 00:21:33,219
box I'm getting questions about topics

527
00:21:29,280 --> 00:21:37,410
all sorts of hardware for expiry halfway

528
00:21:33,220 --> 00:21:41,830
through keyboard stops working and

529
00:21:37,410 --> 00:21:43,950
overall I'd say probably just getting

530
00:21:41,830 --> 00:21:46,659
everybody set up and on the same page

531
00:21:43,950 --> 00:21:50,950
moving on to the third lab we had this

532
00:21:46,660 --> 00:21:52,780
sort of similar setup where you get

533
00:21:50,950 --> 00:21:55,870
students kind of overwhelmed by all the

534
00:21:52,780 --> 00:21:59,740
new tools and workflows so needs to be

535
00:21:55,870 --> 00:22:02,860
on generally in order to run the tools

536
00:21:59,740 --> 00:22:05,890
that we need for the course so I dug is

537
00:22:02,860 --> 00:22:08,168
a disassembler lets you analyze it

538
00:22:05,890 --> 00:22:13,510
migrates about source code that runs on

539
00:22:08,169 --> 00:22:14,610
Windows gdb is a debugger and so people

540
00:22:13,510 --> 00:22:16,280
were having to constantly

541
00:22:14,610 --> 00:22:18,449
foot back and forth between these games

542
00:22:16,280 --> 00:22:21,210
at the same time these are two very

543
00:22:18,450 --> 00:22:24,120
disjointed complex tools they both

544
00:22:21,210 --> 00:22:25,650
perform different actions and it's not

545
00:22:24,120 --> 00:22:27,989
really immediately obvious unless you

546
00:22:25,650 --> 00:22:29,760
have prerequisite knowledge to kind of

547
00:22:27,990 --> 00:22:32,850
map what one tool is showing give a mock

548
00:22:29,760 --> 00:22:34,170
the output of the other tools so it kind

549
00:22:32,850 --> 00:22:36,240
of ended up in a situation like this

550
00:22:34,170 --> 00:22:37,170
people are trying to connect to this war

551
00:22:36,240 --> 00:22:39,570
game that we made

552
00:22:37,170 --> 00:22:42,150
trying to set up their VMs same time

553
00:22:39,570 --> 00:22:44,939
trying to learn what messages how do I

554
00:22:42,150 --> 00:22:47,490
actually connect the server maybe I'm on

555
00:22:44,940 --> 00:22:49,650
Windows maybe on Linux different process

556
00:22:47,490 --> 00:22:50,940
for both they're trying to learn and how

557
00:22:49,650 --> 00:22:52,820
to actually like type their exploit

558
00:22:50,940 --> 00:22:57,690
scripts they don't know how to quit

559
00:22:52,820 --> 00:22:59,189
Emacs it's like even worse to get there

560
00:22:57,690 --> 00:23:02,360
me and the Installer tools and looks

561
00:22:59,190 --> 00:23:05,280
like this it's like miserable

562
00:23:02,360 --> 00:23:07,110
oh my god this is the most complicated

563
00:23:05,280 --> 00:23:13,889
my computer software ever seen in my

564
00:23:07,110 --> 00:23:17,639
life it's like gone

565
00:23:13,890 --> 00:23:20,070
like that's not good right the two first

566
00:23:17,640 --> 00:23:21,480
classes we just by the very nature of

567
00:23:20,070 --> 00:23:23,010
teaching this stuff we're spending a

568
00:23:21,480 --> 00:23:26,940
whole lot of time a little problems that

569
00:23:23,010 --> 00:23:28,860
we don't want to deal with but we help

570
00:23:26,940 --> 00:23:31,919
do that so we're going on to the next

571
00:23:28,860 --> 00:23:33,870
couple of lectures lecture 4 we just got

572
00:23:31,919 --> 00:23:36,360
finished teaching people how binaries

573
00:23:33,870 --> 00:23:38,520
warehouse assembly works how Linux works

574
00:23:36,360 --> 00:23:39,840
and now we're basically breaking that

575
00:23:38,520 --> 00:23:41,760
entire paradigm and starting to teach

576
00:23:39,840 --> 00:23:45,418
them how to have a great assumptions and

577
00:23:41,760 --> 00:23:46,919
how to take over binders but all those

578
00:23:45,419 --> 00:23:48,120
concepts are very formal ok

579
00:23:46,919 --> 00:23:49,890
and you don't really get any feedback

580
00:23:48,120 --> 00:23:51,780
from these tools like debuggers work

581
00:23:49,890 --> 00:23:54,000
being to help you to write next boy stur

582
00:23:51,780 --> 00:23:56,580
need to help people who have source code

583
00:23:54,000 --> 00:23:58,049
fixer programmers so even if students

584
00:23:56,580 --> 00:24:00,030
understood the topics and we're going

585
00:23:58,049 --> 00:24:02,580
through the process correctly they

586
00:24:00,030 --> 00:24:03,570
couldn't really tell a lot of time you

587
00:24:02,580 --> 00:24:05,699
couldn't tell they're doing the right

588
00:24:03,570 --> 00:24:08,370
thing because it's a very opaque field

589
00:24:05,700 --> 00:24:10,549
and the end result of that is they feel

590
00:24:08,370 --> 00:24:12,750
lost even if they are on the right track

591
00:24:10,549 --> 00:24:14,370
next to do any shell coding so we're

592
00:24:12,750 --> 00:24:16,860
trying to inject our own code into

593
00:24:14,370 --> 00:24:19,229
processes after we explore them and some

594
00:24:16,860 --> 00:24:20,668
of the need they have to not only read

595
00:24:19,230 --> 00:24:21,730
assembly but they also need to write

596
00:24:20,669 --> 00:24:23,830
their own assembly that

597
00:24:21,730 --> 00:24:26,860
whatever nefarious malicious actions

598
00:24:23,830 --> 00:24:28,449
we're trying to get them to do so you're

599
00:24:26,860 --> 00:24:31,029
trying to learn to write this foreign

600
00:24:28,450 --> 00:24:33,549
language on top of everything else

601
00:24:31,029 --> 00:24:36,669
though trying to teach and finally we

602
00:24:33,549 --> 00:24:38,559
had a six so for my string deport

603
00:24:36,669 --> 00:24:40,779
abilities maybe some familiar with them

604
00:24:38,559 --> 00:24:42,519
these were kind of popular or somewhat

605
00:24:40,779 --> 00:24:44,889
like they would come and see gaps here

606
00:24:42,519 --> 00:24:47,940
and there so want to touch on them but

607
00:24:44,889 --> 00:24:50,620
in real life they are no longer gold

608
00:24:47,940 --> 00:24:52,450
almost always a liability you try to

609
00:24:50,620 --> 00:24:53,620
compile something on with a modern

610
00:24:52,450 --> 00:24:57,120
compiler that has one of these

611
00:24:53,620 --> 00:24:57,120
vulnerabilities it was just there on air

612
00:24:57,779 --> 00:25:03,789
and so this all kind of leads into

613
00:25:00,820 --> 00:25:08,019
another question of what makes a course

614
00:25:03,789 --> 00:25:10,779
really high value before a student in my

615
00:25:08,019 --> 00:25:12,159
apparently it's courses that teach you

616
00:25:10,779 --> 00:25:15,159
information you can't really beat just

617
00:25:12,159 --> 00:25:16,750
Google in five minutes and even if you

618
00:25:15,159 --> 00:25:18,370
can google the information maybe it's

619
00:25:16,750 --> 00:25:20,880
very tricky to find your way through it

620
00:25:18,370 --> 00:25:23,439
just where your structures come in and

621
00:25:20,880 --> 00:25:24,789
finally a high value course needs to

622
00:25:23,440 --> 00:25:26,200
ultimately teach you things are

623
00:25:24,789 --> 00:25:28,389
important to you and let you solve

624
00:25:26,200 --> 00:25:31,149
problems that you actually care about

625
00:25:28,389 --> 00:25:32,740
solving and so all the time that we

626
00:25:31,149 --> 00:25:34,120
spend on all these other things there's

627
00:25:32,740 --> 00:25:36,220
you know a bunch more throughout the

628
00:25:34,120 --> 00:25:38,408
rest of the course it's all fairly stuff

629
00:25:36,220 --> 00:25:43,269
that we considered you know resulting in

630
00:25:38,409 --> 00:25:45,820
time waste and so keeping all that in

631
00:25:43,269 --> 00:25:47,380
mind we wanted to create a new

632
00:25:45,820 --> 00:25:49,799
experience that incorporates the most

633
00:25:47,380 --> 00:25:52,120
effective parts of CTS and wargames

634
00:25:49,799 --> 00:25:56,500
but also dramatically dampens that

635
00:25:52,120 --> 00:25:58,360
learning curve so this past year of the

636
00:25:56,500 --> 00:26:00,159
screen we had the opportunity to teach a

637
00:25:58,360 --> 00:26:03,189
revised version of mine behind your

638
00:26:00,159 --> 00:26:05,169
expectation except this time we had one

639
00:26:03,190 --> 00:26:07,029
major difference and that we put

640
00:26:05,169 --> 00:26:10,419
everything that you needed to learn the

641
00:26:07,029 --> 00:26:12,309
stock into a single rather and so right

642
00:26:10,419 --> 00:26:14,740
off the bat right this lets us eliminate

643
00:26:12,309 --> 00:26:16,658
all those set of problems called first

644
00:26:14,740 --> 00:26:19,029
slide of people's bm's not working stuff

645
00:26:16,659 --> 00:26:19,419
not integrating while not all goes out

646
00:26:19,029 --> 00:26:22,600
the window

647
00:26:19,419 --> 00:26:25,059
because everything's encapsulated right

648
00:26:22,600 --> 00:26:27,009
Google Chrome for example on top of that

649
00:26:25,059 --> 00:26:28,809
it runs on literally anything so you can

650
00:26:27,009 --> 00:26:31,200
get a Chromebook for hundred dollars and

651
00:26:28,809 --> 00:26:33,039
start learning how to pound boundaries

652
00:26:31,200 --> 00:26:34,570
you don't have to worry about you know

653
00:26:33,039 --> 00:26:39,549
your laptop not being over on the three

654
00:26:34,570 --> 00:26:41,769
beams at once so here I have the closeup

655
00:26:39,549 --> 00:26:45,490
of the plan that's encapsulated into a

656
00:26:41,769 --> 00:26:47,470
single chrome tab so to actually get to

657
00:26:45,490 --> 00:26:49,570
it I need to do is punch in the URL hit

658
00:26:47,470 --> 00:26:51,669
enter it wants to do that you're ready

659
00:26:49,570 --> 00:26:57,370
to start exploiting behind reads within

660
00:26:51,669 --> 00:27:00,429
a few seconds so uh on the right we did

661
00:26:57,370 --> 00:27:02,258
but a representation of gdb that also

662
00:27:00,429 --> 00:27:04,509
has some Linux features that sort of pop

663
00:27:02,259 --> 00:27:09,549
into existence when they are irrelevant

664
00:27:04,509 --> 00:27:11,409
and on the Left we put in a fully

665
00:27:09,549 --> 00:27:18,668
featured disassembler that's similar to

666
00:27:11,409 --> 00:27:20,799
ida pro or the source tab and we end up

667
00:27:18,669 --> 00:27:22,840
and you could explore it's kind of more

668
00:27:20,799 --> 00:27:24,519
or less like sublime text that would

669
00:27:22,840 --> 00:27:26,590
show you all the relevant source code or

670
00:27:24,519 --> 00:27:31,990
the particular level or glad you were

671
00:27:26,590 --> 00:27:33,939
working click into the Python tab we got

672
00:27:31,990 --> 00:27:35,970
a fully featured Python terminal that

673
00:27:33,940 --> 00:27:41,080
integrates directly with everything else

674
00:27:35,970 --> 00:27:42,909
on the platform and below that we have

675
00:27:41,080 --> 00:27:46,269
the code editor that integrates directly

676
00:27:42,909 --> 00:27:48,309
with the Python terminal right above so

677
00:27:46,269 --> 00:27:50,710
from that editor you can write Python

678
00:27:48,309 --> 00:27:52,570
scripts that will intercut interact with

679
00:27:50,710 --> 00:27:57,009
and ultimately exploit whatever level

680
00:27:52,570 --> 00:27:58,629
you're currently running and so we've

681
00:27:57,009 --> 00:28:02,580
talked a bit about this I'm going to

682
00:27:58,629 --> 00:28:02,580
hand the mic over to Marcus

683
00:28:06,370 --> 00:28:11,059
okay so we're gonna see how this goes

684
00:28:09,019 --> 00:28:33,890
Patrick's and a half to try and drive

685
00:28:11,059 --> 00:28:35,450
the demo from the other screen so yeah

686
00:28:33,890 --> 00:28:38,600
if you want to punch in that URL if you

687
00:28:35,450 --> 00:28:40,370
actually have your like comp out we

688
00:28:38,600 --> 00:28:42,860
throw it back up there Mindy all right

689
00:28:40,370 --> 00:28:45,260
all right well anyone needs URL if

690
00:28:42,860 --> 00:28:47,689
anyone's actually interested all right

691
00:28:45,260 --> 00:28:49,908
so Patrick's gonna I'm gonna try and

692
00:28:47,690 --> 00:28:51,559
narrate some of what Patrick's going

693
00:28:49,909 --> 00:28:53,630
through here and so here we just punch

694
00:28:51,559 --> 00:28:59,840
it into Chrome right we were instantly

695
00:28:53,630 --> 00:29:01,880
loaded if you know Ethel Emma now you

696
00:28:59,840 --> 00:29:03,860
got a full screen great yeah that's just

697
00:29:01,880 --> 00:29:06,620
chrome features here so I'm on the left

698
00:29:03,860 --> 00:29:08,809
here we've got these first covered view

699
00:29:06,620 --> 00:29:10,489
of this is one of the lecture examples

700
00:29:08,809 --> 00:29:11,510
we use relatively early in the course

701
00:29:10,490 --> 00:29:13,850
this was when you're trying to teach

702
00:29:11,510 --> 00:29:15,470
students about memory layout and a

703
00:29:13,850 --> 00:29:17,658
little bit about how the stack works for

704
00:29:15,470 --> 00:29:19,279
those that are familiar all the binaries

705
00:29:17,659 --> 00:29:22,610
intercourse were written in C code and

706
00:29:19,279 --> 00:29:25,010
it would compile into modern and 1 to L

707
00:29:22,610 --> 00:29:27,949
files running on essentially real system

708
00:29:25,010 --> 00:29:31,789
come on the back end but in a emulated

709
00:29:27,950 --> 00:29:34,519
context and so you can see this is just

710
00:29:31,789 --> 00:29:36,889
a pretty simple C program yeah this is

711
00:29:34,519 --> 00:29:40,789
the source if you click the disassembly

712
00:29:36,889 --> 00:29:42,799
table up here you can see this is the

713
00:29:40,789 --> 00:29:44,389
compiled version of the code so this is

714
00:29:42,799 --> 00:29:46,460
all it disassembly for it we can scroll

715
00:29:44,389 --> 00:29:48,709
through it this is what your binary

716
00:29:46,460 --> 00:29:51,230
looks like to the computer this is what

717
00:29:48,710 --> 00:29:56,059
your program executes and so this is in

718
00:29:51,230 --> 00:29:57,830
tops 86 specifically 64-bit and so it's

719
00:29:56,059 --> 00:30:00,350
integral to be able to navigate and

720
00:29:57,830 --> 00:30:01,908
understand this code for binary fission

721
00:30:00,350 --> 00:30:05,000
you need to know the system inside and

722
00:30:01,909 --> 00:30:05,760
out and so students it's very difficult

723
00:30:05,000 --> 00:30:07,710
to read

724
00:30:05,760 --> 00:30:09,180
you've learned your way around it at

725
00:30:07,710 --> 00:30:11,100
this point you know I kind of can

726
00:30:09,180 --> 00:30:12,270
recognize very quickly what's important

727
00:30:11,100 --> 00:30:14,730
what it isn't but our students get very

728
00:30:12,270 --> 00:30:17,940
overwhelmed by this and so you can put

729
00:30:14,730 --> 00:30:20,130
comments in we even very easily put

730
00:30:17,940 --> 00:30:23,160
comments into the code move your cursor

731
00:30:20,130 --> 00:30:24,990
off so you can see that that green thing

732
00:30:23,160 --> 00:30:26,430
you just drop the comment in there and

733
00:30:24,990 --> 00:30:27,870
so students it's important for students

734
00:30:26,430 --> 00:30:29,310
to be able to annotate their code and

735
00:30:27,870 --> 00:30:30,629
this is the same thing you can do in

736
00:30:29,310 --> 00:30:33,330
real world reverse engineering and

737
00:30:30,630 --> 00:30:35,010
disassemblers to better understand how

738
00:30:33,330 --> 00:30:37,590
the program works when you're trying to

739
00:30:35,010 --> 00:30:41,340
break it and so there's also graph view

740
00:30:37,590 --> 00:30:44,129
which is super common in the leading

741
00:30:41,340 --> 00:30:48,540
disassemblers and the graph you lets you

742
00:30:44,130 --> 00:30:50,370
kind of see the control flow so the

743
00:30:48,540 --> 00:30:51,960
control flow of the function and the

744
00:30:50,370 --> 00:30:54,239
binary and the program structure so you

745
00:30:51,960 --> 00:30:55,560
can see how that looks and this helps

746
00:30:54,240 --> 00:30:58,140
you understand conditionals and loops

747
00:30:55,560 --> 00:30:59,490
and stuff like that and so that was a

748
00:30:58,140 --> 00:31:02,340
very important part of on either great

749
00:30:59,490 --> 00:31:05,670
diving here - all right so let's go back

750
00:31:02,340 --> 00:31:07,919
to the source tab and let's try running

751
00:31:05,670 --> 00:31:10,290
so very much sure we'll we would

752
00:31:07,920 --> 00:31:11,820
generally on be teaching the students

753
00:31:10,290 --> 00:31:14,460
various concepts about how the stuff

754
00:31:11,820 --> 00:31:16,110
works we would complement this platform

755
00:31:14,460 --> 00:31:18,570
with some slides that we're hoping to

756
00:31:16,110 --> 00:31:21,090
remember entirely essentially but if you

757
00:31:18,570 --> 00:31:23,070
run the binary so you can over the new

758
00:31:21,090 --> 00:31:26,159
bike around the far right he's typing in

759
00:31:23,070 --> 00:31:28,620
the run command and the binaries running

760
00:31:26,160 --> 00:31:30,300
and so it printed out some stuff up here

761
00:31:28,620 --> 00:31:33,000
and it's asking for some data you can

762
00:31:30,300 --> 00:31:34,980
see this in the code over here and so

763
00:31:33,000 --> 00:31:37,980
it's asking him to enter some data and

764
00:31:34,980 --> 00:31:39,870
so we're gonna enter some data so you

765
00:31:37,980 --> 00:31:43,230
just gonna punch in somebody's send

766
00:31:39,870 --> 00:31:44,850
through and then it prints out we since

767
00:31:43,230 --> 00:31:46,650
this was an occasional lecture example

768
00:31:44,850 --> 00:31:48,240
we're trying to show people how your

769
00:31:46,650 --> 00:31:49,920
data goes into programs and how the

770
00:31:48,240 --> 00:31:51,090
computer stores it and what stuff looks

771
00:31:49,920 --> 00:31:53,640
like we actually print out a

772
00:31:51,090 --> 00:31:54,959
visualization of the staff over here and

773
00:31:53,640 --> 00:31:56,940
you can actually see this data that went

774
00:31:54,960 --> 00:31:59,070
into the program so capital is the hex

775
00:31:56,940 --> 00:31:59,490
code for them is for one so for on go on

776
00:31:59,070 --> 00:32:02,040
go on

777
00:31:59,490 --> 00:32:03,360
that's always a incentive this is it

778
00:32:02,040 --> 00:32:06,810
being stored on the program in the

779
00:32:03,360 --> 00:32:09,149
program you can also see essentially

780
00:32:06,810 --> 00:32:11,090
these other variables so he's the

781
00:32:09,150 --> 00:32:13,490
program stores in behave

782
00:32:11,090 --> 00:32:15,439
into a 32 byte buffer well there's two

783
00:32:13,490 --> 00:32:17,749
other variables around it which is below

784
00:32:15,440 --> 00:32:19,940
two numbers essentially which are below

785
00:32:17,749 --> 00:32:23,210
and above it you can see them also here

786
00:32:19,940 --> 00:32:25,039
in memory with some like padding bytes

787
00:32:23,210 --> 00:32:27,679
of highlight conservatives for whatever

788
00:32:25,039 --> 00:32:31,070
purposes but now I want Patrick to run

789
00:32:27,679 --> 00:32:34,190
the deficit and there's a vulnerability

790
00:32:31,070 --> 00:32:36,470
with this application where he doesn't

791
00:32:34,190 --> 00:32:38,389
properly check how much data is reading

792
00:32:36,470 --> 00:32:41,169
in from the user and so if Patrick sends

793
00:32:38,389 --> 00:32:41,168
in a lot of data

794
00:32:42,460 --> 00:32:47,509
yeah right but we got buffer overflow

795
00:32:45,529 --> 00:32:50,539
you're on expanded I'll do a little

796
00:32:47,509 --> 00:32:52,610
injection there right right right yeah

797
00:32:50,539 --> 00:32:54,799
you're you're getting the fire right and

798
00:32:52,610 --> 00:32:57,709
so students this is where we first start

799
00:32:54,799 --> 00:33:00,350
to introduce students to memory

800
00:32:57,710 --> 00:33:02,240
corruption of doing something unattended

801
00:33:00,350 --> 00:33:05,330
and we want to start doing something

802
00:33:02,240 --> 00:33:07,460
controlled right and so we're going to

803
00:33:05,330 --> 00:33:09,259
in this in this example we start to

804
00:33:07,460 --> 00:33:11,330
teach students that we're not only

805
00:33:09,259 --> 00:33:13,850
corrupting memory now so this is the

806
00:33:11,330 --> 00:33:15,499
green is what memory the the programmer

807
00:33:13,850 --> 00:33:18,049
intended for us to use

808
00:33:15,499 --> 00:33:20,990
but now we've corrupted some padding

809
00:33:18,049 --> 00:33:23,029
which really didn't matter but past that

810
00:33:20,990 --> 00:33:24,499
it gets really bad we start cropping

811
00:33:23,029 --> 00:33:27,769
things that we never should have touched

812
00:33:24,499 --> 00:33:30,320
in the program state and so Patrick has

813
00:33:27,769 --> 00:33:32,179
entered too much data it's it's done

814
00:33:30,320 --> 00:33:34,668
some crazy stuff to the internal program

815
00:33:32,179 --> 00:33:36,889
State and actually crashed that it fails

816
00:33:34,669 --> 00:33:38,299
because like I can't continue you have

817
00:33:36,889 --> 00:33:40,070
to figure this out in the program just

818
00:33:38,299 --> 00:33:41,720
crashes and so that is something

819
00:33:40,070 --> 00:33:44,840
unattended right that can be downtown

820
00:33:41,720 --> 00:33:47,419
that can eat whatever and so now we're

821
00:33:44,840 --> 00:33:49,009
going to do a more targeted corruption

822
00:33:47,419 --> 00:33:53,240
of memory such that we can change the

823
00:33:49,009 --> 00:33:56,600
behavior of the program and so so

824
00:33:53,240 --> 00:33:58,490
Patrick is going to be zero writing and

825
00:33:56,600 --> 00:34:01,689
exploit a very simple one of the it's

826
00:33:58,490 --> 00:34:04,610
like the hello world of exploits for

827
00:34:01,690 --> 00:34:06,440
binary addition and so over here he's

828
00:34:04,610 --> 00:34:08,810
writing in the Python terminal that we

829
00:34:06,440 --> 00:34:11,418
talked about you can bring up the Python

830
00:34:08,810 --> 00:34:14,328
terminal on either side and what he's

831
00:34:11,418 --> 00:34:14,870
doing is he's writing a little python

832
00:34:14,329 --> 00:34:17,120
script

833
00:34:14,870 --> 00:34:20,330
will interact with the program because

834
00:34:17,120 --> 00:34:21,980
as of course gets more advanced we had

835
00:34:20,330 --> 00:34:23,810
students earning exploit scripts that

836
00:34:21,980 --> 00:34:25,100
were hundreds of lines that have to

837
00:34:23,810 --> 00:34:27,949
interact with the binder in very

838
00:34:25,100 --> 00:34:30,949
advanced ways that have to send data and

839
00:34:27,949 --> 00:34:33,350
read data in a very specific manner and

840
00:34:30,949 --> 00:34:35,929
so Patrick's training will explain you

841
00:34:33,350 --> 00:34:38,779
can see he essentially connects to the

842
00:34:35,929 --> 00:34:41,120
process so that he can essentially send

843
00:34:38,780 --> 00:34:49,730
data in or receive data just traveling

844
00:34:41,120 --> 00:34:52,969
reading over a CDN or sedl yeah

845
00:34:49,730 --> 00:34:56,380
and so it's the whole program here is

846
00:34:52,969 --> 00:34:59,899
hello world of exploitation is going to

847
00:34:56,380 --> 00:35:04,400
essentially he has driven it to have a

848
00:34:59,900 --> 00:35:13,550
payload you can ascend 32 days actually

849
00:35:04,400 --> 00:35:15,800
don't press ctrl ctrl + 5 so we got we

850
00:35:13,550 --> 00:35:18,740
got 30 to 80 sending that in it build up

851
00:35:15,800 --> 00:35:22,190
this buffer as expected as a programmer

852
00:35:18,740 --> 00:35:25,399
expected but now we actually want him to

853
00:35:22,190 --> 00:35:28,880
corrupt the data past the end of the

854
00:35:25,400 --> 00:35:30,050
buffer and so something I guess I

855
00:35:28,880 --> 00:35:32,330
haven't mentioned here which is a really

856
00:35:30,050 --> 00:35:33,500
important part is down at the bottom we

857
00:35:32,330 --> 00:35:36,290
have these little things that we call

858
00:35:33,500 --> 00:35:37,970
checkpoints so the very first checkpoint

859
00:35:36,290 --> 00:35:39,800
on this level these are these are like

860
00:35:37,970 --> 00:35:41,540
little goalposts help guide the students

861
00:35:39,800 --> 00:35:43,220
from not knowing what they're supposed

862
00:35:41,540 --> 00:35:45,560
to do to have some kind of destination

863
00:35:43,220 --> 00:35:46,939
in mind and so the first the first

864
00:35:45,560 --> 00:35:48,710
checkpoint was essentially the correct

865
00:35:46,940 --> 00:35:50,690
memory and pressure programming he did

866
00:35:48,710 --> 00:35:52,930
that and popped when it happened the

867
00:35:50,690 --> 00:35:55,730
second checkpoint is asking him to

868
00:35:52,930 --> 00:35:57,649
essentially corrupt memory in a very

869
00:35:55,730 --> 00:35:59,390
specific way such that he can go down in

870
00:35:57,650 --> 00:36:02,150
code path that should never have in the

871
00:35:59,390 --> 00:36:03,770
normal execution and so he's very little

872
00:36:02,150 --> 00:36:04,880
bit of boilerplate code right here which

873
00:36:03,770 --> 00:36:07,070
is something that we just teach the

874
00:36:04,880 --> 00:36:08,540
students is there any of you are kind of

875
00:36:07,070 --> 00:36:10,070
lost with our example the students had a

876
00:36:08,540 --> 00:36:11,990
lot more context when we gave this

877
00:36:10,070 --> 00:36:14,330
lecture but this is you're supposed to

878
00:36:11,990 --> 00:36:17,330
kind of demonstrate the flow of lectures

879
00:36:14,330 --> 00:36:19,670
or the the interactions of the platform

880
00:36:17,330 --> 00:36:22,040
and so he's typing something here

881
00:36:19,670 --> 00:36:25,859
remembering

882
00:36:22,040 --> 00:36:28,380
so there's this compound that exists

883
00:36:25,859 --> 00:36:30,210
down here that checks if this below

884
00:36:28,380 --> 00:36:36,089
which is basically just an integer a

885
00:36:30,210 --> 00:36:39,240
number it checks if this it checks if

886
00:36:36,089 --> 00:36:41,400
this variable below equals o X deadbeat

887
00:36:39,240 --> 00:36:44,129
bad code which is just some big number

888
00:36:41,400 --> 00:36:46,980
essentially but that variable is only

889
00:36:44,130 --> 00:36:49,200
ever set right up here five one five one

890
00:36:46,980 --> 00:36:50,940
five one five one five one it's never

891
00:36:49,200 --> 00:36:54,089
touched by the program code normally

892
00:36:50,940 --> 00:36:55,770
that's so any average C program when you

893
00:36:54,089 --> 00:36:57,359
look at this and be like oh you can

894
00:36:55,770 --> 00:36:59,579
never go in that condition which is a

895
00:36:57,359 --> 00:37:03,569
winning condition basically that we

896
00:36:59,579 --> 00:37:07,230
created to help teach and so we're going

897
00:37:03,569 --> 00:37:08,819
to corrupt memory and we're going to set

898
00:37:07,230 --> 00:37:11,280
that variable to something never should

899
00:37:08,819 --> 00:37:13,970
have been physically deadbeat back codes

900
00:37:11,280 --> 00:37:16,440
to Patrick's and I'm standing over here

901
00:37:13,970 --> 00:37:18,328
as part of his ex-wife part of his

902
00:37:16,440 --> 00:37:25,710
specially crafted data that he's sending

903
00:37:18,329 --> 00:37:28,280
into the program okay and we're going to

904
00:37:25,710 --> 00:37:28,280
run this

905
00:37:32,010 --> 00:37:36,280
so they thought the checkpoint

906
00:37:34,540 --> 00:37:38,620
said Congrats or you're on the right

907
00:37:36,280 --> 00:37:40,960
track up here doctor says correct debug

908
00:37:38,620 --> 00:37:42,640
fly captured and so that's the the print

909
00:37:40,960 --> 00:37:45,610
path he went through the winning

910
00:37:42,640 --> 00:37:47,350
condition code now but the thing is in

911
00:37:45,610 --> 00:37:49,900
the real world she's using a debugger

912
00:37:47,350 --> 00:37:51,850
still he's kind of like you know he was

913
00:37:49,900 --> 00:37:55,360
in a safe any good debug keys exploit if

914
00:37:51,850 --> 00:37:57,759
he needed to and this is very similar to

915
00:37:55,360 --> 00:37:59,110
the lab environment let's say you're ten

916
00:37:57,760 --> 00:38:00,490
floors underground for me and you're

917
00:37:59,110 --> 00:38:02,530
trying to write an exploit for an iOS

918
00:38:00,490 --> 00:38:04,450
device or something you have your

919
00:38:02,530 --> 00:38:05,950
debugger you can test everything but in

920
00:38:04,450 --> 00:38:08,649
the real world when you're out there

921
00:38:05,950 --> 00:38:10,600
trying to throw the device or throw the

922
00:38:08,650 --> 00:38:12,940
exploit at your target or during the

923
00:38:10,600 --> 00:38:15,850
nuclear enrichment facility you can't be

924
00:38:12,940 --> 00:38:17,020
better debugging Iran's computers and

925
00:38:15,850 --> 00:38:19,509
figure out why your absolute summary it

926
00:38:17,020 --> 00:38:21,070
has to work the first time and so what

927
00:38:19,510 --> 00:38:22,540
we ask students to do then is run their

928
00:38:21,070 --> 00:38:24,430
exploit in a mode where they not allowed

929
00:38:22,540 --> 00:38:26,800
to do any instrumentation any debugging

930
00:38:24,430 --> 00:38:29,169
and if their exploit lands they get to

931
00:38:26,800 --> 00:38:32,830
fly and sympatric is gonna run the

932
00:38:29,170 --> 00:38:36,010
exploit is essentially a live binary

933
00:38:32,830 --> 00:38:37,480
with no debugging no mouthing and you

934
00:38:36,010 --> 00:38:39,790
captured the fly and say you can

935
00:38:37,480 --> 00:38:41,080
actually see the flag up there we give

936
00:38:39,790 --> 00:38:42,940
the students flags are like little

937
00:38:41,080 --> 00:38:47,319
pieces of reward right it's like giving

938
00:38:42,940 --> 00:38:49,690
like yeah a piece of candy and so that's

939
00:38:47,320 --> 00:38:51,790
it even played in the lab and if you can

940
00:38:49,690 --> 00:38:53,770
back to the bank for example one of the

941
00:38:51,790 --> 00:38:55,390
homework assignments for the student and

942
00:38:53,770 --> 00:38:57,910
so there's multiple assignments multiple

943
00:38:55,390 --> 00:38:59,830
lecture examples that we go through and

944
00:38:57,910 --> 00:39:02,020
so that's been simply the demo and this

945
00:38:59,830 --> 00:39:03,430
is actually something that it's a

946
00:39:02,020 --> 00:39:05,020
project that we developed for the class

947
00:39:03,430 --> 00:39:07,480
and we haven't actually talked about

948
00:39:05,020 --> 00:39:09,730
publicly yet so congrats for those of

949
00:39:07,480 --> 00:39:14,850
you that are here we started reaching

950
00:39:09,730 --> 00:39:16,990
out privately to some academia and

951
00:39:14,850 --> 00:39:19,650
industrial military industrial complex

952
00:39:16,990 --> 00:39:22,870
partners to start getting slab rating on

953
00:39:19,650 --> 00:39:25,920
places to go and so we're going to go

954
00:39:22,870 --> 00:39:25,920
back to the slides

955
00:39:34,930 --> 00:39:37,969
[Music]

956
00:39:49,300 --> 00:39:53,860
Hey

957
00:39:50,520 --> 00:39:53,860
[Music]

958
00:40:06,780 --> 00:40:10,230
all right so a primary design goal that

959
00:40:09,330 --> 00:40:12,960
we thought I would have making that

960
00:40:10,230 --> 00:40:15,480
whole platform was to make the tools as

961
00:40:12,960 --> 00:40:17,460
true to life as possible and by that I

962
00:40:15,480 --> 00:40:18,990
mean whenever it's feasible they

963
00:40:17,460 --> 00:40:20,850
shouldn't be anything exactly like

964
00:40:18,990 --> 00:40:23,339
industry standard employee would behave

965
00:40:20,850 --> 00:40:25,350
so even those students you know mostly

966
00:40:23,340 --> 00:40:27,570
pick up class to learn the concepts

967
00:40:25,350 --> 00:40:29,520
behind by your expectation being

968
00:40:27,570 --> 00:40:32,610
comfortable in the actual workflow is

969
00:40:29,520 --> 00:40:34,140
also extremely odd that means you can

970
00:40:32,610 --> 00:40:35,760
take what you learn in our class and

971
00:40:34,140 --> 00:40:38,609
apply it as real targets in a matter of

972
00:40:35,760 --> 00:40:42,090
minutes or hours instead of days weeks

973
00:40:38,610 --> 00:40:43,890
or even months detention and so you

974
00:40:42,090 --> 00:40:45,870
probably noticed he's a little green

975
00:40:43,890 --> 00:40:48,089
checkmarks are popping up markets

976
00:40:45,870 --> 00:40:49,890
actually call them out and so we call

977
00:40:48,090 --> 00:40:51,810
these checkpoints throughout the course

978
00:40:49,890 --> 00:40:53,609
and they're really an integral part of

979
00:40:51,810 --> 00:40:56,370
our teaching process that just wasn't

980
00:40:53,610 --> 00:40:57,840
possible in the past their riches of MBE

981
00:40:56,370 --> 00:41:00,180
and that's just due to technical

982
00:40:57,840 --> 00:41:02,520
limitations if you're running binaries

983
00:41:00,180 --> 00:41:05,040
on a Linux server for people we just

984
00:41:02,520 --> 00:41:07,500
don't have the level of introspection or

985
00:41:05,040 --> 00:41:11,850
insight needed to make something like

986
00:41:07,500 --> 00:41:13,680
this happen and it's as instructors we

987
00:41:11,850 --> 00:41:17,339
basically just write these 10 20 lines

988
00:41:13,680 --> 00:41:18,750
of JavaScript and integrate that with

989
00:41:17,340 --> 00:41:21,210
the platform to create these check marks

990
00:41:18,750 --> 00:41:23,910
or whatever levels or labs or

991
00:41:21,210 --> 00:41:25,470
development they help keep students on

992
00:41:23,910 --> 00:41:28,710
the rails like we were talking about

993
00:41:25,470 --> 00:41:31,709
earlier in the presentation the students

994
00:41:28,710 --> 00:41:33,240
going lost we can detect when they start

995
00:41:31,710 --> 00:41:35,100
dropping memory when they get to a

996
00:41:33,240 --> 00:41:36,899
certain program state and we kind of

997
00:41:35,100 --> 00:41:39,990
give them hints that they're going along

998
00:41:36,900 --> 00:41:42,390
the right path like keep exploring just

999
00:41:39,990 --> 00:41:44,029
so it's not such a endless void of I

1000
00:41:42,390 --> 00:41:47,460
don't know what I'm doing

1001
00:41:44,030 --> 00:41:50,230
and another thing that we try very hard

1002
00:41:47,460 --> 00:41:52,420
to do is take cues from game design

1003
00:41:50,230 --> 00:41:54,490
new course and so for example

1004
00:41:52,420 --> 00:41:56,619
checkpoints they're not only there to

1005
00:41:54,490 --> 00:41:58,419
keep students on this one path through

1006
00:41:56,619 --> 00:42:00,300
the course but they're also kind of

1007
00:41:58,420 --> 00:42:02,500
acted as achievements or milestones

1008
00:42:00,300 --> 00:42:04,810
especially in the later levels I get

1009
00:42:02,500 --> 00:42:06,490
much more complex and it's kind of this

1010
00:42:04,810 --> 00:42:08,980
encourages students to explore on their

1011
00:42:06,490 --> 00:42:11,189
own learn on their own as a tends to be

1012
00:42:08,980 --> 00:42:13,630
the most effective way of learning and

1013
00:42:11,190 --> 00:42:17,680
those are kind of scattered throughout

1014
00:42:13,630 --> 00:42:19,420
the entire course so what we also tried

1015
00:42:17,680 --> 00:42:22,180
to do is to reflect the sort of cat and

1016
00:42:19,420 --> 00:42:24,100
mouse game with exploit mitigations that

1017
00:42:22,180 --> 00:42:27,549
surrounds the entire field of applying

1018
00:42:24,100 --> 00:42:29,020
of exploitation so when I say that

1019
00:42:27,550 --> 00:42:31,150
there's any mitigation cat and mouse

1020
00:42:29,020 --> 00:42:33,480
game it fits pretty well into the

1021
00:42:31,150 --> 00:42:36,730
typical view through the whole of

1022
00:42:33,480 --> 00:42:39,280
traditional video game progression so we

1023
00:42:36,730 --> 00:42:40,869
have a buffer overflows excavation

1024
00:42:39,280 --> 00:42:43,660
techniques that we teach them and you

1025
00:42:40,869 --> 00:42:47,650
got staff cookies target corruption so

1026
00:42:43,660 --> 00:42:49,359
on and so forth every lab level on the

1027
00:42:47,650 --> 00:42:51,430
platform continually giving students a

1028
00:42:49,359 --> 00:42:54,100
harder challenge but never getting this

1029
00:42:51,430 --> 00:42:56,440
new heart and so that's actually a key

1030
00:42:54,100 --> 00:42:58,000
concept in game design those flow where

1031
00:42:56,440 --> 00:42:59,680
you make things too easy people get

1032
00:42:58,000 --> 00:43:00,310
bored they stop playing you make things

1033
00:42:59,680 --> 00:43:02,440
too hard

1034
00:43:00,310 --> 00:43:04,200
people just get frustrated and the end

1035
00:43:02,440 --> 00:43:06,270
result is the same they stop playing

1036
00:43:04,200 --> 00:43:11,589
so trying to integrate that into

1037
00:43:06,270 --> 00:43:13,060
security education helps make learning a

1038
00:43:11,590 --> 00:43:19,050
lot more engaging a lot more fun

1039
00:43:13,060 --> 00:43:21,160
increases students motivation and so

1040
00:43:19,050 --> 00:43:23,830
overall we were really happy with how

1041
00:43:21,160 --> 00:43:26,290
this interation of mine and my

1042
00:43:23,830 --> 00:43:27,730
expectation went and so we can't take

1043
00:43:26,290 --> 00:43:30,730
full credit for our students

1044
00:43:27,730 --> 00:43:32,140
achievements just lose so much companies

1045
00:43:30,730 --> 00:43:34,600
that students who have taken this class

1046
00:43:32,140 --> 00:43:37,509
are now working at installing security

1047
00:43:34,600 --> 00:43:42,790
focused capacity and we also hired a

1048
00:43:37,510 --> 00:43:44,650
summer interns actually out of this

1049
00:43:42,790 --> 00:43:46,869
class and so he's doing some pretty

1050
00:43:44,650 --> 00:43:51,580
novel vulnerability research against the

1051
00:43:46,869 --> 00:43:53,560
Mac OS kernel and so it kind of flies

1052
00:43:51,580 --> 00:43:56,500
like ever we're pretty happy with this

1053
00:43:53,560 --> 00:44:01,390
approach we found that

1054
00:43:56,500 --> 00:44:03,010
of teaching binary exploitation and with

1055
00:44:01,390 --> 00:44:04,598
that and wood turns out the word of

1056
00:44:03,010 --> 00:44:09,190
market single clap Oh broader

1057
00:44:04,599 --> 00:44:11,260
applications yeah so having teeth are

1058
00:44:09,190 --> 00:44:13,599
one specialized subject to a diverse

1059
00:44:11,260 --> 00:44:14,890
kind of group at university students we

1060
00:44:13,599 --> 00:44:16,300
recognize I would have only begun that

1061
00:44:14,890 --> 00:44:19,259
kind of scratched the surface on the

1062
00:44:16,300 --> 00:44:22,210
utility of these technologies and so

1063
00:44:19,260 --> 00:44:25,210
it's one platform as I've kind of been

1064
00:44:22,210 --> 00:44:26,859
calling it the thing is there's a lot of

1065
00:44:25,210 --> 00:44:28,990
potential for different courses you can

1066
00:44:26,859 --> 00:44:30,940
teach we love binary relation we love

1067
00:44:28,990 --> 00:44:32,649
that the deep like deep and dirty

1068
00:44:30,940 --> 00:44:34,840
security subjects like really low-level

1069
00:44:32,650 --> 00:44:36,730
systems complex stuff you can barely

1070
00:44:34,840 --> 00:44:38,050
teach any sort of university course comp

1071
00:44:36,730 --> 00:44:40,630
board which is essentially a computer

1072
00:44:38,050 --> 00:44:42,550
architecture course operating systems

1073
00:44:40,630 --> 00:44:44,230
writing C coverage stuff like that

1074
00:44:42,550 --> 00:44:45,580
embedded systems and then reverse

1075
00:44:44,230 --> 00:44:47,770
engineering a dedicated reverse

1076
00:44:45,580 --> 00:44:50,250
engineering course we have some reverse

1077
00:44:47,770 --> 00:44:52,540
engineering in our binary rotation first

1078
00:44:50,250 --> 00:44:55,150
but there could be a whole course

1079
00:44:52,540 --> 00:44:56,920
dedicated to that stuff so yeah you know

1080
00:44:55,150 --> 00:44:59,349
all of these could be are at least you

1081
00:44:56,920 --> 00:45:03,310
know these three or moment others are

1082
00:44:59,349 --> 00:45:05,040
very like less these are neat courses

1083
00:45:03,310 --> 00:45:07,900
excuse me

1084
00:45:05,040 --> 00:45:13,119
so benefits of gamification were really

1085
00:45:07,900 --> 00:45:14,800
clear it's even just the basic

1086
00:45:13,119 --> 00:45:19,810
gamification that we try to put into

1087
00:45:14,800 --> 00:45:23,500
this it made the authorized tedious

1088
00:45:19,810 --> 00:45:25,330
material like pretty engaging and so

1089
00:45:23,500 --> 00:45:26,500
they captivate students and dramatically

1090
00:45:25,330 --> 00:45:28,720
increase the depth of their

1091
00:45:26,500 --> 00:45:30,250
understanding and when balanced properly

1092
00:45:28,720 --> 00:45:31,480
games can be used to make extremely

1093
00:45:30,250 --> 00:45:32,349
technical problems into more

1094
00:45:31,480 --> 00:45:36,040
human-friendly

1095
00:45:32,349 --> 00:45:38,230
challenges right and so it makes

1096
00:45:36,040 --> 00:45:40,170
anything these these you know scary

1097
00:45:38,230 --> 00:45:42,849
binaries and scary concepts into

1098
00:45:40,170 --> 00:45:44,980
challenges that are that can be

1099
00:45:42,849 --> 00:45:46,180
interfaced with by less specialized

1100
00:45:44,980 --> 00:45:47,140
demographics people with less

1101
00:45:46,180 --> 00:45:49,680
qualifications

1102
00:45:47,140 --> 00:45:51,700
different age groups and whatnot and so

1103
00:45:49,680 --> 00:45:54,430
there's party evidence that were not the

1104
00:45:51,700 --> 00:45:57,069
only ones that have this kind of line of

1105
00:45:54,430 --> 00:46:00,700
thinking in recent years have seen some

1106
00:45:57,070 --> 00:46:02,680
games some very widespread of games that

1107
00:46:00,700 --> 00:46:04,450
involve writing assembly code designing

1108
00:46:02,680 --> 00:46:05,020
circuits that have appealed to the

1109
00:46:04,450 --> 00:46:07,990
masses

1110
00:46:05,020 --> 00:46:11,290
this is shenzhen iOS team you'd see like

1111
00:46:07,990 --> 00:46:13,479
instructions like CPU instructions toy

1112
00:46:11,290 --> 00:46:16,930
instructions essentially kind of ending

1113
00:46:13,480 --> 00:46:18,610
in a circuit yeah a bunch of wires

1114
00:46:16,930 --> 00:46:22,080
connect each other you can see that like

1115
00:46:18,610 --> 00:46:24,820
some digital or analog signals down here

1116
00:46:22,080 --> 00:46:26,470
another popular one T is 100 some of you

1117
00:46:24,820 --> 00:46:28,330
may be seeing this someone play it

1118
00:46:26,470 --> 00:46:30,609
another puzzle program game you must

1119
00:46:28,330 --> 00:46:32,340
rewrite corrupting assembly code in like

1120
00:46:30,610 --> 00:46:34,990
these different CPU cores essentially

1121
00:46:32,340 --> 00:46:37,570
such that they will work together to

1122
00:46:34,990 --> 00:46:39,520
produce a target output so this is kind

1123
00:46:37,570 --> 00:46:41,230
of like this is what you need to go and

1124
00:46:39,520 --> 00:46:44,560
like this is your attempt at recreating

1125
00:46:41,230 --> 00:46:47,440
a target output another pretty wildly

1126
00:46:44,560 --> 00:46:49,720
popular view active pumps brand-new this

1127
00:46:47,440 --> 00:46:52,090
came out August 22 teens are just like

1128
00:46:49,720 --> 00:46:53,830
two weeks ago I think this was actually

1129
00:46:52,090 --> 00:46:55,750
inspired by start step which we talked

1130
00:46:53,830 --> 00:46:57,130
about earlier there's more assembly code

1131
00:46:55,750 --> 00:46:59,130
over here I think these three games are

1132
00:46:57,130 --> 00:47:02,260
actually all made by the same game dev

1133
00:46:59,130 --> 00:47:03,940
but it's all about essentially creating

1134
00:47:02,260 --> 00:47:07,720
this malware that gets deeper and deeper

1135
00:47:03,940 --> 00:47:12,160
into this industrial facility pretty

1136
00:47:07,720 --> 00:47:13,839
cool so finally even notch himself you

1137
00:47:12,160 --> 00:47:15,279
guys have all probably played Minecraft

1138
00:47:13,840 --> 00:47:17,220
I think explored the idea of building

1139
00:47:15,280 --> 00:47:20,710
game that could teach elementary

1140
00:47:17,220 --> 00:47:22,629
students how to write assembly code you

1141
00:47:20,710 --> 00:47:24,970
know what a very bizarre thing and

1142
00:47:22,630 --> 00:47:27,700
they're supposed to be there's cobwebs

1143
00:47:24,970 --> 00:47:29,470
tendency it's been since canceled but it

1144
00:47:27,700 --> 00:47:31,359
was supposed to be a space exploration

1145
00:47:29,470 --> 00:47:33,669
kind of game in the similar aesthetic to

1146
00:47:31,359 --> 00:47:36,100
Minecraft you can program your ships

1147
00:47:33,670 --> 00:47:41,350
computers and like different devices and

1148
00:47:36,100 --> 00:47:44,319
stuff and so what's most important about

1149
00:47:41,350 --> 00:47:46,868
all this is that ecology each groups and

1150
00:47:44,320 --> 00:47:48,609
demographics find solace and playing

1151
00:47:46,869 --> 00:47:50,800
games right you do it for fun you do it

1152
00:47:48,609 --> 00:47:52,630
to relax we got a lot of our students in

1153
00:47:50,800 --> 00:47:54,580
our class feel like this would cut into

1154
00:47:52,630 --> 00:47:56,260
my game time or I found this course to

1155
00:47:54,580 --> 00:47:58,569
be more of a game than the past which

1156
00:47:56,260 --> 00:48:00,730
was totally wild it is so cool to get

1157
00:47:58,570 --> 00:48:02,440
positive at like that I mean worker

1158
00:48:00,730 --> 00:48:04,450
comment that the methods and technology

1159
00:48:02,440 --> 00:48:05,920
that we've discussed here are gonna play

1160
00:48:04,450 --> 00:48:07,660
an important role in making such

1161
00:48:05,920 --> 00:48:09,520
material successfully younger and

1162
00:48:07,660 --> 00:48:11,319
otherwise less specialized students say

1163
00:48:09,520 --> 00:48:12,059
high school or K through 12

1164
00:48:11,320 --> 00:48:15,109
it's

1165
00:48:12,059 --> 00:48:17,219
just i suppo computer lab for example

1166
00:48:15,109 --> 00:48:19,288
but under the illusion of the game it's

1167
00:48:17,219 --> 00:48:21,660
possible to train almost anyone in these

1168
00:48:19,289 --> 00:48:22,979
subjects so this includes military or

1169
00:48:21,660 --> 00:48:24,689
more and more recruits are being pulled

1170
00:48:22,979 --> 00:48:27,058
right from basic training to build

1171
00:48:24,689 --> 00:48:28,589
skills and subjects subjects of cyber

1172
00:48:27,059 --> 00:48:30,599
security because there's such a huge

1173
00:48:28,589 --> 00:48:34,349
deficit so if you attended any that

1174
00:48:30,599 --> 00:48:36,779
talks lately here at 8 on Hubert

1175
00:48:34,349 --> 00:48:39,839
multiple people referencing the 3.5

1176
00:48:36,779 --> 00:48:42,359
million jobs by 2020 that are open and

1177
00:48:39,839 --> 00:48:45,209
don't have people to fill so yeah we're

1178
00:48:42,359 --> 00:48:47,009
in a huge deficit without requiring

1179
00:48:45,209 --> 00:48:48,598
specialized software or hardware the

1180
00:48:47,009 --> 00:48:50,640
ability to scale both interest and

1181
00:48:48,599 --> 00:48:52,499
participation into these niche subjects

1182
00:48:50,640 --> 00:48:54,959
it's easy if not natural but applying

1183
00:48:52,499 --> 00:48:57,808
some of the strategies that were covered

1184
00:48:54,959 --> 00:49:00,239
in this talk and so that's actually only

1185
00:48:57,809 --> 00:49:01,499
up we'll take questions there's our

1186
00:49:00,239 --> 00:49:04,170
email if you actually want to reach out

1187
00:49:01,499 --> 00:49:09,089
to us again thank you for coming to the

1188
00:49:04,170 --> 00:49:14,029
very last off on any con and yeah that's

1189
00:49:09,089 --> 00:49:14,029
it so any questions yeah sure right

1190
00:49:15,859 --> 00:49:22,410
ready we have it so the thing is we

1191
00:49:20,699 --> 00:49:26,489
should we build it for the class and

1192
00:49:22,410 --> 00:49:29,989
we're exploring ways to make it like

1193
00:49:26,489 --> 00:49:33,029
more useful by people I guess besides

1194
00:49:29,989 --> 00:49:35,400
like ourselves I guess right it's still

1195
00:49:33,029 --> 00:49:38,069
it's like a pre-release stage sort of

1196
00:49:35,400 --> 00:49:40,289
like where it's it's still got some

1197
00:49:38,069 --> 00:49:42,209
rough edges but we have in a class of

1198
00:49:40,289 --> 00:49:44,729
students being away on it for six months

1199
00:49:42,209 --> 00:49:46,589
and so that really helped us find out

1200
00:49:44,729 --> 00:49:48,749
all the bugs and build this experience

1201
00:49:46,589 --> 00:49:50,069
and we were relatively happy with but we

1202
00:49:48,749 --> 00:49:52,198
haven't released it yet because it's

1203
00:49:50,069 --> 00:49:53,609
such a complex thing where you figure

1204
00:49:52,199 --> 00:49:56,819
that showing at least the strategies

1205
00:49:53,609 --> 00:49:59,759
that we used to build a class that works

1206
00:49:56,819 --> 00:50:00,959
so well was useful and so yeah that's

1207
00:49:59,759 --> 00:50:02,910
absolutely something that we're trying

1208
00:50:00,959 --> 00:50:04,499
to figure out how to get out there and

1209
00:50:02,910 --> 00:50:07,348
get more people in but yeah the 2015

1210
00:50:04,499 --> 00:50:09,839
version of the course which is available

1211
00:50:07,349 --> 00:50:12,959
on github and so there's the most recent

1212
00:50:09,839 --> 00:50:13,410
2018 wargame platform stuff that we just

1213
00:50:12,959 --> 00:50:17,479
showed

1214
00:50:13,410 --> 00:50:17,479
that's how that so yep

1215
00:50:18,020 --> 00:50:22,680
you follow us on Twitter lots of people

1216
00:50:21,150 --> 00:50:26,670
like us on Twitter you're going to email

1217
00:50:22,680 --> 00:50:30,629
us we got a website right - IO is our

1218
00:50:26,670 --> 00:50:35,730
website it's pretty simple right -

1219
00:50:30,630 --> 00:50:37,020
systems yep yeah and so this our company

1220
00:50:35,730 --> 00:50:39,450
name - actually I play on a common

1221
00:50:37,020 --> 00:50:41,700
exploit technique known as Rhett -

1222
00:50:39,450 --> 00:50:45,859
Lipsey or sometimes a right to system

1223
00:50:41,700 --> 00:50:52,410
and so that's a time where it comes from

1224
00:50:45,860 --> 00:50:53,610
any other questions all right well

1225
00:50:52,410 --> 00:50:56,600
thanks for coming

1226
00:50:53,610 --> 00:50:56,600
that's all we got

