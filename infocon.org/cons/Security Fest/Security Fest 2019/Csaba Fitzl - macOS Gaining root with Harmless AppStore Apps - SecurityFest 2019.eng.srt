1
00:00:00,000 --> 00:00:07,010
my name is Chava it's my second time

2
00:00:04,069 --> 00:00:11,910
talking here and I am really pleased to

3
00:00:07,010 --> 00:00:16,789
to come back and I will talk about some

4
00:00:11,910 --> 00:00:21,539
Mac OS box today partially also about

5
00:00:16,789 --> 00:00:24,269
local privilege escalation on Mac OS but

6
00:00:21,539 --> 00:00:27,510
that that's just part of the entire

7
00:00:24,269 --> 00:00:32,040
story so who worse about myself right

8
00:00:27,510 --> 00:00:35,489
now I'm working as a red teamer i was in

9
00:00:32,040 --> 00:00:38,910
a blue team for five years before and i

10
00:00:35,489 --> 00:00:45,328
think red team is much more fun just as

11
00:00:38,910 --> 00:00:48,899
Hugo said but I think a successful red

12
00:00:45,329 --> 00:00:52,410
team we make the blue team also more

13
00:00:48,899 --> 00:00:54,000
successful so the two teams really

14
00:00:52,410 --> 00:00:56,699
shouldn't look on each other as enemies

15
00:00:54,000 --> 00:00:59,719
they are there for the same purpose to

16
00:00:56,699 --> 00:01:03,629
improve the security at a company and

17
00:00:59,719 --> 00:01:06,960
and they should actually improve each

18
00:01:03,629 --> 00:01:09,570
other and that's that's very important I

19
00:01:06,960 --> 00:01:12,059
hear sometimes I hear stories that the

20
00:01:09,570 --> 00:01:15,990
two teams leucon each other as as

21
00:01:12,060 --> 00:01:20,299
enemies but that shouldn't be the case

22
00:01:15,990 --> 00:01:25,699
it should be really like a purple team

23
00:01:20,299 --> 00:01:30,000
so I also maintain a Python toolkit for

24
00:01:25,700 --> 00:01:33,780
using kernel exploitation I have wife

25
00:01:30,000 --> 00:01:36,600
two kids they are with me in göteborg

26
00:01:33,780 --> 00:01:42,090
they are doing the sightseeing and and

27
00:01:36,600 --> 00:01:48,630
fun I like to do hiking and yoga in my

28
00:01:42,090 --> 00:01:51,960
free time beyond doing security stop so

29
00:01:48,630 --> 00:01:54,089
I mentioned that the privilege

30
00:01:51,960 --> 00:01:56,389
escalation vulnerability in Mac OS is

31
00:01:54,090 --> 00:02:02,490
just part of the entire presentation

32
00:01:56,390 --> 00:02:06,329
what I try to do here is making a story

33
00:02:02,490 --> 00:02:08,399
or showing a story because originally

34
00:02:06,329 --> 00:02:11,819
when I started my research I didn't look

35
00:02:08,399 --> 00:02:13,140
for Mac OS bunker or a privilege

36
00:02:11,819 --> 00:02:16,410
escalation

37
00:02:13,140 --> 00:02:19,380
issue I started somewhere completely US

38
00:02:16,410 --> 00:02:23,280
and I started to go down the rabbit hole

39
00:02:19,380 --> 00:02:26,340
and went down and down and I got

40
00:02:23,280 --> 00:02:29,550
completely distracted from from my

41
00:02:26,340 --> 00:02:32,430
original research and and I think this

42
00:02:29,550 --> 00:02:37,380
is how many times research is is

43
00:02:32,430 --> 00:02:46,410
actually happening can I start this

44
00:02:37,380 --> 00:02:49,620
timer somehow yeah so what I will talk

45
00:02:46,410 --> 00:02:52,770
about first I will cover talk a few

46
00:02:49,620 --> 00:02:57,420
words about die liebe dilip hijacking on

47
00:02:52,770 --> 00:02:59,250
on Mac OS what spots dead and then how

48
00:02:57,420 --> 00:03:02,459
we can sub where the installation

49
00:02:59,250 --> 00:03:06,000
process on my course how we can develop

50
00:03:02,460 --> 00:03:07,740
an app for the App Store and then I will

51
00:03:06,000 --> 00:03:11,070
talk about the privilege escalation on

52
00:03:07,740 --> 00:03:14,280
High Sierra then us about how we can

53
00:03:11,070 --> 00:03:17,160
modify installers on Mac OS how we can

54
00:03:14,280 --> 00:03:20,520
redistribute paid apps and at the end

55
00:03:17,160 --> 00:03:26,480
also about an other kind of the same

56
00:03:20,520 --> 00:03:31,709
privilege escalation but a more half so

57
00:03:26,480 --> 00:03:34,019
originally we I wanted to find dilip

58
00:03:31,709 --> 00:03:36,180
hijacking vulnerability in a given

59
00:03:34,020 --> 00:03:40,800
application so that's why I started the

60
00:03:36,180 --> 00:03:44,160
the entire research I didn't found but

61
00:03:40,800 --> 00:03:50,670
it involved other things but what is

62
00:03:44,160 --> 00:03:53,489
dilip hijacking there is a guide called

63
00:03:50,670 --> 00:03:56,429
Patrick Vidal who did this entire

64
00:03:53,489 --> 00:03:59,580
research on on dilip hijacking on Mac OS

65
00:03:56,430 --> 00:04:02,280
a couple of years ago you can watch his

66
00:03:59,580 --> 00:04:04,980
presentation which is pretty cool on

67
00:04:02,280 --> 00:04:08,160
YouTube he did attend Def Con or black

68
00:04:04,980 --> 00:04:11,820
hat I think so this is just a very very

69
00:04:08,160 --> 00:04:15,120
short and brief summary of his research

70
00:04:11,820 --> 00:04:19,680
just so you understand what this stuff

71
00:04:15,120 --> 00:04:24,090
is how many people use Mac OS here as

72
00:04:19,680 --> 00:04:26,169
there oh that that's a lot so if for

73
00:04:24,090 --> 00:04:30,580
those who don't know a die liebe

74
00:04:26,169 --> 00:04:34,270
is is a dynamic library and it's like

75
00:04:30,580 --> 00:04:38,169
dll on Windows just this one is on Mac

76
00:04:34,270 --> 00:04:40,628
OS so there are two types of deliver

77
00:04:38,169 --> 00:04:46,438
checking on Mac OS the first type is

78
00:04:40,629 --> 00:04:49,749
weak loading of die ellipse basically

79
00:04:46,439 --> 00:04:52,870
there is a loader or the LC load weak

80
00:04:49,749 --> 00:04:57,520
die lip function whenever it tries to

81
00:04:52,870 --> 00:05:00,129
load a die lip from the file system it

82
00:04:57,520 --> 00:05:02,710
will check if it's there now if it's not

83
00:05:00,129 --> 00:05:04,509
there then it essentially carry two you

84
00:05:02,710 --> 00:05:08,198
still load the applications or your

85
00:05:04,509 --> 00:05:12,520
application will still work without this

86
00:05:08,199 --> 00:05:15,520
die liebe in that case what you can do

87
00:05:12,520 --> 00:05:17,589
is if the application is trying to load

88
00:05:15,520 --> 00:05:20,948
something which is not there you can

89
00:05:17,589 --> 00:05:23,379
just place your malicious pile it there

90
00:05:20,949 --> 00:05:27,069
and get it loaded and get command

91
00:05:23,379 --> 00:05:31,240
execution on the system so that's pretty

92
00:05:27,069 --> 00:05:38,169
easy the second type is the rampart

93
00:05:31,240 --> 00:05:40,599
dependent die lips this is in its logic

94
00:05:38,169 --> 00:05:43,750
it's very similar to how DLL hijacking

95
00:05:40,599 --> 00:05:49,060
is usually done on Windows so basically

96
00:05:43,750 --> 00:05:53,889
the loader on Mac OS will will have a

97
00:05:49,060 --> 00:05:56,169
search path and it will search the

98
00:05:53,889 --> 00:05:58,060
required die liebe through those paths

99
00:05:56,169 --> 00:05:59,979
and if it doesn't find it on the first

100
00:05:58,060 --> 00:06:01,409
path it will go to the second third and

101
00:05:59,979 --> 00:06:04,779
so on

102
00:06:01,409 --> 00:06:07,810
and once it's fine the die liebe it will

103
00:06:04,779 --> 00:06:12,189
load it now if we use the first one that

104
00:06:07,810 --> 00:06:15,279
it finds so it what you can do is when

105
00:06:12,189 --> 00:06:17,289
it goes through the search and there is

106
00:06:15,279 --> 00:06:19,899
a hit there is no hit for the first

107
00:06:17,289 --> 00:06:22,870
search then you can place your die lip

108
00:06:19,899 --> 00:06:27,339
there and then it will be loaded and you

109
00:06:22,870 --> 00:06:30,270
can get command execution again that's

110
00:06:27,339 --> 00:06:32,460
also pretty easy so how do you find

111
00:06:30,270 --> 00:06:37,169
applications that are vulnerable

112
00:06:32,460 --> 00:06:39,700
you take Patrick's DHS tool run it and

113
00:06:37,169 --> 00:06:41,289
get the result so it will give you

114
00:06:39,700 --> 00:06:45,190
or the application which are vulnerable

115
00:06:41,290 --> 00:06:47,710
it couldn't be easier there is another

116
00:06:45,190 --> 00:06:49,540
thing you can do if you go to the

117
00:06:47,710 --> 00:06:58,419
terminal

118
00:06:49,540 --> 00:07:01,570
you can type in this dyd print air pods

119
00:06:58,420 --> 00:07:06,160
to one and whenever you try to load or

120
00:07:01,570 --> 00:07:08,800
start an application it will print to

121
00:07:06,160 --> 00:07:12,160
you that air pass/fail to expanding and

122
00:07:08,800 --> 00:07:16,000
it will give you the entire past where

123
00:07:12,160 --> 00:07:18,730
it try to find the die lip and basically

124
00:07:16,000 --> 00:07:22,750
you can use that part and place your

125
00:07:18,730 --> 00:07:27,760
father how we exploit this one orbit is

126
00:07:22,750 --> 00:07:31,870
you make a code C code this is a dumb

127
00:07:27,760 --> 00:07:34,810
example there is a constructor that it

128
00:07:31,870 --> 00:07:39,220
will be called whenever your executable

129
00:07:34,810 --> 00:07:44,580
is is being run you compile it you have

130
00:07:39,220 --> 00:07:48,460
to fix or talib the die leaf has to

131
00:07:44,580 --> 00:07:51,250
fulfill some requirements like the

132
00:07:48,460 --> 00:07:55,120
version have to be the one that the

133
00:07:51,250 --> 00:07:57,400
application is looking for and it also

134
00:07:55,120 --> 00:08:04,680
has to export the same function as the

135
00:07:57,400 --> 00:08:07,929
original one and and that's it now oops

136
00:08:04,680 --> 00:08:10,630
to fix the die lip there is a tool

137
00:08:07,930 --> 00:08:14,500
created by again Patrick with this

138
00:08:10,630 --> 00:08:16,840
research it's a Python script you give

139
00:08:14,500 --> 00:08:19,870
it your die liebe you give it the

140
00:08:16,840 --> 00:08:22,179
original one which is working and it

141
00:08:19,870 --> 00:08:25,030
will fix the version for you it will

142
00:08:22,180 --> 00:08:28,960
update its export table and your die

143
00:08:25,030 --> 00:08:32,319
liebe actually will refer back to the

144
00:08:28,960 --> 00:08:34,199
original one and because whenever the

145
00:08:32,320 --> 00:08:36,460
application is loading your die liebe

146
00:08:34,200 --> 00:08:40,300
you still want the application to

147
00:08:36,460 --> 00:08:42,490
function so it will refer back to the

148
00:08:40,299 --> 00:08:45,250
original idea for the actual function

149
00:08:42,490 --> 00:08:49,170
implementation so your application will

150
00:08:45,250 --> 00:08:53,230
still work and nothing will be broken

151
00:08:49,170 --> 00:08:55,270
again this entire finding the exploits

152
00:08:53,230 --> 00:08:59,170
or the vulnerable application and

153
00:08:55,270 --> 00:09:05,610
actually exploiting it it's very very

154
00:08:59,170 --> 00:09:10,510
easy there are many cases so there are a

155
00:09:05,610 --> 00:09:13,000
bunch of these in Microsoft Office the

156
00:09:10,510 --> 00:09:16,750
problem is that if you install Microsoft

157
00:09:13,000 --> 00:09:22,420
Office on a Mac OS you install it as

158
00:09:16,750 --> 00:09:25,210
root so as a as an user like an even if

159
00:09:22,420 --> 00:09:28,000
you are an admin you are not root so you

160
00:09:25,210 --> 00:09:30,040
cannot just place a file into the

161
00:09:28,000 --> 00:09:33,600
Microsoft Office folder you have to

162
00:09:30,040 --> 00:09:36,370
authenticate to elevate your privileges

163
00:09:33,600 --> 00:09:39,040
and so because you need root privileges

164
00:09:36,370 --> 00:09:41,980
to place a die liebe into Microsoft

165
00:09:39,040 --> 00:09:43,890
Office folder Microsoft said they don't

166
00:09:41,980 --> 00:09:45,840
really consider this as a security bug

167
00:09:43,890 --> 00:09:48,250
Avira

168
00:09:45,840 --> 00:09:51,190
had the same issue they said they will

169
00:09:48,250 --> 00:09:55,870
actually fix it and there are many other

170
00:09:51,190 --> 00:10:00,600
cases like xcode is full of these box

171
00:09:55,870 --> 00:10:04,620
but again the xcode is installed as root

172
00:10:00,600 --> 00:10:10,840
so you actually have to be root to

173
00:10:04,620 --> 00:10:16,440
exploit these vulnerabilities so and

174
00:10:10,840 --> 00:10:16,440
this is where i get distracted because

175
00:10:20,010 --> 00:10:27,370
what i run into is that i need root

176
00:10:23,500 --> 00:10:31,120
privileges to place malicious or my die

177
00:10:27,370 --> 00:10:35,290
lib into these applications folders so I

178
00:10:31,120 --> 00:10:38,680
cannot just do a hijacking and I started

179
00:10:35,290 --> 00:10:41,349
to wonder ok what I can do about it and

180
00:10:38,680 --> 00:10:44,140
anyway why applications are there as

181
00:10:41,350 --> 00:10:47,620
root and if you actually look on the

182
00:10:44,140 --> 00:10:51,250
Applications folder in Mac OS you will

183
00:10:47,620 --> 00:10:53,890
run into two cases in one case the

184
00:10:51,250 --> 00:10:58,030
application of the actual application

185
00:10:53,890 --> 00:11:00,370
folder will be owned by root and in some

186
00:10:58,030 --> 00:11:03,520
cases the application is all

187
00:11:00,370 --> 00:11:05,500
by the user itself I'm talking here

188
00:11:03,520 --> 00:11:11,949
about an admin user not like a regular

189
00:11:05,500 --> 00:11:14,380
user there are these cases and I started

190
00:11:11,950 --> 00:11:16,180
okay and I started look into this how do

191
00:11:14,380 --> 00:11:18,550
I gather in which cases it's owned by

192
00:11:16,180 --> 00:11:21,819
root in in which cases it's owned by the

193
00:11:18,550 --> 00:11:24,729
user if you install an application from

194
00:11:21,820 --> 00:11:28,110
the app store then the application is

195
00:11:24,730 --> 00:11:30,550
owned by root if you install a package

196
00:11:28,110 --> 00:11:34,089
most of the cases it will require

197
00:11:30,550 --> 00:11:37,750
elevation and again it will be owned by

198
00:11:34,089 --> 00:11:40,270
root there is a third case when you

199
00:11:37,750 --> 00:11:43,620
download an application and you just

200
00:11:40,270 --> 00:11:47,949
drag and drop the application to the

201
00:11:43,620 --> 00:11:50,800
Applications folder in that case it will

202
00:11:47,950 --> 00:11:53,260
be owned by you and that's the only case

203
00:11:50,800 --> 00:11:56,709
when you actually own the application

204
00:11:53,260 --> 00:12:00,279
and you are free to write into the twits

205
00:11:56,710 --> 00:12:04,450
folder and I started to think okay can i

206
00:12:00,279 --> 00:12:07,209
bypass this restriction and the answer

207
00:12:04,450 --> 00:12:10,950
is yes of course otherwise I wouldn't be

208
00:12:07,209 --> 00:12:13,689
here or it would be a very short talk

209
00:12:10,950 --> 00:12:16,420
before I go into details a couple of

210
00:12:13,690 --> 00:12:21,490
tools that can be used for monitoring on

211
00:12:16,420 --> 00:12:23,319
Mac OS one is fire monitor app if you

212
00:12:21,490 --> 00:12:26,680
are familiar with this internals proc

213
00:12:23,320 --> 00:12:29,410
one for Windows this is pretty much

214
00:12:26,680 --> 00:12:33,609
almost the same or very similar for Mac

215
00:12:29,410 --> 00:12:36,760
OS it via monitor events like process

216
00:12:33,610 --> 00:12:43,540
events by system events Network events

217
00:12:36,760 --> 00:12:47,980
for you oops then you have the

218
00:12:43,540 --> 00:12:50,620
objective-c Patrick model the same guy

219
00:12:47,980 --> 00:12:52,420
who talked about dial-up hijacking is

220
00:12:50,620 --> 00:12:56,279
the guy developing all these objective-c

221
00:12:52,420 --> 00:12:59,410
tools he has a problem for library and

222
00:12:56,279 --> 00:13:03,300
also an example executable which can be

223
00:12:59,410 --> 00:13:07,930
used for process monitoring on Mac OS

224
00:13:03,300 --> 00:13:11,530
his example executable will log

225
00:13:07,930 --> 00:13:13,270
you plenty of data like if you start a

226
00:13:11,530 --> 00:13:16,000
process it will give you the process ID

227
00:13:13,270 --> 00:13:20,949
with the user running it what are the

228
00:13:16,000 --> 00:13:25,210
arguments what's the signature of the

229
00:13:20,950 --> 00:13:28,540
older file and so on who is the parent

230
00:13:25,210 --> 00:13:31,750
and punch of information and it's pretty

231
00:13:28,540 --> 00:13:34,810
good if you want to do filesystem

232
00:13:31,750 --> 00:13:39,580
monitoring then you can use the FS usage

233
00:13:34,810 --> 00:13:42,390
tool now this will give you a whole lot

234
00:13:39,580 --> 00:13:46,540
of information I have no idea about

235
00:13:42,390 --> 00:13:50,050
99.9% of the data it prints out this is

236
00:13:46,540 --> 00:13:53,260
super detailed I think you need to do

237
00:13:50,050 --> 00:13:59,079
very very good filtering if you actually

238
00:13:53,260 --> 00:14:02,260
want to get any useful data out of it it

239
00:13:59,080 --> 00:14:12,910
can easily generate you hundreds of

240
00:14:02,260 --> 00:14:16,300
megabytes of data in seconds sorry so

241
00:14:12,910 --> 00:14:21,280
the first case how we can bypass root

242
00:14:16,300 --> 00:14:25,689
permissions in case of the App Store

243
00:14:21,280 --> 00:14:28,959
applications so how we can drop a file

244
00:14:25,690 --> 00:14:32,320
to the Applications folder which is

245
00:14:28,960 --> 00:14:35,230
owned by root so you record the folder

246
00:14:32,320 --> 00:14:38,220
structure so for those who don't know an

247
00:14:35,230 --> 00:14:41,110
application on on mac OS dot app

248
00:14:38,220 --> 00:14:41,620
extension is basically a collection of

249
00:14:41,110 --> 00:14:46,390
files

250
00:14:41,620 --> 00:14:48,760
it's a folder structure basically you

251
00:14:46,390 --> 00:14:50,800
record the folders actually you use

252
00:14:48,760 --> 00:14:54,220
Explorer where do you want to drop your

253
00:14:50,800 --> 00:14:56,800
file basically you delete the

254
00:14:54,220 --> 00:15:01,540
application so on Mac OS if you go to

255
00:14:56,800 --> 00:15:03,969
the launch pad you can delete the App

256
00:15:01,540 --> 00:15:07,089
Store applications as a normal user you

257
00:15:03,970 --> 00:15:11,350
don't have to authenticate you can just

258
00:15:07,090 --> 00:15:15,330
delete the application then you recreate

259
00:15:11,350 --> 00:15:19,720
the folders now you as an admin user

260
00:15:15,330 --> 00:15:21,140
have write access to the application

261
00:15:19,720 --> 00:15:24,290
folder

262
00:15:21,140 --> 00:15:28,220
so let's say I have this parser that app

263
00:15:24,290 --> 00:15:33,349
I can recreate the folder any folders

264
00:15:28,220 --> 00:15:38,210
and I can drop there any file I want now

265
00:15:33,350 --> 00:15:41,240
you reinstall the application and there

266
00:15:38,210 --> 00:15:45,410
you go your application will be

267
00:15:41,240 --> 00:15:48,950
installed on top of the folders you

268
00:15:45,410 --> 00:15:50,420
created and when you install an

269
00:15:48,950 --> 00:15:55,130
application from the App Store

270
00:15:50,420 --> 00:15:58,130
again you don't have to authenticate to

271
00:15:55,130 --> 00:16:01,310
be root you can just say ok install this

272
00:15:58,130 --> 00:16:03,170
application or something like that when

273
00:16:01,310 --> 00:16:06,380
you buy the application for the first

274
00:16:03,170 --> 00:16:10,849
time you have to enter your Apple ID

275
00:16:06,380 --> 00:16:15,980
password unless you saved it as a cash

276
00:16:10,850 --> 00:16:19,090
password for free apps but this this is

277
00:16:15,980 --> 00:16:22,400
also not for elevating your privileges

278
00:16:19,090 --> 00:16:24,370
because you are not entering your local

279
00:16:22,400 --> 00:16:28,970
user password you are entering your

280
00:16:24,370 --> 00:16:33,260
Apple ID password so this is pretty easy

281
00:16:28,970 --> 00:16:39,170
and you can basically and if I to the to

282
00:16:33,260 --> 00:16:43,430
the application folder now this is fixed

283
00:16:39,170 --> 00:16:45,640
today so it no longer works I will talk

284
00:16:43,430 --> 00:16:49,729
about that later

285
00:16:45,640 --> 00:16:52,510
and it's it's a bit like if I want to

286
00:16:49,730 --> 00:16:57,140
compare it to the Windows word it's like

287
00:16:52,510 --> 00:17:02,350
the admin user having write access to

288
00:16:57,140 --> 00:17:05,780
the to the Program Files now on Windows

289
00:17:02,350 --> 00:17:08,510
the admin user has the right access the

290
00:17:05,780 --> 00:17:13,579
Program Files folder but only if it's

291
00:17:08,510 --> 00:17:15,920
running as high integrity mode and if

292
00:17:13,579 --> 00:17:21,470
you go from medium to high then you get

293
00:17:15,920 --> 00:17:23,950
this nice UAC prompt to authenticate to

294
00:17:21,470 --> 00:17:27,110
be admin which is usually just say yes

295
00:17:23,950 --> 00:17:32,420
you want to do it but Microsoft doesn't

296
00:17:27,109 --> 00:17:33,959
consider this is a security boundary now

297
00:17:32,420 --> 00:17:37,320
on Mac OS

298
00:17:33,960 --> 00:17:44,220
if you go from admin to root this that

299
00:17:37,320 --> 00:17:46,260
is the second security boundary so I

300
00:17:44,220 --> 00:17:49,799
started talking this okay

301
00:17:46,260 --> 00:17:53,279
nice I can drop a file to an application

302
00:17:49,799 --> 00:17:58,799
folder but can I do something else

303
00:17:53,279 --> 00:18:03,390
what about symlinks so what I discovered

304
00:17:58,799 --> 00:18:06,210
is that symlinks were followed the

305
00:18:03,390 --> 00:18:10,649
installer which is installing the app

306
00:18:06,210 --> 00:18:15,419
store files is running as root and it

307
00:18:10,649 --> 00:18:18,299
will follow symlinks and it will drop or

308
00:18:15,419 --> 00:18:23,809
install files where your sim link is

309
00:18:18,299 --> 00:18:27,200
point so basically you can drop any file

310
00:18:23,809 --> 00:18:31,200
that is in the application package

311
00:18:27,200 --> 00:18:33,320
almost anywhere on the file system I'm

312
00:18:31,200 --> 00:18:39,390
saying almost

313
00:18:33,320 --> 00:18:41,520
because first how you do it so again you

314
00:18:39,390 --> 00:18:43,919
see where do you want to drop it you

315
00:18:41,520 --> 00:18:47,629
delete the application you recreate the

316
00:18:43,919 --> 00:18:51,690
folders you create a symlink

317
00:18:47,630 --> 00:18:59,640
you reinstall the application now in

318
00:18:51,690 --> 00:19:02,190
this case this is the sim link the the

319
00:18:59,640 --> 00:19:06,419
Mac OS father is the one containing the

320
00:19:02,190 --> 00:19:11,279
main executable and it's pointing to the

321
00:19:06,419 --> 00:19:15,690
opt folder which means that anything in

322
00:19:11,279 --> 00:19:21,510
this folder will be put into this one

323
00:19:15,690 --> 00:19:27,149
then the application is installed that's

324
00:19:21,510 --> 00:19:30,270
kind of cool but what we cannot do so Oh

325
00:19:27,149 --> 00:19:32,570
Mac OS if the folder is protected by a

326
00:19:30,270 --> 00:19:32,570
sip

327
00:19:34,760 --> 00:19:42,679
you cannot write there even if you are

328
00:19:37,860 --> 00:19:44,530
running as root and you cannot overwrite

329
00:19:42,679 --> 00:19:48,970
various

330
00:19:44,530 --> 00:19:52,139
any fire you want like what I wanted to

331
00:19:48,970 --> 00:19:57,240
do is let's say I have a fight called a

332
00:19:52,140 --> 00:20:03,850
summer and I have another file called B

333
00:19:57,240 --> 00:20:09,510
in the actual application package and I

334
00:20:03,850 --> 00:20:13,060
want that B to replace a now I spent

335
00:20:09,510 --> 00:20:15,370
plenty of hours with experimenting with

336
00:20:13,060 --> 00:20:20,700
this and and I realize that I cannot do

337
00:20:15,370 --> 00:20:23,260
it and I run a very simple experiment

338
00:20:20,700 --> 00:20:27,490
the reason you cannot do it is because

339
00:20:23,260 --> 00:20:31,240
the app is moved into the application

340
00:20:27,490 --> 00:20:34,000
folder so when you first download the so

341
00:20:31,240 --> 00:20:36,850
when you install the application from

342
00:20:34,000 --> 00:20:40,300
the App Store it's downloaded to one

343
00:20:36,850 --> 00:20:42,070
location it's undergoing some checks and

344
00:20:40,300 --> 00:20:45,280
then it's being moved to the

345
00:20:42,070 --> 00:20:46,030
Applications folder so I did a simple

346
00:20:45,280 --> 00:20:50,889
experiment

347
00:20:46,030 --> 00:20:54,540
I created a file called a I put into

348
00:20:50,890 --> 00:20:59,050
some content then I created a symlink

349
00:20:54,540 --> 00:21:03,399
be pointing to a so you see I have a

350
00:20:59,050 --> 00:21:07,540
file a and I have be pointing to a now

351
00:21:03,400 --> 00:21:10,440
if I print out the contents of B that

352
00:21:07,540 --> 00:21:16,480
will give me the contents of the file a

353
00:21:10,440 --> 00:21:19,530
if I write in to B and then again print

354
00:21:16,480 --> 00:21:24,730
out the contents of B we will see that

355
00:21:19,530 --> 00:21:28,000
it's being written into a basically now

356
00:21:24,730 --> 00:21:33,300
what I want to do is have a terse file

357
00:21:28,000 --> 00:21:37,750
called C you can see it here you have a

358
00:21:33,300 --> 00:21:44,790
be pointing to a and C and I want to

359
00:21:37,750 --> 00:21:48,460
move C into B and my hope would be that

360
00:21:44,790 --> 00:21:51,760
the contents of C are being written into

361
00:21:48,460 --> 00:21:56,360
a but that's not the case so what's

362
00:21:51,760 --> 00:22:01,940
happening is basically C

363
00:21:56,360 --> 00:22:09,559
is over writing B and we no longer have

364
00:22:01,940 --> 00:22:13,850
a symlink pointing to a so I cannot take

365
00:22:09,559 --> 00:22:19,690
a file and put its contents into some

366
00:22:13,850 --> 00:22:22,668
other file I want to but still I can

367
00:22:19,690 --> 00:22:25,730
drop all the apps or files anywhere on

368
00:22:22,669 --> 00:22:29,779
the file system and I started talking

369
00:22:25,730 --> 00:22:33,289
can I get like root privileges with this

370
00:22:29,779 --> 00:22:35,899
method what way can I achieve root me

371
00:22:33,289 --> 00:22:39,769
dropping this files and I had a couple

372
00:22:35,899 --> 00:22:41,510
of ideas like let's say I have a file in

373
00:22:39,769 --> 00:22:47,139
the App Store in a given application

374
00:22:41,510 --> 00:22:51,950
which has the same name exact same name

375
00:22:47,139 --> 00:22:54,949
we of an executable which is order the

376
00:22:51,950 --> 00:22:56,840
running as root on my local system in

377
00:22:54,950 --> 00:23:02,570
that case I can just replace that fight

378
00:22:56,840 --> 00:23:06,559
because they call the same or Mac OS is

379
00:23:02,570 --> 00:23:10,340
originally based on FreeBSD so there is

380
00:23:06,559 --> 00:23:13,399
cron job cron tasks I can take a file

381
00:23:10,340 --> 00:23:18,110
that is named as root and it has a cron

382
00:23:13,399 --> 00:23:18,860
job inside it and place it in the US Le

383
00:23:18,110 --> 00:23:24,289
Brun tabs

384
00:23:18,860 --> 00:23:26,629
order maybe there are no such files in

385
00:23:24,289 --> 00:23:30,789
the App Store but you create your own

386
00:23:26,630 --> 00:23:34,370
app and then potentially you can push

387
00:23:30,789 --> 00:23:35,960
this to the App Store or you can do the

388
00:23:34,370 --> 00:23:48,250
same with dye lips

389
00:23:35,960 --> 00:23:52,159
basically so at this point I said okay I

390
00:23:48,250 --> 00:23:55,450
unlikely to find any file in the App

391
00:23:52,159 --> 00:23:58,279
Store that will satisfy my needs

392
00:23:55,450 --> 00:24:01,700
actually Xcode had a couple of has a

393
00:23:58,279 --> 00:24:04,340
couple of cron job files but they are

394
00:24:01,700 --> 00:24:08,059
not named as root so the crunch of I

395
00:24:04,340 --> 00:24:09,959
have to have the name of root in order

396
00:24:08,059 --> 00:24:14,580
to be executed as root

397
00:24:09,960 --> 00:24:17,960
and there are also no apps that I found

398
00:24:14,580 --> 00:24:21,269
that could replace another legitimate

399
00:24:17,960 --> 00:24:23,960
application so I was I'm lazy I will

400
00:24:21,269 --> 00:24:28,980
just send this to Apple that there is a

401
00:24:23,960 --> 00:24:32,190
theoretical previous collision on Mac OS

402
00:24:28,980 --> 00:24:35,340
and I hope they will fix it now they

403
00:24:32,190 --> 00:24:39,149
came back and they said our vetting

404
00:24:35,340 --> 00:24:42,980
process will find the malicious apps and

405
00:24:39,149 --> 00:24:46,039
I mean okay this is not what I meant

406
00:24:42,980 --> 00:24:49,769
the application is not malicious it's

407
00:24:46,039 --> 00:24:53,369
you use the application in a malicious

408
00:24:49,769 --> 00:24:59,720
way so we had some miscommunications

409
00:24:53,369 --> 00:25:04,168
there and I said okay I will try harder

410
00:24:59,720 --> 00:25:10,950
and I will create an app to show you

411
00:25:04,169 --> 00:25:14,549
that yes this can be done now I never

412
00:25:10,950 --> 00:25:17,070
coded in objective-c or Swift and this

413
00:25:14,549 --> 00:25:20,549
is this was the first this is why I

414
00:25:17,070 --> 00:25:23,129
wanted to avoid this so I started to

415
00:25:20,549 --> 00:25:25,860
plan an application and it had to be

416
00:25:23,129 --> 00:25:28,918
some useful application so I decided I

417
00:25:25,860 --> 00:25:33,629
will do an application which can edit or

418
00:25:28,919 --> 00:25:36,840
create cron job files I purchased the

419
00:25:33,629 --> 00:25:39,719
developer ID and when it came to the

420
00:25:36,840 --> 00:25:42,720
language of choice I decided to go with

421
00:25:39,720 --> 00:25:43,940
Swift because I hated the syntax of

422
00:25:42,720 --> 00:25:48,690
objective-c

423
00:25:43,940 --> 00:25:51,779
so I went on and learn Swift through a

424
00:25:48,690 --> 00:25:56,159
CBT it turned out that there is Swift

425
00:25:51,779 --> 00:25:59,070
one two three four and they are all

426
00:25:56,159 --> 00:26:03,840
different in the scene in their syntax a

427
00:25:59,070 --> 00:26:08,369
little bit but eventually I learned sift

428
00:26:03,840 --> 00:26:09,928
and and I created the application now

429
00:26:08,369 --> 00:26:13,439
how do you push an application to the

430
00:26:09,929 --> 00:26:17,610
store first you register a bundle ID

431
00:26:13,440 --> 00:26:19,030
this is like the calm that my company

432
00:26:17,610 --> 00:26:22,919
dot

433
00:26:19,030 --> 00:26:26,410
my name of the application or whatever

434
00:26:22,920 --> 00:26:29,880
you create an application populate all

435
00:26:26,410 --> 00:26:35,520
the details and you can upload via Xcode

436
00:26:29,880 --> 00:26:35,520
to the store it's pretty straightforward

437
00:26:36,900 --> 00:26:46,840
and then I say created my app and

438
00:26:42,990 --> 00:26:51,220
started the submission and then you have

439
00:26:46,840 --> 00:26:55,270
this time issue if you make a mistake in

440
00:26:51,220 --> 00:26:59,140
your app it will have a cost of 24 hours

441
00:26:55,270 --> 00:27:03,060
because that's the average time it takes

442
00:26:59,140 --> 00:27:06,490
for Apple to review your submission and

443
00:27:03,060 --> 00:27:08,889
and it can be super annoying when you

444
00:27:06,490 --> 00:27:10,960
know that you are very close to making a

445
00:27:08,890 --> 00:27:13,930
success will exploit it and you make a

446
00:27:10,960 --> 00:27:16,990
small mistake and then you need to wait

447
00:27:13,930 --> 00:27:20,050
one day and so this is what happened I

448
00:27:16,990 --> 00:27:23,200
made my first push waited 24 hours and

449
00:27:20,050 --> 00:27:27,940
they rejected it and they said there is

450
00:27:23,200 --> 00:27:30,310
no proper closing of the application so

451
00:27:27,940 --> 00:27:32,560
when I press the X button the

452
00:27:30,310 --> 00:27:35,530
application doesn't exist this is like a

453
00:27:32,560 --> 00:27:39,250
one-line fix for the application so I

454
00:27:35,530 --> 00:27:41,950
push it again fixed it push it again it

455
00:27:39,250 --> 00:27:43,810
got actually approved and then I

456
00:27:41,950 --> 00:27:47,080
realized that it doesn't work on Mojave

457
00:27:43,810 --> 00:27:51,340
and I was really sad I said no problem I

458
00:27:47,080 --> 00:27:55,659
have a High Sierra VM and I will try it

459
00:27:51,340 --> 00:27:58,030
there and then when I try to try to

460
00:27:55,660 --> 00:28:01,150
install it on High Sierra the

461
00:27:58,030 --> 00:28:05,230
application said the minimum requirement

462
00:28:01,150 --> 00:28:09,310
is Mojave and I mean oh no this is like

463
00:28:05,230 --> 00:28:11,560
a setting for the application to compile

464
00:28:09,310 --> 00:28:15,610
it for High Sierra Mojave Sierra

465
00:28:11,560 --> 00:28:19,659
whatever you want but again it's 24 hour

466
00:28:15,610 --> 00:28:23,020
waiting for publishing it again it got

467
00:28:19,660 --> 00:28:26,890
approved eventually Angus it worked on

468
00:28:23,020 --> 00:28:29,410
High Sierra this is the application so

469
00:28:26,890 --> 00:28:33,750
actually I created a useful application

470
00:28:29,410 --> 00:28:36,399
so you can like create cron job files

471
00:28:33,750 --> 00:28:39,250
recently I realized that people are

472
00:28:36,399 --> 00:28:43,178
using this application because it's

473
00:28:39,250 --> 00:28:48,700
still in the App Store I don't think

474
00:28:43,179 --> 00:28:52,750
anyone uses it as I use it but you can

475
00:28:48,700 --> 00:28:55,659
use it legitimately so what's how

476
00:28:52,750 --> 00:28:57,580
privilege escalation is working so this

477
00:28:55,659 --> 00:29:03,940
application has a couple of examples in

478
00:28:57,580 --> 00:29:08,590
it like an example for loot which we run

479
00:29:03,940 --> 00:29:11,320
this script every minute you recreate

480
00:29:08,590 --> 00:29:14,830
the folders you install the application

481
00:29:11,320 --> 00:29:17,668
you create a slip file and you get a

482
00:29:14,830 --> 00:29:19,949
terminal running as root but let's see

483
00:29:17,669 --> 00:29:23,529
how it works in a minute

484
00:29:19,950 --> 00:29:28,750
they actually fixed it so it stopped

485
00:29:23,529 --> 00:29:31,659
working and more details on the fix

486
00:29:28,750 --> 00:29:35,470
later so this was back last October and

487
00:29:31,659 --> 00:29:37,450
that time I told that the issue is fixed

488
00:29:35,470 --> 00:29:39,940
and I never really done a proper

489
00:29:37,450 --> 00:29:42,460
verification of the fix itself how they

490
00:29:39,940 --> 00:29:44,140
fixed it it turned out later on that

491
00:29:42,460 --> 00:29:47,380
they didn't fix it the way it should

492
00:29:44,140 --> 00:29:52,110
have been fixed so I have a video

493
00:29:47,380 --> 00:29:52,110
showing this

494
00:29:56,230 --> 00:30:14,799
I will do some forwards here so this is

495
00:30:08,289 --> 00:30:17,559
the application from the app store I go

496
00:30:14,799 --> 00:30:21,010
into the application folder we can see

497
00:30:17,559 --> 00:30:29,610
it's not there right now and I'm running

498
00:30:21,010 --> 00:30:36,970
as a normal user not as route I will

499
00:30:29,610 --> 00:30:40,899
create the application folder and all

500
00:30:36,970 --> 00:30:44,230
the required directories all the example

501
00:30:40,899 --> 00:30:46,860
files are on different files in the

502
00:30:44,230 --> 00:30:50,860
resources folder inside the application

503
00:30:46,860 --> 00:30:54,779
so what I do is I'm redirecting the

504
00:30:50,860 --> 00:31:04,360
resources folder into the cron job

505
00:30:54,779 --> 00:31:06,610
folder that folder is not listed up for

506
00:31:04,360 --> 00:31:08,649
the normal users so I have to do sudo to

507
00:31:06,610 --> 00:31:16,779
show that it's empty

508
00:31:08,649 --> 00:31:21,789
right now and then I go ahead install

509
00:31:16,779 --> 00:31:24,309
the application and then if we list

510
00:31:21,789 --> 00:31:27,940
again the contents of the cruncher

511
00:31:24,309 --> 00:31:30,299
folder we can see that it was populated

512
00:31:27,940 --> 00:31:33,700
and we have this root user there a

513
00:31:30,299 --> 00:31:38,230
couple of others but who cares this is

514
00:31:33,700 --> 00:31:43,710
what we care about and what's inside the

515
00:31:38,230 --> 00:31:48,610
root cruncher file is basically that

516
00:31:43,710 --> 00:31:54,639
script I showed you so it will try to

517
00:31:48,610 --> 00:31:57,279
execute this script every minute as it's

518
00:31:54,639 --> 00:32:00,729
in the Applications folder you as an

519
00:31:57,279 --> 00:32:05,370
admin user have write access to that

520
00:32:00,730 --> 00:32:05,370
folder so we can just

521
00:32:06,299 --> 00:32:21,000
create it and we will do a very simple

522
00:32:12,639 --> 00:32:23,769
shy script start terminal we give it

523
00:32:21,000 --> 00:32:29,799
executable rights otherwise it will not

524
00:32:23,769 --> 00:32:37,570
run we are still running as as normal

525
00:32:29,799 --> 00:32:45,580
user and it's seventeen on my VM in

526
00:32:37,570 --> 00:32:55,918
realities was pretty late and once it

527
00:32:45,580 --> 00:32:59,918
will switch to seventeen we will get

528
00:32:55,919 --> 00:33:08,769
another terminal starting up by the cron

529
00:32:59,919 --> 00:33:12,669
job order this is time I can drink yeah

530
00:33:08,769 --> 00:33:18,250
17 we have a new terminal which is

531
00:33:12,669 --> 00:33:24,480
running as root so basically without

532
00:33:18,250 --> 00:33:28,950
doing any anything I go through taxes

533
00:33:24,480 --> 00:33:28,950
with abusing the Installer

534
00:33:37,250 --> 00:33:44,820
the other case and you have a package

535
00:33:39,659 --> 00:33:48,899
file when you if you want to do the same

536
00:33:44,820 --> 00:33:51,830
trick you can do but you can also in

537
00:33:48,899 --> 00:33:55,399
fact in fact an installer so you can

538
00:33:51,830 --> 00:34:00,449
place your file in the Installer itself

539
00:33:55,399 --> 00:34:03,120
it's not really a bypass mmm and there

540
00:34:00,450 --> 00:34:06,450
are a couple of issues if you modify the

541
00:34:03,120 --> 00:34:08,668
package file it will break its

542
00:34:06,450 --> 00:34:12,149
signatures and then gatekeeper via block

543
00:34:08,668 --> 00:34:14,489
it and you need a way to infect the

544
00:34:12,149 --> 00:34:16,609
package file do a man-in-the-middle or

545
00:34:14,489 --> 00:34:21,060
in fact it and then send it to the user

546
00:34:16,609 --> 00:34:24,060
and it will actually also break the

547
00:34:21,060 --> 00:34:27,960
application signatures but gatekeeper we

548
00:34:24,060 --> 00:34:32,940
are not care about because it will only

549
00:34:27,960 --> 00:34:35,940
verify the the package so how can we in

550
00:34:32,940 --> 00:34:40,260
fact an installer we take the package

551
00:34:35,940 --> 00:34:43,500
file unpack it there is a payload inside

552
00:34:40,260 --> 00:34:47,369
the package with the compress that

553
00:34:43,500 --> 00:34:50,310
payload you embed your file Yury

554
00:34:47,369 --> 00:34:55,260
compress the application into the

555
00:34:50,310 --> 00:34:59,339
payload you clean up the junk you will

556
00:34:55,260 --> 00:35:04,500
repackage the file and then on your new

557
00:34:59,339 --> 00:35:10,259
package you you have the file again it's

558
00:35:04,500 --> 00:35:15,630
not that effective you can do it but for

559
00:35:10,260 --> 00:35:17,339
the distributing Bader's so what I also

560
00:35:15,630 --> 00:35:20,160
note is that if if there is a paid

561
00:35:17,339 --> 00:35:26,060
application in the App Store what I can

562
00:35:20,160 --> 00:35:26,060
do take it and run it somewhere else and

563
00:35:26,210 --> 00:35:34,440
that's it basically interestingly most

564
00:35:31,290 --> 00:35:36,420
of the times that there is no

565
00:35:34,440 --> 00:35:38,819
verification by the application if it

566
00:35:36,420 --> 00:35:42,569
was purchased by the user who is running

567
00:35:38,819 --> 00:35:46,800
it as I understand from ever you can do

568
00:35:42,569 --> 00:35:48,300
that but by default Apple itself doesn't

569
00:35:46,800 --> 00:35:51,260
do this verification so

570
00:35:48,300 --> 00:35:54,840
if you buy an application you can just

571
00:35:51,260 --> 00:35:58,050
make a package file and there is an app

572
00:35:54,840 --> 00:36:00,900
store extract utility you can download

573
00:35:58,050 --> 00:36:05,190
from github and it will do it for you

574
00:36:00,900 --> 00:36:08,070
you can give it to somewhere else and it

575
00:36:05,190 --> 00:36:13,140
will run probably in app purchases won't

576
00:36:08,070 --> 00:36:16,340
work but it's still weird to me at least

577
00:36:13,140 --> 00:36:19,410
to be honest now going back to the

578
00:36:16,340 --> 00:36:24,780
previous collation I said that it

579
00:36:19,410 --> 00:36:26,430
stopped working on Mahara and it turned

580
00:36:24,780 --> 00:36:27,690
out that it wasn't properly fixed

581
00:36:26,430 --> 00:36:30,180
because what happened

582
00:36:27,690 --> 00:36:37,080
I made this POC with the contact further

583
00:36:30,180 --> 00:36:39,990
and Mohave the Installer had no had no

584
00:36:37,080 --> 00:36:44,640
access to the cron top folder so I

585
00:36:39,990 --> 00:36:48,540
couldn't drop their files and I told

586
00:36:44,640 --> 00:36:51,240
that it was ultimately fixed but it

587
00:36:48,540 --> 00:36:54,630
turned out that it wasn't because okay

588
00:36:51,240 --> 00:36:57,359
you cannot revise the crontab folder but

589
00:36:54,630 --> 00:37:00,890
you can still drop files to many other

590
00:36:57,360 --> 00:37:05,130
sensitive locations like launch daemon

591
00:37:00,890 --> 00:37:08,190
which is another startup folder and if

592
00:37:05,130 --> 00:37:10,860
you drop a police file into the launch

593
00:37:08,190 --> 00:37:18,270
daemon folder it will be executed as

594
00:37:10,860 --> 00:37:24,240
root upon boot so I decided to do a

595
00:37:18,270 --> 00:37:27,830
second POC that's called startup very

596
00:37:24,240 --> 00:37:30,810
same approach it has example files and

597
00:37:27,830 --> 00:37:34,230
this time you target the launch

598
00:37:30,810 --> 00:37:41,640
daemon folder and I send the second

599
00:37:34,230 --> 00:37:47,480
report wrapper and eventually this has

600
00:37:41,640 --> 00:37:47,480
been fixed like two weeks ago

601
00:37:48,040 --> 00:38:09,370
so this is how it worked in MO hava what

602
00:38:05,080 --> 00:38:14,710
we will do is again create all the

603
00:38:09,370 --> 00:38:17,080
necessary files folders and then we will

604
00:38:14,710 --> 00:38:27,460
create a sim link pointing to the launch

605
00:38:17,080 --> 00:38:32,700
diamond folder and I will list the

606
00:38:27,460 --> 00:38:36,580
contents of that folder there are some

607
00:38:32,700 --> 00:38:41,529
other stuff already in it but there is

608
00:38:36,580 --> 00:38:47,170
nothing about the the other stuff I go

609
00:38:41,530 --> 00:38:51,340
download the application again no front

610
00:38:47,170 --> 00:38:57,130
for elevation I list the contents again

611
00:38:51,340 --> 00:39:03,780
and there are two new plist files that

612
00:38:57,130 --> 00:39:08,740
coming from this startup application and

613
00:39:03,780 --> 00:39:13,800
if we list the contents of this file we

614
00:39:08,740 --> 00:39:19,500
can see that upon boot time running load

615
00:39:13,800 --> 00:39:19,500
it will execute that script

616
00:39:24,080 --> 00:39:31,080
so I go to the application scripts and I

617
00:39:27,630 --> 00:39:34,140
have a bind

618
00:39:31,080 --> 00:39:37,890
pythons punch a Python script it will

619
00:39:34,140 --> 00:39:40,770
basically create a bind Chell when

620
00:39:37,890 --> 00:39:54,140
executed and I need to reboot the

621
00:39:40,770 --> 00:39:58,280
computer for this so let's reboot and

622
00:39:54,140 --> 00:39:58,279
now if I login

623
00:40:02,980 --> 00:40:12,250
and release the open network connections

624
00:40:09,880 --> 00:40:15,400
so we can see it's I'm running as the

625
00:40:12,250 --> 00:40:19,720
normal user again if I list the there is

626
00:40:15,400 --> 00:40:20,970
a listen important elite and I can just

627
00:40:19,720 --> 00:40:31,049
turn it to it

628
00:40:20,970 --> 00:40:31,049
that's a mine shop and yeah you got root

629
00:40:32,820 --> 00:40:48,940
again so what finally it was fixed so I

630
00:40:44,619 --> 00:40:52,930
it was fixed I hope I will not spoil our

631
00:40:48,940 --> 00:40:56,980
Game of Thrones for anyone here this is

632
00:40:52,930 --> 00:40:59,618
how the fix working you place your files

633
00:40:56,980 --> 00:41:01,839
as before you create the application

634
00:40:59,619 --> 00:41:04,680
folder you place your files there and

635
00:41:01,839 --> 00:41:11,970
then the Installer process comes and

636
00:41:04,680 --> 00:41:15,569
wipes it all but if you want to do it so

637
00:41:11,970 --> 00:41:18,578
check it more precisely what happens

638
00:41:15,569 --> 00:41:23,290
this is a screenshot for the fireEye's

639
00:41:18,579 --> 00:41:27,099
monitor tool and finally this is a

640
00:41:23,290 --> 00:41:28,800
proper way fixing the vulnerability what

641
00:41:27,099 --> 00:41:32,650
happens when you install an application

642
00:41:28,800 --> 00:41:37,900
so I tested with the crontab creator in

643
00:41:32,650 --> 00:41:43,569
this case my very first POC what it will

644
00:41:37,900 --> 00:41:47,260
do is you have this folder here that you

645
00:41:43,569 --> 00:41:51,190
created in the application folder and it

646
00:41:47,260 --> 00:41:55,030
will be moved to the install sandbox

647
00:41:51,190 --> 00:41:57,720
trash somewhere so basically it's all

648
00:41:55,030 --> 00:41:57,720
deleted

649
00:42:01,120 --> 00:42:08,920
and it's basically eliminating the other

650
00:42:06,850 --> 00:42:11,890
problem as well that when you cannot

651
00:42:08,920 --> 00:42:16,060
place a file in the application folder

652
00:42:11,890 --> 00:42:18,879
because it will be just white and with

653
00:42:16,060 --> 00:42:21,520
that because it's wiped your siblings

654
00:42:18,880 --> 00:42:23,680
are white everything is white so you can

655
00:42:21,520 --> 00:42:26,830
no longer do this trick with the

656
00:42:23,680 --> 00:42:32,319
privilege escalation weed abusing the

657
00:42:26,830 --> 00:42:38,410
same links closing totes

658
00:42:32,320 --> 00:42:41,320
if you so now this has been fixed but

659
00:42:38,410 --> 00:42:46,390
for the other case if you have an

660
00:42:41,320 --> 00:42:50,740
application in the App Store that you

661
00:42:46,390 --> 00:42:54,850
expect users paying for it it's best if

662
00:42:50,740 --> 00:42:58,810
you do some verification if the user who

663
00:42:54,850 --> 00:43:02,890
runs it purchased it I have no idea how

664
00:42:58,810 --> 00:43:04,630
to do it but that's maybe if you don't

665
00:43:02,890 --> 00:43:10,080
find your application to be ready

666
00:43:04,630 --> 00:43:18,010
tributed maybe it's it's worth doing

667
00:43:10,080 --> 00:43:20,560
thank you okay so you shabba-doo we have

668
00:43:18,010 --> 00:43:24,120
any questions from the audience I have

669
00:43:20,560 --> 00:43:24,120
one over here all right let me run over

670
00:43:25,170 --> 00:43:32,650
was it yeah thanks for the information

671
00:43:30,610 --> 00:43:38,920
did you try the same thing with Android

672
00:43:32,650 --> 00:43:42,910
app read Android yeah I know I tried the

673
00:43:38,920 --> 00:43:45,310
same with I phone the the thing with

674
00:43:42,910 --> 00:43:48,730
iPhone is that you are really running in

675
00:43:45,310 --> 00:43:51,270
a sandbox and you can do anything so you

676
00:43:48,730 --> 00:43:55,200
cannot just write the application folder

677
00:43:51,270 --> 00:43:59,410
on iPhone and I checked the very same

678
00:43:55,200 --> 00:44:01,810
trick on Ubuntu which also has an app

679
00:43:59,410 --> 00:44:03,700
store but it works completely

680
00:44:01,810 --> 00:44:08,270
differently and you cannot do the same

681
00:44:03,700 --> 00:44:13,930
speaking you know going to so

682
00:44:08,270 --> 00:44:20,020
did you try with the Microsoft app no

683
00:44:13,930 --> 00:44:20,020
okay anyone else see all right over here

684
00:44:21,460 --> 00:44:27,500
thank you for a great presentation

685
00:44:24,170 --> 00:44:30,220
I was speaking indeed the Apple reward

686
00:44:27,500 --> 00:44:33,320
you in any way for these findings like

687
00:44:30,220 --> 00:44:36,439
no nobody what they say like thank you

688
00:44:33,320 --> 00:44:42,440
or like send you a diploma for finding

689
00:44:36,440 --> 00:44:45,320
Suffolk or some cash no so Apple doesn't

690
00:44:42,440 --> 00:44:49,280
really have a bounty only for so they

691
00:44:45,320 --> 00:44:52,790
have a bounty only for iOS and its

692
00:44:49,280 --> 00:44:57,590
invitation based only otherwise they

693
00:44:52,790 --> 00:45:00,740
will thank you and that's it okay do we

694
00:44:57,590 --> 00:45:04,880
have any more questions shall catch my

695
00:45:00,740 --> 00:45:07,069
eye no all right if that's it Thank You

696
00:45:04,880 --> 00:45:11,899
Java great presentation

697
00:45:07,070 --> 00:45:11,899
[Applause]

