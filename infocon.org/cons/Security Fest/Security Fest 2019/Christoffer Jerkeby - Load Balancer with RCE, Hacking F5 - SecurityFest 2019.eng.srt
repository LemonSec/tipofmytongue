1
00:00:00,030 --> 00:00:07,350
I'm working for a company called as

2
00:00:02,700 --> 00:00:08,700
secure and Oregon we're a bunch of

3
00:00:07,350 --> 00:00:10,590
colleagues who are doing a penetration

4
00:00:08,700 --> 00:00:14,518
testing we have an office in Stockholm

5
00:00:10,590 --> 00:00:19,230
and this was a finding that we did

6
00:00:14,519 --> 00:00:21,689
during an assignment for customer and we

7
00:00:19,230 --> 00:00:24,930
were investigating how that customer

8
00:00:21,689 --> 00:00:28,948
could protect themselves using an f5

9
00:00:24,930 --> 00:00:30,720
load balancer and f5 is using something

10
00:00:28,949 --> 00:00:35,430
called IRAs and I'll explain much more

11
00:00:30,720 --> 00:00:36,960
about that during this talk this is the

12
00:00:35,430 --> 00:00:40,739
first of a series of talks is the

13
00:00:36,960 --> 00:00:42,780
premier for this vulnerability and I'm

14
00:00:40,739 --> 00:00:44,519
presenting it here because I like the

15
00:00:42,780 --> 00:00:46,170
local Swedish audience and the next talk

16
00:00:44,520 --> 00:00:49,140
I'm going to present at or the next

17
00:00:46,170 --> 00:00:53,010
conference I'm going to is blackhat in

18
00:00:49,140 --> 00:00:55,020
Las Vegas where I'm showing how to

19
00:00:53,010 --> 00:00:58,079
further this vulnerability and again

20
00:00:55,020 --> 00:01:00,140
further access I want to give a thanks

21
00:00:58,079 --> 00:01:03,840
to my colleagues over at f-secure and

22
00:01:00,140 --> 00:01:05,309
definitely a big thanks to f5 cert who

23
00:01:03,840 --> 00:01:08,070
have been really helpful in confirming

24
00:01:05,309 --> 00:01:10,830
the vulnerability and the as of

25
00:01:08,070 --> 00:01:12,779
yesterday presented a advisory to their

26
00:01:10,830 --> 00:01:14,610
customers on how to reach out and get

27
00:01:12,780 --> 00:01:21,710
help if they think that they are

28
00:01:14,610 --> 00:01:26,570
vulnerable to to this issue all right I

29
00:01:21,710 --> 00:01:30,419
made my first TCL open-source project

30
00:01:26,570 --> 00:01:32,429
back in 2002 and it's not SourceForge

31
00:01:30,420 --> 00:01:35,400
still and it contains plenty of these

32
00:01:32,430 --> 00:01:37,200
vulnerabilities why did I say TCL or

33
00:01:35,400 --> 00:01:38,670
it's called tickle sometimes it's

34
00:01:37,200 --> 00:01:41,610
because there's a relationship it will

35
00:01:38,670 --> 00:01:42,960
tickle and the language I rule that I'm

36
00:01:41,610 --> 00:01:46,920
going to present vulnerabilities in

37
00:01:42,960 --> 00:01:48,298
today and it's a language that otherwise

38
00:01:46,920 --> 00:01:50,509
this might be considered dead but I

39
00:01:48,299 --> 00:01:54,509
think it's interesting to investigate

40
00:01:50,509 --> 00:01:58,140
the risks of still using older languages

41
00:01:54,509 --> 00:01:59,520
and under tiny quirks so the product

42
00:01:58,140 --> 00:02:02,159
we're talking about here it's a load

43
00:01:59,520 --> 00:02:03,869
balancer and it's part of the f5 product

44
00:02:02,159 --> 00:02:07,140
series f5 is the name of the company and

45
00:02:03,869 --> 00:02:10,649
the product name is big IP I think or

46
00:02:07,140 --> 00:02:14,430
the big AP series and so this product

47
00:02:10,649 --> 00:02:16,620
can help your company protect

48
00:02:14,430 --> 00:02:18,390
protected from denial-of-service attacks

49
00:02:16,620 --> 00:02:21,329
but you can also store and handle

50
00:02:18,390 --> 00:02:23,040
cookies for you so imagine you have a

51
00:02:21,329 --> 00:02:26,150
bunch of back-end servers in your

52
00:02:23,040 --> 00:02:28,500
company and your organization and these

53
00:02:26,150 --> 00:02:31,769
doesn't have synchronized state between

54
00:02:28,500 --> 00:02:33,420
them but somehow your traffic coming

55
00:02:31,769 --> 00:02:36,900
into that company it could be sick but

56
00:02:33,420 --> 00:02:39,059
mostly it's it's HTTP it can be handled

57
00:02:36,900 --> 00:02:41,549
by this product and to configure all

58
00:02:39,060 --> 00:02:46,200
this you're using a language coli rules

59
00:02:41,549 --> 00:02:48,989
and what's neat about the product is

60
00:02:46,200 --> 00:02:50,940
that it's pretty resilient to have it

61
00:02:48,989 --> 00:02:52,349
traffic which means that it can have a

62
00:02:50,940 --> 00:02:54,540
little terabytes of traffic so it's a

63
00:02:52,349 --> 00:02:56,429
pretty dedicated product it comes in

64
00:02:54,540 --> 00:03:00,030
hardware and in a virtual appliance and

65
00:02:56,430 --> 00:03:01,440
it's used in very large corporation so

66
00:03:00,030 --> 00:03:03,780
I'll show something about that later

67
00:03:01,440 --> 00:03:05,579
it also has Web Application Firewall and

68
00:03:03,780 --> 00:03:09,299
other features that you might want in

69
00:03:05,579 --> 00:03:12,480
this type of product so I rules

70
00:03:09,299 --> 00:03:14,370
Errol's are used to configure rules of

71
00:03:12,480 --> 00:03:16,349
how to handle traffic imagine you want

72
00:03:14,370 --> 00:03:18,449
has some other traffic coming into your

73
00:03:16,349 --> 00:03:21,899
organization going one way and other

74
00:03:18,449 --> 00:03:26,280
traffic going in another way and I rule

75
00:03:21,900 --> 00:03:29,579
sis a fork of the TCL 8.4 and TCL TCL

76
00:03:26,280 --> 00:03:33,269
article 8.4 was superseded by version

77
00:03:29,579 --> 00:03:35,459
8.5 in 2007 and that means that the

78
00:03:33,269 --> 00:03:39,030
features you're seeing in iris today are

79
00:03:35,459 --> 00:03:40,829
the features you saw in tickle in 2005

80
00:03:39,030 --> 00:03:43,590
or 6 those are the features that are

81
00:03:40,829 --> 00:03:45,299
still there and since then the language

82
00:03:43,590 --> 00:03:48,989
hasn't evolved much but there are some

83
00:03:45,299 --> 00:03:50,940
minor security things and some technical

84
00:03:48,989 --> 00:03:54,540
things that that has evolved and tickle

85
00:03:50,940 --> 00:03:56,010
that hasn't involved in our rules and I

86
00:03:54,540 --> 00:03:59,190
want to point out that this

87
00:03:56,010 --> 00:04:04,590
vulnerability is not necessarily based

88
00:03:59,190 --> 00:04:07,500
on problems in the product products from

89
00:04:04,590 --> 00:04:08,819
f5 it's more in how you use that product

90
00:04:07,500 --> 00:04:11,159
well you'll see more about that later

91
00:04:08,819 --> 00:04:13,708
how how you can actually make mistakes

92
00:04:11,159 --> 00:04:18,298
when you're configuring them that that

93
00:04:13,709 --> 00:04:20,909
can cause you a lot of trouble and I'll

94
00:04:18,298 --> 00:04:25,000
start by showing how the language is set

95
00:04:20,909 --> 00:04:27,789
up and used so in this case I'm using a

96
00:04:25,000 --> 00:04:30,520
a clause called when and when is

97
00:04:27,790 --> 00:04:32,620
catching an event the event is HTTP

98
00:04:30,520 --> 00:04:37,090
request so we're having an HTTP request

99
00:04:32,620 --> 00:04:40,030
coming into our device and right now we

100
00:04:37,090 --> 00:04:42,190
have a rule that says that use HTTP

101
00:04:40,030 --> 00:04:47,890
redirect redirect that request to this

102
00:04:42,190 --> 00:04:52,150
HTML page and the HTTP request this is

103
00:04:47,890 --> 00:04:55,750
handled and parsed by the the engine of

104
00:04:52,150 --> 00:04:58,890
the the f5 or the big IP device and the

105
00:04:55,750 --> 00:05:01,390
rules are matched against that parsing

106
00:04:58,890 --> 00:05:05,950
there is a website called dev central

107
00:05:01,390 --> 00:05:09,099
where it's like a stack exchange for for

108
00:05:05,950 --> 00:05:11,140
I rule code and a lot of users have

109
00:05:09,100 --> 00:05:14,800
supplied the wrong code there and in a

110
00:05:11,140 --> 00:05:16,860
lot of those cases those that code might

111
00:05:14,800 --> 00:05:20,290
be vulnerable

112
00:05:16,860 --> 00:05:22,000
so to find such advice now you know

113
00:05:20,290 --> 00:05:25,930
something about what this language is

114
00:05:22,000 --> 00:05:28,270
and where it applies and to find these

115
00:05:25,930 --> 00:05:30,550
devices in the wild you're probably

116
00:05:28,270 --> 00:05:32,799
looking for a server header like this

117
00:05:30,550 --> 00:05:34,570
one where it's a server : big IP and

118
00:05:32,800 --> 00:05:36,730
this is something that you won't see on

119
00:05:34,570 --> 00:05:39,460
every request if you catch or try to

120
00:05:36,730 --> 00:05:42,910
catch the index dot HTML page of a given

121
00:05:39,460 --> 00:05:52,150
website it's not going to give you this

122
00:05:42,910 --> 00:05:55,120
server header instead it's gonna give

123
00:05:52,150 --> 00:05:59,710
you the normal server header of that of

124
00:05:55,120 --> 00:06:01,990
that web server but if you if you

125
00:05:59,710 --> 00:06:04,390
request the page that is being

126
00:06:01,990 --> 00:06:06,400
redirected or a page that's being stored

127
00:06:04,390 --> 00:06:10,270
in their five device it's gonna provide

128
00:06:06,400 --> 00:06:12,489
this server header from directly from

129
00:06:10,270 --> 00:06:16,000
the device which in this case is is big

130
00:06:12,490 --> 00:06:18,850
IP so if you catch a file over HTTP like

131
00:06:16,000 --> 00:06:20,890
the fav icon dot ICO it's most likely to

132
00:06:18,850 --> 00:06:22,930
have this header if it's an f5 device

133
00:06:20,890 --> 00:06:27,010
and we did this to collect some stats

134
00:06:22,930 --> 00:06:29,440
and this is by no means a full list of

135
00:06:27,010 --> 00:06:30,820
the devices and that there are but we

136
00:06:29,440 --> 00:06:33,370
made something like a showdown search

137
00:06:30,820 --> 00:06:35,229
and we found loads and loads so devices

138
00:06:33,370 --> 00:06:37,000
that are using it and it's a very very

139
00:06:35,229 --> 00:06:38,020
very popular device and it's extremely

140
00:06:37,000 --> 00:06:41,289
popular in large

141
00:06:38,020 --> 00:06:43,448
operations so the large big brands are

142
00:06:41,289 --> 00:06:46,270
using this device and the large big

143
00:06:43,449 --> 00:06:49,120
brands Network teams are the ones who

144
00:06:46,270 --> 00:06:50,680
are configuring it and what we're

145
00:06:49,120 --> 00:06:52,780
dealing with here is a product that

146
00:06:50,680 --> 00:06:53,139
actually needs a programmer to program

147
00:06:52,780 --> 00:06:55,929
it

148
00:06:53,139 --> 00:06:58,000
while the responsibility of programming

149
00:06:55,930 --> 00:06:59,409
it always ends up on the networking team

150
00:06:58,000 --> 00:07:01,210
because it's something that's edgewise

151
00:06:59,409 --> 00:07:02,680
is something that goes to the to the

152
00:07:01,210 --> 00:07:05,169
edge of the network and it's usually

153
00:07:02,680 --> 00:07:06,400
someone with a Cisco degree or a

154
00:07:05,169 --> 00:07:08,979
certification

155
00:07:06,400 --> 00:07:11,409
type of education that goes into

156
00:07:08,979 --> 00:07:16,949
programming these in the big brand

157
00:07:11,409 --> 00:07:19,900
companies all right so you all heard the

158
00:07:16,949 --> 00:07:22,840
we all seen that The Simpsons episodes

159
00:07:19,900 --> 00:07:25,929
when when Bart is calling most bar and

160
00:07:22,840 --> 00:07:28,289
is asking for L and and coholic in the

161
00:07:25,930 --> 00:07:31,210
last name and and and when when

162
00:07:28,289 --> 00:07:32,979
eventually Moe results this and realizes

163
00:07:31,210 --> 00:07:35,469
that he's asking for alcoholic or

164
00:07:32,979 --> 00:07:37,180
alcoholics then then then he gets really

165
00:07:35,469 --> 00:07:39,340
really mad and this is something what

166
00:07:37,180 --> 00:07:41,139
what this products or this problem is

167
00:07:39,340 --> 00:07:43,179
about or all these types of problems are

168
00:07:41,139 --> 00:07:46,210
about this is a type of vulnerability

169
00:07:43,180 --> 00:07:48,009
where there is a misconception or

170
00:07:46,210 --> 00:07:50,169
misunderstanding of the context of the

171
00:07:48,009 --> 00:07:56,680
information before it's presented in its

172
00:07:50,169 --> 00:08:01,719
completeness right and in tickle there

173
00:07:56,680 --> 00:08:03,460
are a few ways of parsing strings or

174
00:08:01,719 --> 00:08:05,199
parsing information they usually say

175
00:08:03,460 --> 00:08:07,900
that in tickle everything is a string

176
00:08:05,199 --> 00:08:10,710
but there are more ways of defining them

177
00:08:07,900 --> 00:08:13,299
and here's something called the argument

178
00:08:10,710 --> 00:08:15,520
interpretation or argument expansion of

179
00:08:13,300 --> 00:08:19,270
the command a command is the first thing

180
00:08:15,520 --> 00:08:21,099
that starts a line like if when or a

181
00:08:19,270 --> 00:08:23,620
while or something that's a command

182
00:08:21,099 --> 00:08:25,990
after that you have the argument list

183
00:08:23,620 --> 00:08:28,060
and the first one is a quoted argument

184
00:08:25,990 --> 00:08:30,190
and now here's English lessons for all

185
00:08:28,060 --> 00:08:32,529
your Scandinavians if you haven't

186
00:08:30,190 --> 00:08:33,909
started using the term brackets that's

187
00:08:32,529 --> 00:08:35,799
the the hard brackets

188
00:08:33,909 --> 00:08:38,500
there's also braces that's the curly

189
00:08:35,799 --> 00:08:40,870
braces and there is the uncoated

190
00:08:38,500 --> 00:08:43,719
arguments and these three have

191
00:08:40,870 --> 00:08:45,550
completely different meaning so what you

192
00:08:43,719 --> 00:08:47,079
would see on the first line a lot of

193
00:08:45,550 --> 00:08:49,180
people would expect that to be the

194
00:08:47,079 --> 00:08:51,939
definition of a string a string is

195
00:08:49,180 --> 00:08:53,560
inside of quotes well that's not entire

196
00:08:51,940 --> 00:08:55,660
true here because something that's going

197
00:08:53,560 --> 00:08:58,209
on inside of a quote here is something

198
00:08:55,660 --> 00:09:00,850
that could be a command execution what's

199
00:08:58,210 --> 00:09:03,070
going on inside of the bracket the

200
00:09:00,850 --> 00:09:05,260
second line that's something that's

201
00:09:03,070 --> 00:09:08,230
going to be executed in this case that's

202
00:09:05,260 --> 00:09:10,510
a almost an incorrect way of writing but

203
00:09:08,230 --> 00:09:12,490
it means that argument one whatever is

204
00:09:10,510 --> 00:09:15,670
in that variable is executed as a

205
00:09:12,490 --> 00:09:18,010
function or as a command itself line

206
00:09:15,670 --> 00:09:20,199
three that's what we're looking at

207
00:09:18,010 --> 00:09:22,540
someone who is trying to make a string

208
00:09:20,200 --> 00:09:27,570
curly brackets that's how you make a

209
00:09:22,540 --> 00:09:29,829
string in tickle and line four that's

210
00:09:27,570 --> 00:09:33,610
separate argument listings and that's

211
00:09:29,830 --> 00:09:36,190
also used for for execution so one two

212
00:09:33,610 --> 00:09:40,480
and four are used for execution of

213
00:09:36,190 --> 00:09:44,830
things well three is a string all right

214
00:09:40,480 --> 00:09:46,660
and my presentation thing here about

215
00:09:44,830 --> 00:09:50,260
disconnect is I have to turn around for

216
00:09:46,660 --> 00:09:51,910
a bit so inside of the double quote

217
00:09:50,260 --> 00:09:53,560
anything going on inside a double quote

218
00:09:51,910 --> 00:09:55,780
this is the most common mistakes that I

219
00:09:53,560 --> 00:09:58,660
see every time we audit an f5 device is

220
00:09:55,780 --> 00:10:00,790
that the I rule contains the quote and

221
00:09:58,660 --> 00:10:02,709
that quote contains some variables

222
00:10:00,790 --> 00:10:04,719
that's being substituted or someone's

223
00:10:02,710 --> 00:10:06,220
working with those quotes at the moment

224
00:10:04,720 --> 00:10:09,640
you have a variable inside of double

225
00:10:06,220 --> 00:10:12,280
quotes the content of that variable can

226
00:10:09,640 --> 00:10:17,080
be executed if that contains executable

227
00:10:12,280 --> 00:10:19,000
code and if that when I'm saying

228
00:10:17,080 --> 00:10:23,350
executable code that means a line that

229
00:10:19,000 --> 00:10:24,670
starts with a bracket the hard ones if

230
00:10:23,350 --> 00:10:25,990
the line starts with a bracket that

231
00:10:24,670 --> 00:10:27,910
means the sum is something that I'm

232
00:10:25,990 --> 00:10:29,530
doing is executing it's the same as the

233
00:10:27,910 --> 00:10:31,240
back take in bash you've all seen the

234
00:10:29,530 --> 00:10:34,060
back ticks that you're doing for command

235
00:10:31,240 --> 00:10:35,320
execution in bash and that's that's

236
00:10:34,060 --> 00:10:37,599
about the same thing and I need to

237
00:10:35,320 --> 00:10:39,660
explain this syntax because not a lot of

238
00:10:37,600 --> 00:10:43,020
people know the language from before and

239
00:10:39,660 --> 00:10:46,030
it would make things easier for everyone

240
00:10:43,020 --> 00:10:47,949
so there was a prior art in this there

241
00:10:46,030 --> 00:10:51,550
has been documentation on the tickle

242
00:10:47,950 --> 00:10:53,680
wiki and this wiki page explains this is

243
00:10:51,550 --> 00:10:55,930
an article that's been updated since 95

244
00:10:53,680 --> 00:10:58,359
but this is the only source that I found

245
00:10:55,930 --> 00:11:00,370
that actually explains this issue and it

246
00:10:58,360 --> 00:11:02,830
doesn't have very many reads and and a

247
00:11:00,370 --> 00:11:04,600
lot of people don't know about it and I

248
00:11:02,830 --> 00:11:06,060
can't advertise it enough because I

249
00:11:04,600 --> 00:11:10,750
think it's pretty good

250
00:11:06,060 --> 00:11:14,680
so the line will sketch puts variable

251
00:11:10,750 --> 00:11:18,459
that line is incredibly vulnerable that

252
00:11:14,680 --> 00:11:19,839
line is trying to execute the content or

253
00:11:18,459 --> 00:11:22,180
variable if there is something

254
00:11:19,839 --> 00:11:25,839
executable so if I'm using the command

255
00:11:22,180 --> 00:11:28,750
error pwned in there if I'm putting that

256
00:11:25,839 --> 00:11:31,449
into variable catch which is the try

257
00:11:28,750 --> 00:11:35,920
except thing it will actually actually

258
00:11:31,449 --> 00:11:37,420
execute that code and another case where

259
00:11:35,920 --> 00:11:39,540
the same thing is happening is what I'm

260
00:11:37,420 --> 00:11:42,310
not using quotes or uncoded

261
00:11:39,540 --> 00:11:44,380
substitutions and this occurs if I'm

262
00:11:42,310 --> 00:11:47,680
using after which is like sleep after

263
00:11:44,380 --> 00:11:49,899
one second execute body or while one

264
00:11:47,680 --> 00:11:52,149
which is true in this case execute body

265
00:11:49,899 --> 00:11:55,899
or if one which is true execute body

266
00:11:52,149 --> 00:12:00,279
switch one matches to one day you get

267
00:11:55,899 --> 00:12:03,190
the point this list of commands that has

268
00:12:00,279 --> 00:12:05,920
this quality is pretty long this is a

269
00:12:03,190 --> 00:12:09,279
list of their functions that you should

270
00:12:05,920 --> 00:12:12,069
be careful about using inside of an I

271
00:12:09,279 --> 00:12:14,260
rule because they might cause code

272
00:12:12,070 --> 00:12:16,180
execution and a lot of people don't know

273
00:12:14,260 --> 00:12:18,490
this and a lot of people are executing

274
00:12:16,180 --> 00:12:20,229
or could be executing code the thing is

275
00:12:18,490 --> 00:12:21,990
your program will work even though

276
00:12:20,230 --> 00:12:26,589
you're not executing code it will work

277
00:12:21,990 --> 00:12:31,980
regardless but in but an attacker could

278
00:12:26,589 --> 00:12:35,680
also execute things and here's the worst

279
00:12:31,980 --> 00:12:37,329
perpetrators substitute evil and expert

280
00:12:35,680 --> 00:12:39,219
you all know or a lot of people of you

281
00:12:37,329 --> 00:12:43,839
know that eval can cause command

282
00:12:39,220 --> 00:12:46,240
execution that means that eval evaluates

283
00:12:43,839 --> 00:12:48,640
the command that is running and I still

284
00:12:46,240 --> 00:12:50,500
see a lot of Tiku code out there a lot

285
00:12:48,640 --> 00:12:52,180
of irulu code that's using eval and

286
00:12:50,500 --> 00:12:55,959
that's why I'm gonna use that as an

287
00:12:52,180 --> 00:12:57,579
example later substitution means a

288
00:12:55,959 --> 00:13:00,339
string substitution where it's doing

289
00:12:57,579 --> 00:13:02,349
something to a string and doing that

290
00:13:00,339 --> 00:13:04,779
means you have to resolve the content of

291
00:13:02,350 --> 00:13:06,699
the string that you're handling and in a

292
00:13:04,779 --> 00:13:08,470
lot of cases that means executing

293
00:13:06,699 --> 00:13:11,769
whatever code is in there or whatever

294
00:13:08,470 --> 00:13:13,769
function is in there expressions

295
00:13:11,769 --> 00:13:16,060
expressions are the mathematical

296
00:13:13,769 --> 00:13:17,499
foundation of programming that's one

297
00:13:16,060 --> 00:13:20,899
plus one

298
00:13:17,499 --> 00:13:23,209
expressions are also evaluating commands

299
00:13:20,899 --> 00:13:27,679
so if I have an expression with a sub

300
00:13:23,209 --> 00:13:29,689
expression like 1 plus 1 or 1 plus 1

301
00:13:27,679 --> 00:13:32,119
times 9 then there is a predecessor

302
00:13:29,689 --> 00:13:34,549
towards the multiplication and then

303
00:13:32,119 --> 00:13:36,559
there is the addition right and that

304
00:13:34,549 --> 00:13:41,110
sort of math is something that actually

305
00:13:36,559 --> 00:13:43,610
can or will end up as an execution and

306
00:13:41,110 --> 00:13:46,369
that means that you we have to be extra

307
00:13:43,610 --> 00:13:48,079
careful using any of these and you have

308
00:13:46,369 --> 00:13:50,149
to know what functions you are running

309
00:13:48,079 --> 00:13:52,549
that are running any of these like an if

310
00:13:50,149 --> 00:13:55,100
statement it also runs expressions or

311
00:13:52,549 --> 00:13:59,749
sorry it also else at the Expressionists

312
00:13:55,100 --> 00:14:04,279
way of evaluating the mathematical

313
00:13:59,749 --> 00:14:08,629
expression another issue that I like to

314
00:14:04,279 --> 00:14:11,059
mention that I think is less crazy but

315
00:14:08,629 --> 00:14:12,769
it's important to be aware of and the

316
00:14:11,059 --> 00:14:17,480
reason why I think this is important to

317
00:14:12,769 --> 00:14:20,540
be aware of is that this has to do with

318
00:14:17,480 --> 00:14:22,999
how these all the things or strings are

319
00:14:20,540 --> 00:14:25,160
interpreted interpreted so if you make a

320
00:14:22,999 --> 00:14:26,480
switch statements which is like case so

321
00:14:25,160 --> 00:14:30,649
you make a case statement and you have a

322
00:14:26,480 --> 00:14:33,559
few cases like these if I'm checking

323
00:14:30,649 --> 00:14:35,149
that X is 1 or 2 or default so which can

324
00:14:33,559 --> 00:14:36,319
also have an option right now if you

325
00:14:35,149 --> 00:14:38,809
look at this how the syntax of switch

326
00:14:36,319 --> 00:14:42,679
works as a switch options string pattern

327
00:14:38,809 --> 00:14:45,049
if X happens to look like an option if

328
00:14:42,679 --> 00:14:47,449
it says - in the beginning then that

329
00:14:45,049 --> 00:14:50,839
means that this is an option so if I put

330
00:14:47,449 --> 00:14:52,579
- garbage then I will get a syntax error

331
00:14:50,839 --> 00:14:55,189
saying switch does not have an argument

332
00:14:52,579 --> 00:14:57,349
called garbage and that means that you

333
00:14:55,189 --> 00:14:58,610
can break the syntax of an input when

334
00:14:57,350 --> 00:15:01,369
it's trying to match your switch

335
00:14:58,610 --> 00:15:05,360
statements so let's say that your I rule

336
00:15:01,369 --> 00:15:07,579
code is interpreting something that's a

337
00:15:05,360 --> 00:15:10,369
user inputted like a get string it's

338
00:15:07,579 --> 00:15:12,439
simple or it's taking your user agent

339
00:15:10,369 --> 00:15:15,019
and it's making a catch a switch

340
00:15:12,439 --> 00:15:18,290
statement on that user agent if your

341
00:15:15,019 --> 00:15:21,379
user agent contains a - first and then

342
00:15:18,290 --> 00:15:24,349
garbage or crash then that switch

343
00:15:21,379 --> 00:15:26,569
statement will fail and that means that

344
00:15:24,350 --> 00:15:28,819
I can that I can control the flow

345
00:15:26,569 --> 00:15:31,160
somewhat of an application but it also

346
00:15:28,819 --> 00:15:33,170
means that I can go outside of the

347
00:15:31,160 --> 00:15:34,879
boundary of what I'm trying to shake by

348
00:15:33,170 --> 00:15:40,509
adding additional code and I'm going to

349
00:15:34,879 --> 00:15:40,509
use that in a in an exploit code later

350
00:15:41,050 --> 00:15:45,649
yeah you can also actually use real

351
00:15:43,639 --> 00:15:48,019
arguments and add and remove arguments

352
00:15:45,649 --> 00:15:49,339
or arguments to your switch statements

353
00:15:48,019 --> 00:15:52,040
if you want to if you want to turn it

354
00:15:49,339 --> 00:15:55,009
into a globe statement statement where

355
00:15:52,040 --> 00:15:59,930
it's matching star as anything for

356
00:15:55,009 --> 00:16:03,350
instance so exploitation what do we want

357
00:15:59,930 --> 00:16:06,229
to do as attackers we want to first

358
00:16:03,350 --> 00:16:07,670
identify is this code vulnerable that's

359
00:16:06,230 --> 00:16:09,680
what you want to do if you're a pen

360
00:16:07,670 --> 00:16:11,060
tester that's the one is what you want

361
00:16:09,680 --> 00:16:14,300
to do if you're a state actor or

362
00:16:11,060 --> 00:16:18,138
whatever right so that means that you're

363
00:16:14,300 --> 00:16:20,899
going to try to inject a tickle script

364
00:16:18,139 --> 00:16:23,569
or an I rule script into a variable or

365
00:16:20,899 --> 00:16:25,370
some kind in an HTTP request and you're

366
00:16:23,569 --> 00:16:28,490
going to see if that was evaluated or

367
00:16:25,370 --> 00:16:31,069
someone actually ran it for you and then

368
00:16:28,490 --> 00:16:35,050
you need to look for those identifiers

369
00:16:31,069 --> 00:16:38,240
did it actually run and then you can

370
00:16:35,050 --> 00:16:40,339
after that try to identify where in the

371
00:16:38,240 --> 00:16:43,009
code did this happen and once you've

372
00:16:40,339 --> 00:16:44,959
done that you can identify or any

373
00:16:43,009 --> 00:16:47,170
external resources in that code that I

374
00:16:44,959 --> 00:16:51,829
can use to pivot my access and gain more

375
00:16:47,170 --> 00:16:56,719
privilege for this execution and I'm

376
00:16:51,829 --> 00:16:58,449
gonna show you a demo of what it

377
00:16:56,720 --> 00:17:01,399
actually looks like when you are

378
00:16:58,449 --> 00:17:05,319
exploiting this and on top you're seeing

379
00:17:01,399 --> 00:17:09,230
a web browser and it's visiting a page

380
00:17:05,319 --> 00:17:11,658
called indexed or ASP and in the bottom

381
00:17:09,230 --> 00:17:14,689
you are seeing the tool burp that we use

382
00:17:11,659 --> 00:17:23,030
a lot when we pen test I think all of

383
00:17:14,689 --> 00:17:32,020
you use it probably and come on move

384
00:17:23,030 --> 00:17:32,020
okay so I like it to play yeah

385
00:17:32,600 --> 00:17:38,610
so when I make a request in verb the the

386
00:17:37,019 --> 00:17:40,499
proxy tool will actually show the

387
00:17:38,610 --> 00:17:41,639
request that I just made and if you look

388
00:17:40,499 --> 00:17:43,289
at the fields that you could potentially

389
00:17:41,639 --> 00:17:46,199
be exploiting it could be something like

390
00:17:43,289 --> 00:17:48,840
user agent it could be the get part it

391
00:17:46,200 --> 00:17:51,659
could be the HTTP version all of these

392
00:17:48,840 --> 00:17:53,939
are things that I rules can interpret

393
00:17:51,659 --> 00:17:55,409
and understand so it could be something

394
00:17:53,940 --> 00:17:58,369
that could end up in a variable that I

395
00:17:55,409 --> 00:18:02,009
can exploit right so the except

396
00:17:58,369 --> 00:18:05,189
statement could be something if it's

397
00:18:02,009 --> 00:18:06,629
enough tradable request the host name

398
00:18:05,190 --> 00:18:09,570
definitely is something that's

399
00:18:06,629 --> 00:18:11,399
interesting in my case I am looking for

400
00:18:09,570 --> 00:18:14,369
something that's more tangible like a

401
00:18:11,399 --> 00:18:16,289
cookie and write I wrote this code so I

402
00:18:14,369 --> 00:18:17,759
happen to know what's vulnerable if I

403
00:18:16,289 --> 00:18:19,559
look at the response from the server I

404
00:18:17,759 --> 00:18:23,460
see that the server is setting a cookie

405
00:18:19,559 --> 00:18:25,408
called logged out interesting so it

406
00:18:23,460 --> 00:18:27,929
since it's setting a cookie maybe that's

407
00:18:25,409 --> 00:18:31,049
the cookie that I'm going to try to

408
00:18:27,929 --> 00:18:33,090
change and start with changing so I'm

409
00:18:31,049 --> 00:18:36,570
gonna send that to the repeater in burp

410
00:18:33,090 --> 00:18:40,799
and in the repeater I'm gonna select the

411
00:18:36,570 --> 00:18:46,559
cookie and erase the value and in there

412
00:18:40,799 --> 00:18:48,539
I'm gonna put some hyrule code and I

413
00:18:46,559 --> 00:18:51,629
rule code first the Hart bracket hard

414
00:18:48,539 --> 00:18:53,908
racket means execution all right I type

415
00:18:51,629 --> 00:18:56,129
TCP cola-cola respond which is a command

416
00:18:53,909 --> 00:18:58,710
and that command has an argument inside

417
00:18:56,129 --> 00:19:04,110
of curly brackets sorry Oh curly braces

418
00:18:58,710 --> 00:19:05,570
and when I execute that you see in the

419
00:19:04,110 --> 00:19:08,459
beginning of the line it's a slow there

420
00:19:05,570 --> 00:19:11,070
so this means that the server executed

421
00:19:08,460 --> 00:19:13,559
that TCP respond and it replied with

422
00:19:11,070 --> 00:19:14,999
hello prior to the HTTP message coming

423
00:19:13,559 --> 00:19:16,649
and I can see that okay there's

424
00:19:14,999 --> 00:19:20,759
something going on there I can't execute

425
00:19:16,649 --> 00:19:22,768
in this context there is another command

426
00:19:20,759 --> 00:19:24,570
that I'm trying to go with that's HTTP

427
00:19:22,769 --> 00:19:26,129
respond and I'm using the wrong syntax

428
00:19:24,570 --> 00:19:30,119
and the server responds pretty quickly

429
00:19:26,129 --> 00:19:33,029
and it's just failing this will probably

430
00:19:30,119 --> 00:19:35,070
go into the logs so try avoid making bad

431
00:19:33,029 --> 00:19:39,059
syntax or making syntax errors because

432
00:19:35,070 --> 00:19:41,369
syntax errors are logged while if I'm

433
00:19:39,059 --> 00:19:43,899
making a successful attempt I'm not

434
00:19:41,369 --> 00:19:48,310
being logged at all

435
00:19:43,900 --> 00:19:51,430
and there is a command called info level

436
00:19:48,310 --> 00:19:56,169
0 and info level 0 gives you the source

437
00:19:51,430 --> 00:20:00,580
code of the actual program that I'm

438
00:19:56,170 --> 00:20:03,310
running at it's pretty neat and that's

439
00:20:00,580 --> 00:20:04,990
when I can start identify ok ah that's

440
00:20:03,310 --> 00:20:06,220
the vulnerable parts that's the bad

441
00:20:04,990 --> 00:20:08,620
thing because it's doing a substitution

442
00:20:06,220 --> 00:20:11,140
without string and yeah apparently you

443
00:20:08,620 --> 00:20:13,090
can't do that so because you remember

444
00:20:11,140 --> 00:20:13,840
the 3 really really bad guys there so

445
00:20:13,090 --> 00:20:18,490
don't do that

446
00:20:13,840 --> 00:20:22,540
and yeah that's pretty much it for the

447
00:20:18,490 --> 00:20:25,720
initial step into hacking that system

448
00:20:22,540 --> 00:20:31,240
and that means that I now have code

449
00:20:25,720 --> 00:20:32,740
execution in that context right so I

450
00:20:31,240 --> 00:20:34,300
understand there's a lot to take in

451
00:20:32,740 --> 00:20:36,100
because now we're learning both in your

452
00:20:34,300 --> 00:20:38,470
language and your exploitation technique

453
00:20:36,100 --> 00:20:40,870
at once but maybe you can go back and

454
00:20:38,470 --> 00:20:44,440
watch the video again or something if

455
00:20:40,870 --> 00:20:46,510
you need to I'm gonna move on there's

456
00:20:44,440 --> 00:20:48,970
something called a session table and a

457
00:20:46,510 --> 00:20:51,730
or at the session table is a table with

458
00:20:48,970 --> 00:20:57,010
a key value store where you can store

459
00:20:51,730 --> 00:20:58,780
things that you otherwise that that can

460
00:20:57,010 --> 00:21:00,220
be persistent between sessions like

461
00:20:58,780 --> 00:21:02,020
sometimes you want to store a cookie

462
00:21:00,220 --> 00:21:04,510
there a lot of people are storing

463
00:21:02,020 --> 00:21:06,190
caching things there like to prevent

464
00:21:04,510 --> 00:21:07,870
denial of service or prevent someone

465
00:21:06,190 --> 00:21:11,410
from executing a singing million times

466
00:21:07,870 --> 00:21:12,939
they're using in this session table the

467
00:21:11,410 --> 00:21:15,580
problem with anything that's being

468
00:21:12,940 --> 00:21:17,470
persistent in this context is something

469
00:21:15,580 --> 00:21:19,800
that's also going to be shared between

470
00:21:17,470 --> 00:21:22,270
the sessions even though I'm logged out

471
00:21:19,800 --> 00:21:24,669
and someone else logs in they're gonna

472
00:21:22,270 --> 00:21:27,430
be pulling information from the same

473
00:21:24,670 --> 00:21:28,810
session table or the same table and the

474
00:21:27,430 --> 00:21:31,060
same goes for anything else that's

475
00:21:28,810 --> 00:21:33,159
persistent before I move on I'd like to

476
00:21:31,060 --> 00:21:37,659
point out that having this access that

477
00:21:33,160 --> 00:21:39,670
we have now we can access any network

478
00:21:37,660 --> 00:21:41,410
device internally inside of the network

479
00:21:39,670 --> 00:21:43,360
because this is a networking device it

480
00:21:41,410 --> 00:21:45,850
can connect any TCP connection that I

481
00:21:43,360 --> 00:21:48,280
would possibly want to so I can scan the

482
00:21:45,850 --> 00:21:49,750
local network and maybe there I can find

483
00:21:48,280 --> 00:21:51,370
persistence maybe there I can find

484
00:21:49,750 --> 00:21:53,590
something that I can execute something

485
00:21:51,370 --> 00:21:55,929
that would be interesting for me to get

486
00:21:53,590 --> 00:21:57,360
more permanent access right now we're

487
00:21:55,930 --> 00:22:02,490
only acting in RAM and

488
00:21:57,360 --> 00:22:03,659
so I were not being logged right but if

489
00:22:02,490 --> 00:22:06,450
we can get some kind of resistance

490
00:22:03,660 --> 00:22:08,820
preferably persistence in RAM then we're

491
00:22:06,450 --> 00:22:10,620
still not logged but we can maintain

492
00:22:08,820 --> 00:22:14,120
ourselves over the sessions and this is

493
00:22:10,620 --> 00:22:18,600
where icing tables are interesting

494
00:22:14,120 --> 00:22:20,909
all right so and also and I'm not sure

495
00:22:18,600 --> 00:22:23,850
if I mentioned it but these devices are

496
00:22:20,910 --> 00:22:25,410
all redundant or you can run them in a

497
00:22:23,850 --> 00:22:27,959
redundancy modes you have multiple

498
00:22:25,410 --> 00:22:29,580
devices that are synchronized magically

499
00:22:27,960 --> 00:22:31,910
in this case it's pretty amazing how

500
00:22:29,580 --> 00:22:34,080
well this session table is is

501
00:22:31,910 --> 00:22:36,090
synchronized between the devices and

502
00:22:34,080 --> 00:22:38,120
that means I can also pivot access

503
00:22:36,090 --> 00:22:41,730
between the devices so regardless of

504
00:22:38,120 --> 00:22:44,428
which of the devices my target is

505
00:22:41,730 --> 00:22:47,940
connecting through I can still maybe

506
00:22:44,429 --> 00:22:49,770
hack them through a table so a table can

507
00:22:47,940 --> 00:22:51,809
where it is something where you can set

508
00:22:49,770 --> 00:22:54,570
a value in a what's called a sub table

509
00:22:51,809 --> 00:22:56,040
you can make a lookup of the keys of the

510
00:22:54,570 --> 00:22:58,678
table and that means that you can look

511
00:22:56,040 --> 00:23:00,330
up the key values you can make ad there

512
00:22:58,679 --> 00:23:04,260
you can make replace so you can add new

513
00:23:00,330 --> 00:23:07,740
values or replace all right and that

514
00:23:04,260 --> 00:23:09,570
means that you can overwrite the values

515
00:23:07,740 --> 00:23:11,220
of the session table so if someone has a

516
00:23:09,570 --> 00:23:13,889
cookie you can all right that cookie

517
00:23:11,220 --> 00:23:16,679
with a value that X actually executes

518
00:23:13,890 --> 00:23:20,070
things or you can make XSS if that's

519
00:23:16,679 --> 00:23:25,350
what you want but this is I think more

520
00:23:20,070 --> 00:23:27,600
serious oh and and the consequence of

521
00:23:25,350 --> 00:23:30,959
that naturally is that these devices

522
00:23:27,600 --> 00:23:32,840
they come after the TLS termination and

523
00:23:30,960 --> 00:23:35,850
that means that you can actually

524
00:23:32,840 --> 00:23:38,159
intercept the traffic even though it has

525
00:23:35,850 --> 00:23:41,969
TLS in the communication and you get a

526
00:23:38,160 --> 00:23:44,549
completely clear transparent information

527
00:23:41,970 --> 00:23:48,780
there I'm gonna see if I can load this

528
00:23:44,549 --> 00:23:50,160
video so in this case it's gonna be a

529
00:23:48,780 --> 00:23:51,990
more complex case but I think it's

530
00:23:50,160 --> 00:23:54,600
interesting to watch this is a DNS

531
00:23:51,990 --> 00:23:57,780
resolver and this DNS resolver you're

532
00:23:54,600 --> 00:24:00,120
typing in a hostname and instead of the

533
00:23:57,780 --> 00:24:02,100
hostname that used to be localhost I'm

534
00:24:00,120 --> 00:24:04,500
just going straight off and just

535
00:24:02,100 --> 00:24:08,340
starting to hit it with attacks this

536
00:24:04,500 --> 00:24:10,240
case I forgot to put braces around test

537
00:24:08,340 --> 00:24:12,490
but it doesn't matter because

538
00:24:10,240 --> 00:24:16,990
apparently you can also do uncoated

539
00:24:12,490 --> 00:24:19,300
strings and the requests are taking

540
00:24:16,990 --> 00:24:24,550
along because it's trying to make DNS a

541
00:24:19,300 --> 00:24:29,680
DNS lookup of this prior to prior to

542
00:24:24,550 --> 00:24:33,909
executing it and maybe it gives me a

543
00:24:29,680 --> 00:24:36,100
chance to breathe so right now we can

544
00:24:33,910 --> 00:24:38,410
see that it's vulnerable again because

545
00:24:36,100 --> 00:24:44,669
we put tests in there it also responds

546
00:24:38,410 --> 00:24:44,670
with a big IP server name by the way and

547
00:24:45,000 --> 00:24:49,900
the first thing we do is info level 0

548
00:24:47,950 --> 00:24:51,430
because we want to see the source so the

549
00:24:49,900 --> 00:24:53,200
thing there's plenty of other info

550
00:24:51,430 --> 00:24:55,780
commands that gives you really really

551
00:24:53,200 --> 00:24:57,760
interesting stuff you can look up the

552
00:24:55,780 --> 00:24:59,200
manual yourself if you're interested we

553
00:24:57,760 --> 00:25:00,790
can list the commands you can list the

554
00:24:59,200 --> 00:25:07,720
variables in the context the patch level

555
00:25:00,790 --> 00:25:10,840
of the service etc and I think it's

556
00:25:07,720 --> 00:25:12,670
important to start looking at the source

557
00:25:10,840 --> 00:25:13,419
code early so that you know what you're

558
00:25:12,670 --> 00:25:18,670
looking for

559
00:25:13,420 --> 00:25:20,800
I also I forgot to put the bracket there

560
00:25:18,670 --> 00:25:22,800
I think that's why I it responded

561
00:25:20,800 --> 00:25:30,250
quickly and failed me yes there we go

562
00:25:22,800 --> 00:25:32,320
syntax errors really really bad so

563
00:25:30,250 --> 00:25:34,000
anything you logged in this device the

564
00:25:32,320 --> 00:25:35,800
logging is something that you have to

565
00:25:34,000 --> 00:25:37,660
facilitate yourself you have to write

566
00:25:35,800 --> 00:25:40,450
the log command to make things to log

567
00:25:37,660 --> 00:25:41,920
and that's why but if you make a syntax

568
00:25:40,450 --> 00:25:44,200
error that's going to be logged anyway

569
00:25:41,920 --> 00:25:45,520
because it's an error so here's the

570
00:25:44,200 --> 00:25:46,990
source code and it's a bit more of a

571
00:25:45,520 --> 00:25:49,360
complex case and we're gonna look at the

572
00:25:46,990 --> 00:25:51,670
source code later more in detail but you

573
00:25:49,360 --> 00:25:55,030
can see that there's two evals I've

574
00:25:51,670 --> 00:25:58,780
highlighted those eval is bad evil evil

575
00:25:55,030 --> 00:26:02,139
and there is almost never a valid reason

576
00:25:58,780 --> 00:26:05,620
to use evil at all and it's always

577
00:26:02,140 --> 00:26:09,250
dangerous one of them is in the cache

578
00:26:05,620 --> 00:26:11,919
part so if some a DNS lookup is cached

579
00:26:09,250 --> 00:26:14,800
in the session table then that means

580
00:26:11,920 --> 00:26:16,990
that it will run in the first case in

581
00:26:14,800 --> 00:26:20,950
the second case it's for every new

582
00:26:16,990 --> 00:26:23,080
requests evil is going to be made this

583
00:26:20,950 --> 00:26:24,130
line that we're looking at looking at

584
00:26:23,080 --> 00:26:27,159
right here

585
00:26:24,130 --> 00:26:29,110
is taken from an open-source snippet the

586
00:26:27,160 --> 00:26:29,620
previous one taking for an open-source

587
00:26:29,110 --> 00:26:31,209
snippet

588
00:26:29,620 --> 00:26:32,830
this one is taking herbal source snippet

589
00:26:31,210 --> 00:26:34,900
of a tool that's the most downloaded

590
00:26:32,830 --> 00:26:38,139
scripts on the dev central website by

591
00:26:34,900 --> 00:26:40,000
the way and that means that this is

592
00:26:38,140 --> 00:26:42,340
vulnerable in the vial in the wild in a

593
00:26:40,000 --> 00:26:45,700
lot of places and I chose not to show

594
00:26:42,340 --> 00:26:47,860
that entire script because I thought

595
00:26:45,700 --> 00:26:55,660
this would me be more responsible

596
00:26:47,860 --> 00:26:57,729
maybe so in this case I'm gonna make an

597
00:26:55,660 --> 00:26:59,650
exploit that's not using brackets but

598
00:26:57,730 --> 00:27:02,080
I've realized that since I could do -

599
00:26:59,650 --> 00:27:04,330
crash - switch maybe I can continue this

600
00:27:02,080 --> 00:27:06,610
statement with a semicolon some type in

601
00:27:04,330 --> 00:27:09,820
localhost which is domain name semicolon

602
00:27:06,610 --> 00:27:11,830
and now I'm making it insert inside of

603
00:27:09,820 --> 00:27:14,770
the table and there I'm putting the

604
00:27:11,830 --> 00:27:17,649
string TCP colon colon respond owned

605
00:27:14,770 --> 00:27:19,179
yeah sure whatever and that's just a

606
00:27:17,650 --> 00:27:21,700
string that's being gonna be put there

607
00:27:19,179 --> 00:27:25,360
that eval then we'll evaluate next time

608
00:27:21,700 --> 00:27:36,159
a user starts to look up a host like to

609
00:27:25,360 --> 00:27:39,820
localhost so that's the that's the

610
00:27:36,159 --> 00:27:46,570
entire idea behind that line of

611
00:27:39,820 --> 00:27:48,370
reasoning and right now I didn't put any

612
00:27:46,570 --> 00:27:50,439
output so there's no information for me

613
00:27:48,370 --> 00:27:54,280
that this word turnouts I forgot to make

614
00:27:50,440 --> 00:27:57,039
it TCP respond this to myself that's

615
00:27:54,280 --> 00:27:58,658
fine also URL encoding is important then

616
00:27:57,039 --> 00:28:02,980
I get so that's something I forgot to

617
00:27:58,659 --> 00:28:04,330
and now probably it works and again if

618
00:28:02,980 --> 00:28:13,270
you didn't URL link oh you don't have a

619
00:28:04,330 --> 00:28:16,570
syntax error which is not good and since

620
00:28:13,270 --> 00:28:20,289
this is executed right now it's saved

621
00:28:16,570 --> 00:28:23,289
this into the database disappear respond

622
00:28:20,289 --> 00:28:25,390
own and if I'm now making a lookup for

623
00:28:23,289 --> 00:28:28,150
local host now that's being around next

624
00:28:25,390 --> 00:28:30,730
time anyone requests local host on this

625
00:28:28,150 --> 00:28:32,679
service the code will execute and they

626
00:28:30,730 --> 00:28:34,720
will look like their own this minus will

627
00:28:32,679 --> 00:28:36,970
be code that intercept the traffic steal

628
00:28:34,720 --> 00:28:37,930
their cookies do anything on any other

629
00:28:36,970 --> 00:28:40,330
user session

630
00:28:37,930 --> 00:28:42,430
and this means that we can elevate our

631
00:28:40,330 --> 00:28:44,770
access the moment people start using any

632
00:28:42,430 --> 00:28:47,230
type of resistance between sessions we

633
00:28:44,770 --> 00:28:49,090
can elevate that and actually go into

634
00:28:47,230 --> 00:28:51,700
other user sessions that intercept their

635
00:28:49,090 --> 00:28:55,480
traffic steal their sessions or any

636
00:28:51,700 --> 00:29:07,230
credentials they have I think it's

637
00:28:55,480 --> 00:29:10,240
amazing so I just take it I don't know

638
00:29:07,230 --> 00:29:14,020
okay so this is what the what the code

639
00:29:10,240 --> 00:29:15,940
looked like and to a layman if you're a

640
00:29:14,020 --> 00:29:17,650
network engineer and you're being

641
00:29:15,940 --> 00:29:20,260
presented with this code that you're

642
00:29:17,650 --> 00:29:22,510
inheriting from someone else and you're

643
00:29:20,260 --> 00:29:24,940
supposed to determine why this was bad I

644
00:29:22,510 --> 00:29:28,600
was searching Stack Exchange actually

645
00:29:24,940 --> 00:29:30,460
for four people on in the TCL subgroup

646
00:29:28,600 --> 00:29:33,159
if there was anyone who could explain

647
00:29:30,460 --> 00:29:34,870
why evil was bad and there was nobody

648
00:29:33,160 --> 00:29:37,120
who could explain why it was bad it was

649
00:29:34,870 --> 00:29:40,149
like the most severe recommendation was

650
00:29:37,120 --> 00:29:41,979
someone saying that evil is bad somehow

651
00:29:40,150 --> 00:29:46,480
I remember it was bad I can't explain

652
00:29:41,980 --> 00:29:47,950
why and and why it's bad I'm gonna

653
00:29:46,480 --> 00:29:51,330
explain it to you it's because it

654
00:29:47,950 --> 00:29:54,610
executes whatever is coming into it and

655
00:29:51,330 --> 00:29:58,030
and that's why that's why this line is

656
00:29:54,610 --> 00:30:01,030
bad and that's why this line is bad even

657
00:29:58,030 --> 00:30:03,670
though I as a user I have control of the

658
00:30:01,030 --> 00:30:06,330
variable called host it's inside of

659
00:30:03,670 --> 00:30:08,980
quotes that's being handled by the

660
00:30:06,330 --> 00:30:11,919
variable resolve lookup but even though

661
00:30:08,980 --> 00:30:15,790
it is I'm still inside of the evaluation

662
00:30:11,920 --> 00:30:17,679
statement and and this particular line

663
00:30:15,790 --> 00:30:20,399
you keep seeing over and over again in

664
00:30:17,679 --> 00:30:22,900
different scripts and and also the

665
00:30:20,400 --> 00:30:24,580
unfolded version like this one where

666
00:30:22,900 --> 00:30:29,710
it's being executed inside of another

667
00:30:24,580 --> 00:30:31,360
context and I think it's it's a

668
00:30:29,710 --> 00:30:32,740
responsible not to bring it up and since

669
00:30:31,360 --> 00:30:35,530
the documentation doesn't really show

670
00:30:32,740 --> 00:30:37,540
anything then I think it's it's there is

671
00:30:35,530 --> 00:30:39,220
a point in in in starting to investigate

672
00:30:37,540 --> 00:30:42,730
it and if you're a pen tester and if you

673
00:30:39,220 --> 00:30:44,620
are doing an f5 device pen test you need

674
00:30:42,730 --> 00:30:47,050
to ask for the source code you need to

675
00:30:44,620 --> 00:30:49,419
actually make a code review and you need

676
00:30:47,050 --> 00:30:51,879
to look for these things and if you

677
00:30:49,420 --> 00:30:55,270
think that's complex which it is

678
00:30:51,880 --> 00:30:57,400
try to read up on on these slides but

679
00:30:55,270 --> 00:30:59,530
also try to use this tool I put it on

680
00:30:57,400 --> 00:31:02,710
github and it's called TCL scan and it's

681
00:30:59,530 --> 00:31:05,350
a tool that someone else made five years

682
00:31:02,710 --> 00:31:06,610
ago and abandoned it and he fell off

683
00:31:05,350 --> 00:31:07,510
there's the guy who did it and I

684
00:31:06,610 --> 00:31:09,790
couldn't find him again

685
00:31:07,510 --> 00:31:13,629
and the tool was pretty broken but I

686
00:31:09,790 --> 00:31:16,330
spent some time fixing it and after

687
00:31:13,630 --> 00:31:19,060
fixing it it's a written in rust what it

688
00:31:16,330 --> 00:31:22,540
does is it scans code lines like these

689
00:31:19,060 --> 00:31:24,909
for keyword keywords that are dangerous

690
00:31:22,540 --> 00:31:27,639
on the same line so it has a list of all

691
00:31:24,910 --> 00:31:30,180
the bad keywords it has a list of the

692
00:31:27,640 --> 00:31:33,970
bad behaviors unquoted

693
00:31:30,180 --> 00:31:36,100
variables and coded variables and once

694
00:31:33,970 --> 00:31:38,560
it finds that it puts a danger warning

695
00:31:36,100 --> 00:31:39,669
and in this case it will put the danger

696
00:31:38,560 --> 00:31:41,470
in this case it will put a warning

697
00:31:39,670 --> 00:31:44,020
because this is maybe bad actually it's

698
00:31:41,470 --> 00:31:46,510
definitely well but it doesn't know that

699
00:31:44,020 --> 00:31:49,030
and in a lot of cases the vulnerable

700
00:31:46,510 --> 00:31:50,500
code will be identified using TCL scan

701
00:31:49,030 --> 00:31:53,530
and that's something that you can build

702
00:31:50,500 --> 00:31:56,020
into your get hook so the next time

703
00:31:53,530 --> 00:31:58,210
someone makes a get commit all viral

704
00:31:56,020 --> 00:32:00,280
code you can get a warning saying that

705
00:31:58,210 --> 00:32:02,170
the code you just committed is dangerous

706
00:32:00,280 --> 00:32:04,120
and that's something you have to enforce

707
00:32:02,170 --> 00:32:05,710
on your organization so that they

708
00:32:04,120 --> 00:32:07,449
actually find the box themself because

709
00:32:05,710 --> 00:32:09,490
you cannot be there every time they make

710
00:32:07,450 --> 00:32:11,050
a change and make another pen test or

711
00:32:09,490 --> 00:32:17,040
maybe you can and make a lot of money

712
00:32:11,050 --> 00:32:17,040
but that's probably not a safe way to go

713
00:32:19,050 --> 00:32:25,540
moving on there is another tool that I

714
00:32:22,300 --> 00:32:30,490
contributed to that is pronounced

715
00:32:25,540 --> 00:32:34,510
testicle and yes I didn't come up with

716
00:32:30,490 --> 00:32:36,820
the word though so test TCL is a tool

717
00:32:34,510 --> 00:32:38,590
that's used for unit testing and it's

718
00:32:36,820 --> 00:32:42,550
running in a Java environment that has a

719
00:32:38,590 --> 00:32:44,980
TCL interpreter and that environment can

720
00:32:42,550 --> 00:32:47,169
look at logical flaws that you can make

721
00:32:44,980 --> 00:32:49,900
to your code so that you can actually

722
00:32:47,170 --> 00:32:51,280
put it in a test or a unit test and you

723
00:32:49,900 --> 00:32:53,950
can actually try it over and over again

724
00:32:51,280 --> 00:32:55,899
with various types of inputs on your PC

725
00:32:53,950 --> 00:32:57,520
and not in the real environment which is

726
00:32:55,900 --> 00:32:59,560
much more convenient so you can quickly

727
00:32:57,520 --> 00:33:02,740
find out if you're vulnerable you can

728
00:32:59,560 --> 00:33:04,629
quickly found out find out if your logic

729
00:33:02,740 --> 00:33:05,560
is flawed which is like half the cases

730
00:33:04,630 --> 00:33:07,600
the logic is slow

731
00:33:05,560 --> 00:33:09,429
in some way or another and if you have

732
00:33:07,600 --> 00:33:11,139
more complex cases that really really

733
00:33:09,430 --> 00:33:14,550
will help you to divide the code into

734
00:33:11,140 --> 00:33:17,140
tiny modules and unit test toasts I

735
00:33:14,550 --> 00:33:19,270
contributed some code related to cookie

736
00:33:17,140 --> 00:33:22,060
handling right now this this tool is not

737
00:33:19,270 --> 00:33:24,400
entirely complete but anyone is welcome

738
00:33:22,060 --> 00:33:26,350
to help is mostly written in tickle

739
00:33:24,400 --> 00:33:27,940
itself and it's very easy to do if you

740
00:33:26,350 --> 00:33:32,590
can code and I rule you can definitely

741
00:33:27,940 --> 00:33:34,420
help out with this project I wrote that

742
00:33:32,590 --> 00:33:38,649
I will make a demo I'm I don't have a

743
00:33:34,420 --> 00:33:46,210
demo this but I encourage you to

744
00:33:38,650 --> 00:33:48,580
download it and and try it out and there

745
00:33:46,210 --> 00:33:52,060
are and there will be released more test

746
00:33:48,580 --> 00:33:54,270
tools during this summer for identifying

747
00:33:52,060 --> 00:33:56,260
these type of vulnerabilities but due to

748
00:33:54,270 --> 00:33:59,440
responsible disclosure I cannot do that

749
00:33:56,260 --> 00:34:00,879
yet I really really want you guys who

750
00:33:59,440 --> 00:34:02,560
happen to have these devices and I'm

751
00:34:00,880 --> 00:34:04,210
sure that every other person in this

752
00:34:02,560 --> 00:34:07,300
audience belongs to an organization that

753
00:34:04,210 --> 00:34:09,100
has one go back take a look at this

754
00:34:07,300 --> 00:34:11,259
investigate if you're vulnerable and

755
00:34:09,100 --> 00:34:12,880
then I'll release the tools to you so

756
00:34:11,260 --> 00:34:15,190
you can actually start finding other

757
00:34:12,880 --> 00:34:18,340
devices or go to your bug bounty and

758
00:34:15,190 --> 00:34:21,159
make money or whatever that's gonna be

759
00:34:18,340 --> 00:34:22,840
the next step I think this is it from me

760
00:34:21,159 --> 00:34:25,000
and I really really encourage you to ask

761
00:34:22,840 --> 00:34:26,860
questions because everyone's silent and

762
00:34:25,000 --> 00:34:35,830
I'm sure there is a lot of questions out

763
00:34:26,860 --> 00:34:38,170
there gotta find out microphone for you

764
00:34:35,830 --> 00:34:41,679
guys hold on I haven't like you're so

765
00:34:38,170 --> 00:34:47,110
fast I'm speaking fast I'm finished

766
00:34:41,679 --> 00:34:50,199
first this guy that's what yeah you said

767
00:34:47,110 --> 00:34:51,700
it so show of hands is over there he's

768
00:34:50,199 --> 00:34:55,810
over there here somewhere

769
00:34:51,699 --> 00:35:02,620
no the hairy guy yes this guy the an

770
00:34:55,810 --> 00:35:04,240
orderly guy this dark guy hey I'm

771
00:35:02,620 --> 00:35:08,020
curious about the first part when you

772
00:35:04,240 --> 00:35:11,290
talked about how you're able to it was

773
00:35:08,020 --> 00:35:12,910
forms right or I'm thinking about it's

774
00:35:11,290 --> 00:35:16,210
impossible to get a full as a seraph in

775
00:35:12,910 --> 00:35:17,830
it well you're connecting externally

776
00:35:16,210 --> 00:35:19,210
sending in some information you're

777
00:35:17,830 --> 00:35:22,080
getting internal network

778
00:35:19,210 --> 00:35:24,700
amazing out yeah so it's a full-on

779
00:35:22,080 --> 00:35:27,609
suicide request for URI yeah yeah for

780
00:35:24,700 --> 00:35:29,230
sure I mean you can you can access

781
00:35:27,609 --> 00:35:31,660
something called I files if you want to

782
00:35:29,230 --> 00:35:34,330
do request forgeries for local files you

783
00:35:31,660 --> 00:35:36,009
can do that but you can also yeah you

784
00:35:34,330 --> 00:35:37,630
can also scan the internal network you

785
00:35:36,010 --> 00:35:39,339
can turn this into socks proxy if you

786
00:35:37,630 --> 00:35:41,500
want to you can do port scanning with it

787
00:35:39,339 --> 00:35:44,619
if you want to bounty please

788
00:35:41,500 --> 00:35:48,250
yeah that's pretty neat

789
00:35:44,619 --> 00:35:57,880
anyone else sure there must be more

790
00:35:48,250 --> 00:36:00,640
questions good Hey so it's just to

791
00:35:57,880 --> 00:36:04,150
double check this is something you can't

792
00:36:00,640 --> 00:36:07,000
fix this by patching your f5 device

793
00:36:04,150 --> 00:36:09,580
right you have to fix your own code that

794
00:36:07,000 --> 00:36:11,650
you your own tickle code yeah it's a

795
00:36:09,580 --> 00:36:15,970
good reminder if I didn't say that

796
00:36:11,650 --> 00:36:19,089
yeah so the from a five side what they

797
00:36:15,970 --> 00:36:20,980
can do for you is that they can use

798
00:36:19,089 --> 00:36:22,900
their editor and they can warn you if

799
00:36:20,980 --> 00:36:24,880
you're doing bad things but it's very

800
00:36:22,900 --> 00:36:27,430
very hard for them to determine when

801
00:36:24,880 --> 00:36:29,470
you're doing bad things because today a

802
00:36:27,430 --> 00:36:31,480
lot of code uses eval and that

803
00:36:29,470 --> 00:36:34,649
necessarily doesn't have to be bad it's

804
00:36:31,480 --> 00:36:37,420
only bad if there's user input in it

805
00:36:34,650 --> 00:36:40,830
this is not a fixable issue this is how

806
00:36:37,420 --> 00:36:43,119
the language works you cannot take away

807
00:36:40,830 --> 00:36:46,500
I can't even go back there but you can't

808
00:36:43,119 --> 00:36:51,160
take away two of the three ways of doing

809
00:36:46,500 --> 00:36:52,780
doing quotations like you can you can't

810
00:36:51,160 --> 00:36:54,549
take those away today because then you

811
00:36:52,780 --> 00:36:56,890
would destroy every single script you

812
00:36:54,550 --> 00:36:59,560
cannot remove expressions if you remove

813
00:36:56,890 --> 00:37:04,029
mass from programming what it's there

814
00:36:59,560 --> 00:37:05,650
left you know it's and related replacing

815
00:37:04,030 --> 00:37:08,380
the products obviously it would take

816
00:37:05,650 --> 00:37:10,540
time so what you have to do is go back

817
00:37:08,380 --> 00:37:13,599
and look at your own code run these

818
00:37:10,540 --> 00:37:16,150
tools and verify if your code is safe or

819
00:37:13,599 --> 00:37:18,369
not that's what you can do there's a guy

820
00:37:16,150 --> 00:37:21,099
down there with his hand up yeah Johanns

821
00:37:18,369 --> 00:37:23,380
oh I see you I'm so happy I took the

822
00:37:21,099 --> 00:37:25,240
time for your questions because like

823
00:37:23,380 --> 00:37:30,730
since I rushed through it there's gonna

824
00:37:25,240 --> 00:37:32,979
be a lot of asks obviously thanks for a

825
00:37:30,730 --> 00:37:34,990
great talk some interesting

826
00:37:32,980 --> 00:37:37,900
things with the big iron I would just

827
00:37:34,990 --> 00:37:41,229
like to add that these devices usually

828
00:37:37,900 --> 00:37:44,050
also provide the stickiness cookies so

829
00:37:41,230 --> 00:37:45,460
even though you don't find this server

830
00:37:44,050 --> 00:37:47,710
header when you're scanning if you get a

831
00:37:45,460 --> 00:37:49,570
cookie that sort with like big IP or

832
00:37:47,710 --> 00:37:52,030
something in the long fossa value then

833
00:37:49,570 --> 00:37:53,920
it could probably show that it's a

834
00:37:52,030 --> 00:37:56,200
device as well so something to include

835
00:37:53,920 --> 00:37:59,680
in the scanning I guess it's it's true

836
00:37:56,200 --> 00:38:01,868
and I don't know by heart the name of

837
00:37:59,680 --> 00:38:03,399
that cookie field and maybe it can vary

838
00:38:01,869 --> 00:38:06,100
but there is a cookie field is generated

839
00:38:03,400 --> 00:38:09,820
to handle the case when you have more

840
00:38:06,100 --> 00:38:11,170
than one load balancer and and those are

841
00:38:09,820 --> 00:38:12,369
communicating with each other using a

842
00:38:11,170 --> 00:38:14,590
cookie that they put on the client

843
00:38:12,369 --> 00:38:18,940
that's true and that's something you can

844
00:38:14,590 --> 00:38:24,730
put in your show down to thing anyone

845
00:38:18,940 --> 00:38:27,940
else more questions yeah we have there's

846
00:38:24,730 --> 00:38:31,650
two more huh see can you pass the mic

847
00:38:27,940 --> 00:38:31,650
down Thanks

848
00:38:32,080 --> 00:38:36,970
so when you did the show down like

849
00:38:34,030 --> 00:38:39,010
scanning to see how many f5s there were

850
00:38:36,970 --> 00:38:43,290
did you do any like tests to see how

851
00:38:39,010 --> 00:38:47,590
many of these were easily available yeah

852
00:38:43,290 --> 00:38:49,420
I've been asked to do this by a lot of

853
00:38:47,590 --> 00:38:53,680
people and I really really refrained

854
00:38:49,420 --> 00:38:57,310
from doing it because eventually that's

855
00:38:53,680 --> 00:38:59,230
something that might turn out in a case

856
00:38:57,310 --> 00:39:01,869
where I don't want to be you know like

857
00:38:59,230 --> 00:39:03,670
if I wasn't a bug bounty program sure I

858
00:39:01,869 --> 00:39:04,960
could do this on all the clients

859
00:39:03,670 --> 00:39:08,230
obviously and I think that's a good

860
00:39:04,960 --> 00:39:10,270
thing to do but this is an intrusion

861
00:39:08,230 --> 00:39:11,920
like if you exploit and run code on

862
00:39:10,270 --> 00:39:13,750
someone else's system it's an intrusion

863
00:39:11,920 --> 00:39:15,550
and I really can't do that and if I

864
00:39:13,750 --> 00:39:24,160
could do it I wouldn't talk about it on

865
00:39:15,550 --> 00:39:28,720
stage no but it wasn't me okay raise of

866
00:39:24,160 --> 00:39:32,879
hands more questions yeah I thanks for

867
00:39:28,720 --> 00:39:36,129
the great talk these slides be available

868
00:39:32,880 --> 00:39:37,990
anywhere they will never lets us then

869
00:39:36,130 --> 00:39:39,910
they will be posted as a YouTube channel

870
00:39:37,990 --> 00:39:43,299
you can watch them over and over and

871
00:39:39,910 --> 00:39:44,618
over again yeah cool yeah if Peter

872
00:39:43,300 --> 00:39:45,600
doesn't mess up but I don't think he

873
00:39:44,619 --> 00:39:48,750
will yeah

874
00:39:45,600 --> 00:39:51,630
yeah I want to have the videos in the

875
00:39:48,750 --> 00:39:56,180
slides but then you have to go back and

876
00:39:51,630 --> 00:40:03,350
watch till the video okay thank you yep

877
00:39:56,180 --> 00:40:07,230
anyone else don't be shy he bites no

878
00:40:03,350 --> 00:40:08,330
okay well thank you Christopher thanks

879
00:40:07,230 --> 00:40:12,880
guys

880
00:40:08,330 --> 00:40:16,019
awesome with time to spare

881
00:40:12,880 --> 00:40:16,019
[Applause]

