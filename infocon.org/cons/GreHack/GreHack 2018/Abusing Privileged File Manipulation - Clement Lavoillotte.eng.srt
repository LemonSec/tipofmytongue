1
00:00:02,800 --> 00:00:09,680
hi everyone<font color="#E5E5E5"> I'm a</font><font color="#CCCCCC"> Clemence</font><font color="#E5E5E5"> Lafayette and</font>

2
00:00:06,890 --> 00:00:12,830
I work for a prophetess and I'm going to

3
00:00:09,680 --> 00:00:15,440
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> privilege</font><font color="#CCCCCC"> fine manipulation</font>

4
00:00:12,830 --> 00:00:18,880
and how it<font color="#E5E5E5"> can be abused</font><font color="#CCCCCC"> to perform a</font>

5
00:00:15,440 --> 00:00:23,270
<font color="#E5E5E5">privilege escalation on Windows systems</font>

6
00:00:18,880 --> 00:00:26,509
so as I said the attack surface of fine

7
00:00:23,270 --> 00:00:28,430
manipulation<font color="#E5E5E5"> on Windows and turning an</font>

8
00:00:26,509 --> 00:00:31,160
arbitrary file you read or a<font color="#E5E5E5"> bit verify</font>

9
00:00:28,430 --> 00:00:33,860
<font color="#CCCCCC">rat it bugs into privileges condition</font>

10
00:00:31,160 --> 00:00:38,440
<font color="#E5E5E5">with a small focus on fine deletion or a</font>

11
00:00:33,860 --> 00:00:42,769
ve quarantine<font color="#CCCCCC"> bugs and we'll show some</font>

12
00:00:38,440 --> 00:00:44,959
actual example of<font color="#CCCCCC"> bugs</font><font color="#E5E5E5"> that we found in</font>

13
00:00:42,770 --> 00:00:47,600
popular products as well as some

14
00:00:44,960 --> 00:00:54,530
techniques<font color="#E5E5E5"> and tools to exploit these</font>

15
00:00:47,600 --> 00:01:05,180
bags<font color="#E5E5E5"> oh yeah and that one too I'll start</font>

16
00:00:54,530 --> 00:01:09,260
with the first<font color="#E5E5E5"> demo here so with the</font>

17
00:01:05,180 --> 00:01:11,900
<font color="#E5E5E5">help of our friend McAfee endpoint</font>

18
00:01:09,260 --> 00:01:16,720
security<font color="#CCCCCC"> we see that we</font><font color="#E5E5E5"> have some log</font>

19
00:01:11,900 --> 00:01:20,060
files here<font color="#E5E5E5"> and that on these log files</font>

20
00:01:16,720 --> 00:01:27,740
<font color="#E5E5E5">we have full</font><font color="#CCCCCC"> control granted to the</font>

21
00:01:20,060 --> 00:01:31,040
everyone group and we're in an

22
00:01:27,740 --> 00:01:39,199
unprivileged user session so<font color="#CCCCCC"> we ran some</font>

23
00:01:31,040 --> 00:01:43,850
magic go to system<font color="#CCCCCC"> 30 to trigger an</font>

24
00:01:39,200 --> 00:01:52,450
update<font color="#E5E5E5"> and we see here a while DLL</font>

25
00:01:43,850 --> 00:01:52,449
appears we could be some

26
00:01:54,310 --> 00:02:09,560
and here is<font color="#CCCCCC"> our system shell so prevent</font>

27
00:02:05,360 --> 00:02:11,480
<font color="#CCCCCC">file manipulation bugs</font><font color="#E5E5E5"> basically these</font>

28
00:02:09,560 --> 00:02:14,420
are bugs in file<font color="#CCCCCC"> operations that are</font>

29
00:02:11,480 --> 00:02:17,149
performed by<font color="#CCCCCC"> our village processes</font><font color="#E5E5E5"> so</font>

30
00:02:14,420 --> 00:02:19,970
<font color="#E5E5E5">create services for instance driver law</font>

31
00:02:17,150 --> 00:02:22,520
stuff like that<font color="#E5E5E5"> and of course when do</font>

32
00:02:19,970 --> 00:02:26,810
the<font color="#E5E5E5"> windows privilege component</font>

33
00:02:22,520 --> 00:02:29,210
<font color="#E5E5E5">manipulate files that are accessible</font><font color="#CCCCCC"> or</font>

34
00:02:26,810 --> 00:02:35,780
that the user has some control<font color="#CCCCCC"> over at</font>

35
00:02:29,210 --> 00:02:37,970
this file<font color="#E5E5E5"> well happens</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we it</font>

36
00:02:35,780 --> 00:02:40,130
actually works with<font color="#E5E5E5"> different kind of</font>

37
00:02:37,970 --> 00:02:42,590
resources<font color="#E5E5E5"> it's a basic</font><font color="#CCCCCC"> principle in a</font>

38
00:02:40,130 --> 00:02:45,730
privilege escalation but files are just

39
00:02:42,590 --> 00:02:48,440
<font color="#E5E5E5">an easy target and often overlooked one</font>

40
00:02:45,730 --> 00:02:51,500
this example<font color="#E5E5E5"> are well known to pen</font>

41
00:02:48,440 --> 00:02:54,320
testers for instance if you have an

42
00:02:51,500 --> 00:02:58,370
executable that<font color="#E5E5E5"> is a user of writable</font>

43
00:02:54,320 --> 00:03:02,480
writable by<font color="#E5E5E5"> any user but that is used to</font>

44
00:02:58,370 --> 00:03:04,820
you for instance<font color="#CCCCCC"> run a</font><font color="#E5E5E5"> service with the</font>

45
00:03:02,480 --> 00:03:08,320
system user account<font color="#E5E5E5"> well you have a no</font>

46
00:03:04,820 --> 00:03:10,910
<font color="#E5E5E5">view path to a privilege escalation and</font>

47
00:03:08,320 --> 00:03:13,970
it's actually<font color="#E5E5E5"> quite common in in</font>

48
00:03:10,910 --> 00:03:17,180
software<font color="#E5E5E5"> even</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> security software</font>

49
00:03:13,970 --> 00:03:19,790
thanks to these for instance common

50
00:03:17,180 --> 00:03:24,590
mistakes like access rights<font color="#E5E5E5"> mixed</font>

51
00:03:19,790 --> 00:03:27,470
configuration<font color="#E5E5E5"> accessing user own files</font>

52
00:03:24,590 --> 00:03:30,110
without impersonation<font color="#E5E5E5"> or for</font><font color="#CCCCCC"> instance</font>

53
00:03:27,470 --> 00:03:32,030
<font color="#E5E5E5">whether is the user can manipulate the</font>

54
00:03:30,110 --> 00:03:36,489
file between<font color="#E5E5E5"> the time it is checked and</font>

55
00:03:32,030 --> 00:03:39,830
which is between the time<font color="#E5E5E5"> it is used and</font>

56
00:03:36,489 --> 00:03:42,739
<font color="#E5E5E5">because these</font><font color="#CCCCCC"> are logic bugs</font><font color="#E5E5E5"> the user</font>

57
00:03:39,830 --> 00:03:46,130
usually very stable<font color="#E5E5E5"> they don't require a</font>

58
00:03:42,739 --> 00:03:48,860
memory<font color="#CCCCCC"> courage corruption or other risky</font>

59
00:03:46,130 --> 00:03:50,900
stuff and they often survive<font color="#E5E5E5"> a code</font>

60
00:03:48,860 --> 00:03:53,540
refactoring so you can find the same bug

61
00:03:50,900 --> 00:03:58,670
<font color="#E5E5E5">in different version of the same product</font>

62
00:03:53,540 --> 00:04:03,049
for instance<font color="#E5E5E5"> and to</font><font color="#CCCCCC"> find this bug</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> at</font>

63
00:03:58,670 --> 00:04:03,829
<font color="#E5E5E5">least the the</font><font color="#CCCCCC"> easy one you usually</font><font color="#E5E5E5"> don't</font>

64
00:04:03,050 --> 00:04:06,290
need<font color="#CCCCCC"> to</font>

65
00:04:03,830 --> 00:04:08,630
<font color="#E5E5E5">to start a long and tedious</font><font color="#CCCCCC"> process of</font><font color="#E5E5E5"> a</font>

66
00:04:06,290 --> 00:04:11,630
reverse engineering<font color="#E5E5E5"> the product you can</font>

67
00:04:08,630 --> 00:04:14,750
just fire up<font color="#CCCCCC"> rockman process monitor and</font>

68
00:04:11,630 --> 00:04:16,969
look at what the project does and then

69
00:04:14,750 --> 00:04:19,130
punishments try to change some stuff<font color="#E5E5E5"> in</font>

70
00:04:16,970 --> 00:04:20,780
the in whatever<font color="#E5E5E5"> you can access in the</font>

71
00:04:19,130 --> 00:04:25,030
<font color="#CCCCCC">project form</font><font color="#E5E5E5"> your unprivileged user</font>

72
00:04:20,779 --> 00:04:25,030
<font color="#CCCCCC">account</font><font color="#E5E5E5"> and see how the</font><font color="#CCCCCC"> projects react</font>

73
00:04:25,090 --> 00:04:32,119
<font color="#E5E5E5">you will also need a way</font><font color="#CCCCCC"> to display</font><font color="#E5E5E5"> ACLs</font>

74
00:04:29,300 --> 00:04:36,070
on files<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> can just a</font><font color="#E5E5E5"> user</font><font color="#CCCCCC"> Explorer</font>

75
00:04:32,120 --> 00:04:40,910
as we saw or user whatever<font color="#E5E5E5"> to you prefer</font>

76
00:04:36,070 --> 00:04:43,670
and to exploit this<font color="#CCCCCC"> bug we basically</font>

77
00:04:40,910 --> 00:04:46,240
want to<font color="#CCCCCC"> make the privilege component do</font>

78
00:04:43,670 --> 00:04:49,310
something<font color="#E5E5E5"> that is useful for</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> attacker</font>

79
00:04:46,240 --> 00:04:52,220
<font color="#E5E5E5">so for instance if</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> have an IP try</font>

80
00:04:49,310 --> 00:04:56,150
file read<font color="#CCCCCC"> bug</font><font color="#E5E5E5"> we can try to read one of</font>

81
00:04:52,220 --> 00:04:58,490
these three hives<font color="#E5E5E5"> to grab the secrets</font>

82
00:04:56,150 --> 00:05:00,679
that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> stored inside them like for</font>

83
00:04:58,490 --> 00:05:04,580
instance<font color="#E5E5E5"> the</font><font color="#CCCCCC"> analyst rattles password</font>

84
00:05:00,680 --> 00:05:07,490
<font color="#CCCCCC">Hajj</font><font color="#E5E5E5"> and if you have a novice high</font><font color="#CCCCCC"> file</font>

85
00:05:04,580 --> 00:05:10,580
<font color="#CCCCCC">right when the usual way for instance is</font>

86
00:05:07,490 --> 00:05:13,850
<font color="#CCCCCC">to</font><font color="#E5E5E5"> either replace an existing binary or</font>

87
00:05:10,580 --> 00:05:16,700
to drop a<font color="#CCCCCC"> dll</font><font color="#E5E5E5"> in in the path and try to</font>

88
00:05:13,850 --> 00:05:19,580
hijack another<font color="#CCCCCC"> privileged process for</font>

89
00:05:16,700 --> 00:05:22,820
instance<font color="#E5E5E5"> to gain code execution in a</font>

90
00:05:19,580 --> 00:05:26,690
privileged process and there is also a

91
00:05:22,820 --> 00:05:29,960
nice trick<font color="#E5E5E5"> run by a gem for show</font>

92
00:05:26,690 --> 00:05:34,940
that basically uses<font color="#CCCCCC"> the Jakob service</font>

93
00:05:29,960 --> 00:05:37,909
which runs<font color="#CCCCCC"> a system and the this service</font>

94
00:05:34,940 --> 00:05:40,040
can be made a true load a file with any

95
00:05:37,910 --> 00:05:42,740
name and any extension<font color="#E5E5E5"> as long as it's</font>

96
00:05:40,040 --> 00:05:45,620
<font color="#E5E5E5">in the system32 folder so if you have an</font>

97
00:05:42,740 --> 00:05:49,760
arbitrary<font color="#E5E5E5"> file right</font><font color="#CCCCCC"> bug</font><font color="#E5E5E5"> you can just</font>

98
00:05:45,620 --> 00:05:51,500
drop a file in the system32 folder<font color="#CCCCCC"> even</font>

99
00:05:49,760 --> 00:05:53,870
if you don't control<font color="#CCCCCC"> the name of the</font>

100
00:05:51,500 --> 00:05:56,930
file you<font color="#E5E5E5"> can then load it as a</font><font color="#CCCCCC"> dll in</font>

101
00:05:53,870 --> 00:05:58,340
the<font color="#CCCCCC"> DIA curb service</font><font color="#E5E5E5"> but of course you</font>

102
00:05:56,930 --> 00:06:00,950
will need<font color="#E5E5E5"> a way to control the content</font>

103
00:05:58,340 --> 00:06:04,880
of the file so that you<font color="#E5E5E5"> and put your</font>

104
00:06:00,950 --> 00:06:07,969
evil code in there<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we're going</font><font color="#E5E5E5"> to</font>

105
00:06:04,880 --> 00:06:12,440
talk a bit<font color="#CCCCCC"> about arbitrary</font><font color="#E5E5E5"> file delete a</font>

106
00:06:07,970 --> 00:06:14,810
bit later so these are the main

107
00:06:12,440 --> 00:06:16,880
techniques that we can<font color="#CCCCCC"> use to abuse this</font>

108
00:06:14,810 --> 00:06:19,610
type of of bugs

109
00:06:16,880 --> 00:06:22,880
<font color="#E5E5E5">they were published</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> James for show</font>

110
00:06:19,610 --> 00:06:24,890
<font color="#E5E5E5">longer with some specific tools to</font>

111
00:06:22,880 --> 00:06:30,050
exploit them<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> going to see some of</font>

112
00:06:24,890 --> 00:06:31,820
<font color="#CCCCCC">them</font><font color="#E5E5E5"> and we can also use some for some</font>

113
00:06:30,050 --> 00:06:34,880
of these techniques<font color="#CCCCCC"> we can also use some</font>

114
00:06:31,820 --> 00:06:39,380
built-in tools in Windows like<font color="#CCCCCC"> your just</font>

115
00:06:34,880 --> 00:06:41,840
plain old<font color="#CCCCCC"> pour shell and thanks to this</font>

116
00:06:39,380 --> 00:06:46,460
technique mainly file system attacks

117
00:06:41,840 --> 00:06:49,099
that once were mostly difficult to

118
00:06:46,460 --> 00:06:51,260
exploit<font color="#E5E5E5"> or even sometimes</font><font color="#CCCCCC"> considered</font><font color="#E5E5E5"> non</font>

119
00:06:49,100 --> 00:06:55,220
<font color="#CCCCCC">exportable</font><font color="#E5E5E5"> are no actually quite easy</font><font color="#CCCCCC"> to</font>

120
00:06:51,260 --> 00:06:59,330
exploit so the first technique<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font>

121
00:06:55,220 --> 00:07:01,970
NTFS<font color="#CCCCCC"> 1.0</font><font color="#E5E5E5"> Junction it's basically just a</font>

122
00:06:59,330 --> 00:07:05,419
redirection<font color="#CCCCCC"> of a directory to another</font>

123
00:07:01,970 --> 00:07:08,780
directory<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can create those as an</font>

124
00:07:05,420 --> 00:07:14,270
unprivileged user so for instance here

125
00:07:08,780 --> 00:07:17,510
<font color="#E5E5E5">if a process try to access the path CDR</font>

126
00:07:14,270 --> 00:07:22,820
file dot exe<font color="#E5E5E5"> it will</font><font color="#CCCCCC"> actually access</font><font color="#E5E5E5"> the</font>

127
00:07:17,510 --> 00:07:28,250
other file dot exe object major symbolic

128
00:07:22,820 --> 00:07:30,260
links are basically symbolic links in

129
00:07:28,250 --> 00:07:32,290
the object<font color="#CCCCCC"> manager</font><font color="#E5E5E5"> name space because</font>

130
00:07:30,260 --> 00:07:35,180
unprivileged user cannot<font color="#E5E5E5"> create</font>

131
00:07:32,290 --> 00:07:37,940
<font color="#CCCCCC">filesystem symbolic links there is a</font>

132
00:07:35,180 --> 00:07:40,820
specific privilege for that but they can

133
00:07:37,940 --> 00:07:45,310
create<font color="#E5E5E5"> symbolic links in the object</font>

134
00:07:40,820 --> 00:07:45,310
<font color="#CCCCCC">manager namespace in an object directory</font>

135
00:07:45,850 --> 00:07:52,820
and opportunity clocks are basically<font color="#E5E5E5"> a</font>

136
00:07:50,510 --> 00:07:56,570
<font color="#E5E5E5">kind of</font><font color="#CCCCCC"> lock that you can place on</font><font color="#E5E5E5"> a</font>

137
00:07:52,820 --> 00:07:59,870
file again as an unprivileged user and

138
00:07:56,570 --> 00:08:03,380
if if<font color="#E5E5E5"> another an external process</font><font color="#CCCCCC"> try to</font>

139
00:07:59,870 --> 00:08:06,260
<font color="#E5E5E5">access that file</font><font color="#CCCCCC"> it won't be able to do</font>

140
00:08:03,380 --> 00:08:09,980
so before you you remove the that lock

141
00:08:06,260 --> 00:08:13,130
<font color="#E5E5E5">so it's a really handy to exploit for</font>

142
00:08:09,980 --> 00:08:16,880
instance<font color="#CCCCCC"> erase conditions and to make it</font>

143
00:08:13,130 --> 00:08:20,450
<font color="#E5E5E5">really easy to</font><font color="#CCCCCC"> an released a border to</font>

144
00:08:16,880 --> 00:08:22,250
<font color="#CCCCCC">form some</font><font color="#E5E5E5"> of these type of attacks it</font>

145
00:08:20,450 --> 00:08:24,650
does have some limitations like for

146
00:08:22,250 --> 00:08:27,979
instance<font color="#E5E5E5"> it does not allow you to a</font>

147
00:08:24,650 --> 00:08:32,348
granularly<font color="#E5E5E5"> allowed just one access</font>

148
00:08:27,979 --> 00:08:34,789
it's once you<font color="#E5E5E5"> leave leave the the lock</font>

149
00:08:32,349 --> 00:08:42,159
<font color="#E5E5E5">were</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> all access that our</font>

150
00:08:34,789 --> 00:08:46,220
<font color="#E5E5E5">wedding will occur and the most powerful</font>

151
00:08:42,159 --> 00:08:48,560
<font color="#E5E5E5">techniques</font><font color="#CCCCCC"> are the combination of these</font>

152
00:08:46,220 --> 00:08:51,860
previous techniques so for<font color="#E5E5E5"> instance if</font>

153
00:08:48,560 --> 00:08:55,400
you combine<font color="#CCCCCC"> Directorate Junction with an</font>

154
00:08:51,860 --> 00:08:58,250
object<font color="#E5E5E5"> manager symbolic link you get</font>

155
00:08:55,400 --> 00:09:01,520
something<font color="#CCCCCC"> that behaves</font><font color="#E5E5E5"> like a symbolic</font>

156
00:08:58,250 --> 00:09:03,830
link like a file<font color="#E5E5E5"> system level symbolic</font>

157
00:09:01,520 --> 00:09:08,270
link so basically for instance if you

158
00:09:03,830 --> 00:09:11,510
have a path directory<font color="#E5E5E5"> cd-r you can</font>

159
00:09:08,270 --> 00:09:15,020
redirect it<font color="#CCCCCC"> turn it into a junction</font>

160
00:09:11,510 --> 00:09:17,420
<font color="#CCCCCC">through the object directory RPC control</font>

161
00:09:15,020 --> 00:09:21,319
and in that object directory you can

162
00:09:17,420 --> 00:09:24,800
<font color="#E5E5E5">create a symbolic link that points to</font>

163
00:09:21,320 --> 00:09:30,350
another file so<font color="#E5E5E5"> you have a functional</font>

164
00:09:24,800 --> 00:09:33,199
equivalent<font color="#E5E5E5"> of a symbolic link and if you</font>

165
00:09:30,350 --> 00:09:37,360
<font color="#E5E5E5">combine this with an</font><font color="#CCCCCC"> OP lock so you</font>

166
00:09:33,200 --> 00:09:40,880
<font color="#E5E5E5">create a symbolic link as before</font><font color="#CCCCCC"> and</font>

167
00:09:37,360 --> 00:09:42,830
place an OP lock on the on the target

168
00:09:40,880 --> 00:09:45,830
file on the target of the symbolic<font color="#E5E5E5"> link</font>

169
00:09:42,830 --> 00:09:48,380
and when that file is accessed<font color="#E5E5E5"> you</font>

170
00:09:45,830 --> 00:09:51,290
change the symbolic<font color="#E5E5E5"> link to point to</font>

171
00:09:48,380 --> 00:09:54,140
another file so this<font color="#CCCCCC"> gives you a path so</font>

172
00:09:51,290 --> 00:09:58,040
here for<font color="#CCCCCC"> instance CDR file dot txt</font><font color="#E5E5E5"> that</font>

173
00:09:54,140 --> 00:10:01,490
is parsed that is<font color="#E5E5E5"> reversed as a first</font>

174
00:09:58,040 --> 00:10:04,189
pass<font color="#E5E5E5"> and then on the first access as</font>

175
00:10:01,490 --> 00:10:06,860
another path so subsequent access will

176
00:10:04,190 --> 00:10:09,620
go to the other file and this again is

177
00:10:06,860 --> 00:10:16,880
<font color="#E5E5E5">also useful</font><font color="#CCCCCC"> to exploit so for instance</font>

178
00:10:09,620 --> 00:10:20,900
<font color="#CCCCCC">talk to</font><font color="#E5E5E5"> bugs the typical example of</font><font color="#CCCCCC"> an</font>

179
00:10:16,880 --> 00:10:24,890
arbitrary file right bug is the right of

180
00:10:20,900 --> 00:10:28,520
<font color="#E5E5E5">the creation of a log file with too many</font>

181
00:10:24,890 --> 00:10:31,580
privileges<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> instance there</font><font color="#CCCCCC"> are</font>

182
00:10:28,520 --> 00:10:35,209
many<font color="#E5E5E5"> privileged processes will create</font>

183
00:10:31,580 --> 00:10:38,810
log files<font color="#CCCCCC"> but on the log</font><font color="#E5E5E5"> that are</font>

184
00:10:35,209 --> 00:10:40,800
created because<font color="#CCCCCC"> an privileged users</font><font color="#E5E5E5"> also</font>

185
00:10:38,810 --> 00:10:43,260
need to for instance<font color="#CCCCCC"> add content</font>

186
00:10:40,800 --> 00:10:45,959
this file this log file have a very

187
00:10:43,260 --> 00:10:49,500
permissive<font color="#CCCCCC"> HDL set on them and the</font>

188
00:10:45,959 --> 00:10:54,029
creation of<font color="#E5E5E5"> the log file itself does not</font>

189
00:10:49,500 --> 00:10:56,010
<font color="#E5E5E5">use impersonation so this is actually</font>

190
00:10:54,029 --> 00:10:58,800
pretty<font color="#E5E5E5"> common</font><font color="#CCCCCC"> it was found</font><font color="#E5E5E5"> a several</font>

191
00:10:56,010 --> 00:11:04,740
time just<font color="#E5E5E5"> this year for instance on the</font>

192
00:10:58,800 --> 00:11:07,890
<font color="#CCCCCC">multiple component as well</font><font color="#E5E5E5"> as variants</font>

193
00:11:04,740 --> 00:11:12,320
<font color="#E5E5E5">for instance instead of an arbitrary</font>

194
00:11:07,890 --> 00:11:16,199
<font color="#E5E5E5">file right you have an arbitrary</font><font color="#CCCCCC"> ACL set</font>

195
00:11:12,320 --> 00:11:21,440
so an<font color="#E5E5E5"> arbitrary</font><font color="#CCCCCC"> shell</font><font color="#E5E5E5"> that is</font><font color="#CCCCCC"> set on on</font>

196
00:11:16,200 --> 00:11:26,040
your file<font color="#CCCCCC"> and this was for example</font><font color="#E5E5E5"> used</font>

197
00:11:21,440 --> 00:11:28,980
in the these two<font color="#E5E5E5"> bugs so when in Windows</font>

198
00:11:26,040 --> 00:11:33,740
component and the one in<font color="#E5E5E5"> the AL PC bug</font>

199
00:11:28,980 --> 00:11:38,670
that the first pickle talked about so

200
00:11:33,740 --> 00:11:40,769
these two bugs<font color="#E5E5E5"> we're actually quite more</font>

201
00:11:38,670 --> 00:11:41,699
harder to find that<font color="#E5E5E5"> not just</font><font color="#CCCCCC"> for</font>

202
00:11:40,769 --> 00:11:43,980
<font color="#CCCCCC">approximant</font>

203
00:11:41,700 --> 00:11:45,899
they both have<font color="#CCCCCC"> really</font><font color="#E5E5E5"> awesome write up</font>

204
00:11:43,980 --> 00:11:50,160
so that we don't cause you<font color="#CCCCCC"> to to read</font>

205
00:11:45,899 --> 00:11:52,860
but they also are<font color="#CCCCCC"> some of some Dack</font>

206
00:11:50,160 --> 00:11:56,550
<font color="#CCCCCC">whole set bugs that are</font><font color="#E5E5E5"> much easier to</font>

207
00:11:52,860 --> 00:12:02,310
find<font color="#E5E5E5"> in let's say less mature component</font>

208
00:11:56,550 --> 00:12:05,550
than software than<font color="#E5E5E5"> Windows so the bug</font>

209
00:12:02,310 --> 00:12:09,329
that<font color="#CCCCCC"> you saw on the first demo was</font>

210
00:12:05,550 --> 00:12:12,420
basically<font color="#E5E5E5"> exploited like this so first</font>

211
00:12:09,329 --> 00:12:14,910
we delete all the log file<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> logs</font>

212
00:12:12,420 --> 00:12:18,959
folder<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> change it into a</font>

213
00:12:14,910 --> 00:12:22,350
junction<font color="#E5E5E5"> because you need the folder to</font>

214
00:12:18,959 --> 00:12:25,229
<font color="#CCCCCC">be empty to create</font><font color="#E5E5E5"> a junction so we</font>

215
00:12:22,350 --> 00:12:29,820
redirect it to<font color="#E5E5E5"> the RPC control directory</font>

216
00:12:25,230 --> 00:12:33,420
and create<font color="#E5E5E5"> a symbolic link with the name</font>

217
00:12:29,820 --> 00:12:37,019
of a log file that<font color="#E5E5E5"> we know will get</font>

218
00:12:33,420 --> 00:12:40,709
created<font color="#CCCCCC"> or will get accessed by the</font>

219
00:12:37,019 --> 00:12:43,829
<font color="#E5E5E5">privileged process and make that same</font>

220
00:12:40,709 --> 00:12:46,768
<font color="#E5E5E5">link point to out the file we actually</font>

221
00:12:43,829 --> 00:12:51,029
want to<font color="#E5E5E5"> create so when we trigger the</font>

222
00:12:46,769 --> 00:12:52,650
log creation<font color="#E5E5E5"> so in the demo by clicking</font>

223
00:12:51,029 --> 00:12:56,290
on update

224
00:12:52,650 --> 00:12:59,949
the the<font color="#CCCCCC"> dll is created and because</font>

225
00:12:56,290 --> 00:13:02,920
<font color="#CCCCCC">program</font><font color="#E5E5E5"> thinks it's the log file it will</font>

226
00:12:59,950 --> 00:13:07,620
set<font color="#CCCCCC"> the same as</font><font color="#E5E5E5"> CL as it does for all</font>

227
00:13:02,920 --> 00:13:11,949
log files<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is a very permissive one</font>

228
00:13:07,620 --> 00:13:15,760
so we can<font color="#E5E5E5"> then</font><font color="#CCCCCC"> use that dll drop in</font>

229
00:13:11,950 --> 00:13:20,410
feature to hijack a<font color="#E5E5E5"> privileged process</font>

230
00:13:15,760 --> 00:13:22,750
or just<font color="#E5E5E5"> redirect the logs directory to</font>

231
00:13:20,410 --> 00:13:25,449
system 30 to create a log file even<font color="#CCCCCC"> if</font>

232
00:13:22,750 --> 00:13:31,270
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> its name and with dot</font><font color="#E5E5E5"> log and use</font>

233
00:13:25,450 --> 00:13:36,160
the jack hub trick<font color="#E5E5E5"> to load it</font><font color="#CCCCCC"> a word</font>

234
00:13:31,270 --> 00:13:38,640
about<font color="#E5E5E5"> a v5 scanning because it's really</font>

235
00:13:36,160 --> 00:13:43,360
interesting<font color="#E5E5E5"> for this type</font><font color="#CCCCCC"> of bug because</font>

236
00:13:38,640 --> 00:13:46,090
file are often accessed with with<font color="#CCCCCC"> the</font>

237
00:13:43,360 --> 00:13:49,270
high privileges for instance to remove

238
00:13:46,090 --> 00:13:51,730
them or stuff like<font color="#E5E5E5"> that but it can be</font>

239
00:13:49,270 --> 00:13:54,640
easily triggered by unprivileged users

240
00:13:51,730 --> 00:13:59,560
so it's a really<font color="#CCCCCC"> a nice target for a</font>

241
00:13:54,640 --> 00:14:01,360
privilege escalation and of course it

242
00:13:59,560 --> 00:14:03,459
has a lot<font color="#CCCCCC"> of abuse</font><font color="#E5E5E5"> potential because</font>

243
00:14:01,360 --> 00:14:06,760
these are all operations that your

244
00:14:03,460 --> 00:14:10,180
typical at the AV will perform but<font color="#CCCCCC"> they</font>

245
00:14:06,760 --> 00:14:11,980
<font color="#CCCCCC">are as</font><font color="#E5E5E5"> many</font><font color="#CCCCCC"> wrote to a privileged</font>

246
00:14:10,180 --> 00:14:15,699
escalation<font color="#CCCCCC"> potential privilege</font>

247
00:14:11,980 --> 00:14:19,810
escalation of<font color="#E5E5E5"> course</font><font color="#CCCCCC"> AV has a lot of</font>

248
00:14:15,700 --> 00:14:23,379
<font color="#E5E5E5">other attack surface it's a pretty huge</font>

249
00:14:19,810 --> 00:14:26,888
but the

250
00:14:23,379 --> 00:14:30,309
<font color="#E5E5E5">reason we choose it for the fight</font><font color="#CCCCCC"> buggy</font>

251
00:14:26,889 --> 00:14:33,369
<font color="#E5E5E5">that it's kind of mandatory for a</font><font color="#CCCCCC"> Navy</font>

252
00:14:30,309 --> 00:14:36,608
<font color="#E5E5E5">to access files</font><font color="#CCCCCC"> so it's really a</font><font color="#E5E5E5"> a prime</font>

253
00:14:33,369 --> 00:14:40,929
<font color="#E5E5E5">target for</font><font color="#CCCCCC"> these type of attacks</font><font color="#E5E5E5"> an</font>

254
00:14:36,609 --> 00:14:44,109
<font color="#E5E5E5">example of a bug on file restore is the</font>

255
00:14:40,929 --> 00:14:47,949
the educator type of<font color="#CCCCCC"> book which is a</font>

256
00:14:44,109 --> 00:14:52,359
basically<font color="#E5E5E5"> a logic book fund by</font><font color="#CCCCCC"> Florin</font>

257
00:14:47,949 --> 00:14:56,128
<font color="#CCCCCC">Bogner</font><font color="#E5E5E5"> this year I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> that abuses the</font>

258
00:14:52,359 --> 00:14:59,189
file<font color="#E5E5E5"> restore process so you create a</font>

259
00:14:56,129 --> 00:15:03,729
file with<font color="#CCCCCC"> the name and content</font><font color="#E5E5E5"> you want</font>

260
00:14:59,189 --> 00:15:06,159
have for instance<font color="#E5E5E5"> evil dot DLL</font><font color="#CCCCCC"> and you</font>

261
00:15:03,729 --> 00:15:10,059
put<font color="#E5E5E5"> it into a quarantine either manually</font>

262
00:15:06,159 --> 00:15:14,799
or by tricking the other<font color="#CCCCCC"> to Vav to a</font>

263
00:15:10,059 --> 00:15:17,799
<font color="#E5E5E5">grunt I knit and before restoring it</font>

264
00:15:14,799 --> 00:15:22,839
you turn its parent directory to a

265
00:15:17,799 --> 00:15:25,449
junction<font color="#CCCCCC"> that points to the</font><font color="#E5E5E5"> folder you</font>

266
00:15:22,839 --> 00:15:29,649
want to<font color="#E5E5E5"> create the file into so that</font>

267
00:15:25,449 --> 00:15:32,439
<font color="#E5E5E5">when the restor happens it will actually</font>

268
00:15:29,649 --> 00:15:34,479
<font color="#E5E5E5">create the file in the folder you want</font>

269
00:15:32,439 --> 00:15:36,669
<font color="#E5E5E5">to even if you as</font><font color="#CCCCCC"> an privileged user</font>

270
00:15:34,479 --> 00:15:45,159
<font color="#E5E5E5">don't have access</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> write access to</font>

271
00:15:36,669 --> 00:15:49,289
<font color="#CCCCCC">that folder an</font><font color="#E5E5E5"> example of a similar bug</font>

272
00:15:45,159 --> 00:15:52,809
<font color="#E5E5E5">that we found last year yeah last year</font>

273
00:15:49,289 --> 00:15:56,409
is<font color="#E5E5E5"> in this Simon</font><font color="#CCCCCC"> tech</font><font color="#E5E5E5"> endpoint</font>

274
00:15:52,809 --> 00:15:58,929
protection<font color="#E5E5E5"> we have there was actually an</font>

275
00:15:56,409 --> 00:16:01,139
access right check before the<font color="#E5E5E5"> the fire</font>

276
00:15:58,929 --> 00:16:03,579
was restored but there were no

277
00:16:01,139 --> 00:16:07,899
impersonation<font color="#E5E5E5"> on the actual</font><font color="#CCCCCC"> five write</font>

278
00:16:03,579 --> 00:16:11,559
<font color="#E5E5E5">operation so a kind of talk to bug and</font>

279
00:16:07,899 --> 00:16:14,139
the right<font color="#E5E5E5"> erase was really easy</font><font color="#CCCCCC"> to win</font>

280
00:16:11,559 --> 00:16:15,939
because if you wanted to overwrite an

281
00:16:14,139 --> 00:16:18,309
existing file you would<font color="#E5E5E5"> get a nice</font>

282
00:16:15,939 --> 00:16:20,319
prompt and the file<font color="#CCCCCC"> right would happen</font>

283
00:16:18,309 --> 00:16:22,509
only after that prompt and the check

284
00:16:20,319 --> 00:16:25,199
would happen<font color="#E5E5E5"> before the prompt so you</font>

285
00:16:22,509 --> 00:16:32,529
just<font color="#E5E5E5"> have all the time</font><font color="#CCCCCC"> in the world</font><font color="#E5E5E5"> to</font>

286
00:16:25,199 --> 00:16:35,919
<font color="#E5E5E5">to change the folder</font><font color="#CCCCCC"> it was a fixed last</font>

287
00:16:32,529 --> 00:16:36,279
year<font color="#E5E5E5"> by creating a temporary file to</font>

288
00:16:35,919 --> 00:16:39,970
pray

289
00:16:36,279 --> 00:16:43,389
<font color="#CCCCCC">and</font><font color="#E5E5E5"> changing the the parent directory to</font>

290
00:16:39,970 --> 00:16:45,100
a junction or<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> and we</font>

291
00:16:43,389 --> 00:16:47,949
<font color="#E5E5E5">found some very lit by path which is</font>

292
00:16:45,100 --> 00:16:53,009
<font color="#CCCCCC">right-click delete the temporary file</font>

293
00:16:47,949 --> 00:16:55,719
<font color="#E5E5E5">and you</font><font color="#CCCCCC"> can just</font><font color="#E5E5E5"> then proceed as before</font>

294
00:16:53,009 --> 00:16:59,290
<font color="#E5E5E5">so the expectation looks pretty much</font>

295
00:16:55,720 --> 00:17:12,280
<font color="#E5E5E5">like the Aviator all the previous</font><font color="#CCCCCC"> back</font>

296
00:16:59,290 --> 00:17:15,280
<font color="#CCCCCC">we saw but we can show it here so for</font>

297
00:17:12,280 --> 00:17:18,939
this demo<font color="#CCCCCC"> we'll target</font><font color="#E5E5E5"> the set</font><font color="#CCCCCC"> HC dot</font>

298
00:17:15,280 --> 00:17:21,399
exe program which is the program that

299
00:17:18,939 --> 00:17:32,470
<font color="#CCCCCC">pops</font><font color="#E5E5E5"> some annoying windows when you</font>

300
00:17:21,400 --> 00:17:35,830
press a<font color="#CCCCCC"> five</font><font color="#E5E5E5"> time shift for instance so</font>

301
00:17:32,470 --> 00:17:39,520
we're still running<font color="#E5E5E5"> in</font><font color="#CCCCCC"> an free later</font>

302
00:17:35,830 --> 00:17:41,230
<font color="#CCCCCC">user a session and we can see</font><font color="#E5E5E5"> that the</font>

303
00:17:39,520 --> 00:17:47,049
hashes are different<font color="#E5E5E5"> for</font><font color="#CCCCCC"> instance</font>

304
00:17:41,230 --> 00:17:50,669
<font color="#CCCCCC">between set HT and</font><font color="#E5E5E5"> cmd.exe and we are</font>

305
00:17:47,049 --> 00:17:54,309
going to create a temporary folder

306
00:17:50,669 --> 00:17:57,789
another one here<font color="#E5E5E5"> and in that</font><font color="#CCCCCC"> folder we</font>

307
00:17:54,309 --> 00:18:00,360
are going to create a file which<font color="#CCCCCC"> has the</font>

308
00:17:57,789 --> 00:18:08,350
same name<font color="#CCCCCC"> as the file we want to</font>

309
00:18:00,360 --> 00:18:11,199
overwrite so set HC dot exe<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we put</font>

310
00:18:08,350 --> 00:18:14,590
it into cron tine manually because

311
00:18:11,200 --> 00:18:25,690
<font color="#E5E5E5">cyanotic lets you do that as an</font>

312
00:18:14,590 --> 00:18:29,470
unprivileged user<font color="#E5E5E5"> the reason</font><font color="#CCCCCC"> why so the</font>

313
00:18:25,690 --> 00:18:31,600
file is removed and<font color="#CCCCCC"> weak when</font><font color="#E5E5E5"> we can</font>

314
00:18:29,470 --> 00:18:34,809
recreate another<font color="#E5E5E5"> one with the same</font><font color="#CCCCCC"> name</font>

315
00:18:31,600 --> 00:18:40,080
<font color="#E5E5E5">so</font><font color="#CCCCCC"> that we can we</font><font color="#E5E5E5"> get our nice overwrite</font>

316
00:18:34,809 --> 00:18:41,940
prompt and just after

317
00:18:40,080 --> 00:18:46,189
clicking<font color="#E5E5E5"> that button we jump to the</font>

318
00:18:41,940 --> 00:18:49,350
folder to delete the temporary file and

319
00:18:46,190 --> 00:18:53,640
<font color="#E5E5E5">its parent folder and replace that</font>

320
00:18:49,350 --> 00:19:03,480
folder with a junction that points to

321
00:18:53,640 --> 00:19:06,269
<font color="#E5E5E5">system</font><font color="#CCCCCC"> 32 so here is</font><font color="#E5E5E5"> our system</font><font color="#CCCCCC"> 32 with</font>

322
00:19:03,480 --> 00:19:12,120
the set<font color="#CCCCCC"> FC dot exe</font><font color="#E5E5E5"> that has not</font><font color="#CCCCCC"> yet</font><font color="#E5E5E5"> been</font>

323
00:19:06,269 --> 00:19:16,620
overwritten<font color="#CCCCCC"> and</font><font color="#E5E5E5"> now it's gone we see</font>

324
00:19:12,120 --> 00:19:20,879
that it<font color="#E5E5E5"> has an new</font><font color="#CCCCCC"> low size and if we go</font>

325
00:19:16,620 --> 00:19:23,820
into the property of the file<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> see</font>

326
00:19:20,880 --> 00:19:28,799
that we<font color="#CCCCCC"> are the proud owner of setter</font><font color="#E5E5E5"> C</font>

327
00:19:23,820 --> 00:19:31,139
dot exe so we can now overwrite the

328
00:19:28,799 --> 00:19:37,110
content of that file for instance<font color="#E5E5E5"> with</font>

329
00:19:31,139 --> 00:19:42,360
the content from<font color="#CCCCCC"> CMD dot exe and then</font>

330
00:19:37,110 --> 00:19:45,240
open the secure desktop and press<font color="#E5E5E5"> our</font>

331
00:19:42,360 --> 00:19:47,279
shift<font color="#CCCCCC"> five times it will run that our C</font>

332
00:19:45,240 --> 00:19:51,409
dot exe because we are on<font color="#E5E5E5"> the secure</font>

333
00:19:47,279 --> 00:19:51,409
desktop it will<font color="#CCCCCC"> run it as system</font>

334
00:19:56,320 --> 00:20:04,500
[Applause]

335
00:20:01,340 --> 00:20:04,500
[Music]

336
00:20:04,890 --> 00:20:11,410
so another<font color="#E5E5E5"> privilege escalation</font><font color="#CCCCCC"> that</font>

337
00:20:09,370 --> 00:20:14,850
also abuses the<font color="#E5E5E5"> file restore process</font>

338
00:20:11,410 --> 00:20:16,870
that was found on multiple product is

339
00:20:14,850 --> 00:20:19,809
<font color="#E5E5E5">basically an access right miss</font>

340
00:20:16,870 --> 00:20:23,320
configuration on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> quarantine files so</font>

341
00:20:19,809 --> 00:20:29,460
if user can basically<font color="#E5E5E5"> would modify this</font>

342
00:20:23,320 --> 00:20:33,520
file it they and the<font color="#CCCCCC"> privileged product</font>

343
00:20:29,460 --> 00:20:36,850
<font color="#CCCCCC">do the the restore</font><font color="#E5E5E5"> with full privileges</font>

344
00:20:33,520 --> 00:20:40,418
<font color="#E5E5E5">without a user and personation then you</font>

345
00:20:36,850 --> 00:20:42,820
can exploit this basically for instance

346
00:20:40,419 --> 00:20:45,039
you can change directly the content of

347
00:20:42,820 --> 00:20:47,710
the file in the quarantine file<font color="#E5E5E5"> usually</font>

348
00:20:45,039 --> 00:20:50,500
<font color="#CCCCCC">there is of some kind of czar or</font><font color="#E5E5E5"> stuff</font>

349
00:20:47,710 --> 00:20:53,020
like<font color="#CCCCCC"> that but it's still</font><font color="#E5E5E5"> quite easy to</font>

350
00:20:50,500 --> 00:20:55,270
change<font color="#E5E5E5"> and you can also change</font>

351
00:20:53,020 --> 00:20:58,120
eventually<font color="#E5E5E5"> the metadata so for instance</font>

352
00:20:55,270 --> 00:21:00,610
sometimes<font color="#CCCCCC"> nism better</font><font color="#E5E5E5"> data you have like</font>

353
00:20:58,120 --> 00:21:03,039
the the restore<font color="#E5E5E5"> path so you can directly</font>

354
00:21:00,610 --> 00:21:06,549
<font color="#CCCCCC">choose the path</font><font color="#E5E5E5"> and you don't have to</font>

355
00:21:03,039 --> 00:21:08,860
create another<font color="#CCCCCC"> junction or</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> instance</font>

356
00:21:06,549 --> 00:21:19,330
<font color="#E5E5E5">a registry keys that will also get</font>

357
00:21:08,860 --> 00:21:21,610
created<font color="#E5E5E5"> along the along</font><font color="#CCCCCC"> the file and of</font>

358
00:21:19,330 --> 00:21:25,980
course when<font color="#CCCCCC"> a navy considers</font><font color="#E5E5E5"> a file</font>

359
00:21:21,610 --> 00:21:29,229
malicious it will try<font color="#CCCCCC"> to remove it and</font>

360
00:21:25,980 --> 00:21:33,150
if we can manipulate this process<font color="#CCCCCC"> maybe</font>

361
00:21:29,230 --> 00:21:37,140
we can remove arbitrary files so what

362
00:21:33,150 --> 00:21:40,600
well many times<font color="#CCCCCC"> privilege escalation</font>

363
00:21:37,140 --> 00:21:43,840
<font color="#E5E5E5">because if we can remove arbitrary file</font>

364
00:21:40,600 --> 00:21:47,709
we can for<font color="#CCCCCC"> instance</font><font color="#E5E5E5"> remove file that we</font>

365
00:21:43,840 --> 00:21:50,439
can later replace<font color="#E5E5E5"> for instance in a</font><font color="#CCCCCC"> c</font>

366
00:21:47,710 --> 00:21:54,010
program data or in<font color="#CCCCCC"> C Windows</font><font color="#E5E5E5"> stamps the</font>

367
00:21:50,440 --> 00:21:57,760
default<font color="#E5E5E5"> access rights on</font><font color="#CCCCCC"> Windows are a</font>

368
00:21:54,010 --> 00:22:01,000
low and<font color="#E5E5E5"> privileged user to create files</font>

369
00:21:57,760 --> 00:22:05,250
and directories<font color="#E5E5E5"> but not to</font><font color="#CCCCCC"> modify</font>

370
00:22:01,000 --> 00:22:09,070
existing ones<font color="#CCCCCC"> so if we can delete</font><font color="#E5E5E5"> files</font>

371
00:22:05,250 --> 00:22:12,640
<font color="#E5E5E5">in that this directory we</font><font color="#CCCCCC"> can replace</font>

372
00:22:09,070 --> 00:22:16,080
them<font color="#E5E5E5"> because</font><font color="#CCCCCC"> we can create a file that</font>

373
00:22:12,640 --> 00:22:16,080
<font color="#E5E5E5">does not do not exist yet</font>

374
00:22:16,660 --> 00:22:21,669
we can delete a target<font color="#CCCCCC"> AV with this but</font>

375
00:22:19,240 --> 00:22:28,929
this also works for for<font color="#CCCCCC"> instance with</font>

376
00:22:21,669 --> 00:22:31,179
the other program like<font color="#E5E5E5"> in Star</font><font color="#CCCCCC"> Wars on</font>

377
00:22:28,929 --> 00:22:34,090
<font color="#CCCCCC">IV we can trigger it</font>

378
00:22:31,179 --> 00:22:37,210
for instance by<font color="#CCCCCC"> patching</font><font color="#E5E5E5"> the file</font>

379
00:22:34,090 --> 00:22:42,428
manually into quarantine<font color="#CCCCCC"> as we saw</font><font color="#E5E5E5"> with</font>

380
00:22:37,210 --> 00:22:45,250
SCP<font color="#E5E5E5"> or</font><font color="#CCCCCC"> we can use the some auxiliary</font>

381
00:22:42,429 --> 00:22:49,179
<font color="#E5E5E5">tool like the fight shredder or the</font>

382
00:22:45,250 --> 00:22:52,419
cleaner feature<font color="#CCCCCC"> if it also runs with</font>

383
00:22:49,179 --> 00:22:55,330
<font color="#E5E5E5">high privileges or we can make the ad</font>

384
00:22:52,419 --> 00:22:58,299
believe that the file is malicious<font color="#CCCCCC"> we'll</font>

385
00:22:55,330 --> 00:23:00,668
see an example<font color="#CCCCCC"> in a minute and to bypass</font>

386
00:22:58,299 --> 00:23:04,629
access checks<font color="#CCCCCC"> we can of course use up</font>

387
00:23:00,669 --> 00:23:07,090
locks<font color="#CCCCCC"> if there is a tuck - or we can</font>

388
00:23:04,630 --> 00:23:11,309
also<font color="#E5E5E5"> use</font><font color="#CCCCCC"> other technique like process</font>

389
00:23:07,090 --> 00:23:15,549
injection or other pass conversion<font color="#CCCCCC"> bugs</font>

390
00:23:11,309 --> 00:23:17,889
to exploit it<font color="#E5E5E5"> we can for</font><font color="#CCCCCC"> instance if</font>

391
00:23:15,549 --> 00:23:22,139
there is<font color="#CCCCCC"> a dll that is loaded</font><font color="#E5E5E5"> from a</font>

392
00:23:17,890 --> 00:23:24,909
subdirectory of program data we can well

393
00:23:22,140 --> 00:23:28,419
<font color="#E5E5E5">make it disappear and</font><font color="#CCCCCC"> just replace</font><font color="#E5E5E5"> it</font>

394
00:23:24,909 --> 00:23:32,400
<font color="#E5E5E5">with an evil one</font><font color="#CCCCCC"> if there are the</font>

395
00:23:28,419 --> 00:23:36,370
default<font color="#E5E5E5"> the inherited the rights of of</font>

396
00:23:32,400 --> 00:23:40,840
program data that are also present of

397
00:23:36,370 --> 00:23:44,530
the<font color="#CCCCCC"> ivy and eat its content</font><font color="#E5E5E5"> we can then</font>

398
00:23:40,840 --> 00:23:46,270
replace directly the<font color="#CCCCCC"> DLL</font><font color="#E5E5E5"> because of this</font>

399
00:23:44,530 --> 00:23:48,908
default right<font color="#E5E5E5"> if we don't have the</font>

400
00:23:46,270 --> 00:23:51,760
default rights<font color="#E5E5E5"> for instance there are</font>

401
00:23:48,909 --> 00:23:55,030
specific rights on the AV

402
00:23:51,760 --> 00:23:57,460
<font color="#CCCCCC">subdirectory</font><font color="#E5E5E5"> we can then just</font><font color="#CCCCCC"> try to</font>

403
00:23:55,030 --> 00:24:00,639
delete<font color="#CCCCCC"> the whole</font><font color="#E5E5E5"> directory</font><font color="#CCCCCC"> the whole</font>

404
00:23:57,460 --> 00:24:04,090
<font color="#CCCCCC">directory tree and recreate it with</font><font color="#E5E5E5"> our</font>

405
00:24:00,640 --> 00:24:07,120
own content of course that for<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

406
00:24:04,090 --> 00:24:11,379
<font color="#E5E5E5">bug needs to to allow the recursive</font>

407
00:24:07,120 --> 00:24:15,010
deletion of files and<font color="#E5E5E5"> directories and</font><font color="#CCCCCC"> if</font>

408
00:24:11,380 --> 00:24:19,090
we don't<font color="#E5E5E5"> have any DLL loaded from these</font>

409
00:24:15,010 --> 00:24:20,650
directories<font color="#CCCCCC"> but still have some</font><font color="#E5E5E5"> other</font>

410
00:24:19,090 --> 00:24:23,049
files that<font color="#E5E5E5"> are accessed by</font><font color="#CCCCCC"> the</font>

411
00:24:20,650 --> 00:24:26,470
privileged program we can then target

412
00:24:23,049 --> 00:24:28,300
these subsequent<font color="#E5E5E5"> file operations because</font>

413
00:24:26,470 --> 00:24:32,770
if we delete

414
00:24:28,300 --> 00:24:35,830
the<font color="#CCCCCC"> subdirectories and recreate them</font>

415
00:24:32,770 --> 00:24:38,320
because we own the file we can<font color="#CCCCCC"> no use</font>

416
00:24:35,830 --> 00:24:39,820
the<font color="#E5E5E5"> same technique as before</font><font color="#CCCCCC"> for</font>

417
00:24:38,320 --> 00:24:48,939
<font color="#CCCCCC">something divided right</font><font color="#E5E5E5"> or stuff like</font>

418
00:24:39,820 --> 00:24:51,639
<font color="#CCCCCC">that to attack the the program so if we</font>

419
00:24:48,940 --> 00:24:56,230
want to<font color="#E5E5E5"> delete an arbitrary file what we</font>

420
00:24:51,640 --> 00:25:00,040
can do is<font color="#E5E5E5"> to try</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> redirect a file</font>

421
00:24:56,230 --> 00:25:03,910
deletion<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> instance</font><font color="#CCCCCC"> we create a</font>

422
00:25:00,040 --> 00:25:07,210
file that<font color="#CCCCCC"> we know will get detected with</font>

423
00:25:03,910 --> 00:25:07,750
the name<font color="#E5E5E5"> of a file we want to remove so</font>

424
00:25:07,210 --> 00:25:11,860
here

425
00:25:07,750 --> 00:25:16,810
license dot RTF wait for it to be

426
00:25:11,860 --> 00:25:19,030
<font color="#CCCCCC">detected and before</font><font color="#E5E5E5"> deletion but after</font>

427
00:25:16,810 --> 00:25:23,370
detection but before deletion we replace

428
00:25:19,030 --> 00:25:26,800
again<font color="#E5E5E5"> the directory by a junction</font><font color="#CCCCCC"> and</font>

429
00:25:23,370 --> 00:25:34,810
<font color="#E5E5E5">then the file that gets deleted is</font>

430
00:25:26,800 --> 00:25:38,430
actually our target file so the proper

431
00:25:34,810 --> 00:25:41,740
way<font color="#CCCCCC"> to do this is using of course</font><font color="#E5E5E5"> aprox</font>

432
00:25:38,430 --> 00:25:44,110
<font color="#CCCCCC">and when you can do it with up locks you</font>

433
00:25:41,740 --> 00:25:46,210
should but<font color="#E5E5E5"> you it's not always easy</font>

434
00:25:44,110 --> 00:25:49,709
because sometimes there is a for

435
00:25:46,210 --> 00:25:53,380
<font color="#CCCCCC">instance</font><font color="#E5E5E5"> multiple kind of access and</font>

436
00:25:49,710 --> 00:25:56,140
some that do not get locked<font color="#E5E5E5"> or for</font>

437
00:25:53,380 --> 00:25:58,840
instance multiple accesses<font color="#E5E5E5"> a variable</font>

438
00:25:56,140 --> 00:26:00,970
number<font color="#E5E5E5"> of accesses to to the file before</font>

439
00:25:58,840 --> 00:26:06,010
<font color="#CCCCCC">it's removed</font><font color="#E5E5E5"> so it's not</font><font color="#CCCCCC"> always easy to</font>

440
00:26:00,970 --> 00:26:08,860
<font color="#E5E5E5">place the lock correctly so a quick and</font>

441
00:26:06,010 --> 00:26:13,420
dirty way<font color="#CCCCCC"> to do that is to create a</font>

442
00:26:08,860 --> 00:26:15,879
directory create a junction<font color="#CCCCCC"> drop a car</font>

443
00:26:13,420 --> 00:26:18,520
in the directory and<font color="#E5E5E5"> then just keep</font>

444
00:26:15,880 --> 00:26:22,060
<font color="#E5E5E5">exchanging the to the directory and the</font>

445
00:26:18,520 --> 00:26:25,720
junction in<font color="#E5E5E5"> the loop and</font><font color="#CCCCCC"> you have about</font>

446
00:26:22,060 --> 00:26:29,460
<font color="#CCCCCC">one-third</font><font color="#E5E5E5"> chance of a hit so here is an</font>

447
00:26:25,720 --> 00:26:34,000
<font color="#E5E5E5">example for shall snippet to do that and</font>

448
00:26:29,460 --> 00:26:39,100
it works surprisingly well<font color="#E5E5E5"> in in many</font>

449
00:26:34,000 --> 00:26:40,120
cases and because we can retry these as

450
00:26:39,100 --> 00:26:41,250
long as we want

451
00:26:40,120 --> 00:26:43,679
<font color="#E5E5E5">even if we</font>

452
00:26:41,250 --> 00:26:47,930
I didn't succeed<font color="#E5E5E5"> on the first</font><font color="#CCCCCC"> try well</font>

453
00:26:43,680 --> 00:26:47,930
we can just relaunch it and retry

454
00:26:49,550 --> 00:26:57,780
<font color="#CCCCCC">another</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> thing is</font><font color="#E5E5E5"> that just</font>

455
00:26:54,300 --> 00:27:00,899
before<font color="#E5E5E5"> deleting the the file</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> AV</font>

456
00:26:57,780 --> 00:27:04,290
will perform some operation on<font color="#CCCCCC"> that file</font>

457
00:27:00,900 --> 00:27:06,990
or in<font color="#E5E5E5"> the same directory of</font><font color="#CCCCCC"> the of the</font>

458
00:27:04,290 --> 00:27:09,090
infected<font color="#E5E5E5"> file so for instance it will</font>

459
00:27:06,990 --> 00:27:12,200
<font color="#E5E5E5">create a temporary copy of the file oh</font>

460
00:27:09,090 --> 00:27:17,340
it will rename<font color="#E5E5E5"> it or move it somewhere</font>

461
00:27:12,200 --> 00:27:22,020
<font color="#CCCCCC">or create a temporary copy so</font><font color="#E5E5E5"> we can</font>

462
00:27:17,340 --> 00:27:25,139
actually<font color="#CCCCCC"> exploit the that part</font><font color="#E5E5E5"> these</font>

463
00:27:22,020 --> 00:27:29,400
actions<font color="#CCCCCC"> so for instance</font><font color="#E5E5E5"> we'll see how we</font>

464
00:27:25,140 --> 00:27:31,590
<font color="#CCCCCC">can exploit</font><font color="#E5E5E5"> it for</font><font color="#CCCCCC"> arbitrary right but</font>

465
00:27:29,400 --> 00:27:35,100
for arbitrary read what we can do for

466
00:27:31,590 --> 00:27:39,870
<font color="#E5E5E5">instance is to use the technique seen</font>

467
00:27:35,100 --> 00:27:43,980
before<font color="#E5E5E5"> to delete a file we want to get</font>

468
00:27:39,870 --> 00:27:46,439
the content of and just read that

469
00:27:43,980 --> 00:27:50,040
<font color="#E5E5E5">content from the quarantine quarantine</font>

470
00:27:46,440 --> 00:27:52,410
files so if the AV<font color="#CCCCCC"> creator for</font><font color="#E5E5E5"> instance</font>

471
00:27:50,040 --> 00:27:54,810
a<font color="#E5E5E5"> temporary copy or just put it in the</font>

472
00:27:52,410 --> 00:27:58,230
quarantine file and the crunching file

473
00:27:54,810 --> 00:28:01,730
our user readable<font color="#E5E5E5"> we can just read</font><font color="#CCCCCC"> the</font>

474
00:27:58,230 --> 00:28:07,110
content of the file that<font color="#CCCCCC"> we just deleted</font>

475
00:28:01,730 --> 00:28:09,030
<font color="#E5E5E5">in the in the from the crunching file</font>

476
00:28:07,110 --> 00:28:09,810
again<font color="#E5E5E5"> we'll have to anchor it or</font>

477
00:28:09,030 --> 00:28:14,820
something<font color="#E5E5E5"> like that</font>

478
00:28:09,810 --> 00:28:16,710
but we can get to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> content and for</font>

479
00:28:14,820 --> 00:28:21,780
<font color="#CCCCCC">arbitrary five right I'll take</font><font color="#E5E5E5"> an</font>

480
00:28:16,710 --> 00:28:24,630
example<font color="#E5E5E5"> of a copy or rename operation if</font>

481
00:28:21,780 --> 00:28:27,930
for instance the<font color="#E5E5E5"> the file</font><font color="#CCCCCC"> a card</font><font color="#E5E5E5"> exists</font>

482
00:28:24,630 --> 00:28:34,500
that we just dropped<font color="#CCCCCC"> will be renamed</font><font color="#E5E5E5"> to</font>

483
00:28:27,930 --> 00:28:39,180
a<font color="#E5E5E5"> car dot TMP</font><font color="#CCCCCC"> we can basically proceed</font>

484
00:28:34,500 --> 00:28:42,000
as such<font color="#E5E5E5"> so create an</font><font color="#CCCCCC"> OP lock to lock the</font>

485
00:28:39,180 --> 00:28:45,990
process before the copy<font color="#CCCCCC"> or rename</font>

486
00:28:42,000 --> 00:28:47,850
operation again change the<font color="#E5E5E5"> directory to</font>

487
00:28:45,990 --> 00:28:51,030
<font color="#CCCCCC">a junction</font>

488
00:28:47,850 --> 00:28:55,500
<font color="#CCCCCC">our</font><font color="#E5E5E5"> PC control and create</font><font color="#CCCCCC"> two symlinks</font>

489
00:28:51,030 --> 00:28:57,750
one with a car dot<font color="#CCCCCC"> XZ</font><font color="#E5E5E5"> that points to the</font>

490
00:28:55,500 --> 00:28:59,990
<font color="#E5E5E5">file we</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to copy and the other that</font>

491
00:28:57,750 --> 00:29:04,020
points to the file we<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> replace</font>

492
00:28:59,990 --> 00:29:08,700
<font color="#E5E5E5">because the the</font><font color="#CCCCCC"> AAV process will try to</font>

493
00:29:04,020 --> 00:29:12,418
copy a car dot exe<font color="#E5E5E5"> to a</font><font color="#CCCCCC"> car that EMP</font><font color="#E5E5E5"> or</font>

494
00:29:08,700 --> 00:29:13,770
rename it and of<font color="#CCCCCC"> course</font><font color="#E5E5E5"> if it has the</font>

495
00:29:12,419 --> 00:29:16,530
<font color="#CCCCCC">overwrite flag</font>

496
00:29:13,770 --> 00:29:19,650
well you'll guess<font color="#E5E5E5"> what happened it will</font>

497
00:29:16,530 --> 00:29:23,549
actually replace cmd.exe<font color="#CCCCCC"> to set HC dot</font>

498
00:29:19,650 --> 00:29:25,890
exe<font color="#E5E5E5"> and if we don't have the overwrite</font>

499
00:29:23,549 --> 00:29:28,740
flag for instance we can just<font color="#E5E5E5"> make the</font>

500
00:29:25,890 --> 00:29:33,059
<font color="#CCCCCC">Accardo TMP point to some non existing</font>

501
00:29:28,740 --> 00:29:36,840
file file name instead<font color="#E5E5E5"> in system 32 and</font>

502
00:29:33,059 --> 00:29:53,610
then use the<font color="#E5E5E5"> jackal trick again</font><font color="#CCCCCC"> to to</font>

503
00:29:36,840 --> 00:29:57,928
load<font color="#CCCCCC"> it so other demo other AV so</font><font color="#E5E5E5"> here</font>

504
00:29:53,610 --> 00:30:10,110
we create a temporary<font color="#CCCCCC"> directory</font><font color="#E5E5E5"> and drop</font>

505
00:29:57,929 --> 00:30:12,630
a car in a car dot txt in it I'm<font color="#CCCCCC"> sure we</font>

506
00:30:10,110 --> 00:30:16,590
<font color="#E5E5E5">will see it but oh yeah we see that the</font>

507
00:30:12,630 --> 00:30:19,710
file got detected<font color="#E5E5E5"> and we set an upload</font>

508
00:30:16,590 --> 00:30:21,928
on a removable<font color="#E5E5E5"> dot log which is the log</font>

509
00:30:19,710 --> 00:30:24,240
file that<font color="#E5E5E5"> we know will get accessed</font>

510
00:30:21,929 --> 00:30:26,159
<font color="#E5E5E5">because</font><font color="#CCCCCC"> we observed it wind with a proc</font>

511
00:30:24,240 --> 00:30:28,650
man for instance<font color="#E5E5E5"> and we know it will get</font>

512
00:30:26,159 --> 00:30:31,470
accessed<font color="#CCCCCC"> before the actual operation</font>

513
00:30:28,650 --> 00:30:34,500
that we want to<font color="#E5E5E5"> target so we use that to</font>

514
00:30:31,470 --> 00:30:45,390
<font color="#E5E5E5">lock the process the thread just before</font>

515
00:30:34,500 --> 00:30:47,750
that operation<font color="#CCCCCC"> and then we see it</font>

516
00:30:45,390 --> 00:30:47,750
<font color="#CCCCCC">raining</font>

517
00:30:51,519 --> 00:31:01,009
sorry we see that the<font color="#CCCCCC"> oplog</font><font color="#E5E5E5"> just</font>

518
00:30:54,799 --> 00:31:05,289
triggered so before unlocking it we can

519
00:31:01,009 --> 00:31:09,460
just create here so we remove the

520
00:31:05,289 --> 00:31:14,499
temporary<font color="#E5E5E5"> directory</font><font color="#CCCCCC"> and replace it with</font>

521
00:31:09,460 --> 00:31:18,249
<font color="#E5E5E5">a junction and combined with</font><font color="#CCCCCC"> system link</font>

522
00:31:14,499 --> 00:31:21,289
object director object<font color="#E5E5E5"> directory symlink</font>

523
00:31:18,249 --> 00:31:24,769
that<font color="#CCCCCC"> is named a car dot txt and that</font>

524
00:31:21,289 --> 00:31:30,019
points to our payload so here<font color="#CCCCCC"> get system</font>

525
00:31:24,769 --> 00:31:33,730
shell dot exe<font color="#CCCCCC"> and we use a</font>

526
00:31:30,019 --> 00:31:36,710
bait-and-switch tool to create another

527
00:31:33,730 --> 00:31:40,009
another<font color="#E5E5E5"> sim link which this time is</font>

528
00:31:36,710 --> 00:31:43,100
named a car dot txt dot<font color="#CCCCCC"> you</font><font color="#E5E5E5"> SSDs because</font>

529
00:31:40,009 --> 00:31:46,309
that's the name that<font color="#E5E5E5"> of the temporary</font>

530
00:31:43,100 --> 00:31:53,899
file that a car dot txt will get renamed

531
00:31:46,309 --> 00:31:59,269
to and we make<font color="#CCCCCC"> it point to</font><font color="#E5E5E5"> you lu han lu</font>

532
00:31:53,899 --> 00:32:02,719
<font color="#CCCCCC">XZ which</font><font color="#E5E5E5"> is a file an executable that is</font>

533
00:31:59,269 --> 00:32:07,519
<font color="#E5E5E5">access that is used by f-secure safe</font>

534
00:32:02,720 --> 00:32:11,779
during updates and we also added an<font color="#E5E5E5"> OP</font>

535
00:32:07,519 --> 00:32:16,100
lock<font color="#E5E5E5"> to to that file and</font><font color="#CCCCCC"> then redirect</font>

536
00:32:11,779 --> 00:32:18,739
<font color="#E5E5E5">it to another to</font><font color="#CCCCCC"> another path which is</font>

537
00:32:16,100 --> 00:32:21,199
actually a file that<font color="#E5E5E5"> does not exist</font><font color="#CCCCCC"> this</font>

538
00:32:18,739 --> 00:32:24,710
<font color="#CCCCCC">is to prevent the</font><font color="#E5E5E5"> actual deletion</font>

539
00:32:21,200 --> 00:32:27,919
because<font color="#CCCCCC"> of course</font><font color="#E5E5E5"> after renaming it to</font><font color="#CCCCCC"> a</font>

540
00:32:24,710 --> 00:32:29,509
temporary<font color="#E5E5E5"> directory to a temporary file</font>

541
00:32:27,919 --> 00:32:32,899
sorry

542
00:32:29,509 --> 00:32:36,379
<font color="#E5E5E5">f-secure</font><font color="#CCCCCC"> each</font><font color="#E5E5E5"> one will try to remove the</font>

543
00:32:32,899 --> 00:32:40,488
<font color="#CCCCCC">file so before the</font><font color="#E5E5E5"> removal we just</font>

544
00:32:36,379 --> 00:32:43,158
renamed redirect the<font color="#CCCCCC"> sim link</font><font color="#E5E5E5"> to point</font>

545
00:32:40,489 --> 00:32:45,649
to a some other path that actually<font color="#CCCCCC"> does</font>

546
00:32:43,159 --> 00:32:46,970
not<font color="#CCCCCC"> exist so that the removal don't</font>

547
00:32:45,649 --> 00:32:56,639
remove

548
00:32:46,970 --> 00:32:59,129
our payload and we can<font color="#E5E5E5"> no just go to the</font>

549
00:32:56,639 --> 00:33:12,779
GUI<font color="#CCCCCC"> and trigger an update and here is</font>

550
00:32:59,129 --> 00:33:13,730
<font color="#E5E5E5">again</font><font color="#CCCCCC"> our system shell you're</font><font color="#E5E5E5"> very</font>

551
00:33:12,779 --> 00:33:15,409
<font color="#E5E5E5">generous</font>

552
00:33:13,730 --> 00:33:19,259
[Music]

553
00:33:15,409 --> 00:33:22,830
so here are some some of the<font color="#E5E5E5"> books that</font>

554
00:33:19,259 --> 00:33:25,289
were from during this research we can

555
00:33:22,830 --> 00:33:28,080
see that<font color="#E5E5E5"> there</font><font color="#CCCCCC"> are a lot of</font><font color="#E5E5E5"> IVs in there</font>

556
00:33:25,289 --> 00:33:31,169
<font color="#E5E5E5">but there are also the last five are</font>

557
00:33:28,080 --> 00:33:33,210
actually other products<font color="#E5E5E5"> so of course IV</font>

558
00:33:31,169 --> 00:33:38,460
<font color="#E5E5E5">are an obvious</font><font color="#CCCCCC"> target for</font><font color="#E5E5E5"> this type</font><font color="#CCCCCC"> of</font>

559
00:33:33,210 --> 00:33:41,429
bugs<font color="#CCCCCC"> but</font><font color="#E5E5E5"> the basically</font><font color="#CCCCCC"> old</font><font color="#E5E5E5"> products that</font>

560
00:33:38,460 --> 00:33:45,440
are<font color="#E5E5E5"> that</font><font color="#CCCCCC"> have privileged components or</font>

561
00:33:41,429 --> 00:33:48,779
<font color="#E5E5E5">privileged processes that do stuff with</font>

562
00:33:45,440 --> 00:33:52,350
with the file<font color="#CCCCCC"> system so</font><font color="#E5E5E5"> that's quite a</font>

563
00:33:48,779 --> 00:33:58,049
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> product can also have this type</font>

564
00:33:52,350 --> 00:34:00,869
of bags to prevent<font color="#CCCCCC"> this type of</font><font color="#E5E5E5"> bug what</font>

565
00:33:58,049 --> 00:34:03,269
you need to do is well not break the

566
00:34:00,869 --> 00:34:05,939
security<font color="#E5E5E5"> boundary in the first place</font><font color="#CCCCCC"> so</font>

567
00:34:03,269 --> 00:34:08,819
use<font color="#CCCCCC"> for instance</font><font color="#E5E5E5"> impersonation or other</font>

568
00:34:05,940 --> 00:34:12,389
restriction<font color="#CCCCCC"> when you</font><font color="#E5E5E5"> access files</font>

569
00:34:08,819 --> 00:34:14,549
especially files that are that the you

570
00:34:12,389 --> 00:34:18,899
unprivileged user can have some form of

571
00:34:14,549 --> 00:34:22,259
control<font color="#E5E5E5"> over you'll need to harden the</font>

572
00:34:18,899 --> 00:34:24,828
project itself<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> instance yes work</font>

573
00:34:22,260 --> 00:34:28,319
on fully<font color="#CCCCCC"> resolve</font><font color="#E5E5E5"> past</font><font color="#CCCCCC"> make sure that</font>

574
00:34:24,829 --> 00:34:33,119
your file is locked<font color="#E5E5E5"> before the checked</font>

575
00:34:28,319 --> 00:34:36,869
and until it has been used and<font color="#CCCCCC"> harden</font>

576
00:34:33,119 --> 00:34:39,089
<font color="#E5E5E5">also</font><font color="#CCCCCC"> Gandhari tools as well and for</font>

577
00:34:36,869 --> 00:34:41,849
<font color="#CCCCCC">defense in depth</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can also try to</font>

578
00:34:39,089 --> 00:34:44,639
<font color="#E5E5E5">reduce access rights and not do</font>

579
00:34:41,849 --> 00:34:50,309
dangerous stuff like a loading code from

580
00:34:44,639 --> 00:34:53,990
program data<font color="#CCCCCC"> subdirectories of course</font>

581
00:34:50,309 --> 00:34:57,869
all of<font color="#E5E5E5"> these</font><font color="#CCCCCC"> actions will create logs</font>

582
00:34:53,989 --> 00:34:59,660
<font color="#E5E5E5">and</font><font color="#CCCCCC"> while the attacker can try to maybe</font>

583
00:34:57,869 --> 00:35:01,750
use the same work<font color="#E5E5E5"> to</font>

584
00:34:59,660 --> 00:35:04,670
<font color="#CCCCCC">Elite the log files or stuff like</font><font color="#E5E5E5"> that</font>

585
00:35:01,750 --> 00:35:07,400
but if you have<font color="#E5E5E5"> proper forwarding you</font>

586
00:35:04,670 --> 00:35:09,920
can correlate this log with<font color="#E5E5E5"> all the file</font>

587
00:35:07,400 --> 00:35:15,829
system activity<font color="#E5E5E5"> to try to detect this</font>

588
00:35:09,920 --> 00:35:18,380
stuff and because they use many

589
00:35:15,829 --> 00:35:21,039
<font color="#CCCCCC">operation</font><font color="#E5E5E5"> that are not used by you your</font>

590
00:35:18,380 --> 00:35:24,049
typical<font color="#E5E5E5"> Windows application you can also</font>

591
00:35:21,039 --> 00:35:25,490
create behavioral signatures<font color="#E5E5E5"> for</font>

592
00:35:24,049 --> 00:35:29,180
instance if you have a process<font color="#CCCCCC"> that</font>

593
00:35:25,490 --> 00:35:32,479
creates a lot of up<font color="#CCCCCC"> logs</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> exchange a</font>

594
00:35:29,180 --> 00:35:36,430
directory and<font color="#CCCCCC"> a junction high number of</font>

595
00:35:32,480 --> 00:35:36,430
<font color="#E5E5E5">time maybe it's suspicious</font>

596
00:35:38,660 --> 00:35:43,879
one of the main takeaway is of course

597
00:35:40,520 --> 00:35:47,089
that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to balance risk</font><font color="#E5E5E5"> and</font>

598
00:35:43,880 --> 00:35:52,549
<font color="#E5E5E5">benefits for when you're considering</font>

599
00:35:47,089 --> 00:35:55,099
deploying<font color="#CCCCCC"> an AV</font><font color="#E5E5E5"> and you have to consider</font>

600
00:35:52,549 --> 00:35:58,700
the the use case and the threat<font color="#CCCCCC"> model</font>

601
00:35:55,099 --> 00:36:02,150
especially<font color="#E5E5E5"> if</font><font color="#CCCCCC"> your AV have easy</font>

602
00:35:58,700 --> 00:36:06,319
exploitable<font color="#E5E5E5"> bugs so far four wonders of</font>

603
00:36:02,150 --> 00:36:10,329
course<font color="#E5E5E5"> they need to reduce this attack</font>

604
00:36:06,319 --> 00:36:13,609
surface<font color="#E5E5E5"> and kill all</font><font color="#CCCCCC"> the easy ones and</font>

605
00:36:10,329 --> 00:36:17,329
<font color="#E5E5E5">for</font><font color="#CCCCCC"> the offenders I don't courage you to</font>

606
00:36:13,609 --> 00:36:21,500
<font color="#E5E5E5">also test your vendors</font><font color="#CCCCCC"> a security</font>

607
00:36:17,329 --> 00:36:23,930
software<font color="#CCCCCC"> and make sure that that</font><font color="#E5E5E5"> you</font>

608
00:36:21,500 --> 00:36:28,010
have<font color="#E5E5E5"> preferred logging afforded in well</font>

609
00:36:23,930 --> 00:36:32,328
even for<font color="#E5E5E5"> low-risk</font><font color="#CCCCCC"> events like just a car</font>

610
00:36:28,010 --> 00:36:35,569
and stuff like that and for<font color="#CCCCCC"> pen tester</font>

611
00:36:32,329 --> 00:36:38,390
well basically all<font color="#CCCCCC"> privilege software is</font>

612
00:36:35,569 --> 00:36:44,090
attack surface including<font color="#E5E5E5"> AV so well</font>

613
00:36:38,390 --> 00:36:45,170
happy hunting and that's it

614
00:36:44,090 --> 00:36:45,280
[Applause]

615
00:36:45,170 --> 00:36:48,739
[Music]

616
00:36:45,280 --> 00:36:48,739
[Applause]

617
00:36:50,410 --> 00:36:54,170
thank you for the<font color="#E5E5E5"> timing and</font>

618
00:36:52,490 --> 00:37:00,640
presentation<font color="#E5E5E5"> so we have time for</font>

619
00:36:54,170 --> 00:37:00,640
<font color="#E5E5E5">questions comments yes</font>

620
00:37:01,210 --> 00:37:08,600
did you try to automatize this process

621
00:37:05,300 --> 00:37:10,760
of like<font color="#E5E5E5"> create I'm the automating guy so</font>

622
00:37:08,600 --> 00:37:13,779
<font color="#CCCCCC">automatize this process of like</font><font color="#E5E5E5"> creating</font>

623
00:37:10,760 --> 00:37:16,820
<font color="#CCCCCC">the file loading it into the the</font>

624
00:37:13,780 --> 00:37:19,130
<font color="#E5E5E5">antivirus and I mean my</font><font color="#CCCCCC"> idea would be</font>

625
00:37:16,820 --> 00:37:22,190
like you<font color="#E5E5E5"> by fishing you know you just</font>

626
00:37:19,130 --> 00:37:23,930
drop some code on on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> machine and</font>

627
00:37:22,190 --> 00:37:26,860
<font color="#E5E5E5">then</font><font color="#CCCCCC"> you would do all this process</font>

628
00:37:23,930 --> 00:37:29,089
<font color="#E5E5E5">automatically and then like create some</font>

629
00:37:26,860 --> 00:37:30,980
service that would<font color="#E5E5E5"> contact you</font><font color="#CCCCCC"> as an</font>

630
00:37:29,090 --> 00:37:35,660
attacker later like do these kind of

631
00:37:30,980 --> 00:37:39,140
exploitations<font color="#E5E5E5"> not in local but so</font><font color="#CCCCCC"> no</font>

632
00:37:35,660 --> 00:37:41,180
I've not tried it<font color="#CCCCCC"> so but yeah that would</font>

633
00:37:39,140 --> 00:37:46,009
be<font color="#E5E5E5"> a indeed an interesting</font><font color="#CCCCCC"> idea to try</font>

634
00:37:41,180 --> 00:37:47,810
<font color="#CCCCCC">it in</font><font color="#E5E5E5"> it's easily visible or not sure</font>

635
00:37:46,010 --> 00:37:50,450
it's easily<font color="#E5E5E5"> feasible I think you would</font>

636
00:37:47,810 --> 00:37:55,220
<font color="#CCCCCC">have</font><font color="#E5E5E5"> to spend a lot of time to adapt</font>

637
00:37:50,450 --> 00:37:58,100
this this kind of of<font color="#E5E5E5"> test to each ad</font>

638
00:37:55,220 --> 00:38:01,240
engine so that's<font color="#E5E5E5"> the that would probably</font>

639
00:37:58,100 --> 00:38:05,049
<font color="#E5E5E5">be</font><font color="#CCCCCC"> the the most time-consuming part</font>

640
00:38:01,240 --> 00:38:15,439
<font color="#E5E5E5">thank you</font><font color="#CCCCCC"> very much Thanks</font>

641
00:38:05,050 --> 00:38:17,810
other question commands maybe<font color="#E5E5E5"> I'll do do</font>

642
00:38:15,440 --> 00:38:20,500
you discover<font color="#E5E5E5"> this kind of flow what was</font>

643
00:38:17,810 --> 00:38:24,259
the intuition<font color="#CCCCCC"> tutor to try this kind of</font>

644
00:38:20,500 --> 00:38:27,500
the<font color="#CCCCCC"> first</font><font color="#E5E5E5"> one was like actually during a</font>

645
00:38:24,260 --> 00:38:30,650
gig I<font color="#E5E5E5"> used for a</font><font color="#CCCCCC"> client they had two</font>

646
00:38:27,500 --> 00:38:32,780
endpoint security solutions when<font color="#CCCCCC"> IV and</font>

647
00:38:30,650 --> 00:38:37,820
one other<font color="#CCCCCC"> solution</font>

648
00:38:32,780 --> 00:38:41,300
and we had some some<font color="#E5E5E5"> miss configuration</font>

649
00:38:37,820 --> 00:38:45,830
that that would allow us<font color="#E5E5E5"> to</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> an easy</font>

650
00:38:41,300 --> 00:38:49,330
<font color="#E5E5E5">system shell but there was a some some</font>

651
00:38:45,830 --> 00:38:53,029
<font color="#CCCCCC">AV that</font><font color="#E5E5E5"> was one of the two AV that</font>

652
00:38:49,330 --> 00:38:54,740
blocked<font color="#E5E5E5"> the execution of a legit piece</font>

653
00:38:53,030 --> 00:38:59,690
of code that<font color="#E5E5E5"> was the piece that was</font>

654
00:38:54,740 --> 00:39:02,000
vulnerable<font color="#CCCCCC"> so we used the second ID to</font>

655
00:38:59,690 --> 00:39:05,660
delete the first<font color="#E5E5E5"> ad so that</font><font color="#CCCCCC"> we could</font>

656
00:39:02,000 --> 00:39:11,320
execute<font color="#E5E5E5"> the this one because when we try</font>

657
00:39:05,660 --> 00:39:14,870
<font color="#E5E5E5">to remove the the second IV was was</font><font color="#CCCCCC"> SCP</font>

658
00:39:11,320 --> 00:39:16,490
and we tried<font color="#CCCCCC"> address to manually put the</font>

659
00:39:14,870 --> 00:39:18,710
<font color="#CCCCCC">first</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> into quarantine</font>

660
00:39:16,490 --> 00:39:21,350
we thought that it got refused but that

661
00:39:18,710 --> 00:39:24,980
it got refused<font color="#E5E5E5"> really quick</font><font color="#CCCCCC"> worried</font>

662
00:39:21,350 --> 00:39:28,730
really<font color="#CCCCCC"> quickly but when we when we tried</font>

663
00:39:24,980 --> 00:39:32,270
with the dummy file<font color="#CCCCCC"> it was a bit longer</font>

664
00:39:28,730 --> 00:39:34,640
<font color="#CCCCCC">so</font><font color="#E5E5E5"> we suppose that that there was some</font>

665
00:39:32,270 --> 00:39:39,860
kind<font color="#E5E5E5"> of talk to bugs in there and that's</font>

666
00:39:34,640 --> 00:39:45,410
<font color="#CCCCCC">how we started looking</font><font color="#E5E5E5"> at this okay</font>

667
00:39:39,860 --> 00:39:51,710
thanks what question you want<font color="#E5E5E5"> to</font><font color="#CCCCCC"> eat if</font>

668
00:39:45,410 --> 00:39:56,240
you don't<font color="#CCCCCC"> want to wait seven minutes no</font>

669
00:39:51,710 --> 00:39:58,100
more question okay<font color="#E5E5E5"> so just an</font>

670
00:39:56,240 --> 00:40:01,939
announcement<font color="#CCCCCC"> we</font><font color="#E5E5E5"> will resume at</font><font color="#CCCCCC"> two</font>

671
00:39:58,100 --> 00:40:07,220
<font color="#CCCCCC">o'clock</font><font color="#E5E5E5"> so you can have a great lunch in</font>

672
00:40:01,940 --> 00:40:08,900
the place where<font color="#E5E5E5"> we have a break at 10:30</font>

673
00:40:07,220 --> 00:40:12,399
<font color="#CCCCCC">so</font><font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> very much thank you</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> the</font>

674
00:40:08,900 --> 00:40:12,400
speakers<font color="#CCCCCC"> and good lunch</font>

