1
00:00:02,600 --> 00:00:11,209
so<font color="#E5E5E5"> okay so it's basically its name</font>

2
00:00:07,910 --> 00:00:13,849
<font color="#E5E5E5">Microsoft</font><font color="#CCCCCC"> and background Jeana so the</font>

3
00:00:11,210 --> 00:00:15,469
idea is<font color="#CCCCCC"> to target the Microsoft NP</font>

4
00:00:13,849 --> 00:00:18,590
engine which<font color="#CCCCCC"> is actually the malware</font>

5
00:00:15,469 --> 00:00:23,119
protection service<font color="#CCCCCC"> on Microsoft</font><font color="#E5E5E5"> but you</font>

6
00:00:18,590 --> 00:00:25,570
can download in through these links<font color="#E5E5E5"> you</font>

7
00:00:23,119 --> 00:00:28,579
extract it<font color="#E5E5E5"> and you get some files</font>

8
00:00:25,570 --> 00:00:30,489
including<font color="#E5E5E5"> the NPN join dot DL</font><font color="#CCCCCC"> error</font>

9
00:00:28,579 --> 00:00:33,670
which is<font color="#E5E5E5"> actually doing all the</font>

10
00:00:30,489 --> 00:00:38,510
interesting stuff<font color="#CCCCCC"> so it's the Microsoft</font>

11
00:00:33,670 --> 00:00:43,460
antivirus and it's<font color="#E5E5E5"> a grid grid tools</font>

12
00:00:38,510 --> 00:00:47,449
with a<font color="#E5E5E5"> lot of stuff in it</font><font color="#CCCCCC"> so for</font>

13
00:00:43,460 --> 00:00:50,480
<font color="#E5E5E5">instance the</font><font color="#CCCCCC"> tab is all mangy already</font>

14
00:00:47,450 --> 00:00:53,870
does a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> works</font><font color="#E5E5E5"> on it to try to</font><font color="#CCCCCC"> fun</font>

15
00:00:50,480 --> 00:00:56,629
<font color="#CCCCCC">on bugs and find</font><font color="#E5E5E5"> some of</font><font color="#CCCCCC"> them so you can</font>

16
00:00:53,870 --> 00:01:00,550
<font color="#CCCCCC">actually run</font><font color="#E5E5E5"> at the NPN</font><font color="#CCCCCC"> giant dll</font><font color="#E5E5E5"> on</font>

17
00:00:56,630 --> 00:01:04,220
Linux and gdb it<font color="#E5E5E5"> so it's really great</font>

18
00:01:00,550 --> 00:01:07,640
<font color="#CCCCCC">another guy Alex I blood-cell have done</font>

19
00:01:04,220 --> 00:01:10,970
some work<font color="#CCCCCC"> so need to you can go to it's</font>

20
00:01:07,640 --> 00:01:14,060
a black<font color="#CCCCCC"> cat us a talk it's really fun</font><font color="#E5E5E5"> to</font>

21
00:01:10,970 --> 00:01:17,179
see<font color="#CCCCCC"> and it's actually a program</font><font color="#E5E5E5"> of</font>

22
00:01:14,060 --> 00:01:19,390
interest<font color="#CCCCCC"> why because the PDB is</font>

23
00:01:17,180 --> 00:01:22,299
available so it's basically the symbols

24
00:01:19,390 --> 00:01:25,070
and windows so<font color="#E5E5E5"> you have all the symbol</font>

25
00:01:22,299 --> 00:01:28,340
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> runnable on a</font><font color="#CCCCCC"> linux</font><font color="#E5E5E5"> thanks to</font><font color="#CCCCCC"> la</font>

26
00:01:25,070 --> 00:01:31,630
<font color="#CCCCCC">Torre</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> Teresa</font><font color="#E5E5E5"> money and it's also</font>

27
00:01:28,340 --> 00:01:38,180
have PDF processor<font color="#CCCCCC"> a JavaScript engine</font>

28
00:01:31,630 --> 00:01:42,619
<font color="#CCCCCC">an internal internal language</font><font color="#E5E5E5"> it's able</font>

29
00:01:38,180 --> 00:01:45,439
<font color="#CCCCCC">to read dot net</font><font color="#E5E5E5"> VM</font><font color="#CCCCCC"> protected card x86</font>

30
00:01:42,619 --> 00:01:48,500
<font color="#E5E5E5">arm it's able to emulate</font><font color="#CCCCCC"> them so it's</font>

31
00:01:45,439 --> 00:01:52,220
<font color="#E5E5E5">very easy there are a lot of things in</font>

32
00:01:48,500 --> 00:01:54,740
it<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it also have some</font><font color="#E5E5E5"> unpacker so the</font>

33
00:01:52,220 --> 00:01:58,070
goal is can we try<font color="#E5E5E5"> to use the unpacking</font>

34
00:01:54,740 --> 00:02:01,850
<font color="#E5E5E5">system for own good so basically</font><font color="#CCCCCC"> if you</font>

35
00:01:58,070 --> 00:02:03,408
<font color="#E5E5E5">take a look at the engine so for</font>

36
00:02:01,850 --> 00:02:05,839
<font color="#E5E5E5">instance you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> this function which</font>

37
00:02:03,409 --> 00:02:08,739
<font color="#CCCCCC">named quits document object and which is</font>

38
00:02:05,840 --> 00:02:11,359
actually<font color="#E5E5E5"> used when you are emulating</font>

39
00:02:08,739 --> 00:02:13,959
<font color="#E5E5E5">JavaScript code and you</font><font color="#CCCCCC"> can see</font><font color="#E5E5E5"> for</font>

40
00:02:11,359 --> 00:02:16,400
<font color="#CCCCCC">instance that it's creating the document</font>

41
00:02:13,959 --> 00:02:19,819
<font color="#E5E5E5">object in JavaScript and in</font>

42
00:02:16,400 --> 00:02:24,049
the<font color="#CCCCCC"> referrer to google.com art code</font>

43
00:02:19,819 --> 00:02:25,760
<font color="#E5E5E5">values if you want to catch the anti</font>

44
00:02:24,049 --> 00:02:28,069
race you just<font color="#CCCCCC"> have to</font><font color="#E5E5E5"> check that the</font>

45
00:02:25,760 --> 00:02:30,439
river is<font color="#E5E5E5"> these strings and you know that</font>

46
00:02:28,069 --> 00:02:34,578
you<font color="#E5E5E5"> are being emulated and so you don't</font>

47
00:02:30,439 --> 00:02:37,220
<font color="#CCCCCC">have to do your stuff mmm</font><font color="#E5E5E5"> so but there</font>

48
00:02:34,579 --> 00:02:41,359
are a<font color="#E5E5E5"> lot of things as I said and the</font>

49
00:02:37,220 --> 00:02:45,950
one I'm interest to is this one<font color="#CCCCCC"> when</font><font color="#E5E5E5"> you</font>

50
00:02:41,359 --> 00:02:49,549
<font color="#E5E5E5">are one</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> all of the Packers so</font><font color="#CCCCCC"> salad</font>

51
00:02:45,950 --> 00:02:53,238
<font color="#CCCCCC">a lot</font><font color="#E5E5E5"> of them if I just show you the</font>

52
00:02:49,549 --> 00:02:57,230
<font color="#CCCCCC">unpack functions you see that so a lot</font>

53
00:02:53,239 --> 00:03:01,299
of<font color="#E5E5E5"> them for quite a few Packers and each</font>

54
00:02:57,230 --> 00:03:04,099
<font color="#E5E5E5">of them after having be able to the pack</font>

55
00:03:01,299 --> 00:03:08,180
<font color="#E5E5E5">restore call back that will dump the</font>

56
00:03:04,099 --> 00:03:12,459
<font color="#E5E5E5">recurrence</font><font color="#CCCCCC"> wheat PE file and then the</font>

57
00:03:08,180 --> 00:03:12,459
<font color="#E5E5E5">function might be</font><font color="#CCCCCC"> called which is named</font>

58
00:03:12,730 --> 00:03:19,518
<font color="#E5E5E5">dump unpacked file so what we want is to</font>

59
00:03:17,000 --> 00:03:22,459
<font color="#E5E5E5">be able to which this function</font><font color="#CCCCCC"> because</font>

60
00:03:19,519 --> 00:03:25,609
if you have a look<font color="#E5E5E5"> at it inside</font><font color="#CCCCCC"> source a</font>

61
00:03:22,459 --> 00:03:28,910
few tests<font color="#E5E5E5"> and then it will retrieve</font><font color="#CCCCCC"> the</font>

62
00:03:25,609 --> 00:03:32,500
<font color="#E5E5E5">unpack the environment variable and then</font>

63
00:03:28,910 --> 00:03:37,549
it will<font color="#E5E5E5"> basically a dump</font><font color="#CCCCCC"> GPE in T's</font>

64
00:03:32,500 --> 00:03:40,849
territory so we<font color="#CCCCCC"> just have to patch the</font>

65
00:03:37,549 --> 00:03:42,829
<font color="#E5E5E5">t's conditional jump to a legend here so</font>

66
00:03:40,849 --> 00:03:45,198
to do<font color="#CCCCCC"> that to replace a</font><font color="#E5E5E5"> conditional</font>

67
00:03:42,829 --> 00:03:49,609
agent by a full jump<font color="#E5E5E5"> we use the 50 line</font>

68
00:03:45,199 --> 00:03:52,819
code<font color="#E5E5E5"> which typically here so completely</font>

69
00:03:49,609 --> 00:03:59,180
<font color="#E5E5E5">over engineered and so at the end we</font>

70
00:03:52,819 --> 00:04:01,488
obtain<font color="#E5E5E5"> a Benari that when we run it this</font>

71
00:03:59,180 --> 00:04:04,430
<font color="#E5E5E5">is the NP client to run the</font><font color="#CCCCCC"> the code and</font>

72
00:04:01,489 --> 00:04:08,859
<font color="#E5E5E5">I am running it on</font><font color="#CCCCCC"> ebay X file our</font>

73
00:04:04,430 --> 00:04:14,690
<font color="#CCCCCC">Maggio</font><font color="#E5E5E5"> world is protect and dotnet</font>

74
00:04:08,859 --> 00:04:15,530
<font color="#E5E5E5">empress file so you run it take just a</font>

75
00:04:14,690 --> 00:04:19,010
few seconds

76
00:04:15,530 --> 00:04:21,918
detective<font color="#E5E5E5"> Russ Maggio than the the as</font>

77
00:04:19,010 --> 00:04:24,669
protect and the<font color="#CCCCCC"> dotnet</font><font color="#E5E5E5"> and epics is</font>

78
00:04:21,918 --> 00:04:34,359
right here<font color="#E5E5E5"> so what</font><font color="#CCCCCC"> we have at the</font><font color="#E5E5E5"> end</font>

79
00:04:24,669 --> 00:04:37,240
is the we get out of<font color="#CCCCCC"> these files</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font>

80
00:04:34,360 --> 00:04:41,529
not really see them but<font color="#E5E5E5"> for</font><font color="#CCCCCC"> instance if</font>

81
00:04:37,240 --> 00:04:43,449
I'm<font color="#CCCCCC"> opening the ass protect</font><font color="#E5E5E5"> so just to</font>

82
00:04:41,529 --> 00:04:47,289
show you<font color="#CCCCCC"> that I'm</font><font color="#E5E5E5"> not cheating I</font><font color="#CCCCCC"> opened</font>

83
00:04:43,449 --> 00:04:50,439
<font color="#CCCCCC">the</font><font color="#E5E5E5"> first one the original</font><font color="#CCCCCC"> ones is right</font>

84
00:04:47,289 --> 00:04:54,909
<font color="#E5E5E5">there but it's clearly</font><font color="#CCCCCC"> packed you don't</font>

85
00:04:50,439 --> 00:04:59,889
have<font color="#E5E5E5"> just a function</font><font color="#CCCCCC"> once and so on but</font>

86
00:04:54,909 --> 00:05:03,279
<font color="#E5E5E5">if you use if you you if you</font><font color="#CCCCCC"> open the</font>

87
00:04:59,889 --> 00:05:08,800
resulting fire made by the Microsoft and

88
00:05:03,279 --> 00:05:15,580
giant you get<font color="#CCCCCC"> it</font><font color="#E5E5E5"> as protect sorry one</font>

89
00:05:08,800 --> 00:05:19,689
analyst<font color="#CCCCCC"> order and you obtain</font><font color="#E5E5E5"> a full PE</font>

90
00:05:15,580 --> 00:05:22,870
which is a with the imports working and

91
00:05:19,689 --> 00:05:26,199
so on so<font color="#E5E5E5"> he</font><font color="#CCCCCC"> Clary and back the file if</font>

92
00:05:22,870 --> 00:05:29,349
I'm looking<font color="#E5E5E5"> at the dotnet one</font><font color="#CCCCCC"> RSD</font><font color="#E5E5E5"> for</font>

93
00:05:26,199 --> 00:05:32,770
the Empress<font color="#CCCCCC"> you don't have too many</font>

94
00:05:29,349 --> 00:05:35,128
things unless want to have a look<font color="#E5E5E5"> at all</font>

95
00:05:32,770 --> 00:05:39,219
it works but it's really not funny

96
00:05:35,129 --> 00:05:42,000
dotnet itself<font color="#E5E5E5"> but after decrypting he</font>

97
00:05:39,219 --> 00:05:44,830
got the<font color="#E5E5E5"> final the</font><font color="#CCCCCC"> final class with the</font>

98
00:05:42,000 --> 00:05:48,550
<font color="#CCCCCC">sample class on all of the stuff inside</font>

99
00:05:44,830 --> 00:05:50,500
<font color="#CCCCCC">so thank you it's just</font><font color="#E5E5E5"> oh you can reuse</font>

100
00:05:48,550 --> 00:05:52,870
the<font color="#E5E5E5"> MPA</font><font color="#CCCCCC"> Giants he went back for your own</font>

101
00:05:50,500 --> 00:05:54,070
good<font color="#E5E5E5"> and have an Parker's maintained by</font>

102
00:05:52,870 --> 00:05:57,190
Microsoft

103
00:05:54,070 --> 00:05:57,190
[Music]

104
00:05:57,540 --> 00:06:03,330
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is going to be very</font><font color="#CCCCCC"> short</font>

105
00:06:00,830 --> 00:06:05,219
<font color="#E5E5E5">since I arrived this morning has been</font>

106
00:06:03,330 --> 00:06:08,070
<font color="#E5E5E5">dispatching a couple of blue cards</font>

107
00:06:05,220 --> 00:06:10,170
<font color="#E5E5E5">around and if you look at those</font><font color="#CCCCCC"> you</font>

108
00:06:08,070 --> 00:06:13,110
<font color="#E5E5E5">would see that</font><font color="#CCCCCC"> scums</font><font color="#E5E5E5"> kind of challenge</font>

109
00:06:10,170 --> 00:06:16,740
on it<font color="#CCCCCC"> some of you</font><font color="#E5E5E5"> already solved it with</font>

110
00:06:13,110 --> 00:06:19,290
a pen paper so awesome<font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> for the</font>

111
00:06:16,740 --> 00:06:20,960
others<font color="#E5E5E5"> if you actually want to do it</font><font color="#CCCCCC"> on</font>

112
00:06:19,290 --> 00:06:24,390
<font color="#CCCCCC">a</font><font color="#E5E5E5"> computer</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't have to retype</font>

113
00:06:20,960 --> 00:06:27,299
<font color="#E5E5E5">everything you so there is the proper</font>

114
00:06:24,390 --> 00:06:30,150
I'd react<font color="#E5E5E5"> hashtag on a tweet and then I</font>

115
00:06:27,300 --> 00:06:32,670
dumped a challenge<font color="#E5E5E5"> here so you can just</font>

116
00:06:30,150 --> 00:06:35,900
copy paste<font color="#E5E5E5"> from paste bin and run it in</font>

117
00:06:32,670 --> 00:06:39,450
unicorn or<font color="#CCCCCC"> Mia's more Idaho or whatever</font>

118
00:06:35,900 --> 00:06:41,549
the flag is an email<font color="#E5E5E5"> address but I don't</font>

119
00:06:39,450 --> 00:06:43,979
get<font color="#CCCCCC"> that email so if you</font><font color="#E5E5E5"> solve it</font><font color="#CCCCCC"> just</font>

120
00:06:41,550 --> 00:06:47,640
ping me<font color="#CCCCCC"> on Twitter or some</font><font color="#E5E5E5"> in email I</font>

121
00:06:43,980 --> 00:06:48,780
would<font color="#E5E5E5"> be</font><font color="#CCCCCC"> interested to know if I mean</font>

122
00:06:47,640 --> 00:06:54,210
how many<font color="#CCCCCC"> of</font><font color="#E5E5E5"> you have you seen those</font>

123
00:06:48,780 --> 00:06:55,950
cards<font color="#E5E5E5"> and started playing mmm okay good</font>

124
00:06:54,210 --> 00:06:57,690
<font color="#E5E5E5">only three people so the others you</font><font color="#CCCCCC"> have</font>

125
00:06:55,950 --> 00:07:00,690
time<font color="#CCCCCC"> before</font><font color="#E5E5E5"> a CTF if you not subscribe</font>

126
00:06:57,690 --> 00:07:03,300
<font color="#CCCCCC">to a workshop should</font><font color="#E5E5E5"> take</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> to 30</font>

127
00:07:00,690 --> 00:07:05,370
minutes and let how many of you<font color="#E5E5E5"> spend</font>

128
00:07:03,300 --> 00:07:09,080
more<font color="#CCCCCC"> than</font><font color="#E5E5E5"> 30 minutes on</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> you should</font>

129
00:07:05,370 --> 00:07:18,420
probably<font color="#CCCCCC"> not doing it</font><font color="#E5E5E5"> and that's it</font>

130
00:07:09,080 --> 00:07:20,340
thank<font color="#E5E5E5"> you so as you as you will see we</font>

131
00:07:18,420 --> 00:07:22,560
<font color="#CCCCCC">are very</font><font color="#E5E5E5"> well prepared</font><font color="#CCCCCC"> for this room so</font>

132
00:07:20,340 --> 00:07:25,080
we're going<font color="#E5E5E5"> to be very synchronized exit</font>

133
00:07:22,560 --> 00:07:27,600
ROM so<font color="#E5E5E5"> just a few words about the band</font>

134
00:07:25,080 --> 00:07:31,349
the<font color="#E5E5E5"> change we've</font><font color="#CCCCCC"> made for</font><font color="#E5E5E5"> the gray aqua</font>

135
00:07:27,600 --> 00:07:35,880
<font color="#CCCCCC">child first</font><font color="#E5E5E5"> the timeline I think it's</font>

136
00:07:31,350 --> 00:07:38,610
quite fun<font color="#CCCCCC"> to see that so yes</font><font color="#E5E5E5"> we</font>

137
00:07:35,880 --> 00:07:42,870
published the challenge on<font color="#CCCCCC"> the 31st of</font>

138
00:07:38,610 --> 00:07:45,630
August<font color="#E5E5E5"> and like a tunic</font><font color="#CCCCCC"> 23 hours later</font>

139
00:07:42,870 --> 00:07:48,360
we<font color="#CCCCCC"> were already</font><font color="#E5E5E5"> panicked because someone</font>

140
00:07:45,630 --> 00:07:51,020
had reached the last challenge which<font color="#CCCCCC"> is</font>

141
00:07:48,360 --> 00:07:56,060
supposed to be<font color="#E5E5E5"> the the hardest one</font><font color="#CCCCCC"> and</font>

142
00:07:51,020 --> 00:08:00,510
we were even<font color="#E5E5E5"> more panicked when</font><font color="#CCCCCC"> 14 hours</font>

143
00:07:56,060 --> 00:08:03,270
after<font color="#E5E5E5"> he solved it we get it</font><font color="#CCCCCC"> was at</font>

144
00:08:00,510 --> 00:08:05,699
<font color="#E5E5E5">first</font><font color="#CCCCCC"> too to know if you were doing</font><font color="#E5E5E5"> the</font>

145
00:08:03,270 --> 00:08:07,380
if we had the<font color="#CCCCCC"> right</font><font color="#E5E5E5"> cursor of difficulty</font>

146
00:08:05,699 --> 00:08:11,190
<font color="#E5E5E5">for this last change and when we saw</font>

147
00:08:07,380 --> 00:08:13,949
<font color="#CCCCCC">that</font><font color="#E5E5E5"> the first guy solved it in 1215</font>

148
00:08:11,190 --> 00:08:18,110
<font color="#CCCCCC">hours we were like</font><font color="#E5E5E5"> okay was maybe way</font>

149
00:08:13,949 --> 00:08:22,470
too easy<font color="#E5E5E5"> but it appears that after</font><font color="#CCCCCC"> all</font>

150
00:08:18,110 --> 00:08:26,490
<font color="#E5E5E5">ii saw was like five days after and the</font>

151
00:08:22,470 --> 00:08:30,120
one after that was like 18 days after so

152
00:08:26,490 --> 00:08:32,539
actually<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> maybe it</font><font color="#E5E5E5"> will too</font>

153
00:08:30,120 --> 00:08:32,539
difficult

154
00:08:33,620 --> 00:08:39,510
the<font color="#CCCCCC"> Riverstone line is also</font><font color="#E5E5E5"> interesting</font>

155
00:08:36,469 --> 00:08:43,409
<font color="#CCCCCC">so the challenge was released at</font><font color="#E5E5E5"> 8:00</font>

156
00:08:39,510 --> 00:08:48,230
p.m.<font color="#E5E5E5"> until the last day of August and we</font>

157
00:08:43,409 --> 00:08:48,230
were fixing<font color="#CCCCCC"> bugs</font><font color="#E5E5E5"> the the same day</font>

158
00:08:49,649 --> 00:08:55,350
I think if<font color="#CCCCCC"> yeah why I</font><font color="#E5E5E5"> think it's quite</font>

159
00:08:52,920 --> 00:08:58,349
<font color="#E5E5E5">common but if you if you count the</font>

160
00:08:55,350 --> 00:09:00,000
<font color="#CCCCCC">number of commits per day during the</font>

161
00:08:58,350 --> 00:09:04,260
summer<font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> have many activity in</font>

162
00:09:00,000 --> 00:09:06,630
<font color="#E5E5E5">July in August it starts beginning</font>

163
00:09:04,260 --> 00:09:08,490
<font color="#E5E5E5">active and then the</font><font color="#CCCCCC"> Tula the last</font><font color="#E5E5E5"> two</font>

164
00:09:06,630 --> 00:09:10,410
days<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> I we didn't count but</font>

165
00:09:08,490 --> 00:09:12,560
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> 50 commits or something</font>

166
00:09:10,410 --> 00:09:12,560
like<font color="#E5E5E5"> that</font>

167
00:09:16,459 --> 00:09:23,189
<font color="#CCCCCC">so yes</font><font color="#E5E5E5"> in our team</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> some brains</font>

168
00:09:20,010 --> 00:09:24,779
who think<font color="#E5E5E5"> about the architectures so</font>

169
00:09:23,190 --> 00:09:29,970
just<font color="#E5E5E5"> week here we're going to talk</font><font color="#CCCCCC"> about</font>

170
00:09:24,779 --> 00:09:31,649
the<font color="#E5E5E5"> the first layer</font><font color="#CCCCCC"> virtual machine not</font>

171
00:09:29,970 --> 00:09:37,950
<font color="#E5E5E5">the one you were told about in the</font>

172
00:09:31,649 --> 00:09:42,209
presentation yeah the first one so the

173
00:09:37,950 --> 00:09:44,760
the the<font color="#CCCCCC"> idea is that we didn't</font><font color="#E5E5E5"> want to</font>

174
00:09:42,209 --> 00:09:47,010
<font color="#E5E5E5">make</font><font color="#CCCCCC"> a classic</font><font color="#E5E5E5"> virtual machine so our</font>

175
00:09:44,760 --> 00:09:50,220
<font color="#CCCCCC">our key architectures actually reads a</font>

176
00:09:47,010 --> 00:09:52,140
<font color="#CCCCCC">bit code</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> streams</font><font color="#E5E5E5"> all right so the</font>

177
00:09:50,220 --> 00:09:56,250
<font color="#E5E5E5">idea is that you get a bit stream and</font>

178
00:09:52,140 --> 00:09:58,770
input and we will decode an instruction

179
00:09:56,250 --> 00:10:02,310
each<font color="#E5E5E5"> two bits so the first instruction</font>

180
00:09:58,770 --> 00:10:05,910
will<font color="#CCCCCC"> be coded</font><font color="#E5E5E5"> on the bit o</font><font color="#CCCCCC"> 2 for extra</font>

181
00:10:02,310 --> 00:10:07,050
and the other one on<font color="#CCCCCC"> 1 3 and so on</font><font color="#E5E5E5"> so if</font>

182
00:10:05,910 --> 00:10:10,469
you<font color="#E5E5E5"> take</font>

183
00:10:07,050 --> 00:10:13,469
and in<font color="#CCCCCC"> bytes you will have to untangle</font>

184
00:10:10,470 --> 00:10:17,550
the instructions in<font color="#CCCCCC"> the statement</font><font color="#E5E5E5"> yes</font>

185
00:10:13,470 --> 00:10:21,209
<font color="#CCCCCC">and once we once already decoder</font><font color="#E5E5E5"> which</font>

186
00:10:17,550 --> 00:10:25,589
is called scat cat<font color="#E5E5E5"> decoded</font><font color="#CCCCCC"> it sends it</font>

187
00:10:21,209 --> 00:10:29,609
to<font color="#CCCCCC"> two other processes that are going</font><font color="#E5E5E5"> to</font>

188
00:10:25,589 --> 00:10:32,310
execute<font color="#E5E5E5"> the instruction so for instance</font>

189
00:10:29,610 --> 00:10:35,940
you<font color="#E5E5E5"> can have</font><font color="#CCCCCC"> a to add which are</font><font color="#E5E5E5"> going to</font>

190
00:10:32,310 --> 00:10:37,529
be executed at the<font color="#E5E5E5"> same time except</font>

191
00:10:35,940 --> 00:10:38,910
obviously except if there is a

192
00:10:37,529 --> 00:10:40,980
dependency between the the first

193
00:10:38,910 --> 00:10:43,100
<font color="#CCCCCC">injection the second one in which case</font>

194
00:10:40,980 --> 00:10:46,320
the assembler that we've written<font color="#E5E5E5"> for or</font>

195
00:10:43,100 --> 00:10:47,579
<font color="#CCCCCC">bytecode is using is adding knobs</font>

196
00:10:46,320 --> 00:10:49,279
<font color="#E5E5E5">between instruction that</font><font color="#CCCCCC"> are</font>

197
00:10:47,579 --> 00:10:51,810
<font color="#CCCCCC">interdependent</font>

198
00:10:49,279 --> 00:10:53,760
so it's<font color="#E5E5E5"> foolproof obviously for</font>

199
00:10:51,810 --> 00:10:59,399
performance reason that we we do this

200
00:10:53,760 --> 00:11:02,130
yes<font color="#CCCCCC"> very fast and everything so every</font>

201
00:10:59,399 --> 00:11:04,620
rectangle is a one process<font color="#E5E5E5"> and are</font>

202
00:11:02,130 --> 00:11:06,570
communicating through<font color="#CCCCCC"> Bustos through</font>

203
00:11:04,620 --> 00:11:10,170
the-- Newell's and through there is a

204
00:11:06,570 --> 00:11:12,180
<font color="#E5E5E5">shared memory or some some pipes etc</font><font color="#CCCCCC"> oh</font>

205
00:11:10,170 --> 00:11:14,670
yes the first one we call<font color="#CCCCCC"> the band</font><font color="#E5E5E5"> which</font>

206
00:11:12,180 --> 00:11:18,510
has<font color="#E5E5E5"> three sub processes</font><font color="#CCCCCC"> actually it's</font>

207
00:11:14,670 --> 00:11:21,209
run once to interpret interpret the the

208
00:11:18,510 --> 00:11:24,120
the VM with<font color="#CCCCCC"> left-right which was</font>

209
00:11:21,209 --> 00:11:26,939
described earlier<font color="#E5E5E5"> and then there is also</font>

210
00:11:24,120 --> 00:11:29,490
one which decodes<font color="#E5E5E5"> it and so there are</font>

211
00:11:26,940 --> 00:11:33,839
multiples of<font color="#E5E5E5"> the band started which</font>

212
00:11:29,490 --> 00:11:35,459
makes a lot of<font color="#CCCCCC"> processes a few words</font>

213
00:11:33,839 --> 00:11:37,200
about<font color="#CCCCCC"> flat unity because</font><font color="#E5E5E5"> it's a huge</font>

214
00:11:35,459 --> 00:11:38,729
<font color="#CCCCCC">problem that</font><font color="#E5E5E5"> we don't want some guys to</font>

215
00:11:37,200 --> 00:11:42,270
find flag that<font color="#E5E5E5"> are not accepted by the</font>

216
00:11:38,730 --> 00:11:46,760
<font color="#E5E5E5">platform so we we put a lot of thought</font>

217
00:11:42,270 --> 00:11:50,250
<font color="#CCCCCC">to this too</font><font color="#E5E5E5"> but we want to thank</font><font color="#CCCCCC"> Nicola</font>

218
00:11:46,760 --> 00:11:54,779
because he solved it<font color="#E5E5E5"> for us actually he</font>

219
00:11:50,250 --> 00:11:56,850
sent us an email<font color="#CCCCCC"> when he found solutions</font>

220
00:11:54,779 --> 00:11:59,189
like I have plenty<font color="#CCCCCC"> of solution there</font>

221
00:11:56,850 --> 00:12:01,920
that makes sense but there are not

222
00:11:59,190 --> 00:12:03,900
accepted<font color="#E5E5E5"> here is my file with all my</font>

223
00:12:01,920 --> 00:12:05,790
solutions and we have<font color="#E5E5E5"> like</font>

224
00:12:03,900 --> 00:12:09,329
about<font color="#CCCCCC"> 50 solutions or something like</font>

225
00:12:05,790 --> 00:12:10,910
<font color="#CCCCCC">that so we added a we added them</font><font color="#E5E5E5"> all in</font>

226
00:12:09,330 --> 00:12:15,120
the platform<font color="#E5E5E5"> and then they were all</font>

227
00:12:10,910 --> 00:12:16,740
<font color="#E5E5E5">accepted so for the</font><font color="#CCCCCC"> next guys</font><font color="#E5E5E5"> it was</font>

228
00:12:15,120 --> 00:12:23,160
okay to<font color="#E5E5E5"> be valid to plug with one of</font>

229
00:12:16,740 --> 00:12:25,890
those well thank<font color="#E5E5E5"> you so obviously in our</font>

230
00:12:23,160 --> 00:12:28,199
<font color="#E5E5E5">team</font><font color="#CCCCCC"> we have a so the assembler with the</font>

231
00:12:25,890 --> 00:12:31,530
assembly we we made for this<font color="#CCCCCC"> virtual</font>

232
00:12:28,200 --> 00:12:34,740
machine<font color="#E5E5E5"> is called IO and obviously our</font>

233
00:12:31,530 --> 00:12:38,490
<font color="#E5E5E5">developers need uh need assemblers</font><font color="#CCCCCC"> and</font>

234
00:12:34,740 --> 00:12:40,650
tools to<font color="#CCCCCC"> build program in IO so it was</font>

235
00:12:38,490 --> 00:12:43,080
designed<font color="#E5E5E5"> by reverse engineers for</font>

236
00:12:40,650 --> 00:12:45,420
reverse engineers and we are<font color="#E5E5E5"> going to</font>

237
00:12:43,080 --> 00:12:48,180
describe<font color="#CCCCCC"> some features and the first one</font>

238
00:12:45,420 --> 00:12:51,930
is we have a<font color="#E5E5E5"> very great instruction set</font>

239
00:12:48,180 --> 00:12:55,859
<font color="#CCCCCC">which is</font><font color="#E5E5E5"> composed of like</font><font color="#CCCCCC"> 12</font><font color="#E5E5E5"> instruction</font>

240
00:12:51,930 --> 00:12:58,170
or so yes<font color="#CCCCCC"> so with all</font><font color="#E5E5E5"> these 12</font>

241
00:12:55,860 --> 00:13:02,340
instruction we managed to<font color="#E5E5E5"> do everything</font>

242
00:12:58,170 --> 00:13:08,510
read read read<font color="#CCCCCC"> then user input allocate</font>

243
00:13:02,340 --> 00:13:11,670
memory and so on we want you to have

244
00:13:08,510 --> 00:13:14,910
<font color="#CCCCCC">what for instance</font><font color="#E5E5E5"> if you take a look</font>

245
00:13:11,670 --> 00:13:16,290
<font color="#E5E5E5">carefully you might wonder</font><font color="#CCCCCC"> how we can</font><font color="#E5E5E5"> do</font>

246
00:13:14,910 --> 00:13:18,510
a subtraction of something<font color="#CCCCCC"> later</font><font color="#E5E5E5"> so we</font>

247
00:13:16,290 --> 00:13:20,280
don't have this<font color="#E5E5E5"> kind of operations we</font>

248
00:13:18,510 --> 00:13:23,460
just have<font color="#CCCCCC"> an ad and the neck and this</font>

249
00:13:20,280 --> 00:13:26,850
allows to do every subtraction and

250
00:13:23,460 --> 00:13:31,260
<font color="#E5E5E5">there's the same for for instance you</font>

251
00:13:26,850 --> 00:13:36,480
<font color="#E5E5E5">have only have one jump but we you could</font>

252
00:13:31,260 --> 00:13:40,200
you still can do a conditional jumps so

253
00:13:36,480 --> 00:13:42,990
yes<font color="#E5E5E5"> one feature we did for well for our</font>

254
00:13:40,200 --> 00:13:44,760
developers<font color="#E5E5E5"> is that when you want</font><font color="#CCCCCC"> to jump</font>

255
00:13:42,990 --> 00:13:47,190
in another function<font color="#E5E5E5"> you just basically</font>

256
00:13:44,760 --> 00:13:49,790
call the jump instruction<font color="#E5E5E5"> and set the</font>

257
00:13:47,190 --> 00:13:53,700
label<font color="#E5E5E5"> you want to go to but in this case</font>

258
00:13:49,790 --> 00:13:55,170
<font color="#CCCCCC">our developer was like stuck and you</font>

259
00:13:53,700 --> 00:13:57,420
didn't understand while the jump

260
00:13:55,170 --> 00:14:01,050
instruction<font color="#CCCCCC"> was failing so first the gem</font>

261
00:13:57,420 --> 00:14:03,300
takes three operands<font color="#E5E5E5"> yes</font><font color="#CCCCCC"> because the</font>

262
00:14:01,050 --> 00:14:05,729
<font color="#E5E5E5">first one so when you have a jump</font>

263
00:14:03,300 --> 00:14:08,550
instruction<font color="#E5E5E5"> it will look at the</font><font color="#CCCCCC"> value of</font>

264
00:14:05,730 --> 00:14:11,280
a specific register and if it's<font color="#CCCCCC"> 0 it</font>

265
00:14:08,550 --> 00:14:12,810
will jump<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the first target if it's</font>

266
00:14:11,280 --> 00:14:14,819
greater<font color="#CCCCCC"> than</font><font color="#E5E5E5"> they were the second and</font>

267
00:14:12,810 --> 00:14:16,260
less than<font color="#E5E5E5"> they were the third something</font>

268
00:14:14,820 --> 00:14:17,370
like that so that's<font color="#E5E5E5"> how we have</font><font color="#CCCCCC"> one</font>

269
00:14:16,260 --> 00:14:20,189
instruction<font color="#E5E5E5"> for all</font>

270
00:14:17,370 --> 00:14:23,010
so additional<font color="#CCCCCC"> gems</font><font color="#E5E5E5"> yes and and since</font>

271
00:14:20,190 --> 00:14:25,440
those<font color="#CCCCCC"> are immediate they are coded</font><font color="#E5E5E5"> on</font>

272
00:14:23,010 --> 00:14:29,730
nine bits because<font color="#E5E5E5"> why</font><font color="#CCCCCC"> not</font>

273
00:14:25,440 --> 00:14:34,710
<font color="#E5E5E5">and with a sign bit so it makes</font><font color="#CCCCCC"> eight</font>

274
00:14:29,730 --> 00:14:38,990
<font color="#E5E5E5">bits which is</font><font color="#CCCCCC"> a 256 bytes into our byte</font>

275
00:14:34,710 --> 00:14:43,530
code<font color="#E5E5E5"> so we can jump only jump to plus</font>

276
00:14:38,990 --> 00:14:45,870
<font color="#CCCCCC">226 56</font><font color="#E5E5E5"> or minus 256 and when you want to</font>

277
00:14:43,530 --> 00:14:48,480
<font color="#E5E5E5">reach a fire function you actually have</font>

278
00:14:45,870 --> 00:14:50,100
to put<font color="#E5E5E5"> a middle jump and jump to this</font>

279
00:14:48,480 --> 00:14:52,320
junk which which jump to the<font color="#CCCCCC"> other</font>

280
00:14:50,100 --> 00:14:56,580
location because you can't reach<font color="#CCCCCC"> it</font><font color="#E5E5E5"> from</font>

281
00:14:52,320 --> 00:14:59,790
<font color="#E5E5E5">once so why because when when we</font>

282
00:14:56,580 --> 00:15:01,170
designed the i/o instruction set we we

283
00:14:59,790 --> 00:15:03,390
didn't<font color="#E5E5E5"> think</font><font color="#CCCCCC"> that we would end up</font><font color="#E5E5E5"> with a</font>

284
00:15:01,170 --> 00:15:05,010
<font color="#E5E5E5">large your programs that and then we</font>

285
00:15:03,390 --> 00:15:07,680
would<font color="#E5E5E5"> not</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> jump wherever we</font>

286
00:15:05,010 --> 00:15:16,200
wanted so<font color="#E5E5E5"> we fixed it like this with an</font>

287
00:15:07,680 --> 00:15:19,109
intimate<font color="#CCCCCC"> jump and since we are in 2018</font>

288
00:15:16,200 --> 00:15:22,140
<font color="#CCCCCC">and we are great developers we did this</font>

289
00:15:19,110 --> 00:15:24,240
with test-driven development<font color="#CCCCCC"> and as you</font>

290
00:15:22,140 --> 00:15:27,060
<font color="#E5E5E5">can</font><font color="#CCCCCC"> see this is our</font><font color="#E5E5E5"> test suit at the end</font>

291
00:15:24,240 --> 00:15:30,000
of the challenge<font color="#E5E5E5"> so we just do make</font>

292
00:15:27,060 --> 00:15:34,089
tests and it prints<font color="#E5E5E5"> red and green stuff</font>

293
00:15:30,000 --> 00:15:37,339
<font color="#E5E5E5">and that's good it works so that's it</font>

294
00:15:34,089 --> 00:15:40,850
so actually what<font color="#E5E5E5"> this shows</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> that we</font>

295
00:15:37,339 --> 00:15:43,100
have a lot of tests but at the<font color="#E5E5E5"> very end</font>

296
00:15:40,850 --> 00:15:45,079
in the last<font color="#E5E5E5"> two days we do not care</font>

297
00:15:43,100 --> 00:15:47,750
about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> test</font><font color="#E5E5E5"> anymore so we</font><font color="#CCCCCC"> bright</font>

298
00:15:45,079 --> 00:15:54,380
<font color="#E5E5E5">everything to go straight to</font><font color="#CCCCCC"> the point</font>

299
00:15:47,750 --> 00:15:57,019
<font color="#CCCCCC">and there's obviously</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> lot more but if</font>

300
00:15:54,380 --> 00:15:59,959
<font color="#E5E5E5">you want to see all of this we will open</font>

301
00:15:57,019 --> 00:16:03,649
this open<font color="#E5E5E5"> source the code so you can see</font>

302
00:15:59,959 --> 00:16:06,979
what we did but we<font color="#E5E5E5"> only had 30 minutes</font>

303
00:16:03,649 --> 00:16:09,670
<font color="#E5E5E5">to</font><font color="#CCCCCC"> prepare the slide so thanks for</font><font color="#E5E5E5"> your</font>

304
00:16:06,980 --> 00:16:09,670
attention

