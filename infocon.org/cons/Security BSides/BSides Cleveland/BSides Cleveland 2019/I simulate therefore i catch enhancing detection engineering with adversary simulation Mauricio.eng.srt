1
00:00:01,129 --> 00:00:09,090
cool alright everyone good morning their

2
00:00:05,700 --> 00:00:11,759
recon happy to be here this is a

3
00:00:09,090 --> 00:00:14,580
bittersweet moment I'm really excited to

4
00:00:11,759 --> 00:00:16,020
be speaking for the second time there we

5
00:00:14,580 --> 00:00:19,170
come but also really sad that it's the

6
00:00:16,020 --> 00:00:21,210
last one I have to say that definitely

7
00:00:19,170 --> 00:00:23,609
for me their recon was you know the best

8
00:00:21,210 --> 00:00:25,470
con I've met so many good people some of

9
00:00:23,609 --> 00:00:27,779
them I met for 10 minutes some of them

10
00:00:25,470 --> 00:00:30,960
are still my friends but they were all

11
00:00:27,779 --> 00:00:34,680
cool and I'm going to miss that so they

12
00:00:30,960 --> 00:00:37,020
reckon I'm gonna miss you will help okay

13
00:00:34,680 --> 00:00:39,989
we hope we'll get something similar okay

14
00:00:37,020 --> 00:00:41,550
so I'm gonna start so my name is

15
00:00:39,989 --> 00:00:45,000
Mauricio and today I'm gonna be talking

16
00:00:41,550 --> 00:00:48,449
about adversary simulation and all the

17
00:00:45,000 --> 00:00:51,260
benefits that adversary simulation has

18
00:00:48,450 --> 00:00:54,059
to provide to detection in your programs

19
00:00:51,260 --> 00:00:56,039
in fact I think I think adversary

20
00:00:54,059 --> 00:00:58,349
simulation is so important for the

21
00:00:56,039 --> 00:01:02,190
detection programs that I chose this

22
00:00:58,350 --> 00:01:03,600
title which is from the French

23
00:01:02,190 --> 00:01:05,220
mathematician and the card you know he

24
00:01:03,600 --> 00:01:07,890
said there I think therefore I am

25
00:01:05,220 --> 00:01:11,280
so I seem like therefore I catch because

26
00:01:07,890 --> 00:01:12,960
I think that without our simulation

27
00:01:11,280 --> 00:01:15,450
we're not really doing the tech in their

28
00:01:12,960 --> 00:01:18,059
way and hopefully I'll be able to

29
00:01:15,450 --> 00:01:20,310
support this throughout this talk and

30
00:01:18,060 --> 00:01:23,520
you'll you'll think this way too so

31
00:01:20,310 --> 00:01:24,900
today I have three main areas of the

32
00:01:23,520 --> 00:01:27,689
talk one we're going to do like a quick

33
00:01:24,900 --> 00:01:29,220
introduction of just what simulation

34
00:01:27,689 --> 00:01:30,779
what's the detection engineering and

35
00:01:29,220 --> 00:01:34,048
what are the challenges with addition

36
00:01:30,780 --> 00:01:36,600
engineering how simulation can help

37
00:01:34,049 --> 00:01:39,420
those challenges then we're gonna go

38
00:01:36,600 --> 00:01:41,009
over some recommendations from my

39
00:01:39,420 --> 00:01:42,990
perspective to you guys if you're

40
00:01:41,009 --> 00:01:45,390
thinking of integrating adversary

41
00:01:42,990 --> 00:01:47,158
simulation to your programs I'll give

42
00:01:45,390 --> 00:01:49,200
you some tips some things that we do

43
00:01:47,159 --> 00:01:53,520
that may you be able to replicate and

44
00:01:49,200 --> 00:01:55,649
finally I'm going to be releasing a tool

45
00:01:53,520 --> 00:01:57,869
today for that we've been using

46
00:01:55,649 --> 00:02:00,630
internally to build test and enhance

47
00:01:57,869 --> 00:02:03,540
detection so hopefully you'll be able to

48
00:02:00,630 --> 00:02:06,990
use it and help you on your detection

49
00:02:03,540 --> 00:02:07,710
programs okay so just a little bit of me

50
00:02:06,990 --> 00:02:10,769
real quick

51
00:02:07,710 --> 00:02:13,079
I'm originally from arequipa peru that's

52
00:02:10,770 --> 00:02:13,280
a picture of my home city we have a big

53
00:02:13,080 --> 00:02:15,560
wall

54
00:02:13,280 --> 00:02:18,020
I know I call el misti and you can see

55
00:02:15,560 --> 00:02:21,170
the misti volcano from pretty much

56
00:02:18,020 --> 00:02:22,250
everywhere in the city I currently live

57
00:02:21,170 --> 00:02:24,260
in New York and lead the third

58
00:02:22,250 --> 00:02:25,730
management team at a financial services

59
00:02:24,260 --> 00:02:27,470
in New York that's my Twitter account

60
00:02:25,730 --> 00:02:28,010
and I always thought to connect and meet

61
00:02:27,470 --> 00:02:31,250
new people

62
00:02:28,010 --> 00:02:34,250
so come say hi if you see me that's my

63
00:02:31,250 --> 00:02:36,680
github where the tool will be uploaded

64
00:02:34,250 --> 00:02:39,230
so lifts my first dare we can't talk I

65
00:02:36,680 --> 00:02:41,510
started the talk with a fun fact about

66
00:02:39,230 --> 00:02:42,709
Peru so I kinda want to use this to

67
00:02:41,510 --> 00:02:44,899
break the ice again

68
00:02:42,709 --> 00:02:47,450
so are you I'm gonna drop a fun fact

69
00:02:44,900 --> 00:02:50,570
about right so who here likes or like

70
00:02:47,450 --> 00:02:52,280
punk rock at some point yeah so me as a

71
00:02:50,570 --> 00:02:54,380
teenager I really like punk rock I got

72
00:02:52,280 --> 00:02:55,700
into it after a friend and I really

73
00:02:54,380 --> 00:02:57,920
liked the music you know the mosh pit

74
00:02:55,700 --> 00:03:01,399
the rebelling against Authority your

75
00:02:57,920 --> 00:03:03,018
parents school and but I still like the

76
00:03:01,400 --> 00:03:05,930
music a lot and when you read about punk

77
00:03:03,019 --> 00:03:07,459
rock in the its origins yo you always

78
00:03:05,930 --> 00:03:11,120
come back to these two bands The Sex

79
00:03:07,459 --> 00:03:14,150
Pistols and the Ramones in 74 and 75 but

80
00:03:11,120 --> 00:03:16,069
locally in Peru going to the bands and

81
00:03:14,150 --> 00:03:17,900
local bands and the local concerts I

82
00:03:16,069 --> 00:03:20,780
always heard about this band called los

83
00:03:17,900 --> 00:03:24,350
psychos which actually was from 1964 so

84
00:03:20,780 --> 00:03:26,090
10 years before there are moans and the

85
00:03:24,350 --> 00:03:29,630
music was really something similar to

86
00:03:26,090 --> 00:03:31,430
punk rock and um and we I grew up

87
00:03:29,630 --> 00:03:33,079
thinking that you know the psychos was

88
00:03:31,430 --> 00:03:35,810
maybe one of the first punk rock bands

89
00:03:33,079 --> 00:03:38,329
and in fact a few years later there's AB

90
00:03:35,810 --> 00:03:41,769
you media outlets that started talking

91
00:03:38,329 --> 00:03:44,269
about this and AB you a few rock

92
00:03:41,769 --> 00:03:46,730
historians I guess or we're talking

93
00:03:44,269 --> 00:03:48,769
about this so so yeah that's the fun

94
00:03:46,730 --> 00:03:50,899
fact um punk rock may have started in

95
00:03:48,769 --> 00:03:54,260
Peru and if you want to know more about

96
00:03:50,900 --> 00:03:56,180
it you can check this documentary all

97
00:03:54,260 --> 00:03:59,450
right all right so we'll go ahead and

98
00:03:56,180 --> 00:04:01,130
start cool so I wanted to start this

99
00:03:59,450 --> 00:04:02,630
talk by talking about where are we as a

100
00:04:01,130 --> 00:04:05,450
blue team in 2019

101
00:04:02,630 --> 00:04:08,840
from my perspective so I first go blue

102
00:04:05,450 --> 00:04:11,298
team so the first the first thing the

103
00:04:08,840 --> 00:04:14,660
first point that I want to make is in

104
00:04:11,299 --> 00:04:16,820
2019 we understand blue teen understands

105
00:04:14,660 --> 00:04:18,320
that prevention has fallen short it's

106
00:04:16,820 --> 00:04:20,120
not gonna work there is no one single

107
00:04:18,320 --> 00:04:22,729
tool that is going to be able to stop

108
00:04:20,120 --> 00:04:26,320
all the attacks as much as machine

109
00:04:22,729 --> 00:04:27,909
learning and AI and deep learning

110
00:04:26,320 --> 00:04:30,640
there's it's not gonna work just doesn't

111
00:04:27,910 --> 00:04:33,010
work right and we understand that we

112
00:04:30,640 --> 00:04:34,330
need to be improving detection so we

113
00:04:33,010 --> 00:04:36,400
that doesn't mean that we shouldn't

114
00:04:34,330 --> 00:04:39,219
employ prevention controls they they

115
00:04:36,400 --> 00:04:42,370
have a room in the whole security

116
00:04:39,220 --> 00:04:43,840
program but once we deploy the basic

117
00:04:42,370 --> 00:04:45,310
security foundations from a prevention

118
00:04:43,840 --> 00:04:45,969
perspective we should be focused on

119
00:04:45,310 --> 00:04:47,860
detection

120
00:04:45,970 --> 00:04:49,450
the next point is we assume compromise

121
00:04:47,860 --> 00:04:52,060
so we know that attackers are going to

122
00:04:49,450 --> 00:04:54,460
get in it's not a matter of if it's when

123
00:04:52,060 --> 00:04:56,850
right

124
00:04:54,460 --> 00:05:00,099
but that you i think that that shouldnt

125
00:04:56,850 --> 00:05:01,660
demoralize us cuz getting access is

126
00:05:00,100 --> 00:05:04,000
getting an issue of food cold it's only

127
00:05:01,660 --> 00:05:05,860
the beginning right it takes some effort

128
00:05:04,000 --> 00:05:08,530
and steps to be able to achieve

129
00:05:05,860 --> 00:05:10,510
operational success and the attacker

130
00:05:08,530 --> 00:05:12,669
doesn't know your environment you we

131
00:05:10,510 --> 00:05:17,680
know our environment so we kind of kind

132
00:05:12,670 --> 00:05:20,950
of use this on our advantage to build an

133
00:05:17,680 --> 00:05:22,990
environment where we can where we can

134
00:05:20,950 --> 00:05:24,580
set traps in the environment and catch

135
00:05:22,990 --> 00:05:26,200
attackers as they're doing their

136
00:05:24,580 --> 00:05:28,870
operation

137
00:05:26,200 --> 00:05:32,560
we are log of colleagues we understand

138
00:05:28,870 --> 00:05:34,630
that attackers are gonna get in and we

139
00:05:32,560 --> 00:05:36,910
need to detect them in for to create

140
00:05:34,630 --> 00:05:39,550
detection programs we need D so we're

141
00:05:36,910 --> 00:05:41,650
bringing all these data in hose data and

142
00:05:39,550 --> 00:05:43,390
network data application data right and

143
00:05:41,650 --> 00:05:45,429
we're centralizing into an event

144
00:05:43,390 --> 00:05:46,960
pipeline going to your central location

145
00:05:45,430 --> 00:05:48,640
this could be as simple as a sim right

146
00:05:46,960 --> 00:05:51,400
or this could be more complex as a Dana

147
00:05:48,640 --> 00:05:52,810
Lake in Apache spark you name it it

148
00:05:51,400 --> 00:05:54,400
could be really complex but really

149
00:05:52,810 --> 00:05:56,020
simple but at the end of the day we have

150
00:05:54,400 --> 00:05:57,609
the same we have all these data and we

151
00:05:56,020 --> 00:06:01,450
have some kind of analytic platform so

152
00:05:57,610 --> 00:06:04,600
that we can run queries on right we can

153
00:06:01,450 --> 00:06:06,099
we now use this data to develop custom

154
00:06:04,600 --> 00:06:08,290
analytics so we're no longer just

155
00:06:06,100 --> 00:06:10,290
deploying tools in waiting for them to

156
00:06:08,290 --> 00:06:13,840
work and alert and do something right

157
00:06:10,290 --> 00:06:16,000
we're going in to our data in making

158
00:06:13,840 --> 00:06:17,739
creating these analytics based on our

159
00:06:16,000 --> 00:06:20,590
environment custom to us that will help

160
00:06:17,740 --> 00:06:24,100
us detect some patterns of attacks right

161
00:06:20,590 --> 00:06:27,039
and also in 2019 we speak adversary

162
00:06:24,100 --> 00:06:29,560
right I feel that the the minor attack

163
00:06:27,040 --> 00:06:31,390
framework is a really great tool to get

164
00:06:29,560 --> 00:06:33,370
gives us one single taxonomy that we can

165
00:06:31,390 --> 00:06:36,010
use to measure programs based on

166
00:06:33,370 --> 00:06:38,350
actually had techniques that attackers

167
00:06:36,010 --> 00:06:39,789
use in the well and that also it also

168
00:06:38,350 --> 00:06:41,380
allows us to collaborate

169
00:06:39,790 --> 00:06:47,140
between other blue teens because we're

170
00:06:41,380 --> 00:06:51,790
speaking the same taxonomy right so okay

171
00:06:47,140 --> 00:06:53,469
so I feel that also in 2019 the blue

172
00:06:51,790 --> 00:06:55,960
team is building the attackers

173
00:06:53,470 --> 00:06:58,510
playground and I borrowed this term from

174
00:06:55,960 --> 00:07:01,270
Jessica Payne who wrote a blog post and

175
00:06:58,510 --> 00:07:03,219
2017 about this and she mentioned four

176
00:07:01,270 --> 00:07:05,109
main principles and it's a great I

177
00:07:03,220 --> 00:07:07,000
currently recommend you going reading

178
00:07:05,110 --> 00:07:08,890
this however I'm not going to talk about

179
00:07:07,000 --> 00:07:11,350
that particular the way she sees it I'm

180
00:07:08,890 --> 00:07:14,469
gonna just use that the term and kind of

181
00:07:11,350 --> 00:07:16,630
explain it from my own view so as we've

182
00:07:14,470 --> 00:07:19,480
we've talked about in the last five

183
00:07:16,630 --> 00:07:22,020
minutes initial axis is only the

184
00:07:19,480 --> 00:07:24,820
beginning right and it takes effort in

185
00:07:22,020 --> 00:07:27,370
time and several steps for an attacker

186
00:07:24,820 --> 00:07:27,940
to achieve operational success and these

187
00:07:27,370 --> 00:07:30,730
steps

188
00:07:27,940 --> 00:07:32,650
this process allows us provides us

189
00:07:30,730 --> 00:07:35,020
detection opportunities and what I want

190
00:07:32,650 --> 00:07:36,580
to mention in this talk as traps the

191
00:07:35,020 --> 00:07:39,070
more traps that we deploy in our

192
00:07:36,580 --> 00:07:40,870
environment detections there it the more

193
00:07:39,070 --> 00:07:43,120
likely that for an attacker to trip one

194
00:07:40,870 --> 00:07:46,960
of them and they only need to trip one

195
00:07:43,120 --> 00:07:49,060
and we may catch him right and you

196
00:07:46,960 --> 00:07:50,650
probably all heard this phrase as I

197
00:07:49,060 --> 00:07:53,140
started my career I always heard it

198
00:07:50,650 --> 00:07:55,390
attackers only need to be right once the

199
00:07:53,140 --> 00:07:55,990
offenders only has to be right all the

200
00:07:55,390 --> 00:07:58,090
time right

201
00:07:55,990 --> 00:08:00,880
well I'm telling you we're turning the

202
00:07:58,090 --> 00:08:02,919
tables now the offenders only need to

203
00:08:00,880 --> 00:08:04,990
take once attackers just need to make

204
00:08:02,920 --> 00:08:07,150
one mistake and we'll catch him because

205
00:08:04,990 --> 00:08:09,220
remember the goal is not to prevent

206
00:08:07,150 --> 00:08:12,760
initial day initial foot hole the goal

207
00:08:09,220 --> 00:08:14,230
is to prevent operational success and we

208
00:08:12,760 --> 00:08:18,159
can catch him as they're trying to get

209
00:08:14,230 --> 00:08:20,770
to that goal that target day and I think

210
00:08:18,160 --> 00:08:23,530
that a big part of the attackers

211
00:08:20,770 --> 00:08:25,060
playground is detection engineering and

212
00:08:23,530 --> 00:08:27,729
from my perspective detection

213
00:08:25,060 --> 00:08:29,890
engineering is the the continuous

214
00:08:27,730 --> 00:08:31,690
process of deploying tuning and

215
00:08:29,890 --> 00:08:33,520
operating detection analytics with the

216
00:08:31,690 --> 00:08:34,870
goal of finding threats right so we're

217
00:08:33,520 --> 00:08:36,370
using all these data that we're

218
00:08:34,870 --> 00:08:39,760
gathering from our host Network

219
00:08:36,370 --> 00:08:41,919
application data and building new

220
00:08:39,760 --> 00:08:43,630
detection enhancing them testing them

221
00:08:41,919 --> 00:08:46,569
making sure they're operating they're

222
00:08:43,630 --> 00:08:48,580
working and this is how I see the

223
00:08:46,570 --> 00:08:51,130
attackers playground right we have a

224
00:08:48,580 --> 00:08:53,089
combination of both prevention controls

225
00:08:51,130 --> 00:08:57,019
and detection controls all over

226
00:08:53,089 --> 00:08:59,180
environment right and all these data is

227
00:08:57,019 --> 00:09:01,730
being centralized to an event pipeline

228
00:08:59,180 --> 00:09:03,649
to your same your data leak whatever it

229
00:09:01,730 --> 00:09:05,449
is that you may have as that central

230
00:09:03,649 --> 00:09:07,370
location and we have a few important

231
00:09:05,449 --> 00:09:09,889
steps like ingestion transformation

232
00:09:07,370 --> 00:09:11,569
where we're standards standardizing that

233
00:09:09,889 --> 00:09:13,160
data to make sure that we can create the

234
00:09:11,569 --> 00:09:15,469
right way across multiple data sources

235
00:09:13,160 --> 00:09:17,660
we're indexing and then we have some

236
00:09:15,470 --> 00:09:20,059
kind of analytic platform that allows us

237
00:09:17,660 --> 00:09:21,949
to run queries on these data and create

238
00:09:20,059 --> 00:09:23,719
detections right this is important

239
00:09:21,949 --> 00:09:25,550
without this we have no detection

240
00:09:23,720 --> 00:09:29,389
progress right so this is kind of like a

241
00:09:25,550 --> 00:09:31,998
prerequisite and the way I see it as we

242
00:09:29,389 --> 00:09:34,850
built our the attacker playground as we

243
00:09:31,999 --> 00:09:36,649
build on our detection even programs we

244
00:09:34,850 --> 00:09:38,600
look something like this we're resetting

245
00:09:36,649 --> 00:09:41,389
all these traps in the environment and

246
00:09:38,600 --> 00:09:43,519
as you can see right here on the lower

247
00:09:41,389 --> 00:09:46,220
left you know an attacker making an

248
00:09:43,519 --> 00:09:48,170
issue of food ho chore but they need to

249
00:09:46,220 --> 00:09:51,170
get operation success and grab data from

250
00:09:48,170 --> 00:09:52,610
the data center maybe and as he's doing

251
00:09:51,170 --> 00:09:55,459
his opera the attacker is doing the

252
00:09:52,610 --> 00:09:57,709
operation he may set a trip one of our

253
00:09:55,459 --> 00:10:01,819
traps and it only takes one and you have

254
00:09:57,709 --> 00:10:04,939
a proper process we may catch him before

255
00:10:01,819 --> 00:10:08,449
they achieve success right however I

256
00:10:04,939 --> 00:10:09,469
think that detection you knew and the

257
00:10:08,449 --> 00:10:10,998
attacker sprayground

258
00:10:09,470 --> 00:10:13,429
have a lot of challenges and I want to

259
00:10:10,999 --> 00:10:16,069
talk about four challenges the first

260
00:10:13,429 --> 00:10:17,749
challenge um is you know you have a

261
00:10:16,069 --> 00:10:20,479
bunch of prevention controls which makes

262
00:10:17,749 --> 00:10:22,759
sense to have and we should have but how

263
00:10:20,480 --> 00:10:24,470
do you know if they're working when was

264
00:10:22,759 --> 00:10:28,309
the last time you check that your

265
00:10:24,470 --> 00:10:30,110
firewall is blocking 22 outbound or when

266
00:10:28,309 --> 00:10:32,389
was the last time you check your proxy

267
00:10:30,110 --> 00:10:34,519
is actually blocking certain categories

268
00:10:32,389 --> 00:10:37,809
right or it is your anti-malware

269
00:10:34,519 --> 00:10:40,670
solution blocking the right things right

270
00:10:37,809 --> 00:10:43,550
second challenge is we have all these

271
00:10:40,670 --> 00:10:45,589
data awesome how do we build detection

272
00:10:43,550 --> 00:10:48,290
if we don't have proper attack telemetry

273
00:10:45,589 --> 00:10:53,059
right how do we know what's a bad known

274
00:10:48,290 --> 00:10:57,259
bad what's a bad pattern number two a

275
00:10:53,059 --> 00:11:00,379
three a challenge is going to be

276
00:10:57,259 --> 00:11:02,509
detection resilience how do we know that

277
00:11:00,379 --> 00:11:05,720
without one detection that you have for

278
00:11:02,509 --> 00:11:06,860
that one attack technique it's really

279
00:11:05,720 --> 00:11:09,050
resilient is going

280
00:11:06,860 --> 00:11:11,390
to detect all the variations of that

281
00:11:09,050 --> 00:11:14,150
same attack you may have a full sense of

282
00:11:11,390 --> 00:11:19,040
coverage if you think yes I have a

283
00:11:14,150 --> 00:11:20,090
detection for a credential dumping but

284
00:11:19,040 --> 00:11:22,160
what if the attacker uses a different

285
00:11:20,090 --> 00:11:27,470
technique instead of greeting else's

286
00:11:22,160 --> 00:11:29,180
right and the last one is how do we know

287
00:11:27,470 --> 00:11:32,720
there's always changes on our

288
00:11:29,180 --> 00:11:36,050
environment right vowel changes reboot

289
00:11:32,720 --> 00:11:38,180
windows patching how do we know if one

290
00:11:36,050 --> 00:11:40,910
of those changes didn't break our event

291
00:11:38,180 --> 00:11:45,829
pipeline in some way right what if your

292
00:11:40,910 --> 00:11:47,959
branch office in Singapore has somehow

293
00:11:45,830 --> 00:11:50,870
getting a bad firewall rule and he's no

294
00:11:47,960 --> 00:11:52,640
longer sending events to your sim all

295
00:11:50,870 --> 00:11:54,350
these challenges I feel can be

296
00:11:52,640 --> 00:11:57,590
approached with adversarial simulation

297
00:11:54,350 --> 00:12:00,500
right just simulating attack techniques

298
00:11:57,590 --> 00:12:02,060
to make sure that oh that the event

299
00:12:00,500 --> 00:12:05,420
pipeline is working that your texturing

300
00:12:02,060 --> 00:12:07,459
is resilient and that your process is

301
00:12:05,420 --> 00:12:10,010
being followed so your stock is properly

302
00:12:07,460 --> 00:12:11,600
following the process so I think I'm

303
00:12:10,010 --> 00:12:14,000
gonna focus on three goals confirm

304
00:12:11,600 --> 00:12:15,920
prevention controls are working generate

305
00:12:14,000 --> 00:12:18,070
the attack behavior telemetry to build

306
00:12:15,920 --> 00:12:21,140
tests and enhance custom detection and

307
00:12:18,070 --> 00:12:23,330
finally identify gaps in visibility

308
00:12:21,140 --> 00:12:25,069
right those are all the ways that I feel

309
00:12:23,330 --> 00:12:27,260
adversary simulation can help you in

310
00:12:25,070 --> 00:12:30,400
building your attackers playground and

311
00:12:27,260 --> 00:12:33,020
in deploying detection imaging programs

312
00:12:30,400 --> 00:12:35,090
but how sure Mauricio this makes sense

313
00:12:33,020 --> 00:12:38,319
how do we do this so I want to give you

314
00:12:35,090 --> 00:12:40,850
some tips of a few things that we do and

315
00:12:38,320 --> 00:12:42,740
hopefully they they make sense to you

316
00:12:40,850 --> 00:12:44,990
and you can implement I think that the

317
00:12:42,740 --> 00:12:47,390
the very first thing that you want to do

318
00:12:44,990 --> 00:12:48,980
is make sure that your prevention

319
00:12:47,390 --> 00:12:50,689
controls are working I'm not gonna focus

320
00:12:48,980 --> 00:12:52,550
too much on this because this talk is

321
00:12:50,690 --> 00:12:54,620
about detection but what I would

322
00:12:52,550 --> 00:12:57,020
recommend doing is just go to your you

323
00:12:54,620 --> 00:12:58,820
know go to a pipe or whiteboard and you

324
00:12:57,020 --> 00:13:00,230
start numerating all your prevention

325
00:12:58,820 --> 00:13:02,510
controls at the host level at the

326
00:13:00,230 --> 00:13:04,250
network level and prioritize them what's

327
00:13:02,510 --> 00:13:07,160
most important for you and then come up

328
00:13:04,250 --> 00:13:08,240
with simple ways of testing this you

329
00:13:07,160 --> 00:13:10,780
know it doesn't have to be too

330
00:13:08,240 --> 00:13:13,220
complicated it can be manual initially

331
00:13:10,780 --> 00:13:15,020
you know IPS just you can do a double

332
00:13:13,220 --> 00:13:17,960
you get to a particular URL with a

333
00:13:15,020 --> 00:13:20,000
particular path that has to kind of

334
00:13:17,960 --> 00:13:20,540
trigger a rule and hopefully block it

335
00:13:20,000 --> 00:13:22,940
right

336
00:13:20,540 --> 00:13:25,240
or maybe protection you can run in BO

337
00:13:22,940 --> 00:13:27,440
community cats from a high privilege

338
00:13:25,240 --> 00:13:30,770
powershell shell and it's gonna work

339
00:13:27,440 --> 00:13:33,550
right so yeah 10 super 18 controls make

340
00:13:30,770 --> 00:13:36,110
sure they're working but if we move to

341
00:13:33,550 --> 00:13:39,439
detection this is kind of the process

342
00:13:36,110 --> 00:13:41,180
that we use to building detections so

343
00:13:39,440 --> 00:13:44,630
first you identify the technique of

344
00:13:41,180 --> 00:13:46,040
interest so this could come from you

345
00:13:44,630 --> 00:13:47,570
know the amide attack framework this

346
00:13:46,040 --> 00:13:49,790
could come from a thread report that

347
00:13:47,570 --> 00:13:51,830
main TN releases from a particular

348
00:13:49,790 --> 00:13:53,390
tractor that you're interested or this

349
00:13:51,830 --> 00:13:55,700
could come from a tweet from Matt graver

350
00:13:53,390 --> 00:13:59,930
and something that he is you know

351
00:13:55,700 --> 00:14:01,490
playing with in the weekend used and of

352
00:13:59,930 --> 00:14:02,989
course this this technique has to be of

353
00:14:01,490 --> 00:14:06,140
interest to you right there it has to be

354
00:14:02,990 --> 00:14:07,670
some kind of importance to you the next

355
00:14:06,140 --> 00:14:10,939
one is you this time the simulation is

356
00:14:07,670 --> 00:14:12,800
scenario so in this air in this phase

357
00:14:10,940 --> 00:14:14,990
what you're gonna do is just learn more

358
00:14:12,800 --> 00:14:16,729
about this technique really understand

359
00:14:14,990 --> 00:14:20,000
it understand these scenarios and how it

360
00:14:16,730 --> 00:14:22,040
can be implemented and then figure out

361
00:14:20,000 --> 00:14:23,540
what - are you gonna use to simulate it

362
00:14:22,040 --> 00:14:25,099
can you use an open-source tool you have

363
00:14:23,540 --> 00:14:27,620
- can you do you need to write your own

364
00:14:25,100 --> 00:14:30,440
is it even possible to simulate this

365
00:14:27,620 --> 00:14:33,290
right then once you figure that out

366
00:14:30,440 --> 00:14:36,290
you're gonna execute that simulation you

367
00:14:33,290 --> 00:14:38,209
access coverage see if you have that the

368
00:14:36,290 --> 00:14:40,430
most important question to ask is do I

369
00:14:38,210 --> 00:14:42,170
have centralized telemetry for this type

370
00:14:40,430 --> 00:14:44,420
of simulation right because if you don't

371
00:14:42,170 --> 00:14:46,459
you have to go back and correct that

372
00:14:44,420 --> 00:14:48,050
disability this could mean a GPO change

373
00:14:46,460 --> 00:14:50,390
because you're not logging a particular

374
00:14:48,050 --> 00:14:52,099
event ID or this could be a new span

375
00:14:50,390 --> 00:14:53,990
session from your firewall because

376
00:14:52,100 --> 00:14:57,530
you're not sniffing that part of the

377
00:14:53,990 --> 00:15:00,650
network right so you go back you figure

378
00:14:57,530 --> 00:15:03,260
out how to incorrect that visibility gap

379
00:15:00,650 --> 00:15:05,060
you execute the simulation again assess

380
00:15:03,260 --> 00:15:07,250
coverage now you have the data in and

381
00:15:05,060 --> 00:15:08,239
you ask yourself do we have a detection

382
00:15:07,250 --> 00:15:09,620
for it

383
00:15:08,240 --> 00:15:10,940
the first time probably you probably

384
00:15:09,620 --> 00:15:11,930
won't have a detection for it but at

385
00:15:10,940 --> 00:15:14,840
this point we're good because we have

386
00:15:11,930 --> 00:15:17,359
that data so we can compare that known

387
00:15:14,840 --> 00:15:19,370
bad pattern with the known good so you

388
00:15:17,360 --> 00:15:21,830
can hopefully I built a detection

389
00:15:19,370 --> 00:15:24,920
analytic and create a detection for this

390
00:15:21,830 --> 00:15:26,210
you go back simulate and then you are

391
00:15:24,920 --> 00:15:29,900
you now you have a detection trigger

392
00:15:26,210 --> 00:15:31,670
which is good however I don't think you

393
00:15:29,900 --> 00:15:32,900
should stop there you should assume okay

394
00:15:31,670 --> 00:15:34,160
I have a detection for this technique

395
00:15:32,900 --> 00:15:37,879
I'm done let's move

396
00:15:34,160 --> 00:15:40,759
the next technique I think that we need

397
00:15:37,879 --> 00:15:42,230
to validate detection resilience this is

398
00:15:40,759 --> 00:15:44,449
really important I think that the same

399
00:15:42,230 --> 00:15:47,600
technique we need to be able to simulate

400
00:15:44,449 --> 00:15:49,250
in different ways because that technique

401
00:15:47,600 --> 00:15:50,839
can be implemented in different ways by

402
00:15:49,250 --> 00:15:52,699
attackers and then that may look

403
00:15:50,839 --> 00:15:55,910
different on the logs and you may have a

404
00:15:52,699 --> 00:15:57,709
false sense of courage let me give you a

405
00:15:55,910 --> 00:16:00,860
simple example password spraying attack

406
00:15:57,709 --> 00:16:02,719
right let's say your purple team your

407
00:16:00,860 --> 00:16:05,990
red team runs this tool against you this

408
00:16:02,720 --> 00:16:08,410
password spray attack by def hack and

409
00:16:05,990 --> 00:16:11,930
you're running it from a Windows domain

410
00:16:08,410 --> 00:16:13,129
domain joint hose from PowerShell when

411
00:16:11,930 --> 00:16:16,579
you do this this is actually using

412
00:16:13,129 --> 00:16:19,250
Kerberos and trying one one password per

413
00:16:16,579 --> 00:16:20,930
user right and you make it's easy to

414
00:16:19,250 --> 00:16:23,060
create detection based on that based on

415
00:16:20,930 --> 00:16:24,649
the 4770 one event ID which we're going

416
00:16:23,060 --> 00:16:27,378
to take a look at in a little bit

417
00:16:24,649 --> 00:16:30,889
so you may think okay I'm done pastor

418
00:16:27,379 --> 00:16:32,509
spraying I got this but what if what if

419
00:16:30,889 --> 00:16:34,850
we do something like this where you're

420
00:16:32,509 --> 00:16:36,889
no longer using a Windows domain joint

421
00:16:34,850 --> 00:16:38,689
hose you're using like a row device in

422
00:16:36,889 --> 00:16:40,939
the environment that has got some kind

423
00:16:38,689 --> 00:16:42,529
of physical access your know using ntlm

424
00:16:40,939 --> 00:16:44,329
so you're not using Kerberos anymore

425
00:16:42,529 --> 00:16:45,949
you're using ntlm and you're no longer

426
00:16:44,329 --> 00:16:48,410
targeting the domain controller you're

427
00:16:45,949 --> 00:16:50,599
targeting like a server so this looks

428
00:16:48,410 --> 00:16:53,120
completely different on the logs right

429
00:16:50,600 --> 00:16:54,589
and that the first detection that you

430
00:16:53,120 --> 00:16:56,839
had for the first one is not gonna work

431
00:16:54,589 --> 00:16:58,519
so that's why I think we need to be

432
00:16:56,839 --> 00:17:01,939
simulating different variations of the

433
00:16:58,519 --> 00:17:03,529
same technique another important thing

434
00:17:01,939 --> 00:17:06,109
that we use simulation is to measure the

435
00:17:03,529 --> 00:17:08,750
texture maturity so we came up with the

436
00:17:06,109 --> 00:17:10,879
maturity matrix if you want to call it

437
00:17:08,750 --> 00:17:13,510
this for each simulation each of the

438
00:17:10,880 --> 00:17:16,100
tension so as we build our detection

439
00:17:13,510 --> 00:17:17,419
maturity level 0 is the simulation does

440
00:17:16,099 --> 00:17:19,158
not generate event so this is where we

441
00:17:17,419 --> 00:17:20,659
have no data where we cannot detect this

442
00:17:19,159 --> 00:17:23,360
technique so we need to go back and

443
00:17:20,659 --> 00:17:25,909
enable logs enable Network sniffing or

444
00:17:23,359 --> 00:17:27,289
maybe by a tool though because you don't

445
00:17:25,909 --> 00:17:28,130
have visibility right it could be

446
00:17:27,289 --> 00:17:29,990
anything

447
00:17:28,130 --> 00:17:32,630
maturity level 1 is when the simulation

448
00:17:29,990 --> 00:17:36,710
generates events but they're local so we

449
00:17:32,630 --> 00:17:38,090
cannot use them in a in a we can I use

450
00:17:36,710 --> 00:17:39,890
create detection for this because they

451
00:17:38,090 --> 00:17:41,209
look on that host so we can not use them

452
00:17:39,890 --> 00:17:44,059
for a detection program they need to be

453
00:17:41,210 --> 00:17:45,649
centralized naturally level 2 simulation

454
00:17:44,059 --> 00:17:47,360
generates events and they they are

455
00:17:45,649 --> 00:17:47,899
central in a central location but

456
00:17:47,360 --> 00:17:50,090
there's no

457
00:17:47,900 --> 00:17:52,490
for it so this is where we need to go

458
00:17:50,090 --> 00:17:54,820
and build that detection and finally

459
00:17:52,490 --> 00:17:57,410
simulation triggers a detection which

460
00:17:54,820 --> 00:17:59,600
get you in a better spot amateur level

461
00:17:57,410 --> 00:18:01,100
three and maturity level for the

462
00:17:59,600 --> 00:18:02,689
simulation triggers the detection pair

463
00:18:01,100 --> 00:18:04,399
also triggers the proper response

464
00:18:02,690 --> 00:18:07,550
process I think this is important

465
00:18:04,400 --> 00:18:09,380
simulation doesn't only help us test if

466
00:18:07,550 --> 00:18:11,090
the detection is working and it's

467
00:18:09,380 --> 00:18:13,130
resilient it can also help you test if

468
00:18:11,090 --> 00:18:15,470
the whole process is working you know is

469
00:18:13,130 --> 00:18:18,050
your sock elevating the right level of

470
00:18:15,470 --> 00:18:19,280
alert critical alerts to the right place

471
00:18:18,050 --> 00:18:20,450
right are they doing what they're

472
00:18:19,280 --> 00:18:21,740
supposed to do they follow the play

473
00:18:20,450 --> 00:18:24,110
works and you can do this with

474
00:18:21,740 --> 00:18:27,050
simulation and I couldn't get this

475
00:18:24,110 --> 00:18:29,780
further for this morning but imagine a

476
00:18:27,050 --> 00:18:31,909
nice graph where you have detections in

477
00:18:29,780 --> 00:18:33,020
maturity across time this could be

478
00:18:31,910 --> 00:18:35,030
something cool that you can show to your

479
00:18:33,020 --> 00:18:37,639
management right as and one thing that

480
00:18:35,030 --> 00:18:40,550
we do is we have weekly validation tests

481
00:18:37,640 --> 00:18:42,590
and we have our junior analyst go

482
00:18:40,550 --> 00:18:43,879
through this validation test and go

483
00:18:42,590 --> 00:18:46,970
through each one of the detection that

484
00:18:43,880 --> 00:18:50,570
we have mapping to attack or sometimes

485
00:18:46,970 --> 00:18:52,790
not we do this weekly and we put that

486
00:18:50,570 --> 00:18:55,100
maturity level on that for that week

487
00:18:52,790 --> 00:18:57,050
right and as we go through time as your

488
00:18:55,100 --> 00:18:59,540
detection in year engineering team is

489
00:18:57,050 --> 00:19:01,550
fixing these miscibility gaps is fixing

490
00:18:59,540 --> 00:19:05,360
these detection resiliency issues you're

491
00:19:01,550 --> 00:19:07,970
gonna get better and better right yeah

492
00:19:05,360 --> 00:19:10,100
and the next step you wanted to take it

493
00:19:07,970 --> 00:19:11,780
to the next level is definitely start

494
00:19:10,100 --> 00:19:14,570
using automated research simulation

495
00:19:11,780 --> 00:19:17,930
frameworks and tools like Todd McCready

496
00:19:14,570 --> 00:19:20,120
mater caldera I wanted to go deep go

497
00:19:17,930 --> 00:19:22,670
into this a little bit and then I was as

498
00:19:20,120 --> 00:19:23,929
I was searching online I found this

499
00:19:22,670 --> 00:19:26,330
really cool talk which actually takes

500
00:19:23,930 --> 00:19:27,830
these three and just analyzes them from

501
00:19:26,330 --> 00:19:29,480
different perspectives so I'm gonna

502
00:19:27,830 --> 00:19:31,699
point you to that to kind of learn more

503
00:19:29,480 --> 00:19:34,340
the atomic rate or minor caldera and

504
00:19:31,700 --> 00:19:37,340
this is a really cool talk from this

505
00:19:34,340 --> 00:19:39,199
year so now I want to talk about my tool

506
00:19:37,340 --> 00:19:40,909
and what we've been doing whatever this

507
00:19:39,200 --> 00:19:42,890
is what we've been using internally to

508
00:19:40,910 --> 00:19:44,450
test to build test and enhance our

509
00:19:42,890 --> 00:19:48,230
detection and hopefully it's gonna help

510
00:19:44,450 --> 00:19:51,080
you do the same okay so this is kind of

511
00:19:48,230 --> 00:19:55,030
like this the next version of a previous

512
00:19:51,080 --> 00:19:57,560
tool that I wrote for besides Baltimore

513
00:19:55,030 --> 00:20:00,530
called purple spray which is focusing on

514
00:19:57,560 --> 00:20:01,760
on password spraying but now I moved

515
00:20:00,530 --> 00:20:03,410
from Python to see sha

516
00:20:01,760 --> 00:20:05,930
to kind of be more native so these are

517
00:20:03,410 --> 00:20:07,820
the requirements that I had as I was

518
00:20:05,930 --> 00:20:10,790
building these too so I want to simulate

519
00:20:07,820 --> 00:20:13,580
TTP's right but I don't want to focus on

520
00:20:10,790 --> 00:20:16,040
atomic things like running MSHDA or

521
00:20:13,580 --> 00:20:18,500
running reyga's VR 32 that exe right I

522
00:20:16,040 --> 00:20:20,240
want to focus on behavior right

523
00:20:18,500 --> 00:20:24,350
so that was one requirement that I had

524
00:20:20,240 --> 00:20:26,810
behavior simulations I want to implement

525
00:20:24,350 --> 00:20:29,500
the same technique in different ways as

526
00:20:26,810 --> 00:20:31,669
many as I can so I can make sure that my

527
00:20:29,500 --> 00:20:35,270
detection is resilient to all these

528
00:20:31,670 --> 00:20:37,370
variations of the same technique I want

529
00:20:35,270 --> 00:20:38,990
to target grunt random hosts on the

530
00:20:37,370 --> 00:20:40,159
network this is really important right

531
00:20:38,990 --> 00:20:43,100
because this is going to help me

532
00:20:40,160 --> 00:20:45,020
identify disability gaps if I run a

533
00:20:43,100 --> 00:20:47,689
lateral movement technique against the

534
00:20:45,020 --> 00:20:51,050
same server every week are you really

535
00:20:47,690 --> 00:20:53,810
testing your coverage right what if that

536
00:20:51,050 --> 00:20:56,450
small branch office in you know Europe

537
00:20:53,810 --> 00:20:58,129
that you have somehow is not properly

538
00:20:56,450 --> 00:21:00,680
sending your events the only way of

539
00:20:58,130 --> 00:21:04,130
knowing that is simulating attacks

540
00:21:00,680 --> 00:21:06,440
against random hosts and making sure

541
00:21:04,130 --> 00:21:08,090
that the events are coming in from any

542
00:21:06,440 --> 00:21:09,380
host in the environment right so this is

543
00:21:08,090 --> 00:21:13,280
really important so that's why my tool

544
00:21:09,380 --> 00:21:15,020
needs to pick random hosts always it's

545
00:21:13,280 --> 00:21:16,520
not weaponized for now so you know for

546
00:21:15,020 --> 00:21:18,650
example even though I create a remote

547
00:21:16,520 --> 00:21:20,840
service I don't started or executed I

548
00:21:18,650 --> 00:21:22,430
just created and delete it right but

549
00:21:20,840 --> 00:21:25,879
eventually we could we could just we can

550
00:21:22,430 --> 00:21:28,520
make it more to the red team we're

551
00:21:25,880 --> 00:21:30,320
possible use 30 windows API calls

552
00:21:28,520 --> 00:21:31,520
because this is kind of a selfish

553
00:21:30,320 --> 00:21:34,820
requirement I just wanted to learn more

554
00:21:31,520 --> 00:21:36,920
about using windows API calls from

555
00:21:34,820 --> 00:21:39,350
c-sharp using platform location services

556
00:21:36,920 --> 00:21:41,510
so just see I wanted to see what

557
00:21:39,350 --> 00:21:44,540
simulations I could do with Windows 32

558
00:21:41,510 --> 00:21:46,640
api's and then I wanted to have one

559
00:21:44,540 --> 00:21:48,500
single binary you know no extra

560
00:21:46,640 --> 00:21:50,570
infrastructure so there's not gonna be a

561
00:21:48,500 --> 00:21:52,190
C - it's just one single binary I can

562
00:21:50,570 --> 00:21:54,200
drop and just double click on it's gonna

563
00:21:52,190 --> 00:21:57,170
execute a random technique right doesn't

564
00:21:54,200 --> 00:21:58,940
need extra anything else it doesn't even

565
00:21:57,170 --> 00:22:00,500
need to have parameters as user name and

566
00:21:58,940 --> 00:22:02,450
password because if you run it in the

567
00:22:00,500 --> 00:22:05,240
context of a user it's gonna grab that

568
00:22:02,450 --> 00:22:06,950
user context and do the LDAP queries so

569
00:22:05,240 --> 00:22:10,250
I don't need to pass passwords or put

570
00:22:06,950 --> 00:22:13,280
password swing okay so this is and I

571
00:22:10,250 --> 00:22:15,380
call this purple sharp so this is a beta

572
00:22:13,280 --> 00:22:17,120
so right now these two

573
00:22:15,380 --> 00:22:18,680
execute our visionary behavior with the

574
00:22:17,120 --> 00:22:21,139
purpose of generating known battling

575
00:22:18,680 --> 00:22:23,360
right to help you build test and enhance

576
00:22:21,140 --> 00:22:25,310
your detection and I'm mapping my my

577
00:22:23,360 --> 00:22:30,350
simulations to the attack attack mitotic

578
00:22:25,310 --> 00:22:33,230
framework um I think I think I support

579
00:22:30,350 --> 00:22:35,540
like nine or ten simulations now so

580
00:22:33,230 --> 00:22:38,810
basically even in my code I use the

581
00:22:35,540 --> 00:22:40,700
attack tactics it since she's sharp that

582
00:22:38,810 --> 00:22:43,190
need four point five and the code is

583
00:22:40,700 --> 00:22:45,670
actually right now so you can play with

584
00:22:43,190 --> 00:22:49,210
it so let me walk you through some demos

585
00:22:45,670 --> 00:22:53,420
now when I did my first ever econ talk

586
00:22:49,210 --> 00:22:54,830
my friend Jason lang helped me on the

587
00:22:53,420 --> 00:22:57,080
talk and he told me hey you need to tell

588
00:22:54,830 --> 00:22:59,600
a story so I want I want to tell a story

589
00:22:57,080 --> 00:23:01,490
about a purple sharp so in every story

590
00:22:59,600 --> 00:23:03,379
has a character so I needed a character

591
00:23:01,490 --> 00:23:05,180
so I was going online just let's see

592
00:23:03,380 --> 00:23:09,440
what kind of character what I can get

593
00:23:05,180 --> 00:23:14,090
and I found this book Bob and this cyber

594
00:23:09,440 --> 00:23:15,100
lamb so yeah I'm gonna use this Tiger

595
00:23:14,090 --> 00:23:19,250
level as my character

596
00:23:15,100 --> 00:23:21,409
okay so here's this story this Tiger

597
00:23:19,250 --> 00:23:23,060
llama just got a job starting the

598
00:23:21,410 --> 00:23:25,730
detection in your program attacked me

599
00:23:23,060 --> 00:23:27,500
okay Acme has spent a put the past

600
00:23:25,730 --> 00:23:29,840
twelve years building the attackers

601
00:23:27,500 --> 00:23:31,820
playground so the llama doesn't have to

602
00:23:29,840 --> 00:23:33,470
come in and make sure that events are

603
00:23:31,820 --> 00:23:35,450
coming in the event pipeline the

604
00:23:33,470 --> 00:23:37,640
analytics platform that's all done so

605
00:23:35,450 --> 00:23:39,980
the cyber llama all all you has to do is

606
00:23:37,640 --> 00:23:42,020
just create detections and the several

607
00:23:39,980 --> 00:23:43,670
atmosphere about adversary simulation in

608
00:23:42,020 --> 00:23:46,070
purple sharp so let's see how the llama

609
00:23:43,670 --> 00:23:49,640
is gonna use purple sharp to create

610
00:23:46,070 --> 00:23:51,110
detection all right so the first thing

611
00:23:49,640 --> 00:23:52,520
that the cyber llama is gonna do is

612
00:23:51,110 --> 00:23:54,469
gonna go back take a look at the

613
00:23:52,520 --> 00:23:56,180
painters report from 2018 and just see

614
00:23:54,470 --> 00:23:59,060
what what techniques were implemented by

615
00:23:56,180 --> 00:24:01,160
attackers so and this is not all the the

616
00:23:59,060 --> 00:24:02,570
pen testers did last year but you know

617
00:24:01,160 --> 00:24:03,650
this is some of the techniques that the

618
00:24:02,570 --> 00:24:05,689
December eleventh wants to create

619
00:24:03,650 --> 00:24:07,760
addictions for so let's go over that

620
00:24:05,690 --> 00:24:11,180
so attackers got in through a fish they

621
00:24:07,760 --> 00:24:12,650
did somehow sprain that I got them some

622
00:24:11,180 --> 00:24:14,060
accounts but nothing privileged so they

623
00:24:12,650 --> 00:24:15,830
moved on to the next technique they did

624
00:24:14,060 --> 00:24:17,629
a network share enumeration just looking

625
00:24:15,830 --> 00:24:19,970
for open shares now got them something

626
00:24:17,630 --> 00:24:22,220
interesting they found a web for a web a

627
00:24:19,970 --> 00:24:24,050
folder with a web that config file in it

628
00:24:22,220 --> 00:24:26,090
with some credits so then they use these

629
00:24:24,050 --> 00:24:28,790
credits to execute the approve each

630
00:24:26,090 --> 00:24:30,889
enumeration technique which is just

631
00:24:28,790 --> 00:24:32,240
that account across the domain and

632
00:24:30,890 --> 00:24:34,460
seeing where there are towns that look

633
00:24:32,240 --> 00:24:36,020
Latin right but that didn't get them

634
00:24:34,460 --> 00:24:38,900
anywhere so they went went ahead and did

635
00:24:36,020 --> 00:24:40,639
a Kerberos in attack and then that got

636
00:24:38,900 --> 00:24:42,050
them an account they did a spray again

637
00:24:40,640 --> 00:24:44,000
preached enumeration they found that

638
00:24:42,050 --> 00:24:46,790
that account was a la admin a few hosts

639
00:24:44,000 --> 00:24:48,980
they move laterally using winner and WMI

640
00:24:46,790 --> 00:24:52,490
and they got access to the target data

641
00:24:48,980 --> 00:24:54,260
right so okay let's simulate this with

642
00:24:52,490 --> 00:24:57,050
the purple sharp so how can purple share

643
00:24:54,260 --> 00:24:58,610
help us do this okay so purple sharp

644
00:24:57,050 --> 00:25:01,490
supports in simulating parts were

645
00:24:58,610 --> 00:25:03,560
spraying attacks okay and the way I see

646
00:25:01,490 --> 00:25:05,150
it is I broken up are spraying the two

647
00:25:03,560 --> 00:25:07,340
into two categories the first one is

648
00:25:05,150 --> 00:25:09,440
what I call local domain spray so this

649
00:25:07,340 --> 00:25:11,389
is when the the attacker is just

650
00:25:09,440 --> 00:25:12,890
validating credentials on that hook on

651
00:25:11,390 --> 00:25:14,450
that host and just talking to domain

652
00:25:12,890 --> 00:25:16,790
controller right he's not talking to

653
00:25:14,450 --> 00:25:19,210
other hosts in that Network right so for

654
00:25:16,790 --> 00:25:22,790
this I use this windows API logon user

655
00:25:19,210 --> 00:25:26,240
now the cool the two cool parameters

656
00:25:22,790 --> 00:25:28,310
that I I want to use is logon type and

657
00:25:26,240 --> 00:25:30,020
logon provider so the local provider

658
00:25:28,310 --> 00:25:31,610
actually allows you to pick if you want

659
00:25:30,020 --> 00:25:33,889
to use Kerberos or ntlm which is pretty

660
00:25:31,610 --> 00:25:35,600
cool because I can you know iterate and

661
00:25:33,890 --> 00:25:37,460
run different simulations using Kerberos

662
00:25:35,600 --> 00:25:39,679
or ntlm just to see how the looks look

663
00:25:37,460 --> 00:25:42,410
like in right if they look different at

664
00:25:39,680 --> 00:25:44,000
all the second one is logon type I'm not

665
00:25:42,410 --> 00:25:45,290
using it right now but I think it's

666
00:25:44,000 --> 00:25:47,240
pretty interesting because this logon

667
00:25:45,290 --> 00:25:51,590
type parameter actually maps to the

668
00:25:47,240 --> 00:25:53,030
Loven type of the 450 46:24 event ID so

669
00:25:51,590 --> 00:25:54,889
you can actually and this is interesting

670
00:25:53,030 --> 00:25:57,320
for red teamers maybe because you could

671
00:25:54,890 --> 00:25:58,850
actually fake a network network logon

672
00:25:57,320 --> 00:26:00,770
without actually being a network log

673
00:25:58,850 --> 00:26:03,169
because you can you can just put type 3

674
00:26:00,770 --> 00:26:04,790
there and the 46:24 is gonna have 3 so

675
00:26:03,170 --> 00:26:06,710
it is interesting I don't know why they

676
00:26:04,790 --> 00:26:07,850
would expose this but I'm not using it

677
00:26:06,710 --> 00:26:08,450
right now I just thought it was

678
00:26:07,850 --> 00:26:12,050
interesting

679
00:26:08,450 --> 00:26:13,550
so the second spray that I call is I

680
00:26:12,050 --> 00:26:15,710
call it the network domain spray and

681
00:26:13,550 --> 00:26:16,820
this is going in not longer against the

682
00:26:15,710 --> 00:26:19,100
domain controller but actually going

683
00:26:16,820 --> 00:26:21,439
against hosts on the network right and

684
00:26:19,100 --> 00:26:23,120
spraying them like like a server or

685
00:26:21,440 --> 00:26:25,490
workstation spraying accounts against

686
00:26:23,120 --> 00:26:28,790
them and for this I use these windows

687
00:26:25,490 --> 00:26:31,010
API and this windows API is used to map

688
00:26:28,790 --> 00:26:33,110
Network shares so I just use that to try

689
00:26:31,010 --> 00:26:36,080
to authenticate and if it works you know

690
00:26:33,110 --> 00:26:37,520
the credential is valid now learn and

691
00:26:36,080 --> 00:26:39,649
the important parameter here I think is

692
00:26:37,520 --> 00:26:41,629
a resource because if I put the fqdn

693
00:26:39,650 --> 00:26:42,470
it's going to use Kerberos and if I use

694
00:26:41,630 --> 00:26:45,950
the IP address

695
00:26:42,470 --> 00:26:47,600
ntlm so once again I can play with those

696
00:26:45,950 --> 00:26:50,210
different variations using curves or

697
00:26:47,600 --> 00:26:54,770
ntlm to to make sure that addiction is

698
00:26:50,210 --> 00:26:56,900
resilient right okay so all right so a

699
00:26:54,770 --> 00:26:59,510
spray attack needs to target users right

700
00:26:56,900 --> 00:27:00,860
so I wanted to have different ways of

701
00:26:59,510 --> 00:27:04,280
targeting different targeting different

702
00:27:00,860 --> 00:27:08,059
users so I have different parameters for

703
00:27:04,280 --> 00:27:10,309
targeting different users so what I call

704
00:27:08,059 --> 00:27:12,289
net neighbor domain users or foreign

705
00:27:10,309 --> 00:27:14,389
domain users what I do is I created a

706
00:27:12,289 --> 00:27:15,559
logon server which oh the domain

707
00:27:14,390 --> 00:27:18,020
controller where you are authenticated

708
00:27:15,559 --> 00:27:20,059
to and I use this held up query to grab

709
00:27:18,020 --> 00:27:20,480
users make sure that the bad password

710
00:27:20,059 --> 00:27:22,158
account

711
00:27:20,480 --> 00:27:23,630
l-dub attribute is lower than three

712
00:27:22,159 --> 00:27:25,820
because I don't want to look account out

713
00:27:23,630 --> 00:27:28,520
and also last login' because I want to

714
00:27:25,820 --> 00:27:30,710
target active users not disabled users

715
00:27:28,520 --> 00:27:32,780
or alt user sorry and I also use this

716
00:27:30,710 --> 00:27:34,280
l-dub query to just take out any

717
00:27:32,780 --> 00:27:37,580
disabled accounts so I want active

718
00:27:34,280 --> 00:27:39,230
accounts so domain if neighbors I mean

719
00:27:37,580 --> 00:27:41,240
users I go to the logon server and

720
00:27:39,230 --> 00:27:43,130
create this query for the foreign users

721
00:27:41,240 --> 00:27:44,840
what I do is I get a list of all the

722
00:27:43,130 --> 00:27:46,640
main controllers I randomly pick one

723
00:27:44,840 --> 00:27:48,770
domain controller in grabbed oh so that

724
00:27:46,640 --> 00:27:50,299
way you can target users that may not be

725
00:27:48,770 --> 00:27:51,350
on your same region they could be

726
00:27:50,299 --> 00:27:53,000
logging into different domain

727
00:27:51,350 --> 00:27:55,250
controllers I just want to see if that

728
00:27:53,000 --> 00:27:57,020
makes any you know if it's a difference

729
00:27:55,250 --> 00:27:59,900
it's a different variation just want to

730
00:27:57,020 --> 00:28:01,340
tag a random user sorry I also can

731
00:27:59,900 --> 00:28:02,960
target disabled accounts this could be

732
00:28:01,340 --> 00:28:05,780
interesting because what if the attacker

733
00:28:02,960 --> 00:28:07,460
has had access to all disabled accounts

734
00:28:05,780 --> 00:28:09,200
and now he's trying them right if you

735
00:28:07,460 --> 00:28:10,700
had a detection for someone trying to

736
00:28:09,200 --> 00:28:12,950
use this able account that could be

737
00:28:10,700 --> 00:28:14,600
interesting right so why not build the

738
00:28:12,950 --> 00:28:17,780
variation for this password spraying

739
00:28:14,600 --> 00:28:20,059
gets disabled account sensitive groups

740
00:28:17,780 --> 00:28:21,559
you know I use this l-dub attribute to

741
00:28:20,059 --> 00:28:23,360
get a list of users that are either

742
00:28:21,559 --> 00:28:25,220
domain admins or part of the protected

743
00:28:23,360 --> 00:28:27,379
users group so they're probably admins

744
00:28:25,220 --> 00:28:30,320
and finally I usually I use this elder

745
00:28:27,380 --> 00:28:33,309
query to get domain admins and this is a

746
00:28:30,320 --> 00:28:35,210
cool one random users I want to generate

747
00:28:33,309 --> 00:28:37,129
authentication events for users that

748
00:28:35,210 --> 00:28:39,020
don't exist in the environment why

749
00:28:37,130 --> 00:28:40,730
because once again attackers you know

750
00:28:39,020 --> 00:28:42,830
they make Megan stay they make a mistake

751
00:28:40,730 --> 00:28:45,440
what if they're trying a user list from

752
00:28:42,830 --> 00:28:47,090
another victim or something else so once

753
00:28:45,440 --> 00:28:48,950
again this is a trap right we're setting

754
00:28:47,090 --> 00:28:51,530
all these smoke traps in the environment

755
00:28:48,950 --> 00:28:53,480
and hopefully they make one mistake by

756
00:28:51,530 --> 00:28:55,830
may be using our wrong user list we'll

757
00:28:53,480 --> 00:28:58,649
catch it right

758
00:28:55,830 --> 00:29:00,510
okay and then how do i target host so if

759
00:28:58,649 --> 00:29:01,889
your Emmer I want to target random hosts

760
00:29:00,510 --> 00:29:02,429
in the environment so I have the same

761
00:29:01,890 --> 00:29:04,590
concept

762
00:29:02,429 --> 00:29:08,159
I use this ll query to make sure that

763
00:29:04,590 --> 00:29:10,260
hosts are out alive and domain neighbors

764
00:29:08,159 --> 00:29:11,820
once again I just grab the login server

765
00:29:10,260 --> 00:29:14,549
so that domain controller where I'm sent

766
00:29:11,820 --> 00:29:16,918
ated to and just get a list of servers

767
00:29:14,549 --> 00:29:18,779
and then foreign domain neighbors what I

768
00:29:16,919 --> 00:29:21,090
do is just grab a randomly picked domain

769
00:29:18,779 --> 00:29:22,950
controller and I ask that question so in

770
00:29:21,090 --> 00:29:25,860
that case I'm gonna be able to grab

771
00:29:22,950 --> 00:29:27,450
targets from a random network in my

772
00:29:25,860 --> 00:29:29,129
environment all right for maybe that

773
00:29:27,450 --> 00:29:31,010
small branch office or that small

774
00:29:29,130 --> 00:29:34,169
datacenter I can grab any target

775
00:29:31,010 --> 00:29:36,210
randomly always randomly random server

776
00:29:34,169 --> 00:29:37,340
host this one I don't like that much but

777
00:29:36,210 --> 00:29:39,570
it basically what I do is I grab

778
00:29:37,340 --> 00:29:42,000
randomly pick the main controller I grab

779
00:29:39,570 --> 00:29:43,950
the IP address and I just attack that

780
00:29:42,000 --> 00:29:45,210
Class C so the de neighbors I assume

781
00:29:43,950 --> 00:29:46,679
that the knowing controller is always

782
00:29:45,210 --> 00:29:48,960
gonna be on the server range which may

783
00:29:46,679 --> 00:29:51,029
not be right but I thought that why not

784
00:29:48,960 --> 00:29:53,429
this one and then network neighbors I do

785
00:29:51,029 --> 00:29:54,929
like the link like that this one what

786
00:29:53,429 --> 00:29:56,970
this does is just queries the network

787
00:29:54,929 --> 00:29:59,700
interfaces and calculates the subnet and

788
00:29:56,970 --> 00:30:01,620
grabs the network your network neighbors

789
00:29:59,700 --> 00:30:04,260
so that way if I run my simulation tool

790
00:30:01,620 --> 00:30:09,418
in my branch office it's gonna target

791
00:30:04,260 --> 00:30:10,860
that same that same office right okay so

792
00:30:09,419 --> 00:30:12,960
pasture spraying let's see how this

793
00:30:10,860 --> 00:30:16,139
works I have a few parameters here I'm

794
00:30:12,960 --> 00:30:18,059
not gonna mention all of them the most

795
00:30:16,139 --> 00:30:20,549
important is for the network domain

796
00:30:18,059 --> 00:30:21,779
spray I have type 1 and type 2 so type 1

797
00:30:20,549 --> 00:30:24,899
is going to what its gonna do it's gonna

798
00:30:21,779 --> 00:30:27,299
grab a random post and spray but typed

799
00:30:24,899 --> 00:30:28,949
so just 1 and type 2 is interesting what

800
00:30:27,299 --> 00:30:31,139
it does it's gonna grab 10 users you're

801
00:30:28,950 --> 00:30:33,360
gonna wrap however how many users you

802
00:30:31,139 --> 00:30:35,370
want right let's say 10 10 users it's

803
00:30:33,360 --> 00:30:37,469
gonna grab ten random hosts and it's

804
00:30:35,370 --> 00:30:39,570
gonna authenticate one to each so one

805
00:30:37,470 --> 00:30:41,580
user per host so I can in the

806
00:30:39,570 --> 00:30:43,740
distributed spray attack I wanted to see

807
00:30:41,580 --> 00:30:45,389
how that looks how different that looks

808
00:30:43,740 --> 00:30:46,980
on the logs also because that could be

809
00:30:45,389 --> 00:30:49,139
that could bypass your detection right

810
00:30:46,980 --> 00:30:50,760
and I also support like a sleep if you

811
00:30:49,139 --> 00:30:52,949
want to do like a slow attack for

812
00:30:50,760 --> 00:30:55,529
example you can pick the number of users

813
00:30:52,950 --> 00:30:57,510
so anyway let's go to the first demo and

814
00:30:55,529 --> 00:31:03,179
I cannot see the screen so hopefully you

815
00:30:57,510 --> 00:31:05,490
you'll see what I'm showing let's see

816
00:31:03,179 --> 00:31:07,080
them one okay are you you see this this

817
00:31:05,490 --> 00:31:09,240
can you see a cool thank you all right

818
00:31:07,080 --> 00:31:11,158
so some purple shower

819
00:31:09,240 --> 00:31:13,289
technique local spray number of users

820
00:31:11,159 --> 00:31:15,059
five so in it it just gives you some

821
00:31:13,289 --> 00:31:17,190
data of targeting who's targeting the

822
00:31:15,059 --> 00:31:19,110
domain controller and it just gonna give

823
00:31:17,190 --> 00:31:21,120
you you know one thing I like it gives

824
00:31:19,110 --> 00:31:23,189
me the timestamp so I can go back and

825
00:31:21,120 --> 00:31:23,520
correlate my logs when this happened

826
00:31:23,190 --> 00:31:25,710
actually

827
00:31:23,520 --> 00:31:26,760
right so it's trying Kerberos and it

828
00:31:25,710 --> 00:31:28,020
gives you the error code

829
00:31:26,760 --> 00:31:29,940
so one cool thing if I run this again

830
00:31:28,020 --> 00:31:31,559
it's actually gonna target different

831
00:31:29,940 --> 00:31:33,539
users right because I've always

832
00:31:31,559 --> 00:31:35,879
randomizing to minimize the risk of

833
00:31:33,539 --> 00:31:37,710
locking someone out right so as you can

834
00:31:35,880 --> 00:31:39,659
see this is using Cairo so if we go to

835
00:31:37,710 --> 00:31:41,490
the logs the cyber lama now this is a

836
00:31:39,659 --> 00:31:43,049
Cyril am I doing this right so this

837
00:31:41,490 --> 00:31:44,880
every Iran's purpose sharp goes to the

838
00:31:43,049 --> 00:31:47,520
locks goes to the main controller finds

839
00:31:44,880 --> 00:31:49,020
interesting events 4770 ones and this

840
00:31:47,520 --> 00:31:52,649
happens when someone tries to get us our

841
00:31:49,020 --> 00:31:54,270
LT d and fails with a wrong password so

842
00:31:52,649 --> 00:31:57,059
cool we can use this event to create a

843
00:31:54,270 --> 00:31:59,340
detection 4:47 for pass or spring right

844
00:31:57,059 --> 00:32:03,210
so that's an easy one but once again

845
00:31:59,340 --> 00:32:05,279
what if the attacker uses ntlm so in my

846
00:32:03,210 --> 00:32:07,470
case all you have to do is slash prod to

847
00:32:05,279 --> 00:32:08,580
and it's gonna use in Tila and then in

848
00:32:07,470 --> 00:32:11,159
this case I'm gonna use different

849
00:32:08,580 --> 00:32:13,500
different users users v so that's I

850
00:32:11,159 --> 00:32:15,570
think that's domain admin so so yeah it

851
00:32:13,500 --> 00:32:17,429
grows domain admins from an LDAP it gets

852
00:32:15,570 --> 00:32:19,860
them and it tries to authenticate with

853
00:32:17,429 --> 00:32:21,419
one password using ntlm if we go to the

854
00:32:19,860 --> 00:32:23,520
domain controller now we see something

855
00:32:21,419 --> 00:32:25,830
different we don't see 4770 once we've

856
00:32:23,520 --> 00:32:27,929
see 47 76 which is the event that gets

857
00:32:25,830 --> 00:32:31,830
generated on the domain controller when

858
00:32:27,929 --> 00:32:33,570
I look ntlm authentication is used

859
00:32:31,830 --> 00:32:36,120
against an account and you don't get an

860
00:32:33,570 --> 00:32:38,158
IP address anymore like the 47 71 you

861
00:32:36,120 --> 00:32:40,020
get a source workstation name which is

862
00:32:38,159 --> 00:32:42,929
yeah it still works but I think the IP

863
00:32:40,020 --> 00:32:44,668
would be better but that's we can still

864
00:32:42,929 --> 00:32:46,140
use this to create a detection right so

865
00:32:44,669 --> 00:32:47,760
we have two types of detection so far

866
00:32:46,140 --> 00:32:48,510
right so now we can lose something

867
00:32:47,760 --> 00:32:51,029
interesting we're gonna use a different

868
00:32:48,510 --> 00:32:53,429
type of user here and we're gonna sleep

869
00:32:51,029 --> 00:32:54,750
two seconds why not so this is gonna

870
00:32:53,429 --> 00:32:56,490
wait two seconds we to each other

871
00:32:54,750 --> 00:32:58,529
educational event and in this case we're

872
00:32:56,490 --> 00:33:00,870
targeting disabled users as you can see

873
00:32:58,529 --> 00:33:02,130
so if you remember what I said is I want

874
00:33:00,870 --> 00:33:03,870
to create this detection because I think

875
00:33:02,130 --> 00:33:05,460
it's interesting who's using the save

876
00:33:03,870 --> 00:33:06,479
all users in my environment I want to

877
00:33:05,460 --> 00:33:07,950
know I think it's a good interesting

878
00:33:06,480 --> 00:33:10,200
detection it shouldn't happen that often

879
00:33:07,950 --> 00:33:12,870
and if it's happening something's broken

880
00:33:10,200 --> 00:33:14,549
probably right so in this case you know

881
00:33:12,870 --> 00:33:18,049
you see a forty seven sixty eight eight

882
00:33:14,549 --> 00:33:20,850
and the result result code of two a

883
00:33:18,049 --> 00:33:22,559
twelve hexadecimal so this is

884
00:33:20,850 --> 00:33:24,629
interesting we can use these

885
00:33:22,559 --> 00:33:26,549
correlation of events and resultcode to

886
00:33:24,629 --> 00:33:30,658
see who's using disabled users and

887
00:33:26,549 --> 00:33:32,129
finally I'm going to use random users

888
00:33:30,659 --> 00:33:34,769
just to see how that looks like on the

889
00:33:32,129 --> 00:33:37,980
locks so I do that generate five random

890
00:33:34,769 --> 00:33:39,389
users it generates now this is a bug on

891
00:33:37,980 --> 00:33:42,210
the code it's supposed to create

892
00:33:39,389 --> 00:33:44,340
different user every time but I didn't

893
00:33:42,210 --> 00:33:46,470
want to go through the demo again so so

894
00:33:44,340 --> 00:33:47,668
I'll fix that but anyway you go back to

895
00:33:46,470 --> 00:33:49,350
the logs and now it look completely

896
00:33:47,669 --> 00:33:51,600
different you see a forty seven sixty

897
00:33:49,350 --> 00:33:56,129
eight but there is so called this time

898
00:33:51,600 --> 00:33:59,070
is C or x6 right so once again I've

899
00:33:56,129 --> 00:34:02,759
learned a lot from Kerberos events from

900
00:33:59,070 --> 00:34:06,840
in in ntlm event so let's move on to it

901
00:34:02,759 --> 00:34:08,339
demo number two for network spray so if

902
00:34:06,840 --> 00:34:10,078
you remember never spray is gonna spray

903
00:34:08,339 --> 00:34:12,149
an on longer domain controller but

904
00:34:10,079 --> 00:34:14,730
random hosts on the environment okay so

905
00:34:12,149 --> 00:34:17,399
I'm gonna use protocol two for ntlm it's

906
00:34:14,730 --> 00:34:19,469
gonna randomly pick a host in this case

907
00:34:17,399 --> 00:34:21,868
Windows 10 - - and it's going to spray

908
00:34:19,469 --> 00:34:24,779
it with five users right okay that's

909
00:34:21,869 --> 00:34:27,690
cool so we can if we run this again once

910
00:34:24,780 --> 00:34:31,050
again always random and with a sleep I

911
00:34:27,690 --> 00:34:34,109
actually the tool actually targets this

912
00:34:31,050 --> 00:34:36,359
time a different host it's gonna target

913
00:34:34,109 --> 00:34:38,219
if it comes back you see how the targets

914
00:34:36,359 --> 00:34:42,210
windows 7 - 1 right so it's always

915
00:34:38,219 --> 00:34:44,848
picking random targets so if we go back

916
00:34:42,210 --> 00:34:47,099
to the logs this is ntlm so what you see

917
00:34:44,849 --> 00:34:48,690
on the logs on the hosts not no longer

918
00:34:47,099 --> 00:34:50,760
under the main controller what you see

919
00:34:48,690 --> 00:34:54,030
on the locks of this Windows 7 - one is

920
00:34:50,760 --> 00:34:56,490
you see 4625 servants and 46:25 gives us

921
00:34:54,030 --> 00:34:58,319
the source IP address this user the

922
00:34:56,489 --> 00:35:00,660
source workstation so this is a cool

923
00:34:58,319 --> 00:35:05,069
event that we can use to build attention

924
00:35:00,660 --> 00:35:07,078
right I'm gonna fast for a little bit to

925
00:35:05,069 --> 00:35:08,609
do it ok this is type two so this is the

926
00:35:07,079 --> 00:35:12,440
distributed attack right so you're gonna

927
00:35:08,609 --> 00:35:15,060
see on the logs how the purple sharp is

928
00:35:12,440 --> 00:35:17,369
distributing the attack in testing one

929
00:35:15,060 --> 00:35:19,950
user per computer right in a distributed

930
00:35:17,369 --> 00:35:21,810
way because that may look different on

931
00:35:19,950 --> 00:35:25,439
the logs that may bypass your detection

932
00:35:21,810 --> 00:35:25,770
so why not simulate it right okay in the

933
00:35:25,440 --> 00:35:27,359
end

934
00:35:25,770 --> 00:35:29,670
all right here's a really cool thing

935
00:35:27,359 --> 00:35:32,790
that I learned recently is that only on

936
00:35:29,670 --> 00:35:34,950
the host where the spray is is

937
00:35:32,790 --> 00:35:35,650
originating right you see an interesting

938
00:35:34,950 --> 00:35:37,600
event for this

939
00:35:35,650 --> 00:35:39,100
forty-eight and this event happens when

940
00:35:37,600 --> 00:35:41,259
you're trying to use explicit conscious

941
00:35:39,100 --> 00:35:42,670
to authenticate right now this event is

942
00:35:41,260 --> 00:35:45,400
really cool but it give because it gives

943
00:35:42,670 --> 00:35:46,810
you the user that try this and the user

944
00:35:45,400 --> 00:35:49,360
that you're trying to authenticate as

945
00:35:46,810 --> 00:35:51,250
and it also gives you the host you're

946
00:35:49,360 --> 00:35:53,080
trying to connect to and even the port

947
00:35:51,250 --> 00:35:54,790
that you're trying to connect to so it's

948
00:35:53,080 --> 00:35:57,940
pretty cool so now we can use a

949
00:35:54,790 --> 00:36:00,160
detection on the receiving end of the

950
00:35:57,940 --> 00:36:01,990
attack but also on the origin so you can

951
00:36:00,160 --> 00:36:03,700
detect defining and if a computer is

952
00:36:01,990 --> 00:36:06,160
infected through these detection right

953
00:36:03,700 --> 00:36:08,439
so it's pretty cool so we can build a

954
00:36:06,160 --> 00:36:12,609
tection for this so I'm gonna fast

955
00:36:08,440 --> 00:36:16,110
forward because I think I show what I

956
00:36:12,610 --> 00:36:21,100
wanted to show go back to the slides and

957
00:36:16,110 --> 00:36:23,020
okay so take away the cyber llama really

958
00:36:21,100 --> 00:36:24,370
understands a man locked now we know

959
00:36:23,020 --> 00:36:26,410
what happens with curved rails we now

960
00:36:24,370 --> 00:36:27,819
habit with ntlm I'm not gonna go through

961
00:36:26,410 --> 00:36:30,520
this because we don't have enough time

962
00:36:27,820 --> 00:36:32,740
but you know we we are now understand

963
00:36:30,520 --> 00:36:36,940
how authentication works see looks on

964
00:36:32,740 --> 00:36:38,950
the logs right and the cyber llama has a

965
00:36:36,940 --> 00:36:41,620
few little detection analytics it's

966
00:36:38,950 --> 00:36:43,870
gonna use the 47 71 to the tech Kerberos

967
00:36:41,620 --> 00:36:46,630
based local pastor sprain forty seven

968
00:36:43,870 --> 00:36:50,140
seventy six to take ntlm based pastor

969
00:36:46,630 --> 00:36:52,360
sprain and why not the 47 68 with result

970
00:36:50,140 --> 00:36:54,310
code to your stuff which is going to

971
00:36:52,360 --> 00:36:55,330
trigger if someone uses disable accounts

972
00:36:54,310 --> 00:36:57,009
right I really like this one because

973
00:36:55,330 --> 00:37:01,180
this shouldn't happen on the environment

974
00:36:57,010 --> 00:37:03,280
so yeah and then also we've learned that

975
00:37:01,180 --> 00:37:05,890
non-existing accounts also create its

976
00:37:03,280 --> 00:37:08,320
own type of result code and my tool is

977
00:37:05,890 --> 00:37:09,339
able to simulate that so maybe this is

978
00:37:08,320 --> 00:37:10,900
gonna be too many false positives

979
00:37:09,340 --> 00:37:12,130
because users are always gonna type in

980
00:37:10,900 --> 00:37:14,470
their username wrong and that's gonna

981
00:37:12,130 --> 00:37:17,380
generate this type of event but maybe in

982
00:37:14,470 --> 00:37:19,060
you can create a baseline and maybe you

983
00:37:17,380 --> 00:37:20,170
can use this a detection potentially

984
00:37:19,060 --> 00:37:21,460
right but this should not go into

985
00:37:20,170 --> 00:37:24,120
production because it's generated train

986
00:37:21,460 --> 00:37:25,270
you generate a bunch of false positives

987
00:37:24,120 --> 00:37:27,310
okay

988
00:37:25,270 --> 00:37:29,020
and going back to the 46 with the

989
00:37:27,310 --> 00:37:31,720
network spray attack now we're gonna use

990
00:37:29,020 --> 00:37:34,000
46:25 love one type three group by the

991
00:37:31,720 --> 00:37:37,209
source network address the IP address of

992
00:37:34,000 --> 00:37:38,800
the the attacker where unique account

993
00:37:37,210 --> 00:37:41,710
name bigger than threshold so we have

994
00:37:38,800 --> 00:37:45,130
one extra detection 46:25 and one again

995
00:37:41,710 --> 00:37:46,870
for 46 48 which is going to detect from

996
00:37:45,130 --> 00:37:48,760
the origin someone sprained accounts

997
00:37:46,870 --> 00:37:50,140
across the network

998
00:37:48,760 --> 00:37:52,780
now we've also learned something

999
00:37:50,140 --> 00:37:54,460
interesting on 4648 we have the target

1000
00:37:52,780 --> 00:37:56,680
server name the IP address the target

1001
00:37:54,460 --> 00:37:57,940
port so maybe there's two extra

1002
00:37:56,680 --> 00:38:00,640
detection that we can build at some

1003
00:37:57,940 --> 00:38:02,320
point you know event 46 48 and subject

1004
00:38:00,640 --> 00:38:04,540
username different than target user this

1005
00:38:02,320 --> 00:38:05,920
is interesting when is a user gonna use

1006
00:38:04,540 --> 00:38:08,140
different connections to authenticate

1007
00:38:05,920 --> 00:38:10,510
maybe you're six admins wheel but it's

1008
00:38:08,140 --> 00:38:12,400
Anna from HRA we're gonna have a second

1009
00:38:10,510 --> 00:38:15,370
account probably not right so that's an

1010
00:38:12,400 --> 00:38:18,610
order trap and this is a coupon what if

1011
00:38:15,370 --> 00:38:20,410
you create 47 46 48 where and the

1012
00:38:18,610 --> 00:38:22,660
computer account is not an the

1013
00:38:20,410 --> 00:38:24,399
administrators group and the user that

1014
00:38:22,660 --> 00:38:27,190
is trying to authenticate is an

1015
00:38:24,400 --> 00:38:29,560
administrator so why would it again Anna

1016
00:38:27,190 --> 00:38:31,000
in HR try to use the domain admin

1017
00:38:29,560 --> 00:38:32,620
credential even if it doesn't have the

1018
00:38:31,000 --> 00:38:33,880
password so that's an extra detection

1019
00:38:32,620 --> 00:38:36,100
right what if the attacker makes a

1020
00:38:33,880 --> 00:38:39,580
mistake and you know types in a wrong

1021
00:38:36,100 --> 00:38:42,700
password and we can catch him right so

1022
00:38:39,580 --> 00:38:44,980
okay so let's move on to the next to the

1023
00:38:42,700 --> 00:38:46,259
next simulation however in time here

1024
00:38:44,980 --> 00:38:49,240
okay

1025
00:38:46,260 --> 00:38:52,000
network share okay so net is this

1026
00:38:49,240 --> 00:38:54,459
Windows 32 API nature ennum to enumerate

1027
00:38:52,000 --> 00:38:56,050
network shares and I the privity

1028
00:38:54,460 --> 00:38:57,460
numeration is I wonder when attacker

1029
00:38:56,050 --> 00:38:58,900
wants to know if he's a local admin on

1030
00:38:57,460 --> 00:39:02,020
that remote host so I use these windows

1031
00:38:58,900 --> 00:39:04,660
32 API which is the same API that Power

1032
00:39:02,020 --> 00:39:06,490
View uses for the command late fine

1033
00:39:04,660 --> 00:39:10,810
local admin access I think it's what

1034
00:39:06,490 --> 00:39:15,970
it's called so alright demo 3 so this

1035
00:39:10,810 --> 00:39:18,279
case boom okay cool so we're gonna use

1036
00:39:15,970 --> 00:39:20,169
network share and share information

1037
00:39:18,280 --> 00:39:21,820
we're gonna pick random host and it's

1038
00:39:20,170 --> 00:39:22,720
gonna successfully enumerated shares it

1039
00:39:21,820 --> 00:39:24,190
doesn't print the back

1040
00:39:22,720 --> 00:39:28,839
I just enumerate them based on the

1041
00:39:24,190 --> 00:39:30,220
windows 32 API result code and I'm gonna

1042
00:39:28,840 --> 00:39:31,600
approach the Kerberos tickets alright

1043
00:39:30,220 --> 00:39:34,120
here's something interesting that I

1044
00:39:31,600 --> 00:39:36,339
learned so it's doing network share

1045
00:39:34,120 --> 00:39:38,290
enumeration a bunch of host right but

1046
00:39:36,340 --> 00:39:39,280
here's something interesting when you're

1047
00:39:38,290 --> 00:39:40,900
doing this when you're trying to

1048
00:39:39,280 --> 00:39:42,790
authenticate to several computers you're

1049
00:39:40,900 --> 00:39:44,680
actually gonna get a service ticket for

1050
00:39:42,790 --> 00:39:47,170
and the service name is the computer

1051
00:39:44,680 --> 00:39:49,990
account so it's this is interesting as

1052
00:39:47,170 --> 00:39:51,640
an attacker was or as an see Salman is

1053
00:39:49,990 --> 00:39:54,430
going to authenticate to a bunch of

1054
00:39:51,640 --> 00:39:56,290
codes using Kerberos it's first going to

1055
00:39:54,430 --> 00:39:58,210
get service ticket for all those

1056
00:39:56,290 --> 00:40:00,250
computer accounts and then connect to

1057
00:39:58,210 --> 00:40:02,260
the servers so we could use this in the

1058
00:40:00,250 --> 00:40:04,840
detection as someone is trying to spray

1059
00:40:02,260 --> 00:40:06,430
your company or authenticate to a bunch

1060
00:40:04,840 --> 00:40:10,390
of hosts may be looma moving laterally

1061
00:40:06,430 --> 00:40:10,839
or running bloodhound right so that's a

1062
00:40:10,390 --> 00:40:15,400
good one

1063
00:40:10,840 --> 00:40:18,100
and I also see a 51:40 file share access

1064
00:40:15,400 --> 00:40:19,840
and you get the IP address and then you

1065
00:40:18,100 --> 00:40:21,700
get this share IPC dollar sign so this

1066
00:40:19,840 --> 00:40:23,290
is when you're no more in the shares so

1067
00:40:21,700 --> 00:40:26,020
this is another way that we can detect

1068
00:40:23,290 --> 00:40:29,380
this I'm gonna move on kind of go a

1069
00:40:26,020 --> 00:40:31,150
little fast for here in the interest of

1070
00:40:29,380 --> 00:40:33,040
time so previous generation so what is

1071
00:40:31,150 --> 00:40:34,840
this gonna do is gonna call that API to

1072
00:40:33,040 --> 00:40:36,970
make sure they find my napping or not in

1073
00:40:34,840 --> 00:40:38,560
this house as you can see this user is

1074
00:40:36,970 --> 00:40:40,419
that I mean a couple of house not all

1075
00:40:38,560 --> 00:40:42,400
hosts if I run against the entire

1076
00:40:40,420 --> 00:40:44,470
environment I find like a mine happening

1077
00:40:42,400 --> 00:40:47,950
on a few hosts so if you go to the logs

1078
00:40:44,470 --> 00:40:50,470
of this host you see another man 46 56

1079
00:40:47,950 --> 00:40:53,980
and a handle to an object was requested

1080
00:40:50,470 --> 00:40:56,020
and in this case it's gonna be really

1081
00:40:53,980 --> 00:40:58,300
easy to attack because the object server

1082
00:40:56,020 --> 00:41:02,320
is SC manager service Control Manager

1083
00:40:58,300 --> 00:41:04,420
and the access mask is what we sent on

1084
00:41:02,320 --> 00:41:06,520
that request on the parameter for the

1085
00:41:04,420 --> 00:41:07,960
windows api con so you can use this a

1086
00:41:06,520 --> 00:41:10,240
detection when someone's trying to

1087
00:41:07,960 --> 00:41:13,480
enumerate where their local admins in

1088
00:41:10,240 --> 00:41:16,830
right so Tiger Lima is happy now we have

1089
00:41:13,480 --> 00:41:19,180
more detections we can use that 4769 to

1090
00:41:16,830 --> 00:41:21,009
to detect when someone is trying to

1091
00:41:19,180 --> 00:41:23,140
access several hosts on the network we

1092
00:41:21,010 --> 00:41:24,640
can use that 51:40 to take when

1093
00:41:23,140 --> 00:41:27,220
someone's enumeration shares across the

1094
00:41:24,640 --> 00:41:28,960
network and we can use the 46 56 to

1095
00:41:27,220 --> 00:41:30,520
enumerate or to identify when is

1096
00:41:28,960 --> 00:41:32,950
someone's trying to enumerate privileges

1097
00:41:30,520 --> 00:41:35,259
on a house now one thing that I like is

1098
00:41:32,950 --> 00:41:37,240
this is really similar to help lock on

1099
00:41:35,260 --> 00:41:40,630
works right block down it's going to

1100
00:41:37,240 --> 00:41:42,009
connect and make API calls to all hosts

1101
00:41:40,630 --> 00:41:45,850
of the environment so when bloodhound

1102
00:41:42,010 --> 00:41:48,580
rounds it's also gonna get 4769 service

1103
00:41:45,850 --> 00:41:50,890
tickets for all your domain hosts and

1104
00:41:48,580 --> 00:41:52,120
then connect to each one of them using

1105
00:41:50,890 --> 00:41:53,950
you can solve for it with these two

1106
00:41:52,120 --> 00:41:56,170
events this is how we catch bloodhound

1107
00:41:53,950 --> 00:41:59,290
at least at least on the you know the

1108
00:41:56,170 --> 00:42:02,110
add the out the default parameters okay

1109
00:41:59,290 --> 00:42:05,380
and last demo this is for Kerberos teen

1110
00:42:02,110 --> 00:42:07,990
and lateral movement explain

1111
00:42:05,380 --> 00:42:09,970
okay so Kerberos and for here for this

1112
00:42:07,990 --> 00:42:12,879
technique I'm not using Windows 32 API

1113
00:42:09,970 --> 00:42:15,930
is I'm using Rubeus from will from

1114
00:42:12,880 --> 00:42:19,590
Spectre ups and I'm just basically

1115
00:42:15,930 --> 00:42:21,629
copying his coat thank you will and you

1116
00:42:19,590 --> 00:42:23,640
can sleep you know a few seconds if you

1117
00:42:21,630 --> 00:42:26,280
want to make it like a like a slow

1118
00:42:23,640 --> 00:42:27,420
attack at some point I also want to add

1119
00:42:26,280 --> 00:42:30,030
a different version of these that's

1120
00:42:27,420 --> 00:42:31,980
gonna just occur rows one not all of

1121
00:42:30,030 --> 00:42:33,660
them but that's just a simple variation

1122
00:42:31,980 --> 00:42:35,880
that we can add and this is easy to

1123
00:42:33,660 --> 00:42:38,190
catch this is a 14 769 service ticket

1124
00:42:35,880 --> 00:42:39,570
and where the service name is no longer

1125
00:42:38,190 --> 00:42:41,450
your computer but the service name is

1126
00:42:39,570 --> 00:42:44,610
actually the service account that

1127
00:42:41,450 --> 00:42:47,460
associated with that SPN so we can

1128
00:42:44,610 --> 00:42:49,080
create a detection for this easy all

1129
00:42:47,460 --> 00:42:50,760
right so this is remote service so this

1130
00:42:49,080 --> 00:42:52,890
is actually gonna use the create service

1131
00:42:50,760 --> 00:42:54,840
API to connect to a host and create a

1132
00:42:52,890 --> 00:42:56,730
remote service and then delete it right

1133
00:42:54,840 --> 00:42:59,340
so as you can see these users add me on

1134
00:42:56,730 --> 00:43:01,470
a few hosts so he was able to do that so

1135
00:42:59,340 --> 00:43:05,940
if we go to the logs on a few host

1136
00:43:01,470 --> 00:43:09,779
you'll see this super legit super legit

1137
00:43:05,940 --> 00:43:11,430
update service created event 1745 so we

1138
00:43:09,780 --> 00:43:14,340
can simulate if an attacker is doing

1139
00:43:11,430 --> 00:43:17,190
like PSX a core or Metasploit PSX sake

1140
00:43:14,340 --> 00:43:18,570
right without a weaponized in it so you

1141
00:43:17,190 --> 00:43:23,130
can we can create a new detection with

1142
00:43:18,570 --> 00:43:25,590
it and my two also simulates winner are

1143
00:43:23,130 --> 00:43:27,840
M and W my lateral movement so this is

1144
00:43:25,590 --> 00:43:30,420
winner M I'm using just that net here

1145
00:43:27,840 --> 00:43:32,850
and now Windows API calls and I'm gonna

1146
00:43:30,420 --> 00:43:35,550
execute notepad.exe and I'm gonna run

1147
00:43:32,850 --> 00:43:37,650
this and a few hosts as you can see it's

1148
00:43:35,550 --> 00:43:39,510
going to let me see so it finish here

1149
00:43:37,650 --> 00:43:42,390
because it's our local admin on this

1150
00:43:39,510 --> 00:43:46,590
house you cannot do it and you can see

1151
00:43:42,390 --> 00:43:47,879
how you see the notepad process at some

1152
00:43:46,590 --> 00:43:50,760
point I'm gonna show it here

1153
00:43:47,880 --> 00:43:52,710
I'll there you go no I think I had no

1154
00:43:50,760 --> 00:43:55,710
part running and its parent process it's

1155
00:43:52,710 --> 00:43:58,700
always going to be that WSM prop host

1156
00:43:55,710 --> 00:44:01,860
which is the parent process for any

1157
00:43:58,700 --> 00:44:04,049
child process of partial remoting and

1158
00:44:01,860 --> 00:44:07,800
only am I finally to kind of wrap things

1159
00:44:04,050 --> 00:44:10,890
up how are we in turn 44 cool doli am i

1160
00:44:07,800 --> 00:44:13,650
I use that net once again and I can pick

1161
00:44:10,890 --> 00:44:15,150
IP config as a command it's going to in

1162
00:44:13,650 --> 00:44:17,130
this case I'm running as the domain

1163
00:44:15,150 --> 00:44:20,280
admin so he's able to execute everywhere

1164
00:44:17,130 --> 00:44:22,590
and you can see how he creates that IP

1165
00:44:20,280 --> 00:44:27,170
config process and its parent process is

1166
00:44:22,590 --> 00:44:30,769
the OD m IP RDS see that exe right so

1167
00:44:27,170 --> 00:44:32,849
wrapping up almost wrapping up

1168
00:44:30,769 --> 00:44:33,779
good we went through all the Mo's that's

1169
00:44:32,849 --> 00:44:36,329
good

1170
00:44:33,779 --> 00:44:39,239
so more detections right for Kerberos

1171
00:44:36,329 --> 00:44:44,579
teen you can use 4769 for new services

1172
00:44:39,239 --> 00:44:47,279
1745 so yeah at the end of the story the

1173
00:44:44,579 --> 00:44:50,400
Cyril AMA has 11 new detections in

1174
00:44:47,279 --> 00:44:53,640
production and 4 in baselining for

1175
00:44:50,400 --> 00:44:54,839
testing and the AMA has learned a lot of

1176
00:44:53,640 --> 00:44:56,368
windows around locks and how

1177
00:44:54,839 --> 00:45:02,130
authentication works and how they map to

1178
00:44:56,369 --> 00:45:04,410
to to the simulations so pretty cool so

1179
00:45:02,130 --> 00:45:06,059
this is just a mapping of the what the

1180
00:45:04,410 --> 00:45:09,538
tool can do with the attack miner

1181
00:45:06,059 --> 00:45:11,460
framework the ones that are great I put

1182
00:45:09,539 --> 00:45:14,009
in orange is because you know the event

1183
00:45:11,460 --> 00:45:15,869
the technique t11 ones here it's

1184
00:45:14,009 --> 00:45:17,519
actually called brute force there's no

1185
00:45:15,869 --> 00:45:19,619
technique for passive spraying now I

1186
00:45:17,519 --> 00:45:21,779
think that they're gonna do stop

1187
00:45:19,619 --> 00:45:23,279
technique soon I might her so I'm

1188
00:45:21,779 --> 00:45:24,980
thinking that positive spraying should

1189
00:45:23,279 --> 00:45:27,989
be a sub technique of brute force right

1190
00:45:24,980 --> 00:45:29,670
so another interesting one is that the

1191
00:45:27,989 --> 00:45:31,619
technique Privia numeration where an

1192
00:45:29,670 --> 00:45:33,599
attacker is just not going to host

1193
00:45:31,619 --> 00:45:35,789
authenticating to them trying to see if

1194
00:45:33,599 --> 00:45:38,700
he's a local admin or not that technique

1195
00:45:35,789 --> 00:45:40,259
doesn't exist in miner so so that'd be

1196
00:45:38,700 --> 00:45:41,939
cool if they had that right because I

1197
00:45:40,259 --> 00:45:43,589
feel it's an interesting technique that

1198
00:45:41,940 --> 00:45:48,119
attackers are going to use and it makes

1199
00:45:43,589 --> 00:45:50,450
sense then I can use lot of movement

1200
00:45:48,119 --> 00:45:54,900
persistent persistence

1201
00:45:50,450 --> 00:45:56,819
yeah so all right what's next so what I

1202
00:45:54,900 --> 00:45:58,140
want to do next is pretty cool this is

1203
00:45:56,819 --> 00:46:01,799
where you stack it excites me actually

1204
00:45:58,140 --> 00:46:06,210
um I I want to run a random technique on

1205
00:46:01,799 --> 00:46:09,269
a random host at a random day and day in

1206
00:46:06,210 --> 00:46:11,460
time once a week right that make sure

1207
00:46:09,269 --> 00:46:12,899
that my detection is working not only my

1208
00:46:11,460 --> 00:46:15,059
detections are working my pipeline is

1209
00:46:12,900 --> 00:46:16,710
working and also my process is working

1210
00:46:15,059 --> 00:46:18,989
so my sock is escalating the right thing

1211
00:46:16,710 --> 00:46:21,509
so I want to get to this point and how

1212
00:46:18,989 --> 00:46:24,359
do I get here basically I need a way to

1213
00:46:21,509 --> 00:46:26,190
deploy a purple sharp randomly on the

1214
00:46:24,359 --> 00:46:29,058
environment right so I took a look at

1215
00:46:26,190 --> 00:46:31,890
GPO at CCM they don't really do

1216
00:46:29,059 --> 00:46:34,349
randomizing of so I'm sure that some

1217
00:46:31,890 --> 00:46:37,680
other tools do but what I'm doing now is

1218
00:46:34,349 --> 00:46:39,769
actually some easier solutions have live

1219
00:46:37,680 --> 00:46:42,109
response which is basically a free shell

1220
00:46:39,769 --> 00:46:45,979
so I'm using

1221
00:46:42,109 --> 00:46:47,630
our EDRs api to run this on a random

1222
00:46:45,980 --> 00:46:49,700
host for example now something

1223
00:46:47,630 --> 00:46:51,500
interesting important is that the tool

1224
00:46:49,700 --> 00:46:53,830
needs to run on the context of the

1225
00:46:51,500 --> 00:46:56,510
logged user I want to simulate and a

1226
00:46:53,830 --> 00:47:00,650
victim clicking a link getting popped

1227
00:46:56,510 --> 00:47:03,440
right so how do I get there if I run

1228
00:47:00,650 --> 00:47:07,640
through that API call to my EDR I get a

1229
00:47:03,440 --> 00:47:09,950
I run my code in a context of system but

1230
00:47:07,640 --> 00:47:11,779
just after one Google search I found

1231
00:47:09,950 --> 00:47:14,089
that it's really easy to if your system

1232
00:47:11,780 --> 00:47:16,460
just to list all the processes and just

1233
00:47:14,089 --> 00:47:18,349
duplicate a token and get your process

1234
00:47:16,460 --> 00:47:20,990
as that user so that's pretty easy it

1235
00:47:18,349 --> 00:47:24,349
can be done it's actually already code

1236
00:47:20,990 --> 00:47:26,509
written online that I found and I want

1237
00:47:24,349 --> 00:47:29,869
to implement some OPSEC also because I

1238
00:47:26,510 --> 00:47:32,599
feel that my sock if they see an alert

1239
00:47:29,869 --> 00:47:34,730
from that same host or sorry from that

1240
00:47:32,599 --> 00:47:36,740
same binary every time they're gonna

1241
00:47:34,730 --> 00:47:38,630
know something's up so here's what I

1242
00:47:36,740 --> 00:47:40,759
want to do I'm gonna randomize it

1243
00:47:38,630 --> 00:47:42,530
finally I'm gonna use parent process

1244
00:47:40,760 --> 00:47:44,869
proofing technique you know the the

1245
00:47:42,530 --> 00:47:46,160
create process API allows you to pick

1246
00:47:44,869 --> 00:47:50,119
your parent process so I can pick

1247
00:47:46,160 --> 00:47:51,770
Explorer or Chrome or Firefox to us to

1248
00:47:50,119 --> 00:47:53,750
simulate an attacker and a victim

1249
00:47:51,770 --> 00:47:55,849
clicking on something and command-line

1250
00:47:53,750 --> 00:47:57,950
spoofing also so that I don't have to

1251
00:47:55,849 --> 00:48:00,260
pass all the command and the EDR we'll

1252
00:47:57,950 --> 00:48:01,819
see that right so closing sorry for the

1253
00:48:00,260 --> 00:48:03,230
blue team you know how do you know if

1254
00:48:01,820 --> 00:48:05,510
you can can you know do you know if you

1255
00:48:03,230 --> 00:48:07,460
can detect the path of a stealth Network

1256
00:48:05,510 --> 00:48:09,920
spray attack boom that's that's how you

1257
00:48:07,460 --> 00:48:11,720
know simple answer do you know if your

1258
00:48:09,920 --> 00:48:14,089
sock will escalate and else has read

1259
00:48:11,720 --> 00:48:16,098
talk you can choose run this and you'll

1260
00:48:14,089 --> 00:48:18,529
know and can you identify the host

1261
00:48:16,099 --> 00:48:20,990
execute or emote codes only remote

1262
00:48:18,530 --> 00:48:24,940
commands using the lamahieu network just

1263
00:48:20,990 --> 00:48:28,129
use this and you you simulate safely I

1264
00:48:24,940 --> 00:48:31,190
want to wrap up with uh as I was doing

1265
00:48:28,130 --> 00:48:34,520
this I mapped windows 32 API calls to

1266
00:48:31,190 --> 00:48:36,050
attack minor techniques so I want to

1267
00:48:34,520 --> 00:48:39,349
keep working on this I think this makes

1268
00:48:36,050 --> 00:48:43,490
sense I think it's going to going to add

1269
00:48:39,349 --> 00:48:47,750
some extra value to to the simulation

1270
00:48:43,490 --> 00:48:49,189
that I'm doing and yeah that is it right

1271
00:48:47,750 --> 00:48:52,250
on time well thanks for coming I don't

1272
00:48:49,190 --> 00:48:56,470
know if I have time for questions I'm in

1273
00:48:52,250 --> 00:48:56,470
here too any questions yeah

1274
00:48:59,110 --> 00:49:04,460
yes okay good question so the code is on

1275
00:49:02,000 --> 00:49:05,930
github but all the techniques that it

1276
00:49:04,460 --> 00:49:07,460
supports are probably currently not on

1277
00:49:05,930 --> 00:49:10,549
the readme because you know I was a

1278
00:49:07,460 --> 00:49:12,950
dairy Kannan so but you'll see all the

1279
00:49:10,550 --> 00:49:14,840
documentation on the github on the

1280
00:49:12,950 --> 00:49:17,779
readme probably this week but the code

1281
00:49:14,840 --> 00:49:19,510
is there they are you I'm gonna work on

1282
00:49:17,780 --> 00:49:24,440
that next

1283
00:49:19,510 --> 00:49:27,350
yes yes I'll release denial on my

1284
00:49:24,440 --> 00:49:34,000
Twitter account so yes later today I'll

1285
00:49:27,350 --> 00:49:34,000
yeah for sure all right

1286
00:49:38,609 --> 00:49:40,670
you

