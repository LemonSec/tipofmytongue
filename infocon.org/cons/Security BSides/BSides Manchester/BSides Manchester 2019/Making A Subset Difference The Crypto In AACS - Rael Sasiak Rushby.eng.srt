1
00:00:03,800 --> 00:00:07,319
thank you for there's a lot more than

2
00:00:06,029 --> 00:00:08,940
the three people that said their being

3
00:00:07,319 --> 00:00:11,370
here yesterday I only have to throw up

4
00:00:08,940 --> 00:00:14,280
waffles for 25 so I'll put them out here

5
00:00:11,370 --> 00:00:16,680
at the end making a set different so

6
00:00:14,280 --> 00:00:18,480
hopefully you came here she thought that

7
00:00:16,680 --> 00:00:20,820
sounded intriguing and you didn't think

8
00:00:18,480 --> 00:00:24,810
the crypto meant crypto currency this is

9
00:00:20,820 --> 00:00:26,490
all about cryptography here I'm gonna

10
00:00:24,810 --> 00:00:28,279
stop for the disclaimer this is based on

11
00:00:26,490 --> 00:00:29,519
my understanding of the a ACS

12
00:00:28,279 --> 00:00:31,499
specification

13
00:00:29,519 --> 00:00:33,110
I've never had to fully implement this I

14
00:00:31,499 --> 00:00:35,129
don't work for those kind of companies

15
00:00:33,110 --> 00:00:36,780
I've not even seen code for an

16
00:00:35,130 --> 00:00:40,080
implementation of it I'm sure it's under

17
00:00:36,780 --> 00:00:42,000
NDA's and stuff like that I'm presenting

18
00:00:40,080 --> 00:00:43,230
this because I didn't find information

19
00:00:42,000 --> 00:00:44,850
when I was trying to look at this stuff

20
00:00:43,230 --> 00:00:46,199
so essentially this was something I

21
00:00:44,850 --> 00:00:48,720
thought was interesting I was looking

22
00:00:46,200 --> 00:00:50,460
into anti-piracy measures and there was

23
00:00:48,720 --> 00:00:52,530
no kind of material telling me what they

24
00:00:50,460 --> 00:00:54,240
had a subset difference wasn't one what

25
00:00:52,530 --> 00:00:58,500
does it do why is it useful how does it

26
00:00:54,240 --> 00:00:59,970
work if you see errors in these slides

27
00:00:58,500 --> 00:01:01,440
if you see error ism how I've

28
00:00:59,970 --> 00:01:02,850
interpreted things or if you know better

29
00:01:01,440 --> 00:01:05,548
because you've done this kind of stuff

30
00:01:02,850 --> 00:01:07,740
before let me know you can either shout

31
00:01:05,549 --> 00:01:09,119
out and everyone knows here or let me

32
00:01:07,740 --> 00:01:11,070
know I'll update slides and post

33
00:01:09,119 --> 00:01:15,570
Corrections everywhere don't worry about

34
00:01:11,070 --> 00:01:17,460
it what I gonna be covering let's say I

35
00:01:15,570 --> 00:01:20,038
already go into that much in the kind of

36
00:01:17,460 --> 00:01:22,048
the description so a brief description

37
00:01:20,039 --> 00:01:25,649
of what a ACS is so if you're not aware

38
00:01:22,049 --> 00:01:27,329
what ACS is I'll be going to an

39
00:01:25,649 --> 00:01:28,890
explanation of this subset difference

40
00:01:27,329 --> 00:01:32,548
tree so that's the kind of meat of this

41
00:01:28,890 --> 00:01:34,770
subject what that is how this kind of

42
00:01:32,549 --> 00:01:38,850
tree structure in the key system allows

43
00:01:34,770 --> 00:01:40,770
you to revoke users stop people being

44
00:01:38,850 --> 00:01:43,139
able to access media and how it enables

45
00:01:40,770 --> 00:01:46,048
efficient revocation of non-contiguous

46
00:01:43,139 --> 00:01:48,568
sets so saying that you don't have to be

47
00:01:46,049 --> 00:01:50,069
within this particular contiguous set

48
00:01:48,569 --> 00:01:51,810
you can have this person revoked and

49
00:01:50,069 --> 00:01:53,069
this person and this person but everyone

50
00:01:51,810 --> 00:01:56,009
in between them is allowed to still

51
00:01:53,069 --> 00:01:57,509
access that media at the end I'll be

52
00:01:56,009 --> 00:01:59,850
sharing a link to a reference code base

53
00:01:57,509 --> 00:02:00,899
I've been working on because I find it

54
00:01:59,850 --> 00:02:02,788
really easy to learn this kind of stuff

55
00:02:00,899 --> 00:02:04,529
by actually coding it testing out

56
00:02:02,789 --> 00:02:06,630
finding out that it works the way I

57
00:02:04,529 --> 00:02:07,950
think it should work there's a whole

58
00:02:06,630 --> 00:02:10,459
bunch of things I found out by

59
00:02:07,950 --> 00:02:13,310
implementing it that I did realize

60
00:02:10,459 --> 00:02:14,540
and if I talk really fast then I've also

61
00:02:13,310 --> 00:02:15,920
got some slides at the end that might

62
00:02:14,540 --> 00:02:17,720
help you if you start to look into the

63
00:02:15,920 --> 00:02:18,799
specification a couple of gotchas one

64
00:02:17,720 --> 00:02:22,370
thing that i think is wrong in the

65
00:02:18,800 --> 00:02:26,690
specification just some useful hints and

66
00:02:22,370 --> 00:02:29,390
tips essentially what is a ACS so the

67
00:02:26,690 --> 00:02:33,620
advanced access content system it's

68
00:02:29,390 --> 00:02:37,010
basically the the new new thing after we

69
00:02:33,620 --> 00:02:39,379
had CSS for DVDs so if you want those

70
00:02:37,010 --> 00:02:41,120
people that like me as DVDs at home and

71
00:02:39,379 --> 00:02:43,190
you've ripped all of them onto our hard

72
00:02:41,120 --> 00:02:45,440
drive because you know DVD decrypter is

73
00:02:43,190 --> 00:02:47,209
a thing this is the new and improved

74
00:02:45,440 --> 00:02:49,040
version that was brought out to stop

75
00:02:47,209 --> 00:02:51,290
people ripping all the blu-ray discs and

76
00:02:49,040 --> 00:02:55,069
that's why you don't find blu-ray disc

77
00:02:51,290 --> 00:02:58,910
rips online but you do anti-piracy

78
00:02:55,069 --> 00:03:01,609
methods also HD DVDs if you even care

79
00:02:58,910 --> 00:03:02,900
about those things that don't exist it's

80
00:03:01,610 --> 00:03:04,430
a collaboration of a number of the big

81
00:03:02,900 --> 00:03:07,940
players basically they all got together

82
00:03:04,430 --> 00:03:09,709
form this AACL Licensing Authority and

83
00:03:07,940 --> 00:03:14,690
said this is how we're going to encrypt

84
00:03:09,709 --> 00:03:17,720
stuff from now on so what are the aims

85
00:03:14,690 --> 00:03:21,530
of it so for this is designed for mainly

86
00:03:17,720 --> 00:03:23,150
disk media and so to protect the media

87
00:03:21,530 --> 00:03:26,090
from being accessed by unlicensed

88
00:03:23,150 --> 00:03:28,160
devices so you've got to have a device

89
00:03:26,090 --> 00:03:30,079
that has a specific license and you've

90
00:03:28,160 --> 00:03:31,609
got a keep they've got a key that they

91
00:03:30,079 --> 00:03:33,620
have obtained from the licensing

92
00:03:31,609 --> 00:03:38,900
authority that allows you to decrypt

93
00:03:33,620 --> 00:03:41,419
that media if they find that someone a

94
00:03:38,900 --> 00:03:44,120
manufacturer say Sony has implemented it

95
00:03:41,419 --> 00:03:45,829
wrong and you're you've you as an

96
00:03:44,120 --> 00:03:47,810
end-user have now got access to copy

97
00:03:45,829 --> 00:03:49,880
that media they want to be able to

98
00:03:47,810 --> 00:03:51,889
revoke that drive so that from then on

99
00:03:49,880 --> 00:03:53,980
that drive can never decrypt any media

100
00:03:51,889 --> 00:03:56,510
in the future thus you know preventing

101
00:03:53,980 --> 00:03:59,238
more blu-rays being ripped in the future

102
00:03:56,510 --> 00:04:01,099
a really important statement here really

103
00:03:59,239 --> 00:04:02,959
is that it's the revocation of stateless

104
00:04:01,099 --> 00:04:04,910
receivers so what we mean by that is

105
00:04:02,959 --> 00:04:06,980
these receivers do not necessarily have

106
00:04:04,910 --> 00:04:08,480
an update function in fact you should

107
00:04:06,980 --> 00:04:09,888
assume that they don't have an update

108
00:04:08,480 --> 00:04:11,418
function because that will get around

109
00:04:09,889 --> 00:04:13,520
some strategies about people that just

110
00:04:11,419 --> 00:04:15,740
refuse to update things

111
00:04:13,520 --> 00:04:18,769
look for example at the ps3 where we had

112
00:04:15,740 --> 00:04:20,180
the Linux kernel vulnerability we used

113
00:04:18,769 --> 00:04:22,430
to be able to run a little sub system on

114
00:04:20,180 --> 00:04:23,900
it and then they kind of patch that out

115
00:04:22,430 --> 00:04:25,280
but there's a whole bunch of ps3's that

116
00:04:23,900 --> 00:04:27,440
still have the old version because

117
00:04:25,280 --> 00:04:30,109
people kept it and stopped patching it

118
00:04:27,440 --> 00:04:30,790
so they could keep these old versions of

119
00:04:30,110 --> 00:04:33,350
ps3s

120
00:04:30,790 --> 00:04:36,440
it should not is significantly impact

121
00:04:33,350 --> 00:04:38,990
this disk space so when we're looking at

122
00:04:36,440 --> 00:04:40,880
digital disk media space is a premium if

123
00:04:38,990 --> 00:04:42,710
I can have an extra 100 megabytes that's

124
00:04:40,880 --> 00:04:44,860
more quality I can put into the content

125
00:04:42,710 --> 00:04:47,270
maybe I can put in some additional

126
00:04:44,860 --> 00:04:49,490
select like some additional scenes or

127
00:04:47,270 --> 00:04:51,260
some cutscenes or something like that so

128
00:04:49,490 --> 00:04:52,700
we really want it to take up minimal

129
00:04:51,260 --> 00:04:55,190
space on the disk while still providing

130
00:04:52,700 --> 00:04:57,140
that great security that we need and it

131
00:04:55,190 --> 00:04:59,210
should be coalition resistance so if I

132
00:04:57,140 --> 00:05:00,950
put two machines then that doesn't

133
00:04:59,210 --> 00:05:02,630
necessarily give me access to anything

134
00:05:00,950 --> 00:05:05,539
else and no matter how many machines I

135
00:05:02,630 --> 00:05:08,120
phone if I revoke all of those pwned

136
00:05:05,540 --> 00:05:09,590
machines then I still can't even with

137
00:05:08,120 --> 00:05:15,320
the sum of all that secret material

138
00:05:09,590 --> 00:05:16,789
somehow access the media so replication

139
00:05:15,320 --> 00:05:18,800
of stateless receivers it gets mentioned

140
00:05:16,790 --> 00:05:21,860
in the specification and it's mainly

141
00:05:18,800 --> 00:05:23,330
based off of this paper the replication

142
00:05:21,860 --> 00:05:27,170
and tracing schemes to stateless

143
00:05:23,330 --> 00:05:28,880
receivers so this paper goes into how

144
00:05:27,170 --> 00:05:31,100
this gets implemented it goes into a

145
00:05:28,880 --> 00:05:33,770
previous version of it or the kind of

146
00:05:31,100 --> 00:05:34,820
academics behind the original but ases

147
00:05:33,770 --> 00:05:37,280
then takes a different slightly

148
00:05:34,820 --> 00:05:38,810
different approach and how it implements

149
00:05:37,280 --> 00:05:41,929
it and it's kind of like a more updated

150
00:05:38,810 --> 00:05:43,130
version but the basic assumption is we

151
00:05:41,930 --> 00:05:45,320
don't assume that anything can be

152
00:05:43,130 --> 00:05:48,950
updated remotely so we don't have the

153
00:05:45,320 --> 00:05:51,950
non pop strategies but a con of this is

154
00:05:48,950 --> 00:05:55,010
that we can't revoke access retro

155
00:05:51,950 --> 00:05:58,430
actively so if you know anything about

156
00:05:55,010 --> 00:06:02,210
DVD or blu-ray disk decrypting you'll

157
00:05:58,430 --> 00:06:05,210
know that when a snoo revert revocation

158
00:06:02,210 --> 00:06:08,150
list gets like when a new revocation

159
00:06:05,210 --> 00:06:10,549
list comes out then you can no longer

160
00:06:08,150 --> 00:06:12,380
decrypt anything from then on but you

161
00:06:10,550 --> 00:06:14,630
can still decrypt any discs released

162
00:06:12,380 --> 00:06:17,060
before that new revocation came about

163
00:06:14,630 --> 00:06:18,530
because there's no way of them actually

164
00:06:17,060 --> 00:06:20,390
actively stopping you getting a disc

165
00:06:18,530 --> 00:06:24,940
that was two years old and a device that

166
00:06:20,390 --> 00:06:27,380
was two years old and that still works

167
00:06:24,940 --> 00:06:29,870
so yeah device can still

168
00:06:27,380 --> 00:06:32,060
to any media from before it was revoked

169
00:06:29,870 --> 00:06:33,620
but you know the idea is that from now

170
00:06:32,060 --> 00:06:35,600
on you can't get the next blockbuster

171
00:06:33,620 --> 00:06:38,000
film that comes out on blu-ray discs or

172
00:06:35,600 --> 00:06:43,160
you can't get the next cool media that

173
00:06:38,000 --> 00:06:44,660
comes out so quick little three point

174
00:06:43,160 --> 00:06:47,780
rundown on how the actual media is

175
00:06:44,660 --> 00:06:49,490
encrypted it's a V a SCV seed so you

176
00:06:47,780 --> 00:06:52,429
just have a joint CPC of the entire

177
00:06:49,490 --> 00:06:55,100
media or splits of media each piece of

178
00:06:52,430 --> 00:06:56,510
media is a title all of the title keys

179
00:06:55,100 --> 00:06:59,120
are then encrypted with Lotz known as a

180
00:06:56,510 --> 00:07:00,620
media key and then to get a media key

181
00:06:59,120 --> 00:07:03,380
you go through the subsets different

182
00:07:00,620 --> 00:07:05,810
system so realistically you need to

183
00:07:03,380 --> 00:07:07,760
retrieve one key which then decrypt a

184
00:07:05,810 --> 00:07:10,970
whole bunch of keys which then give you

185
00:07:07,760 --> 00:07:12,469
your stream keys but this is the real

186
00:07:10,970 --> 00:07:14,960
this is the key we really care about

187
00:07:12,470 --> 00:07:17,150
usually and the media key could be

188
00:07:14,960 --> 00:07:19,489
derived the device can derive a media

189
00:07:17,150 --> 00:07:20,539
key by looking at its set of device keys

190
00:07:19,490 --> 00:07:22,700
that it was given when it was

191
00:07:20,540 --> 00:07:24,520
manufactured and it can if it's not

192
00:07:22,700 --> 00:07:27,710
revoked

193
00:07:24,520 --> 00:07:29,690
figure out that media key enables it to

194
00:07:27,710 --> 00:07:33,200
decrypt the type of keys enables it to

195
00:07:29,690 --> 00:07:34,790
decrypt the media all right the meat of

196
00:07:33,200 --> 00:07:36,800
this presentation what is a subset

197
00:07:34,790 --> 00:07:38,960
difference tree what does it do how does

198
00:07:36,800 --> 00:07:41,750
it work why is it great it's really

199
00:07:38,960 --> 00:07:44,030
quite interesting I'm gonna start off if

200
00:07:41,750 --> 00:07:45,410
you know anything about kind of video

201
00:07:44,030 --> 00:07:48,979
decrypting the stuff you'll note

202
00:07:45,410 --> 00:07:51,230
recognize the form of Doom 9 and this is

203
00:07:48,980 --> 00:07:54,710
probably the only piece of informative

204
00:07:51,230 --> 00:07:58,160
blog forum post you'll find about AES

205
00:07:54,710 --> 00:08:00,109
the only one I could find and he was

206
00:07:58,160 --> 00:08:03,110
trying to describe or they were trying

207
00:08:00,110 --> 00:08:05,030
to describe how subset systems work and

208
00:08:03,110 --> 00:08:06,710
they use the analogy of a truck so if

209
00:08:05,030 --> 00:08:09,349
you imagine each device is a truck with

210
00:08:06,710 --> 00:08:10,880
a trailer inside that trailer is a whole

211
00:08:09,350 --> 00:08:14,750
bunch of crates which are protected with

212
00:08:10,880 --> 00:08:17,240
keys of some sort you're on a very like

213
00:08:14,750 --> 00:08:19,040
weird system but you can know you cannot

214
00:08:17,240 --> 00:08:21,860
reverse and you cannot take corners of

215
00:08:19,040 --> 00:08:24,380
greater than 90 degrees right so these

216
00:08:21,860 --> 00:08:25,790
rules will be in the corner when I show

217
00:08:24,380 --> 00:08:28,310
you this image which hopefully makes

218
00:08:25,790 --> 00:08:31,550
this make a bit more sense so here we've

219
00:08:28,310 --> 00:08:33,320
got truck down here this truck can go up

220
00:08:31,550 --> 00:08:35,690
there it can make this corner cuz it's

221
00:08:33,320 --> 00:08:37,280
90 degrees can make this comics is 90

222
00:08:35,690 --> 00:08:38,450
degrees make that one but it can't get

223
00:08:37,280 --> 00:08:40,789
to there it can't

224
00:08:38,450 --> 00:08:43,340
get to there it could go all the way

225
00:08:40,789 --> 00:08:45,439
here can't get to there can't get to

226
00:08:43,340 --> 00:08:48,380
there because that's less than 90 there

227
00:08:45,440 --> 00:08:49,820
there you can kind of see how it gets to

228
00:08:48,380 --> 00:08:52,430
certain places but there's certain

229
00:08:49,820 --> 00:08:56,210
places it can't get to and so you could

230
00:08:52,430 --> 00:08:58,280
imagine that if we have crazy supply

231
00:08:56,210 --> 00:09:01,250
crates to this and the keys for it or in

232
00:08:58,280 --> 00:09:03,230
these car parking spaces that truck

233
00:09:01,250 --> 00:09:05,420
cannot access any of the crates but if

234
00:09:03,230 --> 00:09:07,400
it can get to if we've got two crates

235
00:09:05,420 --> 00:09:10,400
that are in there but one crate that's

236
00:09:07,400 --> 00:09:13,660
in there it can drive around open that

237
00:09:10,400 --> 00:09:16,819
one crate it's got its media key

238
00:09:13,660 --> 00:09:19,100
so just for even more clarity on that

239
00:09:16,820 --> 00:09:22,180
the truck is your device the crates are

240
00:09:19,100 --> 00:09:25,370
the encrypted media key data entries

241
00:09:22,180 --> 00:09:27,770
they are on the disk alongside the media

242
00:09:25,370 --> 00:09:29,360
the cup the codes of the car parking

243
00:09:27,770 --> 00:09:33,140
locations are what's called processing

244
00:09:29,360 --> 00:09:36,230
keys the price inside the crate is not

245
00:09:33,140 --> 00:09:37,930
obviously a media key and every Junction

246
00:09:36,230 --> 00:09:40,940
there I'm just going to time as a node

247
00:09:37,930 --> 00:09:42,560
so it's a it's a point in which we can

248
00:09:40,940 --> 00:09:44,090
make a decision on where we go next and

249
00:09:42,560 --> 00:09:46,219
we have a piece of information we can

250
00:09:44,090 --> 00:09:48,050
derive further information it's

251
00:09:46,220 --> 00:09:50,120
important to know that you don't ever

252
00:09:48,050 --> 00:09:52,670
actually go up the tree that's just for

253
00:09:50,120 --> 00:09:54,590
the use of this analogy you only go down

254
00:09:52,670 --> 00:09:56,930
from certain spots so I guess you could

255
00:09:54,590 --> 00:09:58,910
say that so here's a kind of junction

256
00:09:56,930 --> 00:10:01,219
junction a junction B we could say

257
00:09:58,910 --> 00:10:04,579
there's a nodes that's the junction aids

258
00:10:01,220 --> 00:10:06,590
processing key and instead of going up

259
00:10:04,580 --> 00:10:08,540
we think with portals we just portal up

260
00:10:06,590 --> 00:10:10,490
to a certain location that we could have

261
00:10:08,540 --> 00:10:13,849
gone down and we start navigating down

262
00:10:10,490 --> 00:10:15,800
from it let's already get into the

263
00:10:13,850 --> 00:10:18,830
crypto on that so what do I mean by that

264
00:10:15,800 --> 00:10:21,260
well each nodes key is derived from a

265
00:10:18,830 --> 00:10:23,270
higher key in the tree all right so when

266
00:10:21,260 --> 00:10:25,040
we had a node you can figure out any of

267
00:10:23,270 --> 00:10:28,069
its sub nodes any note that comes down

268
00:10:25,040 --> 00:10:30,110
from it because you do basically three

269
00:10:28,070 --> 00:10:32,540
times and you get left processing key

270
00:10:30,110 --> 00:10:33,890
and right so if you have that key you

271
00:10:32,540 --> 00:10:35,420
can get to the left right and the

272
00:10:33,890 --> 00:10:37,040
processing here if you have one of those

273
00:10:35,420 --> 00:10:40,040
keys you can get to any keys below it

274
00:10:37,040 --> 00:10:42,349
and that kind of funnels down and that

275
00:10:40,040 --> 00:10:45,380
allows you to get any key that's not one

276
00:10:42,350 --> 00:10:47,870
that any key that you've got a parent of

277
00:10:45,380 --> 00:10:51,510
you can get to how are we going to use

278
00:10:47,870 --> 00:10:53,400
this well when you are giving a device

279
00:10:51,510 --> 00:10:54,990
you have signed it somewhere on the tree

280
00:10:53,400 --> 00:10:57,689
and the bottom level of the tree is what

281
00:10:54,990 --> 00:11:00,570
known as device node numbers and each

282
00:10:57,690 --> 00:11:03,900
device is one place there as a device

283
00:11:00,570 --> 00:11:06,540
you get every key that is one different

284
00:11:03,900 --> 00:11:08,640
from your path to the root of the tree

285
00:11:06,540 --> 00:11:10,199
now that sounds really crazy and you

286
00:11:08,640 --> 00:11:11,490
probably don't know what that means it's

287
00:11:10,200 --> 00:11:14,490
really hard to visualize it don't worry

288
00:11:11,490 --> 00:11:17,250
I'm gonna explain it say we've got this

289
00:11:14,490 --> 00:11:19,140
lovely looking tree here and these will

290
00:11:17,250 --> 00:11:22,080
be device node numbers and there's a

291
00:11:19,140 --> 00:11:25,740
tree going upwards if I'm this device

292
00:11:22,080 --> 00:11:27,570
down here I'm not allowed to know any of

293
00:11:25,740 --> 00:11:29,550
this information because if I could get

294
00:11:27,570 --> 00:11:31,230
this I could derive mine if I could get

295
00:11:29,550 --> 00:11:34,160
this I can derive mine I can never

296
00:11:31,230 --> 00:11:37,110
derive my processing key

297
00:11:34,160 --> 00:11:40,110
if I get one that's one different that

298
00:11:37,110 --> 00:11:42,390
means I can get this one I get that one

299
00:11:40,110 --> 00:11:44,430
over the left there and I get this one

300
00:11:42,390 --> 00:11:46,550
on the right here and those are the only

301
00:11:44,430 --> 00:11:50,189
three device keys I get in this system

302
00:11:46,550 --> 00:11:51,900
but from that I can obviously derive the

303
00:11:50,190 --> 00:11:54,330
lower keys and you can see that I can

304
00:11:51,900 --> 00:11:56,130
get to any key here that's not in purple

305
00:11:54,330 --> 00:11:58,410
and hopefully that makes sense to them

306
00:11:56,130 --> 00:12:02,280
how I'm taking the original nodes as a

307
00:11:58,410 --> 00:12:04,290
as a device I get get given these and I

308
00:12:02,280 --> 00:12:08,520
can derive any of the lighter green ones

309
00:12:04,290 --> 00:12:09,930
here so what does that mean for

310
00:12:08,520 --> 00:12:12,360
replication in this system

311
00:12:09,930 --> 00:12:14,310
well replication is fairly easy we

312
00:12:12,360 --> 00:12:15,960
essentially just encrypt that media key

313
00:12:14,310 --> 00:12:18,709
with something that your device cannot

314
00:12:15,960 --> 00:12:21,330
access so something along your path

315
00:12:18,710 --> 00:12:23,640
essentially so if we go back to this

316
00:12:21,330 --> 00:12:26,130
diagram here it's helpfully already

317
00:12:23,640 --> 00:12:29,220
labeled the P here that's in red is any

318
00:12:26,130 --> 00:12:30,960
places that truck cannot get to so if

319
00:12:29,220 --> 00:12:32,670
that truck is to be revoked we just

320
00:12:30,960 --> 00:12:34,440
encrypt the media key with one of those

321
00:12:32,670 --> 00:12:37,020
entries that truck can never get to it

322
00:12:34,440 --> 00:12:40,260
but hopefully you can see that if the

323
00:12:37,020 --> 00:12:42,060
truck was here and we use this one and

324
00:12:40,260 --> 00:12:45,410
it was here it could get to it every

325
00:12:42,060 --> 00:12:49,199
other truck can get to that location and

326
00:12:45,410 --> 00:12:52,560
so on so well let's say I wanted to

327
00:12:49,200 --> 00:12:54,090
revoke these two well I can encrypt it

328
00:12:52,560 --> 00:12:56,099
with that key because neither of these

329
00:12:54,090 --> 00:13:00,150
two trucks could get there but every

330
00:12:56,100 --> 00:13:03,020
other truck can phone or revoke these

331
00:13:00,150 --> 00:13:06,050
two as well in this contiguous set here

332
00:13:03,020 --> 00:13:07,339
she's gonna move that up and thus I can

333
00:13:06,050 --> 00:13:08,930
encrypt that and hopefully you can see

334
00:13:07,339 --> 00:13:10,910
that none of those trucks could ever get

335
00:13:08,930 --> 00:13:12,770
to that car pong space again this whole

336
00:13:10,910 --> 00:13:14,980
side of it could get up there if they

337
00:13:12,770 --> 00:13:17,390
wanted to they can retrieve that key now

338
00:13:14,980 --> 00:13:19,700
the problem arises when we added a

339
00:13:17,390 --> 00:13:22,819
non-contiguous set so how could what if

340
00:13:19,700 --> 00:13:26,480
we want to revoke here there is no car

341
00:13:22,820 --> 00:13:28,430
parking space here that those flies can

342
00:13:26,480 --> 00:13:30,250
get to those fight can't get to that

343
00:13:28,430 --> 00:13:32,689
these three could still get to

344
00:13:30,250 --> 00:13:37,580
essentially if we revoked here somewhere

345
00:13:32,690 --> 00:13:38,930
that all of these are revoked so this is

346
00:13:37,580 --> 00:13:40,070
where the subsets different system

347
00:13:38,930 --> 00:13:42,079
actually comes into its own and that's

348
00:13:40,070 --> 00:13:43,430
where the more interesting part lies so

349
00:13:42,080 --> 00:13:46,970
it's a bit like ogres which are like

350
00:13:43,430 --> 00:13:48,709
onions so it has lots of layers and the

351
00:13:46,970 --> 00:13:52,000
in order to do that non-contiguous

352
00:13:48,709 --> 00:13:54,500
revocation we have loads of layers so

353
00:13:52,000 --> 00:13:57,709
specification hit written here quite

354
00:13:54,500 --> 00:13:59,630
wordy essentially what it is for every

355
00:13:57,709 --> 00:14:02,300
level that we have within our master

356
00:13:59,630 --> 00:14:04,189
tree let's cool it if you go one level

357
00:14:02,300 --> 00:14:06,920
down there are two separate trees at

358
00:14:04,190 --> 00:14:09,560
that level on top of the existing tree

359
00:14:06,920 --> 00:14:12,319
so we have a three so we have a three

360
00:14:09,560 --> 00:14:15,770
level master tree at level one down

361
00:14:12,320 --> 00:14:17,779
there is two extra two level two trees a

362
00:14:15,770 --> 00:14:21,050
third level down from that there are

363
00:14:17,779 --> 00:14:22,660
four extra trees that are not as tall

364
00:14:21,050 --> 00:14:27,740
you take one level away each time

365
00:14:22,660 --> 00:14:30,459
essentially and what you say is that you

366
00:14:27,740 --> 00:14:33,470
can't go higher than the original tree

367
00:14:30,459 --> 00:14:35,209
again this all sounds very worthy and so

368
00:14:33,470 --> 00:14:36,529
this is why this material is going to be

369
00:14:35,209 --> 00:14:39,790
available as slides and there's gonna be

370
00:14:36,529 --> 00:14:43,279
code and I'm gonna keep explaining it

371
00:14:39,790 --> 00:14:44,599
but how does this help so when we've got

372
00:14:43,279 --> 00:14:48,110
multiple trees what we end up doing

373
00:14:44,600 --> 00:14:49,910
actually is that we we can encrypt we

374
00:14:48,110 --> 00:14:51,529
can do one encryption per tree and that

375
00:14:49,910 --> 00:14:54,230
revokes all of those items underneath

376
00:14:51,529 --> 00:14:57,079
that encryption but then in the lower

377
00:14:54,230 --> 00:14:59,300
tree we can re-enable certain sections

378
00:14:57,079 --> 00:15:02,209
by having a tree that only certain

379
00:14:59,300 --> 00:15:04,490
people can access and we encrypt in

380
00:15:02,209 --> 00:15:07,520
there and then only bits of that get

381
00:15:04,490 --> 00:15:09,440
revoked and we kind of reenable revoke

382
00:15:07,520 --> 00:15:11,180
we enable revoke until we go down the

383
00:15:09,440 --> 00:15:15,680
tree and get the exact subset that we

384
00:15:11,180 --> 00:15:16,069
want and so hopefully this will be a bit

385
00:15:15,680 --> 00:15:18,739
more

386
00:15:16,070 --> 00:15:21,500
if I display it visually so imagine this

387
00:15:18,740 --> 00:15:24,650
is our grand master tree right now

388
00:15:21,500 --> 00:15:27,830
everyone's unable to to access any media

389
00:15:24,650 --> 00:15:31,189
and then I want to revoke anything come

390
00:15:27,830 --> 00:15:33,350
to here so I've done a replication at

391
00:15:31,190 --> 00:15:37,160
this level and anyone in this triangle

392
00:15:33,350 --> 00:15:38,830
can no longer access this media but then

393
00:15:37,160 --> 00:15:42,020
in the lower tree somewhere down here

394
00:15:38,830 --> 00:15:43,850
again this is a different tree layer so

395
00:15:42,020 --> 00:15:48,230
there'll be a big tree here and a

396
00:15:43,850 --> 00:15:49,970
smaller tree ivory enable this set and

397
00:15:48,230 --> 00:15:52,100
then I might also revoke this set down

398
00:15:49,970 --> 00:15:54,620
here so as you can see I've now these

399
00:15:52,100 --> 00:15:56,800
users can get it these users these users

400
00:15:54,620 --> 00:16:01,760
and that those users on the end I've

401
00:15:56,800 --> 00:16:03,560
disabled discontiguous set here and when

402
00:16:01,760 --> 00:16:06,200
we do that we have to define the pot

403
00:16:03,560 --> 00:16:07,969
down to this kind of sub tree here and

404
00:16:06,200 --> 00:16:10,910
we can actually move that across and say

405
00:16:07,970 --> 00:16:16,700
that this consists of two sub sets of

406
00:16:10,910 --> 00:16:20,060
users so we have the sub set locate

407
00:16:16,700 --> 00:16:22,790
rooted at level 0 so the root root tree

408
00:16:20,060 --> 00:16:25,130
at level 0 with a replication a depth of

409
00:16:22,790 --> 00:16:27,829
2 a lot of a certain path let's say

410
00:16:25,130 --> 00:16:30,439
somewhere down here and then we move

411
00:16:27,830 --> 00:16:32,870
over and we re enable a sub set rooted

412
00:16:30,440 --> 00:16:35,990
at level 4 so for down the original and

413
00:16:32,870 --> 00:16:38,540
along this certain path of the original

414
00:16:35,990 --> 00:16:43,010
and then we can revoke again at a depth

415
00:16:38,540 --> 00:16:45,230
of 1 within that tree again I realize

416
00:16:43,010 --> 00:16:48,110
this might be confusing hopefully it'll

417
00:16:45,230 --> 00:16:50,630
make a bit more sense now I just want to

418
00:16:48,110 --> 00:16:53,390
quickly say that some naming conventions

419
00:16:50,630 --> 00:16:55,670
generally left we could give it a 0 path

420
00:16:53,390 --> 00:16:58,280
when we give it what right would give it

421
00:16:55,670 --> 00:16:59,990
1 and so we'd never really care about

422
00:16:58,280 --> 00:17:01,370
the absolute root node you're never

423
00:16:59,990 --> 00:17:04,640
going to give that out to anyone because

424
00:17:01,370 --> 00:17:08,599
they could drive the whole tree but we

425
00:17:04,640 --> 00:17:09,770
give you 0 0 0 0 0 0 essentially and

426
00:17:08,599 --> 00:17:13,389
that's how we kind of denote where

427
00:17:09,770 --> 00:17:13,389
different places on the tree are

428
00:17:14,319 --> 00:17:18,319
hopefully this will give you some

429
00:17:16,010 --> 00:17:21,170
examples and that might help you

430
00:17:18,319 --> 00:17:22,188
understand things this is something

431
00:17:21,170 --> 00:17:23,630
that's definitely missing from most

432
00:17:22,189 --> 00:17:25,699
media that was finding some some

433
00:17:23,630 --> 00:17:27,180
examples of how this might work so let's

434
00:17:25,699 --> 00:17:30,800
say we want to revoke and

435
00:17:27,180 --> 00:17:34,350
- here I've laid out sorry a three depth

436
00:17:30,800 --> 00:17:36,690
system so the top-level route we've got

437
00:17:34,350 --> 00:17:39,870
a three deep tree below that we've got

438
00:17:36,690 --> 00:17:42,300
two two deep trees and below that we've

439
00:17:39,870 --> 00:17:45,120
got we've got four one deep trees

440
00:17:42,300 --> 00:17:46,830
essentially so this is the entire system

441
00:17:45,120 --> 00:17:49,199
and to say I won over folks zero zero

442
00:17:46,830 --> 00:17:52,520
zero over there the easiest way of doing

443
00:17:49,200 --> 00:17:56,670
that is to encrypt within the tree a

444
00:17:52,520 --> 00:17:58,050
encrypt with the zero zero zero key and

445
00:17:56,670 --> 00:18:00,810
hopefully you can realize that all of

446
00:17:58,050 --> 00:18:03,960
these devices would be able to get to

447
00:18:00,810 --> 00:18:05,580
that in our parking system and that is

448
00:18:03,960 --> 00:18:08,880
the only device that cannot get to that

449
00:18:05,580 --> 00:18:11,610
location yes that's a simple one we

450
00:18:08,880 --> 00:18:13,560
could already do that what for what are

451
00:18:11,610 --> 00:18:14,909
there like zero zero zero zero one we've

452
00:18:13,560 --> 00:18:17,629
really seen how we do this this is

453
00:18:14,910 --> 00:18:21,540
simple layer 1 layer revocations

454
00:18:17,630 --> 00:18:23,910
contiguous sets if we go to a

455
00:18:21,540 --> 00:18:27,570
discontinuous set so we've got the zero

456
00:18:23,910 --> 00:18:29,370
zero zero and the zero one one what are

457
00:18:27,570 --> 00:18:31,560
we going to do so

458
00:18:29,370 --> 00:18:33,300
we revoke with the highest level the

459
00:18:31,560 --> 00:18:36,360
highest common factor in the highest

460
00:18:33,300 --> 00:18:37,980
tree so in this case zero is the common

461
00:18:36,360 --> 00:18:40,679
ancestor so we revoke with that

462
00:18:37,980 --> 00:18:42,570
so hopefully you realize that these can

463
00:18:40,680 --> 00:18:45,930
all access that but none of these can

464
00:18:42,570 --> 00:18:47,790
right but we still want these two to be

465
00:18:45,930 --> 00:18:49,550
able to access the media and at the

466
00:18:47,790 --> 00:18:53,580
moment they're revoked

467
00:18:49,550 --> 00:18:55,020
so we're also on the lowest level we're

468
00:18:53,580 --> 00:18:58,530
going to encrypt with these two and

469
00:18:55,020 --> 00:19:01,170
again zero zero zero cannot access that

470
00:18:58,530 --> 00:19:02,940
and it cannot access that it also kind

471
00:19:01,170 --> 00:19:04,320
of access any of these because you can

472
00:19:02,940 --> 00:19:07,620
see there's a separate trees at this

473
00:19:04,320 --> 00:19:10,320
point also you can hopefully see that

474
00:19:07,620 --> 00:19:12,719
these revoked systems can still access

475
00:19:10,320 --> 00:19:17,250
the keys that they would they can access

476
00:19:12,720 --> 00:19:18,030
some key within the media key entry so

477
00:19:17,250 --> 00:19:20,760
we end up with three different

478
00:19:18,030 --> 00:19:23,250
encryptions in the media key data entry

479
00:19:20,760 --> 00:19:25,170
system and each device that's not

480
00:19:23,250 --> 00:19:27,510
revoked will be able to find one entry

481
00:19:25,170 --> 00:19:29,820
that it can decrypt thus getting the

482
00:19:27,510 --> 00:19:35,510
title keys thus being able to access the

483
00:19:29,820 --> 00:19:35,510
media and just another one for good luck

484
00:19:35,720 --> 00:19:40,950
you can see here that we can actually

485
00:19:38,160 --> 00:19:43,500
revoke these two here

486
00:19:40,950 --> 00:19:45,630
and with that we have efficiently

487
00:19:43,500 --> 00:19:48,000
revoked the only the ones that we needed

488
00:19:45,630 --> 00:19:49,770
and we've only done it into two

489
00:19:48,000 --> 00:19:55,350
encryptions but we revoked three

490
00:19:49,770 --> 00:19:56,639
different systems at this point so if

491
00:19:55,350 --> 00:19:59,310
you're like me and you want to see the

492
00:19:56,640 --> 00:20:00,810
code for all of this I've been working

493
00:19:59,310 --> 00:20:03,990
on some implementations of it I

494
00:20:00,810 --> 00:20:06,270
originally started off and see because I

495
00:20:03,990 --> 00:20:09,060
like writing AES encryption and C I've

496
00:20:06,270 --> 00:20:10,620
done it too many times but I also write

497
00:20:09,060 --> 00:20:12,120
an implementation in JavaScript and

498
00:20:10,620 --> 00:20:14,540
that's the one that actually runs fully

499
00:20:12,120 --> 00:20:17,070
because I didn't bother implementing AES

500
00:20:14,540 --> 00:20:18,720
you can run an example of it I also

501
00:20:17,070 --> 00:20:20,610
include example the examples in these

502
00:20:18,720 --> 00:20:22,260
slides so you can run code for them and

503
00:20:20,610 --> 00:20:24,270
see which bits can be encrypted

504
00:20:22,260 --> 00:20:27,470
decrypted you can run through the bit

505
00:20:24,270 --> 00:20:32,850
streams that happen you can see when

506
00:20:27,470 --> 00:20:34,380
revocations are occurring and I'll stop

507
00:20:32,850 --> 00:20:36,389
quickly and ask if there's any queries

508
00:20:34,380 --> 00:20:37,620
now or we can go on to like the three

509
00:20:36,390 --> 00:20:53,820
slides of bonus material because I've

510
00:20:37,620 --> 00:20:55,199
got four minutes okay so yeah so the

511
00:20:53,820 --> 00:20:57,810
replication is how does it get used so

512
00:20:55,200 --> 00:21:00,120
what happens is I forget the version

513
00:20:57,810 --> 00:21:03,149
number of mkb were on so you get an MK B

514
00:21:00,120 --> 00:21:05,699
version on blu-ray disk medium and so

515
00:21:03,150 --> 00:21:08,250
every so often the licensing agency

516
00:21:05,700 --> 00:21:09,780
releases the latest mkb that they're

517
00:21:08,250 --> 00:21:12,600
going to use which includes the latest

518
00:21:09,780 --> 00:21:14,310
set of replications right from then on

519
00:21:12,600 --> 00:21:16,320
anything that they've revoked can no

520
00:21:14,310 --> 00:21:20,429
longer access media of blu-ray discs are

521
00:21:16,320 --> 00:21:22,620
being created that prevents piracy in

522
00:21:20,430 --> 00:21:24,900
those regards it kind of prevents

523
00:21:22,620 --> 00:21:27,030
forward privacy in that regards until

524
00:21:24,900 --> 00:21:29,130
you crack into another device now it's

525
00:21:27,030 --> 00:21:31,170
up to the device manufacturers to store

526
00:21:29,130 --> 00:21:33,450
these secret material in a way that

527
00:21:31,170 --> 00:21:35,010
should not be reverse engineered we've

528
00:21:33,450 --> 00:21:36,780
already seen cracks of it there's a

529
00:21:35,010 --> 00:21:40,320
reason why you can crack blu-ray discs

530
00:21:36,780 --> 00:21:41,879
online and I'm not gonna get into this

531
00:21:40,320 --> 00:21:43,470
presentation I have another presentation

532
00:21:41,880 --> 00:21:45,390
when I talk about piracy and anti piracy

533
00:21:43,470 --> 00:21:47,730
this is kind of like to provide some

534
00:21:45,390 --> 00:21:50,370
technical stuff behind it about how

535
00:21:47,730 --> 00:21:52,620
pirates are keeping their secret secret

536
00:21:50,370 --> 00:21:53,969
and how licensing ages agency is

537
00:21:52,620 --> 00:21:56,159
attempting to revoke as many

538
00:21:53,970 --> 00:21:58,200
it can so hopefully that answers your

539
00:21:56,160 --> 00:22:01,680
question

540
00:21:58,200 --> 00:22:04,530
yep how big is the tree I actually

541
00:22:01,680 --> 00:22:09,300
happen in the bonus questions bonus

542
00:22:04,530 --> 00:22:12,930
material so we actually have a 32-bit

543
00:22:09,300 --> 00:22:14,610
system in a later bonus slide I'll show

544
00:22:12,930 --> 00:22:17,880
you there's one bit if that is not used

545
00:22:14,610 --> 00:22:22,139
so there's actually only 31 possible the

546
00:22:17,880 --> 00:22:24,660
31 tree depth so this 31 trees 31 layers

547
00:22:22,140 --> 00:22:27,540
sorry a device gets an amount of keys

548
00:22:24,660 --> 00:22:30,720
from a tree depth of n we have more

549
00:22:27,540 --> 00:22:33,180
trees for every layer so there's 31

550
00:22:30,720 --> 00:22:36,000
layers they get n from each you end up

551
00:22:33,180 --> 00:22:40,230
with 496 different device keys each

552
00:22:36,000 --> 00:22:43,080
device key is just a EES encryption key

553
00:22:40,230 --> 00:22:45,150
so it's only 16 bytes it's about 6 about

554
00:22:43,080 --> 00:22:48,330
8 kilobytes of data to put on the device

555
00:22:45,150 --> 00:22:49,530
is secret material and so that's that's

556
00:22:48,330 --> 00:22:51,419
an important thing here we're really

557
00:22:49,530 --> 00:22:53,370
limiting the space here the device it

558
00:22:51,420 --> 00:22:55,620
only has to have 8 kilobytes of secret

559
00:22:53,370 --> 00:22:59,580
material stored and on the actual disk

560
00:22:55,620 --> 00:23:03,090
you're looking at so a common mkb record

561
00:22:59,580 --> 00:23:05,730
might only be 64 bytes long something

562
00:23:03,090 --> 00:23:08,280
like that like you need the encrypted

563
00:23:05,730 --> 00:23:11,100
key and a bit of information encrypted

564
00:23:08,280 --> 00:23:13,440
key in a bit of information so 32 64

565
00:23:11,100 --> 00:23:15,000
bytes well you get longer as you do more

566
00:23:13,440 --> 00:23:19,080
of occations I'll see every encryption

567
00:23:15,000 --> 00:23:21,870
takes about 22 bytes in an mkb record

568
00:23:19,080 --> 00:23:24,419
but that you as you can see we can let

569
00:23:21,870 --> 00:23:27,959
huge Suede's of thing can be revoked in

570
00:23:24,420 --> 00:23:29,430
one encryption it's cool and other

571
00:23:27,960 --> 00:23:33,240
questions I'll just quickly run through

572
00:23:29,430 --> 00:23:35,120
the slides before you cheer cheer and

573
00:23:33,240 --> 00:23:38,370
shout if you're reading a specification

574
00:23:35,120 --> 00:23:40,110
this is how nodes are defined we define

575
00:23:38,370 --> 00:23:42,659
them with a u mask and a V mask

576
00:23:40,110 --> 00:23:44,879
you must defines which tree down it's in

577
00:23:42,660 --> 00:23:47,850
so the absolute root master tree at

578
00:23:44,880 --> 00:23:51,300
level 0 has a u mask of absolutely zero

579
00:23:47,850 --> 00:23:54,240
the whole thing is valid and then as you

580
00:23:51,300 --> 00:23:57,840
can see this one would be 3d and all the

581
00:23:54,240 --> 00:24:00,000
paths of 1 0 0 compared to master tree I

582
00:23:57,840 --> 00:24:02,669
hope for that makes it a sense the

583
00:24:00,000 --> 00:24:06,660
master says that we're how far up in the

584
00:24:02,670 --> 00:24:07,430
node is so anything below it we don't

585
00:24:06,660 --> 00:24:11,070
care about

586
00:24:07,430 --> 00:24:15,000
so this node is there and then this is

587
00:24:11,070 --> 00:24:16,409
just extra space confusing storage how

588
00:24:15,000 --> 00:24:18,630
do we store these kind of things we add

589
00:24:16,410 --> 00:24:21,990
a bit on the end just to signify where

590
00:24:18,630 --> 00:24:23,160
the end of the path is so if you have a

591
00:24:21,990 --> 00:24:24,540
reading the specification there's a

592
00:24:23,160 --> 00:24:27,720
difference between a device number and a

593
00:24:24,540 --> 00:24:30,629
device node number hopefully this slide

594
00:24:27,720 --> 00:24:32,490
explains that for you if you need to Eva

595
00:24:30,630 --> 00:24:33,960
Reimer on a specification is wrong this

596
00:24:32,490 --> 00:24:36,660
function does not do what it says it

597
00:24:33,960 --> 00:24:39,540
does so I added an extra check in my

598
00:24:36,660 --> 00:24:41,220
code but the maths doesn't quite work

599
00:24:39,540 --> 00:24:43,500
out I think how they expected it to

600
00:24:41,220 --> 00:24:46,350
there there's like basically there's an

601
00:24:43,500 --> 00:24:47,280
edge case here that was annoying me and

602
00:24:46,350 --> 00:24:48,810
I thought that I completely

603
00:24:47,280 --> 00:24:52,399
misunderstood the specification about

604
00:24:48,810 --> 00:24:52,399
two days ago before this presentation

605
00:24:52,760 --> 00:24:57,660
right I know is everything hopefully

606
00:24:56,040 --> 00:25:00,180
you've enjoyed the talk about

607
00:24:57,660 --> 00:25:02,130
cryptography the github is already up

608
00:25:00,180 --> 00:25:03,930
there the slides I haven't put up anyway

609
00:25:02,130 --> 00:25:05,700
yet but I will put them up they'll be

610
00:25:03,930 --> 00:25:08,370
available my github and wherever else

611
00:25:05,700 --> 00:25:12,980
needs to be posted thank you

612
00:25:08,370 --> 00:25:12,979
[Applause]

