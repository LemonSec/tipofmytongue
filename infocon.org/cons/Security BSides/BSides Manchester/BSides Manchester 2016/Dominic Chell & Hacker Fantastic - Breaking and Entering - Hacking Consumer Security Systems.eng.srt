1
00:00:02,460 --> 00:00:08,370
well okay well<font color="#E5E5E5"> I'm good morning welcome</font>

2
00:00:06,149 --> 00:00:12,090
<font color="#E5E5E5">to our talk Breaking and Entering</font>

3
00:00:08,370 --> 00:00:14,009
cracking consumer security systems<font color="#CCCCCC"> it's</font>

4
00:00:12,090 --> 00:00:15,599
<font color="#CCCCCC">tough</font><font color="#E5E5E5"> me in the first talk of the day so</font>

5
00:00:14,010 --> 00:00:20,570
thanks to everyone for making the effort

6
00:00:15,599 --> 00:00:25,259
to<font color="#CCCCCC"> show up it's good to</font><font color="#E5E5E5"> see a full house</font>

7
00:00:20,570 --> 00:00:28,200
so who are we well I'm dominate this is

8
00:00:25,259 --> 00:00:30,840
<font color="#E5E5E5">Matthew we work in the Penta steam</font><font color="#CCCCCC"> and</font>

9
00:00:28,200 --> 00:00:33,960
<font color="#CCCCCC">II sec we've both</font><font color="#E5E5E5"> been involved in the</font>

10
00:00:30,840 --> 00:00:35,940
UK<font color="#CCCCCC"> infoset scene for quite some time</font>

11
00:00:33,960 --> 00:00:40,980
this is the second time we've spoken of

12
00:00:35,940 --> 00:00:42,928
besides or<font color="#CCCCCC"> Manchester recites one thing</font>

13
00:00:40,980 --> 00:00:46,199
that like to kind<font color="#E5E5E5"> of stress about this</font>

14
00:00:42,929 --> 00:00:48,149
presentation is it's not<font color="#CCCCCC"> just the word</font>

15
00:00:46,199 --> 00:00:50,730
that mean math you've done it's actually

16
00:00:48,149 --> 00:00:53,100
a kind of collaborative effort from some

17
00:00:50,730 --> 00:00:55,199
of the other<font color="#CCCCCC"> guys in our team it's</font>

18
00:00:53,100 --> 00:00:57,019
<font color="#E5E5E5">really the output of kind of several</font>

19
00:00:55,199 --> 00:00:58,739
research nights that we've done

20
00:00:57,019 --> 00:01:01,409
unfortunately the other guys who were

21
00:00:58,739 --> 00:01:02,788
involved particularly husband Alex both

22
00:01:01,409 --> 00:01:05,820
on holiday today so we couldn't<font color="#E5E5E5"> get them</font>

23
00:01:02,789 --> 00:01:07,229
down there but it's not<font color="#CCCCCC"> just the work of</font>

24
00:01:05,820 --> 00:01:08,939
myself and Matthew it's pretty<font color="#E5E5E5"> much</font>

25
00:01:07,229 --> 00:01:16,430
everyone well a couple of other guys at

26
00:01:08,939 --> 00:01:19,919
NB so so what<font color="#E5E5E5"> is I'll talk about well</font>

27
00:01:16,430 --> 00:01:23,640
essentially a nominal idea is pretty

28
00:01:19,920 --> 00:01:26,100
much a drunk hacking talk effectively

29
00:01:23,640 --> 00:01:27,960
<font color="#E5E5E5">we're going to be talking about what we</font>

30
00:01:26,100 --> 00:01:30,210
call<font color="#CCCCCC"> consumed sewer systems but these</font>

31
00:01:27,960 --> 00:01:32,669
are things<font color="#E5E5E5"> like effectively that you can</font>

32
00:01:30,210 --> 00:01:35,399
buy off the shelf so you might<font color="#E5E5E5"> see them</font>

33
00:01:32,670 --> 00:01:36,869
in small to medium sized businesses you

34
00:01:35,399 --> 00:01:38,520
might even have some of them at home and

35
00:01:36,869 --> 00:01:40,649
some of the devices we're talking well

36
00:01:38,520 --> 00:01:41,700
I've got installed at my house if you

37
00:01:40,649 --> 00:01:45,479
actually want<font color="#E5E5E5"> to break into my house</font>

38
00:01:41,700 --> 00:01:48,210
listen to this talk effectively<font color="#E5E5E5"> it's</font>

39
00:01:45,479 --> 00:01:53,329
things like IP cameras digital video

40
00:01:48,210 --> 00:01:55,649
recorders intruder alarms<font color="#E5E5E5"> CCTV systems</font>

41
00:01:53,329 --> 00:02:02,000
the kind of stuff that you use to kind

42
00:01:55,649 --> 00:02:03,990
of monitor or protects your premises<font color="#CCCCCC"> and</font>

43
00:02:02,000 --> 00:02:06,950
so I first started looking at these

44
00:02:03,990 --> 00:02:10,350
devices are roughly about two years ago

45
00:02:06,950 --> 00:02:12,360
which was when I got the system

46
00:02:10,350 --> 00:02:14,070
installed at my house and i'm<font color="#E5E5E5"> not gonna</font>

47
00:02:12,360 --> 00:02:15,480
light it was quite an expensive system<font color="#E5E5E5"> i</font>

48
00:02:14,070 --> 00:02:17,000
got professional installer to come and

49
00:02:15,480 --> 00:02:20,160
set it all up<font color="#E5E5E5"> for me</font>

50
00:02:17,000 --> 00:02:23,010
at the time the guy who's installing it

51
00:02:20,160 --> 00:02:25,740
basically said to me oh<font color="#CCCCCC"> you need to give</font>

52
00:02:23,010 --> 00:02:28,170
this an IP address<font color="#E5E5E5"> and give me access to</font>

53
00:02:25,740 --> 00:02:29,790
your<font color="#E5E5E5"> router and all</font><font color="#CCCCCC"> portforward</font><font color="#E5E5E5"> stuff so</font>

54
00:02:28,170 --> 00:02:32,670
you can get<font color="#E5E5E5"> to</font><font color="#CCCCCC"> it from your</font><font color="#E5E5E5"> mobile I was</font>

55
00:02:29,790 --> 00:02:34,380
like okay right I'm gonna have a<font color="#E5E5E5"> little</font>

56
00:02:32,670 --> 00:02:36,450
bit of a look at this before<font color="#E5E5E5"> I you know</font>

57
00:02:34,380 --> 00:02:39,990
<font color="#CCCCCC">put</font><font color="#E5E5E5"> on my homeland and connect it up to</font>

58
00:02:36,450 --> 00:02:43,560
the internet and unsurprisingly this

59
00:02:39,990 --> 00:02:44,610
thing was pretty incredibly insecure and

60
00:02:43,560 --> 00:02:49,890
I'll<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about some of</font><font color="#E5E5E5"> the issues that</font>

61
00:02:44,610 --> 00:02:52,670
we found in later on however these

62
00:02:49,890 --> 00:02:56,250
devices are generally quite interesting

63
00:02:52,670 --> 00:02:59,220
mainly<font color="#CCCCCC"> because they used as a physical</font>

64
00:02:56,250 --> 00:03:00,480
security control or deterrent so if

65
00:02:59,220 --> 00:03:03,300
you're actually able to compromise one

66
00:03:00,480 --> 00:03:05,820
of these<font color="#E5E5E5"> devices it might assist you in</font>

67
00:03:03,300 --> 00:03:08,880
gaining physical access to an

68
00:03:05,820 --> 00:03:10,500
environment<font color="#E5E5E5"> also what you'll find is</font>

69
00:03:08,880 --> 00:03:13,049
some of these devices<font color="#E5E5E5"> are actually</font>

70
00:03:10,500 --> 00:03:14,850
internet-connected which<font color="#CCCCCC"> might means you</font>

71
00:03:13,050 --> 00:03:20,430
might actually be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to get a remote</font>

72
00:03:14,850 --> 00:03:22,620
kind of access into an organization and

73
00:03:20,430 --> 00:03:25,920
finally what you'll hopefully see from

74
00:03:22,620 --> 00:03:29,400
the output<font color="#E5E5E5"> of this talk is these kind of</font>

75
00:03:25,920 --> 00:03:30,958
<font color="#CCCCCC">devices are a</font><font color="#E5E5E5"> much softer target I'm not</font>

76
00:03:29,400 --> 00:03:33,380
and I don't<font color="#E5E5E5"> just specifically mean these</font>

77
00:03:30,959 --> 00:03:36,810
devices i mean actually<font color="#E5E5E5"> iot in general</font>

78
00:03:33,380 --> 00:03:39,240
IT security is actually light years

79
00:03:36,810 --> 00:03:42,000
behind the security<font color="#CCCCCC"> of desktop</font>

80
00:03:39,240 --> 00:03:44,690
environments which is why<font color="#E5E5E5"> they become</font>

81
00:03:42,000 --> 00:03:47,340
more<font color="#CCCCCC"> of a target for and cyber criminals</font>

82
00:03:44,690 --> 00:03:49,890
so in the kind of run up to this talk<font color="#CCCCCC"> i</font>

83
00:03:47,340 --> 00:03:51,630
started to<font color="#E5E5E5"> have a look at some of the</font>

84
00:03:49,890 --> 00:03:56,488
press<font color="#E5E5E5"> that was kind of out there for</font>

85
00:03:51,630 --> 00:03:58,910
these sorts of devices and some of the

86
00:03:56,489 --> 00:04:04,130
stuff<font color="#E5E5E5"> i started to see was things like</font>

87
00:03:58,910 --> 00:04:04,130
lizard squad creating an IOT botnet

88
00:04:04,250 --> 00:04:12,450
several hacker groups creating<font color="#CCCCCC"> webcam</font>

89
00:04:07,230 --> 00:04:16,200
malware IOT device has<font color="#CCCCCC"> been used in</font><font color="#E5E5E5"> de</font>

90
00:04:12,450 --> 00:04:19,579
<font color="#E5E5E5">dos nets and then more recently how a</font>

91
00:04:16,200 --> 00:04:24,060
vulnerability in some dealing IP cameras

92
00:04:19,579 --> 00:04:26,909
affected over 400,000 devices and they

93
00:04:24,060 --> 00:04:30,180
<font color="#E5E5E5">these could be trivially compromised so</font>

94
00:04:26,910 --> 00:04:36,180
this hopefully reinforces why

95
00:04:30,180 --> 00:04:38,910
IT security is a bit of a<font color="#CCCCCC"> problem so the</font>

96
00:04:36,180 --> 00:04:42,389
first device we looked at is this

97
00:04:38,910 --> 00:04:44,960
hikvision DVR<font color="#E5E5E5"> and this was one</font><font color="#CCCCCC"> of the</font>

98
00:04:42,389 --> 00:04:49,860
devices<font color="#E5E5E5"> that I got installed at my house</font>

99
00:04:44,960 --> 00:04:51,270
and as I say that this was something

100
00:04:49,860 --> 00:04:53,880
that I started looking at round about

101
00:04:51,270 --> 00:04:57,270
two years ago this<font color="#E5E5E5"> is what the DVR</font>

102
00:04:53,880 --> 00:04:59,159
system<font color="#CCCCCC"> looks like if you're passing</font><font color="#E5E5E5"> as</font>

103
00:04:57,270 --> 00:05:00,960
you leave the<font color="#CCCCCC"> room you can have a look</font>

104
00:04:59,160 --> 00:05:03,539
<font color="#E5E5E5">at it</font><font color="#CCCCCC"> here this is the DVR down here</font>

105
00:05:00,960 --> 00:05:05,909
we've taken it<font color="#E5E5E5"> to pieces we've got a</font>

106
00:05:03,539 --> 00:05:06,930
<font color="#E5E5E5">UART console connected to it so you can</font>

107
00:05:05,910 --> 00:05:13,020
have a look<font color="#E5E5E5"> at the internals of the</font>

108
00:05:06,930 --> 00:05:16,080
board the hikvision DVR basically

109
00:05:13,020 --> 00:05:18,090
provides all the recording and

110
00:05:16,080 --> 00:05:22,349
management functionality for the CCTV

111
00:05:18,090 --> 00:05:23,758
cameras we as I say<font color="#CCCCCC"> we first started</font>

112
00:05:22,349 --> 00:05:25,710
looking at this about two years ago and

113
00:05:23,759 --> 00:05:29,789
so some of the<font color="#E5E5E5"> bugs have actually been</font>

114
00:05:25,710 --> 00:05:31,830
fixed and the first version that I was

115
00:05:29,789 --> 00:05:36,090
given<font color="#CCCCCC"> when they installed at my house</font>

116
00:05:31,830 --> 00:05:37,620
was version 3.0 one of the<font color="#E5E5E5"> firmware</font>

117
00:05:36,090 --> 00:05:41,580
which is where most<font color="#E5E5E5"> of our books have</font>

118
00:05:37,620 --> 00:05:44,880
been sort of researched but it's worth

119
00:05:41,580 --> 00:05:48,300
noting that actually the firmware

120
00:05:44,880 --> 00:05:50,099
upgrade process is is a manual thing so

121
00:05:48,300 --> 00:05:53,280
you've actually<font color="#E5E5E5"> got to go to hit visions</font>

122
00:05:50,099 --> 00:05:55,440
and website you've got to find the right

123
00:05:53,280 --> 00:05:57,780
<font color="#CCCCCC">version of the firmware based on the</font>

124
00:05:55,440 --> 00:06:00,060
model of<font color="#E5E5E5"> the device that you've got and</font>

125
00:05:57,780 --> 00:06:01,590
so what I actually think in reality is a

126
00:06:00,060 --> 00:06:03,960
lot<font color="#E5E5E5"> of these devices that are out there</font>

127
00:06:01,590 --> 00:06:05,520
are kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> SAT and forget they're</font>

128
00:06:03,960 --> 00:06:09,090
probably just still sitting<font color="#CCCCCC"> there on the</font>

129
00:06:05,520 --> 00:06:11,789
<font color="#E5E5E5">internet with the whatever version of</font>

130
00:06:09,090 --> 00:06:13,799
the firmware it was shipped with and i

131
00:06:11,789 --> 00:06:15,539
can tell you actually<font color="#E5E5E5"> so on the next</font>

132
00:06:13,800 --> 00:06:16,860
slide you'll see some the amount of

133
00:06:15,539 --> 00:06:19,460
devices that<font color="#E5E5E5"> are out there I've just</font>

134
00:06:16,860 --> 00:06:22,229
casually browse to a couple<font color="#E5E5E5"> of them</font>

135
00:06:19,460 --> 00:06:24,870
obviously not touch them because you

136
00:06:22,229 --> 00:06:27,240
know I'm a professional and but they are

137
00:06:24,870 --> 00:06:30,180
like avoiding like ancient versions of

138
00:06:27,240 --> 00:06:32,699
the<font color="#E5E5E5"> firmware under the hood this device</font>

139
00:06:30,180 --> 00:06:38,070
is pretty<font color="#E5E5E5"> much just embedded Linux and</font>

140
00:06:32,699 --> 00:06:39,120
with busy box on top so um how<font color="#CCCCCC"> many of</font>

141
00:06:38,070 --> 00:06:40,919
these devices<font color="#E5E5E5"> are actually out there</font>

142
00:06:39,120 --> 00:06:43,950
well as you can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> they're actually</font>

143
00:06:40,919 --> 00:06:45,210
pretty prevalent I had a look<font color="#CCCCCC"> on shodhan</font>

144
00:06:43,950 --> 00:06:47,190
and it reckon there was at least one

145
00:06:45,210 --> 00:06:50,669
<font color="#CCCCCC">hundred and sixteen thousand in the</font><font color="#E5E5E5"> US</font>

146
00:06:47,190 --> 00:06:53,130
alone so if you are<font color="#CCCCCC"> interested in making</font>

147
00:06:50,670 --> 00:07:02,700
an IOT botnet this device is probably a

148
00:06:53,130 --> 00:07:05,370
good starting<font color="#E5E5E5"> point so the way the</font>

149
00:07:02,700 --> 00:07:08,789
device<font color="#E5E5E5"> works is essentially it's managed</font>

150
00:07:05,370 --> 00:07:11,760
fire either a mobile application or your

151
00:07:08,790 --> 00:07:13,910
web browser browse to<font color="#CCCCCC"> the you know the</font>

152
00:07:11,760 --> 00:07:16,980
default landing page of the device

153
00:07:13,910 --> 00:07:19,350
<font color="#E5E5E5">authentication and for the device is um</font>

154
00:07:16,980 --> 00:07:21,720
you know as<font color="#E5E5E5"> you would expect basic user</font>

155
00:07:19,350 --> 00:07:23,820
name<font color="#E5E5E5"> and password the default</font>

156
00:07:21,720 --> 00:07:26,940
credentials for the device saw admin and

157
00:07:23,820 --> 00:07:29,550
one two three four<font color="#CCCCCC"> five once you're into</font>

158
00:07:26,940 --> 00:07:32,130
the web application is then possible to

159
00:07:29,550 --> 00:07:34,350
enable the telnet service and you can

160
00:07:32,130 --> 00:07:36,300
<font color="#CCCCCC">log into</font><font color="#E5E5E5"> the device as root and the</font>

161
00:07:34,350 --> 00:07:40,590
password is<font color="#E5E5E5"> whatever you've said it to</font>

162
00:07:36,300 --> 00:07:42,570
on the web<font color="#CCCCCC"> ins face so far so good one</font>

163
00:07:40,590 --> 00:07:44,669
of the kind of most obvious tribulus

164
00:07:42,570 --> 00:07:46,440
trivial issues that we noticed<font color="#E5E5E5"> when we</font>

165
00:07:44,670 --> 00:07:48,090
<font color="#E5E5E5">were looking at this device was there</font>

166
00:07:46,440 --> 00:07:50,130
was no<font color="#E5E5E5"> kind of account lockout</font><font color="#CCCCCC"> on the</font>

167
00:07:48,090 --> 00:07:53,000
web<font color="#CCCCCC"> interface which meant</font><font color="#E5E5E5"> you could</font>

168
00:07:50,130 --> 00:07:54,870
trivially brute force the authentication

169
00:07:53,000 --> 00:07:57,450
maybe that's not a problem in itself

170
00:07:54,870 --> 00:08:01,590
because um when you configure the device

171
00:07:57,450 --> 00:08:07,800
<font color="#E5E5E5">you set it up you</font><font color="#CCCCCC"> are actually forced to</font>

172
00:08:01,590 --> 00:08:10,469
reset the password however unfortunately

173
00:08:07,800 --> 00:08:14,130
it actually only allows you to reset<font color="#CCCCCC"> it</font>

174
00:08:10,470 --> 00:08:17,130
to another numeric value which as you

175
00:08:14,130 --> 00:08:23,630
<font color="#CCCCCC">can guess is trivia brute force well so</font>

176
00:08:17,130 --> 00:08:26,060
<font color="#E5E5E5">I will just quickly show a</font><font color="#CCCCCC"> demo of this</font>

177
00:08:23,630 --> 00:08:38,010
hopefully if everything goes to plan

178
00:08:26,060 --> 00:08:39,330
awesome<font color="#CCCCCC"> okay cool so um because</font><font color="#E5E5E5"> if I</font>

179
00:08:38,010 --> 00:08:44,720
could just pin<font color="#E5E5E5"> this I could use both</font>

180
00:08:39,330 --> 00:08:44,720
hands I<font color="#E5E5E5"> bear with me two seconds</font>

181
00:08:51,759 --> 00:08:56,689
also the device is up which is a good

182
00:08:54,379 --> 00:08:58,790
good<font color="#E5E5E5"> starting point so this is</font><font color="#CCCCCC"> the</font>

183
00:08:56,689 --> 00:09:00,559
<font color="#E5E5E5">device down here it's powered on I'm</font>

184
00:08:58,790 --> 00:09:08,899
going<font color="#E5E5E5"> to try and do this as a live demo</font>

185
00:09:00,559 --> 00:09:10,910
so creates the demo gods so I've got a

186
00:09:08,899 --> 00:09:15,379
<font color="#E5E5E5">little our Python script which should</font>

187
00:09:10,910 --> 00:09:18,290
fingers crossed just brute force the

188
00:09:15,379 --> 00:09:19,670
password for<font color="#E5E5E5"> the device and I've not</font>

189
00:09:18,290 --> 00:09:23,389
modded the password it's actually just

190
00:09:19,670 --> 00:09:24,889
set to the default at the moment but if

191
00:09:23,389 --> 00:09:26,449
the passwords were set something else<font color="#E5E5E5"> it</font>

192
00:09:24,889 --> 00:09:29,319
should hopefully find it and<font color="#CCCCCC"> you can see</font>

193
00:09:26,449 --> 00:09:32,179
it's running through the brute force<font color="#CCCCCC"> now</font>

194
00:09:29,319 --> 00:09:34,339
my little python script should I sit

195
00:09:32,179 --> 00:09:36,379
densified the password it'll connect to

196
00:09:34,339 --> 00:09:38,240
the web service enable telnet<font color="#E5E5E5"> d and then</font>

197
00:09:36,379 --> 00:09:41,689
it will kick off a telnet session and

198
00:09:38,240 --> 00:09:48,529
show you a remote root shell this is

199
00:09:41,689 --> 00:09:49,939
where you blood I good so that's<font color="#CCCCCC"> the air</font>

200
00:09:48,529 --> 00:09:55,759
the first first root shell of the day

201
00:09:49,939 --> 00:10:00,879
there are more<font color="#E5E5E5"> to</font><font color="#CCCCCC"> come so yeah this was</font>

202
00:09:55,759 --> 00:10:00,879
the first first device we look sense

203
00:10:06,549 --> 00:10:15,559
this<font color="#CCCCCC"> is where you rely on PowerPoint ah</font>

204
00:10:09,049 --> 00:10:18,230
there we go awesome cool so um this was

205
00:10:15,559 --> 00:10:20,509
something that<font color="#E5E5E5"> I spotted roughly two</font>

206
00:10:18,230 --> 00:10:22,490
years ago and didn't<font color="#E5E5E5"> really think it was</font>

207
00:10:20,509 --> 00:10:24,259
much of a big deal to be honest I didn't

208
00:10:22,490 --> 00:10:25,579
actually at the time no harming devices

209
00:10:24,259 --> 00:10:30,499
of these were sitting on<font color="#E5E5E5"> the internet</font>

210
00:10:25,579 --> 00:10:33,920
but so um we started to kind of put

211
00:10:30,499 --> 00:10:35,269
<font color="#E5E5E5">together some data and you know slides</font>

212
00:10:33,920 --> 00:10:36,740
for this<font color="#E5E5E5"> talk and then I remembered oh</font>

213
00:10:35,269 --> 00:10:39,589
yeah I've got<font color="#CCCCCC"> this vision device that's</font>

214
00:10:36,740 --> 00:10:42,170
massively vulnerable but I couldn't

215
00:10:39,589 --> 00:10:44,329
actually remember what the I'd set the

216
00:10:42,170 --> 00:10:49,910
credentials for when we came to look<font color="#E5E5E5"> at</font>

217
00:10:44,329 --> 00:10:51,229
<font color="#E5E5E5">it um so um and yeah I just couldn't</font>

218
00:10:49,910 --> 00:10:52,549
find the brute<font color="#E5E5E5"> force</font><font color="#CCCCCC"> script anywhere</font>

219
00:10:51,230 --> 00:10:54,559
that I'd written when the guy was

220
00:10:52,549 --> 00:10:56,240
installing at least this this the script

221
00:10:54,559 --> 00:10:57,390
<font color="#E5E5E5">that I've just</font><font color="#CCCCCC"> run now literally I had</font>

222
00:10:56,240 --> 00:10:59,190
the guy at my house

223
00:10:57,390 --> 00:11:00,990
and he was like<font color="#E5E5E5"> oh yeah k can i plug</font>

224
00:10:59,190 --> 00:11:02,250
this into your LAN as<font color="#CCCCCC"> i can</font><font color="#E5E5E5"> gonna look</font>

225
00:11:00,990 --> 00:11:03,960
at it and while he was setting up I

226
00:11:02,250 --> 00:11:05,280
wrote<font color="#CCCCCC"> this little python script which</font>

227
00:11:03,960 --> 00:11:09,290
brute force<font color="#E5E5E5"> sounds like you're not</font>

228
00:11:05,280 --> 00:11:12,120
plugging this thing into my network so

229
00:11:09,290 --> 00:11:13,500
yeah effectively basically when we came

230
00:11:12,120 --> 00:11:15,180
to<font color="#E5E5E5"> this research I didn't have any of</font>

231
00:11:13,500 --> 00:11:17,700
<font color="#CCCCCC">the</font><font color="#E5E5E5"> data because it was kind of like two</font>

232
00:11:15,180 --> 00:11:19,260
years ago south or I<font color="#E5E5E5"> okay maybe I just</font>

233
00:11:17,700 --> 00:11:21,000
left<font color="#E5E5E5"> the password as the default</font>

234
00:11:19,260 --> 00:11:22,620
password<font color="#CCCCCC"> I thought I'll just</font><font color="#E5E5E5"> do a quick</font>

235
00:11:21,000 --> 00:11:25,860
Google find out what the default creds

236
00:11:22,620 --> 00:11:29,820
are no log onto the device so<font color="#E5E5E5"> I looked</font>

237
00:11:25,860 --> 00:11:32,400
around and stumbled on the vision manual

238
00:11:29,820 --> 00:11:33,990
for this<font color="#E5E5E5"> device and what I found was</font>

239
00:11:32,400 --> 00:11:36,090
there was actually a supported way to

240
00:11:33,990 --> 00:11:37,890
reset<font color="#E5E5E5"> the password and which kind of</font>

241
00:11:36,090 --> 00:11:40,230
caught my attention as i zoom<font color="#E5E5E5"> in a</font>

242
00:11:37,890 --> 00:11:42,020
supportive way to reset the password so

243
00:11:40,230 --> 00:11:46,460
<font color="#CCCCCC">I started looking</font><font color="#E5E5E5"> into it and</font>

244
00:11:42,020 --> 00:11:49,380
effectively the way the kind of password

245
00:11:46,460 --> 00:11:50,700
reset process works is this is a tool

246
00:11:49,380 --> 00:11:54,090
that you can just download from hit

247
00:11:50,700 --> 00:11:56,670
revisions website it's called the heat

248
00:11:54,090 --> 00:11:58,260
vision support tool and effectively if

249
00:11:56,670 --> 00:12:01,319
you're on<font color="#CCCCCC"> the same one as the device it</font>

250
00:11:58,260 --> 00:12:04,410
will give you the serial number and the

251
00:12:01,320 --> 00:12:05,970
start time of the device and<font color="#CCCCCC"> then what</font>

252
00:12:04,410 --> 00:12:08,160
<font color="#E5E5E5">you need to do you take the start time</font>

253
00:12:05,970 --> 00:12:10,230
<font color="#E5E5E5">and you take the serial number</font><font color="#CCCCCC"> you call</font>

254
00:12:08,160 --> 00:12:11,969
a pic vision you say<font color="#CCCCCC"> ok I want</font><font color="#E5E5E5"> to reset</font>

255
00:12:10,230 --> 00:12:13,830
my password and they give<font color="#E5E5E5"> you a code</font>

256
00:12:11,970 --> 00:12:16,890
which allows you to change the<font color="#E5E5E5"> password</font>

257
00:12:13,830 --> 00:12:18,840
on the device now obviously this is a

258
00:12:16,890 --> 00:12:20,250
bit of a<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> because if hikvision</font>

259
00:12:18,840 --> 00:12:22,290
can reset the password<font color="#CCCCCC"> on your device</font>

260
00:12:20,250 --> 00:12:24,570
then anybody<font color="#E5E5E5"> who's actually able to</font>

261
00:12:22,290 --> 00:12:28,770
reverse the algorithm can also reset the

262
00:12:24,570 --> 00:12:31,140
<font color="#E5E5E5">password so it turns out actually</font>

263
00:12:28,770 --> 00:12:32,400
somebody<font color="#E5E5E5"> who has reversed the algorithm</font>

264
00:12:31,140 --> 00:12:34,590
and I didn't<font color="#E5E5E5"> actually need to do any</font>

265
00:12:32,400 --> 00:12:37,439
research on this I<font color="#CCCCCC"> just needed to go to</font>

266
00:12:34,590 --> 00:12:41,250
IP<font color="#CCCCCC"> can talk so effectively these guys</font>

267
00:12:37,440 --> 00:12:43,740
had pretty much reverse the process they

268
00:12:41,250 --> 00:12:46,560
found<font color="#E5E5E5"> out</font><font color="#CCCCCC"> that a fat city it was a very</font>

269
00:12:43,740 --> 00:12:49,560
<font color="#E5E5E5">simple pitch shifting algorithm you just</font>

270
00:12:46,560 --> 00:12:52,260
fed in the serial number the date the

271
00:12:49,560 --> 00:12:55,319
device booted and it did a<font color="#E5E5E5"> little bit of</font>

272
00:12:52,260 --> 00:12:56,610
bit shifting and<font color="#E5E5E5"> will give you a reset</font>

273
00:12:55,320 --> 00:12:58,100
code that you could put into the<font color="#E5E5E5"> device</font>

274
00:12:56,610 --> 00:13:01,170
and<font color="#E5E5E5"> you could reset the password and</font>

275
00:12:58,100 --> 00:13:02,850
<font color="#CCCCCC">they</font><font color="#E5E5E5"> provided a little they're basically</font>

276
00:13:01,170 --> 00:13:05,189
they've reimplemented this in JavaScript

277
00:13:02,850 --> 00:13:06,630
you can browse their website and any of

278
00:13:05,190 --> 00:13:08,220
these devices<font color="#E5E5E5"> that are online you can</font>

279
00:13:06,630 --> 00:13:11,189
effectively reset the password on them

280
00:13:08,220 --> 00:13:18,210
which obviously totally undermines the

281
00:13:11,190 --> 00:13:20,670
need for<font color="#E5E5E5"> an occasion the other thing</font>

282
00:13:18,210 --> 00:13:22,710
that I'm kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> I raised an eyebrow</font>

283
00:13:20,670 --> 00:13:25,520
about while I was reviewing the manual

284
00:13:22,710 --> 00:13:29,010
first device was actually there's also a

285
00:13:25,520 --> 00:13:32,040
supported way to remotely install some

286
00:13:29,010 --> 00:13:35,689
new firmware so essentially<font color="#E5E5E5"> when the</font>

287
00:13:32,040 --> 00:13:38,040
device boots when you turn<font color="#CCCCCC"> it on it</font>

288
00:13:35,690 --> 00:13:43,260
<font color="#E5E5E5">connects to this magic IP address which</font>

289
00:13:38,040 --> 00:13:44,520
is<font color="#CCCCCC"> 192 00 dot 1280 and it will try</font><font color="#E5E5E5"> and</font>

290
00:13:43,260 --> 00:13:46,140
connect to this IP address on it will

291
00:13:44,520 --> 00:13:51,569
try and<font color="#E5E5E5"> download a new firmware image</font>

292
00:13:46,140 --> 00:13:54,780
fire tftp so and the firmware image it

293
00:13:51,570 --> 00:13:56,610
downloads is completely unsigned it

294
00:13:54,780 --> 00:13:59,339
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> just it just checks the</font>

295
00:13:56,610 --> 00:14:01,110
checksum within the firmware image so

296
00:13:59,340 --> 00:14:03,870
obviously if<font color="#E5E5E5"> you're on</font><font color="#CCCCCC"> the same line as</font>

297
00:14:01,110 --> 00:14:05,940
this device and you can cause a denial

298
00:14:03,870 --> 00:14:08,250
of service condition in the device it's

299
00:14:05,940 --> 00:14:10,230
got a software watchdog on it if<font color="#E5E5E5"> you can</font>

300
00:14:08,250 --> 00:14:12,120
trigger the software watchdog the<font color="#CCCCCC"> device</font>

301
00:14:10,230 --> 00:14:14,070
will reboot and when if you're on<font color="#E5E5E5"> the</font>

302
00:14:12,120 --> 00:14:16,260
same line is it just set your IP to 192

303
00:14:14,070 --> 00:14:18,690
00 at once wait and it will<font color="#E5E5E5"> download a</font>

304
00:14:16,260 --> 00:14:21,360
firmware image from you which gives you

305
00:14:18,690 --> 00:14:24,180
a nice little way to install a kind<font color="#E5E5E5"> of a</font>

306
00:14:21,360 --> 00:14:27,960
persistent back door on the device if

307
00:14:24,180 --> 00:14:31,170
you<font color="#CCCCCC"> are interested in doing assessments</font>

308
00:14:27,960 --> 00:14:33,660
of these devices it is<font color="#E5E5E5"> pretty useful to</font>

309
00:14:31,170 --> 00:14:35,130
have a command shell so you can do this

310
00:14:33,660 --> 00:14:39,030
<font color="#E5E5E5">quite easily because the device is</font>

311
00:14:35,130 --> 00:14:40,740
shipped with a you are port enabled all

312
00:14:39,030 --> 00:14:44,850
you need to<font color="#CCCCCC"> do to get a UART command</font>

313
00:14:40,740 --> 00:14:48,360
shell is basically just<font color="#E5E5E5"> have a small</font>

314
00:14:44,850 --> 00:14:50,940
female molex connector or you can solder

315
00:14:48,360 --> 00:14:53,700
directly to the pins which is what we

316
00:14:50,940 --> 00:14:57,630
ended up doing and when<font color="#E5E5E5"> the device boots</font>

317
00:14:53,700 --> 00:14:59,760
up you'll get<font color="#E5E5E5"> a crunch</font><font color="#CCCCCC"> Oh on the UART</font>

318
00:14:57,630 --> 00:15:01,560
console what you'll find is the device

319
00:14:59,760 --> 00:15:05,760
actually gives you access as a guest

320
00:15:01,560 --> 00:15:07,319
user but as I've already mentioned we

321
00:15:05,760 --> 00:15:09,240
know<font color="#CCCCCC"> that the root password is the same</font>

322
00:15:07,320 --> 00:15:12,960
as<font color="#E5E5E5"> whatever the up mean pin is set to</font>

323
00:15:09,240 --> 00:15:16,589
and the default is<font color="#CCCCCC"> 1 2 3 4 5 so this is</font>

324
00:15:12,960 --> 00:15:22,110
what effectively how we got the UART

325
00:15:16,589 --> 00:15:24,120
shell and basically what you can

326
00:15:22,110 --> 00:15:25,080
probably<font color="#E5E5E5"> see</font><font color="#CCCCCC"> is we use the jtag you</font>

327
00:15:24,120 --> 00:15:29,850
later

328
00:15:25,080 --> 00:15:35,130
<font color="#E5E5E5">in past in</font><font color="#CCCCCC"> uart</font><font color="#E5E5E5"> pass mode and the pink</font>

329
00:15:29,850 --> 00:15:37,200
<font color="#E5E5E5">configuration was red is ground orange</font>

330
00:15:35,130 --> 00:15:41,580
is transmitted and yellow is received

331
00:15:37,200 --> 00:15:43,590
and if you connect the connector device

332
00:15:41,580 --> 00:15:47,130
with this<font color="#E5E5E5"> configuration you should get a</font>

333
00:15:43,590 --> 00:15:49,470
<font color="#E5E5E5">commercial so Matt will just give you a</font>

334
00:15:47,130 --> 00:15:54,630
quick<font color="#E5E5E5"> run through of the next device</font>

335
00:15:49,470 --> 00:15:56,370
that we looked at so so Dominic

336
00:15:54,630 --> 00:15:59,460
installed an alarm system to stop people

337
00:15:56,370 --> 00:16:00,870
<font color="#E5E5E5">like me breaking into his house so we</font>

338
00:15:59,460 --> 00:16:03,330
decided we take a<font color="#E5E5E5"> look at it which was</font>

339
00:16:00,870 --> 00:16:05,400
essentially it's a wireless alarm system

340
00:16:03,330 --> 00:16:08,250
manufactured by a company called risco

341
00:16:05,400 --> 00:16:11,090
agility it's basically a general-purpose

342
00:16:08,250 --> 00:16:13,740
computer that has a number of sensors

343
00:16:11,090 --> 00:16:16,200
installed around his home for motion and

344
00:16:13,740 --> 00:16:18,480
shock detection it's quite typical of

345
00:16:16,200 --> 00:16:20,430
what you see in a consumer consumer home

346
00:16:18,480 --> 00:16:22,590
alarm system or small business premises

347
00:16:20,430 --> 00:16:24,420
system it's not<font color="#E5E5E5"> really</font><font color="#CCCCCC"> the type of thing</font>

348
00:16:22,590 --> 00:16:26,220
you<font color="#CCCCCC"> see in a banking branch or anything</font>

349
00:16:24,420 --> 00:16:29,729
like that but<font color="#E5E5E5"> certainly for the home</font>

350
00:16:26,220 --> 00:16:32,010
environment this this device<font color="#CCCCCC"> has a</font>

351
00:16:29,730 --> 00:16:35,370
number of fobs which essentially is a

352
00:16:32,010 --> 00:16:37,110
wireless key fob a proximity fob that's

353
00:16:35,370 --> 00:16:39,960
used for disabling the alarm telling

354
00:16:37,110 --> 00:16:42,510
them<font color="#E5E5E5"> off and then also you have a keypad</font>

355
00:16:39,960 --> 00:16:44,720
system for inputting a<font color="#E5E5E5"> pin code return</font>

356
00:16:42,510 --> 00:16:46,860
for turning the alarm on and off again

357
00:16:44,720 --> 00:16:48,450
and what we're<font color="#E5E5E5"> seeing is a lot of</font>

358
00:16:46,860 --> 00:16:50,160
wireless connectivity is increasingly

359
00:16:48,450 --> 00:16:51,810
being targeted these days due to the

360
00:16:50,160 --> 00:16:53,880
cheap and readily available<font color="#CCCCCC"> access of</font>

361
00:16:51,810 --> 00:16:57,900
<font color="#E5E5E5">general purpose radios or software</font>

362
00:16:53,880 --> 00:17:00,210
defined radio platforms so this is

363
00:16:57,900 --> 00:17:03,150
effectively<font color="#CCCCCC"> the alarm system that he</font>

364
00:17:00,210 --> 00:17:05,220
installed you can see here the the<font color="#CCCCCC"> main</font>

365
00:17:03,150 --> 00:17:09,000
panel is effectively where the

366
00:17:05,220 --> 00:17:10,500
microprocessor is the various sensors on

367
00:17:09,000 --> 00:17:12,930
<font color="#CCCCCC">the left here you got a shock sensor and</font>

368
00:17:10,500 --> 00:17:14,160
a motion sensor that wirelessly sending

369
00:17:12,930 --> 00:17:16,050
a signal if they're breached and they

370
00:17:14,160 --> 00:17:18,330
change the signal<font color="#CCCCCC"> its</font><font color="#E5E5E5"> and since the</font>

371
00:17:16,050 --> 00:17:20,579
alarm has been tripped and<font color="#E5E5E5"> you also have</font>

372
00:17:18,329 --> 00:17:23,099
<font color="#E5E5E5">the keypad there from a physical point</font>

373
00:17:20,579 --> 00:17:24,958
of view if you're using a UV light and

374
00:17:23,099 --> 00:17:26,909
some fingerprint powder and<font color="#CCCCCC"> you could</font>

375
00:17:24,959 --> 00:17:29,760
kind<font color="#E5E5E5"> of target the keypad but we wanted</font>

376
00:17:26,910 --> 00:17:31,100
<font color="#CCCCCC">to look at the</font><font color="#E5E5E5"> the wireless connectivity</font>

377
00:17:29,760 --> 00:17:34,920
in<font color="#E5E5E5"> particular we wanted to look at</font>

378
00:17:31,100 --> 00:17:38,070
<font color="#CCCCCC">dominicks wireless fob so we took apart</font>

379
00:17:34,920 --> 00:17:38,880
the user documentation and actually

380
00:17:38,070 --> 00:17:40,679
there wasn't any<font color="#E5E5E5"> f</font>

381
00:17:38,880 --> 00:17:42,330
<font color="#E5E5E5">CID which is normally where would start</font>

382
00:17:40,680 --> 00:17:44,790
for this instead when we opened up the

383
00:17:42,330 --> 00:17:47,520
the pdfs and manuals we found that

384
00:17:44,790 --> 00:17:49,020
<font color="#CCCCCC">actually listed the frequency that it</font>

385
00:17:47,520 --> 00:17:51,300
was in new song which<font color="#CCCCCC"> is part of the is</font>

386
00:17:49,020 --> 00:17:53,250
embalmed here in the UK which was<font color="#CCCCCC"> eight</font>

387
00:17:51,300 --> 00:17:55,440
<font color="#CCCCCC">six eight megahertz and even mentioned</font>

388
00:17:53,250 --> 00:17:57,120
that it was using a rolling code so<font color="#E5E5E5"> we</font>

389
00:17:55,440 --> 00:17:59,130
kind of already had an idea of where

390
00:17:57,120 --> 00:18:01,350
abouts in the radio spectrum<font color="#E5E5E5"> this</font>

391
00:17:59,130 --> 00:18:03,990
particular transmitter would be and but

392
00:18:01,350 --> 00:18:07,230
we opened it<font color="#E5E5E5"> up anyway and</font><font color="#CCCCCC"> this is the</font>

393
00:18:03,990 --> 00:18:09,930
<font color="#E5E5E5">inside of the wireless fob and you</font>

394
00:18:07,230 --> 00:18:13,980
effectively have a very few components

395
00:18:09,930 --> 00:18:18,900
as a crystal oscillator and<font color="#E5E5E5"> then this</font><font color="#CCCCCC"> th</font>

396
00:18:13,980 --> 00:18:21,240
<font color="#CCCCCC">720 32 transmitter transceiver which is</font>

397
00:18:18,900 --> 00:18:23,040
basically in the datasheet tells us what

398
00:18:21,240 --> 00:18:25,320
the modulation was which was amplitude

399
00:18:23,040 --> 00:18:28,500
shift keying and<font color="#CCCCCC"> it could modulate data</font>

400
00:18:25,320 --> 00:18:30,240
up to 40 kilobits<font color="#E5E5E5"> a second and</font>

401
00:18:28,500 --> 00:18:31,470
essentially when we review through that

402
00:18:30,240 --> 00:18:33,330
data sheet we<font color="#CCCCCC"> determined that</font><font color="#E5E5E5"> there was</font>

403
00:18:31,470 --> 00:18:35,490
no other modulation supported by this

404
00:18:33,330 --> 00:18:38,070
chipset so we knew vaguely whereabouts

405
00:18:35,490 --> 00:18:41,180
it was in the radio spectrum and we also

406
00:18:38,070 --> 00:18:45,600
know the modulation type that was in use

407
00:18:41,180 --> 00:18:48,060
so we took a hack RF or you could<font color="#E5E5E5"> use</font>

408
00:18:45,600 --> 00:18:50,189
another SDR and we basically<font color="#E5E5E5"> did an FFT</font>

409
00:18:48,060 --> 00:18:52,139
plot press the button to try and

410
00:18:50,190 --> 00:18:54,330
determine the frequency and then once we

411
00:18:52,140 --> 00:18:56,870
knew that we basically knocked together

412
00:18:54,330 --> 00:18:59,399
this little new radio flow graph and

413
00:18:56,870 --> 00:19:01,500
essentially all this is doing is it

414
00:18:59,400 --> 00:19:04,320
takes the<font color="#CCCCCC"> the input source for the radio</font>

415
00:19:01,500 --> 00:19:06,660
<font color="#CCCCCC">spectrum and it's just slightly off from</font>

416
00:19:04,320 --> 00:19:09,000
where the transmitter<font color="#E5E5E5"> is and it does so</font>

417
00:19:06,660 --> 00:19:11,040
<font color="#E5E5E5">math to move the signal</font><font color="#CCCCCC"> to the center</font>

418
00:19:09,000 --> 00:19:13,140
<font color="#E5E5E5">point of the flow graph and we</font><font color="#CCCCCC"> then</font>

419
00:19:11,040 --> 00:19:14,700
feedback through a bandpass filter so

420
00:19:13,140 --> 00:19:16,680
<font color="#CCCCCC">that we remove the unwanted part of the</font>

421
00:19:14,700 --> 00:19:18,990
radio spectrum and then we<font color="#E5E5E5"> take the</font>

422
00:19:16,680 --> 00:19:21,570
complex signal and convert it to a

423
00:19:18,990 --> 00:19:24,300
magnitude so we get the actual amplitude

424
00:19:21,570 --> 00:19:25,350
of the the waveform weary sample<font color="#E5E5E5"> that</font>

425
00:19:24,300 --> 00:19:28,350
down to something<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> could then</font>

426
00:19:25,350 --> 00:19:30,179
here<font color="#E5E5E5"> and then we also we added a</font>

427
00:19:28,350 --> 00:19:32,790
multiplier value to it so that<font color="#E5E5E5"> we could</font>

428
00:19:30,180 --> 00:19:35,850
get an increased visual of what the

429
00:19:32,790 --> 00:19:37,940
waveform actually looked<font color="#CCCCCC"> like so using</font>

430
00:19:35,850 --> 00:19:40,620
that<font color="#E5E5E5"> we could effectively capture a</font>

431
00:19:37,940 --> 00:19:43,350
signal from the from<font color="#CCCCCC"> the wireless press</font>

432
00:19:40,620 --> 00:19:45,570
and and this is basically<font color="#E5E5E5"> what you saw</font>

433
00:19:43,350 --> 00:19:48,060
when when<font color="#CCCCCC"> you press a button</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you</font>

434
00:19:45,570 --> 00:19:50,070
would see these bursts of data which

435
00:19:48,060 --> 00:19:52,230
basically there was eight bursts<font color="#E5E5E5"> per</font>

436
00:19:50,070 --> 00:19:52,770
button press which is<font color="#E5E5E5"> just basically the</font>

437
00:19:52,230 --> 00:19:54,750
ones and

438
00:19:52,770 --> 00:19:56,879
arrows of the<font color="#E5E5E5"> rolling code being</font>

439
00:19:54,750 --> 00:19:57,990
transmitted and because would increase

440
00:19:56,880 --> 00:20:01,380
the<font color="#E5E5E5"> magnitude we could actually have a</font>

441
00:19:57,990 --> 00:20:02,790
look at the<font color="#CCCCCC"> the modulation scheme so the</font>

442
00:20:01,380 --> 00:20:04,440
<font color="#CCCCCC">fact that its amplitude shift keying</font>

443
00:20:02,790 --> 00:20:07,350
what that means is that the the

444
00:20:04,440 --> 00:20:09,420
<font color="#E5E5E5">amplitude of the wave form is increased</font>

445
00:20:07,350 --> 00:20:11,790
depending or decrease depending on

446
00:20:09,420 --> 00:20:17,280
whether it's a 0<font color="#E5E5E5"> or a 1 so you have here</font>

447
00:20:11,790 --> 00:20:19,830
this 0 0 1 1 1 1 0 0 1 so effectively

448
00:20:17,280 --> 00:20:21,870
using that flow graph<font color="#CCCCCC"> a</font><font color="#E5E5E5"> tool like board</font>

449
00:20:19,830 --> 00:20:23,909
line and knowing the timing we could

450
00:20:21,870 --> 00:20:25,139
actually capture back that signal and I

451
00:20:23,910 --> 00:20:28,380
have a look<font color="#E5E5E5"> at the code that</font><font color="#CCCCCC"> was being</font>

452
00:20:25,140 --> 00:20:29,610
transmitted to his alarm equally<font color="#CCCCCC"> because</font>

453
00:20:28,380 --> 00:20:31,670
we knew it was a rolling code actually

454
00:20:29,610 --> 00:20:34,199
turned out<font color="#CCCCCC"> to be quite a trivial thing</font>

455
00:20:31,670 --> 00:20:36,120
to sort<font color="#E5E5E5"> of jam and replay this is a</font>

456
00:20:34,200 --> 00:20:37,860
known attack against rolling codes in

457
00:20:36,120 --> 00:20:39,840
that if you capture a rolling code

458
00:20:37,860 --> 00:20:41,340
offline or you<font color="#E5E5E5"> Jam someone's</font>

459
00:20:39,840 --> 00:20:43,500
transmission and capture their code and

460
00:20:41,340 --> 00:20:46,530
then replay it back to the device<font color="#E5E5E5"> and</font>

461
00:20:43,500 --> 00:20:48,690
you<font color="#E5E5E5"> essentially can can replay that</font>

462
00:20:46,530 --> 00:20:50,280
signal back and then cause<font color="#CCCCCC"> the alarm or</font>

463
00:20:48,690 --> 00:20:53,130
the other system that's expecting it to

464
00:20:50,280 --> 00:20:54,480
to to<font color="#CCCCCC"> to act</font><font color="#E5E5E5"> this is a new radio flow</font>

465
00:20:53,130 --> 00:20:57,480
graph that just takes the baseband

466
00:20:54,480 --> 00:21:00,390
sample and replays it it's really<font color="#E5E5E5"> not</font>

467
00:20:57,480 --> 00:21:02,520
much<font color="#E5E5E5"> more complicated than that so we've</font>

468
00:21:00,390 --> 00:21:04,980
got a little demo where we just

469
00:21:02,520 --> 00:21:07,379
basically captured a signal we'd already

470
00:21:04,980 --> 00:21:10,410
previously had the signal and swiped

471
00:21:07,380 --> 00:21:16,430
from the from<font color="#E5E5E5"> dominicks desk and then</font><font color="#CCCCCC"> I</font>

472
00:21:10,410 --> 00:21:18,720
<font color="#E5E5E5">went and broke into his house obviously</font>

473
00:21:16,430 --> 00:21:20,880
<font color="#CCCCCC">I'd love to</font><font color="#E5E5E5"> have you all around my house</font>

474
00:21:18,720 --> 00:21:26,580
but it's not<font color="#E5E5E5"> big enough so we've a kind</font>

475
00:21:20,880 --> 00:21:42,720
of video this one lovely kitchen<font color="#E5E5E5"> gonna</font>

476
00:21:26,580 --> 00:21:46,550
replay that so yeah we captured the code

477
00:21:42,720 --> 00:21:46,550
and went around to<font color="#CCCCCC"> doms house</font>

478
00:21:52,670 --> 00:22:07,860
set the alarm off and then I<font color="#E5E5E5"> went in the</font>

479
00:22:06,480 --> 00:22:10,800
kitchen and made myself a cup of tea and

480
00:22:07,860 --> 00:22:14,340
you can actually hear the alarm to tell

481
00:22:10,800 --> 00:22:17,070
us that it disabled itself so um yeah

482
00:22:14,340 --> 00:22:27,110
and then you're on the<font color="#E5E5E5"> next slide now so</font>

483
00:22:17,070 --> 00:22:27,110
I passion about to dominate cheers man

484
00:22:27,320 --> 00:22:30,840
it's great<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you've</font><font color="#E5E5E5"> just told</font>

485
00:22:29,250 --> 00:22:39,300
everybody hard to break into my house as

486
00:22:30,840 --> 00:22:44,189
<font color="#E5E5E5">well come on mark your</font><font color="#CCCCCC"> Olson is though</font>

487
00:22:39,300 --> 00:23:00,570
surely good enough to find out so<font color="#E5E5E5"> I'll</font>

488
00:22:44,190 --> 00:23:03,990
see if<font color="#E5E5E5"> I can just step in this this was</font>

489
00:23:00,570 --> 00:23:07,790
bother I'll just told it<font color="#CCCCCC"> okay so the</font>

490
00:23:03,990 --> 00:23:12,360
next<font color="#E5E5E5"> device that we looked at was a</font>

491
00:23:07,790 --> 00:23:16,139
motorola scouts 85 connect so this

492
00:23:12,360 --> 00:23:18,990
device is essentially we branded for<font color="#E5E5E5"> a</font>

493
00:23:16,140 --> 00:23:22,140
number<font color="#E5E5E5"> of different purposes and the</font>

494
00:23:18,990 --> 00:23:25,170
device that<font color="#CCCCCC"> we got was the rspca</font>

495
00:23:22,140 --> 00:23:28,470
approved pet monitor but it's also

496
00:23:25,170 --> 00:23:31,680
exactly the same device for things like

497
00:23:28,470 --> 00:23:35,820
security cameras webcams baby monitors

498
00:23:31,680 --> 00:23:38,220
all effectively does the same thing the

499
00:23:35,820 --> 00:23:42,389
way the device works is it basically

500
00:23:38,220 --> 00:23:45,810
<font color="#E5E5E5">provides you with remote access via the</font>

501
00:23:42,390 --> 00:23:48,150
cloud so you can install an app on your

502
00:23:45,810 --> 00:23:52,409
phone and<font color="#E5E5E5"> you can view what's going on</font>

503
00:23:48,150 --> 00:23:55,290
<font color="#E5E5E5">via your mobile phone under the hood the</font>

504
00:23:52,410 --> 00:23:57,960
device is essentially built just using

505
00:23:55,290 --> 00:23:59,370
embedded linux and busybox on an<font color="#CCCCCC"> armed</font>

506
00:23:57,960 --> 00:24:04,260
<font color="#E5E5E5">v5 chip</font>

507
00:23:59,370 --> 00:24:05,909
so we focused mainly on version<font color="#E5E5E5"> 17 of</font>

508
00:24:04,260 --> 00:24:07,290
the<font color="#CCCCCC"> firmware because</font><font color="#E5E5E5"> this was the device</font>

509
00:24:05,910 --> 00:24:09,590
that<font color="#CCCCCC"> it was and</font><font color="#E5E5E5"> stop this was the</font>

510
00:24:07,290 --> 00:24:12,960
version that was it was installed with

511
00:24:09,590 --> 00:24:16,230
however the majority of<font color="#E5E5E5"> the bugs that we</font>

512
00:24:12,960 --> 00:24:17,700
found in it are still present in the

513
00:24:16,230 --> 00:24:20,330
<font color="#CCCCCC">latest version of</font><font color="#E5E5E5"> the firmware and we</font>

514
00:24:17,700 --> 00:24:24,540
have reported some of these two<font color="#CCCCCC"> Motorola</font>

515
00:24:20,330 --> 00:24:27,240
so how kind of prevalent are these

516
00:24:24,540 --> 00:24:29,100
devices well according<font color="#CCCCCC"> to showed in</font>

517
00:24:27,240 --> 00:24:31,740
there<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot less prevalent than the view</font>

518
00:24:29,100 --> 00:24:34,139
that the hikvision device but<font color="#CCCCCC"> I guess if</font>

519
00:24:31,740 --> 00:24:36,990
you're<font color="#E5E5E5"> building an IOT botnet every</font>

520
00:24:34,140 --> 00:24:38,340
device probably<font color="#E5E5E5"> counts so you can</font>

521
00:24:36,990 --> 00:24:45,540
<font color="#E5E5E5">probably go known some of these on the</font>

522
00:24:38,340 --> 00:24:48,600
internet so our approach<font color="#CCCCCC"> to looking at</font>

523
00:24:45,540 --> 00:24:51,840
this device was effectively we<font color="#E5E5E5"> initially</font>

524
00:24:48,600 --> 00:24:54,540
grabbed the mobile app we<font color="#CCCCCC"> d compiled</font><font color="#E5E5E5"> the</font>

525
00:24:51,840 --> 00:24:57,330
<font color="#CCCCCC">android app and it revealed a couple of</font>

526
00:24:54,540 --> 00:25:00,980
<font color="#E5E5E5">a kind of interesting urls effectively</font>

527
00:24:57,330 --> 00:25:03,570
these were links to the firmware so we

528
00:25:00,980 --> 00:25:08,040
downloaded the firmware<font color="#CCCCCC"> unpack tip and</font>

529
00:25:03,570 --> 00:25:09,389
started looking<font color="#E5E5E5"> for bugs there were a</font>

530
00:25:08,040 --> 00:25:11,129
number of kind<font color="#E5E5E5"> of interesting things</font>

531
00:25:09,390 --> 00:25:13,080
<font color="#E5E5E5">that we first found when we unpack the</font>

532
00:25:11,130 --> 00:25:14,610
firmware there were a few<font color="#E5E5E5"> files that</font>

533
00:25:13,080 --> 00:25:17,220
look pretty interesting sitting in the

534
00:25:14,610 --> 00:25:19,830
webroot there was one kind<font color="#E5E5E5"> of master</font>

535
00:25:17,220 --> 00:25:22,260
binary process which seems to launch all

536
00:25:19,830 --> 00:25:23,879
the services on<font color="#CCCCCC"> the device if I shared</font>

537
00:25:22,260 --> 00:25:28,080
libraries and that was something that we

538
00:25:23,880 --> 00:25:30,660
looked up our<font color="#E5E5E5"> next kind of step was to</font>

539
00:25:28,080 --> 00:25:34,460
see what was the kind of footprint on

540
00:25:30,660 --> 00:25:37,470
<font color="#CCCCCC">the device on the network so we</font><font color="#E5E5E5"> ran a</font>

541
00:25:34,460 --> 00:25:39,660
little port scan on the device<font color="#CCCCCC"> to have a</font>

542
00:25:37,470 --> 00:25:41,910
lot what was going on as you can see

543
00:25:39,660 --> 00:25:45,120
there's a couple<font color="#E5E5E5"> of web servers there's</font>

544
00:25:41,910 --> 00:25:49,980
a streaming server and also a<font color="#E5E5E5"> couple of</font>

545
00:25:45,120 --> 00:25:52,070
random unknown services when we report

546
00:25:49,980 --> 00:25:54,990
scaling the device what we noticed was

547
00:25:52,070 --> 00:25:56,970
it kept generating some white noise when

548
00:25:54,990 --> 00:25:58,559
we were and<font color="#E5E5E5"> I mean literally through the</font>

549
00:25:56,970 --> 00:26:00,510
speaker it was generating white noise

550
00:25:58,559 --> 00:26:04,139
and<font color="#CCCCCC"> we're like okay</font><font color="#E5E5E5"> what the hell is</font>

551
00:26:00,510 --> 00:26:09,090
going on there so we eventually narrowed

552
00:26:04,140 --> 00:26:13,260
it down to the service on port 5 11 08

553
00:26:09,090 --> 00:26:16,409
was pretty much<font color="#E5E5E5"> connected to the audio</font>

554
00:26:13,260 --> 00:26:19,020
in all<font color="#CCCCCC"> of the device so that okay well</font>

555
00:26:16,410 --> 00:26:21,240
this is<font color="#E5E5E5"> connected to the audio in what</font>

556
00:26:19,020 --> 00:26:23,820
can<font color="#E5E5E5"> we do that so we started just</font>

557
00:26:21,240 --> 00:26:25,890
sending like music files<font color="#CCCCCC"> to</font><font color="#E5E5E5"> try and</font><font color="#CCCCCC"> see</font>

558
00:26:23,820 --> 00:26:27,600
what was going on<font color="#CCCCCC"> and eventually we</font>

559
00:26:25,890 --> 00:26:29,700
figured out if you send the right file

560
00:26:27,600 --> 00:26:34,379
type to it which turned out to be some

561
00:26:29,700 --> 00:26:36,360
16-bit mono encoded<font color="#E5E5E5"> wav file the device</font>

562
00:26:34,380 --> 00:26:37,980
would just literally play it on

563
00:26:36,360 --> 00:26:41,820
authenticated on the on<font color="#E5E5E5"> their kind</font>

564
00:26:37,980 --> 00:26:45,750
network which is kind of interesting but

565
00:26:41,820 --> 00:26:49,409
you know it's not a root shell so the

566
00:26:45,750 --> 00:26:50,820
<font color="#E5E5E5">next thing we kind of spotted was the</font>

567
00:26:49,410 --> 00:26:52,290
web service on the device if you<font color="#E5E5E5"> go to</font>

568
00:26:50,820 --> 00:26:54,360
the landing page the IP of advice

569
00:26:52,290 --> 00:26:55,860
<font color="#CCCCCC">there's no kind of</font><font color="#E5E5E5"> web up there anything</font>

570
00:26:54,360 --> 00:26:57,659
like<font color="#E5E5E5"> that it's all supposed to be kind</font>

571
00:26:55,860 --> 00:27:00,209
of managed through the the mobile app

572
00:26:57,660 --> 00:27:04,740
and how I've all<font color="#E5E5E5"> the web services were</font>

573
00:27:00,210 --> 00:27:06,720
completely unauthenticated so not only

574
00:27:04,740 --> 00:27:08,730
that there was no kind of like<font color="#CCCCCC"> CSRF</font>

575
00:27:06,720 --> 00:27:10,830
protection so if you are on the internet

576
00:27:08,730 --> 00:27:12,210
and you are able to<font color="#E5E5E5"> kind of figure out</font>

577
00:27:10,830 --> 00:27:16,889
the IP one of these devices<font color="#E5E5E5"> you might be</font>

578
00:27:12,210 --> 00:27:19,410
able to trigger some of these bugs the

579
00:27:16,890 --> 00:27:20,700
were kind of several interesting files

580
00:27:19,410 --> 00:27:22,140
sitting in the web<font color="#E5E5E5"> room and I don't</font>

581
00:27:20,700 --> 00:27:23,820
think<font color="#CCCCCC"> these were</font><font color="#E5E5E5"> supposed to be there I</font>

582
00:27:22,140 --> 00:27:25,950
think they were probably there because

583
00:27:23,820 --> 00:27:28,260
the device has been repurposed i

584
00:27:25,950 --> 00:27:29,790
randomly browse to some of them and they

585
00:27:28,260 --> 00:27:31,410
were kind<font color="#E5E5E5"> of describing it as a baby</font>

586
00:27:29,790 --> 00:27:34,649
monitor even though it<font color="#E5E5E5"> was supposed to</font>

587
00:27:31,410 --> 00:27:36,300
<font color="#CCCCCC">be a pet monitor from rsps ago but</font>

588
00:27:34,650 --> 00:27:38,640
<font color="#E5E5E5">basically these things allowed you to do</font>

589
00:27:36,300 --> 00:27:41,070
stuff<font color="#CCCCCC"> like move the device reconfigure</font>

590
00:27:38,640 --> 00:27:42,870
the wireless or upgrade the firmware

591
00:27:41,070 --> 00:27:44,610
which is obviously a little<font color="#E5E5E5"> bit more</font>

592
00:27:42,870 --> 00:27:47,159
serious because you contentiously use

593
00:27:44,610 --> 00:27:51,000
<font color="#CCCCCC">CSRF to install your</font><font color="#E5E5E5"> own arbitrary</font>

594
00:27:47,160 --> 00:27:53,250
firmware on<font color="#CCCCCC"> the device so let's</font><font color="#E5E5E5"> have a</font>

595
00:27:51,000 --> 00:27:59,780
little look at a demo of some of the

596
00:27:53,250 --> 00:27:59,780
stuff in this device<font color="#CCCCCC"> okay</font>

597
00:28:09,809 --> 00:28:15,099
so this is<font color="#CCCCCC"> the device here and then I</font>

598
00:28:13,299 --> 00:28:19,570
know obviously people about probably

599
00:28:15,099 --> 00:28:23,470
can't quite see it as well<font color="#CCCCCC"> but the guys</font>

600
00:28:19,570 --> 00:28:26,320
on the front<font color="#E5E5E5"> we got</font><font color="#CCCCCC"> the best view so as</font>

601
00:28:23,470 --> 00:28:32,440
I said you've got<font color="#E5E5E5"> this random t see</font>

602
00:28:26,320 --> 00:28:36,009
people get to play music if if you are a

603
00:28:32,440 --> 00:28:41,369
bit of a rick astley fan then like<font color="#E5E5E5"> this</font>

604
00:28:36,009 --> 00:28:41,369
devices you can<font color="#E5E5E5"> also get the thing to</font>

605
00:28:41,909 --> 00:28:49,119
dance so guys<font color="#CCCCCC"> with about probably can't</font>

606
00:28:46,419 --> 00:28:58,749
see but they device is actually starting

607
00:28:49,119 --> 00:29:02,168
to<font color="#E5E5E5"> move around and there is no way to</font>

608
00:28:58,749 --> 00:29:04,690
stop this by the way<font color="#E5E5E5"> I have to actually</font>

609
00:29:02,169 --> 00:29:14,499
unplug the<font color="#E5E5E5"> thing to get it to stop kind</font>

610
00:29:04,690 --> 00:29:22,950
of play music<font color="#E5E5E5"> they were mad enough for</font>

611
00:29:14,499 --> 00:29:22,950
that solves that<font color="#E5E5E5"> just for you so I mean</font>

612
00:29:28,840 --> 00:29:35,000
so I mean that in itself is not a

613
00:29:33,110 --> 00:29:36,620
massive issue but<font color="#E5E5E5"> it</font><font color="#CCCCCC"> is you can probably</font>

614
00:29:35,000 --> 00:29:38,360
really annoy somebody if you're on<font color="#E5E5E5"> the</font>

615
00:29:36,620 --> 00:29:42,639
same<font color="#CCCCCC"> no because there's one of these</font>

616
00:29:38,360 --> 00:29:45,260
<font color="#E5E5E5">things and so yeah it's kind of funny</font>

617
00:29:42,640 --> 00:29:48,950
but you know<font color="#E5E5E5"> we wanted some some more</font>

618
00:29:45,260 --> 00:29:49,910
interesting books<font color="#CCCCCC"> Affleck's if we</font>

619
00:29:48,950 --> 00:29:51,950
provide<font color="#E5E5E5"> something that we could</font>

620
00:29:49,910 --> 00:29:53,900
compromise the device with and so

621
00:29:51,950 --> 00:29:56,750
because<font color="#CCCCCC"> we</font><font color="#E5E5E5"> got the firmware we started</font>

622
00:29:53,900 --> 00:29:58,160
to kind of audit some of the the CGI

623
00:29:56,750 --> 00:30:00,950
scripts that were exposed<font color="#E5E5E5"> from the web</font>

624
00:29:58,160 --> 00:30:03,050
room<font color="#E5E5E5"> there was one CGI scripts that</font>

625
00:30:00,950 --> 00:30:07,280
looked particularly interesting which

626
00:30:03,050 --> 00:30:09,159
was this has a RL upgrade CJ effectively

627
00:30:07,280 --> 00:30:15,950
<font color="#E5E5E5">this is a CGI script that zune boats</font>

628
00:30:09,160 --> 00:30:18,890
drawing the firmware upgrade process and

629
00:30:15,950 --> 00:30:21,470
what we what we found in<font color="#E5E5E5"> this CGI script</font>

630
00:30:18,890 --> 00:30:25,360
was it was a very very absolutely

631
00:30:21,470 --> 00:30:29,630
trivial to exploit command injection bug

632
00:30:25,360 --> 00:30:31,550
so this was the the<font color="#CCCCCC"> CGI scripts and in a</font>

633
00:30:29,630 --> 00:30:37,220
bit that I've kind of highlighted in red

634
00:30:31,550 --> 00:30:39,919
is effectively a variable that<font color="#E5E5E5"> is passed</font>

635
00:30:37,220 --> 00:30:43,000
from from the user and<font color="#E5E5E5"> as you can</font>

636
00:30:39,920 --> 00:30:47,140
probably see it ended up getting

637
00:30:43,000 --> 00:30:49,610
concatenated into a operating system and

638
00:30:47,140 --> 00:30:54,620
so as you can guess absolutely trivial

639
00:30:49,610 --> 00:30:58,969
one injection so I can hopefully demo

640
00:30:54,620 --> 00:31:01,669
well I<font color="#CCCCCC"> condemn in</font><font color="#E5E5E5"> this actually the the</font>

641
00:30:58,970 --> 00:31:04,670
bad news is we did<font color="#CCCCCC"> plan to demo this</font>

642
00:31:01,670 --> 00:31:07,040
live and I've<font color="#CCCCCC"> got the device here and we</font>

643
00:31:04,670 --> 00:31:08,680
had got the jtag you later set up with

644
00:31:07,040 --> 00:31:12,800
what was a you our connection

645
00:31:08,680 --> 00:31:14,510
unfortunately I've on the train it must

646
00:31:12,800 --> 00:31:17,060
<font color="#E5E5E5">have</font><font color="#CCCCCC"> liked that</font><font color="#E5E5E5"> while the soldiers come</font>

647
00:31:14,510 --> 00:31:18,530
<font color="#E5E5E5">off and is disconnected so but</font>

648
00:31:17,060 --> 00:31:19,730
fortunately<font color="#E5E5E5"> I videoed it yesterday</font>

649
00:31:18,530 --> 00:31:23,990
because I was worried something like

650
00:31:19,730 --> 00:31:30,590
this was going to happen so we have<font color="#CCCCCC"> got</font>

651
00:31:23,990 --> 00:31:31,880
a demo here I'll<font color="#E5E5E5"> just lay this on oh no</font>

652
00:31:30,590 --> 00:31:35,360
that's the wrong one that's the one

653
00:31:31,880 --> 00:31:39,820
we've already played there we get<font color="#E5E5E5"> this</font>

654
00:31:35,360 --> 00:31:39,820
one this<font color="#E5E5E5"> is one so</font>

655
00:31:40,570 --> 00:31:46,460
so we're<font color="#CCCCCC"> just using burp suite here too</font>

656
00:31:44,570 --> 00:31:48,769
and you can see I've highlighted dick

657
00:31:46,460 --> 00:31:54,859
man that was sending effectively it is

658
00:31:48,769 --> 00:31:57,379
just a pipe<font color="#CCCCCC"> to inject a new command into</font>

659
00:31:54,859 --> 00:32:00,678
the the name of the the<font color="#E5E5E5"> firmware image</font>

660
00:31:57,379 --> 00:32:02,178
that we're uploading and I'm just all

661
00:32:00,679 --> 00:32:06,320
the only data that I'm<font color="#E5E5E5"> sending is foo</font>

662
00:32:02,179 --> 00:32:09,229
and we send this to the device this is

663
00:32:06,320 --> 00:32:11,629
the UART console so we at the time I<font color="#CCCCCC"> had</font>

664
00:32:09,229 --> 00:32:13,549
jtag you later connected run this

665
00:32:11,629 --> 00:32:16,158
command and you can see actually<font color="#E5E5E5"> the</font>

666
00:32:13,549 --> 00:32:17,690
device echoes the output of<font color="#E5E5E5"> the command</font>

667
00:32:16,159 --> 00:32:19,249
it's doing which<font color="#CCCCCC"> is kind</font><font color="#E5E5E5"> of useful if</font>

668
00:32:17,690 --> 00:32:22,309
you're<font color="#CCCCCC"> trying to kind</font><font color="#E5E5E5"> of re one</font><font color="#CCCCCC"> of these</font>

669
00:32:19,249 --> 00:32:23,899
things and it should because the device

670
00:32:22,309 --> 00:32:26,119
had botnet count on it as well which was

671
00:32:23,899 --> 00:32:30,228
awesome it should actually just kick

672
00:32:26,119 --> 00:32:31,939
back a grandchild so this<font color="#E5E5E5"> is a net cut</font>

673
00:32:30,229 --> 00:32:35,239
listen that we had and it should kick

674
00:32:31,940 --> 00:32:37,309
back a reverse shell so you can see

675
00:32:35,239 --> 00:32:43,220
we've now got our group access to<font color="#E5E5E5"> the</font>

676
00:32:37,309 --> 00:32:45,470
device<font color="#CCCCCC"> and you can actually from the PS</font>

677
00:32:43,220 --> 00:32:48,259
output you<font color="#CCCCCC"> can see the</font><font color="#E5E5E5"> the command that</font>

678
00:32:45,470 --> 00:32:58,999
was<font color="#E5E5E5"> wrong which was again pretty useful</font>

679
00:32:48,259 --> 00:33:04,729
because we'd now read<font color="#CCCCCC"> the thing yeah</font>

680
00:32:58,999 --> 00:33:05,690
please if that's all I thank you it

681
00:33:04,729 --> 00:33:10,519
would have<font color="#E5E5E5"> been better if it was live</font>

682
00:33:05,690 --> 00:33:14,029
but so I'm just going to pass<font color="#CCCCCC"> you back</font>

683
00:33:10,519 --> 00:33:16,849
over to Matthew so we had a team of

684
00:33:14,029 --> 00:33:18,619
<font color="#E5E5E5">hackers and one device and then we left</font>

685
00:33:16,849 --> 00:33:20,059
<font color="#E5E5E5">them all fuzzing away and unfortunately</font>

686
00:33:18,619 --> 00:33:21,470
when you leave a team of hackers alone

687
00:33:20,059 --> 00:33:24,859
with one device<font color="#E5E5E5"> and one way of getting</font>

688
00:33:21,470 --> 00:33:28,129
route they tend<font color="#E5E5E5"> to break things so they</font>

689
00:33:24,859 --> 00:33:30,320
they broke the device<font color="#E5E5E5"> and in a way that</font>

690
00:33:28,129 --> 00:33:32,178
we could no longer get it to boot so a

691
00:33:30,320 --> 00:33:34,849
lot of the fuzzing stuff that we were

692
00:33:32,179 --> 00:33:37,340
doing basically broke it and we couldn't

693
00:33:34,849 --> 00:33:39,678
turn this thing on anymore and so to

694
00:33:37,340 --> 00:33:41,478
continue fixing it and we needed to<font color="#E5E5E5"> fix</font>

695
00:33:39,679 --> 00:33:43,460
it so there was a<font color="#E5E5E5"> lot of tears shed we</font>

696
00:33:41,479 --> 00:33:46,489
had a<font color="#E5E5E5"> lot of pizza and there was a very</font>

697
00:33:43,460 --> 00:33:49,159
<font color="#E5E5E5">sad pony in the office and trying to fix</font>

698
00:33:46,489 --> 00:33:51,820
this device so actually<font color="#CCCCCC"> we improved it I</font>

699
00:33:49,159 --> 00:33:53,230
think this is<font color="#E5E5E5"> what it looked like</font>

700
00:33:51,820 --> 00:33:55,439
when we started with the device before

701
00:33:53,230 --> 00:33:58,270
we started fixed before we fixing it and

702
00:33:55,440 --> 00:34:01,170
it had a lovely kind of nice you know

703
00:33:58,270 --> 00:34:05,590
home interior sort of ikea look about it

704
00:34:01,170 --> 00:34:07,810
this<font color="#E5E5E5"> is how it ended up basically</font>

705
00:34:05,590 --> 00:34:10,270
sprawled out into several pieces<font color="#CCCCCC"> where</font>

706
00:34:07,810 --> 00:34:12,489
the wires dragged out everywhere on it

707
00:34:10,270 --> 00:34:16,000
and we you know cut our fingers<font color="#CCCCCC"> and</font>

708
00:34:12,489 --> 00:34:17,319
thumbs a few<font color="#E5E5E5"> times so we what we</font>

709
00:34:16,000 --> 00:34:19,120
<font color="#CCCCCC">discovered when we rip this thing apart</font>

710
00:34:17,320 --> 00:34:20,740
was that he actually had a couple<font color="#E5E5E5"> of</font>

711
00:34:19,120 --> 00:34:23,170
different microcontrollers in it had one

712
00:34:20,739 --> 00:34:26,199
for controlling the motors and it also

713
00:34:23,170 --> 00:34:28,420
had a system-on-chip for controlling and

714
00:34:26,199 --> 00:34:30,819
running the OS<font color="#CCCCCC"> and the system on chip</font>

715
00:34:28,420 --> 00:34:33,730
was manufactured by<font color="#E5E5E5"> new vuitton and it</font>

716
00:34:30,820 --> 00:34:37,290
was actually<font color="#CCCCCC"> an</font><font color="#E5E5E5"> arm nine core which</font>

717
00:34:33,730 --> 00:34:39,159
basically ran all of the<font color="#E5E5E5"> Linux type OS</font>

718
00:34:37,290 --> 00:34:41,259
and one of the things<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> found we</font>

719
00:34:39,159 --> 00:34:43,089
actually dug out a<font color="#E5E5E5"> datasheet from a</font>

720
00:34:41,260 --> 00:34:46,420
development trial board which had this

721
00:34:43,090 --> 00:34:48,070
this stock on it and that's and that's

722
00:34:46,420 --> 00:34:49,540
essentially<font color="#E5E5E5"> there and then if you if you</font>

723
00:34:48,070 --> 00:34:52,000
see this<font color="#CCCCCC"> little picture here we can see</font>

724
00:34:49,540 --> 00:34:54,909
that's all these TP label points or test

725
00:34:52,000 --> 00:34:57,400
points on the PCB and we<font color="#CCCCCC"> actually found</font>

726
00:34:54,909 --> 00:35:00,460
that TP four and five were quite

727
00:34:57,400 --> 00:35:01,840
important<font color="#CCCCCC"> and the reason they were quite</font>

728
00:35:00,460 --> 00:35:03,460
important was I don't<font color="#CCCCCC"> know</font><font color="#E5E5E5"> if you can</font>

729
00:35:01,840 --> 00:35:06,010
<font color="#E5E5E5">see this but this is the the datasheet</font>

730
00:35:03,460 --> 00:35:08,470
for the the arm<font color="#E5E5E5"> stock but in the top</font>

731
00:35:06,010 --> 00:35:11,050
right corner we<font color="#E5E5E5"> actually found that the</font>

732
00:35:08,470 --> 00:35:13,450
two pins there were labeled as TX and<font color="#E5E5E5"> rx</font>

733
00:35:11,050 --> 00:35:14,860
with a you in front of it and we figured

734
00:35:13,450 --> 00:35:17,799
that that was probably most<font color="#CCCCCC"> likely a</font>

735
00:35:14,860 --> 00:35:19,720
UART of some form so<font color="#CCCCCC"> we used a</font>

736
00:35:17,800 --> 00:35:21,760
multimeter to<font color="#E5E5E5"> basically do a continuity</font>

737
00:35:19,720 --> 00:35:23,290
check from these two pins to all the

738
00:35:21,760 --> 00:35:26,170
<font color="#CCCCCC">different test points on the board and</font>

739
00:35:23,290 --> 00:35:27,990
to locate that TP for and TP five were

740
00:35:26,170 --> 00:35:31,960
actually break<font color="#E5E5E5"> outs with these two pins</font>

741
00:35:27,990 --> 00:35:34,299
on the on the<font color="#E5E5E5"> stock itself so when we</font>

742
00:35:31,960 --> 00:35:35,620
sold it<font color="#CCCCCC"> onto that we actually</font><font color="#E5E5E5"> found that</font>

743
00:35:34,300 --> 00:35:38,050
we could get<font color="#E5E5E5"> another rich shell which</font>

744
00:35:35,620 --> 00:35:39,790
was pretty useful and so we had this

745
00:35:38,050 --> 00:35:42,070
broken device we've got a root shell on

746
00:35:39,790 --> 00:35:44,020
there again<font color="#CCCCCC"> and we we did a little</font>

747
00:35:42,070 --> 00:35:47,140
<font color="#E5E5E5">hacking and fixed up some of the results</font>

748
00:35:44,020 --> 00:35:49,270
of<font color="#E5E5E5"> the fuzzing and we were able to to</font>

749
00:35:47,140 --> 00:35:52,180
restore it<font color="#E5E5E5"> back to a state where by we</font>

750
00:35:49,270 --> 00:35:55,500
could now continue our research efforts

751
00:35:52,180 --> 00:35:55,500
so 100 by Saddam

752
00:35:59,040 --> 00:36:04,330
so at this<font color="#E5E5E5"> point we'd pretty much got a</font>

753
00:36:02,080 --> 00:36:06,640
nice kind of interactive commercial on

754
00:36:04,330 --> 00:36:10,540
<font color="#E5E5E5">the device and we decided</font><font color="#CCCCCC"> I mean let's</font>

755
00:36:06,640 --> 00:36:11,740
<font color="#E5E5E5">try and find some more bugs so one of</font>

756
00:36:10,540 --> 00:36:14,470
the kind<font color="#E5E5E5"> of interesting things about the</font>

757
00:36:11,740 --> 00:36:17,529
device was the attack surface was pretty

758
00:36:14,470 --> 00:36:22,020
much confined to just one binary and

759
00:36:17,530 --> 00:36:24,550
this was a binary called ms loader and

760
00:36:22,020 --> 00:36:26,440
basically the way it works was when the

761
00:36:24,550 --> 00:36:30,100
device booted Emma Slater<font color="#CCCCCC"> processed</font>

762
00:36:26,440 --> 00:36:31,990
kicked in and it had a bunch of shared

763
00:36:30,100 --> 00:36:34,120
libraries all the different kind<font color="#E5E5E5"> of</font>

764
00:36:31,990 --> 00:36:38,680
services effectively plugins so had

765
00:36:34,120 --> 00:36:40,390
<font color="#E5E5E5">plug-ins for the audio service upnp the</font>

766
00:36:38,680 --> 00:36:44,680
web server this kind of stuff they were

767
00:36:40,390 --> 00:36:46,450
all loaded from shared libraries one of

768
00:36:44,680 --> 00:36:48,370
the things<font color="#E5E5E5"> I were kind of interested in</font>

769
00:36:46,450 --> 00:36:49,930
straight away was what kind<font color="#E5E5E5"> of</font>

770
00:36:48,370 --> 00:36:52,680
protections are in place on on this

771
00:36:49,930 --> 00:36:55,330
binary in<font color="#CCCCCC"> its</font><font color="#E5E5E5"> shared libraries and</font>

772
00:36:52,680 --> 00:36:57,490
effectively there were very<font color="#E5E5E5"> little so</font>

773
00:36:55,330 --> 00:36:58,840
there was no kind of position

774
00:36:57,490 --> 00:37:00,729
independent executable there were no

775
00:36:58,840 --> 00:37:02,980
stuck Canaries anything like that which

776
00:37:00,730 --> 00:37:04,690
<font color="#E5E5E5">is kind of good because we want to try</font>

777
00:37:02,980 --> 00:37:09,970
<font color="#E5E5E5">and exploit some of these bugs that were</font>

778
00:37:04,690 --> 00:37:13,290
I'm going to talk<font color="#E5E5E5"> about now so we</font>

779
00:37:09,970 --> 00:37:15,700
started to re the MS lo de binary

780
00:37:13,290 --> 00:37:17,290
effectively because a little<font color="#CCCCCC"> bit lazy</font>

781
00:37:15,700 --> 00:37:19,750
started looking for some kind of easy

782
00:37:17,290 --> 00:37:22,360
wins and there were kind of lots of

783
00:37:19,750 --> 00:37:24,210
potential issues there first<font color="#E5E5E5"> thing I</font>

784
00:37:22,360 --> 00:37:26,620
thought was well we know we found one

785
00:37:24,210 --> 00:37:28,090
command injection in the CGI script

786
00:37:26,620 --> 00:37:29,890
there's probably more common objections

787
00:37:28,090 --> 00:37:33,660
than the device let's look for some<font color="#E5E5E5"> more</font>

788
00:37:29,890 --> 00:37:36,040
c'mon injections so I started looking at

789
00:37:33,660 --> 00:37:38,740
<font color="#E5E5E5">for</font><font color="#CCCCCC"> cross-references the system there</font>

790
00:37:36,040 --> 00:37:40,240
were 88 cross-references system which

791
00:37:38,740 --> 00:37:44,049
means it's executing a lot of commands

792
00:37:40,240 --> 00:37:47,910
<font color="#E5E5E5">on the device one of the one that</font><font color="#CCCCCC"> looked</font>

793
00:37:44,050 --> 00:37:52,360
the most promising was this<font color="#E5E5E5"> setup Wi-Fi</font>

794
00:37:47,910 --> 00:37:53,819
command injection so now this was

795
00:37:52,360 --> 00:37:56,230
interesting for a couple<font color="#E5E5E5"> of reasons</font>

796
00:37:53,820 --> 00:37:59,760
effectively it was a bit<font color="#E5E5E5"> of a buy one</font>

797
00:37:56,230 --> 00:38:02,980
get one free on the book front because

798
00:37:59,760 --> 00:38:05,590
we looked at it<font color="#E5E5E5"> in idea and we saw</font>

799
00:38:02,980 --> 00:38:08,680
something<font color="#E5E5E5"> like this so the first kind of</font>

800
00:38:05,590 --> 00:38:09,720
red arrow is you can<font color="#E5E5E5"> see it's taking</font>

801
00:38:08,680 --> 00:38:12,819
some

802
00:38:09,720 --> 00:38:16,629
user controlled input and it's using

803
00:38:12,820 --> 00:38:18,640
sprint f to basically append it to a

804
00:38:16,630 --> 00:38:22,930
command which ends up getting<font color="#CCCCCC"> ruins</font><font color="#E5E5E5"> in</font>

805
00:38:18,640 --> 00:38:24,129
fire system which you kind of interested

806
00:38:22,930 --> 00:38:27,399
<font color="#CCCCCC">in we got we found another command</font>

807
00:38:24,130 --> 00:38:30,280
injection bug but you know sprint f is

808
00:38:27,400 --> 00:38:32,050
not great and it's it's concatenate

809
00:38:30,280 --> 00:38:33,670
something to a variable that's sitting

810
00:38:32,050 --> 00:38:35,110
on the stack so I thought okay well

811
00:38:33,670 --> 00:38:37,180
we've exported one command injection

812
00:38:35,110 --> 00:38:39,250
book let's have a look what<font color="#E5E5E5"> the if</font>

813
00:38:37,180 --> 00:38:43,660
there's any opportunity<font color="#CCCCCC"> to exploit the</font>

814
00:38:39,250 --> 00:38:46,210
stack overflow here so<font color="#CCCCCC"> if you have a</font>

815
00:38:43,660 --> 00:38:48,730
look at the<font color="#E5E5E5"> the prologue for the</font>

816
00:38:46,210 --> 00:38:50,850
function you can<font color="#E5E5E5"> see what it's actually</font>

817
00:38:48,730 --> 00:38:55,750
doing is its setting up a stack frame of

818
00:38:50,850 --> 00:38:58,569
hex 84 bytes<font color="#CCCCCC"> so I thought okay well what</font>

819
00:38:55,750 --> 00:39:01,990
happens if I try and<font color="#E5E5E5"> send it a massive</font>

820
00:38:58,570 --> 00:39:04,870
you<font color="#CCCCCC"> know request here what's going on so</font>

821
00:39:01,990 --> 00:39:07,470
I figured out<font color="#CCCCCC"> the bit of the the web</font>

822
00:39:04,870 --> 00:39:10,839
service which was accepting this

823
00:39:07,470 --> 00:39:13,180
variable and I thought and I'll just

824
00:39:10,840 --> 00:39:16,870
send it a load of<font color="#CCCCCC"> a load of a user load</font>

825
00:39:13,180 --> 00:39:19,180
of wise what everyone's do<font color="#E5E5E5"> happens so</font>

826
00:39:16,870 --> 00:39:21,940
the bit i've highlighted in red is kind

827
00:39:19,180 --> 00:39:24,669
of important because it shows the length

828
00:39:21,940 --> 00:39:26,530
of the string that you're sending and it

829
00:39:24,670 --> 00:39:27,910
has to<font color="#CCCCCC"> exist so if you were fuzzing this</font>

830
00:39:26,530 --> 00:39:30,670
you might not see it because it<font color="#CCCCCC"> would</font>

831
00:39:27,910 --> 00:39:33,399
just reject anything what if the length

832
00:39:30,670 --> 00:39:35,560
field doesn't match the the bit in green

833
00:39:33,400 --> 00:39:39,970
is<font color="#CCCCCC"> the length of actually the SSID that</font>

834
00:39:35,560 --> 00:39:42,250
you send it and the yellow is I'm what I

835
00:39:39,970 --> 00:39:44,459
ended<font color="#E5E5E5"> up finding out was the value of</font>

836
00:39:42,250 --> 00:39:47,500
what the pc register got over us in us

837
00:39:44,460 --> 00:39:49,570
so<font color="#E5E5E5"> I ended up sending the device or a</font>

838
00:39:47,500 --> 00:39:51,700
<font color="#E5E5E5">quest like this and I watched what</font>

839
00:39:49,570 --> 00:39:55,050
happened<font color="#E5E5E5"> on the UART console and it just</font>

840
00:39:51,700 --> 00:39:57,730
died to death the device are basically

841
00:39:55,050 --> 00:40:00,370
detected a crush software watchdog

842
00:39:57,730 --> 00:40:05,020
kicked in<font color="#E5E5E5"> the thing rebooted is that</font>

843
00:40:00,370 --> 00:40:08,080
awesome<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> found a stack overflow how</font>

844
00:40:05,020 --> 00:40:12,970
do<font color="#E5E5E5"> we go about exploiting this well the</font>

845
00:40:08,080 --> 00:40:15,910
were are a<font color="#E5E5E5"> few kind of constraints so a</font>

846
00:40:12,970 --> 00:40:17,560
couple of things<font color="#E5E5E5"> I noticed were both the</font>

847
00:40:15,910 --> 00:40:19,089
heat and<font color="#E5E5E5"> the stack on the device were</font>

848
00:40:17,560 --> 00:40:21,820
completely executable which was awesome

849
00:40:19,090 --> 00:40:23,350
because I meant I could<font color="#E5E5E5"> just put my</font>

850
00:40:21,820 --> 00:40:27,220
shell code on the stack and<font color="#CCCCCC"> I</font>

851
00:40:23,350 --> 00:40:29,950
<font color="#E5E5E5">secure sir something that was a semi</font>

852
00:40:27,220 --> 00:40:32,649
annoying for making this super reliable

853
00:40:29,950 --> 00:40:34,779
was that a SLR was enabled on the device

854
00:40:32,650 --> 00:40:37,480
and<font color="#CCCCCC"> it was set to conservative mode and</font>

855
00:40:34,780 --> 00:40:43,110
what<font color="#E5E5E5"> that means is effectively the base</font>

856
00:40:37,480 --> 00:40:46,270
<font color="#E5E5E5">address is very poorly randomized and</font>

857
00:40:43,110 --> 00:40:47,800
what we found<font color="#E5E5E5"> was actually you can just</font>

858
00:40:46,270 --> 00:40:50,860
brute force the base<font color="#E5E5E5"> address of the</font>

859
00:40:47,800 --> 00:40:52,180
device so if you want to exploit one of

860
00:40:50,860 --> 00:40:54,730
these<font color="#E5E5E5"> things you can have a pretty</font>

861
00:40:52,180 --> 00:40:58,990
reliable exploit but it takes maybe 20

862
00:40:54,730 --> 00:41:01,630
attempts or so to get it working what

863
00:40:58,990 --> 00:41:03,700
was pretty useful was on there is a

864
00:41:01,630 --> 00:41:06,010
software watchdog on the device so the

865
00:41:03,700 --> 00:41:09,910
watchdog is effectively there to detect

866
00:41:06,010 --> 00:41:13,150
instability and if it detects a crash it

867
00:41:09,910 --> 00:41:14,830
will cause the device<font color="#CCCCCC"> to reboot which is</font>

868
00:41:13,150 --> 00:41:18,130
really annoying for if you're trying<font color="#E5E5E5"> to</font>

869
00:41:14,830 --> 00:41:19,660
debug the thing because when you try and

870
00:41:18,130 --> 00:41:21,940
debug it just keeps rebooting when the

871
00:41:19,660 --> 00:41:24,460
crash happens but it's massively useful

872
00:41:21,940 --> 00:41:26,890
for exploitation because not<font color="#E5E5E5"> when the</font>

873
00:41:24,460 --> 00:41:28,930
service crushes and bombs out the device

874
00:41:26,890 --> 00:41:32,830
just reboots and you get<font color="#E5E5E5"> another try so</font>

875
00:41:28,930 --> 00:41:34,810
what I<font color="#E5E5E5"> found was basically I could run</font>

876
00:41:32,830 --> 00:41:37,259
the exploit no more than<font color="#CCCCCC"> 20 times and</font>

877
00:41:34,810 --> 00:41:39,220
<font color="#E5E5E5">get a command show reliably and</font>

878
00:41:37,260 --> 00:41:41,500
something<font color="#CCCCCC"> else that was kind of annoying</font>

879
00:41:39,220 --> 00:41:44,799
was because as I mentioned everything's

880
00:41:41,500 --> 00:41:47,230
loaded from this ms loader process it

881
00:41:44,800 --> 00:41:49,120
all kicks in in child processes now I

882
00:41:47,230 --> 00:41:51,100
don't<font color="#E5E5E5"> know if anybody's tried debugging</font>

883
00:41:49,120 --> 00:41:52,560
child processes with jeanie li but gdb

884
00:41:51,100 --> 00:41:55,420
does not play nice with children

885
00:41:52,560 --> 00:41:58,690
effectively<font color="#CCCCCC"> it doesn't really</font><font color="#E5E5E5"> work too</font>

886
00:41:55,420 --> 00:42:01,500
well at following child processes which

887
00:41:58,690 --> 00:42:04,420
was kind of annoying so effectively I

888
00:42:01,500 --> 00:42:07,420
had to figure<font color="#E5E5E5"> out a way to disable the</font>

889
00:42:04,420 --> 00:42:10,510
watchdog which took me quite some time

890
00:42:07,420 --> 00:42:12,360
actually tried several tricks of you

891
00:42:10,510 --> 00:42:16,330
know just killing the watchdog process

892
00:42:12,360 --> 00:42:18,190
unloading the kernel module I tried like

893
00:42:16,330 --> 00:42:21,130
<font color="#E5E5E5">ptrace into the thing and patching outs</font>

894
00:42:18,190 --> 00:42:22,600
several routines eventually I realized I

895
00:42:21,130 --> 00:42:24,040
was just completely over complicating it

896
00:42:22,600 --> 00:42:27,100
and all I needed to<font color="#E5E5E5"> do was just rename</font>

897
00:42:24,040 --> 00:42:28,960
some shell script but<font color="#E5E5E5"> yeah effectively</font>

898
00:42:27,100 --> 00:42:31,180
<font color="#E5E5E5">once I've</font><font color="#CCCCCC"> got a the kind of watchdog out</font>

899
00:42:28,960 --> 00:42:34,210
the way<font color="#E5E5E5"> I managed to get g DB server</font>

900
00:42:31,180 --> 00:42:35,919
running on the device and realized gdb

901
00:42:34,210 --> 00:42:37,060
wouldn't work couldn't debug get when

902
00:42:35,920 --> 00:42:38,920
did it working<font color="#E5E5E5"> with</font>

903
00:42:37,060 --> 00:42:40,720
effectively core files so<font color="#E5E5E5"> we crushed the</font>

904
00:42:38,920 --> 00:42:47,170
device take the core file off and

905
00:42:40,720 --> 00:42:50,140
<font color="#E5E5E5">analyze it on another</font><font color="#CCCCCC"> q mu vm so how do</font>

906
00:42:47,170 --> 00:42:53,920
<font color="#E5E5E5">we get how do we actually exploit the</font>

907
00:42:50,140 --> 00:42:56,140
thing well what<font color="#CCCCCC"> i found was the pc</font>

908
00:42:53,920 --> 00:42:58,420
register was overwritten by whatever

909
00:42:56,140 --> 00:43:00,339
values you send it after roughly<font color="#E5E5E5"> one</font>

910
00:42:58,420 --> 00:43:01,720
<font color="#E5E5E5">hundred and seventy six bytes the work</font>

911
00:43:00,340 --> 00:43:04,390
there were some of the constraints in

912
00:43:01,720 --> 00:43:05,649
that there was a size limitation on the

913
00:43:04,390 --> 00:43:09,580
payload that you could<font color="#E5E5E5"> send it you</font>

914
00:43:05,650 --> 00:43:12,100
couldn't go over 180 bytes something

915
00:43:09,580 --> 00:43:14,110
that was<font color="#E5E5E5"> also kind of quite annoying was</font>

916
00:43:12,100 --> 00:43:16,660
we found that<font color="#E5E5E5"> a bunch of the registers</font>

917
00:43:14,110 --> 00:43:20,440
were corrupted by our overflow including

918
00:43:16,660 --> 00:43:23,470
the stack pointer and basically the

919
00:43:20,440 --> 00:43:24,880
shell code that I wrote had to push some

920
00:43:23,470 --> 00:43:27,730
arguments the stat when it was setting

921
00:43:24,880 --> 00:43:29,890
up<font color="#E5E5E5"> the system call so I had to basically</font>

922
00:43:27,730 --> 00:43:33,150
fixes that pointer which was<font color="#E5E5E5"> actually</font>

923
00:43:29,890 --> 00:43:36,160
quite simple to do<font color="#E5E5E5"> I found there was aa</font>

924
00:43:33,150 --> 00:43:38,620
the payload we sent was corrupted in at

925
00:43:36,160 --> 00:43:40,450
least two locations and so and these

926
00:43:38,620 --> 00:43:43,359
ended up getting executed so we had to

927
00:43:40,450 --> 00:43:46,629
make<font color="#CCCCCC"> sure that one we sent our shellcode</font>

928
00:43:43,360 --> 00:43:48,160
these two locations got converted to an

929
00:43:46,630 --> 00:43:51,640
instruction<font color="#CCCCCC"> that wasn't going</font><font color="#E5E5E5"> to modify</font>

930
00:43:48,160 --> 00:43:54,370
or crush the process the payload had to

931
00:43:51,640 --> 00:43:56,560
be URL safe and so we<font color="#E5E5E5"> couldn't send</font>

932
00:43:54,370 --> 00:43:58,600
things like<font color="#CCCCCC"> COD</font><font color="#E5E5E5"> return line feed we</font>

933
00:43:56,560 --> 00:44:00,580
<font color="#E5E5E5">couldn't send</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> bytes we end up</font>

934
00:43:58,600 --> 00:44:07,630
getting around this and just by URL

935
00:44:00,580 --> 00:44:10,840
encoding the payload so way we exploited

936
00:44:07,630 --> 00:44:14,010
it was because the stack I was

937
00:44:10,840 --> 00:44:17,380
executable we could effectively

938
00:44:14,010 --> 00:44:19,000
overwrite the pc register with a

939
00:44:17,380 --> 00:44:21,070
hard-coded address of where I shellcode

940
00:44:19,000 --> 00:44:24,040
was living on<font color="#E5E5E5"> the stack which was kind</font>

941
00:44:21,070 --> 00:44:26,260
<font color="#E5E5E5">of useful I got around the size</font>

942
00:44:24,040 --> 00:44:28,840
constraints by writing the shellcode in

943
00:44:26,260 --> 00:44:31,630
the mode because obviously the motors is

944
00:44:28,840 --> 00:44:34,000
two bytes rather than arm which is four

945
00:44:31,630 --> 00:44:36,550
bytes and then I wrote a little<font color="#E5E5E5"> loader</font>

946
00:44:34,000 --> 00:44:38,470
as part of<font color="#E5E5E5"> my shell code to basically</font>

947
00:44:36,550 --> 00:44:40,720
evade the other constraints and all the

948
00:44:38,470 --> 00:44:44,009
load<font color="#CCCCCC"> you did was effectively fix the</font>

949
00:44:40,720 --> 00:44:47,620
value of the stack pointer and then<font color="#CCCCCC"> it's</font>

950
00:44:44,010 --> 00:44:49,630
I<font color="#E5E5E5"> basically sprayed initially sprayed</font>

951
00:44:47,620 --> 00:44:52,598
the stack with

952
00:44:49,630 --> 00:44:56,589
some<font color="#CCCCCC"> noppe equivalent instructions which</font>

953
00:44:52,599 --> 00:44:59,799
would set our one to be<font color="#CCCCCC"> zero and</font><font color="#E5E5E5"> then I</font>

954
00:44:56,589 --> 00:45:01,299
use<font color="#CCCCCC"> that to write</font><font color="#E5E5E5"> zero or write nul</font>

955
00:44:59,799 --> 00:45:04,210
bites into my shell code where I needed

956
00:45:01,299 --> 00:45:06,700
<font color="#E5E5E5">them then the rest of the loader</font>

957
00:45:04,210 --> 00:45:09,579
basically just jumped into the mode and

958
00:45:06,700 --> 00:45:12,788
skipped over the bits that got corrupted

959
00:45:09,579 --> 00:45:14,559
so we can<font color="#E5E5E5"> effectively exporters stack</font>

960
00:45:12,789 --> 00:45:18,250
<font color="#E5E5E5">overflow to get a Comanche on the device</font>

961
00:45:14,559 --> 00:45:20,799
now<font color="#E5E5E5"> unfortunately this is this is the</font>

962
00:45:18,250 --> 00:45:24,759
same device that the<font color="#E5E5E5"> UART console died</font>

963
00:45:20,799 --> 00:45:33,759
on or was disconnected so I have<font color="#CCCCCC"> videoed</font>

964
00:45:24,759 --> 00:45:35,769
this exploit no worries mate apparently

965
00:45:33,759 --> 00:45:37,230
we've only got a<font color="#E5E5E5"> few minutes but so this</font>

966
00:45:35,769 --> 00:45:41,709
<font color="#E5E5E5">is the Python script that I wrote</font>

967
00:45:37,230 --> 00:45:46,869
effectively this is the UART console<font color="#E5E5E5"> I'm</font>

968
00:45:41,710 --> 00:45:50,140
showing it's the same<font color="#E5E5E5"> IP and run these</font>

969
00:45:46,869 --> 00:45:53,470
<font color="#E5E5E5">Python scripts you can see the payload</font>

970
00:45:50,140 --> 00:45:56,410
it sends our shell code and what it does

971
00:45:53,470 --> 00:46:00,609
<font color="#CCCCCC">is basically the shellcode just opens a</font>

972
00:45:56,410 --> 00:46:02,319
net cut listener on port 8888 and you

973
00:46:00,609 --> 00:46:04,808
can see we've exploit the stack overflow

974
00:46:02,319 --> 00:46:07,019
and we have root access against the

975
00:46:04,809 --> 00:46:07,019
device

976
00:46:11,670 --> 00:46:15,190
that was<font color="#E5E5E5"> only a couple</font><font color="#CCCCCC"> sides but</font>

977
00:46:13,599 --> 00:46:26,140
actually it told me<font color="#E5E5E5"> about two weeks do</font>

978
00:46:15,190 --> 00:46:28,000
<font color="#CCCCCC">thatI think so um so I thought you know</font>

979
00:46:26,140 --> 00:46:30,220
well if there's one<font color="#E5E5E5"> stack overflow</font>

980
00:46:28,000 --> 00:46:33,220
there's probably more had to look at

981
00:46:30,220 --> 00:46:36,040
some of<font color="#E5E5E5"> the api's that were configured</font>

982
00:46:33,220 --> 00:46:37,689
on the<font color="#E5E5E5"> Vice and it was widely using some</font>

983
00:46:36,040 --> 00:46:41,109
of the more insecure api's there's like

984
00:46:37,690 --> 00:46:43,990
311 sprint f's 59 show copies couple

985
00:46:41,109 --> 00:46:45,670
extra<font color="#E5E5E5"> cats so it probably meant there</font>

986
00:46:43,990 --> 00:46:48,160
are more memory corruption issues and in

987
00:46:45,670 --> 00:46:50,290
fact Matt started like fuzzing the thing

988
00:46:48,160 --> 00:46:52,390
and<font color="#E5E5E5"> it was just like crushing left right</font>

989
00:46:50,290 --> 00:46:54,580
and center so if you are<font color="#CCCCCC"> interested in</font>

990
00:46:52,390 --> 00:46:57,040
getting into i-80 exploitation or arm

991
00:46:54,580 --> 00:46:59,950
exploitation this device<font color="#CCCCCC"> is probably a</font>

992
00:46:57,040 --> 00:47:06,099
really<font color="#CCCCCC"> good kind of you know starting</font>

993
00:46:59,950 --> 00:47:08,950
point<font color="#E5E5E5"> I'm at all just ask some up so I'd</font>

994
00:47:06,099 --> 00:47:10,810
just<font color="#E5E5E5"> so conclude essentially the way</font>

995
00:47:08,950 --> 00:47:12,990
that consumer security systems and

996
00:47:10,810 --> 00:47:15,220
internet things the embedded devices are

997
00:47:12,990 --> 00:47:16,779
pretty much you<font color="#CCCCCC"> know they're not</font><font color="#E5E5E5"> as</font>

998
00:47:15,220 --> 00:47:18,279
mature as you standard desktop estate

999
00:47:16,780 --> 00:47:20,470
we've been saying the same things for

1000
00:47:18,280 --> 00:47:22,510
several years now you know processes

1001
00:47:20,470 --> 00:47:23,950
everything's running as root exploit

1002
00:47:22,510 --> 00:47:26,080
mitigations that you're finding in

1003
00:47:23,950 --> 00:47:28,480
smartphones and desktops are pretty much

1004
00:47:26,080 --> 00:47:30,098
absent and they're plagued by numerous

1005
00:47:28,480 --> 00:47:33,070
trivial bugs command injections

1006
00:47:30,099 --> 00:47:35,740
overflows heap overflows so there really

1007
00:47:33,070 --> 00:47:39,160
are quite a nice target for research

1008
00:47:35,740 --> 00:47:40,450
purposes<font color="#CCCCCC"> and just general hacking on so</font>

1009
00:47:39,160 --> 00:47:42,339
that pretty much brings us to the

1010
00:47:40,450 --> 00:47:45,040
conclusion so I think<font color="#E5E5E5"> we've got a few</font>

1011
00:47:42,339 --> 00:47:49,180
<font color="#CCCCCC">minutes left now for a brief Q&A if</font>

1012
00:47:45,040 --> 00:47:50,770
there are any questions and also<font color="#CCCCCC"> our if</font>

1013
00:47:49,180 --> 00:47:52,089
you did find this kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> interest in</font>

1014
00:47:50,770 --> 00:47:54,970
you want to play around<font color="#E5E5E5"> these kind of</font>

1015
00:47:52,089 --> 00:48:08,140
things we<font color="#CCCCCC"> are hiring so feel free to</font><font color="#E5E5E5"> get</font>

1016
00:47:54,970 --> 00:48:13,390
<font color="#E5E5E5">in touch questions Scott um I'd know</font>

1017
00:48:08,140 --> 00:48:15,339
like I reckon<font color="#CCCCCC"> else yeah i mean like</font>

1018
00:48:13,390 --> 00:48:18,430
ultimate lee<font color="#E5E5E5"> as security costs money but</font>

1019
00:48:15,339 --> 00:48:22,049
<font color="#CCCCCC">when</font><font color="#E5E5E5"> you start</font><font color="#CCCCCC"> seeing like things</font><font color="#E5E5E5"> in the</font>

1020
00:48:18,430 --> 00:48:24,270
press about like<font color="#E5E5E5"> iot botnets and</font>

1021
00:48:22,050 --> 00:48:26,490
a half million devices getting owned

1022
00:48:24,270 --> 00:48:28,800
then I think people probably will start

1023
00:48:26,490 --> 00:48:31,589
<font color="#CCCCCC">state notice and I think what we'll see</font>

1024
00:48:28,800 --> 00:48:33,060
is ultimately it will start to catch up

1025
00:48:31,590 --> 00:48:35,100
I mean it's a soft target now which is

1026
00:48:33,060 --> 00:48:38,160
<font color="#E5E5E5">why we started looking at your hotness</font>

1027
00:48:35,100 --> 00:48:43,500
but I think<font color="#CCCCCC"> it will eventually catch up</font>

1028
00:48:38,160 --> 00:48:53,899
with kind of desktop security anymore

1029
00:48:43,500 --> 00:48:53,900
another question now they go for it I

1030
00:48:57,170 --> 00:49:03,390
haven't tested some ease the Texas see

1031
00:49:00,930 --> 00:49:04,620
yeah I mean<font color="#CCCCCC"> it's entirely possible i</font>

1032
00:49:03,390 --> 00:49:06,180
mean we<font color="#E5E5E5"> just use the heck are efficient</font>

1033
00:49:04,620 --> 00:49:07,680
as an example but you could probably<font color="#E5E5E5"> use</font>

1034
00:49:06,180 --> 00:49:09,839
any number<font color="#CCCCCC"> of platforms</font><font color="#E5E5E5"> of doing that</font>

1035
00:49:07,680 --> 00:49:12,390
you could do something<font color="#CCCCCC"> like RF car or</font>

1036
00:49:09,840 --> 00:49:14,760
another type tool essentially the

1037
00:49:12,390 --> 00:49:16,680
weaknesses are quite<font color="#E5E5E5"> the same in many of</font>

1038
00:49:14,760 --> 00:49:18,090
<font color="#CCCCCC">these</font><font color="#E5E5E5"> systems and that one was just an</font>

1039
00:49:16,680 --> 00:49:20,640
example of how we did it and we use the

1040
00:49:18,090 --> 00:49:21,960
hack RF but you could quite easily take

1041
00:49:20,640 --> 00:49:23,819
other tool sets that are out there and

1042
00:49:21,960 --> 00:49:25,740
apply it in the same way<font color="#E5E5E5"> to other</font>

1043
00:49:23,820 --> 00:49:27,030
similar systems as well and plenty of

1044
00:49:25,740 --> 00:49:29,250
these things<font color="#CCCCCC"> that are out there and</font>

1045
00:49:27,030 --> 00:49:34,140
they're all just as trivial and

1046
00:49:29,250 --> 00:49:35,760
susceptible to this kind<font color="#E5E5E5"> of attack the</font>

1047
00:49:34,140 --> 00:49:37,440
keep<font color="#CCCCCC"> the keys themselves are quite large</font>

1048
00:49:35,760 --> 00:49:39,210
so you would be trying<font color="#E5E5E5"> to guess a lot</font>

1049
00:49:37,440 --> 00:49:40,590
and<font color="#E5E5E5"> when an alarms going off I mean you</font>

1050
00:49:39,210 --> 00:49:41,850
<font color="#CCCCCC">probably be better to play a captured</font>

1051
00:49:40,590 --> 00:49:43,620
code because the key space would<font color="#CCCCCC"> be</font>

1052
00:49:41,850 --> 00:49:49,380
quite large to guess it in the time<font color="#CCCCCC"> that</font>

1053
00:49:43,620 --> 00:49:59,220
the police were called<font color="#E5E5E5"> so okay open one</font>

1054
00:49:49,380 --> 00:50:01,200
more<font color="#CCCCCC"> I</font><font color="#E5E5E5"> I would go and get one that's</font>

1055
00:49:59,220 --> 00:50:02,730
used in a bank or has multiple channels

1056
00:50:01,200 --> 00:50:03,720
out of it something that's quite high

1057
00:50:02,730 --> 00:50:05,400
security depending on what you're

1058
00:50:03,720 --> 00:50:07,290
protecting<font color="#CCCCCC"> I mean you got a</font><font color="#E5E5E5"> view on your</font>

1059
00:50:05,400 --> 00:50:09,840
<font color="#E5E5E5">assets are Dominic was just protecting a</font>

1060
00:50:07,290 --> 00:50:13,200
couple of bags of PG<font color="#E5E5E5"> Tips so it was you</font>

1061
00:50:09,840 --> 00:50:15,090
<font color="#CCCCCC">know yeah I would look look what it</font>

1062
00:50:13,200 --> 00:50:16,020
speaks to the manufacturer speak and get

1063
00:50:15,090 --> 00:50:17,220
a system that suits your needs

1064
00:50:16,020 --> 00:50:19,200
preferably one that has multiple

1065
00:50:17,220 --> 00:50:21,120
channels out that can phone out that

1066
00:50:19,200 --> 00:50:22,620
maybe isn't using some wireless

1067
00:50:21,120 --> 00:50:24,750
proximity sensors and is in fact

1068
00:50:22,620 --> 00:50:26,549
<font color="#E5E5E5">hardwired and that would that would</font>

1069
00:50:24,750 --> 00:50:28,800
increase difficulty I mean wireless in

1070
00:50:26,550 --> 00:50:30,510
general is going to introduce an element

1071
00:50:28,800 --> 00:50:32,490
of risk that someone can can do<font color="#E5E5E5"> these</font>

1072
00:50:30,510 --> 00:50:33,990
kinds of attacks don't<font color="#E5E5E5"> collect its knees</font>

1073
00:50:32,490 --> 00:50:35,910
<font color="#E5E5E5">now yeah and don't connect it to the</font>

1074
00:50:33,990 --> 00:50:49,629
<font color="#CCCCCC">internet</font>

1075
00:50:35,910 --> 00:50:51,578
ok so the manufacturers<font color="#E5E5E5"> could release</font>

1076
00:50:49,630 --> 00:50:53,260
updated hardware some of some<font color="#E5E5E5"> of the</font>

1077
00:50:51,579 --> 00:50:54,670
bugs that we did show were patched some

1078
00:50:53,260 --> 00:50:57,660
of them are not so some<font color="#CCCCCC"> of them are</font>

1079
00:50:54,670 --> 00:50:59,589
still present in current firmware

1080
00:50:57,660 --> 00:51:01,000
unfortunately they do need to<font color="#E5E5E5"> update the</font>

1081
00:50:59,589 --> 00:51:02,859
firmware and push and push<font color="#E5E5E5"> out updates</font>

1082
00:51:01,000 --> 00:51:04,510
and in some cases that's<font color="#E5E5E5"> a manual thing</font>

1083
00:51:02,859 --> 00:51:05,980
so a lot<font color="#CCCCCC"> of these devices people buy</font>

1084
00:51:04,510 --> 00:51:07,720
them install them<font color="#E5E5E5"> in their house and</font>

1085
00:51:05,980 --> 00:51:09,579
<font color="#E5E5E5">leave them there</font><font color="#CCCCCC"> and over</font><font color="#E5E5E5"> time it's</font>

1086
00:51:07,720 --> 00:51:12,520
almost like rot that they will be<font color="#E5E5E5"> more</font>

1087
00:51:09,579 --> 00:51:14,440
and<font color="#CCCCCC"> more vulnerable over a year or</font><font color="#E5E5E5"> so so</font>

1088
00:51:12,520 --> 00:51:15,910
it<font color="#E5E5E5"> is kind of a prevalent problem in the</font>

1089
00:51:14,440 --> 00:51:22,329
way that firmware updates are being done

1090
00:51:15,910 --> 00:51:24,009
on embedded devices in general so

1091
00:51:22,329 --> 00:51:25,720
ultimately I believe in full disclosure

1092
00:51:24,010 --> 00:51:27,910
I mean it's a personal thing for<font color="#E5E5E5"> some</font>

1093
00:51:25,720 --> 00:51:29,529
people but my<font color="#E5E5E5"> opinion is that full</font>

1094
00:51:27,910 --> 00:51:31,000
disclosure does work because it forces

1095
00:51:29,529 --> 00:51:32,589
the vendors<font color="#E5E5E5"> hand to say look there is a</font>

1096
00:51:31,000 --> 00:51:34,900
problem<font color="#E5E5E5"> and that they do need</font><font color="#CCCCCC"> to address</font>

1097
00:51:32,589 --> 00:51:36,250
it and we try<font color="#CCCCCC"> to do a responsible</font>

1098
00:51:34,900 --> 00:51:37,630
disclosure practice nothing that we've

1099
00:51:36,250 --> 00:51:39,970
shown here hasn't<font color="#E5E5E5"> been sent to the</font>

1100
00:51:37,630 --> 00:51:42,250
<font color="#E5E5E5">vendors in advance so vendors are aware</font>

1101
00:51:39,970 --> 00:51:44,470
of these issues and how the problems

1102
00:51:42,250 --> 00:51:45,819
impact their systems and but ultimately

1103
00:51:44,470 --> 00:51:47,259
we believe<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> power is</font><font color="#CCCCCC"> in the</font>

1104
00:51:45,819 --> 00:51:49,000
consumers hand and if you show them

1105
00:51:47,260 --> 00:51:50,589
something was vulnerable<font color="#E5E5E5"> and they can</font>

1106
00:51:49,000 --> 00:51:52,000
then go forward<font color="#E5E5E5"> and say hey why isn't</font>

1107
00:51:50,589 --> 00:51:55,349
this fixed and start<font color="#E5E5E5"> demanding answers</font>

1108
00:51:52,000 --> 00:51:55,349
from the person<font color="#CCCCCC"> who sold them a product</font>

1109
00:51:57,150 --> 00:52:00,720
thank you

1110
00:51:58,660 --> 00:52:00,720
you

