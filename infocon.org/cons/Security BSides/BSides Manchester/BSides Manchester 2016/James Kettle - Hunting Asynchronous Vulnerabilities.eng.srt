1
00:00:05,109 --> 00:00:10,370
welcome to hunting asynchronous

2
00:00:07,279 --> 00:00:12,950
vulnerabilities<font color="#CCCCCC"> you may find it</font>

3
00:00:10,370 --> 00:00:15,500
<font color="#E5E5E5">concerning that as you browse the web</font>

4
00:00:12,950 --> 00:00:17,779
every<font color="#CCCCCC"> fragment of information that</font>

5
00:00:15,500 --> 00:00:20,090
<font color="#E5E5E5">you're browsing gives off is instantly</font>

6
00:00:17,779 --> 00:00:22,550
fed into scores of back-end<font color="#E5E5E5"> system for</font>

7
00:00:20,090 --> 00:00:24,770
advertising and<font color="#E5E5E5"> tracking where the state</font>

8
00:00:22,550 --> 00:00:27,860
of<font color="#E5E5E5"> is mined processed and mangled for</font>

9
00:00:24,770 --> 00:00:30,740
all it's worth<font color="#CCCCCC"> or you may think that</font>

10
00:00:27,860 --> 00:00:34,190
that's some serious attack surface<font color="#CCCCCC"> if</font>

11
00:00:30,740 --> 00:00:36,559
only I had a way<font color="#E5E5E5"> to harness it in this</font>

12
00:00:34,190 --> 00:00:38,809
<font color="#E5E5E5">session</font><font color="#CCCCCC"> I'll share with you a range of</font>

13
00:00:36,559 --> 00:00:40,780
techniques<font color="#E5E5E5"> for mining invisible attack</font>

14
00:00:38,809 --> 00:00:44,260
surfaces<font color="#E5E5E5"> and finding vulnerabilities</font>

15
00:00:40,780 --> 00:00:47,179
regardless of where they're hiding

16
00:00:44,260 --> 00:00:49,849
around 18 months<font color="#CCCCCC"> ago</font>

17
00:00:47,179 --> 00:00:52,510
I was<font color="#E5E5E5"> asked to pen test an e-commerce</font>

18
00:00:49,850 --> 00:00:54,679
website that sold<font color="#E5E5E5"> designer clothes and</font>

19
00:00:52,510 --> 00:00:56,989
<font color="#CCCCCC">there was a staging version of</font><font color="#E5E5E5"> this</font>

20
00:00:54,679 --> 00:00:59,539
website<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it was completely</font><font color="#CCCCCC"> broken so</font>

21
00:00:56,989 --> 00:01:01,578
I had to test the<font color="#E5E5E5"> night</font><font color="#CCCCCC"> vision and this</font>

22
00:00:59,539 --> 00:01:03,469
meant that<font color="#CCCCCC"> I had</font><font color="#E5E5E5"> to use</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> own valid</font>

23
00:01:01,579 --> 00:01:07,340
credit card<font color="#E5E5E5"> details in order to do</font>

24
00:01:03,469 --> 00:01:10,190
purchases<font color="#E5E5E5"> and as a result I was being</font>

25
00:01:07,340 --> 00:01:12,320
extremely<font color="#E5E5E5"> careful</font><font color="#CCCCCC"> not to accidentally</font>

26
00:01:10,190 --> 00:01:16,100
purchase say a<font color="#E5E5E5"> thousand pound leather</font>

27
00:01:12,320 --> 00:01:18,529
jacket for<font color="#E5E5E5"> myself and after</font><font color="#CCCCCC"> spending the</font>

28
00:01:16,100 --> 00:01:20,690
first morning testing<font color="#CCCCCC"> I'm not really</font>

29
00:01:18,530 --> 00:01:24,560
<font color="#E5E5E5">getting anywhere</font><font color="#CCCCCC"> I went out for</font><font color="#E5E5E5"> lunch</font>

30
00:01:20,690 --> 00:01:27,770
<font color="#CCCCCC">and when I got back from lunch I found I</font>

31
00:01:24,560 --> 00:01:30,080
had<font color="#CCCCCC"> an email it said</font><font color="#E5E5E5"> dear James</font>

32
00:01:27,770 --> 00:01:33,560
<font color="#E5E5E5">congratulations</font><font color="#CCCCCC"> on your order of</font><font color="#E5E5E5"> this</font>

33
00:01:30,080 --> 00:01:37,190
fine thousand pound leather jacket and I

34
00:01:33,560 --> 00:01:39,260
<font color="#E5E5E5">panicked</font><font color="#CCCCCC"> slightly / then</font><font color="#E5E5E5"> thinking about</font>

35
00:01:37,190 --> 00:01:41,210
it I couldn't have actually<font color="#E5E5E5"> paid for</font>

36
00:01:39,260 --> 00:01:43,430
<font color="#CCCCCC">this jacket because</font><font color="#E5E5E5"> at this point I</font>

37
00:01:41,210 --> 00:01:47,929
hadn't<font color="#CCCCCC"> entered any credit card details</font>

38
00:01:43,430 --> 00:01:49,909
<font color="#E5E5E5">whatsoever so actually I found</font><font color="#CCCCCC"> quire</font>

39
00:01:47,930 --> 00:01:51,460
serious vulnerability it was possible to

40
00:01:49,909 --> 00:01:55,640
buy items<font color="#E5E5E5"> for free</font>

41
00:01:51,460 --> 00:01:57,500
the<font color="#CCCCCC"> only catch was I had no idea what</font>

42
00:01:55,640 --> 00:01:59,150
had<font color="#E5E5E5"> triggered this vulnerability</font><font color="#CCCCCC"> I had</font>

43
00:01:57,500 --> 00:02:00,500
no<font color="#E5E5E5"> idea what had caused it and the</font>

44
00:01:59,150 --> 00:02:02,060
client<font color="#E5E5E5"> probably wasn't going to</font>

45
00:02:00,500 --> 00:02:04,130
appreciate<font color="#E5E5E5"> me going hey there you've got</font>

46
00:02:02,060 --> 00:02:05,840
<font color="#CCCCCC">a</font><font color="#E5E5E5"> critical vulnerability but I can't</font>

47
00:02:04,130 --> 00:02:11,090
tell<font color="#E5E5E5"> you how to</font><font color="#CCCCCC"> replicate it or how to</font>

48
00:02:05,840 --> 00:02:13,129
<font color="#E5E5E5">fix it it was only after three hours of</font>

49
00:02:11,090 --> 00:02:14,989
<font color="#E5E5E5">reviewing my burp suite logs that I</font>

50
00:02:13,129 --> 00:02:16,149
figured out what<font color="#E5E5E5"> the cause was which was</font>

51
00:02:14,989 --> 00:02:19,400
<font color="#E5E5E5">simply a</font>

52
00:02:16,150 --> 00:02:22,070
issue<font color="#CCCCCC"> I'd</font><font color="#E5E5E5"> added this item to my basket</font>

53
00:02:19,400 --> 00:02:23,360
during the morning of testing and the

54
00:02:22,070 --> 00:02:24,890
scanner there had been running<font color="#CCCCCC"> over</font>

55
00:02:23,360 --> 00:02:28,250
lunch time had replayed a particular

56
00:02:24,890 --> 00:02:30,109
request<font color="#E5E5E5"> which had bought this item so</font>

57
00:02:28,250 --> 00:02:33,170
<font color="#E5E5E5">that was cool and I told the client and</font>

58
00:02:30,110 --> 00:02:35,360
they were fairly<font color="#CCCCCC"> happy but it left</font><font color="#E5E5E5"> me</font>

59
00:02:33,170 --> 00:02:38,649
wondering what would have happened if

60
00:02:35,360 --> 00:02:41,060
there was no order confirmation email

61
00:02:38,650 --> 00:02:43,190
some random stranger would<font color="#E5E5E5"> have got</font>

62
00:02:41,060 --> 00:02:47,060
<font color="#CCCCCC">another jacket</font><font color="#E5E5E5"> but I would have never</font>

63
00:02:43,190 --> 00:02:49,640
found the vulnerability in effect<font color="#E5E5E5"> this</font>

64
00:02:47,060 --> 00:02:52,100
email was a<font color="#CCCCCC"> callback</font><font color="#E5E5E5"> from the</font>

65
00:02:49,640 --> 00:02:54,350
application<font color="#E5E5E5"> to to me to my mail server</font>

66
00:02:52,100 --> 00:02:58,700
<font color="#E5E5E5">to let me vote to let me know</font><font color="#CCCCCC"> that it</font>

67
00:02:54,350 --> 00:03:01,489
had a critical vulnerability<font color="#E5E5E5"> and these</font>

68
00:02:58,700 --> 00:03:04,149
instances of vulnerabilities<font color="#CCCCCC"> that happen</font>

69
00:03:01,490 --> 00:03:07,940
behind the<font color="#E5E5E5"> scenes</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> don't present</font>

70
00:03:04,150 --> 00:03:10,280
immediate evidence like directly<font color="#E5E5E5"> at you</font>

71
00:03:07,940 --> 00:03:11,750
<font color="#E5E5E5">that can happen with plenty</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> other</font>

72
00:03:10,280 --> 00:03:15,980
<font color="#CCCCCC">vulnerabilities that</font><font color="#E5E5E5"> isn't just</font><font color="#CCCCCC"> limited</font>

73
00:03:11,750 --> 00:03:18,650
to session handling so what I'll be

74
00:03:15,980 --> 00:03:21,200
<font color="#CCCCCC">talking about is</font><font color="#E5E5E5"> oh I'll be defining</font>

75
00:03:18,650 --> 00:03:22,790
<font color="#E5E5E5">what these vulnerabilities are that are</font>

76
00:03:21,200 --> 00:03:25,130
so hard<font color="#CCCCCC"> to</font><font color="#E5E5E5"> find and what it is that</font>

77
00:03:22,790 --> 00:03:27,140
makes them difficult<font color="#CCCCCC"> to identify</font><font color="#E5E5E5"> and</font>

78
00:03:25,130 --> 00:03:29,240
then I'll be<font color="#E5E5E5"> looking at some techniques</font>

79
00:03:27,140 --> 00:03:30,859
for<font color="#CCCCCC"> finding them and applying that</font><font color="#E5E5E5"> to</font>

80
00:03:29,240 --> 00:03:33,730
some<font color="#E5E5E5"> of the most</font><font color="#CCCCCC"> well-known and</font>

81
00:03:30,860 --> 00:03:36,530
<font color="#E5E5E5">widespread vulnerabilities out there</font>

82
00:03:33,730 --> 00:03:38,570
finally are we talking about<font color="#E5E5E5"> some of the</font>

83
00:03:36,530 --> 00:03:45,200
<font color="#CCCCCC">hazards with these techniques</font><font color="#E5E5E5"> and</font>

84
00:03:38,570 --> 00:03:46,459
answering<font color="#CCCCCC"> 5-minutes questions so the</font>

85
00:03:45,200 --> 00:03:52,339
core problem with<font color="#E5E5E5"> these vulnerabilities</font>

86
00:03:46,459 --> 00:03:54,490
<font color="#CCCCCC">is that they're invisible</font><font color="#E5E5E5"> compare them</font>

87
00:03:52,340 --> 00:03:56,690
with your classic sequel injection

88
00:03:54,490 --> 00:03:58,280
vulnerability with the most obvious

89
00:03:56,690 --> 00:04:00,290
<font color="#CCCCCC">sequel injection you're given</font>

90
00:03:58,280 --> 00:04:02,150
application<font color="#CCCCCC"> a single quote and you'll</font>

91
00:04:00,290 --> 00:04:03,739
get a sequel<font color="#E5E5E5"> error message back and you</font>

92
00:04:02,150 --> 00:04:07,040
go great<font color="#E5E5E5"> that's vulnerable to the sequel</font>

93
00:04:03,740 --> 00:04:11,360
to sequel injection<font color="#E5E5E5"> and you proceed to</font>

94
00:04:07,040 --> 00:04:13,070
<font color="#CCCCCC">exploit it some other the server might</font>

95
00:04:11,360 --> 00:04:15,410
be configured not to give you sequel

96
00:04:13,070 --> 00:04:18,230
error messages but you may<font color="#CCCCCC"> still be able</font>

97
00:04:15,410 --> 00:04:20,899
<font color="#E5E5E5">to find</font><font color="#CCCCCC"> the some sequel injections</font><font color="#E5E5E5"> by</font>

98
00:04:18,230 --> 00:04:23,300
using a payload like all one equals<font color="#CCCCCC"> one</font>

99
00:04:20,899 --> 00:04:26,210
and observing the effect<font color="#CCCCCC"> that has</font><font color="#E5E5E5"> on</font>

100
00:04:23,300 --> 00:04:29,870
those on the output that<font color="#CCCCCC"> you get on</font><font color="#E5E5E5"> the</font>

101
00:04:26,210 --> 00:04:32,049
website<font color="#E5E5E5"> but this technique also doesn't</font>

102
00:04:29,870 --> 00:04:35,060
with asynchronous vulnerabilities<font color="#E5E5E5"> and</font>

103
00:04:32,050 --> 00:04:37,130
finally with<font color="#CCCCCC"> some of the more advanced</font>

104
00:04:35,060 --> 00:04:39,110
sequel sequel injection vulnerabilities

105
00:04:37,130 --> 00:04:42,140
<font color="#CCCCCC">you can't change the output that you get</font>

106
00:04:39,110 --> 00:04:44,030
but<font color="#E5E5E5"> you can tell the server to to do</font>

107
00:04:42,140 --> 00:04:46,729
something like sleep for<font color="#E5E5E5"> 10 seconds and</font>

108
00:04:44,030 --> 00:04:48,770
<font color="#E5E5E5">you can time there were spots but once</font>

109
00:04:46,730 --> 00:04:53,150
<font color="#CCCCCC">again for an asynchronous vulnerability</font>

110
00:04:48,770 --> 00:04:56,150
this doesn't work what<font color="#E5E5E5"> are some common</font>

111
00:04:53,150 --> 00:04:58,729
<font color="#E5E5E5">examples</font><font color="#CCCCCC"> of of where asynchronous</font>

112
00:04:56,150 --> 00:05:04,250
vulnerabilities can<font color="#E5E5E5"> arise well probably</font>

113
00:04:58,730 --> 00:05:06,440
<font color="#E5E5E5">the most one is is a vulnerability in a</font>

114
00:05:04,250 --> 00:05:09,920
cron job that's just run maybe nightly

115
00:05:06,440 --> 00:05:12,560
say<font color="#CCCCCC"> say a cron job that</font><font color="#E5E5E5"> does a backup of</font>

116
00:05:09,920 --> 00:05:14,090
<font color="#E5E5E5">the database nightly this cron job could</font>

117
00:05:12,560 --> 00:05:16,340
be<font color="#CCCCCC"> could be</font><font color="#E5E5E5"> vulnerable to sequel</font>

118
00:05:14,090 --> 00:05:19,250
injection<font color="#E5E5E5"> or show command injection or</font>

119
00:05:16,340 --> 00:05:21,109
various other<font color="#CCCCCC"> things but</font><font color="#E5E5E5"> as the tester</font>

120
00:05:19,250 --> 00:05:23,510
<font color="#E5E5E5">you're not going</font><font color="#CCCCCC"> to get the</font><font color="#E5E5E5"> output of</font>

121
00:05:21,110 --> 00:05:26,600
this cron job and if you inject<font color="#E5E5E5"> a time</font>

122
00:05:23,510 --> 00:05:28,010
<font color="#E5E5E5">delay you're never gonna you can't</font>

123
00:05:26,600 --> 00:05:32,090
notice it<font color="#CCCCCC"> because it's executing in a</font>

124
00:05:28,010 --> 00:05:34,909
background<font color="#E5E5E5"> thread some other issues</font>

125
00:05:32,090 --> 00:05:36,770
might not be triggered<font color="#E5E5E5"> in the background</font>

126
00:05:34,910 --> 00:05:40,280
thread but they might require<font color="#CCCCCC"> some kind</font>

127
00:05:36,770 --> 00:05:42,770
of a event<font color="#E5E5E5"> probably the best</font><font color="#CCCCCC"> example of</font>

128
00:05:40,280 --> 00:05:44,179
this is blind cross-site scripting where

129
00:05:42,770 --> 00:05:45,950
you give an<font color="#CCCCCC"> application in your</font>

130
00:05:44,180 --> 00:05:48,140
cross-site scripting payload and it

131
00:05:45,950 --> 00:05:50,000
never gets displayed to you<font color="#E5E5E5"> it's only</font>

132
00:05:48,140 --> 00:05:52,250
visible<font color="#E5E5E5"> to</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> administrator somewhere</font>

133
00:05:50,000 --> 00:05:55,700
in some back-end<font color="#CCCCCC"> that you can't see</font><font color="#E5E5E5"> and</font>

134
00:05:52,250 --> 00:05:57,860
you<font color="#E5E5E5"> don't have access</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> and the admin</font>

135
00:05:55,700 --> 00:06:00,229
might view that payload<font color="#E5E5E5"> two weeks after</font>

136
00:05:57,860 --> 00:06:04,100
your test has finished<font color="#E5E5E5"> so how do you</font>

137
00:06:00,230 --> 00:06:05,660
find that<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> issue</font><font color="#CCCCCC"> and finally the</font>

138
00:06:04,100 --> 00:06:09,350
techniques<font color="#CCCCCC"> that I'll be talking about</font>

139
00:06:05,660 --> 00:06:11,570
can also be used<font color="#E5E5E5"> to identify</font><font color="#CCCCCC"> other</font>

140
00:06:09,350 --> 00:06:15,470
issues that<font color="#CCCCCC"> aren't</font><font color="#E5E5E5"> strictly asynchronous</font>

141
00:06:11,570 --> 00:06:17,500
but are<font color="#E5E5E5"> still very difficult to find for</font>

142
00:06:15,470 --> 00:06:21,320
example<font color="#CCCCCC"> it's a</font><font color="#E5E5E5"> same application is</font>

143
00:06:17,500 --> 00:06:25,580
processing<font color="#CCCCCC"> your input as XML and it's</font>

144
00:06:21,320 --> 00:06:27,890
vulnerable<font color="#E5E5E5"> to external XML entities how</font>

145
00:06:25,580 --> 00:06:29,659
do you find that vulnerability<font color="#CCCCCC"> if the</font>

146
00:06:27,890 --> 00:06:33,800
<font color="#E5E5E5">application doesn't display you the</font>

147
00:06:29,660 --> 00:06:37,010
result<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this processing you there's no</font>

148
00:06:33,800 --> 00:06:38,600
easy way with XML<font color="#E5E5E5"> to cause a time delay</font>

149
00:06:37,010 --> 00:06:41,940
<font color="#E5E5E5">without risking taking out the server</font>

150
00:06:38,600 --> 00:06:45,600
which you<font color="#CCCCCC"> probably</font><font color="#E5E5E5"> don't want to do</font>

151
00:06:41,940 --> 00:06:47,910
in order to<font color="#E5E5E5"> find all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these issues we</font>

152
00:06:45,600 --> 00:06:49,800
need<font color="#E5E5E5"> callbacks we need something like</font>

153
00:06:47,910 --> 00:06:51,810
<font color="#CCCCCC">the order confirmation email that was</font>

154
00:06:49,800 --> 00:06:53,880
sent from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> website to my mail server</font>

155
00:06:51,810 --> 00:06:59,640
to let me<font color="#E5E5E5"> know that it was</font><font color="#CCCCCC"> vulnerable</font>

156
00:06:53,880 --> 00:07:01,590
<font color="#E5E5E5">and you</font><font color="#CCCCCC"> might be thinking great well in</font>

157
00:06:59,640 --> 00:07:05,130
<font color="#E5E5E5">order to receive this</font><font color="#CCCCCC"> callback I need to</font>

158
00:07:01,590 --> 00:07:07,409
<font color="#E5E5E5">host a publicly accessible server which</font>

159
00:07:05,130 --> 00:07:09,480
exposes every<font color="#CCCCCC"> network protocol in</font>

160
00:07:07,410 --> 00:07:13,380
existence<font color="#CCCCCC"> how secure does that sound</font>

161
00:07:09,480 --> 00:07:17,190
well fortunately almost every<font color="#E5E5E5"> network</font>

162
00:07:13,380 --> 00:07:21,210
protocol uses DNS so actually<font color="#CCCCCC"> all you</font>

163
00:07:17,190 --> 00:07:25,140
<font color="#E5E5E5">need to do is support</font><font color="#CCCCCC"> DNS is recognized</font>

164
00:07:21,210 --> 00:07:27,659
<font color="#E5E5E5">DNS lookups</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then you can find SMTP</font>

165
00:07:25,140 --> 00:07:30,000
injection and issues that<font color="#CCCCCC"> cause service</font>

166
00:07:27,660 --> 00:07:33,990
to make<font color="#E5E5E5"> UNC connections to your server</font>

167
00:07:30,000 --> 00:07:37,200
<font color="#E5E5E5">and SMB and so on another great thing</font>

168
00:07:33,990 --> 00:07:39,500
<font color="#E5E5E5">about DNS for this purpose is</font><font color="#CCCCCC"> that it's</font>

169
00:07:37,200 --> 00:07:42,930
<font color="#E5E5E5">rarely filtered</font><font color="#CCCCCC"> our bound on firewalls</font>

170
00:07:39,500 --> 00:07:44,670
<font color="#E5E5E5">widely used by various three-letter</font>

171
00:07:42,930 --> 00:07:46,920
groups because basically<font color="#E5E5E5"> if you block</font>

172
00:07:44,670 --> 00:07:48,750
<font color="#CCCCCC">dear in DNS outbound</font><font color="#E5E5E5"> on your firewall</font>

173
00:07:46,920 --> 00:07:52,860
things will tend<font color="#E5E5E5"> to break so people</font>

174
00:07:48,750 --> 00:07:54,810
don't tend<font color="#E5E5E5"> to do it also if you're a</font>

175
00:07:52,860 --> 00:07:58,200
burp suite user you<font color="#CCCCCC"> don't need to host</font>

176
00:07:54,810 --> 00:08:00,720
this this public this server<font color="#CCCCCC"> we've got</font>

177
00:07:58,200 --> 00:08:03,270
the<font color="#CCCCCC"> the burp collaborator which does</font>

178
00:08:00,720 --> 00:08:03,720
this for you<font color="#E5E5E5"> and within the</font><font color="#CCCCCC"> next month</font>

179
00:08:03,270 --> 00:08:07,530
or two

180
00:08:03,720 --> 00:08:09,270
<font color="#CCCCCC">we're fanning</font><font color="#E5E5E5"> on on releasing and API so</font>

181
00:08:07,530 --> 00:08:11,190
<font color="#E5E5E5">that you can</font><font color="#CCCCCC"> right scan checks</font><font color="#E5E5E5"> using</font>

182
00:08:09,270 --> 00:08:17,340
asynchronous payloads for your own

183
00:08:11,190 --> 00:08:20,130
personal use<font color="#CCCCCC"> okay that's the core of the</font>

184
00:08:17,340 --> 00:08:22,109
theory<font color="#E5E5E5"> so how do we actually what</font><font color="#CCCCCC"> does</font>

185
00:08:20,130 --> 00:08:25,200
it look<font color="#E5E5E5"> like when we apply this theory</font>

186
00:08:22,110 --> 00:08:27,240
<font color="#CCCCCC">to a vulnerability class well first we</font>

187
00:08:25,200 --> 00:08:29,039
need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have a look at what the problems</font>

188
00:08:27,240 --> 00:08:31,950
we run into<font color="#E5E5E5"> are there's a reason this</font>

189
00:08:29,040 --> 00:08:37,020
<font color="#E5E5E5">isn't widely done at the moment the</font>

190
00:08:31,950 --> 00:08:41,460
primary issue is that<font color="#E5E5E5"> callback exploits</font>

191
00:08:37,020 --> 00:08:44,520
fail hard so we're building<font color="#E5E5E5"> exploiting</font><font color="#CCCCCC"> a</font>

192
00:08:41,460 --> 00:08:46,950
normal vulnerability is typically an

193
00:08:44,520 --> 00:08:50,329
iterative process<font color="#E5E5E5"> first you</font><font color="#CCCCCC"> find the</font>

194
00:08:46,950 --> 00:08:52,410
vulnerability and then you exploit it

195
00:08:50,330 --> 00:08:55,470
whereas<font color="#E5E5E5"> if you're trying</font><font color="#CCCCCC"> to trigger</font><font color="#E5E5E5"> a</font>

196
00:08:52,410 --> 00:08:58,170
<font color="#CCCCCC">callback</font><font color="#E5E5E5"> unless you submit a</font>

197
00:08:55,470 --> 00:08:59,820
absolutely perfect<font color="#E5E5E5"> payload no callback</font>

198
00:08:58,170 --> 00:09:03,390
will happen and you'll never know<font color="#CCCCCC"> that</font>

199
00:08:59,820 --> 00:09:05,970
the vulnerability<font color="#E5E5E5"> exists and that means</font>

200
00:09:03,390 --> 00:09:11,010
that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> quality of the</font><font color="#E5E5E5"> payload is</font>

201
00:09:05,970 --> 00:09:13,770
really important ideally you you want it

202
00:09:11,010 --> 00:09:15,540
to<font color="#E5E5E5"> work in every</font><font color="#CCCCCC"> environment that it</font>

203
00:09:13,770 --> 00:09:18,090
could that it could plausibly be

204
00:09:15,540 --> 00:09:20,790
executed it for example<font color="#CCCCCC"> a show command</font>

205
00:09:18,090 --> 00:09:23,700
injection payload might be executed on

206
00:09:20,790 --> 00:09:25,349
Windows<font color="#E5E5E5"> or Linux or who knows what so</font>

207
00:09:23,700 --> 00:09:29,010
you want<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that works</font><font color="#E5E5E5"> in all of</font>

208
00:09:25,350 --> 00:09:30,960
those contexts<font color="#E5E5E5"> and similarly if it's a</font>

209
00:09:29,010 --> 00:09:33,060
blind XSS payload you don't know where

210
00:09:30,960 --> 00:09:35,280
within<font color="#E5E5E5"> that HTML markup it will be</font>

211
00:09:33,060 --> 00:09:36,719
appearing<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I ideally</font><font color="#E5E5E5"> you want a</font>

212
00:09:35,280 --> 00:09:41,069
polyglot payload that<font color="#E5E5E5"> will work with</font>

213
00:09:36,720 --> 00:09:42,210
garlis of where it appears you also

214
00:09:41,070 --> 00:09:44,370
<font color="#E5E5E5">don't know if your</font><font color="#CCCCCC"> input</font><font color="#E5E5E5"> is being</font>

215
00:09:42,210 --> 00:09:47,310
<font color="#E5E5E5">filtered so you want it to be resistant</font>

216
00:09:44,370 --> 00:09:49,080
<font color="#CCCCCC">to filters and of course you</font><font color="#E5E5E5"> want it to</font>

217
00:09:47,310 --> 00:09:51,239
be as<font color="#CCCCCC"> simple as possible</font><font color="#E5E5E5"> because then</font>

218
00:09:49,080 --> 00:09:54,720
because the more complex it<font color="#E5E5E5"> is the more</font>

219
00:09:51,240 --> 00:09:57,150
<font color="#CCCCCC">likely things are to go on and if that</font>

220
00:09:54,720 --> 00:09:59,870
<font color="#CCCCCC">sounds like a tall order</font><font color="#E5E5E5"> then yeah it's</font>

221
00:09:57,150 --> 00:10:02,340
absolutely<font color="#CCCCCC"> a best-effort sort of thing</font>

222
00:09:59,870 --> 00:10:04,500
let's look at a type of<font color="#E5E5E5"> vulnerability</font>

223
00:10:02,340 --> 00:10:07,320
<font color="#E5E5E5">where you're triggering a callback by</font>

224
00:10:04,500 --> 00:10:10,770
the very nature<font color="#E5E5E5"> of it so with classic</font>

225
00:10:07,320 --> 00:10:13,230
<font color="#CCCCCC">smtp header injection</font><font color="#E5E5E5"> user input is</font>

226
00:10:10,770 --> 00:10:15,840
placed inside<font color="#E5E5E5"> an email header and by</font>

227
00:10:13,230 --> 00:10:18,210
<font color="#E5E5E5">adding a</font><font color="#CCCCCC"> newline</font><font color="#E5E5E5"> the user can inject</font>

228
00:10:15,840 --> 00:10:20,610
<font color="#E5E5E5">extra email headers and maybe make the</font>

229
00:10:18,210 --> 00:10:24,120
email get<font color="#E5E5E5"> carbon copied to a different</font>

230
00:10:20,610 --> 00:10:26,340
<font color="#E5E5E5">destination and if in if there's someone</font>

231
00:10:24,120 --> 00:10:29,910
<font color="#E5E5E5">else's password reset</font><font color="#CCCCCC"> email then that's</font>

232
00:10:26,340 --> 00:10:31,530
that's quite<font color="#E5E5E5"> a nice vulnerability and I</font>

233
00:10:29,910 --> 00:10:35,189
actually found that<font color="#CCCCCC"> vulnerability in</font>

234
00:10:31,530 --> 00:10:37,890
Mozilla persona<font color="#E5E5E5"> a while ago but there</font>

235
00:10:35,190 --> 00:10:41,220
was a catch<font color="#CCCCCC"> which was</font><font color="#E5E5E5"> that the mail</font>

236
00:10:37,890 --> 00:10:44,699
server processed the headers before my

237
00:10:41,220 --> 00:10:47,420
header<font color="#E5E5E5"> got injected so it would ignore</font>

238
00:10:44,700 --> 00:10:51,600
me saying things<font color="#E5E5E5"> like please</font><font color="#CCCCCC"> Carbon Copy</font>

239
00:10:47,420 --> 00:10:55,319
<font color="#E5E5E5">me on this password reset</font><font color="#CCCCCC"> email in order</font>

240
00:10:51,600 --> 00:10:59,220
<font color="#E5E5E5">to exploit this I had to inject</font><font color="#CCCCCC"> a reply</font>

241
00:10:55,320 --> 00:11:00,840
to header and then<font color="#E5E5E5"> a zip bomb and the</font>

242
00:10:59,220 --> 00:11:03,000
idea here<font color="#CCCCCC"> was I mean</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> everything it</font>

243
00:11:00,840 --> 00:11:06,000
was<font color="#CCCCCC"> a zip bomb got to do with</font><font color="#E5E5E5"> this the</font>

244
00:11:03,000 --> 00:11:08,520
<font color="#E5E5E5">idea is the the mail server of the</font>

245
00:11:06,000 --> 00:11:09,190
victim<font color="#E5E5E5"> would scan the email for viruses</font>

246
00:11:08,520 --> 00:11:11,439
they would go

247
00:11:09,190 --> 00:11:13,060
whoa<font color="#CCCCCC"> there's a really well-known zip</font>

248
00:11:11,440 --> 00:11:15,490
bomb on<font color="#E5E5E5"> this and they would bounce the</font>

249
00:11:13,060 --> 00:11:17,260
email<font color="#CCCCCC"> and with a bit of luck because of</font>

250
00:11:15,490 --> 00:11:19,000
my reply to<font color="#CCCCCC"> header the email would get</font>

251
00:11:17,260 --> 00:11:24,220
bounced back to<font color="#CCCCCC"> me</font><font color="#E5E5E5"> and I'd have their</font>

252
00:11:19,000 --> 00:11:27,340
password reset<font color="#CCCCCC"> email and the what you've</font>

253
00:11:24,220 --> 00:11:31,360
got to try and<font color="#E5E5E5"> do is anticipate things</font>

254
00:11:27,340 --> 00:11:33,730
going wrong<font color="#E5E5E5"> like</font><font color="#CCCCCC"> this you've got to</font><font color="#E5E5E5"> say</font>

255
00:11:31,360 --> 00:11:36,130
<font color="#E5E5E5">how</font><font color="#CCCCCC"> can this exploit fail when</font><font color="#E5E5E5"> I've</font>

256
00:11:33,730 --> 00:11:37,660
exploited this in normal<font color="#E5E5E5"> cases what's</font>

257
00:11:36,130 --> 00:11:42,820
gone wrong<font color="#E5E5E5"> and what</font><font color="#CCCCCC"> measures can I take</font>

258
00:11:37,660 --> 00:11:47,230
<font color="#E5E5E5">to handle</font><font color="#CCCCCC"> that XML</font><font color="#E5E5E5"> is a wonderful</font>

259
00:11:42,820 --> 00:11:50,890
technology<font color="#E5E5E5"> this single XML document uses</font>

260
00:11:47,230 --> 00:11:55,360
six<font color="#E5E5E5"> different features of XML to trigger</font>

261
00:11:50,890 --> 00:11:57,340
pingbacks<font color="#E5E5E5"> to remote service and each one</font>

262
00:11:55,360 --> 00:12:00,670
of<font color="#E5E5E5"> them is really quite simple</font>

263
00:11:57,340 --> 00:12:03,370
<font color="#CCCCCC">so finding XML injection of finding</font>

264
00:12:00,670 --> 00:12:05,050
external XML entity<font color="#E5E5E5"> related issues it's</font>

265
00:12:03,370 --> 00:12:08,770
really really<font color="#CCCCCC"> simple because it's built</font>

266
00:12:05,050 --> 00:12:11,640
it's baked into the<font color="#CCCCCC"> core technology the</font>

267
00:12:08,770 --> 00:12:15,189
last two payloads on that screen<font color="#E5E5E5"> are</font>

268
00:12:11,640 --> 00:12:17,290
<font color="#E5E5E5">particularly useful because they don't</font>

269
00:12:15,190 --> 00:12:19,900
need to be placed inside<font color="#E5E5E5"> the header of</font>

270
00:12:17,290 --> 00:12:23,290
<font color="#CCCCCC">the</font><font color="#E5E5E5"> XML document and</font><font color="#CCCCCC"> that means that</font><font color="#E5E5E5"> you</font>

271
00:12:19,900 --> 00:12:25,209
can find<font color="#E5E5E5"> XML injection vulnerabilities</font>

272
00:12:23,290 --> 00:12:28,060
where<font color="#CCCCCC"> user input is placed</font><font color="#E5E5E5"> inside a</font>

273
00:12:25,210 --> 00:12:29,500
larger XML document<font color="#E5E5E5"> and that's the type</font>

274
00:12:28,060 --> 00:12:34,810
of<font color="#CCCCCC"> vulnerability that's normally really</font>

275
00:12:29,500 --> 00:12:37,830
challenging to<font color="#E5E5E5"> find all about sequel</font>

276
00:12:34,810 --> 00:12:40,810
injection<font color="#E5E5E5"> well structured query language</font>

277
00:12:37,830 --> 00:12:43,720
<font color="#CCCCCC">isn't really designed with connecting to</font>

278
00:12:40,810 --> 00:12:45,520
external services<font color="#CCCCCC"> in mind so there's</font>

279
00:12:43,720 --> 00:12:48,790
<font color="#CCCCCC">nothing in the core spec</font><font color="#E5E5E5"> that I could</font>

280
00:12:45,520 --> 00:12:52,120
find<font color="#CCCCCC"> there let's to initiate a ping</font><font color="#E5E5E5"> back</font>

281
00:12:48,790 --> 00:12:55,660
to a remote server<font color="#CCCCCC"> so why I've done</font>

282
00:12:52,120 --> 00:12:57,580
instead is<font color="#E5E5E5"> looked at each database and</font>

283
00:12:55,660 --> 00:13:01,839
seen if I can use some database specific

284
00:12:57,580 --> 00:13:03,940
features to issue this<font color="#E5E5E5"> call back and I</font>

285
00:13:01,839 --> 00:13:10,390
thought<font color="#E5E5E5"> I was getting</font><font color="#CCCCCC"> nowhere with post</font>

286
00:13:03,940 --> 00:13:12,070
<font color="#CCCCCC">play and why didn't I just</font><font color="#E5E5E5"> I I</font><font color="#CCCCCC"> just skim</font>

287
00:13:10,390 --> 00:13:14,650
read this page of the manual<font color="#E5E5E5"> here</font><font color="#CCCCCC"> and</font>

288
00:13:12,070 --> 00:13:17,980
maybe<font color="#E5E5E5"> you can see the thing that</font><font color="#CCCCCC"> I</font>

289
00:13:14,650 --> 00:13:21,520
missed this copy command<font color="#CCCCCC"> it doesn't</font>

290
00:13:17,980 --> 00:13:22,810
sound<font color="#E5E5E5"> very promising right but if you</font>

291
00:13:21,520 --> 00:13:25,360
look closely

292
00:13:22,810 --> 00:13:26,890
you can actually<font color="#E5E5E5"> use the copy command to</font>

293
00:13:25,360 --> 00:13:29,230
execute arbitrary shell commands<font color="#E5E5E5"> on the</font>

294
00:13:26,890 --> 00:13:31,110
server<font color="#E5E5E5"> that's kind of cool</font>

295
00:13:29,230 --> 00:13:33,910
so if you inject something<font color="#E5E5E5"> like that</font>

296
00:13:31,110 --> 00:13:36,220
then regardless of whether the<font color="#E5E5E5"> backend</font>

297
00:13:33,910 --> 00:13:37,660
system is Windows or Linux as long as

298
00:13:36,220 --> 00:13:40,779
you've got admin privileges on the

299
00:13:37,660 --> 00:13:42,550
<font color="#CCCCCC">database</font><font color="#E5E5E5"> you've just found sequel</font>

300
00:13:40,779 --> 00:13:44,140
<font color="#E5E5E5">injection</font><font color="#CCCCCC"> in a completely asynchronous</font>

301
00:13:42,550 --> 00:13:45,579
<font color="#CCCCCC">way so it doesn't matter if this</font>

302
00:13:44,140 --> 00:13:47,830
vulnerability happens in a<font color="#E5E5E5"> background</font>

303
00:13:45,580 --> 00:13:49,810
<font color="#E5E5E5">thread on some other server than the one</font>

304
00:13:47,830 --> 00:13:52,830
<font color="#CCCCCC">that you were targeting because you</font><font color="#E5E5E5"> just</font>

305
00:13:49,810 --> 00:13:56,560
<font color="#E5E5E5">got that ping back so that's nice</font>

306
00:13:52,830 --> 00:13:58,060
what about<font color="#E5E5E5"> sequel Lite sequel Lite the</font>

307
00:13:56,560 --> 00:14:00,189
<font color="#CCCCCC">name makes it</font><font color="#E5E5E5"> sound like this is going</font>

308
00:13:58,060 --> 00:14:01,900
<font color="#E5E5E5">to be really</font><font color="#CCCCCC"> difficult right</font><font color="#E5E5E5"> it's going</font>

309
00:14:00,190 --> 00:14:05,620
<font color="#CCCCCC">to</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> very few features that you could</font>

310
00:14:01,900 --> 00:14:08,829
possibly exploit well fortunately<font color="#E5E5E5"> it's</font>

311
00:14:05,620 --> 00:14:13,710
got a<font color="#E5E5E5"> couple of features which work on</font>

312
00:14:08,830 --> 00:14:16,750
files<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Windows has this wonderful</font>

313
00:14:13,710 --> 00:14:19,180
feature called UNC paths<font color="#E5E5E5"> where basically</font>

314
00:14:16,750 --> 00:14:21,820
<font color="#E5E5E5">any function</font><font color="#CCCCCC"> that operates on a file</font><font color="#E5E5E5"> can</font>

315
00:14:19,180 --> 00:14:27,459
be<font color="#CCCCCC"> ver made can be</font><font color="#E5E5E5"> made to access a file</font>

316
00:14:21,820 --> 00:14:29,230
on a remote server over<font color="#E5E5E5"> SMB so that</font>

317
00:14:27,460 --> 00:14:31,480
means that whenever you've<font color="#CCCCCC"> got a</font><font color="#E5E5E5"> file</font>

318
00:14:29,230 --> 00:14:34,270
<font color="#CCCCCC">i/o kind of thing and you've got</font><font color="#E5E5E5"> control</font>

319
00:14:31,480 --> 00:14:38,650
<font color="#CCCCCC">over the path you can make Windows issue</font>

320
00:14:34,270 --> 00:14:40,329
a ping<font color="#E5E5E5"> back over dearness</font><font color="#CCCCCC"> great</font><font color="#E5E5E5"> and I</font>

321
00:14:38,650 --> 00:14:44,230
thought this was<font color="#E5E5E5"> only exploitable on</font>

322
00:14:40,330 --> 00:14:47,530
<font color="#E5E5E5">Windows until two days ago it turns out</font>

323
00:14:44,230 --> 00:14:51,460
actually<font color="#CCCCCC"> OS</font><font color="#E5E5E5"> X has</font><font color="#CCCCCC"> an as a feature</font><font color="#E5E5E5"> that's</font>

324
00:14:47,530 --> 00:14:54,459
similar but<font color="#E5E5E5"> even better so here on oh s</font>

325
00:14:51,460 --> 00:14:56,830
X as you can see on the top payload<font color="#E5E5E5"> you</font>

326
00:14:54,460 --> 00:14:59,589
can<font color="#E5E5E5"> anything</font><font color="#CCCCCC"> that takes a file path can</font>

327
00:14:56,830 --> 00:15:02,050
<font color="#CCCCCC">be given slash net and then an arbitrary</font>

328
00:14:59,589 --> 00:15:05,650
domain name<font color="#E5E5E5"> and OS X which way to mount</font>

329
00:15:02,050 --> 00:15:08,349
that<font color="#E5E5E5"> as an NFS share so that's handy if</font>

330
00:15:05,650 --> 00:15:12,459
someone's foolish enough to<font color="#E5E5E5"> be running a</font>

331
00:15:08,350 --> 00:15:14,280
web<font color="#CCCCCC"> application on OS X I think it</font>

332
00:15:12,459 --> 00:15:17,260
happens<font color="#CCCCCC"> sometimes</font>

333
00:15:14,280 --> 00:15:19,270
okay<font color="#E5E5E5"> what about Microsoft sequel</font><font color="#CCCCCC"> well</font>

334
00:15:17,260 --> 00:15:22,330
you can use open<font color="#CCCCCC"> wrote set but it</font>

335
00:15:19,270 --> 00:15:24,640
requires a<font color="#E5E5E5"> non default setting you can</font>

336
00:15:22,330 --> 00:15:26,200
require<font color="#CCCCCC"> you can use file exists</font><font color="#E5E5E5"> but it</font>

337
00:15:24,640 --> 00:15:28,569
requires a non default setting<font color="#E5E5E5"> and you</font>

338
00:15:26,200 --> 00:15:32,820
can use bulkinsert<font color="#CCCCCC"> form but it requires</font>

339
00:15:28,570 --> 00:15:36,610
<font color="#CCCCCC">special privileges but what about XP o</font>

340
00:15:32,820 --> 00:15:40,119
XP<font color="#CCCCCC"> dur</font><font color="#E5E5E5"> tree if you execute this it</font>

341
00:15:36,610 --> 00:15:42,459
tells you you need system it tells you

342
00:15:40,119 --> 00:15:45,160
this failed<font color="#CCCCCC"> because</font><font color="#E5E5E5"> you need sysadmin</font>

343
00:15:42,459 --> 00:15:47,738
privileges so it doesn't really look

344
00:15:45,160 --> 00:15:49,329
very<font color="#E5E5E5"> promising but if you test it and</font>

345
00:15:47,739 --> 00:15:51,129
run Wireshark<font color="#E5E5E5"> you'll find that it</font>

346
00:15:49,329 --> 00:15:53,410
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> did the DNS lookup to the</font>

347
00:15:51,129 --> 00:15:56,079
remote server<font color="#E5E5E5"> before</font><font color="#CCCCCC"> checking whether</font>

348
00:15:53,410 --> 00:15:57,969
you have the permission<font color="#CCCCCC"> to execute</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> so</font>

349
00:15:56,079 --> 00:16:00,209
that's absolutely<font color="#E5E5E5"> perfect that means</font>

350
00:15:57,970 --> 00:16:03,309
<font color="#E5E5E5">that we can quite reliably find</font>

351
00:16:00,209 --> 00:16:05,888
<font color="#E5E5E5">asynchronous sequel injection against</font>

352
00:16:03,309 --> 00:16:11,049
sequel server<font color="#E5E5E5"> regardless</font><font color="#CCCCCC"> of what</font>

353
00:16:05,889 --> 00:16:13,779
privileges the database user has what

354
00:16:11,049 --> 00:16:19,629
about<font color="#E5E5E5"> Oracle Oracle</font><font color="#CCCCCC"> adds quite a few</font>

355
00:16:13,779 --> 00:16:21,549
features<font color="#E5E5E5"> you can actually write an app a</font>

356
00:16:19,629 --> 00:16:23,379
low to find our core sequel injection

357
00:16:21,549 --> 00:16:25,239
that<font color="#E5E5E5"> will send you a nicely formatted</font>

358
00:16:23,379 --> 00:16:28,629
<font color="#E5E5E5">email to let you know it's found a</font>

359
00:16:25,239 --> 00:16:30,100
vulnerability<font color="#E5E5E5"> however once again it</font>

360
00:16:28,629 --> 00:16:32,259
<font color="#CCCCCC">requires privileges which in later</font>

361
00:16:30,100 --> 00:16:37,529
versions<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Oracle</font><font color="#E5E5E5"> you may find you</font>

362
00:16:32,259 --> 00:16:40,449
<font color="#E5E5E5">don't have however Oracle lets all users</font>

363
00:16:37,529 --> 00:16:43,059
<font color="#CCCCCC">regardless of what privileges they have</font>

364
00:16:40,449 --> 00:16:46,059
<font color="#CCCCCC">execute it's XML parsing functionality</font>

365
00:16:43,059 --> 00:16:49,299
and as we know XML is a wonderful

366
00:16:46,059 --> 00:16:51,639
technology<font color="#CCCCCC"> lots of</font><font color="#E5E5E5"> helpful features so</font>

367
00:16:49,299 --> 00:16:53,889
what net<font color="#CCCCCC"> Spy found was the ala course</font>

368
00:16:51,639 --> 00:16:57,819
<font color="#E5E5E5">XML parsing is vulnerable</font><font color="#CCCCCC"> to external</font>

369
00:16:53,889 --> 00:17:00,279
<font color="#E5E5E5">XML entities and that</font><font color="#CCCCCC"> means that a user</font>

370
00:16:57,819 --> 00:17:03,610
with no privileges<font color="#CCCCCC"> can trigger a ping</font>

371
00:17:00,279 --> 00:17:06,939
<font color="#E5E5E5">back</font><font color="#CCCCCC"> so what we're doing</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> is using</font>

372
00:17:03,610 --> 00:17:09,130
sequel injection<font color="#E5E5E5"> to tell all the code to</font>

373
00:17:06,939 --> 00:17:10,839
parse a malicious XML document that<font color="#CCCCCC"> will</font>

374
00:17:09,130 --> 00:17:14,709
do an<font color="#E5E5E5"> x XE vulnerability that will send</font>

375
00:17:10,839 --> 00:17:16,688
<font color="#E5E5E5">a ping back to our server great</font><font color="#CCCCCC"> this</font>

376
00:17:14,709 --> 00:17:20,139
issue<font color="#E5E5E5"> has been patched so if you're up</font>

377
00:17:16,689 --> 00:17:23,350
against a database maintained by someone

378
00:17:20,138 --> 00:17:28,569
who studiously apply their patches<font color="#CCCCCC"> then</font>

379
00:17:23,349 --> 00:17:30,189
it might<font color="#CCCCCC"> not work what about my sequel</font>

380
00:17:28,569 --> 00:17:32,590
well there's<font color="#E5E5E5"> loes file this is very</font>

381
00:17:30,190 --> 00:17:35,230
similar<font color="#CCCCCC"> to the sequel Lite payload</font><font color="#E5E5E5"> it</font>

382
00:17:32,590 --> 00:17:36,730
works<font color="#E5E5E5"> if you're on a system</font><font color="#CCCCCC"> that allows</font>

383
00:17:35,230 --> 00:17:41,590
remote<font color="#E5E5E5"> fonox</font>

384
00:17:36,730 --> 00:17:43,539
and the same with select in<font color="#CCCCCC"> in to out</font>

385
00:17:41,590 --> 00:17:46,439
file so the<font color="#E5E5E5"> first is for reading files</font>

386
00:17:43,539 --> 00:17:49,389
the second is intended for writing files

387
00:17:46,440 --> 00:17:49,990
and at<font color="#E5E5E5"> this point you might have noticed</font>

388
00:17:49,389 --> 00:17:51,908
the

389
00:17:49,990 --> 00:17:55,120
linux-based systems have<font color="#E5E5E5"> been getting</font>

390
00:17:51,909 --> 00:17:58,110
<font color="#E5E5E5">off really quite easily and it was</font>

391
00:17:55,120 --> 00:18:02,439
really<font color="#E5E5E5"> beginning to annoy me quite a lot</font>

392
00:17:58,110 --> 00:18:04,209
so I thought<font color="#E5E5E5"> okay what if I changed the</font>

393
00:18:02,440 --> 00:18:06,970
<font color="#E5E5E5">rules slightly what if I say</font><font color="#CCCCCC"> Ashley</font><font color="#E5E5E5"> I</font>

394
00:18:04,210 --> 00:18:08,620
know I'm supposed to<font color="#E5E5E5"> be like really nice</font>

395
00:18:06,970 --> 00:18:10,270
to this<font color="#E5E5E5"> target system because I've got</font>

396
00:18:08,620 --> 00:18:13,059
I'm<font color="#E5E5E5"> accessing it remotely</font><font color="#CCCCCC"> and whatever</font>

397
00:18:10,270 --> 00:18:15,100
<font color="#E5E5E5">but I'm gonna start watching file to the</font>

398
00:18:13,059 --> 00:18:18,100
file system<font color="#CCCCCC"> did</font><font color="#E5E5E5"> try to trigger a ping</font>

399
00:18:15,100 --> 00:18:20,799
back the most<font color="#E5E5E5"> obvious thing to go for</font><font color="#CCCCCC"> is</font>

400
00:18:18,100 --> 00:18:23,649
to<font color="#E5E5E5"> drop a shell within</font><font color="#CCCCCC"> the web route</font><font color="#E5E5E5"> the</font>

401
00:18:20,799 --> 00:18:26,620
issues<font color="#CCCCCC"> are ping</font><font color="#E5E5E5"> back however from the</font>

402
00:18:23,649 --> 00:18:28,449
point of view<font color="#CCCCCC"> of a burp suite scan</font><font color="#E5E5E5"> we</font>

403
00:18:26,620 --> 00:18:30,580
don't really<font color="#E5E5E5"> necessarily know whether</font>

404
00:18:28,450 --> 00:18:33,220
<font color="#CCCCCC">where the web route is so we don't know</font>

405
00:18:30,580 --> 00:18:34,689
where to<font color="#CCCCCC"> write</font><font color="#E5E5E5"> this file so what we</font>

406
00:18:33,220 --> 00:18:38,039
<font color="#CCCCCC">would need to do is basically spray</font>

407
00:18:34,690 --> 00:18:40,149
shelves over<font color="#E5E5E5"> the whole file system and</font>

408
00:18:38,039 --> 00:18:42,669
<font color="#E5E5E5">our clients might not appreciate that</font>

409
00:18:40,149 --> 00:18:45,158
too<font color="#E5E5E5"> much so that's not great for</font><font color="#CCCCCC"> our</font>

410
00:18:42,669 --> 00:18:47,860
purposes another option<font color="#CCCCCC"> that</font><font color="#E5E5E5"> looked</font>

411
00:18:45,159 --> 00:18:51,279
really<font color="#CCCCCC"> promising at first</font><font color="#E5E5E5"> is that if you</font>

412
00:18:47,860 --> 00:18:53,408
write a file to<font color="#CCCCCC"> the right folder on some</font>

413
00:18:51,279 --> 00:18:56,049
<font color="#E5E5E5">systems a mailer will read in that file</font>

414
00:18:53,409 --> 00:18:57,779
and<font color="#E5E5E5"> email it however I could</font><font color="#CCCCCC"> get it</font>

415
00:18:56,049 --> 00:19:01,899
<font color="#CCCCCC">working or working on Microsoft Outlook</font>

416
00:18:57,779 --> 00:19:03,190
which is<font color="#E5E5E5"> pretty pointless at this point</font>

417
00:19:01,899 --> 00:19:06,239
I got even<font color="#CCCCCC"> more desperate I</font><font color="#E5E5E5"> was like</font>

418
00:19:03,190 --> 00:19:09,399
<font color="#CCCCCC">okay some files you</font><font color="#E5E5E5"> can write</font><font color="#CCCCCC"> to them</font>

419
00:19:06,240 --> 00:19:12,220
<font color="#CCCCCC">and they will result in something being</font>

420
00:19:09,399 --> 00:19:14,020
printed out<font color="#E5E5E5"> so what if we write dear</font>

421
00:19:12,220 --> 00:19:14,440
employee you<font color="#CCCCCC"> have one employee</font><font color="#E5E5E5"> of the</font>

422
00:19:14,020 --> 00:19:17,168
month

423
00:19:14,440 --> 00:19:18,970
please contact<font color="#E5E5E5"> James kettle at PAWS</font>

424
00:19:17,169 --> 00:19:22,299
<font color="#CCCCCC">waggonette to claim your prize' right</font>

425
00:19:18,970 --> 00:19:24,570
we've got a<font color="#E5E5E5"> asynchronous payload that</font>

426
00:19:22,299 --> 00:19:26,440
<font color="#E5E5E5">bypasses outbound network filtering</font>

427
00:19:24,570 --> 00:19:29,678
unfortunately the<font color="#CCCCCC"> employee</font><font color="#E5E5E5"> needs</font><font color="#CCCCCC"> to be a</font>

428
00:19:26,440 --> 00:19:32,710
bit<font color="#E5E5E5"> of a muppet</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> web server DS</font>

429
00:19:29,679 --> 00:19:34,419
<font color="#E5E5E5">needs to be running his route so that's</font>

430
00:19:32,710 --> 00:19:35,679
not that<font color="#E5E5E5"> great</font><font color="#CCCCCC"> either we don't do that</font>

431
00:19:34,419 --> 00:19:42,029
with burp suite<font color="#CCCCCC"> just in case you were</font>

432
00:19:35,679 --> 00:19:47,320
<font color="#E5E5E5">wondering what about configuration files</font>

433
00:19:42,029 --> 00:19:49,990
so my sequel loads configuration files

434
00:19:47,320 --> 00:19:53,500
in a special<font color="#CCCCCC"> order</font><font color="#E5E5E5"> from the bottom up</font>

435
00:19:49,990 --> 00:19:56,320
that's very<font color="#E5E5E5"> very helpful because the</font>

436
00:19:53,500 --> 00:19:59,200
<font color="#CCCCCC">selects</font><font color="#E5E5E5"> into out file command that my</font>

437
00:19:56,320 --> 00:20:01,149
cycle has can't be used to overwrite

438
00:19:59,200 --> 00:20:03,700
files<font color="#E5E5E5"> you can only use it to</font><font color="#CCCCCC"> create new</font>

439
00:20:01,149 --> 00:20:06,489
files but due<font color="#CCCCCC"> to this load order</font>

440
00:20:03,700 --> 00:20:08,679
that my<font color="#E5E5E5"> sequel</font><font color="#CCCCCC"> users you can you can</font>

441
00:20:06,490 --> 00:20:10,510
write a<font color="#E5E5E5"> file</font><font color="#CCCCCC"> to a place where</font><font color="#E5E5E5"> one</font>

442
00:20:08,679 --> 00:20:13,149
<font color="#E5E5E5">doesn't exist</font><font color="#CCCCCC"> and then if it's</font><font color="#E5E5E5"> the right</font>

443
00:20:10,510 --> 00:20:16,570
location<font color="#E5E5E5"> my sequel will read that in as</font>

444
00:20:13,149 --> 00:20:17,918
a config file<font color="#E5E5E5"> and give it priority over</font>

445
00:20:16,570 --> 00:20:22,000
the config files that are likely<font color="#E5E5E5"> to</font>

446
00:20:17,919 --> 00:20:23,320
already<font color="#E5E5E5"> exist</font><font color="#CCCCCC"> and there's a</font><font color="#E5E5E5"> setting that</font>

447
00:20:22,000 --> 00:20:25,750
you<font color="#CCCCCC"> can set with a config file called</font>

448
00:20:23,320 --> 00:20:28,360
bind address and this<font color="#CCCCCC"> defines the</font>

449
00:20:25,750 --> 00:20:31,260
<font color="#E5E5E5">address that</font><font color="#CCCCCC"> the server will try to bind</font>

450
00:20:28,360 --> 00:20:34,120
to and listen on when it's booted up<font color="#E5E5E5"> and</font>

451
00:20:31,260 --> 00:20:39,029
<font color="#E5E5E5">you can set</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> to be a</font><font color="#CCCCCC"> hostname and</font>

452
00:20:34,120 --> 00:20:40,809
cause a DNS lookup brilliant

453
00:20:39,029 --> 00:20:43,210
unfortunately there's a little bit of<font color="#E5E5E5"> a</font>

454
00:20:40,809 --> 00:20:45,450
catch<font color="#CCCCCC"> for this which is that</font><font color="#E5E5E5"> after doing</font>

455
00:20:43,210 --> 00:20:49,960
<font color="#E5E5E5">a DNS lookup</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> server will try to bind</font>

456
00:20:45,450 --> 00:20:52,419
to this address<font color="#E5E5E5"> so if you do a pen test</font>

457
00:20:49,960 --> 00:20:54,429
and say burp injects this command then

458
00:20:52,419 --> 00:20:55,990
it's entirely possible<font color="#E5E5E5"> that two weeks</font>

459
00:20:54,429 --> 00:20:57,909
later when<font color="#E5E5E5"> this assignment tries to</font>

460
00:20:55,990 --> 00:21:01,960
restart<font color="#E5E5E5"> the server it will try to bind</font>

461
00:20:57,909 --> 00:21:04,090
to a remote address<font color="#E5E5E5"> and just crash you</font>

462
00:21:01,960 --> 00:21:07,630
can try to mitigate<font color="#CCCCCC"> this by setting</font><font color="#E5E5E5"> up</font>

463
00:21:04,090 --> 00:21:11,529
your DNS server<font color="#CCCCCC"> to</font><font color="#E5E5E5"> return the IP address</font>

464
00:21:07,630 --> 00:21:15,159
<font color="#E5E5E5">0 0 0</font><font color="#CCCCCC"> 0 which will</font><font color="#E5E5E5"> lead to it binding to</font>

465
00:21:11,529 --> 00:21:16,799
all available<font color="#E5E5E5"> interfaces however there's</font>

466
00:21:15,159 --> 00:21:19,240
another catch with that<font color="#CCCCCC"> which is the</font>

467
00:21:16,799 --> 00:21:22,179
<font color="#CCCCCC">missus Hammond might not want it to bind</font>

468
00:21:19,240 --> 00:21:23,260
to all<font color="#E5E5E5"> available interfaces they could</font>

469
00:21:22,179 --> 00:21:27,039
actually<font color="#E5E5E5"> be worse than if it just</font>

470
00:21:23,260 --> 00:21:28,629
crashed entirely so that's the technique

471
00:21:27,039 --> 00:21:30,190
<font color="#E5E5E5">that</font><font color="#CCCCCC"> I think you could</font><font color="#E5E5E5"> use for manual</font>

472
00:21:28,630 --> 00:21:34,889
testing<font color="#CCCCCC"> in the right circumstances but</font>

473
00:21:30,190 --> 00:21:37,779
we're not using that<font color="#E5E5E5"> by default</font><font color="#CCCCCC"> okay a</font>

474
00:21:34,889 --> 00:21:39,908
sequel it started out<font color="#E5E5E5"> pretty easy and go</font>

475
00:21:37,779 --> 00:21:43,510
quite hard<font color="#E5E5E5"> at the end</font>

476
00:21:39,909 --> 00:21:45,580
what about show command injection<font color="#CCCCCC"> well</font>

477
00:21:43,510 --> 00:21:48,010
here we've got easy remote code

478
00:21:45,580 --> 00:21:49,870
execution so we've got<font color="#E5E5E5"> quite a bit more</font>

479
00:21:48,010 --> 00:21:51,760
<font color="#CCCCCC">we've got quite a</font><font color="#E5E5E5"> bit of flexibility</font>

480
00:21:49,870 --> 00:21:55,928
<font color="#E5E5E5">there's no doubt that it's easy to</font>

481
00:21:51,760 --> 00:22:00,519
trigger<font color="#E5E5E5"> a ping buck because we've got</font>

482
00:21:55,929 --> 00:22:03,370
this<font color="#E5E5E5"> luxury of of it just being easy we</font>

483
00:22:00,519 --> 00:22:06,880
<font color="#E5E5E5">can try</font><font color="#CCCCCC"> to make a payload that will work</font>

484
00:22:03,370 --> 00:22:09,489
in<font color="#E5E5E5"> multiple different contexts so we</font>

485
00:22:06,880 --> 00:22:12,700
<font color="#E5E5E5">want a payload</font><font color="#CCCCCC"> that works in the three</font>

486
00:22:09,490 --> 00:22:16,330
main contexts on<font color="#E5E5E5"> Linux and on</font><font color="#CCCCCC"> Windows 2</font>

487
00:22:12,700 --> 00:22:17,059
<font color="#E5E5E5">and the key way to build</font><font color="#CCCCCC"> that you could</font>

488
00:22:16,330 --> 00:22:18,529
I think

489
00:22:17,059 --> 00:22:21,590
think for a long time or<font color="#E5E5E5"> you could write</font>

490
00:22:18,529 --> 00:22:23,179
<font color="#CCCCCC">a pause or</font><font color="#E5E5E5"> something fancy or you could</font>

491
00:22:21,590 --> 00:22:24,918
do I did and<font color="#CCCCCC"> just make a</font><font color="#E5E5E5"> test bed that</font>

492
00:22:23,179 --> 00:22:26,779
<font color="#CCCCCC">takes your input and executes sit in</font>

493
00:22:24,919 --> 00:22:28,999
each of these contexts<font color="#CCCCCC"> and tells you</font>

494
00:22:26,779 --> 00:22:30,769
whether it worked or<font color="#E5E5E5"> not and then you</font>

495
00:22:28,999 --> 00:22:32,749
<font color="#E5E5E5">can start out with a simple payload and</font>

496
00:22:30,769 --> 00:22:36,590
<font color="#E5E5E5">just kind of tweak it a bit and add bits</font>

497
00:22:32,749 --> 00:22:38,299
to it<font color="#E5E5E5"> and just work</font><font color="#CCCCCC"> your way towards</font>

498
00:22:36,590 --> 00:22:41,570
something<font color="#CCCCCC"> if it's always</font><font color="#E5E5E5"> something</font>

499
00:22:38,299 --> 00:22:44,389
effective reaching this<font color="#E5E5E5"> point was quite</font>

500
00:22:41,570 --> 00:22:48,350
easy<font color="#CCCCCC"> and then I ran into a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of</font>

501
00:22:44,389 --> 00:22:49,969
a problem<font color="#E5E5E5"> so here this payload works in</font>

502
00:22:48,350 --> 00:22:54,080
<font color="#E5E5E5">every context apart from when it's</font>

503
00:22:49,970 --> 00:22:55,549
inside double<font color="#CCCCCC"> quotes</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> windows</font><font color="#E5E5E5"> so we</font>

504
00:22:54,080 --> 00:22:58,189
need to break<font color="#E5E5E5"> out of those double quotes</font>

505
00:22:55,549 --> 00:22:59,539
<font color="#CCCCCC">but if we put a double quote</font><font color="#E5E5E5"> in that</font>

506
00:22:58,190 --> 00:23:02,809
payload<font color="#E5E5E5"> that will break out of the</font>

507
00:22:59,539 --> 00:23:06,679
double quoted context<font color="#E5E5E5"> on Linux so it</font>

508
00:23:02,809 --> 00:23:09,950
will then break the way around this<font color="#E5E5E5"> is</font>

509
00:23:06,679 --> 00:23:11,899
<font color="#CCCCCC">to in</font><font color="#E5E5E5"> it is to inject an escaped double</font>

510
00:23:09,950 --> 00:23:14,570
quotes because Linux supports escaping

511
00:23:11,899 --> 00:23:18,080
double quotes and<font color="#E5E5E5"> Windows doesn't so</font>

512
00:23:14,570 --> 00:23:22,700
there we have a single payload that<font color="#CCCCCC"> will</font>

513
00:23:18,080 --> 00:23:27,189
work<font color="#E5E5E5"> in all</font><font color="#CCCCCC"> of the major contexts</font><font color="#E5E5E5"> that</font>

514
00:23:22,700 --> 00:23:27,190
it's likely<font color="#CCCCCC"> to be executed executed it</font>

515
00:23:28,869 --> 00:23:34,459
okay<font color="#E5E5E5"> what about</font><font color="#CCCCCC"> blind cross-site</font>

516
00:23:31,369 --> 00:23:36,889
scripting well if you google<font color="#CCCCCC"> for</font><font color="#E5E5E5"> multi</font>

517
00:23:34,460 --> 00:23:38,929
context<font color="#E5E5E5"> exercise you're</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to land on</font>

518
00:23:36,889 --> 00:23:41,449
<font color="#CCCCCC">a</font><font color="#E5E5E5"> blog post by</font><font color="#CCCCCC"> Gareth hay is called one</font>

519
00:23:38,929 --> 00:23:45,460
vector<font color="#CCCCCC"> to</font><font color="#E5E5E5"> rule them all and it looks</font>

520
00:23:41,450 --> 00:23:48,559
<font color="#CCCCCC">like this it's it's a bit of a beast</font><font color="#E5E5E5"> and</font>

521
00:23:45,460 --> 00:23:52,580
it<font color="#E5E5E5"> undoubtedly works in a lot</font><font color="#CCCCCC"> of</font>

522
00:23:48,559 --> 00:23:54,740
<font color="#E5E5E5">contexts but it's got some problems for</font>

523
00:23:52,580 --> 00:23:56,330
our use which is<font color="#CCCCCC"> we start it's quite</font>

524
00:23:54,740 --> 00:23:58,039
long if your<font color="#CCCCCC"> input is</font><font color="#E5E5E5"> being cut off</font>

525
00:23:56,330 --> 00:24:01,129
after<font color="#E5E5E5"> a certain</font><font color="#CCCCCC"> length</font><font color="#E5E5E5"> then it's just</font>

526
00:23:58,039 --> 00:24:03,559
<font color="#E5E5E5">not going to work and it's also quite</font>

527
00:24:01,129 --> 00:24:05,480
<font color="#E5E5E5">fragile</font><font color="#CCCCCC"> so any input filtering</font>

528
00:24:03,559 --> 00:24:09,769
whatsoever<font color="#E5E5E5"> is likely to break the entire</font>

529
00:24:05,480 --> 00:24:11,990
payload<font color="#E5E5E5"> and and in some contexts it's</font>

530
00:24:09,769 --> 00:24:14,269
requiring<font color="#E5E5E5"> window name to be to be</font>

531
00:24:11,990 --> 00:24:18,519
defined in advance<font color="#E5E5E5"> which we can't always</font>

532
00:24:14,269 --> 00:24:21,230
do so we decided<font color="#E5E5E5"> to make our</font><font color="#CCCCCC"> own version</font>

533
00:24:18,519 --> 00:24:24,019
<font color="#E5E5E5">that was more suited to what he wanted</font>

534
00:24:21,230 --> 00:24:27,100
to do which Gareth Hayes who made it is

535
00:24:24,019 --> 00:24:27,100
now going<font color="#E5E5E5"> to come up and explain</font>

536
00:24:32,630 --> 00:24:38,330
so the idea was<font color="#E5E5E5"> to produce a payload</font>

537
00:24:36,180 --> 00:24:42,120
they're executing<font color="#E5E5E5"> in multiple contexts</font>

538
00:24:38,330 --> 00:24:43,379
but was small enough<font color="#E5E5E5"> used as little</font>

539
00:24:42,120 --> 00:24:45,899
<font color="#E5E5E5">characters as possible</font>

540
00:24:43,380 --> 00:24:49,560
I'm sorry<font color="#E5E5E5"> back past any restrictions</font>

541
00:24:45,900 --> 00:24:54,300
from<font color="#E5E5E5"> the web app so we start off with</font><font color="#CCCCCC"> a</font>

542
00:24:49,560 --> 00:24:57,450
<font color="#E5E5E5">JavaScript URL context which will</font>

543
00:24:54,300 --> 00:24:59,460
<font color="#CCCCCC">executing</font><font color="#E5E5E5"> anchors then we have a closing</font>

544
00:24:57,450 --> 00:25:03,510
script tag which<font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> get out of a</font>

545
00:24:59,460 --> 00:25:09,080
script<font color="#E5E5E5"> context and then the HTML context</font>

546
00:25:03,510 --> 00:25:11,550
<font color="#E5E5E5">will inject an SVG you might notice the</font>

547
00:25:09,080 --> 00:25:16,189
opening multi-line comment in the

548
00:25:11,550 --> 00:25:18,840
<font color="#E5E5E5">JavaScript part that will basically</font>

549
00:25:16,190 --> 00:25:22,380
comments out of even context so that it

550
00:25:18,840 --> 00:25:27,030
still works<font color="#CCCCCC"> in JavaScript context then</font>

551
00:25:22,380 --> 00:25:30,090
we have a<font color="#E5E5E5"> double</font><font color="#CCCCCC"> quote</font><font color="#E5E5E5"> in context</font><font color="#CCCCCC"> so if</font>

552
00:25:27,030 --> 00:25:32,790
it's in a job in the JavaScript<font color="#E5E5E5"> it's a</font>

553
00:25:30,090 --> 00:25:34,740
single<font color="#E5E5E5"> quote context it will also</font><font color="#CCCCCC"> work</font>

554
00:25:32,790 --> 00:25:37,560
with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> dual quad so if you're in the</font>

555
00:25:34,740 --> 00:25:39,600
JavaScript string block<font color="#CCCCCC"> JavaScript</font>

556
00:25:37,560 --> 00:25:41,990
<font color="#CCCCCC">string</font><font color="#E5E5E5"> with a single quote word</font>

557
00:25:39,600 --> 00:25:47,030
important<font color="#CCCCCC"> course it'll still work the</font>

558
00:25:41,990 --> 00:25:51,690
the<font color="#CCCCCC"> plus will act as an infix operator</font>

559
00:25:47,030 --> 00:25:54,510
<font color="#E5E5E5">depending on the context</font><font color="#CCCCCC"> that you or the</font>

560
00:25:51,690 --> 00:25:56,100
concatenate operator<font color="#E5E5E5"> the mouse-over</font>

561
00:25:54,510 --> 00:25:59,420
<font color="#E5E5E5">event is interesting because it will</font>

562
00:25:56,100 --> 00:26:03,149
borrow the single and double quotes

563
00:25:59,420 --> 00:26:04,470
<font color="#CCCCCC">break out of an attribute injection so</font>

564
00:26:03,150 --> 00:26:09,240
you know it's<font color="#E5E5E5"> the forward slash here</font>

565
00:26:04,470 --> 00:26:13,020
will act as an<font color="#CCCCCC"> attribute separator then</font>

566
00:26:09,240 --> 00:26:16,110
we have an image request which<font color="#E5E5E5"> is</font>

567
00:26:13,020 --> 00:26:19,290
basically used to create a request<font color="#E5E5E5"> to</font>

568
00:26:16,110 --> 00:26:23,520
the collaborator server to<font color="#E5E5E5"> log</font>

569
00:26:19,290 --> 00:26:26,490
events happen<font color="#E5E5E5"> so in a blind situation</font><font color="#CCCCCC"> or</font>

570
00:26:23,520 --> 00:26:30,330
<font color="#CCCCCC">oh</font><font color="#E5E5E5"> yes increase in tuition</font><font color="#CCCCCC"> you need to</font>

571
00:26:26,490 --> 00:26:31,740
send the cut of the request to<font color="#E5E5E5"> the club</font>

572
00:26:30,330 --> 00:26:34,139
<font color="#CCCCCC">rates</font><font color="#E5E5E5"> in order</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> northern new</font>

573
00:26:31,740 --> 00:26:38,850
successful<font color="#E5E5E5"> now you may notice that the</font>

574
00:26:34,140 --> 00:26:40,890
<font color="#E5E5E5">image tag</font><font color="#CCCCCC"> avoid</font><font color="#E5E5E5"> spaces so that is also</font>

575
00:26:38,850 --> 00:26:45,240
<font color="#CCCCCC">to prevent</font><font color="#E5E5E5"> the web</font><font color="#CCCCCC"> application</font><font color="#E5E5E5"> from</font>

576
00:26:40,890 --> 00:26:48,540
<font color="#CCCCCC">blocking</font><font color="#E5E5E5"> and also the closing comments</font>

577
00:26:45,240 --> 00:26:50,700
might notice here<font color="#CCCCCC"> axis causing comment</font>

578
00:26:48,540 --> 00:26:53,550
<font color="#CCCCCC">obviously and it's also in a regular</font>

579
00:26:50,700 --> 00:26:58,020
expression character class so it will

580
00:26:53,550 --> 00:27:00,960
when executed using<font color="#E5E5E5"> Mike in the double</font>

581
00:26:58,020 --> 00:27:03,000
quotes or<font color="#CCCCCC"> a scene reported context your</font>

582
00:27:00,960 --> 00:27:06,300
<font color="#E5E5E5">wax is a regular expression</font><font color="#CCCCCC"> but if you</font>

583
00:27:03,000 --> 00:27:10,740
if it acts as a multi-line comment it

584
00:27:06,300 --> 00:27:15,540
will act as<font color="#E5E5E5"> an array</font><font color="#CCCCCC"> literal</font><font color="#E5E5E5"> and then</font>

585
00:27:10,740 --> 00:27:18,210
<font color="#E5E5E5">continue</font><font color="#CCCCCC"> on so as you can see we avoid</font>

586
00:27:15,540 --> 00:27:19,530
using<font color="#CCCCCC"> to</font><font color="#E5E5E5"> string from the citizens</font>

587
00:27:18,210 --> 00:27:22,230
<font color="#E5E5E5">because it's short it's using</font><font color="#CCCCCC"> array</font>

588
00:27:19,530 --> 00:27:27,240
<font color="#CCCCCC">literal and concatenate</font><font color="#E5E5E5"> that that's</font>

589
00:27:22,230 --> 00:27:30,900
instead it was<font color="#E5E5E5"> also a shorter</font><font color="#CCCCCC"> factor</font><font color="#E5E5E5"> we</font>

590
00:27:27,240 --> 00:27:34,350
also<font color="#E5E5E5"> asked Eric the docs because some</font>

591
00:27:30,900 --> 00:27:35,820
security products will<font color="#CCCCCC"> scrap</font><font color="#E5E5E5"> URLs</font><font color="#CCCCCC"> so you</font>

592
00:27:34,350 --> 00:27:37,860
might get<font color="#CCCCCC"> a collaborator interaction</font>

593
00:27:35,820 --> 00:27:41,399
<font color="#E5E5E5">that he wasn't intended to happen so we</font>

594
00:27:37,860 --> 00:27:44,790
use the scared to prevent that and<font color="#CCCCCC"> then</font>

595
00:27:41,400 --> 00:27:49,170
we call the replace from Jim<font color="#E5E5E5"> which</font>

596
00:27:44,790 --> 00:27:50,670
removes backslash is the real<font color="#CCCCCC"> what role</font>

597
00:27:49,170 --> 00:27:53,510
is used as a black string because it

598
00:27:50,670 --> 00:27:53,510
works in<font color="#CCCCCC"> both cases</font>

599
00:27:55,640 --> 00:28:09,049
we<font color="#CCCCCC"> are something else we</font><font color="#E5E5E5"> to say that</font>

600
00:27:57,200 --> 00:28:14,660
<font color="#CCCCCC">this was witchcraft thank you James</font>

601
00:28:09,049 --> 00:28:16,700
<font color="#CCCCCC">cool</font><font color="#E5E5E5"> so we've seen that</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> apply</font>

602
00:28:14,660 --> 00:28:19,669
<font color="#E5E5E5">asynchronous techniques to many major</font>

603
00:28:16,700 --> 00:28:20,960
<font color="#E5E5E5">vulnerability classes</font><font color="#CCCCCC"> I also want to</font>

604
00:28:19,669 --> 00:28:22,580
show that<font color="#E5E5E5"> you can use it to find some</font>

605
00:28:20,960 --> 00:28:24,140
pretty crazy<font color="#CCCCCC"> pretty obscure</font>

606
00:28:22,580 --> 00:28:26,139
vulnerabilities that<font color="#E5E5E5"> aren't generally</font>

607
00:28:24,140 --> 00:28:29,000
thought of as<font color="#E5E5E5"> web app vulnerabilities</font>

608
00:28:26,140 --> 00:28:31,270
for example say you've got an

609
00:28:29,000 --> 00:28:34,750
application<font color="#E5E5E5"> that's called something</font><font color="#CCCCCC"> like</font>

610
00:28:31,270 --> 00:28:38,090
<font color="#CCCCCC">MediaWiki where you can</font><font color="#E5E5E5"> upload an</font>

611
00:28:34,750 --> 00:28:40,130
attachment<font color="#E5E5E5"> which can have an arbitrary</font>

612
00:28:38,090 --> 00:28:44,809
file name but it has to end<font color="#CCCCCC"> in dot JPEG</font>

613
00:28:40,130 --> 00:28:47,059
and say<font color="#E5E5E5"> someone say a sysadmin or a cron</font>

614
00:28:44,809 --> 00:28:51,980
job<font color="#E5E5E5"> occasionally does something like tar</font>

615
00:28:47,059 --> 00:28:55,639
<font color="#E5E5E5">star to zip up all of the images if you</font>

616
00:28:51,980 --> 00:28:58,700
upload an image with that<font color="#E5E5E5"> file name then</font>

617
00:28:55,640 --> 00:29:01,220
<font color="#E5E5E5">when they execute tar star this will be</font>

618
00:28:58,700 --> 00:29:03,830
treated as arguments to tar<font color="#CCCCCC"> and will</font>

619
00:29:01,220 --> 00:29:04,309
trigger a ping back to our server that's

620
00:29:03,830 --> 00:29:06,289
pretty cool

621
00:29:04,309 --> 00:29:09,080
and there were variants of<font color="#E5E5E5"> that payload</font>

622
00:29:06,289 --> 00:29:11,390
for for<font color="#E5E5E5"> plenty</font><font color="#CCCCCC"> of other common shell</font>

623
00:29:09,080 --> 00:29:13,010
commands<font color="#E5E5E5"> and I'm not saying that's a</font>

624
00:29:11,390 --> 00:29:15,080
common vulnerability the point here is

625
00:29:13,010 --> 00:29:17,740
that just<font color="#E5E5E5"> there's some mental stuff that</font>

626
00:29:15,080 --> 00:29:21,860
you<font color="#CCCCCC"> could</font><font color="#E5E5E5"> find using these techniques</font>

627
00:29:17,740 --> 00:29:24,580
<font color="#CCCCCC">okay let's have a look</font><font color="#E5E5E5"> at a actual</font>

628
00:29:21,860 --> 00:29:24,580
application

629
00:29:28,009 --> 00:29:32,940
you might be familiar<font color="#CCCCCC"> if you've ever</font>

630
00:29:30,570 --> 00:29:36,629
been asked<font color="#E5E5E5"> to do a</font><font color="#CCCCCC"> webapp test you might</font>

631
00:29:32,940 --> 00:29:37,889
be familiar with<font color="#E5E5E5"> landing on being asked</font>

632
00:29:36,630 --> 00:29:41,850
to do a pen test<font color="#E5E5E5"> of something</font><font color="#CCCCCC"> that looks</font>

633
00:29:37,889 --> 00:29:43,709
<font color="#E5E5E5">more or less</font><font color="#CCCCCC"> like this right there's</font>

634
00:29:41,850 --> 00:29:44,879
there's<font color="#CCCCCC"> nothing</font><font color="#E5E5E5"> going on there there's</font>

635
00:29:43,710 --> 00:29:46,529
nothing<font color="#CCCCCC"> you can hack and you're like</font>

636
00:29:44,880 --> 00:29:48,179
well great maybe they're<font color="#E5E5E5"> selling a</font>

637
00:29:46,529 --> 00:29:54,269
cookie and they forgot<font color="#E5E5E5"> for HTTP only on</font>

638
00:29:48,179 --> 00:29:56,100
it but we can do<font color="#E5E5E5"> better</font><font color="#CCCCCC"> if you pay</font><font color="#E5E5E5"> close</font>

639
00:29:54,269 --> 00:30:01,200
attention to<font color="#E5E5E5"> what's going</font><font color="#CCCCCC"> on here you'll</font>

640
00:29:56,100 --> 00:30:03,480
see that there's they're using<font color="#E5E5E5"> pie wick</font>

641
00:30:01,200 --> 00:30:06,710
which is a popular piece of analytic

642
00:30:03,480 --> 00:30:12,480
software which is logging<font color="#E5E5E5"> your visit and</font>

643
00:30:06,710 --> 00:30:14,730
if we take this<font color="#E5E5E5"> to the repeater and send</font>

644
00:30:12,480 --> 00:30:16,950
it then<font color="#E5E5E5"> it looks like</font><font color="#CCCCCC"> a pretty lame</font>

645
00:30:14,730 --> 00:30:21,299
<font color="#E5E5E5">attack surface because regardless of</font>

646
00:30:16,950 --> 00:30:23,639
<font color="#E5E5E5">what you send it</font><font color="#CCCCCC"> just says</font><font color="#E5E5E5"> 204 no spots</font>

647
00:30:21,299 --> 00:30:25,230
<font color="#E5E5E5">right like what do you do with that this</font>

648
00:30:23,639 --> 00:30:27,719
<font color="#CCCCCC">is the perfect example of an</font>

649
00:30:25,230 --> 00:30:30,480
<font color="#CCCCCC">asynchronous</font><font color="#E5E5E5"> attack surface of one way</font>

650
00:30:27,720 --> 00:30:35,659
you can't see what's<font color="#E5E5E5"> going on behind the</font>

651
00:30:30,480 --> 00:30:38,190
<font color="#E5E5E5">scenes so why I've done is injected</font>

652
00:30:35,659 --> 00:30:40,200
<font color="#E5E5E5">three payloads I've said this is</font>

653
00:30:38,190 --> 00:30:43,049
analytic software<font color="#E5E5E5"> they're probably</font>

654
00:30:40,200 --> 00:30:47,730
interested in what Google queries<font color="#E5E5E5"> led</font>

655
00:30:43,049 --> 00:30:50,100
people<font color="#CCCCCC"> to my to their site so I'm I'm</font>

656
00:30:47,730 --> 00:30:52,230
gonna fake a Google search and I'm<font color="#E5E5E5"> gonna</font>

657
00:30:50,100 --> 00:30:59,428
provide<font color="#E5E5E5"> three malicious fake Google</font>

658
00:30:52,230 --> 00:31:04,070
queries which I've injected here<font color="#E5E5E5"> one two</font>

659
00:30:59,429 --> 00:31:07,769
<font color="#CCCCCC">and</font><font color="#E5E5E5"> three so what's going to</font><font color="#CCCCCC"> happen if</font>

660
00:31:04,070 --> 00:31:13,529
someone comes<font color="#E5E5E5"> along at a later date</font><font color="#CCCCCC"> and</font>

661
00:31:07,769 --> 00:31:15,929
decides<font color="#CCCCCC"> to export this data</font><font color="#E5E5E5"> as a</font>

662
00:31:13,529 --> 00:31:17,220
spreadsheet<font color="#CCCCCC"> well you might have</font><font color="#E5E5E5"> a clue</font>

663
00:31:15,929 --> 00:31:22,169
<font color="#E5E5E5">if you were at one of the talks earlier</font>

664
00:31:17,220 --> 00:31:26,039
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> for start maybe we get</font><font color="#E5E5E5"> really</font>

665
00:31:22,169 --> 00:31:27,960
<font color="#CCCCCC">lucky</font><font color="#E5E5E5"> okay maybe they're using a version</font>

666
00:31:26,039 --> 00:31:30,059
of<font color="#E5E5E5"> Libre Office or OpenOffice and</font>

667
00:31:27,960 --> 00:31:33,179
they're<font color="#E5E5E5"> missing a couple of security</font>

668
00:31:30,059 --> 00:31:36,918
patches<font color="#E5E5E5"> what's going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> happen I wonder</font>

669
00:31:33,179 --> 00:31:36,919
well it's pretty predictable

670
00:31:38,010 --> 00:31:45,310
we have full control<font color="#CCCCCC"> over</font><font color="#E5E5E5"> over there</font>

671
00:31:41,800 --> 00:31:47,440
server over the sysadmin<font color="#E5E5E5"> personal</font>

672
00:31:45,310 --> 00:31:48,879
computer<font color="#E5E5E5"> which is pretty nice I mean</font>

673
00:31:47,440 --> 00:31:52,150
<font color="#E5E5E5">maybe in the pen test that's not what</font><font color="#CCCCCC"> I</font>

674
00:31:48,880 --> 00:31:55,840
want to<font color="#CCCCCC"> be told but I still</font><font color="#E5E5E5"> think it's</font>

675
00:31:52,150 --> 00:32:00,910
cool and similarly maybe they open it in

676
00:31:55,840 --> 00:32:07,270
Excel<font color="#E5E5E5"> and they make the mistake</font>

677
00:32:00,910 --> 00:32:08,710
I hope the licensing works well maybe

678
00:32:07,270 --> 00:32:10,990
they open it<font color="#E5E5E5"> and they make the mistake</font>

679
00:32:08,710 --> 00:32:17,460
<font color="#CCCCCC">of reading</font><font color="#E5E5E5"> the warning error message</font>

680
00:32:10,990 --> 00:32:18,670
that<font color="#E5E5E5"> comes up this is interesting</font><font color="#CCCCCC"> ah</font>

681
00:32:17,460 --> 00:32:21,990
<font color="#E5E5E5">there we go</font>

682
00:32:18,670 --> 00:32:25,330
right so maybe they read this which says

683
00:32:21,990 --> 00:32:28,930
do not enable this unless you trust the

684
00:32:25,330 --> 00:32:32,110
content of this document unless you

685
00:32:28,930 --> 00:32:33,730
trust<font color="#E5E5E5"> the origin of this document and if</font>

686
00:32:32,110 --> 00:32:35,649
<font color="#CCCCCC">your</font><font color="#E5E5E5"> systemize admin you might think</font>

687
00:32:33,730 --> 00:32:37,780
well this document this document came

688
00:32:35,650 --> 00:32:38,980
from my private server<font color="#E5E5E5"> it's going to be</font>

689
00:32:37,780 --> 00:32:39,970
<font color="#E5E5E5">completely just were they so you're</font>

690
00:32:38,980 --> 00:32:41,650
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> click through both the warnings</font>

691
00:32:39,970 --> 00:32:46,200
<font color="#E5E5E5">that say the same thing</font><font color="#CCCCCC"> and I've got a</font>

692
00:32:41,650 --> 00:32:50,860
shell again maybe they're a bit paranoid

693
00:32:46,200 --> 00:32:53,320
<font color="#E5E5E5">maybe they don't click accept to</font><font color="#CCCCCC"> either</font>

694
00:32:50,860 --> 00:32:57,669
of those well if they click on<font color="#E5E5E5"> the wrong</font>

695
00:32:53,320 --> 00:32:58,929
cell then actually a browser is<font color="#CCCCCC"> going to</font>

696
00:32:57,670 --> 00:33:00,640
pop open which is going<font color="#E5E5E5"> to leak the</font>

697
00:32:58,930 --> 00:33:05,880
contents of<font color="#E5E5E5"> the spreadsheet</font><font color="#CCCCCC"> or some</font><font color="#E5E5E5"> of</font>

698
00:33:00,640 --> 00:33:09,370
it to<font color="#E5E5E5"> my server I've also just last week</font>

699
00:33:05,880 --> 00:33:12,730
found a different payload<font color="#E5E5E5"> which will</font>

700
00:33:09,370 --> 00:33:14,830
cause the<font color="#CCCCCC"> contents of</font><font color="#E5E5E5"> the spreadsheet to</font>

701
00:33:12,730 --> 00:33:17,710
<font color="#CCCCCC">be extricated to a remote server</font><font color="#E5E5E5"> on</font>

702
00:33:14,830 --> 00:33:20,639
fully patched<font color="#E5E5E5"> Excel with no warnings or</font>

703
00:33:17,710 --> 00:33:23,080
any kind of visual display<font color="#E5E5E5"> whatsoever</font><font color="#CCCCCC"> I</font>

704
00:33:20,640 --> 00:33:24,880
was hoping to demo it here<font color="#E5E5E5"> but</font>

705
00:33:23,080 --> 00:33:27,699
unfortunately<font color="#E5E5E5"> it's limited in the amount</font>

706
00:33:24,880 --> 00:33:29,950
of<font color="#E5E5E5"> data that</font><font color="#CCCCCC"> it can get out</font><font color="#E5E5E5"> which makes</font>

707
00:33:27,700 --> 00:33:31,870
it<font color="#E5E5E5"> slightly</font><font color="#CCCCCC"> late</font><font color="#E5E5E5"> but watch out</font><font color="#CCCCCC"> for that</font>

708
00:33:29,950 --> 00:33:34,030
<font color="#E5E5E5">I hope</font><font color="#CCCCCC"> to get that</font><font color="#E5E5E5"> fully working</font><font color="#CCCCCC"> and</font>

709
00:33:31,870 --> 00:33:35,169
release it soon and hopefully Microsoft

710
00:33:34,030 --> 00:33:38,100
<font color="#E5E5E5">we're going to say that's a feature and</font>

711
00:33:35,170 --> 00:33:38,100
<font color="#E5E5E5">then it's never going to get patched</font>

712
00:33:45,790 --> 00:33:51,670
<font color="#E5E5E5">okay I've just</font><font color="#CCCCCC"> shown a few examples</font>

713
00:33:50,410 --> 00:33:53,460
there<font color="#E5E5E5"> were loads of things that I</font>

714
00:33:51,670 --> 00:33:56,860
haven't<font color="#CCCCCC"> looked at</font><font color="#E5E5E5"> but I'm pretty sure</font>

715
00:33:53,460 --> 00:33:59,980
<font color="#E5E5E5">would be easy to detect</font><font color="#CCCCCC"> using these</font>

716
00:33:56,860 --> 00:34:02,290
techniques<font color="#E5E5E5"> like HTTP proxy image tragic</font>

717
00:33:59,980 --> 00:34:03,850
<font color="#E5E5E5">this thing I</font><font color="#CCCCCC"> just invented</font><font color="#E5E5E5"> a couple of</font>

718
00:34:02,290 --> 00:34:06,280
days ago called<font color="#E5E5E5"> remote local fire</font>

719
00:34:03,850 --> 00:34:10,210
include which is local file include<font color="#E5E5E5"> on a</font>

720
00:34:06,280 --> 00:34:12,429
Mac and JJ<font color="#CCCCCC"> nd ie</font>

721
00:34:10,210 --> 00:34:18,730
injection which was mentioned<font color="#CCCCCC"> at</font>

722
00:34:12,429 --> 00:34:20,020
<font color="#E5E5E5">blackout Vegas what goes wrong well one</font>

723
00:34:18,730 --> 00:34:23,139
thing to watch out<font color="#CCCCCC"> for is plainly</font>

724
00:34:20,020 --> 00:34:25,929
<font color="#E5E5E5">friendly fire if you inject some kind of</font>

725
00:34:23,139 --> 00:34:29,320
CSV payload<font color="#E5E5E5"> and you get a meterpreter</font>

726
00:34:25,929 --> 00:34:32,770
<font color="#E5E5E5">show back from one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> your co-workers</font>

727
00:34:29,320 --> 00:34:34,360
who's also on<font color="#E5E5E5"> the pen test that okay</font>

728
00:34:32,770 --> 00:34:35,020
that is kind of cool<font color="#CCCCCC"> but have you</font><font color="#E5E5E5"> really</font>

729
00:34:34,360 --> 00:34:37,409
achieved<font color="#E5E5E5"> anything</font>

730
00:34:35,020 --> 00:34:39,520
<font color="#E5E5E5">what's the client and a thing like I</font>

731
00:34:37,409 --> 00:34:43,210
know the problem that we have

732
00:34:39,520 --> 00:34:44,949
encountered<font color="#E5E5E5"> a lot more three thought we</font>

733
00:34:43,210 --> 00:34:48,580
would with<font color="#CCCCCC"> burp suite</font><font color="#E5E5E5"> is as</font><font color="#CCCCCC"> Gareth</font>

734
00:34:44,949 --> 00:34:52,960
briefly mentioned quite<font color="#CCCCCC"> a few security</font>

735
00:34:48,580 --> 00:34:55,569
<font color="#E5E5E5">appliances</font><font color="#CCCCCC"> scrape all HTTP requests for</font>

736
00:34:52,960 --> 00:34:57,070
<font color="#E5E5E5">domain names and then they send requests</font>

737
00:34:55,570 --> 00:34:59,320
to<font color="#E5E5E5"> those domain names to figure out</font>

738
00:34:57,070 --> 00:35:03,850
whether there's a apt lurking there<font color="#E5E5E5"> or</font>

739
00:34:59,320 --> 00:35:05,650
something and this means<font color="#E5E5E5"> you you might</font>

740
00:35:03,850 --> 00:35:07,930
<font color="#E5E5E5">submit some really great payload for</font>

741
00:35:05,650 --> 00:35:11,470
Oracle sequel injection<font color="#E5E5E5"> and then some</font>

742
00:35:07,930 --> 00:35:13,270
kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> laughs will send a ping back and</font>

743
00:35:11,470 --> 00:35:14,980
you'll<font color="#E5E5E5"> think the application is</font>

744
00:35:13,270 --> 00:35:16,840
vulnerable to sequel injection<font color="#E5E5E5"> where</font>

745
00:35:14,980 --> 00:35:20,560
naturally it's just vulnerable<font color="#CCCCCC"> to having</font>

746
00:35:16,840 --> 00:35:24,100
<font color="#E5E5E5">a slightly dubious</font><font color="#CCCCCC"> Wow</font><font color="#E5E5E5"> maybe so in order</font>

747
00:35:20,560 --> 00:35:26,170
to<font color="#E5E5E5"> try</font><font color="#CCCCCC"> to mitigate</font><font color="#E5E5E5"> that generally we</font>

748
00:35:24,100 --> 00:35:29,080
always try to escape the payloads<font color="#CCCCCC"> that</font>

749
00:35:26,170 --> 00:35:31,060
we send in in the way that<font color="#E5E5E5"> means that</font>

750
00:35:29,080 --> 00:35:33,940
for<font color="#E5E5E5"> something that's doing a naive grep</font>

751
00:35:31,060 --> 00:35:36,160
<font color="#CCCCCC">it</font><font color="#E5E5E5"> what it won't see any valid domain</font>

752
00:35:33,940 --> 00:35:38,230
names but the payload will still work<font color="#CCCCCC"> or</font>

753
00:35:36,160 --> 00:35:41,859
if you're<font color="#CCCCCC"> executing something</font><font color="#E5E5E5"> like</font>

754
00:35:38,230 --> 00:35:44,350
nslookup you can tell nslookup<font color="#E5E5E5"> do a DNS</font>

755
00:35:41,860 --> 00:35:47,200
<font color="#CCCCCC">query of this</font><font color="#E5E5E5"> specific type and then you</font>

756
00:35:44,350 --> 00:35:49,029
can say<font color="#E5E5E5"> okay we knew faster actually</font>

757
00:35:47,200 --> 00:35:53,069
reporter vulnerability<font color="#E5E5E5"> we needed that</font>

758
00:35:49,030 --> 00:35:53,070
exact type of DNS query to come in

759
00:35:53,280 --> 00:35:58,150
another issue that<font color="#E5E5E5"> ivory fleet searched</font>

760
00:35:55,810 --> 00:35:59,470
on is<font color="#E5E5E5"> that asynchronous payloads have no</font>

761
00:35:58,150 --> 00:36:02,380
concept of<font color="#E5E5E5"> scope</font>

762
00:35:59,470 --> 00:36:04,598
so they will find vulnerabilities<font color="#CCCCCC"> on</font>

763
00:36:02,380 --> 00:36:08,289
systems<font color="#E5E5E5"> that you were never asked to</font>

764
00:36:04,599 --> 00:36:10,539
<font color="#CCCCCC">test</font><font color="#E5E5E5"> six months</font><font color="#CCCCCC"> after you</font><font color="#E5E5E5"> asked to test</font>

765
00:36:08,289 --> 00:36:15,010
something<font color="#E5E5E5"> completely</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> it's just</font>

766
00:36:10,539 --> 00:36:19,690
<font color="#CCCCCC">something to watch out for</font><font color="#E5E5E5"> okay three</font>

767
00:36:15,010 --> 00:36:22,089
key<font color="#E5E5E5"> T three key takeaways are you can do</font>

768
00:36:19,690 --> 00:36:25,000
this there's nothing<font color="#E5E5E5"> that hard about any</font>

769
00:36:22,089 --> 00:36:27,308
of this<font color="#E5E5E5"> especially</font><font color="#CCCCCC"> if you use</font><font color="#E5E5E5"> the server</font>

770
00:36:25,000 --> 00:36:28,990
that we're<font color="#E5E5E5"> hosting for you if you if you</font>

771
00:36:27,309 --> 00:36:31,660
don't trust<font color="#E5E5E5"> us you can host it</font><font color="#CCCCCC"> yourself</font>

772
00:36:28,990 --> 00:36:35,319
you can<font color="#CCCCCC"> also do most of this manually</font>

773
00:36:31,660 --> 00:36:37,149
<font color="#E5E5E5">just by setting up a DNS</font><font color="#CCCCCC"> server and</font>

774
00:36:35,319 --> 00:36:40,900
using some open<font color="#E5E5E5"> source software to see</font>

775
00:36:37,150 --> 00:36:42,460
what queries you get the key thing to

776
00:36:40,900 --> 00:36:44,829
<font color="#E5E5E5">watch out for is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> asynchronous</font>

777
00:36:42,460 --> 00:36:46,240
exploits fail silently<font color="#E5E5E5"> you need to come</font>

778
00:36:44,829 --> 00:36:47,890
up<font color="#CCCCCC"> with the</font><font color="#E5E5E5"> perfect payload on your</font>

779
00:36:46,240 --> 00:36:49,649
first time so you have to<font color="#CCCCCC"> do your</font>

780
00:36:47,890 --> 00:36:52,690
research<font color="#E5E5E5"> at the start</font>

781
00:36:49,650 --> 00:36:56,319
ultimately<font color="#E5E5E5"> just because you can't see it</font>

782
00:36:52,690 --> 00:36:58,780
<font color="#E5E5E5">doesn't</font><font color="#CCCCCC"> mean you can't hack it I'm going</font>

783
00:36:56,319 --> 00:37:00,400
to<font color="#E5E5E5"> take five minutes of questions now if</font>

784
00:36:58,780 --> 00:37:02,980
you've<font color="#E5E5E5"> got any</font><font color="#CCCCCC"> questions after that</font>

785
00:37:00,400 --> 00:37:05,200
you can email me<font color="#E5E5E5"> or come and talk to me</font>

786
00:37:02,980 --> 00:37:08,789
at the back don't<font color="#E5E5E5"> forget to follow me</font><font color="#CCCCCC"> on</font>

787
00:37:05,200 --> 00:37:08,788
Twitter<font color="#E5E5E5"> thank you for listening</font>

788
00:37:14,550 --> 00:37:29,290
<font color="#E5E5E5">okay any questions yep okay</font>

789
00:37:26,020 --> 00:37:32,350
yep<font color="#CCCCCC"> how am</font><font color="#E5E5E5"> i handling DNS caching what</font>

790
00:37:29,290 --> 00:37:36,490
<font color="#CCCCCC">burb</font><font color="#E5E5E5"> suite does is we generate a random</font>

791
00:37:32,350 --> 00:37:39,220
<font color="#E5E5E5">and unique subdomain every time that we</font>

792
00:37:36,490 --> 00:37:41,919
send a payload so we've got wildcard DNS

793
00:37:39,220 --> 00:38:00,490
pointing to our<font color="#E5E5E5"> server and we never</font>

794
00:37:41,920 --> 00:38:02,830
reuse payloads anyone else<font color="#CCCCCC"> yep blind</font>

795
00:38:00,490 --> 00:38:06,009
cross-site scripting is a subtype of

796
00:38:02,830 --> 00:38:08,290
stored cross-site scripting that's just

797
00:38:06,010 --> 00:38:11,560
particularly<font color="#CCCCCC"> difficult to find because</font>

798
00:38:08,290 --> 00:38:12,820
<font color="#E5E5E5">if you</font><font color="#CCCCCC"> caused and an</font><font color="#E5E5E5"> alert</font><font color="#CCCCCC"> popup on</font><font color="#E5E5E5"> some</font>

799
00:38:11,560 --> 00:38:15,610
<font color="#E5E5E5">back-end system you're probably</font><font color="#CCCCCC"> never</font>

800
00:38:12,820 --> 00:38:17,350
<font color="#E5E5E5">going to know</font><font color="#CCCCCC"> that happened I think it's</font>

801
00:38:15,610 --> 00:38:18,910
quite<font color="#E5E5E5"> common that's the impression that</font>

802
00:38:17,350 --> 00:38:26,430
<font color="#E5E5E5">we've got since we've released this</font>

803
00:38:18,910 --> 00:38:26,430
check anyone<font color="#E5E5E5"> else yep</font>

804
00:38:28,970 --> 00:38:44,709
I have not<font color="#E5E5E5"> tried Mongo or</font><font color="#CCCCCC"> note</font><font color="#E5E5E5"> no I will</font>

805
00:38:35,690 --> 00:38:44,710
be interesting to<font color="#E5E5E5"> see how easy it is yep</font>

806
00:38:45,550 --> 00:39:09,470
yep<font color="#E5E5E5"> yeah yep so when I</font><font color="#CCCCCC"> demoed that that</font>

807
00:39:03,829 --> 00:39:15,920
was using Gmail using Gmail so<font color="#E5E5E5"> Gmail</font>

808
00:39:09,470 --> 00:39:20,439
<font color="#E5E5E5">scans the emails for</font><font color="#CCCCCC"> viruses but so I</font><font color="#E5E5E5"> I</font>

809
00:39:15,920 --> 00:39:22,369
think the the<font color="#CCCCCC"> foil</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I attached is</font>

810
00:39:20,440 --> 00:39:24,470
<font color="#E5E5E5">$42 if I don't know if you're familiar</font>

811
00:39:22,369 --> 00:39:27,710
with it<font color="#CCCCCC"> but it's very</font><font color="#E5E5E5"> very well known</font>

812
00:39:24,470 --> 00:39:30,020
any<font color="#E5E5E5"> antivirus in existence is going to</font>

813
00:39:27,710 --> 00:39:31,849
detect it<font color="#E5E5E5"> and it's probably</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to</font>

814
00:39:30,020 --> 00:39:33,670
<font color="#E5E5E5">reject it because if it tries to unpack</font>

815
00:39:31,849 --> 00:39:37,550
it<font color="#CCCCCC"> to scan</font><font color="#E5E5E5"> it then it will crash</font><font color="#CCCCCC"> because</font>

816
00:39:33,670 --> 00:39:46,030
<font color="#CCCCCC">it expands</font><font color="#E5E5E5"> to be like 70 terabytes or</font>

817
00:39:37,550 --> 00:39:46,030
<font color="#E5E5E5">something okay cool okay thank you</font>

