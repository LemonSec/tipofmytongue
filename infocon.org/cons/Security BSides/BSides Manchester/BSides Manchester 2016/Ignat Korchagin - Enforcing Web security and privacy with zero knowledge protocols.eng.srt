1
00:00:04,810 --> 00:00:12,980
hello everyone<font color="#E5E5E5"> am i speaking loud enough</font>

2
00:00:09,070 --> 00:00:16,309
<font color="#CCCCCC">okay so today we're</font><font color="#E5E5E5"> going my name is it</font>

3
00:00:12,980 --> 00:00:18,320
not I work for cloud fair and today I'm

4
00:00:16,309 --> 00:00:21,859
going<font color="#CCCCCC"> to tell you about how</font><font color="#E5E5E5"> to enforce</font>

5
00:00:18,320 --> 00:00:25,480
security and privacy on the<font color="#E5E5E5"> web with</font>

6
00:00:21,859 --> 00:00:28,970
zero knowledge protocols so here we<font color="#CCCCCC"> go</font>

7
00:00:25,480 --> 00:00:31,070
why do we want<font color="#CCCCCC"> to do that so most of you</font>

8
00:00:28,970 --> 00:00:33,650
<font color="#CCCCCC">probably use at least</font><font color="#E5E5E5"> some kind of</font>

9
00:00:31,070 --> 00:00:36,200
internet service so the basic workflow

10
00:00:33,650 --> 00:00:39,370
there if you register from for the

11
00:00:36,200 --> 00:00:42,110
service you most of the<font color="#E5E5E5"> time</font><font color="#CCCCCC"> I'll</font>

12
00:00:39,370 --> 00:00:44,570
required to submit your personal then

13
00:00:42,110 --> 00:00:49,490
compiled information there we will call

14
00:00:44,570 --> 00:00:52,250
VI and well when<font color="#E5E5E5"> you register if</font><font color="#CCCCCC"> you</font>

15
00:00:49,490 --> 00:00:53,630
like not lazy enough to read terms and

16
00:00:52,250 --> 00:00:56,180
conditions the service<font color="#CCCCCC"> professional</font>

17
00:00:53,630 --> 00:01:00,820
<font color="#E5E5E5">usually promises to take all relevant</font>

18
00:00:56,180 --> 00:01:05,239
measures to store your pii securely and

19
00:01:00,820 --> 00:01:07,180
also the service provider promises to

20
00:01:05,239 --> 00:01:09,679
make<font color="#E5E5E5"> your user experience secure to</font>

21
00:01:07,180 --> 00:01:12,170
allow you<font color="#E5E5E5"> to secure the begin to your</font>

22
00:01:09,679 --> 00:01:16,490
website view your information<font color="#CCCCCC"> to make</font>

23
00:01:12,170 --> 00:01:19,700
<font color="#CCCCCC">amendments so but unfortunately in</font>

24
00:01:16,490 --> 00:01:26,140
reality we see many leaks so you see

25
00:01:19,700 --> 00:01:29,170
database leaks we see leaks API itself

26
00:01:26,140 --> 00:01:32,060
most of them happen because there's

27
00:01:29,170 --> 00:01:35,479
actually there is no clear definition of

28
00:01:32,060 --> 00:01:38,179
water relevant measures means and how to

29
00:01:35,479 --> 00:01:42,079
<font color="#CCCCCC">run what storing information securely</font>

30
00:01:38,179 --> 00:01:44,450
means and most of the time and your

31
00:01:42,079 --> 00:01:46,699
service provider implements all the

32
00:01:44,450 --> 00:01:49,009
measures which are<font color="#CCCCCC"> required being</font>

33
00:01:46,700 --> 00:01:51,469
compliant with some security standard

34
00:01:49,009 --> 00:01:55,939
but the service<font color="#E5E5E5"> provide doesn't really</font>

35
00:01:51,469 --> 00:01:59,600
care much about security one recent

36
00:01:55,939 --> 00:02:03,978
example from myself was that<font color="#E5E5E5"> I looked</font>

37
00:01:59,600 --> 00:02:06,288
any place recently and a sensor my

38
00:02:03,979 --> 00:02:09,470
internet provider was not providing any

39
00:02:06,289 --> 00:02:11,630
service there<font color="#E5E5E5"> I subscribed to another</font>

40
00:02:09,470 --> 00:02:15,260
one and<font color="#CCCCCC"> after that I got a call from</font>

41
00:02:11,630 --> 00:02:17,269
<font color="#CCCCCC">their credit check department and say</font>

42
00:02:15,260 --> 00:02:20,209
hello where and

43
00:02:17,270 --> 00:02:22,460
<font color="#CCCCCC">ready</font><font color="#E5E5E5"> check of this internet service</font>

44
00:02:20,210 --> 00:02:26,960
provider and we want to confirm<font color="#CCCCCC"> your</font>

45
00:02:22,460 --> 00:02:29,420
address I say<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> okay yes please sell</font>

46
00:02:26,960 --> 00:02:31,670
it tell us your dress hey I'm not you

47
00:02:29,420 --> 00:02:33,679
I'm not a native English speaker but I

48
00:02:31,670 --> 00:02:36,649
understand the world confirmed<font color="#CCCCCC"> as you</font>

49
00:02:33,680 --> 00:02:38,510
tell me that resin icing yes or no and

50
00:02:36,650 --> 00:02:41,090
you're<font color="#E5E5E5"> basically calling from some</font>

51
00:02:38,510 --> 00:02:43,010
unknown number I mean it then it turned

52
00:02:41,090 --> 00:02:44,810
out<font color="#CCCCCC"> to be a legitimate cold but this is</font>

53
00:02:43,010 --> 00:02:47,630
a typical example where a service

54
00:02:44,810 --> 00:02:50,330
provider actually imposes you're

55
00:02:47,630 --> 00:02:52,790
insecure workflow that anybody can call

56
00:02:50,330 --> 00:02:55,640
you from an unknown number and ask for

57
00:02:52,790 --> 00:02:58,790
your<font color="#CCCCCC"> address and when I refuse to tell</font>

58
00:02:55,640 --> 00:03:02,049
<font color="#CCCCCC">them my dress the lady was surprised at</font>

59
00:02:58,790 --> 00:03:07,070
like we always do<font color="#CCCCCC"> that stop doing that</font>

60
00:03:02,050 --> 00:03:09,290
and also a source provider may take

61
00:03:07,070 --> 00:03:12,380
advantage of your pie and the total

62
00:03:09,290 --> 00:03:14,600
legitimate example is bank credit

63
00:03:12,380 --> 00:03:17,540
reference agencies where they submit

64
00:03:14,600 --> 00:03:21,769
your pi/2 credit reference agencies to

65
00:03:17,540 --> 00:03:24,590
do some checks and finally your user

66
00:03:21,770 --> 00:03:26,360
experience<font color="#E5E5E5"> is not very secure and we see</font>

67
00:03:24,590 --> 00:03:29,300
that user passwords gets term learning

68
00:03:26,360 --> 00:03:32,180
and we see<font color="#CCCCCC"> pike website spy plugin</font>

69
00:03:29,300 --> 00:03:35,480
prawns and we see that some providers

70
00:03:32,180 --> 00:03:41,209
when implementing web authentication do

71
00:03:35,480 --> 00:03:43,640
not have SSL or TLS<font color="#E5E5E5"> so let's take a look</font>

72
00:03:41,209 --> 00:03:46,400
from a security point perspective so

73
00:03:43,640 --> 00:03:49,130
when you subscribe<font color="#CCCCCC"> to a service you're</font>

74
00:03:46,400 --> 00:03:52,100
probably like some Alice user and they

75
00:03:49,130 --> 00:03:55,120
ask you<font color="#CCCCCC"> for a passport you just make</font><font color="#E5E5E5"> up</font>

76
00:03:52,100 --> 00:03:59,780
a password and submit one but and is and

77
00:03:55,120 --> 00:04:03,290
later you want to<font color="#CCCCCC"> login to your service</font>

78
00:03:59,780 --> 00:04:05,060
and you submit your password again they

79
00:04:03,290 --> 00:04:08,269
authenticate you with the password<font color="#E5E5E5"> but</font>

80
00:04:05,060 --> 00:04:12,050
do<font color="#E5E5E5"> you think that</font><font color="#CCCCCC"> HTTP authentication is</font>

81
00:04:08,270 --> 00:04:14,989
secure let's take a look<font color="#CCCCCC"> here so</font>

82
00:04:12,050 --> 00:04:17,570
<font color="#CCCCCC">actually what happens we</font><font color="#E5E5E5"> have HTTP basic</font>

83
00:04:14,989 --> 00:04:20,798
authentication scheme so when you log

84
00:04:17,570 --> 00:04:24,349
into a website you send your username a

85
00:04:20,798 --> 00:04:26,450
custom string called VL and your

86
00:04:24,350 --> 00:04:28,220
<font color="#E5E5E5">password in clear text and the subtle</font>

87
00:04:26,450 --> 00:04:29,248
just verifies yet this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> same</font>

88
00:04:28,220 --> 00:04:32,459
<font color="#CCCCCC">password i have in my</font>

89
00:04:29,249 --> 00:04:35,369
David<font color="#E5E5E5"> actually if you think</font><font color="#CCCCCC"> of it this</font>

90
00:04:32,459 --> 00:04:38,339
scheme is not very secure although it's

91
00:04:35,369 --> 00:04:42,209
simple the passport is sent in clear

92
00:04:38,339 --> 00:04:45,839
text and that's why security aware users

93
00:04:42,209 --> 00:04:48,119
will never enter this password if the

94
00:04:45,839 --> 00:04:50,129
website is sort of<font color="#E5E5E5"> an unsecured channel</font>

95
00:04:48,119 --> 00:04:53,639
so you have to look for you this green

96
00:04:50,129 --> 00:04:56,459
lock in the browser<font color="#E5E5E5"> HTTPS is required</font>

97
00:04:53,639 --> 00:04:59,129
and also there is a drawback that if

98
00:04:56,459 --> 00:05:02,669
server database<font color="#E5E5E5"> leak it compromises your</font>

99
00:04:59,129 --> 00:05:04,559
password and<font color="#E5E5E5"> if you reuse passwords in</font>

100
00:05:02,669 --> 00:05:06,779
many different websites these<font color="#E5E5E5"> attackers</font>

101
00:05:04,559 --> 00:05:10,709
can try the same<font color="#CCCCCC"> password on your other</font>

102
00:05:06,779 --> 00:05:12,899
services so to mitigate that another

103
00:05:10,709 --> 00:05:15,749
skin was introduced it's called digest

104
00:05:12,899 --> 00:05:19,589
authentication where server instead of

105
00:05:15,749 --> 00:05:23,009
<font color="#CCCCCC">viewing password spells the hash V about</font>

106
00:05:19,589 --> 00:05:27,179
<font color="#CCCCCC">grab value and how it works so a user</font>

107
00:05:23,009 --> 00:05:32,069
requests protected resource and server

108
00:05:27,179 --> 00:05:36,058
generates anome's user submits hash of

109
00:05:32,069 --> 00:05:38,099
the password hashed again with distance

110
00:05:36,059 --> 00:05:41,089
and the<font color="#CCCCCC"> knowns the user generated in</font>

111
00:05:38,099 --> 00:05:43,589
<font color="#CCCCCC">response so this game is</font><font color="#E5E5E5"> better</font>

112
00:05:41,089 --> 00:05:47,099
passwords are not scented the attacks

113
00:05:43,589 --> 00:05:49,349
anymore this<font color="#E5E5E5"> scheme</font><font color="#CCCCCC"> is protected from</font>

114
00:05:47,099 --> 00:05:53,459
replay attacks because he used to<font color="#E5E5E5"> nan</font>

115
00:05:49,349 --> 00:05:56,069
says here servers do not lead to store

116
00:05:53,459 --> 00:05:58,499
passwords themselves anymore so several

117
00:05:56,069 --> 00:06:00,809
database leagues only<font color="#CCCCCC"> compromises the</font>

118
00:05:58,499 --> 00:06:04,049
authentication information for this

119
00:06:00,809 --> 00:06:09,869
specific resource or real as they call

120
00:06:04,049 --> 00:06:13,519
it in a digestion issues<font color="#E5E5E5"> class but it's</font>

121
00:06:09,869 --> 00:06:16,019
still vulnerable to<font color="#CCCCCC"> mitm attacks it's</font>

122
00:06:13,519 --> 00:06:19,769
this scheme is still vulnerable to spoon

123
00:06:16,019 --> 00:06:23,399
websites so if you try<font color="#CCCCCC"> to log it so not</font>

124
00:06:19,769 --> 00:06:26,999
nowadays attackers grade and<font color="#CCCCCC"> clones of</font>

125
00:06:23,399 --> 00:06:28,919
legitimate websites like Google is like

126
00:06:26,999 --> 00:06:30,689
a slightly different and one letter

127
00:06:28,919 --> 00:06:35,179
difference in the domain name<font color="#E5E5E5"> and try to</font>

128
00:06:30,689 --> 00:06:38,129
trick users logging on the<font color="#E5E5E5"> website and</font>

129
00:06:35,179 --> 00:06:43,109
actually leaking their password to this

130
00:06:38,129 --> 00:06:46,190
to the website the malicious website<font color="#E5E5E5"> all</font>

131
00:06:43,110 --> 00:06:49,770
so this scheme still requires HTTPS and

132
00:06:46,190 --> 00:06:51,690
this game is vulnerable to dictionary

133
00:06:49,770 --> 00:06:53,880
attacks and although it's considered

134
00:06:51,690 --> 00:06:57,030
more secure than basic authentication if

135
00:06:53,880 --> 00:06:59,670
you read the current RFC which describes

136
00:06:57,030 --> 00:07:02,969
the sub syndication scheme it doesn't it

137
00:06:59,670 --> 00:07:07,050
specifies directly that this scheme

138
00:07:02,970 --> 00:07:09,240
cannot be used with user passwords it

139
00:07:07,050 --> 00:07:11,930
can only be used<font color="#E5E5E5"> with machine generated</font>

140
00:07:09,240 --> 00:07:15,450
password to authenticate services

141
00:07:11,930 --> 00:07:18,090
between each other so it says like the

142
00:07:15,450 --> 00:07:20,729
password<font color="#E5E5E5"> has to have like at least 128</font>

143
00:07:18,090 --> 00:07:27,060
bits of entropy such password<font color="#E5E5E5"> typically</font>

144
00:07:20,730 --> 00:07:30,240
cannot be memorized by humans so none of

145
00:07:27,060 --> 00:07:32,310
the HTTPS current htpc in<font color="#E5E5E5"> words using</font>

146
00:07:30,240 --> 00:07:34,680
the plasmid<font color="#E5E5E5"> actually and they also</font>

147
00:07:32,310 --> 00:07:36,420
specify that it should be<font color="#CCCCCC"> it</font>

148
00:07:34,680 --> 00:07:40,130
authentication should deliver secure

149
00:07:36,420 --> 00:07:43,080
channel like HTTPS and so we see that

150
00:07:40,130 --> 00:07:46,500
HTTPS is key to everything so<font color="#E5E5E5"> we need</font>

151
00:07:43,080 --> 00:07:49,169
implement HTTPS Everywhere in modern

152
00:07:46,500 --> 00:07:52,980
internet and this is right thing to do

153
00:07:49,170 --> 00:07:55,680
but the problem<font color="#CCCCCC"> is it's hard so modern</font>

154
00:07:52,980 --> 00:07:57,450
web page is not served from internal

155
00:07:55,680 --> 00:08:00,390
<font color="#E5E5E5">servers nowadays but it's like a</font>

156
00:07:57,450 --> 00:08:02,520
combinations of many resources taken

157
00:08:00,390 --> 00:08:05,490
from different<font color="#E5E5E5"> parts of the internet so</font>

158
00:08:02,520 --> 00:08:07,919
you<font color="#E5E5E5"> have problems with an</font><font color="#CCCCCC"> ex content you</font>

159
00:08:05,490 --> 00:08:09,720
have you still have the problem of

160
00:08:07,920 --> 00:08:11,310
<font color="#CCCCCC">spooked website so if somebody makes a</font>

161
00:08:09,720 --> 00:08:13,770
clone to your website he can

162
00:08:11,310 --> 00:08:16,770
legitimately get a certificate for this

163
00:08:13,770 --> 00:08:18,960
<font color="#E5E5E5">website and treat you if the website has</font>

164
00:08:16,770 --> 00:08:21,750
same look at field as I'd like a major

165
00:08:18,960 --> 00:08:24,180
of the<font color="#E5E5E5"> website you the attacker can</font>

166
00:08:21,750 --> 00:08:27,570
still treat you putting your credential

167
00:08:24,180 --> 00:08:29,730
there you have spoofed certificates of

168
00:08:27,570 --> 00:08:33,360
link to this in this blog post and

169
00:08:29,730 --> 00:08:34,970
describes<font color="#CCCCCC"> a way how and small</font>

170
00:08:33,360 --> 00:08:37,560
vulnerability in the<font color="#E5E5E5"> Komodo</font>

171
00:08:34,970 --> 00:08:40,590
certification<font color="#CCCCCC"> authority where an</font>

172
00:08:37,559 --> 00:08:43,799
attacker can<font color="#E5E5E5"> social engineer domain</font>

173
00:08:40,590 --> 00:08:48,840
owners to issue<font color="#E5E5E5"> a certificate for their</font>

174
00:08:43,799 --> 00:08:51,150
domain for this attacker and we have

175
00:08:48,840 --> 00:08:53,820
compromised keys and certificates so

176
00:08:51,150 --> 00:08:57,090
<font color="#E5E5E5">HTTPS is the</font><font color="#CCCCCC"> EPI based web</font>

177
00:08:53,820 --> 00:09:00,130
infrastructure so basically<font color="#E5E5E5"> you</font>

178
00:08:57,090 --> 00:09:02,500
it's very complex you to get the full

179
00:09:00,130 --> 00:09:07,030
security of this infrastructure to deal

180
00:09:02,500 --> 00:09:10,030
with revocation<font color="#CCCCCC"> and if currently not</font>

181
00:09:07,030 --> 00:09:13,600
called<font color="#CCCCCC"> a mobile special</font><font color="#E5E5E5"> mobile device do</font>

182
00:09:10,030 --> 00:09:15,100
it very well so we have problems<font color="#E5E5E5"> with</font><font color="#CCCCCC"> bi</font>

183
00:09:13,600 --> 00:09:18,280
we have<font color="#E5E5E5"> problems this password</font>

184
00:09:15,100 --> 00:09:23,520
authentication so can we do better yes

185
00:09:18,280 --> 00:09:25,480
we can<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> can try</font><font color="#E5E5E5"> to use a class of</font>

186
00:09:23,520 --> 00:09:28,270
protocols which are called zero

187
00:09:25,480 --> 00:09:32,260
knowledge so the knowledge group or

188
00:09:28,270 --> 00:09:35,410
protocol is<font color="#CCCCCC"> describes a method</font><font color="#E5E5E5"> or an</font>

189
00:09:32,260 --> 00:09:39,400
algorithm by which one party we will

190
00:09:35,410 --> 00:09:42,339
call this<font color="#CCCCCC"> part a brewer can improve to</font>

191
00:09:39,400 --> 00:09:44,829
another party the verifier that need

192
00:09:42,340 --> 00:09:46,630
know some secret or private information

193
00:09:44,830 --> 00:09:50,470
like in case<font color="#CCCCCC"> of our</font><font color="#E5E5E5"> salute and</font>

194
00:09:46,630 --> 00:09:51,850
syndication can prove the knowledge of

195
00:09:50,470 --> 00:09:53,470
<font color="#CCCCCC">the past the user</font><font color="#E5E5E5"> can prove the</font>

196
00:09:51,850 --> 00:09:56,500
knowledge of the castle to the server

197
00:09:53,470 --> 00:09:59,980
<font color="#E5E5E5">zero knowledge way and zero knowledge</font>

198
00:09:56,500 --> 00:10:01,960
<font color="#CCCCCC">probably the protocols come with</font><font color="#E5E5E5"> bunch</font>

199
00:09:59,980 --> 00:10:04,270
of useful properties the cross

200
00:10:01,960 --> 00:10:07,930
properties completeness so basically

201
00:10:04,270 --> 00:10:10,240
would<font color="#E5E5E5"> stage if the statement which the</font>

202
00:10:07,930 --> 00:10:13,239
promo tries to prove is true<font color="#CCCCCC"> is the</font>

203
00:10:10,240 --> 00:10:15,640
honest verifier will be a convinced of

204
00:10:13,240 --> 00:10:17,440
this fact by nanas cover so if you do

205
00:10:15,640 --> 00:10:20,290
know the password the server<font color="#E5E5E5"> will</font>

206
00:10:17,440 --> 00:10:22,270
authenticate you<font color="#CCCCCC"> people the server will</font>

207
00:10:20,290 --> 00:10:25,480
<font color="#E5E5E5">be sure that you do not indeed know the</font>

208
00:10:22,270 --> 00:10:28,750
password so the soundness so which<font color="#E5E5E5"> stays</font>

209
00:10:25,480 --> 00:10:31,150
if you don't know the password the

210
00:10:28,750 --> 00:10:32,890
server<font color="#E5E5E5"> will know that that you don't</font>

211
00:10:31,150 --> 00:10:35,829
know the password except there is a

212
00:10:32,890 --> 00:10:38,230
small cheat probability here which will

213
00:10:35,830 --> 00:10:40,660
i will describe a little bit later but

214
00:10:38,230 --> 00:10:43,720
if you<font color="#CCCCCC"> think of it more than</font>

215
00:10:40,660 --> 00:10:46,510
authentication schemes also have a cheap

216
00:10:43,720 --> 00:10:48,760
probability so you can try to guess the

217
00:10:46,510 --> 00:10:50,500
<font color="#E5E5E5">users password and you can cheat the</font>

218
00:10:48,760 --> 00:10:54,040
server that you<font color="#E5E5E5"> need know the password</font>

219
00:10:50,500 --> 00:10:56,650
when out indicating on the use of

220
00:10:54,040 --> 00:10:59,020
service so the first two properties

221
00:10:56,650 --> 00:11:01,800
describe a more general class of

222
00:10:59,020 --> 00:11:06,490
interactive proof systems and we use<font color="#E5E5E5"> it</font>

223
00:11:01,800 --> 00:11:08,800
every day now so for<font color="#CCCCCC"> example pls</font>

224
00:11:06,490 --> 00:11:10,899
authentication scheme is an exam

225
00:11:08,800 --> 00:11:13,569
<font color="#E5E5E5">of interactive courses and worry you</font>

226
00:11:10,899 --> 00:11:16,510
prove<font color="#CCCCCC"> to this where the several proves</font>

227
00:11:13,570 --> 00:11:20,350
to you that<font color="#E5E5E5"> server now some kind of a</font>

228
00:11:16,510 --> 00:11:22,779
private<font color="#E5E5E5"> but which which the thing which</font>

229
00:11:20,350 --> 00:11:24,820
makes<font color="#E5E5E5"> zero knowledge protocols</font>

230
00:11:22,779 --> 00:11:27,399
difference is the salt property is<font color="#CCCCCC"> the</font>

231
00:11:24,820 --> 00:11:30,250
zero knowledge property so which

232
00:11:27,399 --> 00:11:33,240
basically states if the<font color="#CCCCCC"> statement is</font>

233
00:11:30,250 --> 00:11:37,420
true and the verifier is dishonest and

234
00:11:33,240 --> 00:11:40,269
the verify learns nothing from the fact

235
00:11:37,420 --> 00:11:44,199
that the fact and she learns nothing

236
00:11:40,269 --> 00:11:46,180
except the protocol alpha outcome so if

237
00:11:44,200 --> 00:11:48,970
you have a<font color="#E5E5E5"> case with malicious server</font>

238
00:11:46,180 --> 00:11:52,089
and you enter your password there the

239
00:11:48,970 --> 00:11:54,279
protocol guarantees that not a single

240
00:11:52,089 --> 00:11:59,500
bit of your password will be leaked to

241
00:11:54,279 --> 00:12:02,100
the sorry so let's<font color="#E5E5E5"> just review it by</font>

242
00:11:59,500 --> 00:12:04,660
example so this<font color="#CCCCCC"> is a textbook example of</font>

243
00:12:02,100 --> 00:12:08,230
zero knowledge<font color="#E5E5E5"> protocols and</font><font color="#CCCCCC"> major you</font>

244
00:12:04,660 --> 00:12:11,350
<font color="#CCCCCC">have this cave with a magic door and the</font>

245
00:12:08,230 --> 00:12:14,890
door opens when somebody tells<font color="#E5E5E5"> this</font>

246
00:12:11,350 --> 00:12:17,829
magic secret work and imagine<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font>

247
00:12:14,890 --> 00:12:19,569
approval<font color="#E5E5E5"> he wants to go she wants to</font>

248
00:12:17,829 --> 00:12:22,870
prove<font color="#CCCCCC"> to the verifier attention all this</font>

249
00:12:19,570 --> 00:12:26,680
way and magic<font color="#CCCCCC"> port so what does she do</font>

250
00:12:22,870 --> 00:12:28,779
she picks randomly in the past to enter

251
00:12:26,680 --> 00:12:34,140
to the cave aob so in this particular

252
00:12:28,779 --> 00:12:38,610
case and approval have children be then

253
00:12:34,140 --> 00:12:42,100
the verifier goes into the cave and

254
00:12:38,610 --> 00:12:47,020
shout also randomly chooses a or b and

255
00:12:42,100 --> 00:12:50,110
shout so in this case the verify shouts

256
00:12:47,020 --> 00:12:53,680
<font color="#CCCCCC">pass a so and the prover needs to</font>

257
00:12:50,110 --> 00:12:56,649
reliably appear on the past which

258
00:12:53,680 --> 00:12:59,290
verifier has chosen so in this case the

259
00:12:56,649 --> 00:13:03,550
<font color="#E5E5E5">cooler just uses her knowledge of the</font>

260
00:12:59,290 --> 00:13:08,760
magic world opens the door and appears

261
00:13:03,550 --> 00:13:11,920
on past a butt and the verifier scan is

262
00:13:08,760 --> 00:13:14,890
satisfied with the<font color="#CCCCCC"> proof but here we</font>

263
00:13:11,920 --> 00:13:17,529
have<font color="#E5E5E5"> you may notice the problem what if</font>

264
00:13:14,890 --> 00:13:21,459
in the first step the prover will choose

265
00:13:17,529 --> 00:13:24,819
but a and the verifier will

266
00:13:21,459 --> 00:13:28,508
also choose plus a so in that case the

267
00:13:24,819 --> 00:13:31,059
<font color="#E5E5E5">pooper doesn't even need to use or know</font>

268
00:13:28,509 --> 00:13:34,029
<font color="#CCCCCC">the magic word to open the door and the</font>

269
00:13:31,059 --> 00:13:36,699
prover can also reliably appear on pass

270
00:13:34,029 --> 00:13:39,369
a so this introduces a cheap probability

271
00:13:36,699 --> 00:13:41,649
and in this textbook protocol the<font color="#CCCCCC"> chi</font>

272
00:13:39,369 --> 00:13:43,869
probability is fifty percent so you can

273
00:13:41,649 --> 00:13:48,040
just try to guess<font color="#CCCCCC"> what the verifier will</font>

274
00:13:43,869 --> 00:13:53,920
choose at the end<font color="#CCCCCC"> enter this enter this</font>

275
00:13:48,040 --> 00:13:59,429
path so if we review this protocol as

276
00:13:53,920 --> 00:14:02,979
only being one round and we consider all

277
00:13:59,429 --> 00:14:05,649
rounds independent so we can<font color="#E5E5E5"> just</font><font color="#CCCCCC"> run</font>

278
00:14:02,980 --> 00:14:07,569
this pod called several times and we can

279
00:14:05,649 --> 00:14:10,269
reduce<font color="#E5E5E5"> this cheap probability to an</font>

280
00:14:07,569 --> 00:14:13,540
arbitrary small value as we<font color="#E5E5E5"> want so for</font>

281
00:14:10,269 --> 00:14:16,329
example<font color="#E5E5E5"> if we do run this protocol 120</font>

282
00:14:13,540 --> 00:14:19,868
times our G probability it would be to

283
00:14:16,329 --> 00:14:24,279
power minus 128 which is as secure as<font color="#E5E5E5"> is</font>

284
00:14:19,869 --> 00:14:26,949
so just by repeating at the protocol

285
00:14:24,279 --> 00:14:31,720
several rounds we can<font color="#E5E5E5"> reduce the small</font>

286
00:14:26,949 --> 00:14:34,118
sheet probability so it's<font color="#CCCCCC"> ok now of</font>

287
00:14:31,720 --> 00:14:36,069
course<font color="#E5E5E5"> a real-world zero-knowledge</font>

288
00:14:34,119 --> 00:14:39,129
protocol a little bit more<font color="#E5E5E5"> complicated</font>

289
00:14:36,069 --> 00:14:41,649
and one notable example<font color="#E5E5E5"> I want to show</font>

290
00:14:39,129 --> 00:14:43,839
is socialist millionaire so basically

291
00:14:41,649 --> 00:14:46,929
this protocol describes the problem

292
00:14:43,839 --> 00:14:50,170
where two people want to check whether

293
00:14:46,929 --> 00:14:52,990
their wealth is equal so transfer to

294
00:14:50,170 --> 00:14:55,059
authentication scenario weather like

295
00:14:52,990 --> 00:14:56,949
client and server<font color="#CCCCCC"> possesses the same</font>

296
00:14:55,059 --> 00:15:02,618
<font color="#CCCCCC">password so they can authenticate each</font>

297
00:14:56,949 --> 00:15:04,719
other so the way how it works you can be

298
00:15:02,619 --> 00:15:08,019
implemented over a little cryptography

299
00:15:04,720 --> 00:15:10,660
so imagine you have a common set of

300
00:15:08,019 --> 00:15:13,269
cryptographic parameters you have Alice

301
00:15:10,660 --> 00:15:16,149
and Bob<font color="#CCCCCC"> do this like usual and the</font>

302
00:15:13,269 --> 00:15:18,279
server and they both<font color="#E5E5E5"> want they both</font>

303
00:15:16,149 --> 00:15:20,769
possess some secret information x and y

304
00:15:18,279 --> 00:15:24,970
and they both want<font color="#CCCCCC"> to know whether x</font>

305
00:15:20,769 --> 00:15:26,949
equals y so but they do they do couple

306
00:15:24,970 --> 00:15:30,009
of computation and exchanging of

307
00:15:26,949 --> 00:15:33,279
intermediate values how they do three

308
00:15:30,009 --> 00:15:35,290
rounds of computation and exchanging

309
00:15:33,279 --> 00:15:37,630
values so you don't<font color="#E5E5E5"> have</font>

310
00:15:35,290 --> 00:15:40,300
to dive into the mass here<font color="#CCCCCC"> I just put it</font>

311
00:15:37,630 --> 00:15:43,959
at a reference you<font color="#CCCCCC"> can check it</font><font color="#E5E5E5"> out</font>

312
00:15:40,300 --> 00:15:48,189
<font color="#CCCCCC">later and at the end they basically</font>

313
00:15:43,959 --> 00:15:50,859
check this equation and if this equation

314
00:15:48,190 --> 00:15:54,069
holds each of the four them reliably

315
00:15:50,860 --> 00:15:56,649
knows that the other party way possesses

316
00:15:54,069 --> 00:15:59,620
the same secret so for interested people

317
00:15:56,649 --> 00:16:01,240
if you do enroll the last equation it

318
00:15:59,620 --> 00:16:05,500
will<font color="#CCCCCC"> look something like</font><font color="#E5E5E5"> that and you</font>

319
00:16:01,240 --> 00:16:07,779
can just<font color="#E5E5E5"> see here if x equals y the</font><font color="#CCCCCC"> last</font>

320
00:16:05,500 --> 00:16:12,310
term will be 0 and the equation walk

321
00:16:07,779 --> 00:16:15,939
home so this protocol is more complex

322
00:16:12,310 --> 00:16:18,489
bug has some useful properties so it's

323
00:16:15,940 --> 00:16:20,290
protected from passing attacks so a

324
00:16:18,490 --> 00:16:22,300
passive attack on loans nothing about

325
00:16:20,290 --> 00:16:24,939
the protocol or<font color="#CCCCCC"> its caltrain of the</font>

326
00:16:22,300 --> 00:16:29,290
passer attacker is the one who monitors

327
00:16:24,940 --> 00:16:33,790
your network<font color="#CCCCCC"> for detection</font><font color="#E5E5E5"> so it is</font>

328
00:16:29,290 --> 00:16:36,519
<font color="#CCCCCC">mi-tm</font><font color="#E5E5E5"> protected so</font><font color="#CCCCCC"> mitm</font><font color="#E5E5E5"> can loop can do</font>

329
00:16:33,790 --> 00:16:38,139
no better than a passive attacker except

330
00:16:36,519 --> 00:16:39,850
just disrupting the communication

331
00:16:38,139 --> 00:16:44,680
channel and prevent you from

332
00:16:39,850 --> 00:16:49,060
communicating it even if one party is

333
00:16:44,680 --> 00:16:51,430
dishonest these this party known learns

334
00:16:49,060 --> 00:16:54,399
nothing about the other party secret not

335
00:16:51,430 --> 00:16:58,180
a single bit so this is useful<font color="#CCCCCC"> for this</font>

336
00:16:54,399 --> 00:17:01,449
is what I<font color="#E5E5E5"> told about the zero knowledge</font>

337
00:16:58,180 --> 00:17:03,760
property of the protocol and actually

338
00:17:01,449 --> 00:17:06,369
unlike the<font color="#E5E5E5"> textbook zero knowledge</font>

339
00:17:03,760 --> 00:17:08,530
protocol which we saw earlier this

340
00:17:06,369 --> 00:17:11,079
protocol does not require several

341
00:17:08,530 --> 00:17:14,678
several rounds to reduce the ship

342
00:17:11,079 --> 00:17:16,418
probability so it requires constant only

343
00:17:14,679 --> 00:17:18,520
three<font color="#E5E5E5"> runs with exchanges of</font>

344
00:17:16,419 --> 00:17:22,329
intermediate information and after that

345
00:17:18,520 --> 00:17:24,730
all the parties are getting their result

346
00:17:22,329 --> 00:17:26,230
and they are satisfied with<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> all</font>

347
00:17:24,730 --> 00:17:29,400
<font color="#E5E5E5">so you don't</font><font color="#CCCCCC"> have to repeat this</font>

348
00:17:26,230 --> 00:17:32,350
protocol like 150<font color="#E5E5E5"> times and</font>

349
00:17:29,400 --> 00:17:34,990
<font color="#CCCCCC">interestingly</font><font color="#E5E5E5"> this protocol is</font>

350
00:17:32,350 --> 00:17:36,790
relatively new it's already adopted in

351
00:17:34,990 --> 00:17:39,940
open source software and have good

352
00:17:36,790 --> 00:17:42,610
tracking history one<font color="#E5E5E5"> notable example is</font>

353
00:17:39,940 --> 00:17:45,669
of the record messaging if you ever used

354
00:17:42,610 --> 00:17:48,919
it vo when I looked at<font color="#CCCCCC"> it the</font><font color="#E5E5E5"> only</font>

355
00:17:45,669 --> 00:17:52,190
problem I saw that in of the record mess

356
00:17:48,920 --> 00:17:55,970
and since 0 socialist millionaire

357
00:17:52,190 --> 00:17:59,780
protocol is if you<font color="#CCCCCC"> have one based so of</font>

358
00:17:55,970 --> 00:18:04,370
the record messaging losses and 1536 big

359
00:17:59,780 --> 00:18:07,129
group difficult calculations but we all

360
00:18:04,370 --> 00:18:09,560
know the log jam attack which explicitly

361
00:18:07,130 --> 00:18:12,890
the paper which describes states that

362
00:18:09,560 --> 00:18:15,440
shows<font color="#E5E5E5"> that 512-bit is</font><font color="#CCCCCC"> over</font>

363
00:18:12,890 --> 00:18:19,850
diffie-hellman is already broken they

364
00:18:15,440 --> 00:18:23,810
<font color="#CCCCCC">suspect that 1024-bit</font><font color="#E5E5E5"> difficulty broken</font>

365
00:18:19,850 --> 00:18:27,350
by state level at grocery and if you

366
00:18:23,810 --> 00:18:30,860
<font color="#CCCCCC">think of it 1536 dated very</font><font color="#E5E5E5"> close and we</font>

367
00:18:27,350 --> 00:18:33,230
probably want to<font color="#E5E5E5"> more protection that's</font>

368
00:18:30,860 --> 00:18:35,479
why I<font color="#E5E5E5"> reimplemented this protocol on</font>

369
00:18:33,230 --> 00:18:38,270
elliptical cryptography and not just any

370
00:18:35,480 --> 00:18:42,110
one but the modern state-of-the-art<font color="#CCCCCC"> he</font>

371
00:18:38,270 --> 00:18:46,280
255 19 the implementation<font color="#CCCCCC"> has timing</font>

372
00:18:42,110 --> 00:18:48,409
attacks protection it's faster and they

373
00:18:46,280 --> 00:18:50,960
also it has support for many high-level

374
00:18:48,410 --> 00:18:53,660
languages although the basic protocol is

375
00:18:50,960 --> 00:18:55,880
<font color="#E5E5E5">implemented see if you do want</font><font color="#CCCCCC"> to adopt</font>

376
00:18:53,660 --> 00:18:58,130
it in your next security solution

377
00:18:55,880 --> 00:19:00,590
probably a<font color="#E5E5E5"> good chance you will find</font>

378
00:18:58,130 --> 00:19:03,080
that<font color="#E5E5E5"> your</font><font color="#CCCCCC"> high level language is</font>

379
00:19:00,590 --> 00:19:05,120
supported<font color="#E5E5E5"> and always have been English</font>

380
00:19:03,080 --> 00:19:07,970
degraded in this open source could do

381
00:19:05,120 --> 00:19:12,219
graphic library called tennis so here

382
00:19:07,970 --> 00:19:12,220
who<font color="#E5E5E5"> Lincoln lead have to a welcome to</font>

383
00:19:12,340 --> 00:19:19,100
contribute<font color="#E5E5E5"> users to comment review and</font>

384
00:19:16,100 --> 00:19:25,310
whatever<font color="#E5E5E5"> you like and comments</font><font color="#CCCCCC"> out very</font>

385
00:19:19,100 --> 00:19:29,659
well so I want<font color="#CCCCCC"> to tell about mobile so I</font>

386
00:19:25,310 --> 00:19:31,250
<font color="#E5E5E5">told how can protect from how it can be</font>

387
00:19:29,660 --> 00:19:35,750
<font color="#CCCCCC">used in household authentication</font>

388
00:19:31,250 --> 00:19:40,490
<font color="#E5E5E5">scenario but what</font><font color="#CCCCCC"> about PRI so imagine a</font>

389
00:19:35,750 --> 00:19:43,970
typical workflow where we want an

390
00:19:40,490 --> 00:19:46,670
account and you asked for this a cup to

391
00:19:43,970 --> 00:19:49,340
a<font color="#E5E5E5"> bank club on your current account you</font>

392
00:19:46,670 --> 00:19:53,120
submit your pii and bank needs<font color="#E5E5E5"> to do a</font>

393
00:19:49,340 --> 00:19:55,480
<font color="#CCCCCC">credit reference check it's a busy</font><font color="#E5E5E5"> OPI</font>

394
00:19:53,120 --> 00:19:59,600
<font color="#E5E5E5">to credit reference agency where they</font>

395
00:19:55,480 --> 00:20:02,540
replied yes<font color="#CCCCCC"> tomorrow</font><font color="#E5E5E5"> forever and imagine</font>

396
00:19:59,600 --> 00:20:04,159
a scenario where

397
00:20:02,540 --> 00:20:06,170
you're new to this country or you just

398
00:20:04,160 --> 00:20:08,690
<font color="#E5E5E5">returned from you've been working</font>

399
00:20:06,170 --> 00:20:11,810
overseas for a long time<font color="#E5E5E5"> just returned</font>

400
00:20:08,690 --> 00:20:14,720
to the country and you're not<font color="#E5E5E5"> on file on</font>

401
00:20:11,810 --> 00:20:16,429
this credit reference agency and the

402
00:20:14,720 --> 00:20:20,540
<font color="#CCCCCC">scheme's</font><font color="#E5E5E5"> because a</font><font color="#CCCCCC"> little bit unfair</font>

403
00:20:16,430 --> 00:20:22,730
because you apply for<font color="#CCCCCC"> a bank account the</font>

404
00:20:20,540 --> 00:20:25,730
bank account goes to credit reference

405
00:20:22,730 --> 00:20:27,830
agency<font color="#E5E5E5"> you're not on file so the credit</font>

406
00:20:25,730 --> 00:20:30,350
reference agency replies oh you're not

407
00:20:27,830 --> 00:20:32,629
on file and in<font color="#E5E5E5"> this country not being on</font>

408
00:20:30,350 --> 00:20:35,230
file means that bad histories of the

409
00:20:32,630 --> 00:20:38,270
bank literally declines your application

410
00:20:35,230 --> 00:20:40,130
but in this scenario you didn't get your

411
00:20:38,270 --> 00:20:42,080
account but your<font color="#E5E5E5"> personal information</font>

412
00:20:40,130 --> 00:20:44,230
was leaked to credit reference<font color="#E5E5E5"> agencies</font>

413
00:20:42,080 --> 00:20:47,840
so you already in the database careful

414
00:20:44,230 --> 00:20:50,570
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> unfair and if imagine if you</font>

415
00:20:47,840 --> 00:20:54,699
have the task to make the scheme fair in

416
00:20:50,570 --> 00:20:58,850
such case so what probably most of

417
00:20:54,700 --> 00:21:00,890
<font color="#E5E5E5">people would do let's say okay let's do</font>

418
00:20:58,850 --> 00:21:05,000
not send the p.i to the credit reference

419
00:21:00,890 --> 00:21:08,060
agency a let's say hash of the<font color="#CCCCCC"> pr and</font>

420
00:21:05,000 --> 00:21:10,550
hash of the<font color="#CCCCCC"> p.i so if credit reference</font>

421
00:21:08,060 --> 00:21:13,940
agency does not have you on file it

422
00:21:10,550 --> 00:21:16,520
cannot revert the hash and you it seems

423
00:21:13,940 --> 00:21:18,740
like<font color="#CCCCCC"> that your pie is not linked to</font>

424
00:21:16,520 --> 00:21:20,389
credit reference agency in case they did

425
00:21:18,740 --> 00:21:22,670
not have you on pal if you they do have

426
00:21:20,390 --> 00:21:25,430
you on file they can find you by hash in

427
00:21:22,670 --> 00:21:30,020
their database and patron<font color="#CCCCCC"> that's so it</font>

428
00:21:25,430 --> 00:21:32,840
works but<font color="#CCCCCC"> until this case so</font><font color="#E5E5E5"> imagine you</font>

429
00:21:30,020 --> 00:21:35,210
apply for<font color="#E5E5E5"> it in one bank you have</font>

430
00:21:32,840 --> 00:21:37,159
submitted to your hash will submit it to

431
00:21:35,210 --> 00:21:39,710
credit reference agency but declined you

432
00:21:37,160 --> 00:21:43,490
apply it in another back and they sent

433
00:21:39,710 --> 00:21:45,500
the same hash of the p.i to the credit

434
00:21:43,490 --> 00:21:48,950
reference agency and now your

435
00:21:45,500 --> 00:21:51,140
<font color="#E5E5E5">information</font><font color="#CCCCCC"> was leaked</font><font color="#E5E5E5"> because a p.i is</font>

436
00:21:48,950 --> 00:21:54,800
a little bit different than passwords

437
00:21:51,140 --> 00:21:58,550
because PRI is essentially a unique

438
00:21:54,800 --> 00:22:01,370
identifier<font color="#CCCCCC"> and a hash of unique</font>

439
00:21:58,550 --> 00:22:04,159
identifier is another unique identifier

440
00:22:01,370 --> 00:22:08,209
and basically the leakage of information

441
00:22:04,160 --> 00:22:10,040
here is that the bank can now track you

442
00:22:08,210 --> 00:22:13,640
the credit reference agency can now

443
00:22:10,040 --> 00:22:16,190
track you with your hash valve and now

444
00:22:13,640 --> 00:22:18,019
<font color="#E5E5E5">they put the information that was leaked</font>

445
00:22:16,190 --> 00:22:21,500
the credit<font color="#E5E5E5"> reference agency knows you're</font>

446
00:22:18,019 --> 00:22:24,710
at least applied to both of these banks

447
00:22:21,500 --> 00:22:27,620
which is bad if you do replace it with

448
00:22:24,710 --> 00:22:30,129
<font color="#CCCCCC">socials millionaire protocol and zero</font>

449
00:22:27,620 --> 00:22:33,049
knowledge properties will guarantee that

450
00:22:30,129 --> 00:22:38,029
<font color="#E5E5E5">the credit reference agency will not be</font>

451
00:22:33,049 --> 00:22:40,399
able<font color="#E5E5E5"> to track that's good so when i</font>

452
00:22:38,029 --> 00:22:43,759
submitted my implementation<font color="#CCCCCC"> i got some</font>

453
00:22:40,399 --> 00:22:46,879
feedback from Krypto community and they

454
00:22:43,759 --> 00:22:49,460
say that yet this<font color="#E5E5E5"> protocol is good it</font>

455
00:22:46,879 --> 00:22:51,139
provides most curative features but

456
00:22:49,460 --> 00:22:53,629
there<font color="#E5E5E5"> is another protocol which</font>

457
00:22:51,139 --> 00:22:56,449
literally does the same thing and it's

458
00:22:53,629 --> 00:23:01,039
much simpler and<font color="#CCCCCC"> the protocol is called</font>

459
00:22:56,450 --> 00:23:03,980
spatial so<font color="#CCCCCC"> I decided to compare two of</font>

460
00:23:01,039 --> 00:23:07,100
them and whether this one is indeed

461
00:23:03,980 --> 00:23:09,529
better or simple so spake stands for

462
00:23:07,100 --> 00:23:11,439
simple password authenticated key

463
00:23:09,529 --> 00:23:13,549
agreement so it's actually<font color="#CCCCCC"> not an</font>

464
00:23:11,440 --> 00:23:16,940
authentication protocol<font color="#E5E5E5"> is a key</font>

465
00:23:13,549 --> 00:23:20,029
agreement protocol and it's a slight

466
00:23:16,940 --> 00:23:23,330
variation of simple diffie-hellman so

467
00:23:20,029 --> 00:23:25,429
<font color="#E5E5E5">imagine again you have to borrow two</font>

468
00:23:23,330 --> 00:23:27,519
<font color="#E5E5E5">peers they want to communicate securely</font>

469
00:23:25,429 --> 00:23:29,840
they have this common set of

470
00:23:27,519 --> 00:23:31,730
cryptographic public reprographic

471
00:23:29,840 --> 00:23:36,139
parameters<font color="#E5E5E5"> and elliptic curve and</font>

472
00:23:31,730 --> 00:23:39,559
they'll both know some secret<font color="#E5E5E5"> w so how</font>

473
00:23:36,139 --> 00:23:41,689
can they do that they do this these

474
00:23:39,559 --> 00:23:44,750
<font color="#E5E5E5">simple difficult</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> like computation</font>

475
00:23:41,690 --> 00:23:46,610
but instead of just sending the public

476
00:23:44,750 --> 00:23:48,860
parts of the difficult man they mix

477
00:23:46,610 --> 00:23:52,840
those public parts with this password

478
00:23:48,860 --> 00:23:56,809
information the exchange<font color="#E5E5E5"> lost values and</font>

479
00:23:52,840 --> 00:23:59,360
literally they can compute a shared

480
00:23:56,809 --> 00:24:01,220
secret which is<font color="#E5E5E5"> also protected from</font><font color="#CCCCCC"> MITM</font>

481
00:23:59,360 --> 00:24:04,820
because basically<font color="#CCCCCC"> Fidelma is not</font>

482
00:24:01,220 --> 00:24:08,090
protected from<font color="#E5E5E5"> on with you yeah so it's</font>

483
00:24:04,820 --> 00:24:09,918
better it's simpler it this protocol

484
00:24:08,090 --> 00:24:12,259
requires much less number of

485
00:24:09,919 --> 00:24:13,850
cryptographic operation a symmetric

486
00:24:12,259 --> 00:24:17,990
cryptographic operation so<font color="#E5E5E5"> it should be</font>

487
00:24:13,850 --> 00:24:20,389
faster it's easier to implement and also

488
00:24:17,990 --> 00:24:22,970
it provides a negotiated key agreement

489
00:24:20,389 --> 00:24:26,600
of<font color="#CCCCCC"> the protocol outcome and the example</font>

490
00:24:22,970 --> 00:24:29,539
<font color="#CCCCCC">of this description this protocol loop</font>

491
00:24:26,600 --> 00:24:33,469
is here three

492
00:24:29,539 --> 00:24:35,269
makes itself as an rfcs opens a drop and

493
00:24:33,470 --> 00:24:38,289
versions for you so you<font color="#E5E5E5"> can read it it's</font>

494
00:24:35,269 --> 00:24:41,629
very small action<font color="#E5E5E5"> and easy to read</font>

495
00:24:38,289 --> 00:24:45,259
that's good so how do they<font color="#E5E5E5"> compare so</font>

496
00:24:41,629 --> 00:24:47,869
<font color="#E5E5E5">both of these protocol so I'm doing the</font>

497
00:24:45,259 --> 00:24:50,739
comparison in terms of mutual

498
00:24:47,869 --> 00:24:54,470
authentication because we want to<font color="#E5E5E5"> apply</font>

499
00:24:50,739 --> 00:24:56,359
either with a credit reference agency

500
00:24:54,470 --> 00:24:59,720
example or this HTTP authentication

501
00:24:56,359 --> 00:25:02,178
scenario so they both provide mutual

502
00:24:59,720 --> 00:25:04,519
authentication the protocols are

503
00:25:02,179 --> 00:25:06,619
symmetric so after the protocol complete

504
00:25:04,519 --> 00:25:08,929
both protocol completes each party knows

505
00:25:06,619 --> 00:25:12,109
that the other party knows the same

506
00:25:08,929 --> 00:25:17,239
secret they are both protected from<font color="#CCCCCC"> a my</font>

507
00:25:12,109 --> 00:25:19,820
GM socialist millionaire requires three

508
00:25:17,239 --> 00:25:22,309
<font color="#E5E5E5">round trips of exchanging intermediate</font>

509
00:25:19,820 --> 00:25:25,428
data and speak to<font color="#CCCCCC"> the growers two round</font>

510
00:25:22,309 --> 00:25:28,820
trips oh yeah if<font color="#CCCCCC"> Lulu ISIL revised</font>

511
00:25:25,429 --> 00:25:31,820
<font color="#E5E5E5">social analysis three round trips if we</font>

512
00:25:28,820 --> 00:25:34,070
suspect to but you may<font color="#CCCCCC"> ask me the</font>

513
00:25:31,820 --> 00:25:36,619
picture<font color="#E5E5E5"> shows only one round trip but I</font>

514
00:25:34,070 --> 00:25:40,009
am again stressing that we<font color="#CCCCCC"> compare the</font>

515
00:25:36,619 --> 00:25:42,199
protocols in authentication scenario so

516
00:25:40,009 --> 00:25:45,289
here the protocol outcome is<font color="#CCCCCC"> the</font>

517
00:25:42,200 --> 00:25:47,749
computation of the shared secret to use

518
00:25:45,289 --> 00:25:50,779
this protocol in authentication scenario

519
00:25:47,749 --> 00:25:52,879
you need to somehow verify that the

520
00:25:50,779 --> 00:25:55,279
other party computed the same shared

521
00:25:52,879 --> 00:26:00,199
secret so<font color="#E5E5E5"> you need another round of tea</font>

522
00:25:55,279 --> 00:26:03,619
confirmation sure<font color="#CCCCCC"> yes in socialist</font>

523
00:26:00,200 --> 00:26:08,119
military protocol is more complex its

524
00:26:03,619 --> 00:26:11,330
lower is faster I decided to<font color="#CCCCCC"> check how</font>

525
00:26:08,119 --> 00:26:14,238
much is it slower so I<font color="#E5E5E5"> implemented to</font>

526
00:26:11,330 --> 00:26:17,499
simple benchmarking applications with

527
00:26:14,239 --> 00:26:21,649
both protocols and it appears in average

528
00:26:17,499 --> 00:26:24,889
<font color="#E5E5E5">in pure see social school in here is 30</font>

529
00:26:21,649 --> 00:26:28,549
times slower but if you<font color="#CCCCCC"> think of it</font>

530
00:26:24,889 --> 00:26:32,090
again<font color="#E5E5E5"> in terms of authentication</font>

531
00:26:28,549 --> 00:26:36,440
scenarios if sometimes slowness is even

532
00:26:32,090 --> 00:26:38,840
a feature we go as an example<font color="#CCCCCC"> modeling a</font>

533
00:26:36,440 --> 00:26:41,119
security system I implementing password

534
00:26:38,840 --> 00:26:43,209
verification scheme to be to be

535
00:26:41,119 --> 00:26:46,899
<font color="#E5E5E5">deliberately slow for example</font>

536
00:26:43,210 --> 00:26:48,730
<font color="#CCCCCC">pd kdf to protocol and so the system</font>

537
00:26:46,899 --> 00:26:51,549
should<font color="#E5E5E5"> be</font><font color="#CCCCCC"> implemented in such a way that</font>

538
00:26:48,730 --> 00:26:54,159
it is<font color="#E5E5E5"> fast</font><font color="#CCCCCC"> enough for a legitimate user</font>

539
00:26:51,549 --> 00:26:57,000
but slow enough for a new force attacker

540
00:26:54,159 --> 00:26:59,169
so then they deliberately implement

541
00:26:57,000 --> 00:27:02,799
verification and password in<font color="#CCCCCC"> a slow</font>

542
00:26:59,169 --> 00:27:04,690
manner so when group force attack will

543
00:27:02,799 --> 00:27:08,529
try to verify many many passwords they

544
00:27:04,690 --> 00:27:11,380
cannot achieve much efficiency and if

545
00:27:08,529 --> 00:27:13,419
you<font color="#E5E5E5"> talk to a real world developers</font>

546
00:27:11,380 --> 00:27:16,570
nobody will implement a web application

547
00:27:13,419 --> 00:27:18,549
in pure see now so label probably you

548
00:27:16,570 --> 00:27:22,029
will use<font color="#CCCCCC"> some</font><font color="#E5E5E5"> high-level language like</font>

549
00:27:18,549 --> 00:27:24,309
<font color="#E5E5E5">Python and in Python associates</font>

550
00:27:22,029 --> 00:27:27,580
millinery protocol is only returns for

551
00:27:24,309 --> 00:27:30,070
an average because more<font color="#E5E5E5"> CPU cycles are</font>

552
00:27:27,580 --> 00:27:35,639
wasted on Python runtime Wembley actual

553
00:27:30,070 --> 00:27:38,439
cryptography<font color="#CCCCCC"> okay almost on the keys</font>

554
00:27:35,640 --> 00:27:40,870
yeah spike<font color="#E5E5E5"> too is a key agreement</font>

555
00:27:38,440 --> 00:27:44,470
protocol so it ago she AIT's a shared

556
00:27:40,870 --> 00:27:46,600
secret as the protocol outcome if you

557
00:27:44,470 --> 00:27:49,570
take a<font color="#E5E5E5"> closer look at social millionaire</font>

558
00:27:46,600 --> 00:27:51,189
it can be actually used as the key

559
00:27:49,570 --> 00:27:54,010
agreement protocol as well and it

560
00:27:51,190 --> 00:27:57,100
<font color="#E5E5E5">actually negotiates</font><font color="#CCCCCC"> to share secret so</font>

561
00:27:54,010 --> 00:27:58,539
if you remember the scheme it starts

562
00:27:57,100 --> 00:28:01,539
with stupid if you have unlikely

563
00:27:58,539 --> 00:28:04,059
exchanges so basically<font color="#E5E5E5"> if the last</font>

564
00:28:01,539 --> 00:28:06,460
equation will hold we can catch those

565
00:28:04,059 --> 00:28:11,379
intermediate parameters and use them<font color="#CCCCCC"> as</font>

566
00:28:06,460 --> 00:28:15,220
a shared secret now and the<font color="#E5E5E5"> last but not</font>

567
00:28:11,380 --> 00:28:17,380
least so socialist millinery is approved

568
00:28:15,220 --> 00:28:21,130
zero knowledge protocol so it has this

569
00:28:17,380 --> 00:28:23,070
zero knowledge property which<font color="#CCCCCC"> is very</font>

570
00:28:21,130 --> 00:28:27,039
useful if you handling personal

571
00:28:23,070 --> 00:28:29,470
identifiable information speak<font color="#CCCCCC"> to is</font>

572
00:28:27,039 --> 00:28:32,320
simple but it might have<font color="#CCCCCC"> some</font>

573
00:28:29,470 --> 00:28:35,190
implementation k vs<font color="#CCCCCC"> i'm going</font><font color="#E5E5E5"> to show</font>

574
00:28:32,320 --> 00:28:38,950
them here<font color="#CCCCCC"> so if you take a closer look</font>

575
00:28:35,190 --> 00:28:42,399
if you<font color="#E5E5E5"> think of the secret which is</font>

576
00:28:38,950 --> 00:28:46,210
being compared secret w if you<font color="#CCCCCC"> think of</font>

577
00:28:42,399 --> 00:28:49,229
<font color="#E5E5E5">it as a private key the actual values</font>

578
00:28:46,210 --> 00:28:52,270
which are used in the protocol are not

579
00:28:49,230 --> 00:28:55,070
so the secret is not use directly but

580
00:28:52,270 --> 00:28:59,320
actually some derived value from the sea

581
00:28:55,070 --> 00:29:05,000
did you<font color="#E5E5E5"> which looks like a public key so</font>

582
00:28:59,320 --> 00:29:07,399
eventually if<font color="#E5E5E5"> I define an attacker I do</font>

583
00:29:05,000 --> 00:29:09,500
not need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> know w itself to</font>

584
00:29:07,399 --> 00:29:12,110
successfully authenticate using this

585
00:29:09,500 --> 00:29:14,990
protocol<font color="#E5E5E5"> I only need to know this</font>

586
00:29:12,110 --> 00:29:17,000
publicly right value which<font color="#E5E5E5"> brings us to</font>

587
00:29:14,990 --> 00:29:19,190
the implementation heavier if you're

588
00:29:17,000 --> 00:29:21,740
<font color="#E5E5E5">asking your developers to implement</font>

589
00:29:19,190 --> 00:29:23,720
speak to in a secure manner one of the

590
00:29:21,740 --> 00:29:27,110
<font color="#CCCCCC">requirements will probably be that they</font>

591
00:29:23,720 --> 00:29:29,720
should<font color="#E5E5E5"> zero up the protocol</font><font color="#CCCCCC"> complaints</font>

592
00:29:27,110 --> 00:29:32,750
they should<font color="#CCCCCC"> zero all the memory which</font>

593
00:29:29,720 --> 00:29:34,639
contain critical information so they

594
00:29:32,750 --> 00:29:38,330
will probably zero the memory which

595
00:29:34,639 --> 00:29:41,178
contain w but if they will<font color="#CCCCCC"> forget 20 all</font>

596
00:29:38,330 --> 00:29:43,610
the intermediate values the attacker can

597
00:29:41,179 --> 00:29:46,100
dump this memory and use it directly to

598
00:29:43,610 --> 00:29:50,689
authenticate using this protocol so you

599
00:29:46,100 --> 00:29:53,980
have to be<font color="#E5E5E5"> aware of all yeah and finally</font>

600
00:29:50,690 --> 00:30:00,850
where can<font color="#E5E5E5"> we use both</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this protocol</font>

601
00:29:53,980 --> 00:30:03,860
what's<font color="#E5E5E5"> wrong</font><font color="#CCCCCC"> with this page yes</font>

602
00:30:00,850 --> 00:30:05,449
correctly<font color="#E5E5E5"> and if you implement HTTP</font>

603
00:30:03,860 --> 00:30:08,899
authentication using one of this

604
00:30:05,450 --> 00:30:11,799
protocol you're secure because the

605
00:30:08,899 --> 00:30:14,689
property is guarantee you that another

606
00:30:11,799 --> 00:30:16,908
great use case for both this protocol if

607
00:30:14,690 --> 00:30:18,769
you have a distributed system to

608
00:30:16,909 --> 00:30:21,379
distributed systems which communicate

609
00:30:18,769 --> 00:30:23,299
over long live encrypted connection it

610
00:30:21,379 --> 00:30:25,789
is a good security practice to rotate

611
00:30:23,299 --> 00:30:29,240
the keys and<font color="#E5E5E5"> the Teddy Keyes is always</font>

612
00:30:25,789 --> 00:30:31,399
hard and always create an operational

613
00:30:29,240 --> 00:30:34,029
burden but we both of these protocols

614
00:30:31,399 --> 00:30:36,889
you can add someone just you

615
00:30:34,029 --> 00:30:39,110
running these protocols at specific

616
00:30:36,889 --> 00:30:42,949
times you want so as often as<font color="#CCCCCC"> you want</font>

617
00:30:39,110 --> 00:30:46,428
and so they both renegotiate your key

618
00:30:42,950 --> 00:30:49,549
you'll save your key and you rotate the

619
00:30:46,429 --> 00:30:51,259
<font color="#E5E5E5">key so this this scenario can be fully</font>

620
00:30:49,549 --> 00:30:58,690
automated and<font color="#E5E5E5"> can be performed without</font>

621
00:30:51,259 --> 00:31:01,690
any human right interventions so

622
00:30:58,690 --> 00:31:01,690
Newton's

623
00:31:02,110 --> 00:31:08,020
zero knowledge protocols are useful

624
00:31:04,870 --> 00:31:11,530
building blocks or enhancing security

625
00:31:08,020 --> 00:31:16,090
and privacy of the web and especially

626
00:31:11,530 --> 00:31:19,570
very useful when<font color="#E5E5E5"> you're handling p I so</font>

627
00:31:16,090 --> 00:31:24,090
it won't your its properties allow you

628
00:31:19,570 --> 00:31:27,939
not to leave any bit of<font color="#E5E5E5"> VI to grocery</font>

629
00:31:24,090 --> 00:31:33,250
you can also use<font color="#E5E5E5"> pay course paid to in</font>

630
00:31:27,940 --> 00:31:37,270
many use cases if but you have to be

631
00:31:33,250 --> 00:31:39,130
aware of its k VX and although socials

632
00:31:37,270 --> 00:31:42,340
New<font color="#CCCCCC"> Linnell protocol it will bit more</font>

633
00:31:39,130 --> 00:31:45,070
complex it what it<font color="#E5E5E5"> provides you more</font>

634
00:31:42,340 --> 00:31:47,110
security feature so basically you can

635
00:31:45,070 --> 00:31:50,200
decide whichever is better for you

636
00:31:47,110 --> 00:31:52,389
you're running<font color="#E5E5E5"> this if you're running</font>

637
00:31:50,200 --> 00:31:54,429
<font color="#E5E5E5">for speed probably</font><font color="#CCCCCC"> Spade to it the</font>

638
00:31:52,390 --> 00:31:58,210
better choice but if you<font color="#CCCCCC"> are not consult</font>

639
00:31:54,429 --> 00:32:00,280
with that much and you<font color="#E5E5E5"> probably want</font>

640
00:31:58,210 --> 00:32:04,660
more security features and publish it

641
00:32:00,280 --> 00:32:07,178
should blow your knowledge protocol give

642
00:32:04,660 --> 00:32:10,480
some useful links so this is original

643
00:32:07,179 --> 00:32:12,610
paper which describes socialist

644
00:32:10,480 --> 00:32:15,309
millionaire protocol based on elliptic

645
00:32:12,610 --> 00:32:17,969
curve cryptography<font color="#CCCCCC"> the code on github</font>

646
00:32:15,309 --> 00:32:20,799
this is the same thing<font color="#CCCCCC"> I showed before</font>

647
00:32:17,970 --> 00:32:22,540
if you are more interested in space to

648
00:32:20,799 --> 00:32:24,129
implementation actually boring as

649
00:32:22,540 --> 00:32:27,070
yourself Google's boring as a self

650
00:32:24,130 --> 00:32:29,890
adopted one recently so you can take a

651
00:32:27,070 --> 00:32:32,200
look at the implementation there and the

652
00:32:29,890 --> 00:32:34,600
interesting<font color="#CCCCCC"> part that they both use the</font>

653
00:32:32,200 --> 00:32:38,290
same<font color="#CCCCCC"> state-of-the-art</font><font color="#E5E5E5"> elliptic curve</font>

654
00:32:34,600 --> 00:32:41,980
cryptography ed<font color="#CCCCCC"> 255</font><font color="#E5E5E5"> 19 pretty good and</font>

655
00:32:38,290 --> 00:32:44,440
fast and secure and these<font color="#CCCCCC"> are links to</font>

656
00:32:41,980 --> 00:32:46,809
these two small benchmarking programs i

657
00:32:44,440 --> 00:32:49,090
was talking before to check the speed of

658
00:32:46,809 --> 00:32:52,389
each protocol there are also available

659
00:32:49,090 --> 00:32:54,760
you can check them out you can use them

660
00:32:52,390 --> 00:32:57,309
as a starting point or at an example of

661
00:32:54,760 --> 00:33:01,169
how<font color="#E5E5E5"> to use these protocols for</font>

662
00:32:57,309 --> 00:33:07,740
authentication in your applications

663
00:33:01,169 --> 00:33:07,740
that's it do you have any questions

664
00:33:10,850 --> 00:33:33,830
going<font color="#CCCCCC"> one yes yes absolute scale</font><font color="#E5E5E5"> depends</font>

665
00:33:31,320 --> 00:33:38,100
on<font color="#E5E5E5"> the workload on your actual service</font>

666
00:33:33,830 --> 00:33:40,530
so let's say<font color="#CCCCCC"> we take example of cloud</font>

667
00:33:38,100 --> 00:33:44,610
where we serve like millions of requests

668
00:33:40,530 --> 00:33:51,059
per second so speed is probably will be

669
00:33:44,610 --> 00:33:55,889
more important<font color="#E5E5E5"> to us but for like lower</font>

670
00:33:51,059 --> 00:33:57,690
low scenarios security might be more

671
00:33:55,890 --> 00:34:01,020
important than even you can make this

672
00:33:57,690 --> 00:34:03,840
<font color="#CCCCCC">trade-off</font><font color="#E5E5E5"> but there is no the absolute</font>

673
00:34:01,020 --> 00:34:05,940
number will also depends on which type

674
00:34:03,840 --> 00:34:08,129
of hardware do you have each cpu

675
00:34:05,940 --> 00:34:10,260
frequency how many<font color="#E5E5E5"> CPUs and etcetera</font>

676
00:34:08,129 --> 00:34:14,489
etcetera so you cannot just measure

677
00:34:10,260 --> 00:34:32,280
absolute time without binding a software

678
00:34:14,489 --> 00:34:36,569
specific hardware<font color="#E5E5E5"> vegetation well I'm</font>

679
00:34:32,280 --> 00:34:42,750
<font color="#E5E5E5">action honestly not</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> dig it dig deep</font>

680
00:34:36,570 --> 00:34:44,760
enough for IBM research problem what why

681
00:34:42,750 --> 00:34:47,580
I should have children associate

682
00:34:44,760 --> 00:34:49,590
millionaire as my target because usually

683
00:34:47,580 --> 00:34:53,639
include the graphic community when you

684
00:34:49,590 --> 00:34:58,200
trying to push some protocols or like

685
00:34:53,639 --> 00:35:01,560
widespread use people are<font color="#E5E5E5"> very concerned</font>

686
00:34:58,200 --> 00:35:03,660
about a good track history so meaning

687
00:35:01,560 --> 00:35:06,150
that this protocol is already adopted

688
00:35:03,660 --> 00:35:10,560
and was never breaking because there is

689
00:35:06,150 --> 00:35:12,600
no actually theoretical security<font color="#CCCCCC"> it's</font>

690
00:35:10,560 --> 00:35:15,390
got money in cryptography it's only like

691
00:35:12,600 --> 00:35:17,310
practical security so number number of

692
00:35:15,390 --> 00:35:18,170
attacks with<font color="#CCCCCC"> efficiency fact we shall</font>

693
00:35:17,310 --> 00:35:20,900
develop<font color="#E5E5E5"> again</font>

694
00:35:18,170 --> 00:35:23,660
that of this protocol in this case why

695
00:35:20,900 --> 00:35:25,790
he chose socialist millionaire that it

696
00:35:23,660 --> 00:35:28,098
will it's already implemented and have

697
00:35:25,790 --> 00:35:32,930
been used for some time in open source

698
00:35:28,099 --> 00:35:35,900
<font color="#E5E5E5">chakra that's why I did indeed enough</font>

699
00:35:32,930 --> 00:35:37,578
into more research project I want<font color="#CCCCCC"> to</font>

700
00:35:35,900 --> 00:35:39,740
<font color="#E5E5E5">show</font><font color="#CCCCCC"> that there is a mechanism to</font>

701
00:35:37,579 --> 00:35:51,430
improve the authentication on the web

702
00:35:39,740 --> 00:35:51,430
now gold once going twice done

703
00:35:52,270 --> 00:35:54,330
you

