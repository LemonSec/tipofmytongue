1
00:00:03,510 --> 00:00:12,420
I welcome back to its<font color="#E5E5E5"> attractive we've</font>

2
00:00:08,370 --> 00:00:15,600
got some<font color="#E5E5E5"> Thomas here to speak about</font><font color="#CCCCCC"> HP</font>

3
00:00:12,420 --> 00:00:16,800
<font color="#CCCCCC">one serialization bloom abilities are</font>

4
00:00:15,600 --> 00:00:21,439
getting the<font color="#CCCCCC"> impression that quite a lot</font>

5
00:00:16,800 --> 00:00:21,440
<font color="#CCCCCC">of you in the audience already know some</font>

6
00:00:25,099 --> 00:00:43,879
promises to be quite<font color="#E5E5E5"> good questions</font>

7
00:00:40,879 --> 00:00:43,879
<font color="#E5E5E5">interesting</font>

8
00:01:37,160 --> 00:01:47,340
<font color="#E5E5E5">okay so my</font><font color="#CCCCCC"> name's</font><font color="#E5E5E5"> Sam Thomas I'm the</font>

9
00:01:43,770 --> 00:01:56,399
head of<font color="#E5E5E5"> research at pentester giving is</font>

10
00:01:47,340 --> 00:01:59,160
the<font color="#CCCCCC"> obligatory</font><font color="#E5E5E5"> my slide</font><font color="#CCCCCC"> the boring stuff</font>

11
00:01:56,400 --> 00:02:03,360
<font color="#E5E5E5">in the pirate basically</font><font color="#CCCCCC"> do like to thank</font>

12
00:01:59,160 --> 00:02:06,450
<font color="#CCCCCC">mr. so what is appear to be on</font>

13
00:02:03,360 --> 00:02:08,669
serialization so basically over<font color="#E5E5E5"> the last</font>

14
00:02:06,450 --> 00:02:11,009
few years<font color="#E5E5E5"> we've taken this slowly</font>

15
00:02:08,669 --> 00:02:14,390
emerging class<font color="#CCCCCC"> of fun abilities</font><font color="#E5E5E5"> called</font>

16
00:02:11,009 --> 00:02:17,429
object injection<font color="#E5E5E5"> does appear in other</font>

17
00:02:14,390 --> 00:02:21,570
languages etc but really only<font color="#E5E5E5"> focused on</font>

18
00:02:17,430 --> 00:02:23,460
PHP<font color="#E5E5E5"> and focused on serialization just</font>

19
00:02:21,570 --> 00:02:26,370
recently and I didn't know about this -

20
00:02:23,460 --> 00:02:28,440
they came to prepare<font color="#CCCCCC"> this all someone</font>

21
00:02:26,370 --> 00:02:30,810
whose<font color="#CCCCCC"> name I don't</font><font color="#E5E5E5"> know it's only</font><font color="#CCCCCC"> being</font>

22
00:02:28,440 --> 00:02:33,600
freed<font color="#CCCCCC"> on Oh Lord</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I demonstrated</font><font color="#E5E5E5"> a</font>

23
00:02:30,810 --> 00:02:34,470
different way of exploiting a similar

24
00:02:33,600 --> 00:02:37,590
<font color="#CCCCCC">purpose</font>

25
00:02:34,470 --> 00:02:40,470
now I first<font color="#E5E5E5"> came across this on sort of</font>

26
00:02:37,590 --> 00:02:43,650
normal and<font color="#E5E5E5"> just had a few days</font><font color="#CCCCCC"> to test</font>

27
00:02:40,470 --> 00:02:45,630
them out did a bit of<font color="#CCCCCC"> reform it was</font>

28
00:02:43,650 --> 00:02:49,410
<font color="#E5E5E5">fought</font><font color="#CCCCCC"> to an old version SilverStripe</font>

29
00:02:45,630 --> 00:02:50,210
which is an open<font color="#E5E5E5"> source CMS so did the</font>

30
00:02:49,410 --> 00:02:53,720
<font color="#E5E5E5">normal thing</font>

31
00:02:50,210 --> 00:02:57,770
<font color="#E5E5E5">see the change and this and she jumped</font>

32
00:02:53,720 --> 00:03:02,690
<font color="#E5E5E5">out at me so after getting past those</font>

33
00:02:57,770 --> 00:03:03,200
<font color="#E5E5E5">first three words a bigger look at what</font>

34
00:03:02,690 --> 00:03:09,859
I said

35
00:03:03,200 --> 00:03:11,660
obviously we ignore potential<font color="#CCCCCC"> but this</font>

36
00:03:09,860 --> 00:03:17,540
word<font color="#E5E5E5"> serialization doesn't really know</font>

37
00:03:11,660 --> 00:03:20,030
what it meant<font color="#CCCCCC"> so that's well okay</font>

38
00:03:17,540 --> 00:03:23,390
because this amazing research by<font color="#E5E5E5"> Stefan</font>

39
00:03:20,030 --> 00:03:25,550
Esther who<font color="#CCCCCC"> basically found the issue I</font>

40
00:03:23,390 --> 00:03:27,920
<font color="#E5E5E5">think it's quite important to make</font><font color="#CCCCCC"> sure</font>

41
00:03:25,550 --> 00:03:29,780
he gets<font color="#E5E5E5"> to credit because when we talk</font>

42
00:03:27,920 --> 00:03:32,869
about<font color="#E5E5E5"> classes of vulnerabilities like</font>

43
00:03:29,780 --> 00:03:36,800
SQL injection or<font color="#CCCCCC"> custom scripting</font><font color="#E5E5E5"> we</font>

44
00:03:32,870 --> 00:03:44,000
don't achieve every single person so

45
00:03:36,800 --> 00:03:50,540
<font color="#E5E5E5">obvious</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> function materializes</font>

46
00:03:44,000 --> 00:03:52,940
around for a long<font color="#E5E5E5"> time I'm guessing a</font>

47
00:03:50,540 --> 00:03:55,190
lot<font color="#E5E5E5"> of other people have similar</font>

48
00:03:52,940 --> 00:03:58,250
experiences because around the<font color="#E5E5E5"> same time</font>

49
00:03:55,190 --> 00:04:00,680
a lot of<font color="#E5E5E5"> people</font><font color="#CCCCCC"> started talking</font><font color="#E5E5E5"> about</font>

50
00:03:58,250 --> 00:04:04,160
this cause<font color="#E5E5E5"> of</font><font color="#CCCCCC"> own</font><font color="#E5E5E5"> ability</font><font color="#CCCCCC"> is instill</font>

51
00:04:00,680 --> 00:04:06,650
examples stuff<font color="#E5E5E5"> you know the exploits</font>

52
00:04:04,160 --> 00:04:11,230
that<font color="#E5E5E5"> you could do now I wasn't aware</font><font color="#CCCCCC"> of</font>

53
00:04:06,650 --> 00:04:15,140
all of<font color="#CCCCCC"> this research when I</font><font color="#E5E5E5"> was scared</font>

54
00:04:11,230 --> 00:04:18,019
<font color="#E5E5E5">and I'm going</font><font color="#CCCCCC"> to talk a little bit</font><font color="#E5E5E5"> about</font>

55
00:04:15,140 --> 00:04:21,180
some of<font color="#E5E5E5"> the other stuff</font><font color="#CCCCCC"> they've done</font><font color="#E5E5E5"> so</font>

56
00:04:18,019 --> 00:04:23,849
this guy<font color="#E5E5E5"> asked any right of</font>

57
00:04:21,180 --> 00:04:27,479
<font color="#E5E5E5">well</font><font color="#CCCCCC"> he did some amazing</font><font color="#E5E5E5"> stuff basically</font>

58
00:04:23,850 --> 00:04:30,570
using built-in<font color="#CCCCCC"> classes in PHP as well as</font>

59
00:04:27,479 --> 00:04:34,258
the<font color="#CCCCCC"> user-defined one's a</font><font color="#E5E5E5"> computer</font>

60
00:04:30,570 --> 00:04:36,090
<font color="#CCCCCC">ramallah just basically thought British</font>

61
00:04:34,259 --> 00:04:38,970
<font color="#CCCCCC">taken on this</font><font color="#E5E5E5"> one of</font><font color="#CCCCCC"> us he found</font><font color="#E5E5E5"> a lot</font>

62
00:04:36,090 --> 00:04:42,710
of<font color="#E5E5E5"> instances of it</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> south and I</font>

63
00:04:38,970 --> 00:04:42,710
was<font color="#CCCCCC"> paid and done a</font><font color="#E5E5E5"> lot of work there</font>

64
00:04:44,330 --> 00:04:50,219
basically<font color="#E5E5E5"> so because I learned things</font>

65
00:04:47,699 --> 00:04:51,960
more by doing<font color="#CCCCCC"> them by just reading about</font>

66
00:04:50,220 --> 00:04:58,080
them I wanted<font color="#E5E5E5"> to sort of talk through</font>

67
00:04:51,960 --> 00:05:00,060
three<font color="#CCCCCC"> fun abilities that I worked now I</font>

68
00:04:58,080 --> 00:05:03,330
was<font color="#E5E5E5"> basically trying to be clever here</font>

69
00:05:00,060 --> 00:05:04,800
and talk about<font color="#CCCCCC"> my solo</font><font color="#E5E5E5"> abilities you</font>

70
00:05:03,330 --> 00:05:06,508
know talk about<font color="#E5E5E5"> the methodology</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> say</font>

71
00:05:04,800 --> 00:05:08,970
<font color="#E5E5E5">you could apply this to more recent</font>

72
00:05:06,509 --> 00:05:11,460
stuff<font color="#E5E5E5"> so I went off to</font><font color="#CCCCCC"> have a look at</font>

73
00:05:08,970 --> 00:05:13,860
some<font color="#CCCCCC"> more recency in years</font><font color="#E5E5E5"> and one</font>

74
00:05:11,460 --> 00:05:15,180
jumped out<font color="#CCCCCC"> meets the base</font><font color="#E5E5E5"> of one</font><font color="#CCCCCC"> of the</font>

75
00:05:13,860 --> 00:05:18,360
experts I'm going to show<font color="#E5E5E5"> you here today</font>

76
00:05:15,180 --> 00:05:21,110
<font color="#E5E5E5">with some small changes would affect</font>

77
00:05:18,360 --> 00:05:28,050
this<font color="#E5E5E5"> wordpress plugin which apparently</font>

78
00:05:21,110 --> 00:05:30,150
is I hope I don't<font color="#E5E5E5"> do as much</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> I</font>

79
00:05:28,050 --> 00:05:33,419
thought I would to justify that this is

80
00:05:30,150 --> 00:05:34,739
you<font color="#E5E5E5"> know very relevant now I'm not</font>

81
00:05:33,419 --> 00:05:37,139
really<font color="#E5E5E5"> going to talk about the</font>

82
00:05:34,740 --> 00:05:39,720
vulnerability<font color="#CCCCCC"> I don't know if you call</font>

83
00:05:37,139 --> 00:05:43,349
my<font color="#CCCCCC"> colleague always</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about static</font>

84
00:05:39,720 --> 00:05:44,600
analysis<font color="#E5E5E5"> we really know how to find this</font>

85
00:05:43,349 --> 00:05:46,640
kind of<font color="#CCCCCC"> honor adversities</font>

86
00:05:44,600 --> 00:05:48,950
you think of SQL injection or cross-site

87
00:05:46,640 --> 00:05:51,320
scripting is<font color="#CCCCCC"> basically you the</font><font color="#E5E5E5"> control</font>

88
00:05:48,950 --> 00:05:53,719
<font color="#CCCCCC">data gain to a function that it</font>

89
00:05:51,320 --> 00:05:56,240
shouldn't<font color="#E5E5E5"> it I'm not going</font><font color="#CCCCCC"> to talk about</font>

90
00:05:53,720 --> 00:05:57,740
how to fix it<font color="#E5E5E5"> because basically it's</font>

91
00:05:56,240 --> 00:06:02,270
fairly trivial just phone<font color="#CCCCCC"> i'm</font>

92
00:05:57,740 --> 00:06:04,580
serializing control<font color="#E5E5E5"> more recently with</font>

93
00:06:02,270 --> 00:06:06,229
PHP<font color="#CCCCCC"> 7 they've introduced</font><font color="#E5E5E5"> a second</font>

94
00:06:04,580 --> 00:06:08,990
argument to<font color="#E5E5E5"> the function is saying you</font>

95
00:06:06,230 --> 00:06:12,800
can<font color="#CCCCCC"> limit what classes you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see</font>

96
00:06:08,990 --> 00:06:15,380
<font color="#CCCCCC">realizing what I do really want to talk</font>

97
00:06:12,800 --> 00:06:19,040
<font color="#E5E5E5">about is the</font><font color="#CCCCCC"> actual technique we used to</font>

98
00:06:15,380 --> 00:06:21,469
exploit it so this is sort<font color="#E5E5E5"> of one of the</font>

99
00:06:19,040 --> 00:06:23,990
slides from<font color="#CCCCCC"> Stephan</font><font color="#E5E5E5"> Lester's original</font>

100
00:06:21,470 --> 00:06:26,120
<font color="#CCCCCC">presentation and</font><font color="#E5E5E5"> basically introduced</font>

101
00:06:23,990 --> 00:06:29,540
this concept called<font color="#E5E5E5"> property</font><font color="#CCCCCC"> orientation</font>

102
00:06:26,120 --> 00:06:40,930
<font color="#CCCCCC">programming</font><font color="#E5E5E5"> and that's a much broader</font>

103
00:06:29,540 --> 00:06:43,730
area<font color="#CCCCCC"> okay so this is</font><font color="#E5E5E5"> the basic</font><font color="#CCCCCC"> agenda</font>

104
00:06:40,930 --> 00:06:45,200
before<font color="#E5E5E5"> we can get to the cool stuff of</font>

105
00:06:43,730 --> 00:06:47,690
actually exploited<font color="#CCCCCC"> we need some</font>

106
00:06:45,200 --> 00:06:53,930
background<font color="#E5E5E5"> information so what is on</font>

107
00:06:47,690 --> 00:06:56,060
<font color="#E5E5E5">serialization why is it exploitable okay</font>

108
00:06:53,930 --> 00:06:58,460
so basically there's two functions of

109
00:06:56,060 --> 00:07:00,380
the<font color="#CCCCCC"> PHP serialized and uncivilized that</font>

110
00:06:58,460 --> 00:07:03,680
you know do the opposite of<font color="#E5E5E5"> each other</font>

111
00:07:00,380 --> 00:07:06,100
<font color="#CCCCCC">so</font><font color="#E5E5E5"> serialized</font><font color="#CCCCCC"> generates a</font><font color="#E5E5E5"> storable</font>

112
00:07:03,680 --> 00:07:08,440
representation

113
00:07:06,100 --> 00:07:10,270
you know<font color="#CCCCCC"> got</font><font color="#E5E5E5"> some simple examples</font><font color="#CCCCCC"> there</font>

114
00:07:08,440 --> 00:07:12,130
like integers<font color="#E5E5E5"> and strings and this</font>

115
00:07:10,270 --> 00:07:15,250
basics<font color="#E5E5E5"> think</font><font color="#CCCCCC"> you store them</font><font color="#E5E5E5"> in a</font>

116
00:07:12,130 --> 00:07:16,840
database<font color="#E5E5E5"> or in a local</font><font color="#CCCCCC"> file or</font><font color="#E5E5E5"> something</font>

117
00:07:15,250 --> 00:07:19,690
like that<font color="#CCCCCC"> now the problem comes</font><font color="#E5E5E5"> with</font>

118
00:07:16,840 --> 00:07:21,280
those kind of<font color="#E5E5E5"> babies are exposed to the</font>

119
00:07:19,690 --> 00:07:23,800
<font color="#CCCCCC">end-user</font><font color="#E5E5E5"> so for instance is passed</font>

120
00:07:21,280 --> 00:07:25,960
through<font color="#CCCCCC"> a cookie or a get parameter on</font>

121
00:07:23,800 --> 00:07:29,260
<font color="#CCCCCC">serialize</font><font color="#E5E5E5"> does the opposite and converts</font>

122
00:07:25,960 --> 00:07:32,799
this binary<font color="#E5E5E5"> string back into the actual</font>

123
00:07:29,260 --> 00:07:35,860
value<font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> sound all that interesting</font>

124
00:07:32,800 --> 00:07:40,420
but once we get<font color="#E5E5E5"> down to</font><font color="#CCCCCC"> actually what</font>

125
00:07:35,860 --> 00:07:41,680
things are<font color="#E5E5E5"> a</font><font color="#CCCCCC"> value</font><font color="#E5E5E5"> within so you've got</font>

126
00:07:40,420 --> 00:07:43,960
<font color="#CCCCCC">eight</font><font color="#E5E5E5"> primitive types</font>

127
00:07:41,680 --> 00:07:46,470
<font color="#CCCCCC">I think</font><font color="#E5E5E5"> this scalar one should be well</font>

128
00:07:43,960 --> 00:07:46,469
<font color="#E5E5E5">understood</font>

129
00:07:47,160 --> 00:07:51,390
thank you<font color="#E5E5E5"> these special types are our</font>

130
00:07:49,650 --> 00:07:55,620
resource which<font color="#CCCCCC"> is like an open database</font>

131
00:07:51,390 --> 00:08:01,680
or an open file handle<font color="#CCCCCC"> these are the one</font>

132
00:07:55,620 --> 00:08:04,260
thing that can't be serialized so okay

133
00:08:01,680 --> 00:08:08,580
an array basically consists of<font color="#E5E5E5"> a set of</font>

134
00:08:04,260 --> 00:08:10,890
indexes and<font color="#CCCCCC"> a set of</font><font color="#E5E5E5"> values in PHP those</font>

135
00:08:08,580 --> 00:08:12,870
indexes<font color="#E5E5E5"> could take any value which could</font>

136
00:08:10,890 --> 00:08:15,360
get a bit<font color="#E5E5E5"> complicated when you think</font>

137
00:08:12,870 --> 00:08:17,310
about<font color="#CCCCCC"> no say having</font><font color="#E5E5E5"> object as an in</font>

138
00:08:15,360 --> 00:08:20,130
depth but everything we can<font color="#E5E5E5"> look at</font>

139
00:08:17,310 --> 00:08:20,910
would just be integers or<font color="#E5E5E5"> strings for</font>

140
00:08:20,130 --> 00:08:24,420
the index

141
00:08:20,910 --> 00:08:26,430
okay now an object<font color="#E5E5E5"> is an instance of a</font>

142
00:08:24,420 --> 00:08:28,470
class<font color="#CCCCCC"> so you've got the code a winding</font>

143
00:08:26,430 --> 00:08:32,039
class which defines the<font color="#E5E5E5"> properties and</font>

144
00:08:28,470 --> 00:08:34,349
various<font color="#E5E5E5"> methods</font><font color="#CCCCCC"> and we can represent</font>

145
00:08:32,039 --> 00:08:36,598
that<font color="#E5E5E5"> and in terms of</font><font color="#CCCCCC"> what's serialized</font>

146
00:08:34,349 --> 00:08:39,750
it's just the<font color="#CCCCCC"> the properties and</font><font color="#E5E5E5"> the</font>

147
00:08:36,599 --> 00:08:43,050
class name<font color="#E5E5E5"> is you know an instance of</font>

148
00:08:39,750 --> 00:08:47,370
<font color="#E5E5E5">that object in</font><font color="#CCCCCC"> a state is represented</font><font color="#E5E5E5"> by</font>

149
00:08:43,049 --> 00:08:49,740
<font color="#E5E5E5">that okay so that's</font><font color="#CCCCCC"> the rough idea of</font>

150
00:08:47,370 --> 00:08:53,430
<font color="#E5E5E5">what serialization</font>

151
00:08:49,740 --> 00:08:55,560
but why is it exploitable<font color="#E5E5E5"> basically that</font>

152
00:08:53,430 --> 00:08:58,109
comes down<font color="#E5E5E5"> to these things called magic</font>

153
00:08:55,560 --> 00:08:59,609
methods<font color="#CCCCCC"> with impunity now there's</font><font color="#E5E5E5"> quite</font>

154
00:08:58,110 --> 00:09:02,070
<font color="#E5E5E5">a lot</font><font color="#CCCCCC"> of them I'm not</font><font color="#E5E5E5"> going to go into</font>

155
00:08:59,610 --> 00:09:08,640
<font color="#CCCCCC">all of them but</font><font color="#E5E5E5"> if I sort of explain</font>

156
00:09:02,070 --> 00:09:10,380
these<font color="#CCCCCC"> four briefly the sort of thing</font>

157
00:09:08,640 --> 00:09:13,080
they<font color="#CCCCCC"> do so the first</font><font color="#E5E5E5"> one we're gonna</font>

158
00:09:10,380 --> 00:09:14,790
<font color="#E5E5E5">look at is wake up and this is the one</font>

159
00:09:13,080 --> 00:09:16,860
method actually<font color="#CCCCCC"> on normally used at any</font>

160
00:09:14,790 --> 00:09:18,990
<font color="#E5E5E5">of the</font><font color="#CCCCCC"> exploits but it's the one</font><font color="#E5E5E5"> that</font>

161
00:09:16,860 --> 00:09:21,360
should start to make us<font color="#CCCCCC"> think they might</font>

162
00:09:18,990 --> 00:09:24,720
<font color="#CCCCCC">be</font><font color="#E5E5E5"> under</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> so whenever we</font>

163
00:09:21,360 --> 00:09:26,730
<font color="#E5E5E5">uncivilized an object if that the cloth</font>

164
00:09:24,720 --> 00:09:29,190
<font color="#E5E5E5">that the object is has a wake up method</font>

165
00:09:26,730 --> 00:09:31,790
<font color="#CCCCCC">to</font><font color="#E5E5E5"> find that's runs that we we're</font>

166
00:09:29,190 --> 00:09:34,290
starting the process of code execution

167
00:09:31,790 --> 00:09:35,880
<font color="#E5E5E5">typically it's basically meant to to</font>

168
00:09:34,290 --> 00:09:39,029
reinitialize those resources that<font color="#CCCCCC"> I</font>

169
00:09:35,880 --> 00:09:40,439
mentioned<font color="#E5E5E5"> couldn't be</font><font color="#CCCCCC"> serialized</font><font color="#E5E5E5"> so for</font>

170
00:09:39,029 --> 00:09:41,790
instance if you see<font color="#CCCCCC"> realize something is</font>

171
00:09:40,440 --> 00:09:44,640
<font color="#CCCCCC">supposed to be connected to a database</font>

172
00:09:41,790 --> 00:09:46,260
<font color="#CCCCCC">that</font><font color="#E5E5E5"> connection will</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> broken when you</font>

173
00:09:44,640 --> 00:09:49,100
sterilize it when you are serialize it

174
00:09:46,260 --> 00:09:52,140
will try and<font color="#E5E5E5"> bring that connection back</font>

175
00:09:49,100 --> 00:09:53,670
and the next one is destruct<font color="#E5E5E5"> which is</font>

176
00:09:52,140 --> 00:09:55,670
basically called by the garbage

177
00:09:53,670 --> 00:09:58,410
collector so when an object<font color="#E5E5E5"> is destroyed</font>

178
00:09:55,670 --> 00:10:01,260
<font color="#E5E5E5">this destruct method is invoked in the</font>

179
00:09:58,410 --> 00:10:04,140
object<font color="#E5E5E5"> you know typically it cleans up</font>

180
00:10:01,260 --> 00:10:05,490
references<font color="#CCCCCC"> one</font><font color="#E5E5E5"> interesting thing it</font>

181
00:10:04,140 --> 00:10:07,800
might do is finish any unfinished

182
00:10:05,490 --> 00:10:12,540
business<font color="#CCCCCC"> so say we had an object</font><font color="#E5E5E5"> that</font>

183
00:10:07,800 --> 00:10:15,060
<font color="#CCCCCC">represents another file stream with as a</font>

184
00:10:12,540 --> 00:10:18,498
property<font color="#E5E5E5"> there might be data in that</font>

185
00:10:15,060 --> 00:10:21,258
<font color="#E5E5E5">buffer</font><font color="#CCCCCC"> and while it's destroying it</font>

186
00:10:18,499 --> 00:10:22,819
right to my<font color="#CCCCCC"> phone so you can imagine if</font>

187
00:10:21,259 --> 00:10:25,339
we could give it<font color="#E5E5E5"> an</font><font color="#CCCCCC"> arbitrary object</font>

188
00:10:22,819 --> 00:10:28,389
<font color="#E5E5E5">data in the buffer in the park of our</font>

189
00:10:25,339 --> 00:10:31,369
choice suddenly we're doing intimacy

190
00:10:28,389 --> 00:10:33,379
<font color="#E5E5E5">okay the</font><font color="#CCCCCC"> next one is</font><font color="#E5E5E5"> to string which</font>

191
00:10:31,369 --> 00:10:34,039
basically happens when we treat an

192
00:10:33,379 --> 00:10:37,219
object

193
00:10:34,039 --> 00:10:38,989
<font color="#CCCCCC">the snoer for a string so the Scimitar</font>

194
00:10:37,219 --> 00:10:41,509
<font color="#CCCCCC">not</font><font color="#E5E5E5"> even if you try and take out an</font>

195
00:10:38,989 --> 00:10:43,399
object<font color="#E5E5E5"> it</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> evoke this method to</font>

196
00:10:41,509 --> 00:10:45,769
convert it to<font color="#E5E5E5"> a string and display</font><font color="#CCCCCC"> that</font>

197
00:10:43,399 --> 00:10:47,959
and this<font color="#E5E5E5"> can get interesting if there is</font>

198
00:10:45,769 --> 00:10:51,979
complex rendering<font color="#E5E5E5"> methods so say we've</font>

199
00:10:47,959 --> 00:10:53,988
got a logic<font color="#CCCCCC"> that represents a page</font><font color="#E5E5E5"> that</font>

200
00:10:51,979 --> 00:10:55,669
might you<font color="#E5E5E5"> know reference a template</font>

201
00:10:53,989 --> 00:10:57,669
something like<font color="#E5E5E5"> that if we can control</font>

202
00:10:55,669 --> 00:11:00,789
<font color="#E5E5E5">where it's looking for that template</font>

203
00:10:57,669 --> 00:11:03,409
<font color="#CCCCCC">then we're doing</font><font color="#E5E5E5"> something interesting</font>

204
00:11:00,789 --> 00:11:05,269
finally look at<font color="#E5E5E5"> which might not be</font>

205
00:11:03,409 --> 00:11:08,869
obvious why it's relevant<font color="#E5E5E5"> now but</font>

206
00:11:05,269 --> 00:11:11,479
hopefully<font color="#CCCCCC"> commonplace</font><font color="#E5E5E5"> thing is this cool</font>

207
00:11:08,869 --> 00:11:14,239
method<font color="#E5E5E5"> which is invoked if we try to</font>

208
00:11:11,479 --> 00:11:15,949
<font color="#E5E5E5">pull an undefined method on an object so</font>

209
00:11:14,239 --> 00:11:17,359
<font color="#CCCCCC">then call</font><font color="#E5E5E5"> the method called foo bar and</font>

210
00:11:15,949 --> 00:11:19,939
that<font color="#CCCCCC"> object</font><font color="#E5E5E5"> but it doesn't have that</font>

211
00:11:17,359 --> 00:11:23,589
<font color="#CCCCCC">method</font><font color="#E5E5E5"> defined it does have a cool</font>

212
00:11:19,939 --> 00:11:23,589
method<font color="#CCCCCC"> it</font><font color="#E5E5E5"> would try</font><font color="#CCCCCC"> and sort catch that</font>

213
00:11:28,419 --> 00:11:35,089
so that's essentially why we can start

214
00:11:32,839 --> 00:11:38,479
to see my big<font color="#CCCCCC"> space</font><font color="#E5E5E5"> but we can start a</font>

215
00:11:35,089 --> 00:11:40,119
sequence of<font color="#CCCCCC"> :</font><font color="#E5E5E5"> but the</font><font color="#CCCCCC"> other stuff I</font>

216
00:11:38,479 --> 00:11:45,229
<font color="#CCCCCC">wanted to talk about</font><font color="#E5E5E5"> is what makes it</font>

217
00:11:40,119 --> 00:11:47,089
particularly exploited so a lot<font color="#CCCCCC"> of</font>

218
00:11:45,229 --> 00:11:48,919
complex<font color="#CCCCCC"> applications</font><font color="#E5E5E5"> basically define</font>

219
00:11:47,089 --> 00:11:50,869
something<font color="#E5E5E5"> called an</font><font color="#CCCCCC"> auto</font><font color="#E5E5E5"> over</font>

220
00:11:48,919 --> 00:11:53,720
so whenever<font color="#CCCCCC"> new trying to access a class</font>

221
00:11:50,869 --> 00:11:56,979
that<font color="#E5E5E5"> it doesn't know about it's going to</font>

222
00:11:53,720 --> 00:11:59,389
go off<font color="#CCCCCC"> and</font><font color="#E5E5E5"> try and load</font><font color="#CCCCCC"> that class</font><font color="#E5E5E5"> bar</font>

223
00:11:56,979 --> 00:12:00,799
<font color="#CCCCCC">you know that's</font><font color="#E5E5E5"> basically how you define</font>

224
00:11:59,389 --> 00:12:01,999
it<font color="#CCCCCC"> but it</font><font color="#E5E5E5"> essentially it means you could</font>

225
00:12:00,799 --> 00:12:04,500
<font color="#CCCCCC">have a lot of different classes</font>

226
00:12:01,999 --> 00:12:06,879
<font color="#E5E5E5">available</font>

227
00:12:04,500 --> 00:12:10,660
the next thing I didn't actually know

228
00:12:06,879 --> 00:12:14,079
what this was called<font color="#CCCCCC"> I draw a technical</font>

229
00:12:10,660 --> 00:12:16,360
explanation<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the value of what this</font>

230
00:12:14,079 --> 00:12:18,489
means<font color="#E5E5E5"> is that any variable</font><font color="#CCCCCC"> warranted a</font>

231
00:12:16,360 --> 00:12:22,500
property<font color="#E5E5E5"> of an object could take any</font>

232
00:12:18,490 --> 00:12:22,500
value so<font color="#CCCCCC"> it could be an object an array</font>

233
00:12:24,480 --> 00:12:28,899
<font color="#E5E5E5">then finally that people don't really</font>

234
00:12:27,279 --> 00:12:31,060
seem to<font color="#E5E5E5"> mention this one but I certainly</font>

235
00:12:28,899 --> 00:12:37,959
<font color="#CCCCCC">need</font><font color="#E5E5E5"> to find out about</font><font color="#CCCCCC"> it it's</font><font color="#E5E5E5"> really</font>

236
00:12:31,060 --> 00:12:40,719
important you might define<font color="#E5E5E5"> a function to</font>

237
00:12:37,959 --> 00:12:42,518
take two<font color="#CCCCCC"> arguments but</font><font color="#E5E5E5"> if someone</font>

238
00:12:40,720 --> 00:12:47,620
invokes it with no arguments<font color="#CCCCCC"> it's just</font>

239
00:12:42,519 --> 00:12:50,290
going<font color="#E5E5E5"> to pass an argument so combining</font>

240
00:12:47,620 --> 00:12:53,110
these two things we start<font color="#E5E5E5"> to see we can</font>

241
00:12:50,290 --> 00:12:55,000
<font color="#CCCCCC">put</font><font color="#E5E5E5"> completely unexpected objects as a</font>

242
00:12:53,110 --> 00:12:57,160
properties to say we've got an invite

243
00:12:55,000 --> 00:12:59,139
<font color="#CCCCCC">they commonly named method like clothes</font>

244
00:12:57,160 --> 00:13:01,180
or<font color="#CCCCCC"> something</font><font color="#E5E5E5"> might be trying to close</font><font color="#CCCCCC"> a</font>

245
00:12:59,139 --> 00:13:06,879
file<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we have something completely</font>

246
00:13:01,180 --> 00:13:08,609
<font color="#CCCCCC">different there okay so I think we're</font>

247
00:13:06,879 --> 00:13:12,490
ready<font color="#CCCCCC"> to</font><font color="#E5E5E5"> start looking</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> the exploits</font>

248
00:13:08,610 --> 00:13:14,030
<font color="#E5E5E5">and the first one sorry rather this is</font>

249
00:13:12,490 --> 00:13:16,520
<font color="#CCCCCC">the basic</font><font color="#E5E5E5"> method</font>

250
00:13:14,030 --> 00:13:19,939
so this is pretty much what<font color="#CCCCCC"> Stefan SSN</font>

251
00:13:16,520 --> 00:13:21,770
<font color="#E5E5E5">and it's in his paper we start off</font><font color="#CCCCCC"> by</font>

252
00:13:19,940 --> 00:13:25,130
finding<font color="#CCCCCC"> somewhere we control</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> takes</font>

253
00:13:21,770 --> 00:13:28,010
<font color="#CCCCCC">the density realized then we work out</font>

254
00:13:25,130 --> 00:13:29,900
what<font color="#E5E5E5"> classes</font><font color="#CCCCCC"> are accessible to us</font><font color="#E5E5E5"> we try</font>

255
00:13:28,010 --> 00:13:33,050
and<font color="#E5E5E5"> find the magic method to kick off</font>

256
00:13:29,900 --> 00:13:34,790
the set of code we can run and then we

257
00:13:33,050 --> 00:13:37,300
<font color="#E5E5E5">basically try and find a way of getting</font>

258
00:13:34,790 --> 00:13:40,790
<font color="#E5E5E5">from</font><font color="#CCCCCC"> that point to</font><font color="#E5E5E5"> something interesting</font>

259
00:13:37,300 --> 00:13:48,319
<font color="#CCCCCC">now when he sort</font><font color="#E5E5E5"> of ran through these it</font>

260
00:13:40,790 --> 00:13:49,579
was very much like<font color="#E5E5E5"> step</font><font color="#CCCCCC"> one so the</font><font color="#E5E5E5"> first</font>

261
00:13:48,320 --> 00:13:51,650
vulnerability<font color="#CCCCCC"> were going to</font><font color="#E5E5E5"> look at I</font>

262
00:13:49,580 --> 00:13:53,600
mentioned<font color="#E5E5E5"> right</font><font color="#CCCCCC"> at the</font><font color="#E5E5E5"> start I was</font><font color="#CCCCCC"> just</font>

263
00:13:51,650 --> 00:13:55,819
on a test that<font color="#E5E5E5"> to the changelog it sent</font>

264
00:13:53,600 --> 00:13:57,830
me<font color="#CCCCCC"> to this paper I saw and understood</font>

265
00:13:55,820 --> 00:13:59,150
some of<font color="#E5E5E5"> that basic stuff I've gone</font>

266
00:13:57,830 --> 00:14:03,190
through<font color="#E5E5E5"> there and thought right I'm</font>

267
00:13:59,150 --> 00:14:05,360
<font color="#E5E5E5">ready to exploit so find an entry point</font>

268
00:14:03,190 --> 00:14:09,790
<font color="#E5E5E5">from the change like it was fairly</font>

269
00:14:05,360 --> 00:14:09,790
obvious<font color="#E5E5E5"> where it was something</font>

270
00:14:10,480 --> 00:14:16,660
okay so what<font color="#CCCCCC"> classes</font><font color="#E5E5E5"> can't we use within</font>

271
00:14:13,750 --> 00:14:18,399
our<font color="#E5E5E5"> explain</font><font color="#CCCCCC"> SilverStripe</font><font color="#E5E5E5"> just haven't</font>

272
00:14:16,660 --> 00:14:19,899
<font color="#CCCCCC">also</font><font color="#E5E5E5"> though they're defined</font><font color="#CCCCCC"> I'm not</font>

273
00:14:18,399 --> 00:14:22,750
<font color="#CCCCCC">going to go into all</font><font color="#E5E5E5"> the details but</font>

274
00:14:19,899 --> 00:14:25,350
<font color="#CCCCCC">basically uses a manifest based system</font>

275
00:14:22,750 --> 00:14:28,180
<font color="#CCCCCC">so there's a separate PHP exit</font>

276
00:14:25,350 --> 00:14:30,100
executable that<font color="#E5E5E5"> constructs a big list of</font>

277
00:14:28,180 --> 00:14:32,469
<font color="#E5E5E5">all the classes</font><font color="#CCCCCC"> within the codebase and</font>

278
00:14:30,100 --> 00:14:34,120
<font color="#CCCCCC">what file they're in and then when we</font>

279
00:14:32,470 --> 00:14:35,440
going<font color="#E5E5E5"> to try and access the class that</font>

280
00:14:34,120 --> 00:14:37,180
it doesn't know about<font color="#CCCCCC"> it just checks</font>

281
00:14:35,440 --> 00:14:39,190
<font color="#E5E5E5">this list and those</font><font color="#CCCCCC"> upper class so</font>

282
00:14:37,180 --> 00:14:41,589
that's pretty good for a space yes we

283
00:14:39,190 --> 00:14:44,769
can get<font color="#E5E5E5"> to nearly every class in the</font>

284
00:14:41,589 --> 00:14:47,470
<font color="#E5E5E5">codebase okay so then we need to find</font>

285
00:14:44,769 --> 00:14:48,490
<font color="#CCCCCC">starting points</font><font color="#E5E5E5"> now I mentioned to</font>

286
00:14:47,470 --> 00:14:52,630
string earlier

287
00:14:48,490 --> 00:14:54,459
I'm<font color="#E5E5E5"> going to ignore</font><font color="#CCCCCC"> it for now this it</font>

288
00:14:52,630 --> 00:14:55,899
<font color="#E5E5E5">wasn't clear to me at</font><font color="#CCCCCC"> first that</font><font color="#E5E5E5"> we</font>

289
00:14:54,459 --> 00:14:59,380
should be<font color="#CCCCCC"> looking there</font><font color="#E5E5E5"> so we can only</font>

290
00:14:55,899 --> 00:15:01,769
destruct and<font color="#E5E5E5"> wake up looking through the</font>

291
00:14:59,380 --> 00:15:01,769
<font color="#CCCCCC">codebase</font>

292
00:15:06,329 --> 00:15:09,910
normally goes through each of<font color="#E5E5E5"> them but I</font>

293
00:15:08,470 --> 00:15:12,220
thought I'd go<font color="#E5E5E5"> through a couple of the</font>

294
00:15:09,910 --> 00:15:14,990
<font color="#E5E5E5">ones that we reject sort to show you how</font>

295
00:15:12,220 --> 00:15:18,529
easily we were

296
00:15:14,990 --> 00:15:20,870
so the first one is MySQL<font color="#CCCCCC"> pretty basic</font>

297
00:15:18,529 --> 00:15:23,029
<font color="#E5E5E5">that's taking a</font><font color="#CCCCCC"> property of our object</font>

298
00:15:20,870 --> 00:15:24,500
<font color="#E5E5E5">checking if it's a resource which it</font>

299
00:15:23,029 --> 00:15:26,630
couldn't<font color="#CCCCCC"> possibly because we can't</font>

300
00:15:24,500 --> 00:15:29,630
serialize a resource and then doing

301
00:15:26,630 --> 00:15:32,660
something<font color="#CCCCCC"> boiling in a way</font><font color="#E5E5E5"> the second</font>

302
00:15:29,630 --> 00:15:34,220
one<font color="#E5E5E5"> CSB</font><font color="#CCCCCC"> parser</font><font color="#E5E5E5"> we look at the destruct</font>

303
00:15:32,660 --> 00:15:35,959
method that could be interesting because

304
00:15:34,220 --> 00:15:38,810
it's calling a function called<font color="#CCCCCC"> closed</font>

305
00:15:35,959 --> 00:15:40,880
file<font color="#CCCCCC"> or</font><font color="#E5E5E5"> we go and look at that and it</font>

306
00:15:38,810 --> 00:15:43,660
doesn't<font color="#CCCCCC"> actually really</font><font color="#E5E5E5"> do anything</font>

307
00:15:40,880 --> 00:15:43,660
close

308
00:15:47,640 --> 00:15:53,650
well we actually do mr. jumping<font color="#CCCCCC"> fast a</font>

309
00:15:51,460 --> 00:15:56,860
few more is this one which is<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the</font>

310
00:15:53,650 --> 00:16:00,069
<font color="#E5E5E5">class</font><font color="#CCCCCC"> presented love now this takes the</font>

311
00:15:56,860 --> 00:16:03,850
<font color="#E5E5E5">property writers which is essentially an</font>

312
00:16:00,070 --> 00:16:05,830
array of writers iterates through each

313
00:16:03,850 --> 00:16:08,260
one and<font color="#E5E5E5"> invokes a function called</font><font color="#CCCCCC"> shut</font>

314
00:16:05,830 --> 00:16:13,990
<font color="#CCCCCC">down now it's pretty important to</font><font color="#E5E5E5"> say</font>

315
00:16:08,260 --> 00:16:15,700
that the exploits<font color="#CCCCCC"> Vanessa yoo-hoo a lot</font>

316
00:16:13,990 --> 00:16:17,650
of<font color="#E5E5E5"> the ones he demonstrated started with</font>

317
00:16:15,700 --> 00:16:20,850
this very<font color="#E5E5E5"> same class and very same</font>

318
00:16:17,650 --> 00:16:22,449
function so<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> what we've chosen</font>

319
00:16:20,850 --> 00:16:24,520
<font color="#CCCCCC">zoologist Harvey</font>

320
00:16:22,450 --> 00:16:27,250
<font color="#E5E5E5">okay so where can we get to from there</font>

321
00:16:24,520 --> 00:16:29,050
like<font color="#E5E5E5"> I mentioned his approach not his</font>

322
00:16:27,250 --> 00:16:30,670
approach but sort of simplifying it was

323
00:16:29,050 --> 00:16:31,540
very much<font color="#CCCCCC"> where can</font><font color="#E5E5E5"> we get to in the</font>

324
00:16:30,670 --> 00:16:34,000
<font color="#CCCCCC">next step</font>

325
00:16:31,540 --> 00:16:36,579
so there's five<font color="#CCCCCC"> shutdown functions that</font>

326
00:16:34,000 --> 00:16:39,700
<font color="#E5E5E5">need the exact same five that he went</font>

327
00:16:36,580 --> 00:16:42,280
<font color="#E5E5E5">through</font><font color="#CCCCCC"> in his job and he</font><font color="#E5E5E5"> basically said</font>

328
00:16:39,700 --> 00:16:44,500
they were all<font color="#E5E5E5"> useless except zone lot</font><font color="#CCCCCC"> of</font>

329
00:16:42,280 --> 00:16:46,209
right around<font color="#CCCCCC"> now immediately that we've</font>

330
00:16:44,500 --> 00:16:48,580
got that<font color="#E5E5E5"> basically we</font><font color="#CCCCCC"> didn't send</font><font color="#E5E5E5"> our</font>

331
00:16:46,210 --> 00:16:51,850
between<font color="#CCCCCC"> emails which is interesting but</font>

332
00:16:48,580 --> 00:16:53,710
<font color="#CCCCCC">not really</font><font color="#E5E5E5"> where we</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> get to so he</font>

333
00:16:51,850 --> 00:16:55,750
then<font color="#E5E5E5"> showed that basically this would</font>

334
00:16:53,710 --> 00:16:58,060
<font color="#E5E5E5">invoke a method called render on one of</font>

335
00:16:55,750 --> 00:17:00,790
his properties<font color="#CCCCCC"> and he had seven classes</font>

336
00:16:58,060 --> 00:17:04,770
with render methods rejected six of them

337
00:17:00,790 --> 00:17:04,770
one of<font color="#E5E5E5"> them did something</font><font color="#CCCCCC"> interesting</font>

338
00:17:05,700 --> 00:17:09,199
there<font color="#CCCCCC"> was only one object with a render</font>

339
00:17:08,380 --> 00:17:14,359
method

340
00:17:09,199 --> 00:17:17,480
and it didn't do interesting<font color="#E5E5E5"> so you know</font>

341
00:17:14,358 --> 00:17:19,128
it seemed like<font color="#CCCCCC"> a dead end basically</font><font color="#E5E5E5"> so I</font>

342
00:17:17,480 --> 00:17:21,980
went back went through all those

343
00:17:19,128 --> 00:17:23,799
<font color="#CCCCCC">distracts all these methods</font><font color="#E5E5E5"> basically</font>

344
00:17:21,980 --> 00:17:26,959
stayed up late<font color="#E5E5E5"> into the night thinking</font>

345
00:17:23,799 --> 00:17:29,210
<font color="#E5E5E5">changed or</font><font color="#CCCCCC"> silicon execution even worth</font>

346
00:17:26,959 --> 00:17:32,659
where is it up and send it stupid email

347
00:17:29,210 --> 00:17:36,859
but that's not what<font color="#E5E5E5"> so that's pretty</font>

348
00:17:32,659 --> 00:17:38,720
much what<font color="#CCCCCC"> I went to bed that night you</font>

349
00:17:36,859 --> 00:17:40,668
know I had a good night's sleep so<font color="#E5E5E5"> fresh</font>

350
00:17:38,720 --> 00:17:42,859
<font color="#E5E5E5">perspective in the morning step back and</font>

351
00:17:40,669 --> 00:17:45,379
reread these papers and try to

352
00:17:42,859 --> 00:17:47,299
understand it<font color="#CCCCCC"> what</font><font color="#E5E5E5"> medicine and what</font>

353
00:17:45,379 --> 00:17:49,309
basically<font color="#CCCCCC"> ministers that</font><font color="#E5E5E5"> we shouldn't I</font>

354
00:17:47,299 --> 00:17:51,350
believe<font color="#CCCCCC"> that you know what we're</font>

355
00:17:49,309 --> 00:17:54,320
<font color="#E5E5E5">involved in directly but if we trigger</font>

356
00:17:51,350 --> 00:17:55,998
any<font color="#E5E5E5"> of those magic methods so we don't</font>

357
00:17:54,320 --> 00:17:59,210
<font color="#E5E5E5">only need to look at the object</font><font color="#CCCCCC"> for the</font>

358
00:17:55,999 --> 00:18:01,669
shutdown method we need to look at any

359
00:17:59,210 --> 00:18:04,480
objects but<font color="#E5E5E5"> the</font><font color="#CCCCCC"> core</font><font color="#E5E5E5"> method which we</font>

360
00:18:01,669 --> 00:18:06,499
could invoke by telling it<font color="#CCCCCC"> to shut</font><font color="#E5E5E5"> down</font>

361
00:18:04,480 --> 00:18:08,539
<font color="#E5E5E5">again I'm not going to step through</font><font color="#CCCCCC"> all</font>

362
00:18:06,499 --> 00:18:09,919
of them there's<font color="#CCCCCC"> one I want to show you</font>

363
00:18:08,539 --> 00:18:13,789
quickly because I'm going<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about</font>

364
00:18:09,919 --> 00:18:15,769
<font color="#E5E5E5">it later and</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is basically</font><font color="#CCCCCC"> I'm</font>

365
00:18:13,789 --> 00:18:18,080
<font color="#E5E5E5">really compact that I know this is gonna</font>

366
00:18:15,769 --> 00:18:20,520
<font color="#E5E5E5">be a bit sort of circumstantial</font><font color="#CCCCCC"> but</font>

367
00:18:18,080 --> 00:18:23,610
we're gonna see

368
00:18:20,520 --> 00:18:26,820
so this<font color="#E5E5E5"> property's the method that's</font>

369
00:18:23,610 --> 00:18:29,010
<font color="#E5E5E5">been invoked on to the other object</font><font color="#CCCCCC"> say</font>

370
00:18:26,820 --> 00:18:31,080
<font color="#E5E5E5">on this case the form property is</font>

371
00:18:29,010 --> 00:18:33,809
function with the same name support for

372
00:18:31,080 --> 00:18:35,309
the same<font color="#E5E5E5"> argument</font><font color="#CCCCCC"> I saw this</font><font color="#E5E5E5"> a ton of</font>

373
00:18:33,809 --> 00:18:44,040
times<font color="#E5E5E5"> and didn't think you could ever be</font>

374
00:18:35,309 --> 00:18:46,590
<font color="#CCCCCC">because why wouldn't we just so this is</font>

375
00:18:44,040 --> 00:18:48,600
the one we're actually going to<font color="#E5E5E5"> use now</font>

376
00:18:46,590 --> 00:18:51,870
what this<font color="#E5E5E5"> does is</font><font color="#CCCCCC"> it takes the method</font>

377
00:18:48,600 --> 00:18:53,850
name<font color="#E5E5E5"> converts into uppercase</font><font color="#CCCCCC"> and then it</font>

378
00:18:51,870 --> 00:18:56,149
searches one of his properties<font color="#CCCCCC"> to see if</font>

379
00:18:53,850 --> 00:18:58,080
it's supposed<font color="#E5E5E5"> to handle that method</font><font color="#CCCCCC"> so</font>

380
00:18:56,150 --> 00:19:00,780
<font color="#CCCCCC">actually that method could have any</font>

381
00:18:58,080 --> 00:19:03,000
names as long as we set up this

382
00:19:00,780 --> 00:19:05,040
<font color="#E5E5E5">priorities property to cover that method</font>

383
00:19:03,000 --> 00:19:07,679
it's<font color="#E5E5E5"> gonna catch it and then it goes</font>

384
00:19:05,040 --> 00:19:10,260
ahead and<font color="#CCCCCC"> lo something now in terms</font><font color="#E5E5E5"> of</font>

385
00:19:07,679 --> 00:19:12,330
interesting stuff<font color="#E5E5E5"> we could do you know</font>

386
00:19:10,260 --> 00:19:15,120
logging something<font color="#E5E5E5"> to presumably a</font><font color="#CCCCCC"> file</font>

387
00:19:12,330 --> 00:19:16,879
<font color="#E5E5E5">sounds pretty interesting so sort of as</font>

388
00:19:15,120 --> 00:19:20,729
I<font color="#CCCCCC"> mentioned this is</font><font color="#E5E5E5"> really really useful</font>

389
00:19:16,880 --> 00:19:22,760
<font color="#E5E5E5">because</font><font color="#CCCCCC"> of what triggers it so any</font>

390
00:19:20,730 --> 00:19:26,460
method on any property<font color="#CCCCCC"> of an object</font>

391
00:19:22,760 --> 00:19:28,320
could trigger this and so basically<font color="#E5E5E5"> once</font>

392
00:19:26,460 --> 00:19:30,200
we<font color="#E5E5E5"> know we've</font><font color="#CCCCCC"> got one of these</font><font color="#E5E5E5"> we're</font>

393
00:19:28,320 --> 00:19:32,879
looking for those destructs or wake up

394
00:19:30,200 --> 00:19:36,870
so<font color="#E5E5E5"> basically anything that invokes a</font>

395
00:19:32,880 --> 00:19:38,610
method<font color="#CCCCCC"> on one of</font><font color="#E5E5E5"> its properties so</font>

396
00:19:36,870 --> 00:19:41,790
looking a bit further into<font color="#CCCCCC"> what actually</font>

397
00:19:38,610 --> 00:19:43,500
does this<font color="#E5E5E5"> it calls the</font><font color="#CCCCCC"> log</font><font color="#E5E5E5"> method from</font>

398
00:19:41,790 --> 00:19:45,960
there<font color="#CCCCCC"> basically this construction</font><font color="#E5E5E5"> I'm</font>

399
00:19:43,500 --> 00:19:49,440
ready with the details of<font color="#E5E5E5"> the event that</font>

400
00:19:45,960 --> 00:19:51,030
it's morning<font color="#CCCCCC"> now what's handy for us is</font>

401
00:19:49,440 --> 00:19:52,620
it you know<font color="#E5E5E5"> take stuff like the</font>

402
00:19:51,030 --> 00:19:55,290
parameters that<font color="#CCCCCC"> are part of it</font><font color="#E5E5E5"> it</font>

403
00:19:52,620 --> 00:19:57,090
calculates<font color="#E5E5E5"> a</font><font color="#CCCCCC"> timestamp but it emerges</font>

404
00:19:55,290 --> 00:19:59,190
those with one of the properties so

405
00:19:57,090 --> 00:20:00,540
actually we could overwrite and I think

406
00:19:59,190 --> 00:20:03,240
that was passed to the function

407
00:20:00,540 --> 00:20:05,899
by<font color="#E5E5E5"> saying this extras prophecy then goes</font>

408
00:20:03,240 --> 00:20:09,000
ahead and invokes the right methodology

409
00:20:05,900 --> 00:20:11,700
<font color="#CCCCCC">now I don't want to sort</font><font color="#E5E5E5"> of jump through</font>

410
00:20:09,000 --> 00:20:14,640
those and<font color="#E5E5E5"> those of code so we go</font>

411
00:20:11,700 --> 00:20:18,420
<font color="#CCCCCC">straight</font><font color="#E5E5E5"> to basically this is the</font><font color="#CCCCCC"> expo</font>

412
00:20:14,640 --> 00:20:20,070
<font color="#CCCCCC">that we</font><font color="#E5E5E5"> built so the initial object that</font>

413
00:20:18,420 --> 00:20:22,950
we supply<font color="#E5E5E5"> is one of these then</font><font color="#CCCCCC"> robes</font>

414
00:20:20,070 --> 00:20:27,389
with a single writer<font color="#E5E5E5"> so when this is</font>

415
00:20:22,950 --> 00:20:31,500
<font color="#E5E5E5">destroying</font><font color="#CCCCCC"> it's going both now we've</font>

416
00:20:27,390 --> 00:20:34,170
said these this priorities property<font color="#E5E5E5"> to</font>

417
00:20:31,500 --> 00:20:36,660
basically say yes<font color="#CCCCCC"> can't shut down we've</font>

418
00:20:34,170 --> 00:20:39,450
set the<font color="#CCCCCC"> message for what to put within</font>

419
00:20:36,660 --> 00:20:41,340
<font color="#E5E5E5">the</font><font color="#CCCCCC"> nagas entry and you know I haven't</font>

420
00:20:39,450 --> 00:20:43,350
<font color="#E5E5E5">spoken about this class but it's exactly</font>

421
00:20:41,340 --> 00:20:45,659
intended a lot of stuff to the file so

422
00:20:43,350 --> 00:20:47,370
basically we're<font color="#CCCCCC"> just telling</font><font color="#E5E5E5"> you to buy</font>

423
00:20:45,660 --> 00:20:50,030
that message to<font color="#E5E5E5"> a file so</font><font color="#CCCCCC"> go ahead</font><font color="#E5E5E5"> and</font>

424
00:20:47,370 --> 00:20:54,780
<font color="#CCCCCC">try that</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> the local machine</font><font color="#E5E5E5"> and great</font>

425
00:20:50,030 --> 00:20:57,360
<font color="#CCCCCC">writing text we think we're</font><font color="#E5E5E5"> just moments</font>

426
00:20:54,780 --> 00:20:59,520
away<font color="#E5E5E5"> basically from getting shot so I</font>

427
00:20:57,360 --> 00:21:05,699
went ahead<font color="#E5E5E5"> and changed that just some</font>

428
00:20:59,520 --> 00:21:07,860
PHP code to execute for<font color="#CCCCCC"> a</font><font color="#E5E5E5"> three so it</font>

429
00:21:05,700 --> 00:21:11,900
turns out that basically<font color="#E5E5E5"> they were using</font>

430
00:21:07,860 --> 00:21:15,060
HT access files to prevent the execution

431
00:21:11,900 --> 00:21:15,600
<font color="#E5E5E5">now at this point</font><font color="#CCCCCC"> I spent way too much</font>

432
00:21:15,060 --> 00:21:20,340
time

433
00:21:15,600 --> 00:21:23,039
that's<font color="#E5E5E5"> probably</font><font color="#CCCCCC"> cause</font><font color="#E5E5E5"> over to etc and</font>

434
00:21:20,340 --> 00:21:28,620
I've never<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> completed this but</font><font color="#E5E5E5"> I</font>

435
00:21:23,039 --> 00:21:30,299
was hoping<font color="#E5E5E5"> to do it for this so this is</font>

436
00:21:28,620 --> 00:21:32,870
<font color="#E5E5E5">going to be a bit</font><font color="#CCCCCC"> hand way to be but</font>

437
00:21:30,299 --> 00:21:35,160
there is a way to do it

438
00:21:32,870 --> 00:21:37,770
basically<font color="#CCCCCC"> peer to peer as this mechanism</font>

439
00:21:35,160 --> 00:21:42,690
<font color="#CCCCCC">or filters</font><font color="#E5E5E5"> that you can use for files</font>

440
00:21:37,770 --> 00:21:45,750
and<font color="#CCCCCC"> you can for instance out but basics</font>

441
00:21:42,690 --> 00:21:53,460
before<font color="#E5E5E5"> to Konya</font><font color="#CCCCCC"> to know if these nice</font>

442
00:21:45,750 --> 00:21:56,880
and ignores what we do basically<font color="#E5E5E5"> take</font>

443
00:21:53,460 --> 00:21:59,309
this repeatedly<font color="#E5E5E5"> and eventually it</font>

444
00:21:56,880 --> 00:22:02,280
swallows up all the characters<font color="#CCCCCC"> that we</font>

445
00:21:59,309 --> 00:22:06,860
don't control<font color="#CCCCCC"> that they turn it</font><font color="#E5E5E5"> into any</font>

446
00:22:02,280 --> 00:22:06,860
<font color="#CCCCCC">valid characters</font><font color="#E5E5E5"> well we've got the</font>

447
00:22:09,950 --> 00:22:15,450
<font color="#CCCCCC">technology thoughts that are between</font>

448
00:22:12,179 --> 00:22:20,429
occasionally you know quite a new

449
00:22:15,450 --> 00:22:22,169
htaccess file<font color="#CCCCCC"> that will remain so I'm</font>

450
00:22:20,429 --> 00:22:23,970
<font color="#E5E5E5">afraid that's where the first one</font>

451
00:22:22,169 --> 00:22:25,380
finishes but the next two are hopefully

452
00:22:23,970 --> 00:22:26,669
much more interesting I<font color="#CCCCCC"> just wanted to</font>

453
00:22:25,380 --> 00:22:29,190
go<font color="#CCCCCC"> through that</font><font color="#E5E5E5"> one because it's</font><font color="#CCCCCC"> the</font>

454
00:22:26,669 --> 00:22:32,820
first<font color="#E5E5E5"> time I came across the issue so</font>

455
00:22:29,190 --> 00:22:35,350
this is I<font color="#E5E5E5"> think to</font><font color="#CCCCCC"> be honest it's my</font>

456
00:22:32,820 --> 00:22:36,939
favorite web application

457
00:22:35,350 --> 00:22:40,449
<font color="#E5E5E5">I guess that sounds</font><font color="#CCCCCC"> a bit weird</font>

458
00:22:36,940 --> 00:22:42,700
hopefully this isn't<font color="#E5E5E5"> that</font><font color="#CCCCCC"> strange place</font>

459
00:22:40,450 --> 00:22:44,950
that's<font color="#CCCCCC"> favored so I'm not going</font><font color="#E5E5E5"> to be</font>

460
00:22:42,700 --> 00:22:48,270
able<font color="#E5E5E5"> to go into the full</font><font color="#CCCCCC"> teaser ability</font>

461
00:22:44,950 --> 00:22:51,820
because it's quite complicated so

462
00:22:48,270 --> 00:22:54,820
<font color="#CCCCCC">finding an energy point</font><font color="#E5E5E5"> basically a</font>

463
00:22:51,820 --> 00:22:58,289
security issue with<font color="#E5E5E5"> MySQL that they</font>

464
00:22:54,820 --> 00:23:02,639
haven't<font color="#E5E5E5"> recognized as a security issue</font>

465
00:22:58,289 --> 00:23:06,640
if you set<font color="#CCCCCC"> up a table</font><font color="#E5E5E5"> to use the utf-8</font>

466
00:23:02,640 --> 00:23:09,820
character<font color="#CCCCCC"> set it doesn't handle for my</font>

467
00:23:06,640 --> 00:23:16,240
characters properly it's quite similar

468
00:23:09,820 --> 00:23:18,939
<font color="#CCCCCC">to like denial by poisoning attack so if</font>

469
00:23:16,240 --> 00:23:21,549
we try<font color="#CCCCCC"> and</font><font color="#E5E5E5"> set a</font><font color="#CCCCCC"> value</font><font color="#E5E5E5"> to through and</font>

470
00:23:18,940 --> 00:23:24,370
then one of these characters<font color="#CCCCCC"> bar it</font>

471
00:23:21,549 --> 00:23:26,020
turns into<font color="#CCCCCC"> just food now it wouldn't</font>

472
00:23:24,370 --> 00:23:27,600
<font color="#E5E5E5">occur to</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> you know it occurred to me</font>

473
00:23:26,020 --> 00:23:31,600
that might be relevant<font color="#E5E5E5"> to</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> issues</font>

474
00:23:27,600 --> 00:23:33,399
<font color="#E5E5E5">but</font><font color="#CCCCCC"> certainly not this one so this guy's</font>

475
00:23:31,600 --> 00:23:35,530
<font color="#CCCCCC">Hornberger if and</font><font color="#E5E5E5"> basically</font><font color="#CCCCCC"> had an</font>

476
00:23:33,400 --> 00:23:37,780
amazing insight some<font color="#E5E5E5"> intern was a</font>

477
00:23:35,530 --> 00:23:41,428
wordpress and figured<font color="#E5E5E5"> out that we could</font>

478
00:23:37,780 --> 00:23:41,428
abuse<font color="#E5E5E5"> this to trigger on</font>

479
00:23:43,430 --> 00:23:47,580
they say the next<font color="#E5E5E5"> step</font><font color="#CCCCCC"> is to look at</font>

480
00:23:45,900 --> 00:23:50,490
what classes are accessible if there's

481
00:23:47,580 --> 00:23:52,439
an also know that we can get<font color="#E5E5E5"> to them in</font>

482
00:23:50,490 --> 00:23:54,750
<font color="#CCCCCC">WordPress there's no water</font><font color="#E5E5E5"> notice that</font>

483
00:23:52,440 --> 00:23:58,020
<font color="#E5E5E5">we're extremely limited in what classes</font>

484
00:23:54,750 --> 00:24:00,960
we could use so the next thing is to<font color="#E5E5E5"> go</font>

485
00:23:58,020 --> 00:24:03,330
through<font color="#E5E5E5"> these starting points now this</font>

486
00:24:00,960 --> 00:24:05,100
is where we have<font color="#CCCCCC"> to use - straining as</font>

487
00:24:03,330 --> 00:24:06,840
<font color="#E5E5E5">example so</font><font color="#CCCCCC"> sort to make the point that</font>

488
00:24:05,100 --> 00:24:08,610
we should<font color="#E5E5E5"> be checking that method as</font>

489
00:24:06,840 --> 00:24:11,040
well<font color="#E5E5E5"> if you think about the sort of data</font>

490
00:24:08,610 --> 00:24:12,990
<font color="#E5E5E5">that's given the other serialised it's</font>

491
00:24:11,040 --> 00:24:17,129
almost guaranteed<font color="#CCCCCC"> to treat something is</font>

492
00:24:12,990 --> 00:24:18,810
<font color="#E5E5E5">this true</font><font color="#CCCCCC"> okay so we've basically only</font>

493
00:24:17,130 --> 00:24:25,530
<font color="#E5E5E5">got three methods that we could possibly</font>

494
00:24:18,810 --> 00:24:28,200
<font color="#CCCCCC">use</font><font color="#E5E5E5"> there's two districts and then</font>

495
00:24:25,530 --> 00:24:31,379
there's this one<font color="#E5E5E5"> complex</font><font color="#CCCCCC"> two string</font>

496
00:24:28,200 --> 00:24:33,720
method<font color="#E5E5E5"> now this is what I was talking</font>

497
00:24:31,380 --> 00:24:36,240
<font color="#CCCCCC">about you</font><font color="#E5E5E5"> know going next steps next</font>

498
00:24:33,720 --> 00:24:39,150
steps<font color="#E5E5E5"> next steps here we can take a bit</font>

499
00:24:36,240 --> 00:24:41,730
of<font color="#E5E5E5"> a different approach so we're</font>

500
00:24:39,150 --> 00:24:45,450
basically faced with this<font color="#E5E5E5"> complex set of</font>

501
00:24:41,730 --> 00:24:48,780
possible<font color="#CCCCCC"> places we check you through all</font>

502
00:24:45,450 --> 00:24:51,360
of those is<font color="#CCCCCC"> going to take an age but</font>

503
00:24:48,780 --> 00:24:53,520
what if we<font color="#CCCCCC"> identify where we want</font><font color="#E5E5E5"> to get</font>

504
00:24:51,360 --> 00:24:56,129
to<font color="#E5E5E5"> then we identify some useful piece of</font>

505
00:24:53,520 --> 00:24:58,320
<font color="#E5E5E5">code</font><font color="#CCCCCC"> that we could target</font><font color="#E5E5E5"> then suddenly</font>

506
00:24:56,130 --> 00:25:02,150
it's quite an easy<font color="#E5E5E5"> problem to solve and</font>

507
00:24:58,320 --> 00:25:05,100
similar to some<font color="#E5E5E5"> of those static analysis</font>

508
00:25:02,150 --> 00:25:07,910
so<font color="#E5E5E5"> okay can you know can we find</font>

509
00:25:05,100 --> 00:25:11,250
<font color="#E5E5E5">something useful so ignore the exit code</font>

510
00:25:07,910 --> 00:25:14,600
and looking at the common is there

511
00:25:11,250 --> 00:25:14,600
anything that<font color="#E5E5E5"> sort of stands out</font>

512
00:25:15,430 --> 00:25:21,150
Namie<font color="#E5E5E5"> more interesting than just</font>

513
00:25:17,470 --> 00:25:21,150
displaying the<font color="#E5E5E5"> name of the thing</font>

514
00:25:31,409 --> 00:25:36,010
well it's certainly<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> be more</font>

515
00:25:33,610 --> 00:25:38,020
<font color="#CCCCCC">dynamic than</font><font color="#E5E5E5"> just displaying a fixed</font>

516
00:25:36,010 --> 00:25:39,940
value<font color="#CCCCCC"> so I didn't get there straight</font>

517
00:25:38,020 --> 00:25:41,620
<font color="#E5E5E5">away but it shouldn't be</font><font color="#CCCCCC"> surprising</font><font color="#E5E5E5"> that</font>

518
00:25:39,940 --> 00:25:44,049
I<font color="#E5E5E5"> ended up looking at a classical</font>

519
00:25:41,620 --> 00:25:46,539
translations<font color="#E5E5E5"> and that has a very</font>

520
00:25:44,049 --> 00:25:48,730
interesting function because it's for

521
00:25:46,539 --> 00:25:51,908
<font color="#E5E5E5">dynamically creating a function to deal</font>

522
00:25:48,730 --> 00:25:55,780
with pluralization<font color="#E5E5E5"> this create function</font>

523
00:25:51,909 --> 00:26:00,390
function is quite similar<font color="#E5E5E5"> to the vowel</font>

524
00:25:55,780 --> 00:26:00,389
so basically we<font color="#CCCCCC"> can feed code into there</font>

525
00:26:00,630 --> 00:26:09,070
so basically<font color="#E5E5E5"> we start</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> that end</font>

526
00:26:03,820 --> 00:26:14,020
<font color="#E5E5E5">point and work our</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> back to</font><font color="#CCCCCC"> the back</font>

527
00:26:09,070 --> 00:26:16,840
we read from<font color="#CCCCCC"> a file we go back and see</font>

528
00:26:14,020 --> 00:26:20,970
we can control that<font color="#E5E5E5"> file you know</font>

529
00:26:16,840 --> 00:26:23,139
looking at<font color="#CCCCCC"> what it could be HTTP or</font>

530
00:26:20,970 --> 00:26:25,929
<font color="#CCCCCC">InFocus I think the function call</font><font color="#E5E5E5"> is</font>

531
00:26:23,140 --> 00:26:28,659
<font color="#CCCCCC">readable</font><font color="#E5E5E5"> which won't accept that HTTP</font>

532
00:26:25,929 --> 00:26:31,419
URL but it will accept an FTP so we

533
00:26:28,659 --> 00:26:34,030
could host this<font color="#CCCCCC"> language file externally</font>

534
00:26:31,419 --> 00:26:37,390
and just point to it<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then going</font>

535
00:26:34,030 --> 00:26:39,610
further back<font color="#CCCCCC"> we need to have an actual</font>

536
00:26:37,390 --> 00:26:42,130
<font color="#E5E5E5">name for</font><font color="#CCCCCC"> it to try and translate</font><font color="#E5E5E5"> and we</font>

537
00:26:39,610 --> 00:26:45,639
need to tell that<font color="#CCCCCC"> that name is</font><font color="#E5E5E5"> where the</font>

538
00:26:42,130 --> 00:26:47,650
<font color="#E5E5E5">text Amane that it doesn't recognize so</font>

539
00:26:45,640 --> 00:26:47,980
this is the<font color="#CCCCCC"> exploit it's quite simple</font>

540
00:26:47,650 --> 00:26:51,030
really

541
00:26:47,980 --> 00:26:53,820
we've got the WP theme

542
00:26:51,030 --> 00:26:56,160
<font color="#E5E5E5">it's got three properties one is headers</font>

543
00:26:53,820 --> 00:26:58,260
which is an array has two entries<font color="#E5E5E5"> main</font>

544
00:26:56,160 --> 00:27:00,450
<font color="#E5E5E5">text domain as I mentioned it has been a</font>

545
00:26:58,260 --> 00:27:20,240
<font color="#CCCCCC">has</font><font color="#E5E5E5"> to have a text to make</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> doesn't</font>

546
00:27:00,450 --> 00:27:20,240
<font color="#E5E5E5">recognize so I'm sure you</font><font color="#CCCCCC"> all know</font>

547
00:27:25,430 --> 00:27:34,640
obviously okay so now<font color="#E5E5E5"> pray</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the devil</font>

548
00:27:30,900 --> 00:27:34,640
<font color="#CCCCCC">Gus and receive</font>

549
00:27:52,429 --> 00:27:57,840
that's<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> the source code for</font><font color="#CCCCCC"> the</font>

550
00:27:55,950 --> 00:28:00,210
exploit will be using so basically we're

551
00:27:57,840 --> 00:28:02,100
<font color="#CCCCCC">building a version of this object with</font>

552
00:28:00,210 --> 00:28:04,950
the<font color="#E5E5E5"> property set I'll show you</font>

553
00:28:02,100 --> 00:28:10,500
we're gonna URL encoder<font color="#E5E5E5"> and sterilize</font>

554
00:28:04,950 --> 00:28:12,450
<font color="#CCCCCC">that now as I mentioned</font><font color="#E5E5E5"> that's sort of</font>

555
00:28:10,500 --> 00:28:15,320
grabbing something<font color="#CCCCCC"> for the FTP site so</font>

556
00:28:12,450 --> 00:28:15,320
let's<font color="#CCCCCC"> have a quick this</font>

557
00:28:26,700 --> 00:28:32,070
so you saw<font color="#E5E5E5"> we said the stylesheet</font>

558
00:28:29,249 --> 00:28:34,529
parameter<font color="#CCCCCC"> Y 2 y la y that's used in the</font>

559
00:28:32,070 --> 00:28:37,439
folder name<font color="#CCCCCC"> and then it's going</font><font color="#E5E5E5"> ahead</font>

560
00:28:34,529 --> 00:28:40,320
look<font color="#E5E5E5"> at the languages and we've set up a</font>

561
00:28:37,440 --> 00:28:55,009
<font color="#E5E5E5">u.s. language in</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> so this is a</font>

562
00:28:40,320 --> 00:28:55,009
binary file format<font color="#E5E5E5"> it's not something</font>

563
00:29:10,710 --> 00:29:15,220
now this<font color="#CCCCCC"> issue's</font><font color="#E5E5E5"> only exposed to</font>

564
00:29:13,179 --> 00:29:17,769
authenticated users so you have to

565
00:29:15,220 --> 00:29:21,480
either have<font color="#CCCCCC"> registration available</font><font color="#E5E5E5"> or</font>

566
00:29:17,769 --> 00:29:21,480
some<font color="#CCCCCC"> wiki camera we came</font>

567
00:29:35,050 --> 00:29:40,870
so we can update various properties of

568
00:29:37,330 --> 00:29:43,260
<font color="#E5E5E5">our user profile so I've set my username</font>

569
00:29:40,870 --> 00:29:43,260
to food

570
00:30:05,000 --> 00:30:12,860
it's terminated<font color="#CCCCCC"> it at the viola play now</font>

571
00:30:10,210 --> 00:30:14,870
<font color="#CCCCCC">what</font><font color="#E5E5E5"> Tom</font><font color="#CCCCCC"> Brown go through basically</font>

572
00:30:12,860 --> 00:30:17,959
noticed is that there's quite<font color="#E5E5E5"> a complex</font>

573
00:30:14,870 --> 00:30:19,489
process<font color="#E5E5E5"> coming</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> going on</font><font color="#CCCCCC"> if we try</font>

574
00:30:17,960 --> 00:30:22,010
<font color="#CCCCCC">to give a value that looks like</font><font color="#E5E5E5"> see</font>

575
00:30:19,490 --> 00:30:24,830
<font color="#E5E5E5">realized same time it's</font><font color="#CCCCCC"> gonna serialize</font>

576
00:30:22,010 --> 00:30:26,360
it<font color="#E5E5E5"> again then on serialize it lighted if</font>

577
00:30:24,830 --> 00:30:29,689
we give a value<font color="#E5E5E5"> that</font><font color="#CCCCCC"> doesn't look</font><font color="#E5E5E5"> like</font>

578
00:30:26,360 --> 00:30:32,000
<font color="#E5E5E5">civilized age it's gonna put it in when</font>

579
00:30:29,690 --> 00:30:34,220
it gets it out<font color="#CCCCCC"> its gonna</font><font color="#E5E5E5"> check if it</font>

580
00:30:32,000 --> 00:30:37,299
looks serialized and<font color="#CCCCCC"> I'll Co as a basic</font>

581
00:30:34,220 --> 00:30:37,299
we can use this

582
00:30:48,330 --> 00:30:52,439
it just comes<font color="#E5E5E5"> out as one</font><font color="#CCCCCC"> business</font>

583
00:30:49,979 --> 00:30:56,059
<font color="#CCCCCC">getting on</font><font color="#E5E5E5"> serialized</font><font color="#CCCCCC"> I guess to</font>

584
00:30:52,440 --> 00:31:00,029
demonstrate a bit more community we

585
00:30:56,059 --> 00:31:02,539
sterilized it right<font color="#CCCCCC"> so it's just</font><font color="#E5E5E5"> an</font>

586
00:31:00,029 --> 00:31:07,320
array<font color="#E5E5E5"> is zero elements essentially</font>

587
00:31:02,539 --> 00:31:09,389
should so<font color="#CCCCCC"> not only is it uncie</font><font color="#E5E5E5"> realizing</font>

588
00:31:07,320 --> 00:31:11,099
<font color="#CCCCCC">it's invoking to string on it and that's</font>

589
00:31:09,389 --> 00:31:13,369
what the<font color="#E5E5E5"> two string method</font><font color="#CCCCCC"> have a</font>

590
00:31:11,099 --> 00:31:13,369
railing

591
00:31:32,040 --> 00:31:40,350
<font color="#E5E5E5">okay so this is the request there's a</font>

592
00:31:36,570 --> 00:31:42,059
slight complication here that the<font color="#CCCCCC"> new</font>

593
00:31:40,350 --> 00:31:44,189
<font color="#CCCCCC">name field that sort of field we looked</font>

594
00:31:42,059 --> 00:31:47,070
at won't<font color="#E5E5E5"> accept any null bytes which we</font>

595
00:31:44,190 --> 00:31:48,870
are<font color="#E5E5E5"> going to need for our exploit but</font>

596
00:31:47,070 --> 00:31:55,189
<font color="#CCCCCC">fourteen there's a couple</font><font color="#E5E5E5"> of theories of</font>

597
00:31:48,870 --> 00:31:55,189
doing<font color="#CCCCCC"> so what</font><font color="#E5E5E5"> is just</font>

598
00:32:09,159 --> 00:32:16,349
<font color="#CCCCCC">I</font><font color="#E5E5E5"> basically run that run that code which</font>

599
00:32:11,470 --> 00:32:16,349
generates<font color="#E5E5E5"> the serialized value</font>

600
00:32:25,860 --> 00:32:28,879
so you are

601
00:32:55,320 --> 00:33:00,919
so<font color="#CCCCCC"> to say that it's the</font><font color="#E5E5E5"> object we were</font>

602
00:32:58,350 --> 00:33:00,919
talking<font color="#E5E5E5"> about</font>

603
00:33:03,920 --> 00:33:10,270
go ahead and<font color="#E5E5E5"> basically said I</font>

604
00:33:30,970 --> 00:33:34,290
<font color="#E5E5E5">that's the truth</font>

605
00:34:09,739 --> 00:34:19,168
<font color="#E5E5E5">okay so moving on to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> next one this</font>

606
00:34:13,770 --> 00:34:21,300
<font color="#E5E5E5">is an issue in</font><font color="#CCCCCC"> June</font><font color="#E5E5E5"> found by a video now</font>

607
00:34:19,168 --> 00:34:26,790
<font color="#E5E5E5">when I came to prepare this presentation</font>

608
00:34:21,300 --> 00:34:30,030
I wasn't aware of the work that<font color="#E5E5E5"> young so</font>

609
00:34:26,790 --> 00:34:31,770
he's been<font color="#CCCCCC"> working on ribs PHP static</font>

610
00:34:30,030 --> 00:34:34,110
<font color="#E5E5E5">analysis tool but there's a version</font>

611
00:34:31,770 --> 00:34:35,610
which is in<font color="#E5E5E5"> public yet which he's been</font>

612
00:34:34,110 --> 00:34:38,669
working<font color="#E5E5E5"> on the both finds these</font>

613
00:34:35,610 --> 00:34:40,320
vulnerabilities<font color="#E5E5E5"> and tries to find you</font>

614
00:34:38,668 --> 00:34:42,109
know percent of exploits<font color="#CCCCCC"> change of</font>

615
00:34:40,320 --> 00:34:45,960
objects<font color="#E5E5E5"> that we cause things to happen</font>

616
00:34:42,110 --> 00:34:47,190
<font color="#E5E5E5">now this really surprised me basically</font>

617
00:34:45,960 --> 00:34:48,690
I've<font color="#E5E5E5"> got this code execution</font>

618
00:34:47,190 --> 00:34:52,020
<font color="#CCCCCC">probabilities that I was</font><font color="#E5E5E5"> going to show</font>

619
00:34:48,690 --> 00:34:55,490
you guys I thought was quite good<font color="#E5E5E5"> and it</font>

620
00:34:52,020 --> 00:34:58,800
turns out he<font color="#E5E5E5"> found a</font><font color="#CCCCCC"> release important</font>

621
00:34:55,489 --> 00:35:00,509
now the reason I didn't know about<font color="#E5E5E5"> it is</font>

622
00:34:58,800 --> 00:35:03,240
<font color="#CCCCCC">because it uses the</font><font color="#E5E5E5"> same kind of the</font>

623
00:35:00,510 --> 00:35:05,400
hurdle basically<font color="#CCCCCC"> the there's a function</font>

624
00:35:03,240 --> 00:35:08,520
in<font color="#E5E5E5"> PHP method exists to check if I meant</font>

625
00:35:05,400 --> 00:35:11,700
that exists until recently if<font color="#E5E5E5"> you fed a</font>

626
00:35:08,520 --> 00:35:14,100
malformed<font color="#E5E5E5"> class through to</font><font color="#CCCCCC"> that you</font>

627
00:35:11,700 --> 00:35:19,100
basically<font color="#CCCCCC"> in some situations of use that</font>

628
00:35:14,100 --> 00:35:22,700
<font color="#E5E5E5">to to cause an open file include now I</font>

629
00:35:19,100 --> 00:35:22,700
didn't know<font color="#E5E5E5"> about this before</font>

630
00:35:26,269 --> 00:35:40,490
it doesn't<font color="#E5E5E5"> depend on this so you</font>

631
00:35:52,460 --> 00:35:59,910
shouldn't<font color="#E5E5E5"> be looking at what classes are</font>

632
00:35:56,640 --> 00:36:03,509
loaded it's a bit complicated how they

633
00:35:59,910 --> 00:36:05,788
also know<font color="#E5E5E5"> the works but essentially it's</font>

634
00:36:03,509 --> 00:36:08,700
if the class name begins with<font color="#CCCCCC"> the start</font>

635
00:36:05,789 --> 00:36:10,680
<font color="#CCCCCC">of</font><font color="#E5E5E5"> three things with J in this</font><font color="#CCCCCC"> case we</font>

636
00:36:08,700 --> 00:36:12,779
split on every capital<font color="#E5E5E5"> letter so I've</font>

637
00:36:10,680 --> 00:36:15,538
<font color="#CCCCCC">just given an example</font><font color="#E5E5E5"> there's a class</font>

638
00:36:12,779 --> 00:36:19,859
with J<font color="#CCCCCC"> cache controller it goes up next</font>

639
00:36:15,539 --> 00:36:21,630
<font color="#CCCCCC">a library's Joomla cache controller so</font>

640
00:36:19,859 --> 00:36:23,578
<font color="#E5E5E5">we can get</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> loads and loads of classes</font>

641
00:36:21,630 --> 00:36:26,490
<font color="#CCCCCC">we need to find the starting point</font>

642
00:36:23,579 --> 00:36:36,000
<font color="#E5E5E5">there's basically only one useful and</font>

643
00:36:26,490 --> 00:36:38,819
this is used<font color="#E5E5E5"> by all</font><font color="#CCCCCC"> the other so to</font>

644
00:36:36,000 --> 00:36:41,369
actually<font color="#CCCCCC"> get to any useful home</font><font color="#E5E5E5"> we have</font>

645
00:36:38,819 --> 00:36:43,788
to have this debug<font color="#E5E5E5"> Lang parameter</font><font color="#CCCCCC"> says</font>

646
00:36:41,369 --> 00:36:43,789
<font color="#E5E5E5">true</font>

647
00:36:45,720 --> 00:36:55,009
get on one<font color="#CCCCCC"> of its properties now</font><font color="#E5E5E5"> as you</font>

648
00:36:49,109 --> 00:36:55,009
can<font color="#E5E5E5"> imagine get it's quite</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> common so</font>

649
00:36:57,530 --> 00:37:03,720
and<font color="#CCCCCC"> so looking at these past things it</font>

650
00:37:01,109 --> 00:37:06,090
shouldn't<font color="#E5E5E5"> be surprising</font><font color="#CCCCCC"> that all those</font>

651
00:37:03,720 --> 00:37:10,348
<font color="#CCCCCC">Jay</font><font color="#E5E5E5"> cash ones there's a bunch of Jacob</font>

652
00:37:06,090 --> 00:37:12,810
there's a lot of classes or<font color="#E5E5E5"> objects that</font>

653
00:37:10,349 --> 00:37:16,590
are calling get on each other<font color="#E5E5E5"> sort</font><font color="#CCCCCC"> of</font>

654
00:37:12,810 --> 00:37:17,910
<font color="#E5E5E5">intertwine so stepping through these one</font>

655
00:37:16,590 --> 00:37:19,320
<font color="#E5E5E5">of the first ones that grabs our</font>

656
00:37:17,910 --> 00:37:21,839
attention is not because it's<font color="#E5E5E5"> going to</font>

657
00:37:19,320 --> 00:37:24,359
be useful<font color="#E5E5E5"> to us</font><font color="#CCCCCC"> straight away</font><font color="#E5E5E5"> but</font>

658
00:37:21,840 --> 00:37:26,670
because<font color="#E5E5E5"> it's a potential end point and</font>

659
00:37:24,359 --> 00:37:30,420
quite<font color="#E5E5E5"> an exciting one as well</font><font color="#CCCCCC"> so there's</font>

660
00:37:26,670 --> 00:37:32,880
this this class<font color="#E5E5E5"> is basically</font>

661
00:37:30,420 --> 00:37:42,180
<font color="#CCCCCC">thought-provoking callbacks or cash</font><font color="#E5E5E5"> for</font>

662
00:37:32,880 --> 00:37:43,950
<font color="#E5E5E5">backs it takes the parameters and now as</font>

663
00:37:42,180 --> 00:37:46,980
an<font color="#CCCCCC"> endpoint</font><font color="#E5E5E5"> this is quite trivial to</font>

664
00:37:43,950 --> 00:37:49,020
abuse if we control both arguments<font color="#CCCCCC"> past</font>

665
00:37:46,980 --> 00:37:56,339
we could just give<font color="#CCCCCC"> it a function</font><font color="#E5E5E5"> name an</font>

666
00:37:49,020 --> 00:38:00,420
argument it's so we do give it an

667
00:37:56,339 --> 00:38:06,359
arbitrary<font color="#CCCCCC"> object and a novelty</font><font color="#E5E5E5"> method we</font>

668
00:38:00,420 --> 00:38:08,640
don't control the<font color="#E5E5E5"> arguments any method</font>

669
00:38:06,359 --> 00:38:12,569
or any object<font color="#E5E5E5"> hopefully we can find</font>

670
00:38:08,640 --> 00:38:13,200
something so this point we're<font color="#CCCCCC"> stopping</font>

671
00:38:12,570 --> 00:38:15,450
to think

672
00:38:13,200 --> 00:38:18,779
can I get control<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that first</font><font color="#CCCCCC"> argument</font>

673
00:38:15,450 --> 00:38:20,189
<font color="#E5E5E5">I thought it'd be</font><font color="#CCCCCC"> a lot easier to find</font>

674
00:38:18,780 --> 00:38:23,960
<font color="#E5E5E5">something but this was actually the</font>

675
00:38:20,190 --> 00:38:27,030
closest I can come<font color="#CCCCCC"> to complete control</font>

676
00:38:23,960 --> 00:38:30,650
<font color="#CCCCCC">so we've got github case which is</font>

677
00:38:27,030 --> 00:38:34,890
essentially<font color="#E5E5E5"> generating a part and then</font>

678
00:38:30,650 --> 00:38:37,980
using<font color="#CCCCCC"> a HTTP</font><font color="#E5E5E5"> client to get a response</font>

679
00:38:34,890 --> 00:38:41,700
from<font color="#CCCCCC"> that part I think</font><font color="#E5E5E5"> instructs the URL</font>

680
00:38:37,980 --> 00:38:44,310
<font color="#CCCCCC">know basically this</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> caused a bunch</font>

681
00:38:41,700 --> 00:38:46,950
of<font color="#E5E5E5"> gaps on another one of his</font><font color="#CCCCCC"> properties</font>

682
00:38:44,310 --> 00:38:52,410
<font color="#E5E5E5">to get the values for these</font><font color="#CCCCCC"> properties</font>

683
00:38:46,950 --> 00:38:54,149
<font color="#CCCCCC">happy</font><font color="#E5E5E5"> now another thing we come across</font>

684
00:38:52,410 --> 00:38:56,368
<font color="#E5E5E5">is like a simple method</font>

685
00:38:54,150 --> 00:38:58,859
we<font color="#E5E5E5"> basically completely control what</font>

686
00:38:56,369 --> 00:39:00,599
it's doing responded with so given any

687
00:38:58,859 --> 00:39:04,799
<font color="#CCCCCC">prophecy</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> basically sets</font><font color="#CCCCCC"> up this</font>

688
00:39:00,599 --> 00:39:07,829
array to give any value about cutting<font color="#CCCCCC"> a</font>

689
00:39:04,799 --> 00:39:11,279
long story short<font color="#CCCCCC"> if we give it a</font>

690
00:39:07,829 --> 00:39:14,039
malformed URL<font color="#CCCCCC"> hole that basically throws</font>

691
00:39:11,279 --> 00:39:16,140
out the URL generation and then we give

692
00:39:14,039 --> 00:39:17,760
<font color="#E5E5E5">it a user name when it's fun it was</font>

693
00:39:16,140 --> 00:39:19,710
struck<font color="#CCCCCC"> that</font><font color="#E5E5E5"> URL that</font><font color="#CCCCCC"> would stick the</font>

694
00:39:17,760 --> 00:39:25,829
<font color="#E5E5E5">user name of the from with an outside</font>

695
00:39:19,710 --> 00:39:28,289
and there's nothing else there okay so

696
00:39:25,829 --> 00:39:31,440
<font color="#CCCCCC">we not</font><font color="#E5E5E5"> got complete control over</font><font color="#CCCCCC"> that we</font>

697
00:39:28,289 --> 00:39:35,670
<font color="#E5E5E5">can now invoke get on any object with a</font>

698
00:39:31,440 --> 00:39:37,289
string<font color="#E5E5E5"> that we control almost all so if</font>

699
00:39:35,670 --> 00:39:39,660
we go back<font color="#CCCCCC"> to that cache controller</font>

700
00:39:37,289 --> 00:39:43,109
callback it mentioned that<font color="#CCCCCC"> you could</font>

701
00:39:39,660 --> 00:39:44,609
also access<font color="#E5E5E5"> it with a string shortly</font><font color="#CCCCCC"> now</font>

702
00:39:43,109 --> 00:39:47,578
there's kind of two<font color="#E5E5E5"> bars ones for</font>

703
00:39:44,609 --> 00:39:49,109
invoking static methods which is gonna

704
00:39:47,579 --> 00:39:50,970
<font color="#E5E5E5">be</font><font color="#CCCCCC"> pretty much useless to us because</font>

705
00:39:49,109 --> 00:39:53,880
<font color="#E5E5E5">that's invoked on a class rather than</font>

706
00:39:50,970 --> 00:39:56,609
<font color="#CCCCCC">object</font><font color="#E5E5E5"> we don't control</font><font color="#CCCCCC"> any</font><font color="#E5E5E5"> a spirit</font>

707
00:39:53,880 --> 00:39:58,890
<font color="#CCCCCC">because the other one looks a bit more</font>

708
00:39:56,609 --> 00:40:01,650
<font color="#E5E5E5">interesting particularly because</font><font color="#CCCCCC"> of this</font>

709
00:39:58,890 --> 00:40:08,220
comment which I<font color="#E5E5E5"> haven't had it in is in</font>

710
00:40:01,650 --> 00:40:10,200
<font color="#E5E5E5">the code whenever we see that now</font><font color="#CCCCCC"> to</font>

711
00:40:08,220 --> 00:40:11,939
understand what this<font color="#E5E5E5"> is doing you have</font>

712
00:40:10,200 --> 00:40:14,308
<font color="#E5E5E5">to basically notice the double dollars</font>

713
00:40:11,940 --> 00:40:17,069
<font color="#E5E5E5">which is something I certainly wasn't</font>

714
00:40:14,309 --> 00:40:21,270
familiar with<font color="#E5E5E5"> until I came across this</font>

715
00:40:17,069 --> 00:40:23,788
so<font color="#E5E5E5"> those are variable variables in PHP</font>

716
00:40:21,270 --> 00:40:25,890
we can use the variable<font color="#CCCCCC"> as a reference</font>

717
00:40:23,789 --> 00:40:28,670
to another variable<font color="#CCCCCC"> so we can put the</font>

718
00:40:25,890 --> 00:40:28,670
<font color="#E5E5E5">name of</font><font color="#CCCCCC"> the variable</font>

719
00:40:30,940 --> 00:40:36,250
<font color="#E5E5E5">all right things</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> being to see if we</font>

720
00:40:34,390 --> 00:40:45,520
access dollars already<font color="#E5E5E5"> is the same as</font>

721
00:40:36,250 --> 00:40:47,200
accessing<font color="#E5E5E5"> the name of the okay so now</font>

722
00:40:45,520 --> 00:40:50,020
<font color="#E5E5E5">hopefully we can start to understand</font>

723
00:40:47,200 --> 00:40:51,759
what<font color="#E5E5E5"> this does from controlling</font><font color="#CCCCCC"> that</font>

724
00:40:50,020 --> 00:40:54,069
string we<font color="#CCCCCC"> can basically</font><font color="#E5E5E5"> completely</font>

725
00:40:51,760 --> 00:40:58,810
control the<font color="#E5E5E5"> two</font><font color="#CCCCCC"> values given to these</font>

726
00:40:54,069 --> 00:41:01,119
two it's gonna then try and<font color="#CCCCCC"> access a</font>

727
00:40:58,810 --> 00:41:03,880
global<font color="#CCCCCC"> variable with the name</font><font color="#E5E5E5"> that we</font>

728
00:41:01,119 --> 00:41:06,130
<font color="#E5E5E5">give it so the intention of this is to</font>

729
00:41:03,880 --> 00:41:09,640
invoke methods on global objects within

730
00:41:06,130 --> 00:41:11,349
<font color="#E5E5E5">the application</font><font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> immediately</font>

731
00:41:09,640 --> 00:41:13,089
obvious why this might be<font color="#CCCCCC"> useful to</font><font color="#E5E5E5"> us</font>

732
00:41:11,349 --> 00:41:16,030
<font color="#CCCCCC">because we have the</font><font color="#E5E5E5"> same problems as</font>

733
00:41:13,089 --> 00:41:18,609
static methods we look a bit<font color="#E5E5E5"> further</font>

734
00:41:16,030 --> 00:41:22,380
through the<font color="#E5E5E5"> code hopefully we can start</font>

735
00:41:18,609 --> 00:41:28,598
to see what we might do<font color="#E5E5E5"> so this I</font>

736
00:41:22,380 --> 00:41:33,130
basically if<font color="#E5E5E5"> we want to get to the</font><font color="#CCCCCC"> cool</font>

737
00:41:28,599 --> 00:41:34,780
user function<font color="#E5E5E5"> we need to have our data</font>

738
00:41:33,130 --> 00:41:36,550
sets forth which is what you know we

739
00:41:34,780 --> 00:41:37,990
need to<font color="#E5E5E5"> catch to miss basically when</font>

740
00:41:36,550 --> 00:41:41,170
it's it's seeing<font color="#E5E5E5"> it's got a cash value</font>

741
00:41:37,990 --> 00:41:44,049
for this function<font color="#E5E5E5"> implication and that</font>

742
00:41:41,170 --> 00:41:47,859
we would think<font color="#E5E5E5"> is fine we</font><font color="#CCCCCC"> know that we</font>

743
00:41:44,050 --> 00:41:50,530
can return<font color="#E5E5E5"> whatever we want with but</font>

744
00:41:47,859 --> 00:41:51,759
<font color="#E5E5E5">actually if we return false</font><font color="#CCCCCC"> is going to</font>

745
00:41:50,530 --> 00:41:54,130
try<font color="#CCCCCC"> and lock</font><font color="#E5E5E5"> the cash</font>

746
00:41:51,760 --> 00:41:54,770
now that J Lang which is the class we

747
00:41:54,130 --> 00:41:57,740
looked at

748
00:41:54,770 --> 00:41:59,600
return<font color="#CCCCCC"> our which you dated with and that</font>

749
00:41:57,740 --> 00:42:01,759
doesn't have a<font color="#CCCCCC"> lock method so we try and</font>

750
00:41:59,600 --> 00:42:04,000
lock that<font color="#CCCCCC"> ya applications to the very</font>

751
00:42:01,760 --> 00:42:04,000
<font color="#E5E5E5">rare</font>

752
00:42:04,390 --> 00:42:09,500
so that's finally when that<font color="#E5E5E5"> proxy method</font>

753
00:42:07,670 --> 00:42:13,900
<font color="#E5E5E5">I was talking about comes in it turns</font>

754
00:42:09,500 --> 00:42:22,610
out<font color="#CCCCCC"> we use a functional it doesn't</font><font color="#E5E5E5"> error</font>

755
00:42:13,900 --> 00:42:27,350
non-existing and just<font color="#CCCCCC"> prop c3 to</font><font color="#E5E5E5"> another</font>

756
00:42:22,610 --> 00:42:28,940
object<font color="#CCCCCC"> and here's a class that has</font><font color="#E5E5E5"> the</font>

757
00:42:27,350 --> 00:42:30,980
exact<font color="#CCCCCC"> same structure</font><font color="#E5E5E5"> is the one</font><font color="#CCCCCC"> I showed</font>

758
00:42:28,940 --> 00:42:34,160
before<font color="#CCCCCC"> is just proxying the</font><font color="#E5E5E5"> crew logs of</font>

759
00:42:30,980 --> 00:42:37,070
<font color="#E5E5E5">its cache now the</font><font color="#CCCCCC"> prepare</font><font color="#E5E5E5"> is that this</font>

760
00:42:34,160 --> 00:42:38,720
class already<font color="#E5E5E5"> hasn't yet method so we</font>

761
00:42:37,070 --> 00:42:42,050
can't actually<font color="#CCCCCC"> cook so</font><font color="#E5E5E5"> the get method</font>

762
00:42:38,720 --> 00:42:44,270
<font color="#E5E5E5">but this one's almost a proxy with this</font>

763
00:42:42,050 --> 00:42:46,670
basically and<font color="#CCCCCC"> focus</font><font color="#E5E5E5"> yet on its cache and</font>

764
00:42:44,270 --> 00:42:50,740
then<font color="#E5E5E5"> uncie realizes the values okay we</font>

765
00:42:46,670 --> 00:42:52,790
have to serialize<font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> data return</font>

766
00:42:50,740 --> 00:42:55,129
so the path the lock

767
00:42:52,790 --> 00:42:57,470
what did the<font color="#CCCCCC"> rest of the</font><font color="#E5E5E5"> function do is</font>

768
00:42:55,130 --> 00:42:59,890
to pass one<font color="#CCCCCC"> two</font><font color="#E5E5E5"> between</font><font color="#CCCCCC"> Akashic</font><font color="#E5E5E5"> resolve</font>

769
00:42:57,470 --> 00:43:04,520
<font color="#E5E5E5">and one to actually invoke the function</font>

770
00:42:59,890 --> 00:43:06,950
<font color="#E5E5E5">so looking at this is</font><font color="#CCCCCC"> just going</font><font color="#E5E5E5"> through</font>

771
00:43:04,520 --> 00:43:09,259
it once it<font color="#E5E5E5"> doesn't look that useful but</font>

772
00:43:06,950 --> 00:43:11,600
<font color="#E5E5E5">if you think about we we could globalize</font>

773
00:43:09,260 --> 00:43:14,630
any<font color="#E5E5E5"> variables if we globalize it was all</font>

774
00:43:11,600 --> 00:43:16,160
result<font color="#E5E5E5"> before it's used and then</font>

775
00:43:14,630 --> 00:43:18,370
retrieve something from the cache this

776
00:43:16,160 --> 00:43:20,720
result<font color="#E5E5E5"> variable is</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to stick around</font>

777
00:43:18,370 --> 00:43:22,600
<font color="#CCCCCC">so basically we can</font><font color="#E5E5E5"> pass through that</font>

778
00:43:20,720 --> 00:43:24,500
whole sequence<font color="#E5E5E5"> of code twice once</font>

779
00:43:22,600 --> 00:43:28,710
<font color="#E5E5E5">globalizing the</font><font color="#CCCCCC"> zone</font>

780
00:43:24,500 --> 00:43:37,590
- and the second time missing cash and

781
00:43:28,710 --> 00:43:45,870
using result<font color="#E5E5E5"> as the object finally we go</font>

782
00:43:37,590 --> 00:43:48,960
ahead<font color="#CCCCCC"> and so I wanted</font><font color="#E5E5E5"> to mention</font>

783
00:43:45,870 --> 00:43:51,330
actually<font color="#CCCCCC"> this class jayati we can't</font>

784
00:43:48,960 --> 00:43:53,310
<font color="#E5E5E5">water</font><font color="#CCCCCC"> abnormally it's not in the</font>

785
00:43:51,330 --> 00:43:55,440
directory<font color="#E5E5E5"> structure where</font><font color="#CCCCCC"> we'd expect it</font>

786
00:43:53,310 --> 00:43:57,870
<font color="#E5E5E5">to be would actually expect it to be</font>

787
00:43:55,440 --> 00:44:00,450
<font color="#CCCCCC">called</font><font color="#E5E5E5"> with J updates or updating so</font>

788
00:43:57,870 --> 00:44:03,180
what we can do is<font color="#CCCCCC"> simply create a dummy</font>

789
00:44:00,450 --> 00:44:06,600
class that tries to<font color="#CCCCCC"> know J update or</font>

790
00:44:03,180 --> 00:44:08,730
update fails<font color="#CCCCCC"> but then</font><font color="#E5E5E5"> it knows about</font><font color="#CCCCCC"> JD</font>

791
00:44:06,600 --> 00:44:10,529
<font color="#E5E5E5">and there's other methods of indirect</font>

792
00:44:08,730 --> 00:44:13,050
inclusion so for instance if<font color="#CCCCCC"> we find</font>

793
00:44:10,530 --> 00:44:15,330
<font color="#E5E5E5">really useful methods in some class</font><font color="#CCCCCC"> that</font>

794
00:44:13,050 --> 00:44:17,160
we can also load<font color="#E5E5E5"> it could be worth</font>

795
00:44:15,330 --> 00:44:21,990
looking<font color="#CCCCCC"> at other classes that we can</font>

796
00:44:17,160 --> 00:44:25,080
also know<font color="#E5E5E5"> to include that class after</font>

797
00:44:21,990 --> 00:44:27,270
doing all that<font color="#E5E5E5"> I've got 500 so it turns</font>

798
00:44:25,080 --> 00:44:28,920
out there was a<font color="#CCCCCC"> reason we can't</font><font color="#E5E5E5"> run</font>

799
00:44:27,270 --> 00:44:31,140
through<font color="#E5E5E5"> that whole process</font><font color="#CCCCCC"> twice right</font>

800
00:44:28,920 --> 00:44:33,870
at the start the<font color="#CCCCCC"> first</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> we revoked</font>

801
00:44:31,140 --> 00:44:38,069
<font color="#CCCCCC">in the gown is</font><font color="#E5E5E5"> basically checking the</font>

802
00:44:33,870 --> 00:44:42,740
response code now what we<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> need</font>

803
00:44:38,070 --> 00:44:42,740
to<font color="#E5E5E5"> do is give our object</font><font color="#CCCCCC"> a code property</font>

804
00:44:44,260 --> 00:44:51,560
yeah<font color="#E5E5E5"> it's the hex money now if you</font>

805
00:44:49,820 --> 00:44:54,530
<font color="#CCCCCC">remember we had to set debug known to</font>

806
00:44:51,560 --> 00:44:58,340
true<font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually invoke the destructor</font>

807
00:44:54,530 --> 00:45:01,760
<font color="#E5E5E5">then that's gonna go ahead and</font><font color="#CCCCCC"> try and</font>

808
00:44:58,340 --> 00:45:04,610
<font color="#E5E5E5">get me drink it up</font><font color="#CCCCCC"> yes that's been a fun</font>

809
00:45:01,760 --> 00:45:06,710
workout<font color="#E5E5E5"> it's URL but this bit in the</font>

810
00:45:04,610 --> 00:45:09,610
<font color="#CCCCCC">arguments</font><font color="#E5E5E5"> according to get its client</font>

811
00:45:06,710 --> 00:45:11,690
<font color="#E5E5E5">the pass through all that stuff</font>

812
00:45:09,610 --> 00:45:15,610
<font color="#CCCCCC">basically is doing that's</font><font color="#E5E5E5"> going to be a</font>

813
00:45:11,690 --> 00:45:15,610
hit in the<font color="#E5E5E5"> cache the first time through</font>

814
00:45:23,590 --> 00:45:30,230
<font color="#CCCCCC">yeah it's gonna grab that object</font><font color="#E5E5E5"> set the</font>

815
00:45:27,770 --> 00:45:32,840
globe now<font color="#E5E5E5"> global resolve variable to the</font>

816
00:45:30,230 --> 00:45:35,000
hob jet<font color="#E5E5E5"> is gonna pass through everything</font>

817
00:45:32,840 --> 00:45:38,690
<font color="#E5E5E5">back again</font><font color="#CCCCCC"> missed the cache and</font>

818
00:45:35,000 --> 00:45:42,250
basically invoke this method on the

819
00:45:38,690 --> 00:45:42,250
object<font color="#E5E5E5"> that we can</font><font color="#CCCCCC"> result</font>

820
00:46:03,790 --> 00:46:08,040
<font color="#CCCCCC">I probably shouldn't say</font>

821
00:46:32,400 --> 00:46:35,579
thank you

822
00:46:41,540 --> 00:46:45,529
so it's<font color="#CCCCCC"> loading</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> Jimmer</font>

823
00:46:52,239 --> 00:46:58,489
this is the big long set<font color="#E5E5E5"> of clothes that</font>

824
00:46:56,179 --> 00:47:01,420
<font color="#E5E5E5">we use to create the</font><font color="#CCCCCC"> object that were</font>

825
00:46:58,489 --> 00:47:01,420
you know<font color="#CCCCCC"> one serialize</font>

826
00:47:48,990 --> 00:48:02,540
I know that kind of lives always<font color="#E5E5E5"> too</font>

827
00:48:00,030 --> 00:48:02,540
simple

828
00:49:28,030 --> 00:49:32,350
no I did was go away<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> think it's</font>

829
00:49:31,120 --> 00:49:37,859
<font color="#E5E5E5">worth so I showing you a video</font><font color="#CCCCCC"> of</font>

830
00:49:32,350 --> 00:49:37,860
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> that's</font>

831
00:49:48,670 --> 00:49:52,990
so that's really me done<font color="#CCCCCC"> if there's</font>

832
00:49:51,010 --> 00:49:54,910
anything I want<font color="#E5E5E5"> you to take away from</font>

833
00:49:52,990 --> 00:49:56,919
<font color="#CCCCCC">this talk</font><font color="#E5E5E5"> there's any</font><font color="#CCCCCC"> development in</font><font color="#E5E5E5"> the</font>

834
00:49:54,910 --> 00:49:59,379
<font color="#E5E5E5">audience really think seriously before</font>

835
00:49:56,920 --> 00:50:02,109
you use any<font color="#E5E5E5"> time civilizations on</font>

836
00:49:59,380 --> 00:50:03,880
civilization function<font color="#E5E5E5"> if there's any</font>

837
00:50:02,109 --> 00:50:06,009
testers<font color="#E5E5E5"> or researchers I think it's an</font>

838
00:50:03,880 --> 00:50:12,130
easy issue to<font color="#E5E5E5"> find maybe not so easy to</font>

839
00:50:06,010 --> 00:50:15,779
<font color="#E5E5E5">exploit but yeah I think we're</font><font color="#CCCCCC"> running a</font>

840
00:50:12,130 --> 00:50:15,779
bit short on time so<font color="#E5E5E5"> okay see that</font>

841
00:50:34,820 --> 00:50:40,230
<font color="#CCCCCC">yeah so</font><font color="#E5E5E5"> basically if we're looking at</font>

842
00:50:37,980 --> 00:50:44,010
you know<font color="#CCCCCC"> of on reversing we don't have</font>

843
00:50:40,230 --> 00:50:48,210
been also<font color="#CCCCCC"> what I'd normally do is Chuck</font>

844
00:50:44,010 --> 00:50:50,100
you know or<font color="#E5E5E5"> echo get declared classes</font>

845
00:50:48,210 --> 00:50:52,460
just into the source<font color="#E5E5E5"> code just before we</font>

846
00:50:50,100 --> 00:50:55,170
are<font color="#E5E5E5"> serialize and look at</font><font color="#CCCCCC"> what's making</font>

847
00:50:52,460 --> 00:50:56,970
<font color="#E5E5E5">there are some other</font><font color="#CCCCCC"> examples than these</font>

848
00:50:55,170 --> 00:50:59,220
that we looked at<font color="#E5E5E5"> where people might say</font>

849
00:50:56,970 --> 00:51:01,109
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> well to force a certain</font><font color="#E5E5E5"> class</font>

850
00:50:59,220 --> 00:51:03,720
<font color="#CCCCCC">too late so now I looked at one recently</font>

851
00:51:01,110 --> 00:51:06,300
where I think<font color="#CCCCCC"> when a certain</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font>

852
00:51:03,720 --> 00:51:09,480
<font color="#E5E5E5">email classes so they set various other</font>

853
00:51:06,300 --> 00:51:12,840
parameters<font color="#CCCCCC"> so that to the</font><font color="#E5E5E5"> loaded</font><font color="#CCCCCC"> before</font>

854
00:51:09,480 --> 00:51:14,550
the on serialization is<font color="#E5E5E5"> triggered but</font>

855
00:51:12,840 --> 00:51:16,440
yeah I<font color="#CCCCCC"> think you know if</font><font color="#E5E5E5"> you if</font><font color="#CCCCCC"> you done</font>

856
00:51:14,550 --> 00:51:19,050
the declare classes just before you once

857
00:51:16,440 --> 00:51:22,430
he realized<font color="#E5E5E5"> you should see everything</font>

858
00:51:19,050 --> 00:51:22,430
that's accessible to<font color="#E5E5E5"> you</font>

859
00:51:45,829 --> 00:51:47,890
you

