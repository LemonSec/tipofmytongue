1
00:00:04,240 --> 00:00:09,320
hi everyone<font color="#E5E5E5"> thanks</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> coming by the way</font>

2
00:00:07,910 --> 00:00:11,030
if you have a burning<font color="#CCCCCC"> desire to</font><font color="#E5E5E5"> ask</font>

3
00:00:09,320 --> 00:00:12,710
<font color="#CCCCCC">something</font><font color="#E5E5E5"> before the end</font><font color="#CCCCCC"> of the</font>

4
00:00:11,030 --> 00:00:15,730
presentation you can raise your<font color="#E5E5E5"> hand and</font>

5
00:00:12,710 --> 00:00:19,130
I<font color="#E5E5E5"> will try</font><font color="#CCCCCC"> to answer your questions so</font>

6
00:00:15,730 --> 00:00:21,110
Who am<font color="#E5E5E5"> I so my name is Dennis someone</font>

7
00:00:19,130 --> 00:00:23,149
<font color="#E5E5E5">could know me as a vegan group</font>

8
00:00:21,110 --> 00:00:25,099
I am exploit development<font color="#E5E5E5"> and reverse</font>

9
00:00:23,149 --> 00:00:28,910
engineering<font color="#E5E5E5"> into just at my spare time</font>

10
00:00:25,099 --> 00:00:32,418
doing<font color="#E5E5E5"> pen tests as daily job have all</font>

11
00:00:28,910 --> 00:00:34,790
these acronyms<font color="#E5E5E5"> especially I'm proud of</font>

12
00:00:32,418 --> 00:00:37,209
<font color="#CCCCCC">barbecue I'm the only one who believed</font>

13
00:00:34,790 --> 00:00:42,740
that my ribs are<font color="#CCCCCC"> the best</font>

14
00:00:37,210 --> 00:00:45,250
not my<font color="#E5E5E5"> the ribs I cook so anyway so what</font>

15
00:00:42,740 --> 00:00:48,350
<font color="#E5E5E5">this talk is about</font><font color="#CCCCCC"> solo I will</font><font color="#E5E5E5"> try to</font>

16
00:00:45,250 --> 00:00:50,630
<font color="#E5E5E5">explain in a good manner in</font>

17
00:00:48,350 --> 00:00:55,870
understandable manner<font color="#E5E5E5"> three zero to hero</font>

18
00:00:50,630 --> 00:00:58,910
exploits<font color="#CCCCCC"> that I choose I will also</font>

19
00:00:55,870 --> 00:01:01,430
analyze how this<font color="#CCCCCC"> exploits its words</font>

20
00:00:58,910 --> 00:01:05,449
influenced mitigation techniques

21
00:01:01,430 --> 00:01:06,979
presented<font color="#CCCCCC"> by Microsoft well and at the</font>

22
00:01:05,449 --> 00:01:09,530
end I will<font color="#E5E5E5"> share my</font><font color="#CCCCCC"> thoughts and we can</font>

23
00:01:06,979 --> 00:01:11,408
speak about whether we<font color="#E5E5E5"> are going to</font>

24
00:01:09,530 --> 00:01:15,409
expect<font color="#CCCCCC"> something similar in recent time</font>

25
00:01:11,409 --> 00:01:17,810
what this<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> is not about</font><font color="#E5E5E5"> so I'm</font><font color="#CCCCCC"> not</font>

26
00:01:15,409 --> 00:01:19,310
<font color="#E5E5E5">going to blame</font><font color="#CCCCCC"> Microsoft first</font><font color="#E5E5E5"> of all</font>

27
00:01:17,810 --> 00:01:21,140
I'm not working there the second thing

28
00:01:19,310 --> 00:01:24,470
is I firmly believe that<font color="#CCCCCC"> building</font><font color="#E5E5E5"> a</font>

29
00:01:21,140 --> 00:01:28,340
complex<font color="#CCCCCC"> software is not easier than</font>

30
00:01:24,470 --> 00:01:31,010
<font color="#E5E5E5">breaking this software</font><font color="#CCCCCC"> so second thing</font>

31
00:01:28,340 --> 00:01:34,670
<font color="#E5E5E5">I'm not going to discuss conspiracy</font>

32
00:01:31,010 --> 00:01:36,350
theories<font color="#E5E5E5"> about the patch and why it was</font>

33
00:01:34,670 --> 00:01:38,690
<font color="#E5E5E5">released so quickly</font><font color="#CCCCCC"> I have my own</font>

34
00:01:36,350 --> 00:01:43,190
opinion about<font color="#E5E5E5"> this and it's not in</font><font color="#CCCCCC"> line</font>

35
00:01:38,690 --> 00:01:44,720
with conspiracy<font color="#E5E5E5"> theories I'm not going</font>

36
00:01:43,190 --> 00:01:46,399
through the<font color="#E5E5E5"> step-by-step</font><font color="#CCCCCC"> Explorer</font>

37
00:01:44,720 --> 00:01:48,979
development<font color="#E5E5E5"> I will just show</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> the</font>

38
00:01:46,400 --> 00:01:53,720
main interesting things for me that<font color="#CCCCCC"> I</font>

39
00:01:48,979 --> 00:01:56,530
found during like reverse engineering

40
00:01:53,720 --> 00:01:59,658
<font color="#E5E5E5">and walking through these three exploits</font>

41
00:01:56,530 --> 00:02:01,729
so it shouldn't<font color="#CCCCCC"> be it won't</font><font color="#E5E5E5"> be a talk</font>

42
00:01:59,659 --> 00:02:03,920
<font color="#E5E5E5">about this and</font><font color="#CCCCCC"> B</font><font color="#E5E5E5"> particle internal so I</font>

43
00:02:01,729 --> 00:02:06,950
wouldn't bother you<font color="#E5E5E5"> with loads of the</font>

44
00:02:03,920 --> 00:02:09,170
details and stuff like that<font color="#CCCCCC"> so</font><font color="#E5E5E5"> however I</font>

45
00:02:06,950 --> 00:02:10,699
assume you have some basic<font color="#CCCCCC"> understanding</font>

46
00:02:09,169 --> 00:02:13,730
of exploit development and what's

47
00:02:10,699 --> 00:02:16,160
actually happening<font color="#E5E5E5"> there</font><font color="#CCCCCC"> so let's start</font>

48
00:02:13,730 --> 00:02:18,100
with<font color="#E5E5E5"> this one so</font><font color="#CCCCCC"> am</font><font color="#E5E5E5"> years ago away</font>

49
00:02:16,160 --> 00:02:22,190
<font color="#E5E5E5">to myself like this when I saw something</font>

50
00:02:18,100 --> 00:02:26,150
like I must<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> wait oh six seven the</font>

51
00:02:22,190 --> 00:02:29,030
general<font color="#E5E5E5"> information so this exploit then</font>

52
00:02:26,150 --> 00:02:33,860
was called war mobile but it will<font color="#E5E5E5"> it was</font>

53
00:02:29,030 --> 00:02:39,410
<font color="#E5E5E5">used by configure so malformed RPC</font>

54
00:02:33,860 --> 00:02:42,170
request<font color="#E5E5E5"> doesn't require any good</font>

55
00:02:39,410 --> 00:02:44,420
knowledge of internals just fast and see

56
00:02:42,170 --> 00:02:46,459
what's happening playing<font color="#CCCCCC"> James it</font>

57
00:02:44,420 --> 00:02:51,350
<font color="#CCCCCC">reversal sequence</font><font color="#E5E5E5"> will give you a crash</font>

58
00:02:46,460 --> 00:02:55,900
<font color="#E5E5E5">then you can start using the malformed</font>

59
00:02:51,350 --> 00:02:57,980
<font color="#E5E5E5">PC requests and</font><font color="#CCCCCC"> its poor</font><font color="#E5E5E5"> the environment</font>

60
00:02:55,900 --> 00:02:59,720
<font color="#CCCCCC">at the end I will publish the</font>

61
00:02:57,980 --> 00:03:03,049
presentation on the github so you can

62
00:02:59,720 --> 00:03:06,020
find this links<font color="#E5E5E5"> so I really appreciate</font>

63
00:03:03,050 --> 00:03:10,630
work of<font color="#E5E5E5"> these people so explanation how</font>

64
00:03:06,020 --> 00:03:14,900
it was found<font color="#E5E5E5"> in the wild</font><font color="#CCCCCC"> 40 amazing</font>

65
00:03:10,630 --> 00:03:18,799
paper<font color="#E5E5E5"> by</font><font color="#CCCCCC"> MWR how they</font><font color="#E5E5E5"> port this one to</font>

66
00:03:14,900 --> 00:03:24,050
<font color="#E5E5E5">x64 it's very nice</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> meet and some</font>

67
00:03:18,800 --> 00:03:27,530
other<font color="#CCCCCC"> also cool stuff to veto</font><font color="#E5E5E5"> so I will</font>

68
00:03:24,050 --> 00:03:30,140
give some<font color="#E5E5E5"> quick overview so here is the</font>

69
00:03:27,530 --> 00:03:33,200
<font color="#E5E5E5">brush when we have the plane crash so we</font>

70
00:03:30,140 --> 00:03:35,929
have a<font color="#E5E5E5"> heap here we control it</font><font color="#CCCCCC"> we have</font>

71
00:03:33,200 --> 00:03:37,880
some space here<font color="#CCCCCC"> we also control this and</font>

72
00:03:35,930 --> 00:03:39,410
values and<font color="#E5E5E5"> these values</font><font color="#CCCCCC"> why it's</font>

73
00:03:37,880 --> 00:03:43,130
important I<font color="#CCCCCC"> will show you on the next</font>

74
00:03:39,410 --> 00:03:46,040
<font color="#CCCCCC">slide</font><font color="#E5E5E5"> so it's</font><font color="#CCCCCC"> it's quite</font><font color="#E5E5E5"> straightforward</font>

75
00:03:43,130 --> 00:03:49,160
<font color="#CCCCCC">it doesn't</font><font color="#E5E5E5"> require any additional tricks</font>

76
00:03:46,040 --> 00:03:53,840
to actually get the code execution<font color="#E5E5E5"> so</font>

77
00:03:49,160 --> 00:03:57,829
you have a crash and you over I<font color="#CCCCCC"> tip at</font>

78
00:03:53,840 --> 00:04:00,320
<font color="#E5E5E5">it invite</font><font color="#CCCCCC"> bytes</font><font color="#E5E5E5"> offset so we have</font>

79
00:03:57,830 --> 00:04:02,600
several registers<font color="#E5E5E5"> points to</font><font color="#CCCCCC"> our buffer</font>

80
00:04:00,320 --> 00:04:05,090
and several registers rewrite it by the

81
00:04:02,600 --> 00:04:06,620
value in our buffer<font color="#E5E5E5"> so it's quite good</font>

82
00:04:05,090 --> 00:04:11,209
<font color="#E5E5E5">you have plenty of options to</font><font color="#CCCCCC"> choose</font>

83
00:04:06,620 --> 00:04:13,100
what to do so what we gonna do we over

84
00:04:11,209 --> 00:04:14,600
we overwrite<font color="#CCCCCC"> Eve</font><font color="#E5E5E5"> with address so we just</font>

85
00:04:13,100 --> 00:04:19,730
find in the memory

86
00:04:14,600 --> 00:04:23,090
<font color="#E5E5E5">Jim PE</font><font color="#CCCCCC"> Deeks we control the exit</font><font color="#E5E5E5"> point</font>

87
00:04:19,730 --> 00:04:25,310
<font color="#E5E5E5">store buffer we have enough space not</font>

88
00:04:23,090 --> 00:04:28,190
that much<font color="#E5E5E5"> space as</font><font color="#CCCCCC"> we want for putting</font>

89
00:04:25,310 --> 00:04:28,880
the actual<font color="#CCCCCC"> Big Shot code we will use the</font>

90
00:04:28,190 --> 00:04:31,700
account

91
00:04:28,880 --> 00:04:35,690
<font color="#E5E5E5">just a quick recap that the egg hunter</font>

92
00:04:31,700 --> 00:04:38,510
is a it was I think<font color="#CCCCCC"> the idea was came</font>

93
00:04:35,690 --> 00:04:40,219
from scape<font color="#E5E5E5"> and the idea was there was a</font>

94
00:04:38,510 --> 00:04:42,650
small code that looking through memory

95
00:04:40,220 --> 00:04:45,950
pages for a special tag<font color="#E5E5E5"> when it's</font>

96
00:04:42,650 --> 00:04:48,440
mentioned<font color="#E5E5E5"> twice on the on the on the</font>

97
00:04:45,950 --> 00:04:50,539
page the execution<font color="#E5E5E5"> transferred there and</font>

98
00:04:48,440 --> 00:04:52,130
the rest<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> show</font><font color="#E5E5E5"> code is executed so</font>

99
00:04:50,540 --> 00:04:55,940
you can put<font color="#CCCCCC"> wherever you want like a</font>

100
00:04:52,130 --> 00:04:58,550
<font color="#E5E5E5">meta</font><font color="#CCCCCC"> Preta any reversal there</font><font color="#E5E5E5"> but if you</font>

101
00:04:55,940 --> 00:05:00,380
<font color="#E5E5E5">have small amount of space you cannot do</font>

102
00:04:58,550 --> 00:05:02,570
this and<font color="#E5E5E5"> if you cannot reach</font><font color="#CCCCCC"> your</font>

103
00:05:00,380 --> 00:05:07,010
shellcode by<font color="#E5E5E5"> jumping directly there you</font>

104
00:05:02,570 --> 00:05:09,920
will<font color="#CCCCCC"> use that</font><font color="#E5E5E5"> counter so we store and</font>

105
00:05:07,010 --> 00:05:12,650
<font color="#E5E5E5">the place in the that we have between</font>

106
00:05:09,920 --> 00:05:14,690
beep Andy Biggs we have enough<font color="#E5E5E5"> space for</font>

107
00:05:12,650 --> 00:05:16,820
a counter and<font color="#CCCCCC"> an ops lab we use nob</font>

108
00:05:14,690 --> 00:05:20,240
<font color="#CCCCCC">sleds we jump they're not means no</font>

109
00:05:16,820 --> 00:05:22,610
operation<font color="#E5E5E5"> you just slide down</font>

110
00:05:20,240 --> 00:05:25,190
<font color="#CCCCCC">I think knob is a</font><font color="#E5E5E5"> chronium for</font><font color="#CCCCCC"> their</font>

111
00:05:22,610 --> 00:05:27,710
<font color="#E5E5E5">exchanging</font><font color="#CCCCCC"> XCX</font><font color="#E5E5E5"> so instruction</font><font color="#CCCCCC"> is doing</font>

112
00:05:25,190 --> 00:05:30,260
nothing<font color="#E5E5E5"> you slide down to their country</font>

113
00:05:27,710 --> 00:05:33,739
than<font color="#CCCCCC"> that counter</font><font color="#E5E5E5"> is executed find your</font>

114
00:05:30,260 --> 00:05:36,860
code there and so and the rest of the

115
00:05:33,740 --> 00:05:39,830
things<font color="#E5E5E5"> happening as I said before so</font>

116
00:05:36,860 --> 00:05:43,760
what we do so we<font color="#E5E5E5"> control the we jump</font>

117
00:05:39,830 --> 00:05:48,859
down<font color="#E5E5E5"> to our buffer jump edicts that I</font>

118
00:05:43,760 --> 00:05:50,480
mentioned then we have we<font color="#E5E5E5"> just use as we</font>

119
00:05:48,860 --> 00:05:53,990
again the control<font color="#E5E5E5"> we put here a small</font>

120
00:05:50,480 --> 00:05:57,460
jump back<font color="#E5E5E5"> so we just jump jump to the</font>

121
00:05:53,990 --> 00:05:59,720
<font color="#E5E5E5">knob</font><font color="#CCCCCC"> slit then their country is executed</font>

122
00:05:57,460 --> 00:06:02,570
find in our final show code somewhere

123
00:05:59,720 --> 00:06:05,990
<font color="#E5E5E5">else and we get the profit so again</font>

124
00:06:02,570 --> 00:06:08,930
<font color="#CCCCCC">overwrite heap</font><font color="#E5E5E5"> jump down jump back</font><font color="#CCCCCC"> Egg</font>

125
00:06:05,990 --> 00:06:10,450
hunter<font color="#CCCCCC"> find the show code execution so</font>

126
00:06:08,930 --> 00:06:15,760
it's quite<font color="#E5E5E5"> straightforward</font>

127
00:06:10,450 --> 00:06:18,950
so we have am starting from<font color="#CCCCCC"> XP sp2 and</font>

128
00:06:15,760 --> 00:06:21,920
2003 sp1<font color="#CCCCCC"> we have an X</font><font color="#E5E5E5"> bit enabled so</font>

129
00:06:18,950 --> 00:06:24,080
when X actually<font color="#CCCCCC"> mark the</font><font color="#E5E5E5"> page as a code</font>

130
00:06:21,920 --> 00:06:27,220
<font color="#E5E5E5">the data if it's marked as data you</font>

131
00:06:24,080 --> 00:06:30,500
cannot execute<font color="#E5E5E5"> the code on this page so</font>

132
00:06:27,220 --> 00:06:33,050
it's a excellent<font color="#E5E5E5"> paper</font><font color="#CCCCCC"> actually it's</font>

133
00:06:30,500 --> 00:06:35,390
from I<font color="#E5E5E5"> think 2005 how to bypass</font><font color="#CCCCCC"> the</font>

134
00:06:33,050 --> 00:06:41,660
hardware<font color="#CCCCCC"> depth</font><font color="#E5E5E5"> and it was again done by</font>

135
00:06:35,390 --> 00:06:42,440
scape and<font color="#CCCCCC"> skiving</font><font color="#E5E5E5"> skiving so idea so</font>

136
00:06:41,660 --> 00:06:45,320
when the

137
00:06:42,440 --> 00:06:48,380
was presented some software developers

138
00:06:45,320 --> 00:06:49,790
were a<font color="#E5E5E5"> bit surprised with</font><font color="#CCCCCC"> that and their</font>

139
00:06:48,380 --> 00:06:51,770
<font color="#CCCCCC">software is not really working</font><font color="#E5E5E5"> with</font>

140
00:06:49,790 --> 00:06:54,860
depth<font color="#CCCCCC"> it was breaking the execution</font><font color="#E5E5E5"> of</font>

141
00:06:51,770 --> 00:06:58,099
the program<font color="#CCCCCC"> so they</font><font color="#E5E5E5"> asked Microsoft and</font>

142
00:06:54,860 --> 00:07:01,430
Microsoft released<font color="#CCCCCC"> the thing how I can</font>

143
00:06:58,100 --> 00:07:03,230
disable depth for my process<font color="#E5E5E5"> so if some</font>

144
00:07:01,430 --> 00:07:04,490
software is<font color="#E5E5E5"> not working you still want</font>

145
00:07:03,230 --> 00:07:06,920
to make it work<font color="#E5E5E5"> so there should be a</font>

146
00:07:04,490 --> 00:07:09,290
feature<font color="#E5E5E5"> that I can disable depth so the</font>

147
00:07:06,920 --> 00:07:10,820
idea was to<font color="#E5E5E5"> disable depth during</font><font color="#CCCCCC"> the</font>

148
00:07:09,290 --> 00:07:14,870
execution<font color="#E5E5E5"> of the process</font><font color="#CCCCCC"> there are</font>

149
00:07:10,820 --> 00:07:19,070
<font color="#E5E5E5">functions there that you can use to to</font>

150
00:07:14,870 --> 00:07:20,390
disable it<font color="#E5E5E5"> so so with such memory for up</font>

151
00:07:19,070 --> 00:07:23,060
<font color="#E5E5E5">cores and check whether</font><font color="#CCCCCC"> they're in</font><font color="#E5E5E5"> the</font>

152
00:07:20,390 --> 00:07:24,409
<font color="#CCCCCC">cutable</font><font color="#E5E5E5"> area so it's actually the</font>

153
00:07:23,060 --> 00:07:26,870
methods there are<font color="#E5E5E5"> several methods how</font>

154
00:07:24,410 --> 00:07:30,320
you can disable<font color="#CCCCCC"> depth</font><font color="#E5E5E5"> so I use the</font>

155
00:07:26,870 --> 00:07:34,670
method<font color="#CCCCCC"> from this paper</font><font color="#E5E5E5"> it works fine on</font>

156
00:07:30,320 --> 00:07:38,150
<font color="#CCCCCC">my example so this is just</font><font color="#E5E5E5"> the name of</font>

157
00:07:34,670 --> 00:07:42,230
<font color="#CCCCCC">this function so where is the idea the</font>

158
00:07:38,150 --> 00:07:44,419
<font color="#E5E5E5">generality is that we create the stack</font>

159
00:07:42,230 --> 00:07:45,830
frame in<font color="#E5E5E5"> such way that then it will pass</font>

160
00:07:44,420 --> 00:07:48,230
<font color="#E5E5E5">the parameters that we need to this</font>

161
00:07:45,830 --> 00:07:50,570
function<font color="#E5E5E5"> and it will be it and it will</font>

162
00:07:48,230 --> 00:07:53,750
enable or disable depth whatever we want

163
00:07:50,570 --> 00:07:55,340
I will<font color="#CCCCCC"> show the debugger layout of the</font>

164
00:07:53,750 --> 00:07:57,590
next slide what's actually happening

165
00:07:55,340 --> 00:07:59,780
<font color="#CCCCCC">there so then we return</font><font color="#E5E5E5"> to control</font>

166
00:07:57,590 --> 00:08:02,599
buffer jump back and do the<font color="#E5E5E5"> rest of the</font>

167
00:07:59,780 --> 00:08:04,789
things so this<font color="#E5E5E5"> is how it looks like</font><font color="#CCCCCC"> so</font>

168
00:08:02,600 --> 00:08:06,710
this<font color="#CCCCCC"> is the function we are interested</font>

169
00:08:04,790 --> 00:08:09,710
in to disable depth this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font>

170
00:08:06,710 --> 00:08:11,539
parameters we<font color="#CCCCCC"> pass there</font><font color="#E5E5E5"> this is the 22</font>

171
00:08:09,710 --> 00:08:14,359
is<font color="#CCCCCC"> the exact parameter that will disable</font>

172
00:08:11,540 --> 00:08:17,930
depth so<font color="#E5E5E5"> we go</font>

173
00:08:14,360 --> 00:08:20,419
so we execute the<font color="#E5E5E5"> call we get</font><font color="#CCCCCC"> zero means</font>

174
00:08:17,930 --> 00:08:23,720
<font color="#CCCCCC">that's fine and this</font><font color="#E5E5E5"> particular exploit</font>

175
00:08:20,419 --> 00:08:27,049
next steps was after this<font color="#E5E5E5"> jump there is</font>

176
00:08:23,720 --> 00:08:31,190
<font color="#E5E5E5">a return instruction</font><font color="#CCCCCC"> at the end of this</font>

177
00:08:27,050 --> 00:08:33,400
it<font color="#CCCCCC"> will return back and we specially</font>

178
00:08:31,190 --> 00:08:37,789
adjust the speed that<font color="#CCCCCC"> it will still</font>

179
00:08:33,400 --> 00:08:39,500
point<font color="#CCCCCC"> to our buffer well but it's</font><font color="#E5E5E5"> not in</font>

180
00:08:37,789 --> 00:08:42,620
the scope<font color="#E5E5E5"> of this presentation but if</font>

181
00:08:39,500 --> 00:08:45,890
you have questions about how<font color="#CCCCCC"> to to end</font>

182
00:08:42,620 --> 00:08:49,690
it and so you can<font color="#E5E5E5"> ask me and I can show</font>

183
00:08:45,890 --> 00:08:53,210
<font color="#E5E5E5">you after the presentation so</font>

184
00:08:49,690 --> 00:08:55,010
conclusions nothing much to say so<font color="#CCCCCC"> wrong</font>

185
00:08:53,210 --> 00:08:57,230
path validation

186
00:08:55,010 --> 00:09:00,680
easy to exploit<font color="#E5E5E5"> without any protections</font>

187
00:08:57,230 --> 00:09:05,260
<font color="#CCCCCC">it's also by possible using Denix</font><font color="#E5E5E5"> so it</font>

188
00:09:00,680 --> 00:09:05,260
was<font color="#CCCCCC"> way you</font><font color="#E5E5E5"> go it's quite old and</font>

189
00:09:05,380 --> 00:09:10,820
nothing<font color="#CCCCCC"> but</font><font color="#E5E5E5"> nothing much you can</font><font color="#CCCCCC"> say</font>

190
00:09:07,550 --> 00:09:13,490
<font color="#CCCCCC">about this</font><font color="#E5E5E5"> so if we go forward</font><font color="#CCCCCC"> so the</font>

191
00:09:10,820 --> 00:09:17,089
next one I'm<font color="#E5E5E5"> gonna</font><font color="#CCCCCC"> say is when so 9 all</font>

192
00:09:13,490 --> 00:09:21,320
<font color="#E5E5E5">50 so the good</font><font color="#CCCCCC"> thing here is it was</font>

193
00:09:17,089 --> 00:09:23,180
initially found by<font color="#E5E5E5"> Lauren graphene as</font>

194
00:09:21,320 --> 00:09:25,870
<font color="#CCCCCC">she said in three</font><font color="#E5E5E5"> seconds of fuzziness</font>

195
00:09:23,180 --> 00:09:28,279
<font color="#CCCCCC">and be too reliable exploit was made</font>

196
00:09:25,870 --> 00:09:30,170
using the<font color="#CCCCCC"> trick</font><font color="#E5E5E5"> by this amazing</font>

197
00:09:28,279 --> 00:09:32,240
researcher<font color="#E5E5E5"> perturb</font><font color="#CCCCCC"> Anya I encourage</font><font color="#E5E5E5"> you</font>

198
00:09:30,170 --> 00:09:34,130
<font color="#E5E5E5">to read his paper about trampoline</font><font color="#CCCCCC"> how</font>

199
00:09:32,240 --> 00:09:37,580
he made it<font color="#E5E5E5"> however if you open the</font>

200
00:09:34,130 --> 00:09:40,600
Metasploit<font color="#CCCCCC"> you will have the version</font>

201
00:09:37,580 --> 00:09:45,410
<font color="#E5E5E5">written by stuff in here and it</font><font color="#CCCCCC"> has</font><font color="#E5E5E5"> some</font>

202
00:09:40,600 --> 00:09:49,630
limitations so the plain idea here is

203
00:09:45,410 --> 00:09:52,490
there is<font color="#E5E5E5"> a well unison</font><font color="#CCCCCC"> B</font><font color="#E5E5E5"> pockets then</font>

204
00:09:49,630 --> 00:09:57,100
with no<font color="#E5E5E5"> actually no checks except</font><font color="#CCCCCC"> Czech</font>

205
00:09:52,490 --> 00:10:01,310
<font color="#CCCCCC">Inferno will be used</font><font color="#E5E5E5"> to array index and</font>

206
00:09:57,100 --> 00:10:05,140
then later<font color="#E5E5E5"> this location will be</font><font color="#CCCCCC"> pointed</font>

207
00:10:01,310 --> 00:10:09,050
<font color="#CCCCCC">where our control value</font><font color="#E5E5E5"> so it's</font><font color="#CCCCCC"> betting</font>

208
00:10:05,140 --> 00:10:13,370
as you understand for many for some

209
00:10:09,050 --> 00:10:18,529
<font color="#E5E5E5">period of time this thing</font><font color="#CCCCCC"> was there was</font>

210
00:10:13,370 --> 00:10:21,170
the only<font color="#E5E5E5"> version by Stefan here so this</font>

211
00:10:18,529 --> 00:10:24,740
is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Kudus going for these two blog</font>

212
00:10:21,170 --> 00:10:29,540
<font color="#CCCCCC">posts from Lauren and this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the actual</font>

213
00:10:24,740 --> 00:10:33,230
research by<font color="#E5E5E5"> Peter how to make it so</font>

214
00:10:29,540 --> 00:10:38,510
what's happening here<font color="#CCCCCC"> so we use this</font>

215
00:10:33,230 --> 00:10:42,050
function<font color="#E5E5E5"> as we need to integrate this</font>

216
00:10:38,510 --> 00:10:45,200
function so<font color="#CCCCCC"> here we have so the problem</font>

217
00:10:42,050 --> 00:10:48,680
is in exploit of Stefan here we have a

218
00:10:45,200 --> 00:10:51,410
<font color="#E5E5E5">fare coded address from how hip and the</font>

219
00:10:48,680 --> 00:10:53,959
problem is if<font color="#E5E5E5"> you run</font><font color="#CCCCCC"> exploit against</font>

220
00:10:51,410 --> 00:10:55,219
physical machine or you can against<font color="#E5E5E5"> the</font>

221
00:10:53,959 --> 00:10:58,060
virtual machine for<font color="#CCCCCC"> example in the</font>

222
00:10:55,220 --> 00:11:01,660
<font color="#E5E5E5">virtual box you wouldn't see on this</font>

223
00:10:58,060 --> 00:11:03,890
address<font color="#CCCCCC"> these</font><font color="#E5E5E5"> instructions that you need</font>

224
00:11:01,660 --> 00:11:07,800
<font color="#E5E5E5">why you need these instructions</font><font color="#CCCCCC"> this</font>

225
00:11:03,890 --> 00:11:11,519
instructions<font color="#E5E5E5"> will help you to actually</font>

226
00:11:07,800 --> 00:11:14,729
<font color="#CCCCCC">gain control execution by switching to</font>

227
00:11:11,519 --> 00:11:17,279
your SMB bucket<font color="#E5E5E5"> so to your controlled</font>

228
00:11:14,730 --> 00:11:19,620
will you so what's for example if<font color="#CCCCCC"> I run</font>

229
00:11:17,279 --> 00:11:21,330
this against the<font color="#CCCCCC"> virtual box here I will</font>

230
00:11:19,620 --> 00:11:27,600
<font color="#E5E5E5">find everything else</font><font color="#CCCCCC"> and except to pop</font>

231
00:11:21,330 --> 00:11:31,980
<font color="#CCCCCC">it aside</font><font color="#E5E5E5"> so this executed or</font><font color="#CCCCCC"> PS I</font><font color="#E5E5E5"> read</font>

232
00:11:27,600 --> 00:11:35,310
and you get the control here<font color="#E5E5E5"> so to say</font>

233
00:11:31,980 --> 00:11:39,329
in plain words this way we specially

234
00:11:35,310 --> 00:11:41,040
created in our assembly<font color="#CCCCCC"> packet for few</font>

235
00:11:39,329 --> 00:11:43,680
reasons<font color="#CCCCCC"> the reason the main reason is</font>

236
00:11:41,040 --> 00:11:46,469
<font color="#E5E5E5">that this instruction wouldn't break</font><font color="#CCCCCC"> the</font>

237
00:11:43,680 --> 00:11:49,290
execution the original<font color="#E5E5E5"> magic it's called</font>

238
00:11:46,470 --> 00:11:51,570
magic<font color="#CCCCCC"> railing header has a different</font>

239
00:11:49,290 --> 00:11:54,870
value<font color="#E5E5E5"> and it will break the execution of</font>

240
00:11:51,570 --> 00:11:57,810
the exploit<font color="#E5E5E5"> so this one is quite nice</font>

241
00:11:54,870 --> 00:12:02,010
and<font color="#CCCCCC"> start</font><font color="#E5E5E5"> and starting from this we have</font>

242
00:11:57,810 --> 00:12:05,729
<font color="#CCCCCC">some good improvements so some</font>

243
00:12:02,010 --> 00:12:08,399
conclusions<font color="#CCCCCC"> quick to find straight quite</font>

244
00:12:05,730 --> 00:12:10,709
<font color="#E5E5E5">straightforward requires effort to make</font>

245
00:12:08,399 --> 00:12:13,320
it<font color="#E5E5E5"> reliable</font><font color="#CCCCCC"> so core code addresses well</font>

246
00:12:10,709 --> 00:12:14,969
probably<font color="#CCCCCC"> not</font><font color="#E5E5E5"> the best option however if</font>

247
00:12:13,320 --> 00:12:18,360
you have a particular<font color="#E5E5E5"> target you needed</font>

248
00:12:14,970 --> 00:12:19,740
to get there<font color="#E5E5E5"> right now so you can spend</font>

249
00:12:18,360 --> 00:12:21,480
a bit of time on<font color="#E5E5E5"> the bug and find in</font>

250
00:12:19,740 --> 00:12:26,579
<font color="#E5E5E5">these dresses finding the proper dress</font>

251
00:12:21,480 --> 00:12:30,600
in the how hip and get it done so<font color="#E5E5E5"> I so</font>

252
00:12:26,579 --> 00:12:33,239
are so cut off<font color="#E5E5E5"> how memory region is not</font>

253
00:12:30,600 --> 00:12:38,310
a question of SLR<font color="#CCCCCC"> and Windows Server</font>

254
00:12:33,240 --> 00:12:41,910
2008 so this in order<font color="#E5E5E5"> to</font><font color="#CCCCCC"> exclude</font><font color="#E5E5E5"> this</font>

255
00:12:38,310 --> 00:12:44,489
box<font color="#E5E5E5"> from future</font><font color="#CCCCCC"> operating systems from</font>

256
00:12:41,910 --> 00:12:46,500
<font color="#E5E5E5">Windows 8 we have an excel</font><font color="#CCCCCC"> heap and non</font>

257
00:12:44,490 --> 00:12:49,950
page<font color="#CCCCCC"> pool Linux</font><font color="#E5E5E5"> so it's actually</font><font color="#CCCCCC"> a next</font>

258
00:12:46,500 --> 00:12:51,870
bit enabled for how hip and non<font color="#E5E5E5"> preach</font>

259
00:12:49,950 --> 00:12:55,800
<font color="#E5E5E5">pool ending so you cannot execute</font><font color="#CCCCCC"> code</font>

260
00:12:51,870 --> 00:12:57,600
there so for<font color="#E5E5E5"> Windows 8 so this is a bit</font>

261
00:12:55,800 --> 00:13:00,329
trickier<font color="#E5E5E5"> and this exploit is a bit</font>

262
00:12:57,600 --> 00:13:05,579
tricky it's required a bit of time to

263
00:13:00,329 --> 00:13:07,800
make<font color="#CCCCCC"> it reliable</font><font color="#E5E5E5"> so this the face</font><font color="#CCCCCC"> of</font>

264
00:13:05,579 --> 00:13:11,760
most of the system engineers when<font color="#CCCCCC"> they</font>

265
00:13:07,800 --> 00:13:15,560
heard<font color="#CCCCCC"> about this mess like nothing good</font>

266
00:13:11,760 --> 00:13:18,120
will<font color="#CCCCCC"> happen to us this weekend so</font><font color="#E5E5E5"> I'm</font>

267
00:13:15,560 --> 00:13:21,560
<font color="#E5E5E5">quickly to see it so released by shadow</font>

268
00:13:18,120 --> 00:13:24,770
<font color="#CCCCCC">Brokers developed by equation group 4</font>

269
00:13:21,560 --> 00:13:26,750
when I say or whatever<font color="#CCCCCC"> I'm not sure who</font>

270
00:13:24,770 --> 00:13:29,060
did this one so I found it's quite

271
00:13:26,750 --> 00:13:30,980
complicated and it's required several

272
00:13:29,060 --> 00:13:34,130
<font color="#E5E5E5">steps to trickle vulnerability</font><font color="#CCCCCC"> I will</font>

273
00:13:30,980 --> 00:13:37,670
try to go<font color="#CCCCCC"> through them quickly and</font><font color="#E5E5E5"> try</font>

274
00:13:34,130 --> 00:13:40,160
to make it<font color="#CCCCCC"> as clear as possible for</font><font color="#E5E5E5"> more</font>

275
00:13:37,670 --> 00:13:43,130
information you<font color="#E5E5E5"> can use</font><font color="#CCCCCC"> this papers so</font>

276
00:13:40,160 --> 00:13:45,110
<font color="#CCCCCC">excel paper by risk sense</font><font color="#E5E5E5"> they show how</font>

277
00:13:43,130 --> 00:13:49,760
they analyze<font color="#CCCCCC"> the full exploit and they</font>

278
00:13:45,110 --> 00:13:53,210
ported the exploit to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Windows 10</font>

279
00:13:49,760 --> 00:13:53,569
I think it's<font color="#CCCCCC"> 1:1 507 release</font><font color="#E5E5E5"> I'm not</font>

280
00:13:53,210 --> 00:13:58,520
sure

281
00:13:53,570 --> 00:14:02,570
so I also<font color="#E5E5E5"> good paper by Trend Micro this</font>

282
00:13:58,520 --> 00:14:04,010
Chinese guy made also good analysis<font color="#E5E5E5"> so</font>

283
00:14:02,570 --> 00:14:06,110
<font color="#E5E5E5">you need to be careful when you read</font>

284
00:14:04,010 --> 00:14:08,060
which which version of it are noble<font color="#E5E5E5"> they</font>

285
00:14:06,110 --> 00:14:09,440
use some<font color="#CCCCCC"> of them use initial one from</font>

286
00:14:08,060 --> 00:14:11,060
the first<font color="#E5E5E5"> bunch some of them are using</font>

287
00:14:09,440 --> 00:14:13,100
<font color="#E5E5E5">the version</font><font color="#CCCCCC"> that was</font><font color="#E5E5E5"> ported to</font>

288
00:14:11,060 --> 00:14:16,250
<font color="#CCCCCC">Metasploit so it would be a bit</font>

289
00:14:13,100 --> 00:14:20,990
different<font color="#CCCCCC"> so here is</font><font color="#E5E5E5"> a plenty of</font><font color="#CCCCCC"> exploit</font>

290
00:14:16,250 --> 00:14:23,140
from<font color="#CCCCCC"> worried and here is also</font><font color="#E5E5E5"> am that's</font>

291
00:14:20,990 --> 00:14:26,600
a the actual<font color="#E5E5E5"> explore it and some</font>

292
00:14:23,140 --> 00:14:29,870
clarification from<font color="#CCCCCC"> package store ok</font>

293
00:14:26,600 --> 00:14:32,960
<font color="#E5E5E5">general concept it's also if we</font><font color="#CCCCCC"> go to</font>

294
00:14:29,870 --> 00:14:35,720
<font color="#CCCCCC">playing details it's also quite mmm not</font>

295
00:14:32,960 --> 00:14:37,310
straightforward<font color="#CCCCCC"> but it you will be</font><font color="#E5E5E5"> I</font>

296
00:14:35,720 --> 00:14:40,220
<font color="#E5E5E5">will try to</font><font color="#CCCCCC"> Dave since you'll understand</font>

297
00:14:37,310 --> 00:14:42,589
it so buffer overflow on the second man

298
00:14:40,220 --> 00:14:44,839
move<font color="#CCCCCC"> or memory see preparation so in my</font>

299
00:14:42,589 --> 00:14:47,180
<font color="#CCCCCC">case I see mmm</font><font color="#E5E5E5"> CP some other</font><font color="#CCCCCC"> prepping</font>

300
00:14:44,839 --> 00:14:52,520
systems there is use my<font color="#CCCCCC"> move</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I use</font>

301
00:14:47,180 --> 00:14:52,930
Windows Server 2008 r2 sp1<font color="#E5E5E5"> x64 Russian</font>

302
00:14:52,520 --> 00:14:57,740
<font color="#E5E5E5">version</font>

303
00:14:52,930 --> 00:15:00,170
so actually the whole<font color="#E5E5E5"> flow happens here</font>

304
00:14:57,740 --> 00:15:02,089
the size<font color="#E5E5E5"> is calculated in another</font>

305
00:15:00,170 --> 00:15:07,729
function<font color="#CCCCCC"> and there is an</font><font color="#E5E5E5"> Aurora when</font>

306
00:15:02,089 --> 00:15:10,790
they try<font color="#E5E5E5"> to subtract the war to world so</font>

307
00:15:07,730 --> 00:15:12,980
size of<font color="#E5E5E5"> this list</font><font color="#CCCCCC"> so what is this what</font>

308
00:15:10,790 --> 00:15:14,390
actually<font color="#CCCCCC"> this</font><font color="#E5E5E5"> list fear it's a file</font>

309
00:15:12,980 --> 00:15:19,100
extended<font color="#E5E5E5"> attribute</font><font color="#CCCCCC"> is actually file</font>

310
00:15:14,390 --> 00:15:21,650
characteristics so in<font color="#CCCCCC"> reality here when</font>

311
00:15:19,100 --> 00:15:25,130
this<font color="#E5E5E5"> can when this new list is created</font>

312
00:15:21,650 --> 00:15:27,140
<font color="#E5E5E5">with all the flow over</font><font color="#CCCCCC"> ever</font><font color="#E5E5E5"> so it's a</font>

313
00:15:25,130 --> 00:15:30,980
quite large kernel pool allocation so

314
00:15:27,140 --> 00:15:32,209
because it's too<font color="#E5E5E5"> big for them non</font>

315
00:15:30,980 --> 00:15:35,190
<font color="#CCCCCC">lodgepole so</font>

316
00:15:32,209 --> 00:15:36,689
last iteration<font color="#CCCCCC"> Oh</font>

317
00:15:35,190 --> 00:15:38,850
the last<font color="#CCCCCC"> situation</font><font color="#E5E5E5"> over right next</font>

318
00:15:36,690 --> 00:15:41,520
<font color="#E5E5E5">memory area so we need to have these two</font>

319
00:15:38,850 --> 00:15:45,410
buffers<font color="#E5E5E5"> go in one by one so to achieve</font>

320
00:15:41,520 --> 00:15:48,120
<font color="#E5E5E5">this both</font><font color="#CCCCCC"> offers should be aligned in</font>

321
00:15:45,410 --> 00:15:50,370
<font color="#CCCCCC">order</font><font color="#E5E5E5"> to get this aligning that cannot</font>

322
00:15:48,120 --> 00:15:52,470
<font color="#E5E5E5">cannabis should</font><font color="#CCCCCC"> be spread all it's</font>

323
00:15:50,370 --> 00:15:56,190
called groom<font color="#E5E5E5"> in this case</font><font color="#CCCCCC"> it babe it's</font>

324
00:15:52,470 --> 00:15:57,720
called group<font color="#E5E5E5"> roomed so we can see that</font>

325
00:15:56,190 --> 00:15:59,430
<font color="#E5E5E5">all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> separations go on successfully</font>

326
00:15:57,720 --> 00:16:01,320
when we have that this when we have the

327
00:15:59,430 --> 00:16:03,209
return<font color="#CCCCCC"> from service like this</font><font color="#E5E5E5"> starts</font>

328
00:16:01,320 --> 00:16:04,860
<font color="#E5E5E5">very parameter in every exploit when you</font>

329
00:16:03,210 --> 00:16:07,380
run wherever<font color="#E5E5E5"> it is from the first</font><font color="#CCCCCC"> bunch</font>

330
00:16:04,860 --> 00:16:09,720
or from the Metasploit it will show you

331
00:16:07,380 --> 00:16:13,189
this means well<font color="#E5E5E5"> everything is good we</font>

332
00:16:09,720 --> 00:16:16,980
are<font color="#E5E5E5"> on the way to get to the target so</font>

333
00:16:13,190 --> 00:16:19,380
exploit<font color="#E5E5E5"> me request several price if if</font>

334
00:16:16,980 --> 00:16:21,840
this buffers<font color="#E5E5E5"> would be one by one to</font>

335
00:16:19,380 --> 00:16:25,100
require<font color="#E5E5E5"> several tries and also I read in</font>

336
00:16:21,840 --> 00:16:27,480
one<font color="#CCCCCC"> of the papers that it's requires</font>

337
00:16:25,100 --> 00:16:30,480
actually sometimes<font color="#CCCCCC"> if it's not</font>

338
00:16:27,480 --> 00:16:33,390
<font color="#E5E5E5">successful</font><font color="#CCCCCC"> cool off time when everything</font>

339
00:16:30,480 --> 00:16:37,140
will<font color="#E5E5E5"> be getting back to</font><font color="#CCCCCC"> the until</font><font color="#E5E5E5"> you</font>

340
00:16:33,390 --> 00:16:42,000
can reboot the target<font color="#E5E5E5"> so this is an</font>

341
00:16:37,140 --> 00:16:44,490
<font color="#E5E5E5">excellent foundation helpful from from</font>

342
00:16:42,000 --> 00:16:48,870
Trend Micro site so this is the way they

343
00:16:44,490 --> 00:16:51,330
show how they feel<font color="#CCCCCC"> and prepare this so</font>

344
00:16:48,870 --> 00:16:54,450
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is actually the grooming</font><font color="#CCCCCC"> process</font>

345
00:16:51,330 --> 00:16:58,680
<font color="#CCCCCC">how they actually prepare this non-veg</font>

346
00:16:54,450 --> 00:17:01,020
<font color="#CCCCCC">spool for successful overflow so they</font>

347
00:16:58,680 --> 00:17:01,469
use<font color="#CCCCCC"> different chunks</font><font color="#E5E5E5"> sending them one by</font>

348
00:17:01,020 --> 00:17:03,960
one

349
00:17:01,470 --> 00:17:06,569
keep it<font color="#E5E5E5"> get the overflow here so if you</font>

350
00:17:03,960 --> 00:17:08,490
want to have more details<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can speak</font>

351
00:17:06,569 --> 00:17:12,899
with<font color="#E5E5E5"> me after the talk and I will try</font><font color="#CCCCCC"> to</font>

352
00:17:08,490 --> 00:17:15,480
<font color="#E5E5E5">explain you as much as I can so don't</font>

353
00:17:12,900 --> 00:17:17,760
next<font color="#E5E5E5"> slide so this is actually what they</font>

354
00:17:15,480 --> 00:17:20,099
try<font color="#E5E5E5"> to show this is this this is</font><font color="#CCCCCC"> the</font>

355
00:17:17,760 --> 00:17:22,020
exact value after<font color="#E5E5E5"> the whole flow so I</font>

356
00:17:20,099 --> 00:17:23,429
have different<font color="#E5E5E5"> offsets obviously from</font>

357
00:17:22,020 --> 00:17:25,199
<font color="#CCCCCC">where because they use the different</font>

358
00:17:23,430 --> 00:17:28,800
<font color="#E5E5E5">version of operating system have</font>

359
00:17:25,199 --> 00:17:32,250
different offsets<font color="#E5E5E5"> like this</font><font color="#CCCCCC"> then I use</font>

360
00:17:28,800 --> 00:17:34,950
them this<font color="#E5E5E5"> is this</font><font color="#CCCCCC"> show</font><font color="#E5E5E5"> code is used by</font>

361
00:17:32,250 --> 00:17:37,140
the guys<font color="#CCCCCC"> in the risk sense paper</font><font color="#E5E5E5"> so just</font>

362
00:17:34,950 --> 00:17:38,760
have this and see<font color="#CCCCCC"> that this</font><font color="#E5E5E5"> is the</font>

363
00:17:37,140 --> 00:17:42,150
<font color="#E5E5E5">address where it's actually so I put</font>

364
00:17:38,760 --> 00:17:43,379
initial<font color="#CCCCCC"> breakpoint here</font><font color="#E5E5E5"> and this is the</font>

365
00:17:42,150 --> 00:17:47,309
start of<font color="#E5E5E5"> the shell code that will be</font>

366
00:17:43,380 --> 00:17:52,750
executed<font color="#E5E5E5"> so it's the</font><font color="#CCCCCC"> kernel one</font>

367
00:17:47,309 --> 00:17:54,549
so conclusions<font color="#E5E5E5"> and sophisticated</font>

368
00:17:52,750 --> 00:18:00,070
exploits<font color="#E5E5E5"> required several steps to</font>

369
00:17:54,549 --> 00:18:02,860
<font color="#E5E5E5">achieve reliable execution well most of</font>

370
00:18:00,070 --> 00:18:04,240
these<font color="#E5E5E5"> structures</font><font color="#CCCCCC"> undocumented so it's</font>

371
00:18:02,860 --> 00:18:06,610
required some additional reverse

372
00:18:04,240 --> 00:18:10,750
engineering<font color="#E5E5E5"> and most of this information</font>

373
00:18:06,610 --> 00:18:12,250
<font color="#E5E5E5">was from the actual first bunch so</font>

374
00:18:10,750 --> 00:18:14,980
people have<font color="#E5E5E5"> looked</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> exploit and</font>

375
00:18:12,250 --> 00:18:17,799
start reversing<font color="#E5E5E5"> it so in depth some</font>

376
00:18:14,980 --> 00:18:19,450
<font color="#E5E5E5">political knowledge also required</font><font color="#CCCCCC"> to see</font>

377
00:18:17,799 --> 00:18:23,250
how you can<font color="#E5E5E5"> interact with the driver</font>

378
00:18:19,450 --> 00:18:26,590
what will be the output from there so

379
00:18:23,250 --> 00:18:30,220
from redstone<font color="#E5E5E5"> one so this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> actually</font>

380
00:18:26,590 --> 00:18:33,459
these two<font color="#CCCCCC"> things are from the paper when</font>

381
00:18:30,220 --> 00:18:36,280
they put when this risk<font color="#E5E5E5"> sends guys</font>

382
00:18:33,460 --> 00:18:39,429
posted exploit against<font color="#E5E5E5"> Windows 10 this</font>

383
00:18:36,280 --> 00:18:42,160
updates<font color="#E5E5E5"> coming out so update them to my</font>

384
00:18:39,429 --> 00:18:44,590
page entries to prevent so which table

385
00:18:42,160 --> 00:18:50,049
<font color="#E5E5E5">table</font><font color="#CCCCCC"> entry system structure that they</font>

386
00:18:44,590 --> 00:18:53,590
use to<font color="#CCCCCC"> follow and they</font><font color="#E5E5E5"> required to patch</font>

387
00:18:50,049 --> 00:18:55,750
it to to bypass depth<font color="#E5E5E5"> the last one</font><font color="#CCCCCC"> we</font>

388
00:18:53,590 --> 00:18:59,590
how hip is randomized so<font color="#CCCCCC"> my slot bypass</font>

389
00:18:55,750 --> 00:19:04,120
is<font color="#E5E5E5"> not it's not more feasible final</font>

390
00:18:59,590 --> 00:19:07,449
thoughts so I would say that<font color="#E5E5E5"> the</font>

391
00:19:04,120 --> 00:19:11,199
security<font color="#E5E5E5"> improved very well during the</font>

392
00:19:07,450 --> 00:19:13,000
past years<font color="#E5E5E5"> from my point of view like</font>

393
00:19:11,200 --> 00:19:15,730
reliable exploitation it works around

394
00:19:13,000 --> 00:19:18,190
<font color="#E5E5E5">the versions from like Windows 8 to</font>

395
00:19:15,730 --> 00:19:20,500
Windows 10<font color="#E5E5E5"> like to develop this exploit</font>

396
00:19:18,190 --> 00:19:23,049
it's much harder now<font color="#E5E5E5"> it requires a lot</font>

397
00:19:20,500 --> 00:19:27,549
of<font color="#E5E5E5"> knowledge of</font><font color="#CCCCCC"> different operating</font>

398
00:19:23,049 --> 00:19:32,110
system internals<font color="#E5E5E5"> I don't myself I don't</font>

399
00:19:27,549 --> 00:19:34,570
expect any new like similar

400
00:19:32,110 --> 00:19:36,668
vulnerabilities in nearest future<font color="#E5E5E5"> until</font>

401
00:19:34,570 --> 00:19:39,580
there is a new class of<font color="#CCCCCC"> bugs</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> be</font>

402
00:19:36,669 --> 00:19:43,020
<font color="#E5E5E5">used for</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so for example years ago</font>

403
00:19:39,580 --> 00:19:45,280
there were<font color="#CCCCCC"> people who</font><font color="#E5E5E5"> like I mean</font>

404
00:19:43,020 --> 00:19:48,668
everybody was doing<font color="#E5E5E5"> the state corruption</font>

405
00:19:45,280 --> 00:19:53,200
<font color="#E5E5E5">at the moment they start using hip so</font>

406
00:19:48,669 --> 00:19:56,620
it's like a new class well I would say

407
00:19:53,200 --> 00:20:00,490
also<font color="#E5E5E5"> they great work so they don't only</font>

408
00:19:56,620 --> 00:20:02,919
patch the operating<font color="#E5E5E5"> system they also</font>

409
00:20:00,490 --> 00:20:06,010
try to create prevention for actual

410
00:20:02,920 --> 00:20:09,850
class of bugs<font color="#E5E5E5"> and get rid of them</font><font color="#CCCCCC"> so I</font>

411
00:20:06,010 --> 00:20:15,330
found it quite quite good<font color="#E5E5E5"> so any</font>

412
00:20:09,850 --> 00:20:18,310
questions if you have<font color="#CCCCCC"> any questions just</font>

413
00:20:15,330 --> 00:20:23,199
<font color="#E5E5E5">after for example</font><font color="#CCCCCC"> of now you can catch</font>

414
00:20:18,310 --> 00:20:24,820
me and<font color="#CCCCCC"> we can speak about if not before</font>

415
00:20:23,200 --> 00:20:27,550
I would like to<font color="#CCCCCC"> thanks I</font><font color="#E5E5E5"> would like to</font>

416
00:20:24,820 --> 00:20:29,169
thank the<font color="#CCCCCC"> mink who helped me and</font><font color="#E5E5E5"> I would</font>

417
00:20:27,550 --> 00:20:30,850
like<font color="#E5E5E5"> to help</font><font color="#CCCCCC"> though to thank the</font>

418
00:20:29,170 --> 00:20:34,500
<font color="#E5E5E5">organizers of this event</font><font color="#CCCCCC"> thank you guys</font>

419
00:20:30,850 --> 00:20:34,500
and thanks<font color="#E5E5E5"> for your attention</font>

