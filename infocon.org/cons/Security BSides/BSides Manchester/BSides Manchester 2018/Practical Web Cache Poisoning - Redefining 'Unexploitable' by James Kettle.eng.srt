1
00:00:05,779 --> 00:00:12,960
good afternoon and welcome<font color="#E5E5E5"> to</font><font color="#CCCCCC"> web crack</font>

2
00:00:09,120 --> 00:00:15,660
school<font color="#E5E5E5"> web cache poisoning have you ever</font>

3
00:00:12,960 --> 00:00:18,900
been working<font color="#E5E5E5"> away and just noticed</font>

4
00:00:15,660 --> 00:00:20,698
something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> wasn't</font><font color="#CCCCCC"> quite right</font><font color="#E5E5E5"> maybe</font>

5
00:00:18,900 --> 00:00:21,509
you thought that's<font color="#E5E5E5"> weird but</font><font color="#CCCCCC"> rather</font>

6
00:00:20,699 --> 00:00:23,789
<font color="#E5E5E5">complex</font>

7
00:00:21,510 --> 00:00:27,810
I think I'll deal with that<font color="#E5E5E5"> later on</font><font color="#CCCCCC"> but</font>

8
00:00:23,789 --> 00:00:29,699
<font color="#E5E5E5">when I have more free time for years web</font>

9
00:00:27,810 --> 00:00:31,650
cache poisoning has been a vulnerability

10
00:00:29,699 --> 00:00:34,649
<font color="#E5E5E5">that people just didn't want to</font><font color="#CCCCCC"> think</font>

11
00:00:31,650 --> 00:00:38,460
<font color="#CCCCCC">about</font><font color="#E5E5E5"> it's existed mostly as a kind of</font>

12
00:00:34,649 --> 00:00:40,530
theoretical<font color="#CCCCCC"> vonner ability are more</font>

13
00:00:38,460 --> 00:00:42,899
often<font color="#E5E5E5"> used</font><font color="#CCCCCC"> to scare people</font><font color="#E5E5E5"> into patching</font>

14
00:00:40,530 --> 00:00:46,829
<font color="#E5E5E5">things or maybe paying out bounties</font><font color="#CCCCCC"> that</font>

15
00:00:42,899 --> 00:00:49,020
it is actually<font color="#E5E5E5"> proven</font><font color="#CCCCCC"> to exist and for</font>

16
00:00:46,829 --> 00:00:51,030
<font color="#E5E5E5">years I lived in fear of web cache</font>

17
00:00:49,020 --> 00:00:54,899
poisoning<font color="#CCCCCC"> and it's the tourist</font>

18
00:00:51,030 --> 00:00:57,149
complexity but recently<font color="#E5E5E5"> I found myself</font>

19
00:00:54,899 --> 00:00:59,730
in<font color="#E5E5E5"> a situation where I had</font><font color="#CCCCCC"> no choice</font><font color="#E5E5E5"> but</font>

20
00:00:57,149 --> 00:01:03,629
<font color="#E5E5E5">to try and</font><font color="#CCCCCC"> discover that actually</font><font color="#E5E5E5"> web</font>

21
00:00:59,730 --> 00:01:05,220
cache poisoning is wonderful so today in

22
00:01:03,629 --> 00:01:07,590
this session I'm going<font color="#E5E5E5"> to share with you</font>

23
00:01:05,220 --> 00:01:10,860
practical tools and techniques to<font color="#E5E5E5"> detect</font>

24
00:01:07,590 --> 00:01:15,750
<font color="#E5E5E5">explore and exploit web cache poisoning</font>

25
00:01:10,860 --> 00:01:18,299
<font color="#CCCCCC">I don't know we start with the story of</font>

26
00:01:15,750 --> 00:01:20,490
how research came to be<font color="#E5E5E5"> because it's</font>

27
00:01:18,299 --> 00:01:23,220
quite right<font color="#E5E5E5"> generally but for this one</font>

28
00:01:20,490 --> 00:01:26,100
time I'm<font color="#E5E5E5"> gonna make an exception</font><font color="#CCCCCC"> so I</font>

29
00:01:23,220 --> 00:01:28,920
started out<font color="#E5E5E5"> about a year</font><font color="#CCCCCC"> ago with a</font>

30
00:01:26,100 --> 00:01:32,130
simple<font color="#E5E5E5"> plan and a lot of optimism</font><font color="#CCCCCC"> I</font>

31
00:01:28,920 --> 00:01:35,430
wrote a talk called<font color="#CCCCCC"> around minor</font><font color="#E5E5E5"> to find</font>

32
00:01:32,130 --> 00:01:37,890
hidden<font color="#E5E5E5"> query parameters</font><font color="#CCCCCC"> i'm idea was I</font>

33
00:01:35,430 --> 00:01:39,630
won this<font color="#E5E5E5"> I'll</font><font color="#CCCCCC"> find some cool parameters</font>

34
00:01:37,890 --> 00:01:41,070
<font color="#E5E5E5">and I'll find some cool exploits and</font>

35
00:01:39,630 --> 00:01:44,220
those and I'll give a talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that</font>

36
00:01:41,070 --> 00:01:47,008
and this started<font color="#E5E5E5"> out fairly</font><font color="#CCCCCC"> well I found</font>

37
00:01:44,220 --> 00:01:50,470
<font color="#E5E5E5">some pretty insane parameters on some</font>

38
00:01:47,009 --> 00:01:53,980
websites<font color="#CCCCCC"> but</font>

39
00:01:50,470 --> 00:01:56,170
in these parameters<font color="#E5E5E5"> in each parameters</font>

40
00:01:53,980 --> 00:01:58,060
<font color="#E5E5E5">over and over again the most interesting</font>

41
00:01:56,170 --> 00:02:00,550
<font color="#E5E5E5">vaguely serious thing I could</font><font color="#CCCCCC"> find</font><font color="#E5E5E5"> was</font>

42
00:01:58,060 --> 00:02:03,490
born old reflected cross-site scripting

43
00:02:00,550 --> 00:02:07,120
which is not very exciting<font color="#CCCCCC"> I kind of a</font>

44
00:02:03,490 --> 00:02:09,490
talk on<font color="#E5E5E5"> that so I thought well this</font>

45
00:02:07,120 --> 00:02:11,500
<font color="#E5E5E5">hasn't worked out maybe all the core</font>

46
00:02:09,490 --> 00:02:14,230
vulnerabilities are actually<font color="#CCCCCC"> hiding in</font>

47
00:02:11,500 --> 00:02:17,190
cookies<font color="#E5E5E5"> so I hacked up my code</font><font color="#CCCCCC"> and I</font>

48
00:02:14,230 --> 00:02:20,260
made<font color="#E5E5E5"> pram</font><font color="#CCCCCC"> liner also</font><font color="#E5E5E5"> guess cooking it</font>

49
00:02:17,190 --> 00:02:23,079
myself<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> that and I found something</font>

50
00:02:20,260 --> 00:02:24,850
<font color="#CCCCCC">that looks incredibly promising spend</font>

51
00:02:23,080 --> 00:02:26,320
<font color="#E5E5E5">about eight hours</font><font color="#CCCCCC"> on that and then grabs</font>

52
00:02:24,850 --> 00:02:30,549
<font color="#CCCCCC">Lily nowhere and had to admit that</font><font color="#E5E5E5"> that</font>

53
00:02:26,320 --> 00:02:33,310
<font color="#CCCCCC">was actually</font><font color="#E5E5E5"> a waste of time as well and</font>

54
00:02:30,550 --> 00:02:34,870
<font color="#E5E5E5">at this</font><font color="#CCCCCC"> stage</font><font color="#E5E5E5"> there was only really</font><font color="#CCCCCC"> one</font>

55
00:02:33,310 --> 00:02:37,240
option<font color="#CCCCCC"> left</font><font color="#E5E5E5"> and that was to hack up my</font>

56
00:02:34,870 --> 00:02:41,320
code again<font color="#CCCCCC"> and make for a minor also</font>

57
00:02:37,240 --> 00:02:43,240
<font color="#CCCCCC">guess HTTP headers so I set out doing</font>

58
00:02:41,320 --> 00:02:44,709
that<font color="#CCCCCC"> I ran that on</font><font color="#E5E5E5"> loads of sites I</font>

59
00:02:43,240 --> 00:02:47,860
found all the<font color="#E5E5E5"> sites of all sorts of</font>

60
00:02:44,710 --> 00:02:50,200
crazy headers but once again all<font color="#E5E5E5"> those</font>

61
00:02:47,860 --> 00:02:53,110
headers had was a boring<font color="#E5E5E5"> old cross-site</font>

62
00:02:50,200 --> 00:02:55,238
scripting and cross-site scripting in

63
00:02:53,110 --> 00:02:57,010
headers is generally<font color="#CCCCCC"> regarded as an</font>

64
00:02:55,239 --> 00:03:00,040
exploitable<font color="#E5E5E5"> because there's no way for</font>

65
00:02:57,010 --> 00:03:01,840
<font color="#CCCCCC">me to</font><font color="#E5E5E5"> make someone else send some random</font>

66
00:03:00,040 --> 00:03:06,250
funny header<font color="#E5E5E5"> across the maintenance to</font>

67
00:03:01,840 --> 00:03:09,100
<font color="#CCCCCC">exploit the only glimmer of hope</font><font color="#E5E5E5"> that</font>

68
00:03:06,250 --> 00:03:12,100
remained at the stage was<font color="#CCCCCC"> that maybe I</font>

69
00:03:09,100 --> 00:03:13,930
could trick a cache into saving these

70
00:03:12,100 --> 00:03:16,840
responses and<font color="#E5E5E5"> basically turning itself</font>

71
00:03:13,930 --> 00:03:20,410
into<font color="#E5E5E5"> an exploit delivery mechanism</font><font color="#CCCCCC"> from</font>

72
00:03:16,840 --> 00:03:25,500
<font color="#E5E5E5">my header based exercise and quite</font>

73
00:03:20,410 --> 00:03:28,030
<font color="#CCCCCC">unexpectedly that actually worked so</font>

74
00:03:25,500 --> 00:03:29,920
first I'm<font color="#E5E5E5"> going to talk</font><font color="#CCCCCC"> about what web</font>

75
00:03:28,030 --> 00:03:32,410
<font color="#E5E5E5">cache poisoning is and how you can find</font>

76
00:03:29,920 --> 00:03:35,380
it then I'll have a look at a bunch<font color="#E5E5E5"> of</font>

77
00:03:32,410 --> 00:03:38,350
real<font color="#CCCCCC"> websites that I was able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> catch</font>

78
00:03:35,380 --> 00:03:40,959
poison<font color="#CCCCCC"> and</font><font color="#E5E5E5"> also do a live demo in a very</font>

79
00:03:38,350 --> 00:03:42,519
<font color="#E5E5E5">well-known piece of software</font><font color="#CCCCCC"> and after</font>

80
00:03:40,959 --> 00:03:44,590
<font color="#E5E5E5">that I'll talk about how not</font><font color="#CCCCCC"> to get</font><font color="#E5E5E5"> your</font>

81
00:03:42,519 --> 00:03:46,830
cache poisoned and then wrap<font color="#E5E5E5"> up and</font>

82
00:03:44,590 --> 00:03:50,170
hopefully<font color="#E5E5E5"> take five</font><font color="#CCCCCC"> minutes of questions</font>

83
00:03:46,830 --> 00:03:52,870
<font color="#CCCCCC">why first of all we need a bit</font><font color="#E5E5E5"> of</font>

84
00:03:50,170 --> 00:03:54,940
context this talk<font color="#E5E5E5"> practice web cache</font>

85
00:03:52,870 --> 00:03:56,950
poisoning<font color="#E5E5E5"> is not about poisoning the</font>

86
00:03:54,940 --> 00:03:58,390
browser caches<font color="#CCCCCC"> browsers</font><font color="#E5E5E5"> have built-in</font>

87
00:03:56,950 --> 00:04:02,109
caches these

88
00:03:58,390 --> 00:04:03,399
and from an exploit point of view from a

89
00:04:02,110 --> 00:04:05,190
cache poisoning point of view they're

90
00:04:03,400 --> 00:04:08,290
quite boring<font color="#CCCCCC"> I'm not looking</font><font color="#E5E5E5"> at those</font>

91
00:04:05,190 --> 00:04:09,700
also<font color="#CCCCCC"> there was</font><font color="#E5E5E5"> a really cool attack</font><font color="#CCCCCC"> on</font>

92
00:04:08,290 --> 00:04:12,519
<font color="#CCCCCC">the old last year called web</font><font color="#E5E5E5"> cache</font>

93
00:04:09,700 --> 00:04:14,230
deception which is about<font color="#E5E5E5"> tricking caches</font>

94
00:04:12,520 --> 00:04:17,140
into saving sensitive information

95
00:04:14,230 --> 00:04:20,230
belonging to legitimate users so that

96
00:04:17,140 --> 00:04:22,210
<font color="#E5E5E5">the attacker can access it</font><font color="#CCCCCC"> I'm not</font><font color="#E5E5E5"> going</font>

97
00:04:20,230 --> 00:04:23,770
<font color="#E5E5E5">to talk</font><font color="#CCCCCC"> about that</font><font color="#E5E5E5"> that's a different</font>

98
00:04:22,210 --> 00:04:26,560
attack it should<font color="#E5E5E5"> not be confused with</font>

99
00:04:23,770 --> 00:04:28,810
cache poisoning<font color="#E5E5E5"> which is about storing</font>

100
00:04:26,560 --> 00:04:31,770
delicious payloads<font color="#CCCCCC"> in caches to use the</font>

101
00:04:28,810 --> 00:04:35,620
cache<font color="#E5E5E5"> as an exploit delivery mechanism</font>

102
00:04:31,770 --> 00:04:38,859
also<font color="#E5E5E5"> in some circumstances</font><font color="#CCCCCC"> you can</font>

103
00:04:35,620 --> 00:04:40,900
poison caches using using<font color="#E5E5E5"> response</font>

104
00:04:38,860 --> 00:04:42,640
splitting by<font color="#CCCCCC"> ahead of injection and with</font>

105
00:04:40,900 --> 00:04:45,039
malformed<font color="#E5E5E5"> requests using</font><font color="#CCCCCC"> request</font>

106
00:04:42,640 --> 00:04:48,010
<font color="#CCCCCC">smuggling these are both core techniques</font>

107
00:04:45,040 --> 00:04:50,050
but they don't work on very<font color="#E5E5E5"> many systems</font>

108
00:04:48,010 --> 00:04:53,919
<font color="#E5E5E5">these</font><font color="#CCCCCC"> days as far</font><font color="#E5E5E5"> as I can tell and I'm</font>

109
00:04:50,050 --> 00:04:57,610
not talking about<font color="#E5E5E5"> those either finally</font>

110
00:04:53,919 --> 00:05:01,240
and<font color="#E5E5E5"> most importantly practical web cache</font>

111
00:04:57,610 --> 00:05:03,570
poisoning<font color="#E5E5E5"> is not theoretical everything</font>

112
00:05:01,240 --> 00:05:06,820
every example<font color="#E5E5E5"> this entire presentation</font>

113
00:05:03,570 --> 00:05:09,930
has is based on a real system where I've

114
00:05:06,820 --> 00:05:15,969
proven the web cache poisoning<font color="#E5E5E5"> works</font><font color="#CCCCCC"> and</font>

115
00:05:09,930 --> 00:05:18,190
often<font color="#CCCCCC"> is not</font><font color="#E5E5E5"> even difficult first let's</font>

116
00:05:15,970 --> 00:05:20,410
take a quick<font color="#CCCCCC"> look at how caching is</font>

117
00:05:18,190 --> 00:05:22,390
supposed to<font color="#E5E5E5"> work here we've got three</font>

118
00:05:20,410 --> 00:05:22,990
users fetching the same resource one

119
00:05:22,390 --> 00:05:24,580
after the other

120
00:05:22,990 --> 00:05:28,090
this was<font color="#E5E5E5"> more some might</font><font color="#CCCCCC"> be an image</font>

121
00:05:24,580 --> 00:05:29,740
<font color="#CCCCCC">JavaScript</font><font color="#E5E5E5"> or just some</font><font color="#CCCCCC"> HTML and the</font>

122
00:05:28,090 --> 00:05:32,260
cache sees the first<font color="#E5E5E5"> user fetching it</font>

123
00:05:29,740 --> 00:05:34,510
saves a local copy of it and just<font color="#E5E5E5"> serves</font>

124
00:05:32,260 --> 00:05:37,630
it<font color="#E5E5E5"> up to other users thereby speeding up</font>

125
00:05:34,510 --> 00:05:40,300
the users perception<font color="#CCCCCC"> of how fast the</font>

126
00:05:37,630 --> 00:05:42,520
website is working<font color="#E5E5E5"> so far so good</font><font color="#CCCCCC"> and</font>

127
00:05:40,300 --> 00:05:44,830
the cache poisoning<font color="#CCCCCC"> what we want to do</font>

128
00:05:42,520 --> 00:05:46,990
is<font color="#E5E5E5"> send a request to</font><font color="#CCCCCC"> the back-end</font>

129
00:05:44,830 --> 00:05:49,780
<font color="#CCCCCC">application</font><font color="#E5E5E5"> that causes a harmful</font>

130
00:05:46,990 --> 00:05:51,610
response to come back to<font color="#E5E5E5"> us and then</font><font color="#CCCCCC"> we</font>

131
00:05:49,780 --> 00:05:53,890
want the cash to save that<font color="#E5E5E5"> and serve</font>

132
00:05:51,610 --> 00:05:55,750
their harmful<font color="#E5E5E5"> response up to other users</font>

133
00:05:53,890 --> 00:05:59,950
<font color="#E5E5E5">when they're just browsing the</font>

134
00:05:55,750 --> 00:06:03,580
application the<font color="#CCCCCC"> first step to</font><font color="#E5E5E5"> achieving</font>

135
00:05:59,950 --> 00:06:05,979
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is to ask the question with those</font>

136
00:06:03,580 --> 00:06:08,529
first three users how does the cash flow

137
00:06:05,979 --> 00:06:11,258
<font color="#E5E5E5">then they're all fetching the same</font>

138
00:06:08,529 --> 00:06:13,329
course it can't be doing<font color="#CCCCCC"> the bite by</font>

139
00:06:11,259 --> 00:06:15,309
<font color="#CCCCCC">bite</font><font color="#E5E5E5"> comparison on</font><font color="#CCCCCC"> the whole HTTP</font>

140
00:06:13,329 --> 00:06:17,049
requests that the users are<font color="#E5E5E5"> sending</font>

141
00:06:15,309 --> 00:06:19,209
because HTTP requests are full of all

142
00:06:17,049 --> 00:06:21,429
kinds of junk<font color="#CCCCCC"> I</font><font color="#E5E5E5"> like the use of agent if</font>

143
00:06:19,209 --> 00:06:22,749
those uses<font color="#E5E5E5"> had a different browser the</font>

144
00:06:21,429 --> 00:06:25,659
<font color="#CCCCCC">user agent</font><font color="#E5E5E5"> header would be different</font>

145
00:06:22,749 --> 00:06:28,089
than the caching wouldn't work to

146
00:06:25,659 --> 00:06:30,459
<font color="#E5E5E5">resolve this issue caches have</font><font color="#CCCCCC"> the</font>

147
00:06:28,089 --> 00:06:33,789
concept of<font color="#E5E5E5"> cache</font><font color="#CCCCCC"> piece where they say we</font>

148
00:06:30,459 --> 00:06:36,279
<font color="#E5E5E5">only care</font><font color="#CCCCCC"> about certain parts</font><font color="#E5E5E5"> of the</font>

149
00:06:33,789 --> 00:06:39,339
request<font color="#E5E5E5"> and we're just going to ignore</font>

150
00:06:36,279 --> 00:06:42,999
the rest<font color="#E5E5E5"> so generally they only care</font>

151
00:06:39,339 --> 00:06:46,569
about what makes up the<font color="#CCCCCC"> euro</font><font color="#E5E5E5"> so the host</font>

152
00:06:42,999 --> 00:06:47,619
header and the request line and if

153
00:06:46,569 --> 00:06:49,869
<font color="#CCCCCC">anything</font><font color="#E5E5E5"> else is the same</font>

154
00:06:47,619 --> 00:06:53,469
<font color="#E5E5E5">is different</font><font color="#CCCCCC"> they just ignore that it</font>

155
00:06:49,869 --> 00:06:56,469
doesn't matter<font color="#E5E5E5"> so this is fine but it</font>

156
00:06:53,469 --> 00:07:00,159
sets us up for<font color="#CCCCCC"> the next question</font><font color="#E5E5E5"> which</font>

157
00:06:56,469 --> 00:07:06,998
<font color="#CCCCCC">is what happens if something</font><font color="#E5E5E5"> important</font>

158
00:07:00,159 --> 00:07:09,248
is not included in<font color="#CCCCCC"> the cache key so here</font>

159
00:07:06,999 --> 00:07:12,039
we have two requests<font color="#CCCCCC"> they're fetching</font>

160
00:07:09,249 --> 00:07:13,959
the same<font color="#CCCCCC"> URL but using this language</font>

161
00:07:12,039 --> 00:07:16,149
<font color="#E5E5E5">cookie one of them is trying to fetch it</font>

162
00:07:13,959 --> 00:07:18,669
<font color="#CCCCCC">in English</font><font color="#E5E5E5"> and one is trying to fetch it</font>

163
00:07:16,149 --> 00:07:21,849
in Spanish<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that's great</font><font color="#E5E5E5"> that works</font>

164
00:07:18,669 --> 00:07:23,979
absolutely fine until you per cache<font color="#E5E5E5"> in</font>

165
00:07:21,849 --> 00:07:25,599
front of this system<font color="#E5E5E5"> because the</font>

166
00:07:23,979 --> 00:07:28,869
language cookie probably won't be

167
00:07:25,599 --> 00:07:31,688
included<font color="#E5E5E5"> in the cache key and that means</font>

168
00:07:28,869 --> 00:07:33,879
when the English user fetches this white

169
00:07:31,689 --> 00:07:36,099
paper<font color="#E5E5E5"> they will end up accidentally</font>

170
00:07:33,879 --> 00:07:37,869
poisoning the cache with<font color="#E5E5E5"> the English</font>

171
00:07:36,099 --> 00:07:39,609
version of the white<font color="#E5E5E5"> paper and other</font>

172
00:07:37,869 --> 00:07:41,769
users trying<font color="#E5E5E5"> to get in other languages</font>

173
00:07:39,609 --> 00:07:44,318
will<font color="#E5E5E5"> guess end up with the English</font>

174
00:07:41,769 --> 00:07:48,039
version<font color="#E5E5E5"> obviously</font><font color="#CCCCCC"> that in there is just</font>

175
00:07:44,319 --> 00:07:49,629
<font color="#CCCCCC">a nuisance</font><font color="#E5E5E5"> but that's the behavior that</font>

176
00:07:48,039 --> 00:07:53,919
<font color="#E5E5E5">we're going to try to turn to our</font>

177
00:07:49,629 --> 00:07:56,259
<font color="#E5E5E5">advantage in effect anything that's not</font>

178
00:07:53,919 --> 00:07:59,609
<font color="#E5E5E5">part of the cache key is part of the</font>

179
00:07:56,259 --> 00:07:59,609
cache poisoning attacks<font color="#E5E5E5"> office</font>

180
00:08:00,150 --> 00:08:05,710
so this is the<font color="#CCCCCC"> methodology that</font><font color="#E5E5E5"> we're</font>

181
00:08:02,980 --> 00:08:09,040
going<font color="#E5E5E5"> to use to</font><font color="#CCCCCC"> find and exploit</font><font color="#E5E5E5"> web -</font>

182
00:08:05,710 --> 00:08:12,250
poison<font color="#E5E5E5"> first of all you have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> find an</font>

183
00:08:09,040 --> 00:08:16,150
<font color="#E5E5E5">unpaid input or you probably a HTTP</font>

184
00:08:12,250 --> 00:08:17,770
header or a cookie<font color="#E5E5E5"> now</font><font color="#CCCCCC"> fortunately this</font>

185
00:08:16,150 --> 00:08:20,770
step do this manually is a lot of work

186
00:08:17,770 --> 00:08:22,930
but I'm releasing<font color="#CCCCCC"> parameter as an open</font>

187
00:08:20,770 --> 00:08:25,000
source<font color="#E5E5E5"> tool the works in both the</font><font color="#CCCCCC"> Pro</font>

188
00:08:22,930 --> 00:08:27,100
and free versions of burp suite so

189
00:08:25,000 --> 00:08:28,930
everyone<font color="#E5E5E5"> can use that and if you run</font>

190
00:08:27,100 --> 00:08:31,180
that until that<font color="#CCCCCC"> to guess headers or</font>

191
00:08:28,930 --> 00:08:34,030
cookies it will do it<font color="#E5E5E5"> and it should do a</font>

192
00:08:31,180 --> 00:08:36,849
pretty decent job<font color="#E5E5E5"> so that will find you</font>

193
00:08:34,030 --> 00:08:38,260
hopefully some<font color="#E5E5E5"> on key inputs once you</font>

194
00:08:36,849 --> 00:08:39,460
found them the next<font color="#E5E5E5"> step is just to work</font>

195
00:08:38,260 --> 00:08:42,069
out if<font color="#CCCCCC"> you can actually do anything</font>

196
00:08:39,460 --> 00:08:44,770
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> them before you</font><font color="#CCCCCC"> can do</font>

197
00:08:42,070 --> 00:08:47,830
is change<font color="#E5E5E5"> the</font><font color="#CCCCCC"> language well that's a lot</font>

198
00:08:44,770 --> 00:08:50,710
of<font color="#E5E5E5"> him</font><font color="#CCCCCC"> exciting when you're</font><font color="#E5E5E5"> doing these</font>

199
00:08:47,830 --> 00:08:54,100
two steps<font color="#E5E5E5"> it's absolutely crucial to</font>

200
00:08:50,710 --> 00:08:57,610
specify a random<font color="#E5E5E5"> hash Buster on all your</font>

201
00:08:54,100 --> 00:09:00,040
requests if you don't do this<font color="#E5E5E5"> you risk</font>

202
00:08:57,610 --> 00:09:02,440
getting a response<font color="#E5E5E5"> from the cache rather</font>

203
00:09:00,040 --> 00:09:04,390
than from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> back-end server and if you</font>

204
00:09:02,440 --> 00:09:06,790
get a response<font color="#E5E5E5"> from the cache</font><font color="#CCCCCC"> many</font>

205
00:09:04,390 --> 00:09:09,880
<font color="#CCCCCC">unhealed inputs will effectively be</font>

206
00:09:06,790 --> 00:09:12,160
completely<font color="#E5E5E5"> invisible to you I think this</font>

207
00:09:09,880 --> 00:09:14,320
behavior is the reason<font color="#CCCCCC"> that web cache</font>

208
00:09:12,160 --> 00:09:18,160
poisoning has remained so<font color="#E5E5E5"> low-profile</font>

209
00:09:14,320 --> 00:09:19,480
<font color="#CCCCCC">for so many</font><font color="#E5E5E5"> years even though once you</font>

210
00:09:18,160 --> 00:09:21,250
understand it<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> actually very</font>

211
00:09:19,480 --> 00:09:24,550
<font color="#E5E5E5">difficult and it's definitely high</font>

212
00:09:21,250 --> 00:09:26,050
severity so once you've found your

213
00:09:24,550 --> 00:09:27,339
<font color="#E5E5E5">unhidden put you found you can do</font>

214
00:09:26,050 --> 00:09:29,979
something fun with<font color="#CCCCCC"> it</font>

215
00:09:27,340 --> 00:09:32,110
the<font color="#E5E5E5"> next</font><font color="#CCCCCC"> thing is just a training</font><font color="#E5E5E5"> have</font>

216
00:09:29,980 --> 00:09:34,900
it saved in the cache<font color="#E5E5E5"> and served up to</font>

217
00:09:32,110 --> 00:09:36,670
other users<font color="#E5E5E5"> now you might find it's</font>

218
00:09:34,900 --> 00:09:39,490
already been saved<font color="#CCCCCC"> how are you even</font>

219
00:09:36,670 --> 00:09:41,110
doing<font color="#E5E5E5"> anything but if it hasn't it's</font>

220
00:09:39,490 --> 00:09:42,880
probably because the cache is using some

221
00:09:41,110 --> 00:09:45,640
<font color="#E5E5E5">kind of low set saying things like I'm</font>

222
00:09:42,880 --> 00:09:48,640
only gonna cache<font color="#E5E5E5"> URLs with a certain</font>

223
00:09:45,640 --> 00:09:49,930
file extension or content type<font color="#E5E5E5"> or status</font>

224
00:09:48,640 --> 00:09:51,610
code or<font color="#E5E5E5"> something like that</font>

225
00:09:49,930 --> 00:09:54,250
so you'll just<font color="#E5E5E5"> need to</font><font color="#CCCCCC"> reverse engineer</font>

226
00:09:51,610 --> 00:09:56,080
<font color="#E5E5E5">what the caching rules up and then find</font>

227
00:09:54,250 --> 00:10:01,210
a page on<font color="#E5E5E5"> the site</font><font color="#CCCCCC"> that you can</font>

228
00:09:56,080 --> 00:10:02,350
<font color="#E5E5E5">successfully</font><font color="#CCCCCC"> poison when you're doing</font>

229
00:10:01,210 --> 00:10:04,060
<font color="#CCCCCC">this successful when you're doing that</font>

230
00:10:02,350 --> 00:10:05,740
actual poison injection thing you'll

231
00:10:04,060 --> 00:10:08,489
<font color="#CCCCCC">want to stay static safety parameter</font>

232
00:10:05,740 --> 00:10:13,510
more on<font color="#E5E5E5"> that later</font>

233
00:10:08,490 --> 00:10:15,850
so that is all<font color="#E5E5E5"> the theory of</font><font color="#CCCCCC"> gas</font>

234
00:10:13,510 --> 00:10:17,950
poisoning<font color="#CCCCCC"> now let's take a look at what</font>

235
00:10:15,850 --> 00:10:21,040
happens when<font color="#E5E5E5"> we actually apply</font><font color="#CCCCCC"> that to</font>

236
00:10:17,950 --> 00:10:22,750
real websites part of the goal of<font color="#CCCCCC"> this</font>

237
00:10:21,040 --> 00:10:24,430
section<font color="#E5E5E5"> is just to show you</font><font color="#CCCCCC"> that cache</font>

238
00:10:22,750 --> 00:10:25,720
poisoning<font color="#E5E5E5"> actually works and isn't just</font>

239
00:10:24,430 --> 00:10:28,900
<font color="#CCCCCC">some random</font><font color="#E5E5E5"> are but do you think</font><font color="#CCCCCC"> I made</font>

240
00:10:25,720 --> 00:10:31,780
up<font color="#E5E5E5"> but I've chosen these specific</font>

241
00:10:28,900 --> 00:10:33,520
examples<font color="#CCCCCC"> to show you some</font><font color="#E5E5E5"> of the</font>

242
00:10:31,780 --> 00:10:35,740
<font color="#E5E5E5">challenges</font><font color="#CCCCCC"> that you may</font><font color="#E5E5E5"> run</font><font color="#CCCCCC"> into when</font>

243
00:10:33,520 --> 00:10:38,110
doing the cache poisoning<font color="#CCCCCC"> and give you</font>

244
00:10:35,740 --> 00:10:41,200
some ideas as to<font color="#E5E5E5"> how to address those</font>

245
00:10:38,110 --> 00:10:42,910
challenges<font color="#E5E5E5"> as usual</font><font color="#CCCCCC"> I've exclusively</font>

246
00:10:41,200 --> 00:10:46,600
targeted websites that<font color="#E5E5E5"> have bug bounty</font>

247
00:10:42,910 --> 00:10:49,209
programs and all the demos here all the

248
00:10:46,600 --> 00:10:51,460
example sites have fixed<font color="#E5E5E5"> the specific</font>

249
00:10:49,210 --> 00:10:53,710
vulnerabilities I'm showing<font color="#E5E5E5"> you but the</font>

250
00:10:51,460 --> 00:10:58,090
techniques<font color="#E5E5E5"> still work on many many</font>

251
00:10:53,710 --> 00:11:00,100
websites<font color="#E5E5E5"> and frameworks and in these</font>

252
00:10:58,090 --> 00:11:01,720
examples<font color="#CCCCCC"> I'm exploiting</font><font color="#E5E5E5"> targets using</font>

253
00:11:00,100 --> 00:11:06,030
all of the caching<font color="#CCCCCC"> on all of the caches</font>

254
00:11:01,720 --> 00:11:09,040
<font color="#E5E5E5">you can see here and ultimately this</font>

255
00:11:06,030 --> 00:11:10,540
<font color="#E5E5E5">this technique works on all</font><font color="#CCCCCC"> on all</font>

256
00:11:09,040 --> 00:11:12,130
<font color="#E5E5E5">caches out there I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> think there's</font>

257
00:11:10,540 --> 00:11:14,260
any caches that<font color="#E5E5E5"> have any way of</font>

258
00:11:12,130 --> 00:11:15,580
preventing<font color="#E5E5E5"> cache poisoning so please</font>

259
00:11:14,260 --> 00:11:17,560
don't think<font color="#CCCCCC"> that</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> cuz you're using</font>

260
00:11:15,580 --> 00:11:23,050
some funny cache<font color="#E5E5E5"> that's not here for</font>

261
00:11:17,560 --> 00:11:25,989
<font color="#E5E5E5">your safe</font><font color="#CCCCCC"> okay the tip again with we're</font>

262
00:11:23,050 --> 00:11:30,819
<font color="#E5E5E5">gonna have a look at Cerreta</font><font color="#CCCCCC"> com makers</font>

263
00:11:25,990 --> 00:11:32,500
of a popular Linux distribution so the

264
00:11:30,820 --> 00:11:34,180
first thing<font color="#E5E5E5"> you'll notice if you look at</font>

265
00:11:32,500 --> 00:11:35,650
their<font color="#CCCCCC"> homepage is</font><font color="#E5E5E5"> that it</font><font color="#CCCCCC"> doesn't look</font>

266
00:11:34,180 --> 00:11:39,400
very promising from the cache poisoning

267
00:11:35,650 --> 00:11:41,890
point of view we've got<font color="#E5E5E5"> this header that</font>

268
00:11:39,400 --> 00:11:44,740
says please<font color="#E5E5E5"> don't cache this response</font>

269
00:11:41,890 --> 00:11:46,840
and<font color="#CCCCCC"> also there</font><font color="#E5E5E5"> aren't any headers</font><font color="#CCCCCC"> that</font>

270
00:11:44,740 --> 00:11:49,930
<font color="#CCCCCC">suggest</font><font color="#E5E5E5"> that they are actually</font><font color="#CCCCCC"> using</font>

271
00:11:46,840 --> 00:11:51,310
<font color="#E5E5E5">caching in the first place so it might</font>

272
00:11:49,930 --> 00:11:52,689
<font color="#E5E5E5">be</font><font color="#CCCCCC"> tempting just to not even</font><font color="#E5E5E5"> bother</font>

273
00:11:51,310 --> 00:11:56,709
trying<font color="#E5E5E5"> but that</font><font color="#CCCCCC"> would be a mistake</font>

274
00:11:52,690 --> 00:11:58,990
because headers will lighten so if

275
00:11:56,710 --> 00:12:01,300
you've<font color="#CCCCCC"> one parameter on this that will</font>

276
00:11:58,990 --> 00:12:03,220
<font color="#E5E5E5">spot if you specify the X</font><font color="#CCCCCC"> for did host</font>

277
00:12:01,300 --> 00:12:07,120
header the value in<font color="#E5E5E5"> that header is</font>

278
00:12:03,220 --> 00:12:09,280
reflected<font color="#CCCCCC"> inside a</font><font color="#E5E5E5"> URL in the HTML in</font>

279
00:12:07,120 --> 00:12:13,690
the response<font color="#E5E5E5"> so that's our unhidden</font><font color="#CCCCCC"> pub</font>

280
00:12:09,280 --> 00:12:15,790
<font color="#CCCCCC">weight what's the most of this attack to</font>

281
00:12:13,690 --> 00:12:17,530
<font color="#E5E5E5">try on this</font><font color="#CCCCCC"> input</font>

282
00:12:15,790 --> 00:12:20,410
probably cross-site scripting right

283
00:12:17,530 --> 00:12:22,540
<font color="#E5E5E5">since</font><font color="#CCCCCC"> it's bloody everywhere</font><font color="#E5E5E5"> so if we</font>

284
00:12:20,410 --> 00:12:24,850
talk<font color="#CCCCCC"> about short enough it works</font><font color="#E5E5E5"> we can</font>

285
00:12:22,540 --> 00:12:26,260
break out of this attribute<font color="#CCCCCC"> we can break</font>

286
00:12:24,850 --> 00:12:29,020
out the tag and inject some malicious

287
00:12:26,260 --> 00:12:31,720
JavaScript into the spots on the

288
00:12:29,020 --> 00:12:33,579
<font color="#E5E5E5">homepage now by itself this is useless</font>

289
00:12:31,720 --> 00:12:36,310
<font color="#E5E5E5">because we're only exploiting ourselves</font>

290
00:12:33,580 --> 00:12:39,370
here we're fully reliant on the cache to

291
00:12:36,310 --> 00:12:41,140
deliver this payload to our victims so

292
00:12:39,370 --> 00:12:43,270
to see if that's going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> happen we're</font>

293
00:12:41,140 --> 00:12:44,530
going<font color="#E5E5E5"> to pretend to be a normal</font><font color="#CCCCCC"> user so</font>

294
00:12:43,270 --> 00:12:47,680
we're going<font color="#CCCCCC"> to send a request</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

295
00:12:44,530 --> 00:12:49,810
same URL<font color="#CCCCCC"> and without any funny headers</font>

296
00:12:47,680 --> 00:12:52,410
just like a normal<font color="#CCCCCC"> user would how we're</font>

297
00:12:49,810 --> 00:12:56,140
<font color="#CCCCCC">gonna see if our exploit comes back and</font>

298
00:12:52,410 --> 00:12:57,880
sure enough it<font color="#E5E5E5"> does so wait we</font><font color="#CCCCCC"> just got</font>

299
00:12:56,140 --> 00:13:00,520
full<font color="#CCCCCC"> control over</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> home page</font><font color="#E5E5E5"> of</font>

300
00:12:57,880 --> 00:13:03,700
<font color="#CCCCCC">Reddit calm I think wasn't very</font>

301
00:13:00,520 --> 00:13:05,829
<font color="#CCCCCC">difficult</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> only thing I need to</font>

302
00:13:03,700 --> 00:13:08,530
draw your attention<font color="#CCCCCC"> to here is this safe</font>

303
00:13:05,830 --> 00:13:11,920
equals one parameter that<font color="#E5E5E5"> a lighter than</font>

304
00:13:08,530 --> 00:13:13,750
blue<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is not part of Viacom</font><font color="#E5E5E5"> this is</font>

305
00:13:11,920 --> 00:13:16,209
a<font color="#E5E5E5"> safety parameter that I've manually</font>

306
00:13:13,750 --> 00:13:18,880
specified that means that when<font color="#E5E5E5"> we found</font>

307
00:13:16,210 --> 00:13:22,600
<font color="#E5E5E5">this for real lots of Red Hat users</font>

308
00:13:18,880 --> 00:13:23,950
didn't have boxes pop enough so that's

309
00:13:22,600 --> 00:13:26,940
quite important if you're testing

310
00:13:23,950 --> 00:13:30,340
<font color="#CCCCCC">something introduction please forget it</font>

311
00:13:26,940 --> 00:13:32,860
so we've seen headers will lie to<font color="#CCCCCC"> you</font>

312
00:13:30,340 --> 00:13:35,290
but they will<font color="#CCCCCC"> also tell you</font><font color="#E5E5E5"> useful</font>

313
00:13:32,860 --> 00:13:37,930
things so let's pretend that<font color="#E5E5E5"> you're a</font>

314
00:13:35,290 --> 00:13:40,300
malicious person and you want to poison

315
00:13:37,930 --> 00:13:42,729
<font color="#E5E5E5">the real official canonical version of</font>

316
00:13:40,300 --> 00:13:47,500
the<font color="#CCCCCC"> homepage and attack all the</font><font color="#E5E5E5"> visitors</font>

317
00:13:42,730 --> 00:13:50,410
to<font color="#CCCCCC"> a site you</font><font color="#E5E5E5"> effectively in a race with</font>

318
00:13:47,500 --> 00:13:52,780
<font color="#E5E5E5">the genuine users of that site in order</font>

319
00:13:50,410 --> 00:13:55,449
<font color="#E5E5E5">to get your response cached rather than</font>

320
00:13:52,780 --> 00:13:58,030
having<font color="#E5E5E5"> their benign the spots cached</font><font color="#CCCCCC"> so</font>

321
00:13:55,450 --> 00:13:59,980
<font color="#CCCCCC">you need</font><font color="#E5E5E5"> your first request you need</font>

322
00:13:58,030 --> 00:14:02,589
your the quest to be the<font color="#E5E5E5"> first to</font>

323
00:13:59,980 --> 00:14:05,680
request to hit the cache<font color="#CCCCCC"> after the cache</font>

324
00:14:02,590 --> 00:14:07,840
entry expires<font color="#CCCCCC"> and obviously you can just</font>

325
00:14:05,680 --> 00:14:09,939
spam your<font color="#CCCCCC"> request lots of times and</font>

326
00:14:07,840 --> 00:14:13,420
you'll probably get there but<font color="#E5E5E5"> sometimes</font>

327
00:14:09,940 --> 00:14:15,160
headers will help you out this so here

328
00:14:13,420 --> 00:14:16,780
are we looking at unity3d

329
00:14:15,160 --> 00:14:18,910
they make a<font color="#CCCCCC"> well-known</font><font color="#E5E5E5"> comes to game</font>

330
00:14:16,780 --> 00:14:20,860
engine and the<font color="#E5E5E5"> X host header is</font>

331
00:14:18,910 --> 00:14:22,719
reflected in<font color="#E5E5E5"> site is reflected</font><font color="#CCCCCC"> inside</font>

332
00:14:20,860 --> 00:14:25,570
<font color="#E5E5E5">our script source imports so we've got</font>

333
00:14:22,720 --> 00:14:28,480
cross-site scripting<font color="#E5E5E5"> by that but the</font>

334
00:14:25,570 --> 00:14:29,370
interesting thing<font color="#CCCCCC"> is these age and max</font>

335
00:14:28,480 --> 00:14:32,490
age head

336
00:14:29,370 --> 00:14:35,550
taken together those tell us the exact

337
00:14:32,490 --> 00:14:38,040
second that<font color="#CCCCCC"> this response will expire in</font>

338
00:14:35,550 --> 00:14:39,569
<font color="#CCCCCC">the cash so that</font><font color="#E5E5E5"> tells us the exact</font>

339
00:14:38,040 --> 00:14:46,050
second that<font color="#E5E5E5"> we need to send to</font><font color="#CCCCCC"> our</font>

340
00:14:39,570 --> 00:14:48,150
payload<font color="#E5E5E5"> to successfully poison</font><font color="#CCCCCC"> so HTTP</font>

341
00:14:46,050 --> 00:14:51,180
headers can give other clues<font color="#CCCCCC"> too</font>

342
00:14:48,150 --> 00:14:54,480
so this target I can't name<font color="#E5E5E5"> them</font>

343
00:14:51,180 --> 00:14:58,500
unfortunately<font color="#E5E5E5"> but if I cover them who</font>

344
00:14:54,480 --> 00:15:02,100
they are<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> they're pretty</font><font color="#E5E5E5"> well</font>

345
00:14:58,500 --> 00:15:04,920
known anyway<font color="#CCCCCC"> they're using fastly for</font>

346
00:15:02,100 --> 00:15:06,210
their caching and they're reflecting the

347
00:15:04,920 --> 00:15:09,810
export<font color="#E5E5E5"> is what I said</font><font color="#CCCCCC"> in a</font><font color="#E5E5E5"> way that has</font>

348
00:15:06,210 --> 00:15:12,900
exorcists<font color="#E5E5E5"> just like what Ritter had the</font>

349
00:15:09,810 --> 00:15:15,300
<font color="#E5E5E5">interesting thing is the very user agent</font>

350
00:15:12,900 --> 00:15:18,930
header<font color="#E5E5E5"> so that's telling the crash to</font>

351
00:15:15,300 --> 00:15:22,140
add the user agent into<font color="#E5E5E5"> the cache key so</font>

352
00:15:18,930 --> 00:15:24,449
<font color="#E5E5E5">that means this request will poison the</font>

353
00:15:22,140 --> 00:15:25,980
cache but it will only<font color="#E5E5E5"> poison it for</font>

354
00:15:24,450 --> 00:15:30,779
other people visiting<font color="#CCCCCC"> the site with</font><font color="#E5E5E5"> the</font>

355
00:15:25,980 --> 00:15:32,760
same web browser<font color="#CCCCCC"> as me and this is both</font>

356
00:15:30,779 --> 00:15:34,620
a<font color="#CCCCCC"> blessing and a curse</font><font color="#E5E5E5"> it's a bit of a</font>

357
00:15:32,760 --> 00:15:37,080
headache<font color="#E5E5E5"> because if I want to poison the</font>

358
00:15:34,620 --> 00:15:41,460
majority of the visitors to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> site</font>

359
00:15:37,080 --> 00:15:44,220
<font color="#E5E5E5">then I'll need to resend resend this</font>

360
00:15:41,460 --> 00:15:47,010
attack with every possible<font color="#CCCCCC"> user agent</font>

361
00:15:44,220 --> 00:15:49,230
<font color="#CCCCCC">that</font><font color="#E5E5E5"> a visitor might have but on the</font>

362
00:15:47,010 --> 00:15:52,650
other<font color="#E5E5E5"> hand it</font><font color="#CCCCCC"> gives us the chance to</font><font color="#E5E5E5"> be</font>

363
00:15:49,230 --> 00:15:56,070
a bit more creative<font color="#E5E5E5"> about who we target</font>

364
00:15:52,650 --> 00:15:59,040
so for<font color="#E5E5E5"> example imagine that I happen to</font>

365
00:15:56,070 --> 00:16:01,980
know that<font color="#E5E5E5"> the developers</font><font color="#CCCCCC"> of this website</font>

366
00:15:59,040 --> 00:16:03,900
all tend<font color="#E5E5E5"> to use Microsoft edge well</font><font color="#CCCCCC"> what</font>

367
00:16:01,980 --> 00:16:06,600
I<font color="#E5E5E5"> can do is poison this</font><font color="#CCCCCC"> website for</font>

368
00:16:03,900 --> 00:16:07,800
<font color="#E5E5E5">everyone who</font><font color="#CCCCCC"> is not using</font><font color="#E5E5E5"> edge and then</font>

369
00:16:06,600 --> 00:16:09,870
the<font color="#E5E5E5"> developers are going to have a</font>

370
00:16:07,800 --> 00:16:11,339
really<font color="#CCCCCC"> difficult</font><font color="#E5E5E5"> time figuring out why</font>

371
00:16:09,870 --> 00:16:19,770
everyone<font color="#E5E5E5"> visiting their site is</font><font color="#CCCCCC"> getting</font>

372
00:16:11,339 --> 00:16:21,450
exploited all right so so far<font color="#CCCCCC"> we've seen</font>

373
00:16:19,770 --> 00:16:24,000
<font color="#CCCCCC">three websites</font><font color="#E5E5E5"> and they've all been</font>

374
00:16:21,450 --> 00:16:25,650
<font color="#CCCCCC">poisoned using basic reflected</font>

375
00:16:24,000 --> 00:16:28,680
cross-site scripting but life is not

376
00:16:25,650 --> 00:16:32,040
<font color="#CCCCCC">always that easy I hear we're</font><font color="#E5E5E5"> gonna look</font>

377
00:16:28,680 --> 00:16:33,390
at a US government<font color="#E5E5E5"> website they</font><font color="#CCCCCC"> actually</font>

378
00:16:32,040 --> 00:16:35,849
patched this at the day before<font color="#CCCCCC"> by</font>

379
00:16:33,390 --> 00:16:39,199
presentation which<font color="#E5E5E5"> was in the US which</font>

380
00:16:35,850 --> 00:16:40,540
<font color="#E5E5E5">was slightly</font><font color="#CCCCCC"> worrying but it is badged</font>

381
00:16:39,200 --> 00:16:42,400
so here

382
00:16:40,540 --> 00:16:45,400
exported<font color="#CCCCCC"> host is</font><font color="#E5E5E5"> being</font><font color="#CCCCCC"> reflected inside</font>

383
00:16:42,400 --> 00:16:48,340
<font color="#E5E5E5">this data so we</font><font color="#CCCCCC"> actually but we can't</font>

384
00:16:45,400 --> 00:16:50,709
<font color="#E5E5E5">just break</font><font color="#CCCCCC"> out that actually and get</font><font color="#E5E5E5"> XSS</font>

385
00:16:48,340 --> 00:16:52,210
because it's been encoded and<font color="#E5E5E5"> what we</font>

386
00:16:50,710 --> 00:16:54,700
need<font color="#E5E5E5"> to do is figure out what this</font>

387
00:16:52,210 --> 00:16:57,160
attribute is actually for<font color="#E5E5E5"> so in</font><font color="#CCCCCC"> order to</font>

388
00:16:54,700 --> 00:16:59,260
do that I set up<font color="#CCCCCC"> matching</font><font color="#E5E5E5"> replace for</font>

389
00:16:57,160 --> 00:17:01,540
<font color="#CCCCCC">burps week to add this exported host</font>

390
00:16:59,260 --> 00:17:04,660
header to all my traffic<font color="#E5E5E5"> and then I just</font>

391
00:17:01,540 --> 00:17:07,060
browse the<font color="#CCCCCC"> website</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> Y</font><font color="#E5E5E5"> found was when</font>

392
00:17:04,660 --> 00:17:08,770
I loaded certain<font color="#E5E5E5"> pages on the site my</font>

393
00:17:07,060 --> 00:17:11,470
browser would send a request to<font color="#CCCCCC"> the</font>

394
00:17:08,770 --> 00:17:14,260
<font color="#CCCCCC">calibrator server</font><font color="#E5E5E5"> trying to fetch some</font>

395
00:17:11,470 --> 00:17:14,650
kind of<font color="#E5E5E5"> internationalization data from</font>

396
00:17:14,260 --> 00:17:17,530
it

397
00:17:14,650 --> 00:17:19,920
so using this cache poisoning I can make

398
00:17:17,530 --> 00:17:22,440
visitors to date or gov fetch

399
00:17:19,920 --> 00:17:25,810
<font color="#CCCCCC">internationalization data from website</font>

400
00:17:22,440 --> 00:17:28,210
<font color="#E5E5E5">let's have a look at what the state</font><font color="#CCCCCC"> is</font>

401
00:17:25,810 --> 00:17:31,179
supposed<font color="#CCCCCC"> to be it's meant</font><font color="#E5E5E5"> to be a</font>

402
00:17:28,210 --> 00:17:34,270
mapping<font color="#E5E5E5"> of English phrases</font><font color="#CCCCCC"> into the same</font>

403
00:17:31,180 --> 00:17:37,060
phrase<font color="#CCCCCC"> in other</font><font color="#E5E5E5"> languages and the</font>

404
00:17:34,270 --> 00:17:40,870
translated<font color="#E5E5E5"> phrase is then just</font>

405
00:17:37,060 --> 00:17:42,700
concatenate<font color="#E5E5E5"> it straight into the</font><font color="#CCCCCC"> HTML so</font>

406
00:17:40,870 --> 00:17:44,590
what I<font color="#E5E5E5"> can do is tell everyone use my</font>

407
00:17:42,700 --> 00:17:46,360
internationalization file and then in

408
00:17:44,590 --> 00:17:47,709
that file on my server<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> going to</font>

409
00:17:46,360 --> 00:17:50,560
translate<font color="#E5E5E5"> English phrases into</font>

410
00:17:47,710 --> 00:17:52,000
cross-site scripting exploits and then

411
00:17:50,560 --> 00:17:52,570
whenever<font color="#E5E5E5"> you load a page that has shown</font>

412
00:17:52,000 --> 00:17:56,620
more<font color="#E5E5E5"> on it</font>

413
00:17:52,570 --> 00:17:59,439
my injected exploit or<font color="#CCCCCC"> fight this</font>

414
00:17:56,620 --> 00:18:01,209
pattern<font color="#E5E5E5"> of something where you trick</font>

415
00:17:59,440 --> 00:18:03,370
someone into loading<font color="#E5E5E5"> JSON from your</font>

416
00:18:01,210 --> 00:18:05,350
<font color="#CCCCCC">website and then serve</font><font color="#E5E5E5"> them up</font><font color="#CCCCCC"> serve</font>

417
00:18:03,370 --> 00:18:07,510
back malicious<font color="#E5E5E5"> JSON in order to get</font>

418
00:18:05,350 --> 00:18:10,919
<font color="#CCCCCC">Exorcist is one that I've</font><font color="#E5E5E5"> seen over and</font>

419
00:18:07,510 --> 00:18:10,920
over<font color="#E5E5E5"> when doing cache poisoning</font>

420
00:18:11,700 --> 00:18:17,500
now after that exploit<font color="#E5E5E5"> I forgot to</font>

421
00:18:15,700 --> 00:18:19,540
delete the head of injection<font color="#CCCCCC"> rule in</font>

422
00:18:17,500 --> 00:18:23,470
<font color="#E5E5E5">book so book just kept injecting this</font>

423
00:18:19,540 --> 00:18:25,600
header into<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> my traffic and a few</font>

424
00:18:23,470 --> 00:18:27,220
days<font color="#E5E5E5"> later when going when I was about</font>

425
00:18:25,600 --> 00:18:28,929
to close down<font color="#CCCCCC"> book I noticed something</font>

426
00:18:27,220 --> 00:18:31,150
<font color="#CCCCCC">really weird</font><font color="#E5E5E5"> this request had hit the</font>

427
00:18:28,930 --> 00:18:33,250
clout<font color="#CCCCCC"> waiter server it</font><font color="#E5E5E5"> due to this</font>

428
00:18:31,150 --> 00:18:36,730
header<font color="#E5E5E5"> but it didn't seem to</font><font color="#CCCCCC"> be coming</font>

429
00:18:33,250 --> 00:18:38,590
<font color="#CCCCCC">from data.gov</font><font color="#E5E5E5"> in fact it was quite a</font>

430
00:18:36,730 --> 00:18:40,750
mystery where it was<font color="#CCCCCC"> coming from because</font>

431
00:18:38,590 --> 00:18:45,070
<font color="#CCCCCC">I had this a</font><font color="#E5E5E5"> lowercase origin null</font>

432
00:18:40,750 --> 00:18:47,410
header and after some investigation<font color="#E5E5E5"> it</font>

433
00:18:45,070 --> 00:18:48,620
turned out to come<font color="#E5E5E5"> from a core Firefox</font>

434
00:18:47,410 --> 00:18:52,090
feature

435
00:18:48,620 --> 00:18:55,370
so<font color="#E5E5E5"> Firefox has this system called</font>

436
00:18:52,090 --> 00:18:57,289
<font color="#E5E5E5">Mozilla shield which</font><font color="#CCCCCC"> is for kind</font><font color="#E5E5E5"> of</font>

437
00:18:55,370 --> 00:18:59,270
forcibly<font color="#E5E5E5"> and silently installing</font>

438
00:18:57,289 --> 00:19:01,850
extensions<font color="#E5E5E5"> in the background for</font>

439
00:18:59,270 --> 00:19:04,370
research and marketing purposes<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

440
00:19:01,850 --> 00:19:05,750
turned on by default<font color="#E5E5E5"> in Firefox you</font>

441
00:19:04,370 --> 00:19:08,449
might have actually heard<font color="#E5E5E5"> of it because</font>

442
00:19:05,750 --> 00:19:11,059
it hit the news<font color="#CCCCCC"> late last year when</font>

443
00:19:08,450 --> 00:19:13,010
Mozilla decided to install a mr. robot

444
00:19:11,059 --> 00:19:16,490
extension on millions<font color="#E5E5E5"> of computers</font>

445
00:19:13,010 --> 00:19:17,960
worldwide and some people<font color="#E5E5E5"> got upset</font><font color="#CCCCCC"> so</font>

446
00:19:16,490 --> 00:19:20,179
anyway<font color="#E5E5E5"> so yeah if</font><font color="#CCCCCC"> you're you if you're</font>

447
00:19:17,960 --> 00:19:22,399
running Firefox<font color="#CCCCCC"> when you open up</font><font color="#E5E5E5"> Firefox</font>

448
00:19:20,179 --> 00:19:25,610
and like<font color="#E5E5E5"> periodically every 30 minutes</font>

449
00:19:22,399 --> 00:19:27,678
<font color="#CCCCCC">it</font><font color="#E5E5E5"> sends a polling request that looks</font>

450
00:19:25,610 --> 00:19:30,799
like what you can see here<font color="#CCCCCC"> and this is</font>

451
00:19:27,679 --> 00:19:34,580
fetching<font color="#CCCCCC"> a list of URLs and one</font><font color="#E5E5E5"> of these</font>

452
00:19:30,799 --> 00:19:36,590
URLs<font color="#CCCCCC"> points</font><font color="#E5E5E5"> to a list of recipes which</font>

453
00:19:34,580 --> 00:19:40,399
basically specifying what Firefox

454
00:19:36,590 --> 00:19:42,620
shouldn't stop and what happened was

455
00:19:40,399 --> 00:19:45,020
<font color="#E5E5E5">Burke had injected this exported host</font>

456
00:19:42,620 --> 00:19:47,658
header and<font color="#CCCCCC"> that had overridden the URLs</font>

457
00:19:45,020 --> 00:19:50,658
being<font color="#E5E5E5"> returned to me and then Firefox</font>

458
00:19:47,659 --> 00:19:53,120
had fetched<font color="#E5E5E5"> the recipe list from</font><font color="#CCCCCC"> my</font>

459
00:19:50,659 --> 00:19:55,490
<font color="#E5E5E5">website and sure</font><font color="#CCCCCC"> enough this site was</font>

460
00:19:53,120 --> 00:19:58,010
using nginx<font color="#E5E5E5"> with caching and didn't have</font>

461
00:19:55,490 --> 00:20:00,080
that in<font color="#E5E5E5"> the cache key so the end was</font>

462
00:19:58,010 --> 00:20:02,210
always<font color="#E5E5E5"> I can</font><font color="#CCCCCC"> actually make every</font><font color="#E5E5E5"> Firefox</font>

463
00:20:00,080 --> 00:20:04,879
installation on the planet<font color="#E5E5E5"> connect him</font>

464
00:20:02,210 --> 00:20:11,029
what his site<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this list of</font><font color="#CCCCCC"> recipes</font>

465
00:20:04,880 --> 00:20:13,730
<font color="#E5E5E5">which was quite exciting so so Mozilla</font>

466
00:20:11,029 --> 00:20:16,159
<font color="#CCCCCC">to their</font><font color="#E5E5E5"> credit was smart enough</font><font color="#CCCCCC"> to sign</font>

467
00:20:13,730 --> 00:20:17,990
these<font color="#E5E5E5"> recipes so what I couldn't do was</font>

468
00:20:16,159 --> 00:20:20,450
just<font color="#CCCCCC"> make a malicious extension and</font>

469
00:20:17,990 --> 00:20:24,230
install<font color="#E5E5E5"> that</font><font color="#CCCCCC"> 150 million computers in</font>

470
00:20:20,450 --> 00:20:26,929
<font color="#CCCCCC">one go but there were various other</font>

471
00:20:24,230 --> 00:20:29,270
<font color="#E5E5E5">things that I could still do so I could</font>

472
00:20:26,929 --> 00:20:31,520
replay<font color="#CCCCCC"> any old recipes that they'd ever</font>

473
00:20:29,270 --> 00:20:34,070
use any extension they'd ever<font color="#E5E5E5"> installed</font>

474
00:20:31,520 --> 00:20:37,340
by<font color="#CCCCCC"> this</font><font color="#E5E5E5"> system I could just force that</font>

475
00:20:34,070 --> 00:20:39,230
on every Firefox world right and so if I

476
00:20:37,340 --> 00:20:41,059
knew<font color="#E5E5E5"> of an extension with a known</font>

477
00:20:39,230 --> 00:20:44,480
vulnerability<font color="#E5E5E5"> in it I could just force</font>

478
00:20:41,059 --> 00:20:45,620
that<font color="#CCCCCC"> non vulnerability on everybody also</font>

479
00:20:44,480 --> 00:20:47,179
I could<font color="#E5E5E5"> force the</font><font color="#CCCCCC"> Missis a robot</font>

480
00:20:45,620 --> 00:20:52,129
extension on<font color="#E5E5E5"> everyone which would be</font>

481
00:20:47,179 --> 00:20:54,260
<font color="#E5E5E5">hilarious</font><font color="#CCCCCC"> also there were unsigned</font>

482
00:20:52,130 --> 00:20:57,399
versions of all of<font color="#CCCCCC"> these recipes</font><font color="#E5E5E5"> which</font>

483
00:20:54,260 --> 00:20:59,629
were used by Firefox<font color="#E5E5E5"> but were used by</font>

484
00:20:57,399 --> 00:21:02,479
<font color="#E5E5E5">Mozilla's back-end infrastructure</font>

485
00:20:59,630 --> 00:21:05,360
related<font color="#CCCCCC"> to the system for developing</font>

486
00:21:02,480 --> 00:21:06,620
recipes so potentially using<font color="#E5E5E5"> that I</font>

487
00:21:05,360 --> 00:21:08,780
could have got a foothold in<font color="#E5E5E5"> the</font>

488
00:21:06,620 --> 00:21:11,239
infrastructure<font color="#E5E5E5"> gained access to the</font>

489
00:21:08,780 --> 00:21:13,639
signing<font color="#CCCCCC"> key and then got my</font><font color="#E5E5E5"> 50 million</font>

490
00:21:11,240 --> 00:21:17,140
<font color="#CCCCCC">powers a botnet I</font><font color="#E5E5E5"> imported this to them</font>

491
00:21:13,640 --> 00:21:17,140
<font color="#E5E5E5">and they patched it really quite quickly</font>

492
00:21:18,760 --> 00:21:24,890
so another reoccurring theme in cache

493
00:21:22,220 --> 00:21:27,380
poisoning<font color="#E5E5E5"> is that we'll see something</font>

494
00:21:24,890 --> 00:21:30,830
<font color="#CCCCCC">that the first clue looks completely</font>

495
00:21:27,380 --> 00:21:32,809
useless<font color="#CCCCCC"> like this here on this</font><font color="#E5E5E5"> redacted</font>

496
00:21:30,830 --> 00:21:36,230
site which is a<font color="#CCCCCC"> well-known computer game</font>

497
00:21:32,809 --> 00:21:37,908
<font color="#E5E5E5">the exported host header the value</font>

498
00:21:36,230 --> 00:21:41,720
<font color="#CCCCCC">former is reflected inside</font><font color="#E5E5E5"> the domain</font>

499
00:21:37,909 --> 00:21:44,350
attribute of the cookie<font color="#CCCCCC"> by itself as far</font>

500
00:21:41,720 --> 00:21:46,970
<font color="#E5E5E5">as I know that's pretty much useless</font>

501
00:21:44,350 --> 00:21:48,860
also there's another<font color="#CCCCCC"> unhidden</font><font color="#E5E5E5"> book the</font>

502
00:21:46,970 --> 00:21:50,110
<font color="#E5E5E5">exported scheme header if we set</font><font color="#CCCCCC"> it to</font>

503
00:21:48,860 --> 00:21:53,889
anything<font color="#E5E5E5"> other than</font>

504
00:21:50,110 --> 00:21:55,668
<font color="#CCCCCC">HTTPS causes a redirect to that</font><font color="#E5E5E5"> domain</font>

505
00:21:53,890 --> 00:22:00,590
<font color="#E5E5E5">over</font><font color="#CCCCCC"> HTTPS</font>

506
00:21:55,669 --> 00:22:02,470
<font color="#E5E5E5">once again by</font><font color="#CCCCCC"> itself</font><font color="#E5E5E5"> uses but if we send</font>

507
00:22:00,590 --> 00:22:04,970
<font color="#CCCCCC">both of these</font><font color="#E5E5E5"> headers at the same time</font>

508
00:22:02,470 --> 00:22:07,399
suddenly<font color="#CCCCCC"> we've got a redirect</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> a</font>

509
00:22:04,970 --> 00:22:09,240
<font color="#CCCCCC">website</font><font color="#E5E5E5"> of our choice so</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> convert</font>

510
00:22:07,399 --> 00:22:12,870
because<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> happening at the server</font>

511
00:22:09,240 --> 00:22:15,600
we can do this to any any response on

512
00:22:12,870 --> 00:22:17,939
the entire application<font color="#CCCCCC"> ISO on this</font>

513
00:22:15,600 --> 00:22:20,699
specific site<font color="#CCCCCC"> I</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> veto back post</font>

514
00:22:17,940 --> 00:22:23,610
requests in order<font color="#E5E5E5"> to steal CCF tokens</font>

515
00:22:20,700 --> 00:22:26,159
<font color="#E5E5E5">and I could</font><font color="#CCCCCC"> also once again redirect a</font>

516
00:22:23,610 --> 00:22:28,110
JSON fetch to make them fetch some some

517
00:22:26,159 --> 00:22:35,340
malicious<font color="#E5E5E5"> that JSON from my site and get</font>

518
00:22:28,110 --> 00:22:37,168
Dom XSS<font color="#E5E5E5"> now so far we've exploited loads</font>

519
00:22:35,340 --> 00:22:40,709
of sites<font color="#E5E5E5"> fundamentally because they use</font>

520
00:22:37,169 --> 00:22:42,179
headers<font color="#CCCCCC"> to create your votes</font><font color="#E5E5E5"> some</font>

521
00:22:40,710 --> 00:22:45,870
<font color="#E5E5E5">systems go beyond that and they use</font>

522
00:22:42,179 --> 00:22:48,630
<font color="#E5E5E5">headers for internal routing so on good</font>

523
00:22:45,870 --> 00:22:52,350
fire calm their website is hosted with

524
00:22:48,630 --> 00:22:54,630
<font color="#E5E5E5">HubSpot and HubSpot trusts the exported</font>

525
00:22:52,350 --> 00:22:57,389
server header to specify which client

526
00:22:54,630 --> 00:22:59,220
you're connecting to now we can't

527
00:22:57,390 --> 00:23:01,020
<font color="#E5E5E5">directly exploit this with cross-site</font>

528
00:22:59,220 --> 00:23:03,649
scripting because it's encoded<font color="#E5E5E5"> what we</font>

529
00:23:01,020 --> 00:23:06,809
need to do is go to<font color="#E5E5E5"> HubSpot comm</font>

530
00:23:03,649 --> 00:23:08,639
register our<font color="#CCCCCC"> loading site on</font><font color="#E5E5E5"> HubSpot put</font>

531
00:23:06,809 --> 00:23:11,639
a malicious HTML on that site<font color="#CCCCCC"> because</font>

532
00:23:08,640 --> 00:23:14,669
they<font color="#E5E5E5"> let us and then specify my domain</font>

533
00:23:11,640 --> 00:23:16,289
when<font color="#CCCCCC"> I'm accessing</font><font color="#E5E5E5"> go to Viacom which so</font>

534
00:23:14,669 --> 00:23:18,690
that gets our malicious HTML coming back

535
00:23:16,289 --> 00:23:21,570
and then<font color="#E5E5E5"> CloudFlare will help me save</font>

536
00:23:18,690 --> 00:23:23,730
that<font color="#E5E5E5"> and serve</font><font color="#CCCCCC"> that up so</font><font color="#E5E5E5"> using this we</font>

537
00:23:21,570 --> 00:23:26,879
could take full control over<font color="#E5E5E5"> go TOCOM</font>

538
00:23:23,730 --> 00:23:31,230
and any page on anyone else using

539
00:23:26,880 --> 00:23:34,049
<font color="#E5E5E5">HubSpot now</font><font color="#CCCCCC"> i reported this</font><font color="#E5E5E5"> to go</font><font color="#CCCCCC"> ty</font><font color="#E5E5E5"> who</font>

540
00:23:31,230 --> 00:23:35,669
passed<font color="#CCCCCC"> it on</font><font color="#E5E5E5"> to HubSpot who responded to</font>

541
00:23:34,049 --> 00:23:41,250
<font color="#CCCCCC">the issue by a permanent in banning my</font>

542
00:23:35,669 --> 00:23:43,980
IP address<font color="#E5E5E5"> which wasn't very polite</font><font color="#CCCCCC"> but</font>

543
00:23:41,250 --> 00:23:46,440
I did<font color="#CCCCCC"> check back later on by passing the</font>

544
00:23:43,980 --> 00:23:48,179
<font color="#CCCCCC">baton and</font><font color="#E5E5E5"> they have patched it</font><font color="#CCCCCC"> too so if</font>

545
00:23:46,440 --> 00:23:50,690
you're using<font color="#CCCCCC"> card spot</font><font color="#E5E5E5"> I think</font><font color="#CCCCCC"> you'll</font>

546
00:23:48,179 --> 00:23:50,690
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> okay</font>

547
00:23:52,570 --> 00:23:58,490
<font color="#E5E5E5">okay this one's my second</font><font color="#CCCCCC"> favorite</font>

548
00:23:55,520 --> 00:24:00,920
<font color="#E5E5E5">attack partly because I'm exploiting the</font>

549
00:23:58,490 --> 00:24:05,300
security company because they used their

550
00:24:00,920 --> 00:24:09,650
own security<font color="#E5E5E5"> product on their website so</font>

551
00:24:05,300 --> 00:24:13,730
<font color="#CCCCCC">here below CloudFlare comm</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> hosted</font>

552
00:24:09,650 --> 00:24:15,290
with<font color="#CCCCCC"> ghost and ghost are doing something</font>

553
00:24:13,730 --> 00:24:16,640
with the exported<font color="#CCCCCC"> post tenet if you</font>

554
00:24:15,290 --> 00:24:19,580
<font color="#CCCCCC">specify it we</font><font color="#E5E5E5"> just get this meat</font>

555
00:24:16,640 --> 00:24:21,770
<font color="#E5E5E5">Oviraptor / Fable so it looks a little</font>

556
00:24:19,580 --> 00:24:23,449
<font color="#CCCCCC">like what we just</font><font color="#E5E5E5"> saw</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> HubSpot but if</font>

557
00:24:21,770 --> 00:24:25,340
we try the technique the worked on

558
00:24:23,450 --> 00:24:28,190
<font color="#E5E5E5">HubSpot and register ourselves with</font>

559
00:24:25,340 --> 00:24:30,500
<font color="#E5E5E5">ghost it doesn't work we get the correct</font>

560
00:24:28,190 --> 00:24:32,180
response<font color="#E5E5E5"> after a mysterious</font><font color="#CCCCCC"> ten seconds</font>

561
00:24:30,500 --> 00:24:35,270
<font color="#E5E5E5">wait</font><font color="#CCCCCC"> but I never figured out the cause</font>

562
00:24:32,180 --> 00:24:38,210
off in<font color="#E5E5E5"> order to successfully exploit</font>

563
00:24:35,270 --> 00:24:41,720
this we need to hit a<font color="#E5E5E5"> different part in</font>

564
00:24:38,210 --> 00:24:44,510
<font color="#E5E5E5">ghost stuck so what we need</font><font color="#CCCCCC"> to do is</font>

565
00:24:41,720 --> 00:24:46,630
register<font color="#CCCCCC"> ghost</font><font color="#E5E5E5"> and specify a custom</font>

566
00:24:44,510 --> 00:24:49,370
domain name white wife top party and

567
00:24:46,630 --> 00:24:52,910
<font color="#CCCCCC">also and then in the exported host</font>

568
00:24:49,370 --> 00:24:54,530
header put our ghost<font color="#E5E5E5"> subdomain so this</font>

569
00:24:52,910 --> 00:24:56,660
is a<font color="#E5E5E5"> domain that they issue</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> of their</font>

570
00:24:54,530 --> 00:24:58,670
<font color="#E5E5E5">clients with and that will trigger a we</font>

571
00:24:56,660 --> 00:25:01,760
dive<font color="#E5E5E5"> XY domain and that</font><font color="#CCCCCC"> comes from a</font>

572
00:24:58,670 --> 00:25:04,070
<font color="#CCCCCC">different part of their HTTP stack and</font>

573
00:25:01,760 --> 00:25:07,120
as a result we can<font color="#CCCCCC"> over write any</font>

574
00:25:04,070 --> 00:25:11,149
response with the redirect to our<font color="#E5E5E5"> domain</font>

575
00:25:07,120 --> 00:25:14,300
so here we're<font color="#E5E5E5"> kind of halfway to an</font>

576
00:25:11,150 --> 00:25:17,570
exploit this is great but<font color="#E5E5E5"> we need this</font>

577
00:25:14,300 --> 00:25:19,070
response to get cached<font color="#E5E5E5"> and on this site</font>

578
00:25:17,570 --> 00:25:21,669
<font color="#E5E5E5">it was configured to already cache</font>

579
00:25:19,070 --> 00:25:25,520
responses with<font color="#E5E5E5"> a certain file extensions</font>

580
00:25:21,670 --> 00:25:28,160
so I could read over JPEGs<font color="#CCCCCC"> and images</font>

581
00:25:25,520 --> 00:25:31,220
and<font color="#CCCCCC"> suchlike</font><font color="#E5E5E5"> and basically inject my</font>

582
00:25:28,160 --> 00:25:31,970
images into<font color="#E5E5E5"> other people's blocks which</font>

583
00:25:31,220 --> 00:25:35,330
is pretty cool

584
00:25:31,970 --> 00:25:37,160
<font color="#CCCCCC">it's not really that</font><font color="#E5E5E5"> serious</font><font color="#CCCCCC"> what we</font>

585
00:25:35,330 --> 00:25:40,850
want<font color="#E5E5E5"> to do is hijack to</font><font color="#CCCCCC"> JavaScript</font>

586
00:25:37,160 --> 00:25:44,060
<font color="#E5E5E5">import right and JavaScript responses</font>

587
00:25:40,850 --> 00:25:47,540
were getting cached<font color="#CCCCCC"> but the redirect</font><font color="#E5E5E5"> the</font>

588
00:25:44,060 --> 00:25:51,110
ghost was issuing used HTTP rather than

589
00:25:47,540 --> 00:25:53,540
<font color="#E5E5E5">HTTP and that meant</font><font color="#CCCCCC"> that browsers mixed</font>

590
00:25:51,110 --> 00:25:55,000
content protection<font color="#E5E5E5"> or kick in and block</font>

591
00:25:53,540 --> 00:25:57,710
this video<font color="#CCCCCC"> rect</font>

592
00:25:55,000 --> 00:25:59,540
completely preventing the exploit from

593
00:25:57,710 --> 00:26:00,290
working and<font color="#CCCCCC"> the same thing happen</font><font color="#E5E5E5"> with</font>

594
00:25:59,540 --> 00:26:02,240
CSS

595
00:26:00,290 --> 00:26:03,770
this proved out to be a really

596
00:26:02,240 --> 00:26:06,590
challenging<font color="#E5E5E5"> problem</font><font color="#CCCCCC"> I spent ages trying</font>

597
00:26:03,770 --> 00:26:07,940
to find out a way<font color="#CCCCCC"> to bypass it</font><font color="#E5E5E5"> and ages</font>

598
00:26:06,590 --> 00:26:12,590
for trying to find<font color="#CCCCCC"> a way</font><font color="#E5E5E5"> to make this</font>

599
00:26:07,940 --> 00:26:14,810
protocol use HTTPS instead<font color="#E5E5E5"> and I ended</font>

600
00:26:12,590 --> 00:26:16,399
<font color="#E5E5E5">up even considering contacting</font><font color="#CCCCCC"> ghost and</font>

601
00:26:14,810 --> 00:26:19,460
just asking them<font color="#CCCCCC"> to</font><font color="#E5E5E5"> change this to</font><font color="#CCCCCC"> hate</font>

602
00:26:16,400 --> 00:26:23,090
<font color="#CCCCCC">it fierce there was a minor ethical</font>

603
00:26:19,460 --> 00:26:25,160
issues with<font color="#E5E5E5"> that plan</font><font color="#CCCCCC"> so instead I</font>

604
00:26:23,090 --> 00:26:27,830
decided to try and<font color="#E5E5E5"> crowdsource</font><font color="#CCCCCC"> a</font>

605
00:26:25,160 --> 00:26:29,690
solution<font color="#CCCCCC"> I have this hitting</font><font color="#E5E5E5"> game called</font>

606
00:26:27,830 --> 00:26:32,090
hacksaw and<font color="#E5E5E5"> I put a level and hacksaw</font>

607
00:26:29,690 --> 00:26:34,160
<font color="#E5E5E5">that replicated</font><font color="#CCCCCC"> the problem that I'd run</font>

608
00:26:32,090 --> 00:26:36,199
<font color="#CCCCCC">into and then I said there's no known</font>

609
00:26:34,160 --> 00:26:39,130
<font color="#CCCCCC">solution</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> this level and if</font><font color="#E5E5E5"> you find</font>

610
00:26:36,200 --> 00:26:41,750
it<font color="#E5E5E5"> I'll split the bounty with you</font><font color="#CCCCCC"> 50/50</font>

611
00:26:39,130 --> 00:26:44,090
and<font color="#E5E5E5"> that led to have a great community</font>

612
00:26:41,750 --> 00:26:47,270
response followed by<font color="#CCCCCC"> - or some solutions</font>

613
00:26:44,090 --> 00:26:50,240
the<font color="#E5E5E5"> first one or someone found in Safari</font>

614
00:26:47,270 --> 00:26:51,920
<font color="#CCCCCC">if the website you'll</font><font color="#E5E5E5"> be directing to is</font>

615
00:26:50,240 --> 00:26:55,130
in safaris strict Transport Security

616
00:26:51,920 --> 00:26:57,890
cash in<font color="#E5E5E5"> the video</font><font color="#CCCCCC"> met will get upgraded</font>

617
00:26:55,130 --> 00:27:02,710
<font color="#E5E5E5">to HTTPS before the mixed content block</font>

618
00:26:57,890 --> 00:27:05,360
happens so that<font color="#CCCCCC"> will work</font><font color="#E5E5E5"> also latest</font>

619
00:27:02,710 --> 00:27:08,720
<font color="#E5E5E5">sound</font><font color="#CCCCCC"> and presented here a couple of</font>

620
00:27:05,360 --> 00:27:12,290
hours ago<font color="#E5E5E5"> found</font><font color="#CCCCCC"> there on edge</font><font color="#E5E5E5"> you can</font>

621
00:27:08,720 --> 00:27:15,080
issue a 302<font color="#E5E5E5"> redirect over HTTP and as</font>

622
00:27:12,290 --> 00:27:17,570
long as<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> going into any HTTP URL</font>

623
00:27:15,080 --> 00:27:21,439
<font color="#CCCCCC">there just mix content protection or</font>

624
00:27:17,570 --> 00:27:22,700
just spectacularly fail that that's a

625
00:27:21,440 --> 00:27:25,160
vulnerability niche

626
00:27:22,700 --> 00:27:27,800
so Microsoft might want to fix<font color="#E5E5E5"> that at</font>

627
00:27:25,160 --> 00:27:29,930
some<font color="#CCCCCC"> point yes so the end result</font><font color="#E5E5E5"> is if</font>

628
00:27:27,800 --> 00:27:32,570
you go to any good ghost<font color="#E5E5E5"> posted blog</font>

629
00:27:29,930 --> 00:27:34,550
like blog<font color="#CCCCCC"> cocktail for their calm in</font>

630
00:27:32,570 --> 00:27:36,800
<font color="#E5E5E5">Safari</font><font color="#CCCCCC"> your edge I could execute</font>

631
00:27:34,550 --> 00:27:39,649
arbitrary JavaScript<font color="#E5E5E5"> and if you go there</font>

632
00:27:36,800 --> 00:27:44,990
<font color="#E5E5E5">in any other browser I can hijack images</font>

633
00:27:39,650 --> 00:27:47,480
and track you that way a list okay if

634
00:27:44,990 --> 00:27:53,390
things<font color="#E5E5E5"> start to get more</font><font color="#CCCCCC"> difficult</font>

635
00:27:47,480 --> 00:27:57,860
<font color="#E5E5E5">though so here we can only poison this</font>

636
00:27:53,390 --> 00:27:59,390
open this og URL meta property<font color="#E5E5E5"> we can't</font>

637
00:27:57,860 --> 00:28:02,300
break out so we have to<font color="#E5E5E5"> find out what</font>

638
00:27:59,390 --> 00:28:05,260
it's<font color="#CCCCCC"> for Oh et stands for Open Graph</font><font color="#E5E5E5"> so</font>

639
00:28:02,300 --> 00:28:07,820
the point of<font color="#E5E5E5"> this property is to specify</font>

640
00:28:05,260 --> 00:28:10,300
<font color="#E5E5E5">what happens when someone shares this</font>

641
00:28:07,820 --> 00:28:12,370
page on<font color="#E5E5E5"> Facebook</font><font color="#CCCCCC"> by the by</font>

642
00:28:10,300 --> 00:28:14,889
clicking like a share page share button

643
00:28:12,370 --> 00:28:16,719
on this<font color="#E5E5E5"> page or just by pasting the</font><font color="#CCCCCC"> URL</font>

644
00:28:14,890 --> 00:28:20,320
<font color="#E5E5E5">and Facebook or Twitter or other social</font>

645
00:28:16,720 --> 00:28:22,930
media<font color="#CCCCCC"> whatever so we can kind of</font>

646
00:28:20,320 --> 00:28:25,149
partially hijack shares with this<font color="#E5E5E5"> also</font>

647
00:28:22,930 --> 00:28:28,360
<font color="#CCCCCC">in order</font><font color="#E5E5E5"> to get this response cached</font><font color="#CCCCCC"> I</font>

648
00:28:25,150 --> 00:28:31,780
had to<font color="#CCCCCC"> specify this</font><font color="#E5E5E5"> cookie yeah the</font>

649
00:28:28,360 --> 00:28:34,330
session ID for some reason<font color="#CCCCCC"> and I had to</font>

650
00:28:31,780 --> 00:28:35,860
<font color="#E5E5E5">fetch a specific page on the site but I</font>

651
00:28:34,330 --> 00:28:38,830
had the right caching headers in<font color="#E5E5E5"> the</font>

652
00:28:35,860 --> 00:28:40,990
spots<font color="#CCCCCC"> but even</font><font color="#E5E5E5"> having done all of this</font>

653
00:28:38,830 --> 00:28:44,350
<font color="#E5E5E5">when I tried to share the page it wasn't</font>

654
00:28:40,990 --> 00:28:47,080
getting hijacked and this turned out to

655
00:28:44,350 --> 00:28:49,090
<font color="#E5E5E5">me because they were using cloud flare</font>

656
00:28:47,080 --> 00:28:52,120
and cloud flare has<font color="#CCCCCC"> a lot of caches and</font>

657
00:28:49,090 --> 00:28:54,459
I was poisoning Akash near the<font color="#E5E5E5"> UK</font>

658
00:28:52,120 --> 00:28:59,320
somewhere and<font color="#E5E5E5"> Facebook was hitting a</font>

659
00:28:54,460 --> 00:29:02,140
cache in Atlanta so I<font color="#CCCCCC"> googled cheap</font><font color="#E5E5E5"> VPS</font>

660
00:28:59,320 --> 00:29:04,450
servers in Atlanta and I got one<font color="#E5E5E5"> and I</font>

661
00:29:02,140 --> 00:29:08,800
did the poisoning from<font color="#E5E5E5"> there and sure</font>

662
00:29:04,450 --> 00:29:11,170
enough<font color="#E5E5E5"> that worked</font><font color="#CCCCCC"> so this is a video I</font>

663
00:29:08,800 --> 00:29:12,220
had to redact<font color="#E5E5E5"> it quite a</font><font color="#CCCCCC"> lot</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> say</font>

664
00:29:11,170 --> 00:29:13,630
<font color="#E5E5E5">you've been</font><font color="#CCCCCC"> oh definitely use your</font>

665
00:29:12,220 --> 00:29:15,640
imagination but<font color="#E5E5E5"> basically we've got</font><font color="#CCCCCC"> a</font>

666
00:29:13,630 --> 00:29:17,620
website<font color="#CCCCCC"> well-known computer game</font><font color="#E5E5E5"> you</font>

667
00:29:15,640 --> 00:29:19,600
press the share button it ends up

668
00:29:17,620 --> 00:29:24,030
sharing my site<font color="#CCCCCC"> I've got full control</font>

669
00:29:19,600 --> 00:29:28,290
<font color="#E5E5E5">over what</font><font color="#CCCCCC"> happens then amusingly</font><font color="#E5E5E5"> a</font>

670
00:29:24,030 --> 00:29:30,940
<font color="#E5E5E5">facebook also caches this for spots so</font>

671
00:29:28,290 --> 00:29:32,649
when I report this vulnerability<font color="#CCCCCC"> first</font>

672
00:29:30,940 --> 00:29:34,270
they've<font color="#CCCCCC"> gotta</font><font color="#E5E5E5"> fix the vulnerability</font><font color="#CCCCCC"> and</font>

673
00:29:32,650 --> 00:29:36,280
then they've<font color="#CCCCCC"> got</font><font color="#E5E5E5"> to clear they've got</font>

674
00:29:34,270 --> 00:29:38,650
<font color="#CCCCCC">approach their</font><font color="#E5E5E5"> CloudFlare cache but even</font>

675
00:29:36,280 --> 00:29:40,420
<font color="#E5E5E5">that even</font><font color="#CCCCCC"> after doing</font><font color="#E5E5E5"> that likes on that</font>

676
00:29:38,650 --> 00:29:41,710
page is still being hijacked<font color="#CCCCCC"> because</font>

677
00:29:40,420 --> 00:29:43,900
they<font color="#CCCCCC"> just</font><font color="#E5E5E5"> have to wait for</font><font color="#CCCCCC"> facebook's</font>

678
00:29:41,710 --> 00:29:44,560
cache to expire as well so it's quite<font color="#CCCCCC"> a</font>

679
00:29:43,900 --> 00:29:49,420
<font color="#E5E5E5">persistent</font>

680
00:29:44,560 --> 00:29:52,149
kind of attack now that was<font color="#E5E5E5"> great but</font>

681
00:29:49,420 --> 00:29:54,160
<font color="#CCCCCC">obviously hiring</font><font color="#E5E5E5"> a VPS is a bit of a</font>

682
00:29:52,150 --> 00:29:56,760
headache if we want to<font color="#E5E5E5"> do that every</font>

683
00:29:54,160 --> 00:29:59,500
time<font color="#E5E5E5"> we want to poison a specific cache</font>

684
00:29:56,760 --> 00:30:04,390
<font color="#CCCCCC">so I decided</font><font color="#E5E5E5"> to investigate whether we</font>

685
00:29:59,500 --> 00:30:07,090
really<font color="#CCCCCC"> needed</font><font color="#E5E5E5"> to do</font><font color="#CCCCCC"> that but now cloud</font>

686
00:30:04,390 --> 00:30:09,850
<font color="#CCCCCC">flür</font><font color="#E5E5E5"> have a fantastic feature where if</font>

687
00:30:07,090 --> 00:30:12,399
you access CDN cgi slash trace on any

688
00:30:09,850 --> 00:30:14,199
cloud<font color="#E5E5E5"> for Everest insight you get this</font>

689
00:30:12,400 --> 00:30:18,100
kind of trace page which has<font color="#E5E5E5"> some</font>

690
00:30:14,200 --> 00:30:21,050
metadata including this<font color="#E5E5E5"> Colo line which</font>

691
00:30:18,100 --> 00:30:24,070
<font color="#E5E5E5">tells you which cache</font><font color="#CCCCCC"> you've hit</font>

692
00:30:21,050 --> 00:30:25,190
and so I<font color="#E5E5E5"> did was I'm a little</font><font color="#CCCCCC"> Bosch</font>

693
00:30:24,070 --> 00:30:26,600
one-liner

694
00:30:25,190 --> 00:30:30,200
<font color="#E5E5E5">because I don't know how to</font><font color="#CCCCCC"> our</font>

695
00:30:26,600 --> 00:30:34,280
<font color="#E5E5E5">multi-line scripts and it's</font><font color="#CCCCCC"> since on</font><font color="#E5E5E5"> the</font>

696
00:30:30,200 --> 00:30:37,610
quest<font color="#CCCCCC"> it</font><font color="#E5E5E5"> sends a request to</font><font color="#CCCCCC"> my target</font>

697
00:30:34,280 --> 00:30:39,590
<font color="#E5E5E5">website like with their host header to</font>

698
00:30:37,610 --> 00:30:41,659
access this trace page and it routes

699
00:30:39,590 --> 00:30:45,169
that request<font color="#E5E5E5"> through every single public</font>

700
00:30:41,660 --> 00:30:47,510
<font color="#E5E5E5">type of ipv4 address the CloudFlare half</font>

701
00:30:45,170 --> 00:30:50,540
so it sends it like a few<font color="#E5E5E5"> hundred</font>

702
00:30:47,510 --> 00:30:53,059
thousand times maybe<font color="#CCCCCC"> and the end result</font>

703
00:30:50,540 --> 00:30:54,800
is there<font color="#E5E5E5"> I list of which IP addresses I</font>

704
00:30:53,059 --> 00:30:58,610
should have<font color="#E5E5E5"> ripped my payloads to to</font>

705
00:30:54,800 --> 00:31:01,040
poison which geographic<font color="#E5E5E5"> regions and</font>

706
00:30:58,610 --> 00:31:02,600
basically you can<font color="#E5E5E5"> you can use this kind</font>

707
00:31:01,040 --> 00:31:05,928
of<font color="#CCCCCC"> two technique on any other caching</font>

708
00:31:02,600 --> 00:31:08,209
provider in general<font color="#E5E5E5"> I you don't need a</font>

709
00:31:05,929 --> 00:31:13,730
VPS<font color="#CCCCCC"> as long</font><font color="#E5E5E5"> as you're willing to</font><font color="#CCCCCC"> put</font><font color="#E5E5E5"> in</font>

710
00:31:08,210 --> 00:31:16,610
<font color="#E5E5E5">the F of doing a bit recon first</font><font color="#CCCCCC"> all</font>

711
00:31:13,730 --> 00:31:18,710
<font color="#CCCCCC">right</font><font color="#E5E5E5"> at this point</font><font color="#CCCCCC"> we've seen many</font>

712
00:31:16,610 --> 00:31:22,010
different<font color="#E5E5E5"> attacks almost</font><font color="#CCCCCC"> all using some</font>

713
00:31:18,710 --> 00:31:24,260
kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> host overwrite I found others</font>

714
00:31:22,010 --> 00:31:26,929
using<font color="#E5E5E5"> other we</font><font color="#CCCCCC"> live each</font><font color="#E5E5E5"> one off headers</font>

715
00:31:24,260 --> 00:31:29,900
like<font color="#E5E5E5"> bucket translate and path</font>

716
00:31:26,929 --> 00:31:31,970
underscore info<font color="#CCCCCC"> but what I want to</font>

717
00:31:29,900 --> 00:31:36,380
introduce you<font color="#CCCCCC"> to is my</font><font color="#E5E5E5"> favorite header</font>

718
00:31:31,970 --> 00:31:39,160
which<font color="#CCCCCC"> is the X original</font><font color="#E5E5E5"> euro header this</font>

719
00:31:36,380 --> 00:31:43,640
header is designed to overwrite the URL

720
00:31:39,160 --> 00:31:45,559
in the request line and the reason I

721
00:31:43,640 --> 00:31:48,080
love<font color="#CCCCCC"> it is because</font><font color="#E5E5E5"> it's supported by so</font>

722
00:31:45,559 --> 00:31:50,178
<font color="#E5E5E5">many services now just by itself even</font>

723
00:31:48,080 --> 00:31:53,240
<font color="#E5E5E5">without caching being involved this</font>

724
00:31:50,179 --> 00:31:55,280
header<font color="#E5E5E5"> is quite useful</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example on</font>

725
00:31:53,240 --> 00:31:57,620
<font color="#CCCCCC">unities website</font><font color="#E5E5E5"> they were my favorite</font>

726
00:31:55,280 --> 00:32:00,980
targets in<font color="#E5E5E5"> this presentation</font><font color="#CCCCCC"> if we</font>

727
00:31:57,620 --> 00:32:03,379
access slash admin we get blocked by by

728
00:32:00,980 --> 00:32:06,140
a reverse<font color="#E5E5E5"> proxy like varnish having a</font>

729
00:32:03,380 --> 00:32:08,240
rule that says block<font color="#E5E5E5"> slash admin but if</font>

730
00:32:06,140 --> 00:32:12,590
we put slash admin in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> X original URL</font>

731
00:32:08,240 --> 00:32:15,260
header we can get access<font color="#CCCCCC"> to</font><font color="#E5E5E5"> it and I</font>

732
00:32:12,590 --> 00:32:17,959
initially found<font color="#E5E5E5"> this header because some</font>

733
00:32:15,260 --> 00:32:20,900
of<font color="#E5E5E5"> my targets were running Drupal and so</font>

734
00:32:17,960 --> 00:32:23,270
I reported this<font color="#CCCCCC"> sir tuple</font><font color="#E5E5E5"> and their</font>

735
00:32:20,900 --> 00:32:25,100
<font color="#CCCCCC">security guys like I can't find any</font>

736
00:32:23,270 --> 00:32:28,520
<font color="#E5E5E5">mention of this header in our code base</font>

737
00:32:25,100 --> 00:32:29,860
but I can't<font color="#E5E5E5"> confirm it works and it</font>

738
00:32:28,520 --> 00:32:33,520
turned out that

739
00:32:29,860 --> 00:32:35,740
Drupal 8 is using<font color="#E5E5E5"> Symphony and Symphony</font>

740
00:32:33,520 --> 00:32:37,360
supports this header but<font color="#E5E5E5"> Symphony</font>

741
00:32:35,740 --> 00:32:40,200
actually only<font color="#E5E5E5"> sports</font><font color="#CCCCCC"> its header because</font>

742
00:32:37,360 --> 00:32:43,570
<font color="#E5E5E5">they inherited it from</font><font color="#CCCCCC"> Zent</font>

743
00:32:40,200 --> 00:32:45,429
so if you were<font color="#E5E5E5"> using if you've got a PHP</font>

744
00:32:43,570 --> 00:32:48,189
<font color="#E5E5E5">application and it's built on anything</font>

745
00:32:45,429 --> 00:32:50,410
<font color="#E5E5E5">built on</font><font color="#CCCCCC"> Zend</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> symphony</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> drupal then</font>

746
00:32:48,190 --> 00:32:53,950
you probably support<font color="#E5E5E5"> the center and</font>

747
00:32:50,410 --> 00:32:55,929
<font color="#E5E5E5">there's a lot of service so what can</font><font color="#CCCCCC"> we</font>

748
00:32:53,950 --> 00:32:58,660
do with<font color="#E5E5E5"> this header but yeah what one</font>

749
00:32:55,929 --> 00:33:00,070
other thing<font color="#E5E5E5"> I it works with with X</font>

750
00:32:58,660 --> 00:33:02,830
original URL there's also a header

751
00:33:00,070 --> 00:33:06,850
called<font color="#E5E5E5"> XV right</font><font color="#CCCCCC"> URL</font><font color="#E5E5E5"> it does exactly the</font>

752
00:33:02,830 --> 00:33:08,980
same<font color="#E5E5E5"> thing so</font><font color="#CCCCCC"> let's say our</font><font color="#E5E5E5"> target has</font>

753
00:33:06,850 --> 00:33:11,559
an external cache like every target<font color="#E5E5E5"> I've</font>

754
00:33:08,980 --> 00:33:14,919
<font color="#E5E5E5">shown you so far what we can do with</font>

755
00:33:11,559 --> 00:33:17,440
this header<font color="#E5E5E5"> is effectively the place any</font>

756
00:33:14,919 --> 00:33:23,530
response<font color="#E5E5E5"> with the response to any other</font>

757
00:33:17,440 --> 00:33:25,780
path so on<font color="#E5E5E5"> triple and symphony and so on</font>

758
00:33:23,530 --> 00:33:29,559
<font color="#E5E5E5">the query string in the</font><font color="#CCCCCC"> X original URL</font>

759
00:33:25,780 --> 00:33:31,809
<font color="#E5E5E5">header is ignored but their path is used</font>

760
00:33:29,559 --> 00:33:33,730
so we can't do anything<font color="#CCCCCC"> fancy with the</font>

761
00:33:31,809 --> 00:33:36,428
query string<font color="#E5E5E5"> but we can</font><font color="#CCCCCC"> basically swap</font>

762
00:33:33,730 --> 00:33:38,200
the paths around<font color="#E5E5E5"> so after saying this</font>

763
00:33:36,429 --> 00:33:40,660
<font color="#E5E5E5">request if</font><font color="#CCCCCC"> you try and access the unity</font>

764
00:33:38,200 --> 00:33:44,799
for education page you get<font color="#E5E5E5"> the unity for</font>

765
00:33:40,660 --> 00:33:47,169
gambling page which<font color="#E5E5E5"> looks like this so</font>

766
00:33:44,799 --> 00:33:49,780
that's kind<font color="#CCCCCC"> of entertaining and we kill</font>

767
00:33:47,169 --> 00:33:52,540
this needing<font color="#E5E5E5"> more harmful things like we</font>

768
00:33:49,780 --> 00:33:54,700
can<font color="#E5E5E5"> swap the change password</font><font color="#CCCCCC"> page for</font>

769
00:33:52,540 --> 00:33:56,010
the logout page<font color="#E5E5E5"> so you can't</font><font color="#CCCCCC"> change a</font>

770
00:33:54,700 --> 00:33:59,140
<font color="#E5E5E5">password anymore</font>

771
00:33:56,010 --> 00:34:01,770
<font color="#CCCCCC">but it's really proved how dangerous</font>

772
00:33:59,140 --> 00:34:04,120
this header<font color="#E5E5E5"> is I need a case study and</font>

773
00:34:01,770 --> 00:34:07,750
for that case<font color="#E5E5E5"> study I'm</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> use</font>

774
00:34:04,120 --> 00:34:12,460
vanilla triple because there's a lot<font color="#E5E5E5"> of</font>

775
00:34:07,750 --> 00:34:14,649
<font color="#E5E5E5">people out there so</font><font color="#CCCCCC"> rupal also has an</font>

776
00:34:12,460 --> 00:34:18,340
internal cache<font color="#E5E5E5"> this has turned on by</font>

777
00:34:14,649 --> 00:34:20,888
default and<font color="#CCCCCC"> this cache is aware of</font><font color="#E5E5E5"> the</font>

778
00:34:18,340 --> 00:34:23,320
<font color="#E5E5E5">ex original URL header</font><font color="#CCCCCC"> so we can't do</font>

779
00:34:20,889 --> 00:34:24,820
<font color="#E5E5E5">anything with the parts but my colleague</font>

780
00:34:23,320 --> 00:34:26,679
<font color="#CCCCCC">Gareth Hays was helping me out</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> this</font>

781
00:34:24,820 --> 00:34:27,070
and<font color="#E5E5E5"> he noticed something wasn't quite</font>

782
00:34:26,679 --> 00:34:29,590
right

783
00:34:27,070 --> 00:34:32,679
<font color="#E5E5E5">and eventually figured out that</font><font color="#CCCCCC"> Drupal</font>

784
00:34:29,590 --> 00:34:34,780
<font color="#CCCCCC">is eternal cache has a bug in how it</font>

785
00:34:32,679 --> 00:34:36,730
handles<font color="#E5E5E5"> this header if</font>

786
00:34:34,780 --> 00:34:39,010
<font color="#CCCCCC">thinks that the query string in this</font>

787
00:34:36,730 --> 00:34:41,139
header is<font color="#E5E5E5"> used when actually it's</font>

788
00:34:39,010 --> 00:34:42,669
ignored<font color="#E5E5E5"> so this gives us something</font>

789
00:34:41,139 --> 00:34:45,460
<font color="#CCCCCC">there's kind of</font><font color="#E5E5E5"> the opposite of</font><font color="#CCCCCC"> the bug</font>

790
00:34:42,668 --> 00:34:47,949
<font color="#E5E5E5">that we just saw we can replace the</font>

791
00:34:45,460 --> 00:34:50,860
response to any query string with any

792
00:34:47,949 --> 00:34:53,199
other query stream<font color="#E5E5E5"> basically if you're</font>

793
00:34:50,860 --> 00:34:55,419
on a page<font color="#CCCCCC"> I can't change</font><font color="#E5E5E5"> what page</font>

794
00:34:53,199 --> 00:34:57,069
you're on<font color="#E5E5E5"> by can over override the query</font>

795
00:34:55,418 --> 00:34:59,080
string you've got with anything else

796
00:34:57,070 --> 00:35:00,490
so after<font color="#CCCCCC"> sending this you</font><font color="#E5E5E5"> just do a</font>

797
00:34:59,080 --> 00:35:04,750
search<font color="#E5E5E5"> for kittens</font><font color="#CCCCCC"> you get a search</font>

798
00:35:00,490 --> 00:35:07,689
<font color="#E5E5E5">results what's not and that by itself is</font>

799
00:35:04,750 --> 00:35:10,150
really<font color="#E5E5E5"> quite</font><font color="#CCCCCC"> powerful</font><font color="#E5E5E5"> but for generic</font>

800
00:35:07,690 --> 00:35:11,230
<font color="#E5E5E5">mass exploitation of Drupal sites we</font>

801
00:35:10,150 --> 00:35:16,930
need one<font color="#CCCCCC"> more ingredient</font>

802
00:35:11,230 --> 00:35:20,230
and luckily<font color="#E5E5E5"> triple provides so</font><font color="#CCCCCC"> tuple has</font>

803
00:35:16,930 --> 00:35:21,490
<font color="#E5E5E5">this</font><font color="#CCCCCC"> a slightly crazy feature on any</font>

804
00:35:20,230 --> 00:35:25,120
response

805
00:35:21,490 --> 00:35:27,549
that's a redirect tuple lets you specify

806
00:35:25,120 --> 00:35:29,650
this<font color="#E5E5E5"> destination parameter which</font>

807
00:35:27,550 --> 00:35:33,910
overrides the<font color="#E5E5E5"> distillation of</font><font color="#CCCCCC"> the</font>

808
00:35:29,650 --> 00:35:35,650
redirect<font color="#E5E5E5"> and they try and do some</font>

809
00:35:33,910 --> 00:35:38,020
filtering<font color="#E5E5E5"> on this to make</font><font color="#CCCCCC"> sure that it's</font>

810
00:35:35,650 --> 00:35:39,790
not<font color="#CCCCCC"> a cross origin it mean I met to</font><font color="#E5E5E5"> stop</font>

811
00:35:38,020 --> 00:35:43,170
themselves<font color="#E5E5E5"> from having an open meadow</font>

812
00:35:39,790 --> 00:35:46,720
<font color="#CCCCCC">makes but we can bypass it</font><font color="#E5E5E5"> fairly easily</font>

813
00:35:43,170 --> 00:35:49,600
so by yourself this<font color="#E5E5E5"> is rubbish white</font>

814
00:35:46,720 --> 00:35:51,580
<font color="#E5E5E5">assistant open me direct but this is the</font>

815
00:35:49,600 --> 00:35:54,580
last ingredient that we need to start

816
00:35:51,580 --> 00:35:56,920
properly exploiting triple<font color="#E5E5E5"> cites so I'm</font>

817
00:35:54,580 --> 00:36:00,069
<font color="#E5E5E5">gonna look at</font><font color="#CCCCCC"> two Drupal sites</font><font color="#E5E5E5"> first of</font>

818
00:35:56,920 --> 00:36:02,650
all business top<font color="#E5E5E5"> interests</font><font color="#CCCCCC"> calm here on</font>

819
00:36:00,070 --> 00:36:07,000
the<font color="#CCCCCC"> sun pages on their site they import</font>

820
00:36:02,650 --> 00:36:09,220
<font color="#CCCCCC">JavaScript via</font><font color="#E5E5E5"> of redirect so what we</font>

821
00:36:07,000 --> 00:36:11,020
can<font color="#E5E5E5"> do is we can</font><font color="#CCCCCC"> use the internal clash</font>

822
00:36:09,220 --> 00:36:13,629
poison to change the<font color="#E5E5E5"> parameters on that</font>

823
00:36:11,020 --> 00:36:15,250
<font color="#CCCCCC">JavaScript import</font><font color="#E5E5E5"> request and what we're</font>

824
00:36:13,630 --> 00:36:17,440
<font color="#CCCCCC">gonna do is inject this destination</font>

825
00:36:15,250 --> 00:36:19,960
parameter and the end result is anyone

826
00:36:17,440 --> 00:36:22,360
who goes to<font color="#CCCCCC"> that page</font><font color="#E5E5E5"> ends up importing</font>

827
00:36:19,960 --> 00:36:25,360
<font color="#CCCCCC">JavaScript</font><font color="#E5E5E5"> from my website so I get</font>

828
00:36:22,360 --> 00:36:29,920
<font color="#CCCCCC">control over their account</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> that's</font>

829
00:36:25,360 --> 00:36:31,870
<font color="#E5E5E5">cool but we have a line on the fact that</font>

830
00:36:29,920 --> 00:36:34,480
business doc Pinterest<font color="#CCCCCC"> comm happens to</font>

831
00:36:31,870 --> 00:36:37,680
be exploiting happens to be importing

832
00:36:34,480 --> 00:36:40,859
JavaScript via me right

833
00:36:37,680 --> 00:36:42,890
and we can do<font color="#E5E5E5"> better than that so in</font>

834
00:36:40,859 --> 00:36:46,288
<font color="#E5E5E5">every attack that we've seen so far</font>

835
00:36:42,890 --> 00:36:48,629
we've poisoned the cache in order<font color="#E5E5E5"> to</font>

836
00:36:46,289 --> 00:36:52,349
exploit the<font color="#E5E5E5"> end user</font><font color="#CCCCCC"> like the victim has</font>

837
00:36:48,630 --> 00:36:55,529
been<font color="#E5E5E5"> the end user</font><font color="#CCCCCC"> that way but on almost</font>

838
00:36:52,349 --> 00:36:57,150
<font color="#E5E5E5">all the Drupal installations you've</font>

839
00:36:55,529 --> 00:36:58,650
actually got two<font color="#E5E5E5"> caches because you've</font>

840
00:36:57,150 --> 00:37:00,450
got the internal cache<font color="#E5E5E5"> that's turned off</font>

841
00:36:58,650 --> 00:37:02,430
by default<font color="#CCCCCC"> and then you've</font><font color="#E5E5E5"> got an</font>

842
00:37:00,450 --> 00:37:05,009
<font color="#E5E5E5">external cache like varnish or or</font>

843
00:37:02,430 --> 00:37:06,450
<font color="#E5E5E5">CloudFlare that basically</font><font color="#CCCCCC"> everyone uses</font>

844
00:37:05,010 --> 00:37:10,710
because<font color="#E5E5E5"> the triples really sluggish</font><font color="#CCCCCC"> you</font>

845
00:37:06,450 --> 00:37:12,450
don't use it<font color="#E5E5E5"> so what we can do is we can</font>

846
00:37:10,710 --> 00:37:15,329
make we<font color="#CCCCCC"> can do two attacks</font><font color="#E5E5E5"> and the</font>

847
00:37:12,450 --> 00:37:19,950
<font color="#CCCCCC">victim of the first</font><font color="#E5E5E5"> attacked is going to</font>

848
00:37:15,329 --> 00:37:22,410
be the other cache<font color="#CCCCCC"> so the first request</font>

849
00:37:19,950 --> 00:37:24,839
is<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> try and poison</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> internal</font>

850
00:37:22,410 --> 00:37:27,420
cache<font color="#E5E5E5"> so we we just</font><font color="#CCCCCC"> find any video</font>

851
00:37:24,839 --> 00:37:30,089
<font color="#CCCCCC">vector spots on the entire site and then</font>

852
00:37:27,420 --> 00:37:31,200
we poison<font color="#E5E5E5"> the internal cache by adding</font>

853
00:37:30,089 --> 00:37:34,950
this parameter<font color="#E5E5E5"> to change it to a</font>

854
00:37:31,200 --> 00:37:38,308
redirect to<font color="#CCCCCC"> our</font><font color="#E5E5E5"> website by yourself</font>

855
00:37:34,950 --> 00:37:41,129
<font color="#E5E5E5">that's not that much good but then we're</font>

856
00:37:38,309 --> 00:37:43,170
gonna shift<font color="#E5E5E5"> that poison into the</font>

857
00:37:41,130 --> 00:37:44,940
external cache<font color="#E5E5E5"> so we're</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> send a</font>

858
00:37:43,170 --> 00:37:46,829
<font color="#CCCCCC">request that has the same</font><font color="#E5E5E5"> exit visional</font>

859
00:37:44,940 --> 00:37:49,079
URL<font color="#E5E5E5"> value so I'll fetch that was</font>

860
00:37:46,829 --> 00:37:51,359
malicious<font color="#CCCCCC"> poisoned response from the</font>

861
00:37:49,079 --> 00:37:55,770
internal cache and it will put it<font color="#E5E5E5"> in the</font>

862
00:37:51,359 --> 00:37:59,220
external cash at a URL of<font color="#CCCCCC"> our choice</font><font color="#E5E5E5"> so</font>

863
00:37:55,770 --> 00:38:00,869
<font color="#E5E5E5">using this we can poison any of the</font>

864
00:37:59,220 --> 00:38:03,959
<font color="#CCCCCC">spawns from</font><font color="#E5E5E5"> the application with a</font>

865
00:38:00,869 --> 00:38:07,020
<font color="#E5E5E5">redirects to our site so for example on</font>

866
00:38:03,960 --> 00:38:09,390
unit<font color="#E5E5E5"> 1 stored or unity</font><font color="#CCCCCC"> comm the main</font>

867
00:38:07,020 --> 00:38:11,788
thing you're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> do is by unity</font><font color="#CCCCCC"> or get</font>

868
00:38:09,390 --> 00:38:13,288
the free version<font color="#CCCCCC"> and so if you I</font><font color="#E5E5E5"> can</font>

869
00:38:11,789 --> 00:38:16,079
make<font color="#E5E5E5"> it so that if</font><font color="#CCCCCC"> you go on</font><font color="#E5E5E5"> there and</font>

870
00:38:13,289 --> 00:38:18,089
<font color="#E5E5E5">you click download installer your your</font>

871
00:38:16,079 --> 00:38:19,980
<font color="#CCCCCC">browse</font><font color="#E5E5E5"> has got your own unity calm but</font>

872
00:38:18,089 --> 00:38:27,078
the<font color="#CCCCCC"> Installer is malware coming from my</font>

873
00:38:19,980 --> 00:38:31,740
website<font color="#CCCCCC"> so</font><font color="#E5E5E5"> let's have a quick live demo</font>

874
00:38:27,079 --> 00:38:33,660
which is hoping<font color="#E5E5E5"> the work so here we have</font>

875
00:38:31,740 --> 00:38:35,910
stocked report<font color="#E5E5E5"> I haven't changed</font>

876
00:38:33,660 --> 00:38:39,359
<font color="#E5E5E5">anything all I've done is</font><font color="#CCCCCC"> put a cache in</font>

877
00:38:35,910 --> 00:38:41,129
front of this<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the first thing I'll</font>

878
00:38:39,359 --> 00:38:44,308
show<font color="#E5E5E5"> you is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> if we</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> take a</font>

879
00:38:41,130 --> 00:38:46,670
request to<font color="#CCCCCC"> the site</font><font color="#E5E5E5"> I if you run the</font>

880
00:38:44,309 --> 00:38:50,520
<font color="#E5E5E5">latest version of burp it will hopefully</font>

881
00:38:46,670 --> 00:38:52,150
it's not working<font color="#E5E5E5"> oh scanner spawns to</font>

882
00:38:50,520 --> 00:38:57,400
cut<font color="#E5E5E5"> yeah</font>

883
00:38:52,150 --> 00:39:10,160
it's maybe gonna<font color="#E5E5E5"> find it maybe not</font><font color="#CCCCCC"> we're</font>

884
00:38:57,400 --> 00:39:13,460
also<font color="#CCCCCC"> for</font><font color="#E5E5E5"> a minor</font><font color="#CCCCCC"> okay for my</font><font color="#E5E5E5"> - no</font><font color="#CCCCCC"> still</font>

885
00:39:10,160 --> 00:39:16,549
let's<font color="#E5E5E5"> see if it works</font><font color="#CCCCCC"> I swear I five</font>

886
00:39:13,460 --> 00:39:23,150
minutes ago<font color="#E5E5E5"> okay right here we are</font>

887
00:39:16,550 --> 00:39:26,090
<font color="#E5E5E5">oh no no no it's still me twice now okay</font>

888
00:39:23,150 --> 00:39:30,730
I'm gonna go with the top<font color="#E5E5E5"> minor okay</font>

889
00:39:26,090 --> 00:39:34,730
we're gonna sell it<font color="#CCCCCC"> to</font><font color="#E5E5E5"> guess</font><font color="#CCCCCC"> headus</font><font color="#E5E5E5"> wait</font>

890
00:39:30,730 --> 00:39:36,590
come on okay okay<font color="#CCCCCC"> well Berbers work so</font>

891
00:39:34,730 --> 00:39:36,950
purpose yes they both<font color="#E5E5E5"> like so</font><font color="#CCCCCC"> Berbers</font>

892
00:39:36,590 --> 00:39:38,420
<font color="#CCCCCC">fouled</font>

893
00:39:36,950 --> 00:39:41,480
this is vulnerable to<font color="#CCCCCC"> web cache</font>

894
00:39:38,420 --> 00:39:43,760
poisoning<font color="#E5E5E5"> and also</font><font color="#CCCCCC"> the Ramlila</font>

895
00:39:41,480 --> 00:39:45,260
has found the<font color="#CCCCCC"> x and x me right no</font>

896
00:39:43,760 --> 00:39:47,660
<font color="#E5E5E5">available</font><font color="#CCCCCC"> heather and it's showing you</font>

897
00:39:45,260 --> 00:39:51,140
the evidence<font color="#E5E5E5"> for it and it's also found</font>

898
00:39:47,660 --> 00:39:53,230
<font color="#CCCCCC">x original URL and it's even parameter</font>

899
00:39:51,140 --> 00:39:55,368
has found that<font color="#E5E5E5"> it can do cache poisoning</font>

900
00:39:53,230 --> 00:39:58,010
<font color="#CCCCCC">parameter will try a new cache poisoning</font>

901
00:39:55,369 --> 00:40:01,760
<font color="#E5E5E5">it's pretty fitting this i don't rely on</font>

902
00:39:58,010 --> 00:40:04,369
that<font color="#E5E5E5"> but it does work sometimes okay so</font>

903
00:40:01,760 --> 00:40:08,980
now we're<font color="#E5E5E5"> gonna try and basically redo</font>

904
00:40:04,369 --> 00:40:13,310
that attack<font color="#E5E5E5"> manually on this</font><font color="#CCCCCC"> site so</font>

905
00:40:08,980 --> 00:40:15,710
<font color="#CCCCCC">here this response is just OB direct</font>

906
00:40:13,310 --> 00:40:18,529
white nothing<font color="#E5E5E5"> interesting there so now</font>

907
00:40:15,710 --> 00:40:21,740
I'm<font color="#E5E5E5"> gonna send a request it's gonna hit</font>

908
00:40:18,530 --> 00:40:23,810
the<font color="#E5E5E5"> same code path because of</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> X</font>

909
00:40:21,740 --> 00:40:26,868
original URL header but I've added this

910
00:40:23,810 --> 00:40:29,359
destination parameter so the goal of

911
00:40:26,869 --> 00:40:35,359
<font color="#CCCCCC">this request is the poison the internal</font>

912
00:40:29,359 --> 00:40:37,339
cache at that key with<font color="#CCCCCC"> avi direct so if</font>

913
00:40:35,359 --> 00:40:42,230
I send<font color="#E5E5E5"> this yeah great we've got this</font>

914
00:40:37,339 --> 00:40:44,660
<font color="#E5E5E5">video</font><font color="#CCCCCC"> X to our server</font><font color="#E5E5E5"> coming back and</font>

915
00:40:42,230 --> 00:40:46,430
then for the<font color="#CCCCCC"> next step we want</font><font color="#E5E5E5"> to shift</font>

916
00:40:44,660 --> 00:40:49,910
<font color="#E5E5E5">that to the external</font><font color="#CCCCCC"> cash so we're going</font>

917
00:40:46,430 --> 00:40:52,609
to leave this header exactly the same so

918
00:40:49,910 --> 00:40:55,368
that<font color="#CCCCCC"> we get the same response back</font>

919
00:40:52,609 --> 00:40:58,190
thanks to<font color="#E5E5E5"> the poisoned internal cash but</font>

920
00:40:55,369 --> 00:41:00,050
we've changed that so what<font color="#E5E5E5"> you can see</font>

921
00:40:58,190 --> 00:41:02,570
<font color="#CCCCCC">here is the yellow that</font><font color="#E5E5E5"> we want to</font>

922
00:41:00,050 --> 00:41:05,420
<font color="#E5E5E5">poison so if I send this we should get</font>

923
00:41:02,570 --> 00:41:07,340
the same<font color="#CCCCCC"> response</font><font color="#E5E5E5"> great so now the</font>

924
00:41:05,420 --> 00:41:10,490
external cash<font color="#CCCCCC"> it's hopefully poisoned</font>

925
00:41:07,340 --> 00:41:12,050
<font color="#E5E5E5">finally I'm gonna just resend I'm gonna</font>

926
00:41:10,490 --> 00:41:16,910
<font color="#E5E5E5">send that request without any headers to</font>

927
00:41:12,050 --> 00:41:19,310
<font color="#E5E5E5">confirm that it's been poisoned</font><font color="#CCCCCC"> and that</font>

928
00:41:16,910 --> 00:41:26,660
appears<font color="#E5E5E5"> to be working great</font>

929
00:41:19,310 --> 00:41:28,790
so now if I<font color="#CCCCCC"> go on Firefox and I so I'm</font>

930
00:41:26,660 --> 00:41:32,149
just<font color="#E5E5E5"> on the normal home page if I press</font>

931
00:41:28,790 --> 00:41:36,050
login then wind up on<font color="#CCCCCC"> course with</font><font color="#E5E5E5"> the</font>

932
00:41:32,150 --> 00:41:42,369
labs<font color="#E5E5E5"> on a fake malicious version of the</font>

933
00:41:36,050 --> 00:41:42,369
login page<font color="#CCCCCC"> kill I'm</font><font color="#E5E5E5"> glad about what</font>

934
00:41:50,660 --> 00:41:55,790
<font color="#CCCCCC">Thanks there was a coordinated security</font>

935
00:41:53,340 --> 00:42:00,440
release for<font color="#CCCCCC"> that the week before last</font>

936
00:41:55,790 --> 00:42:00,440
so you want to<font color="#E5E5E5"> install</font><font color="#CCCCCC"> that probably</font>

937
00:42:01,970 --> 00:42:09,029
yeah<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> great defense</font>

938
00:42:06,140 --> 00:42:11,640
sorry<font color="#CCCCCC"> good</font><font color="#E5E5E5"> for the</font><font color="#CCCCCC"> most effective</font>

939
00:42:09,030 --> 00:42:15,810
<font color="#CCCCCC">defense against cache poisoning isn't</font>

940
00:42:11,640 --> 00:42:17,910
not in use caching<font color="#E5E5E5"> and then the way not</font>

941
00:42:15,810 --> 00:42:19,770
a sound like<font color="#CCCCCC"> fax</font><font color="#E5E5E5"> cool advice but I think</font>

942
00:42:17,910 --> 00:42:21,899
the thing<font color="#CCCCCC"> is some people might end</font><font color="#E5E5E5"> up</font>

943
00:42:19,770 --> 00:42:23,730
with caching kind of by<font color="#CCCCCC"> accident for</font>

944
00:42:21,900 --> 00:42:25,710
example they<font color="#E5E5E5"> might start using</font>

945
00:42:23,730 --> 00:42:27,480
<font color="#E5E5E5">CloudFlare because they want cloud</font>

946
00:42:25,710 --> 00:42:28,680
<font color="#E5E5E5">flares DDoS protection because it is</font>

947
00:42:27,480 --> 00:42:30,920
very<font color="#E5E5E5"> cheap</font>

948
00:42:28,680 --> 00:42:33,089
<font color="#E5E5E5">and but caching is turned on by default</font>

949
00:42:30,920 --> 00:42:37,650
<font color="#E5E5E5">so why would say is if you're not using</font>

950
00:42:33,090 --> 00:42:38,970
<font color="#E5E5E5">caching just turn it off</font><font color="#CCCCCC"> anyway</font>

951
00:42:37,650 --> 00:42:41,790
regardless<font color="#E5E5E5"> of whether you're</font>

952
00:42:38,970 --> 00:42:43,649
intentionally<font color="#E5E5E5"> using caching in his spare</font>

953
00:42:41,790 --> 00:42:46,740
mind some people<font color="#CCCCCC"> may</font><font color="#E5E5E5"> be accessing your</font>

954
00:42:43,650 --> 00:42:49,020
<font color="#E5E5E5">site for corporate proxies or airports</font>

955
00:42:46,740 --> 00:42:53,009
in such like<font color="#E5E5E5"> even summarize</font><font color="#CCCCCC"> peas and</font>

956
00:42:49,020 --> 00:42:54,630
those<font color="#E5E5E5"> ISPs will</font><font color="#CCCCCC"> be doing Kashi so in</font>

957
00:42:53,010 --> 00:42:55,860
<font color="#E5E5E5">general you're going to want to try and</font>

958
00:42:54,630 --> 00:42:57,450
mitigate cache poisoning

959
00:42:55,860 --> 00:43:00,900
regardless of<font color="#E5E5E5"> whether you have to the</font>

960
00:42:57,450 --> 00:43:03,930
<font color="#E5E5E5">intention here using cash now to do that</font>

961
00:43:00,900 --> 00:43:06,720
<font color="#E5E5E5">you</font><font color="#CCCCCC"> need to avoid indeed input basically</font>

962
00:43:03,930 --> 00:43:09,660
don't<font color="#CCCCCC"> intentionally take inputs from</font>

963
00:43:06,720 --> 00:43:13,290
HTTP headers<font color="#E5E5E5"> and cookies wherever</font>

964
00:43:09,660 --> 00:43:15,420
possible<font color="#E5E5E5"> also the where the many</font>

965
00:43:13,290 --> 00:43:18,120
frameworks<font color="#E5E5E5"> will just add in random</font>

966
00:43:15,420 --> 00:43:20,550
headers unexpectedly<font color="#E5E5E5"> so you'll probably</font>

967
00:43:18,120 --> 00:43:22,770
want<font color="#E5E5E5"> to audit your application with</font>

968
00:43:20,550 --> 00:43:24,660
burps<font color="#CCCCCC"> down and we'll</font><font color="#E5E5E5"> program miner in</font>

969
00:43:22,770 --> 00:43:26,640
order to try<font color="#CCCCCC"> and find out</font><font color="#E5E5E5"> if any weird</font>

970
00:43:24,660 --> 00:43:28,440
headers have been snuck in there if you

971
00:43:26,640 --> 00:43:31,080
find them ideally just completely

972
00:43:28,440 --> 00:43:33,900
<font color="#E5E5E5">disable support for them that's the best</font>

973
00:43:31,080 --> 00:43:35,910
fix<font color="#E5E5E5"> if you can't do</font><font color="#CCCCCC"> that for some reason</font>

974
00:43:33,900 --> 00:43:38,040
you<font color="#E5E5E5"> could potentially configure your</font>

975
00:43:35,910 --> 00:43:41,910
cache layer if it exists just<font color="#E5E5E5"> to strip</font>

976
00:43:38,040 --> 00:43:43,680
these headers out or if you<font color="#E5E5E5"> really need</font>

977
00:43:41,910 --> 00:43:45,870
these then<font color="#CCCCCC"> you could add them into the</font>

978
00:43:43,680 --> 00:43:47,790
<font color="#E5E5E5">cache key which will effectively</font><font color="#CCCCCC"> remove</font>

979
00:43:45,870 --> 00:43:50,060
them from the cache poisoning<font color="#E5E5E5"> attack</font>

980
00:43:47,790 --> 00:43:50,060
<font color="#CCCCCC">service</font>

981
00:43:50,290 --> 00:43:54,730
there's a bunch of resources<font color="#CCCCCC"> online</font>

982
00:43:51,910 --> 00:43:56,618
there's an online<font color="#E5E5E5"> white paper there's</font>

983
00:43:54,730 --> 00:43:59,800
also I<font color="#E5E5E5"> believe one</font><font color="#CCCCCC"> or two printed copies</font>

984
00:43:56,619 --> 00:44:02,920
of this on the Manchester stand at the

985
00:43:59,800 --> 00:44:04,300
<font color="#E5E5E5">moment also</font><font color="#CCCCCC"> power and</font><font color="#E5E5E5"> wine is open</font>

986
00:44:02,920 --> 00:44:06,070
source<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can grab the source code for</font>

987
00:44:04,300 --> 00:44:09,130
that online<font color="#E5E5E5"> and install it via the BAP</font>

988
00:44:06,070 --> 00:44:11,140
<font color="#CCCCCC">Store and I've also built</font><font color="#E5E5E5"> a cache</font>

989
00:44:09,130 --> 00:44:12,910
poisoning challenge<font color="#E5E5E5"> into my hacking game</font>

990
00:44:11,140 --> 00:44:15,069
so you<font color="#E5E5E5"> can have a shot at that to</font><font color="#CCCCCC"> see if</font>

991
00:44:12,910 --> 00:44:19,390
<font color="#E5E5E5">he's really got to grips</font><font color="#CCCCCC"> with this stuff</font>

992
00:44:15,070 --> 00:44:21,730
<font color="#E5E5E5">I hopefully have some fun okay three key</font>

993
00:44:19,390 --> 00:44:25,000
things<font color="#E5E5E5"> to take</font><font color="#CCCCCC"> away are the header based</font>

994
00:44:21,730 --> 00:44:27,580
input is inherently<font color="#E5E5E5"> dangerous frameworks</font>

995
00:44:25,000 --> 00:44:29,109
<font color="#E5E5E5">can hide</font><font color="#CCCCCC"> lethal functionality and just</font>

996
00:44:27,580 --> 00:44:30,430
because they're<font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> and have</font>

997
00:44:29,109 --> 00:44:33,430
millions of<font color="#CCCCCC"> users doesn't mean they're</font>

998
00:44:30,430 --> 00:44:35,859
secure<font color="#E5E5E5"> and cache poisoning</font><font color="#CCCCCC"> is not</font>

999
00:44:33,430 --> 00:44:37,720
theoretical<font color="#E5E5E5"> I'm going to take five</font>

1000
00:44:35,859 --> 00:44:39,279
<font color="#CCCCCC">minutes of questions now if you have any</font>

1001
00:44:37,720 --> 00:44:40,589
more after<font color="#CCCCCC"> that just chuck me an email</font>

1002
00:44:39,280 --> 00:44:42,670
<font color="#CCCCCC">we'll</font><font color="#E5E5E5"> come and talk to me out the back</font>

1003
00:44:40,590 --> 00:44:45,810
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> forget to follow me on Twitter</font>

1004
00:44:42,670 --> 00:44:45,810
<font color="#E5E5E5">thank you for listening</font>

1005
00:44:52,720 --> 00:45:01,720
thanks James has anyone got any

1006
00:44:54,670 --> 00:45:05,440
<font color="#CCCCCC">questions yep do most cutting prop C's</font>

1007
00:45:01,720 --> 00:45:11,020
honor the very response header<font color="#E5E5E5"> to to set</font>

1008
00:45:05,440 --> 00:45:14,670
<font color="#CCCCCC">their cash</font><font color="#E5E5E5"> I would</font><font color="#CCCCCC"> say no I've only seen</font>

1009
00:45:11,020 --> 00:45:14,670
I've only noticed the one that does it

1010
00:45:15,359 --> 00:45:30,578
how's that definitely doesn't have<font color="#E5E5E5"> you</font>

1011
00:45:28,510 --> 00:45:31,930
seen this irony of the<font color="#CCCCCC"> WordPress plugins</font>

1012
00:45:30,579 --> 00:45:36,329
<font color="#E5E5E5">because there's a lot of question</font>

1013
00:45:31,930 --> 00:45:36,328
plug-ins for WordPress<font color="#E5E5E5"> for WordPress</font>

1014
00:45:36,510 --> 00:45:45,819
look at work Billy<font color="#CCCCCC"> I'm sure so I found</font>

1015
00:45:42,630 --> 00:45:47,800
<font color="#CCCCCC">this via</font><font color="#E5E5E5"> this research showed up</font><font color="#CCCCCC"> like</font>

1016
00:45:45,819 --> 00:45:51,240
hundreds and hundreds of sites<font color="#E5E5E5"> and I</font>

1017
00:45:47,800 --> 00:45:53,530
only had time<font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually look at half</font>

1018
00:45:51,240 --> 00:45:55,319
there's there's a<font color="#CCCCCC"> lot there's loved</font>

1019
00:45:53,530 --> 00:45:58,569
stuff out<font color="#E5E5E5"> there</font><font color="#CCCCCC"> that's still</font><font color="#E5E5E5"> vulnerable</font>

1020
00:45:55,319 --> 00:46:01,060
<font color="#E5E5E5">another interesting Avenue Avenue would</font>

1021
00:45:58,569 --> 00:46:03,990
be to look<font color="#E5E5E5"> at so I exploited Firefox's</font>

1022
00:46:01,060 --> 00:46:06,160
<font color="#E5E5E5">update functionality basically right and</font>

1023
00:46:03,990 --> 00:46:08,589
there's a lot<font color="#CCCCCC"> of software out there</font><font color="#E5E5E5"> that</font>

1024
00:46:06,160 --> 00:46:10,509
has<font color="#E5E5E5"> update functionality if you could do</font>

1025
00:46:08,589 --> 00:46:18,130
cache poisoning on WordPress is update

1026
00:46:10,510 --> 00:46:19,599
that would think<font color="#CCCCCC"> these funny yeah no</font>

1027
00:46:18,130 --> 00:46:22,650
more<font color="#E5E5E5"> for James will give them one more</font>

1028
00:46:19,599 --> 00:46:22,650
<font color="#E5E5E5">round</font><font color="#CCCCCC"> of applause</font><font color="#E5E5E5"> please</font>

