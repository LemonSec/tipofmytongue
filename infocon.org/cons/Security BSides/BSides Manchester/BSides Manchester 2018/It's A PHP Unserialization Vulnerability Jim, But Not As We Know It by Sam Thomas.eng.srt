1
00:00:06,109 --> 00:00:13,889
thank you<font color="#CCCCCC"> so for the</font><font color="#E5E5E5"> last nine years</font>

2
00:00:10,800 --> 00:00:16,500
<font color="#CCCCCC">we've underestimated the impact of a</font>

3
00:00:13,889 --> 00:00:19,500
common class<font color="#E5E5E5"> of wonder abilities in PHP</font>

4
00:00:16,500 --> 00:00:20,970
applications hundreds probably thousands

5
00:00:19,500 --> 00:00:23,789
of instances<font color="#CCCCCC"> of this issue have been</font>

6
00:00:20,970 --> 00:00:25,529
<font color="#E5E5E5">found we've overlooked a simple behavior</font>

7
00:00:23,789 --> 00:00:29,880
in PHP which<font color="#E5E5E5"> exposes them to</font>

8
00:00:25,529 --> 00:00:32,130
exploitation through<font color="#CCCCCC"> on serialization my</font>

9
00:00:29,880 --> 00:00:34,620
<font color="#CCCCCC">name</font><font color="#E5E5E5"> salmon one way or another I spend a</font>

10
00:00:32,130 --> 00:00:37,739
<font color="#CCCCCC">lot of my time</font><font color="#E5E5E5"> exploiting web</font>

11
00:00:34,620 --> 00:00:40,410
applications<font color="#E5E5E5"> while attacking web</font>

12
00:00:37,739 --> 00:00:42,000
applications so<font color="#CCCCCC"> what I tend to do is</font><font color="#E5E5E5"> ask</font>

13
00:00:40,410 --> 00:00:44,190
myself what<font color="#CCCCCC"> vonner abilities does this</font>

14
00:00:42,000 --> 00:00:47,190
app have and what's the impact<font color="#E5E5E5"> of</font>

15
00:00:44,190 --> 00:00:48,780
exploiting<font color="#E5E5E5"> those issues the research</font><font color="#CCCCCC"> I'm</font>

16
00:00:47,190 --> 00:00:50,820
gonna talk about<font color="#E5E5E5"> today doesn't have much</font>

17
00:00:48,780 --> 00:00:52,199
<font color="#E5E5E5">impact on the first part</font><font color="#CCCCCC"> of that</font>

18
00:00:50,820 --> 00:00:53,670
<font color="#E5E5E5">question so I'll be</font><font color="#CCCCCC"> talking about</font>

19
00:00:52,199 --> 00:00:56,519
vulnerabilities that<font color="#E5E5E5"> you've probably</font>

20
00:00:53,670 --> 00:00:57,989
thought<font color="#E5E5E5"> you</font><font color="#CCCCCC"> already</font><font color="#E5E5E5"> knew</font><font color="#CCCCCC"> about but I'll</font>

21
00:00:56,520 --> 00:01:00,059
be giving<font color="#CCCCCC"> you a</font><font color="#E5E5E5"> different answer</font><font color="#CCCCCC"> than</font>

22
00:00:57,989 --> 00:01:03,120
you<font color="#E5E5E5"> might have expected for what the</font>

23
00:01:00,059 --> 00:01:04,709
impact of exploiting<font color="#CCCCCC"> them is so before I</font>

24
00:01:03,120 --> 00:01:06,840
talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> my own research</font><font color="#CCCCCC"> I think it's</font>

25
00:01:04,709 --> 00:01:09,270
<font color="#E5E5E5">really important to say that</font><font color="#CCCCCC"> this is</font>

26
00:01:06,840 --> 00:01:11,970
<font color="#CCCCCC">really just</font><font color="#E5E5E5"> a tiny addition to some</font>

27
00:01:09,270 --> 00:01:15,619
<font color="#CCCCCC">wonderful research done by</font><font color="#E5E5E5"> a man called</font>

28
00:01:11,970 --> 00:01:18,600
<font color="#CCCCCC">Stephan Esther about ten years</font><font color="#E5E5E5"> ago</font><font color="#CCCCCC"> so he</font>

29
00:01:15,619 --> 00:01:22,680
<font color="#E5E5E5">discovered this issue in PHP with on</font>

30
00:01:18,600 --> 00:01:24,240
serialization<font color="#CCCCCC"> and so our serialization</font>

31
00:01:22,680 --> 00:01:25,740
is for those<font color="#E5E5E5"> of</font><font color="#CCCCCC"> you who don't</font><font color="#E5E5E5"> know</font>

32
00:01:24,240 --> 00:01:30,179
really<font color="#E5E5E5"> basically it's basically</font><font color="#CCCCCC"> a</font>

33
00:01:25,740 --> 00:01:31,880
<font color="#E5E5E5">process by which PHP converts internal</font>

34
00:01:30,180 --> 00:01:34,409
objects into a string representation

35
00:01:31,880 --> 00:01:36,839
that<font color="#CCCCCC"> can be stored</font><font color="#E5E5E5"> in a database or</font>

36
00:01:34,409 --> 00:01:39,270
passed over the wire<font color="#E5E5E5"> and then converted</font>

37
00:01:36,840 --> 00:01:40,829
<font color="#CCCCCC">back to an object in PHP the examples on</font>

38
00:01:39,270 --> 00:01:43,560
the<font color="#CCCCCC"> slide are really simple so I've just</font>

39
00:01:40,829 --> 00:01:45,179
<font color="#CCCCCC">given like an integer and</font><font color="#E5E5E5"> a string but</font>

40
00:01:43,560 --> 00:01:48,090
it can deal with<font color="#E5E5E5"> much more</font><font color="#CCCCCC"> complicated</font>

41
00:01:45,180 --> 00:01:50,040
objects<font color="#E5E5E5"> and what</font><font color="#CCCCCC"> Stefan SR realized was</font>

42
00:01:48,090 --> 00:01:51,990
<font color="#CCCCCC">that there's a technique quite</font><font color="#E5E5E5"> closely</font>

43
00:01:50,040 --> 00:01:54,560
related<font color="#CCCCCC"> to return orientated programming</font>

44
00:01:51,990 --> 00:01:57,329
called property orientated programming

45
00:01:54,560 --> 00:01:58,799
<font color="#E5E5E5">whereby you can construct sort of a</font>

46
00:01:57,329 --> 00:02:01,048
malicious objects<font color="#E5E5E5"> that if you get</font>

47
00:01:58,799 --> 00:02:03,329
<font color="#E5E5E5">everything right upon being unsterilized</font>

48
00:02:01,049 --> 00:02:05,969
<font color="#E5E5E5">will sort of cause a chain of methods to</font>

49
00:02:03,329 --> 00:02:09,239
be caught<font color="#E5E5E5"> and cause something malicious</font>

50
00:02:05,969 --> 00:02:10,500
<font color="#E5E5E5">to happen so as the issue is</font>

51
00:02:09,239 --> 00:02:13,099
<font color="#E5E5E5">additionally understood there's a</font>

52
00:02:10,500 --> 00:02:17,090
function called<font color="#E5E5E5"> uncie realized on PHP</font>

53
00:02:13,099 --> 00:02:19,399
and that's called<font color="#CCCCCC"> on some data</font><font color="#E5E5E5"> and as I</font>

54
00:02:17,090 --> 00:02:21,139
<font color="#E5E5E5">mentioned basically certain methods are</font>

55
00:02:19,400 --> 00:02:22,519
automatically invoked upon<font color="#CCCCCC"> unsee</font>

56
00:02:21,139 --> 00:02:25,579
realization<font color="#CCCCCC"> so there's a method called</font>

57
00:02:22,519 --> 00:02:27,889
<font color="#E5E5E5">wakeup which is called whenever an</font>

58
00:02:25,579 --> 00:02:29,900
<font color="#E5E5E5">object is</font><font color="#CCCCCC"> unsee realized and there's</font>

59
00:02:27,889 --> 00:02:32,019
also a<font color="#E5E5E5"> method called destruct which is</font>

60
00:02:29,900 --> 00:02:34,639
called whenever an object<font color="#CCCCCC"> is destroyed</font>

61
00:02:32,019 --> 00:02:36,920
<font color="#E5E5E5">if we get things</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> right basically we</font>

62
00:02:34,639 --> 00:02:39,169
can sort<font color="#E5E5E5"> of chain</font><font color="#CCCCCC"> together</font><font color="#E5E5E5"> certain</font>

63
00:02:36,920 --> 00:02:41,780
<font color="#CCCCCC">objects so that</font><font color="#E5E5E5"> something nasty</font><font color="#CCCCCC"> happens</font>

64
00:02:39,169 --> 00:02:44,510
if you're<font color="#E5E5E5"> not familiar with that issue</font><font color="#CCCCCC"> I</font>

65
00:02:41,780 --> 00:02:47,510
can't encourage<font color="#E5E5E5"> you enough to sort of</font>

66
00:02:44,510 --> 00:02:50,599
read<font color="#E5E5E5"> Stephanie's research</font><font color="#CCCCCC"> I gave</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> talk</font>

67
00:02:47,510 --> 00:02:52,219
myself<font color="#E5E5E5"> here three years</font><font color="#CCCCCC"> ago I think sort</font>

68
00:02:50,599 --> 00:02:53,828
<font color="#CCCCCC">of covering a lot of the</font><font color="#E5E5E5"> same material</font>

69
00:02:52,219 --> 00:02:55,698
<font color="#CCCCCC">but for the rest of this presentation</font>

70
00:02:53,829 --> 00:03:00,169
<font color="#CCCCCC">you'll just have to accept</font><font color="#E5E5E5"> that</font>

71
00:02:55,699 --> 00:03:02,750
<font color="#E5E5E5">serialization is bad okay so what</font><font color="#CCCCCC"> am I</font>

72
00:03:00,169 --> 00:03:04,340
going<font color="#CCCCCC"> to go through</font><font color="#E5E5E5"> today</font><font color="#CCCCCC"> I'm going to</font>

73
00:03:02,750 --> 00:03:06,500
<font color="#CCCCCC">start by talking about</font><font color="#E5E5E5"> something called</font>

74
00:03:04,340 --> 00:03:10,099
<font color="#CCCCCC">stream wrappers which is a functionality</font>

75
00:03:06,500 --> 00:03:13,849
<font color="#E5E5E5">in PHP which basically can be triggered</font>

76
00:03:10,099 --> 00:03:15,290
<font color="#E5E5E5">on any file operation</font><font color="#CCCCCC"> and I'll go</font>

77
00:03:13,849 --> 00:03:17,328
<font color="#E5E5E5">through a bunch</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> those and we'll end</font>

78
00:03:15,290 --> 00:03:19,638
up<font color="#E5E5E5"> focusing in on</font><font color="#CCCCCC"> the what's called the</font>

79
00:03:17,329 --> 00:03:21,650
fast<font color="#CCCCCC"> dream wrapper which deals with a</font>

80
00:03:19,639 --> 00:03:24,409
type of archive called a<font color="#CCCCCC"> far archive</font>

81
00:03:21,650 --> 00:03:27,949
which is sort of supposed<font color="#E5E5E5"> to be the PHP</font>

82
00:03:24,409 --> 00:03:30,048
equivalent of jar archives I'll talk

83
00:03:27,949 --> 00:03:31,459
about something called<font color="#CCCCCC"> file planting so</font>

84
00:03:30,049 --> 00:03:34,040
we're going<font color="#E5E5E5"> to need to get one of these</font>

85
00:03:31,459 --> 00:03:35,870
archives on to our target system the

86
00:03:34,040 --> 00:03:37,310
easiest way is<font color="#CCCCCC"> just to upload one if</font>

87
00:03:35,870 --> 00:03:39,049
we've got<font color="#E5E5E5"> that functionality in the app</font>

88
00:03:37,310 --> 00:03:41,199
<font color="#E5E5E5">but there's a couple of other things we</font>

89
00:03:39,049 --> 00:03:43,280
could look at if<font color="#CCCCCC"> we can't do</font><font color="#E5E5E5"> that</font>

90
00:03:41,199 --> 00:03:46,579
identifying the type of vulnerabilities

91
00:03:43,280 --> 00:03:48,139
<font color="#CCCCCC">that are affected</font><font color="#E5E5E5"> by this issue then I'm</font>

92
00:03:46,579 --> 00:03:51,799
going to<font color="#E5E5E5"> talk about there's a really</font>

93
00:03:48,139 --> 00:03:55,069
nice tool called PHP GGC<font color="#E5E5E5"> the GGC</font><font color="#CCCCCC"> is for</font>

94
00:03:51,799 --> 00:03:57,590
generic gadget chains<font color="#E5E5E5"> by a guy called</font>

95
00:03:55,069 --> 00:04:01,790
<font color="#CCCCCC">Charles Fong</font><font color="#E5E5E5"> who works for</font><font color="#CCCCCC"> handy onyx I</font>

96
00:03:57,590 --> 00:04:03,859
think and<font color="#E5E5E5"> that's sort of why say serial</font>

97
00:04:01,790 --> 00:04:06,918
<font color="#CCCCCC">foe</font><font color="#E5E5E5"> PHP if you're familiar with white so</font>

98
00:04:03,859 --> 00:04:09,169
serial in Java exploitation and he's

99
00:04:06,919 --> 00:04:11,359
kindly given me<font color="#E5E5E5"> permission to release a</font>

100
00:04:09,169 --> 00:04:13,129
branch sort of alongside this talk which

101
00:04:11,359 --> 00:04:15,799
uses some<font color="#CCCCCC"> of the techniques I'm talking</font>

102
00:04:13,129 --> 00:04:17,750
about to embed<font color="#CCCCCC"> some of the payloads that</font>

103
00:04:15,799 --> 00:04:20,358
<font color="#E5E5E5">are already included</font><font color="#CCCCCC"> with that tool</font><font color="#E5E5E5"> in a</font>

104
00:04:17,750 --> 00:04:22,699
in a<font color="#E5E5E5"> far archive then I'll go through</font><font color="#CCCCCC"> a</font>

105
00:04:20,358 --> 00:04:24,289
<font color="#E5E5E5">number of case studies talk briefly</font>

106
00:04:22,699 --> 00:04:27,720
about<font color="#E5E5E5"> how we could defend against this</font>

107
00:04:24,289 --> 00:04:30,729
issue<font color="#E5E5E5"> and then a few things to take away</font>

108
00:04:27,720 --> 00:04:33,790
<font color="#CCCCCC">okay so the first</font><font color="#E5E5E5"> part of this talk</font><font color="#CCCCCC"> is</font>

109
00:04:30,730 --> 00:04:36,040
<font color="#E5E5E5">essentially</font><font color="#CCCCCC"> adventures</font><font color="#E5E5E5"> in going in</font>

110
00:04:33,790 --> 00:04:38,620
reading the PHP manual<font color="#CCCCCC"> and I came across</font>

111
00:04:36,040 --> 00:04:40,570
this cartoon which might not make<font color="#CCCCCC"> that</font>

112
00:04:38,620 --> 00:04:41,919
much<font color="#CCCCCC"> sense at the moment but</font><font color="#E5E5E5"> we'll go</font>

113
00:04:40,570 --> 00:04:43,270
back to<font color="#E5E5E5"> it</font><font color="#CCCCCC"> after I've shown you some</font>

114
00:04:41,919 --> 00:04:47,049
stuff<font color="#CCCCCC"> from the manual</font><font color="#E5E5E5"> and then</font><font color="#CCCCCC"> it will</font>

115
00:04:43,270 --> 00:04:48,820
hopefully make<font color="#E5E5E5"> more sense</font><font color="#CCCCCC"> okay so this</font>

116
00:04:47,050 --> 00:04:52,870
is<font color="#E5E5E5"> the page in the PHP</font><font color="#CCCCCC"> manual which</font>

117
00:04:48,820 --> 00:04:54,190
describes<font color="#CCCCCC"> Stream</font><font color="#E5E5E5"> wrappers so essentially</font>

118
00:04:52,870 --> 00:04:55,570
it<font color="#E5E5E5"> comes with lots of these built in</font>

119
00:04:54,190 --> 00:04:56,889
Stream wrappers<font color="#CCCCCC"> and there's a list at</font>

120
00:04:55,570 --> 00:04:59,680
<font color="#E5E5E5">the bottom</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the ones which are enabled</font>

121
00:04:56,889 --> 00:05:01,300
<font color="#CCCCCC">by default and</font><font color="#E5E5E5"> they're triggered by all</font>

122
00:04:59,680 --> 00:05:03,130
sorts<font color="#CCCCCC"> of different file operations so</font>

123
00:05:01,300 --> 00:05:07,080
opening a file or checking your for file

124
00:05:03,130 --> 00:05:07,080
exists copying a file that kind of thing

125
00:05:07,740 --> 00:05:11,320
these<font color="#CCCCCC"> have been</font><font color="#E5E5E5"> used to other stream</font>

126
00:05:10,000 --> 00:05:13,860
<font color="#E5E5E5">wrappers have been used in lots of</font>

127
00:05:11,320 --> 00:05:16,240
<font color="#CCCCCC">different sort of exploit techniques</font><font color="#E5E5E5"> so</font>

128
00:05:13,860 --> 00:05:18,310
you'll hopefully be<font color="#E5E5E5"> quite familiar with</font>

129
00:05:16,240 --> 00:05:22,870
the remote stream wrappers which I've

130
00:05:18,310 --> 00:05:24,970
grouped here file HTTP FTP and data data

131
00:05:22,870 --> 00:05:26,979
is not strictly remote<font color="#E5E5E5"> but it does</font>

132
00:05:24,970 --> 00:05:29,320
require this setting allow you<font color="#CCCCCC"> are</font><font color="#E5E5E5"> LF</font>

133
00:05:26,979 --> 00:05:32,710
open to be true to use it so it sort of

134
00:05:29,320 --> 00:05:34,360
falls neatly into that category<font color="#E5E5E5"> so these</font>

135
00:05:32,710 --> 00:05:36,729
are<font color="#CCCCCC"> these stream wrappers that</font>

136
00:05:34,360 --> 00:05:40,030
essentially you use to<font color="#E5E5E5"> access</font><font color="#CCCCCC"> external</font>

137
00:05:36,729 --> 00:05:42,219
files from PHP<font color="#E5E5E5"> so it can turn a local</font>

138
00:05:40,030 --> 00:05:45,460
file include into a remote file<font color="#CCCCCC"> included</font>

139
00:05:42,220 --> 00:05:47,410
if you can provide like a HTTP URL it

140
00:05:45,460 --> 00:05:49,930
<font color="#E5E5E5">will go off and grab that file and</font>

141
00:05:47,410 --> 00:05:51,970
<font color="#CCCCCC">include it as code often these are the</font>

142
00:05:49,930 --> 00:05:53,860
things<font color="#E5E5E5"> behind</font><font color="#CCCCCC"> server side request</font>

143
00:05:51,970 --> 00:05:55,720
forgery issues so for instance if we've

144
00:05:53,860 --> 00:05:57,850
got a call to file get contents and<font color="#E5E5E5"> we</font>

145
00:05:55,720 --> 00:06:00,220
<font color="#E5E5E5">control the argument we can give it an</font>

146
00:05:57,850 --> 00:06:02,320
HTTP or an<font color="#E5E5E5"> FTP argument and it will go</font>

147
00:06:00,220 --> 00:06:05,229
off and<font color="#E5E5E5"> get</font><font color="#CCCCCC"> that file and finally</font>

148
00:06:02,320 --> 00:06:12,310
<font color="#CCCCCC">they're activated by X X Z so X</font><font color="#E5E5E5"> and our</font>

149
00:06:05,229 --> 00:06:13,690
<font color="#E5E5E5">external entity issues the next</font><font color="#CCCCCC"> stream</font>

150
00:06:12,310 --> 00:06:17,110
<font color="#E5E5E5">wrapper I wanted to talk</font><font color="#CCCCCC"> about is the</font>

151
00:06:13,690 --> 00:06:19,600
PHP stream wrapper<font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> often used</font>

152
00:06:17,110 --> 00:06:21,700
<font color="#E5E5E5">for instance in local file included</font>

153
00:06:19,600 --> 00:06:24,520
exploits we can use<font color="#E5E5E5"> PHP code on such</font>

154
00:06:21,700 --> 00:06:26,800
<font color="#E5E5E5">that input</font><font color="#CCCCCC"> to grab standard i/o which</font>

155
00:06:24,520 --> 00:06:30,010
will be what we've posted to a page if

156
00:06:26,800 --> 00:06:33,490
we're you know if PHP is running as a as

157
00:06:30,010 --> 00:06:35,710
a web server<font color="#E5E5E5"> there's a quite a neat</font>

158
00:06:33,490 --> 00:06:38,260
technique you can use<font color="#E5E5E5"> to</font><font color="#CCCCCC"> read the source</font>

159
00:06:35,710 --> 00:06:40,510
code<font color="#E5E5E5"> of a file with a local file include</font>

160
00:06:38,260 --> 00:06:43,719
because this<font color="#CCCCCC"> stream wrapper includes</font>

161
00:06:40,510 --> 00:06:46,360
some filtering functionality so if we

162
00:06:43,720 --> 00:06:47,860
included<font color="#E5E5E5"> a PHP file from another PHP</font>

163
00:06:46,360 --> 00:06:49,390
file it's going<font color="#CCCCCC"> to try</font><font color="#E5E5E5"> and run that but</font>

164
00:06:47,860 --> 00:06:52,240
if we want<font color="#E5E5E5"> to read the source code we</font>

165
00:06:49,390 --> 00:06:54,490
<font color="#E5E5E5">can base 64 encode that</font><font color="#CCCCCC"> then include it</font>

166
00:06:52,240 --> 00:06:56,050
<font color="#E5E5E5">and then on our end we can basics</font>

167
00:06:54,490 --> 00:06:59,770
defrauding code that and read the source

168
00:06:56,050 --> 00:07:02,680
code<font color="#CCCCCC"> Stephan essay used a really neat</font>

169
00:06:59,770 --> 00:07:04,870
sort of variation<font color="#E5E5E5"> of this on one of his</font>

170
00:07:02,680 --> 00:07:06,490
<font color="#E5E5E5">early on serialization exploits so he</font>

171
00:07:04,870 --> 00:07:09,130
was able<font color="#E5E5E5"> to put together a chain which</font>

172
00:07:06,490 --> 00:07:11,500
would write arbitrary<font color="#E5E5E5"> data to a file but</font>

173
00:07:09,130 --> 00:07:14,110
there was a prefix on the file which was

174
00:07:11,500 --> 00:07:16,390
PHP<font color="#CCCCCC"> Die which would stop any code after</font>

175
00:07:14,110 --> 00:07:17,610
that from running<font color="#E5E5E5"> well what he managed</font>

176
00:07:16,390 --> 00:07:20,590
<font color="#CCCCCC">to do was essentially</font>

177
00:07:17,610 --> 00:07:22,450
<font color="#CCCCCC">base 64 decode everything before</font><font color="#E5E5E5"> it was</font>

178
00:07:20,590 --> 00:07:24,219
written<font color="#E5E5E5"> to the file and that</font><font color="#CCCCCC"> sort of</font>

179
00:07:22,450 --> 00:07:26,169
nullifies this header and then he could

180
00:07:24,220 --> 00:07:29,680
prepare his other data to write anything

181
00:07:26,169 --> 00:07:32,830
<font color="#E5E5E5">to</font><font color="#CCCCCC"> the file the next stream wrapper</font><font color="#E5E5E5"> is</font>

182
00:07:29,680 --> 00:07:34,419
glob whenever I come across<font color="#CCCCCC"> this</font><font color="#E5E5E5"> I think</font>

183
00:07:32,830 --> 00:07:36,700
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> going to be really useful but</font><font color="#E5E5E5"> it</font>

184
00:07:34,419 --> 00:07:38,500
works<font color="#CCCCCC"> differently from the others</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> you</font>

185
00:07:36,700 --> 00:07:41,860
<font color="#E5E5E5">can for instance call file</font><font color="#CCCCCC"> get contents</font>

186
00:07:38,500 --> 00:07:44,349
<font color="#E5E5E5">glob and then a path and get a listing</font>

187
00:07:41,860 --> 00:07:45,849
of files<font color="#E5E5E5"> this is the example</font><font color="#CCCCCC"> from the</font>

188
00:07:44,349 --> 00:07:48,270
manual<font color="#E5E5E5"> of</font><font color="#CCCCCC"> how it's</font><font color="#E5E5E5"> used so it's used</font>

189
00:07:45,849 --> 00:07:50,680
<font color="#CCCCCC">with the directory iterator there</font><font color="#E5E5E5"> and</font>

190
00:07:48,270 --> 00:07:52,390
there's a page in<font color="#CCCCCC"> the manual that lists</font>

191
00:07:50,680 --> 00:07:53,830
all<font color="#E5E5E5"> the operations supported by any</font>

192
00:07:52,390 --> 00:07:56,219
<font color="#E5E5E5">stream wrapper and the glob stream</font>

193
00:07:53,830 --> 00:07:59,229
wrapper literally supports none of them

194
00:07:56,220 --> 00:08:00,580
so there's two stream wrap has left<font color="#E5E5E5"> as</font>

195
00:07:59,229 --> 00:08:03,010
<font color="#CCCCCC">they</font><font color="#E5E5E5"> deliver and</font><font color="#CCCCCC"> four which are both</font>

196
00:08:00,580 --> 00:08:05,650
<font color="#E5E5E5">related to archives</font><font color="#CCCCCC"> so if we're looking</font>

197
00:08:03,010 --> 00:08:07,330
<font color="#E5E5E5">to exploit those what we could think</font>

198
00:08:05,650 --> 00:08:09,940
about is if there's issues<font color="#E5E5E5"> in the native</font>

199
00:08:07,330 --> 00:08:12,669
code so maybe we could supply sort of a

200
00:08:09,940 --> 00:08:14,229
malicious archive<font color="#E5E5E5"> and try and trigger</font>

201
00:08:12,669 --> 00:08:17,020
some memory corruption<font color="#E5E5E5"> or something like</font>

202
00:08:14,229 --> 00:08:19,090
<font color="#E5E5E5">that that's going to be quite difficult</font>

203
00:08:17,020 --> 00:08:22,680
<font color="#E5E5E5">to exploit sort of in the presence of</font>

204
00:08:19,090 --> 00:08:25,419
modern mitigations like a SLR and<font color="#CCCCCC"> Det</font>

205
00:08:22,680 --> 00:08:26,800
now obviously<font color="#E5E5E5"> there's something else</font>

206
00:08:25,419 --> 00:08:29,200
there<font color="#E5E5E5"> otherwise I wouldn't</font><font color="#CCCCCC"> be giving</font>

207
00:08:26,800 --> 00:08:30,470
<font color="#E5E5E5">this talk</font><font color="#CCCCCC"> so we'll focus in on the far</font>

208
00:08:29,200 --> 00:08:33,919
wrapper

209
00:08:30,470 --> 00:08:35,780
and<font color="#E5E5E5"> within the manual it lists</font>

210
00:08:33,919 --> 00:08:37,880
everything<font color="#E5E5E5"> that's in a far archive and</font>

211
00:08:35,780 --> 00:08:39,110
the<font color="#E5E5E5"> first thing it lists is quite</font>

212
00:08:37,880 --> 00:08:42,559
interesting so there's<font color="#E5E5E5"> something called</font>

213
00:08:39,110 --> 00:08:45,110
<font color="#E5E5E5">a stub and the stub contains PHP code so</font>

214
00:08:42,559 --> 00:08:47,060
immediately as an attacker we think what

215
00:08:45,110 --> 00:08:49,700
can<font color="#E5E5E5"> we get it</font><font color="#CCCCCC"> to run that code through</font>

216
00:08:47,060 --> 00:08:52,790
the stream wrapper so<font color="#E5E5E5"> I wrote a simple</font>

217
00:08:49,700 --> 00:08:54,980
test program to set the stub<font color="#E5E5E5"> to just</font>

218
00:08:52,790 --> 00:08:58,310
echo something<font color="#E5E5E5"> out and then to access</font>

219
00:08:54,980 --> 00:09:00,110
<font color="#CCCCCC">the file</font><font color="#E5E5E5"> through</font><font color="#CCCCCC"> the stream wrapper</font><font color="#E5E5E5"> and</font>

220
00:08:58,310 --> 00:09:02,689
<font color="#E5E5E5">unsurprisingly it doesn't trigger that</font>

221
00:09:00,110 --> 00:09:04,430
code and just<font color="#E5E5E5"> to sort of confirm that</font>

222
00:09:02,690 --> 00:09:06,410
everything<font color="#CCCCCC"> was working as I expected we</font>

223
00:09:04,430 --> 00:09:09,680
can execute that<font color="#E5E5E5"> archive and the stub</font>

224
00:09:06,410 --> 00:09:11,360
<font color="#E5E5E5">does get executed now as best as I can</font>

225
00:09:09,680 --> 00:09:13,250
<font color="#E5E5E5">tell essentially that's the only</font>

226
00:09:11,360 --> 00:09:17,260
circumstance in<font color="#CCCCCC"> which that code gets run</font>

227
00:09:13,250 --> 00:09:19,910
if<font color="#CCCCCC"> we access</font><font color="#E5E5E5"> that file as an executor</font>

228
00:09:17,260 --> 00:09:21,860
<font color="#E5E5E5">not wanting to be desired we move on to</font>

229
00:09:19,910 --> 00:09:23,390
the next<font color="#CCCCCC"> element of</font><font color="#E5E5E5"> the file and there's</font>

230
00:09:21,860 --> 00:09:26,450
something<font color="#E5E5E5"> called a manifest in all four</font>

231
00:09:23,390 --> 00:09:28,939
archives<font color="#E5E5E5"> and if we look at the manual</font>

232
00:09:26,450 --> 00:09:30,620
page which lists what within a manifest

233
00:09:28,940 --> 00:09:33,080
<font color="#E5E5E5">there's something very interesting in</font>

234
00:09:30,620 --> 00:09:34,520
there so we<font color="#E5E5E5"> can have metadata in this</font>

235
00:09:33,080 --> 00:09:36,110
archive which<font color="#CCCCCC"> is contained in</font><font color="#E5E5E5"> the</font>

236
00:09:34,520 --> 00:09:39,319
<font color="#E5E5E5">manifest which is</font><font color="#CCCCCC"> in the standard</font>

237
00:09:36,110 --> 00:09:41,180
serialized format so sort<font color="#CCCCCC"> of again not</font>

238
00:09:39,320 --> 00:09:45,560
<font color="#E5E5E5">expecting it to</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> but we may as</font><font color="#CCCCCC"> well</font>

239
00:09:41,180 --> 00:09:48,109
try<font color="#CCCCCC"> I constructed a simple sort of test</font>

240
00:09:45,560 --> 00:09:50,630
program so we define a class called test

241
00:09:48,110 --> 00:09:52,910
object and we set the<font color="#E5E5E5"> metadata to an</font>

242
00:09:50,630 --> 00:09:55,550
instance of this<font color="#CCCCCC"> class and then another</font>

243
00:09:52,910 --> 00:09:57,620
test program which<font color="#E5E5E5"> again defines this</font>

244
00:09:55,550 --> 00:09:59,180
<font color="#E5E5E5">class but also has a destructor defined</font>

245
00:09:57,620 --> 00:10:00,950
this time so<font color="#E5E5E5"> that if the object</font><font color="#CCCCCC"> gets</font>

246
00:09:59,180 --> 00:10:03,859
<font color="#E5E5E5">unsterilized and destroyed it should</font>

247
00:10:00,950 --> 00:10:05,890
trigger this<font color="#E5E5E5"> code and we're going to</font>

248
00:10:03,860 --> 00:10:08,180
<font color="#E5E5E5">access a file in the archive and</font>

249
00:10:05,890 --> 00:10:11,300
surprise<font color="#CCCCCC"> surprise it actually does work</font>

250
00:10:08,180 --> 00:10:12,979
so if we can put serialized data<font color="#CCCCCC"> within</font>

251
00:10:11,300 --> 00:10:15,020
<font color="#E5E5E5">an archive and</font><font color="#CCCCCC"> then access it through</font>

252
00:10:12,980 --> 00:10:17,660
the<font color="#E5E5E5"> stream wrapper that</font><font color="#CCCCCC"> will be unsee</font>

253
00:10:15,020 --> 00:10:18,949
<font color="#E5E5E5">realized and if it hadn't been so</font>

254
00:10:17,660 --> 00:10:23,390
<font color="#CCCCCC">obvious you would have</font><font color="#E5E5E5"> done something</font>

255
00:10:18,950 --> 00:10:25,070
like<font color="#E5E5E5"> that okay so just to sort of</font>

256
00:10:23,390 --> 00:10:26,839
confirm that<font color="#CCCCCC"> everything is working as I</font>

257
00:10:25,070 --> 00:10:28,910
expected I made a<font color="#E5E5E5"> couple more test</font>

258
00:10:26,839 --> 00:10:30,680
programs so instead of getting<font color="#E5E5E5"> the</font>

259
00:10:28,910 --> 00:10:32,800
contents<font color="#CCCCCC"> of a file within</font><font color="#E5E5E5"> that archive</font>

260
00:10:30,680 --> 00:10:35,870
<font color="#E5E5E5">we'll just check whether the file exists</font>

261
00:10:32,800 --> 00:10:38,449
and also we can<font color="#E5E5E5"> check whether a file</font>

262
00:10:35,870 --> 00:10:40,700
<font color="#E5E5E5">that clearly doesn't exist exists and</font>

263
00:10:38,450 --> 00:10:44,870
both times<font color="#E5E5E5"> the destructor still gets</font>

264
00:10:40,700 --> 00:10:49,100
called so<font color="#E5E5E5"> hopefully now</font><font color="#CCCCCC"> that makes a</font>

265
00:10:44,870 --> 00:10:51,740
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more sense</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> from this sort</font>

266
00:10:49,100 --> 00:10:54,110
of obvious attack methodology emerges

267
00:10:51,740 --> 00:10:55,520
<font color="#E5E5E5">with sort of two parts so we had need to</font>

268
00:10:54,110 --> 00:10:58,100
get one<font color="#E5E5E5"> of these archives</font><font color="#CCCCCC"> onto the</font>

269
00:10:55,520 --> 00:11:00,050
target<font color="#CCCCCC"> and then we need</font><font color="#E5E5E5"> to reference it</font>

270
00:10:58,100 --> 00:11:02,930
through the stream wrapper to cause<font color="#E5E5E5"> our</font>

271
00:11:00,050 --> 00:11:05,479
payload to be<font color="#CCCCCC"> unsee realized and this is</font>

272
00:11:02,930 --> 00:11:08,089
<font color="#E5E5E5">quite similar to local file include</font>

273
00:11:05,480 --> 00:11:09,860
vulnerabilities so in that case we<font color="#CCCCCC"> need</font>

274
00:11:08,089 --> 00:11:13,580
to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> a file</font><font color="#E5E5E5"> onto the target and then</font>

275
00:11:09,860 --> 00:11:15,830
include<font color="#CCCCCC"> the source code so if you are</font>

276
00:11:13,580 --> 00:11:18,050
familiar<font color="#CCCCCC"> with the sort</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> standard on</font>

277
00:11:15,830 --> 00:11:21,950
serialization<font color="#E5E5E5"> issue there's a couple of</font>

278
00:11:18,050 --> 00:11:24,079
differences to<font color="#CCCCCC"> be aware of so</font><font color="#E5E5E5"> when a</font>

279
00:11:21,950 --> 00:11:25,760
normal<font color="#E5E5E5"> uncie realization issue occurs</font>

280
00:11:24,080 --> 00:11:27,980
the application is very deliberately

281
00:11:25,760 --> 00:11:30,140
<font color="#CCCCCC">uncie realized something and then does</font>

282
00:11:27,980 --> 00:11:33,320
<font color="#CCCCCC">something with it so it's often</font><font color="#E5E5E5"> easy to</font>

283
00:11:30,140 --> 00:11:35,000
<font color="#E5E5E5">access a number</font><font color="#CCCCCC"> of magic</font><font color="#E5E5E5"> methods so not</font>

284
00:11:33,320 --> 00:11:36,980
<font color="#E5E5E5">just this destruct and wake up for</font>

285
00:11:35,000 --> 00:11:39,650
instance there's one called<font color="#CCCCCC"> two string</font>

286
00:11:36,980 --> 00:11:41,510
so<font color="#CCCCCC"> we could you know try</font><font color="#E5E5E5"> and trigger a</font>

287
00:11:39,650 --> 00:11:43,459
chain<font color="#E5E5E5"> that way in this case the</font>

288
00:11:41,510 --> 00:11:45,589
applications<font color="#E5E5E5"> not really had any</font>

289
00:11:43,459 --> 00:11:47,540
intention to<font color="#E5E5E5"> one serialize anything so</font>

290
00:11:45,589 --> 00:11:50,450
we only have<font color="#E5E5E5"> destruct and wake up to</font>

291
00:11:47,540 --> 00:11:53,300
<font color="#E5E5E5">start our chain from and there's a sort</font>

292
00:11:50,450 --> 00:11:55,339
<font color="#E5E5E5">of a quirk that means it within a</font>

293
00:11:53,300 --> 00:11:57,589
destruct chain we've lost the<font color="#E5E5E5"> current</font>

294
00:11:55,339 --> 00:11:59,120
paths or<font color="#CCCCCC"> anything any file operations</font><font color="#E5E5E5"> we</font>

295
00:11:57,589 --> 00:12:04,339
do<font color="#CCCCCC"> within that chain we need to use</font>

296
00:11:59,120 --> 00:12:06,080
absolute<font color="#CCCCCC"> birth</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> are the</font><font color="#E5E5E5"> I showed you</font>

297
00:12:04,339 --> 00:12:08,780
a lot<font color="#CCCCCC"> of copies of this</font><font color="#E5E5E5"> slide with</font><font color="#CCCCCC"> the</font>

298
00:12:06,080 --> 00:12:10,580
different elements<font color="#E5E5E5"> of a fire archive the</font>

299
00:12:08,780 --> 00:12:12,980
third<font color="#CCCCCC"> element</font><font color="#E5E5E5"> is the file contents which</font>

300
00:12:10,580 --> 00:12:15,020
I hope is obvious<font color="#E5E5E5"> the fourth element</font><font color="#CCCCCC"> is</font>

301
00:12:12,980 --> 00:12:18,560
a<font color="#E5E5E5"> signature which it says is optional</font>

302
00:12:15,020 --> 00:12:20,780
but by<font color="#CCCCCC"> default PHP</font><font color="#E5E5E5"> will only access one</font>

303
00:12:18,560 --> 00:12:22,609
<font color="#CCCCCC">of</font><font color="#E5E5E5"> these archives if it has a valid</font>

304
00:12:20,780 --> 00:12:25,240
signature<font color="#E5E5E5"> so that's not optional to us</font>

305
00:12:22,610 --> 00:12:25,240
as an attacker

306
00:12:25,590 --> 00:12:29,490
okay that you've probably seen<font color="#E5E5E5"> enough of</font>

307
00:12:27,630 --> 00:12:30,930
the manual now so I'm going<font color="#E5E5E5"> to take a</font>

308
00:12:29,490 --> 00:12:32,250
<font color="#E5E5E5">few</font><font color="#CCCCCC"> things out</font><font color="#E5E5E5"> of it and hopefully you</font>

309
00:12:30,930 --> 00:12:35,579
<font color="#CCCCCC">can trust me that this</font><font color="#E5E5E5"> is what the</font>

310
00:12:32,250 --> 00:12:37,620
manual<font color="#E5E5E5"> says there's three valid formats</font>

311
00:12:35,580 --> 00:12:41,070
for<font color="#E5E5E5"> a</font><font color="#CCCCCC"> fire file sort of the base file</font>

312
00:12:37,620 --> 00:12:42,779
format<font color="#CCCCCC"> tar format</font><font color="#E5E5E5"> and zip format</font><font color="#CCCCCC"> for now</font>

313
00:12:41,070 --> 00:12:44,430
I'm going to<font color="#CCCCCC"> ignore the zip format so</font>

314
00:12:42,779 --> 00:12:46,589
<font color="#CCCCCC">that might be</font><font color="#E5E5E5"> useful if</font><font color="#CCCCCC"> we were</font>

315
00:12:44,430 --> 00:12:48,270
attacking<font color="#E5E5E5"> a system which had some</font>

316
00:12:46,589 --> 00:12:52,320
legitimate<font color="#E5E5E5"> functionality which</font><font color="#CCCCCC"> allowed</font>

317
00:12:48,270 --> 00:12:54,029
us<font color="#CCCCCC"> to</font><font color="#E5E5E5"> upload a zip file but</font><font color="#CCCCCC"> fahren</font><font color="#E5E5E5"> tar</font>

318
00:12:52,320 --> 00:12:56,400
both have some sort<font color="#CCCCCC"> of</font><font color="#E5E5E5"> interesting</font>

319
00:12:54,029 --> 00:12:58,050
flexibilities<font color="#CCCCCC"> in their format</font><font color="#E5E5E5"> that could</font>

320
00:12:56,400 --> 00:13:01,500
<font color="#E5E5E5">be exploitable to us so we'll start off</font>

321
00:12:58,050 --> 00:13:03,089
<font color="#CCCCCC">with the base file format</font><font color="#E5E5E5"> I've done</font><font color="#CCCCCC"> has</font>

322
00:13:01,500 --> 00:13:06,440
sort of<font color="#E5E5E5"> a little hex</font><font color="#CCCCCC"> dump</font><font color="#E5E5E5"> with all the</font>

323
00:13:03,089 --> 00:13:09,890
different<font color="#E5E5E5"> elements in it and if I</font><font color="#CCCCCC"> can</font>

324
00:13:06,440 --> 00:13:12,510
<font color="#CCCCCC">from here the green is the</font><font color="#E5E5E5"> serialized</font>

325
00:13:09,890 --> 00:13:14,189
<font color="#E5E5E5">metadata in the sort of standard format</font>

326
00:13:12,510 --> 00:13:16,439
so that's probably<font color="#E5E5E5"> the</font><font color="#CCCCCC"> most interesting</font>

327
00:13:14,190 --> 00:13:19,680
<font color="#CCCCCC">thing to</font><font color="#E5E5E5"> us but what</font><font color="#CCCCCC"> I wanted</font><font color="#E5E5E5"> you to</font>

328
00:13:16,440 --> 00:13:21,630
actually<font color="#E5E5E5"> notice is</font><font color="#CCCCCC"> for the</font><font color="#E5E5E5"> stub so that</font>

329
00:13:19,680 --> 00:13:23,370
stub never got run but we can set it<font color="#CCCCCC"> to</font>

330
00:13:21,630 --> 00:13:25,320
essentially<font color="#CCCCCC"> anything we want as long</font><font color="#E5E5E5"> as</font>

331
00:13:23,370 --> 00:13:28,410
<font color="#E5E5E5">it includes this small segment of code</font>

332
00:13:25,320 --> 00:13:30,120
and that<font color="#E5E5E5"> means we can prefix a valid</font>

333
00:13:28,410 --> 00:13:32,520
archive with anything we want we can put

334
00:13:30,120 --> 00:13:34,620
<font color="#CCCCCC">it in the stub and that will be the</font>

335
00:13:32,520 --> 00:13:36,990
start of<font color="#E5E5E5"> the file so we can fake a lot</font>

336
00:13:34,620 --> 00:13:40,860
<font color="#E5E5E5">of file formats by simply putting data</font>

337
00:13:36,990 --> 00:13:42,930
into<font color="#E5E5E5"> the stub now sometimes that might</font>

338
00:13:40,860 --> 00:13:44,640
not be<font color="#E5E5E5"> quite enough for us and there's</font>

339
00:13:42,930 --> 00:13:46,530
some<font color="#E5E5E5"> interesting flexibilities</font><font color="#CCCCCC"> in the</font>

340
00:13:44,640 --> 00:13:48,870
tar file format<font color="#CCCCCC"> that allow us to do</font>

341
00:13:46,530 --> 00:13:50,850
<font color="#E5E5E5">something else I'm not</font><font color="#CCCCCC"> going to go sort</font>

342
00:13:48,870 --> 00:13:53,730
<font color="#E5E5E5">of into the</font><font color="#CCCCCC"> full details of</font><font color="#E5E5E5"> that file</font>

343
00:13:50,850 --> 00:13:56,280
format but<font color="#E5E5E5"> these are sort of the the</font>

344
00:13:53,730 --> 00:13:59,520
important points and these<font color="#E5E5E5"> two in</font>

345
00:13:56,280 --> 00:14:01,620
<font color="#E5E5E5">particular so the first 100 bytes of a</font>

346
00:13:59,520 --> 00:14:03,540
tar archive<font color="#E5E5E5"> is the file name</font><font color="#CCCCCC"> of the</font>

347
00:14:01,620 --> 00:14:05,760
first file in the<font color="#CCCCCC"> r-mo</font><font color="#E5E5E5"> so that's quite</font>

348
00:14:03,540 --> 00:14:07,170
flexible<font color="#E5E5E5"> to us we can change that and</font>

349
00:14:05,760 --> 00:14:09,839
we're simply changing<font color="#E5E5E5"> the name of the</font>

350
00:14:07,170 --> 00:14:13,349
file and the end of the archive is

351
00:14:09,839 --> 00:14:15,690
marked<font color="#E5E5E5"> 1,024 zero bytes</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> anything</font>

352
00:14:13,350 --> 00:14:18,720
<font color="#CCCCCC">after that is</font><font color="#E5E5E5"> ignored</font><font color="#CCCCCC"> so this is</font><font color="#E5E5E5"> quite</font>

353
00:14:15,690 --> 00:14:21,230
useful<font color="#CCCCCC"> for us to sort of make files that</font>

354
00:14:18,720 --> 00:14:23,850
<font color="#E5E5E5">might pose</font><font color="#CCCCCC"> as two</font><font color="#E5E5E5"> different formats so</font>

355
00:14:21,230 --> 00:14:25,950
<font color="#CCCCCC">to just</font><font color="#E5E5E5"> to go through it really simply</font>

356
00:14:23,850 --> 00:14:29,010
here's<font color="#E5E5E5"> here's another hex dump this is</font>

357
00:14:25,950 --> 00:14:32,150
at the start of a tar archive<font color="#CCCCCC"> what I can</font>

358
00:14:29,010 --> 00:14:34,430
do is change<font color="#CCCCCC"> the name of</font><font color="#E5E5E5"> that first file</font>

359
00:14:32,150 --> 00:14:36,829
<font color="#E5E5E5">to what looks like gibberish but if I go</font>

360
00:14:34,430 --> 00:14:39,380
through<font color="#CCCCCC"> I said the</font><font color="#E5E5E5"> first two bytes to a</font>

361
00:14:36,830 --> 00:14:40,910
<font color="#CCCCCC">JPEG header</font><font color="#E5E5E5"> the next two bytes say</font>

362
00:14:39,380 --> 00:14:43,189
basically<font color="#E5E5E5"> this is a comment within the</font>

363
00:14:40,910 --> 00:14:45,170
<font color="#E5E5E5">JPEG file and the next two bytes to the</font>

364
00:14:43,190 --> 00:14:47,390
<font color="#E5E5E5">length of that comment now we can set</font>

365
00:14:45,170 --> 00:14:49,790
that length<font color="#E5E5E5"> to encompass the whole of</font>

366
00:14:47,390 --> 00:14:51,770
the archive and then just carry on<font color="#E5E5E5"> a</font>

367
00:14:49,790 --> 00:14:58,010
<font color="#CCCCCC">JPEG file</font><font color="#E5E5E5"> afterwards and because we've</font>

368
00:14:51,770 --> 00:14:59,630
got those<font color="#CCCCCC"> 1,024</font><font color="#E5E5E5"> null bytes the PHP when</font>

369
00:14:58,010 --> 00:15:00,920
it's dealing with<font color="#E5E5E5"> the archive will</font>

370
00:14:59,630 --> 00:15:03,170
ignore everything<font color="#E5E5E5"> after</font><font color="#CCCCCC"> that and</font>

371
00:15:00,920 --> 00:15:05,089
something<font color="#E5E5E5"> dealing with the image will</font>

372
00:15:03,170 --> 00:15:08,170
see the archive essentially as a<font color="#CCCCCC"> comment</font>

373
00:15:05,090 --> 00:15:10,190
<font color="#CCCCCC">and everything else is</font><font color="#E5E5E5"> the image so</font>

374
00:15:08,170 --> 00:15:14,150
hopefully I've<font color="#E5E5E5"> got one of these</font><font color="#CCCCCC"> in the</font>

375
00:15:10,190 --> 00:15:40,850
<font color="#CCCCCC">distant</font><font color="#E5E5E5"> so this is just a picture of my</font>

376
00:15:14,150 --> 00:16:10,250
cat you're missing some good pictures<font color="#CCCCCC"> of</font>

377
00:15:40,850 --> 00:16:13,000
<font color="#E5E5E5">my cat prepared like a</font><font color="#CCCCCC"> song-and-dance</font>

378
00:16:10,250 --> 00:16:13,000
<font color="#CCCCCC">routine</font>

379
00:16:24,760 --> 00:16:46,910
so make sure<font color="#E5E5E5"> so HDMI so</font><font color="#CCCCCC"> I meant to</font>

380
00:16:27,920 --> 00:16:51,140
strike<font color="#E5E5E5"> finish a PC right back to the</font>

381
00:16:46,910 --> 00:16:52,520
important<font color="#CCCCCC"> stuff a picture of my cat</font><font color="#E5E5E5"> if I</font>

382
00:16:51,140 --> 00:17:01,069
change the file<font color="#CCCCCC"> name of the picture</font>

383
00:16:52,520 --> 00:17:03,230
<font color="#CCCCCC">might go and open it</font><font color="#E5E5E5"> with an archive</font>

384
00:17:01,070 --> 00:17:05,590
program we<font color="#E5E5E5"> can see it's recognized as a</font>

385
00:17:03,230 --> 00:17:05,589
<font color="#CCCCCC">tower</font>

386
00:17:07,550 --> 00:17:12,770
right<font color="#E5E5E5"> so it's got this unusually named</font>

387
00:17:10,520 --> 00:17:14,329
<font color="#CCCCCC">fun in it but it's also got all</font><font color="#E5E5E5"> the</font>

388
00:17:12,770 --> 00:17:16,900
<font color="#E5E5E5">elements of a file file which I</font>

389
00:17:14,329 --> 00:17:20,960
mentioned<font color="#E5E5E5"> earlier so it's got the stub</font>

390
00:17:16,900 --> 00:17:24,740
and<font color="#E5E5E5"> the metadata which is in the</font>

391
00:17:20,960 --> 00:17:26,840
standard PHP serialized format and it's

392
00:17:24,740 --> 00:17:31,130
got the signature which isn't<font color="#CCCCCC"> really</font>

393
00:17:26,839 --> 00:17:33,320
sort<font color="#CCCCCC"> of human readable but so we can see</font>

394
00:17:31,130 --> 00:17:36,290
that it's essentially a perfect polyglot

395
00:17:33,320 --> 00:17:38,870
so the you<font color="#E5E5E5"> know depending on which</font>

396
00:17:36,290 --> 00:17:41,000
application<font color="#CCCCCC"> is using it it views it as</font><font color="#E5E5E5"> a</font>

397
00:17:38,870 --> 00:17:50,629
perfectly legitimate<font color="#CCCCCC"> sort</font><font color="#E5E5E5"> of file of</font>

398
00:17:41,000 --> 00:17:52,760
that<font color="#E5E5E5"> format so I mentioned earlier about</font>

399
00:17:50,630 --> 00:17:55,820
our sort<font color="#E5E5E5"> of fall planting so is there</font>

400
00:17:52,760 --> 00:17:57,710
anything beyond just uploading a file to

401
00:17:55,820 --> 00:18:02,870
the target application<font color="#CCCCCC"> we can do to get</font>

402
00:17:57,710 --> 00:18:05,090
<font color="#E5E5E5">one on there so there's a couple of</font>

403
00:18:02,870 --> 00:18:07,719
<font color="#E5E5E5">tricks from local file inclusion that we</font>

404
00:18:05,090 --> 00:18:10,850
could use<font color="#E5E5E5"> I've referenced them there</font>

405
00:18:07,720 --> 00:18:14,990
so<font color="#CCCCCC"> Brett Moore came up with a really</font>

406
00:18:10,850 --> 00:18:16,939
cool technique<font color="#E5E5E5"> with</font><font color="#CCCCCC"> PHP Mpho whereby</font>

407
00:18:14,990 --> 00:18:18,890
basically if you upload a file to<font color="#CCCCCC"> a PHP</font>

408
00:18:16,940 --> 00:18:22,390
<font color="#E5E5E5">page it gets saved to the temporary</font>

409
00:18:18,890 --> 00:18:27,470
folder<font color="#E5E5E5"> and the dollar underscore files</font>

410
00:18:22,390 --> 00:18:29,150
<font color="#E5E5E5">array gets populated and if</font><font color="#CCCCCC"> I'm PHP info</font>

411
00:18:27,470 --> 00:18:30,800
outputs this so it<font color="#CCCCCC"> will tell us where</font>

412
00:18:29,150 --> 00:18:32,900
<font color="#CCCCCC">that temporary file is but as soon as</font>

413
00:18:30,800 --> 00:18:34,520
<font color="#E5E5E5">PHP info</font><font color="#CCCCCC"> has</font><font color="#E5E5E5"> finished outputting it will</font>

414
00:18:32,900 --> 00:18:37,720
delete<font color="#CCCCCC"> that file</font><font color="#E5E5E5"> but what we can do is</font>

415
00:18:34,520 --> 00:18:40,220
sort of store PHP info by refusing to

416
00:18:37,720 --> 00:18:41,810
<font color="#E5E5E5">receive its output once we've got what</font>

417
00:18:40,220 --> 00:18:45,550
we need and<font color="#E5E5E5"> that will cause the fire to</font>

418
00:18:41,810 --> 00:18:48,110
<font color="#E5E5E5">persist for some time Jimmy ran smart</font>

419
00:18:45,550 --> 00:18:50,090
<font color="#E5E5E5">demonstrated that there's basically</font>

420
00:18:48,110 --> 00:18:55,370
really low entropy in<font color="#CCCCCC"> the names of</font><font color="#E5E5E5"> these</font>

421
00:18:50,090 --> 00:18:57,740
files on<font color="#E5E5E5"> windows so a bit of feedback</font>

422
00:18:55,370 --> 00:18:59,719
<font color="#CCCCCC">I've had</font><font color="#E5E5E5"> after I gave this talk last</font>

423
00:18:57,740 --> 00:19:01,360
<font color="#E5E5E5">week if black cat has made me</font><font color="#CCCCCC"> realise</font>

424
00:18:59,720 --> 00:19:03,830
<font color="#CCCCCC">that one</font><font color="#E5E5E5"> of the things I put</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> here</font>

425
00:19:01,360 --> 00:19:06,860
<font color="#E5E5E5">isn't really</font><font color="#CCCCCC"> feasible so the</font><font color="#E5E5E5"> session</font>

426
00:19:03,830 --> 00:19:09,590
file stuff you can only<font color="#E5E5E5"> trigger this on</font>

427
00:19:06,860 --> 00:19:11,990
a file which has<font color="#CCCCCC"> an extension</font><font color="#E5E5E5"> so in</font>

428
00:19:09,590 --> 00:19:15,260
Windows the temporary files will have

429
00:19:11,990 --> 00:19:17,360
<font color="#CCCCCC">the TMP extension but in Linux</font><font color="#E5E5E5"> they</font>

430
00:19:15,260 --> 00:19:19,230
won't<font color="#E5E5E5"> and as far</font><font color="#CCCCCC"> as I know in both</font>

431
00:19:17,360 --> 00:19:21,750
session files won't have an extent

432
00:19:19,230 --> 00:19:25,020
you can't trigger<font color="#E5E5E5"> this issue on a file</font>

433
00:19:21,750 --> 00:19:26,580
with no extension<font color="#E5E5E5"> and then finally up</font>

434
00:19:25,020 --> 00:19:28,200
<font color="#CCCCCC">but sort of mentioned log files there</font>

435
00:19:26,580 --> 00:19:30,030
<font color="#E5E5E5">I've not managed</font><font color="#CCCCCC"> to pull it</font><font color="#E5E5E5"> off but</font><font color="#CCCCCC"> in</font>

436
00:19:28,200 --> 00:19:32,610
theory<font color="#E5E5E5"> it's possible</font><font color="#CCCCCC"> it's quite</font>

437
00:19:30,030 --> 00:19:34,230
difficult<font color="#CCCCCC"> too we need to know the entire</font>

438
00:19:32,610 --> 00:19:35,820
contents<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the file to calculate a</font>

439
00:19:34,230 --> 00:19:38,669
valid signature<font color="#E5E5E5"> for whatever we're going</font>

440
00:19:35,820 --> 00:19:42,720
<font color="#E5E5E5">to append on the end of</font><font color="#CCCCCC"> that file</font><font color="#E5E5E5"> or you</font>

441
00:19:38,669 --> 00:19:44,580
know in the middle of it<font color="#E5E5E5"> okay so in</font>

442
00:19:42,720 --> 00:19:46,320
terms<font color="#CCCCCC"> of identifying the vulnerabilities</font>

443
00:19:44,580 --> 00:19:49,199
that are<font color="#E5E5E5"> affected</font><font color="#CCCCCC"> by this it's</font>

444
00:19:46,320 --> 00:19:52,460
essentially all X X<font color="#E5E5E5"> E and a number of SS</font>

445
00:19:49,200 --> 00:19:54,570
<font color="#E5E5E5">are F issues on PHP applications</font><font color="#CCCCCC"> I</font>

446
00:19:52,460 --> 00:19:56,250
thought it was worth mentioning<font color="#CCCCCC"> that</font>

447
00:19:54,570 --> 00:19:59,399
<font color="#E5E5E5">there's an option which</font><font color="#CCCCCC"> is sometimes</font>

448
00:19:56,250 --> 00:20:01,260
<font color="#E5E5E5">used</font><font color="#CCCCCC"> to protect against</font><font color="#E5E5E5"> exit</font><font color="#CCCCCC"> C</font><font color="#E5E5E5"> which is</font>

449
00:19:59,400 --> 00:20:03,390
the no net option which<font color="#CCCCCC"> says no network</font>

450
00:20:01,260 --> 00:20:06,049
because<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is dealing only with local</font>

451
00:20:03,390 --> 00:20:09,330
<font color="#E5E5E5">files that doesn't protect against this</font>

452
00:20:06,049 --> 00:20:12,600
if we're looking<font color="#E5E5E5"> to sort of detect the</font>

453
00:20:09,330 --> 00:20:15,720
fact<font color="#CCCCCC"> that we can use</font><font color="#E5E5E5"> Stream wrappers you</font>

454
00:20:12,600 --> 00:20:17,610
know in a<font color="#E5E5E5"> black box way it's much more</font>

455
00:20:15,720 --> 00:20:19,770
preferable<font color="#CCCCCC"> to use</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> FTP wrapper than</font>

456
00:20:17,610 --> 00:20:22,469
the HTTP wrapper<font color="#E5E5E5"> because it supports a</font>

457
00:20:19,770 --> 00:20:27,240
<font color="#E5E5E5">lot more operations and I'll demonstrate</font>

458
00:20:22,470 --> 00:20:30,780
that<font color="#E5E5E5"> shortly</font><font color="#CCCCCC"> if we've</font><font color="#E5E5E5"> got no way to sort</font>

459
00:20:27,240 --> 00:20:32,669
<font color="#E5E5E5">of connect our band with ourselves</font><font color="#CCCCCC"> we</font>

460
00:20:30,780 --> 00:20:34,950
can try using<font color="#E5E5E5"> the file stream wrapper</font>

461
00:20:32,669 --> 00:20:37,320
and observing the behavior<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

462
00:20:34,950 --> 00:20:39,120
application<font color="#CCCCCC"> so essentially if it behaves</font>

463
00:20:37,320 --> 00:20:41,280
a certain<font color="#E5E5E5"> way with a valid path and we</font>

464
00:20:39,120 --> 00:20:43,320
can chuck file colon slash slash in

465
00:20:41,280 --> 00:20:47,280
front<font color="#CCCCCC"> of it then</font><font color="#E5E5E5"> that probably means</font>

466
00:20:43,320 --> 00:20:51,540
<font color="#E5E5E5">that stream wrappers are working ok so</font>

467
00:20:47,280 --> 00:20:54,660
PHP GAC is<font color="#CCCCCC"> basically why so</font><font color="#E5E5E5"> serial for</font>

468
00:20:51,540 --> 00:20:57,350
PHP<font color="#E5E5E5"> I've just taken all the good bits</font>

469
00:20:54,660 --> 00:20:59,850
and written a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> lines of code to</font>

470
00:20:57,350 --> 00:21:02,459
basically put the the palos which are

471
00:20:59,850 --> 00:21:03,990
already<font color="#E5E5E5"> included with</font><font color="#CCCCCC"> that into a fire</font>

472
00:21:02,460 --> 00:21:08,910
archive<font color="#E5E5E5"> using the techniques are</font>

473
00:21:03,990 --> 00:21:11,160
discussed<font color="#CCCCCC"> a</font><font color="#E5E5E5"> quick note</font><font color="#CCCCCC"> on the payload so</font>

474
00:21:08,910 --> 00:21:12,630
so to have them work<font color="#E5E5E5"> with the demos I'm</font>

475
00:21:11,160 --> 00:21:16,100
doing today I'm doing<font color="#CCCCCC"> most of them</font>

476
00:21:12,630 --> 00:21:18,299
against the<font color="#CCCCCC"> latest version of PHP</font><font color="#E5E5E5"> and</font>

477
00:21:16,100 --> 00:21:19,980
there's<font color="#E5E5E5"> kind of a defense-in-depth</font>

478
00:21:18,299 --> 00:21:21,690
change that's<font color="#E5E5E5"> been made so you used to</font>

479
00:21:19,980 --> 00:21:22,530
<font color="#CCCCCC">be able</font><font color="#E5E5E5"> to dynamically call a function</font>

480
00:21:21,690 --> 00:21:25,770
called<font color="#CCCCCC"> the sir</font>

481
00:21:22,530 --> 00:21:27,720
which would evaluate<font color="#E5E5E5"> as PHP</font><font color="#CCCCCC"> our</font>

482
00:21:25,770 --> 00:21:30,809
<font color="#CCCCCC">strengths but they've</font><font color="#E5E5E5"> prevented you from</font>

483
00:21:27,720 --> 00:21:31,879
doing<font color="#E5E5E5"> that now so I'm simply calling a</font>

484
00:21:30,809 --> 00:21:34,099
function<font color="#CCCCCC"> called passed</font>

485
00:21:31,879 --> 00:21:37,458
which calls out to<font color="#CCCCCC"> a system command and</font>

486
00:21:34,099 --> 00:21:39,019
spits the output out if we're sort of

487
00:21:37,459 --> 00:21:42,109
attacking a hardened system and it has

488
00:21:39,019 --> 00:21:45,139
functions that pass<font color="#E5E5E5"> through</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> exit</font><font color="#CCCCCC"> you</font>

489
00:21:42,109 --> 00:21:46,999
know<font color="#E5E5E5"> banned most applications seem to</font>

490
00:21:45,139 --> 00:21:49,428
use this library manager called<font color="#E5E5E5"> composer</font>

491
00:21:46,999 --> 00:21:51,949
<font color="#E5E5E5">and that includes a simple function</font>

492
00:21:49,429 --> 00:21:54,889
<font color="#E5E5E5">which wraps include so we could abuse</font>

493
00:21:51,949 --> 00:21:59,869
<font color="#E5E5E5">that to include PHP code from another</font>

494
00:21:54,889 --> 00:22:01,248
file so<font color="#CCCCCC"> all the case studies I'm going</font>

495
00:21:59,869 --> 00:22:04,069
to go through today were found with

496
00:22:01,249 --> 00:22:06,079
manual analysis<font color="#CCCCCC"> two of them could have</font>

497
00:22:04,069 --> 00:22:08,059
been<font color="#CCCCCC"> easily found with this</font><font color="#E5E5E5"> sort of FTP</font>

498
00:22:06,079 --> 00:22:11,119
<font color="#CCCCCC">kernel such</font><font color="#E5E5E5"> techniques I talked about</font>

499
00:22:08,059 --> 00:22:14,239
<font color="#E5E5E5">earlier</font><font color="#CCCCCC"> and they all use just a simple</font>

500
00:22:11,119 --> 00:22:16,939
uploading a file<font color="#CCCCCC"> onto the target</font><font color="#E5E5E5"> to</font>

501
00:22:14,239 --> 00:22:20,139
place it<font color="#E5E5E5"> there okay so the first one I'm</font>

502
00:22:16,940 --> 00:22:22,909
going to<font color="#CCCCCC"> look at is a CMS called typo3</font>

503
00:22:20,139 --> 00:22:27,549
many things<font color="#E5E5E5"> to a developer called</font><font color="#CCCCCC"> Oliver</font>

504
00:22:22,909 --> 00:22:30,499
<font color="#CCCCCC">Haider who</font><font color="#E5E5E5"> helped to fix the issue so</font>

505
00:22:27,549 --> 00:22:32,179
the the code<font color="#E5E5E5"> path from user input to</font>

506
00:22:30,499 --> 00:22:34,489
<font color="#E5E5E5">where the vulnerability is is fairly</font>

507
00:22:32,179 --> 00:22:37,009
complicated but the the vulnerability<font color="#E5E5E5"> is</font>

508
00:22:34,489 --> 00:22:40,579
hopefully<font color="#E5E5E5"> fairly clear from</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> so</font>

509
00:22:37,009 --> 00:22:43,339
where we end up<font color="#E5E5E5"> is with file exists</font>

510
00:22:40,579 --> 00:22:45,769
being called on a URL decoded value so

511
00:22:43,339 --> 00:22:48,649
when it's<font color="#CCCCCC"> trying</font><font color="#E5E5E5"> to work out what type</font>

512
00:22:45,769 --> 00:22:51,259
of<font color="#E5E5E5"> path were giving it</font><font color="#CCCCCC"> it's issues when</font>

513
00:22:48,649 --> 00:22:52,879
it<font color="#CCCCCC"> processes links but when it's</font><font color="#E5E5E5"> trying</font>

514
00:22:51,259 --> 00:22:54,199
<font color="#E5E5E5">to work out how to process the</font><font color="#CCCCCC"> but it</font>

515
00:22:52,879 --> 00:22:56,149
does things<font color="#CCCCCC"> like</font><font color="#E5E5E5"> check if it's got</font>

516
00:22:54,199 --> 00:23:00,199
colons or slashes in it and says I know

517
00:22:56,149 --> 00:23:02,539
that's a remote file but it does that

518
00:23:00,199 --> 00:23:05,869
<font color="#E5E5E5">before then URL decoding so as long</font><font color="#CCCCCC"> as</font>

519
00:23:02,539 --> 00:23:07,699
we encode for<font color="#E5E5E5"> instance the colon we can</font>

520
00:23:05,869 --> 00:23:09,259
trick it<font color="#E5E5E5"> into thinking it's dealing</font><font color="#CCCCCC"> with</font>

521
00:23:07,699 --> 00:23:10,999
a local<font color="#CCCCCC"> file and it</font><font color="#E5E5E5"> will call file</font>

522
00:23:09,259 --> 00:23:13,329
exists on a path<font color="#E5E5E5"> completely under our</font>

523
00:23:10,999 --> 00:23:13,329
<font color="#E5E5E5">control</font>

524
00:23:24,580 --> 00:23:33,889
they say the<font color="#E5E5E5"> first thing we need to do</font>

525
00:23:29,660 --> 00:23:35,930
is generate<font color="#CCCCCC"> a payload like any sensible</font>

526
00:23:33,890 --> 00:23:39,680
<font color="#CCCCCC">person</font><font color="#E5E5E5"> but lots of pictures of my cat</font>

527
00:23:35,930 --> 00:23:42,140
<font color="#CCCCCC">and</font><font color="#E5E5E5"> my pictures further if at first</font><font color="#CCCCCC"> if I</font>

528
00:23:39,680 --> 00:23:44,510
run PHP<font color="#E5E5E5"> did you see - yeah that this</font>

529
00:23:42,140 --> 00:23:47,750
will list the payloads<font color="#CCCCCC"> it's not</font>

530
00:23:44,510 --> 00:23:53,570
formatted very<font color="#E5E5E5"> nice so I mentioned some</font>

531
00:23:47,750 --> 00:23:56,900
<font color="#E5E5E5">of these are so</font><font color="#CCCCCC"> some of them</font><font color="#E5E5E5"> were</font><font color="#CCCCCC"> two</font>

532
00:23:53,570 --> 00:24:00,110
string<font color="#E5E5E5"> payloads so we can't use them you</font>

533
00:23:56,900 --> 00:24:05,090
<font color="#E5E5E5">know with this exploit but what I'm</font>

534
00:24:00,110 --> 00:24:08,870
going<font color="#E5E5E5"> to do is so I'm</font><font color="#CCCCCC"> taking as the</font>

535
00:24:05,090 --> 00:24:13,070
<font color="#E5E5E5">input cat one dot</font><font color="#CCCCCC"> jpg</font><font color="#E5E5E5"> I'll output ip3</font>

536
00:24:08,870 --> 00:24:16,820
dot<font color="#CCCCCC"> jpg I'm going to use a payload</font><font color="#E5E5E5"> of</font>

537
00:24:13,070 --> 00:24:27,678
brother<font color="#E5E5E5"> Loki one and I'm going to try</font>

538
00:24:16,820 --> 00:24:30,200
<font color="#CCCCCC">and run</font><font color="#E5E5E5"> the command do you name</font><font color="#CCCCCC"> - I ok</font>

539
00:24:27,679 --> 00:24:40,130
so that's written into my pictures

540
00:24:30,200 --> 00:24:44,179
directory type<font color="#CCCCCC"> it's reader jpg so I'm</font>

541
00:24:40,130 --> 00:24:46,160
running<font color="#CCCCCC"> this demo</font><font color="#E5E5E5"> just as admin this CMS</font>

542
00:24:44,179 --> 00:24:48,290
of implements of<font color="#E5E5E5"> fine grained access</font>

543
00:24:46,160 --> 00:24:50,120
model<font color="#E5E5E5"> and it doesn't come with any</font>

544
00:24:48,290 --> 00:24:52,670
standard<font color="#E5E5E5"> roles or anything like that the</font>

545
00:24:50,120 --> 00:24:56,739
functionality I'm<font color="#CCCCCC"> abusing would be</font>

546
00:24:52,670 --> 00:24:56,740
accessible to<font color="#E5E5E5"> lots of non admin users</font>

547
00:25:06,040 --> 00:25:09,190
[Music]

548
00:25:17,380 --> 00:25:29,289
so I'm going<font color="#E5E5E5"> to upload the payload that</font>

549
00:25:20,860 --> 00:25:36,580
<font color="#E5E5E5">I generated earlier and actually what</font>

550
00:25:29,289 --> 00:25:47,440
I'm going<font color="#CCCCCC"> to do I'm just going</font><font color="#E5E5E5"> to listen</font>

551
00:25:36,580 --> 00:25:49,629
<font color="#E5E5E5">on port 443 on</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> so I'm listening</font><font color="#CCCCCC"> on</font>

552
00:25:47,440 --> 00:25:51,580
<font color="#E5E5E5">port 443 on another server and I'm going</font>

553
00:25:49,630 --> 00:25:54,309
<font color="#E5E5E5">to try and trigger the FTP</font><font color="#CCCCCC"> stream</font>

554
00:25:51,580 --> 00:25:57,370
wrapper to sort<font color="#E5E5E5"> of demonstrate that</font>

555
00:25:54,309 --> 00:26:02,010
<font color="#CCCCCC">Stream wrappers are being activated</font><font color="#E5E5E5"> so</font>

556
00:25:57,370 --> 00:26:02,010
if I go to any page<font color="#CCCCCC"> and add some content</font>

557
00:26:05,580 --> 00:26:10,230
<font color="#E5E5E5">add an image is element that has a link</font>

558
00:26:10,830 --> 00:26:38,889
as long as I encode that<font color="#E5E5E5"> colon so that's</font>

559
00:26:36,820 --> 00:26:41,678
connected back to<font color="#CCCCCC"> us and</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> can see that</font>

560
00:26:38,890 --> 00:26:44,590
the<font color="#E5E5E5"> FTP stream app has</font><font color="#CCCCCC"> been activated</font>

561
00:26:41,679 --> 00:26:47,260
I can do my poor<font color="#CCCCCC"> impression of an FTP</font>

562
00:26:44,590 --> 00:26:51,449
server<font color="#CCCCCC"> and we can see that it's trying</font>

563
00:26:47,260 --> 00:26:51,450
<font color="#E5E5E5">to access xxx why why why</font>

564
00:27:07,030 --> 00:27:12,020
so if<font color="#E5E5E5"> instead of using the FTP</font><font color="#CCCCCC"> Stream</font>

565
00:27:10,100 --> 00:27:14,980
wrapper we access that<font color="#CCCCCC"> payloads through</font>

566
00:27:12,020 --> 00:27:14,980
the<font color="#CCCCCC"> faster a mapper</font>

567
00:27:16,540 --> 00:27:19,540
hopefully

568
00:27:30,310 --> 00:27:33,520
[Music]

569
00:28:18,180 --> 00:28:29,770
try again

570
00:28:19,480 --> 00:28:32,170
<font color="#CCCCCC">I thought</font><font color="#E5E5E5"> I was so clever when I fixed</font>

571
00:28:29,770 --> 00:28:40,740
the damage to work not<font color="#CCCCCC"> online</font><font color="#E5E5E5"> that's</font>

572
00:28:32,170 --> 00:28:45,120
that's<font color="#E5E5E5"> what this turns me right that's</font>

573
00:28:40,740 --> 00:28:45,120
right this is<font color="#CCCCCC"> the</font><font color="#E5E5E5"> request</font>

574
00:28:47,680 --> 00:28:55,760
so somewhere<font color="#E5E5E5"> down</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> this be saying</font>

575
00:28:50,210 --> 00:29:01,300
that the link to<font color="#CCCCCC"> that far</font><font color="#E5E5E5"> and if we</font>

576
00:28:55,760 --> 00:29:07,520
intercept<font color="#E5E5E5"> the response at the top there</font>

577
00:29:01,300 --> 00:29:11,450
and see<font color="#E5E5E5"> it's triggered the pilot and</font>

578
00:29:07,520 --> 00:29:25,060
yeah that's<font color="#E5E5E5"> the end of that demo</font><font color="#CCCCCC"> there's</font>

579
00:29:11,450 --> 00:29:27,710
<font color="#E5E5E5">not okay so the next step</font><font color="#CCCCCC"> over is in</font>

580
00:29:25,060 --> 00:29:30,590
<font color="#E5E5E5">WordPress and when I first found this</font>

581
00:29:27,710 --> 00:29:33,200
issue<font color="#E5E5E5"> so that you know they ultimately</font>

582
00:29:30,590 --> 00:29:34,970
<font color="#E5E5E5">the</font><font color="#CCCCCC"> issue is in PHP but we need to find</font>

583
00:29:33,200 --> 00:29:38,180
vulnerabilities in applications to

584
00:29:34,970 --> 00:29:39,470
<font color="#E5E5E5">exploit it so I found this issue in</font>

585
00:29:38,180 --> 00:29:41,270
WordPress<font color="#CCCCCC"> and thought how that'd be a</font>

586
00:29:39,470 --> 00:29:43,190
you<font color="#CCCCCC"> know a good one</font><font color="#E5E5E5"> to demonstrate it</font>

587
00:29:41,270 --> 00:29:46,520
and<font color="#E5E5E5"> thought they would fix it fairly</font>

588
00:29:43,190 --> 00:29:51,470
<font color="#CCCCCC">quickly</font><font color="#E5E5E5"> you can see when I reported it</font>

589
00:29:46,520 --> 00:29:53,420
and it hasn't<font color="#E5E5E5"> been fixed yet so you know</font>

590
00:29:51,470 --> 00:29:56,120
I've ended up<font color="#E5E5E5"> feeling</font><font color="#CCCCCC"> that the only</font>

591
00:29:53,420 --> 00:30:00,260
responsible thing<font color="#CCCCCC"> is to disclose</font><font color="#E5E5E5"> it as</font>

592
00:29:56,120 --> 00:30:01,250
it<font color="#CCCCCC"> is</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is this is my favorite of</font>

593
00:30:00,260 --> 00:30:05,300
the vulnerabilities because it's

594
00:30:01,250 --> 00:30:08,240
<font color="#CCCCCC">slightly more subtle</font><font color="#E5E5E5"> and this is</font>

595
00:30:05,300 --> 00:30:11,419
ultimately where the vulnerability<font color="#E5E5E5"> is so</font>

596
00:30:08,240 --> 00:30:14,140
it calculates this variable<font color="#E5E5E5"> thumb file</font>

597
00:30:11,420 --> 00:30:16,850
and it ends up<font color="#CCCCCC"> calling file exists on it</font>

598
00:30:14,140 --> 00:30:20,630
but the way it calculates this variable

599
00:30:16,850 --> 00:30:22,300
is it takes this value file calculates

600
00:30:20,630 --> 00:30:25,550
the base name<font color="#E5E5E5"> of that and it replaces</font>

601
00:30:22,300 --> 00:30:29,240
<font color="#E5E5E5">every occurrence of</font><font color="#CCCCCC"> that with this value</font>

602
00:30:25,550 --> 00:30:31,190
<font color="#E5E5E5">thumb and there's no guarantee that the</font>

603
00:30:29,240 --> 00:30:32,810
base name of the file only<font color="#E5E5E5"> occurs</font><font color="#CCCCCC"> once</font>

604
00:30:31,190 --> 00:30:35,420
<font color="#CCCCCC">so what we're going</font><font color="#E5E5E5"> to do is try and</font><font color="#CCCCCC"> get</font>

605
00:30:32,810 --> 00:30:40,399
it<font color="#CCCCCC"> to</font><font color="#E5E5E5"> replace the start of the file</font>

606
00:30:35,420 --> 00:30:44,150
rather than just the end so write this

607
00:30:40,400 --> 00:30:48,140
value<font color="#E5E5E5"> file comes from this</font><font color="#CCCCCC"> function get</font>

608
00:30:44,150 --> 00:30:50,840
attached file and in most cases<font color="#CCCCCC"> that</font>

609
00:30:48,140 --> 00:30:54,320
prepends the applications<font color="#CCCCCC"> sort of upload</font>

610
00:30:50,840 --> 00:30:56,419
directory<font color="#E5E5E5"> to to the file name but in</font>

611
00:30:54,320 --> 00:30:57,950
certain<font color="#CCCCCC"> circumstances</font><font color="#E5E5E5"> it doesn't so if</font>

612
00:30:56,420 --> 00:31:00,740
the file starts with a slash

613
00:30:57,950 --> 00:31:02,419
then it's a Linux absolute path but if

614
00:31:00,740 --> 00:31:05,240
it starts with a single<font color="#E5E5E5"> character then a</font>

615
00:31:02,419 --> 00:31:07,460
<font color="#E5E5E5">codon then a forward slash</font><font color="#CCCCCC"> then it's a</font>

616
00:31:05,240 --> 00:31:09,559
<font color="#E5E5E5">Windows absolute part so despite the</font>

617
00:31:07,460 --> 00:31:11,990
<font color="#CCCCCC">fact that we're attacking</font><font color="#E5E5E5"> a Linux system</font>

618
00:31:09,559 --> 00:31:14,620
we're going<font color="#E5E5E5"> to give it</font><font color="#CCCCCC"> a file path that</font>

619
00:31:11,990 --> 00:31:17,360
looks<font color="#E5E5E5"> like a Windows absolute path and</font>

620
00:31:14,620 --> 00:31:19,939
as you know<font color="#E5E5E5"> abused this functionality to</font>

621
00:31:17,360 --> 00:31:22,610
<font color="#E5E5E5">end up replacing the start of the file</font>

622
00:31:19,940 --> 00:31:25,429
name and therefore activating the stream

623
00:31:22,610 --> 00:31:28,939
wrapper<font color="#E5E5E5"> in terms of the payload I'm</font>

624
00:31:25,429 --> 00:31:32,299
going to use today until fairly recently

625
00:31:28,940 --> 00:31:34,480
so November 2017 there was a payload

626
00:31:32,299 --> 00:31:37,190
<font color="#CCCCCC">that I presented</font><font color="#E5E5E5"> here three years</font><font color="#CCCCCC"> ago</font>

627
00:31:34,480 --> 00:31:39,049
<font color="#E5E5E5">which went from two string two code</font>

628
00:31:37,190 --> 00:31:40,760
execution they've made some<font color="#CCCCCC"> changes</font>

629
00:31:39,049 --> 00:31:43,010
<font color="#E5E5E5">since then and that payload is no longer</font>

630
00:31:40,760 --> 00:31:45,889
<font color="#E5E5E5">valid</font><font color="#CCCCCC"> so we have to try and find another</font>

631
00:31:43,010 --> 00:31:48,470
one<font color="#E5E5E5"> WordPress is quite limited in what</font>

632
00:31:45,889 --> 00:31:50,779
classes you<font color="#E5E5E5"> can use to</font><font color="#CCCCCC"> construct these</font>

633
00:31:48,470 --> 00:31:52,970
kind of payloads<font color="#E5E5E5"> so sort of looking</font>

634
00:31:50,779 --> 00:31:54,679
through<font color="#E5E5E5"> the the classes that are there</font>

635
00:31:52,970 --> 00:31:57,799
there's a one that<font color="#E5E5E5"> really stands out</font>

636
00:31:54,679 --> 00:32:00,590
which is this<font color="#E5E5E5"> requests utility filtered</font>

637
00:31:57,799 --> 00:32:03,080
iterator<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is an array iterator so</font>

638
00:32:00,590 --> 00:32:04,699
this essentially backs an array and when

639
00:32:03,080 --> 00:32:08,350
you iterate<font color="#E5E5E5"> through an array this is</font><font color="#CCCCCC"> the</font>

640
00:32:04,700 --> 00:32:11,690
code<font color="#CCCCCC"> that gets</font><font color="#E5E5E5"> executed and this uses a</font>

641
00:32:08,350 --> 00:32:13,519
property defined for<font color="#CCCCCC"> bet</font><font color="#E5E5E5"> so if we</font>

642
00:32:11,690 --> 00:32:15,350
control<font color="#E5E5E5"> the object we control this</font>

643
00:32:13,519 --> 00:32:18,500
callback<font color="#E5E5E5"> and we can call any function we</font>

644
00:32:15,350 --> 00:32:20,539
want<font color="#E5E5E5"> with any argument we want now this</font>

645
00:32:18,500 --> 00:32:22,549
is<font color="#E5E5E5"> obviously only triggered by iterating</font>

646
00:32:20,539 --> 00:32:23,929
through the array so we<font color="#E5E5E5"> need to find</font>

647
00:32:22,549 --> 00:32:27,590
something<font color="#E5E5E5"> else</font><font color="#CCCCCC"> to iterate through the</font>

648
00:32:23,929 --> 00:32:29,000
array<font color="#CCCCCC"> I looked around</font><font color="#E5E5E5"> you know both the</font>

649
00:32:27,590 --> 00:32:31,370
classes<font color="#CCCCCC"> that are already loaded</font><font color="#E5E5E5"> and</font>

650
00:32:29,000 --> 00:32:34,130
WordPress<font color="#E5E5E5"> and a few system classes and</font>

651
00:32:31,370 --> 00:32:36,110
couldn't find<font color="#E5E5E5"> anything to do this</font><font color="#CCCCCC"> so the</font>

652
00:32:34,130 --> 00:32:37,490
natural sort of next step is to<font color="#CCCCCC"> look if</font>

653
00:32:36,110 --> 00:32:40,760
there's any common plugins that have

654
00:32:37,490 --> 00:32:42,820
<font color="#E5E5E5">anything like this</font><font color="#CCCCCC"> and there's a very</font>

655
00:32:40,760 --> 00:32:46,760
common<font color="#CCCCCC"> plug-in for</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> word</font><font color="#E5E5E5"> commerce and</font>

656
00:32:42,820 --> 00:32:49,879
that<font color="#CCCCCC"> includes a class which has a fairly</font>

657
00:32:46,760 --> 00:32:51,740
<font color="#E5E5E5">benign looking destructor because it's</font>

658
00:32:49,880 --> 00:32:53,419
<font color="#E5E5E5">just for closing files but the thing</font>

659
00:32:51,740 --> 00:32:55,580
that<font color="#CCCCCC"> it does</font><font color="#E5E5E5"> that's useful for us is it</font>

660
00:32:53,419 --> 00:32:57,679
iterates<font color="#E5E5E5"> through one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> its properties</font>

661
00:32:55,580 --> 00:33:00,549
<font color="#E5E5E5">so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can use that to trigger the other</font>

662
00:32:57,679 --> 00:33:00,549
part of the payload

663
00:33:00,810 --> 00:33:09,659
let's have a look at this<font color="#CCCCCC"> turn</font><font color="#E5E5E5"> now</font>

664
00:33:07,350 --> 00:33:11,730
for this demo I sort of scripted it

665
00:33:09,660 --> 00:33:13,470
because there's quite<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of you know</font>

666
00:33:11,730 --> 00:33:19,080
<font color="#E5E5E5">grabbing various values from various</font>

667
00:33:13,470 --> 00:33:33,090
places WordPress seems to run horribly

668
00:33:19,080 --> 00:33:37,129
slowly on my computer so apologies so I

669
00:33:33,090 --> 00:33:41,220
was just<font color="#E5E5E5"> this is the one case where</font>

670
00:33:37,130 --> 00:33:42,780
<font color="#CCCCCC">WordPress</font><font color="#E5E5E5"> has sort of predefined roles</font>

671
00:33:41,220 --> 00:33:48,810
and stuff<font color="#E5E5E5"> like that</font><font color="#CCCCCC"> so it's quite clear</font>

672
00:33:42,780 --> 00:33:52,350
<font color="#CCCCCC">what</font><font color="#E5E5E5"> user we</font><font color="#CCCCCC"> can do this asked if I can</font>

673
00:33:48,810 --> 00:33:54,090
log in the server right so this<font color="#E5E5E5"> is the</font>

674
00:33:52,350 --> 00:33:55,949
latest<font color="#CCCCCC"> version of WordPress and has the</font>

675
00:33:54,090 --> 00:34:02,360
<font color="#E5E5E5">latest version of WooCommerce installed</font>

676
00:33:55,950 --> 00:34:06,120
on it<font color="#E5E5E5"> one of these should be users users</font>

677
00:34:02,360 --> 00:34:08,759
and so I've set up<font color="#E5E5E5"> a user called author</font>

678
00:34:06,120 --> 00:34:12,480
<font color="#E5E5E5">which is a member of the</font><font color="#CCCCCC"> earth or Alf so</font>

679
00:34:08,760 --> 00:34:17,370
<font color="#E5E5E5">WordPress goes of anonymous subscribers</font>

680
00:34:12,480 --> 00:34:19,710
authors<font color="#CCCCCC"> editors</font><font color="#E5E5E5"> admins so you know this</font>

681
00:34:17,370 --> 00:34:21,418
issue<font color="#E5E5E5"> is only exposed to authenticated</font>

682
00:34:19,710 --> 00:34:24,949
users but they're<font color="#E5E5E5"> certainly not supposed</font>

683
00:34:21,418 --> 00:34:24,949
to be able<font color="#E5E5E5"> to execute code</font>

684
00:34:40,710 --> 00:34:46,000
this should hopefully do everything for

685
00:34:43,268 --> 00:34:50,229
me<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> first thing it</font><font color="#CCCCCC"> does is upload</font>

686
00:34:46,000 --> 00:34:53,980
<font color="#E5E5E5">the file is doing it through XML RPC so</font>

687
00:34:50,230 --> 00:34:58,390
the value is<font color="#E5E5E5"> base 64 encoded but we can</font>

688
00:34:53,980 --> 00:35:01,450
have a<font color="#E5E5E5"> look at that file in here</font><font color="#CCCCCC"> it's</font>

689
00:34:58,390 --> 00:35:03,578
basically<font color="#CCCCCC"> got sort of a JPEG header on</font>

690
00:35:01,450 --> 00:35:05,348
it but not much<font color="#CCCCCC"> more and then it goes</font>

691
00:35:03,579 --> 00:35:07,029
<font color="#CCCCCC">straight</font><font color="#E5E5E5"> into the stub and has are</font>

692
00:35:05,349 --> 00:35:15,119
<font color="#E5E5E5">serialized payload in the metadata</font>

693
00:35:07,029 --> 00:35:38,109
exception so it'll upload<font color="#E5E5E5"> the file</font>

694
00:35:15,119 --> 00:35:40,210
slowly so it's uploaded<font color="#CCCCCC"> to file and</font><font color="#E5E5E5"> then</font>

695
00:35:38,109 --> 00:35:41,589
we need<font color="#E5E5E5"> to just log in</font><font color="#CCCCCC"> to the normal</font>

696
00:35:40,210 --> 00:35:46,539
user interface to grab a cookie

697
00:35:41,589 --> 00:35:48,279
basically<font color="#CCCCCC"> all right</font>

698
00:35:46,539 --> 00:35:50,589
so it's logged in and got his cookies

699
00:35:48,279 --> 00:35:52,900
we're gonna use this<font color="#CCCCCC"> one here is the</font>

700
00:35:50,589 --> 00:35:57,099
admin cookie<font color="#E5E5E5"> or the you know the</font><font color="#CCCCCC"> backend</font>

701
00:35:52,900 --> 00:36:02,170
cookie so using that<font color="#E5E5E5"> cookie it's then</font>

702
00:35:57,099 --> 00:36:03,759
going<font color="#CCCCCC"> to access the page to edit the</font>

703
00:36:02,170 --> 00:36:11,170
post that represents the file that we

704
00:36:03,759 --> 00:36:14,339
<font color="#CCCCCC">just uploaded</font><font color="#E5E5E5"> we need to access that</font>

705
00:36:11,170 --> 00:36:18,549
<font color="#E5E5E5">page to get something called</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> nonce</font>

706
00:36:14,339 --> 00:36:19,750
<font color="#E5E5E5">which we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> need to do the next</font>

707
00:36:18,549 --> 00:36:25,809
stuff that we need to do so it's

708
00:36:19,750 --> 00:36:28,480
grabbing<font color="#E5E5E5"> the value of this non</font><font color="#CCCCCC"> sear and</font>

709
00:36:25,809 --> 00:36:32,529
then it's using<font color="#E5E5E5"> that and it's setting</font>

710
00:36:28,480 --> 00:36:34,119
<font color="#CCCCCC">the</font><font color="#E5E5E5"> file name to Zed colon slash said so</font>

711
00:36:32,529 --> 00:36:36,490
when the code that we looked<font color="#E5E5E5"> at earlier</font>

712
00:36:34,119 --> 00:36:37,900
replaces the base file it's<font color="#E5E5E5"> going to</font>

713
00:36:36,490 --> 00:36:39,368
<font color="#E5E5E5">replace the said at the end but it's</font>

714
00:36:37,900 --> 00:36:41,019
also going to<font color="#CCCCCC"> replace the Zed at the</font>

715
00:36:39,369 --> 00:36:44,099
start because<font color="#E5E5E5"> the start</font><font color="#CCCCCC"> of the file is</font>

716
00:36:41,019 --> 00:36:44,098
the<font color="#E5E5E5"> same as the</font><font color="#CCCCCC"> basepart</font>

717
00:36:50,940 --> 00:37:12,550
<font color="#CCCCCC">but</font><font color="#E5E5E5"> eventually go through so</font><font color="#CCCCCC"> now it's</font>

718
00:37:09,940 --> 00:37:16,270
going<font color="#E5E5E5"> to set the thumb value to a</font><font color="#CCCCCC"> fire</font>

719
00:37:12,550 --> 00:37:22,150
path<font color="#E5E5E5"> to</font><font color="#CCCCCC"> access the payload that we just</font>

720
00:37:16,270 --> 00:37:27,310
uploaded and now<font color="#E5E5E5"> finally when</font><font color="#CCCCCC"> it</font>

721
00:37:22,150 --> 00:37:29,560
triggers the it triggers the thumbnail

722
00:37:27,310 --> 00:37:32,230
functionality through<font color="#E5E5E5"> this XML RPC call</font>

723
00:37:29,560 --> 00:37:34,390
to work press get<font color="#E5E5E5"> meteor item so</font>

724
00:37:32,230 --> 00:37:37,900
<font color="#E5E5E5">hopefully if I intercept the response to</font>

725
00:37:34,390 --> 00:37:43,450
that down on the bottom<font color="#E5E5E5"> we've called you</font>

726
00:37:37,900 --> 00:37:45,750
name<font color="#E5E5E5"> - a again we'll see how</font><font color="#CCCCCC"> fast</font><font color="#E5E5E5"> it</font>

727
00:37:43,450 --> 00:37:45,750
<font color="#E5E5E5">sphere</font>

728
00:37:59,180 --> 00:38:06,779
it's just to say you<font color="#E5E5E5"> know we can</font><font color="#CCCCCC"> call</font>

729
00:38:01,500 --> 00:38:17,580
<font color="#E5E5E5">any girl my</font><font color="#CCCCCC"> bitch is closer I'll leave</font>

730
00:38:06,780 --> 00:38:19,260
that<font color="#E5E5E5"> running</font><font color="#CCCCCC"> in the background</font><font color="#E5E5E5"> okay so</font>

731
00:38:17,580 --> 00:38:21,900
the<font color="#CCCCCC"> final case study</font><font color="#E5E5E5"> is in a library</font>

732
00:38:19,260 --> 00:38:25,650
<font color="#CCCCCC">called TC PDF I'm going to exploit it</font>

733
00:38:21,900 --> 00:38:27,780
through CMS could<font color="#E5E5E5"> console but really the</font>

734
00:38:25,650 --> 00:38:29,760
important point is this is that this<font color="#CCCCCC"> is</font>

735
00:38:27,780 --> 00:38:32,400
<font color="#CCCCCC">in</font><font color="#E5E5E5"> quite a widespread library so as far</font>

736
00:38:29,760 --> 00:38:34,920
<font color="#CCCCCC">as I know this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the standard</font><font color="#E5E5E5"> library</font>

737
00:38:32,400 --> 00:38:39,660
<font color="#CCCCCC">and PHP</font><font color="#E5E5E5"> applications to convert HTML to</font>

738
00:38:34,920 --> 00:38:44,790
PDFs<font color="#E5E5E5"> and in quite</font><font color="#CCCCCC"> a simple</font><font color="#E5E5E5"> way of sort</font>

739
00:38:39,660 --> 00:38:46,740
of exposes the issue so in this sort<font color="#CCCCCC"> of</font>

740
00:38:44,790 --> 00:38:48,540
standard application scenario there's

741
00:38:46,740 --> 00:38:50,819
some situations where we might be

742
00:38:48,540 --> 00:38:53,340
<font color="#E5E5E5">deliberately given access to the HTML</font>

743
00:38:50,820 --> 00:38:54,900
<font color="#E5E5E5">that's being sent to a PDF but also we</font>

744
00:38:53,340 --> 00:38:57,450
often find we can sort<font color="#E5E5E5"> of cross-site</font>

745
00:38:54,900 --> 00:39:02,010
script into some code that's<font color="#E5E5E5"> then being</font>

746
00:38:57,450 --> 00:39:03,779
rendered into<font color="#CCCCCC"> a</font><font color="#E5E5E5"> PDF and the</font>

747
00:39:02,010 --> 00:39:06,000
vulnerability<font color="#CCCCCC"> is like I said quite</font>

748
00:39:03,780 --> 00:39:07,650
<font color="#E5E5E5">straightforward essentially it's it you</font>

749
00:39:06,000 --> 00:39:10,200
know runs<font color="#CCCCCC"> a tag handler through all the</font>

750
00:39:07,650 --> 00:39:11,730
tags at the HTML<font color="#E5E5E5"> and if it</font><font color="#CCCCCC"> encountered</font>

751
00:39:10,200 --> 00:39:16,009
an image tag<font color="#E5E5E5"> it calls this function</font>

752
00:39:11,730 --> 00:39:18,450
image with<font color="#CCCCCC"> the source attribute and that</font>

753
00:39:16,010 --> 00:39:20,340
<font color="#CCCCCC">does a few</font><font color="#E5E5E5"> things</font><font color="#CCCCCC"> but you know full</font>

754
00:39:18,450 --> 00:39:23,910
story to a file exists<font color="#E5E5E5"> called with with</font>

755
00:39:20,340 --> 00:39:26,510
the value as we supplied it so let's

756
00:39:23,910 --> 00:39:26,509
look at<font color="#E5E5E5"> that</font>

757
00:39:35,469 --> 00:39:41,709
so we need to generate a payload again

758
00:39:50,499 --> 00:39:58,538
and<font color="#CCCCCC"> try cutting ezc faster this time</font>

759
00:39:59,860 --> 00:40:03,039
[Music]

760
00:40:08,280 --> 00:40:13,900
again<font color="#CCCCCC"> the same</font><font color="#E5E5E5"> as the first demo it's a</font>

761
00:40:11,760 --> 00:40:15,520
you wouldn't<font color="#E5E5E5"> need to be</font><font color="#CCCCCC"> an admin</font><font color="#E5E5E5"> to</font>

762
00:40:13,900 --> 00:40:17,380
<font color="#E5E5E5">access all this functionality but I</font>

763
00:40:15,520 --> 00:40:30,520
<font color="#E5E5E5">haven't set</font><font color="#CCCCCC"> up a bunch of</font><font color="#E5E5E5"> users with the</font>

764
00:40:17,380 --> 00:40:32,710
various different<font color="#CCCCCC"> parameters so</font><font color="#E5E5E5"> the CMS</font>

765
00:40:30,520 --> 00:40:34,150
includes this article functionality and

766
00:40:32,710 --> 00:40:38,110
<font color="#E5E5E5">there's a setting you can have on</font>

767
00:40:34,150 --> 00:40:46,630
articles to allow them to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> exported as</font>

768
00:40:38,110 --> 00:40:48,820
PDF which then uses<font color="#E5E5E5"> the library so I've</font>

769
00:40:46,630 --> 00:40:53,380
got this article<font color="#CCCCCC"> set up I've just got</font>

770
00:40:48,820 --> 00:41:02,619
the<font color="#CCCCCC"> contents there's xxx yyy that should</font>

771
00:40:53,380 --> 00:41:05,430
<font color="#E5E5E5">generate</font><font color="#CCCCCC"> PDF latex yyy if I</font><font color="#E5E5E5"> edit the</font>

772
00:41:02,619 --> 00:41:05,430
content of<font color="#E5E5E5"> that</font>

773
00:41:20,780 --> 00:41:26,580
so first I'm just<font color="#E5E5E5"> going to put an image</font>

774
00:41:23,010 --> 00:41:37,680
tag that literally<font color="#E5E5E5"> references the image</font>

775
00:41:26,580 --> 00:41:40,680
with<font color="#CCCCCC"> no stream wrapper so I'm just using</font>

776
00:41:37,680 --> 00:41:45,089
a relative path to the<font color="#CCCCCC"> image in the code</font>

777
00:41:40,680 --> 00:41:47,069
now if I save this<font color="#E5E5E5"> the HTML view of the</font>

778
00:41:45,090 --> 00:41:49,860
article<font color="#E5E5E5"> won't work</font><font color="#CCCCCC"> properly because</font>

779
00:41:47,070 --> 00:41:53,450
that's the browser is looking for that

780
00:41:49,860 --> 00:41:53,450
relative path and not finding it

781
00:41:53,670 --> 00:42:02,390
but the PDF<font color="#CCCCCC"> asked me did I upload the</font>

782
00:42:00,120 --> 00:42:02,390
image

783
00:42:23,730 --> 00:42:27,150
we try that<font color="#E5E5E5"> again</font>

784
00:42:28,510 --> 00:42:38,830
we got a<font color="#E5E5E5"> PDF with the image and define</font>

785
00:42:35,610 --> 00:42:53,980
<font color="#E5E5E5">try that so you can see it's still</font>

786
00:42:38,830 --> 00:43:04,990
<font color="#CCCCCC">breaking you know in the browser but</font><font color="#E5E5E5"> if</font>

787
00:42:53,980 --> 00:43:06,490
I put<font color="#E5E5E5"> the father in front of this</font><font color="#CCCCCC"> see</font>

788
00:43:04,990 --> 00:43:08,049
<font color="#E5E5E5">even more broken in the browser because</font>

789
00:43:06,490 --> 00:43:11,020
<font color="#CCCCCC">that doesn't understand the file you are</font>

790
00:43:08,050 --> 00:43:15,450
<font color="#CCCCCC">a little</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> we send it to the PDF</font>

791
00:43:11,020 --> 00:43:15,450
<font color="#CCCCCC">Janerio triggers</font><font color="#E5E5E5"> the failure</font>

792
00:43:23,440 --> 00:43:27,890
<font color="#E5E5E5">okay so in</font><font color="#CCCCCC"> terms of</font><font color="#E5E5E5"> defending against</font>

793
00:43:25,940 --> 00:43:30,200
this issue<font color="#CCCCCC"> obviously it would be</font><font color="#E5E5E5"> ideal</font>

794
00:43:27,890 --> 00:43:33,170
<font color="#CCCCCC">to avoid those</font><font color="#E5E5E5"> types of</font><font color="#CCCCCC"> vulnerabilities</font>

795
00:43:30,200 --> 00:43:34,370
<font color="#E5E5E5">altogether but bearing in mind that they</font>

796
00:43:33,170 --> 00:43:35,960
were<font color="#E5E5E5"> already</font><font color="#CCCCCC"> nine types</font><font color="#E5E5E5"> of</font>

797
00:43:34,370 --> 00:43:37,940
vulnerabilities<font color="#E5E5E5"> and we're still finding</font>

798
00:43:35,960 --> 00:43:41,480
<font color="#E5E5E5">them in applications now that might not</font>

799
00:43:37,940 --> 00:43:44,060
be<font color="#CCCCCC"> that</font><font color="#E5E5E5"> realistic sort</font><font color="#CCCCCC"> of IPS is</font><font color="#E5E5E5"> IDS's</font>

800
00:43:41,480 --> 00:43:45,950
<font color="#CCCCCC">antivirus</font><font color="#E5E5E5"> software should</font><font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to</font>

801
00:43:44,060 --> 00:43:49,100
detect this quite<font color="#CCCCCC"> easily you know with</font>

802
00:43:45,950 --> 00:43:51,259
signatures and things like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> it</font>

803
00:43:49,100 --> 00:43:53,630
doesn't<font color="#CCCCCC"> seem</font><font color="#E5E5E5"> possible to</font><font color="#CCCCCC"> disable that</font>

804
00:43:51,260 --> 00:43:56,690
<font color="#E5E5E5">the sort of behavior</font><font color="#CCCCCC"> of that stream</font>

805
00:43:53,630 --> 00:44:00,200
<font color="#E5E5E5">wrapper</font><font color="#CCCCCC"> from the command</font><font color="#E5E5E5"> line or PHP dot</font>

806
00:43:56,690 --> 00:44:01,900
<font color="#E5E5E5">ini' but you could potentially you</font><font color="#CCCCCC"> know</font>

807
00:44:00,200 --> 00:44:04,580
<font color="#E5E5E5">a disable it during compilation</font>

808
00:44:01,900 --> 00:44:06,230
<font color="#E5E5E5">I've spoken to PHP about the issue a</font>

809
00:44:04,580 --> 00:44:09,259
<font color="#CCCCCC">couple of</font><font color="#E5E5E5"> months ago I haven't heard</font>

810
00:44:06,230 --> 00:44:13,370
<font color="#CCCCCC">back but</font><font color="#E5E5E5"> hopefully in the long term as</font>

811
00:44:09,260 --> 00:44:14,570
they will address<font color="#E5E5E5"> this issue so what do</font>

812
00:44:13,370 --> 00:44:17,950
I<font color="#E5E5E5"> want you to take away from</font><font color="#CCCCCC"> the</font>

813
00:44:14,570 --> 00:44:20,570
presentation<font color="#CCCCCC"> more broadly than</font><font color="#E5E5E5"> just PHP</font>

814
00:44:17,950 --> 00:44:23,000
<font color="#CCCCCC">we're seeing a lot of unsee realization</font>

815
00:44:20,570 --> 00:44:26,510
issues in multiple languages<font color="#CCCCCC"> and</font><font color="#E5E5E5"> they're</font>

816
00:44:23,000 --> 00:44:28,520
made a lot worse by you know I've said

817
00:44:26,510 --> 00:44:30,050
complexity there but<font color="#E5E5E5"> bloat is probably</font>

818
00:44:28,520 --> 00:44:32,390
the right words you know people are

819
00:44:30,050 --> 00:44:33,740
adding libraries to applications<font color="#E5E5E5"> and not</font>

820
00:44:32,390 --> 00:44:36,680
worrying about<font color="#E5E5E5"> whether they're used</font>

821
00:44:33,740 --> 00:44:38,810
anymore<font color="#E5E5E5"> or not not removing them</font><font color="#CCCCCC"> we're</font>

822
00:44:36,680 --> 00:44:40,549
starting<font color="#E5E5E5"> to see some libraries implement</font>

823
00:44:38,810 --> 00:44:43,759
sort of defensive codes they're trying

824
00:44:40,550 --> 00:44:45,770
<font color="#CCCCCC">to you know remove behaviors</font><font color="#E5E5E5"> that are</font>

825
00:44:43,760 --> 00:44:49,910
very<font color="#E5E5E5"> useful for on serialization</font>

826
00:44:45,770 --> 00:44:51,830
exploits<font color="#CCCCCC"> by abusing</font><font color="#E5E5E5"> this streem wrapper</font>

827
00:44:49,910 --> 00:44:55,660
you know we can exploit a number of

828
00:44:51,830 --> 00:44:58,400
different<font color="#CCCCCC"> vulnerabilities so</font><font color="#E5E5E5"> xxe</font><font color="#CCCCCC"> yes srf</font>

829
00:44:55,660 --> 00:45:00,680
you know certainly<font color="#E5E5E5"> if certain settings</font>

830
00:44:58,400 --> 00:45:03,980
are set<font color="#CCCCCC"> so for instance allow URL</font><font color="#E5E5E5"> F open</font>

831
00:45:00,680 --> 00:45:05,720
<font color="#CCCCCC">is set to false on PHP</font><font color="#E5E5E5"> some of these</font>

832
00:45:03,980 --> 00:45:08,480
issues<font color="#CCCCCC"> you probably wouldn't</font><font color="#E5E5E5"> even pick</font>

833
00:45:05,720 --> 00:45:11,600
<font color="#E5E5E5">up and you would certainly report them</font>

834
00:45:08,480 --> 00:45:13,280
as very low impact on<font color="#E5E5E5"> the pen test</font><font color="#CCCCCC"> now</font>

835
00:45:11,600 --> 00:45:17,450
<font color="#E5E5E5">hopefully you realize they can be used</font>

836
00:45:13,280 --> 00:45:19,850
to trigger code execution and yeah

837
00:45:17,450 --> 00:45:21,919
hopefully<font color="#E5E5E5"> I've made it clear sort of</font>

838
00:45:19,850 --> 00:45:23,990
easy ways<font color="#E5E5E5"> to</font><font color="#CCCCCC"> identify the issues either</font>

839
00:45:21,920 --> 00:45:26,930
looking at source code or with<font color="#E5E5E5"> black box</font>

840
00:45:23,990 --> 00:45:29,348
methods<font color="#E5E5E5"> so I've added</font><font color="#CCCCCC"> one slide from</font><font color="#E5E5E5"> the</font>

841
00:45:26,930 --> 00:45:30,759
talk that<font color="#E5E5E5"> I</font><font color="#CCCCCC"> gave last week</font>

842
00:45:29,349 --> 00:45:34,599
because a couple<font color="#E5E5E5"> of</font><font color="#CCCCCC"> people have pointed</font>

843
00:45:30,759 --> 00:45:37,089
<font color="#E5E5E5">out</font><font color="#CCCCCC"> to me that</font><font color="#E5E5E5"> somebody else discovered</font>

844
00:45:34,599 --> 00:45:41,650
this behavior and used it in a CTF so a

845
00:45:37,089 --> 00:45:44,558
<font color="#E5E5E5">guy called orange</font><font color="#CCCCCC"> side sort</font><font color="#E5E5E5"> of said</font><font color="#CCCCCC"> it</font>

846
00:45:41,650 --> 00:45:48,819
as a CTF challenge<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> towards</font><font color="#CCCCCC"> the</font>

847
00:45:44,559 --> 00:45:51,039
<font color="#CCCCCC">end of 2017 you know I think as far</font><font color="#E5E5E5"> as</font>

848
00:45:48,819 --> 00:45:54,069
<font color="#E5E5E5">we're both aware we both just discovered</font>

849
00:45:51,039 --> 00:45:56,170
the same thing independently<font color="#CCCCCC"> and and</font>

850
00:45:54,069 --> 00:46:00,038
yeah you know<font color="#CCCCCC"> you often</font><font color="#E5E5E5"> find</font><font color="#CCCCCC"> that in</font>

851
00:45:56,170 --> 00:46:03,640
<font color="#CCCCCC">security people</font><font color="#E5E5E5"> have the same ideas</font>

852
00:46:00,039 --> 00:46:08,440
around<font color="#E5E5E5"> the same time so that's me all</font>

853
00:46:03,640 --> 00:46:14,578
finished<font color="#CCCCCC"> are there any questions anyone</font>

854
00:46:08,440 --> 00:46:17,529
<font color="#CCCCCC">got a question for Sam yep when you were</font>

855
00:46:14,579 --> 00:46:19,420
basically injecting your<font color="#E5E5E5"> injection into</font>

856
00:46:17,529 --> 00:46:22,150
the<font color="#E5E5E5"> JPEG there's no possibility to</font>

857
00:46:19,420 --> 00:46:25,180
actually insert a reverse<font color="#CCCCCC"> shell so</font><font color="#E5E5E5"> you</font>

858
00:46:22,150 --> 00:46:28,949
cannot<font color="#CCCCCC"> get a shot back out of it</font><font color="#E5E5E5"> yeah so</font>

859
00:46:25,180 --> 00:46:32,680
what you could do I mentioned about the

860
00:46:28,949 --> 00:46:35,589
the assert stuff so previous to<font color="#E5E5E5"> PHP 7.2</font>

861
00:46:32,680 --> 00:46:37,359
it was really easy to<font color="#E5E5E5"> with these kind of</font>

862
00:46:35,589 --> 00:46:39,788
<font color="#E5E5E5">an serialization payloads to run</font>

863
00:46:37,359 --> 00:46:41,619
<font color="#CCCCCC">arbitrary PHP code</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> obviously you</font>

864
00:46:39,789 --> 00:46:45,209
could write a<font color="#E5E5E5"> whole reverse shell and</font>

865
00:46:41,619 --> 00:46:48,190
and contain it within that<font color="#E5E5E5"> JPEG I</font>

866
00:46:45,209 --> 00:46:50,739
mentioned<font color="#E5E5E5"> the</font><font color="#CCCCCC"> composers got a wrapper</font>

867
00:46:48,190 --> 00:46:53,529
for<font color="#E5E5E5"> include file so if you were looking</font>

868
00:46:50,739 --> 00:46:55,779
to execute sort of more complicated code

869
00:46:53,529 --> 00:46:57,609
than just running<font color="#E5E5E5"> one command what you</font>

870
00:46:55,779 --> 00:46:59,619
could do is embed in that<font color="#CCCCCC"> jpay your</font>

871
00:46:57,609 --> 00:47:02,170
whole PHP source file as part<font color="#E5E5E5"> of the</font>

872
00:46:59,619 --> 00:47:04,479
archive and then include<font color="#CCCCCC"> that with the</font>

873
00:47:02,170 --> 00:47:06,119
sort<font color="#E5E5E5"> of composer wrapper function</font><font color="#CCCCCC"> and</font>

874
00:47:04,479 --> 00:47:08,410
then you know you'd be running<font color="#E5E5E5"> a whole</font>

875
00:47:06,119 --> 00:47:11,849
whatever<font color="#E5E5E5"> you wanted but you reverse</font>

876
00:47:08,410 --> 00:47:20,259
shell would probably be<font color="#E5E5E5"> the funny things</font>

877
00:47:11,849 --> 00:47:22,060
yes anyone else<font color="#CCCCCC"> know don't give</font><font color="#E5E5E5"> it up</font>

878
00:47:20,259 --> 00:47:24,120
<font color="#E5E5E5">first Sam</font>

879
00:47:22,060 --> 00:47:24,120
<font color="#E5E5E5">you</font>

