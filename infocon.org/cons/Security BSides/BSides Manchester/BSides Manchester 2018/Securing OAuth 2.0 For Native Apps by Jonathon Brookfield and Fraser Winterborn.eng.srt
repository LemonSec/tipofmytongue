1
00:00:05,870 --> 00:00:12,240
afternoon everyone<font color="#E5E5E5"> so quick introduction</font>

2
00:00:09,750 --> 00:00:13,820
<font color="#E5E5E5">I'm</font><font color="#CCCCCC"> Jonathan I currently lead the</font>

3
00:00:12,240 --> 00:00:17,250
security research group of blackberry

4
00:00:13,820 --> 00:00:19,890
<font color="#E5E5E5">moved into product</font><font color="#CCCCCC"> security back in 2004</font>

5
00:00:17,250 --> 00:00:22,529
<font color="#E5E5E5">prior</font><font color="#CCCCCC"> to that software engineer and this</font>

6
00:00:19,890 --> 00:00:23,910
is<font color="#E5E5E5"> present I think I'm a security</font>

7
00:00:22,529 --> 00:00:25,740
researcher<font color="#E5E5E5"> in the security research</font>

8
00:00:23,910 --> 00:00:30,960
group<font color="#E5E5E5"> library and youth work for</font>

9
00:00:25,740 --> 00:00:31,799
emotions<font color="#CCCCCC"> and written data</font><font color="#E5E5E5"> so in terms of</font>

10
00:00:30,960 --> 00:00:34,590
what we're gonna<font color="#E5E5E5"> be</font><font color="#CCCCCC"> talking about today</font>

11
00:00:31,800 --> 00:00:36,120
<font color="#CCCCCC">we're to be talking about oath to give</font>

12
00:00:34,590 --> 00:00:38,489
<font color="#E5E5E5">me a note give you giving an overview</font>

13
00:00:36,120 --> 00:00:41,669
<font color="#CCCCCC">the protocol specifically focused on</font>

14
00:00:38,489 --> 00:00:42,029
native apps so how how it's used<font color="#E5E5E5"> on</font>

15
00:00:41,670 --> 00:00:43,500
mobile

16
00:00:42,030 --> 00:00:45,980
we're going to go through some of the

17
00:00:43,500 --> 00:00:48,840
authorization<font color="#E5E5E5"> grants these are the</font>

18
00:00:45,980 --> 00:00:51,599
different<font color="#E5E5E5"> ways that others can be can be</font>

19
00:00:48,840 --> 00:00:54,180
<font color="#E5E5E5">used then we're going to dive into three</font>

20
00:00:51,600 --> 00:00:56,219
three of<font color="#CCCCCC"> the many areas that it can go</font>

21
00:00:54,180 --> 00:00:58,820
wrong<font color="#E5E5E5"> so we're gonna look at redirect</font>

22
00:00:56,219 --> 00:01:01,410
your eyes embedded browsers and

23
00:00:58,820 --> 00:01:03,899
<font color="#CCCCCC">carrefour cross application request</font>

24
00:01:01,410 --> 00:01:05,880
forgeries<font color="#CCCCCC"> then at the end we're just</font>

25
00:01:03,899 --> 00:01:09,570
<font color="#E5E5E5">gonna rattle through a few of the other</font>

26
00:01:05,880 --> 00:01:12,658
things<font color="#E5E5E5"> if you're implementing OAuth as a</font>

27
00:01:09,570 --> 00:01:15,270
mobile on a mobile<font color="#CCCCCC"> client or on a server</font>

28
00:01:12,659 --> 00:01:17,040
<font color="#CCCCCC">some things</font><font color="#E5E5E5"> you have to think</font><font color="#CCCCCC"> of got</font>

29
00:01:15,270 --> 00:01:19,860
some<font color="#E5E5E5"> references at the end</font><font color="#CCCCCC"> just various</font>

30
00:01:17,040 --> 00:01:25,700
various bits that we've read in or

31
00:01:19,860 --> 00:01:31,770
whilst writing<font color="#E5E5E5"> this presentation so</font>

32
00:01:25,700 --> 00:01:33,900
before we<font color="#E5E5E5"> start I offers an</font>

33
00:01:31,770 --> 00:01:36,030
authorization protocols so it's probably

34
00:01:33,900 --> 00:01:38,280
it's important that stick up the

35
00:01:36,030 --> 00:01:40,799
standard definitions of authentication

36
00:01:38,280 --> 00:01:43,590
and authorization<font color="#E5E5E5"> so just reading from</font>

37
00:01:40,799 --> 00:01:46,799
<font color="#E5E5E5">the slide</font><font color="#CCCCCC"> authentication is the process</font>

38
00:01:43,590 --> 00:01:50,040
or action verifying the identity of a

39
00:01:46,799 --> 00:01:52,049
user or a<font color="#E5E5E5"> process and authorization is</font>

40
00:01:50,040 --> 00:01:54,479
the process or action<font color="#E5E5E5"> of verifying that</font>

41
00:01:52,049 --> 00:01:56,689
user or process is allowed to access<font color="#CCCCCC"> a</font>

42
00:01:54,479 --> 00:02:00,509
resource<font color="#E5E5E5"> or allowed</font><font color="#CCCCCC"> to perform</font><font color="#E5E5E5"> an action</font>

43
00:01:56,689 --> 00:02:01,979
<font color="#E5E5E5">normally you need to be authenticated in</font>

44
00:02:00,509 --> 00:02:03,630
order to be authorized but with all

45
00:02:01,979 --> 00:02:05,579
<font color="#E5E5E5">things are a little bit different</font><font color="#CCCCCC"> in</font>

46
00:02:03,630 --> 00:02:08,149
that you<font color="#E5E5E5"> can be authorized to do</font>

47
00:02:05,579 --> 00:02:09,989
something but<font color="#E5E5E5"> you're not</font><font color="#CCCCCC"> affected</font><font color="#E5E5E5"> will</font>

48
00:02:08,149 --> 00:02:11,319
<font color="#CCCCCC">that's because you delegate</font>

49
00:02:09,989 --> 00:02:13,379
authentication in the

50
00:02:11,319 --> 00:02:16,589
in<font color="#E5E5E5"> the protocol but</font><font color="#CCCCCC"> we'll explain more</font>

51
00:02:13,379 --> 00:02:21,819
on<font color="#CCCCCC"> that later</font>

52
00:02:16,590 --> 00:02:25,480
so over to phrase us for an overview yep

53
00:02:21,819 --> 00:02:27,790
I<font color="#CCCCCC"> hope toy sales take both rotational</font>

54
00:02:25,480 --> 00:02:29,619
<font color="#CCCCCC">protocol so it exists foot will have one</font>

55
00:02:27,790 --> 00:02:31,319
party<font color="#CCCCCC"> to authorize</font><font color="#E5E5E5"> another party to</font>

56
00:02:29,620 --> 00:02:33,849
<font color="#CCCCCC">perform actions</font><font color="#E5E5E5"> will never have a</font>

57
00:02:31,319 --> 00:02:36,810
consists of four main<font color="#E5E5E5"> roles so the</font>

58
00:02:33,849 --> 00:02:38,619
resource owner which<font color="#CCCCCC"> is either the</font>

59
00:02:36,810 --> 00:02:40,959
<font color="#CCCCCC">authorization server in the resource</font>

60
00:02:38,620 --> 00:02:43,060
server and this is some<font color="#E5E5E5"> service that</font>

61
00:02:40,959 --> 00:02:45,069
provides a service<font color="#CCCCCC"> to the resource</font><font color="#E5E5E5"> owner</font>

62
00:02:43,060 --> 00:02:48,849
<font color="#CCCCCC">so in our example this can be a</font>

63
00:02:45,069 --> 00:02:52,000
web-based<font color="#E5E5E5"> email provider and then we've</font>

64
00:02:48,849 --> 00:02:53,530
<font color="#E5E5E5">got a a client which</font><font color="#CCCCCC"> is the</font><font color="#E5E5E5"> the third</font>

65
00:02:52,000 --> 00:02:55,449
party that<font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to authorize perform</font>

66
00:02:53,530 --> 00:02:56,949
actions on<font color="#E5E5E5"> our behalf</font><font color="#CCCCCC"> but because we're</font>

67
00:02:55,449 --> 00:02:58,120
talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> native</font><font color="#CCCCCC"> bills -</font><font color="#E5E5E5"> this is</font>

68
00:02:56,949 --> 00:03:01,689
<font color="#E5E5E5">going to be an application</font><font color="#CCCCCC"> running on a</font>

69
00:02:58,120 --> 00:03:04,269
device so<font color="#E5E5E5"> also</font><font color="#CCCCCC"> knows the</font><font color="#E5E5E5"> resource owner</font>

70
00:03:01,689 --> 00:03:05,828
<font color="#E5E5E5">sore throats client for my operations on</font>

71
00:03:04,269 --> 00:03:07,510
their behalf that the resource<font color="#E5E5E5"> server</font>

72
00:03:05,829 --> 00:03:12,459
and the authorization<font color="#CCCCCC"> server is the</font>

73
00:03:07,510 --> 00:03:14,198
<font color="#CCCCCC">mechanism their users to do this so the</font>

74
00:03:12,459 --> 00:03:16,229
resource owner<font color="#E5E5E5"> has to have some existing</font>

75
00:03:14,199 --> 00:03:19,599
account<font color="#CCCCCC"> of the authorization server so</font>

76
00:03:16,229 --> 00:03:21,909
our<font color="#CCCCCC"> example the</font><font color="#E5E5E5"> webmail calm its</font><font color="#CCCCCC"> and</font>

77
00:03:19,599 --> 00:03:25,089
these are signs into<font color="#CCCCCC"> a</font><font color="#E5E5E5"> word based email</font>

78
00:03:21,909 --> 00:03:27,519
provider and in the received email the

79
00:03:25,090 --> 00:03:29,409
resource server provides some<font color="#CCCCCC"> api on</font>

80
00:03:27,519 --> 00:03:31,870
this account<font color="#E5E5E5"> and which can be</font><font color="#CCCCCC"> used for</font>

81
00:03:29,409 --> 00:03:35,409
<font color="#E5E5E5">common operations so we've got list mail</font>

82
00:03:31,870 --> 00:03:37,209
remail and some mail<font color="#CCCCCC"> here there's some</font>

83
00:03:35,409 --> 00:03:38,530
form of implicit trust relationship

84
00:03:37,209 --> 00:03:40,569
between the resource server and the

85
00:03:38,530 --> 00:03:41,979
<font color="#CCCCCC">authorization server and this is often</font>

86
00:03:40,569 --> 00:03:42,488
<font color="#CCCCCC">achieved when in being the same on the</font>

87
00:03:41,979 --> 00:03:45,099
same<font color="#CCCCCC"> system</font>

88
00:03:42,489 --> 00:03:47,979
<font color="#CCCCCC">and then the client offers a service</font>

89
00:03:45,099 --> 00:03:49,659
that uses these<font color="#E5E5E5"> api's so our</font><font color="#CCCCCC"> example the</font>

90
00:03:47,979 --> 00:03:51,519
<font color="#E5E5E5">mail robot which</font><font color="#CCCCCC"> is an app's and logged</font>

91
00:03:49,659 --> 00:03:54,358
<font color="#CCCCCC">in to your</font><font color="#E5E5E5"> email account and</font><font color="#CCCCCC"> we sent a</font>

92
00:03:51,519 --> 00:03:54,359
receipt email for you

93
00:03:54,870 --> 00:04:01,479
the vintage Hoovervilles<font color="#CCCCCC"> - is allows to</font>

94
00:03:59,229 --> 00:04:02,859
access<font color="#E5E5E5"> the resource owners resources</font>

95
00:04:01,479 --> 00:04:05,229
<font color="#E5E5E5">without the resource owner</font><font color="#CCCCCC"> having</font><font color="#E5E5E5"> to</font>

96
00:04:02,859 --> 00:04:07,299
<font color="#E5E5E5">reveal their credentials so being purple</font>

97
00:04:05,229 --> 00:04:09,250
we've got<font color="#E5E5E5"> at the bottom here and if you</font>

98
00:04:07,299 --> 00:04:10,689
hand over your password you're giving

99
00:04:09,250 --> 00:04:13,030
full access to the client<font color="#E5E5E5"> to do whatever</font>

100
00:04:10,689 --> 00:04:16,899
they like<font color="#E5E5E5"> if you give them an</font><font color="#CCCCCC"> access</font>

101
00:04:13,030 --> 00:04:18,190
token<font color="#E5E5E5"> which restricts in 23 actions you</font>

102
00:04:16,899 --> 00:04:20,709
deliver to the scope of<font color="#E5E5E5"> what they can do</font>

103
00:04:18,190 --> 00:04:23,570
in your account<font color="#E5E5E5"> and the access</font><font color="#CCCCCC"> token is</font>

104
00:04:20,709 --> 00:04:25,620
<font color="#E5E5E5">used to go out to dinner</font>

105
00:04:23,570 --> 00:04:27,510
so the other<font color="#CCCCCC"> event</font><font color="#E5E5E5"> if you're an access</font>

106
00:04:25,620 --> 00:04:29,490
token<font color="#E5E5E5"> is it can be given</font><font color="#CCCCCC"> an expiry so</font>

107
00:04:27,510 --> 00:04:31,200
<font color="#E5E5E5">the authorization</font><font color="#CCCCCC"> server went out there</font>

108
00:04:29,490 --> 00:04:33,120
is only<font color="#E5E5E5"> valid for a week</font>

109
00:04:31,200 --> 00:04:36,479
so as<font color="#E5E5E5"> soon as that's expired the client</font>

110
00:04:33,120 --> 00:04:38,850
doesn't have<font color="#E5E5E5"> access</font><font color="#CCCCCC"> anymore</font><font color="#E5E5E5"> but they can</font>

111
00:04:36,480 --> 00:04:40,200
<font color="#E5E5E5">also be refreshed</font><font color="#CCCCCC"> so the client come</font>

112
00:04:38,850 --> 00:04:41,910
back through<font color="#E5E5E5"> your throat</font><font color="#CCCCCC"> session server</font>

113
00:04:40,200 --> 00:04:43,650
after<font color="#E5E5E5"> the access</font><font color="#CCCCCC"> token expires and</font>

114
00:04:41,910 --> 00:04:48,750
request<font color="#CCCCCC"> the new one and</font><font color="#E5E5E5"> as long as still</font>

115
00:04:43,650 --> 00:04:50,789
<font color="#E5E5E5">authorize</font><font color="#CCCCCC"> no get Neve access</font><font color="#E5E5E5"> token they</font>

116
00:04:48,750 --> 00:04:52,050
can also<font color="#E5E5E5"> be revoked so the resource</font>

117
00:04:50,790 --> 00:04:53,520
owner<font color="#E5E5E5"> at any time can go to the</font>

118
00:04:52,050 --> 00:04:54,960
<font color="#CCCCCC">authorization server and say I don't</font>

119
00:04:53,520 --> 00:04:57,840
<font color="#E5E5E5">want this client access my account</font>

120
00:04:54,960 --> 00:05:00,330
<font color="#E5E5E5">anymore and then when they go and try</font>

121
00:04:57,840 --> 00:05:02,820
<font color="#CCCCCC">and use their access token to</font><font color="#E5E5E5"> to use an</font>

122
00:05:00,330 --> 00:05:06,900
<font color="#CCCCCC">API</font><font color="#E5E5E5"> in the resource server the resource</font>

123
00:05:02,820 --> 00:05:09,990
server can<font color="#CCCCCC"> send a sub mention tokens</font>

124
00:05:06,900 --> 00:05:12,419
there's three main types and the primary

125
00:05:09,990 --> 00:05:14,190
ones the access token<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is great to</font>

126
00:05:12,420 --> 00:05:16,680
<font color="#CCCCCC">leave</font><font color="#E5E5E5"> your relations of and issued to</font>

127
00:05:14,190 --> 00:05:20,910
the client it's used by<font color="#E5E5E5"> the</font><font color="#CCCCCC"> client to</font>

128
00:05:16,680 --> 00:05:22,380
<font color="#E5E5E5">access api's in the resource server so</font>

129
00:05:20,910 --> 00:05:23,820
this is used every time<font color="#E5E5E5"> the client wants</font>

130
00:05:22,380 --> 00:05:26,480
<font color="#E5E5E5">to</font><font color="#CCCCCC"> access the</font><font color="#E5E5E5"> API and</font><font color="#CCCCCC"> therefore it's</font>

131
00:05:23,820 --> 00:05:28,919
access token<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> multiple years</font>

132
00:05:26,480 --> 00:05:30,720
we've got<font color="#CCCCCC"> refresh tokens which are</font>

133
00:05:28,919 --> 00:05:33,270
created by<font color="#CCCCCC"> the your server and issued to</font>

134
00:05:30,720 --> 00:05:35,580
the point<font color="#E5E5E5"> and these are used when the</font>

135
00:05:33,270 --> 00:05:37,590
<font color="#E5E5E5">access tokens expires they found over</font>

136
00:05:35,580 --> 00:05:39,359
<font color="#CCCCCC">their</font><font color="#E5E5E5"> refresh token the authorization</font>

137
00:05:37,590 --> 00:05:41,760
server<font color="#CCCCCC"> observer in your access token and</font>

138
00:05:39,360 --> 00:05:43,860
this is single<font color="#E5E5E5"> or multiple you seek I</font>

139
00:05:41,760 --> 00:05:45,419
never have one<font color="#E5E5E5"> refresh token which you</font>

140
00:05:43,860 --> 00:05:47,750
<font color="#E5E5E5">use every time you want to new access</font>

141
00:05:45,419 --> 00:05:50,640
token or you refresh<font color="#E5E5E5"> the Refresh token</font>

142
00:05:47,750 --> 00:05:52,919
and less than<font color="#E5E5E5"> we've got the</font>

143
00:05:50,640 --> 00:05:54,990
<font color="#CCCCCC">authorization code</font><font color="#E5E5E5"> this again right away</font>

144
00:05:52,919 --> 00:05:56,969
<font color="#E5E5E5">all server issued to the client and it's</font>

145
00:05:54,990 --> 00:05:58,680
a very<font color="#E5E5E5"> short-lived token which is just</font>

146
00:05:56,970 --> 00:06:00,810
used for<font color="#E5E5E5"> the client to exchange for an</font>

147
00:05:58,680 --> 00:06:02,610
access token<font color="#CCCCCC"> and so it should</font><font color="#E5E5E5"> be a</font>

148
00:06:00,810 --> 00:06:04,560
single-use<font color="#CCCCCC"> and it's not</font><font color="#E5E5E5"> always used</font>

149
00:06:02,610 --> 00:06:07,100
depending<font color="#E5E5E5"> on which mode</font><font color="#CCCCCC"> of operation</font>

150
00:06:04,560 --> 00:06:07,100
available theory

151
00:06:07,490 --> 00:06:13,020
so the basic flow is is called the

152
00:06:10,110 --> 00:06:15,540
authorization code grant so because<font color="#CCCCCC"> we</font>

153
00:06:13,020 --> 00:06:17,250
took<font color="#CCCCCC"> my native OS the resource owner of</font>

154
00:06:15,540 --> 00:06:19,590
an apple on<font color="#CCCCCC"> the phone</font><font color="#E5E5E5"> first thing they</font>

155
00:06:17,250 --> 00:06:23,310
do is poke me up and request the connect

156
00:06:19,590 --> 00:06:24,929
up to<font color="#CCCCCC"> their they webmail account</font><font color="#E5E5E5"> the</font>

157
00:06:23,310 --> 00:06:29,940
client<font color="#E5E5E5"> then invokes the operating</font>

158
00:06:24,930 --> 00:06:31,470
systems browser using a URL<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we're</font>

159
00:06:29,940 --> 00:06:33,690
going<font color="#E5E5E5"> to more detail on the</font><font color="#CCCCCC"> four</font>

160
00:06:31,470 --> 00:06:34,719
contents of<font color="#E5E5E5"> this later</font><font color="#CCCCCC"> but the important</font>

161
00:06:33,690 --> 00:06:37,749
<font color="#CCCCCC">part is handed over to the</font>

162
00:06:34,719 --> 00:06:39,699
<font color="#E5E5E5">right insistence browser and when the</font>

163
00:06:37,749 --> 00:06:46,449
browser<font color="#E5E5E5"> goes in purchase</font><font color="#CCCCCC"> like URL it</font>

164
00:06:39,699 --> 00:06:47,409
<font color="#E5E5E5">gets a indication from the</font><font color="#CCCCCC"> salient and</font>

165
00:06:46,449 --> 00:06:50,829
<font color="#CCCCCC">then we go through a thorough zation</font>

166
00:06:47,409 --> 00:06:52,058
prompt and this is where he's<font color="#CCCCCC"> where</font>

167
00:06:50,829 --> 00:06:54,759
you're granting the authorization<font color="#CCCCCC"> to the</font>

168
00:06:52,059 --> 00:06:56,229
<font color="#E5E5E5">client so</font><font color="#CCCCCC"> there the scope has been given</font>

169
00:06:54,759 --> 00:07:01,929
<font color="#E5E5E5">here is</font><font color="#CCCCCC"> access to the mailbox</font><font color="#E5E5E5"> and</font>

170
00:06:56,229 --> 00:07:04,349
sending email on their behalf so<font color="#CCCCCC"> human</font>

171
00:07:01,929 --> 00:07:06,549
that successful the<font color="#E5E5E5"> visa process yes the</font>

172
00:07:04,349 --> 00:07:09,878
bill throws a<font color="#E5E5E5"> since it was under</font>

173
00:07:06,549 --> 00:07:12,008
redirect back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> browser</font><font color="#CCCCCC"> to their to</font>

174
00:07:09,879 --> 00:07:15,969
send it<font color="#E5E5E5"> to a URL with</font><font color="#CCCCCC"> the auth code</font>

175
00:07:12,009 --> 00:07:17,050
embedded in the URL this<font color="#E5E5E5"> this URL has</font>

176
00:07:15,969 --> 00:07:18,819
<font color="#E5E5E5">already been claimed by the operating</font>

177
00:07:17,050 --> 00:07:21,759
<font color="#E5E5E5">system</font><font color="#CCCCCC"> so the browser when it receives</font>

178
00:07:18,819 --> 00:07:24,119
this URL<font color="#CCCCCC"> invoke snap at the app receives</font>

179
00:07:21,759 --> 00:07:26,199
the URL pulls the authorization code<font color="#CCCCCC"> out</font>

180
00:07:24,119 --> 00:07:28,629
and then it can<font color="#E5E5E5"> make</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> direct</font><font color="#CCCCCC"> connection</font>

181
00:07:26,199 --> 00:07:30,969
<font color="#E5E5E5">to your throws ocean server and exchange</font>

182
00:07:28,629 --> 00:07:34,449
<font color="#CCCCCC">levels code or</font><font color="#E5E5E5"> an access token and a</font>

183
00:07:30,969 --> 00:07:34,748
refresh token so now it's got<font color="#CCCCCC"> an access</font>

184
00:07:34,449 --> 00:07:36,519
token

185
00:07:34,749 --> 00:07:42,039
it can make API calls to<font color="#E5E5E5"> the resource</font>

186
00:07:36,519 --> 00:07:44,409
server there's some time<font color="#E5E5E5"> passes the</font>

187
00:07:42,039 --> 00:07:46,688
access token expires<font color="#E5E5E5"> and it then uses</font>

188
00:07:44,409 --> 00:07:51,719
its refresh token it's<font color="#E5E5E5"> gonna get new</font>

189
00:07:46,689 --> 00:07:51,719
access token<font color="#E5E5E5"> and a refresh token</font><font color="#CCCCCC"> option</font>

190
00:07:52,110 --> 00:07:57,279
so this bit where the client exchanges

191
00:07:55,300 --> 00:07:59,110
its<font color="#E5E5E5"> authorization code for its access</font>

192
00:07:57,279 --> 00:08:01,569
and refresh tokens is optionally

193
00:07:59,110 --> 00:08:03,279
authenticated and this gives rise<font color="#E5E5E5"> to two</font>

194
00:08:01,569 --> 00:08:05,739
<font color="#CCCCCC">different types of client we've got</font>

195
00:08:03,279 --> 00:08:08,349
public<font color="#E5E5E5"> clients which all native ovals</font>

196
00:08:05,739 --> 00:08:11,138
falls under and in this case there's

197
00:08:08,349 --> 00:08:12,550
there's no authentication so he goes

198
00:08:11,139 --> 00:08:13,989
resolution server<font color="#CCCCCC"> O'Connell's then to</font>

199
00:08:12,550 --> 00:08:15,939
get<font color="#E5E5E5"> the client and it's because the</font>

200
00:08:13,989 --> 00:08:17,649
client<font color="#E5E5E5"> cause can't store any secrets and</font>

201
00:08:15,939 --> 00:08:19,889
click you embed a secret an<font color="#E5E5E5"> app and then</font>

202
00:08:17,649 --> 00:08:23,559
distributed<font color="#CCCCCC"> to the users it's not secret</font>

203
00:08:19,889 --> 00:08:25,360
<font color="#CCCCCC">and the other type is confidential</font>

204
00:08:23,559 --> 00:08:27,279
clients and this is more when<font color="#E5E5E5"> they're</font>

205
00:08:25,360 --> 00:08:29,860
but it's the<font color="#E5E5E5"> other</font><font color="#CCCCCC"> client of the web</font>

206
00:08:27,279 --> 00:08:32,099
application so it's on<font color="#E5E5E5"> the server the</font>

207
00:08:29,860 --> 00:08:34,719
yeah the server can store secrets and

208
00:08:32,099 --> 00:08:36,159
the main advantage<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this is a allowing</font>

209
00:08:34,719 --> 00:08:38,169
as the authorization<font color="#CCCCCC"> server to perform</font>

210
00:08:36,159 --> 00:08:40,899
association between the codes<font color="#E5E5E5"> that is</font>

211
00:08:38,169 --> 00:08:43,509
handed out and<font color="#E5E5E5"> the client and the lack</font>

212
00:08:40,899 --> 00:08:45,370
of<font color="#E5E5E5"> this in public</font><font color="#CCCCCC"> and local native is</font>

213
00:08:43,509 --> 00:08:46,040
certain cause of some of the<font color="#E5E5E5"> issues</font>

214
00:08:45,370 --> 00:08:49,279
we're<font color="#CCCCCC"> gonna be looking at</font>

215
00:08:46,040 --> 00:08:50,870
later<font color="#E5E5E5"> the method of authentication is</font>

216
00:08:49,279 --> 00:08:52,670
called client<font color="#E5E5E5"> secret and it's just a</font>

217
00:08:50,870 --> 00:08:54,860
password which exists between<font color="#E5E5E5"> the two</font><font color="#CCCCCC"> of</font>

218
00:08:52,670 --> 00:08:56,300
them which is<font color="#E5E5E5"> usually created at</font>

219
00:08:54,860 --> 00:08:58,570
registration<font color="#CCCCCC"> times when the app</font>

220
00:08:56,300 --> 00:09:04,670
developers building<font color="#E5E5E5"> the wrapper they</font>

221
00:08:58,570 --> 00:09:06,230
create a secret that<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is early</font><font color="#CCCCCC"> and</font>

222
00:09:04,670 --> 00:09:09,410
so now we're<font color="#E5E5E5"> going to take a look at the</font>

223
00:09:06,230 --> 00:09:11,690
authorization code grant<font color="#E5E5E5"> and in practice</font>

224
00:09:09,410 --> 00:09:15,410
and for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> purposes of this talk we've</font>

225
00:09:11,690 --> 00:09:17,750
got<font color="#CCCCCC"> 3</font><font color="#E5E5E5"> demo applications</font><font color="#CCCCCC"> through skill</font>

226
00:09:15,410 --> 00:09:19,850
<font color="#E5E5E5">mail robot which is not malicious and</font>

227
00:09:17,750 --> 00:09:21,259
it's been<font color="#CCCCCC"> implemented using</font><font color="#E5E5E5"> the</font>

228
00:09:19,850 --> 00:09:24,290
mitigation agree that talked about<font color="#CCCCCC"> later</font>

229
00:09:21,259 --> 00:09:26,060
but in secure mail robot which<font color="#CCCCCC"> is again</font>

230
00:09:24,290 --> 00:09:27,349
it's not malicious<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's not taking</font>

231
00:09:26,060 --> 00:09:29,599
into<font color="#CCCCCC"> account</font><font color="#E5E5E5"> any of the security</font>

232
00:09:27,350 --> 00:09:31,940
mitigations and then but<font color="#E5E5E5"> mail robot</font>

233
00:09:29,600 --> 00:09:42,589
<font color="#E5E5E5">which is actively malicious and will be</font>

234
00:09:31,940 --> 00:09:44,300
the source<font color="#E5E5E5"> of a number of the attacks so</font>

235
00:09:42,589 --> 00:09:47,509
if I<font color="#CCCCCC"> open up</font><font color="#E5E5E5"> the mail robot</font><font color="#CCCCCC"> app the</font>

236
00:09:44,300 --> 00:09:49,339
first<font color="#CCCCCC"> thing they see is the option</font><font color="#E5E5E5"> to</font>

237
00:09:47,509 --> 00:09:52,970
<font color="#E5E5E5">pick your email provider so forgets a</font>

238
00:09:49,339 --> 00:09:54,829
<font color="#E5E5E5">web man at this point the</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> client</font>

239
00:09:52,970 --> 00:09:56,240
will redirect to<font color="#E5E5E5"> the operating systems</font>

240
00:09:54,829 --> 00:09:57,500
browser where that URL<font color="#E5E5E5"> with some</font>

241
00:09:56,240 --> 00:09:59,449
parameters<font color="#CCCCCC"> in it</font><font color="#E5E5E5"> and these have been</font>

242
00:09:57,500 --> 00:10:02,860
broken<font color="#E5E5E5"> out</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> but usually if this be</font>

243
00:09:59,449 --> 00:10:05,349
completely transparent but sample of the

244
00:10:02,860 --> 00:10:07,940
client ID<font color="#E5E5E5"> the top</font><font color="#CCCCCC"> left which is the</font>

245
00:10:05,350 --> 00:10:11,089
<font color="#E5E5E5">unique identifier identifies this client</font>

246
00:10:07,940 --> 00:10:12,680
the redirect URI<font color="#E5E5E5"> which is a URI this app</font>

247
00:10:11,089 --> 00:10:14,540
<font color="#CCCCCC">is claimed any once it's coded to come</font>

248
00:10:12,680 --> 00:10:16,729
back to and then a couple<font color="#E5E5E5"> of state</font>

249
00:10:14,540 --> 00:10:20,269
parameters which<font color="#E5E5E5"> we'll go into more</font>

250
00:10:16,730 --> 00:10:22,240
detail later<font color="#E5E5E5"> so if</font><font color="#CCCCCC"> a Bress redirect</font>

251
00:10:20,269 --> 00:10:27,190
authorization server

252
00:10:22,240 --> 00:10:31,519
invoke the operating systems browser and

253
00:10:27,190 --> 00:10:35,389
sign it and<font color="#CCCCCC"> then we're asked to</font>

254
00:10:31,519 --> 00:10:37,790
<font color="#E5E5E5">authorize</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> happening press yes when I</font>

255
00:10:35,389 --> 00:10:40,779
handed back from the browser to the<font color="#E5E5E5"> the</font>

256
00:10:37,790 --> 00:10:43,399
app and<font color="#CCCCCC"> received</font><font color="#E5E5E5"> its authorization code</font>

257
00:10:40,779 --> 00:10:44,360
press exchange for access<font color="#E5E5E5"> token this is</font>

258
00:10:43,399 --> 00:10:45,860
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> go off and</font><font color="#CCCCCC"> make</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> direct</font>

259
00:10:44,360 --> 00:10:48,769
<font color="#E5E5E5">connection to the authorization server</font>

260
00:10:45,860 --> 00:10:54,230
<font color="#CCCCCC">and exchange that authorization code for</font>

261
00:10:48,769 --> 00:10:56,240
an access token and a refresh token<font color="#CCCCCC"> okay</font>

262
00:10:54,230 --> 00:10:57,949
and when I press<font color="#CCCCCC"> save tokens is going to</font>

263
00:10:56,240 --> 00:10:58,819
go away<font color="#E5E5E5"> and use the access token it's</font>

264
00:10:57,949 --> 00:11:00,949
got<font color="#CCCCCC"> two</font>

265
00:10:58,819 --> 00:11:06,019
and<font color="#E5E5E5"> call</font><font color="#CCCCCC"> 8p hours on</font><font color="#E5E5E5"> the resource server</font>

266
00:11:00,949 --> 00:11:07,608
<font color="#CCCCCC">I know we've got the</font><font color="#E5E5E5"> apps but</font><font color="#CCCCCC"> it's</font>

267
00:11:06,019 --> 00:11:09,529
access token<font color="#E5E5E5"> and it's there it's signed</font>

268
00:11:07,609 --> 00:11:13,129
<font color="#E5E5E5">into user</font><font color="#CCCCCC"> or prepared outcomes account</font>

269
00:11:09,529 --> 00:11:15,439
<font color="#E5E5E5">doubt it well that's nonsense going to</font>

270
00:11:13,129 --> 00:11:30,189
<font color="#CCCCCC">go into a bit more detail on</font><font color="#E5E5E5"> some of</font>

271
00:11:15,439 --> 00:11:32,719
<font color="#E5E5E5">these grants okay so the groups are the</font>

272
00:11:30,189 --> 00:11:34,969
different<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> that you can</font><font color="#E5E5E5"> use use</font>

273
00:11:32,720 --> 00:11:37,669
<font color="#CCCCCC">others</font><font color="#E5E5E5"> so far we've just been</font><font color="#CCCCCC"> talking</font>

274
00:11:34,970 --> 00:11:39,259
<font color="#E5E5E5">about the the authorization code code</font>

275
00:11:37,669 --> 00:11:41,389
<font color="#E5E5E5">crime this is actually the</font><font color="#CCCCCC"> only one</font>

276
00:11:39,259 --> 00:11:44,419
that's<font color="#CCCCCC"> been modified</font><font color="#E5E5E5"> specifically for</font>

277
00:11:41,389 --> 00:11:45,619
for native apps to add some protection

278
00:11:44,419 --> 00:11:48,819
to<font color="#E5E5E5"> the authorization</font><font color="#CCCCCC"> code that</font><font color="#E5E5E5"> we'll</font>

279
00:11:45,619 --> 00:11:52,729
talk<font color="#E5E5E5"> a little bit</font><font color="#CCCCCC"> more a little bit more</font>

280
00:11:48,819 --> 00:11:56,529
we will talk about more later<font color="#CCCCCC"> as well as</font>

281
00:11:52,729 --> 00:11:59,029
that there is the<font color="#E5E5E5"> implicit grant which</font>

282
00:11:56,529 --> 00:12:01,489
doesn't protect the access token in the

283
00:11:59,029 --> 00:12:04,970
same way that the that the<font color="#E5E5E5"> authorization</font>

284
00:12:01,489 --> 00:12:08,149
code<font color="#E5E5E5"> protects the protective orientation</font>

285
00:12:04,970 --> 00:12:10,039
code both the implicit grant and the

286
00:12:08,149 --> 00:12:12,289
next one which is<font color="#E5E5E5"> the resource owner</font>

287
00:12:10,039 --> 00:12:14,419
password credential<font color="#E5E5E5"> Clark grant</font>

288
00:12:12,289 --> 00:12:16,879
I'll actually define for mobile but<font color="#CCCCCC"> we</font>

289
00:12:14,419 --> 00:12:20,089
put<font color="#E5E5E5"> them we put them up for</font><font color="#CCCCCC"> the purposes</font>

290
00:12:16,879 --> 00:12:24,679
of explanation<font color="#E5E5E5"> because you may you may</font>

291
00:12:20,089 --> 00:12:26,689
run<font color="#E5E5E5"> into them the resource the recent</font>

292
00:12:24,679 --> 00:12:28,399
owner<font color="#E5E5E5"> password credential grant which is</font>

293
00:12:26,689 --> 00:12:33,169
quite a mouthful

294
00:12:28,399 --> 00:12:35,600
is<font color="#E5E5E5"> actually built or provided as as I</font>

295
00:12:33,169 --> 00:12:37,478
sort<font color="#E5E5E5"> of stated</font><font color="#CCCCCC"> Barham aware</font><font color="#E5E5E5"> where if</font>

296
00:12:35,600 --> 00:12:40,279
you're migrating an application<font color="#E5E5E5"> from</font>

297
00:12:37,479 --> 00:12:45,999
just<font color="#E5E5E5"> using username and password</font><font color="#CCCCCC"> award</font>

298
00:12:40,279 --> 00:12:48,079
<font color="#E5E5E5">you can start using this this grant and</font>

299
00:12:45,999 --> 00:12:53,029
<font color="#E5E5E5">initially and then move it</font><font color="#CCCCCC"> over to one</font>

300
00:12:48,079 --> 00:12:55,339
<font color="#E5E5E5">of</font><font color="#CCCCCC"> the other ones in in time normal</font>

301
00:12:53,029 --> 00:12:57,889
although<font color="#CCCCCC"> off defines four different</font>

302
00:12:55,339 --> 00:12:59,600
<font color="#E5E5E5">grants but it's also</font><font color="#CCCCCC"> reversible</font><font color="#E5E5E5"> to to</font>

303
00:12:57,889 --> 00:13:03,769
extend<font color="#CCCCCC"> these</font><font color="#E5E5E5"> all to</font><font color="#CCCCCC"> change to change</font>

304
00:12:59,600 --> 00:13:06,019
<font color="#CCCCCC">these and</font><font color="#E5E5E5"> Open ID Connect defines two or</font>

305
00:13:03,769 --> 00:13:09,019
three other grant types which are<font color="#E5E5E5"> just</font>

306
00:13:06,019 --> 00:13:11,949
different<font color="#E5E5E5"> ways of getting access tokens</font>

307
00:13:09,019 --> 00:13:11,949
<font color="#E5E5E5">or refresh tokens</font>

308
00:13:12,720 --> 00:13:19,380
so this is the authorization<font color="#CCCCCC"> code</font><font color="#E5E5E5"> grant</font>

309
00:13:15,660 --> 00:13:21,170
<font color="#CCCCCC">very similar very similar to the sorry</font>

310
00:13:19,380 --> 00:13:23,280
exactly the same as the one<font color="#CCCCCC"> that Fraser</font>

311
00:13:21,170 --> 00:13:26,099
<font color="#CCCCCC">just showed so you have the</font>

312
00:13:23,280 --> 00:13:28,949
<font color="#CCCCCC">authorization request here they're going</font>

313
00:13:26,100 --> 00:13:30,930
from the<font color="#CCCCCC"> climb</font><font color="#E5E5E5"> app to the browser</font><font color="#CCCCCC"> you</font>

314
00:13:28,950 --> 00:13:32,550
have the request<font color="#E5E5E5"> being</font><font color="#CCCCCC"> had</font><font color="#E5E5E5"> handle to the</font>

315
00:13:30,930 --> 00:13:34,609
<font color="#CCCCCC">passed on to the</font><font color="#E5E5E5"> authorization</font><font color="#CCCCCC"> server</font>

316
00:13:32,550 --> 00:13:37,560
here<font color="#E5E5E5"> the authorization</font><font color="#CCCCCC"> and</font>

317
00:13:34,610 --> 00:13:39,990
authentication part here and then a

318
00:13:37,560 --> 00:13:43,319
<font color="#E5E5E5">return</font><font color="#CCCCCC"> of the authorization code from</font>

319
00:13:39,990 --> 00:13:46,770
<font color="#E5E5E5">your server to the</font><font color="#CCCCCC"> tooth</font><font color="#E5E5E5"> browser and</font>

320
00:13:43,320 --> 00:13:48,720
then to client app<font color="#CCCCCC"> then grabbing the</font>

321
00:13:46,770 --> 00:13:52,560
change in the client code<font color="#E5E5E5"> for access</font>

322
00:13:48,720 --> 00:13:55,800
tokens here and then using the access

323
00:13:52,560 --> 00:13:59,180
token<font color="#CCCCCC"> to access</font><font color="#E5E5E5"> resources here and then</font>

324
00:13:55,800 --> 00:14:01,770
you have<font color="#E5E5E5"> after timers past you have the</font>

325
00:13:59,180 --> 00:14:06,810
access<font color="#CCCCCC"> to the Refresh token being used</font>

326
00:14:01,770 --> 00:14:09,329
to get<font color="#CCCCCC"> grab new access tokens</font><font color="#E5E5E5"> so moving</font>

327
00:14:06,810 --> 00:14:12,270
<font color="#E5E5E5">on</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the implicit grant just a</font>

328
00:14:09,330 --> 00:14:13,910
highlight<font color="#E5E5E5"> the</font><font color="#CCCCCC"> difference is so here</font><font color="#E5E5E5"> at</font>

329
00:14:12,270 --> 00:14:16,110
the start it follows a very<font color="#E5E5E5"> similar</font>

330
00:14:13,910 --> 00:14:18,420
similar flow to the authorization<font color="#CCCCCC"> code</font>

331
00:14:16,110 --> 00:14:20,130
runs you have an authorization<font color="#CCCCCC"> request</font>

332
00:14:18,420 --> 00:14:23,189
<font color="#E5E5E5">that goes from the client app to the</font>

333
00:14:20,130 --> 00:14:24,320
users<font color="#CCCCCC"> browser then we go through</font><font color="#E5E5E5"> then</font>

334
00:14:23,190 --> 00:14:26,690
that goes from the browser to the

335
00:14:24,320 --> 00:14:28,620
<font color="#E5E5E5">authorization</font><font color="#CCCCCC"> server then the</font>

336
00:14:26,690 --> 00:14:31,560
<font color="#E5E5E5">authentication and authorization steps</font>

337
00:14:28,620 --> 00:14:34,470
<font color="#CCCCCC">happen but in the implicit grant</font><font color="#E5E5E5"> rather</font>

338
00:14:31,560 --> 00:14:36,599
than<font color="#E5E5E5"> returning an authorization code</font><font color="#CCCCCC"> an</font>

339
00:14:34,470 --> 00:14:40,770
access token is returned returned

340
00:14:36,600 --> 00:14:42,900
directly<font color="#E5E5E5"> this this thing gets to the</font>

341
00:14:40,770 --> 00:14:46,319
user<font color="#CCCCCC"> agent and</font><font color="#E5E5E5"> is ultimately redirected</font>

342
00:14:42,900 --> 00:14:47,640
back to<font color="#E5E5E5"> the client app obviously</font><font color="#CCCCCC"> one of</font>

343
00:14:46,320 --> 00:14:51,000
the differences here<font color="#CCCCCC"> is there's no</font>

344
00:14:47,640 --> 00:14:53,460
refresh token so when the<font color="#E5E5E5"> access token</font>

345
00:14:51,000 --> 00:14:56,880
expires the client app will<font color="#E5E5E5"> have to go</font>

346
00:14:53,460 --> 00:15:00,270
through<font color="#CCCCCC"> the whole authorization step</font>

347
00:14:56,880 --> 00:15:03,720
here<font color="#E5E5E5"> again this was originally written</font>

348
00:15:00,270 --> 00:15:07,110
for<font color="#E5E5E5"> JavaScript based web apps</font><font color="#CCCCCC"> that don't</font>

349
00:15:03,720 --> 00:15:11,490
<font color="#E5E5E5">that don't have any any way of</font>

350
00:15:07,110 --> 00:15:15,570
persisting refresh tokens but it's as

351
00:15:11,490 --> 00:15:20,100
the most<font color="#E5E5E5"> simple of the grants you may</font>

352
00:15:15,570 --> 00:15:22,260
run<font color="#E5E5E5"> into</font><font color="#CCCCCC"> it sometimes</font><font color="#E5E5E5"> in in mobile so</font>

353
00:15:20,100 --> 00:15:25,380
the next one is<font color="#E5E5E5"> the resource owner</font>

354
00:15:22,260 --> 00:15:27,450
<font color="#E5E5E5">password credential grant</font>

355
00:15:25,380 --> 00:15:29,520
and here<font color="#E5E5E5"> the resource owner</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> the user</font>

356
00:15:27,450 --> 00:15:31,620
<font color="#E5E5E5">just enters their credentials straight</font>

357
00:15:29,520 --> 00:15:33,689
into the client app and then<font color="#E5E5E5"> the client</font>

358
00:15:31,620 --> 00:15:35,450
will just pass those<font color="#CCCCCC"> credentials</font><font color="#E5E5E5"> and the</font>

359
00:15:33,690 --> 00:15:38,010
request is to<font color="#E5E5E5"> go straight</font><font color="#CCCCCC"> to the</font>

360
00:15:35,450 --> 00:15:41,550
<font color="#E5E5E5">authorization</font><font color="#CCCCCC"> server obviously this</font>

361
00:15:38,010 --> 00:15:43,800
grant doesn't<font color="#E5E5E5"> separate me it doesn't</font>

362
00:15:41,550 --> 00:15:45,810
separate the credentials from<font color="#E5E5E5"> the client</font>

363
00:15:43,800 --> 00:15:49,020
so the client has as well<font color="#E5E5E5"> as access</font>

364
00:15:45,810 --> 00:15:51,959
<font color="#CCCCCC">queue credentials full control over what</font>

365
00:15:49,020 --> 00:15:54,750
<font color="#E5E5E5">access it requests to Europe your</font>

366
00:15:51,960 --> 00:15:57,060
account<font color="#E5E5E5"> when the authorization server</font>

367
00:15:54,750 --> 00:15:59,160
<font color="#E5E5E5">gets those and validates the credentials</font>

368
00:15:57,060 --> 00:16:01,260
<font color="#E5E5E5">it'll then pass back an</font><font color="#CCCCCC"> access token</font><font color="#E5E5E5"> and</font>

369
00:15:59,160 --> 00:16:04,699
a refresh token<font color="#CCCCCC"> and at that point it's</font>

370
00:16:01,260 --> 00:16:10,439
<font color="#E5E5E5">exactly the same as the the</font>

371
00:16:04,700 --> 00:16:13,320
<font color="#CCCCCC">authorization grant so now we're going</font>

372
00:16:10,440 --> 00:16:15,180
to move<font color="#E5E5E5"> on to talk about the redirect</font>

373
00:16:13,320 --> 00:16:19,590
URI and some of the<font color="#CCCCCC"> vulnerabilities that</font>

374
00:16:15,180 --> 00:16:23,609
exist in with it specifically on on

375
00:16:19,590 --> 00:16:27,210
mobile so when the client<font color="#CCCCCC"> is making an</font>

376
00:16:23,610 --> 00:16:30,270
authorization request<font color="#CCCCCC"> it sends a URL of</font>

377
00:16:27,210 --> 00:16:33,060
<font color="#E5E5E5">the</font><font color="#CCCCCC"> following form</font><font color="#E5E5E5"> as you can see on the</font>

378
00:16:30,270 --> 00:16:34,560
top within<font color="#E5E5E5"> within the URL we have the</font>

379
00:16:33,060 --> 00:16:36,839
client ID<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> just a unique</font>

380
00:16:34,560 --> 00:16:39,810
identifier for<font color="#CCCCCC"> the client</font><font color="#E5E5E5"> and we also</font>

381
00:16:36,840 --> 00:16:42,690
have the redirect URI so this is the

382
00:16:39,810 --> 00:16:45,750
address<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the client wants to receive</font>

383
00:16:42,690 --> 00:16:50,400
the<font color="#CCCCCC"> authorization code</font><font color="#E5E5E5"> or the access</font>

384
00:16:45,750 --> 00:16:52,950
code there<font color="#E5E5E5"> are two types on mobile</font><font color="#CCCCCC"> there</font>

385
00:16:50,400 --> 00:16:56,579
are system your eyes which are any

386
00:16:52,950 --> 00:17:04,920
protocol<font color="#E5E5E5"> and then there are claims your</font>

387
00:16:56,580 --> 00:17:07,490
eyes which are either<font color="#E5E5E5"> HTTP or HTTPS so</font>

388
00:17:04,920 --> 00:17:11,730
what happens

389
00:17:07,490 --> 00:17:14,339
when having passed<font color="#E5E5E5"> the redirect URI to</font>

390
00:17:11,730 --> 00:17:15,810
the authorization<font color="#CCCCCC"> server once the use</font>

391
00:17:14,339 --> 00:17:18,030
<font color="#E5E5E5">has been authenticated and authorized</font>

392
00:17:15,810 --> 00:17:20,929
<font color="#E5E5E5">the authorization server will</font><font color="#CCCCCC"> then pass</font>

393
00:17:18,030 --> 00:17:24,210
back<font color="#E5E5E5"> the auth code or the access token</font>

394
00:17:20,930 --> 00:17:26,370
appended to the redirect URI in the form

395
00:17:24,210 --> 00:17:28,079
you'll see here<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> that'll pass</font>

396
00:17:26,369 --> 00:17:30,120
<font color="#E5E5E5">from the authorization</font><font color="#CCCCCC"> server back to</font>

397
00:17:28,079 --> 00:17:32,360
<font color="#CCCCCC">the</font><font color="#E5E5E5"> browser and then to the client and</font>

398
00:17:30,120 --> 00:17:35,639
<font color="#E5E5E5">then</font><font color="#CCCCCC"> the client can use the</font>

399
00:17:32,360 --> 00:17:38,659
authorization code or the access token

400
00:17:35,640 --> 00:17:41,360
<font color="#E5E5E5">as needed</font><font color="#CCCCCC"> so now I'm</font><font color="#E5E5E5"> going to pass over</font>

401
00:17:38,660 --> 00:17:44,360
- Fraser to talk a little<font color="#E5E5E5"> bit more about</font>

402
00:17:41,360 --> 00:17:48,110
the details<font color="#E5E5E5"> of</font><font color="#CCCCCC"> what the euro eyes looked</font>

403
00:17:44,360 --> 00:17:50,479
like<font color="#CCCCCC"> and some androids</font><font color="#E5E5E5"> the the client</font>

404
00:17:48,110 --> 00:17:55,490
<font color="#E5E5E5">help</font><font color="#CCCCCC"> registers its redirect URI</font><font color="#E5E5E5"> in the</font>

405
00:17:50,480 --> 00:17:58,700
androidmanifest.xml file and this<font color="#E5E5E5"> is the</font>

406
00:17:55,490 --> 00:18:01,400
data section here<font color="#E5E5E5"> so for a custom your</font>

407
00:17:58,700 --> 00:18:03,410
eyes scheme<font color="#CCCCCC"> mandroid you can use HTTP</font>

408
00:18:01,400 --> 00:18:05,330
<font color="#E5E5E5">HTTPS or anything you like</font>

409
00:18:03,410 --> 00:18:07,850
so here<font color="#E5E5E5"> we</font><font color="#CCCCCC"> fair we Peter walls is the</font>

410
00:18:05,330 --> 00:18:09,350
<font color="#E5E5E5">skin and we've got the E and then we've</font>

411
00:18:07,850 --> 00:18:11,810
<font color="#E5E5E5">got the rest of the components</font><font color="#CCCCCC"> to the</font>

412
00:18:09,350 --> 00:18:12,320
URL there and this is completely

413
00:18:11,810 --> 00:18:13,730
unbearable

414
00:18:12,320 --> 00:18:16,129
<font color="#E5E5E5">anyhow can register whatever</font><font color="#CCCCCC"> it likes</font>

415
00:18:13,730 --> 00:18:17,810
<font color="#E5E5E5">and but when you the first time you go</font>

416
00:18:16,130 --> 00:18:18,920
to<font color="#E5E5E5"> visit one</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> earth links or this</font>

417
00:18:17,810 --> 00:18:21,710
on the browser tries to<font color="#E5E5E5"> free</font><font color="#CCCCCC"> right</font>

418
00:18:18,920 --> 00:18:23,150
interval and<font color="#E5E5E5"> proper to pop up saying</font>

419
00:18:21,710 --> 00:18:24,830
which app you<font color="#CCCCCC"> want to use to open this</font>

420
00:18:23,150 --> 00:18:26,690
so say you want to<font color="#CCCCCC"> use your own system</font>

421
00:18:24,830 --> 00:18:30,379
browser or do you want to use web is

422
00:18:26,690 --> 00:18:32,870
installed is registered it I'm clinging

423
00:18:30,380 --> 00:18:36,350
to your<font color="#E5E5E5"> ice this is this can only be</font>

424
00:18:32,870 --> 00:18:38,060
HTTP or HTTPS<font color="#E5E5E5"> and the difference is it's</font>

425
00:18:36,350 --> 00:18:42,080
got this all through verify it was true

426
00:18:38,060 --> 00:18:45,020
<font color="#CCCCCC">and</font><font color="#E5E5E5"> attribute</font><font color="#CCCCCC"> in it and basically</font><font color="#E5E5E5"> this</font>

427
00:18:42,080 --> 00:18:47,570
<font color="#E5E5E5">course is the operating system install</font>

428
00:18:45,020 --> 00:18:49,730
time to go off to this your air to the

429
00:18:47,570 --> 00:18:51,639
URL<font color="#CCCCCC"> you mentioned</font><font color="#E5E5E5"> and try and verify the</font>

430
00:18:49,730 --> 00:18:54,110
Europe<font color="#E5E5E5"> actually owns this URL</font><font color="#CCCCCC"> a</font>

431
00:18:51,640 --> 00:18:55,460
<font color="#CCCCCC">consequence of</font><font color="#E5E5E5"> that is the browser have</font>

432
00:18:54,110 --> 00:18:57,139
<font color="#E5E5E5">mobile operating system has more trust</font>

433
00:18:55,460 --> 00:18:58,670
in it so it doesn't have<font color="#E5E5E5"> to do because</font>

434
00:18:57,140 --> 00:19:02,840
that<font color="#E5E5E5"> so come with article you</font><font color="#CCCCCC"> redirect</font>

435
00:18:58,670 --> 00:19:03,950
into<font color="#E5E5E5"> your app on the server side said</font>

436
00:19:02,840 --> 00:19:07,459
this is what this<font color="#E5E5E5"> looks like</font>

437
00:19:03,950 --> 00:19:11,000
<font color="#E5E5E5">so it has to be a valid HTTP URL</font><font color="#CCCCCC"> invalid</font>

438
00:19:07,460 --> 00:19:13,130
<font color="#CCCCCC">certificate and then you put a</font><font color="#E5E5E5"> link</font>

439
00:19:11,000 --> 00:19:15,590
<font color="#E5E5E5">location in the</font><font color="#CCCCCC"> well-known folder and</font>

440
00:19:13,130 --> 00:19:19,280
inside is the package name<font color="#E5E5E5"> of the</font>

441
00:19:15,590 --> 00:19:20,720
application<font color="#E5E5E5"> and the shaft to 4/6</font>

442
00:19:19,280 --> 00:19:22,490
certificate<font color="#E5E5E5"> lubbers use destroying the</font>

443
00:19:20,720 --> 00:19:24,080
<font color="#CCCCCC">application and as long as this is</font>

444
00:19:22,490 --> 00:19:26,570
<font color="#CCCCCC">overlays</font><font color="#E5E5E5"> in the OS can see this it'll</font>

445
00:19:24,080 --> 00:19:31,820
<font color="#E5E5E5">let you automatically handle those those</font>

446
00:19:26,570 --> 00:19:34,159
URLs in your iOS offers pretty much

447
00:19:31,820 --> 00:19:36,260
exactly<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same thing and custom URL</font>

448
00:19:34,160 --> 00:19:38,510
schemes<font color="#E5E5E5"> they're a bit more</font><font color="#CCCCCC"> restricted in</font>

449
00:19:36,260 --> 00:19:42,080
<font color="#E5E5E5">you have to use a custom protocol you</font>

450
00:19:38,510 --> 00:19:44,000
can't claim<font color="#E5E5E5"> HTTP or HTTPS</font><font color="#CCCCCC"> and this is</font>

451
00:19:42,080 --> 00:19:44,990
done by<font color="#E5E5E5"> embedding this in the</font><font color="#CCCCCC"> being</font>

452
00:19:44,000 --> 00:19:47,660
<font color="#CCCCCC">photo penis club</font>

453
00:19:44,990 --> 00:19:50,720
this is again is completely unverified

454
00:19:47,660 --> 00:19:51,950
<font color="#CCCCCC">and when you go</font><font color="#E5E5E5"> to browse to</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> a piece</font>

455
00:19:50,720 --> 00:19:53,269
<font color="#E5E5E5">on iOS it'll pop</font>

456
00:19:51,950 --> 00:19:55,309
with<font color="#CCCCCC"> do</font><font color="#E5E5E5"> you want to open this in this</font>

457
00:19:53,269 --> 00:19:57,049
app<font color="#CCCCCC"> promise there's no picker</font><font color="#E5E5E5"> and</font>

458
00:19:55,309 --> 00:20:01,549
because there's no picker it does

459
00:19:57,049 --> 00:20:04,309
attempt to try<font color="#CCCCCC"> and</font><font color="#E5E5E5"> have some state so</font>

460
00:20:01,549 --> 00:20:06,080
the lowest that went<font color="#E5E5E5"> into the browser</font>

461
00:20:04,309 --> 00:20:08,450
will be the one it tries to<font color="#E5E5E5"> come back</font>

462
00:20:06,080 --> 00:20:10,519
from

463
00:20:08,450 --> 00:20:12,649
there's also associated domains and<font color="#E5E5E5"> this</font>

464
00:20:10,519 --> 00:20:14,539
is<font color="#E5E5E5"> almost identical to Android you have</font>

465
00:20:12,649 --> 00:20:16,309
<font color="#CCCCCC">to be HT</font><font color="#E5E5E5"> to PhD yes</font>

466
00:20:14,539 --> 00:20:20,389
it's verified in school time and this<font color="#E5E5E5"> is</font>

467
00:20:16,309 --> 00:20:23,240
in<font color="#E5E5E5"> Sophie</font><font color="#CCCCCC"> project settings super site</font>

468
00:20:20,389 --> 00:20:26,600
again very similar has to be valid<font color="#E5E5E5"> HTTP</font>

469
00:20:23,240 --> 00:20:30,080
URL in the<font color="#CCCCCC"> apple</font><font color="#E5E5E5"> app so I've associated</font>

470
00:20:26,600 --> 00:20:33,350
<font color="#CCCCCC">gob</font><font color="#E5E5E5"> and in here you</font><font color="#CCCCCC"> move</font><font color="#E5E5E5"> to the bundle</font>

471
00:20:30,080 --> 00:20:35,389
ID<font color="#CCCCCC"> with developer ID and one difference</font>

472
00:20:33,350 --> 00:20:37,370
on iOS is he registered pads as<font color="#E5E5E5"> well as</font>

473
00:20:35,389 --> 00:20:42,229
<font color="#E5E5E5">he don't just claim the</font><font color="#CCCCCC"> the domain</font><font color="#E5E5E5"> you</font>

474
00:20:37,370 --> 00:20:46,070
can<font color="#E5E5E5"> claim the sort of person</font><font color="#CCCCCC"> true</font><font color="#E5E5E5"> it's</font>

475
00:20:42,230 --> 00:20:48,380
now we're<font color="#E5E5E5"> gonna pick so the reason we</font>

476
00:20:46,070 --> 00:20:51,529
<font color="#E5E5E5">went through all of the explanations</font><font color="#CCCCCC"> is</font>

477
00:20:48,380 --> 00:20:54,230
ultimately if as a client<font color="#CCCCCC"> if you're</font>

478
00:20:51,529 --> 00:20:56,840
using the<font color="#E5E5E5"> incorrect type of URL</font><font color="#CCCCCC"> a</font>

479
00:20:54,230 --> 00:20:59,360
malicious app on the on the same device

480
00:20:56,840 --> 00:21:01,939
can have already claimed to<font color="#E5E5E5"> know have</font>

481
00:20:59,360 --> 00:21:04,428
already<font color="#E5E5E5"> claimed the the URL that</font><font color="#CCCCCC"> your</font>

482
00:21:01,940 --> 00:21:06,710
the your<font color="#E5E5E5"> client sorry that you want your</font>

483
00:21:04,429 --> 00:21:10,210
authorization<font color="#E5E5E5"> codes or access codes to</font>

484
00:21:06,710 --> 00:21:13,840
<font color="#CCCCCC">be redirected to</font><font color="#E5E5E5"> and if you've already</font>

485
00:21:10,210 --> 00:21:16,429
accepted<font color="#CCCCCC"> that application</font><font color="#E5E5E5"> then a</font>

486
00:21:13,840 --> 00:21:18,320
<font color="#E5E5E5">well-behaved application so the</font>

487
00:21:16,429 --> 00:21:20,450
malicious application will<font color="#CCCCCC"> be able to</font>

488
00:21:18,320 --> 00:21:23,600
intercept<font color="#E5E5E5"> the authorization codes or</font><font color="#CCCCCC"> the</font>

489
00:21:20,450 --> 00:21:27,799
access tokens for another app that's

490
00:21:23,600 --> 00:21:29,269
installed on on your phone<font color="#E5E5E5"> now because</font>

491
00:21:27,799 --> 00:21:34,129
the authorization code can<font color="#E5E5E5"> then be</font>

492
00:21:29,269 --> 00:21:36,590
swapped for access<font color="#CCCCCC"> to</font><font color="#E5E5E5"> your access to</font>

493
00:21:34,130 --> 00:21:40,070
<font color="#E5E5E5">your mail</font><font color="#CCCCCC"> it effectively</font><font color="#E5E5E5"> means something</font>

494
00:21:36,590 --> 00:21:46,309
a malicious application<font color="#E5E5E5"> can grab can</font>

495
00:21:40,070 --> 00:21:48,620
gain access to<font color="#E5E5E5"> your resources in terms</font>

496
00:21:46,309 --> 00:21:50,029
<font color="#E5E5E5">of the the different URLs</font><font color="#CCCCCC"> if you're</font>

497
00:21:48,620 --> 00:21:51,559
using custom your eyes<font color="#E5E5E5"> that you'll</font>

498
00:21:50,029 --> 00:21:55,730
generally vulnerable to this because

499
00:21:51,559 --> 00:21:58,340
there's no<font color="#CCCCCC"> way to claim ownership</font><font color="#E5E5E5"> in</font>

500
00:21:55,730 --> 00:22:00,260
terms of<font color="#E5E5E5"> claims your eyes on Android if</font>

501
00:21:58,340 --> 00:22:03,168
you haven't proved or claimed ownership

502
00:22:00,260 --> 00:22:04,350
<font color="#E5E5E5">you may be vulnerable as</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> on iOS</font>

503
00:22:03,169 --> 00:22:06,960
it's not possible

504
00:22:04,350 --> 00:22:09,449
he's a<font color="#E5E5E5"> clean dri</font><font color="#CCCCCC"> without</font><font color="#E5E5E5"> providing</font>

505
00:22:06,960 --> 00:22:13,559
without proving ownership<font color="#E5E5E5"> so ultimately</font>

506
00:22:09,450 --> 00:22:17,309
you need to<font color="#E5E5E5"> prove ownership or ideally</font>

507
00:22:13,559 --> 00:22:19,620
you prove ownership to prevent this but

508
00:22:17,309 --> 00:22:22,860
there<font color="#CCCCCC"> are other</font><font color="#E5E5E5"> ways which we will talk</font>

509
00:22:19,620 --> 00:22:27,080
<font color="#E5E5E5">about now in terms</font><font color="#CCCCCC"> of what that looks</font>

510
00:22:22,860 --> 00:22:29,760
like<font color="#CCCCCC"> so here we have client app</font>

511
00:22:27,080 --> 00:22:32,460
<font color="#E5E5E5">performing a standard authorization</font>

512
00:22:29,760 --> 00:22:35,520
request to the browser<font color="#CCCCCC"> then a standard</font>

513
00:22:32,460 --> 00:22:37,799
<font color="#E5E5E5">exchange between the the browser and the</font>

514
00:22:35,520 --> 00:22:40,918
authorization<font color="#CCCCCC"> server here but at this</font>

515
00:22:37,799 --> 00:22:43,020
point when the authorization code<font color="#CCCCCC"> comes</font>

516
00:22:40,919 --> 00:22:45,630
<font color="#E5E5E5">back to the user agent it gets</font>

517
00:22:43,020 --> 00:22:49,620
redirected to the to the attacker

518
00:22:45,630 --> 00:22:52,980
controlled app or<font color="#E5E5E5"> in our case</font><font color="#CCCCCC"> bad</font><font color="#E5E5E5"> male</font>

519
00:22:49,620 --> 00:22:55,500
<font color="#CCCCCC">robot</font><font color="#E5E5E5"> and then that application</font><font color="#CCCCCC"> can</font>

520
00:22:52,980 --> 00:22:57,990
exchange the the code for<font color="#E5E5E5"> some access</font>

521
00:22:55,500 --> 00:23:01,640
tokens and then ship them off to an

522
00:22:57,990 --> 00:23:03,690
attacker controlled<font color="#E5E5E5"> control server and</font>

523
00:23:01,640 --> 00:23:05,750
then once the attack

524
00:23:03,690 --> 00:23:10,110
<font color="#CCCCCC">once the attacker has your access tokens</font>

525
00:23:05,750 --> 00:23:11,880
<font color="#CCCCCC">he can</font><font color="#E5E5E5"> use them or</font><font color="#CCCCCC"> pay</font><font color="#E5E5E5"> to use them to</font>

526
00:23:10,110 --> 00:23:13,949
access<font color="#E5E5E5"> resources on the resource server</font>

527
00:23:11,880 --> 00:23:17,250
and if they've got refresh tokens

528
00:23:13,950 --> 00:23:19,620
persist for they can persist<font color="#E5E5E5"> access to</font>

529
00:23:17,250 --> 00:23:24,750
your account<font color="#E5E5E5"> for as long</font><font color="#CCCCCC"> as the Refresh</font>

530
00:23:19,620 --> 00:23:32,309
tokens are valid so but<font color="#E5E5E5"> Ephrata to show</font>

531
00:23:24,750 --> 00:23:33,840
you what<font color="#CCCCCC"> that looks like in practice so</font>

532
00:23:32,309 --> 00:23:38,760
in this example we're<font color="#E5E5E5"> gonna go t-pins to</font>

533
00:23:33,840 --> 00:23:40,949
kill my robot<font color="#E5E5E5"> and refuse the</font><font color="#CCCCCC"> web mail</font>

534
00:23:38,760 --> 00:23:43,080
and you notice here we've got the point

535
00:23:40,950 --> 00:23:45,240
<font color="#CCCCCC">many of CTL male</font><font color="#E5E5E5"> robot and then the</font>

536
00:23:43,080 --> 00:23:49,230
redirect<font color="#E5E5E5"> here</font><font color="#CCCCCC"> i were</font><font color="#E5E5E5"> using is a customer</font>

537
00:23:45,240 --> 00:23:52,320
<font color="#E5E5E5">it's say</font><font color="#CCCCCC"> there was two protocol and and</font>

538
00:23:49,230 --> 00:23:53,490
then from far away and<font color="#E5E5E5"> skill and this is</font>

539
00:23:52,320 --> 00:23:55,950
<font color="#CCCCCC">also</font><font color="#E5E5E5"> been</font><font color="#CCCCCC"> arranged with</font><font color="#E5E5E5"> my bad male</font>

540
00:23:53,490 --> 00:23:58,380
robot<font color="#E5E5E5"> so when I go through rewrite to</font>

541
00:23:55,950 --> 00:24:08,429
the ortho rotation server same process

542
00:23:58,380 --> 00:24:11,789
again so we<font color="#E5E5E5"> can applause</font><font color="#CCCCCC"> Fry's house</font>

543
00:24:08,429 --> 00:24:13,799
insecure male robot<font color="#CCCCCC"> he gets passed off</font>

544
00:24:11,789 --> 00:24:16,530
by it's<font color="#E5E5E5"> about my robot now it's called</font>

545
00:24:13,799 --> 00:24:19,190
<font color="#E5E5E5">the authorization code change that's the</font>

546
00:24:16,530 --> 00:24:19,190
<font color="#CCCCCC">access second</font>

547
00:24:26,049 --> 00:24:31,158
and then let's take a look<font color="#CCCCCC"> in your</font><font color="#E5E5E5"> speak</font>

548
00:24:28,879 --> 00:24:34,998
access token to<font color="#E5E5E5"> go and</font><font color="#CCCCCC"> login take</font><font color="#E5E5E5"> you to</font>

549
00:24:31,159 --> 00:24:36,229
<font color="#E5E5E5">my</font><font color="#CCCCCC"> mail</font><font color="#E5E5E5"> becomes an email account</font><font color="#CCCCCC"> it's</font>

550
00:24:34,999 --> 00:24:50,929
<font color="#E5E5E5">now we're gonna look at</font><font color="#CCCCCC"> Annette to</font><font color="#E5E5E5"> get</font>

551
00:24:36,229 --> 00:24:55,549
<font color="#E5E5E5">this so within the when the the</font><font color="#CCCCCC"> client</font>

552
00:24:50,929 --> 00:24:59,419
<font color="#CCCCCC">is making an authorization request will</font>

553
00:24:55,549 --> 00:25:02,029
<font color="#E5E5E5">be O of</font><font color="#CCCCCC"> two own native RFC they defined</font>

554
00:24:59,419 --> 00:25:06,049
a new part of<font color="#CCCCCC"> the protocol called the</font>

555
00:25:02,029 --> 00:25:09,489
proof<font color="#E5E5E5"> code exchange and the idea is that</font>

556
00:25:06,049 --> 00:25:13,450
<font color="#E5E5E5">this allows the authorization</font><font color="#CCCCCC"> server</font><font color="#E5E5E5"> to</font>

557
00:25:09,489 --> 00:25:20,509
associate a an authorization request

558
00:25:13,450 --> 00:25:22,849
<font color="#E5E5E5">with a token exchange so what the client</font>

559
00:25:20,509 --> 00:25:25,009
does is it generates<font color="#CCCCCC"> the secret thank</font>

560
00:25:22,849 --> 00:25:30,399
<font color="#CCCCCC">generator</font><font color="#E5E5E5"> hash of the hash of</font><font color="#CCCCCC"> that</font>

561
00:25:25,009 --> 00:25:33,079
secret and<font color="#E5E5E5"> sends that in the PK seee</font>

562
00:25:30,399 --> 00:25:35,389
variable to the server<font color="#E5E5E5"> the code</font>

563
00:25:33,079 --> 00:25:39,229
challenge method is just the the hashing

564
00:25:35,389 --> 00:25:42,049
method that's used so then don't<font color="#E5E5E5"> consent</font>

565
00:25:39,229 --> 00:25:43,459
to<font color="#E5E5E5"> the authorization</font><font color="#CCCCCC"> server and after</font>

566
00:25:42,049 --> 00:25:47,570
the user has<font color="#CCCCCC"> been authenticated and</font>

567
00:25:43,459 --> 00:25:51,739
authorized<font color="#E5E5E5"> the authorization</font><font color="#CCCCCC"> server will</font>

568
00:25:47,570 --> 00:25:54,259
then<font color="#E5E5E5"> keep</font><font color="#CCCCCC"> that pkc e information and</font>

569
00:25:51,739 --> 00:25:58,820
<font color="#CCCCCC">associated</font><font color="#E5E5E5"> with the authorization</font><font color="#CCCCCC"> code</font>

570
00:25:54,259 --> 00:26:02,690
<font color="#CCCCCC">that it returns when the client is then</font>

571
00:25:58,820 --> 00:26:04,939
<font color="#E5E5E5">requesting requesting access token and a</font>

572
00:26:02,690 --> 00:26:07,820
refresh token<font color="#CCCCCC"> using the authorization</font>

573
00:26:04,940 --> 00:26:11,029
code that it's been given<font color="#E5E5E5"> it then sends</font>

574
00:26:07,820 --> 00:26:13,399
the the secrets of the<font color="#E5E5E5"> PK c e in the</font>

575
00:26:11,029 --> 00:26:15,529
Claire<font color="#E5E5E5"> at which point then the</font>

576
00:26:13,399 --> 00:26:18,199
authorization server<font color="#E5E5E5"> can look at the</font>

577
00:26:15,529 --> 00:26:21,200
access code and the hash secret that

578
00:26:18,200 --> 00:26:22,789
it's been given complete<font color="#E5E5E5"> the the</font><font color="#CCCCCC"> hash</font>

579
00:26:21,200 --> 00:26:25,459
secret and compare it<font color="#E5E5E5"> to the one has</font>

580
00:26:22,789 --> 00:26:28,519
just<font color="#E5E5E5"> been given by</font><font color="#CCCCCC"> the client</font><font color="#E5E5E5"> and at</font>

581
00:26:25,459 --> 00:26:31,969
that<font color="#E5E5E5"> point is bound the authorization</font>

582
00:26:28,519 --> 00:26:36,259
code<font color="#CCCCCC"> that</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> issued to</font><font color="#E5E5E5"> this client at</font>

583
00:26:31,969 --> 00:26:39,179
request<font color="#E5E5E5"> and if they</font><font color="#CCCCCC"> Mac then it returns</font>

584
00:26:36,259 --> 00:26:43,769
the authorization code<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> clients</font>

585
00:26:39,179 --> 00:26:45,389
so the idea here<font color="#E5E5E5"> is if I as a malicious</font>

586
00:26:43,769 --> 00:26:48,239
<font color="#CCCCCC">app</font><font color="#E5E5E5"> get hold of your authorization code</font>

587
00:26:45,389 --> 00:26:49,258
<font color="#E5E5E5">I don't</font><font color="#CCCCCC"> know the secret therefore I</font>

588
00:26:48,239 --> 00:26:52,859
can't read her

589
00:26:49,259 --> 00:26:55,229
I can't<font color="#E5E5E5"> supply</font><font color="#CCCCCC"> the correct secret during</font>

590
00:26:52,859 --> 00:27:00,539
<font color="#E5E5E5">token redemption or sorry token request</font>

591
00:26:55,229 --> 00:27:02,879
<font color="#E5E5E5">and therefore won't be able</font><font color="#CCCCCC"> to convert</font>

592
00:27:00,539 --> 00:27:06,109
an accessed<font color="#E5E5E5"> sorry an authorization code</font>

593
00:27:02,879 --> 00:27:12,029
into an access<font color="#CCCCCC"> token and</font><font color="#E5E5E5"> a refresh token</font>

594
00:27:06,109 --> 00:27:14,428
so just as a summary for<font color="#CCCCCC"> on native apps</font>

595
00:27:12,029 --> 00:27:16,919
<font color="#E5E5E5">the clients must use</font><font color="#CCCCCC"> pke and the</font>

596
00:27:14,429 --> 00:27:19,529
authorization<font color="#CCCCCC"> server must require pke</font>

597
00:27:16,919 --> 00:27:21,599
<font color="#E5E5E5">for public clients and perform the</font>

598
00:27:19,529 --> 00:27:28,769
appropriate validation<font color="#E5E5E5"> during the token</font>

599
00:27:21,599 --> 00:27:31,379
<font color="#E5E5E5">request for redirect</font><font color="#CCCCCC"> URIs in general the</font>

600
00:27:28,769 --> 00:27:32,999
client<font color="#E5E5E5"> must register a full</font><font color="#CCCCCC"> euro with</font>

601
00:27:31,379 --> 00:27:35,658
the authorization<font color="#CCCCCC"> server</font><font color="#E5E5E5"> there's a</font>

602
00:27:32,999 --> 00:27:38,729
previous<font color="#E5E5E5"> talk the phrase</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> I did I</font>

603
00:27:35,659 --> 00:27:40,320
will<font color="#E5E5E5"> native for web and we</font><font color="#CCCCCC"> talk about</font>

604
00:27:38,729 --> 00:27:42,239
that a lot more but<font color="#E5E5E5"> if you don't have a</font>

605
00:27:40,320 --> 00:27:44,489
prerequisite of your eye<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> got a</font>

606
00:27:42,239 --> 00:27:47,460
similar<font color="#CCCCCC"> problem the</font><font color="#E5E5E5"> the authorization</font>

607
00:27:44,489 --> 00:27:50,249
codes can<font color="#CCCCCC"> be redirected anywhere for</font>

608
00:27:47,460 --> 00:27:53,129
<font color="#E5E5E5">implicit things are much more</font>

609
00:27:50,249 --> 00:27:55,859
<font color="#CCCCCC">constrained so the only way</font><font color="#E5E5E5"> to use the</font>

610
00:27:53,129 --> 00:27:59,369
implicit grant<font color="#E5E5E5"> correctly or securely is</font>

611
00:27:55,859 --> 00:28:01,859
to use claims your<font color="#CCCCCC"> I therefore the</font>

612
00:27:59,369 --> 00:28:05,099
redirect URI and ensure that<font color="#CCCCCC"> the client</font>

613
00:28:01,859 --> 00:28:07,830
<font color="#CCCCCC">has proven ownership of that URI because</font>

614
00:28:05,099 --> 00:28:12,418
again otherwise<font color="#CCCCCC"> any other client will be</font>

615
00:28:07,830 --> 00:28:17,039
<font color="#E5E5E5">able to register the claim claim</font><font color="#CCCCCC"> euro</font>

616
00:28:12,419 --> 00:28:21,239
and the same rules for generally for

617
00:28:17,039 --> 00:28:23,908
implicit<font color="#E5E5E5"> apply in that it must register</font>

618
00:28:21,239 --> 00:28:26,190
a full register a full redirect URI

619
00:28:23,909 --> 00:28:32,099
would be with<font color="#E5E5E5"> us with the</font><font color="#CCCCCC"> authorization</font>

620
00:28:26,190 --> 00:28:36,119
<font color="#CCCCCC">server so</font><font color="#E5E5E5"> moving on to the the most</font>

621
00:28:32,099 --> 00:28:38,519
vulnerable<font color="#E5E5E5"> T this is this is using using</font>

622
00:28:36,119 --> 00:28:41,849
embedded<font color="#E5E5E5"> browser within your your native</font>

623
00:28:38,519 --> 00:28:45,149
app so up till now<font color="#CCCCCC"> all of</font><font color="#E5E5E5"> our examples</font>

624
00:28:41,849 --> 00:28:46,019
<font color="#E5E5E5">have shown the client using the the</font>

625
00:28:45,149 --> 00:28:49,870
system<font color="#CCCCCC"> browser</font>

626
00:28:46,019 --> 00:28:52,150
however if you just<font color="#E5E5E5"> if</font><font color="#CCCCCC"> you decide to use</font>

627
00:28:49,870 --> 00:28:56,830
<font color="#E5E5E5">well for you or malicious decides to</font>

628
00:28:52,150 --> 00:29:00,179
using webview<font color="#E5E5E5"> then the</font><font color="#CCCCCC"> browser part and</font>

629
00:28:56,830 --> 00:29:03,428
the client are part of the same process

630
00:29:00,179 --> 00:29:06,279
<font color="#CCCCCC">so at</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> point the client</font><font color="#E5E5E5"> site is able</font>

631
00:29:03,429 --> 00:29:08,320
to<font color="#E5E5E5"> interact with the webview</font><font color="#CCCCCC"> so access</font>

632
00:29:06,279 --> 00:29:09,940
information that's passed and interact

633
00:29:08,320 --> 00:29:12,399
with<font color="#CCCCCC"> all</font><font color="#E5E5E5"> the pages so it can still</font>

634
00:29:09,940 --> 00:29:15,039
<font color="#CCCCCC">Ukraine shut this gap sorry it can steal</font>

635
00:29:12,400 --> 00:29:18,330
your credentials<font color="#E5E5E5"> and it can do things</font>

636
00:29:15,039 --> 00:29:20,770
like automatically<font color="#E5E5E5"> authorize</font>

637
00:29:18,330 --> 00:29:23,559
automatically authorized<font color="#CCCCCC"> user are you</font>

638
00:29:20,770 --> 00:29:25,960
seeing the authorization dialogue<font color="#CCCCCC"> it</font>

639
00:29:23,559 --> 00:29:28,899
will just it<font color="#E5E5E5"> will just click on</font><font color="#CCCCCC"> here</font>

640
00:29:25,960 --> 00:29:32,140
what's must be for you in terms<font color="#E5E5E5"> of what</font>

641
00:29:28,899 --> 00:29:34,959
<font color="#CCCCCC">that looks like so here we have bad male</font>

642
00:29:32,140 --> 00:29:37,659
robot<font color="#CCCCCC"> we have we have the client</font><font color="#E5E5E5"> app</font>

643
00:29:34,960 --> 00:29:41,080
part and we<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> webview but they're</font>

644
00:29:37,659 --> 00:29:43,419
both within the<font color="#CCCCCC"> same process so the</font>

645
00:29:41,080 --> 00:29:46,408
client starts an authorization<font color="#CCCCCC"> request</font>

646
00:29:43,419 --> 00:29:50,010
and that that goes to<font color="#E5E5E5"> the webview</font>

647
00:29:46,409 --> 00:29:53,740
<font color="#E5E5E5">webview them requests the login page and</font>

648
00:29:50,010 --> 00:29:56,379
then the user enters their username<font color="#CCCCCC"> and</font>

649
00:29:53,740 --> 00:29:59,409
<font color="#CCCCCC">password here and in webview</font><font color="#E5E5E5"> they go to</font>

650
00:29:56,380 --> 00:30:01,899
the<font color="#E5E5E5"> authorization server but also they</font>

651
00:29:59,409 --> 00:30:06,130
<font color="#E5E5E5">get recorded</font><font color="#CCCCCC"> by the client app and then</font>

652
00:30:01,899 --> 00:30:08,289
the authorization server returns the

653
00:30:06,130 --> 00:30:11,549
authorization page but rather<font color="#E5E5E5"> than being</font>

654
00:30:08,289 --> 00:30:15,850
displayed to<font color="#CCCCCC"> the user</font><font color="#E5E5E5"> it's automatically</font>

655
00:30:11,549 --> 00:30:19,049
posted by the by the client app and at

656
00:30:15,850 --> 00:30:23,799
that point<font color="#E5E5E5"> we just move into a standard</font>

657
00:30:19,049 --> 00:30:25,418
authorization code flow so<font color="#E5E5E5"> freezers</font><font color="#CCCCCC"> can</font>

658
00:30:23,799 --> 00:30:33,668
<font color="#CCCCCC">I</font><font color="#E5E5E5"> show you what</font><font color="#CCCCCC"> that looks like in</font>

659
00:30:25,419 --> 00:30:36,730
practice<font color="#E5E5E5"> so in this example ham user has</font>

660
00:30:33,669 --> 00:30:38,529
<font color="#E5E5E5">been</font><font color="#CCCCCC"> posting to installing</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> robot up</font>

661
00:30:36,730 --> 00:30:40,659
with it<font color="#E5E5E5"> installed</font><font color="#CCCCCC"> accident</font><font color="#E5E5E5"> and they're</font>

662
00:30:38,529 --> 00:30:44,200
gonna follow the standards has standard

663
00:30:40,659 --> 00:30:47,320
flow so the<font color="#E5E5E5"> request and to</font><font color="#CCCCCC"> connect a</font><font color="#E5E5E5"> web</font>

664
00:30:44,200 --> 00:30:48,549
<font color="#E5E5E5">mail and notice these parameters are</font>

665
00:30:47,320 --> 00:30:49,928
identical to the ones that<font color="#CCCCCC"> was hanging</font>

666
00:30:48,549 --> 00:30:51,879
in the secure<font color="#CCCCCC"> case so it's like it's</font>

667
00:30:49,929 --> 00:30:54,279
spoofing the<font color="#CCCCCC"> schema our robots client ID</font>

668
00:30:51,880 --> 00:30:57,340
and redirect URI<font color="#E5E5E5"> and it's sending</font><font color="#CCCCCC"> all</font>

669
00:30:54,279 --> 00:31:01,450
<font color="#E5E5E5">valid state information</font><font color="#CCCCCC"> so I would</font><font color="#E5E5E5"> pkcs</font>

670
00:30:57,340 --> 00:31:03,399
in there well I guess redirect and you

671
00:31:01,450 --> 00:31:05,499
know<font color="#E5E5E5"> that doesn't go off to the you know</font>

672
00:31:03,399 --> 00:31:10,408
browser it stays inside<font color="#CCCCCC"> bad mail robot</font>

673
00:31:05,499 --> 00:31:10,409
process<font color="#CCCCCC"> user signs him</font>

674
00:31:11,190 --> 00:31:16,029
yeah<font color="#CCCCCC"> prompt that to me</font><font color="#E5E5E5"> operating system</font>

675
00:31:14,320 --> 00:31:18,189
<font color="#CCCCCC">so</font><font color="#E5E5E5"> the clients and installing it and</font>

676
00:31:16,029 --> 00:31:23,019
that the authorization<font color="#E5E5E5"> was automatically</font>

677
00:31:18,190 --> 00:31:24,789
advanced<font color="#CCCCCC"> without me doing anything again</font>

678
00:31:23,019 --> 00:31:27,039
<font color="#E5E5E5">so in that send that off the North code</font>

679
00:31:24,789 --> 00:31:29,729
off to the<font color="#E5E5E5"> authorization server</font><font color="#CCCCCC"> and with</font>

680
00:31:27,039 --> 00:31:29,729
a<font color="#E5E5E5"> ballad</font><font color="#CCCCCC"> pkc</font>

681
00:31:31,710 --> 00:31:37,149
and we get<font color="#E5E5E5"> access tokens a refresh token</font>

682
00:31:34,119 --> 00:31:38,738
back so if those and<font color="#CCCCCC"> their battle male</font>

683
00:31:37,149 --> 00:31:41,018
<font color="#E5E5E5">robot is</font><font color="#CCCCCC"> going to be associated</font><font color="#E5E5E5"> up to</font>

684
00:31:38,739 --> 00:31:44,320
the user<font color="#E5E5E5"> or</font><font color="#CCCCCC"> webmail that comes account</font>

685
00:31:41,019 --> 00:31:45,369
and as<font color="#CCCCCC"> I</font><font color="#E5E5E5"> existed arena and then</font><font color="#CCCCCC"> can</font>

686
00:31:44,320 --> 00:31:55,119
we're going<font color="#E5E5E5"> to cook medication with a</font>

687
00:31:45,369 --> 00:31:56,769
set okay so the mitigation for this one

688
00:31:55,119 --> 00:32:01,178
is fairly straightforward<font color="#E5E5E5"> it's where</font>

689
00:31:56,769 --> 00:32:03,219
possible use the the system<font color="#CCCCCC"> browser but</font>

690
00:32:01,179 --> 00:32:06,999
because actually the root cause of this

691
00:32:03,219 --> 00:32:09,429
is malicious<font color="#E5E5E5"> apps you're unlikely this</font>

692
00:32:06,999 --> 00:32:11,200
this<font color="#E5E5E5"> particular mitigation probably</font>

693
00:32:09,429 --> 00:32:14,529
won't work<font color="#E5E5E5"> so you end up having</font><font color="#CCCCCC"> to fall</font>

694
00:32:11,200 --> 00:32:20,169
back or user education<font color="#E5E5E5"> so ensuring that</font>

695
00:32:14,529 --> 00:32:22,419
they only install trusted apps it may be

696
00:32:20,169 --> 00:32:24,489
possible<font color="#E5E5E5"> to educate users as to the</font>

697
00:32:22,419 --> 00:32:27,580
difference between<font color="#E5E5E5"> a</font><font color="#CCCCCC"> webview and a</font>

698
00:32:24,489 --> 00:32:30,519
system browser but it's quite subtle so

699
00:32:27,580 --> 00:32:34,799
not really sure how how<font color="#E5E5E5"> that one would</font>

700
00:32:30,519 --> 00:32:39,519
work so now we're going to<font color="#E5E5E5"> move on to</font>

701
00:32:34,799 --> 00:32:42,369
cross cross<font color="#E5E5E5"> request forgery</font><font color="#CCCCCC"> very similar</font>

702
00:32:39,519 --> 00:32:45,330
<font color="#E5E5E5">to cross-site request forgery but this</font>

703
00:32:42,369 --> 00:32:52,109
time in<font color="#CCCCCC"> the working in the context of</font>

704
00:32:45,330 --> 00:32:54,879
native native apps so the<font color="#E5E5E5"> interior with</font>

705
00:32:52,109 --> 00:32:59,580
<font color="#E5E5E5">cross-site request forgery is an</font>

706
00:32:54,879 --> 00:33:03,759
attacker gets a an authorization code

707
00:32:59,580 --> 00:33:05,529
<font color="#CCCCCC">from from connecting</font><font color="#E5E5E5"> to the</font>

708
00:33:03,759 --> 00:33:07,839
authorization<font color="#CCCCCC"> server so they look the</font>

709
00:33:05,529 --> 00:33:10,450
attacker logs in using their account and

710
00:33:07,839 --> 00:33:14,229
then they capture the<font color="#E5E5E5"> authorization code</font>

711
00:33:10,450 --> 00:33:16,600
<font color="#CCCCCC">and then they send the authorization</font>

712
00:33:14,229 --> 00:33:20,680
code<font color="#CCCCCC"> direct to the client</font>

713
00:33:16,600 --> 00:33:27,310
using the redirect URI as<font color="#CCCCCC"> as</font><font color="#E5E5E5"> shown here</font>

714
00:33:20,680 --> 00:33:32,470
<font color="#CCCCCC">so what this</font><font color="#E5E5E5"> allows the attacker to do</font>

715
00:33:27,310 --> 00:33:34,990
is to connect their their session - oh

716
00:33:32,470 --> 00:33:37,090
sorry their account on the client<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

717
00:33:34,990 --> 00:33:41,230
<font color="#CCCCCC">user's session</font><font color="#E5E5E5"> so if you if you had</font>

718
00:33:37,090 --> 00:33:41,980
already<font color="#E5E5E5"> logged into mail robot and an</font>

719
00:33:41,230 --> 00:33:45,430
<font color="#CCCCCC">attacker</font>

720
00:33:41,980 --> 00:33:47,230
<font color="#E5E5E5">formed this attack on you</font><font color="#CCCCCC"> it would then</font>

721
00:33:45,430 --> 00:33:51,010
switch<font color="#CCCCCC"> the account that</font><font color="#E5E5E5"> you were using</font>

722
00:33:47,230 --> 00:33:56,260
<font color="#E5E5E5">from your account to the attackers the</font>

723
00:33:51,010 --> 00:33:58,000
idea being if with the mail robot<font color="#E5E5E5"> it</font>

724
00:33:56,260 --> 00:34:02,320
could the attacker could then monitor

725
00:33:58,000 --> 00:34:06,310
maybe the your usage of<font color="#E5E5E5"> the api's or the</font>

726
00:34:02,320 --> 00:34:08,230
mail that you<font color="#CCCCCC"> were</font><font color="#E5E5E5"> sending as as per</font>

727
00:34:06,310 --> 00:34:10,960
cross-site request forgery<font color="#CCCCCC"> there are</font>

728
00:34:08,230 --> 00:34:13,840
different ways<font color="#CCCCCC"> that you can</font><font color="#E5E5E5"> perform this</font>

729
00:34:10,960 --> 00:34:17,470
attack<font color="#E5E5E5"> so URL and a phishing email</font><font color="#CCCCCC"> URL</font>

730
00:34:13,840 --> 00:34:21,250
and a<font color="#CCCCCC"> webpage or if you have a malicious</font>

731
00:34:17,469 --> 00:34:23,919
<font color="#E5E5E5">app on the almost on your mobile and</font>

732
00:34:21,250 --> 00:34:28,150
could<font color="#E5E5E5"> just perform as a direct direct</font>

733
00:34:23,920 --> 00:34:31,780
IPC<font color="#CCCCCC"> call in terms</font><font color="#E5E5E5"> of what that looks</font>

734
00:34:28,150 --> 00:34:39,150
like<font color="#E5E5E5"> so your client app has has already</font>

735
00:34:31,780 --> 00:34:41,320
<font color="#CCCCCC">performed full</font><font color="#E5E5E5"> o flow here the attacker</font>

736
00:34:39,150 --> 00:34:43,810
<font color="#CCCCCC">connects to the authorization server</font>

737
00:34:41,320 --> 00:34:46,930
<font color="#E5E5E5">they authenticate and authorize for</font>

738
00:34:43,810 --> 00:34:51,670
their account<font color="#CCCCCC"> but Rob</font><font color="#E5E5E5"> redeeming the code</font>

739
00:34:46,929 --> 00:34:53,739
for tokens<font color="#E5E5E5"> they send that code to the</font>

740
00:34:51,670 --> 00:34:56,080
client application<font color="#CCCCCC"> the client</font>

741
00:34:53,739 --> 00:34:58,540
application then gets the<font color="#E5E5E5"> code and goes</font>

742
00:34:56,080 --> 00:35:02,410
I've<font color="#CCCCCC"> got a new authorization code and</font>

743
00:34:58,540 --> 00:35:06,009
swaps that for access tokens<font color="#E5E5E5"> and refresh</font>

744
00:35:02,410 --> 00:35:08,170
tokens<font color="#E5E5E5"> and then start using the access</font>

745
00:35:06,010 --> 00:35:12,250
token of a<font color="#E5E5E5"> refresh token</font><font color="#CCCCCC"> that belong to</font>

746
00:35:08,170 --> 00:35:21,820
the attackers account<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> for is</font>

747
00:35:12,250 --> 00:35:23,860
<font color="#E5E5E5">going to demo what that looks like so</font><font color="#CCCCCC"> in</font>

748
00:35:21,820 --> 00:35:26,890
this one<font color="#E5E5E5"> and the attacks start off by</font>

749
00:35:23,860 --> 00:35:29,650
present<font color="#CCCCCC"> even the the web version of</font><font color="#E5E5E5"> the</font>

750
00:35:26,890 --> 00:35:31,359
<font color="#CCCCCC">web my authentication authorization</font>

751
00:35:29,650 --> 00:35:38,350
<font color="#E5E5E5">Crump's and then something with their</font>

752
00:35:31,360 --> 00:35:41,680
own religions and then the authorized

753
00:35:38,350 --> 00:35:43,000
access<font color="#CCCCCC"> to their own account</font><font color="#E5E5E5"> and in</font>

754
00:35:41,680 --> 00:35:44,890
response they get back an authorization

755
00:35:43,000 --> 00:35:48,840
code which they can go<font color="#E5E5E5"> and embed in</font>

756
00:35:44,890 --> 00:35:51,339
<font color="#E5E5E5">their own website so this URL here</font><font color="#CCCCCC"> it's</font>

757
00:35:48,840 --> 00:35:53,430
is<font color="#CCCCCC"> rewriting practice here in skill</font><font color="#E5E5E5"> mail</font>

758
00:35:51,340 --> 00:36:01,510
robot with<font color="#CCCCCC"> the LS code that they've just</font>

759
00:35:53,430 --> 00:36:04,839
generated so now using<font color="#E5E5E5"> some fishing</font>

760
00:36:01,510 --> 00:36:06,670
method or<font color="#E5E5E5"> managed together</font><font color="#CCCCCC"> the the</font>

761
00:36:04,840 --> 00:36:09,340
<font color="#CCCCCC">victim to visit this website and they</font>

762
00:36:06,670 --> 00:36:11,920
click<font color="#CCCCCC"> a link this automatically invokes</font>

763
00:36:09,340 --> 00:36:13,390
<font color="#E5E5E5">in secure mail robot which will rush to</font>

764
00:36:11,920 --> 00:36:23,530
commit process<font color="#E5E5E5"> the</font><font color="#CCCCCC"> earth code</font><font color="#E5E5E5"> and</font>

765
00:36:13,390 --> 00:36:25,180
<font color="#CCCCCC">exchange it for</font><font color="#E5E5E5"> an access token and</font><font color="#CCCCCC"> then</font>

766
00:36:23,530 --> 00:36:27,850
once<font color="#CCCCCC"> it's got</font><font color="#E5E5E5"> that access token is going</font>

767
00:36:25,180 --> 00:36:30,250
to automatically<font color="#CCCCCC"> seminar and access the</font>

768
00:36:27,850 --> 00:36:31,630
resource<font color="#E5E5E5"> service</font><font color="#CCCCCC"> api s-- and because</font>

769
00:36:30,250 --> 00:36:33,640
this<font color="#CCCCCC"> is an</font><font color="#E5E5E5"> access token that belongs to</font>

770
00:36:31,630 --> 00:36:35,650
the attacker or FC signed into<font color="#E5E5E5"> the</font>

771
00:36:33,640 --> 00:36:37,330
<font color="#E5E5E5">attackers account now so we have access</font>

772
00:36:35,650 --> 00:36:38,680
<font color="#CCCCCC">to their mailbox but anything</font><font color="#E5E5E5"> that we</font>

773
00:36:37,330 --> 00:36:40,660
send is also going to go<font color="#E5E5E5"> to their</font>

774
00:36:38,680 --> 00:36:42,129
account<font color="#CCCCCC"> so if they were to go to the web</font>

775
00:36:40,660 --> 00:36:44,170
position of<font color="#E5E5E5"> webmail and</font><font color="#CCCCCC"> login they'd see</font>

776
00:36:42,130 --> 00:36:47,170
everything we were<font color="#E5E5E5"> sending their mates</font>

777
00:36:44,170 --> 00:36:55,440
in descending again<font color="#E5E5E5"> you look at the</font>

778
00:36:47,170 --> 00:36:59,050
medications<font color="#E5E5E5"> that's all so very much like</font>

779
00:36:55,440 --> 00:37:01,690
the mitigation for cross over cross site

780
00:36:59,050 --> 00:37:04,260
request forgeries<font color="#E5E5E5"> the mitigation for</font>

781
00:37:01,690 --> 00:37:07,480
cross application request forgeries is a

782
00:37:04,260 --> 00:37:11,410
value<font color="#E5E5E5"> that the client the client</font><font color="#CCCCCC"> knows</font>

783
00:37:07,480 --> 00:37:15,970
so specifically<font color="#E5E5E5"> the state parameter so</font>

784
00:37:11,410 --> 00:37:17,500
<font color="#CCCCCC">we on the</font><font color="#E5E5E5"> authorization request the the</font>

785
00:37:15,970 --> 00:37:21,009
client<font color="#CCCCCC"> now adds the state parameter</font>

786
00:37:17,500 --> 00:37:23,890
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is around the values</font><font color="#E5E5E5"> to to the</font>

787
00:37:21,010 --> 00:37:25,630
redirect to your<font color="#E5E5E5"> right this thing goes</font>

788
00:37:23,890 --> 00:37:28,109
from the client<font color="#CCCCCC"> to the system browser</font>

789
00:37:25,630 --> 00:37:33,970
and then on to<font color="#CCCCCC"> the authorization</font>

790
00:37:28,110 --> 00:37:37,600
<font color="#E5E5E5">authorization server and once the client</font>

791
00:37:33,970 --> 00:37:40,450
has<font color="#CCCCCC"> been authenticated and authorized</font>

792
00:37:37,600 --> 00:37:42,200
the<font color="#E5E5E5"> authorization</font><font color="#CCCCCC"> server returns the</font>

793
00:37:40,450 --> 00:37:43,970
redirect URI

794
00:37:42,200 --> 00:37:47,000
to upend the state<font color="#CCCCCC"> parameter that</font><font color="#E5E5E5"> was</font>

795
00:37:43,970 --> 00:37:48,950
previously provided<font color="#E5E5E5"> to the redirect URI</font>

796
00:37:47,000 --> 00:37:50,780
<font color="#E5E5E5">this goes then back from the</font>

797
00:37:48,950 --> 00:37:52,790
authorization<font color="#CCCCCC"> server to the browser</font><font color="#E5E5E5"> and</font>

798
00:37:50,780 --> 00:37:54,440
to the<font color="#E5E5E5"> client and at that point the</font>

799
00:37:52,790 --> 00:38:01,180
client combined the authorization

800
00:37:54,440 --> 00:38:05,420
request to the<font color="#CCCCCC"> authorization response so</font>

801
00:38:01,180 --> 00:38:09,430
<font color="#E5E5E5">the other bouncing back briefly the</font>

802
00:38:05,420 --> 00:38:13,310
<font color="#CCCCCC">other the other thing to note is the pke</font>

803
00:38:09,430 --> 00:38:18,078
<font color="#E5E5E5">does and indirectly prevent this this</font>

804
00:38:13,310 --> 00:38:21,410
attack as well<font color="#CCCCCC"> where where the client</font>

805
00:38:18,079 --> 00:38:23,440
<font color="#E5E5E5">sends the the hash the hash of the</font>

806
00:38:21,410 --> 00:38:29,089
secret in the authorization<font color="#CCCCCC"> request</font>

807
00:38:23,440 --> 00:38:31,339
<font color="#E5E5E5">because when it when</font><font color="#CCCCCC"> it when the client</font>

808
00:38:29,089 --> 00:38:34,940
then comes<font color="#E5E5E5"> to redeem the authorization</font>

809
00:38:31,339 --> 00:38:37,700
code<font color="#E5E5E5"> if the the authorization code has</font>

810
00:38:34,940 --> 00:38:39,710
<font color="#CCCCCC">been provided by by the attacker</font><font color="#E5E5E5"> there</font>

811
00:38:37,700 --> 00:38:42,078
is no way<font color="#CCCCCC"> that the client will know the</font>

812
00:38:39,710 --> 00:38:44,810
the<font color="#E5E5E5"> correct secret so the redemption of</font>

813
00:38:42,079 --> 00:38:49,069
<font color="#E5E5E5">the authorization</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> during the token</font>

814
00:38:44,810 --> 00:38:51,170
request will will fail for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> implicit</font>

815
00:38:49,069 --> 00:38:59,800
grant though you are completely<font color="#E5E5E5"> reliant</font>

816
00:38:51,170 --> 00:39:02,329
on<font color="#CCCCCC"> our state so just in in summary the</font>

817
00:38:59,800 --> 00:39:04,579
authorization sorry the client must

818
00:39:02,329 --> 00:39:06,890
include a state parameters in the

819
00:39:04,579 --> 00:39:08,839
redirect<font color="#E5E5E5"> URI and the authorization</font>

820
00:39:06,890 --> 00:39:11,569
<font color="#CCCCCC">server must return that state parameter</font>

821
00:39:08,839 --> 00:39:15,740
<font color="#CCCCCC">and then the client the client must</font>

822
00:39:11,569 --> 00:39:18,740
validate that they match<font color="#E5E5E5"> for as I</font>

823
00:39:15,740 --> 00:39:21,290
previously mentioned<font color="#CCCCCC"> pkc</font><font color="#E5E5E5"> will also</font>

824
00:39:18,740 --> 00:39:25,578
prevent this for on the authorization

825
00:39:21,290 --> 00:39:27,109
<font color="#CCCCCC">code</font><font color="#E5E5E5"> grant the other the other thing</font>

826
00:39:25,579 --> 00:39:29,810
<font color="#CCCCCC">that a</font><font color="#E5E5E5"> client can do to partially</font>

827
00:39:27,109 --> 00:39:32,690
mitigate this is to not accept

828
00:39:29,810 --> 00:39:35,810
unsolicited<font color="#E5E5E5"> authorization codes or</font>

829
00:39:32,690 --> 00:39:38,540
access codes<font color="#CCCCCC"> while it won't mitigate it</font>

830
00:39:35,810 --> 00:39:40,970
completely it reduces the window<font color="#E5E5E5"> so it's</font>

831
00:39:38,540 --> 00:39:44,329
it<font color="#CCCCCC"> becomes that erase can</font><font color="#E5E5E5"> erase between</font>

832
00:39:40,970 --> 00:39:45,828
the attacker<font color="#E5E5E5"> and the user whenever</font>

833
00:39:44,329 --> 00:39:52,490
they're performing an authorization

834
00:39:45,829 --> 00:39:55,910
<font color="#CCCCCC">request so we've we've looked at three</font>

835
00:39:52,490 --> 00:39:58,609
<font color="#E5E5E5">of the more tricky</font>

836
00:39:55,910 --> 00:40:01,250
complicated vulnerabilities within with

837
00:39:58,609 --> 00:40:06,859
<font color="#CCCCCC">an OAuth there's actually a full threat</font>

838
00:40:01,250 --> 00:40:10,190
model for<font color="#E5E5E5"> a</font><font color="#CCCCCC"> wolf</font><font color="#E5E5E5"> on web which is RF RFC</font>

839
00:40:06,859 --> 00:40:12,049
681 nine<font color="#E5E5E5"> within their the threat model</font>

840
00:40:10,190 --> 00:40:15,500
<font color="#E5E5E5">has 50</font><font color="#CCCCCC"> different threats</font><font color="#E5E5E5"> and</font>

841
00:40:12,049 --> 00:40:18,259
countermeasures<font color="#E5E5E5"> and</font><font color="#CCCCCC"> their section 5</font>

842
00:40:15,500 --> 00:40:19,880
which is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> security considerations</font><font color="#E5E5E5"> has</font>

843
00:40:18,260 --> 00:40:25,520
a lot<font color="#E5E5E5"> of detailed detailed</font>

844
00:40:19,880 --> 00:40:28,160
countermeasures<font color="#CCCCCC"> the next RFC is</font><font color="#E5E5E5"> 8 to 5</font><font color="#CCCCCC"> -</font>

845
00:40:25,520 --> 00:40:31,369
which is o of<font color="#E5E5E5"> T for native apps and in</font>

846
00:40:28,160 --> 00:40:33,348
there<font color="#E5E5E5"> they go bad an additional 12</font>

847
00:40:31,369 --> 00:40:37,579
specific security considerations to

848
00:40:33,349 --> 00:40:39,109
think<font color="#E5E5E5"> about for for native</font><font color="#CCCCCC"> so the</font><font color="#E5E5E5"> next</font>

849
00:40:37,579 --> 00:40:40,700
<font color="#E5E5E5">couple of</font><font color="#CCCCCC"> slides just to give</font><font color="#E5E5E5"> you a</font>

850
00:40:39,109 --> 00:40:44,630
<font color="#E5E5E5">point there of some of the other things</font>

851
00:40:40,700 --> 00:40:48,020
to think<font color="#E5E5E5"> about with OAuth so if you're</font>

852
00:40:44,630 --> 00:40:50,329
using if you're<font color="#E5E5E5"> using OAuth on Windows</font>

853
00:40:48,020 --> 00:40:52,400
or Mac they don't have the concept<font color="#E5E5E5"> to</font>

854
00:40:50,329 --> 00:40:56,020
claims your eyes or system your eyes so

855
00:40:52,400 --> 00:41:01,369
you have to use the<font color="#CCCCCC"> loopback device and</font>

856
00:40:56,020 --> 00:41:03,549
there's this is complicated<font color="#CCCCCC"> our</font><font color="#E5E5E5"> author</font>

857
00:41:01,369 --> 00:41:06,289
is actually<font color="#CCCCCC"> an authorization protocol</font>

858
00:41:03,549 --> 00:41:09,259
although it's been co-opted to<font color="#E5E5E5"> be turned</font>

859
00:41:06,289 --> 00:41:11,569
into a user of a user authentication

860
00:41:09,260 --> 00:41:14,089
protocol<font color="#CCCCCC"> if you're not</font><font color="#E5E5E5"> very careful</font>

861
00:41:11,569 --> 00:41:16,549
<font color="#CCCCCC">about how you bought the binding between</font>

862
00:41:14,089 --> 00:41:20,538
access token and<font color="#E5E5E5"> the client it's quite</font>

863
00:41:16,549 --> 00:41:22,900
easy to to fake or to end up being

864
00:41:20,539 --> 00:41:25,940
authenticated<font color="#E5E5E5"> as a different user</font>

865
00:41:22,900 --> 00:41:29,210
there's all the classic issues with

866
00:41:25,940 --> 00:41:32,380
authorization<font color="#CCCCCC"> such as</font><font color="#E5E5E5"> asking</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> - my</font>

867
00:41:29,210 --> 00:41:36,020
client<font color="#E5E5E5"> asking for too much access and</font>

868
00:41:32,380 --> 00:41:40,430
<font color="#CCCCCC">some</font><font color="#E5E5E5"> homograph attacks there was one two</font>

869
00:41:36,020 --> 00:41:45,339
or<font color="#E5E5E5"> three years ago</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> Google</font><font color="#CCCCCC"> that made</font>

870
00:41:40,430 --> 00:41:49,190
the made the<font color="#CCCCCC"> headlines in terms of</font>

871
00:41:45,339 --> 00:41:51,190
client credentials<font color="#E5E5E5"> as with any anything</font>

872
00:41:49,190 --> 00:41:54,099
that's<font color="#E5E5E5"> the</font><font color="#CCCCCC"> password storage of them is</font>

873
00:41:51,190 --> 00:41:58,039
it's a problem<font color="#E5E5E5"> token generation</font>

874
00:41:54,099 --> 00:42:00,289
<font color="#CCCCCC">obviously the access tokens and</font><font color="#E5E5E5"> refresh</font>

875
00:41:58,039 --> 00:42:02,299
tokens and authorization tokens<font color="#E5E5E5"> need to</font>

876
00:42:00,289 --> 00:42:04,220
be not need to be sufficiently<font color="#CCCCCC"> large and</font>

877
00:42:02,299 --> 00:42:07,160
cryptographically strong so they're not

878
00:42:04,220 --> 00:42:08,189
they're not guessable also they're

879
00:42:07,160 --> 00:42:10,410
stored<font color="#E5E5E5"> now</font>

880
00:42:08,190 --> 00:42:13,050
they'll<font color="#E5E5E5"> need to be stored essentially in</font>

881
00:42:10,410 --> 00:42:14,848
the<font color="#CCCCCC"> authorization server</font><font color="#E5E5E5"> again for</font>

882
00:42:13,050 --> 00:42:17,010
things like<font color="#E5E5E5"> the</font><font color="#CCCCCC"> refresh tokens these are</font>

883
00:42:14,849 --> 00:42:19,890
equivalent<font color="#CCCCCC"> to long left passwords so you</font>

884
00:42:17,010 --> 00:42:23,220
need to be mindful<font color="#E5E5E5"> about while storing</font>

885
00:42:19,890 --> 00:42:25,290
as during them in terms of transport all

886
00:42:23,220 --> 00:42:27,629
the all the RFC<font color="#CCCCCC"> is recommend T's</font><font color="#E5E5E5"> TLS</font>

887
00:42:25,290 --> 00:42:29,880
<font color="#CCCCCC">obviously if you don't you can have fun</font>

888
00:42:27,630 --> 00:42:33,119
<font color="#CCCCCC">and steal them using a</font><font color="#E5E5E5"> variety of</font>

889
00:42:29,880 --> 00:42:37,230
<font color="#E5E5E5">network attacks in terms of some</font><font color="#CCCCCC"> of the</font>

890
00:42:33,119 --> 00:42:39,480
<font color="#CCCCCC">mitigation so</font><font color="#E5E5E5"> if you're doing anything</font>

891
00:42:37,230 --> 00:42:41,099
<font color="#E5E5E5">to do with Windows Mac on native apps is</font>

892
00:42:39,480 --> 00:42:42,740
best to read the RFC there's a lot of

893
00:42:41,099 --> 00:42:45,900
complexities<font color="#CCCCCC"> around the loopback device</font>

894
00:42:42,740 --> 00:42:51,209
user authentication<font color="#CCCCCC"> we covered this</font><font color="#E5E5E5"> in</font>

895
00:42:45,900 --> 00:42:52,710
detail in presentation<font color="#CCCCCC"> pieces leaks you</font>

896
00:42:51,210 --> 00:42:56,540
have to basically<font color="#E5E5E5"> ensure the active the</font>

897
00:42:52,710 --> 00:43:00,720
<font color="#E5E5E5">access token was issued to your client</font>

898
00:42:56,540 --> 00:43:04,589
<font color="#E5E5E5">on the authorization side of things it's</font>

899
00:43:00,720 --> 00:43:08,779
mostly<font color="#CCCCCC"> just</font><font color="#E5E5E5"> about providing a UI such</font>

900
00:43:04,589 --> 00:43:12,210
that the user can manage everything

901
00:43:08,780 --> 00:43:14,460
<font color="#CCCCCC">manage all of</font><font color="#E5E5E5"> their authorization so</font>

902
00:43:12,210 --> 00:43:17,730
notify users when you<font color="#E5E5E5"> ones happen etc</font>

903
00:43:14,460 --> 00:43:20,520
<font color="#E5E5E5">etc client credentials we talked about</font>

904
00:43:17,730 --> 00:43:23,510
they<font color="#CCCCCC"> should only</font><font color="#E5E5E5"> be issued to web</font>

905
00:43:20,520 --> 00:43:28,349
clients are<font color="#E5E5E5"> not native token generation</font>

906
00:43:23,510 --> 00:43:31,609
<font color="#CCCCCC">its standard stuff strong PRNG 128 bits</font>

907
00:43:28,349 --> 00:43:35,430
or greater in length<font color="#CCCCCC"> in</font><font color="#E5E5E5"> terms of storage</font>

908
00:43:31,609 --> 00:43:38,720
<font color="#CCCCCC">if you're using high entropy tokens you</font>

909
00:43:35,430 --> 00:43:42,140
can get away with just just<font color="#E5E5E5"> a single</font>

910
00:43:38,720 --> 00:43:46,259
<font color="#E5E5E5">sha-256 on them fine rather than using a</font>

911
00:43:42,140 --> 00:43:48,299
much larger more<font color="#CCCCCC"> complicated function</font>

912
00:43:46,260 --> 00:43:51,560
like a<font color="#E5E5E5"> script or bcrypt because they've</font>

913
00:43:48,300 --> 00:43:57,740
<font color="#E5E5E5">got a they've got a very high entropy</font>

914
00:43:51,560 --> 00:44:00,690
<font color="#E5E5E5">I'll skip</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> bit about token binding so</font>

915
00:43:57,740 --> 00:44:05,000
we talked a bit<font color="#CCCCCC"> about some of the tokens</font>

916
00:44:00,690 --> 00:44:07,109
about how how<font color="#E5E5E5"> often they should be used</font>

917
00:44:05,000 --> 00:44:07,349
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> or until</font><font color="#CCCCCC"> ears and</font><font color="#E5E5E5"> things like</font>

918
00:44:07,109 --> 00:44:10,710
that

919
00:44:07,349 --> 00:44:14,089
again<font color="#E5E5E5"> all considerations</font><font color="#CCCCCC"> that you do you</font>

920
00:44:10,710 --> 00:44:16,920
need to think<font color="#CCCCCC"> about if you're</font><font color="#E5E5E5"> running an</font>

921
00:44:14,089 --> 00:44:19,259
authorization server<font color="#E5E5E5"> the other thing</font>

922
00:44:16,920 --> 00:44:21,230
<font color="#CCCCCC">that the threat model talks a lot about</font>

923
00:44:19,260 --> 00:44:23,090
<font color="#E5E5E5">is monitoring</font>

924
00:44:21,230 --> 00:44:25,010
so there are<font color="#E5E5E5"> various</font><font color="#CCCCCC"> things that</font><font color="#E5E5E5"> if</font>

925
00:44:23,090 --> 00:44:28,040
you're running an authorization server

926
00:44:25,010 --> 00:44:32,030
you could spot<font color="#CCCCCC"> such as an authorization</font>

927
00:44:28,040 --> 00:44:34,430
code being<font color="#E5E5E5"> used twice or if particular</font>

928
00:44:32,030 --> 00:44:36,950
bindings<font color="#E5E5E5"> that you know should happen so</font>

929
00:44:34,430 --> 00:44:39,230
if an authorization code<font color="#E5E5E5"> issues by a</font>

930
00:44:36,950 --> 00:44:42,140
client that<font color="#E5E5E5"> shouldn't have access</font><font color="#CCCCCC"> to it</font>

931
00:44:39,230 --> 00:44:45,110
it means<font color="#E5E5E5"> something has gone wrong</font><font color="#CCCCCC"> so all</font>

932
00:44:42,140 --> 00:44:47,930
<font color="#E5E5E5">of these are in the you can monitor for</font>

933
00:44:45,110 --> 00:44:50,210
and<font color="#E5E5E5"> they're indicators there's been that</font>

934
00:44:47,930 --> 00:44:52,129
there's some compromise or something

935
00:44:50,210 --> 00:44:55,490
strange is happening within your your

936
00:44:52,130 --> 00:44:57,830
environment in terms of revocation

937
00:44:55,490 --> 00:45:00,080
revocation strategy this<font color="#CCCCCC"> is basically if</font>

938
00:44:57,830 --> 00:45:01,580
<font color="#E5E5E5">something goes wrong</font><font color="#CCCCCC"> how do</font><font color="#E5E5E5"> you deal</font>

939
00:45:00,080 --> 00:45:04,700
with<font color="#E5E5E5"> it so if an access token or a</font>

940
00:45:01,580 --> 00:45:06,049
refresh token<font color="#E5E5E5"> leak what is your well if</font>

941
00:45:04,700 --> 00:45:08,000
your mechanism<font color="#E5E5E5"> for dealing with that</font>

942
00:45:06,050 --> 00:45:10,780
<font color="#E5E5E5">have a client secret leaks</font><font color="#CCCCCC"> what if your</font>

943
00:45:08,000 --> 00:45:11,920
mechanism<font color="#E5E5E5"> for dealing with that and</font>

944
00:45:10,780 --> 00:45:17,720
[Music]

945
00:45:11,920 --> 00:45:19,910
finally<font color="#CCCCCC"> the mob is one use TLS there's a</font>

946
00:45:17,720 --> 00:45:24,490
<font color="#E5E5E5">couple of</font><font color="#CCCCCC"> pages of references I'll leave</font>

947
00:45:19,910 --> 00:45:27,470
them up<font color="#CCCCCC"> there for a few seconds I will</font>

948
00:45:24,490 --> 00:45:34,359
<font color="#CCCCCC">will try and put the slides up</font><font color="#E5E5E5"> and I</font>

949
00:45:27,470 --> 00:45:41,799
<font color="#E5E5E5">believe the videos will be up anyway</font><font color="#CCCCCC"> so</font>

950
00:45:34,360 --> 00:45:44,620
yeah and with<font color="#E5E5E5"> the exception</font><font color="#CCCCCC"> of one thing</font>

951
00:45:41,800 --> 00:45:48,290
so currently just<font color="#E5E5E5"> a very quick one</font>

952
00:45:44,620 --> 00:45:50,000
<font color="#CCCCCC">BlackBerry's Cranberry so security</font>

953
00:45:48,290 --> 00:45:52,160
researchers<font color="#E5E5E5"> Security Response section</font>

954
00:45:50,000 --> 00:45:55,370
<font color="#E5E5E5">ears program managers developers if</font>

955
00:45:52,160 --> 00:45:57,759
you're interested<font color="#E5E5E5"> come</font><font color="#CCCCCC"> join us and thank</font>

956
00:45:55,370 --> 00:45:57,759
you<font color="#E5E5E5"> very much</font>

957
00:46:01,689 --> 00:46:05,058
thank you very<font color="#E5E5E5"> much that</font><font color="#CCCCCC"> guy's is really</font>

958
00:46:04,039 --> 00:46:07,189
interesting

959
00:46:05,059 --> 00:46:10,939
do we have any questions<font color="#CCCCCC"> yes we do</font>

960
00:46:07,189 --> 00:46:13,189
problems come on Damon<font color="#E5E5E5"> follow these</font>

961
00:46:10,939 --> 00:46:15,649
stairs<font color="#CCCCCC"> you</font><font color="#E5E5E5"> got a shower</font><font color="#CCCCCC"> there but up</font>

962
00:46:13,189 --> 00:46:17,979
until we've got to use the mic<font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> the</font>

963
00:46:15,650 --> 00:46:21,279
<font color="#CCCCCC">kids</font><font color="#E5E5E5"> just run a little</font><font color="#CCCCCC"> like an idea just</font>

964
00:46:17,979 --> 00:46:25,629
<font color="#CCCCCC">a quick question on</font><font color="#E5E5E5"> the redirect URI</font>

965
00:46:21,279 --> 00:46:27,799
<font color="#E5E5E5">attack</font><font color="#CCCCCC"> I didn't</font><font color="#E5E5E5"> really get how the</font>

966
00:46:25,630 --> 00:46:30,949
malicious application

967
00:46:27,799 --> 00:46:33,229
<font color="#E5E5E5">thumpers with the legitimate</font>

968
00:46:30,949 --> 00:46:36,319
applications redirect URI to change it

969
00:46:33,229 --> 00:46:39,979
to<font color="#CCCCCC"> some malicious Kanto state with</font>

970
00:46:36,319 --> 00:46:43,219
<font color="#CCCCCC">irregular I could dump it with more</font>

971
00:46:39,979 --> 00:46:46,038
because the<font color="#CCCCCC"> malicious applications</font>

972
00:46:43,219 --> 00:46:48,559
<font color="#E5E5E5">registered that</font><font color="#CCCCCC"> prince</font><font color="#E5E5E5"> is a good new</font>

973
00:46:46,039 --> 00:46:49,939
<font color="#CCCCCC">alright with the operating system so if</font>

974
00:46:48,559 --> 00:46:52,039
<font color="#CCCCCC">he</font><font color="#E5E5E5"> was installed first the unregistered</font>

975
00:46:49,939 --> 00:46:57,140
<font color="#CCCCCC">got one before we would want</font><font color="#E5E5E5"> it</font>

976
00:46:52,039 --> 00:47:08,150
so he gets redirected on do have any

977
00:46:57,140 --> 00:47:11,479
<font color="#CCCCCC">other</font><font color="#E5E5E5"> questions</font><font color="#CCCCCC"> Rafi I am so for the</font>

978
00:47:08,150 --> 00:47:13,699
first party applications<font color="#E5E5E5"> who might not</font>

979
00:47:11,479 --> 00:47:15,919
<font color="#E5E5E5">necessarily want</font><font color="#CCCCCC"> to open up the web</font>

980
00:47:13,699 --> 00:47:17,630
browsers you want to provide<font color="#E5E5E5"> a better</font>

981
00:47:15,919 --> 00:47:19,400
<font color="#E5E5E5">experience to</font><font color="#CCCCCC"> the user what would you</font>

982
00:47:17,630 --> 00:47:23,059
recommend<font color="#E5E5E5"> to be using for accessing the</font>

983
00:47:19,400 --> 00:47:25,459
earth's resources<font color="#E5E5E5"> and there is narrowing</font>

984
00:47:23,059 --> 00:47:26,959
iOS sound and you can<font color="#E5E5E5"> embed the</font>

985
00:47:25,459 --> 00:47:28,609
operating systems<font color="#E5E5E5"> brozen</font><font color="#CCCCCC"> with an</font>

986
00:47:26,959 --> 00:47:31,999
<font color="#E5E5E5">application which</font><font color="#CCCCCC"> i think</font><font color="#E5E5E5"> of it because</font>

987
00:47:28,609 --> 00:47:33,199
<font color="#E5E5E5">it's a bit</font><font color="#CCCCCC"> more complicated</font><font color="#E5E5E5"> but it's it</font>

988
00:47:31,999 --> 00:47:34,848
gets<font color="#E5E5E5"> the same effects have having the</font>

989
00:47:33,199 --> 00:47:36,229
pros<font color="#E5E5E5"> where they can process but you can</font>

990
00:47:34,849 --> 00:47:37,579
still invent it within your application

991
00:47:36,229 --> 00:47:40,578
procedure to bring come out on the

992
00:47:37,579 --> 00:47:41,839
application and<font color="#CCCCCC"> for them because</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> the</font>

993
00:47:40,579 --> 00:47:44,239
<font color="#E5E5E5">different process doesn't help up</font>

994
00:47:41,839 --> 00:47:45,919
<font color="#CCCCCC">primitives over as opposed to using my</font>

995
00:47:44,239 --> 00:47:48,229
credentials where you just<font color="#E5E5E5"> provide the</font>

996
00:47:45,919 --> 00:47:50,929
username and<font color="#E5E5E5"> password</font><font color="#CCCCCC"> because it's the</font>

997
00:47:48,229 --> 00:47:54,078
first party up anyway so<font color="#E5E5E5"> it's less of an</font>

998
00:47:50,929 --> 00:47:56,259
issue provide credential to staff you

999
00:47:54,079 --> 00:47:56,259
say

1000
00:48:16,630 --> 00:48:21,490
you mentioned that<font color="#CCCCCC"> some of the security</font>

1001
00:48:18,700 --> 00:48:24,339
<font color="#E5E5E5">depends on the user entering data into</font>

1002
00:48:21,490 --> 00:48:26,410
the<font color="#CCCCCC"> the system browser</font><font color="#E5E5E5"> how is the</font><font color="#CCCCCC"> user</font>

1003
00:48:24,340 --> 00:48:30,010
<font color="#E5E5E5">supposed to recognize the system browser</font>

1004
00:48:26,410 --> 00:48:34,118
<font color="#E5E5E5">from an actual malicious attempt to look</font>

1005
00:48:30,010 --> 00:48:37,780
like the system browser<font color="#CCCCCC"> I had but the</font>

1006
00:48:34,119 --> 00:48:40,960
trick<font color="#E5E5E5"> is if you know education and it's</font>

1007
00:48:37,780 --> 00:48:43,330
not anything what to solve and that

1008
00:48:40,960 --> 00:48:45,580
<font color="#E5E5E5">probably no technical solution to</font><font color="#CCCCCC"> this</font>

1009
00:48:43,330 --> 00:48:49,240
<font color="#E5E5E5">in</font><font color="#CCCCCC"> Android developed some stuff nowadays</font>

1010
00:48:45,580 --> 00:48:50,500
<font color="#E5E5E5">for showing trusted dialogues so she</font>

1011
00:48:49,240 --> 00:48:52,060
think there's a potential for<font color="#E5E5E5"> something</font>

1012
00:48:50,500 --> 00:48:54,040
like that that<font color="#E5E5E5"> would launch a browser in</font>

1013
00:48:52,060 --> 00:48:56,410
a way that the<font color="#CCCCCC"> user is guaranteed to</font><font color="#E5E5E5"> be</font>

1014
00:48:54,040 --> 00:48:57,610
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to recognize again</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> definitely</font>

1015
00:48:56,410 --> 00:49:05,080
either knowing the loss while they're

1016
00:48:57,610 --> 00:49:10,740
there interacting with so thank you<font color="#E5E5E5"> do</font>

1017
00:49:05,080 --> 00:49:10,740
we have any more<font color="#E5E5E5"> questions don't you</font>

1018
00:49:14,920 --> 00:49:20,520
thanks for<font color="#CCCCCC"> talk mitigations one of the</font>

1019
00:49:18,340 --> 00:49:23,440
<font color="#E5E5E5">medications you consider for the</font>

1020
00:49:20,520 --> 00:49:24,520
authorization<font color="#CCCCCC"> server which gives the</font>

1021
00:49:23,440 --> 00:49:27,190
tokens out<font color="#CCCCCC"> I mean because obviously</font>

1022
00:49:24,520 --> 00:49:30,009
that's<font color="#E5E5E5"> potential attack and also you</font>

1023
00:49:27,190 --> 00:49:33,460
talked about<font color="#E5E5E5"> knowing behaviors which</font>

1024
00:49:30,010 --> 00:49:34,960
were unexpected<font color="#E5E5E5"> so what's what</font>

1025
00:49:33,460 --> 00:49:41,650
implementations<font color="#CCCCCC"> have you got to sort</font>

1026
00:49:34,960 --> 00:49:44,830
mitigate against that<font color="#CCCCCC"> so all</font><font color="#E5E5E5"> of the</font>

1027
00:49:41,650 --> 00:49:46,300
stuff at the<font color="#CCCCCC"> end</font><font color="#E5E5E5"> is basically a very</font>

1028
00:49:44,830 --> 00:49:50,410
<font color="#CCCCCC">high-level</font><font color="#E5E5E5"> summary the stuff that's in</font>

1029
00:49:46,300 --> 00:49:55,540
the threat model<font color="#E5E5E5"> the the threat</font><font color="#CCCCCC"> model</font>

1030
00:49:50,410 --> 00:49:57,580
<font color="#CCCCCC">we'll go through in detail</font><font color="#E5E5E5"> when what you</font>

1031
00:49:55,540 --> 00:49:59,200
need to validate when<font color="#CCCCCC"> you before you</font>

1032
00:49:57,580 --> 00:50:01,840
hand out an authorization to<font color="#E5E5E5"> an</font>

1033
00:49:59,200 --> 00:50:05,200
<font color="#E5E5E5">authorization code</font><font color="#CCCCCC"> so in the instance of</font>

1034
00:50:01,840 --> 00:50:10,150
a web client<font color="#CCCCCC"> you should be</font>

1035
00:50:05,200 --> 00:50:11,740
authenticating<font color="#E5E5E5"> the client before you</font>

1036
00:50:10,150 --> 00:50:13,480
authenticate the client and<font color="#E5E5E5"> you check</font>

1037
00:50:11,740 --> 00:50:17,109
<font color="#CCCCCC">that the</font><font color="#E5E5E5"> authorization code was actually</font>

1038
00:50:13,480 --> 00:50:20,890
<font color="#E5E5E5">issued to for that particular client the</font>

1039
00:50:17,109 --> 00:50:21,730
native side it's it's it's about<font color="#E5E5E5"> using</font>

1040
00:50:20,890 --> 00:50:22,450
<font color="#CCCCCC">pke</font>

1041
00:50:21,730 --> 00:50:25,029
so

1042
00:50:22,450 --> 00:50:27,160
you're always you won't you<font color="#E5E5E5"> only issue</font>

1043
00:50:25,029 --> 00:50:30,130
an authorization code to an

1044
00:50:27,160 --> 00:50:32,230
authenticated user<font color="#CCCCCC"> and then when you're</font>

1045
00:50:30,130 --> 00:50:34,450
swapping<font color="#E5E5E5"> your when</font><font color="#CCCCCC"> you're when the</font>

1046
00:50:32,230 --> 00:50:36,460
client<font color="#E5E5E5"> is redeeming the authorization</font>

1047
00:50:34,450 --> 00:50:38,410
code<font color="#E5E5E5"> depending on the scenario so with</font>

1048
00:50:36,460 --> 00:50:41,019
web<font color="#E5E5E5"> you authenticate the client with</font>

1049
00:50:38,410 --> 00:50:44,890
<font color="#E5E5E5">native you authenticate that it was</font>

1050
00:50:41,019 --> 00:50:48,308
issued<font color="#CCCCCC"> to the same the same app</font><font color="#E5E5E5"> all of</font>

1051
00:50:44,890 --> 00:50:53,319
<font color="#CCCCCC">the</font><font color="#E5E5E5"> behaviors</font><font color="#CCCCCC"> so what to look for our</font>

1052
00:50:48,309 --> 00:50:55,869
<font color="#CCCCCC">reference in the threat model one thing</font>

1053
00:50:53,319 --> 00:50:59,740
to know on the implementations that<font color="#CCCCCC"> I've</font>

1054
00:50:55,869 --> 00:51:09,160
looked at none of<font color="#E5E5E5"> those</font><font color="#CCCCCC"> none of the</font>

1055
00:50:59,740 --> 00:51:09,959
monitoring was actually there<font color="#E5E5E5"> so yeah</font>

1056
00:51:09,160 --> 00:51:13,529
absolutely

1057
00:51:09,960 --> 00:51:17,680
<font color="#CCCCCC">the I've looked at a few internally</font><font color="#E5E5E5"> and</font>

1058
00:51:13,529 --> 00:51:21,000
they haven't<font color="#E5E5E5"> had though they haven't had</font>

1059
00:51:17,680 --> 00:51:23,740
the<font color="#E5E5E5"> the monitoring that you would expect</font>

1060
00:51:21,000 --> 00:51:25,750
yeah<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> obviously it's about policy</font>

1061
00:51:23,740 --> 00:51:28,479
then in terms of<font color="#E5E5E5"> what you decide</font><font color="#CCCCCC"> to do</font>

1062
00:51:25,750 --> 00:51:30,130
<font color="#E5E5E5">in the instance of all that happening</font>

1063
00:51:28,480 --> 00:51:32,109
but<font color="#E5E5E5"> they just didn't have they didn't</font>

1064
00:51:30,130 --> 00:51:33,609
even<font color="#CCCCCC"> have</font><font color="#E5E5E5"> the hooks for for they in</font>

1065
00:51:32,109 --> 00:51:36,690
there so you<font color="#E5E5E5"> can you're going to end up</font>

1066
00:51:33,609 --> 00:51:36,690
writing you writing it yourself

1067
00:51:38,069 --> 00:51:45,400
<font color="#CCCCCC">superb any more questions so my billing</font>

1068
00:51:43,779 --> 00:51:46,990
to what you<font color="#E5E5E5"> just mentioned</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> around</font>

1069
00:51:45,400 --> 00:51:49,539
some of<font color="#E5E5E5"> the investigations you've done</font>

1070
00:51:46,990 --> 00:51:51,640
but with UK banks now having to open<font color="#CCCCCC"> up</font>

1071
00:51:49,539 --> 00:51:54,309
their services for<font color="#CCCCCC"> our API and I was</font>

1072
00:51:51,640 --> 00:51:55,930
particularly being utilized<font color="#E5E5E5"> for payment</font>

1073
00:51:54,309 --> 00:51:58,210
service providers account service

1074
00:51:55,930 --> 00:52:00,399
providers<font color="#E5E5E5"> have you happen to do any</font>

1075
00:51:58,210 --> 00:52:02,380
research and identify how well or

1076
00:52:00,400 --> 00:52:04,019
otherwise all these providers<font color="#CCCCCC"> are</font>

1077
00:52:02,380 --> 00:52:11,880
implementing<font color="#E5E5E5"> their</font><font color="#CCCCCC"> apps</font>

1078
00:52:04,019 --> 00:52:14,529
no idea<font color="#CCCCCC"> zooom</font><font color="#E5E5E5"> any other questions nope</font>

1079
00:52:11,880 --> 00:52:18,210
<font color="#CCCCCC">so just</font><font color="#E5E5E5"> can we put our hands together</font>

1080
00:52:14,529 --> 00:52:18,210
for trying to<font color="#E5E5E5"> bring praise I thank you</font>

