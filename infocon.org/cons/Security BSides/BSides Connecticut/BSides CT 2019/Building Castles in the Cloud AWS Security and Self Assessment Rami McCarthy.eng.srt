1
00:00:00,000 --> 00:00:06,629
and his presentation is building castles

2
00:00:04,200 --> 00:00:11,639
in the cloud AWS security and

3
00:00:06,629 --> 00:00:13,200
self-assessment awesome thank you for

4
00:00:11,639 --> 00:00:18,119
that is the mic working Peele can hear

5
00:00:13,200 --> 00:00:20,789
me or good or good awesome so thank you

6
00:00:18,119 --> 00:00:23,250
all for coming as he said this is all

7
00:00:20,789 --> 00:00:25,949
about AWS security I'm gonna talk about

8
00:00:23,250 --> 00:00:28,099
some tips and easy wins for AWS security

9
00:00:25,949 --> 00:00:30,330
going through a few kind of key features

10
00:00:28,099 --> 00:00:31,949
and highlighting really actionable

11
00:00:30,330 --> 00:00:34,260
advice that you might be able to take

12
00:00:31,949 --> 00:00:35,460
back to your own organization and then

13
00:00:34,260 --> 00:00:37,440
we're gonna move into looking at open

14
00:00:35,460 --> 00:00:40,140
source auditing tools that are super

15
00:00:37,440 --> 00:00:42,239
easy for you guys to run to assess your

16
00:00:40,140 --> 00:00:43,680
own security posture and then you know

17
00:00:42,239 --> 00:00:46,620
maybe make some informed hardening

18
00:00:43,680 --> 00:00:48,090
decisions I'm not talking about AWS

19
00:00:46,620 --> 00:00:49,379
internals here so I'm not gonna be

20
00:00:48,090 --> 00:00:51,270
talking about how they're implementing

21
00:00:49,379 --> 00:00:52,530
any of these controls and we're also not

22
00:00:51,270 --> 00:00:54,899
going to talk about kind of large

23
00:00:52,530 --> 00:00:56,280
enterprise architecture you know how you

24
00:00:54,899 --> 00:00:59,940
integrate your various accounts and

25
00:00:56,280 --> 00:01:02,070
organizations before we get going some

26
00:00:59,940 --> 00:01:03,629
quick information about me I have a

27
00:01:02,070 --> 00:01:06,000
bachelor's degree in computer science

28
00:01:03,629 --> 00:01:08,070
where I worked for four years doing IT

29
00:01:06,000 --> 00:01:10,500
um and ran a music magazine at

30
00:01:08,070 --> 00:01:12,449
Northeastern I'm currently in the

31
00:01:10,500 --> 00:01:14,460
master's program at Brandeis and I'm a

32
00:01:12,450 --> 00:01:17,070
full-time security consultant with NCC

33
00:01:14,460 --> 00:01:18,990
group which means I do everything from

34
00:01:17,070 --> 00:01:21,289
web penetration testing of e-commerce

35
00:01:18,990 --> 00:01:24,270
sites or software as a service to

36
00:01:21,290 --> 00:01:25,979
looking at IOD hardware devices and of

37
00:01:24,270 --> 00:01:29,280
course most importantly for this cloud

38
00:01:25,979 --> 00:01:30,630
security most importantly about NCC is

39
00:01:29,280 --> 00:01:32,100
that we do have some really cool

40
00:01:30,630 --> 00:01:33,990
stickers so if you haven't swung by the

41
00:01:32,100 --> 00:01:36,270
table you shouldn't if you haven't

42
00:01:33,990 --> 00:01:37,798
checked out this Twitter account you

43
00:01:36,270 --> 00:01:42,630
should also because what's not funny

44
00:01:37,799 --> 00:01:43,950
about googly eyes on things so to get

45
00:01:42,630 --> 00:01:47,009
started I'm just gonna quickly go over

46
00:01:43,950 --> 00:01:47,909
the agenda so you know what we're doing

47
00:01:47,009 --> 00:01:49,380
here

48
00:01:47,909 --> 00:01:51,450
so we're working against the Pareto

49
00:01:49,380 --> 00:01:53,460
principle here which is the 80/20 rule

50
00:01:51,450 --> 00:01:54,869
if you're familiar with it effectively

51
00:01:53,460 --> 00:01:57,630
my goal is to walk you through a

52
00:01:54,869 --> 00:02:01,770
minority of the AWS security features

53
00:01:57,630 --> 00:02:03,929
they'll give you the biggest impact so

54
00:02:01,770 --> 00:02:05,700
what this actually looks like is I'm

55
00:02:03,930 --> 00:02:08,610
gonna do some very quick background on

56
00:02:05,700 --> 00:02:11,280
AWS and AWS security and then I'm gonna

57
00:02:08,610 --> 00:02:13,710
go into best practices looking at public

58
00:02:11,280 --> 00:02:15,090
access and external exposure

59
00:02:13,710 --> 00:02:17,490
access management for actually

60
00:02:15,090 --> 00:02:21,180
authenticated users some monitoring and

61
00:02:17,490 --> 00:02:22,950
logging configuration as well as AWS is

62
00:02:21,180 --> 00:02:24,990
built-in security services and what the

63
00:02:22,950 --> 00:02:26,369
key ones are there and then I'm gonna

64
00:02:24,990 --> 00:02:28,320
point you toward some next steps if

65
00:02:26,370 --> 00:02:30,500
you're really looking to dive into cloud

66
00:02:28,320 --> 00:02:33,180
security and cloud architecture in AWS

67
00:02:30,500 --> 00:02:35,420
I'm then gonna pivot into these open

68
00:02:33,180 --> 00:02:37,590
source auditing tools and give you some

69
00:02:35,420 --> 00:02:39,149
examples of what the outputs will look

70
00:02:37,590 --> 00:02:45,090
like what the pros and cons are there

71
00:02:39,150 --> 00:02:46,500
and you know how you can use them so

72
00:02:45,090 --> 00:02:47,820
before we dive right in I just always

73
00:02:46,500 --> 00:02:49,470
like to gauge the audience on their

74
00:02:47,820 --> 00:02:51,000
familiarity so if I could just get a

75
00:02:49,470 --> 00:02:54,570
show of hands for who's actually used

76
00:02:51,000 --> 00:02:57,390
AWS before awesome and so who's actually

77
00:02:54,570 --> 00:03:00,269
used it professionally and is anyone

78
00:02:57,390 --> 00:03:01,769
currently managing an AWS environment is

79
00:03:00,270 --> 00:03:04,920
anyone responsible for the security of

80
00:03:01,770 --> 00:03:06,300
the Adobe environment awesome so it's a

81
00:03:04,920 --> 00:03:08,309
mixed crowd so I'm going to do my best

82
00:03:06,300 --> 00:03:10,140
to kind of introduce anything I use

83
00:03:08,310 --> 00:03:11,730
during the course of the talk but also

84
00:03:10,140 --> 00:03:13,920
give some detailed information so that

85
00:03:11,730 --> 00:03:16,019
people who are familiar with AWS get

86
00:03:13,920 --> 00:03:17,730
something out of this so it's a tight

87
00:03:16,020 --> 00:03:22,200
rope I'm gonna walk and hopefully it all

88
00:03:17,730 --> 00:03:23,970
works out so the first question I get

89
00:03:22,200 --> 00:03:27,290
asked whenever I give a talk on AWS

90
00:03:23,970 --> 00:03:31,200
security is why AWS you know why

91
00:03:27,290 --> 00:03:33,660
specifically this public cloud first I

92
00:03:31,200 --> 00:03:36,420
pick a public cloud you know either

93
00:03:33,660 --> 00:03:38,040
Azure GCP or AWS that I can give

94
00:03:36,420 --> 00:03:40,530
actionable advice because if you just

95
00:03:38,040 --> 00:03:42,269
start talking in generics about securing

96
00:03:40,530 --> 00:03:44,520
the perimeter or about you know making

97
00:03:42,270 --> 00:03:46,320
sure that you're limiting access that's

98
00:03:44,520 --> 00:03:48,240
great but this way people can hopefully

99
00:03:46,320 --> 00:03:50,310
go back and actually apply things to

100
00:03:48,240 --> 00:03:54,030
their own organization assuming they're

101
00:03:50,310 --> 00:03:56,850
using AWS and why AWS of all the options

102
00:03:54,030 --> 00:03:59,010
well it has the 50% market share right

103
00:03:56,850 --> 00:04:01,340
now which means it's my best bet to hit

104
00:03:59,010 --> 00:04:03,959
a common denominator across the room

105
00:04:01,340 --> 00:04:05,730
obviously Azure and GCP are the next two

106
00:04:03,960 --> 00:04:09,330
big players and then you have kind of a

107
00:04:05,730 --> 00:04:10,880
cohort with IBM Alibaba Oracle cloud and

108
00:04:09,330 --> 00:04:14,240
then players like digitalocean

109
00:04:10,880 --> 00:04:17,070
but AWS is currently dominant although

110
00:04:14,240 --> 00:04:18,960
certainly nothing wrong with using any

111
00:04:17,070 --> 00:04:22,140
of the other big providers in the public

112
00:04:18,959 --> 00:04:23,789
cloud so I'm gonna start where every

113
00:04:22,140 --> 00:04:25,050
eight of us security talk really should

114
00:04:23,790 --> 00:04:26,820
start which is with the shared

115
00:04:25,050 --> 00:04:27,450
responsibility model hopefully some

116
00:04:26,820 --> 00:04:30,360
people are from

117
00:04:27,450 --> 00:04:32,430
with this but effectively it's Amazon's

118
00:04:30,360 --> 00:04:34,410
defined model for how the breakdown of

119
00:04:32,430 --> 00:04:37,800
security responsibilities is in the

120
00:04:34,410 --> 00:04:40,410
cloud basically how this works is that

121
00:04:37,800 --> 00:04:42,120
you are guaranteed when you deploy

122
00:04:40,410 --> 00:04:43,650
software in the cloud when you work in

123
00:04:42,120 --> 00:04:45,210
the cloud that Amazon is taking care of

124
00:04:43,650 --> 00:04:47,340
the bottom half of the diagram and

125
00:04:45,210 --> 00:04:48,659
you're in charge of the top half so what

126
00:04:47,340 --> 00:04:51,330
this means is you don't have to worry

127
00:04:48,660 --> 00:04:53,820
about networking or physical security of

128
00:04:51,330 --> 00:04:55,740
data centers as well as updates to

129
00:04:53,820 --> 00:04:57,990
manage services so this is why you never

130
00:04:55,740 --> 00:04:59,940
have to download a new version of Amazon

131
00:04:57,990 --> 00:05:01,320
s3 to use it

132
00:04:59,940 --> 00:05:03,330
those things are provided by you

133
00:05:01,320 --> 00:05:05,250
Amazon's responsible for them

134
00:05:03,330 --> 00:05:06,900
this is great so long as you pay

135
00:05:05,250 --> 00:05:08,250
attention to the top half and remember

136
00:05:06,900 --> 00:05:09,870
what's your responsibility which

137
00:05:08,250 --> 00:05:11,970
includes things like managing

138
00:05:09,870 --> 00:05:15,360
credentials and user access managing

139
00:05:11,970 --> 00:05:17,490
your own data and customer data as well

140
00:05:15,360 --> 00:05:19,950
as a bunch of other things and this is

141
00:05:17,490 --> 00:05:21,570
publicized by Amazon super easy to track

142
00:05:19,950 --> 00:05:24,120
down if you kind of want to examine it

143
00:05:21,570 --> 00:05:26,340
at length and this is a great thing

144
00:05:24,120 --> 00:05:28,080
because Amazon does a lot of security

145
00:05:26,340 --> 00:05:29,940
things you and your organization might

146
00:05:28,080 --> 00:05:31,830
not be able to they're on the advanced

147
00:05:29,940 --> 00:05:34,680
disclosure list for a bunch of different

148
00:05:31,830 --> 00:05:36,419
kind of key services and software they

149
00:05:34,680 --> 00:05:37,670
have huge teams working on odd made

150
00:05:36,420 --> 00:05:40,020
reasoning around cryptographic

151
00:05:37,670 --> 00:05:42,210
verification and firmware verification

152
00:05:40,020 --> 00:05:43,799
and their physical security controls are

153
00:05:42,210 --> 00:05:45,780
really intense so they have you know

154
00:05:43,800 --> 00:05:47,220
threat intelligence teams working as

155
00:05:45,780 --> 00:05:49,169
well as buying their data centers

156
00:05:47,220 --> 00:05:50,640
through front companies and all sorts of

157
00:05:49,170 --> 00:05:54,570
things that your mom-and-pop company

158
00:05:50,640 --> 00:05:56,430
can't really investigate themselves this

159
00:05:54,570 --> 00:05:58,409
talk is focusing on the top half of the

160
00:05:56,430 --> 00:06:00,120
model like I said Amazon is doing all

161
00:05:58,410 --> 00:06:02,280
sorts of things to ensure the security

162
00:06:00,120 --> 00:06:04,200
of the cloud but we're going to talk

163
00:06:02,280 --> 00:06:07,770
about what you can do to secure yourself

164
00:06:04,200 --> 00:06:09,690
in the cloud but before we get any

165
00:06:07,770 --> 00:06:11,370
further in it's it really important to

166
00:06:09,690 --> 00:06:13,110
note that this shared responsibility

167
00:06:11,370 --> 00:06:14,880
model is not a shared accountability

168
00:06:13,110 --> 00:06:16,350
model and what that means for you is

169
00:06:14,880 --> 00:06:18,330
that at the end of the day if you're

170
00:06:16,350 --> 00:06:20,580
putting your customer or company data in

171
00:06:18,330 --> 00:06:22,440
the cloud it's your responsibility so

172
00:06:20,580 --> 00:06:24,060
this is why going with one of the kind

173
00:06:22,440 --> 00:06:26,580
of trusted cloud providers is so

174
00:06:24,060 --> 00:06:28,970
important the whole you know no one got

175
00:06:26,580 --> 00:06:31,140
fired for buying Microsoft or IBM

176
00:06:28,970 --> 00:06:32,520
applies here so make sure you're

177
00:06:31,140 --> 00:06:34,409
choosing a trusted cloud provider

178
00:06:32,520 --> 00:06:36,030
because they are a partner in this and

179
00:06:34,410 --> 00:06:38,670
at the end of the day you're accountable

180
00:06:36,030 --> 00:06:40,109
for those decisions and if you're

181
00:06:38,670 --> 00:06:40,710
concerned about the security of the

182
00:06:40,110 --> 00:06:42,540
cloud for

183
00:06:40,710 --> 00:06:45,780
w specifically they have a service

184
00:06:42,540 --> 00:06:47,790
called artifact and AWS artifact is a

185
00:06:45,780 --> 00:06:50,309
meta service where you can access all of

186
00:06:47,790 --> 00:06:52,620
their compliance reports so if you're

187
00:06:50,310 --> 00:06:54,150
you know boss or management or board is

188
00:06:52,620 --> 00:06:57,630
coming to you asking about PCI

189
00:06:54,150 --> 00:06:59,340
compliance or FedRAMP or ISO compliance

190
00:06:57,630 --> 00:07:03,540
this is where you can point them to kind

191
00:06:59,340 --> 00:07:05,969
of see AWS documentation of their own

192
00:07:03,540 --> 00:07:08,070
compliance obviously just cuz AWS is

193
00:07:05,970 --> 00:07:10,350
compliant doesn't mean you are but it's

194
00:07:08,070 --> 00:07:11,849
an easy centralized way to gather this

195
00:07:10,350 --> 00:07:14,370
sort of information so you don't have to

196
00:07:11,850 --> 00:07:19,530
go chasing down your account manager if

197
00:07:14,370 --> 00:07:21,390
you're an AWS partner so having kind of

198
00:07:19,530 --> 00:07:23,429
talked about where our responsibilities

199
00:07:21,390 --> 00:07:26,070
lie this is where we're gonna move into

200
00:07:23,430 --> 00:07:28,740
actually discussing security in AWS you

201
00:07:26,070 --> 00:07:30,750
know the meat of the talk the goal here

202
00:07:28,740 --> 00:07:33,060
is to provide the key eight of a

203
00:07:30,750 --> 00:07:35,010
security cone sitter ations and what I

204
00:07:33,060 --> 00:07:36,630
mean by that is I want to give you

205
00:07:35,010 --> 00:07:38,580
things that are high return on your time

206
00:07:36,630 --> 00:07:40,680
investment and that are somewhat

207
00:07:38,580 --> 00:07:42,180
straightforward to implement so I'll

208
00:07:40,680 --> 00:07:45,060
talk a little bit about some of the more

209
00:07:42,180 --> 00:07:46,530
complex topics in the cloud and point

210
00:07:45,060 --> 00:07:48,780
you towards resources to really learn

211
00:07:46,530 --> 00:07:50,340
about them in depth but I'm trying to

212
00:07:48,780 --> 00:07:51,780
give you a lot of turnkey informations

213
00:07:50,340 --> 00:07:54,239
these are things that you can you know

214
00:07:51,780 --> 00:07:57,719
go back to work and enable or play with

215
00:07:54,240 --> 00:07:59,520
yourself really easily it's the first

216
00:07:57,720 --> 00:08:01,950
thing we want to talk about is external

217
00:07:59,520 --> 00:08:03,299
exposure is your security perimeter and

218
00:08:01,950 --> 00:08:04,860
this is a bigger problem in the cloud

219
00:08:03,300 --> 00:08:07,100
than on-prem because of how much you

220
00:08:04,860 --> 00:08:10,470
generally want to expose to the internet

221
00:08:07,100 --> 00:08:13,170
so there's some complexity here but it's

222
00:08:10,470 --> 00:08:15,530
obviously really important and the first

223
00:08:13,170 --> 00:08:17,700
thing to talk about here of course is s3

224
00:08:15,530 --> 00:08:20,039
which is probably the service that

225
00:08:17,700 --> 00:08:22,349
everyone here is familiar with likely

226
00:08:20,040 --> 00:08:23,790
due to the sort of plague of breaches

227
00:08:22,350 --> 00:08:27,870
that have happened and these is just a

228
00:08:23,790 --> 00:08:29,970
small sample and this is the key about

229
00:08:27,870 --> 00:08:31,430
public access so all of these s3

230
00:08:29,970 --> 00:08:33,780
breaches were companies that

231
00:08:31,430 --> 00:08:36,120
unintentionally publicly exposed s3

232
00:08:33,780 --> 00:08:37,829
buckets they thought were private and

233
00:08:36,120 --> 00:08:40,080
this is still happening ongoing today

234
00:08:37,830 --> 00:08:43,500
you'll see these almost weekly pop up in

235
00:08:40,080 --> 00:08:45,660
the news but s3 used to have some unsafe

236
00:08:43,500 --> 00:08:47,100
defaults and some misleading guidance

237
00:08:45,660 --> 00:08:49,680
that was leading to this and nowadays

238
00:08:47,100 --> 00:08:51,330
there are far more tools you can use to

239
00:08:49,680 --> 00:08:53,520
protect your company against getting in

240
00:08:51,330 --> 00:08:56,550
a headline

241
00:08:53,520 --> 00:09:00,060
so the first time big tool here is block

242
00:08:56,550 --> 00:09:03,060
public access this is an account wide

243
00:09:00,060 --> 00:09:05,640
setting that you can apply that also can

244
00:09:03,060 --> 00:09:07,829
be applied at a bucket level and what it

245
00:09:05,640 --> 00:09:10,410
does is it prohibits anyone creating

246
00:09:07,830 --> 00:09:12,149
public buckets in your account which can

247
00:09:10,410 --> 00:09:14,550
be super useful from a governance and

248
00:09:12,149 --> 00:09:16,050
guardrails perspective the thing to be

249
00:09:14,550 --> 00:09:18,540
careful with here if you're kind of an

250
00:09:16,050 --> 00:09:21,120
organization that's already using AWS is

251
00:09:18,540 --> 00:09:23,610
that this can break things so if you're

252
00:09:21,120 --> 00:09:25,920
deploying a marketing site and uses a

253
00:09:23,610 --> 00:09:27,570
public s3 bucket intentionally and you

254
00:09:25,920 --> 00:09:29,849
just flip this switch you can break

255
00:09:27,570 --> 00:09:32,850
things but you can also enable it on a

256
00:09:29,850 --> 00:09:36,029
going-forward basis as you know a

257
00:09:32,850 --> 00:09:38,160
compensating control there this is also

258
00:09:36,029 --> 00:09:40,620
similar things available for EMR if

259
00:09:38,160 --> 00:09:42,209
anyone uses that and I expect Amazon

260
00:09:40,620 --> 00:09:45,800
will be rolling out similar guardrail

261
00:09:42,209 --> 00:09:47,640
services that are turnkey going forward

262
00:09:45,800 --> 00:09:49,439
but there's more you can do obviously

263
00:09:47,640 --> 00:09:53,279
behind you know this one setting that

264
00:09:49,440 --> 00:09:54,810
only applies to s3 and the moment to

265
00:09:53,279 --> 00:09:56,370
think about this sort of public access

266
00:09:54,810 --> 00:09:59,699
is when you're architecting in the cloud

267
00:09:56,370 --> 00:10:02,430
which has its own considerations so if

268
00:09:59,700 --> 00:10:05,160
you're using ec2 or s3 and you want them

269
00:10:02,430 --> 00:10:06,810
to be publicly accessible architectural

270
00:10:05,160 --> 00:10:09,360
II they should always be behind a load

271
00:10:06,810 --> 00:10:13,319
balancer or cloud front and this has a

272
00:10:09,360 --> 00:10:15,480
few kind of benefits for you first it's

273
00:10:13,320 --> 00:10:17,579
really easy then to chain other AWS

274
00:10:15,480 --> 00:10:19,589
security controls so if you have this s3

275
00:10:17,579 --> 00:10:22,050
bucket behind cloud front it's really

276
00:10:19,589 --> 00:10:24,360
easy to apply AWS shield which is their

277
00:10:22,050 --> 00:10:26,969
denial service prevention or their waffe

278
00:10:24,360 --> 00:10:29,850
and chain other services there as well

279
00:10:26,970 --> 00:10:31,800
also it will help standardize access

280
00:10:29,850 --> 00:10:34,230
logging so if you're just working

281
00:10:31,800 --> 00:10:37,979
directly out of kind of disparate s3

282
00:10:34,230 --> 00:10:39,899
buckets or ec2 instances logging can be

283
00:10:37,980 --> 00:10:41,760
harder to configure and kind of chaining

284
00:10:39,899 --> 00:10:44,640
them in this standardized way is really

285
00:10:41,760 --> 00:10:46,800
helpful they're finally services like

286
00:10:44,640 --> 00:10:49,050
cloud front especially have their own

287
00:10:46,800 --> 00:10:51,209
security considerations and benefits

288
00:10:49,050 --> 00:10:53,069
cloud front lets you really easily do

289
00:10:51,209 --> 00:10:56,819
geo restrictions or implement signed

290
00:10:53,070 --> 00:10:58,829
URLs for access so it's an easy win and

291
00:10:56,820 --> 00:11:01,589
if you do it upfront then you can kind

292
00:10:58,829 --> 00:11:03,930
of limit access between the s3 bucket

293
00:11:01,589 --> 00:11:06,089
and cloud front so that it's not exposed

294
00:11:03,930 --> 00:11:07,790
on its own and everything's mediated by

295
00:11:06,089 --> 00:11:11,999
CloudFront here

296
00:11:07,790 --> 00:11:13,649
so the real problem in AWS just like

297
00:11:11,999 --> 00:11:17,069
with on-prem is knowing what you have

298
00:11:13,649 --> 00:11:20,009
and where so the best move to peer to

299
00:11:17,069 --> 00:11:21,839
secure your perimeter in AWS is to do

300
00:11:20,009 --> 00:11:23,790
periodic auditing if you don't know it's

301
00:11:21,839 --> 00:11:24,869
there you can't secure it and especially

302
00:11:23,790 --> 00:11:26,519
if you're in an environment where there

303
00:11:24,869 --> 00:11:28,470
are some public resources and some

304
00:11:26,519 --> 00:11:30,899
private ones it's hard to know what's

305
00:11:28,470 --> 00:11:32,220
where and why so there are a few

306
00:11:30,899 --> 00:11:34,529
different ways you can do this sort of

307
00:11:32,220 --> 00:11:35,999
auditing for public access and can then

308
00:11:34,529 --> 00:11:38,339
go from there to verify that everything

309
00:11:35,999 --> 00:11:42,059
publicly accessible is intentionally

310
00:11:38,339 --> 00:11:43,949
publicly accessible so the first thing

311
00:11:42,059 --> 00:11:46,350
you can do is use the built-in trusted

312
00:11:43,949 --> 00:11:50,549
adviser tool so this is an Amazon

313
00:11:46,350 --> 00:11:52,529
service that is free for the first seven

314
00:11:50,549 --> 00:11:54,239
or eight security checks it doesn't just

315
00:11:52,529 --> 00:11:57,419
do security it also does things like

316
00:11:54,239 --> 00:12:00,389
cost optimization or performance super

317
00:11:57,419 --> 00:12:03,509
easy to turn on and start using and if

318
00:12:00,389 --> 00:12:05,220
you pay Amazon a relatively affordable

319
00:12:03,509 --> 00:12:07,230
amount you can get some additional

320
00:12:05,220 --> 00:12:09,779
security checks but for free this will

321
00:12:07,230 --> 00:12:12,209
check for s3 bucket permissions so this

322
00:12:09,779 --> 00:12:16,709
also will flag open s3 buckets as well

323
00:12:12,209 --> 00:12:19,498
as EBS and RDS public instances or sorry

324
00:12:16,709 --> 00:12:20,910
public snapshots as well as any security

325
00:12:19,499 --> 00:12:22,259
groups that are open to the world so

326
00:12:20,910 --> 00:12:24,209
this will be saying like if you have an

327
00:12:22,259 --> 00:12:27,569
easy-to instance with a security group

328
00:12:24,209 --> 00:12:28,738
that makes SSH internet accessible this

329
00:12:27,569 --> 00:12:30,809
is where you can kind of get that

330
00:12:28,739 --> 00:12:33,389
information and the paid checks do a

331
00:12:30,809 --> 00:12:36,480
little more kind of sophisticated work

332
00:12:33,389 --> 00:12:38,220
on looking at security group so it'll

333
00:12:36,480 --> 00:12:39,360
check for other sorts of security group

334
00:12:38,220 --> 00:12:41,549
misconfigurations

335
00:12:39,360 --> 00:12:43,739
this is a really easy turnkey solution

336
00:12:41,549 --> 00:12:45,779
that can give you some alerting it

337
00:12:43,739 --> 00:12:47,669
doesn't do any auto remediation on its

338
00:12:45,779 --> 00:12:49,319
own but it's an easy way to gain some

339
00:12:47,669 --> 00:12:52,230
insight into simple mistakes you might

340
00:12:49,319 --> 00:12:54,118
be making for security in your cloud you

341
00:12:52,230 --> 00:12:55,860
can also use third-party tools this is

342
00:12:54,119 --> 00:13:00,839
just one example but they generally

343
00:12:55,860 --> 00:13:02,309
leverage the AWS CLI or SDK to using

344
00:13:00,839 --> 00:13:05,100
read-only access to your account

345
00:13:02,309 --> 00:13:07,379
identify all the public IP space that

346
00:13:05,100 --> 00:13:10,230
you're using this one specifically

347
00:13:07,379 --> 00:13:11,699
supports a subset of AWS services and

348
00:13:10,230 --> 00:13:13,410
that's true of most of these tools so

349
00:13:11,699 --> 00:13:15,779
it's saying that could really easily be

350
00:13:13,410 --> 00:13:19,589
used in conjunction with sang like trust

351
00:13:15,779 --> 00:13:20,970
adviser to get better coverage but it's

352
00:13:19,589 --> 00:13:24,060
really easy to just set up

353
00:13:20,970 --> 00:13:26,490
read-only account setup read-only

354
00:13:24,060 --> 00:13:28,560
credentials and then use this to get a

355
00:13:26,490 --> 00:13:30,029
snapshot of what your external exposure

356
00:13:28,560 --> 00:13:32,069
looks like and this is where you know

357
00:13:30,029 --> 00:13:33,120
you're also using your own knowledge of

358
00:13:32,069 --> 00:13:35,160
your environment and pattern recognition

359
00:13:33,120 --> 00:13:37,319
to think what's jumping out at you that

360
00:13:35,160 --> 00:13:38,699
you didn't realize was public or

361
00:13:37,319 --> 00:13:41,550
externally exposed because those are

362
00:13:38,699 --> 00:13:43,649
some easy wins to lock that down and the

363
00:13:41,550 --> 00:13:45,149
one other thing that AWS is doing in

364
00:13:43,649 --> 00:13:47,310
light of the Capital One breach which

365
00:13:45,149 --> 00:13:49,379
people might be familiar with is that a

366
00:13:47,310 --> 00:13:52,829
device has started proactively scanning

367
00:13:49,379 --> 00:13:55,860
this is a excerpt from the letter they

368
00:13:52,829 --> 00:13:57,449
sent to us and a sender who was asking

369
00:13:55,860 --> 00:13:59,850
after you know what are you gonna do to

370
00:13:57,449 --> 00:14:01,709
stop all these cloud breaches so you

371
00:13:59,850 --> 00:14:03,569
should also make sure that your contact

372
00:14:01,709 --> 00:14:06,000
information and security contact

373
00:14:03,569 --> 00:14:08,279
information in your cloud and AWS

374
00:14:06,000 --> 00:14:09,870
accounts is set correctly to a monitored

375
00:14:08,279 --> 00:14:13,019
inbox this is saying that'll happen

376
00:14:09,870 --> 00:14:15,180
where small startup companies have their

377
00:14:13,019 --> 00:14:17,279
CEOs personal email address set as the

378
00:14:15,180 --> 00:14:18,930
security contact and so everything's

379
00:14:17,279 --> 00:14:20,970
kind of going into a black hole in terms

380
00:14:18,930 --> 00:14:23,310
of really important security alerts

381
00:14:20,970 --> 00:14:25,230
there um so the security contacts

382
00:14:23,310 --> 00:14:27,239
specifically is never used for marketing

383
00:14:25,230 --> 00:14:29,910
information or anything like that so

384
00:14:27,240 --> 00:14:31,230
that's something that is really easy to

385
00:14:29,910 --> 00:14:32,670
just check and make sure it's done right

386
00:14:31,230 --> 00:14:34,110
so you don't have to worry about it

387
00:14:32,670 --> 00:14:36,990
going forward don't to worry about

388
00:14:34,110 --> 00:14:42,389
missing one of these you know pretty

389
00:14:36,990 --> 00:14:44,009
critical alerts so that was the really

390
00:14:42,389 --> 00:14:45,899
quick run-through of public access you

391
00:14:44,009 --> 00:14:46,800
can audit it you can set up some

392
00:14:45,899 --> 00:14:48,600
guardrails

393
00:14:46,800 --> 00:14:49,859
especially with s3 which has been the

394
00:14:48,600 --> 00:14:52,259
biggest issue and now we're going to

395
00:14:49,860 --> 00:14:53,519
talk about access management which is

396
00:14:52,259 --> 00:14:56,339
you know authentication and

397
00:14:53,519 --> 00:14:58,620
authorization and this is something that

398
00:14:56,339 --> 00:15:01,230
can obviously in a complex environment

399
00:14:58,620 --> 00:15:04,829
get really out of hand it's very similar

400
00:15:01,230 --> 00:15:07,860
to on creme but in AWS it's all

401
00:15:04,829 --> 00:15:10,888
controlled by I am which is identity and

402
00:15:07,860 --> 00:15:13,069
access management just looking at the

403
00:15:10,889 --> 00:15:15,899
basics the two core concepts are

404
00:15:13,069 --> 00:15:18,569
identities and permissions where

405
00:15:15,899 --> 00:15:20,639
identity is sort of who can use certain

406
00:15:18,569 --> 00:15:22,740
resources this is kind of what you think

407
00:15:20,639 --> 00:15:23,819
about with authentication and

408
00:15:22,740 --> 00:15:26,910
permissions are getting into

409
00:15:23,819 --> 00:15:28,680
authorization there are a lot of

410
00:15:26,910 --> 00:15:30,719
resources out there if you need to get

411
00:15:28,680 --> 00:15:34,649
in the weeds on I am especially from AWS

412
00:15:30,720 --> 00:15:36,240
as conferences that they host but really

413
00:15:34,649 --> 00:15:37,889
quickly we're just gonna drill down and

414
00:15:36,240 --> 00:15:40,379
focus on identities so we're gonna focus

415
00:15:37,889 --> 00:15:41,939
on talking about the bottom my well your

416
00:15:40,379 --> 00:15:47,249
left here

417
00:15:41,939 --> 00:15:48,629
users roles groups credentials and the

418
00:15:47,249 --> 00:15:50,910
important thing to remember is that it's

419
00:15:48,629 --> 00:15:53,220
all pretty self-explanatory but groups

420
00:15:50,910 --> 00:15:55,110
are collections of users well roles are

421
00:15:53,220 --> 00:16:00,899
actually collections of permissions that

422
00:15:55,110 --> 00:16:03,360
can be applied but before we get into IM

423
00:16:00,899 --> 00:16:06,600
it's important to introduce the security

424
00:16:03,360 --> 00:16:08,939
token service STS this is the service

425
00:16:06,600 --> 00:16:12,240
that lets you grab temporary credentials

426
00:16:08,939 --> 00:16:15,389
from iam so you can set up a user with

427
00:16:12,240 --> 00:16:18,899
permissions to access this service for

428
00:16:15,389 --> 00:16:20,639
specific roles or permissions this is

429
00:16:18,899 --> 00:16:23,009
how you know in the diagram there it

430
00:16:20,639 --> 00:16:26,189
shows that you can use it to assume you

431
00:16:23,009 --> 00:16:27,959
know a variety of roles and I'm not

432
00:16:26,189 --> 00:16:29,429
gonna touch on this at any depth but

433
00:16:27,959 --> 00:16:31,729
it's important to give background for

434
00:16:29,429 --> 00:16:33,509
people who may not have used AWS before

435
00:16:31,730 --> 00:16:35,279
because the first thing we're going to

436
00:16:33,509 --> 00:16:38,939
talk about is access management for your

437
00:16:35,279 --> 00:16:41,040
AWS users and the first rule of I am

438
00:16:38,939 --> 00:16:43,199
which is very similar to if you're an

439
00:16:41,040 --> 00:16:44,790
on-prem environment is that no one

440
00:16:43,199 --> 00:16:47,849
should really ever be using the root

441
00:16:44,790 --> 00:16:50,429
account there are a half-dozen AWS

442
00:16:47,850 --> 00:16:54,449
functions that require root this

443
00:16:50,429 --> 00:16:56,249
includes setting up some MFA things as

444
00:16:54,449 --> 00:16:58,469
well as managing the support level of

445
00:16:56,249 --> 00:16:59,790
your account but for the most part the

446
00:16:58,470 --> 00:17:01,559
root account should be treated as a

447
00:16:59,790 --> 00:17:02,699
great glass account you know if

448
00:17:01,559 --> 00:17:04,559
something goes wrong and one of your

449
00:17:02,699 --> 00:17:06,720
administrator accounts is compromised

450
00:17:04,559 --> 00:17:08,730
then you can go into the root but if you

451
00:17:06,720 --> 00:17:11,370
use the root account regularly and lose

452
00:17:08,730 --> 00:17:14,189
control of it if it's breached it can be

453
00:17:11,369 --> 00:17:17,270
really hard to recover from even more so

454
00:17:14,189 --> 00:17:20,039
than you know other sorts of incidents

455
00:17:17,270 --> 00:17:21,480
the next really basic statement is that

456
00:17:20,039 --> 00:17:24,270
you should have a clear link between

457
00:17:21,480 --> 00:17:26,220
users and iam accounts you shouldn't be

458
00:17:24,270 --> 00:17:27,898
creating an OPS account that everyone

459
00:17:26,220 --> 00:17:29,789
shares because it really limits your

460
00:17:27,898 --> 00:17:32,370
audit ability and traceability of

461
00:17:29,789 --> 00:17:34,890
activity down the line so making sure

462
00:17:32,370 --> 00:17:37,080
everyone has at least a account this

463
00:17:34,890 --> 00:17:39,090
isn't saying you know every user can

464
00:17:37,080 --> 00:17:40,830
only have one I am account for example

465
00:17:39,090 --> 00:17:43,080
if you have an elevated account for

466
00:17:40,830 --> 00:17:44,549
certain users or functions but you

467
00:17:43,080 --> 00:17:48,408
should make sure you're never grouping

468
00:17:44,549 --> 00:17:48,408
users into the same iam account

469
00:17:48,420 --> 00:17:55,740
and groups so this is just talking about

470
00:17:53,310 --> 00:17:57,030
how you manage permissions so when

471
00:17:55,740 --> 00:17:58,710
you're managing permissions you should

472
00:17:57,030 --> 00:18:01,860
avoid assigning them to individual users

473
00:17:58,710 --> 00:18:04,260
if someone needs to get right access to

474
00:18:01,860 --> 00:18:06,389
s3 you shouldn't be setting that up so

475
00:18:04,260 --> 00:18:08,220
that you know user X has write access to

476
00:18:06,390 --> 00:18:10,290
s3 instead you should set up everything

477
00:18:08,220 --> 00:18:11,580
through groups so it's easier to

478
00:18:10,290 --> 00:18:13,800
moderate because once your environment

479
00:18:11,580 --> 00:18:15,510
grows and gets complicated tracking who

480
00:18:13,800 --> 00:18:17,430
has what permissions at a granular level

481
00:18:15,510 --> 00:18:19,500
can get really difficult so managing

482
00:18:17,430 --> 00:18:21,720
through that that through groups will

483
00:18:19,500 --> 00:18:25,320
really help with governance down the

484
00:18:21,720 --> 00:18:27,270
line and this is where we get back to

485
00:18:25,320 --> 00:18:29,820
talking about STS so you really can be

486
00:18:27,270 --> 00:18:32,310
using STS as an arbitration layer for

487
00:18:29,820 --> 00:18:34,830
access so you can create users who only

488
00:18:32,310 --> 00:18:37,169
have permission to use STS to assume

489
00:18:34,830 --> 00:18:39,510
roles and this helps ensure that all

490
00:18:37,170 --> 00:18:42,120
credentials are temporary so you don't

491
00:18:39,510 --> 00:18:44,790
have to worry about as much access keys

492
00:18:42,120 --> 00:18:46,530
floating around out there and it also

493
00:18:44,790 --> 00:18:48,629
limits management console user because

494
00:18:46,530 --> 00:18:50,310
if users only have STS permissions they

495
00:18:48,630 --> 00:18:52,350
can't actually log into the console

496
00:18:50,310 --> 00:18:56,280
which in the cloud using the console can

497
00:18:52,350 --> 00:18:57,659
be sort of an anti-pattern also of

498
00:18:56,280 --> 00:18:59,760
course you should be exercising the

499
00:18:57,660 --> 00:19:01,920
principle of least privilege here so you

500
00:18:59,760 --> 00:19:03,720
should be limiting access not everyone

501
00:19:01,920 --> 00:19:06,390
needs to be admin in fact not everyone

502
00:19:03,720 --> 00:19:07,830
needs to write account if you have sales

503
00:19:06,390 --> 00:19:09,780
or support people who need to have

504
00:19:07,830 --> 00:19:12,360
access to logs of specific applications

505
00:19:09,780 --> 00:19:15,810
you should be limiting them to read-only

506
00:19:12,360 --> 00:19:17,850
access of those specific logs and just

507
00:19:15,810 --> 00:19:20,159
kind of being proactive and thinking

508
00:19:17,850 --> 00:19:21,870
about who has what access and why and

509
00:19:20,160 --> 00:19:25,200
making sure it's all intentional is

510
00:19:21,870 --> 00:19:27,149
gonna be a huge step there are a number

511
00:19:25,200 --> 00:19:28,740
of AWS and third-party tools that can

512
00:19:27,150 --> 00:19:31,890
actually help you with this that can

513
00:19:28,740 --> 00:19:34,590
look at historic access patterns and

514
00:19:31,890 --> 00:19:36,630
usage and say okay so this person has

515
00:19:34,590 --> 00:19:38,100
never used their right access let's take

516
00:19:36,630 --> 00:19:42,750
that away I'm so that's definitely

517
00:19:38,100 --> 00:19:45,300
something to investigate even more stuff

518
00:19:42,750 --> 00:19:47,760
multi-factor authentication MFA is a big

519
00:19:45,300 --> 00:19:49,169
thing now everywhere and we're really

520
00:19:47,760 --> 00:19:52,620
hitting the point where pretty much

521
00:19:49,170 --> 00:19:56,340
everything should have MFA in AWS every

522
00:19:52,620 --> 00:19:59,909
human user should be set up with MFA but

523
00:19:56,340 --> 00:20:02,668
especially root and elevated users so

524
00:19:59,910 --> 00:20:04,799
your admins anyone with elevated axe

525
00:20:02,669 --> 00:20:07,289
should be using security tokens for mfa

526
00:20:04,799 --> 00:20:10,279
which AWS started supporting apparently

527
00:20:07,289 --> 00:20:12,779
recently and this is because generally

528
00:20:10,279 --> 00:20:15,419
SMS spaced you know when you get text

529
00:20:12,779 --> 00:20:18,299
message MFA sim swapping has been a huge

530
00:20:15,419 --> 00:20:20,999
thing that's hit the news recently for

531
00:20:18,299 --> 00:20:22,710
time based or forty OTP where you're

532
00:20:20,999 --> 00:20:24,539
kind of using an app to get rotating

533
00:20:22,710 --> 00:20:27,840
tokens or something from a third party

534
00:20:24,539 --> 00:20:29,158
the prom is fishing so we actually had a

535
00:20:27,840 --> 00:20:32,340
consultant recently on an engagement

536
00:20:29,159 --> 00:20:34,799
where he got on the phone with them and

537
00:20:32,340 --> 00:20:35,939
said hey we're migrating your mfa system

538
00:20:34,799 --> 00:20:37,230
and we just need to send you a

539
00:20:35,940 --> 00:20:38,940
verification code to make sure it's

540
00:20:37,230 --> 00:20:41,460
working can you read that off to me and

541
00:20:38,940 --> 00:20:43,470
was in their email sending them an alert

542
00:20:41,460 --> 00:20:46,739
from their mfa system they read him the

543
00:20:43,470 --> 00:20:49,590
code and he was in so that's the problem

544
00:20:46,739 --> 00:20:52,350
with totp but security tokens do prevent

545
00:20:49,590 --> 00:20:54,059
phishing Google's done a lot of research

546
00:20:52,350 --> 00:20:55,918
and written a lot about the use of

547
00:20:54,059 --> 00:20:59,999
security tokens and how it's improved

548
00:20:55,919 --> 00:21:02,190
their environment security also you can

549
00:20:59,999 --> 00:21:05,450
take advantage of policy conditions when

550
00:21:02,190 --> 00:21:08,190
you're writing iam policies and

551
00:21:05,450 --> 00:21:10,169
basically these can set things like a

552
00:21:08,190 --> 00:21:12,809
range of allowable IP addresses maybe

553
00:21:10,169 --> 00:21:14,759
from only your corporate IP space they

554
00:21:12,809 --> 00:21:17,039
can also set date and time ranges for

555
00:21:14,759 --> 00:21:18,509
access so maybe you have a class of

556
00:21:17,039 --> 00:21:21,779
employees you only want to limit to

557
00:21:18,509 --> 00:21:24,090
access during working hours and you can

558
00:21:21,779 --> 00:21:26,070
also require things like SSL or MFA

559
00:21:24,090 --> 00:21:30,629
which this isn't the only way to do it

560
00:21:26,070 --> 00:21:31,859
but it's a defense-in-depth measure so

561
00:21:30,629 --> 00:21:33,418
we're going to talk about access

562
00:21:31,859 --> 00:21:34,830
management for applications here and

563
00:21:33,419 --> 00:21:37,200
what that means really is access

564
00:21:34,830 --> 00:21:39,480
management for ec2 instances that

565
00:21:37,200 --> 00:21:42,210
applications are deployed in when you're

566
00:21:39,480 --> 00:21:44,639
talking in the cloud so the first rule

567
00:21:42,210 --> 00:21:46,350
here is gonna be not to bake in

568
00:21:44,639 --> 00:21:48,570
credentials so if you're creating an

569
00:21:46,350 --> 00:21:50,219
application to run an ec2 and you find

570
00:21:48,570 --> 00:21:52,918
yourself hard coding credentials into

571
00:21:50,220 --> 00:21:55,679
the application or if it's you know an

572
00:21:52,919 --> 00:21:57,029
ec2 instance that's a Windows box and

573
00:21:55,679 --> 00:22:01,109
you find yourself creating a credential

574
00:21:57,029 --> 00:22:05,429
file don't do that you should be using

575
00:22:01,109 --> 00:22:07,350
ec2 instance roles and use the AWS SDK

576
00:22:05,429 --> 00:22:10,200
like we talked about with users to

577
00:22:07,350 --> 00:22:12,719
retrieve temporary credentials this

578
00:22:10,200 --> 00:22:14,789
helps you rotate credentials much easier

579
00:22:12,720 --> 00:22:15,890
it helps you set temporary validity so

580
00:22:14,789 --> 00:22:17,750
you don't have

581
00:22:15,890 --> 00:22:19,640
really long live credentials floating

582
00:22:17,750 --> 00:22:21,530
around in your environment and it also

583
00:22:19,640 --> 00:22:23,780
protects you from default compromised

584
00:22:21,530 --> 00:22:25,760
that if someone breaks into a single ec2

585
00:22:23,780 --> 00:22:27,139
instance they're not guaranteed to get

586
00:22:25,760 --> 00:22:31,660
credentials that allow them to pivot

587
00:22:27,140 --> 00:22:34,820
into your environment that being said

588
00:22:31,660 --> 00:22:36,740
once you start talking about I am roles

589
00:22:34,820 --> 00:22:39,200
you start talking about SSR F which

590
00:22:36,740 --> 00:22:40,670
could be its whole own talk but for

591
00:22:39,200 --> 00:22:44,210
those that aren't familiar really quick

592
00:22:40,670 --> 00:22:48,320
SSR F server-side request forgery is

593
00:22:44,210 --> 00:22:51,110
where you are leveraging application or

594
00:22:48,320 --> 00:22:53,389
server functionality to make a request

595
00:22:51,110 --> 00:22:55,879
on your behalf so an attacker here can

596
00:22:53,390 --> 00:22:58,100
take advantage of the application making

597
00:22:55,880 --> 00:23:01,040
a controllable request and seeing the

598
00:22:58,100 --> 00:23:03,110
response and what this is in AWS is the

599
00:23:01,040 --> 00:23:05,030
metadata service and you'll have heard

600
00:23:03,110 --> 00:23:07,129
about this from breaches from Capital

601
00:23:05,030 --> 00:23:10,490
One and similar and what this looks like

602
00:23:07,130 --> 00:23:12,710
is you can use SSR F to hit the Med data

603
00:23:10,490 --> 00:23:14,600
endpoint which is what ec2 uses to

604
00:23:12,710 --> 00:23:17,870
retrieve these roles and credentials and

605
00:23:14,600 --> 00:23:21,889
if you can get an SSR F vulnerability

606
00:23:17,870 --> 00:23:23,780
you can then grab the ec2 s role so like

607
00:23:21,890 --> 00:23:25,820
we talked about using these roles

608
00:23:23,780 --> 00:23:27,800
instead will prevent anyone from gets

609
00:23:25,820 --> 00:23:30,679
access to that box from having

610
00:23:27,800 --> 00:23:32,240
credentials to your AWS environment but

611
00:23:30,680 --> 00:23:34,070
if you're using I M roles now the

612
00:23:32,240 --> 00:23:36,560
problem becomes how to manage the

613
00:23:34,070 --> 00:23:39,470
metadata service and there's a lot of

614
00:23:36,560 --> 00:23:41,240
hardening possible here other cloud

615
00:23:39,470 --> 00:23:42,950
providers have implemented kind of

616
00:23:41,240 --> 00:23:44,570
hardening on the metadata service and

617
00:23:42,950 --> 00:23:46,160
that's definitely something that if

618
00:23:44,570 --> 00:23:48,020
you're deploying applications in the

619
00:23:46,160 --> 00:23:50,270
cloud you should do a deep dive research

620
00:23:48,020 --> 00:23:55,100
on and I can't really give you a turnkey

621
00:23:50,270 --> 00:23:57,500
solution unfortunately so boiling this

622
00:23:55,100 --> 00:23:59,810
down to the basics the general rule is

623
00:23:57,500 --> 00:24:02,780
that you're gonna prefer i.m roles to

624
00:23:59,810 --> 00:24:05,990
using iam access keys above using kind

625
00:24:02,780 --> 00:24:09,230
of AWS console credentials and this is

626
00:24:05,990 --> 00:24:11,660
clearly a very simplistic model but

627
00:24:09,230 --> 00:24:13,580
whenever you're managing I am in your

628
00:24:11,660 --> 00:24:14,960
cloud if you at least stop and think

629
00:24:13,580 --> 00:24:17,389
okay is the sign that could be better

630
00:24:14,960 --> 00:24:19,220
done through access keys or is this sign

631
00:24:17,390 --> 00:24:22,370
that could be better done through roles

632
00:24:19,220 --> 00:24:23,990
temporary credentials that's a step and

633
00:24:22,370 --> 00:24:26,679
that's you know gonna provide some

634
00:24:23,990 --> 00:24:26,680
hardening to you

635
00:24:27,090 --> 00:24:31,918
okay so we're into monitoring which

636
00:24:29,669 --> 00:24:33,779
means we're talking about logging so

637
00:24:31,919 --> 00:24:35,759
we're just talking about the basics here

638
00:24:33,779 --> 00:24:38,220
how you can kind of start to gather and

639
00:24:35,759 --> 00:24:41,490
synthesize an alert on information in

640
00:24:38,220 --> 00:24:43,470
your cloud logging is an intractable

641
00:24:41,490 --> 00:24:44,970
problem you can always be doing more you

642
00:24:43,470 --> 00:24:46,559
can always be doing better so we're just

643
00:24:44,970 --> 00:24:48,419
gonna hit on the basics here to make

644
00:24:46,559 --> 00:24:50,220
sure your cloud is in one giant blind

645
00:24:48,419 --> 00:24:52,200
spot

646
00:24:50,220 --> 00:24:54,450
so that means cloud trail first of all

647
00:24:52,200 --> 00:24:58,649
cloud trail is the core logging service

648
00:24:54,450 --> 00:25:00,840
in AWS cloud trails where all AWS API

649
00:24:58,649 --> 00:25:03,739
calls are recorded it's enabled by

650
00:25:00,840 --> 00:25:06,360
default saving the last 90 days of logs

651
00:25:03,740 --> 00:25:08,100
and we're going to talk about just a few

652
00:25:06,360 --> 00:25:12,149
best practices which can be split into

653
00:25:08,100 --> 00:25:14,689
detective and preventative controls so

654
00:25:12,149 --> 00:25:17,789
when we're talking detective controls

655
00:25:14,690 --> 00:25:19,980
this includes just creating a trail so

656
00:25:17,789 --> 00:25:22,590
cloud trail by default is on it's

657
00:25:19,980 --> 00:25:24,210
logging for 90 days if you set up an AWS

658
00:25:22,590 --> 00:25:26,549
can go look it looks like you have logs

659
00:25:24,210 --> 00:25:27,929
except for 91 days later you lose all

660
00:25:26,549 --> 00:25:29,850
evidence of what's been happening in

661
00:25:27,929 --> 00:25:32,549
your environment so creating a trail

662
00:25:29,850 --> 00:25:34,529
just persist those two an s3 bucket and

663
00:25:32,549 --> 00:25:37,019
is the bare minimum it's free and every

664
00:25:34,529 --> 00:25:40,049
environment their minimum you should be

665
00:25:37,019 --> 00:25:44,580
doing also important to remember that

666
00:25:40,049 --> 00:25:46,830
cloud trail is regional so for API

667
00:25:44,580 --> 00:25:49,049
access that's recorded in cloud trail

668
00:25:46,830 --> 00:25:50,820
this gets recorded in every region so

669
00:25:49,049 --> 00:25:52,619
cloud roll needs to be on in all regions

670
00:25:50,820 --> 00:25:54,480
and there are some playbooks you can use

671
00:25:52,619 --> 00:25:56,730
to kind of set up cloud trail in all

672
00:25:54,480 --> 00:25:58,619
regions because will happen is if in

673
00:25:56,730 --> 00:26:00,210
case of a breach attackers the first

674
00:25:58,619 --> 00:26:02,428
thing they'll do is to move to a disused

675
00:26:00,210 --> 00:26:05,879
region because then you have no

676
00:26:02,429 --> 00:26:08,549
auditability there there are also some

677
00:26:05,879 --> 00:26:11,158
global events like management console

678
00:26:08,549 --> 00:26:12,749
access is recorded globally so you just

679
00:26:11,159 --> 00:26:14,730
need make sure that once you turn on all

680
00:26:12,749 --> 00:26:16,950
regions you're only logging global

681
00:26:14,730 --> 00:26:18,360
events once so you don't wanna be

682
00:26:16,950 --> 00:26:20,429
logging global events to every region

683
00:26:18,360 --> 00:26:27,209
because then you're getting 25 copies of

684
00:26:20,429 --> 00:26:29,850
every global event and the next thing to

685
00:26:27,210 --> 00:26:31,740
talk about is log file integrity this

686
00:26:29,850 --> 00:26:33,990
can give you validate log files which is

687
00:26:31,740 --> 00:26:37,259
super helpful in forensics especially if

688
00:26:33,990 --> 00:26:40,169
you then proceed into legal realm and

689
00:26:37,259 --> 00:26:40,820
need evidence and evidentiary law these

690
00:26:40,169 --> 00:26:43,009
can

691
00:26:40,820 --> 00:26:44,928
both that the log file hasn't been

692
00:26:43,009 --> 00:26:47,450
modified which is a huge concern during

693
00:26:44,929 --> 00:26:49,250
instant response as well as specific

694
00:26:47,450 --> 00:26:53,210
users having performed specific API

695
00:26:49,250 --> 00:26:54,620
activity and the final detective control

696
00:26:53,210 --> 00:26:56,720
is going to be integration with cloud

697
00:26:54,620 --> 00:26:59,719
watch which I will return to in one

698
00:26:56,720 --> 00:27:01,429
second but effectively if you're using

699
00:26:59,720 --> 00:27:03,350
cloud trail great you have log sitting a

700
00:27:01,429 --> 00:27:07,190
bucket you're not doing anything with

701
00:27:03,350 --> 00:27:08,959
them there but when we talk about

702
00:27:07,190 --> 00:27:11,870
preventative controls what we're talking

703
00:27:08,960 --> 00:27:13,820
about is ensuring the kind of CIA triad

704
00:27:11,870 --> 00:27:19,279
the confidentiality integrity and

705
00:27:13,820 --> 00:27:20,928
availability of your logs just got a pop

706
00:27:19,279 --> 00:27:23,029
all these up so I can quickly blow

707
00:27:20,929 --> 00:27:24,799
through them so the first thing is store

708
00:27:23,029 --> 00:27:26,539
your logs in an unlinked account if you

709
00:27:24,799 --> 00:27:28,370
keep your logs in the same account as

710
00:27:26,539 --> 00:27:29,929
everything else if that account is

711
00:27:28,370 --> 00:27:32,629
breached you will have no logs so the

712
00:27:29,929 --> 00:27:34,730
easiest way to ensure that that

713
00:27:32,629 --> 00:27:37,158
privilege is separated is to put them in

714
00:27:34,730 --> 00:27:39,320
an unlinked account you could then

715
00:27:37,159 --> 00:27:42,169
exercise lease privilege like we all

716
00:27:39,320 --> 00:27:44,570
return to constantly here and those logs

717
00:27:42,169 --> 00:27:46,460
if those are your security logs they

718
00:27:44,570 --> 00:27:47,779
should have very minimal access these

719
00:27:46,460 --> 00:27:49,789
should not be saying you're accessing

720
00:27:47,779 --> 00:27:51,919
every day and everyone can hit because

721
00:27:49,789 --> 00:27:55,129
then you have a broader threat surface

722
00:27:51,919 --> 00:27:58,759
as well as enabling mfa delete which

723
00:27:55,129 --> 00:28:02,178
requires an extra MFA component to

724
00:27:58,759 --> 00:28:03,769
delete the logs or the bucket to once

725
00:28:02,179 --> 00:28:05,509
again ensure that in the case of an

726
00:28:03,769 --> 00:28:06,950
incident the problem being once

727
00:28:05,509 --> 00:28:08,659
someone's compromised your environment

728
00:28:06,950 --> 00:28:10,340
they have access in your environment so

729
00:28:08,659 --> 00:28:12,139
you're trying to build defense-in-depth

730
00:28:10,340 --> 00:28:14,870
here to make sure that they can't affect

731
00:28:12,139 --> 00:28:18,139
the logging of what happened

732
00:28:14,870 --> 00:28:19,850
and finally AWS cloud trophallaxis is a

733
00:28:18,139 --> 00:28:21,799
specific permission that you need to be

734
00:28:19,850 --> 00:28:23,840
very careful around because it will let

735
00:28:21,799 --> 00:28:25,580
people mess with your logs so this is

736
00:28:23,840 --> 00:28:27,830
like one specific permission that you

737
00:28:25,580 --> 00:28:32,178
should look out for and really audit who

738
00:28:27,830 --> 00:28:35,199
has access to it and why so like I said

739
00:28:32,179 --> 00:28:38,179
cloud wash detective control cloud watch

740
00:28:35,200 --> 00:28:40,879
records a subset of API calls it's kind

741
00:28:38,179 --> 00:28:43,250
of like your sim you can set up metrics

742
00:28:40,879 --> 00:28:45,168
alarms for violation cases so you can

743
00:28:43,250 --> 00:28:48,799
set up metrics for what looks like

744
00:28:45,169 --> 00:28:51,440
brute-force attempts on RDP or SSH or

745
00:28:48,799 --> 00:28:53,149
inbound or outbound traffic to known bad

746
00:28:51,440 --> 00:28:54,380
IPS if you're working off some sort of

747
00:28:53,149 --> 00:28:57,080
blacklist there

748
00:28:54,380 --> 00:28:58,670
as well as signs of data exfiltration so

749
00:28:57,080 --> 00:29:01,520
this is where you can set up your alerts

750
00:28:58,670 --> 00:29:06,230
based on your logs well one of the

751
00:29:01,520 --> 00:29:09,080
places you can set up alerts CloudWatch

752
00:29:06,230 --> 00:29:10,730
huge topic tuning your cloud watch is

753
00:29:09,080 --> 00:29:12,860
going to be an ongoing project and we're

754
00:29:10,730 --> 00:29:14,540
knocking into it here but the other

755
00:29:12,860 --> 00:29:16,699
thing to mention login monitoring is

756
00:29:14,540 --> 00:29:20,210
that there are other services that have

757
00:29:16,700 --> 00:29:21,950
kind of proprietary logging to them that

758
00:29:20,210 --> 00:29:23,450
you should be aware of including kind of

759
00:29:21,950 --> 00:29:27,740
VPC Network logs

760
00:29:23,450 --> 00:29:29,330
s3 bucket access ELB web access logs and

761
00:29:27,740 --> 00:29:30,140
CloudFront cache requests these are all

762
00:29:29,330 --> 00:29:32,419
things that you should make sure

763
00:29:30,140 --> 00:29:38,990
independently managed and flow into your

764
00:29:32,420 --> 00:29:40,670
centralized blogs awesome ok so the next

765
00:29:38,990 --> 00:29:42,140
thing that I'm just gonna touch on here

766
00:29:40,670 --> 00:29:43,430
is we've already mentioned some tools

767
00:29:42,140 --> 00:29:45,260
you mentioned cloud trail we've

768
00:29:43,430 --> 00:29:47,390
mentioned cloud watch but there are a

769
00:29:45,260 --> 00:29:50,030
lot of built in AWS security services

770
00:29:47,390 --> 00:29:51,980
and I'm just wanna highlight that there

771
00:29:50,030 --> 00:29:54,980
are a handful of them that are really

772
00:29:51,980 --> 00:29:57,050
low trade-off to turn on relatively low

773
00:29:54,980 --> 00:29:58,880
cost in any you know average-size

774
00:29:57,050 --> 00:30:01,550
environment if you're running a massive

775
00:29:58,880 --> 00:30:03,170
multi-million dollar AWS bill you have a

776
00:30:01,550 --> 00:30:05,090
professional look at how much these will

777
00:30:03,170 --> 00:30:07,460
cost you so I'm not gonna hand waive a

778
00:30:05,090 --> 00:30:10,639
number here but none of these are

779
00:30:07,460 --> 00:30:13,160
inherently prohibitively expensive so

780
00:30:10,640 --> 00:30:15,350
like we said cloud trail trust adviser

781
00:30:13,160 --> 00:30:18,170
to tools we've talked about their you

782
00:30:15,350 --> 00:30:20,240
know their use case but the three other

783
00:30:18,170 --> 00:30:22,430
essential services and I'm gonna try and

784
00:30:20,240 --> 00:30:25,220
kind of blow through this our guard duty

785
00:30:22,430 --> 00:30:27,890
inspector and security hub so guard duty

786
00:30:25,220 --> 00:30:29,630
is threat detection and continuous

787
00:30:27,890 --> 00:30:31,730
monitoring including with third-party

788
00:30:29,630 --> 00:30:34,760
threat intelligence providers so this is

789
00:30:31,730 --> 00:30:37,070
kind of AWS using their huge corpus of

790
00:30:34,760 --> 00:30:39,830
data and machine learning to identify

791
00:30:37,070 --> 00:30:41,090
anomalies and detect based on that as

792
00:30:39,830 --> 00:30:43,010
well as with other threat intelligence

793
00:30:41,090 --> 00:30:44,570
feeds so if you're already using a

794
00:30:43,010 --> 00:30:46,460
threat intelligence provider they

795
00:30:44,570 --> 00:30:49,100
probably integrate with guard duty and

796
00:30:46,460 --> 00:30:51,650
you can centralize their inspector is

797
00:30:49,100 --> 00:30:55,129
there automated security assessment tool

798
00:30:51,650 --> 00:30:57,200
for ec2 instances this checks for both

799
00:30:55,130 --> 00:30:58,700
network accessibility so once again a

800
00:30:57,200 --> 00:31:01,130
place to catch if you have unintended

801
00:30:58,700 --> 00:31:04,010
public exposure and it also does some

802
00:31:01,130 --> 00:31:06,800
checks for vulnerabilities mostly based

803
00:31:04,010 --> 00:31:07,850
around sea bees so this would be like

804
00:31:06,800 --> 00:31:10,340
running necessary

805
00:31:07,850 --> 00:31:13,010
exposed but it's native to AWS super

806
00:31:10,340 --> 00:31:14,840
easy to turn on schedule and feed-in

807
00:31:13,010 --> 00:31:17,720
with all your other security reporting

808
00:31:14,840 --> 00:31:20,000
and that all feeds to security hub which

809
00:31:17,720 --> 00:31:21,950
is kind of the root source of truth for

810
00:31:20,000 --> 00:31:24,980
security in AWS this is where you should

811
00:31:21,950 --> 00:31:26,780
be aggregating alerts including from all

812
00:31:24,980 --> 00:31:30,289
of these tools we've mentioned as well

813
00:31:26,780 --> 00:31:32,330
as third parties so security hub is

814
00:31:30,289 --> 00:31:36,169
relatively new it when general access

815
00:31:32,330 --> 00:31:38,720
earlier this year but AWS partners can

816
00:31:36,169 --> 00:31:40,370
integrate which means they just publish

817
00:31:38,720 --> 00:31:42,289
their results in a way that's consumable

818
00:31:40,370 --> 00:31:43,969
by security hub and so if you're using

819
00:31:42,289 --> 00:31:45,919
vendors check if they have a security

820
00:31:43,970 --> 00:31:47,570
hub integration because ideally you

821
00:31:45,919 --> 00:31:50,570
should be able to centralize all your

822
00:31:47,570 --> 00:31:54,379
AWS security alerting and information to

823
00:31:50,570 --> 00:31:56,780
security hub a benefit of these services

824
00:31:54,380 --> 00:31:58,909
on top of them being an AWS native is

825
00:31:56,780 --> 00:32:00,530
that they get regular updates so guard

826
00:31:58,909 --> 00:32:02,870
duty especially is constantly getting

827
00:32:00,530 --> 00:32:05,360
new checks and new rules and the

828
00:32:02,870 --> 00:32:07,039
algorithms evolving based off of

829
00:32:05,360 --> 00:32:11,840
Amazon's data so you're getting full

830
00:32:07,039 --> 00:32:13,280
advantage of that on an ongoing basis so

831
00:32:11,840 --> 00:32:15,350
like I said earlier there are some

832
00:32:13,280 --> 00:32:16,760
topics that are just really complicated

833
00:32:15,350 --> 00:32:18,590
in the cloud and there was no way I was

834
00:32:16,760 --> 00:32:20,990
going to dive into them at any depth in

835
00:32:18,590 --> 00:32:24,199
50 minutes the first of these is

836
00:32:20,990 --> 00:32:25,970
encryption and that is a hyperlink to a

837
00:32:24,200 --> 00:32:27,350
talk which by the way I will link to

838
00:32:25,970 --> 00:32:30,200
these slides at the end so all the

839
00:32:27,350 --> 00:32:32,809
hyperlinks will work so don't panic but

840
00:32:30,200 --> 00:32:34,789
that's very google-able so reinforce was

841
00:32:32,809 --> 00:32:36,620
their first annual security conference

842
00:32:34,789 --> 00:32:38,830
it was actually held in Boston this year

843
00:32:36,620 --> 00:32:40,939
and this talk will talk you through

844
00:32:38,830 --> 00:32:43,668
managing the various services

845
00:32:40,940 --> 00:32:45,530
configurations and defaults across AWS

846
00:32:43,669 --> 00:32:48,110
because encryption is something that AWS

847
00:32:45,530 --> 00:32:50,240
does not have standardized at all it's

848
00:32:48,110 --> 00:32:52,428
on by default for some services it's off

849
00:32:50,240 --> 00:32:54,320
by default for some services they have

850
00:32:52,429 --> 00:32:57,320
it in the weirdest places and don't have

851
00:32:54,320 --> 00:33:00,470
it as well one kind of edge case was

852
00:32:57,320 --> 00:33:02,629
that most recently they finally started

853
00:33:00,470 --> 00:33:04,100
encrypting traffic between buildings in

854
00:33:02,630 --> 00:33:07,490
their data centers because they have

855
00:33:04,100 --> 00:33:09,350
these sprawling data centers and for

856
00:33:07,490 --> 00:33:11,539
whatever reason encryption was happening

857
00:33:09,350 --> 00:33:13,340
inside each data center and between data

858
00:33:11,539 --> 00:33:15,830
centers but not between individual

859
00:33:13,340 --> 00:33:19,428
buildings so there's all these kind of

860
00:33:15,830 --> 00:33:21,020
edge cases to think about but definitely

861
00:33:19,429 --> 00:33:23,270
saying to start there thinking

862
00:33:21,020 --> 00:33:25,490
and you can have an ongoing maturity

863
00:33:23,270 --> 00:33:29,780
process here if you look at encryption

864
00:33:25,490 --> 00:33:33,350
in AWS and this presentation is a great

865
00:33:29,780 --> 00:33:35,510
place to start and then another

866
00:33:33,350 --> 00:33:37,490
conversation which the first link there

867
00:33:35,510 --> 00:33:40,520
is actually a b-sides presentation that

868
00:33:37,490 --> 00:33:44,960
focused exclusively on instant response

869
00:33:40,520 --> 00:33:46,850
in AWS the kind of endless question of

870
00:33:44,960 --> 00:33:48,770
instant responses that you need to be

871
00:33:46,850 --> 00:33:51,350
ready for it before an instant happens

872
00:33:48,770 --> 00:33:53,389
you can't retroactively lis fix not

873
00:33:51,350 --> 00:33:55,370
being prepared for an incident so

874
00:33:53,390 --> 00:33:57,980
starting to think about what this looks

875
00:33:55,370 --> 00:34:00,110
like in AWS specifically they have

876
00:33:57,980 --> 00:34:02,000
plenty of materials out there that can

877
00:34:00,110 --> 00:34:04,428
point you in the right direction but if

878
00:34:02,000 --> 00:34:06,980
you're highly invested in AWS you need

879
00:34:04,429 --> 00:34:09,050
to think about the you know worst case

880
00:34:06,980 --> 00:34:10,969
scenario if there is an incident are you

881
00:34:09,050 --> 00:34:13,970
ready do you have logging and monitoring

882
00:34:10,969 --> 00:34:16,759
and response playbooks and are things

883
00:34:13,969 --> 00:34:18,859
automated that can be and that can be a

884
00:34:16,760 --> 00:34:20,840
really involved process and it's good to

885
00:34:18,860 --> 00:34:26,270
look to at least some AWS standards

886
00:34:20,840 --> 00:34:28,550
there and so this is kind of the big

887
00:34:26,270 --> 00:34:30,889
bucket of information to point you to

888
00:34:28,550 --> 00:34:34,010
for next step so I tried to synthesize a

889
00:34:30,889 --> 00:34:35,480
lot of this really really basically but

890
00:34:34,010 --> 00:34:38,270
if you haven't looked at these and

891
00:34:35,480 --> 00:34:40,129
you're kind of just making move into AWS

892
00:34:38,270 --> 00:34:41,270
or maybe you have a legacy environment

893
00:34:40,129 --> 00:34:43,969
that you poured it over and you're

894
00:34:41,270 --> 00:34:46,159
starting to think about AWS idioms these

895
00:34:43,969 --> 00:34:48,678
are the AWS resources that you should be

896
00:34:46,159 --> 00:34:51,050
looking at so the well architected

897
00:34:48,679 --> 00:34:53,119
framework has a lot of information on

898
00:34:51,050 --> 00:34:55,550
architecting AWS but specifically the

899
00:34:53,119 --> 00:34:57,380
security pillar is relevant here there's

900
00:34:55,550 --> 00:34:59,060
information on cloud adoption aligning

901
00:34:57,380 --> 00:35:00,830
to NIST as well as the security

902
00:34:59,060 --> 00:35:04,790
documentation within the past six months

903
00:35:00,830 --> 00:35:06,109
has finally been centralized so like I

904
00:35:04,790 --> 00:35:08,359
said slides will be published if you

905
00:35:06,109 --> 00:35:10,310
want click through but these are sort of

906
00:35:08,359 --> 00:35:12,500
if you wanted to spend three weeks

907
00:35:10,310 --> 00:35:14,619
reading about AWS security this is where

908
00:35:12,500 --> 00:35:18,650
I'd start

909
00:35:14,619 --> 00:35:22,430
ok so that was the best practices that

910
00:35:18,650 --> 00:35:24,230
was a deluge of information the thing

911
00:35:22,430 --> 00:35:25,549
with these open source auditing tools

912
00:35:24,230 --> 00:35:28,070
we're going to talk about is that they

913
00:35:25,550 --> 00:35:29,780
will flag not doing most of the things

914
00:35:28,070 --> 00:35:31,670
I've talked about so if you just go back

915
00:35:29,780 --> 00:35:33,680
and you have an AWS environment and you

916
00:35:31,670 --> 00:35:34,780
run these tools you will very quickly

917
00:35:33,680 --> 00:35:37,180
start seeing

918
00:35:34,780 --> 00:35:39,730
you know maybe you don't have MFA delete

919
00:35:37,180 --> 00:35:41,649
on your logging whatever it is if I've

920
00:35:39,730 --> 00:35:44,710
talked about it these tools will catch

921
00:35:41,650 --> 00:35:46,720
it I'm familiar with all these tools

922
00:35:44,710 --> 00:35:49,750
from client engagements when we get

923
00:35:46,720 --> 00:35:51,819
hired to do a security audit in AWS this

924
00:35:49,750 --> 00:35:53,980
is the first thing I do because it's

925
00:35:51,820 --> 00:35:56,020
such an easy win to catch hardening

926
00:35:53,980 --> 00:35:57,850
measures that are missing none of this

927
00:35:56,020 --> 00:36:00,430
is gonna be exploit chains I'm not

928
00:35:57,850 --> 00:36:02,080
talking about pentesting AWS here it's a

929
00:36:00,430 --> 00:36:04,149
totally different beast but what this is

930
00:36:02,080 --> 00:36:06,520
is making sure you have configuration

931
00:36:04,150 --> 00:36:08,440
and hardening in place to make my life

932
00:36:06,520 --> 00:36:11,259
really difficult if I then come back and

933
00:36:08,440 --> 00:36:14,590
do a pen test these tools are great

934
00:36:11,260 --> 00:36:16,600
because they're free they don't require

935
00:36:14,590 --> 00:36:18,250
any special configuration so none of

936
00:36:16,600 --> 00:36:20,259
these tools need you to write rules

937
00:36:18,250 --> 00:36:22,960
specific for your environment by default

938
00:36:20,260 --> 00:36:25,060
at least and they only require read-only

939
00:36:22,960 --> 00:36:28,450
access so all of these tools leverage

940
00:36:25,060 --> 00:36:30,040
the AWS CLI or api's and you have to

941
00:36:28,450 --> 00:36:32,410
give them a read-only access which

942
00:36:30,040 --> 00:36:33,910
requires a trust relationship if you run

943
00:36:32,410 --> 00:36:35,980
them yourselves or whoever's running

944
00:36:33,910 --> 00:36:38,470
them but they can't really break your

945
00:36:35,980 --> 00:36:40,120
environment don't hold me to that they

946
00:36:38,470 --> 00:36:41,859
shouldn't really break your environment

947
00:36:40,120 --> 00:36:43,120
I don't know your environments I don't

948
00:36:41,860 --> 00:36:46,090
know what sort of weird things you're

949
00:36:43,120 --> 00:36:48,279
doing to actually test these tools I

950
00:36:46,090 --> 00:36:49,720
ended up open sourcing a tool called sad

951
00:36:48,280 --> 00:36:52,000
cloud which helps you stand up an

952
00:36:49,720 --> 00:36:54,220
insecure AWS environment so if you're

953
00:36:52,000 --> 00:36:55,690
playing around with AWS security maybe

954
00:36:54,220 --> 00:36:57,009
you don't work at a company that's in

955
00:36:55,690 --> 00:37:00,370
the cloud yet and you want to start

956
00:36:57,010 --> 00:37:02,440
exploring this we made a collection of

957
00:37:00,370 --> 00:37:05,140
terraform scripts that will throw up

958
00:37:02,440 --> 00:37:07,380
tons of flags with any AWS security tool

959
00:37:05,140 --> 00:37:09,759
you can spit pick specific

960
00:37:07,380 --> 00:37:12,790
vulnerabilities or just you know throw

961
00:37:09,760 --> 00:37:15,250
the kitchen sink there it cost I believe

962
00:37:12,790 --> 00:37:17,740
like $5 to run for 48 hours with

963
00:37:15,250 --> 00:37:20,020
everything turned on so not a huge

964
00:37:17,740 --> 00:37:22,180
expense but resources in the cloud do

965
00:37:20,020 --> 00:37:24,160
cost money and this is insecure if you

966
00:37:22,180 --> 00:37:25,690
take this and run this in your cloud I'm

967
00:37:24,160 --> 00:37:28,240
legally obligated to warn you it's not

968
00:37:25,690 --> 00:37:31,060
my fault send up in a separate account

969
00:37:28,240 --> 00:37:32,680
it's supposed to be bad also please

970
00:37:31,060 --> 00:37:34,210
don't report security vulnerabilities in

971
00:37:32,680 --> 00:37:36,720
my intentionally vulnerable cloud tool

972
00:37:34,210 --> 00:37:40,420
thank you

973
00:37:36,720 --> 00:37:42,970
so Saeng to note about these cloud

974
00:37:40,420 --> 00:37:45,520
auditing tools is that they all will

975
00:37:42,970 --> 00:37:48,399
recommend you use AWS managed policies

976
00:37:45,520 --> 00:37:50,200
for access so AWS has a secured

977
00:37:48,400 --> 00:37:52,720
auditor policy that's supposed to give

978
00:37:50,200 --> 00:37:54,819
read-only access the problem being they

979
00:37:52,720 --> 00:37:56,620
don't maintain that policy that policy

980
00:37:54,820 --> 00:37:58,900
sometimes lags eight or twelve months

981
00:37:56,620 --> 00:38:01,120
behind feature release so you're gonna

982
00:37:58,900 --> 00:38:03,940
also have to set kind of read-only

983
00:38:01,120 --> 00:38:05,380
access across the board something to

984
00:38:03,940 --> 00:38:06,940
keep in mind if tools aren't running

985
00:38:05,380 --> 00:38:09,340
correctly and you're saying the security

986
00:38:06,940 --> 00:38:14,350
auditor is add the read-only all access

987
00:38:09,340 --> 00:38:16,060
policy all right so I'm gonna preface

988
00:38:14,350 --> 00:38:17,470
with saying this could be a live demo

989
00:38:16,060 --> 00:38:20,650
but it won't be because I don't like

990
00:38:17,470 --> 00:38:22,450
playing with fire that much the first

991
00:38:20,650 --> 00:38:24,490
thing I want to point to is this is just

992
00:38:22,450 --> 00:38:27,879
a small example of the many many tools

993
00:38:24,490 --> 00:38:31,029
that can help you audit for leaking your

994
00:38:27,880 --> 00:38:32,980
AWS secrets and get commits it is a

995
00:38:31,030 --> 00:38:35,230
problem I have seen it in practice

996
00:38:32,980 --> 00:38:37,870
numerous times this is the sort of thing

997
00:38:35,230 --> 00:38:39,490
that people make $5,000 off your bug

998
00:38:37,870 --> 00:38:42,430
bounty program because they rent it and

999
00:38:39,490 --> 00:38:47,229
you didn't really easy to run any of

1000
00:38:42,430 --> 00:38:49,690
these tools and they'll flag credentials

1001
00:38:47,230 --> 00:38:52,360
and get in get files I actually ran get

1002
00:38:49,690 --> 00:38:54,550
robbed once doing a bug bounty I ran it

1003
00:38:52,360 --> 00:38:56,140
against a company get robbed actually

1004
00:38:54,550 --> 00:38:58,450
finds all the members of the git

1005
00:38:56,140 --> 00:39:01,450
organization and then runs it itself

1006
00:38:58,450 --> 00:39:04,839
against those employees I found in

1007
00:39:01,450 --> 00:39:07,390
employees dot file AWS access key and

1008
00:39:04,840 --> 00:39:09,220
secret I went great this is gonna get me

1009
00:39:07,390 --> 00:39:12,670
some money turns out it was for his most

1010
00:39:09,220 --> 00:39:14,200
recent employer before the bug bounty so

1011
00:39:12,670 --> 00:39:16,660
that was a whole fun disclosure process

1012
00:39:14,200 --> 00:39:18,520
but this is out there it's getting

1013
00:39:16,660 --> 00:39:20,980
better github does have some token

1014
00:39:18,520 --> 00:39:22,780
scanning by default with partners you

1015
00:39:20,980 --> 00:39:26,110
can also do kind of preventative

1016
00:39:22,780 --> 00:39:28,150
controls by using tooling to do pre

1017
00:39:26,110 --> 00:39:30,280
commit scanning because once the

1018
00:39:28,150 --> 00:39:31,780
credentials in git it doesn't matter if

1019
00:39:30,280 --> 00:39:33,040
you identify it you still have to go

1020
00:39:31,780 --> 00:39:35,950
through the whole rotation process

1021
00:39:33,040 --> 00:39:37,600
analyze your logs for activity so try

1022
00:39:35,950 --> 00:39:43,200
and start catching these things at pre

1023
00:39:37,600 --> 00:39:45,700
commit there's a lot of ways to do this

1024
00:39:43,200 --> 00:39:47,830
none of these is better than any of the

1025
00:39:45,700 --> 00:39:49,060
others pick your favorite but definitely

1026
00:39:47,830 --> 00:39:50,319
something that could be fun to go home

1027
00:39:49,060 --> 00:39:52,900
and run against your github organization

1028
00:39:50,320 --> 00:39:54,580
if you guys have a public profile and

1029
00:39:52,900 --> 00:39:58,510
there are similar tools for other

1030
00:39:54,580 --> 00:40:00,310
version control systems as well so the

1031
00:39:58,510 --> 00:40:01,600
first actual open source auditing tool

1032
00:40:00,310 --> 00:40:02,390
we're going to talk about is Prowler

1033
00:40:01,600 --> 00:40:04,160
full credit

1034
00:40:02,390 --> 00:40:07,549
to this guy who made it because it

1035
00:40:04,160 --> 00:40:08,779
wasn't me this is a Bosch based tool

1036
00:40:07,550 --> 00:40:10,340
which is really great because it's

1037
00:40:08,780 --> 00:40:13,310
pretty easy to use in almost any

1038
00:40:10,340 --> 00:40:15,920
environment very minimal setup it does

1039
00:40:13,310 --> 00:40:17,900
around 50 checks for the CIS AWS

1040
00:40:15,920 --> 00:40:23,720
benchmark and then it has some special

1041
00:40:17,900 --> 00:40:26,690
checks for GD P R and HIPPA it is pretty

1042
00:40:23,720 --> 00:40:28,640
good it's an easy win this is kind of

1043
00:40:26,690 --> 00:40:30,230
what results will look like I threw this

1044
00:40:28,640 --> 00:40:32,990
one up because it talks about

1045
00:40:30,230 --> 00:40:37,700
configuring cloud Watch alerts for cloud

1046
00:40:32,990 --> 00:40:40,129
trail like I said earlier this flags

1047
00:40:37,700 --> 00:40:42,649
alone 15 different things you should be

1048
00:40:40,130 --> 00:40:44,390
monitoring for in cloud watch running

1049
00:40:42,650 --> 00:40:45,710
these tools and seeing that maybe you're

1050
00:40:44,390 --> 00:40:50,839
only doing half of these is a really

1051
00:40:45,710 --> 00:40:53,570
easy win but it's a pretty ugly output

1052
00:40:50,840 --> 00:40:56,060
and it's all in bash so it's a good tool

1053
00:40:53,570 --> 00:40:57,560
to run because it's quick but it doesn't

1054
00:40:56,060 --> 00:40:58,670
get you quite as much as the next two

1055
00:40:57,560 --> 00:41:00,490
I'm going to talk about and this is

1056
00:40:58,670 --> 00:41:03,290
another example which is talking about

1057
00:41:00,490 --> 00:41:05,629
encryption so like I said encryption is

1058
00:41:03,290 --> 00:41:07,700
complicated and these auditing tools can

1059
00:41:05,630 --> 00:41:09,500
help you catch those edge cases where

1060
00:41:07,700 --> 00:41:11,689
you know maybe you're not applying it or

1061
00:41:09,500 --> 00:41:15,800
maybe the default is less secure than

1062
00:41:11,690 --> 00:41:18,860
you expected the next tool is actually

1063
00:41:15,800 --> 00:41:20,810
from duo Labs and Scott Piper Scott's an

1064
00:41:18,860 --> 00:41:23,060
independent alw a security consultant

1065
00:41:20,810 --> 00:41:26,120
he's done a lot of work on AWS security

1066
00:41:23,060 --> 00:41:27,860
definitely someone to check out this

1067
00:41:26,120 --> 00:41:30,200
tool cloud mapper does a lot more than

1068
00:41:27,860 --> 00:41:32,090
just audit it will do web of trust so

1069
00:41:30,200 --> 00:41:34,069
it'll identify if there are any AWS

1070
00:41:32,090 --> 00:41:34,850
accounts that have trust relationships

1071
00:41:34,070 --> 00:41:37,550
with yours

1072
00:41:34,850 --> 00:41:39,860
it also can do Network Maps and can find

1073
00:41:37,550 --> 00:41:42,350
public host and port ranges yet another

1074
00:41:39,860 --> 00:41:44,480
way to solve that public access auditing

1075
00:41:42,350 --> 00:41:47,120
problem but what we're going to talk

1076
00:41:44,480 --> 00:41:49,940
about right now is just the security

1077
00:41:47,120 --> 00:41:51,710
auditing findings the special thing

1078
00:41:49,940 --> 00:41:53,750
about cloud mapper versus the other two

1079
00:41:51,710 --> 00:41:57,260
tools is that Scott did some original

1080
00:41:53,750 --> 00:41:59,090
research on AWS managed policies and

1081
00:41:57,260 --> 00:42:00,920
found that they had published a lot of

1082
00:41:59,090 --> 00:42:03,290
insecure managed policies so if you were

1083
00:42:00,920 --> 00:42:04,700
blindly trusting that eight of us

1084
00:42:03,290 --> 00:42:07,220
wouldn't give me a cloud formation

1085
00:42:04,700 --> 00:42:09,350
read-only policy that let people write

1086
00:42:07,220 --> 00:42:11,270
to cloud formation well one

1087
00:42:09,350 --> 00:42:15,110
unfortunately you'd be wrong and to this

1088
00:42:11,270 --> 00:42:15,920
tool we'll check that so he is working

1089
00:42:15,110 --> 00:42:17,870
off a specific

1090
00:42:15,920 --> 00:42:22,190
list of bad policies frequently they

1091
00:42:17,870 --> 00:42:24,200
allow privilege escalation this was a

1092
00:42:22,190 --> 00:42:26,840
set of policies that failed to enforce

1093
00:42:24,200 --> 00:42:28,609
MFA appropriately so definitely

1094
00:42:26,840 --> 00:42:30,560
something worth running especially if

1095
00:42:28,610 --> 00:42:32,570
you already think you're doing a pretty

1096
00:42:30,560 --> 00:42:34,910
good job of cloud security maybe you've

1097
00:42:32,570 --> 00:42:37,340
run other auditing tools these rules are

1098
00:42:34,910 --> 00:42:39,379
pretty specific to cloud mapper and

1099
00:42:37,340 --> 00:42:43,400
might catch something really important

1100
00:42:39,380 --> 00:42:44,960
for you awesome

1101
00:42:43,400 --> 00:42:47,780
so the final tool I'm gonna talk about

1102
00:42:44,960 --> 00:42:54,290
is scout suite which is NCC's tool

1103
00:42:47,780 --> 00:42:56,030
actually it is better supported than the

1104
00:42:54,290 --> 00:42:57,770
other two because we are behind it and

1105
00:42:56,030 --> 00:43:00,380
supporting it actively we're constantly

1106
00:42:57,770 --> 00:43:02,930
developing it's also multi cloud unlike

1107
00:43:00,380 --> 00:43:04,430
cloud mapper and Prowler so if you are

1108
00:43:02,930 --> 00:43:06,500
in a multi cloud environment or

1109
00:43:04,430 --> 00:43:10,069
Enterprise it might be worth it for that

1110
00:43:06,500 --> 00:43:11,900
it supports GCP Azure and AWS right now

1111
00:43:10,070 --> 00:43:13,940
it also is building out support for

1112
00:43:11,900 --> 00:43:18,170
Oracle or Alibaba if you're invested in

1113
00:43:13,940 --> 00:43:20,150
those clouds it has I think around 115

1114
00:43:18,170 --> 00:43:23,120
findings right now across a variety of

1115
00:43:20,150 --> 00:43:26,270
services in AWS and it produces this

1116
00:43:23,120 --> 00:43:27,980
nice HTML report which also has a dark

1117
00:43:26,270 --> 00:43:32,509
mode which is one of the best selling

1118
00:43:27,980 --> 00:43:34,190
points so kind of looking at what the

1119
00:43:32,510 --> 00:43:36,560
dashboards will look like so right here

1120
00:43:34,190 --> 00:43:38,840
we're looking inside the s3 dashboard

1121
00:43:36,560 --> 00:43:40,640
and if you read through those findings

1122
00:43:38,840 --> 00:43:42,350
you'll see that it's a lot of the same

1123
00:43:40,640 --> 00:43:46,250
things I was talking about with basic

1124
00:43:42,350 --> 00:43:47,900
hardening measures but you know this is

1125
00:43:46,250 --> 00:43:50,270
in the insecure clouds they're all

1126
00:43:47,900 --> 00:43:52,340
flagged it might be that you have a much

1127
00:43:50,270 --> 00:43:55,040
nicer looking dashboard than this all

1128
00:43:52,340 --> 00:43:57,020
the red might not be there but it can

1129
00:43:55,040 --> 00:43:58,940
help you find blind spots and you know

1130
00:43:57,020 --> 00:44:01,610
the needle in the haystack of MIS

1131
00:43:58,940 --> 00:44:04,880
configuration looking at VPC dashboard

1132
00:44:01,610 --> 00:44:07,280
as well similar a variety of mostly

1133
00:44:04,880 --> 00:44:08,960
hardening measures the thing about these

1134
00:44:07,280 --> 00:44:10,670
auditing tools to remembers they are not

1135
00:44:08,960 --> 00:44:12,860
a penetration test they are not a

1136
00:44:10,670 --> 00:44:14,360
holistic security assessment they're not

1137
00:44:12,860 --> 00:44:16,460
looking at the applications you have

1138
00:44:14,360 --> 00:44:18,560
deployed they're not finding those SS RF

1139
00:44:16,460 --> 00:44:21,110
owner abilities but they can really help

1140
00:44:18,560 --> 00:44:23,360
with your baseline security and you can

1141
00:44:21,110 --> 00:44:25,940
run a tool like this really quickly and

1142
00:44:23,360 --> 00:44:27,650
you can turn it around and turn into a

1143
00:44:25,940 --> 00:44:29,560
bunch of tickets for the security team

1144
00:44:27,650 --> 00:44:31,810
to put on the backlog

1145
00:44:29,560 --> 00:44:32,860
get to when they have time because these

1146
00:44:31,810 --> 00:44:34,450
are hardening measures and

1147
00:44:32,860 --> 00:44:37,060
defense-in-depth so they're not you know

1148
00:44:34,450 --> 00:44:38,620
everything on fire fix it now but

1149
00:44:37,060 --> 00:44:41,350
they're things that if there's downtime

1150
00:44:38,620 --> 00:44:47,319
which when is there ever downtime you

1151
00:44:41,350 --> 00:44:53,770
can fix so just quickly also I wanted to

1152
00:44:47,320 --> 00:44:58,060
show someone tell me that's Google

1153
00:44:53,770 --> 00:44:59,920
Chrome okay yeah

1154
00:44:58,060 --> 00:45:02,140
I just want to pull this up the other

1155
00:44:59,920 --> 00:45:04,540
thing that I didn't have a screenshot of

1156
00:45:02,140 --> 00:45:06,670
and wanted to show is that Scout suite

1157
00:45:04,540 --> 00:45:08,860
does have information on the findings

1158
00:45:06,670 --> 00:45:10,960
which some of the other tools don't so

1159
00:45:08,860 --> 00:45:13,960
if you're curious why is it flagging my

1160
00:45:10,960 --> 00:45:15,520
lack of X Y or Z Scouts we does have a

1161
00:45:13,960 --> 00:45:17,950
little bit of information that we're

1162
00:45:15,520 --> 00:45:28,750
constantly building out so that can be

1163
00:45:17,950 --> 00:45:30,460
really useful and my slides awesome so

1164
00:45:28,750 --> 00:45:35,620
those are the three tools they have pros

1165
00:45:30,460 --> 00:45:37,900
and cons but I just wanted to kind of

1166
00:45:35,620 --> 00:45:39,310
take this moment to really credit a lot

1167
00:45:37,900 --> 00:45:41,230
of the people who are doing work in this

1168
00:45:39,310 --> 00:45:43,180
area there's a ton of active research

1169
00:45:41,230 --> 00:45:45,070
into AWS security and if you're

1170
00:45:43,180 --> 00:45:46,419
interested in learning more these would

1171
00:45:45,070 --> 00:45:50,890
be some really great people and

1172
00:45:46,420 --> 00:45:53,710
resources to check out Corey Quinn up

1173
00:45:50,890 --> 00:45:56,080
top has a newsletter where he writes in

1174
00:45:53,710 --> 00:45:59,100
a really snarky tone about AWS so if

1175
00:45:56,080 --> 00:46:02,410
snarks your thing he's the one to follow

1176
00:45:59,100 --> 00:46:04,180
Terry has a security consultancy and is

1177
00:46:02,410 --> 00:46:08,350
creating kind of an executive facing

1178
00:46:04,180 --> 00:46:10,240
guide to AWS Scott I talked about and

1179
00:46:08,350 --> 00:46:12,370
there are a bunch more resources there

1180
00:46:10,240 --> 00:46:14,259
but these are definitely a lot of the

1181
00:46:12,370 --> 00:46:16,270
resources I look to when developing this

1182
00:46:14,260 --> 00:46:19,150
and if you're trying to learn more about

1183
00:46:16,270 --> 00:46:22,870
aw security you could do much worse than

1184
00:46:19,150 --> 00:46:24,250
reading these people awesome so this is

1185
00:46:22,870 --> 00:46:25,779
a link to the slides if you want to

1186
00:46:24,250 --> 00:46:29,080
actually be able to click hyperlinks the

1187
00:46:25,780 --> 00:46:30,490
bitly link is the exact same just some

1188
00:46:29,080 --> 00:46:32,049
people don't trust that sort of thing so

1189
00:46:30,490 --> 00:46:33,700
pick your poison

1190
00:46:32,050 --> 00:46:35,820
I just want to say thank you all for

1191
00:46:33,700 --> 00:46:37,750
coming and thank you too besides for

1192
00:46:35,820 --> 00:46:40,150
putting on this great event and all the

1193
00:46:37,750 --> 00:46:43,390
volunteers who gave their time if you

1194
00:46:40,150 --> 00:46:45,130
have questions feel free to pin me down

1195
00:46:43,390 --> 00:46:47,049
generally these questions tend to be

1196
00:46:45,130 --> 00:46:49,180
more on people's specific situations and

1197
00:46:47,050 --> 00:46:51,190
environments so if that's your case find

1198
00:46:49,180 --> 00:46:53,740
me after I'm always happy to talk

1199
00:46:51,190 --> 00:46:55,010
security consulting whatever thank you

1200
00:46:53,740 --> 00:46:57,519
all

1201
00:46:55,010 --> 00:46:57,519
[Applause]

