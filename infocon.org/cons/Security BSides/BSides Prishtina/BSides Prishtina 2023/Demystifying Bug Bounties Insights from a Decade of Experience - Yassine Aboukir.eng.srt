1
00:00:02,879 --> 00:00:04,460
hello everyone

2
00:00:04,460 --> 00:00:08,280
uh thank you so much for being here uh

3
00:00:08,280 --> 00:00:10,800
thank you for showing up and thanks for

4
00:00:10,800 --> 00:00:13,139
the b-sides organizing theme for

5
00:00:13,139 --> 00:00:15,719
organizing everything uh making sure

6
00:00:15,719 --> 00:00:18,060
everything is working and running

7
00:00:18,060 --> 00:00:20,960
smoothly uh

8
00:00:20,960 --> 00:00:23,160
[Music]

9
00:00:23,160 --> 00:00:26,039
perfect thank you uh so basically this

10
00:00:26,039 --> 00:00:28,380
is my second time here in Pristina I was

11
00:00:28,380 --> 00:00:30,840
here in 2019 for a different conference

12
00:00:30,840 --> 00:00:33,899
so it's always uh great to be back here

13
00:00:33,899 --> 00:00:38,520
and just enjoy the city uh so basically

14
00:00:38,520 --> 00:00:40,860
uh to today we're gonna talk about a

15
00:00:40,860 --> 00:00:43,379
topic that is very dear to me that some

16
00:00:43,379 --> 00:00:45,420
industry that I've been involved for a

17
00:00:45,420 --> 00:00:47,460
decade uh we're gonna talking about

18
00:00:47,460 --> 00:00:48,719
we're gonna be talking about like

19
00:00:48,719 --> 00:00:50,940
bounties uh and I'm gonna share with you

20
00:00:50,940 --> 00:00:52,920
some insights that are and lessons that

21
00:00:52,920 --> 00:00:54,960
I've learned from my experience doing

22
00:00:54,960 --> 00:00:57,000
back bounties as a hacker hacking

23
00:00:57,000 --> 00:00:58,739
different companies like high profile

24
00:00:58,739 --> 00:01:02,160
companies say Facebook Google Apple Etc

25
00:01:02,160 --> 00:01:04,080
so I'm gonna be sharing some lessons

26
00:01:04,080 --> 00:01:05,939
some insights that I've learned from

27
00:01:05,939 --> 00:01:07,979
that experience and I'm also going to be

28
00:01:07,979 --> 00:01:10,200
sharing the lessons that I learned

29
00:01:10,200 --> 00:01:12,299
actually managing those back Monday

30
00:01:12,299 --> 00:01:14,040
programs for some of the biggest

31
00:01:14,040 --> 00:01:17,640
companies uh so but before we start I

32
00:01:17,640 --> 00:01:19,860
just want to have an idea how many of

33
00:01:19,860 --> 00:01:21,840
you here are familiar with the concept

34
00:01:21,840 --> 00:01:23,100
of back bounties can you raise your

35
00:01:23,100 --> 00:01:25,740
hands

36
00:01:25,740 --> 00:01:28,799
uh all right that's good how many of you

37
00:01:28,799 --> 00:01:31,860
have earned a back Bounty before a

38
00:01:31,860 --> 00:01:33,420
bounty payment

39
00:01:33,420 --> 00:01:35,100
all right I think this is a good start

40
00:01:35,100 --> 00:01:36,780
all right so we're gonna we're gonna

41
00:01:36,780 --> 00:01:38,340
talk about it but before we dive into

42
00:01:38,340 --> 00:01:39,900
the topic I just want to introduce

43
00:01:39,900 --> 00:01:43,320
myself uh so my name is Yasin abukir I'm

44
00:01:43,320 --> 00:01:45,960
originally from Morocco I'm currently

45
00:01:45,960 --> 00:01:49,020
based in France so I hold two Master

46
00:01:49,020 --> 00:01:51,420
degrees uh both of them are in

47
00:01:51,420 --> 00:01:53,880
management and business basically which

48
00:01:53,880 --> 00:01:55,799
is very irrelevant to what I'm doing now

49
00:01:55,799 --> 00:01:59,280
as a career it just goes to say that it

50
00:01:59,280 --> 00:02:01,200
doesn't really matter what you studied

51
00:02:01,200 --> 00:02:03,000
before as long as you have the passion

52
00:02:03,000 --> 00:02:05,880
to pursue what you really like and what

53
00:02:05,880 --> 00:02:08,038
you're really passionate about so right

54
00:02:08,038 --> 00:02:10,080
now I'm doing cyber security apparently

55
00:02:10,080 --> 00:02:13,020
uh I do application security Consulting

56
00:02:13,020 --> 00:02:15,480
so basically I work with companies to

57
00:02:15,480 --> 00:02:18,000
provide them with uh consultant Services

58
00:02:18,000 --> 00:02:20,160
say penetration distance security

59
00:02:20,160 --> 00:02:23,940
assessments and whatever uh from 2017 to

60
00:02:23,940 --> 00:02:26,520
2019 I worked as a security analyst for

61
00:02:26,520 --> 00:02:28,920
a company called hacker one it's a black

62
00:02:28,920 --> 00:02:31,860
money platform I worked as uh through

63
00:02:31,860 --> 00:02:34,980
Azure so basically I tried for uh back

64
00:02:34,980 --> 00:02:37,140
Monday programs belonging to some of the

65
00:02:37,140 --> 00:02:39,000
biggest companies where so I'm going to

66
00:02:39,000 --> 00:02:41,099
share that experience later on the on

67
00:02:41,099 --> 00:02:43,620
the presentation uh currently this year

68
00:02:43,620 --> 00:02:45,480
I actually joined the hacker one hacker

69
00:02:45,480 --> 00:02:48,239
Advisory board so basically my role is

70
00:02:48,239 --> 00:02:50,280
just to ensure that the hacker Community

71
00:02:50,280 --> 00:02:53,099
is well represented and that the hacker

72
00:02:53,099 --> 00:02:55,080
feedback is Incorporated in their

73
00:02:55,080 --> 00:02:57,540
products and services and I've been

74
00:02:57,540 --> 00:03:00,120
doing back bounties since 2013 so

75
00:03:00,120 --> 00:03:02,360
basically it's been a decade 10 years

76
00:03:02,360 --> 00:03:05,400
and I am one of the hacker one top 20

77
00:03:05,400 --> 00:03:08,400
hackers all-time top 20 hackers and last

78
00:03:08,400 --> 00:03:10,560
year I actually won one of the live

79
00:03:10,560 --> 00:03:13,379
hacking competitions back in Denver as

80
00:03:13,379 --> 00:03:14,940
you can see in the picture I'm holding

81
00:03:14,940 --> 00:03:18,120
the image belt I look like a UFC fighter

82
00:03:18,120 --> 00:03:21,000
I know uh so I won the first place we

83
00:03:21,000 --> 00:03:22,620
which was quite an achievement because

84
00:03:22,620 --> 00:03:25,140
like it was very competitive so yeah

85
00:03:25,140 --> 00:03:28,019
that's it but so now we're gonna start

86
00:03:28,019 --> 00:03:29,760
by just like for the people who are not

87
00:03:29,760 --> 00:03:31,500
very familiar with the what the concept

88
00:03:31,500 --> 00:03:33,659
of the bounty program so a background

89
00:03:33,659 --> 00:03:36,540
program is basically when a company uh

90
00:03:36,540 --> 00:03:39,239
seeks the help of the security research

91
00:03:39,239 --> 00:03:41,879
community help so basically see a

92
00:03:41,879 --> 00:03:44,220
company like Facebook Google they want

93
00:03:44,220 --> 00:03:46,379
the help of ethical hackers to find

94
00:03:46,379 --> 00:03:48,000
security vulnerabilities on their

95
00:03:48,000 --> 00:03:51,180
services and products so they set up uh

96
00:03:51,180 --> 00:03:53,340
what we call a backbonnet program which

97
00:03:53,340 --> 00:03:56,280
has all the kind of roles uh that you

98
00:03:56,280 --> 00:03:58,080
should know before participating and

99
00:03:58,080 --> 00:04:00,180
once someone like a hacker an ethical

100
00:04:00,180 --> 00:04:02,519
hacker or a security researcher finds a

101
00:04:02,519 --> 00:04:04,739
security vulnerability they get paid

102
00:04:04,739 --> 00:04:06,840
what we call a bounty which is a

103
00:04:06,840 --> 00:04:09,180
monetary payment as you can see in this

104
00:04:09,180 --> 00:04:11,099
screenshot here this is an example of

105
00:04:11,099 --> 00:04:13,680
PayPal backbone program which is hosted

106
00:04:13,680 --> 00:04:16,260
on the hacker one platform so this is

107
00:04:16,260 --> 00:04:18,660
basically how it looks like and every

108
00:04:18,660 --> 00:04:21,720
back Bounty program has a set of roles

109
00:04:21,720 --> 00:04:23,520
or sections

110
00:04:23,520 --> 00:04:25,680
uh so a background program they have

111
00:04:25,680 --> 00:04:27,840
what we call a bounty table as you can

112
00:04:27,840 --> 00:04:29,280
see here in this screenshot there's a

113
00:04:29,280 --> 00:04:30,960
bounty table so what is the boundary

114
00:04:30,960 --> 00:04:33,720
table is just like how the the monetary

115
00:04:33,720 --> 00:04:35,820
reward that you can expect when you find

116
00:04:35,820 --> 00:04:37,740
the security vulnerabilities security

117
00:04:37,740 --> 00:04:39,840
vulnerability on their product so if

118
00:04:39,840 --> 00:04:42,120
it's like a low severity bug you can

119
00:04:42,120 --> 00:04:43,919
expect this much if it's like a high

120
00:04:43,919 --> 00:04:47,340
severity bug you can expect like 10K uh

121
00:04:47,340 --> 00:04:49,380
US dollars or if it's a critical this is

122
00:04:49,380 --> 00:04:51,720
how much you're gonna expect uh and

123
00:04:51,720 --> 00:04:53,400
every program has an in-scope

124
00:04:53,400 --> 00:04:55,740
vulnerabilities these are the security

125
00:04:55,740 --> 00:04:58,259
bugs that the company is interested in

126
00:04:58,259 --> 00:04:59,820
they want to hear they want to hear

127
00:04:59,820 --> 00:05:01,680
about they want you to find those so

128
00:05:01,680 --> 00:05:04,320
they have a list of those in-scope bugs

129
00:05:04,320 --> 00:05:06,540
and just like in scope there are out of

130
00:05:06,540 --> 00:05:08,759
scope bugs like the company has a list

131
00:05:08,759 --> 00:05:10,199
of bugs that they're not really

132
00:05:10,199 --> 00:05:12,060
interested in either because they are

133
00:05:12,060 --> 00:05:14,280
informative or they are low severity or

134
00:05:14,280 --> 00:05:15,720
it's just basically they are false

135
00:05:15,720 --> 00:05:18,120
positives so as a hacker you don't want

136
00:05:18,120 --> 00:05:19,680
to look for those bugs you just want to

137
00:05:19,680 --> 00:05:20,820
avoid them because they're going to be a

138
00:05:20,820 --> 00:05:24,060
waste of time and every program has

139
00:05:24,060 --> 00:05:26,460
Rules of Engagement it's like roles that

140
00:05:26,460 --> 00:05:28,020
you should abide by if you're gonna

141
00:05:28,020 --> 00:05:29,699
start hacking on PayPal these are some

142
00:05:29,699 --> 00:05:31,139
of the roles that you should respect

143
00:05:31,139 --> 00:05:33,240
some of the rules for example is just

144
00:05:33,240 --> 00:05:36,600
like to avoid heavy automation just do

145
00:05:36,600 --> 00:05:38,520
not run heavy automation on the on the

146
00:05:38,520 --> 00:05:39,840
on their products because you're just

147
00:05:39,840 --> 00:05:42,120
gonna bring it down these kind of rules

148
00:05:42,120 --> 00:05:43,979
that you have to respect and then there

149
00:05:43,979 --> 00:05:46,919
is this service level agreement the the

150
00:05:46,919 --> 00:05:49,139
acla is just like the times that you're

151
00:05:49,139 --> 00:05:51,360
gonna expect like time to acknowledge

152
00:05:51,360 --> 00:05:53,580
your report or your bug how much time

153
00:05:53,580 --> 00:05:56,520
are you gonna have to wait to get paid

154
00:05:56,520 --> 00:05:58,800
and how much time are you gonna wait to

155
00:05:58,800 --> 00:06:01,560
have the bug get fixed or resolved and

156
00:06:01,560 --> 00:06:03,120
there is a safe harbor close which is

157
00:06:03,120 --> 00:06:05,220
optional which is started recently

158
00:06:05,220 --> 00:06:07,919
talking about it the Safe Harbor Clause

159
00:06:07,919 --> 00:06:11,280
is basically a legal Clause that the

160
00:06:11,280 --> 00:06:13,500
company is basically stating that as

161
00:06:13,500 --> 00:06:15,180
long as you're acting good faith like

162
00:06:15,180 --> 00:06:18,180
you have good faith and you we're not

163
00:06:18,180 --> 00:06:20,100
gonna prosecute you we're not gonna

164
00:06:20,100 --> 00:06:22,560
pursue any illegal action against you as

165
00:06:22,560 --> 00:06:24,660
long as you act in good Faith which is

166
00:06:24,660 --> 00:06:27,419
very important because uh a lot could go

167
00:06:27,419 --> 00:06:29,000
wrong

168
00:06:29,000 --> 00:06:31,919
so as you can see I'm pretty sure you

169
00:06:31,919 --> 00:06:33,660
guys are very familiar with these logos

170
00:06:33,660 --> 00:06:35,280
these are the companies some of the

171
00:06:35,280 --> 00:06:37,680
Fortune 500 companies that are running

172
00:06:37,680 --> 00:06:40,020
their back money program so these

173
00:06:40,020 --> 00:06:41,520
companies they're basically working with

174
00:06:41,520 --> 00:06:44,280
ethical hackers to find all those

175
00:06:44,280 --> 00:06:47,220
security vulnerabilities that may be uh

176
00:06:47,220 --> 00:06:48,720
affecting their own products so

177
00:06:48,720 --> 00:06:50,460
basically we have sales for Snapchat

178
00:06:50,460 --> 00:06:53,880
slack Facebook Apple Google so all these

179
00:06:53,880 --> 00:06:55,440
companies they have what we call APAC

180
00:06:55,440 --> 00:06:57,419
money program so if you have the skill

181
00:06:57,419 --> 00:06:59,699
set that it requires and you can find

182
00:06:59,699 --> 00:07:01,139
security vulnerabilities on their

183
00:07:01,139 --> 00:07:04,319
products you could get paid a bounty in

184
00:07:04,319 --> 00:07:05,819
exchange

185
00:07:05,819 --> 00:07:08,580
so how I got into back bounties I just

186
00:07:08,580 --> 00:07:10,440
want to share with you in my story how I

187
00:07:10,440 --> 00:07:12,600
started doing back bounties so basically

188
00:07:12,600 --> 00:07:15,000
before uh when I was in my teenage years

189
00:07:15,000 --> 00:07:18,080
uh uh I was very passionate about

190
00:07:18,080 --> 00:07:21,720
hacking I loved finding security bugs in

191
00:07:21,720 --> 00:07:24,000
random software so basically I just go

192
00:07:24,000 --> 00:07:25,680
on the internet find a random software

193
00:07:25,680 --> 00:07:27,840
and just poking around and find the bugs

194
00:07:27,840 --> 00:07:30,060
on that software I I was just doing it

195
00:07:30,060 --> 00:07:32,160
for free because I liked it I enjoyed it

196
00:07:32,160 --> 00:07:34,860
but uh what I what I did is that when I

197
00:07:34,860 --> 00:07:37,199
find a bug I just basically write the

198
00:07:37,199 --> 00:07:39,419
details and I publish it online without

199
00:07:39,419 --> 00:07:41,580
even coordinating with the vendor

200
00:07:41,580 --> 00:07:44,220
without notifying them to get it fixed

201
00:07:44,220 --> 00:07:46,919
or anything uh as you can see here it

202
00:07:46,919 --> 00:07:51,000
was back in 2011 2014 2013 these are

203
00:07:51,000 --> 00:07:52,919
some of the bugs that I posted on the

204
00:07:52,919 --> 00:07:55,919
exploit databases uh if you if you guys

205
00:07:55,919 --> 00:07:57,840
are familiar with millworm for example

206
00:07:57,840 --> 00:08:00,479
the exploit DB so I find a bug and I

207
00:08:00,479 --> 00:08:02,099
just post it online without even getting

208
00:08:02,099 --> 00:08:04,680
fixed which is which is bad because this

209
00:08:04,680 --> 00:08:06,479
is not how responsible this disclosure

210
00:08:06,479 --> 00:08:08,460
works you have to coordinate with the

211
00:08:08,460 --> 00:08:12,060
vendor to like responsibly notify them

212
00:08:12,060 --> 00:08:14,580
of the bug so that they can get it fixed

213
00:08:14,580 --> 00:08:16,979
and then you can publish your your bug

214
00:08:16,979 --> 00:08:19,440
publicly but I was doing it the wrong

215
00:08:19,440 --> 00:08:21,780
way which I call the Aries irresponsible

216
00:08:21,780 --> 00:08:23,639
disclosure phase as opposed to

217
00:08:23,639 --> 00:08:27,000
responsible disclosure so because if

218
00:08:27,000 --> 00:08:28,979
you're familiar when we do impact

219
00:08:28,979 --> 00:08:30,120
bounties or just vulnerability

220
00:08:30,120 --> 00:08:32,039
disclosure in general we have what we

221
00:08:32,039 --> 00:08:34,799
call in 90 days rule so basically when

222
00:08:34,799 --> 00:08:37,679
you find a bug you have to report it to

223
00:08:37,679 --> 00:08:39,299
the vendor you have to report it to the

224
00:08:39,299 --> 00:08:41,940
company so they can get it fixed and the

225
00:08:41,940 --> 00:08:44,820
company has 90 days to get it fixed if

226
00:08:44,820 --> 00:08:47,100
they don't get it fixed in 90 days then

227
00:08:47,100 --> 00:08:48,959
and then you can actually publish it

228
00:08:48,959 --> 00:08:50,700
with the security communities you can

229
00:08:50,700 --> 00:08:54,060
make them aware uh if they get it fixed

230
00:08:54,060 --> 00:08:55,800
in a timely manner then you can share

231
00:08:55,800 --> 00:08:57,540
the details but you you're not really

232
00:08:57,540 --> 00:08:59,459
allowed to share the details publicly

233
00:08:59,459 --> 00:09:01,800
before it's fixed otherwise it's an Uday

234
00:09:01,800 --> 00:09:05,660
it's going to be exploited maliciously

235
00:09:05,660 --> 00:09:09,120
uh so fast forward to 2013 I was just

236
00:09:09,120 --> 00:09:11,220
scrolling uh some art reading about some

237
00:09:11,220 --> 00:09:13,920
news articles and I uh I stumbled upon

238
00:09:13,920 --> 00:09:16,260
an article that is about a platform

239
00:09:16,260 --> 00:09:18,120
called hacker one and that now you can

240
00:09:18,120 --> 00:09:19,500
actually work with companies you can

241
00:09:19,500 --> 00:09:21,480
hack companies legally and actually get

242
00:09:21,480 --> 00:09:22,860
paid for it because I was doing it for

243
00:09:22,860 --> 00:09:25,380
free back then so that was an intriguing

244
00:09:25,380 --> 00:09:27,420
idea and I I just went straight on hack

245
00:09:27,420 --> 00:09:30,180
around platform and I signed up in 2013.

246
00:09:30,180 --> 00:09:32,279
so I started poking around and what I

247
00:09:32,279 --> 00:09:35,160
found is they have uh a lot of Open

248
00:09:35,160 --> 00:09:37,800
Source projects like python Django

249
00:09:37,800 --> 00:09:40,920
rubion reels so basically they want you

250
00:09:40,920 --> 00:09:42,899
to find bugs on those projects but back

251
00:09:42,899 --> 00:09:44,279
then I don't have I didn't have really

252
00:09:44,279 --> 00:09:46,440
the right skill set I did not have much

253
00:09:46,440 --> 00:09:48,779
code review skill set so I couldn't find

254
00:09:48,779 --> 00:09:50,940
anything in 2013 I was just poking

255
00:09:50,940 --> 00:09:54,839
around but no luck at all uh so fast

256
00:09:54,839 --> 00:09:58,200
forward to 2014 like one year later I

257
00:09:58,200 --> 00:10:00,360
found my first bug my first bug and I

258
00:10:00,360 --> 00:10:02,220
earned my first Bounty it was the

259
00:10:02,220 --> 00:10:04,740
dumbest bug I ever found honestly so it

260
00:10:04,740 --> 00:10:06,959
was a it wasn't Yahoo and what I founded

261
00:10:06,959 --> 00:10:09,779
on Yahoo so basically the bug was just

262
00:10:09,779 --> 00:10:12,180
like resetting the vote so Yahoo they

263
00:10:12,180 --> 00:10:14,459
have this board the suggestion board

264
00:10:14,459 --> 00:10:17,760
where users they can post suggestions on

265
00:10:17,760 --> 00:10:20,459
other users they can upload and downvote

266
00:10:20,459 --> 00:10:22,620
the suggestion so I was just poking

267
00:10:22,620 --> 00:10:25,140
around and I when you upvote the

268
00:10:25,140 --> 00:10:26,940
suggestion there is a parameter called

269
00:10:26,940 --> 00:10:30,000
vote value it just increments by one

270
00:10:30,000 --> 00:10:32,339
right she was like thinking what what

271
00:10:32,339 --> 00:10:35,700
can I do here and I change the value of

272
00:10:35,700 --> 00:10:37,399
the vote value to

273
00:10:37,399 --> 00:10:41,160
1600 which is a long number and I just

274
00:10:41,160 --> 00:10:43,440
clicked on upvote and what happened next

275
00:10:43,440 --> 00:10:46,440
is just I reset the votes to zero if you

276
00:10:46,440 --> 00:10:50,399
can see here it was like 300 350 57 and

277
00:10:50,399 --> 00:10:52,920
then zero this is the dumbest log I ever

278
00:10:52,920 --> 00:10:56,459
found it was a low bug but fortunately I

279
00:10:56,459 --> 00:10:58,380
got paid for it I submitted it to Yahoo

280
00:10:58,380 --> 00:11:01,560
was back in 2014 and I got my very first

281
00:11:01,560 --> 00:11:05,339
Bounty which was like 400 bucks I always

282
00:11:05,339 --> 00:11:07,260
I did not believe it because I I was

283
00:11:07,260 --> 00:11:09,839
doing this this for free and now I get

284
00:11:09,839 --> 00:11:11,820
paid for it and I can do it legally I

285
00:11:11,820 --> 00:11:13,440
can hack a company and get paid for it

286
00:11:13,440 --> 00:11:15,720
which is which is awesome and I I

287
00:11:15,720 --> 00:11:17,160
couldn't really believe it so I was like

288
00:11:17,160 --> 00:11:18,899
is this real and I was still in

289
00:11:18,899 --> 00:11:20,940
University and the next summer I just

290
00:11:20,940 --> 00:11:23,100
spend it just looking for bugs I spent

291
00:11:23,100 --> 00:11:24,779
the whole summer just hacking companies

292
00:11:24,779 --> 00:11:27,660
because I this is this is too real for

293
00:11:27,660 --> 00:11:28,800
me to

294
00:11:28,800 --> 00:11:30,660
so let's talk about some common bug

295
00:11:30,660 --> 00:11:32,160
hunting mythologies like when you're

296
00:11:32,160 --> 00:11:33,720
approaching a Target

297
00:11:33,720 --> 00:11:35,339
what can you do like how can you

298
00:11:35,339 --> 00:11:37,019
approach a Target like from my

299
00:11:37,019 --> 00:11:39,300
experiences from talking with other bug

300
00:11:39,300 --> 00:11:41,640
hunters from with other hackers there

301
00:11:41,640 --> 00:11:43,800
are busy I I realized that there are

302
00:11:43,800 --> 00:11:46,200
basically four methodologies when you're

303
00:11:46,200 --> 00:11:48,720
hacking there are some people when

304
00:11:48,720 --> 00:11:50,040
they're looking for bugs when they're

305
00:11:50,040 --> 00:11:51,480
looking for security vulnerabilities

306
00:11:51,480 --> 00:11:54,540
they automate everything they basically

307
00:11:54,540 --> 00:11:56,220
automate everything they don't do

308
00:11:56,220 --> 00:11:58,440
anything manual like they've built their

309
00:11:58,440 --> 00:12:01,140
automation that they deploy to servers

310
00:12:01,140 --> 00:12:03,480
and the automation just continuously

311
00:12:03,480 --> 00:12:05,519
looking for bugs and they don't do any

312
00:12:05,519 --> 00:12:08,579
manual work which is awesome uh but

313
00:12:08,579 --> 00:12:10,740
there are other people they do full

314
00:12:10,740 --> 00:12:13,500
manual the full manual methodology is

315
00:12:13,500 --> 00:12:16,260
when you're actually going deep on the

316
00:12:16,260 --> 00:12:18,779
on the application and you're doing the

317
00:12:18,779 --> 00:12:20,940
manual hacking without any automation

318
00:12:20,940 --> 00:12:22,980
without any tools apart from some

319
00:12:22,980 --> 00:12:25,019
necessary tools like a whip proxy for

320
00:12:25,019 --> 00:12:27,660
example uh so there are some people who

321
00:12:27,660 --> 00:12:30,000
likes to who like to do full manual

322
00:12:30,000 --> 00:12:32,279
hacking which is cool and there are some

323
00:12:32,279 --> 00:12:34,320
other people who do what I call the 50

324
00:12:34,320 --> 00:12:37,500
50. this is my methodology which is

325
00:12:37,500 --> 00:12:40,200
basically the the first phase of hacking

326
00:12:40,200 --> 00:12:43,380
you do with with Auto with automation I

327
00:12:43,380 --> 00:12:45,120
mean you use a lot of tools to collect

328
00:12:45,120 --> 00:12:47,700
data like do some reconnaissance fight

329
00:12:47,700 --> 00:12:51,000
some sub-domains DNS data fingerprinting

330
00:12:51,000 --> 00:12:53,399
all that stuff and then once you click

331
00:12:53,399 --> 00:12:57,180
that data then you can do the manual uh

332
00:12:57,180 --> 00:12:58,920
hacking then you can use that data to

333
00:12:58,920 --> 00:13:00,540
actually start manually hacking and

334
00:13:00,540 --> 00:13:02,279
looking for security vulnerabilities on

335
00:13:02,279 --> 00:13:05,160
that data so this is my methodology and

336
00:13:05,160 --> 00:13:07,139
there are some people they do what I

337
00:13:07,139 --> 00:13:09,180
call the zero day all the things so

338
00:13:09,180 --> 00:13:11,579
basically these people they they go and

339
00:13:11,579 --> 00:13:15,000
look for bugs on software there that are

340
00:13:15,000 --> 00:13:17,760
widely used by the the companies for

341
00:13:17,760 --> 00:13:20,100
example WordPress they go and look for a

342
00:13:20,100 --> 00:13:22,800
bug on WordPress zero day and then once

343
00:13:22,800 --> 00:13:24,959
they find this bug on WordPress they

344
00:13:24,959 --> 00:13:27,360
look for all the companies that use

345
00:13:27,360 --> 00:13:29,700
WordPress and then they submit those

346
00:13:29,700 --> 00:13:31,860
reports to them so they basically do

347
00:13:31,860 --> 00:13:34,980
security research and they find zero

348
00:13:34,980 --> 00:13:36,899
days and then they find all the

349
00:13:36,899 --> 00:13:38,459
companies that use that vulnerable

350
00:13:38,459 --> 00:13:41,040
software or technology perfect I don't

351
00:13:41,040 --> 00:13:43,200
know what happened there uh so the

352
00:13:43,200 --> 00:13:45,060
question here is which one of these

353
00:13:45,060 --> 00:13:47,459
mythologies actually best that is the

354
00:13:47,459 --> 00:13:49,800
natural question which one should you go

355
00:13:49,800 --> 00:13:53,160
for actually uh the thing is that all

356
00:13:53,160 --> 00:13:55,500
these methodologies are have proven to

357
00:13:55,500 --> 00:13:57,180
be effective they have proven to be

358
00:13:57,180 --> 00:13:59,700
successful as you can see here on each

359
00:13:59,700 --> 00:14:01,680
category there is a successful Bug

360
00:14:01,680 --> 00:14:04,800
Hunter who have made Millions just using

361
00:14:04,800 --> 00:14:06,540
that methodology for example the full

362
00:14:06,540 --> 00:14:08,880
automated we have Eric today is new he's

363
00:14:08,880 --> 00:14:11,940
one of the best hackers he he's a very

364
00:14:11,940 --> 00:14:13,980
successful in the million dollar Bounty

365
00:14:13,980 --> 00:14:16,620
he doesn't do any manual hacking he

366
00:14:16,620 --> 00:14:18,360
basically built an automation machine

367
00:14:18,360 --> 00:14:21,240
that is continuously working and looking

368
00:14:21,240 --> 00:14:24,779
for bugs on a daily basis like oh it's

369
00:14:24,779 --> 00:14:26,160
just working when he's not he's not

370
00:14:26,160 --> 00:14:28,440
doing any manual manual work and then

371
00:14:28,440 --> 00:14:30,300
the full manual we have Ron is a very

372
00:14:30,300 --> 00:14:32,760
successful back Hunter as well Ron just

373
00:14:32,760 --> 00:14:35,220
doesn't do any automation as opposed to

374
00:14:35,220 --> 00:14:37,380
Eric you just like to do manual hacking

375
00:14:37,380 --> 00:14:39,600
just go deep on the application

376
00:14:39,600 --> 00:14:42,060
understand it and just find logical bugs

377
00:14:42,060 --> 00:14:44,220
and the 50 50 we have the legendary

378
00:14:44,220 --> 00:14:46,139
friends Rosen one of the best hackers

379
00:14:46,139 --> 00:14:48,959
and we have shops for the zero day all

380
00:14:48,959 --> 00:14:51,120
the things shops he is one of the

381
00:14:51,120 --> 00:14:52,920
co-founder asset note if you go to

382
00:14:52,920 --> 00:14:56,699
acidnote.com they have so many uh blog

383
00:14:56,699 --> 00:14:58,860
posts about zero diver abilities that

384
00:14:58,860 --> 00:15:02,040
they found on on software uh on popular

385
00:15:02,040 --> 00:15:04,199
software so basically it finds o days

386
00:15:04,199 --> 00:15:06,600
and he just submit those arrays to

387
00:15:06,600 --> 00:15:08,639
pragmatic programs and it works it works

388
00:15:08,639 --> 00:15:10,620
for him so they made good money out of

389
00:15:10,620 --> 00:15:12,420
it and they're very successful that

390
00:15:12,420 --> 00:15:14,579
means that all the mythologies actually

391
00:15:14,579 --> 00:15:17,760
work I mean depends on you but if each

392
00:15:17,760 --> 00:15:20,100
mythology can come at a cost for example

393
00:15:20,100 --> 00:15:21,959
the full automated one

394
00:15:21,959 --> 00:15:23,639
they might be very costly because you're

395
00:15:23,639 --> 00:15:25,740
running a lot of servers so it might be

396
00:15:25,740 --> 00:15:27,779
very costly to run those Cloud servers

397
00:15:27,779 --> 00:15:30,480
the full manual you might just be

398
00:15:30,480 --> 00:15:32,459
manually hacking and then you might not

399
00:15:32,459 --> 00:15:34,740
find any bug at all so there is a cost

400
00:15:34,740 --> 00:15:37,560
for each of these methodologies

401
00:15:37,560 --> 00:15:38,820
uh

402
00:15:38,820 --> 00:15:42,060
so go big or go home like like these sex

403
00:15:42,060 --> 00:15:43,800
is full back hundreds these successful

404
00:15:43,800 --> 00:15:45,779
hackers one of the things one of the

405
00:15:45,779 --> 00:15:47,699
things that I noticed is that they all

406
00:15:47,699 --> 00:15:50,579
try to focus on high severity security

407
00:15:50,579 --> 00:15:53,820
vulnerabilities uh High severe High

408
00:15:53,820 --> 00:15:55,260
severity security vulnerabilities like

409
00:15:55,260 --> 00:15:57,120
P1 which is critical vulnerabilities

410
00:15:57,120 --> 00:16:00,300
these are usually server-side bugs uh

411
00:16:00,300 --> 00:16:04,740
could be an rce SQL injection ssrf or P2

412
00:16:04,740 --> 00:16:07,620
uh High severity bugs or stored excesses

413
00:16:07,620 --> 00:16:09,959
and account takeover authentication Bay

414
00:16:09,959 --> 00:16:12,180
pass so all these bug Hunters I noticed

415
00:16:12,180 --> 00:16:13,680
I observed that they are actually

416
00:16:13,680 --> 00:16:16,079
focusing on P1 P2 which which makes

417
00:16:16,079 --> 00:16:18,720
sense why because first of all they're

418
00:16:18,720 --> 00:16:20,220
avoiding duplicates and related

419
00:16:20,220 --> 00:16:22,320
frustrations because in Black Bounty you

420
00:16:22,320 --> 00:16:23,880
have to be the first one to find the bug

421
00:16:23,880 --> 00:16:26,220
to actually get paid if you find the bug

422
00:16:26,220 --> 00:16:28,320
but someone found it like before you

423
00:16:28,320 --> 00:16:30,180
you're not gonna get paid it's gonna be

424
00:16:30,180 --> 00:16:32,459
going to be a duplicate but when you're

425
00:16:32,459 --> 00:16:35,100
focused on P1 P2 not a lot of people are

426
00:16:35,100 --> 00:16:36,480
actually focusing on that kind of

427
00:16:36,480 --> 00:16:38,579
vulnerabilities and they're not easy to

428
00:16:38,579 --> 00:16:41,100
be down as well so you're avoiding the

429
00:16:41,100 --> 00:16:43,920
duplicate frustration also when you send

430
00:16:43,920 --> 00:16:46,500
a high severity back to a company they

431
00:16:46,500 --> 00:16:48,120
quickly fix it they have to quickly

432
00:16:48,120 --> 00:16:49,500
react otherwise it's going to be

433
00:16:49,500 --> 00:16:52,259
exploited maliciously so they quickly

434
00:16:52,259 --> 00:16:54,980
get it triaged and fixed which is good

435
00:16:54,980 --> 00:16:57,720
and then you have high monetary rewards

436
00:16:57,720 --> 00:16:59,339
so basically when you're focusing in P1

437
00:16:59,339 --> 00:17:01,860
and P2 you're gonna earn a lot more than

438
00:17:01,860 --> 00:17:03,899
actually focusing on low severity and

439
00:17:03,899 --> 00:17:06,059
medium bugs I'm not saying by any chance

440
00:17:06,059 --> 00:17:08,280
that you should avoid looking for low

441
00:17:08,280 --> 00:17:10,319
severity or medium bucks it's just that

442
00:17:10,319 --> 00:17:13,380
you're you have to shift your focus to

443
00:17:13,380 --> 00:17:15,900
looking for P1 and P2 box if you've got

444
00:17:15,900 --> 00:17:18,260
the right skill set

445
00:17:18,260 --> 00:17:21,059
and then when you're doing bug hunting

446
00:17:21,059 --> 00:17:23,280
you want to focus on healthy and high p

447
00:17:23,280 --> 00:17:24,900
and big money programs there is a lot of

448
00:17:24,900 --> 00:17:27,059
frustration that can originate from

449
00:17:27,059 --> 00:17:28,620
doing back Bounty there are so many

450
00:17:28,620 --> 00:17:30,480
companies running a back vanity but they

451
00:17:30,480 --> 00:17:32,460
are now all great because like sometimes

452
00:17:32,460 --> 00:17:34,620
you submit a report to a company and you

453
00:17:34,620 --> 00:17:36,179
have to wait months before they even

454
00:17:36,179 --> 00:17:38,100
respond to you or you have to wait

455
00:17:38,100 --> 00:17:40,320
months before you get paid so you want

456
00:17:40,320 --> 00:17:42,000
to be picky when you choose which

457
00:17:42,000 --> 00:17:43,860
company you want to hack on

458
00:17:43,860 --> 00:17:45,480
these are two companies for example

459
00:17:45,480 --> 00:17:48,179
which are amazing first one is gitlab if

460
00:17:48,179 --> 00:17:49,679
you're familiar with it and the second

461
00:17:49,679 --> 00:17:52,320
one is Shopify gitlab for example for a

462
00:17:52,320 --> 00:17:54,720
critical they pay up to 35k which is

463
00:17:54,720 --> 00:17:56,220
great it's a it's a good return on

464
00:17:56,220 --> 00:17:59,400
investment uh and Shopify can even pay

465
00:17:59,400 --> 00:18:01,740
200k for a critical vulnerability that's

466
00:18:01,740 --> 00:18:03,360
why I'm saying you have to focus on P1

467
00:18:03,360 --> 00:18:05,760
P2 because there is a high monetary

468
00:18:05,760 --> 00:18:08,280
reward out of it and these companies are

469
00:18:08,280 --> 00:18:10,380
very healthy they have a great security

470
00:18:10,380 --> 00:18:14,100
team very reactive all that stuff uh and

471
00:18:14,100 --> 00:18:15,960
before you start before you choose a

472
00:18:15,960 --> 00:18:18,299
program if you for example are using the

473
00:18:18,299 --> 00:18:20,580
hackeron platform you can on the program

474
00:18:20,580 --> 00:18:22,620
you can see these statistics these are

475
00:18:22,620 --> 00:18:24,059
very important before you start hacking

476
00:18:24,059 --> 00:18:26,220
our program you see the average time to

477
00:18:26,220 --> 00:18:27,900
First Response is how much time it's

478
00:18:27,900 --> 00:18:29,640
gonna take for the company to

479
00:18:29,640 --> 00:18:31,679
acknowledge your report to get back to

480
00:18:31,679 --> 00:18:34,500
you how much time average time to Bounty

481
00:18:34,500 --> 00:18:36,240
how much time until you get paid which

482
00:18:36,240 --> 00:18:37,500
is important you just want to get paid

483
00:18:37,500 --> 00:18:41,039
so it's important to cut it short and

484
00:18:41,039 --> 00:18:42,900
how much time to get your bike fixed

485
00:18:42,900 --> 00:18:45,720
also you you can see how much this is a

486
00:18:45,720 --> 00:18:47,280
PayPal background program this is how

487
00:18:47,280 --> 00:18:49,320
much PayPal paid over the years they

488
00:18:49,320 --> 00:18:53,400
paid 8 million uh Bounties in total and

489
00:18:53,400 --> 00:18:55,200
you can see the average Bounty that they

490
00:18:55,200 --> 00:18:57,179
paid for hackers uh the average is

491
00:18:57,179 --> 00:19:01,380
usually 2K to four 4K and sorry the top

492
00:19:01,380 --> 00:19:04,860
Bounty is uh is they paid 52 as a top

493
00:19:04,860 --> 00:19:07,080
Bounty as you can see there are all the

494
00:19:07,080 --> 00:19:08,940
stats you can check before you start

495
00:19:08,940 --> 00:19:10,500
hacking our program before you decide

496
00:19:10,500 --> 00:19:12,419
which company you want to hack on for

497
00:19:12,419 --> 00:19:14,580
example PayPal people here they have

498
00:19:14,580 --> 00:19:17,220
appealing numbers which is good but for

499
00:19:17,220 --> 00:19:19,980
also for a regular Bug Hunter when they

500
00:19:19,980 --> 00:19:22,200
see the number the total of bugs that

501
00:19:22,200 --> 00:19:25,220
were resolved you see like it's it's

502
00:19:25,220 --> 00:19:28,320
1470 which is a lot of bugs and then as

503
00:19:28,320 --> 00:19:30,120
a regular Bug Hunter Minds there's like

504
00:19:30,120 --> 00:19:32,640
there's no way I'm gonna find a security

505
00:19:32,640 --> 00:19:35,520
vulnerability after P after like 700

506
00:19:35,520 --> 00:19:38,220
people found over a thousand bucks this

507
00:19:38,220 --> 00:19:40,140
is a regular Bug Hunter mindset which is

508
00:19:40,140 --> 00:19:42,600
really bad because like the best hackers

509
00:19:42,600 --> 00:19:44,280
they don't really care about those

510
00:19:44,280 --> 00:19:46,799
numbers because they know regardless of

511
00:19:46,799 --> 00:19:48,660
how many bugs other people found there

512
00:19:48,660 --> 00:19:50,460
will always there will always be other

513
00:19:50,460 --> 00:19:52,380
security vulnerabilities why because

514
00:19:52,380 --> 00:19:54,539
companies they're pushing code they're

515
00:19:54,539 --> 00:19:56,760
making changes on a daily basis so

516
00:19:56,760 --> 00:19:58,380
they're always like features new

517
00:19:58,380 --> 00:20:00,600
features that are being developed so

518
00:20:00,600 --> 00:20:02,340
there are always new bugs that are being

519
00:20:02,340 --> 00:20:05,220
introduced same there are always like

520
00:20:05,220 --> 00:20:07,620
regressions like they might fix a bug

521
00:20:07,620 --> 00:20:10,440
today but there might like there might

522
00:20:10,440 --> 00:20:12,660
be a code change and so the the bug

523
00:20:12,660 --> 00:20:14,820
might happen might show up again so that

524
00:20:14,820 --> 00:20:17,160
we call that a regression so in it

525
00:20:17,160 --> 00:20:18,780
doesn't matter how many bucks that

526
00:20:18,780 --> 00:20:20,880
program fixed you can always find bugs

527
00:20:20,880 --> 00:20:23,100
on these programs and these are the the

528
00:20:23,100 --> 00:20:24,539
best programs that you want to focus on

529
00:20:24,539 --> 00:20:27,480
these are the the the the the oh it's

530
00:20:27,480 --> 00:20:29,700
gone again so these are like the the the

531
00:20:29,700 --> 00:20:32,160
the the the the big program like PayPal

532
00:20:32,160 --> 00:20:33,480
they pay really good they have a great

533
00:20:33,480 --> 00:20:37,080
security team so yeah all right so I was

534
00:20:37,080 --> 00:20:38,760
talking about healthy programs the

535
00:20:38,760 --> 00:20:40,740
programs that pay really good so these

536
00:20:40,740 --> 00:20:42,480
are some of the example of the programs

537
00:20:42,480 --> 00:20:44,100
that are really good that you want to

538
00:20:44,100 --> 00:20:45,780
work with so if you ever decide to hack

539
00:20:45,780 --> 00:20:47,160
on some of the programs some of the

540
00:20:47,160 --> 00:20:49,140
companies I suggest you hack on Tech

541
00:20:49,140 --> 00:20:50,640
talk find security vulnerables on Tech

542
00:20:50,640 --> 00:20:53,880
talk Dropbox epic games GitHub Uber

543
00:20:53,880 --> 00:20:55,679
stripe these are amazing I had good

544
00:20:55,679 --> 00:20:57,419
experience with them

545
00:20:57,419 --> 00:20:58,679
all right so let's talk about

546
00:20:58,679 --> 00:21:01,620
application based Recon and testing uh

547
00:21:01,620 --> 00:21:04,260
so every time I talk to a Bug Hunter

548
00:21:04,260 --> 00:21:07,020
hacker they're they're just like they're

549
00:21:07,020 --> 00:21:09,000
like obsessed with automation a lot of

550
00:21:09,000 --> 00:21:11,100
them is just like I I tried this tool

551
00:21:11,100 --> 00:21:13,260
and that tool I'm working on building

552
00:21:13,260 --> 00:21:15,539
this Automation and that so everyone is

553
00:21:15,539 --> 00:21:17,160
just like really distracted from

554
00:21:17,160 --> 00:21:20,280
actually what the in-depth testing and

555
00:21:20,280 --> 00:21:22,740
the creative aspect of hacking hacking

556
00:21:22,740 --> 00:21:25,320
is actually it's more fun actually when

557
00:21:25,320 --> 00:21:26,640
you're doing it like you're actually

558
00:21:26,640 --> 00:21:28,200
going deep on an application you're

559
00:21:28,200 --> 00:21:30,780
using the creative aspect of it so a lot

560
00:21:30,780 --> 00:21:32,039
of people are just obsessed with

561
00:21:32,039 --> 00:21:33,960
automation I mean it's not really bad

562
00:21:33,960 --> 00:21:37,200
but also not the the it's not very

563
00:21:37,200 --> 00:21:39,419
effective so a lot of people in the

564
00:21:39,419 --> 00:21:41,520
hacker Community they they ignore the

565
00:21:41,520 --> 00:21:43,080
core application a lot of these

566
00:21:43,080 --> 00:21:45,299
companies like Tech talk uh stripe

567
00:21:45,299 --> 00:21:47,940
Shopify they really care about the core

568
00:21:47,940 --> 00:21:50,039
application they want you to find bug on

569
00:21:50,039 --> 00:21:52,440
the product itself the core application

570
00:21:52,440 --> 00:21:54,360
as you can see here for example Dropbox

571
00:21:54,360 --> 00:21:58,140
they have a separate Bounty table and uh

572
00:21:58,140 --> 00:22:00,059
separate Bounty amounts just for the

573
00:22:00,059 --> 00:22:01,440
core application because they want

574
00:22:01,440 --> 00:22:03,659
people to focus on finding bugs on the

575
00:22:03,659 --> 00:22:06,059
core app not just going out of scope or

576
00:22:06,059 --> 00:22:08,580
like looking for sub domains and those

577
00:22:08,580 --> 00:22:11,220
old outdated assets they want you to

578
00:22:11,220 --> 00:22:12,900
find bugs on the core app which would

579
00:22:12,900 --> 00:22:15,059
pay a lot more than actually finding

580
00:22:15,059 --> 00:22:17,340
security bugs on some like outdated

581
00:22:17,340 --> 00:22:20,760
subdomain or whatever so you want to

582
00:22:20,760 --> 00:22:23,100
focus on the core app which usually has

583
00:22:23,100 --> 00:22:25,380
more importance and priority as well as

584
00:22:25,380 --> 00:22:27,320
great compensation

585
00:22:27,320 --> 00:22:29,940
uh also when you talk about

586
00:22:29,940 --> 00:22:31,860
reconnaissance reconnaissance is a very

587
00:22:31,860 --> 00:22:33,360
trendy word in the hacking Community

588
00:22:33,360 --> 00:22:35,159
nowadays when you ask someone about

589
00:22:35,159 --> 00:22:37,260
reconnaissance or Recon as we call it

590
00:22:37,260 --> 00:22:39,480
they just start talking about finding

591
00:22:39,480 --> 00:22:41,940
subdomains so basically reconnaissance

592
00:22:41,940 --> 00:22:44,100
has been associated with finding

593
00:22:44,100 --> 00:22:46,559
subdomains uh whereas reconnaissance

594
00:22:46,559 --> 00:22:49,020
actually goes Way Beyond just finding

595
00:22:49,020 --> 00:22:51,299
sub domains just above like doing Danish

596
00:22:51,299 --> 00:22:54,059
Recon you find Danish data you find you

597
00:22:54,059 --> 00:22:56,880
do some fingerprinting there there's a

598
00:22:56,880 --> 00:22:58,740
lot you can do with reconnaissance and

599
00:22:58,740 --> 00:23:00,000
also reconnaissance it's just not about

600
00:23:00,000 --> 00:23:01,799
finding sub domains we can also talk

601
00:23:01,799 --> 00:23:04,919
about the application based

602
00:23:04,919 --> 00:23:07,140
reconnaissance which is actually in

603
00:23:07,140 --> 00:23:09,240
which is the best Recon that has paid

604
00:23:09,240 --> 00:23:12,360
off very well for me the app based

605
00:23:12,360 --> 00:23:14,880
reconnaissance is when you actually try

606
00:23:14,880 --> 00:23:16,799
to get to know the application you try

607
00:23:16,799 --> 00:23:18,659
to fast the application you use it as a

608
00:23:18,659 --> 00:23:21,600
regular user and just like click every

609
00:23:21,600 --> 00:23:23,940
form click every button fill out every

610
00:23:23,940 --> 00:23:26,280
form and just use it as a regular user

611
00:23:26,280 --> 00:23:28,740
and just intercept all the HTTP request

612
00:23:28,740 --> 00:23:31,080
so you get familiar with it you can also

613
00:23:31,080 --> 00:23:34,200
use the burp Suite burp Suite proxy uh

614
00:23:34,200 --> 00:23:36,539
Spider in functionality so you can have

615
00:23:36,539 --> 00:23:38,640
a better visualization of how the app

616
00:23:38,640 --> 00:23:40,200
looks like as you can see in the

617
00:23:40,200 --> 00:23:43,140
screenshot this is a a visual

618
00:23:43,140 --> 00:23:46,919
visualization of the zoom API and core

619
00:23:46,919 --> 00:23:49,260
application so this is the kind of or

620
00:23:49,260 --> 00:23:50,820
reconnaissance that actually paid off

621
00:23:50,820 --> 00:23:52,559
very well for me instead of just doing

622
00:23:52,559 --> 00:23:55,559
some sub domains reconnaissance because

623
00:23:55,559 --> 00:23:57,600
you want to really get to get to know

624
00:23:57,600 --> 00:24:00,059
the app and really understand it deeply

625
00:24:00,059 --> 00:24:01,559
and go in depth

626
00:24:01,559 --> 00:24:03,360
uh also I want to talk about

627
00:24:03,360 --> 00:24:05,640
functionality or feature oriented

628
00:24:05,640 --> 00:24:07,980
security listing uh some people when

629
00:24:07,980 --> 00:24:10,080
they start hacking on an app they they

630
00:24:10,080 --> 00:24:11,460
go with the Assumption hey I'm going to

631
00:24:11,460 --> 00:24:14,220
focus on finding excesses so basically

632
00:24:14,220 --> 00:24:17,340
they only look for accesses whereas some

633
00:24:17,340 --> 00:24:20,220
other people well they use a a better

634
00:24:20,220 --> 00:24:22,620
strategy a way more effective strategy

635
00:24:22,620 --> 00:24:25,740
which is like uh which is like when you

636
00:24:25,740 --> 00:24:27,840
when you're testing functionalities you

637
00:24:27,840 --> 00:24:30,240
wanna you wanna think which class of

638
00:24:30,240 --> 00:24:31,980
vulnerability would actually apply to

639
00:24:31,980 --> 00:24:34,020
this functionality uh for example if

640
00:24:34,020 --> 00:24:36,000
you're if you're hacking on an image

641
00:24:36,000 --> 00:24:39,000
uploader you're gonna think which which

642
00:24:39,000 --> 00:24:40,980
class of vulnerability would actually

643
00:24:40,980 --> 00:24:43,080
apply to this image uploader what kind

644
00:24:43,080 --> 00:24:45,480
of bugs do you think will be there

645
00:24:45,480 --> 00:24:47,460
instead of actually going with the

646
00:24:47,460 --> 00:24:48,780
Assumption hey I'm just gonna look for

647
00:24:48,780 --> 00:24:50,700
accesses and spend all the time just

648
00:24:50,700 --> 00:24:52,679
looking for one single class of

649
00:24:52,679 --> 00:24:56,039
vulnerability uh so basically you want

650
00:24:56,039 --> 00:24:58,440
to think what kind of bugs will apply to

651
00:24:58,440 --> 00:25:00,720
this functionality that I'm testing uh

652
00:25:00,720 --> 00:25:03,419
also Focus manual testing requires deep

653
00:25:03,419 --> 00:25:05,100
understanding of the inner workings of

654
00:25:05,100 --> 00:25:06,840
AI when you're hacking on the app you

655
00:25:06,840 --> 00:25:08,580
want to understand how it works a lot of

656
00:25:08,580 --> 00:25:10,320
people they start hacking for example on

657
00:25:10,320 --> 00:25:12,240
Tech talk Zoom or they don't even

658
00:25:12,240 --> 00:25:13,740
understand the app they don't they don't

659
00:25:13,740 --> 00:25:15,059
know how it works they don't know what

660
00:25:15,059 --> 00:25:17,280
it does they don't know how the logic is

661
00:25:17,280 --> 00:25:19,799
so they're just blindly testing and it's

662
00:25:19,799 --> 00:25:21,059
a waste of time when you're starting

663
00:25:21,059 --> 00:25:22,620
hacking on an app you want to understand

664
00:25:22,620 --> 00:25:24,179
how it works you want to write down

665
00:25:24,179 --> 00:25:25,860
everything thing you want to stitch down

666
00:25:25,860 --> 00:25:27,659
everything and just understand how

667
00:25:27,659 --> 00:25:29,400
everything is interconnected especially

668
00:25:29,400 --> 00:25:31,440
if it's a complex application like

669
00:25:31,440 --> 00:25:34,140
Shopify for example so that that way

670
00:25:34,140 --> 00:25:35,700
you're going to find more logical blocks

671
00:25:35,700 --> 00:25:36,900
you have more chances of finding

672
00:25:36,900 --> 00:25:38,880
security vulnerabilities instead of just

673
00:25:38,880 --> 00:25:41,340
blindly testing whatever without even

674
00:25:41,340 --> 00:25:43,679
understanding what it does and also what

675
00:25:43,679 --> 00:25:45,539
makes the difference between a regular

676
00:25:45,539 --> 00:25:48,059
Bug Hunter and successful one is the

677
00:25:48,059 --> 00:25:50,400
successful bug Hunters they are ready to

678
00:25:50,400 --> 00:25:52,860
go the distance what I mean by that is

679
00:25:52,860 --> 00:25:54,419
that when you're hacking on an app and

680
00:25:54,419 --> 00:25:55,860
there is like some features you have to

681
00:25:55,860 --> 00:25:57,960
pay them you have to pay the features to

682
00:25:57,960 --> 00:26:00,059
get access to it some bug Hunters they

683
00:26:00,059 --> 00:26:01,500
don't they wouldn't pay that because

684
00:26:01,500 --> 00:26:03,240
they it's a waste of money but

685
00:26:03,240 --> 00:26:05,820
successful bug Hunters they will pay for

686
00:26:05,820 --> 00:26:08,220
the Pro Plan so they get access to those

687
00:26:08,220 --> 00:26:10,679
features behind the paywall because not

688
00:26:10,679 --> 00:26:13,380
everyone has tested those features and

689
00:26:13,380 --> 00:26:15,419
which is uh which will give you a

690
00:26:15,419 --> 00:26:17,760
competitive advantage so another thing

691
00:26:17,760 --> 00:26:19,440
is that you have to be willing to go to

692
00:26:19,440 --> 00:26:21,120
the distance for example what I mean by

693
00:26:21,120 --> 00:26:23,220
that is that there are some apps uh that

694
00:26:23,220 --> 00:26:25,679
requires you to complete a setup uh

695
00:26:25,679 --> 00:26:27,720
there is like a complex setup some

696
00:26:27,720 --> 00:26:29,700
people are very lazy to complete this

697
00:26:29,700 --> 00:26:32,640
setup uh but successful but Hunters they

698
00:26:32,640 --> 00:26:34,740
take their time to to configure

699
00:26:34,740 --> 00:26:36,360
everything and just set it up because

700
00:26:36,360 --> 00:26:38,880
that will that will make the difference

701
00:26:38,880 --> 00:26:41,039
or if the company has a hardware device

702
00:26:41,039 --> 00:26:43,980
you want to order it because you have

703
00:26:43,980 --> 00:26:45,779
more chances of finding bugs on that

704
00:26:45,779 --> 00:26:48,000
device or just like if there there's a

705
00:26:48,000 --> 00:26:49,679
documentation make sure you read the

706
00:26:49,679 --> 00:26:51,840
whole documentation so that you

707
00:26:51,840 --> 00:26:53,880
understand everything and that you will

708
00:26:53,880 --> 00:26:55,740
have more chances of finding more

709
00:26:55,740 --> 00:26:57,779
security vulnerabilities so always be

710
00:26:57,779 --> 00:27:00,240
ready to go the distance

711
00:27:00,240 --> 00:27:03,600
uh okay this is a in related to what I'm

712
00:27:03,600 --> 00:27:05,940
just saying this is a vulnerability that

713
00:27:05,940 --> 00:27:08,039
I found last year in a live hacking

714
00:27:08,039 --> 00:27:09,740
competition with a friend of mine Andre

715
00:27:09,740 --> 00:27:12,600
uh so basically this application this

716
00:27:12,600 --> 00:27:14,400
was supposed to be a very secure

717
00:27:14,400 --> 00:27:16,700
messaging app that I used by governments

718
00:27:16,700 --> 00:27:19,440
uh I'm not allowed to disclose the name

719
00:27:19,440 --> 00:27:21,559
of the company because it's private but

720
00:27:21,559 --> 00:27:24,360
what I'm saying is that this this com

721
00:27:24,360 --> 00:27:27,360
the this company they have first they

722
00:27:27,360 --> 00:27:29,700
have the SSO which is a feature which is

723
00:27:29,700 --> 00:27:31,559
a pro feature you have to pay to get

724
00:27:31,559 --> 00:27:34,799
access to it uh we pay to get access to

725
00:27:34,799 --> 00:27:36,720
that feature and I'm pretty sure a lot

726
00:27:36,720 --> 00:27:38,520
of the hackers that were with me in the

727
00:27:38,520 --> 00:27:40,380
live hacking event they did not pay for

728
00:27:40,380 --> 00:27:41,940
it that made the difference that's how

729
00:27:41,940 --> 00:27:44,340
we found this part so we paid the for to

730
00:27:44,340 --> 00:27:46,559
access the we paid the Pro Plan taxes

731
00:27:46,559 --> 00:27:50,159
the SSO feature and also setting up the

732
00:27:50,159 --> 00:27:52,320
SSO took a lot of time and I'm pretty

733
00:27:52,320 --> 00:27:54,000
sure a lot of hackers would have just

734
00:27:54,000 --> 00:27:55,620
skipped it because it takes so much time

735
00:27:55,620 --> 00:27:57,360
but we took our time to set up

736
00:27:57,360 --> 00:28:00,600
everything and basically this wasn't an

737
00:28:00,600 --> 00:28:02,580
account takeover we could like take over

738
00:28:02,580 --> 00:28:05,039
hack any account without with zero

739
00:28:05,039 --> 00:28:07,260
interaction so what was happening is

740
00:28:07,260 --> 00:28:10,679
that uh when we set up our SSO we used

741
00:28:10,679 --> 00:28:13,200
OCTA for example and in our OCTA

742
00:28:13,200 --> 00:28:16,679
instance we can add the the user our

743
00:28:16,679 --> 00:28:19,200
Target our victim's email that is on the

744
00:28:19,200 --> 00:28:22,080
vulnerable app so we add it to our OCTA

745
00:28:22,080 --> 00:28:24,720
which is which you can do uh and then

746
00:28:24,720 --> 00:28:27,480
what we try to do next is we try to to

747
00:28:27,480 --> 00:28:30,240
SSO to the vulnerable applications so

748
00:28:30,240 --> 00:28:32,580
when we reach the octal login page we're

749
00:28:32,580 --> 00:28:34,980
logged into our email the victim's email

750
00:28:34,980 --> 00:28:37,559
that we added to our OCTA instance and

751
00:28:37,559 --> 00:28:39,720
then what happened is that there was uh

752
00:28:39,720 --> 00:28:42,179
an improper validation and then we would

753
00:28:42,179 --> 00:28:45,299
be able to log into any user's email so

754
00:28:45,299 --> 00:28:47,340
basically we could just we just need the

755
00:28:47,340 --> 00:28:49,679
victim's email we added to our OCTA

756
00:28:49,679 --> 00:28:52,679
instance we initiate the SSO login and

757
00:28:52,679 --> 00:28:54,600
then we would log into their account so

758
00:28:54,600 --> 00:28:56,880
basically this was very simple bug but

759
00:28:56,880 --> 00:28:58,440
very impactful because we could hack any

760
00:28:58,440 --> 00:29:01,440
account without any user interact and it

761
00:29:01,440 --> 00:29:03,419
was you got paid as a critical it was

762
00:29:03,419 --> 00:29:06,240
got the highest Bounty amount

763
00:29:06,240 --> 00:29:08,460
uh this is a second example this is

764
00:29:08,460 --> 00:29:10,679
another bug that we found last year was

765
00:29:10,679 --> 00:29:12,620
in a different life hacking competition

766
00:29:12,620 --> 00:29:16,320
uh this is an ssrf server-side request

767
00:29:16,320 --> 00:29:18,960
forgery uh so basically this company

768
00:29:18,960 --> 00:29:22,020
they have an EPI and I was just browsing

769
00:29:22,020 --> 00:29:23,880
the documentation so what made the

770
00:29:23,880 --> 00:29:25,559
difference here is the documentation I

771
00:29:25,559 --> 00:29:27,779
had the I read the documentation I took

772
00:29:27,779 --> 00:29:29,100
my time to read the documentation

773
00:29:29,100 --> 00:29:31,679
whereas some people did not do that so

774
00:29:31,679 --> 00:29:33,720
that made that made the difference so

775
00:29:33,720 --> 00:29:35,159
basically I was just reading the API

776
00:29:35,159 --> 00:29:37,500
documentation and I I noticed this

777
00:29:37,500 --> 00:29:40,260
request and what the first thing that uh

778
00:29:40,260 --> 00:29:43,740
that caught my attention was the URL

779
00:29:43,740 --> 00:29:45,779
parameter so basically when you see a

780
00:29:45,779 --> 00:29:47,520
URL parameter the first thing that comes

781
00:29:47,520 --> 00:29:49,620
to mind is to test it against Asus RF

782
00:29:49,620 --> 00:29:51,480
which is a server-side bug it's very

783
00:29:51,480 --> 00:29:54,779
critical so uh but when I try to

784
00:29:54,779 --> 00:29:56,820
replicate this the request did not work

785
00:29:56,820 --> 00:30:00,120
why because uh first of all uh reading

786
00:30:00,120 --> 00:30:02,279
the documentation I realized that I need

787
00:30:02,279 --> 00:30:06,179
to set up a separate user account and

788
00:30:06,179 --> 00:30:08,159
for that user account I need to

789
00:30:08,159 --> 00:30:10,740
explicitly granted the API permissions

790
00:30:10,740 --> 00:30:13,260
and even after granted API for Missions

791
00:30:13,260 --> 00:30:15,299
I need to generate valid API credential

792
00:30:15,299 --> 00:30:17,760
for that separate user account just so I

793
00:30:17,760 --> 00:30:21,120
could reproduce this this API request so

794
00:30:21,120 --> 00:30:23,100
the first thing I did was to point the

795
00:30:23,100 --> 00:30:27,000
URL to uh to the local localhost look

796
00:30:27,000 --> 00:30:28,860
back the localhost address so I can

797
00:30:28,860 --> 00:30:30,899
reach the the organization internal

798
00:30:30,899 --> 00:30:33,480
Network when I did that it did not work

799
00:30:33,480 --> 00:30:37,700
uh I got uh

800
00:30:38,279 --> 00:30:40,919
I basically I got unauthorized I don't

801
00:30:40,919 --> 00:30:43,320
have the the response here but when I

802
00:30:43,320 --> 00:30:45,659
tried the typical payload The Local Host

803
00:30:45,659 --> 00:30:48,419
API did not work so I tried a bunch of B

804
00:30:48,419 --> 00:30:50,460
passes and the one that actually worked

805
00:30:50,460 --> 00:30:54,240
was using the epv6 format as you can see

806
00:30:54,240 --> 00:30:56,880
there I used the apv6 format and it

807
00:30:56,880 --> 00:30:58,500
worked and I got the response as you can

808
00:30:58,500 --> 00:31:00,779
see here I got access to their localhost

809
00:31:00,779 --> 00:31:03,600
internal network uh so basically this

810
00:31:03,600 --> 00:31:06,600
one got paid as a critical I just want

811
00:31:06,600 --> 00:31:08,159
to demonstrate that what made the

812
00:31:08,159 --> 00:31:09,899
difference here is just I I took the

813
00:31:09,899 --> 00:31:12,480
time to read the documentation uh some

814
00:31:12,480 --> 00:31:14,640
people may have read it but they did not

815
00:31:14,640 --> 00:31:16,919
did not completely understand it from my

816
00:31:16,919 --> 00:31:19,200
from talking to them so that's what

817
00:31:19,200 --> 00:31:20,880
makes the difference just like go in the

818
00:31:20,880 --> 00:31:22,799
distance

819
00:31:22,799 --> 00:31:24,659
all right so another thing that I

820
00:31:24,659 --> 00:31:26,340
recommend is just like fuzzing all the

821
00:31:26,340 --> 00:31:28,440
things fuzzing is very powerful

822
00:31:28,440 --> 00:31:30,600
literally Falls everything there are so

823
00:31:30,600 --> 00:31:33,059
many tool that allows you to do fasting

824
00:31:33,059 --> 00:31:34,679
especially when you're hacking from a

825
00:31:34,679 --> 00:31:37,740
black box approach uh fuzz the end

826
00:31:37,740 --> 00:31:39,899
points you can fast the parameters you

827
00:31:39,899 --> 00:31:42,899
can pass the directories everything and

828
00:31:42,899 --> 00:31:45,299
even when fuzzing a lot of people a lot

829
00:31:45,299 --> 00:31:47,279
of people do is just they use generic

830
00:31:47,279 --> 00:31:49,260
word list they use a word list for

831
00:31:49,260 --> 00:31:51,779
everything but what I do recommend is

832
00:31:51,779 --> 00:31:54,299
that you use a what we call a context

833
00:31:54,299 --> 00:31:56,520
based word list for example if you're

834
00:31:56,520 --> 00:31:59,820
fuzzing a WordPress uh installation you

835
00:31:59,820 --> 00:32:01,919
want to use a word list that is adapted

836
00:32:01,919 --> 00:32:04,320
to the WordPress uh installation if

837
00:32:04,320 --> 00:32:07,320
you're fuzzing let's say an ESP uh

838
00:32:07,320 --> 00:32:09,360
Target you want to use an Adaptive word

839
00:32:09,360 --> 00:32:10,860
list and for that I recommend for

840
00:32:10,860 --> 00:32:13,260
example Asic node they have a different

841
00:32:13,260 --> 00:32:14,720
so many

842
00:32:14,720 --> 00:32:17,940
different word sets based on what kind

843
00:32:17,940 --> 00:32:19,260
of Technology do you want to start

844
00:32:19,260 --> 00:32:21,179
fuzzing fuzzing is very powerful we're

845
00:32:21,179 --> 00:32:23,760
going to find all kind of stuff doing it

846
00:32:23,760 --> 00:32:26,100
this is another simple bug just doing

847
00:32:26,100 --> 00:32:28,200
flossing well I found it last year so I

848
00:32:28,200 --> 00:32:31,559
found this uh uh which allowed me to

849
00:32:31,559 --> 00:32:34,860
access the admin panel or of a company

850
00:32:34,860 --> 00:32:38,580
it was an internal support panel so what

851
00:32:38,580 --> 00:32:40,860
I did so basically doing some recall I

852
00:32:40,860 --> 00:32:43,020
found an internal admin portal it was

853
00:32:43,020 --> 00:32:45,179
like admin.redacted.com because it's a

854
00:32:45,179 --> 00:32:46,500
private company I don't want to disclose

855
00:32:46,500 --> 00:32:48,779
the name so it's like admin.redacted.com

856
00:32:48,779 --> 00:32:53,039
account but I I just ran fluff uh which

857
00:32:53,039 --> 00:32:55,500
is very profit is an amazing tool that

858
00:32:55,500 --> 00:32:57,539
you can use for fuzzing uh it's it's

859
00:32:57,539 --> 00:33:00,539
built in gulang It's relatively fast uh

860
00:33:00,539 --> 00:33:02,700
so we just used fav to Brute Force the

861
00:33:02,700 --> 00:33:04,980
directories like from account Brute

862
00:33:04,980 --> 00:33:06,539
Force the directories and what I found

863
00:33:06,539 --> 00:33:10,080
is account slash register very easy very

864
00:33:10,080 --> 00:33:13,140
stupid uh register and what that means

865
00:33:13,140 --> 00:33:16,620
that I could register my own account and

866
00:33:16,620 --> 00:33:18,840
become an admin of that pan of the

867
00:33:18,840 --> 00:33:21,659
portal panel so basically I can I was

868
00:33:21,659 --> 00:33:23,460
able to register an account as an admin

869
00:33:23,460 --> 00:33:25,200
and what is funny is that I could

870
00:33:25,200 --> 00:33:27,600
explicitly give myself as many

871
00:33:27,600 --> 00:33:29,580
permissions as I want as you can see all

872
00:33:29,580 --> 00:33:31,860
the permissions there uh the the

873
00:33:31,860 --> 00:33:33,960
register input shouldn't have been

874
00:33:33,960 --> 00:33:36,779
public it should not have been public uh

875
00:33:36,779 --> 00:33:39,000
because it's an internal panel so now

876
00:33:39,000 --> 00:33:40,740
everyone can just register an admin

877
00:33:40,740 --> 00:33:42,960
account and I got access to their

878
00:33:42,960 --> 00:33:44,820
internal panel so fuzzing is very

879
00:33:44,820 --> 00:33:46,559
important it's very powerful especially

880
00:33:46,559 --> 00:33:48,840
if you're doing Black Box uh hacking you

881
00:33:48,840 --> 00:33:50,100
don't have much information about the

882
00:33:50,100 --> 00:33:51,980
target

883
00:33:51,980 --> 00:33:54,960
uh another thing is Javascript jaw I

884
00:33:54,960 --> 00:33:57,179
love JavaScript I found so many bugs

885
00:33:57,179 --> 00:33:58,880
just reading JavaScript files because

886
00:33:58,880 --> 00:34:01,440
JavaScript a lot all the modern

887
00:34:01,440 --> 00:34:03,659
applications they use JavaScript to load

888
00:34:03,659 --> 00:34:05,519
different things like endpoints

889
00:34:05,519 --> 00:34:07,980
parameters and all that stuff so when

890
00:34:07,980 --> 00:34:10,619
I'm hacking online app I I literally

891
00:34:10,619 --> 00:34:12,599
first thing I do is just like gather all

892
00:34:12,599 --> 00:34:14,699
the JavaScript files that are being fit

893
00:34:14,699 --> 00:34:17,040
or loaded by the that app because I know

894
00:34:17,040 --> 00:34:19,379
in those JavaScript I can find endpoints

895
00:34:19,379 --> 00:34:21,000
I can find parameters I can find

896
00:34:21,000 --> 00:34:23,879
hard-coded hard-coded credentials API

897
00:34:23,879 --> 00:34:27,060
Keys everything so reading and

898
00:34:27,060 --> 00:34:29,099
inspecting JavaScript files is very

899
00:34:29,099 --> 00:34:31,379
important it's it's one I've got a

900
00:34:31,379 --> 00:34:33,480
friend of mine he got like probably 80

901
00:34:33,480 --> 00:34:35,460
percent of these bugs are post message

902
00:34:35,460 --> 00:34:38,639
bugs from JavaScript files so I highly

903
00:34:38,639 --> 00:34:40,080
recommend that you reach JavaScript when

904
00:34:40,080 --> 00:34:42,480
I I'm hacking on an app I use burp Suite

905
00:34:42,480 --> 00:34:44,940
so basically I just filter by GS I by

906
00:34:44,940 --> 00:34:48,119
JavaScript files and I copy all the

907
00:34:48,119 --> 00:34:51,300
JavaScript links and then those links I

908
00:34:51,300 --> 00:34:53,399
feed them to to the link finder Pi which

909
00:34:53,399 --> 00:34:56,219
is a tool that you can use to automate

910
00:34:56,219 --> 00:34:58,440
the JavaScript files inspection and it

911
00:34:58,440 --> 00:35:00,060
gives you all the end points that

912
00:35:00,060 --> 00:35:03,359
extracts from those JavaScript files and

913
00:35:03,359 --> 00:35:05,880
those endpoints might be might be new

914
00:35:05,880 --> 00:35:08,099
features might be invisible not used in

915
00:35:08,099 --> 00:35:11,160
the main app so it will give you a

916
00:35:11,160 --> 00:35:13,500
competitive advantage

917
00:35:13,500 --> 00:35:15,599
okay this is a this is another

918
00:35:15,599 --> 00:35:17,640
vulnerability that I found last year

919
00:35:17,640 --> 00:35:20,520
again in a live hacking event so uh I

920
00:35:20,520 --> 00:35:22,079
I'm pretty sure a lot of people missed

921
00:35:22,079 --> 00:35:23,460
it because they haven't they haven't

922
00:35:23,460 --> 00:35:25,980
thoroughly read those JavaScript files

923
00:35:25,980 --> 00:35:29,099
so what happened here is that I was able

924
00:35:29,099 --> 00:35:33,960
to take over uh any account on three uh

925
00:35:33,960 --> 00:35:35,640
three multiple three different services

926
00:35:35,640 --> 00:35:39,240
for this company uh so basically I was

927
00:35:39,240 --> 00:35:41,520
just looking at the JavaScript files and

928
00:35:41,520 --> 00:35:43,020
I found this endpoint the first one

929
00:35:43,020 --> 00:35:45,480
partner connect so I found this endpoint

930
00:35:45,480 --> 00:35:48,720
uh there is the path parameter so when

931
00:35:48,720 --> 00:35:52,020
you navigate to that endpoint you are

932
00:35:52,020 --> 00:35:54,540
actually being redirected to their

933
00:35:54,540 --> 00:35:56,820
entertainment service it's the so

934
00:35:56,820 --> 00:35:58,079
basically they're using that this

935
00:35:58,079 --> 00:36:01,020
endpoint for authentication uh so

936
00:36:01,020 --> 00:36:03,660
basically the path parameter was

937
00:36:03,660 --> 00:36:05,760
intriguing so I was like okay let's try

938
00:36:05,760 --> 00:36:08,099
an open redirect on this path parameter

939
00:36:08,099 --> 00:36:10,200
so I tried the most typical payload

940
00:36:10,200 --> 00:36:13,320
which was just using the dot example

941
00:36:13,320 --> 00:36:15,900
that com so basically the the the the

942
00:36:15,900 --> 00:36:18,359
the the the companies domain will become

943
00:36:18,359 --> 00:36:20,820
a sub domain and then the I realized

944
00:36:20,820 --> 00:36:23,160
that the path parameter was was uh

945
00:36:23,160 --> 00:36:24,540
vulnerable to an open redirect

946
00:36:24,540 --> 00:36:27,480
vulnerability and what is intriguing

947
00:36:27,480 --> 00:36:29,280
here is that we in the redirection

948
00:36:29,280 --> 00:36:32,099
happens it actually leaks the user

949
00:36:32,099 --> 00:36:34,140
access token and I can use that access

950
00:36:34,140 --> 00:36:37,500
token to take over to uh interact with

951
00:36:37,500 --> 00:36:39,720
to interact with the user with the

952
00:36:39,720 --> 00:36:41,880
victims account so basically here though

953
00:36:41,880 --> 00:36:43,380
what I'm just gonna what I'm just saying

954
00:36:43,380 --> 00:36:44,880
is that I found it because I read the

955
00:36:44,880 --> 00:36:46,260
JavaScript that's how I found that

956
00:36:46,260 --> 00:36:48,119
endpoint and that's how I found those

957
00:36:48,119 --> 00:36:50,520
parameters and constructed them and this

958
00:36:50,520 --> 00:36:52,980
allowed me to take uh over their

959
00:36:52,980 --> 00:36:54,900
entertain the user entertainment account

960
00:36:54,900 --> 00:36:57,300
as you can see in the use case parameter

961
00:36:57,300 --> 00:36:59,880
it holds entertainment there was also a

962
00:36:59,880 --> 00:37:02,460
dining one there is another service

963
00:37:02,460 --> 00:37:05,640
called uh travel so basically I can take

964
00:37:05,640 --> 00:37:08,640
over three uh three services

965
00:37:08,640 --> 00:37:13,140
and it was paid as a high security but

966
00:37:13,140 --> 00:37:15,540
all right so we're just talking about

967
00:37:15,540 --> 00:37:17,880
JavaScript files how important they are

968
00:37:17,880 --> 00:37:19,980
because they have so many juicy stuff in

969
00:37:19,980 --> 00:37:21,839
there but one one other thing that you

970
00:37:21,839 --> 00:37:24,000
can actually do is that you monitor the

971
00:37:24,000 --> 00:37:25,800
changes because like in those

972
00:37:25,800 --> 00:37:28,140
javascripts uh a lot of developers I

973
00:37:28,140 --> 00:37:29,820
said earlier they are always pushing new

974
00:37:29,820 --> 00:37:31,500
code they are always building new

975
00:37:31,500 --> 00:37:33,480
features they're building new stuff so

976
00:37:33,480 --> 00:37:35,339
so they're always changing these

977
00:37:35,339 --> 00:37:37,200
JavaScript files what you want to do is

978
00:37:37,200 --> 00:37:39,060
you monitor them you monitor them so

979
00:37:39,060 --> 00:37:40,800
when they change something in that

980
00:37:40,800 --> 00:37:43,020
JavaScript you get a notification and

981
00:37:43,020 --> 00:37:45,240
you are the first one to check it so

982
00:37:45,240 --> 00:37:46,980
what I recommend that if you want to

983
00:37:46,980 --> 00:37:49,380
monitor these JavaScript this is a this

984
00:37:49,380 --> 00:37:51,180
is a tool that I recommend I I

985
00:37:51,180 --> 00:37:53,640
contributed to building it it is called

986
00:37:53,640 --> 00:37:56,160
jsmon so basically you give it the

987
00:37:56,160 --> 00:37:59,040
JavaScript links and it just monitors

988
00:37:59,040 --> 00:38:01,500
them on a daily basis and then when is

989
00:38:01,500 --> 00:38:02,760
when there is a change on that

990
00:38:02,760 --> 00:38:04,140
Javascript file you just get a

991
00:38:04,140 --> 00:38:06,420
notification and this will give you a

992
00:38:06,420 --> 00:38:07,800
competitive Advantage because you're

993
00:38:07,800 --> 00:38:09,839
gonna be the first one to check for the

994
00:38:09,839 --> 00:38:11,820
new changes maybe you'll find uh

995
00:38:11,820 --> 00:38:14,599
something vulnerable

996
00:38:15,140 --> 00:38:18,359
uh similarly I I mentioned earlier that

997
00:38:18,359 --> 00:38:19,920
you should be fuzzing into points

998
00:38:19,920 --> 00:38:22,020
parameters everything uh one way you can

999
00:38:22,020 --> 00:38:24,060
do that is one of my favorite extensions

1000
00:38:24,060 --> 00:38:27,180
is it is called param Miner paraminer

1001
00:38:27,180 --> 00:38:29,760
basically allows you to uh enumerate

1002
00:38:29,760 --> 00:38:32,040
parameters when you have an HTTP request

1003
00:38:32,040 --> 00:38:34,740
uh and then you don't have much

1004
00:38:34,740 --> 00:38:36,900
information about that HTTP request you

1005
00:38:36,900 --> 00:38:38,579
might use paraminer so you can actually

1006
00:38:38,579 --> 00:38:41,160
enumerate hidden parameters you can

1007
00:38:41,160 --> 00:38:46,200
enumerate uh headers uh and and a lot of

1008
00:38:46,200 --> 00:38:47,460
stuff that you can integrate with

1009
00:38:47,460 --> 00:38:49,680
paraminer it has a huge word list it

1010
00:38:49,680 --> 00:38:51,599
actually works very well I've had really

1011
00:38:51,599 --> 00:38:53,640
good success with it and I highly

1012
00:38:53,640 --> 00:38:54,900
recommend it

1013
00:38:54,900 --> 00:38:57,420
uh there were there were times when I

1014
00:38:57,420 --> 00:38:59,220
found like a hidden hitter that was

1015
00:38:59,220 --> 00:39:01,500
vulnerable to a SQL injection uh there

1016
00:39:01,500 --> 00:39:03,060
was a time when I found a hidden

1017
00:39:03,060 --> 00:39:05,579
parameter called URL which was also

1018
00:39:05,579 --> 00:39:07,980
vulnerable to an ISS RF vulnerability so

1019
00:39:07,980 --> 00:39:09,720
there is so much you can do with

1020
00:39:09,720 --> 00:39:11,280
paraminer

1021
00:39:11,280 --> 00:39:13,619
and just talking about the application

1022
00:39:13,619 --> 00:39:15,720
Level uh application based

1023
00:39:15,720 --> 00:39:17,220
reconnaissance here we are just talking

1024
00:39:17,220 --> 00:39:18,720
about application based reconnaissance

1025
00:39:18,720 --> 00:39:20,160
we're not talking about enumerating

1026
00:39:20,160 --> 00:39:22,200
subdomains or whatever because this is

1027
00:39:22,200 --> 00:39:23,940
way more important actually and one way

1028
00:39:23,940 --> 00:39:25,680
to actually enumerate endpoints is to

1029
00:39:25,680 --> 00:39:28,740
use the the tool that I call go this is

1030
00:39:28,740 --> 00:39:31,920
the best tool ever and props to carbon

1031
00:39:31,920 --> 00:39:34,260
who built this tool so basically this

1032
00:39:34,260 --> 00:39:36,599
one when you give it the the the asset

1033
00:39:36,599 --> 00:39:39,240
the Target that you want it just uh

1034
00:39:39,240 --> 00:39:41,300
gives you all the end points that were

1035
00:39:41,300 --> 00:39:44,220
previously indexed in like the internet

1036
00:39:44,220 --> 00:39:47,040
archive or index somewhere else so

1037
00:39:47,040 --> 00:39:49,619
basically you have uh you have an access

1038
00:39:49,619 --> 00:39:52,320
to a whole lot of endpoints that you can

1039
00:39:52,320 --> 00:39:55,020
start hacking on so this this tool is

1040
00:39:55,020 --> 00:39:56,820
really amazing great success with it as

1041
00:39:56,820 --> 00:39:59,579
well so highly recommend it

1042
00:39:59,579 --> 00:40:02,220
all right scope is negotiable uh

1043
00:40:02,220 --> 00:40:03,599
basically when you're hacking on a

1044
00:40:03,599 --> 00:40:05,400
program there's like there is an

1045
00:40:05,400 --> 00:40:07,380
in-scope assets the company tells you

1046
00:40:07,380 --> 00:40:09,420
you only hack on these assets these

1047
00:40:09,420 --> 00:40:12,359
domain names don't hack on this domain

1048
00:40:12,359 --> 00:40:14,400
names so we call it disco so basically

1049
00:40:14,400 --> 00:40:16,980
when you're hacking on an app sometimes

1050
00:40:16,980 --> 00:40:19,140
you're limited sometimes the app is very

1051
00:40:19,140 --> 00:40:21,900
limited you don't have much access what

1052
00:40:21,900 --> 00:40:24,180
I what I suggest is that you expand the

1053
00:40:24,180 --> 00:40:27,060
scope how you check if the company has

1054
00:40:27,060 --> 00:40:28,680
so basically if you're hacking the

1055
00:40:28,680 --> 00:40:31,020
website their website check if the if

1056
00:40:31,020 --> 00:40:33,420
the company has a mobile app

1057
00:40:33,420 --> 00:40:35,099
check maybe they have a browser

1058
00:40:35,099 --> 00:40:37,440
extension or maybe they have desktop app

1059
00:40:37,440 --> 00:40:40,140
or just some other kind of app when when

1060
00:40:40,140 --> 00:40:42,119
they have these you can just decompile

1061
00:40:42,119 --> 00:40:44,460
them not necessarily to hack on them but

1062
00:40:44,460 --> 00:40:46,800
just decompile them to gather all the

1063
00:40:46,800 --> 00:40:49,380
leads and insights in inside those apps

1064
00:40:49,380 --> 00:40:51,180
maybe you'll find hard-coded in points

1065
00:40:51,180 --> 00:40:54,180
you'll find juicy hard-coded uh

1066
00:40:54,180 --> 00:40:56,760
credentials so this is the way to expand

1067
00:40:56,760 --> 00:40:58,980
the scope this is basically may sound

1068
00:40:58,980 --> 00:41:00,960
like going out of scope but as long as

1069
00:41:00,960 --> 00:41:02,820
you're not necessarily mainly hacking on

1070
00:41:02,820 --> 00:41:05,640
that app you're gonna be fine so as yeah

1071
00:41:05,640 --> 00:41:08,280
I mentioned it there never hack

1072
00:41:08,280 --> 00:41:10,380
never hack one out of scope assets but

1073
00:41:10,380 --> 00:41:12,960
only use it to click insights on that

1074
00:41:12,960 --> 00:41:14,579
list this is this an example another

1075
00:41:14,579 --> 00:41:16,619
vulnerability so basically I was hacking

1076
00:41:16,619 --> 00:41:18,180
on this company I've been hacking on it

1077
00:41:18,180 --> 00:41:20,760
for like two years and at one point I

1078
00:41:20,760 --> 00:41:22,859
couldn't find anything anymore uh the

1079
00:41:22,859 --> 00:41:25,380
scope just seems very limiting but this

1080
00:41:25,380 --> 00:41:28,740
company they had an extension a browser

1081
00:41:28,740 --> 00:41:30,240
extension the browser extension was not

1082
00:41:30,240 --> 00:41:32,940
part of the scope but uh I I needed I

1083
00:41:32,940 --> 00:41:35,880
needed some further leads that can help

1084
00:41:35,880 --> 00:41:38,280
me to hack on the main scope so what I

1085
00:41:38,280 --> 00:41:40,920
did I downloaded the extension I

1086
00:41:40,920 --> 00:41:44,040
decompile it which is pretty easy uh I

1087
00:41:44,040 --> 00:41:46,859
decompiled the the browser extension

1088
00:41:46,859 --> 00:41:48,420
and

1089
00:41:48,420 --> 00:41:50,760
yeah so it had three million installs

1090
00:41:50,760 --> 00:41:53,460
which is pretty pretty high uh so I

1091
00:41:53,460 --> 00:41:55,260
decompiled it the first thing I did I

1092
00:41:55,260 --> 00:41:58,020
reviewed the manifest.json file because

1093
00:41:58,020 --> 00:42:00,480
when you decompile and Chrome extension

1094
00:42:00,480 --> 00:42:01,800
for example there is always a manifest

1095
00:42:01,800 --> 00:42:04,680
Json that has some definitions so what I

1096
00:42:04,680 --> 00:42:06,060
noticed is that they have some white

1097
00:42:06,060 --> 00:42:09,560
listed domain names this one I call it

1098
00:42:09,560 --> 00:42:11,940
evm-target.com so this one was white

1099
00:42:11,940 --> 00:42:14,160
listed there and what I noticed is that

1100
00:42:14,160 --> 00:42:16,560
this domain name it was whitelisted but

1101
00:42:16,560 --> 00:42:19,260
it was expired I mean I could buy it I

1102
00:42:19,260 --> 00:42:21,060
could purchase that domain name for 12

1103
00:42:21,060 --> 00:42:22,440
euros

1104
00:42:22,440 --> 00:42:24,599
but I I was like looking for what can I

1105
00:42:24,599 --> 00:42:26,160
use this domain name for even if I

1106
00:42:26,160 --> 00:42:28,140
purchase it what can I what can I use it

1107
00:42:28,140 --> 00:42:30,060
for is there something I can do with it

1108
00:42:30,060 --> 00:42:33,720
so I I do I mean I do die I dived into

1109
00:42:33,720 --> 00:42:36,240
the the good analysis and what I found

1110
00:42:36,240 --> 00:42:39,480
in the the code is that there is a

1111
00:42:39,480 --> 00:42:42,900
rejects validation that it it was

1112
00:42:42,900 --> 00:42:45,480
chicken for white listed domain names it

1113
00:42:45,480 --> 00:42:48,300
was chicken if those that domain name is

1114
00:42:48,300 --> 00:42:50,460
wirelessly or not if it's white listed

1115
00:42:50,460 --> 00:42:53,099
if it's white listed then the extension

1116
00:42:53,099 --> 00:42:55,380
will push a header will a pin the header

1117
00:42:55,380 --> 00:42:58,319
the user request with the as you can see

1118
00:42:58,319 --> 00:43:01,200
below xwb session with the user decision

1119
00:43:01,200 --> 00:43:03,720
so basically if I purchase that domain

1120
00:43:03,720 --> 00:43:06,720
name right and there is a victim that is

1121
00:43:06,720 --> 00:43:08,940
using the Chrome extension and then they

1122
00:43:08,940 --> 00:43:11,520
visit that domain name they're they're

1123
00:43:11,520 --> 00:43:13,920
HTTP request will contain their decision

1124
00:43:13,920 --> 00:43:16,680
so I can I can I can freely extract it

1125
00:43:16,680 --> 00:43:18,240
because they're visiting my own website

1126
00:43:18,240 --> 00:43:20,339
so that's what I basically did I just

1127
00:43:20,339 --> 00:43:22,440
purchased that domain name I set up my P

1128
00:43:22,440 --> 00:43:24,540
you see so basically when I send the

1129
00:43:24,540 --> 00:43:26,819
victim when I send the website to the

1130
00:43:26,819 --> 00:43:28,680
victim and they access it I can extract

1131
00:43:28,680 --> 00:43:30,540
their session from the header because it

1132
00:43:30,540 --> 00:43:32,220
because my domain name that I purchased

1133
00:43:32,220 --> 00:43:34,859
was white listed so that was uh that was

1134
00:43:34,859 --> 00:43:36,599
an account takeover again it was a it

1135
00:43:36,599 --> 00:43:39,359
was a high CV bug as I said just uh

1136
00:43:39,359 --> 00:43:41,520
expand the scope if you're limited try

1137
00:43:41,520 --> 00:43:43,560
to explore other things that the company

1138
00:43:43,560 --> 00:43:46,560
might have on the side

1139
00:43:46,560 --> 00:43:49,680
yeah exactly so uh as I was mentioning

1140
00:43:49,680 --> 00:43:52,020
uh I bought the dummy name when the user

1141
00:43:52,020 --> 00:43:54,240
accesses my domain name there is a

1142
00:43:54,240 --> 00:43:55,980
session token that is appended to their

1143
00:43:55,980 --> 00:43:58,560
header I can I can extract it and I can

1144
00:43:58,560 --> 00:44:00,660
show it there as you can see the from

1145
00:44:00,660 --> 00:44:02,700
the POC

1146
00:44:02,700 --> 00:44:05,900
all right uh just talking about the uh

1147
00:44:05,900 --> 00:44:07,740
understanding the app this is a

1148
00:44:07,740 --> 00:44:10,680
vulnerability that I found uh that

1149
00:44:10,680 --> 00:44:12,780
really required a deep understanding of

1150
00:44:12,780 --> 00:44:15,060
the application so basically this is a

1151
00:44:15,060 --> 00:44:16,440
company that I've been hacking for three

1152
00:44:16,440 --> 00:44:18,180
years and I haven't found this one until

1153
00:44:18,180 --> 00:44:20,579
until last year because it really

1154
00:44:20,579 --> 00:44:22,500
required deep understanding of the app

1155
00:44:22,500 --> 00:44:24,420
and because it's a bit complicated so it

1156
00:44:24,420 --> 00:44:26,160
wasn't an account takeover due to Broken

1157
00:44:26,160 --> 00:44:28,680
authentication so what was happening is

1158
00:44:28,680 --> 00:44:30,119
that when the user

1159
00:44:30,119 --> 00:44:33,119
tries to log into the developer portal

1160
00:44:33,119 --> 00:44:35,160
there when they navigate to the sign-in

1161
00:44:35,160 --> 00:44:37,920
page there is an odd flow that is being

1162
00:44:37,920 --> 00:44:40,380
initiated and the oauth flow as you can

1163
00:44:40,380 --> 00:44:42,480
see here I noticed there's a correlation

1164
00:44:42,480 --> 00:44:45,000
ID parameter I did not know what it what

1165
00:44:45,000 --> 00:44:46,859
it what what it was doing but I was it

1166
00:44:46,859 --> 00:44:50,460
was very intriguing so when the user uh

1167
00:44:50,460 --> 00:44:52,560
enters their email address and password

1168
00:44:52,560 --> 00:44:55,740
then they log in what happens next

1169
00:44:55,740 --> 00:44:59,700
is that the the user is redirected to a

1170
00:44:59,700 --> 00:45:02,280
login callback with the correlation ID

1171
00:45:02,280 --> 00:45:05,040
that is being authenticated so the

1172
00:45:05,040 --> 00:45:08,220
correlation ID is being taken and then

1173
00:45:08,220 --> 00:45:11,460
sent to an auth callback which then

1174
00:45:11,460 --> 00:45:14,040
Returns the authorization code so

1175
00:45:14,040 --> 00:45:16,619
basically it's the user navigates the

1176
00:45:16,619 --> 00:45:18,839
sign-in page there's an old flow that is

1177
00:45:18,839 --> 00:45:20,760
being initiated with a correlation ID

1178
00:45:20,760 --> 00:45:23,280
when the user logs into the page there

1179
00:45:23,280 --> 00:45:25,680
is the correlation ID is being sent to

1180
00:45:25,680 --> 00:45:28,079
the login callback and then there is the

1181
00:45:28,079 --> 00:45:29,280
authorization code that is being

1182
00:45:29,280 --> 00:45:30,839
returned so it's like I was like

1183
00:45:30,839 --> 00:45:32,880
thinking how can I hack this one what

1184
00:45:32,880 --> 00:45:35,520
can I want to what can I do here so

1185
00:45:35,520 --> 00:45:37,920
what I found is that actually I can

1186
00:45:37,920 --> 00:45:41,640
generate my own login login link with my

1187
00:45:41,640 --> 00:45:44,099
own correlation ID because basically if

1188
00:45:44,099 --> 00:45:46,200
you know the user's correlation ID you

1189
00:45:46,200 --> 00:45:48,420
can generate their authorization code so

1190
00:45:48,420 --> 00:45:51,300
basically I generated my own login link

1191
00:45:51,300 --> 00:45:53,460
with my own correlation ID as you can

1192
00:45:53,460 --> 00:45:56,579
see there then I send it to the victim

1193
00:45:56,579 --> 00:45:58,980
so basically when the victim

1194
00:45:58,980 --> 00:46:01,680
looks they log into their account the

1195
00:46:01,680 --> 00:46:04,440
correlation ID has become authenticated

1196
00:46:04,440 --> 00:46:06,359
so basically I have the correlation ID

1197
00:46:06,359 --> 00:46:09,660
so I can send the correlation ID to an

1198
00:46:09,660 --> 00:46:12,599
oauth endpoint so I can exchange it with

1199
00:46:12,599 --> 00:46:14,880
an authorization token but the catch

1200
00:46:14,880 --> 00:46:16,980
here is that I have to beat the user I

1201
00:46:16,980 --> 00:46:18,599
have to be the first one to exchange the

1202
00:46:18,599 --> 00:46:21,800
correlation ID into into an oauth

1203
00:46:21,800 --> 00:46:24,599
authorization account so in this step I

1204
00:46:24,599 --> 00:46:26,520
had I had to automate it so basically

1205
00:46:26,520 --> 00:46:29,339
when the user logs in I quickly exchange

1206
00:46:29,339 --> 00:46:31,260
the correlation ID into an authorization

1207
00:46:31,260 --> 00:46:33,359
code and that was an account Takeover in

1208
00:46:33,359 --> 00:46:35,099
that one and I haven't found it until

1209
00:46:35,099 --> 00:46:37,440
like three years later because I I it

1210
00:46:37,440 --> 00:46:40,380
really required understanding the app

1211
00:46:40,380 --> 00:46:42,060
let's talk about Automation and I've

1212
00:46:42,060 --> 00:46:43,619
mentioned automation quite a few times

1213
00:46:43,619 --> 00:46:46,619
but let's talk about it so when we talk

1214
00:46:46,619 --> 00:46:48,540
about automation there are there are

1215
00:46:48,540 --> 00:46:51,060
different uh aspects of automation that

1216
00:46:51,060 --> 00:46:52,560
we talk about the first one is

1217
00:46:52,560 --> 00:46:54,660
automating Recon and content Discovery

1218
00:46:54,660 --> 00:46:57,300
by this I mean just like automating the

1219
00:46:57,300 --> 00:47:00,359
data collection it could be collecting

1220
00:47:00,359 --> 00:47:02,760
subdomains DNS records which is sports

1221
00:47:02,760 --> 00:47:05,160
scanning directory and file enumerations

1222
00:47:05,160 --> 00:47:07,440
and there are so many tools to achieve

1223
00:47:07,440 --> 00:47:08,579
this this is one of parts of the

1224
00:47:08,579 --> 00:47:11,339
automation we also talk about automating

1225
00:47:11,339 --> 00:47:13,920
automating vulnerability Discovery uh

1226
00:47:13,920 --> 00:47:16,200
it's basically automating vulnerability

1227
00:47:16,200 --> 00:47:18,480
Discovery could be active or passive

1228
00:47:18,480 --> 00:47:20,460
vulnerability scanning so basically

1229
00:47:20,460 --> 00:47:21,900
you're automating the scanning instead

1230
00:47:21,900 --> 00:47:24,180
of doing the manual thing also we talk

1231
00:47:24,180 --> 00:47:25,980
about automating change changes

1232
00:47:25,980 --> 00:47:27,839
monitoring as I mentioned earlier you

1233
00:47:27,839 --> 00:47:30,180
can automate monitoring JavaScript files

1234
00:47:30,180 --> 00:47:32,040
so you don't have to check on the

1235
00:47:32,040 --> 00:47:33,780
JavaScript every once in a while you can

1236
00:47:33,780 --> 00:47:35,520
just automate that we'll also talk about

1237
00:47:35,520 --> 00:47:37,859
automating repetitive tasks some boring

1238
00:47:37,859 --> 00:47:39,900
tasks that you always do manually you

1239
00:47:39,900 --> 00:47:41,520
can automate that you can just write a

1240
00:47:41,520 --> 00:47:43,319
script to just automate it so you don't

1241
00:47:43,319 --> 00:47:46,079
have to do the boring test and for these

1242
00:47:46,079 --> 00:47:48,119
categories for each category we have a

1243
00:47:48,119 --> 00:47:50,339
bunch of tools that you can use for the

1244
00:47:50,339 --> 00:47:52,380
recall for example there is Ms hack

1245
00:47:52,380 --> 00:47:55,500
crawler https DNS X there's so many

1246
00:47:55,500 --> 00:47:57,060
tools that you can use for automation

1247
00:47:57,060 --> 00:47:58,920
you don't even need to build your own

1248
00:47:58,920 --> 00:48:01,440
tools anymore there's so many open open

1249
00:48:01,440 --> 00:48:03,660
source tools that you can use for for

1250
00:48:03,660 --> 00:48:06,119
the vulnerability the automated

1251
00:48:06,119 --> 00:48:07,500
vulnerability Discovery there is a

1252
00:48:07,500 --> 00:48:09,300
nuclear I'm sure a lot of you are very

1253
00:48:09,300 --> 00:48:12,359
familiar with nuclear as well sorry uh

1254
00:48:12,359 --> 00:48:15,119
and for the changes you can use Ms sub

1255
00:48:15,119 --> 00:48:17,760
Lord is my tool to to monitor the

1256
00:48:17,760 --> 00:48:20,760
subdomain enumeration and then we have

1257
00:48:20,760 --> 00:48:24,420
other tools for repetitive tasks

1258
00:48:24,420 --> 00:48:27,480
so when we talk about automation this is

1259
00:48:27,480 --> 00:48:29,520
a simple flow that you can build your

1260
00:48:29,520 --> 00:48:31,440
own yourself if you want to build your

1261
00:48:31,440 --> 00:48:32,700
own automation

1262
00:48:32,700 --> 00:48:35,099
so this is a this is a this is a simple

1263
00:48:35,099 --> 00:48:37,260
reconnaissance flow it starts from the

1264
00:48:37,260 --> 00:48:38,819
first step which is loading the scope

1265
00:48:38,819 --> 00:48:42,480
load is basically you go to uh uh hacker

1266
00:48:42,480 --> 00:48:44,280
one like a back money platform and you

1267
00:48:44,280 --> 00:48:47,700
extract all the assets that are in scope

1268
00:48:47,700 --> 00:48:49,980
that the companies are interested in so

1269
00:48:49,980 --> 00:48:51,720
you extract everything you can use BB

1270
00:48:51,720 --> 00:48:53,880
scope tool which allows you to extract

1271
00:48:53,880 --> 00:48:56,220
everything off in an automatic way and

1272
00:48:56,220 --> 00:48:58,200
the step the second way the second thing

1273
00:48:58,200 --> 00:49:00,180
you want to do when you have the assets

1274
00:49:00,180 --> 00:49:02,400
you want to hack is to run sub domain

1275
00:49:02,400 --> 00:49:04,560
enumerations or enumeration on those

1276
00:49:04,560 --> 00:49:06,900
assets so you can find subdomains you

1277
00:49:06,900 --> 00:49:08,460
can see some tools that you can use I

1278
00:49:08,460 --> 00:49:10,800
use EMS and then you can use pure

1279
00:49:10,800 --> 00:49:13,079
mutation technique this is an amazing

1280
00:49:13,079 --> 00:49:14,760
technique that I really recommend

1281
00:49:14,760 --> 00:49:16,920
permutation is basically when you find a

1282
00:49:16,920 --> 00:49:19,079
subdomain say for example admin dot

1283
00:49:19,079 --> 00:49:21,540
example.com you can you can try

1284
00:49:21,540 --> 00:49:24,000
permutation which is like admin Dash

1285
00:49:24,000 --> 00:49:28,020
test or admin Dash uh prod this is this

1286
00:49:28,020 --> 00:49:29,220
is what we call primitation you're

1287
00:49:29,220 --> 00:49:31,260
primitive different words so you can

1288
00:49:31,260 --> 00:49:33,119
find so you can find more subtle means

1289
00:49:33,119 --> 00:49:35,400
and actually do permutation you can run

1290
00:49:35,400 --> 00:49:37,920
DNS resolution so you can find the the

1291
00:49:37,920 --> 00:49:39,599
subdomains they're actually they're

1292
00:49:39,599 --> 00:49:41,760
actually resolving and then you can do

1293
00:49:41,760 --> 00:49:44,700
DNS enumeration Port scanning within map

1294
00:49:44,700 --> 00:49:46,920
and then the last step is vulnerability

1295
00:49:46,920 --> 00:49:48,540
disclosure once you have all that data

1296
00:49:48,540 --> 00:49:49,560
you're going to run vulnerability

1297
00:49:49,560 --> 00:49:52,440
scanning on it you can find bugs so this

1298
00:49:52,440 --> 00:49:54,240
is a simple flow if you want to build

1299
00:49:54,240 --> 00:49:55,859
your own automation

1300
00:49:55,859 --> 00:49:58,200
this is a this is a project of mine that

1301
00:49:58,200 --> 00:49:59,460
I've been working on with a friend of

1302
00:49:59,460 --> 00:50:01,980
mine maluk last year uh so we've been

1303
00:50:01,980 --> 00:50:04,500
working on building our own uh our own

1304
00:50:04,500 --> 00:50:06,599
automation uh this is how it looks like

1305
00:50:06,599 --> 00:50:09,540
so we basically built it with python on

1306
00:50:09,540 --> 00:50:12,960
top of Django framework we use Luigi for

1307
00:50:12,960 --> 00:50:15,780
tasks or orchestration bootstrap for the

1308
00:50:15,780 --> 00:50:18,060
for the interface and we used postgres

1309
00:50:18,060 --> 00:50:20,579
for the database uh for the open for the

1310
00:50:20,579 --> 00:50:22,260
tools that we use we basically used in

1311
00:50:22,260 --> 00:50:25,260
map which is a classic we used amass for

1312
00:50:25,260 --> 00:50:27,660
subdomains enumeration we used a bunch

1313
00:50:27,660 --> 00:50:30,960
of Port Discovery uh projects like httpx

1314
00:50:30,960 --> 00:50:33,300
and nuclear for vulnerability scanning

1315
00:50:33,300 --> 00:50:34,859
so this is how it looks like we can add

1316
00:50:34,859 --> 00:50:38,339
acids we can edit assets uh this is the

1317
00:50:38,339 --> 00:50:40,020
this is the notifications we would get

1318
00:50:40,020 --> 00:50:41,400
when there is a when the automation

1319
00:50:41,400 --> 00:50:44,220
finds vulnerability when we find the uh

1320
00:50:44,220 --> 00:50:45,079
an account

1321
00:50:45,079 --> 00:50:49,020
sub domain takeover for example uh this

1322
00:50:49,020 --> 00:50:51,359
is our dashboard the total we were

1323
00:50:51,359 --> 00:50:52,619
monitoring

1324
00:50:52,619 --> 00:50:56,579
84 uh how much is that 8 million assets

1325
00:50:56,579 --> 00:50:58,800
we will continuously monitoring 8

1326
00:50:58,800 --> 00:51:01,740
million assets we've got like 55

1327
00:51:01,740 --> 00:51:03,240
000 vulnerabilities a lot of them are

1328
00:51:03,240 --> 00:51:04,859
actually informative because we did not

1329
00:51:04,859 --> 00:51:07,500
filter filter it out so if you want to

1330
00:51:07,500 --> 00:51:09,480
build the automation it's it's as easy

1331
00:51:09,480 --> 00:51:12,720
as that as I showed you earlier but but

1332
00:51:12,720 --> 00:51:14,640
one thing that you know is that there's

1333
00:51:14,640 --> 00:51:16,980
there's so many open source projects as

1334
00:51:16,980 --> 00:51:18,180
I mentioned there are so many open

1335
00:51:18,180 --> 00:51:19,440
source tools you don't even need to

1336
00:51:19,440 --> 00:51:21,119
build your own tools you can just use

1337
00:51:21,119 --> 00:51:24,300
those open source in your automation uh

1338
00:51:24,300 --> 00:51:26,220
also one thing is that automation should

1339
00:51:26,220 --> 00:51:28,200
be complementary what I mean by that is

1340
00:51:28,200 --> 00:51:29,640
that you should be focusing on manual

1341
00:51:29,640 --> 00:51:30,660
hacking

1342
00:51:30,660 --> 00:51:33,180
automation you just use it to find some

1343
00:51:33,180 --> 00:51:36,059
bugs that uh like for example low

1344
00:51:36,059 --> 00:51:38,460
hanging fruits you want to focus on high

1345
00:51:38,460 --> 00:51:40,740
severity bugs and then use automation to

1346
00:51:40,740 --> 00:51:42,420
find some low hanging throws some easy

1347
00:51:42,420 --> 00:51:45,059
box on this side but you always want to

1348
00:51:45,059 --> 00:51:47,220
focus on manual hacking

1349
00:51:47,220 --> 00:51:50,160
also efficient automation should give

1350
00:51:50,160 --> 00:51:53,099
you actionable actionable box if your

1351
00:51:53,099 --> 00:51:54,660
automation is just finding false

1352
00:51:54,660 --> 00:51:56,760
positives like informative bugs

1353
00:51:56,760 --> 00:51:58,319
something that is not actionable then

1354
00:51:58,319 --> 00:51:59,819
it's just wasting your time so you want

1355
00:51:59,819 --> 00:52:01,200
to make sure that your automation is

1356
00:52:01,200 --> 00:52:03,839
actually fine in Security Box uh the

1357
00:52:03,839 --> 00:52:06,599
challenge is Task orchestration uh a lot

1358
00:52:06,599 --> 00:52:08,400
of people they build their automation

1359
00:52:08,400 --> 00:52:10,680
but it's just using a bunch of bash

1360
00:52:10,680 --> 00:52:13,680
scripts and if you want script uh breaks

1361
00:52:13,680 --> 00:52:16,859
down the whole automation breaks down so

1362
00:52:16,859 --> 00:52:19,020
you want to use some tools for task

1363
00:52:19,020 --> 00:52:21,240
orchestration we used Luigi which was

1364
00:52:21,240 --> 00:52:24,119
built by Spotify and then you want to do

1365
00:52:24,119 --> 00:52:26,099
load distribution across multiple

1366
00:52:26,099 --> 00:52:27,720
servers because when you're doing

1367
00:52:27,720 --> 00:52:30,059
automation you're you're monitoring so

1368
00:52:30,059 --> 00:52:32,460
many assets you cannot do that on one

1369
00:52:32,460 --> 00:52:33,960
server you need so many different

1370
00:52:33,960 --> 00:52:37,200
servers so you need to uh balance the

1371
00:52:37,200 --> 00:52:39,300
load across multiple Services you can

1372
00:52:39,300 --> 00:52:41,520
use kubernetes for example or you can

1373
00:52:41,520 --> 00:52:43,440
use Fleet and Axiom which is very

1374
00:52:43,440 --> 00:52:46,260
compatible with back bounty hunting uh

1375
00:52:46,260 --> 00:52:48,059
also most technology automation they

1376
00:52:48,059 --> 00:52:50,579
catch low hanging fruits uh and as I

1377
00:52:50,579 --> 00:52:52,859
mentioned the the low severity and

1378
00:52:52,859 --> 00:52:54,480
medium severity bugs they're usually

1379
00:52:54,480 --> 00:52:57,000
just gonna result in me in duplicates

1380
00:52:57,000 --> 00:52:59,099
which is frustrating and as I mentioned

1381
00:52:59,099 --> 00:53:01,079
there are so many automation Frameworks

1382
00:53:01,079 --> 00:53:02,880
that you can just install you don't have

1383
00:53:02,880 --> 00:53:05,160
to build your own there is Recon for the

1384
00:53:05,160 --> 00:53:09,180
win osmetus 3 engine Axiom Etc also one

1385
00:53:09,180 --> 00:53:11,819
of the most powerful tools that just uh

1386
00:53:11,819 --> 00:53:14,339
being developed is nuclei which is a

1387
00:53:14,339 --> 00:53:16,619
vulnerability scanner basically a lot of

1388
00:53:16,619 --> 00:53:18,480
bug Hunters they're using it blindly so

1389
00:53:18,480 --> 00:53:20,640
basically they just use nuclear with the

1390
00:53:20,640 --> 00:53:23,579
existing templates uh which is which is

1391
00:53:23,579 --> 00:53:24,960
which is not an effective approach

1392
00:53:24,960 --> 00:53:27,119
because other other countries they're

1393
00:53:27,119 --> 00:53:28,740
doing exactly the same so when you're

1394
00:53:28,740 --> 00:53:30,300
not doing anything different so

1395
00:53:30,300 --> 00:53:31,800
basically you're just gonna get so many

1396
00:53:31,800 --> 00:53:34,020
duplicates if you're using the nuclear

1397
00:53:34,020 --> 00:53:37,140
tool there below you want to do your own

1398
00:53:37,140 --> 00:53:39,000
security research and build your own

1399
00:53:39,000 --> 00:53:42,420
templates and feed them to the tool

1400
00:53:42,420 --> 00:53:44,520
yeah exactly as I mentioned here so

1401
00:53:44,520 --> 00:53:46,140
basically we were always taught like

1402
00:53:46,140 --> 00:53:47,819
when I started hacking I did not know

1403
00:53:47,819 --> 00:53:49,619
how to code so basically I started

1404
00:53:49,619 --> 00:53:51,180
hacking without even any coding

1405
00:53:51,180 --> 00:53:53,099
knowledge and I did I did fine honestly

1406
00:53:53,099 --> 00:53:56,099
I did really fine but just like uh over

1407
00:53:56,099 --> 00:53:57,720
the years you realize that actually

1408
00:53:57,720 --> 00:54:00,180
coding is very important coding on

1409
00:54:00,180 --> 00:54:02,460
reading code is going to give you a

1410
00:54:02,460 --> 00:54:04,740
competitive Advantage so you you can

1411
00:54:04,740 --> 00:54:07,020
actually start hacking without any code

1412
00:54:07,020 --> 00:54:08,700
knowledge you can do it from a black box

1413
00:54:08,700 --> 00:54:10,500
approach but at one point if you want to

1414
00:54:10,500 --> 00:54:11,880
step up your game if you want to be a

1415
00:54:11,880 --> 00:54:13,619
good hacker you want to learn how to

1416
00:54:13,619 --> 00:54:15,839
code you want to learn to read the code

1417
00:54:15,839 --> 00:54:17,760
because it's very necessary and will

1418
00:54:17,760 --> 00:54:20,760
give you a very competitive Advantage uh

1419
00:54:20,760 --> 00:54:23,520
as I said Black Box testing is fun but

1420
00:54:23,520 --> 00:54:25,500
when you can actually read the code

1421
00:54:25,500 --> 00:54:28,920
you're gonna find way more bugs uh even

1422
00:54:28,920 --> 00:54:30,900
even some bugs like the accesses the

1423
00:54:30,900 --> 00:54:33,660
client-side bugs like just a Dom based

1424
00:54:33,660 --> 00:54:34,980
access it requires a certain

1425
00:54:34,980 --> 00:54:36,900
understanding of JavaScript to find it

1426
00:54:36,900 --> 00:54:39,119
so at one point it's very important to

1427
00:54:39,119 --> 00:54:41,819
learn how to code also you can use that

1428
00:54:41,819 --> 00:54:43,859
skill to find zero day vulnerabilities

1429
00:54:43,859 --> 00:54:45,900
in software you can find zero the

1430
00:54:45,900 --> 00:54:47,280
vulnerabilities for example in WordPress

1431
00:54:47,280 --> 00:54:49,980
you can read the code find a bug and

1432
00:54:49,980 --> 00:54:51,240
then you can

1433
00:54:51,240 --> 00:54:53,400
check and find all the companies that

1434
00:54:53,400 --> 00:54:55,319
use WordPress and then you're going to

1435
00:54:55,319 --> 00:54:57,119
get boundaries from there so basically

1436
00:54:57,119 --> 00:54:59,760
you can use it for Uday research and

1437
00:54:59,760 --> 00:55:01,380
also when you're doing security research

1438
00:55:01,380 --> 00:55:02,579
I recommend you look for

1439
00:55:02,579 --> 00:55:04,619
pre-authenticated or unauthenticated

1440
00:55:04,619 --> 00:55:06,960
vulnerabilities because like when your

1441
00:55:06,960 --> 00:55:08,460
participating in back Bounty you cannot

1442
00:55:08,460 --> 00:55:10,740
just tell the organization hey you need

1443
00:55:10,740 --> 00:55:13,140
to log into your account so then you can

1444
00:55:13,140 --> 00:55:15,240
upload this web shell so basically you

1445
00:55:15,240 --> 00:55:17,099
want you are you should be interested in

1446
00:55:17,099 --> 00:55:18,540
finding unauthenticated vulnerabilities

1447
00:55:18,540 --> 00:55:21,660
if you're if you want to do backgrounds

1448
00:55:21,660 --> 00:55:24,180
so another thing that I recommend is

1449
00:55:24,180 --> 00:55:27,780
monitoring for new cves uh so when there

1450
00:55:27,780 --> 00:55:30,420
is a a new vulnerability that was found

1451
00:55:30,420 --> 00:55:32,940
it's usually being assigned a CVA for

1452
00:55:32,940 --> 00:55:35,460
tracking for tracking purposes and what

1453
00:55:35,460 --> 00:55:38,040
I personally do is I track I monitor the

1454
00:55:38,040 --> 00:55:40,859
CV the new cves uh so when there is a

1455
00:55:40,859 --> 00:55:42,960
new CV that is being pushed I get

1456
00:55:42,960 --> 00:55:44,460
notified I know there is a new

1457
00:55:44,460 --> 00:55:46,079
vulnerability that was being found so I

1458
00:55:46,079 --> 00:55:48,660
can actually go and look for it on other

1459
00:55:48,660 --> 00:55:51,300
companies uh so you want to Monitor cves

1460
00:55:51,300 --> 00:55:54,119
and I highly recommend you check

1461
00:55:54,119 --> 00:55:57,540
attacker KB which is a basically kind of

1462
00:55:57,540 --> 00:55:59,880
a forum where other security researchers

1463
00:55:59,880 --> 00:56:02,700
they discuss new vulnerabilities you can

1464
00:56:02,700 --> 00:56:05,220
find pocs you can find exploits there

1465
00:56:05,220 --> 00:56:07,920
that you can basically use in your back

1466
00:56:07,920 --> 00:56:10,140
hunting or hacking

1467
00:56:10,140 --> 00:56:12,059
also if you want to get into security

1468
00:56:12,059 --> 00:56:15,119
research uh these are some of the uh

1469
00:56:15,119 --> 00:56:17,460
references some of the sources that I

1470
00:56:17,460 --> 00:56:19,200
highly recommend so there is this

1471
00:56:19,200 --> 00:56:21,960
article by James Kettle very very good

1472
00:56:21,960 --> 00:56:23,579
researchers if you want to get into

1473
00:56:23,579 --> 00:56:25,920
security researching there is the asset

1474
00:56:25,920 --> 00:56:29,099
Note Block you can find so many uh bugs

1475
00:56:29,099 --> 00:56:31,980
that are being explained in a very good

1476
00:56:31,980 --> 00:56:34,260
way with the technical details and and

1477
00:56:34,260 --> 00:56:36,780
the exploit as well the WASP code review

1478
00:56:36,780 --> 00:56:39,540
guide the pen tester lab code review

1479
00:56:39,540 --> 00:56:41,339
exercises there are some amazing

1480
00:56:41,339 --> 00:56:43,040
exercises if you guys want to get into

1481
00:56:43,040 --> 00:56:46,800
uh into uh

1482
00:56:46,800 --> 00:56:49,859
code analysis and there is the our

1483
00:56:49,859 --> 00:56:52,079
certificate if you guys if there are

1484
00:56:52,079 --> 00:56:53,220
some of you are interested in

1485
00:56:53,220 --> 00:56:55,800
certificates I recommend the advanced

1486
00:56:55,800 --> 00:56:57,720
whip attacks and the explosions insert

1487
00:56:57,720 --> 00:56:59,819
it's a very good one uh has good

1488
00:56:59,819 --> 00:57:01,680
reputation and the office sorts have

1489
00:57:01,680 --> 00:57:04,440
good reputation reputation as well

1490
00:57:04,440 --> 00:57:05,700
all right so let's talk about security

1491
00:57:05,700 --> 00:57:07,980
impact so basically when you're hacking

1492
00:57:07,980 --> 00:57:10,500
uh when you're doing back bounties

1493
00:57:10,500 --> 00:57:11,880
it's not like doing a penetration

1494
00:57:11,880 --> 00:57:13,920
testing you have to show impact when you

1495
00:57:13,920 --> 00:57:15,780
find a bug if it doesn't have a security

1496
00:57:15,780 --> 00:57:18,359
impact then it's not really a bug so

1497
00:57:18,359 --> 00:57:19,859
when you're doing back Bundys you have

1498
00:57:19,859 --> 00:57:21,839
to demonstrate for the organization that

1499
00:57:21,839 --> 00:57:24,240
your bug actually has an actual security

1500
00:57:24,240 --> 00:57:27,720
impact for example here uh if you find

1501
00:57:27,720 --> 00:57:29,700
an exorcist and then you just tell the

1502
00:57:29,700 --> 00:57:31,800
organization hey I found this pop-up I

1503
00:57:31,800 --> 00:57:33,559
can just do this JavaScript

1504
00:57:33,559 --> 00:57:36,000
or you can actually show them that you

1505
00:57:36,000 --> 00:57:38,280
can use the excesses to hijack the user

1506
00:57:38,280 --> 00:57:40,559
session token which one do you think

1507
00:57:40,559 --> 00:57:42,900
would get paid more the simple pop-up

1508
00:57:42,900 --> 00:57:45,119
below or the the one where the the

1509
00:57:45,119 --> 00:57:47,280
attacker has demonstrated they can use

1510
00:57:47,280 --> 00:57:49,380
the accesses for session exfiltration

1511
00:57:49,380 --> 00:57:51,480
I'm pretty sure the first one will get

1512
00:57:51,480 --> 00:57:53,700
paid a lot more than the first example

1513
00:57:53,700 --> 00:57:56,160
it's one bug but you have to demonstrate

1514
00:57:56,160 --> 00:57:58,020
what you can do with it because this is

1515
00:57:58,020 --> 00:57:59,640
not a painting if you're doing back

1516
00:57:59,640 --> 00:58:01,380
bounties it's not a penetration testing

1517
00:58:01,380 --> 00:58:03,599
where you can just like report the bug

1518
00:58:03,599 --> 00:58:05,400
you have to show actual impact you have

1519
00:58:05,400 --> 00:58:06,839
to show the organization what you can do

1520
00:58:06,839 --> 00:58:09,960
with it uh yeah as I mentioned

1521
00:58:09,960 --> 00:58:11,760
background is not a traditional painters

1522
00:58:11,760 --> 00:58:13,380
so you have to demonstrate security

1523
00:58:13,380 --> 00:58:16,500
impact which is very important uh always

1524
00:58:16,500 --> 00:58:18,960
ask this question if you find a bug what

1525
00:58:18,960 --> 00:58:20,700
is the worst thing I can do with this

1526
00:58:20,700 --> 00:58:22,740
vulnerability so always you want to

1527
00:58:22,740 --> 00:58:24,599
always maximize the impact always the

1528
00:58:24,599 --> 00:58:28,559
escalate uh and also most companies they

1529
00:58:28,559 --> 00:58:32,040
pay bounties based on CVSs CVSs is a

1530
00:58:32,040 --> 00:58:34,260
standard there is a standard that we use

1531
00:58:34,260 --> 00:58:36,960
in the industry to assess the severity

1532
00:58:36,960 --> 00:58:38,780
of a vulnerability when you find a bug

1533
00:58:38,780 --> 00:58:41,640
it's either a low severity medium

1534
00:58:41,640 --> 00:58:43,980
severity high or critical so when you

1535
00:58:43,980 --> 00:58:46,040
have an understanding of the services

1536
00:58:46,040 --> 00:58:48,540
you want to double down on each

1537
00:58:48,540 --> 00:58:50,700
component of the services you want to

1538
00:58:50,700 --> 00:58:52,559
make sure to demonstrate that you can

1539
00:58:52,559 --> 00:58:54,780
affect confidentiality with deer bug you

1540
00:58:54,780 --> 00:58:56,040
want to make sure you demonstrate that

1541
00:58:56,040 --> 00:58:58,380
you can affect availability and

1542
00:58:58,380 --> 00:58:59,640
integrity

1543
00:58:59,640 --> 00:59:02,220
Etc so understanding Services is

1544
00:59:02,220 --> 00:59:05,220
important also uh think out of the box

1545
00:59:05,220 --> 00:59:07,380
when you get a bug uh you don't know

1546
00:59:07,380 --> 00:59:09,240
what to do with it just think out other

1547
00:59:09,240 --> 00:59:11,099
box I think out of the box think of

1548
00:59:11,099 --> 00:59:13,260
creative ideas there are always some

1549
00:59:13,260 --> 00:59:15,240
ideas there are always some change that

1550
00:59:15,240 --> 00:59:17,220
you can you can you you can use with

1551
00:59:17,220 --> 00:59:19,559
your bug exactly so when you find a low

1552
00:59:19,559 --> 00:59:22,140
hanging fruit box like a simple like a

1553
00:59:22,140 --> 00:59:23,700
low bug for example that open redirect

1554
00:59:23,700 --> 00:59:25,619
usually when you submit an operatorx for

1555
00:59:25,619 --> 00:59:28,020
a company it gets paid like 100 bucks

1556
00:59:28,020 --> 00:59:30,780
200 bucks depends on the program but

1557
00:59:30,780 --> 00:59:33,059
what I personally do I don't submit that

1558
00:59:33,059 --> 00:59:35,819
that bug for the organization I keep it

1559
00:59:35,819 --> 00:59:37,799
for myself and I wait for the

1560
00:59:37,799 --> 00:59:40,020
opportunity to use it with another

1561
00:59:40,020 --> 00:59:41,940
vulnerability so I can chain it and

1562
00:59:41,940 --> 00:59:44,460
maximize my impact same thing goes for

1563
00:59:44,460 --> 00:59:46,440
open redirect cooking injection for

1564
00:59:46,440 --> 00:59:48,540
example if you find an exorcist without

1565
00:59:48,540 --> 00:59:50,640
any security impact don't submit it to

1566
00:59:50,640 --> 00:59:52,500
the program keep it for yourself because

1567
00:59:52,500 --> 00:59:54,359
at one point if you keep hacking on that

1568
00:59:54,359 --> 00:59:56,460
company you're probably gonna use that

1569
00:59:56,460 --> 00:59:59,460
exercise along with another bug to

1570
00:59:59,460 --> 01:00:02,339
maximize your impact also always make

1571
01:00:02,339 --> 01:00:03,839
sure you abide by the program rules

1572
01:00:03,839 --> 01:00:06,960
sometimes you you find a bug and you

1573
01:00:06,960 --> 01:00:08,579
want to maximize your impact you want to

1574
01:00:08,579 --> 01:00:10,619
access their internal Network you want

1575
01:00:10,619 --> 01:00:13,559
to extract internal data you have to be

1576
01:00:13,559 --> 01:00:15,059
careful what kind of data you're

1577
01:00:15,059 --> 01:00:16,920
extracting from the company because some

1578
01:00:16,920 --> 01:00:19,980
some some people they find an ssrf and

1579
01:00:19,980 --> 01:00:23,040
they start they start pivoting in the

1580
01:00:23,040 --> 01:00:25,020
internal network of the company which is

1581
01:00:25,020 --> 01:00:27,599
bad or sometimes when you're testing uh

1582
01:00:27,599 --> 01:00:29,700
when you're extracting user data always

1583
01:00:29,700 --> 01:00:32,460
use your own account use two accounts do

1584
01:00:32,460 --> 01:00:35,579
not extract other users data that will

1585
01:00:35,579 --> 01:00:37,440
violate the company's rules and I'm

1586
01:00:37,440 --> 01:00:38,940
pretty sure you're not going to get paid

1587
01:00:38,940 --> 01:00:41,160
for your work so always abide by the

1588
01:00:41,160 --> 01:00:43,140
program rules and be careful what you

1589
01:00:43,140 --> 01:00:44,280
what you do when you're trying to

1590
01:00:44,280 --> 01:00:46,380
maximize impact

1591
01:00:46,380 --> 01:00:48,240
all right when we talk about bounties

1592
01:00:48,240 --> 01:00:49,559
nowadays we started talking about

1593
01:00:49,559 --> 01:00:52,559
collaboration uh as I mentioned earlier

1594
01:00:52,559 --> 01:00:54,359
some of my bugs I found them in

1595
01:00:54,359 --> 01:00:55,799
collaboration with some Trends

1596
01:00:55,799 --> 01:00:58,440
collaboration is very powerful why

1597
01:00:58,440 --> 01:01:00,540
because like everyone when you're

1598
01:01:00,540 --> 01:01:02,280
working with someone else everyone

1599
01:01:02,280 --> 01:01:04,500
brings a different skill set to the

1600
01:01:04,500 --> 01:01:07,140
table maybe I'm good at web hacking and

1601
01:01:07,140 --> 01:01:09,359
the other guy is good at mobile hacking

1602
01:01:09,359 --> 01:01:12,420
and we when we combine that it's it's a

1603
01:01:12,420 --> 01:01:14,579
powerful collaboration from from just

1604
01:01:14,579 --> 01:01:16,680
from my experience some of the most

1605
01:01:16,680 --> 01:01:18,540
impactful vulnerabilities that I've seen

1606
01:01:18,540 --> 01:01:21,660
myself were were a result of

1607
01:01:21,660 --> 01:01:23,880
collaboration between a team or just two

1608
01:01:23,880 --> 01:01:26,220
people so if you're doing back bounties

1609
01:01:26,220 --> 01:01:28,020
you want to get to know other people you

1610
01:01:28,020 --> 01:01:29,700
want to start collaborating with them so

1611
01:01:29,700 --> 01:01:32,339
you can join forces uh as you see

1612
01:01:32,339 --> 01:01:34,920
everyone brings a different skill set uh

1613
01:01:34,920 --> 01:01:36,839
even black money platforms like hacker

1614
01:01:36,839 --> 01:01:38,760
one they recognize that collaboration is

1615
01:01:38,760 --> 01:01:41,400
powerful so what they started doing is

1616
01:01:41,400 --> 01:01:43,380
they started building features to see

1617
01:01:43,380 --> 01:01:45,720
Port collaboration now on hacker one you

1618
01:01:45,720 --> 01:01:47,880
can add someone one as a collaborator to

1619
01:01:47,880 --> 01:01:50,220
your report you can even split Bounty

1620
01:01:50,220 --> 01:01:52,380
automatically so they're just keep

1621
01:01:52,380 --> 01:01:53,880
adding in features to support

1622
01:01:53,880 --> 01:01:55,920
collaboration also if you're stuck

1623
01:01:55,920 --> 01:01:58,079
somewhere there are so many uh

1624
01:01:58,079 --> 01:02:00,119
communities out there online there is

1625
01:02:00,119 --> 01:02:02,220
like a hacker one Discord where you can

1626
01:02:02,220 --> 01:02:04,799
find so many Hunters so if you're stuck

1627
01:02:04,799 --> 01:02:06,059
someone you can just shoot them your

1628
01:02:06,059 --> 01:02:07,740
question I'm pretty sure everyone will

1629
01:02:07,740 --> 01:02:10,380
be happy to answer it there is the nehem

1630
01:02:10,380 --> 01:02:12,660
stick Discord uh Community the back

1631
01:02:12,660 --> 01:02:14,280
Bounty World slack if you just Google

1632
01:02:14,280 --> 01:02:15,599
those I'm pretty sure you're gonna find

1633
01:02:15,599 --> 01:02:17,819
the link to access those communities so

1634
01:02:17,819 --> 01:02:19,799
this is one way to collaborate with

1635
01:02:19,799 --> 01:02:22,740
other people because uh because trust me

1636
01:02:22,740 --> 01:02:24,960
collaboration is very powerful and I've

1637
01:02:24,960 --> 01:02:26,819
seen a lot of people make great progress

1638
01:02:26,819 --> 01:02:28,740
just collaborating with other people but

1639
01:02:28,740 --> 01:02:30,240
when you're collaborating when you're

1640
01:02:30,240 --> 01:02:32,579
working with someone you have to be very

1641
01:02:32,579 --> 01:02:35,700
you have to be very uh to have to agree

1642
01:02:35,700 --> 01:02:39,420
upfront on on some terms for example if

1643
01:02:39,420 --> 01:02:41,280
you find a bug together how much is

1644
01:02:41,280 --> 01:02:42,480
going to be displayed is are you going

1645
01:02:42,480 --> 01:02:44,400
to split the Bounty 50 50 because I've

1646
01:02:44,400 --> 01:02:46,799
seen a lot of conflict summarize because

1647
01:02:46,799 --> 01:02:48,780
if that like they find a bug and this

1648
01:02:48,780 --> 01:02:51,299
one wants 30 the other guy wants 50 so

1649
01:02:51,299 --> 01:02:52,500
you have before you even start

1650
01:02:52,500 --> 01:02:54,900
collaborating you have to agree on the

1651
01:02:54,900 --> 01:02:58,319
balance split and also you have to uh

1652
01:02:58,319 --> 01:03:01,920
make sure uh that if it's a unique

1653
01:03:01,920 --> 01:03:04,260
security research the other partner is

1654
01:03:04,260 --> 01:03:05,880
not gonna leak it because some people

1655
01:03:05,880 --> 01:03:07,920
they do security research and get leaks

1656
01:03:07,920 --> 01:03:10,559
to the public so you want to be very

1657
01:03:10,559 --> 01:03:13,020
upfront on that regard

1658
01:03:13,020 --> 01:03:15,059
okay just talking about collaboration

1659
01:03:15,059 --> 01:03:17,760
this is a Twitter DM I received from a

1660
01:03:17,760 --> 01:03:20,460
guy so basically he found an Asus RF

1661
01:03:20,460 --> 01:03:23,579
which is a low severity ssrf it's a it's

1662
01:03:23,579 --> 01:03:26,520
a it's a known cve so this guy he was

1663
01:03:26,520 --> 01:03:28,559
like hey bro uh I know you're very good

1664
01:03:28,559 --> 01:03:31,380
at ssrf and I got this is this ssrf

1665
01:03:31,380 --> 01:03:33,359
which is low severity he wants to

1666
01:03:33,359 --> 01:03:36,119
maximize the impact because he has a low

1667
01:03:36,119 --> 01:03:38,339
would he would get paid 100 bucks so if

1668
01:03:38,339 --> 01:03:40,079
he managed to maximize the impact he

1669
01:03:40,079 --> 01:03:43,140
will be worth a lot more so what I like

1670
01:03:43,140 --> 01:03:45,660
about this guys he's actually he's very

1671
01:03:45,660 --> 01:03:47,520
uh like

1672
01:03:47,520 --> 01:03:49,440
from Advance he's like I will share it's

1673
01:03:49,440 --> 01:03:51,720
gonna be like a 50 50 Bounty spot as I

1674
01:03:51,720 --> 01:03:53,400
mentioned earlier you should agree

1675
01:03:53,400 --> 01:03:55,980
upfront about the pound display so he

1676
01:03:55,980 --> 01:03:57,540
gave me the details so this guy

1677
01:03:57,540 --> 01:03:59,400
basically uh this is a kind of

1678
01:03:59,400 --> 01:04:03,359
Confluence uh instance he managed to uh

1679
01:04:03,359 --> 01:04:06,960
send an external I mean to hit external

1680
01:04:06,960 --> 01:04:10,079
websites with the with this ssrf like

1681
01:04:10,079 --> 01:04:11,819
heading external websites is not there's

1682
01:04:11,819 --> 01:04:14,940
there's not much impact there uh so as

1683
01:04:14,940 --> 01:04:16,920
you can see the URL parameter is the one

1684
01:04:16,920 --> 01:04:19,319
vulnerable we pointed it to the verbs

1685
01:04:19,319 --> 01:04:21,660
with collab collaborator and we can see

1686
01:04:21,660 --> 01:04:24,000
the response so it's a necessary for the

1687
01:04:24,000 --> 01:04:25,859
response which is a good star but this

1688
01:04:25,859 --> 01:04:29,220
this is low right so I tried to point it

1689
01:04:29,220 --> 01:04:32,940
to the Local Host uh address uh and I

1690
01:04:32,940 --> 01:04:34,980
managed to to hit the internal network

1691
01:04:34,980 --> 01:04:37,140
of the company and it was I received

1692
01:04:37,140 --> 01:04:39,720
welcome to nginx which means uh access

1693
01:04:39,720 --> 01:04:41,700
the internal network but there's much

1694
01:04:41,700 --> 01:04:43,559
you can do with this I mean I managed to

1695
01:04:43,559 --> 01:04:45,359
access the internal network but there

1696
01:04:45,359 --> 01:04:48,180
isn't much there's much impact here so I

1697
01:04:48,180 --> 01:04:49,559
wanted to escalate the impact

1698
01:04:49,559 --> 01:04:51,540
furthermore because this would have been

1699
01:04:51,540 --> 01:04:53,819
just a P2 like a maybe a medium security

1700
01:04:53,819 --> 01:04:56,760
block so I want to escalate the impact

1701
01:04:56,760 --> 01:05:00,180
so I noticed that the the the company or

1702
01:05:00,180 --> 01:05:02,880
the instance was hosted on ews I'm at

1703
01:05:02,880 --> 01:05:05,880
Amazon web services so what I thought

1704
01:05:05,880 --> 01:05:08,099
about next is maybe I will try to hit

1705
01:05:08,099 --> 01:05:10,020
the metadata into point if you guys are

1706
01:05:10,020 --> 01:05:13,140
familiar with the cloud AWS metadata

1707
01:05:13,140 --> 01:05:15,540
endpoint which has security credentials

1708
01:05:15,540 --> 01:05:17,760
stored there so I basically pointed the

1709
01:05:17,760 --> 01:05:20,160
URL parameter there in the request I

1710
01:05:20,160 --> 01:05:23,460
pointed it to the metadata address but

1711
01:05:23,460 --> 01:05:26,040
unfortunately I got 401 which is

1712
01:05:26,040 --> 01:05:28,079
unauthorized which is where normally

1713
01:05:28,079 --> 01:05:29,700
when you send a kit requested the

1714
01:05:29,700 --> 01:05:31,680
metadata into point you get you get a

1715
01:05:31,680 --> 01:05:33,420
response so I couldn't understand what

1716
01:05:33,420 --> 01:05:35,880
was happening so I kept searching and

1717
01:05:35,880 --> 01:05:38,880
looking and reading documentations and I

1718
01:05:38,880 --> 01:05:40,680
came to realize that the company here

1719
01:05:40,680 --> 01:05:42,900
they're using a different version of the

1720
01:05:42,900 --> 01:05:46,799
metadata endpoint so in in the past days

1721
01:05:46,799 --> 01:05:50,579
there was there was the ec2 the MTS the

1722
01:05:50,579 --> 01:05:52,319
version one so basically if you just

1723
01:05:52,319 --> 01:05:54,180
send a get request to the metadata

1724
01:05:54,180 --> 01:05:55,920
endpoint you're gonna get a response

1725
01:05:55,920 --> 01:05:58,380
back but then new version which is way

1726
01:05:58,380 --> 01:06:00,780
more secure it actually requires you to

1727
01:06:00,780 --> 01:06:04,980
send a put request to with with the with

1728
01:06:04,980 --> 01:06:07,079
a special header to the metadata

1729
01:06:07,079 --> 01:06:10,200
endpoint and you get a token and a

1730
01:06:10,200 --> 01:06:12,420
session token and then with that token

1731
01:06:12,420 --> 01:06:15,599
you can send an authenticated request to

1732
01:06:15,599 --> 01:06:17,880
the metadata endpoint and then you can

1733
01:06:17,880 --> 01:06:20,099
extract the the security credentials

1734
01:06:20,099 --> 01:06:22,500
this is a long process I I I thought

1735
01:06:22,500 --> 01:06:24,059
maybe this is a dead end I couldn't I

1736
01:06:24,059 --> 01:06:25,859
don't think how I would be able to

1737
01:06:25,859 --> 01:06:28,140
escalate this further more but I kept

1738
01:06:28,140 --> 01:06:30,960
reading and what I realized is that the

1739
01:06:30,960 --> 01:06:33,079
Confluence installation here actually

1740
01:06:33,079 --> 01:06:36,720
uses the Google gadgets API which is

1741
01:06:36,720 --> 01:06:39,299
defined by open social specification and

1742
01:06:39,299 --> 01:06:41,760
what I realized is that this endpoint it

1743
01:06:41,760 --> 01:06:44,940
takes the HTTP method parameter the post

1744
01:06:44,940 --> 01:06:47,220
data parameter and the headers parameter

1745
01:06:47,220 --> 01:06:50,579
which means I can control the the HTTP

1746
01:06:50,579 --> 01:06:52,799
request method I can control the post

1747
01:06:52,799 --> 01:06:55,440
data and the header which is all I need

1748
01:06:55,440 --> 01:07:00,119
to make the attack scenario success so

1749
01:07:00,119 --> 01:07:02,339
what I did next is I sent a put request

1750
01:07:02,339 --> 01:07:05,460
to the metadata to extract the decision

1751
01:07:05,460 --> 01:07:09,720
token when I got decision token uh I

1752
01:07:09,720 --> 01:07:11,940
used that station token to send another

1753
01:07:11,940 --> 01:07:14,880
request uh another post request to the

1754
01:07:14,880 --> 01:07:17,339
metadata uh the security the security

1755
01:07:17,339 --> 01:07:20,339
credential endpoint with the with this

1756
01:07:20,339 --> 01:07:22,440
the session token in the header as you

1757
01:07:22,440 --> 01:07:25,020
can see there and finally I managed to

1758
01:07:25,020 --> 01:07:27,960
extract the the security credentials and

1759
01:07:27,960 --> 01:07:30,359
this is Maximum Impact because this is a

1760
01:07:30,359 --> 01:07:32,039
critical so basically because of

1761
01:07:32,039 --> 01:07:33,660
collaboration that guy reached out to me

1762
01:07:33,660 --> 01:07:36,180
on Twitter we managed to escalate as a

1763
01:07:36,180 --> 01:07:38,579
low severity bug to a critical bug and

1764
01:07:38,579 --> 01:07:40,680
it got paid the maximum so this is why

1765
01:07:40,680 --> 01:07:42,180
I'm saying collaboration is very

1766
01:07:42,180 --> 01:07:44,280
powerful if you're stuck somewhere you

1767
01:07:44,280 --> 01:07:45,720
know someone with the right skill set

1768
01:07:45,720 --> 01:07:48,000
just reach out to them I'm pretty sure

1769
01:07:48,000 --> 01:07:50,039
uh they're gonna help and they will be

1770
01:07:50,039 --> 01:07:51,539
happy especially especially if you're

1771
01:07:51,539 --> 01:07:54,180
gonna split the bounty

1772
01:07:54,180 --> 01:07:56,160
so I'm just going to talk about my

1773
01:07:56,160 --> 01:07:57,780
experience manage impact money programs

1774
01:07:57,780 --> 01:07:59,039
I'm

1775
01:07:59,039 --> 01:08:01,980
oh yeah all right all right

1776
01:08:01,980 --> 01:08:04,680
yeah less worse uh so basically bike

1777
01:08:04,680 --> 01:08:06,780
hunting is is not a race it's not a race

1778
01:08:06,780 --> 01:08:08,760
it's a marathon so it requires to be

1779
01:08:08,760 --> 01:08:10,440
consistent it requires you to be

1780
01:08:10,440 --> 01:08:12,180
persistent and have patience it really

1781
01:08:12,180 --> 01:08:14,400
requires patience because sometimes uh

1782
01:08:14,400 --> 01:08:16,679
it takes so long to find a bug or it

1783
01:08:16,679 --> 01:08:18,600
takes so long to get paid so you have to

1784
01:08:18,600 --> 01:08:20,819
have patience take as many notes as you

1785
01:08:20,819 --> 01:08:22,738
can a lot of people they start hacking

1786
01:08:22,738 --> 01:08:25,020
and then they close everything down

1787
01:08:25,020 --> 01:08:26,880
without taking any notes a lot of my

1788
01:08:26,880 --> 01:08:28,679
amazing bugs is because of the notes

1789
01:08:28,679 --> 01:08:30,960
that I've taken over the year so take as

1790
01:08:30,960 --> 01:08:33,000
many notes as you can and also keep

1791
01:08:33,000 --> 01:08:35,219
learning don't don't stagnate keep

1792
01:08:35,219 --> 01:08:36,600
learning because there's there are

1793
01:08:36,600 --> 01:08:38,399
always new technologies new techniques

1794
01:08:38,399 --> 01:08:40,620
new security research so if you want to

1795
01:08:40,620 --> 01:08:42,120
stay ahead of the game if you want to be

1796
01:08:42,120 --> 01:08:43,560
one of the top back bounty hunters you

1797
01:08:43,560 --> 01:08:46,380
have to keep learning every day and also

1798
01:08:46,380 --> 01:08:48,839
back hunting can be can drain your

1799
01:08:48,839 --> 01:08:51,719
mental health you can hit burnouts very

1800
01:08:51,719 --> 01:08:53,640
easily because it's not easy so you want

1801
01:08:53,640 --> 01:08:55,439
to do a lot of other activities on the

1802
01:08:55,439 --> 01:08:58,080
side and just just really have fun it's

1803
01:08:58,080 --> 01:09:00,299
supposed to be fun that's it thank you

1804
01:09:00,299 --> 01:09:01,979
so much appreciate it

1805
01:09:01,979 --> 01:09:04,040
thank you

