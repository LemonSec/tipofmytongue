1
00:00:04,480 --> 00:00:08,320
i'm leon i'm a security engineer

2
00:00:08,320 --> 00:00:10,880
trying to learn as much as i can about

3
00:00:10,880 --> 00:00:12,400
infrastructure penetration testing and

4
00:00:12,400 --> 00:00:15,440
security both on-premise and cloud

5
00:00:15,440 --> 00:00:16,720
infrastructure

6
00:00:16,720 --> 00:00:18,320
and

7
00:00:18,320 --> 00:00:19,840
you know trying to

8
00:00:19,840 --> 00:00:21,920
share as much as i can about what i know

9
00:00:21,920 --> 00:00:24,480
so yeah

10
00:00:24,960 --> 00:00:27,279
why do we have to test cloud security

11
00:00:27,279 --> 00:00:29,119
cloud security is a

12
00:00:29,119 --> 00:00:31,279
is an interesting topic not because it's

13
00:00:31,279 --> 00:00:35,360
just new but also because it's uh

14
00:00:35,360 --> 00:00:38,160
it incorporates some of the threads that

15
00:00:38,160 --> 00:00:39,680
on-premise have

16
00:00:39,680 --> 00:00:42,399
but also it tries to change the way that

17
00:00:42,399 --> 00:00:44,559
uh we have to secure it

18
00:00:44,559 --> 00:00:47,760
first of all regarding the privileges

19
00:00:47,760 --> 00:00:50,320
versus perimeter security uh perimeter

20
00:00:50,320 --> 00:00:52,960
security is important on cloud of course

21
00:00:52,960 --> 00:00:54,640
perimeter security is important on

22
00:00:54,640 --> 00:00:56,480
everything you know

23
00:00:56,480 --> 00:00:59,920
on every infrastructure but uh cloud uh

24
00:00:59,920 --> 00:01:01,440
allows you to

25
00:01:01,440 --> 00:01:04,000
also have uh

26
00:01:04,000 --> 00:01:05,199
uh

27
00:01:05,199 --> 00:01:08,159
also allows you to use api to manage

28
00:01:08,159 --> 00:01:10,000
everything so even if you have a

29
00:01:10,000 --> 00:01:12,000
security a perimeter security even if

30
00:01:12,000 --> 00:01:15,200
you have security systems if used if an

31
00:01:15,200 --> 00:01:17,439
attacker gains privileges of a certain

32
00:01:17,439 --> 00:01:18,479
user

33
00:01:18,479 --> 00:01:21,840
he will be able to bypass everything and

34
00:01:21,840 --> 00:01:23,920
you know just do what what they wanted

35
00:01:23,920 --> 00:01:25,680
to to do so

36
00:01:25,680 --> 00:01:29,040
testing cloud is a good thing to start

37
00:01:29,040 --> 00:01:30,560
to

38
00:01:30,560 --> 00:01:32,400
find a different mindset on how to

39
00:01:32,400 --> 00:01:33,280
attack

40
00:01:33,280 --> 00:01:35,040
uh how to attack different

41
00:01:35,040 --> 00:01:38,240
infrastructures the three main vendors

42
00:01:38,240 --> 00:01:41,119
the three largest vendors of uh cloud

43
00:01:41,119 --> 00:01:46,479
are aws azure and google or gcp and uh

44
00:01:46,479 --> 00:01:49,280
since we have also microsoft you know

45
00:01:49,280 --> 00:01:51,920
people here uh azure sucks

46
00:01:51,920 --> 00:01:54,560
and i have and i have arguments to back

47
00:01:54,560 --> 00:01:55,840
that up

48
00:01:55,840 --> 00:01:58,000
uh you know practically on almost

49
00:01:58,000 --> 00:01:59,200
everything

50
00:01:59,200 --> 00:02:03,040
but uh you know when it comes to

51
00:02:03,040 --> 00:02:04,000
uh

52
00:02:04,000 --> 00:02:05,920
the services they offer even though the

53
00:02:05,920 --> 00:02:07,840
names are different even though probably

54
00:02:07,840 --> 00:02:09,199
the technologies might be a bit

55
00:02:09,199 --> 00:02:12,720
different the idea is the same so uh

56
00:02:12,720 --> 00:02:15,360
everything that they offer are

57
00:02:15,360 --> 00:02:18,319
kind of the same except for some

58
00:02:18,319 --> 00:02:19,840
some differences so

59
00:02:19,840 --> 00:02:22,080
when we think of cloud security or cloud

60
00:02:22,080 --> 00:02:23,840
penetration testing we have to see the

61
00:02:23,840 --> 00:02:25,680
differences between them but

62
00:02:25,680 --> 00:02:28,400
at the end of the day we will see that

63
00:02:28,400 --> 00:02:31,519
all of them will be kind of uh

64
00:02:31,519 --> 00:02:33,519
you know breached the same way you know

65
00:02:33,519 --> 00:02:35,760
we will kind of have the same path you

66
00:02:35,760 --> 00:02:38,239
know the same methodology to test them

67
00:02:38,239 --> 00:02:40,000
starting with cloud reconnaissance cloud

68
00:02:40,000 --> 00:02:41,840
offers quite a lot of

69
00:02:41,840 --> 00:02:44,640
reconnaissance ways because uh

70
00:02:44,640 --> 00:02:46,480
because of all the services that they

71
00:02:46,480 --> 00:02:49,280
offer and because of all the

72
00:02:49,280 --> 00:02:51,280
conveniences that they you know allowed

73
00:02:51,280 --> 00:02:53,920
for for themselves

74
00:02:53,920 --> 00:02:56,160
first of all we have the aws buckets

75
00:02:56,160 --> 00:02:58,879
buckets are cloud storages where you can

76
00:02:58,879 --> 00:03:01,760
store data and also can be configured as

77
00:03:01,760 --> 00:03:04,800
uh websites you know if you want to and

78
00:03:04,800 --> 00:03:07,599
buckets are have a specific

79
00:03:07,599 --> 00:03:09,920
path uh that they use which is the

80
00:03:09,920 --> 00:03:11,360
bucket name

81
00:03:11,360 --> 00:03:14,640
dot s3 that region that you know ew

82
00:03:14,640 --> 00:03:16,239
amazon aws

83
00:03:16,239 --> 00:03:18,720
dot com so uh this is not related to

84
00:03:18,720 --> 00:03:21,680
your uh you know the the account id of

85
00:03:21,680 --> 00:03:24,319
your aws account is uh never added you

86
00:03:24,319 --> 00:03:26,480
know to the s3 bucket so you can use

87
00:03:26,480 --> 00:03:28,959
that to enumerate different buckets

88
00:03:28,959 --> 00:03:31,760
based on the the based on their name so

89
00:03:31,760 --> 00:03:34,640
you can uh start to look for

90
00:03:34,640 --> 00:03:37,920
uh bucket names uh or uh the bucket

91
00:03:37,920 --> 00:03:40,000
names that might be more

92
00:03:40,000 --> 00:03:42,879
possible to you know to be used by that

93
00:03:42,879 --> 00:03:44,959
company and start to check if those

94
00:03:44,959 --> 00:03:47,680
buckets are open so completely open

95
00:03:47,680 --> 00:03:49,519
usually the ones that are used as

96
00:03:49,519 --> 00:03:52,560
applications are fully open if they do

97
00:03:52,560 --> 00:03:54,480
exist but you have no permissions in the

98
00:03:54,480 --> 00:03:56,400
case of a 403

99
00:03:56,400 --> 00:03:59,680
http response and the and if they do not

100
00:03:59,680 --> 00:04:01,120
exist at all so you know you don't have

101
00:04:01,120 --> 00:04:03,280
to deal with them

102
00:04:03,280 --> 00:04:05,200
uh and this is you know how nebula

103
00:04:05,200 --> 00:04:07,760
usually does it but uh as we can see

104
00:04:07,760 --> 00:04:08,640
uh

105
00:04:08,640 --> 00:04:10,959
for the bucket which does exist but is

106
00:04:10,959 --> 00:04:13,280
private we only get the you know the

107
00:04:13,280 --> 00:04:14,799
name of the bucket and that's all but

108
00:04:14,799 --> 00:04:16,798
for the bucket which is open

109
00:04:16,798 --> 00:04:18,880
you also get the keys inside that you

110
00:04:18,880 --> 00:04:21,199
know the the object keys inside that and

111
00:04:21,199 --> 00:04:24,160
the object keys are all the

112
00:04:24,160 --> 00:04:27,120
content that is inside the the bucket

113
00:04:27,120 --> 00:04:30,560
these including the the

114
00:04:30,560 --> 00:04:32,320
directories too so each directory has is

115
00:04:32,320 --> 00:04:34,639
the knob is an object

116
00:04:34,639 --> 00:04:36,560
dcp does practically the same thing and

117
00:04:36,560 --> 00:04:39,600
when it comes to gcp versus ews gcp is

118
00:04:39,600 --> 00:04:41,520
like they copied the homework by they

119
00:04:41,520 --> 00:04:42,720
but they changed it a bit you know

120
00:04:42,720 --> 00:04:45,199
autonomous uh you know so they will not

121
00:04:45,199 --> 00:04:46,320
get caught

122
00:04:46,320 --> 00:04:48,000
when it comes to buckets when it comes

123
00:04:48,000 --> 00:04:50,160
to machines when it comes to

124
00:04:50,160 --> 00:04:52,639
you know iem they kind of did the same

125
00:04:52,639 --> 00:04:54,639
you know the same thing and

126
00:04:54,639 --> 00:04:56,240
this can be you know enumerated the same

127
00:04:56,240 --> 00:04:58,800
way but they also they have three

128
00:04:58,800 --> 00:05:01,440
uh domains for some reasons

129
00:05:01,440 --> 00:05:05,120
uh which you know you can you can check

130
00:05:05,120 --> 00:05:08,080
uh you can also leverage a scene and as

131
00:05:08,080 --> 00:05:10,960
we can see we just try to check for s3

132
00:05:10,960 --> 00:05:14,000
the uh for you know a certain region

133
00:05:14,000 --> 00:05:18,400
which is eu.s.3 and it gave us one

134
00:05:18,400 --> 00:05:20,479
bucket which is completely open and as

135
00:05:20,479 --> 00:05:22,720
we can see these are all the

136
00:05:22,720 --> 00:05:25,199
all the object inside it so you can

137
00:05:25,199 --> 00:05:27,680
start looking for that so another you

138
00:05:27,680 --> 00:05:30,720
know thing you can add is in url and

139
00:05:30,720 --> 00:05:32,639
some part of the the company and you

140
00:05:32,639 --> 00:05:34,720
will start to list and will start to

141
00:05:34,720 --> 00:05:37,039
list everything that can be a bucket

142
00:05:37,039 --> 00:05:39,199
inside of the

143
00:05:39,199 --> 00:05:40,960
uh you know it can be a bucket used by

144
00:05:40,960 --> 00:05:43,199
the company and you can see if the that

145
00:05:43,199 --> 00:05:45,919
one is accessible or not uh you know if

146
00:05:45,919 --> 00:05:47,680
it's open or not or not

147
00:05:47,680 --> 00:05:49,440
azure on the other hand it does use

148
00:05:49,440 --> 00:05:51,520
quite a lot of uh

149
00:05:51,520 --> 00:05:54,400
you know a lot of services and it has a

150
00:05:54,400 --> 00:05:56,240
specific uh

151
00:05:56,240 --> 00:05:59,039
you know specific uh sub sub domains or

152
00:05:59,039 --> 00:06:01,680
domains which you know later on go to

153
00:06:01,680 --> 00:06:04,240
subdomains for each of the services and

154
00:06:04,240 --> 00:06:06,880
it uses the best name which is the name

155
00:06:06,880 --> 00:06:09,360
of the tenant and everything you know

156
00:06:09,360 --> 00:06:10,319
after

157
00:06:10,319 --> 00:06:12,639
after that based on the on the service

158
00:06:12,639 --> 00:06:14,479
that you can use

159
00:06:14,479 --> 00:06:16,720
this is one case where we have a

160
00:06:16,720 --> 00:06:20,639
container service we we enabled acr

161
00:06:20,639 --> 00:06:22,319
uh

162
00:06:22,319 --> 00:06:24,080
azure container

163
00:06:24,080 --> 00:06:26,800
registry and you know it gave us the the

164
00:06:26,800 --> 00:06:28,479
subdomain of that so we know that they

165
00:06:28,479 --> 00:06:31,440
are using acr and also we have storage

166
00:06:31,440 --> 00:06:33,600
account which we know we can see here

167
00:06:33,600 --> 00:06:35,199
from the blob the file the queue and the

168
00:06:35,199 --> 00:06:37,199
table which is the

169
00:06:37,199 --> 00:06:40,639
you know how they manage the the

170
00:06:40,639 --> 00:06:42,160
the

171
00:06:42,160 --> 00:06:45,600
data part or the storage part

172
00:06:45,600 --> 00:06:47,280
you can also check if azure is being

173
00:06:47,280 --> 00:06:48,400
used and

174
00:06:48,400 --> 00:06:51,120
we can check if it's being managed by uh

175
00:06:51,120 --> 00:06:54,160
azure so you know something uh like

176
00:06:54,160 --> 00:06:56,720
just your azure account or if you have

177
00:06:56,720 --> 00:06:59,360
an hybrid account with uh without uh

178
00:06:59,360 --> 00:07:02,400
federation or if the if they are using

179
00:07:02,400 --> 00:07:05,360
uh you know a hybrid

180
00:07:05,360 --> 00:07:08,160
deployment which uh

181
00:07:08,160 --> 00:07:11,199
uh it's authenticated using uh saml or

182
00:07:11,199 --> 00:07:13,520
you know which uses the the

183
00:07:13,520 --> 00:07:15,599
the federation and if

184
00:07:15,599 --> 00:07:18,240
you have federation uh enabled you will

185
00:07:18,240 --> 00:07:21,759
also have the url here which can be used

186
00:07:21,759 --> 00:07:23,759
for username enumeration

187
00:07:23,759 --> 00:07:26,160
there is a way to use that

188
00:07:26,160 --> 00:07:28,800
it's not

189
00:07:28,800 --> 00:07:30,240
sorry it's not uh

190
00:07:30,240 --> 00:07:32,960
reliable but you can you can use that

191
00:07:32,960 --> 00:07:34,240
though

192
00:07:34,240 --> 00:07:36,080
uh you can also get the tenant id and

193
00:07:36,080 --> 00:07:37,840
you you will need the

194
00:07:37,840 --> 00:07:40,080
tenant id when you later on will be

195
00:07:40,080 --> 00:07:42,560
authenticated using uh

196
00:07:42,560 --> 00:07:44,560
especially using uh

197
00:07:44,560 --> 00:07:47,199
uh service principles so you can get

198
00:07:47,199 --> 00:07:49,599
this one to use just by you know going

199
00:07:49,599 --> 00:07:53,039
to that to this uh url

200
00:07:53,039 --> 00:07:55,199
username housing is also easy you can

201
00:07:55,199 --> 00:07:57,199
just you know send a post request using

202
00:07:57,199 --> 00:07:59,919
the email is the data to this url and it

203
00:07:59,919 --> 00:08:02,479
will see it will show you if the user is

204
00:08:02,479 --> 00:08:03,759
uh you know

205
00:08:03,759 --> 00:08:05,280
does exist or not

206
00:08:05,280 --> 00:08:08,720
and you can also leverage crt.sage which

207
00:08:08,720 --> 00:08:11,280
which is a website that

208
00:08:11,280 --> 00:08:13,120
manages certificates that are bought by

209
00:08:13,120 --> 00:08:15,199
a company for different sub domains for

210
00:08:15,199 --> 00:08:16,800
different domains or sub domains so you

211
00:08:16,800 --> 00:08:19,840
can get that two to least two subdomains

212
00:08:19,840 --> 00:08:22,720
that uh a company is using based on the

213
00:08:22,720 --> 00:08:24,479
certificates that they are uh you know

214
00:08:24,479 --> 00:08:26,400
buying for uh

215
00:08:26,400 --> 00:08:29,039
for their sub domains

216
00:08:29,039 --> 00:08:33,760
also each uh vendor keeps a range of ips

217
00:08:33,760 --> 00:08:36,399
for all of their services so you can

218
00:08:36,399 --> 00:08:37,519
get

219
00:08:37,519 --> 00:08:40,399
several ips or several domains you can

220
00:08:40,399 --> 00:08:42,880
check if those are within that range and

221
00:08:42,880 --> 00:08:45,200
you can see if uh what kind of services

222
00:08:45,200 --> 00:08:47,600
they are using so that you know what

223
00:08:47,600 --> 00:08:49,519
you want to target you know for for a

224
00:08:49,519 --> 00:08:52,160
specific uh you know for a specific

225
00:08:52,160 --> 00:08:54,320
scenario for a specific goal that you

226
00:08:54,320 --> 00:08:55,839
have

227
00:08:55,839 --> 00:08:58,720
now we'll go a bit on the basics mostly

228
00:08:58,720 --> 00:09:00,640
on the authentication part which we will

229
00:09:00,640 --> 00:09:02,640
later on use for other personal

230
00:09:02,640 --> 00:09:05,360
enumeration and privilege escalation so

231
00:09:05,360 --> 00:09:09,200
we'll start with iam iam use uh the iem

232
00:09:09,200 --> 00:09:10,399
uh

233
00:09:10,399 --> 00:09:14,080
iews iem uh includes the users groups

234
00:09:14,080 --> 00:09:15,519
roles and policies

235
00:09:15,519 --> 00:09:17,360
users are

236
00:09:17,360 --> 00:09:20,080
uh users are you know your typical users

237
00:09:20,080 --> 00:09:22,560
you know you just create a

238
00:09:22,560 --> 00:09:25,920
a user for each of your employees uh the

239
00:09:25,920 --> 00:09:27,839
groups are just a collection of users

240
00:09:27,839 --> 00:09:30,399
and as on other infrastructures if a

241
00:09:30,399 --> 00:09:32,399
group has a certain privilege then all

242
00:09:32,399 --> 00:09:34,320
the users inside that group have have

243
00:09:34,320 --> 00:09:37,680
that privilege the roles are the certain

244
00:09:37,680 --> 00:09:41,279
uh different type of identity that

245
00:09:41,279 --> 00:09:44,240
authenticates using a temporary token

246
00:09:44,240 --> 00:09:46,160
which they call it a session token and

247
00:09:46,160 --> 00:09:48,000
the policies are the privileges that you

248
00:09:48,000 --> 00:09:50,720
can give to all three of them

249
00:09:50,720 --> 00:09:53,839
so and they are aws managed so you have

250
00:09:53,839 --> 00:09:56,000
some policies that are uh

251
00:09:56,000 --> 00:09:58,480
created by aws that you can use or you

252
00:09:58,480 --> 00:10:01,519
can create your own granular you know

253
00:10:01,519 --> 00:10:04,880
as you your you know what you want to to

254
00:10:04,880 --> 00:10:06,880
add to this user

255
00:10:06,880 --> 00:10:09,519
each resource has an iron and the iron

256
00:10:09,519 --> 00:10:11,279
has a

257
00:10:11,279 --> 00:10:13,279
certain format you will need this

258
00:10:13,279 --> 00:10:15,680
because when you do privilege escalation

259
00:10:15,680 --> 00:10:18,240
using uh policies you know when you add

260
00:10:18,240 --> 00:10:20,240
policy to a user you will need the iron

261
00:10:20,240 --> 00:10:24,000
of the policy to add or when you want to

262
00:10:24,000 --> 00:10:25,360
to

263
00:10:25,360 --> 00:10:27,920
actually that's the only reason why i've

264
00:10:27,920 --> 00:10:29,519
used it so yeah you will need it for

265
00:10:29,519 --> 00:10:31,279
that and

266
00:10:31,279 --> 00:10:33,200
so to do that you will also need the

267
00:10:33,200 --> 00:10:34,880
account id

268
00:10:34,880 --> 00:10:37,120
which you can get by uh

269
00:10:37,120 --> 00:10:40,000
uh making a call uh from the from a

270
00:10:40,000 --> 00:10:41,760
certain user or you can actually brute

271
00:10:41,760 --> 00:10:43,360
force that but that i don't

272
00:10:43,360 --> 00:10:45,120
i don't know if there's any connection

273
00:10:45,120 --> 00:10:46,959
between a domain or a company and their

274
00:10:46,959 --> 00:10:49,360
account id like you you have with azure

275
00:10:49,360 --> 00:10:52,480
so you know that's not going to work

276
00:10:52,480 --> 00:10:56,480
ews authentication as i said uh you know

277
00:10:56,480 --> 00:10:58,880
aws authentication uses access can

278
00:10:58,880 --> 00:11:01,279
secret key for users the access key is

279
00:11:01,279 --> 00:11:04,720
the form of id and the secret key is uh

280
00:11:04,720 --> 00:11:07,600
is a secret string that you have to keep

281
00:11:07,600 --> 00:11:09,760
and you will use it for authentication

282
00:11:09,760 --> 00:11:12,399
so that's the part like a username like

283
00:11:12,399 --> 00:11:15,360
an idm password kind of like that

284
00:11:15,360 --> 00:11:17,760
you can also uh log in with username and

285
00:11:17,760 --> 00:11:20,640
password and hopefully mfa

286
00:11:20,640 --> 00:11:23,360
to the to the dashboard so the aws

287
00:11:23,360 --> 00:11:26,079
portal you can use federation of course

288
00:11:26,079 --> 00:11:28,560
if you have uh you know if you want to

289
00:11:28,560 --> 00:11:30,480
log in from your

290
00:11:30,480 --> 00:11:31,920
infrastructure if you have kind of like

291
00:11:31,920 --> 00:11:33,360
a hybrid uh

292
00:11:33,360 --> 00:11:35,200
infrastructure and the web identities

293
00:11:35,200 --> 00:11:37,200
which are all tokens which are usually

294
00:11:37,200 --> 00:11:40,320
used by applications and i have no idea

295
00:11:40,320 --> 00:11:42,079
if there are any other services that use

296
00:11:42,079 --> 00:11:45,839
them but you can uh leverage api calls

297
00:11:45,839 --> 00:11:46,959
uh

298
00:11:46,959 --> 00:11:50,959
you know offered by the aws to

299
00:11:50,959 --> 00:11:53,040
convert the federation token and the web

300
00:11:53,040 --> 00:11:54,800
identity token to

301
00:11:54,800 --> 00:11:56,560
access the secret can session token for

302
00:11:56,560 --> 00:11:58,959
a certain user so you know you will have

303
00:11:58,959 --> 00:12:01,120
access to the to the research the

304
00:12:01,120 --> 00:12:04,880
resources that the user has access to

305
00:12:05,120 --> 00:12:07,440
aws policies are

306
00:12:07,440 --> 00:12:09,680
simpler you know

307
00:12:09,680 --> 00:12:13,920
granular because uh it uh each policy is

308
00:12:13,920 --> 00:12:16,240
actually an api call so if we have get

309
00:12:16,240 --> 00:12:18,800
user policy we have an api call even

310
00:12:18,800 --> 00:12:21,120
with the aws click that is get user

311
00:12:21,120 --> 00:12:22,639
policy so

312
00:12:22,639 --> 00:12:23,760
what you

313
00:12:23,760 --> 00:12:25,440
what you have is what you have you know

314
00:12:25,440 --> 00:12:27,600
what you have is what you get

315
00:12:27,600 --> 00:12:30,720
uh the policies have the sid which is

316
00:12:30,720 --> 00:12:32,560
the section name for the policy they

317
00:12:32,560 --> 00:12:34,720
have the effect which is a lower deny

318
00:12:34,720 --> 00:12:36,639
and they have the actions which you know

319
00:12:36,639 --> 00:12:38,720
are you are allowed to do or you are

320
00:12:38,720 --> 00:12:40,240
deny to do

321
00:12:40,240 --> 00:12:44,079
uh each user starts with zero privileges

322
00:12:44,079 --> 00:12:46,720
and the only call they can do is uh get

323
00:12:46,720 --> 00:12:49,760
caller identity from sds just to get the

324
00:12:49,760 --> 00:12:51,839
the username of the account id

325
00:12:51,839 --> 00:12:54,399
everything else is given to you so it's

326
00:12:54,399 --> 00:12:56,800
the idea of white listing privileges not

327
00:12:56,800 --> 00:12:59,040
blacklisting privileges

328
00:12:59,040 --> 00:13:02,000
the azure iem works using security

329
00:13:02,000 --> 00:13:03,120
principles

330
00:13:03,120 --> 00:13:05,279
uh security principle is everything uh

331
00:13:05,279 --> 00:13:08,240
you know that is a user group uh service

332
00:13:08,240 --> 00:13:09,360
uh

333
00:13:09,360 --> 00:13:11,680
service principle which is like service

334
00:13:11,680 --> 00:13:14,079
principle names on active directory you

335
00:13:14,079 --> 00:13:16,079
know it's like a service account

336
00:13:16,079 --> 00:13:19,680
and managed identities which are uh

337
00:13:19,680 --> 00:13:21,680
identities that you attach to a virtual

338
00:13:21,680 --> 00:13:24,480
machine or to another service that

339
00:13:24,480 --> 00:13:27,760
is allowed to access other resources

340
00:13:27,760 --> 00:13:30,000
these uh you know all of these security

341
00:13:30,000 --> 00:13:32,880
principles can get roles which can be uh

342
00:13:32,880 --> 00:13:36,320
defined by asia or you you know created

343
00:13:36,320 --> 00:13:37,839
by you and

344
00:13:37,839 --> 00:13:40,079
also the scope so you know you can add

345
00:13:40,079 --> 00:13:41,600
them

346
00:13:41,600 --> 00:13:43,680
privileges to a certain service or

347
00:13:43,680 --> 00:13:45,839
different services or you can add them

348
00:13:45,839 --> 00:13:47,760
privileges i don't know to a tenant or

349
00:13:47,760 --> 00:13:49,440
to a subscription

350
00:13:49,440 --> 00:13:51,440
and they will access them you know using

351
00:13:51,440 --> 00:13:52,639
that

352
00:13:52,639 --> 00:13:54,160
there are the most

353
00:13:54,160 --> 00:13:56,959
common roles or the most known roles uh

354
00:13:56,959 --> 00:13:59,199
are the owner contributor and the leader

355
00:13:59,199 --> 00:14:01,920
each service each subscription and each

356
00:14:01,920 --> 00:14:02,880
tenant

357
00:14:02,880 --> 00:14:04,800
has this uh

358
00:14:04,800 --> 00:14:07,839
these roles and the owner is you know

359
00:14:07,839 --> 00:14:10,079
you have access to everything within the

360
00:14:10,079 --> 00:14:12,320
scope that you are given the contributor

361
00:14:12,320 --> 00:14:14,800
can modify the service but cannot you

362
00:14:14,800 --> 00:14:17,600
know add or remove us uh privileges to

363
00:14:17,600 --> 00:14:20,240
uh to users related to that to the

364
00:14:20,240 --> 00:14:22,480
service and the leaders leader just

365
00:14:22,480 --> 00:14:23,519
reads

366
00:14:23,519 --> 00:14:24,320
you know

367
00:14:24,320 --> 00:14:27,120
they cannot modify anything

368
00:14:27,120 --> 00:14:29,199
the azure authentication

369
00:14:29,199 --> 00:14:31,600
uh on the user authentication the users

370
00:14:31,600 --> 00:14:33,839
can log in using device code and we will

371
00:14:33,839 --> 00:14:35,760
use that as a phishing we will leverage

372
00:14:35,760 --> 00:14:38,079
this one as a phishing an interactive

373
00:14:38,079 --> 00:14:40,399
browser where you just you know ask to

374
00:14:40,399 --> 00:14:42,399
be logged in and browser with will pop

375
00:14:42,399 --> 00:14:44,639
up you log in and the you know the token

376
00:14:44,639 --> 00:14:46,320
will be stored and the username and

377
00:14:46,320 --> 00:14:48,320
password you know which you can use

378
00:14:48,320 --> 00:14:50,720
directly on the portal.azure.com or you

379
00:14:50,720 --> 00:14:52,480
know anything that you have access to

380
00:14:52,480 --> 00:14:54,639
like i don't know office 365 or it

381
00:14:54,639 --> 00:14:57,760
depends on if you have an account there

382
00:14:57,760 --> 00:14:59,680
while the service principles use the

383
00:14:59,680 --> 00:15:01,760
username and password use the client id

384
00:15:01,760 --> 00:15:03,440
and client secret which is kind of the

385
00:15:03,440 --> 00:15:05,440
same way that uh

386
00:15:05,440 --> 00:15:08,000
aws uses the access key and secret key

387
00:15:08,000 --> 00:15:09,680
you know you have the id and you have a

388
00:15:09,680 --> 00:15:12,320
secret and a client id and certificate

389
00:15:12,320 --> 00:15:15,360
which is the id and the secret is you

390
00:15:15,360 --> 00:15:16,959
know you don't use the secret anymore

391
00:15:16,959 --> 00:15:19,279
but you use the power uh password less

392
00:15:19,279 --> 00:15:22,800
authentication using a certificate

393
00:15:22,800 --> 00:15:25,199
uh and the hybrid deployment so there

394
00:15:25,199 --> 00:15:27,920
are three password hash synchronization

395
00:15:27,920 --> 00:15:29,920
which you know is the simplest one you

396
00:15:29,920 --> 00:15:32,000
just everything is being uh you know all

397
00:15:32,000 --> 00:15:33,839
the authentic all the authentication is

398
00:15:33,839 --> 00:15:36,560
being done on the azure there is a cl

399
00:15:36,560 --> 00:15:38,079
cloning of

400
00:15:38,079 --> 00:15:39,680
hashes from the

401
00:15:39,680 --> 00:15:42,800
on-premise to the azure and if you know

402
00:15:42,800 --> 00:15:44,959
azure does everything else

403
00:15:44,959 --> 00:15:46,240
even if your

404
00:15:46,240 --> 00:15:48,399
active directory deployment goes down

405
00:15:48,399 --> 00:15:50,880
everything will just you know go on the

406
00:15:50,880 --> 00:15:51,680
same

407
00:15:51,680 --> 00:15:55,199
you have the pta which is uh kind of the

408
00:15:55,199 --> 00:15:57,360
same you know but uh the hashes are not

409
00:15:57,360 --> 00:15:59,360
stored there but when you do the

410
00:15:59,360 --> 00:16:02,560
authentication azure will ask the

411
00:16:02,560 --> 00:16:04,720
uh the on-premise for the credentials

412
00:16:04,720 --> 00:16:06,800
and the credentials will go back to you

413
00:16:06,800 --> 00:16:07,519
know

414
00:16:07,519 --> 00:16:10,000
the the on-premise will authenticate and

415
00:16:10,000 --> 00:16:12,079
then you will get access

416
00:16:12,079 --> 00:16:14,160
and the federation where everything is

417
00:16:14,160 --> 00:16:17,120
being done on the on-premise servers and

418
00:16:17,120 --> 00:16:19,440
then from the on-premise you get access

419
00:16:19,440 --> 00:16:20,480
to the

420
00:16:20,480 --> 00:16:22,480
to the azure

421
00:16:22,480 --> 00:16:24,560
gcp on the other hand as i said uses

422
00:16:24,560 --> 00:16:27,440
kind of the same thing as uh aws so you

423
00:16:27,440 --> 00:16:31,360
have a user group service accounts and

424
00:16:31,360 --> 00:16:33,600
gcu domain service accounts are kind of

425
00:16:33,600 --> 00:16:34,639
like

426
00:16:34,639 --> 00:16:37,120
you know like the service principles on

427
00:16:37,120 --> 00:16:38,800
azure

428
00:16:38,800 --> 00:16:41,279
and the roles are you know the

429
00:16:41,279 --> 00:16:43,360
privileges that you can

430
00:16:43,360 --> 00:16:44,720
attach to uh

431
00:16:44,720 --> 00:16:46,959
to a user group or uh

432
00:16:46,959 --> 00:16:49,120
or a service account you know everything

433
00:16:49,120 --> 00:16:51,360
is the same after after that

434
00:16:51,360 --> 00:16:53,519
and this the projects are the

435
00:16:53,519 --> 00:16:55,839
groups of resources that can be used by

436
00:16:55,839 --> 00:16:59,440
a principal on a certain you know

437
00:16:59,440 --> 00:17:01,360
you know when you want to for example

438
00:17:01,360 --> 00:17:02,880
you can create a

439
00:17:02,880 --> 00:17:04,959
project that can

440
00:17:04,959 --> 00:17:07,359
allow users to access just the virtual

441
00:17:07,359 --> 00:17:08,799
machines i don't know and the storage

442
00:17:08,799 --> 00:17:11,280
and another project will allow a user to

443
00:17:11,280 --> 00:17:13,280
access the containers and i don't know

444
00:17:13,280 --> 00:17:15,439
the storage you know and you can you

445
00:17:15,439 --> 00:17:18,160
know manage everything from from them

446
00:17:18,160 --> 00:17:21,119
the gcp authentication now the users are

447
00:17:21,119 --> 00:17:23,839
authenticated using uh either

448
00:17:23,839 --> 00:17:25,520
username and password and federation

449
00:17:25,520 --> 00:17:28,960
while the service accounts have a json

450
00:17:28,960 --> 00:17:32,559
file which has the the name the project

451
00:17:32,559 --> 00:17:35,520
the uh they have a certificate they have

452
00:17:35,520 --> 00:17:36,880
the private key so you know they have

453
00:17:36,880 --> 00:17:39,360
every uh every uh

454
00:17:39,360 --> 00:17:40,799
information that is needed for

455
00:17:40,799 --> 00:17:43,440
authentication and this is used

456
00:17:43,440 --> 00:17:46,320
when you want to authenticate as that

457
00:17:46,320 --> 00:17:49,120
as that service account and uh since

458
00:17:49,120 --> 00:17:50,960
service accounts uh

459
00:17:50,960 --> 00:17:54,160
are uh used by uh you know are not used

460
00:17:54,160 --> 00:17:56,640
by users usually and the authentication

461
00:17:56,640 --> 00:17:59,840
is not directly done by the user

462
00:17:59,840 --> 00:18:01,600
usually this is stored somewhere and

463
00:18:01,600 --> 00:18:03,440
then you know the authentication will be

464
00:18:03,440 --> 00:18:06,240
will happen usually by api

465
00:18:06,240 --> 00:18:07,840
so if you want to find you you should

466
00:18:07,840 --> 00:18:10,559
check this file you know

467
00:18:10,559 --> 00:18:12,880
the gcp policies they're kind of the

468
00:18:12,880 --> 00:18:14,559
same as the

469
00:18:14,559 --> 00:18:17,200
dws they have the

470
00:18:17,200 --> 00:18:19,600
the members that can get access to to

471
00:18:19,600 --> 00:18:21,600
the policy they have the condition which

472
00:18:21,600 --> 00:18:23,520
is you know uh

473
00:18:23,520 --> 00:18:25,360
allow these

474
00:18:25,360 --> 00:18:27,679
you know these privileges to only be

475
00:18:27,679 --> 00:18:29,919
available either available for

476
00:18:29,919 --> 00:18:31,840
one week or you know during this time

477
00:18:31,840 --> 00:18:34,240
period and after that they will not have

478
00:18:34,240 --> 00:18:37,600
privileges anymore i like

479
00:18:38,240 --> 00:18:40,320
i don't

480
00:18:40,320 --> 00:18:42,640
i forgot how the ws called them

481
00:18:42,640 --> 00:18:45,440
permission boundaries from aws

482
00:18:45,440 --> 00:18:48,000
and of course the you know what you

483
00:18:48,000 --> 00:18:50,080
the part of the role is what you are you

484
00:18:50,080 --> 00:18:52,640
know what the the privilege that you get

485
00:18:52,640 --> 00:18:55,039
now the initial access can happen in

486
00:18:55,039 --> 00:18:57,200
many ways so you can find credentials

487
00:18:57,200 --> 00:18:59,280
and source code use uh

488
00:18:59,280 --> 00:19:00,640
from

489
00:19:00,640 --> 00:19:01,600
uh

490
00:19:01,600 --> 00:19:03,520
public repositories or from private

491
00:19:03,520 --> 00:19:05,679
repositories where you have the the

492
00:19:05,679 --> 00:19:06,960
token you know

493
00:19:06,960 --> 00:19:08,799
from which you have the token from

494
00:19:08,799 --> 00:19:10,400
you can get the credentials

495
00:19:10,400 --> 00:19:12,559
uh i don't know from phishing from

496
00:19:12,559 --> 00:19:15,120
password spraying from

497
00:19:15,120 --> 00:19:17,919
you know credentials to storage you know

498
00:19:17,919 --> 00:19:19,120
uh

499
00:19:19,120 --> 00:19:21,039
probably you are an insider attack you

500
00:19:21,039 --> 00:19:23,200
know the credentials uh you can do uh

501
00:19:23,200 --> 00:19:25,039
the

502
00:19:25,039 --> 00:19:26,880
typical fishing that we do with i don't

503
00:19:26,880 --> 00:19:29,280
know what dish cow reveal engine x also

504
00:19:29,280 --> 00:19:31,360
you have other forms of fishing that are

505
00:19:31,360 --> 00:19:33,120
uh allowed by

506
00:19:33,120 --> 00:19:36,240
uh the vendors allowed this is usually

507
00:19:36,240 --> 00:19:39,440
in the case of azure and you have

508
00:19:39,440 --> 00:19:42,400
the machine identities which as i said

509
00:19:42,400 --> 00:19:44,880
are identities that are attached to uh

510
00:19:44,880 --> 00:19:48,400
to a certain machine to allow

511
00:19:48,400 --> 00:19:50,320
access to certain resources and this can

512
00:19:50,320 --> 00:19:54,480
be accessed by a call to us to an api on

513
00:19:54,480 --> 00:19:57,360
you know an ip that they have

514
00:19:57,360 --> 00:19:58,799
and after getting that you can

515
00:19:58,799 --> 00:20:00,720
authenticate as that you know you can

516
00:20:00,720 --> 00:20:02,159
practically access the same resources

517
00:20:02,159 --> 00:20:03,600
that they have

518
00:20:03,600 --> 00:20:06,080
you can use e-door for i don't know like

519
00:20:06,080 --> 00:20:08,159
you have a shared and you have a file

520
00:20:08,159 --> 00:20:10,159
that is you know accessed you know

521
00:20:10,159 --> 00:20:11,840
accessible i don't know

522
00:20:11,840 --> 00:20:14,000
and you can

523
00:20:14,000 --> 00:20:15,360
you can also use

524
00:20:15,360 --> 00:20:17,600
uh vendor support tickets now sorry i

525
00:20:17,600 --> 00:20:19,919
did not include that because that meant

526
00:20:19,919 --> 00:20:22,559
i had to open a ticket to the vendor and

527
00:20:22,559 --> 00:20:24,799
you know there will be a lot of you know

528
00:20:24,799 --> 00:20:26,960
hurdle to explain them that this was

529
00:20:26,960 --> 00:20:29,840
just for uh uh you know for conference

530
00:20:29,840 --> 00:20:32,480
but you uh when uh support ticket is

531
00:20:32,480 --> 00:20:34,559
open sometimes a lot of information

532
00:20:34,559 --> 00:20:36,720
sensitive information is given now if

533
00:20:36,720 --> 00:20:39,679
you have a certain uh application say an

534
00:20:39,679 --> 00:20:42,320
application that does uh

535
00:20:42,320 --> 00:20:45,200
support ticket you know that manages the

536
00:20:45,200 --> 00:20:47,200
support ticket something i don't know

537
00:20:47,200 --> 00:20:50,000
custom you can uh

538
00:20:50,000 --> 00:20:52,080
leverage those credentials to list all

539
00:20:52,080 --> 00:20:53,760
the support tickets to list all the

540
00:20:53,760 --> 00:20:56,720
communication between uh the vendor and

541
00:20:56,720 --> 00:20:59,360
the engineers and try to find different

542
00:20:59,360 --> 00:21:00,159
uh

543
00:21:00,159 --> 00:21:01,120
you know

544
00:21:01,120 --> 00:21:04,480
uh different uh information regarding

545
00:21:04,480 --> 00:21:05,760
your company

546
00:21:05,760 --> 00:21:08,000
sometimes even i don't know credentials

547
00:21:08,000 --> 00:21:08,799
or

548
00:21:08,799 --> 00:21:10,880
access to two different resources or i

549
00:21:10,880 --> 00:21:12,240
don't know you know

550
00:21:12,240 --> 00:21:15,360
so you can use that it's like uh

551
00:21:15,360 --> 00:21:17,280
you know looking at an email looking at

552
00:21:17,280 --> 00:21:18,960
the user's email but

553
00:21:18,960 --> 00:21:21,840
i don't know different

554
00:21:21,840 --> 00:21:25,840
uh now password spraying on azure is uh

555
00:21:25,840 --> 00:21:27,919
is a feature that azure you know gives

556
00:21:27,919 --> 00:21:28,720
you

557
00:21:28,720 --> 00:21:32,480
uh you know it's by is by default and uh

558
00:21:32,480 --> 00:21:34,559
does happen because you can

559
00:21:34,559 --> 00:21:38,000
send the request using an email and a

560
00:21:38,000 --> 00:21:41,039
password and uh you will get a code

561
00:21:41,039 --> 00:21:42,320
based on that

562
00:21:42,320 --> 00:21:44,320
which gives you information regarding

563
00:21:44,320 --> 00:21:47,520
the the user if the user is valid if

564
00:21:47,520 --> 00:21:50,480
it's not valid if requires mfa if the

565
00:21:50,480 --> 00:21:52,480
user is locked is disabled so you know

566
00:21:52,480 --> 00:21:54,960
you also get information regarding

567
00:21:54,960 --> 00:21:56,880
the the user

568
00:21:56,880 --> 00:21:59,360
which is uh you know the password is

569
00:21:59,360 --> 00:22:02,000
correct but you need mfa the password is

570
00:22:02,000 --> 00:22:04,080
correct and you don't you know you don't

571
00:22:04,080 --> 00:22:06,159
need mfa or you know you have incorrect

572
00:22:06,159 --> 00:22:08,559
credentials but the user does exist so

573
00:22:08,559 --> 00:22:10,799
you also get information from that even

574
00:22:10,799 --> 00:22:13,280
you know without

575
00:22:13,280 --> 00:22:14,720
without getting the necessary

576
00:22:14,720 --> 00:22:16,320
credentials

577
00:22:16,320 --> 00:22:19,200
there is uh

578
00:22:19,200 --> 00:22:21,600
you know a configuration which now is by

579
00:22:21,600 --> 00:22:23,600
default but before it used to be off by

580
00:22:23,600 --> 00:22:26,240
default which was the security defaults

581
00:22:26,240 --> 00:22:30,000
uh which you know requires users to to

582
00:22:30,000 --> 00:22:30,880
uh

583
00:22:30,880 --> 00:22:33,120
you know to you to

584
00:22:33,120 --> 00:22:37,520
enable mfa after you know 14 days or you

585
00:22:37,520 --> 00:22:39,360
requires

586
00:22:39,360 --> 00:22:42,960
administrators to enable mfa

587
00:22:42,960 --> 00:22:46,000
stops you from logging in from legacy

588
00:22:46,000 --> 00:22:48,240
legacy protocols which

589
00:22:48,240 --> 00:22:50,480
attackers say that they are using this

590
00:22:50,480 --> 00:22:52,640
to bypass mfa i couldn't reproduce that

591
00:22:52,640 --> 00:22:55,360
sorry i try to reproduce that as you

592
00:22:55,360 --> 00:22:56,799
know as an attack

593
00:22:56,799 --> 00:22:59,520
it always said you know failed i don't

594
00:22:59,520 --> 00:23:01,600
know why probably you know it's my fault

595
00:23:01,600 --> 00:23:02,880
but uh

596
00:23:02,880 --> 00:23:04,720
there are a lot of

597
00:23:04,720 --> 00:23:06,960
articles from attackers saying that they

598
00:23:06,960 --> 00:23:07,919
can

599
00:23:07,919 --> 00:23:10,559
login to an email using uh i don't know

600
00:23:10,559 --> 00:23:12,400
something like evolution which is a

601
00:23:12,400 --> 00:23:15,520
client a linux image client

602
00:23:15,520 --> 00:23:16,720
and uh

603
00:23:16,720 --> 00:23:19,360
by using the the legacy

604
00:23:19,360 --> 00:23:21,440
protocols they can access that email and

605
00:23:21,440 --> 00:23:25,039
they can access sensitive information

606
00:23:25,520 --> 00:23:28,400
uh now device code phishing device code

607
00:23:28,400 --> 00:23:31,039
is uh is a way to authenticate as a user

608
00:23:31,039 --> 00:23:31,760
so

609
00:23:31,760 --> 00:23:33,520
you request a code

610
00:23:33,520 --> 00:23:36,400
you can then get that code put it to

611
00:23:36,400 --> 00:23:39,200
a site on azure include your credentials

612
00:23:39,200 --> 00:23:41,360
and then uh do another request and you

613
00:23:41,360 --> 00:23:43,760
will get the access key the access token

614
00:23:43,760 --> 00:23:45,520
and the refresh token

615
00:23:45,520 --> 00:23:47,919
now you can leverage this as uh as a

616
00:23:47,919 --> 00:23:49,760
phishing attempt because you can send

617
00:23:49,760 --> 00:23:52,240
the request get the code send an email

618
00:23:52,240 --> 00:23:54,480
to the user requesting them to login

619
00:23:54,480 --> 00:23:58,320
using that uh i you know using that code

620
00:23:58,320 --> 00:24:00,320
and then get the

621
00:24:00,320 --> 00:24:02,320
access token for yourself so you

622
00:24:02,320 --> 00:24:04,400
practically get access as them

623
00:24:04,400 --> 00:24:06,320
and this is how you can do it you can

624
00:24:06,320 --> 00:24:07,120
just

625
00:24:07,120 --> 00:24:10,720
get the the code using the request the

626
00:24:10,720 --> 00:24:12,559
target can

627
00:24:12,559 --> 00:24:15,120
add the code can log in and you can

628
00:24:15,120 --> 00:24:18,400
actually use any id that you want uh

629
00:24:18,400 --> 00:24:20,960
azure keeps them private but researchers

630
00:24:20,960 --> 00:24:23,919
keep them public so you can use the

631
00:24:23,919 --> 00:24:25,360
microsoft office you can use the

632
00:24:25,360 --> 00:24:28,320
powershell uh module you can use the aws

633
00:24:28,320 --> 00:24:30,559
key so you choose whatever you want it

634
00:24:30,559 --> 00:24:32,400
will do practically the same thing

635
00:24:32,400 --> 00:24:33,360
and

636
00:24:33,360 --> 00:24:36,320
you will get here the access token and

637
00:24:36,320 --> 00:24:38,240
down here you know after this you will

638
00:24:38,240 --> 00:24:39,600
have the refresh token but you know the

639
00:24:39,600 --> 00:24:40,880
screen would not

640
00:24:40,880 --> 00:24:43,279
be you know not show more

641
00:24:43,279 --> 00:24:46,320
and this is also truncated of course

642
00:24:46,320 --> 00:24:49,200
but you will get the the ids for us

643
00:24:49,200 --> 00:24:50,880
sorry the tokens from the user so that

644
00:24:50,880 --> 00:24:53,520
you can reuse them

645
00:24:53,520 --> 00:24:56,400
another thing you can do is create

646
00:24:56,400 --> 00:24:59,279
an application give it permissions ask a

647
00:24:59,279 --> 00:25:01,520
user to request to that

648
00:25:01,520 --> 00:25:04,159
sorry to log into that

649
00:25:04,159 --> 00:25:05,760
and you can get

650
00:25:05,760 --> 00:25:09,039
access to the uh to

651
00:25:09,039 --> 00:25:11,360
you know

652
00:25:13,360 --> 00:25:14,640
okay yeah

653
00:25:14,640 --> 00:25:16,480
and you can get access as that as that

654
00:25:16,480 --> 00:25:20,159
user uh leo did you know rio sherry did

655
00:25:20,159 --> 00:25:23,039
a tool called office 365 attack toolkit

656
00:25:23,039 --> 00:25:25,360
that does practically that and

657
00:25:25,360 --> 00:25:27,919
gets the emails of users based on

658
00:25:27,919 --> 00:25:29,679
different keywords so

659
00:25:29,679 --> 00:25:32,080
you create the application you send it

660
00:25:32,080 --> 00:25:34,080
to the user the user agrees to login and

661
00:25:34,080 --> 00:25:35,760
then you can get information from from

662
00:25:35,760 --> 00:25:38,240
him without you doing anything you know

663
00:25:38,240 --> 00:25:39,840
without even having the credentials of

664
00:25:39,840 --> 00:25:41,679
the user without even having the tokens

665
00:25:41,679 --> 00:25:43,360
of the of the user

666
00:25:43,360 --> 00:25:45,760
now the cloud enumeration when you do

667
00:25:45,760 --> 00:25:47,679
iem enumeration you have to look for use

668
00:25:47,679 --> 00:25:50,480
uh for you know

669
00:25:50,480 --> 00:25:52,640
the security principle the user group

670
00:25:52,640 --> 00:25:55,679
roles and you know the user groups that

671
00:25:55,679 --> 00:25:57,679
you know the the

672
00:25:57,679 --> 00:26:00,720
uh users which are uh in a group or the

673
00:26:00,720 --> 00:26:03,200
groups on which a certain user has

674
00:26:03,200 --> 00:26:06,159
access on so that you can get uh

675
00:26:06,159 --> 00:26:08,559
information on that that user now there

676
00:26:08,559 --> 00:26:13,678
are cases and this actually here is also

677
00:26:14,080 --> 00:26:17,120
recommended by the aws there are cases

678
00:26:17,120 --> 00:26:18,320
when uh

679
00:26:18,320 --> 00:26:20,880
an administrator will give a user

680
00:26:20,880 --> 00:26:22,080
certain

681
00:26:22,080 --> 00:26:24,000
privileges

682
00:26:24,000 --> 00:26:28,400
uh you know like get the uh the poli get

683
00:26:28,400 --> 00:26:30,720
his own policies or get his own users or

684
00:26:30,720 --> 00:26:32,960
you know sometimes even list users so

685
00:26:32,960 --> 00:26:36,840
that it's easier for them to to

686
00:26:36,840 --> 00:26:40,000
uh it's easier for them to work without

687
00:26:40,000 --> 00:26:42,480
the need of the administrator and uh i

688
00:26:42,480 --> 00:26:44,559
built the module for that which uh

689
00:26:44,559 --> 00:26:46,640
allows you to enumerate the user just by

690
00:26:46,640 --> 00:26:48,240
the

691
00:26:48,240 --> 00:26:50,720
you know those default ones i would say

692
00:26:50,720 --> 00:26:53,679
you know uh security uh

693
00:26:53,679 --> 00:26:55,760
you know the those uh

694
00:26:55,760 --> 00:26:58,960
privileges that the user can get

695
00:26:58,960 --> 00:27:01,679
also the azure either allows each user

696
00:27:01,679 --> 00:27:03,600
access to the portal which none of the

697
00:27:03,600 --> 00:27:05,200
other

698
00:27:05,200 --> 00:27:07,679
vendors allows which

699
00:27:07,679 --> 00:27:09,840
gives you the you know gives you access

700
00:27:09,840 --> 00:27:11,919
to to look at uh

701
00:27:11,919 --> 00:27:14,240
information like azure ad information

702
00:27:14,240 --> 00:27:16,559
gives you access to look at

703
00:27:16,559 --> 00:27:18,000
subscription information gives you

704
00:27:18,000 --> 00:27:19,520
access to look at other resources that

705
00:27:19,520 --> 00:27:22,159
they can use so that you can

706
00:27:22,159 --> 00:27:23,760
get information

707
00:27:23,760 --> 00:27:26,159
just by logging in as a certain as a

708
00:27:26,159 --> 00:27:27,760
certain user

709
00:27:27,760 --> 00:27:29,520
when it comes to storage we have to look

710
00:27:29,520 --> 00:27:30,799
for the

711
00:27:30,799 --> 00:27:33,600
which buckets and objects are

712
00:27:33,600 --> 00:27:35,840
allowed you know which are public and uh

713
00:27:35,840 --> 00:27:38,399
which objects are accessible by the user

714
00:27:38,399 --> 00:27:41,039
so you can have a bucket which by itself

715
00:27:41,039 --> 00:27:42,880
is uh

716
00:27:42,880 --> 00:27:45,440
is private but uh different objects are

717
00:27:45,440 --> 00:27:46,880
public so you can you know you can

718
00:27:46,880 --> 00:27:48,799
leverage them to get information there

719
00:27:48,799 --> 00:27:50,720
are there have been a lot of cases when

720
00:27:50,720 --> 00:27:53,919
this kind of files have uh excluded uh

721
00:27:53,919 --> 00:27:55,440
you know

722
00:27:55,440 --> 00:27:56,640
credentials

723
00:27:56,640 --> 00:28:00,240
to allow users to access

724
00:28:01,039 --> 00:28:03,200
now the virtual machines uh as i said

725
00:28:03,200 --> 00:28:04,799
the virtual machines have their own

726
00:28:04,799 --> 00:28:06,960
managed identities which you can access

727
00:28:06,960 --> 00:28:09,039
using the metadata api

728
00:28:09,039 --> 00:28:11,679
uh you uh using the ip one six nine two

729
00:28:11,679 --> 00:28:14,159
five four one six nine two five four

730
00:28:14,159 --> 00:28:16,480
and also when when enumerating virtual

731
00:28:16,480 --> 00:28:18,000
machines you have to understand what

732
00:28:18,000 --> 00:28:20,159
kind of infrastructure the

733
00:28:20,159 --> 00:28:22,240
company is using so you know what can

734
00:28:22,240 --> 00:28:24,960
what they have deployed in it if it's

735
00:28:24,960 --> 00:28:27,679
just some servers and an application if

736
00:28:27,679 --> 00:28:29,279
it's a service application and i don't

737
00:28:29,279 --> 00:28:31,200
know load balancing if it's a whole

738
00:28:31,200 --> 00:28:33,360
infrastructure behind it

739
00:28:33,360 --> 00:28:35,440
you have to know what kind of uh

740
00:28:35,440 --> 00:28:38,159
machines are are being used what kind of

741
00:28:38,159 --> 00:28:40,399
network configurations is being used and

742
00:28:40,399 --> 00:28:42,159
of course the privileges that manage

743
00:28:42,159 --> 00:28:44,720
identities will have

744
00:28:44,720 --> 00:28:47,120
so uh the mission machine metadata as i

745
00:28:47,120 --> 00:28:48,480
said is on

746
00:28:48,480 --> 00:28:51,760
port 169254169254

747
00:28:51,760 --> 00:28:53,840
and it will give you

748
00:28:53,840 --> 00:28:56,559
information on the access kid the secret

749
00:28:56,559 --> 00:28:58,240
key and the session token which you can

750
00:28:58,240 --> 00:29:00,640
use to authenticate with that with that

751
00:29:00,640 --> 00:29:01,679
user now

752
00:29:01,679 --> 00:29:04,720
there are cases when

753
00:29:04,720 --> 00:29:07,120
the ssm is one of the one of them the

754
00:29:07,120 --> 00:29:09,039
systems manager

755
00:29:09,039 --> 00:29:10,880
when you are

756
00:29:10,880 --> 00:29:13,919
obliged to uh

757
00:29:13,919 --> 00:29:16,399
add a certain role to the

758
00:29:16,399 --> 00:29:19,039
machine identity and that role has also

759
00:29:19,039 --> 00:29:21,440
other info other

760
00:29:21,440 --> 00:29:24,720
privileges like for example the ssm role

761
00:29:24,720 --> 00:29:26,720
for ec2 for the

762
00:29:26,720 --> 00:29:28,880
machines has access to

763
00:29:28,880 --> 00:29:31,120
enumerate to list all the buckets and to

764
00:29:31,120 --> 00:29:32,640
put and to get

765
00:29:32,640 --> 00:29:33,919
objects from a bucket so you can

766
00:29:33,919 --> 00:29:36,000
practically get in get information just

767
00:29:36,000 --> 00:29:39,120
by a roll that is mandatory by the by

768
00:29:39,120 --> 00:29:40,799
the vendor so you can leverage stuff

769
00:29:40,799 --> 00:29:44,799
like this to uh to get access also

770
00:29:44,799 --> 00:29:46,480
machines like uh

771
00:29:46,480 --> 00:29:48,720
if you have something like a terraform i

772
00:29:48,720 --> 00:29:51,039
don't know main node or like an ansible

773
00:29:51,039 --> 00:29:52,559
main node or something

774
00:29:52,559 --> 00:29:54,640
not ansible because it uses ssh but if

775
00:29:54,640 --> 00:29:56,880
you have something like terraform you uh

776
00:29:56,880 --> 00:29:58,000
and uh

777
00:29:58,000 --> 00:30:00,399
they have managed identities most of the

778
00:30:00,399 --> 00:30:02,720
time they will have uh

779
00:30:02,720 --> 00:30:04,720
administrator access so you can leverage

780
00:30:04,720 --> 00:30:06,960
that to get access to to an

781
00:30:06,960 --> 00:30:08,880
infrastructure just by you know just by

782
00:30:08,880 --> 00:30:11,279
an api

783
00:30:11,279 --> 00:30:14,799
and this is how you know you get the

784
00:30:14,799 --> 00:30:15,760
the

785
00:30:15,760 --> 00:30:17,120
metadata

786
00:30:17,120 --> 00:30:19,600
also the ews has two versions version

787
00:30:19,600 --> 00:30:21,760
one doesn't have any authentication and

788
00:30:21,760 --> 00:30:23,679
is vulnerable to ssrf if you find

789
00:30:23,679 --> 00:30:25,600
unnecessary on an application you can

790
00:30:25,600 --> 00:30:27,840
make a request you get the information

791
00:30:27,840 --> 00:30:29,679
the version two requires you to

792
00:30:29,679 --> 00:30:31,120
authenticate

793
00:30:31,120 --> 00:30:33,760
from the machine so you

794
00:30:33,760 --> 00:30:34,640
only

795
00:30:34,640 --> 00:30:36,720
the only way to do that is by having a

796
00:30:36,720 --> 00:30:38,559
remote code execution to the to the

797
00:30:38,559 --> 00:30:39,919
machine

798
00:30:39,919 --> 00:30:42,640
and this is the version 2.

799
00:30:42,640 --> 00:30:46,720
the user data is a list of

800
00:30:46,720 --> 00:30:48,000
is

801
00:30:48,000 --> 00:30:50,480
kind of a snippet of code sorry how much

802
00:30:50,480 --> 00:30:51,520
oh

803
00:30:51,520 --> 00:30:53,840
is a snippet of code which uh is run

804
00:30:53,840 --> 00:30:56,720
each time machine is restarted so you

805
00:30:56,720 --> 00:30:59,519
will always find uh credentials in that

806
00:30:59,519 --> 00:31:01,039
you will always find the snippets of

807
00:31:01,039 --> 00:31:03,200
codes and if you manage to

808
00:31:03,200 --> 00:31:05,919
update them you can also use that to to

809
00:31:05,919 --> 00:31:08,159
get access to a machine so

810
00:31:08,159 --> 00:31:09,919
this is something you also need to to

811
00:31:09,919 --> 00:31:11,600
check you know what kind of user data is

812
00:31:11,600 --> 00:31:13,440
being used on a machine

813
00:31:13,440 --> 00:31:15,840
cloud functions are the

814
00:31:15,840 --> 00:31:19,200
code that is then when a certain uh

815
00:31:19,200 --> 00:31:22,000
event has been happening is like wmi for

816
00:31:22,000 --> 00:31:23,279
cloud

817
00:31:23,279 --> 00:31:26,559
and uh you you can choose your own event

818
00:31:26,559 --> 00:31:29,679
to use and uh this is also nice because

819
00:31:29,679 --> 00:31:31,840
uh usually these kinds of codes have

820
00:31:31,840 --> 00:31:33,519
high privileges because they have to

821
00:31:33,519 --> 00:31:36,799
access a lot of a lot of resources so

822
00:31:36,799 --> 00:31:40,480
you can enumerate you can get the roles

823
00:31:40,480 --> 00:31:42,080
same as the

824
00:31:42,080 --> 00:31:44,000
machines they also have roles assigned

825
00:31:44,000 --> 00:31:46,159
so you can get them and you can get the

826
00:31:46,159 --> 00:31:49,760
policies attached to that and uh on

827
00:31:49,760 --> 00:31:52,799
cases of uh

828
00:31:53,200 --> 00:31:56,159
cloud functions they use serverless

829
00:31:56,159 --> 00:31:57,840
authentication so the credentials will

830
00:31:57,840 --> 00:32:00,320
not be stored on the usual places but

831
00:32:00,320 --> 00:32:01,279
usually

832
00:32:01,279 --> 00:32:02,720
not usually but always they will be

833
00:32:02,720 --> 00:32:04,320
stored on the environment variables

834
00:32:04,320 --> 00:32:06,799
which will use later on as a form of

835
00:32:06,799 --> 00:32:08,399
persistence

836
00:32:08,399 --> 00:32:10,080
privileges escalation

837
00:32:10,080 --> 00:32:13,279
now uh you can do privileged escalation

838
00:32:13,279 --> 00:32:16,159
so rhino has a list of about 26

839
00:32:16,159 --> 00:32:18,399
privilege escalations on aws

840
00:32:18,399 --> 00:32:20,480
and someone gcp

841
00:32:20,480 --> 00:32:22,480
i will you know go through only two of

842
00:32:22,480 --> 00:32:23,519
them

843
00:32:23,519 --> 00:32:26,159
so attaching policy to a user which has

844
00:32:26,159 --> 00:32:27,919
the rights to attach policy to other

845
00:32:27,919 --> 00:32:30,880
users and add user to a group which has

846
00:32:30,880 --> 00:32:33,120
administrator rights

847
00:32:33,120 --> 00:32:33,919
so

848
00:32:33,919 --> 00:32:35,760
first of all we have a user which only

849
00:32:35,760 --> 00:32:38,240
has iem full access so they can

850
00:32:38,240 --> 00:32:40,399
update the iam

851
00:32:40,399 --> 00:32:41,760
even if you had

852
00:32:41,760 --> 00:32:44,159
more more granular access you could also

853
00:32:44,159 --> 00:32:45,440
do that

854
00:32:45,440 --> 00:32:46,720
and

855
00:32:46,720 --> 00:32:48,240
just by uh

856
00:32:48,240 --> 00:32:50,240
attaching the administrator access and

857
00:32:50,240 --> 00:32:52,559
that's where you need the iron just by

858
00:32:52,559 --> 00:32:54,080
attaching the administrator access

859
00:32:54,080 --> 00:32:57,200
policy to that user we got

860
00:32:57,200 --> 00:32:58,960
admin rights as that user without

861
00:32:58,960 --> 00:33:01,120
actually breaching any other user so we

862
00:33:01,120 --> 00:33:01,919
just

863
00:33:01,919 --> 00:33:03,600
you know managed to get one credential

864
00:33:03,600 --> 00:33:06,559
and got access uh administrator access

865
00:33:06,559 --> 00:33:08,799
you know we did it

866
00:33:08,799 --> 00:33:12,399
also we can do that with uh with groups

867
00:33:12,399 --> 00:33:15,679
so we uh we see that this admin group

868
00:33:15,679 --> 00:33:18,000
which most of the you know there's a

869
00:33:18,000 --> 00:33:19,360
highest chance that this will have

870
00:33:19,360 --> 00:33:20,799
administ these users will have

871
00:33:20,799 --> 00:33:23,200
administrator rights which as we have

872
00:33:23,200 --> 00:33:25,679
here administrator access

873
00:33:25,679 --> 00:33:27,360
is not you know that user is not part of

874
00:33:27,360 --> 00:33:30,399
that group but if we add it we can allow

875
00:33:30,399 --> 00:33:34,080
that user to be uh administrator again

876
00:33:34,080 --> 00:33:36,840
just by abusing one simple

877
00:33:36,840 --> 00:33:40,320
privilege asia privet we can leverage a

878
00:33:40,320 --> 00:33:43,120
lot of ways to do asia i'm just using

879
00:33:43,120 --> 00:33:45,760
one if you have contributor rights to

880
00:33:45,760 --> 00:33:47,840
the virtual machines which as we said

881
00:33:47,840 --> 00:33:49,919
can do

882
00:33:49,919 --> 00:33:53,600
can modify

883
00:33:53,600 --> 00:33:56,000
content from a certain service if we

884
00:33:56,000 --> 00:33:57,679
leverage that

885
00:33:57,679 --> 00:34:00,240
and execute a command on the on a

886
00:34:00,240 --> 00:34:02,799
certain machine we can get the

887
00:34:02,799 --> 00:34:04,720
the managed identity from that and we

888
00:34:04,720 --> 00:34:06,799
can check this if you know if we have

889
00:34:06,799 --> 00:34:08,560
privileged reskillation so we can also

890
00:34:08,560 --> 00:34:10,960
use something like that to get access to

891
00:34:10,960 --> 00:34:12,800
the machine

892
00:34:12,800 --> 00:34:15,199
exfiltration the best way i i

893
00:34:15,199 --> 00:34:17,440
i found you know which is

894
00:34:17,440 --> 00:34:20,000
silent it's completely normal you know

895
00:34:20,000 --> 00:34:22,239
even the vendor will not take will not

896
00:34:22,239 --> 00:34:24,639
care about that is just copying data

897
00:34:24,639 --> 00:34:26,560
from one bucket to another bucket

898
00:34:26,560 --> 00:34:27,918
simple as that you know you have access

899
00:34:27,918 --> 00:34:29,918
to that you copy to another one you get

900
00:34:29,918 --> 00:34:32,239
a you get information and since this is

901
00:34:32,239 --> 00:34:34,399
a completely normal uh behavior because

902
00:34:34,399 --> 00:34:36,159
you know there are times when you do

903
00:34:36,159 --> 00:34:37,520
backups where there are times when you

904
00:34:37,520 --> 00:34:39,119
do you know

905
00:34:39,119 --> 00:34:41,119
most of the times backups or when you

906
00:34:41,119 --> 00:34:43,599
want to migrate to another uh

907
00:34:43,599 --> 00:34:44,879
i don't know to another cloud or

908
00:34:44,879 --> 00:34:47,280
something you will always do you know

909
00:34:47,280 --> 00:34:49,520
you will always transfer data so just

910
00:34:49,520 --> 00:34:51,280
passing data from one to the other will

911
00:34:51,280 --> 00:34:53,679
not alert many security vendors and if

912
00:34:53,679 --> 00:34:55,440
you manage to obfuscate it enough you

913
00:34:55,440 --> 00:34:57,680
know you can uh

914
00:34:57,680 --> 00:34:58,640
pass

915
00:34:58,640 --> 00:35:02,400
you know small amount of data you can

916
00:35:02,400 --> 00:35:03,440
i don't know

917
00:35:03,440 --> 00:35:05,440
you can name the buckets you know in a

918
00:35:05,440 --> 00:35:08,000
way that is completely normal for uh for

919
00:35:08,000 --> 00:35:10,240
a company or something you can make it

920
00:35:10,240 --> 00:35:13,200
you know a good way of exfiltrating data

921
00:35:13,200 --> 00:35:15,520
persistence

922
00:35:15,520 --> 00:35:18,720
on ews at least you each user has two

923
00:35:18,720 --> 00:35:21,040
sets of credentials because uh the

924
00:35:21,040 --> 00:35:22,960
secret key is only given once to you so

925
00:35:22,960 --> 00:35:24,480
if you lose it you have to create

926
00:35:24,480 --> 00:35:27,440
another one and if a user has only one

927
00:35:27,440 --> 00:35:29,040
one access key you can create a second

928
00:35:29,040 --> 00:35:30,880
one and with the second user you can log

929
00:35:30,880 --> 00:35:32,640
in as that and have the privileges that

930
00:35:32,640 --> 00:35:35,440
the user had also you can if you know

931
00:35:35,440 --> 00:35:37,200
that you are not breaking something you

932
00:35:37,200 --> 00:35:39,760
can up the delete one of them

933
00:35:39,760 --> 00:35:42,000
and create another one and still do the

934
00:35:42,000 --> 00:35:43,359
same thing you know authenticate as that

935
00:35:43,359 --> 00:35:45,040
user

936
00:35:45,040 --> 00:35:47,280
you can persist as i said with machine

937
00:35:47,280 --> 00:35:49,440
user data just update the user data and

938
00:35:49,440 --> 00:35:51,680
when it restarts it will run you will

939
00:35:51,680 --> 00:35:53,520
get access or you know any code you want

940
00:35:53,520 --> 00:35:55,520
will will run on that with

941
00:35:55,520 --> 00:35:56,960
administrative rights so with high

942
00:35:56,960 --> 00:35:59,440
privilege rights

943
00:35:59,440 --> 00:36:01,119
cloud functions you can leverage

944
00:36:01,119 --> 00:36:03,520
something uh you know you can inject a

945
00:36:03,520 --> 00:36:05,839
simple code that just does the curl

946
00:36:05,839 --> 00:36:08,079
uh with the attacker's ip and the

947
00:36:08,079 --> 00:36:10,000
environment variables in which we said

948
00:36:10,000 --> 00:36:13,280
we have the uh

949
00:36:13,280 --> 00:36:15,680
managed identity credentials and it will

950
00:36:15,680 --> 00:36:17,599
send them to you you can go on and you

951
00:36:17,599 --> 00:36:20,000
know uh do everything you want with with

952
00:36:20,000 --> 00:36:21,920
those credentials and you can keep that

953
00:36:21,920 --> 00:36:25,440
office as a persistence because you uh

954
00:36:25,440 --> 00:36:28,320
those privileges can change you know

955
00:36:28,320 --> 00:36:31,200
with time so you can you know you can

956
00:36:31,200 --> 00:36:34,240
reuse them as as many times as you want

957
00:36:34,240 --> 00:36:37,119
and it lastly is the golden assemble

958
00:36:37,119 --> 00:36:39,440
it's like a golden ticket bot for

959
00:36:39,440 --> 00:36:40,720
federated

960
00:36:40,720 --> 00:36:42,000
services

961
00:36:42,000 --> 00:36:44,560
so practically with that you get a token

962
00:36:44,560 --> 00:36:46,480
that is uh

963
00:36:46,480 --> 00:36:47,280
you know

964
00:36:47,280 --> 00:36:49,359
that you get access to everything you

965
00:36:49,359 --> 00:36:53,119
want with any user that you want

966
00:36:53,119 --> 00:36:54,640
it can be used as a privileged

967
00:36:54,640 --> 00:36:57,040
escalation just like uh uh you know just

968
00:36:57,040 --> 00:36:58,960
like golden tickets but mostly it's used

969
00:36:58,960 --> 00:37:01,280
as a as a as a persistence method and

970
00:37:01,280 --> 00:37:02,640
this you know it's like the ultimate

971
00:37:02,640 --> 00:37:04,320
persistence you get access to that it's

972
00:37:04,320 --> 00:37:05,760
like you're getting dominance domain

973
00:37:05,760 --> 00:37:07,599
admin rights to uh to an active

974
00:37:07,599 --> 00:37:11,839
directory domain and but you do that for

975
00:37:11,839 --> 00:37:13,680
for the cloud

976
00:37:13,680 --> 00:37:16,240
so this has these are some resources the

977
00:37:16,240 --> 00:37:18,079
pdfs will be shared so you know you can

978
00:37:18,079 --> 00:37:19,839
check them

979
00:37:19,839 --> 00:37:22,400
and this is the end sorry i took you way

980
00:37:22,400 --> 00:37:25,450
too long sorry i know

981
00:37:25,450 --> 00:37:29,698
[Applause]

