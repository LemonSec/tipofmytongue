1
00:00:00,000 --> 00:00:03,810
all right good afternoon<font color="#CCCCCC"> everybody hope</font>

2
00:00:02,340 --> 00:00:06,870
we've all had a little chance<font color="#E5E5E5"> to digest</font>

3
00:00:03,810 --> 00:00:08,580
lunch and get started<font color="#E5E5E5"> we'll wind up the</font>

4
00:00:06,870 --> 00:00:11,639
propeller beanies a little bit on this

5
00:00:08,580 --> 00:00:13,230
talk so<font color="#CCCCCC"> i'm bruce wilson i work at oak</font>

6
00:00:11,639 --> 00:00:15,540
ridge national laboratory when we

7
00:00:13,230 --> 00:00:18,359
started this effort<font color="#CCCCCC"> i was one of the</font>

8
00:00:15,540 --> 00:00:20,460
enterprise architects<font color="#E5E5E5"> i'm fortunate that</font>

9
00:00:18,359 --> 00:00:22,619
I actually happen to be the CTO for IT

10
00:00:20,460 --> 00:00:26,220
at oak ridge as<font color="#CCCCCC"> i have a</font><font color="#E5E5E5"> couple</font><font color="#CCCCCC"> of</font>

11
00:00:22,619 --> 00:00:29,250
<font color="#CCCCCC">months ago j tu es OU</font><font color="#E5E5E5"> is student at UT</font>

12
00:00:26,220 --> 00:00:31,619
Knoxville much of the code this<font color="#E5E5E5"> here is</font>

13
00:00:29,250 --> 00:00:34,050
stuff that he's written so if you like

14
00:00:31,619 --> 00:00:36,780
what you've seen it is if we screwed up

15
00:00:34,050 --> 00:00:38,819
it's my fault coordinates are up there

16
00:00:36,780 --> 00:00:40,620
there's a little bit of some background

17
00:00:38,820 --> 00:00:42,390
<font color="#CCCCCC">i am by a regional training a chemist</font>

18
00:00:40,620 --> 00:00:43,890
this is the first time that<font color="#E5E5E5"> i had a</font>

19
00:00:42,390 --> 00:00:46,710
chance to speak<font color="#E5E5E5"> of cyber security</font>

20
00:00:43,890 --> 00:00:50,129
conference so<font color="#E5E5E5"> let's have some fun and</font>

21
00:00:46,710 --> 00:00:53,610
<font color="#CCCCCC">walk-through i will</font><font color="#E5E5E5"> rip off topic for</font>

22
00:00:50,129 --> 00:00:55,559
just a half second on<font color="#CCCCCC"> amanda's topic at</font>

23
00:00:53,610 --> 00:00:57,329
the keynote this morning and<font color="#CCCCCC"> i was</font>

24
00:00:55,559 --> 00:00:59,160
<font color="#E5E5E5">reminded that when we look at others we</font>

25
00:00:57,329 --> 00:01:01,020
tend to see their highlight reel and

26
00:00:59,160 --> 00:01:03,718
when we<font color="#E5E5E5"> look at ourselves we see our</font>

27
00:01:01,020 --> 00:01:06,270
outtakes<font color="#CCCCCC"> i will simply say amanda</font>

28
00:01:03,719 --> 00:01:09,240
commented that she was 25 before she

29
00:01:06,270 --> 00:01:11,960
realized she needed some help<font color="#E5E5E5"> i was 45</font>

30
00:01:09,240 --> 00:01:16,380
before i realized i needed some help

31
00:01:11,960 --> 00:01:17,729
moving back on topic<font color="#E5E5E5"> saml what is it how</font>

32
00:01:16,380 --> 00:01:19,589
does it work that's the first piece

33
00:01:17,729 --> 00:01:22,289
we'll talk<font color="#E5E5E5"> about</font><font color="#CCCCCC"> some of</font><font color="#E5E5E5"> the attack</font>

34
00:01:19,590 --> 00:01:24,090
vectors arm and things that<font color="#E5E5E5"> we need to</font>

35
00:01:22,290 --> 00:01:25,680
<font color="#E5E5E5">look at and that are</font><font color="#CCCCCC"> behind this test</font>

36
00:01:24,090 --> 00:01:29,400
the testing framework that we've

37
00:01:25,680 --> 00:01:31,979
<font color="#E5E5E5">developed and the test results so Samuel</font>

38
00:01:29,400 --> 00:01:34,860
security assertion markup language this

39
00:01:31,979 --> 00:01:38,158
is a broadly used protocol for logging

40
00:01:34,860 --> 00:01:40,289
into websites using employer or

41
00:01:38,159 --> 00:01:43,409
university credentials it enables a

42
00:01:40,290 --> 00:01:45,869
single sign-on so for example<font color="#E5E5E5"> we're now</font>

43
00:01:43,409 --> 00:01:48,720
uses service now I suspect a lot of

44
00:01:45,869 --> 00:01:51,000
folks do i log into service now using my

45
00:01:48,720 --> 00:01:55,350
ORNL credentials that's done through

46
00:01:51,000 --> 00:01:57,780
sam'l to pass that information on and it

47
00:01:55,350 --> 00:02:00,240
is a useful tool because it involves

48
00:01:57,780 --> 00:02:02,189
letting the user in but we<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> have to</font>

49
00:02:00,240 --> 00:02:04,439
do things<font color="#E5E5E5"> like say replicate usernames</font>

50
00:02:02,189 --> 00:02:07,169
and passwords out there as we step

51
00:02:04,439 --> 00:02:09,959
things up and implements a multi-factor

52
00:02:07,170 --> 00:02:11,879
authentication internally on everything

53
00:02:09,959 --> 00:02:12,930
<font color="#CCCCCC">that comes out of our Samuel IDP</font>

54
00:02:11,879 --> 00:02:17,640
benefits

55
00:02:12,930 --> 00:02:19,469
that it<font color="#E5E5E5"> is based on XML which is at</font>

56
00:02:17,640 --> 00:02:22,768
<font color="#CCCCCC">least signed and in some cases</font>

57
00:02:19,469 --> 00:02:24,930
potentially encrypted and if anybody is

58
00:02:22,769 --> 00:02:28,859
familiar with soap as a process<font color="#E5E5E5"> that</font>

59
00:02:24,930 --> 00:02:33,109
tends to be somewhat complicated that's

60
00:02:28,859 --> 00:02:37,530
a word that gets my attention because

61
00:02:33,109 --> 00:02:40,980
complicated software certificates there

62
00:02:37,530 --> 00:02:44,250
be<font color="#CCCCCC"> dragons so what kind of dragons and</font>

63
00:02:40,980 --> 00:02:45,540
what motivated this work well first got

64
00:02:44,250 --> 00:02:48,269
my attention was there's a paper

65
00:02:45,540 --> 00:02:50,849
published in 2012 the citation is there

66
00:02:48,269 --> 00:02:53,790
that they<font color="#E5E5E5"> found a significant number of</font>

67
00:02:50,849 --> 00:02:56,988
flaws in 14 different<font color="#CCCCCC"> sam'l service</font>

68
00:02:53,790 --> 00:02:59,760
provider packages including<font color="#CCCCCC"> Shibboleth</font>

69
00:02:56,989 --> 00:03:01,530
that should scare people because

70
00:02:59,760 --> 00:03:03,418
<font color="#CCCCCC">Shibboleth is by far and away the most</font>

71
00:03:01,530 --> 00:03:06,030
<font color="#E5E5E5">widely used sam'l service provider</font>

72
00:03:03,419 --> 00:03:09,150
basically by every single university in

73
00:03:06,030 --> 00:03:11,639
the country it is the primary open

74
00:03:09,150 --> 00:03:14,969
source provider now shibboleth has fixed

75
00:03:11,639 --> 00:03:19,310
those problems but that still<font color="#E5E5E5"> gets one</font>

76
00:03:14,969 --> 00:03:22,620
concerned oh ah is related<font color="#CCCCCC"> roth is a</font>

77
00:03:19,310 --> 00:03:26,970
similar process often used in a number

78
00:03:22,620 --> 00:03:30,449
of mobile applications and this is a

79
00:03:26,970 --> 00:03:32,310
black hat paper from 2016 they found

80
00:03:30,449 --> 00:03:35,099
that forty-one percent of applications

81
00:03:32,310 --> 00:03:37,280
did not implement oh off correctly and

82
00:03:35,099 --> 00:03:41,548
were susceptible comparsa nation attacks

83
00:03:37,280 --> 00:03:44,159
so let's dig into this<font color="#E5E5E5"> and see</font><font color="#CCCCCC"> what we</font>

84
00:03:41,549 --> 00:03:46,949
can find so a couple of key terms<font color="#CCCCCC"> I've</font>

85
00:03:44,159 --> 00:03:49,168
used one of<font color="#E5E5E5"> them on the service provider</font>

86
00:03:46,949 --> 00:03:52,319
that's the website that the user<font color="#E5E5E5"> is</font>

87
00:03:49,169 --> 00:03:55,409
trying to log into if you're<font color="#E5E5E5"> used to</font>

88
00:03:52,319 --> 00:03:57,418
looking at Kerberos or oooff they'll

89
00:03:55,409 --> 00:04:00,060
talk about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> is the relying party if</font>

90
00:03:57,419 --> 00:04:03,750
you are like me fortunate enough to have

91
00:04:00,060 --> 00:04:06,060
to work with things like<font color="#E5E5E5"> mist 863 as</font>

92
00:04:03,750 --> 00:04:08,819
standards for<font color="#E5E5E5"> authentication they will</font>

93
00:04:06,060 --> 00:04:11,759
<font color="#CCCCCC">also talk about the</font><font color="#E5E5E5"> relying party the</font>

94
00:04:08,819 --> 00:04:14,849
identity<font color="#CCCCCC"> provider that's</font><font color="#E5E5E5"> the thing that</font>

95
00:04:11,759 --> 00:04:18,570
is validating the users credentials and

96
00:04:14,849 --> 00:04:21,209
it is for<font color="#E5E5E5"> us we happen to use pink bed</font>

97
00:04:18,570 --> 00:04:24,150
many<font color="#E5E5E5"> people might</font><font color="#CCCCCC"> use on Active</font>

98
00:04:21,209 --> 00:04:25,440
Directory Federation services<font color="#CCCCCC"> adfs that</font>

99
00:04:24,150 --> 00:04:28,950
would be<font color="#CCCCCC"> the identity</font>

100
00:04:25,440 --> 00:04:32,310
wider so let's dive in a little bit

101
00:04:28,950 --> 00:04:37,560
there use their sim perfectly obvious

102
00:04:32,310 --> 00:04:40,620
right yeah you can go cross-eyed looking

103
00:04:37,560 --> 00:04:43,260
I will dig into what some of this is if

104
00:04:40,620 --> 00:04:45,810
you go to Wikipedia this is the diagram

105
00:04:43,260 --> 00:04:48,780
that they put for what<font color="#E5E5E5"> happens in a</font>

106
00:04:45,810 --> 00:04:50,130
<font color="#E5E5E5">sam'l transaction and I find this is one</font>

107
00:04:48,780 --> 00:04:52,950
of these things<font color="#E5E5E5"> that once I understood</font>

108
00:04:50,130 --> 00:04:55,469
what the heck sama was doing this made

109
00:04:52,950 --> 00:04:58,650
sense but it didn't make a lot of sense

110
00:04:55,470 --> 00:05:00,690
<font color="#E5E5E5">to me until I actually started to dig</font>

111
00:04:58,650 --> 00:05:02,520
through and watch what was happening<font color="#E5E5E5"> on</font>

112
00:05:00,690 --> 00:05:05,490
a sam'l transaction so let's walk

113
00:05:02,520 --> 00:05:09,020
through it there's a couple<font color="#E5E5E5"> of</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> I</font>

114
00:05:05,490 --> 00:05:12,090
want to point out with this so we have a

115
00:05:09,020 --> 00:05:14,789
preset up here so this<font color="#E5E5E5"> is a step</font>

116
00:05:12,090 --> 00:05:17,400
typically taken by a<font color="#E5E5E5"> human that we are</font>

117
00:05:14,790 --> 00:05:19,910
saying we're going to have this service

118
00:05:17,400 --> 00:05:22,739
provider and i'm using SP example.com

119
00:05:19,910 --> 00:05:26,490
here these are the identity provider

120
00:05:22,740 --> 00:05:28,320
systems here and this<font color="#CCCCCC"> is a pc via</font>

121
00:05:26,490 --> 00:05:30,120
password credentialed alligator in this

122
00:05:28,320 --> 00:05:32,400
case think for example something like

123
00:05:30,120 --> 00:05:34,560
Active Directory or LDAP but it's the

124
00:05:32,400 --> 00:05:37,620
thing that the the sam'l software is

125
00:05:34,560 --> 00:05:40,020
going to call Samuel is based on public

126
00:05:37,620 --> 00:05:42,360
key crypto asymmetric cryptography if

127
00:05:40,020 --> 00:05:44,609
you will so the thing that you have<font color="#CCCCCC"> to</font>

128
00:05:42,360 --> 00:05:48,120
<font color="#CCCCCC">do is you have to tell the service</font>

129
00:05:44,610 --> 00:05:51,630
provider what is the public key that<font color="#E5E5E5"> the</font>

130
00:05:48,120 --> 00:05:54,270
IDP the sam'l software is using you

131
00:05:51,630 --> 00:05:55,710
might go the other direction as<font color="#CCCCCC"> well and</font>

132
00:05:54,270 --> 00:05:58,919
this is essential of course if we're

133
00:05:55,710 --> 00:06:01,710
<font color="#CCCCCC">doing the encrypted forms of sam'l and</font>

134
00:05:58,919 --> 00:06:05,640
give the public<font color="#E5E5E5"> key for the service</font>

135
00:06:01,710 --> 00:06:08,190
provider to the IDP this is done out of

136
00:06:05,640 --> 00:06:10,919
band for those of you<font color="#E5E5E5"> who are familiar</font>

137
00:06:08,190 --> 00:06:12,990
with in common that provides a central

138
00:06:10,919 --> 00:06:15,299
trusted repository for<font color="#E5E5E5"> this information</font>

139
00:06:12,990 --> 00:06:17,610
<font color="#CCCCCC">but most of the time this is</font><font color="#E5E5E5"> an</font>

140
00:06:15,300 --> 00:06:20,630
administrator who has access to<font color="#E5E5E5"> both</font>

141
00:06:17,610 --> 00:06:23,760
systems and is moving some keys around

142
00:06:20,630 --> 00:06:25,860
so we start with<font color="#CCCCCC"> the user and</font><font color="#E5E5E5"> in this</font>

143
00:06:23,760 --> 00:06:29,070
case i'm looking at a user who happens

144
00:06:25,860 --> 00:06:30,600
to be on our internal network<font color="#CCCCCC"> i'll talk</font>

145
00:06:29,070 --> 00:06:33,599
about some of<font color="#E5E5E5"> this a little bit later</font>

146
00:06:30,600 --> 00:06:35,550
and that user<font color="#CCCCCC"> talks out to the internet</font>

147
00:06:33,600 --> 00:06:38,190
says I want to go to this particular

148
00:06:35,550 --> 00:06:41,190
page on you mr. service provider

149
00:06:38,190 --> 00:06:43,830
or ms service provider then asks the

150
00:06:41,190 --> 00:06:46,350
question does this user have a valid

151
00:06:43,830 --> 00:06:49,440
session with me at this point great if

152
00:06:46,350 --> 00:06:51,570
<font color="#CCCCCC">we do then they can use it</font><font color="#E5E5E5"> no well we're</font>

153
00:06:49,440 --> 00:06:52,950
am I supposed<font color="#E5E5E5"> to send this user and</font>

154
00:06:51,570 --> 00:06:55,770
there's a couple<font color="#E5E5E5"> of different patterns</font>

155
00:06:52,950 --> 00:06:58,200
that that happens with and<font color="#E5E5E5"> that's what</font>

156
00:06:55,770 --> 00:07:00,479
they talk about is IDP discovery but in

157
00:06:58,200 --> 00:07:02,490
this case we're talking about SP so it

158
00:07:00,480 --> 00:07:06,960
knows that<font color="#CCCCCC"> this should send this user to</font>

159
00:07:02,490 --> 00:07:08,760
<font color="#E5E5E5">go or Nels provider so here it is so</font>

160
00:07:06,960 --> 00:07:11,880
it's going<font color="#E5E5E5"> to give the user a sam'l</font>

161
00:07:08,760 --> 00:07:14,400
request which is a blob of XML in a real

162
00:07:11,880 --> 00:07:16,560
estate<font color="#CCCCCC"> and the whole point here is the</font>

163
00:07:14,400 --> 00:07:18,960
real estate is the means by which the

164
00:07:16,560 --> 00:07:22,680
service provider will remember later

165
00:07:18,960 --> 00:07:24,450
where that user needs to go user then

166
00:07:22,680 --> 00:07:26,400
goes to that identity provider it says

167
00:07:24,450 --> 00:07:30,840
here's mice animal request here's my

168
00:07:26,400 --> 00:07:32,700
<font color="#E5E5E5">real a state I want to log in the sam'l</font>

169
00:07:30,840 --> 00:07:34,500
software can then be asking questions

170
00:07:32,700 --> 00:07:38,640
does issues already have a session with

171
00:07:34,500 --> 00:07:43,310
me well let's say no so now we need to

172
00:07:38,640 --> 00:07:45,810
<font color="#E5E5E5">do a credential validation step and that</font>

173
00:07:43,310 --> 00:07:48,840
credential back to the sam'l software

174
00:07:45,810 --> 00:07:52,140
that then talks to a credential

175
00:07:48,840 --> 00:07:55,049
validator let's assume for the moment

176
00:07:52,140 --> 00:07:56,969
them that they credential is valid now

177
00:07:55,050 --> 00:07:58,680
then this animal software and in this

178
00:07:56,970 --> 00:08:01,260
case is going back to the same place but

179
00:07:58,680 --> 00:08:04,650
it could go someplace else goes to pick

180
00:08:01,260 --> 00:08:07,260
up attributes about the user so in the

181
00:08:04,650 --> 00:08:09,780
case i'm simulating here<font color="#E5E5E5"> i would be</font>

182
00:08:07,260 --> 00:08:12,630
logging in with an<font color="#E5E5E5"> internal user name</font>

183
00:08:09,780 --> 00:08:16,140
and password but my username off here in

184
00:08:12,630 --> 00:08:18,930
this insane and spe example.com happens

185
00:08:16,140 --> 00:08:20,729
to be my email address so the the sam'l

186
00:08:18,930 --> 00:08:24,780
software that needs to talk and get that

187
00:08:20,730 --> 00:08:27,570
information it's got it it will then

188
00:08:24,780 --> 00:08:30,599
look up the information that<font color="#E5E5E5"> it had the</font>

189
00:08:27,570 --> 00:08:33,929
sam'l requests the relay<font color="#E5E5E5"> state assemble</font>

190
00:08:30,600 --> 00:08:35,430
all of that into a sam'l response that's

191
00:08:33,929 --> 00:08:37,679
the thing that<font color="#CCCCCC"> we're going</font><font color="#E5E5E5"> to talk a</font>

192
00:08:35,429 --> 00:08:41,760
little bit more<font color="#E5E5E5"> about</font><font color="#CCCCCC"> and it since thats</font>

193
00:08:37,679 --> 00:08:46,709
a no response and the<font color="#E5E5E5"> relay state back</font>

194
00:08:41,760 --> 00:08:50,040
to the user who then sends all of that

195
00:08:46,710 --> 00:08:52,020
stuff back to<font color="#E5E5E5"> the service provider the</font>

196
00:08:50,040 --> 00:08:54,449
service provider then needs to take

197
00:08:52,020 --> 00:08:58,350
look at all of that information say is

198
00:08:54,450 --> 00:09:00,570
this a valid saml token is this user

199
00:08:58,350 --> 00:09:03,630
somebody who should have access and<font color="#E5E5E5"> a</font>

200
00:09:00,570 --> 00:09:06,420
bunch of other checks and all of those

201
00:09:03,630 --> 00:09:09,660
checks pass then it gives the user a

202
00:09:06,420 --> 00:09:14,310
session cookie for talking to it and

203
00:09:09,660 --> 00:09:17,430
then the user can move on and do what

204
00:09:14,310 --> 00:09:19,650
<font color="#E5E5E5">needs to</font><font color="#CCCCCC"> happen so some notes about this</font>

205
00:09:17,430 --> 00:09:22,170
number one there are multiple different

206
00:09:19,650 --> 00:09:24,300
<font color="#E5E5E5">ways of doing sam'l what I'm talking</font>

207
00:09:22,170 --> 00:09:28,020
about here<font color="#CCCCCC"> is what's called a post or</font>

208
00:09:24,300 --> 00:09:31,199
redirect binding also called a bearer

209
00:09:28,020 --> 00:09:35,250
token this is the most commonly<font color="#CCCCCC"> used</font>

210
00:09:31,200 --> 00:09:38,880
method of doing sam'l and potentially

211
00:09:35,250 --> 00:09:41,310
the least secure but<font color="#CCCCCC"> okay that those two</font>

212
00:09:38,880 --> 00:09:43,770
things often go together<font color="#E5E5E5"> but what</font>

213
00:09:41,310 --> 00:09:45,599
happened here everything which<font color="#CCCCCC"> is the</font>

214
00:09:43,770 --> 00:09:48,960
important went through probably<font color="#CCCCCC"> one of</font>

215
00:09:45,600 --> 00:09:53,220
the most hostile territories around the

216
00:09:48,960 --> 00:09:57,810
<font color="#CCCCCC">users browser so what can be done with</font>

217
00:09:53,220 --> 00:10:01,140
that information well we can encrypt the

218
00:09:57,810 --> 00:10:03,089
sam'l payload that's not often done for

219
00:10:01,140 --> 00:10:08,310
a variety of reasons<font color="#E5E5E5"> but it's absolutely</font>

220
00:10:03,090 --> 00:10:10,970
done if we're passing sensitive

221
00:10:08,310 --> 00:10:13,709
information through the<font color="#CCCCCC"> user's browser</font>

222
00:10:10,970 --> 00:10:15,390
there is another<font color="#E5E5E5"> more secure method this</font>

223
00:10:13,710 --> 00:10:17,910
is called an artifact binding so that

224
00:10:15,390 --> 00:10:21,480
what<font color="#E5E5E5"> I sent back in that sam'l response</font>

225
00:10:17,910 --> 00:10:24,689
is a nonce and then the sam'l service

226
00:10:21,480 --> 00:10:26,700
provider needs to then talk back<font color="#E5E5E5"> and it</font>

227
00:10:24,690 --> 00:10:29,850
will get all of its<font color="#CCCCCC"> information through</font>

228
00:10:26,700 --> 00:10:33,900
that back channel<font color="#E5E5E5"> and this is how a walk</font>

229
00:10:29,850 --> 00:10:36,270
is often done but that<font color="#E5E5E5"> also then</font>

230
00:10:33,900 --> 00:10:38,790
requires some things if you notice in my

231
00:10:36,270 --> 00:10:41,280
diagram my identity provider was buried

232
00:10:38,790 --> 00:10:43,140
down in the internal network there's a

233
00:10:41,280 --> 00:10:44,910
<font color="#E5E5E5">reason for that because in that</font>

234
00:10:43,140 --> 00:10:47,760
particular configuration with what I'm

235
00:10:44,910 --> 00:10:50,160
doing<font color="#CCCCCC"> my identity provider is not</font>

236
00:10:47,760 --> 00:10:54,300
internet exposed this is one of<font color="#E5E5E5"> my means</font>

237
00:10:50,160 --> 00:10:57,030
of protecting this asset to only allow

238
00:10:54,300 --> 00:11:00,199
access from people who are legitimately

239
00:10:57,030 --> 00:11:03,970
on the ORNL network it's one form<font color="#E5E5E5"> of</font>

240
00:11:00,200 --> 00:11:06,819
authentication into the service

241
00:11:03,970 --> 00:11:10,389
or attack binding is useful in some

242
00:11:06,819 --> 00:11:13,240
cases but<font color="#CCCCCC"> can't always be used so</font>

243
00:11:10,389 --> 00:11:17,589
digging into this there is a lot<font color="#CCCCCC"> that is</font>

244
00:11:13,240 --> 00:11:21,670
buried in this one box and in particular

245
00:11:17,589 --> 00:11:25,259
if any folks have done signed messages

246
00:11:21,670 --> 00:11:29,709
if you've done<font color="#CCCCCC"> asymmetric</font><font color="#E5E5E5"> cryptography</font>

247
00:11:25,259 --> 00:11:32,290
it's easy to make<font color="#E5E5E5"> mistakes so let's dig</font>

248
00:11:29,709 --> 00:11:34,989
into what that SP should be doing and

249
00:11:32,290 --> 00:11:37,959
ask some questions<font color="#CCCCCC"> about how can we test</font>

250
00:11:34,990 --> 00:11:40,980
<font color="#E5E5E5">I mentioned summer</font><font color="#CCCCCC"> oskis paper that was</font>

251
00:11:37,959 --> 00:11:43,839
<font color="#E5E5E5">the 2012 we want to look for their code</font>

252
00:11:40,980 --> 00:11:47,319
it was written in Java which is not my

253
00:11:43,839 --> 00:11:49,269
particular language of choice and<font color="#E5E5E5"> it</font>

254
00:11:47,319 --> 00:11:51,339
looked<font color="#E5E5E5"> to be largely abandoned I think</font>

255
00:11:49,269 --> 00:11:54,339
<font color="#E5E5E5">this was somebody's master's thesis and</font>

256
00:11:51,339 --> 00:11:57,970
that student then went off to a real job

257
00:11:54,339 --> 00:11:59,709
and the code was abandoned JC hidden and

258
00:11:57,970 --> 00:12:01,779
I have been working<font color="#E5E5E5"> on some testing of</font>

259
00:11:59,709 --> 00:12:04,029
our existing infrastructure<font color="#E5E5E5"> tools some</font>

260
00:12:01,779 --> 00:12:05,709
synthetic transactions and we've been

261
00:12:04,029 --> 00:12:07,600
using cucumber which<font color="#E5E5E5"> I will talk to</font>

262
00:12:05,709 --> 00:12:09,339
<font color="#E5E5E5">about it in a minute it's a</font>

263
00:12:07,600 --> 00:12:11,949
domain-specific language for writing

264
00:12:09,339 --> 00:12:14,920
test it's got this great interface with

265
00:12:11,949 --> 00:12:17,589
what's your web driver so great except

266
00:12:14,920 --> 00:12:20,469
<font color="#CCCCCC">that what's here didn't help for reasons</font>

267
00:12:17,589 --> 00:12:22,089
that I'll talk<font color="#E5E5E5"> about but you know we've</font>

268
00:12:20,470 --> 00:12:24,910
<font color="#E5E5E5">got the pieces parts this shouldn't be</font>

269
00:12:22,089 --> 00:12:31,410
too hard as usual there's an XKCD for

270
00:12:24,910 --> 00:12:33,850
that so more time later than I expected

271
00:12:31,410 --> 00:12:35,740
we actually<font color="#CCCCCC"> got to the point and</font><font color="#E5E5E5"> so this</font>

272
00:12:33,850 --> 00:12:38,949
actually is<font color="#CCCCCC"> the way the test appears</font>

273
00:12:35,740 --> 00:12:42,250
this is a simple test that I will dig

274
00:12:38,949 --> 00:12:45,430
into in this case what we're doing is

275
00:12:42,250 --> 00:12:47,889
simulating what or is testing whether<font color="#CCCCCC"> or</font>

276
00:12:45,430 --> 00:12:51,878
<font color="#CCCCCC">not the service provider will accept</font>

277
00:12:47,889 --> 00:12:55,240
unsigned sam'l in sam'l should always be

278
00:12:51,879 --> 00:12:56,920
<font color="#E5E5E5">fine because</font><font color="#CCCCCC"> if I'm not sending a</font>

279
00:12:55,240 --> 00:12:59,620
signature through I'm<font color="#CCCCCC"> going through the</font>

280
00:12:56,920 --> 00:13:03,519
<font color="#E5E5E5">users browser then an impersonation</font>

281
00:12:59,620 --> 00:13:07,029
attack becomes trivial so what<font color="#CCCCCC"> can we</font>

282
00:13:03,519 --> 00:13:09,040
test does the service<font color="#E5E5E5"> provider validate</font>

283
00:13:07,029 --> 00:13:11,620
the signature and the common way that we

284
00:13:09,040 --> 00:13:13,480
do that is we change the sam'l subject

285
00:13:11,620 --> 00:13:16,079
which is effectively the<font color="#CCCCCC"> username in</font>

286
00:13:13,480 --> 00:13:16,079
this transaction

287
00:13:16,420 --> 00:13:21,699
does the service provider handle a

288
00:13:18,700 --> 00:13:24,190
supplied public key correctly<font color="#E5E5E5"> I can put</font>

289
00:13:21,700 --> 00:13:26,610
a public key in<font color="#CCCCCC"> that sample message to</font>

290
00:13:24,190 --> 00:13:31,360
say this<font color="#E5E5E5"> is the certificate I'm using</font>

291
00:13:26,610 --> 00:13:33,550
<font color="#CCCCCC">that should have a</font><font color="#E5E5E5"> service provider to</font>

292
00:13:31,360 --> 00:13:36,339
go that's the key to use out<font color="#CCCCCC"> of the list</font>

293
00:13:33,550 --> 00:13:38,380
and this is used for rolling keys so if

294
00:13:36,339 --> 00:13:40,320
I'm signing with one key and now I've

295
00:13:38,380 --> 00:13:44,139
gotten a new key because my old one is

296
00:13:40,320 --> 00:13:46,470
expiring I send in the sam'l message<font color="#E5E5E5"> I'm</font>

297
00:13:44,139 --> 00:13:49,360
using the new key i'm using the old p

298
00:13:46,470 --> 00:13:51,190
this service provider shouldn't actually

299
00:13:49,360 --> 00:13:54,279
<font color="#E5E5E5">say oh that's icky you want to use great</font>

300
00:13:51,190 --> 00:13:56,560
that's<font color="#E5E5E5"> fine that was</font><font color="#CCCCCC"> actually some of</font>

301
00:13:54,279 --> 00:13:59,889
what seminar offski found and that's why

302
00:13:56,560 --> 00:14:02,439
<font color="#CCCCCC">i put that test in this</font><font color="#E5E5E5"> list does the</font>

303
00:13:59,889 --> 00:14:03,970
<font color="#CCCCCC">service provider fail completely if the</font>

304
00:14:02,440 --> 00:14:05,949
signature is tripped up a service

305
00:14:03,970 --> 00:14:08,680
provider should never ever ever accept

306
00:14:05,949 --> 00:14:12,819
unsigned sam'l that was again part of

307
00:14:08,680 --> 00:14:15,219
the problems with samer<font color="#CCCCCC"> osky found in</font>

308
00:14:12,820 --> 00:14:18,250
their paper this<font color="#CCCCCC"> is the one problem that</font>

309
00:14:15,220 --> 00:14:24,279
we<font color="#E5E5E5"> found that was due to a configuration</font>

310
00:14:18,250 --> 00:14:26,920
error and the sam'l should time out so a

311
00:14:24,279 --> 00:14:29,829
saml token should be valid for a period

312
00:14:26,920 --> 00:14:31,990
of minutes this is configurable in the

313
00:14:29,829 --> 00:14:35,199
set up<font color="#E5E5E5"> between the service provider and</font>

314
00:14:31,990 --> 00:14:38,410
the IDP it does require that they are

315
00:14:35,199 --> 00:14:40,329
<font color="#CCCCCC">using a common clock a fairly</font><font color="#E5E5E5"> standard</font>

316
00:14:38,410 --> 00:14:43,779
setting is that a saml token is valid

317
00:14:40,329 --> 00:14:46,209
for five minutes that accounts for an

318
00:14:43,779 --> 00:14:49,689
awful lot of clock skew we<font color="#E5E5E5"> actually</font>

319
00:14:46,209 --> 00:14:51,760
often<font color="#E5E5E5"> use a three minutes timeout you</font>

320
00:14:49,690 --> 00:14:54,820
may be aware<font color="#CCCCCC"> that there has been some</font>

321
00:14:51,760 --> 00:14:56,500
<font color="#CCCCCC">precompute attacks against sha-1 there</font>

322
00:14:54,820 --> 00:15:00,339
still<font color="#CCCCCC"> are not things that are feasible</font>

323
00:14:56,500 --> 00:15:04,630
to do in this context in under a few

324
00:15:00,339 --> 00:15:06,339
minutes<font color="#E5E5E5"> so that's an important feature</font>

325
00:15:04,630 --> 00:15:08,949
within<font color="#CCCCCC"> Santaland some of these other</font>

326
00:15:06,339 --> 00:15:11,199
tools we<font color="#CCCCCC"> have not yet put in the</font>

327
00:15:08,949 --> 00:15:13,540
framework to be able<font color="#E5E5E5"> to do testing of</font>

328
00:15:11,199 --> 00:15:18,219
replay attacks a saml token should be

329
00:15:13,540 --> 00:15:20,349
valid example exactly once that was a

330
00:15:18,220 --> 00:15:23,529
problem thats a<font color="#CCCCCC"> moroski noted in a few</font>

331
00:15:20,350 --> 00:15:26,449
<font color="#E5E5E5">places as well we are not presently</font>

332
00:15:23,529 --> 00:15:28,279
doing anything with encrypted payloads

333
00:15:26,449 --> 00:15:31,040
more are we doing anything against the

334
00:15:28,279 --> 00:15:34,279
artifact binding nor have we got

335
00:15:31,040 --> 00:15:36,290
anything<font color="#E5E5E5"> working today like a lot of</font>

336
00:15:34,279 --> 00:15:39,049
<font color="#E5E5E5">folks we are doing more and more with</font>

337
00:15:36,290 --> 00:15:45,169
multi-factor authentication scripted

338
00:15:39,049 --> 00:15:50,059
tests involving MFA or yeah so what kind

339
00:15:45,169 --> 00:15:51,889
of<font color="#CCCCCC"> test would you do part of what I</font>

340
00:15:50,059 --> 00:15:53,529
would<font color="#E5E5E5"> try to do is reverse the</font>

341
00:15:51,889 --> 00:15:58,279
encryption again a knowledgeable

342
00:15:53,529 --> 00:16:01,730
attacker who happens to be you have

343
00:15:58,279 --> 00:16:03,439
knowledge<font color="#CCCCCC"> of the encrypted mechanism you</font>

344
00:16:01,730 --> 00:16:05,359
can do encryption a couple of different

345
00:16:03,439 --> 00:16:08,660
<font color="#CCCCCC">ways you can encrypt the entire payload</font>

346
00:16:05,359 --> 00:16:11,239
you can encrypt certain fields and so

347
00:16:08,660 --> 00:16:13,459
what<font color="#E5E5E5"> are the capabilities for example to</font>

348
00:16:11,239 --> 00:16:16,759
replace<font color="#CCCCCC"> that filled with an unencrypted</font>

349
00:16:13,459 --> 00:16:23,599
that should cause something to fail if<font color="#E5E5E5"> I</font>

350
00:16:16,759 --> 00:16:27,619
<font color="#E5E5E5">synthesize a transaction or if I've got</font>

351
00:16:23,600 --> 00:16:29,839
<font color="#E5E5E5">the public key or the service provider</font>

352
00:16:27,619 --> 00:16:31,850
from some other means in many cases that

353
00:16:29,839 --> 00:16:34,759
public key is available so<font color="#CCCCCC"> if we're in</font>

354
00:16:31,850 --> 00:16:38,359
common I could get<font color="#CCCCCC"> the public he let me</font>

355
00:16:34,759 --> 00:16:41,119
substitute something else into that

356
00:16:38,359 --> 00:16:45,470
sam'l transaction and again make sure

357
00:16:41,119 --> 00:16:47,629
that<font color="#CCCCCC"> that should fail properly if I'm</font>

358
00:16:45,470 --> 00:16:50,059
doing something where I'm working<font color="#CCCCCC"> with a</font>

359
00:16:47,629 --> 00:16:53,049
service provider and I want<font color="#E5E5E5"> to strip out</font>

360
00:16:50,059 --> 00:16:55,789
the sam'l signature for example and then

361
00:16:53,049 --> 00:16:58,269
encrypt that would be one of<font color="#E5E5E5"> the kinds</font>

362
00:16:55,789 --> 00:17:01,100
<font color="#E5E5E5">of attacks that we couldn't envision it</font>

363
00:16:58,269 --> 00:17:03,019
and we have not played it all with the

364
00:17:01,100 --> 00:17:10,639
sam'l request the peace that comes from

365
00:17:03,019 --> 00:17:14,740
the service provider entire<font color="#E5E5E5"> equation the</font>

366
00:17:10,638 --> 00:17:16,938
entire connection will be<font color="#E5E5E5"> under TLS I</font>

367
00:17:14,740 --> 00:17:20,179
can't<font color="#E5E5E5"> think of anything that we're doing</font>

368
00:17:16,939 --> 00:17:21,829
so everything is done over HTTPS but

369
00:17:20,179 --> 00:17:26,019
you're also doing an encrypted Taylor

370
00:17:21,829 --> 00:17:26,019
inside of the TLS tunnel

371
00:17:26,959 --> 00:17:38,870
or you're doing united we<font color="#CCCCCC"> are and some</font>

372
00:17:37,250 --> 00:17:41,480
of code that you'll see so we<font color="#CCCCCC"> actually</font>

373
00:17:38,870 --> 00:17:44,029
do use internally<font color="#E5E5E5"> Kerberos tokens for</font>

374
00:17:41,480 --> 00:17:45,980
authentication we have a number of

375
00:17:44,029 --> 00:17:49,100
connections that will do certificate

376
00:17:45,980 --> 00:17:50,510
based authentication<font color="#CCCCCC"> pit card for those</font>

377
00:17:49,100 --> 00:17:53,600
that are used to working in the federal

378
00:17:50,510 --> 00:17:56,658
<font color="#CCCCCC">government space or RSA token or other</font>

379
00:17:53,600 --> 00:17:59,750
out-of-band authentication the problem

380
00:17:56,659 --> 00:18:03,470
is<font color="#CCCCCC"> it's difficult to make those work</font>

381
00:17:59,750 --> 00:18:05,870
inside of a<font color="#E5E5E5"> scripted test so we've been</font>

382
00:18:03,470 --> 00:18:08,360
working<font color="#E5E5E5"> primarily with things that are</font>

383
00:18:05,870 --> 00:18:10,520
using usernames and passwords today

384
00:18:08,360 --> 00:18:12,979
because<font color="#E5E5E5"> it's an easier problem and that</font>

385
00:18:10,520 --> 00:18:15,770
<font color="#E5E5E5">covers some of what we're doing</font><font color="#CCCCCC"> we do</font>

386
00:18:12,980 --> 00:18:21,679
have the Kerberos piece working you

387
00:18:15,770 --> 00:18:24,679
<font color="#CCCCCC">should you know she can restore the</font>

388
00:18:21,679 --> 00:18:27,789
final review should feel complete agenda

389
00:18:24,679 --> 00:18:31,220
actually get a number provider and the

390
00:18:27,789 --> 00:18:34,309
<font color="#CCCCCC">erection that as the one hiding for the</font>

391
00:18:31,220 --> 00:18:35,779
<font color="#CCCCCC">account</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> he had I can't accept the</font>

392
00:18:34,309 --> 00:18:37,010
fact<font color="#E5E5E5"> that all</font><font color="#CCCCCC"> of the one-time password</font>

393
00:18:35,779 --> 00:18:38,960
token generators that we use a

394
00:18:37,010 --> 00:18:42,379
hardware-based I don't have access to

395
00:18:38,960 --> 00:18:44,059
the seeds there's some advantages and

396
00:18:42,380 --> 00:18:47,570
disadvantages and working with paranoid

397
00:18:44,059 --> 00:18:49,039
environments or just because you're

398
00:18:47,570 --> 00:18:54,139
paranoid doesn't mean they aren't out to

399
00:18:49,039 --> 00:18:55,879
get you so test results we<font color="#E5E5E5"> tested all of</font>

400
00:18:54,140 --> 00:18:58,850
our sensitive internal and external

401
00:18:55,880 --> 00:19:00,860
<font color="#E5E5E5">sam'l providers we did find one</font>

402
00:18:58,850 --> 00:19:07,090
configuration error that led to unsigned

403
00:19:00,860 --> 00:19:07,090
shall then we're going to dev site right

404
00:19:07,299 --> 00:19:11,059
actually what happened in this

405
00:19:09,080 --> 00:19:14,629
particular case and I'm not<font color="#CCCCCC"> talking</font>

406
00:19:11,059 --> 00:19:17,299
<font color="#CCCCCC">about the vendor because it's still</font>

407
00:19:14,630 --> 00:19:22,429
under investigation we did an upgrade of

408
00:19:17,299 --> 00:19:24,200
that vendors cloud software or what they

409
00:19:22,429 --> 00:19:25,429
<font color="#E5E5E5">provided the update so we told them when</font>

410
00:19:24,200 --> 00:19:28,100
that could happen in that environment

411
00:19:25,429 --> 00:19:30,289
and in the process of doing that<font color="#CCCCCC"> updates</font>

412
00:19:28,100 --> 00:19:33,309
for some reason that all of the sudden

413
00:19:30,289 --> 00:19:35,679
started accepting unsigned sam'l

414
00:19:33,309 --> 00:19:37,509
shouldn't have happened and that

415
00:19:35,679 --> 00:19:39,190
actually<font color="#E5E5E5"> did lead to the</font><font color="#CCCCCC"> understanding</font>

416
00:19:37,509 --> 00:19:42,509
that this is actually something that we

417
00:19:39,190 --> 00:19:45,340
want<font color="#CCCCCC"> to include in a regression testing</font>

418
00:19:42,509 --> 00:19:47,080
environments but<font color="#E5E5E5"> I did actually have</font>

419
00:19:45,340 --> 00:19:51,100
something what was just a dev site so

420
00:19:47,080 --> 00:19:53,699
it's not a<font color="#CCCCCC"> problem I um the other thing</font>

421
00:19:51,100 --> 00:19:58,899
that was interesting out of all of<font color="#E5E5E5"> this</font>

422
00:19:53,700 --> 00:20:01,110
is as<font color="#E5E5E5"> he's appropriate when we were</font>

423
00:19:58,899 --> 00:20:03,758
working<font color="#E5E5E5"> with an external company and</font>

424
00:20:01,110 --> 00:20:05,830
attempting<font color="#CCCCCC"> the test sample we spoke</font><font color="#E5E5E5"> with</font>

425
00:20:03,759 --> 00:20:07,779
<font color="#E5E5E5">their security groups beforehand said</font>

426
00:20:05,830 --> 00:20:09,340
hey we want to be running<font color="#E5E5E5"> this test from</font>

427
00:20:07,779 --> 00:20:12,940
this IP this is what we're going to do

428
00:20:09,340 --> 00:20:15,879
great fine one of the people<font color="#E5E5E5"> that I</font>

429
00:20:12,940 --> 00:20:19,119
spoke<font color="#E5E5E5"> with said great thank you very</font>

430
00:20:15,879 --> 00:20:21,248
much I'd like you<font color="#CCCCCC"> to be very</font><font color="#E5E5E5"> noisy when</font>

431
00:20:19,119 --> 00:20:24,970
<font color="#CCCCCC">you do this because I want to see</font><font color="#E5E5E5"> if our</font>

432
00:20:21,249 --> 00:20:27,999
soccer picks it up they didn't so in

433
00:20:24,970 --> 00:20:30,460
fact none of the service providers that

434
00:20:27,999 --> 00:20:33,639
we worked with mom actually came back to

435
00:20:30,460 --> 00:20:35,409
us and said we were detecting this

436
00:20:33,639 --> 00:20:37,869
unusual activity coming from your

437
00:20:35,409 --> 00:20:42,039
network the kinds of things that we were

438
00:20:37,869 --> 00:20:44,199
doing<font color="#CCCCCC"> are more likely indications of</font>

439
00:20:42,039 --> 00:20:46,960
adversarial action they could be

440
00:20:44,200 --> 00:20:48,759
indications of Miss configuration

441
00:20:46,960 --> 00:20:51,909
particularly unsigned sam'l that could

442
00:20:48,759 --> 00:20:58,389
be a configuration error so I think this

443
00:20:51,909 --> 00:21:02,710
is<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that is worth the provider</font>

444
00:20:58,389 --> 00:21:04,570
would see on invalid sam'l coming in so

445
00:21:02,710 --> 00:21:08,249
they would see something where Sam old

446
00:21:04,570 --> 00:21:11,200
signature failed no signature presence

447
00:21:08,249 --> 00:21:15,100
the software that<font color="#E5E5E5"> we're using I see all</font>

448
00:21:11,200 --> 00:21:17,080
of that in those in our laws and it is

449
00:21:15,100 --> 00:21:19,689
something<font color="#E5E5E5"> that has caused me to ask some</font>

450
00:21:17,080 --> 00:21:22,389
questions of our stock in terms of some

451
00:21:19,690 --> 00:21:24,999
alerts that we might want to come in

452
00:21:22,389 --> 00:21:27,748
look at four things where we ourselves

453
00:21:24,999 --> 00:21:31,749
are the SP and we're looking with

454
00:21:27,749 --> 00:21:34,499
external service providers but it's one

455
00:21:31,749 --> 00:21:38,649
<font color="#E5E5E5">of those things we did cause me to go</font>

456
00:21:34,499 --> 00:21:41,259
hmm I kind of would<font color="#E5E5E5"> have expected a</font>

457
00:21:38,649 --> 00:21:42,989
little<font color="#E5E5E5"> bit more of a</font><font color="#CCCCCC"> response so there's</font>

458
00:21:41,259 --> 00:21:46,920
some things that we learned

459
00:21:42,990 --> 00:21:49,080
bomb JT<font color="#CCCCCC"> has a very bloody forehead at a</font>

460
00:21:46,920 --> 00:21:52,710
point in time trying to<font color="#E5E5E5"> get what's here</font>

461
00:21:49,080 --> 00:21:54,120
to not follow redirects so part of what

462
00:21:52,710 --> 00:21:56,490
is going<font color="#CCCCCC"> on in here</font><font color="#E5E5E5"> is there</font><font color="#CCCCCC"> is a</font>

463
00:21:54,120 --> 00:21:57,959
tremendous amount of redirects that

464
00:21:56,490 --> 00:22:01,950
happens in all of<font color="#E5E5E5"> this some of these are</font>

465
00:21:57,960 --> 00:22:05,040
HTTP 301 redirects<font color="#E5E5E5"> others of these are</font>

466
00:22:01,950 --> 00:22:08,010
<font color="#E5E5E5">redirects incurring in JavaScript or in</font>

467
00:22:05,040 --> 00:22:09,840
headers and they differ home at

468
00:22:08,010 --> 00:22:12,330
different stages and using different on

469
00:22:09,840 --> 00:22:14,159
software so we will end up falling back

470
00:22:12,330 --> 00:22:17,309
to<font color="#CCCCCC"> a</font><font color="#E5E5E5"> much more primitive method of using</font>

471
00:22:14,160 --> 00:22:19,320
rest clients in Ruby to do this and you

472
00:22:17,309 --> 00:22:22,860
have to<font color="#CCCCCC"> be careful about how you manage</font>

473
00:22:19,320 --> 00:22:24,720
the cookies because you just need to and

474
00:22:22,860 --> 00:22:27,360
that lettuce and false positives and

475
00:22:24,720 --> 00:22:29,700
false negatives the other thing that is

476
00:22:27,360 --> 00:22:32,760
<font color="#E5E5E5">interesting this would be fun</font><font color="#CCCCCC"> for an</font>

477
00:22:29,700 --> 00:22:35,370
ongoing discussion if<font color="#E5E5E5"> anybody is</font>

478
00:22:32,760 --> 00:22:38,490
<font color="#CCCCCC">interested in digging</font><font color="#E5E5E5"> into this we've</font>

479
00:22:35,370 --> 00:22:40,949
gotten some things to work but<font color="#E5E5E5"> the code</font>

480
00:22:38,490 --> 00:22:42,570
is not as well abstracted as I would

481
00:22:40,950 --> 00:22:45,210
like I would like for this to be much

482
00:22:42,570 --> 00:22:49,020
more generalizable than it is today and

483
00:22:45,210 --> 00:22:50,940
<font color="#CCCCCC">so folks who</font><font color="#E5E5E5"> have suggestions on that</font>

484
00:22:49,020 --> 00:22:53,190
would be<font color="#CCCCCC"> appreciated and you'll see some</font>

485
00:22:50,940 --> 00:22:56,340
<font color="#CCCCCC">of this as I dig into the next sections</font>

486
00:22:53,190 --> 00:22:59,100
to talk about<font color="#E5E5E5"> how did we get here I</font>

487
00:22:56,340 --> 00:23:01,439
mentioned cucumber I'm an open source on

488
00:22:59,100 --> 00:23:03,510
domain specific language you saw what it

489
00:23:01,440 --> 00:23:07,140
looks like absolutely built on top of

490
00:23:03,510 --> 00:23:10,050
Ruby if you are working<font color="#E5E5E5"> with sam'l I</font>

491
00:23:07,140 --> 00:23:13,590
strongly suggest that you get the sam'l

492
00:23:10,050 --> 00:23:17,370
tracer as a firefox plugin this lets you

493
00:23:13,590 --> 00:23:19,649
see all<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the details the eight this</font>

494
00:23:17,370 --> 00:23:23,149
animal<font color="#CCCCCC"> requests in samo response or</font>

495
00:23:19,650 --> 00:23:26,760
actually transmitted as base64 encoded

496
00:23:23,150 --> 00:23:29,160
strings in posts typically and<font color="#CCCCCC"> Samuel</font>

497
00:23:26,760 --> 00:23:31,050
tracer handles all of the basics before

498
00:23:29,160 --> 00:23:33,210
decrypt you actually get to look at

499
00:23:31,050 --> 00:23:36,450
<font color="#E5E5E5">those things you also get to see all of</font>

500
00:23:33,210 --> 00:23:38,130
<font color="#E5E5E5">the other post variables well by the way</font>

501
00:23:36,450 --> 00:23:39,929
watch because if you're doing usernames

502
00:23:38,130 --> 00:23:42,150
and passwords in your post for password

503
00:23:39,929 --> 00:23:47,010
credential elevator those will be<font color="#E5E5E5"> in the</font>

504
00:23:42,150 --> 00:23:49,500
sam'l tracer logs like i said already

505
00:23:47,010 --> 00:23:51,720
framework for testing um we had some

506
00:23:49,500 --> 00:23:54,030
in-house cool<font color="#E5E5E5"> the credential tests</font><font color="#CCCCCC"> I</font>

507
00:23:51,720 --> 00:23:55,530
will mention that a good password bolt

508
00:23:54,030 --> 00:23:58,350
would be a better answer

509
00:23:55,530 --> 00:24:02,160
some of what we've done I will also<font color="#E5E5E5"> say</font>

510
00:23:58,350 --> 00:24:04,560
that<font color="#E5E5E5"> Thomas Edison when he was asked</font>

511
00:24:02,160 --> 00:24:06,780
<font color="#CCCCCC">about what he had learned after</font><font color="#E5E5E5"> 500</font>

512
00:24:04,560 --> 00:24:08,700
successful 500 experiments trying to

513
00:24:06,780 --> 00:24:11,639
make light bulb said I now know five

514
00:24:08,700 --> 00:24:14,790
hundred ways to not make a light bulb we

515
00:24:11,640 --> 00:24:17,490
had several of that and of<font color="#CCCCCC"> course stack</font>

516
00:24:14,790 --> 00:24:23,010
overflow with some essential elements to

517
00:24:17,490 --> 00:24:25,350
getting to where we got to yeah so I

518
00:24:23,010 --> 00:24:26,910
mention here is the sample test and I

519
00:24:25,350 --> 00:24:30,060
want to walk through what this looks

520
00:24:26,910 --> 00:24:32,670
like so for example this given my

521
00:24:30,060 --> 00:24:35,790
testing default credential what this led

522
00:24:32,670 --> 00:24:38,070
us do is with a<font color="#E5E5E5"> little bit of setup JT</font>

523
00:24:35,790 --> 00:24:41,190
can be<font color="#E5E5E5"> running the test and he's running</font>

524
00:24:38,070 --> 00:24:43,169
under his credential his username I can

525
00:24:41,190 --> 00:24:47,720
run the same test and I'm running under

526
00:24:43,170 --> 00:24:50,520
my user name in a few cases we can<font color="#E5E5E5"> use</font>

527
00:24:47,720 --> 00:24:52,680
testing<font color="#CCCCCC"> accounts but in a lot of the</font>

528
00:24:50,520 --> 00:24:54,450
systems like<font color="#E5E5E5"> our internal SI p</font>

529
00:24:52,680 --> 00:24:57,450
environment where we were trying<font color="#CCCCCC"> to test</font>

530
00:24:54,450 --> 00:25:00,480
it you actually have to test some<font color="#CCCCCC"> of</font>

531
00:24:57,450 --> 00:25:02,310
these things<font color="#E5E5E5"> from a real account and we</font>

532
00:25:00,480 --> 00:25:04,080
actually<font color="#E5E5E5"> have some rules designed to</font>

533
00:25:02,310 --> 00:25:08,389
prevent problems that actually make

534
00:25:04,080 --> 00:25:11,490
creating synthetic accounts problematic

535
00:25:08,390 --> 00:25:13,500
snake<font color="#CCCCCC"> biting his own tail so that looks</font>

536
00:25:11,490 --> 00:25:16,320
something like this test cred is a ruby

537
00:25:13,500 --> 00:25:20,550
script it stores the usernames and

538
00:25:16,320 --> 00:25:23,730
passwords in a encrypted location off of

539
00:25:20,550 --> 00:25:26,370
one's home directory<font color="#CCCCCC"> that way you know</font>

540
00:25:23,730 --> 00:25:29,730
if I<font color="#CCCCCC"> named it</font><font color="#E5E5E5"> now my testing default</font>

541
00:25:26,370 --> 00:25:31,379
credential and he names it testing the

542
00:25:29,730 --> 00:25:33,900
ball this script actually works and

543
00:25:31,380 --> 00:25:36,150
pulls up his user ID or pulls up mine

544
00:25:33,900 --> 00:25:37,560
the main<font color="#E5E5E5"> reason that i started</font><font color="#CCCCCC"> this is</font>

545
00:25:36,150 --> 00:25:40,800
because i have<font color="#E5E5E5"> made the stupid mistake</font>

546
00:25:37,560 --> 00:25:43,679
more than once unfortunately putting

547
00:25:40,800 --> 00:25:49,840
like credentials into the git repository

548
00:25:43,680 --> 00:25:53,590
and then having<font color="#CCCCCC"> to fix history yeah</font>

549
00:25:49,840 --> 00:25:55,570
so you know I threw<font color="#CCCCCC"> on a cyber Ark or</font>

550
00:25:53,590 --> 00:25:57,250
something else like that<font color="#E5E5E5"> you know plug</font>

551
00:25:55,570 --> 00:25:59,649
for a vendor out there we<font color="#CCCCCC"> don't use them</font>

552
00:25:57,250 --> 00:26:01,510
but i like them would<font color="#CCCCCC"> be one way to</font>

553
00:25:59,650 --> 00:26:04,539
actually<font color="#E5E5E5"> store those testing credentials</font>

554
00:26:01,510 --> 00:26:07,690
LastPass enterprise or<font color="#E5E5E5"> some of the other</font>

555
00:26:04,539 --> 00:26:11,169
tools but this<font color="#E5E5E5"> works and good enough for</font>

556
00:26:07,690 --> 00:26:14,100
present purposes so we did have to do

557
00:26:11,169 --> 00:26:17,140
some retry stuff and we're put in the

558
00:26:14,100 --> 00:26:19,120
there's a<font color="#E5E5E5"> service provider initiated URL</font>

559
00:26:17,140 --> 00:26:22,120
to start and the transaction this might

560
00:26:19,120 --> 00:26:25,570
look like something like onl by espied

561
00:26:22,120 --> 00:26:28,418
service now but we're know about SP dot

562
00:26:25,570 --> 00:26:29,950
example.com it actually is or know<font color="#CCCCCC"> about</font>

563
00:26:28,419 --> 00:26:31,779
service now<font color="#CCCCCC"> that comp were using that</font>

564
00:26:29,950 --> 00:26:36,039
but I just<font color="#CCCCCC"> didn't want that in the</font>

565
00:26:31,779 --> 00:26:41,649
slides yeah I know<font color="#E5E5E5"> but</font><font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> text</font>

566
00:26:36,039 --> 00:26:46,330
searchable yet exactly<font color="#E5E5E5"> but they can they</font>

567
00:26:41,649 --> 00:26:49,120
understand my Tennessee accent exactly

568
00:26:46,330 --> 00:26:51,070
so when we have<font color="#E5E5E5"> this in the retrying</font>

569
00:26:49,120 --> 00:26:52,840
part of this was in place<font color="#CCCCCC"> because like I</font>

570
00:26:51,070 --> 00:26:55,270
<font color="#E5E5E5">said we actually do use kerberos</font>

571
00:26:52,840 --> 00:26:58,149
internally and some of these things are

572
00:26:55,270 --> 00:27:00,129
doing the standard Kerberos dance up hey

573
00:26:58,149 --> 00:27:02,529
got<font color="#E5E5E5"> a Kerberos token no hey you got a</font>

574
00:27:00,130 --> 00:27:04,480
kerberos token no you have to do that<font color="#E5E5E5"> a</font>

575
00:27:02,529 --> 00:27:06,399
couple of<font color="#E5E5E5"> times forces okay fine I give</font>

576
00:27:04,480 --> 00:27:08,980
up<font color="#E5E5E5"> I'll present you with the username</font>

577
00:27:06,399 --> 00:27:11,229
<font color="#CCCCCC">and password stuff and then all of the</font>

578
00:27:08,980 --> 00:27:13,360
the redirects<font color="#E5E5E5"> that one follows to get</font>

579
00:27:11,230 --> 00:27:15,909
through so we can specify a retry limit

580
00:27:13,360 --> 00:27:19,029
and we're looping through if we're

581
00:27:15,909 --> 00:27:21,820
getting<font color="#E5E5E5"> 301 redirects or work we know we</font>

582
00:27:19,029 --> 00:27:26,710
need to parse through and we do<font color="#E5E5E5"> put a</font>

583
00:27:21,820 --> 00:27:28,418
limit on that this is an area where i

584
00:27:26,710 --> 00:27:30,570
<font color="#CCCCCC">would love to</font><font color="#E5E5E5"> talk to some folks that</font>

585
00:27:28,419 --> 00:27:33,580
are better developers than i am about

586
00:27:30,570 --> 00:27:35,860
how to take this and abstract this out

587
00:27:33,580 --> 00:27:37,779
so we did have to put in some things

588
00:27:35,860 --> 00:27:40,240
that<font color="#E5E5E5"> we're fairly specific to some of</font>

589
00:27:37,779 --> 00:27:42,130
the web forms that we use for collecting

590
00:27:40,240 --> 00:27:44,350
credentials and some of the

591
00:27:42,130 --> 00:27:45,760
idiosyncrasies<font color="#CCCCCC"> i toyed around with some</font>

592
00:27:44,350 --> 00:27:47,860
of this a little bit with a<font color="#E5E5E5"> shiva with</font>

593
00:27:45,760 --> 00:27:49,960
him installation and we would<font color="#CCCCCC"> actually</font>

594
00:27:47,860 --> 00:27:53,379
have to make some fairly major changes

595
00:27:49,960 --> 00:27:56,860
code if we were using ship or using a

596
00:27:53,380 --> 00:27:58,080
DFS as the identity provider but that

597
00:27:56,860 --> 00:28:00,000
does lead

598
00:27:58,080 --> 00:28:03,269
into some of this code in the way we

599
00:28:00,000 --> 00:28:05,370
phrased it was to try to allow for being

600
00:28:03,269 --> 00:28:08,100
able<font color="#E5E5E5"> to substitute out oh okay this</font><font color="#CCCCCC"> is</font>

601
00:28:05,370 --> 00:28:11,668
<font color="#CCCCCC">an ad FS form that you have to parse</font>

602
00:28:08,100 --> 00:28:13,289
instead of a ping fed form and oh by the

603
00:28:11,669 --> 00:28:15,600
way this is<font color="#E5E5E5"> where you have to stuff the</font>

604
00:28:13,289 --> 00:28:18,750
username and password in for this kind

605
00:28:15,600 --> 00:28:19,709
of a<font color="#CCCCCC"> thing to pass it on we can see</font>

606
00:28:18,750 --> 00:28:23,340
that's where<font color="#CCCCCC"> that's getting that</font>

607
00:28:19,710 --> 00:28:27,690
<font color="#E5E5E5">username and password out of the test</font>

608
00:28:23,340 --> 00:28:28,949
grid we wanted<font color="#CCCCCC"> to put together</font><font color="#E5E5E5"> some</font>

609
00:28:27,690 --> 00:28:31,710
different ways to<font color="#CCCCCC"> say what we're</font>

610
00:28:28,950 --> 00:28:33,779
successful so these are examples<font color="#E5E5E5"> of okay</font>

611
00:28:31,710 --> 00:28:35,700
if<font color="#E5E5E5"> I go through all of this I'm going to</font>

612
00:28:33,779 --> 00:28:40,440
specify that that the resulting page

613
00:28:35,700 --> 00:28:44,669
should include some information<font color="#E5E5E5"> I should</font>

614
00:28:40,440 --> 00:28:47,279
have some specific HTTP status codes and

615
00:28:44,669 --> 00:28:50,460
that's basically collecting up that and

616
00:28:47,279 --> 00:28:55,320
what a mess to a set of expects that get

617
00:28:50,460 --> 00:28:57,539
saved so now this<font color="#CCCCCC"> is where we have fun</font>

618
00:28:55,320 --> 00:28:59,340
we've got<font color="#CCCCCC"> to follow the redirect to the</font>

619
00:28:57,539 --> 00:29:03,750
point where we get the sam'l response

620
00:28:59,340 --> 00:29:07,260
back from the IDP which actually is

621
00:29:03,750 --> 00:29:09,120
again a little bit more following<font color="#CCCCCC"> a</font>

622
00:29:07,260 --> 00:29:11,158
redirect some of which are buried inside

623
00:29:09,120 --> 00:29:14,039
of<font color="#E5E5E5"> JavaScript and some of which are 30</font>

624
00:29:11,159 --> 00:29:15,389
ones and then we<font color="#E5E5E5"> need some point okay</font>

625
00:29:14,039 --> 00:29:17,129
now we actually want<font color="#E5E5E5"> to have fun let's</font>

626
00:29:15,389 --> 00:29:18,658
strip out the same<font color="#CCCCCC"> ol signature great</font>

627
00:29:17,130 --> 00:29:20,850
we've got all the tools to do that so

628
00:29:18,659 --> 00:29:22,350
<font color="#E5E5E5">this is now actually the easy part the</font>

629
00:29:20,850 --> 00:29:24,600
hard part is<font color="#CCCCCC"> actually getting to the</font>

630
00:29:22,350 --> 00:29:28,168
place where we have a sam'l response

631
00:29:24,600 --> 00:29:30,480
that we can play<font color="#CCCCCC"> with</font><font color="#E5E5E5"> and we basically</font>

632
00:29:28,169 --> 00:29:33,330
<font color="#E5E5E5">take that sample response here's that</font>

633
00:29:30,480 --> 00:29:35,340
whole gibberish here's<font color="#E5E5E5"> the piece that we</font>

634
00:29:33,330 --> 00:29:37,860
care about this is what the<font color="#CCCCCC"> XML looks</font>

635
00:29:35,340 --> 00:29:41,370
like for a sam'l signature inside of

636
00:29:37,860 --> 00:29:44,309
that then we basically say you go<font color="#E5E5E5"> away</font>

637
00:29:41,370 --> 00:29:48,510
stripped out of<font color="#E5E5E5"> the XML nokogiri makes</font>

638
00:29:44,309 --> 00:29:50,519
that really easy to do and we then

639
00:29:48,510 --> 00:29:52,950
submit<font color="#CCCCCC"> the thermal response and the</font>

640
00:29:50,519 --> 00:29:55,380
success<font color="#E5E5E5"> criteria should fail now again</font>

641
00:29:52,950 --> 00:29:57,539
<font color="#CCCCCC">the way we do this is part of a script</font>

642
00:29:55,380 --> 00:29:59,940
that we start with a you know samo

643
00:29:57,539 --> 00:30:03,210
breaker does nothing all of the<font color="#E5E5E5"> success</font>

644
00:29:59,940 --> 00:30:06,419
criteria should pass then we walk

645
00:30:03,210 --> 00:30:08,760
through in that test script and apply

646
00:30:06,419 --> 00:30:11,130
some of<font color="#E5E5E5"> these changes selectively and</font>

647
00:30:08,760 --> 00:30:13,250
the test should then fail and then

648
00:30:11,130 --> 00:30:17,090
<font color="#E5E5E5">I have at least in some cases then</font>

649
00:30:13,250 --> 00:30:19,740
recreated the block at<font color="#CCCCCC"> the end that says</font>

650
00:30:17,090 --> 00:30:22,919
<font color="#E5E5E5">Samuel tracer does nothing and the</font>

651
00:30:19,740 --> 00:30:24,690
<font color="#E5E5E5">success criteria should all pass as well</font>

652
00:30:22,920 --> 00:30:27,240
and we<font color="#E5E5E5"> get something</font><font color="#CCCCCC"> that looks like</font>

653
00:30:24,690 --> 00:30:30,930
<font color="#CCCCCC">that it's</font><font color="#E5E5E5"> sending all of the stuff on to</font>

654
00:30:27,240 --> 00:30:32,940
the service provider and then walks

655
00:30:30,930 --> 00:30:34,830
through the tests and<font color="#E5E5E5"> make sure</font><font color="#CCCCCC"> that if</font>

656
00:30:32,940 --> 00:30:38,430
we're mucking with the sample at least

657
00:30:34,830 --> 00:30:41,490
one of<font color="#E5E5E5"> the tests should fail we do have</font>

658
00:30:38,430 --> 00:30:43,830
some ability to capture the output we've

659
00:30:41,490 --> 00:30:46,380
structured this so that we set a debug

660
00:30:43,830 --> 00:30:49,290
level we're actually capturing all of

661
00:30:46,380 --> 00:30:52,260
the HTML that<font color="#E5E5E5"> we get back in response</font>

662
00:30:49,290 --> 00:30:54,360
storing that off into a log file that's

663
00:30:52,260 --> 00:30:58,379
time stamped with that particular run

664
00:30:54,360 --> 00:31:01,889
and so forth so where we are with this

665
00:30:58,380 --> 00:31:04,320
is there's some code cleanup that we

666
00:31:01,890 --> 00:31:08,000
need<font color="#CCCCCC"> to do the intent is to put this at</font>

667
00:31:04,320 --> 00:31:10,710
on github I have not<font color="#CCCCCC"> done that yet</font>

668
00:31:08,000 --> 00:31:12,240
that's mostly a matter of what we have

669
00:31:10,710 --> 00:31:16,320
still needs a little<font color="#E5E5E5"> bit more cleanup</font>

670
00:31:12,240 --> 00:31:18,000
and I'd like<font color="#CCCCCC"> to try to make sure how do</font>

671
00:31:16,320 --> 00:31:20,610
we put up some<font color="#E5E5E5"> things</font><font color="#CCCCCC"> that describe</font>

672
00:31:18,000 --> 00:31:22,910
actually useful tests without giving

673
00:31:20,610 --> 00:31:25,560
away too much operational security

674
00:31:22,910 --> 00:31:28,350
information that turns out to be a

675
00:31:25,560 --> 00:31:29,940
little<font color="#E5E5E5"> bit more difficult but I will be</font>

676
00:31:28,350 --> 00:31:32,879
publishing some tests probably go

677
00:31:29,940 --> 00:31:35,040
against test ship dot org I have some

678
00:31:32,880 --> 00:31:39,690
permission from those people<font color="#CCCCCC"> to be able</font>

679
00:31:35,040 --> 00:31:41,700
to put<font color="#CCCCCC"> out that as a real test would</font>

680
00:31:39,690 --> 00:31:43,650
lessen<font color="#E5E5E5"> and put that out to the community</font>

681
00:31:41,700 --> 00:31:45,570
let some of the brighter Minds out there

682
00:31:43,650 --> 00:31:47,550
take a look and say oh well if you would

683
00:31:45,570 --> 00:31:50,280
just think about this this way then that

684
00:31:47,550 --> 00:31:51,930
simplifies all of your tests thank you

685
00:31:50,280 --> 00:31:53,430
things are often much more obvious to

686
00:31:51,930 --> 00:31:56,130
somebody else looking at the code than

687
00:31:53,430 --> 00:31:57,630
those of us that write it and then the

688
00:31:56,130 --> 00:32:00,780
last thing is<font color="#E5E5E5"> actually an interesting</font>

689
00:31:57,630 --> 00:32:04,140
challenge because in doing some of this

690
00:32:00,780 --> 00:32:08,760
digging there's a session hijack risk

691
00:32:04,140 --> 00:32:10,560
that intrigues me<font color="#E5E5E5"> and part of this was</font>

692
00:32:08,760 --> 00:32:12,810
demonstrated by the fact that I would do

693
00:32:10,560 --> 00:32:17,190
something<font color="#CCCCCC"> like for example get</font><font color="#E5E5E5"> onto our</font>

694
00:32:12,810 --> 00:32:20,270
corporate VPN and get on use<font color="#E5E5E5"> that to get</font>

695
00:32:17,190 --> 00:32:24,720
onto<font color="#E5E5E5"> one of the external sites that is</font>

696
00:32:20,270 --> 00:32:25,110
validating against the internal identity

697
00:32:24,720 --> 00:32:27,030
provider

698
00:32:25,110 --> 00:32:29,399
<font color="#E5E5E5">I only do that from within the VPN</font>

699
00:32:27,030 --> 00:32:33,500
environment but now once I establish

700
00:32:29,400 --> 00:32:36,510
that authentication<font color="#E5E5E5"> and I drop the VPN I</font>

701
00:32:33,500 --> 00:32:39,990
still have a valid session cookie back

702
00:32:36,510 --> 00:32:42,150
to that service provider so that said oh

703
00:32:39,990 --> 00:32:44,820
there are some interesting possibilities

704
00:32:42,150 --> 00:32:47,840
here with session hijacking what happens

705
00:32:44,820 --> 00:32:50,610
if i have an endpoint which is owned

706
00:32:47,840 --> 00:32:54,030
what is the adversary actually able to

707
00:32:50,610 --> 00:32:57,510
<font color="#E5E5E5">do in order to grab that session</font>

708
00:32:54,030 --> 00:33:01,530
credential and now take that someplace

709
00:32:57,510 --> 00:33:03,900
else and replay that session credential

710
00:33:01,530 --> 00:33:05,910
to obtain access into that cloud

711
00:33:03,900 --> 00:33:08,490
environment in a way which I am

712
00:33:05,910 --> 00:33:10,020
potentially blind to it will tell you

713
00:33:08,490 --> 00:33:14,910
that working with<font color="#CCCCCC"> a</font><font color="#E5E5E5"> variety of cloud</font>

714
00:33:10,020 --> 00:33:17,700
providers there is a wide range of one's

715
00:33:14,910 --> 00:33:20,040
ability to be able to get logged back

716
00:33:17,700 --> 00:33:23,100
from the cloud provider<font color="#E5E5E5"> about who he's</font>

717
00:33:20,040 --> 00:33:25,530
been doing what I will<font color="#E5E5E5"> call</font><font color="#CCCCCC"> out one</font>

718
00:33:23,100 --> 00:33:28,290
vendor as the exemplar of that I work

719
00:33:25,530 --> 00:33:30,149
with Dropbox on a regular basis the logs

720
00:33:28,290 --> 00:33:32,490
that we get<font color="#E5E5E5"> back from Dropbox in my</font>

721
00:33:30,150 --> 00:33:33,630
opinion set the standard for the kinds

722
00:33:32,490 --> 00:33:37,410
of things that I would<font color="#E5E5E5"> like to be able</font>

723
00:33:33,630 --> 00:33:40,860
to get back from a cloud provider we put

724
00:33:37,410 --> 00:33:45,470
a hole for about 12<font color="#E5E5E5"> months on a</font>

725
00:33:40,860 --> 00:33:48,439
deployment of migration to office 365

726
00:33:45,470 --> 00:33:51,960
because at that point in time one<font color="#CCCCCC"> of the</font>

727
00:33:48,440 --> 00:33:54,179
significant weaknesses in over 365 was

728
00:33:51,960 --> 00:33:56,790
that we could<font color="#E5E5E5"> only get logs back from</font>

729
00:33:54,179 --> 00:34:02,880
them at a higher level than we<font color="#E5E5E5"> would</font>

730
00:33:56,790 --> 00:34:05,820
like 12 hours in arrears but this then

731
00:34:02,880 --> 00:34:08,040
leads to<font color="#E5E5E5"> that question of if somebody's</font>

732
00:34:05,820 --> 00:34:10,949
doing this they can potentially<font color="#E5E5E5"> replay</font>

733
00:34:08,040 --> 00:34:12,300
that session cookie<font color="#E5E5E5"> into the cloud from</font>

734
00:34:10,949 --> 00:34:14,730
someplace else where I have<font color="#E5E5E5"> no</font>

735
00:34:12,300 --> 00:34:17,460
information and I can't get information

736
00:34:14,730 --> 00:34:21,899
back from the cloud provider<font color="#E5E5E5"> about who</font>

737
00:34:17,460 --> 00:34:24,990
is doing what I'm blind to an attack but

738
00:34:21,899 --> 00:34:26,759
I would really<font color="#E5E5E5"> rather not be so that's</font>

739
00:34:24,989 --> 00:34:29,609
the currently active area of

740
00:34:26,760 --> 00:34:34,169
investigation is how do we<font color="#E5E5E5"> take in any</font>

741
00:34:29,609 --> 00:34:36,600
more general fashion abstract out how

742
00:34:34,168 --> 00:34:38,239
these logs are managed whether the logs

743
00:34:36,600 --> 00:34:41,629
that were getting<font color="#E5E5E5"> back from the very</font>

744
00:34:38,239 --> 00:34:44,118
service providers and hook them into the

745
00:34:41,629 --> 00:34:46,850
logs that are from all identity provider

746
00:34:44,119 --> 00:34:52,210
and I should see an authentication event

747
00:34:46,850 --> 00:34:52,210
internally for every access externally

748
00:34:54,369 --> 00:35:00,650
in his service provider by service

749
00:34:57,170 --> 00:35:02,150
provider specific i know that<font color="#CCCCCC"> when we</font>

750
00:35:00,650 --> 00:35:04,220
started with service now for example

751
00:35:02,150 --> 00:35:07,400
their default was 30 minutes we've

752
00:35:04,220 --> 00:35:09,980
increased that to somewhat longer<font color="#CCCCCC"> i know</font>

753
00:35:07,400 --> 00:35:12,050
there<font color="#E5E5E5"> are some service providers that we</font>

754
00:35:09,980 --> 00:35:16,280
work with or low<font color="#E5E5E5"> confidentiality that</font>

755
00:35:12,050 --> 00:35:19,010
it's a couple of days we typically do no

756
00:35:16,280 --> 00:35:23,900
longer than a half a day for anything

757
00:35:19,010 --> 00:35:25,970
sensitive and we're reading if<font color="#E5E5E5"> we can</font>

758
00:35:23,900 --> 00:35:27,350
get the mitigating controls and seeing

759
00:35:25,970 --> 00:35:31,100
what's happening we're willing to<font color="#E5E5E5"> go to</font>

760
00:35:27,350 --> 00:35:34,569
longer timeouts if we can't then we'll

761
00:35:31,100 --> 00:35:45,259
have<font color="#E5E5E5"> to</font><font color="#CCCCCC"> go with some shorter time outs</font>

762
00:35:34,570 --> 00:35:49,780
in the panel or detailing what remote

763
00:35:45,260 --> 00:35:51,950
has the<font color="#CCCCCC"> technique down for van halen</font>

764
00:35:49,780 --> 00:35:54,290
massive questions<font color="#E5E5E5"> where the</font><font color="#CCCCCC"> saml</font>

765
00:35:51,950 --> 00:35:57,770
supports detailing the the remote host

766
00:35:54,290 --> 00:36:00,430
and where it's valid for it is not in

767
00:35:57,770 --> 00:36:03,670
the sense of the<font color="#CCCCCC"> hope of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> sam'l</font>

768
00:36:00,430 --> 00:36:11,810
specification that would be an implement

769
00:36:03,670 --> 00:36:14,740
implementation specific issue but in<font color="#E5E5E5"> the</font>

770
00:36:11,810 --> 00:36:18,020
situation that you desire to allow

771
00:36:14,740 --> 00:36:21,580
authentication in sanitation crawl out

772
00:36:18,020 --> 00:36:25,369
of<font color="#E5E5E5"> this kind of metal foundry as you</font>

773
00:36:21,580 --> 00:36:31,190
<font color="#CCCCCC">Abraham internet and then we can do</font>

774
00:36:25,369 --> 00:36:33,740
<font color="#CCCCCC">wealth that</font><font color="#E5E5E5"> gets</font><font color="#CCCCCC"> yeah we've got a few</font>

775
00:36:31,190 --> 00:36:35,720
minutes so I'm<font color="#E5E5E5"> going to dive into where</font>

776
00:36:33,740 --> 00:36:38,089
that gets complicated is that if<font color="#E5E5E5"> anybody</font>

777
00:36:35,720 --> 00:36:41,810
is using direct access on<font color="#E5E5E5"> Windows</font>

778
00:36:38,090 --> 00:36:43,490
systems direct access in<font color="#CCCCCC"> the if you set</font>

779
00:36:41,810 --> 00:36:47,810
<font color="#CCCCCC">it up the way microsoft recommends it to</font>

780
00:36:43,490 --> 00:36:50,270
<font color="#E5E5E5">split tunnel VPN so my IDP sees an</font>

781
00:36:47,810 --> 00:36:52,080
internal address the service provider

782
00:36:50,270 --> 00:36:54,600
actually sees my home address

783
00:36:52,080 --> 00:36:56,190
so that complicates that question yes<font color="#E5E5E5"> I</font>

784
00:36:54,600 --> 00:36:59,069
can set up some things<font color="#E5E5E5"> and for example</font>

785
00:36:56,190 --> 00:37:01,200
<font color="#CCCCCC">we do have some AWS instances for</font>

786
00:36:59,070 --> 00:37:04,430
example where it will only permit

787
00:37:01,200 --> 00:37:07,350
authentication<font color="#E5E5E5"> from or IP address range</font>

788
00:37:04,430 --> 00:37:09,540
period and so you can't get in there

789
00:37:07,350 --> 00:37:11,040
from just a general but that's not

790
00:37:09,540 --> 00:37:18,110
anything that's in the sandal

791
00:37:11,040 --> 00:37:18,110
specification itself other questions

792
00:37:20,630 --> 00:37:29,480
kind of we're done a little bit early go

793
00:37:26,280 --> 00:37:31,290
enjoy the hallway track go enjoy

794
00:37:29,480 --> 00:37:34,040
conversations and I'll hang around for a

795
00:37:31,290 --> 00:37:34,040
minute if they're off

