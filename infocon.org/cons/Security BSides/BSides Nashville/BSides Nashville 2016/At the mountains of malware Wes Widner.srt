1
00:00:00,000 --> 00:00:09,490
hi folks microphone on 45 minutes 56
seconds should start doing cardio sorry

2
00:00:09,490 --> 00:00:12,490
the technical

3
00:05:33,420 --> 00:05:46,590
good now so now we're pipeline we've got
a feed of malicious files coming in

4
00:05:46,590 --> 00:05:51,760
we're gonna perform a series of options
are operations on it and have some sort

5
00:05:51,760 --> 00:05:58,510
of output at the end of it and we'll get
into it that output isn't just second so

6
00:05:58,510 --> 00:06:02,520
in the notes I think in the notes on the
starkest said that I would use a little

7
00:06:02,520 --> 00:06:08,219
bit of doctor and they're so but why why
did I throw that in there was it just to

8
00:06:08,220 --> 00:06:11,740
play buzzword bingo and throw in
something else that's you know new now

9
00:06:11,740 --> 00:06:18,000
partially I'll admit that but also I
teach a class on doctor and there's

10
00:06:18,000 --> 00:06:24,630
actually a good reason for it to fit
into this particular talk pipelines and

11
00:06:24,630 --> 00:06:30,590
big data and general the big problem is
lumping us of the processing so you get

12
00:06:30,590 --> 00:06:35,320
spikes you get delays some processes
died out things just aren't really

13
00:06:35,320 --> 00:06:42,900
predictable container technology is
really old as early as 2006 when Google

14
00:06:42,900 --> 00:06:47,560
introduced there when its container
technology these are portable repeatable

15
00:06:47,560 --> 00:06:53,980
units of coats of the big advantage of
it we're going to use a lot of dr.

16
00:06:53,980 --> 00:06:59,500
examples here the advantage of doctor is
that I can wrap up pieces of my pipeline

17
00:06:59,500 --> 00:07:04,610
in a container and have it run over my
flood of information and then if they

18
00:07:04,610 --> 00:07:06,090
die I throw it away

19
00:07:06,090 --> 00:07:10,450
Apple another one up and give you an
example of that later as anybody here

20
00:07:10,450 --> 00:07:18,349
worked in Dr ya know some maybe another
really good advantage of doctors a lot

21
00:07:18,350 --> 00:07:23,260
of utilities that are already out there
prepackaged that you can just pull down

22
00:07:23,260 --> 00:07:27,849
and start using now a lot of the
failures I ran into when I set up this

23
00:07:27,850 --> 00:07:37,620
pipeline was trying to set every piece
of it up by hand so

24
00:07:38,849 --> 00:07:42,860
products on the malware pipe I mention
that threat intelligence is where all

25
00:07:42,860 --> 00:07:49,509
this was born and we started getting
into that at the global threat

26
00:07:49,509 --> 00:07:53,689
intelligence department of McAfee so
what are the products of a malware

27
00:07:53,689 --> 00:07:56,559
pipeline and why would you want to set
one up

28
00:07:56,559 --> 00:08:02,889
well the very first reason is to provide
analysts some speed data to begin their

29
00:08:02,889 --> 00:08:08,740
investigations malware is usually when
you think of malware analysis you're

30
00:08:08,740 --> 00:08:16,229
probably thinking of IDA Pro right it's
or a disassembler and a clean

31
00:08:16,229 --> 00:08:20,378
environment mature disassembling one
piece of malware at a time when you're

32
00:08:20,379 --> 00:08:25,979
coming through it looking for its mining
its valuable bits out of and those are

33
00:08:25,979 --> 00:08:29,529
great we still need that we're never
going to get away from that we need

34
00:08:29,529 --> 00:08:35,078
analyst to go through and figure out the
the real intricate details of something

35
00:08:35,078 --> 00:08:41,758
like the name escapes me now but the
really good viruses that have come out

36
00:08:43,889 --> 00:08:49,810
starts blank on that for some reason but
we're always gonna need malware now

37
00:08:49,810 --> 00:08:55,420
manuel malware analysis to pull out
secrets like that but pipelines let us

38
00:08:55,420 --> 00:08:59,630
do that in bulk and I know if you've
seen the statistics but there's hundreds

39
00:08:59,630 --> 00:09:05,269
of thousands and nearby areas that are
put out every day now we're not going to

40
00:09:05,269 --> 00:09:10,430
have we can't scale our manual analysis
to fit that so we have to do something

41
00:09:11,089 --> 00:09:17,380
automated that's where malware pipelines
come in so provide CDATA for the for the

42
00:09:17,380 --> 00:09:22,910
analysts and we also want to look at
modeling the relationship between the

43
00:09:22,910 --> 00:09:30,269
threats so one of the biggest targets
for malware analysis is to just pull out

44
00:09:30,269 --> 00:09:36,089
what servers does this malware talk to
that that is the the bread-and-butter

45
00:09:36,089 --> 00:09:40,310
malware analysis what we want to find
out are the what are called the

46
00:09:40,310 --> 00:09:45,119
command-and-control servers that's what
the that's what the malware if you're

47
00:09:45,120 --> 00:09:49,310
this talk is on a blue track but it
actually is kind of a rent to but red

48
00:09:49,310 --> 00:09:54,859
team as far as malware analysis the
cat-and-mouse game we want to find out

49
00:09:54,860 --> 00:09:58,970
what the malware writers are using for
their command-and-control servers we

50
00:09:58,970 --> 00:10:04,960
want to find out what we wanna basically
find all their secrets out they want to

51
00:10:04,960 --> 00:10:12,300
hide that so part of this is to bring
about all those relationships second

52
00:10:12,300 --> 00:10:17,510
part is to train predictive models
there's a hot trend and threat

53
00:10:17,510 --> 00:10:22,400
intelligence now thrown around machine
learning in fact this talk earlier

54
00:10:22,400 --> 00:10:25,819
versions of it included a whole nother
section on machine learning

55
00:10:25,820 --> 00:10:32,110
cut that out because I think it kind of
expanded to farm at all the talk but I'm

56
00:10:32,110 --> 00:10:36,740
our pipeline is what provides all the
data for you to do machine learning

57
00:10:36,740 --> 00:10:41,190
afterwards and then the machine learning
generates models that you used to

58
00:10:42,700 --> 00:10:49,550
to protect networks are predicted to do
whatever else Jason mentioned spam

59
00:10:49,550 --> 00:10:53,969
asking for spam early on and some random
guy keeps sending spam

60
00:10:53,970 --> 00:10:59,620
well now where is along the same lines
we need lots of malware in order to

61
00:10:59,620 --> 00:11:00,800
cluster it

62
00:11:00,800 --> 00:11:06,479
group and say these sets of by an area
that we see are all similar or these are

63
00:11:06,480 --> 00:11:14,670
well pipelines give us the data to do
that another output of pipelines to

64
00:11:14,670 --> 00:11:17,620
generate rules for automated protection
systems how many of you are familiar

65
00:11:17,620 --> 00:11:25,020
with snort or Yarra pipeline one of the
easy wins here is to generate rules

66
00:11:25,020 --> 00:11:32,689
based off of your automated analysis
less frequently though we have seen it

67
00:11:32,690 --> 00:11:38,459
is did use them our pipeline to help you
figure out how to build better malware

68
00:11:38,459 --> 00:11:40,849
now

69
00:11:40,850 --> 00:11:44,050
Christian University are not supposed to
talk about this but

70
00:11:45,490 --> 00:11:50,970
this can be used for offensive attacks
as well where you learn from what other

71
00:11:50,970 --> 00:11:55,740
people have done and you incorporate
their what they've done into your

72
00:11:55,740 --> 00:12:04,959
offensive capabilities in the future and
finally it's fine it provides lows i've

73
00:12:04,959 --> 00:12:09,010
seen some interesting things malware
authors have tried to get away with and

74
00:12:09,010 --> 00:12:12,149
there's also like I said this
cat-and-mouse game so many of you

75
00:12:12,149 --> 00:12:17,540
probably for you may have seen and some
malware analysis where there's messages

76
00:12:17,540 --> 00:12:21,260
that are passed back and forth in the
code between the malware authors and the

77
00:12:21,260 --> 00:12:26,540
people who were trying to analyze that
shows up and malware analysis and it can

78
00:12:26,540 --> 00:12:30,910
actually be kinda funny back and forth
for example there's one piece of malware

79
00:12:30,910 --> 00:12:36,130
that I had through the pipeline it
detonated and it was it complained about

80
00:12:36,130 --> 00:12:41,080
not having the right license key for a
component that the malware author had

81
00:12:41,080 --> 00:12:49,010
used in his coat so the malware actually
crashed trying to run and then finally

82
00:12:49,010 --> 00:12:56,450
last reason is proper everybody's
putting together our pipeline but you

83
00:12:56,450 --> 00:13:01,250
don't have to do it strictly for the
reason of profit malware pipelines are

84
00:13:01,250 --> 00:13:06,040
ubiquitous enough now that for your own
personal research it's worthwhile

85
00:13:06,040 --> 00:13:14,939
especially if you're looking at getting
into cells or side which brings me to

86
00:13:14,940 --> 00:13:20,990
who uses a malware pipe it would
surprise you it used to be just McAfee

87
00:13:20,990 --> 00:13:22,260
or north

88
00:13:22,260 --> 00:13:25,700
you know the usual suspects people that
are already in the information security

89
00:13:25,700 --> 00:13:33,329
gate but as time has rolled on well of
course information security and

90
00:13:33,329 --> 00:13:38,630
government had their own pipeline set up
now you'll find malware pipelines

91
00:13:38,630 --> 00:13:46,390
everywhere to find it in retail so
stores like big box stores department

92
00:13:46,390 --> 00:13:51,670
stores have their own malware pipelines
set up banks and their own our pipeline

93
00:13:51,670 --> 00:13:55,949
set up specifically to combat Jason
mentioned earlier

94
00:13:55,950 --> 00:14:02,800
CEO's opening up pts well great example
of our pipeline would be take all the

95
00:14:02,800 --> 00:14:05,979
attachments you see an email that are
coming through run them through the

96
00:14:05,980 --> 00:14:10,020
system that models all of your users
desktop see if it does bad things to

97
00:14:10,020 --> 00:14:14,670
those desktops if it does you can
immediately go back out and say this

98
00:14:14,670 --> 00:14:18,689
person sent you a bad idea for I'm just
going to strip it out of your email or

99
00:14:18,690 --> 00:14:22,880
something like that very easy when
airlines use it

100
00:14:22,880 --> 00:14:31,280
airline manufacturers use it and it's
not just people would desktops it's also

101
00:14:31,280 --> 00:14:35,829
people with physical hardware the
Internet of Things is actually created a

102
00:14:35,830 --> 00:14:40,350
good reason for people to run malware
pipelines so that they can make sure

103
00:14:40,350 --> 00:14:46,340
that their firmware updates are valid or
firmware updates they're getting from

104
00:14:46,340 --> 00:14:57,050
vendors are not going to blow up any of
their device so where does it all start

105
00:14:57,050 --> 00:15:04,069
them our pipeline sources we have to get
them our now this is surprisingly really

106
00:15:04,070 --> 00:15:09,710
easy and hard at the same time kinda
like the spam thing really easy to get

107
00:15:09,710 --> 00:15:16,270
spam and it's also hard to get good
Spain so there's two basic sources of

108
00:15:16,270 --> 00:15:23,090
malware organic and synthetic so the
organic is malware that comes from

109
00:15:23,090 --> 00:15:30,840
active malicious sites if you are a
threat intelligence company this is what

110
00:15:30,840 --> 00:15:39,810
you want actively malicious sites that
you can uses that you can use to go to

111
00:15:39,810 --> 00:15:44,430
your clients and say I found this before
everybody else this is on my list it's

112
00:15:44,430 --> 00:15:52,099
bad now the problem with organic sources
is that they expire very very quickly

113
00:15:52,100 --> 00:16:00,110
it's kinda like spam email in fact a lot
of malicious URLs one source of mister

114
00:16:00,110 --> 00:16:02,230
spanning now so

115
00:16:02,230 --> 00:16:05,900
website owners usually take down spam

116
00:16:05,900 --> 00:16:12,620
malicious links as fast as they get put
up honey pots are another source of

117
00:16:12,620 --> 00:16:21,200
organic matter where there's vendors of
URL feeds a bad now where in fact pulled

118
00:16:21,200 --> 00:16:29,230
up some examples of this for example mal
share is one site and I'll show you the

119
00:16:29,230 --> 00:16:37,680
doctor example of pulling this out later
so you're all feeds peak apps like I

120
00:16:37,680 --> 00:16:43,680
said if you're running a network sniffer
on your network admin you're running

121
00:16:43,680 --> 00:16:47,930
some sort of sniffing utilities snort
for example you can pull out all

122
00:16:47,930 --> 00:16:55,209
binaries and run that through your
pipeline if you happen to have access to

123
00:16:55,210 --> 00:17:00,110
the desktop that you're 18 or the
desktop systems behind you are behind

124
00:17:00,110 --> 00:17:07,250
your within your network you can install
a utility there to pull memory snapshot

125
00:17:07,250 --> 00:17:12,050
cell so it was no accident that actually
was one of the places that started with

126
00:17:12,050 --> 00:17:18,730
this there was others at this time but
we would also get a feed of whenever the

127
00:17:18,730 --> 00:17:22,740
client was running on the system it
would ask about certain unknown by an

128
00:17:22,740 --> 00:17:25,770
Aries and it wouldn't send them home
while back but it would just send the

129
00:17:25,770 --> 00:17:27,990
hash and say is this good or bad

130
00:17:27,990 --> 00:17:32,550
very basic well that's been expanded
upon in recent years to send back

131
00:17:32,550 --> 00:17:39,220
memories snapshots there is in fact
there's a site that specializes in just

132
00:17:39,220 --> 00:17:47,510
this how many of you are familiar with
virustotal virustotal is owned by

133
00:17:47,510 --> 00:17:54,240
Microsoft and its where the intrusion
detection

134
00:17:54,240 --> 00:17:59,800
what is it basically the AV system in
Windows built into Windows since the

135
00:17:59,800 --> 00:18:04,040
virus snapshots here and they also open
up an invite everybody else in the

136
00:18:04,040 --> 00:18:08,430
community to send bar snapshots here as
well but a lot of that will come from

137
00:18:08,430 --> 00:18:11,430
memory snapshots so memory dumps

138
00:18:12,780 --> 00:18:17,879
and then finally I put down honey
clients have heard of the term honey

139
00:18:17,880 --> 00:18:24,320
client yeah it's a very I think it's a
relatively recent are my check the

140
00:18:24,320 --> 00:18:29,939
Google Trends I but basically malware
doesn't want to be found so there's many

141
00:18:29,940 --> 00:18:36,070
sources these URLs that won't let you
download malware until you basically

142
00:18:36,070 --> 00:18:40,860
authenticate that your real user so
mouse movements screen size

143
00:18:41,560 --> 00:18:47,000
different pieces of your browser have to
identify as this is probably somebody

144
00:18:47,000 --> 00:18:53,610
who's really browsing the site versus an
anonymous caller so because of that

145
00:18:53,610 --> 00:18:57,570
there's at least two different doctor
utilities I want to point out to you

146
00:18:57,570 --> 00:19:03,610
with this one and most of these
utilities are going to come from a

147
00:19:03,610 --> 00:19:14,179
company called Red Sox are a very
accompanied by a group of so I dot dot

148
00:19:14,180 --> 00:19:18,390
dot com this is assuming that you have
an install new running and it's not that

149
00:19:18,390 --> 00:19:24,390
hard to get up and going but once you
get there from Knox has several

150
00:19:24,390 --> 00:19:28,100
different containers that you can use
two of them in particular when it comes

151
00:19:28,100 --> 00:19:35,679
to sources army out reeve down here now
Treva actually has a list of sources

152
00:19:35,680 --> 00:19:41,120
inside of it that are actively updated
by community and these are off resources

153
00:19:41,120 --> 00:19:45,969
you can just run it and it'll go and
grab all these pieces of actively

154
00:19:45,970 --> 00:19:54,500
malicious malware on live you or else
what that looks like give you an idea is

155
00:19:54,500 --> 00:20:05,140
this blow this up so that you can
actually see it go so everybody say that

156
00:20:05,140 --> 00:20:12,170
followed up a little bit more so this is
also shows some of the beauty of doctor

157
00:20:12,170 --> 00:20:18,850
this is an entirely wrapped application
all the configuration everything else is

158
00:20:18,850 --> 00:20:23,219
wrapped in this now I mentioned at the
beginning of this talk and somebody came

159
00:20:23,220 --> 00:20:24,280
in a little bit later but

160
00:20:24,280 --> 00:20:27,990
I have a and I'll put it on the screen

161
00:20:27,990 --> 00:20:32,620
afterwards I have a handout that has all
of these links and as well so don't feel

162
00:20:32,620 --> 00:20:39,159
like you just rushed to write it all
down anyway so this cleverly this will

163
00:20:39,160 --> 00:20:43,920
probably set off a lot of alarm bells
but just running this command goes and

164
00:20:43,920 --> 00:20:48,900
grabs the doctor container from
soccer.com pulls it down and starts

165
00:20:48,900 --> 00:20:53,860
running them out reeve client melt reeve
what I've done here just a little bit of

166
00:20:53,860 --> 00:21:02,360
dr. background I've said go to my home /
malwares directory and melted into the

167
00:21:02,360 --> 00:21:06,070
Dr container and what the doctor
container will do is it'll go out and

168
00:21:06,070 --> 00:21:10,510
it's going and looking through all those
sources and seeing if it can find any

169
00:21:10,510 --> 00:21:14,690
that are actively militias download
those by an Aries and put them into my

170
00:21:14,690 --> 00:21:20,480
local directory under / malware is now
ran this earlier so I already got some

171
00:21:20,480 --> 00:21:34,230
already got some data and hear about 346
samples so not that not a whole lot but

172
00:21:34,230 --> 00:21:37,630
more than I thought that I would have

173
00:21:37,630 --> 00:21:43,860
so our sound

174
00:21:43,860 --> 00:21:51,199
malware samples from today from a
malicious links so the second one that I

175
00:21:51,200 --> 00:21:54,200
wanted to show you the second

176
00:21:57,770 --> 00:22:09,410
owner is something called dog so I
mentioned honey clients earlier is is

177
00:22:09,410 --> 00:22:14,110
basically well it emulates all kinds of
different browsers and all kinds of

178
00:22:14,110 --> 00:22:19,899
different user behavior trying to elicit
malware from these organic your else so

179
00:22:19,900 --> 00:22:21,210
simple

180
00:22:21,210 --> 00:22:28,230
that's two components of our pipeline
right there is a client and a list of

181
00:22:28,230 --> 00:22:34,660
URLs to go in search so crawling is
usually the first bit so finding sources

182
00:22:34,660 --> 00:22:40,850
like I said it's simple and it's hard at
the same time especially for organic the

183
00:22:40,850 --> 00:22:43,639
next one is actually a lot even a lot
easier

184
00:22:43,640 --> 00:22:50,680
synthetic so synthetic feeds are from a
vendor there's lots of threat

185
00:22:50,680 --> 00:22:54,220
intelligence vendors out there the space
is actually pretty crowded right now

186
00:22:54,220 --> 00:23:00,390
when I was putting all these together
for norse we would actually go on

187
00:23:00,390 --> 00:23:06,840
contact a lot of these vendors and
surprisingly enough the vendors many of

188
00:23:06,840 --> 00:23:13,169
them will let you pull their feed if
you're a private research no you don't

189
00:23:13,170 --> 00:23:18,350
have to pay them anything they want the
rationale is they want you to have

190
00:23:18,350 --> 00:23:23,100
confidence in their threat intelligence
and just as a as an aside if they don't

191
00:23:23,100 --> 00:23:27,699
let you pull their feet or at least give
you a sample of it then probably a

192
00:23:27,700 --> 00:23:32,930
warning sign so synthetic malware or
synthetic feeds of malicious by an Aries

193
00:23:32,930 --> 00:23:39,280
you usually get a ton more than you do
from organic the yield from organic is

194
00:23:39,280 --> 00:23:46,450
about ten out of a thousand or so of a
thousand URLs or thousand draw things we

195
00:23:46,450 --> 00:23:51,940
had a a yield calculation I never went
over 20% of the wrong data coming in

196
00:23:51,940 --> 00:23:57,400
versus the malware that we were coming
out so synthetic you get a lot more bang

197
00:23:57,400 --> 00:23:59,830
for your buck

198
00:23:59,830 --> 00:24:04,279
some sources for synthetic malware is a
site called virus share

199
00:24:04,840 --> 00:24:08,049
there's actually a lot of synthetic
feeds but virus shares one of the best

200
00:24:08,049 --> 00:24:14,549
this is a project under Georgia Tech
just rolling up massive volumes of

201
00:24:14,549 --> 00:24:19,889
malware all you have to do is email them
until your private researcher or if

202
00:24:19,890 --> 00:24:23,679
you're working with a corporation they'd
really don't mind they just wanna know

203
00:24:23,679 --> 00:24:33,610
who's using it so you can kind of see
here the we're talking about really

204
00:24:33,610 --> 00:24:38,610
large volumes 45 gigs and these aren't
shared as you can imagine by very many

205
00:24:38,610 --> 00:24:46,510
people so it can take awhile for me
right now so yeah I had to fight the

206
00:24:46,510 --> 00:24:49,769
network guys talking about the network
stuff I defy the network guys to

207
00:24:49,769 --> 00:24:54,429
actually have a server on the edge of
the the malicious network that I was

208
00:24:54,429 --> 00:25:00,580
already on 22 do the torrenting and you
can also see that the dates go back to

209
00:25:00,580 --> 00:25:05,629
2012 and I'll tell you from having
pulled these down the virus samples

210
00:25:05,630 --> 00:25:11,940
inside of these could be even older than
that so another area that crops up and

211
00:25:11,940 --> 00:25:16,690
malware pipelines 'as malware
specifically written to run on certain

212
00:25:16,690 --> 00:25:22,299
systems malware doesn't have an
installation program so it assumes

213
00:25:22,299 --> 00:25:27,610
things about your environment and a lot
of times you'll have DLL errors that

214
00:25:27,610 --> 00:25:31,168
show up because malware is just assuming
that the DLL will be in certain places

215
00:25:31,169 --> 00:25:37,399
flowers also written specifically for
certain versions of Windows so in your

216
00:25:37,399 --> 00:25:40,739
pipeline you have to understand that
you're going to get a lot of malicious

217
00:25:40,740 --> 00:25:46,460
data that's not gonna be targeted in any
system that you have instrument out and

218
00:25:46,460 --> 00:25:50,360
you can spend a lot of time trying to
make a very broad malware system where

219
00:25:50,360 --> 00:25:54,299
you can target whatever environment
you're looking to defend such as your

220
00:25:54,299 --> 00:26:01,940
corporate network anyway but if you're
looking for archaeological data you can

221
00:26:01,940 --> 00:26:03,800
get that here but also

222
00:26:03,800 --> 00:26:09,490
somewhere around in 2016 they started
doing incremental updates a lot more

223
00:26:09,490 --> 00:26:16,440
regularly right around February where
they do multiple drops per month of

224
00:26:16,440 --> 00:26:22,810
slightly smaller files up to 10 22 gigs
something like that so they're a lot

225
00:26:22,810 --> 00:26:26,280
more digestible and if you're going to
build out a pipeline system that

226
00:26:26,280 --> 00:26:31,050
requires that relies on this I would
encourage you to start around 2016 to

227
00:26:31,050 --> 00:26:38,440
start adding those storms so this is
just a huge dump of malicious binaries

228
00:26:38,440 --> 00:26:45,980
another thing I'll point out most
malware pipelines you're dealing with

229
00:26:45,980 --> 00:26:51,690
live malicious data I don't know if you
guys saw there was a sticker outside

230
00:26:51,690 --> 00:26:56,300
that was warning may contain cyber
pathogens as a great stickers still

231
00:26:56,300 --> 00:27:00,960
cracks me up but the idea is everything
in the pipeline is actively malicious

232
00:27:00,960 --> 00:27:04,040
before you exported out to someone else

233
00:27:04,040 --> 00:27:09,139
the general community practices to
encrypt the binaries with a password

234
00:27:09,810 --> 00:27:16,790
most of the time it's a password is
infected so just a thing to know if

235
00:27:16,790 --> 00:27:20,370
you're doing a pipeline that interacts
with other people are outside interest

236
00:27:20,370 --> 00:27:23,370
so

237
00:27:25,549 --> 00:27:30,918
some other things that we get from inset
synthetic is that its enriched enriched

238
00:27:30,919 --> 00:27:35,600
meaning that generally when you consume
it from a third party a threat

239
00:27:35,600 --> 00:27:39,668
intelligence vendor they're going to
tell you additional data about the

240
00:27:39,669 --> 00:27:44,529
malicious binary such as they might tell
you where they got it from they might

241
00:27:44,529 --> 00:27:49,470
give you a hint of this is what we think
it is for classification some of them

242
00:27:49,470 --> 00:27:53,659
will include the virus total data very
first thing that most people do is throw

243
00:27:53,659 --> 00:27:56,820
these binaries up to virustotal

244
00:27:56,820 --> 00:28:02,369
virustotal or they they leave the throat
by an area to virustotal or more nice

245
00:28:02,369 --> 00:28:08,928
thing to do would be to throw the hash
up by restoring say have you seen nine

246
00:28:08,929 --> 00:28:12,269
times out of 10 they already have now
have additional data like which virus

247
00:28:12,269 --> 00:28:17,779
scanners that ran under and some other
behavior that it's saying that they've

248
00:28:17,779 --> 00:28:26,210
seen so the enriched park also helps
just a cut this out but I'm still gonna

249
00:28:26,210 --> 00:28:31,200
it'll also help you down the line if
you're adding this to a machine learning

250
00:28:31,200 --> 00:28:36,239
process you can use the enriched part of
it too kind of train your classifiers

251
00:28:36,239 --> 00:28:44,509
and then finally synthetic trees are
smooth they go a lot more that means

252
00:28:44,509 --> 00:28:47,720
there's a lot fewer things that are
going to blow up your pipeline than an

253
00:28:47,720 --> 00:28:51,730
organic seed organic reads like I said
they fight back so you have to fight

254
00:28:51,730 --> 00:28:58,690
them with honey clients things like that
with all

255
00:28:58,690 --> 00:29:05,360
data flowing in and we got to towards
the end we got to around 250,000 new

256
00:29:05,360 --> 00:29:12,580
samples coming in today but now we have
to figure out how to measure quality so

257
00:29:12,580 --> 00:29:18,980
250,000 samples sounds like a big deal
but a lot of those samples are just

258
00:29:18,980 --> 00:29:24,010
repackaged variations of the same piece
of malware and many of those are the

259
00:29:24,010 --> 00:29:28,870
same family or strain of malware that
has been seen all over the place

260
00:29:28,870 --> 00:29:34,520
generally you're gonna want to see your
gonna try to find in your pipeline what

261
00:29:34,520 --> 00:29:39,620
you're looking for is unique malware
that hasn't been seen by anyone else so

262
00:29:39,620 --> 00:29:46,820
there's several quality control measures
organic what's the percentage of what's

263
00:29:46,820 --> 00:29:52,110
the the distribution of URLs and IP
addresses are they just giving you a

264
00:29:52,110 --> 00:29:57,370
feed of all there is for example there's
one feed that we got for one person's

265
00:29:57,370 --> 00:30:03,330
WordPress site was compromised and
WordPress has this feature it hijacks

266
00:30:03,330 --> 00:30:09,090
the URL rewriting system so there was
hundreds of thousands of URLs that were

267
00:30:09,090 --> 00:30:15,649
really just one file the same exact file
so poor guy who got raided by most AV

268
00:30:15,650 --> 00:30:20,510
vendors as the most delicious thing in
the world mostly because I was 15 and he

269
00:30:20,510 --> 00:30:26,010
had a rewrite rule that redirected
everything back to that one so look at

270
00:30:26,010 --> 00:30:31,300
the the diversity of the demand the
distribution the unique number of

271
00:30:31,300 --> 00:30:36,620
binaries first thing in AM our system is
to figure out how you're going to cut

272
00:30:36,620 --> 00:30:40,649
out duplicates because they are all over
the place

273
00:30:41,610 --> 00:30:46,760
what we decided to do was based off of
that hash the shower one hash and i

274
00:30:46,760 --> 00:30:52,910
think that's more of an industry
standard now along those lines

275
00:30:53,530 --> 00:31:03,670
speaking of synthetic there is from the
virustotal as well not just the tour but

276
00:31:03,670 --> 00:31:08,140
a hash pete has feeds are still pretty
hefty but it's a lot less than

277
00:31:08,140 --> 00:31:14,340
downloading the multi gigabyte so if
you're looking for if you're doing

278
00:31:14,340 --> 00:31:18,540
research and you just want to find
ransomware you can figure out which one

279
00:31:18,540 --> 00:31:22,310
of these giant packages have rent
somewhere and actually if you're doing

280
00:31:22,310 --> 00:31:28,780
more targeted research at the very end
of all this there's some roll-ups that

281
00:31:28,780 --> 00:31:35,879
that the virus total virus share guys
together so if you're doing Android

282
00:31:35,880 --> 00:31:42,750
malware there's precious few relics of
our precious little Linux malware out

283
00:31:42,750 --> 00:31:52,940
there the only thing fewer than Linux
samples is Mac samples even less so no

284
00:31:52,940 --> 00:32:01,360
longer i think is their latest solo so
for the synthetic so that's for the

285
00:32:01,360 --> 00:32:06,209
organic seeds how you measure that
there's actually a for those of you who

286
00:32:06,210 --> 00:32:14,580
are in statistics are wanting to figure
out how to properly vet this there's

287
00:32:14,580 --> 00:32:24,230
linking the handouts to a system based
on our to go in and analyzed the quality

288
00:32:24,230 --> 00:32:29,100
and it basically uses this what's the
overlap what's the percentage difference

289
00:32:31,560 --> 00:32:37,040
give you a good idea of what you hope to
gain a lot of these threat vendors they

290
00:32:37,040 --> 00:32:41,760
overlap so what we ended up doing is we
would pull from the free sites first and

291
00:32:41,760 --> 00:32:46,090
then measure the vendors by how much
they had as a delta difference from the

292
00:32:46,090 --> 00:32:52,439
free sites so synthetic feeds what's
their volume look like is it reliable

293
00:32:52,440 --> 00:33:00,150
valid by an Aries I mentioned earlier
that a lot of these if you have an on

294
00:33:00,150 --> 00:33:03,150
host system to pull out my memory dots

295
00:33:03,830 --> 00:33:08,470
sometimes memory dumps are invalid or
corrupted so they may be sending you a

296
00:33:08,470 --> 00:33:12,909
malicious by an area which is a memory
dump but it's not execute it still

297
00:33:12,909 --> 00:33:21,760
useful for other things but it's not as
useful so from there we have our data

298
00:33:21,760 --> 00:33:27,629
coming in there a nice feed coming in we
were able to beat up these hosts and

299
00:33:27,630 --> 00:33:33,419
pulled down by an areas now we want to
take the data and refine it and this is

300
00:33:33,419 --> 00:33:39,940
where a lot of the fun comes in this is
the mining part of data mining so

301
00:33:39,940 --> 00:33:46,510
there's three parts of this that I'll
divided into three different categories

302
00:33:46,510 --> 00:33:50,789
if you're looking at a linear pipeline
the very first one of the very first

303
00:33:50,789 --> 00:33:57,730
step is a quick surface analysis for
those of you familiar with the Big O

304
00:33:57,730 --> 00:34:01,429
notation that's an order of one
operation that's a quick bite look up

305
00:34:01,429 --> 00:34:09,200
note no other dependencies so this is
this will also include hashing

306
00:34:09,199 --> 00:34:14,649
generating a shot one hash if you didn't
have it already and the testing the bite

307
00:34:14,649 --> 00:34:20,779
locations this is effectively what well
you are can include 9051 operations but

308
00:34:20,780 --> 00:34:28,220
if you do just simple by lookups very
quick win a bite lookup is the magic

309
00:34:28,219 --> 00:34:29,439
numbers

310
00:34:29,440 --> 00:34:54,190
so magic numbers so typing all these all
these binaries through file should look

311
00:34:54,190 --> 00:34:59,960
at the Magic Numbers because in a
pipeline you're gonna give a whole range

312
00:34:59,960 --> 00:35:05,650
of different types of files and they can
all be malicious from PDFs to the most

313
00:35:05,650 --> 00:35:11,510
common what you usually think of malware
is PE 32 executables that's the portable

314
00:35:11,510 --> 00:35:19,760
executable format for Windows but you'll
also find a lot of HTML anybody know

315
00:35:19,760 --> 00:35:23,859
what you'll find a lot of HTML and now
we're into our feet do it

316
00:35:24,440 --> 00:35:31,089
exploit kit so mentioned it earlier
malware comes in three phases at least

317
00:35:31,089 --> 00:35:35,690
typically three flight three phases
there's the exploit that finds a

318
00:35:35,690 --> 00:35:40,579
vulnerability in some application or
something that you're running then

319
00:35:40,579 --> 00:35:46,230
there's the dropper many of you if
you've ever seen an infestation take

320
00:35:46,230 --> 00:35:50,390
place droppers the first by an error
that comes down and its job is just to

321
00:35:50,390 --> 00:35:55,848
go out and find other pieces and
bulldozed and then the final phase is

322
00:35:55,849 --> 00:35:59,930
the persistent threat that's what ends
up staying on your system and then

323
00:35:59,930 --> 00:36:07,828
replicating itself somewhere else so
HTML is typically the exploit so many of

324
00:36:07,829 --> 00:36:15,290
you are interested in like job malicious
JavaScript HTML will be what year which

325
00:36:15,290 --> 00:36:22,560
will be most interested for the typical
reverse engineer the p32 certainly be

326
00:36:22,560 --> 00:36:26,799
interesting to you that all depends on
what your target of your our pipeline us

327
00:36:26,800 --> 00:36:33,339
and each one of those is its own special
unique category p32 which there's some

328
00:36:33,339 --> 00:36:44,670
really good books on on that some
malware analyst cookbook this deals have

329
00:36:44,670 --> 00:36:49,150
a way with well I think almost
exclusively with P thirty twos and

330
00:36:49,150 --> 00:36:58,910
impractical malware analysis those would
be 32 there's also some of these leg

331
00:36:58,910 --> 00:37:07,020
zips that could be a kind of those could
be almost anything it could be a Mac

332
00:37:07,020 --> 00:37:13,869
application it could be exempt that's
trying to get you to shut up to try to

333
00:37:13,869 --> 00:37:17,780
obfuscate itself from scanners on the
network could be a number of different

334
00:37:17,780 --> 00:37:18,980
things

335
00:37:18,980 --> 00:37:26,180
rar files that's definitely an attempt
to evade detection these empty files

336
00:37:26,180 --> 00:37:30,750
here that's probably from Mount Airy
earlier trying to get it from a host of

337
00:37:30,750 --> 00:37:41,060
the host said you're not what I'm
thinking so I think probably not gonna

338
00:37:41,060 --> 00:37:42,540
find anything else

339
00:37:42,540 --> 00:37:49,109
some of the most interesting ones that
I've found are like XML so I for a long

340
00:37:49,109 --> 00:37:55,619
time had a bug in its XML parser that
allowed it was a quick pipeline from

341
00:37:55,619 --> 00:38:01,869
outward be excused from so XML most most
likely yours is pulling out that exploit

342
00:38:01,869 --> 00:38:13,290
in areas in this they're really really
rare for all of the binaries that we

343
00:38:13,290 --> 00:38:18,920
downloaded in 2015 I had about 300 for
Mac

344
00:38:19,610 --> 00:38:27,870
and that was actually a 200% increase
over the last year so by far the most

345
00:38:27,870 --> 00:38:36,400
popular form of malware is P thirty twos
so surface analysis very quick bite

346
00:38:36,400 --> 00:38:41,580
locations mimetypes hashing there should
be no dependencies on the surface

347
00:38:41,580 --> 00:38:45,360
analysis the idea here is as you flow
through the pipeline you want to cut out

348
00:38:45,360 --> 00:38:51,950
as much fat as possible so if you're not
interested in PDFs or if you're not

349
00:38:51,950 --> 00:38:57,870
interested in he thirty twos check those
out of the beginning the next thing is

350
00:38:57,870 --> 00:39:03,509
static analysis static analysis is where
we do everything up to actually

351
00:39:03,510 --> 00:39:08,890
executing the coat static analysis I
believe is where you get the money scale

352
00:39:08,890 --> 00:39:13,670
it's not the sexiest longer get to that
in a second but it is where a lot of

353
00:39:13,670 --> 00:39:18,900
data comes from so static analysis is
greater than I ordered one operation

354
00:39:18,900 --> 00:39:25,700
that is your not just doing simple but
look ups but it's not an annex potential

355
00:39:25,700 --> 00:39:28,859
operation we're actually running the
malware and it could take an indefinite

356
00:39:28,860 --> 00:39:35,020
amount of time to come back so what we
are usually looking for here and I'll

357
00:39:35,020 --> 00:39:41,050
use p32 as an example you're looking at
the different so happy 32 file has a

358
00:39:41,050 --> 00:39:46,090
well-defined header and it there's
different ranges bites and all this

359
00:39:46,090 --> 00:39:51,480
information in it so we're looking for
checks arms whether or not the file is

360
00:39:51,480 --> 00:39:56,870
what it declares itself to be so he 32
file should have a checksum that says

361
00:39:56,870 --> 00:40:01,710
this is my contacts a very simple way to
find out to detect malware is that it's

362
00:40:01,710 --> 00:40:06,380
checks on usually doesn't match because
the malware is trying to fool the system

363
00:40:06,380 --> 00:40:10,360
into either giving it too much memory or
too little

364
00:40:10,870 --> 00:40:13,339
so that it can expect that

365
00:40:13,339 --> 00:40:20,058
entropy calculations malware tries to
encrypt itself the most of the time so

366
00:40:20,059 --> 00:40:25,619
if a file has a high degree of leverage
in entropy especially relative to other

367
00:40:25,619 --> 00:40:30,809
files that you see that's a quick
indication of its problem hours well and

368
00:40:30,809 --> 00:40:36,839
the type of entry fee will give you a
good clue as to what category pits and

369
00:40:36,839 --> 00:40:41,380
so you can kind of get these clues
together checks hourly the header for

370
00:40:41,380 --> 00:40:47,200
p32 also includes information like what
it was compiled with what year was

371
00:40:47,200 --> 00:40:51,960
compiled with what language it was
compiled under some of you may remember

372
00:40:51,960 --> 00:40:59,499
the the Sony exploit from I guess two
years ago now and there was they use

373
00:40:59,499 --> 00:41:03,390
some of the header information to say to
conclude that it probably came from

374
00:41:03,390 --> 00:41:12,839
north korea is also in the most recent
black energy malware there was a header

375
00:41:12,839 --> 00:41:17,680
information that indicated that it was
there were several different types of

376
00:41:17,680 --> 00:41:23,538
malware vendors actually sell pieces of
malware 22 themselves so right for

377
00:41:23,539 --> 00:41:30,460
example this piece of malware is to
defeat the specific antivirus for this

378
00:41:30,460 --> 00:41:36,289
firewall or something like that so the
surface an hour in the static analysis

379
00:41:36,289 --> 00:41:41,029
you can't find that information out this
actually came from so for example the

380
00:41:41,029 --> 00:41:46,579
black energy they were able to identify
that there's four different modules that

381
00:41:46,579 --> 00:41:51,289
were in it and some of the strains from
different vendors that were already well

382
00:41:51,289 --> 00:41:57,670
known so programmatic debugging is
another static analysis step

383
00:41:57,670 --> 00:42:03,769
programmatic debugging is we're actually
there's a really good book on that too

384
00:42:05,890 --> 00:42:15,080
great feeling so great

385
00:42:15,080 --> 00:42:21,799
Python if anybody's interested in static
programmatic debugging Justin in this

386
00:42:21,800 --> 00:42:25,810
book shows step-by-step through creating
a programmatic debugger in Python

387
00:42:25,810 --> 00:42:32,380
remember the name of the game from our
pipeline as automation so you'll

388
00:42:32,380 --> 00:42:35,730
probably have to settle it will benefit
you to do

389
00:42:35,730 --> 00:42:40,850
malware analysis manually in order to
understand what we're doing with the

390
00:42:40,850 --> 00:42:47,940
programmatic debugging now we're like I
said tries to hide itself as much as

391
00:42:47,940 --> 00:42:53,220
possible this is done through a process
called pac installers are Packers you

392
00:42:53,220 --> 00:42:57,169
pack a bunch of different files into one
file and then you execute that file and

393
00:42:57,170 --> 00:42:58,980
it goes through and it

394
00:42:58,980 --> 00:43:05,560
unpacked everything in it so you can
think of this is the installation

395
00:43:05,560 --> 00:43:10,540
process of malware and this is actually
where a lot of malware starts fighting

396
00:43:10,540 --> 00:43:17,259
back even at the static analysis step
where another hot filled in and malware

397
00:43:17,260 --> 00:43:23,040
analysis is vendors that provide
unpacking for a range of different

398
00:43:23,040 --> 00:43:29,470
vendors that malware used so if it was
just a simple as unzipping the malware

399
00:43:29,470 --> 00:43:35,609
anybody could open the malware authors
tend to prefer things like encrypted

400
00:43:35,610 --> 00:43:40,830
Packers systems that load themselves
into memory and then perform a

401
00:43:40,830 --> 00:43:44,870
cryptographic functions to pull the
files out so that we can't just do a

402
00:43:44,870 --> 00:43:47,290
static analysis and say here's all the
files are in

403
00:43:47,290 --> 00:43:55,040
well there's actually several vendors
that do I specialize in unpacking and

404
00:43:55,040 --> 00:43:57,990
give you an idea

405
00:43:57,990 --> 00:44:04,839
rehearsing labs commercial vendor that
we used to Norse

406
00:44:04,839 --> 00:44:10,469
they they provided a pretty good range
of on Packers now this is an open source

407
00:44:10,469 --> 00:44:17,239
are actually several there are some open
source utilities from Packers were gonna

408
00:44:17,239 --> 00:44:22,960
do that in just a second so their static
analysis would be features would be

409
00:44:22,960 --> 00:44:27,489
heuristic evaluation through our rules
using other vendors most of threat

410
00:44:27,489 --> 00:44:30,979
intelligence actually provides a feed of
your roles as well

411
00:44:31,509 --> 00:44:45,160
many of them do so some other more
exotic things while not exotic opcodes

412
00:44:45,160 --> 00:44:51,828
for executable files how many of you are
familiar with the assembly any of that

413
00:44:51,829 --> 00:44:57,130
stuff so opcodes are we pull out the
operation instructions from the malware

414
00:44:57,130 --> 00:45:04,680
this is actually almost the specific
opcodes our platform specific but the

415
00:45:04,680 --> 00:45:08,828
idea of just pulling out opcodes and in
general as features is pretty

416
00:45:08,829 --> 00:45:14,499
platform-independent so you can do the
same technique on macho binaries for Mac

417
00:45:14,499 --> 00:45:21,029
or elf binaries for Windows or PE
binaries so I should have actually moved

418
00:45:21,029 --> 00:45:26,219
up the more exotic ones are generated
abstract syntax tree which is what you

419
00:45:26,219 --> 00:45:32,779
generate off of the opcodes how many of
you have ever used IDA Pro IDA Pro is a

420
00:45:32,779 --> 00:45:40,569
really good professional disassemble a
utility what it does for you is the very

421
00:45:40,569 --> 00:45:45,190
basic of it you open a PDF file and it
will try to group all these opcodes

422
00:45:45,190 --> 00:45:50,680
together and try to show you with a nice
graph where the execution flow goes

423
00:45:50,680 --> 00:45:56,049
generating an abstract syntax tree
programmatically is actually pretty hard

424
00:45:56,049 --> 00:46:02,630
but it's really useful now I did there
is if I've got two files and they have a

425
00:46:02,630 --> 00:46:08,910
similar execution flow then I can kind
of group those together it also gives me

426
00:46:08,910 --> 00:46:11,910
an idea of how file goes about

427
00:46:12,539 --> 00:46:19,939
mutating things on the host operating
system changing registry keys or the hot

428
00:46:19,939 --> 00:46:20,808
one now

429
00:46:20,809 --> 00:46:29,039
ransomware so the opcode graph for first
beginning to encrypt all the data on the

430
00:46:29,039 --> 00:46:35,549
hard drive last one to find some of the
most fun is actually patching the

431
00:46:35,549 --> 00:46:38,549
execution flow for malware most malware

432
00:46:39,869 --> 00:46:44,390
most malware today will try to detect if
you are running it in a sandbox

433
00:46:44,390 --> 00:46:49,769
environment and short circuit itself and
not run anymore so patching the malware

434
00:46:49,769 --> 00:46:52,709
there's actually some good papers on
that again

435
00:46:52,709 --> 00:46:58,459
links on the other hand out of taking
the opcodes and it's generally is

436
00:46:58,459 --> 00:47:03,569
basically just a genetic algorithm to
see if it changes the bites at the fuzz

437
00:47:03,569 --> 00:47:06,929
it and fuzzy is where you are

438
00:47:06,929 --> 00:47:12,369
get into that second but basically we're
changing the bites to see how far in the

439
00:47:12,369 --> 00:47:16,719
execution code we can get in the mouth
we want to execute as much of it as

440
00:47:16,719 --> 00:47:21,869
possible so using a combination of
programmatic debugging and generating an

441
00:47:21,869 --> 00:47:26,269
abstract syntax tree and and this whole
part right here is actually where entire

442
00:47:26,269 --> 00:47:31,508
companies have been built but patching
the malware so that it will run dicks

443
00:47:31,509 --> 00:47:37,119
run to completion so that it won't a
good way to defeat some most malware

444
00:47:37,119 --> 00:47:44,209
pipelines is to execute pause and wait
for 30 minutes or so and then begin your

445
00:47:44,209 --> 00:47:50,019
execution and the reason for that is as
a malware pipeline engineer I want to

446
00:47:50,019 --> 00:47:55,868
put as much power through my pipeline as
possible as I'm our offer I want to be

447
00:47:55,869 --> 00:48:00,749
detected by as few people as possible so
I'm gonna do everything I can to throw a

448
00:48:00,749 --> 00:48:06,538
wrench into those plans so static
analysis a good static analysis tool

449
00:48:07,840 --> 00:48:18,740
get back to my notes again using his
library there's actually two that I got

450
00:48:18,740 --> 00:48:29,620
to run real quick so RAIDar to rate
there is a static analysis framework so

451
00:48:29,620 --> 00:48:43,690
if I take and this is running radar and
I'm attaching it again if I'm attaching

452
00:48:43,690 --> 00:48:47,940
it to the same director that i download
all those samples into and I'm running a

453
00:48:47,940 --> 00:48:53,760
bash command this is inside of the raid
air container for a fully automated

454
00:48:53,760 --> 00:48:58,060
pipeline I wouldn't just of course I
wouldn't stop at a bash prompt but I

455
00:48:58,060 --> 00:49:03,380
wanted to show you the steps that are
involved so here's all the the files

456
00:49:03,380 --> 00:49:06,380
that I just downloaded

457
00:49:18,750 --> 00:49:43,980
going out just some of the P thirty twos
to run this analysis over there to

458
00:49:43,980 --> 00:49:49,690
around the surly and i forgot the syntax

459
00:49:50,530 --> 00:50:01,830
there we go right here to this is a
programmatic debugging client I'm not

460
00:50:01,830 --> 00:50:07,880
sure what it's really I think it might
be something that's related to what was

461
00:50:07,880 --> 00:50:11,100
mentioned in the book that I just
pointed out earlier but basically we're

462
00:50:11,100 --> 00:50:17,750
taking the file and we're doing some
real simple static analysis in this part

463
00:50:17,750 --> 00:50:21,920
this one actually get a lot more
elaborate radar has support for a bunch

464
00:50:21,920 --> 00:50:27,660
of other like macros and it's basically
the Metasploit of malware so in this

465
00:50:27,660 --> 00:50:32,500
example we're just we're running it over
a surface analysis looking at the type

466
00:50:32,500 --> 00:50:37,900
median values machine architecture what
it's some of the features that I was

467
00:50:37,900 --> 00:50:43,200
pointing out earlier and radar actually
adds in some plugins there's a whole

468
00:50:43,200 --> 00:50:53,359
host of plugins to use these two in
particular the Canary Is is it trying to

469
00:50:53,360 --> 00:51:01,410
detect that it's being run in a sandbox
which if that's true it's just means

470
00:51:01,410 --> 00:51:04,529
that you probably have to go through a
bunch of other steps to get it to give

471
00:51:04,530 --> 00:51:13,330
you at Secrets whether choosing crypto
and I forget what the next leg is so all

472
00:51:13,330 --> 00:51:18,440
of this is really good day to throw into
to throw back into your pipeline this is

473
00:51:18,440 --> 00:51:22,440
the enriched data that we're at some of
the enriched data were actually looking

474
00:51:22,440 --> 00:51:32,430
getting a lot more so another utility
that we could use his peace gather now

475
00:51:32,430 --> 00:51:37,440
static analysis utilities there's a ton
of them out there

476
00:51:38,340 --> 00:51:53,570
R and each one has its own suite of
utilities to use on a piece of malware

477
00:51:53,570 --> 00:51:59,940
if you've never taken so this piece
cannot trust the information it pulls

478
00:51:59,940 --> 00:52:03,410
out his

479
00:52:03,410 --> 00:52:08,910
can probably get this more interesting
as a Jason file that would be what I

480
00:52:08,910 --> 00:52:13,330
would look for a high point engineer but
this is more readable so the metadata

481
00:52:13,330 --> 00:52:16,740
that we saw with radar

482
00:52:16,740 --> 00:52:22,180
interesting instruction offsets that
would be useful for putting together a

483
00:52:22,180 --> 00:52:29,970
culture e call graph version information
so like I said some of the PE file

484
00:52:29,970 --> 00:52:35,640
header details show you where it's been
what it's been compiled on so this would

485
00:52:35,640 --> 00:52:39,450
be well there's product information for
the file itself and then there's some

486
00:52:39,450 --> 00:52:46,759
yeah this is for the files section
information and this suspicious is

487
00:52:46,760 --> 00:52:56,390
generated by a a pattern matching system
inside apiece scanner itself some of the

488
00:52:56,390 --> 00:53:00,470
things that make a final suspicious is
that it will only import one or two DL's

489
00:53:00,470 --> 00:53:04,430
most commercial software will import all
that they're not trying to hide it

490
00:53:04,940 --> 00:53:09,040
malware will import one or two deal else
is a very bare minimum and then it'll

491
00:53:09,040 --> 00:53:14,910
make assumptions about where it can load
all the other deals dynamic so good

492
00:53:14,910 --> 00:53:23,620
programmatic debugger will speak that
activity up resources you know it's it's

493
00:53:23,620 --> 00:53:28,240
pretty common now from malware to try to
attach itself to really large binaries

494
00:53:28,240 --> 00:53:37,379
to throw this off so for example steam
you have a good four gig game file

495
00:53:37,380 --> 00:53:41,130
you attach a small binary to the end of
it and then the entire thing its mark

496
00:53:41,130 --> 00:53:44,460
this malicious by the rest of our
community but it's really just as one

497
00:53:44,460 --> 00:53:49,360
file that added into the back so
resources will help you cut through that

498
00:53:49,360 --> 00:53:55,090
chafetz if it's an icon of a brain
murdered there could be some exploits on

499
00:53:55,090 --> 00:53:58,390
the icon handling stuff so there were in
windows for a while

500
00:53:59,470 --> 00:54:06,919
typically not that much some of these
others are interesting for reverse

501
00:54:06,920 --> 00:54:11,000
engineers creating more pipeline
components like dialogue if there's five

502
00:54:11,000 --> 00:54:15,010
dialogues in the spot and there's
potentially five different screens i'm

503
00:54:15,010 --> 00:54:20,720
gonna have to try to programmatically
interact imports like I said malware

504
00:54:20,720 --> 00:54:29,089
tries to import as little as possible
and then you have the actual library

505
00:54:29,090 --> 00:54:34,630
calls that were noticed in the file now
these are all large amounts of data and

506
00:54:34,630 --> 00:54:38,260
what she would do in a pipeline as you
would throw all of this into a large

507
00:54:38,260 --> 00:54:42,580
dataset like elasticsearch he would have
the hash and you were decorated with all

508
00:54:42,580 --> 00:54:48,009
this information that you seen and then
you would have a process to run over

509
00:54:48,010 --> 00:54:56,240
elasticsearch or whatever that source of
truth is and generate generate more

510
00:54:56,240 --> 00:55:00,810
intelligence based on on this raw data
that you found features so the last

511
00:55:00,810 --> 00:55:06,930
feature generation method in arguably
the sexiest is dynamic execution the

512
00:55:06,930 --> 00:55:13,930
most popular dynamic execution and I
apologize I didn't have my just p.m. set

513
00:55:13,930 --> 00:55:20,029
up so I just described to you sort of
showing it but the the most popular

514
00:55:20,030 --> 00:55:29,200
malware dynamic malware execution system
is called coo coo coo coo and I love the

515
00:55:29,200 --> 00:55:33,629
fact that somebody went and wrap it all
up into a nice doctor container because

516
00:55:33,630 --> 00:55:36,820
setting cuco up by itself was a pain in
the butt

517
00:55:37,730 --> 00:55:41,310
it really was I wasted a whole month
just on this

518
00:55:42,020 --> 00:55:49,850
guys are less experienced so setting out
cuckoo is a pain what it is the reason

519
00:55:49,850 --> 00:55:56,480
why the pain is we have what we're doing
with dynamic analysis we're taking a

520
00:55:56,480 --> 00:56:01,760
malicious binary were injecting it into
a clean virtual machine or hardware

521
00:56:01,760 --> 00:56:05,390
we'll get to that in a second year
injecting that malicious binary into an

522
00:56:05,390 --> 00:56:10,540
execution environment and then you're
observing what it does just let it run

523
00:56:10,540 --> 00:56:16,190
free and then you're looking the same
doesn't call out any host does it try to

524
00:56:16,190 --> 00:56:21,460
mutate the system you know doesn't try
to change registry keys or drop file

525
00:56:21,460 --> 00:56:25,920
additional files if it's a dropper does
it you know what other malicious files

526
00:56:25,920 --> 00:56:29,170
doesn't pull in all the stuff it's
really fun to watch

527
00:56:29,170 --> 00:56:35,820
it's like I said it's a pain to set up
the speed of processing is pretty

528
00:56:35,820 --> 00:56:43,080
variable but it's not gonna be anywhere
close to static analysis that said it is

529
00:56:43,080 --> 00:56:49,060
one of the hottest things and it does
because of the way that virus authors

530
00:56:49,060 --> 00:56:54,640
can encrypt their files encrypt their
execution pipelines will probably never

531
00:56:54,640 --> 00:56:58,660
going to get away from having to use
dynamic analysis on our that McAfee

532
00:56:58,660 --> 00:57:03,020
there was talk about setting up a huge
clusters of machines that were just

533
00:57:03,020 --> 00:57:13,620
Windows clients and doing the same thing
that could actually there's different

534
00:57:13,620 --> 00:57:18,880
types of dynamic analysis environments
virtual so typical use case for cuckoo

535
00:57:18,880 --> 00:57:24,710
would be to have a Windows just
operating system that's that you've set

536
00:57:24,710 --> 00:57:29,550
up in VMware that's what we ended up
doing while I was in VirtualBox you

537
00:57:29,550 --> 00:57:35,140
could use in VMware VirtualBox there's
reasons to prefer one over the other and

538
00:57:35,140 --> 00:57:39,299
you have a snapshot of a clean state in
the way the cookie will work as it will

539
00:57:39,300 --> 00:57:43,210
reset to the clean state inject the
malware run it

540
00:57:43,210 --> 00:57:45,290
observe all the network connections

541
00:57:45,290 --> 00:57:49,320
and then shut it now and then the next
sample comes through resets to the

542
00:57:49,320 --> 00:57:55,830
Queen's take the and that sounds really
nice and simple but in practice now

543
00:57:55,830 --> 00:58:00,370
where does all kinds of bad things to
guest operating system so what you end

544
00:58:00,370 --> 00:58:07,029
up having to do is having snapshots of
your snapshots and supple all that

545
00:58:07,030 --> 00:58:13,220
around another way to use the sandbox or
to dynamically execute files is through

546
00:58:13,220 --> 00:58:16,220
physical actually having a physical
device

547
00:58:17,060 --> 00:58:22,930
last year we ran into a case where a
client had a malicious binary that

548
00:58:22,930 --> 00:58:29,899
inserted itself into the GPU most
virtual machines aren't gonna have a GPU

549
00:58:29,900 --> 00:58:35,940
available so we had to actually stand up
a physical box and two snapshot of

550
00:58:35,940 --> 00:58:40,230
physical box you something like deep
freeze or some other freezing

551
00:58:40,230 --> 00:58:47,150
application the ideas you wanna send it
back to a clean clean space is also

552
00:58:47,150 --> 00:58:51,230
where I get pretty excited about dr. it
doesn't exist right now but it's on

553
00:58:51,230 --> 00:58:56,770
their road map they're looking to
support arm execution if they support

554
00:58:56,770 --> 00:59:01,759
arm execution and dr. containers then
that means that we can do dynamic

555
00:59:01,760 --> 00:59:06,300
analysis for the Internet of Things
which is gonna be like raspberry PI's

556
00:59:06,300 --> 00:59:14,460
those types of devices in dark another
dynamic analysis environment is to use

557
00:59:14,460 --> 00:59:20,080
so hypervisors just something that runs
another system underneath hypervisor

558
00:59:20,080 --> 00:59:27,170
examples would be like one does anybody
remember why ya so 01 and this isn't

559
00:59:27,170 --> 00:59:32,770
doctor eyes jet I say yet I actually had
it before

560
00:59:33,270 --> 00:59:39,020
01 is an alternative to coo coo coo coo
is arguably more advanced 2012 still out

561
00:59:39,020 --> 00:59:45,080
there and the idea is to use while it
uses cute QEMU under the hood but the

562
00:59:45,080 --> 00:59:51,810
idea is to wrap the entire dynamic
analysis and 211 system

563
00:59:51,810 --> 00:59:58,220
whereas with you have the cuckoo system
and then the it has to be told about the

564
00:59:58,220 --> 01:00:08,959
guest virtual machines that can use and
abuse another example is one more one

565
01:00:08,960 --> 01:00:17,510
would be kind of in the middle and hot
field here is writing your own

566
01:00:17,510 --> 01:00:22,600
hypervisors some our knows when it's
being run on VMware or VirtualBox

567
01:00:22,600 --> 01:00:30,250
there's a system called red pill that's
used as the benchmark or not red pill P

568
01:00:30,250 --> 01:00:37,420
a fish and again in the handouts but the
gold standard for whether or not you're

569
01:00:37,420 --> 01:00:43,650
running a good dynamic analysis system
is this executable call P a fish P a

570
01:00:43,650 --> 01:00:48,130
fish's am i running in a virtualized
environment not all malware shuts itself

571
01:00:48,130 --> 01:00:52,870
down now it's running in a virtualized
environment because of the rise of

572
01:00:52,870 --> 01:01:00,000
things like as your and people using
just cloud based systems is still valid

573
01:01:00,000 --> 01:01:04,700
to infect those so it's not just
automated malware pipelines that are

574
01:01:04,700 --> 01:01:12,299
looking for the stuff but if your system
fails miserably AP a fish and there was

575
01:01:12,300 --> 01:01:18,620
there's a really good b-sides Dec talk
from last year at the end of last year

576
01:01:18,620 --> 01:01:23,730
about some researchers that created a
non malicious binary and submitted it to

577
01:01:23,730 --> 01:01:29,900
virustotal it wasn't malicious but it
had malicious type activity and that got

578
01:01:29,900 --> 01:01:33,620
flagged by all of our vendors and one of
the things I found out about it is a lot

579
01:01:33,620 --> 01:01:39,859
of these malware pipeline systems look
very similar to each other so it be

580
01:01:39,860 --> 01:01:46,130
trivially easy from our authors to know
if they're being run by hunters that's

581
01:01:46,130 --> 01:01:54,770
just that's more of an industry so
environments matter like I said now

582
01:01:54,770 --> 01:01:58,620
we're looking for specific type of
environment so for dynamic analysis

583
01:01:59,220 --> 01:02:03,379
you're probably gonna have to mark out
all of the target environments that your

584
01:02:03,380 --> 01:02:15,609
interest in Windows 7 XP 10 its way onto
people systems the problem though with

585
01:02:15,609 --> 01:02:19,119
dynamic analysis that you're gonna run
into any pipeline this is the bottleneck

586
01:02:19,119 --> 01:02:25,430
for every pipeline it is X potential it
is every bad thing about computation

587
01:02:25,430 --> 01:02:32,440
that you can imagine because any dynamic
any malware has any number of operations

588
01:02:32,440 --> 01:02:36,330
that are performed so what ends up
happening is foremost pipelines they'll

589
01:02:36,330 --> 01:02:41,450
restrict the execution time 25 minutes
like I said earlier easy way to defeat

590
01:02:41,450 --> 01:02:48,189
that is just wait it out so some vendors
for their dynamic analysis have started

591
01:02:48,190 --> 01:02:53,849
doing things like time working so we
start the analysis and in the system

592
01:02:53,849 --> 01:02:58,410
clock we start you know jumping forward
by leaps and bounds time so the body

593
01:02:58,410 --> 01:03:03,089
into the execution far as the malware
knows it's twenty years in the future

594
01:03:03,890 --> 01:03:10,440
something like that that kind of defeats
the largest wait him out but now another

595
01:03:10,440 --> 01:03:16,450
common a simple tactic is just the
malware we'll ask you to install it

596
01:03:16,450 --> 01:03:22,140
human interaction remember as a malware
alter I wanna know that I'm hitting a

597
01:03:22,140 --> 01:03:27,140
valuable system so there is actually a
lot of malware that will stop and

598
01:03:27,140 --> 01:03:30,618
refused to do anything until you've
interacted with it so if you're talking

599
01:03:30,619 --> 01:03:33,230
to your friends and family

600
01:03:33,230 --> 01:03:38,510
one thing that I told my parents live is
your not infected just because the

601
01:03:38,510 --> 01:03:42,890
malware asked you to do not necessarily
so

602
01:03:42,890 --> 01:03:51,180
environment matters so there's also
another hot area on this company called

603
01:03:51,180 --> 01:03:57,299
p.m. raised pretty good about this and
their system is not open source either

604
01:03:57,300 --> 01:03:58,000
but

605
01:03:58,000 --> 01:04:04,240
they actually have an entire scripted
framework if you see if you see this

606
01:04:04,240 --> 01:04:09,759
execute your PC this dialog click this
button so I'm being told that I'm

607
01:04:09,760 --> 01:04:14,500
running out of time are all the way at a
time of all the way out at 11 minute I'm

608
01:04:14,500 --> 01:04:20,820
sorry I wanted to alright I'll stop and
let anybody ask questions for a little

609
01:04:20,820 --> 01:04:24,250
bit yeah sorry about that

610
01:04:24,250 --> 01:04:29,390
here's the hand though the alley link at
the bottom here and if you I'll tweet

611
01:04:29,390 --> 01:04:34,440
out that that linked to at the end of
the year so anybody who's watching the

612
01:04:34,440 --> 01:04:40,670
b-sides Nashville Twitter feed I'll send
that out as well and I'm sorry I didn't

613
01:04:40,670 --> 01:04:45,360
get to get to the rest of the the slides
basically the end of it is just using it

614
01:04:45,360 --> 01:04:48,810
in a machine learning context

615
01:04:48,810 --> 01:05:16,770
out so any other questions or quick
while avoiding an entirely would be

616
01:05:16,770 --> 01:05:21,620
avoiding getting into getting into the
sources part of the pipeline so yeah

617
01:05:21,620 --> 01:05:26,819
they try to avoid that they won't let
you download from organic sources unless

618
01:05:26,820 --> 01:05:29,820
you verify that who you are

619
01:05:30,420 --> 01:06:10,190
well and then your job there's take the
static analysis and pull the p32 out of

620
01:06:10,190 --> 01:06:11,730
the job

621
01:06:11,730 --> 01:06:24,319
yeah yeah that would be the day that
would be the dynamic classes so thank

622
01:06:24,319 --> 01:06:27,829
you guys for attending and if you have
any questions or anything feel free to

623
01:06:27,829 --> 01:06:30,690
email me and thanks guys great

