1
00:00:07,970 --> 00:00:15,469
communication resources and faster and

2
00:00:10,889 --> 00:00:18,890
more reliable that go high-performance

3
00:00:15,470 --> 00:00:18,890
communication any quicker

4
00:00:27,000 --> 00:00:29,060
you

5
00:03:51,130 --> 00:03:55,359
self deeper in the in the environment<font color="#E5E5E5"> or</font>

6
00:03:53,470 --> 00:03:59,020
<font color="#E5E5E5">maybe even dump the registry to do</font>

7
00:03:55,360 --> 00:04:02,070
things like credential theft things like

8
00:03:59,020 --> 00:04:02,070
mount to remote dry

9
00:04:07,580 --> 00:04:09,640
you

10
00:04:29,569 --> 00:04:34,159
download a script and run it we can

11
00:04:31,849 --> 00:04:36,770
access the volume shadow copies to even

12
00:04:34,159 --> 00:04:38,990
copy out things like locked files we can

13
00:04:36,770 --> 00:04:40,729
execute malware anywhere we want really

14
00:04:38,990 --> 00:04:42,559
<font color="#E5E5E5">in the bye week we can execute malware</font>

15
00:04:40,729 --> 00:04:45,529
only in memory malware that doesn't

16
00:04:42,559 --> 00:04:47,449
touch disk now<font color="#CCCCCC"> gets very very</font><font color="#E5E5E5"> scary fast</font>

17
00:04:45,529 --> 00:04:49,490
when we move the kind<font color="#E5E5E5"> of in this this</font>

18
00:04:47,449 --> 00:04:53,629
new modern world of PowerShell that

19
00:04:49,490 --> 00:04:55,819
we're sitting and so if you<font color="#E5E5E5"> if you take</font>

20
00:04:53,629 --> 00:04:59,270
anything away from this presentation

21
00:04:55,819 --> 00:05:01,699
it's that we are in the now<font color="#CCCCCC"> powershell</font>

22
00:04:59,270 --> 00:05:03,709
world and this is a very<font color="#E5E5E5"> very scary</font>

23
00:05:01,699 --> 00:05:06,289
world from from a defender standpoint

24
00:05:03,709 --> 00:05:09,589
you know my focus<font color="#CCCCCC"> is</font><font color="#E5E5E5"> very largely blue</font>

25
00:05:06,289 --> 00:05:12,409
team and when<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think about this idea of</font>

26
00:05:09,589 --> 00:05:15,080
what Microsoft has unleashed upon our

27
00:05:12,409 --> 00:05:16,819
enterprises it keeps<font color="#E5E5E5"> me up at night is</font>

28
00:05:15,080 --> 00:05:19,490
<font color="#CCCCCC">that</font><font color="#E5E5E5"> I think the number one threat that</font>

29
00:05:16,819 --> 00:05:21,849
I see us having to deal with<font color="#E5E5E5"> in the next</font>

30
00:05:19,490 --> 00:05:24,909
four to five years they baked in a

31
00:05:21,849 --> 00:05:28,610
incredibly powerful nearly all powerful

32
00:05:24,909 --> 00:05:31,669
capability into the enterprise with very

33
00:05:28,610 --> 00:05:33,649
little capabilities to audit restrict it

34
00:05:31,669 --> 00:05:36,080
in fact there's really almost no way to

35
00:05:33,649 --> 00:05:37,819
stop it<font color="#E5E5E5"> you can't you can even get rid</font>

36
00:05:36,080 --> 00:05:39,680
of the<font color="#CCCCCC"> powershell binaries and all</font>

37
00:05:37,819 --> 00:05:41,719
someone has to do is come down and drop

38
00:05:39,680 --> 00:05:43,939
their own copy on even if you somehow

39
00:05:41,719 --> 00:05:45,800
restrict that through something like I

40
00:05:43,939 --> 00:05:47,629
don't<font color="#CCCCCC"> know application whitelisting or</font>

41
00:05:45,800 --> 00:05:49,699
soft restriction policies we've got

42
00:05:47,629 --> 00:05:51,619
<font color="#E5E5E5">things like PowerShell Empire which will</font>

43
00:05:49,699 --> 00:05:53,959
allow you to<font color="#E5E5E5"> just load up the actual</font>

44
00:05:51,619 --> 00:05:56,149
dotnet assemblies in memory and just run

45
00:05:53,959 --> 00:05:58,059
PowerShell commands that way I don't

46
00:05:56,149 --> 00:06:00,919
know if anyone made it to<font color="#CCCCCC"> Kerry's talk</font>

47
00:05:58,059 --> 00:06:03,050
earlier this morning on her pen testing

48
00:06:00,919 --> 00:06:05,539
piece she mentioned PowerShell Empire

49
00:06:03,050 --> 00:06:07,550
she mentioned power split which is the

50
00:06:05,539 --> 00:06:09,680
probably that if you really don't<font color="#E5E5E5"> have</font>

51
00:06:07,550 --> 00:06:11,990
any background on this take<font color="#CCCCCC"> 10 minutes</font>

52
00:06:09,680 --> 00:06:13,719
write it down right now go look at the

53
00:06:11,990 --> 00:06:16,550
power show the power supply tour the

54
00:06:13,719 --> 00:06:19,069
PowerShell Empire project and if that

55
00:06:16,550 --> 00:06:22,519
<font color="#E5E5E5">doesn't scare you or excite you</font>

56
00:06:19,069 --> 00:06:24,860
depending what side you're on then you

57
00:06:22,519 --> 00:06:26,839
<font color="#E5E5E5">need to find a</font><font color="#CCCCCC"> new job it's</font><font color="#E5E5E5"> amazing like</font>

58
00:06:24,860 --> 00:06:29,209
I'm<font color="#E5E5E5"> gonna zoom in here so we can look at</font>

59
00:06:26,839 --> 00:06:31,999
this for<font color="#E5E5E5"> a minute yeah look at some of</font>

60
00:06:29,209 --> 00:06:33,979
<font color="#E5E5E5">the powers polite options in there and a</font>

61
00:06:31,999 --> 00:06:37,519
<font color="#E5E5E5">virus bypass code execution exfiltration</font>

62
00:06:33,979 --> 00:06:39,318
<font color="#E5E5E5">my favorite mayhem right that's one of</font>

63
00:06:37,519 --> 00:06:41,629
the newest components of it that's

64
00:06:39,319 --> 00:06:43,350
things like being able to crash boxes or

65
00:06:41,629 --> 00:06:47,040
to do things like wipe the

66
00:06:43,350 --> 00:06:49,950
Master Boot Record so very very<font color="#E5E5E5"> scary</font>

67
00:06:47,040 --> 00:06:51,300
night you know I won't<font color="#E5E5E5"> ask for a show of</font>

68
00:06:49,950 --> 00:06:53,670
hands because nobody's going to want to

69
00:06:51,300 --> 00:06:55,890
<font color="#E5E5E5">raise her hand now but think to yourself</font>

70
00:06:53,670 --> 00:06:58,440
do I have power shell remoting on in my

71
00:06:55,890 --> 00:07:00,240
environment<font color="#E5E5E5"> right and I would bet we</font>

72
00:06:58,440 --> 00:07:01,830
have<font color="#E5E5E5"> a decent percentage of you do and</font>

73
00:07:00,240 --> 00:07:03,620
if<font color="#CCCCCC"> you don't you probably will in the</font>

74
00:07:01,830 --> 00:07:07,020
future because as you start upgrading

75
00:07:03,620 --> 00:07:09,150
for<font color="#E5E5E5"> instance server 2012 has power solar</font>

76
00:07:07,020 --> 00:07:11,340
moding turned on by default which now

77
00:07:09,150 --> 00:07:14,130
you've unleashed basically all powerful

78
00:07:11,340 --> 00:07:16,679
memory only malware or the capability

79
00:07:14,130 --> 00:07:18,900
let's say within your environment right

80
00:07:16,680 --> 00:07:20,940
and all you need now is domain admin

81
00:07:18,900 --> 00:07:24,000
creds and you've basically got kind of

82
00:07:20,940 --> 00:07:26,219
God level privileges without ever

83
00:07:24,000 --> 00:07:28,950
needing to drop kind of binaries on the

84
00:07:26,220 --> 00:07:31,920
in the environment anymore so very<font color="#CCCCCC"> very</font>

85
00:07:28,950 --> 00:07:33,990
scary stuff as our friends in<font color="#E5E5E5"> North</font>

86
00:07:31,920 --> 00:07:35,790
<font color="#E5E5E5">Korea have showed us it doesn't</font><font color="#CCCCCC"> take</font>

87
00:07:33,990 --> 00:07:37,710
much to<font color="#E5E5E5"> cause an intense amount of</font>

88
00:07:35,790 --> 00:07:39,150
<font color="#E5E5E5">damage yeah and</font><font color="#CCCCCC"> I think of light power</font>

89
00:07:37,710 --> 00:07:40,620
shell remoting again<font color="#CCCCCC"> if you've got power</font>

90
00:07:39,150 --> 00:07:42,419
shell remoting and your admins are using

91
00:07:40,620 --> 00:07:44,820
in your environment that's awesome<font color="#CCCCCC"> it's</font>

92
00:07:42,420 --> 00:07:47,760
great for administration but it also

93
00:07:44,820 --> 00:07:49,920
takes<font color="#CCCCCC"> probably</font><font color="#E5E5E5"> a three-line script to</font>

94
00:07:47,760 --> 00:07:51,270
now once I've<font color="#CCCCCC"> got admin rights to</font>

95
00:07:49,920 --> 00:07:53,970
basically run out and start having all

96
00:07:51,270 --> 00:07:55,440
your systems wipe themselves right and I

97
00:07:53,970 --> 00:07:56,610
haven't seen this actually happened a

98
00:07:55,440 --> 00:08:01,200
while but I don't think<font color="#E5E5E5"> we're very far</font>

99
00:07:56,610 --> 00:08:02,910
from it some and we're seeing<font color="#E5E5E5"> it across</font>

100
00:08:01,200 --> 00:08:05,729
the<font color="#E5E5E5"> board we're certainly seeing more</font>

101
00:08:02,910 --> 00:08:07,710
advanced adversaries employ it so for

102
00:08:05,730 --> 00:08:10,350
for the<font color="#E5E5E5"> last several years we've seen</font>

103
00:08:07,710 --> 00:08:12,479
for instance Chinese adversaries at the

104
00:08:10,350 --> 00:08:14,340
<font color="#E5E5E5">upper level of</font><font color="#CCCCCC"> the of the spectrum kind</font>

105
00:08:12,480 --> 00:08:15,660
of moving more to powershell because

106
00:08:14,340 --> 00:08:18,030
they know that<font color="#E5E5E5"> it leaves less forensic</font>

107
00:08:15,660 --> 00:08:19,470
artifacts but<font color="#E5E5E5"> now we're seeing it kind</font>

108
00:08:18,030 --> 00:08:21,690
of go all the way down<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the commodity</font>

109
00:08:19,470 --> 00:08:23,010
level there's several instances in this

110
00:08:21,690 --> 00:08:25,530
case this is posh coder which is

111
00:08:23,010 --> 00:08:27,570
ransomware but a lot of commodity Mauer

112
00:08:25,530 --> 00:08:29,460
I'm<font color="#E5E5E5"> noticing is starting to turn to</font>

113
00:08:27,570 --> 00:08:32,159
powershell as well and largely because

114
00:08:29,460 --> 00:08:34,110
most of<font color="#E5E5E5"> us don't have tools to actually</font>

115
00:08:32,159 --> 00:08:37,228
even discover it it's it's pretty

116
00:08:34,110 --> 00:08:40,770
stealthy out of the box there's also why

117
00:08:37,229 --> 00:08:42,360
red teamers<font color="#CCCCCC"> like it so much okay so</font>

118
00:08:40,770 --> 00:08:43,799
that's what we're dealing with<font color="#CCCCCC"> we've got</font>

119
00:08:42,360 --> 00:08:45,990
we've<font color="#CCCCCC"> got a serious threat on the</font>

120
00:08:43,799 --> 00:08:48,300
horizon or maybe already<font color="#E5E5E5"> present your</font>

121
00:08:45,990 --> 00:08:49,650
network the the big kind of take<font color="#E5E5E5"> away</font>

122
00:08:48,300 --> 00:08:53,280
from<font color="#E5E5E5"> that is well how am I going to find</font>

123
00:08:49,650 --> 00:08:56,120
this so there's<font color="#E5E5E5"> a few</font><font color="#CCCCCC"> different ways who</font>

124
00:08:53,280 --> 00:08:56,120
are my forensics folks

125
00:08:56,279 --> 00:09:01,589
just a hair<font color="#E5E5E5"> really one come on forensics</font>

126
00:09:00,209 --> 00:09:03,209
folks are too shy to raise their hands i

127
00:09:01,589 --> 00:09:04,649
think but<font color="#CCCCCC"> all right so if you were</font>

128
00:09:03,209 --> 00:09:06,388
forensics person you may know things

129
00:09:04,649 --> 00:09:07,860
like prefetch for instance we use this

130
00:09:06,389 --> 00:09:10,529
to show that things have been<font color="#E5E5E5"> executed</font>

131
00:09:07,860 --> 00:09:13,170
or app compatibility<font color="#CCCCCC"> Kashuk</font><font color="#E5E5E5"> a shim cash</font>

132
00:09:10,529 --> 00:09:14,910
or user<font color="#E5E5E5"> assist so one of the first</font>

133
00:09:13,170 --> 00:09:17,339
<font color="#CCCCCC">things</font><font color="#E5E5E5"> I'm also often looking on the box</font>

134
00:09:14,910 --> 00:09:19,649
is do I see things<font color="#E5E5E5"> like PowerShell dot</font>

135
00:09:17,339 --> 00:09:21,629
exe running you<font color="#E5E5E5"> know why is this account</font>

136
00:09:19,649 --> 00:09:23,910
why is a standard user executing

137
00:09:21,629 --> 00:09:25,800
PowerShell that could be somewhat of a

138
00:09:23,910 --> 00:09:27,540
clue depending on how prevalent is in

139
00:09:25,800 --> 00:09:29,639
your environment so we<font color="#E5E5E5"> might be looking</font>

140
00:09:27,540 --> 00:09:31,949
at these just to get a feeling for if I

141
00:09:29,639 --> 00:09:33,360
need<font color="#E5E5E5"> to look deeper now someone's been</font>

142
00:09:31,949 --> 00:09:35,519
like double clicking on<font color="#E5E5E5"> PowerShell</font>

143
00:09:33,360 --> 00:09:37,709
scripts you may see things<font color="#E5E5E5"> like these</font>

144
00:09:35,519 --> 00:09:39,209
linked files or shortcut files for those

145
00:09:37,709 --> 00:09:41,699
scripts and you get the nice script

146
00:09:39,209 --> 00:09:44,099
names where it was run from<font color="#E5E5E5"> you might</font>

147
00:09:41,699 --> 00:09:46,559
also look for kind of some of the helper

148
00:09:44,100 --> 00:09:50,430
functions so if WM eyes and play you'll

149
00:09:46,559 --> 00:09:53,339
see this w my privacy process that was

150
00:09:50,430 --> 00:09:56,279
running<font color="#E5E5E5"> w script for kind of</font><font color="#CCCCCC"> VB script</font>

151
00:09:53,339 --> 00:09:58,470
<font color="#E5E5E5">which is often kind of coupled with our</font>

152
00:09:56,279 --> 00:09:59,670
with our power shell and then finally

153
00:09:58,470 --> 00:10:00,990
<font color="#CCCCCC">we'll talk a</font><font color="#E5E5E5"> little bit about memory</font>

154
00:09:59,670 --> 00:10:03,209
which actually turns out to be one<font color="#E5E5E5"> of</font>

155
00:10:00,990 --> 00:10:06,809
<font color="#E5E5E5">the better places to find this activity</font>

156
00:10:03,209 --> 00:10:08,128
and so nobody want to self-identify of

157
00:10:06,809 --> 00:10:09,269
being forensics but if you were

158
00:10:08,129 --> 00:10:12,329
forensics you might have heard something

159
00:10:09,269 --> 00:10:15,149
called a super timeline and<font color="#E5E5E5"> so what we</font>

160
00:10:12,329 --> 00:10:17,040
do is we end up basically gathering up

161
00:10:15,149 --> 00:10:18,779
hundreds and hundreds of different kind

162
00:10:17,040 --> 00:10:21,509
of artifacts in the<font color="#CCCCCC"> Box putting</font><font color="#E5E5E5"> them in</font>

163
00:10:18,779 --> 00:10:23,879
a nice timeline and if we get<font color="#E5E5E5"> to the</font>

164
00:10:21,509 --> 00:10:25,410
right place at the right time they start

165
00:10:23,879 --> 00:10:27,870
to tell a story<font color="#CCCCCC"> about what happened on a</font>

166
00:10:25,410 --> 00:10:30,360
system and so kind of walking through

167
00:10:27,870 --> 00:10:33,089
here yeah I know<font color="#E5E5E5"> this is kind of see if</font>

168
00:10:30,360 --> 00:10:35,100
I can zoom it first folks in the back so

169
00:10:33,089 --> 00:10:38,699
we see for instance PowerShell dot exe

170
00:10:35,100 --> 00:10:40,740
executed yeah we see immediately after

171
00:10:38,699 --> 00:10:42,449
that a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> logs appear to have</font>

172
00:10:40,740 --> 00:10:44,250
been kind of written to don't get too

173
00:10:42,449 --> 00:10:45,899
<font color="#E5E5E5">excited because until you get to</font>

174
00:10:44,250 --> 00:10:48,420
<font color="#E5E5E5">powershell five you don't</font><font color="#CCCCCC"> really get</font>

175
00:10:45,899 --> 00:10:51,509
much<font color="#E5E5E5"> of anything in there followed by</font>

176
00:10:48,420 --> 00:10:53,248
ping dot exe and net dot exe right so I

177
00:10:51,509 --> 00:10:54,959
see PowerShell run<font color="#CCCCCC"> follow very closely</font>

178
00:10:53,249 --> 00:10:57,779
by a couple<font color="#E5E5E5"> of other kind of known</font>

179
00:10:54,959 --> 00:11:00,989
commands at this<font color="#E5E5E5"> point</font><font color="#CCCCCC"> I'd be making</font><font color="#E5E5E5"> a</font>

180
00:10:57,779 --> 00:11:02,399
guess but net<font color="#E5E5E5"> maybe mounting shares so</font>

181
00:11:00,990 --> 00:11:04,050
not maybe they're mounting a share to go

182
00:11:02,399 --> 00:11:06,449
out maybe they<font color="#E5E5E5"> ping to find a box and</font>

183
00:11:04,050 --> 00:11:09,449
mounting a share on that<font color="#E5E5E5"> box followed</font>

184
00:11:06,449 --> 00:11:10,079
very shortly thereafter by a creation

185
00:11:09,449 --> 00:11:12,900
for

186
00:11:10,080 --> 00:11:15,780
a file called win<font color="#CCCCCC"> inet totally legit I'm</font>

187
00:11:12,900 --> 00:11:17,220
click here followed by prefetch file

188
00:11:15,780 --> 00:11:20,040
that tells me that what that new file

189
00:11:17,220 --> 00:11:22,830
was executed followed by another command

190
00:11:20,040 --> 00:11:26,670
called fine string what does fine string

191
00:11:22,830 --> 00:11:28,770
do now I could get over in a grep for

192
00:11:26,670 --> 00:11:30,449
windows so they're looking<font color="#E5E5E5"> for something</font>

193
00:11:28,770 --> 00:11:33,630
what do you think<font color="#CCCCCC"> they were looking</font><font color="#E5E5E5"> for</font>

194
00:11:30,450 --> 00:11:36,330
<font color="#CCCCCC">we don't</font><font color="#E5E5E5"> have a command for it what do</font>

195
00:11:33,630 --> 00:11:39,120
you<font color="#E5E5E5"> think they found anybody notice that</font>

196
00:11:36,330 --> 00:11:40,650
directory oracle database so they must

197
00:11:39,120 --> 00:11:43,380
<font color="#E5E5E5">have been looking</font><font color="#CCCCCC"> for may</font><font color="#E5E5E5"> be fine string</font>

198
00:11:40,650 --> 00:11:45,209
for some sort of<font color="#E5E5E5"> oracle type of file</font>

199
00:11:43,380 --> 00:11:48,290
names whatever they found it looks like

200
00:11:45,210 --> 00:11:50,310
<font color="#CCCCCC">she'll bags tells us folders that a</font>

201
00:11:48,290 --> 00:11:51,900
individual account has been in so it

202
00:11:50,310 --> 00:11:54,150
looks like<font color="#E5E5E5"> they've been pillaging around</font>

203
00:11:51,900 --> 00:11:57,780
in the<font color="#E5E5E5"> oracle folders followed very</font>

204
00:11:54,150 --> 00:12:00,930
closely by ftp that can't<font color="#E5E5E5"> be good right</font>

205
00:11:57,780 --> 00:12:04,530
and then scheduled tasks and another

206
00:12:00,930 --> 00:12:06,359
<font color="#CCCCCC">interesting kind of file called SVC at</font>

207
00:12:04,530 --> 00:12:09,180
the bottom created there but the others

208
00:12:06,360 --> 00:12:10,680
forget about like 10 or 12 lines we've

209
00:12:09,180 --> 00:12:11,760
got a pretty<font color="#E5E5E5"> interesting idea of some</font>

210
00:12:10,680 --> 00:12:14,489
things<font color="#E5E5E5"> that have happened on this box</font>

211
00:12:11,760 --> 00:12:16,020
<font color="#CCCCCC">all right so what was this this was you</font>

212
00:12:14,490 --> 00:12:18,840
know within about 20 minutes of

213
00:12:16,020 --> 00:12:20,280
PowerShell kicking off I've got things

214
00:12:18,840 --> 00:12:21,540
being looked for I've got damage

215
00:12:20,280 --> 00:12:23,850
assessment information looks like you're

216
00:12:21,540 --> 00:12:26,040
looking<font color="#E5E5E5"> for Oracle I've got a couple new</font>

217
00:12:23,850 --> 00:12:27,570
kind of binaries that I need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> go look</font>

218
00:12:26,040 --> 00:12:29,550
at<font color="#E5E5E5"> and a little bit of kind of trade</font>

219
00:12:27,570 --> 00:12:32,580
craft maybe they're<font color="#E5E5E5"> mounting shares to</font>

220
00:12:29,550 --> 00:12:34,800
move the environment but you'll notice<font color="#E5E5E5"> a</font>

221
00:12:32,580 --> 00:12:36,450
lot<font color="#CCCCCC"> of maybes and probably when I was</font>

222
00:12:34,800 --> 00:12:37,949
talking through that and that's because

223
00:12:36,450 --> 00:12:40,080
for one we don't have perfect

224
00:12:37,950 --> 00:12:42,360
information the other is that when

225
00:12:40,080 --> 00:12:44,880
someone<font color="#E5E5E5"> drops into like PowerShell or</font>

226
00:12:42,360 --> 00:12:47,130
starts kind<font color="#E5E5E5"> of running scripts all of a</font>

227
00:12:44,880 --> 00:12:49,680
<font color="#CCCCCC">sudden I don't</font><font color="#E5E5E5"> have as many forensic</font>

228
00:12:47,130 --> 00:12:51,060
artifacts as I typically would a lot<font color="#E5E5E5"> of</font>

229
00:12:49,680 --> 00:12:53,459
like the PowerShell<font color="#CCCCCC"> command let's leave</font>

230
00:12:51,060 --> 00:12:55,170
nothing right they could<font color="#E5E5E5"> have run a</font>

231
00:12:53,460 --> 00:12:56,760
hundred PowerShell command 'let's in

232
00:12:55,170 --> 00:12:58,860
there and a whole script full of them

233
00:12:56,760 --> 00:13:00,600
and it won't<font color="#E5E5E5"> show up in my in my</font>

234
00:12:58,860 --> 00:13:03,000
standard<font color="#E5E5E5"> kind of time lining that we do</font>

235
00:13:00,600 --> 00:13:05,220
in forensics and that's<font color="#E5E5E5"> the real danger</font>

236
00:13:03,000 --> 00:13:06,650
here is that if this<font color="#E5E5E5"> is all I've got it</font>

237
00:13:05,220 --> 00:13:11,910
becomes hard<font color="#CCCCCC"> for me to piece together</font>

238
00:13:06,650 --> 00:13:13,079
kind of<font color="#E5E5E5"> what happened on</font><font color="#CCCCCC"> the box so this</font>

239
00:13:11,910 --> 00:13:14,850
is<font color="#CCCCCC"> where memory is going to be</font><font color="#E5E5E5"> really</font>

240
00:13:13,080 --> 00:13:16,800
helpful to us if we have access to ram<font color="#CCCCCC"> i</font>

241
00:13:14,850 --> 00:13:18,210
don't know<font color="#E5E5E5"> if any of you nobody one to</font>

242
00:13:16,800 --> 00:13:20,310
self admit to be in forensics how about

243
00:13:18,210 --> 00:13:22,140
memory forensics any reverse engineers

244
00:13:20,310 --> 00:13:23,910
or people have done memory forensics

245
00:13:22,140 --> 00:13:25,710
it's one of the more exciting

246
00:13:23,910 --> 00:13:28,430
innovations in the field<font color="#E5E5E5"> for a long time</font>

247
00:13:25,710 --> 00:13:31,260
it's a<font color="#E5E5E5"> it's a game</font><font color="#CCCCCC"> changer because</font>

248
00:13:28,430 --> 00:13:33,689
basically anything that ever happened on

249
00:13:31,260 --> 00:13:36,660
that system of interest has at one time

250
00:13:33,690 --> 00:13:38,160
been in memory so<font color="#CCCCCC"> if I get lucky and I</font>

251
00:13:36,660 --> 00:13:39,660
get memory and I can dig through it

252
00:13:38,160 --> 00:13:41,540
properly I might I might be able to

253
00:13:39,660 --> 00:13:44,339
<font color="#E5E5E5">identify what what actually happened and</font>

254
00:13:41,540 --> 00:13:45,510
<font color="#E5E5E5">so this is</font><font color="#CCCCCC"> an interesting command that</font>

255
00:13:44,340 --> 00:13:47,310
<font color="#E5E5E5">you hope you don't see on your domain</font>

256
00:13:45,510 --> 00:13:49,620
controllers looks like someone's dumping

257
00:13:47,310 --> 00:13:52,500
Active Directory dumping credentials if

258
00:13:49,620 --> 00:13:54,660
you were to<font color="#E5E5E5"> get to that box while that</font>

259
00:13:52,500 --> 00:13:56,280
terminal was still up you could run<font color="#CCCCCC"> a</font>

260
00:13:54,660 --> 00:13:57,420
very simple command called<font color="#CCCCCC"> das key and</font>

261
00:13:56,280 --> 00:13:59,550
it would<font color="#CCCCCC"> actually show you the history</font>

262
00:13:57,420 --> 00:14:02,400
what was typed in that terminal<font color="#CCCCCC"> right</font>

263
00:13:59,550 --> 00:14:05,310
per user account or per session right

264
00:14:02,400 --> 00:14:09,420
the only problem is it only sits in

265
00:14:05,310 --> 00:14:11,310
memory that history and it actually goes

266
00:14:09,420 --> 00:14:15,030
away when that terminal gets closed or

267
00:14:11,310 --> 00:14:17,729
at least the the history goes away it

268
00:14:15,030 --> 00:14:18,660
still could be resident in RAM and so

269
00:14:17,730 --> 00:14:21,330
<font color="#E5E5E5">this is one thing we're going to be</font>

270
00:14:18,660 --> 00:14:23,520
looking for and so a couple smart folks

271
00:14:21,330 --> 00:14:25,830
Stevens in kc they did some some

272
00:14:23,520 --> 00:14:28,650
research on this and they came<font color="#E5E5E5"> up with</font><font color="#CCCCCC"> a</font>

273
00:14:25,830 --> 00:14:32,070
<font color="#CCCCCC">way to basically carve out that command</font>

274
00:14:28,650 --> 00:14:33,329
history buffer out of memory and so that

275
00:14:32,070 --> 00:14:36,180
was<font color="#E5E5E5"> kind of the state of the art until</font>

276
00:14:33,330 --> 00:14:37,620
not too long ago what they were<font color="#CCCCCC"> they</font>

277
00:14:36,180 --> 00:14:40,349
found it is it's<font color="#CCCCCC"> actually in a very</font>

278
00:14:37,620 --> 00:14:43,080
reliable location it's in a place<font color="#CCCCCC"> called</font>

279
00:14:40,350 --> 00:14:44,640
con<font color="#E5E5E5"> hosts in windows 7 and so this</font><font color="#CCCCCC"> is</font>

280
00:14:43,080 --> 00:14:47,190
the process that actually draws the<font color="#CCCCCC"> win</font>

281
00:14:44,640 --> 00:14:48,900
doing on your boxes so it's kind of

282
00:14:47,190 --> 00:14:51,000
draws the terminal<font color="#CCCCCC"> window and it just</font>

283
00:14:48,900 --> 00:14:52,620
turns out<font color="#E5E5E5"> that history lives there</font><font color="#CCCCCC"> all</font>

284
00:14:51,000 --> 00:14:55,380
<font color="#CCCCCC">right so if I can get access to that con</font>

285
00:14:52,620 --> 00:14:56,790
host process<font color="#CCCCCC"> right I have a decent</font>

286
00:14:55,380 --> 00:14:58,380
chance<font color="#E5E5E5"> that maybe I can recover those</font>

287
00:14:56,790 --> 00:15:01,410
old command lines that were actually

288
00:14:58,380 --> 00:15:03,360
typed by the attacker in there same with

289
00:15:01,410 --> 00:15:06,150
powershell it's also nicely stored in

290
00:15:03,360 --> 00:15:08,100
the con<font color="#E5E5E5"> host that by default the last 64</font>

291
00:15:06,150 --> 00:15:10,230
commands<font color="#E5E5E5"> that have been run in a</font>

292
00:15:08,100 --> 00:15:12,990
<font color="#CCCCCC">PowerShell terminal will be</font><font color="#E5E5E5"> in that</font>

293
00:15:10,230 --> 00:15:15,180
command history if we can get to it and

294
00:15:12,990 --> 00:15:18,480
then I 31 in there just<font color="#E5E5E5"> for funny buddy</font>

295
00:15:15,180 --> 00:15:21,270
had to deal with web shells pretty

296
00:15:18,480 --> 00:15:22,560
pretty ninja<font color="#E5E5E5"> like small amounts of code</font>

297
00:15:21,270 --> 00:15:24,960
thrown on a web server<font color="#E5E5E5"> that basically</font>

298
00:15:22,560 --> 00:15:26,250
turns it into a back door well depending

299
00:15:24,960 --> 00:15:27,780
how the web shells written some of the

300
00:15:26,250 --> 00:15:31,530
web shells are basically just kicking

301
00:15:27,780 --> 00:15:33,900
off C and D D XZ and you'll<font color="#E5E5E5"> notice this</font>

302
00:15:31,530 --> 00:15:36,470
some of you may recognize the w3 WP

303
00:15:33,900 --> 00:15:38,250
process that's your is worker process

304
00:15:36,470 --> 00:15:40,320
that is not

305
00:15:38,250 --> 00:15:42,900
normal behavior<font color="#E5E5E5"> okay you start seeing</font>

306
00:15:40,320 --> 00:15:44,640
command terminals dumping off of your is

307
00:15:42,900 --> 00:15:46,650
processes well that's a pretty good

308
00:15:44,640 --> 00:15:48,630
indication<font color="#E5E5E5"> you got issues the good news</font>

309
00:15:46,650 --> 00:15:50,400
is in these situations we can also often

310
00:15:48,630 --> 00:15:52,530
recover command lines that were typed in

311
00:15:50,400 --> 00:15:55,260
a web shell because they're nicely using

312
00:15:52,530 --> 00:15:56,760
the same kind of terminals that in an

313
00:15:55,260 --> 00:15:59,640
adversary on the console<font color="#E5E5E5"> itself will be</font>

314
00:15:56,760 --> 00:16:01,230
<font color="#CCCCCC">using so I'll be looking for kind of all</font>

315
00:15:59,640 --> 00:16:04,710
those to try to piece together what

316
00:16:01,230 --> 00:16:06,270
happened on a system so I say<font color="#E5E5E5"> this is</font>

317
00:16:04,710 --> 00:16:08,940
kind<font color="#E5E5E5"> of old school because this is the</font>

318
00:16:06,270 --> 00:16:11,490
this was the state-of-the-art 12 years

319
00:16:08,940 --> 00:16:13,170
<font color="#E5E5E5">ago right I remember like dumping ram on</font>

320
00:16:11,490 --> 00:16:15,030
linux boxes and searching through it

321
00:16:13,170 --> 00:16:18,060
with strings<font color="#E5E5E5"> it's still just as</font>

322
00:16:15,030 --> 00:16:20,310
effective today as it was then so what

323
00:16:18,060 --> 00:16:22,709
we often might do is take those con host

324
00:16:20,310 --> 00:16:24,959
processes dump out the process itself

325
00:16:22,710 --> 00:16:27,270
<font color="#E5E5E5">just pull strings across it just like</font>

326
00:16:24,960 --> 00:16:28,980
you do when looking at a binary in many

327
00:16:27,270 --> 00:16:30,329
cases<font color="#CCCCCC"> you'll recover old command lines</font>

328
00:16:28,980 --> 00:16:33,060
it turns out<font color="#CCCCCC"> to be a pretty effective</font>

329
00:16:30,330 --> 00:16:34,950
means and so I've got on there on the

330
00:16:33,060 --> 00:16:36,650
left over here some things that<font color="#CCCCCC"> just</font>

331
00:16:34,950 --> 00:16:39,540
this is only limited by your imagination

332
00:16:36,650 --> 00:16:43,650
but things like looking for file names

333
00:16:39,540 --> 00:16:45,150
you know dot exe HTTP or ftp or RAR if

334
00:16:43,650 --> 00:16:47,339
you've got an attacker that's actually

335
00:16:45,150 --> 00:16:49,620
roaring things up to exfiltrate out of

336
00:16:47,339 --> 00:16:52,170
the environment so still very very

337
00:16:49,620 --> 00:16:53,850
effective the new school is going<font color="#E5E5E5"> to be</font>

338
00:16:52,170 --> 00:16:55,170
actually<font color="#CCCCCC"> moving to like a true memory</font>

339
00:16:53,850 --> 00:16:58,410
forensics tool does anyone<font color="#E5E5E5"> ever used</font>

340
00:16:55,170 --> 00:17:00,420
volatility before yeah it's a it's by

341
00:16:58,410 --> 00:17:02,189
far the definitive number one tool for

342
00:17:00,420 --> 00:17:04,170
doing memory forensics one of the nice

343
00:17:02,190 --> 00:17:06,839
things about memory forensics is that

344
00:17:04,170 --> 00:17:08,699
the<font color="#E5E5E5"> best tools were all free and</font><font color="#CCCCCC"> so if</font>

345
00:17:06,839 --> 00:17:11,639
you<font color="#E5E5E5"> want go do a search on volatility</font>

346
00:17:08,699 --> 00:17:14,130
there's a ton of tutorials out there but

347
00:17:11,640 --> 00:17:17,939
an individual<font color="#E5E5E5"> on that on that team road</font>

348
00:17:14,130 --> 00:17:19,560
his name's<font color="#E5E5E5"> Michael</font><font color="#CCCCCC"> he'll</font><font color="#E5E5E5"> Lee and he took</font>

349
00:17:17,939 --> 00:17:21,510
some of that initial research that Owens

350
00:17:19,560 --> 00:17:23,909
encasing din said well if you<font color="#E5E5E5"> tell me</font>

351
00:17:21,510 --> 00:17:25,619
<font color="#CCCCCC">that it's in this process I should</font><font color="#E5E5E5"> be</font>

352
00:17:23,910 --> 00:17:28,079
able to go find what it looks like and

353
00:17:25,619 --> 00:17:29,399
<font color="#E5E5E5">just write a plug-in to actually do it</font>

354
00:17:28,079 --> 00:17:32,159
on the fly so<font color="#CCCCCC"> i don't have to pull</font><font color="#E5E5E5"> the</font>

355
00:17:29,400 --> 00:17:33,540
strings out to do it and so what he did

356
00:17:32,160 --> 00:17:35,430
is he went through he wrote a<font color="#E5E5E5"> plugin</font>

357
00:17:33,540 --> 00:17:37,320
<font color="#E5E5E5">called command scan for volatility and</font>

358
00:17:35,430 --> 00:17:39,870
what it will<font color="#E5E5E5"> do is go</font><font color="#CCCCCC"> through all the cs</font>

359
00:17:37,320 --> 00:17:42,090
RSS or con host processes look for the

360
00:17:39,870 --> 00:17:44,280
signature for what<font color="#E5E5E5"> would be a command</font>

361
00:17:42,090 --> 00:17:47,310
history and try to parse it out<font color="#CCCCCC"> alright</font>

362
00:17:44,280 --> 00:17:49,620
and so<font color="#CCCCCC"> this is running on</font><font color="#E5E5E5"> a system if</font><font color="#CCCCCC"> i</font>

363
00:17:47,310 --> 00:17:51,960
see this it looks like<font color="#E5E5E5"> I've got a few</font>

364
00:17:49,620 --> 00:17:54,178
commands here nothing terribly

365
00:17:51,960 --> 00:17:56,159
there looks like someone went to a temp

366
00:17:54,179 --> 00:17:59,940
directory and tried to output an a dot

367
00:17:56,159 --> 00:18:01,919
txt file now while he was doing this

368
00:17:59,940 --> 00:18:03,480
research he stumbled upon something<font color="#E5E5E5"> that</font>

369
00:18:01,919 --> 00:18:05,279
I don't<font color="#E5E5E5"> know if anyone else had</font>

370
00:18:03,480 --> 00:18:07,080
documented before he did which was

371
00:18:05,279 --> 00:18:08,760
there's not just that that history

372
00:18:07,080 --> 00:18:10,080
buffer<font color="#E5E5E5"> that I've</font><font color="#CCCCCC"> been talking</font><font color="#E5E5E5"> about it</font>

373
00:18:08,760 --> 00:18:13,320
turns out there's also what they call a

374
00:18:10,080 --> 00:18:16,080
consoles buffer and this records not

375
00:18:13,320 --> 00:18:18,918
what was typed but what was displayed in

376
00:18:16,080 --> 00:18:21,210
<font color="#CCCCCC">that terminal so now we get full duplex</font>

377
00:18:18,919 --> 00:18:23,070
<font color="#CCCCCC">alright we get both what was typed and</font>

378
00:18:21,210 --> 00:18:25,770
what was actually displayed back to the

379
00:18:23,070 --> 00:18:27,629
user so now<font color="#CCCCCC"> for instance we know looks</font>

380
00:18:25,770 --> 00:18:30,480
like the specific user name here was our

381
00:18:27,630 --> 00:18:32,429
link all right and I actually see the

382
00:18:30,480 --> 00:18:33,779
directory listing this<font color="#CCCCCC"> is a lot more</font>

383
00:18:32,429 --> 00:18:35,909
<font color="#E5E5E5">interesting to me than know what we saw</font>

384
00:18:33,779 --> 00:18:39,419
before because do those look the file

385
00:18:35,909 --> 00:18:42,630
names look legit I'll give you a hint

386
00:18:39,419 --> 00:18:45,000
you see ever see a<font color="#CCCCCC"> 11 letter name of a</font>

387
00:18:42,630 --> 00:18:48,450
dll executable<font color="#E5E5E5"> I'll buy you a beer if</font>

388
00:18:45,000 --> 00:18:50,580
it's not bad right so and since<font color="#E5E5E5"> they</font>

389
00:18:48,450 --> 00:18:52,649
typed out that<font color="#CCCCCC"> a dot exe you can't see</font>

390
00:18:50,580 --> 00:18:54,990
it here he<font color="#E5E5E5"> was snipped that was actually</font>

391
00:18:52,649 --> 00:18:56,820
<font color="#E5E5E5">all the credentials that had been dumped</font>

392
00:18:54,990 --> 00:18:58,020
and so you could actually<font color="#CCCCCC"> see the output</font>

393
00:18:56,820 --> 00:19:00,418
of what credentials they had actually

394
00:18:58,020 --> 00:19:03,899
gathered you know just by pulling it<font color="#E5E5E5"> out</font>

395
00:19:00,419 --> 00:19:06,539
of the command history so a couple

396
00:19:03,899 --> 00:19:09,809
<font color="#E5E5E5">really neat plugins now that was from a</font>

397
00:19:06,539 --> 00:19:12,480
cmd.exe this is the exact same<font color="#CCCCCC"> plug-in</font>

398
00:19:09,809 --> 00:19:15,260
being run and gathering up<font color="#CCCCCC"> PowerShell</font>

399
00:19:12,480 --> 00:19:17,850
data and so who sort of invoke mimikatz

400
00:19:15,260 --> 00:19:19,919
that's<font color="#E5E5E5"> from</font><font color="#CCCCCC"> that power split project</font>

401
00:19:17,850 --> 00:19:21,990
it's<font color="#E5E5E5"> ridiculous how often this is</font>

402
00:19:19,919 --> 00:19:24,090
getting used now I mean both for

403
00:19:21,990 --> 00:19:25,440
advanced adversaries and like the just

404
00:19:24,090 --> 00:19:26,820
the run-of-the-mill seems like this<font color="#E5E5E5"> is</font>

405
00:19:25,440 --> 00:19:28,710
<font color="#E5E5E5">the number one thing that everybody</font>

406
00:19:26,820 --> 00:19:31,379
wants to<font color="#E5E5E5"> run on a box these days when</font>

407
00:19:28,710 --> 00:19:34,020
they get access to it now this give this

408
00:19:31,380 --> 00:19:36,179
gave us the entire<font color="#CCCCCC"> contents including</font>

409
00:19:34,020 --> 00:19:40,168
all the output for that invoke mimikatz

410
00:19:36,179 --> 00:19:44,460
command so that's all<font color="#E5E5E5"> coming out of ram</font>

411
00:19:40,169 --> 00:19:47,730
and it's not just windows you<font color="#E5E5E5"> can also</font>

412
00:19:44,460 --> 00:19:49,710
do<font color="#CCCCCC"> it in things like Linux in fact in</font>

413
00:19:47,730 --> 00:19:51,330
fact UNIX has a much better if you're

414
00:19:49,710 --> 00:19:53,730
<font color="#E5E5E5">dealing when the bash world a much</font>

415
00:19:51,330 --> 00:19:55,500
better history capability bash history

416
00:19:53,730 --> 00:19:57,779
is incredible you'll get thousands of

417
00:19:55,500 --> 00:19:59,490
commands often time stamped when the

418
00:19:57,779 --> 00:20:01,740
command was was actually run on the box

419
00:19:59,490 --> 00:20:04,080
and so<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is another volatility</font>

420
00:20:01,740 --> 00:20:05,490
<font color="#E5E5E5">plug-in called Linux underscore bash</font>

421
00:20:04,080 --> 00:20:07,590
which just pulls that bash history

422
00:20:05,490 --> 00:20:09,990
get a ramp allowing us to piece together

423
00:20:07,590 --> 00:20:17,490
kind<font color="#E5E5E5"> of what when an attacker might have</font>

424
00:20:09,990 --> 00:20:18,780
done on that box<font color="#CCCCCC"> okay so that's one</font>

425
00:20:17,490 --> 00:20:22,020
thing is we can<font color="#E5E5E5"> kind of recover these</font>

426
00:20:18,780 --> 00:20:24,720
command lines now what if the command

427
00:20:22,020 --> 00:20:26,010
line was what we're looking at here just

428
00:20:24,720 --> 00:20:28,050
a script name that doesn't really help

429
00:20:26,010 --> 00:20:29,610
me it's<font color="#CCCCCC"> very pretty generic how am</font><font color="#E5E5E5"> I</font>

430
00:20:28,050 --> 00:20:33,450
going<font color="#E5E5E5"> to actually recover the contents</font>

431
00:20:29,610 --> 00:20:34,800
of what was in that script and so one

432
00:20:33,450 --> 00:20:37,230
option is<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can actually go out and</font>

433
00:20:34,800 --> 00:20:38,639
dump the PowerShell process itself so

434
00:20:37,230 --> 00:20:41,160
use something like proc dump this is

435
00:20:38,640 --> 00:20:42,929
internals tool or your tool of choice so

436
00:20:41,160 --> 00:20:46,140
just grab that process or grab all of

437
00:20:42,929 --> 00:20:47,610
<font color="#E5E5E5">ram and the reason why this is going to</font>

438
00:20:46,140 --> 00:20:49,860
be useful<font color="#E5E5E5"> to us is you got to think of</font>

439
00:20:47,610 --> 00:20:52,050
the way<font color="#E5E5E5"> PowerShell works powershell is</font>

440
00:20:49,860 --> 00:20:55,590
basically a scripting engine built on

441
00:20:52,050 --> 00:20:58,169
top<font color="#CCCCCC"> of net and dot net is not</font><font color="#E5E5E5"> like a</font>

442
00:20:55,590 --> 00:21:00,689
native binary it needs to get compiled

443
00:20:58,170 --> 00:21:01,590
on the<font color="#E5E5E5"> fly kind like</font><font color="#CCCCCC"> java and so what's</font>

444
00:21:00,690 --> 00:21:03,500
happening<font color="#CCCCCC"> is you're running these</font>

445
00:21:01,590 --> 00:21:05,790
scripts are getting compiled on the<font color="#E5E5E5"> fly</font>

446
00:21:03,500 --> 00:21:07,320
where they're getting compiled or where

447
00:21:05,790 --> 00:21:09,450
they're living is actually in this power

448
00:21:07,320 --> 00:21:11,610
shell process right I've dumped

449
00:21:09,450 --> 00:21:14,670
PowerShell processes on systems there

450
00:21:11,610 --> 00:21:18,030
were 600 megs<font color="#CCCCCC"> in size just gigantic</font>

451
00:21:14,670 --> 00:21:20,270
amounts of space encapsulating tons and

452
00:21:18,030 --> 00:21:22,410
tons of<font color="#E5E5E5"> these scripts that have been run</font>

453
00:21:20,270 --> 00:21:24,750
so now<font color="#CCCCCC"> all</font><font color="#E5E5E5"> we have to do</font><font color="#CCCCCC"> is somehow</font>

454
00:21:22,410 --> 00:21:26,700
search that process<font color="#CCCCCC"> for something</font>

455
00:21:24,750 --> 00:21:29,220
interesting and<font color="#E5E5E5"> and to be honest that's</font>

456
00:21:26,700 --> 00:21:31,080
not easy because these scripts are just

457
00:21:29,220 --> 00:21:34,080
text and anybody who's ever done like

458
00:21:31,080 --> 00:21:35,428
string searching for text yeah it's you

459
00:21:34,080 --> 00:21:37,470
know we're going<font color="#E5E5E5"> to have in a 600 make</font>

460
00:21:35,429 --> 00:21:38,520
process that's probably<font color="#E5E5E5"> billions of</font>

461
00:21:37,470 --> 00:21:41,850
strings in there I've got<font color="#E5E5E5"> to search</font>

462
00:21:38,520 --> 00:21:45,330
through so just for fun what I did is I

463
00:21:41,850 --> 00:21:48,000
took the powers<font color="#CCCCCC"> Floyd project and I went</font>

464
00:21:45,330 --> 00:21:50,730
through it<font color="#E5E5E5"> to try to identify the most</font>

465
00:21:48,000 --> 00:21:54,059
common commandments that were used

466
00:21:50,730 --> 00:21:56,040
across all the the actual attack vectors

467
00:21:54,059 --> 00:21:57,950
in that project and so if you<font color="#E5E5E5"> know</font>

468
00:21:56,040 --> 00:22:00,928
<font color="#CCCCCC">PowerShell it's this kind of verb noun</font>

469
00:21:57,950 --> 00:22:03,179
type of methodology for<font color="#CCCCCC"> command lets</font><font color="#E5E5E5"> you</font>

470
00:22:00,929 --> 00:22:04,950
know get proc address right output and

471
00:22:03,179 --> 00:22:07,440
so I<font color="#E5E5E5"> was trying to identify which ones</font>

472
00:22:04,950 --> 00:22:09,270
might we<font color="#CCCCCC"> just search for to actually try</font>

473
00:22:07,440 --> 00:22:10,950
to<font color="#E5E5E5"> figure out where the scripts are and</font>

474
00:22:09,270 --> 00:22:12,450
that giant amount of data<font color="#E5E5E5"> that we have</font>

475
00:22:10,950 --> 00:22:14,580
<font color="#E5E5E5">to get through</font><font color="#CCCCCC"> it turns out there's</font>

476
00:22:12,450 --> 00:22:17,400
probably some decent options in here<font color="#E5E5E5"> you</font>

477
00:22:14,580 --> 00:22:19,320
<font color="#E5E5E5">notice the ones that have</font><font color="#CCCCCC"> the little</font>

478
00:22:17,400 --> 00:22:22,470
kind of cross next

479
00:22:19,320 --> 00:22:24,300
those are not native<font color="#E5E5E5"> PowerShell</font>

480
00:22:22,470 --> 00:22:28,110
Commandments so those would only be

481
00:22:24,300 --> 00:22:30,210
really kind of in a power sport type of

482
00:22:28,110 --> 00:22:32,639
<font color="#E5E5E5">piece the other one is like you thought</font>

483
00:22:30,210 --> 00:22:35,040
us the<font color="#CCCCCC"> number one is out dash null that</font>

484
00:22:32,640 --> 00:22:37,380
turns out to not be a very commonly used

485
00:22:35,040 --> 00:22:40,200
command let it basically<font color="#CCCCCC"> just dumps</font>

486
00:22:37,380 --> 00:22:41,340
output to the the bit bucket those of

487
00:22:40,200 --> 00:22:42,780
you that write a bunch of scripts you

488
00:22:41,340 --> 00:22:45,300
know sometimes you just don't want data

489
00:22:42,780 --> 00:22:46,680
to<font color="#E5E5E5"> actually kind</font><font color="#CCCCCC"> of display and so</font>

490
00:22:45,300 --> 00:22:48,930
that's what gets that's why it gets

491
00:22:46,680 --> 00:22:50,910
using a lot of the powers boy type of

492
00:22:48,930 --> 00:22:52,380
pieces but but the idea here is what

493
00:22:50,910 --> 00:22:53,910
we're<font color="#CCCCCC"> thinking about strings that we</font>

494
00:22:52,380 --> 00:22:56,640
might find if you know your attackers

495
00:22:53,910 --> 00:22:59,700
are using<font color="#E5E5E5"> Mimi cats well search for Mimi</font>

496
00:22:56,640 --> 00:23:01,500
cats right but I'm trying<font color="#E5E5E5"> to</font><font color="#CCCCCC"> just figure</font>

497
00:22:59,700 --> 00:23:05,730
out some way to get to the good stuff

498
00:23:01,500 --> 00:23:08,990
faster and so<font color="#E5E5E5"> another thing we can do is</font>

499
00:23:05,730 --> 00:23:11,700
we can also just search for those

500
00:23:08,990 --> 00:23:14,850
powershell script names and so simple

501
00:23:11,700 --> 00:23:17,270
reg exes for<font color="#CCCCCC"> things like ps1 might be</font>

502
00:23:14,850 --> 00:23:19,530
useful<font color="#E5E5E5"> i found this to be very very</font>

503
00:23:17,270 --> 00:23:21,870
effective at pulling out kind<font color="#E5E5E5"> of script</font>

504
00:23:19,530 --> 00:23:23,460
names and sometimes full paths for those

505
00:23:21,870 --> 00:23:25,260
scripts so<font color="#CCCCCC"> i can identify where my</font>

506
00:23:23,460 --> 00:23:30,180
attackers are kind of dumping those in

507
00:23:25,260 --> 00:23:32,430
the file<font color="#CCCCCC"> system so here's an example</font><font color="#E5E5E5"> so</font>

508
00:23:30,180 --> 00:23:35,010
in this example<font color="#E5E5E5"> gump doubt the power</font>

509
00:23:32,430 --> 00:23:37,350
shell process here grab the<font color="#CCCCCC"> unicode</font>

510
00:23:35,010 --> 00:23:40,290
strings out of it and simply just did a

511
00:23:37,350 --> 00:23:43,320
quick grep search for<font color="#CCCCCC"> mimi cats and this</font>

512
00:23:40,290 --> 00:23:46,440
this<font color="#CCCCCC"> case found the invoke mimi caps</font>

513
00:23:43,320 --> 00:23:48,990
kind<font color="#E5E5E5"> of script and was able to</font><font color="#CCCCCC"> recover</font>

514
00:23:46,440 --> 00:23:51,480
the<font color="#E5E5E5"> entire script out of that process</font>

515
00:23:48,990 --> 00:23:54,390
the reason why that that's a big deal is

516
00:23:51,480 --> 00:23:57,870
anybody use that script before that

517
00:23:54,390 --> 00:24:00,720
script is over 600k in size it includes

518
00:23:57,870 --> 00:24:02,790
both the 32<font color="#CCCCCC"> bit and the 64 bit versions</font>

519
00:24:00,720 --> 00:24:06,120
of<font color="#E5E5E5"> mimi cats just basics before encoded</font>

520
00:24:02,790 --> 00:24:07,560
it's it's gigantic so if you can recover

521
00:24:06,120 --> 00:24:09,600
<font color="#E5E5E5">this outer am you can pretty much</font>

522
00:24:07,560 --> 00:24:11,220
recover any script if you just<font color="#CCCCCC"> know what</font>

523
00:24:09,600 --> 00:24:13,469
to look for right we got lucky here

524
00:24:11,220 --> 00:24:16,230
because we actually<font color="#E5E5E5"> knew that the bad</font>

525
00:24:13,470 --> 00:24:17,790
guys<font color="#CCCCCC"> were using mimi cats right but you</font>

526
00:24:16,230 --> 00:24:19,290
know whatever your string search was the

527
00:24:17,790 --> 00:24:21,180
<font color="#CCCCCC">better the better you know your</font>

528
00:24:19,290 --> 00:24:22,409
adversary you know or what your

529
00:24:21,180 --> 00:24:25,560
attackers will likely have done the<font color="#E5E5E5"> more</font>

530
00:24:22,410 --> 00:24:27,240
likely you might<font color="#E5E5E5"> hit pay dirt so this is</font>

531
00:24:25,560 --> 00:24:30,990
just as simply looking for strings in

532
00:24:27,240 --> 00:24:32,850
that power shell process and then same

533
00:24:30,990 --> 00:24:33,270
idea taking that power shell process now

534
00:24:32,850 --> 00:24:35,490
doing the

535
00:24:33,270 --> 00:24:37,740
regular expression looking for just ps1

536
00:24:35,490 --> 00:24:39,930
files the<font color="#CCCCCC"> PowerShell scripts and you'll</font>

537
00:24:37,740 --> 00:24:42,000
notice well not only did<font color="#CCCCCC"> they run mini</font>

538
00:24:39,930 --> 00:24:43,890
cats looks like they also ran get Vulcan

539
00:24:42,000 --> 00:24:46,050
<font color="#CCCCCC">intial</font><font color="#E5E5E5"> credentials and invoke DLL</font>

540
00:24:43,890 --> 00:24:47,640
injection and now I've got a directory

541
00:24:46,050 --> 00:24:49,500
looks like they like to dump their tools

542
00:24:47,640 --> 00:24:54,990
into the temp folder that we can<font color="#E5E5E5"> then</font>

543
00:24:49,500 --> 00:24:57,000
take advantage of all right so lots of a

544
00:24:54,990 --> 00:24:59,880
lots of kind of clever ways that we can

545
00:24:57,000 --> 00:25:02,310
pull<font color="#CCCCCC"> this data out but of course every</font>

546
00:24:59,880 --> 00:25:04,920
measure has countermeasures<font color="#E5E5E5"> and so</font>

547
00:25:02,310 --> 00:25:08,040
instead<font color="#E5E5E5"> of maybe actually using scripts</font>

548
00:25:04,920 --> 00:25:10,500
one way<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> can execute code in</font>

549
00:25:08,040 --> 00:25:12,330
<font color="#E5E5E5">PowerShell is you can use this encoded</font>

550
00:25:10,500 --> 00:25:14,880
command option so you<font color="#E5E5E5"> never seen this</font>

551
00:25:12,330 --> 00:25:16,530
before good you if you haven't you're

552
00:25:14,880 --> 00:25:19,590
going to see in a moment basically you

553
00:25:16,530 --> 00:25:23,600
can just pass the<font color="#CCCCCC"> PowerShell instance a</font>

554
00:25:19,590 --> 00:25:26,070
big list of base64 encoded script or

555
00:25:23,600 --> 00:25:28,980
functions and it will nicely run it that

556
00:25:26,070 --> 00:25:30,929
way and never touches disc<font color="#E5E5E5"> only run in</font>

557
00:25:28,980 --> 00:25:32,610
memory<font color="#CCCCCC"> all right and</font><font color="#E5E5E5"> then you can even</font>

558
00:25:30,930 --> 00:25:34,980
if you have power shell remoting do this

559
00:25:32,610 --> 00:25:36,719
now remotely across one or more systems

560
00:25:34,980 --> 00:25:39,990
in your environment I'm very very

561
00:25:36,720 --> 00:25:41,430
stealthy the good news<font color="#CCCCCC"> is it is limited</font>

562
00:25:39,990 --> 00:25:43,920
<font color="#CCCCCC">an amount</font><font color="#E5E5E5"> of characters that</font><font color="#CCCCCC"> you can</font>

563
00:25:41,430 --> 00:25:46,380
pass so for<font color="#E5E5E5"> instance invoke mimikatz is</font>

564
00:25:43,920 --> 00:25:49,440
far too large to actually<font color="#E5E5E5"> kind of encode</font>

565
00:25:46,380 --> 00:25:51,600
this way the other good news is we can

566
00:25:49,440 --> 00:25:53,670
still recover these encoded commands in

567
00:25:51,600 --> 00:25:55,800
some cases easier than the other scripts

568
00:25:53,670 --> 00:25:57,510
because they look more unusual and once

569
00:25:55,800 --> 00:25:59,580
<font color="#E5E5E5">we recover them we can just unbasic ste</font>

570
00:25:57,510 --> 00:26:00,870
for them and we're good to go we can

571
00:25:59,580 --> 00:26:03,720
figure out what it was actually run on

572
00:26:00,870 --> 00:26:05,699
the box and I don't know if anybody's

573
00:26:03,720 --> 00:26:08,250
deep into the weeds but now I'm noticing

574
00:26:05,700 --> 00:26:10,170
I don't want to deviate too far forget a

575
00:26:08,250 --> 00:26:12,360
lot to talk about but I had<font color="#E5E5E5"> the most</font>

576
00:26:10,170 --> 00:26:15,300
recent kind of ninja activity now is not

577
00:26:12,360 --> 00:26:18,510
just<font color="#E5E5E5"> encoding in base 64 they're also</font>

578
00:26:15,300 --> 00:26:20,690
now basically<font color="#E5E5E5"> foreing</font><font color="#CCCCCC"> g zips which have</font>

579
00:26:18,510 --> 00:26:23,310
<font color="#E5E5E5">shellcode in them and then on the fly</font>

580
00:26:20,690 --> 00:26:25,950
unzipping the shellcode and executing

581
00:26:23,310 --> 00:26:27,690
the individual<font color="#CCCCCC"> bytecode on the fly all</font>

582
00:26:25,950 --> 00:26:29,880
and ramp all from just<font color="#E5E5E5"> kind of an</font>

583
00:26:27,690 --> 00:26:33,210
encoded script<font color="#CCCCCC"> alright so</font><font color="#E5E5E5"> it's getting</font>

584
00:26:29,880 --> 00:26:36,510
yeah the attack is getting more advanced

585
00:26:33,210 --> 00:26:38,070
<font color="#E5E5E5">and more advanced almost every day so</font>

586
00:26:36,510 --> 00:26:39,360
<font color="#E5E5E5">anyway we can kind of find these you</font>

587
00:26:38,070 --> 00:26:42,960
know one of the things<font color="#E5E5E5"> I'm often looking</font>

588
00:26:39,360 --> 00:26:46,199
for is things like encode dash<font color="#CCCCCC"> encoded</font>

589
00:26:42,960 --> 00:26:47,070
command dash E and C one of the really

590
00:26:46,200 --> 00:26:48,600
frustrating

591
00:26:47,070 --> 00:26:51,750
parts of PowerShell from a defense

592
00:26:48,600 --> 00:26:54,120
standpoint is it is so flexible<font color="#E5E5E5"> all</font>

593
00:26:51,750 --> 00:26:55,710
<font color="#E5E5E5">right you can</font><font color="#CCCCCC"> name your options almost</font>

594
00:26:54,120 --> 00:26:58,590
anything you want as long as you can

595
00:26:55,710 --> 00:27:00,240
provide enough data to be a unique match

596
00:26:58,590 --> 00:27:02,070
you<font color="#E5E5E5"> can pretty much change your</font>

597
00:27:00,240 --> 00:27:03,720
parameters to be anything you<font color="#E5E5E5"> can't kind</font>

598
00:27:02,070 --> 00:27:05,639
<font color="#E5E5E5">of there's not just one way to do an</font>

599
00:27:03,720 --> 00:27:06,600
encoded command for instance<font color="#E5E5E5"> all right</font>

600
00:27:05,639 --> 00:27:08,399
so you got<font color="#E5E5E5"> to look for all these</font>

601
00:27:06,600 --> 00:27:11,070
different permutations and variations

602
00:27:08,399 --> 00:27:14,428
which is kind<font color="#E5E5E5"> of a nightmare the good</font>

603
00:27:11,070 --> 00:27:16,019
news is once you find one though very

604
00:27:14,429 --> 00:27:19,110
often your attacker will end up using

605
00:27:16,019 --> 00:27:20,250
the exact<font color="#CCCCCC"> same way each time and that we</font>

606
00:27:19,110 --> 00:27:23,789
all know to look for it<font color="#E5E5E5"> in the future on</font>

607
00:27:20,250 --> 00:27:25,259
<font color="#E5E5E5">other systems so this is</font><font color="#CCCCCC"> what it kind of</font>

608
00:27:23,789 --> 00:27:26,850
looks like it just turns out that if

609
00:27:25,259 --> 00:27:29,639
they actually<font color="#E5E5E5"> use that</font><font color="#CCCCCC"> dashing coded</font>

610
00:27:26,850 --> 00:27:31,289
command I found a really<font color="#CCCCCC"> great string to</font>

611
00:27:29,639 --> 00:27:33,870
look for is this<font color="#E5E5E5"> raw argument string</font>

612
00:27:31,289 --> 00:27:37,139
very calmly it will actually encapsulate

613
00:27:33,870 --> 00:27:39,658
the entire base 64 encoded script just

614
00:27:37,139 --> 00:27:41,758
nicely sitting there again in<font color="#CCCCCC"> the out of</font>

615
00:27:39,659 --> 00:27:44,159
<font color="#CCCCCC">the powershell process all</font><font color="#E5E5E5"> I got</font><font color="#CCCCCC"> to do</font>

616
00:27:41,759 --> 00:27:47,399
is take this now on base 64 it and

617
00:27:44,159 --> 00:27:49,259
figure out what that script was so<font color="#E5E5E5"> right</font>

618
00:27:47,399 --> 00:27:52,289
now that tends to<font color="#CCCCCC"> be a pretty reliable</font>

619
00:27:49,259 --> 00:27:58,919
way to pull that those encoded scripts

620
00:27:52,289 --> 00:28:01,019
at a ramp<font color="#E5E5E5"> okay I mean that works really</font>

621
00:27:58,919 --> 00:28:02,610
well<font color="#CCCCCC"> all right so hopefully you got a</font>

622
00:28:01,019 --> 00:28:03,870
<font color="#E5E5E5">feeling that yeah I can pull out things</font>

623
00:28:02,610 --> 00:28:05,549
<font color="#E5E5E5">like what scripts are run I might be</font>

624
00:28:03,870 --> 00:28:07,590
able<font color="#E5E5E5"> to even pull out</font><font color="#CCCCCC"> encoded scripts or</font>

625
00:28:05,549 --> 00:28:10,230
even the entire<font color="#E5E5E5"> contents of a script</font>

626
00:28:07,590 --> 00:28:12,658
<font color="#E5E5E5">like we saw invoke mimikatz the only</font>

627
00:28:10,230 --> 00:28:15,120
<font color="#E5E5E5">problem is you actually have to</font><font color="#CCCCCC"> have ram</font>

628
00:28:12,659 --> 00:28:17,279
all right and even if you have ram how

629
00:28:15,120 --> 00:28:19,350
you scale it right so one of the big

630
00:28:17,279 --> 00:28:21,419
<font color="#CCCCCC">issues i see is yeah</font><font color="#E5E5E5"> i can go and if you</font>

631
00:28:19,350 --> 00:28:23,039
give<font color="#CCCCCC"> me a box that you</font><font color="#E5E5E5"> think is owned</font><font color="#CCCCCC"> i</font>

632
00:28:21,419 --> 00:28:25,409
can rip through it a few hours<font color="#CCCCCC"> later</font>

633
00:28:23,039 --> 00:28:27,059
<font color="#E5E5E5">have some great data for you but that</font>

634
00:28:25,409 --> 00:28:28,230
doesn't<font color="#CCCCCC"> really scale well you know one</font>

635
00:28:27,059 --> 00:28:30,928
of the things that<font color="#E5E5E5"> PowerShell does</font>

636
00:28:28,230 --> 00:28:33,690
really well from a red team side is it

637
00:28:30,929 --> 00:28:36,059
<font color="#E5E5E5">scales effortlessly so how do I actually</font>

638
00:28:33,690 --> 00:28:37,409
do this across thousands or tens of

639
00:28:36,059 --> 00:28:39,928
thousands of systems how do i search

640
00:28:37,409 --> 00:28:42,179
every box in my environment for

641
00:28:39,929 --> 00:28:44,879
malicious<font color="#E5E5E5"> powershell scripts and the</font>

642
00:28:42,179 --> 00:28:45,929
simple answer is most people can't so

643
00:28:44,879 --> 00:28:47,610
I'm hoping<font color="#CCCCCC"> that some of the takeaways</font>

644
00:28:45,929 --> 00:28:49,379
that you'll walk<font color="#E5E5E5"> away with today is your</font>

645
00:28:47,610 --> 00:28:50,879
go back and how are we<font color="#E5E5E5"> going to deal</font>

646
00:28:49,379 --> 00:28:52,469
<font color="#CCCCCC">with this right what are some options</font>

647
00:28:50,879 --> 00:28:54,240
and that's what this section is about

648
00:28:52,470 --> 00:28:57,510
trying<font color="#E5E5E5"> to give you a sneak preview of</font>

649
00:28:54,240 --> 00:28:59,129
some options and i'll show you some i'm

650
00:28:57,510 --> 00:29:00,960
going<font color="#E5E5E5"> to start showing you kind</font><font color="#CCCCCC"> of a</font>

651
00:28:59,129 --> 00:29:03,270
tool that the crowd strike has called

652
00:29:00,960 --> 00:29:05,039
<font color="#CCCCCC">Falcon host and basically what it is is</font>

653
00:29:03,270 --> 00:29:06,779
it's<font color="#CCCCCC"> an in point flight recorder</font>

654
00:29:05,039 --> 00:29:08,908
technology<font color="#CCCCCC"> all right so you'll see it</font>

655
00:29:06,779 --> 00:29:10,669
you'll see what it looks like but<font color="#CCCCCC"> very</font>

656
00:29:08,909 --> 00:29:14,850
similar if<font color="#E5E5E5"> you have carbon black or</font>

657
00:29:10,669 --> 00:29:17,309
<font color="#E5E5E5">taniam or microsoft sis mom is another</font>

658
00:29:14,850 --> 00:29:19,260
example of kind of a free kind of flight

659
00:29:17,309 --> 00:29:20,610
recorder tool out there but what's

660
00:29:19,260 --> 00:29:22,260
happening is these tools are running at

661
00:29:20,610 --> 00:29:25,620
the kernel level and they're basically

662
00:29:22,260 --> 00:29:27,000
recording kind of a just an amazing kind

663
00:29:25,620 --> 00:29:28,918
of granularity of activity that's

664
00:29:27,000 --> 00:29:31,289
happening on those systems including

665
00:29:28,919 --> 00:29:33,419
full command lines right which<font color="#E5E5E5"> is how I</font>

666
00:29:31,289 --> 00:29:35,220
got interested in all of this so let's

667
00:29:33,419 --> 00:29:37,350
kind of<font color="#E5E5E5"> take a look on the back in the</font>

668
00:29:35,220 --> 00:29:38,309
Falcon host is actually<font color="#CCCCCC"> splunk and so</font>

669
00:29:37,350 --> 00:29:40,408
what we're going to be doing is<font color="#E5E5E5"> looking</font>

670
00:29:38,309 --> 00:29:41,820
at kind of our raw data sitting in

671
00:29:40,409 --> 00:29:43,320
<font color="#CCCCCC">splunk and so</font><font color="#E5E5E5"> those are either</font><font color="#CCCCCC"> to splunk</font>

672
00:29:41,820 --> 00:29:45,960
users this should look<font color="#CCCCCC"> really familiar</font>

673
00:29:43,320 --> 00:29:49,139
and all<font color="#E5E5E5"> I've done here is you know do a</font>

674
00:29:45,960 --> 00:29:51,480
quick search for you know wmic nothing

675
00:29:49,140 --> 00:29:53,700
too exciting looks like we get 48 hits

676
00:29:51,480 --> 00:29:55,169
within that time frame and then I can

677
00:29:53,700 --> 00:29:57,240
start to look at what the command lines

678
00:29:55,169 --> 00:29:59,789
look like so you'll see we looks<font color="#E5E5E5"> like</font>

679
00:29:57,240 --> 00:30:02,309
we've got a process<font color="#E5E5E5"> call create</font><font color="#CCCCCC"> 44</font>

680
00:29:59,789 --> 00:30:08,190
netstat in this case all right not

681
00:30:02,309 --> 00:30:09,629
nothing terribly exciting there now then

682
00:30:08,190 --> 00:30:11,250
I can start to use<font color="#E5E5E5"> something like my</font>

683
00:30:09,630 --> 00:30:13,230
back end what's I can I mean imagine

684
00:30:11,250 --> 00:30:14,789
that whatever<font color="#CCCCCC"> you have you're</font><font color="#E5E5E5"> pulling</font>

685
00:30:13,230 --> 00:30:16,559
command lines from every box in your

686
00:30:14,789 --> 00:30:18,149
environment you're<font color="#E5E5E5"> dumping them to a big</font>

687
00:30:16,559 --> 00:30:20,190
database that's essentially what we're

688
00:30:18,149 --> 00:30:22,168
looking for looking<font color="#CCCCCC"> at here now I can</font>

689
00:30:20,190 --> 00:30:24,690
start to really pivotal that and kind of

690
00:30:22,169 --> 00:30:26,220
look for trends look for anomalies once

691
00:30:24,690 --> 00:30:28,169
I find<font color="#E5E5E5"> something look where else I've</font>

692
00:30:26,220 --> 00:30:29,730
seen it my environment<font color="#CCCCCC"> right that's</font>

693
00:30:28,169 --> 00:30:32,070
where we can actually start<font color="#CCCCCC"> to really</font>

694
00:30:29,730 --> 00:30:34,289
make an impact here<font color="#E5E5E5"> and so now I just</font>

695
00:30:32,070 --> 00:30:36,750
<font color="#CCCCCC">said well show me wmse and show me all</font>

696
00:30:34,289 --> 00:30:38,279
the different variations<font color="#E5E5E5"> so I just just</font>

697
00:30:36,750 --> 00:30:41,309
<font color="#E5E5E5">count them all up and show me what</font><font color="#CCCCCC"> the</font>

698
00:30:38,279 --> 00:30:43,470
most<font color="#E5E5E5"> popular wmic commands are all right</font>

699
00:30:41,309 --> 00:30:46,620
and so you notice that netstat command

700
00:30:43,470 --> 00:30:50,309
had a count<font color="#E5E5E5"> of 10 yeah we've got these</font>

701
00:30:46,620 --> 00:30:54,000
kind of different variations of commands

702
00:30:50,309 --> 00:30:57,658
going on there<font color="#CCCCCC"> okay so now let's</font><font color="#E5E5E5"> look at</font>

703
00:30:54,000 --> 00:30:59,429
<font color="#E5E5E5">a real attack so this was a command on</font>

704
00:30:57,659 --> 00:31:02,370
it when<font color="#CCCCCC"> i ran the</font><font color="#E5E5E5"> stumble upon it said</font>

705
00:30:59,429 --> 00:31:03,899
that looks really<font color="#CCCCCC"> interesting right what</font>

706
00:31:02,370 --> 00:31:08,250
looked really interesting is a couple

707
00:31:03,899 --> 00:31:12,090
<font color="#E5E5E5">things one is how many</font><font color="#CCCCCC"> have you ever</font>

708
00:31:08,250 --> 00:31:14,370
seen a<font color="#CCCCCC"> JPG execute man seems a little</font>

709
00:31:12,090 --> 00:31:14,949
unusual right to be honest this actually

710
00:31:14,370 --> 00:31:17,830
turns out to be a

711
00:31:14,950 --> 00:31:20,649
really good indicator if you have a way

712
00:31:17,830 --> 00:31:22,990
to actually identify everything that's

713
00:31:20,649 --> 00:31:24,939
executed like let's say you're in<font color="#CCCCCC"> your</font>

714
00:31:22,990 --> 00:31:27,429
event logs you're doing process creation

715
00:31:24,940 --> 00:31:29,700
events look for ones that don't have an

716
00:31:27,429 --> 00:31:33,750
executable extension right why do I have

717
00:31:29,700 --> 00:31:36,279
w.jpg executing from a command prompt

718
00:31:33,750 --> 00:31:41,100
the other thing<font color="#CCCCCC"> is the full command line</font>

719
00:31:36,279 --> 00:31:43,059
was actually this w.jpg space dot txt

720
00:31:41,100 --> 00:31:44,918
which<font color="#E5E5E5"> i thought was kind of ninja</font><font color="#CCCCCC"> i</font>

721
00:31:43,059 --> 00:31:47,200
didn't even realize<font color="#E5E5E5"> you could do that so</font>

722
00:31:44,919 --> 00:31:48,549
the actual output file name this was a

723
00:31:47,200 --> 00:31:50,380
credential dumper if<font color="#E5E5E5"> I remember</font>

724
00:31:48,549 --> 00:31:53,500
correctly the output file name was dot

725
00:31:50,380 --> 00:31:56,260
txt so<font color="#E5E5E5"> it</font><font color="#CCCCCC"> was just</font><font color="#E5E5E5"> an extension not even</font>

726
00:31:53,500 --> 00:32:00,880
a file name the other thing<font color="#CCCCCC"> that's</font>

727
00:31:56,260 --> 00:32:04,899
unusual about this is why is the parent

728
00:32:00,880 --> 00:32:06,850
process of cmd.exe win log on do I have

729
00:32:04,899 --> 00:32:10,629
any windows internals folks out there

730
00:32:06,850 --> 00:32:12,699
that normal I could<font color="#E5E5E5"> tell you it's not</font>

731
00:32:10,630 --> 00:32:15,610
normal does anyone know what what might

732
00:32:12,700 --> 00:32:17,620
cause it how do i<font color="#CCCCCC"> get a commit my blog</font>

733
00:32:15,610 --> 00:32:22,658
on process to actually spawn a command

734
00:32:17,620 --> 00:32:32,529
prompt see if my life demo will work

735
00:32:22,659 --> 00:32:35,409
here<font color="#CCCCCC"> got a I have a little vm anyone</font>

736
00:32:32,529 --> 00:32:37,210
ever heard of sticky keys super

737
00:32:35,409 --> 00:32:40,750
old-school attack literally walk up to a

738
00:32:37,210 --> 00:32:45,389
box hit shift five times see if it'll

739
00:32:40,750 --> 00:32:47,679
work so do<font color="#E5E5E5"> you want to run sticky keys</font>

740
00:32:45,389 --> 00:32:49,120
yeah why<font color="#CCCCCC"> not and you notice how it</font>

741
00:32:47,679 --> 00:32:52,029
dropped me straight to a command prompt

742
00:32:49,120 --> 00:32:54,129
this is<font color="#E5E5E5"> just a registry bit flip</font>

743
00:32:52,029 --> 00:32:56,139
literally<font color="#CCCCCC"> just change one registry key</font>

744
00:32:54,130 --> 00:32:58,210
and now I can go to what the

745
00:32:56,139 --> 00:33:01,120
accessibility options AK sticky keys or

746
00:32:58,210 --> 00:33:02,919
on boards keyboard or<font color="#CCCCCC"> on-screen keyboard</font>

747
00:33:01,120 --> 00:33:05,320
or whatever<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is and immediately</font>

748
00:33:02,919 --> 00:33:08,830
drops me to a prompt if I do Who am I on

749
00:33:05,320 --> 00:33:12,240
this you're going<font color="#E5E5E5"> to see it actually</font>

750
00:33:08,830 --> 00:33:17,470
drops me to a system level privileges

751
00:33:12,240 --> 00:33:19,690
which oops let me get rid of this<font color="#E5E5E5"> when I</font>

752
00:33:17,470 --> 00:33:26,110
so now I'm a system this<font color="#E5E5E5"> is a</font><font color="#CCCCCC"> fantastic</font>

753
00:33:19,690 --> 00:33:28,660
way from an attack perspective to

754
00:33:26,110 --> 00:33:30,159
create the ultimate back door let's

755
00:33:28,660 --> 00:33:31,299
imagine<font color="#E5E5E5"> that you've had your adversaries</font>

756
00:33:30,160 --> 00:33:33,640
they've been in your environment for

757
00:33:31,299 --> 00:33:35,139
three months right you successfully

758
00:33:33,640 --> 00:33:38,290
remediate your environment you kick them

759
00:33:35,140 --> 00:33:39,850
out<font color="#E5E5E5"> all right so spearfishing starts</font>

760
00:33:38,290 --> 00:33:43,059
again let's say two weeks later another

761
00:33:39,850 --> 00:33:44,590
user clicks on a link there back in you

762
00:33:43,059 --> 00:33:46,120
remediated all your passwords though

763
00:33:44,590 --> 00:33:48,189
right so they don't have domain a band

764
00:33:46,120 --> 00:33:51,280
cred through back to back to kind<font color="#CCCCCC"> of</font>

765
00:33:48,190 --> 00:33:53,799
square one again if they can actually

766
00:33:51,280 --> 00:33:55,899
<font color="#E5E5E5">say rdp to a boxer they've set up sticky</font>

767
00:33:53,799 --> 00:33:57,549
keys and you didn't clean that up there

768
00:33:55,900 --> 00:33:59,890
immediately back to system they can dump

769
00:33:57,549 --> 00:34:01,780
creds elevate and they're back in the

770
00:33:59,890 --> 00:34:06,400
game again and you<font color="#E5E5E5"> don't even get an</font>

771
00:34:01,780 --> 00:34:08,830
event log entry for so it's all before

772
00:34:06,400 --> 00:34:10,270
<font color="#E5E5E5">that actually did all that happens right</font>

773
00:34:08,830 --> 00:34:12,520
so today we're also looking for<font color="#E5E5E5"> these</font>

774
00:34:10,270 --> 00:34:15,879
kind<font color="#E5E5E5"> of weird anomalies like cmd.exe</font>

775
00:34:12,520 --> 00:34:18,879
running under the<font color="#E5E5E5"> IAS thread or running</font>

776
00:34:15,879 --> 00:34:20,918
under like the wind log process and so

777
00:34:18,879 --> 00:34:22,600
that's the kind of the value of

778
00:34:20,918 --> 00:34:24,190
recording this information in the back

779
00:34:22,600 --> 00:34:25,418
end is you get much<font color="#CCCCCC"> more granular</font>

780
00:34:24,190 --> 00:34:28,629
information about these strange

781
00:34:25,418 --> 00:34:30,129
anomalies but anyway found that<font color="#CCCCCC"> a couple</font>

782
00:34:28,629 --> 00:34:32,409
<font color="#CCCCCC">different ways one was a</font><font color="#E5E5E5"> very strange</font>

783
00:34:30,129 --> 00:34:34,710
named executable in other was why is my

784
00:34:32,409 --> 00:34:37,810
logon process dropping off command

785
00:34:34,710 --> 00:34:39,639
prompts and by the<font color="#E5E5E5"> way this</font><font color="#CCCCCC"> is this is</font>

786
00:34:37,810 --> 00:34:42,340
the the change you have to<font color="#E5E5E5"> make in the</font>

787
00:34:39,639 --> 00:34:44,320
registry so you basically goes software

788
00:34:42,340 --> 00:34:46,690
<font color="#CCCCCC">Microsoft Windows</font><font color="#E5E5E5"> conversion image file</font>

789
00:34:44,320 --> 00:34:52,480
execution options and<font color="#CCCCCC"> you</font><font color="#E5E5E5"> just change</font>

790
00:34:46,690 --> 00:34:56,230
this set<font color="#CCCCCC"> C dot exe add a debugger to it</font>

791
00:34:52,480 --> 00:34:57,730
what's the debugger command exe right so

792
00:34:56,230 --> 00:34:59,560
now you also need a way<font color="#CCCCCC"> to actually</font>

793
00:34:57,730 --> 00:35:02,619
monitor your registry key store in your

794
00:34:59,560 --> 00:35:04,240
<font color="#E5E5E5">environment you should be looking</font><font color="#CCCCCC"> for</font>

795
00:35:02,619 --> 00:35:06,490
that<font color="#E5E5E5"> if you actually see any changes</font><font color="#CCCCCC"> to</font>

796
00:35:04,240 --> 00:35:10,140
that key you<font color="#E5E5E5"> probably have something bad</font>

797
00:35:06,490 --> 00:35:13,899
going on<font color="#CCCCCC"> alright here's another example</font>

798
00:35:10,140 --> 00:35:15,490
so this was a<font color="#E5E5E5"> PowerShell process if i</font>

799
00:35:13,900 --> 00:35:18,670
zoom in you'll actually see this power

800
00:35:15,490 --> 00:35:20,109
shell process spawned off 103 different

801
00:35:18,670 --> 00:35:22,630
commands so whatever script it was

802
00:35:20,109 --> 00:35:24,279
running<font color="#E5E5E5"> was a pretty big deal we get a</font>

803
00:35:22,630 --> 00:35:27,130
little<font color="#E5E5E5"> idea it was just kind of kicking</font>

804
00:35:24,280 --> 00:35:30,400
off a bunch<font color="#E5E5E5"> of nets pings and scheduled</font>

805
00:35:27,130 --> 00:35:32,680
tasks right so a little<font color="#E5E5E5"> strange and what</font>

806
00:35:30,400 --> 00:35:34,450
was happening here was this script was

807
00:35:32,680 --> 00:35:37,089
being<font color="#E5E5E5"> used by attackers to essentially</font>

808
00:35:34,450 --> 00:35:38,980
remotely push out credential dumping

809
00:35:37,090 --> 00:35:40,060
software through the environment dump

810
00:35:38,980 --> 00:35:42,010
credentials and<font color="#E5E5E5"> then pull</font>

811
00:35:40,060 --> 00:35:45,070
all the data back so basically<font color="#E5E5E5"> we're</font>

812
00:35:42,010 --> 00:35:46,450
<font color="#CCCCCC">looking for domain admin Curtis so they</font>

813
00:35:45,070 --> 00:35:47,860
were they were basically pushing out

814
00:35:46,450 --> 00:35:50,439
there malware using<font color="#E5E5E5"> scheduled tasks</font>

815
00:35:47,860 --> 00:35:52,690
through a powershell script and you can

816
00:35:50,440 --> 00:35:55,630
see the<font color="#E5E5E5"> command down here it was one of</font>

817
00:35:52,690 --> 00:35:57,610
those encoded commands and if you have

818
00:35:55,630 --> 00:35:59,230
the<font color="#E5E5E5"> right tool it should be pulling out</font>

819
00:35:57,610 --> 00:36:02,190
the full command line so now all we had

820
00:35:59,230 --> 00:36:05,260
to do is<font color="#CCCCCC"> just pull out</font><font color="#E5E5E5"> that base64 and</font>

821
00:36:02,190 --> 00:36:06,220
do very<font color="#CCCCCC"> very simple reversing to figure</font>

822
00:36:05,260 --> 00:36:09,670
out what what was actually happening

823
00:36:06,220 --> 00:36:11,620
there that alone should be unusual if

824
00:36:09,670 --> 00:36:13,630
you have this well<font color="#E5E5E5"> I would just set up a</font>

825
00:36:11,620 --> 00:36:15,009
trigger to basically show me whenever an

826
00:36:13,630 --> 00:36:17,940
encoded command is run in my environment

827
00:36:15,010 --> 00:36:23,770
and tell your admins not to do that

828
00:36:17,940 --> 00:36:25,930
please<font color="#E5E5E5"> all right one more does anyone</font>

829
00:36:23,770 --> 00:36:30,850
know what task E and G dot exe what

830
00:36:25,930 --> 00:36:32,980
process that is your task scheduler<font color="#E5E5E5"> and</font>

831
00:36:30,850 --> 00:36:35,770
so this<font color="#E5E5E5"> is task scheduler kicking off</font>

832
00:36:32,980 --> 00:36:39,040
<font color="#E5E5E5">PowerShell we can see the command down</font>

833
00:36:35,770 --> 00:36:41,440
here<font color="#E5E5E5"> this is another very very evil or</font>

834
00:36:39,040 --> 00:36:44,110
commonly evil powershell this is invoke

835
00:36:41,440 --> 00:36:47,080
expression happening here<font color="#E5E5E5"> and it's going</font>

836
00:36:44,110 --> 00:36:49,510
<font color="#E5E5E5">out to the</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> and downloading a</font>

837
00:36:47,080 --> 00:36:51,640
script and this would<font color="#E5E5E5"> be the URL or the</font>

838
00:36:49,510 --> 00:36:53,230
IP aware<font color="#E5E5E5"> it's downloading it from all</font>

839
00:36:51,640 --> 00:36:55,450
right very<font color="#E5E5E5"> very common so I don't</font><font color="#CCCCCC"> even</font>

840
00:36:53,230 --> 00:36:56,890
<font color="#CCCCCC">have to drop my</font><font color="#E5E5E5"> script down I can</font>

841
00:36:55,450 --> 00:36:59,890
<font color="#E5E5E5">actually just tell powershell hey go to</font>

842
00:36:56,890 --> 00:37:02,379
this location and pull my script and run

843
00:36:59,890 --> 00:37:05,080
it<font color="#E5E5E5"> and in this case this was a scheduled</font>

844
00:37:02,380 --> 00:37:06,730
task every two hours would run go out

845
00:37:05,080 --> 00:37:08,799
pull whatever script happen to be at

846
00:37:06,730 --> 00:37:10,630
<font color="#CCCCCC">that location at that time and execute</font>

847
00:37:08,800 --> 00:37:13,900
it so is essentially their command and

848
00:37:10,630 --> 00:37:19,270
control all right very very simply

849
00:37:13,900 --> 00:37:20,770
implemented in<font color="#E5E5E5"> PowerShell</font><font color="#CCCCCC"> alright so of</font>

850
00:37:19,270 --> 00:37:22,090
course once we kind<font color="#E5E5E5"> of have if we're</font>

851
00:37:20,770 --> 00:37:24,280
collecting all this data if you've got

852
00:37:22,090 --> 00:37:26,440
all this data in a database this is now

853
00:37:24,280 --> 00:37:28,330
just<font color="#E5E5E5"> like saying well show me anything</font>

854
00:37:26,440 --> 00:37:30,100
with these parameters<font color="#E5E5E5"> PowerShell running</font>

855
00:37:28,330 --> 00:37:31,569
with these parameters and now you can

856
00:37:30,100 --> 00:37:34,230
<font color="#E5E5E5">see these would be all of your hosts</font>

857
00:37:31,570 --> 00:37:36,640
that<font color="#E5E5E5"> have likely been attacked by those</font>

858
00:37:34,230 --> 00:37:40,390
adversaries because we're seeing every

859
00:37:36,640 --> 00:37:41,680
command that fits that that query being

860
00:37:40,390 --> 00:37:44,319
run on individual computers in the

861
00:37:41,680 --> 00:37:46,569
enterprise this is where we have<font color="#CCCCCC"> to get</font>

862
00:37:44,320 --> 00:37:49,300
I don't<font color="#CCCCCC"> care what tool you have to do it</font>

863
00:37:46,570 --> 00:37:51,220
we got to be collecting this data<font color="#E5E5E5"> all</font>

864
00:37:49,300 --> 00:37:54,780
<font color="#E5E5E5">right it's the</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> way to really make</font>

865
00:37:51,220 --> 00:37:54,779
<font color="#CCCCCC">it feasible to investigate this stuff</font>

866
00:37:55,770 --> 00:38:00,790
<font color="#CCCCCC">alright some good news Microsoft has not</font>

867
00:37:59,080 --> 00:38:05,259
been totally oblivious to this problem

868
00:38:00,790 --> 00:38:07,720
they have actually<font color="#E5E5E5"> implemented some some</font>

869
00:38:05,260 --> 00:38:09,340
free or built-in solutions to start

870
00:38:07,720 --> 00:38:10,810
doing<font color="#E5E5E5"> this there may</font><font color="#CCCCCC"> not be the most</font>

871
00:38:09,340 --> 00:38:12,520
<font color="#E5E5E5">perfect solutions but they're better</font>

872
00:38:10,810 --> 00:38:14,920
than nothing so some of you may be

873
00:38:12,520 --> 00:38:17,230
familiar that when server 2012 came out

874
00:38:14,920 --> 00:38:19,930
we do have now a capability to actually

875
00:38:17,230 --> 00:38:21,940
turn on command line oddity if you don't

876
00:38:19,930 --> 00:38:23,589
have this on in your environment you

877
00:38:21,940 --> 00:38:25,750
should really go back and consider<font color="#E5E5E5"> it</font>

878
00:38:23,590 --> 00:38:28,000
figure out<font color="#CCCCCC"> a way to do it all right so</font>

879
00:38:25,750 --> 00:38:30,520
what this<font color="#CCCCCC"> does is you do have to turn on</font>

880
00:38:28,000 --> 00:38:32,170
process creation events which almost no

881
00:38:30,520 --> 00:38:33,730
one turns on process tracking because

882
00:38:32,170 --> 00:38:36,670
it's it fills<font color="#E5E5E5"> up the event log so</font>

883
00:38:33,730 --> 00:38:38,410
quickly right it is handy on its own but

884
00:38:36,670 --> 00:38:40,630
if you turn on process tracking and

885
00:38:38,410 --> 00:38:42,520
command lines well all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a sudden</font>

886
00:38:40,630 --> 00:38:44,290
you've got<font color="#CCCCCC"> a pretty good way to go back</font>

887
00:38:42,520 --> 00:38:46,720
in time and identify any malicious

888
00:38:44,290 --> 00:38:48,610
command lines that<font color="#CCCCCC"> had been run so it</font>

889
00:38:46,720 --> 00:38:50,830
originally only worked<font color="#E5E5E5"> on 2012 and</font>

890
00:38:48,610 --> 00:38:52,630
<font color="#CCCCCC">Windows 8 1 but it was so popular</font>

891
00:38:50,830 --> 00:38:54,970
they've now gone back and ported it back

892
00:38:52,630 --> 00:38:57,280
so there was a patch you know four or

893
00:38:54,970 --> 00:39:00,160
five months<font color="#CCCCCC"> ago that now</font><font color="#E5E5E5"> windows 7</font><font color="#CCCCCC"> and</font>

894
00:38:57,280 --> 00:39:02,680
above can actually turn on this this

895
00:39:00,160 --> 00:39:04,359
tracking so this<font color="#E5E5E5"> is what it looks like</font>

896
00:39:02,680 --> 00:39:08,710
so we're<font color="#CCCCCC"> just in the event logs you'll</font>

897
00:39:04,360 --> 00:39:10,660
get these event 4688 events now just

898
00:39:08,710 --> 00:39:13,840
zoom in here and so<font color="#E5E5E5"> this is just a</font>

899
00:39:10,660 --> 00:39:15,100
process creation event for FTP and now

900
00:39:13,840 --> 00:39:17,770
you'll notice that we get the full

901
00:39:15,100 --> 00:39:20,080
process command line and so<font color="#E5E5E5"> now I know</font>

902
00:39:17,770 --> 00:39:21,610
not<font color="#CCCCCC"> only ftp was run it looks</font><font color="#E5E5E5"> like they</font>

903
00:39:20,080 --> 00:39:23,890
<font color="#E5E5E5">were running using a series</font><font color="#CCCCCC"> of commands</font>

904
00:39:21,610 --> 00:39:26,530
and something called<font color="#CCCCCC"> one dot log sitting</font>

905
00:39:23,890 --> 00:39:27,879
in the sea temp folder much more

906
00:39:26,530 --> 00:39:30,460
information<font color="#CCCCCC"> I would have had previously</font>

907
00:39:27,880 --> 00:39:32,710
and<font color="#CCCCCC"> then if you</font><font color="#E5E5E5"> look at this other one</font>

908
00:39:30,460 --> 00:39:34,780
this is another 4688 event this<font color="#E5E5E5"> is for a</font>

909
00:39:32,710 --> 00:39:37,090
PowerShell event and this was a

910
00:39:34,780 --> 00:39:38,950
PowerShell example using an encoded

911
00:39:37,090 --> 00:39:40,960
script and it will capture the entire

912
00:39:38,950 --> 00:39:41,980
contents<font color="#CCCCCC"> of that encoded script that</font>

913
00:39:40,960 --> 00:39:45,880
then we can piece together what happened

914
00:39:41,980 --> 00:39:46,810
there so very very<font color="#E5E5E5"> powerful it's just</font>

915
00:39:45,880 --> 00:39:49,300
you're probably going to<font color="#E5E5E5"> have the</font>

916
00:39:46,810 --> 00:39:52,060
centralizer logs because<font color="#CCCCCC"> the amount</font><font color="#E5E5E5"> of</font>

917
00:39:49,300 --> 00:39:54,160
volume is<font color="#E5E5E5"> going to be so big you should</font>

918
00:39:52,060 --> 00:39:55,630
be doing<font color="#E5E5E5"> that anyway</font><font color="#CCCCCC"> to be honest and</font>

919
00:39:54,160 --> 00:39:57,940
you got to<font color="#E5E5E5"> get it turned on you got to</font>

920
00:39:55,630 --> 00:40:04,630
<font color="#E5E5E5">get processed tracking auditing in your</font>

921
00:39:57,940 --> 00:40:07,150
environment and<font color="#E5E5E5"> the PowerShell team has</font>

922
00:40:04,630 --> 00:40:09,100
<font color="#E5E5E5">been trying to mitigate some of this</font>

923
00:40:07,150 --> 00:40:11,740
initial disaster that they've unleashed

924
00:40:09,100 --> 00:40:13,600
and so we have had a series of each

925
00:40:11,740 --> 00:40:16,149
version of PowerShell adding it a little

926
00:40:13,600 --> 00:40:19,180
better logging each time to be honest

927
00:40:16,150 --> 00:40:22,900
the old-school<font color="#E5E5E5"> PowerShell version to you</font>

928
00:40:19,180 --> 00:40:24,609
<font color="#CCCCCC">could you could transcript but it was</font>

929
00:40:22,900 --> 00:40:26,800
not<font color="#E5E5E5"> a</font><font color="#CCCCCC"> very nice way to do you could put</font>

930
00:40:24,610 --> 00:40:28,540
in your user profiles to start a

931
00:40:26,800 --> 00:40:31,780
transcript and record all their commands

932
00:40:28,540 --> 00:40:33,730
into a into a file really hard to manage

933
00:40:31,780 --> 00:40:36,280
really easy to<font color="#E5E5E5"> get around if you're a</font>

934
00:40:33,730 --> 00:40:38,950
bad guy<font color="#E5E5E5"> so that's probably not very</font>

935
00:40:36,280 --> 00:40:43,150
useful module logging showed up in in

936
00:40:38,950 --> 00:40:45,700
<font color="#CCCCCC">PowerShell version 3 again the data is</font>

937
00:40:43,150 --> 00:40:47,830
really funky if it's all you got turn it

938
00:40:45,700 --> 00:40:51,250
on but<font color="#E5E5E5"> it's really hard to work with its</font>

939
00:40:47,830 --> 00:40:54,310
really<font color="#E5E5E5"> noisy I find it almost useless to</font>

940
00:40:51,250 --> 00:40:56,440
be honest finally though when<font color="#CCCCCC"> we get to</font>

941
00:40:54,310 --> 00:40:58,270
powershell version 5 they've just

942
00:40:56,440 --> 00:41:00,160
<font color="#CCCCCC">released what they call script Brock</font>

943
00:40:58,270 --> 00:41:01,870
logging and like a transcription feature

944
00:41:00,160 --> 00:41:04,029
we'll see an example of it in a<font color="#CCCCCC"> minute</font>

945
00:41:01,870 --> 00:41:06,880
this is finally getting the point where

946
00:41:04,030 --> 00:41:09,400
we can actually use<font color="#CCCCCC"> PowerShell logging</font>

947
00:41:06,880 --> 00:41:10,690
the only downside<font color="#CCCCCC"> is how many of you are</font>

948
00:41:09,400 --> 00:41:14,110
in<font color="#CCCCCC"> PowerShell five in the in the</font>

949
00:41:10,690 --> 00:41:16,120
enterprise I bet zero I bet<font color="#E5E5E5"> most of you</font>

950
00:41:14,110 --> 00:41:18,280
are still sitting a<font color="#E5E5E5"> PowerShell to write</font>

951
00:41:16,120 --> 00:41:22,240
but as we start to move to windows 10

952
00:41:18,280 --> 00:41:24,100
Server 2016 that's all PowerShell v5 by

953
00:41:22,240 --> 00:41:26,950
default so we're<font color="#E5E5E5"> going to slowly get</font>

954
00:41:24,100 --> 00:41:29,290
there and so this<font color="#E5E5E5"> is how you turn that</font>

955
00:41:26,950 --> 00:41:33,100
auditing on so we're just in the group

956
00:41:29,290 --> 00:41:34,990
policy and<font color="#CCCCCC"> you can see now if you have</font>

957
00:41:33,100 --> 00:41:36,759
power show version 5 rolled out you can

958
00:41:34,990 --> 00:41:41,140
turn<font color="#E5E5E5"> on script</font><font color="#CCCCCC"> bak logging you can turn</font>

959
00:41:36,760 --> 00:41:43,210
<font color="#E5E5E5">on the transcription capability and this</font>

960
00:41:41,140 --> 00:41:45,720
is going to give very very detailed

961
00:41:43,210 --> 00:41:47,770
information now in this powershell log

962
00:41:45,720 --> 00:41:49,540
traditionally you'd have almost nothing

963
00:41:47,770 --> 00:41:52,390
of use in this log but if you've got

964
00:41:49,540 --> 00:41:54,310
<font color="#E5E5E5">powershell version 5 with transcription</font>

965
00:41:52,390 --> 00:41:56,620
or script bak logging now you're going

966
00:41:54,310 --> 00:41:58,690
to get like the full contents of every

967
00:41:56,620 --> 00:42:02,380
script so that's what we're seeing here

968
00:41:58,690 --> 00:42:04,180
this<font color="#CCCCCC"> was a keylogger so we can kind of</font>

969
00:42:02,380 --> 00:42:05,950
see here that was was being run there's

970
00:42:04,180 --> 00:42:08,140
actually from the power split project we

971
00:42:05,950 --> 00:42:10,180
just slightly off you skated and we

972
00:42:08,140 --> 00:42:12,640
nicely get the entire block<font color="#CCCCCC"> the entire</font>

973
00:42:10,180 --> 00:42:14,940
function that was run by that attacker

974
00:42:12,640 --> 00:42:14,940
here

975
00:42:16,359 --> 00:42:21,670
well now i will tell you you run invoke

976
00:42:19,509 --> 00:42:23,890
<font color="#CCCCCC">mimi</font><font color="#E5E5E5"> cats with script by logging turned</font>

977
00:42:21,670 --> 00:42:26,710
on it's like something like over a

978
00:42:23,890 --> 00:42:30,249
hundred events<font color="#E5E5E5"> kickoff five megabytes of</font>

979
00:42:26,710 --> 00:42:32,410
logs for one script it's crazy it's

980
00:42:30,249 --> 00:42:34,299
almost the sad part<font color="#CCCCCC"> is I don't think</font>

981
00:42:32,410 --> 00:42:36,940
Microsoft had a place to<font color="#E5E5E5"> put the data</font>

982
00:42:34,299 --> 00:42:38,259
right they stuffed it into event logs I

983
00:42:36,940 --> 00:42:39,730
you know they<font color="#CCCCCC"> don't really</font><font color="#E5E5E5"> have any</font>

984
00:42:38,259 --> 00:42:41,259
other<font color="#E5E5E5"> place to</font><font color="#CCCCCC"> really log things</font>

985
00:42:39,730 --> 00:42:43,089
effectively so it's<font color="#E5E5E5"> probably the right</font>

986
00:42:41,259 --> 00:42:45,759
choice but those either do event log

987
00:42:43,089 --> 00:42:48,130
analysis<font color="#E5E5E5"> no it's really painful to get</font>

988
00:42:45,759 --> 00:42:49,660
through event logs so now one script is

989
00:42:48,130 --> 00:42:53,559
going to create over a hundred logs

990
00:42:49,660 --> 00:42:54,970
event entries the good news is this just

991
00:42:53,559 --> 00:42:57,220
recently<font color="#CCCCCC"> came out it's a little github</font>

992
00:42:54,970 --> 00:43:00,308
project you pointed at that<font color="#E5E5E5"> PowerShell</font>

993
00:42:57,220 --> 00:43:01,959
operational log it will grab all of the

994
00:43:00,309 --> 00:43:04,769
different script locks put them all into

995
00:43:01,960 --> 00:43:06,910
<font color="#CCCCCC">one single entry</font><font color="#E5E5E5"> I'll put them into csv</font>

996
00:43:04,769 --> 00:43:09,368
<font color="#CCCCCC">all right so to give it either grab</font>

997
00:43:06,910 --> 00:43:11,649
everything put into one or / script that

998
00:43:09,369 --> 00:43:13,829
<font color="#E5E5E5">was run it'll dump out individual CSVs</font>

999
00:43:11,650 --> 00:43:21,009
for you so really really<font color="#E5E5E5"> powerful</font>

1000
00:43:13,829 --> 00:43:22,480
capability to make it more useful so<font color="#CCCCCC"> i</font>

1001
00:43:21,009 --> 00:43:25,150
guess the the moral story is there's

1002
00:43:22,480 --> 00:43:26,759
hope we have a long way to get there we

1003
00:43:25,150 --> 00:43:29,470
need some way to collect command lines

1004
00:43:26,759 --> 00:43:31,660
we need some way to bring these<font color="#E5E5E5"> all data</font>

1005
00:43:29,470 --> 00:43:34,720
all into a database put it in a readable

1006
00:43:31,660 --> 00:43:36,940
format that we can<font color="#E5E5E5"> actually analyze but</font>

1007
00:43:34,720 --> 00:43:40,319
<font color="#CCCCCC">I</font><font color="#E5E5E5"> tell</font><font color="#CCCCCC"> you once you do this is an</font>

1008
00:43:36,940 --> 00:43:42,519
incredibly powerful way to defeat

1009
00:43:40,319 --> 00:43:45,480
advanced adversaries I mean we're seeing

1010
00:43:42,519 --> 00:43:47,618
the old days of following the malware

1011
00:43:45,480 --> 00:43:50,710
it's just simply isn't working anymore

1012
00:43:47,619 --> 00:43:52,180
the attackers have realized that<font color="#E5E5E5"> that's</font>

1013
00:43:50,710 --> 00:43:53,980
how we've been identifying where they've

1014
00:43:52,180 --> 00:43:55,509
been<font color="#E5E5E5"> I used to follow the bouncing ball</font>

1015
00:43:53,980 --> 00:43:57,160
foul over the malware's been you can

1016
00:43:55,509 --> 00:43:58,900
tell where the attackers have been well

1017
00:43:57,160 --> 00:44:00,640
<font color="#E5E5E5">you probably heard the the techniques of</font>

1018
00:43:58,900 --> 00:44:02,019
things like living off the land you know

1019
00:44:00,640 --> 00:44:03,940
when you when i'm in a<font color="#E5E5E5"> powershell</font>

1020
00:44:02,019 --> 00:44:05,979
environment it's not even<font color="#E5E5E5"> hard to live</font>

1021
00:44:03,940 --> 00:44:08,680
off the land the land is bountiful right

1022
00:44:05,980 --> 00:44:10,630
<font color="#E5E5E5">i have</font><font color="#CCCCCC"> hit</font><font color="#E5E5E5"> land of milk and honey</font><font color="#CCCCCC"> i can</font>

1023
00:44:08,680 --> 00:44:12,759
go<font color="#E5E5E5"> and I can do anything alright so this</font>

1024
00:44:10,630 --> 00:44:15,009
is why we're<font color="#E5E5E5"> going to see this much much</font>

1025
00:44:12,759 --> 00:44:17,349
fewer binaries dropping on a box or

1026
00:44:15,009 --> 00:44:18,910
malware and just attackers moving

1027
00:44:17,349 --> 00:44:20,920
straight to powershell if you don't have

1028
00:44:18,910 --> 00:44:22,808
a<font color="#E5E5E5"> way to collect this information you're</font>

1029
00:44:20,920 --> 00:44:24,730
<font color="#E5E5E5">going to be absolutely blind I'm</font>

1030
00:44:22,809 --> 00:44:27,089
probably<font color="#E5E5E5"> already are absolutely blind to</font>

1031
00:44:24,730 --> 00:44:27,089
be honest

1032
00:44:27,690 --> 00:44:32,470
<font color="#E5E5E5">alright here's that that conference I</font>

1033
00:44:30,730 --> 00:44:34,720
wanted to tell<font color="#E5E5E5"> you guys about this is</font>

1034
00:44:32,470 --> 00:44:36,368
coming in it was is it June June of this

1035
00:44:34,720 --> 00:44:38,319
year salt lake as I mentioned<font color="#E5E5E5"> we don't</font>

1036
00:44:36,369 --> 00:44:39,970
get them very often so we will<font color="#CCCCCC"> have a</font>

1037
00:44:38,319 --> 00:44:41,680
bunch of great at night talks if you

1038
00:44:39,970 --> 00:44:44,399
want to go you<font color="#E5E5E5"> can go for free just go</font>

1039
00:44:41,680 --> 00:44:46,480
make sure<font color="#E5E5E5"> to put</font><font color="#CCCCCC"> your name on the</font><font color="#E5E5E5"> list I</font>

1040
00:44:44,400 --> 00:44:47,829
would love to<font color="#E5E5E5"> take questions you guys</font>

1041
00:44:46,480 --> 00:44:50,530
have been<font color="#E5E5E5"> kind of quiet I know it's</font>

1042
00:44:47,829 --> 00:44:52,240
after lunch but I know power shells not

1043
00:44:50,530 --> 00:45:00,190
boring so there must be something

1044
00:44:52,240 --> 00:45:01,959
exciting to talk about right yep yeah

1045
00:45:00,190 --> 00:45:03,520
the question is is the slideshow going

1046
00:45:01,960 --> 00:45:05,859
to be available I can absolutely get it

1047
00:45:03,520 --> 00:45:08,319
to you for one thing you can email me

1048
00:45:05,859 --> 00:45:11,020
this is<font color="#E5E5E5"> also being recorded so</font><font color="#CCCCCC"> the</font>

1049
00:45:08,319 --> 00:45:12,670
recording will<font color="#CCCCCC"> be up as</font><font color="#E5E5E5"> well but yeah if</font>

1050
00:45:11,020 --> 00:45:14,890
you'd like a copy the deck or something

1051
00:45:12,670 --> 00:45:23,680
feel free to drop me a line up I'll<font color="#E5E5E5"> get</font>

1052
00:45:14,890 --> 00:45:28,328
<font color="#E5E5E5">it to you yes sir yeah so Google rapid</font>

1053
00:45:23,680 --> 00:45:30,549
response it's a it's<font color="#CCCCCC"> a neat project so</font>

1054
00:45:28,329 --> 00:45:32,230
Google rapper responses really if you

1055
00:45:30,549 --> 00:45:35,230
remember the Aurora attack that happened

1056
00:45:32,230 --> 00:45:36,579
around I guess 2010 now so Google hacked

1057
00:45:35,230 --> 00:45:38,770
by China they were the<font color="#E5E5E5"> first major</font>

1058
00:45:36,579 --> 00:45:41,410
company to come out and say hey we self

1059
00:45:38,770 --> 00:45:43,660
admit we got owned right as part of that

1060
00:45:41,410 --> 00:45:45,160
Google really really up their game they

1061
00:45:43,660 --> 00:45:47,290
hired I think some of the best in some

1062
00:45:45,160 --> 00:45:49,089
responders in the business they invested

1063
00:45:47,290 --> 00:45:51,190
heavily in security they looked at a

1064
00:45:49,089 --> 00:45:52,480
bunch of tools and they said we don't

1065
00:45:51,190 --> 00:45:53,859
<font color="#E5E5E5">really see one that meets our needs</font>

1066
00:45:52,480 --> 00:45:56,290
we're going to build our own and that

1067
00:45:53,859 --> 00:45:58,058
was google rapid response they're still

1068
00:45:56,290 --> 00:46:00,640
actively using it actually it's not just

1069
00:45:58,059 --> 00:46:02,710
them<font color="#E5E5E5"> I know a lot of the big companies I</font>

1070
00:46:00,640 --> 00:46:05,348
know like Yahoo's using it I'm pretty

1071
00:46:02,710 --> 00:46:06,640
sure<font color="#E5E5E5"> Amazon's using it it's a the</font>

1072
00:46:05,349 --> 00:46:09,670
wonderful thing is they open sourced it

1073
00:46:06,640 --> 00:46:12,970
as well<font color="#E5E5E5"> so I think it's a fantastic</font>

1074
00:46:09,670 --> 00:46:15,190
project it's I still see it as alpha I

1075
00:46:12,970 --> 00:46:17,980
see very few organizations that have

1076
00:46:15,190 --> 00:46:19,750
rolled it out completely most that I

1077
00:46:17,980 --> 00:46:22,420
know overusing it basically as a

1078
00:46:19,750 --> 00:46:24,339
collection tool so they'll as you<font color="#E5E5E5"> figure</font>

1079
00:46:22,420 --> 00:46:25,990
out<font color="#E5E5E5"> a box is compromised they'll push</font>

1080
00:46:24,339 --> 00:46:28,299
out an agent collect data and<font color="#E5E5E5"> then pull</font>

1081
00:46:25,990 --> 00:46:30,759
it back it's very<font color="#E5E5E5"> effective at that i</font>

1082
00:46:28,299 --> 00:46:33,160
think it's a it's a little harder<font color="#E5E5E5"> to get</font>

1083
00:46:30,760 --> 00:46:35,170
it running kind of consistently across

1084
00:46:33,160 --> 00:46:36,520
your whole your whole enterprise you're

1085
00:46:35,170 --> 00:46:38,170
going to<font color="#E5E5E5"> need dedicated resources from</font>

1086
00:46:36,520 --> 00:46:39,520
what I hear I have to get that running

1087
00:46:38,170 --> 00:46:40,990
but it's a<font color="#E5E5E5"> really neat project I think</font>

1088
00:46:39,520 --> 00:46:41,349
<font color="#CCCCCC">everybody should</font><font color="#E5E5E5"> be aware of it and</font>

1089
00:46:40,990 --> 00:46:42,700
should be

1090
00:46:41,349 --> 00:46:44,559
looking at it because it's just<font color="#CCCCCC"> getting</font>

1091
00:46:42,700 --> 00:46:46,479
better and better and they're investing

1092
00:46:44,559 --> 00:46:51,279
a lot of resources into it so it's

1093
00:46:46,479 --> 00:46:54,098
called google rapid response what do you

1094
00:46:51,279 --> 00:46:56,769
think<font color="#CCCCCC"> powershell good bad</font><font color="#E5E5E5"> we're all</font>

1095
00:46:54,099 --> 00:46:58,569
going to die we'll definitely<font color="#E5E5E5"> have a job</font>

1096
00:46:56,769 --> 00:47:03,008
for<font color="#CCCCCC"> the foreseeable future will tell you</font>

1097
00:46:58,569 --> 00:47:04,749
that<font color="#E5E5E5"> it's a I tell you it's I really I</font>

1098
00:47:03,009 --> 00:47:06,670
think Microsoft has made some great

1099
00:47:04,749 --> 00:47:07,979
gains you know from<font color="#E5E5E5"> a security</font>

1100
00:47:06,670 --> 00:47:10,150
perspective I think they've really taken

1101
00:47:07,979 --> 00:47:12,308
security seriously over the last decade

1102
00:47:10,150 --> 00:47:14,680
but somebody was asleep at<font color="#E5E5E5"> the wheel</font>

1103
00:47:12,309 --> 00:47:16,509
when PowerShell got released because how

1104
00:47:14,680 --> 00:47:20,049
you would create something so amazing so

1105
00:47:16,509 --> 00:47:22,450
incredible and then not really you<font color="#CCCCCC"> know</font>

1106
00:47:20,049 --> 00:47:25,150
immediately have a way to lock it down

1107
00:47:22,450 --> 00:47:26,890
and to audit it is just<font color="#CCCCCC"> amazing like who</font>

1108
00:47:25,150 --> 00:47:29,650
thought that was a good idea<font color="#CCCCCC"> right I</font>

1109
00:47:26,890 --> 00:47:30,940
mean we're in trouble and of course I

1110
00:47:29,650 --> 00:47:32,759
know we have a<font color="#CCCCCC"> lot of red teamers you're</font>

1111
00:47:30,940 --> 00:47:35,289
like good<font color="#E5E5E5"> I hope you</font><font color="#CCCCCC"> don't have a</font><font color="#E5E5E5"> way</font>

1112
00:47:32,759 --> 00:47:38,470
but we're<font color="#CCCCCC"> catching up with you so be</font>

1113
00:47:35,289 --> 00:47:39,970
careful<font color="#E5E5E5"> all right well thank you</font>

1114
00:47:38,470 --> 00:47:41,499
everybody i'll be up here 40 watts ask

1115
00:47:39,970 --> 00:47:43,649
questions enjoy the rest<font color="#CCCCCC"> of the</font>

1116
00:47:41,499 --> 00:47:43,649
conference

