1
00:00:00,000 --> 00:00:05,819
um all right<font color="#E5E5E5"> let's just jump into things</font>

2
00:00:03,120 --> 00:00:08,460
here just to reiterate my bio there

3
00:00:05,819 --> 00:00:11,519
Scott Piper on dabba doo on<font color="#CCCCCC"> twitter</font>

4
00:00:08,460 --> 00:00:14,490
those are zeros not o's the text that's

5
00:00:11,519 --> 00:00:15,870
the cool thing to do in infosec so as

6
00:00:14,490 --> 00:00:18,480
you<font color="#CCCCCC"> said I've been</font><font color="#E5E5E5"> in this</font><font color="#CCCCCC"> business for</font>

7
00:00:15,870 --> 00:00:20,490
about a decade<font color="#E5E5E5"> now developed all sorts</font>

8
00:00:18,480 --> 00:00:21,779
of different tools from something

9
00:00:20,490 --> 00:00:23,788
similar to<font color="#CCCCCC"> coo coo bought something</font>

10
00:00:21,779 --> 00:00:27,448
similar to Facebook's OS query or

11
00:00:23,789 --> 00:00:29,490
<font color="#CCCCCC">Mannion's response similar to those not</font>

12
00:00:27,449 --> 00:00:32,189
those products themselves but I guess

13
00:00:29,490 --> 00:00:34,769
competitors that have been more private

14
00:00:32,189 --> 00:00:36,180
and then recently<font color="#E5E5E5"> I found the company</font>

15
00:00:34,770 --> 00:00:38,520
called summer out and<font color="#CCCCCC"> ordered develop an</font>

16
00:00:36,180 --> 00:00:40,950
endpoint security product what that

17
00:00:38,520 --> 00:00:42,809
means is an aspect of that product is to

18
00:00:40,950 --> 00:00:44,010
do application whitelisting and so

19
00:00:42,809 --> 00:00:45,780
authentic code is one of the

20
00:00:44,010 --> 00:00:47,879
technologies that's used in application

21
00:00:45,780 --> 00:00:49,590
whitelisting so<font color="#E5E5E5"> I'm just going to give</font>

22
00:00:47,879 --> 00:00:51,870
you<font color="#E5E5E5"> guys an overview of what authentic</font>

23
00:00:49,590 --> 00:00:55,860
code is how to use it<font color="#CCCCCC"> and some of the</font>

24
00:00:51,870 --> 00:00:58,108
details about it so authentic code um if

25
00:00:55,860 --> 00:01:01,769
you right click on a file on windows and

26
00:00:58,109 --> 00:01:03,149
select properties and for a file<font color="#CCCCCC"> that is</font>

27
00:01:01,770 --> 00:01:05,790
signed you'll see that digital

28
00:01:03,149 --> 00:01:09,000
signatures tab so in this example here

29
00:01:05,790 --> 00:01:10,710
this is um adobe reader that<font color="#E5E5E5"> i looked at</font>

30
00:01:09,000 --> 00:01:14,369
and so you can<font color="#E5E5E5"> see that it's signed by</font>

31
00:01:10,710 --> 00:01:19,080
adobe systems there um authentic code is

32
00:01:14,369 --> 00:01:21,659
a<font color="#CCCCCC"> standard that is used it had or it has</font>

33
00:01:19,080 --> 00:01:26,789
a lot of standards that it's built on so

34
00:01:21,659 --> 00:01:29,939
for<font color="#E5E5E5"> example p KS c CS number</font><font color="#CCCCCC"> seven</font><font color="#E5E5E5"> and a</font>

35
00:01:26,790 --> 00:01:31,320
bunch of other i guess just acronyms and

36
00:01:29,939 --> 00:01:34,020
<font color="#E5E5E5">i'll go through some</font><font color="#CCCCCC"> of those and how</font>

37
00:01:31,320 --> 00:01:35,699
their use later and then so it works on

38
00:01:34,020 --> 00:01:38,130
most people are most familiar with<font color="#CCCCCC"> it</font>

39
00:01:35,700 --> 00:01:42,030
working<font color="#E5E5E5"> on executable files dll sis</font>

40
00:01:38,130 --> 00:01:43,679
files when you install an MSI file those

41
00:01:42,030 --> 00:01:45,030
can also be signed<font color="#E5E5E5"> but a lot of other</font>

42
00:01:43,680 --> 00:01:46,770
things<font color="#CCCCCC"> can</font><font color="#E5E5E5"> be signed as well so it was</font>

43
00:01:45,030 --> 00:01:49,350
originally created for active X Files

44
00:01:46,770 --> 00:01:51,929
actually<font color="#CCCCCC"> Java applets can be signed with</font>

45
00:01:49,350 --> 00:01:54,329
it and even<font color="#CCCCCC"> PowerShell scripts which are</font>

46
00:01:51,930 --> 00:01:56,759
just text files can be signed with it so

47
00:01:54,329 --> 00:01:59,939
it can really sign anything if you want

48
00:01:56,759 --> 00:02:01,860
to try and ensure the integrity and be

49
00:01:59,939 --> 00:02:04,189
able to verify where a file came from

50
00:02:01,860 --> 00:02:07,110
authentic code is a<font color="#E5E5E5"> solution for that</font>

51
00:02:04,189 --> 00:02:08,940
and so so i should also state just

52
00:02:07,110 --> 00:02:11,129
authentic code in general you can think

53
00:02:08,940 --> 00:02:13,910
<font color="#E5E5E5">of it a lot like SSL basically all the</font>

54
00:02:11,129 --> 00:02:17,609
same technologies including

55
00:02:13,910 --> 00:02:19,770
<font color="#CCCCCC">x509 and pkc s number</font><font color="#E5E5E5"> seven they're all</font>

56
00:02:17,610 --> 00:02:22,620
those different<font color="#CCCCCC"> things are within</font><font color="#E5E5E5"> SSL</font>

57
00:02:19,770 --> 00:02:26,400
you confirm<font color="#CCCCCC"> that a file came from a</font><font color="#E5E5E5"> cert</font>

58
00:02:22,620 --> 00:02:28,319
from a place because it's been signed by

59
00:02:26,400 --> 00:02:30,090
certificate that was in it that was

60
00:02:28,319 --> 00:02:31,920
itself signed by a certificate authority

61
00:02:30,090 --> 00:02:32,880
or there's some type of chain of trust

62
00:02:31,920 --> 00:02:34,890
that goes up to<font color="#CCCCCC"> that</font><font color="#E5E5E5"> certificate</font>

63
00:02:32,880 --> 00:02:37,230
authority so anything that you know

64
00:02:34,890 --> 00:02:43,319
about SSL is going to work a lot in<font color="#CCCCCC"> the</font>

65
00:02:37,230 --> 00:02:46,170
same ways for authentic code so why

66
00:02:43,319 --> 00:02:48,780
<font color="#E5E5E5">would</font><font color="#CCCCCC"> you code sign files um in some</font>

67
00:02:46,170 --> 00:02:52,140
cases you have to so if you want<font color="#CCCCCC"> to run</font>

68
00:02:48,780 --> 00:02:54,380
a windows 64 bit driver on vista or

69
00:02:52,140 --> 00:02:57,119
above you're going to have to sign it

70
00:02:54,380 --> 00:02:59,160
additionally it's going to avoid some

71
00:02:57,120 --> 00:03:01,080
air so on<font color="#CCCCCC"> internet explorer when you try</font>

72
00:02:59,160 --> 00:03:02,970
<font color="#E5E5E5">and download a file that has not been</font>

73
00:03:01,080 --> 00:03:05,280
code sign and you're one of<font color="#CCCCCC"> the first</font>

74
00:03:02,970 --> 00:03:06,780
people to download that file you're

75
00:03:05,280 --> 00:03:08,040
going to end up<font color="#E5E5E5"> getting this error</font>

76
00:03:06,780 --> 00:03:09,600
message there and so if<font color="#E5E5E5"> you're a</font>

77
00:03:08,040 --> 00:03:10,829
business and you're trying to provide

78
00:03:09,600 --> 00:03:12,780
some software to people some people

79
00:03:10,830 --> 00:03:15,269
might not want<font color="#E5E5E5"> to click on that and that</font>

80
00:03:12,780 --> 00:03:17,820
might hurt your revenue ultimately and

81
00:03:15,269 --> 00:03:19,829
it just it's it's<font color="#E5E5E5"> really just a way to</font>

82
00:03:17,820 --> 00:03:22,500
establish trust and a lot<font color="#CCCCCC"> of different</font>

83
00:03:19,829 --> 00:03:23,940
<font color="#CCCCCC">ways</font><font color="#E5E5E5"> so as a developer these are the</font>

84
00:03:22,500 --> 00:03:26,190
reasons that you<font color="#E5E5E5"> want to do it and I'll</font>

85
00:03:23,940 --> 00:03:28,440
discuss later<font color="#E5E5E5"> on why an administrator</font>

86
00:03:26,190 --> 00:03:30,359
you would want people<font color="#E5E5E5"> to do this and</font>

87
00:03:28,440 --> 00:03:33,570
then additionally it gives you access to

88
00:03:30,360 --> 00:03:36,930
windows air reports so if you are a

89
00:03:33,570 --> 00:03:38,220
software company and your software

90
00:03:36,930 --> 00:03:40,049
unfortunately has a bug in it and

91
00:03:38,220 --> 00:03:41,489
crashes on systems and those systems

92
00:03:40,049 --> 00:03:43,890
ended up sending windows error reports

93
00:03:41,489 --> 00:03:45,829
back to microsoft com if you have

94
00:03:43,890 --> 00:03:48,630
informed Microsoft that this certificate

95
00:03:45,829 --> 00:03:50,670
that that file was signed with belongs

96
00:03:48,630 --> 00:03:52,290
to you you can actually<font color="#CCCCCC"> get access to</font>

97
00:03:50,670 --> 00:03:54,089
those airports and so<font color="#E5E5E5"> they're anonymized</font>

98
00:03:52,290 --> 00:03:55,500
and everything but<font color="#E5E5E5"> basically help you as</font>

99
00:03:54,090 --> 00:03:57,780
a software developer be able to identify

100
00:03:55,500 --> 00:04:01,380
where bugs exist in your product<font color="#E5E5E5"> out</font>

101
00:03:57,780 --> 00:04:02,519
there in the wild um so the other reason

102
00:04:01,380 --> 00:04:04,140
of course is all the cool kids are doing

103
00:04:02,519 --> 00:04:06,540
it you want<font color="#E5E5E5"> to be popular and all the</font>

104
00:04:04,140 --> 00:04:08,040
popular kids are doing it so here at the

105
00:04:06,540 --> 00:04:09,510
top we have<font color="#CCCCCC"> a list of certificate</font>

106
00:04:08,040 --> 00:04:11,970
authorities and below those are some of

107
00:04:09,510 --> 00:04:13,590
<font color="#E5E5E5">the different products that have been</font>

108
00:04:11,970 --> 00:04:15,209
signed with those certificates or

109
00:04:13,590 --> 00:04:17,220
there's a chain of trust that<font color="#E5E5E5"> goes up to</font>

110
00:04:15,209 --> 00:04:19,680
those certificate authorities so there

111
00:04:17,220 --> 00:04:23,370
on the left you have<font color="#CCCCCC"> a google chrome and</font>

112
00:04:19,680 --> 00:04:25,919
<font color="#E5E5E5">merck the IRC client they're all chained</font>

113
00:04:23,370 --> 00:04:27,300
up to<font color="#E5E5E5"> thought</font><font color="#CCCCCC"> Microsoft of course has</font>

114
00:04:25,919 --> 00:04:30,479
internet explorer and office

115
00:04:27,300 --> 00:04:32,129
below it and<font color="#CCCCCC"> yep there's a variety</font><font color="#E5E5E5"> of</font>

116
00:04:30,479 --> 00:04:34,229
other<font color="#CCCCCC"> applications a lot of popular</font>

117
00:04:32,129 --> 00:04:36,060
applications are all signed and one of

118
00:04:34,229 --> 00:04:37,770
the important takeaways from this is not

119
00:04:36,060 --> 00:04:39,900
<font color="#CCCCCC">only are a lot of popular applications</font>

120
00:04:37,770 --> 00:04:41,159
sign but it they're signed all across

121
00:04:39,900 --> 00:04:44,008
the board with different certificate

122
00:04:41,159 --> 00:04:45,900
authorities so it doesn't<font color="#E5E5E5"> really matter</font>

123
00:04:44,009 --> 00:04:49,020
which certificate<font color="#E5E5E5"> authority you sign</font>

124
00:04:45,900 --> 00:04:51,179
your files with much like<font color="#E5E5E5"> SSL you</font>

125
00:04:49,020 --> 00:04:53,430
oftentimes don't know or don't<font color="#E5E5E5"> care who</font>

126
00:04:51,180 --> 00:04:56,789
the certificate authority is that has

127
00:04:53,430 --> 00:05:00,539
granted that ssl certificate same

128
00:04:56,789 --> 00:05:02,759
<font color="#E5E5E5">concept applies to authentic code so a</font>

129
00:05:00,539 --> 00:05:04,440
quick<font color="#E5E5E5"> history of this um authentic code</font>

130
00:05:02,759 --> 00:05:07,590
is actually almost two decades old now

131
00:05:04,440 --> 00:05:10,139
starting in April 1996 microsoft

132
00:05:07,590 --> 00:05:12,419
submitted basically a request for

133
00:05:10,139 --> 00:05:15,780
proposals to w3c<font color="#E5E5E5"> and international</font>

134
00:05:12,419 --> 00:05:18,508
standards body and then shortly<font color="#E5E5E5"> after</font>

135
00:05:15,780 --> 00:05:20,549
that it announced that it had authentic

136
00:05:18,509 --> 00:05:21,960
code and it had a partnership with

137
00:05:20,550 --> 00:05:24,479
verisign it was one<font color="#E5E5E5"> of the original</font>

138
00:05:21,960 --> 00:05:27,628
certificate authorities it worked on

139
00:05:24,479 --> 00:05:28,860
<font color="#E5E5E5">Windows NT and windows 95 this is my</font>

140
00:05:27,629 --> 00:05:31,199
understanding I haven't actually tested

141
00:05:28,860 --> 00:05:34,020
on Windows 95 in any way this is just

142
00:05:31,199 --> 00:05:35,610
trying<font color="#E5E5E5"> to look through old like usenet</font>

143
00:05:34,020 --> 00:05:38,099
postings and stuff to try and understand

144
00:05:35,610 --> 00:05:39,539
a lot of the<font color="#CCCCCC"> history</font><font color="#E5E5E5"> behind things and</font>

145
00:05:38,099 --> 00:05:42,690
so the<font color="#CCCCCC"> reason it came</font><font color="#E5E5E5"> out was actually</font>

146
00:05:39,539 --> 00:05:44,940
for<font color="#E5E5E5"> Internet Explorer version 3.0 and</font>

147
00:05:42,690 --> 00:05:46,919
that was for activex components so

148
00:05:44,940 --> 00:05:49,770
activex components are basically<font color="#CCCCCC"> dll's</font>

149
00:05:46,919 --> 00:05:51,479
that you used to download<font color="#E5E5E5"> and run on</font>

150
00:05:49,770 --> 00:05:54,330
your computer<font color="#E5E5E5"> that various sites would</font>

151
00:05:51,479 --> 00:05:56,219
provide and people realize like a maybe

152
00:05:54,330 --> 00:05:57,750
<font color="#E5E5E5">we should associate some type of trust</font>

153
00:05:56,219 --> 00:05:59,580
with these things<font color="#E5E5E5"> in some way so people</font>

154
00:05:57,750 --> 00:06:02,069
aren't just randomly downloading them

155
00:05:59,580 --> 00:06:03,539
from random sites and so authentic code

156
00:06:02,069 --> 00:06:07,050
was put in<font color="#E5E5E5"> place in order to establish</font>

157
00:06:03,539 --> 00:06:08,400
that trust to say yes this random dll

158
00:06:07,050 --> 00:06:09,330
you're downloading on the internet and

159
00:06:08,400 --> 00:06:12,029
are<font color="#E5E5E5"> going to be running on your system</font>

160
00:06:09,330 --> 00:06:15,120
actually came from<font color="#E5E5E5"> your bank or whoever</font>

161
00:06:12,029 --> 00:06:16,949
it happened to be um so when it first

162
00:06:15,120 --> 00:06:20,460
came out there were<font color="#E5E5E5"> 20 companies that</font>

163
00:06:16,949 --> 00:06:23,219
were initially<font color="#E5E5E5"> signing their code of</font>

164
00:06:20,460 --> 00:06:25,500
those 20 companies I only recognized two

165
00:06:23,219 --> 00:06:28,740
of them autodesk in citrix it seems all

166
00:06:25,500 --> 00:06:31,289
18 others all have passed away<font color="#E5E5E5"> in some</font>

167
00:06:28,740 --> 00:06:33,900
manner or been bought or whatever

168
00:06:31,289 --> 00:06:35,520
happens to<font color="#E5E5E5"> be but so so it originally</font>

169
00:06:33,900 --> 00:06:37,349
came out and there were people doing it

170
00:06:35,520 --> 00:06:38,909
so it wasn't you know just they came out

171
00:06:37,349 --> 00:06:39,390
<font color="#E5E5E5">with this technology and no one happened</font>

172
00:06:38,909 --> 00:06:43,800
to be<font color="#E5E5E5"> using</font>

173
00:06:39,390 --> 00:06:46,890
it was<font color="#E5E5E5"> actually used so about a year</font>

174
00:06:43,800 --> 00:06:49,050
<font color="#CCCCCC">later um I believe it was</font><font color="#E5E5E5"> on March third</font>

175
00:06:46,890 --> 00:06:51,030
I had a lot<font color="#CCCCCC"> of trouble trying to track</font>

176
00:06:49,050 --> 00:06:53,010
this down but authentic code 2.0 was

177
00:06:51,030 --> 00:06:54,960
released and<font color="#E5E5E5"> the reason they needed to</font>

178
00:06:53,010 --> 00:06:57,750
do this was because it added time

179
00:06:54,960 --> 00:06:59,580
stamping and I'll get into<font color="#E5E5E5"> why this is</font>

180
00:06:57,750 --> 00:07:01,830
necessary but basically one<font color="#CCCCCC"> of their</font>

181
00:06:59,580 --> 00:07:04,080
original root certificates was set to

182
00:07:01,830 --> 00:07:06,120
expire basically two months after

183
00:07:04,080 --> 00:07:08,370
authentic<font color="#E5E5E5"> 0 2 point 0 came out and</font>

184
00:07:06,120 --> 00:07:10,230
without<font color="#CCCCCC"> getting authentic</font><font color="#E5E5E5"> 0 2 point 0</font>

185
00:07:08,370 --> 00:07:12,330
out there and without getting<font color="#E5E5E5"> time</font>

186
00:07:10,230 --> 00:07:13,980
stamping in place all the files<font color="#E5E5E5"> that</font>

187
00:07:12,330 --> 00:07:16,320
have been signed previously with a chain

188
00:07:13,980 --> 00:07:19,980
of trust up to that certificate that was

189
00:07:16,320 --> 00:07:22,610
going to expire<font color="#CCCCCC"> it basically was not it</font>

190
00:07:19,980 --> 00:07:24,930
was voided it didn't understand how to

191
00:07:22,610 --> 00:07:27,060
establish that chain of<font color="#E5E5E5"> trust anymore</font>

192
00:07:24,930 --> 00:07:29,640
because it said you know<font color="#E5E5E5"> I your their</font>

193
00:07:27,060 --> 00:07:31,290
certificate is expired and so I can't

194
00:07:29,640 --> 00:07:34,740
trust<font color="#E5E5E5"> that this is actually from a</font>

195
00:07:31,290 --> 00:07:38,130
trusted certificate anymore um so in

196
00:07:34,740 --> 00:07:40,620
1997 also um this guy<font color="#E5E5E5"> Peter</font><font color="#CCCCCC"> Gutman who's</font>

197
00:07:38,130 --> 00:07:42,870
pretty famous<font color="#CCCCCC"> creepy I believe he's new</font>

198
00:07:40,620 --> 00:07:44,550
zealand er maybe I Australian but he

199
00:07:42,870 --> 00:07:46,740
reverse engineered the format so

200
00:07:44,550 --> 00:07:49,170
although authentic code came out and it

201
00:07:46,740 --> 00:07:50,910
kind of explained there was like some

202
00:07:49,170 --> 00:07:52,770
documentation to specify how it should

203
00:07:50,910 --> 00:07:55,470
be<font color="#E5E5E5"> used and everything the actual file</font>

204
00:07:52,770 --> 00:07:57,180
format for it wasn't understood and so

205
00:07:55,470 --> 00:08:01,620
Peter Gutman's papers very often

206
00:07:57,180 --> 00:08:04,350
Reverend and windows 2000 came out in

207
00:08:01,620 --> 00:08:06,300
<font color="#CCCCCC">two thousand and it that came with</font>

208
00:08:04,350 --> 00:08:08,790
software restriction policies and so

209
00:08:06,300 --> 00:08:10,320
that<font color="#E5E5E5"> was really kind of first I guess</font>

210
00:08:08,790 --> 00:08:13,020
technology that you<font color="#CCCCCC"> could</font><font color="#E5E5E5"> actually use</font>

211
00:08:10,320 --> 00:08:14,670
with authentic code and so what that

212
00:08:13,020 --> 00:08:16,169
does it actually allows you to do

213
00:08:14,670 --> 00:08:17,880
application whitelisting so beginning

214
00:08:16,170 --> 00:08:20,130
windows 2000 it's still in<font color="#CCCCCC"> windows</font>

215
00:08:17,880 --> 00:08:21,960
products you can implement application

216
00:08:20,130 --> 00:08:25,170
whitelisting it is a pain to use though

217
00:08:21,960 --> 00:08:26,280
and<font color="#CCCCCC"> i'll get into why you probably don't</font>

218
00:08:25,170 --> 00:08:28,350
actually want to<font color="#CCCCCC"> use software</font>

219
00:08:26,280 --> 00:08:30,330
restriction policies unless you have<font color="#CCCCCC"> a</font>

220
00:08:28,350 --> 00:08:31,830
very static environment so maybe you

221
00:08:30,330 --> 00:08:32,760
have a point of sales terminal or

222
00:08:31,830 --> 00:08:38,579
something like that that you're never

223
00:08:32,760 --> 00:08:40,289
<font color="#E5E5E5">touching and then 2006 vista 64bit came</font>

224
00:08:38,580 --> 00:08:41,610
out and required drivers to<font color="#E5E5E5"> be signed</font>

225
00:08:40,289 --> 00:08:43,860
and that<font color="#E5E5E5"> was really the first time when</font>

226
00:08:41,610 --> 00:08:45,930
people<font color="#E5E5E5"> are like oh I actually need</font><font color="#CCCCCC"> to do</font>

227
00:08:43,860 --> 00:08:47,400
this so before<font color="#CCCCCC"> it was always like</font><font color="#E5E5E5"> oh all</font>

228
00:08:45,930 --> 00:08:48,569
the cool kids are doing it so maybe<font color="#E5E5E5"> I</font>

229
00:08:47,400 --> 00:08:50,340
<font color="#CCCCCC">should do it but don't really have a</font>

230
00:08:48,570 --> 00:08:52,240
reason to and then all the<font color="#CCCCCC"> sudden was</font>

231
00:08:50,340 --> 00:08:54,160
like oh if I want my code<font color="#CCCCCC"> to run</font>

232
00:08:52,240 --> 00:08:56,860
stuff<font color="#E5E5E5"> I actually have to do this for</font>

233
00:08:54,160 --> 00:08:59,500
<font color="#E5E5E5">people that were</font><font color="#CCCCCC"> riding drivers and so</font>

234
00:08:56,860 --> 00:09:00,730
it still has not you know been enforced

235
00:08:59,500 --> 00:09:03,339
that everyone has to do<font color="#E5E5E5"> this because</font>

236
00:09:00,730 --> 00:09:04,810
usual and code so your normal code that

237
00:09:03,339 --> 00:09:07,480
you're<font color="#CCCCCC"> running it doesn't</font><font color="#E5E5E5"> have to be</font>

238
00:09:04,810 --> 00:09:10,300
signed but that was<font color="#E5E5E5"> kind of the first</font>

239
00:09:07,480 --> 00:09:13,510
requirement for it and then in 2008

240
00:09:10,300 --> 00:09:14,859
<font color="#E5E5E5">Microsoft actually documented it so you</font>

241
00:09:13,510 --> 00:09:16,420
didn't<font color="#E5E5E5"> have to look at Peter Gutman's</font>

242
00:09:14,860 --> 00:09:18,580
reverse engineering solution you could

243
00:09:16,420 --> 00:09:21,849
actually see<font color="#CCCCCC"> a real specification for</font>

244
00:09:18,580 --> 00:09:26,110
the file format so the best practices

245
00:09:21,850 --> 00:09:27,670
for code signing would be that<font color="#CCCCCC"> you have</font>

246
00:09:26,110 --> 00:09:30,370
an isolated system that's not connected

247
00:09:27,670 --> 00:09:32,709
<font color="#CCCCCC">to the</font><font color="#E5E5E5"> internet and you compile you sign</font>

248
00:09:30,370 --> 00:09:34,810
there<font color="#E5E5E5"> and then on an Internet connected</font>

249
00:09:32,709 --> 00:09:37,569
system you do your time stamping<font color="#E5E5E5"> time</font>

250
00:09:34,810 --> 00:09:40,029
<font color="#E5E5E5">stamping has to call out to a time stamp</font>

251
00:09:37,570 --> 00:09:40,899
server somewhere on the internet and so

252
00:09:40,029 --> 00:09:43,089
<font color="#E5E5E5">that's why that has to be an</font>

253
00:09:40,899 --> 00:09:46,209
internet-connected system and then you

254
00:09:43,089 --> 00:09:47,649
deploy um I understand most people

255
00:09:46,209 --> 00:09:50,109
aren't<font color="#E5E5E5"> going to want to do all their dev</font>

256
00:09:47,649 --> 00:09:52,959
work on an isolated box I have done<font color="#E5E5E5"> that</font>

257
00:09:50,110 --> 00:09:55,600
before<font color="#CCCCCC"> it is a pain um so most people</font>

258
00:09:52,959 --> 00:09:56,920
will end up<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> their dev work on box</font>

259
00:09:55,600 --> 00:09:58,630
<font color="#CCCCCC">it is connected to internet but you</font>

260
00:09:56,920 --> 00:10:00,040
still<font color="#CCCCCC"> want to do that code signing on an</font>

261
00:09:58,630 --> 00:10:01,870
isolated system and the reason for that

262
00:10:00,040 --> 00:10:04,420
is<font color="#CCCCCC"> because your code signing signature</font>

263
00:10:01,870 --> 00:10:06,370
is I mean that's really establishing the

264
00:10:04,420 --> 00:10:08,890
trust that you have<font color="#E5E5E5"> so if your dev box</font>

265
00:10:06,370 --> 00:10:10,329
gets compromised at least your code

266
00:10:08,890 --> 00:10:11,920
signing signature has not been

267
00:10:10,329 --> 00:10:14,339
compromised as well which is why you'd

268
00:10:11,920 --> 00:10:17,709
want to<font color="#E5E5E5"> have that on isolated system um</font>

269
00:10:14,339 --> 00:10:21,100
so another thing a lot of<font color="#CCCCCC"> people do is</font>

270
00:10:17,709 --> 00:10:24,160
they will just sign it and so for github

271
00:10:21,100 --> 00:10:25,600
and slacks windows clients so slacks

272
00:10:24,160 --> 00:10:28,390
client actually hasn't come out for

273
00:10:25,600 --> 00:10:30,670
windows yet but they have a beta product

274
00:10:28,390 --> 00:10:33,610
that you<font color="#CCCCCC"> can look at but anyways I don't</font>

275
00:10:30,670 --> 00:10:35,410
know if they're actually signing it on

276
00:10:33,610 --> 00:10:37,630
an isolated system but they are

277
00:10:35,410 --> 00:10:39,219
definitely not time stamping it and you

278
00:10:37,630 --> 00:10:42,730
want a<font color="#E5E5E5"> time</font><font color="#CCCCCC"> stamp and the reason why is</font>

279
00:10:39,220 --> 00:10:45,490
because I'll show this in a<font color="#E5E5E5"> moment but</font>

280
00:10:42,730 --> 00:10:47,560
basically in order to ensure that<font color="#E5E5E5"> your</font>

281
00:10:45,490 --> 00:10:49,600
file has not been signed with a

282
00:10:47,560 --> 00:10:52,029
certificate that's been revoked or has

283
00:10:49,600 --> 00:10:54,730
it been expired you have to<font color="#E5E5E5"> timestamp it</font>

284
00:10:52,029 --> 00:10:56,439
uh so the other thing that people will

285
00:10:54,730 --> 00:10:58,360
do and this<font color="#E5E5E5"> is probably the most common</font>

286
00:10:56,440 --> 00:11:01,390
practice is just all in the same box

287
00:10:58,360 --> 00:11:03,130
just compile sign<font color="#CCCCCC"> timestamp and deploy</font>

288
00:11:01,390 --> 00:11:04,089
it and the reason you don't want to do

289
00:11:03,130 --> 00:11:06,850
that is

290
00:11:04,089 --> 00:11:08,230
because again your signature is

291
00:11:06,850 --> 00:11:09,759
something you really<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> want or your</font>

292
00:11:08,230 --> 00:11:12,430
signing certificate is something you

293
00:11:09,759 --> 00:11:14,259
really<font color="#CCCCCC"> don't want to get compromised and</font>

294
00:11:12,430 --> 00:11:17,258
then probably<font color="#E5E5E5"> even more common</font><font color="#CCCCCC"> practice</font>

295
00:11:14,259 --> 00:11:18,939
<font color="#CCCCCC">is you don't</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> say it or timestamp it</font>

296
00:11:17,259 --> 00:11:20,649
or anything at all you just deploy it

297
00:11:18,939 --> 00:11:22,509
and no one<font color="#E5E5E5"> knows where your files came</font>

298
00:11:20,649 --> 00:11:26,829
from so a putty is a very popular

299
00:11:22,509 --> 00:11:28,809
application that is not signed so

300
00:11:26,829 --> 00:11:30,699
checking that<font color="#E5E5E5"> time stamp so just in</font>

301
00:11:28,809 --> 00:11:33,189
explanation of how that's done so

302
00:11:30,699 --> 00:11:35,979
imagine if today you got a certificate

303
00:11:33,189 --> 00:11:39,248
that was valid for one year and you

304
00:11:35,980 --> 00:11:41,829
signed a file if<font color="#E5E5E5"> you have not time</font>

305
00:11:39,249 --> 00:11:43,209
stamped it then after basically the end

306
00:11:41,829 --> 00:11:46,029
of<font color="#E5E5E5"> year after your certificate has</font>

307
00:11:43,209 --> 00:11:48,309
expired that file is no longer going<font color="#E5E5E5"> to</font>

308
00:11:46,029 --> 00:11:50,559
be valid or that certificate can<font color="#E5E5E5"> no</font>

309
00:11:48,309 --> 00:11:54,069
longer be checked properly so that's why

310
00:11:50,559 --> 00:11:56,170
<font color="#E5E5E5">you want to do that</font><font color="#CCCCCC"> time stamping um so</font>

311
00:11:54,069 --> 00:11:58,059
if you're a software developer and you

312
00:11:56,170 --> 00:12:00,699
figure all right on<font color="#E5E5E5"> i'm sold i want to</font>

313
00:11:58,059 --> 00:12:03,189
<font color="#E5E5E5">start time stamping um so prices they</font>

314
00:12:00,699 --> 00:12:05,170
can range<font color="#E5E5E5"> from free for open source</font>

315
00:12:03,189 --> 00:12:07,839
projects a lot of places you'll see

316
00:12:05,170 --> 00:12:12,069
online is about<font color="#CCCCCC"> 185 dollars or something</font>

317
00:12:07,839 --> 00:12:13,600
like that verisign sells there's for 795

318
00:12:12,069 --> 00:12:15,610
dollars a year so if you're the<font color="#E5E5E5"> type</font>

319
00:12:13,600 --> 00:12:17,439
that buys the gold Apple watch and has

320
00:12:15,610 --> 00:12:19,269
<font color="#CCCCCC">just money to burn then get better</font>

321
00:12:17,439 --> 00:12:21,429
signed certificates for that high price

322
00:12:19,269 --> 00:12:23,800
there are some reasons you might want to

323
00:12:21,429 --> 00:12:25,300
get their expensive certificates because

324
00:12:23,800 --> 00:12:27,878
verisign was one of the original

325
00:12:25,300 --> 00:12:29,709
certificate authorities<font color="#CCCCCC"> there trusted by</font>

326
00:12:27,879 --> 00:12:31,300
much older operating systems so if

327
00:12:29,709 --> 00:12:33,219
you're still targeting like<font color="#CCCCCC"> Windows 95</font>

328
00:12:31,300 --> 00:12:34,779
<font color="#E5E5E5">or something like that then you're going</font>

329
00:12:33,220 --> 00:12:38,050
to<font color="#E5E5E5"> have to use a</font><font color="#CCCCCC"> verisign certificate</font>

330
00:12:34,779 --> 00:12:40,329
and but if you look<font color="#E5E5E5"> around hard enough</font>

331
00:12:38,050 --> 00:12:43,029
online you can find certificates for

332
00:12:40,329 --> 00:12:45,248
<font color="#E5E5E5">eighty nine dollars per</font><font color="#CCCCCC"> year for just</font>

333
00:12:43,029 --> 00:12:48,160
<font color="#E5E5E5">your normal userland certificates or 165</font>

334
00:12:45,249 --> 00:12:49,990
dollars per<font color="#CCCCCC"> year for certificates that</font>

335
00:12:48,160 --> 00:12:51,999
are capable of signing drivers so that's

336
00:12:49,990 --> 00:12:53,740
where it's kind of easy or not an

337
00:12:51,999 --> 00:12:55,300
extended validation or not so<font color="#E5E5E5"> much like</font>

338
00:12:53,740 --> 00:12:56,980
with ssl certificates if you look at a

339
00:12:55,300 --> 00:12:59,529
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> bank websites they'll say the</font>

340
00:12:56,980 --> 00:13:01,509
name<font color="#CCCCCC"> of the bank and</font><font color="#E5E5E5"> then the URL there</font>

341
00:12:59,529 --> 00:13:03,879
and that's<font color="#E5E5E5"> because they have an EV</font>

342
00:13:01,509 --> 00:13:05,679
certificate so as opposed to just having

343
00:13:03,879 --> 00:13:08,019
a<font color="#E5E5E5"> picture of the lock up there they also</font>

344
00:13:05,679 --> 00:13:09,610
have the you know a green<font color="#E5E5E5"> little banner</font>

345
00:13:08,019 --> 00:13:12,490
up there and the name<font color="#E5E5E5"> of the company</font>

346
00:13:09,610 --> 00:13:15,519
that's what an EV certificate is and for

347
00:13:12,490 --> 00:13:17,230
for ssl there's not a whole lot<font color="#CCCCCC"> of</font>

348
00:13:15,519 --> 00:13:17,620
reason<font color="#CCCCCC"> to get</font><font color="#E5E5E5"> that EV certificate other</font>

349
00:13:17,230 --> 00:13:19,150
than

350
00:13:17,620 --> 00:13:21,400
makes you<font color="#CCCCCC"> look cooler and more trusted</font>

351
00:13:19,150 --> 00:13:23,050
and stuff like that but<font color="#E5E5E5"> for code signing</font>

352
00:13:21,400 --> 00:13:24,900
you actually<font color="#CCCCCC"> have to get that</font><font color="#E5E5E5"> EV</font>

353
00:13:23,050 --> 00:13:27,400
certificate if you want to<font color="#E5E5E5"> get a driver</font>

354
00:13:24,900 --> 00:13:30,220
ever you want<font color="#E5E5E5"> to sign drivers and so</font>

355
00:13:27,400 --> 00:13:31,630
those prices there 165 dollars a year

356
00:13:30,220 --> 00:13:34,000
that's that's the if you get a

357
00:13:31,630 --> 00:13:36,490
<font color="#CCCCCC">three-year certificate to one that's</font>

358
00:13:34,000 --> 00:13:37,960
valid for three years I<font color="#E5E5E5"> think if you get</font>

359
00:13:36,490 --> 00:13:39,460
just a one-year certificate it's like

360
00:13:37,960 --> 00:13:41,470
two hundred<font color="#CCCCCC"> and twenty four dollars or</font>

361
00:13:39,460 --> 00:13:43,960
something like that so that's if you go

362
00:13:41,470 --> 00:13:45,790
to deb microsoft com which is also the

363
00:13:43,960 --> 00:13:47,520
<font color="#E5E5E5">website that you'd go to if you want to</font>

364
00:13:45,790 --> 00:13:50,020
<font color="#E5E5E5">get</font><font color="#CCCCCC"> access to your windows air reports</font>

365
00:13:47,520 --> 00:13:51,640
you follow some links in there and then

366
00:13:50,020 --> 00:13:53,560
basically<font color="#E5E5E5"> it'll bring you to some site</font>

367
00:13:51,640 --> 00:13:55,330
it's going to<font color="#E5E5E5"> be did you circus where</font>

368
00:13:53,560 --> 00:13:59,920
you ultimately want to go in order<font color="#E5E5E5"> to</font>

369
00:13:55,330 --> 00:14:01,870
pick up those cheaper certificates so

370
00:13:59,920 --> 00:14:04,000
now you have a certificate how do you

371
00:14:01,870 --> 00:14:06,190
actually sign the files so you<font color="#E5E5E5"> can use</font>

372
00:14:04,000 --> 00:14:08,860
<font color="#CCCCCC">microsoft's sign tool that's going to be</font>

373
00:14:06,190 --> 00:14:11,410
the way that you'll see online most of

374
00:14:08,860 --> 00:14:13,750
times to sign it there's also an<font color="#E5E5E5"> open</font>

375
00:14:11,410 --> 00:14:15,069
<font color="#E5E5E5">source tool called ossl sign code the</font>

376
00:14:13,750 --> 00:14:16,660
reason you'd want to<font color="#E5E5E5"> use that is if you</font>

377
00:14:15,070 --> 00:14:18,370
want<font color="#CCCCCC"> to do your signing from Linux</font>

378
00:14:16,660 --> 00:14:20,079
system or something<font color="#CCCCCC"> like that in order</font>

379
00:14:18,370 --> 00:14:22,959
to code sign files that are on<font color="#CCCCCC"> Windows</font>

380
00:14:20,080 --> 00:14:25,990
there's also a bunch<font color="#E5E5E5"> of vendor tools so</font>

381
00:14:22,959 --> 00:14:28,839
I<font color="#E5E5E5"> myself actually use digits or four for</font>

382
00:14:25,990 --> 00:14:30,940
my certificate and so they have like<font color="#CCCCCC"> a</font>

383
00:14:28,839 --> 00:14:33,880
special<font color="#CCCCCC"> tool that I use and and run</font><font color="#E5E5E5"> that</font>

384
00:14:30,940 --> 00:14:35,980
on my isolated system and you know I'm

385
00:14:33,880 --> 00:14:37,300
in no way I'm a spokesperson or anything

386
00:14:35,980 --> 00:14:39,100
<font color="#E5E5E5">for didja cert but they are I guess a</font>

387
00:14:37,300 --> 00:14:41,949
local company so if you want to<font color="#CCCCCC"> support</font>

388
00:14:39,100 --> 00:14:46,240
local<font color="#E5E5E5"> I guess there's salt lake city</font>

389
00:14:41,950 --> 00:14:47,560
days so how does this<font color="#E5E5E5"> all work then so</font>

390
00:14:46,240 --> 00:14:49,150
you have your certificate you signed a

391
00:14:47,560 --> 00:14:51,520
file what did it actually<font color="#E5E5E5"> do when you</font>

392
00:14:49,150 --> 00:14:56,050
signed a file so here on the right I

393
00:14:51,520 --> 00:14:58,300
<font color="#E5E5E5">have a PE header information and the</font>

394
00:14:56,050 --> 00:14:59,589
items<font color="#E5E5E5"> that are</font><font color="#CCCCCC"> in grayed out</font><font color="#E5E5E5"> there are</font>

395
00:14:58,300 --> 00:15:01,599
the items that are<font color="#CCCCCC"> not going to be</font>

396
00:14:59,589 --> 00:15:04,270
hashed win you hash that file<font color="#CCCCCC"> so</font>

397
00:15:01,600 --> 00:15:08,529
basically win you sign a file it creates

398
00:15:04,270 --> 00:15:10,990
a hash of that file and then and then

399
00:15:08,529 --> 00:15:13,120
ends up signing that hash and<font color="#E5E5E5"> so you</font>

400
00:15:10,990 --> 00:15:15,310
have<font color="#E5E5E5"> to know like what you</font><font color="#CCCCCC"> and what</font>

401
00:15:13,120 --> 00:15:18,940
you're<font color="#E5E5E5"> going to be hashing that file</font><font color="#CCCCCC"> so</font>

402
00:15:15,310 --> 00:15:21,099
you it's signed to lure ossl<font color="#E5E5E5"> sign code</font>

403
00:15:18,940 --> 00:15:24,430
or any other tools are going to read in

404
00:15:21,100 --> 00:15:27,040
your PE file your executable and then

405
00:15:24,430 --> 00:15:28,569
it's going to read everything the PE

406
00:15:27,040 --> 00:15:30,160
header except for the checksum and their

407
00:15:28,570 --> 00:15:31,300
certificate table<font color="#E5E5E5"> entry certificate</font>

408
00:15:30,160 --> 00:15:33,219
table entries basically

409
00:15:31,300 --> 00:15:35,170
pointer to wear in that file that

410
00:15:33,220 --> 00:15:37,029
certificate exists and it's going<font color="#CCCCCC"> to</font>

411
00:15:35,170 --> 00:15:39,579
sort and hash the different PE section

412
00:15:37,029 --> 00:15:40,959
and then hash anything else that's

413
00:15:39,580 --> 00:15:47,829
<font color="#E5E5E5">remaining in there and that's going to</font>

414
00:15:40,959 --> 00:15:50,439
be your hash of<font color="#CCCCCC"> the file that's used so</font>

415
00:15:47,829 --> 00:15:53,410
certificate table looks very much like

416
00:15:50,440 --> 00:15:55,240
just<font color="#E5E5E5"> ssl cert data there's really almost</font>

417
00:15:53,410 --> 00:15:57,959
no difference<font color="#CCCCCC"> between</font><font color="#E5E5E5"> that information</font>

418
00:15:55,240 --> 00:16:00,459
it is<font color="#CCCCCC"> asn1 encoded and what that means</font>

419
00:15:57,959 --> 00:16:04,420
yes<font color="#E5E5E5"> and one is basically just a binary</font>

420
00:16:00,459 --> 00:16:06,910
file format so if you know XML or JSON

421
00:16:04,420 --> 00:16:08,800
those are text-based file formats<font color="#CCCCCC"> asn.1</font>

422
00:16:06,910 --> 00:16:10,510
is just a binary form file format so i

423
00:16:08,800 --> 00:16:11,979
guess like google google protocol

424
00:16:10,510 --> 00:16:15,610
buffers would be something similar to

425
00:16:11,980 --> 00:16:17,620
that and so so now you're described sm1

426
00:16:15,610 --> 00:16:18,970
format will say<font color="#CCCCCC"> okay this byte means</font>

427
00:16:17,620 --> 00:16:20,440
it's something that follows it is going

428
00:16:18,970 --> 00:16:22,839
to be<font color="#CCCCCC"> a bit or it's going</font><font color="#E5E5E5"> to be a string</font>

429
00:16:20,440 --> 00:16:24,700
or it's going<font color="#E5E5E5"> to be an integer and</font><font color="#CCCCCC"> so it</font>

430
00:16:22,839 --> 00:16:27,370
just lays things out<font color="#E5E5E5"> like that but then</font>

431
00:16:24,700 --> 00:16:29,260
you need<font color="#CCCCCC"> peak at CS number 7 in order</font><font color="#E5E5E5"> to</font>

432
00:16:27,370 --> 00:16:31,149
describe what is going<font color="#E5E5E5"> to be in</font><font color="#CCCCCC"> that</font>

433
00:16:29,260 --> 00:16:32,649
file so<font color="#CCCCCC"> it's basically like a schema for</font>

434
00:16:31,149 --> 00:16:33,910
XML it's just going to<font color="#E5E5E5"> say</font><font color="#CCCCCC"> okay the</font>

435
00:16:32,649 --> 00:16:36,579
first thing<font color="#E5E5E5"> that's in there</font><font color="#CCCCCC"> is going to</font>

436
00:16:33,910 --> 00:16:37,899
be the version of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> certificate and</font>

437
00:16:36,579 --> 00:16:39,339
<font color="#CCCCCC">the</font><font color="#E5E5E5"> next thing that's in there</font><font color="#CCCCCC"> is going</font>

438
00:16:37,899 --> 00:16:40,959
to be the subject name for the

439
00:16:39,339 --> 00:16:42,640
certificate<font color="#E5E5E5"> and just kind of describes</font>

440
00:16:40,959 --> 00:16:44,949
what each of those things are so it's

441
00:16:42,640 --> 00:16:47,829
all standards-based all that information

442
00:16:44,950 --> 00:16:49,779
<font color="#E5E5E5">it's there's some there's a little bit</font>

443
00:16:47,829 --> 00:16:52,649
of Microsoft quirkiness to it but<font color="#E5E5E5"> for</font>

444
00:16:49,779 --> 00:16:54,910
the most part it's all pretty standard

445
00:16:52,649 --> 00:16:57,310
and then you<font color="#E5E5E5"> want to check that chain</font><font color="#CCCCCC"> of</font>

446
00:16:54,910 --> 00:16:59,560
trust<font color="#E5E5E5"> so if you want to validate that a</font>

447
00:16:57,310 --> 00:17:01,270
file came from somewhere first you want

448
00:16:59,560 --> 00:17:03,010
to ensure<font color="#CCCCCC"> that the signature is valid so</font>

449
00:17:01,270 --> 00:17:04,629
hash the file in the<font color="#CCCCCC"> same way compared</font>

450
00:17:03,010 --> 00:17:07,240
the signature that<font color="#E5E5E5"> you get with the one</font>

451
00:17:04,630 --> 00:17:09,579
that that is provided by the file ensure

452
00:17:07,240 --> 00:17:11,050
the chain of<font color="#E5E5E5"> trust is valid so basically</font>

453
00:17:09,579 --> 00:17:13,359
each of the certificates are going to be

454
00:17:11,050 --> 00:17:15,760
signed one after another up until the

455
00:17:13,359 --> 00:17:17,469
certificate authority ultimately ensure

456
00:17:15,760 --> 00:17:18,939
the certificate authority is trusted so

457
00:17:17,470 --> 00:17:19,929
these all chained up<font color="#E5E5E5"> to somewhere so</font>

458
00:17:18,939 --> 00:17:22,419
make sure it's not<font color="#E5E5E5"> a self-signed</font>

459
00:17:19,929 --> 00:17:25,240
certificate that<font color="#CCCCCC"> you don't trust and</font>

460
00:17:22,419 --> 00:17:27,100
then you can also include in their

461
00:17:25,240 --> 00:17:29,710
certificates what that certificate

462
00:17:27,099 --> 00:17:32,350
should be used for<font color="#E5E5E5"> so certificates can</font>

463
00:17:29,710 --> 00:17:34,990
be used purely for SSL or purely for

464
00:17:32,350 --> 00:17:37,300
code signing yeah there's<font color="#E5E5E5"> not a lot of</font>

465
00:17:34,990 --> 00:17:39,040
cases where that's going<font color="#E5E5E5"> to be mixed so</font>

466
00:17:37,300 --> 00:17:40,240
<font color="#E5E5E5">because of that you want to ensure the</font>

467
00:17:39,040 --> 00:17:43,300
code signing certificate that you're

468
00:17:40,240 --> 00:17:45,070
<font color="#CCCCCC">looking at is actually for code signing</font>

469
00:17:43,300 --> 00:17:48,550
and is not an ssl certificate or

470
00:17:45,070 --> 00:17:50,020
anything else<font color="#E5E5E5"> so if you actually want to</font>

471
00:17:48,550 --> 00:17:51,790
<font color="#E5E5E5">play around and look at some sort of</font>

472
00:17:50,020 --> 00:17:55,120
good information about your box if<font color="#E5E5E5"> you</font>

473
00:17:51,790 --> 00:17:56,409
run cert manager MSC you'll be able to

474
00:17:55,120 --> 00:17:57,668
see information about the root

475
00:17:56,410 --> 00:17:59,919
certificates that you have on your

476
00:17:57,669 --> 00:18:01,059
system and you can double-click<font color="#E5E5E5"> on some</font>

477
00:17:59,919 --> 00:18:02,919
of those there and you can see

478
00:18:01,059 --> 00:18:08,168
information about what's in that

479
00:18:02,919 --> 00:18:09,970
certificate so in there you can see<font color="#E5E5E5"> the</font>

480
00:18:08,169 --> 00:18:12,120
very bottom that I've<font color="#E5E5E5"> highlighted it's</font>

481
00:18:09,970 --> 00:18:13,750
showing<font color="#CCCCCC"> the key usage information</font>

482
00:18:12,120 --> 00:18:15,250
unfortunately for certificate

483
00:18:13,750 --> 00:18:17,080
authorities it's not super useful

484
00:18:15,250 --> 00:18:19,150
because the certificate authority might

485
00:18:17,080 --> 00:18:21,040
specify only certain key usage

486
00:18:19,150 --> 00:18:23,200
information but<font color="#E5E5E5"> it can actually use for</font>

487
00:18:21,040 --> 00:18:26,710
everything so it's it's hard to be able

488
00:18:23,200 --> 00:18:27,580
to tell on a system you know it given

489
00:18:26,710 --> 00:18:29,020
that you<font color="#CCCCCC"> have like</font><font color="#E5E5E5"> maybe a hundred</font>

490
00:18:27,580 --> 00:18:29,980
certificate authorities or you know a

491
00:18:29,020 --> 00:18:31,720
<font color="#CCCCCC">couple dozen or something like that</font>

492
00:18:29,980 --> 00:18:33,070
which of these are<font color="#E5E5E5"> for</font><font color="#CCCCCC"> SSL which of</font>

493
00:18:31,720 --> 00:18:37,000
these four<font color="#CCCCCC"> code-signing</font><font color="#E5E5E5"> you can't really</font>

494
00:18:33,070 --> 00:18:38,800
<font color="#E5E5E5">tell unfortunately um and then there's</font>

495
00:18:37,000 --> 00:18:41,050
<font color="#E5E5E5">catalog files is another important thing</font>

496
00:18:38,800 --> 00:18:42,639
<font color="#E5E5E5">to understand so this is something a lot</font>

497
00:18:41,050 --> 00:18:45,010
of people run into<font color="#E5E5E5"> when they first try</font>

498
00:18:42,640 --> 00:18:47,110
<font color="#CCCCCC">and look at files that are code sign so</font>

499
00:18:45,010 --> 00:18:49,660
they'll take calc<font color="#E5E5E5"> that exe and they go</font>

500
00:18:47,110 --> 00:18:50,379
to look at the<font color="#E5E5E5"> who's it signed by just</font>

501
00:18:49,660 --> 00:18:53,770
to make sure they<font color="#CCCCCC"> have a good</font>

502
00:18:50,380 --> 00:18:55,510
<font color="#CCCCCC">understanding of under code and be able</font>

503
00:18:53,770 --> 00:18:57,520
to whitelist and they look at it<font color="#CCCCCC"> and</font>

504
00:18:55,510 --> 00:18:58,960
within its properties there's no digital

505
00:18:57,520 --> 00:19:00,490
signatures tab and they're like what

506
00:18:58,960 --> 00:19:01,960
isn't this sign like didn't this come

507
00:19:00,490 --> 00:19:04,270
from Microsoft<font color="#CCCCCC"> I've I've been hacked is</font>

508
00:19:01,960 --> 00:19:06,370
this malware like I don't<font color="#E5E5E5"> understand and</font>

509
00:19:04,270 --> 00:19:08,020
the reason for that<font color="#CCCCCC"> is because it's a it</font>

510
00:19:06,370 --> 00:19:09,639
is signed but that signature is actually

511
00:19:08,020 --> 00:19:12,129
in a catalog file which<font color="#CCCCCC"> is a separate</font>

512
00:19:09,640 --> 00:19:14,320
file and so windows for whatever reason

513
00:19:12,130 --> 00:19:16,690
doesn't check those catalog files when

514
00:19:14,320 --> 00:19:20,860
it displays<font color="#CCCCCC"> the properties of view here</font>

515
00:19:16,690 --> 00:19:25,660
<font color="#E5E5E5">but if you use various tools for example</font>

516
00:19:20,860 --> 00:19:28,600
<font color="#E5E5E5">here</font><font color="#CCCCCC"> I'm using</font><font color="#E5E5E5"> big check which is it</font>

517
00:19:25,660 --> 00:19:31,179
comes with visual studio you can use our

518
00:19:28,600 --> 00:19:33,850
that<font color="#E5E5E5"> I'm sorry that's one of the cyst</font>

519
00:19:31,179 --> 00:19:35,710
internals tools sig check is using sig

520
00:19:33,850 --> 00:19:38,139
check it'll actually check the catalog

521
00:19:35,710 --> 00:19:40,390
file for you so that will help<font color="#E5E5E5"> you be</font>

522
00:19:38,140 --> 00:19:44,040
able to verify where it is that it<font color="#E5E5E5"> is</font>

523
00:19:40,390 --> 00:19:44,040
actually signed and it also show<font color="#CCCCCC"> you</font>

524
00:19:44,970 --> 00:19:51,400
sorry sig check does not show you what

525
00:19:48,130 --> 00:19:53,559
catalog it is it's in but<font color="#CCCCCC"> sign sign cool</font>

526
00:19:51,400 --> 00:19:56,550
will show you a catalog violet it's in

527
00:19:53,559 --> 00:19:59,430
so looking at that file<font color="#CCCCCC"> you can</font>

528
00:19:56,550 --> 00:20:03,270
and look at where the catalog file is

529
00:19:59,430 --> 00:20:05,550
and so here and when it in sorry and

530
00:20:03,270 --> 00:20:07,230
Windows Explorer I'm<font color="#E5E5E5"> looking at all the</font>

531
00:20:05,550 --> 00:20:10,830
different<font color="#E5E5E5"> catalog files that have on my</font>

532
00:20:07,230 --> 00:20:12,990
system and I can see there have think

533
00:20:10,830 --> 00:20:16,530
that says 3,000 different catalog files

534
00:20:12,990 --> 00:20:18,300
that<font color="#CCCCCC"> exist there so then looking at one</font>

535
00:20:16,530 --> 00:20:21,840
<font color="#E5E5E5">of those catalog files this is a catalog</font>

536
00:20:18,300 --> 00:20:24,840
file that was used for<font color="#E5E5E5"> help d XE I can</font>

537
00:20:21,840 --> 00:20:28,080
see<font color="#E5E5E5"> that there are almost 5000 different</font>

538
00:20:24,840 --> 00:20:29,490
files that have a signature in there so

539
00:20:28,080 --> 00:20:31,590
that's<font color="#E5E5E5"> what those different tag entries</font>

540
00:20:29,490 --> 00:20:33,630
are and so there's thumb prints or

541
00:20:31,590 --> 00:20:35,939
basically<font color="#E5E5E5"> the shot to deduce the cache</font>

542
00:20:33,630 --> 00:20:39,090
of those files there and so if<font color="#E5E5E5"> you trust</font>

543
00:20:35,940 --> 00:20:46,230
that put that catalog file then you

544
00:20:39,090 --> 00:20:49,830
should trust that file um so what I've

545
00:20:46,230 --> 00:20:52,760
looked at here is if you go to I don't

546
00:20:49,830 --> 00:20:55,649
know how to<font color="#E5E5E5"> pronounce it la p 0 dot</font><font color="#CCCCCC"> IT</font>

547
00:20:52,760 --> 00:20:57,000
you go to that<font color="#E5E5E5"> site it's just a web app</font>

548
00:20:55,650 --> 00:20:58,560
up there that you can drag and drop<font color="#CCCCCC"> a</font>

549
00:20:57,000 --> 00:21:00,450
catalog file to or any type of

550
00:20:58,560 --> 00:21:02,250
certificate<font color="#E5E5E5"> to and it'll actually do the</font>

551
00:21:00,450 --> 00:21:04,260
asn.1 parsing there so you can see on

552
00:21:02,250 --> 00:21:06,030
the left some of<font color="#E5E5E5"> the information that's</font>

553
00:21:04,260 --> 00:21:07,620
including the par so it should show you

554
00:21:06,030 --> 00:21:08,820
there's some sequences there's going to

555
00:21:07,620 --> 00:21:11,040
be some integers it's going to be like

556
00:21:08,820 --> 00:21:12,300
an object ID object<font color="#E5E5E5"> ID is specifying</font>

557
00:21:11,040 --> 00:21:14,370
what information is<font color="#E5E5E5"> going to come next</font>

558
00:21:12,300 --> 00:21:16,200
<font color="#E5E5E5">in that next object within the sequence</font>

559
00:21:14,370 --> 00:21:17,550
and then there on the right you<font color="#E5E5E5"> just</font>

560
00:21:16,200 --> 00:21:19,020
have a hex dump of that information and

561
00:21:17,550 --> 00:21:20,940
this is a pretty cool web app tool to

562
00:21:19,020 --> 00:21:25,170
just be able to understand the<font color="#E5E5E5"> s and one</font>

563
00:21:20,940 --> 00:21:27,870
format better um so revocation so if you

564
00:21:25,170 --> 00:21:29,910
do lose your certificate or it gets um i

565
00:21:27,870 --> 00:21:31,050
guess if your system gets hacked or

566
00:21:29,910 --> 00:21:32,550
something like that<font color="#E5E5E5"> and you haven't put</font>

567
00:21:31,050 --> 00:21:34,860
it<font color="#E5E5E5"> on isolated system you're gonna have</font>

568
00:21:32,550 --> 00:21:36,480
to do certificate revocation in the same

569
00:21:34,860 --> 00:21:37,679
way that with ssl certificates and

570
00:21:36,480 --> 00:21:40,140
things like heart bleed and stuff you

571
00:21:37,680 --> 00:21:43,830
<font color="#CCCCCC">had to do some revoking there so again</font>

572
00:21:40,140 --> 00:21:45,360
it's<font color="#CCCCCC"> very similar concept and so within</font>

573
00:21:43,830 --> 00:21:48,090
the certificates there's going to be a

574
00:21:45,360 --> 00:21:51,240
link to a crl file that's going to be

575
00:21:48,090 --> 00:21:54,090
basically a cab file so same format that

576
00:21:51,240 --> 00:21:55,560
we saw before except<font color="#E5E5E5"> instead of the cab</font>

577
00:21:54,090 --> 00:21:58,379
file containing certificates that you

578
00:21:55,560 --> 00:22:00,270
should trust<font color="#CCCCCC"> its containing a list of</font>

579
00:21:58,380 --> 00:22:02,640
hashes of certificates that you should

580
00:22:00,270 --> 00:22:04,590
<font color="#E5E5E5">not trust and so just</font><font color="#CCCCCC"> to give</font><font color="#E5E5E5"> you an</font>

581
00:22:02,640 --> 00:22:07,680
understanding<font color="#E5E5E5"> of some of those things</font>

582
00:22:04,590 --> 00:22:10,139
it's update about twice per month<font color="#E5E5E5"> and</font>

583
00:22:07,680 --> 00:22:13,620
each of those surgery that the

584
00:22:10,140 --> 00:22:16,110
in those<font color="#CCCCCC"> GRL files they end up revoking</font>

585
00:22:13,620 --> 00:22:18,179
about a thousand certificates per year

586
00:22:16,110 --> 00:22:19,830
and<font color="#CCCCCC"> they rarely give a reason so with</font>

587
00:22:18,180 --> 00:22:22,380
ssl certificates you can give a reason

588
00:22:19,830 --> 00:22:25,110
like it's been compromised or you<font color="#E5E5E5"> know I</font>

589
00:22:22,380 --> 00:22:28,620
lost it or something like that but they

590
00:22:25,110 --> 00:22:31,050
they never give any reasons for it it's

591
00:22:28,620 --> 00:22:34,340
just miscellaneous information for you

592
00:22:31,050 --> 00:22:38,610
here<font color="#E5E5E5"> Adobe they sell they there's</font>

593
00:22:34,340 --> 00:22:40,139
products for example<font color="#E5E5E5"> Adobe Reader they</font>

594
00:22:38,610 --> 00:22:43,439
they sign it with a different

595
00:22:40,140 --> 00:22:46,530
<font color="#E5E5E5">certificate per product and perversion</font>

596
00:22:43,440 --> 00:22:48,360
so for<font color="#E5E5E5"> example Adobe Reader number</font>

597
00:22:46,530 --> 00:22:50,280
version 11 is actually signed with a

598
00:22:48,360 --> 00:22:52,649
<font color="#E5E5E5">certificate that's specific to Adobe</font>

599
00:22:50,280 --> 00:22:54,240
Reader virginal 11 so they had a

600
00:22:52,650 --> 00:22:57,680
different circuit for Adobe Reader

601
00:22:54,240 --> 00:23:00,210
version 10 and that they are going<font color="#E5E5E5"> to</font>

602
00:22:57,680 --> 00:23:01,470
sign different product they have a

603
00:23:00,210 --> 00:23:03,030
different certificates that's just kind

604
00:23:01,470 --> 00:23:04,380
of interesting use case that's not

605
00:23:03,030 --> 00:23:06,030
that's kind of rare most of the times

606
00:23:04,380 --> 00:23:08,340
people just use the same certificate for

607
00:23:06,030 --> 00:23:10,530
all the products at their company<font color="#E5E5E5"> and</font>

608
00:23:08,340 --> 00:23:11,909
from<font color="#E5E5E5"> what I saw I looked kind of in the</font>

609
00:23:10,530 --> 00:23:14,970
history of things in dobie reader

610
00:23:11,910 --> 00:23:16,770
version 5 was first signed back in 2001

611
00:23:14,970 --> 00:23:18,180
so just to give<font color="#E5E5E5"> you guys an</font>

612
00:23:16,770 --> 00:23:27,000
understanding<font color="#CCCCCC"> that a lot</font><font color="#E5E5E5"> of files are</font>

613
00:23:18,180 --> 00:23:29,520
signed today so you<font color="#E5E5E5"> are a developer and</font>

614
00:23:27,000 --> 00:23:31,230
you're developing different products you

615
00:23:29,520 --> 00:23:32,940
may want<font color="#CCCCCC"> to run</font><font color="#E5E5E5"> into the awkward</font>

616
00:23:31,230 --> 00:23:35,430
situation in which you want<font color="#E5E5E5"> to modify a</font>

617
00:23:32,940 --> 00:23:36,990
file after<font color="#CCCCCC"> you have code signed it which</font>

618
00:23:35,430 --> 00:23:40,530
is exactly what you<font color="#CCCCCC"> should not</font><font color="#E5E5E5"> be</font>

619
00:23:36,990 --> 00:23:42,630
<font color="#CCCCCC">capable of doing and so the reason that</font>

620
00:23:40,530 --> 00:23:45,629
you would want<font color="#E5E5E5"> to do this is a</font><font color="#CCCCCC"> Dropbox</font>

621
00:23:42,630 --> 00:23:49,170
and<font color="#E5E5E5"> gotomeeting do this technique which</font>

622
00:23:45,630 --> 00:23:50,910
is you log into dropbox for example and

623
00:23:49,170 --> 00:23:52,590
<font color="#CCCCCC">you know you typed in your credentials</font>

624
00:23:50,910 --> 00:23:55,350
in there and then you download the

625
00:23:52,590 --> 00:23:56,939
<font color="#CCCCCC">Installer and most of the times which</font>

626
00:23:55,350 --> 00:23:58,860
should happen is you download install

627
00:23:56,940 --> 00:24:00,360
you run that installer and then you have

628
00:23:58,860 --> 00:24:01,830
to<font color="#E5E5E5"> retype in your credentials in order</font>

629
00:24:00,360 --> 00:24:04,459
to be able to authenticate your system

630
00:24:01,830 --> 00:24:06,179
again what<font color="#E5E5E5"> dropbox has done no</font>

631
00:24:04,460 --> 00:24:07,650
gotomeeting is they have<font color="#CCCCCC"> actually</font>

632
00:24:06,180 --> 00:24:09,780
included in that installer you

633
00:24:07,650 --> 00:24:12,210
downloaded some of your<font color="#E5E5E5"> authentication</font>

634
00:24:09,780 --> 00:24:13,680
information so that<font color="#CCCCCC"> you can just</font>

635
00:24:12,210 --> 00:24:15,300
download installer run it and you're

636
00:24:13,680 --> 00:24:17,220
already authenticated no need to retype

637
00:24:15,300 --> 00:24:19,430
in a noob your information so it's kind

638
00:24:17,220 --> 00:24:22,650
of a nice little usability benefit there

639
00:24:19,430 --> 00:24:23,970
for<font color="#E5E5E5"> myself I needed</font><font color="#CCCCCC"> to use it because my</font>

640
00:24:22,650 --> 00:24:25,080
product basically

641
00:24:23,970 --> 00:24:26,850
administrator is going to want<font color="#E5E5E5"> to</font>

642
00:24:25,080 --> 00:24:29,429
download it and then run it across all

643
00:24:26,850 --> 00:24:31,469
their systems and then you want<font color="#E5E5E5"> all the</font>

644
00:24:29,430 --> 00:24:33,060
systems to be authenticate up to a cloud

645
00:24:31,470 --> 00:24:34,980
server and you don't<font color="#E5E5E5"> have to retype in</font>

646
00:24:33,060 --> 00:24:36,419
you know your credentials and all<font color="#E5E5E5"> your</font>

647
00:24:34,980 --> 00:24:37,890
potentially you<font color="#CCCCCC"> know thousands</font><font color="#E5E5E5"> of</font>

648
00:24:36,420 --> 00:24:42,330
systems that<font color="#E5E5E5"> you've installed my product</font>

649
00:24:37,890 --> 00:24:44,970
on and so the way<font color="#CCCCCC"> that they accomplish</font>

650
00:24:42,330 --> 00:24:46,379
this is if we look on<font color="#E5E5E5"> the left here is I</font>

651
00:24:44,970 --> 00:24:48,540
believe this was like the adobe reader

652
00:24:46,380 --> 00:24:51,300
installer and on the right here<font color="#E5E5E5"> I</font>

653
00:24:48,540 --> 00:24:53,550
believe was the dropbox installer and so

654
00:24:51,300 --> 00:24:56,040
here<font color="#CCCCCC"> i have highlighted in the</font>

655
00:24:53,550 --> 00:24:57,570
unauthenticated attributes section there

656
00:24:56,040 --> 00:25:01,740
which<font color="#CCCCCC"> is the authentication</font><font color="#E5E5E5"> information</font>

657
00:24:57,570 --> 00:25:03,419
for the dropbox server and so what's in

658
00:25:01,740 --> 00:25:04,890
there also<font color="#E5E5E5"> is a counter</font><font color="#CCCCCC"> sign-in</font>

659
00:25:03,420 --> 00:25:08,840
signature was<font color="#CCCCCC"> this which is the time</font>

660
00:25:04,890 --> 00:25:11,250
stamping signature so if you remember<font color="#E5E5E5"> I</font>

661
00:25:08,840 --> 00:25:13,020
started back to this<font color="#E5E5E5"> I mean remember I</font>

662
00:25:11,250 --> 00:25:14,640
talked<font color="#CCCCCC"> about previously you want to sign</font>

663
00:25:13,020 --> 00:25:15,990
on one box and then time stamp on

664
00:25:14,640 --> 00:25:17,940
another box and so if you've already

665
00:25:15,990 --> 00:25:19,860
time if you already signed the file and

666
00:25:17,940 --> 00:25:21,150
then you<font color="#E5E5E5"> time stamp it time stamping is</font>

667
00:25:19,860 --> 00:25:22,830
going to be modifying that file in

668
00:25:21,150 --> 00:25:24,150
subway and so<font color="#E5E5E5"> that's what it's doing is</font>

669
00:25:22,830 --> 00:25:25,949
<font color="#E5E5E5">it's adding information that on</font>

670
00:25:24,150 --> 00:25:27,720
authenticated attributes there and so

671
00:25:25,950 --> 00:25:30,540
that's the trick is adding information

672
00:25:27,720 --> 00:25:31,890
to the authenticated<font color="#CCCCCC"> attribute in order</font>

673
00:25:30,540 --> 00:25:33,720
to add in whatever additional

674
00:25:31,890 --> 00:25:39,660
configuration information you want<font color="#E5E5E5"> to</font>

675
00:25:33,720 --> 00:25:41,610
add to your file um so this there were

676
00:25:39,660 --> 00:25:43,650
some other tricks that you could do you

677
00:25:41,610 --> 00:25:46,770
could<font color="#E5E5E5"> add information to the very end of</font>

678
00:25:43,650 --> 00:25:48,900
the certificate<font color="#CCCCCC"> table there but someone</font>

679
00:25:46,770 --> 00:25:50,580
was doing something<font color="#E5E5E5"> dumb I believe it</font>

680
00:25:48,900 --> 00:25:53,580
was google that was doing this for their

681
00:25:50,580 --> 00:25:54,990
Chrome installer and what they were

682
00:25:53,580 --> 00:25:56,790
doing is basically they just<font color="#CCCCCC"> give you a</font>

683
00:25:54,990 --> 00:25:58,260
bootstrap installer that's only you know

684
00:25:56,790 --> 00:26:00,540
a few k or something like that a<font color="#E5E5E5"> few</font>

685
00:25:58,260 --> 00:26:02,970
hundred<font color="#CCCCCC"> K and</font><font color="#E5E5E5"> then that will go get and</font>

686
00:26:00,540 --> 00:26:05,129
go ahead<font color="#CCCCCC"> and</font><font color="#E5E5E5"> download and external</font>

687
00:26:02,970 --> 00:26:06,890
installer know a few Meg's in order to

688
00:26:05,130 --> 00:26:09,030
install the remainder of application

689
00:26:06,890 --> 00:26:11,880
unfortunately what they were doing is in

690
00:26:09,030 --> 00:26:12,990
that<font color="#E5E5E5"> event on in the end of that</font>

691
00:26:11,880 --> 00:26:15,630
certificate table there they just

692
00:26:12,990 --> 00:26:17,130
<font color="#E5E5E5">slapped in</font><font color="#CCCCCC"> an URL and so basically you</font>

693
00:26:15,630 --> 00:26:19,740
download your<font color="#E5E5E5"> chrome install our</font>

694
00:26:17,130 --> 00:26:22,710
bootstrapper so again I believe<font color="#CCCCCC"> this is</font>

695
00:26:19,740 --> 00:26:24,650
chrome apologizes it was not done but

696
00:26:22,710 --> 00:26:27,210
<font color="#E5E5E5">that's a minor standing the situation</font>

697
00:26:24,650 --> 00:26:29,760
you download this bootstrap installer

698
00:26:27,210 --> 00:26:31,350
and you know you verify its integrity it

699
00:26:29,760 --> 00:26:34,110
says you know that it's from google<font color="#E5E5E5"> and</font>

700
00:26:31,350 --> 00:26:35,860
then and then it would download this

701
00:26:34,110 --> 00:26:39,309
additional installer when you went in

702
00:26:35,860 --> 00:26:41,199
and it<font color="#E5E5E5"> unfortunately uh someone figured</font>

703
00:26:39,309 --> 00:26:43,420
this out that that was was<font color="#CCCCCC"> happening so</font>

704
00:26:41,200 --> 00:26:46,330
<font color="#CCCCCC">that they</font><font color="#E5E5E5"> changed that URL that it was</font>

705
00:26:43,420 --> 00:26:49,480
downloading to be you know bad exe from

706
00:26:46,330 --> 00:26:51,250
evil<font color="#CCCCCC"> com and so you download your</font><font color="#E5E5E5"> chrome</font>

707
00:26:49,480 --> 00:26:54,130
installer and check it and it looks fine

708
00:26:51,250 --> 00:26:56,530
and everything and then you run it and

709
00:26:54,130 --> 00:26:58,330
it downloads bad exe instead and runs

710
00:26:56,530 --> 00:27:00,250
that<font color="#CCCCCC"> and so that broke the whole concept</font>

711
00:26:58,330 --> 00:27:03,460
<font color="#CCCCCC">of being able</font><font color="#E5E5E5"> to verify the integrity of</font>

712
00:27:00,250 --> 00:27:05,230
the files so Microsoft<font color="#CCCCCC"> decided</font><font color="#E5E5E5"> to you</font>

713
00:27:03,460 --> 00:27:07,630
know give them<font color="#CCCCCC"> a slap on the wrist and</font>

714
00:27:05,230 --> 00:27:10,480
not allow this anymore they still do

715
00:27:07,630 --> 00:27:11,740
allow the other trick so eventually

716
00:27:10,480 --> 00:27:13,390
someone's probably going to do something

717
00:27:11,740 --> 00:27:15,910
<font color="#CCCCCC">dumb and Microsoft's going to block that</font>

718
00:27:13,390 --> 00:27:19,660
from happening as well but for now<font color="#CCCCCC"> it's</font>

719
00:27:15,910 --> 00:27:21,820
possible um so if you<font color="#E5E5E5"> do decide to do</font>

720
00:27:19,660 --> 00:27:23,590
this<font color="#E5E5E5"> trick be very careful what you put</font>

721
00:27:21,820 --> 00:27:25,870
in<font color="#CCCCCC"> that area do not</font><font color="#E5E5E5"> just put a URL in</font>

722
00:27:23,590 --> 00:27:28,480
there to download you you should

723
00:27:25,870 --> 00:27:30,850
<font color="#CCCCCC">probably in some way verify the</font>

724
00:27:28,480 --> 00:27:32,799
integrity of the data that that is in

725
00:27:30,850 --> 00:27:34,928
<font color="#CCCCCC">there so you might</font><font color="#E5E5E5"> wanna you know code</font>

726
00:27:32,799 --> 00:27:36,220
sign or do some other type of signature

727
00:27:34,929 --> 00:27:37,770
check on the data<font color="#E5E5E5"> that you put in there</font>

728
00:27:36,220 --> 00:27:40,210
with you know a different certificate

729
00:27:37,770 --> 00:27:43,929
some type of quirky thing or just don't

730
00:27:40,210 --> 00:27:46,059
<font color="#E5E5E5">put anything too valuable in there so in</font>

731
00:27:43,929 --> 00:27:48,130
order to help<font color="#E5E5E5"> you guys make that be able</font>

732
00:27:46,059 --> 00:27:51,370
to accomplish that<font color="#E5E5E5"> and because I had to</font>

733
00:27:48,130 --> 00:27:53,980
do<font color="#E5E5E5"> it</font><font color="#CCCCCC"> myself so I modified ossl sign</font>

734
00:27:51,370 --> 00:27:56,260
code and added in capabilities in order

735
00:27:53,980 --> 00:27:57,970
to do that so that's<font color="#E5E5E5"> the github account</font>

736
00:27:56,260 --> 00:28:00,220
for<font color="#E5E5E5"> summit route you can download that</font>

737
00:27:57,970 --> 00:28:03,850
fork there it is in the official branch

738
00:28:00,220 --> 00:28:06,190
as well oh s SL sign code now but they

739
00:28:03,850 --> 00:28:08,379
haven't made an actual release of it yet

740
00:28:06,190 --> 00:28:10,150
so I have<font color="#E5E5E5"> some binaries you can run if</font>

741
00:28:08,380 --> 00:28:11,440
you want to and they are<font color="#E5E5E5"> code signed by</font>

742
00:28:10,150 --> 00:28:14,850
summit route and everything so you

743
00:28:11,440 --> 00:28:17,440
should<font color="#CCCCCC"> be</font><font color="#E5E5E5"> able to trust their integrity</font>

744
00:28:14,850 --> 00:28:21,490
so if you actually want to<font color="#CCCCCC"> use authentic</font>

745
00:28:17,440 --> 00:28:24,280
code in order to verify<font color="#E5E5E5"> the Integrity's</font>

746
00:28:21,490 --> 00:28:26,429
of files you'll ultimately do something

747
00:28:24,280 --> 00:28:29,049
called application whitelisting and so

748
00:28:26,429 --> 00:28:30,940
application whitelisting is an old

749
00:28:29,049 --> 00:28:32,500
concept but<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> just not used as often</font>

750
00:28:30,940 --> 00:28:35,620
so application blacklisting is what

751
00:28:32,500 --> 00:28:37,510
antivirus does primarily so they also

752
00:28:35,620 --> 00:28:39,760
include some application whitelisting as

753
00:28:37,510 --> 00:28:41,070
well but primarily antivirus the concept

754
00:28:39,760 --> 00:28:43,540
behind it is you<font color="#E5E5E5"> have a whole bunch of</font>

755
00:28:41,070 --> 00:28:45,280
patterns that you<font color="#E5E5E5"> want to look for in a</font>

756
00:28:43,540 --> 00:28:47,020
file or hashes of files that<font color="#E5E5E5"> you don't</font>

757
00:28:45,280 --> 00:28:48,639
trust and so you say these are all the

758
00:28:47,020 --> 00:28:49,030
known Bad's don't allow any of these to

759
00:28:48,640 --> 00:28:51,100
run

760
00:28:49,030 --> 00:28:52,300
<font color="#E5E5E5">um application whitelisting is the</font>

761
00:28:51,100 --> 00:28:54,340
opposite of that it says these are all

762
00:28:52,300 --> 00:28:57,700
the known goods don't allow anything

763
00:28:54,340 --> 00:28:59,500
that's not on my list to<font color="#E5E5E5"> run so you</font><font color="#CCCCCC"> want</font>

764
00:28:57,700 --> 00:29:02,290
to do this you can use software

765
00:28:59,500 --> 00:29:04,210
restriction policies so these<font color="#E5E5E5"> have been</font>

766
00:29:02,290 --> 00:29:05,500
around<font color="#E5E5E5"> since windows 2000 so it's been</font>

767
00:29:04,210 --> 00:29:07,780
around forever you<font color="#CCCCCC"> have it on your</font>

768
00:29:05,500 --> 00:29:09,040
system now probably but the<font color="#E5E5E5"> problem is</font>

769
00:29:07,780 --> 00:29:11,110
it's<font color="#CCCCCC"> very hard to manage there's no</font>

770
00:29:09,040 --> 00:29:13,149
ability to import or export you have to

771
00:29:11,110 --> 00:29:15,370
use<font color="#CCCCCC"> that are at</font><font color="#E5E5E5"> UI for things there's no</font>

772
00:29:13,150 --> 00:29:17,460
audit mode so you can't say you know

773
00:29:15,370 --> 00:29:20,229
here's a list rules I want to use

774
00:29:17,460 --> 00:29:22,720
generate an alert if I ever run<font color="#E5E5E5"> anything</font>

775
00:29:20,230 --> 00:29:24,730
that doesn't use these rules and so the

776
00:29:22,720 --> 00:29:26,050
problem<font color="#E5E5E5"> with</font><font color="#CCCCCC"> that is if you don't have</font>

777
00:29:24,730 --> 00:29:28,540
<font color="#CCCCCC">that audit mode that means you either</font>

778
00:29:26,050 --> 00:29:30,280
turn all<font color="#CCCCCC"> of your application</font>

779
00:29:28,540 --> 00:29:32,920
whitelisting on or it's off completely

780
00:29:30,280 --> 00:29:34,480
<font color="#E5E5E5">so what that means is if you generate an</font>

781
00:29:32,920 --> 00:29:36,460
application whitelisting policy that has

782
00:29:34,480 --> 00:29:38,200
a list of trusted files and you<font color="#E5E5E5"> forgot</font>

783
00:29:36,460 --> 00:29:39,430
an important file in there<font color="#E5E5E5"> and then you</font>

784
00:29:38,200 --> 00:29:41,440
try and<font color="#E5E5E5"> run it it's going to block it</font>

785
00:29:39,430 --> 00:29:43,570
from running so people can potentially

786
00:29:41,440 --> 00:29:46,480
end up bricking their boxes by not

787
00:29:43,570 --> 00:29:49,899
including the right files there and then

788
00:29:46,480 --> 00:29:53,920
NSA they advocate using application

789
00:29:49,900 --> 00:29:55,330
whitelisting um the<font color="#CCCCCC"> australian DSD i</font>

790
00:29:53,920 --> 00:29:58,090
believe it is which is<font color="#E5E5E5"> their version the</font>

791
00:29:55,330 --> 00:29:59,710
NSA they have like a list of top 20

792
00:29:58,090 --> 00:30:01,000
things<font color="#E5E5E5"> that you should do do in secure</font>

793
00:29:59,710 --> 00:30:02,170
<font color="#E5E5E5">your environments and number one on</font>

794
00:30:01,000 --> 00:30:07,090
there is to do application whitelisting

795
00:30:02,170 --> 00:30:10,840
is like a very easy way<font color="#CCCCCC"> to remove</font><font color="#E5E5E5"> a lot</font>

796
00:30:07,090 --> 00:30:13,300
of<font color="#E5E5E5"> threats that exist out there so the</font>

797
00:30:10,840 --> 00:30:15,270
NSA<font color="#CCCCCC"> has just</font><font color="#E5E5E5"> a document describing how</font>

798
00:30:13,300 --> 00:30:18,040
to use software restriction policies um

799
00:30:15,270 --> 00:30:20,350
so soccer restriction policies is kind

800
00:30:18,040 --> 00:30:21,899
of pain to use so there's also built in

801
00:30:20,350 --> 00:30:23,800
the windows a thing called app Locker

802
00:30:21,900 --> 00:30:26,230
unfortunately it's only built into the

803
00:30:23,800 --> 00:30:29,440
enterprise and server versions of recent

804
00:30:26,230 --> 00:30:31,390
versions of<font color="#CCCCCC"> Windows so and again</font><font color="#E5E5E5"> it</font>

805
00:30:29,440 --> 00:30:33,730
suffers from some of the some similar

806
00:30:31,390 --> 00:30:35,470
usability issues so a lot of people

807
00:30:33,730 --> 00:30:38,230
<font color="#E5E5E5">don't end up using it because again</font><font color="#CCCCCC"> is</font>

808
00:30:35,470 --> 00:30:40,690
kind of painful to use or they just<font color="#E5E5E5"> they</font>

809
00:30:38,230 --> 00:30:44,770
don't set very strong rules in there so

810
00:30:40,690 --> 00:30:48,210
you know maybe they you know whitelist a

811
00:30:44,770 --> 00:30:53,620
path as opposed to<font color="#CCCCCC"> whitelisting a</font>

812
00:30:48,210 --> 00:30:56,200
certain certificate there are some open

813
00:30:53,620 --> 00:30:57,580
source tools that you can also<font color="#E5E5E5"> use but</font>

814
00:30:56,200 --> 00:30:59,560
these just scan your systems

815
00:30:57,580 --> 00:31:01,689
periodically so tripwire and sis check

816
00:30:59,560 --> 00:31:03,940
from OSS you

817
00:31:01,690 --> 00:31:07,629
see what these will do is basically you

818
00:31:03,940 --> 00:31:09,580
can have a some type of job<font color="#CCCCCC"> that every</font>

819
00:31:07,629 --> 00:31:12,100
night it'll just scan through all your

820
00:31:09,580 --> 00:31:13,960
files do hashes of all of them and then

821
00:31:12,100 --> 00:31:15,279
ensure that no new files exist or

822
00:31:13,960 --> 00:31:17,320
nothing<font color="#E5E5E5"> was changed or something like</font>

823
00:31:15,279 --> 00:31:19,090
that<font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> not it's not really</font>

824
00:31:17,320 --> 00:31:21,580
protection as so much it is just a

825
00:31:19,090 --> 00:31:23,080
detection to see if you had been hacked

826
00:31:21,580 --> 00:31:25,059
at some point during the day or during

827
00:31:23,080 --> 00:31:29,620
<font color="#E5E5E5">the week or whenever you schedule that</font>

828
00:31:25,059 --> 00:31:31,928
job for um so if you<font color="#E5E5E5"> do</font><font color="#CCCCCC"> want to do</font>

829
00:31:29,620 --> 00:31:33,820
application whitelisting how much pain

830
00:31:31,929 --> 00:31:35,950
is involved in this so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

831
00:31:33,820 --> 00:31:39,789
sample system this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> of my dev</font>

832
00:31:35,950 --> 00:31:42,039
boxes actually so looking for any<font color="#E5E5E5"> files</font>

833
00:31:39,789 --> 00:31:43,990
that have a<font color="#CCCCCC"> p header on it so just</font>

834
00:31:42,039 --> 00:31:46,750
<font color="#E5E5E5">anything with that starts with MZ at the</font>

835
00:31:43,990 --> 00:31:48,970
very beginning of it<font color="#CCCCCC"> i had</font><font color="#E5E5E5"> about 23 or</font>

836
00:31:46,750 --> 00:31:52,059
24 thousand different files on my system

837
00:31:48,970 --> 00:31:54,879
and<font color="#E5E5E5"> of those only eight percent were not</font>

838
00:31:52,059 --> 00:31:58,269
signed and a lot<font color="#CCCCCC"> of those existed within</font>

839
00:31:54,879 --> 00:32:00,459
see windows assembly and see windows SSX

840
00:31:58,269 --> 00:32:02,529
which is basically used for dotnet where

841
00:32:00,460 --> 00:32:04,990
it is automatically generating some

842
00:32:02,529 --> 00:32:08,110
files in<font color="#E5E5E5"> there and so those were not</font>

843
00:32:04,990 --> 00:32:10,450
code sign additionally cygwin is not

844
00:32:08,110 --> 00:32:12,519
code sign so if you are using various

845
00:32:10,450 --> 00:32:14,889
get clients on Windows chances are

846
00:32:12,519 --> 00:32:16,600
they're using different cygwin files or

847
00:32:14,889 --> 00:32:19,959
just other open source files that aren't

848
00:32:16,600 --> 00:32:21,639
can be signed on there and so on my

849
00:32:19,960 --> 00:32:23,500
system there were eight different

850
00:32:21,639 --> 00:32:25,870
<font color="#CCCCCC">Microsoft certificates and these</font>

851
00:32:23,500 --> 00:32:28,600
accounted for eighty-nine percent of the

852
00:32:25,870 --> 00:32:30,610
files on my system<font color="#E5E5E5"> and there are about</font>

853
00:32:28,600 --> 00:32:32,139
<font color="#E5E5E5">thirty six certs total so I would just</font>

854
00:32:30,610 --> 00:32:34,209
have<font color="#CCCCCC"> to have rules set up for 36</font>

855
00:32:32,139 --> 00:32:36,459
certificates and then a couple<font color="#E5E5E5"> other</font>

856
00:32:34,210 --> 00:32:38,500
rules in there are a few hundred rules

857
00:32:36,460 --> 00:32:40,029
for different hashes that I<font color="#CCCCCC"> want</font><font color="#E5E5E5"> trust</font>

858
00:32:38,500 --> 00:32:41,710
as<font color="#CCCCCC"> well and that would be able to</font><font color="#E5E5E5"> lock</font>

859
00:32:40,029 --> 00:32:45,700
down my<font color="#E5E5E5"> systems that nothing new could</font>

860
00:32:41,710 --> 00:32:47,440
run on my system um so why<font color="#E5E5E5"> would</font><font color="#CCCCCC"> you</font>

861
00:32:45,700 --> 00:32:48,370
want to<font color="#E5E5E5"> do application whitelisting what</font>

862
00:32:47,440 --> 00:32:51,100
are the different threats that it's

863
00:32:48,370 --> 00:32:52,418
going<font color="#E5E5E5"> to be stopping there so kind of</font>

864
00:32:51,100 --> 00:32:53,439
the most obvious threat is just if

865
00:32:52,419 --> 00:32:55,360
you're tricking the user into

866
00:32:53,440 --> 00:32:56,950
downloading and running<font color="#CCCCCC"> something it's</font>

867
00:32:55,360 --> 00:32:59,740
going to block that additionally deal

868
00:32:56,950 --> 00:33:01,750
hijacking or if you plug USB<font color="#CCCCCC"> into</font>

869
00:32:59,740 --> 00:33:04,720
computer<font color="#E5E5E5"> and it tries to</font><font color="#CCCCCC"> use autoruns</font>

870
00:33:01,750 --> 00:33:08,730
tricks or stuffs<font color="#CCCCCC"> nets link vulnerability</font>

871
00:33:04,720 --> 00:33:10,899
if any of those<font color="#E5E5E5"> victims had have used</font>

872
00:33:08,730 --> 00:33:11,890
application whitelisting they would have

873
00:33:10,899 --> 00:33:15,610
not have been

874
00:33:11,890 --> 00:33:17,620
I guess exploited or compromised and

875
00:33:15,610 --> 00:33:19,870
then a<font color="#E5E5E5"> lot of malware campaigns are</font>

876
00:33:17,620 --> 00:33:23,169
blocked so application whitelisting is

877
00:33:19,870 --> 00:33:25,510
not directly trying to defeat things

878
00:33:23,170 --> 00:33:27,610
that are going<font color="#CCCCCC"> to be using a memory</font>

879
00:33:25,510 --> 00:33:32,410
corruption exploits so different buffer

880
00:33:27,610 --> 00:33:33,790
overflows or things in that nature where

881
00:33:32,410 --> 00:33:35,410
you're getting code to execute memory

882
00:33:33,790 --> 00:33:37,960
because once you can execute memory

883
00:33:35,410 --> 00:33:39,250
chances are you may be able<font color="#E5E5E5"> to you know</font>

884
00:33:37,960 --> 00:33:41,830
stop one of<font color="#CCCCCC"> these application</font>

885
00:33:39,250 --> 00:33:43,080
whitelisting solutions from running so

886
00:33:41,830 --> 00:33:45,399
this is<font color="#E5E5E5"> really</font><font color="#CCCCCC"> just trying to stop</font>

887
00:33:43,080 --> 00:33:48,250
legitimate ways that<font color="#CCCCCC"> Microsoft runs</font>

888
00:33:45,400 --> 00:33:50,410
tools or runs processes from being<font color="#E5E5E5"> able</font>

889
00:33:48,250 --> 00:33:51,820
to run and then additionally it'll help

890
00:33:50,410 --> 00:33:53,980
stop different man-in-the-middle attacks

891
00:33:51,820 --> 00:33:56,169
so if you download putty you're

892
00:33:53,980 --> 00:33:57,790
downloading it over HTTP it is not

893
00:33:56,170 --> 00:33:59,800
signed you have no way to verify the

894
00:33:57,790 --> 00:34:02,470
integrity of that<font color="#E5E5E5"> file other than</font>

895
00:33:59,800 --> 00:34:04,360
checking<font color="#E5E5E5"> it on virustotal or you know</font>

896
00:34:02,470 --> 00:34:06,070
trying to verify this is no<font color="#CCCCCC"> in hash of</font>

897
00:34:04,360 --> 00:34:08,230
the<font color="#E5E5E5"> file or</font><font color="#CCCCCC"> something like that then</font>

898
00:34:06,070 --> 00:34:12,969
additionally a lot of auto updates they

899
00:34:08,230 --> 00:34:15,310
just occur over HTTP as well so that's

900
00:34:12,969 --> 00:34:17,139
<font color="#E5E5E5">it um so I'm pretty fast talker there's</font>

901
00:34:15,310 --> 00:34:19,239
much coming up<font color="#E5E5E5"> and everything if you</font>

902
00:34:17,139 --> 00:34:21,310
guys have any questions<font color="#E5E5E5"> feel free to ask</font>

903
00:34:19,239 --> 00:34:42,428
or if there's a few moments<font color="#CCCCCC"> of awkward</font>

904
00:34:21,310 --> 00:34:44,889
silence then just start clapping yeah um

905
00:34:42,429 --> 00:34:47,470
<font color="#E5E5E5">yeah so so this is a way</font><font color="#CCCCCC"> of verifying</font>

906
00:34:44,889 --> 00:34:50,168
the integrity of all those files if this

907
00:34:47,469 --> 00:34:52,270
is<font color="#E5E5E5"> application that you wrote um most of</font>

908
00:34:50,168 --> 00:34:55,000
the times people just end up signing the

909
00:34:52,270 --> 00:34:56,620
initial installer and so then anything

910
00:34:55,000 --> 00:34:59,680
<font color="#E5E5E5">that's contained within</font><font color="#CCCCCC"> that installer</font>

911
00:34:56,620 --> 00:35:01,600
should also be<font color="#E5E5E5"> trusted best course of</font>

912
00:34:59,680 --> 00:35:03,430
action is to sign all of<font color="#E5E5E5"> those files but</font>

913
00:35:01,600 --> 00:35:05,470
that's usually what most people end up

914
00:35:03,430 --> 00:35:07,299
doing and then as far as you know if you

915
00:35:05,470 --> 00:35:09,069
if you installed it somewhere and then

916
00:35:07,300 --> 00:35:10,620
you<font color="#E5E5E5"> want to verify those files haven't</font>

917
00:35:09,070 --> 00:35:13,390
been changed or something like that I

918
00:35:10,620 --> 00:35:16,390
mean you could use this but this<font color="#E5E5E5"> is</font>

919
00:35:13,390 --> 00:35:18,790
probably overkill for that i'm<font color="#CCCCCC"> not</font><font color="#E5E5E5"> sure</font>

920
00:35:16,390 --> 00:35:20,859
<font color="#CCCCCC">what a better solution would be</font><font color="#E5E5E5"> i have</font>

921
00:35:18,790 --> 00:35:22,540
run<font color="#E5E5E5"> into situations where users have</font>

922
00:35:20,860 --> 00:35:24,310
done weird things<font color="#E5E5E5"> like that where you</font>

923
00:35:22,540 --> 00:35:25,720
know they decide they're smarter than

924
00:35:24,310 --> 00:35:27,340
the developers and they figure

925
00:35:25,720 --> 00:35:29,080
just replace a<font color="#CCCCCC"> DLL or something like</font>

926
00:35:27,340 --> 00:35:33,250
that and<font color="#E5E5E5"> yours like how this</font><font color="#CCCCCC"> that's</font>

927
00:35:29,080 --> 00:35:35,080
horrible idea but<font color="#E5E5E5"> um yeah I'm not sure</font>

928
00:35:33,250 --> 00:35:46,750
this<font color="#E5E5E5"> would be the best solution for</font><font color="#CCCCCC"> that</font>

929
00:35:35,080 --> 00:35:47,950
<font color="#E5E5E5">really um I would say there there</font><font color="#CCCCCC"> are</font>

930
00:35:46,750 --> 00:35:51,040
some of those on open-source

931
00:35:47,950 --> 00:35:52,540
certificates out there so you get you

932
00:35:51,040 --> 00:35:54,730
could try<font color="#CCCCCC"> and start just signing things</font>

933
00:35:52,540 --> 00:35:56,080
with those the<font color="#E5E5E5"> easiest way though is</font>

934
00:35:54,730 --> 00:35:57,760
just generate your own self signed

935
00:35:56,080 --> 00:35:59,440
certificate and then you can add that

936
00:35:57,760 --> 00:36:01,119
self signed certificate as a certificate

937
00:35:59,440 --> 00:36:03,580
authority on your own system on<font color="#CCCCCC"> your own</font>

938
00:36:01,119 --> 00:36:04,990
test box and just play around and things

939
00:36:03,580 --> 00:36:07,299
like that that's gonna be your easiest

940
00:36:04,990 --> 00:36:09,160
way<font color="#E5E5E5"> using</font><font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> certificates will</font>

941
00:36:07,300 --> 00:36:10,750
allow you<font color="#E5E5E5"> to share whatever executables</font>

942
00:36:09,160 --> 00:36:12,009
you've generated with a friend and it'll

943
00:36:10,750 --> 00:36:14,260
be able<font color="#E5E5E5"> to work on their system they'll</font>

944
00:36:12,010 --> 00:36:15,730
be able<font color="#E5E5E5"> to verify the integrity but for</font>

945
00:36:14,260 --> 00:36:17,170
the most part everyone just uses south

946
00:36:15,730 --> 00:36:19,599
side trip tickets that's what I use in

947
00:36:17,170 --> 00:36:21,040
testing myself as um also as I just

948
00:36:19,599 --> 00:36:22,840
generate a self-signed certificate have

949
00:36:21,040 --> 00:36:25,300
that certificate authority trusted<font color="#CCCCCC"> on my</font>

950
00:36:22,840 --> 00:36:27,310
<font color="#CCCCCC">test boxes and then deploy to those</font>

951
00:36:25,300 --> 00:36:30,970
systems and then once<font color="#E5E5E5"> I want to really</font>

952
00:36:27,310 --> 00:36:32,529
actually deploy my code then I go ahead

953
00:36:30,970 --> 00:36:33,910
<font color="#CCCCCC">and</font><font color="#E5E5E5"> do the painful process of</font>

954
00:36:32,530 --> 00:36:35,410
transferring it to an isolated<font color="#E5E5E5"> system</font>

955
00:36:33,910 --> 00:36:36,819
and code signing and everything like

956
00:36:35,410 --> 00:36:38,500
that<font color="#E5E5E5"> but just for testing and</font>

957
00:36:36,820 --> 00:36:39,940
<font color="#E5E5E5">development purposes it's obviously a</font>

958
00:36:38,500 --> 00:36:47,170
<font color="#E5E5E5">lot faster to do everything on your own</font>

959
00:36:39,940 --> 00:36:49,410
system there any other questions<font color="#CCCCCC"> alright</font>

960
00:36:47,170 --> 00:36:49,410
<font color="#CCCCCC">thank</font>

