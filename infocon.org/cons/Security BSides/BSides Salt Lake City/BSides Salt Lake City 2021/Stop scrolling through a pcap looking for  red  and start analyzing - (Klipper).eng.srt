1
00:00:09,360 --> 00:00:11,440
so i made a commitment for this

2
00:00:11,440 --> 00:00:14,400
presentation there's not a single slide

3
00:00:14,400 --> 00:00:15,759
so as you can see by the very

4
00:00:15,759 --> 00:00:18,960
professional um presentation wireshark

5
00:00:18,960 --> 00:00:20,160
is fun

6
00:00:20,160 --> 00:00:22,000
and i think it is uh i live and die by

7
00:00:22,000 --> 00:00:24,000
the peak app it's my favorite thing ever

8
00:00:24,000 --> 00:00:25,599
um i'm actually going to move this mic

9
00:00:25,599 --> 00:00:28,480
to the other side if that's cool

10
00:00:28,480 --> 00:00:29,679
now that you all adjusted the cameras

11
00:00:29,679 --> 00:00:32,640
you're like dang it sean

12
00:00:33,440 --> 00:00:35,440
there we go

13
00:00:35,440 --> 00:00:38,559
okay cool so one thing that i always i

14
00:00:38,559 --> 00:00:40,079
always thought with wireshark and i've

15
00:00:40,079 --> 00:00:42,160
lived by it is the the devils and the

16
00:00:42,160 --> 00:00:44,559
details the devils in the packets i'd

17
00:00:44,559 --> 00:00:45,920
have application guys i come from a

18
00:00:45,920 --> 00:00:47,039
background of

19
00:00:47,039 --> 00:00:49,280
network troubleshooting i was on a lan

20
00:00:49,280 --> 00:00:51,760
lan analyst team for 10 years um

21
00:00:51,760 --> 00:00:53,600
and i'd always have the application hey

22
00:00:53,600 --> 00:00:55,520
tell me hey it's the network it's always

23
00:00:55,520 --> 00:00:56,640
the network

24
00:00:56,640 --> 00:00:58,000
our logs say we're having network

25
00:00:58,000 --> 00:00:59,440
problems and i'd be like okay well cool

26
00:00:59,440 --> 00:01:01,039
let's get a packet capture and i give me

27
00:01:01,039 --> 00:01:02,719
a packet capture and i just show that

28
00:01:02,719 --> 00:01:04,959
it's not the network and they go well

29
00:01:04,959 --> 00:01:06,640
i still think it's the network okay

30
00:01:06,640 --> 00:01:08,479
that's fine right and i'd always like

31
00:01:08,479 --> 00:01:10,159
break out the osi model and i've said

32
00:01:10,159 --> 00:01:11,439
osi model and i've seen a few of you

33
00:01:11,439 --> 00:01:13,439
grown already but yes i live and die by

34
00:01:13,439 --> 00:01:15,200
the osi model and it's great

35
00:01:15,200 --> 00:01:16,640
um so we're going to dive right into

36
00:01:16,640 --> 00:01:18,479
wireshark like i'm not going to do any

37
00:01:18,479 --> 00:01:19,520
other

38
00:01:19,520 --> 00:01:21,680
presentation starts but i want to see if

39
00:01:21,680 --> 00:01:23,280
has anyone ever done this you open up a

40
00:01:23,280 --> 00:01:24,799
p cap or if anyone's seen someone do

41
00:01:24,799 --> 00:01:26,720
this and they just start doing this

42
00:01:26,720 --> 00:01:28,159
this action

43
00:01:28,159 --> 00:01:29,840
you ever see this

44
00:01:29,840 --> 00:01:31,200
and then they scroll down and they're

45
00:01:31,200 --> 00:01:33,040
looking and they're looking like oh

46
00:01:33,040 --> 00:01:35,200
found the problem it's red there's red

47
00:01:35,200 --> 00:01:36,960
in that pcapp

48
00:01:36,960 --> 00:01:38,000
and then they go to their network guys

49
00:01:38,000 --> 00:01:39,600
and they say hey just so you know you've

50
00:01:39,600 --> 00:01:42,560
got tcp dupe acts on your network

51
00:01:42,560 --> 00:01:44,079
and the guys go

52
00:01:44,079 --> 00:01:45,040
okay

53
00:01:45,040 --> 00:01:46,159
that's great

54
00:01:46,159 --> 00:01:47,680
and pretty much all of your credentials

55
00:01:47,680 --> 00:01:49,360
and all of your uh

56
00:01:49,360 --> 00:01:50,560
goodwill that you've fostered over the

57
00:01:50,560 --> 00:01:52,799
years is now gone so at a brazen who's

58
00:01:52,799 --> 00:01:54,159
actually opened and installed wireshark

59
00:01:54,159 --> 00:01:56,240
before

60
00:01:56,240 --> 00:01:57,680
who would consider themselves somewhat

61
00:01:57,680 --> 00:01:59,759
comfortable in wireshark

62
00:01:59,759 --> 00:02:02,240
a few cool that's good enough um i want

63
00:02:02,240 --> 00:02:03,759
this presentation to be kind of like the

64
00:02:03,759 --> 00:02:06,240
cafeteria style take what you like leave

65
00:02:06,240 --> 00:02:07,520
what you don't some of the stuff is my

66
00:02:07,520 --> 00:02:09,280
own personal preferences and how i do

67
00:02:09,280 --> 00:02:11,038
things if you like it great if you don't

68
00:02:11,038 --> 00:02:12,879
that's cool too the very first thing i'm

69
00:02:12,879 --> 00:02:15,040
going to say is ditch the default layout

70
00:02:15,040 --> 00:02:17,200
because it's terrible and if you use it

71
00:02:17,200 --> 00:02:18,560
you should feel bad

72
00:02:18,560 --> 00:02:20,560
because it was designed back when we had

73
00:02:20,560 --> 00:02:23,120
43 monitors so i'm just going to switch

74
00:02:23,120 --> 00:02:25,360
the profile to my own fun fact you can

75
00:02:25,360 --> 00:02:26,640
actually have multiple configuration

76
00:02:26,640 --> 00:02:28,319
profiles in wireshark so based on what

77
00:02:28,319 --> 00:02:29,120
you're doing if you're trying to

78
00:02:29,120 --> 00:02:30,879
troubleshoot a certain thing you can

79
00:02:30,879 --> 00:02:32,239
actually build an entire layout

80
00:02:32,239 --> 00:02:33,519
different columns different coloring

81
00:02:33,519 --> 00:02:35,280
rules based on different functions

82
00:02:35,280 --> 00:02:36,560
you're doing so if you're like doing

83
00:02:36,560 --> 00:02:38,080
slowness or

84
00:02:38,080 --> 00:02:39,599
resets or you're trying to do something

85
00:02:39,599 --> 00:02:40,560
completely different you can have

86
00:02:40,560 --> 00:02:42,000
different configuration profiles so

87
00:02:42,000 --> 00:02:43,840
you're not always going through and

88
00:02:43,840 --> 00:02:45,760
changing it which i found is great so

89
00:02:45,760 --> 00:02:47,200
i'm going to switch it over to mine and

90
00:02:47,200 --> 00:02:48,560
if someone wants this i'll be happy to

91
00:02:48,560 --> 00:02:50,239
give it to them again this is just my

92
00:02:50,239 --> 00:02:52,560
personal layout what i like to do as you

93
00:02:52,560 --> 00:02:54,319
can see i've changed the your packet

94
00:02:54,319 --> 00:02:55,760
list packet details back at bytes right

95
00:02:55,760 --> 00:02:57,760
there

96
00:02:57,760 --> 00:02:58,879
you'll see my coloring rules are a

97
00:02:58,879 --> 00:02:59,840
little bit different and i've got

98
00:02:59,840 --> 00:03:01,519
different columns than most folks have i

99
00:03:01,519 --> 00:03:03,280
like it this way because i can use my

100
00:03:03,280 --> 00:03:05,200
widescreen monitors and kind of break

101
00:03:05,200 --> 00:03:07,120
this up a little bit you'll notice that

102
00:03:07,120 --> 00:03:09,200
i've got different columns first one is

103
00:03:09,200 --> 00:03:10,800
length and that's very important i'll

104
00:03:10,800 --> 00:03:12,800
show you why in a bit i've got delta

105
00:03:12,800 --> 00:03:15,360
time displayed and as you may or may not

106
00:03:15,360 --> 00:03:17,360
know that is the time difference between

107
00:03:17,360 --> 00:03:19,040
this packet and this packet is

108
00:03:19,040 --> 00:03:20,959
calculated that delta i've got an

109
00:03:20,959 --> 00:03:22,720
absolute time and i use that just for

110
00:03:22,720 --> 00:03:24,799
the old like when someone says you know

111
00:03:24,799 --> 00:03:26,720
the issue happened at three o'clock so i

112
00:03:26,720 --> 00:03:29,280
can go and go go look at three o'clock

113
00:03:29,280 --> 00:03:30,799
most people don't know this but by

114
00:03:30,799 --> 00:03:34,000
default this time

115
00:03:34,000 --> 00:03:35,599
the default in wireshark the time if you

116
00:03:35,599 --> 00:03:38,640
don't go and change that to a utc time

117
00:03:38,640 --> 00:03:40,000
or something generic it'll actually

118
00:03:40,000 --> 00:03:41,440
change the time zone from where they

119
00:03:41,440 --> 00:03:43,360
captured it to your own think it's being

120
00:03:43,360 --> 00:03:45,680
helpful i've spent hours upon hours

121
00:03:45,680 --> 00:03:46,799
analyzing a trace when they said the

122
00:03:46,799 --> 00:03:48,640
problem happened at 4 00 p.m

123
00:03:48,640 --> 00:03:50,239
and it was on the east coast and i was

124
00:03:50,239 --> 00:03:52,159
in utah and i was looking at two and i'm

125
00:03:52,159 --> 00:03:54,400
like i'm not seeing anything well turns

126
00:03:54,400 --> 00:03:56,400
out wireshark was doing that for me

127
00:03:56,400 --> 00:03:57,280
um

128
00:03:57,280 --> 00:03:58,400
so yeah the first thing you do change

129
00:03:58,400 --> 00:04:00,560
layouts um all that stuff

130
00:04:00,560 --> 00:04:02,319
um i kind of want to talk about

131
00:04:02,319 --> 00:04:04,319
filtering filtering is the real power

132
00:04:04,319 --> 00:04:06,640
that comes with wireshark and and i

133
00:04:06,640 --> 00:04:09,200
worry that people get um intimidated by

134
00:04:09,200 --> 00:04:10,640
it like they're like i don't know the

135
00:04:10,640 --> 00:04:12,560
syntax and i don't know how to do it

136
00:04:12,560 --> 00:04:14,239
they've actually built a pretty robust

137
00:04:14,239 --> 00:04:16,639
click point-and-click like gui driven

138
00:04:16,639 --> 00:04:18,320
filtering that that you can take

139
00:04:18,320 --> 00:04:20,160
advantage of so literally i'm just going

140
00:04:20,160 --> 00:04:22,720
to start scrolling this random trace

141
00:04:22,720 --> 00:04:25,840
and i'm going to go to that git right

142
00:04:25,840 --> 00:04:28,080
who's familiar with the tcp three-way

143
00:04:28,080 --> 00:04:29,680
handshake you know that sin snack act

144
00:04:29,680 --> 00:04:31,280
we've seen that before what if you want

145
00:04:31,280 --> 00:04:32,479
to see all the sins in the packet

146
00:04:32,479 --> 00:04:33,680
capture

147
00:04:33,680 --> 00:04:35,040
well the cheaters are just going to go

148
00:04:35,040 --> 00:04:37,360
like this

149
00:04:37,880 --> 00:04:40,160
tcp.1 right we have them memorize some

150
00:04:40,160 --> 00:04:42,880
of us some of us don't well those same

151
00:04:42,880 --> 00:04:44,639
they're that same information is in

152
00:04:44,639 --> 00:04:47,040
every packet if you just drop down to

153
00:04:47,040 --> 00:04:48,880
your tcp header here

154
00:04:48,880 --> 00:04:50,639
go down to your synbit you can right

155
00:04:50,639 --> 00:04:53,040
click on that prepare filter and do

156
00:04:53,040 --> 00:04:55,600
selected tsp flags at syn equals zero

157
00:04:55,600 --> 00:04:57,360
chain it to a one you just built there's

158
00:04:57,360 --> 00:04:59,440
all your sins in your whole trace right

159
00:04:59,440 --> 00:05:02,000
cool gui driven way to do it um super

160
00:05:02,000 --> 00:05:03,039
handy

161
00:05:03,039 --> 00:05:06,160
let's say for example um we want to see

162
00:05:06,160 --> 00:05:07,280
all of the

163
00:05:07,280 --> 00:05:09,360
times that a box reached out to cert or

164
00:05:09,360 --> 00:05:11,600
any box reached out to a certain host

165
00:05:11,600 --> 00:05:13,440
i'm going to switch captures here

166
00:05:13,440 --> 00:05:15,680
i'm actually using the ctf pcap from

167
00:05:15,680 --> 00:05:16,960
sync con this year thanks to them for

168
00:05:16,960 --> 00:05:18,080
them to use this

169
00:05:18,080 --> 00:05:19,440
it was super helpful if you didn't get a

170
00:05:19,440 --> 00:05:20,880
chance to do that at st khan try next

171
00:05:20,880 --> 00:05:23,039
time really great a lot of fun

172
00:05:23,039 --> 00:05:25,280
um let's just say i want to find out

173
00:05:25,280 --> 00:05:26,560
every time

174
00:05:26,560 --> 00:05:28,639
someone reached out to a bad host so i'm

175
00:05:28,639 --> 00:05:30,320
just going to do http for my filter

176
00:05:30,320 --> 00:05:33,120
there just show me the http for now

177
00:05:33,120 --> 00:05:34,880
and again we're going to drill down just

178
00:05:34,880 --> 00:05:36,880
like we did before

179
00:05:36,880 --> 00:05:38,479
for those that aren't comfortable with

180
00:05:38,479 --> 00:05:40,479
the osi model i can make it even simple

181
00:05:40,479 --> 00:05:42,160
layer two layer three layer four

182
00:05:42,160 --> 00:05:43,840
application layer that's the simplest

183
00:05:43,840 --> 00:05:45,680
way to remember it but we're gonna drop

184
00:05:45,680 --> 00:05:47,280
down to this http

185
00:05:47,280 --> 00:05:48,880
and there's the host that's the host

186
00:05:48,880 --> 00:05:50,479
we're gonna right click on that prepare

187
00:05:50,479 --> 00:05:53,360
a filter selected http.host

188
00:05:53,360 --> 00:05:54,880
right there that's how you can build

189
00:05:54,880 --> 00:05:56,560
that build those filters if you don't

190
00:05:56,560 --> 00:05:57,840
want to remember the syntax you don't

191
00:05:57,840 --> 00:05:59,039
want to learn this syntax you're still

192
00:05:59,039 --> 00:06:00,560
getting used to it and you'll eventually

193
00:06:00,560 --> 00:06:01,600
get there and you'll start remembering

194
00:06:01,600 --> 00:06:03,520
and that's great but there's it's nice

195
00:06:03,520 --> 00:06:05,120
to have some gui driven things to kind

196
00:06:05,120 --> 00:06:08,160
of help you there in the beginning

197
00:06:08,240 --> 00:06:09,840
one thing you can also do that a lot of

198
00:06:09,840 --> 00:06:11,440
folks don't hang out with let's say

199
00:06:11,440 --> 00:06:12,880
you've got a ton of data and you don't

200
00:06:12,880 --> 00:06:15,039
want to filter it that way and you just

201
00:06:15,039 --> 00:06:16,800
want to have a header or excuse me a

202
00:06:16,800 --> 00:06:18,479
column and you want to see that you can

203
00:06:18,479 --> 00:06:19,840
actually right click on any of these

204
00:06:19,840 --> 00:06:21,280
things down here

205
00:06:21,280 --> 00:06:24,720
and then do a applies column

206
00:06:24,720 --> 00:06:26,479
and then you're going to get grumpy

207
00:06:26,479 --> 00:06:27,759
because wireshark doesn't like adding

208
00:06:27,759 --> 00:06:28,800
columns while you do it you're going to

209
00:06:28,800 --> 00:06:30,639
have to click and drag and move around

210
00:06:30,639 --> 00:06:32,240
then suddenly it'll show up on that

211
00:06:32,240 --> 00:06:34,160
right side

212
00:06:34,160 --> 00:06:36,160
and there it is so if you're looking

213
00:06:36,160 --> 00:06:37,600
this trace kind of like holistically and

214
00:06:37,600 --> 00:06:39,039
you do want to scroll through and say

215
00:06:39,039 --> 00:06:40,960
who's everyone that talked out to this

216
00:06:40,960 --> 00:06:42,400
particular host

217
00:06:42,400 --> 00:06:44,800
super cool now let's say you don't want

218
00:06:44,800 --> 00:06:47,199
to scroll let's say i've got this let's

219
00:06:47,199 --> 00:06:49,120
say you took the trace from a mirrored

220
00:06:49,120 --> 00:06:51,280
port um on the egress of your network

221
00:06:51,280 --> 00:06:53,039
which is fine you take out an airport

222
00:06:53,039 --> 00:06:54,080
and you've got tons of hosts you're like

223
00:06:54,080 --> 00:06:56,160
i don't know every single host that

224
00:06:56,160 --> 00:06:57,919
reached out to this particular bad actor

225
00:06:57,919 --> 00:07:00,720
this accounting.acmephysics.com

226
00:07:00,720 --> 00:07:02,720
that is throwing credentials out in the

227
00:07:02,720 --> 00:07:03,840
clear but we're not going to worry about

228
00:07:03,840 --> 00:07:05,680
that for now

229
00:07:05,680 --> 00:07:07,440
so what you can actually do is go out

230
00:07:07,440 --> 00:07:10,639
here to your um

231
00:07:10,639 --> 00:07:14,720
statistics hit your conversations

232
00:07:15,360 --> 00:07:16,720
limit that to your display filter

233
00:07:16,720 --> 00:07:18,319
because we are filtering on that bad

234
00:07:18,319 --> 00:07:20,720
host

235
00:07:21,759 --> 00:07:23,520
and from there there's only one host to

236
00:07:23,520 --> 00:07:25,120
talk to it but that would actually dump

237
00:07:25,120 --> 00:07:27,039
an entire list of every host that

238
00:07:27,039 --> 00:07:28,400
reached out and docked to it so if you

239
00:07:28,400 --> 00:07:30,800
wanted a quick who got popped run that

240
00:07:30,800 --> 00:07:32,560
be super easy

241
00:07:32,560 --> 00:07:33,599
um

242
00:07:33,599 --> 00:07:34,880
another thing that comes through a lot

243
00:07:34,880 --> 00:07:36,479
as i mentioned tracing and doing a

244
00:07:36,479 --> 00:07:38,800
mirrored port trace a lot of times when

245
00:07:38,800 --> 00:07:40,800
as a um

246
00:07:40,800 --> 00:07:43,919
as a as a packet analyzer you'll say hey

247
00:07:43,919 --> 00:07:45,199
i want you to give me a packet capture

248
00:07:45,199 --> 00:07:46,720
and i want you to take it from a

249
00:07:46,720 --> 00:07:47,919
mirrored port i don't want it on the

250
00:07:47,919 --> 00:07:50,160
machine i want it for my mirrored port

251
00:07:50,160 --> 00:07:52,000
and they're like okay sure and they

252
00:07:52,000 --> 00:07:53,520
think they're going to pull a sneaky on

253
00:07:53,520 --> 00:07:54,960
you and they'll just capture it on the

254
00:07:54,960 --> 00:07:56,000
machine

255
00:07:56,000 --> 00:07:57,520
and the first thing i do every trace i

256
00:07:57,520 --> 00:07:59,280
get i kind of try to figure out where

257
00:07:59,280 --> 00:08:02,160
did this trace come from now one super

258
00:08:02,160 --> 00:08:04,080
cool thing about ethernet is for a

259
00:08:04,080 --> 00:08:06,400
packet to live on the wire it's got to

260
00:08:06,400 --> 00:08:08,560
be at least a length of 60. now it's 60

261
00:08:08,560 --> 00:08:11,840
plus 4 bytes for error or track summing

262
00:08:11,840 --> 00:08:13,919
but wireshark wireshark strips those off

263
00:08:13,919 --> 00:08:16,240
for us so there's 60. so if i ever get a

264
00:08:16,240 --> 00:08:18,639
trace that is the minimum like 60 and

265
00:08:18,639 --> 00:08:20,800
you can actually sort by that

266
00:08:20,800 --> 00:08:22,800
i'll know that this trace was likely

267
00:08:22,800 --> 00:08:25,360
captured external to a machine

268
00:08:25,360 --> 00:08:27,759
but if i get a trace that looks a little

269
00:08:27,759 --> 00:08:29,360
bit different i'll show you that

270
00:08:29,360 --> 00:08:32,960
let's do our ttl little example

271
00:08:35,760 --> 00:08:37,360
and go up here i've got packets that are

272
00:08:37,360 --> 00:08:38,958
less than 60.

273
00:08:38,958 --> 00:08:41,679
and i can click on one of those

274
00:08:41,679 --> 00:08:42,880
or i can click on them there's actually

275
00:08:42,880 --> 00:08:45,599
a lot of them on this one

276
00:08:45,760 --> 00:08:47,920
let's just grab one of these i now know

277
00:08:47,920 --> 00:08:50,080
that the source where this was captured

278
00:08:50,080 --> 00:08:51,519
was this microsoft device right here

279
00:08:51,519 --> 00:08:54,080
with this mac address because my packet

280
00:08:54,080 --> 00:08:56,399
length is 54

281
00:08:56,399 --> 00:08:58,240
and then that's my source mac address

282
00:08:58,240 --> 00:09:00,000
right there so when everyone says hey

283
00:09:00,000 --> 00:09:01,760
yep i absolutely mirrored a port and i

284
00:09:01,760 --> 00:09:04,160
see packs that are less than 60 i go

285
00:09:04,160 --> 00:09:05,839
no you didn't why don't you go get me

286
00:09:05,839 --> 00:09:07,279
another trace and they'll double down

287
00:09:07,279 --> 00:09:09,040
they'll say no i'm mirrored a port i'm

288
00:09:09,040 --> 00:09:11,200
like okay you really didn't want to give

289
00:09:11,200 --> 00:09:13,519
me that trace and then magically we got

290
00:09:13,519 --> 00:09:14,800
someone else involved and then the trace

291
00:09:14,800 --> 00:09:16,640
i want actually shows up which is super

292
00:09:16,640 --> 00:09:19,200
super handy to have so

293
00:09:19,200 --> 00:09:20,880
just these small little tips and tricks

294
00:09:20,880 --> 00:09:21,920
that i'm showing you are kind of things

295
00:09:21,920 --> 00:09:22,959
that you just need to build in your

296
00:09:22,959 --> 00:09:25,120
brain as you become an analyzer going

297
00:09:25,120 --> 00:09:26,880
okay check the packet length is it less

298
00:09:26,880 --> 00:09:29,120
than 60 great this trace was taken from

299
00:09:29,120 --> 00:09:31,760
this particular perspective right

300
00:09:31,760 --> 00:09:33,600
um

301
00:09:33,600 --> 00:09:35,519
on that note i'm actually using hard

302
00:09:35,519 --> 00:09:37,120
copy for my outline you like that old

303
00:09:37,120 --> 00:09:38,320
school time

304
00:09:38,320 --> 00:09:39,839
um

305
00:09:39,839 --> 00:09:41,920
one cool trick i want to show you um i

306
00:09:41,920 --> 00:09:43,920
call it bookmarking and bookmarking is

307
00:09:43,920 --> 00:09:45,839
something and we're actually going to

308
00:09:45,839 --> 00:09:47,360
we're going to do a demo lose a sale

309
00:09:47,360 --> 00:09:48,839
here why

310
00:09:48,839 --> 00:09:51,040
not this is crazy we're gonna do it

311
00:09:51,040 --> 00:09:52,880
anyway one thing we like to do we're

312
00:09:52,880 --> 00:09:56,640
gonna get on a network here

313
00:09:56,959 --> 00:10:00,000
lh miller was that it

314
00:10:00,640 --> 00:10:02,320
no

315
00:10:02,320 --> 00:10:04,240
one thing we like to do is we're gonna

316
00:10:04,240 --> 00:10:05,920
go to captures and get on our wi-fi and

317
00:10:05,920 --> 00:10:09,120
we're gonna start capturing stuff

318
00:10:09,120 --> 00:10:11,680
oh cool we're capturing stuff so let's

319
00:10:11,680 --> 00:10:14,560
say the problem statement is

320
00:10:14,560 --> 00:10:16,480
i try to go out to google and it doesn't

321
00:10:16,480 --> 00:10:18,800
load that's just the problem statement

322
00:10:18,800 --> 00:10:20,720
one thing i will always like to do is

323
00:10:20,720 --> 00:10:23,040
i'll get everything kind of pre-staged

324
00:10:23,040 --> 00:10:24,800
and i'll get my browser open and i'm

325
00:10:24,800 --> 00:10:26,480
already tracing so i'm like wasting time

326
00:10:26,480 --> 00:10:29,600
but we're going to do it anyway

327
00:10:29,680 --> 00:10:31,360
and then our mouse is going to die and

328
00:10:31,360 --> 00:10:32,399
it's going to look really awkward on

329
00:10:32,399 --> 00:10:33,360
camera

330
00:10:33,360 --> 00:10:35,760
that's awesome touch screens cool so

331
00:10:35,760 --> 00:10:39,839
we're going to ping 8.8.8.8

332
00:10:39,839 --> 00:10:40,959
and then we're going to go over here

333
00:10:40,959 --> 00:10:43,200
wait until that's done four pings great

334
00:10:43,200 --> 00:10:44,399
and then we're going to go to google and

335
00:10:44,399 --> 00:10:46,959
i'm just going to go to google again

336
00:10:46,959 --> 00:10:48,720
that's a lot of fun and then i'm going

337
00:10:48,720 --> 00:10:49,800
to ping

338
00:10:49,800 --> 00:10:52,079
8.8.8. again

339
00:10:52,079 --> 00:10:53,440
and four more pings

340
00:10:53,440 --> 00:10:55,279
cool

341
00:10:55,279 --> 00:10:58,079
and i'm going to stop my trace

342
00:10:58,079 --> 00:11:01,519
now in my trace if i go for icmp

343
00:11:01,519 --> 00:11:02,880
there's my pings that i sent to google

344
00:11:02,880 --> 00:11:04,079
right

345
00:11:04,079 --> 00:11:07,040
i now know that in between these pings

346
00:11:07,040 --> 00:11:08,640
my problem occurred or the issue i was

347
00:11:08,640 --> 00:11:10,399
trying to reproduce occurred

348
00:11:10,399 --> 00:11:13,600
so one cool trick that i like to do is

349
00:11:13,600 --> 00:11:15,760
if i go into this wow now i have no

350
00:11:15,760 --> 00:11:18,079
mouse

351
00:11:18,079 --> 00:11:20,560
this is super nice

352
00:11:20,560 --> 00:11:22,399
you can right click on these and set a

353
00:11:22,399 --> 00:11:23,760
time reference

354
00:11:23,760 --> 00:11:25,040
now the cool thing about a time

355
00:11:25,040 --> 00:11:26,720
reference

356
00:11:26,720 --> 00:11:28,640
is time references will show up no

357
00:11:28,640 --> 00:11:31,680
matter what filter you are doing

358
00:11:31,680 --> 00:11:33,680
so let's say i want to see just uh

359
00:11:33,680 --> 00:11:35,279
tcp.port

360
00:11:35,279 --> 00:11:38,320
equals equals 443.

361
00:11:40,000 --> 00:11:44,320
as i look here in this trace

362
00:11:44,320 --> 00:11:48,000
i can find my bookmarks

363
00:11:48,000 --> 00:11:51,720
sorry i'm gonna cheat

364
00:11:56,720 --> 00:11:59,279
they are

365
00:11:59,279 --> 00:12:01,680
right

366
00:12:04,480 --> 00:12:07,680
i saw them another gone

367
00:12:08,880 --> 00:12:09,920
actually we're going to do a different

368
00:12:09,920 --> 00:12:12,320
way we're going to cheat a different way

369
00:12:12,320 --> 00:12:15,600
because it's a better example

370
00:12:15,760 --> 00:12:18,720
so same setup

371
00:12:23,760 --> 00:12:25,440
and we're going to ping

372
00:12:25,440 --> 00:12:28,160
8.8.8

373
00:12:28,160 --> 00:12:30,720
and then i'm going to do a test net

374
00:12:30,720 --> 00:12:32,079
connection

375
00:12:32,079 --> 00:12:33,360
um

376
00:12:33,360 --> 00:12:35,279
google.com

377
00:12:35,279 --> 00:12:39,240
dashboard 81.

378
00:12:40,079 --> 00:12:42,560
and then i'm making my attempt

379
00:12:42,560 --> 00:12:43,680
and then i'm going to do

380
00:12:43,680 --> 00:12:44,480
ping

381
00:12:44,480 --> 00:12:47,480
8.8.8

382
00:12:49,200 --> 00:12:52,839
stop my trace

383
00:12:55,120 --> 00:12:57,760
um i'm going to tag those

384
00:12:57,760 --> 00:13:01,760
pings really quick just so i have them

385
00:13:03,200 --> 00:13:04,320
and then remember i'm going to use that

386
00:13:04,320 --> 00:13:06,880
set time reference

387
00:13:06,880 --> 00:13:08,079
and i'm going to set another time

388
00:13:08,079 --> 00:13:09,600
reference now i'm not doing it in

389
00:13:09,600 --> 00:13:10,880
between the actual ones but i'm just

390
00:13:10,880 --> 00:13:13,200
giving you the example and then if i do

391
00:13:13,200 --> 00:13:16,959
tcp dot port equals equals 81

392
00:13:16,959 --> 00:13:18,639
those pins still show up

393
00:13:18,639 --> 00:13:19,839
even though that's not in my current

394
00:13:19,839 --> 00:13:22,240
filter they show up so

395
00:13:22,240 --> 00:13:23,760
you tag your first one before you

396
00:13:23,760 --> 00:13:25,680
duplicate you duplicate problem you tag

397
00:13:25,680 --> 00:13:27,680
your next one and then as you filter

398
00:13:27,680 --> 00:13:28,800
those will always show up and you'll

399
00:13:28,800 --> 00:13:30,800
find the problem you're looking for so

400
00:13:30,800 --> 00:13:33,279
pretty handy i use that quite a bit

401
00:13:33,279 --> 00:13:36,160
one danger of that is you'll notice like

402
00:13:36,160 --> 00:13:37,760
this is the display filter and when

403
00:13:37,760 --> 00:13:39,680
you're filtering or when you're tracing

404
00:13:39,680 --> 00:13:41,839
you can actually do a

405
00:13:41,839 --> 00:13:44,079
a filter on your trace when you take it

406
00:13:44,079 --> 00:13:46,839
and just a word of warning on that

407
00:13:46,839 --> 00:13:49,839
don't don't filter your trace before you

408
00:13:49,839 --> 00:13:50,959
don't filter your trace while you

409
00:13:50,959 --> 00:13:53,360
capture it filter the trace

410
00:13:53,360 --> 00:13:54,959
um afterwards while you're doing the

411
00:13:54,959 --> 00:13:56,800
analyst but capture every packet you get

412
00:13:56,800 --> 00:13:58,240
it i always i'm gonna go back to buffet

413
00:13:58,240 --> 00:14:00,560
analogy let me pick out my own food

414
00:14:00,560 --> 00:14:02,079
don't hand me a plate on what you want

415
00:14:02,079 --> 00:14:03,600
to give me right

416
00:14:03,600 --> 00:14:05,120
let me go through as an analyst and find

417
00:14:05,120 --> 00:14:06,720
those packets

418
00:14:06,720 --> 00:14:08,639
unless you're in a scenario where it's

419
00:14:08,639 --> 00:14:11,279
going to be so ginormous you can't

420
00:14:11,279 --> 00:14:13,199
really try to avoid capture filtering

421
00:14:13,199 --> 00:14:15,440
from the get-go

422
00:14:15,440 --> 00:14:17,199
and the reason is you run into dangers

423
00:14:17,199 --> 00:14:18,240
we're

424
00:14:18,240 --> 00:14:19,920
let's just say we're

425
00:14:19,920 --> 00:14:21,680
for example let's say we had a ping pong

426
00:14:21,680 --> 00:14:23,440
and we wanted to find it

427
00:14:23,440 --> 00:14:27,360
and we're gonna start another trace here

428
00:14:27,360 --> 00:14:30,320
and for my test case i'm to ping this

429
00:14:30,320 --> 00:14:32,160
isn't a real oops we're going to put

430
00:14:32,160 --> 00:14:35,120
those in there in a real domain and this

431
00:14:35,120 --> 00:14:37,839
won't work

432
00:14:38,639 --> 00:14:40,560
and they say okay i duplicate it for

433
00:14:40,560 --> 00:14:42,000
that and you look in here there's no

434
00:14:42,000 --> 00:14:43,519
icmp

435
00:14:43,519 --> 00:14:45,360
well of course there's no icmp we failed

436
00:14:45,360 --> 00:14:46,880
well before that even happened we failed

437
00:14:46,880 --> 00:14:48,560
on name resolution so this just

438
00:14:48,560 --> 00:14:51,040
illustrates the point capture everything

439
00:14:51,040 --> 00:14:53,199
analyze second i've been burnt way too

440
00:14:53,199 --> 00:14:55,440
many times personally of doing just that

441
00:14:55,440 --> 00:14:57,279
thing i'll say yeah it's probably okay

442
00:14:57,279 --> 00:14:59,440
this time filter the traces you capture

443
00:14:59,440 --> 00:15:01,680
and then within a few hours i'm like no

444
00:15:01,680 --> 00:15:03,760
go give me an unfiltered one

445
00:15:03,760 --> 00:15:04,720
now

446
00:15:04,720 --> 00:15:07,040
one other i think how many people work

447
00:15:07,040 --> 00:15:08,639
in environments where it's like you

448
00:15:08,639 --> 00:15:10,800
can't just install whatever you want on

449
00:15:10,800 --> 00:15:12,720
our machines you have any of those

450
00:15:12,720 --> 00:15:13,839
and you say i want to get a trace and

451
00:15:13,839 --> 00:15:15,440
it's like we'll put wireshark on there

452
00:15:15,440 --> 00:15:17,600
they're going to be like no

453
00:15:17,600 --> 00:15:20,480
well you could always do net sh trace

454
00:15:20,480 --> 00:15:23,279
start capture equals

455
00:15:23,279 --> 00:15:24,240
yes

456
00:15:24,240 --> 00:15:26,320
that's built in you can run that you'll

457
00:15:26,320 --> 00:15:28,079
get an etl file which can be exported to

458
00:15:28,079 --> 00:15:30,000
a pcap but you can actually go ahead and

459
00:15:30,000 --> 00:15:31,600
run this on pretty much any modern

460
00:15:31,600 --> 00:15:32,800
windows box

461
00:15:32,800 --> 00:15:34,720
um and snag your trace that way i have

462
00:15:34,720 --> 00:15:36,079
to do that quite often

463
00:15:36,079 --> 00:15:37,440
the funny thing is i know about this and

464
00:15:37,440 --> 00:15:39,120
i use this pretty often i'll still tell

465
00:15:39,120 --> 00:15:40,320
people install wireshark not thinking

466
00:15:40,320 --> 00:15:41,440
like yeah just install washer and get a

467
00:15:41,440 --> 00:15:43,920
trace oh wait you could use an ssh and

468
00:15:43,920 --> 00:15:45,440
there might just go through it

469
00:15:45,440 --> 00:15:48,399
um this isn't a linux box obviously but

470
00:15:48,399 --> 00:15:51,880
for linux friends

471
00:15:56,079 --> 00:15:57,920
there's your linux version that's what

472
00:15:57,920 --> 00:15:59,440
your command you'd use for that

473
00:15:59,440 --> 00:16:03,600
um tcp dump is our friend we snag those

474
00:16:03,600 --> 00:16:04,560
okay

475
00:16:04,560 --> 00:16:06,320
now one other thing i like to bring up

476
00:16:06,320 --> 00:16:08,000
is i've been in places where i say hey

477
00:16:08,000 --> 00:16:09,759
you know what i want to get a trace and

478
00:16:09,759 --> 00:16:11,279
they're like this is a secure facility

479
00:16:11,279 --> 00:16:14,079
we can't give you a trace i'm like okay

480
00:16:14,079 --> 00:16:15,680
can i have headers and they'll be like

481
00:16:15,680 --> 00:16:17,600
yeah we even have headers and then

482
00:16:17,600 --> 00:16:20,079
they'll try to take a capture and um

483
00:16:20,079 --> 00:16:21,120
they'll end up grabbing everything i'm

484
00:16:21,120 --> 00:16:22,320
like well actually it gave me everything

485
00:16:22,320 --> 00:16:24,480
but i really wanted your headers if you

486
00:16:24,480 --> 00:16:26,079
wanted to do that you can actually go to

487
00:16:26,079 --> 00:16:28,000
your capture options here

488
00:16:28,000 --> 00:16:29,920
go to your output well not output on

489
00:16:29,920 --> 00:16:31,519
your input sorry

490
00:16:31,519 --> 00:16:33,519
go ahead here to snap length change that

491
00:16:33,519 --> 00:16:35,519
to 54 and you'll snag headers and

492
00:16:35,519 --> 00:16:36,720
headers only

493
00:16:36,720 --> 00:16:37,600
um

494
00:16:37,600 --> 00:16:39,279
really useful if some folks are saying

495
00:16:39,279 --> 00:16:40,720
hey we don't want to see we don't want

496
00:16:40,720 --> 00:16:42,720
you to see our application traffic

497
00:16:42,720 --> 00:16:44,079
just give me the headers some still

498
00:16:44,079 --> 00:16:46,399
information can be get got can be

499
00:16:46,399 --> 00:16:48,160
analyzed from the headers it's not as

500
00:16:48,160 --> 00:16:50,560
great as having everything but it's a

501
00:16:50,560 --> 00:16:52,240
way that you can kind of appease the

502
00:16:52,240 --> 00:16:53,440
masses if they don't want to give you a

503
00:16:53,440 --> 00:16:54,560
trace

504
00:16:54,560 --> 00:16:56,240
the other very common thing when taking

505
00:16:56,240 --> 00:16:58,639
a trace that i always hear is well the

506
00:16:58,639 --> 00:17:01,040
issue is intermittent it happens

507
00:17:01,040 --> 00:17:03,680
sometimes and i hear that so many times

508
00:17:03,680 --> 00:17:05,039
um that's when you use what's called a

509
00:17:05,039 --> 00:17:06,959
ring trace and so what you'll do is

510
00:17:06,959 --> 00:17:08,559
you'll have this new file creation

511
00:17:08,559 --> 00:17:10,720
automatically you can you can trigger a

512
00:17:10,720 --> 00:17:13,520
new file based on how long the trace was

513
00:17:13,520 --> 00:17:15,919
how many like multiples of hours i

514
00:17:15,919 --> 00:17:17,520
normally just basically say give me

515
00:17:17,520 --> 00:17:19,599
rings of like a gig each and then use me

516
00:17:19,599 --> 00:17:22,079
a ring buffer of like five or so

517
00:17:22,079 --> 00:17:23,839
so depending on how busy the network is

518
00:17:23,839 --> 00:17:25,919
that'll that'll obviously influence how

519
00:17:25,919 --> 00:17:28,640
big those files are um but yeah get this

520
00:17:28,640 --> 00:17:30,559
trace going and say hey the moment you

521
00:17:30,559 --> 00:17:32,080
see the problem you let me know and then

522
00:17:32,080 --> 00:17:33,520
you can remote in and stop the trace or

523
00:17:33,520 --> 00:17:35,200
you can have an admin remote stop trace

524
00:17:35,200 --> 00:17:36,960
having that ring buffer of five files

525
00:17:36,960 --> 00:17:39,039
building a gig file each time usually

526
00:17:39,039 --> 00:17:40,880
enough time to get in there and stop it

527
00:17:40,880 --> 00:17:44,000
so very useful for intermittent issues

528
00:17:44,000 --> 00:17:46,400
times you don't see you know sometimes

529
00:17:46,400 --> 00:17:47,280
when things aren't happening all the

530
00:17:47,280 --> 00:17:49,280
time you can't trigger it it's kind of a

531
00:17:49,280 --> 00:17:51,120
there's an outside condition causing it

532
00:17:51,120 --> 00:17:53,200
all that good stuff like that

533
00:17:53,200 --> 00:17:54,320
um

534
00:17:54,320 --> 00:17:55,760
cool

535
00:17:55,760 --> 00:17:57,600
on that note i'm going to dive in some

536
00:17:57,600 --> 00:17:59,039
traces i'm just trying to show you some

537
00:17:59,039 --> 00:18:01,360
cool stuff that we find on here okay i'm

538
00:18:01,360 --> 00:18:04,480
not really doing this i promise

539
00:18:04,480 --> 00:18:05,280
cool

540
00:18:05,280 --> 00:18:07,679
so what we're going to do is we talked

541
00:18:07,679 --> 00:18:08,880
about the three-way handshake a little

542
00:18:08,880 --> 00:18:10,720
bit before

543
00:18:10,720 --> 00:18:13,679
um let's open up our

544
00:18:13,679 --> 00:18:16,960
let's do an unanswered sin

545
00:18:18,480 --> 00:18:19,280
so

546
00:18:19,280 --> 00:18:21,280
let's just snag

547
00:18:21,280 --> 00:18:23,039
oh actually did i keep that trace this

548
00:18:23,039 --> 00:18:25,600
one just did

549
00:18:26,799 --> 00:18:29,840
i think it was

550
00:18:32,480 --> 00:18:34,799
okay so this is a

551
00:18:34,799 --> 00:18:36,240
so i'm looking for the sinbits over the

552
00:18:36,240 --> 00:18:38,480
tcp three-way handshake a sins and a

553
00:18:38,480 --> 00:18:39,600
one thing you can do if you're wanting

554
00:18:39,600 --> 00:18:41,360
to look for your unanswered ones you can

555
00:18:41,360 --> 00:18:43,840
actually go here to your statistics

556
00:18:43,840 --> 00:18:46,240
and then go to your conversations

557
00:18:46,240 --> 00:18:47,840
and then limit that to our display

558
00:18:47,840 --> 00:18:49,039
filter

559
00:18:49,039 --> 00:18:51,520
and anytime when you've got host a and

560
00:18:51,520 --> 00:18:53,840
host b if one of these is has like three

561
00:18:53,840 --> 00:18:55,200
four or five packets and the end one is

562
00:18:55,200 --> 00:18:57,840
zero those are unanswered sins so if

563
00:18:57,840 --> 00:18:58,880
you're trying to troubleshoot something

564
00:18:58,880 --> 00:19:00,000
where let's say you've got an

565
00:19:00,000 --> 00:19:01,120
application where you don't know the

566
00:19:01,120 --> 00:19:02,240
port it's going to be listening on or

567
00:19:02,240 --> 00:19:03,760
with that dynamic and you're like i just

568
00:19:03,760 --> 00:19:05,360
need to see all the times that a sin

569
00:19:05,360 --> 00:19:07,520
failed do that display filter to see all

570
00:19:07,520 --> 00:19:09,679
those sins to speed up flags flags.equal

571
00:19:09,679 --> 00:19:11,919
equals one equals equals one and then

572
00:19:11,919 --> 00:19:13,760
head out to where there's zero responses

573
00:19:13,760 --> 00:19:16,559
here um quick way you can just find

574
00:19:16,559 --> 00:19:18,000
those that

575
00:19:18,000 --> 00:19:20,000
those sins that go unanswered

576
00:19:20,000 --> 00:19:21,360
um

577
00:19:21,360 --> 00:19:23,600
there there's always there's always tips

578
00:19:23,600 --> 00:19:25,120
and tricks and things that speed that up

579
00:19:25,120 --> 00:19:26,720
but honestly using these built-in

580
00:19:26,720 --> 00:19:29,039
statistics conversations your endpoints

581
00:19:29,039 --> 00:19:30,960
your io graphs these are the things that

582
00:19:30,960 --> 00:19:32,720
help you focus in on what you're going

583
00:19:32,720 --> 00:19:35,440
to be looking for specifically

584
00:19:35,440 --> 00:19:37,200
because it's really easy in a pcap and i

585
00:19:37,200 --> 00:19:38,799
do it all the time is i'll pigeonhole

586
00:19:38,799 --> 00:19:40,080
myself down a path and i'll start

587
00:19:40,080 --> 00:19:41,520
looking just like oh there's some errors

588
00:19:41,520 --> 00:19:42,880
i'm just going to sprint off in that

589
00:19:42,880 --> 00:19:44,240
direction

590
00:19:44,240 --> 00:19:46,240
i do that myself often but using these

591
00:19:46,240 --> 00:19:48,559
built-in the conversations the endpoints

592
00:19:48,559 --> 00:19:50,160
all that is is kind of a good way to

593
00:19:50,160 --> 00:19:51,919
keep that holistic view of what you're

594
00:19:51,919 --> 00:19:54,400
looking at

595
00:19:54,480 --> 00:19:58,080
one thing i want to check show you is

596
00:19:58,080 --> 00:20:00,240
we're going to open up this ttl example

597
00:20:00,240 --> 00:20:02,320
right here

598
00:20:02,320 --> 00:20:04,080
and throw that trace away

599
00:20:04,080 --> 00:20:07,840
and then i'm going to filter to

600
00:20:07,840 --> 00:20:09,200
this because i've already made this

601
00:20:09,200 --> 00:20:10,960
trace beforehand it's like those cooking

602
00:20:10,960 --> 00:20:11,760
shelves where they have all the

603
00:20:11,760 --> 00:20:13,600
ingredients lined up in little bowls

604
00:20:13,600 --> 00:20:15,039
these are my little bowls of ingredients

605
00:20:15,039 --> 00:20:16,640
here

606
00:20:16,640 --> 00:20:19,280
so what this is is this is a machine

607
00:20:19,280 --> 00:20:22,640
reaching out via tls https and there's

608
00:20:22,640 --> 00:20:24,000
that three-way handshake we know and

609
00:20:24,000 --> 00:20:25,840
love since the netgack we love it so

610
00:20:25,840 --> 00:20:26,720
much

611
00:20:26,720 --> 00:20:28,640
um as we go down it has some

612
00:20:28,640 --> 00:20:30,000
communication this is encrypted so i

613
00:20:30,000 --> 00:20:31,440
can't see what it is

614
00:20:31,440 --> 00:20:33,520
um scrolling around scrolling down all

615
00:20:33,520 --> 00:20:34,400
sudden

616
00:20:34,400 --> 00:20:36,559
i get a reset

617
00:20:36,559 --> 00:20:37,520
now

618
00:20:37,520 --> 00:20:39,039
everyone's going to play the game of

619
00:20:39,039 --> 00:20:40,799
well who sent the reset why did i get

620
00:20:40,799 --> 00:20:43,120
reset now at face value you're going to

621
00:20:43,120 --> 00:20:47,600
say well obviously this 172.217.7.110

622
00:20:47,600 --> 00:20:49,120
sent me a reset it's in the packet list

623
00:20:49,120 --> 00:20:50,720
i can see that

624
00:20:50,720 --> 00:20:52,640
not entirely case i'm going to show you

625
00:20:52,640 --> 00:20:54,880
the beauty that is the ip header down

626
00:20:54,880 --> 00:20:57,120
here

627
00:20:57,120 --> 00:20:59,039
this is the ip header

628
00:20:59,039 --> 00:21:00,960
and you've got this time to live of 128.

629
00:21:00,960 --> 00:21:02,159
now this is my own machine this

630
00:21:02,159 --> 00:21:04,080
192.168.1.89

631
00:21:04,080 --> 00:21:05,840
the server that i've been talking to has

632
00:21:05,840 --> 00:21:08,159
a time to live a 59. now these time

633
00:21:08,159 --> 00:21:10,559
delivers in routing world they start at

634
00:21:10,559 --> 00:21:11,600
some number depending on the

635
00:21:11,600 --> 00:21:14,159
manufacturer it'll either be 128 or 64

636
00:21:14,159 --> 00:21:16,559
or some older stuff 255. and as it goes

637
00:21:16,559 --> 00:21:18,240
through each router it decrements that

638
00:21:18,240 --> 00:21:20,880
time to live by one reason being if you

639
00:21:20,880 --> 00:21:22,480
didn't do that there'd be packets still

640
00:21:22,480 --> 00:21:24,320
circling the globe today you basically

641
00:21:24,320 --> 00:21:26,080
have to say if you can't find your way

642
00:21:26,080 --> 00:21:28,080
someone needs to throw them away so you

643
00:21:28,080 --> 00:21:29,919
set this time to live and say if after

644
00:21:29,919 --> 00:21:32,320
64 hops you don't find it i am so sorry

645
00:21:32,320 --> 00:21:34,320
for your loss you're getting discarded

646
00:21:34,320 --> 00:21:36,720
now how is that useful for us well i

647
00:21:36,720 --> 00:21:37,840
know that this guy that i've been

648
00:21:37,840 --> 00:21:39,360
talking to that's been working fine is

649
00:21:39,360 --> 00:21:42,000
the time to lose 59 i just got a reset

650
00:21:42,000 --> 00:21:43,440
from that guy

651
00:21:43,440 --> 00:21:46,720
that has a time to live a 64.

652
00:21:46,720 --> 00:21:48,320
why do i have a time to why did my time

653
00:21:48,320 --> 00:21:50,880
to live suddenly change

654
00:21:50,880 --> 00:21:52,960
answer that question that far side did

655
00:21:52,960 --> 00:21:54,720
not send that reset

656
00:21:54,720 --> 00:21:56,880
that far side was sent by my router on

657
00:21:56,880 --> 00:21:58,400
my local broadcast domain because it's

658
00:21:58,400 --> 00:22:00,880
64 hasn't been decremented so a firewall

659
00:22:00,880 --> 00:22:03,120
in the middle reset that connection

660
00:22:03,120 --> 00:22:04,960
the reason i know it did that is because

661
00:22:04,960 --> 00:22:06,080
i actually did that on my firewall to

662
00:22:06,080 --> 00:22:08,159
make this example however

663
00:22:08,159 --> 00:22:09,760
if you look at that and and you'll run

664
00:22:09,760 --> 00:22:11,360
into this a bunch when you're doing and

665
00:22:11,360 --> 00:22:14,159
doing um doing analysis you'll see

666
00:22:14,159 --> 00:22:16,080
resets the first thing you'll always

667
00:22:16,080 --> 00:22:17,679
want to check is check that conversation

668
00:22:17,679 --> 00:22:19,280
you've been having this whole time and

669
00:22:19,280 --> 00:22:21,039
see if that time to list has changed if

670
00:22:21,039 --> 00:22:23,440
that time to live has suddenly changed

671
00:22:23,440 --> 00:22:24,799
good chance there's something in them

672
00:22:24,799 --> 00:22:25,919
might not be a firewall it might be

673
00:22:25,919 --> 00:22:27,520
something else something in the middle

674
00:22:27,520 --> 00:22:29,200
has introducted itself

675
00:22:29,200 --> 00:22:31,200
and then count the hops away of how far

676
00:22:31,200 --> 00:22:33,039
it is to start looking to start

677
00:22:33,039 --> 00:22:35,360
furthering your investigation that way

678
00:22:35,360 --> 00:22:37,280
in the world of pcaps not every time

679
00:22:37,280 --> 00:22:38,840
will there be like a smoking gun in your

680
00:22:38,840 --> 00:22:41,520
trace what it will do is it'll say hey

681
00:22:41,520 --> 00:22:42,559
here's our next place we're going to

682
00:22:42,559 --> 00:22:43,440
look at

683
00:22:43,440 --> 00:22:44,720
i know i got to reset on my local

684
00:22:44,720 --> 00:22:46,799
network i now know i need to investigate

685
00:22:46,799 --> 00:22:48,320
my gateway because he's in my broadcast

686
00:22:48,320 --> 00:22:49,280
domain

687
00:22:49,280 --> 00:22:51,120
that reset had a timeline of 64. so it

688
00:22:51,120 --> 00:22:53,200
hadn't been decremented that's my area i

689
00:22:53,200 --> 00:22:55,600
need to focus my investigation so kind

690
00:22:55,600 --> 00:22:57,840
of cool that's probably that honestly if

691
00:22:57,840 --> 00:22:59,919
i just say like the best trick that not

692
00:22:59,919 --> 00:23:02,000
best trick but the best thing to learn

693
00:23:02,000 --> 00:23:03,919
out of this is if you're trying to find

694
00:23:03,919 --> 00:23:05,679
connection breakdowns look at your time

695
00:23:05,679 --> 00:23:07,520
to live

696
00:23:07,520 --> 00:23:10,480
moving on um i'm going to show you i

697
00:23:10,480 --> 00:23:12,480
took a bunch of traces like samba samba

698
00:23:12,480 --> 00:23:13,679
like and i was doing kind of older

699
00:23:13,679 --> 00:23:14,720
school song i wasn't doing anything

700
00:23:14,720 --> 00:23:17,200
fancy samba 3 stuff um i'm going to look

701
00:23:17,200 --> 00:23:18,880
at this samba client 200 millisecond

702
00:23:18,880 --> 00:23:20,000
latency

703
00:23:20,000 --> 00:23:23,120
um and what i did on this trace

704
00:23:23,120 --> 00:23:24,720
is i have a samba server that was just

705
00:23:24,720 --> 00:23:26,960
running on an ubuntu box and then i use

706
00:23:26,960 --> 00:23:29,039
traffic control on linux uh traffic

707
00:23:29,039 --> 00:23:31,200
control is a cool utility you can

708
00:23:31,200 --> 00:23:32,640
simulate all sorts of network problems

709
00:23:32,640 --> 00:23:34,320
you can throw 200 milliseconds of

710
00:23:34,320 --> 00:23:36,720
latency on every socket you can

711
00:23:36,720 --> 00:23:38,240
corrupt or garble five percent of your

712
00:23:38,240 --> 00:23:39,760
packets you can tell it to retransmit

713
00:23:39,760 --> 00:23:41,600
tempers in your packets really useful

714
00:23:41,600 --> 00:23:43,600
for building traces for examples but

715
00:23:43,600 --> 00:23:45,600
also useful if you want to say hey what

716
00:23:45,600 --> 00:23:47,440
would the real world example be if i had

717
00:23:47,440 --> 00:23:49,200
a big long wand link across the country

718
00:23:49,200 --> 00:23:51,120
with an 80 millisecond delay you can

719
00:23:51,120 --> 00:23:54,000
introduce those um delays in in in your

720
00:23:54,000 --> 00:23:55,279
trace

721
00:23:55,279 --> 00:23:57,600
so this is a samba this is a transfer

722
00:23:57,600 --> 00:23:59,840
samba and i'm going to practice repeat

723
00:23:59,840 --> 00:24:01,279
preach and look at the conversations on

724
00:24:01,279 --> 00:24:02,960
this trace

725
00:24:02,960 --> 00:24:04,960
and you can see a bunch of conversations

726
00:24:04,960 --> 00:24:05,919
a bunch of stuff was going on that

727
00:24:05,919 --> 00:24:07,600
network if we actually just flip around

728
00:24:07,600 --> 00:24:09,679
those bytes one of those conversations

729
00:24:09,679 --> 00:24:10,880
is a lot bigger than the other ones

730
00:24:10,880 --> 00:24:13,120
that's 88 megs and

731
00:24:13,120 --> 00:24:15,679
um we'll go to tcp

732
00:24:15,679 --> 00:24:17,919
so

733
00:24:18,080 --> 00:24:19,120
tcp

734
00:24:19,120 --> 00:24:21,200
port 445 that's a windows file copy

735
00:24:21,200 --> 00:24:23,279
right one thing you can do right here

736
00:24:23,279 --> 00:24:24,799
right click on that prepare filter

737
00:24:24,799 --> 00:24:26,559
selected a to b

738
00:24:26,559 --> 00:24:28,799
close that

739
00:24:28,799 --> 00:24:30,480
and that's filtering to just that

740
00:24:30,480 --> 00:24:31,440
connection

741
00:24:31,440 --> 00:24:32,880
without having to type a single query

742
00:24:32,880 --> 00:24:35,679
command so super handy super cool to do

743
00:24:35,679 --> 00:24:37,120
now one thing i want to show you in

744
00:24:37,120 --> 00:24:38,559
statistics if we go to our service

745
00:24:38,559 --> 00:24:42,320
response time and go to smb2

746
00:24:42,320 --> 00:24:44,320
it's going to load that up this is every

747
00:24:44,320 --> 00:24:46,559
call that was made and you can do

748
00:24:46,559 --> 00:24:47,840
display filters here so you can actually

749
00:24:47,840 --> 00:24:49,760
copy pasta this one right here down to

750
00:24:49,760 --> 00:24:51,440
the display filter if you wanted but

751
00:24:51,440 --> 00:24:52,640
since the

752
00:24:52,640 --> 00:24:54,400
trace really only had one big summit

753
00:24:54,400 --> 00:24:56,240
connection and this is it you can see

754
00:24:56,240 --> 00:24:58,080
the minimum service response time the

755
00:24:58,080 --> 00:25:00,000
max response time and your average

756
00:25:00,000 --> 00:25:01,840
response time for each one of these

757
00:25:01,840 --> 00:25:05,120
verbs so i did 77 verbs

758
00:25:05,120 --> 00:25:07,360
and my minimum was 0.2 because remember

759
00:25:07,360 --> 00:25:09,440
i said that 200 millisecond delay and my

760
00:25:09,440 --> 00:25:12,000
max was point was 8.4 with an average of

761
00:25:12,000 --> 00:25:15,760
5. the sum of all those verbs were 427

762
00:25:15,760 --> 00:25:16,799
seconds

763
00:25:16,799 --> 00:25:18,480
so what does this tell us is this a

764
00:25:18,480 --> 00:25:21,200
smoking gun in this trace no it's not

765
00:25:21,200 --> 00:25:22,559
but what you can now do with this

766
00:25:22,559 --> 00:25:24,559
information is say come start comparing

767
00:25:24,559 --> 00:25:25,840
these numbers now since mine's an

768
00:25:25,840 --> 00:25:27,600
artificial trace and i added that

769
00:25:27,600 --> 00:25:29,760
artificial let's say we're doing a sama

770
00:25:29,760 --> 00:25:31,919
transfer in that file and that

771
00:25:31,919 --> 00:25:35,039
back in storage is on a is on a lawn on

772
00:25:35,039 --> 00:25:36,640
our sand somewhere and that one's having

773
00:25:36,640 --> 00:25:39,200
issues but only on reeds you could

774
00:25:39,200 --> 00:25:40,880
actually notice that these reeds are

775
00:25:40,880 --> 00:25:42,720
much higher or much lower than the

776
00:25:42,720 --> 00:25:43,679
writes

777
00:25:43,679 --> 00:25:46,159
so you can use this from by the nature

778
00:25:46,159 --> 00:25:48,240
of investigating the protocol you can

779
00:25:48,240 --> 00:25:50,240
actually use this information to say hey

780
00:25:50,240 --> 00:25:52,080
we're reading great read performance

781
00:25:52,080 --> 00:25:54,559
fantastic right performance not so much

782
00:25:54,559 --> 00:25:56,000
and so it will kind of guide you into

783
00:25:56,000 --> 00:25:57,840
the next thing that you want to that you

784
00:25:57,840 --> 00:26:00,000
want to take a look at

785
00:26:00,000 --> 00:26:02,000
um one other cool thing i want to show

786
00:26:02,000 --> 00:26:03,840
about performance

787
00:26:03,840 --> 00:26:05,039
and we're going to use the same trace

788
00:26:05,039 --> 00:26:07,679
we're going to packet 693 for example

789
00:26:07,679 --> 00:26:08,720
right here

790
00:26:08,720 --> 00:26:10,080
i started this trace kind of in the

791
00:26:10,080 --> 00:26:12,159
middle so you don't see the actual tcp

792
00:26:12,159 --> 00:26:13,919
three hammer three-way handshake the the

793
00:26:13,919 --> 00:26:15,919
socket had already been established but

794
00:26:15,919 --> 00:26:17,360
i want to point out this packet right

795
00:26:17,360 --> 00:26:19,320
here this is me

796
00:26:19,320 --> 00:26:22,720
192.168.1.95 talking to 192.168.1.99

797
00:26:22,720 --> 00:26:24,640
and i'm doing a smb verb of tree connect

798
00:26:24,640 --> 00:26:26,400
request and that's the path that i try

799
00:26:26,400 --> 00:26:27,200
to do

800
00:26:27,200 --> 00:26:29,440
notice this next packet right here

801
00:26:29,440 --> 00:26:30,880
doesn't have

802
00:26:30,880 --> 00:26:32,960
any application data in it you see how

803
00:26:32,960 --> 00:26:35,120
it's just layer 4 there's just tcp

804
00:26:35,120 --> 00:26:36,960
and then right next is the tree connect

805
00:26:36,960 --> 00:26:39,200
response which is the actual response to

806
00:26:39,200 --> 00:26:40,159
that

807
00:26:40,159 --> 00:26:41,600
tree connect i did

808
00:26:41,600 --> 00:26:43,760
why is there a tcp right there in the

809
00:26:43,760 --> 00:26:44,799
middle

810
00:26:44,799 --> 00:26:46,720
the answer to that is the application

811
00:26:46,720 --> 00:26:48,640
layer hadn't responded yet i had done a

812
00:26:48,640 --> 00:26:50,480
request to do that tree connect and say

813
00:26:50,480 --> 00:26:52,320
hey i want to talk to this ip and i'm

814
00:26:52,320 --> 00:26:54,240
looking for the ipc dollar sign share

815
00:26:54,240 --> 00:26:56,400
tcp after waiting and remember we're

816
00:26:56,400 --> 00:26:57,600
going back to that delta that i would

817
00:26:57,600 --> 00:27:00,080
leave up t is people waited now tcp

818
00:27:00,080 --> 00:27:01,760
waited 200 milliseconds before it sent

819
00:27:01,760 --> 00:27:03,279
that response now since i have that

820
00:27:03,279 --> 00:27:04,320
artificial in there that number's gonna

821
00:27:04,320 --> 00:27:06,400
be a little skewed but if an application

822
00:27:06,400 --> 00:27:08,320
doesn't respond in a timely manner the

823
00:27:08,320 --> 00:27:10,159
tcp stack's gonna act that packet and

824
00:27:10,159 --> 00:27:12,880
say hey you know what i got your request

825
00:27:12,880 --> 00:27:14,640
don't send it again i'm working on just

826
00:27:14,640 --> 00:27:16,320
hang out for a bit and you'll see that

827
00:27:16,320 --> 00:27:18,799
all the time now how is that useful when

828
00:27:18,799 --> 00:27:20,960
you're analyzing traces if you see a

829
00:27:20,960 --> 00:27:22,720
bunch of that if you see

830
00:27:22,720 --> 00:27:24,240
the package the request the application

831
00:27:24,240 --> 00:27:25,760
layer requests go out that tree connect

832
00:27:25,760 --> 00:27:28,320
or whatever an http get and you see tcp

833
00:27:28,320 --> 00:27:30,720
ack it really quick and then wait and

834
00:27:30,720 --> 00:27:32,799
then wait and then the application exit

835
00:27:32,799 --> 00:27:34,480
and that pattern goes through all that

836
00:27:34,480 --> 00:27:36,480
or it keeps following that pattern you

837
00:27:36,480 --> 00:27:38,480
can say well my network's really not

838
00:27:38,480 --> 00:27:40,000
having problem delaying delivering those

839
00:27:40,000 --> 00:27:41,679
packets i'm getting a tcpac

840
00:27:41,679 --> 00:27:43,679
lickety-split but the application layer

841
00:27:43,679 --> 00:27:45,200
is not responding to me in a timely

842
00:27:45,200 --> 00:27:47,600
manner so from there you can now focus

843
00:27:47,600 --> 00:27:49,679
your investigation to whatever damon's

844
00:27:49,679 --> 00:27:50,880
listening on that back end whether it be

845
00:27:50,880 --> 00:27:53,200
apache nginx whatever because and

846
00:27:53,200 --> 00:27:54,880
they'll say well it's a network problem

847
00:27:54,880 --> 00:27:57,440
it's slow slow equals network problem

848
00:27:57,440 --> 00:27:59,039
always because that's what we've trained

849
00:27:59,039 --> 00:28:00,640
ourselves to do

850
00:28:00,640 --> 00:28:02,720
however by using this trace you can

851
00:28:02,720 --> 00:28:04,159
actually say nope i made it

852
00:28:04,159 --> 00:28:06,240
lickety-split and for whatever reason

853
00:28:06,240 --> 00:28:07,679
your application responds in a timely

854
00:28:07,679 --> 00:28:09,120
manner now we need to go look at that

855
00:28:09,120 --> 00:28:11,520
application so super cool check for that

856
00:28:11,520 --> 00:28:12,880
when you're looking at traces and you'll

857
00:28:12,880 --> 00:28:15,039
see this one has a ton of those examples

858
00:28:15,039 --> 00:28:17,200
examples there's a create request

859
00:28:17,200 --> 00:28:19,520
there's the tcpac there's another one

860
00:28:19,520 --> 00:28:21,840
there's a tcp act so yeah just keep your

861
00:28:21,840 --> 00:28:23,600
eye out for that and as you kind of get

862
00:28:23,600 --> 00:28:25,039
more comfortable and as you keep doing

863
00:28:25,039 --> 00:28:26,880
these you start learning these patterns

864
00:28:26,880 --> 00:28:28,159
you're gonna start learning hey i'm

865
00:28:28,159 --> 00:28:30,399
getting tcpx but not application layer x

866
00:28:30,399 --> 00:28:32,559
let's go look at the application layer

867
00:28:32,559 --> 00:28:33,679
um

868
00:28:33,679 --> 00:28:35,120
another cool thing we're going to jump

869
00:28:35,120 --> 00:28:37,279
to a different trace again

870
00:28:37,279 --> 00:28:38,559
again this is the cafeteria i'm

871
00:28:38,559 --> 00:28:40,159
literally just like throwing food out on

872
00:28:40,159 --> 00:28:41,360
the thing and just take what you like

873
00:28:41,360 --> 00:28:44,080
and what you don't like saying no thanks

874
00:28:44,080 --> 00:28:45,919
we're going to go to this five percent

875
00:28:45,919 --> 00:28:47,600
corrupt and as you can see i cannot

876
00:28:47,600 --> 00:28:49,679
spell the word corrupt that's corrupt

877
00:28:49,679 --> 00:28:52,399
whatever that was

878
00:28:52,799 --> 00:28:54,000
and

879
00:28:54,000 --> 00:28:55,600
if that wants oh let's get rid of our

880
00:28:55,600 --> 00:28:57,840
filters

881
00:28:57,840 --> 00:28:59,279
that's better

882
00:28:59,279 --> 00:29:01,600
so i've got another trace and what i did

883
00:29:01,600 --> 00:29:03,760
is i told um

884
00:29:03,760 --> 00:29:07,840
i told tc on um on linux go ahead and

885
00:29:07,840 --> 00:29:09,520
corrupt five percent of the trap packets

886
00:29:09,520 --> 00:29:11,600
just for funsies just corrupt them and

887
00:29:11,600 --> 00:29:14,320
then i said and by the way do a random

888
00:29:14,320 --> 00:29:15,919
smattering of retrans just as much as

889
00:29:15,919 --> 00:29:18,799
you want and 10 which is a lot

890
00:29:18,799 --> 00:29:19,840
let's say

891
00:29:19,840 --> 00:29:21,279
you've just got some slowness you don't

892
00:29:21,279 --> 00:29:23,120
like how it's running one great thing

893
00:29:23,120 --> 00:29:25,919
you can do is go here to your statistics

894
00:29:25,919 --> 00:29:27,440
or sorry analyze

895
00:29:27,440 --> 00:29:30,720
and then go to your

896
00:29:30,799 --> 00:29:33,279
expert information

897
00:29:33,279 --> 00:29:35,279
and again like before i can still limit

898
00:29:35,279 --> 00:29:37,120
to my display filter so just look at

899
00:29:37,120 --> 00:29:38,720
what we want to see

900
00:29:38,720 --> 00:29:40,640
and there's an error and i've got oh

901
00:29:40,640 --> 00:29:42,960
malform packet there's only one of them

902
00:29:42,960 --> 00:29:44,559
that's interesting

903
00:29:44,559 --> 00:29:48,640
so let's take off that display filter

904
00:29:48,640 --> 00:29:50,799
and look at all of our others

905
00:29:50,799 --> 00:29:51,600
wow

906
00:29:51,600 --> 00:29:55,520
we've got 11 538 retrains

907
00:29:55,520 --> 00:29:58,080
why did i not see it the first time

908
00:29:58,080 --> 00:29:59,679
because

909
00:29:59,679 --> 00:30:02,080
i filtered only to smb2 and so as

910
00:30:02,080 --> 00:30:03,840
relying on wireshark's dissector the

911
00:30:03,840 --> 00:30:05,279
looks of those packets and make sure

912
00:30:05,279 --> 00:30:07,279
there's an application layer header on

913
00:30:07,279 --> 00:30:09,679
there that says this is smb2 and that's

914
00:30:09,679 --> 00:30:12,080
how it was classifying it since i got

915
00:30:12,080 --> 00:30:13,679
rid of that and i undid that display

916
00:30:13,679 --> 00:30:16,320
filter now i'm seeing anything

917
00:30:16,320 --> 00:30:18,559
that is a suspected retrans and i've got

918
00:30:18,559 --> 00:30:22,240
11 538 of those retransmits cool thing

919
00:30:22,240 --> 00:30:23,840
you can do click that drop down right

920
00:30:23,840 --> 00:30:25,520
there and as you click through it'll

921
00:30:25,520 --> 00:30:27,279
actually take you in the trace where

922
00:30:27,279 --> 00:30:28,640
they are now you'll notice in the

923
00:30:28,640 --> 00:30:29,760
background it's saying it's not

924
00:30:29,760 --> 00:30:31,600
displayed that's because i've still got

925
00:30:31,600 --> 00:30:34,159
this filter on there

926
00:30:34,159 --> 00:30:36,399
take that off

927
00:30:36,399 --> 00:30:38,159
go back to here

928
00:30:38,159 --> 00:30:42,559
try to find your retrans there they are

929
00:30:43,600 --> 00:30:44,880
and as you click through it'll actually

930
00:30:44,880 --> 00:30:46,159
take you in the trace in the background

931
00:30:46,159 --> 00:30:47,679
you can see it's moving around there to

932
00:30:47,679 --> 00:30:49,840
all those retrans now granted you're

933
00:30:49,840 --> 00:30:51,200
gonna get retrans you're gonna get

934
00:30:51,200 --> 00:30:53,840
dupac's that's tcp doing its job it's

935
00:30:53,840 --> 00:30:55,120
going to do that that's just how it

936
00:30:55,120 --> 00:30:57,519
works don't go crazy going oh my

937
00:30:57,519 --> 00:31:00,640
goodness i'm having 100 retransmits in

938
00:31:00,640 --> 00:31:02,799
30 000 packets guess what who cares

939
00:31:02,799 --> 00:31:05,039
that's tcp let us do a thing but if

940
00:31:05,039 --> 00:31:06,480
you're seeing in a trace that's only a

941
00:31:06,480 --> 00:31:08,720
few seconds long you've got 12 000

942
00:31:08,720 --> 00:31:09,840
retrans

943
00:31:09,840 --> 00:31:10,960
you've probably got something you need

944
00:31:10,960 --> 00:31:13,440
to look at there right

945
00:31:13,440 --> 00:31:14,240
now

946
00:31:14,240 --> 00:31:16,960
moving right along to our um

947
00:31:16,960 --> 00:31:18,559
the world of samba i'm staying sam just

948
00:31:18,559 --> 00:31:20,399
because it's kind of easy to illustrate

949
00:31:20,399 --> 00:31:24,240
i'm going to go to samba wireless

950
00:31:24,240 --> 00:31:25,919
and all this was this was me just

951
00:31:25,919 --> 00:31:27,600
copying a file across my network over

952
00:31:27,600 --> 00:31:29,200
wireless

953
00:31:29,200 --> 00:31:31,120
really not super exciting it is kind of

954
00:31:31,120 --> 00:31:32,720
a big file because obviously i captured

955
00:31:32,720 --> 00:31:34,399
everything because filter second not

956
00:31:34,399 --> 00:31:35,279
first

957
00:31:35,279 --> 00:31:37,360
that's my golden rule and so now we just

958
00:31:37,360 --> 00:31:38,880
get to awkwardly look while my laptop

959
00:31:38,880 --> 00:31:40,799
reads these packets so

960
00:31:40,799 --> 00:31:45,000
how we all doing good great

961
00:31:53,519 --> 00:31:55,120
cool here we go

962
00:31:55,120 --> 00:31:57,600
now one thing i want to show you is i'm

963
00:31:57,600 --> 00:31:58,799
just going to filter this trace in the

964
00:31:58,799 --> 00:32:00,559
display filter i'm just going to filter

965
00:32:00,559 --> 00:32:03,200
to port 445 just to save us a little bit

966
00:32:03,200 --> 00:32:05,120
of time as i go into my next area that

967
00:32:05,120 --> 00:32:06,159
i'm going to show you so we don't have

968
00:32:06,159 --> 00:32:08,960
to do this more than once

969
00:32:08,960 --> 00:32:11,200
wireshark has a built-in i o graph that

970
00:32:11,200 --> 00:32:13,679
will actually calculate your your input

971
00:32:13,679 --> 00:32:15,519
output speed based on the packets coming

972
00:32:15,519 --> 00:32:16,640
through it

973
00:32:16,640 --> 00:32:18,799
um this is super handy especially when

974
00:32:18,799 --> 00:32:20,559
you have users telling you hey you know

975
00:32:20,559 --> 00:32:22,480
file copies are slow they're they're not

976
00:32:22,480 --> 00:32:24,240
going to expect i'm getting

977
00:32:24,240 --> 00:32:25,679
one megabit or they give you some

978
00:32:25,679 --> 00:32:27,120
arbitrary number you can actually

979
00:32:27,120 --> 00:32:28,880
capture that packet or capture that

980
00:32:28,880 --> 00:32:30,880
trace as they do it and see what the

981
00:32:30,880 --> 00:32:32,480
actual um

982
00:32:32,480 --> 00:32:34,559
what the actual speed looks like

983
00:32:34,559 --> 00:32:36,080
that's here on your statistics under

984
00:32:36,080 --> 00:32:38,320
your io graphs

985
00:32:38,320 --> 00:32:41,200
and again you can filter this down to

986
00:32:41,200 --> 00:32:43,279
i'm going to go to all packets and i'll

987
00:32:43,279 --> 00:32:46,080
pick them into the port 445

988
00:32:46,080 --> 00:32:49,519
and we're going to recalculate that

989
00:32:55,120 --> 00:32:56,559
and while we do that i'm going to bring

990
00:32:56,559 --> 00:32:59,120
up the screenshot of

991
00:32:59,120 --> 00:33:01,039
windows what it showed so we have that

992
00:33:01,039 --> 00:33:03,440
up there

993
00:33:05,200 --> 00:33:09,480
that work yeah you can see that cool

994
00:33:10,720 --> 00:33:13,039
as we load

995
00:33:13,039 --> 00:33:14,720
um you can see kind of the hills and

996
00:33:14,720 --> 00:33:16,000
valleys here

997
00:33:16,000 --> 00:33:17,600
this obviously windows is smoothing that

998
00:33:17,600 --> 00:33:19,120
out and it's not giving the exact number

999
00:33:19,120 --> 00:33:20,559
at each step but it kind of gives you

1000
00:33:20,559 --> 00:33:23,720
the average

1001
00:33:31,519 --> 00:33:34,159
and if we look at that graph you

1002
00:33:34,159 --> 00:33:35,440
actually see

1003
00:33:35,440 --> 00:33:37,519
it looks pretty similar as far as

1004
00:33:37,519 --> 00:33:39,200
there's obviously a lot more detail here

1005
00:33:39,200 --> 00:33:40,159
in the

1006
00:33:40,159 --> 00:33:41,679
in the wireshark version of it but you

1007
00:33:41,679 --> 00:33:43,039
can see that pattern follows a pretty

1008
00:33:43,039 --> 00:33:45,519
similar drop is that so you can actually

1009
00:33:45,519 --> 00:33:47,440
extract this performance out

1010
00:33:47,440 --> 00:33:52,159
from the from the raw trace itself um

1011
00:33:52,159 --> 00:33:54,799
on that note um a lot of times when

1012
00:33:54,799 --> 00:33:56,240
you're taking when you're talking about

1013
00:33:56,240 --> 00:33:58,159
performance tracing getting one side of

1014
00:33:58,159 --> 00:34:00,240
a conversation isn't super helpful

1015
00:34:00,240 --> 00:34:01,120
because

1016
00:34:01,120 --> 00:34:03,039
you'll you're tracing from the work from

1017
00:34:03,039 --> 00:34:04,559
the um

1018
00:34:04,559 --> 00:34:06,159
the viewpoint of this workstation you're

1019
00:34:06,159 --> 00:34:07,519
sending out across the wire and you're

1020
00:34:07,519 --> 00:34:08,960
just waiting whatever comes back to you

1021
00:34:08,960 --> 00:34:10,480
right so what we'll do a lot of times

1022
00:34:10,480 --> 00:34:11,918
we'll call do what's called simultaneous

1023
00:34:11,918 --> 00:34:13,918
traces where i'll trace here and i'll

1024
00:34:13,918 --> 00:34:16,159
trace on the server at the same time

1025
00:34:16,159 --> 00:34:17,599
and and we'll compare them and see

1026
00:34:17,599 --> 00:34:19,599
what's going on well one thing you need

1027
00:34:19,599 --> 00:34:20,719
to do when you do that is line your

1028
00:34:20,719 --> 00:34:22,239
packets up in your list because you'll

1029
00:34:22,239 --> 00:34:23,760
have a bunch of packets here from this

1030
00:34:23,760 --> 00:34:25,119
workstation which is obviously being

1031
00:34:25,119 --> 00:34:27,280
exposed to different networks that it's

1032
00:34:27,280 --> 00:34:28,879
seeing you've got your server network

1033
00:34:28,879 --> 00:34:30,000
that's being exposed to different

1034
00:34:30,000 --> 00:34:31,440
networks and different packets and all

1035
00:34:31,440 --> 00:34:33,040
that good stuff so you need a good way

1036
00:34:33,040 --> 00:34:34,800
to line those up so i'm going to show

1037
00:34:34,800 --> 00:34:36,239
you the niftiest trick ever to line

1038
00:34:36,239 --> 00:34:37,520
those up

1039
00:34:37,520 --> 00:34:40,239
we are going to go back to our

1040
00:34:40,239 --> 00:34:41,839
200 millisecond latency there's the

1041
00:34:41,839 --> 00:34:45,159
client side

1042
00:34:48,159 --> 00:34:51,679
we're going to open wireshark again

1043
00:34:56,800 --> 00:34:59,760
and we're going to open the server side

1044
00:34:59,760 --> 00:35:02,800
uh there's the server side

1045
00:35:02,800 --> 00:35:04,800
and thanks to the magic of wide screens

1046
00:35:04,800 --> 00:35:06,320
we're going to go like that and it's a

1047
00:35:06,320 --> 00:35:07,680
little smashed and i'm sorry it doesn't

1048
00:35:07,680 --> 00:35:09,200
look great but that's kind of the best

1049
00:35:09,200 --> 00:35:11,598
we can do

1050
00:35:13,599 --> 00:35:17,200
so we're going to go like this tcp.port

1051
00:35:17,200 --> 00:35:19,119
equals 445. okay so we just filtered it

1052
00:35:19,119 --> 00:35:21,280
basically to sombon both sides

1053
00:35:21,280 --> 00:35:22,640
if you go to one of these packets and

1054
00:35:22,640 --> 00:35:24,000
just pick a packet that you like doesn't

1055
00:35:24,000 --> 00:35:25,440
matter which one let's just do this tree

1056
00:35:25,440 --> 00:35:27,040
connect

1057
00:35:27,040 --> 00:35:29,280
you go to your ip header and each one

1058
00:35:29,280 --> 00:35:31,040
has this identification on it you can

1059
00:35:31,040 --> 00:35:32,400
right click on that

1060
00:35:32,400 --> 00:35:33,760
prepare a filter

1061
00:35:33,760 --> 00:35:35,040
selected

1062
00:35:35,040 --> 00:35:37,440
hit enter on that

1063
00:35:37,440 --> 00:35:40,400
there's that particular ipid copy that

1064
00:35:40,400 --> 00:35:42,240
go to our other trace

1065
00:35:42,240 --> 00:35:44,960
go like that

1066
00:35:44,960 --> 00:35:47,599
there it is right click on there

1067
00:35:47,599 --> 00:35:50,400
and do mark packet do mark packet you

1068
00:35:50,400 --> 00:35:51,599
could do a time reference if you wanted

1069
00:35:51,599 --> 00:35:53,040
to show up all the time

1070
00:35:53,040 --> 00:35:55,280
and then when we go back to our default

1071
00:35:55,280 --> 00:35:58,280
filter

1072
00:36:06,800 --> 00:36:08,240
and those two traces you see that one

1073
00:36:08,240 --> 00:36:09,520
and that one that's where those two

1074
00:36:09,520 --> 00:36:11,200
packets line up in the trace so as you

1075
00:36:11,200 --> 00:36:13,119
go through you're now lined up and you

1076
00:36:13,119 --> 00:36:14,400
can keep doing that you keep doing that

1077
00:36:14,400 --> 00:36:16,400
this procedure over and over again

1078
00:36:16,400 --> 00:36:18,240
it's depending on your protocols how

1079
00:36:18,240 --> 00:36:19,359
chatty they are how many times they

1080
00:36:19,359 --> 00:36:21,200
perform the same functions sometimes

1081
00:36:21,200 --> 00:36:23,520
i'll mark each one each time i do like a

1082
00:36:23,520 --> 00:36:26,000
tree connect or an open file or whatever

1083
00:36:26,000 --> 00:36:27,760
do that ip line them up mark all those

1084
00:36:27,760 --> 00:36:29,359
so as i'm analyzing on both sides of the

1085
00:36:29,359 --> 00:36:31,680
trace i can kind of keep those lined up

1086
00:36:31,680 --> 00:36:33,119
in my head

1087
00:36:33,119 --> 00:36:35,200
um so yeah so that's how you the best

1088
00:36:35,200 --> 00:36:36,640
part that's the best way to kind of line

1089
00:36:36,640 --> 00:36:38,880
up your simultaneous trace and again

1090
00:36:38,880 --> 00:36:40,640
it's going to be a matter of looking at

1091
00:36:40,640 --> 00:36:42,240
who's having the delays why are we

1092
00:36:42,240 --> 00:36:43,920
seeing deltas why are those increasing

1093
00:36:43,920 --> 00:36:45,920
on one side or the other um sometimes

1094
00:36:45,920 --> 00:36:46,960
you'll get a packet delivered really

1095
00:36:46,960 --> 00:36:48,720
speedy that box will sit and chew on it

1096
00:36:48,720 --> 00:36:50,880
for a while and then send it slow back

1097
00:36:50,880 --> 00:36:52,320
after a little bit or it'll send a

1098
00:36:52,320 --> 00:36:54,240
response really speedy and the and the

1099
00:36:54,240 --> 00:36:55,920
client doesn't see it for a while it's

1100
00:36:55,920 --> 00:36:58,000
all about narrowing down your next step

1101
00:36:58,000 --> 00:36:59,520
troubleshooting like i said you're not

1102
00:36:59,520 --> 00:37:01,680
gonna see a smoking gun every time but

1103
00:37:01,680 --> 00:37:04,880
you will get it narrowed down a bit

1104
00:37:04,880 --> 00:37:07,520
i wanted to jump into file extraction

1105
00:37:07,520 --> 00:37:09,680
because that's a cool thing that folks

1106
00:37:09,680 --> 00:37:11,119
like to do

1107
00:37:11,119 --> 00:37:13,599
i'm going to use that ctf from

1108
00:37:13,599 --> 00:37:16,400
from st connegan

1109
00:37:16,400 --> 00:37:17,760
so inside this

1110
00:37:17,760 --> 00:37:18,960
trace

1111
00:37:18,960 --> 00:37:20,800
there's things that happen i know what's

1112
00:37:20,800 --> 00:37:22,320
in this trace because i've got obviously

1113
00:37:22,320 --> 00:37:24,160
gone through the ctf but i know files

1114
00:37:24,160 --> 00:37:25,839
were transferred i know that actually

1115
00:37:25,839 --> 00:37:26,960
occurred

1116
00:37:26,960 --> 00:37:29,040
so i'm going to go here to file and

1117
00:37:29,040 --> 00:37:30,960
export objects and then based on

1118
00:37:30,960 --> 00:37:32,640
protocol you can actually export

1119
00:37:32,640 --> 00:37:33,920
anything that was transferred over those

1120
00:37:33,920 --> 00:37:36,000
protocols during the trace so just for

1121
00:37:36,000 --> 00:37:39,200
funsies let's click on samba

1122
00:37:44,960 --> 00:37:48,160
and then i just go change the size

1123
00:37:48,160 --> 00:37:50,960
and during that time someone transferred

1124
00:37:50,960 --> 00:37:54,560
this mp mp4 file on our on our network

1125
00:37:54,560 --> 00:37:57,599
now can i save that you bet i can

1126
00:37:57,599 --> 00:38:00,160
and save that and just throw that to

1127
00:38:00,160 --> 00:38:02,400
documents

1128
00:38:02,400 --> 00:38:04,640
save that

1129
00:38:04,640 --> 00:38:05,520
and

1130
00:38:05,520 --> 00:38:06,560
there's the file i just ripped out of

1131
00:38:06,560 --> 00:38:07,599
the pcap

1132
00:38:07,599 --> 00:38:10,000
that works for smb you can over http

1133
00:38:10,000 --> 00:38:12,720
super cool super handy one alternate way

1134
00:38:12,720 --> 00:38:14,480
i want to show you to do that same thing

1135
00:38:14,480 --> 00:38:15,760
which i think is

1136
00:38:15,760 --> 00:38:18,240
a little bit easier he's using a cool

1137
00:38:18,240 --> 00:38:20,240
tool called network miner

1138
00:38:20,240 --> 00:38:23,279
fire up network miner

1139
00:38:24,160 --> 00:38:26,480
we're going to open that same peak app

1140
00:38:26,480 --> 00:38:27,520
no we're not going to update in the

1141
00:38:27,520 --> 00:38:28,880
middle of a presentation that would be

1142
00:38:28,880 --> 00:38:31,880
bad

1143
00:38:32,400 --> 00:38:34,640
open up this

1144
00:38:34,640 --> 00:38:36,000
it's going to go through and parse it

1145
00:38:36,000 --> 00:38:37,520
network miners are some other cool

1146
00:38:37,520 --> 00:38:39,359
parsing stuff for you um it'll have all

1147
00:38:39,359 --> 00:38:40,800
your hosts and you can filter down on

1148
00:38:40,800 --> 00:38:41,760
those

1149
00:38:41,760 --> 00:38:44,079
um

1150
00:38:44,240 --> 00:38:47,839
it's going to fire that up

1151
00:38:53,520 --> 00:38:55,200
cool and then i can click on the images

1152
00:38:55,200 --> 00:38:57,040
tab and here's every picture that was

1153
00:38:57,040 --> 00:38:59,520
transferred during that session and nice

1154
00:38:59,520 --> 00:39:01,520
easy thumbnails

1155
00:39:01,520 --> 00:39:03,440
now let's say someone has a silly uh web

1156
00:39:03,440 --> 00:39:04,640
service and they're just dumping

1157
00:39:04,640 --> 00:39:06,720
credentials on clear text well we get

1158
00:39:06,720 --> 00:39:08,560
those too

1159
00:39:08,560 --> 00:39:11,119
super cool tool um here's everyone's dns

1160
00:39:11,119 --> 00:39:12,240
queries

1161
00:39:12,240 --> 00:39:13,680
where they're all going who's making

1162
00:39:13,680 --> 00:39:15,599
them all that fun stuff

1163
00:39:15,599 --> 00:39:17,359
network minor is super cool tool you can

1164
00:39:17,359 --> 00:39:19,839
use especially if you are um just have a

1165
00:39:19,839 --> 00:39:21,119
network tap somewhere and you just kind

1166
00:39:21,119 --> 00:39:22,240
of keep an eye on what's going on let's

1167
00:39:22,240 --> 00:39:23,520
say you're worried someone's

1168
00:39:23,520 --> 00:39:25,599
exfiltrating data throw a network tap on

1169
00:39:25,599 --> 00:39:27,119
have network miner on there have a quick

1170
00:39:27,119 --> 00:39:28,800
look of see what's going through super

1171
00:39:28,800 --> 00:39:31,520
handy for from a blue team perspective

1172
00:39:31,520 --> 00:39:32,400
um

1173
00:39:32,400 --> 00:39:34,160
those are kind of the main tips and

1174
00:39:34,160 --> 00:39:36,079
tricks i wanted to show you i and a lot

1175
00:39:36,079 --> 00:39:37,359
of this is like question answer and

1176
00:39:37,359 --> 00:39:39,359
stuff so what question does anyone have

1177
00:39:39,359 --> 00:39:41,200
in the whole world of pcaps for me if

1178
00:39:41,200 --> 00:39:43,119
any and i will do my best to make

1179
00:39:43,119 --> 00:39:45,839
something up for you

1180
00:39:49,200 --> 00:39:50,560
everyone's like

1181
00:39:50,560 --> 00:39:54,279
yeah please go ahead

1182
00:39:56,640 --> 00:40:00,720
i i heard something with us aside sorry

1183
00:40:03,119 --> 00:40:04,800
okay so you're going to run into some

1184
00:40:04,800 --> 00:40:06,400
issues especially anytime you're doing

1185
00:40:06,400 --> 00:40:08,560
security stuff on sso because it's going

1186
00:40:08,560 --> 00:40:10,079
to be encrypted you're going to run into

1187
00:40:10,079 --> 00:40:11,200
that so you're going to have to do

1188
00:40:11,200 --> 00:40:13,200
expert exportation of your keys to be

1189
00:40:13,200 --> 00:40:15,040
able to have a look into that but one

1190
00:40:15,040 --> 00:40:16,720
cool thing that i'm glad you brought up

1191
00:40:16,720 --> 00:40:17,680
is

1192
00:40:17,680 --> 00:40:18,720
in the world especially if you're on a

1193
00:40:18,720 --> 00:40:20,560
linux box in the world of linux a lot of

1194
00:40:20,560 --> 00:40:22,240
time when application one application is

1195
00:40:22,240 --> 00:40:24,000
talking to another on the same host

1196
00:40:24,000 --> 00:40:25,599
that's talking via sockets just

1197
00:40:25,599 --> 00:40:27,200
internally to itself

1198
00:40:27,200 --> 00:40:29,119
in that tcp dump command that i

1199
00:40:29,119 --> 00:40:31,359
mentioned if you on your interface do lo

1200
00:40:31,359 --> 00:40:33,119
your loopback interface you can actually

1201
00:40:33,119 --> 00:40:35,440
see applications talking to itself on

1202
00:40:35,440 --> 00:40:37,359
the same box just different

1203
00:40:37,359 --> 00:40:38,560
just different demons talking to each

1204
00:40:38,560 --> 00:40:40,400
other so on a state where you're trying

1205
00:40:40,400 --> 00:40:42,000
to like troubleshoot an sso problem and

1206
00:40:42,000 --> 00:40:44,160
it's this box is talking to itself super

1207
00:40:44,160 --> 00:40:45,119
easy ways to do it you don't have to

1208
00:40:45,119 --> 00:40:46,160
worry about certificates because you're

1209
00:40:46,160 --> 00:40:48,800
already on the box so kind of a cool way

1210
00:40:48,800 --> 00:40:52,040
to do that

1211
00:40:54,720 --> 00:40:55,920
cool if there's no other questions

1212
00:40:55,920 --> 00:40:59,880
that'll do it for me thanks so much

1213
00:41:08,160 --> 00:41:10,240
you

