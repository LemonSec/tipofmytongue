1
00:00:01,760 --> 00:00:02,720
all right i'm gonna go ahead and get

2
00:00:02,720 --> 00:00:05,199
started

3
00:00:05,600 --> 00:00:06,399
so

4
00:00:06,399 --> 00:00:08,480
this is actually maybe a good talk to

5
00:00:08,480 --> 00:00:11,519
follow collins um in the last talk colin

6
00:00:11,519 --> 00:00:12,880
was talking about privacy and you

7
00:00:12,880 --> 00:00:16,239
mentioned vpns fit really well under the

8
00:00:16,239 --> 00:00:19,840
uh the privacy enthusiast model so we'll

9
00:00:19,840 --> 00:00:22,080
talk a little bit about vpns

10
00:00:22,080 --> 00:00:23,359
awesome

11
00:00:23,359 --> 00:00:24,320
um

12
00:00:24,320 --> 00:00:25,519
so

13
00:00:25,519 --> 00:00:26,720
i'm kevin

14
00:00:26,720 --> 00:00:29,599
i work at servicenow on the red team

15
00:00:29,599 --> 00:00:31,279
and was that adobe on the red team for

16
00:00:31,279 --> 00:00:32,960
five years and

17
00:00:32,960 --> 00:00:34,559
i was in the intelligence community

18
00:00:34,559 --> 00:00:36,399
before that

19
00:00:36,399 --> 00:00:38,879
now i live in utah and work remotely and

20
00:00:38,879 --> 00:00:40,719
i like to be outside with the kids so

21
00:00:40,719 --> 00:00:43,200
hooray for that

22
00:00:43,200 --> 00:00:46,239
um who knows what a vpn is

23
00:00:46,239 --> 00:00:47,280
like

24
00:00:47,280 --> 00:00:49,039
knows the

25
00:00:49,039 --> 00:00:53,199
denotation knows what vpn means

26
00:00:53,440 --> 00:00:54,480
yeah

27
00:00:54,480 --> 00:00:56,160
i'll get to that in a minute

28
00:00:56,160 --> 00:00:59,359
but uh yeah vpns are virtual private

29
00:00:59,359 --> 00:01:02,160
networks who uses who uses a vpn

30
00:01:02,160 --> 00:01:04,159
um for like tunneling their traffic

31
00:01:04,159 --> 00:01:05,600
through their isp

32
00:01:05,600 --> 00:01:07,600
or who uses it so they can watch netflix

33
00:01:07,600 --> 00:01:09,600
in another geo

34
00:01:09,600 --> 00:01:11,200
or who

35
00:01:11,200 --> 00:01:13,040
who uses it who uses it for work so that

36
00:01:13,040 --> 00:01:14,640
they can actually connect to a private

37
00:01:14,640 --> 00:01:16,000
network

38
00:01:16,000 --> 00:01:18,080
so that's how vpns you know got started

39
00:01:18,080 --> 00:01:20,000
that was the original intention was you

40
00:01:20,000 --> 00:01:22,240
have this private network and you're

41
00:01:22,240 --> 00:01:24,159
you're physically separate from it and

42
00:01:24,159 --> 00:01:27,119
so a vpn allows you to connect to a

43
00:01:27,119 --> 00:01:29,759
private network over a public network

44
00:01:29,759 --> 00:01:31,840
so the typical use case is to connect

45
00:01:31,840 --> 00:01:35,920
one of your devices to a private network

46
00:01:36,000 --> 00:01:37,119
or

47
00:01:37,119 --> 00:01:38,880
connect and that's the case you know if

48
00:01:38,880 --> 00:01:40,560
you have your laptop and you're working

49
00:01:40,560 --> 00:01:42,560
at home and you need to be on the lan at

50
00:01:42,560 --> 00:01:43,600
work that's how you're going to use the

51
00:01:43,600 --> 00:01:45,040
vpn

52
00:01:45,040 --> 00:01:46,479
another use case is to connect two

53
00:01:46,479 --> 00:01:48,079
private networks together so you sort of

54
00:01:48,079 --> 00:01:50,000
have two gateways that

55
00:01:50,000 --> 00:01:52,560
tunnel traffic between two two

56
00:01:52,560 --> 00:01:54,399
geographically separated networks to

57
00:01:54,399 --> 00:01:55,920
make it look like they're on the same

58
00:01:55,920 --> 00:01:57,119
private land

59
00:01:57,119 --> 00:01:58,640
so that's kind of a typical use case for

60
00:01:58,640 --> 00:01:59,840
a vpn

61
00:01:59,840 --> 00:02:02,000
um as we talked about uh they're

62
00:02:02,000 --> 00:02:03,439
becoming super popular for just

63
00:02:03,439 --> 00:02:06,479
tunneling traffic um and so for whatever

64
00:02:06,479 --> 00:02:09,199
reason privacy security anonymity you

65
00:02:09,199 --> 00:02:11,680
can fire up a vpn on your laptop tunnel

66
00:02:11,680 --> 00:02:14,080
all your traffic through it and then

67
00:02:14,080 --> 00:02:16,720
um and then things are great

68
00:02:16,720 --> 00:02:18,959
um also give you a source ip somewhere

69
00:02:18,959 --> 00:02:22,000
else you can watch a british comedy

70
00:02:22,000 --> 00:02:23,680
this talk is sponsored by all of these

71
00:02:23,680 --> 00:02:26,080
vpns so that's what i was getting to if

72
00:02:26,080 --> 00:02:28,480
you guys spend any time on youtube or

73
00:02:28,480 --> 00:02:29,280
like

74
00:02:29,280 --> 00:02:30,879
pay any attention to your favorite

75
00:02:30,879 --> 00:02:32,000
influencer

76
00:02:32,000 --> 00:02:34,080
vpn providers

77
00:02:34,080 --> 00:02:36,720
get a lot of their

78
00:02:36,720 --> 00:02:38,800
get a lot of their user base from

79
00:02:38,800 --> 00:02:41,120
affiliate driven marketing so you see a

80
00:02:41,120 --> 00:02:43,360
lot of that um

81
00:02:43,360 --> 00:02:45,280
and there are countless options these

82
00:02:45,280 --> 00:02:46,879
days you know there's vpn companies

83
00:02:46,879 --> 00:02:48,720
everywhere

84
00:02:48,720 --> 00:02:51,760
so um so this talk is kind of about vpns

85
00:02:51,760 --> 00:02:53,920
but more specifically about wire guard

86
00:02:53,920 --> 00:02:55,920
so wireguard is a specific

87
00:02:55,920 --> 00:02:58,239
implementation of vpn technology

88
00:02:58,239 --> 00:02:59,840
and uh talk a little bit more about the

89
00:02:59,840 --> 00:03:02,319
technical details by the way like half

90
00:03:02,319 --> 00:03:03,760
of this is going to be demos so i'm

91
00:03:03,760 --> 00:03:05,840
going to kind of roll the dice here so

92
00:03:05,840 --> 00:03:08,319
uh yeah be patient with me but i'm going

93
00:03:08,319 --> 00:03:09,519
to get through slides and we'll do some

94
00:03:09,519 --> 00:03:10,560
demos

95
00:03:10,560 --> 00:03:12,800
so um so wireguard is an implementation

96
00:03:12,800 --> 00:03:15,120
of vpn technology

97
00:03:15,120 --> 00:03:16,879
at this point as of

98
00:03:16,879 --> 00:03:18,879
i think last year it's integrated into

99
00:03:18,879 --> 00:03:22,879
linux kernel it actually creates like a

100
00:03:22,879 --> 00:03:24,560
network interface

101
00:03:24,560 --> 00:03:26,239
and does all the things magically behind

102
00:03:26,239 --> 00:03:28,720
the scenes there for you so that's great

103
00:03:28,720 --> 00:03:30,000
and there's a speed advantage over

104
00:03:30,000 --> 00:03:31,840
userland vpns because you're not

105
00:03:31,840 --> 00:03:33,680
constantly copying data between the

106
00:03:33,680 --> 00:03:36,799
kernel and user space

107
00:03:36,879 --> 00:03:38,319
and although there are there are user

108
00:03:38,319 --> 00:03:40,879
land implementations of wireguard and so

109
00:03:40,879 --> 00:03:42,480
you know obviously windows isn't running

110
00:03:42,480 --> 00:03:44,319
the linux kernel so there are

111
00:03:44,319 --> 00:03:46,159
implementations you can use on windows

112
00:03:46,159 --> 00:03:47,840
and darwin and

113
00:03:47,840 --> 00:03:50,319
your mobile phones and everything so

114
00:03:50,319 --> 00:03:51,599
so that's great

115
00:03:51,599 --> 00:03:53,439
um and the other thing that's cool about

116
00:03:53,439 --> 00:03:54,959
wireguard is it has a really small code

117
00:03:54,959 --> 00:03:57,040
base i think i'll i'll talk a little bit

118
00:03:57,040 --> 00:03:59,040
more about that later so oh and one

119
00:03:59,040 --> 00:04:01,040
other thing uh all those vpns i put up

120
00:04:01,040 --> 00:04:03,280
there earlier use wire guard

121
00:04:03,280 --> 00:04:05,439
that's the technology behind all those

122
00:04:05,439 --> 00:04:07,599
brands

123
00:04:07,599 --> 00:04:10,239
um so some technology

124
00:04:10,239 --> 00:04:12,959
specifics um those little bubbles on the

125
00:04:12,959 --> 00:04:14,560
right

126
00:04:14,560 --> 00:04:16,880
show kind of like the magnitude of the

127
00:04:16,880 --> 00:04:19,759
code base of other vpn options so ipsec

128
00:04:19,759 --> 00:04:21,440
specifically strong swan

129
00:04:21,440 --> 00:04:25,360
is about 420 000 lines of code which is

130
00:04:25,360 --> 00:04:27,919
insane like if any of if any of you have

131
00:04:27,919 --> 00:04:30,400
ever done like code audits or

132
00:04:30,400 --> 00:04:33,440
um application pen testing like you

133
00:04:33,440 --> 00:04:35,600
don't you would not want to land on that

134
00:04:35,600 --> 00:04:37,199
gig right

135
00:04:37,199 --> 00:04:40,000
um so it's really hard to audit that

136
00:04:40,000 --> 00:04:41,840
like there's all kinds of

137
00:04:41,840 --> 00:04:44,000
all kinds of um

138
00:04:44,000 --> 00:04:47,360
risk there right and then openvpn uh 120

139
00:04:47,360 --> 00:04:48,960
000 lines of code and that's just

140
00:04:48,960 --> 00:04:51,199
openvpn but like the

141
00:04:51,199 --> 00:04:54,400
the crypto libraries openvpn uses uh are

142
00:04:54,400 --> 00:04:55,840
just

143
00:04:55,840 --> 00:04:58,320
which is another 400-ish thousand lines

144
00:04:58,320 --> 00:05:01,199
of code and as a lot of you know it's

145
00:05:01,199 --> 00:05:03,199
also uh like

146
00:05:03,199 --> 00:05:05,600
getting pretty aged and there's a lot of

147
00:05:05,600 --> 00:05:07,440
tech debt in there so these some

148
00:05:07,440 --> 00:05:10,880
buzzwords cross that one off so um

149
00:05:10,880 --> 00:05:13,520
so yeah those are massive projects right

150
00:05:13,520 --> 00:05:14,880
and then that little dot in the bottom

151
00:05:14,880 --> 00:05:16,560
is wire guarded it's like measly four

152
00:05:16,560 --> 00:05:18,400
thousand lines of code really easy to

153
00:05:18,400 --> 00:05:22,240
audit and just clean and and fresh

154
00:05:22,240 --> 00:05:23,600
lemony fresh

155
00:05:23,600 --> 00:05:26,080
so um another nice thing about wireguard

156
00:05:26,080 --> 00:05:27,919
is it's cryptographically opinionated so

157
00:05:27,919 --> 00:05:30,400
like a lot of these other technologies

158
00:05:30,400 --> 00:05:33,039
let you use whatever algorithms and they

159
00:05:33,039 --> 00:05:35,759
negotiate you know like a public key

160
00:05:35,759 --> 00:05:38,160
algorithm and then they negotiate a

161
00:05:38,160 --> 00:05:40,240
symmetric key and hashing algorithm and

162
00:05:40,240 --> 00:05:41,759
they have all these things built in it's

163
00:05:41,759 --> 00:05:45,120
just like this massive surface area

164
00:05:45,120 --> 00:05:46,240
and so

165
00:05:46,240 --> 00:05:48,400
what wireguard has done is they've said

166
00:05:48,400 --> 00:05:49,600
we're going to use these industry

167
00:05:49,600 --> 00:05:51,600
standards these industry favorites to

168
00:05:51,600 --> 00:05:54,400
use cha-cha poly for like authenticated

169
00:05:54,400 --> 00:05:57,600
cipher we use curve two five five one

170
00:05:57,600 --> 00:06:00,560
nine for for any like asymmetric stuff

171
00:06:00,560 --> 00:06:03,360
we need and blake two for

172
00:06:03,360 --> 00:06:05,440
uh hashing and keyed hashing and then

173
00:06:05,440 --> 00:06:09,039
hkdf for key derivation so we're using

174
00:06:09,039 --> 00:06:10,800
these things and if you don't like these

175
00:06:10,800 --> 00:06:13,120
then you're not going to like us that's

176
00:06:13,120 --> 00:06:14,880
and that's a really really good way to

177
00:06:14,880 --> 00:06:17,840
keep the complexity low

178
00:06:17,840 --> 00:06:20,479
on the technology so that's really cool

179
00:06:20,479 --> 00:06:21,919
they have this notion of cryptokey

180
00:06:21,919 --> 00:06:23,759
routing so what you do when you set up

181
00:06:23,759 --> 00:06:25,039
your configuration and you'll see this

182
00:06:25,039 --> 00:06:28,000
in the demo is you take an ip address

183
00:06:28,000 --> 00:06:29,840
and you have a public key associated

184
00:06:29,840 --> 00:06:32,160
with that and anything that goes to that

185
00:06:32,160 --> 00:06:33,840
ip address gets encrypted with that

186
00:06:33,840 --> 00:06:34,960
public key

187
00:06:34,960 --> 00:06:37,039
and then anything that

188
00:06:37,039 --> 00:06:40,639
comes from that ip anything that comes

189
00:06:40,639 --> 00:06:42,240
decryptable

190
00:06:42,240 --> 00:06:44,400
decryptable anything that

191
00:06:44,400 --> 00:06:46,639
anything that comes signed with that

192
00:06:46,639 --> 00:06:48,639
public key should have come from an ip

193
00:06:48,639 --> 00:06:51,360
address associated with it so anyway

194
00:06:51,360 --> 00:06:52,160
so

195
00:06:52,160 --> 00:06:54,800
it uses this notion of like pairing

196
00:06:54,800 --> 00:06:58,319
uh cryptographic primitives and um and

197
00:06:58,319 --> 00:07:00,479
tunnel ip addresses to sort of like

198
00:07:00,479 --> 00:07:02,160
authenticate users as well as like

199
00:07:02,160 --> 00:07:04,000
authenticate the data which is cool

200
00:07:04,000 --> 00:07:05,520
and then i didn't mention this earlier

201
00:07:05,520 --> 00:07:06,880
but it's implemented as a network

202
00:07:06,880 --> 00:07:09,759
interface so it's kind of cool

203
00:07:09,759 --> 00:07:11,280
and we're ready for our first demo just

204
00:07:11,280 --> 00:07:12,400
like that

205
00:07:12,400 --> 00:07:13,599
all right

206
00:07:13,599 --> 00:07:15,440
so this is going to go really smooth i

207
00:07:15,440 --> 00:07:17,599
can already tell

208
00:07:17,599 --> 00:07:18,479
all right

209
00:07:18,479 --> 00:07:19,680
so

210
00:07:19,680 --> 00:07:21,759
um can you guys see this okay

211
00:07:21,759 --> 00:07:23,360
this terminal

212
00:07:23,360 --> 00:07:25,360
is that big enough

213
00:07:25,360 --> 00:07:26,560
yeah

214
00:07:26,560 --> 00:07:28,639
okay thank you vocal person in the

215
00:07:28,639 --> 00:07:30,720
middle of the room

216
00:07:30,720 --> 00:07:32,560
one more bigger why not

217
00:07:32,560 --> 00:07:35,120
is that good

218
00:07:35,919 --> 00:07:36,880
all right

219
00:07:36,880 --> 00:07:38,319
uh i could never tell when someone's

220
00:07:38,319 --> 00:07:40,240
being a heckler when they're just like

221
00:07:40,240 --> 00:07:43,120
trying to be helpful you know

222
00:07:43,120 --> 00:07:45,280
all right um and then

223
00:07:45,280 --> 00:07:48,160
does that look good i'm just kidding

224
00:07:48,160 --> 00:07:49,120
um

225
00:07:49,120 --> 00:07:51,759
okay so what i'm gonna do is uh

226
00:07:51,759 --> 00:07:54,160
here i'm connected to this

227
00:07:54,160 --> 00:07:56,479
um server in aws

228
00:07:56,479 --> 00:07:58,160
i'm gonna set up wireguard there as a

229
00:07:58,160 --> 00:08:00,319
wireguard server you can just see

230
00:08:00,319 --> 00:08:01,680
that process

231
00:08:01,680 --> 00:08:04,400
i'm going to copy and paste because i i

232
00:08:04,400 --> 00:08:06,400
seem brave but i'm not

233
00:08:06,400 --> 00:08:08,160
so first i'm going to be root for

234
00:08:08,160 --> 00:08:10,240
everything american people are angry

235
00:08:10,240 --> 00:08:11,280
about that

236
00:08:11,280 --> 00:08:13,039
and that's great

237
00:08:13,039 --> 00:08:15,280
um

238
00:08:15,280 --> 00:08:17,599
let me use tmux

239
00:08:17,599 --> 00:08:19,599
and then

240
00:08:19,599 --> 00:08:21,520
i'm going to install wireguard

241
00:08:21,520 --> 00:08:26,120
have to install wireguard hooray ubuntu

242
00:08:27,120 --> 00:08:29,360
now i have wirecard that's cool

243
00:08:29,360 --> 00:08:31,199
okay

244
00:08:31,199 --> 00:08:33,039
now some interesting things let's start

245
00:08:33,039 --> 00:08:35,120
configuring it

246
00:08:35,120 --> 00:08:36,640
so what i've done is i've created this

247
00:08:36,640 --> 00:08:39,640
file

248
00:08:41,440 --> 00:08:43,039
so there are two sections this file

249
00:08:43,039 --> 00:08:45,120
there's an interface section and a peer

250
00:08:45,120 --> 00:08:46,800
section you see that

251
00:08:46,800 --> 00:08:49,200
so the interface this is my private key

252
00:08:49,200 --> 00:08:50,480
you guys can have it i'm just going to

253
00:08:50,480 --> 00:08:52,720
destroy all this very fast as soon as

254
00:08:52,720 --> 00:08:54,800
i'm done so

255
00:08:54,800 --> 00:08:56,480
this is the private key associated with

256
00:08:56,480 --> 00:08:58,959
my wireguard server so

257
00:08:58,959 --> 00:09:00,640
that has a public key and we'll see that

258
00:09:00,640 --> 00:09:01,600
in a minute

259
00:09:01,600 --> 00:09:03,279
the public key goes on the pier so the

260
00:09:03,279 --> 00:09:06,800
peer can encrypt traffic to the server

261
00:09:06,800 --> 00:09:09,760
i also tell it to listen on this port

262
00:09:09,760 --> 00:09:12,320
that's the standard wireguard port so

263
00:09:12,320 --> 00:09:14,000
if you're a network person you like

264
00:09:14,000 --> 00:09:15,760
looking at pcapp

265
00:09:15,760 --> 00:09:17,839
use your photographic memory

266
00:09:17,839 --> 00:09:20,640
and then i'm going to set up a pier so

267
00:09:20,640 --> 00:09:22,640
this is going to be my laptop

268
00:09:22,640 --> 00:09:24,720
uh once i configure my laptop i'll be 10

269
00:09:24,720 --> 00:09:26,160
10 10 2

270
00:09:26,160 --> 00:09:28,800
um and

271
00:09:28,800 --> 00:09:31,040
the public key associated with my laptop

272
00:09:31,040 --> 00:09:34,000
is going to be this so this is just

273
00:09:34,000 --> 00:09:35,680
32 bytes

274
00:09:35,680 --> 00:09:36,640
on

275
00:09:36,640 --> 00:09:39,880
a 32 byte integer on that

276
00:09:39,880 --> 00:09:43,360
25519 curve so that's all that is super

277
00:09:43,360 --> 00:09:45,279
simple like small key to move around

278
00:09:45,279 --> 00:09:46,800
which is cool

279
00:09:46,800 --> 00:09:48,399
okay

280
00:09:48,399 --> 00:09:50,720
so we have a configuration file

281
00:09:50,720 --> 00:09:51,920
now we're going to do some system

282
00:09:51,920 --> 00:09:54,719
configuration

283
00:09:56,320 --> 00:09:57,600
so

284
00:09:57,600 --> 00:09:59,440
i'm just going to tell the kernel

285
00:09:59,440 --> 00:10:01,360
hey anything that comes to you that's

286
00:10:01,360 --> 00:10:03,360
not for you just go ahead and route that

287
00:10:03,360 --> 00:10:05,600
through and then

288
00:10:05,600 --> 00:10:08,800
this nat rule is just going to

289
00:10:08,800 --> 00:10:11,040
not traffic in other words

290
00:10:11,040 --> 00:10:12,480
it's going to act as a route on netting

291
00:10:12,480 --> 00:10:13,839
router

292
00:10:13,839 --> 00:10:14,640
okay

293
00:10:14,640 --> 00:10:16,720
and now i'm going to add that wireguard

294
00:10:16,720 --> 00:10:18,800
interface that we talked about using ip

295
00:10:18,800 --> 00:10:20,320
route 2

296
00:10:20,320 --> 00:10:23,440
and add the 10 10 10 1

297
00:10:23,440 --> 00:10:25,360
ip address to it so

298
00:10:25,360 --> 00:10:27,279
remember the client will be 10 10 10 2

299
00:10:27,279 --> 00:10:30,040
and the server will be 10 10

300
00:10:30,040 --> 00:10:33,519
1. um and now i'm going to associate

301
00:10:33,519 --> 00:10:36,160
that config file with the interface

302
00:10:36,160 --> 00:10:38,079
and

303
00:10:38,079 --> 00:10:39,680
set the interface up

304
00:10:39,680 --> 00:10:43,599
so if we do like iplink

305
00:10:43,680 --> 00:10:45,760
iplink

306
00:10:45,760 --> 00:10:48,560
here's that interface

307
00:10:48,560 --> 00:10:51,600
cool and you can also use the the

308
00:10:51,600 --> 00:10:54,240
wireguard utility wg show

309
00:10:54,240 --> 00:10:57,519
and it'll say yep

310
00:10:57,519 --> 00:10:59,200
this interface is associated with this

311
00:10:59,200 --> 00:11:00,480
public key

312
00:11:00,480 --> 00:11:01,839
i'm not going to show you that even

313
00:11:01,839 --> 00:11:03,279
though i already did

314
00:11:03,279 --> 00:11:05,920
and that's the port it's listening on

315
00:11:05,920 --> 00:11:07,279
it's udp

316
00:11:07,279 --> 00:11:10,160
and then sure enough the pier 10 10 10 2

317
00:11:10,160 --> 00:11:12,079
with this public key is going to be my

318
00:11:12,079 --> 00:11:14,079
laptop we'll configure that next i don't

319
00:11:14,079 --> 00:11:15,279
know if you guys picked up on this

320
00:11:15,279 --> 00:11:17,519
little easter egg but

321
00:11:17,519 --> 00:11:19,600
you can actually make these vanity

322
00:11:19,600 --> 00:11:20,800
public keys

323
00:11:20,800 --> 00:11:22,399
so all you have to do

324
00:11:22,399 --> 00:11:24,880
is uh solve the discrete logarithm

325
00:11:24,880 --> 00:11:27,440
problem and then you can make any key

326
00:11:27,440 --> 00:11:28,399
you want

327
00:11:28,399 --> 00:11:29,519
i'm just kidding

328
00:11:29,519 --> 00:11:32,160
you just generate private keys

329
00:11:32,160 --> 00:11:33,760
and then

330
00:11:33,760 --> 00:11:35,600
generate the public key from that and

331
00:11:35,600 --> 00:11:37,680
you just forward generate those a

332
00:11:37,680 --> 00:11:39,040
million times until you get the keys you

333
00:11:39,040 --> 00:11:41,360
want so

334
00:11:41,360 --> 00:11:43,040
so yeah if you solve the discrete

335
00:11:43,040 --> 00:11:44,560
logarithm problem come find me we'll do

336
00:11:44,560 --> 00:11:46,640
a talk

337
00:11:46,640 --> 00:11:48,160
okay

338
00:11:48,160 --> 00:11:50,959
then we're going to go to our client

339
00:11:50,959 --> 00:11:52,720
i downloaded the client the wireguard

340
00:11:52,720 --> 00:11:55,120
client on my laptop already

341
00:11:55,120 --> 00:11:56,720
so it's just called wire guard and

342
00:11:56,720 --> 00:11:58,079
unfortunately i can't make this bigger

343
00:11:58,079 --> 00:12:00,399
so if it's hard to see i apologize

344
00:12:00,399 --> 00:12:03,360
but you do add empty tunnel and you say

345
00:12:03,360 --> 00:12:04,880
b sides

346
00:12:04,880 --> 00:12:06,399
and paste

347
00:12:06,399 --> 00:12:08,720
configuration in so this is the private

348
00:12:08,720 --> 00:12:10,880
key on my laptop and that corresponds

349
00:12:10,880 --> 00:12:12,639
with the public key in the peer section

350
00:12:12,639 --> 00:12:15,120
on my server if that makes sense

351
00:12:15,120 --> 00:12:18,399
and then i set my address to 10 10 10 2

352
00:12:18,399 --> 00:12:20,399
and you can set a dns server

353
00:12:20,399 --> 00:12:21,680
and then

354
00:12:21,680 --> 00:12:23,760
my peer is going to be

355
00:12:23,760 --> 00:12:25,760
the server in this case so if i go back

356
00:12:25,760 --> 00:12:27,519
to that terminal

357
00:12:27,519 --> 00:12:29,760
wg show

358
00:12:29,760 --> 00:12:31,120
kl

359
00:12:31,120 --> 00:12:33,040
tdup

360
00:12:33,040 --> 00:12:35,440
matches the public key that's in my in

361
00:12:35,440 --> 00:12:37,040
the peer section

362
00:12:37,040 --> 00:12:38,880
and then i'm going to say allowed ips so

363
00:12:38,880 --> 00:12:40,959
what the allowed ips section tells you

364
00:12:40,959 --> 00:12:41,760
is

365
00:12:41,760 --> 00:12:43,040
um if

366
00:12:43,040 --> 00:12:45,279
if traffic comes to this interface with

367
00:12:45,279 --> 00:12:48,560
this ip address send it to that peer if

368
00:12:48,560 --> 00:12:50,240
that makes sense

369
00:12:50,240 --> 00:12:53,680
um and so so what this zero zero zero

370
00:12:53,680 --> 00:12:55,040
slash zero

371
00:12:55,040 --> 00:12:56,959
tells you is that any traffic at all

372
00:12:56,959 --> 00:12:59,279
will go through the vpn tunnel

373
00:12:59,279 --> 00:13:01,600
great and then uh endpoint is that

374
00:13:01,600 --> 00:13:03,200
server in aws i'm gonna go ahead and

375
00:13:03,200 --> 00:13:04,560
save that

376
00:13:04,560 --> 00:13:07,440
and i'm going to allow it to access my

377
00:13:07,440 --> 00:13:09,600
vpn configurations

378
00:13:09,600 --> 00:13:11,200
and activate

379
00:13:11,200 --> 00:13:14,160
and first good sign is that that turned

380
00:13:14,160 --> 00:13:17,440
green so i'm already happy happy man

381
00:13:17,440 --> 00:13:21,440
and then if i go ahead and on my laptop

382
00:13:21,440 --> 00:13:24,880
ping 10 10 1 that should be the server

383
00:13:24,880 --> 00:13:26,480
sure enough

384
00:13:26,480 --> 00:13:29,600
60 60 milliseconds is pretty good

385
00:13:29,600 --> 00:13:31,760
and

386
00:13:31,760 --> 00:13:35,279
check my public ip address and that's

387
00:13:35,279 --> 00:13:36,959
not so good

388
00:13:36,959 --> 00:13:39,199
so i'm not sure why that's not working

389
00:13:39,199 --> 00:13:42,320
hey demo's over all right

390
00:13:42,320 --> 00:13:44,800
um

391
00:13:45,040 --> 00:13:46,839
yeah that's not

392
00:13:46,839 --> 00:13:49,360
good um

393
00:13:49,360 --> 00:13:53,920
did i turn off yeah i turned off proton

394
00:13:57,680 --> 00:14:01,239
trust me it's easy

395
00:14:07,040 --> 00:14:09,680
i'm not sure but i'm going to move on

396
00:14:09,680 --> 00:14:12,160
so um

397
00:14:12,160 --> 00:14:13,680
hopefully we fix it before the next one

398
00:14:13,680 --> 00:14:17,319
because it builds on that

399
00:14:17,440 --> 00:14:19,120
oh wait can't reach google because

400
00:14:19,120 --> 00:14:21,600
wirecard

401
00:14:22,320 --> 00:14:23,360
okay

402
00:14:23,360 --> 00:14:25,839
cool so this is interesting technology

403
00:14:25,839 --> 00:14:28,160
kevin thank you i agree

404
00:14:28,160 --> 00:14:30,560
but how how interesting exactly is it

405
00:14:30,560 --> 00:14:32,399
well there's this thing in linux called

406
00:14:32,399 --> 00:14:34,720
network name spaces and it's it's um

407
00:14:34,720 --> 00:14:36,320
separation in the kernel of different

408
00:14:36,320 --> 00:14:37,920
network objects

409
00:14:37,920 --> 00:14:40,880
um that's that's the idea and so when

410
00:14:40,880 --> 00:14:43,839
you create a socket in one name space

411
00:14:43,839 --> 00:14:45,760
it remains in that namespace even if you

412
00:14:45,760 --> 00:14:50,079
move whatever has handles to it around

413
00:14:50,079 --> 00:14:51,760
so that's a really interesting property

414
00:14:51,760 --> 00:14:54,160
because

415
00:14:54,160 --> 00:14:56,160
when you initialize your wireguard

416
00:14:56,160 --> 00:14:57,279
interface

417
00:14:57,279 --> 00:14:58,480
it creates

418
00:14:58,480 --> 00:15:00,720
it creates your wire guard interface in

419
00:15:00,720 --> 00:15:02,240
a specific name space which means it

420
00:15:02,240 --> 00:15:04,000
builds that udp socket that it uses for

421
00:15:04,000 --> 00:15:05,760
the tunnel and so if you move that

422
00:15:05,760 --> 00:15:07,600
interface into a new namespace that

423
00:15:07,600 --> 00:15:09,760
tunnel socket stays behind so that's

424
00:15:09,760 --> 00:15:11,360
really interesting

425
00:15:11,360 --> 00:15:13,440
some of you who like deal with this

426
00:15:13,440 --> 00:15:14,959
technology are probably already know

427
00:15:14,959 --> 00:15:17,920
where i'm going with this but in docker

428
00:15:17,920 --> 00:15:20,480
one of the ways docker does isolation is

429
00:15:20,480 --> 00:15:22,800
with these kernel name spaces

430
00:15:22,800 --> 00:15:25,199
does process mount ipc and username

431
00:15:25,199 --> 00:15:27,760
spacing but also network name spacing

432
00:15:27,760 --> 00:15:28,639
and so

433
00:15:28,639 --> 00:15:30,399
what you can do is you can create a

434
00:15:30,399 --> 00:15:33,680
docker container and then you can

435
00:15:33,680 --> 00:15:36,399
create a wireguard interface in the host

436
00:15:36,399 --> 00:15:38,160
like the init namespace

437
00:15:38,160 --> 00:15:39,600
and configure it there and everything

438
00:15:39,600 --> 00:15:40,880
and then move it into the docker

439
00:15:40,880 --> 00:15:42,560
container's namespace

440
00:15:42,560 --> 00:15:44,720
and now that docker container has a

441
00:15:44,720 --> 00:15:47,199
wireguard interface that can talk to the

442
00:15:47,199 --> 00:15:49,759
internet um

443
00:15:49,759 --> 00:15:51,839
magically without having any wireguard

444
00:15:51,839 --> 00:15:53,600
software or anything specifically

445
00:15:53,600 --> 00:15:56,399
installed on on the docker container so

446
00:15:56,399 --> 00:15:58,480
that's my next demo it's way more

447
00:15:58,480 --> 00:16:00,160
complex than that other one so hopefully

448
00:16:00,160 --> 00:16:02,880
it goes okay

449
00:16:03,040 --> 00:16:05,440
what we're going to do i still have this

450
00:16:05,440 --> 00:16:08,639
laptop terminal on the left and i have

451
00:16:08,639 --> 00:16:09,440
this

452
00:16:09,440 --> 00:16:11,680
server terminal on the right

453
00:16:11,680 --> 00:16:13,670
and i'm going to

454
00:16:13,670 --> 00:16:16,079
[Music]

455
00:16:16,079 --> 00:16:19,519
create a new tmux session there

456
00:16:19,519 --> 00:16:22,639
okay so um

457
00:16:22,639 --> 00:16:25,279
first thing i'm going to do is

458
00:16:25,279 --> 00:16:27,600
going to

459
00:16:27,600 --> 00:16:29,360
run a new docker container i'll explain

460
00:16:29,360 --> 00:16:31,519
this docker command

461
00:16:31,519 --> 00:16:34,160
so what this does is

462
00:16:34,160 --> 00:16:36,560
docker run starts a new container rm

463
00:16:36,560 --> 00:16:38,000
says delete this container when i'm done

464
00:16:38,000 --> 00:16:41,279
i don't i don't can be ephemeral it says

465
00:16:41,279 --> 00:16:44,000
uh give me this interactive prompt

466
00:16:44,000 --> 00:16:45,120
um

467
00:16:45,120 --> 00:16:47,199
this interactive tty

468
00:16:47,199 --> 00:16:49,519
and then network none says don't attach

469
00:16:49,519 --> 00:16:51,920
me to any networks so all i want is a

470
00:16:51,920 --> 00:16:53,759
loopback interface

471
00:16:53,759 --> 00:16:55,600
and then i just called it secret because

472
00:16:55,600 --> 00:16:56,639
you know

473
00:16:56,639 --> 00:16:59,920
and then i'm running it in just vanilla

474
00:16:59,920 --> 00:17:01,839
alpine so there's nothing special about

475
00:17:01,839 --> 00:17:04,640
this container so if we do iplink

476
00:17:04,640 --> 00:17:06,559
iplink

477
00:17:06,559 --> 00:17:08,240
link

478
00:17:08,240 --> 00:17:10,400
you see all we have is the loopback

479
00:17:10,400 --> 00:17:12,880
interface

480
00:17:13,599 --> 00:17:15,119
so that's cool so what we're going to do

481
00:17:15,119 --> 00:17:17,039
is we're going to go ahead and build a

482
00:17:17,039 --> 00:17:18,959
new wireguard interface

483
00:17:18,959 --> 00:17:21,359
move it into this container

484
00:17:21,359 --> 00:17:22,799
um

485
00:17:22,799 --> 00:17:25,199
so to do that

486
00:17:25,199 --> 00:17:27,280
i'm going to create a new config file

487
00:17:27,280 --> 00:17:29,860
just like we did previously

488
00:17:29,860 --> 00:17:31,600
[Music]

489
00:17:31,600 --> 00:17:33,840
and

490
00:17:34,480 --> 00:17:36,000
it looks very similar so you have a

491
00:17:36,000 --> 00:17:37,360
private key

492
00:17:37,360 --> 00:17:39,120
this time we don't have a listening port

493
00:17:39,120 --> 00:17:40,320
but that's okay

494
00:17:40,320 --> 00:17:42,400
and then uh public key this is the

495
00:17:42,400 --> 00:17:44,240
server's public key and i'm gonna send

496
00:17:44,240 --> 00:17:46,400
all traffic to it and that's the

497
00:17:46,400 --> 00:17:48,160
server's ip address so pretty

498
00:17:48,160 --> 00:17:51,360
straightforward configuration

499
00:17:51,520 --> 00:17:53,440
now i'm going to do some setup that's

500
00:17:53,440 --> 00:17:54,960
going to make working with namespaces a

501
00:17:54,960 --> 00:17:56,799
little easier

502
00:17:56,799 --> 00:17:57,679
so

503
00:17:57,679 --> 00:17:59,760
pay no attention to

504
00:17:59,760 --> 00:18:01,360
that

505
00:18:01,360 --> 00:18:03,440
just creating some sim links in bar run

506
00:18:03,440 --> 00:18:05,760
net name space directory

507
00:18:05,760 --> 00:18:06,640
okay

508
00:18:06,640 --> 00:18:07,840
so

509
00:18:07,840 --> 00:18:09,520
here we go we're going to create

510
00:18:09,520 --> 00:18:10,960
this new

511
00:18:10,960 --> 00:18:12,840
interface

512
00:18:12,840 --> 00:18:15,600
wg1 and we're going to put it in the

513
00:18:15,600 --> 00:18:17,440
container's namespace

514
00:18:17,440 --> 00:18:18,799
so

515
00:18:18,799 --> 00:18:21,520
container is a secret i could call it

516
00:18:21,520 --> 00:18:23,760
called it earlier

517
00:18:23,760 --> 00:18:24,640
okay

518
00:18:24,640 --> 00:18:26,640
and then we're going to

519
00:18:26,640 --> 00:18:29,039
just paste all these we're running short

520
00:18:29,039 --> 00:18:31,440
on time

521
00:18:31,520 --> 00:18:33,760
in that namespace i'm going to add 10 10

522
00:18:33,760 --> 00:18:36,240
10 3 to this containers

523
00:18:36,240 --> 00:18:37,919
interface

524
00:18:37,919 --> 00:18:39,200
and then i'm going to set the

525
00:18:39,200 --> 00:18:40,880
configuration file

526
00:18:40,880 --> 00:18:43,360
that we just created we associate that

527
00:18:43,360 --> 00:18:46,000
and then i'm gonna put the

528
00:18:46,000 --> 00:18:48,240
put the interface up and then i'm gonna

529
00:18:48,240 --> 00:18:50,400
make wg1

530
00:18:50,400 --> 00:18:53,120
the default route for that container's

531
00:18:53,120 --> 00:18:54,480
namespace

532
00:18:54,480 --> 00:18:55,280
so

533
00:18:55,280 --> 00:18:57,840
um

534
00:18:58,799 --> 00:19:00,320
so try not to freak out but i'm gonna

535
00:19:00,320 --> 00:19:02,240
show you something cool

536
00:19:02,240 --> 00:19:03,919
so now if we go back in our container

537
00:19:03,919 --> 00:19:06,320
and we do ipadder

538
00:19:06,320 --> 00:19:08,320
there's a magical interface in here

539
00:19:08,320 --> 00:19:09,919
which is that wireguard interface that

540
00:19:09,919 --> 00:19:12,799
we created in the the init namespace and

541
00:19:12,799 --> 00:19:15,280
moved into the container's namespace um

542
00:19:15,280 --> 00:19:17,120
so that's pretty cool and if we do

543
00:19:17,120 --> 00:19:18,880
iprout um

544
00:19:18,880 --> 00:19:22,160
all traffic except for uh 101010 traffic

545
00:19:22,160 --> 00:19:24,480
is going to go through wg-1 just so

546
00:19:24,480 --> 00:19:26,000
happens that's the subnet associated

547
00:19:26,000 --> 00:19:27,360
with that interface and so that's going

548
00:19:27,360 --> 00:19:29,679
to go through the tunnel also so

549
00:19:29,679 --> 00:19:32,160
any traffic to or from this container

550
00:19:32,160 --> 00:19:33,919
can only traverse that tunnel that's the

551
00:19:33,919 --> 00:19:36,400
implication it's pretty cool

552
00:19:36,400 --> 00:19:40,400
all right um now back on the server um

553
00:19:40,400 --> 00:19:41,679
we have a new pier which is this

554
00:19:41,679 --> 00:19:43,760
container so

555
00:19:43,760 --> 00:19:46,080
we go ahead and add that to

556
00:19:46,080 --> 00:19:48,400
its configuration file

557
00:19:48,400 --> 00:19:50,400
so now the server looks like this you

558
00:19:50,400 --> 00:19:52,480
have two peers my laptop and the

559
00:19:52,480 --> 00:19:54,320
container and then its own interface

560
00:19:54,320 --> 00:19:56,320
configuration section

561
00:19:56,320 --> 00:19:57,520
and we're just going to sync that

562
00:19:57,520 --> 00:20:00,240
configuration

563
00:20:02,559 --> 00:20:04,240
now

564
00:20:04,240 --> 00:20:06,559
do wg show on the server

565
00:20:06,559 --> 00:20:08,640
two piers um this one is from the

566
00:20:08,640 --> 00:20:10,320
container and it hasn't had a handshake

567
00:20:10,320 --> 00:20:12,080
yet hasn't been hasn't been contacted by

568
00:20:12,080 --> 00:20:13,440
the container

569
00:20:13,440 --> 00:20:15,840
um and then i showed you this but if we

570
00:20:15,840 --> 00:20:18,159
look in the namespace of the container

571
00:20:18,159 --> 00:20:22,400
um that's that's the configuration

572
00:20:22,400 --> 00:20:24,640
and now i'm just gonna run tcp dump

573
00:20:24,640 --> 00:20:26,880
well my demo hopefully doesn't fail

574
00:20:26,880 --> 00:20:27,760
so

575
00:20:27,760 --> 00:20:29,440
if we're we're in the container now

576
00:20:29,440 --> 00:20:31,280
which is again this container is running

577
00:20:31,280 --> 00:20:33,760
in docker on us on an ubuntu server in

578
00:20:33,760 --> 00:20:35,760
the amazon cloud my laptop's here at

579
00:20:35,760 --> 00:20:39,120
b-sides so if i ping 10-10-10-2 which is

580
00:20:39,120 --> 00:20:41,360
my laptop i can't reach it which is

581
00:20:41,360 --> 00:20:44,400
fantastic oh wait

582
00:20:44,400 --> 00:20:46,880
i disconnected

583
00:20:46,880 --> 00:20:49,919
from wire yards okay

584
00:20:49,919 --> 00:20:53,120
still can't dang it

585
00:20:54,000 --> 00:20:56,159
all right so on my laptop i can ping the

586
00:20:56,159 --> 00:20:59,120
server can i ping the container

587
00:20:59,120 --> 00:21:00,840
i can't i

588
00:21:00,840 --> 00:21:05,280
cannot let's see if we can diagnose that

589
00:21:05,280 --> 00:21:08,480
so here's tcp dump and we see from two

590
00:21:08,480 --> 00:21:10,400
two is pinging to three

591
00:21:10,400 --> 00:21:12,799
and three is responding to two

592
00:21:12,799 --> 00:21:14,720
so

593
00:21:14,720 --> 00:21:16,320
i have no idea why it's not working i'm

594
00:21:16,320 --> 00:21:20,080
gonna be totally honest with you but

595
00:21:20,480 --> 00:21:23,840
um i am on the wi-fi here

596
00:21:28,320 --> 00:21:30,640
i think he might have saved me well but

597
00:21:30,640 --> 00:21:32,720
it's weird though because i can i can

598
00:21:32,720 --> 00:21:34,320
ping

599
00:21:34,320 --> 00:21:37,960
the server right

600
00:21:45,679 --> 00:21:47,440
oh that's interesting

601
00:21:47,440 --> 00:21:48,960
i'm gonna go with that yeah it's the

602
00:21:48,960 --> 00:21:51,679
network guys demo solid it's the network

603
00:21:51,679 --> 00:21:52,799
i don't know

604
00:21:52,799 --> 00:21:55,440
all right thank you thank you for that

605
00:21:55,440 --> 00:21:57,120
brave audience member

606
00:21:57,120 --> 00:21:59,520
okay

607
00:21:59,520 --> 00:22:00,960
oh yeah

608
00:22:00,960 --> 00:22:03,280
see it's blocking my slides

609
00:22:03,280 --> 00:22:06,159
ah man network guys

610
00:22:06,159 --> 00:22:07,440
it's the worst

611
00:22:07,440 --> 00:22:09,200
okay

612
00:22:09,200 --> 00:22:10,640
so um

613
00:22:10,640 --> 00:22:11,919
there are also some bonus tricks i

614
00:22:11,919 --> 00:22:15,679
showed you the vanity public keys um

615
00:22:15,679 --> 00:22:17,600
so my initials were at the beginning of

616
00:22:17,600 --> 00:22:18,799
all the public keys that you saw up

617
00:22:18,799 --> 00:22:19,600
there

618
00:22:19,600 --> 00:22:21,520
um so that's cool hooray for that and

619
00:22:21,520 --> 00:22:22,640
then but

620
00:22:22,640 --> 00:22:24,480
another side note is you know that's

621
00:22:24,480 --> 00:22:27,360
just a 64 byte string

622
00:22:27,360 --> 00:22:28,480
no

623
00:22:28,480 --> 00:22:31,360
64 bytes no i don't think that's right

624
00:22:31,360 --> 00:22:33,440
uh it's just a string of bytes right so

625
00:22:33,440 --> 00:22:34,880
you can make that it doesn't have to be

626
00:22:34,880 --> 00:22:37,360
like some ascii it could be

627
00:22:37,360 --> 00:22:38,559
it could be

628
00:22:38,559 --> 00:22:40,320
binary data so what you could do is you

629
00:22:40,320 --> 00:22:42,159
could use that for good you could use

630
00:22:42,159 --> 00:22:43,679
you could make the first four bytes like

631
00:22:43,679 --> 00:22:46,080
the same as your ipv4 address which

632
00:22:46,080 --> 00:22:47,520
actually be pretty cool where our guard

633
00:22:47,520 --> 00:22:50,400
wouldn't enforce that like that ip and

634
00:22:50,400 --> 00:22:53,919
uh and and public key are the same match

635
00:22:53,919 --> 00:22:55,360
in that way but it would be cool to put

636
00:22:55,360 --> 00:22:57,280
software on top of it that does that um

637
00:22:57,280 --> 00:22:59,360
the crypto key routing is also similar

638
00:22:59,360 --> 00:23:01,520
to that but anyway this is a cool idea

639
00:23:01,520 --> 00:23:05,440
um that's it you guys have questions

640
00:23:06,480 --> 00:23:09,840
is the network the network's just

641
00:23:11,200 --> 00:23:12,880
i do yeah i could probably try that uh

642
00:23:12,880 --> 00:23:13,830
we're out of time though

643
00:23:13,830 --> 00:23:18,070
[Laughter]

644
00:23:20,159 --> 00:23:22,900
cool well thank you guys

645
00:23:22,900 --> 00:23:28,549
[Applause]

