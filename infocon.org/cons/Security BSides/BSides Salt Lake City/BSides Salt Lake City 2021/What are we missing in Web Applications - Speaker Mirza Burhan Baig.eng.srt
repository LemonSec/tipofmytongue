1
00:00:11,280 --> 00:00:13,679
welcome everyone uh good morning first

2
00:00:13,679 --> 00:00:15,440
of all it's

3
00:00:15,440 --> 00:00:17,600
about to be good afternoon and the

4
00:00:17,600 --> 00:00:20,080
region i am right now this is good night

5
00:00:20,080 --> 00:00:23,600
for me because it's 11 p.m so uh we'll

6
00:00:23,600 --> 00:00:26,080
be starting our session uh first of all

7
00:00:26,080 --> 00:00:28,400
the topic of the day is what are we

8
00:00:28,400 --> 00:00:30,160
really missing in the web applications

9
00:00:30,160 --> 00:00:31,359
nowadays

10
00:00:31,359 --> 00:00:32,320
uh

11
00:00:32,320 --> 00:00:34,320
a short and quick introduction about

12
00:00:34,320 --> 00:00:36,960
myself who i am and what i do

13
00:00:36,960 --> 00:00:39,760
my name is mirza burhan bake and i'm

14
00:00:39,760 --> 00:00:43,840
working currently as a threat analyst

15
00:00:43,840 --> 00:00:44,879
teamer

16
00:00:44,879 --> 00:00:47,840
in a bank in riyadh saudi arabia

17
00:00:47,840 --> 00:00:50,160
so the bank name is riyadh bank itself

18
00:00:50,160 --> 00:00:50,960
so

19
00:00:50,960 --> 00:00:54,160
it's a government semi-government bank

20
00:00:54,160 --> 00:00:56,960
my career starts from 2013 as a bug

21
00:00:56,960 --> 00:00:59,440
bounty hunter as you can see i've been

22
00:00:59,440 --> 00:01:00,719
acknowledged by google microsoft

23
00:01:00,719 --> 00:01:04,000
facebook etc etc uh the top notch

24
00:01:04,000 --> 00:01:07,520
companies and uh right now uh

25
00:01:07,520 --> 00:01:10,320
today i did some

26
00:01:10,320 --> 00:01:12,479
work on the web hacking as well for the

27
00:01:12,479 --> 00:01:13,520
buck

28
00:01:13,520 --> 00:01:16,960
nonetheless so i'm ocp certified uh

29
00:01:16,960 --> 00:01:19,520
ewpta another certification that

30
00:01:19,520 --> 00:01:21,280
includes my credentials

31
00:01:21,280 --> 00:01:23,759
for mobile and network as well

32
00:01:23,759 --> 00:01:25,759
okay so i've been working for the

33
00:01:25,759 --> 00:01:26,880
financial

34
00:01:26,880 --> 00:01:29,520
mostly health and the business

35
00:01:29,520 --> 00:01:31,680
these and the government sectors as well

36
00:01:31,680 --> 00:01:34,240
and some other sectors so this is my

37
00:01:34,240 --> 00:01:36,079
quick introduction uh

38
00:01:36,079 --> 00:01:40,320
bug bounty hunter turn to vr threat list

39
00:01:40,320 --> 00:01:41,360
okay

40
00:01:41,360 --> 00:01:44,000
so the question is what are we what are

41
00:01:44,000 --> 00:01:45,360
the current and the critical web

42
00:01:45,360 --> 00:01:48,720
application flaws nowadays and what are

43
00:01:48,720 --> 00:01:52,240
the major changes in the oas top 10 i'm

44
00:01:52,240 --> 00:01:54,399
sure most of you have heard about lost

45
00:01:54,399 --> 00:01:57,759
top 10 this is a baseline or we can say

46
00:01:57,759 --> 00:02:00,320
for the testers for the web applications

47
00:02:00,320 --> 00:02:02,000
and they can test their web applications

48
00:02:02,000 --> 00:02:04,719
according to the checklist that is

49
00:02:04,719 --> 00:02:07,040
provided by the wasp

50
00:02:07,040 --> 00:02:12,000
from the 2017 if we carried out 2020 21

51
00:02:12,000 --> 00:02:14,640
uh so we can see there been

52
00:02:14,640 --> 00:02:18,000
major changes in the latest update uh

53
00:02:18,000 --> 00:02:20,640
why because the injections were the

54
00:02:20,640 --> 00:02:24,400
first thing very critical thing in 2017

55
00:02:24,400 --> 00:02:26,560
till now until unless we have a new

56
00:02:26,560 --> 00:02:29,200
baseline and the framework that

57
00:02:29,200 --> 00:02:30,959
we use for the testing

58
00:02:30,959 --> 00:02:32,080
so now

59
00:02:32,080 --> 00:02:34,640
the major changes i'm not gonna

60
00:02:34,640 --> 00:02:37,760
dive into the changes but the main

61
00:02:37,760 --> 00:02:39,519
part which i'll be talking about in this

62
00:02:39,519 --> 00:02:40,720
presentation

63
00:02:40,720 --> 00:02:42,879
will be that the

64
00:02:42,879 --> 00:02:48,160
bug that is moved from a5 to a1

65
00:02:48,160 --> 00:02:51,200
that is a broken access control

66
00:02:51,200 --> 00:02:53,519
that incl includes your session

67
00:02:53,519 --> 00:02:56,400
management that includes your idols that

68
00:02:56,400 --> 00:02:58,480
includes your privileged escalations and

69
00:02:58,480 --> 00:03:00,319
what's on whatnot

70
00:03:00,319 --> 00:03:02,840
major change has been done in

71
00:03:02,840 --> 00:03:06,239
2021 and we have to see why we need a

72
00:03:06,239 --> 00:03:07,360
change

73
00:03:07,360 --> 00:03:08,800
so

74
00:03:08,800 --> 00:03:11,040
why there is a need for a change

75
00:03:11,040 --> 00:03:13,360
maybe uh that's a very normal question

76
00:03:13,360 --> 00:03:16,640
for everyone everyone evolves right the

77
00:03:16,640 --> 00:03:18,640
live the human the

78
00:03:18,640 --> 00:03:21,360
the technology the security everything

79
00:03:21,360 --> 00:03:23,840
needs to be updated nothing is perfectly

80
00:03:23,840 --> 00:03:24,959
defined

81
00:03:24,959 --> 00:03:26,239
uh

82
00:03:26,239 --> 00:03:28,560
to carry out the change so that's why we

83
00:03:28,560 --> 00:03:30,000
need a change

84
00:03:30,000 --> 00:03:33,040
then the most important thing the thing

85
00:03:33,040 --> 00:03:34,720
the topic the

86
00:03:34,720 --> 00:03:37,280
pointer that i'll be discussing further

87
00:03:37,280 --> 00:03:40,480
is something that your static

88
00:03:40,480 --> 00:03:44,159
scanners cannot detect how and why or

89
00:03:44,159 --> 00:03:47,519
we'll discuss that but static and

90
00:03:47,519 --> 00:03:49,840
dynamic scanners i meant to say that you

91
00:03:49,840 --> 00:03:52,319
have heard about the net sparker

92
00:03:52,319 --> 00:03:55,920
acunatix have a scan and there are ton

93
00:03:55,920 --> 00:03:57,519
of other

94
00:03:57,519 --> 00:04:00,319
uh scanners that are used for the web

95
00:04:00,319 --> 00:04:04,159
scanning so the vulnerability the issue

96
00:04:04,159 --> 00:04:06,319
that i'll be discussing today

97
00:04:06,319 --> 00:04:07,280
is

98
00:04:07,280 --> 00:04:09,920
not able uh the scanners cannot able to

99
00:04:09,920 --> 00:04:11,760
detect that why

100
00:04:11,760 --> 00:04:13,120
we'll discuss that

101
00:04:13,120 --> 00:04:16,560
so i'll be taking one example the

102
00:04:16,560 --> 00:04:19,440
injections are protected that includes

103
00:04:19,440 --> 00:04:21,759
your xml entity injections as well your

104
00:04:21,759 --> 00:04:23,440
skill injection your server-side

105
00:04:23,440 --> 00:04:25,360
template injection and some other

106
00:04:25,360 --> 00:04:27,440
injections as well so we will be just

107
00:04:27,440 --> 00:04:30,800
discussing this only sql injection thing

108
00:04:30,800 --> 00:04:33,840
for now for this uh specific slide

109
00:04:33,840 --> 00:04:35,840
uh how they are protected my main

110
00:04:35,840 --> 00:04:37,520
question is that that

111
00:04:37,520 --> 00:04:39,440
there is something that is not protected

112
00:04:39,440 --> 00:04:41,120
but there is a

113
00:04:41,120 --> 00:04:42,400
thing that is

114
00:04:42,400 --> 00:04:45,360
most critical in 2017 till yet uh that

115
00:04:45,360 --> 00:04:48,560
is injection that is protected how uh

116
00:04:48,560 --> 00:04:51,520
because the frameworks the libraries and

117
00:04:51,520 --> 00:04:53,199
the plugins that are created by the

118
00:04:53,199 --> 00:04:56,400
developers for the developers so we have

119
00:04:56,400 --> 00:04:58,960
multiple ton of libraries of dotnet

120
00:04:58,960 --> 00:05:02,240
python java what's on whatnot so we we

121
00:05:02,240 --> 00:05:04,160
can use those libraries for the input

122
00:05:04,160 --> 00:05:06,000
validations as well right if you're a

123
00:05:06,000 --> 00:05:08,080
programmer and you're listening to this

124
00:05:08,080 --> 00:05:09,840
so uh if you're a programmer you can

125
00:05:09,840 --> 00:05:12,320
google and you can use a secure library

126
00:05:12,320 --> 00:05:14,880
for input validations for the.net as

127
00:05:14,880 --> 00:05:17,120
well and for every any any other

128
00:05:17,120 --> 00:05:20,080
language right so these are already

129
00:05:20,080 --> 00:05:22,160
protected by the community for the

130
00:05:22,160 --> 00:05:24,960
community so the main thing is we can

131
00:05:24,960 --> 00:05:27,120
use multiple things multiple approaches

132
00:05:27,120 --> 00:05:30,639
to secure that the frameworks nowadays

133
00:05:30,639 --> 00:05:33,840
uh and the browsers mostly nowadays are

134
00:05:33,840 --> 00:05:36,560
very intelligent that if you try to do

135
00:05:36,560 --> 00:05:39,440
xss cross-site stripping attack so the

136
00:05:39,440 --> 00:05:41,120
browser

137
00:05:41,120 --> 00:05:43,440
will not bypass your query or there are

138
00:05:43,440 --> 00:05:45,120
some certain plugins that will not

139
00:05:45,120 --> 00:05:48,000
bypass your query so you have to

140
00:05:48,000 --> 00:05:49,759
make an input validation from the front

141
00:05:49,759 --> 00:05:52,479
end and the back end as well right so if

142
00:05:52,479 --> 00:05:54,080
you talk about the other vulnerabilities

143
00:05:54,080 --> 00:05:55,759
there are thousands of vulnerabilities

144
00:05:55,759 --> 00:05:57,440
that can be discovered and that can be

145
00:05:57,440 --> 00:06:00,319
talked about uh that how a framework is

146
00:06:00,319 --> 00:06:01,680
protecting that

147
00:06:01,680 --> 00:06:04,639
but what we are talking about right now

148
00:06:04,639 --> 00:06:07,840
is business logic flaws

149
00:06:07,840 --> 00:06:09,759
you heard me right the business logic

150
00:06:09,759 --> 00:06:16,759
laws broken access control is uh uh uh

151
00:06:22,720 --> 00:06:26,560
broken so what is our business logic

152
00:06:26,560 --> 00:06:28,080
flow what are business logic

153
00:06:28,080 --> 00:06:29,680
vulnerabilities

154
00:06:29,680 --> 00:06:32,479
so we will be discussing a very very

155
00:06:32,479 --> 00:06:36,240
small example for the business logic

156
00:06:42,800 --> 00:06:45,919
and a sequence that a business user or

157
00:06:45,919 --> 00:06:49,039
us used to access or deliver certain

158
00:06:49,039 --> 00:06:50,080
things

159
00:06:50,080 --> 00:06:51,360
oh

160
00:06:51,360 --> 00:06:53,840
my internet connection is unstable

161
00:06:53,840 --> 00:06:58,319
it's perfectly fine now i guess yeah

162
00:06:58,319 --> 00:07:00,000
so what a business logic clause uh

163
00:07:00,000 --> 00:07:01,599
following a sequence

164
00:07:01,599 --> 00:07:03,919
for a user or a business we call it a

165
00:07:03,919 --> 00:07:05,440
business logic flaw

166
00:07:05,440 --> 00:07:06,240
uh

167
00:07:06,240 --> 00:07:08,080
for the sake of the example we take the

168
00:07:08,080 --> 00:07:09,599
login example for the facebook or

169
00:07:09,599 --> 00:07:12,240
twitter or instagram anything our first

170
00:07:12,240 --> 00:07:13,759
step

171
00:07:13,759 --> 00:07:16,160
go to the website second step put your

172
00:07:16,160 --> 00:07:17,759
credential that is your username and the

173
00:07:17,759 --> 00:07:20,479
password third step login and you will

174
00:07:20,479 --> 00:07:22,400
be redirected to the dashboard then you

175
00:07:22,400 --> 00:07:24,319
can move to the friend request or

176
00:07:24,319 --> 00:07:26,880
messages or something else like that the

177
00:07:26,880 --> 00:07:29,520
sequence is abc you go to the website

178
00:07:29,520 --> 00:07:31,759
you put the credentials and you enter

179
00:07:31,759 --> 00:07:33,360
into the dashboard

180
00:07:33,360 --> 00:07:36,000
what if i can break the sequence from a

181
00:07:36,000 --> 00:07:39,199
to c skipping the b part which is

182
00:07:39,199 --> 00:07:41,759
providing your credentials

183
00:07:41,759 --> 00:07:44,560
that's right you are thinking in the

184
00:07:44,560 --> 00:07:46,080
right direction because i'm talking

185
00:07:46,080 --> 00:07:48,160
about a cross side scripting a tag in

186
00:07:48,160 --> 00:07:50,319
this situation if we steal the cookies

187
00:07:50,319 --> 00:07:54,599
of the insecure website or we

188
00:07:58,960 --> 00:08:01,199
that's right

189
00:08:01,199 --> 00:08:03,520
business logic as well but that is a

190
00:08:03,520 --> 00:08:05,599
systematic way of bypassing the business

191
00:08:05,599 --> 00:08:09,120
logic but what if the sequence itself

192
00:08:09,120 --> 00:08:10,560
breaks

193
00:08:10,560 --> 00:08:12,720
we'll discuss because i have a lot of

194
00:08:12,720 --> 00:08:14,400
examples for that that i have

195
00:08:14,400 --> 00:08:16,960
encountered in my professional capacity

196
00:08:16,960 --> 00:08:20,240
while doing um and i have the rights to

197
00:08:20,240 --> 00:08:21,840
discuss that

198
00:08:21,840 --> 00:08:24,479
so how how these vulnerabilities the

199
00:08:24,479 --> 00:08:27,199
business logic flaws arises

200
00:08:27,199 --> 00:08:29,360
it's a total negligence of the

201
00:08:29,360 --> 00:08:31,440
developers because

202
00:08:31,440 --> 00:08:34,719
while coding thousands of lines they are

203
00:08:34,719 --> 00:08:37,039
uh confident enough that they are

204
00:08:37,039 --> 00:08:40,000
programming it perfectly but yeah they

205
00:08:40,000 --> 00:08:43,519
are programming it perfectly but

206
00:08:47,440 --> 00:08:49,040
give you example for the dot net

207
00:08:49,040 --> 00:08:50,640
programmers if someone is listening in

208
00:08:50,640 --> 00:08:52,720
the dot net capacity the daughter

209
00:08:52,720 --> 00:08:54,560
programmers we have the controllers

210
00:08:54,560 --> 00:08:56,000
right we have the views we have the

211
00:08:56,000 --> 00:08:59,440
models what if i have checked every

212
00:08:59,440 --> 00:09:01,600
controller every controller of my

213
00:09:01,600 --> 00:09:02,880
website

214
00:09:02,880 --> 00:09:03,680
but

215
00:09:03,680 --> 00:09:05,760
what if i have left one controller

216
00:09:05,760 --> 00:09:08,480
unchecked for the privileged escalation

217
00:09:08,480 --> 00:09:11,200
for the idol in direct object references

218
00:09:11,200 --> 00:09:12,560
or

219
00:09:12,560 --> 00:09:13,920
bindings

220
00:09:13,920 --> 00:09:16,320
the most important and critical thing is

221
00:09:16,320 --> 00:09:18,480
session binding so when we are talking

222
00:09:18,480 --> 00:09:19,839
about it

223
00:09:19,839 --> 00:09:21,920
anyone can access that specific

224
00:09:21,920 --> 00:09:24,240
controller without any session and with

225
00:09:24,240 --> 00:09:26,640
all the data in it for example if i

226
00:09:26,640 --> 00:09:29,279
search for something uh while i'm

227
00:09:29,279 --> 00:09:31,600
logging so i capture the request in the

228
00:09:31,600 --> 00:09:33,760
verb i pass it to the repeater i click

229
00:09:33,760 --> 00:09:36,320
on the repeat button but what if i click

230
00:09:36,320 --> 00:09:38,480
on the logout and then i try to search

231
00:09:38,480 --> 00:09:40,000
it again with the

232
00:09:40,000 --> 00:09:41,440
repeater

233
00:09:41,440 --> 00:09:44,560
in actual in in reality it should not

234
00:09:44,560 --> 00:09:46,560
bring me the results it should say that

235
00:09:46,560 --> 00:09:48,480
you are logged out please login again

236
00:09:48,480 --> 00:09:51,360
but what if the results come up and i

237
00:09:51,360 --> 00:09:54,080
can see all the results in my search

238
00:09:54,080 --> 00:09:56,000
that is my business logic law that

239
00:09:56,000 --> 00:09:58,959
happens why because of the negligence of

240
00:09:58,959 --> 00:10:00,480
the developers

241
00:10:00,480 --> 00:10:01,760
but

242
00:10:01,760 --> 00:10:04,160
uh what is the impact of the business

243
00:10:04,160 --> 00:10:06,000
logic flaws uh

244
00:10:06,000 --> 00:10:08,800
very very very disastrous basically if i

245
00:10:08,800 --> 00:10:11,120
tell something uh go to bug bounty

246
00:10:11,120 --> 00:10:13,120
hunting program any brick burning

247
00:10:13,120 --> 00:10:15,519
hunting program you'll know

248
00:10:15,519 --> 00:10:17,440
observe the most

249
00:10:17,440 --> 00:10:20,480
highly paid books are the business logic

250
00:10:20,480 --> 00:10:23,200
flaws where a user is

251
00:10:23,200 --> 00:10:25,920
where user try to break the sequence and

252
00:10:25,920 --> 00:10:28,480
they bypass the system so they are

253
00:10:28,480 --> 00:10:30,800
highly paid there was a guy i'm not sure

254
00:10:30,800 --> 00:10:32,720
about his name

255
00:10:32,720 --> 00:10:36,640
but he bypassed the otp of instagram

256
00:10:36,640 --> 00:10:40,079
a few months or i'm not sure a year ago

257
00:10:40,079 --> 00:10:41,360
or two year ago

258
00:10:41,360 --> 00:10:42,240
uh

259
00:10:42,240 --> 00:10:43,120
he

260
00:10:43,120 --> 00:10:46,079
chained a proxy chain he changed the ip

261
00:10:46,079 --> 00:10:49,360
addresses simultaneously and

262
00:10:49,360 --> 00:10:52,640
he he applied some tricks so maybe

263
00:10:52,640 --> 00:10:54,560
i'm not sure about the process but he

264
00:10:54,560 --> 00:10:57,040
bypassed the otp of the instagram the

265
00:10:57,040 --> 00:11:01,120
instagram paid him 20 grand 20 000 us

266
00:11:01,120 --> 00:11:04,560
dollars as a bug bounty

267
00:11:04,560 --> 00:11:07,360
and again they fixed that after some

268
00:11:07,360 --> 00:11:11,279
time that person again bypassed the otp

269
00:11:11,279 --> 00:11:14,560
of the instagram once again so best of

270
00:11:14,560 --> 00:11:16,880
luck and good luck with them they paid

271
00:11:16,880 --> 00:11:20,640
him 15 000 more in his bucket

272
00:11:20,640 --> 00:11:24,079
so incred total if you talk about 35 000

273
00:11:24,079 --> 00:11:26,560
us dollars for a single vulnerability

274
00:11:26,560 --> 00:11:28,640
why because the team was unable to patch

275
00:11:28,640 --> 00:11:30,880
it properly again

276
00:11:30,880 --> 00:11:32,640
so this is the power of the business

277
00:11:32,640 --> 00:11:35,120
logic flaw if you are able to capture

278
00:11:35,120 --> 00:11:37,519
all the data that reside in your website

279
00:11:37,519 --> 00:11:40,399
somehow and it bypass the sequence so

280
00:11:40,399 --> 00:11:44,160
you have the critical data in your hands

281
00:11:44,160 --> 00:11:46,079
now if you talk about the common

282
00:11:46,079 --> 00:11:47,760
vulnerabilities in the business logic

283
00:11:47,760 --> 00:11:50,160
flaws i'm using the short form for the

284
00:11:50,160 --> 00:11:53,519
business logic laws blf so what are the

285
00:11:53,519 --> 00:11:55,440
few vulnerabilities and the

286
00:11:55,440 --> 00:11:56,560
misconceptions

287
00:11:56,560 --> 00:11:58,880
the misconception number one i'll be

288
00:11:58,880 --> 00:12:01,440
talking about uh unevenly over here

289
00:12:01,440 --> 00:12:04,079
trusted user won't always remain

290
00:12:04,079 --> 00:12:06,880
trustworthy and the second thing users

291
00:12:06,880 --> 00:12:10,320
won't always supply mandatory input the

292
00:12:10,320 --> 00:12:12,959
the main example for this someone asked

293
00:12:12,959 --> 00:12:17,120
me about my uh name and i insert the

294
00:12:17,120 --> 00:12:19,279
uh digits and that or a special

295
00:12:19,279 --> 00:12:21,760
connector in that in actual it should

296
00:12:21,760 --> 00:12:24,000
block my request from the front end to

297
00:12:24,000 --> 00:12:26,800
the back end but the problem is if there

298
00:12:26,800 --> 00:12:29,360
is bypass from the front end that's

299
00:12:29,360 --> 00:12:31,839
perfectly fine you can uh capture the

300
00:12:31,839 --> 00:12:34,720
request in the verb and you can alter it

301
00:12:34,720 --> 00:12:36,639
and you can supply whatever you want to

302
00:12:36,639 --> 00:12:38,720
do that's perfectly fine from the front

303
00:12:38,720 --> 00:12:40,720
end but if you talk about the back end

304
00:12:40,720 --> 00:12:42,480
of the server so the background of the

305
00:12:42,480 --> 00:12:44,720
server should be processing and should

306
00:12:44,720 --> 00:12:47,200
be checking your data voices coming from

307
00:12:47,200 --> 00:12:48,880
the front end so

308
00:12:48,880 --> 00:12:50,399
now the user

309
00:12:50,399 --> 00:12:53,600
won't always supply mandatory input

310
00:12:53,600 --> 00:12:56,240
i record you uh if someone is asking me

311
00:12:56,240 --> 00:12:59,200
my name if i uh

312
00:12:59,200 --> 00:13:01,200
curly brackets or the square brackets

313
00:13:01,200 --> 00:13:03,360
and i put the two multiply by two

314
00:13:03,360 --> 00:13:05,279
actually emptying the server side

315
00:13:05,279 --> 00:13:07,440
template injection so it should not

316
00:13:07,440 --> 00:13:10,320
bypass it or it should not

317
00:13:10,320 --> 00:13:13,120
it should directly say please do not use

318
00:13:13,120 --> 00:13:16,000
spatial characters or the digits in this

319
00:13:16,000 --> 00:13:19,920
field but uh we think that user will

320
00:13:19,920 --> 00:13:23,600
always do whatever we ask them

321
00:13:23,600 --> 00:13:26,560
number f uh the user won't always follow

322
00:13:26,560 --> 00:13:29,120
the intended sequence that i always say

323
00:13:29,120 --> 00:13:30,240
that if you

324
00:13:30,240 --> 00:13:32,639
follow the sequence and you try to break

325
00:13:32,639 --> 00:13:34,560
the sequence that is the main part of

326
00:13:34,560 --> 00:13:36,560
the business logic clause

327
00:13:36,560 --> 00:13:39,760
forward uh the main thing that i want to

328
00:13:39,760 --> 00:13:42,399
discuss over here is that i have

329
00:13:42,399 --> 00:13:44,959
identified a very critical vulnerability

330
00:13:44,959 --> 00:13:46,639
and a financial

331
00:13:46,639 --> 00:13:49,360
fraud management system that is used

332
00:13:49,360 --> 00:13:52,560
overall in the globe with the uh in the

333
00:13:52,560 --> 00:13:53,920
banking industry i must say the

334
00:13:53,920 --> 00:13:55,440
financial industry because they have to

335
00:13:55,440 --> 00:13:57,440
check the fraud uh management or all the

336
00:13:57,440 --> 00:14:00,079
other things so come to the coming to

337
00:14:00,079 --> 00:14:03,199
the point uh what happens over here

338
00:14:03,199 --> 00:14:05,120
uh i have published uh

339
00:14:05,120 --> 00:14:07,600
that report see to the oracle and they

340
00:14:07,600 --> 00:14:09,360
publish the cd for that that's the

341
00:14:09,360 --> 00:14:10,800
number if you want to check it out you

342
00:14:10,800 --> 00:14:14,000
can go to this specific number okay

343
00:14:14,000 --> 00:14:16,079
uh the main thing is uh if you notice on

344
00:14:16,079 --> 00:14:18,079
the left hand side left hand side is

345
00:14:18,079 --> 00:14:20,079
screen if you can see my screen there is

346
00:14:20,079 --> 00:14:22,959
a user analyst ep

347
00:14:22,959 --> 00:14:26,399
right that is uh my analyst ep and there

348
00:14:26,399 --> 00:14:29,600
is analyst m y there are two analysts

349
00:14:29,600 --> 00:14:32,480
one is highly privileged and second one

350
00:14:32,480 --> 00:14:34,959
is low privileged user that can only see

351
00:14:34,959 --> 00:14:37,760
the reports but the high privilege user

352
00:14:37,760 --> 00:14:41,120
can also see all the data all the logs

353
00:14:41,120 --> 00:14:43,760
all the transaction in the system so

354
00:14:43,760 --> 00:14:46,320
what i did i just captured the data from

355
00:14:46,320 --> 00:14:48,800
the front end uh that is going to the

356
00:14:48,800 --> 00:14:51,040
back and on the from the burp and i

357
00:14:51,040 --> 00:14:53,360
intercept the server response as well i

358
00:14:53,360 --> 00:14:55,680
copy all the requests if you want to do

359
00:14:55,680 --> 00:14:57,760
a bug boundary or if you want to check a

360
00:14:57,760 --> 00:14:59,279
business logic flaw

361
00:14:59,279 --> 00:15:00,079
just

362
00:15:00,079 --> 00:15:02,959
follow my one

363
00:15:02,959 --> 00:15:04,959
what you can say instruction

364
00:15:04,959 --> 00:15:07,760
or a guideline that

365
00:15:07,760 --> 00:15:10,160
capture each and every request that

366
00:15:10,160 --> 00:15:12,880
server and system generates and put them

367
00:15:12,880 --> 00:15:14,959
in a notepad file one two three no

368
00:15:14,959 --> 00:15:17,360
matter how many files you generate just

369
00:15:17,360 --> 00:15:19,279
copy and paste all the responses and all

370
00:15:19,279 --> 00:15:21,199
the requested because you don't know

371
00:15:21,199 --> 00:15:24,320
which one will be bypassed so what i did

372
00:15:24,320 --> 00:15:26,320
actually i just captured the request

373
00:15:26,320 --> 00:15:29,279
from a high privileged user

374
00:15:29,279 --> 00:15:31,759
that back into a burp suit that's the

375
00:15:31,759 --> 00:15:34,240
second screen i put

376
00:15:34,240 --> 00:15:36,720
in a burp suit on the left hand side if

377
00:15:36,720 --> 00:15:38,880
you can see that the server is

378
00:15:38,880 --> 00:15:42,240
responding me with all the critical logs

379
00:15:42,240 --> 00:15:44,720
all the critical data

380
00:15:44,720 --> 00:15:49,360
and to search my new alerts my date

381
00:15:49,360 --> 00:15:50,959
on which date i have

382
00:15:50,959 --> 00:15:52,240
done that

383
00:15:52,240 --> 00:15:54,720
and you can request anything so that was

384
00:15:54,720 --> 00:15:56,160
a critical vulnerability in an

385
00:15:56,160 --> 00:15:58,880
application just because of tempering

386
00:15:58,880 --> 00:16:01,839
the parameters just by passing the

387
00:16:01,839 --> 00:16:05,040
session and the session handling and the

388
00:16:05,040 --> 00:16:07,440
session binding issues we can

389
00:16:07,440 --> 00:16:10,880
uh see all the data that a hype

390
00:16:10,880 --> 00:16:12,720
can

391
00:16:12,720 --> 00:16:15,759
keep after this

392
00:16:16,639 --> 00:16:18,160
said that i'm

393
00:16:18,160 --> 00:16:19,920
involved in the financial industry and

394
00:16:19,920 --> 00:16:23,839
the banking industry overall so

395
00:16:23,839 --> 00:16:26,720
uh the second in vulnerability that i

396
00:16:26,720 --> 00:16:29,199
want to discuss over here is that

397
00:16:29,199 --> 00:16:31,920
there was a financial institution

398
00:16:31,920 --> 00:16:34,160
uh and there's a mobile application for

399
00:16:34,160 --> 00:16:35,040
that

400
00:16:35,040 --> 00:16:38,320
uh in the uh from the left we start

401
00:16:38,320 --> 00:16:40,240
first of all the screen mobile stream

402
00:16:40,240 --> 00:16:42,480
you know uh username and password i put

403
00:16:42,480 --> 00:16:45,040
the username and password second string

404
00:16:45,040 --> 00:16:49,040
they send a otp uh on my mobile phone i

405
00:16:49,040 --> 00:16:51,680
received an otp what i did

406
00:16:51,680 --> 00:16:52,800
i

407
00:16:52,800 --> 00:16:54,639
just put an

408
00:16:54,639 --> 00:16:55,839
in

409
00:16:55,839 --> 00:16:59,360
valid otp the result is invalid right

410
00:16:59,360 --> 00:17:01,360
but what actually happens

411
00:17:01,360 --> 00:17:03,199
the first thing i did

412
00:17:03,199 --> 00:17:05,280
i login into my application and capture

413
00:17:05,280 --> 00:17:07,679
all the requests then i moved that

414
00:17:07,679 --> 00:17:11,039
request as a privileged user how how how

415
00:17:11,039 --> 00:17:14,240
did i that so i capture all the positive

416
00:17:14,240 --> 00:17:16,400
responses from the server 200 and all

417
00:17:16,400 --> 00:17:19,439
the positive responses that comes when i

418
00:17:19,439 --> 00:17:23,199
put or insert or put into the

419
00:17:23,199 --> 00:17:25,280
correct odp

420
00:17:25,280 --> 00:17:27,760
i captured the request that server is

421
00:17:27,760 --> 00:17:32,600
sending then what i did i

422
00:17:34,000 --> 00:17:36,000
that is the second vulnerability in the

423
00:17:36,000 --> 00:17:38,880
same application

424
00:17:44,640 --> 00:17:46,000
if you put the username and password and

425
00:17:46,000 --> 00:17:47,679
you put the passcode invalid let's say

426
00:17:47,679 --> 00:17:49,679
one two three it says invalid passcode

427
00:17:49,679 --> 00:17:53,520
then it redirects you to the law

428
00:17:56,720 --> 00:17:58,559
password and the login button it

429
00:17:58,559 --> 00:17:59,919
automatically log into you in the

430
00:17:59,919 --> 00:18:02,080
account on the right hand side screen if

431
00:18:02,080 --> 00:18:04,799
you can see that's my account uh on the

432
00:18:04,799 --> 00:18:06,720
invalid password what happened in the

433
00:18:06,720 --> 00:18:08,320
application the application was checking

434
00:18:08,320 --> 00:18:11,200
just one failure of the otp on the next

435
00:18:11,200 --> 00:18:13,600
thing it bypassed the system so that's

436
00:18:13,600 --> 00:18:15,760
the second thing i did in my practical

437
00:18:15,760 --> 00:18:18,240
experience number third this is also

438
00:18:18,240 --> 00:18:21,200
banking this is an internet banking at

439
00:18:21,200 --> 00:18:23,600
the same otp bypass i love to bypass

440
00:18:23,600 --> 00:18:26,480
otps by the way uh on the left hand side

441
00:18:26,480 --> 00:18:28,720
if you can see that is i put the

442
00:18:28,720 --> 00:18:31,360
username and pas

443
00:18:32,720 --> 00:18:34,960
the otp as well on the right hand side

444
00:18:34,960 --> 00:18:37,679
the upper image uh the highlighted you

445
00:18:37,679 --> 00:18:40,400
can see otp underscore text

446
00:18:40,400 --> 00:18:43,919
and there uh digits that's a lit

447
00:18:43,919 --> 00:18:45,679
tp that i put

448
00:18:45,679 --> 00:18:48,320
on the below you can see our response in

449
00:18:48,320 --> 00:18:52,000
the request i received i captured this

450
00:18:52,000 --> 00:18:55,360
because that is my legit and the perfect

451
00:18:55,360 --> 00:18:57,600
response that i want from the server now

452
00:18:57,600 --> 00:18:59,919
i am saving that on a not notepad file

453
00:18:59,919 --> 00:19:01,600
because

454
00:19:01,600 --> 00:19:03,840
when i put the correct otp the server

455
00:19:03,840 --> 00:19:06,480
will respond like this but

456
00:19:06,480 --> 00:19:08,320
well it responds when i put the wrong

457
00:19:08,320 --> 00:19:10,799
username and password and replace this

458
00:19:10,799 --> 00:19:12,000
exact

459
00:19:12,000 --> 00:19:15,120
uh field and the exact data with my verb

460
00:19:15,120 --> 00:19:17,120
suit now if you can see on the left hand

461
00:19:17,120 --> 00:19:19,039
side i put the

462
00:19:19,039 --> 00:19:20,960
username and password correct

463
00:19:20,960 --> 00:19:25,440
my otp is wrong uh on the center image

464
00:19:25,440 --> 00:19:29,679
you can see provided otp is incorrect

465
00:19:29,679 --> 00:19:31,760
so the server is saying that your otp is

466
00:19:31,760 --> 00:19:35,200
current but i have a request that will

467
00:19:35,200 --> 00:19:38,880
ready by pass the system and that is

468
00:19:38,880 --> 00:19:41,760
already a legit request

469
00:19:41,760 --> 00:19:44,160
from a server from a user to the server

470
00:19:44,160 --> 00:19:46,160
and server responsing in a positive way

471
00:19:46,160 --> 00:19:48,640
so what i did i just copy that and paste

472
00:19:48,640 --> 00:19:50,559
it when the server is saying the otp is

473
00:19:50,559 --> 00:19:53,120
invalid i just remove that paste my post

474
00:19:53,120 --> 00:19:55,039
request or the get request and bypass

475
00:19:55,039 --> 00:19:57,280
this on the right hand side you can see

476
00:19:57,280 --> 00:20:00,720
that the account is logged in

477
00:20:00,720 --> 00:20:02,240
so that's how

478
00:20:02,240 --> 00:20:03,039
i

479
00:20:03,039 --> 00:20:04,799
bypass three more

480
00:20:04,799 --> 00:20:07,200
different financial applications and

481
00:20:07,200 --> 00:20:10,720
different aspects of it so

482
00:20:10,720 --> 00:20:13,440
the problem is we are reaching towards

483
00:20:13,440 --> 00:20:15,919
our end but we have to just

484
00:20:15,919 --> 00:20:18,720
security design flaws this image has

485
00:20:18,720 --> 00:20:20,960
been taken from the port serger the burp

486
00:20:20,960 --> 00:20:24,559
suit developers so it explains this very

487
00:20:24,559 --> 00:20:28,000
very quickly an example is very easy

488
00:20:28,000 --> 00:20:30,159
that i bypass in the previous example in

489
00:20:30,159 --> 00:20:32,000
the mobile execution whenever i put the

490
00:20:32,000 --> 00:20:34,000
username and password wrong it bypass

491
00:20:34,000 --> 00:20:36,559
the otp so here we go

492
00:20:36,559 --> 00:20:37,919
the first attempt for the username and

493
00:20:37,919 --> 00:20:39,760
password first attempt using password

494
00:20:39,760 --> 00:20:42,400
incorrect the second attempt the same

495
00:20:42,400 --> 00:20:45,679
the third attempt it bypass the system

496
00:20:45,679 --> 00:20:48,799
it bypass the system so what we can do

497
00:20:48,799 --> 00:20:51,039
to secure that we have to bind the

498
00:20:51,039 --> 00:20:54,400
session and we have to bind the

499
00:20:54,400 --> 00:20:56,320
all the security keys and all the

500
00:20:56,320 --> 00:20:58,799
controllers to a specific session so

501
00:20:58,799 --> 00:21:01,280
whenever my web application tries to get

502
00:21:01,280 --> 00:21:03,440
a data from the database or the

503
00:21:03,440 --> 00:21:07,120
controller so it will check my session

504
00:21:07,120 --> 00:21:10,080
binding so i bypass and mobile

505
00:21:10,080 --> 00:21:11,520
application

506
00:21:11,520 --> 00:21:12,400
uh

507
00:21:12,400 --> 00:21:15,039
application otp with the help of this

508
00:21:15,039 --> 00:21:16,640
example by the way

509
00:21:16,640 --> 00:21:17,679
okay

510
00:21:17,679 --> 00:21:20,159
in the first example in the first step

511
00:21:20,159 --> 00:21:22,640
and the first slide i said no dynamic

512
00:21:22,640 --> 00:21:24,720
and static analysis tool can detect the

513
00:21:24,720 --> 00:21:26,480
person business logic

514
00:21:26,480 --> 00:21:28,880
so where we have to go what we can do to

515
00:21:28,880 --> 00:21:32,000
the automation part so there is a plugin

516
00:21:32,000 --> 00:21:34,960
in the burp suit auth metrics the that's

517
00:21:34,960 --> 00:21:37,919
very easily available you can repeat the

518
00:21:37,919 --> 00:21:40,400
workflows with different users different

519
00:21:40,400 --> 00:21:43,440
work groups and you can break the

520
00:21:43,440 --> 00:21:45,760
sequence as well of the web application

521
00:21:45,760 --> 00:21:48,320
you are using so do check it out the

522
00:21:48,320 --> 00:21:50,799
auth metrics there are a ton of videos

523
00:21:50,799 --> 00:21:53,200
available how to tune how to configure

524
00:21:53,200 --> 00:21:55,280
your auth metrics but this is something

525
00:21:55,280 --> 00:21:58,000
you need to use immediately for the

526
00:21:58,000 --> 00:21:59,919
business logic because you will give you

527
00:21:59,919 --> 00:22:03,039
two username and two passwords

528
00:22:03,039 --> 00:22:05,840
privilege one is high privilege the high

529
00:22:05,840 --> 00:22:07,919
privilege data will be saved and it will

530
00:22:07,919 --> 00:22:12,640
be attacked by the low privilege that if

531
00:22:12,640 --> 00:22:13,919
you have a

532
00:22:13,919 --> 00:22:15,360
vulnerability

533
00:22:15,360 --> 00:22:17,360
so if you are a developer and you are

534
00:22:17,360 --> 00:22:19,760
still listening to me uh for a source

535
00:22:19,760 --> 00:22:23,200
code you have to mitigate it why how you

536
00:22:23,200 --> 00:22:25,280
have to identify

537
00:22:25,280 --> 00:22:27,760
where the controls are carried out where

538
00:22:27,760 --> 00:22:29,919
they are not if they are carried out

539
00:22:29,919 --> 00:22:31,600
somewhere you have to bind the session

540
00:22:31,600 --> 00:22:34,320
but there are no goals don't not

541
00:22:34,320 --> 00:22:35,919
bind the session or something else the

542
00:22:35,919 --> 00:22:37,840
control you want to do

543
00:22:37,840 --> 00:22:40,799
dividing and modeling the first of all

544
00:22:40,799 --> 00:22:42,000
understand

545
00:22:42,000 --> 00:22:44,240
understand the application understand

546
00:22:44,240 --> 00:22:46,640
the workflow the connections the data

547
00:22:46,640 --> 00:22:50,559
inputs outputs in short prepare a threat

548
00:22:50,559 --> 00:22:51,520
model

549
00:22:51,520 --> 00:22:52,720
and if you don't know about threat

550
00:22:52,720 --> 00:22:54,559
modeling just google and there are a ton

551
00:22:54,559 --> 00:22:55,280
of

552
00:22:55,280 --> 00:22:57,840
that will do a threat model for you

553
00:22:57,840 --> 00:22:58,880
so

554
00:22:58,880 --> 00:23:00,159
analysis

555
00:23:00,159 --> 00:23:02,559
of the controls you have to analyse that

556
00:23:02,559 --> 00:23:05,360
do the analysis of the parameters

557
00:23:05,360 --> 00:23:07,679
coming from the server or going to the

558
00:23:07,679 --> 00:23:10,000
server so these are the few things do

559
00:23:10,000 --> 00:23:12,559
you have to look into the source code to

560
00:23:12,559 --> 00:23:15,840
mitigate the attack so the last thing

561
00:23:15,840 --> 00:23:17,120
what is that

562
00:23:17,120 --> 00:23:19,360
what you have to ask

563
00:23:19,360 --> 00:23:21,039
these are the few things that you have

564
00:23:21,039 --> 00:23:23,440
to ask when you are working on a

565
00:23:23,440 --> 00:23:26,400
critical applications uh like when how

566
00:23:26,400 --> 00:23:28,799
often for how long this question remind

567
00:23:28,799 --> 00:23:31,039
me for a bug that is a concurrent

568
00:23:31,039 --> 00:23:33,600
session as well the

569
00:23:33,600 --> 00:23:34,880
people in the community knows the

570
00:23:34,880 --> 00:23:37,039
concurrent session bug what is that to

571
00:23:37,039 --> 00:23:39,280
user can login simultaneously in the

572
00:23:39,280 --> 00:23:42,080
same account that's not a good

573
00:23:42,080 --> 00:23:43,039
practice

574
00:23:43,039 --> 00:23:46,080
second thing uh when how often or for

575
00:23:46,080 --> 00:23:47,279
how long

576
00:23:47,279 --> 00:23:50,240
you just close your browser for how long

577
00:23:50,240 --> 00:23:52,400
your session will be established for

578
00:23:52,400 --> 00:23:54,159
example if you talk about the financial

579
00:23:54,159 --> 00:23:56,240
application your business data your

580
00:23:56,240 --> 00:23:57,600
banking data

581
00:23:57,600 --> 00:23:59,760
your application should log out itself

582
00:23:59,760 --> 00:24:01,679
after two or three minutes idle time

583
00:24:01,679 --> 00:24:03,520
right so these are the few questions you

584
00:24:03,520 --> 00:24:05,039
have to ask for

585
00:24:05,039 --> 00:24:07,520
uh before implementation before

586
00:24:07,520 --> 00:24:10,080
developing and you have to carry out

587
00:24:10,080 --> 00:24:13,279
these things one final tip from my side

588
00:24:13,279 --> 00:24:15,679
you are talking about the business logic

589
00:24:15,679 --> 00:24:18,240
clause and you want to test it

590
00:24:18,240 --> 00:24:20,960
go to the

591
00:24:20,960 --> 00:24:23,520
account manager or the business owner

592
00:24:23,520 --> 00:24:26,159
ask them for the two accounts one is

593
00:24:26,159 --> 00:24:28,640
high privilege and one for the low

594
00:24:28,640 --> 00:24:31,440
privilege account try to manipulate the

595
00:24:31,440 --> 00:24:33,840
request and see the response and if the

596
00:24:33,840 --> 00:24:36,000
responses are changed and the responses

597
00:24:36,000 --> 00:24:38,960
are divided into multiple parameters try

598
00:24:38,960 --> 00:24:42,640
to change a perimeter one by one so

599
00:24:42,640 --> 00:24:46,080
that's it from my side uh salt lake city

600
00:24:46,080 --> 00:24:49,440
i hope you enjoyed and you learned the

601
00:24:49,440 --> 00:24:52,000
new and the business logic flaws and if

602
00:24:52,000 --> 00:24:54,320
you're a bug bounty hunter do check out

603
00:24:54,320 --> 00:24:55,279
new

604
00:24:55,279 --> 00:24:57,840
buzz the system sequence that's a pro

605
00:24:57,840 --> 00:25:00,960
tip for tonight or today so thank you

606
00:25:00,960 --> 00:25:02,960
very much everyone i hope you have a

607
00:25:02,960 --> 00:25:05,120
good time i'll see you soon thank you

608
00:25:05,120 --> 00:25:07,840
very much everyone

