1
00:00:08,240 --> 00:00:10,440
okay I was told I can go ahead and start

2
00:00:10,440 --> 00:00:13,500
so go ahead and start hey I'm Dwayne

3
00:00:13,500 --> 00:00:15,120
thanks for coming to my talk stop

4
00:00:15,120 --> 00:00:16,500
committing your secrets get hooks to the

5
00:00:16,500 --> 00:00:18,300
rescue

6
00:00:18,300 --> 00:00:20,520
quick curiosity before we start who here

7
00:00:20,520 --> 00:00:22,199
actually uses git hooks on the regular

8
00:00:22,199 --> 00:00:24,060
already

9
00:00:24,060 --> 00:00:25,920
one I see one hand

10
00:00:25,920 --> 00:00:28,680
good you can leave everybody else this

11
00:00:28,680 --> 00:00:30,660
is talks for you I'm Dwayne I came down

12
00:00:30,660 --> 00:00:32,759
here from Chicago I've been a developer

13
00:00:32,759 --> 00:00:34,860
Advocate since 2016.

14
00:00:34,860 --> 00:00:36,719
find me out there on Twitter at mcdwayne

15
00:00:36,719 --> 00:00:37,980
it's down the bottom of the screen if

16
00:00:37,980 --> 00:00:39,960
you forget

17
00:00:39,960 --> 00:00:41,100
um happy to talk to you about anything

18
00:00:41,100 --> 00:00:42,780
Tech related

19
00:00:42,780 --> 00:00:44,879
or rock and roll or a lot of other

20
00:00:44,879 --> 00:00:46,379
things

21
00:00:46,379 --> 00:00:47,960
I work for a company called get guardian

22
00:00:47,960 --> 00:00:52,020
we are a platform focused on secret

23
00:00:52,020 --> 00:00:55,140
leakage detection and Remediation

24
00:00:55,140 --> 00:00:56,340
happy to tell you more about that

25
00:00:56,340 --> 00:00:58,260
actually be mentioning them later in the

26
00:00:58,260 --> 00:01:01,680
talk missing one of our products so

27
00:01:01,680 --> 00:01:04,080
enough of that for right now

28
00:01:04,080 --> 00:01:06,180
we live in this constant game of cat and

29
00:01:06,180 --> 00:01:09,780
mouse that's the world of security we're

30
00:01:09,780 --> 00:01:11,220
constantly trying to outdo them and

31
00:01:11,220 --> 00:01:13,200
they're trying to outdo us

32
00:01:13,200 --> 00:01:15,479
and I wouldn't say they're bad people in

33
00:01:15,479 --> 00:01:17,100
general I think they're just there for

34
00:01:17,100 --> 00:01:18,780
the money and the resources

35
00:01:18,780 --> 00:01:20,520
the more I learn about security the more

36
00:01:20,520 --> 00:01:22,200
I think that's true

37
00:01:22,200 --> 00:01:24,060
but they are after our resources and our

38
00:01:24,060 --> 00:01:27,080
data constantly

39
00:01:27,180 --> 00:01:28,680
what this looks like in the wild if you

40
00:01:28,680 --> 00:01:31,560
were at the talk earlier today much more

41
00:01:31,560 --> 00:01:32,580
in depth and I'm going to talk about it

42
00:01:32,580 --> 00:01:36,240
but Uber uh was hacked by lapses going

43
00:01:36,240 --> 00:01:39,840
in through a fishing attempt successful

44
00:01:39,840 --> 00:01:41,520
finishing attempt and then through

45
00:01:41,520 --> 00:01:43,619
Powershell scripts found a bunch of

46
00:01:43,619 --> 00:01:45,420
hard-coded Secrets

47
00:01:45,420 --> 00:01:48,299
that were then used to pull an Uber

48
00:01:48,299 --> 00:01:50,280
Toyota is one of my favorite breaches

49
00:01:50,280 --> 00:01:51,840
this is how I got on the front of Hacker

50
00:01:51,840 --> 00:01:53,939
News for about eight hours by writing

51
00:01:53,939 --> 00:01:55,320
about this

52
00:01:55,320 --> 00:01:58,500
um Toyota had hired a subcontractor that

53
00:01:58,500 --> 00:02:00,600
maintained their t-connect repo

54
00:02:00,600 --> 00:02:02,700
accidentally pushed part of it public

55
00:02:02,700 --> 00:02:04,920
maybe accidentally we don't know

56
00:02:04,920 --> 00:02:06,600
the point is it had a key to a data

57
00:02:06,600 --> 00:02:09,479
server sat there for five years before

58
00:02:09,479 --> 00:02:12,120
anybody noticed

59
00:02:12,120 --> 00:02:16,640
Samsung who here has a Samsung Galaxy

60
00:02:16,860 --> 00:02:18,599
nobody's hand went up

61
00:02:18,599 --> 00:02:20,160
um everybody knows the source code for

62
00:02:20,160 --> 00:02:21,720
Samsung Galaxies now thanks again to

63
00:02:21,720 --> 00:02:22,860
lapses

64
00:02:22,860 --> 00:02:25,440
inside of the code base we found over 6

65
00:02:25,440 --> 00:02:27,720
000 Secrets laying in there

66
00:02:27,720 --> 00:02:29,400
and back in August another breach

67
00:02:29,400 --> 00:02:31,260
happened and we think it's related but

68
00:02:31,260 --> 00:02:33,300
there's no direct evidence that that's

69
00:02:33,300 --> 00:02:34,319
true

70
00:02:34,319 --> 00:02:36,360
all we know is that Secrets got

71
00:02:36,360 --> 00:02:38,280
hard-coded and released

72
00:02:38,280 --> 00:02:40,020
this is one of my favorites AstraZeneca

73
00:02:40,020 --> 00:02:42,860
this happened last month

74
00:02:43,800 --> 00:02:46,860
developer hard coded a credential for a

75
00:02:46,860 --> 00:02:48,599
testing environment which should be all

76
00:02:48,599 --> 00:02:50,220
good because it's test environment right

77
00:02:50,220 --> 00:02:52,620
except somebody else pushed real data

78
00:02:52,620 --> 00:02:54,980
into it

79
00:02:55,019 --> 00:02:58,860
which isn't great so credentials for an

80
00:02:58,860 --> 00:03:01,019
undisclosed amount of patients was

81
00:03:01,019 --> 00:03:03,360
released or leaked we still don't know

82
00:03:03,360 --> 00:03:04,800
the full impact they're really

83
00:03:04,800 --> 00:03:07,700
tight-lipped about this one

84
00:03:08,220 --> 00:03:09,599
and all these stories these are

85
00:03:09,599 --> 00:03:11,040
companies that take security very

86
00:03:11,040 --> 00:03:13,140
seriously

87
00:03:13,140 --> 00:03:15,420
but someone left the key out front you

88
00:03:15,420 --> 00:03:17,580
can have the greatest defense in the

89
00:03:17,580 --> 00:03:19,440
entire universe but if someone just

90
00:03:19,440 --> 00:03:21,659
literally hands out the keys they're

91
00:03:21,659 --> 00:03:23,340
going to get in

92
00:03:23,340 --> 00:03:25,319
and here's one of my favorite examples

93
00:03:25,319 --> 00:03:26,580
of

94
00:03:26,580 --> 00:03:29,280
good Security in action because they

95
00:03:29,280 --> 00:03:31,140
bought a really secure lock

96
00:03:31,140 --> 00:03:32,519
and I don't know what's on the other

97
00:03:32,519 --> 00:03:34,440
side of this door but I'm guessing it

98
00:03:34,440 --> 00:03:37,680
depends or staplers or something that's

99
00:03:37,680 --> 00:03:39,480
yeah we shouldn't we should put it

100
00:03:39,480 --> 00:03:40,680
behind a lock but at the same time

101
00:03:40,680 --> 00:03:42,720
people just got to get their jobs done

102
00:03:42,720 --> 00:03:44,340
let's slap this number up there because

103
00:03:44,340 --> 00:03:47,519
that's a complicated lock for for pens

104
00:03:47,519 --> 00:03:48,900
and of course that's silly we would

105
00:03:48,900 --> 00:03:50,459
never do this in computer science we

106
00:03:50,459 --> 00:03:52,500
would never do this as developers except

107
00:03:52,500 --> 00:03:55,379
we do every single day

108
00:03:55,379 --> 00:03:57,840
I know I've done this I just got to make

109
00:03:57,840 --> 00:03:59,340
sure that database works I just got to

110
00:03:59,340 --> 00:04:01,500
make sure that API endpoint is up and

111
00:04:01,500 --> 00:04:03,599
how's the easiest way to do that

112
00:04:03,599 --> 00:04:04,980
well I'll just hard code it real quick

113
00:04:04,980 --> 00:04:06,299
but I'll take it right back out I

114
00:04:06,299 --> 00:04:09,540
promise except now I have a fire over

115
00:04:09,540 --> 00:04:12,120
here to fight and in slack I'm hitting

116
00:04:12,120 --> 00:04:14,040
three different places where I need to

117
00:04:14,040 --> 00:04:16,079
check out another Branch so oh I'm not

118
00:04:16,079 --> 00:04:18,660
online nine anymore I'm way down in the

119
00:04:18,660 --> 00:04:20,880
code like line 400 working on something

120
00:04:20,880 --> 00:04:21,779
else

121
00:04:21,779 --> 00:04:23,759
I just got to commit push and move on to

122
00:04:23,759 --> 00:04:26,160
the next thing

123
00:04:26,160 --> 00:04:28,139
this is a serious problem so get

124
00:04:28,139 --> 00:04:29,940
guardian we make a state of secret

125
00:04:29,940 --> 00:04:31,919
sprawl report every year that's the URL

126
00:04:31,919 --> 00:04:33,180
at the bottom

127
00:04:33,180 --> 00:04:34,560
if you want to go read it yourself from

128
00:04:34,560 --> 00:04:36,479
last year we found over 6 million

129
00:04:36,479 --> 00:04:39,180
Secrets just hanging out in GitHub repos

130
00:04:39,180 --> 00:04:40,620
publicly

131
00:04:40,620 --> 00:04:42,780
we know it's way more than that

132
00:04:42,780 --> 00:04:45,780
across all the other hosts out there

133
00:04:45,780 --> 00:04:47,580
the number that I was

134
00:04:47,580 --> 00:04:49,259
talk about is the three out of every

135
00:04:49,259 --> 00:04:52,800
thousand commits that we see

136
00:04:52,800 --> 00:04:55,020
has some kind of credential in it and

137
00:04:55,020 --> 00:04:57,419
this is constantly increasing I can tell

138
00:04:57,419 --> 00:04:59,400
you next year that number is going to be

139
00:04:59,400 --> 00:05:02,699
higher and it's not a good thing

140
00:05:02,699 --> 00:05:06,240
so who's ultimately responsible for this

141
00:05:06,240 --> 00:05:08,160
unfortunately it's everybody's job which

142
00:05:08,160 --> 00:05:10,020
means it's no one's job

143
00:05:10,020 --> 00:05:12,960
because everybody's in devops you

144
00:05:12,960 --> 00:05:14,160
sitting in this room you were part of

145
00:05:14,160 --> 00:05:16,919
the devops cycle somehow some way I

146
00:05:16,919 --> 00:05:19,340
promise you

147
00:05:19,560 --> 00:05:21,840
and the best of organizations the

148
00:05:21,840 --> 00:05:23,400
security team is outnumbered a hundred

149
00:05:23,400 --> 00:05:25,919
to one by developers this is a quote

150
00:05:25,919 --> 00:05:28,080
from Alex rice from hacker one at

151
00:05:28,080 --> 00:05:31,139
security at 2022 earlier this year

152
00:05:31,139 --> 00:05:32,580
and that number really stuck with me

153
00:05:32,580 --> 00:05:33,600
because this is the best of

154
00:05:33,600 --> 00:05:35,840
organizations if we do the math

155
00:05:35,840 --> 00:05:38,180
exploration for

156
00:05:38,180 --> 00:05:41,780
a team of about 400 Developers

157
00:05:41,780 --> 00:05:44,520
that's from what we've seen working with

158
00:05:44,520 --> 00:05:48,240
customers on average per

159
00:05:48,240 --> 00:05:51,360
uh security expert there's about three

160
00:05:51,360 --> 00:05:53,699
and a half thousand hard-coded Secrets

161
00:05:53,699 --> 00:05:55,800
inside the orc

162
00:05:55,800 --> 00:05:59,880
which is a staggering number

163
00:05:59,880 --> 00:06:03,419
so it has to be hey this shift left and

164
00:06:03,419 --> 00:06:05,400
let's push this over onto the shoulders

165
00:06:05,400 --> 00:06:08,179
of the Developers

166
00:06:09,780 --> 00:06:11,100
this might seem like a complete

167
00:06:11,100 --> 00:06:12,360
non-sequitur

168
00:06:12,360 --> 00:06:14,400
but if you're going to speak to a

169
00:06:14,400 --> 00:06:15,780
developer you need to speak to them in

170
00:06:15,780 --> 00:06:18,360
their language and get love it or hate

171
00:06:18,360 --> 00:06:22,020
it confused by it or mastered it get is

172
00:06:22,020 --> 00:06:24,660
the default de facto language of how

173
00:06:24,660 --> 00:06:26,400
devops works and how developers think

174
00:06:26,400 --> 00:06:27,840
about code

175
00:06:27,840 --> 00:06:31,259
it doesn't matter if it's PHP JavaScript

176
00:06:31,259 --> 00:06:33,479
whatever python

177
00:06:33,479 --> 00:06:35,039
at the end of the day what they do with

178
00:06:35,039 --> 00:06:38,280
that code translates into get and get is

179
00:06:38,280 --> 00:06:40,460
awesome

180
00:06:40,500 --> 00:06:43,039
get almost all developers use this

181
00:06:43,039 --> 00:06:46,080
93.6 of all code bases on Earth are in

182
00:06:46,080 --> 00:06:48,000
git right now according to the last

183
00:06:48,000 --> 00:06:50,940
numbers I saw 96 of all developers use

184
00:06:50,940 --> 00:06:52,139
it daily

185
00:06:52,139 --> 00:06:54,060
so git is awesome and it's this

186
00:06:54,060 --> 00:06:57,120
universal language we all use but

187
00:06:57,120 --> 00:06:58,919
it's also the stupid content tracker

188
00:06:58,919 --> 00:07:00,600
that's what Linus called it that's still

189
00:07:00,600 --> 00:07:03,060
if you type man get into Bash that's

190
00:07:03,060 --> 00:07:04,800
still what it spits out

191
00:07:04,800 --> 00:07:06,780
um because it's stupid

192
00:07:06,780 --> 00:07:09,180
it doesn't know what it's doing it knows

193
00:07:09,180 --> 00:07:11,580
what you told it but in and of itself it

194
00:07:11,580 --> 00:07:13,199
doesn't make your code any more less

195
00:07:13,199 --> 00:07:14,819
secure so

196
00:07:14,819 --> 00:07:16,680
everybody using git yeah it could be a

197
00:07:16,680 --> 00:07:18,120
good thing

198
00:07:18,120 --> 00:07:20,759
git does have a way to

199
00:07:20,759 --> 00:07:23,220
help with security get ignore for

200
00:07:23,220 --> 00:07:24,539
instance

201
00:07:24,539 --> 00:07:26,639
um does anybody can anybody spot the the

202
00:07:26,639 --> 00:07:29,099
problem with this

203
00:07:29,099 --> 00:07:32,160
there's an

204
00:07:32,160 --> 00:07:35,340
I'll give you a hint it's right here

205
00:07:35,340 --> 00:07:37,919
yeah they commented out the dot EMV file

206
00:07:37,919 --> 00:07:39,120
in this particular instance of get

207
00:07:39,120 --> 00:07:40,740
ignore so getting more is awesome

208
00:07:40,740 --> 00:07:42,479
because it will say all right get don't

209
00:07:42,479 --> 00:07:45,180
pay attention to this file or this path

210
00:07:45,180 --> 00:07:47,220
at all and you can safely store things

211
00:07:47,220 --> 00:07:49,259
in EnV files and

212
00:07:49,259 --> 00:07:51,960
um secrets.jsons and things like that

213
00:07:51,960 --> 00:07:53,580
and we should be

214
00:07:53,580 --> 00:07:56,340
but if we also are commenting out that

215
00:07:56,340 --> 00:07:58,340
line or not even adding the git ignore

216
00:07:58,340 --> 00:08:00,720
then it's going to include that in

217
00:08:00,720 --> 00:08:02,340
Source control and again we push that

218
00:08:02,340 --> 00:08:04,500
out to the environment out to the

219
00:08:04,500 --> 00:08:05,580
universe and people are going to find it

220
00:08:05,580 --> 00:08:08,220
and get into our stuff

221
00:08:08,220 --> 00:08:09,900
and there are awesome Solutions out

222
00:08:09,900 --> 00:08:11,580
there everybody should be using

223
00:08:11,580 --> 00:08:13,199
hashicorp Vault I don't work for

224
00:08:13,199 --> 00:08:15,539
hashicorp probably won't ever but I love

225
00:08:15,539 --> 00:08:18,720
them I love Vault uh again I don't work

226
00:08:18,720 --> 00:08:20,580
for Azure but Azure key vault is one of

227
00:08:20,580 --> 00:08:21,840
my favorite architectures for Key

228
00:08:21,840 --> 00:08:23,879
Management just is personal personal

229
00:08:23,879 --> 00:08:25,680
preference

230
00:08:25,680 --> 00:08:27,240
um and their documentation is really

231
00:08:27,240 --> 00:08:28,319
cool

232
00:08:28,319 --> 00:08:30,660
and if everybody would just use a

233
00:08:30,660 --> 00:08:32,760
combination of

234
00:08:32,760 --> 00:08:37,320
get ignore and Key Management then I

235
00:08:37,320 --> 00:08:39,059
could stop talking and I would be able

236
00:08:39,059 --> 00:08:40,799
to stop giving this talk and I have much

237
00:08:40,799 --> 00:08:42,899
I'd sleep much better at night but

238
00:08:42,899 --> 00:08:44,940
unfortunately

239
00:08:44,940 --> 00:08:47,880
developers keep doing this and I say

240
00:08:47,880 --> 00:08:50,160
developer with me included

241
00:08:50,160 --> 00:08:52,620
because eventually we have to

242
00:08:52,620 --> 00:08:54,120
just test and see if something worked

243
00:08:54,120 --> 00:08:55,380
and the problem is that we tested and

244
00:08:55,380 --> 00:08:57,720
see if it worked the problem is we

245
00:08:57,720 --> 00:08:59,100
forgot to take it out

246
00:08:59,100 --> 00:09:00,899
and then we committed it

247
00:09:00,899 --> 00:09:03,180
and then we pushed it

248
00:09:03,180 --> 00:09:06,380
not least a bad time

249
00:09:06,540 --> 00:09:08,700
because in theory you can get it back

250
00:09:08,700 --> 00:09:09,839
out

251
00:09:09,839 --> 00:09:12,000
if your next commit

252
00:09:12,000 --> 00:09:14,399
is you removing the secret and making

253
00:09:14,399 --> 00:09:16,500
the comment removed that thing I

254
00:09:16,500 --> 00:09:18,300
shouldn't have put in there guess what

255
00:09:18,300 --> 00:09:20,459
you've just told every attacker on Earth

256
00:09:20,459 --> 00:09:22,500
where to look for your secret it's in

257
00:09:22,500 --> 00:09:24,540
the previous commit let's not forget how

258
00:09:24,540 --> 00:09:25,920
git works

259
00:09:25,920 --> 00:09:28,800
git takes a compression of the entire

260
00:09:28,800 --> 00:09:31,740
file every time it's changed a new one

261
00:09:31,740 --> 00:09:33,180
and then it Stacks them up on top of

262
00:09:33,180 --> 00:09:33,959
each other and that's what our git

263
00:09:33,959 --> 00:09:35,940
history is so at any point in time you

264
00:09:35,940 --> 00:09:37,920
can say I'm going to get check out this

265
00:09:37,920 --> 00:09:39,660
commit that happened you know 50 commits

266
00:09:39,660 --> 00:09:41,100
back 100 commits back the beginning of

267
00:09:41,100 --> 00:09:43,740
the project back and it resets the file

268
00:09:43,740 --> 00:09:46,560
system to that state

269
00:09:46,560 --> 00:09:48,060
so just

270
00:09:48,060 --> 00:09:49,980
removing the secret in and of itself

271
00:09:49,980 --> 00:09:51,240
doesn't fix the problem you have to

272
00:09:51,240 --> 00:09:52,980
remove it completely from history which

273
00:09:52,980 --> 00:09:54,720
is not

274
00:09:54,720 --> 00:09:57,660
hard it's just painful it's painful for

275
00:09:57,660 --> 00:09:59,880
a couple things it's painful because it

276
00:09:59,880 --> 00:10:01,680
wrecks everybody else's version of

277
00:10:01,680 --> 00:10:02,940
History

278
00:10:02,940 --> 00:10:04,339
and now you have to go have that

279
00:10:04,339 --> 00:10:06,839
conversation with the entire team on how

280
00:10:06,839 --> 00:10:08,519
you need to fix history

281
00:10:08,519 --> 00:10:09,899
and also you have to have the

282
00:10:09,899 --> 00:10:11,940
conversation that hey I did something

283
00:10:11,940 --> 00:10:14,339
really wrong and I've just exposed a lot

284
00:10:14,339 --> 00:10:16,640
of things

285
00:10:18,899 --> 00:10:20,580
so what we need is some kind of robot

286
00:10:20,580 --> 00:10:22,500
because robots are awesome because they

287
00:10:22,500 --> 00:10:24,060
do the same thing over and over they're

288
00:10:24,060 --> 00:10:25,860
repetition machines

289
00:10:25,860 --> 00:10:27,540
and they can stop us from finding our

290
00:10:27,540 --> 00:10:29,820
secrets every time

291
00:10:29,820 --> 00:10:32,399
get gives us a way to build this robot I

292
00:10:32,399 --> 00:10:35,220
say bot very generically here give us a

293
00:10:35,220 --> 00:10:37,140
way to automate this process I should

294
00:10:37,140 --> 00:10:39,720
probably probably say

295
00:10:39,720 --> 00:10:42,360
githooks is this beautiful automation

296
00:10:42,360 --> 00:10:44,279
system built into git it's been there

297
00:10:44,279 --> 00:10:45,720
forever been there since the beginning

298
00:10:45,720 --> 00:10:47,279
because Linus needed this for certain

299
00:10:47,279 --> 00:10:48,540
things

300
00:10:48,540 --> 00:10:51,000
and it's basically this

301
00:10:51,000 --> 00:10:52,680
I have an idea of something I need to

302
00:10:52,680 --> 00:10:53,640
automate

303
00:10:53,640 --> 00:10:55,860
when I do a thing and get git will

304
00:10:55,860 --> 00:10:58,200
trigger the thing I built

305
00:10:58,200 --> 00:11:00,480
and then eventually wipe my mouth with a

306
00:11:00,480 --> 00:11:02,779
napkin

307
00:11:02,940 --> 00:11:04,740
githooks.com if you don't go to any

308
00:11:04,740 --> 00:11:07,440
other website from a result of viewing

309
00:11:07,440 --> 00:11:09,660
this talk go to githooks.com and it's

310
00:11:09,660 --> 00:11:11,820
awesome Matthew Hudson has done an

311
00:11:11,820 --> 00:11:13,260
amazing job of putting together not only

312
00:11:13,260 --> 00:11:15,060
an explanation of how githooks works but

313
00:11:15,060 --> 00:11:17,279
also beautiful examples of what you can

314
00:11:17,279 --> 00:11:18,480
really do with it

315
00:11:18,480 --> 00:11:22,019
but these are the 17 hooks in git

316
00:11:22,019 --> 00:11:24,240
and

317
00:11:24,240 --> 00:11:26,459
three of them happened before a commit

318
00:11:26,459 --> 00:11:27,660
happens

319
00:11:27,660 --> 00:11:30,060
and one of them happens after you pushed

320
00:11:30,060 --> 00:11:33,720
but before it's received on the other

321
00:11:33,720 --> 00:11:34,920
end

322
00:11:34,920 --> 00:11:37,140
these are inflection points where you

323
00:11:37,140 --> 00:11:40,200
can tell get hey check to make sure I

324
00:11:40,200 --> 00:11:41,880
got everything right and if I didn't get

325
00:11:41,880 --> 00:11:43,320
everything right

326
00:11:43,320 --> 00:11:46,680
well don't let me make that commit

327
00:11:46,680 --> 00:11:48,180
and if you're like well my developers

328
00:11:48,180 --> 00:11:49,399
are never going to do that all the time

329
00:11:49,399 --> 00:11:53,220
whoever's in charge of your corporate

330
00:11:53,220 --> 00:11:56,459
GitHub GitHub Enterprise your gitlab

331
00:11:56,459 --> 00:11:58,079
Enterprise your bitbucket Enterprise or

332
00:11:58,079 --> 00:12:00,420
however you're managing your version

333
00:12:00,420 --> 00:12:03,660
control system across the Enterprise

334
00:12:03,660 --> 00:12:05,339
um they can put in pre-received hooks to

335
00:12:05,339 --> 00:12:07,740
hey let's make sure we stop those

336
00:12:07,740 --> 00:12:11,640
Secrets before they get on to our server

337
00:12:11,640 --> 00:12:14,579
so GitHub comes with a bunch of example

338
00:12:14,579 --> 00:12:17,100
hooks so if you have a machine in front

339
00:12:17,100 --> 00:12:18,839
of you right now you can open up a git

340
00:12:18,839 --> 00:12:21,959
repo look in the dot get folder there'll

341
00:12:21,959 --> 00:12:23,519
be a hook folder it'll probably contain

342
00:12:23,519 --> 00:12:25,740
exactly these and if you go look at

343
00:12:25,740 --> 00:12:28,339
those scripts

344
00:12:28,440 --> 00:12:30,839
they contain things like rev parse and

345
00:12:30,839 --> 00:12:33,660
weird bits of pearl because let's never

346
00:12:33,660 --> 00:12:34,920
forget

347
00:12:34,920 --> 00:12:37,260
git came from lioness torball

348
00:12:37,260 --> 00:12:40,320
it was specifically a set of scripts he

349
00:12:40,320 --> 00:12:42,660
wrote to help him manage the patches

350
00:12:42,660 --> 00:12:45,959
when building the Linux kernel he even

351
00:12:45,959 --> 00:12:47,279
said in the original email where he

352
00:12:47,279 --> 00:12:48,779
introduced it to the community I don't

353
00:12:48,779 --> 00:12:49,920
think it's going to become a full-blown

354
00:12:49,920 --> 00:12:51,660
SCM

355
00:12:51,660 --> 00:12:53,100
it's just something I use for my

356
00:12:53,100 --> 00:12:55,560
personal work

357
00:12:55,560 --> 00:12:57,060
three months later he hands it over to

358
00:12:57,060 --> 00:13:00,899
hunio and that's the story of git so if

359
00:13:00,899 --> 00:13:02,040
you go look at the examples like well

360
00:13:02,040 --> 00:13:04,139
why would I do that rev parse is one of

361
00:13:04,139 --> 00:13:05,760
my favorite commands and get side quick

362
00:13:05,760 --> 00:13:07,920
side note if you go look at the manual

363
00:13:07,920 --> 00:13:11,480
for it the actual description is

364
00:13:11,480 --> 00:13:14,760
retrieve and massage parameters

365
00:13:14,760 --> 00:13:16,800
massage what other part of computer

366
00:13:16,800 --> 00:13:19,260
science uses the word massage in its

367
00:13:19,260 --> 00:13:20,940
documentation because I still don't know

368
00:13:20,940 --> 00:13:22,620
what exactly that means

369
00:13:22,620 --> 00:13:25,560
anyway these scripts while there's all

370
00:13:25,560 --> 00:13:26,940
those samples if you just take off the

371
00:13:26,940 --> 00:13:28,680
word sample if you remove the word

372
00:13:28,680 --> 00:13:30,959
sample at the end the extension sample

373
00:13:30,959 --> 00:13:32,760
then every time

374
00:13:32,760 --> 00:13:35,700
commit message triggers it will run

375
00:13:35,700 --> 00:13:37,500
what's ever in there

376
00:13:37,500 --> 00:13:39,000
uh

377
00:13:39,000 --> 00:13:40,860
this is one I run my

378
00:13:40,860 --> 00:13:43,320
because I like Dad jokes

379
00:13:43,320 --> 00:13:44,820
point is you can

380
00:13:44,820 --> 00:13:47,459
do anything you want

381
00:13:47,459 --> 00:13:49,980
hooks are just scripts so if the

382
00:13:49,980 --> 00:13:52,920
environment's available the script is

383
00:13:52,920 --> 00:13:55,260
valid it's going to go ahead and run it

384
00:13:55,260 --> 00:13:58,560
uh props to Ed Thompson uh who used to

385
00:13:58,560 --> 00:14:00,180
maintain npm I forget what he's doing

386
00:14:00,180 --> 00:14:02,579
these days but he wrote get Dad which is

387
00:14:02,579 --> 00:14:05,519
a little script you can run for uh if

388
00:14:05,519 --> 00:14:07,440
you miss type git data instead of git ad

389
00:14:07,440 --> 00:14:09,180
it will still do the ad but I'll also

390
00:14:09,180 --> 00:14:11,459
tell you a dad joke so that's where I

391
00:14:11,459 --> 00:14:13,440
got the idea

392
00:14:13,440 --> 00:14:14,579
um but you can make it do anything

393
00:14:14,579 --> 00:14:16,380
including the thing that I originally

394
00:14:16,380 --> 00:14:17,639
was going to talk about or originally

395
00:14:17,639 --> 00:14:20,100
was talking about which is we need

396
00:14:20,100 --> 00:14:22,019
something mechanically every time we go

397
00:14:22,019 --> 00:14:24,300
to make a commit we'll look for username

398
00:14:24,300 --> 00:14:27,180
passwords API Keys security certs

399
00:14:27,180 --> 00:14:30,300
anything else you can think of that is a

400
00:14:30,300 --> 00:14:31,260
credential

401
00:14:31,260 --> 00:14:33,360
and if it's there throw an error don't

402
00:14:33,360 --> 00:14:34,740
make the commit and tell me what what

403
00:14:34,740 --> 00:14:37,519
went wrong

404
00:14:37,740 --> 00:14:41,180
good news is you can build this yourself

405
00:14:41,339 --> 00:14:43,440
with some straightforward regex who

406
00:14:43,440 --> 00:14:46,260
loves building regex

407
00:14:46,260 --> 00:14:48,060
yeah that's what I thought

408
00:14:48,060 --> 00:14:50,639
um regex is fun don't get me wrong but

409
00:14:50,639 --> 00:14:52,500
rely on it for production use is

410
00:14:52,500 --> 00:14:53,639
terrifying

411
00:14:53,639 --> 00:14:55,620
but you can all you're really doing is

412
00:14:55,620 --> 00:14:58,680
saying hey uh get grew up git grep is

413
00:14:58,680 --> 00:15:00,360
one of the Cool Tools included in git

414
00:15:00,360 --> 00:15:02,339
because it's a subset of Linus's tool

415
00:15:02,339 --> 00:15:03,540
set

416
00:15:03,540 --> 00:15:04,320
um

417
00:15:04,320 --> 00:15:07,680
It Go dismisses the problem of what it's

418
00:15:07,680 --> 00:15:09,899
searching and just looks for the

419
00:15:09,899 --> 00:15:11,639
patterns inside of all the included

420
00:15:11,639 --> 00:15:14,339
indexed files so git grep is just a

421
00:15:14,339 --> 00:15:15,899
shortcut to use grub

422
00:15:15,899 --> 00:15:17,519
so we can say hey go look for things

423
00:15:17,519 --> 00:15:19,980
that look like passwords or 20 things

424
00:15:19,980 --> 00:15:22,139
that are 20 characters long that contain

425
00:15:22,139 --> 00:15:24,300
all uppercase and all numbers that would

426
00:15:24,300 --> 00:15:28,440
be AWS credentials or tokens uh

427
00:15:28,440 --> 00:15:30,120
unless there are some errors if that

428
00:15:30,120 --> 00:15:32,699
happens and again you can build this by

429
00:15:32,699 --> 00:15:34,380
hand

430
00:15:34,380 --> 00:15:36,300
but then you got to maintain it and then

431
00:15:36,300 --> 00:15:37,980
you gotta account for edge cases and

432
00:15:37,980 --> 00:15:39,420
then you got an account for allowed

433
00:15:39,420 --> 00:15:40,680
patterns and then you got to account for

434
00:15:40,680 --> 00:15:42,180
false positives and then you got to sell

435
00:15:42,180 --> 00:15:44,940
it to your team and then

436
00:15:44,940 --> 00:15:47,160
and then and then

437
00:15:47,160 --> 00:15:48,480
so you probably don't want to build this

438
00:15:48,480 --> 00:15:49,260
yourself

439
00:15:49,260 --> 00:15:51,180
the good news is that this has already

440
00:15:51,180 --> 00:15:53,579
been built a number of times by a number

441
00:15:53,579 --> 00:15:55,440
of people

442
00:15:55,440 --> 00:15:56,519
um

443
00:15:56,519 --> 00:15:58,260
I'm gonna talk about three of them there

444
00:15:58,260 --> 00:16:00,120
are more than three in the universe but

445
00:16:00,120 --> 00:16:02,579
I'm going to name three and full

446
00:16:02,579 --> 00:16:04,980
disclosure I work for one of them

447
00:16:04,980 --> 00:16:06,839
I didn't used to include them on this

448
00:16:06,839 --> 00:16:08,880
list but then they hired me

449
00:16:08,880 --> 00:16:11,459
uh

450
00:16:11,459 --> 00:16:12,480
the first one I want to talk about is

451
00:16:12,480 --> 00:16:16,019
AWS Labs get secrets so if you are all

452
00:16:16,019 --> 00:16:18,660
100 bought in AWS

453
00:16:18,660 --> 00:16:21,060
everything you do is AWS

454
00:16:21,060 --> 00:16:22,320
I would probably start with this one

455
00:16:22,320 --> 00:16:23,339
honestly

456
00:16:23,339 --> 00:16:26,399
because the AWS Labs team built get

457
00:16:26,399 --> 00:16:28,220
secrets

458
00:16:28,220 --> 00:16:33,060
to look before a commit is made all

459
00:16:33,060 --> 00:16:35,100
three of those checks and see hey is

460
00:16:35,100 --> 00:16:37,139
there an AWS credential in here we know

461
00:16:37,139 --> 00:16:38,339
what they look like because we built

462
00:16:38,339 --> 00:16:39,000
them

463
00:16:39,000 --> 00:16:40,440
so let's go ahead and check and they'll

464
00:16:40,440 --> 00:16:43,440
throw an error if we get there

465
00:16:43,440 --> 00:16:44,880
the awesome thing is it's free it's open

466
00:16:44,880 --> 00:16:46,040
source

467
00:16:46,040 --> 00:16:48,839
triple checks you can extend it because

468
00:16:48,839 --> 00:16:50,519
it's open source again you have to know

469
00:16:50,519 --> 00:16:52,920
regex to really do this effectively but

470
00:16:52,920 --> 00:16:55,800
it does it out of the box you can extend

471
00:16:55,800 --> 00:16:58,939
it out of the box not too hard

472
00:16:59,040 --> 00:17:01,920
but it is AWS specific so extending it

473
00:17:01,920 --> 00:17:04,079
means knowing exactly what you're

474
00:17:04,079 --> 00:17:07,079
looking for in those other patterns

475
00:17:07,079 --> 00:17:08,760
again not impossible people have already

476
00:17:08,760 --> 00:17:10,140
done this in open source I'm not going

477
00:17:10,140 --> 00:17:11,459
to name their repos because they're a

478
00:17:11,459 --> 00:17:13,919
bunch of one-off repos but you can find

479
00:17:13,919 --> 00:17:16,559
them and for like Google Cloud product

480
00:17:16,559 --> 00:17:18,900
for Azure people have already extended

481
00:17:18,900 --> 00:17:21,119
this so

482
00:17:21,119 --> 00:17:22,980
second one is truffle hog who here has

483
00:17:22,980 --> 00:17:25,079
actually run truffle hog

484
00:17:25,079 --> 00:17:28,020
got three three hands two hands see two

485
00:17:28,020 --> 00:17:30,780
hands maybe I saw two

486
00:17:30,780 --> 00:17:33,960
um trevolog is an open source repo that

487
00:17:33,960 --> 00:17:36,840
will let you use pre-commit hook

488
00:17:36,840 --> 00:17:41,280
you can also do other searches known as

489
00:17:41,280 --> 00:17:42,720
it can do more than what I'm talking

490
00:17:42,720 --> 00:17:45,360
about for this use case but I'm going to

491
00:17:45,360 --> 00:17:47,100
narrow it for this use case for today

492
00:17:47,100 --> 00:17:49,440
which is looking for things before you

493
00:17:49,440 --> 00:17:51,419
commit them it will it'll absolutely let

494
00:17:51,419 --> 00:17:52,679
you do that

495
00:17:52,679 --> 00:17:53,640
it's free

496
00:17:53,640 --> 00:17:56,640
it checks the pre-commit level

497
00:17:56,640 --> 00:17:58,620
it does require pre-commit framework to

498
00:17:58,620 --> 00:18:00,500
be installed

499
00:18:00,500 --> 00:18:02,400
and

500
00:18:02,400 --> 00:18:04,200
that is a requirement for your

501
00:18:04,200 --> 00:18:05,760
developers to like have to deal with and

502
00:18:05,760 --> 00:18:08,120
live with

503
00:18:08,280 --> 00:18:10,200
so it's an additional thing to build on

504
00:18:10,200 --> 00:18:11,340
top of

505
00:18:11,340 --> 00:18:14,039
git hooks but it'll help you manage

506
00:18:14,039 --> 00:18:15,360
GitHub so I actually highly recommend

507
00:18:15,360 --> 00:18:17,220
looking into pre-commit if you are

508
00:18:17,220 --> 00:18:19,200
interested in githubs in general because

509
00:18:19,200 --> 00:18:20,760
their documentation is awesome and they

510
00:18:20,760 --> 00:18:22,860
can give you a lot of really good advice

511
00:18:22,860 --> 00:18:25,799
uh you can run it as GitHub action

512
00:18:25,799 --> 00:18:27,960
but that catches your secret after it's

513
00:18:27,960 --> 00:18:30,299
already made it onto a platform this is

514
00:18:30,299 --> 00:18:31,440
also why I'm not going to talk about

515
00:18:31,440 --> 00:18:33,720
github's Native solution for this

516
00:18:33,720 --> 00:18:35,880
because it only checks after the secret

517
00:18:35,880 --> 00:18:38,280
is made it onto GitHub because that's

518
00:18:38,280 --> 00:18:41,039
where it cares about it

519
00:18:41,039 --> 00:18:43,520
um that last one your mileage may vary

520
00:18:43,520 --> 00:18:47,520
but go read your own reviews on high

521
00:18:47,520 --> 00:18:49,260
false positives

522
00:18:49,260 --> 00:18:51,600
neurotesting might prove differently

523
00:18:51,600 --> 00:18:54,780
uh then the one I work for get guardian

524
00:18:54,780 --> 00:18:56,280
we make a product called GG Shield it's

525
00:18:56,280 --> 00:18:59,580
open source repo it does rely on the

526
00:18:59,580 --> 00:19:01,500
platform API

527
00:19:01,500 --> 00:19:03,299
so while it is all open source it is

528
00:19:03,299 --> 00:19:06,000
calling to a third party

529
00:19:06,000 --> 00:19:08,400
platform that's us

530
00:19:08,400 --> 00:19:09,660
um

531
00:19:09,660 --> 00:19:11,700
one thing I love about it is it also

532
00:19:11,700 --> 00:19:13,320
includes the pre-receive hook so you can

533
00:19:13,320 --> 00:19:16,260
install this on server side and kick out

534
00:19:16,260 --> 00:19:18,179
and stop any credentials from

535
00:19:18,179 --> 00:19:19,919
accidentally making there I'd overcome

536
00:19:19,919 --> 00:19:21,660
this this week as I started to

537
00:19:21,660 --> 00:19:25,140
contributing to docs because guess what

538
00:19:25,140 --> 00:19:26,820
I I wrote something that looked very

539
00:19:26,820 --> 00:19:30,360
close to a secret and had to call

540
00:19:30,360 --> 00:19:32,940
somebody to actually get the commit to

541
00:19:32,940 --> 00:19:34,320
be accepted

542
00:19:34,320 --> 00:19:35,640
um anyway

543
00:19:35,640 --> 00:19:37,320
installation is really straightforward

544
00:19:37,320 --> 00:19:39,900
and all it does is throw one line into a

545
00:19:39,900 --> 00:19:46,160
git git hook for pre-commit or pre-push

546
00:19:48,120 --> 00:19:50,340
but it does require get Guardian which

547
00:19:50,340 --> 00:19:52,380
you can use for free if for individual

548
00:19:52,380 --> 00:19:54,840
teams individuals and teams of up to 250

549
00:19:54,840 --> 00:19:57,840
for open source projects

550
00:19:57,840 --> 00:19:58,980
um

551
00:19:58,980 --> 00:20:00,720
because it's a platform based we're

552
00:20:00,720 --> 00:20:03,660
constantly adding new patterns to it

553
00:20:03,660 --> 00:20:05,280
right now we're checking for 350 known

554
00:20:05,280 --> 00:20:06,780
patterns

555
00:20:06,780 --> 00:20:08,039
um

556
00:20:08,039 --> 00:20:10,020
and we're always adding more and you can

557
00:20:10,020 --> 00:20:11,940
extend it yourself if you need to

558
00:20:11,940 --> 00:20:15,660
but it is API rate limited because it is

559
00:20:15,660 --> 00:20:18,179
a platform so mileage may vary on that

560
00:20:18,179 --> 00:20:20,460
depending on how many times you push

561
00:20:20,460 --> 00:20:22,500
might be the rate for you might not be I

562
00:20:22,500 --> 00:20:24,840
don't know your testing will tell you

563
00:20:24,840 --> 00:20:26,400
what what does this look like in action

564
00:20:26,400 --> 00:20:27,600
because I've told you like what all

565
00:20:27,600 --> 00:20:29,340
these things do

566
00:20:29,340 --> 00:20:30,720
well I've already seen what this looks

567
00:20:30,720 --> 00:20:32,940
like in action because that's what I

568
00:20:32,940 --> 00:20:34,919
built earlier with the example of just

569
00:20:34,919 --> 00:20:37,080
building out a git grep

570
00:20:37,080 --> 00:20:39,120
I try to commit a secret

571
00:20:39,120 --> 00:20:41,880
here are my config Gamble

572
00:20:41,880 --> 00:20:44,280
and here's git Guardian it specifically

573
00:20:44,280 --> 00:20:46,679
spits out our GG Shield spits out hey

574
00:20:46,679 --> 00:20:48,120
here's the thing you tried to commit

575
00:20:48,120 --> 00:20:50,880
there's what we think it is

576
00:20:50,880 --> 00:20:54,720
an API key uh and fail We're not gonna

577
00:20:54,720 --> 00:20:57,200
let you do it

578
00:20:57,360 --> 00:20:58,620
not gonna show truffle hog not gonna

579
00:20:58,620 --> 00:21:00,419
throw AWS but they look basically

580
00:21:00,419 --> 00:21:03,179
identical they're the same use case

581
00:21:03,179 --> 00:21:05,940
hey we found a secret we stopped it and

582
00:21:05,940 --> 00:21:07,860
let's move on today

583
00:21:07,860 --> 00:21:10,260
it's a conclusion don't hard code your

584
00:21:10,260 --> 00:21:11,280
secrets

585
00:21:11,280 --> 00:21:12,780
if you could just convince everyone on

586
00:21:12,780 --> 00:21:14,940
Earth to stop doing this the rest of

587
00:21:14,940 --> 00:21:16,500
this is irrelevant

588
00:21:16,500 --> 00:21:19,440
please don't hard code your secrets

589
00:21:19,440 --> 00:21:22,320
if you do hardcode Secrets do not commit

590
00:21:22,320 --> 00:21:24,120
those secrets and push them

591
00:21:24,120 --> 00:21:26,240
again if we could just stop there

592
00:21:26,240 --> 00:21:28,320
everybody'd be happy

593
00:21:28,320 --> 00:21:29,820
use automation to help you though

594
00:21:29,820 --> 00:21:32,640
there's a lot of ways you can automate

595
00:21:32,640 --> 00:21:34,200
I didn't really dig into it but now I'm

596
00:21:34,200 --> 00:21:35,280
seeing I got a couple more minutes here

597
00:21:35,280 --> 00:21:37,620
so I'll just rant on it for a second

598
00:21:37,620 --> 00:21:39,900
I'm talking about one specific security

599
00:21:39,900 --> 00:21:42,480
use case of git hooks

600
00:21:42,480 --> 00:21:45,299
you're only limited by your imagination

601
00:21:45,299 --> 00:21:47,820
you wish your developers would run

602
00:21:47,820 --> 00:21:50,880
these let's say five different testing

603
00:21:50,880 --> 00:21:52,440
tools every single time they made a

604
00:21:52,440 --> 00:21:54,059
commit but you know they're just not

605
00:21:54,059 --> 00:21:55,799
going to manually do it

606
00:21:55,799 --> 00:21:57,539
build them a GitHub

607
00:21:57,539 --> 00:21:59,100
test it out your machine and then give

608
00:21:59,100 --> 00:22:01,140
it to them and say hey just throw these

609
00:22:01,140 --> 00:22:03,840
in place it takes you no extra time it's

610
00:22:03,840 --> 00:22:05,940
non-disruptive to your workflow assuming

611
00:22:05,940 --> 00:22:07,500
all the tests passed and if they don't

612
00:22:07,500 --> 00:22:09,840
pass then we've just saved a lot of time

613
00:22:09,840 --> 00:22:11,760
the farther left you can find the

614
00:22:11,760 --> 00:22:13,500
problem the cheaper it is to solve if

615
00:22:13,500 --> 00:22:14,659
you can solve something on a whiteboard

616
00:22:14,659 --> 00:22:18,299
whiteboard ink is really cheap if you

617
00:22:18,299 --> 00:22:19,919
find it in a production that could mean

618
00:22:19,919 --> 00:22:21,720
your business goes away

619
00:22:21,720 --> 00:22:23,640
that's the difference between those two

620
00:22:23,640 --> 00:22:25,980
edges so use automation as early as you

621
00:22:25,980 --> 00:22:26,640
can

622
00:22:26,640 --> 00:22:28,080
and there's open source tools to help

623
00:22:28,080 --> 00:22:28,980
you you don't have to build this

624
00:22:28,980 --> 00:22:30,780
yourself in fact I recommend not

625
00:22:30,780 --> 00:22:32,340
building this yourself for the most use

626
00:22:32,340 --> 00:22:34,140
cases

627
00:22:34,140 --> 00:22:35,039
um

628
00:22:35,039 --> 00:22:37,740
but I'm a Dwayne I live in Chicago

629
00:22:37,740 --> 00:22:39,179
rock and roll

630
00:22:39,179 --> 00:22:41,700
improv karaoke

631
00:22:41,700 --> 00:22:43,320
hit me up about any of that stuff or

632
00:22:43,320 --> 00:22:45,059
more

633
00:22:45,059 --> 00:22:47,880
and then see Dwayne on Twitter and

634
00:22:47,880 --> 00:22:50,960
thanks very much for coming to talk

635
00:22:54,900 --> 00:22:57,840
I got time for like one question

636
00:22:57,840 --> 00:23:00,840
foreign

637
00:23:06,780 --> 00:23:09,980
all right well thank you

