1
00:00:02,659 --> 00:00:12,178
what's going on<font color="#E5E5E5"> everybody so before we</font>

2
00:00:10,139 --> 00:00:13,440
<font color="#E5E5E5">kicked us off we wanted to give you a</font>

3
00:00:12,179 --> 00:00:14,880
shout out we don't<font color="#CCCCCC"> really think</font><font color="#E5E5E5"> that</font>

4
00:00:13,440 --> 00:00:17,509
this many people<font color="#E5E5E5"> would come to our talk</font>

5
00:00:14,880 --> 00:00:20,189
so super pumped that you guys showed up

6
00:00:17,510 --> 00:00:21,510
hopefully<font color="#CCCCCC"> it doesn't suck but regardless</font>

7
00:00:20,189 --> 00:00:28,980
thanks for<font color="#E5E5E5"> coming out we really</font>

8
00:00:21,510 --> 00:00:31,949
appreciate it so to kick this off cool

9
00:00:28,980 --> 00:00:33,450
so my<font color="#CCCCCC"> name is Jared Stroud I'm an RIT</font>

10
00:00:31,949 --> 00:00:36,660
cocooning security<font color="#CCCCCC"> master</font><font color="#E5E5E5"> students</font>

11
00:00:33,450 --> 00:00:37,860
sparse alumni CCDC alumni and<font color="#E5E5E5"> I would</font>

12
00:00:36,660 --> 00:00:39,750
describe myself as a start-up

13
00:00:37,860 --> 00:00:46,070
enthusiasts to whatever that means to

14
00:00:39,750 --> 00:00:49,140
you so I bright and then the<font color="#E5E5E5"> same</font><font color="#CCCCCC"> thing</font>

15
00:00:46,070 --> 00:00:53,010
basically and I have cool shoes that I'm

16
00:00:49,140 --> 00:00:55,020
rocking today so so to go through a

17
00:00:53,010 --> 00:00:56,550
little<font color="#CCCCCC"> bit of the</font><font color="#E5E5E5"> agenda that we had set</font>

18
00:00:55,020 --> 00:00:58,559
up for today we're going to talk about

19
00:00:56,550 --> 00:01:00,269
where the background for our talk came

20
00:00:58,559 --> 00:01:03,390
from some previous work that's been done

21
00:01:00,270 --> 00:01:05,970
<font color="#CCCCCC">what the motivation was that let us do</font>

22
00:01:03,390 --> 00:01:08,729
this talk and then we're going<font color="#E5E5E5"> to dive</font>

23
00:01:05,970 --> 00:01:11,310
in into<font color="#CCCCCC"> to DevOps tools ansible and</font>

24
00:01:08,729 --> 00:01:14,039
saltstack and talk about how their

25
00:01:11,310 --> 00:01:18,439
functionality can help you scale and

26
00:01:14,040 --> 00:01:22,110
automate your read operations but<font color="#E5E5E5"> first</font>

27
00:01:18,439 --> 00:01:24,000
so trigger<font color="#CCCCCC"> warning we have a lot of buzz</font>

28
00:01:22,110 --> 00:01:26,610
words in our talk hope you<font color="#E5E5E5"> guys get</font>

29
00:01:24,000 --> 00:01:28,560
super pumped if you're not then I mean I

30
00:01:26,610 --> 00:01:31,200
<font color="#E5E5E5">guess you can leave if you want I talk</font>

31
00:01:28,560 --> 00:01:33,450
like hopefully<font color="#E5E5E5"> will be pretty cool but</font>

32
00:01:31,200 --> 00:01:36,299
just DevOps in general<font color="#E5E5E5"> then it comes</font>

33
00:01:33,450 --> 00:01:38,220
with a lot of buzz words so just a heads

34
00:01:36,299 --> 00:01:39,659
up and for anybody who is about the

35
00:01:38,220 --> 00:01:43,170
whole like I'm<font color="#CCCCCC"> going to take a drink</font>

36
00:01:39,659 --> 00:01:44,759
after every buzzword I about<font color="#CCCCCC"> for /aa now</font>

37
00:01:43,170 --> 00:01:47,750
you're probably going<font color="#E5E5E5"> to be on the floor</font>

38
00:01:44,759 --> 00:01:47,750
so<font color="#CCCCCC"> I wouldn't recommend</font>

39
00:01:48,040 --> 00:01:52,790
so we keep<font color="#E5E5E5"> saying this worth DevOps in</font>

40
00:01:50,870 --> 00:01:54,620
this big old DevOps hype train that all

41
00:01:52,790 --> 00:01:56,300
right a bunch of<font color="#CCCCCC"> people</font><font color="#E5E5E5"> keep shouting</font>

42
00:01:54,620 --> 00:01:58,040
out but we're going<font color="#E5E5E5"> to establish like a</font>

43
00:01:56,300 --> 00:02:00,890
ground basis of what we mean when we say

44
00:01:58,040 --> 00:02:03,470
it so really<font color="#E5E5E5"> at the end of the day it's</font>

45
00:02:00,890 --> 00:02:05,900
whatever tool allows<font color="#CCCCCC"> you to automate</font>

46
00:02:03,470 --> 00:02:08,060
something and be reliable against a

47
00:02:05,900 --> 00:02:09,710
variety<font color="#CCCCCC"> of environments</font><font color="#E5E5E5"> so whether</font>

48
00:02:08,060 --> 00:02:12,590
that's spinning up several different

49
00:02:09,710 --> 00:02:14,090
nodes in AWS to using the same<font color="#E5E5E5"> kind of</font>

50
00:02:12,590 --> 00:02:15,890
infrastructure but putting it over in a

51
00:02:14,090 --> 00:02:17,830
<font color="#E5E5E5">different cloud provider there's these</font>

52
00:02:15,890 --> 00:02:21,350
tools that allow you to replicate

53
00:02:17,830 --> 00:02:24,230
reliably deploy code push out tests just

54
00:02:21,350 --> 00:02:26,690
<font color="#E5E5E5">continuously so some of you guys might</font>

55
00:02:24,230 --> 00:02:27,560
<font color="#CCCCCC">think of like Jenkins ansibles all-sec</font>

56
00:02:26,690 --> 00:02:30,020
obviously we're<font color="#E5E5E5"> going to talk about</font>

57
00:02:27,560 --> 00:02:32,240
<font color="#CCCCCC">today we</font><font color="#E5E5E5"> don't mean it in the like</font>

58
00:02:30,020 --> 00:02:34,430
philosophically where it's like it's a

59
00:02:32,240 --> 00:02:37,190
cultural thing and it's how<font color="#CCCCCC"> many scrum</font>

60
00:02:34,430 --> 00:02:39,470
meetings you do so just<font color="#E5E5E5"> that kind</font><font color="#CCCCCC"> of a</font>

61
00:02:37,190 --> 00:02:41,150
basis it's really just making sure<font color="#CCCCCC"> that</font>

62
00:02:39,470 --> 00:02:46,430
whatever you're doing is reliable across

63
00:02:41,150 --> 00:02:49,459
different infrastructures so going on to

64
00:02:46,430 --> 00:02:51,050
the<font color="#E5E5E5"> motivation Brian and I both do some</font>

65
00:02:49,459 --> 00:02:53,120
malware analysis and look side projects

66
00:02:51,050 --> 00:02:54,730
and hobbies so we always really liked

67
00:02:53,120 --> 00:02:57,050
when we see malware that's using the

68
00:02:54,730 --> 00:02:59,209
inherent environment and society<font color="#E5E5E5"> tools</font>

69
00:02:57,050 --> 00:03:00,890
to move laterally<font color="#CCCCCC"> through a network so</font>

70
00:02:59,209 --> 00:03:02,780
it's not doing anything super crazy but

71
00:03:00,890 --> 00:03:04,100
it's using tools that are already<font color="#E5E5E5"> there</font>

72
00:03:02,780 --> 00:03:06,200
something that's already there for the

73
00:03:04,100 --> 00:03:07,519
<font color="#E5E5E5">advantage why bring the guns into the</font>

74
00:03:06,200 --> 00:03:10,790
<font color="#E5E5E5">place where you can</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> use their guns</font>

75
00:03:07,519 --> 00:03:13,400
right that kind of idea has anybody seen

76
00:03:10,790 --> 00:03:16,429
<font color="#E5E5E5">Chris gays and Ken Johnson stock auf dem</font>

77
00:03:13,400 --> 00:03:17,660
boobs<font color="#CCCCCC"> all right so a couple people for</font>

78
00:03:16,430 --> 00:03:20,260
those of<font color="#E5E5E5"> you of</font><font color="#CCCCCC"> not it's actually a</font>

79
00:03:17,660 --> 00:03:23,390
<font color="#CCCCCC">pretty cool talk they talk about how</font>

80
00:03:20,260 --> 00:03:25,100
<font color="#E5E5E5">people like mess up a lot of things when</font>

81
00:03:23,390 --> 00:03:28,458
doing DevOps stuff so for example

82
00:03:25,100 --> 00:03:30,260
pushing API keys to github or leaving

83
00:03:28,459 --> 00:03:32,299
<font color="#E5E5E5">their docket directory publicly</font>

84
00:03:30,260 --> 00:03:34,850
accessible for their<font color="#E5E5E5"> website so that you</font>

85
00:03:32,299 --> 00:03:37,190
could just<font color="#E5E5E5"> pull it down so we thought</font>

86
00:03:34,850 --> 00:03:39,410
that<font color="#CCCCCC"> would be cool to</font><font color="#E5E5E5"> also like build on</font>

87
00:03:37,190 --> 00:03:41,209
like another DevOps talk based off<font color="#CCCCCC"> of</font>

88
00:03:39,410 --> 00:03:43,840
that kind of stuff<font color="#CCCCCC"> so that was another</font>

89
00:03:41,209 --> 00:03:46,489
motivation for our talk yeah and also

90
00:03:43,840 --> 00:03:50,000
competitions how many CTF players do I

91
00:03:46,489 --> 00:03:52,250
have in the house nice I'm an acct see

92
00:03:50,000 --> 00:03:55,220
alumni or attack defend people just in

93
00:03:52,250 --> 00:03:57,919
general for these competitions yeah nice

94
00:03:55,220 --> 00:03:59,109
so if you're not familiar with CCDC it

95
00:03:57,919 --> 00:04:01,210
stands for collegiate

96
00:03:59,110 --> 00:04:02,890
defense competition and it's<font color="#CCCCCC"> basically</font>

97
00:04:01,210 --> 00:04:04,180
when a bunch<font color="#E5E5E5"> of college students go and</font>

98
00:04:02,890 --> 00:04:05,649
sit<font color="#E5E5E5"> in a room and there's a group of</font>

99
00:04:04,180 --> 00:04:07,720
professional red teamers and they make

100
00:04:05,650 --> 00:04:10,540
us have a super bad time to<font color="#E5E5E5"> an</font>

101
00:04:07,720 --> 00:04:11,920
inherently vulnerable environments so

102
00:04:10,540 --> 00:04:13,600
the whole idea behind some of these

103
00:04:11,920 --> 00:04:15,429
attack defense<font color="#CCCCCC"> ETF slow if you're not</font>

104
00:04:13,600 --> 00:04:17,260
familiar with them is that you'll<font color="#CCCCCC"> have</font>

105
00:04:15,430 --> 00:04:19,180
an infrastructure it'll be vulnerable in

106
00:04:17,260 --> 00:04:20,589
some way shape<font color="#CCCCCC"> or form whether it's just</font>

107
00:04:19,180 --> 00:04:22,690
like super simple things like the fault

108
00:04:20,589 --> 00:04:24,429
creds exploding a web app or some kind

109
00:04:22,690 --> 00:04:25,960
of custom<font color="#CCCCCC"> network surface that you have</font>

110
00:04:24,430 --> 00:04:28,210
to actually create an exploit for and

111
00:04:25,960 --> 00:04:29,890
then take advantage of the machine once

112
00:04:28,210 --> 00:04:31,479
you get<font color="#E5E5E5"> onto the machine you need to</font>

113
00:04:29,890 --> 00:04:33,700
find<font color="#E5E5E5"> some kind of token and replace it</font>

114
00:04:31,480 --> 00:04:36,760
with your flag so that the corresponding

115
00:04:33,700 --> 00:04:38,469
scoring engine can give you points so at

116
00:04:36,760 --> 00:04:42,099
the end of<font color="#E5E5E5"> the day the only thing that</font>

117
00:04:38,470 --> 00:04:43,600
really matters<font color="#E5E5E5"> about this is speed but</font>

118
00:04:42,100 --> 00:04:45,490
to continue some of the things that<font color="#E5E5E5"> we</font>

119
00:04:43,600 --> 00:04:48,370
talked<font color="#CCCCCC"> about all of this living off the</font>

120
00:04:45,490 --> 00:04:50,200
land mentality is going to become<font color="#E5E5E5"> really</font>

121
00:04:48,370 --> 00:04:51,760
interesting with<font color="#CCCCCC"> DevOps tools because</font>

122
00:04:50,200 --> 00:04:53,289
these are<font color="#E5E5E5"> already inherently trusted</font>

123
00:04:51,760 --> 00:04:54,520
tools within an environment they're not

124
00:04:53,290 --> 00:04:55,930
going<font color="#E5E5E5"> to fly a gayby they're not going</font>

125
00:04:54,520 --> 00:04:57,549
to flag your needs or other network

126
00:04:55,930 --> 00:05:00,310
controls that you have and they're

127
00:04:57,550 --> 00:05:02,140
allowing for remote code execution so if

128
00:05:00,310 --> 00:05:03,880
<font color="#E5E5E5">I said something to the effect of you</font>

129
00:05:02,140 --> 00:05:06,070
have something on your box that calls

130
00:05:03,880 --> 00:05:08,229
back to me every 10<font color="#CCCCCC"> to 15 minutes and</font>

131
00:05:06,070 --> 00:05:09,940
that runs any command I give it this

132
00:05:08,229 --> 00:05:11,770
sounds kind of like a botnet right I

133
00:05:09,940 --> 00:05:13,210
could be<font color="#CCCCCC"> talking about a DevOps tool</font>

134
00:05:11,770 --> 00:05:16,240
they're really analogous with the same

135
00:05:13,210 --> 00:05:19,450
thing<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we'll dive into that</font><font color="#E5E5E5"> in a</font>

136
00:05:16,240 --> 00:05:21,100
second but to kind of talk about<font color="#E5E5E5"> the</font>

137
00:05:19,450 --> 00:05:23,860
objective<font color="#CCCCCC"> here is that we want</font><font color="#E5E5E5"> to</font>

138
00:05:21,100 --> 00:05:25,810
automate these attack defense<font color="#CCCCCC"> ETFs to an</font>

139
00:05:23,860 --> 00:05:27,040
extent we know<font color="#CCCCCC"> that there's going</font><font color="#E5E5E5"> to be</font>

140
00:05:25,810 --> 00:05:28,870
an infrastructure that's inherently

141
00:05:27,040 --> 00:05:30,250
vulnerable right we're always going to

142
00:05:28,870 --> 00:05:31,479
have some kind<font color="#CCCCCC"> of default creds that</font>

143
00:05:30,250 --> 00:05:33,250
we're going<font color="#CCCCCC"> to be able to get onto</font><font color="#E5E5E5"> some</font>

144
00:05:31,479 --> 00:05:35,530
boxes with and we want to be able to do

145
00:05:33,250 --> 00:05:37,300
this fast some of the ways that people

146
00:05:35,530 --> 00:05:39,640
are trying to<font color="#E5E5E5"> automate this now everyone</font>

147
00:05:37,300 --> 00:05:42,070
that competes in these<font color="#E5E5E5"> usually have some</font>

148
00:05:39,640 --> 00:05:43,960
kind of subset of Python scripts or

149
00:05:42,070 --> 00:05:45,070
shell scripts that allow them to you

150
00:05:43,960 --> 00:05:46,419
know automate some of the simple things

151
00:05:45,070 --> 00:05:48,130
that<font color="#E5E5E5"> they're trying</font><font color="#CCCCCC"> to do these don't</font>

152
00:05:46,419 --> 00:05:50,229
really scale out well especially when

153
00:05:48,130 --> 00:05:52,180
you continuously add more machines to an

154
00:05:50,229 --> 00:05:54,310
environment or you go from one

155
00:05:52,180 --> 00:05:57,460
competition<font color="#E5E5E5"> to another so that's where</font>

156
00:05:54,310 --> 00:05:59,650
this whole DevOps mentality of run wants

157
00:05:57,460 --> 00:06:02,320
but run everywhere and accomplish the

158
00:05:59,650 --> 00:06:04,359
same goals can really be advantageous<font color="#CCCCCC"> to</font>

159
00:06:02,320 --> 00:06:04,870
these competitions<font color="#E5E5E5"> just one quick note</font>

160
00:06:04,360 --> 00:06:07,390
about

161
00:06:04,870 --> 00:06:09,010
is that like we're<font color="#E5E5E5"> talking specifically</font>

162
00:06:07,390 --> 00:06:11,260
on going back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> red teaming at</font>

163
00:06:09,010 --> 00:06:13,120
competitions as opposed to like from pen

164
00:06:11,260 --> 00:06:14,770
testing perspective so when your pen

165
00:06:13,120 --> 00:06:16,840
testing you might not get<font color="#E5E5E5"> default</font>

166
00:06:14,770 --> 00:06:20,349
credits and stuff probably like you most

167
00:06:16,840 --> 00:06:22,539
likely won't so that's where like we're

168
00:06:20,350 --> 00:06:24,580
coming<font color="#E5E5E5"> front with that but for the pen</font>

169
00:06:22,540 --> 00:06:27,280
test people on the house didn't forget

170
00:06:24,580 --> 00:06:29,200
about you so if you're<font color="#E5E5E5"> trying to</font>

171
00:06:27,280 --> 00:06:32,200
automate say like am i single<font color="#CCCCCC"> dump</font>

172
00:06:29,200 --> 00:06:33,640
across the entire network or it's my

173
00:06:32,200 --> 00:06:35,170
sequel then they have<font color="#E5E5E5"> no signal</font>

174
00:06:33,640 --> 00:06:36,789
databases or they have kind<font color="#E5E5E5"> of a</font>

175
00:06:35,170 --> 00:06:38,860
plethora mixed match of these

176
00:06:36,790 --> 00:06:41,050
technologies<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can use these kind of</font>

177
00:06:38,860 --> 00:06:43,990
DevOps tools to chain things together so

178
00:06:41,050 --> 00:06:45,580
when you hit a machine that has Redis or

179
00:06:43,990 --> 00:06:47,200
mongo DB or my sequel or<font color="#CCCCCC"> postgres</font>

180
00:06:45,580 --> 00:06:48,640
whatever the case may be you<font color="#E5E5E5"> can run</font>

181
00:06:47,200 --> 00:06:50,229
these series of<font color="#CCCCCC"> tests depending on what</font>

182
00:06:48,640 --> 00:06:52,510
they have so you can kind<font color="#E5E5E5"> of on the fly</font>

183
00:06:50,230 --> 00:06:55,000
make your own tools to get some of<font color="#E5E5E5"> the</font>

184
00:06:52,510 --> 00:06:58,810
<font color="#E5E5E5">low-hanging fruit so while our talk is</font>

185
00:06:55,000 --> 00:07:01,570
mainly related to just automating these

186
00:06:58,810 --> 00:07:03,520
red team attacks<font color="#CCCCCC"> etfs definitely want to</font>

187
00:07:01,570 --> 00:07:05,080
<font color="#E5E5E5">make</font><font color="#CCCCCC"> sure you guys are still thinking in</font>

188
00:07:03,520 --> 00:07:09,700
the realm of how<font color="#E5E5E5"> this could be used for</font>

189
00:07:05,080 --> 00:07:11,890
<font color="#E5E5E5">contest engagements so with that we're</font>

190
00:07:09,700 --> 00:07:14,400
going<font color="#CCCCCC"> to dive into ansible so out of</font>

191
00:07:11,890 --> 00:07:19,060
curiosity has anyone used ansible here

192
00:07:14,400 --> 00:07:20,739
nice school<font color="#CCCCCC"> got some hands so ansibles</font>

193
00:07:19,060 --> 00:07:22,900
really attractive for a number of

194
00:07:20,740 --> 00:07:25,690
reasons first off it's completely

195
00:07:22,900 --> 00:07:27,969
agentless so all it operates completely

196
00:07:25,690 --> 00:07:31,600
over ssh to the remote nodes so if you

197
00:07:27,970 --> 00:07:33,550
have ssh access to a remote host you can

198
00:07:31,600 --> 00:07:34,690
automate<font color="#E5E5E5"> ansible to run something called</font>

199
00:07:33,550 --> 00:07:37,840
a playbook which<font color="#CCCCCC"> talked</font><font color="#E5E5E5"> about in a</font>

200
00:07:34,690 --> 00:07:40,150
second on said host the best practices

201
00:07:37,840 --> 00:07:41,679
mechanism relies on you having<font color="#CCCCCC"> SSH keys</font>

202
00:07:40,150 --> 00:07:43,270
on<font color="#CCCCCC"> the remote</font><font color="#E5E5E5"> host but there's nothing</font>

203
00:07:41,680 --> 00:07:45,520
stopping you from just having passwords

204
00:07:43,270 --> 00:07:47,020
that you try against the host so if you

205
00:07:45,520 --> 00:07:49,840
<font color="#E5E5E5">put this in a for loop you</font><font color="#CCCCCC"> can now run</font>

206
00:07:47,020 --> 00:07:51,490
these ansible commands it basically is a

207
00:07:49,840 --> 00:07:53,650
brute<font color="#CCCCCC"> force mechanism to then launch</font>

208
00:07:51,490 --> 00:07:56,110
other evil things which we're going to

209
00:07:53,650 --> 00:07:59,169
dive into additionally<font color="#E5E5E5"> Red Hat just</font>

210
00:07:56,110 --> 00:08:00,880
<font color="#CCCCCC">bought ansible in 2014 so this is</font><font color="#E5E5E5"> going</font>

211
00:07:59,170 --> 00:08:02,080
<font color="#E5E5E5">to become more of a prevalent tool that</font>

212
00:08:00,880 --> 00:08:05,500
I believe you'll be seeing out in

213
00:08:02,080 --> 00:08:07,930
industry<font color="#CCCCCC"> Ike uses layer 7 for users</font>

214
00:08:05,500 --> 00:08:10,240
completely SSH for communication and it

215
00:08:07,930 --> 00:08:12,430
can actually be installed with hip the

216
00:08:10,240 --> 00:08:14,320
Python package manager so if you just<font color="#CCCCCC"> do</font>

217
00:08:12,430 --> 00:08:16,980
pip install ansible you now have an

218
00:08:14,320 --> 00:08:16,980
school on your machine

219
00:08:17,200 --> 00:08:21,349
so a simple ansible architecture kind of

220
00:08:19,700 --> 00:08:24,020
looks like this<font color="#E5E5E5"> you have your one</font>

221
00:08:21,350 --> 00:08:25,460
ansible master node so to speak and<font color="#CCCCCC"> you</font>

222
00:08:24,020 --> 00:08:28,159
have<font color="#E5E5E5"> these things called</font><font color="#CCCCCC"> playbooks that</font>

223
00:08:25,460 --> 00:08:30,710
<font color="#CCCCCC">i keep alluding to so the idea here is</font>

224
00:08:28,160 --> 00:08:32,419
to have repeatable task execution to

225
00:08:30,710 --> 00:08:34,100
accomplish the same goal regardless of

226
00:08:32,419 --> 00:08:35,750
what<font color="#E5E5E5"> your infrastructure is it's a</font>

227
00:08:34,100 --> 00:08:37,490
developer machine not a<font color="#E5E5E5"> problem</font>

228
00:08:35,750 --> 00:08:39,740
<font color="#E5E5E5">production servers your entire data</font>

229
00:08:37,490 --> 00:08:42,049
centers as long as<font color="#E5E5E5"> you have some kind</font><font color="#CCCCCC"> of</font>

230
00:08:39,740 --> 00:08:47,540
access via ssh to these machines you can

231
00:08:42,049 --> 00:08:50,780
execute ansible playbooks so<font color="#E5E5E5"> going into</font>

232
00:08:47,540 --> 00:08:52,819
targeting based on what your needs are

233
00:08:50,780 --> 00:08:54,890
ansible inventory is how you go ahead

234
00:08:52,820 --> 00:08:57,350
<font color="#E5E5E5">and specify the hosts that you're</font>

235
00:08:54,890 --> 00:08:59,330
<font color="#CCCCCC">looking for in an infrastructure so off</font>

236
00:08:57,350 --> 00:09:01,130
<font color="#E5E5E5">to the left here we see a format where</font>

237
00:08:59,330 --> 00:09:03,620
you had<font color="#E5E5E5"> just the brackets you specify</font>

238
00:09:01,130 --> 00:09:06,620
what kind of category these hosts are so

239
00:09:03,620 --> 00:09:08,570
you can say database servers web servers

240
00:09:06,620 --> 00:09:10,610
one of the case may be and then you can

241
00:09:08,570 --> 00:09:11,860
just list underneath them IP addresses

242
00:09:10,610 --> 00:09:13,940
or folder called by domain names

243
00:09:11,860 --> 00:09:15,650
additionally you can pass an ansible

244
00:09:13,940 --> 00:09:17,900
port which would be a different ssh port

245
00:09:15,650 --> 00:09:21,319
for that machine passwords and usernames

246
00:09:17,900 --> 00:09:22,939
so like<font color="#E5E5E5"> I said before if you don't have</font>

247
00:09:21,320 --> 00:09:25,060
keys on<font color="#CCCCCC"> the remote host it's not the end</font>

248
00:09:22,940 --> 00:09:27,980
of the<font color="#E5E5E5"> world you can still access them</font>

249
00:09:25,060 --> 00:09:30,349
just by doing a<font color="#CCCCCC"> command-line argument to</font>

250
00:09:27,980 --> 00:09:32,240
provide the password so this<font color="#E5E5E5"> will kind</font>

251
00:09:30,350 --> 00:09:34,520
of allows you to break down all the

252
00:09:32,240 --> 00:09:35,870
database servers I have these scripts or

253
00:09:34,520 --> 00:09:38,930
these sets of tests I need to do to

254
00:09:35,870 --> 00:09:40,400
accomplish again on those machines so

255
00:09:38,930 --> 00:09:43,010
this like i said before can just be

256
00:09:40,400 --> 00:09:44,900
changing a banner or stop jumping the

257
00:09:43,010 --> 00:09:49,370
big excuse me dumping<font color="#E5E5E5"> the database</font>

258
00:09:44,900 --> 00:09:51,590
entirely so finally to the thing that<font color="#CCCCCC"> i</font>

259
00:09:49,370 --> 00:09:53,930
keep talking<font color="#E5E5E5"> about ansible playbooks can</font>

260
00:09:51,590 --> 00:09:56,570
be described as executable documentation

261
00:09:53,930 --> 00:09:59,599
<font color="#E5E5E5">they're in a really easy to read yeah</font>

262
00:09:56,570 --> 00:10:01,880
mol format as of the time of this

263
00:09:59,600 --> 00:10:03,980
presentation they have<font color="#E5E5E5"> 200</font><font color="#CCCCCC"> plus core</font>

264
00:10:01,880 --> 00:10:07,580
modules which allow you to<font color="#E5E5E5"> do a variety</font>

265
00:10:03,980 --> 00:10:09,860
<font color="#CCCCCC">of tasks against</font><font color="#E5E5E5"> an environment and it's</font>

266
00:10:07,580 --> 00:10:11,480
just they execute sequentially so you

267
00:10:09,860 --> 00:10:13,370
list what you're trying to do and it'll

268
00:10:11,480 --> 00:10:15,380
just<font color="#CCCCCC"> go through and</font><font color="#E5E5E5"> then execute it in</font>

269
00:10:13,370 --> 00:10:17,600
that order you can also just specify

270
00:10:15,380 --> 00:10:19,280
only run the<font color="#CCCCCC"> mics evil commands against</font>

271
00:10:17,600 --> 00:10:21,290
these hosts or kind<font color="#E5E5E5"> of chop it up</font>

272
00:10:19,280 --> 00:10:23,390
however you'd like it to be these

273
00:10:21,290 --> 00:10:25,790
playbooks can be platform independent

274
00:10:23,390 --> 00:10:27,470
however what is set in theory doesn't

275
00:10:25,790 --> 00:10:28,880
necessarily translate to practice there

276
00:10:27,470 --> 00:10:29,699
are some caveats that you need to<font color="#E5E5E5"> be</font>

277
00:10:28,880 --> 00:10:31,199
aware<font color="#E5E5E5"> of so</font>

278
00:10:29,699 --> 00:10:32,939
definitely test this before you just

279
00:10:31,199 --> 00:10:36,959
kind of go<font color="#CCCCCC"> out and think that everything</font>

280
00:10:32,939 --> 00:10:38,759
will work super fine so as I said before

281
00:10:36,959 --> 00:10:40,169
it's in a yeah mol format and<font color="#E5E5E5"> you can</font>

282
00:10:38,759 --> 00:10:43,829
specify the options of what you're

283
00:10:40,169 --> 00:10:46,069
running<font color="#E5E5E5"> against with tags so let's see</font>

284
00:10:43,829 --> 00:10:48,839
<font color="#CCCCCC">what one of</font><font color="#E5E5E5"> these playbooks looks like</font>

285
00:10:46,069 --> 00:10:50,608
so this<font color="#E5E5E5"> is the typical structure it's a</font>

286
00:10:48,839 --> 00:10:53,549
pretty<font color="#E5E5E5"> small playbook at the top here</font>

287
00:10:50,609 --> 00:10:54,959
<font color="#E5E5E5">you see you specified the hosts so dub</font>

288
00:10:53,549 --> 00:10:57,449
dub dub going back<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the ansible</font>

289
00:10:54,959 --> 00:10:59,219
inventory file and specify the remote

290
00:10:57,449 --> 00:11:01,019
user that<font color="#E5E5E5"> you want to run as and then</font>

291
00:10:59,220 --> 00:11:02,609
<font color="#E5E5E5">you can specify some variables for what</font>

292
00:11:01,019 --> 00:11:05,309
you're trying to accomplish later on

293
00:11:02,609 --> 00:11:08,149
with these tasks so up here we see we

294
00:11:05,309 --> 00:11:10,290
have a github repo and we also have<font color="#E5E5E5"> a</font>

295
00:11:08,149 --> 00:11:12,419
pastebin document that we can<font color="#E5E5E5"> download</font>

296
00:11:10,290 --> 00:11:14,279
code from and then run it if we so

297
00:11:12,419 --> 00:11:17,339
choose and a directory where you<font color="#E5E5E5"> want to</font>

298
00:11:14,279 --> 00:11:19,019
store things on the remote<font color="#CCCCCC"> host so we</font>

299
00:11:17,339 --> 00:11:21,239
see<font color="#E5E5E5"> going through these tasks you seen</font>

300
00:11:19,019 --> 00:11:23,100
this naming tag this name tag is more of

301
00:11:21,239 --> 00:11:25,829
a descriptor which will actually fire

302
00:11:23,100 --> 00:11:28,279
back to<font color="#CCCCCC"> you when you run these if the</font>

303
00:11:25,829 --> 00:11:31,199
status was complete and what you've ran

304
00:11:28,279 --> 00:11:34,289
so the package is it going to install

305
00:11:31,199 --> 00:11:35,399
<font color="#E5E5E5">get get URL pretty intuitive right you</font>

306
00:11:34,289 --> 00:11:36,869
know it's going<font color="#E5E5E5"> to go download something</font>

307
00:11:35,399 --> 00:11:38,579
says where to save it and what

308
00:11:36,869 --> 00:11:41,220
permissions to save it<font color="#CCCCCC"> is you can</font>

309
00:11:38,579 --> 00:11:42,449
<font color="#E5E5E5">schedule tasks with cron etc etc so</font>

310
00:11:41,220 --> 00:11:43,739
everything<font color="#CCCCCC"> that you probably have some</font>

311
00:11:42,449 --> 00:11:45,479
kind of shell scripts for that you've

312
00:11:43,739 --> 00:11:47,819
used in these attack defense scenarios

313
00:11:45,480 --> 00:11:50,399
you can take and port to ansible fairly

314
00:11:47,819 --> 00:11:54,259
easily or build<font color="#E5E5E5"> up pretty robust tasks</font>

315
00:11:50,399 --> 00:11:56,639
with ansible so when you run these guys

316
00:11:54,259 --> 00:11:58,439
the really<font color="#E5E5E5"> nice thing about ansible is</font>

317
00:11:56,639 --> 00:12:01,019
that you get visible feedback almost

318
00:11:58,439 --> 00:12:02,699
<font color="#CCCCCC">immediately so in these attack defense</font>

319
00:12:01,019 --> 00:12:04,829
<font color="#E5E5E5">ETFs from a red team's point of view</font>

320
00:12:02,699 --> 00:12:07,618
it's not<font color="#E5E5E5"> just about got in the Box got a</font>

321
00:12:04,829 --> 00:12:08,878
<font color="#CCCCCC">root show i won you have to usually keep</font>

322
00:12:07,619 --> 00:12:11,669
track of what you're trying to do and

323
00:12:08,879 --> 00:12:13,379
when<font color="#E5E5E5"> you did</font><font color="#CCCCCC"> it so a lot of tools don't</font>

324
00:12:11,669 --> 00:12:15,269
necessarily have a reporting mechanism

325
00:12:13,379 --> 00:12:16,829
and<font color="#CCCCCC"> I can kind of be a pain</font><font color="#E5E5E5"> to sit there</font>

326
00:12:15,269 --> 00:12:20,399
<font color="#E5E5E5">and be like</font><font color="#CCCCCC"> ah what did i do like an</font>

327
00:12:16,829 --> 00:12:22,169
hour ago to<font color="#CCCCCC"> team six right well if you</font>

328
00:12:20,399 --> 00:12:23,749
divvy up your inventory file in a way

329
00:12:22,169 --> 00:12:25,709
that<font color="#E5E5E5"> you specify what team is</font>

330
00:12:23,749 --> 00:12:28,529
corresponds to what IP address or what

331
00:12:25,709 --> 00:12:30,029
domain names danceable can just

332
00:12:28,529 --> 00:12:32,819
immediately provide that feedback along

333
00:12:30,029 --> 00:12:34,079
with what time that these executed on so

334
00:12:32,819 --> 00:12:37,259
it's kind of a<font color="#E5E5E5"> nice way to keep track of</font>

335
00:12:34,079 --> 00:12:38,819
when you're doing<font color="#E5E5E5"> things so as you see</font>

336
00:12:37,259 --> 00:12:39,959
running<font color="#E5E5E5"> this against the remote host</font>

337
00:12:38,819 --> 00:12:41,729
this is what it looks like from the

338
00:12:39,959 --> 00:12:42,989
remote<font color="#E5E5E5"> host aspect this downloaded the</font>

339
00:12:41,730 --> 00:12:46,320
paceman<font color="#CCCCCC"> script and I</font>

340
00:12:42,990 --> 00:12:48,870
Who am I to all<font color="#E5E5E5"> see</font><font color="#CCCCCC"> that I'm roots so</font>

341
00:12:46,320 --> 00:12:51,620
it's<font color="#E5E5E5"> pretty straightforward in terms of</font>

342
00:12:48,870 --> 00:12:54,300
how you can execute these modules

343
00:12:51,620 --> 00:12:56,730
speaking of modules these are what goes

344
00:12:54,300 --> 00:12:58,410
in the interval and small tasks and if

345
00:12:56,730 --> 00:13:01,110
you're already thinking of like hey I

346
00:12:58,410 --> 00:13:04,490
have some super-secret sauce things that

347
00:13:01,110 --> 00:13:06,750
ansible might not already have tests and

348
00:13:04,490 --> 00:13:09,510
for you can<font color="#E5E5E5"> actually make them yourself</font>

349
00:13:06,750 --> 00:13:11,040
and all they are are simple Python

350
00:13:09,510 --> 00:13:13,709
scripts so if you already have Python

351
00:13:11,040 --> 00:13:15,870
scripts and corporative into ansible is

352
00:13:13,709 --> 00:13:17,790
going to be super<font color="#E5E5E5"> easy and that's</font>

353
00:13:15,870 --> 00:13:20,880
<font color="#E5E5E5">another attractive feature of this is</font>

354
00:13:17,790 --> 00:13:22,380
<font color="#CCCCCC">that it is all in Python so this is</font>

355
00:13:20,880 --> 00:13:23,820
right<font color="#E5E5E5"> from the ansible documentation but</font>

356
00:13:22,380 --> 00:13:26,640
it's really just<font color="#E5E5E5"> any task that you're</font>

357
00:13:23,820 --> 00:13:28,230
<font color="#E5E5E5">trying</font><font color="#CCCCCC"> to accomplish on a system and get</font>

358
00:13:26,640 --> 00:13:30,209
immediate feedback for so these<font color="#CCCCCC"> usually</font>

359
00:13:28,230 --> 00:13:31,560
aren't very like large functions it's

360
00:13:30,209 --> 00:13:33,500
usually<font color="#CCCCCC"> like really small things</font><font color="#E5E5E5"> like</font>

361
00:13:31,560 --> 00:13:36,569
changing some setting in a config file

362
00:13:33,500 --> 00:13:38,010
adding users dropping<font color="#E5E5E5"> SSH keys whatever</font>

363
00:13:36,570 --> 00:13:41,130
the case may be this is typically what

364
00:13:38,010 --> 00:13:43,230
<font color="#E5E5E5">you see with ansible modules and they</font>

365
00:13:41,130 --> 00:13:45,450
kind<font color="#CCCCCC"> of like allow you to perform some</font>

366
00:13:43,230 --> 00:13:46,620
basic tasks that being said nothing

367
00:13:45,450 --> 00:13:48,240
stopping you from writing some kind of

368
00:13:46,620 --> 00:13:50,520
<font color="#CCCCCC">Python cryptolocker and then running</font>

369
00:13:48,240 --> 00:13:55,350
this against remote machines and making

370
00:13:50,520 --> 00:13:57,360
the blue team's have a super bad time so

371
00:13:55,350 --> 00:13:59,370
now that<font color="#CCCCCC"> we've</font><font color="#E5E5E5"> gone through all</font><font color="#CCCCCC"> of that</font>

372
00:13:57,360 --> 00:14:01,920
we<font color="#E5E5E5"> kind of have a nice warm fuzzy</font>

373
00:13:59,370 --> 00:14:03,420
feeling of what ansible is and some of

374
00:14:01,920 --> 00:14:04,680
the capabilities of it we're going<font color="#E5E5E5"> to</font>

375
00:14:03,420 --> 00:14:06,449
talk a little bit about some<font color="#E5E5E5"> of the</font>

376
00:14:04,680 --> 00:14:08,069
offensive operations so to speak that

377
00:14:06,450 --> 00:14:10,410
you can do in these kinds of

378
00:14:08,070 --> 00:14:12,089
environments so once again they are

379
00:14:10,410 --> 00:14:15,510
geared towards<font color="#E5E5E5"> the</font><font color="#CCCCCC"> competition's that</font>

380
00:14:12,089 --> 00:14:18,390
college students compete in so fantastic

381
00:14:15,510 --> 00:14:21,390
this is a little bit outside<font color="#CCCCCC"> of your</font>

382
00:14:18,390 --> 00:14:24,770
normal day-to-day operations so how many

383
00:14:21,390 --> 00:14:26,730
<font color="#E5E5E5">people here have red black cap Python</font>

384
00:14:24,770 --> 00:14:28,649
awesome so you guys<font color="#E5E5E5"> are familiar with</font>

385
00:14:26,730 --> 00:14:30,720
the github botnet there where you just

386
00:14:28,649 --> 00:14:32,370
immediately<font color="#CCCCCC"> establish some kind of</font><font color="#E5E5E5"> agent</font>

387
00:14:30,720 --> 00:14:33,630
on the hosts and then you have it pulled

388
00:14:32,370 --> 00:14:37,220
from github and execute some kind of

389
00:14:33,630 --> 00:14:39,360
tasks well using the crown module

390
00:14:37,220 --> 00:14:41,550
corresponding with the get module you

391
00:14:39,360 --> 00:14:44,820
<font color="#CCCCCC">can set up to schedule ii pull from a</font>

392
00:14:41,550 --> 00:14:45,779
git repo so this seems you know pretty

393
00:14:44,820 --> 00:14:47,790
easy because<font color="#E5E5E5"> you can't necessarily</font>

394
00:14:45,779 --> 00:14:49,079
guarantee how long you can be on a box

395
00:14:47,790 --> 00:14:50,099
when you walk into these instructors you

396
00:14:49,079 --> 00:14:53,739
don't know what other teams<font color="#CCCCCC"> are going</font><font color="#E5E5E5"> to</font>

397
00:14:50,100 --> 00:14:55,570
<font color="#E5E5E5">do and you need to maximize the Mouser</font>

398
00:14:53,740 --> 00:14:56,860
is that you<font color="#E5E5E5"> get on excuse me the surface</font>

399
00:14:55,570 --> 00:14:58,360
<font color="#CCCCCC">area of blocks that you go to rather</font>

400
00:14:56,860 --> 00:15:00,280
than staying<font color="#E5E5E5"> on one box and securing it</font>

401
00:14:58,360 --> 00:15:02,080
you might<font color="#E5E5E5"> lose a foothold in another</font>

402
00:15:00,280 --> 00:15:03,790
machine so<font color="#E5E5E5"> you have to</font><font color="#CCCCCC"> move fast right</font>

403
00:15:02,080 --> 00:15:05,650
so this allows you to immediately

404
00:15:03,790 --> 00:15:08,050
schedule tasks so that whatever you<font color="#E5E5E5"> put</font>

405
00:15:05,650 --> 00:15:09,819
in this repo will execute on the<font color="#E5E5E5"> host</font>

406
00:15:08,050 --> 00:15:11,140
machine so that way you don't need to

407
00:15:09,820 --> 00:15:13,180
worry<font color="#E5E5E5"> about you actually maintaining</font>

408
00:15:11,140 --> 00:15:15,220
access through ssh or anything like that

409
00:15:13,180 --> 00:15:17,109
<font color="#E5E5E5">you can just update that repo from your</font>

410
00:15:15,220 --> 00:15:18,790
machine it'll pull down and execute

411
00:15:17,110 --> 00:15:21,100
whatever that case may be so if you lose

412
00:15:18,790 --> 00:15:23,349
<font color="#CCCCCC">SSH access not a problem</font><font color="#E5E5E5"> that cron jobs</font>

413
00:15:21,100 --> 00:15:24,550
they'll execute and you're still going

414
00:15:23,350 --> 00:15:26,260
<font color="#CCCCCC">to be able</font><font color="#E5E5E5"> to spawn another shell and</font>

415
00:15:24,550 --> 00:15:29,410
still have access to<font color="#CCCCCC"> the machine that</font>

416
00:15:26,260 --> 00:15:30,700
way so we have a nice ansible playbook

417
00:15:29,410 --> 00:15:32,890
that actually accomplishes this on a

418
00:15:30,700 --> 00:15:35,740
github repo<font color="#E5E5E5"> that were like sharing some</font>

419
00:15:32,890 --> 00:15:39,550
of these<font color="#E5E5E5"> tasks at the end of the end of</font>

420
00:15:35,740 --> 00:15:40,810
the talk so just like before when<font color="#E5E5E5"> you</font>

421
00:15:39,550 --> 00:15:43,540
run this that green gives you that

422
00:15:40,810 --> 00:15:45,609
immediate feedback saying that yes it's

423
00:15:43,540 --> 00:15:47,140
executed<font color="#CCCCCC"> okay where you see yellow</font>

424
00:15:45,610 --> 00:15:50,620
that's where things<font color="#E5E5E5"> change so that's</font>

425
00:15:47,140 --> 00:15:52,420
where a file was updated my file was

426
00:15:50,620 --> 00:15:54,880
deleted whether the case may be and any

427
00:15:52,420 --> 00:15:56,349
time you run any bash command it'll

428
00:15:54,880 --> 00:15:58,570
always<font color="#E5E5E5"> pronounce change because it's</font>

429
00:15:56,350 --> 00:16:00,340
going to redirect to standard out by

430
00:15:58,570 --> 00:16:02,050
default unless you specify to go to a

431
00:16:00,340 --> 00:16:04,240
<font color="#E5E5E5">file or something</font><font color="#CCCCCC"> like that so once</font>

432
00:16:02,050 --> 00:16:06,040
again<font color="#E5E5E5"> you can immediately know if these</font>

433
00:16:04,240 --> 00:16:07,660
tests aren't executing successfully

434
00:16:06,040 --> 00:16:13,569
against your environment or someone beat

435
00:16:07,660 --> 00:16:15,910
you to it so for the blue teens so going

436
00:16:13,570 --> 00:16:19,030
<font color="#CCCCCC">to like CCDC because i know</font><font color="#E5E5E5"> that ansible</font>

437
00:16:15,910 --> 00:16:21,339
was used successfully at the NEC cdc

438
00:16:19,030 --> 00:16:23,530
region this year and spilled by default

439
00:16:21,340 --> 00:16:25,270
does not log on the master node but on

440
00:16:23,530 --> 00:16:26,949
all the end nodes that's logging into it

441
00:16:25,270 --> 00:16:28,990
does leave some nice little traces of

442
00:16:26,950 --> 00:16:31,000
the tests that's commute executing ass

443
00:16:28,990 --> 00:16:33,520
so we<font color="#CCCCCC"> see that we have a highlighted red</font>

444
00:16:31,000 --> 00:16:35,710
ants little hyphen gate URL we saw this

445
00:16:33,520 --> 00:16:38,380
in a previous slide this was obviously

446
00:16:35,710 --> 00:16:41,770
downloading the paceman script to<font color="#CCCCCC"> be ran</font>

447
00:16:38,380 --> 00:16:43,900
later also<font color="#E5E5E5"> at crontab we see in this</font>

448
00:16:41,770 --> 00:16:46,090
really terrible read dark blue appear we

449
00:16:43,900 --> 00:16:48,189
have ansible and then scoring engine

450
00:16:46,090 --> 00:16:49,750
that being said this is an open source

451
00:16:48,190 --> 00:16:51,640
tool there's<font color="#CCCCCC"> nothing stopping you from</font>

452
00:16:49,750 --> 00:16:53,500
changing these values but just<font color="#E5E5E5"> so you</font>

453
00:16:51,640 --> 00:16:55,390
know by the default this<font color="#E5E5E5"> is what's going</font>

454
00:16:53,500 --> 00:17:00,550
to be left on machine when you run said

455
00:16:55,390 --> 00:17:02,560
tasks so now we've talked<font color="#E5E5E5"> about like</font>

456
00:17:00,550 --> 00:17:03,579
super basic way<font color="#E5E5E5"> to god machine make sure</font>

457
00:17:02,560 --> 00:17:05,359
that you can come<font color="#E5E5E5"> back to that machine</font>

458
00:17:03,580 --> 00:17:06,470
and a little bit<font color="#E5E5E5"> while you're</font>

459
00:17:05,359 --> 00:17:08,448
trying to move throughout the network

460
00:17:06,470 --> 00:17:10,400
but really at the end<font color="#E5E5E5"> of the day you</font>

461
00:17:08,449 --> 00:17:12,709
need<font color="#E5E5E5"> to be really really fast right you</font>

462
00:17:10,400 --> 00:17:14,449
can't risk other teams getting on<font color="#E5E5E5"> these</font>

463
00:17:12,709 --> 00:17:17,329
boxes before you and just like

464
00:17:14,449 --> 00:17:18,770
firewalling you off so antipolo has a

465
00:17:17,329 --> 00:17:20,599
lot of ways that<font color="#CCCCCC"> you can optimize</font><font color="#E5E5E5"> it</font>

466
00:17:18,770 --> 00:17:22,329
we're going<font color="#E5E5E5"> to talk about a few of them</font>

467
00:17:20,599 --> 00:17:25,760
here so some of these optimization facts

468
00:17:22,329 --> 00:17:27,349
allow you to basically skip a lot of

469
00:17:25,760 --> 00:17:29,240
core things the ansible would do that

470
00:17:27,349 --> 00:17:30,949
would be<font color="#E5E5E5"> advantageous to</font><font color="#CCCCCC"> system</font>

471
00:17:29,240 --> 00:17:32,360
administrators but not so much

472
00:17:30,950 --> 00:17:34,520
advantageous when you're<font color="#E5E5E5"> just trying to</font>

473
00:17:32,360 --> 00:17:36,500
move fast and execute things across to

474
00:17:34,520 --> 00:17:38,720
machine in a competitive environment so

475
00:17:36,500 --> 00:17:40,730
SSH pipelining basically limits the

476
00:17:38,720 --> 00:17:44,179
numbers of SSH connections but will

477
00:17:40,730 --> 00:17:46,100
maximize the command executed over them

478
00:17:44,179 --> 00:17:48,169
so it cuts down on overhead of how<font color="#CCCCCC"> many</font>

479
00:17:46,100 --> 00:17:50,510
connections to a given machine Forks

480
00:17:48,169 --> 00:17:52,010
obviously more threads depending<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

481
00:17:50,510 --> 00:17:54,290
tasks<font color="#CCCCCC"> that you try and execute what your</font>

482
00:17:52,010 --> 00:17:56,450
machine can handle you're going to have

483
00:17:54,290 --> 00:17:58,668
multiple SSH connections to multiple

484
00:17:56,450 --> 00:18:00,350
machines by default it's only five you

485
00:17:58,669 --> 00:18:03,559
can scale it up to whatever your machine

486
00:18:00,350 --> 00:18:06,320
can support but the<font color="#CCCCCC"> the most tedious</font><font color="#E5E5E5"> one</font>

487
00:18:03,559 --> 00:18:08,059
is this gathering facts so when you run

488
00:18:06,320 --> 00:18:09,439
in command against their about<font color="#CCCCCC"> host it</font>

489
00:18:08,059 --> 00:18:11,809
does this thing where basically profiles

490
00:18:09,440 --> 00:18:13,880
the system and understands what certain

491
00:18:11,809 --> 00:18:16,270
variables are so what is the<font color="#CCCCCC"> underlining</font>

492
00:18:13,880 --> 00:18:18,380
packaging system what<font color="#E5E5E5"> is the underlying</font>

493
00:18:16,270 --> 00:18:20,720
<font color="#E5E5E5">colonel this that and the other thing</font>

494
00:18:18,380 --> 00:18:22,610
<font color="#E5E5E5">and that cannon gets passed into some of</font>

495
00:18:20,720 --> 00:18:24,559
the tasks depending on the variables and

496
00:18:22,610 --> 00:18:27,678
tastic you're trying to execute<font color="#CCCCCC"> that</font>

497
00:18:24,559 --> 00:18:29,178
being said some of these take a very

498
00:18:27,679 --> 00:18:30,650
long time<font color="#CCCCCC"> to accomplish if you just need</font>

499
00:18:29,179 --> 00:18:31,610
<font color="#CCCCCC">to know the underlying packaging system</font>

500
00:18:30,650 --> 00:18:33,470
they've trying to do the platform

501
00:18:31,610 --> 00:18:35,928
independence way you don't need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do</font>

502
00:18:33,470 --> 00:18:38,150
this like long tedious task right so you

503
00:18:35,929 --> 00:18:39,830
can go ahead and disable this or<font color="#E5E5E5"> fine</font>

504
00:18:38,150 --> 00:18:44,179
<font color="#E5E5E5">tuning so that way you don't spend all</font>

505
00:18:39,830 --> 00:18:46,159
this to the time on a machine so to give

506
00:18:44,179 --> 00:18:49,010
<font color="#E5E5E5">you kind of an idea of how</font><font color="#CCCCCC"> long this</font>

507
00:18:46,160 --> 00:18:51,140
took with a simple way to figure out the

508
00:18:49,010 --> 00:18:53,990
uptime of machines<font color="#CCCCCC"> against two machines</font>

509
00:18:51,140 --> 00:18:56,929
this happened about 46 seconds so that

510
00:18:53,990 --> 00:18:58,790
seems super long than me just<font color="#CCCCCC"> to get up</font>

511
00:18:56,929 --> 00:19:00,440
time on some remote machines to run<font color="#E5E5E5"> that</font>

512
00:18:58,790 --> 00:19:02,899
against<font color="#E5E5E5"> right 46 seconds to get off time</font>

513
00:19:00,440 --> 00:19:04,880
of to machines so this<font color="#CCCCCC"> is before the</font>

514
00:19:02,900 --> 00:19:06,020
optimization so<font color="#E5E5E5"> after we went through</font>

515
00:19:04,880 --> 00:19:07,970
and<font color="#E5E5E5"> we said I don't really care</font><font color="#CCCCCC"> about</font>

516
00:19:06,020 --> 00:19:11,600
this gathering facts I want the many

517
00:19:07,970 --> 00:19:14,360
Forks as possible and I don't really

518
00:19:11,600 --> 00:19:17,178
care about I want SSH pipelining we're

519
00:19:14,360 --> 00:19:17,639
able to get it down<font color="#CCCCCC"> to just point a</font>

520
00:19:17,179 --> 00:19:20,459
little

521
00:19:17,639 --> 00:19:23,488
10 seconds so that<font color="#CCCCCC"> was reliable too we</font>

522
00:19:20,459 --> 00:19:25,769
tested<font color="#CCCCCC"> this three times so once again</font>

523
00:19:23,489 --> 00:19:27,989
this is definitely your tail more

524
00:19:25,769 --> 00:19:29,369
towards the CTF side of things<font color="#E5E5E5"> because</font>

525
00:19:27,989 --> 00:19:30,629
you do lose some of the inherent

526
00:19:29,369 --> 00:19:35,339
functionality that's just admins would

527
00:19:30,629 --> 00:19:36,658
use this tool for but now we're going<font color="#E5E5E5"> to</font>

528
00:19:35,339 --> 00:19:38,339
talk a<font color="#E5E5E5"> little bit about DevOps with dev</font>

529
00:19:36,659 --> 00:19:40,349
ops and that's where things get super

530
00:19:38,339 --> 00:19:42,809
buzzed already so apologize in advance

531
00:19:40,349 --> 00:19:45,059
everybody but<font color="#CCCCCC"> Brian's about to take over</font>

532
00:19:42,809 --> 00:19:46,979
<font color="#E5E5E5">and talk about saltstack and why this is</font>

533
00:19:45,059 --> 00:19:50,399
advantageous but we were<font color="#CCCCCC"> able to</font>

534
00:19:46,979 --> 00:19:53,459
bootstrap salt on three machines from

535
00:19:50,399 --> 00:19:54,809
scratch points it to our master salt

536
00:19:53,459 --> 00:19:58,289
master which bride will talk about in a

537
00:19:54,809 --> 00:20:01,799
second in just under two minutes and 25

538
00:19:58,289 --> 00:20:03,749
seconds so this was a pretty<font color="#E5E5E5"> fast</font>

539
00:20:01,799 --> 00:20:06,029
overall and we'll<font color="#E5E5E5"> talk about why this is</font>

540
00:20:03,749 --> 00:20:09,899
important in a second I think there are

541
00:20:06,029 --> 00:20:11,729
<font color="#CCCCCC">a few slides like down the road where I</font>

542
00:20:09,899 --> 00:20:14,789
actually like listed the like

543
00:20:11,729 --> 00:20:16,739
<font color="#CCCCCC">bootstrapping command so like I'll show</font>

544
00:20:14,789 --> 00:20:19,139
you get<font color="#E5E5E5"> those guys you know in a bit but</font>

545
00:20:16,739 --> 00:20:22,499
there's like one command you can<font color="#E5E5E5"> run</font>

546
00:20:19,139 --> 00:20:24,389
that only uses<font color="#E5E5E5"> Python to pull down and</font>

547
00:20:22,499 --> 00:20:25,739
you're all lived to which is default

548
00:20:24,389 --> 00:20:28,228
python module you don't actually<font color="#E5E5E5"> need to</font>

549
00:20:25,739 --> 00:20:30,029
<font color="#CCCCCC">a pip install anything additional so</font>

550
00:20:28,229 --> 00:20:32,969
what it does<font color="#CCCCCC"> is it pulls down the</font>

551
00:20:30,029 --> 00:20:36,539
bootstrapping script from salts website

552
00:20:32,969 --> 00:20:38,729
and it will<font color="#E5E5E5"> execute it so that it will</font>

553
00:20:36,539 --> 00:20:40,019
install the salt minion on the nose to

554
00:20:38,729 --> 00:20:42,659
point back to<font color="#E5E5E5"> your master and you can</font>

555
00:20:40,019 --> 00:20:44,219
push out like different tasks to it you

556
00:20:42,659 --> 00:20:47,129
can solve so yeah we talked<font color="#CCCCCC"> about that</font>

557
00:20:44,219 --> 00:20:48,599
<font color="#E5E5E5">and good but that still means that there</font>

558
00:20:47,129 --> 00:20:50,099
isn't there there is<font color="#CCCCCC"> so sport for those</font>

559
00:20:48,599 --> 00:20:52,049
old dirty bass tracks that everyone has

560
00:20:50,099 --> 00:20:53,279
right so if you compete in this

561
00:20:52,049 --> 00:20:54,839
competition you start<font color="#CCCCCC"> collecting as a</font>

562
00:20:53,279 --> 00:20:56,549
series of scripts that you've used from

563
00:20:54,839 --> 00:20:58,589
A to B and you collect them just in case

564
00:20:56,549 --> 00:21:01,349
to be useful<font color="#E5E5E5"> again so it's super easy to</font>

565
00:20:58,589 --> 00:21:03,389
port these two ansible and use them in a

566
00:21:01,349 --> 00:21:06,599
variety of ways once again we have<font color="#E5E5E5"> these</font>

567
00:21:03,389 --> 00:21:08,008
kind<font color="#E5E5E5"> of stuff up on the github so that</font>

568
00:21:06,599 --> 00:21:09,239
way we can show you<font color="#CCCCCC"> guys like a skeleton</font>

569
00:21:08,009 --> 00:21:11,339
key of how you might be<font color="#E5E5E5"> able to use</font>

570
00:21:09,239 --> 00:21:17,339
<font color="#E5E5E5">these in these attack defendant</font>

571
00:21:11,339 --> 00:21:20,009
environments so Anton was pretty<font color="#E5E5E5"> cool</font>

572
00:21:17,339 --> 00:21:22,019
but<font color="#E5E5E5"> I'm a big fan of using salt for this</font>

573
00:21:20,009 --> 00:21:24,179
kind of stuff there a couple of reasons

574
00:21:22,019 --> 00:21:27,479
<font color="#CCCCCC">for that mostly its architecture was</font>

575
00:21:24,179 --> 00:21:28,010
which I'll get into in a bit but a

576
00:21:27,479 --> 00:21:30,050
little bit of

577
00:21:28,010 --> 00:21:33,790
background is<font color="#CCCCCC"> that I'm as I mentioned</font>

578
00:21:30,050 --> 00:21:36,530
<font color="#E5E5E5">it's agent based so how it works is the</font>

579
00:21:33,790 --> 00:21:37,940
agents on the salt minions will check in

580
00:21:36,530 --> 00:21:40,340
with the<font color="#CCCCCC"> master you see if there are any</font>

581
00:21:37,940 --> 00:21:41,690
tasks that are signed for it and if

582
00:21:40,340 --> 00:21:44,350
there are then it will execute them and

583
00:21:41,690 --> 00:21:47,090
index checks in on a fairly regular

584
00:21:44,350 --> 00:21:50,000
basis<font color="#CCCCCC"> so like a few every few seconds by</font>

585
00:21:47,090 --> 00:21:51,980
default so another interesting thing is

586
00:21:50,000 --> 00:21:54,530
that the master meetings run as root by

587
00:21:51,980 --> 00:21:57,080
default so dirty computation events it's

588
00:21:54,530 --> 00:21:59,560
useful<font color="#CCCCCC"> having root on the</font><font color="#E5E5E5"> box with salt</font>

589
00:21:57,080 --> 00:22:03,110
minions because you're rude on the<font color="#E5E5E5"> box</font>

590
00:21:59,560 --> 00:22:04,879
so by default the master runs his route

591
00:22:03,110 --> 00:22:06,679
but if you're actually using this in an

592
00:22:04,880 --> 00:22:08,960
enterprise you can change that and you

593
00:22:06,680 --> 00:22:10,610
can also configure it so that it uses

594
00:22:08,960 --> 00:22:12,740
some sort<font color="#E5E5E5"> of external authentication</font>

595
00:22:10,610 --> 00:22:15,500
like LDAP or Active Directory

596
00:22:12,740 --> 00:22:17,810
Integration and so you can actually

597
00:22:15,500 --> 00:22:19,280
limit the commands<font color="#CCCCCC"> that like different</font>

598
00:22:17,810 --> 00:22:21,050
people and your organization are able to

599
00:22:19,280 --> 00:22:22,520
actually execute and what host they can

600
00:22:21,050 --> 00:22:24,440
do that but from a competition

601
00:22:22,520 --> 00:22:27,710
perspective that's not really a 22

602
00:22:24,440 --> 00:22:32,120
necessary by default<font color="#E5E5E5"> salt listens on</font>

603
00:22:27,710 --> 00:22:34,760
<font color="#CCCCCC">port 450 5 or 4 5 06 and I read that in</font>

604
00:22:32,120 --> 00:22:38,050
their documentation by default saw

605
00:22:34,760 --> 00:22:41,770
minions try to connect<font color="#E5E5E5"> to ideas to the</font>

606
00:22:38,050 --> 00:22:43,639
host salt so when I first read that

607
00:22:41,770 --> 00:22:45,470
<font color="#CCCCCC">mossley oh you could probably take</font>

608
00:22:43,640 --> 00:22:47,180
advantage of that<font color="#E5E5E5"> somehow like if you're</font>

609
00:22:45,470 --> 00:22:48,380
able but I mean<font color="#E5E5E5"> if you're able to get on</font>

610
00:22:47,180 --> 00:22:49,550
some of these dns server they're

611
00:22:48,380 --> 00:22:55,700
probably gonna<font color="#E5E5E5"> have a worse problem than</font>

612
00:22:49,550 --> 00:22:58,040
that so uh so a couple of like the

613
00:22:55,700 --> 00:23:00,590
terminology that salt uses is that it

614
00:22:58,040 --> 00:23:02,480
uses what's called a salt grain and so

615
00:23:00,590 --> 00:23:04,790
what those allow you to do is narrow

616
00:23:02,480 --> 00:23:07,160
down your target set so you can say<font color="#E5E5E5"> I</font>

617
00:23:04,790 --> 00:23:09,260
want all of the Ubuntu boxes or

618
00:23:07,160 --> 00:23:12,080
everything<font color="#E5E5E5"> that is debian-based or</font>

619
00:23:09,260 --> 00:23:13,730
anything running the<font color="#E5E5E5"> Linux kernel or all</font>

620
00:23:12,080 --> 00:23:16,040
windows machines things like that and

621
00:23:13,730 --> 00:23:18,290
<font color="#E5E5E5">then you can give them tasks to execute</font>

622
00:23:16,040 --> 00:23:20,300
so that right there an example<font color="#CCCCCC"> of</font>

623
00:23:18,290 --> 00:23:24,110
running<font color="#E5E5E5"> Who am I on everything</font><font color="#CCCCCC"> that</font>

624
00:23:20,300 --> 00:23:26,419
<font color="#CCCCCC">Scoob unto uh so there</font><font color="#E5E5E5"> are salt modules</font>

625
00:23:24,110 --> 00:23:28,699
<font color="#E5E5E5">two different</font><font color="#CCCCCC"> kinds there are execution</font>

626
00:23:26,420 --> 00:23:31,130
modules and state modules so the

627
00:23:28,700 --> 00:23:33,380
execution modules are just a bunch of

628
00:23:31,130 --> 00:23:36,470
built in modules that<font color="#E5E5E5"> you can add two</font>

629
00:23:33,380 --> 00:23:39,940
states so for<font color="#E5E5E5"> example the command module</font>

630
00:23:36,470 --> 00:23:41,370
is a built-in excuse execution module

631
00:23:39,940 --> 00:23:42,870
and

632
00:23:41,370 --> 00:23:46,379
with the state modules you can write

633
00:23:42,870 --> 00:23:48,780
them and their files that basically can

634
00:23:46,380 --> 00:23:50,670
configure any of the hosts<font color="#E5E5E5"> that are</font>

635
00:23:48,780 --> 00:23:52,170
checking in however you<font color="#E5E5E5"> want them</font><font color="#CCCCCC"> to so</font>

636
00:23:50,670 --> 00:23:55,920
we'll get<font color="#E5E5E5"> into</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> couple of different</font>

637
00:23:52,170 --> 00:23:58,290
ways<font color="#CCCCCC"> that you can use those for and so</font>

638
00:23:55,920 --> 00:23:59,640
the state modules are similar to ansible

639
00:23:58,290 --> 00:24:02,670
playbooks that's basically the same

640
00:23:59,640 --> 00:24:05,520
<font color="#CCCCCC">thing and they're also</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> yanil format so</font>

641
00:24:02,670 --> 00:24:07,110
the syntax is very similar as well and

642
00:24:05,520 --> 00:24:09,510
then there are salt formulas which are

643
00:24:07,110 --> 00:24:11,939
pre-written<font color="#E5E5E5"> salt states that are like</font>

644
00:24:09,510 --> 00:24:14,250
pushed up to<font color="#E5E5E5"> the official salt formula</font>

645
00:24:11,940 --> 00:24:16,080
repo<font color="#CCCCCC"> that people write so that if you</font>

646
00:24:14,250 --> 00:24:17,550
want to enable rdp on windows boxes

647
00:24:16,080 --> 00:24:19,020
somebody went through all the time and

648
00:24:17,550 --> 00:24:20,669
actually figured<font color="#E5E5E5"> out how to use those so</font>

649
00:24:19,020 --> 00:24:23,490
you<font color="#CCCCCC"> can actually</font><font color="#E5E5E5"> take those and build</font>

650
00:24:20,670 --> 00:24:26,700
those into the salt states that you're

651
00:24:23,490 --> 00:24:29,100
writing and then there are what's called

652
00:24:26,700 --> 00:24:31,740
salt pillars which are also just salt

653
00:24:29,100 --> 00:24:34,020
state files like<font color="#E5E5E5"> the yambol format that</font>

654
00:24:31,740 --> 00:24:36,270
are just a bunch of<font color="#CCCCCC"> variables so if you</font>

655
00:24:34,020 --> 00:24:40,230
have a salt state that adds a<font color="#E5E5E5"> bunch of</font>

656
00:24:36,270 --> 00:24:43,350
users to the machines what you can do is

657
00:24:40,230 --> 00:24:45,000
in the pillar files you can say like

658
00:24:43,350 --> 00:24:47,280
here this is<font color="#CCCCCC"> the username I want this is</font>

659
00:24:45,000 --> 00:24:49,860
the name this<font color="#CCCCCC"> is the UID this is the GID</font>

660
00:24:47,280 --> 00:24:52,590
this is all the<font color="#E5E5E5"> G cos information that</font>

661
00:24:49,860 --> 00:24:55,020
you want<font color="#CCCCCC"> to add for these users so it's</font>

662
00:24:52,590 --> 00:25:00,030
<font color="#CCCCCC">really like fine tunable to be able</font><font color="#E5E5E5"> to</font>

663
00:24:55,020 --> 00:25:03,090
take advantage<font color="#E5E5E5"> of salt pillars and then</font>

664
00:25:00,030 --> 00:25:05,580
so why you salt for like from a

665
00:25:03,090 --> 00:25:09,300
competition aspect why I really like it

666
00:25:05,580 --> 00:25:11,580
is<font color="#E5E5E5"> that as we noted before it uses a</font>

667
00:25:09,300 --> 00:25:13,620
polling mechanism so the minions check

668
00:25:11,580 --> 00:25:16,500
into the hosts there's nothing<font color="#CCCCCC"> stopping</font>

669
00:25:13,620 --> 00:25:18,570
you from running the master on port 80

670
00:25:16,500 --> 00:25:21,780
<font color="#E5E5E5">and 443 which will most likely be</font>

671
00:25:18,570 --> 00:25:23,909
allowed outbound so once people figure

672
00:25:21,780 --> 00:25:26,490
<font color="#CCCCCC">out how to write firewall rules they'll</font>

673
00:25:23,910 --> 00:25:28,679
usually block ingress stuff in there's

674
00:25:26,490 --> 00:25:31,620
<font color="#E5E5E5">like not really any</font><font color="#CCCCCC"> reason that</font><font color="#E5E5E5"> people</font>

675
00:25:28,679 --> 00:25:33,570
need external ssh access to their hosts

676
00:25:31,620 --> 00:25:36,780
so they'll probably block you off that

677
00:25:33,570 --> 00:25:39,240
way but chances are that they're still

678
00:25:36,780 --> 00:25:41,850
going to allow 80 and 443 out because

679
00:25:39,240 --> 00:25:42,550
everybody allows without and people

680
00:25:41,850 --> 00:25:44,350
<font color="#CCCCCC">really suck</font>

681
00:25:42,550 --> 00:25:47,950
running egress filters in general anyway

682
00:25:44,350 --> 00:25:51,730
so yeah<font color="#E5E5E5"> that's another cool reason why I</font>

683
00:25:47,950 --> 00:25:55,170
like it uh so as I mentioned before

684
00:25:51,730 --> 00:25:57,580
there's bootstrapping so you can install

685
00:25:55,170 --> 00:25:59,740
if you just<font color="#CCCCCC"> upload this all minion</font>

686
00:25:57,580 --> 00:26:01,659
executable to a windows box you can

687
00:25:59,740 --> 00:26:03,100
assault with one command and it will do

688
00:26:01,660 --> 00:26:04,660
everything in the background for you

689
00:26:03,100 --> 00:26:06,939
there's no additional configuration that

690
00:26:04,660 --> 00:26:09,760
you need to do you just say hey I want

691
00:26:06,940 --> 00:26:12,310
to point this at this master server and

692
00:26:09,760 --> 00:26:13,870
it will take<font color="#E5E5E5"> care of everything else and</font>

693
00:26:12,310 --> 00:26:15,879
then that's the command that will

694
00:26:13,870 --> 00:26:19,120
download the bootstrap script for like

695
00:26:15,880 --> 00:26:23,200
Nick's boxes and it will configure it

696
00:26:19,120 --> 00:26:24,669
and then point back to<font color="#E5E5E5"> the master so so</font>

697
00:26:23,200 --> 00:26:30,550
what would<font color="#CCCCCC"> you do as a red team or for</font>

698
00:26:24,670 --> 00:26:35,320
an event any ideas no I<font color="#E5E5E5"> 0 who's driving</font>

699
00:26:30,550 --> 00:26:42,310
what all<font color="#CCCCCC"> right</font><font color="#E5E5E5"> yep right good call all</font>

700
00:26:35,320 --> 00:26:47,010
<font color="#E5E5E5">right any other</font><font color="#CCCCCC"> ideas yeah add users</font>

701
00:26:42,310 --> 00:26:51,730
good idea<font color="#E5E5E5"> any other ideas nice good</font><font color="#CCCCCC"> god</font>

702
00:26:47,010 --> 00:26:54,690
so what we do is we came up with a proof

703
00:26:51,730 --> 00:27:01,270
of concept with a few of these things so

704
00:26:54,690 --> 00:27:03,670
dropping<font color="#E5E5E5"> ssh keys adding users ensuring</font>

705
00:27:01,270 --> 00:27:08,020
remote access is enabling<font color="#CCCCCC"> ssh and rdp</font>

706
00:27:03,670 --> 00:27:11,320
and like installing stuff basically so

707
00:27:08,020 --> 00:27:13,240
if you're dropping sui de binary's if

708
00:27:11,320 --> 00:27:14,590
there's no GCC on the box you're

709
00:27:13,240 --> 00:27:17,890
probably gonna<font color="#E5E5E5"> have a bad time compiling</font>

710
00:27:14,590 --> 00:27:22,600
that so you're going to<font color="#CCCCCC"> want to install</font>

711
00:27:17,890 --> 00:27:24,970
GCC in order to be able to do that so

712
00:27:22,600 --> 00:27:27,550
here's an example<font color="#E5E5E5"> of what's called the</font>

713
00:27:24,970 --> 00:27:31,780
top file so every time minions check in

714
00:27:27,550 --> 00:27:34,149
they look for this<font color="#E5E5E5"> file and inside the</font>

715
00:27:31,780 --> 00:27:36,460
top<font color="#E5E5E5"> file is where you list all the other</font>

716
00:27:34,150 --> 00:27:38,440
state modules that you<font color="#E5E5E5"> want the minions</font>

717
00:27:36,460 --> 00:27:39,650
<font color="#E5E5E5">to execute so these are</font><font color="#CCCCCC"> just a few</font>

718
00:27:38,440 --> 00:27:41,540
modules that

719
00:27:39,650 --> 00:27:43,460
<font color="#E5E5E5">I wrote with the extension</font><font color="#CCCCCC"> of the ND</font>

720
00:27:41,540 --> 00:27:46,850
next one because<font color="#CCCCCC"> that was a soft formula</font>

721
00:27:43,460 --> 00:27:48,950
that<font color="#E5E5E5"> I was using that will like the</font>

722
00:27:46,850 --> 00:27:51,139
<font color="#CCCCCC">wild-card there the start will say on</font>

723
00:27:48,950 --> 00:27:54,920
every host that checks in I want you to

724
00:27:51,140 --> 00:27:57,470
install like these packages add these

725
00:27:54,920 --> 00:28:00,230
users and make sure<font color="#E5E5E5"> these services are</font>

726
00:27:57,470 --> 00:28:01,790
enabled and drop some<font color="#CCCCCC"> scit binaries so</font>

727
00:28:00,230 --> 00:28:04,090
this is before i actually had windows

728
00:28:01,790 --> 00:28:07,520
hosts in the environment than<font color="#E5E5E5"> i had</font><font color="#CCCCCC"> to</font>

729
00:28:04,090 --> 00:28:09,199
add that after<font color="#CCCCCC"> I guess I just forgot</font><font color="#E5E5E5"> to</font>

730
00:28:07,520 --> 00:28:12,470
change that because probably<font color="#CCCCCC"> have a bad</font>

731
00:28:09,200 --> 00:28:17,480
time like dropping<font color="#CCCCCC"> sui de binary's on</font>

732
00:28:12,470 --> 00:28:18,890
<font color="#CCCCCC">windows but so yeah the next so here's</font>

733
00:28:17,480 --> 00:28:21,770
an example<font color="#E5E5E5"> just what i did for</font>

734
00:28:18,890 --> 00:28:24,370
installing GCC so easy at<font color="#E5E5E5"> the top there</font>

735
00:28:21,770 --> 00:28:27,350
you're using grains to actually limit

736
00:28:24,370 --> 00:28:29,750
what hosts that<font color="#E5E5E5"> are checking in so this</font>

737
00:28:27,350 --> 00:28:33,260
is<font color="#E5E5E5"> saying</font><font color="#CCCCCC"> that every linux box installed</font>

738
00:28:29,750 --> 00:28:36,670
GCC out and then you can see down here

739
00:28:33,260 --> 00:28:40,400
install them on debian based<font color="#E5E5E5"> os's and</font>

740
00:28:36,670 --> 00:28:50,540
it's called vim enhanced<font color="#CCCCCC"> on like</font><font color="#E5E5E5"> red hat</font>

741
00:28:40,400 --> 00:28:52,460
based phones because an ass mixer so if

742
00:28:50,540 --> 00:28:56,210
you tell you a job as your ID binaries

743
00:28:52,460 --> 00:28:59,540
so on<font color="#E5E5E5"> your</font><font color="#CCCCCC"> cell</font><font color="#E5E5E5"> master server you would</font>

744
00:28:56,210 --> 00:29:02,510
have a source file that every time the

745
00:28:59,540 --> 00:29:05,060
minions check in<font color="#E5E5E5"> they will make sure</font>

746
00:29:02,510 --> 00:29:08,840
<font color="#E5E5E5">that they have this file on the box and</font>

747
00:29:05,060 --> 00:29:11,929
they'll store it in tempt SRC<font color="#E5E5E5"> CC and</font>

748
00:29:08,840 --> 00:29:14,449
then there's the command to download I

749
00:29:11,930 --> 00:29:17,110
mean to compile and then change the

750
00:29:14,450 --> 00:29:19,550
owner and file permissions for the

751
00:29:17,110 --> 00:29:22,129
executables themselves so that it

752
00:29:19,550 --> 00:29:24,800
actually is an su<font color="#E5E5E5"> I do binary and you</font>

753
00:29:22,130 --> 00:29:27,500
can write a for loop that says<font color="#E5E5E5"> I want to</font>

754
00:29:24,800 --> 00:29:28,090
install all of these<font color="#E5E5E5"> I mean compile all</font>

755
00:29:27,500 --> 00:29:30,700
these

756
00:29:28,090 --> 00:29:32,408
and put<font color="#E5E5E5"> these at these locations so for</font>

757
00:29:30,700 --> 00:29:38,169
each file you can give<font color="#E5E5E5"> it like a full</font>

758
00:29:32,409 --> 00:29:40,890
pass to what do you want to drop them so

759
00:29:38,169 --> 00:29:43,809
to<font color="#E5E5E5"> make sure that ssh is running on</font>

760
00:29:40,890 --> 00:29:45,820
Debian RedHat base<font color="#CCCCCC"> OS is this is</font>

761
00:29:43,809 --> 00:29:48,399
literally all you have to do is say SS

762
00:29:45,820 --> 00:29:50,379
agent sshd and then if it's not running

763
00:29:48,400 --> 00:29:54,730
it will make<font color="#E5E5E5"> sure that it's running it</font>

764
00:29:50,380 --> 00:29:56,529
will restart it for it so one thing that

765
00:29:54,730 --> 00:29:58,390
you're going<font color="#CCCCCC"> to want to do is cover your</font>

766
00:29:56,529 --> 00:30:02,620
tracks and that's actually<font color="#E5E5E5"> really easy</font>

767
00:29:58,390 --> 00:30:05,820
to do so<font color="#E5E5E5"> you can just configure a log</font>

768
00:30:02,620 --> 00:30:09,520
level to be quiet in the salt minion

769
00:30:05,820 --> 00:30:13,210
configuration file and<font color="#CCCCCC"> if you don't</font><font color="#E5E5E5"> like</font>

770
00:30:09,520 --> 00:30:16,210
default it runs as warning and so that

771
00:30:13,210 --> 00:30:19,149
doesn't actually list any commands<font color="#E5E5E5"> that</font>

772
00:30:16,210 --> 00:30:21,730
run successfully it will stuff that you

773
00:30:19,149 --> 00:30:23,709
do not want correctly so what I do is I

774
00:30:21,730 --> 00:30:25,510
ran<font color="#E5E5E5"> Who am I but it spells way am I</font>

775
00:30:23,710 --> 00:30:27,909
wrong and you can see at<font color="#CCCCCC"> the bottom</font>

776
00:30:25,510 --> 00:30:29,590
there am<font color="#CCCCCC"> I not found for anybody that's</font>

777
00:30:27,909 --> 00:30:31,809
sitting in the way back sorry the fog

778
00:30:29,590 --> 00:30:35,408
was really small but this was a really

779
00:30:31,809 --> 00:30:38,590
small picture so going<font color="#E5E5E5"> back to</font>

780
00:30:35,409 --> 00:30:41,110
triggering everyone so the agile<font color="#E5E5E5"> Red</font>

781
00:30:38,590 --> 00:30:43,270
<font color="#E5E5E5">Team workflow so how you move with</font>

782
00:30:41,110 --> 00:30:47,760
<font color="#E5E5E5">environment and how you operate as a red</font>

783
00:30:43,270 --> 00:30:49,510
team so typically the whole idea<font color="#CCCCCC"> behind</font>

784
00:30:47,760 --> 00:30:52,090
being successful in these competitions

785
00:30:49,510 --> 00:30:55,270
was uterus get<font color="#CCCCCC"> onto</font><font color="#E5E5E5"> the box</font><font color="#CCCCCC"> you'd</font>

786
00:30:52,090 --> 00:30:56,470
persist somehow do stuff and then profit

787
00:30:55,270 --> 00:30:58,450
at the end depending on how long you've

788
00:30:56,470 --> 00:31:01,360
had that box for and how the scoring

789
00:30:58,450 --> 00:31:03,549
service works so if it<font color="#E5E5E5"> was checking in</font>

790
00:31:01,360 --> 00:31:06,189
for a banner making sure<font color="#E5E5E5"> that it was</font>

791
00:31:03,549 --> 00:31:09,429
always your banner so that you would get

792
00:31:06,190 --> 00:31:11,620
<font color="#E5E5E5">the points for it right well the way</font>

793
00:31:09,429 --> 00:31:13,809
<font color="#E5E5E5">that we're proposing now is using</font>

794
00:31:11,620 --> 00:31:15,908
ansible playbooks to quickly move

795
00:31:13,809 --> 00:31:17,678
whatever it is your secrets losses to

796
00:31:15,909 --> 00:31:20,409
all of these<font color="#CCCCCC"> machines and</font><font color="#E5E5E5"> then using</font>

797
00:31:17,679 --> 00:31:22,809
saltstack for that long term access to

798
00:31:20,409 --> 00:31:27,820
bypass egress filters doing<font color="#CCCCCC"> DevOps for</font>

799
00:31:22,809 --> 00:31:29,770
your DevOps buzzword yeah so we're<font color="#CCCCCC"> going</font>

800
00:31:27,820 --> 00:31:31,658
into<font color="#E5E5E5"> about 15 minutes left we're gonna</font>

801
00:31:29,770 --> 00:31:33,429
try to do a live demo for this we left

802
00:31:31,659 --> 00:31:35,620
15 minutes because we're sure this live

803
00:31:33,429 --> 00:31:37,390
demo is gonna be a lot of demo if you've

804
00:31:35,620 --> 00:31:39,489
ever been<font color="#CCCCCC"> to done they usually fail so</font>

805
00:31:37,390 --> 00:31:40,690
as we set this up<font color="#E5E5E5"> do</font>

806
00:31:39,490 --> 00:31:43,900
guys have any questions<font color="#CCCCCC"> that you want to</font>

807
00:31:40,690 --> 00:31:51,400
shout out about the<font color="#CCCCCC"> dev ops or ants will</font>

808
00:31:43,900 --> 00:32:03,250
install sex stuff in general no

809
00:31:51,400 --> 00:32:11,530
questions yeah<font color="#E5E5E5"> okay so i should probably</font>

810
00:32:03,250 --> 00:32:16,020
zoom in on this<font color="#CCCCCC"> produce everybody see</font>

811
00:32:11,530 --> 00:32:16,020
that well we'll make it a little bigger

812
00:32:16,590 --> 00:32:23,169
<font color="#CCCCCC">alright cool okay so let's go you can</font>

813
00:32:21,070 --> 00:32:25,689
see on the top there that's on the salt

814
00:32:23,170 --> 00:32:28,570
master server and what that's doing is

815
00:32:25,690 --> 00:32:31,090
every time a minion checks in for the

816
00:32:28,570 --> 00:32:32,770
first time it will list its keys that

817
00:32:31,090 --> 00:32:36,040
you have to accept in order to be able

818
00:32:32,770 --> 00:32:38,830
to start pushing stuff to those boxes

819
00:32:36,040 --> 00:32:41,110
yeah so we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to go ahead and</font><font color="#E5E5E5"> run</font>

820
00:32:38,830 --> 00:32:43,240
this ansible playbook which just goes

821
00:32:41,110 --> 00:32:44,559
out users ansible to install<font color="#E5E5E5"> salt sec on</font>

822
00:32:43,240 --> 00:32:45,880
all these machines and then<font color="#E5E5E5"> we'll call</font>

823
00:32:44,559 --> 00:32:48,309
back to us so<font color="#CCCCCC"> then</font><font color="#E5E5E5"> we can execute</font>

824
00:32:45,880 --> 00:32:50,260
whatever commands we want so all it's

825
00:32:48,309 --> 00:32:53,110
doing is executing that bootstrap

826
00:32:50,260 --> 00:32:56,260
command that was using<font color="#CCCCCC"> Python to install</font>

827
00:32:53,110 --> 00:32:58,240
the minion so like we've mentioned

828
00:32:56,260 --> 00:33:01,330
before it's actually<font color="#CCCCCC"> pretty quick to run</font>

829
00:32:58,240 --> 00:33:03,280
this but running it across like the

830
00:33:01,330 --> 00:33:07,360
three<font color="#CCCCCC"> hosts two of them are Ubuntu and</font>

831
00:33:03,280 --> 00:33:09,879
one is sent to us and so the<font color="#CCCCCC"> Red Hat</font>

832
00:33:07,360 --> 00:33:11,889
based ones like will check in quicker

833
00:33:09,880 --> 00:33:14,140
that takes<font color="#E5E5E5"> about a minute for everything</font>

834
00:33:11,890 --> 00:33:17,140
to be<font color="#E5E5E5"> configured and installed so that</font>

835
00:33:14,140 --> 00:33:20,050
will show up under the unaccepted keys

836
00:33:17,140 --> 00:33:21,850
in a bit for the<font color="#CCCCCC"> Ubuntu ones it usually</font>

837
00:33:20,050 --> 00:33:23,850
takes a little bit more because it runs

838
00:33:21,850 --> 00:33:27,699
apt-get update to update all the repos

839
00:33:23,850 --> 00:33:30,909
every time the script is started so that

840
00:33:27,700 --> 00:33:34,090
takes like<font color="#E5E5E5"> two to like two and a half</font>

841
00:33:30,910 --> 00:33:36,220
minutes for those to complete once those

842
00:33:34,090 --> 00:33:37,750
are completed the salt minions

843
00:33:36,220 --> 00:33:40,570
themselves after you accept the keys

844
00:33:37,750 --> 00:33:43,660
have<font color="#E5E5E5"> to do some background stuff to like</font>

845
00:33:40,570 --> 00:33:45,299
finish configuring themselves so even

846
00:33:43,660 --> 00:33:49,049
though like they check in and you

847
00:33:45,299 --> 00:33:50,970
their keys they still might<font color="#CCCCCC"> not be you</font>

848
00:33:49,049 --> 00:33:53,999
can see<font color="#E5E5E5"> the first one finished so that's</font>

849
00:33:50,970 --> 00:33:56,249
the center west box it still might take

850
00:33:53,999 --> 00:33:58,409
a little bit<font color="#E5E5E5"> for the hosts to be</font>

851
00:33:56,249 --> 00:34:00,330
configuring so you can't send command

852
00:33:58,409 --> 00:34:03,419
immediately it might take<font color="#E5E5E5"> an additional</font>

853
00:34:00,330 --> 00:34:05,340
minute and then after<font color="#CCCCCC"> that next minute</font>

854
00:34:03,419 --> 00:34:07,830
what you can do is then you can execute

855
00:34:05,340 --> 00:34:11,190
all<font color="#CCCCCC"> of your state files that you want to</font>

856
00:34:07,830 --> 00:34:12,569
send out to all the<font color="#E5E5E5"> hosts so that would</font>

857
00:34:11,190 --> 00:34:17,159
be this stuff that<font color="#CCCCCC"> you say add these</font>

858
00:34:12,569 --> 00:34:21,239
users drop su ID files install GCC job

859
00:34:17,159 --> 00:34:23,520
SSH keys all that good stuff so it's

860
00:34:21,239 --> 00:34:25,168
important to<font color="#E5E5E5"> note too that I mean the</font>

861
00:34:23,520 --> 00:34:26,339
word key might get in a way but all of

862
00:34:25,168 --> 00:34:28,408
the communication between the salt

863
00:34:26,339 --> 00:34:30,599
master and millions is encrypted so

864
00:34:28,409 --> 00:34:32,240
another bonus so that whatever you<font color="#E5E5E5"> know</font>

865
00:34:30,599 --> 00:34:33,809
custom thing that you have<font color="#E5E5E5"> written</font>

866
00:34:32,239 --> 00:34:35,098
typically<font color="#E5E5E5"> what I've seen these</font>

867
00:34:33,809 --> 00:34:37,049
competitions they're not encrypted so if

868
00:34:35,099 --> 00:34:39,599
you<font color="#E5E5E5"> just do TCP dump you can see what</font>

869
00:34:37,049 --> 00:34:41,040
your competition is running against<font color="#CCCCCC"> your</font>

870
00:34:39,599 --> 00:34:44,099
machine and then better prepare<font color="#CCCCCC"> yourself</font>

871
00:34:41,040 --> 00:34:46,199
to defend against<font color="#E5E5E5"> it or just take over</font>

872
00:34:44,099 --> 00:34:48,960
<font color="#E5E5E5">whatever IRC bot that they have if you</font>

873
00:34:46,199 --> 00:34:51,270
go to their IRC server so this kind<font color="#E5E5E5"> of</font>

874
00:34:48,960 --> 00:34:53,790
eliminates that from the scenario by

875
00:34:51,270 --> 00:34:54,989
just adding a salt master that can

876
00:34:53,790 --> 00:35:00,299
execute commands<font color="#E5E5E5"> over an encrypted</font>

877
00:34:54,989 --> 00:35:02,160
tunnel so like we said there<font color="#E5E5E5"> we see the</font>

878
00:35:00,299 --> 00:35:04,530
three changed so that way we know that

879
00:35:02,160 --> 00:35:07,379
salt has successfully been installed on

880
00:35:04,530 --> 00:35:08,880
these machines so DevOps I'm pretty hard

881
00:35:07,380 --> 00:35:10,890
together right now we're using<font color="#E5E5E5"> the</font>

882
00:35:08,880 --> 00:35:14,220
ansible to install saltstack feel pretty

883
00:35:10,890 --> 00:35:18,180
good about it Brian right now is

884
00:35:14,220 --> 00:35:20,640
accepting these keys so that way it is

885
00:35:18,180 --> 00:35:22,348
you up all night so he can assure<font color="#CCCCCC"> you</font>

886
00:35:20,640 --> 00:35:24,000
out commands as master to all the

887
00:35:22,349 --> 00:35:27,000
<font color="#E5E5E5">meeting servers so now you can</font><font color="#CCCCCC"> see that</font>

888
00:35:24,000 --> 00:35:31,290
<font color="#E5E5E5">all the keys have been accepted so what</font>

889
00:35:27,000 --> 00:35:36,480
I'm gonna do is like in spell sorry

890
00:35:31,290 --> 00:35:39,630
gonna go ahead<font color="#E5E5E5"> hit</font><font color="#CCCCCC"> the mute Bundy so</font>

891
00:35:36,480 --> 00:35:42,809
what you could<font color="#E5E5E5"> do is salt and then the</font>

892
00:35:39,630 --> 00:35:46,250
next<font color="#E5E5E5"> thing that you type is what</font>

893
00:35:42,809 --> 00:35:49,079
specifies the hosts that<font color="#E5E5E5"> you want to say</font>

894
00:35:46,250 --> 00:35:51,990
send information to so what I'm saying

895
00:35:49,079 --> 00:35:53,140
is that every host I want to basically

896
00:35:51,990 --> 00:35:55,089
send a

897
00:35:53,140 --> 00:35:56,890
test ping to tell me whether it's alive

898
00:35:55,089 --> 00:35:58,839
or not so that's<font color="#E5E5E5"> actually pretty cool</font>

899
00:35:56,890 --> 00:36:02,400
<font color="#E5E5E5">that those all worked on the first time</font>

900
00:35:58,839 --> 00:36:04,599
was not expecting that so<font color="#E5E5E5"> that's cool</font>

901
00:36:02,400 --> 00:36:06,279
because usually takes a little bit for

902
00:36:04,599 --> 00:36:08,980
those to finish configuring in

903
00:36:06,279 --> 00:36:13,690
themselves in the background so now what

904
00:36:08,980 --> 00:36:18,900
<font color="#CCCCCC">I'm gonna run well what I'm gonna</font><font color="#E5E5E5"> run</font>

905
00:36:13,690 --> 00:36:24,849
and try to like type correctly is

906
00:36:18,900 --> 00:36:26,529
applying all the states so what this is

907
00:36:24,849 --> 00:36:28,900
<font color="#E5E5E5">going to do is every time all the host</font>

908
00:36:26,529 --> 00:36:30,609
check in it's going to<font color="#E5E5E5"> look through look</font>

909
00:36:28,900 --> 00:36:33,039
for the top file and you can<font color="#E5E5E5"> see that</font>

910
00:36:30,609 --> 00:36:35,410
<font color="#CCCCCC">our DP was enabled and it's still</font>

911
00:36:33,039 --> 00:36:39,099
running so on the windows box it was

912
00:36:35,410 --> 00:36:40,569
good to go so it might take<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit</font>

913
00:36:39,099 --> 00:36:42,849
more probably<font color="#E5E5E5"> take about another minute</font>

914
00:36:40,569 --> 00:36:47,769
and<font color="#CCCCCC"> a half to add all users drop the Sui</font>

915
00:36:42,849 --> 00:36:52,289
de binary's drop the ssh keys and yeah

916
00:36:47,769 --> 00:36:52,288
it<font color="#E5E5E5"> does anybody have any questions yeah</font>

917
00:37:02,520 --> 00:37:09,759
<font color="#E5E5E5">read like proxy around so at panoply</font>

918
00:37:07,780 --> 00:37:12,670
which is an event<font color="#E5E5E5"> that they run at CCDC</font>

919
00:37:09,760 --> 00:37:14,410
which is a cici's primarily<font color="#E5E5E5"> team event</font>

920
00:37:12,670 --> 00:37:15,369
except<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the last day they'd run</font>

921
00:37:14,410 --> 00:37:17,740
something called monopoly where they

922
00:37:15,369 --> 00:37:19,089
allow all the blue tumors to just try to

923
00:37:17,740 --> 00:37:21,848
take over environment and change the

924
00:37:19,089 --> 00:37:24,220
flag so there's always<font color="#E5E5E5"> a music box and</font>

925
00:37:21,849 --> 00:37:27,160
everyone goes to the music<font color="#E5E5E5"> box to change</font>

926
00:37:24,220 --> 00:37:28,569
the music for the entire room<font color="#E5E5E5"> I'm not</font>

927
00:37:27,160 --> 00:37:30,069
<font color="#E5E5E5">sure</font><font color="#CCCCCC"> what team got it last year but they</font>

928
00:37:28,569 --> 00:37:31,960
just<font color="#E5E5E5"> started playing games of Thrones</font>

929
00:37:30,069 --> 00:37:34,720
music throughout the whole thing and

930
00:37:31,960 --> 00:37:36,460
<font color="#E5E5E5">they were blocking subnets and stuff</font>

931
00:37:34,720 --> 00:37:37,540
like that<font color="#CCCCCC"> so that was one of</font><font color="#E5E5E5"> the things</font>

932
00:37:36,460 --> 00:37:39,309
<font color="#E5E5E5">that kind of like you know if we were</font>

933
00:37:37,540 --> 00:37:40,599
faster we would not have this problem

934
00:37:39,309 --> 00:37:42,400
and listening<font color="#E5E5E5"> to this like really</font>

935
00:37:40,599 --> 00:37:45,099
daunting music just blasting through the

936
00:37:42,400 --> 00:37:47,380
speakers so that's a frustration that

937
00:37:45,099 --> 00:37:50,430
kind<font color="#E5E5E5"> of sparked it too so you see that</font>

938
00:37:47,380 --> 00:37:54,510
<font color="#CCCCCC">it just succeeded for</font><font color="#E5E5E5"> all three boxes</font>

939
00:37:50,430 --> 00:37:58,020
<font color="#E5E5E5">because</font><font color="#CCCCCC"> green is good so that's</font><font color="#E5E5E5"> gold see</font>

940
00:37:54,510 --> 00:38:03,390
so now<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you want to</font><font color="#CCCCCC"> try</font><font color="#E5E5E5"> to ssh in</font>

941
00:37:58,020 --> 00:38:07,569
anymore so we dropped<font color="#CCCCCC"> Jared's SSH key so</font>

942
00:38:03,390 --> 00:38:14,770
hopefully this works so you're gonna

943
00:38:07,569 --> 00:38:19,029
<font color="#E5E5E5">know try bill so bill and that box</font>

944
00:38:14,770 --> 00:38:22,000
should have<font color="#CCCCCC"> his SE now we're in so this</font>

945
00:38:19,030 --> 00:38:23,500
yeah so once again through salt minions

946
00:38:22,000 --> 00:38:25,240
on all these boxes<font color="#CCCCCC"> are running as root</font>

947
00:38:23,500 --> 00:38:26,829
so these are as good as root shells if

948
00:38:25,240 --> 00:38:28,058
not better because it<font color="#E5E5E5"> hasn't this nice</font>

949
00:38:26,829 --> 00:38:29,920
and cryptic command communication

950
00:38:28,059 --> 00:38:32,079
exports all these really<font color="#E5E5E5"> cool salt files</font>

951
00:38:29,920 --> 00:38:33,700
so that way if you're<font color="#E5E5E5"> in environment</font>

952
00:38:32,079 --> 00:38:35,170
you're like hey I suddenly have all

953
00:38:33,700 --> 00:38:36,669
these windows machines but I need to<font color="#CCCCCC"> do</font>

954
00:38:35,170 --> 00:38:38,230
something<font color="#E5E5E5"> never done with</font><font color="#CCCCCC"> Windows the</font>

955
00:38:36,670 --> 00:38:40,150
salt community itself is pretty active

956
00:38:38,230 --> 00:38:41,680
so you can go grab a state file that

957
00:38:40,150 --> 00:38:43,270
could be for like a legitimate purpose

958
00:38:41,680 --> 00:38:45,220
of configuring some kind of<font color="#E5E5E5"> service and</font>

959
00:38:43,270 --> 00:38:46,599
totally use it to your advantage so

960
00:38:45,220 --> 00:38:48,490
there's a large community behind this

961
00:38:46,599 --> 00:38:49,930
for like DevOps and system

962
00:38:48,490 --> 00:38:51,819
administration there's nothing<font color="#CCCCCC"> stopping</font>

963
00:38:49,930 --> 00:38:53,020
you from taking them tweaking them at

964
00:38:51,819 --> 00:38:54,520
<font color="#E5E5E5">using them</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> your competitive advantage</font>

965
00:38:53,020 --> 00:38:57,520
which is really what this is all about

966
00:38:54,520 --> 00:38:59,619
so we also drop<font color="#CCCCCC"> sui de binary's compiled</font>

967
00:38:57,520 --> 00:39:02,290
one and threw it in the path and we call

968
00:38:59,619 --> 00:39:06,280
the watchdog d so you see<font color="#CCCCCC"> you just run</font>

969
00:39:02,290 --> 00:39:08,319
that command and<font color="#E5E5E5"> then your route so even</font>

970
00:39:06,280 --> 00:39:11,069
if they<font color="#CCCCCC"> disable root login you can still</font>

971
00:39:08,319 --> 00:39:11,069
have root on the box

972
00:39:11,140 --> 00:39:15,370
so all in real time you saw let's do

973
00:39:13,300 --> 00:39:18,160
this three machines a<font color="#E5E5E5"> couple of</font><font color="#CCCCCC"> minutes</font>

974
00:39:15,370 --> 00:39:19,870
<font color="#E5E5E5">and this is continued access so we'd</font>

975
00:39:18,160 --> 00:39:21,190
like<font color="#CCCCCC"> to open</font><font color="#E5E5E5"> up to any other questions</font>

976
00:39:19,870 --> 00:39:25,540
that we have<font color="#E5E5E5"> because this demo worked a</font>

977
00:39:21,190 --> 00:39:42,160
lot better than what we<font color="#E5E5E5"> planned for yeah</font>

978
00:39:25,540 --> 00:39:43,840
yeah you absolutely can<font color="#E5E5E5"> so the one of</font>

979
00:39:42,160 --> 00:39:45,370
the problems<font color="#CCCCCC"> with some this is it comes</font>

980
00:39:43,840 --> 00:39:47,680
to the<font color="#CCCCCC"> trade-off with the ssh pipelining</font>

981
00:39:45,370 --> 00:39:49,450
is that it's reported that where you're

982
00:39:47,680 --> 00:39:51,490
transferring like larger packages so

983
00:39:49,450 --> 00:39:53,980
depending on<font color="#E5E5E5"> how big what you're trying</font>

984
00:39:51,490 --> 00:39:57,609
to<font color="#E5E5E5"> get from A to B is it can take more</font>

985
00:39:53,980 --> 00:39:58,690
time so<font color="#E5E5E5"> like at minutes 0 if you kick</font>

986
00:39:57,610 --> 00:40:00,520
that off and you have all these pre

987
00:39:58,690 --> 00:40:01,660
packaged<font color="#E5E5E5"> and ready to go that by all</font>

988
00:40:00,520 --> 00:40:03,820
means we'll work it might take a couple

989
00:40:01,660 --> 00:40:05,680
lecture seconds but in the long run that

990
00:40:03,820 --> 00:40:07,360
could<font color="#E5E5E5"> be advantageous if someone else is</font>

991
00:40:05,680 --> 00:40:11,549
just going<font color="#E5E5E5"> to start firing rolling off</font>

992
00:40:07,360 --> 00:40:11,550
subnets and whatever reports that<font color="#CCCCCC"> may be</font>

993
00:40:11,910 --> 00:40:23,379
yeah awesome question so puppet is

994
00:40:21,540 --> 00:40:25,180
<font color="#CCCCCC">puppets really</font><font color="#E5E5E5"> cool and so is in chef</font>

995
00:40:23,380 --> 00:40:27,880
the reason that we didn't go with<font color="#CCCCCC"> Chef</font>

996
00:40:25,180 --> 00:40:29,410
is because the infrastructure overall to

997
00:40:27,880 --> 00:40:31,510
set that up and start managing it<font color="#E5E5E5"> it's a</font>

998
00:40:29,410 --> 00:40:33,310
<font color="#E5E5E5">little bit more heavier whereas with</font>

999
00:40:31,510 --> 00:40:34,690
salt and ansible you can kind of walk

1000
00:40:33,310 --> 00:40:37,029
into a competition and just have a

1001
00:40:34,690 --> 00:40:38,290
laptop around this the chef server tends

1002
00:40:37,030 --> 00:40:41,200
to be a little bit bulkier depending on

1003
00:40:38,290 --> 00:40:43,090
what you're trying<font color="#CCCCCC"> to do but for a</font>

1004
00:40:41,200 --> 00:40:44,259
puppet<font color="#E5E5E5"> I believe for the non Enterprise</font>

1005
00:40:43,090 --> 00:40:45,850
Edition there's a limit of how many

1006
00:40:44,260 --> 00:40:49,060
nodes you can have if i remember

1007
00:40:45,850 --> 00:40:50,799
correctly and also just for ansible and

1008
00:40:49,060 --> 00:40:52,779
south sac both being<font color="#E5E5E5"> in</font><font color="#CCCCCC"> python and</font><font color="#E5E5E5"> both</font>

1009
00:40:50,800 --> 00:40:54,820
having that yambol format it's super

1010
00:40:52,780 --> 00:40:57,430
<font color="#CCCCCC">easy if you have something that you want</font>

1011
00:40:54,820 --> 00:41:00,130
in the ansible playbooks to be converted

1012
00:40:57,430 --> 00:41:02,020
to<font color="#CCCCCC"> long term stuff for salsa so that is</font>

1013
00:41:00,130 --> 00:41:04,000
really<font color="#CCCCCC"> the like very middle there's no</font>

1014
00:41:02,020 --> 00:41:09,660
reason you can't use<font color="#E5E5E5"> those tools we just</font>

1015
00:41:04,000 --> 00:41:09,660
chose<font color="#CCCCCC"> to go with these yeah</font>

1016
00:41:13,310 --> 00:41:20,549
absolutely all right well<font color="#CCCCCC"> if you guys</font>

1017
00:41:19,200 --> 00:41:22,169
<font color="#E5E5E5">have any more questions we just wanted</font>

1018
00:41:20,550 --> 00:41:23,400
to kick it<font color="#E5E5E5"> off with other be more but</font>

1019
00:41:22,170 --> 00:41:25,140
we'll be hanging around here if you<font color="#CCCCCC"> guys</font>

1020
00:41:23,400 --> 00:41:28,430
<font color="#E5E5E5">have more questions thank you very much</font>

1021
00:41:25,140 --> 00:41:28,430
for<font color="#E5E5E5"> your time I'm sure thank you</font>

