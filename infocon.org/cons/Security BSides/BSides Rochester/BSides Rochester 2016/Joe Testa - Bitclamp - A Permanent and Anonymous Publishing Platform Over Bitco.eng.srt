1
00:00:03,319 --> 00:00:09,080
my name is<font color="#CCCCCC"> Joe testa</font><font color="#E5E5E5"> I'm the co-founder</font>

2
00:00:06,210 --> 00:00:11,940
of positron security it's a local

3
00:00:09,080 --> 00:00:14,129
computer security company and i'm here

4
00:00:11,940 --> 00:00:19,910
to present on a new open source project

5
00:00:14,130 --> 00:00:22,380
called<font color="#CCCCCC"> bit clamp it's a tool to publish</font>

6
00:00:19,910 --> 00:00:25,680
documents files into the<font color="#CCCCCC"> bitcoin</font>

7
00:00:22,380 --> 00:00:29,849
blockchain so i'm<font color="#E5E5E5"> going to go on go into</font>

8
00:00:25,680 --> 00:00:32,940
the details of that<font color="#E5E5E5"> i know not everybody</font>

9
00:00:29,849 --> 00:00:34,469
is experienced with bitcoins so I

10
00:00:32,940 --> 00:00:37,800
figured I'd get give a little bit of a

11
00:00:34,469 --> 00:00:39,989
primer to really go into all the details

12
00:00:37,800 --> 00:00:42,839
that<font color="#CCCCCC"> Bitcoin would be its own</font>

13
00:00:39,989 --> 00:00:46,680
presentation easily so I'm just going to

14
00:00:42,840 --> 00:00:48,420
give a quick quick primer here actually

15
00:00:46,680 --> 00:00:50,039
a show of hands<font color="#CCCCCC"> how many people have</font>

16
00:00:48,420 --> 00:00:55,949
experienced<font color="#E5E5E5"> at</font><font color="#CCCCCC"> least some experience</font>

17
00:00:50,039 --> 00:00:58,109
using Bitcoin okay about half so here's

18
00:00:55,949 --> 00:01:00,570
a quick primer bitcoins a hundred

19
00:00:58,109 --> 00:01:02,219
percent digital currency use a strong

20
00:01:00,570 --> 00:01:06,510
cryptography to protect against fraud

21
00:01:02,219 --> 00:01:08,040
it's designed<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be decentralized then</font><font color="#CCCCCC"> I</font>

22
00:01:06,510 --> 00:01:10,850
guess you can kind of say it still is

23
00:01:08,040 --> 00:01:14,460
although<font color="#E5E5E5"> that's all debatable these days</font>

24
00:01:10,850 --> 00:01:16,110
payments can be anonymous common thing

25
00:01:14,460 --> 00:01:19,649
people like to say is that<font color="#E5E5E5"> this one is</font>

26
00:01:16,110 --> 00:01:22,530
anonymous I would say<font color="#CCCCCC"> that they can be</font>

27
00:01:19,650 --> 00:01:26,520
anonymous depending on<font color="#E5E5E5"> how you go about</font>

28
00:01:22,530 --> 00:01:29,250
using it and payments are permanent

29
00:01:26,520 --> 00:01:31,110
that's one of the central things behind

30
00:01:29,250 --> 00:01:32,909
it is<font color="#E5E5E5"> that if you send a payment to</font>

31
00:01:31,110 --> 00:01:35,750
somebody it's there it's gone forever

32
00:01:32,909 --> 00:01:41,159
unless they choose to send it back

33
00:01:35,750 --> 00:01:44,509
that's there forever so the<font color="#CCCCCC"> big question</font>

34
00:01:41,159 --> 00:01:47,220
is why would you use Bitcoin publish

35
00:01:44,509 --> 00:01:50,130
like i<font color="#CCCCCC"> said before anything you do in</font>

36
00:01:47,220 --> 00:01:52,250
the Bitcoin network<font color="#CCCCCC"> its permanent so</font>

37
00:01:50,130 --> 00:01:54,679
that's a that's a pretty interesting

38
00:01:52,250 --> 00:01:57,799
property to have if you're trying to

39
00:01:54,680 --> 00:02:00,270
publish files or something like that

40
00:01:57,799 --> 00:02:06,540
it's also like i said before semi

41
00:02:00,270 --> 00:02:08,728
anonymous to remove anything<font color="#E5E5E5"> i said</font>

42
00:02:06,540 --> 00:02:10,740
before<font color="#CCCCCC"> it's permanent technically</font>

43
00:02:08,729 --> 00:02:13,200
speaking you could in theory remove some

44
00:02:10,740 --> 00:02:15,900
from the from the the transaction log

45
00:02:13,200 --> 00:02:17,609
but<font color="#CCCCCC"> it would require</font><font color="#E5E5E5"> just ridiculous</font>

46
00:02:15,900 --> 00:02:21,540
amounts of computing power<font color="#E5E5E5"> you'd need</font>

47
00:02:17,610 --> 00:02:23,040
about<font color="#CCCCCC"> 1,300</font><font color="#E5E5E5"> PETA hash per second there's</font>

48
00:02:21,540 --> 00:02:26,720
something<font color="#CCCCCC"> around there that's just a</font>

49
00:02:23,040 --> 00:02:29,489
massive<font color="#E5E5E5"> amount of computing power so</font>

50
00:02:26,720 --> 00:02:33,630
it's very likely than anybody else has

51
00:02:29,490 --> 00:02:36,390
that amount of power so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

52
00:02:33,630 --> 00:02:39,210
perfect situation for whistleblower type

53
00:02:36,390 --> 00:02:41,940
documents the ability if you could

54
00:02:39,210 --> 00:02:43,260
figure<font color="#E5E5E5"> out a way to put data into the</font>

55
00:02:41,940 --> 00:02:46,500
Bitcoin block chain which is the

56
00:02:43,260 --> 00:02:48,030
transaction log you<font color="#E5E5E5"> know those documents</font>

57
00:02:46,500 --> 00:02:48,990
are going to be there<font color="#E5E5E5"> available to</font>

58
00:02:48,030 --> 00:02:54,240
everybody and they're going<font color="#E5E5E5"> to be there</font>

59
00:02:48,990 --> 00:02:55,800
forever so here's an outline of what I'm

60
00:02:54,240 --> 00:02:58,880
going<font color="#E5E5E5"> to cover I'm going to go into a</font>

61
00:02:55,800 --> 00:03:02,310
little bit of<font color="#CCCCCC"> some some technicals</font>

62
00:02:58,880 --> 00:03:05,910
behind bitcoin and<font color="#E5E5E5"> some of the</font>

63
00:03:02,310 --> 00:03:08,790
<font color="#E5E5E5">background there's two prior methods of</font>

64
00:03:05,910 --> 00:03:10,710
publication this idea of publishing into

65
00:03:08,790 --> 00:03:13,440
the bitcoin is not new i'm not

66
00:03:10,710 --> 00:03:15,660
presenting that as new that's been done

67
00:03:13,440 --> 00:03:17,820
before but<font color="#E5E5E5"> the existing methods have</font>

68
00:03:15,660 --> 00:03:20,040
some<font color="#E5E5E5"> pretty serious shortcomings so</font><font color="#CCCCCC"> I'm</font>

69
00:03:17,820 --> 00:03:21,510
<font color="#E5E5E5">going to talk about that and then I'm</font>

70
00:03:20,040 --> 00:03:23,160
<font color="#E5E5E5">going to unveil</font><font color="#CCCCCC"> a new method that i came</font>

71
00:03:21,510 --> 00:03:26,850
<font color="#E5E5E5">up with myself</font><font color="#CCCCCC"> and analyze what his</font>

72
00:03:23,160 --> 00:03:28,740
properties are and then hopefully<font color="#CCCCCC"> i'll</font>

73
00:03:26,850 --> 00:03:34,500
have time to talk<font color="#E5E5E5"> about some</font><font color="#CCCCCC"> of the more</font>

74
00:03:28,740 --> 00:03:36,600
advanced<font color="#E5E5E5"> features so a little bit more</font>

75
00:03:34,500 --> 00:03:38,670
background just<font color="#CCCCCC"> to understand the later</font>

76
00:03:36,600 --> 00:03:40,530
parts of my presentation so<font color="#E5E5E5"> bitcoin has</font>

77
00:03:38,670 --> 00:03:44,280
its own scripting language which is

78
00:03:40,530 --> 00:03:48,510
pretty pretty interesting so if<font color="#E5E5E5"> I sit</font>

79
00:03:44,280 --> 00:03:50,730
send coins to some address there can be

80
00:03:48,510 --> 00:03:54,359
a script embedded in it so that the

81
00:03:50,730 --> 00:03:56,790
<font color="#E5E5E5">recipient has to satisfy the logic</font>

82
00:03:54,360 --> 00:03:59,010
somehow so this this language<font color="#E5E5E5"> it's</font>

83
00:03:56,790 --> 00:04:00,810
stack-based there's conditional

84
00:03:59,010 --> 00:04:04,290
statements there's bitwise logic you<font color="#CCCCCC"> can</font>

85
00:04:00,810 --> 00:04:06,570
do there's a arithmetic that<font color="#CCCCCC"> you can do</font>

86
00:04:04,290 --> 00:04:11,370
in this language and of course there's

87
00:04:06,570 --> 00:04:12,840
cryptographic functions many of them for

88
00:04:11,370 --> 00:04:14,700
standard transactions are actually

89
00:04:12,840 --> 00:04:17,310
disabled and I'll get into that a little

90
00:04:14,700 --> 00:04:20,149
bit later if anybody's interested

91
00:04:17,310 --> 00:04:24,860
there's a link to the documentation

92
00:04:20,149 --> 00:04:29,409
of the scripting language it's a<font color="#E5E5E5"> little</font>

93
00:04:24,860 --> 00:04:29,410
bit more background transaction fees

94
00:04:30,190 --> 00:04:34,430
trying to think how to<font color="#E5E5E5"> describe this</font>

95
00:04:32,180 --> 00:04:43,910
because<font color="#E5E5E5"> I don't want to get too deep</font>

96
00:04:34,430 --> 00:04:46,250
into Bitcoin but the people that process

97
00:04:43,910 --> 00:04:49,610
the transactions in<font color="#E5E5E5"> Bitcoin they're</font>

98
00:04:46,250 --> 00:04:53,330
called miner's what they do is they<font color="#E5E5E5"> just</font>

99
00:04:49,610 --> 00:04:54,919
run run the shot 256 hash function over

100
00:04:53,330 --> 00:04:57,440
and over and over again to<font color="#E5E5E5"> try to what's</font>

101
00:04:54,919 --> 00:05:01,820
called solve block of unsolved of

102
00:04:57,440 --> 00:05:03,800
unconfirmed transactions and the idea is

103
00:05:01,820 --> 00:05:06,770
that if you succeed<font color="#CCCCCC"> in this you get</font><font color="#E5E5E5"> paid</font>

104
00:05:03,800 --> 00:05:10,669
<font color="#E5E5E5">you get a block reward at this point the</font>

105
00:05:06,770 --> 00:05:12,440
block reward is 25 Bitcoin so that's

106
00:05:10,669 --> 00:05:15,680
their motivation for doing all this

107
00:05:12,440 --> 00:05:17,780
hashing to to confirm transactions is

108
00:05:15,680 --> 00:05:20,389
that if they succeed at it they get a

109
00:05:17,780 --> 00:05:22,280
whole bunch of one in the current price

110
00:05:20,389 --> 00:05:26,120
is I<font color="#CCCCCC"> think four hundred fifty dollars</font>

111
00:05:22,280 --> 00:05:29,960
per bitcoin so that x 25 equals quite a

112
00:05:26,120 --> 00:05:31,490
lot of<font color="#CCCCCC"> money so that's</font><font color="#E5E5E5"> the the block</font>

113
00:05:29,960 --> 00:05:34,299
reward happens to be the main motivator

114
00:05:31,490 --> 00:05:38,260
but it's not the only<font color="#E5E5E5"> one there's</font>

115
00:05:34,300 --> 00:05:38,260
transaction fees that can be attached

116
00:05:39,070 --> 00:05:46,639
now they<font color="#E5E5E5"> they aren't exactly mandatory</font>

117
00:05:42,260 --> 00:05:49,250
but the transaction system is pretty

118
00:05:46,639 --> 00:05:52,190
much a free market so if i want to send

119
00:05:49,250 --> 00:05:54,470
money<font color="#E5E5E5"> to some of the person if i want to</font>

120
00:05:52,190 --> 00:05:58,880
get that transaction<font color="#E5E5E5"> confirmed quickly i</font>

121
00:05:54,470 --> 00:06:01,940
would have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> attach a fee I could try</font>

122
00:05:58,880 --> 00:06:04,940
to cheap out and either do no fee or low

123
00:06:01,940 --> 00:06:07,430
fee but<font color="#E5E5E5"> the miners are self-interested</font>

124
00:06:04,940 --> 00:06:11,060
so if they see well here's like a whole

125
00:06:07,430 --> 00:06:12,289
bunch of high fee transactions I'm<font color="#E5E5E5"> going</font>

126
00:06:11,060 --> 00:06:15,169
<font color="#E5E5E5">to prioritize these and I'm going to</font>

127
00:06:12,289 --> 00:06:19,130
<font color="#E5E5E5">deep prioritize the low fee or no fee</font>

128
00:06:15,169 --> 00:06:21,799
transactions so it's a free market so i

129
00:06:19,130 --> 00:06:23,419
can try to cheap out if<font color="#E5E5E5"> i want but it</font>

130
00:06:21,800 --> 00:06:26,500
just means my transactions won't be

131
00:06:23,419 --> 00:06:26,500
confirmed very quickly

132
00:06:28,430 --> 00:06:35,009
so the current<font color="#E5E5E5"> rate is point zero zero</font>

133
00:06:31,529 --> 00:06:39,319
zero three<font color="#CCCCCC"> bitcoin per kilobyte which is</font>

134
00:06:35,009 --> 00:06:41,879
a pretty weird it's a pretty weird

135
00:06:39,319 --> 00:06:43,710
system it's not like like in a

136
00:06:41,879 --> 00:06:45,150
traditional system like credit cards or

137
00:06:43,710 --> 00:06:46,979
paypal or something where they<font color="#E5E5E5"> take a</font>

138
00:06:45,150 --> 00:06:50,609
percentage of what<font color="#CCCCCC"> you're you're</font>

139
00:06:46,979 --> 00:06:53,159
transferring this is a fee per kilobyte

140
00:06:50,610 --> 00:06:56,249
so that's that's per however<font color="#E5E5E5"> large your</font>

141
00:06:53,159 --> 00:06:58,289
transaction is in bytes so it's pretty

142
00:06:56,249 --> 00:07:00,300
weird thing<font color="#CCCCCC"> that trips up a lot</font><font color="#E5E5E5"> of users</font>

143
00:06:58,289 --> 00:07:02,669
because they doesn't really make sense

144
00:07:00,300 --> 00:07:04,139
if they send sometimes you know if you

145
00:07:02,669 --> 00:07:06,688
send a thousand dollars with<font color="#E5E5E5"> Bitcoin</font>

146
00:07:04,139 --> 00:07:09,089
somebody you might pavers my feet but

147
00:07:06,689 --> 00:07:11,189
later on<font color="#E5E5E5"> you might send small amount of</font>

148
00:07:09,089 --> 00:07:13,229
money and suddenly<font color="#E5E5E5"> got to pay you know</font>

149
00:07:11,189 --> 00:07:15,960
five times in defeat it doesn't entirely

150
00:07:13,229 --> 00:07:17,520
make sense it just<font color="#E5E5E5"> all has to do with</font>

151
00:07:15,960 --> 00:07:19,998
how the transactions are structured

152
00:07:17,520 --> 00:07:19,998
under the hood

153
00:07:24,620 --> 00:07:30,210
so now<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> going to go into the first</font>

154
00:07:27,389 --> 00:07:33,199
the<font color="#E5E5E5"> first method that somebody use to to</font>

155
00:07:30,210 --> 00:07:35,609
put data into<font color="#E5E5E5"> the block chain a little</font>

156
00:07:33,199 --> 00:07:40,650
<font color="#CCCCCC">bit of background on this first so to</font>

157
00:07:35,610 --> 00:07:43,050
generate a Bitcoin address this<font color="#E5E5E5"> would be</font>

158
00:07:40,650 --> 00:07:47,489
basically how<font color="#E5E5E5"> its structured you start</font>

159
00:07:43,050 --> 00:07:51,300
<font color="#E5E5E5">with an ecdsa key the public the public</font>

160
00:07:47,490 --> 00:07:53,430
key<font color="#CCCCCC"> and you run hash to hash functions</font>

161
00:07:51,300 --> 00:07:57,750
on it first<font color="#E5E5E5"> sha-256 and then write them</font>

162
00:07:53,430 --> 00:08:00,300
<font color="#E5E5E5">d 160 you prepend a zero byte and then</font>

163
00:07:57,750 --> 00:08:02,070
you append some checksum which doesn't

164
00:08:00,300 --> 00:08:05,310
really matter in this in this context

165
00:08:02,070 --> 00:08:07,229
and then you base 58<font color="#E5E5E5"> and code at all to</font>

166
00:08:05,310 --> 00:08:10,830
get<font color="#E5E5E5"> that string in the middle now that</font>

167
00:08:07,229 --> 00:08:12,210
base 58 it's basically base64 just with

168
00:08:10,830 --> 00:08:16,050
some of the characters are moved and

169
00:08:12,210 --> 00:08:20,479
that's that's basically the<font color="#CCCCCC"> punchline is</font>

170
00:08:16,050 --> 00:08:20,479
a base 58 is reversible just like base64

171
00:08:23,180 --> 00:08:27,990
so one thing to notice is that the ripe

172
00:08:25,740 --> 00:08:30,780
md 160 output that<font color="#E5E5E5"> happens to be 20</font>

173
00:08:27,990 --> 00:08:35,940
bytes<font color="#E5E5E5"> so if you wanted to publish 20</font>

174
00:08:30,780 --> 00:08:41,159
bytes of data you just set your dad it

175
00:08:35,940 --> 00:08:43,229
to be that that 20 bytes excuse me<font color="#E5E5E5"> then</font>

176
00:08:41,159 --> 00:08:46,050
you prepend that zero byte and append to

177
00:08:43,229 --> 00:08:49,560
check some and then you generate that

178
00:08:46,050 --> 00:08:51,390
address let me back up there so

179
00:08:49,560 --> 00:08:54,930
basically instead<font color="#E5E5E5"> of calculating that</font>

180
00:08:51,390 --> 00:08:57,689
ripe ripe md output you just set your 20

181
00:08:54,930 --> 00:09:00,300
bytes to be that calculate the checksum

182
00:08:57,690 --> 00:09:02,490
prepend the zero byte basics<font color="#E5E5E5"> phase 58</font>

183
00:09:00,300 --> 00:09:05,040
that and there you<font color="#CCCCCC"> go you've got a</font>

184
00:09:02,490 --> 00:09:06,959
<font color="#CCCCCC">Bitcoin</font><font color="#E5E5E5"> address that appears to be valid</font>

185
00:09:05,040 --> 00:09:10,020
now the network doesn't know<font color="#CCCCCC"> that it's</font>

186
00:09:06,959 --> 00:09:12,619
invalid it just sees at that address and

187
00:09:10,020 --> 00:09:15,620
so is ok well the checksum is valid so

188
00:09:12,620 --> 00:09:15,620
<font color="#CCCCCC">ok</font>

189
00:09:18,370 --> 00:09:22,000
so pretty<font color="#E5E5E5"> much you can do this over and</font>

190
00:09:20,509 --> 00:09:25,459
over again you just generate all these

191
00:09:22,000 --> 00:09:31,699
fake addresses and just send a very tiny

192
00:09:25,459 --> 00:09:33,560
amount of Bitcoin to them and in a

193
00:09:31,699 --> 00:09:37,189
single transaction you actually have up

194
00:09:33,560 --> 00:09:39,319
to 256 outputs so if<font color="#CCCCCC"> that means is in a</font>

195
00:09:37,190 --> 00:09:41,930
single transaction I can say all right I

196
00:09:39,319 --> 00:09:44,060
want to give you know half a Bitcoin to

197
00:09:41,930 --> 00:09:47,779
this person point<font color="#E5E5E5"> three Bitcoin to this</font>

198
00:09:44,060 --> 00:09:50,209
person point<font color="#CCCCCC"> 003</font><font color="#E5E5E5"> Bitcoin of this person</font>

199
00:09:47,779 --> 00:09:54,949
<font color="#E5E5E5">and so on so one transaction could</font>

200
00:09:50,209 --> 00:09:56,920
actually have 256 of those in theory so

201
00:09:54,949 --> 00:10:00,349
in one transaction you've got 20 bytes x

202
00:09:56,920 --> 00:10:05,599
256 so you've got about<font color="#E5E5E5"> 5k actually it's</font>

203
00:10:00,350 --> 00:10:07,399
exactly 5k which is kind<font color="#E5E5E5"> of small to</font>

204
00:10:05,600 --> 00:10:10,040
publish a lot of files so if you've<font color="#CCCCCC"> got</font>

205
00:10:07,399 --> 00:10:14,240
something bigger you just use another

206
00:10:10,040 --> 00:10:16,040
transaction so just as an example just

207
00:10:14,240 --> 00:10:19,279
<font color="#CCCCCC">to go over this again so if you have the</font>

208
00:10:16,040 --> 00:10:23,509
text abcdefg you just first convert it

209
00:10:19,279 --> 00:10:26,060
to a ski and there's the<font color="#E5E5E5"> hacks 65 66 67</font>

210
00:10:23,509 --> 00:10:28,220
you calculate that checksum you run it

211
00:10:26,060 --> 00:10:29,388
through that phase 58 and just send

212
00:10:28,220 --> 00:10:35,620
money to<font color="#E5E5E5"> that address and just keep</font>

213
00:10:29,389 --> 00:10:38,600
repeating so somebody use this method<font color="#E5E5E5"> to</font>

214
00:10:35,620 --> 00:10:43,839
publish the original<font color="#E5E5E5"> Bitcoin paper the</font>

215
00:10:38,600 --> 00:10:47,300
original PDF I think it was maybe 175 k

216
00:10:43,839 --> 00:10:49,399
so yeah that they use this to to publish

217
00:10:47,300 --> 00:10:50,959
into the blockchain ready when I was

218
00:10:49,399 --> 00:10:53,750
making<font color="#CCCCCC"> these slides though I couldn't</font>

219
00:10:50,959 --> 00:10:55,399
<font color="#E5E5E5">find it anywhere which is kind of funny</font>

220
00:10:53,750 --> 00:10:57,800
<font color="#CCCCCC">because I think that</font><font color="#E5E5E5"> says a lot about</font>

221
00:10:55,399 --> 00:11:00,589
this publication method as a whole it's

222
00:10:57,800 --> 00:11:03,410
like okay it's there but I can't find<font color="#E5E5E5"> it</font>

223
00:11:00,589 --> 00:11:05,660
I can't extract it so how useful is it

224
00:11:03,410 --> 00:11:11,060
really I mean it might as well not be

225
00:11:05,660 --> 00:11:13,519
<font color="#CCCCCC">there so major disadvantages to this</font>

226
00:11:11,060 --> 00:11:16,849
pissed method you're actually destroying

227
00:11:13,519 --> 00:11:18,949
coins because you're generating bogus

228
00:11:16,850 --> 00:11:22,509
addresses those addresses don't have a

229
00:11:18,949 --> 00:11:25,279
valid private key so nobody can ever

230
00:11:22,509 --> 00:11:28,029
spend those coins again they're just

231
00:11:25,279 --> 00:11:28,029
destroyed forever

232
00:11:28,460 --> 00:11:34,610
a<font color="#E5E5E5"> big one that and this is what the the</font>

233
00:11:33,140 --> 00:11:37,850
<font color="#E5E5E5">Bitcoin developers really had an issue</font>

234
00:11:34,610 --> 00:11:40,640
with as it pollutes the UT XO database

235
00:11:37,850 --> 00:11:44,600
that stands for the unspent transaction

236
00:11:40,640 --> 00:11:46,189
outputs database so that's pretty much

237
00:11:44,600 --> 00:11:50,930
<font color="#E5E5E5">what it</font><font color="#CCCCCC"> sounds like the Bitcoin network</font>

238
00:11:46,190 --> 00:11:53,000
will will maintain a list of<font color="#CCCCCC"> okay at any</font>

239
00:11:50,930 --> 00:11:55,790
given time here's a whole<font color="#E5E5E5"> list of all</font>

240
00:11:53,000 --> 00:11:58,850
unspent transactions that<font color="#E5E5E5"> way when a new</font>

241
00:11:55,790 --> 00:12:00,650
transaction comes in the network can say

242
00:11:58,850 --> 00:12:03,770
oh okay you're referencing this one

243
00:12:00,650 --> 00:12:06,980
which happens to be unspent so<font color="#E5E5E5"> therefore</font>

244
00:12:03,770 --> 00:12:09,819
it passion passes this<font color="#E5E5E5"> check so the</font>

245
00:12:06,980 --> 00:12:12,880
problem<font color="#E5E5E5"> is with that method of</font>

246
00:12:09,820 --> 00:12:15,740
generating all these bogus addresses

247
00:12:12,880 --> 00:12:18,189
those transactions will always remain in

248
00:12:15,740 --> 00:12:21,440
the UT XO database they will<font color="#E5E5E5"> never leave</font>

249
00:12:18,190 --> 00:12:23,180
because if a transaction then becomes

250
00:12:21,440 --> 00:12:26,570
spent at some point in the future gets

251
00:12:23,180 --> 00:12:28,579
removed from<font color="#CCCCCC"> that database so all those</font>

252
00:12:26,570 --> 00:12:30,290
entries are on the UT XO database and

253
00:12:28,580 --> 00:12:32,470
they will never leave so results in

254
00:12:30,290 --> 00:12:35,199
pollution over time so the Bitcoin

255
00:12:32,470 --> 00:12:37,820
developers had a big problem<font color="#E5E5E5"> with this</font>

256
00:12:35,200 --> 00:12:41,450
and I'll get into<font color="#E5E5E5"> that prying the next</font>

257
00:12:37,820 --> 00:12:44,800
slide so another<font color="#E5E5E5"> other major</font>

258
00:12:41,450 --> 00:12:47,510
disadvantage is that it's<font color="#E5E5E5"> very expensive</font>

259
00:12:44,800 --> 00:12:52,040
<font color="#CCCCCC">the current minimum that you can send to</font>

260
00:12:47,510 --> 00:12:57,350
an address<font color="#E5E5E5"> I think is this point 0 0 0 0</font>

261
00:12:52,040 --> 00:13:00,290
0<font color="#CCCCCC"> 5 0 for Bitcoin so you'd have to send</font>

262
00:12:57,350 --> 00:13:03,590
<font color="#E5E5E5">that minimum amount for every 20 bytes</font>

263
00:13:00,290 --> 00:13:06,620
you want to publish and that gets really

264
00:13:03,590 --> 00:13:10,070
<font color="#E5E5E5">expensive and on top of that you have to</font>

265
00:13:06,620 --> 00:13:11,390
pay transaction fees so a 1 1 megabyte

266
00:13:10,070 --> 00:13:14,810
if you wanted to push out with<font color="#E5E5E5"> this</font>

267
00:13:11,390 --> 00:13:17,750
method would cost about point 6<font color="#CCCCCC"> Bitcoin</font>

268
00:13:14,810 --> 00:13:21,349
which it today's today's rate is 250

269
00:13:17,750 --> 00:13:24,010
five dollars that's pretty<font color="#CCCCCC"> expensive for</font>

270
00:13:21,350 --> 00:13:24,010
just one megabyte

271
00:13:26,290 --> 00:13:29,769
so yeah like<font color="#E5E5E5"> I</font><font color="#CCCCCC"> said before the the</font>

272
00:13:28,180 --> 00:13:32,138
developers<font color="#E5E5E5"> really didn't like this you</font>

273
00:13:29,769 --> 00:13:34,240
<font color="#E5E5E5">TX</font><font color="#CCCCCC"> 0 pollution so they came up with a</font>

274
00:13:32,139 --> 00:13:38,139
compromise like I<font color="#CCCCCC"> said before</font><font color="#E5E5E5"> they're</font>

275
00:13:34,240 --> 00:13:41,649
the Bitcoin network has a scripting

276
00:13:38,139 --> 00:13:44,860
language so one of the opcodes is this

277
00:13:41,649 --> 00:13:49,420
OP return which in programming languages

278
00:13:44,860 --> 00:13:51,699
<font color="#E5E5E5">is basically saying like return false so</font>

279
00:13:49,420 --> 00:13:53,860
they change this to allow anybody to put

280
00:13:51,699 --> 00:13:57,099
at first 40 bytes and then I<font color="#E5E5E5"> think they</font>

281
00:13:53,860 --> 00:14:01,540
extended it to 80 bytes of just

282
00:13:57,100 --> 00:14:04,180
arbitrary data and the punch line here

283
00:14:01,540 --> 00:14:07,329
is that Opie return always results in

284
00:14:04,180 --> 00:14:10,479
failure so the transaction can never be

285
00:14:07,329 --> 00:14:11,829
spent and and the network knows this so

286
00:14:10,480 --> 00:14:14,319
it knows that it doesn't ever have to

287
00:14:11,829 --> 00:14:19,000
add it to the UT XO database to begin

288
00:14:14,319 --> 00:14:22,060
with so<font color="#CCCCCC"> prevents this</font><font color="#E5E5E5"> pollution problem</font>

289
00:14:19,000 --> 00:14:25,180
but you know on the<font color="#E5E5E5"> other hand you've</font>

290
00:14:22,060 --> 00:14:28,479
only got about 80 bites to to work with

291
00:14:25,180 --> 00:14:31,839
which<font color="#E5E5E5"> is very tiny that's one of the</font>

292
00:14:28,480 --> 00:14:33,579
main problems<font color="#E5E5E5"> with this is that the</font>

293
00:14:31,839 --> 00:14:34,810
payload is so timing with just 80<font color="#E5E5E5"> bytes</font>

294
00:14:33,579 --> 00:14:37,000
if you wanted a reference and other

295
00:14:34,810 --> 00:14:40,959
transactions to say continue continue

296
00:14:37,000 --> 00:14:44,550
publishing blocks with just 80 bites the

297
00:14:40,959 --> 00:14:46,719
transaction<font color="#CCCCCC"> IDs I think are 32 bytes so</font>

298
00:14:44,550 --> 00:14:49,149
<font color="#CCCCCC">you'd have to reference that in the</font>

299
00:14:46,720 --> 00:14:52,690
header and then you've only got 48 bytes

300
00:14:49,149 --> 00:14:54,610
remaining to do a payload and it's just

301
00:14:52,690 --> 00:14:56,769
extremely inefficient if you if you want

302
00:14:54,610 --> 00:14:58,949
to publish<font color="#E5E5E5"> anything large it's extremely</font>

303
00:14:56,769 --> 00:14:58,949
inefficient

304
00:15:01,630 --> 00:15:07,210
one of<font color="#E5E5E5"> things</font><font color="#CCCCCC"> I said</font><font color="#E5E5E5"> before is that</font>

305
00:15:03,430 --> 00:15:09,729
you've<font color="#CCCCCC"> got up to 256 outputs so one</font>

306
00:15:07,210 --> 00:15:13,150
might think ok well that's 80<font color="#E5E5E5"> bytes x</font>

307
00:15:09,730 --> 00:15:15,820
256 I guess that's maybe not so bad no

308
00:15:13,150 --> 00:15:17,980
unfortunately there's a restriction that

309
00:15:15,820 --> 00:15:20,110
that says you can only do 10 p return

310
00:15:17,980 --> 00:15:24,450
per transaction so you're just limited

311
00:15:20,110 --> 00:15:26,980
80 bytes per transaction period

312
00:15:24,450 --> 00:15:30,970
regardless people are using this method

313
00:15:26,980 --> 00:15:33,720
still<font color="#E5E5E5"> they're using this to publish</font>

314
00:15:30,970 --> 00:15:36,480
hashes and there's a website here

315
00:15:33,720 --> 00:15:39,820
eternity wall that<font color="#CCCCCC"> IT that lets you just</font>

316
00:15:36,480 --> 00:15:42,250
just type in a box and click publish and

317
00:15:39,820 --> 00:15:46,240
you just publish some small amount<font color="#E5E5E5"> of</font>

318
00:15:42,250 --> 00:15:48,190
texts in the blockchain so this<font color="#CCCCCC"> is a</font>

319
00:15:46,240 --> 00:15:52,840
this is a method that's actively used

320
00:15:48,190 --> 00:15:54,520
just<font color="#E5E5E5"> in a limited limited fashion so</font>

321
00:15:52,840 --> 00:15:56,590
here's my goals for<font color="#CCCCCC"> a new method since</font>

322
00:15:54,520 --> 00:15:59,140
since these two existing methods have so

323
00:15:56,590 --> 00:16:00,610
many downsides there's no way that you

324
00:15:59,140 --> 00:16:02,949
can use them to publish files of

325
00:16:00,610 --> 00:16:04,300
arbitrary size so that's one of<font color="#E5E5E5"> the</font>

326
00:16:02,950 --> 00:16:09,250
goals that I have<font color="#E5E5E5"> is I want to be able</font>

327
00:16:04,300 --> 00:16:11,620
to publish a file of any size I also

328
00:16:09,250 --> 00:16:14,350
want<font color="#E5E5E5"> to be able to search and or extract</font>

329
00:16:11,620 --> 00:16:16,600
the data like<font color="#E5E5E5"> I</font><font color="#CCCCCC"> said before the if you</font>

330
00:16:14,350 --> 00:16:19,810
can't do that it the data might as well

331
00:16:16,600 --> 00:16:21,310
not be<font color="#CCCCCC"> there i also want to minimize the</font>

332
00:16:19,810 --> 00:16:24,000
cost and I want these tools<font color="#E5E5E5"> to be</font>

333
00:16:21,310 --> 00:16:24,000
<font color="#E5E5E5">available to everybody</font>

334
00:16:33,569 --> 00:16:39,099
so<font color="#E5E5E5"> I started digging</font><font color="#CCCCCC"> around the the</font>

335
00:16:35,920 --> 00:16:42,099
<font color="#E5E5E5">Bitcoin code and I happened upon this is</font>

336
00:16:39,100 --> 00:16:45,420
standard TX method call this happens to

337
00:16:42,100 --> 00:16:47,679
<font color="#E5E5E5">be the gatekeeper to whether or not a</font>

338
00:16:45,420 --> 00:16:49,959
transaction will be relayed across the

339
00:16:47,679 --> 00:16:52,209
network so if you wanted to play around

340
00:16:49,959 --> 00:16:55,449
<font color="#E5E5E5">with you know any of the various</font>

341
00:16:52,209 --> 00:16:59,138
scripting language components to try to

342
00:16:55,449 --> 00:17:01,660
like<font color="#CCCCCC"> jam and data into a transaction you</font>

343
00:16:59,139 --> 00:17:06,870
need to pass this<font color="#CCCCCC"> is standard TX method</font>

344
00:17:01,660 --> 00:17:06,869
call so<font color="#CCCCCC"> I started by analyzing that I</font>

345
00:17:08,339 --> 00:17:13,480
started<font color="#E5E5E5"> looking at these multi sig</font>

346
00:17:11,079 --> 00:17:16,839
addresses that happened to<font color="#E5E5E5"> be the key to</font>

347
00:17:13,480 --> 00:17:19,000
solving everything so a little bit about

348
00:17:16,839 --> 00:17:23,500
these multi sig addresses it's kind of a

349
00:17:19,000 --> 00:17:25,779
kind<font color="#E5E5E5"> of obscure feature but pretty</font>

350
00:17:23,500 --> 00:17:32,860
interesting so it's a system so you can

351
00:17:25,779 --> 00:17:35,080
<font color="#CCCCCC">say here's a n</font><font color="#E5E5E5"> keys public keys and to</font>

352
00:17:32,860 --> 00:17:37,539
spend these coins any end of them are

353
00:17:35,080 --> 00:17:38,860
needed and that's up to 15 so what you

354
00:17:37,539 --> 00:17:41,770
<font color="#E5E5E5">can do is you can say all right well</font>

355
00:17:38,860 --> 00:17:46,178
here's seven keys and in order<font color="#E5E5E5"> to spend</font>

356
00:17:41,770 --> 00:17:48,250
these coins any three signatures need to

357
00:17:46,179 --> 00:17:52,390
be<font color="#E5E5E5"> present or you can say here's 11 keys</font>

358
00:17:48,250 --> 00:17:53,710
<font color="#CCCCCC">any</font><font color="#E5E5E5"> five of these need to be present</font><font color="#CCCCCC"> so</font>

359
00:17:52,390 --> 00:17:55,539
this can be kind of<font color="#E5E5E5"> useful if you want</font>

360
00:17:53,710 --> 00:17:57,789
<font color="#CCCCCC">to protect let's say against malware or</font>

361
00:17:55,539 --> 00:18:00,580
theft you can say all right here's a<font color="#E5E5E5"> two</font>

362
00:17:57,789 --> 00:18:02,230
of<font color="#E5E5E5"> two scheme so let's say you have one</font>

363
00:18:00,580 --> 00:18:05,168
key on your laptop and one key on your

364
00:18:02,230 --> 00:18:07,419
phone let's say<font color="#E5E5E5"> your your phone you lose</font>

365
00:18:05,169 --> 00:18:09,039
it or somebody steals it so they recover

366
00:18:07,419 --> 00:18:11,620
the key from there well in that case

367
00:18:09,039 --> 00:18:15,820
<font color="#E5E5E5">they the whoever stole your phone can't</font>

368
00:18:11,620 --> 00:18:17,408
spend your coins because they would need

369
00:18:15,820 --> 00:18:20,559
a signature from the key that's on your

370
00:18:17,409 --> 00:18:24,809
laptop so it's a separation of keys in

371
00:18:20,559 --> 00:18:24,809
order to allow spending<font color="#E5E5E5"> paper</font>

372
00:18:26,179 --> 00:18:30,960
and just FYI there at the bottom<font color="#CCCCCC"> I just</font>

373
00:18:29,370 --> 00:18:32,639
have an<font color="#E5E5E5"> example if you wanted to spot</font>

374
00:18:30,960 --> 00:18:33,960
out what a multi sisig address looks

375
00:18:32,640 --> 00:18:36,570
like they begin<font color="#CCCCCC"> with the number three</font>

376
00:18:33,960 --> 00:18:39,870
<font color="#CCCCCC">verses I think the standard ones begin</font>

377
00:18:36,570 --> 00:18:47,850
with a one just gives you an easy way to

378
00:18:39,870 --> 00:18:50,399
identify them so I looked at this and I

379
00:18:47,850 --> 00:18:54,350
said<font color="#CCCCCC"> alright well there's 15 keys up to</font>

380
00:18:50,400 --> 00:18:57,270
15 keys are supported so let's use them

381
00:18:54,350 --> 00:19:00,629
how about<font color="#CCCCCC"> we do something where we</font><font color="#E5E5E5"> we</font>

382
00:18:57,270 --> 00:19:02,520
<font color="#E5E5E5">generate one legitimate key and we set</font>

383
00:19:00,630 --> 00:19:06,120
up a system that says all right only one

384
00:19:02,520 --> 00:19:09,809
out of these 15 are needed and the other

385
00:19:06,120 --> 00:19:12,959
14 since one is the legitimate key the

386
00:19:09,809 --> 00:19:17,158
other 14 happen to be just data that's

387
00:19:12,960 --> 00:19:19,169
the data that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> want to publish so in</font>

388
00:19:17,159 --> 00:19:23,070
this case the the keys that are

389
00:19:19,169 --> 00:19:26,460
presented<font color="#E5E5E5"> are the raw</font><font color="#CCCCCC"> ECB's DSA keys and</font>

390
00:19:23,070 --> 00:19:31,260
those<font color="#CCCCCC"> are 32 bytes</font><font color="#E5E5E5"> so you've got 14 x 32</font>

391
00:19:26,460 --> 00:19:34,679
equals 448 bites and this isn't just per

392
00:19:31,260 --> 00:19:38,429
transaction this is / output so you can

393
00:19:34,679 --> 00:19:41,250
have<font color="#E5E5E5"> 200 in theory I'm going to get into</font>

394
00:19:38,429 --> 00:19:45,919
the restrictions later but in theory 448

395
00:19:41,250 --> 00:19:52,520
times for every 256 maximum outputs

396
00:19:45,919 --> 00:19:56,370
that's quite a lot so the advantages

397
00:19:52,520 --> 00:19:59,520
large payload another big one

398
00:19:56,370 --> 00:20:01,289
transactions remain spendable so because

399
00:19:59,520 --> 00:20:03,418
the coins are never destroyed because

400
00:20:01,289 --> 00:20:08,850
there's you'll always you always have

401
00:20:03,419 --> 00:20:11,730
that<font color="#E5E5E5"> one legitimate key to</font><font color="#CCCCCC"> actually to</font>

402
00:20:08,850 --> 00:20:13,980
ensure<font color="#CCCCCC"> that it remains spendable that</font>

403
00:20:11,730 --> 00:20:16,679
means the transactions are spendable so

404
00:20:13,980 --> 00:20:19,230
that the UT XO database doesn't get

405
00:20:16,679 --> 00:20:23,700
polluted that's that's a key point right

406
00:20:19,230 --> 00:20:27,419
here you only<font color="#E5E5E5"> need to pay transaction</font>

407
00:20:23,700 --> 00:20:32,880
fees for<font color="#CCCCCC"> this if at all and I'm going to</font>

408
00:20:27,419 --> 00:20:37,309
get into some situations later now I

409
00:20:32,880 --> 00:20:39,540
said before<font color="#E5E5E5"> it's 448 bytes per output</font>

410
00:20:37,309 --> 00:20:42,178
but unfortunately there's a there's a

411
00:20:39,540 --> 00:20:46,168
hard limit of<font color="#E5E5E5"> ten thousand bytes so your</font>

412
00:20:42,179 --> 00:20:47,669
transactions need to fit within that but

413
00:20:46,169 --> 00:20:51,530
I<font color="#CCCCCC"> think you can get somewhere around</font>

414
00:20:47,669 --> 00:20:51,530
ninety to ninety-five percent efficiency

415
00:20:52,490 --> 00:20:56,429
because there's going<font color="#E5E5E5"> to be overhead in</font>

416
00:20:54,809 --> 00:21:00,299
terms of like you know data structure

417
00:20:56,429 --> 00:21:01,890
and your transaction and so on<font color="#CCCCCC"> so you</font>

418
00:21:00,299 --> 00:21:03,510
can<font color="#E5E5E5"> you can get</font><font color="#CCCCCC"> pretty close to that ten</font>

419
00:21:01,890 --> 00:21:05,549
thousand bytes and maybe I don't<font color="#CCCCCC"> know</font>

420
00:21:03,510 --> 00:21:12,390
nine thousand bytes would be your data

421
00:21:05,549 --> 00:21:14,790
payload so that that's pretty<font color="#E5E5E5"> good so</font>

422
00:21:12,390 --> 00:21:18,799
<font color="#CCCCCC">here's</font><font color="#E5E5E5"> some numbers to publish one</font>

423
00:21:14,790 --> 00:21:20,850
megabyte using this method<font color="#E5E5E5"> will cost up</font>

424
00:21:18,799 --> 00:21:23,760
2.35<font color="#CCCCCC"> Bitcoin which is about</font><font color="#E5E5E5"> one hundred</font>

425
00:21:20,850 --> 00:21:26,760
fifty dollars now notice I've got and I

426
00:21:23,760 --> 00:21:32,850
italics they're up to and<font color="#E5E5E5"> I'll get into</font>

427
00:21:26,760 --> 00:21:34,830
later some more<font color="#CCCCCC"> about that in contrast</font>

428
00:21:32,850 --> 00:21:38,760
this with about<font color="#E5E5E5"> two hundred fifty five</font>

429
00:21:34,830 --> 00:21:40,260
dollars guaranteed<font color="#CCCCCC"> you will burn in the</font>

430
00:21:38,760 --> 00:21:47,400
first method so that's pretty<font color="#E5E5E5"> good just</font>

431
00:21:40,260 --> 00:21:48,990
right off the bat so the fastest

432
00:21:47,400 --> 00:21:52,140
publication time that you could get with

433
00:21:48,990 --> 00:21:56,220
for one megabyte would be 20 hours and

434
00:21:52,140 --> 00:21:58,500
that's because bitcoin targets about one

435
00:21:56,220 --> 00:22:02,360
new block about every<font color="#E5E5E5"> ten minutes so if</font>

436
00:21:58,500 --> 00:22:05,100
<font color="#E5E5E5">you're publishing about 9,000 bites</font>

437
00:22:02,360 --> 00:22:06,750
every 10 minutes it's going<font color="#E5E5E5"> to take you</font>

438
00:22:05,100 --> 00:22:11,309
roughly about 20 hours to publish a

439
00:22:06,750 --> 00:22:12,630
megabyte now there's a<font color="#E5E5E5"> trade-off as I</font>

440
00:22:11,309 --> 00:22:14,428
kept alluding to there's a trade-off

441
00:22:12,630 --> 00:22:19,590
between the fees paid and the time to

442
00:22:14,429 --> 00:22:21,990
publish so if you wanted if you wanted

443
00:22:19,590 --> 00:22:28,049
to pay less<font color="#CCCCCC"> and you are ok with waiting</font>

444
00:22:21,990 --> 00:22:30,720
longer you just reduce your fees and I

445
00:22:28,049 --> 00:22:33,600
don't have any<font color="#E5E5E5"> hard data as to as to the</font>

446
00:22:30,720 --> 00:22:36,120
effects of this but you know you could

447
00:22:33,600 --> 00:22:37,620
lower your transaction fees lower and

448
00:22:36,120 --> 00:22:40,020
lower until you got like a publication

449
00:22:37,620 --> 00:22:43,709
of time of days or weeks or even months

450
00:22:40,020 --> 00:22:45,090
and you know depending on what what

451
00:22:43,710 --> 00:22:49,049
<font color="#E5E5E5">situation you're in you might not care</font>

452
00:22:45,090 --> 00:22:50,050
like okay it takes me six weeks to

453
00:22:49,049 --> 00:22:52,740
publish this

454
00:22:50,050 --> 00:22:56,230
this document<font color="#E5E5E5"> I'm okay with</font><font color="#CCCCCC"> that</font>

455
00:22:52,740 --> 00:22:59,080
remember this isn't this isn't like your

456
00:22:56,230 --> 00:23:01,390
own personal cloud backup service you

457
00:22:59,080 --> 00:23:03,040
know like oh I<font color="#E5E5E5"> just took pictures of me</font>

458
00:23:01,390 --> 00:23:06,430
at the park I want to store them in a

459
00:23:03,040 --> 00:23:08,200
<font color="#E5E5E5">Bitcoin blockchain that's not really the</font>

460
00:23:06,430 --> 00:23:09,850
the<font color="#CCCCCC"> use case here this is you know</font>

461
00:23:08,200 --> 00:23:11,350
something you want to publish<font color="#E5E5E5"> something</font>

462
00:23:09,850 --> 00:23:14,110
very serious and you want it there

463
00:23:11,350 --> 00:23:16,750
forever that nobody<font color="#E5E5E5"> can ever delete so</font>

464
00:23:14,110 --> 00:23:18,490
in that kind of situation you might be

465
00:23:16,750 --> 00:23:21,160
okay with all right it's going to take

466
00:23:18,490 --> 00:23:22,750
you know five weeks to to publish

467
00:23:21,160 --> 00:23:25,780
something and I'm going to pay I don't

468
00:23:22,750 --> 00:23:34,320
know twenty thirty dollars might not<font color="#E5E5E5"> be</font>

469
00:23:25,780 --> 00:23:36,280
<font color="#E5E5E5">so bad one thing to notice is that</font>

470
00:23:34,320 --> 00:23:41,169
<font color="#CCCCCC">bitcoin isn't the only thing that you</font>

471
00:23:36,280 --> 00:23:42,850
can<font color="#E5E5E5"> publish into there are other</font>

472
00:23:41,170 --> 00:23:44,980
cryptocurrencies that they're pretty

473
00:23:42,850 --> 00:23:47,320
<font color="#E5E5E5">much started by copying the bitcoin</font>

474
00:23:44,980 --> 00:23:49,480
source code<font color="#E5E5E5"> and then just making a</font>

475
00:23:47,320 --> 00:23:51,820
little<font color="#E5E5E5"> bit of changes from</font><font color="#CCCCCC"> there</font>

476
00:23:49,480 --> 00:23:53,320
litecoin was one of the first ones and

477
00:23:51,820 --> 00:23:58,090
then a lot<font color="#CCCCCC"> of other cryptocurrencies</font>

478
00:23:53,320 --> 00:24:01,929
started off of of that so those crypto

479
00:23:58,090 --> 00:24:03,459
currencies all inherited unless the

480
00:24:01,930 --> 00:24:05,110
developer is actively you know went back

481
00:24:03,460 --> 00:24:08,020
and disable them they all inherited the

482
00:24:05,110 --> 00:24:09,850
multi<font color="#E5E5E5"> sig functionality so you can</font>

483
00:24:08,020 --> 00:24:14,350
<font color="#E5E5E5">publish into other other block chains</font>

484
00:24:09,850 --> 00:24:17,709
like dogecoin so here's a<font color="#CCCCCC"> little bit of</font>

485
00:24:14,350 --> 00:24:20,050
analysis of<font color="#E5E5E5"> that</font><font color="#CCCCCC"> Indo Jewish going to</font>

486
00:24:17,710 --> 00:24:23,620
block time is one minute versus 10

487
00:24:20,050 --> 00:24:26,230
minutes for Bitcoin and other major

488
00:24:23,620 --> 00:24:28,780
major advantages there is extremely low

489
00:24:26,230 --> 00:24:33,580
or even a lot of times no transaction

490
00:24:28,780 --> 00:24:37,990
fees at all the disadvantages though the

491
00:24:33,580 --> 00:24:40,210
network has<font color="#E5E5E5"> a much</font><font color="#CCCCCC"> lower hash rate than</font>

492
00:24:37,990 --> 00:24:42,460
Bitcoin and<font color="#E5E5E5"> the hash rate the the</font>

493
00:24:40,210 --> 00:24:44,470
collection<font color="#E5E5E5"> of all the hash rate for all</font>

494
00:24:42,460 --> 00:24:49,530
<font color="#E5E5E5">miners that's what specifically protects</font>

495
00:24:44,470 --> 00:24:54,420
the block chain from being reverted so

496
00:24:49,530 --> 00:24:56,800
it is a bit<font color="#CCCCCC"> more vulnerable to</font>

497
00:24:54,420 --> 00:24:59,419
transactions being reverted which means

498
00:24:56,800 --> 00:25:01,470
you know publications being reserved

499
00:24:59,419 --> 00:25:04,740
there's also a question of will it

500
00:25:01,470 --> 00:25:07,260
survive the dogecoin is very popular

501
00:25:04,740 --> 00:25:10,020
about two years ago and then in recent

502
00:25:07,260 --> 00:25:12,240
times it died down and<font color="#E5E5E5"> then sort of</font>

503
00:25:10,020 --> 00:25:14,370
leveled off so there's<font color="#E5E5E5"> still more of a</font>

504
00:25:12,240 --> 00:25:16,740
<font color="#CCCCCC">question</font><font color="#E5E5E5"> of will it survive</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> talking</font>

505
00:25:14,370 --> 00:25:19,199
<font color="#E5E5E5">about this context where I want to</font>

506
00:25:16,740 --> 00:25:22,440
publish something permanently there's

507
00:25:19,200 --> 00:25:23,970
sort of a question mark there but maybe

508
00:25:22,440 --> 00:25:25,380
<font color="#E5E5E5">that's okay I mean it's a</font><font color="#CCCCCC"> trade-off</font>

509
00:25:23,970 --> 00:25:28,950
there's many trade-offs in this whole

510
00:25:25,380 --> 00:25:32,160
system so it might<font color="#CCCCCC"> be okay you might be</font>

511
00:25:28,950 --> 00:25:35,760
okay with that because those advantages

512
00:25:32,160 --> 00:25:37,950
are pretty massive one month one

513
00:25:35,760 --> 00:25:40,860
megabyte can be<font color="#E5E5E5"> published for just 24</font>

514
00:25:37,950 --> 00:25:45,030
cents because<font color="#CCCCCC"> the transaction fees are</font>

515
00:25:40,860 --> 00:25:46,949
just so low and because<font color="#CCCCCC"> that block time</font>

516
00:25:45,030 --> 00:25:51,149
is<font color="#CCCCCC"> ten times faster you can publish</font><font color="#E5E5E5"> a</font>

517
00:25:46,950 --> 00:25:55,049
megabyte in two hours even<font color="#CCCCCC"> more is the</font>

518
00:25:51,150 --> 00:25:59,000
fact that their blocks tend to be mostly

519
00:25:55,049 --> 00:26:01,020
empty so there's no contention there

520
00:25:59,000 --> 00:26:03,840
what that means<font color="#E5E5E5"> is you can probably</font>

521
00:26:01,020 --> 00:26:06,690
flood the network with multiple

522
00:26:03,840 --> 00:26:08,520
transactions per block so it's possible

523
00:26:06,690 --> 00:26:10,470
that you could even you can get much

524
00:26:08,520 --> 00:26:13,860
less than two hours you could

525
00:26:10,470 --> 00:26:19,799
<font color="#CCCCCC">potentially publish a megabyte in just a</font>

526
00:26:13,860 --> 00:26:22,189
matter of minutes let me just check my

527
00:26:19,799 --> 00:26:22,190
<font color="#E5E5E5">time</font>

528
00:26:27,820 --> 00:26:34,520
here are some special<font color="#CCCCCC"> features that</font><font color="#E5E5E5"> I</font>

529
00:26:29,930 --> 00:26:37,610
have implemented at by default supports

530
00:26:34,520 --> 00:26:42,440
temporal encryption so if you go publish

531
00:26:37,610 --> 00:26:44,530
a file by default it will use<font color="#E5E5E5"> gpg to to</font>

532
00:26:42,440 --> 00:26:47,870
encrypt the file with a random key and

533
00:26:44,530 --> 00:26:50,540
in the<font color="#CCCCCC"> last block the key is divulged</font>

534
00:26:47,870 --> 00:26:53,209
there so this protects<font color="#E5E5E5"> the content while</font>

535
00:26:50,540 --> 00:26:55,580
you're publishing which might be<font color="#CCCCCC"> a very</font>

536
00:26:53,210 --> 00:26:57,920
<font color="#CCCCCC">useful feature to have you might not</font>

537
00:26:55,580 --> 00:27:02,899
want anybody<font color="#E5E5E5"> seeing what it is you know</font>

538
00:26:57,920 --> 00:27:04,370
that<font color="#CCCCCC"> being published until it's done on</font>

539
00:27:02,900 --> 00:27:06,650
the other hand you might be in a

540
00:27:04,370 --> 00:27:08,449
situation<font color="#E5E5E5"> where you want as much you</font>

541
00:27:06,650 --> 00:27:10,430
want<font color="#E5E5E5"> to</font><font color="#CCCCCC"> jam in as much as possible as</font>

542
00:27:08,450 --> 00:27:11,630
quickly as possible<font color="#CCCCCC"> because maybe</font>

543
00:27:10,430 --> 00:27:14,360
somebody's on to you<font color="#CCCCCC"> and they're about</font>

544
00:27:11,630 --> 00:27:22,730
to stop you so you can<font color="#E5E5E5"> turn off</font>

545
00:27:14,360 --> 00:27:25,790
encryption so that's up to you<font color="#E5E5E5"> I began</font>

546
00:27:22,730 --> 00:27:27,680
implementing another feature a Deadman

547
00:27:25,790 --> 00:27:30,830
<font color="#CCCCCC">switch and this is pretty pretty</font>

548
00:27:27,680 --> 00:27:32,870
interesting this can be in an insurance

549
00:27:30,830 --> 00:27:39,139
policy for some people in some very

550
00:27:32,870 --> 00:27:41,209
special situations let's say<font color="#E5E5E5"> okay so the</font>

551
00:27:39,140 --> 00:27:44,390
idea is that you would publish an

552
00:27:41,210 --> 00:27:46,970
encrypted archive except<font color="#E5E5E5"> that last block</font>

553
00:27:44,390 --> 00:27:49,610
<font color="#E5E5E5">doesn't have the key and then you can</font>

554
00:27:46,970 --> 00:27:51,110
<font color="#CCCCCC">set up some kind of external process so</font>

555
00:27:49,610 --> 00:27:53,510
that you know this person would have to

556
00:27:51,110 --> 00:27:56,240
<font color="#E5E5E5">check into on some kind of regular basis</font>

557
00:27:53,510 --> 00:27:58,430
like every<font color="#E5E5E5"> X hours or X days or once a</font>

558
00:27:56,240 --> 00:28:01,220
week or something<font color="#E5E5E5"> like that</font><font color="#CCCCCC"> and the idea</font>

559
00:27:58,430 --> 00:28:04,070
<font color="#CCCCCC">is</font><font color="#E5E5E5"> that if this person disappears if</font>

560
00:28:01,220 --> 00:28:07,310
they get arrested or fall down the

561
00:28:04,070 --> 00:28:10,100
flight<font color="#CCCCCC"> of stairs this process will</font>

562
00:28:07,310 --> 00:28:12,560
automatically publish the key so it can

563
00:28:10,100 --> 00:28:16,909
<font color="#CCCCCC">be an insurance mechanism this</font><font color="#E5E5E5"> is called</font>

564
00:28:12,560 --> 00:28:18,200
a Deadman switch<font color="#E5E5E5"> I don't have it fully</font>

565
00:28:16,910 --> 00:28:30,110
implemented yet of a coup

566
00:28:18,200 --> 00:28:33,410
but it's coming so a pretty big question

567
00:28:30,110 --> 00:28:35,120
I think<font color="#E5E5E5"> that comes up would</font><font color="#CCCCCC"> be can</font>

568
00:28:33,410 --> 00:28:37,030
bitcoin block<font color="#CCCCCC"> disk and the kind</font><font color="#E5E5E5"> of</font>

569
00:28:35,120 --> 00:28:39,409
developers block this and I<font color="#CCCCCC"> think</font>

570
00:28:37,030 --> 00:28:42,680
there's some things that they can do but

571
00:28:39,410 --> 00:28:47,210
not really without changing the

572
00:28:42,680 --> 00:28:48,950
functionality of those multi<font color="#E5E5E5"> sig the</font>

573
00:28:47,210 --> 00:28:51,350
support for the multi sig functionality

574
00:28:48,950 --> 00:28:54,980
so they can reduce the number of keys

575
00:28:51,350 --> 00:28:56,929
from 15 to something lower but you know

576
00:28:54,980 --> 00:28:59,240
that obviously<font color="#E5E5E5"> interfere can interfere</font>

577
00:28:56,930 --> 00:29:03,470
with<font color="#CCCCCC"> what people are legitimately using</font>

578
00:28:59,240 --> 00:29:05,420
it for and if they did that you can<font color="#E5E5E5"> just</font>

579
00:29:03,470 --> 00:29:08,030
bump up the number of outputs for

580
00:29:05,420 --> 00:29:10,610
<font color="#E5E5E5">transactions so you don't get you should</font>

581
00:29:08,030 --> 00:29:12,470
be able to always<font color="#E5E5E5"> fill up that ten ten</font>

582
00:29:10,610 --> 00:29:16,340
thousand<font color="#CCCCCC"> bike limit one way or</font><font color="#E5E5E5"> another</font>

583
00:29:12,470 --> 00:29:19,910
<font color="#E5E5E5">so it seems like probably</font><font color="#CCCCCC"> they probably</font>

584
00:29:16,340 --> 00:29:21,919
can't block this the thing is<font color="#E5E5E5"> they might</font>

585
00:29:19,910 --> 00:29:23,240
not even care one of the biggest things

586
00:29:21,920 --> 00:29:26,780
they cared about in the beginning was<font color="#E5E5E5"> a</font>

587
00:29:23,240 --> 00:29:29,780
<font color="#E5E5E5">the UT XO pollution which would create a</font>

588
00:29:26,780 --> 00:29:31,879
pretty major problem for them and this

589
00:29:29,780 --> 00:29:34,370
system doesn't doesn't result in that so

590
00:29:31,880 --> 00:29:36,200
I'm thinking they they probably don't

591
00:29:34,370 --> 00:29:38,870
even care on top of that the miners

592
00:29:36,200 --> 00:29:40,550
<font color="#E5E5E5">still get transaction fees so it's not</font>

593
00:29:38,870 --> 00:29:42,379
like you're abusing the network in any

594
00:29:40,550 --> 00:29:44,480
way the miners are still getting

595
00:29:42,380 --> 00:29:47,330
rewarded for this data that<font color="#E5E5E5"> you're</font>

596
00:29:44,480 --> 00:29:53,570
giving them so I'm thinking they might

597
00:29:47,330 --> 00:29:55,580
not even care so the code I've got

598
00:29:53,570 --> 00:29:57,710
available<font color="#CCCCCC"> right now there's a link to it</font>

599
00:29:55,580 --> 00:30:00,980
it's up on github it's currently in beta

600
00:29:57,710 --> 00:30:03,560
I<font color="#E5E5E5"> kind of wish I had more</font><font color="#CCCCCC"> time to finish</font>

601
00:30:00,980 --> 00:30:06,020
some of the features and things like

602
00:30:03,560 --> 00:30:09,050
that<font color="#E5E5E5"> but unfortunately I could only get</font>

603
00:30:06,020 --> 00:30:11,690
<font color="#CCCCCC">it in the state of a beta so if you guys</font>

604
00:30:09,050 --> 00:30:14,629
want to test<font color="#E5E5E5"> it out</font><font color="#CCCCCC"> and help me get that</font>

605
00:30:11,690 --> 00:30:17,980
to a version 1 point 0 stable and<font color="#CCCCCC"> I'm</font>

606
00:30:14,630 --> 00:30:17,980
hoping that'll be done by the summer

607
00:30:19,620 --> 00:30:23,459
and here's kind of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> punchline of</font><font color="#E5E5E5"> this</font>

608
00:30:21,420 --> 00:30:25,710
whole project is the fact that I don't

609
00:30:23,460 --> 00:30:28,470
want this<font color="#CCCCCC"> to be some kind</font><font color="#E5E5E5"> just just</font>

610
00:30:25,710 --> 00:30:32,100
another nerd tool you know it's a it's a

611
00:30:28,470 --> 00:30:35,040
command line<font color="#CCCCCC"> python application they're</font>

612
00:30:32,100 --> 00:30:36,780
on github I mean how many end users are

613
00:30:35,040 --> 00:30:38,909
going<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> able to figure this out you</font>

614
00:30:36,780 --> 00:30:41,370
know the techies can but you<font color="#E5E5E5"> know normal</font>

615
00:30:38,910 --> 00:30:44,340
everyday people it's like what's a

616
00:30:41,370 --> 00:30:46,919
Python script you know how do<font color="#E5E5E5"> I command</font>

617
00:30:44,340 --> 00:30:49,199
mine like it<font color="#E5E5E5"> doesn't make</font><font color="#CCCCCC"> any sense to</font>

618
00:30:46,920 --> 00:30:52,110
them so I don't want this to<font color="#E5E5E5"> be some</font>

619
00:30:49,200 --> 00:30:53,970
<font color="#E5E5E5">kind of like obscure hacker tool I want</font>

620
00:30:52,110 --> 00:30:56,250
the general public to be<font color="#CCCCCC"> able to do this</font>

621
00:30:53,970 --> 00:30:58,110
so I'm<font color="#E5E5E5"> going to be writing a website</font>

622
00:30:56,250 --> 00:31:00,300
front end for it<font color="#E5E5E5"> so people will be able</font>

623
00:30:58,110 --> 00:31:02,399
to<font color="#E5E5E5"> go to a website and you'll be able to</font>

624
00:31:00,300 --> 00:31:04,320
browse here's like the last ten things

625
00:31:02,400 --> 00:31:05,850
<font color="#CCCCCC">and the</font><font color="#E5E5E5"> Bitcoin blockchain you know</font>

626
00:31:04,320 --> 00:31:10,428
here's the last<font color="#E5E5E5"> ten things and dogecoin</font>

627
00:31:05,850 --> 00:31:13,139
you'd be able<font color="#E5E5E5"> to click download stuff</font>

628
00:31:10,429 --> 00:31:15,000
it'll<font color="#CCCCCC"> be a search bar and</font><font color="#E5E5E5"> there so you</font>

629
00:31:13,140 --> 00:31:19,500
can search you know based on file name

630
00:31:15,000 --> 00:31:21,990
based on file type stuff like that and

631
00:31:19,500 --> 00:31:25,230
the<font color="#CCCCCC"> ETA I think of that is also</font><font color="#E5E5E5"> going to</font>

632
00:31:21,990 --> 00:31:27,740
be<font color="#E5E5E5"> the summertime and of course you'd be</font>

633
00:31:25,230 --> 00:31:30,600
able to publish on the website as well

634
00:31:27,740 --> 00:31:33,350
so that's really<font color="#E5E5E5"> the</font><font color="#CCCCCC"> punchline for me</font>

635
00:31:30,600 --> 00:31:33,350
for this project

636
00:31:36,920 --> 00:31:52,850
any questions yes so all your data is

637
00:31:45,320 --> 00:31:58,280
going into into<font color="#E5E5E5"> the extra addresses yeah</font>

638
00:31:52,850 --> 00:32:01,010
so I mean I'm<font color="#CCCCCC"> just wondering what</font>

639
00:31:58,280 --> 00:32:04,120
happens regarding increasing the

640
00:32:01,010 --> 00:32:04,120
potential collision

641
00:32:13,340 --> 00:32:26,300
yeah<font color="#E5E5E5"> I suppose</font><font color="#CCCCCC"> I can happen but the but</font>

642
00:32:22,910 --> 00:32:28,700
those addresses whatever so it'll send

643
00:32:26,300 --> 00:32:30,980
like a very very small amount of like

644
00:32:28,700 --> 00:32:35,390
that the bare minimum a<font color="#E5E5E5"> Bitcoin to that</font>

645
00:32:30,980 --> 00:32:37,310
address but what gets sent there is not

646
00:32:35,390 --> 00:32:44,350
controllable except<font color="#CCCCCC"> for</font><font color="#E5E5E5"> that one</font>

647
00:32:37,310 --> 00:32:48,290
legitimate key so like that the bogus

648
00:32:44,350 --> 00:32:51,709
keys in this in this case cannot be used

649
00:32:48,290 --> 00:32:52,970
to control those funds the only the only

650
00:32:51,710 --> 00:32:54,440
<font color="#E5E5E5">thing that could</font><font color="#CCCCCC"> be used to control the</font>

651
00:32:52,970 --> 00:32:56,780
funds would<font color="#CCCCCC"> be that one legitimate key</font>

652
00:32:54,440 --> 00:32:59,720
the way it works<font color="#CCCCCC"> is you start off the</font>

653
00:32:56,780 --> 00:33:02,870
process you say at the command line you

654
00:32:59,720 --> 00:33:05,210
say here's a file I want to publish some

655
00:33:02,870 --> 00:33:08,300
other<font color="#CCCCCC"> options and it'll say all right to</font>

656
00:33:05,210 --> 00:33:11,210
<font color="#CCCCCC">start us start it off send X amount of</font>

657
00:33:08,300 --> 00:33:13,159
Bitcoin to this address and then you

658
00:33:11,210 --> 00:33:15,320
externally send that to that address and

659
00:33:13,160 --> 00:33:17,090
<font color="#E5E5E5">it'll notice that and then it starts</font>

660
00:33:15,320 --> 00:33:19,340
sending the Bitcoin back and forth back

661
00:33:17,090 --> 00:33:23,209
and forth to itself over and over again

662
00:33:19,340 --> 00:33:25,429
every transaction level and each time

663
00:33:23,210 --> 00:33:28,220
its publishing about you know up to

664
00:33:25,430 --> 00:33:30,200
<font color="#E5E5E5">about 9,000 bytes or so so every time</font>

665
00:33:28,220 --> 00:33:33,020
<font color="#E5E5E5">it's sending</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> coins back and forth</font>

666
00:33:30,200 --> 00:33:35,170
<font color="#E5E5E5">it's using that one legitimate key that</font>

667
00:33:33,020 --> 00:33:38,870
only you have because you generated it

668
00:33:35,170 --> 00:33:41,800
special for your own publication does

669
00:33:38,870 --> 00:33:41,800
that answer your question

670
00:33:46,290 --> 00:33:52,210
I think<font color="#E5E5E5"> we trying to ask like is it</font>

671
00:33:50,560 --> 00:34:01,929
possible<font color="#CCCCCC"> to somebody hot for somebody to</font>

672
00:33:52,210 --> 00:34:04,390
hijack the just as far as the as far<font color="#E5E5E5"> as</font>

673
00:34:01,930 --> 00:34:07,600
the ad like the address space in the

674
00:34:04,390 --> 00:34:09,220
other spaces of<font color="#CCCCCC"> men's but but those all</font>

675
00:34:07,600 --> 00:34:11,649
those addresses are being generated is a

676
00:34:09,219 --> 00:34:14,290
very randomly right now as you<font color="#E5E5E5"> start to</font>

677
00:34:11,649 --> 00:34:17,589
generate addresses based on things that

678
00:34:14,290 --> 00:34:19,929
<font color="#E5E5E5">are not really I just see that at some</font>

679
00:34:17,590 --> 00:34:24,040
point there to be collision between user

680
00:34:19,929 --> 00:34:26,409
is using this or I<font color="#E5E5E5"> just it just seems</font>

681
00:34:24,040 --> 00:34:29,320
<font color="#CCCCCC">that</font><font color="#E5E5E5"> they're monkeying with the</font><font color="#CCCCCC"> map</font>

682
00:34:26,409 --> 00:34:32,020
right and it's cool but I just wonder<font color="#CCCCCC"> if</font>

683
00:34:29,320 --> 00:34:34,300
there's you know there's an<font color="#E5E5E5"> apparent</font>

684
00:34:32,020 --> 00:34:35,860
<font color="#E5E5E5">claw there because we're we're kind of</font>

685
00:34:34,300 --> 00:34:37,840
me taking things<font color="#E5E5E5"> that are more</font>

686
00:34:35,860 --> 00:34:42,130
deterministic and work we're replacing

687
00:34:37,840 --> 00:34:44,530
something that's very<font color="#E5E5E5"> rare yeah I didn't</font>

688
00:34:42,130 --> 00:34:47,429
include this any slides on how these

689
00:34:44,530 --> 00:34:49,870
multi sick addresses i'm generating

690
00:34:47,429 --> 00:34:51,550
because i kind<font color="#CCCCCC"> of thought i was going</font><font color="#E5E5E5"> to</font>

691
00:34:49,870 --> 00:34:55,750
throw away too much information at you

692
00:34:51,550 --> 00:34:59,080
guys anyway as it<font color="#CCCCCC"> is but this</font><font color="#E5E5E5"> multi sick</font>

693
00:34:55,750 --> 00:35:04,360
address at the bottom the way that's

694
00:34:59,080 --> 00:35:10,270
generated is a hash of all the 15 keys

695
00:35:04,360 --> 00:35:12,070
the 14 fields which are data and<font color="#E5E5E5"> then</font>

696
00:35:10,270 --> 00:35:13,990
the one legitimate key they all get

697
00:35:12,070 --> 00:35:19,930
hashed in a certain way eventually

698
00:35:13,990 --> 00:35:22,959
leading to that so those 14 pieces of

699
00:35:19,930 --> 00:35:24,549
data may not be entirely random you know

700
00:35:22,960 --> 00:35:26,140
because if<font color="#CCCCCC"> you everybody's publishing</font>

701
00:35:24,550 --> 00:35:27,610
the same file over and over again it's

702
00:35:26,140 --> 00:35:30,120
going<font color="#E5E5E5"> to be those are always going to be</font>

703
00:35:27,610 --> 00:35:33,970
the same but everybody generates a

704
00:35:30,120 --> 00:35:35,740
random key themselves so then you append

705
00:35:33,970 --> 00:35:37,089
all this stuff<font color="#E5E5E5"> and there's a little bit</font>

706
00:35:35,740 --> 00:35:39,399
of randomness in there because<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that</font>

707
00:35:37,090 --> 00:35:42,930
unique key and<font color="#E5E5E5"> then all of</font><font color="#CCCCCC"> that is</font>

708
00:35:39,400 --> 00:35:45,880
hashed to get that multi sick address

709
00:35:42,930 --> 00:35:48,490
and so then funds are sent to this and

710
00:35:45,880 --> 00:35:50,980
then another<font color="#E5E5E5"> address is generated funds</font>

711
00:35:48,490 --> 00:35:53,279
are sent to that one and so on it just

712
00:35:50,980 --> 00:35:53,280
<font color="#E5E5E5">actually</font>

713
00:35:56,300 --> 00:36:01,290
yeah well it's always maintaining yeah

714
00:35:59,400 --> 00:36:03,660
it pretty much always maintains two and

715
00:36:01,290 --> 00:36:07,020
just can't keep sending funds back and

716
00:36:03,660 --> 00:36:08,848
forth back and forth and then in the

717
00:36:07,020 --> 00:36:14,759
transaction it says oh and<font color="#CCCCCC"> by the way</font>

718
00:36:08,849 --> 00:36:27,960
here's all the 15 keys that's included

719
00:36:14,760 --> 00:36:30,780
in there as well that's another slide

720
00:36:27,960 --> 00:36:33,150
that I intentionally didn't include just

721
00:36:30,780 --> 00:36:38,810
because I didn't want<font color="#E5E5E5"> to flood people</font>

722
00:36:33,150 --> 00:36:40,980
with information<font color="#CCCCCC"> um so because you can</font>

723
00:36:38,810 --> 00:36:44,009
so<font color="#E5E5E5"> because you can</font><font color="#CCCCCC"> publish it you know</font>

724
00:36:40,980 --> 00:36:45,630
about<font color="#CCCCCC"> 9,000</font><font color="#E5E5E5"> bytes per block there's</font>

725
00:36:44,010 --> 00:36:47,790
there's pretty<font color="#CCCCCC"> much it starts</font><font color="#E5E5E5"> with a</font>

726
00:36:45,630 --> 00:36:52,230
publication header that says here is the

727
00:36:47,790 --> 00:36:53,880
<font color="#E5E5E5">file name here's a description of</font><font color="#CCCCCC"> what</font>

728
00:36:52,230 --> 00:36:57,030
what's being published here's the file

729
00:36:53,880 --> 00:37:01,380
type here's whether it's encrypted or

730
00:36:57,030 --> 00:37:03,000
not and then and<font color="#E5E5E5"> then the continuation</font>

731
00:37:01,380 --> 00:37:04,710
block will say here's a here's a

732
00:37:03,000 --> 00:37:07,530
reference back<font color="#CCCCCC"> to that the prior</font>

733
00:37:04,710 --> 00:37:09,390
transaction that has the prior data and

734
00:37:07,530 --> 00:37:10,950
then so<font color="#CCCCCC"> then basically they're all</font>

735
00:37:09,390 --> 00:37:12,960
chained together and that at the end

736
00:37:10,950 --> 00:37:15,450
there's like a termination header so

737
00:37:12,960 --> 00:37:17,880
basically<font color="#CCCCCC"> to to search through the</font>

738
00:37:15,450 --> 00:37:20,569
<font color="#CCCCCC">blockchain</font><font color="#E5E5E5"> you just parse through and</font>

739
00:37:17,880 --> 00:37:27,170
just<font color="#CCCCCC"> keep looking for this header and</font>

740
00:37:20,570 --> 00:37:27,170
then once you find night what's up

741
00:37:42,210 --> 00:37:48,880
yeah you do<font color="#E5E5E5"> have to enable the TX index</font>

742
00:37:46,140 --> 00:37:51,910
you know so yeah once you enable that

743
00:37:48,880 --> 00:37:54,340
then you you've got all the data<font color="#E5E5E5"> you</font>

744
00:37:51,910 --> 00:37:57,759
need<font color="#E5E5E5"> and you can use the RPC they use it</font>

745
00:37:54,340 --> 00:38:00,430
to RPC calls to to<font color="#CCCCCC"> just pull down all</font>

746
00:37:57,760 --> 00:38:05,140
the raw<font color="#CCCCCC"> data and just pretty much looks</font>

747
00:38:00,430 --> 00:38:07,299
for that header right now the code

748
00:38:05,140 --> 00:38:10,779
doesn't support searching that's

749
00:38:07,300 --> 00:38:13,119
obviously a very major feature right now

750
00:38:10,780 --> 00:38:14,619
the code<font color="#E5E5E5"> just supports like real-time it</font>

751
00:38:13,119 --> 00:38:16,330
just pulls down what's what's being

752
00:38:14,619 --> 00:38:21,930
published in real time and that's just a

753
00:38:16,330 --> 00:38:21,930
current limitation question over<font color="#CCCCCC"> here</font>

754
00:38:26,040 --> 00:38:38,730
greater throughput with segregated oh is

755
00:38:34,869 --> 00:38:38,730
it one<font color="#E5E5E5"> of the proposed</font>

756
00:38:43,180 --> 00:38:53,690
<font color="#E5E5E5">okay ya know I actually don't know</font>

757
00:38:46,489 --> 00:38:55,819
anything about<font color="#CCCCCC"> that so I don't know</font><font color="#E5E5E5"> okay</font>

758
00:38:53,690 --> 00:38:59,210
it's called segregated witness yeah

759
00:38:55,819 --> 00:39:17,749
basically separates the signature of the

760
00:38:59,210 --> 00:39:22,999
transaction<font color="#E5E5E5"> oh ok yeah I suppose I</font>

761
00:39:17,749 --> 00:39:32,868
should look<font color="#E5E5E5"> into that any other</font>

762
00:39:22,999 --> 00:39:37,308
questions I've heard<font color="#CCCCCC"> about it I've right</font>

763
00:39:32,869 --> 00:39:43,729
a bit about about it but not so much is

764
00:39:37,309 --> 00:39:48,739
it<font color="#E5E5E5"> okay all right I suppose it will any</font>

765
00:39:43,729 --> 00:39:51,669
other questions all right thank<font color="#CCCCCC"> you very</font>

766
00:39:48,739 --> 00:39:51,670
much i'll be around if

