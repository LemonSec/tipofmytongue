1
00:00:02,689 --> 00:00:07,200
no i'm gerry geiger and i'm here to give

2
00:00:05,580 --> 00:00:10,070
you<font color="#E5E5E5"> a talk on a function of him with</font>

3
00:00:07,200 --> 00:00:13,830
exposed so grab that link<font color="#CCCCCC"> right there</font>

4
00:00:10,070 --> 00:00:15,120
tiny CC /d signs rock<font color="#E5E5E5"> dash exposed that</font>

5
00:00:13,830 --> 00:00:16,680
is the whole presentation all of the

6
00:00:15,120 --> 00:00:18,180
links all the code and<font color="#E5E5E5"> all this stuff do</font>

7
00:00:16,680 --> 00:00:19,890
you guys need from<font color="#E5E5E5"> this presentation are</font>

8
00:00:18,180 --> 00:00:21,570
going to be at<font color="#CCCCCC"> that length this will</font>

9
00:00:19,890 --> 00:00:22,619
link directly to this presentation<font color="#E5E5E5"> you</font>

10
00:00:21,570 --> 00:00:25,650
<font color="#E5E5E5">be able to look at it you can follow</font>

11
00:00:22,619 --> 00:00:27,000
along and grab the<font color="#E5E5E5"> leaves from there</font>

12
00:00:25,650 --> 00:00:27,930
that's<font color="#E5E5E5"> the easiest way I thought to</font>

13
00:00:27,000 --> 00:00:29,130
distribute all this stuff<font color="#E5E5E5"> because</font>

14
00:00:27,930 --> 00:00:32,460
there's a couple different github repos

15
00:00:29,130 --> 00:00:33,719
and things so grab that if you guys have

16
00:00:32,460 --> 00:00:35,700
any<font color="#CCCCCC"> questions throughout this entire</font>

17
00:00:33,719 --> 00:00:37,770
presentation just<font color="#E5E5E5"> please stop me and ask</font>

18
00:00:35,700 --> 00:00:39,719
your question<font color="#CCCCCC"> if I'm</font><font color="#E5E5E5"> going too fast I'm</font>

19
00:00:37,770 --> 00:00:41,579
talking too fast if I say something<font color="#E5E5E5"> that</font>

20
00:00:39,719 --> 00:00:43,379
doesn't make<font color="#E5E5E5"> any</font><font color="#CCCCCC"> sense phone now I'm</font>

21
00:00:41,579 --> 00:00:45,539
open<font color="#CCCCCC"> to that I want to</font><font color="#E5E5E5"> make this</font>

22
00:00:43,379 --> 00:00:48,269
presentation if you guys how'd it<font color="#CCCCCC"> be</font>

23
00:00:45,539 --> 00:00:50,879
educational so yeah so without further

24
00:00:48,270 --> 00:00:53,610
ado we'll move on so our<font color="#CCCCCC"> Jennifer today</font>

25
00:00:50,879 --> 00:00:56,010
is a who am i or<font color="#CCCCCC"> you kind of intro thing</font>

26
00:00:53,610 --> 00:00:58,350
<font color="#E5E5E5">looking into tools this presentation</font>

27
00:00:56,010 --> 00:01:00,899
kind of turned<font color="#CCCCCC"> into a we're kind of an</font>

28
00:00:58,350 --> 00:01:03,149
intro to reverse engineering Android as

29
00:01:00,899 --> 00:01:05,250
well as<font color="#E5E5E5"> expose you can't really do use</font>

30
00:01:03,149 --> 00:01:06,270
this expose framework thing without the

31
00:01:05,250 --> 00:01:08,310
worst engineering some of the<font color="#CCCCCC"> Android</font>

32
00:01:06,270 --> 00:01:11,429
applications so we're going to<font color="#E5E5E5"> look into</font>

33
00:01:08,310 --> 00:01:12,869
<font color="#CCCCCC">that what to hook finding the functions</font>

34
00:01:11,430 --> 00:01:15,600
with any applications that are you

35
00:01:12,869 --> 00:01:18,630
talking about finding the functions you

36
00:01:15,600 --> 00:01:20,820
want to cook and take advantage of basic

37
00:01:18,630 --> 00:01:22,710
hooks writing basic hooks to replace

38
00:01:20,820 --> 00:01:24,449
methods to do all sorts different things

39
00:01:22,710 --> 00:01:26,939
we're<font color="#E5E5E5"> going to be had a couple practical</font>

40
00:01:24,450 --> 00:01:30,210
examples these last three bullets each

41
00:01:26,939 --> 00:01:32,158
one has a practical example so basic

42
00:01:30,210 --> 00:01:35,399
books were those changing returned eyes

43
00:01:32,159 --> 00:01:38,640
things reverse engineering you'll have

44
00:01:35,400 --> 00:01:40,560
Bo be times where you know you have an

45
00:01:38,640 --> 00:01:42,630
application<font color="#E5E5E5"> and you need to figure out</font>

46
00:01:40,560 --> 00:01:44,159
what it does but maybe there's something

47
00:01:42,630 --> 00:01:45,929
in the way or there's some sort<font color="#E5E5E5"> of</font>

48
00:01:44,159 --> 00:01:47,220
strange algorithm to calculate something

49
00:01:45,930 --> 00:01:48,990
you can kind of make the appt do the

50
00:01:47,220 --> 00:01:51,329
work for you in that<font color="#E5E5E5"> case and then</font>

51
00:01:48,990 --> 00:01:52,420
disabling security checks specifically

52
00:01:51,329 --> 00:01:54,158
certificate

53
00:01:52,420 --> 00:01:55,750
kind<font color="#E5E5E5"> of get in the middle show made a</font>

54
00:01:54,159 --> 00:01:56,979
middling some traffic after every

55
00:01:55,750 --> 00:01:58,619
disabled certificate pinning within the

56
00:01:56,979 --> 00:02:02,320
app so I'm<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> through all this and</font>

57
00:01:58,619 --> 00:02:07,090
more I promise so here's the intro<font color="#CCCCCC"> i am</font>

58
00:02:02,320 --> 00:02:10,209
j guy Graham wombo lombo down in I like

59
00:02:07,090 --> 00:02:12,010
spongebob is I'm 22<font color="#CCCCCC"> it's fine in for a</font>

60
00:02:10,209 --> 00:02:13,810
second RIT it's my last year<font color="#CCCCCC"> i'm</font>

61
00:02:12,010 --> 00:02:16,540
graduating<font color="#E5E5E5"> i'm going</font><font color="#CCCCCC"> to a company called</font>

62
00:02:13,810 --> 00:02:20,260
grim after graduation griffco calm very

63
00:02:16,540 --> 00:02:23,290
small 15 people now really cool place to

64
00:02:20,260 --> 00:02:24,880
work my hobbies and interests cts

65
00:02:23,290 --> 00:02:27,940
reversing exploitation all that stuff

66
00:02:24,880 --> 00:02:30,100
poking android collecting acronyms what

67
00:02:27,940 --> 00:02:33,459
is it with<font color="#CCCCCC"> this field in acronyms yeah</font>

68
00:02:30,100 --> 00:02:35,769
crazy so<font color="#CCCCCC"> red team our development that's</font>

69
00:02:33,459 --> 00:02:38,769
<font color="#CCCCCC">uh my other work that</font><font color="#E5E5E5"> i do but i like</font>

70
00:02:35,769 --> 00:02:40,000
<font color="#E5E5E5">android and so work on that so for you</font>

71
00:02:38,769 --> 00:02:42,040
guys so this<font color="#E5E5E5"> a little</font>

72
00:02:40,000 --> 00:02:43,510
audience-participation part any<font color="#E5E5E5"> rit</font>

73
00:02:42,040 --> 00:02:45,160
students raise your hands p<font color="#E5E5E5"> rit students</font>

74
00:02:43,510 --> 00:02:46,268
just make sure you guys<font color="#E5E5E5"> are way going to</font>

75
00:02:45,160 --> 00:02:47,799
gauge body and<font color="#CCCCCC"> spread and in java</font>

76
00:02:46,269 --> 00:02:49,540
programmers anyone program a job and

77
00:02:47,799 --> 00:02:52,420
before a<font color="#E5E5E5"> couple people all right good</font>

78
00:02:49,540 --> 00:02:53,950
good android users I mean<font color="#CCCCCC"> introduced</font>

79
00:02:52,420 --> 00:02:56,708
<font color="#CCCCCC">forgotten here yeah there we go it's</font>

80
00:02:53,950 --> 00:03:00,548
good android application programmers

81
00:02:56,709 --> 00:03:03,280
done<font color="#CCCCCC"> any</font><font color="#E5E5E5"> app app</font><font color="#CCCCCC"> 10 or</font><font color="#E5E5E5"> anything</font><font color="#CCCCCC"> okay use</font>

82
00:03:00,549 --> 00:03:05,230
expose before heard of it ah there we go

83
00:03:03,280 --> 00:03:06,579
this is good then written any xposed

84
00:03:05,230 --> 00:03:08,679
module is you're getting people in here

85
00:03:06,579 --> 00:03:10,329
they've done that excellent this talk

86
00:03:08,680 --> 00:03:12,220
will be perfect then none of<font color="#E5E5E5"> the above</font>

87
00:03:10,329 --> 00:03:14,320
any of the people is just<font color="#E5E5E5"> alright there</font>

88
00:03:12,220 --> 00:03:16,000
we go people only level perfect so this

89
00:03:14,320 --> 00:03:18,790
talk is still for you<font color="#E5E5E5"> don't worry so</font>

90
00:03:16,000 --> 00:03:21,010
what<font color="#CCCCCC"> is n expose sounds hot yeah it is</font>

91
00:03:18,790 --> 00:03:22,570
it's it's<font color="#CCCCCC"> really actually awesome it's a</font>

92
00:03:21,010 --> 00:03:24,340
funky function and resource hooking

93
00:03:22,570 --> 00:03:26,410
framework so that means you can

94
00:03:24,340 --> 00:03:27,880
basically take a function or resource

95
00:03:26,410 --> 00:03:29,500
that an Android application uses and

96
00:03:27,880 --> 00:03:32,980
change it to do<font color="#CCCCCC"> whatever</font><font color="#E5E5E5"> you wanted to</font>

97
00:03:29,500 --> 00:03:34,989
do so returns parameters exceptions all

98
00:03:32,980 --> 00:03:36,399
of that and UI elements on the UI

99
00:03:34,989 --> 00:03:38,920
elements part is<font color="#E5E5E5"> not something i'll be</font>

100
00:03:36,400 --> 00:03:41,530
covering in this talk because it's this

101
00:03:38,920 --> 00:03:43,268
this is a huge topic like this framework

102
00:03:41,530 --> 00:03:45,280
does a lot of stuff so we're gonna go

103
00:03:43,269 --> 00:03:46,010
just mostly for we're gonna go entirely

104
00:03:45,280 --> 00:03:47,989
for<font color="#E5E5E5"> the function</font>

105
00:03:46,010 --> 00:03:50,540
part of us UI elements is something else

106
00:03:47,989 --> 00:03:52,250
that I'm<font color="#E5E5E5"> looking into even and it's it's</font>

107
00:03:50,540 --> 00:03:53,780
kind of complex I'm not<font color="#E5E5E5"> really an active</font>

108
00:03:52,250 --> 00:03:56,510
so this stuff<font color="#E5E5E5"> has kind of been</font>

109
00:03:53,780 --> 00:03:57,680
interested in for me to<font color="#E5E5E5"> look into so</font>

110
00:03:56,510 --> 00:03:59,899
it's minute written and maintained by

111
00:03:57,680 --> 00:04:01,340
<font color="#E5E5E5">this guy named Robo 89 there's this</font>

112
00:03:59,900 --> 00:04:04,129
github he has all this stuff is

113
00:04:01,340 --> 00:04:05,750
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> his xposed framework which</font>

114
00:04:04,129 --> 00:04:07,370
is a modified app process he's got that

115
00:04:05,750 --> 00:04:09,290
on there he's got<font color="#E5E5E5"> the Expos bridge which</font>

116
00:04:07,370 --> 00:04:11,060
is a java jar which will be talking

117
00:04:09,290 --> 00:04:13,608
<font color="#CCCCCC">about it's all up on there so you can go</font>

118
00:04:11,060 --> 00:04:15,170
look at<font color="#CCCCCC"> it and see how it works</font><font color="#E5E5E5"> so like</font>

119
00:04:13,609 --> 00:04:17,449
I said it replace the app process which

120
00:04:15,170 --> 00:04:19,279
has<font color="#E5E5E5"> been</font><font color="#CCCCCC"> actually the next slide how</font>

121
00:04:17,449 --> 00:04:20,478
does it work it doesn't change<font color="#CCCCCC"> a nap</font>

122
00:04:19,279 --> 00:04:22,309
signature this is a question<font color="#E5E5E5"> that i got</font>

123
00:04:20,478 --> 00:04:24,740
from someone when I when I show them

124
00:04:22,310 --> 00:04:26,600
this talk before it it was practicing

125
00:04:24,740 --> 00:04:27,680
does it<font color="#CCCCCC"> change the</font><font color="#E5E5E5"> apps signature and no</font>

126
00:04:26,600 --> 00:04:29,210
it<font color="#CCCCCC"> doesn't it doesn't modify the</font>

127
00:04:27,680 --> 00:04:33,139
application that you're hooking in any

128
00:04:29,210 --> 00:04:35,120
way it does in the background but<font color="#CCCCCC"> it</font>

129
00:04:33,139 --> 00:04:37,280
does not modify the package<font color="#E5E5E5"> of stuff so</font>

130
00:04:35,120 --> 00:04:39,410
it's a replacement app process that

131
00:04:37,280 --> 00:04:43,400
basically adds the expose this expose

132
00:04:39,410 --> 00:04:45,830
bridge jar to the classpath and any<font color="#E5E5E5"> java</font>

133
00:04:43,400 --> 00:04:47,539
programmers know a clasp at<font color="#E5E5E5"> it is</font>

134
00:04:45,830 --> 00:04:49,099
basically<font color="#E5E5E5"> what we're it loads all your</font>

135
00:04:47,539 --> 00:04:50,539
resources<font color="#CCCCCC"> I can</font><font color="#E5E5E5"> include for see so</font>

136
00:04:49,100 --> 00:04:52,160
you're including<font color="#E5E5E5"> this jar that basically</font>

137
00:04:50,539 --> 00:04:54,710
has a bunch of functions that<font color="#CCCCCC"> you can</font>

138
00:04:52,160 --> 00:04:56,690
call so when it starts when the<font color="#E5E5E5"> first</font>

139
00:04:54,710 --> 00:04:59,479
process<font color="#E5E5E5"> on Android is called psycho and</font>

140
00:04:56,690 --> 00:05:01,699
every process force off of that so if

141
00:04:59,479 --> 00:05:03,770
you can cook in a zygote which is<font color="#E5E5E5"> launch</font>

142
00:05:01,699 --> 00:05:05,780
<font color="#E5E5E5">the app process you can hook into every</font>

143
00:05:03,770 --> 00:05:08,389
single process that launches cycle is

144
00:05:05,780 --> 00:05:10,429
actually like a java java process like

145
00:05:08,389 --> 00:05:12,380
launched by app process and then every

146
00:05:10,430 --> 00:05:16,220
application<font color="#CCCCCC"> spoke elephant so if you add</font>

147
00:05:12,380 --> 00:05:18,740
a<font color="#E5E5E5"> Java class a</font><font color="#CCCCCC"> char to that app process</font>

148
00:05:16,220 --> 00:05:20,030
module you can actually<font color="#E5E5E5"> get that into</font>

149
00:05:18,740 --> 00:05:22,910
every single application unloads on the

150
00:05:20,030 --> 00:05:25,340
device so that's<font color="#E5E5E5"> how this is all done so</font>

151
00:05:22,910 --> 00:05:27,860
yes before<font color="#CCCCCC"> anyone asks you need root to</font>

152
00:05:25,340 --> 00:05:29,630
do this this talk is<font color="#E5E5E5"> more of like a you</font>

153
00:05:27,860 --> 00:05:31,250
know for your own personal like okay I

154
00:05:29,630 --> 00:05:33,680
want to do this with this application

155
00:05:31,250 --> 00:05:35,030
knowingly you're not going to put this

156
00:05:33,680 --> 00:05:37,840
<font color="#E5E5E5">on someone's phone and use it for like a</font>

157
00:05:35,030 --> 00:05:40,969
coder like<font color="#CCCCCC"> like back</font><font color="#E5E5E5"> door or something</font>

158
00:05:37,840 --> 00:05:42,830
so tools they live among us so I got to

159
00:05:40,970 --> 00:05:45,289
explain some tools before we go any

160
00:05:42,830 --> 00:05:47,300
<font color="#CCCCCC">further so you guys are kind</font><font color="#E5E5E5"> of aware of</font>

161
00:05:45,289 --> 00:05:50,180
what's out there for<font color="#CCCCCC"> Android reverse</font>

162
00:05:47,300 --> 00:05:52,090
engineering when you get an application

163
00:05:50,180 --> 00:05:55,360
<font color="#E5E5E5">an APK</font>

164
00:05:52,090 --> 00:05:57,159
Android's run these APK files they

165
00:05:55,360 --> 00:05:59,139
contain all the resources all the<font color="#CCCCCC"> java</font>

166
00:05:57,160 --> 00:06:02,830
classes and everything and there we good

167
00:05:59,139 --> 00:06:04,330
job so<font color="#CCCCCC"> you need a java decompiler to</font>

168
00:06:02,830 --> 00:06:05,650
really look you can basically look at

169
00:06:04,330 --> 00:06:08,409
the source code sometimes it's office

170
00:06:05,650 --> 00:06:09,789
<font color="#CCCCCC">gated sometimes it's not but these two</font>

171
00:06:08,410 --> 00:06:11,530
tools will basically allow you to

172
00:06:09,790 --> 00:06:12,460
decompile<font color="#E5E5E5"> on android applications the</font>

173
00:06:11,530 --> 00:06:15,309
one that<font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> taking</font>

174
00:06:12,460 --> 00:06:17,469
<font color="#E5E5E5">advantage of in this demonstration so</font>

175
00:06:15,310 --> 00:06:19,840
i'll be doing is jad which i found more

176
00:06:17,470 --> 00:06:21,790
recently but<font color="#CCCCCC"> better the d compilation</font>

177
00:06:19,840 --> 00:06:24,760
seems a bit<font color="#E5E5E5"> better it takes the java</font>

178
00:06:21,790 --> 00:06:26,919
classes and it just basically takes the

179
00:06:24,760 --> 00:06:29,020
bytecode and puts into back into a

180
00:06:26,919 --> 00:06:31,180
pseudo java for you to look at so it's a

181
00:06:29,020 --> 00:06:34,359
lot<font color="#CCCCCC"> easier to</font><font color="#E5E5E5"> look at them java bytecode</font>

182
00:06:31,180 --> 00:06:37,630
which is really obnoxious desta jar an

183
00:06:34,360 --> 00:06:39,580
<font color="#E5E5E5">80 k tool the way that you need to you</font>

184
00:06:37,630 --> 00:06:41,320
need<font color="#E5E5E5"> to convert your indicates two jars</font>

185
00:06:39,580 --> 00:06:43,270
so that's why we<font color="#E5E5E5"> have Dexta jars because</font>

186
00:06:41,320 --> 00:06:45,880
inside an<font color="#E5E5E5"> APK there's this thing called</font>

187
00:06:43,270 --> 00:06:47,139
the decks<font color="#CCCCCC"> and classes that text and</font>

188
00:06:45,880 --> 00:06:49,900
that's basically all the codes that

189
00:06:47,139 --> 00:06:51,820
application is one file Dexta jar takes

190
00:06:49,900 --> 00:06:53,500
that file and converts it to a java jar

191
00:06:51,820 --> 00:06:57,490
so you can actually decompile it with

192
00:06:53,500 --> 00:06:59,139
these with dad or JD giving an APK tool

193
00:06:57,490 --> 00:07:01,300
is useful if<font color="#E5E5E5"> you're reverse engineering</font>

194
00:06:59,139 --> 00:07:03,250
application as well extracts the smaller

195
00:07:01,300 --> 00:07:04,389
the java bytecode and then the resources

196
00:07:03,250 --> 00:07:07,870
from the<font color="#E5E5E5"> package so you can look at</font>

197
00:07:04,389 --> 00:07:09,400
those and change them if you want so a

198
00:07:07,870 --> 00:07:11,560
apt i'm going to be using this one

199
00:07:09,400 --> 00:07:14,380
actually pretty pretty heavily um this

200
00:07:11,560 --> 00:07:15,880
is a party android sdk and it allows you

201
00:07:14,380 --> 00:07:19,599
to see<font color="#CCCCCC"> the resources inside a package</font>

202
00:07:15,880 --> 00:07:21,789
without unpacking it<font color="#E5E5E5"> your d compiled</font>

203
00:07:19,599 --> 00:07:22,870
code doesn't have all the strings that

204
00:07:21,789 --> 00:07:23,860
you're<font color="#E5E5E5"> going to look for because you</font>

205
00:07:22,870 --> 00:07:24,729
<font color="#E5E5E5">know if you're reversing something</font>

206
00:07:23,860 --> 00:07:26,289
you're going to be<font color="#E5E5E5"> looking one of the</font>

207
00:07:24,729 --> 00:07:27,490
first things you look at its strengths

208
00:07:26,289 --> 00:07:30,010
<font color="#CCCCCC">ok i'm going to</font><font color="#E5E5E5"> find the circus train</font>

209
00:07:27,490 --> 00:07:31,120
that you know i think<font color="#CCCCCC"> is pertaining to</font>

210
00:07:30,010 --> 00:07:33,940
the part of the program<font color="#CCCCCC"> that i'm trying</font>

211
00:07:31,120 --> 00:07:34,870
to<font color="#E5E5E5"> get to</font><font color="#CCCCCC"> the strings aren't all in the</font>

212
00:07:33,940 --> 00:07:38,110
application on

213
00:07:34,870 --> 00:07:39,640
like they're referenced by number in a

214
00:07:38,110 --> 00:07:41,530
resource so you actually have<font color="#E5E5E5"> to use</font>

215
00:07:39,640 --> 00:07:44,620
this tool to find out where those

216
00:07:41,530 --> 00:07:47,349
resources are and you can use this tool

217
00:07:44,620 --> 00:07:48,820
to actually look for all the strings

218
00:07:47,350 --> 00:07:51,940
within the application and<font color="#E5E5E5"> you can grep</font>

219
00:07:48,820 --> 00:07:53,380
for them so from there you would

220
00:07:51,940 --> 00:07:55,270
basically say<font color="#CCCCCC"> okay I'm looking for</font><font color="#E5E5E5"> this</font>

221
00:07:53,380 --> 00:07:57,250
string has this ID and I'm going<font color="#E5E5E5"> to grep</font>

222
00:07:55,270 --> 00:07:59,500
for that in a code didn't compiled code

223
00:07:57,250 --> 00:08:01,210
and now I know what location that string

224
00:07:59,500 --> 00:08:03,400
with that so that's a you kind<font color="#CCCCCC"> of unique</font>

225
00:08:01,210 --> 00:08:04,599
thing with reversing<font color="#CCCCCC"> android classes</font>

226
00:08:03,400 --> 00:08:07,000
that you know kind<font color="#E5E5E5"> of have to do so</font>

227
00:08:04,600 --> 00:08:08,530
we're gonna be<font color="#CCCCCC"> using that I wrote some</font>

228
00:08:07,000 --> 00:08:09,940
custom tools to help with this because I

229
00:08:08,530 --> 00:08:11,559
was tired of doing these commands over

230
00:08:09,940 --> 00:08:13,360
and over and over<font color="#E5E5E5"> and over again and I</font>

231
00:08:11,560 --> 00:08:15,490
got<font color="#CCCCCC"> really mad as</font><font color="#E5E5E5"> you can see at this</font>

232
00:08:13,360 --> 00:08:17,580
last one because some fun sometimes

233
00:08:15,490 --> 00:08:19,720
there's obfuscation within these classes

234
00:08:17,580 --> 00:08:21,219
within these within these jars and

235
00:08:19,720 --> 00:08:22,960
sometimes they'll be named the classes

236
00:08:21,220 --> 00:08:25,600
hospitals will be named like<font color="#E5E5E5"> this a</font>

237
00:08:22,960 --> 00:08:27,039
<font color="#E5E5E5">capital A or is a capital a capital A</font>

238
00:08:25,600 --> 00:08:28,600
and I don't have a<font color="#CCCCCC"> case-sensitive file</font>

239
00:08:27,040 --> 00:08:29,980
system so these overwrite each other as

240
00:08:28,600 --> 00:08:32,680
soon as they unzip so I had to write

241
00:08:29,980 --> 00:08:33,850
this big like else curve it's not really

242
00:08:32,679 --> 00:08:35,620
a<font color="#CCCCCC"> big shell script but a shell script to</font>

243
00:08:33,850 --> 00:08:38,950
take it check if it's already there<font color="#E5E5E5"> and</font>

244
00:08:35,620 --> 00:08:40,659
then unpack it this also has the shitty

245
00:08:38,950 --> 00:08:43,060
options so that you<font color="#CCCCCC"> can that you can</font>

246
00:08:40,659 --> 00:08:47,290
unpack class our jars that have these

247
00:08:43,059 --> 00:08:49,750
ridiculous classes so the first one<font color="#E5E5E5"> will</font>

248
00:08:47,290 --> 00:08:52,209
take it will<font color="#E5E5E5"> take an APK file it will</font>

249
00:08:49,750 --> 00:08:55,000
convert it with vexed ajar to a jar it

250
00:08:52,210 --> 00:08:56,950
will unpack it by just unzip a jar file

251
00:08:55,000 --> 00:09:00,040
is simply a zip file and signed zip file

252
00:08:56,950 --> 00:09:01,450
and<font color="#CCCCCC"> then it will unpack it and if you</font>

253
00:09:00,040 --> 00:09:02,410
can hide everything so you can start<font color="#E5E5E5"> to</font>

254
00:09:01,450 --> 00:09:05,170
look at all the code in all the classes

255
00:09:02,410 --> 00:09:08,260
so does<font color="#CCCCCC"> that all in one jad actually</font>

256
00:09:05,170 --> 00:09:09,640
takes a<font color="#E5E5E5"> class file at a time so it's</font>

257
00:09:08,260 --> 00:09:10,990
really tedious to go through and<font color="#CCCCCC"> okay</font>

258
00:09:09,640 --> 00:09:13,270
<font color="#CCCCCC">i'm going</font><font color="#E5E5E5"> to compile this one now and if</font>

259
00:09:10,990 --> 00:09:14,740
you compile this one now so this this

260
00:09:13,270 --> 00:09:18,939
tool basically helps you do everything

261
00:09:14,740 --> 00:09:22,360
<font color="#E5E5E5">almost search string allow you to use a</font>

262
00:09:18,940 --> 00:09:23,980
<font color="#CCCCCC">pt's</font><font color="#E5E5E5"> apt to search strings if you find</font>

263
00:09:22,360 --> 00:09:25,840
say you're<font color="#E5E5E5"> looking in</font><font color="#CCCCCC"> the code somewhere</font>

264
00:09:23,980 --> 00:09:27,430
and to find a reference you<font color="#CCCCCC"> can paste it</font>

265
00:09:25,840 --> 00:09:28,120
as it the first part of<font color="#E5E5E5"> the second</font>

266
00:09:27,430 --> 00:09:30,760
argument

267
00:09:28,120 --> 00:09:32,770
search string and basically it will tell

268
00:09:30,760 --> 00:09:34,420
you what strength at ease so this<font color="#CCCCCC"> number</font>

269
00:09:32,770 --> 00:09:37,180
this big long decimal number or hex

270
00:09:34,420 --> 00:09:39,130
number or whatever you paste it and you

271
00:09:37,180 --> 00:09:40,989
can use that<font color="#E5E5E5"> I'll show you an example of</font>

272
00:09:39,130 --> 00:09:43,029
that constrain an example for that later

273
00:09:40,990 --> 00:09:44,320
so<font color="#E5E5E5"> you can find them here like you</font>

274
00:09:43,029 --> 00:09:46,270
settle the links for<font color="#CCCCCC"> all the tools for</font>

275
00:09:44,320 --> 00:09:49,200
<font color="#E5E5E5">this presentation or in the presentation</font>

276
00:09:46,270 --> 00:09:53,110
itself so make sure to<font color="#E5E5E5"> check those out</font>

277
00:09:49,200 --> 00:09:57,580
so what<font color="#CCCCCC"> so hook we</font><font color="#E5E5E5"> have to find</font>

278
00:09:53,110 --> 00:09:59,410
something to go<font color="#CCCCCC"> after this involves</font>

279
00:09:57,580 --> 00:10:01,420
reverse engineering the application so

280
00:09:59,410 --> 00:10:04,000
the process<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I usually use this is</font>

281
00:10:01,420 --> 00:10:05,920
this is it you gotta get the APK first

282
00:10:04,000 --> 00:10:08,350
you have to get<font color="#CCCCCC"> ahold</font><font color="#E5E5E5"> of this file as</font>

283
00:10:05,920 --> 00:10:11,380
the application you can get it at ATK

284
00:10:08,350 --> 00:10:14,170
for fun<font color="#CCCCCC"> calm which is it'll give you any</font>

285
00:10:11,380 --> 00:10:15,550
case don't hire things<font color="#CCCCCC"> i sometimes use</font>

286
00:10:14,170 --> 00:10:17,500
this just to check out cam in a poke at

287
00:10:15,550 --> 00:10:19,449
this this application and grab you know

288
00:10:17,500 --> 00:10:21,130
grab it offline i'm just i don't have a

289
00:10:19,450 --> 00:10:23,320
USB cable<font color="#E5E5E5"> i'm just trying to in our</font><font color="#CCCCCC"> vs</font>

290
00:10:21,130 --> 00:10:25,689
<font color="#CCCCCC">ok before</font><font color="#E5E5E5"> you can get it in this</font>

291
00:10:23,320 --> 00:10:27,790
directory on your phone so if you use an

292
00:10:25,690 --> 00:10:29,710
adb shell and you get shell access to

293
00:10:27,790 --> 00:10:31,300
your phone you need room to get into

294
00:10:29,710 --> 00:10:34,209
this area we need to do<font color="#E5E5E5"> this all this</font>

295
00:10:31,300 --> 00:10:36,849
expose stuff anywhere anyway so you

296
00:10:34,209 --> 00:10:39,339
should<font color="#E5E5E5"> have that</font><font color="#CCCCCC"> already convert it to a</font>

297
00:10:36,850 --> 00:10:41,770
jar with our dexter our program so

298
00:10:39,339 --> 00:10:44,890
that's literally next to jar than the

299
00:10:41,770 --> 00:10:46,959
APK you've extracted decompile with

300
00:10:44,890 --> 00:10:48,939
<font color="#CCCCCC">theater</font><font color="#E5E5E5"> jad RJD GUI whatever you prefer</font>

301
00:10:46,959 --> 00:10:52,630
jazz with command line tool only and JD

302
00:10:48,940 --> 00:10:54,190
who actually has a humanist maybe smash

303
00:10:52,630 --> 00:10:56,320
your head against the obfuscation like i

304
00:10:54,190 --> 00:10:58,120
<font color="#CCCCCC">said i will i was actually show you</font>

305
00:10:56,320 --> 00:10:59,920
guys later one of<font color="#CCCCCC"> the applications</font><font color="#E5E5E5"> that</font>

306
00:10:58,120 --> 00:11:01,660
i have is heavily office gated like this

307
00:10:59,920 --> 00:11:04,560
that's why i had to<font color="#E5E5E5"> write that one tool</font>

308
00:11:01,660 --> 00:11:06,459
and the class names are just horrendous

309
00:11:04,560 --> 00:11:09,910
identifying the relevant classes and

310
00:11:06,459 --> 00:11:11,560
functions so you can do that<font color="#E5E5E5"> by standard</font>

311
00:11:09,910 --> 00:11:12,910
<font color="#CCCCCC">verse engineering techniques looking</font>

312
00:11:11,560 --> 00:11:15,400
<font color="#CCCCCC">through seeing how things are connected</font>

313
00:11:12,910 --> 00:11:17,260
reading the code understanding it trying

314
00:11:15,400 --> 00:11:20,079
to find<font color="#E5E5E5"> i usually start up with strings</font>

315
00:11:17,260 --> 00:11:21,610
honestly like looking at you know what

316
00:11:20,080 --> 00:11:22,300
what strings are there that's one of the

317
00:11:21,610 --> 00:11:24,310
demos actually

318
00:11:22,300 --> 00:11:26,020
going to do is looking at something

319
00:11:24,310 --> 00:11:30,219
trying<font color="#CCCCCC"> to find out how it's doing</font>

320
00:11:26,020 --> 00:11:32,020
something via the strings so I've come

321
00:11:30,220 --> 00:11:33,940
up with a couple<font color="#CCCCCC"> different scenarios to</font>

322
00:11:32,020 --> 00:11:37,210
kind of give you an<font color="#CCCCCC"> idea what use cases</font>

323
00:11:33,940 --> 00:11:39,100
for this would be so before we talk

324
00:11:37,210 --> 00:11:41,920
about those these<font color="#E5E5E5"> are like this is the</font>

325
00:11:39,100 --> 00:11:43,420
meat of the<font color="#E5E5E5"> programming part like you</font>

326
00:11:41,920 --> 00:11:45,400
need<font color="#CCCCCC"> to understand what all these things</font>

327
00:11:43,420 --> 00:11:46,750
do to be able to program a module the

328
00:11:45,400 --> 00:11:48,430
exposed bridge is that<font color="#E5E5E5"> class that we</font>

329
00:11:46,750 --> 00:11:50,800
talked about before that gets loaded on

330
00:11:48,430 --> 00:11:54,099
when they expose thingy the exposed

331
00:11:50,800 --> 00:11:56,650
hooks app process or the modified

332
00:11:54,100 --> 00:11:58,000
process loads the path<font color="#CCCCCC"> the jar this is</font>

333
00:11:56,650 --> 00:12:01,240
the jar that loads you need this to be

334
00:11:58,000 --> 00:12:03,370
<font color="#CCCCCC">able to build these modules are they</font>

335
00:12:01,240 --> 00:12:05,080
essentially compiled to apks and the

336
00:12:03,370 --> 00:12:08,110
xposed framework will apply to any

337
00:12:05,080 --> 00:12:09,190
employment is<font color="#E5E5E5"> able expose helpers find</font>

338
00:12:08,110 --> 00:12:11,770
hook method if we're going<font color="#E5E5E5"> to be living</font>

339
00:12:09,190 --> 00:12:13,480
on this this is it finds a method by

340
00:12:11,770 --> 00:12:15,970
class name and method name and

341
00:12:13,480 --> 00:12:17,940
parameters and will<font color="#E5E5E5"> allow you to hook it</font>

342
00:12:15,970 --> 00:12:20,140
and change it into whatever way you want

343
00:12:17,940 --> 00:12:22,030
call method is something that I've<font color="#CCCCCC"> used</font>

344
00:12:20,140 --> 00:12:23,980
before you can call methods out of line

345
00:12:22,030 --> 00:12:25,569
I don't have a specific example of<font color="#E5E5E5"> that</font>

346
00:12:23,980 --> 00:12:26,950
in this<font color="#E5E5E5"> talk but I think it's a</font><font color="#CCCCCC"> really</font>

347
00:12:25,570 --> 00:12:29,050
cool thing that you<font color="#E5E5E5"> can kind of do just</font>

348
00:12:26,950 --> 00:12:30,190
all right before this function runs call

349
00:12:29,050 --> 00:12:31,900
this other function and then get the

350
00:12:30,190 --> 00:12:35,710
return and do something as a<font color="#E5E5E5"> result of</font>

351
00:12:31,900 --> 00:12:38,319
that I exposed hook load package is a

352
00:12:35,710 --> 00:12:40,420
class that<font color="#CCCCCC"> your is as a class are going</font>

353
00:12:38,320 --> 00:12:43,680
<font color="#CCCCCC">to implement so you're implementing this</font>

354
00:12:40,420 --> 00:12:46,630
tunable core packages so on a pin it

355
00:12:43,680 --> 00:12:48,310
every time<font color="#E5E5E5"> this will get loaded and then</font>

356
00:12:46,630 --> 00:12:49,630
you'll see it check you can<font color="#E5E5E5"> check for a</font>

357
00:12:48,310 --> 00:12:51,069
package shame if it's the package name

358
00:12:49,630 --> 00:12:52,900
you're looking for us to have you're

359
00:12:51,070 --> 00:12:55,570
trying to hook you continue if not you

360
00:12:52,900 --> 00:12:57,400
just exit XD method replacement and XD

361
00:12:55,570 --> 00:12:58,810
method hook are really important those

362
00:12:57,400 --> 00:13:01,060
are<font color="#E5E5E5"> the two things</font><font color="#CCCCCC"> that actually do the</font>

363
00:12:58,810 --> 00:13:02,619
work for you and they're used with

364
00:13:01,060 --> 00:13:04,569
finding<font color="#CCCCCC"> quick method so these two are</font>

365
00:13:02,620 --> 00:13:05,980
they do exactly what they sound like

366
00:13:04,570 --> 00:13:09,850
this<font color="#CCCCCC"> hooks a method and this</font>

367
00:13:05,980 --> 00:13:13,480
Title II load package load package

368
00:13:09,850 --> 00:13:15,460
program is essentially a package

369
00:13:13,480 --> 00:13:16,870
information will be using<font color="#E5E5E5"> that to</font>

370
00:13:15,460 --> 00:13:19,390
identify if this is the correct app that

371
00:13:16,870 --> 00:13:21,220
we're<font color="#E5E5E5"> looking</font><font color="#CCCCCC"> for if when were writing a</font>

372
00:13:19,390 --> 00:13:22,540
modular and then the Expos bridge that's

373
00:13:21,220 --> 00:13:23,800
basically logging helper than i'm going

374
00:13:22,540 --> 00:13:25,360
to using a lot so I threw<font color="#CCCCCC"> that in the</font>

375
00:13:23,800 --> 00:13:29,770
<font color="#E5E5E5">bottom that's like the base expose</font>

376
00:13:25,360 --> 00:13:33,670
bridge well<font color="#E5E5E5"> again so module structure</font>

377
00:13:29,770 --> 00:13:35,079
<font color="#E5E5E5">I'm providing code in this talk for a</font>

378
00:13:33,670 --> 00:13:36,640
skeleton there's a skeleton<font color="#E5E5E5"> creator you</font>

379
00:13:35,080 --> 00:13:37,930
run the script with a bunch of arguments

380
00:13:36,640 --> 00:13:39,460
it will tell you what<font color="#E5E5E5"> they</font><font color="#CCCCCC"> are and it</font>

381
00:13:37,930 --> 00:13:40,989
will create a new module for you that's

382
00:13:39,460 --> 00:13:43,180
ready<font color="#E5E5E5"> to build so you can see into it</font>

383
00:13:40,990 --> 00:13:46,240
directly and<font color="#CCCCCC"> it will hook the app that</font>

384
00:13:43,180 --> 00:13:47,589
you want<font color="#E5E5E5"> or it'll create a package for</font>

385
00:13:46,240 --> 00:13:48,820
you that builds and you can just modify

386
00:13:47,590 --> 00:13:50,880
the code from there so you want to spend

387
00:13:48,820 --> 00:13:54,130
<font color="#E5E5E5">time fighting with building build stuff</font>

388
00:13:50,880 --> 00:13:55,990
so you need this expose bridge rd build

389
00:13:54,130 --> 00:13:59,470
it this is<font color="#E5E5E5"> just the whole project</font>

390
00:13:55,990 --> 00:14:01,450
structure<font color="#CCCCCC"> I'm not going to</font><font color="#E5E5E5"> go over this</font>

391
00:13:59,470 --> 00:14:03,480
too much because there's examples of it

392
00:14:01,450 --> 00:14:05,320
the only<font color="#E5E5E5"> important things to know are</font>

393
00:14:03,480 --> 00:14:07,230
exposed at Nick which is a new thing

394
00:14:05,320 --> 00:14:10,060
which is<font color="#E5E5E5"> added as an asset that</font>

395
00:14:07,230 --> 00:14:12,700
basically says run this class when this

396
00:14:10,060 --> 00:14:15,040
module starts like grab this class which

397
00:14:12,700 --> 00:14:17,680
is the one that will<font color="#E5E5E5"> be in here</font><font color="#CCCCCC"> java</font>

398
00:14:15,040 --> 00:14:21,610
<font color="#E5E5E5">you're accompanying whatever acne and</font>

399
00:14:17,680 --> 00:14:23,560
plugs java so this path minus the java

400
00:14:21,610 --> 00:14:25,900
will be an exposed in it saying when<font color="#CCCCCC"> you</font>

401
00:14:23,560 --> 00:14:30,219
load this module load up this code and

402
00:14:25,900 --> 00:14:31,780
<font color="#CCCCCC">that'll do</font><font color="#E5E5E5"> that so a side note on</font>

403
00:14:30,220 --> 00:14:34,720
building installing<font color="#CCCCCC"> it's but with Gradle</font>

404
00:14:31,780 --> 00:14:37,839
it's a build system the<font color="#E5E5E5"> output the</font>

405
00:14:34,720 --> 00:14:41,740
output is an<font color="#E5E5E5"> apk and it's sent to at</font>

406
00:14:37,840 --> 00:14:43,450
bill's outputs APK<font color="#E5E5E5"> after a fashion bug</font>

407
00:14:41,740 --> 00:14:44,950
day<font color="#CCCCCC"> okay so that's the file you'll be</font>

408
00:14:43,450 --> 00:14:46,990
installing on your device to install the

409
00:14:44,950 --> 00:14:49,450
module feel<font color="#E5E5E5"> free to sign it if you want</font>

410
00:14:46,990 --> 00:14:51,010
this is just a debug app it will install

411
00:14:49,450 --> 00:14:53,470
just fine with this command right here

412
00:14:51,010 --> 00:14:54,700
so<font color="#E5E5E5"> I've been using that I've</font><font color="#CCCCCC"> just been</font>

413
00:14:53,470 --> 00:14:56,590
<font color="#CCCCCC">using the debug versions and it works</font>

414
00:14:54,700 --> 00:15:00,490
just<font color="#E5E5E5"> fine so now we're actually going to</font>

415
00:14:56,590 --> 00:15:03,700
give you<font color="#CCCCCC"> the meat of the code of package</font>

416
00:15:00,490 --> 00:15:05,889
hooking what package loads so like<font color="#E5E5E5"> I</font>

417
00:15:03,700 --> 00:15:07,239
said load package there's<font color="#CCCCCC"> one of the</font>

418
00:15:05,889 --> 00:15:08,589
things we've seen before<font color="#E5E5E5"> and another</font>

419
00:15:07,239 --> 00:15:10,119
important part<font color="#CCCCCC"> of this is a handle</font>

420
00:15:08,589 --> 00:15:11,529
little baggage function so we're<font color="#E5E5E5"> using</font>

421
00:15:10,119 --> 00:15:13,449
this for implementing this function

422
00:15:11,529 --> 00:15:15,579
handle load package so this function

423
00:15:13,449 --> 00:15:17,319
will launch every single time and

424
00:15:15,579 --> 00:15:19,209
package gets loaded up so every time you

425
00:15:17,319 --> 00:15:21,729
open an app every time an app opens this

426
00:15:19,209 --> 00:15:23,469
will run as<font color="#E5E5E5"> you have to check is the</font>

427
00:15:21,730 --> 00:15:26,109
package name equal<font color="#CCCCCC"> to what I'm trying to</font>

428
00:15:23,470 --> 00:15:28,389
find if it's not quick just go off just

429
00:15:26,109 --> 00:15:30,699
leave if it is then we want<font color="#E5E5E5"> to hook</font>

430
00:15:28,389 --> 00:15:31,739
methods so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the main</font><font color="#CCCCCC"> Skelton</font>

431
00:15:30,699 --> 00:15:36,128
you're going to be using applications

432
00:15:31,739 --> 00:15:38,079
you<font color="#CCCCCC"> can also hook you can also cook UI</font>

433
00:15:36,129 --> 00:15:39,549
elements in a different way by

434
00:15:38,079 --> 00:15:41,498
implementing a different class and also

435
00:15:39,549 --> 00:15:43,358
<font color="#CCCCCC">a zygote itself so the main Android</font>

436
00:15:41,499 --> 00:15:44,949
process which is pretty cool but this<font color="#E5E5E5"> is</font>

437
00:15:43,359 --> 00:15:48,519
an application hooking talk so I'm

438
00:15:44,949 --> 00:15:51,040
talking about just loaded packages so

439
00:15:48,519 --> 00:15:53,199
any questions<font color="#CCCCCC"> so far</font><font color="#E5E5E5"> I try to speed</font>

440
00:15:51,040 --> 00:15:55,629
through the beginning because it's not

441
00:15:53,199 --> 00:15:59,108
really it's not<font color="#E5E5E5"> the title of my topic so</font>

442
00:15:55,629 --> 00:16:01,089
this is the more important<font color="#E5E5E5"> stuff so this</font>

443
00:15:59,109 --> 00:16:02,290
is<font color="#CCCCCC"> all</font><font color="#E5E5E5"> about finding hook method like I</font>

444
00:16:01,089 --> 00:16:03,609
said<font color="#E5E5E5"> this is really important going to</font>

445
00:16:02,290 --> 00:16:05,639
be living on this this is<font color="#E5E5E5"> going to be</font>

446
00:16:03,609 --> 00:16:08,319
our main<font color="#CCCCCC"> thing that we're</font><font color="#E5E5E5"> gonna be using</font>

447
00:16:05,639 --> 00:16:09,970
it finds a class it does exactly what it

448
00:16:08,319 --> 00:16:12,339
sounds like it<font color="#E5E5E5"> finds a class measured by</font>

449
00:16:09,970 --> 00:16:14,199
name and helps it to do whatever you

450
00:16:12,339 --> 00:16:15,699
want really so there's five different

451
00:16:14,199 --> 00:16:18,099
scenarios that I've<font color="#E5E5E5"> come up</font><font color="#CCCCCC"> with and</font>

452
00:16:15,699 --> 00:16:20,079
have small examples for so you guys<font color="#E5E5E5"> get</font>

453
00:16:18,100 --> 00:16:23,189
<font color="#E5E5E5">a feel on how this kind</font><font color="#CCCCCC"> of works you</font><font color="#E5E5E5"> can</font>

454
00:16:20,079 --> 00:16:26,378
return<font color="#CCCCCC"> a constant so true false 789</font>

455
00:16:23,189 --> 00:16:29,169
spongebob whatever ignore it completely

456
00:16:26,379 --> 00:16:31,179
just make the function to do nothing do

457
00:16:29,169 --> 00:16:34,059
something before it's called do

458
00:16:31,179 --> 00:16:36,699
something else entirely or do something

459
00:16:34,059 --> 00:16:40,149
after it's called successfully and so

460
00:16:36,699 --> 00:16:41,559
this<font color="#CCCCCC"> is the main way you call this you</font>

461
00:16:40,149 --> 00:16:43,839
<font color="#E5E5E5">specify the class name that it's within</font>

462
00:16:41,559 --> 00:16:45,910
LP<font color="#CCCCCC"> Prem class loader is always the</font>

463
00:16:43,839 --> 00:16:47,619
second argument the function name<font color="#E5E5E5"> in</font>

464
00:16:45,910 --> 00:16:50,679
quotes and then if there's any arguments

465
00:16:47,619 --> 00:16:51,879
you need to provide them as you need<font color="#E5E5E5"> to</font>

466
00:16:50,679 --> 00:16:52,430
provide them in a certain way which will

467
00:16:51,879 --> 00:16:55,130
show

468
00:16:52,430 --> 00:16:57,349
my example come and then the actual hook

469
00:16:55,130 --> 00:16:59,540
itself which<font color="#CCCCCC"> is one of</font><font color="#E5E5E5"> the two that i</font>

470
00:16:57,350 --> 00:17:01,339
showed before XC method hook or XD

471
00:16:59,540 --> 00:17:04,609
<font color="#E5E5E5">method replacement so you'll begin</font>

472
00:17:01,339 --> 00:17:06,949
placing those so our first scenario is

473
00:17:04,609 --> 00:17:08,270
really we want to<font color="#E5E5E5"> make that function</font>

474
00:17:06,949 --> 00:17:10,699
just<font color="#E5E5E5"> returned a constant value and this</font>

475
00:17:08,270 --> 00:17:12,619
is useful for hey maybe you know you're

476
00:17:10,699 --> 00:17:14,150
verifying a passcode and this app will

477
00:17:12,619 --> 00:17:17,149
let you in and last you verify the

478
00:17:14,150 --> 00:17:18,589
passcode successfully<font color="#E5E5E5"> alright so we want</font>

479
00:17:17,150 --> 00:17:20,569
that<font color="#E5E5E5"> just to return true we don't care</font>

480
00:17:18,589 --> 00:17:22,458
what it does we just know that<font color="#E5E5E5"> it</font>

481
00:17:20,569 --> 00:17:26,629
verifies the passcode and we have the

482
00:17:22,459 --> 00:17:28,250
correct passcode of course so in this is

483
00:17:26,630 --> 00:17:30,710
going to be in calmed up and got apt up

484
00:17:28,250 --> 00:17:35,059
mane it was<font color="#E5E5E5"> always the return trip so</font>

485
00:17:30,710 --> 00:17:36,350
here's actually when I said fine and

486
00:17:35,059 --> 00:17:38,510
hook methods here this is where<font color="#E5E5E5"> you</font>

487
00:17:36,350 --> 00:17:42,559
would<font color="#E5E5E5"> put this finding hook method so in</font>

488
00:17:38,510 --> 00:17:45,590
class come back at me yeah it's that

489
00:17:42,559 --> 00:17:47,600
<font color="#E5E5E5">same argument all the time</font><font color="#CCCCCC"> verified</font>

490
00:17:45,590 --> 00:17:48,770
<font color="#E5E5E5">passcode takes a string as an argument</font>

491
00:17:47,600 --> 00:17:51,290
<font color="#E5E5E5">this is what I was talking about with</font>

492
00:17:48,770 --> 00:17:52,639
arguments so when this finding hook

493
00:17:51,290 --> 00:17:54,590
method is finding a method it's going to

494
00:17:52,640 --> 00:17:58,610
look for a<font color="#E5E5E5"> method called verify</font><font color="#CCCCCC"> pass</font>

495
00:17:54,590 --> 00:18:01,189
<font color="#CCCCCC">code in this</font><font color="#E5E5E5"> class with that argument</font>

496
00:17:58,610 --> 00:18:03,409
string class if<font color="#E5E5E5"> the passage is a duck</font>

497
00:18:01,190 --> 00:18:05,840
class<font color="#CCCCCC"> I'm not</font><font color="#E5E5E5"> sure why that's just be a</font>

498
00:18:03,410 --> 00:18:07,520
that's<font color="#E5E5E5"> just</font><font color="#CCCCCC"> a syntax and then you're</font>

499
00:18:05,840 --> 00:18:08,689
using<font color="#E5E5E5"> XC method replacement so we're</font>

500
00:18:07,520 --> 00:18:12,230
replacing what this function does

501
00:18:08,690 --> 00:18:14,179
entirely with just returning a constant

502
00:18:12,230 --> 00:18:15,230
we're gonna return true<font color="#CCCCCC"> alright and</font><font color="#E5E5E5"> what</font>

503
00:18:14,179 --> 00:18:16,970
<font color="#E5E5E5">that will do is make this function</font>

504
00:18:15,230 --> 00:18:22,070
return true every<font color="#E5E5E5"> time so that's really</font>

505
00:18:16,970 --> 00:18:24,110
cool scenario two is we just<font color="#E5E5E5"> want to</font>

506
00:18:22,070 --> 00:18:25,879
<font color="#E5E5E5">make it to nothing this is more like</font>

507
00:18:24,110 --> 00:18:28,129
used for void functions because usually

508
00:18:25,880 --> 00:18:30,350
not annoyed functions will expect some

509
00:18:28,130 --> 00:18:32,630
sort of return and it doesn't try

510
00:18:30,350 --> 00:18:34,520
anything if you'd like pressure app but

511
00:18:32,630 --> 00:18:36,620
there's void functions to all sorts of

512
00:18:34,520 --> 00:18:38,240
<font color="#E5E5E5">things like if we're just you know we</font>

513
00:18:36,620 --> 00:18:40,399
have a function called check security

514
00:18:38,240 --> 00:18:43,790
and we don't want it to do that no

515
00:18:40,400 --> 00:18:45,190
security here very similar<font color="#E5E5E5"> same time</font>

516
00:18:43,790 --> 00:18:46,990
banks at this time is one

517
00:18:45,190 --> 00:18:49,810
no arguments so there's no argument

518
00:18:46,990 --> 00:18:52,210
<font color="#E5E5E5">after the function name itself we have</font>

519
00:18:49,810 --> 00:18:54,909
XC Vatican replacement do nothing which

520
00:18:52,210 --> 00:18:59,070
is fairly straightforward this will<font color="#E5E5E5"> just</font>

521
00:18:54,910 --> 00:18:59,070
make this method not do anything at all

522
00:18:59,340 --> 00:19:03,310
do<font color="#E5E5E5"> something before the function is</font>

523
00:19:01,450 --> 00:19:04,510
called so there's no code under here

524
00:19:03,310 --> 00:19:06,429
because it's on the next slide is a

525
00:19:04,510 --> 00:19:08,590
little bit more involved that's why it's

526
00:19:06,430 --> 00:19:11,380
the third the<font color="#CCCCCC"> third the third fourth and</font>

527
00:19:08,590 --> 00:19:15,429
fifth or the more technically like more

528
00:19:11,380 --> 00:19:17,110
require more programming so say we have

529
00:19:15,430 --> 00:19:19,660
a function called transfer funds it

530
00:19:17,110 --> 00:19:22,899
takes a string account number or

531
00:19:19,660 --> 00:19:25,060
<font color="#E5E5E5">something in the class kombank a</font><font color="#CCCCCC"> pin and</font>

532
00:19:22,900 --> 00:19:26,740
we want to just<font color="#E5E5E5"> before the function runs</font>

533
00:19:25,060 --> 00:19:28,540
we want to<font color="#CCCCCC"> change that argument to make</font>

534
00:19:26,740 --> 00:19:31,260
it say our account number or a different

535
00:19:28,540 --> 00:19:34,360
one whatever whatever that may be so

536
00:19:31,260 --> 00:19:36,850
instead of just your ex cement

537
00:19:34,360 --> 00:19:39,580
replacement you have to make a new XE

538
00:19:36,850 --> 00:19:41,409
<font color="#E5E5E5">medical and so essentially we have to</font>

539
00:19:39,580 --> 00:19:43,270
override<font color="#E5E5E5"> the function call before hooked</font>

540
00:19:41,410 --> 00:19:45,820
method so this code will run before the

541
00:19:43,270 --> 00:19:49,629
<font color="#CCCCCC">hook</font><font color="#E5E5E5"> before this method transfer funds</font>

542
00:19:45,820 --> 00:19:50,500
runs and you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> access this really neat</font>

543
00:19:49,630 --> 00:19:52,960
because<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> actually access the</font>

544
00:19:50,500 --> 00:19:54,910
arguments of this function right before

545
00:19:52,960 --> 00:19:56,620
it's called you can change them<font color="#E5E5E5"> or you</font>

546
00:19:54,910 --> 00:19:59,590
can dump up the logs for dota<font color="#E5E5E5"> v want</font>

547
00:19:56,620 --> 00:20:01,419
with them and so<font color="#E5E5E5"> this is this</font><font color="#CCCCCC"> X roast</font>

548
00:19:59,590 --> 00:20:04,449
bridge<font color="#CCCCCC"> log I was</font><font color="#E5E5E5"> talking about this will</font>

549
00:20:01,420 --> 00:20:06,190
dump out to the<font color="#E5E5E5"> ATV logcat so log cats</font>

550
00:20:04,450 --> 00:20:08,440
essentially androids logging system

551
00:20:06,190 --> 00:20:10,420
it'll dump with<font color="#CCCCCC"> the tag expose so if you</font>

552
00:20:08,440 --> 00:20:12,790
grep for expos in your adb logcat help

553
00:20:10,420 --> 00:20:14,320
but you can<font color="#E5E5E5"> actually see this will come</font>

554
00:20:12,790 --> 00:20:16,090
<font color="#CCCCCC">up with change the account number and so</font>

555
00:20:14,320 --> 00:20:19,629
you know<font color="#E5E5E5"> it's working</font><font color="#CCCCCC"> I use this a lot</font>

556
00:20:16,090 --> 00:20:22,389
for debug that's a lot<font color="#CCCCCC"> of foreigners so</font>

557
00:20:19,630 --> 00:20:24,430
you have to override<font color="#E5E5E5"> the method because</font>

558
00:20:22,390 --> 00:20:27,559
you're creating a new<font color="#CCCCCC"> X a method hook</font>

559
00:20:24,430 --> 00:20:30,340
and<font color="#E5E5E5"> we'll be sticking with the HTML</font>

560
00:20:27,559 --> 00:20:33,049
for a little while<font color="#E5E5E5"> because that is</font>

561
00:20:30,340 --> 00:20:35,889
before<font color="#CCCCCC"> hooked and Elsa as an after hook</font>

562
00:20:33,049 --> 00:20:40,720
method which is the last suitcase here

563
00:20:35,889 --> 00:20:42,830
any omission somebody<font color="#CCCCCC"> runs still with me</font>

564
00:20:40,720 --> 00:20:45,590
thank you for<font color="#E5E5E5"> the head mad after she ate</font>

565
00:20:42,830 --> 00:20:48,590
it so we can do something<font color="#E5E5E5"> else entirely</font>

566
00:20:45,590 --> 00:20:53,019
instead we can you know make it crash

567
00:20:48,590 --> 00:20:56,629
the app or do something so same Bank

568
00:20:53,019 --> 00:21:00,409
example check password<font color="#CCCCCC"> ok string</font>

569
00:20:56,629 --> 00:21:02,240
password we're going<font color="#E5E5E5"> to do kind of the</font>

570
00:21:00,409 --> 00:21:03,649
return constant thing but we're also

571
00:21:02,240 --> 00:21:05,210
going to dump it to the log so we're

572
00:21:03,649 --> 00:21:07,039
just<font color="#E5E5E5"> replacing the method entirely and</font>

573
00:21:05,210 --> 00:21:08,240
we're gonna say<font color="#CCCCCC"> ok don't the dump the</font>

574
00:21:07,039 --> 00:21:11,299
password out might as well grab that

575
00:21:08,240 --> 00:21:12,379
while we're at it and<font color="#CCCCCC"> return true so</font>

576
00:21:11,299 --> 00:21:15,860
we're<font color="#CCCCCC"> doing this function returns a</font>

577
00:21:12,379 --> 00:21:17,719
boolean so our friend XD<font color="#CCCCCC"> vectors</font>

578
00:21:15,860 --> 00:21:19,008
replacement<font color="#CCCCCC"> is back this time are</font>

579
00:21:17,720 --> 00:21:21,139
actually creating a new one and we're

580
00:21:19,009 --> 00:21:23,440
<font color="#E5E5E5">saying override the replace hooked</font>

581
00:21:21,139 --> 00:21:25,580
method auction and we're<font color="#E5E5E5"> saying</font><font color="#CCCCCC"> ok</font>

582
00:21:23,440 --> 00:21:27,799
here's<font color="#CCCCCC"> our here's our brand by the way</font>

583
00:21:25,580 --> 00:21:29,360
that's got all<font color="#E5E5E5"> the information about</font><font color="#CCCCCC"> the</font>

584
00:21:27,799 --> 00:21:32,418
arguments<font color="#CCCCCC"> that object that is part of</font>

585
00:21:29,360 --> 00:21:33,860
and returned on a few things sorry<font color="#E5E5E5"> is</font>

586
00:21:32,419 --> 00:21:36,559
going to cover that<font color="#E5E5E5"> for me so we're</font>

587
00:21:33,860 --> 00:21:37,998
logging it expose bridge log and we're

588
00:21:36,559 --> 00:21:39,320
sending that we know it's a<font color="#E5E5E5"> straight</font>

589
00:21:37,999 --> 00:21:40,700
<font color="#E5E5E5">argument so we're</font><font color="#CCCCCC"> just asking interest</font>

590
00:21:39,320 --> 00:21:43,939
<font color="#CCCCCC">rate to</font><font color="#E5E5E5"> make sure it's a string and just</font>

591
00:21:40,700 --> 00:21:46,100
sending that to the logs and then return

592
00:21:43,940 --> 00:21:48,919
true so this function will now return

593
00:21:46,100 --> 00:21:53,480
true always and also give you the

594
00:21:48,919 --> 00:21:54,470
password which is<font color="#CCCCCC"> alright doing</font>

595
00:21:53,480 --> 00:21:57,830
<font color="#E5E5E5">something after the function is called</font>

596
00:21:54,470 --> 00:21:59,629
so<font color="#E5E5E5"> we have this function called generate</font>

597
00:21:57,830 --> 00:22:02,029
token and so in this case we want to<font color="#E5E5E5"> get</font>

598
00:21:59,629 --> 00:22:03,408
we want to<font color="#E5E5E5"> get a token so we want to get</font>

599
00:22:02,029 --> 00:22:05,029
<font color="#E5E5E5">a valid token that we can use to request</font>

600
00:22:03,409 --> 00:22:07,159
things say this is a van hat that's or

601
00:22:05,029 --> 00:22:08,929
that generates token on the client side

602
00:22:07,159 --> 00:22:10,850
and it's got a certain algorithm<font color="#CCCCCC"> or</font>

603
00:22:08,929 --> 00:22:12,289
something I'm not<font color="#E5E5E5"> really sure but</font>

604
00:22:10,850 --> 00:22:14,629
whatever it does this returns a string

605
00:22:12,289 --> 00:22:16,039
that<font color="#E5E5E5"> has a token and we want to get it</font>

606
00:22:14,629 --> 00:22:17,480
<font color="#E5E5E5">because we want to be able to make our</font>

607
00:22:16,039 --> 00:22:19,820
own request to their server and we want

608
00:22:17,480 --> 00:22:21,409
to generate it so we'll dump it out to

609
00:22:19,820 --> 00:22:24,230
the laws so we're going to soon assume

610
00:22:21,409 --> 00:22:26,029
that returns that string back to our

611
00:22:24,230 --> 00:22:27,940
friend XD method hook or overriding

612
00:22:26,029 --> 00:22:31,760
instead of before box method

613
00:22:27,940 --> 00:22:34,190
so very straightforward we're just

614
00:22:31,760 --> 00:22:35,960
logging out Quran it result so I show

615
00:22:34,190 --> 00:22:37,640
this as an example<font color="#CCCCCC"> because you can get</font>

616
00:22:35,960 --> 00:22:39,309
<font color="#E5E5E5">the result of the function put it</font>

617
00:22:37,640 --> 00:22:41,570
somewhere do something with it and maybe

618
00:22:39,309 --> 00:22:43,399
it's a certain value do something else

619
00:22:41,570 --> 00:22:45,350
with<font color="#E5E5E5"> it like you can write whatever you</font>

620
00:22:43,399 --> 00:22:47,209
can write a Java you can do before or

621
00:22:45,350 --> 00:22:50,149
after or completely instead of other

622
00:22:47,210 --> 00:22:53,480
functions within Android applications so

623
00:22:50,149 --> 00:22:56,260
it's really awesome so I'm going<font color="#CCCCCC"> to do</font>

624
00:22:53,480 --> 00:22:59,809
the classic words with friends hack of

625
00:22:56,260 --> 00:23:01,700
words with friends client side is the

626
00:22:59,809 --> 00:23:03,049
words checking some client side so we're

627
00:23:01,700 --> 00:23:06,019
going to disable that and play whatever

628
00:23:03,049 --> 00:23:09,440
we want<font color="#E5E5E5"> I managed to come up with a game</font>

629
00:23:06,019 --> 00:23:13,779
where we both played shady off each

630
00:23:09,440 --> 00:23:16,309
other which<font color="#E5E5E5"> I think it's pretty funny so</font>

631
00:23:13,779 --> 00:23:17,779
we have this game right here where this

632
00:23:16,309 --> 00:23:19,190
is<font color="#E5E5E5"> about to be pretty shady I'm going to</font>

633
00:23:17,779 --> 00:23:24,919
get a lot of points in<font color="#CCCCCC"> a couple minutes</font>

634
00:23:19,190 --> 00:23:27,260
here so I'm gonna try to play I like

635
00:23:24,919 --> 00:23:30,350
triple letters right let's<font color="#CCCCCC"> play I got</font>

636
00:23:27,260 --> 00:23:31,820
J&Q it's<font color="#E5E5E5"> perfect right so I'm gonna try</font>

637
00:23:30,350 --> 00:23:33,590
to do this my mom the module that I

638
00:23:31,820 --> 00:23:34,850
wrote is not enabled currently so it's

639
00:23:33,590 --> 00:23:38,178
gonna yell at me<font color="#E5E5E5"> and it's gonna say no</font>

640
00:23:34,850 --> 00:23:39,709
that that is not a real word which you

641
00:23:38,179 --> 00:23:41,029
can check any dictionary I don't I don't

642
00:23:39,710 --> 00:23:44,000
think I<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> think that's</font><font color="#E5E5E5"> all right</font>

643
00:23:41,029 --> 00:23:45,230
word so I'm<font color="#CCCCCC"> going to enable this I'm</font>

644
00:23:44,000 --> 00:23:47,899
going<font color="#E5E5E5"> to talk about how you would go</font>

645
00:23:45,230 --> 00:23:50,929
about finding this so if you haven't

646
00:23:47,899 --> 00:23:52,969
<font color="#E5E5E5">seen the Expos interface before i'm just</font>

647
00:23:50,929 --> 00:23:54,019
<font color="#E5E5E5">going to enable this and reboot and then</font>

648
00:23:52,970 --> 00:23:56,090
while i'm rebooting i'm going to<font color="#CCCCCC"> talk</font>

649
00:23:54,019 --> 00:23:58,179
about how i actually found this the

650
00:23:56,090 --> 00:24:00,769
process<font color="#CCCCCC"> that I went through</font><font color="#E5E5E5"> to find this</font>

651
00:23:58,179 --> 00:24:01,970
all right and I wrote all my commands

652
00:24:00,769 --> 00:24:04,490
down so you guys don't have to like

653
00:24:01,970 --> 00:24:06,289
painfully watch me take a bunch of

654
00:24:04,490 --> 00:24:08,210
commands in so I'm going to spare you

655
00:24:06,289 --> 00:24:12,590
the decomp elation of this because<font color="#E5E5E5"> it's</font>

656
00:24:08,210 --> 00:24:17,389
literally just<font color="#E5E5E5"> that new line here's the</font>

657
00:24:12,590 --> 00:24:19,699
<font color="#E5E5E5">command it will decompile needy hate the</font>

658
00:24:17,389 --> 00:24:21,379
compile will essentially make a

659
00:24:19,700 --> 00:24:25,190
directory called out and a jar called

660
00:24:21,380 --> 00:24:26,390
out yes I understand and a jar called

661
00:24:25,190 --> 00:24:30,080
out

662
00:24:26,390 --> 00:24:35,030
a jar and hope and inside the app

663
00:24:30,080 --> 00:24:37,840
directory is a bunch of they'll leave

664
00:24:35,030 --> 00:24:41,330
classes but find<font color="#CCCCCC"> cup there we go so</font>

665
00:24:37,840 --> 00:24:43,429
should hear the decompile classes these

666
00:24:41,330 --> 00:24:45,560
are the concerns of fully these are the

667
00:24:43,430 --> 00:24:47,120
photos with the full bytecode classes

668
00:24:45,560 --> 00:24:48,860
and hear the actual decompile classes

669
00:24:47,120 --> 00:24:53,330
each and so those are the<font color="#E5E5E5"> ones are going</font>

670
00:24:48,860 --> 00:24:55,669
<font color="#E5E5E5">to be looking at so let's use a apt to</font>

671
00:24:53,330 --> 00:24:57,649
<font color="#E5E5E5">find a string so we're going to be</font>

672
00:24:55,670 --> 00:25:00,830
looking for the word valid I think

673
00:24:57,650 --> 00:25:02,690
that's<font color="#E5E5E5"> a good choice because you know</font>

674
00:25:00,830 --> 00:25:05,689
we're looking for valid or invalid words

675
00:25:02,690 --> 00:25:09,650
and I know that<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is also</font><font color="#E5E5E5"> somewhere</font>

676
00:25:05,690 --> 00:25:10,640
where I can find<font color="#E5E5E5"> the valid work camp so</font>

677
00:25:09,650 --> 00:25:13,130
this is<font color="#E5E5E5"> what we're looking at right here</font>

678
00:25:10,640 --> 00:25:14,450
sorry whatever it is not a valid bird we

679
00:25:13,130 --> 00:25:17,080
saw that pop up on the screen when<font color="#E5E5E5"> I</font>

680
00:25:14,450 --> 00:25:20,600
tried to<font color="#CCCCCC"> play that ridiculous word and</font>

681
00:25:17,080 --> 00:25:22,280
we're<font color="#E5E5E5"> going to look for that so apt also</font>

682
00:25:20,600 --> 00:25:23,120
has another function and it allows you

683
00:25:22,280 --> 00:25:24,860
like I said you can look at the

684
00:25:23,120 --> 00:25:29,540
resources within package so we're

685
00:25:24,860 --> 00:25:31,490
actually going to try<font color="#E5E5E5"> to look for sorry</font>

686
00:25:29,540 --> 00:25:34,129
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not a valid word within the</font>

687
00:25:31,490 --> 00:25:36,680
resources and find the ID like I said<font color="#E5E5E5"> a</font>

688
00:25:34,130 --> 00:25:39,080
lot<font color="#E5E5E5"> of the times your strings will</font>

689
00:25:36,680 --> 00:25:40,520
actually not be in the<font color="#E5E5E5"> D compiled code</font>

690
00:25:39,080 --> 00:25:42,590
itself they'll be referenced by number

691
00:25:40,520 --> 00:25:44,480
so we have to find that<font color="#E5E5E5"> number an apt</font>

692
00:25:42,590 --> 00:25:46,550
will actually let us do this if we

693
00:25:44,480 --> 00:25:49,070
<font color="#E5E5E5">search with grep for that exact strength</font>

694
00:25:46,550 --> 00:25:51,139
as you can see here's this resource and

695
00:25:49,070 --> 00:25:52,909
here's the code<font color="#CCCCCC"> that we're</font><font color="#E5E5E5"> using like I</font>

696
00:25:51,140 --> 00:25:55,940
said jad has it detects so if we grab

697
00:25:52,910 --> 00:25:59,090
for that in our code hopefully we will

698
00:25:55,940 --> 00:26:01,780
find that<font color="#E5E5E5"> you can see where this is</font>

699
00:25:59,090 --> 00:26:01,780
being printed out

700
00:26:05,840 --> 00:26:12,980
and sure enough we found it in<font color="#E5E5E5"> one place</font>

701
00:26:09,460 --> 00:26:14,600
like I planet where we're getting this

702
00:26:12,980 --> 00:26:17,000
resource for saying that's not<font color="#CCCCCC"> a valid</font>

703
00:26:14,600 --> 00:26:19,549
word so we're actually going to<font color="#CCCCCC"> go to</font>

704
00:26:17,000 --> 00:26:22,520
<font color="#E5E5E5">that and check out what is there and why</font>

705
00:26:19,549 --> 00:26:24,260
that's saying that everyone can see this

706
00:26:22,520 --> 00:26:27,650
our area we're going<font color="#E5E5E5"> to do want to blow</font>

707
00:26:24,260 --> 00:26:29,240
it up anymore have<font color="#CCCCCC"> okay so we wrote</font><font color="#E5E5E5"> down</font>

708
00:26:27,650 --> 00:26:33,770
the line numbers because anyone forget

709
00:26:29,240 --> 00:26:36,140
126 so as<font color="#E5E5E5"> you can see here's our x value</font>

710
00:26:33,770 --> 00:26:38,330
with sorry that's not a bad word<font color="#E5E5E5"> and</font>

711
00:26:36,140 --> 00:26:40,039
here's the word checks as invalid word

712
00:26:38,330 --> 00:26:42,049
that's not<font color="#E5E5E5"> the place we want</font><font color="#CCCCCC"> to get if</font>

713
00:26:40,039 --> 00:26:44,029
you look a couple lines above we want we

714
00:26:42,049 --> 00:26:47,720
want to get you back right valid word

715
00:26:44,029 --> 00:26:49,130
yeah that's good so if<font color="#E5E5E5"> P which is a</font>

716
00:26:47,720 --> 00:26:50,720
class method called peace it's a

717
00:26:49,130 --> 00:26:54,289
<font color="#CCCCCC">little-bitty obfuscation working for you</font>

718
00:26:50,720 --> 00:26:56,270
it fee that work so we want to make<font color="#CCCCCC"> P</font>

719
00:26:54,289 --> 00:26:59,919
return true so we're<font color="#E5E5E5"> going to go</font><font color="#CCCCCC"> up to</font>

720
00:26:56,270 --> 00:27:03,289
feed<font color="#E5E5E5"> which is in this lent it to</font><font color="#CCCCCC"> go and</font>

721
00:26:59,919 --> 00:27:04,399
it returns a boolean<font color="#E5E5E5"> great but we want</font>

722
00:27:03,289 --> 00:27:07,158
to<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of go a little bit deeper than</font>

723
00:27:04,399 --> 00:27:10,729
<font color="#E5E5E5">that because if this is doing other</font>

724
00:27:07,159 --> 00:27:12,860
stuff relating to the app we don't<font color="#E5E5E5"> know</font>

725
00:27:10,730 --> 00:27:15,409
if this<font color="#E5E5E5"> is going to trigger something</font>

726
00:27:12,860 --> 00:27:16,580
like this big long line or something

727
00:27:15,409 --> 00:27:18,380
<font color="#E5E5E5">else in here is going to trigger</font>

728
00:27:16,580 --> 00:27:20,570
something else in the app so I like to

729
00:27:18,380 --> 00:27:24,110
<font color="#E5E5E5">go to as deep as possible so we can see</font>

730
00:27:20,570 --> 00:27:26,720
that flag is returned if there's not<font color="#E5E5E5"> an</font>

731
00:27:24,110 --> 00:27:28,250
exception so this function this really

732
00:27:26,720 --> 00:27:29,980
strange function that flags being

733
00:27:28,250 --> 00:27:32,809
assigned from<font color="#CCCCCC"> we'll go check</font><font color="#E5E5E5"> that out</font>

734
00:27:29,980 --> 00:27:34,159
because I know for a fact I tested it

735
00:27:32,809 --> 00:27:36,860
that if you hook a<font color="#E5E5E5"> pee and make it</font>

736
00:27:34,159 --> 00:27:38,240
return true it<font color="#E5E5E5"> doesn't work so we'll go</font>

737
00:27:36,860 --> 00:27:40,459
down a<font color="#E5E5E5"> little bit deeper so it's a</font>

738
00:27:38,240 --> 00:27:42,980
<font color="#E5E5E5">little bit of trial and error so we'll</font>

739
00:27:40,460 --> 00:27:44,480
go to this class and leaders the

740
00:27:42,980 --> 00:27:46,250
function here's the<font color="#E5E5E5"> function</font><font color="#CCCCCC"> that was</font>

741
00:27:44,480 --> 00:27:48,110
just being called from P so this

742
00:27:46,250 --> 00:27:50,240
function also returns a boolean and as

743
00:27:48,110 --> 00:27:55,459
you can see word specified is not valid

744
00:27:50,240 --> 00:27:56,840
so basically otherwise return true so

745
00:27:55,460 --> 00:27:58,429
you want to make this function return

746
00:27:56,840 --> 00:28:00,408
true always so this is the function that

747
00:27:58,429 --> 00:28:02,179
we're gonna be<font color="#CCCCCC"> okay this is the function</font>

748
00:28:00,409 --> 00:28:03,620
we're going to be looking at and run our

749
00:28:02,179 --> 00:28:06,919
module based off so now we've identified

750
00:28:03,620 --> 00:28:11,320
the code that<font color="#CCCCCC"> we need</font><font color="#E5E5E5"> to hook and we can</font>

751
00:28:06,919 --> 00:28:15,970
go<font color="#CCCCCC"> check out our mod show mod code</font>

752
00:28:11,320 --> 00:28:17,500
step 8<font color="#E5E5E5"> okay so this is the code this</font>

753
00:28:15,970 --> 00:28:19,480
sure looks somewhat familiar these

754
00:28:17,500 --> 00:28:21,460
imports are all the stuff<font color="#CCCCCC"> that we talked</font>

755
00:28:19,480 --> 00:28:23,680
about<font color="#E5E5E5"> on a first like import import</font>

756
00:28:21,460 --> 00:28:25,690
slide this<font color="#E5E5E5"> is the full pass for them</font>

757
00:28:23,680 --> 00:28:27,730
<font color="#E5E5E5">from natural jar and like i said this</font>

758
00:28:25,690 --> 00:28:31,540
code is online so you can check that out

759
00:28:27,730 --> 00:28:33,180
after our<font color="#CCCCCC"> handle our I exposed hook load</font>

760
00:28:31,540 --> 00:28:35,500
package we're implementing it

761
00:28:33,180 --> 00:28:37,870
implementing the handle load package

762
00:28:35,500 --> 00:28:40,930
function and we're checking if the app

763
00:28:37,870 --> 00:28:45,489
name is calm single words which is words

764
00:28:40,930 --> 00:28:47,680
with friends is I deep packaging it logs

765
00:28:45,490 --> 00:28:49,270
head you're cheating<font color="#E5E5E5"> okay it logs that</font>

766
00:28:47,680 --> 00:28:51,640
just to let you know that<font color="#CCCCCC"> it's on and</font>

767
00:28:49,270 --> 00:28:56,500
then it will hope the function that<font color="#CCCCCC"> we</font>

768
00:28:51,640 --> 00:29:00,490
hadn't<font color="#E5E5E5"> calm zengo words d ay ay ay so in</font>

769
00:28:56,500 --> 00:29:03,580
that class this motion and then just

770
00:29:00,490 --> 00:29:05,170
returns true so this takes a string as

771
00:29:03,580 --> 00:29:09,399
we saw we're going<font color="#E5E5E5"> to make it return</font>

772
00:29:05,170 --> 00:29:12,310
trip so the reason<font color="#CCCCCC"> I'm looking calms and</font>

773
00:29:09,400 --> 00:29:15,310
<font color="#CCCCCC">go words d ay ay ay is because it's the</font>

774
00:29:12,310 --> 00:29:16,510
path is<font color="#E5E5E5"> calms and get words daa and the</font>

775
00:29:15,310 --> 00:29:19,629
function<font color="#CCCCCC"> name was a with a string</font>

776
00:29:16,510 --> 00:29:23,730
argument just so<font color="#CCCCCC"> we're stuff so I loaded</font>

777
00:29:19,630 --> 00:29:25,900
this up it rebooted in<font color="#CCCCCC"> crashing and</font>

778
00:29:23,730 --> 00:29:28,140
we'll go<font color="#CCCCCC"> into words with friends and</font>

779
00:29:25,900 --> 00:29:30,520
this person's gonna be unhappy a thing

780
00:29:28,140 --> 00:29:34,810
so this is<font color="#E5E5E5"> like the classic</font><font color="#CCCCCC"> example it</font>

781
00:29:30,520 --> 00:29:37,750
should still have my word<font color="#CCCCCC"> to all right I</font>

782
00:29:34,810 --> 00:29:38,919
was a lot<font color="#CCCCCC"> of points so that's</font><font color="#E5E5E5"> the</font>

783
00:29:37,750 --> 00:29:41,140
classic<font color="#CCCCCC"> say I'm</font><font color="#E5E5E5"> going to resign because</font>

784
00:29:38,920 --> 00:29:42,490
I feel bad if this person um so that's

785
00:29:41,140 --> 00:29:45,000
like the classic the classic like

786
00:29:42,490 --> 00:29:47,890
function hooking example right there

787
00:29:45,000 --> 00:29:49,060
where I can play whatever I want just by

788
00:29:47,890 --> 00:29:51,940
changing the return value of one

789
00:29:49,060 --> 00:29:56,169
function we've got a<font color="#E5E5E5"> couple more</font>

790
00:29:51,940 --> 00:30:01,390
<font color="#E5E5E5">examples that are more relevant to</font>

791
00:29:56,170 --> 00:30:04,600
security minded so verse engineering I

792
00:30:01,390 --> 00:30:06,190
know extract information understanding

793
00:30:04,600 --> 00:30:07,510
code if you're going to be your

794
00:30:06,190 --> 00:30:07,900
engineering Android app you're going to

795
00:30:07,510 --> 00:30:10,330
be

796
00:30:07,900 --> 00:30:12,820
looking at<font color="#E5E5E5"> a bunch of really like a</font><font color="#CCCCCC"> lot</font>

797
00:30:10,330 --> 00:30:14,820
of<font color="#E5E5E5"> really unimportant code</font><font color="#CCCCCC"> on only</font>

798
00:30:12,820 --> 00:30:17,110
trying to find a certain<font color="#E5E5E5"> section or</font>

799
00:30:14,820 --> 00:30:19,230
something that is in the code that's

800
00:30:17,110 --> 00:30:21,280
obfuscated adore populated afterwards

801
00:30:19,230 --> 00:30:23,200
obfuscated code of variables they can be

802
00:30:21,280 --> 00:30:26,170
annoying fine so if the app checks its

803
00:30:23,200 --> 00:30:28,000
own signature your decompiling editing

804
00:30:26,170 --> 00:30:31,750
the smiley code and<font color="#CCCCCC"> then recompiling is</font>

805
00:30:28,000 --> 00:30:33,100
ruled out completely you can do that you

806
00:30:31,750 --> 00:30:34,930
can dump with expose you can dump

807
00:30:33,100 --> 00:30:37,980
variables<font color="#E5E5E5"> to logs a patent</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> calculated</font>

808
00:30:34,930 --> 00:30:47,310
just make dad do all the work for<font color="#CCCCCC"> you so</font>

809
00:30:37,980 --> 00:30:47,310
let<font color="#E5E5E5"> me make sure to look so</font>

810
00:30:49,639 --> 00:30:55,428
yeah okay so<font color="#E5E5E5"> how many people in here</font>

811
00:30:52,909 --> 00:30:58,940
I've used the record of you<font color="#CCCCCC"> can all</font>

812
00:30:55,429 --> 00:31:01,129
right good I have a good<font color="#E5E5E5"> audience set so</font>

813
00:30:58,940 --> 00:31:05,119
their api key is actually calculated

814
00:31:01,129 --> 00:31:08,958
based on the app's signature so we're

815
00:31:05,119 --> 00:31:11,689
looking<font color="#CCCCCC"> for that in the</font><font color="#E5E5E5"> app I mean scary</font>

816
00:31:08,959 --> 00:31:13,969
<font color="#E5E5E5">difference commands the get bites method</font>

817
00:31:11,690 --> 00:31:16,339
is used on the variable one requests are

818
00:31:13,969 --> 00:31:17,889
signed so if we<font color="#E5E5E5"> hook that function we</font>

819
00:31:16,339 --> 00:31:22,219
can<font color="#E5E5E5"> dump everything out to the logs</font>

820
00:31:17,889 --> 00:31:24,678
including the API key itself so every

821
00:31:22,219 --> 00:31:25,759
time is a side note this ad is heavily

822
00:31:24,679 --> 00:31:27,379
office cated and like<font color="#CCCCCC"> i said it's the</font>

823
00:31:25,759 --> 00:31:30,469
reason I wrote that shell script to

824
00:31:27,379 --> 00:31:33,158
unpack them the obfuscation changes

825
00:31:30,469 --> 00:31:35,149
every time he had is updated so my

826
00:31:33,159 --> 00:31:36,499
practicing my demo they had updated

827
00:31:35,149 --> 00:31:38,359
itself because this is a slightly older

828
00:31:36,499 --> 00:31:39,919
version it still work<font color="#E5E5E5"> on the new version</font>

829
00:31:38,359 --> 00:31:42,320
I just haven't like taken the time to

830
00:31:39,919 --> 00:31:43,609
reverse it I was my gentle is just

831
00:31:42,320 --> 00:31:45,379
crashing over and over so I was<font color="#E5E5E5"> like why</font>

832
00:31:43,609 --> 00:31:46,879
like why is this<font color="#E5E5E5"> not working you can't</font>

833
00:31:45,379 --> 00:31:48,320
find that class<font color="#E5E5E5"> really because they get</font>

834
00:31:46,879 --> 00:31:53,029
renamed every time the app is recompiled

835
00:31:48,320 --> 00:31:55,458
which sucks so I out<font color="#E5E5E5"> of a lot of</font>

836
00:31:53,029 --> 00:31:57,259
reversing a lot of a fox but<font color="#CCCCCC"> I play with</font>

837
00:31:55,459 --> 00:31:58,700
<font color="#E5E5E5">this app a lot I have a lot</font><font color="#CCCCCC"> of reversing</font>

838
00:31:57,259 --> 00:32:00,169
I found that the API key is actually

839
00:31:58,700 --> 00:32:04,729
stored in this right here and<font color="#E5E5E5"> I'll spare</font>

840
00:32:00,169 --> 00:32:06,339
<font color="#E5E5E5">you that that huge explanation but we</font>

841
00:32:04,729 --> 00:32:09,200
want<font color="#E5E5E5"> to find out where this</font><font color="#CCCCCC"> is set and</font>

842
00:32:06,339 --> 00:32:11,479
try to hook that function or try to find

843
00:32:09,200 --> 00:32:13,789
out like what this is actually doing I'm

844
00:32:11,479 --> 00:32:16,459
not in the right window that's got to be

845
00:32:13,789 --> 00:32:17,629
the right project so we're looking at

846
00:32:16,459 --> 00:32:23,239
where this<font color="#CCCCCC"> is set and luckily it's set</font>

847
00:32:17,629 --> 00:32:25,718
in just this area so we'll go into that

848
00:32:23,239 --> 00:32:31,339
file and check out why this<font color="#E5E5E5"> is being set</font>

849
00:32:25,719 --> 00:32:33,490
this was lying through six<font color="#CCCCCC"> okay so as</font>

850
00:32:31,339 --> 00:32:36,200
you can say

851
00:32:33,490 --> 00:32:38,390
the way this is<font color="#E5E5E5"> all being calculated is</font>

852
00:32:36,200 --> 00:32:42,170
this s1 is being fed in to this is a

853
00:32:38,390 --> 00:32:43,460
doxy function<font color="#CCCCCC"> a DC function and an s-1</font>

854
00:32:42,170 --> 00:32:47,090
is calculated based on<font color="#E5E5E5"> the app's</font>

855
00:32:43,460 --> 00:32:48,920
signature and<font color="#CCCCCC"> shawwal the base 64</font>

856
00:32:47,090 --> 00:32:51,800
encoded sha-1 hash map so that's passed

857
00:32:48,920 --> 00:32:53,660
into this agency function and then the

858
00:32:51,800 --> 00:32:55,730
return of that is put into the API key

859
00:32:53,660 --> 00:32:57,380
so we're assuming that ad dots that he

860
00:32:55,730 --> 00:33:01,850
generates this<font color="#CCCCCC"> keekee ID that's</font><font color="#E5E5E5"> used to</font>

861
00:32:57,380 --> 00:33:05,360
sign necrosis this is the prime example

862
00:33:01,850 --> 00:33:07,399
of not being able<font color="#E5E5E5"> to decompile it and</font>

863
00:33:05,360 --> 00:33:08,959
read the pilot<font color="#E5E5E5"> because if you decompile</font>

864
00:33:07,400 --> 00:33:10,760
the application<font color="#CCCCCC"> yum packet and try</font><font color="#E5E5E5"> to</font>

865
00:33:08,960 --> 00:33:12,980
repackage it its signature will change

866
00:33:10,760 --> 00:33:14,870
so the<font color="#E5E5E5"> API key will change so don't eat</font>

867
00:33:12,980 --> 00:33:17,440
the request<font color="#CCCCCC"> would</font><font color="#E5E5E5"> be valid what's up you</font>

868
00:33:14,870 --> 00:33:20,570
actually can do that you just have to

869
00:33:17,440 --> 00:33:22,520
another<font color="#CCCCCC"> application can read with the</font>

870
00:33:20,570 --> 00:33:25,340
<font color="#E5E5E5">signature of another APIs and then you</font>

871
00:33:22,520 --> 00:33:27,379
just hard code what that signature is

872
00:33:25,340 --> 00:33:29,419
right there yeah that's one way to do I

873
00:33:27,380 --> 00:33:32,930
had tried<font color="#CCCCCC"> to do that</font><font color="#E5E5E5"> and the actual</font>

874
00:33:29,420 --> 00:33:35,330
mechanism for the actual mechanism for

875
00:33:32,930 --> 00:33:37,400
calculating the API keys the next I'm

876
00:33:35,330 --> 00:33:39,260
gonna show I try to just grab that code

877
00:33:37,400 --> 00:33:41,390
extract the<font color="#E5E5E5"> signature myself and do it</font>

878
00:33:39,260 --> 00:33:42,950
but writing an exposé module turned out

879
00:33:41,390 --> 00:33:44,690
to be a lot easier because<font color="#E5E5E5"> it's hooking</font>

880
00:33:42,950 --> 00:33:45,710
one function to just dump that out and

881
00:33:44,690 --> 00:33:50,630
give it<font color="#E5E5E5"> to me instead</font><font color="#CCCCCC"> of having to</font>

882
00:33:45,710 --> 00:33:53,600
calculate it so we can<font color="#E5E5E5"> see that a DC is</font>

883
00:33:50,630 --> 00:33:55,520
what we're looking for so<font color="#E5E5E5"> I will go into</font>

884
00:33:53,600 --> 00:34:02,570
that and show kind of<font color="#E5E5E5"> where that's</font>

885
00:33:55,520 --> 00:34:04,970
created 937 day so this<font color="#E5E5E5"> is our c</font>

886
00:34:02,570 --> 00:34:07,760
function within the ad class it takes

887
00:34:04,970 --> 00:34:12,139
can be five hash of<font color="#CCCCCC"> the input that a 64</font>

888
00:34:07,760 --> 00:34:13,350
encoded thing and then runs this

889
00:34:12,139 --> 00:34:17,699
function a

890
00:34:13,350 --> 00:34:23,940
on the<font color="#E5E5E5"> dittus and that function is</font><font color="#CCCCCC"> on</font>

891
00:34:17,699 --> 00:34:25,589
<font color="#CCCCCC">line 2 17 and especially just does a</font>

892
00:34:23,940 --> 00:34:30,060
bunch of shifting and ridiculous stuff

893
00:34:25,590 --> 00:34:31,800
on this array to calculate some sort of

894
00:34:30,060 --> 00:34:33,420
key and the array that it's doing<font color="#E5E5E5"> that</font>

895
00:34:31,800 --> 00:34:35,400
<font color="#E5E5E5">on is essentially at the bottom here</font>

896
00:34:33,420 --> 00:34:37,350
it's a bunch of it's<font color="#E5E5E5"> just all the hex</font>

897
00:34:35,400 --> 00:34:43,530
carriers you can have so we're<font color="#CCCCCC"> looking</font>

898
00:34:37,350 --> 00:34:45,960
<font color="#CCCCCC">for some sort of hex thing and need to</font>

899
00:34:43,530 --> 00:34:47,400
dump<font color="#E5E5E5"> that to the logs so where to dump</font>

900
00:34:45,960 --> 00:34:51,000
it how do<font color="#E5E5E5"> I know that the get</font><font color="#CCCCCC"> Pike's</font>

901
00:34:47,400 --> 00:34:54,420
function is relevant here I know from

902
00:34:51,000 --> 00:34:57,360
previous research that the each request

903
00:34:54,420 --> 00:34:59,310
has user longitude parameter to it so

904
00:34:57,360 --> 00:35:02,520
they're sending a request to an API via

905
00:34:59,310 --> 00:35:04,080
HTTPS and I know there's a parameter

906
00:35:02,520 --> 00:35:07,350
called user long<font color="#CCCCCC"> is associated</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> it</font>

907
00:35:04,080 --> 00:35:08,670
so<font color="#CCCCCC"> before</font><font color="#E5E5E5"> every request is tacked on and</font>

908
00:35:07,350 --> 00:35:12,089
I'm<font color="#E5E5E5"> assuming that they're going to sign</font>

909
00:35:08,670 --> 00:35:13,980
<font color="#CCCCCC">it right around there so this took a bit</font>

910
00:35:12,090 --> 00:35:17,910
of<font color="#E5E5E5"> work to get to that but it's a good</font>

911
00:35:13,980 --> 00:35:21,510
example of you know kind of associated

912
00:35:17,910 --> 00:35:25,319
<font color="#E5E5E5">this file qf Chad and as you can see</font>

913
00:35:21,510 --> 00:35:26,670
we're adding salt and hash so whatever

914
00:35:25,320 --> 00:35:29,670
<font color="#E5E5E5">is in s4 is the hatch that</font><font color="#CCCCCC"> we're</font>

915
00:35:26,670 --> 00:35:31,620
generating so the API key is used<font color="#CCCCCC"> to</font>

916
00:35:29,670 --> 00:35:34,200
sign every request with a hash if your

917
00:35:31,620 --> 00:35:37,890
hash values<font color="#E5E5E5"> not correct then it rejects</font>

918
00:35:34,200 --> 00:35:39,689
what you're trying to send it so s fork

919
00:35:37,890 --> 00:35:41,730
is our hash and s4 is being assigned

920
00:35:39,690 --> 00:35:43,650
from this function a which I promise you

921
00:35:41,730 --> 00:35:47,820
is a function that just takes a tix

922
00:35:43,650 --> 00:35:50,160
you're basically to request<font color="#E5E5E5"> URI and then</font>

923
00:35:47,820 --> 00:35:53,430
it will take the key which is<font color="#E5E5E5"> the API</font>

924
00:35:50,160 --> 00:35:55,470
key i was talking though and it will

925
00:35:53,430 --> 00:35:58,470
hvac it will do any keen hatch on H max

926
00:35:55,470 --> 00:36:00,750
shot 10 is the API key and the thing to

927
00:35:58,470 --> 00:36:01,950
hash is the request-uri those will both

928
00:36:00,750 --> 00:36:04,860
get dumped out of logs so we'll see

929
00:36:01,950 --> 00:36:08,399
those later so essentially we're using

930
00:36:04,860 --> 00:36:09,779
get<font color="#E5E5E5"> da</font><font color="#CCCCCC"> get fights so if we</font><font color="#E5E5E5"> go</font>

931
00:36:08,400 --> 00:36:11,339
function we<font color="#CCCCCC"> can just</font><font color="#E5E5E5"> dump that straight</font>

932
00:36:09,779 --> 00:36:13,619
out of logs those have a couple more

933
00:36:11,339 --> 00:36:23,130
things but we kind of know what we're

934
00:36:13,619 --> 00:36:24,539
looking for ok so our module this<font color="#E5E5E5"> is a</font>

935
00:36:23,130 --> 00:36:25,740
little<font color="#CCCCCC"> bit more if there's two things in</font>

936
00:36:24,539 --> 00:36:29,819
here because<font color="#CCCCCC"> i use the attack as another</font>

937
00:36:25,740 --> 00:36:33,089
example so again I exposed load package

938
00:36:29,819 --> 00:36:34,640
implementing that handle load packages

939
00:36:33,089 --> 00:36:37,490
<font color="#E5E5E5">are function that we're going to be</font>

940
00:36:34,640 --> 00:36:40,470
overriding here are implementing it

941
00:36:37,490 --> 00:36:43,439
<font color="#E5E5E5">checking if the application</font><font color="#CCCCCC"> name is yet</font>

942
00:36:40,470 --> 00:36:45,629
and then we're loading the module we're

943
00:36:43,440 --> 00:36:48,539
cooking the method<font color="#CCCCCC"> get fights here so</font>

944
00:36:45,630 --> 00:36:49,740
we're hooking java.lang.string and then

945
00:36:48,539 --> 00:36:51,240
they get bites<font color="#CCCCCC"> method of that so you can</font>

946
00:36:49,740 --> 00:36:53,759
hook<font color="#CCCCCC"> java internal classes anything</font>

947
00:36:51,240 --> 00:36:55,379
that's accessible the<font color="#E5E5E5"> java you count so</font>

948
00:36:53,760 --> 00:36:57,329
we're creating a method hook and before

949
00:36:55,380 --> 00:36:59,220
<font color="#E5E5E5">it cook set we're just going</font><font color="#CCCCCC"> to say this</font>

950
00:36:57,329 --> 00:37:01,380
object this string object specifically

951
00:36:59,220 --> 00:37:03,419
just<font color="#E5E5E5"> dump it out to the logs prefix by</font>

952
00:37:01,380 --> 00:37:05,940
got bites so<font color="#CCCCCC"> I can grow up for it fairly</font>

953
00:37:03,420 --> 00:37:09,119
<font color="#E5E5E5">easily so this cool you can actually</font>

954
00:37:05,940 --> 00:37:10,799
<font color="#E5E5E5">access the object that's inside or the</font>

955
00:37:09,119 --> 00:37:12,329
object that this is being<font color="#E5E5E5"> called on so</font>

956
00:37:10,799 --> 00:37:16,920
whatever string it is<font color="#E5E5E5"> I can grab it and</font>

957
00:37:12,329 --> 00:37:18,809
dump it off the logs so now with any

958
00:37:16,920 --> 00:37:20,640
look I'm going<font color="#E5E5E5"> to close this first</font>

959
00:37:18,809 --> 00:37:23,640
because it<font color="#E5E5E5"> freaks them with any luck</font>

960
00:37:20,640 --> 00:37:29,430
when I open the application I'll be able

961
00:37:23,640 --> 00:37:32,940
<font color="#CCCCCC">to see that</font><font color="#E5E5E5"> it's dumps out</font>

962
00:37:29,430 --> 00:37:37,799
yes I look tan able Wi-Fi perfect thanks

963
00:37:32,940 --> 00:37:41,160
again wpa2 it was connected<font color="#CCCCCC"> to the wrong</font>

964
00:37:37,800 --> 00:37:48,150
internet that's one okay let me go back

965
00:37:41,160 --> 00:37:50,129
<font color="#CCCCCC">to the app though so now our got bites</font>

966
00:37:48,150 --> 00:37:52,710
function it's two out of three demos

967
00:37:50,130 --> 00:37:55,890
that work of maize<font color="#CCCCCC"> okay so our God bikes</font>

968
00:37:52,710 --> 00:37:59,010
got bites tags here we can see this is

969
00:37:55,890 --> 00:38:03,270
<font color="#CCCCCC">the key that we're looking for and so if</font>

970
00:37:59,010 --> 00:38:04,920
you<font color="#E5E5E5"> actually have before they</font>

971
00:38:03,270 --> 00:38:06,960
implemented more<font color="#E5E5E5"> security someone wrote</font>

972
00:38:04,920 --> 00:38:08,309
up a big Python module to basically make

973
00:38:06,960 --> 00:38:10,230
requests to their end points so you

974
00:38:08,309 --> 00:38:12,990
could<font color="#E5E5E5"> add you like add users make posts</font>

975
00:38:10,230 --> 00:38:14,160
<font color="#E5E5E5">up</font><font color="#CCCCCC"> oak download things and so they they</font>

976
00:38:12,990 --> 00:38:16,020
didn't let<font color="#CCCCCC"> security the people were just</font>

977
00:38:14,160 --> 00:38:17,190
scripting<font color="#E5E5E5"> downloads of this and it got</font>

978
00:38:16,020 --> 00:38:20,160
wiped off the planet<font color="#E5E5E5"> for a couple days</font>

979
00:38:17,190 --> 00:38:22,440
so<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> the key to through the side of</font>

980
00:38:20,160 --> 00:38:23,848
a request<font color="#E5E5E5"> and now if we have that</font><font color="#CCCCCC"> key we</font>

981
00:38:22,440 --> 00:38:26,460
can throw<font color="#CCCCCC"> that in</font><font color="#E5E5E5"> that application and</font>

982
00:38:23,849 --> 00:38:28,730
actually query like<font color="#E5E5E5"> the RIT gig act from</font>

983
00:38:26,460 --> 00:38:30,809
where we are<font color="#E5E5E5"> and now so as a side note</font>

984
00:38:28,730 --> 00:38:33,630
i'm going to make sure you refresh the

985
00:38:30,809 --> 00:38:35,880
page here as a side note this right here

986
00:38:33,630 --> 00:38:37,049
this<font color="#CCCCCC"> API get messages accuracy this is</font>

987
00:38:35,880 --> 00:38:39,180
the<font color="#CCCCCC"> endpoints career this is what it's</font>

988
00:38:37,049 --> 00:38:45,890
hashing so it's hashing this H max draw

989
00:38:39,180 --> 00:38:49,169
one hatch this with this keep so now

990
00:38:45,890 --> 00:38:51,058
with that API key within that module we

991
00:38:49,170 --> 00:38:52,980
can<font color="#E5E5E5"> actually see that</font><font color="#CCCCCC"> we can we can get</font>

992
00:38:51,059 --> 00:38:55,200
the GAT feed from their<font color="#E5E5E5"> API to the</font>

993
00:38:52,980 --> 00:38:57,089
Python script so we're using that to

994
00:38:55,200 --> 00:38:58,828
sign request to their server yeah

995
00:38:57,089 --> 00:39:00,000
they're pretty bad if you haven't<font color="#E5E5E5"> heard</font>

996
00:38:58,829 --> 00:39:02,640
of<font color="#E5E5E5"> you gag before it's essentially like</font>

997
00:39:00,000 --> 00:39:06,329
4chan in like a 10 mile radius it's

998
00:39:02,640 --> 00:39:10,440
terrible all right we'll get<font color="#E5E5E5"> that off</font>

999
00:39:06,329 --> 00:39:11,609
the<font color="#CCCCCC"> screen all right I got to disable</font>

1000
00:39:10,440 --> 00:39:12,869
them ought to show you<font color="#E5E5E5"> guys the next</font>

1001
00:39:11,609 --> 00:39:19,799
part and then

1002
00:39:12,869 --> 00:39:24,569
so today yes to replace your life that's

1003
00:39:19,799 --> 00:39:26,920
fine I wanted<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do all right so we'll</font>

1004
00:39:24,569 --> 00:39:29,680
say laughs

1005
00:39:26,920 --> 00:39:30,940
so the sampling secured chicks so<font color="#E5E5E5"> it's</font>

1006
00:39:29,680 --> 00:39:32,618
reverse if you've ever reverse engineer

1007
00:39:30,940 --> 00:39:33,910
an application in<font color="#E5E5E5"> Android application</font>

1008
00:39:32,619 --> 00:39:35,980
and tried to figure out what it's doing

1009
00:39:33,910 --> 00:39:37,359
reverse engineering application and

1010
00:39:35,980 --> 00:39:39,040
figuring out how<font color="#CCCCCC"> its building its</font>

1011
00:39:37,359 --> 00:39:40,210
requests this stuff is way harder than

1012
00:39:39,040 --> 00:39:41,710
actually span in middle<font color="#E5E5E5"> lane if you</font>

1013
00:39:40,210 --> 00:39:43,900
command in the middle you can see what's

1014
00:39:41,710 --> 00:39:45,940
what's doing when and you can actually

1015
00:39:43,900 --> 00:39:47,230
just<font color="#E5E5E5"> you know grab the requests so we're</font>

1016
00:39:45,940 --> 00:39:50,319
going to do the same<font color="#E5E5E5"> thing with you jack</font>

1017
00:39:47,230 --> 00:39:52,059
and I'll talk about that on excellent

1018
00:39:50,319 --> 00:39:53,650
section so if the app employed is doing

1019
00:39:52,059 --> 00:39:57,670
a thinning you're out of luck pretty

1020
00:39:53,650 --> 00:40:00,069
much you need to disable that somehow or

1021
00:39:57,670 --> 00:40:02,079
manually reverse engineer it you can

1022
00:40:00,069 --> 00:40:05,799
disable<font color="#CCCCCC"> spit a good thing with expose so</font>

1023
00:40:02,079 --> 00:40:08,260
we'll do<font color="#CCCCCC"> that so the practice our second</font>

1024
00:40:05,799 --> 00:40:10,809
practical example is yet again um David

1025
00:40:08,260 --> 00:40:13,869
toys 50 penny so essentially what

1026
00:40:10,809 --> 00:40:16,270
happens when you open the app and<font color="#E5E5E5"> I'll</font>

1027
00:40:13,869 --> 00:40:20,109
show<font color="#E5E5E5"> it and you're trying to man middle</font>

1028
00:40:16,270 --> 00:40:21,790
it will say no I can't<font color="#E5E5E5"> even middles and</font>

1029
00:40:20,109 --> 00:40:23,710
say you have no internet which<font color="#CCCCCC"> is</font>

1030
00:40:21,790 --> 00:40:27,279
obviously false because I have<font color="#E5E5E5"> plenty of</font>

1031
00:40:23,710 --> 00:40:28,869
<font color="#E5E5E5">internet so I've through</font><font color="#CCCCCC"> a bit of</font>

1032
00:40:27,280 --> 00:40:31,480
reversing and figuring out things i

1033
00:40:28,869 --> 00:40:35,140
learned that SL is still up here

1034
00:40:31,480 --> 00:40:37,660
unverified exception is thrown when the

1035
00:40:35,140 --> 00:40:39,368
certificate is unknown so we're<font color="#E5E5E5"> going to</font>

1036
00:40:37,660 --> 00:40:41,589
basically find that in the code and hook

1037
00:40:39,369 --> 00:40:47,430
the function that's throwing enough to

1038
00:40:41,589 --> 00:40:47,430
do nothing so man the middle some stuff

1039
00:40:47,810 --> 00:40:51,490
how many going<font color="#E5E5E5"> on time ten minutes it's</font>

1040
00:40:49,010 --> 00:40:51,490
very fiction

1041
00:40:51,869 --> 00:40:59,579
so Rep yeah rip<font color="#CCCCCC"> it so we're</font><font color="#E5E5E5"> going to</font>

1042
00:40:57,660 --> 00:41:00,749
grep in our d compiled code like I said

1043
00:40:59,579 --> 00:41:02,700
I saved you daddy compilation step

1044
00:41:00,749 --> 00:41:03,689
because it takes a little bit to go

1045
00:41:02,700 --> 00:41:05,368
through everything especially with this

1046
00:41:03,690 --> 00:41:08,460
because there's so many classes<font color="#CCCCCC"> let me</font>

1047
00:41:05,369 --> 00:41:12,089
actually show you all of<font color="#E5E5E5"> the class names</font>

1048
00:41:08,460 --> 00:41:13,470
there's your ridiculous I added the

1049
00:41:12,089 --> 00:41:14,970
numbers because they were<font color="#E5E5E5"> the same name</font>

1050
00:41:13,470 --> 00:41:17,759
and like I said<font color="#E5E5E5"> on a</font><font color="#CCCCCC"> case-sensitive</font><font color="#E5E5E5"> file</font>

1051
00:41:14,970 --> 00:41:20,308
system so i'm going to scrap that again

1052
00:41:17,759 --> 00:41:22,319
so it<font color="#CCCCCC"> appears in a couple places i try</font>

1053
00:41:20,309 --> 00:41:23,579
<font color="#E5E5E5">it out most of them but we'll go with</font>

1054
00:41:22,319 --> 00:41:25,740
the first one because that's the one

1055
00:41:23,579 --> 00:41:32,490
actually works and<font color="#E5E5E5"> because the first one</font>

1056
00:41:25,740 --> 00:41:35,339
right all right go back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> my glad I</font>

1057
00:41:32,490 --> 00:41:38,970
decided record these commands so we have

1058
00:41:35,339 --> 00:41:41,749
this function that throws appear on

1059
00:41:38,970 --> 00:41:43,980
verified exception at the bottom so

1060
00:41:41,749 --> 00:41:47,959
<font color="#CCCCCC">here's that so we don't</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> it to do</font>

1061
00:41:43,980 --> 00:41:47,960
<font color="#CCCCCC">that and as you can see as well</font>

1062
00:41:49,099 --> 00:41:53,190
certificate pinning failure ok so this

1063
00:41:51,990 --> 00:41:54,660
string builder is the theta<font color="#E5E5E5"> it's</font>

1064
00:41:53,190 --> 00:41:56,430
returning stringbuilder two strings

1065
00:41:54,660 --> 00:41:58,288
what's returning as the exception

1066
00:41:56,430 --> 00:41:59,759
message and so as you can see here it

1067
00:41:58,289 --> 00:42:02,069
says certificate hanging failure we have

1068
00:41:59,759 --> 00:42:03,390
that CD drive so we don't want<font color="#CCCCCC"> this</font>

1069
00:42:02,069 --> 00:42:06,180
function to happen at all because it's

1070
00:42:03,390 --> 00:42:07,950
going<font color="#E5E5E5"> to start an exception so we kind</font>

1071
00:42:06,180 --> 00:42:10,348
of make note of that arguments it takes

1072
00:42:07,950 --> 00:42:16,140
a string and a list and what it's called

1073
00:42:10,349 --> 00:42:20,400
a so NCAA with the string<font color="#CCCCCC"> and a list so</font>

1074
00:42:16,140 --> 00:42:21,779
now<font color="#E5E5E5"> I'll show you guys and if you</font>

1075
00:42:20,400 --> 00:42:23,730
haven't<font color="#E5E5E5"> used</font><font color="#CCCCCC"> beiser by the way this is</font>

1076
00:42:21,779 --> 00:42:25,380
<font color="#E5E5E5">what I'm using to put this put my phone</font>

1077
00:42:23,730 --> 00:42:27,119
up on the screen I was thinking<font color="#CCCCCC"> about</font>

1078
00:42:25,380 --> 00:42:28,799
<font color="#CCCCCC">how to do this talk and I was I was like</font>

1079
00:42:27,119 --> 00:42:31,019
I can I hold my phone up or<font color="#E5E5E5"> lose an</font>

1080
00:42:28,799 --> 00:42:34,460
emulator or what but<font color="#E5E5E5"> this is actually a</font>

1081
00:42:31,019 --> 00:42:37,649
lot better so<font color="#E5E5E5"> I'll show</font><font color="#CCCCCC"> you guys that</font>

1082
00:42:34,460 --> 00:42:39,119
without this enabled it yells at me<font color="#E5E5E5"> and</font>

1083
00:42:37,650 --> 00:42:42,509
it says internet connection

1084
00:42:39,119 --> 00:42:44,069
actually appears to be offline which<font color="#E5E5E5"> I'm</font>

1085
00:42:42,509 --> 00:42:46,650
definitely<font color="#E5E5E5"> online I know that</font><font color="#CCCCCC"> I've got</font>

1086
00:42:44,069 --> 00:42:48,569
Wi-Fi that has internet so it's

1087
00:42:46,650 --> 00:42:52,589
something's going on right now I'm

1088
00:42:48,569 --> 00:42:54,150
trying to man in middle of traffic so I

1089
00:42:52,589 --> 00:42:56,339
have it I<font color="#E5E5E5"> have a certificate installed</font>

1090
00:42:54,150 --> 00:43:03,569
from burp I have burp suite running over

1091
00:42:56,339 --> 00:43:07,470
<font color="#E5E5E5">here and it's grabbing the stuff so if</font>

1092
00:43:03,569 --> 00:43:09,150
we<font color="#E5E5E5"> go back here and we'll show the</font>

1093
00:43:07,470 --> 00:43:11,249
module code before<font color="#CCCCCC"> I reenable already</font>

1094
00:43:09,150 --> 00:43:12,869
enabled it now and then well<font color="#E5E5E5"> I'm showing</font>

1095
00:43:11,249 --> 00:43:15,660
the module code it'll reboot and we can

1096
00:43:12,869 --> 00:43:24,140
show that it's actually I put it here

1097
00:43:15,660 --> 00:43:24,140
for a reason<font color="#CCCCCC"> okay modules yea enable</font>

1098
00:43:26,530 --> 00:43:31,840
okay so this is the same much we<font color="#CCCCCC"> looked</font>

1099
00:43:29,680 --> 00:43:32,890
at before<font color="#E5E5E5"> but I didn't show</font><font color="#CCCCCC"> you I didn't</font>

1100
00:43:31,840 --> 00:43:34,420
explain this line of code which is

1101
00:43:32,890 --> 00:43:36,190
disabling certificate pinning i also

1102
00:43:34,420 --> 00:43:37,600
have an example<font color="#CCCCCC"> in here a replacement</font>

1103
00:43:36,190 --> 00:43:40,960
method that just logs whatever string

1104
00:43:37,600 --> 00:43:43,990
its past and then returns<font color="#E5E5E5"> null</font><font color="#CCCCCC"> finding</font>

1105
00:43:40,960 --> 00:43:46,030
Huck method and CJ that was our class

1106
00:43:43,990 --> 00:43:48,850
and then function name first argument is

1107
00:43:46,030 --> 00:43:55,270
a string second argument is a list and

1108
00:43:48,850 --> 00:43:56,980
then Ellen that loves attention and then

1109
00:43:55,270 --> 00:44:00,400
our we're replacing the method we're

1110
00:43:56,980 --> 00:44:02,440
just saying hey man just don't just do

1111
00:44:00,400 --> 00:44:03,790
anything<font color="#CCCCCC"> all right so we don't</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to</font>

1112
00:44:02,440 --> 00:44:04,570
throw that exception so if it doesn't

1113
00:44:03,790 --> 00:44:07,630
run it's<font color="#E5E5E5"> not going to throw that</font>

1114
00:44:04,570 --> 00:44:08,950
exception<font color="#E5E5E5"> function you may be saying a</font>

1115
00:44:07,630 --> 00:44:11,320
well if that function does something

1116
00:44:08,950 --> 00:44:12,700
<font color="#E5E5E5">else that is where things get</font>

1117
00:44:11,320 --> 00:44:14,020
complicated you actually have to start

1118
00:44:12,700 --> 00:44:16,569
like really digging into this and

1119
00:44:14,020 --> 00:44:18,370
figuring out like what to do but like I

1120
00:44:16,570 --> 00:44:20,220
said this is<font color="#CCCCCC"> a basic intro to explicit</font>

1121
00:44:18,370 --> 00:44:22,720
rework and how you can<font color="#E5E5E5"> help stuff so I</font>

1122
00:44:20,220 --> 00:44:23,830
figured out<font color="#E5E5E5"> that it doesn't do anything</font>

1123
00:44:22,720 --> 00:44:25,480
else besides just get painting that's

1124
00:44:23,830 --> 00:44:30,460
all the checks so we just don't do it

1125
00:44:25,480 --> 00:44:33,310
<font color="#E5E5E5">then I'll be fine all right waiting for</font>

1126
00:44:30,460 --> 00:44:34,870
my phone to Pluto so first<font color="#CCCCCC"> wheats</font>

1127
00:44:33,310 --> 00:44:36,100
<font color="#E5E5E5">running you guys have</font><font color="#CCCCCC"> had</font><font color="#E5E5E5"> you guys</font>

1128
00:44:34,870 --> 00:44:39,910
having how many people you spurt before

1129
00:44:36,100 --> 00:44:43,330
<font color="#CCCCCC">or</font><font color="#E5E5E5"> sweet yeah Roxy in the middle the</font>

1130
00:44:39,910 --> 00:44:45,609
issue is here HTS we need to cert you

1131
00:44:43,330 --> 00:44:47,770
can<font color="#E5E5E5"> install the circ within the</font><font color="#CCCCCC"> Android</font>

1132
00:44:45,610 --> 00:44:49,150
certificate store and that will allow

1133
00:44:47,770 --> 00:44:50,650
you two met in middle traffic that

1134
00:44:49,150 --> 00:44:52,840
aren't<font color="#CCCCCC"> traffic's that's not certificate</font>

1135
00:44:50,650 --> 00:44:57,040
and so it verifies<font color="#CCCCCC"> a certificate you're</font>

1136
00:44:52,840 --> 00:44:59,269
outta luck and so basically<font color="#CCCCCC"> that's what</font>

1137
00:44:57,040 --> 00:45:06,558
we're disabled within this application

1138
00:44:59,269 --> 00:45:08,890
so waiting for my phone it's going to

1139
00:45:06,559 --> 00:45:08,890
<font color="#CCCCCC">yell me</font>

1140
00:45:09,930 --> 00:45:16,890
any questions while we're here this is

1141
00:45:12,930 --> 00:45:21,029
my last part so good did you publish the

1142
00:45:16,890 --> 00:45:22,410
<font color="#CCCCCC">Python script the wholesale yeah it's</font>

1143
00:45:21,030 --> 00:45:24,359
somewhere on the internet is I did that

1144
00:45:22,410 --> 00:45:26,848
I had had that from a while ago<font color="#E5E5E5"> it</font>

1145
00:45:24,359 --> 00:45:28,440
wasn't mine but I had like made changes

1146
00:45:26,849 --> 00:45:29,609
to it so that<font color="#E5E5E5"> I could I could I updated</font>

1147
00:45:28,440 --> 00:45:30,510
it so that I could query it again

1148
00:45:29,609 --> 00:45:32,759
because<font color="#E5E5E5"> they've changed their API a</font>

1149
00:45:30,510 --> 00:45:35,160
little bit since its kind of broken

1150
00:45:32,760 --> 00:45:36,930
right now there's a lot<font color="#CCCCCC"> of features that</font>

1151
00:45:35,160 --> 00:45:38,040
are out there like message posting

1152
00:45:36,930 --> 00:45:39,990
uploading and downloading because I

1153
00:45:38,040 --> 00:45:41,480
think<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> rate limiting now you used</font>

1154
00:45:39,990 --> 00:45:43,799
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be able to just download things like</font>

1155
00:45:41,480 --> 00:45:45,059
continually and now you can't do that

1156
00:45:43,800 --> 00:45:46,910
anymore they've actually improved their

1157
00:45:45,059 --> 00:45:49,079
security<font color="#E5E5E5"> to go which is good for them</font>

1158
00:45:46,910 --> 00:45:53,790
but i think it's the<font color="#E5E5E5"> martin</font><font color="#CCCCCC"> and it's</font>

1159
00:45:49,079 --> 00:45:55,770
called py AK<font color="#E5E5E5"> jack and there's some code</font>

1160
00:45:53,790 --> 00:45:57,058
that I've contributed to that that i'm

1161
00:45:55,770 --> 00:45:59,640
<font color="#CCCCCC">not</font><font color="#E5E5E5"> sure if it works anymore have to fix</font>

1162
00:45:57,059 --> 00:46:01,530
it but if you<font color="#E5E5E5"> guys want i can publish</font>

1163
00:45:59,640 --> 00:46:03,750
just the part that gets the messages and

1164
00:46:01,530 --> 00:46:07,250
prints them out to the screen sure kind

1165
00:46:03,750 --> 00:46:09,510
of you demonstrated method hooky with

1166
00:46:07,250 --> 00:46:12,510
objects<font color="#E5E5E5"> that are from the java standard</font>

1167
00:46:09,510 --> 00:46:14,640
library how<font color="#CCCCCC"> is the framework capable of</font>

1168
00:46:12,510 --> 00:46:18,390
hooking functions that take objects that

1169
00:46:14,640 --> 00:46:20,490
are<font color="#E5E5E5"> defined inside of the definitions by</font>

1170
00:46:18,390 --> 00:46:22,348
the application yes but you need to

1171
00:46:20,490 --> 00:46:24,299
basically get the<font color="#E5E5E5"> d compiled code and</font>

1172
00:46:22,349 --> 00:46:25,230
like make it acceptable for reading

1173
00:46:24,299 --> 00:46:27,720
<font color="#CCCCCC">because it needs to know what the class</font>

1174
00:46:25,230 --> 00:46:29,520
is to be able<font color="#E5E5E5"> to accept it you can</font>

1175
00:46:27,720 --> 00:46:30,720
recreate it you have all the code so you

1176
00:46:29,520 --> 00:46:31,980
<font color="#E5E5E5">can recreate it that's a little bit more</font>

1177
00:46:30,720 --> 00:46:33,328
painful and that's<font color="#E5E5E5"> kind of outside</font><font color="#CCCCCC"> the</font>

1178
00:46:31,980 --> 00:46:35,609
scope of<font color="#CCCCCC"> this talk because it takes</font>

1179
00:46:33,329 --> 00:46:38,010
forever to do that if you're looking<font color="#CCCCCC"> for</font>

1180
00:46:35,609 --> 00:46:39,569
a cool example of that<font color="#E5E5E5"> i thought one of</font>

1181
00:46:38,010 --> 00:46:40,940
the projects that<font color="#CCCCCC"> i fall on it has</font>

1182
00:46:39,569 --> 00:46:43,820
helped<font color="#E5E5E5"> me did all this talk early I</font>

1183
00:46:40,940 --> 00:46:45,980
really lost as on the last slide

1184
00:46:43,820 --> 00:46:49,400
talk about it when we get there good<font color="#CCCCCC"> oh</font>

1185
00:46:45,980 --> 00:46:52,550
<font color="#CCCCCC">just</font><font color="#E5E5E5"> a former common with a slight</font>

1186
00:46:49,400 --> 00:46:54,380
question so<font color="#E5E5E5"> you sort of mentioned you</font>

1187
00:46:52,550 --> 00:46:56,900
really do<font color="#CCCCCC"> anything too terribly</font>

1188
00:46:54,380 --> 00:47:01,150
nefarious with us but one<font color="#E5E5E5"> of the issues</font>

1189
00:46:56,900 --> 00:47:06,070
I've seen with android app sec is that

1190
00:47:01,150 --> 00:47:09,560
it's<font color="#E5E5E5"> pretty bad you're not wrong now so</font>

1191
00:47:06,070 --> 00:47:11,030
immediately<font color="#CCCCCC"> my first thought is let's</font>

1192
00:47:09,560 --> 00:47:14,060
try and hook something that's doing

1193
00:47:11,030 --> 00:47:18,200
client-side input validation have you

1194
00:47:14,060 --> 00:47:20,440
been covered with that um I mean<font color="#E5E5E5"> I've</font>

1195
00:47:18,200 --> 00:47:22,580
seen<font color="#E5E5E5"> a couple</font><font color="#CCCCCC"> laps but I mean yeah like</font>

1196
00:47:20,440 --> 00:47:24,440
words of friends of that example like

1197
00:47:22,580 --> 00:47:26,180
that's the appliance I Belgian yeah sure

1198
00:47:24,440 --> 00:47:27,260
something maybe a little bit more

1199
00:47:26,180 --> 00:47:30,049
nefarious something where you actually

1200
00:47:27,260 --> 00:47:32,540
<font color="#E5E5E5">doing like you know parsing for SQL</font>

1201
00:47:30,050 --> 00:47:34,160
general I haven't<font color="#CCCCCC"> looked into that</font>

1202
00:47:32,540 --> 00:47:35,930
that's<font color="#E5E5E5"> definitely something that's like</font>

1203
00:47:34,160 --> 00:47:37,580
mymy idea with this talk was I<font color="#CCCCCC"> have</font>

1204
00:47:35,930 --> 00:47:40,460
these applications that I know work<font color="#E5E5E5"> and</font>

1205
00:47:37,580 --> 00:47:41,900
our fun examples yeah but<font color="#E5E5E5"> this is</font>

1206
00:47:40,460 --> 00:47:44,480
definitely like<font color="#E5E5E5"> I said extendable to</font>

1207
00:47:41,900 --> 00:47:46,100
whatever else you know you<font color="#E5E5E5"> can write a</font>

1208
00:47:44,480 --> 00:47:47,240
module if you can think about the module

1209
00:47:46,100 --> 00:47:48,410
like if you can think about a function

1210
00:47:47,240 --> 00:47:49,879
that you want to<font color="#E5E5E5"> hook with inside the</font>

1211
00:47:48,410 --> 00:47:51,770
application you can change you can

1212
00:47:49,880 --> 00:47:54,110
change the functionality the reverse

1213
00:47:51,770 --> 00:47:57,110
<font color="#E5E5E5">engineering is like i said i was about</font>

1214
00:47:54,110 --> 00:47:58,430
half this talk and it is a big big topic

1215
00:47:57,110 --> 00:48:00,950
that people really need to get further

1216
00:47:58,430 --> 00:48:03,799
into and<font color="#E5E5E5"> that put out a</font><font color="#CCCCCC"> hold two three</font>

1217
00:48:00,950 --> 00:48:05,330
<font color="#E5E5E5">talks devote to it itself so if you can</font>

1218
00:48:03,800 --> 00:48:08,600
find it<font color="#CCCCCC"> you can change it pretty much</font>

1219
00:48:05,330 --> 00:48:09,799
within<font color="#E5E5E5"> ok is your question someone</font><font color="#CCCCCC"> all</font>

1220
00:48:08,600 --> 00:48:12,140
<font color="#CCCCCC">right so now</font><font color="#E5E5E5"> we'll launch the app and</font>

1221
00:48:09,800 --> 00:48:15,500
we'll see hopefully cross my fingers on

1222
00:48:12,140 --> 00:48:18,049
my last demo that it will grab it will

1223
00:48:15,500 --> 00:48:21,020
grab the yes and at this point we can<font color="#CCCCCC"> go</font>

1224
00:48:18,050 --> 00:48:23,930
over<font color="#E5E5E5"> to our burp I'm know this</font><font color="#CCCCCC"> font</font>

1225
00:48:21,020 --> 00:48:26,300
small I'm sorry and we can see<font color="#CCCCCC"> that it</font>

1226
00:48:23,930 --> 00:48:28,490
squaring the API successfully and I'll

1227
00:48:26,300 --> 00:48:33,040
actually put this<font color="#E5E5E5"> in a vim window and</font>

1228
00:48:28,490 --> 00:48:33,040
just show it to you here copy

1229
00:48:33,960 --> 00:48:39,430
and so we can see that here's<font color="#E5E5E5"> the API</font>

1230
00:48:37,660 --> 00:48:44,170
here's the<font color="#CCCCCC"> actual query to the server</font>

1231
00:48:39,430 --> 00:48:45,640
and we are meddling all the traffic now

1232
00:48:44,170 --> 00:48:47,140
and it's not yelling at<font color="#E5E5E5"> us because oh</font>

1233
00:48:45,640 --> 00:48:49,328
hey you're not connect<font color="#E5E5E5"> to the internet</font>

1234
00:48:47,140 --> 00:48:51,400
we disabled the certificate pinning

1235
00:48:49,329 --> 00:48:53,230
check and now we can get<font color="#E5E5E5"> all the traffic</font>

1236
00:48:51,400 --> 00:48:54,549
in the middle and we don't<font color="#E5E5E5"> have to spend</font>

1237
00:48:53,230 --> 00:48:56,710
the time reverse engineering that whole

1238
00:48:54,549 --> 00:49:00,490
like section of code that<font color="#E5E5E5"> compiles this</font>

1239
00:48:56,710 --> 00:49:04,680
whole request so we can see them as they

1240
00:49:00,490 --> 00:49:07,000
happen so like getting messages or

1241
00:49:04,680 --> 00:49:14,009
posting things are uploading downloading

1242
00:49:07,000 --> 00:49:14,009
whatever<font color="#CCCCCC"> all right</font>

1243
00:49:15,430 --> 00:49:19,779
alright so other resources in the code

1244
00:49:17,890 --> 00:49:22,720
the coaching<font color="#E5E5E5"> this presentation the</font>

1245
00:49:19,780 --> 00:49:26,319
reversing tools the<font color="#E5E5E5"> KPK decompiler</font>

1246
00:49:22,720 --> 00:49:28,930
script and the string search script on

1247
00:49:26,319 --> 00:49:32,558
there as<font color="#CCCCCC"> well as the module are the</font>

1248
00:49:28,930 --> 00:49:35,078
unzip or expose mods has a<font color="#E5E5E5"> couple mods</font>

1249
00:49:32,559 --> 00:49:37,150
there's one extra there's a fun module

1250
00:49:35,079 --> 00:49:40,150
that will monitor<font color="#E5E5E5"> google play music for</font>

1251
00:49:37,150 --> 00:49:43,150
Taylor Swift songs and skip them so I

1252
00:49:40,150 --> 00:49:44,650
thought<font color="#CCCCCC"> that was fun it was it's an</font>

1253
00:49:43,150 --> 00:49:46,150
interesting thing that's interesting

1254
00:49:44,650 --> 00:49:50,170
module to look at as well because it

1255
00:49:46,150 --> 00:49:52,329
access class attributes it's a kind of a

1256
00:49:50,170 --> 00:49:54,190
<font color="#E5E5E5">practicing accessing class attributes so</font>

1257
00:49:52,329 --> 00:49:56,619
song name I to figure out what the hell

1258
00:49:54,190 --> 00:49:58,510
<font color="#CCCCCC">that was and resolve it dynamically so</font>

1259
00:49:56,619 --> 00:50:00,670
that's a<font color="#CCCCCC"> really cool little thing the</font>

1260
00:49:58,510 --> 00:50:02,319
there's a development tutorial by a guy

1261
00:50:00,670 --> 00:50:04,480
that created the xposed framework he

1262
00:50:02,319 --> 00:50:07,150
actually this small little tutorial<font color="#CCCCCC"> has</font>

1263
00:50:04,480 --> 00:50:09,190
<font color="#CCCCCC">changed</font><font color="#E5E5E5"> the clock</font><font color="#CCCCCC"> read like change the</font>

1264
00:50:07,150 --> 00:50:11,020
system clock read so he actually has an

1265
00:50:09,190 --> 00:50:14,500
example of cooking zygote<font color="#CCCCCC"> which is that</font>

1266
00:50:11,020 --> 00:50:16,030
first process and looking for the actual

1267
00:50:14,500 --> 00:50:17,140
<font color="#CCCCCC">android UI so you can hook things with</font>

1268
00:50:16,030 --> 00:50:18,490
an<font color="#E5E5E5"> android UI and not just in</font>

1269
00:50:17,140 --> 00:50:20,680
applications<font color="#CCCCCC"> but that was coming outside</font>

1270
00:50:18,490 --> 00:50:22,149
the scope of this this talk the XDA

1271
00:50:20,680 --> 00:50:24,069
forum<font color="#E5E5E5"> there's a physics a forum for</font>

1272
00:50:22,150 --> 00:50:25,390
everything into it<font color="#E5E5E5"> and there</font><font color="#CCCCCC"> is one</font><font color="#E5E5E5"> for</font>

1273
00:50:24,069 --> 00:50:27,220
the xposed framework and module

1274
00:50:25,390 --> 00:50:28,450
development and modules themselves so go

1275
00:50:27,220 --> 00:50:30,609
ahead<font color="#E5E5E5"> and check out out here interested</font>

1276
00:50:28,450 --> 00:50:32,020
the<font color="#CCCCCC"> export source code was something</font>

1277
00:50:30,609 --> 00:50:33,308
that<font color="#CCCCCC"> I looked at a little bit just</font>

1278
00:50:32,020 --> 00:50:35,380
interested in<font color="#E5E5E5"> it because it</font><font color="#CCCCCC"> was just</font>

1279
00:50:33,309 --> 00:50:36,430
<font color="#E5E5E5">it's a really cool project and the guy</font>

1280
00:50:35,380 --> 00:50:39,099
<font color="#CCCCCC">that maintains it the guys have</font>

1281
00:50:36,430 --> 00:50:40,629
maintained<font color="#CCCCCC"> it really like just</font>

1282
00:50:39,099 --> 00:50:42,430
mind-blowing stuff how they came up with

1283
00:50:40,630 --> 00:50:46,630
<font color="#E5E5E5">this and</font><font color="#CCCCCC"> I was going to rewrite at</font>

1284
00:50:42,430 --> 00:50:48,430
process like great snap dress is the app

1285
00:50:46,630 --> 00:50:49,869
that I was<font color="#CCCCCC"> talking about</font><font color="#E5E5E5"> Brad snap</font>

1286
00:50:48,430 --> 00:50:52,270
perhaps the source code for snap perhaps

1287
00:50:49,869 --> 00:50:54,640
is great they have stuff on obfuscation

1288
00:50:52,270 --> 00:50:56,950
like doing the obfuscation for snapchat

1289
00:50:54,640 --> 00:51:00,490
it's basically a big snapchat library so

1290
00:50:56,950 --> 00:51:04,210
you can like no screenshot notifications

1291
00:51:00,490 --> 00:51:05,290
I think we<font color="#E5E5E5"> can change the weather you</font>

1292
00:51:04,210 --> 00:51:06,970
can make it to like going a million

1293
00:51:05,290 --> 00:51:08,650
miles an hour extra filters or stuff

1294
00:51:06,970 --> 00:51:09,430
like that it<font color="#CCCCCC"> doesn't work</font><font color="#E5E5E5"> currently</font>

1295
00:51:08,650 --> 00:51:11,559
because

1296
00:51:09,430 --> 00:51:13,180
update it that much but if you guys want

1297
00:51:11,559 --> 00:51:15,790
to submit for us I'm sure you do both of

1298
00:51:13,180 --> 00:51:17,410
<font color="#E5E5E5">them the source code is there and that</font>

1299
00:51:15,790 --> 00:51:20,440
has a lot<font color="#CCCCCC"> of examples of hooking stuff a</font>

1300
00:51:17,410 --> 00:51:21,759
lot of creating your own you is if

1301
00:51:20,440 --> 00:51:22,809
you're looking into cooking UI elements

1302
00:51:21,760 --> 00:51:26,710
and things like that that's definitely a

1303
00:51:22,809 --> 00:51:29,319
project to look into and I did well on

1304
00:51:26,710 --> 00:51:30,670
time<font color="#E5E5E5"> Wow how do you put any of the</font>

1305
00:51:29,319 --> 00:51:32,670
questions from<font color="#E5E5E5"> you guys you're more than</font>

1306
00:51:30,670 --> 00:51:34,540
welcome you approach me afterwards and

1307
00:51:32,670 --> 00:51:37,140
yeah thank<font color="#E5E5E5"> you guys for listening and</font>

1308
00:51:34,540 --> 00:51:37,140
coming to the soccer

1309
00:51:42,020 --> 00:51:44,080
you

