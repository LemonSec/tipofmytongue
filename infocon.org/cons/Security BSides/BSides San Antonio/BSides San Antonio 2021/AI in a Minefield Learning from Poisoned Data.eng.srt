1
00:00:05,200 --> 00:00:07,680
here we go

2
00:00:07,680 --> 00:00:10,559
uh thank you for joining uh the talk uh

3
00:00:10,559 --> 00:00:12,160
i'm uh

4
00:00:12,160 --> 00:00:14,559
i'm a lead scientist at imperva in the

5
00:00:14,559 --> 00:00:16,320
last 21 years i've been innovating on

6
00:00:16,320 --> 00:00:18,160
security and algorithms and

7
00:00:18,160 --> 00:00:21,039
their intersection i enjoy the game of

8
00:00:21,039 --> 00:00:22,240
analyzing threats

9
00:00:22,240 --> 00:00:25,199
and designing mitigation i love math and

10
00:00:25,199 --> 00:00:25,840
i love

11
00:00:25,840 --> 00:00:28,800
all sorts of algorithms and i love

12
00:00:28,800 --> 00:00:30,400
building security technology

13
00:00:30,400 --> 00:00:32,880
and uh in my spare time i love hiking

14
00:00:32,880 --> 00:00:33,520
biking

15
00:00:33,520 --> 00:00:36,079
uh trail running and traveling around

16
00:00:36,079 --> 00:00:37,200
the world uh

17
00:00:37,200 --> 00:00:39,840
alone or uh with my family and this is

18
00:00:39,840 --> 00:00:40,640
another one of

19
00:00:40,640 --> 00:00:42,079
my hobbies and i'm i'm really

20
00:00:42,079 --> 00:00:43,520
disappointed at this time i don't have a

21
00:00:43,520 --> 00:00:44,480
chance to

22
00:00:44,480 --> 00:00:46,640
to go physically to texas and i really

23
00:00:46,640 --> 00:00:47,840
hope that in the

24
00:00:47,840 --> 00:00:50,399
in the next year we'll meet uh face to

25
00:00:50,399 --> 00:00:51,600
face and i can uh

26
00:00:51,600 --> 00:00:55,760
enjoy uh texas a good texas stakes

27
00:00:55,760 --> 00:00:58,399
i will start with a brief introduction

28
00:00:58,399 --> 00:00:58,800
of

29
00:00:58,800 --> 00:01:02,239
ai and the ai threat landscape

30
00:01:02,239 --> 00:01:05,119
i will continue with talking about data

31
00:01:05,119 --> 00:01:06,560
poisoning which is one of the

32
00:01:06,560 --> 00:01:08,720
of the main threats on on artificial

33
00:01:08,720 --> 00:01:10,880
intelligence systems

34
00:01:10,880 --> 00:01:14,000
then i'll continue with explaining the

35
00:01:14,000 --> 00:01:16,000
challenge of data poisoning uh in the

36
00:01:16,000 --> 00:01:18,560
world of uh web security

37
00:01:18,560 --> 00:01:22,080
uh how this uh uh threat is being um

38
00:01:22,080 --> 00:01:24,479
is effective in in this area and what

39
00:01:24,479 --> 00:01:26,479
are the possible mitigations

40
00:01:26,479 --> 00:01:29,600
uh then i will go into uh explaining uh

41
00:01:29,600 --> 00:01:32,799
about a solution to do a robust learning

42
00:01:32,799 --> 00:01:36,400
that is uh safe towards uh

43
00:01:36,400 --> 00:01:39,119
data poisoning uh on a stream data

44
00:01:39,119 --> 00:01:40,400
meaning without

45
00:01:40,400 --> 00:01:42,960
keeping all the data and running it in

46
00:01:42,960 --> 00:01:44,240
batch processing

47
00:01:44,240 --> 00:01:46,560
uh which is very important in in many

48
00:01:46,560 --> 00:01:48,000
many applications

49
00:01:48,000 --> 00:01:50,079
and i will end with a summary and

50
00:01:50,079 --> 00:01:52,720
conclusions

51
00:01:52,960 --> 00:01:55,920
we are uh in the ai era and no doubt

52
00:01:55,920 --> 00:01:56,560
about that

53
00:01:56,560 --> 00:01:58,560
uh artificial intelligence is is

54
00:01:58,560 --> 00:01:59,600
everywhere

55
00:01:59,600 --> 00:02:02,719
uh it is uh it is uh

56
00:02:02,719 --> 00:02:05,280
it involves every probably almost every

57
00:02:05,280 --> 00:02:06,159
aspect

58
00:02:06,159 --> 00:02:09,520
of our life and the ai era is also the

59
00:02:09,520 --> 00:02:11,038
data error because data

60
00:02:11,038 --> 00:02:13,520
like the new gold or the new fuel uh the

61
00:02:13,520 --> 00:02:14,239
thing that

62
00:02:14,239 --> 00:02:16,319
that fuels uh artificial intelligence

63
00:02:16,319 --> 00:02:17,520
system uh

64
00:02:17,520 --> 00:02:20,879
helps them to work and do what they can

65
00:02:20,879 --> 00:02:22,319
do

66
00:02:22,319 --> 00:02:24,560
and uh both the ai era and the data era

67
00:02:24,560 --> 00:02:25,520
are responsible

68
00:02:25,520 --> 00:02:28,720
they have amazing contribution on the

69
00:02:28,720 --> 00:02:31,360
on on many different domains however

70
00:02:31,360 --> 00:02:33,599
this contribution uh comes with several

71
00:02:33,599 --> 00:02:34,480
caveats

72
00:02:34,480 --> 00:02:38,480
which we usually ignore or at least

73
00:02:38,480 --> 00:02:40,879
underestimate to some extent uh and and

74
00:02:40,879 --> 00:02:43,040
this talk will uh we'll speak about uh

75
00:02:43,040 --> 00:02:46,079
about some of these

76
00:02:48,080 --> 00:02:50,560
most of you are probably familiar with

77
00:02:50,560 --> 00:02:52,000
the gartner hype cycle

78
00:02:52,000 --> 00:02:55,440
for new technologies uh and i think you

79
00:02:55,440 --> 00:02:56,239
can

80
00:02:56,239 --> 00:02:59,440
you can think about an equivalent

81
00:02:59,440 --> 00:03:02,480
security lifecycle for new technologies

82
00:03:02,480 --> 00:03:04,159
when you have a new technology and and

83
00:03:04,159 --> 00:03:05,840
that was the case for web that was the

84
00:03:05,840 --> 00:03:07,840
case for mobile that was the case for

85
00:03:07,840 --> 00:03:11,280
uh for iot then at the beginning uh

86
00:03:11,280 --> 00:03:14,319
people experts uh pioneers developed the

87
00:03:14,319 --> 00:03:15,519
technology without

88
00:03:15,519 --> 00:03:19,040
too much thinking about uh security

89
00:03:19,040 --> 00:03:20,879
uh they are excited with the with the

90
00:03:20,879 --> 00:03:22,480
new opportunities that are

91
00:03:22,480 --> 00:03:25,120
unlocked and then at some point someone

92
00:03:25,120 --> 00:03:26,319
discovers that this

93
00:03:26,319 --> 00:03:28,879
system is technology behaves in an odd

94
00:03:28,879 --> 00:03:29,760
way when

95
00:03:29,760 --> 00:03:32,959
a particular input is being fed to it uh

96
00:03:32,959 --> 00:03:34,959
and you have a vulnerability and then

97
00:03:34,959 --> 00:03:36,319
another one and another one

98
00:03:36,319 --> 00:03:37,519
and at some point there are so many

99
00:03:37,519 --> 00:03:39,599
vulnerabilities that people start asking

100
00:03:39,599 --> 00:03:40,640
themselves whether

101
00:03:40,640 --> 00:03:43,920
um this technology can can be ever used

102
00:03:43,920 --> 00:03:46,159
in a safe manner and then we get to this

103
00:03:46,159 --> 00:03:48,640
uh valley to the to the bottom

104
00:03:48,640 --> 00:03:52,319
uh in the point where domain experts

105
00:03:52,319 --> 00:03:54,400
and security researchers start to join

106
00:03:54,400 --> 00:03:56,159
forces to develop

107
00:03:56,159 --> 00:03:58,799
a terminology to develop a methodology

108
00:03:58,799 --> 00:04:01,040
and to give names to attacks and to

109
00:04:01,040 --> 00:04:03,360
start the designing mitigation and then

110
00:04:03,360 --> 00:04:04,879
we get to a stage of a healthy

111
00:04:04,879 --> 00:04:06,400
development where

112
00:04:06,400 --> 00:04:09,519
uh the main threats on this technology

113
00:04:09,519 --> 00:04:10,640
are understood

114
00:04:10,640 --> 00:04:14,720
and are to some extent mitigated uh

115
00:04:14,720 --> 00:04:16,959
and uh we get to this sort of a plateau

116
00:04:16,959 --> 00:04:17,759
this is

117
00:04:17,759 --> 00:04:19,839
not not very static because we know in

118
00:04:19,839 --> 00:04:20,798
the security

119
00:04:20,798 --> 00:04:23,360
we always have new vulnerabilities and

120
00:04:23,360 --> 00:04:24,320
new mitigations

121
00:04:24,320 --> 00:04:27,919
uh for them but uh but we get to a

122
00:04:27,919 --> 00:04:29,520
stable solution where technology can be

123
00:04:29,520 --> 00:04:30,240
used uh

124
00:04:30,240 --> 00:04:33,919
safely and uh and and ai is no different

125
00:04:33,919 --> 00:04:35,600
than other technologies in that sense it

126
00:04:35,600 --> 00:04:36,960
has no exception

127
00:04:36,960 --> 00:04:39,520
uh ai also have vulnerabilities and

128
00:04:39,520 --> 00:04:40,800
we'll speak about some of these in the

129
00:04:40,800 --> 00:04:43,440
next couple of slides

130
00:04:43,440 --> 00:04:45,919
what you see here is a typical machine

131
00:04:45,919 --> 00:04:47,120
learning system a

132
00:04:47,120 --> 00:04:50,320
very very generic one uh there is

133
00:04:50,320 --> 00:04:54,000
a training data so in the training phase

134
00:04:54,000 --> 00:04:57,280
we build a model from a training data or

135
00:04:57,280 --> 00:04:58,080
training set

136
00:04:58,080 --> 00:05:00,240
um and this model can be a

137
00:05:00,240 --> 00:05:02,639
classification model regression model or

138
00:05:02,639 --> 00:05:04,880
it can be other things in depends on the

139
00:05:04,880 --> 00:05:06,720
other problem we want to solve

140
00:05:06,720 --> 00:05:10,479
uh and then uh this model is um

141
00:05:10,479 --> 00:05:12,720
stabilizing is converging and once

142
00:05:12,720 --> 00:05:14,880
seeing an inputs data

143
00:05:14,880 --> 00:05:16,639
in a phase that is called the inference

144
00:05:16,639 --> 00:05:18,880
data this inputs data

145
00:05:18,880 --> 00:05:21,600
an image is now being classified as a

146
00:05:21,600 --> 00:05:23,039
category dog

147
00:05:23,039 --> 00:05:27,360
uh it's that sort of a prediction

148
00:05:27,360 --> 00:05:30,720
in some cases then this this result the

149
00:05:30,720 --> 00:05:31,840
outcome of the model

150
00:05:31,840 --> 00:05:34,639
goes into an evaluation and and then

151
00:05:34,639 --> 00:05:36,160
it's evaluation whether it was good or

152
00:05:36,160 --> 00:05:37,280
bad is being fed

153
00:05:37,280 --> 00:05:38,960
in the feedback loop to back the model

154
00:05:38,960 --> 00:05:40,720
in order to either to

155
00:05:40,720 --> 00:05:43,680
uh to enhance it or maybe to just uh if

156
00:05:43,680 --> 00:05:46,000
the model that we are building is um

157
00:05:46,000 --> 00:05:49,840
is coming to uh uh to represent

158
00:05:49,840 --> 00:05:53,280
in a dynamic environment then we want

159
00:05:53,280 --> 00:05:54,960
the model to keep uh

160
00:05:54,960 --> 00:05:57,360
keep being aligned with the uh with this

161
00:05:57,360 --> 00:05:58,720
environment and

162
00:05:58,720 --> 00:06:02,240
and continue to uh to evolve uh

163
00:06:02,240 --> 00:06:04,479
when you look at this system from an

164
00:06:04,479 --> 00:06:06,319
attacker's perspective

165
00:06:06,319 --> 00:06:09,360
then uh first you know the

166
00:06:09,360 --> 00:06:11,199
when you think of an internal attacker

167
00:06:11,199 --> 00:06:13,520
or an external attacker that's found his

168
00:06:13,520 --> 00:06:14,560
way in

169
00:06:14,560 --> 00:06:18,160
using some i don't know somehow a rce or

170
00:06:18,160 --> 00:06:19,440
any other

171
00:06:19,440 --> 00:06:21,520
attack vector then then the sky's the

172
00:06:21,520 --> 00:06:22,960
limit you can do everything he can

173
00:06:22,960 --> 00:06:24,479
tamper with the model it can steal the

174
00:06:24,479 --> 00:06:25,199
model

175
00:06:25,199 --> 00:06:28,000
you can extract it and can modify every

176
00:06:28,000 --> 00:06:28,880
particular

177
00:06:28,880 --> 00:06:32,479
decision the model has made however

178
00:06:32,479 --> 00:06:34,880
even when the attacker is not an insider

179
00:06:34,880 --> 00:06:36,720
when he is

180
00:06:36,720 --> 00:06:39,120
working from outside then still there's

181
00:06:39,120 --> 00:06:40,880
plenty of things the attacker

182
00:06:40,880 --> 00:06:44,160
can still do uh one of them

183
00:06:44,160 --> 00:06:47,360
is a collection of um of attacks called

184
00:06:47,360 --> 00:06:48,000
uh sometimes

185
00:06:48,000 --> 00:06:50,720
evasion or adversarial examples or ai

186
00:06:50,720 --> 00:06:52,000
deception

187
00:06:52,000 --> 00:06:55,039
where the attacker actually creates data

188
00:06:55,039 --> 00:06:55,840
points that

189
00:06:55,840 --> 00:06:58,240
confuse that make the algorithm making

190
00:06:58,240 --> 00:06:59,840
correct mistakes

191
00:06:59,840 --> 00:07:02,000
most of you probably are familiar i've

192
00:07:02,000 --> 00:07:03,840
seen at least once

193
00:07:03,840 --> 00:07:07,199
this example of stop sign when you add a

194
00:07:07,199 --> 00:07:08,639
couple of stickers to it

195
00:07:08,639 --> 00:07:12,080
and then the ai engine of an autonomous

196
00:07:12,080 --> 00:07:14,320
vehicle he looks at this uh

197
00:07:14,320 --> 00:07:15,759
[Music]

198
00:07:15,759 --> 00:07:18,080
stop sign and it looks for him like a

199
00:07:18,080 --> 00:07:19,280
speed limit site

200
00:07:19,280 --> 00:07:20,800
which of course can have uh a

201
00:07:20,800 --> 00:07:23,199
devastating uh consequences

202
00:07:23,199 --> 00:07:25,759
uh and in i think that in every

203
00:07:25,759 --> 00:07:28,000
situation where someone tried to create

204
00:07:28,000 --> 00:07:29,599
such data points that

205
00:07:29,599 --> 00:07:32,800
that uh that full the um machine

206
00:07:32,800 --> 00:07:33,919
learning model

207
00:07:33,919 --> 00:07:37,440
is success successful with with very

208
00:07:37,440 --> 00:07:38,720
little effort

209
00:07:38,720 --> 00:07:40,800
because we are in designs we know that

210
00:07:40,800 --> 00:07:42,400
whenever you build something

211
00:07:42,400 --> 00:07:44,160
without thinking about what will happen

212
00:07:44,160 --> 00:07:45,599
when the adversary will come

213
00:07:45,599 --> 00:07:48,160
and then your adversary counts then uh

214
00:07:48,160 --> 00:07:48,639
uh

215
00:07:48,639 --> 00:07:51,840
the adversary's work is it is very easy

216
00:07:51,840 --> 00:07:55,440
um the second uh uh

217
00:07:55,440 --> 00:07:57,919
threat is a training data poisoning and

218
00:07:57,919 --> 00:07:59,199
machine learning uh

219
00:07:59,199 --> 00:08:02,319
models uh are based on data

220
00:08:02,319 --> 00:08:04,800
uh and this data usually on on big data

221
00:08:04,800 --> 00:08:05,759
usually it comes

222
00:08:05,759 --> 00:08:07,919
from outside from external sources that

223
00:08:07,919 --> 00:08:09,280
are not always

224
00:08:09,280 --> 00:08:12,319
uh trustworthy uh

225
00:08:12,319 --> 00:08:16,080
and uh if the attacker has some control

226
00:08:16,080 --> 00:08:18,400
over the data then he can carry out uh

227
00:08:18,400 --> 00:08:19,440
something that is called the data

228
00:08:19,440 --> 00:08:20,240
poisoning

229
00:08:20,240 --> 00:08:22,720
attack and we speak uh in in depth about

230
00:08:22,720 --> 00:08:24,000
this uh

231
00:08:24,000 --> 00:08:27,759
this kind of attack later on another

232
00:08:27,759 --> 00:08:30,800
slightly more esoteric threat uh is a

233
00:08:30,800 --> 00:08:32,240
training data leakage

234
00:08:32,240 --> 00:08:34,640
when you build the model from training

235
00:08:34,640 --> 00:08:35,360
data then

236
00:08:35,360 --> 00:08:37,679
some of the training data is actually

237
00:08:37,679 --> 00:08:38,559
leaking

238
00:08:38,559 --> 00:08:41,679
into the model is there implicitly and

239
00:08:41,679 --> 00:08:44,000
in some cases there are ways to uh to

240
00:08:44,000 --> 00:08:45,680
extract this data

241
00:08:45,680 --> 00:08:49,120
and if you use the sensitive data for

242
00:08:49,120 --> 00:08:50,000
the training

243
00:08:50,000 --> 00:08:53,120
which is fairly typical because

244
00:08:53,120 --> 00:08:55,839
training is sometimes it used with a pii

245
00:08:55,839 --> 00:08:57,760
health record so it depends exactly on

246
00:08:57,760 --> 00:08:59,040
what is the problem that you're trying

247
00:08:59,040 --> 00:09:01,360
to solve uh

248
00:09:01,360 --> 00:09:03,200
then this is a thread that you should

249
00:09:03,200 --> 00:09:04,720
you should take care of and make sure

250
00:09:04,720 --> 00:09:05,519
that you are

251
00:09:05,519 --> 00:09:08,720
immune again against it

252
00:09:08,720 --> 00:09:11,760
uh but as i said we will zoom into uh

253
00:09:11,760 --> 00:09:12,800
data poisoning

254
00:09:12,800 --> 00:09:15,200
so uh what is data poisoning and how uh

255
00:09:15,200 --> 00:09:16,399
does it work

256
00:09:16,399 --> 00:09:19,279
uh on the left side you see uh a typical

257
00:09:19,279 --> 00:09:20,959
machine learning model it

258
00:09:20,959 --> 00:09:23,680
it is a clear classifier it tries to

259
00:09:23,680 --> 00:09:24,160
find

260
00:09:24,160 --> 00:09:27,279
the best line that separates between the

261
00:09:27,279 --> 00:09:27,680
red

262
00:09:27,680 --> 00:09:31,920
triangles and the blue circles

263
00:09:31,920 --> 00:09:35,279
and uh the the thing

264
00:09:35,279 --> 00:09:38,160
is that if you take a single point and

265
00:09:38,160 --> 00:09:38,800
move it

266
00:09:38,800 --> 00:09:41,680
into different locations then the the

267
00:09:41,680 --> 00:09:44,000
optimal separator will be completely

268
00:09:44,000 --> 00:09:45,040
different

269
00:09:45,040 --> 00:09:47,120
so even if you have um if you're

270
00:09:47,120 --> 00:09:48,800
changing a very few

271
00:09:48,800 --> 00:09:51,920
uh data points in some cases

272
00:09:51,920 --> 00:09:55,040
it can have significant impact on the uh

273
00:09:55,040 --> 00:09:56,640
on the model that is going to be

274
00:09:56,640 --> 00:09:58,880
generated and on the right side you can

275
00:09:58,880 --> 00:09:59,519
see uh

276
00:09:59,519 --> 00:10:03,200
a more uh significance the example

277
00:10:03,200 --> 00:10:06,399
where the attacker actually uh

278
00:10:06,399 --> 00:10:08,720
tries to do something deliberately and

279
00:10:08,720 --> 00:10:09,519
he will put

280
00:10:09,519 --> 00:10:12,959
all these uh uh it is a batch of uh

281
00:10:12,959 --> 00:10:17,360
of red dots uh which will make the model

282
00:10:17,360 --> 00:10:21,200
uh be completely perpendicular to the

283
00:10:21,200 --> 00:10:22,640
original model and

284
00:10:22,640 --> 00:10:25,839
practically useless for uh separating uh

285
00:10:25,839 --> 00:10:27,120
at the red

286
00:10:27,120 --> 00:10:29,519
from the uh from the blue which is

287
00:10:29,519 --> 00:10:32,240
exactly what the attacker was aiming to

288
00:10:32,240 --> 00:10:35,519
obtain uh now the

289
00:10:35,519 --> 00:10:37,120
the threat of data poisoning you know

290
00:10:37,120 --> 00:10:38,880
the terminology i

291
00:10:38,880 --> 00:10:41,839
i think it is fairly new i only uh heard

292
00:10:41,839 --> 00:10:43,839
about it a couple of years ago

293
00:10:43,839 --> 00:10:46,959
uh however uh this is not a new threat

294
00:10:46,959 --> 00:10:50,000
data poisoning um a threat i think it is

295
00:10:50,000 --> 00:10:52,800
um almost as old as as the internet

296
00:10:52,800 --> 00:10:53,200
because

297
00:10:53,200 --> 00:10:55,360
i i'm sure that like myself when you

298
00:10:55,360 --> 00:10:57,040
enter tripadvisor

299
00:10:57,040 --> 00:10:59,200
and you see now you want to uh to pick a

300
00:10:59,200 --> 00:11:00,480
hotel you see

301
00:11:00,480 --> 00:11:03,360
a positive or a five-star review then

302
00:11:03,360 --> 00:11:05,040
probably like myself you ask yourself

303
00:11:05,040 --> 00:11:05,839
okay

304
00:11:05,839 --> 00:11:08,640
is this a real review or a fake review

305
00:11:08,640 --> 00:11:09,040
uh

306
00:11:09,040 --> 00:11:11,360
because trip advisor like many other

307
00:11:11,360 --> 00:11:14,079
travel sites or actually any side

308
00:11:14,079 --> 00:11:17,040
that use a rating system they count on

309
00:11:17,040 --> 00:11:18,880
data that is coming from outside

310
00:11:18,880 --> 00:11:21,279
and uh data is coming from what's up

311
00:11:21,279 --> 00:11:22,079
outside

312
00:11:22,079 --> 00:11:26,000
it can be subject to uh to malicious uh

313
00:11:26,000 --> 00:11:28,880
circumvention uh and this is the case

314
00:11:28,880 --> 00:11:30,160
for travel sites it

315
00:11:30,160 --> 00:11:33,279
is the case for um i don't know and film

316
00:11:33,279 --> 00:11:34,399
rating sites

317
00:11:34,399 --> 00:11:36,399
it is the case for e-commerce sites and

318
00:11:36,399 --> 00:11:38,000
everything that everything that

319
00:11:38,000 --> 00:11:41,519
has a rating system uh is subject to uh

320
00:11:41,519 --> 00:11:42,560
data poisoning

321
00:11:42,560 --> 00:11:45,680
uh and these sites are aware of that

322
00:11:45,680 --> 00:11:46,640
they do they take

323
00:11:46,640 --> 00:11:49,040
some at least some measures to try to

324
00:11:49,040 --> 00:11:49,680
mitigate

325
00:11:49,680 --> 00:11:52,720
the threat and to uh to minimize or

326
00:11:52,720 --> 00:11:54,240
to make the life harder for the

327
00:11:54,240 --> 00:11:56,000
attackers to uh to impact

328
00:11:56,000 --> 00:11:59,279
uh the actual rating

329
00:11:59,279 --> 00:12:01,680
uh here you see an example of uh data

330
00:12:01,680 --> 00:12:02,880
poisoning in the wild

331
00:12:02,880 --> 00:12:04,880
and the attack here is a model skewing

332
00:12:04,880 --> 00:12:06,320
attack um

333
00:12:06,320 --> 00:12:09,440
sometimes called also a backdoor

334
00:12:09,440 --> 00:12:13,200
the attack occurred in the end of 2017

335
00:12:13,200 --> 00:12:16,240
on gmail spam filter uh

336
00:12:16,240 --> 00:12:18,079
actually this is not surprising that one

337
00:12:18,079 --> 00:12:20,240
of the battlefield for data poisoning is

338
00:12:20,240 --> 00:12:21,040
uh

339
00:12:21,040 --> 00:12:22,800
is a spam because this is i think one of

340
00:12:22,800 --> 00:12:25,040
the of the first domains where

341
00:12:25,040 --> 00:12:27,360
machine learning models prove themselves

342
00:12:27,360 --> 00:12:29,120
very effective against

343
00:12:29,120 --> 00:12:31,360
adversaries and for the sake of this

344
00:12:31,360 --> 00:12:33,279
discussion let's say

345
00:12:33,279 --> 00:12:35,279
let's say they called some spam

346
00:12:35,279 --> 00:12:37,600
providers adversaries

347
00:12:37,600 --> 00:12:39,600
and what the attackers did they wanted

348
00:12:39,600 --> 00:12:41,600
to uh

349
00:12:41,600 --> 00:12:44,160
to make the model think that their

350
00:12:44,160 --> 00:12:45,040
emails

351
00:12:45,040 --> 00:12:48,320
are legitimate so uh they fed the model

352
00:12:48,320 --> 00:12:50,079
with massive amounts of uh

353
00:12:50,079 --> 00:12:53,279
of spam like emails and they label of

354
00:12:53,279 --> 00:12:53,839
them

355
00:12:53,839 --> 00:12:56,320
as benign and their intention was of

356
00:12:56,320 --> 00:12:57,040
course that

357
00:12:57,040 --> 00:13:00,240
uh the model we learn all the

358
00:13:00,240 --> 00:13:02,800
the keywords the structures that are

359
00:13:02,800 --> 00:13:03,279
within

360
00:13:03,279 --> 00:13:06,079
uh these messages that you will learn

361
00:13:06,079 --> 00:13:06,880
that

362
00:13:06,880 --> 00:13:09,920
it will learn that these structures and

363
00:13:09,920 --> 00:13:13,360
keywords are actually representing

364
00:13:13,360 --> 00:13:15,120
legitimate emails and when they will

365
00:13:15,120 --> 00:13:17,200
have the actual spam

366
00:13:17,200 --> 00:13:20,639
uh then this uh then

367
00:13:20,639 --> 00:13:23,600
it will go under the radar of the model

368
00:13:23,600 --> 00:13:24,240
uh but

369
00:13:24,240 --> 00:13:27,040
uh uh google research team had detected

370
00:13:27,040 --> 00:13:27,440
it and

371
00:13:27,440 --> 00:13:30,639
and analyzed the and this is uh and

372
00:13:30,639 --> 00:13:34,720
this um this chart came from

373
00:13:34,720 --> 00:13:38,000
google research uh another example again

374
00:13:38,000 --> 00:13:41,600
uh of uh of spam filters is um

375
00:13:41,600 --> 00:13:43,680
an availability attack so if the

376
00:13:43,680 --> 00:13:45,360
previous attack you can think about

377
00:13:45,360 --> 00:13:47,120
a bit of a sort of a backdoor because

378
00:13:47,120 --> 00:13:48,480
the attackers wanted

379
00:13:48,480 --> 00:13:50,720
to have backdoors within the model that

380
00:13:50,720 --> 00:13:53,199
will allow them to do something later

381
00:13:53,199 --> 00:13:56,160
so this was in is an availability attack

382
00:13:56,160 --> 00:13:57,040
the victim here

383
00:13:57,040 --> 00:13:59,199
is uh actually this is not an attack

384
00:13:59,199 --> 00:14:01,120
this is a research on the potential

385
00:14:01,120 --> 00:14:03,279
attack uh the victim here is

386
00:14:03,279 --> 00:14:06,240
a spam based spam filter and the idea

387
00:14:06,240 --> 00:14:08,720
was to pollute the the spam dictionary

388
00:14:08,720 --> 00:14:10,240
means legitimate words

389
00:14:10,240 --> 00:14:11,839
because they knew that this this is an

390
00:14:11,839 --> 00:14:14,240
open source spam

391
00:14:14,240 --> 00:14:16,079
and spam filter they knew that it works

392
00:14:16,079 --> 00:14:17,440
uh that it is based on

393
00:14:17,440 --> 00:14:21,120
keywords of a bayesian network that is

394
00:14:21,120 --> 00:14:23,760
based on detecting keywords that are uh

395
00:14:23,760 --> 00:14:26,000
correlated somehow to spam or to

396
00:14:26,000 --> 00:14:29,920
legitimate uh emails and they created a

397
00:14:29,920 --> 00:14:31,120
large batch of

398
00:14:31,120 --> 00:14:34,320
um of uh uh

399
00:14:34,320 --> 00:14:36,240
of messages that were built from

400
00:14:36,240 --> 00:14:37,760
legitimate words

401
00:14:37,760 --> 00:14:40,800
probably very popular awards uh

402
00:14:40,800 --> 00:14:43,519
and they uh and they classified these as

403
00:14:43,519 --> 00:14:44,560
a spam

404
00:14:44,560 --> 00:14:46,639
and in this case they wanted to make the

405
00:14:46,639 --> 00:14:48,800
the staff filter detect more

406
00:14:48,800 --> 00:14:52,000
legitimate messages as a spam and

407
00:14:52,000 --> 00:14:53,839
indeed on the right side you can see the

408
00:14:53,839 --> 00:14:55,040
the results

409
00:14:55,040 --> 00:14:57,519
having uh one control over one percent

410
00:14:57,519 --> 00:14:59,199
of the of the messages

411
00:14:59,199 --> 00:15:02,480
it was sufficient to make the model

412
00:15:02,480 --> 00:15:04,480
classify eighty percent of the total of

413
00:15:04,480 --> 00:15:07,600
the total legitimate messages as spam

414
00:15:07,600 --> 00:15:10,639
or to detect to classify 95 percent

415
00:15:10,639 --> 00:15:13,120
of the total legitimate messages as

416
00:15:13,120 --> 00:15:15,040
unsure uh both of them

417
00:15:15,040 --> 00:15:17,600
make this model practically uh uh

418
00:15:17,600 --> 00:15:19,279
completely unusable

419
00:15:19,279 --> 00:15:23,760
uh for any uh for any uh usage

420
00:15:23,760 --> 00:15:26,480
so probably like myself at the beginning

421
00:15:26,480 --> 00:15:28,800
you see these examples and you say okay

422
00:15:28,800 --> 00:15:32,399
so um we gave the attacker

423
00:15:32,399 --> 00:15:34,800
significant power we gave him the power

424
00:15:34,800 --> 00:15:36,079
to provide us data

425
00:15:36,079 --> 00:15:37,920
and to tell us also also what is the

426
00:15:37,920 --> 00:15:40,560
meaning of this data to do the labeling

427
00:15:40,560 --> 00:15:44,320
so if we only could get rid of the uh

428
00:15:44,320 --> 00:15:45,759
of giving the attacker the power to

429
00:15:45,759 --> 00:15:47,440
label then

430
00:15:47,440 --> 00:15:50,880
we'll be good right wrong

431
00:15:50,880 --> 00:15:52,959
because another variant of a data

432
00:15:52,959 --> 00:15:54,000
poisoning attack

433
00:15:54,000 --> 00:15:56,800
which is called a clean label attack

434
00:15:56,800 --> 00:15:58,959
actually works when the attacker

435
00:15:58,959 --> 00:16:02,079
is response is giving you the data but

436
00:16:02,079 --> 00:16:04,160
it doesn't have any influence about the

437
00:16:04,160 --> 00:16:05,519
labeling process

438
00:16:05,519 --> 00:16:09,120
and the way it works the the victim here

439
00:16:09,120 --> 00:16:11,680
is an image classification system

440
00:16:11,680 --> 00:16:14,079
and uh what the attacker does he wants

441
00:16:14,079 --> 00:16:15,839
uh

442
00:16:15,839 --> 00:16:19,920
this model to classify these images

443
00:16:19,920 --> 00:16:22,720
of fish you see on the top uh to

444
00:16:22,720 --> 00:16:23,600
classify them

445
00:16:23,600 --> 00:16:26,399
as dogs and the way the attacker

446
00:16:26,399 --> 00:16:27,680
achieves that

447
00:16:27,680 --> 00:16:30,800
uh he takes an image of a dog and now he

448
00:16:30,800 --> 00:16:32,240
adds to this image an

449
00:16:32,240 --> 00:16:34,880
invisible noise invisible for for me

450
00:16:34,880 --> 00:16:36,560
visible for you invisible

451
00:16:36,560 --> 00:16:38,959
for the trusted person that is

452
00:16:38,959 --> 00:16:40,639
responsible for doing the trusted

453
00:16:40,639 --> 00:16:41,839
labeling

454
00:16:41,839 --> 00:16:43,680
so he adds this invisible noise to the

455
00:16:43,680 --> 00:16:46,079
image this invisible noise includes

456
00:16:46,079 --> 00:16:48,560
patterns that somehow are correlated to

457
00:16:48,560 --> 00:16:49,199
the

458
00:16:49,199 --> 00:16:52,320
the top image of the fish uh and what

459
00:16:52,320 --> 00:16:53,199
will happen

460
00:16:53,199 --> 00:16:57,120
next that the trusted labeler

461
00:16:57,120 --> 00:16:59,680
will see a dog will classify this image

462
00:16:59,680 --> 00:17:01,120
as a dog

463
00:17:01,120 --> 00:17:04,160
uh and the model will get this as a dog

464
00:17:04,160 --> 00:17:06,559
and when this model we see uh this image

465
00:17:06,559 --> 00:17:07,919
of a fish it would classify

466
00:17:07,919 --> 00:17:11,199
classify it as a dog and this uh

467
00:17:11,199 --> 00:17:13,919
attack works with a very very high uh uh

468
00:17:13,919 --> 00:17:14,799
success rate

469
00:17:14,799 --> 00:17:18,079
um you see this uh in this graphing that

470
00:17:18,079 --> 00:17:19,919
the blue side you see that the

471
00:17:19,919 --> 00:17:21,760
confidence of the of the model when

472
00:17:21,760 --> 00:17:23,039
seeing images of

473
00:17:23,039 --> 00:17:25,439
fish and classifying them as a dog is

474
00:17:25,439 --> 00:17:27,359
more than 95

475
00:17:27,359 --> 00:17:29,120
uh same thing on the bottom when the

476
00:17:29,120 --> 00:17:31,280
attacker wants to classify images of

477
00:17:31,280 --> 00:17:31,919
dogs

478
00:17:31,919 --> 00:17:34,559
as fish uh this attack is uh extremely

479
00:17:34,559 --> 00:17:34,960
uh

480
00:17:34,960 --> 00:17:37,600
successful and the and the main thing

481
00:17:37,600 --> 00:17:38,000
here

482
00:17:38,000 --> 00:17:41,679
is that uh actually this attack works

483
00:17:41,679 --> 00:17:43,200
even when uh

484
00:17:43,200 --> 00:17:46,480
this service provider actually uh

485
00:17:46,480 --> 00:17:49,840
hire some uh trusted people to make the

486
00:17:49,840 --> 00:17:52,799
uh the labeling uh but still the attack

487
00:17:52,799 --> 00:17:53,440
is

488
00:17:53,440 --> 00:17:57,600
effective so uh

489
00:17:57,600 --> 00:18:00,000
that's we talked about the threats so

490
00:18:00,000 --> 00:18:02,240
let's uh talk a little bit about the

491
00:18:02,240 --> 00:18:03,600
mitigation

492
00:18:03,600 --> 00:18:06,240
uh there are two mitigation approaches

493
00:18:06,240 --> 00:18:06,880
which are

494
00:18:06,880 --> 00:18:09,679
well they are straightforward um the

495
00:18:09,679 --> 00:18:10,720
first one

496
00:18:10,720 --> 00:18:13,919
is let's filter suspicious data we get a

497
00:18:13,919 --> 00:18:15,120
lot of data that we

498
00:18:15,120 --> 00:18:17,280
do the training with uh now we can

499
00:18:17,280 --> 00:18:19,360
filter uh

500
00:18:19,360 --> 00:18:22,480
data that looks suspicious uh it can be

501
00:18:22,480 --> 00:18:23,840
data coming from

502
00:18:23,840 --> 00:18:25,600
maybe the data itself is suspicious

503
00:18:25,600 --> 00:18:27,039
maybe it comes from

504
00:18:27,039 --> 00:18:29,360
suspicious suspicious origins maybe ip

505
00:18:29,360 --> 00:18:31,039
addresses that we suspect for some

506
00:18:31,039 --> 00:18:32,000
reason

507
00:18:32,000 --> 00:18:35,039
uh suspicious user suspicious uh client

508
00:18:35,039 --> 00:18:38,240
maybe we can uh filter out all the data

509
00:18:38,240 --> 00:18:39,200
that comes from

510
00:18:39,200 --> 00:18:42,400
from bots etc

511
00:18:42,400 --> 00:18:44,640
another approach uh another mitigation

512
00:18:44,640 --> 00:18:45,520
approach is to

513
00:18:45,520 --> 00:18:47,440
do the data sampling for the data that

514
00:18:47,440 --> 00:18:48,640
is used for the training

515
00:18:48,640 --> 00:18:51,520
to make it in a in a fault tolerant way

516
00:18:51,520 --> 00:18:51,919
uh

517
00:18:51,919 --> 00:18:54,559
to try to limit the impact of data

518
00:18:54,559 --> 00:18:56,240
points that are arriving from a single

519
00:18:56,240 --> 00:18:57,039
entity

520
00:18:57,039 --> 00:18:59,520
again entity can be a user it can be ip

521
00:18:59,520 --> 00:19:01,600
address uh can be things like that

522
00:19:01,600 --> 00:19:03,120
uh and again if you think about the

523
00:19:03,120 --> 00:19:04,799
booking.com for example

524
00:19:04,799 --> 00:19:06,960
and i think that you cannot you can't do

525
00:19:06,960 --> 00:19:08,480
rating

526
00:19:08,480 --> 00:19:11,120
without having uh i committed a a

527
00:19:11,120 --> 00:19:12,160
transaction

528
00:19:12,160 --> 00:19:15,280
an actual transaction uh and uh

529
00:19:15,280 --> 00:19:18,080
i'm sure that if you go to i don't know

530
00:19:18,080 --> 00:19:19,919
amazon and you want to uh

531
00:19:19,919 --> 00:19:22,160
to give a rating to a particular product

532
00:19:22,160 --> 00:19:23,679
and you know you you push a

533
00:19:23,679 --> 00:19:26,960
3 000 um

534
00:19:26,960 --> 00:19:30,000
five-star rating rates uh

535
00:19:30,000 --> 00:19:32,880
rating rates uh rates within one minute

536
00:19:32,880 --> 00:19:33,200
from

537
00:19:33,200 --> 00:19:36,240
the same ap and the same user then we

538
00:19:36,240 --> 00:19:37,440
probably you will get

539
00:19:37,440 --> 00:19:40,640
blocked so again this is a a

540
00:19:40,640 --> 00:19:43,679
a pretty straightforward not always very

541
00:19:43,679 --> 00:19:46,000
easy to carry out because

542
00:19:46,000 --> 00:19:48,320
we know that uh if we see messages from

543
00:19:48,320 --> 00:19:49,520
different types then

544
00:19:49,520 --> 00:19:51,280
they still can come from the same source

545
00:19:51,280 --> 00:19:53,679
but

546
00:19:53,679 --> 00:19:56,720
it is what it is uh other uh mitigation

547
00:19:56,720 --> 00:19:57,520
approaches

548
00:19:57,520 --> 00:20:01,039
uh less effective uh are

549
00:20:01,039 --> 00:20:03,280
detection approaches uh like uh diff

550
00:20:03,280 --> 00:20:04,320
tracking

551
00:20:04,320 --> 00:20:07,760
uh to keep uh measuring the distance

552
00:20:07,760 --> 00:20:10,000
from uh a new model from the previous

553
00:20:10,000 --> 00:20:11,520
model and assume that

554
00:20:11,520 --> 00:20:13,440
if you see that the new model is very

555
00:20:13,440 --> 00:20:15,600
very different from previous model then

556
00:20:15,600 --> 00:20:18,480
uh prob then you can conclude that you

557
00:20:18,480 --> 00:20:20,480
are under data poisoning attack

558
00:20:20,480 --> 00:20:22,400
and you can use a reliable benchmark to

559
00:20:22,400 --> 00:20:24,720
build the golden data sets that

560
00:20:24,720 --> 00:20:26,400
you know for sure what should be the

561
00:20:26,400 --> 00:20:28,960
result of the model for this data set

562
00:20:28,960 --> 00:20:32,400
and if it makes different uh predictions

563
00:20:32,400 --> 00:20:32,960
then

564
00:20:32,960 --> 00:20:34,799
you can conclude that you are under

565
00:20:34,799 --> 00:20:36,640
attack

566
00:20:36,640 --> 00:20:40,000
uh but but again these are um

567
00:20:40,000 --> 00:20:43,280
when the model comes to uh represent

568
00:20:43,280 --> 00:20:46,159
as changing a dynamic environment then

569
00:20:46,159 --> 00:20:46,480
uh

570
00:20:46,480 --> 00:20:49,200
these detections are are less effective

571
00:20:49,200 --> 00:20:49,679
because

572
00:20:49,679 --> 00:20:51,679
you expect the model to change and you

573
00:20:51,679 --> 00:20:53,039
don't know what is the

574
00:20:53,039 --> 00:20:54,880
the right prediction uh for a golden

575
00:20:54,880 --> 00:20:56,080
data set

576
00:20:56,080 --> 00:20:59,200
and of course there is a security by

577
00:20:59,200 --> 00:21:00,720
obscurity you can

578
00:21:00,720 --> 00:21:03,039
assume that the attackers don't care

579
00:21:03,039 --> 00:21:04,480
about you and you can assume that they

580
00:21:04,480 --> 00:21:06,400
don't know exactly how you work

581
00:21:06,400 --> 00:21:08,400
uh what is the model what is your model

582
00:21:08,400 --> 00:21:10,080
doing what is the type of the model

583
00:21:10,080 --> 00:21:13,280
and uh and even if they want to attack

584
00:21:13,280 --> 00:21:14,720
they will not know exactly how to do

585
00:21:14,720 --> 00:21:15,440
that

586
00:21:15,440 --> 00:21:18,400
uh a good deck with that we are in b

587
00:21:18,400 --> 00:21:19,840
side we know that the security

588
00:21:19,840 --> 00:21:21,280
biosecurity

589
00:21:21,280 --> 00:21:24,080
uh very rarely proves itself as an

590
00:21:24,080 --> 00:21:24,799
effective

591
00:21:24,799 --> 00:21:28,840
mitigations against practically

592
00:21:28,840 --> 00:21:32,000
anything so

593
00:21:32,000 --> 00:21:34,400
let me summarize uh what we got so far

594
00:21:34,400 --> 00:21:37,120
so data presenting a significant threat

595
00:21:37,120 --> 00:21:40,320
on learning mechanisms uh this threat is

596
00:21:40,320 --> 00:21:42,080
critical when you use data from

597
00:21:42,080 --> 00:21:44,000
untrusted sources

598
00:21:44,000 --> 00:21:47,520
another uh important um condition is

599
00:21:47,520 --> 00:21:48,320
that

600
00:21:48,320 --> 00:21:50,000
the the output of the model the

601
00:21:50,000 --> 00:21:51,919
prediction of the model is significant

602
00:21:51,919 --> 00:21:53,520
for someone and i hope for you that

603
00:21:53,520 --> 00:21:55,520
every model that you are working with

604
00:21:55,520 --> 00:21:58,000
has a um is making predictions that are

605
00:21:58,000 --> 00:21:59,760
significant for someone

606
00:21:59,760 --> 00:22:01,520
uh and there is no silver bullet

607
00:22:01,520 --> 00:22:04,320
mitigation there is a collection of uh

608
00:22:04,320 --> 00:22:07,919
uh of uh mitigations that uh can be used

609
00:22:07,919 --> 00:22:08,559
uh to

610
00:22:08,559 --> 00:22:12,080
throttle the attackers um uh

611
00:22:12,080 --> 00:22:14,720
but not necessarily to to stop them at

612
00:22:14,720 --> 00:22:15,440
once

613
00:22:15,440 --> 00:22:20,559
again and this threat is effective in

614
00:22:20,559 --> 00:22:23,919
any place where you have an adversary so

615
00:22:23,919 --> 00:22:27,039
every time you have travel sites or

616
00:22:27,039 --> 00:22:29,360
any site that uses rating definitely

617
00:22:29,360 --> 00:22:30,480
cyber security

618
00:22:30,480 --> 00:22:33,600
uh services um are subject because

619
00:22:33,600 --> 00:22:36,880
you have adversaries and the data uh

620
00:22:36,880 --> 00:22:37,919
next generation

621
00:22:37,919 --> 00:22:40,320
uh anti viruses they actually use data

622
00:22:40,320 --> 00:22:42,080
that not always they

623
00:22:42,080 --> 00:22:44,000
they know where it comes or not always

624
00:22:44,000 --> 00:22:46,240
they uh they can trust it

625
00:22:46,240 --> 00:22:49,280
so the threat is effective in many many

626
00:22:49,280 --> 00:22:51,600
cases

627
00:22:52,000 --> 00:22:54,480
next i will uh try to look at the data

628
00:22:54,480 --> 00:22:56,559
posing threat in the light of um

629
00:22:56,559 --> 00:22:59,440
when it comes to a web security uh what

630
00:22:59,440 --> 00:23:00,320
you see on the top

631
00:23:00,320 --> 00:23:04,159
is a typical web security setup

632
00:23:04,159 --> 00:23:07,600
there is a web application or api

633
00:23:07,600 --> 00:23:09,440
and there is a waft web application

634
00:23:09,440 --> 00:23:11,760
firewall that protects

635
00:23:11,760 --> 00:23:14,880
uh the the application from outsider

636
00:23:14,880 --> 00:23:15,600
threats

637
00:23:15,600 --> 00:23:19,360
aka the internet usually

638
00:23:19,360 --> 00:23:22,159
web application firewalls working by

639
00:23:22,159 --> 00:23:23,760
using a combination

640
00:23:23,760 --> 00:23:26,799
of two security approaches

641
00:23:26,799 --> 00:23:29,440
just a second

642
00:23:32,720 --> 00:23:36,240
uh there is the negative security model

643
00:23:36,240 --> 00:23:39,039
which assumes that everything is good

644
00:23:39,039 --> 00:23:40,799
all the traffic we see is good except

645
00:23:40,799 --> 00:23:41,600
for

646
00:23:41,600 --> 00:23:43,520
things that we know for sure that are

647
00:23:43,520 --> 00:23:46,320
bad usually when we have a matching

648
00:23:46,320 --> 00:23:50,159
pattern matching with some rule

649
00:23:50,159 --> 00:23:52,080
and the other model is a positive

650
00:23:52,080 --> 00:23:53,279
security model where

651
00:23:53,279 --> 00:23:55,760
um where the wealth assumes that

652
00:23:55,760 --> 00:23:56,880
everything is bad

653
00:23:56,880 --> 00:24:00,000
for what you knows for sure is good

654
00:24:00,000 --> 00:24:02,880
usually based on looking at the traffic

655
00:24:02,880 --> 00:24:04,320
for some time and

656
00:24:04,320 --> 00:24:06,640
learning what are building a baseline

657
00:24:06,640 --> 00:24:07,679
profile

658
00:24:07,679 --> 00:24:10,000
for how this traffic uh looks like and

659
00:24:10,000 --> 00:24:11,360
uh block

660
00:24:11,360 --> 00:24:13,760
or alert on a deviation from this

661
00:24:13,760 --> 00:24:14,880
profile

662
00:24:14,880 --> 00:24:18,080
this is practically what we call a

663
00:24:18,080 --> 00:24:20,400
anomaly detection and the difference

664
00:24:20,400 --> 00:24:21,679
each of these models have

665
00:24:21,679 --> 00:24:24,320
a pros and cons um the negative security

666
00:24:24,320 --> 00:24:25,440
model is uh

667
00:24:25,440 --> 00:24:27,279
is more accurate it's false positives

668
00:24:27,279 --> 00:24:29,840
but it requires ongoing update because

669
00:24:29,840 --> 00:24:31,120
it is not effective against

670
00:24:31,120 --> 00:24:34,320
zero days uh but the main

671
00:24:34,320 --> 00:24:36,400
important thing for the sake of our

672
00:24:36,400 --> 00:24:37,679
discussion today

673
00:24:37,679 --> 00:24:40,960
is that uh when i'm when i'm saying that

674
00:24:40,960 --> 00:24:44,320
um uh the positive security model means

675
00:24:44,320 --> 00:24:45,039
that the what

676
00:24:45,039 --> 00:24:47,600
learns a baseline profile from traffic

677
00:24:47,600 --> 00:24:48,320
then you should

678
00:24:48,320 --> 00:24:49,760
now know that we have all the

679
00:24:49,760 --> 00:24:52,159
ingredients of a data poisoning

680
00:24:52,159 --> 00:24:56,320
threat being fulfilled being realized

681
00:24:56,320 --> 00:24:58,080
because data comes from outside and of

682
00:24:58,080 --> 00:25:00,000
course attackers want

683
00:25:00,000 --> 00:25:03,440
uh to make the wife make mistakes so

684
00:25:03,440 --> 00:25:07,120
no doubt that this is a situation is a

685
00:25:07,120 --> 00:25:07,840
is a good

686
00:25:07,840 --> 00:25:11,039
place for data poisoning

687
00:25:11,039 --> 00:25:13,200
uh so again for the sake of this

688
00:25:13,200 --> 00:25:15,200
discussion uh let's assume that the

689
00:25:15,200 --> 00:25:17,919
the web or api traffic profile looks

690
00:25:17,919 --> 00:25:19,279
essentially like that

691
00:25:19,279 --> 00:25:22,000
and you have objects which are the red

692
00:25:22,000 --> 00:25:23,120
items here you can

693
00:25:23,120 --> 00:25:25,600
think of them as parameters uh query

694
00:25:25,600 --> 00:25:27,440
string parameters body parameters you

695
00:25:27,440 --> 00:25:28,880
can also think of

696
00:25:28,880 --> 00:25:32,400
of a cookie as a sort of a parameter

697
00:25:32,400 --> 00:25:35,279
and each parameter each object is

698
00:25:35,279 --> 00:25:36,480
contained

699
00:25:36,480 --> 00:25:40,640
in uh in a container which can be a url

700
00:25:40,640 --> 00:25:45,200
uh url and method maybe a host and url

701
00:25:45,200 --> 00:25:47,120
or global parameter can be different

702
00:25:47,120 --> 00:25:49,120
combinations of a host url

703
00:25:49,120 --> 00:25:52,880
and method and each one of them

704
00:25:52,880 --> 00:25:56,080
has a traffic profile which

705
00:25:56,080 --> 00:25:59,679
is the representation of all the values

706
00:25:59,679 --> 00:26:04,240
that are permissible to go through this

707
00:26:04,240 --> 00:26:08,880
this object through this parameter

708
00:26:08,960 --> 00:26:11,679
and the features of this profile usually

709
00:26:11,679 --> 00:26:14,240
it makes sense to use features that

710
00:26:14,240 --> 00:26:17,840
have some web security meaning uh

711
00:26:17,840 --> 00:26:19,760
because they are somehow correlated to

712
00:26:19,760 --> 00:26:22,960
the way we understand the web attacks

713
00:26:22,960 --> 00:26:24,880
so it makes sense to learn the type of

714
00:26:24,880 --> 00:26:26,159
the parameter

715
00:26:26,159 --> 00:26:28,080
at the multiplicity whether it can come

716
00:26:28,080 --> 00:26:30,240
only once or multiple times within a

717
00:26:30,240 --> 00:26:31,840
single request

718
00:26:31,840 --> 00:26:35,039
optional or mandatory uh if it is a

719
00:26:35,039 --> 00:26:35,840
number

720
00:26:35,840 --> 00:26:38,720
then what are the typical sizes uh if it

721
00:26:38,720 --> 00:26:40,080
is a string then

722
00:26:40,080 --> 00:26:42,880
what is the length of uh uh the

723
00:26:42,880 --> 00:26:43,840
potential length

724
00:26:43,840 --> 00:26:47,679
uh range of this uh of the value

725
00:26:47,679 --> 00:26:50,240
uh and what are the uh the permissible

726
00:26:50,240 --> 00:26:52,559
characters for this uh parameter all of

727
00:26:52,559 --> 00:26:53,919
these are things that

728
00:26:53,919 --> 00:26:56,880
can be correlated with uh different web

729
00:26:56,880 --> 00:26:58,960
attacks and it makes sense to uh to

730
00:26:58,960 --> 00:27:02,559
learn them uh and in order to do

731
00:27:02,559 --> 00:27:06,640
uh uh the learning in a robust manner

732
00:27:06,640 --> 00:27:11,200
um again this is a typical way to

733
00:27:11,200 --> 00:27:14,320
achieve that so the first uh phase

734
00:27:14,320 --> 00:27:16,960
you can do uh cleaning which is the

735
00:27:16,960 --> 00:27:18,480
first mitigation

736
00:27:18,480 --> 00:27:20,080
to filter all the suspicious traffic

737
00:27:20,080 --> 00:27:21,919
that you can think of so

738
00:27:21,919 --> 00:27:25,520
if you have events uh requests that

739
00:27:25,520 --> 00:27:28,559
you were classified by some uh

740
00:27:28,559 --> 00:27:31,120
engine as suspicious or malicious then

741
00:27:31,120 --> 00:27:32,720
you can throw them away

742
00:27:32,720 --> 00:27:36,480
if you have uh requests from ips that

743
00:27:36,480 --> 00:27:38,799
you have some reason to think that they

744
00:27:38,799 --> 00:27:40,880
are suspicious or malicious then

745
00:27:40,880 --> 00:27:44,640
again you can uh everything is good

746
00:27:44,640 --> 00:27:49,360
okay um

747
00:27:49,360 --> 00:27:51,120
if you know that these ips generate a

748
00:27:51,120 --> 00:27:52,720
malicious traffic and again

749
00:27:52,720 --> 00:27:55,760
uh you can also when you have an attack

750
00:27:55,760 --> 00:27:57,840
on a site you can take all the batch off

751
00:27:57,840 --> 00:27:58,240
that

752
00:27:58,240 --> 00:28:00,000
request during this attack and throw

753
00:28:00,000 --> 00:28:01,440
them away because you

754
00:28:01,440 --> 00:28:03,679
you can assume that some of the attack

755
00:28:03,679 --> 00:28:05,039
was missed and

756
00:28:05,039 --> 00:28:08,320
uh and you can in some cases it makes

757
00:28:08,320 --> 00:28:09,919
sense all to throw away data

758
00:28:09,919 --> 00:28:13,120
coming from uh from bots uh

759
00:28:13,120 --> 00:28:16,720
then uh the second uh filtering is to

760
00:28:16,720 --> 00:28:19,200
try to do this um

761
00:28:19,200 --> 00:28:22,480
um this uh uh

762
00:28:22,480 --> 00:28:25,760
threshold learning to learn things only

763
00:28:25,760 --> 00:28:26,240
if you

764
00:28:26,240 --> 00:28:29,279
see them coming not from a single

765
00:28:29,279 --> 00:28:32,960
entity but maybe from a collection of

766
00:28:32,960 --> 00:28:36,240
different ip addresses or

767
00:28:36,240 --> 00:28:38,559
other network domains different user

768
00:28:38,559 --> 00:28:39,840
agents different

769
00:28:39,840 --> 00:28:42,720
geolocation countries different

770
00:28:42,720 --> 00:28:44,080
identified clients

771
00:28:44,080 --> 00:28:46,720
uh and even if you want to prevent

772
00:28:46,720 --> 00:28:48,960
yourself to avoid learning from

773
00:28:48,960 --> 00:28:51,120
from a burst of requests coming at the

774
00:28:51,120 --> 00:28:52,000
same time

775
00:28:52,000 --> 00:28:55,600
then you can uh can require that

776
00:28:55,600 --> 00:28:57,600
you learn things only when you see them

777
00:28:57,600 --> 00:28:59,679
along several days or at least several

778
00:28:59,679 --> 00:29:01,440
hours and again you can

779
00:29:01,440 --> 00:29:03,279
play with the different uh attributes

780
00:29:03,279 --> 00:29:05,440
and put a threshold that

781
00:29:05,440 --> 00:29:09,039
makes sense for your application on

782
00:29:09,039 --> 00:29:12,640
any of these uh now

783
00:29:12,640 --> 00:29:15,200
however this threshold learning is it's

784
00:29:15,200 --> 00:29:17,039
very easy to uh to carry out in

785
00:29:17,039 --> 00:29:20,080
in batch processing uh however

786
00:29:20,080 --> 00:29:21,520
if you want to do base processing you

787
00:29:21,520 --> 00:29:23,440
you need now to to buffer all the data

788
00:29:23,440 --> 00:29:25,279
that you've seen along the

789
00:29:25,279 --> 00:29:27,440
uh the learning period it can be a day

790
00:29:27,440 --> 00:29:29,039
it can be a week it could be months

791
00:29:29,039 --> 00:29:30,240
depending on

792
00:29:30,240 --> 00:29:32,000
what exactly you know how you set the

793
00:29:32,000 --> 00:29:33,840
learning period which in many cases will

794
00:29:33,840 --> 00:29:34,640
be

795
00:29:34,640 --> 00:29:37,200
impractical or at least very expensive

796
00:29:37,200 --> 00:29:38,720
and there is a need to

797
00:29:38,720 --> 00:29:41,039
to find a way to do this in a more uh

798
00:29:41,039 --> 00:29:42,080
memory efficient

799
00:29:42,080 --> 00:29:45,279
uh way uh and and at least in imperva we

800
00:29:45,279 --> 00:29:46,880
try to do everything we can

801
00:29:46,880 --> 00:29:48,480
in a streaming fact in a streaming

802
00:29:48,480 --> 00:29:50,559
friendly fashion uh

803
00:29:50,559 --> 00:29:53,200
in a way that uh we don't have to keep

804
00:29:53,200 --> 00:29:54,240
to to keep

805
00:29:54,240 --> 00:29:56,320
huge buffers that keep all uh all the

806
00:29:56,320 --> 00:29:57,760
data that we can do

807
00:29:57,760 --> 00:30:00,320
uh uh use the more efficient uh

808
00:30:00,320 --> 00:30:01,520
structures

809
00:30:01,520 --> 00:30:04,559
uh in order in order to uh present the

810
00:30:04,559 --> 00:30:05,679
string friendly

811
00:30:05,679 --> 00:30:09,120
uh solution that we developed for um

812
00:30:09,120 --> 00:30:11,600
for a robust learning i will take you to

813
00:30:11,600 --> 00:30:13,120
a completely different

814
00:30:13,120 --> 00:30:16,799
world uh this this is by the way a

815
00:30:16,799 --> 00:30:18,080
completely uh

816
00:30:18,080 --> 00:30:21,279
fictitious uh story uh this is not a

817
00:30:21,279 --> 00:30:22,960
it's not a really research that we

818
00:30:22,960 --> 00:30:24,880
carried out important to say that

819
00:30:24,880 --> 00:30:27,679
in fact i don't have a dog i have a cat

820
00:30:27,679 --> 00:30:28,240
so

821
00:30:28,240 --> 00:30:31,600
i have no uh uh i'm not biased towards

822
00:30:31,600 --> 00:30:34,840
any uh dog food that ran so we want to

823
00:30:34,840 --> 00:30:36,240
uh

824
00:30:36,240 --> 00:30:38,320
to do some kind of a competition between

825
00:30:38,320 --> 00:30:39,360
two uh dog food

826
00:30:39,360 --> 00:30:42,399
brands pedigree and theo so we do

827
00:30:42,399 --> 00:30:44,640
sort of uh of a poll and between

828
00:30:44,640 --> 00:30:46,080
different users

829
00:30:46,080 --> 00:30:51,120
and uh we got uh you seen the uh

830
00:30:51,120 --> 00:30:52,880
yellow text you can see the results and

831
00:30:52,880 --> 00:30:54,159
we got the 12

832
00:30:54,159 --> 00:30:57,200
likes for a theo brand and six likes

833
00:30:57,200 --> 00:31:00,320
for a pedigree brand uh however we are

834
00:31:00,320 --> 00:31:02,320
afraid of uh data poisoning uh

835
00:31:02,320 --> 00:31:04,960
we don't want to give too much uh power

836
00:31:04,960 --> 00:31:08,000
to a single brand or a single uh

837
00:31:08,000 --> 00:31:10,640
uh city uh and then we set the threshold

838
00:31:10,640 --> 00:31:11,600
of at least

839
00:31:11,600 --> 00:31:14,080
three cities and at least their three uh

840
00:31:14,080 --> 00:31:16,399
dog breeds in order to

841
00:31:16,399 --> 00:31:18,960
to accept the fact that the theo is a

842
00:31:18,960 --> 00:31:19,760
tasteful

843
00:31:19,760 --> 00:31:22,880
um is a tasty uh food

844
00:31:22,880 --> 00:31:24,960
uh and when we do this threshold

845
00:31:24,960 --> 00:31:27,120
learning then only pedigree which has

846
00:31:27,120 --> 00:31:28,399
the six slides uh

847
00:31:28,399 --> 00:31:31,200
it passes and the reason for that as you

848
00:31:31,200 --> 00:31:32,640
can see here

849
00:31:32,640 --> 00:31:36,080
that uh for tio there

850
00:31:36,080 --> 00:31:38,640
there is no sun bernard that they gave

851
00:31:38,640 --> 00:31:40,320
him a positive

852
00:31:40,320 --> 00:31:42,720
uh tastiness indication only pomeranian

853
00:31:42,720 --> 00:31:44,320
and german shepherd

854
00:31:44,320 --> 00:31:48,240
uh however for uh pedigree

855
00:31:48,240 --> 00:31:51,600
uh we have a quite balanced uh voting we

856
00:31:51,600 --> 00:31:53,039
have uh

857
00:31:53,039 --> 00:31:55,679
two votes from three cities and uh three

858
00:31:55,679 --> 00:31:56,159
uh

859
00:31:56,159 --> 00:31:58,880
uh dog breeds and then we're good and

860
00:31:58,880 --> 00:32:00,000
the reason for this

861
00:32:00,000 --> 00:32:02,880
uh for this sort of anomaly uh for this

862
00:32:02,880 --> 00:32:04,080
phenomenon

863
00:32:04,080 --> 00:32:07,120
is that uh the

864
00:32:07,120 --> 00:32:08,880
the data that we have you can see that

865
00:32:08,880 --> 00:32:10,880
all the uh new yorkers that have

866
00:32:10,880 --> 00:32:11,840
pomeranian

867
00:32:11,840 --> 00:32:14,880
they really like theo and there are

868
00:32:14,880 --> 00:32:17,600
uh quite many of these because our data

869
00:32:17,600 --> 00:32:18,399
is biased

870
00:32:18,399 --> 00:32:20,720
towards uh new yorkers that have

871
00:32:20,720 --> 00:32:22,320
pomeranians

872
00:32:22,320 --> 00:32:23,840
and this is exactly the thing that we

873
00:32:23,840 --> 00:32:25,919
wanted to avoid we didn't want to

874
00:32:25,919 --> 00:32:29,120
to let this bias in our data

875
00:32:29,120 --> 00:32:32,159
to impact our decision so

876
00:32:32,159 --> 00:32:35,919
how do we do the learning on this data

877
00:32:35,919 --> 00:32:39,600
so uh first we have a pedigree is an

878
00:32:39,600 --> 00:32:42,880
object this object there is a fact

879
00:32:42,880 --> 00:32:44,960
that we want to learn whether pedigree

880
00:32:44,960 --> 00:32:46,320
is tasty or not

881
00:32:46,320 --> 00:32:48,480
and we define the threshold learning

882
00:32:48,480 --> 00:32:50,480
which is on two attributes

883
00:32:50,480 --> 00:32:52,559
city and breed for each one we put a

884
00:32:52,559 --> 00:32:54,159
threshold of three

885
00:32:54,159 --> 00:32:56,880
and for each one of these we actually

886
00:32:56,880 --> 00:32:57,600
maintain

887
00:32:57,600 --> 00:33:00,399
we keep a set of all the cities from

888
00:33:00,399 --> 00:33:01,039
which

889
00:33:01,039 --> 00:33:03,360
we've seen a tasting authentication for

890
00:33:03,360 --> 00:33:04,799
a pedigree

891
00:33:04,799 --> 00:33:07,600
and we have the same structure for theo

892
00:33:07,600 --> 00:33:08,240
and the same

893
00:33:08,240 --> 00:33:11,440
for other facts like whether this dog

894
00:33:11,440 --> 00:33:12,240
food brand is

895
00:33:12,240 --> 00:33:15,039
nutritious and at the beginning we see

896
00:33:15,039 --> 00:33:17,360
no data so we are convinced at

897
00:33:17,360 --> 00:33:20,000
nothing we don't believe at anything we

898
00:33:20,000 --> 00:33:23,120
wait for data to start being convinced

899
00:33:23,120 --> 00:33:25,760
data coming in and now looking at the

900
00:33:25,760 --> 00:33:26,399
data

901
00:33:26,399 --> 00:33:30,159
we see that uh pedigree tastiness now

902
00:33:30,159 --> 00:33:30,559
have

903
00:33:30,559 --> 00:33:33,760
um tastiness indications from three

904
00:33:33,760 --> 00:33:34,480
cities and

905
00:33:34,480 --> 00:33:36,640
from three dog breeds and now we know

906
00:33:36,640 --> 00:33:39,039
that we're good uh we passed the city

907
00:33:39,039 --> 00:33:39,919
threshold

908
00:33:39,919 --> 00:33:41,440
we passed a brief threshold and

909
00:33:41,440 --> 00:33:43,360
therefore we now accept

910
00:33:43,360 --> 00:33:46,799
that pedigree is tasty on the other hand

911
00:33:46,799 --> 00:33:50,000
for teal we have only two cities and

912
00:33:50,000 --> 00:33:51,120
only two

913
00:33:51,120 --> 00:33:52,880
dark breeds and therefore it didn't pass

914
00:33:52,880 --> 00:33:54,159
any of the tests and

915
00:33:54,159 --> 00:33:58,240
we don't believe that the ethio is tasty

916
00:33:58,240 --> 00:34:01,519
so uh what we learned in this

917
00:34:01,519 --> 00:34:04,320
uh thing in this example that we can

918
00:34:04,320 --> 00:34:06,080
learn a boolean facts

919
00:34:06,080 --> 00:34:08,960
whether an object x in this case this is

920
00:34:08,960 --> 00:34:10,159
dog food brand

921
00:34:10,159 --> 00:34:13,440
it has a property why which is whether

922
00:34:13,440 --> 00:34:15,199
or not it is tasty this is a boolean

923
00:34:15,199 --> 00:34:16,239
fact

924
00:34:16,239 --> 00:34:19,199
uh and you probably understood that the

925
00:34:19,199 --> 00:34:20,079
memory consumption

926
00:34:20,079 --> 00:34:22,239
here is proportional to several several

927
00:34:22,239 --> 00:34:23,280
parameters

928
00:34:23,280 --> 00:34:24,879
and to the number of the objects of

929
00:34:24,879 --> 00:34:26,480
course to the properties

930
00:34:26,480 --> 00:34:28,320
or the facts that we want to learn about

931
00:34:28,320 --> 00:34:29,599
every object

932
00:34:29,599 --> 00:34:32,239
and to the number of attributes and also

933
00:34:32,239 --> 00:34:34,719
for the thresholds because we need to uh

934
00:34:34,719 --> 00:34:36,480
to keep all the cities from which we've

935
00:34:36,480 --> 00:34:38,000
seen uh

936
00:34:38,000 --> 00:34:41,040
this testing authentications until until

937
00:34:41,040 --> 00:34:42,320
we pass the test and then we can throw

938
00:34:42,320 --> 00:34:43,119
them away but

939
00:34:43,119 --> 00:34:46,560
uh we can until we pass the test we need

940
00:34:46,560 --> 00:34:47,679
to keep them

941
00:34:47,679 --> 00:34:49,359
but the thing that we wanted to achieve

942
00:34:49,359 --> 00:34:52,239
is that it is independent of the size

943
00:34:52,239 --> 00:34:55,520
of the uh of the data itself uh

944
00:34:55,520 --> 00:34:57,520
so it makes this algorithm this

945
00:34:57,520 --> 00:34:58,640
implementation

946
00:34:58,640 --> 00:35:01,119
of threshold learning uh memory

947
00:35:01,119 --> 00:35:02,720
efficient and can be used in the

948
00:35:02,720 --> 00:35:07,839
streaming uh situations and environments

949
00:35:07,920 --> 00:35:10,560
uh so we have this model of boolean

950
00:35:10,560 --> 00:35:11,680
facts

951
00:35:11,680 --> 00:35:14,079
how this model can be used in when we

952
00:35:14,079 --> 00:35:16,000
want to

953
00:35:16,000 --> 00:35:19,359
to build the web's uh profile or api

954
00:35:19,359 --> 00:35:20,880
profile and to uh

955
00:35:20,880 --> 00:35:23,599
and to enforce it later so actually it

956
00:35:23,599 --> 00:35:24,400
is very

957
00:35:24,400 --> 00:35:29,359
straightforward when we see a data point

958
00:35:29,359 --> 00:35:33,520
a request then we can extract

959
00:35:33,520 --> 00:35:37,040
for a given fact whether fact x was seen

960
00:35:37,040 --> 00:35:39,839
within this uh request we collect all

961
00:35:39,839 --> 00:35:40,320
these

962
00:35:40,320 --> 00:35:44,320
fact accessing and then we try to learn

963
00:35:44,320 --> 00:35:47,839
uh whether uh this fact x

964
00:35:47,839 --> 00:35:50,560
passes all the threshold tests that we

965
00:35:50,560 --> 00:35:51,680
that we have

966
00:35:51,680 --> 00:35:54,160
and if it passes all the thresholds then

967
00:35:54,160 --> 00:35:57,119
uh we can define it as allowed

968
00:35:57,119 --> 00:36:00,560
and it can be now part of the profile

969
00:36:00,560 --> 00:36:03,680
if it is not allowed meaning that at

970
00:36:03,680 --> 00:36:04,079
least

971
00:36:04,079 --> 00:36:06,720
there was one threshold it hadn't passed

972
00:36:06,720 --> 00:36:07,520
then uh

973
00:36:07,520 --> 00:36:09,359
we have a different flag within the

974
00:36:09,359 --> 00:36:11,760
profile which is fact x

975
00:36:11,760 --> 00:36:15,119
prohibited uh so

976
00:36:15,119 --> 00:36:17,920
think of uh of a web profile as a

977
00:36:17,920 --> 00:36:18,960
collection of

978
00:36:18,960 --> 00:36:22,000
fact x allowed in fact x prohibited for

979
00:36:22,000 --> 00:36:22,480
different

980
00:36:22,480 --> 00:36:26,000
uh facts uh during the inference we

981
00:36:26,000 --> 00:36:29,040
when when you see and you request

982
00:36:29,040 --> 00:36:32,079
you take uh you extract all the fact x

983
00:36:32,079 --> 00:36:32,720
seen

984
00:36:32,720 --> 00:36:36,160
from this request and and now you do you

985
00:36:36,160 --> 00:36:36,800
enforce

986
00:36:36,800 --> 00:36:40,160
by looking at fact x there is in this

987
00:36:40,160 --> 00:36:40,960
request

988
00:36:40,960 --> 00:36:43,440
that is corresponding to fact x

989
00:36:43,440 --> 00:36:44,480
prohibited

990
00:36:44,480 --> 00:36:46,560
and when you have a match then you have

991
00:36:46,560 --> 00:36:48,240
a contradiction to the profile

992
00:36:48,240 --> 00:36:51,520
and you can now declare a violation uh

993
00:36:51,520 --> 00:36:53,200
so this is how the enforcement can work

994
00:36:53,200 --> 00:36:55,280
and it is pretty straightforward

995
00:36:55,280 --> 00:36:58,320
so the boolean facts approach uh works

996
00:36:58,320 --> 00:36:59,119
well with

997
00:36:59,119 --> 00:37:03,599
uh with the web or api profiles

998
00:37:03,599 --> 00:37:08,160
uh but uh is this enough meaning

999
00:37:08,160 --> 00:37:10,880
we can do boolean facts but what can you

1000
00:37:10,880 --> 00:37:12,880
express with boolean facts

1001
00:37:12,880 --> 00:37:15,680
so let's start with the object and

1002
00:37:15,680 --> 00:37:16,560
containers

1003
00:37:16,560 --> 00:37:19,200
we talked about url hosts and parameters

1004
00:37:19,200 --> 00:37:21,280
cookies

1005
00:37:21,280 --> 00:37:24,720
so in fact these are uh goes along

1006
00:37:24,720 --> 00:37:25,440
pretty

1007
00:37:25,440 --> 00:37:28,560
easily with boolean facts because um if

1008
00:37:28,560 --> 00:37:30,240
you want to learn that the

1009
00:37:30,240 --> 00:37:33,280
particular query string parameter x

1010
00:37:33,280 --> 00:37:36,400
uh is uh belongs to urly

1011
00:37:36,400 --> 00:37:39,839
with uh method get or post or or

1012
00:37:39,839 --> 00:37:42,960
or that uh then the nature of this piece

1013
00:37:42,960 --> 00:37:45,280
of information is boolean

1014
00:37:45,280 --> 00:37:47,760
uh so this is pretty uh straightforward

1015
00:37:47,760 --> 00:37:48,960
and it is the same

1016
00:37:48,960 --> 00:37:51,119
if uh which urls you have and which

1017
00:37:51,119 --> 00:37:53,280
cookies belong to url and which methods

1018
00:37:53,280 --> 00:37:54,320
are available for

1019
00:37:54,320 --> 00:37:57,520
a particular url it it goes

1020
00:37:57,520 --> 00:38:00,800
fairly easily uh however

1021
00:38:00,800 --> 00:38:02,480
you want to answer also questions like

1022
00:38:02,480 --> 00:38:04,000
what about things like

1023
00:38:04,000 --> 00:38:07,520
data types ranges character sets etc

1024
00:38:07,520 --> 00:38:11,040
uh so if we look now on

1025
00:38:11,040 --> 00:38:15,119
the type of a parameter then you you

1026
00:38:15,119 --> 00:38:18,960
need to do sort of um in in data science

1027
00:38:18,960 --> 00:38:20,640
it is called one hot encoding

1028
00:38:20,640 --> 00:38:23,599
and you divide uh for each of the uh of

1029
00:38:23,599 --> 00:38:25,599
the categories of the parameter for uh

1030
00:38:25,599 --> 00:38:26,720
parameter types

1031
00:38:26,720 --> 00:38:29,839
and numeric string a none if it is

1032
00:38:29,839 --> 00:38:32,800
representing a non-existent value or

1033
00:38:32,800 --> 00:38:34,000
bullion

1034
00:38:34,000 --> 00:38:37,280
so you have an num type allowed flag

1035
00:38:37,280 --> 00:38:39,760
and a non-num type allowed flag they are

1036
00:38:39,760 --> 00:38:40,400
different

1037
00:38:40,400 --> 00:38:43,280
um and you have also corresponding uh

1038
00:38:43,280 --> 00:38:44,240
the actually the

1039
00:38:44,240 --> 00:38:47,359
the opposite one and so i either have a

1040
00:38:47,359 --> 00:38:49,200
num type allows for this parameter in

1041
00:38:49,200 --> 00:38:50,400
the profile or

1042
00:38:50,400 --> 00:38:53,760
a num type prohibited in the profile

1043
00:38:53,760 --> 00:38:58,079
uh and you uh you have one from each uh

1044
00:38:58,079 --> 00:39:00,960
from each of these pairs so how you use

1045
00:39:00,960 --> 00:39:02,320
them

1046
00:39:02,320 --> 00:39:04,079
and suppose you want to have in the

1047
00:39:04,079 --> 00:39:06,560
profile to express the facts a

1048
00:39:06,560 --> 00:39:08,800
particular parameter is a string

1049
00:39:08,800 --> 00:39:12,320
and then you learn that a string type is

1050
00:39:12,320 --> 00:39:14,880
allowed for values for this profile

1051
00:39:14,880 --> 00:39:17,760
uh but you know you don't learn uh you

1052
00:39:17,760 --> 00:39:18,880
fail to learn that

1053
00:39:18,880 --> 00:39:21,440
num numeric type is allowed and

1054
00:39:21,440 --> 00:39:23,280
therefore you have that numeric type is

1055
00:39:23,280 --> 00:39:24,400
prohibited

1056
00:39:24,400 --> 00:39:27,440
and if you only see strings then you you

1057
00:39:27,440 --> 00:39:28,000
cannot

1058
00:39:28,000 --> 00:39:31,440
learn that non-str values are allowed

1059
00:39:31,440 --> 00:39:33,680
so you will learn that non-str types are

1060
00:39:33,680 --> 00:39:34,800
prohibited

1061
00:39:34,800 --> 00:39:38,240
and then when we see x equal 23

1062
00:39:38,240 --> 00:39:40,320
then it is prohibited and we have a

1063
00:39:40,320 --> 00:39:41,359
violation

1064
00:39:41,359 --> 00:39:43,520
if you have uh if the type is a mail

1065
00:39:43,520 --> 00:39:45,440
address and you have um

1066
00:39:45,440 --> 00:39:47,119
a regular expression that represents

1067
00:39:47,119 --> 00:39:48,560
mail address then again

1068
00:39:48,560 --> 00:39:50,240
i i believe that from the first example

1069
00:39:50,240 --> 00:39:52,640
you understand that the more important

1070
00:39:52,640 --> 00:39:55,839
uh flags are not the green ones but the

1071
00:39:55,839 --> 00:39:56,800
red ones

1072
00:39:56,800 --> 00:39:58,720
so you will if you only see email

1073
00:39:58,720 --> 00:40:01,599
addresses then

1074
00:40:01,599 --> 00:40:03,760
you have in the profile a non-male

1075
00:40:03,760 --> 00:40:04,880
regular expression

1076
00:40:04,880 --> 00:40:08,000
prohibited even if you've seen one or

1077
00:40:08,000 --> 00:40:08,880
two times

1078
00:40:08,880 --> 00:40:10,480
things that are not compatible with the

1079
00:40:10,480 --> 00:40:12,400
regular expression they probably didn't

1080
00:40:12,400 --> 00:40:14,079
pass the thresholds and

1081
00:40:14,079 --> 00:40:16,240
and then when you see now abc for

1082
00:40:16,240 --> 00:40:18,480
example in this value of this parameter

1083
00:40:18,480 --> 00:40:21,119
which have non-male regular expression

1084
00:40:21,119 --> 00:40:22,400
then it contradicts

1085
00:40:22,400 --> 00:40:26,000
uh this non-male regular expression

1086
00:40:26,000 --> 00:40:27,200
prohibited

1087
00:40:27,200 --> 00:40:30,800
flag and again you have a violation

1088
00:40:30,800 --> 00:40:33,119
whether mandatory or optional the

1089
00:40:33,119 --> 00:40:35,200
parameter is mandatory or optional

1090
00:40:35,200 --> 00:40:37,359
so it can be addressed with a missing

1091
00:40:37,359 --> 00:40:39,040
prohibited or missing

1092
00:40:39,040 --> 00:40:42,880
allowed flags when you want to

1093
00:40:42,880 --> 00:40:44,160
[Music]

1094
00:40:44,160 --> 00:40:47,839
express the fact that a parameter can or

1095
00:40:47,839 --> 00:40:48,800
cannot have

1096
00:40:48,800 --> 00:40:51,599
a no value then do the same with the

1097
00:40:51,599 --> 00:40:53,359
non-type allowed or

1098
00:40:53,359 --> 00:40:56,560
not and non-non-type allowed allowed or

1099
00:40:56,560 --> 00:40:57,760
prohibited

1100
00:40:57,760 --> 00:40:59,599
when you want to express the fact that

1101
00:40:59,599 --> 00:41:02,079
multiplicity is allowed for a parameter

1102
00:41:02,079 --> 00:41:05,440
then again you can do it in in the same

1103
00:41:05,440 --> 00:41:06,640
way you use

1104
00:41:06,640 --> 00:41:09,040
multiple occurrences allowed or

1105
00:41:09,040 --> 00:41:11,200
prohibited

1106
00:41:11,200 --> 00:41:14,079
when you want to handle a character set

1107
00:41:14,079 --> 00:41:14,800
then again

1108
00:41:14,800 --> 00:41:16,160
you can build flags that are

1109
00:41:16,160 --> 00:41:18,160
corresponding with a set with character

1110
00:41:18,160 --> 00:41:20,720
sets like a base s64

1111
00:41:20,720 --> 00:41:22,960
or for particular characters for example

1112
00:41:22,960 --> 00:41:24,160
if you uh

1113
00:41:24,160 --> 00:41:26,640
you want to say that um to express the

1114
00:41:26,640 --> 00:41:27,359
fact that

1115
00:41:27,359 --> 00:41:29,520
alpha numeric is okay and the colon and

1116
00:41:29,520 --> 00:41:31,760
semicolon are okay but any other special

1117
00:41:31,760 --> 00:41:34,000
character is forbidden uh

1118
00:41:34,000 --> 00:41:36,560
then you will have str type allow the

1119
00:41:36,560 --> 00:41:39,040
alphanumeric type allowed

1120
00:41:39,040 --> 00:41:42,000
but special characters prohibited for

1121
00:41:42,000 --> 00:41:44,160
the different special characters

1122
00:41:44,160 --> 00:41:46,880
except for the ones that uh that we've

1123
00:41:46,880 --> 00:41:47,680
seen

1124
00:41:47,680 --> 00:41:50,880
so um when you want to learn

1125
00:41:50,880 --> 00:41:54,400
uh numeric features and then you need to

1126
00:41:54,400 --> 00:41:54,800
do

1127
00:41:54,800 --> 00:41:57,440
uh more sort of a trick to the

1128
00:41:57,440 --> 00:41:58,720
discretization of

1129
00:41:58,720 --> 00:42:02,000
the of the range uh into uh several

1130
00:42:02,000 --> 00:42:05,119
uh ranges so uh if you're uh

1131
00:42:05,119 --> 00:42:06,880
in the learning you you want to learn

1132
00:42:06,880 --> 00:42:08,720
that to include in the profile the fact

1133
00:42:08,720 --> 00:42:09,119
that

1134
00:42:09,119 --> 00:42:11,280
the parameter length is between 34 and

1135
00:42:11,280 --> 00:42:13,520
it's 345 characters

1136
00:42:13,520 --> 00:42:15,920
then you have to define in advance

1137
00:42:15,920 --> 00:42:18,960
threshold like 50 and 500 and

1138
00:42:18,960 --> 00:42:22,000
to learn uh boolean flags boolean facts

1139
00:42:22,000 --> 00:42:22,720
like

1140
00:42:22,720 --> 00:42:24,960
uh whether the parameter value can be

1141
00:42:24,960 --> 00:42:25,839
greater than

1142
00:42:25,839 --> 00:42:29,119
500 or greater than 50 and greater than

1143
00:42:29,119 --> 00:42:30,240
5000

1144
00:42:30,240 --> 00:42:32,960
or lower than 10 and uh that can help

1145
00:42:32,960 --> 00:42:34,079
you to uh to

1146
00:42:34,079 --> 00:42:37,760
express this thing uh but

1147
00:42:37,760 --> 00:42:39,760
i i i don't get deep into the details so

1148
00:42:39,760 --> 00:42:40,960
however it is done but i want to

1149
00:42:40,960 --> 00:42:42,079
convince you that

1150
00:42:42,079 --> 00:42:45,920
it can be done so we talked about uh

1151
00:42:45,920 --> 00:42:49,119
uh about a profile uh

1152
00:42:49,119 --> 00:42:51,520
about the features of a profile let me

1153
00:42:51,520 --> 00:42:52,960
uh try to explain

1154
00:42:52,960 --> 00:42:55,040
uh how the boolean framework the boolean

1155
00:42:55,040 --> 00:42:56,640
effects framework can be used for more

1156
00:42:56,640 --> 00:42:59,200
complicated models like decision trees

1157
00:42:59,200 --> 00:43:01,680
on the right side you see a very simple

1158
00:43:01,680 --> 00:43:04,400
decision tree and this is one of the

1159
00:43:04,400 --> 00:43:06,079
one of the machine learning models that

1160
00:43:06,079 --> 00:43:07,760
are more popular

1161
00:43:07,760 --> 00:43:10,640
and you have their two features whether

1162
00:43:10,640 --> 00:43:12,560
a particular animal breathes air

1163
00:43:12,560 --> 00:43:15,520
and whether an animal lay eggs and each

1164
00:43:15,520 --> 00:43:16,880
of them is the bullion

1165
00:43:16,880 --> 00:43:18,319
and when you see an animal then the

1166
00:43:18,319 --> 00:43:20,319
decision tree says that you go yes no

1167
00:43:20,319 --> 00:43:21,599
breathe air

1168
00:43:21,599 --> 00:43:23,839
lay x and you uh in the leaves you have

1169
00:43:23,839 --> 00:43:26,079
the the classes the different decisions

1170
00:43:26,079 --> 00:43:28,319
and the potential decision and this is a

1171
00:43:28,319 --> 00:43:29,119
very simple

1172
00:43:29,119 --> 00:43:33,440
uh model uh and usually it is used in uh

1173
00:43:33,440 --> 00:43:34,880
something it's called an ensemble when

1174
00:43:34,880 --> 00:43:36,640
you have a collection of models

1175
00:43:36,640 --> 00:43:40,640
uh that are uh work together one

1176
00:43:40,640 --> 00:43:43,760
type of ensemble is ensemble is begging

1177
00:43:43,760 --> 00:43:46,319
when you build many models independently

1178
00:43:46,319 --> 00:43:46,960
and then

1179
00:43:46,960 --> 00:43:48,480
you do some kind of a voting or

1180
00:43:48,480 --> 00:43:50,319
averaging of the the prediction of the

1181
00:43:50,319 --> 00:43:51,200
models

1182
00:43:51,200 --> 00:43:54,240
another approach is uh called boosting

1183
00:43:54,240 --> 00:43:56,400
when you actually you you don't build

1184
00:43:56,400 --> 00:43:58,400
the different models independently but

1185
00:43:58,400 --> 00:43:59,280
you

1186
00:43:59,280 --> 00:44:01,680
uh you build the models in a way that

1187
00:44:01,680 --> 00:44:02,480
corrects

1188
00:44:02,480 --> 00:44:05,839
the uh the mistakes of

1189
00:44:05,839 --> 00:44:08,400
the previous of the previous model and

1190
00:44:08,400 --> 00:44:08,960
then you

1191
00:44:08,960 --> 00:44:10,240
you have a collection of models that

1192
00:44:10,240 --> 00:44:12,160
together provide a a

1193
00:44:12,160 --> 00:44:14,720
good result so how can we use the

1194
00:44:14,720 --> 00:44:16,319
boolean framework in this

1195
00:44:16,319 --> 00:44:19,119
situation uh let me first explain uh

1196
00:44:19,119 --> 00:44:20,839
what you see here in this decision

1197
00:44:20,839 --> 00:44:22,000
stream

1198
00:44:22,000 --> 00:44:25,440
uh so if we look at uh

1199
00:44:25,440 --> 00:44:29,200
at this node at battle with a smaller

1200
00:44:29,200 --> 00:44:31,760
equal 1.65

1201
00:44:31,760 --> 00:44:35,280
then 48 samples from the training data

1202
00:44:35,280 --> 00:44:39,520
reached this uh this node uh

1203
00:44:39,520 --> 00:44:43,040
47 of them had the green class

1204
00:44:43,040 --> 00:44:46,560
and one had the purple class uh

1205
00:44:46,560 --> 00:44:50,319
and the decision if we should spawn the

1206
00:44:50,319 --> 00:44:52,480
the one that has the uh the most

1207
00:44:52,480 --> 00:44:54,560
examples which is uh uh the the green

1208
00:44:54,560 --> 00:44:55,040
class

1209
00:44:55,040 --> 00:44:57,599
versicolor uh so for the for building

1210
00:44:57,599 --> 00:44:59,440
the tree uh the boolean framework cannot

1211
00:44:59,440 --> 00:45:00,560
cannot help you but

1212
00:45:00,560 --> 00:45:03,440
there are ways to build a trees in in a

1213
00:45:03,440 --> 00:45:04,240
streaming

1214
00:45:04,240 --> 00:45:07,280
a manner but

1215
00:45:07,280 --> 00:45:09,520
the the boolean framework can help you

1216
00:45:09,520 --> 00:45:11,280
to

1217
00:45:11,280 --> 00:45:13,119
do validation of the tree and the way to

1218
00:45:13,119 --> 00:45:15,839
do that is

1219
00:45:15,839 --> 00:45:18,880
you can add the sub leaves to each of

1220
00:45:18,880 --> 00:45:20,000
the leaves

1221
00:45:20,000 --> 00:45:23,520
uh you can also add a sublease to

1222
00:45:23,520 --> 00:45:27,040
to the notes and all these uh fab leaves

1223
00:45:27,040 --> 00:45:28,079
are actually

1224
00:45:28,079 --> 00:45:31,520
um if we have here in

1225
00:45:31,520 --> 00:45:34,880
in the most left

1226
00:45:34,880 --> 00:45:38,960
leaf we had only uh the green cloth

1227
00:45:38,960 --> 00:45:41,280
then we'll have a sub leaf for the green

1228
00:45:41,280 --> 00:45:43,359
class if we have a nodes that have

1229
00:45:43,359 --> 00:45:45,680
uh two classes it will have two sublimes

1230
00:45:45,680 --> 00:45:46,720
representing

1231
00:45:46,720 --> 00:45:50,480
uh both of them and now we go

1232
00:45:50,480 --> 00:45:52,400
and we use the threshold learning and

1233
00:45:52,400 --> 00:45:53,760
the boolean facts to

1234
00:45:53,760 --> 00:45:56,930
validate uh these sub leads

1235
00:45:56,930 --> 00:45:58,480
[Music]

1236
00:45:58,480 --> 00:46:01,599
so you can see here uh for example for a

1237
00:46:01,599 --> 00:46:05,040
decent note with the 47 and one uh

1238
00:46:05,040 --> 00:46:08,240
you have 47 data points uh

1239
00:46:08,240 --> 00:46:10,640
that were had the green class so

1240
00:46:10,640 --> 00:46:11,760
probably

1241
00:46:11,760 --> 00:46:13,440
let's assume that they passed all the

1242
00:46:13,440 --> 00:46:16,240
thresholds however you had only one

1243
00:46:16,240 --> 00:46:19,440
data point for uh for the purple class

1244
00:46:19,440 --> 00:46:19,760
so

1245
00:46:19,760 --> 00:46:22,079
probably didn't pass the threshold so

1246
00:46:22,079 --> 00:46:23,040
you learn

1247
00:46:23,040 --> 00:46:26,480
only nodes and branches

1248
00:46:26,480 --> 00:46:30,560
and leaves that are a pass all these

1249
00:46:30,560 --> 00:46:33,200
deaths and now the tree that you're

1250
00:46:33,200 --> 00:46:33,760
getting

1251
00:46:33,760 --> 00:46:35,760
is actually a subtree of the original

1252
00:46:35,760 --> 00:46:36,800
tree

1253
00:46:36,800 --> 00:46:40,160
uh there is a some caveat here that

1254
00:46:40,160 --> 00:46:42,560
before beforehand we only had one

1255
00:46:42,560 --> 00:46:44,400
decision per sample

1256
00:46:44,400 --> 00:46:46,880
now we have situations exactly for

1257
00:46:46,880 --> 00:46:48,079
example

1258
00:46:48,079 --> 00:46:51,280
uh if we reach this point uh

1259
00:46:51,280 --> 00:46:53,119
then we have nothing that is validated

1260
00:46:53,119 --> 00:46:55,280
so there is no decision for the model

1261
00:46:55,280 --> 00:46:57,200
and if we reach this point for example

1262
00:46:57,200 --> 00:46:58,480
the tree was

1263
00:46:58,480 --> 00:47:01,760
only truncated at this area at this

1264
00:47:01,760 --> 00:47:04,319
level and this point has two decisions

1265
00:47:04,319 --> 00:47:05,359
so we need to handle

1266
00:47:05,359 --> 00:47:08,240
this situation but there are many ways

1267
00:47:08,240 --> 00:47:10,079
to do that

1268
00:47:10,079 --> 00:47:12,319
uh so this is a way for uh to do the

1269
00:47:12,319 --> 00:47:13,359
validation of

1270
00:47:13,359 --> 00:47:15,839
the trip uh what can we do when it comes

1271
00:47:15,839 --> 00:47:17,119
to ensembles

1272
00:47:17,119 --> 00:47:18,800
so when it comes to bagging actually

1273
00:47:18,800 --> 00:47:20,720
this is straightforward when we have the

1274
00:47:20,720 --> 00:47:23,839
models that are set we can now validate

1275
00:47:23,839 --> 00:47:25,119
the trees and

1276
00:47:25,119 --> 00:47:27,760
in fact it is even easier because the

1277
00:47:27,760 --> 00:47:29,920
problem that we had of no decision or

1278
00:47:29,920 --> 00:47:31,200
multiple decisions

1279
00:47:31,200 --> 00:47:33,040
uh when you do an averaging or voting

1280
00:47:33,040 --> 00:47:34,480
then you can say okay when i have no

1281
00:47:34,480 --> 00:47:35,359
decision then

1282
00:47:35,359 --> 00:47:38,079
i have no vote when i have two decisions

1283
00:47:38,079 --> 00:47:38,400
the

1284
00:47:38,400 --> 00:47:40,880
permissible decisions then i give two

1285
00:47:40,880 --> 00:47:42,640
votes one for the first class and the

1286
00:47:42,640 --> 00:47:44,160
second for the second class

1287
00:47:44,160 --> 00:47:47,440
uh so it actually may make sense

1288
00:47:47,440 --> 00:47:51,680
uh for uh boosting uh and samples it is

1289
00:47:51,680 --> 00:47:54,079
less straightforward to use because when

1290
00:47:54,079 --> 00:47:55,200
i say

1291
00:47:55,200 --> 00:47:56,880
three validation this is not exactly

1292
00:47:56,880 --> 00:47:59,920
validation uh it is beyond that it is uh

1293
00:47:59,920 --> 00:48:02,559
uh also actually changing the the tree

1294
00:48:02,559 --> 00:48:04,640
and since we have a path

1295
00:48:04,640 --> 00:48:06,880
of optimizations here then if you change

1296
00:48:06,880 --> 00:48:08,559
the tree then you need to make sure that

1297
00:48:08,559 --> 00:48:11,200
um that you will not impact the rest of

1298
00:48:11,200 --> 00:48:11,680
uh

1299
00:48:11,680 --> 00:48:14,240
of the chain so it might be useful also

1300
00:48:14,240 --> 00:48:15,920
for this area but uh

1301
00:48:15,920 --> 00:48:19,359
i uh it is probably uh more complicated

1302
00:48:19,359 --> 00:48:21,440
to uh to obtain that uh this is a

1303
00:48:21,440 --> 00:48:24,480
good um direction for a researcher

1304
00:48:24,480 --> 00:48:28,079
i believe so uh let's sum up

1305
00:48:28,079 --> 00:48:30,079
um later poisoning is a significant

1306
00:48:30,079 --> 00:48:32,240
threat or learning mechanism

1307
00:48:32,240 --> 00:48:36,160
uh it is uh it is there whenever you

1308
00:48:36,160 --> 00:48:38,160
do something meaningful based on data

1309
00:48:38,160 --> 00:48:39,599
from untrusted

1310
00:48:39,599 --> 00:48:41,520
sources with or without a trusted

1311
00:48:41,520 --> 00:48:43,680
labeling and threshold-based learning

1312
00:48:43,680 --> 00:48:44,960
may provide an adequate

1313
00:48:44,960 --> 00:48:48,559
robust learning solution uh the boolean

1314
00:48:48,559 --> 00:48:50,559
facts framework that i presented

1315
00:48:50,559 --> 00:48:51,760
provides a streaming friendly

1316
00:48:51,760 --> 00:48:54,400
implementation for threshold-based

1317
00:48:54,400 --> 00:48:55,280
learning

1318
00:48:55,280 --> 00:48:57,760
and many features of uh when you build a

1319
00:48:57,760 --> 00:48:58,720
profile

1320
00:48:58,720 --> 00:49:00,960
can be expressed with boolean facts even

1321
00:49:00,960 --> 00:49:01,920
if it

1322
00:49:01,920 --> 00:49:04,720
seems that a limited model it is not

1323
00:49:04,720 --> 00:49:05,920
that limited

1324
00:49:05,920 --> 00:49:09,440
uh it can be uh it can work also for

1325
00:49:09,440 --> 00:49:13,040
uh for numeric uh and for uh a

1326
00:49:13,040 --> 00:49:14,559
categorized uh

1327
00:49:14,559 --> 00:49:17,119
features and a traditional learning of

1328
00:49:17,119 --> 00:49:19,359
trees and forests is partially possible

1329
00:49:19,359 --> 00:49:21,440
with boolean in fact i showed you how

1330
00:49:21,440 --> 00:49:23,119
you can uh

1331
00:49:23,119 --> 00:49:25,040
you cannot build a tree uh in this

1332
00:49:25,040 --> 00:49:26,880
manner but you can do validation of the

1333
00:49:26,880 --> 00:49:27,359
tree

1334
00:49:27,359 --> 00:49:30,319
to make sure that your tree is a full

1335
00:49:30,319 --> 00:49:32,480
tournament

1336
00:49:32,480 --> 00:49:34,240
and that's it thank you for listening

1337
00:49:34,240 --> 00:49:38,799
and now we have a couple of minutes for

1338
00:49:42,839 --> 00:49:45,839
questions

1339
00:49:56,839 --> 00:49:59,839
um

1340
00:50:07,440 --> 00:50:13,839
i can't hear anyone

1341
00:50:24,839 --> 00:50:27,839
so

1342
00:51:06,839 --> 00:51:09,839
um

1343
00:51:21,839 --> 00:51:23,920
you

1344
00:51:48,839 --> 00:51:51,839
um

1345
00:52:02,839 --> 00:52:05,839
so

1346
00:52:16,960 --> 00:52:19,599
dropping out um video issues so i'm

1347
00:52:19,599 --> 00:52:20,880
gonna go ahead and end this broadcast

1348
00:52:20,880 --> 00:52:21,920
now

1349
00:52:21,920 --> 00:52:23,520
um thank you for coming thank you for

1350
00:52:23,520 --> 00:52:25,280
presenting um if

1351
00:52:25,280 --> 00:52:27,520
you can make sure to stick around in the

1352
00:52:27,520 --> 00:52:28,319
track one

1353
00:52:28,319 --> 00:52:31,040
uh breakout session in discord to look

1354
00:52:31,040 --> 00:52:33,200
for questions from our attendees

1355
00:52:33,200 --> 00:52:36,240
but beyond that um

1356
00:52:36,240 --> 00:52:37,839
we do have a question from ryan coming

1357
00:52:37,839 --> 00:52:40,079
in which is interesting information

1358
00:52:40,079 --> 00:52:43,839
more of a statement again again um so

1359
00:52:43,839 --> 00:52:49,200
please go ahead and jump into the

1360
00:52:49,200 --> 00:52:51,280
discord room and i'll go ahead and close

1361
00:52:51,280 --> 00:52:52,640
this session out

1362
00:52:52,640 --> 00:52:56,000
okay so i'm in a track one breakout

1363
00:52:56,000 --> 00:53:01,839
yes okay awesome

1364
00:53:31,839 --> 00:53:35,119
hi there i'm melissa miller and i'm a

1365
00:53:35,119 --> 00:53:36,800
hacker

1366
00:53:36,800 --> 00:53:38,640
i'm also a security researcher and an

1367
00:53:38,640 --> 00:53:40,960
advocate for hacking is not a crime

1368
00:53:40,960 --> 00:53:42,559
and i'd like to share with you what

1369
00:53:42,559 --> 00:53:45,359
being a hacker means to me

1370
00:53:45,359 --> 00:53:48,559
because you see since i was a

1371
00:53:48,559 --> 00:53:50,800
young young child i've always been a

1372
00:53:50,800 --> 00:53:51,920
hacker

1373
00:53:51,920 --> 00:53:54,000
i was the kid that liked to take my toys

1374
00:53:54,000 --> 00:53:55,040
apart

1375
00:53:55,040 --> 00:53:56,800
to figure out how they worked and to see

1376
00:53:56,800 --> 00:53:59,599
if i could make them work better

1377
00:53:59,599 --> 00:54:01,599
when i turned 12 years old i got a job i

1378
00:54:01,599 --> 00:54:02,960
saved up enough money and i bought

1379
00:54:02,960 --> 00:54:03,520
myself

1380
00:54:03,520 --> 00:54:07,440
my own computer and on that computer

1381
00:54:07,440 --> 00:54:12,240
i wiped it clean started from scratch

1382
00:54:12,240 --> 00:54:14,000
figured out how to build it from the

1383
00:54:14,000 --> 00:54:15,839
ground up

1384
00:54:15,839 --> 00:54:17,440
learned programming so that i could

1385
00:54:17,440 --> 00:54:19,599
write my own software to run on my

1386
00:54:19,599 --> 00:54:20,720
computer

1387
00:54:20,720 --> 00:54:23,200
i learned modem communications and

1388
00:54:23,200 --> 00:54:25,359
serial communications

1389
00:54:25,359 --> 00:54:28,640
so that i could figure out how these

1390
00:54:28,640 --> 00:54:30,640
online services that i like to use

1391
00:54:30,640 --> 00:54:34,240
were working and so when i got into my

1392
00:54:34,240 --> 00:54:35,200
career

1393
00:54:35,200 --> 00:54:37,280
i took a lot of different twists and

1394
00:54:37,280 --> 00:54:38,480
turns

1395
00:54:38,480 --> 00:54:42,319
i started off as a penetration tester i

1396
00:54:42,319 --> 00:54:45,520
moved into consulting i worked at high

1397
00:54:45,520 --> 00:54:46,720
executive levels

1398
00:54:46,720 --> 00:54:49,280
building massive application security

1399
00:54:49,280 --> 00:54:50,559
programs across

1400
00:54:50,559 --> 00:54:53,760
large enterprise organizations

1401
00:54:53,760 --> 00:54:55,359
i work for product companies and

1402
00:54:55,359 --> 00:54:57,200
resellers

1403
00:54:57,200 --> 00:54:59,599
but through it all the one thing that

1404
00:54:59,599 --> 00:55:01,839
stuck with me was this identity

1405
00:55:01,839 --> 00:55:05,119
of being a hacker now we hear the word

1406
00:55:05,119 --> 00:55:06,559
hacker thrown about in the media and

1407
00:55:06,559 --> 00:55:08,079
it's usually connected with some type of

1408
00:55:08,079 --> 00:55:09,280
criminal activity

1409
00:55:09,280 --> 00:55:12,799
but being a hacker does not mean being a

1410
00:55:12,799 --> 00:55:15,280
criminal

1411
00:55:15,280 --> 00:55:18,839
being a hacker is all about this innate

1412
00:55:18,839 --> 00:55:22,720
curiosity this passion to understand how

1413
00:55:22,720 --> 00:55:24,160
things work

1414
00:55:24,160 --> 00:55:25,680
and to see how we can make them work

1415
00:55:25,680 --> 00:55:27,440
differently better create

1416
00:55:27,440 --> 00:55:30,400
new things i'm reminded of a quote from

1417
00:55:30,400 --> 00:55:32,000
a keynote given by

1418
00:55:32,000 --> 00:55:34,319
jason street one of my colleagues in

1419
00:55:34,319 --> 00:55:35,520
which he said

1420
00:55:35,520 --> 00:55:39,599
hackers are inventors and creators

1421
00:55:39,599 --> 00:55:42,640
not criminals and freaks and that's the

1422
00:55:42,640 --> 00:55:44,400
reality

1423
00:55:44,400 --> 00:55:46,079
hackers are people who want to make

1424
00:55:46,079 --> 00:55:48,079
technology better we want to make it do

1425
00:55:48,079 --> 00:55:50,240
cool new things we want to understand

1426
00:55:50,240 --> 00:55:51,599
how it works

1427
00:55:51,599 --> 00:55:53,440
so that we can innovate we can make

1428
00:55:53,440 --> 00:55:55,200
things better

1429
00:55:55,200 --> 00:55:57,280
and we can make our lives all the more

1430
00:55:57,280 --> 00:55:58,240
exciting

1431
00:55:58,240 --> 00:56:01,040
through technology so i hope you'll join

1432
00:56:01,040 --> 00:56:01,760
with me

1433
00:56:01,760 --> 00:56:04,880
and with hacking is not a crime to

1434
00:56:04,880 --> 00:56:06,559
spread the message

1435
00:56:06,559 --> 00:56:09,599
that hacking and being a hacker

1436
00:56:09,599 --> 00:56:13,280
is not a crime we're not criminals

1437
00:56:13,280 --> 00:56:17,420
we're artisan inventors thank you so

1438
00:56:17,420 --> 00:56:21,199
[Music]

1439
00:56:24,070 --> 00:56:27,129
[Music]

1440
00:56:28,839 --> 00:56:31,839
much

1441
00:56:44,850 --> 00:56:54,929
[Music]

1442
00:56:59,190 --> 00:57:04,359
[Music]

1443
00:57:12,720 --> 00:57:15,970
[Music]

1444
00:57:16,319 --> 00:57:18,400
you

