1
00:00:06,000 --> 00:00:08,559
good afternoon b-side san antonio i hope

2
00:00:08,559 --> 00:00:09,920
you guys are having a great

3
00:00:09,920 --> 00:00:13,519
event today i am presenting mr felipe

4
00:00:13,519 --> 00:00:16,320
perez and he is going to do a walk

5
00:00:16,320 --> 00:00:17,279
through

6
00:00:17,279 --> 00:00:19,840
of identifying security holes during the

7
00:00:19,840 --> 00:00:21,039
development process

8
00:00:21,039 --> 00:00:22,720
as well as do practical demonstration of

9
00:00:22,720 --> 00:00:24,400
how a developer can use

10
00:00:24,400 --> 00:00:26,720
sas tool for static analysis and code

11
00:00:26,720 --> 00:00:28,000
vulnerability

12
00:00:28,000 --> 00:00:31,679
execution in source code byte code and

13
00:00:31,679 --> 00:00:34,320
binary and identifying security holes

14
00:00:34,320 --> 00:00:36,480
during the development process

15
00:00:36,480 --> 00:00:39,760
uh he will be analyzing many languages

16
00:00:39,760 --> 00:00:42,719
such as java python ruby going so on and

17
00:00:42,719 --> 00:00:44,000
so forth and searching for

18
00:00:44,000 --> 00:00:47,280
key link leaks and security flaws in all

19
00:00:47,280 --> 00:00:48,719
files of your project

20
00:00:48,719 --> 00:00:50,879
as well as your get hit story he's a

21
00:00:50,879 --> 00:00:53,280
very busy principal security engineer

22
00:00:53,280 --> 00:00:55,360
and security researcher at sup

23
00:00:55,360 --> 00:00:57,280
innovation global researcher manage

24
00:00:57,280 --> 00:00:58,000
manager at

25
00:00:58,000 --> 00:01:00,640
hacker security he's a staff at defcon

26
00:01:00,640 --> 00:01:01,039
group

27
00:01:01,039 --> 00:01:04,159
in sao paulo brazil he's talked in

28
00:01:04,159 --> 00:01:06,560
security events all over the world

29
00:01:06,560 --> 00:01:08,320
and he is the founder and instructor of

30
00:01:08,320 --> 00:01:11,040
the course malware analysis

31
00:01:11,040 --> 00:01:13,040
fundamentals hacker set company online

32
00:01:13,040 --> 00:01:16,080
course so be sure to check that out

33
00:01:16,080 --> 00:01:17,759
also remember to hop on discord right

34
00:01:17,759 --> 00:01:20,080
after to talk with our sponsors

35
00:01:20,080 --> 00:01:22,080
and community organizations if you have

36
00:01:22,080 --> 00:01:23,600
any questions for felipe

37
00:01:23,600 --> 00:01:26,400
please go to track one in the weeds

38
00:01:26,400 --> 00:01:28,080
breakout room and felipe also wants to

39
00:01:28,080 --> 00:01:30,000
say hello to all of you guys so

40
00:01:30,000 --> 00:01:33,040
have a great event

41
00:01:35,200 --> 00:01:37,040
hi thank you thank you for these

42
00:01:37,040 --> 00:01:39,040
presentations thank you so much

43
00:01:39,040 --> 00:01:42,079
and uh my name is felipe pierce again

44
00:01:42,079 --> 00:01:43,840
and i'm talking from brazil now here

45
00:01:43,840 --> 00:01:45,680
from my office by the way my office is

46
00:01:45,680 --> 00:01:47,200
in my balcony as you can see

47
00:01:47,200 --> 00:01:50,000
behind me you know he is at night here

48
00:01:50,000 --> 00:01:50,880
in brazil at

49
00:01:50,880 --> 00:01:54,240
you know it's six at six

50
00:01:54,240 --> 00:01:57,600
pm not six pm yeah six pm sorry

51
00:01:57,600 --> 00:02:01,119
and um yes let's talk about during this

52
00:02:01,119 --> 00:02:03,680
in the end of this event about the

53
00:02:03,680 --> 00:02:05,759
secure development right so

54
00:02:05,759 --> 00:02:08,800
here my home page it's very simple

55
00:02:08,800 --> 00:02:10,878
homepage just to

56
00:02:10,878 --> 00:02:12,560
just to see some information about me

57
00:02:12,560 --> 00:02:15,440
you know in the um

58
00:02:15,440 --> 00:02:18,640
hear my presentations again i am yeah

59
00:02:18,640 --> 00:02:19,520
that doesn't matter

60
00:02:19,520 --> 00:02:21,440
that who am i but here the most

61
00:02:21,440 --> 00:02:23,680
important is i'm advocate of the

62
00:02:23,680 --> 00:02:26,879
hacks not a crime uh project i think you

63
00:02:26,879 --> 00:02:29,599
heard about that during this event and

64
00:02:29,599 --> 00:02:30,879
i'm a part of the

65
00:02:30,879 --> 00:02:32,400
devcon groups here in south all the

66
00:02:32,400 --> 00:02:34,480
staff teams you know you know i'm

67
00:02:34,480 --> 00:02:36,160
supported fcom groups they're the right

68
00:02:36,160 --> 00:02:37,519
team village

69
00:02:37,519 --> 00:02:40,080
too right so here you can see some open

70
00:02:40,080 --> 00:02:41,040
source project

71
00:02:41,040 --> 00:02:43,200
that i have here in supernovation my

72
00:02:43,200 --> 00:02:44,720
company here in brazil

73
00:02:44,720 --> 00:02:46,640
and uh here's another presentations that

74
00:02:46,640 --> 00:02:47,760
i have

75
00:02:47,760 --> 00:02:50,560
been doing the during this year in the

76
00:02:50,560 --> 00:02:51,680
last year

77
00:02:51,680 --> 00:02:55,360
and we have here in english in spanish

78
00:02:55,360 --> 00:02:57,599
in portuguese or everyone

79
00:02:57,599 --> 00:03:00,159
we have here some you know talks and

80
00:03:00,159 --> 00:03:02,159
here we have some articles

81
00:03:02,159 --> 00:03:04,800
that i wrote in the fantastic magazine

82
00:03:04,800 --> 00:03:06,239
hackney and

83
00:03:06,239 --> 00:03:08,800
you know a forensic magazine in other

84
00:03:08,800 --> 00:03:09,519
places

85
00:03:09,519 --> 00:03:11,920
right so today we're going to talk about

86
00:03:11,920 --> 00:03:13,599
the the very interesting talk that i

87
00:03:13,599 --> 00:03:14,560
like by the way

88
00:03:14,560 --> 00:03:16,959
and about the secure development because

89
00:03:16,959 --> 00:03:18,400
this is a very interesting

90
00:03:18,400 --> 00:03:20,239
important process when you build

91
00:03:20,239 --> 00:03:22,720
something right of course related to a

92
00:03:22,720 --> 00:03:23,599
software

93
00:03:23,599 --> 00:03:25,840
or when you have some code because in

94
00:03:25,840 --> 00:03:26,640
the end of the day

95
00:03:26,640 --> 00:03:28,799
we have you produce some code you you

96
00:03:28,799 --> 00:03:30,480
know you build some code

97
00:03:30,480 --> 00:03:34,000
and you can produce it and you can

98
00:03:34,000 --> 00:03:36,799
compile this right it turn this up you

99
00:03:36,799 --> 00:03:37,519
know

100
00:03:37,519 --> 00:03:40,560
turning this this code that has a binary

101
00:03:40,560 --> 00:03:43,599
or you know you can create a

102
00:03:43,599 --> 00:03:47,040
uh some apps using in a mobile

103
00:03:47,040 --> 00:03:49,200
environment or you can use in a web

104
00:03:49,200 --> 00:03:50,560
application but

105
00:03:50,560 --> 00:03:52,159
the first you need to create this code

106
00:03:52,159 --> 00:03:54,400
right and um

107
00:03:54,400 --> 00:03:55,840
here it's important to understand the

108
00:03:55,840 --> 00:03:57,760
difference between you know where

109
00:03:57,760 --> 00:04:00,879
what is fast and dust right so just a

110
00:04:00,879 --> 00:04:02,879
few explanations about that you know i

111
00:04:02,879 --> 00:04:05,200
i pick up this information from the sign

112
00:04:05,200 --> 00:04:06,000
off site

113
00:04:06,000 --> 00:04:07,599
it's um i think it's a company

114
00:04:07,599 --> 00:04:09,680
responsible to produce some sas or last

115
00:04:09,680 --> 00:04:11,120
product i don't know exactly

116
00:04:11,120 --> 00:04:13,200
but just a reference to you to see

117
00:04:13,200 --> 00:04:14,560
because i think it's important to

118
00:04:14,560 --> 00:04:16,560
explain the difference between you know

119
00:04:16,560 --> 00:04:19,120
and uh here the difference sustains uh a

120
00:04:19,120 --> 00:04:21,040
white block security test

121
00:04:21,040 --> 00:04:23,919
it's related when you analyze the

122
00:04:23,919 --> 00:04:25,680
applications

123
00:04:25,680 --> 00:04:27,919
before or not before uh actually as

124
00:04:27,919 --> 00:04:29,040
before before

125
00:04:29,040 --> 00:04:31,840
to produce this right so actually the

126
00:04:31,840 --> 00:04:32,479
tester

127
00:04:32,479 --> 00:04:34,720
has access to the underlying framework

128
00:04:34,720 --> 00:04:36,240
design and implementation

129
00:04:36,240 --> 00:04:37,840
the application here is important the

130
00:04:37,840 --> 00:04:40,240
application is tested from the

131
00:04:40,240 --> 00:04:44,400
inside out right so uh you don't publish

132
00:04:44,400 --> 00:04:47,759
this applications yet right so

133
00:04:47,759 --> 00:04:49,040
on the other hand in the black box

134
00:04:49,040 --> 00:04:51,440
security testing in this case is a dust

135
00:04:51,440 --> 00:04:55,120
right so the application is tested from

136
00:04:55,120 --> 00:04:56,400
the outside

137
00:04:56,400 --> 00:04:58,720
right so you need to publish the url and

138
00:04:58,720 --> 00:05:00,880
after that you can execute the test

139
00:05:00,880 --> 00:05:03,120
application inside by name application

140
00:05:03,120 --> 00:05:04,880
security test just to understand the

141
00:05:04,880 --> 00:05:06,000
difference between right

142
00:05:06,000 --> 00:05:09,199
so another uh difference is related to a

143
00:05:09,199 --> 00:05:10,479
requires required

144
00:05:10,479 --> 00:05:13,280
search code sas doesn't require a

145
00:05:13,280 --> 00:05:15,440
deployed application you know

146
00:05:15,440 --> 00:05:17,600
on the other hand on that solutions

147
00:05:17,600 --> 00:05:19,520
requires a running application which

148
00:05:19,520 --> 00:05:20,160
means

149
00:05:20,160 --> 00:05:22,479
thus doesn't require the search code or

150
00:05:22,479 --> 00:05:23,759
binary

151
00:05:23,759 --> 00:05:27,280
analyzes by executing the application it

152
00:05:27,280 --> 00:05:29,360
means you need to publish the

153
00:05:29,360 --> 00:05:31,520
applications you have the url

154
00:05:31,520 --> 00:05:33,199
of course and after that you can execute

155
00:05:33,199 --> 00:05:35,039
this test in this case

156
00:05:35,039 --> 00:05:38,160
dust right in this case sast

157
00:05:38,160 --> 00:05:40,960
is different you you're not your

158
00:05:40,960 --> 00:05:42,080
analysis

159
00:05:42,080 --> 00:05:45,520
is uh if in the search code right

160
00:05:45,520 --> 00:05:47,919
so here another interesting difference

161
00:05:47,919 --> 00:05:50,160
right so when you talk about assessed

162
00:05:50,160 --> 00:05:52,560
find these vulnerabilities early in the

163
00:05:52,560 --> 00:05:53,840
stlc

164
00:05:53,840 --> 00:05:55,840
you know it's a software development

165
00:05:55,840 --> 00:05:57,840
life cycle this economy right

166
00:05:57,840 --> 00:06:00,479
so this can can be executed as soon as

167
00:06:00,479 --> 00:06:00,880
cold

168
00:06:00,880 --> 00:06:04,400
is teammate feature completely right

169
00:06:04,400 --> 00:06:07,199
but on the other hand in this case it's

170
00:06:07,199 --> 00:06:08,400
finds lunar reads

171
00:06:08,400 --> 00:06:11,759
toward the end of the sdlc

172
00:06:11,759 --> 00:06:14,240
you know you have that this life cycle

173
00:06:14,240 --> 00:06:16,479
when you talk about the

174
00:06:16,479 --> 00:06:18,720
the software software development right

175
00:06:18,720 --> 00:06:21,360
so vulnerabilities can be discovered

176
00:06:21,360 --> 00:06:24,560
after development cycle is completed

177
00:06:24,560 --> 00:06:25,199
right

178
00:06:25,199 --> 00:06:28,319
so another difference less expensive to

179
00:06:28,319 --> 00:06:29,440
fix vulnerability

180
00:06:29,440 --> 00:06:31,840
in fast mode right since this

181
00:06:31,840 --> 00:06:32,800
variabilities are

182
00:06:32,800 --> 00:06:36,720
found early in the sdlc it's easier and

183
00:06:36,720 --> 00:06:39,520
faster to remediate them right because

184
00:06:39,520 --> 00:06:42,319
you remember you don't you you don't

185
00:06:42,319 --> 00:06:42,960
publish

186
00:06:42,960 --> 00:06:46,080
yet you know the applications right

187
00:06:46,080 --> 00:06:47,840
it's more expensive to fix

188
00:06:47,840 --> 00:06:50,000
vulnerabilities in this case in the desk

189
00:06:50,000 --> 00:06:52,560
why it's very simple because since

190
00:06:52,560 --> 00:06:54,400
vulnerabilities are founded toward the

191
00:06:54,400 --> 00:06:56,000
end of the sd lc

192
00:06:56,000 --> 00:06:58,560
it means after you publish your

193
00:06:58,560 --> 00:07:00,479
application right you need to remediate

194
00:07:00,479 --> 00:07:01,199
this

195
00:07:01,199 --> 00:07:03,120
it's very complicated because if you you

196
00:07:03,120 --> 00:07:04,960
see the attacker or you know

197
00:07:04,960 --> 00:07:07,680
find some vulnerabilities the the fix

198
00:07:07,680 --> 00:07:08,479
needs to be

199
00:07:08,479 --> 00:07:10,400
emergency release you need to create

200
00:07:10,400 --> 00:07:11,599
some release

201
00:07:11,599 --> 00:07:14,880
emergency right so another point is

202
00:07:14,880 --> 00:07:18,000
can is can't discovery run time and

203
00:07:18,000 --> 00:07:20,000
environment related to issues

204
00:07:20,000 --> 00:07:22,240
it means since the tool is kind of

205
00:07:22,240 --> 00:07:24,479
statistical

206
00:07:24,479 --> 00:07:26,800
it can't cover runtime vulnerability

207
00:07:26,800 --> 00:07:27,680
because

208
00:07:27,680 --> 00:07:30,400
you analyze the code but in this case

209
00:07:30,400 --> 00:07:32,000
you have a published

210
00:07:32,000 --> 00:07:35,680
you know you already published the um

211
00:07:35,680 --> 00:07:37,919
applications right so and the end of

212
00:07:37,919 --> 00:07:39,120
this explanation

213
00:07:39,120 --> 00:07:42,240
by the way typically supports all kind

214
00:07:42,240 --> 00:07:43,280
of softwares

215
00:07:43,280 --> 00:07:45,599
example including web applications as i

216
00:07:45,599 --> 00:07:46,400
mentioned

217
00:07:46,400 --> 00:07:48,960
web servers and think lines client and

218
00:07:48,960 --> 00:07:49,680
think

219
00:07:49,680 --> 00:07:52,080
clients right and the dust wave

220
00:07:52,080 --> 00:07:53,280
typically scans

221
00:07:53,280 --> 00:07:56,000
only apps like web applications and web

222
00:07:56,000 --> 00:07:57,599
services right so

223
00:07:57,599 --> 00:08:01,120
that is not usable for other types of

224
00:08:01,120 --> 00:08:02,479
software this is just a simple

225
00:08:02,479 --> 00:08:04,319
definitions right guys so

226
00:08:04,319 --> 00:08:07,360
another point is here is you understand

227
00:08:07,360 --> 00:08:08,879
about this explanation right

228
00:08:08,879 --> 00:08:11,120
sas is a statistical application

229
00:08:11,120 --> 00:08:12,400
security testing

230
00:08:12,400 --> 00:08:14,319
and today i will explain more about the

231
00:08:14,319 --> 00:08:16,160
open source

232
00:08:16,160 --> 00:08:18,479
of the open source project right about

233
00:08:18,479 --> 00:08:19,599
the orosec

234
00:08:19,599 --> 00:08:22,400
is currently a sas project that you can

235
00:08:22,400 --> 00:08:24,319
execute in your code right

236
00:08:24,319 --> 00:08:26,080
or in your environment you're you know

237
00:08:26,080 --> 00:08:29,120
and binary something like that

238
00:08:29,120 --> 00:08:30,720
again this is the last two as i

239
00:08:30,720 --> 00:08:32,240
mentioned right it's dynamic application

240
00:08:32,240 --> 00:08:33,279
to keep the test

241
00:08:33,279 --> 00:08:34,479
it's too recommended to find the

242
00:08:34,479 --> 00:08:36,559
vulnerabilities externally

243
00:08:36,559 --> 00:08:39,279
visible right as i mentioned okay and

244
00:08:39,279 --> 00:08:40,799
here we have another interesting

245
00:08:40,799 --> 00:08:43,279
yest interactive application security

246
00:08:43,279 --> 00:08:44,399
test you can

247
00:08:44,399 --> 00:08:47,600
mix at both of them right so east is the

248
00:08:47,600 --> 00:08:49,600
combination of the statistic and dynamic

249
00:08:49,600 --> 00:08:50,399
past

250
00:08:50,399 --> 00:08:54,320
modules right and it has better results

251
00:08:54,320 --> 00:08:56,959
why because of course it's better

252
00:08:56,959 --> 00:08:59,279
because you can test both of them

253
00:08:59,279 --> 00:09:03,279
before and after the applications

254
00:09:03,279 --> 00:09:06,560
uh to be published right and here

255
00:09:06,560 --> 00:09:09,600
is the interesting point yesterday has

256
00:09:09,600 --> 00:09:11,839
an option to perform it together with a

257
00:09:11,839 --> 00:09:13,200
security analyst

258
00:09:13,200 --> 00:09:15,680
you need to have in this ca usually this

259
00:09:15,680 --> 00:09:16,399
guy

260
00:09:16,399 --> 00:09:19,440
then it's called by application security

261
00:09:19,440 --> 00:09:20,080
guy right

262
00:09:20,080 --> 00:09:23,519
because this guy can be using this

263
00:09:23,519 --> 00:09:27,440
um type of the you know analysis to run

264
00:09:27,440 --> 00:09:29,920
it is the best type to test in terms of

265
00:09:29,920 --> 00:09:31,760
the false positive rate

266
00:09:31,760 --> 00:09:33,839
due to the human interactions right

267
00:09:33,839 --> 00:09:35,440
because of these

268
00:09:35,440 --> 00:09:39,279
you can reduce the false positive right

269
00:09:39,279 --> 00:09:41,600
but in my opinion in philippi opinion i

270
00:09:41,600 --> 00:09:42,720
think it's better you

271
00:09:42,720 --> 00:09:44,399
if you have if you need to choose for

272
00:09:44,399 --> 00:09:46,000
example a false positive or false

273
00:09:46,000 --> 00:09:46,800
negative

274
00:09:46,800 --> 00:09:48,800
in my perspective from my perspective

275
00:09:48,800 --> 00:09:50,160
it's better when you have false

276
00:09:50,160 --> 00:09:51,440
positives because

277
00:09:51,440 --> 00:09:54,399
you need to analyze it and you can see

278
00:09:54,399 --> 00:09:55,519
what this

279
00:09:55,519 --> 00:09:57,440
what happened in your environment right

280
00:09:57,440 --> 00:09:59,519
but when you have the false negative

281
00:09:59,519 --> 00:10:01,760
you have a problem because something

282
00:10:01,760 --> 00:10:02,800
wrong

283
00:10:02,800 --> 00:10:04,000
it's happening in your environment you

284
00:10:04,000 --> 00:10:06,000
know and you you you don't

285
00:10:06,000 --> 00:10:09,920
see during the scanning or another

286
00:10:09,920 --> 00:10:12,079
platform that you have right so okay

287
00:10:12,079 --> 00:10:13,680
i've explained the difference between

288
00:10:13,680 --> 00:10:14,320
the sas

289
00:10:14,320 --> 00:10:16,880
and dust and us just to understand so

290
00:10:16,880 --> 00:10:19,040
now i would like to explain more about

291
00:10:19,040 --> 00:10:19,600
the

292
00:10:19,600 --> 00:10:23,120
auros sec right so the name is called

293
00:10:23,120 --> 00:10:26,880
aurus sec you can

294
00:10:27,040 --> 00:10:29,440
write this in in google for example and

295
00:10:29,440 --> 00:10:30,240
you can see

296
00:10:30,240 --> 00:10:33,760
more information about that right so

297
00:10:33,760 --> 00:10:36,800
uh our sec is on open source tools again

298
00:10:36,800 --> 00:10:39,200
you can click here using the github or

299
00:10:39,200 --> 00:10:41,200
here or sec.ko

300
00:10:41,200 --> 00:10:44,160
or take you take a look there's some

301
00:10:44,160 --> 00:10:45,120
videos about me

302
00:10:45,120 --> 00:10:48,480
okay nice let's return here so you can

303
00:10:48,480 --> 00:10:51,040
click here to see the documentations

304
00:10:51,040 --> 00:10:52,880
and take a look at this in portuguese

305
00:10:52,880 --> 00:10:54,320
and english right

306
00:10:54,320 --> 00:10:56,560
so identity five vulnerabilities simple

307
00:10:56,560 --> 00:10:57,760
and fast

308
00:10:57,760 --> 00:11:00,160
right so again our second is an open

309
00:11:00,160 --> 00:11:01,120
source

310
00:11:01,120 --> 00:11:02,959
tools so because of this i'm present

311
00:11:02,959 --> 00:11:04,800
this for you because

312
00:11:04,800 --> 00:11:07,440
i really appreciate if you can do some

313
00:11:07,440 --> 00:11:09,200
you know pull requests in this

314
00:11:09,200 --> 00:11:13,040
tools because this uh project

315
00:11:13,040 --> 00:11:16,480
uh it was created to

316
00:11:16,480 --> 00:11:18,640
the security inside of the security team

317
00:11:18,640 --> 00:11:20,000
from zoop but

318
00:11:20,000 --> 00:11:22,320
to give this project to the community

319
00:11:22,320 --> 00:11:24,079
right so this is a very important your

320
00:11:24,079 --> 00:11:25,200
help for me

321
00:11:25,200 --> 00:11:27,440
and not for me for this project actually

322
00:11:27,440 --> 00:11:28,480
right so

323
00:11:28,480 --> 00:11:30,399
our section open source 2 that performs

324
00:11:30,399 --> 00:11:32,399
a statistical code analysis

325
00:11:32,399 --> 00:11:34,800
here it's some keys to identify security

326
00:11:34,800 --> 00:11:36,240
flows during the development

327
00:11:36,240 --> 00:11:38,959
process right so here's some tools some

328
00:11:38,959 --> 00:11:39,839
languages

329
00:11:39,839 --> 00:11:43,440
and tools there that um autosec analyze

330
00:11:43,440 --> 00:11:44,560
like you know chart

331
00:11:44,560 --> 00:11:47,680
java kotlin pattern and like another

332
00:11:47,680 --> 00:11:48,160
different

333
00:11:48,160 --> 00:11:52,480
terraform your kubernetes right so okay

334
00:11:52,480 --> 00:11:55,440
here is here is the web page okay i can

335
00:11:55,440 --> 00:11:56,000
click here

336
00:11:56,000 --> 00:11:59,120
the documentations and here i have some

337
00:11:59,120 --> 00:12:01,920
interesting information so some simple

338
00:12:01,920 --> 00:12:02,880
overview

339
00:12:02,880 --> 00:12:05,920
about this project right so again here

340
00:12:05,920 --> 00:12:07,680
some interesting thing that i like it's

341
00:12:07,680 --> 00:12:09,200
open source project

342
00:12:09,200 --> 00:12:11,920
and here another point here check out

343
00:12:11,920 --> 00:12:12,800
all the support

344
00:12:12,800 --> 00:12:15,120
language and availables tools here it's

345
00:12:15,120 --> 00:12:16,880
very interesting guys because

346
00:12:16,880 --> 00:12:20,160
you can see here all those languages and

347
00:12:20,160 --> 00:12:23,040
tools supported by aurosec you can see

348
00:12:23,040 --> 00:12:24,160
here the python

349
00:12:24,160 --> 00:12:26,959
and take a look at this here is the

350
00:12:26,959 --> 00:12:27,680
engines

351
00:12:27,680 --> 00:12:30,000
responsible to to find some

352
00:12:30,000 --> 00:12:32,079
vulnerabilities inside the

353
00:12:32,079 --> 00:12:33,440
environment if you if you click here

354
00:12:33,440 --> 00:12:35,440
instant grab for example take a look

355
00:12:35,440 --> 00:12:36,639
what happened here

356
00:12:36,639 --> 00:12:38,560
it's very simple the explanation about

357
00:12:38,560 --> 00:12:40,079
how the same graph

358
00:12:40,079 --> 00:12:44,240
works it means you have this um

359
00:12:44,240 --> 00:12:47,279
another project inside the or sex

360
00:12:47,279 --> 00:12:49,920
exactly it's not a framework but almost

361
00:12:49,920 --> 00:12:52,399
a framework right because you have here

362
00:12:52,399 --> 00:12:54,800
many different engines as you can see

363
00:12:54,800 --> 00:12:57,040
here like a golang for example in golang

364
00:12:57,040 --> 00:12:58,720
you have a gosak and sangrat

365
00:12:58,720 --> 00:13:02,560
it's two different engines right and uh

366
00:13:02,560 --> 00:13:03,920
but here is the difference take a look

367
00:13:03,920 --> 00:13:06,160
at that so you have here you

368
00:13:06,160 --> 00:13:09,920
are sec java it's another engine but

369
00:13:09,920 --> 00:13:12,720
not but it's open source you know it's

370
00:13:12,720 --> 00:13:13,519
open source

371
00:13:13,519 --> 00:13:16,959
engine but this engine it's uh created

372
00:13:16,959 --> 00:13:17,519
by

373
00:13:17,519 --> 00:13:20,480
the our sec team so take a look at this

374
00:13:20,480 --> 00:13:21,839
you can see

375
00:13:21,839 --> 00:13:24,000
different engines inside the same

376
00:13:24,000 --> 00:13:26,160
project you know you can see

377
00:13:26,160 --> 00:13:29,200
there for example like a rsec

378
00:13:29,200 --> 00:13:32,240
kotlin same grab and or sec java

379
00:13:32,240 --> 00:13:32,959
different

380
00:13:32,959 --> 00:13:35,200
engines towards right so from my

381
00:13:35,200 --> 00:13:36,560
perspective it's very interesting

382
00:13:36,560 --> 00:13:37,200
because

383
00:13:37,200 --> 00:13:39,360
if for example stingrap don't detect the

384
00:13:39,360 --> 00:13:41,440
vulnerability you can

385
00:13:41,440 --> 00:13:44,240
maybe to be detected by or sec java it's

386
00:13:44,240 --> 00:13:44,959
very

387
00:13:44,959 --> 00:13:48,240
very cool right so okay let's return

388
00:13:48,240 --> 00:13:48,880
here the

389
00:13:48,880 --> 00:13:52,399
overview where can you use the rsac

390
00:13:52,399 --> 00:13:54,240
locally right so our sec has an

391
00:13:54,240 --> 00:13:55,760
intuitive cli

392
00:13:55,760 --> 00:13:58,079
made for developer where it's possible

393
00:13:58,079 --> 00:14:00,160
to perform a loophole analysis

394
00:14:00,160 --> 00:14:02,000
this is the first idea when we created

395
00:14:02,000 --> 00:14:03,680
an rsec

396
00:14:03,680 --> 00:14:06,480
okay and below you can see another

397
00:14:06,480 --> 00:14:07,279
difference

398
00:14:07,279 --> 00:14:10,320
uh locals where you can use

399
00:14:10,320 --> 00:14:13,760
like a c c i c d pipeline an id

400
00:14:13,760 --> 00:14:18,399
and e a actually um

401
00:14:18,399 --> 00:14:21,120
extension here it's the key both of

402
00:14:21,120 --> 00:14:22,240
these functions

403
00:14:22,240 --> 00:14:24,880
it was creates it was suggested by the

404
00:14:24,880 --> 00:14:26,720
community right so because of this

405
00:14:26,720 --> 00:14:29,279
it's very important your pull request

406
00:14:29,279 --> 00:14:30,000
right so

407
00:14:30,000 --> 00:14:32,880
you can use in the cicd pipelining and

408
00:14:32,880 --> 00:14:34,160
you can use it uh

409
00:14:34,160 --> 00:14:37,360
in by vs code for for example right so

410
00:14:37,360 --> 00:14:40,480
here below you can some pictures but but

411
00:14:40,480 --> 00:14:42,079
i will explain in the

412
00:14:42,079 --> 00:14:44,720
in live here and take a look at this

413
00:14:44,720 --> 00:14:45,600
orsac

414
00:14:45,600 --> 00:14:48,720
analysis types it's very important

415
00:14:48,720 --> 00:14:51,279
things right so the other side

416
00:14:51,279 --> 00:14:53,040
performance three types of analysis

417
00:14:53,040 --> 00:14:54,639
right the first is assessed

418
00:14:54,639 --> 00:14:56,079
as i mentioned in the beginning because

419
00:14:56,079 --> 00:14:57,680
of this explained difference between

420
00:14:57,680 --> 00:14:58,880
soft and dust

421
00:14:58,880 --> 00:15:02,000
and he asked right and here is another

422
00:15:02,000 --> 00:15:03,519
interesting key

423
00:15:03,519 --> 00:15:06,720
uh our sec analyze and can collect the

424
00:15:06,720 --> 00:15:07,440
leaks

425
00:15:07,440 --> 00:15:09,279
right so the leaks checks the source

426
00:15:09,279 --> 00:15:11,199
code for a possible leaks

427
00:15:11,199 --> 00:15:14,720
of credentials private keys or harded

428
00:15:14,720 --> 00:15:16,079
coded password

429
00:15:16,079 --> 00:15:18,560
you know for for example if you are a

430
00:15:18,560 --> 00:15:21,519
developer or if you know

431
00:15:21,519 --> 00:15:24,800
any development developer and usually

432
00:15:24,800 --> 00:15:26,000
sometimes the developer

433
00:15:26,000 --> 00:15:28,570
put or forgot or you know um

434
00:15:28,570 --> 00:15:29,680
[Music]

435
00:15:29,680 --> 00:15:32,079
takes the uh some private keys inside

436
00:15:32,079 --> 00:15:32,959
the code

437
00:15:32,959 --> 00:15:36,399
or some had coded password inside

438
00:15:36,399 --> 00:15:38,320
the code in a guitar platform for

439
00:15:38,320 --> 00:15:39,519
example uh

440
00:15:39,519 --> 00:15:41,759
if you are a fantastic now you know and

441
00:15:41,759 --> 00:15:43,600
you are hearing me now probably

442
00:15:43,600 --> 00:15:46,000
when you realize that when you perform

443
00:15:46,000 --> 00:15:48,320
some uh recognization steps

444
00:15:48,320 --> 00:15:50,399
in a pentagon penetration test you

445
00:15:50,399 --> 00:15:52,560
usually when you execute this

446
00:15:52,560 --> 00:15:55,680
step you like to use to see

447
00:15:55,680 --> 00:15:58,480
the github if you can find some you know

448
00:15:58,480 --> 00:16:00,399
credentials of this some target that you

449
00:16:00,399 --> 00:16:02,000
are doing the fantastic right

450
00:16:02,000 --> 00:16:04,320
so it's a first step that we're going to

451
00:16:04,320 --> 00:16:05,440
recognize in this

452
00:16:05,440 --> 00:16:08,560
recognization steps right and the leaks

453
00:16:08,560 --> 00:16:09,920
it's very interesting because if the

454
00:16:09,920 --> 00:16:12,000
developer forgot some keys inside like

455
00:16:12,000 --> 00:16:14,399
you know aws key or azure key

456
00:16:14,399 --> 00:16:18,240
or gcp or ever you can discover this

457
00:16:18,240 --> 00:16:21,120
in this engine right using this some

458
00:16:21,120 --> 00:16:22,000
motorcycle leaks

459
00:16:22,000 --> 00:16:24,000
engines actually another point is

460
00:16:24,000 --> 00:16:26,639
independence audits right so you analyze

461
00:16:26,639 --> 00:16:28,959
a project's dependence to check whenever

462
00:16:28,959 --> 00:16:29,360
it's

463
00:16:29,360 --> 00:16:32,720
ina take a look at this third

464
00:16:32,720 --> 00:16:35,519
part libraries because you know when you

465
00:16:35,519 --> 00:16:36,000
create

466
00:16:36,000 --> 00:16:37,759
when you produce something you know when

467
00:16:37,759 --> 00:16:39,519
you create some apps sometimes you need

468
00:16:39,519 --> 00:16:40,240
to import

469
00:16:40,240 --> 00:16:42,959
another different library right so it's

470
00:16:42,959 --> 00:16:43,360
very

471
00:16:43,360 --> 00:16:46,480
important if you it should have

472
00:16:46,480 --> 00:16:47,600
important actually

473
00:16:47,600 --> 00:16:50,880
if you have some uh tools to execute

474
00:16:50,880 --> 00:16:53,120
some analysis in your code right if you

475
00:16:53,120 --> 00:16:53,519
see

476
00:16:53,519 --> 00:16:56,880
if this library it was vulnerable or not

477
00:16:56,880 --> 00:16:59,199
right so here's the important things

478
00:16:59,199 --> 00:17:00,079
okay

479
00:17:00,079 --> 00:17:03,120
so i think you understand now about what

480
00:17:03,120 --> 00:17:07,359
is our sex so now i made this

481
00:17:07,359 --> 00:17:09,599
overview about this is that i will be

482
00:17:09,599 --> 00:17:10,720
installing

483
00:17:10,720 --> 00:17:13,199
i will be starting now the or sec you

484
00:17:13,199 --> 00:17:14,000
can install it

485
00:17:14,000 --> 00:17:16,799
in different ways right so here the

486
00:17:16,799 --> 00:17:18,559
requirements i need to have the docker

487
00:17:18,559 --> 00:17:20,880
and it installed in my machine i always

488
00:17:20,880 --> 00:17:22,079
put this in my linux

489
00:17:22,079 --> 00:17:24,720
platform here in my linux machine right

490
00:17:24,720 --> 00:17:26,319
so here i have the

491
00:17:26,319 --> 00:17:29,520
my my cli right so

492
00:17:29,520 --> 00:17:32,160
by the way i have here my this is my

493
00:17:32,160 --> 00:17:32,720
project

494
00:17:32,720 --> 00:17:35,840
actually let me delete this

495
00:17:35,840 --> 00:17:38,480
because you need to use it after okay so

496
00:17:38,480 --> 00:17:40,640
take a look this i have here our second

497
00:17:40,640 --> 00:17:42,720
what i have here inside of this project

498
00:17:42,720 --> 00:17:44,320
by the way i have here

499
00:17:44,320 --> 00:17:47,600
my some codes vulnerable right so go and

500
00:17:47,600 --> 00:17:48,880
go laying java

501
00:17:48,880 --> 00:17:52,160
and cosplay node and ph php

502
00:17:52,160 --> 00:17:54,240
okay felipe i would like to do this demo

503
00:17:54,240 --> 00:17:55,440
after your presentation

504
00:17:55,440 --> 00:17:57,440
no worries you can see here these

505
00:17:57,440 --> 00:18:00,000
informations in my github here

506
00:18:00,000 --> 00:18:03,679
not here it's here okay philip

507
00:18:03,679 --> 00:18:06,960
86 or

508
00:18:06,960 --> 00:18:10,320
dash or other sec dash damn sorry

509
00:18:10,320 --> 00:18:12,799
and here all those codes vulnerable

510
00:18:12,799 --> 00:18:14,160
right so go lane

511
00:18:14,160 --> 00:18:17,360
slash api and here we have different

512
00:18:17,360 --> 00:18:20,559
um codes vulnerable right so here it's

513
00:18:20,559 --> 00:18:23,039
my github if you'd like to see something

514
00:18:23,039 --> 00:18:24,640
you have many repositories and

515
00:18:24,640 --> 00:18:26,320
informations about me

516
00:18:26,320 --> 00:18:29,520
too right so uh here it's a very

517
00:18:29,520 --> 00:18:30,720
interesting if you

518
00:18:30,720 --> 00:18:32,720
remember here it's like it helped from

519
00:18:32,720 --> 00:18:34,480
this project right you can afford the

520
00:18:34,480 --> 00:18:35,520
project you can

521
00:18:35,520 --> 00:18:38,480
you know uh suggest some improvements

522
00:18:38,480 --> 00:18:40,160
right so it's here

523
00:18:40,160 --> 00:18:42,000
and here if you'd like to make another

524
00:18:42,000 --> 00:18:43,600
different task

525
00:18:43,600 --> 00:18:46,720
you have here one folder called

526
00:18:46,720 --> 00:18:49,120
example as you can see here if you click

527
00:18:49,120 --> 00:18:50,000
here you can

528
00:18:50,000 --> 00:18:52,400
find many others example of the

529
00:18:52,400 --> 00:18:53,200
vulnerable

530
00:18:53,200 --> 00:18:56,080
code right so just suggest you if you'd

531
00:18:56,080 --> 00:18:56,880
like to

532
00:18:56,880 --> 00:18:59,600
works right if you can practice your in

533
00:18:59,600 --> 00:19:00,320
this way

534
00:19:00,320 --> 00:19:03,360
okay let me install their site here let

535
00:19:03,360 --> 00:19:05,280
me return the documentations here

536
00:19:05,280 --> 00:19:08,320
not here let me close here it's okay

537
00:19:08,320 --> 00:19:10,799
installations process okay twist our sex

538
00:19:10,799 --> 00:19:12,960
cli or macos in linux

539
00:19:12,960 --> 00:19:14,960
you can execute this okay i will cop

540
00:19:14,960 --> 00:19:16,640
this as you can see

541
00:19:16,640 --> 00:19:21,760
copy and i pass here let me

542
00:19:22,400 --> 00:19:25,039
pass selection here and as you can see

543
00:19:25,039 --> 00:19:26,160
it's very simple

544
00:19:26,160 --> 00:19:29,840
some curl with some you know flags here

545
00:19:29,840 --> 00:19:32,720
in the url url to install to call the

546
00:19:32,720 --> 00:19:33,600
script

547
00:19:33,600 --> 00:19:36,880
and call the bash and request the last

548
00:19:36,880 --> 00:19:39,600
latest version right so i click enter

549
00:19:39,600 --> 00:19:41,600
and after that i will download the rsac

550
00:19:41,600 --> 00:19:42,559
in my environment

551
00:19:42,559 --> 00:19:44,960
and of course this is my user don't have

552
00:19:44,960 --> 00:19:46,480
some privilege to access

553
00:19:46,480 --> 00:19:50,080
i think it's more safe right

554
00:19:50,320 --> 00:19:53,440
okay oh something wrong because i always

555
00:19:53,440 --> 00:19:54,880
forgot my password i don't know if you

556
00:19:54,880 --> 00:19:56,960
forgot your password but i always forgot

557
00:19:56,960 --> 00:19:58,320
my password okay

558
00:19:58,320 --> 00:20:00,240
our sec was downloaded and take a look

559
00:20:00,240 --> 00:20:01,840
at this very cool

560
00:20:01,840 --> 00:20:04,880
move it to local bean

561
00:20:04,880 --> 00:20:06,799
it's easier to manipulate the

562
00:20:06,799 --> 00:20:08,400
information okay or a sec

563
00:20:08,400 --> 00:20:10,720
oops

564
00:20:11,440 --> 00:20:16,080
or sack i don't know the comments

565
00:20:16,080 --> 00:20:19,840
dash help yes and click enter take a

566
00:20:19,840 --> 00:20:21,200
look this this is a cli

567
00:20:21,200 --> 00:20:23,919
simple cli you can use in two ways right

568
00:20:23,919 --> 00:20:25,120
right so the autosac

569
00:20:25,120 --> 00:20:27,280
using the flags and other stack using a

570
00:20:27,280 --> 00:20:28,799
comma right so

571
00:20:28,799 --> 00:20:31,280
here is available comments for now just

572
00:20:31,280 --> 00:20:32,799
for now because we can improve that

573
00:20:32,799 --> 00:20:34,480
right of course generate

574
00:20:34,480 --> 00:20:36,720
generate of core uh or cycle

575
00:20:36,720 --> 00:20:37,919
configurations

576
00:20:37,919 --> 00:20:41,120
help i use it now here

577
00:20:41,120 --> 00:20:43,679
have about the any comment right and

578
00:20:43,679 --> 00:20:44,799
start

579
00:20:44,799 --> 00:20:47,840
means start there are sex cli inversion

580
00:20:47,840 --> 00:20:51,039
actual actual version install of the

581
00:20:51,039 --> 00:20:53,280
rsac so i can execute this

582
00:20:53,280 --> 00:20:58,320
autosack just confirm the version

583
00:20:58,960 --> 00:21:02,400
the version okay

584
00:21:02,400 --> 00:21:05,200
make sure it's the verse the verse two

585
00:21:05,200 --> 00:21:06,480
dot one dot zero

586
00:21:06,480 --> 00:21:10,159
okay so i see here that i can use the

587
00:21:10,159 --> 00:21:12,720
start here to start our sex cli

588
00:21:12,720 --> 00:21:16,960
okay perfect so that music with this

589
00:21:16,960 --> 00:21:20,159
or sec start start what

590
00:21:20,159 --> 00:21:23,280
i don't know let me again

591
00:21:23,280 --> 00:21:26,240
help take a look this many different

592
00:21:26,240 --> 00:21:27,600
flags here so i

593
00:21:27,600 --> 00:21:30,640
this is the use usage

594
00:21:30,640 --> 00:21:32,400
usage and here you can use the eight

595
00:21:32,400 --> 00:21:33,679
examples right

596
00:21:33,679 --> 00:21:37,840
so uh take a look this is starter

597
00:21:37,840 --> 00:21:40,559
sec analysis in the current path it

598
00:21:40,559 --> 00:21:41,200
means if

599
00:21:41,200 --> 00:21:45,360
i don't put any uh flags

600
00:21:45,360 --> 00:21:47,520
they are psychic view as it could in the

601
00:21:47,520 --> 00:21:48,720
exactly

602
00:21:48,720 --> 00:21:51,360
currently currently uh current path

603
00:21:51,360 --> 00:21:53,760
right so it means in this case in this

604
00:21:53,760 --> 00:21:54,159
path

605
00:21:54,159 --> 00:21:56,960
right in this folder or project whatever

606
00:21:56,960 --> 00:21:57,440
right

607
00:21:57,440 --> 00:21:59,120
so okay another example of course we

608
00:21:59,120 --> 00:22:00,480
have many examples

609
00:22:00,480 --> 00:22:03,280
but i just talked about something some

610
00:22:03,280 --> 00:22:04,159
uh flags

611
00:22:04,159 --> 00:22:07,600
in this case uh the a right so it's at

612
00:22:07,600 --> 00:22:10,080
authorization strings the authorization

613
00:22:10,080 --> 00:22:11,520
talk from the rsac

614
00:22:11,520 --> 00:22:15,440
api for example after you perform your

615
00:22:15,440 --> 00:22:17,919
scan in your code you can send all these

616
00:22:17,919 --> 00:22:20,000
codes or none though this codes

617
00:22:20,000 --> 00:22:25,039
or these uh all those one arrays founded

618
00:22:25,039 --> 00:22:27,679
in your code to send to their site

619
00:22:27,679 --> 00:22:29,679
manager because we have a manager

620
00:22:29,679 --> 00:22:31,919
to manage this whenever it's just not a

621
00:22:31,919 --> 00:22:34,240
code right the vulnerabilities

622
00:22:34,240 --> 00:22:36,240
found right so it's very important to

623
00:22:36,240 --> 00:22:37,520
just to clarify

624
00:22:37,520 --> 00:22:41,039
okay another point is related to this

625
00:22:41,039 --> 00:22:44,799
dash o in this case it's output format

626
00:22:44,799 --> 00:22:47,360
right output that format string the

627
00:22:47,360 --> 00:22:50,080
format for the output to be sewn

628
00:22:50,080 --> 00:22:52,880
shown options were in the text in s t

629
00:22:52,880 --> 00:22:53,679
dot

630
00:22:53,679 --> 00:22:55,840
json and take a look at this the sonar

631
00:22:55,840 --> 00:22:56,720
cube

632
00:22:56,720 --> 00:22:59,039
you know maybe you are you are making a

633
00:22:59,039 --> 00:23:01,039
question to you so philippe i like to

634
00:23:01,039 --> 00:23:02,960
use this on my cube in my environment

635
00:23:02,960 --> 00:23:06,000
i work with typesec you know i'm i am a

636
00:23:06,000 --> 00:23:09,679
psych guy and uh my company we

637
00:23:09,679 --> 00:23:13,360
we use that we use um solar cube

638
00:23:13,360 --> 00:23:16,240
but sonar cube looks in your quality of

639
00:23:16,240 --> 00:23:17,039
your software

640
00:23:17,039 --> 00:23:20,080
and of course they have some you know

641
00:23:20,080 --> 00:23:23,360
a security settings in the configuration

642
00:23:23,360 --> 00:23:25,280
some settings in the in the in this one

643
00:23:25,280 --> 00:23:26,960
archival you know exactly

644
00:23:26,960 --> 00:23:29,679
how deeply is the the place called

645
00:23:29,679 --> 00:23:31,280
deciding this configuration

646
00:23:31,280 --> 00:23:34,559
but or sec it was created to

647
00:23:34,559 --> 00:23:36,559
to the community right for a community

648
00:23:36,559 --> 00:23:37,600
but

649
00:23:37,600 --> 00:23:40,640
for a security team

650
00:23:40,640 --> 00:23:43,840
thought uh it was uh thought

651
00:23:43,840 --> 00:23:47,279
in security great way right so it's very

652
00:23:47,279 --> 00:23:48,080
important

653
00:23:48,080 --> 00:23:51,120
to clarify because it's um you know you

654
00:23:51,120 --> 00:23:51,440
can

655
00:23:51,440 --> 00:23:54,320
use both of them the the tools the sonar

656
00:23:54,320 --> 00:23:55,760
cube to see the quality

657
00:23:55,760 --> 00:23:58,880
in our site to see the security

658
00:23:58,880 --> 00:24:01,440
right and another interesting uh flag

659
00:24:01,440 --> 00:24:02,159
here it's

660
00:24:02,159 --> 00:24:06,240
it's here dash e

661
00:24:06,480 --> 00:24:08,480
right because it's in this case written

662
00:24:08,480 --> 00:24:10,640
award the returning airport is the

663
00:24:10,640 --> 00:24:11,520
option to check

664
00:24:11,520 --> 00:24:14,960
if you can return exit to one

665
00:24:14,960 --> 00:24:17,200
it means for example if i would like to

666
00:24:17,200 --> 00:24:19,279
put this in my pipeline for example to

667
00:24:19,279 --> 00:24:21,200
see that that's this life cycle do you

668
00:24:21,200 --> 00:24:22,799
remember that explaining that this

669
00:24:22,799 --> 00:24:24,000
that's dlc

670
00:24:24,000 --> 00:24:26,240
okay i can put this in my youtube

671
00:24:26,240 --> 00:24:27,679
reaction for example

672
00:24:27,679 --> 00:24:31,440
if i receive this as if one for example

673
00:24:31,440 --> 00:24:32,400
i if

674
00:24:32,400 --> 00:24:34,480
found some vulnerability you know it's

675
00:24:34,480 --> 00:24:35,520
uh

676
00:24:35,520 --> 00:24:38,880
i can set for example here take a look

677
00:24:38,880 --> 00:24:40,799
the explanation if i found

678
00:24:40,799 --> 00:24:44,559
vulnerabilities i can break

679
00:24:44,559 --> 00:24:46,960
you know i can break my uh pipeline

680
00:24:46,960 --> 00:24:47,600
because

681
00:24:47,600 --> 00:24:50,159
my code was vulnerable right so i just

682
00:24:50,159 --> 00:24:51,200
set the

683
00:24:51,200 --> 00:24:54,640
uh dash e equal true

684
00:24:54,640 --> 00:24:57,919
because if is true in this case

685
00:24:57,919 --> 00:25:00,960
it means the code it was vulnerable

686
00:25:00,960 --> 00:25:03,279
right so it's like if i put here false

687
00:25:03,279 --> 00:25:06,480
in this case it is zero in this case the

688
00:25:06,480 --> 00:25:09,520
pipeline can go on right so that's very

689
00:25:09,520 --> 00:25:10,080
important

690
00:25:10,080 --> 00:25:14,320
okay perfect you you explain

691
00:25:14,320 --> 00:25:16,480
i think i explained something so take a

692
00:25:16,480 --> 00:25:18,080
look at this i have

693
00:25:18,080 --> 00:25:22,320
uh four three four no five five folders

694
00:25:22,320 --> 00:25:22,880
here

695
00:25:22,880 --> 00:25:26,320
and i use include so now the rsac start

696
00:25:26,320 --> 00:25:28,559
and i can i just click enter here take a

697
00:25:28,559 --> 00:25:30,159
look this the folder selector

698
00:25:30,159 --> 00:25:33,760
is it's my my folder here

699
00:25:33,760 --> 00:25:37,520
and or sac dash demo proceed

700
00:25:37,520 --> 00:25:40,159
yes oh no and yes if i pulled for

701
00:25:40,159 --> 00:25:41,360
example

702
00:25:41,360 --> 00:25:44,640
uh dash p i need to set the the real

703
00:25:44,640 --> 00:25:45,120
path

704
00:25:45,120 --> 00:25:47,679
right for example if i would like to

705
00:25:47,679 --> 00:25:50,080
scan

706
00:25:50,080 --> 00:25:52,159
to perform this scanning another path i

707
00:25:52,159 --> 00:25:53,440
just put dash

708
00:25:53,440 --> 00:25:56,960
p equal and i need to select the path

709
00:25:56,960 --> 00:26:00,240
right so i can uh

710
00:26:00,240 --> 00:26:02,240
execute this way right so i just click

711
00:26:02,240 --> 00:26:03,440
enter and

712
00:26:03,440 --> 00:26:07,200
now when we started the rsac

713
00:26:07,200 --> 00:26:10,159
is coming in my project in this case

714
00:26:10,159 --> 00:26:14,000
this is the name of this project right

715
00:26:14,480 --> 00:26:16,000
so guys if you have any questions you

716
00:26:16,000 --> 00:26:18,240
can send in its channel i think

717
00:26:18,240 --> 00:26:21,200
if i am correctly and uh i'm totally

718
00:26:21,200 --> 00:26:21,840
available

719
00:26:21,840 --> 00:26:24,240
to talk during this scanning because it

720
00:26:24,240 --> 00:26:26,159
but it's fast it's very fast here as you

721
00:26:26,159 --> 00:26:27,200
can see

722
00:26:27,200 --> 00:26:30,320
so if you see here the oroseki created

723
00:26:30,320 --> 00:26:34,080
some dock or sec uh file just to

724
00:26:34,080 --> 00:26:37,039
uh during this study right and after

725
00:26:37,039 --> 00:26:38,000
that the

726
00:26:38,000 --> 00:26:41,360
the file is delete deleted

727
00:26:41,360 --> 00:26:44,480
um okay our second and the analysis with

728
00:26:44,480 --> 00:26:45,919
is that

729
00:26:45,919 --> 00:26:48,400
and why because we found some

730
00:26:48,400 --> 00:26:50,080
vulnerabilities right with the

731
00:26:50,080 --> 00:26:53,520
following results uh we starting this

732
00:26:53,520 --> 00:26:54,320
time

733
00:26:54,320 --> 00:26:57,520
right and finishing this time so i think

734
00:26:57,520 --> 00:26:59,520
it's uh

735
00:26:59,520 --> 00:27:02,159
30 minutes 30 i think 30 minutes right

736
00:27:02,159 --> 00:27:02,880
so

737
00:27:02,880 --> 00:27:05,200
let's see the logs very important so you

738
00:27:05,200 --> 00:27:06,640
can see here the language

739
00:27:06,640 --> 00:27:09,440
it's java and here's the in here the

740
00:27:09,440 --> 00:27:10,240
severity

741
00:27:10,240 --> 00:27:13,520
right so but philippia what

742
00:27:13,520 --> 00:27:16,720
what is the the savage that you have

743
00:27:16,720 --> 00:27:18,960
inside of the other side here

744
00:27:18,960 --> 00:27:21,840
nice question you can see here for

745
00:27:21,840 --> 00:27:23,200
example in a

746
00:27:23,200 --> 00:27:25,039
glossary you can see here the

747
00:27:25,039 --> 00:27:27,120
explanation of it means the security

748
00:27:27,120 --> 00:27:28,080
brexit in the

749
00:27:28,080 --> 00:27:31,360
project in and can cause some damage yes

750
00:27:31,360 --> 00:27:32,240
of course we

751
00:27:32,240 --> 00:27:35,279
are in the security event of course if

752
00:27:35,279 --> 00:27:36,799
you found some whoever it's

753
00:27:36,799 --> 00:27:40,399
it's it's maybe call can cause some

754
00:27:40,399 --> 00:27:42,080
damage right into the system or the

755
00:27:42,080 --> 00:27:43,440
organization

756
00:27:43,440 --> 00:27:46,320
or sec can identify six types of the

757
00:27:46,320 --> 00:27:48,320
security brush it's very interesting

758
00:27:48,320 --> 00:27:50,799
it's almost the same it's it's a similar

759
00:27:50,799 --> 00:27:52,640
it's very similar when you

760
00:27:52,640 --> 00:27:55,200
think about the the my tree not nitrogen

761
00:27:55,200 --> 00:27:56,880
and cve for example

762
00:27:56,880 --> 00:27:59,440
if you are uh if you would like to

763
00:27:59,440 --> 00:28:01,279
reduce some cveig

764
00:28:01,279 --> 00:28:03,760
it's usually using the same uh almost

765
00:28:03,760 --> 00:28:05,919
the same

766
00:28:05,919 --> 00:28:07,440
meaning right so we have the first the

767
00:28:07,440 --> 00:28:09,600
critical high medium

768
00:28:09,600 --> 00:28:12,640
low info it means it's a warning no you

769
00:28:12,640 --> 00:28:13,440
know you don't

770
00:28:13,440 --> 00:28:16,559
it's not classified by low or you know

771
00:28:16,559 --> 00:28:20,240
medium it's just an info warning

772
00:28:20,240 --> 00:28:22,799
and maybe you won't know what what that

773
00:28:22,799 --> 00:28:24,080
means no no it's a zero they know it's

774
00:28:24,080 --> 00:28:24,480
not a

775
00:28:24,480 --> 00:28:26,640
zero day of course but probably the

776
00:28:26,640 --> 00:28:27,840
aging don't

777
00:28:27,840 --> 00:28:30,559
you know identify what it is exactly

778
00:28:30,559 --> 00:28:31,679
it's not an info

779
00:28:31,679 --> 00:28:34,720
it's not uh it's not clear it's not a ah

780
00:28:34,720 --> 00:28:38,000
you know a good code but it's

781
00:28:38,000 --> 00:28:41,039
maybe you know it's i know it's not a

782
00:28:41,039 --> 00:28:41,840
zero day

783
00:28:41,840 --> 00:28:44,240
okay just to clarify that right so

784
00:28:44,240 --> 00:28:45,600
that's really returning here in this

785
00:28:45,600 --> 00:28:46,799
case it's high

786
00:28:46,799 --> 00:28:50,000
take a look that this is for my

787
00:28:50,000 --> 00:28:51,840
my site it's very interesting so the

788
00:28:51,840 --> 00:28:53,600
line two column seven

789
00:28:53,600 --> 00:28:57,039
in the code security tools or sec

790
00:28:57,039 --> 00:29:00,240
engine in this case for java confidency

791
00:29:00,240 --> 00:29:00,640
it's

792
00:29:00,640 --> 00:29:04,399
low and here guys you can see the real

793
00:29:04,399 --> 00:29:06,880
file right in this case take a look this

794
00:29:06,880 --> 00:29:07,760
is the

795
00:29:07,760 --> 00:29:10,640
the main project right when i execute

796
00:29:10,640 --> 00:29:11,120
this

797
00:29:11,120 --> 00:29:14,240
scanning or sec dash demo but

798
00:29:14,240 --> 00:29:17,679
here you can find this is the

799
00:29:17,679 --> 00:29:20,159
our sec real is performance this is

800
00:29:20,159 --> 00:29:22,559
cunning all those fires to try and find

801
00:29:22,559 --> 00:29:23,120
some

802
00:29:23,120 --> 00:29:26,320
honorable code inside these project

803
00:29:26,320 --> 00:29:29,679
and he found the app

804
00:29:29,679 --> 00:29:32,960
doc java right code vulnerable import

805
00:29:32,960 --> 00:29:33,919
java

806
00:29:33,919 --> 00:29:36,880
dot until doc randall right why because

807
00:29:36,880 --> 00:29:38,880
in details it's insecure

808
00:29:38,880 --> 00:29:42,159
randall number generate but okay i would

809
00:29:42,159 --> 00:29:43,760
like to see more information about this

810
00:29:43,760 --> 00:29:46,080
vulnerability right so the apps use

811
00:29:46,080 --> 00:29:48,880
any secure random number generate for

812
00:29:48,880 --> 00:29:50,559
more information check out

813
00:29:50,559 --> 00:29:54,640
the cve 30 uh

814
00:29:54,640 --> 00:29:57,919
330 okay and you can click here

815
00:29:57,919 --> 00:29:59,440
if you'd like to see more information

816
00:29:59,440 --> 00:30:02,240
about that because you can

817
00:30:02,240 --> 00:30:05,039
close here okay you can see this

818
00:30:05,039 --> 00:30:06,799
information is not definition by

819
00:30:06,799 --> 00:30:09,120
philippe peters or supernovations or

820
00:30:09,120 --> 00:30:10,080
whatever

821
00:30:10,080 --> 00:30:13,440
it's definitions it's based on the c w

822
00:30:13,440 --> 00:30:17,120
e common weakness enumerations right so

823
00:30:17,120 --> 00:30:18,399
as you can see here the

824
00:30:18,399 --> 00:30:21,200
weakness ide and take a look this it's a

825
00:30:21,200 --> 00:30:22,320
good good good

826
00:30:22,320 --> 00:30:24,159
library to learn not library i don't

827
00:30:24,159 --> 00:30:26,159
know it's the correct name but you know

828
00:30:26,159 --> 00:30:26,799
it's

829
00:30:26,799 --> 00:30:29,679
not library it's a good resource to

830
00:30:29,679 --> 00:30:30,080
learn

831
00:30:30,080 --> 00:30:32,240
more about the security right because

832
00:30:32,240 --> 00:30:34,240
you can hear the parent off

833
00:30:34,240 --> 00:30:36,559
of another vulnerabilities like a

834
00:30:36,559 --> 00:30:38,559
interface entropy for example

835
00:30:38,559 --> 00:30:40,960
and you can clock click here and you can

836
00:30:40,960 --> 00:30:42,240
read more about that

837
00:30:42,240 --> 00:30:43,760
right so you can improve your

838
00:30:43,760 --> 00:30:46,240
knowledgement in security stuffs

839
00:30:46,240 --> 00:30:50,240
right it's very important but these

840
00:30:50,240 --> 00:30:53,440
vulnerability is related at my code

841
00:30:53,440 --> 00:30:57,039
right as we see here in my cli right so

842
00:30:57,039 --> 00:30:59,679
all those explanations here the type is

843
00:30:59,679 --> 00:31:00,559
vulnerability

844
00:31:00,559 --> 00:31:03,919
and here the reference hash it means

845
00:31:03,919 --> 00:31:06,240
we have the reference of this

846
00:31:06,240 --> 00:31:07,600
vunderability

847
00:31:07,600 --> 00:31:10,720
right so it's pretty cool uh

848
00:31:10,720 --> 00:31:12,559
here another it's javascript it's the

849
00:31:12,559 --> 00:31:15,279
same case it's high or sec java

850
00:31:15,279 --> 00:31:17,679
and here below another another language

851
00:31:17,679 --> 00:31:18,880
it's go in this case

852
00:31:18,880 --> 00:31:22,480
right the severity is median line is 23

853
00:31:22,480 --> 00:31:24,240
column seven and take a look at the

854
00:31:24,240 --> 00:31:26,080
security tool is different in this case

855
00:31:26,080 --> 00:31:27,679
it's a gold stack do you remember

856
00:31:27,679 --> 00:31:28,480
goldsack

857
00:31:28,480 --> 00:31:31,519
it's another interesting open source

858
00:31:31,519 --> 00:31:35,360
project to um using that we have inside

859
00:31:35,360 --> 00:31:36,880
the rsac right so

860
00:31:36,880 --> 00:31:40,640
as you can see here the correct file

861
00:31:40,640 --> 00:31:43,840
you to go inside of this path

862
00:31:43,840 --> 00:31:46,799
right and as you can see here the name

863
00:31:46,799 --> 00:31:47,279
is

864
00:31:47,279 --> 00:31:50,240
that it takes off this uh vulnerable

865
00:31:50,240 --> 00:31:50,720
code

866
00:31:50,720 --> 00:31:54,559
is use of weak cryptography

867
00:31:54,559 --> 00:31:57,840
primitive right and uh

868
00:31:57,840 --> 00:32:00,159
in the end of this log take a look this

869
00:32:00,159 --> 00:32:02,159
in these analysis

870
00:32:02,159 --> 00:32:04,159
and a total of the five possible

871
00:32:04,159 --> 00:32:05,760
vulnerabilities were found

872
00:32:05,760 --> 00:32:09,039
and we classify it then it right so

873
00:32:09,039 --> 00:32:12,080
it's a five and you execute this

874
00:32:12,080 --> 00:32:14,559
inside your environment okay but let's

875
00:32:14,559 --> 00:32:15,440
suppose that you

876
00:32:15,440 --> 00:32:18,030
works with um um

877
00:32:18,030 --> 00:32:19,600
[Music]

878
00:32:19,600 --> 00:32:23,279
uh results to the code yes code right

879
00:32:23,279 --> 00:32:24,080
like me

880
00:32:24,080 --> 00:32:27,840
here and here as you can see we have our

881
00:32:27,840 --> 00:32:29,840
sac dash demo it's the same folder right

882
00:32:29,840 --> 00:32:31,120
so i have here

883
00:32:31,120 --> 00:32:34,559
all those codes write and go lang

884
00:32:34,559 --> 00:32:38,559
and java and node.js and php so i can

885
00:32:38,559 --> 00:32:41,919
basically write

886
00:32:41,919 --> 00:32:45,440
here and i have here the extension to

887
00:32:45,440 --> 00:32:48,320
downloading side of my vs code right so

888
00:32:48,320 --> 00:32:51,120
here it's very very useful to use

889
00:32:51,120 --> 00:32:55,360
because you just to click here and

890
00:32:55,360 --> 00:32:57,919
start analysis as you can see here hold

891
00:32:57,919 --> 00:33:00,000
on our sec started to announce in your

892
00:33:00,000 --> 00:33:01,679
code as you can see here

893
00:33:01,679 --> 00:33:04,240
let me close here okay and if you see

894
00:33:04,240 --> 00:33:06,240
here our sex

895
00:33:06,240 --> 00:33:08,320
oops security analysis running it's

896
00:33:08,320 --> 00:33:10,480
running during our talk

897
00:33:10,480 --> 00:33:12,640
our conversation which means it's

898
00:33:12,640 --> 00:33:13,760
running some uh

899
00:33:13,760 --> 00:33:17,600
analysis during these conversations okay

900
00:33:18,399 --> 00:33:20,640
so first of all is a good mystery in the

901
00:33:20,640 --> 00:33:22,960
cli so now i'm excluding the orsak in a

902
00:33:22,960 --> 00:33:24,000
vs code

903
00:33:24,000 --> 00:33:26,799
so you can use in both of them too to

904
00:33:26,799 --> 00:33:27,440
see the

905
00:33:27,440 --> 00:33:29,919
environment so okay let's see here the

906
00:33:29,919 --> 00:33:31,519
first folder java

907
00:33:31,519 --> 00:33:34,159
and take a look this if i just put in my

908
00:33:34,159 --> 00:33:35,039
mouse

909
00:33:35,039 --> 00:33:37,679
above this you can see the explanation

910
00:33:37,679 --> 00:33:38,320
again

911
00:33:38,320 --> 00:33:41,360
you know as you can see here but you can

912
00:33:41,360 --> 00:33:42,880
click here you take a look at this

913
00:33:42,880 --> 00:33:46,880
the real cold guy is the real code here

914
00:33:46,880 --> 00:33:49,600
here is the code vulnerable if i put my

915
00:33:49,600 --> 00:33:50,480
my

916
00:33:50,480 --> 00:33:52,880
just in my mouse here you can see the

917
00:33:52,880 --> 00:33:53,919
insecure

918
00:33:53,919 --> 00:33:56,960
randall number generator right

919
00:33:56,960 --> 00:33:59,360
again here you can see the explanation

920
00:33:59,360 --> 00:34:01,519
the apps uses an insecure

921
00:34:01,519 --> 00:34:04,240
random number generator for more

922
00:34:04,240 --> 00:34:05,120
information

923
00:34:05,120 --> 00:34:10,399
oops check out the cve 330 again

924
00:34:10,399 --> 00:34:12,079
here you can find the information let's

925
00:34:12,079 --> 00:34:13,440
see here another

926
00:34:13,440 --> 00:34:15,599
here injection another here's the

927
00:34:15,599 --> 00:34:17,199
process right so

928
00:34:17,199 --> 00:34:18,960
let me put here using a shell

929
00:34:18,960 --> 00:34:22,560
interpreter when executing eos comments

930
00:34:22,560 --> 00:34:24,639
arbitrary eos common injections gonna

931
00:34:24,639 --> 00:34:25,918
beat where

932
00:34:25,918 --> 00:34:29,520
one more likely when a shell is exponent

933
00:34:29,520 --> 00:34:32,560
rather than a new process so here you

934
00:34:32,560 --> 00:34:32,960
can

935
00:34:32,960 --> 00:34:36,399
found you can find here

936
00:34:36,399 --> 00:34:40,399
the explanation about this um

937
00:34:40,399 --> 00:34:43,599
this vulnerability right so again guys

938
00:34:43,599 --> 00:34:46,879
you can see difference many different

939
00:34:46,879 --> 00:34:49,199
explanations about this one update so

940
00:34:49,199 --> 00:34:51,199
you can imagine if you are a developer

941
00:34:51,199 --> 00:34:54,320
you produce your code you have your code

942
00:34:54,320 --> 00:34:56,560
by the way i have some similar

943
00:34:56,560 --> 00:34:58,240
presentations in my

944
00:34:58,240 --> 00:35:01,359
in there not my zoop channel in this

945
00:35:01,359 --> 00:35:02,960
youtube channel but in portuguese

946
00:35:02,960 --> 00:35:05,040
presentation i probably i will produ are

947
00:35:05,040 --> 00:35:06,400
you

948
00:35:06,400 --> 00:35:09,839
you know i you do a demo similar when i

949
00:35:09,839 --> 00:35:10,480
create my

950
00:35:10,480 --> 00:35:13,599
web page this web page here and i create

951
00:35:13,599 --> 00:35:15,119
this

952
00:35:15,119 --> 00:35:18,800
this web page using you know uh awesome

953
00:35:18,800 --> 00:35:21,200
statistics page i create this and after

954
00:35:21,200 --> 00:35:22,400
that i execute this

955
00:35:22,400 --> 00:35:25,119
uh or sec to analyze to as a good

956
00:35:25,119 --> 00:35:26,079
summary as if

957
00:35:26,079 --> 00:35:28,079
this web page it was vulnerable or not

958
00:35:28,079 --> 00:35:30,160
so i can maybe in the future

959
00:35:30,160 --> 00:35:33,040
to present this to yourself right uh to

960
00:35:33,040 --> 00:35:36,000
to you to understand more about this

961
00:35:36,000 --> 00:35:37,839
in the real quote because here it's just

962
00:35:37,839 --> 00:35:39,760
a a few

963
00:35:39,760 --> 00:35:42,720
uh you know lines about the code it's

964
00:35:42,720 --> 00:35:43,440
not a

965
00:35:43,440 --> 00:35:45,760
completely code written many like here

966
00:35:45,760 --> 00:35:47,119
here it's another

967
00:35:47,119 --> 00:35:48,880
uh interesting because if you remember

968
00:35:48,880 --> 00:35:50,720
here it's uh

969
00:35:50,720 --> 00:35:53,839
in this case it's a a medium because

970
00:35:53,839 --> 00:35:54,480
it's you know

971
00:35:54,480 --> 00:35:57,760
as i mentioned it's a um

972
00:35:57,760 --> 00:35:59,839
a weak clear cryptographic primary

973
00:35:59,839 --> 00:36:02,880
primitive and here you can see

974
00:36:02,880 --> 00:36:05,119
the total code right but it's a small

975
00:36:05,119 --> 00:36:06,560
code actually

976
00:36:06,560 --> 00:36:08,320
okay i explain more about the you know

977
00:36:08,320 --> 00:36:10,240
the cli the vs code

978
00:36:10,240 --> 00:36:12,240
but let's see here another interesting

979
00:36:12,240 --> 00:36:14,240
thing let's suppose

980
00:36:14,240 --> 00:36:18,000
that you have some uh

981
00:36:18,000 --> 00:36:19,680
pipeline is a good in your environment

982
00:36:19,680 --> 00:36:21,680
take a look this we have here the github

983
00:36:21,680 --> 00:36:24,320
actions and as you can see here it's i

984
00:36:24,320 --> 00:36:25,359
don't have any

985
00:36:25,359 --> 00:36:29,119
job as i put in here and or ever right

986
00:36:29,119 --> 00:36:29,440
so

987
00:36:29,440 --> 00:36:32,160
i hit but i hear i have here my code

988
00:36:32,160 --> 00:36:32,640
right

989
00:36:32,640 --> 00:36:34,960
in my environment and i can let's

990
00:36:34,960 --> 00:36:37,599
suppose that i can publish this

991
00:36:37,599 --> 00:36:40,640
in the github but i can publish this

992
00:36:40,640 --> 00:36:43,680
of course not vulnerable perfect okay so

993
00:36:43,680 --> 00:36:46,400
let's return here to the documentations

994
00:36:46,400 --> 00:36:49,440
where is the documentation it's here

995
00:36:49,440 --> 00:36:52,560
okay in a cli extension

996
00:36:52,560 --> 00:36:55,119
id that i explained to you right so

997
00:36:55,119 --> 00:36:55,920
using the

998
00:36:55,920 --> 00:37:00,160
ivs code but here if you see in the cli

999
00:37:00,160 --> 00:37:03,200
installation here

1000
00:37:03,200 --> 00:37:07,200
other way is to execute this in uh

1001
00:37:07,200 --> 00:37:09,920
via image docker right to run this

1002
00:37:09,920 --> 00:37:10,640
command

1003
00:37:10,640 --> 00:37:12,720
and another point is installing

1004
00:37:12,720 --> 00:37:14,960
installation via pipeline

1005
00:37:14,960 --> 00:37:17,280
this type of this installation assures

1006
00:37:17,280 --> 00:37:18,160
that a safe

1007
00:37:18,160 --> 00:37:21,280
in the deliver of your project in

1008
00:37:21,280 --> 00:37:22,880
production right so here this is

1009
00:37:22,880 --> 00:37:23,440
important

1010
00:37:23,440 --> 00:37:26,960
since your sec is added to your pipeline

1011
00:37:26,960 --> 00:37:28,880
so let's suppose that i have i have here

1012
00:37:28,880 --> 00:37:29,920
my pipeline and it

1013
00:37:29,920 --> 00:37:31,839
i you as i could they are setting my

1014
00:37:31,839 --> 00:37:34,560
code before

1015
00:37:34,560 --> 00:37:36,560
to put this in production right so we

1016
00:37:36,560 --> 00:37:37,920
tested

1017
00:37:37,920 --> 00:37:42,079
we tested uh our second github reactions

1018
00:37:42,079 --> 00:37:45,839
aws code built in another circle ci

1019
00:37:45,839 --> 00:37:48,320
and jenks and azure dev spotlight in

1020
00:37:48,320 --> 00:37:50,480
github ci city right so

1021
00:37:50,480 --> 00:37:53,760
ball and all and all those uh pipeline

1022
00:37:53,760 --> 00:37:54,960
you have here the

1023
00:37:54,960 --> 00:37:58,079
uh command as you can see here so but

1024
00:37:58,079 --> 00:38:02,000
let me turn here let me close this this

1025
00:38:02,000 --> 00:38:05,280
and this this another example here in

1026
00:38:05,280 --> 00:38:06,160
this okay

1027
00:38:06,160 --> 00:38:10,079
so let me turn here we if what i need to

1028
00:38:10,079 --> 00:38:12,320
uh to try as i put something inside the

1029
00:38:12,320 --> 00:38:14,320
github box let me click here i need to

1030
00:38:14,320 --> 00:38:15,520
set this workflow

1031
00:38:15,520 --> 00:38:18,320
i need to have this workflow actually

1032
00:38:18,320 --> 00:38:20,000
inside of my environment right i have

1033
00:38:20,000 --> 00:38:21,280
here there are sec

1034
00:38:21,280 --> 00:38:24,640
demo slash dot github i need to create

1035
00:38:24,640 --> 00:38:25,920
this workflow but

1036
00:38:25,920 --> 00:38:29,280
i have i need to have the main file

1037
00:38:29,280 --> 00:38:32,960
called dot eml right not main but

1038
00:38:32,960 --> 00:38:35,760
i can put whatever name i want right and

1039
00:38:35,760 --> 00:38:36,480
i just put

1040
00:38:36,480 --> 00:38:38,320
here main in this case i can put you

1041
00:38:38,320 --> 00:38:40,400
know besides or you know

1042
00:38:40,400 --> 00:38:44,160
uh horosek or whatever

1043
00:38:44,160 --> 00:38:46,400
and here is the standard information

1044
00:38:46,400 --> 00:38:47,680
that i need to put here

1045
00:38:47,680 --> 00:38:50,880
okay let me turn here not here github

1046
00:38:50,880 --> 00:38:51,839
actions

1047
00:38:51,839 --> 00:38:55,599
and okay if i need to create something

1048
00:38:55,599 --> 00:38:57,599
i have here the github and workflow so

1049
00:38:57,599 --> 00:38:59,200
what i need to create here

1050
00:38:59,200 --> 00:39:02,640
the or sec not our second can put

1051
00:39:02,640 --> 00:39:03,440
whatever name

1052
00:39:03,440 --> 00:39:07,040
again eml right

1053
00:39:07,040 --> 00:39:11,040
and i have here in the documentations

1054
00:39:11,040 --> 00:39:14,240
this command let me copy here

1055
00:39:14,240 --> 00:39:17,280
i will copy and i will pass here so i

1056
00:39:17,280 --> 00:39:17,920
will

1057
00:39:17,920 --> 00:39:20,640
call this workflow the names uh security

1058
00:39:20,640 --> 00:39:21,359
pipeline

1059
00:39:21,359 --> 00:39:24,320
this job actually and this this job will

1060
00:39:24,320 --> 00:39:25,440
execute this

1061
00:39:25,440 --> 00:39:28,720
ram this command actually the crow

1062
00:39:28,720 --> 00:39:31,200
as you can see here the same co the same

1063
00:39:31,200 --> 00:39:32,000
command that i

1064
00:39:32,000 --> 00:39:35,839
execute in the beginning right

1065
00:39:35,839 --> 00:39:39,119
to download our sec after that the

1066
00:39:39,119 --> 00:39:41,520
the command call the or sec start write

1067
00:39:41,520 --> 00:39:43,599
to as i could to start our sec

1068
00:39:43,599 --> 00:39:46,880
dash p to set the path right in this

1069
00:39:46,880 --> 00:39:47,760
case

1070
00:39:47,760 --> 00:39:50,400
either the root path downward path but

1071
00:39:50,400 --> 00:39:51,520
the the path that

1072
00:39:51,520 --> 00:39:54,960
this environment have has right

1073
00:39:54,960 --> 00:39:59,119
and dash e in this case is true do you

1074
00:39:59,119 --> 00:40:01,280
remember that i explained it to you

1075
00:40:01,280 --> 00:40:03,920
when we have true in this case why we

1076
00:40:03,920 --> 00:40:06,560
receive the award exit one in this case

1077
00:40:06,560 --> 00:40:10,079
i will break my pipeline right so

1078
00:40:10,079 --> 00:40:13,200
i just save here this or prosec

1079
00:40:13,200 --> 00:40:16,880
doc eml here and i need to

1080
00:40:16,880 --> 00:40:20,560
write what what what i need to do

1081
00:40:20,560 --> 00:40:24,000
i need to let me see

1082
00:40:24,000 --> 00:40:27,280
it works here okay

1083
00:40:27,280 --> 00:40:31,200
it works because i'm using ssh

1084
00:40:31,200 --> 00:40:34,960
access okay so github add

1085
00:40:34,960 --> 00:40:37,920
a new for a new file right so i will

1086
00:40:37,920 --> 00:40:39,119
commit

1087
00:40:39,119 --> 00:40:41,040
this information because i have here

1088
00:40:41,040 --> 00:40:42,720
this new file in my environment i need

1089
00:40:42,720 --> 00:40:43,920
to commit this

1090
00:40:43,920 --> 00:40:47,440
remotely to github right or second demo

1091
00:40:47,440 --> 00:40:50,240
one file change it right so in this case

1092
00:40:50,240 --> 00:40:51,520
exactly for that i

1093
00:40:51,520 --> 00:40:54,240
have been created right so i need to

1094
00:40:54,240 --> 00:40:55,440
push

1095
00:40:55,440 --> 00:40:58,720
this informations to original master

1096
00:40:58,720 --> 00:41:01,920
okay okay so let me click here i need to

1097
00:41:01,920 --> 00:41:05,119
put my password and

1098
00:41:05,119 --> 00:41:09,520
let's see okay heads up

1099
00:41:09,520 --> 00:41:12,079
it was i think it works let me return

1100
00:41:12,079 --> 00:41:12,720
here

1101
00:41:12,720 --> 00:41:15,440
in my github actions i will click here

1102
00:41:15,440 --> 00:41:17,200
you take a look what happened

1103
00:41:17,200 --> 00:41:19,440
wow we have a security pipeline works

1104
00:41:19,440 --> 00:41:20,480
here for us

1105
00:41:20,480 --> 00:41:23,760
okay security demo the name of this flow

1106
00:41:23,760 --> 00:41:27,119
the workflow right if i click here

1107
00:41:27,119 --> 00:41:30,560
i can see my job right so i'm as i put

1108
00:41:30,560 --> 00:41:32,839
in this

1109
00:41:32,839 --> 00:41:34,400
uh

1110
00:41:34,400 --> 00:41:36,400
actions or using this you know the

1111
00:41:36,400 --> 00:41:38,079
similar my pipeline right

1112
00:41:38,079 --> 00:41:40,480
so let me click here and take a look at

1113
00:41:40,480 --> 00:41:42,319
this i will set up the job

1114
00:41:42,319 --> 00:41:45,680
here you know setting the talk and the

1115
00:41:45,680 --> 00:41:47,119
permissions and okay

1116
00:41:47,119 --> 00:41:50,400
using the checkout code run something to

1117
00:41:50,400 --> 00:41:52,000
understand the environment

1118
00:41:52,000 --> 00:41:55,680
and what take a look what happened here

1119
00:41:55,680 --> 00:41:58,800
let me see here what happened

1120
00:41:58,800 --> 00:42:02,079
in the end of this scanning as i

1121
00:42:02,079 --> 00:42:04,000
mentioned to you

1122
00:42:04,000 --> 00:42:09,040
i think it's small okay

1123
00:42:09,520 --> 00:42:11,520
take a look at this process completed

1124
00:42:11,520 --> 00:42:13,520
with exit

1125
00:42:13,520 --> 00:42:16,560
called one in this case my code is

1126
00:42:16,560 --> 00:42:18,880
vulnerable as you can see here and by

1127
00:42:18,880 --> 00:42:21,520
the way i receive hearing my phone

1128
00:42:21,520 --> 00:42:24,000
the message from github right because i

1129
00:42:24,000 --> 00:42:25,680
have a problem in my code

1130
00:42:25,680 --> 00:42:28,640
and take a look this in this case i have

1131
00:42:28,640 --> 00:42:29,359
seven

1132
00:42:29,359 --> 00:42:33,520
possible vulnerabilities the same uh

1133
00:42:33,520 --> 00:42:37,200
scanning executed in my cli

1134
00:42:37,200 --> 00:42:39,440
and let's see here this information take

1135
00:42:39,440 --> 00:42:40,480
a look at this

1136
00:42:40,480 --> 00:42:43,520
run the scan it means as i could the

1137
00:42:43,520 --> 00:42:44,240
curl

1138
00:42:44,240 --> 00:42:47,280
right base cutting after that

1139
00:42:47,280 --> 00:42:51,119
execute this or sec start start dash

1140
00:42:51,119 --> 00:42:54,319
p and dash e

1141
00:42:54,319 --> 00:42:57,440
through if my code is vulnerable

1142
00:42:57,440 --> 00:43:01,359
my pipeline it was

1143
00:43:01,359 --> 00:43:04,400
break broke right so that's very cool

1144
00:43:04,400 --> 00:43:06,800
because you can put or sack in your

1145
00:43:06,800 --> 00:43:07,599
pipeline

1146
00:43:07,599 --> 00:43:10,880
right so okay felipe as i could in the

1147
00:43:10,880 --> 00:43:11,680
three ways

1148
00:43:11,680 --> 00:43:16,399
and a cli and vs code and

1149
00:43:16,800 --> 00:43:19,040
and using a github actions but you have

1150
00:43:19,040 --> 00:43:20,480
a another one

1151
00:43:20,480 --> 00:43:22,800
you have here the web applications it

1152
00:43:22,800 --> 00:43:24,800
means we have a manager

1153
00:43:24,800 --> 00:43:27,280
to manage all these vulnerabilities

1154
00:43:27,280 --> 00:43:28,319
right so

1155
00:43:28,319 --> 00:43:30,319
and take a look it's very simple to

1156
00:43:30,319 --> 00:43:31,839
execute this are you using

1157
00:43:31,839 --> 00:43:35,119
install with a docker compose this is

1158
00:43:35,119 --> 00:43:37,280
the requirements in your environment

1159
00:43:37,280 --> 00:43:38,800
docker compose stocker

1160
00:43:38,800 --> 00:43:41,920
and linux it's very very simple just to

1161
00:43:41,920 --> 00:43:45,119
get copy here get cloning

1162
00:43:45,119 --> 00:43:48,240
in the or sec environment right so let

1163
00:43:48,240 --> 00:43:50,960
me hit turn here

1164
00:43:50,960 --> 00:43:54,400
now you pass here git cloning

1165
00:43:54,400 --> 00:43:58,720
okay okay quit cloning

1166
00:43:58,720 --> 00:44:01,520
and uh url basically this is our site

1167
00:44:01,520 --> 00:44:02,319
platform

1168
00:44:02,319 --> 00:44:05,359
from supernov superit it's a it's a

1169
00:44:05,359 --> 00:44:08,160
negative club okay i will execute this

1170
00:44:08,160 --> 00:44:09,280
and i will download

1171
00:44:09,280 --> 00:44:13,920
this this rsac platform cd or sec

1172
00:44:13,920 --> 00:44:17,599
dash platform enter

1173
00:44:17,599 --> 00:44:21,040
and after that just make install very

1174
00:44:21,040 --> 00:44:24,880
very difficult and after that boom

1175
00:44:24,880 --> 00:44:28,079
the service are all those services and

1176
00:44:28,079 --> 00:44:29,359
dockers

1177
00:44:29,359 --> 00:44:31,520
it will be works right it's very simple

1178
00:44:31,520 --> 00:44:32,880
if you return it here in the

1179
00:44:32,880 --> 00:44:35,040
in the documentation it's very simple

1180
00:44:35,040 --> 00:44:36,079
enter the folder

1181
00:44:36,079 --> 00:44:39,680
you have clone it as i made

1182
00:44:39,680 --> 00:44:42,000
run the command making style in order to

1183
00:44:42,000 --> 00:44:42,720
have all

1184
00:44:42,720 --> 00:44:44,480
web applications because you need to

1185
00:44:44,480 --> 00:44:46,079
have some

1186
00:44:46,079 --> 00:44:48,240
dockers in your environment right so you

1187
00:44:48,240 --> 00:44:50,480
use it with is

1188
00:44:50,480 --> 00:44:52,400
in your environment of course i have

1189
00:44:52,400 --> 00:44:54,480
it's uh already exists because i

1190
00:44:54,480 --> 00:44:57,200
i have some i have doing i've been doing

1191
00:44:57,200 --> 00:44:59,280
this presentations in other events

1192
00:44:59,280 --> 00:45:01,359
and after that access our sex services

1193
00:45:01,359 --> 00:45:02,839
just copy

1194
00:45:02,839 --> 00:45:06,240
here it's a just a for demo

1195
00:45:06,240 --> 00:45:09,280
yeah so you can using

1196
00:45:09,280 --> 00:45:12,079
in your environment

1197
00:45:12,640 --> 00:45:14,960
as you prefer right so we have here our

1198
00:45:14,960 --> 00:45:17,040
sec web page

1199
00:45:17,040 --> 00:45:19,920
you you can go there and you can copy

1200
00:45:19,920 --> 00:45:20,880
this

1201
00:45:20,880 --> 00:45:24,079
please if you using your environment

1202
00:45:24,079 --> 00:45:27,119
change the password please it's very

1203
00:45:27,119 --> 00:45:28,720
important to change this the full

1204
00:45:28,720 --> 00:45:29,680
password

1205
00:45:29,680 --> 00:45:33,520
you know if you don't change

1206
00:45:33,520 --> 00:45:36,720
it's a misconfiguration right so okay

1207
00:45:36,720 --> 00:45:40,800
so okay let me go to this workspace

1208
00:45:40,800 --> 00:45:43,839
let me delete this because i present

1209
00:45:43,839 --> 00:45:44,400
this

1210
00:45:44,400 --> 00:45:47,520
yesterday i think something happened

1211
00:45:47,520 --> 00:45:50,079
expected i have try again but it works

1212
00:45:50,079 --> 00:45:51,920
let me click

1213
00:45:51,920 --> 00:45:55,599
here enter and okay

1214
00:45:55,599 --> 00:45:58,640
so when you uh connect in this in your

1215
00:45:58,640 --> 00:45:59,040
sec

1216
00:45:59,040 --> 00:46:02,400
this is the the real uh web page let me

1217
00:46:02,400 --> 00:46:05,359
connect again here

1218
00:46:06,160 --> 00:46:09,359
just to show you when you

1219
00:46:09,839 --> 00:46:14,400
copy here nice

1220
00:46:14,400 --> 00:46:18,000
i closed here copy them

1221
00:46:18,000 --> 00:46:21,359
look how you this the local page

1222
00:46:21,359 --> 00:46:24,640
i will copy here

1223
00:46:25,040 --> 00:46:29,119
and i will pass here okay

1224
00:46:29,119 --> 00:46:32,240
and now you cop this

1225
00:46:32,240 --> 00:46:34,960
and i will pass here and i will sing it

1226
00:46:34,960 --> 00:46:35,520
and here

1227
00:46:35,520 --> 00:46:38,079
this is the webpage when i was when i

1228
00:46:38,079 --> 00:46:39,119
will be

1229
00:46:39,119 --> 00:46:41,359
logged right so i need to add the

1230
00:46:41,359 --> 00:46:42,800
workspace

1231
00:46:42,800 --> 00:46:46,000
i can call it from this site for example

1232
00:46:46,000 --> 00:46:49,119
and i will add this workspace

1233
00:46:49,119 --> 00:46:52,160
sorry now you add here

1234
00:46:52,160 --> 00:46:56,079
besides i can put some description but

1235
00:46:56,079 --> 00:46:58,720
i don't need to put now i need to click

1236
00:46:58,720 --> 00:47:00,079
here and take a look at this

1237
00:47:00,079 --> 00:47:02,720
i need to i can use the token to

1238
00:47:02,720 --> 00:47:03,920
identify add

1239
00:47:03,920 --> 00:47:07,200
token the

1240
00:47:07,280 --> 00:47:11,119
besides and after that i just click in

1241
00:47:11,119 --> 00:47:12,160
save

1242
00:47:12,160 --> 00:47:15,359
and i can copy this okay

1243
00:47:15,359 --> 00:47:18,160
and after that i can just as i could

1244
00:47:18,160 --> 00:47:18,960
this

1245
00:47:18,960 --> 00:47:22,960
uh again so i can return here

1246
00:47:22,960 --> 00:47:27,280
and go towards seki demo

1247
00:47:27,280 --> 00:47:30,559
and i can click here or seki

1248
00:47:30,559 --> 00:47:33,599
start and here i can set do you

1249
00:47:33,599 --> 00:47:39,040
remember dash a equals

1250
00:47:39,040 --> 00:47:43,759
and i passed here the

1251
00:47:44,640 --> 00:47:47,118
okay

1252
00:47:48,000 --> 00:47:52,400
i just need to pass here

1253
00:47:52,400 --> 00:47:55,760
and after that all those vulnerabilities

1254
00:47:55,760 --> 00:47:58,400
we will be

1255
00:47:58,880 --> 00:48:02,480
send sent to this manager as you can see

1256
00:48:02,480 --> 00:48:03,599
here

1257
00:48:03,599 --> 00:48:06,319
okay and take a look at this this is a

1258
00:48:06,319 --> 00:48:06,880
good

1259
00:48:06,880 --> 00:48:09,200
point because if you have a good team

1260
00:48:09,200 --> 00:48:10,880
with many developers

1261
00:48:10,880 --> 00:48:12,880
you can see for example during the week

1262
00:48:12,880 --> 00:48:14,000
during the day

1263
00:48:14,000 --> 00:48:17,520
or during a month for example uh

1264
00:48:17,520 --> 00:48:20,880
what kind of language it has more

1265
00:48:20,880 --> 00:48:23,440
vulnerable codes for example for it is

1266
00:48:23,440 --> 00:48:25,040
for example javascript

1267
00:48:25,040 --> 00:48:27,680
uh the manager can generate some can

1268
00:48:27,680 --> 00:48:29,359
suggest some training with

1269
00:48:29,359 --> 00:48:31,280
a secure development to a job for

1270
00:48:31,280 --> 00:48:32,640
example right

1271
00:48:32,640 --> 00:48:34,319
and it's very interesting let me click

1272
00:48:34,319 --> 00:48:36,319
here in workspace

1273
00:48:36,319 --> 00:48:38,319
in this case not here it's here

1274
00:48:38,319 --> 00:48:39,920
workspace

1275
00:48:39,920 --> 00:48:42,640
and as you can see one developer it's me

1276
00:48:42,640 --> 00:48:43,839
one repository

1277
00:48:43,839 --> 00:48:46,319
and here we can find all vulnerabilities

1278
00:48:46,319 --> 00:48:47,119
hi

1279
00:48:47,119 --> 00:48:50,240
the language javascript javascript

1280
00:48:50,240 --> 00:48:54,240
and here you can find other informations

1281
00:48:54,240 --> 00:48:57,520
like you know javascript high low

1282
00:48:57,520 --> 00:49:00,400
and i need to do some improvements in my

1283
00:49:00,400 --> 00:49:02,480
front change as you can see here

1284
00:49:02,480 --> 00:49:04,079
right and if you click here in

1285
00:49:04,079 --> 00:49:06,160
vulnerabilities um

1286
00:49:06,160 --> 00:49:08,319
not here here actually we have some

1287
00:49:08,319 --> 00:49:09,760
problem here in mind

1288
00:49:09,760 --> 00:49:13,200
probably my environment it was uh

1289
00:49:13,200 --> 00:49:14,720
with some problems some air horse

1290
00:49:14,720 --> 00:49:16,559
because as you can see here i used

1291
00:49:16,559 --> 00:49:18,240
it's another database in other

1292
00:49:18,240 --> 00:49:21,280
presentations but it means you know

1293
00:49:21,280 --> 00:49:23,040
it's very simple all those

1294
00:49:23,040 --> 00:49:25,599
vulnerabilities this one are abilities

1295
00:49:25,599 --> 00:49:28,960
it was it is some this

1296
00:49:28,960 --> 00:49:32,640
bits are sent are sent to this

1297
00:49:32,640 --> 00:49:35,920
uh space and after that you can

1298
00:49:35,920 --> 00:49:38,240
manage it in this case severity you can

1299
00:49:38,240 --> 00:49:39,920
see the severity

1300
00:49:39,920 --> 00:49:43,520
and you can see here all the what is the

1301
00:49:43,520 --> 00:49:47,040
stats for example if you uh

1302
00:49:47,040 --> 00:49:49,920
pass if you send your team and you your

1303
00:49:49,920 --> 00:49:50,400
team

1304
00:49:50,400 --> 00:49:52,880
uh made the improvement of this code you

1305
00:49:52,880 --> 00:49:54,640
can put the correct it

1306
00:49:54,640 --> 00:49:56,880
right so if he is a false positive you

1307
00:49:56,880 --> 00:49:58,000
can click here

1308
00:49:58,000 --> 00:50:00,240
and after that if you risk accept you

1309
00:50:00,240 --> 00:50:01,359
can click here

1310
00:50:01,359 --> 00:50:03,839
and usually when you have here the

1311
00:50:03,839 --> 00:50:05,119
vulnerabilities this is

1312
00:50:05,119 --> 00:50:08,240
the correct stats right so

1313
00:50:08,240 --> 00:50:11,440
here i finish my presentation guys again

1314
00:50:11,440 --> 00:50:14,800
thank you so much um

1315
00:50:14,800 --> 00:50:16,880
i don't know if you have some question

1316
00:50:16,880 --> 00:50:18,960
let me close here my video

1317
00:50:18,960 --> 00:50:21,119
and i finished my presentations here

1318
00:50:21,119 --> 00:50:22,880
again i hope

1319
00:50:22,880 --> 00:50:26,559
this um presentation

1320
00:50:26,559 --> 00:50:29,520
it will be helpful for you and here i

1321
00:50:29,520 --> 00:50:30,480
can see you

1322
00:50:30,480 --> 00:50:34,160
more and managing my

1323
00:50:34,319 --> 00:50:36,000
and again if you have any questions

1324
00:50:36,000 --> 00:50:38,880
please feel free

1325
00:50:38,880 --> 00:50:40,160
yes thank you for your demonstration

1326
00:50:40,160 --> 00:50:42,880
felipe uh uh you presented a great sas

1327
00:50:42,880 --> 00:50:44,400
tool today horosek

1328
00:50:44,400 --> 00:50:46,240
um it was a pleasure and it was nice

1329
00:50:46,240 --> 00:50:47,440
meeting you today um

1330
00:50:47,440 --> 00:50:49,440
remember to hop on discord right after

1331
00:50:49,440 --> 00:50:50,480
if you want to

1332
00:50:50,480 --> 00:50:52,240
talk to our sponsors and community

1333
00:50:52,240 --> 00:50:54,720
organizers also felipe would love to say

1334
00:50:54,720 --> 00:50:56,559
hi to you guys afterwards so just meet

1335
00:50:56,559 --> 00:50:58,160
him in the track one

1336
00:50:58,160 --> 00:51:00,000
in the weeds breakout room thank you for

1337
00:51:00,000 --> 00:51:01,839
attending san antonio besides everybody

1338
00:51:01,839 --> 00:51:03,599
and i hope you guys have a great evening

1339
00:51:03,599 --> 00:51:09,839
thank you felipe thank you bye

1340
00:51:13,500 --> 00:51:16,559
[Music]

1341
00:51:34,290 --> 00:51:44,359
[Music]

1342
00:51:48,839 --> 00:51:50,690
do

1343
00:51:50,690 --> 00:51:53,789
[Music]

1344
00:52:02,150 --> 00:52:05,400
[Music]

1345
00:52:05,760 --> 00:52:07,839
you

