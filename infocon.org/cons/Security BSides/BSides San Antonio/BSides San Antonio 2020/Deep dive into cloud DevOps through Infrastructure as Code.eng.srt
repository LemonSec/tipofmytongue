1
00:00:00,560 --> 00:00:03,280
a little bit background about me so

2
00:00:03,280 --> 00:00:06,799
i am a cloud security researcher with

3
00:00:06,799 --> 00:00:09,760
palo alto networks my research focus in

4
00:00:09,760 --> 00:00:11,040
the past

5
00:00:11,040 --> 00:00:14,920
few years has been around

6
00:00:14,920 --> 00:00:17,840
container devops and

7
00:00:17,840 --> 00:00:21,520
public cloud security and in this talk

8
00:00:21,520 --> 00:00:24,720
i will focus on my research

9
00:00:24,720 --> 00:00:28,160
around the infrastructure security

10
00:00:28,160 --> 00:00:31,439
in public

11
00:00:31,439 --> 00:00:34,559
so in the past when hosting

12
00:00:34,559 --> 00:00:38,800
an e-commerce site like

13
00:00:38,800 --> 00:00:42,000
in in the past few years organizations

14
00:00:42,000 --> 00:00:45,920
are moving rapidly into the cloud space

15
00:00:45,920 --> 00:00:48,800
and in the past when when you create a

16
00:00:48,800 --> 00:00:50,160
website

17
00:00:50,160 --> 00:00:53,600
um using on-prem data center

18
00:00:53,600 --> 00:00:55,840
you know exactly where you store the

19
00:00:55,840 --> 00:00:57,680
data you know exactly

20
00:00:57,680 --> 00:01:00,480
which hard drive actually holds your sql

21
00:01:00,480 --> 00:01:01,840
database

22
00:01:01,840 --> 00:01:04,239
and you know which ethernet cable

23
00:01:04,239 --> 00:01:05,519
actually

24
00:01:05,519 --> 00:01:07,920
direct or transmit your data to the

25
00:01:07,920 --> 00:01:09,200
internet

26
00:01:09,200 --> 00:01:12,400
but when you move to when you move to a

27
00:01:12,400 --> 00:01:13,439
cloud environment

28
00:01:13,439 --> 00:01:16,159
when when your e-commerce site now is

29
00:01:16,159 --> 00:01:16,799
deployed

30
00:01:16,799 --> 00:01:21,040
in in the cloud you have no idea where

31
00:01:21,040 --> 00:01:22,000
your data is

32
00:01:22,000 --> 00:01:24,560
you know your server is accessible from

33
00:01:24,560 --> 00:01:25,759
somewhere

34
00:01:25,759 --> 00:01:28,159
is hosted somewhere and it is accessed

35
00:01:28,159 --> 00:01:30,479
both in the public but

36
00:01:30,479 --> 00:01:33,840
all over in the world but you just have

37
00:01:33,840 --> 00:01:37,119
very limited visibility to uh

38
00:01:37,119 --> 00:01:41,439
to to under the to what's going on

39
00:01:41,439 --> 00:01:44,640
below your application so as a system at

40
00:01:44,640 --> 00:01:45,600
the mean

41
00:01:45,600 --> 00:01:49,040
how can you protect your application

42
00:01:49,040 --> 00:01:52,159
or your data in the cloud

43
00:01:52,159 --> 00:01:55,280
the good news is that the

44
00:01:55,280 --> 00:01:57,520
cloud service provider today take care

45
00:01:57,520 --> 00:01:58,320
of many

46
00:01:58,320 --> 00:02:00,399
heavy lifting and dirty works for you

47
00:02:00,399 --> 00:02:02,320
such as reliability

48
00:02:02,320 --> 00:02:05,520
load balancing and and throughput

49
00:02:05,520 --> 00:02:06,640
optimization

50
00:02:06,640 --> 00:02:09,840
and they have done a fantastic job

51
00:02:09,840 --> 00:02:11,920
and the second good news is that cloud

52
00:02:11,920 --> 00:02:14,000
service provider also mimics

53
00:02:14,000 --> 00:02:16,239
the on-prem data center as much as

54
00:02:16,239 --> 00:02:17,040
possible

55
00:02:17,040 --> 00:02:20,080
so so that you can configure your cloud

56
00:02:20,080 --> 00:02:21,040
infrastructure

57
00:02:21,040 --> 00:02:23,440
called infrastructure almost identical

58
00:02:23,440 --> 00:02:24,640
to

59
00:02:24,640 --> 00:02:28,560
to your to on-prem data center if you

60
00:02:28,560 --> 00:02:30,879
had one before

61
00:02:30,879 --> 00:02:34,080
and in this talk i will show you how

62
00:02:34,080 --> 00:02:37,280
the infrastructure as code can help you

63
00:02:37,280 --> 00:02:41,200
build a virtual data center much quicker

64
00:02:41,200 --> 00:02:42,080
and cleaner

65
00:02:42,080 --> 00:02:45,040
and it can also be more secure if you do

66
00:02:45,040 --> 00:02:47,200
it

67
00:02:48,840 --> 00:02:50,480
correctly

68
00:02:50,480 --> 00:02:53,599
so the agenda of my talk the first half

69
00:02:53,599 --> 00:02:56,160
will focus on introducing

70
00:02:56,160 --> 00:02:58,879
infrastructure as a goal and the second

71
00:02:58,879 --> 00:02:59,519
half of

72
00:02:59,519 --> 00:03:02,720
focusing for focus on our research

73
00:03:02,720 --> 00:03:05,840
on exploring the

74
00:03:05,840 --> 00:03:09,440
public as well as private infrastructure

75
00:03:09,440 --> 00:03:10,239
as a code

76
00:03:10,239 --> 00:03:14,080
that we can we have access to

77
00:03:14,080 --> 00:03:17,519
we in particular we pour around

78
00:03:17,519 --> 00:03:20,959
500 000 infrastructure

79
00:03:20,959 --> 00:03:23,599
as a code template from the github and

80
00:03:23,599 --> 00:03:26,239
analyze it using our infrastructure

81
00:03:26,239 --> 00:03:29,040
infrastructure iac scanner to identify

82
00:03:29,040 --> 00:03:29,599
to

83
00:03:29,599 --> 00:03:32,480
to understand what are the how people

84
00:03:32,480 --> 00:03:34,080
are using

85
00:03:34,080 --> 00:03:37,440
infrastructure as a code and how secure

86
00:03:37,440 --> 00:03:41,599
these iacs are and in particular we

87
00:03:41,599 --> 00:03:44,959
focus on four type of iacs in our

88
00:03:44,959 --> 00:03:46,879
research we look at the

89
00:03:46,879 --> 00:03:49,920
cloud form aws cloud formation

90
00:03:49,920 --> 00:03:53,120
hd corps terraform and kubernetes emo

91
00:03:53,120 --> 00:03:54,720
files

92
00:03:54,720 --> 00:03:58,080
and finally at the end i will conclude

93
00:03:58,080 --> 00:04:00,560
the talk with some

94
00:04:00,560 --> 00:04:03,280
pattern and anti-pattern to make your

95
00:04:03,280 --> 00:04:06,560
iac more secure

96
00:04:07,920 --> 00:04:10,799
so the broader definition of

97
00:04:10,799 --> 00:04:12,959
infrastructure as a code is the process

98
00:04:12,959 --> 00:04:13,200
of

99
00:04:13,200 --> 00:04:15,599
provisioning and managing computer data

100
00:04:15,599 --> 00:04:16,560
centers to

101
00:04:16,560 --> 00:04:18,798
human readable code as opposed to

102
00:04:18,798 --> 00:04:22,479
physical hardware configuration

103
00:04:22,720 --> 00:04:27,759
so virtually in the past when you have a

104
00:04:27,759 --> 00:04:29,440
on-prem data center

105
00:04:29,440 --> 00:04:32,639
you have a bunch of servers wire with

106
00:04:32,639 --> 00:04:35,919
many ethernet cables nicely

107
00:04:35,919 --> 00:04:39,440
and after years of maintenance

108
00:04:39,440 --> 00:04:43,520
debugging or patching this may

109
00:04:43,520 --> 00:04:46,639
that your your this may how your this is

110
00:04:46,639 --> 00:04:47,600
how your

111
00:04:47,600 --> 00:04:50,400
uh your stereo center may become a

112
00:04:50,400 --> 00:04:51,199
little bit mess

113
00:04:51,199 --> 00:04:53,840
messy maybe not as bad as this picture

114
00:04:53,840 --> 00:04:55,440
but

115
00:04:55,440 --> 00:04:57,680
just more difficult just getting more

116
00:04:57,680 --> 00:04:59,520
difficult to manage when you

117
00:04:59,520 --> 00:05:02,000
when sometimes you need to scale up your

118
00:05:02,000 --> 00:05:04,400
data center to handle more

119
00:05:04,400 --> 00:05:07,919
mail or load or business

120
00:05:08,479 --> 00:05:11,280
and on the right is the virtual database

121
00:05:11,280 --> 00:05:13,120
data center in the cloud

122
00:05:13,120 --> 00:05:16,639
i i i see this as data center in

123
00:05:16,639 --> 00:05:20,080
in in browser because i can literally

124
00:05:20,080 --> 00:05:21,280
configure

125
00:05:21,280 --> 00:05:24,080
and create a data center just by a few

126
00:05:24,080 --> 00:05:24,479
click

127
00:05:24,479 --> 00:05:27,039
a few drop and drop in the browser then

128
00:05:27,039 --> 00:05:28,880
i have a data center ready for me in a

129
00:05:28,880 --> 00:05:30,960
few minutes

130
00:05:30,960 --> 00:05:33,840
so this is like this is this is a

131
00:05:33,840 --> 00:05:34,639
screenshot

132
00:05:34,639 --> 00:05:38,880
from from aws although gui based

133
00:05:38,880 --> 00:05:42,240
uh configuration is is easy

134
00:05:42,240 --> 00:05:45,199
intuitive but it is still challenging if

135
00:05:45,199 --> 00:05:45,840
you have

136
00:05:45,840 --> 00:05:48,080
hundreds or thousands of virtual

137
00:05:48,080 --> 00:05:50,000
machines to manage

138
00:05:50,000 --> 00:05:52,639
that's why that's what infrastructure is

139
00:05:52,639 --> 00:05:55,440
called iac coming to rescue

140
00:05:55,440 --> 00:05:57,680
you can essentially just specify all

141
00:05:57,680 --> 00:05:59,919
your requirement and specification

142
00:05:59,919 --> 00:06:02,400
of the data center in the piece of print

143
00:06:02,400 --> 00:06:03,600
text file

144
00:06:03,600 --> 00:06:05,759
send this plain text the this plain text

145
00:06:05,759 --> 00:06:08,000
file to this tool to your cloud service

146
00:06:08,000 --> 00:06:09,199
provider

147
00:06:09,199 --> 00:06:10,880
and the cloud service provider will

148
00:06:10,880 --> 00:06:12,720
magically create

149
00:06:12,720 --> 00:06:15,520
a fully a full-blown fully functional

150
00:06:15,520 --> 00:06:16,479
data center

151
00:06:16,479 --> 00:06:20,880
for you in just a few minutes

152
00:06:20,880 --> 00:06:24,000
so the concept of iac

153
00:06:24,000 --> 00:06:26,560
is not that new it has been around for

154
00:06:26,560 --> 00:06:28,160
for more than a decade

155
00:06:28,160 --> 00:06:31,440
and there are many many uh different

156
00:06:31,440 --> 00:06:34,479
isc languages

157
00:06:34,479 --> 00:06:36,720
there are mainly two types of different

158
00:06:36,720 --> 00:06:37,919
iic

159
00:06:37,919 --> 00:06:40,080
if we look at the third column the third

160
00:06:40,080 --> 00:06:40,960
column here

161
00:06:40,960 --> 00:06:45,199
the first type is called provisioning

162
00:06:45,199 --> 00:06:48,240
iic this type of iac focus

163
00:06:48,240 --> 00:06:51,919
on focus on creating infrastructure

164
00:06:51,919 --> 00:06:56,000
such as servers and network connection

165
00:06:56,000 --> 00:06:59,360
and this is the main this is the type of

166
00:06:59,360 --> 00:07:02,160
iac that most public cloud service

167
00:07:02,160 --> 00:07:04,639
providers such as aws edger

168
00:07:04,639 --> 00:07:07,520
and google provide and the second type

169
00:07:07,520 --> 00:07:10,560
of is called

170
00:07:10,560 --> 00:07:13,840
configuration management iec this type

171
00:07:13,840 --> 00:07:15,520
of iic

172
00:07:15,520 --> 00:07:18,639
are able to manage

173
00:07:18,639 --> 00:07:21,919
configure or install software

174
00:07:21,919 --> 00:07:25,039
in your server the biggest difference is

175
00:07:25,039 --> 00:07:25,840
the

176
00:07:25,840 --> 00:07:28,840
this type of the this kind of

177
00:07:28,840 --> 00:07:31,599
configuration management iic

178
00:07:31,599 --> 00:07:33,919
usually requires an agent running in

179
00:07:33,919 --> 00:07:35,680
your vm or in your servers

180
00:07:35,680 --> 00:07:38,160
so that that agent can actually

181
00:07:38,160 --> 00:07:39,759
configure all your software

182
00:07:39,759 --> 00:07:42,720
such as your web server your sql server

183
00:07:42,720 --> 00:07:43,280
and

184
00:07:43,280 --> 00:07:46,080
make the patch update for you and it can

185
00:07:46,080 --> 00:07:46,800
do

186
00:07:46,800 --> 00:07:49,599
much more than the provisioning type of

187
00:07:49,599 --> 00:07:50,639
iac

188
00:07:50,639 --> 00:07:53,919
but they they are usually

189
00:07:53,919 --> 00:07:56,960
these two type of ioc have some overlap

190
00:07:56,960 --> 00:07:58,879
but they

191
00:07:58,879 --> 00:08:00,720
they their focus is very different in

192
00:08:00,720 --> 00:08:03,120
this in in our research we focus mainly

193
00:08:03,120 --> 00:08:03,520
on

194
00:08:03,520 --> 00:08:06,560
the provisioning type of iic

195
00:08:06,560 --> 00:08:09,520
uh used in public health or provided by

196
00:08:09,520 --> 00:08:12,319
public health

197
00:08:12,319 --> 00:08:14,639
and what are the features that here are

198
00:08:14,639 --> 00:08:16,800
some important features of the

199
00:08:16,800 --> 00:08:20,000
iic the first it is shareable in and

200
00:08:20,000 --> 00:08:22,000
repeatable this is one of the most

201
00:08:22,000 --> 00:08:24,800
important important advantage of iic

202
00:08:24,800 --> 00:08:25,360
because

203
00:08:25,360 --> 00:08:28,319
as a company you can have you can create

204
00:08:28,319 --> 00:08:29,440
a golden

205
00:08:29,440 --> 00:08:32,399
iac and share with different department

206
00:08:32,399 --> 00:08:32,880
or

207
00:08:32,880 --> 00:08:35,039
different projects and each project can

208
00:08:35,039 --> 00:08:36,559
then create

209
00:08:36,559 --> 00:08:41,360
an identical they virtualize data center

210
00:08:41,360 --> 00:08:43,919
for this for for each specific project

211
00:08:43,919 --> 00:08:45,120
so it's shareable

212
00:08:45,120 --> 00:08:48,480
and can be repeatable and the second

213
00:08:48,480 --> 00:08:51,200
property of ios is modulized component

214
00:08:51,200 --> 00:08:51,519
so

215
00:08:51,519 --> 00:08:55,440
a a data center can be built

216
00:08:55,440 --> 00:08:57,920
with more with multiple smaller piece of

217
00:08:57,920 --> 00:08:59,200
iac code

218
00:08:59,200 --> 00:09:02,880
and this isc code or ise module works

219
00:09:02,880 --> 00:09:03,440
just like

220
00:09:03,440 --> 00:09:06,720
you're just just like a software library

221
00:09:06,720 --> 00:09:09,839
it can be shared and it can be reused

222
00:09:09,839 --> 00:09:13,360
and this makes enforcing policy

223
00:09:13,360 --> 00:09:18,160
or or standardization much easier

224
00:09:18,160 --> 00:09:21,519
and also making creating a new

225
00:09:21,519 --> 00:09:24,480
data center much easier and the third

226
00:09:24,480 --> 00:09:25,680
feature

227
00:09:25,680 --> 00:09:29,120
of ise is ic makes the process

228
00:09:29,120 --> 00:09:32,160
more agile makes

229
00:09:32,160 --> 00:09:35,120
testing easier this is because the data

230
00:09:35,120 --> 00:09:37,040
sensor can now be created

231
00:09:37,040 --> 00:09:40,320
easily and quickly one can replicate

232
00:09:40,320 --> 00:09:43,120
an identical production environment to

233
00:09:43,120 --> 00:09:44,080
test

234
00:09:44,080 --> 00:09:47,360
what one can easily replicate in

235
00:09:47,360 --> 00:09:50,320
a production environment to test a new

236
00:09:50,320 --> 00:09:51,360
code

237
00:09:51,360 --> 00:09:53,600
so in the past we all have experienced

238
00:09:53,600 --> 00:09:57,040
that a piece of code

239
00:09:57,040 --> 00:10:00,160
45 our piece of code is fully functional

240
00:10:00,160 --> 00:10:02,560
in the depth environment but when this

241
00:10:02,560 --> 00:10:04,240
code is moved to the production

242
00:10:04,240 --> 00:10:05,120
environment

243
00:10:05,120 --> 00:10:08,480
it just failed horribly and

244
00:10:08,480 --> 00:10:10,240
most of the time the reason is that

245
00:10:10,240 --> 00:10:12,320
there is a drift between

246
00:10:12,320 --> 00:10:13,760
your deaf environment and your

247
00:10:13,760 --> 00:10:15,920
production environment your product your

248
00:10:15,920 --> 00:10:16,880
production your

249
00:10:16,880 --> 00:10:19,519
environment is not identical to your dev

250
00:10:19,519 --> 00:10:21,040
environment so that

251
00:10:21,040 --> 00:10:23,360
the one piece of code may work in depth

252
00:10:23,360 --> 00:10:25,120
but doesn't work in the production

253
00:10:25,120 --> 00:10:28,640
environment with iac we can easily

254
00:10:28,640 --> 00:10:32,240
remediate this issue because as each iac

255
00:10:32,240 --> 00:10:34,880
can create multiple identical

256
00:10:34,880 --> 00:10:36,079
environment

257
00:10:36,079 --> 00:10:38,880
and if anything goes wrong in your

258
00:10:38,880 --> 00:10:41,519
production or in your dev environment or

259
00:10:41,519 --> 00:10:43,600
or if anything any configuration is

260
00:10:43,600 --> 00:10:45,040
screwed up you can

261
00:10:45,040 --> 00:10:48,560
easily just destroy the destroy the

262
00:10:48,560 --> 00:10:49,839
existing

263
00:10:49,839 --> 00:10:52,720
environment and recreate one quickly so

264
00:10:52,720 --> 00:10:54,320
that's the beauty of the

265
00:10:54,320 --> 00:10:58,160
isc and the last one statistic

266
00:10:58,160 --> 00:11:00,880
analysis this is this is what our focus

267
00:11:00,880 --> 00:11:02,480
is

268
00:11:02,480 --> 00:11:06,160
uh before going to the study the study

269
00:11:06,160 --> 00:11:09,120
analysis on iic let me first uh talk

270
00:11:09,120 --> 00:11:11,279
about a little bit about the shift left

271
00:11:11,279 --> 00:11:13,839
the concept of of the shift that again

272
00:11:13,839 --> 00:11:14,640
is

273
00:11:14,640 --> 00:11:18,160
is not new it means focus on moving the

274
00:11:18,160 --> 00:11:18,720
test

275
00:11:18,720 --> 00:11:21,279
as early as possible in software

276
00:11:21,279 --> 00:11:22,880
development life cycle

277
00:11:22,880 --> 00:11:24,959
with the goal of preventing issue

278
00:11:24,959 --> 00:11:29,680
instead of detecting issues

279
00:11:29,680 --> 00:11:33,600
so instead of passing your code

280
00:11:33,600 --> 00:11:35,920
testing your code at the last stage of

281
00:11:35,920 --> 00:11:37,440
development

282
00:11:37,440 --> 00:11:40,399
shifting left encourage you to test

283
00:11:40,399 --> 00:11:41,600
incrementally

284
00:11:41,600 --> 00:11:44,399
test a small each small piece of your

285
00:11:44,399 --> 00:11:45,600
code or a function

286
00:11:45,600 --> 00:11:48,079
as early as possible to identify and

287
00:11:48,079 --> 00:11:49,120
address the issues

288
00:11:49,120 --> 00:11:51,200
as early as possible and when the

289
00:11:51,200 --> 00:11:53,839
concept is applied to the security

290
00:11:53,839 --> 00:11:56,480
it means we want to identify the

291
00:11:56,480 --> 00:11:57,680
security issue

292
00:11:57,680 --> 00:12:01,279
as early as possible and instead of

293
00:12:01,279 --> 00:12:04,480
scanning your entire application before

294
00:12:04,480 --> 00:12:06,720
deploying to the production this is how

295
00:12:06,720 --> 00:12:07,680
we what how we

296
00:12:07,680 --> 00:12:11,040
how how we scan for our

297
00:12:11,040 --> 00:12:14,480
abilities in the past now with the

298
00:12:14,480 --> 00:12:16,399
concept of shift that we want to

299
00:12:16,399 --> 00:12:20,160
scan we want to add we want to identify

300
00:12:20,160 --> 00:12:23,839
the security issue at the developer

301
00:12:23,839 --> 00:12:25,360
development stage

302
00:12:25,360 --> 00:12:29,760
we want to install ide plugin

303
00:12:29,760 --> 00:12:32,880
to identify the security issue

304
00:12:32,880 --> 00:12:35,839
even when the developers are writing the

305
00:12:35,839 --> 00:12:36,480
code

306
00:12:36,480 --> 00:12:39,920
so this issue can be addressed and

307
00:12:39,920 --> 00:12:40,480
removed

308
00:12:40,480 --> 00:12:43,519
as early as possible and never get into

309
00:12:43,519 --> 00:12:48,880
the the the development pipeline

310
00:12:48,880 --> 00:12:50,959
and when talking about when talking

311
00:12:50,959 --> 00:12:52,079
about shift left

312
00:12:52,079 --> 00:12:55,760
most people think about uh identify

313
00:12:55,760 --> 00:12:58,880
the vulnerability the vulnerable package

314
00:12:58,880 --> 00:13:01,680
the vulnerable applications in the

315
00:13:01,680 --> 00:13:03,040
software development

316
00:13:03,040 --> 00:13:06,800
type 9 but now with infrastructure as a

317
00:13:06,800 --> 00:13:07,200
code

318
00:13:07,200 --> 00:13:09,519
we can also talk about we can also think

319
00:13:09,519 --> 00:13:10,320
about

320
00:13:10,320 --> 00:13:13,519
how can we make the infrastructure

321
00:13:13,519 --> 00:13:16,959
secure much earlier instead of building

322
00:13:16,959 --> 00:13:19,279
instead of finding the misconfigured

323
00:13:19,279 --> 00:13:20,160
infrastructure

324
00:13:20,160 --> 00:13:22,959
after the infrastructure infrastructure

325
00:13:22,959 --> 00:13:24,079
has been built

326
00:13:24,079 --> 00:13:26,959
we can with that with iac we can also

327
00:13:26,959 --> 00:13:27,760
look at

328
00:13:27,760 --> 00:13:30,240
the insecure configuration or

329
00:13:30,240 --> 00:13:31,920
vulnerabilities

330
00:13:31,920 --> 00:13:34,959
when as a code we can look at the code

331
00:13:34,959 --> 00:13:37,200
before the code is actually deployed

332
00:13:37,200 --> 00:13:40,399
that's the beauty of iic that allow

333
00:13:40,399 --> 00:13:44,079
security or system domain to identify

334
00:13:44,079 --> 00:13:46,839
any possible misconfiguration or

335
00:13:46,839 --> 00:13:49,440
insecure configuration

336
00:13:49,440 --> 00:13:52,639
before the code is turned into a real

337
00:13:52,639 --> 00:13:55,360
data center

338
00:13:58,720 --> 00:14:02,399
and now i will quickly go over

339
00:14:02,399 --> 00:14:06,480
uh the research that we did in in

340
00:14:06,480 --> 00:14:09,839
early this year so

341
00:14:10,079 --> 00:14:12,399
this research in this research we we

342
00:14:12,399 --> 00:14:13,600
want to understand

343
00:14:13,600 --> 00:14:16,880
how people use iac

344
00:14:16,880 --> 00:14:20,320
so the way we did this in particular we

345
00:14:20,320 --> 00:14:21,519
want to see

346
00:14:21,519 --> 00:14:24,880
are people using iac securely

347
00:14:24,880 --> 00:14:28,160
and if the the

348
00:14:28,160 --> 00:14:31,440
obvious answer is not quite no it's

349
00:14:31,440 --> 00:14:35,279
not it's no uh people always

350
00:14:35,279 --> 00:14:37,360
uh they are always in secure

351
00:14:37,360 --> 00:14:38,560
configuration

352
00:14:38,560 --> 00:14:41,600
in any kind of environment and we want

353
00:14:41,600 --> 00:14:42,639
to

354
00:14:42,639 --> 00:14:45,199
understand what are the insecure

355
00:14:45,199 --> 00:14:47,440
configuration or what are the top

356
00:14:47,440 --> 00:14:49,440
the most commonly seen in secure

357
00:14:49,440 --> 00:14:51,600
configuration in iic

358
00:14:51,600 --> 00:14:53,839
so the way we did this research is that

359
00:14:53,839 --> 00:14:55,120
we pull

360
00:14:55,120 --> 00:14:57,839
all the confirmation terraform

361
00:14:57,839 --> 00:15:00,480
kubernetes

362
00:15:00,480 --> 00:15:03,839
iac template that we can we can we can

363
00:15:03,839 --> 00:15:05,760
identify from github there are

364
00:15:05,760 --> 00:15:09,839
around 500 000 this isc template that

365
00:15:09,839 --> 00:15:11,600
they pull from github

366
00:15:11,600 --> 00:15:15,360
and we also pull some of the data from

367
00:15:15,360 --> 00:15:17,120
prismacloud

368
00:15:17,120 --> 00:15:19,600
prismacloud is the cloud security

369
00:15:19,600 --> 00:15:20,560
service

370
00:15:20,560 --> 00:15:23,199
offered by palo alto networks so we have

371
00:15:23,199 --> 00:15:25,519
some internal data as well that we can

372
00:15:25,519 --> 00:15:26,000
we

373
00:15:26,000 --> 00:15:29,120
can we can use so we we we aggregate

374
00:15:29,120 --> 00:15:29,600
this

375
00:15:29,600 --> 00:15:33,839
uh this data into a repository

376
00:15:33,839 --> 00:15:38,959
and design a iac scanner to analyze

377
00:15:38,959 --> 00:15:41,360
to statically analyze this

378
00:15:41,360 --> 00:15:42,399
infrastructure

379
00:15:42,399 --> 00:15:45,680
as a call and finally

380
00:15:45,680 --> 00:15:48,480
and get some statistics out of out of

381
00:15:48,480 --> 00:15:50,800
the data

382
00:15:50,800 --> 00:15:54,639
and behind the scene this is how

383
00:15:54,639 --> 00:15:57,440
uh the scan how our scanner works we

384
00:15:57,440 --> 00:15:58,880
basically

385
00:15:58,880 --> 00:16:01,920
uh create many policies for each type of

386
00:16:01,920 --> 00:16:04,959
infrastructure circle for example on the

387
00:16:04,959 --> 00:16:07,360
top left for cloud formation

388
00:16:07,360 --> 00:16:10,160
this is one of the policy in cloud

389
00:16:10,160 --> 00:16:12,079
formation

390
00:16:12,079 --> 00:16:15,199
this rule written in gold template

391
00:16:15,199 --> 00:16:18,800
identified if an aws

392
00:16:18,800 --> 00:16:21,279
customer master key rotation is not

393
00:16:21,279 --> 00:16:22,720
enabled

394
00:16:22,720 --> 00:16:25,680
and another example of in the terraform

395
00:16:25,680 --> 00:16:27,040
policy on the right

396
00:16:27,040 --> 00:16:29,199
again we can write the template to

397
00:16:29,199 --> 00:16:31,279
identify if azure

398
00:16:31,279 --> 00:16:34,160
keys row base access control is not

399
00:16:34,160 --> 00:16:35,600
enforced

400
00:16:35,600 --> 00:16:39,920
so there are many policies for each iac

401
00:16:39,920 --> 00:16:42,959
and customer

402
00:16:42,959 --> 00:16:47,440
can also write their

403
00:16:47,440 --> 00:16:50,399
customer can also easily add add their

404
00:16:50,399 --> 00:16:51,360
own policy

405
00:16:51,360 --> 00:16:54,240
to the scanner to identify specific

406
00:16:54,240 --> 00:16:56,959
configuration

407
00:16:57,600 --> 00:17:00,880
so the the findings in

408
00:17:00,880 --> 00:17:04,079
in color formation is that we found

409
00:17:04,079 --> 00:17:06,079
42 percent of all the cloud formation

410
00:17:06,079 --> 00:17:07,839
configuration configuration files

411
00:17:07,839 --> 00:17:08,400
contain

412
00:17:08,400 --> 00:17:11,599
at least one insecure configuration

413
00:17:11,599 --> 00:17:15,119
and the two most important findings in

414
00:17:15,119 --> 00:17:17,359
the in in confirmation is first

415
00:17:17,359 --> 00:17:19,839
encryption

416
00:17:21,359 --> 00:17:24,480
people are still not used to

417
00:17:24,480 --> 00:17:26,319
the idea of encrypt everything

418
00:17:26,319 --> 00:17:27,919
especially data at rest

419
00:17:27,919 --> 00:17:32,400
we we have seen very well adaption of

420
00:17:32,400 --> 00:17:33,039
the

421
00:17:33,039 --> 00:17:36,720
https or transmission uh transmission

422
00:17:36,720 --> 00:17:39,679
encryption but a lot of times data are

423
00:17:39,679 --> 00:17:41,520
still not encrypted at rest

424
00:17:41,520 --> 00:17:44,559
so s3 buckets are not

425
00:17:44,559 --> 00:17:46,320
we have seen a lot of history but data

426
00:17:46,320 --> 00:17:48,400
and s3 buckets are not encrypted or

427
00:17:48,400 --> 00:17:52,000
data in rds database are not encrypted

428
00:17:52,000 --> 00:17:54,320
and one may argue that i don't really

429
00:17:54,320 --> 00:17:55,200
need to encrypt

430
00:17:55,200 --> 00:17:57,440
my database because i have already i

431
00:17:57,440 --> 00:17:58,880
already have proper

432
00:17:58,880 --> 00:18:01,120
authentication authentic authentication

433
00:18:01,120 --> 00:18:04,000
or authorization access control

434
00:18:04,000 --> 00:18:08,080
outside this database but

435
00:18:08,480 --> 00:18:10,720
it's always a good idea to have your

436
00:18:10,720 --> 00:18:12,480
data secure at rest

437
00:18:12,480 --> 00:18:15,200
because you never know one day the

438
00:18:15,200 --> 00:18:17,280
snapshot of your database may

439
00:18:17,280 --> 00:18:19,840
may be leaked and if your database is

440
00:18:19,840 --> 00:18:20,799
not encrypted

441
00:18:20,799 --> 00:18:23,919
this snapshot can then be be read

442
00:18:23,919 --> 00:18:27,760
as sprintex and the second finding

443
00:18:27,760 --> 00:18:31,520
is the login and it's just it's logging

444
00:18:31,520 --> 00:18:34,960
or eventing and people are not

445
00:18:34,960 --> 00:18:37,840
turning on the login and event login and

446
00:18:37,840 --> 00:18:38,400
events

447
00:18:38,400 --> 00:18:40,640
are especially important for security

448
00:18:40,640 --> 00:18:41,840
purpose

449
00:18:41,840 --> 00:18:44,640
because you cannot see if you cannot see

450
00:18:44,640 --> 00:18:48,799
you cannot perfect you cannot protect

451
00:18:51,520 --> 00:18:55,840
so suppose your s3 buckets

452
00:18:55,840 --> 00:18:59,039
data in your 3 bucket is is

453
00:18:59,039 --> 00:19:01,760
is leaked without logging you cannot

454
00:19:01,760 --> 00:19:02,240
know

455
00:19:02,240 --> 00:19:06,080
who has access your data

456
00:19:06,080 --> 00:19:09,200
and or what data or what data object

457
00:19:09,200 --> 00:19:11,120
has been accessed you cannot know the

458
00:19:11,120 --> 00:19:14,160
scale of your your security incident

459
00:19:14,160 --> 00:19:17,840
and and yeah so

460
00:19:17,840 --> 00:19:21,760
login is extremely important in terms of

461
00:19:21,760 --> 00:19:25,200
securing auditing and

462
00:19:25,200 --> 00:19:29,280
restoring you cannot only prevent

463
00:19:29,280 --> 00:19:31,600
security incident from happening you can

464
00:19:31,600 --> 00:19:32,320
also

465
00:19:32,320 --> 00:19:35,918
it can it can much

466
00:19:36,080 --> 00:19:39,520
it can it can help you detect

467
00:19:39,520 --> 00:19:41,760
the potential security incident much

468
00:19:41,760 --> 00:19:44,480
earlier as well

469
00:19:45,039 --> 00:19:47,679
and i will not go over the the code

470
00:19:47,679 --> 00:19:49,840
example these are the real code examples

471
00:19:49,840 --> 00:19:53,039
that we found on github that how a

472
00:19:53,039 --> 00:19:56,080
conformation can be misconfigured so and

473
00:19:56,080 --> 00:19:59,360
like for example s3 packet just get

474
00:19:59,360 --> 00:20:01,120
published to the internet

475
00:20:01,120 --> 00:20:03,280
there are some times that for example

476
00:20:03,280 --> 00:20:04,960
web server a lot of time these are

477
00:20:04,960 --> 00:20:06,559
misconfigured and that's how

478
00:20:06,559 --> 00:20:11,280
data get leaked and in the terraform

479
00:20:11,280 --> 00:20:15,039
uh in the terraform i see we found 22

480
00:20:15,039 --> 00:20:16,799
percent of the terraform is confusion

481
00:20:16,799 --> 00:20:18,159
files contain

482
00:20:18,159 --> 00:20:22,159
at least one secure configuration

483
00:20:22,159 --> 00:20:25,200
and the first key finding again is login

484
00:20:25,200 --> 00:20:29,919
event and login and event aw ss3 packets

485
00:20:29,919 --> 00:20:30,400
open

486
00:20:30,400 --> 00:20:33,919
are not enabled or event such

487
00:20:33,919 --> 00:20:34,559
subscription

488
00:20:34,559 --> 00:20:38,080
subscription are disabled this all

489
00:20:38,080 --> 00:20:40,960
prevent this all prevent you from seeing

490
00:20:40,960 --> 00:20:42,559
what is going on what

491
00:20:42,559 --> 00:20:45,760
what has happened in your cloud car

492
00:20:45,760 --> 00:20:47,440
infrastructure

493
00:20:47,440 --> 00:20:50,559
and the second biggest

494
00:20:50,559 --> 00:20:52,880
issue that we found in terraform

495
00:20:52,880 --> 00:20:54,000
template is the

496
00:20:54,000 --> 00:20:56,880
public exposure we see we have seen a

497
00:20:56,880 --> 00:20:59,600
lot of infrastructure just

498
00:20:59,600 --> 00:21:02,720
exposed as service or even

499
00:21:02,720 --> 00:21:07,120
our rbp remote desktop service to the to

500
00:21:07,120 --> 00:21:10,400
to the public sh

501
00:21:10,400 --> 00:21:13,120
is a great service it's convenient but

502
00:21:13,120 --> 00:21:15,360
it is just too risky to be exposed to

503
00:21:15,360 --> 00:21:16,000
the entire

504
00:21:16,000 --> 00:21:19,039
internet if you want to use it

505
00:21:19,039 --> 00:21:21,600
remotely you should just quietly create

506
00:21:21,600 --> 00:21:23,760
a white list of ip that can access to

507
00:21:23,760 --> 00:21:24,640
the

508
00:21:24,640 --> 00:21:27,120
to the service instead of open it to the

509
00:21:27,120 --> 00:21:28,559
entire internet

510
00:21:28,559 --> 00:21:31,600
same as rbp and and database database

511
00:21:31,600 --> 00:21:33,520
there's no good reason to

512
00:21:33,520 --> 00:21:36,080
expose your sql database to the entire

513
00:21:36,080 --> 00:21:37,760
tool to the entire world usually they

514
00:21:37,760 --> 00:21:38,559
are just a

515
00:21:38,559 --> 00:21:41,679
handful of application server need to

516
00:21:41,679 --> 00:21:43,679
access the database directory

517
00:21:43,679 --> 00:21:46,000
and if you if exposed to internet any

518
00:21:46,000 --> 00:21:47,840
hacker can identify and try to poke

519
00:21:47,840 --> 00:21:49,280
around

520
00:21:49,280 --> 00:21:52,960
and finally the the kubernetes

521
00:21:52,960 --> 00:21:56,320
eml file that we scan the uh

522
00:21:56,320 --> 00:21:58,880
so this is the the kubernetes file we

523
00:21:58,880 --> 00:22:00,159
scan

524
00:22:00,159 --> 00:22:03,520
the the two important uh in secure

525
00:22:03,520 --> 00:22:05,679
configuration we identify

526
00:22:05,679 --> 00:22:08,480
uh the first uh first share the host

527
00:22:08,480 --> 00:22:10,159
network with the container

528
00:22:10,159 --> 00:22:13,600
the problem of share the problem of

529
00:22:13,600 --> 00:22:14,400
creating the

530
00:22:14,400 --> 00:22:16,960
container and share the content share

531
00:22:16,960 --> 00:22:17,440
the

532
00:22:17,440 --> 00:22:21,120
host network to the container is that

533
00:22:21,120 --> 00:22:24,240
if this container is is is compromised

534
00:22:24,240 --> 00:22:27,760
due to the application vulnerability

535
00:22:27,760 --> 00:22:30,559
the hater can immediately access the

536
00:22:30,559 --> 00:22:31,440
network stack

537
00:22:31,440 --> 00:22:34,640
and the the same network on your host

538
00:22:34,640 --> 00:22:38,240
and it will put your other application

539
00:22:38,240 --> 00:22:39,120
on the host

540
00:22:39,120 --> 00:22:41,760
as well as other infrastructure access

541
00:22:41,760 --> 00:22:43,120
from the host

542
00:22:43,120 --> 00:22:46,400
into risk so it's a very bad idea to

543
00:22:46,400 --> 00:22:48,000
expose

544
00:22:48,000 --> 00:22:49,360
there are some reasons there are some

545
00:22:49,360 --> 00:22:50,720
times that you need to share the host

546
00:22:50,720 --> 00:22:52,799
network to the container but usually

547
00:22:52,799 --> 00:22:56,320
you shouldn't and the second issue and

548
00:22:56,320 --> 00:22:59,280
we the second important issue that we

549
00:22:59,280 --> 00:23:00,240
identify

550
00:23:00,240 --> 00:23:02,720
is a lot of containers are still are

551
00:23:02,720 --> 00:23:03,760
running

552
00:23:03,760 --> 00:23:06,720
as a root or a privileged container we

553
00:23:06,720 --> 00:23:09,280
all know it's it's a bad idea to

554
00:23:09,280 --> 00:23:12,080
run your application as a route because

555
00:23:12,080 --> 00:23:12,640
uh

556
00:23:12,640 --> 00:23:16,720
if your application is compromised then

557
00:23:16,720 --> 00:23:19,280
the hater gets the root privilege of the

558
00:23:19,280 --> 00:23:19,840
process

559
00:23:19,840 --> 00:23:22,400
and with the root privilege it is much

560
00:23:22,400 --> 00:23:23,679
much easier to

561
00:23:23,679 --> 00:23:27,120
to period from from that point

562
00:23:27,120 --> 00:23:29,840
moving forward

563
00:23:30,880 --> 00:23:35,360
and again this is a example of how

564
00:23:35,360 --> 00:23:38,880
this is how this misconfiguration

565
00:23:38,880 --> 00:23:42,080
looks like in the code and it all

566
00:23:42,080 --> 00:23:46,799
so from just looking at this code

567
00:23:46,799 --> 00:23:49,520
one can imagine it's not too hard to to

568
00:23:49,520 --> 00:23:50,400
statist

569
00:23:50,400 --> 00:23:53,360
to identify this misconfiguration from

570
00:23:53,360 --> 00:23:56,479
static analysis

571
00:23:57,200 --> 00:24:00,240
and finally these are the data port from

572
00:24:00,240 --> 00:24:04,320
our internal database from the

573
00:24:04,320 --> 00:24:07,679
palatal network uh internal service

574
00:24:07,679 --> 00:24:10,880
and interesting interestingly we

575
00:24:10,880 --> 00:24:14,120
identify almost same same kind of

576
00:24:14,120 --> 00:24:17,440
misconfiguration same patterns

577
00:24:17,440 --> 00:24:20,960
in our private data set as uh

578
00:24:20,960 --> 00:24:24,640
when compared to the public dataset 77

579
00:24:24,640 --> 00:24:25,360
to

580
00:24:25,360 --> 00:24:29,279
70 to 76 percent of the

581
00:24:29,279 --> 00:24:32,400
the client have at least one of

582
00:24:32,400 --> 00:24:35,520
the sh service exposed to the entire

583
00:24:35,520 --> 00:24:37,200
into the entire

584
00:24:37,200 --> 00:24:40,320
internet and 69 of the client has at

585
00:24:40,320 --> 00:24:41,679
least one r80p

586
00:24:41,679 --> 00:24:44,400
rdp service exposed to the entire

587
00:24:44,400 --> 00:24:45,200
internet

588
00:24:45,200 --> 00:24:48,240
and the same login event in issue and

589
00:24:48,240 --> 00:24:48,960
the same

590
00:24:48,960 --> 00:24:52,640
encryption data address issue

591
00:24:52,640 --> 00:24:57,039
was identified in internal data

592
00:24:58,400 --> 00:25:02,320
finally uh let me quickly go over what

593
00:25:02,320 --> 00:25:05,440
how we can mitigate these

594
00:25:05,440 --> 00:25:07,919
issues

595
00:25:09,200 --> 00:25:12,559
so visibility is

596
00:25:12,559 --> 00:25:14,880
important in the cloud environment as i

597
00:25:14,880 --> 00:25:16,559
mentioned in the car environment you

598
00:25:16,559 --> 00:25:18,559
don't have physical access to your

599
00:25:18,559 --> 00:25:21,440
your hardware so you need to if there's

600
00:25:21,440 --> 00:25:23,279
any

601
00:25:23,279 --> 00:25:26,320
event or logging available from the

602
00:25:26,320 --> 00:25:27,120
cloud service

603
00:25:27,120 --> 00:25:29,679
provider you should turn it on so so

604
00:25:29,679 --> 00:25:31,279
that you can see what is

605
00:25:31,279 --> 00:25:34,320
actually going on under the hood

606
00:25:34,320 --> 00:25:37,039
and enforcing security standards such as

607
00:25:37,039 --> 00:25:40,320
cis or zero trust model

608
00:25:40,320 --> 00:25:42,799
and finally shift that this is the focus

609
00:25:42,799 --> 00:25:43,440
this is

610
00:25:43,440 --> 00:25:46,559
the focus of of this research we can

611
00:25:46,559 --> 00:25:47,919
also shift that to

612
00:25:47,919 --> 00:25:50,960
that we can now shift left shift left at

613
00:25:50,960 --> 00:25:51,919
the

614
00:25:51,919 --> 00:25:54,640
infrastructure level because the

615
00:25:54,640 --> 00:25:57,120
availability of isc template

616
00:25:57,120 --> 00:25:59,440
we can scan the ioc template as early as

617
00:25:59,440 --> 00:26:00,159
possible

618
00:26:00,159 --> 00:26:03,440
before any misconfiguration made it to

619
00:26:03,440 --> 00:26:07,679
make it to the to the production

620
00:26:08,480 --> 00:26:11,279
and a few pattern and anti-pattern

621
00:26:11,279 --> 00:26:13,520
tooling to remember our

622
00:26:13,520 --> 00:26:16,000
takeaway for the audience enable cloud

623
00:26:16,000 --> 00:26:18,240
security service such as aws

624
00:26:18,240 --> 00:26:21,760
cloud duty azure security center and gcp

625
00:26:21,760 --> 00:26:23,360
security command center

626
00:26:23,360 --> 00:26:26,559
so when enabling this security service

627
00:26:26,559 --> 00:26:29,200
it also enables a lot of login or

628
00:26:29,200 --> 00:26:30,880
eventing service

629
00:26:30,880 --> 00:26:34,799
to help you increase the visibility of

630
00:26:34,799 --> 00:26:37,919
cloud data central virtualized database

631
00:26:37,919 --> 00:26:39,360
data center as well as

632
00:26:39,360 --> 00:26:42,799
uh your service and always encrypt

633
00:26:42,799 --> 00:26:45,919
always log and always firewall if if the

634
00:26:45,919 --> 00:26:46,799
encryption

635
00:26:46,799 --> 00:26:49,440
option is available always encrypt if

636
00:26:49,440 --> 00:26:50,720
there is if there's any law

637
00:26:50,720 --> 00:26:53,600
always collect and you you never know

638
00:26:53,600 --> 00:26:55,200
when you will need this data

639
00:26:55,200 --> 00:26:57,600
and they will become very very helpful

640
00:26:57,600 --> 00:26:58,880
and constantly scan

641
00:26:58,880 --> 00:27:01,200
also i i didn't really talk about the

642
00:27:01,200 --> 00:27:02,000
application

643
00:27:02,000 --> 00:27:05,360
vulnerability in this talk but patch

644
00:27:05,360 --> 00:27:07,520
is again the number one the the most

645
00:27:07,520 --> 00:27:08,640
important way to

646
00:27:08,640 --> 00:27:12,720
to secure your application

647
00:27:14,080 --> 00:27:17,120
and this is this concludes my talk

648
00:27:17,120 --> 00:27:20,480
and if anyone is interested in in

649
00:27:20,480 --> 00:27:22,559
more detail about this research we

650
00:27:22,559 --> 00:27:24,640
published a report

651
00:27:24,640 --> 00:27:27,120
to unified to cultural report that you

652
00:27:27,120 --> 00:27:28,960
can easily

653
00:27:28,960 --> 00:27:31,600
find online and download this is a very

654
00:27:31,600 --> 00:27:35,840
long i think 20 plus page report

655
00:27:46,840 --> 00:27:49,840
details

656
00:28:14,880 --> 00:28:16,960
you

