1
00:00:00,399 --> 00:00:02,240
okay hey thanks everybody so this talk

2
00:00:02,240 --> 00:00:05,279
is not my c2 or not my server c2 using

3
00:00:05,279 --> 00:00:07,200
trusted sources for c2

4
00:00:07,200 --> 00:00:09,440
um so what that really means is over the

5
00:00:09,440 --> 00:00:11,759
course of the last 15 years we've

6
00:00:11,759 --> 00:00:13,840
all built our own rats our own payloads

7
00:00:13,840 --> 00:00:15,599
we've all had our own infrastructure our

8
00:00:15,599 --> 00:00:17,440
own c2 architecture

9
00:00:17,440 --> 00:00:18,960
and it kind of evolves because at the

10
00:00:18,960 --> 00:00:20,400
end of the day it's that cat and mouse

11
00:00:20,400 --> 00:00:21,840
game of the attacker

12
00:00:21,840 --> 00:00:25,119
versus the defender so this talk is just

13
00:00:25,119 --> 00:00:26,160
more on

14
00:00:26,160 --> 00:00:29,439
focusing around how me and my team have

15
00:00:29,439 --> 00:00:30,000
evolved

16
00:00:30,000 --> 00:00:32,238
and how we've started using sas as our

17
00:00:32,238 --> 00:00:33,520
primary target for

18
00:00:33,520 --> 00:00:36,559
c2 um and then it also goes through how

19
00:00:36,559 --> 00:00:37,440
we talk about

20
00:00:37,440 --> 00:00:39,120
different types of payloads that we use

21
00:00:39,120 --> 00:00:41,360
for our engagements

22
00:00:41,360 --> 00:00:45,360
uh so with that

23
00:00:45,360 --> 00:00:47,600
my name is brandon helms i'm currently a

24
00:00:47,600 --> 00:00:49,280
engineering manager of security for a

25
00:00:49,280 --> 00:00:50,559
company called remitly

26
00:00:50,559 --> 00:00:52,640
uh i'm ex-navy some three-letter

27
00:00:52,640 --> 00:00:53,760
agencies uh

28
00:00:53,760 --> 00:00:56,079
prior exploit developer and then first

29
00:00:56,079 --> 00:00:56,879
and foremost

30
00:00:56,879 --> 00:01:00,160
i am a gymnastics dad uh got an awesome

31
00:01:00,160 --> 00:01:02,000
daughter who loves gymnastics so

32
00:01:02,000 --> 00:01:03,600
i don't get to spend 18 hours on a

33
00:01:03,600 --> 00:01:05,600
computer anymore uh that being said if

34
00:01:05,600 --> 00:01:07,280
you ever want to follow me on my github

35
00:01:07,280 --> 00:01:10,000
or on my wordpress uh go for it i have a

36
00:01:10,000 --> 00:01:11,119
twitter handle

37
00:01:11,119 --> 00:01:15,119
as well my partner who could be here

38
00:01:15,119 --> 00:01:16,880
right now his name is daniel gordon

39
00:01:16,880 --> 00:01:18,799
uh he contributes a lot to the open

40
00:01:18,799 --> 00:01:19,920
source community

41
00:01:19,920 --> 00:01:22,479
he's an air force master sergeant and

42
00:01:22,479 --> 00:01:23,600
him and his family

43
00:01:23,600 --> 00:01:24,720
uh they're trying to be the next

44
00:01:24,720 --> 00:01:27,680
partridge family um

45
00:01:27,680 --> 00:01:30,720
so what are we talking about today uh so

46
00:01:30,720 --> 00:01:32,079
we're gonna talk about the c2 evolution

47
00:01:32,079 --> 00:01:33,520
i think everybody pretty much knows it

48
00:01:33,520 --> 00:01:34,720
so we're just gonna kind of hit on some

49
00:01:34,720 --> 00:01:36,479
of the highlights the pros and cons how

50
00:01:36,479 --> 00:01:37,520
we evolve

51
00:01:37,520 --> 00:01:39,040
um and then we're gonna go straight into

52
00:01:39,040 --> 00:01:41,759
the stages of payloads i think a common

53
00:01:41,759 --> 00:01:43,040
misconception is

54
00:01:43,040 --> 00:01:45,200
that you have to load the first stage

55
00:01:45,200 --> 00:01:46,320
and then it always has to load the

56
00:01:46,320 --> 00:01:48,079
second stage and i think uh

57
00:01:48,079 --> 00:01:49,680
in practice when you get into more of

58
00:01:49,680 --> 00:01:51,280
the advanced scenarios

59
00:01:51,280 --> 00:01:53,759
there's a time and place for each stage

60
00:01:53,759 --> 00:01:54,640
and understanding

61
00:01:54,640 --> 00:01:56,399
what's in that stage and why you shoot

62
00:01:56,399 --> 00:01:58,079
that stage is

63
00:01:58,079 --> 00:01:59,280
really critical because at the end of

64
00:01:59,280 --> 00:02:01,200
the day if you end up writing your own

65
00:02:01,200 --> 00:02:03,759
uh if you end up writing your own uh

66
00:02:03,759 --> 00:02:05,920
we'll say c2 malware

67
00:02:05,920 --> 00:02:07,759
payloads you don't want them to get

68
00:02:07,759 --> 00:02:09,360
burnt because then you spend more time

69
00:02:09,360 --> 00:02:11,200
trying to figure out what signatures got

70
00:02:11,200 --> 00:02:13,360
baked in so you can remove them

71
00:02:13,360 --> 00:02:15,760
um afterwards we're going to go to uh

72
00:02:15,760 --> 00:02:17,680
what is actually needed to build a c2 so

73
00:02:17,680 --> 00:02:19,440
we're going to go over the basics

74
00:02:19,440 --> 00:02:21,680
um and then we're going to move into the

75
00:02:21,680 --> 00:02:23,599
y attack sas and i think it makes sense

76
00:02:23,599 --> 00:02:25,040
for most people but we're gonna talk

77
00:02:25,040 --> 00:02:26,319
more granular about

78
00:02:26,319 --> 00:02:29,200
um the reasons we chose to and why it's

79
00:02:29,200 --> 00:02:29,840
becoming

80
00:02:29,840 --> 00:02:31,440
easier and easier for us to pivot

81
00:02:31,440 --> 00:02:32,959
through that um and then we're gonna

82
00:02:32,959 --> 00:02:35,040
shift into that mindset of okay we're no

83
00:02:35,040 --> 00:02:36,800
longer hackers but we're defenders so

84
00:02:36,800 --> 00:02:38,239
how do we actually defend

85
00:02:38,239 --> 00:02:40,480
against these networks uh when an

86
00:02:40,480 --> 00:02:42,160
attacker comes in

87
00:02:42,160 --> 00:02:43,519
and then we'll throw a pretty demo in

88
00:02:43,519 --> 00:02:46,560
there of a prototype tool that we wrote

89
00:02:46,560 --> 00:02:49,360
um so c2 evolution basically command and

90
00:02:49,360 --> 00:02:50,879
control is what this means so

91
00:02:50,879 --> 00:02:52,560
anytime you shoot a rat a remote

92
00:02:52,560 --> 00:02:54,959
administrator tool um to a target this

93
00:02:54,959 --> 00:02:55,519
could be

94
00:02:55,519 --> 00:02:56,800
meterpreter i think that's what most

95
00:02:56,800 --> 00:02:58,239
people are familiar with this could be

96
00:02:58,239 --> 00:02:58,800
beacon

97
00:02:58,800 --> 00:03:00,959
this could be some of those irc rats

98
00:03:00,959 --> 00:03:02,319
this could even go back to being like

99
00:03:02,319 --> 00:03:04,239
poison ivy right there's a common

100
00:03:04,239 --> 00:03:06,480
there's a common principle of a server

101
00:03:06,480 --> 00:03:08,080
client relationship

102
00:03:08,080 --> 00:03:10,480
um and we want to be the server because

103
00:03:10,480 --> 00:03:11,760
we don't want to have to log into each

104
00:03:11,760 --> 00:03:13,120
client to be able to interact with them

105
00:03:13,120 --> 00:03:14,560
we want to be able to have the client

106
00:03:14,560 --> 00:03:15,680
run some application

107
00:03:15,680 --> 00:03:17,840
and then it directed its communications

108
00:03:17,840 --> 00:03:19,840
back to us and then for us to be able to

109
00:03:19,840 --> 00:03:20,640
task it

110
00:03:20,640 --> 00:03:24,720
through our our server interface

111
00:03:25,200 --> 00:03:26,480
so when we start talking about the

112
00:03:26,480 --> 00:03:28,239
history we're going to skip a bunch of

113
00:03:28,239 --> 00:03:28,879
spots

114
00:03:28,879 --> 00:03:30,400
this history has evolved a lot but i

115
00:03:30,400 --> 00:03:32,239
want to talk about some of the big ones

116
00:03:32,239 --> 00:03:35,440
the first one is irc so internet relay

117
00:03:35,440 --> 00:03:36,080
chat

118
00:03:36,080 --> 00:03:38,560
um why was this so awesome because you

119
00:03:38,560 --> 00:03:39,760
didn't really have to worry about the

120
00:03:39,760 --> 00:03:40,959
comms mechanism

121
00:03:40,959 --> 00:03:42,159
you also didn't have to worry about the

122
00:03:42,159 --> 00:03:44,879
server uh piece of it because you just

123
00:03:44,879 --> 00:03:48,319
logged into fnet or downnet or ryzen or

124
00:03:48,319 --> 00:03:49,519
some of the other ones out there that

125
00:03:49,519 --> 00:03:51,519
were commonly used and then you just

126
00:03:51,519 --> 00:03:52,319
built your

127
00:03:52,319 --> 00:03:55,760
rat to be able to speak directly to irc

128
00:03:55,760 --> 00:03:57,760
so the pros were the protocol was

129
00:03:57,760 --> 00:03:59,360
already there the server was already

130
00:03:59,360 --> 00:04:00,080
ready to go

131
00:04:00,080 --> 00:04:01,040
so you didn't have to worry about

132
00:04:01,040 --> 00:04:02,959
standing up your own infrastructure the

133
00:04:02,959 --> 00:04:03,760
cons

134
00:04:03,760 --> 00:04:06,640
um uh revolved around like irc in the

135
00:04:06,640 --> 00:04:08,239
early days was fully unencrypted so

136
00:04:08,239 --> 00:04:09,439
people could clearly see what you were

137
00:04:09,439 --> 00:04:10,480
doing

138
00:04:10,480 --> 00:04:12,400
um and most companies don't use irc so

139
00:04:12,400 --> 00:04:13,680
it's really easy to create network

140
00:04:13,680 --> 00:04:15,360
signatures in there to say hey

141
00:04:15,360 --> 00:04:17,358
check for a report six six six six

142
00:04:17,358 --> 00:04:18,399
through six six six

143
00:04:18,399 --> 00:04:21,600
nine check for these uh domains

144
00:04:21,600 --> 00:04:23,199
right and so black lists were easy to

145
00:04:23,199 --> 00:04:25,199
configure so that way it stopped a lot

146
00:04:25,199 --> 00:04:26,400
of this i'm not gonna say it stopped at

147
00:04:26,400 --> 00:04:27,840
all and i can't believe that i'm still

148
00:04:27,840 --> 00:04:29,040
saying this but i still see

149
00:04:29,040 --> 00:04:32,320
irc traffic uh uh

150
00:04:32,320 --> 00:04:33,520
across a few networks that i've

151
00:04:33,520 --> 00:04:36,080
investigated over the years

152
00:04:36,080 --> 00:04:38,400
um then we move into cots so commercial

153
00:04:38,400 --> 00:04:39,680
off the shelf

154
00:04:39,680 --> 00:04:41,280
um i think this is what we're most

155
00:04:41,280 --> 00:04:43,199
confident with right now because this

156
00:04:43,199 --> 00:04:44,800
really opened up our eyes to full

157
00:04:44,800 --> 00:04:45,680
capabilities

158
00:04:45,680 --> 00:04:47,120
so we started talking about like

159
00:04:47,120 --> 00:04:49,360
meterpreter poison ivy beacon we start

160
00:04:49,360 --> 00:04:50,080
talking about

161
00:04:50,080 --> 00:04:52,479
empire right the commonality with all of

162
00:04:52,479 --> 00:04:54,479
these is they're highly configurable

163
00:04:54,479 --> 00:04:57,520
um and while they don't have a

164
00:04:57,520 --> 00:05:00,479
a gui such as irc they do come with

165
00:05:00,479 --> 00:05:02,000
their own frameworks that you can

166
00:05:02,000 --> 00:05:04,240
operate in so from that standpoint

167
00:05:04,240 --> 00:05:05,840
they're already built you just have to

168
00:05:05,840 --> 00:05:06,960
take and deploy

169
00:05:06,960 --> 00:05:09,120
um the benefits here right you don't

170
00:05:09,120 --> 00:05:10,880
have to know how to code these are very

171
00:05:10,880 --> 00:05:12,000
easy to set up

172
00:05:12,000 --> 00:05:13,759
they're highly configurable you can go

173
00:05:13,759 --> 00:05:16,400
out tcp 443 or any port you care about

174
00:05:16,400 --> 00:05:17,759
right it just depends that

175
00:05:17,759 --> 00:05:19,600
as long as your server is listening and

176
00:05:19,600 --> 00:05:21,759
the client can connect you're good to go

177
00:05:21,759 --> 00:05:24,240
the cons most of these are heavy right

178
00:05:24,240 --> 00:05:25,840
if you look at a lot of the

179
00:05:25,840 --> 00:05:27,919
a lot of the c2s that are being set up

180
00:05:27,919 --> 00:05:30,320
right now are being deployed right now

181
00:05:30,320 --> 00:05:32,560
they want to come with every feature in

182
00:05:32,560 --> 00:05:34,320
the house this means that they become

183
00:05:34,320 --> 00:05:35,680
easier signature

184
00:05:35,680 --> 00:05:38,960
so that being said we want to kind of

185
00:05:38,960 --> 00:05:40,800
find that sweet spot which is how do i

186
00:05:40,800 --> 00:05:42,240
get the capabilities of some of these

187
00:05:42,240 --> 00:05:43,039
cops

188
00:05:43,039 --> 00:05:45,440
uh tools but how do i get them in a way

189
00:05:45,440 --> 00:05:46,560
that aren't that's not going to be

190
00:05:46,560 --> 00:05:47,280
signatureable

191
00:05:47,280 --> 00:05:50,560
as easy um we're going to talk about sas

192
00:05:50,560 --> 00:05:51,840
in a minute but before that one thing i

193
00:05:51,840 --> 00:05:53,600
want to bring in is the social media

194
00:05:53,600 --> 00:05:54,240
aspect

195
00:05:54,240 --> 00:05:55,840
i would say this is probably a big

196
00:05:55,840 --> 00:05:57,919
initiative about six seven years ago to

197
00:05:57,919 --> 00:05:59,199
where we said hey let's go

198
00:05:59,199 --> 00:06:01,120
let's try to route see through traffic

199
00:06:01,120 --> 00:06:02,960
through facebook

200
00:06:02,960 --> 00:06:05,680
twitter um pick a social media thing out

201
00:06:05,680 --> 00:06:07,199
there and i think there was a lot of

202
00:06:07,199 --> 00:06:10,160
uh uh a lot of interest but it never

203
00:06:10,160 --> 00:06:11,600
really took off and i think a lot of the

204
00:06:11,600 --> 00:06:13,039
reasons it never really took off in like

205
00:06:13,039 --> 00:06:14,479
a first class fashion

206
00:06:14,479 --> 00:06:18,000
um focused around uh the fact that

207
00:06:18,000 --> 00:06:19,520
corporations at that time or companies

208
00:06:19,520 --> 00:06:21,440
at that time they already blocked social

209
00:06:21,440 --> 00:06:23,360
media for the most part i know now in

210
00:06:23,360 --> 00:06:25,600
2020 it seems to be a common standard

211
00:06:25,600 --> 00:06:28,960
but it's still a very it's a very

212
00:06:28,960 --> 00:06:31,280
easy mechanism for them to detect if

213
00:06:31,280 --> 00:06:33,199
they decide they want to detect it

214
00:06:33,199 --> 00:06:34,720
so that takes us to the sas piece so

215
00:06:34,720 --> 00:06:36,160
when we start talking about sas we're

216
00:06:36,160 --> 00:06:37,759
talking about services right

217
00:06:37,759 --> 00:06:39,440
so this is where somebody else has a

218
00:06:39,440 --> 00:06:41,759
service i i subscribe to it

219
00:06:41,759 --> 00:06:44,080
and they give me access to it my

220
00:06:44,080 --> 00:06:46,639
favorite ones here are slack

221
00:06:46,639 --> 00:06:49,840
and microsoft teams o365 suite

222
00:06:49,840 --> 00:06:51,840
the adolesian suite if you use jira or

223
00:06:51,840 --> 00:06:54,160
confluence um and then github

224
00:06:54,160 --> 00:06:56,960
um the benefits about uh creating

225
00:06:56,960 --> 00:06:57,759
see-through

226
00:06:57,759 --> 00:07:00,880
c2s through these environments is they

227
00:07:00,880 --> 00:07:02,400
already have trusted networking paths

228
00:07:02,400 --> 00:07:03,680
and we'll talk more about that so that

229
00:07:03,680 --> 00:07:05,680
makes it harder to tech

230
00:07:05,680 --> 00:07:07,680
right but that being said the cons are

231
00:07:07,680 --> 00:07:09,360
there's still not a lot of tools out

232
00:07:09,360 --> 00:07:10,160
there right now

233
00:07:10,160 --> 00:07:13,680
like you can create um uh uh profiles

234
00:07:13,680 --> 00:07:15,199
and beacon that can mimic it

235
00:07:15,199 --> 00:07:16,319
but there's really nothing out there

236
00:07:16,319 --> 00:07:18,319
that says hey use slack and it works you

237
00:07:18,319 --> 00:07:19,919
use discord and it works i know

238
00:07:19,919 --> 00:07:21,039
we're going to talk about one or two

239
00:07:21,039 --> 00:07:23,280
that's out there but overall it still

240
00:07:23,280 --> 00:07:27,120
seems to be limited so

241
00:07:27,120 --> 00:07:29,280
we got a lot of when we started building

242
00:07:29,280 --> 00:07:30,160
this uh

243
00:07:30,160 --> 00:07:32,240
myself and daniel we had this we had

244
00:07:32,240 --> 00:07:33,360
this great mind

245
00:07:33,360 --> 00:07:36,319
a great thought process of hey how do i

246
00:07:36,319 --> 00:07:37,919
get through this environment that we're

247
00:07:37,919 --> 00:07:38,639
working in

248
00:07:38,639 --> 00:07:40,160
and one of the environments that we were

249
00:07:40,160 --> 00:07:43,360
working in was a macbook environment

250
00:07:43,360 --> 00:07:44,800
they blocked everything other than

251
00:07:44,800 --> 00:07:46,960
business applications but one business

252
00:07:46,960 --> 00:07:48,319
application that everybody ran

253
00:07:48,319 --> 00:07:50,960
was slack so that being said we said how

254
00:07:50,960 --> 00:07:52,240
can we get stuff out

255
00:07:52,240 --> 00:07:54,960
and from my side of the house um we

256
00:07:54,960 --> 00:07:57,039
ended up building a basic

257
00:07:57,039 --> 00:08:00,400
c2 it was in python it interacted with

258
00:08:00,400 --> 00:08:03,520
some of the apis for slack and then it

259
00:08:03,520 --> 00:08:05,039
gave us exactly what we needed and

260
00:08:05,039 --> 00:08:06,560
provided a lot of value to the client to

261
00:08:06,560 --> 00:08:08,560
show that hey there are multiple ways we

262
00:08:08,560 --> 00:08:10,960
can get out of your network

263
00:08:10,960 --> 00:08:12,319
once we finished that we decided to put

264
00:08:12,319 --> 00:08:13,599
this presentation together and as we

265
00:08:13,599 --> 00:08:15,120
started doing our research we found out

266
00:08:15,120 --> 00:08:15,759
that

267
00:08:15,759 --> 00:08:17,759
uh that coal fire has an application

268
00:08:17,759 --> 00:08:20,319
called slacker it's a go application

269
00:08:20,319 --> 00:08:22,879
that's that runs on top of slack as well

270
00:08:22,879 --> 00:08:24,400
so that being said if you want to see a

271
00:08:24,400 --> 00:08:25,280
full fledge

272
00:08:25,280 --> 00:08:27,520
out of the box works great slacker is a

273
00:08:27,520 --> 00:08:28,639
great one

274
00:08:28,639 --> 00:08:29,759
another one that i haven't really

275
00:08:29,759 --> 00:08:31,039
invested too much in but i've heard

276
00:08:31,039 --> 00:08:33,599
about recent is the daac2

277
00:08:33,599 --> 00:08:34,719
and it seems to have the same

278
00:08:34,719 --> 00:08:37,519
capabilities

279
00:08:38,559 --> 00:08:40,479
so before we start talking more about

280
00:08:40,479 --> 00:08:42,159
sas i want to go through our stage of

281
00:08:42,159 --> 00:08:43,440
the payloads because this is one of the

282
00:08:43,440 --> 00:08:44,720
areas that i feel that

283
00:08:44,720 --> 00:08:46,399
as an exploit developer or as an

284
00:08:46,399 --> 00:08:48,560
attacker that we kind of skim over we

285
00:08:48,560 --> 00:08:49,200
just assume

286
00:08:49,200 --> 00:08:51,120
stage to stageless and we assume that

287
00:08:51,120 --> 00:08:53,040
there's no there's no

288
00:08:53,040 --> 00:08:56,080
intermediate zones right um so when we

289
00:08:56,080 --> 00:08:57,200
start talking about stage

290
00:08:57,200 --> 00:08:59,440
let's go straight to stage zero this is

291
00:08:59,440 --> 00:09:01,040
an environment where i have no

292
00:09:01,040 --> 00:09:02,560
situational awareness of

293
00:09:02,560 --> 00:09:04,720
what the environment has such as i'm

294
00:09:04,720 --> 00:09:06,720
fishing and i'm throwing at a company i

295
00:09:06,720 --> 00:09:07,360
don't know what

296
00:09:07,360 --> 00:09:09,120
endpoint security they have what

297
00:09:09,120 --> 00:09:11,040
network-based security they have

298
00:09:11,040 --> 00:09:13,200
all i know is i just want them to

299
00:09:13,200 --> 00:09:15,120
execute and i hope they have windows or

300
00:09:15,120 --> 00:09:16,399
mac or whatever my

301
00:09:16,399 --> 00:09:18,480
my payload's built for so in these

302
00:09:18,480 --> 00:09:20,080
scenarios you want to throw something as

303
00:09:20,080 --> 00:09:21,600
lightweight as possible

304
00:09:21,600 --> 00:09:23,680
because if it gets caught it's going to

305
00:09:23,680 --> 00:09:24,880
get shipped up to the cloud it's going

306
00:09:24,880 --> 00:09:25,920
to be processed

307
00:09:25,920 --> 00:09:27,200
and then you don't want to have to go

308
00:09:27,200 --> 00:09:29,839
rewriting these complex algorithms to be

309
00:09:29,839 --> 00:09:30,640
able to do

310
00:09:30,640 --> 00:09:32,480
something more complex stuff so when i

311
00:09:32,480 --> 00:09:34,000
look for a stage 0 what i'm really

312
00:09:34,000 --> 00:09:35,760
looking for is can i get something that

313
00:09:35,760 --> 00:09:36,480
i can run

314
00:09:36,480 --> 00:09:38,240
commands on that typically can interact

315
00:09:38,240 --> 00:09:39,839
with the operating system this would be

316
00:09:39,839 --> 00:09:41,800
my directory listings my ip

317
00:09:41,800 --> 00:09:43,200
configurations

318
00:09:43,200 --> 00:09:46,320
um delete files uh it'd be great if i

319
00:09:46,320 --> 00:09:48,640
could upload or download files

320
00:09:48,640 --> 00:09:49,920
and then we'll talk about a little bit

321
00:09:49,920 --> 00:09:51,600
more like secret sauce that we might

322
00:09:51,600 --> 00:09:52,959
want to bake into this

323
00:09:52,959 --> 00:09:55,440
but with all our stage zeros we should

324
00:09:55,440 --> 00:09:57,760
expect that avs will ingest these

325
00:09:57,760 --> 00:09:59,760
that they will get signatured and that

326
00:09:59,760 --> 00:10:01,360
we might have to rewrite them so

327
00:10:01,360 --> 00:10:02,959
as long as you're okay that you might

328
00:10:02,959 --> 00:10:05,040
have to rebuild a stage zero

329
00:10:05,040 --> 00:10:07,200
everything's fine this moves us into the

330
00:10:07,200 --> 00:10:08,320
stage one realm

331
00:10:08,320 --> 00:10:09,839
the main difference between a stage one

332
00:10:09,839 --> 00:10:12,000
and stage zero is a stage one typically

333
00:10:12,000 --> 00:10:14,240
works really well with that stage two

334
00:10:14,240 --> 00:10:16,880
so that stage one is something that you

335
00:10:16,880 --> 00:10:18,399
should be able to deploy on a target

336
00:10:18,399 --> 00:10:20,079
where you have high confidence of what

337
00:10:20,079 --> 00:10:21,440
it is but you're not quite

338
00:10:21,440 --> 00:10:23,519
certain that that's definitely it um

339
00:10:23,519 --> 00:10:25,360
it's probably going to reside on disk

340
00:10:25,360 --> 00:10:26,800
um so it's going to get sucked up to the

341
00:10:26,800 --> 00:10:28,720
cloud most stage ones

342
00:10:28,720 --> 00:10:31,760
the the end result is to get the stage

343
00:10:31,760 --> 00:10:32,640
two up there

344
00:10:32,640 --> 00:10:34,000
but that being said you don't always

345
00:10:34,000 --> 00:10:35,440
need to go in there if the stage one has

346
00:10:35,440 --> 00:10:37,200
a capability to run commands

347
00:10:37,200 --> 00:10:38,560
that should be good enough and then you

348
00:10:38,560 --> 00:10:40,480
don't have to risk your super cool

349
00:10:40,480 --> 00:10:44,240
expensive tool that you just built

350
00:10:45,200 --> 00:10:47,519
this takes us to the stage two right

351
00:10:47,519 --> 00:10:49,360
this is our heavy hitter this is the one

352
00:10:49,360 --> 00:10:50,240
that has

353
00:10:50,240 --> 00:10:52,000
the key loggers baked in the screen

354
00:10:52,000 --> 00:10:54,000
recording the mini cats the capture

355
00:10:54,000 --> 00:10:55,600
traffic the traffic shaping

356
00:10:55,600 --> 00:10:57,360
like all those really awesome things

357
00:10:57,360 --> 00:10:58,959
that you wanted to build that should be

358
00:10:58,959 --> 00:11:00,640
in your stage two

359
00:11:00,640 --> 00:11:03,120
uh thumb rules here the stage two should

360
00:11:03,120 --> 00:11:04,240
never touch disc

361
00:11:04,240 --> 00:11:05,440
right you should try to keep it in

362
00:11:05,440 --> 00:11:07,519
memory where possible um

363
00:11:07,519 --> 00:11:09,360
you should never put it on a target that

364
00:11:09,360 --> 00:11:11,600
you haven't already vetted to say that

365
00:11:11,600 --> 00:11:13,440
hey this isn't gonna get caught

366
00:11:13,440 --> 00:11:15,519
right so essentially how it would work

367
00:11:15,519 --> 00:11:16,640
from an engagement is

368
00:11:16,640 --> 00:11:18,720
i throw my stage one i've gained access

369
00:11:18,720 --> 00:11:20,640
to the target that stage one has a

370
00:11:20,640 --> 00:11:22,079
capability to load

371
00:11:22,079 --> 00:11:24,000
um the stage two directly in its current

372
00:11:24,000 --> 00:11:25,279
memory space

373
00:11:25,279 --> 00:11:27,120
and whenever i feel like i'm in a safe

374
00:11:27,120 --> 00:11:28,800
environment and i've done my surveys i

375
00:11:28,800 --> 00:11:31,600
made sure that i know what edr solution

376
00:11:31,600 --> 00:11:33,920
i made sure that nothing's gonna flag or

377
00:11:33,920 --> 00:11:34,640
pop it

378
00:11:34,640 --> 00:11:36,079
then i'll load that stage two in that

379
00:11:36,079 --> 00:11:37,920
process space and now i have my full

380
00:11:37,920 --> 00:11:40,720
tool suite in the event that i've done

381
00:11:40,720 --> 00:11:41,360
my

382
00:11:41,360 --> 00:11:43,440
recon and i and i can't load that stage

383
00:11:43,440 --> 00:11:45,760
two then my goal is to figure out

384
00:11:45,760 --> 00:11:48,320
how can i disable whatever that edr or

385
00:11:48,320 --> 00:11:49,680
av solution is

386
00:11:49,680 --> 00:11:52,000
so that my stage two would run so once

387
00:11:52,000 --> 00:11:54,160
again the big part stage zero

388
00:11:54,160 --> 00:11:56,880
expect to get caught stage one if it

389
00:11:56,880 --> 00:11:57,519
gets caught

390
00:11:57,519 --> 00:11:59,920
that sucks but my main goal would be to

391
00:11:59,920 --> 00:12:02,399
survey to be able to upload my stage two

392
00:12:02,399 --> 00:12:04,240
and then the stage two should never get

393
00:12:04,240 --> 00:12:06,560
caught

394
00:12:07,920 --> 00:12:10,720
so this takes us to what is actually

395
00:12:10,720 --> 00:12:11,519
needed

396
00:12:11,519 --> 00:12:14,160
to build a c2 so when we think about it

397
00:12:14,160 --> 00:12:14,639
it kind of

398
00:12:14,639 --> 00:12:16,320
breaks down to a few things and if you

399
00:12:16,320 --> 00:12:18,000
talk to anybody who's built any kind of

400
00:12:18,000 --> 00:12:18,800
rap

401
00:12:18,800 --> 00:12:20,079
they'll tell you they'll say hey first i

402
00:12:20,079 --> 00:12:21,360
gotta choose a language and then it

403
00:12:21,360 --> 00:12:22,480
always typically goes to their

404
00:12:22,480 --> 00:12:23,200
preference

405
00:12:23,200 --> 00:12:25,440
a lot of this has to do with hey do i

406
00:12:25,440 --> 00:12:27,360
want this to work on multiple operating

407
00:12:27,360 --> 00:12:29,440
systems hey do i want super easy

408
00:12:29,440 --> 00:12:31,760
functionality is this just a prototype

409
00:12:31,760 --> 00:12:34,000
um the next piece is how do i want the

410
00:12:34,000 --> 00:12:35,680
network piece to be handled

411
00:12:35,680 --> 00:12:37,200
a lot of times they just say hey let me

412
00:12:37,200 --> 00:12:39,440
implement just regular sockets and then

413
00:12:39,440 --> 00:12:40,720
we'll exchange data that way

414
00:12:40,720 --> 00:12:42,720
but we're starting to get more uh more

415
00:12:42,720 --> 00:12:44,800
sophisticated with our different

416
00:12:44,800 --> 00:12:48,399
um malleable c2 profiles with stuff like

417
00:12:48,399 --> 00:12:49,120
beacon

418
00:12:49,120 --> 00:12:51,360
or moving towards the sas or the social

419
00:12:51,360 --> 00:12:52,800
media route and

420
00:12:52,800 --> 00:12:55,920
posting to trusted sites right the next

421
00:12:55,920 --> 00:12:56,720
piece is

422
00:12:56,720 --> 00:12:58,959
the ability to execute tasking what i

423
00:12:58,959 --> 00:13:00,639
mean by that is the ability just to run

424
00:13:00,639 --> 00:13:01,680
commands

425
00:13:01,680 --> 00:13:03,600
and be able to grab files and then be

426
00:13:03,600 --> 00:13:04,959
able to make a

427
00:13:04,959 --> 00:13:07,360
educated decision of what next steps

428
00:13:07,360 --> 00:13:08,480
should be

429
00:13:08,480 --> 00:13:09,680
right and then we want to be able to

430
00:13:09,680 --> 00:13:10,959
interact with that data or play with

431
00:13:10,959 --> 00:13:12,320
that data so we want to be able to send

432
00:13:12,320 --> 00:13:13,680
it back to us we want to be able to send

433
00:13:13,680 --> 00:13:14,720
data to it

434
00:13:14,720 --> 00:13:17,040
right the last thing i want to say is

435
00:13:17,040 --> 00:13:19,040
optionally if you build a c2

436
00:13:19,040 --> 00:13:21,519
if you build a stage zero stage one

437
00:13:21,519 --> 00:13:23,360
please please please bake in the ability

438
00:13:23,360 --> 00:13:23,920
to load

439
00:13:23,920 --> 00:13:26,160
a higher stage directly in memory or

440
00:13:26,160 --> 00:13:28,000
load anything directly in memory

441
00:13:28,000 --> 00:13:30,880
that way it just it minimizes the risk

442
00:13:30,880 --> 00:13:32,480
and when it comes to looking at

443
00:13:32,480 --> 00:13:35,440
uh memory based uh security there's been

444
00:13:35,440 --> 00:13:36,800
very few products out there that i've

445
00:13:36,800 --> 00:13:37,760
seen that will

446
00:13:37,760 --> 00:13:40,320
do a good enough job that it it scares

447
00:13:40,320 --> 00:13:43,279
us to continue forward

448
00:13:43,440 --> 00:13:45,120
so considerations around the programming

449
00:13:45,120 --> 00:13:47,120
language right we uh i see a lot of

450
00:13:47,120 --> 00:13:48,000
applications these

451
00:13:48,000 --> 00:13:50,800
days using powershell c-sharp and net

452
00:13:50,800 --> 00:13:51,519
these are great

453
00:13:51,519 --> 00:13:52,959
they're easy to learn they're easy to

454
00:13:52,959 --> 00:13:55,440
work with um the problem here is

455
00:13:55,440 --> 00:13:57,519
microsoft over the last few years has

456
00:13:57,519 --> 00:13:59,360
done a really great job of putting

457
00:13:59,360 --> 00:14:01,440
great mitigations in place i don't know

458
00:14:01,440 --> 00:14:03,519
if you've tried to do like a

459
00:14:03,519 --> 00:14:06,000
a invoke web request or powershell now

460
00:14:06,000 --> 00:14:07,279
on a script that

461
00:14:07,279 --> 00:14:09,760
could potentially be malicious it just

462
00:14:09,760 --> 00:14:11,279
stops you it's like you can't even

463
00:14:11,279 --> 00:14:12,959
disable me i'm just gonna pull it

464
00:14:12,959 --> 00:14:14,880
right and they're taking more and more

465
00:14:14,880 --> 00:14:16,000
uh approaches

466
00:14:16,000 --> 00:14:18,240
to be able to audit but at the same time

467
00:14:18,240 --> 00:14:20,240
from a reverser standpoint these scripts

468
00:14:20,240 --> 00:14:21,519
are and these scripts and this

469
00:14:21,519 --> 00:14:24,480
uh and c-sharp files are easy to

470
00:14:24,480 --> 00:14:25,440
decompile

471
00:14:25,440 --> 00:14:26,880
and so therefore you can see the source

472
00:14:26,880 --> 00:14:28,320
code so therefore all that hard work you

473
00:14:28,320 --> 00:14:29,199
put in

474
00:14:29,199 --> 00:14:30,480
a lot of it just gets thrown out the

475
00:14:30,480 --> 00:14:33,040
door so the next one's golang i'm seeing

476
00:14:33,040 --> 00:14:34,240
golang jump up

477
00:14:34,240 --> 00:14:35,760
pretty high these days mainly because

478
00:14:35,760 --> 00:14:37,519
it's cross-compatible

479
00:14:37,519 --> 00:14:41,279
and people seem to be very uh very well

480
00:14:41,279 --> 00:14:43,839
adapted to being able to use go language

481
00:14:43,839 --> 00:14:45,440
right it's easier to learn it seems to

482
00:14:45,440 --> 00:14:47,760
be the new hotness um the problem with

483
00:14:47,760 --> 00:14:48,240
this

484
00:14:48,240 --> 00:14:50,240
is for the cross compatibility it has to

485
00:14:50,240 --> 00:14:52,079
bake all its stuff inside of itself so

486
00:14:52,079 --> 00:14:54,480
you're seeing these files blow up

487
00:14:54,480 --> 00:14:56,560
um this isn't a problem for the most

488
00:14:56,560 --> 00:14:58,480
part um but if you're an environment

489
00:14:58,480 --> 00:14:59,920
that doesn't have any go applications

490
00:14:59,920 --> 00:15:01,120
it's really easy to see

491
00:15:01,120 --> 00:15:03,600
what application was uh was built based

492
00:15:03,600 --> 00:15:04,160
off go

493
00:15:04,160 --> 00:15:05,760
and then just put flags in there on

494
00:15:05,760 --> 00:15:07,440
around that um

495
00:15:07,440 --> 00:15:08,959
and then the last one before we get into

496
00:15:08,959 --> 00:15:10,480
ours is scripting

497
00:15:10,480 --> 00:15:13,519
right i see scripting more for um uh the

498
00:15:13,519 --> 00:15:14,800
prototypes and i know powershell is

499
00:15:14,800 --> 00:15:16,240
still a scripting language but like this

500
00:15:16,240 --> 00:15:18,240
is more like the python pearls

501
00:15:18,240 --> 00:15:20,880
um these typically aren't used to gain

502
00:15:20,880 --> 00:15:21,920
the initial access

503
00:15:21,920 --> 00:15:23,760
these are used when you got onto a

504
00:15:23,760 --> 00:15:26,079
machine through some unique access

505
00:15:26,079 --> 00:15:27,440
and now you're just trying to get that

506
00:15:27,440 --> 00:15:30,240
shell this now takes us to old glory or

507
00:15:30,240 --> 00:15:32,160
the cc plus plus style of the house

508
00:15:32,160 --> 00:15:32,720
right

509
00:15:32,720 --> 00:15:34,480
these tend to be the hardest to code but

510
00:15:34,480 --> 00:15:36,399
they're also the hardest to reverse

511
00:15:36,399 --> 00:15:37,680
but at the same time they're also the

512
00:15:37,680 --> 00:15:39,440
hardest to detect because most

513
00:15:39,440 --> 00:15:41,360
applications that are running on windows

514
00:15:41,360 --> 00:15:42,720
environments at least

515
00:15:42,720 --> 00:15:46,000
are going to be cc plus compiled um also

516
00:15:46,000 --> 00:15:48,320
we can get really small with our file

517
00:15:48,320 --> 00:15:50,720
size

518
00:15:51,199 --> 00:15:52,639
the next consideration we should think

519
00:15:52,639 --> 00:15:54,240
about is that network protocol so we

520
00:15:54,240 --> 00:15:56,079
talked about this a little high level

521
00:15:56,079 --> 00:15:59,279
um but for our our kind of situation

522
00:15:59,279 --> 00:16:02,160
we wanted to make something that would

523
00:16:02,160 --> 00:16:02,880
um

524
00:16:02,880 --> 00:16:04,720
that would bypass security in general

525
00:16:04,720 --> 00:16:06,639
when i say bypass not so much that it

526
00:16:06,639 --> 00:16:08,079
will bypass their defenses

527
00:16:08,079 --> 00:16:10,800
um but it will buy it'll bypass their

528
00:16:10,800 --> 00:16:12,079
implicit trust

529
00:16:12,079 --> 00:16:14,959
and uh implicit trust i mean like when

530
00:16:14,959 --> 00:16:17,199
people get sass in their environment

531
00:16:17,199 --> 00:16:18,800
they they typically say hey there's

532
00:16:18,800 --> 00:16:20,880
great security around this application

533
00:16:20,880 --> 00:16:22,800
uh we'll have some auditing but what

534
00:16:22,800 --> 00:16:24,560
they typically do is to minimize

535
00:16:24,560 --> 00:16:26,240
business friction they'll whitelist

536
00:16:26,240 --> 00:16:27,360
these applications because the last

537
00:16:27,360 --> 00:16:28,959
thing you want to do is if the company

538
00:16:28,959 --> 00:16:31,199
uses slack or microsoft teams or github

539
00:16:31,199 --> 00:16:32,240
in their environment

540
00:16:32,240 --> 00:16:33,839
you don't want your security rules to

541
00:16:33,839 --> 00:16:35,920
accidentally stop any of that traffic

542
00:16:35,920 --> 00:16:37,920
because now you get a business outage or

543
00:16:37,920 --> 00:16:40,399
you get friction with your developers

544
00:16:40,399 --> 00:16:41,920
and so typically what will happen is

545
00:16:41,920 --> 00:16:43,199
they'll just white list that traffic and

546
00:16:43,199 --> 00:16:44,959
say oh yeah anything that goes to

547
00:16:44,959 --> 00:16:48,399
slack.com is just good um so what we do

548
00:16:48,399 --> 00:16:50,320
as attackers is we piggyback off that

549
00:16:50,320 --> 00:16:51,680
logic

550
00:16:51,680 --> 00:16:53,040
um so when you're thinking about the

551
00:16:53,040 --> 00:16:54,880
network protocols just keep that in mind

552
00:16:54,880 --> 00:16:57,279
if you decide that you want to go with

553
00:16:57,279 --> 00:16:59,120
hdp or some other protocol

554
00:16:59,120 --> 00:17:01,440
then just keep in mind do you want to go

555
00:17:01,440 --> 00:17:03,360
do you want to blend in with the traffic

556
00:17:03,360 --> 00:17:05,439
or do you want to try to hide so

557
00:17:05,439 --> 00:17:07,599
basically if i hide in plain sight i'm

558
00:17:07,599 --> 00:17:09,119
going to try to use common protocols

559
00:17:09,119 --> 00:17:09,520
that are

560
00:17:09,520 --> 00:17:11,439
already environment the dns works great

561
00:17:11,439 --> 00:17:13,439
the http if you say hey i just want to

562
00:17:13,439 --> 00:17:15,039
be sophisticated then you might use

563
00:17:15,039 --> 00:17:17,199
custom encryption

564
00:17:17,199 --> 00:17:19,679
or something that doesn't blend in to

565
00:17:19,679 --> 00:17:23,280
bypass the protocol analyzers

566
00:17:23,760 --> 00:17:27,119
for the executing tasks right a lot of

567
00:17:27,119 --> 00:17:29,280
avs i'm seeing are starting to monitor

568
00:17:29,280 --> 00:17:30,880
uh whenever we hook directly

569
00:17:30,880 --> 00:17:34,160
into the command prompt a lot of

570
00:17:34,160 --> 00:17:35,840
a lot of edr's out there will be able to

571
00:17:35,840 --> 00:17:38,240
say like hey i detected a cmd slash c

572
00:17:38,240 --> 00:17:41,280
and some command um so when you're doing

573
00:17:41,280 --> 00:17:44,559
executing tasking try to get as granular

574
00:17:44,559 --> 00:17:46,080
as you need like if you need to do a

575
00:17:46,080 --> 00:17:47,760
directory listing can you find a native

576
00:17:47,760 --> 00:17:48,320
command

577
00:17:48,320 --> 00:17:50,559
in that programming language that will

578
00:17:50,559 --> 00:17:52,240
list the contents of the directory

579
00:17:52,240 --> 00:17:53,760
without you having to touch command

580
00:17:53,760 --> 00:17:56,799
prompt or powershell

581
00:17:57,360 --> 00:18:00,880
um the next one is downloading and

582
00:18:00,880 --> 00:18:02,000
uploading files

583
00:18:02,000 --> 00:18:03,520
same kind of concept and then the

584
00:18:03,520 --> 00:18:06,000
ability to delete and modify files right

585
00:18:06,000 --> 00:18:08,480
so when we're executing uh tasking

586
00:18:08,480 --> 00:18:10,240
typically if you get on a windows

587
00:18:10,240 --> 00:18:11,200
machine

588
00:18:11,200 --> 00:18:14,000
um you're not going to have just in a

589
00:18:14,000 --> 00:18:15,039
command prompt you're not gonna have the

590
00:18:15,039 --> 00:18:16,559
ability to download or upload unless

591
00:18:16,559 --> 00:18:18,480
you're in like something like powershell

592
00:18:18,480 --> 00:18:20,080
so you might have to get fancy in this

593
00:18:20,080 --> 00:18:21,360
realm and maybe you have to configure

594
00:18:21,360 --> 00:18:23,679
your client to be able to do that

595
00:18:23,679 --> 00:18:25,919
um and then when it comes to being able

596
00:18:25,919 --> 00:18:27,120
to run the os native cam

597
00:18:27,120 --> 00:18:29,039
commands such as ipconfigs typically

598
00:18:29,039 --> 00:18:30,480
every programming language that i've

599
00:18:30,480 --> 00:18:31,039
worked with

600
00:18:31,039 --> 00:18:33,280
has some native function to it this

601
00:18:33,280 --> 00:18:34,960
brings into the next question of

602
00:18:34,960 --> 00:18:38,880
should i use uh should i bake my code in

603
00:18:38,880 --> 00:18:40,480
or should i reference the libraries that

604
00:18:40,480 --> 00:18:42,559
are already on the system this is really

605
00:18:42,559 --> 00:18:43,440
up to you

606
00:18:43,440 --> 00:18:45,039
if you want to make your uh if you want

607
00:18:45,039 --> 00:18:46,880
to make your application smaller in size

608
00:18:46,880 --> 00:18:48,720
then try to reference anything that the

609
00:18:48,720 --> 00:18:50,320
application or that the operating system

610
00:18:50,320 --> 00:18:51,280
already has

611
00:18:51,280 --> 00:18:52,640
that being said this is going to make

612
00:18:52,640 --> 00:18:54,799
cross compatibility a pain in the butt

613
00:18:54,799 --> 00:18:56,320
so it's up to you how big do you want

614
00:18:56,320 --> 00:18:57,919
your initial application to be the

615
00:18:57,919 --> 00:18:59,520
bigger it is typically

616
00:18:59,520 --> 00:19:01,919
the easier it is to signature the

617
00:19:01,919 --> 00:19:02,880
smaller it is

618
00:19:02,880 --> 00:19:04,080
typically the more you're gonna have to

619
00:19:04,080 --> 00:19:06,160
reach out to the operating system

620
00:19:06,160 --> 00:19:07,520
libraries

621
00:19:07,520 --> 00:19:08,640
and that was one of the decisions that

622
00:19:08,640 --> 00:19:10,000
we actually had to make when we made

623
00:19:10,000 --> 00:19:11,360
ours

624
00:19:11,360 --> 00:19:14,320
um so the final page uh final thing to

625
00:19:14,320 --> 00:19:15,120
consider is

626
00:19:15,120 --> 00:19:17,360
loading that higher stage for ours we

627
00:19:17,360 --> 00:19:18,160
ended up

628
00:19:18,160 --> 00:19:20,080
using something called srdi or shell

629
00:19:20,080 --> 00:19:22,080
code reflected dll injection

630
00:19:22,080 --> 00:19:24,400
and so basically what that means is we

631
00:19:24,400 --> 00:19:26,640
have one special function that could be

632
00:19:26,640 --> 00:19:27,520
signature

633
00:19:27,520 --> 00:19:29,360
um but from our assessment it's going to

634
00:19:29,360 --> 00:19:31,520
be hard to package basically we said

635
00:19:31,520 --> 00:19:33,360
we want the ability to be able to load a

636
00:19:33,360 --> 00:19:34,960
file um or

637
00:19:34,960 --> 00:19:38,160
a dll into my current memory space

638
00:19:38,160 --> 00:19:40,960
pass it um an ordinary export and just

639
00:19:40,960 --> 00:19:41,919
have it execute

640
00:19:41,919 --> 00:19:44,080
in the current context um and then we

641
00:19:44,080 --> 00:19:46,559
chose srdi we got this from

642
00:19:46,559 --> 00:19:48,080
silent break security they have great

643
00:19:48,080 --> 00:19:50,000
write-ups we'll share it afterwards

644
00:19:50,000 --> 00:19:51,760
um but by having that functionality it

645
00:19:51,760 --> 00:19:53,840
now means that when you go to try to

646
00:19:53,840 --> 00:19:55,360
detect our application

647
00:19:55,360 --> 00:19:57,039
you you now have to fight with other

648
00:19:57,039 --> 00:19:58,400
applications that are making those same

649
00:19:58,400 --> 00:19:59,280
exact calls

650
00:19:59,280 --> 00:20:02,799
and that was our goal so

651
00:20:02,799 --> 00:20:06,000
now back to sas right so software

652
00:20:06,000 --> 00:20:07,760
as a service is a software licensing

653
00:20:07,760 --> 00:20:09,679
delivery model in which software license

654
00:20:09,679 --> 00:20:11,679
on subscriptions basis and is centrally

655
00:20:11,679 --> 00:20:12,559
hosted

656
00:20:12,559 --> 00:20:15,200
all that means is opp other people's

657
00:20:15,200 --> 00:20:16,320
property that you're

658
00:20:16,320 --> 00:20:18,000
you're renting or you're subletting from

659
00:20:18,000 --> 00:20:20,400
them such as office 365

660
00:20:20,400 --> 00:20:23,840
salesforce github jira slack

661
00:20:23,840 --> 00:20:26,159
you probably have hundreds more in your

662
00:20:26,159 --> 00:20:27,760
environments maybe not hundreds but at

663
00:20:27,760 --> 00:20:29,120
least a lot more in your environments

664
00:20:29,120 --> 00:20:30,880
the only reason i picked out these

665
00:20:30,880 --> 00:20:32,960
is because each of these had ways that

666
00:20:32,960 --> 00:20:35,120
we found we could interact with their ap

667
00:20:35,120 --> 00:20:37,280
or their apis to be able to create the

668
00:20:37,280 --> 00:20:39,039
same functionality we did

669
00:20:39,039 --> 00:20:41,360
with our slackbot so while our prototype

670
00:20:41,360 --> 00:20:43,120
is in slack the concept of this is

671
00:20:43,120 --> 00:20:44,559
you can do it with anything as long as

672
00:20:44,559 --> 00:20:46,799
you find the right apis and as long as

673
00:20:46,799 --> 00:20:48,640
it's natively baked in

674
00:20:48,640 --> 00:20:51,520
and that should create a a great flow

675
00:20:51,520 --> 00:20:54,559
that's hard to detect

676
00:20:56,880 --> 00:20:58,159
we already talked about this but

677
00:20:58,159 --> 00:21:00,000
basically if you're already going

678
00:21:00,000 --> 00:21:01,039
through a trusted flow

679
00:21:01,039 --> 00:21:02,400
that means basically the network

680
00:21:02,400 --> 00:21:04,559
security is thrown out the door

681
00:21:04,559 --> 00:21:06,159
meaning that now you're only fighting

682
00:21:06,159 --> 00:21:08,240
with the host-based security

683
00:21:08,240 --> 00:21:10,799
um so our favorite part is if you

684
00:21:10,799 --> 00:21:12,799
already have ways out of your network to

685
00:21:12,799 --> 00:21:14,480
stuff like microsoft teams

686
00:21:14,480 --> 00:21:16,159
then if i piggyback off of it i no

687
00:21:16,159 --> 00:21:17,679
longer have to worry about did my

688
00:21:17,679 --> 00:21:19,760
traffic get out

689
00:21:19,760 --> 00:21:22,080
also uh their certificates will also be

690
00:21:22,080 --> 00:21:23,600
valid they'll already have encrypted

691
00:21:23,600 --> 00:21:25,120
sessions so you're just riding over all

692
00:21:25,120 --> 00:21:28,559
of that making your life super easy

693
00:21:28,559 --> 00:21:31,360
also what i'm loving now is developers

694
00:21:31,360 --> 00:21:32,320
love when you

695
00:21:32,320 --> 00:21:34,159
bake stuff into their application so

696
00:21:34,159 --> 00:21:35,600
what they try to do is they now

697
00:21:35,600 --> 00:21:38,080
document their apis extremely well they

698
00:21:38,080 --> 00:21:39,919
love giving examples they love going to

699
00:21:39,919 --> 00:21:42,400
stack overflow giving you references

700
00:21:42,400 --> 00:21:44,559
so by doing this other developers

701
00:21:44,559 --> 00:21:46,320
integrate their apps

702
00:21:46,320 --> 00:21:49,679
with uh that sas product and then as an

703
00:21:49,679 --> 00:21:50,799
attackers

704
00:21:50,799 --> 00:21:53,360
we integrate our application with their

705
00:21:53,360 --> 00:21:58,240
product it's glorious

706
00:21:58,240 --> 00:22:00,720
so i i put some links up here um and we

707
00:22:00,720 --> 00:22:02,000
didn't want to post all of these because

708
00:22:02,000 --> 00:22:03,679
once again this is all about prototypes

709
00:22:03,679 --> 00:22:05,120
and we didn't want to create like four

710
00:22:05,120 --> 00:22:05,679
different

711
00:22:05,679 --> 00:22:09,760
uh rats out there but salesforce has a

712
00:22:09,760 --> 00:22:11,200
great documented api

713
00:22:11,200 --> 00:22:13,120
if you use their live agent rest monitor

714
00:22:13,120 --> 00:22:15,600
chat you could essentially

715
00:22:15,600 --> 00:22:18,799
um grab messages out of a chat log send

716
00:22:18,799 --> 00:22:19,520
messages

717
00:22:19,520 --> 00:22:21,679
to that chat log upload files to that

718
00:22:21,679 --> 00:22:23,840
chat log and download files to that chat

719
00:22:23,840 --> 00:22:24,400
log

720
00:22:24,400 --> 00:22:26,000
so if i can do that then i can just

721
00:22:26,000 --> 00:22:27,760
re-factor my

722
00:22:27,760 --> 00:22:30,159
my client on my machine to be able to

723
00:22:30,159 --> 00:22:31,200
take that same

724
00:22:31,200 --> 00:22:33,679
logic and be able to download execute

725
00:22:33,679 --> 00:22:35,280
and task

726
00:22:35,280 --> 00:22:37,520
the next one's github right have you

727
00:22:37,520 --> 00:22:39,360
ever thought about just taking a pr

728
00:22:39,360 --> 00:22:42,320
right or taking a comment on an issue

729
00:22:42,320 --> 00:22:44,159
and be able to do the same type of

730
00:22:44,159 --> 00:22:45,120
communications

731
00:22:45,120 --> 00:22:46,720
especially if it's in a private repo

732
00:22:46,720 --> 00:22:48,000
because then nobody else is going to

733
00:22:48,000 --> 00:22:49,120
know

734
00:22:49,120 --> 00:22:52,000
um slack we just go to api.slack.com

735
00:22:52,000 --> 00:22:53,760
slack you did a great job of documenting

736
00:22:53,760 --> 00:22:54,559
your api

737
00:22:54,559 --> 00:22:56,799
love it love it love it um and then one

738
00:22:56,799 --> 00:22:58,640
of the lesser knowns that people

739
00:22:58,640 --> 00:23:00,320
don't really investigate too much into

740
00:23:00,320 --> 00:23:02,159
is atlasian or the jiren confluence and

741
00:23:02,159 --> 00:23:03,600
i like going after this because i go to

742
00:23:03,600 --> 00:23:05,360
a lot of environments where they have

743
00:23:05,360 --> 00:23:07,360
uh atlasian cloud or they have jira

744
00:23:07,360 --> 00:23:09,520
server on their on-prem or their

745
00:23:09,520 --> 00:23:11,280
confluence on-prem so our traffic seems

746
00:23:11,280 --> 00:23:13,200
just to blend in really well

747
00:23:13,200 --> 00:23:15,200
um but i chose all these because all of

748
00:23:15,200 --> 00:23:17,039
these had some kind of chat feature or

749
00:23:17,039 --> 00:23:18,480
some kind of comment feature and if you

750
00:23:18,480 --> 00:23:19,840
have that chat feature

751
00:23:19,840 --> 00:23:22,000
that means you have client client server

752
00:23:22,000 --> 00:23:23,520
relations going back and forth and if

753
00:23:23,520 --> 00:23:24,880
you have an api to be able to scrape

754
00:23:24,880 --> 00:23:25,440
that

755
00:23:25,440 --> 00:23:27,280
then you can make a c2 riding over those

756
00:23:27,280 --> 00:23:29,840
comps too

757
00:23:31,440 --> 00:23:33,760
so this moves into the defensive side

758
00:23:33,760 --> 00:23:35,760
because you never want to give a problem

759
00:23:35,760 --> 00:23:37,120
without some kind of solution and

760
00:23:37,120 --> 00:23:38,080
unfortunately i'm not going to give a

761
00:23:38,080 --> 00:23:39,440
great solution but i'm going to talk

762
00:23:39,440 --> 00:23:40,480
about things that

763
00:23:40,480 --> 00:23:42,400
we could try but it's high friction to

764
00:23:42,400 --> 00:23:44,320
an environment so from a networking

765
00:23:44,320 --> 00:23:45,600
standpoint right

766
00:23:45,600 --> 00:23:47,440
you're already blending in this is more

767
00:23:47,440 --> 00:23:49,200
of a culture change that needs to happen

768
00:23:49,200 --> 00:23:50,000
which is

769
00:23:50,000 --> 00:23:51,840
we don't need to implicitly trust our

770
00:23:51,840 --> 00:23:53,600
sas applications out there i don't need

771
00:23:53,600 --> 00:23:55,279
to put whitelist that says hey anything

772
00:23:55,279 --> 00:23:57,120
that goes to microsoft teams

773
00:23:57,120 --> 00:23:58,720
it's just good to go i'm not going to

774
00:23:58,720 --> 00:24:00,720
monitor it there's an audit log if i

775
00:24:00,720 --> 00:24:02,240
ever need to go to it

776
00:24:02,240 --> 00:24:04,080
if you ever go to those audit logs those

777
00:24:04,080 --> 00:24:05,679
audit logs don't get down to the

778
00:24:05,679 --> 00:24:06,720
granular

779
00:24:06,720 --> 00:24:10,559
um comps between users for somebody

780
00:24:10,559 --> 00:24:14,159
else's server um typically the best you

781
00:24:14,159 --> 00:24:15,760
can get is the logs for your current

782
00:24:15,760 --> 00:24:16,720
server

783
00:24:16,720 --> 00:24:19,840
so that being said let's not

784
00:24:19,840 --> 00:24:21,120
let's let's create a little bit of

785
00:24:21,120 --> 00:24:23,279
friction and a little bit more uh

786
00:24:23,279 --> 00:24:24,799
put on our plate from a networking

787
00:24:24,799 --> 00:24:26,400
perspective and let's just

788
00:24:26,400 --> 00:24:28,480
try to analyze it um if you want to get

789
00:24:28,480 --> 00:24:30,000
really fancy you can do the ssl

790
00:24:30,000 --> 00:24:31,120
stripping in the middle

791
00:24:31,120 --> 00:24:32,880
then you could try to break apart each

792
00:24:32,880 --> 00:24:34,640
packet you could try to say hey

793
00:24:34,640 --> 00:24:36,320
this is going to our channel this is

794
00:24:36,320 --> 00:24:37,760
going to somebody else's i think

795
00:24:37,760 --> 00:24:40,000
if we go down that route theoretically

796
00:24:40,000 --> 00:24:40,880
it would work

797
00:24:40,880 --> 00:24:42,480
but i think from an implementation

798
00:24:42,480 --> 00:24:44,640
standpoint it would be an epic failure

799
00:24:44,640 --> 00:24:47,360
um but that being said we could reach

800
00:24:47,360 --> 00:24:48,960
out to some of these vendors and say hey

801
00:24:48,960 --> 00:24:50,159
how can you protect

802
00:24:50,159 --> 00:24:51,919
us from x and then this is where they

803
00:24:51,919 --> 00:24:53,600
could say hey let's look for short-lived

804
00:24:53,600 --> 00:24:55,360
slack channels or short-lived

805
00:24:55,360 --> 00:24:58,480
um slacks uh groups um

806
00:24:58,480 --> 00:25:00,000
and other monitoring places to put in

807
00:25:00,000 --> 00:25:01,760
place long story short from a networking

808
00:25:01,760 --> 00:25:03,200
perspective it's tough

809
00:25:03,200 --> 00:25:07,120
and it's taxing this basically means

810
00:25:07,120 --> 00:25:08,000
that i'm not

811
00:25:08,000 --> 00:25:09,600
i'm not fighting the network i'm only

812
00:25:09,600 --> 00:25:11,520
fighting the host so

813
00:25:11,520 --> 00:25:13,360
if we focus with our application on

814
00:25:13,360 --> 00:25:16,400
making system calls that most calls make

815
00:25:16,400 --> 00:25:18,480
and be able to control encrypted

816
00:25:18,480 --> 00:25:20,080
encryption from the host

817
00:25:20,080 --> 00:25:22,799
to whatever our server is it's gonna

818
00:25:22,799 --> 00:25:25,200
really make it hard to be detected

819
00:25:25,200 --> 00:25:27,600
also with the ability now for everybody

820
00:25:27,600 --> 00:25:29,039
to just compile their own application

821
00:25:29,039 --> 00:25:29,919
you're going to be getting different

822
00:25:29,919 --> 00:25:30,640
hashes

823
00:25:30,640 --> 00:25:32,640
so you're going to really be at the whim

824
00:25:32,640 --> 00:25:34,640
of how well

825
00:25:34,640 --> 00:25:36,400
your antivirus products going to be able

826
00:25:36,400 --> 00:25:39,279
to do at uh heuristics

827
00:25:39,279 --> 00:25:41,360
so and then just a rule of thumb the

828
00:25:41,360 --> 00:25:43,200
lighter lighter weight the payload

829
00:25:43,200 --> 00:25:44,559
theoretically the harder it is a

830
00:25:44,559 --> 00:25:47,039
signature

831
00:25:47,600 --> 00:25:50,480
so let's introduce yet another slack c2

832
00:25:50,480 --> 00:25:52,640
bot

833
00:25:52,640 --> 00:25:54,880
so when we went to the design table for

834
00:25:54,880 --> 00:25:56,559
this we said hey what do we want we want

835
00:25:56,559 --> 00:25:58,080
lightweight we said we wanted it to be

836
00:25:58,080 --> 00:25:59,039
80k

837
00:25:59,039 --> 00:26:01,520
um yeah we felt on that one by the way

838
00:26:01,520 --> 00:26:02,320
really hard

839
00:26:02,320 --> 00:26:04,080
uh turns out just json implementation

840
00:26:04,080 --> 00:26:06,000
took us up to like 200k

841
00:26:06,000 --> 00:26:07,760
um but we did say let's make it as small

842
00:26:07,760 --> 00:26:09,760
as possible then we said hey let's

843
00:26:09,760 --> 00:26:11,919
minimize functionality so that it blends

844
00:26:11,919 --> 00:26:13,200
in with the system

845
00:26:13,200 --> 00:26:15,840
and then we said hey can we go one step

846
00:26:15,840 --> 00:26:17,760
further and can we add the ability that

847
00:26:17,760 --> 00:26:19,919
if we're safe can we load something else

848
00:26:19,919 --> 00:26:21,679
into our process space

849
00:26:21,679 --> 00:26:25,279
such as another dll and then finally

850
00:26:25,279 --> 00:26:26,400
when we got all that done

851
00:26:26,400 --> 00:26:29,279
we said hey can we make sure that um

852
00:26:29,279 --> 00:26:31,279
that our rat speaks southern

853
00:26:31,279 --> 00:26:34,559
so we'll see more of that in a minute um

854
00:26:34,559 --> 00:26:36,320
so let me try to kick to the demo right

855
00:26:36,320 --> 00:26:38,559
now we're going to go live because we

856
00:26:38,559 --> 00:26:42,559
had to refactor code very last minute

857
00:26:48,559 --> 00:26:50,640
cool so what you see here is my top

858
00:26:50,640 --> 00:26:52,000
screen is my

859
00:26:52,000 --> 00:26:54,320
is my windows workstation and then my

860
00:26:54,320 --> 00:26:56,559
bottom screen is a slack channel i set

861
00:26:56,559 --> 00:26:56,960
up

862
00:26:56,960 --> 00:26:58,960
if you've ever tried to set up slack

863
00:26:58,960 --> 00:27:00,640
it's super easy you go to slack.com and

864
00:27:00,640 --> 00:27:02,080
it's like enter your workspace and you

865
00:27:02,080 --> 00:27:02,720
can go

866
00:27:02,720 --> 00:27:04,480
create me a new workspace it's like cool

867
00:27:04,480 --> 00:27:06,159
what do you want it to be called

868
00:27:06,159 --> 00:27:07,679
tell me your favorite things and then

869
00:27:07,679 --> 00:27:09,679
create you a slack workspace and then

870
00:27:09,679 --> 00:27:10,559
next thing you know

871
00:27:10,559 --> 00:27:12,240
within a matter of minutes you have a

872
00:27:12,240 --> 00:27:13,840
slack workspace

873
00:27:13,840 --> 00:27:15,440
then what you need to do is you need to

874
00:27:15,440 --> 00:27:17,200
go in and build an app i know this

875
00:27:17,200 --> 00:27:19,039
sounds daunting but it's really easy all

876
00:27:19,039 --> 00:27:20,720
you have to do is either give it web

877
00:27:20,720 --> 00:27:21,360
hooks

878
00:27:21,360 --> 00:27:24,640
or you can give it um i

879
00:27:24,640 --> 00:27:27,039
can't i i'm drawing a mind blank on what

880
00:27:27,039 --> 00:27:27,840
they call it

881
00:27:27,840 --> 00:27:31,679
um oh you give it an oauth session

882
00:27:31,679 --> 00:27:33,200
and then by giving the law session you

883
00:27:33,200 --> 00:27:35,360
assign permissions to it so for this one

884
00:27:35,360 --> 00:27:36,720
we need a read write

885
00:27:36,720 --> 00:27:38,960
of chat history we need the ability to

886
00:27:38,960 --> 00:27:40,159
create channels

887
00:27:40,159 --> 00:27:42,159
and then we needed the ability to upload

888
00:27:42,159 --> 00:27:43,360
and download files

889
00:27:43,360 --> 00:27:45,919
so we gave it those permissions we said

890
00:27:45,919 --> 00:27:47,279
attach it to this

891
00:27:47,279 --> 00:27:50,240
um this slack work group or workspace

892
00:27:50,240 --> 00:27:52,080
and then within five minutes we had a c2

893
00:27:52,080 --> 00:27:53,360
up and up and running

894
00:27:53,360 --> 00:27:57,120
with a 99.999 sla because slack

895
00:27:57,120 --> 00:28:00,240
loves that so now all i have to do is

896
00:28:00,240 --> 00:28:01,679
worry about infecting people

897
00:28:01,679 --> 00:28:03,919
so in this scenario uh we got on a box

898
00:28:03,919 --> 00:28:05,760
through rdp or something

899
00:28:05,760 --> 00:28:09,039
um we have our our dll here right now

900
00:28:09,039 --> 00:28:12,720
it's called cpp.dll so all we did was we

901
00:28:12,720 --> 00:28:14,960
said hey let's just run dll this so

902
00:28:14,960 --> 00:28:19,760
we're run dll 32

903
00:28:21,200 --> 00:28:23,039
and then we're just gonna call export

904
00:28:23,039 --> 00:28:24,240
one

905
00:28:24,240 --> 00:28:27,520
oops when we run it

906
00:28:27,520 --> 00:28:29,200
we instantly see we get a notification

907
00:28:29,200 --> 00:28:31,200
into our slack c2 what we did was we

908
00:28:31,200 --> 00:28:31,840
said hey

909
00:28:31,840 --> 00:28:33,520
we wanted to create a unique identifier

910
00:28:33,520 --> 00:28:34,880
and then we said well do we want that

911
00:28:34,880 --> 00:28:36,640
unique identifier to be the same

912
00:28:36,640 --> 00:28:38,640
every time we go to a computer and we

913
00:28:38,640 --> 00:28:40,480
said no we might have multiple sessions

914
00:28:40,480 --> 00:28:41,840
we want to be able to identify them

915
00:28:41,840 --> 00:28:42,640
different

916
00:28:42,640 --> 00:28:44,799
so if i run it again you should see i

917
00:28:44,799 --> 00:28:47,039
get another unique id

918
00:28:47,039 --> 00:28:48,960
um what you're seeing is a heartbeat so

919
00:28:48,960 --> 00:28:50,559
we have this in our debug mode because

920
00:28:50,559 --> 00:28:51,840
it just lets us know that

921
00:28:51,840 --> 00:28:53,520
we haven't died and we can interact with

922
00:28:53,520 --> 00:28:55,600
it

923
00:28:56,000 --> 00:28:57,679
so the next thing i want to do is i want

924
00:28:57,679 --> 00:28:58,880
to be able to speak southern to it

925
00:28:58,880 --> 00:29:00,480
because i'm from south georgia and my

926
00:29:00,480 --> 00:29:01,840
friend daniel is from southern

927
00:29:01,840 --> 00:29:02,799
mississippi

928
00:29:02,799 --> 00:29:04,640
um and we don't speak proper english for

929
00:29:04,640 --> 00:29:07,279
the most part so we say hey

930
00:29:07,279 --> 00:29:10,399
and whatever our

931
00:29:10,399 --> 00:29:12,799
our id is and then we put a comma

932
00:29:12,799 --> 00:29:14,559
because that's grammatically correct

933
00:29:14,559 --> 00:29:18,320
and i could be like who am i oop

934
00:29:18,320 --> 00:29:21,360
if i spill that correctly i love live

935
00:29:21,360 --> 00:29:22,480
demos

936
00:29:22,480 --> 00:29:24,840
if i do it correctly it should respond

937
00:29:24,840 --> 00:29:27,840
back

938
00:29:28,320 --> 00:29:31,600
and it's like cool i'm desktop blah blah

939
00:29:31,600 --> 00:29:33,440
brandon blah blah blah

940
00:29:33,440 --> 00:29:35,840
um then i could say let me pull up my

941
00:29:35,840 --> 00:29:37,520
list of commands that we have

942
00:29:37,520 --> 00:29:41,279
uh i can say talk every one minute

943
00:29:41,279 --> 00:29:44,720
because you're being really loud

944
00:29:48,559 --> 00:29:50,080
and they should grab that and then it

945
00:29:50,080 --> 00:29:52,640
shouldn't talk to me for another minute

946
00:29:52,640 --> 00:29:54,159
the last piece of this is i can keep

947
00:29:54,159 --> 00:29:55,840
running commands all day long

948
00:29:55,840 --> 00:29:58,720
i can tell it to shut down i could be i

949
00:29:58,720 --> 00:30:01,360
can then say hey y'all

950
00:30:01,360 --> 00:30:05,200
i want to say we get it like this

951
00:30:05,200 --> 00:30:09,200
and then i can say uh

952
00:30:09,200 --> 00:30:11,200
i can run that same who am i again and

953
00:30:11,200 --> 00:30:14,799
then everybody to respond back

954
00:30:17,360 --> 00:30:21,199
oh i love it the demo fell

955
00:30:21,520 --> 00:30:25,279
let me uh kill this payload real quick

956
00:30:27,279 --> 00:30:29,919
we have gtfo if it wants to leave so

957
00:30:29,919 --> 00:30:30,880
it's like hey

958
00:30:30,880 --> 00:30:34,080
i'm out of here that will

959
00:30:34,080 --> 00:30:36,240
be like a little pig and play a banjo

960
00:30:36,240 --> 00:30:38,080
that will be whenever you it elevates

961
00:30:38,080 --> 00:30:39,520
the system

962
00:30:39,520 --> 00:30:43,039
so uh we're using the standard library

963
00:30:43,039 --> 00:30:44,159
for most of this

964
00:30:44,159 --> 00:30:47,279
um we basically we tried to statically

965
00:30:47,279 --> 00:30:48,480
bake everything into it

966
00:30:48,480 --> 00:30:49,919
and then it just got i think it was up

967
00:30:49,919 --> 00:30:52,159
to like 700 800k

968
00:30:52,159 --> 00:30:55,600
and so we made the design decision to um

969
00:30:55,600 --> 00:30:57,440
try to use the native windows system

970
00:30:57,440 --> 00:30:59,039
calls in there and so by doing that we

971
00:30:59,039 --> 00:31:00,320
had to import those libraries but it

972
00:31:00,320 --> 00:31:04,960
took us down to about 215k um

973
00:31:04,960 --> 00:31:06,799
so the last piece i want to show is

974
00:31:06,799 --> 00:31:08,640
right it's really hard to signature this

975
00:31:08,640 --> 00:31:09,519
because right now

976
00:31:09,519 --> 00:31:12,320
we're doing nothing outside of what most

977
00:31:12,320 --> 00:31:13,760
systems do right

978
00:31:13,760 --> 00:31:16,320
uh or most applications do they'll do a

979
00:31:16,320 --> 00:31:17,919
directory listing sure not a problem

980
00:31:17,919 --> 00:31:19,600
they'll do an ipconfig they'll talk to

981
00:31:19,600 --> 00:31:21,120
their server in this case we're talking

982
00:31:21,120 --> 00:31:22,159
to slack

983
00:31:22,159 --> 00:31:24,159
yes uh one of the arguments here is well

984
00:31:24,159 --> 00:31:26,399
i can just i just can implement a white

985
00:31:26,399 --> 00:31:27,200
listing

986
00:31:27,200 --> 00:31:28,799
thing that says only this application

987
00:31:28,799 --> 00:31:30,480
can talk to slack if you ever try to

988
00:31:30,480 --> 00:31:32,080
implement whitelisting or blacklisting

989
00:31:32,080 --> 00:31:33,519
from a network perspective or even from

990
00:31:33,519 --> 00:31:34,880
an application perspective

991
00:31:34,880 --> 00:31:36,720
in an enterprise environment it doesn't

992
00:31:36,720 --> 00:31:38,000
work out too well

993
00:31:38,000 --> 00:31:40,880
um it tends to be somebody's sole job

994
00:31:40,880 --> 00:31:42,080
and then next thing you know two years

995
00:31:42,080 --> 00:31:43,200
later you have like 80

996
00:31:43,200 --> 00:31:44,840
000 blocks that you just don't even

997
00:31:44,840 --> 00:31:46,960
recognize um

998
00:31:46,960 --> 00:31:50,559
so the last piece i'm gonna do on here

999
00:31:50,720 --> 00:31:53,360
is show you that we can now load um

1000
00:31:53,360 --> 00:31:54,799
other stuff in here so let me kill this

1001
00:31:54,799 --> 00:31:58,000
one we're gonna start from scratch

1002
00:31:58,720 --> 00:32:01,840
cool we're gonna launch it again this

1003
00:32:01,840 --> 00:32:03,679
time i use the silent brakes

1004
00:32:03,679 --> 00:32:06,240
uh srdi uh implementation on their

1005
00:32:06,240 --> 00:32:07,120
github once again

1006
00:32:07,120 --> 00:32:08,640
i'll share the link to our github but

1007
00:32:08,640 --> 00:32:10,480
we'll also um

1008
00:32:10,480 --> 00:32:12,480
uh if you read the readme you'll see all

1009
00:32:12,480 --> 00:32:13,679
this but what we're going to do

1010
00:32:13,679 --> 00:32:15,519
essentially is we're going to say hey

1011
00:32:15,519 --> 00:32:17,919
let's load this let's then take another

1012
00:32:17,919 --> 00:32:19,679
dll which is going to just be the same

1013
00:32:19,679 --> 00:32:21,360
library and then load it inside of our

1014
00:32:21,360 --> 00:32:22,720
cells without touching disk in our

1015
00:32:22,720 --> 00:32:23,200
current

1016
00:32:23,200 --> 00:32:27,519
process space so it's running right now

1017
00:32:27,519 --> 00:32:30,159
um before this i was able to upload a

1018
00:32:30,159 --> 00:32:32,320
file

1019
00:32:32,320 --> 00:32:35,439
uh let me scroll up

1020
00:32:37,440 --> 00:32:39,679
oh here it is you can see i have a file

1021
00:32:39,679 --> 00:32:42,240
here called cp uh cpp.bmp

1022
00:32:42,240 --> 00:32:44,240
so daniel said hey let's make sure that

1023
00:32:44,240 --> 00:32:46,480
when we upload it into our process space

1024
00:32:46,480 --> 00:32:48,399
that it looks like something and let's

1025
00:32:48,399 --> 00:32:50,320
make it look like a bitmap image

1026
00:32:50,320 --> 00:32:52,320
um and the best part about this is if

1027
00:32:52,320 --> 00:32:53,360
you look at the uh

1028
00:32:53,360 --> 00:32:56,880
the struct for a bitmap it's basically

1029
00:32:56,880 --> 00:32:58,960
have like these five characters and then

1030
00:32:58,960 --> 00:33:00,799
everything else is dynamic because it's

1031
00:33:00,799 --> 00:33:03,360
changed over time

1032
00:33:03,360 --> 00:33:06,880
um nice

1033
00:33:06,880 --> 00:33:08,640
but that being said so what we do is we

1034
00:33:08,640 --> 00:33:10,000
take any payload we upload

1035
00:33:10,000 --> 00:33:12,880
and slack so here you see cpp.bmp and

1036
00:33:12,880 --> 00:33:13,919
then we just say hey

1037
00:33:13,919 --> 00:33:16,399
run this um with the id and then the

1038
00:33:16,399 --> 00:33:18,000
next time it calls back it will grab

1039
00:33:18,000 --> 00:33:18,799
that file

1040
00:33:18,799 --> 00:33:20,480
it will upload it to its current process

1041
00:33:20,480 --> 00:33:22,320
space and then execute

1042
00:33:22,320 --> 00:33:23,919
and then from a memory forensic

1043
00:33:23,919 --> 00:33:25,600
standpoint if they try to scrape that

1044
00:33:25,600 --> 00:33:26,240
area

1045
00:33:26,240 --> 00:33:28,399
then hopefully they see that it that the

1046
00:33:28,399 --> 00:33:29,840
uh the magic header

1047
00:33:29,840 --> 00:33:31,519
comes back as a bmp and then they just

1048
00:33:31,519 --> 00:33:33,039
brush us aside

1049
00:33:33,039 --> 00:33:36,159
so let's try this right now

1050
00:33:36,159 --> 00:33:38,159
so if i get this right grab and execute

1051
00:33:38,159 --> 00:33:53,840
i should be able to say

1052
00:33:58,320 --> 00:34:00,399
and live demos are going to be glorious

1053
00:34:00,399 --> 00:34:02,159
because now i get to figure out

1054
00:34:02,159 --> 00:34:05,519
if we have any bugs in this right now

1055
00:34:05,519 --> 00:34:08,800
oh well i love this

1056
00:34:08,800 --> 00:34:10,159
uh i didn't have the right permissions

1057
00:34:10,159 --> 00:34:12,480
set up um so this is telling me i have a

1058
00:34:12,480 --> 00:34:14,399
missing scope which is i need files read

1059
00:34:14,399 --> 00:34:15,199
so

1060
00:34:15,199 --> 00:34:18,560
uh do i have time yep i still have 24

1061
00:34:18,560 --> 00:34:19,040
minutes

1062
00:34:19,040 --> 00:34:21,359
so let me show you how easy it is to fix

1063
00:34:21,359 --> 00:34:24,078
your application

1064
00:34:26,560 --> 00:34:35,839
love live demos

1065
00:34:43,839 --> 00:34:49,839
oh and i love felt sights

1066
00:34:56,399 --> 00:34:59,200
okay so we can go in here so we were

1067
00:34:59,200 --> 00:35:00,880
nice enough to add debug stuff in here

1068
00:35:00,880 --> 00:35:02,320
so you can just go in here and see what

1069
00:35:02,320 --> 00:35:03,680
we're missing so we can go

1070
00:35:03,680 --> 00:35:08,879
into where is it

1071
00:35:14,839 --> 00:35:17,839
add

1072
00:35:19,839 --> 00:35:22,640
oh there we go

1073
00:35:29,599 --> 00:35:33,520
we can now go into our

1074
00:35:34,560 --> 00:35:36,720
our permission here so we can say i

1075
00:35:36,720 --> 00:35:39,520
believe it's this one

1076
00:35:42,839 --> 00:35:45,839
nope

1077
00:35:47,520 --> 00:35:49,040
permissions there it is you go into

1078
00:35:49,040 --> 00:35:51,440
permissions it said i need a file read

1079
00:35:51,440 --> 00:35:53,119
so i can just go down here and say add

1080
00:35:53,119 --> 00:35:55,040
oauth

1081
00:35:55,040 --> 00:35:58,000
file read if everything works then

1082
00:35:58,000 --> 00:35:58,640
reinstall

1083
00:35:58,640 --> 00:36:00,879
app

1084
00:36:02,640 --> 00:36:06,240
we're gonna go in here c2 testing

1085
00:36:08,000 --> 00:36:09,200
everything's working so i should be able

1086
00:36:09,200 --> 00:36:13,839
to run that same exact command again

1087
00:36:15,119 --> 00:36:16,480
and that's also another good feature

1088
00:36:16,480 --> 00:36:18,079
here is you can just say hey everybody

1089
00:36:18,079 --> 00:36:27,839
just do this over and over

1090
00:36:28,400 --> 00:36:30,000
awesome it was nice enough to be like

1091
00:36:30,000 --> 00:36:32,000
yeah i can do that and as you can see

1092
00:36:32,000 --> 00:36:34,640
we now have a new id here showing that

1093
00:36:34,640 --> 00:36:36,160
it loaded itself into its current

1094
00:36:36,160 --> 00:36:38,640
process space

1095
00:36:38,640 --> 00:36:40,880
cool i ran through that really fast uh

1096
00:36:40,880 --> 00:36:44,800
let me kick it to questions for anybody

1097
00:36:52,800 --> 00:36:54,160
hey brandon there's a couple questions

1098
00:36:54,160 --> 00:36:55,920
for you in the uh in the question

1099
00:36:55,920 --> 00:36:56,720
windows

1100
00:36:56,720 --> 00:36:57,920
and if you can see those i can read them

1101
00:36:57,920 --> 00:36:59,760
out to you if you like uh yeah can you

1102
00:36:59,760 --> 00:37:01,599
please read them out uh i'm running into

1103
00:37:01,599 --> 00:37:03,280
screen real estate issues

1104
00:37:03,280 --> 00:37:05,680
definitely uh so the first one for you

1105
00:37:05,680 --> 00:37:07,119
is uh

1106
00:37:07,119 --> 00:37:09,119
so everything you you've done so far can

1107
00:37:09,119 --> 00:37:11,359
it apply to on-prem and cloud solutions

1108
00:37:11,359 --> 00:37:12,560
as well

1109
00:37:12,560 --> 00:37:14,480
uh yes so we wrote it for cloud

1110
00:37:14,480 --> 00:37:16,560
solutions i was trying to find a place

1111
00:37:16,560 --> 00:37:17,920
that had slack enterprise

1112
00:37:17,920 --> 00:37:19,280
turns out it costs a lot of money just

1113
00:37:19,280 --> 00:37:21,280
to validate it but based off the api it

1114
00:37:21,280 --> 00:37:22,880
sounds like it would work

1115
00:37:22,880 --> 00:37:24,800
my one hesitation here is if you decide

1116
00:37:24,800 --> 00:37:26,160
to go after enterprise

1117
00:37:26,160 --> 00:37:29,359
base um a solution

1118
00:37:29,359 --> 00:37:32,400
with slack in particular um would be

1119
00:37:32,400 --> 00:37:33,119
that

1120
00:37:33,119 --> 00:37:35,200
you might want to already be internally

1121
00:37:35,200 --> 00:37:36,880
to inside their network already

1122
00:37:36,880 --> 00:37:38,880
one of the big caveats here was the fact

1123
00:37:38,880 --> 00:37:40,320
that you already knew that the traffic

1124
00:37:40,320 --> 00:37:42,960
could get out

1125
00:37:44,640 --> 00:37:45,920
also things got a couple more here for

1126
00:37:45,920 --> 00:37:49,200
you uh this one's about the

1127
00:37:49,200 --> 00:37:50,880
upgrading from from stage zero to stage

1128
00:37:50,880 --> 00:37:53,040
one and if you actually get the sas app

1129
00:37:53,040 --> 00:37:54,079
to leverage it so

1130
00:37:54,079 --> 00:37:56,000
uh would you simply just steal

1131
00:37:56,000 --> 00:37:59,119
credentials for the sas

1132
00:37:59,119 --> 00:38:02,400
would i still no so

1133
00:38:02,400 --> 00:38:04,400
no uh so what we did with all our sas

1134
00:38:04,400 --> 00:38:05,440
stuff right

1135
00:38:05,440 --> 00:38:07,920
is if i go to slack and i stand up my

1136
00:38:07,920 --> 00:38:09,599
own slack workspace

1137
00:38:09,599 --> 00:38:12,160
it's still going to use api.slack.com to

1138
00:38:12,160 --> 00:38:13,920
do all the communications

1139
00:38:13,920 --> 00:38:16,560
um and so the legitimate company's

1140
00:38:16,560 --> 00:38:18,160
workspace is also going to go through

1141
00:38:18,160 --> 00:38:19,280
slack.com

1142
00:38:19,280 --> 00:38:21,119
so from that standpoint i don't have to

1143
00:38:21,119 --> 00:38:22,880
use their workspace i can stand up my

1144
00:38:22,880 --> 00:38:24,480
own and from a network side of the house

1145
00:38:24,480 --> 00:38:25,920
it's all going through the same

1146
00:38:25,920 --> 00:38:29,200
endpoints um it's the actual data inside

1147
00:38:29,200 --> 00:38:31,119
the packet that has to be validated to

1148
00:38:31,119 --> 00:38:32,000
see which way to route

1149
00:38:32,000 --> 00:38:35,280
it does that help

1150
00:38:39,440 --> 00:38:41,200
i'll wait for grayson to reply with that

1151
00:38:41,200 --> 00:38:43,200
he actually had another question as well

1152
00:38:43,200 --> 00:38:44,960
it's uh how do you get them to run this

1153
00:38:44,960 --> 00:38:46,720
spot from the start would you use

1154
00:38:46,720 --> 00:38:49,760
a fish uh so yeah so this goes back to

1155
00:38:49,760 --> 00:38:51,359
our stage zero side of the house which

1156
00:38:51,359 --> 00:38:52,320
is absolutely

1157
00:38:52,320 --> 00:38:55,280
uh we built this because first off if

1158
00:38:55,280 --> 00:38:55,520
you

1159
00:38:55,520 --> 00:38:58,160
signature this at least from our initial

1160
00:38:58,160 --> 00:38:58,720
uh

1161
00:38:58,720 --> 00:39:00,480
assessment you're going to be blocking a

1162
00:39:00,480 --> 00:39:02,400
lot of legitimate apps especially if you

1163
00:39:02,400 --> 00:39:03,440
have a lot of developers in your

1164
00:39:03,440 --> 00:39:05,440
environment that interact with slack

1165
00:39:05,440 --> 00:39:07,839
um so yes my initial thing would be i

1166
00:39:07,839 --> 00:39:09,200
would shoot it through

1167
00:39:09,200 --> 00:39:11,920
um a fish of some sort but at the end of

1168
00:39:11,920 --> 00:39:13,040
the day when we started talking about

1169
00:39:13,040 --> 00:39:14,000
attacking a computer

1170
00:39:14,000 --> 00:39:15,760
from a remote connection like you have

1171
00:39:15,760 --> 00:39:17,440
two pieces you have the actual exploit

1172
00:39:17,440 --> 00:39:18,800
and then the payload

1173
00:39:18,800 --> 00:39:21,040
so the exploit is going to be whatever

1174
00:39:21,040 --> 00:39:22,480
you takes to get you on the box

1175
00:39:22,480 --> 00:39:23,839
this would just be the payload piece

1176
00:39:23,839 --> 00:39:25,760
which executes once you get that

1177
00:39:25,760 --> 00:39:29,839
uh get on that box

1178
00:39:31,200 --> 00:39:33,839
and for this one i do believe we have it

1179
00:39:33,839 --> 00:39:34,880
where it requires

1180
00:39:34,880 --> 00:39:37,119
export one i think if you load it

1181
00:39:37,119 --> 00:39:38,640
outside of a run dll

1182
00:39:38,640 --> 00:39:40,800
you can call dll main or it just it can

1183
00:39:40,800 --> 00:39:43,839
run through dll main

1184
00:39:45,119 --> 00:39:46,400
all right we got a couple for you in the

1185
00:39:46,400 --> 00:39:48,320
discord as well uh what i got here for

1186
00:39:48,320 --> 00:39:49,599
you is how difficult would this to be

1187
00:39:49,599 --> 00:39:51,920
implement on teams or four teams

1188
00:39:51,920 --> 00:39:54,079
yeah so we have one going right now um

1189
00:39:54,079 --> 00:39:56,000
and i don't want to share right now uh

1190
00:39:56,000 --> 00:39:57,680
but it will be probably in the next

1191
00:39:57,680 --> 00:39:59,200
month and a half uh

1192
00:39:59,200 --> 00:40:00,640
because microsoft was nice enough to

1193
00:40:00,640 --> 00:40:02,240
release their beta api for it

1194
00:40:02,240 --> 00:40:04,079
um and so we're working through that

1195
00:40:04,079 --> 00:40:06,560
right now

1196
00:40:07,760 --> 00:40:10,400
awesome yeah for you fred like please

1197
00:40:10,400 --> 00:40:12,400
i'll share the github link in here

1198
00:40:12,400 --> 00:40:15,680
and then um i think we cut a release

1199
00:40:15,680 --> 00:40:17,520
uh which has one that works to this

1200
00:40:17,520 --> 00:40:19,200
channel but if not we'll put a release

1201
00:40:19,200 --> 00:40:20,640
up there just for people

1202
00:40:20,640 --> 00:40:25,680
that don't feel like compiling

1203
00:40:25,680 --> 00:40:27,359
awesome i thought your smile there when

1204
00:40:27,359 --> 00:40:28,480
you started swinging start answering

1205
00:40:28,480 --> 00:40:29,839
that question so good stuff

1206
00:40:29,839 --> 00:40:32,960
you're sneaky the grayson came back with

1207
00:40:32,960 --> 00:40:34,319
another one and with everything that's

1208
00:40:34,319 --> 00:40:35,680
going on with covid and working from

1209
00:40:35,680 --> 00:40:36,480
home

1210
00:40:36,480 --> 00:40:38,480
uh you have you submitted this to see

1211
00:40:38,480 --> 00:40:40,079
the c2 matrix or how are you going to

1212
00:40:40,079 --> 00:40:40,800
proceed with this

1213
00:40:40,800 --> 00:40:44,079
uh the setup you got going on uh so once

1214
00:40:44,079 --> 00:40:45,760
again this was just a prototype uh we've

1215
00:40:45,760 --> 00:40:47,359
written a few other prototypes

1216
00:40:47,359 --> 00:40:49,359
uh but none of them with documentation

1217
00:40:49,359 --> 00:40:50,880
i'm a really bad

1218
00:40:50,880 --> 00:40:52,319
developer when it comes to documenting

1219
00:40:52,319 --> 00:40:55,280
and so is my partner daniel so

1220
00:40:55,280 --> 00:40:57,599
um the only reason we released this is

1221
00:40:57,599 --> 00:40:58,640
to help get the

1222
00:40:58,640 --> 00:41:00,720
creative wills rolling to people um

1223
00:41:00,720 --> 00:41:01,839
because i want them to understand you

1224
00:41:01,839 --> 00:41:02,960
don't have to use slack

1225
00:41:02,960 --> 00:41:04,560
right there's so many sas products out

1226
00:41:04,560 --> 00:41:06,160
there it's all about that creatives

1227
00:41:06,160 --> 00:41:08,160
thinking of how can you get past that

1228
00:41:08,160 --> 00:41:09,200
environment

1229
00:41:09,200 --> 00:41:11,760
um so um but that being said we have

1230
00:41:11,760 --> 00:41:13,200
taken this and given it to the slack

1231
00:41:13,200 --> 00:41:14,560
engineers or at least one of my friends

1232
00:41:14,560 --> 00:41:16,560
who was a slack engineer and so

1233
00:41:16,560 --> 00:41:19,280
they have a sample of this and they said

1234
00:41:19,280 --> 00:41:20,720
that they're working on mitigations for

1235
00:41:20,720 --> 00:41:23,118
it as well

1236
00:41:26,560 --> 00:41:29,040
sweet thank you i don't see any other

1237
00:41:29,040 --> 00:41:29,839
questions

1238
00:41:29,839 --> 00:41:32,880
coming through on discord or anything

1239
00:41:32,880 --> 00:41:33,359
here just

1240
00:41:33,359 --> 00:41:34,960
anybody else i have any questions i'll

1241
00:41:34,960 --> 00:41:36,400
give you a couple minutes to type them

1242
00:41:36,400 --> 00:41:37,040
in

1243
00:41:37,040 --> 00:41:38,880
um if you have any closing remarks or

1244
00:41:38,880 --> 00:41:40,160
anything brandon go ahead

1245
00:41:40,160 --> 00:41:42,880
while i wait for one yeah um absolutely

1246
00:41:42,880 --> 00:41:43,359
so this

1247
00:41:43,359 --> 00:41:45,680
this uh this talk was supposed to be a

1248
00:41:45,680 --> 00:41:46,800
little bit different

1249
00:41:46,800 --> 00:41:48,560
um to the point that we were able to go

1250
00:41:48,560 --> 00:41:50,160
a little bit more technical and

1251
00:41:50,160 --> 00:41:51,599
especially with the microsoft teams

1252
00:41:51,599 --> 00:41:53,839
because i'm a big fan of going after

1253
00:41:53,839 --> 00:41:57,200
teams but what we ended up doing here

1254
00:41:57,200 --> 00:41:58,960
was keeping it high level and i really

1255
00:41:58,960 --> 00:42:00,400
just wanted people to get the critical

1256
00:42:00,400 --> 00:42:01,920
thinking piece out of it because i don't

1257
00:42:01,920 --> 00:42:03,680
want to see another slack c2

1258
00:42:03,680 --> 00:42:05,839
i want to see the next sas c2 that

1259
00:42:05,839 --> 00:42:07,440
nobody's thinking about now

1260
00:42:07,440 --> 00:42:09,280
how can i get out through salesforce

1261
00:42:09,280 --> 00:42:10,560
right because every company seems to

1262
00:42:10,560 --> 00:42:11,599
have salesforce or

1263
00:42:11,599 --> 00:42:13,520
every company seems to have developers

1264
00:42:13,520 --> 00:42:14,960
that contribute to github

1265
00:42:14,960 --> 00:42:16,720
and so those are what interests me more

1266
00:42:16,720 --> 00:42:18,160
and i think it's going to be even harder

1267
00:42:18,160 --> 00:42:20,879
to stop those

1268
00:42:21,920 --> 00:42:24,960
um let's see i think um are the devs

1269
00:42:24,960 --> 00:42:31,520
coming for

1270
00:42:31,520 --> 00:42:33,839
i so i don't want to speak for daniel

1271
00:42:33,839 --> 00:42:34,640
because i don't

1272
00:42:34,640 --> 00:42:35,920
want to put actually i want to put a lot

1273
00:42:35,920 --> 00:42:38,079
of work on his plate so uh what i will

1274
00:42:38,079 --> 00:42:39,040
tell you is

1275
00:42:39,040 --> 00:42:42,079
um we have a private branch uh that has

1276
00:42:42,079 --> 00:42:44,640
a a higher version than what we released

1277
00:42:44,640 --> 00:42:45,359
today

1278
00:42:45,359 --> 00:42:47,599
um and what happened was we're breaking

1279
00:42:47,599 --> 00:42:48,960
out a module so

1280
00:42:48,960 --> 00:42:50,319
when you write this you'll be able to

1281
00:42:50,319 --> 00:42:52,319
supplement your comms so you'll be able

1282
00:42:52,319 --> 00:42:53,520
to say hey whatever

1283
00:42:53,520 --> 00:42:56,560
switch to jira or hey whatever switch

1284
00:42:56,560 --> 00:42:59,599
to um linkedin or hey whatever switch to

1285
00:42:59,599 --> 00:43:00,480
github

1286
00:43:00,480 --> 00:43:02,160
uh right now it's in rough beta and

1287
00:43:02,160 --> 00:43:03,200
right now we're just trying to get a

1288
00:43:03,200 --> 00:43:05,040
bounce between teams and slack

1289
00:43:05,040 --> 00:43:06,880
and the reason we did that was you don't

1290
00:43:06,880 --> 00:43:08,560
you don't necessarily know when you're

1291
00:43:08,560 --> 00:43:10,079
shooting a stage zero what they have on

1292
00:43:10,079 --> 00:43:12,160
their environment but it would be great

1293
00:43:12,160 --> 00:43:13,680
if you shot slack and then you realize

1294
00:43:13,680 --> 00:43:14,880
they're using teams and you just be like

1295
00:43:14,880 --> 00:43:16,560
hey use teams and it pulls the team's

1296
00:43:16,560 --> 00:43:18,640
configuration for your server

1297
00:43:18,640 --> 00:43:20,800
and then it migrates at the same time

1298
00:43:20,800 --> 00:43:22,800
from a counter detection perspective

1299
00:43:22,800 --> 00:43:25,119
it would be great that if the network

1300
00:43:25,119 --> 00:43:26,480
couldn't reach out to your slack thing

1301
00:43:26,480 --> 00:43:28,000
then it automatically tried the second

1302
00:43:28,000 --> 00:43:28,960
or third one

1303
00:43:28,960 --> 00:43:31,599
um so yeah i will say that daniel has

1304
00:43:31,599 --> 00:43:32,960
that on his to-do plate

1305
00:43:32,960 --> 00:43:34,800
and has been beating his head against

1306
00:43:34,800 --> 00:43:36,160
the wall

1307
00:43:36,160 --> 00:43:39,280
but we are making slow progress c2 via

1308
00:43:39,280 --> 00:43:40,800
gmail twitter

1309
00:43:40,800 --> 00:43:42,800
yeah so i i stay away from the social

1310
00:43:42,800 --> 00:43:45,359
medias primarily because most companies

1311
00:43:45,359 --> 00:43:47,920
uh i think we're getting closer to them

1312
00:43:47,920 --> 00:43:49,200
just being like cool you can do social

1313
00:43:49,200 --> 00:43:50,079
media but a lot of

1314
00:43:50,079 --> 00:43:52,720
companies especially dod they block a

1315
00:43:52,720 --> 00:43:54,000
lot of these sites uh

1316
00:43:54,000 --> 00:43:55,680
that are social media related but the

1317
00:43:55,680 --> 00:43:57,280
one thing they can't block is what their

1318
00:43:57,280 --> 00:43:59,040
business is using to get their business

1319
00:43:59,040 --> 00:44:02,079
functions accomplished

1320
00:44:04,240 --> 00:44:06,880
yes absolutely there has been a lot of

1321
00:44:06,880 --> 00:44:08,240
challenges due

1322
00:44:08,240 --> 00:44:11,839
through teams and o365 api just in

1323
00:44:11,839 --> 00:44:12,640
general

1324
00:44:12,640 --> 00:44:14,640
so we're making slower than average

1325
00:44:14,640 --> 00:44:16,640
progress but we are making progress we

1326
00:44:16,640 --> 00:44:23,040
just need to get it stable more reliable

1327
00:44:23,040 --> 00:44:25,839
but so the benefit here i would like to

1328
00:44:25,839 --> 00:44:26,160
go

1329
00:44:26,160 --> 00:44:29,200
i see the os 365 logs so the way we have

1330
00:44:29,200 --> 00:44:29,440
it

1331
00:44:29,440 --> 00:44:31,920
is you would stand up your own oh 365

1332
00:44:31,920 --> 00:44:32,640
instance

1333
00:44:32,640 --> 00:44:34,880
not somebody else's so their logs

1334
00:44:34,880 --> 00:44:36,880
wouldn't show any of your traffic

1335
00:44:36,880 --> 00:44:38,079
but you would still be hitting that

1336
00:44:38,079 --> 00:44:41,200
microsoft endpoint

1337
00:44:42,560 --> 00:44:44,240
uh docker hub i haven't thought about

1338
00:44:44,240 --> 00:44:46,960
docker hub oh that would be sick

1339
00:44:46,960 --> 00:44:49,440
uh yeah fred no no that would be awesome

1340
00:44:49,440 --> 00:44:50,079
please

1341
00:44:50,079 --> 00:44:52,319
um we have it open and once we get that

1342
00:44:52,319 --> 00:44:53,920
next module in we're trying to make it

1343
00:44:53,920 --> 00:44:55,040
yaml configurable

1344
00:44:55,040 --> 00:45:05,839
it'd be great to see some pr's for that

1345
00:45:12,880 --> 00:45:14,400
and if those are following there's

1346
00:45:14,400 --> 00:45:16,240
people typing in the discord chat so

1347
00:45:16,240 --> 00:45:18,800
we're just letting them type

1348
00:45:18,800 --> 00:45:21,440
questions yeah so suzanne susanna just

1349
00:45:21,440 --> 00:45:23,440
said like so using your own instance as

1350
00:45:23,440 --> 00:45:25,119
an invisible go-to for an endpoint for

1351
00:45:25,119 --> 00:45:26,160
o365

1352
00:45:26,160 --> 00:45:28,800
that's the angle yes and you can get

1353
00:45:28,800 --> 00:45:30,240
trials you can get

1354
00:45:30,240 --> 00:45:32,319
quick stand ups so it's extremely low

1355
00:45:32,319 --> 00:45:33,599
cost and then they handle everything

1356
00:45:33,599 --> 00:45:35,280
from the availability to

1357
00:45:35,280 --> 00:45:38,880
uh uh to the server piece of it as well

1358
00:45:38,880 --> 00:45:41,200
and then once again that security uh

1359
00:45:41,200 --> 00:45:42,319
engineer can't

1360
00:45:42,319 --> 00:45:44,640
can't really view those logs because

1361
00:45:44,640 --> 00:45:46,960
it's not theirs

1362
00:45:46,960 --> 00:46:01,839
see cactus is typing

1363
00:46:05,040 --> 00:46:08,160
uh cactus said the on box user that you

1364
00:46:08,160 --> 00:46:11,040
are hit will have already signed on to

1365
00:46:11,040 --> 00:46:12,240
teams

1366
00:46:12,240 --> 00:46:15,359
uh yeah uh but it kind of goes back

1367
00:46:15,359 --> 00:46:16,640
cactus to the fact that

1368
00:46:16,640 --> 00:46:18,319
we we don't want to use their team's

1369
00:46:18,319 --> 00:46:20,319
instance or their

1370
00:46:20,319 --> 00:46:21,839
github instance because their security

1371
00:46:21,839 --> 00:46:23,680
team can use it or can can put

1372
00:46:23,680 --> 00:46:25,280
monitoring around it we want to use our

1373
00:46:25,280 --> 00:46:27,359
own instance but what benefits us

1374
00:46:27,359 --> 00:46:29,040
is because of how the apis work with

1375
00:46:29,040 --> 00:46:30,560
microsoft and slack

1376
00:46:30,560 --> 00:46:33,680
um primarily slack um and github is they

1377
00:46:33,680 --> 00:46:35,760
go to api.slack.com

1378
00:46:35,760 --> 00:46:37,680
and then the actual routing of the

1379
00:46:37,680 --> 00:46:39,680
information is all handled in the actual

1380
00:46:39,680 --> 00:46:42,000
uh packet in the data section of the

1381
00:46:42,000 --> 00:46:43,119
post

1382
00:46:43,119 --> 00:46:45,200
so therefore i can route it to yours i

1383
00:46:45,200 --> 00:46:46,480
can route it to mine but if i route it

1384
00:46:46,480 --> 00:46:48,079
to mine i control everything

1385
00:46:48,079 --> 00:46:50,240
if i route it to yours now i'm gonna be

1386
00:46:50,240 --> 00:46:51,920
at the whim of first off i have to have

1387
00:46:51,920 --> 00:46:53,520
access to your instance

1388
00:46:53,520 --> 00:46:57,760
secondly you can now have an audit trail

1389
00:46:57,760 --> 00:47:00,640
does that clarify

1390
00:47:03,200 --> 00:47:05,920
you have another question in the in the

1391
00:47:05,920 --> 00:47:08,319
questions for the regular chat

1392
00:47:08,319 --> 00:47:10,000
and that one's about again getting the

1393
00:47:10,000 --> 00:47:11,440
first foothold into the sas

1394
00:47:11,440 --> 00:47:13,280
product and how you obtain that first

1395
00:47:13,280 --> 00:47:14,720
foothold

1396
00:47:14,720 --> 00:47:17,839
yeah so what i would do is uh

1397
00:47:17,839 --> 00:47:20,240
the sas product in general would be more

1398
00:47:20,240 --> 00:47:21,359
once i got on the box

1399
00:47:21,359 --> 00:47:22,880
surveying what sas products that

1400
00:47:22,880 --> 00:47:24,720
companies are already talking to

1401
00:47:24,720 --> 00:47:27,760
um so i don't need

1402
00:47:27,760 --> 00:47:29,920
their sas product i just need to know

1403
00:47:29,920 --> 00:47:31,040
what sas product

1404
00:47:31,040 --> 00:47:33,040
they're talking to and then i stand up

1405
00:47:33,040 --> 00:47:35,280
my own instance of that sas product such

1406
00:47:35,280 --> 00:47:35,599
as

1407
00:47:35,599 --> 00:47:37,280
if you go to atlasian you can stand up

1408
00:47:37,280 --> 00:47:39,040
an instance pretty cheap i think it's

1409
00:47:39,040 --> 00:47:40,160
free now

1410
00:47:40,160 --> 00:47:42,240
for like up to 10 users if you go to

1411
00:47:42,240 --> 00:47:43,839
github you can stand up your own github

1412
00:47:43,839 --> 00:47:44,720
for free

1413
00:47:44,720 --> 00:47:46,000
and if you know that that company's

1414
00:47:46,000 --> 00:47:47,760
talking to their github

1415
00:47:47,760 --> 00:47:49,520
then you can talk to your github in your

1416
00:47:49,520 --> 00:47:51,040
own instance and so

1417
00:47:51,040 --> 00:47:52,640
they've already probably whitelisted

1418
00:47:52,640 --> 00:47:54,160
github so you just route your traffic

1419
00:47:54,160 --> 00:47:55,040
through github

1420
00:47:55,040 --> 00:47:57,839
you would have your your client interact

1421
00:47:57,839 --> 00:47:59,359
with github's api

1422
00:47:59,359 --> 00:48:00,640
and then you would just log in to

1423
00:48:00,640 --> 00:48:02,640
wherever it's at and start tasking

1424
00:48:02,640 --> 00:48:04,160
commands to it which would typically if

1425
00:48:04,160 --> 00:48:04,720
i was

1426
00:48:04,720 --> 00:48:06,480
if i was gonna build a github one which

1427
00:48:06,480 --> 00:48:08,240
we are it's gonna be through issues and

1428
00:48:08,240 --> 00:48:11,200
comments of the issues

1429
00:48:13,280 --> 00:48:15,680
um

1430
00:48:17,680 --> 00:48:20,079
well cactus uh i have you can always hit

1431
00:48:20,079 --> 00:48:21,599
me on my twitter

1432
00:48:21,599 --> 00:48:23,520
uh i will also get daniel's twitter out

1433
00:48:23,520 --> 00:48:25,200
here as well um

1434
00:48:25,200 --> 00:48:26,640
and then anybody who wants to have

1435
00:48:26,640 --> 00:48:28,960
follow-on conversations on this uh i

1436
00:48:28,960 --> 00:48:30,960
will hit the uh

1437
00:48:30,960 --> 00:48:32,319
i don't know how much time we have left

1438
00:48:32,319 --> 00:48:33,440
for the conference in general but i'll

1439
00:48:33,440 --> 00:48:35,520
hit the breakout room for a little bit

1440
00:48:35,520 --> 00:48:37,200
um and then at the same time if you have

1441
00:48:37,200 --> 00:48:39,040
any questions comments if you want to

1442
00:48:39,040 --> 00:48:41,040
dig through our code and ask us why we

1443
00:48:41,040 --> 00:48:42,400
chose to do what we did we'll we'll

1444
00:48:42,400 --> 00:48:43,839
explain you'll see that some of the

1445
00:48:43,839 --> 00:48:45,119
stuff we wrote ourselves

1446
00:48:45,119 --> 00:48:46,720
and some of we referenced the calls and

1447
00:48:46,720 --> 00:48:50,319
it was all based off size

1448
00:49:00,839 --> 00:49:03,839
trade-offs

1449
00:49:22,079 --> 00:49:24,160
you

