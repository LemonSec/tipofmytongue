1
00:00:16,450 --> 00:00:21,700
thank<font color="#E5E5E5"> you very much appreciate</font><font color="#CCCCCC"> everybody</font>

2
00:00:18,430 --> 00:00:23,710
coming for you know what in hindsight is

3
00:00:21,700 --> 00:00:25,330
probably the least<font color="#E5E5E5"> exciting topic title</font>

4
00:00:23,710 --> 00:00:29,170
ever so we'll try<font color="#E5E5E5"> to make that up with</font>

5
00:00:25,330 --> 00:00:32,080
some material<font color="#CCCCCC"> why I want</font><font color="#E5E5E5"> to be here</font>

6
00:00:29,170 --> 00:00:33,970
today<font color="#E5E5E5"> is you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> I've been doing</font>

7
00:00:32,080 --> 00:00:35,140
<font color="#E5E5E5">security for quite a while and I have</font>

8
00:00:33,970 --> 00:00:37,180
<font color="#CCCCCC">the</font><font color="#E5E5E5"> fortune of</font><font color="#CCCCCC"> going to a lot of</font>

9
00:00:35,140 --> 00:00:38,739
<font color="#E5E5E5">conferences</font><font color="#CCCCCC"> and seeing a</font><font color="#E5E5E5"> lot of really</font>

10
00:00:37,180 --> 00:00:40,960
<font color="#CCCCCC">great talks and for me the</font><font color="#E5E5E5"> greatest</font>

11
00:00:38,739 --> 00:00:42,760
talks are<font color="#E5E5E5"> not the ones where they always</font>

12
00:00:40,960 --> 00:00:47,170
<font color="#CCCCCC">just</font><font color="#E5E5E5"> drop the tool and they do the demo</font>

13
00:00:42,760 --> 00:00:49,000
<font color="#CCCCCC">I like learning</font><font color="#E5E5E5"> the story about how how</font>

14
00:00:47,170 --> 00:00:50,470
someone got<font color="#E5E5E5"> there you know because I</font>

15
00:00:49,000 --> 00:00:52,120
think there's often the tendency to

16
00:00:50,470 --> 00:00:54,400
<font color="#CCCCCC">think wow that person's just naturally</font>

17
00:00:52,120 --> 00:00:55,809
genius<font color="#E5E5E5"> and you know there are natural</font>

18
00:00:54,400 --> 00:00:58,110
geniuses and there are people<font color="#CCCCCC"> like me</font>

19
00:00:55,809 --> 00:01:00,250
<font color="#CCCCCC">who just</font><font color="#E5E5E5"> Google</font><font color="#CCCCCC"> for everything</font>

20
00:00:58,110 --> 00:01:02,229
constantly and try to make<font color="#E5E5E5"> something</font>

21
00:01:00,250 --> 00:01:04,890
work<font color="#E5E5E5"> so I think I hope that there's a</font>

22
00:01:02,229 --> 00:01:06,880
value<font color="#CCCCCC"> in there in in the</font><font color="#E5E5E5"> storytelling</font>

23
00:01:04,890 --> 00:01:08,470
<font color="#CCCCCC">you know and I want to share a couple</font>

24
00:01:06,880 --> 00:01:11,080
<font color="#E5E5E5">key points</font><font color="#CCCCCC"> about you know what I</font>

25
00:01:08,470 --> 00:01:13,539
consider you know<font color="#E5E5E5"> to be good usability</font>

26
00:01:11,080 --> 00:01:15,250
good<font color="#CCCCCC"> security</font><font color="#E5E5E5"> we're gonna talk a lot</font>

27
00:01:13,540 --> 00:01:19,570
about<font color="#E5E5E5"> you know some tools</font>

28
00:01:15,250 --> 00:01:21,700
<font color="#E5E5E5">there's tons of live demos so you know</font>

29
00:01:19,570 --> 00:01:23,410
that always<font color="#E5E5E5"> goes very well never has a</font>

30
00:01:21,700 --> 00:01:25,780
problem<font color="#E5E5E5"> so I think</font><font color="#CCCCCC"> we'll it would</font><font color="#E5E5E5"> be the</font>

31
00:01:23,410 --> 00:01:28,179
same here and<font color="#E5E5E5"> you'll see QR codes up if</font>

32
00:01:25,780 --> 00:01:30,100
you want to scan the QR<font color="#CCCCCC"> codes</font><font color="#E5E5E5"> it's fine</font>

33
00:01:28,180 --> 00:01:33,130
they're not<font color="#E5E5E5"> connected to anything</font><font color="#CCCCCC"> there</font>

34
00:01:30,100 --> 00:01:35,470
<font color="#CCCCCC">are demo codes</font><font color="#E5E5E5"> you could play</font><font color="#CCCCCC"> around</font>

35
00:01:33,130 --> 00:01:36,520
with the quest<font color="#E5E5E5"> defender soft token or</font>

36
00:01:35,470 --> 00:01:39,550
you<font color="#E5E5E5"> could play around with Google</font>

37
00:01:36,520 --> 00:01:41,890
Authenticator if if you<font color="#E5E5E5"> like so how is</font>

38
00:01:39,550 --> 00:01:44,710
<font color="#CCCCCC">it that</font><font color="#E5E5E5"> I come to be here today</font>

39
00:01:41,890 --> 00:01:48,940
principally because of<font color="#E5E5E5"> a piece</font><font color="#CCCCCC"> of</font>

40
00:01:44,710 --> 00:01:52,030
<font color="#E5E5E5">software that is just absolutely</font><font color="#CCCCCC"> I would</font>

41
00:01:48,940 --> 00:01:54,970
<font color="#E5E5E5">say unusable especially for non security</font>

42
00:01:52,030 --> 00:01:59,159
people<font color="#E5E5E5"> it's called the Dale</font><font color="#CCCCCC"> formally</font><font color="#E5E5E5"> del</font>

43
00:01:54,970 --> 00:02:02,650
now quest one Identity defender product

44
00:01:59,159 --> 00:02:04,810
<font color="#E5E5E5">it's a one-time password</font><font color="#CCCCCC"> system you know</font>

45
00:02:02,650 --> 00:02:06,820
that has obviously a GUI<font color="#CCCCCC"> a way to</font>

46
00:02:04,810 --> 00:02:09,069
present<font color="#E5E5E5"> you know one-time</font><font color="#CCCCCC"> password for</font>

47
00:02:06,820 --> 00:02:11,140
multi-factor authentication<font color="#CCCCCC"> and it has a</font>

48
00:02:09,068 --> 00:02:14,349
you<font color="#E5E5E5"> know a series of back-end hooks so</font>

49
00:02:11,140 --> 00:02:18,609
<font color="#E5E5E5">you can easily add OTP a multi-factor</font>

50
00:02:14,349 --> 00:02:20,890
off to let's say VPN or let's say system

51
00:02:18,610 --> 00:02:23,980
<font color="#CCCCCC">login and it has you know some nice</font>

52
00:02:20,890 --> 00:02:25,510
<font color="#CCCCCC">Enterprise II type features they support</font>

53
00:02:23,980 --> 00:02:28,530
a whole bunch of<font color="#CCCCCC"> tokens so they</font><font color="#E5E5E5"> support</font>

54
00:02:25,510 --> 00:02:30,149
their own<font color="#CCCCCC"> bizarro token</font>

55
00:02:28,530 --> 00:02:33,390
has a grid on<font color="#E5E5E5"> and you have to select</font>

56
00:02:30,150 --> 00:02:36,209
stuff<font color="#E5E5E5"> they support SMS token messages</font>

57
00:02:33,390 --> 00:02:38,940
they support<font color="#CCCCCC"> Yubikey</font><font color="#E5E5E5"> and you know what</font>

58
00:02:36,209 --> 00:02:40,980
it<font color="#E5E5E5"> looks to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> vasco rebranded tokens</font><font color="#CCCCCC"> i</font>

59
00:02:38,940 --> 00:02:44,069
mean so they have a whole range<font color="#CCCCCC"> of token</font>

60
00:02:40,980 --> 00:02:46,950
support<font color="#CCCCCC"> and they also support software</font>

61
00:02:44,069 --> 00:02:49,560
based tokens<font color="#E5E5E5"> right these are tokens that</font>

62
00:02:46,950 --> 00:02:52,829
work on<font color="#CCCCCC"> android that work on iOS they</font>

63
00:02:49,560 --> 00:02:56,130
work in<font color="#E5E5E5"> Windows Java even blackberry and</font>

64
00:02:52,830 --> 00:02:58,830
<font color="#E5E5E5">Windows Mobile</font><font color="#CCCCCC"> so and</font><font color="#E5E5E5"> that is really</font>

65
00:02:56,130 --> 00:03:00,329
<font color="#E5E5E5">this the scope of</font><font color="#CCCCCC"> the talk today that I</font>

66
00:02:58,830 --> 00:03:01,709
<font color="#E5E5E5">want to share with you not really</font>

67
00:03:00,330 --> 00:03:03,480
interested in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> background</font>

68
00:03:01,709 --> 00:03:05,790
infrastructure today<font color="#CCCCCC"> not</font><font color="#E5E5E5"> really</font>

69
00:03:03,480 --> 00:03:09,238
<font color="#E5E5E5">interested in hardware tokens or custom</font>

70
00:03:05,790 --> 00:03:11,700
tokens<font color="#CCCCCC"> I'm only focusing</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> software</font>

71
00:03:09,239 --> 00:03:13,530
based token the<font color="#CCCCCC"> principle reason why I'm</font>

72
00:03:11,700 --> 00:03:16,200
focusing<font color="#CCCCCC"> on the software based token is</font>

73
00:03:13,530 --> 00:03:18,660
because this<font color="#E5E5E5"> has caused me the most pain</font>

74
00:03:16,200 --> 00:03:21,450
right so if you can<font color="#E5E5E5"> imagine you're an</font>

75
00:03:18,660 --> 00:03:24,209
organization<font color="#E5E5E5"> and you release you know</font>

76
00:03:21,450 --> 00:03:26,220
you get a new<font color="#E5E5E5"> employee you</font><font color="#CCCCCC"> give</font><font color="#E5E5E5"> them a</font>

77
00:03:24,209 --> 00:03:27,930
laptop and maybe you pay<font color="#CCCCCC"> for their phone</font>

78
00:03:26,220 --> 00:03:30,330
<font color="#E5E5E5">and you say that's great</font>

79
00:03:27,930 --> 00:03:32,430
go<font color="#E5E5E5"> ahead and VPN into the network we're</font>

80
00:03:30,330 --> 00:03:34,530
just gonna need<font color="#E5E5E5"> you</font><font color="#CCCCCC"> to sign up for</font>

81
00:03:32,430 --> 00:03:35,549
multi-factor authentication and you

82
00:03:34,530 --> 00:03:36,959
might have worked somewhere where they

83
00:03:35,549 --> 00:03:39,900
did that well and that seemed<font color="#CCCCCC"> okay to</font>

84
00:03:36,959 --> 00:03:42,890
you until<font color="#E5E5E5"> you receive this email that</font>

85
00:03:39,900 --> 00:03:44,700
said download the<font color="#E5E5E5"> app and enter</font>

86
00:03:42,890 --> 00:03:50,130
approximately a hundred and<font color="#E5E5E5"> ten</font>

87
00:03:44,700 --> 00:03:51,988
characters on your<font color="#E5E5E5"> phone with no error</font>

88
00:03:50,130 --> 00:03:55,230
correction or indication that you have

89
00:03:51,989 --> 00:03:56,640
<font color="#CCCCCC">it</font><font color="#E5E5E5"> right until</font><font color="#CCCCCC"> you press the activate</font>

90
00:03:55,230 --> 00:03:59,010
button and then it either tells you your

91
00:03:56,640 --> 00:04:00,988
token code is invalid<font color="#CCCCCC"> or not it's if you</font>

92
00:03:59,010 --> 00:04:03,390
remember playing<font color="#E5E5E5"> mastermind where you</font>

93
00:04:00,989 --> 00:04:05,010
had like six digits<font color="#E5E5E5"> and you had to</font>

94
00:04:03,390 --> 00:04:07,559
<font color="#CCCCCC">figure out which is</font><font color="#E5E5E5"> the digit</font><font color="#CCCCCC"> well now</font>

95
00:04:05,010 --> 00:04:10,290
you have a hundred<font color="#E5E5E5"> and ten so horrible</font>

96
00:04:07,560 --> 00:04:12,870
horrible horrible<font color="#CCCCCC"> and I said I'm a new</font>

97
00:04:10,290 --> 00:04:14,328
here<font color="#E5E5E5"> but</font><font color="#CCCCCC"> I think</font><font color="#E5E5E5"> I can help you right so</font>

98
00:04:12,870 --> 00:04:18,418
we<font color="#E5E5E5"> went to make you</font><font color="#CCCCCC"> our codes because</font>

99
00:04:14,329 --> 00:04:21,030
the<font color="#E5E5E5"> Android version of del quest</font>

100
00:04:18,418 --> 00:04:24,359
defender soft token actually supports

101
00:04:21,029 --> 00:04:26,700
<font color="#E5E5E5">the</font><font color="#CCCCCC"> ability to</font><font color="#E5E5E5"> scan QR codes so that's</font>

102
00:04:24,360 --> 00:04:28,610
great<font color="#CCCCCC"> so let's scan the QR code if we</font>

103
00:04:26,700 --> 00:04:31,830
select scan QR code

104
00:04:28,610 --> 00:04:35,280
unfortunately the token app does<font color="#CCCCCC"> not</font>

105
00:04:31,830 --> 00:04:37,800
actually build the barcode scanner<font color="#E5E5E5"> into</font>

106
00:04:35,280 --> 00:04:40,200
it they tell you<font color="#E5E5E5"> go to the Google</font><font color="#CCCCCC"> Play</font>

107
00:04:37,800 --> 00:04:42,050
Store<font color="#CCCCCC"> and download barcode scanner</font><font color="#E5E5E5"> and</font>

108
00:04:40,200 --> 00:04:44,659
<font color="#E5E5E5">install that yourself</font>

109
00:04:42,050 --> 00:04:46,460
great usability<font color="#E5E5E5"> and then when you do so</font>

110
00:04:44,659 --> 00:04:48,740
you realize that<font color="#E5E5E5"> in order</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> activate</font>

111
00:04:46,460 --> 00:04:51,378
multi-factor authentication<font color="#CCCCCC"> you are now</font>

112
00:04:48,740 --> 00:04:54,050
giving a fourth party access to all<font color="#E5E5E5"> of</font>

113
00:04:51,379 --> 00:04:55,430
your contacts<font color="#E5E5E5"> all of your Wi-Fi</font>

114
00:04:54,050 --> 00:04:58,220
connection<font color="#E5E5E5"> information because that's a</font>

115
00:04:55,430 --> 00:05:01,789
critical component<font color="#CCCCCC"> of you know barcodes</font>

116
00:04:58,220 --> 00:05:03,349
apparently so<font color="#E5E5E5"> that doesn't seem</font><font color="#CCCCCC"> right</font>

117
00:05:01,789 --> 00:05:06,378
<font color="#CCCCCC">here you know and</font><font color="#E5E5E5"> so that on its surface</font>

118
00:05:03,349 --> 00:05:09,099
would warrant<font color="#E5E5E5"> further inspection further</font>

119
00:05:06,379 --> 00:05:11,419
modification<font color="#E5E5E5"> so if we</font><font color="#CCCCCC"> switch to iOS</font>

120
00:05:09,099 --> 00:05:13,759
<font color="#E5E5E5">unfortunately the story is even</font><font color="#CCCCCC"> worse</font>

121
00:05:11,419 --> 00:05:17,508
<font color="#CCCCCC">because in iOS</font><font color="#E5E5E5"> you're presented</font><font color="#CCCCCC"> with the</font>

122
00:05:13,759 --> 00:05:19,280
same<font color="#CCCCCC"> crippling usability</font><font color="#E5E5E5"> you know you've</font>

123
00:05:17,509 --> 00:05:24,020
got enter in<font color="#E5E5E5"> these characters you've got</font>

124
00:05:19,280 --> 00:05:27,888
to<font color="#E5E5E5"> hit done</font><font color="#CCCCCC"> and they don't</font><font color="#E5E5E5"> tell you</font><font color="#CCCCCC"> that</font>

125
00:05:24,020 --> 00:05:29,990
you have an<font color="#CCCCCC"> option to scan</font><font color="#E5E5E5"> right so you</font>

126
00:05:27,889 --> 00:05:32,150
know the<font color="#E5E5E5"> world's flagship phone</font>

127
00:05:29,990 --> 00:05:35,389
<font color="#E5E5E5">ecosystem you know with</font><font color="#CCCCCC"> a 12 megapixel</font>

128
00:05:32,150 --> 00:05:37,280
<font color="#CCCCCC">camera is not able to</font><font color="#E5E5E5"> help you import</font>

129
00:05:35,389 --> 00:05:41,210
your<font color="#E5E5E5"> multi-factor authentication token</font>

130
00:05:37,280 --> 00:05:44,780
<font color="#CCCCCC">you must use a</font><font color="#E5E5E5"> third-party QR reader</font>

131
00:05:41,210 --> 00:05:48,049
<font color="#E5E5E5">that you find by yourself</font><font color="#CCCCCC"> if you have to</font>

132
00:05:44,780 --> 00:05:50,840
create<font color="#E5E5E5"> a QR</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> you have</font><font color="#CCCCCC"> to then scan</font>

133
00:05:48,050 --> 00:05:54,110
it<font color="#CCCCCC"> you have to extract</font><font color="#E5E5E5"> the activation</font>

134
00:05:50,840 --> 00:05:57,739
code by using<font color="#E5E5E5"> copy and paste which</font><font color="#CCCCCC"> is</font>

135
00:05:54,110 --> 00:05:59,840
universally so easy<font color="#E5E5E5"> on mobility devices</font>

136
00:05:57,740 --> 00:06:02,500
<font color="#E5E5E5">and then paste it into the software</font>

137
00:05:59,840 --> 00:06:06,229
token<font color="#E5E5E5"> you know which strikes me circa</font>

138
00:06:02,500 --> 00:06:09,500
2001<font color="#E5E5E5"> right it's just not acceptable</font>

139
00:06:06,229 --> 00:06:11,210
nowadays<font color="#CCCCCC"> too we can't treat people</font><font color="#E5E5E5"> this</font>

140
00:06:09,500 --> 00:06:15,789
way<font color="#E5E5E5"> from a security perspective it's</font>

141
00:06:11,210 --> 00:06:18,799
it's<font color="#E5E5E5"> not right</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you know it it gives</font>

142
00:06:15,789 --> 00:06:20,599
<font color="#E5E5E5">security I think a bad name when you're</font>

143
00:06:18,800 --> 00:06:22,310
<font color="#E5E5E5">just trying to protect accountants and</font>

144
00:06:20,599 --> 00:06:24,289
people in<font color="#CCCCCC"> marketing and people</font><font color="#E5E5E5"> in sales</font>

145
00:06:22,310 --> 00:06:26,750
<font color="#E5E5E5">and you're making them</font><font color="#CCCCCC"> go</font><font color="#E5E5E5"> through these</font>

146
00:06:24,289 --> 00:06:29,360
<font color="#E5E5E5">hoops I mean if the hoops are bad enough</font>

147
00:06:26,750 --> 00:06:31,669
<font color="#E5E5E5">that people who are in the information</font>

148
00:06:29,360 --> 00:06:33,800
<font color="#CCCCCC">security field who understand the value</font>

149
00:06:31,669 --> 00:06:36,289
of multi-factor authentication<font color="#E5E5E5"> who know</font>

150
00:06:33,800 --> 00:06:39,340
<font color="#E5E5E5">what a</font><font color="#CCCCCC"> one-time password</font><font color="#E5E5E5"> is know the</font>

151
00:06:36,289 --> 00:06:42,080
value<font color="#E5E5E5"> that it protects and then still</font>

152
00:06:39,340 --> 00:06:44,869
choose to like hate the<font color="#E5E5E5"> system like this</font>

153
00:06:42,080 --> 00:06:47,840
<font color="#E5E5E5">that's a bad sign so what I wanted to</font>

154
00:06:44,870 --> 00:06:50,479
look at<font color="#E5E5E5"> is hey there already exists a</font>

155
00:06:47,840 --> 00:06:52,729
very<font color="#CCCCCC"> usable</font><font color="#E5E5E5"> one-time password token</font>

156
00:06:50,479 --> 00:06:56,000
keeper<font color="#E5E5E5"> it's called Google Authenticator</font>

157
00:06:52,729 --> 00:06:58,130
let's look at the token that<font color="#E5E5E5"> is</font>

158
00:06:56,000 --> 00:07:00,410
generated by the<font color="#E5E5E5"> software token app and</font>

159
00:06:58,130 --> 00:07:02,450
let's figure<font color="#CCCCCC"> out if there is there an</font>

160
00:07:00,410 --> 00:07:05,120
<font color="#CCCCCC">opportunity here is there a</font>

161
00:07:02,450 --> 00:07:07,640
compatibility<font color="#CCCCCC"> between the</font><font color="#E5E5E5"> data the</font>

162
00:07:05,120 --> 00:07:10,400
essence of<font color="#E5E5E5"> these third part of these</font>

163
00:07:07,640 --> 00:07:13,010
proprietary<font color="#E5E5E5"> software tokens and being</font>

164
00:07:10,400 --> 00:07:15,919
used<font color="#E5E5E5"> in Google Authenticator so I'm</font>

165
00:07:13,010 --> 00:07:17,539
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> say we're</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to perform</font><font color="#CCCCCC"> you</font>

166
00:07:15,920 --> 00:07:19,910
know what I call<font color="#E5E5E5"> you know a little bit</font>

167
00:07:17,540 --> 00:07:23,750
<font color="#E5E5E5">of deductive reasoning in airplane</font><font color="#CCCCCC"> mode</font>

168
00:07:19,910 --> 00:07:26,510
<font color="#E5E5E5">which means if I turn</font><font color="#CCCCCC"> on airplane mode</font>

169
00:07:23,750 --> 00:07:28,820
<font color="#E5E5E5">and the phones have no</font><font color="#CCCCCC"> network</font>

170
00:07:26,510 --> 00:07:31,580
connectivity whatsoever<font color="#E5E5E5"> I'm still able</font>

171
00:07:28,820 --> 00:07:34,030
to<font color="#E5E5E5"> import the token and I'm still able</font>

172
00:07:31,580 --> 00:07:37,340
to generate valid one-time passwords

173
00:07:34,030 --> 00:07:40,340
valid six digit tokens<font color="#E5E5E5"> so that tells me</font>

174
00:07:37,340 --> 00:07:44,000
that<font color="#E5E5E5"> these strings of all lowercase</font>

175
00:07:40,340 --> 00:07:45,950
characters through a<font color="#E5E5E5"> through Z they must</font>

176
00:07:44,000 --> 00:07:49,760
contain<font color="#CCCCCC"> the token serial number because</font>

177
00:07:45,950 --> 00:07:52,190
<font color="#E5E5E5">you can see the serial number in both</font>

178
00:07:49,760 --> 00:07:54,980
instances<font color="#E5E5E5"> right and that's not made up</font>

179
00:07:52,190 --> 00:07:57,010
somewhere else<font color="#CCCCCC"> and it must contain the</font>

180
00:07:54,980 --> 00:07:59,900
data to generate<font color="#CCCCCC"> the one-time password</font>

181
00:07:57,010 --> 00:08:02,090
<font color="#E5E5E5">we would generally</font><font color="#CCCCCC"> have to stop there</font>

182
00:07:59,900 --> 00:08:04,489
<font color="#E5E5E5">but they were also nice enough</font><font color="#CCCCCC"> to tell</font>

183
00:08:02,090 --> 00:08:07,969
you<font color="#E5E5E5"> that the token</font><font color="#CCCCCC"> type is o'the</font>

184
00:08:04,490 --> 00:08:10,550
<font color="#CCCCCC">compliant sha-1 when</font><font color="#E5E5E5"> I say something</font>

185
00:08:07,970 --> 00:08:12,950
<font color="#E5E5E5">like and of course we know or I say</font>

186
00:08:10,550 --> 00:08:15,950
something<font color="#E5E5E5"> that sounds obvious what I'm</font>

187
00:08:12,950 --> 00:08:19,219
omitting<font color="#E5E5E5"> in</font><font color="#CCCCCC"> parentheses is I googled for</font>

188
00:08:15,950 --> 00:08:22,099
this<font color="#E5E5E5"> okay so of course both complied</font>

189
00:08:19,220 --> 00:08:24,710
sha-1 tokens are an RFC<font color="#E5E5E5"> for</font><font color="#CCCCCC"> two to six</font>

190
00:08:22,100 --> 00:08:26,780
<font color="#E5E5E5">standard related to kind of h mac</font>

191
00:08:24,710 --> 00:08:29,450
one-time passwords<font color="#E5E5E5"> right which is the</font>

192
00:08:26,780 --> 00:08:30,979
easy<font color="#CCCCCC"> thing to google for</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> i've got a</font>

193
00:08:29,450 --> 00:08:34,250
lot of<font color="#E5E5E5"> hope</font><font color="#CCCCCC"> you know when</font><font color="#E5E5E5"> i'm starting</font>

194
00:08:30,979 --> 00:08:36,110
<font color="#CCCCCC">this adventure i know that whatever the</font>

195
00:08:34,250 --> 00:08:37,820
activation code is has enough

196
00:08:36,110 --> 00:08:40,490
<font color="#E5E5E5">information to</font><font color="#CCCCCC"> generate a one-time</font>

197
00:08:37,820 --> 00:08:44,089
password<font color="#CCCCCC"> and I believe that the one-time</font>

198
00:08:40,490 --> 00:08:45,560
password is<font color="#E5E5E5"> going to be compatible and</font>

199
00:08:44,089 --> 00:08:48,680
compliant with an industry standard

200
00:08:45,560 --> 00:08:50,689
which Google Authenticator also agrees

201
00:08:48,680 --> 00:08:52,849
to adhere by so I<font color="#CCCCCC"> think I have a</font>

202
00:08:50,690 --> 00:08:55,370
syllogism here<font color="#E5E5E5"> right I equals</font><font color="#CCCCCC"> B B equals</font>

203
00:08:52,850 --> 00:08:57,830
C equals C so I<font color="#CCCCCC"> think I'm good and</font><font color="#E5E5E5"> my</font>

204
00:08:55,370 --> 00:09:03,200
goal for the rest<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this talk</font><font color="#CCCCCC"> is to</font>

205
00:08:57,830 --> 00:09:05,830
<font color="#E5E5E5">turn that phrase of text characters into</font>

206
00:09:03,200 --> 00:09:08,000
a QR<font color="#CCCCCC"> code so that it can be loaded</font><font color="#E5E5E5"> in</font>

207
00:09:05,830 --> 00:09:10,199
Google Authenticator and<font color="#CCCCCC"> I can throw</font>

208
00:09:08,000 --> 00:09:12,579
<font color="#CCCCCC">away the old code</font>

209
00:09:10,199 --> 00:09:15,008
so and now we're going<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> that I'm</font>

210
00:09:12,579 --> 00:09:17,829
gonna<font color="#E5E5E5"> want to reverse engineer</font><font color="#CCCCCC"> the</font>

211
00:09:15,009 --> 00:09:20,259
application<font color="#E5E5E5"> well it's an Android</font>

212
00:09:17,829 --> 00:09:25,449
<font color="#E5E5E5">application</font><font color="#CCCCCC"> so what you're looking</font><font color="#E5E5E5"> at is</font>

213
00:09:20,259 --> 00:09:28,240
a<font color="#E5E5E5"> screen shot of a console</font><font color="#CCCCCC"> accessing a</font>

214
00:09:25,449 --> 00:09:30,339
rooted android device<font color="#E5E5E5"> right that is like</font>

215
00:09:28,240 --> 00:09:32,110
a big<font color="#CCCCCC"> google search there how do i root</font>

216
00:09:30,339 --> 00:09:32,589
my device how do I get<font color="#CCCCCC"> access to log</font>

217
00:09:32,110 --> 00:09:35,230
data

218
00:09:32,589 --> 00:09:37,930
where does system store information<font color="#E5E5E5"> I</font>

219
00:09:35,230 --> 00:09:40,300
mean each one<font color="#E5E5E5"> of these is as valuable</font>

220
00:09:37,930 --> 00:09:43,599
google searching so<font color="#E5E5E5"> I run this command</font>

221
00:09:40,300 --> 00:09:45,579
adb logcat<font color="#CCCCCC"> it dumps the log</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> i grep</font>

222
00:09:43,600 --> 00:09:47,800
for<font color="#E5E5E5"> the word token because if</font><font color="#CCCCCC"> i'm really</font>

223
00:09:45,579 --> 00:09:49,508
really<font color="#E5E5E5"> lucky they really</font><font color="#CCCCCC"> really</font>

224
00:09:47,800 --> 00:09:51,758
instrumented a lot of<font color="#CCCCCC"> logging</font><font color="#E5E5E5"> and that</font>

225
00:09:49,509 --> 00:09:53,860
would be ideal<font color="#CCCCCC"> right from a researcher</font>

226
00:09:51,759 --> 00:09:56,139
<font color="#CCCCCC">perspective if they said</font><font color="#E5E5E5"> hey this is</font>

227
00:09:53,860 --> 00:09:58,079
<font color="#CCCCCC">your activation code</font><font color="#E5E5E5"> this is what we</font>

228
00:09:56,139 --> 00:09:59,889
<font color="#E5E5E5">think it is in blah blah blah</font><font color="#CCCCCC"> so</font>

229
00:09:58,079 --> 00:10:02,500
<font color="#E5E5E5">unfortunately they don't do any of that</font>

230
00:09:59,889 --> 00:10:06,339
<font color="#E5E5E5">so that's not a value to me so my next</font>

231
00:10:02,500 --> 00:10:09,790
<font color="#CCCCCC">step</font><font color="#E5E5E5"> is to look at an</font><font color="#CCCCCC"> android decompiler</font>

232
00:10:06,339 --> 00:10:12,939
so if<font color="#CCCCCC"> i'm on if</font><font color="#E5E5E5"> i copy</font><font color="#CCCCCC"> the APK file</font>

233
00:10:09,790 --> 00:10:15,639
<font color="#E5E5E5">right which is the what is it</font><font color="#CCCCCC"> is the</font>

234
00:10:12,939 --> 00:10:18,849
java archive data file so it's a jar

235
00:10:15,639 --> 00:10:22,329
file<font color="#E5E5E5"> it came from the end device and I</font>

236
00:10:18,850 --> 00:10:26,589
know that<font color="#E5E5E5"> and remember I know that means</font>

237
00:10:22,329 --> 00:10:28,479
what I googled that<font color="#E5E5E5"> apk files and jar</font>

238
00:10:26,589 --> 00:10:34,689
files are zip file<font color="#CCCCCC"> so I'm going</font><font color="#E5E5E5"> to unzip</font>

239
00:10:28,480 --> 00:10:39,009
it and now I've got a<font color="#E5E5E5"> Dex file</font><font color="#CCCCCC"> okay what</font>

240
00:10:34,689 --> 00:10:41,649
is a Dex file<font color="#E5E5E5"> well a Dex file is dalvik</font>

241
00:10:39,009 --> 00:10:43,420
Dex file right<font color="#CCCCCC"> ok very good</font><font color="#E5E5E5"> very good so</font>

242
00:10:41,649 --> 00:10:44,800
now I say<font color="#E5E5E5"> I do some more googling I'm</font>

243
00:10:43,420 --> 00:10:46,839
saying I'm<font color="#CCCCCC"> going to dump this</font>

244
00:10:44,800 --> 00:10:49,569
so I'm going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> convert this because if</font>

245
00:10:46,839 --> 00:10:52,420
I try<font color="#E5E5E5"> to edit this file</font><font color="#CCCCCC"> it's binary</font><font color="#E5E5E5"> it's</font>

246
00:10:49,569 --> 00:10:53,829
it's not<font color="#E5E5E5"> really usable for me so I'm</font>

247
00:10:52,420 --> 00:10:56,439
<font color="#E5E5E5">going to look</font><font color="#CCCCCC"> at that</font><font color="#E5E5E5"> I'm gonna I'll</font>

248
00:10:53,829 --> 00:11:00,160
call it<font color="#CCCCCC"> output</font><font color="#E5E5E5"> that jar then I'm gonna</font>

249
00:10:56,439 --> 00:11:03,880
unzip output<font color="#CCCCCC"> that jar and</font><font color="#E5E5E5"> great it gave</font>

250
00:11:00,160 --> 00:11:06,850
me you know<font color="#E5E5E5"> a bunch of text files that</font>

251
00:11:03,880 --> 00:11:09,879
<font color="#CCCCCC">should be the decompiled codes that's</font>

252
00:11:06,850 --> 00:11:13,600
<font color="#E5E5E5">you know this</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> very exciting</font><font color="#CCCCCC"> day and</font>

253
00:11:09,879 --> 00:11:18,309
I'm thrilled<font color="#CCCCCC"> to be doing this and let's</font>

254
00:11:13,600 --> 00:11:20,110
just<font color="#CCCCCC"> look at dump</font><font color="#E5E5E5"> text but unfortunately</font>

255
00:11:18,309 --> 00:11:22,780
and I you know didn't go to a<font color="#E5E5E5"> programmer</font>

256
00:11:20,110 --> 00:11:26,080
school<font color="#E5E5E5"> by trade this is not the</font>

257
00:11:22,780 --> 00:11:28,110
easiest piece of code<font color="#E5E5E5"> to digest</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> a</font>

258
00:11:26,080 --> 00:11:31,000
lot<font color="#E5E5E5"> of labels that</font><font color="#CCCCCC"> are just you know</font>

259
00:11:28,110 --> 00:11:34,060
<font color="#E5E5E5">random letters and</font><font color="#CCCCCC"> numbers for</font><font color="#E5E5E5"> variable</font>

260
00:11:31,000 --> 00:11:36,580
definition<font color="#CCCCCC"> you know it's not really goto</font>

261
00:11:34,060 --> 00:11:38,020
statements<font color="#CCCCCC"> I don't see my common you</font>

262
00:11:36,580 --> 00:11:41,740
know<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> see a lot</font><font color="#CCCCCC"> of parentheses</font>

263
00:11:38,020 --> 00:11:44,260
this is not code<font color="#CCCCCC"> that I not a smart but</font>

264
00:11:41,740 --> 00:11:47,680
very<font color="#E5E5E5"> lazy man I'm interested in working</font>

265
00:11:44,260 --> 00:11:49,930
<font color="#E5E5E5">with so I'm like I'm out okay so then</font>

266
00:11:47,680 --> 00:11:53,400
the next<font color="#E5E5E5"> thing I do is I say well hey</font>

267
00:11:49,930 --> 00:11:58,000
you<font color="#CCCCCC"> know I</font><font color="#E5E5E5"> could use</font><font color="#CCCCCC"> Ollie debug because</font>

268
00:11:53,400 --> 00:12:00,040
<font color="#CCCCCC">dal</font><font color="#E5E5E5"> quest they make available</font><font color="#CCCCCC"> the</font>

269
00:11:58,000 --> 00:12:02,710
<font color="#CCCCCC">Windows</font><font color="#E5E5E5"> version of the</font><font color="#CCCCCC"> java token that's</font>

270
00:12:00,040 --> 00:12:04,870
fantastic<font color="#E5E5E5"> a ladybug I hear is this great</font>

271
00:12:02,710 --> 00:12:09,130
disassembler<font color="#E5E5E5"> let you look at all the</font>

272
00:12:04,870 --> 00:12:12,220
code<font color="#CCCCCC"> that proves even</font><font color="#E5E5E5"> a worse idea for</font>

273
00:12:09,130 --> 00:12:14,200
the lazy and unmarked okay so we looked

274
00:12:12,220 --> 00:12:16,000
<font color="#CCCCCC">at it I</font><font color="#E5E5E5"> looked at it</font>

275
00:12:14,200 --> 00:12:18,760
there was threads involved there<font color="#CCCCCC"> was not</font>

276
00:12:16,000 --> 00:12:20,920
common naming constructions<font color="#CCCCCC"> and I was</font>

277
00:12:18,760 --> 00:12:23,500
like<font color="#CCCCCC"> yeah I'm</font><font color="#E5E5E5"> not gonna do that</font><font color="#CCCCCC"> so I</font>

278
00:12:20,920 --> 00:12:25,630
just move on<font color="#E5E5E5"> right that's a that's a</font>

279
00:12:23,500 --> 00:12:27,700
process for me<font color="#CCCCCC"> is to try</font><font color="#E5E5E5"> something when</font>

280
00:12:25,630 --> 00:12:29,770
it's too hard<font color="#CCCCCC"> move on</font><font color="#E5E5E5"> to something</font><font color="#CCCCCC"> else</font>

281
00:12:27,700 --> 00:12:32,140
<font color="#E5E5E5">and when</font><font color="#CCCCCC"> that's too hard go back to the</font>

282
00:12:29,770 --> 00:12:34,329
first<font color="#E5E5E5"> thing and say hey can now can I</font>

283
00:12:32,140 --> 00:12:37,689
make this thing<font color="#CCCCCC"> work and so they also</font>

284
00:12:34,330 --> 00:12:46,420
make a generic<font color="#CCCCCC"> Java app so I say okay</font>

285
00:12:37,690 --> 00:12:49,060
there's a generic Java app<font color="#E5E5E5"> and that is a</font>

286
00:12:46,420 --> 00:12:53,140
jar file which we know is<font color="#E5E5E5"> zipa below we</font>

287
00:12:49,060 --> 00:13:00,750
unzip<font color="#E5E5E5"> it and it puts it in the same kind</font>

288
00:12:53,140 --> 00:13:04,689
of space<font color="#E5E5E5"> so I'm gonna go to crest token</font>

289
00:13:00,750 --> 00:13:06,400
<font color="#E5E5E5">DT</font><font color="#CCCCCC"> alright and</font><font color="#E5E5E5"> these are class files and</font>

290
00:13:04,690 --> 00:13:07,780
I know that if I look at class files my

291
00:13:06,400 --> 00:13:11,140
eyes go cross-eyed because they're not

292
00:13:07,780 --> 00:13:12,459
<font color="#E5E5E5">readable so I</font><font color="#CCCCCC"> remember a long time ago I</font>

293
00:13:11,140 --> 00:13:14,830
<font color="#E5E5E5">used this thing called java decompiler</font>

294
00:13:12,460 --> 00:13:16,780
<font color="#CCCCCC">so I'm gonna run</font><font color="#E5E5E5"> it I'm gonna run it on</font>

295
00:13:14,830 --> 00:13:20,980
the same file so we<font color="#E5E5E5"> can kind of compare</font>

296
00:13:16,780 --> 00:13:25,120
apples to apples<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it makes this dot</font>

297
00:13:20,980 --> 00:13:28,600
<font color="#CCCCCC">Java all</font><font color="#E5E5E5"> right well okay</font><font color="#CCCCCC"> hey this is</font>

298
00:13:25,120 --> 00:13:30,750
pretty usable<font color="#E5E5E5"> right so I've got function</font>

299
00:13:28,600 --> 00:13:34,090
names that I<font color="#E5E5E5"> can understand right so</font>

300
00:13:30,750 --> 00:13:36,520
debug probably<font color="#E5E5E5"> makes something go out</font>

301
00:13:34,090 --> 00:13:39,700
you know<font color="#E5E5E5"> hex dump that probably</font>

302
00:13:36,520 --> 00:13:41,350
dumps hex code<font color="#E5E5E5"> so I'm like</font><font color="#CCCCCC"> oh I'm gonna</font>

303
00:13:39,700 --> 00:13:44,740
<font color="#E5E5E5">fixate though I'm gonna fixate on this</font>

304
00:13:41,350 --> 00:13:45,880
code for<font color="#E5E5E5"> the rest</font><font color="#CCCCCC"> of the of the exercise</font>

305
00:13:44,740 --> 00:13:49,570
<font color="#E5E5E5">okay</font>

306
00:13:45,880 --> 00:13:53,560
so I so now I'm here what I want<font color="#CCCCCC"> to do</font>

307
00:13:49,570 --> 00:13:55,840
is figure out where in the<font color="#E5E5E5"> code is the</font>

308
00:13:53,560 --> 00:13:59,770
activation code being processed<font color="#CCCCCC"> right</font>

309
00:13:55,840 --> 00:14:01,810
I could read all<font color="#CCCCCC"> of the code</font><font color="#E5E5E5"> find the</font>

310
00:13:59,770 --> 00:14:04,150
main<font color="#E5E5E5"> right where is the code initialized</font>

311
00:14:01,810 --> 00:14:06,430
<font color="#E5E5E5">see that it's probably multi-threaded</font>

312
00:14:04,150 --> 00:14:08,680
because<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> gui-based and look for the</font>

313
00:14:06,430 --> 00:14:11,140
handler<font color="#CCCCCC"> that has the activate button</font><font color="#E5E5E5"> and</font>

314
00:14:08,680 --> 00:14:13,359
look for the callback<font color="#CCCCCC"> that initiates you</font>

315
00:14:11,140 --> 00:14:16,569
know the processing of<font color="#CCCCCC"> your text but</font>

316
00:14:13,360 --> 00:14:19,180
that looks kind of complicated<font color="#CCCCCC"> so I you</font>

317
00:14:16,570 --> 00:14:20,620
know googled and found a<font color="#E5E5E5"> better way</font><font color="#CCCCCC"> and</font>

318
00:14:19,180 --> 00:14:27,000
that better way is to<font color="#CCCCCC"> use a program</font>

319
00:14:20,620 --> 00:14:29,230
<font color="#E5E5E5">called Java snoop Java snoop</font><font color="#CCCCCC"> is a</font>

320
00:14:27,000 --> 00:14:35,950
wonderful wonderful<font color="#E5E5E5"> tool and it's a Java</font>

321
00:14:29,230 --> 00:14:38,290
based tool<font color="#CCCCCC"> that essentially hooks</font><font color="#E5E5E5"> in to</font>

322
00:14:35,950 --> 00:14:40,330
the<font color="#CCCCCC"> Java Virtual Machine</font><font color="#E5E5E5"> and is</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

323
00:14:38,290 --> 00:14:42,969
interact with other<font color="#E5E5E5"> Java processes</font>

324
00:14:40,330 --> 00:14:46,510
within the JVM<font color="#E5E5E5"> all right so I'm gonna</font>

325
00:14:42,970 --> 00:14:50,110
<font color="#E5E5E5">start a</font><font color="#CCCCCC"> new process</font><font color="#E5E5E5"> I find the jar file</font>

326
00:14:46,510 --> 00:14:55,150
that<font color="#E5E5E5"> is you know the Java executable</font><font color="#CCCCCC"> and</font>

327
00:14:50,110 --> 00:14:56,890
I start<font color="#E5E5E5"> the process</font><font color="#CCCCCC"> up process waits for</font>

328
00:14:55,150 --> 00:14:59,949
a second to<font color="#CCCCCC"> instantiate and then loads</font>

329
00:14:56,890 --> 00:15:04,330
the<font color="#E5E5E5"> GUI that</font><font color="#CCCCCC"> mill lets me manage it</font><font color="#E5E5E5"> and</font>

330
00:14:59,950 --> 00:15:06,850
<font color="#E5E5E5">say</font><font color="#CCCCCC"> ok so I have this screen here that</font>

331
00:15:04,330 --> 00:15:08,620
is the screen<font color="#CCCCCC"> that</font><font color="#E5E5E5"> manages Java snoop</font>

332
00:15:06,850 --> 00:15:11,050
<font color="#CCCCCC">and I have the application</font><font color="#E5E5E5"> under test</font>

333
00:15:08,620 --> 00:15:13,570
here<font color="#E5E5E5"> the defender soft token so let's</font>

334
00:15:11,050 --> 00:15:14,560
just<font color="#E5E5E5"> try it and see what</font><font color="#CCCCCC"> happens</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> to</font>

335
00:15:13,570 --> 00:15:16,990
make sure it's<font color="#CCCCCC"> working</font>

336
00:15:14,560 --> 00:15:20,829
so I<font color="#CCCCCC"> enter</font><font color="#E5E5E5"> the token and I click</font>

337
00:15:16,990 --> 00:15:23,830
activate<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> activation code is</font><font color="#CCCCCC"> invalid</font>

338
00:15:20,830 --> 00:15:25,840
for<font color="#E5E5E5"> this platform</font><font color="#CCCCCC"> oh by the way</font><font color="#E5E5E5"> quest</font>

339
00:15:23,830 --> 00:15:27,370
defender decided to restrict<font color="#E5E5E5"> the</font>

340
00:15:25,840 --> 00:15:29,860
activation codes to only certain

341
00:15:27,370 --> 00:15:32,170
platforms<font color="#E5E5E5"> but I I can worry about</font><font color="#CCCCCC"> that</font>

342
00:15:29,860 --> 00:15:34,900
<font color="#CCCCCC">later so I'm okay what I want to do</font>

343
00:15:32,170 --> 00:15:37,150
<font color="#E5E5E5">remember is find out where in the code</font>

344
00:15:34,900 --> 00:15:39,310
<font color="#E5E5E5">my activation code is being processed</font>

345
00:15:37,150 --> 00:15:42,189
<font color="#CCCCCC">cuz that's the</font><font color="#E5E5E5"> code I want to I want</font><font color="#CCCCCC"> to</font>

346
00:15:39,310 --> 00:15:45,989
modify<font color="#E5E5E5"> so they make a great thing called</font>

347
00:15:42,190 --> 00:15:49,200
canary mode canary mode is a system that

348
00:15:45,990 --> 00:15:51,210
<font color="#E5E5E5">you input what you're looking for I'm</font>

349
00:15:49,200 --> 00:15:55,920
for the letter e occurring four times

350
00:15:51,210 --> 00:15:57,960
<font color="#CCCCCC">and everywhere that that string a string</font>

351
00:15:55,920 --> 00:16:01,079
that contains four letter<font color="#CCCCCC"> e's is</font>

352
00:15:57,960 --> 00:16:05,550
processed the<font color="#CCCCCC"> Java snoop is going to</font>

353
00:16:01,080 --> 00:16:14,490
dump<font color="#E5E5E5"> what function that is okay so see</font>

354
00:16:05,550 --> 00:16:19,770
how<font color="#CCCCCC"> that works</font><font color="#E5E5E5"> go demo and</font><font color="#CCCCCC"> eee</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> if</font>

355
00:16:14,490 --> 00:16:21,360
you could see<font color="#E5E5E5"> that there these are the</font>

356
00:16:19,770 --> 00:16:24,180
functions you know first<font color="#E5E5E5"> the system</font>

357
00:16:21,360 --> 00:16:26,730
<font color="#CCCCCC">calls activate token then it calls check</font>

358
00:16:24,180 --> 00:16:28,530
token then it calls DT check platform

359
00:16:26,730 --> 00:16:30,600
that's probably checking<font color="#E5E5E5"> for</font><font color="#CCCCCC"> word</font><font color="#E5E5E5"> the</font>

360
00:16:28,530 --> 00:16:34,199
<font color="#E5E5E5">platform right so Java versus Android</font>

361
00:16:30,600 --> 00:16:37,350
versus iOS<font color="#CCCCCC"> D</font><font color="#E5E5E5"> serialized blob and from</font>

362
00:16:34,200 --> 00:16:39,510
printable<font color="#E5E5E5"> strength so my guess is that</font>

363
00:16:37,350 --> 00:16:42,330
the code that<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> decodes that</font>

364
00:16:39,510 --> 00:16:44,700
activation<font color="#CCCCCC"> code is probably this from</font>

365
00:16:42,330 --> 00:16:47,190
printable string all right reasonable

366
00:16:44,700 --> 00:16:48,600
guess<font color="#CCCCCC"> turned</font><font color="#E5E5E5"> out to be right which is</font>

367
00:16:47,190 --> 00:16:54,330
probably why I'm now claiming<font color="#E5E5E5"> it was</font>

368
00:16:48,600 --> 00:16:56,220
reasonable and<font color="#E5E5E5"> and I didn't have to like</font>

369
00:16:54,330 --> 00:16:57,990
I didn't<font color="#E5E5E5"> have to read and follow the</font>

370
00:16:56,220 --> 00:17:00,630
code<font color="#E5E5E5"> right</font><font color="#CCCCCC"> I used a tool to tell me</font>

371
00:16:57,990 --> 00:17:05,430
where<font color="#CCCCCC"> to look so that was very enjoyable</font>

372
00:17:00,630 --> 00:17:07,410
<font color="#CCCCCC">so we do that</font><font color="#E5E5E5"> so now we're back and we</font>

373
00:17:05,430 --> 00:17:11,640
<font color="#CCCCCC">are and this is</font><font color="#E5E5E5"> where we came to</font><font color="#CCCCCC"> right</font>

374
00:17:07,410 --> 00:17:14,190
so we know that from printable string<font color="#CCCCCC"> to</font>

375
00:17:11,640 --> 00:17:16,170
<font color="#CCCCCC">serialize blob DT</font><font color="#E5E5E5"> check platform check</font>

376
00:17:14,190 --> 00:17:18,810
token etc etc<font color="#E5E5E5"> now we're</font><font color="#CCCCCC"> going to work</font>

377
00:17:16,170 --> 00:17:21,480
our way<font color="#CCCCCC"> up</font><font color="#E5E5E5"> back up the stack</font><font color="#CCCCCC"> so to speak</font>

378
00:17:18,810 --> 00:17:24,208
<font color="#E5E5E5">so to do that I'm going to use another</font>

379
00:17:21,480 --> 00:17:27,030
<font color="#CCCCCC">tool that I searched for</font><font color="#E5E5E5"> because I</font>

380
00:17:24,209 --> 00:17:31,560
wanted to<font color="#E5E5E5"> write</font><font color="#CCCCCC"> I wanted</font><font color="#E5E5E5"> to convert so I</font>

381
00:17:27,030 --> 00:17:33,990
went in to to the code from<font color="#E5E5E5"> my jad file</font>

382
00:17:31,560 --> 00:17:36,600
and I copied out<font color="#E5E5E5"> the section of code and</font>

383
00:17:33,990 --> 00:17:40,160
I'm trying my<font color="#CCCCCC"> best to understand how</font>

384
00:17:36,600 --> 00:17:43,560
does<font color="#E5E5E5"> it work how does</font><font color="#CCCCCC"> it take these</font>

385
00:17:40,160 --> 00:17:46,110
<font color="#CCCCCC">lower</font><font color="#E5E5E5"> case alphabetical not alphabetical</font>

386
00:17:43,560 --> 00:17:49,290
but alphabet characters<font color="#E5E5E5"> and turn it into</font>

387
00:17:46,110 --> 00:17:52,020
something that that means something<font color="#CCCCCC"> to</font>

388
00:17:49,290 --> 00:17:54,060
the the token<font color="#E5E5E5"> I wanted to write a</font>

389
00:17:52,020 --> 00:17:56,460
utility<font color="#CCCCCC"> that would convert these for</font>

390
00:17:54,060 --> 00:17:57,500
<font color="#E5E5E5">everybody to</font><font color="#CCCCCC"> use and I</font><font color="#E5E5E5"> wanted</font><font color="#CCCCCC"> to write</font>

391
00:17:56,460 --> 00:18:02,790
<font color="#CCCCCC">it in JavaScript</font>

392
00:17:57,500 --> 00:18:05,010
<font color="#CCCCCC">mostly because JavaScript and HTML could</font>

393
00:18:02,790 --> 00:18:06,810
make a reasonable GUI without much

394
00:18:05,010 --> 00:18:08,340
effort<font color="#E5E5E5"> on my part and it could be</font>

395
00:18:06,810 --> 00:18:10,649
<font color="#CCCCCC">self-contained</font><font color="#E5E5E5"> right I don't want a</font>

396
00:18:08,340 --> 00:18:12,959
release code<font color="#E5E5E5"> that like uses a web</font>

397
00:18:10,650 --> 00:18:14,610
service<font color="#CCCCCC"> to</font><font color="#E5E5E5"> receive your activation code</font>

398
00:18:12,960 --> 00:18:16,860
and give you the QR code right that

399
00:18:14,610 --> 00:18:19,290
might be<font color="#CCCCCC"> a poor</font><font color="#E5E5E5"> security architecture</font>

400
00:18:16,860 --> 00:18:21,899
decision<font color="#E5E5E5"> so I'm going to use a piece</font><font color="#CCCCCC"> of</font>

401
00:18:19,290 --> 00:18:23,780
<font color="#E5E5E5">software called plunker if I'm</font>

402
00:18:21,900 --> 00:18:28,260
pronouncing<font color="#E5E5E5"> it right</font><font color="#CCCCCC"> I hope so</font>

403
00:18:23,780 --> 00:18:31,320
and what<font color="#CCCCCC"> plunker is is it's kind of</font><font color="#E5E5E5"> like</font>

404
00:18:28,260 --> 00:18:36,030
a little<font color="#E5E5E5"> mini rapid prototyping engine</font>

405
00:18:31,320 --> 00:18:40,080
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> so for making code that executes</font>

406
00:18:36,030 --> 00:18:42,300
<font color="#E5E5E5">in in JavaScript right so it has an</font>

407
00:18:40,080 --> 00:18:44,790
index file<font color="#E5E5E5"> it's going to execute the</font>

408
00:18:42,300 --> 00:18:47,879
code in<font color="#E5E5E5"> this script and this script I've</font>

409
00:18:44,790 --> 00:18:50,820
copied all<font color="#CCCCCC"> of the code from</font><font color="#E5E5E5"> the jad file</font>

410
00:18:47,880 --> 00:18:53,070
and<font color="#CCCCCC"> I've</font><font color="#E5E5E5"> added a little you know hello</font>

411
00:18:50,820 --> 00:18:56,280
<font color="#CCCCCC">just to make sure</font><font color="#E5E5E5"> that this works</font><font color="#CCCCCC"> and</font>

412
00:18:53,070 --> 00:18:59,460
I'll just click run and of course<font color="#E5E5E5"> I</font>

413
00:18:56,280 --> 00:19:02,670
learn that these things are<font color="#CCCCCC"> not</font>

414
00:18:59,460 --> 00:19:05,310
generally compatible right if<font color="#E5E5E5"> I if I</font>

415
00:19:02,670 --> 00:19:08,820
remove the comments from<font color="#CCCCCC"> my java code</font>

416
00:19:05,310 --> 00:19:11,340
<font color="#E5E5E5">this will not compile all</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> but</font>

417
00:19:08,820 --> 00:19:13,740
what's great is for<font color="#E5E5E5"> someone who maybe is</font>

418
00:19:11,340 --> 00:19:16,439
not<font color="#E5E5E5"> a programmer it's highlighting all</font>

419
00:19:13,740 --> 00:19:19,350
the<font color="#E5E5E5"> errors for me right and so I'm</font>

420
00:19:16,440 --> 00:19:22,020
saying well<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> you're defining a private</font>

421
00:19:19,350 --> 00:19:23,429
static<font color="#E5E5E5"> string I'm gonna Google</font><font color="#CCCCCC"> for how</font>

422
00:19:22,020 --> 00:19:24,840
do you define strings and I'm gonna

423
00:19:23,430 --> 00:19:27,000
<font color="#E5E5E5">learn the JavaScript just use of the</font>

424
00:19:24,840 --> 00:19:30,480
word var and I'm generally correct

425
00:19:27,000 --> 00:19:32,220
<font color="#E5E5E5">because the GUI made</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> red</font><font color="#CCCCCC"> x go away</font>

426
00:19:30,480 --> 00:19:34,020
<font color="#E5E5E5">right this is natural compliance</font>

427
00:19:32,220 --> 00:19:38,640
<font color="#E5E5E5">engineering you get rid of the red X</font>

428
00:19:34,020 --> 00:19:40,800
right<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I'm private int ok it's</font>

429
00:19:38,640 --> 00:19:43,170
<font color="#E5E5E5">actually a function so I learned that</font>

430
00:19:40,800 --> 00:19:45,300
<font color="#E5E5E5">that is the word function</font><font color="#CCCCCC"> still</font><font color="#E5E5E5"> has</font>

431
00:19:43,170 --> 00:19:48,810
<font color="#CCCCCC">problems because</font><font color="#E5E5E5"> I learned that</font>

432
00:19:45,300 --> 00:19:54,270
JavaScript doesn't cast very very<font color="#CCCCCC"> czar</font>

433
00:19:48,810 --> 00:19:56,280
doesn't apply casts<font color="#E5E5E5"> to values so you</font>

434
00:19:54,270 --> 00:19:58,560
<font color="#E5E5E5">have to get rid</font><font color="#CCCCCC"> of things like string</font>

435
00:19:56,280 --> 00:20:01,290
<font color="#E5E5E5">because it's going to figure out the</font>

436
00:19:58,560 --> 00:20:02,820
type itself<font color="#CCCCCC"> and that goes</font><font color="#E5E5E5"> away so I go</font>

437
00:20:01,290 --> 00:20:04,500
<font color="#CCCCCC">through</font><font color="#E5E5E5"> the code and then I'm probably</font>

438
00:20:02,820 --> 00:20:08,879
<font color="#CCCCCC">gonna do some</font><font color="#E5E5E5"> stuff like this console</font>

439
00:20:04,500 --> 00:20:11,760
<font color="#CCCCCC">dot log J</font><font color="#E5E5E5"> right I mean I'm not a</font>

440
00:20:08,880 --> 00:20:15,330
complicated individual I use<font color="#E5E5E5"> printf as</font>

441
00:20:11,760 --> 00:20:16,530
my debug<font color="#E5E5E5"> right you could use gdb</font><font color="#CCCCCC"> or you</font>

442
00:20:15,330 --> 00:20:19,050
could just<font color="#E5E5E5"> use printf</font><font color="#CCCCCC"> so I</font>

443
00:20:16,530 --> 00:20:20,430
go through the code<font color="#CCCCCC"> and I just keep</font>

444
00:20:19,050 --> 00:20:22,770
<font color="#CCCCCC">running</font><font color="#E5E5E5"> in till I get something</font><font color="#CCCCCC"> that</font>

445
00:20:20,430 --> 00:20:25,290
works<font color="#CCCCCC"> and</font><font color="#E5E5E5"> eventually I'll come to the</font>

446
00:20:22,770 --> 00:20:27,030
realization of something like<font color="#E5E5E5"> this</font>

447
00:20:25,290 --> 00:20:29,639
I'll just output everything and you can

448
00:20:27,030 --> 00:20:31,080
see up at the top<font color="#E5E5E5"> of the slide is</font><font color="#CCCCCC"> the</font>

449
00:20:29,640 --> 00:20:33,270
activation code so you can<font color="#E5E5E5"> follow along</font>

450
00:20:31,080 --> 00:20:36,510
<font color="#E5E5E5">on the right-hand of</font><font color="#CCCCCC"> the slide I could</font>

451
00:20:33,270 --> 00:20:39,000
see for the first loop<font color="#E5E5E5"> the character was</font>

452
00:20:36,510 --> 00:20:41,160
the<font color="#E5E5E5"> letter e the index of whatever that</font>

453
00:20:39,000 --> 00:20:43,650
is it's<font color="#CCCCCC"> the number for the second</font>

454
00:20:41,160 --> 00:20:47,010
character is<font color="#E5E5E5"> the letter</font><font color="#CCCCCC"> n the index of</font>

455
00:20:43,650 --> 00:20:51,720
is number 13 and then the value whatever

456
00:20:47,010 --> 00:20:54,420
<font color="#E5E5E5">that is a byte 0 is Oh X 14 that appears</font>

457
00:20:51,720 --> 00:20:57,270
to me to be<font color="#E5E5E5"> made up of the</font><font color="#CCCCCC"> first value 4</font>

458
00:20:54,420 --> 00:21:00,000
and the second value 13<font color="#E5E5E5"> simply</font>

459
00:20:57,270 --> 00:21:01,980
represented in hex<font color="#E5E5E5"> so I follow this</font>

460
00:21:00,000 --> 00:21:04,380
along<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit and I'm</font><font color="#CCCCCC"> able to</font>

461
00:21:01,980 --> 00:21:06,720
discern<font color="#CCCCCC"> the pattern</font><font color="#E5E5E5"> what is the</font>

462
00:21:04,380 --> 00:21:08,850
algorithm<font color="#E5E5E5"> here right it's the algorithm</font>

463
00:21:06,720 --> 00:21:12,180
turns out to be relatively<font color="#E5E5E5"> simple</font><font color="#CCCCCC"> you</font>

464
00:21:08,850 --> 00:21:14,310
have letters<font color="#E5E5E5"> A through Z that are</font>

465
00:21:12,180 --> 00:21:17,790
numbered 0 through 25 that looks like<font color="#E5E5E5"> a</font>

466
00:21:14,310 --> 00:21:18,810
common like<font color="#E5E5E5"> Caesar cipher right you</font><font color="#CCCCCC"> just</font>

467
00:21:17,790 --> 00:21:23,760
<font color="#CCCCCC">have a letter it's going to</font><font color="#E5E5E5"> become a</font>

468
00:21:18,810 --> 00:21:26,669
<font color="#E5E5E5">number and then in and kind of two</font>

469
00:21:23,760 --> 00:21:29,010
blocks at a time<font color="#E5E5E5"> each value is it</font>

470
00:21:26,670 --> 00:21:32,760
becomes you know<font color="#E5E5E5"> the high and low order</font>

471
00:21:29,010 --> 00:21:36,030
bits of a<font color="#CCCCCC"> byte</font><font color="#E5E5E5"> of a character right so 0</font>

472
00:21:32,760 --> 00:21:38,040
for D is made up of<font color="#CCCCCC"> 4 which is the</font>

473
00:21:36,030 --> 00:21:40,470
letter<font color="#CCCCCC"> E and 13 which is</font><font color="#E5E5E5"> the letter M</font>

474
00:21:38,040 --> 00:21:43,620
<font color="#CCCCCC">and then</font><font color="#E5E5E5"> the tricky tricky part of those</font>

475
00:21:40,470 --> 00:21:47,040
<font color="#E5E5E5">folks at Dell or</font><font color="#CCCCCC"> Quest</font><font color="#E5E5E5"> is every other</font>

476
00:21:43,620 --> 00:21:48,750
<font color="#E5E5E5">pair they add 10 to it so all I have to</font>

477
00:21:47,040 --> 00:21:53,760
<font color="#CCCCCC">do is subtract 10 so if I look at</font><font color="#E5E5E5"> the</font>

478
00:21:48,750 --> 00:21:57,600
letter Q<font color="#E5E5E5"> Q is 16 subtract 10 is 6 that</font>

479
00:21:53,760 --> 00:22:00,240
<font color="#E5E5E5">becomes 6</font><font color="#CCCCCC"> W is 22 subtract</font><font color="#E5E5E5"> 10 is 12 that</font>

480
00:21:57,600 --> 00:22:03,919
becomes C and then it repeats<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> a</font>

481
00:22:00,240 --> 00:22:07,050
is<font color="#E5E5E5"> 0 becomes 0 and 50 etc so I'm able to</font>

482
00:22:03,920 --> 00:22:08,520
now<font color="#E5E5E5"> you know write some code</font><font color="#CCCCCC"> that is a</font>

483
00:22:07,050 --> 00:22:11,159
<font color="#E5E5E5">little more intelligible than just</font>

484
00:22:08,520 --> 00:22:14,280
copying<font color="#CCCCCC"> and pasting</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> Java into the</font>

485
00:22:11,160 --> 00:22:17,340
system and I have looking going<font color="#E5E5E5"> up the</font>

486
00:22:14,280 --> 00:22:19,940
stack<font color="#CCCCCC"> so we</font><font color="#E5E5E5"> did this code we did from</font>

487
00:22:17,340 --> 00:22:22,590
printable string and we were<font color="#CCCCCC"> able to</font>

488
00:22:19,940 --> 00:22:25,710
<font color="#E5E5E5">decode it</font><font color="#CCCCCC"> so we check we decoded</font><font color="#E5E5E5"> the</font>

489
00:22:22,590 --> 00:22:29,189
activation code<font color="#E5E5E5"> what is</font><font color="#CCCCCC"> left to get at</font>

490
00:22:25,710 --> 00:22:29,750
the contents of the system well there is

491
00:22:29,190 --> 00:22:31,850
on<font color="#CCCCCC"> 4</font>

492
00:22:29,750 --> 00:22:35,440
fortunately some encryption<font color="#E5E5E5"> right</font><font color="#CCCCCC"> said</font>

493
00:22:31,850 --> 00:22:37,760
encryption key<font color="#E5E5E5"> get encrypt soft digest</font><font color="#CCCCCC"> I</font>

494
00:22:35,440 --> 00:22:41,030
look at the code there<font color="#E5E5E5"> and</font><font color="#CCCCCC"> look at the</font>

495
00:22:37,760 --> 00:22:44,000
jad files<font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> 400 lines of code</font>

496
00:22:41,030 --> 00:22:46,850
<font color="#CCCCCC">there's a lot</font><font color="#E5E5E5"> of math there's bit</font>

497
00:22:44,000 --> 00:22:49,390
shifting<font color="#CCCCCC"> I mean these are things</font><font color="#E5E5E5"> you</font>

498
00:22:46,850 --> 00:22:52,070
know that<font color="#CCCCCC"> I try to</font><font color="#E5E5E5"> avoid</font><font color="#CCCCCC"> okay and</font>

499
00:22:49,390 --> 00:22:55,190
<font color="#E5E5E5">especially trying to go from Java to</font>

500
00:22:52,070 --> 00:22:57,500
<font color="#CCCCCC">JavaScript with a bit shifting and a lot</font>

501
00:22:55,190 --> 00:22:59,360
of<font color="#E5E5E5"> XOR and stuff it wasn't a good recipe</font>

502
00:22:57,500 --> 00:22:59,960
<font color="#CCCCCC">for me so I'm like there has to be a</font>

503
00:22:59,360 --> 00:23:02,750
better way

504
00:22:59,960 --> 00:23:04,670
so we'll just<font color="#E5E5E5"> Park that</font><font color="#CCCCCC"> and then there</font>

505
00:23:02,750 --> 00:23:08,060
appears to<font color="#E5E5E5"> be a couple loops so there's</font>

506
00:23:04,670 --> 00:23:11,540
one loop that has an install key and a

507
00:23:08,060 --> 00:23:15,830
DES decrypt<font color="#E5E5E5"> okay then there's something</font>

508
00:23:11,540 --> 00:23:18,500
<font color="#CCCCCC">that</font><font color="#E5E5E5"> is a loop that XOR is</font><font color="#CCCCCC"> a value</font><font color="#E5E5E5"> okay</font>

509
00:23:15,830 --> 00:23:21,110
XOR<font color="#CCCCCC"> is a common cryptography hiding</font>

510
00:23:18,500 --> 00:23:23,810
thingy<font color="#CCCCCC"> and then it does it again and</font>

511
00:23:21,110 --> 00:23:26,810
makes<font color="#CCCCCC"> a</font><font color="#E5E5E5"> loop again and then it makes a</font>

512
00:23:23,810 --> 00:23:30,320
different XOR with<font color="#CCCCCC"> a different value so</font>

513
00:23:26,810 --> 00:23:32,210
what I want to do is use<font color="#E5E5E5"> Java snoop and</font>

514
00:23:30,320 --> 00:23:35,090
another tool<font color="#CCCCCC"> that I'll showcase</font><font color="#E5E5E5"> called</font>

515
00:23:32,210 --> 00:23:37,490
cyber chef and I'm<font color="#CCCCCC"> gonna learn</font><font color="#E5E5E5"> that a</font>

516
00:23:35,090 --> 00:23:39,530
<font color="#E5E5E5">couple</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> one without even</font><font color="#CCCCCC"> you know</font>

517
00:23:37,490 --> 00:23:44,000
really<font color="#E5E5E5"> having to learn what do we think</font>

518
00:23:39,530 --> 00:23:47,210
<font color="#E5E5E5">the encryption algorithm is</font><font color="#CCCCCC"> it's des</font>

519
00:23:44,000 --> 00:23:49,070
right because they named it des decrypt

520
00:23:47,210 --> 00:23:51,680
right and I don't<font color="#E5E5E5"> think</font><font color="#CCCCCC"> I meant</font><font color="#E5E5E5"> that des</font>

521
00:23:49,070 --> 00:23:54,110
encrypt the data for you right so it's

522
00:23:51,680 --> 00:23:56,240
definitely des and it's it's interesting

523
00:23:54,110 --> 00:23:58,459
it's<font color="#E5E5E5"> eight bytes at a time because</font><font color="#CCCCCC"> you</font>

524
00:23:56,240 --> 00:24:01,040
<font color="#CCCCCC">can see in the for loop</font><font color="#E5E5E5"> it's plus eight</font>

525
00:23:58,460 --> 00:24:02,420
<font color="#E5E5E5">you know it's it's I equals I plus eight</font>

526
00:24:01,040 --> 00:24:05,000
right and that tells me<font color="#E5E5E5"> you're going</font>

527
00:24:02,420 --> 00:24:06,800
eight bytes at a time and how am I<font color="#CCCCCC"> gonna</font>

528
00:24:05,000 --> 00:24:11,690
<font color="#CCCCCC">figure out the key I'm going to figure</font>

529
00:24:06,800 --> 00:24:14,149
<font color="#E5E5E5">out the key using Java snoop so in order</font>

530
00:24:11,690 --> 00:24:17,000
to<font color="#E5E5E5"> do that I have to use another</font>

531
00:24:14,150 --> 00:24:19,880
<font color="#E5E5E5">capability in Java soup called</font>

532
00:24:17,000 --> 00:24:23,840
adding hooks so I'm<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> browse for the</font>

533
00:24:19,880 --> 00:24:28,370
functions okay and I'm browsing<font color="#E5E5E5"> for the</font>

534
00:24:23,840 --> 00:24:31,740
<font color="#CCCCCC">des function</font><font color="#E5E5E5"> no there we go</font>

535
00:24:28,370 --> 00:24:34,199
<font color="#E5E5E5">hold on here there we go</font><font color="#CCCCCC"> and I see</font><font color="#E5E5E5"> that</font>

536
00:24:31,740 --> 00:24:36,389
there's install key so I'm<font color="#CCCCCC"> gonna add a</font>

537
00:24:34,200 --> 00:24:44,580
<font color="#E5E5E5">hook for install key I'm gonna add</font>

538
00:24:36,389 --> 00:24:48,120
another hook<font color="#E5E5E5"> yes and the other co hook</font>

539
00:24:44,580 --> 00:24:49,129
was<font color="#CCCCCC"> des decrypt write for</font><font color="#E5E5E5"> DES decrypt</font>

540
00:24:48,120 --> 00:24:52,529
<font color="#E5E5E5">okay</font>

541
00:24:49,130 --> 00:24:55,649
<font color="#E5E5E5">hooks our capabilities in</font><font color="#CCCCCC"> Java snoop</font>

542
00:24:52,529 --> 00:24:58,409
<font color="#E5E5E5">that let you tamper with the parameters</font>

543
00:24:55,649 --> 00:24:59,969
or tamper with the return value<font color="#E5E5E5"> there's</font>

544
00:24:58,409 --> 00:25:01,889
no return value so it's<font color="#E5E5E5"> not letting me</font>

545
00:24:59,970 --> 00:25:03,779
tamper with it<font color="#CCCCCC"> I don't really</font><font color="#E5E5E5"> care</font><font color="#CCCCCC"> to</font>

546
00:25:01,889 --> 00:25:05,610
tamper<font color="#CCCCCC"> with the value but I want to</font>

547
00:25:03,779 --> 00:25:09,330
<font color="#E5E5E5">learn what those values are because</font><font color="#CCCCCC"> I</font>

548
00:25:05,610 --> 00:25:11,279
know<font color="#CCCCCC"> you know from you know</font><font color="#E5E5E5"> I think this</font>

549
00:25:09,330 --> 00:25:12,379
<font color="#E5E5E5">is now common knowledge right to encrypt</font>

550
00:25:11,279 --> 00:25:15,750
and decrypt something you need

551
00:25:12,380 --> 00:25:17,909
<font color="#E5E5E5">ciphertext the part that's encrypted you</font>

552
00:25:15,750 --> 00:25:20,659
need a key and<font color="#CCCCCC"> you need an algorithm so</font>

553
00:25:17,909 --> 00:25:23,159
<font color="#CCCCCC">I think install key might be the key</font>

554
00:25:20,659 --> 00:25:24,630
<font color="#CCCCCC">just</font><font color="#E5E5E5"> a wild guess and the decrypt</font>

555
00:25:23,159 --> 00:25:27,000
function is<font color="#E5E5E5"> gonna have to have that</font>

556
00:25:24,630 --> 00:25:29,220
information<font color="#E5E5E5"> in it so let's go ahead and</font>

557
00:25:27,000 --> 00:25:32,360
<font color="#CCCCCC">enter</font><font color="#E5E5E5"> an activation code and see</font><font color="#CCCCCC"> what</font>

558
00:25:29,220 --> 00:25:35,929
happens<font color="#CCCCCC"> all right so we'll go demo</font><font color="#E5E5E5"> nine</font>

559
00:25:32,360 --> 00:25:39,029
<font color="#E5E5E5">activate great so I'm at my first</font>

560
00:25:35,929 --> 00:25:43,860
install key<font color="#E5E5E5"> so what do I do</font>

561
00:25:39,029 --> 00:25:46,440
<font color="#CCCCCC">I edit</font><font color="#E5E5E5"> it and I copy this value</font><font color="#CCCCCC"> I am</font>

562
00:25:43,860 --> 00:25:51,500
<font color="#E5E5E5">just you know essentially opening a</font>

563
00:25:46,440 --> 00:25:51,500
notebook<font color="#E5E5E5"> where is it there we go</font>

564
00:25:51,649 --> 00:25:58,500
essentially opening a notebook and sang

565
00:25:53,700 --> 00:26:00,419
install key is this value okay<font color="#CCCCCC"> and I've</font>

566
00:25:58,500 --> 00:26:02,279
gone<font color="#E5E5E5"> ahead and kind of done a lot of</font>

567
00:26:00,419 --> 00:26:04,260
<font color="#CCCCCC">this you know it's</font><font color="#E5E5E5"> like Betty Crocker</font>

568
00:26:02,279 --> 00:26:06,179
right you<font color="#E5E5E5"> you</font><font color="#CCCCCC"> never see her make the</font>

569
00:26:04,260 --> 00:26:08,760
whole cake<font color="#E5E5E5"> she puts it in the oven and</font>

570
00:26:06,179 --> 00:26:13,580
just<font color="#E5E5E5"> magically comes out so</font><font color="#CCCCCC"> I copy the</font>

571
00:26:08,760 --> 00:26:16,350
install key<font color="#E5E5E5"> all right and I go back</font><font color="#CCCCCC"> to</font>

572
00:26:13,580 --> 00:26:20,549
go<font color="#CCCCCC"> back to</font><font color="#E5E5E5"> Java snoop oh great</font>

573
00:26:16,350 --> 00:26:23,789
<font color="#E5E5E5">okay now I'm on</font><font color="#CCCCCC"> des decrypt and I see</font>

574
00:26:20,549 --> 00:26:27,510
some more values okay okay<font color="#E5E5E5"> so I copy</font>

575
00:26:23,789 --> 00:26:29,879
those values<font color="#CCCCCC"> over to TextWrangler and I</font>

576
00:26:27,510 --> 00:26:32,179
could see those are my values<font color="#E5E5E5"> what's</font>

577
00:26:29,880 --> 00:26:36,019
interesting is already I can<font color="#CCCCCC"> see some</font>

578
00:26:32,179 --> 00:26:39,269
commonalities<font color="#E5E5E5"> this is my decoded key and</font>

579
00:26:36,019 --> 00:26:41,340
this is the text<font color="#CCCCCC"> this is the</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> are</font>

580
00:26:39,269 --> 00:26:44,250
<font color="#E5E5E5">the bytes that are being sent to the</font>

581
00:26:41,340 --> 00:26:47,370
decrypt<font color="#E5E5E5"> so it's clearly what's happening</font>

582
00:26:44,250 --> 00:26:49,620
<font color="#CCCCCC">is des decrypt is going to decrypt</font><font color="#E5E5E5"> the</font>

583
00:26:47,370 --> 00:26:51,510
<font color="#E5E5E5">ciphertext that I decoded</font><font color="#CCCCCC"> it's also a</font>

584
00:26:49,620 --> 00:26:53,870
nice<font color="#E5E5E5"> win because it</font><font color="#CCCCCC"> validates that</font><font color="#E5E5E5"> we</font>

585
00:26:51,510 --> 00:26:57,360
were<font color="#CCCCCC"> doing the decode function properly</font>

586
00:26:53,870 --> 00:26:59,699
<font color="#E5E5E5">okay so I accept the changes</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> go</font>

587
00:26:57,360 --> 00:27:04,490
through can I look<font color="#E5E5E5"> at the next install</font>

588
00:26:59,700 --> 00:27:06,180
key<font color="#CCCCCC"> I</font><font color="#E5E5E5"> copy</font><font color="#CCCCCC"> that I paste</font><font color="#E5E5E5"> it down here</font>

589
00:27:04,490 --> 00:27:08,280
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> know that there's is there</font>

590
00:27:06,180 --> 00:27:12,240
anything interesting<font color="#E5E5E5"> here the kind of is</font>

591
00:27:08,280 --> 00:27:16,580
hey look some bytes of<font color="#CCCCCC"> the install key</font>

592
00:27:12,240 --> 00:27:19,980
are now<font color="#E5E5E5"> the first set</font><font color="#CCCCCC"> of bytes</font><font color="#E5E5E5"> of my</font>

593
00:27:16,580 --> 00:27:23,010
decoded key that is very interesting<font color="#E5E5E5"> so</font>

594
00:27:19,980 --> 00:27:24,960
<font color="#CCCCCC">I'll copy the</font><font color="#E5E5E5"> DES decrypt function value</font>

595
00:27:23,010 --> 00:27:27,030
<font color="#E5E5E5">and then I'll do that like one or</font><font color="#CCCCCC"> two</font>

596
00:27:24,960 --> 00:27:30,120
more times<font color="#CCCCCC"> I'm always trying</font><font color="#E5E5E5"> to just</font>

597
00:27:27,030 --> 00:27:32,790
figure<font color="#E5E5E5"> out you know I'd say</font><font color="#CCCCCC"> higher-order</font>

598
00:27:30,120 --> 00:27:34,649
<font color="#CCCCCC">function what is the</font><font color="#E5E5E5"> system doing how is</font>

599
00:27:32,790 --> 00:27:36,240
it<font color="#E5E5E5"> doing it well in order</font><font color="#CCCCCC"> to figure</font><font color="#E5E5E5"> that</font>

600
00:27:34,650 --> 00:27:39,420
out I've got some data<font color="#E5E5E5"> now I have</font>

601
00:27:36,240 --> 00:27:42,570
install key values I have<font color="#CCCCCC"> ciphertext</font>

602
00:27:39,420 --> 00:27:46,200
values and look at<font color="#E5E5E5"> this the second time</font>

603
00:27:42,570 --> 00:27:50,850
<font color="#CCCCCC">I call des decrypt the first eight bytes</font>

604
00:27:46,200 --> 00:27:54,240
are no longer the<font color="#E5E5E5"> eight bytes of my</font>

605
00:27:50,850 --> 00:27:57,090
decoded value<font color="#E5E5E5"> this suggests to</font><font color="#CCCCCC"> me that</font>

606
00:27:54,240 --> 00:27:59,760
<font color="#E5E5E5">this might be</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> decrypted value so if</font>

607
00:27:57,090 --> 00:28:02,399
I can get some<font color="#E5E5E5"> kind of program to</font><font color="#CCCCCC"> take</font>

608
00:27:59,760 --> 00:28:05,460
<font color="#E5E5E5">the key to take the ciphertext</font><font color="#CCCCCC"> and</font>

609
00:28:02,400 --> 00:28:07,950
produce this output<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> I'll be well</font>

610
00:28:05,460 --> 00:28:11,100
on<font color="#CCCCCC"> my way to figuring out how this works</font>

611
00:28:07,950 --> 00:28:17,130
<font color="#E5E5E5">so in order to do that I'm going to use</font>

612
00:28:11,100 --> 00:28:20,879
<font color="#E5E5E5">cyber chef cyber chef is a fantastic</font>

613
00:28:17,130 --> 00:28:23,430
fantastic<font color="#E5E5E5"> product it's free</font><font color="#CCCCCC"> and what's</font>

614
00:28:20,880 --> 00:28:27,060
<font color="#E5E5E5">really</font><font color="#CCCCCC"> great about</font><font color="#E5E5E5"> it is it lets you</font><font color="#CCCCCC"> I</font>

615
00:28:23,430 --> 00:28:29,160
say rapidly prototype modifications of

616
00:28:27,060 --> 00:28:31,379
data<font color="#E5E5E5"> right so I could do this I</font><font color="#CCCCCC"> could</font>

617
00:28:29,160 --> 00:28:34,200
say I want<font color="#CCCCCC"> to go I want to take</font>

618
00:28:31,380 --> 00:28:42,090
something<font color="#E5E5E5"> to</font><font color="#CCCCCC"> base64 and then I want to</font>

619
00:28:34,200 --> 00:28:44,190
make a hex dump<font color="#E5E5E5"> to hex dump and then</font>

620
00:28:42,090 --> 00:28:46,169
<font color="#E5E5E5">what if I type this in you know</font><font color="#CCCCCC"> it gives</font>

621
00:28:44,190 --> 00:28:47,790
me<font color="#E5E5E5"> the hex dump right and it's they call</font>

622
00:28:46,170 --> 00:28:50,160
it recipes because<font color="#E5E5E5"> you're a cyber chef</font>

623
00:28:47,790 --> 00:28:52,950
<font color="#CCCCCC">worlds</font><font color="#E5E5E5"> I mean this tool is just awesome</font>

624
00:28:50,160 --> 00:28:55,710
<font color="#E5E5E5">it's open source and published</font><font color="#CCCCCC"> okay</font>

625
00:28:52,950 --> 00:28:58,320
and they have which is<font color="#E5E5E5"> great because I</font>

626
00:28:55,710 --> 00:29:00,690
did not care<font color="#CCCCCC"> to write an encryption and</font>

627
00:28:58,320 --> 00:29:03,539
decryption<font color="#CCCCCC"> functions they have des</font>

628
00:29:00,690 --> 00:29:05,669
decrypt so they have the<font color="#E5E5E5"> decryption</font>

629
00:29:03,539 --> 00:29:07,830
function for me<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> I need Python</font><font color="#CCCCCC"> I</font>

630
00:29:05,669 --> 00:29:09,659
don't need you know and<font color="#E5E5E5"> if I code</font>

631
00:29:07,830 --> 00:29:12,090
something<font color="#E5E5E5"> up myself</font>

632
00:29:09,659 --> 00:29:14,070
I'm<font color="#E5E5E5"> almost always confident that I made</font>

633
00:29:12,090 --> 00:29:15,449
a<font color="#CCCCCC"> mistake</font><font color="#E5E5E5"> so if it doesn't</font><font color="#CCCCCC"> work I don't</font>

634
00:29:14,070 --> 00:29:17,279
<font color="#CCCCCC">know if it didn't work because I'm a</font>

635
00:29:15,450 --> 00:29:20,460
horrible horrible programmer<font color="#CCCCCC"> which is a</font>

636
00:29:17,279 --> 00:29:22,200
truism<font color="#CCCCCC"> or</font><font color="#E5E5E5"> you know if I'm</font>

637
00:29:20,460 --> 00:29:24,779
misunderstanding<font color="#E5E5E5"> something so as much</font><font color="#CCCCCC"> as</font>

638
00:29:22,200 --> 00:29:27,450
<font color="#E5E5E5">possible</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> try to rely on other people's</font>

639
00:29:24,779 --> 00:29:30,799
code to<font color="#CCCCCC"> validate sometimes they're wrong</font>

640
00:29:27,450 --> 00:29:33,929
though<font color="#E5E5E5"> which we did which I did learn so</font>

641
00:29:30,799 --> 00:29:39,330
let's go back to<font color="#E5E5E5"> round</font><font color="#CCCCCC"> zero install key</font>

642
00:29:33,929 --> 00:29:41,220
is this<font color="#E5E5E5"> value okay so the key goes here</font>

643
00:29:39,330 --> 00:29:43,830
and<font color="#E5E5E5"> it's in hex format I mean that's</font>

644
00:29:41,220 --> 00:29:45,539
super easy<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> have to do much you</font>

645
00:29:43,830 --> 00:29:49,350
know<font color="#E5E5E5"> which is stuff something in there</font>

646
00:29:45,539 --> 00:29:51,539
<font color="#E5E5E5">and</font><font color="#CCCCCC"> the input is</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> ciphertext right</font>

647
00:29:49,350 --> 00:29:54,510
<font color="#E5E5E5">and what I'm going to do is I'm going</font><font color="#CCCCCC"> to</font>

648
00:29:51,539 --> 00:29:56,908
say look I'm only going<font color="#CCCCCC"> to input</font><font color="#E5E5E5"> the</font>

649
00:29:54,510 --> 00:29:58,830
first eight bytes<font color="#E5E5E5"> because only the eight</font>

650
00:29:56,909 --> 00:30:01,380
bytes changed right<font color="#E5E5E5"> why make more work</font>

651
00:29:58,830 --> 00:30:02,760
<font color="#E5E5E5">for myself</font><font color="#CCCCCC"> it's um you know</font><font color="#E5E5E5"> I just want</font>

652
00:30:01,380 --> 00:30:06,059
to be<font color="#E5E5E5"> simply so I'm gonna take the first</font>

653
00:30:02,760 --> 00:30:09,139
eight bytes<font color="#E5E5E5"> a ciphertext</font><font color="#CCCCCC"> and one two</font>

654
00:30:06,059 --> 00:30:14,220
three<font color="#E5E5E5"> four five six seven eight yep</font><font color="#CCCCCC"> so</font>

655
00:30:09,139 --> 00:30:17,010
now there's a<font color="#E5E5E5"> lot of variables and</font>

656
00:30:14,220 --> 00:30:18,779
configurations for<font color="#CCCCCC"> des decryption as</font>

657
00:30:17,010 --> 00:30:22,019
simple as it is<font color="#E5E5E5"> so I might play with</font>

658
00:30:18,779 --> 00:30:24,330
<font color="#E5E5E5">some of these</font><font color="#CCCCCC"> values and say hey</font><font color="#E5E5E5"> okay if</font>

659
00:30:22,019 --> 00:30:26,940
it's CBC mode<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> definitely not that</font>

660
00:30:24,330 --> 00:30:30,449
padding that's not getting<font color="#CCCCCC"> me a result</font>

661
00:30:26,940 --> 00:30:31,100
<font color="#CCCCCC">oh that's okay so that didn't go very</font>

662
00:30:30,450 --> 00:30:34,260
well

663
00:30:31,100 --> 00:30:35,939
also I want<font color="#E5E5E5"> the output to</font><font color="#CCCCCC"> be X</font><font color="#E5E5E5"> okay so I</font>

664
00:30:34,260 --> 00:30:40,440
did get some value there<font color="#E5E5E5"> and remember</font>

665
00:30:35,940 --> 00:30:44,399
<font color="#CCCCCC">the value I'm looking</font><font color="#E5E5E5"> for is for 107 so</font>

666
00:30:40,440 --> 00:30:46,950
if you see for 107<font color="#E5E5E5"> let's let's stop</font><font color="#CCCCCC"> okay</font>

667
00:30:44,399 --> 00:30:48,750
so I'm<font color="#E5E5E5"> going to say okay</font><font color="#CCCCCC"> let's find you</font>

668
00:30:46,950 --> 00:30:51,630
know cipher block chaining<font color="#CCCCCC"> I think</font>

669
00:30:48,750 --> 00:30:54,389
that's cipher feedback mode<font color="#CCCCCC"> I'm not</font>

670
00:30:51,630 --> 00:30:58,679
getting my code counter mode<font color="#CCCCCC"> not getting</font>

671
00:30:54,389 --> 00:30:59,820
a code output<font color="#CCCCCC"> feedback block cipher</font>

672
00:30:58,679 --> 00:31:02,639
<font color="#E5E5E5">maybe not working</font>

673
00:30:59,820 --> 00:31:05,340
ECB<font color="#E5E5E5"> none</font><font color="#CCCCCC"> of these things</font><font color="#E5E5E5"> are working</font>

674
00:31:02,639 --> 00:31:06,090
<font color="#E5E5E5">okay that's that would normally be bad</font>

675
00:31:05,340 --> 00:31:07,860
for the demo

676
00:31:06,090 --> 00:31:10,799
<font color="#E5E5E5">but I've expected and anticipated this</font>

677
00:31:07,860 --> 00:31:15,178
<font color="#E5E5E5">all right so what what could some of</font><font color="#CCCCCC"> the</font>

678
00:31:10,799 --> 00:31:19,168
issues be well<font color="#E5E5E5"> if I look at Mikey Mikey</font>

679
00:31:15,179 --> 00:31:23,279
is actually<font color="#E5E5E5"> 16 bytes</font><font color="#CCCCCC"> Dez</font><font color="#E5E5E5"> quick Google</font>

680
00:31:19,169 --> 00:31:26,279
search<font color="#E5E5E5"> is how many bits</font><font color="#CCCCCC"> of strength</font><font color="#E5E5E5"> 56</font>

681
00:31:23,279 --> 00:31:28,620
but they<font color="#E5E5E5"> technically use</font><font color="#CCCCCC"> 64-bit</font><font color="#E5E5E5"> keys and</font>

682
00:31:26,279 --> 00:31:31,740
it's just sloppiness that drops it<font color="#CCCCCC"> to 56</font>

683
00:31:28,620 --> 00:31:35,428
<font color="#E5E5E5">so I only need</font><font color="#CCCCCC"> 8 bytes</font><font color="#E5E5E5"> so the question</font>

684
00:31:31,740 --> 00:31:37,559
is is what<font color="#CCCCCC"> 8 bytes make up the key well</font>

685
00:31:35,429 --> 00:31:42,570
I know if I go to the end of the file

686
00:31:37,559 --> 00:31:45,360
<font color="#CCCCCC">and I remove data</font><font color="#E5E5E5"> my output doesn't</font>

687
00:31:42,570 --> 00:31:47,580
<font color="#E5E5E5">change it doesn't</font><font color="#CCCCCC"> change because only</font>

688
00:31:45,360 --> 00:31:52,439
the first<font color="#CCCCCC"> eight bytes of being used so I</font>

689
00:31:47,580 --> 00:31:54,270
know that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> information is not</font><font color="#E5E5E5"> in the</font>

690
00:31:52,440 --> 00:31:56,399
first<font color="#CCCCCC"> eight bytes or would have</font><font color="#E5E5E5"> already</font>

691
00:31:54,270 --> 00:31:58,340
<font color="#CCCCCC">given</font><font color="#E5E5E5"> me an answer</font><font color="#CCCCCC"> so what I'm</font><font color="#E5E5E5"> gonna do</font>

692
00:31:56,399 --> 00:32:02,219
is just<font color="#CCCCCC"> delete two bytes at a time</font>

693
00:31:58,340 --> 00:32:06,629
you'll see my output change<font color="#E5E5E5"> okay</font>

694
00:32:02,220 --> 00:32:12,240
but I'm<font color="#CCCCCC"> not getting</font><font color="#E5E5E5"> the code I want so I</font>

695
00:32:06,630 --> 00:32:14,850
just keep holy<font color="#E5E5E5"> right so that's good</font>

696
00:32:12,240 --> 00:32:17,850
<font color="#E5E5E5">because</font><font color="#CCCCCC"> now that was a good positives</font>

697
00:32:14,850 --> 00:32:22,799
for dramatic effect<font color="#CCCCCC"> right because now I</font>

698
00:32:17,850 --> 00:32:24,990
have with the key and what turns us to

699
00:32:22,799 --> 00:32:27,270
be the last eight bytes of the<font color="#E5E5E5"> install</font>

700
00:32:24,990 --> 00:32:34,110
key variable<font color="#E5E5E5"> I now have this input</font><font color="#CCCCCC"> that</font>

701
00:32:27,270 --> 00:32:38,100
generates<font color="#E5E5E5"> f10 7 9 f8 3 DAC 6 so I have</font>

702
00:32:34,110 --> 00:32:40,709
<font color="#E5E5E5">successfully recreated in other code the</font>

703
00:32:38,100 --> 00:32:42,270
decryption algorithm<font color="#E5E5E5"> that's really cool</font>

704
00:32:40,710 --> 00:32:45,090
<font color="#E5E5E5">all right that's really</font><font color="#CCCCCC"> it was a good</font>

705
00:32:42,270 --> 00:32:47,460
day<font color="#CCCCCC"> when</font><font color="#E5E5E5"> that happened so we can repeat</font>

706
00:32:45,090 --> 00:32:50,610
those steps<font color="#E5E5E5"> but in the interest of time</font>

707
00:32:47,460 --> 00:32:52,380
I won't but we<font color="#E5E5E5"> could XOR right so the</font>

708
00:32:50,610 --> 00:32:54,209
<font color="#CCCCCC">other thing is we could use we</font><font color="#E5E5E5"> could</font>

709
00:32:52,380 --> 00:32:58,049
make<font color="#CCCCCC"> sure is this really working or</font><font color="#E5E5E5"> not</font>

710
00:32:54,210 --> 00:33:01,200
so they have an XOR function right<font color="#CCCCCC"> and</font>

711
00:32:58,049 --> 00:33:06,240
the XOR function goes what's the<font color="#CCCCCC"> value a</font>

712
00:33:01,200 --> 00:33:12,600
a<font color="#E5E5E5"> right</font><font color="#CCCCCC"> ok and of course the output is</font>

713
00:33:06,240 --> 00:33:15,330
hex so I have to go from hex which makes

714
00:33:12,600 --> 00:33:17,740
binary data<font color="#E5E5E5"> i XOR the function and then</font>

715
00:33:15,330 --> 00:33:22,460
I go to hex

716
00:33:17,740 --> 00:33:27,500
and now this would<font color="#E5E5E5"> be the first</font><font color="#CCCCCC"> eight</font>

717
00:33:22,460 --> 00:33:29,570
<font color="#CCCCCC">bytes</font><font color="#E5E5E5"> through the install key des</font>

718
00:33:27,500 --> 00:33:31,370
decrypt loop and the and the<font color="#E5E5E5"> next XOR</font>

719
00:33:29,570 --> 00:33:33,560
and then I repeat this for the<font color="#CCCCCC"> next</font>

720
00:33:31,370 --> 00:33:35,330
install key loop and it turns<font color="#E5E5E5"> out they</font>

721
00:33:33,560 --> 00:33:36,530
use a different<font color="#E5E5E5"> algorithm not a</font>

722
00:33:35,330 --> 00:33:37,970
different algorithm<font color="#CCCCCC"> but they get the</font>

723
00:33:36,530 --> 00:33:39,530
first<font color="#E5E5E5"> eight bytes a little differently</font>

724
00:33:37,970 --> 00:33:41,750
<font color="#E5E5E5">but it doesn't matter because</font><font color="#CCCCCC"> my</font>

725
00:33:39,530 --> 00:33:45,770
approach still works<font color="#CCCCCC"> and now what I'm</font>

726
00:33:41,750 --> 00:33:47,540
left with<font color="#E5E5E5"> is the decoded activation code</font>

727
00:33:45,770 --> 00:33:49,340
<font color="#E5E5E5">the cipher</font><font color="#CCCCCC"> text we know of what it is</font>

728
00:33:47,540 --> 00:33:52,250
<font color="#E5E5E5">because we decoded it the key is very</font>

729
00:33:49,340 --> 00:33:55,189
<font color="#E5E5E5">simple the key is that blob that first</font>

730
00:33:52,250 --> 00:33:56,840
eight byte blob<font color="#E5E5E5"> plus the rest of my</font>

731
00:33:55,190 --> 00:33:59,180
activation<font color="#E5E5E5"> code so they're using the</font>

732
00:33:56,840 --> 00:34:01,730
activation<font color="#E5E5E5"> code the kind of decrypt</font>

733
00:33:59,180 --> 00:34:03,530
itself<font color="#E5E5E5"> just slid over eight bytes right</font>

734
00:34:01,730 --> 00:34:04,970
<font color="#E5E5E5">which you know if you</font><font color="#CCCCCC"> think about</font><font color="#E5E5E5"> it</font>

735
00:34:03,530 --> 00:34:06,230
maybe<font color="#E5E5E5"> that wasn't the</font><font color="#CCCCCC"> only option they</font>

736
00:34:04,970 --> 00:34:08,120
had because they had no network

737
00:34:06,230 --> 00:34:11,300
<font color="#E5E5E5">connectivity they couldn't exchange keys</font>

738
00:34:08,120 --> 00:34:13,489
etc<font color="#E5E5E5"> and it the code has to work on every</font>

739
00:34:11,300 --> 00:34:16,450
platform so<font color="#E5E5E5"> that is what they have and</font>

740
00:34:13,489 --> 00:34:21,350
that this is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> DES decrypted plaintext</font>

741
00:34:16,449 --> 00:34:24,949
if I repeat these steps I now have<font color="#E5E5E5"> in</font>

742
00:34:21,350 --> 00:34:28,839
that long text those long<font color="#E5E5E5"> hexadecimal</font>

743
00:34:24,949 --> 00:34:32,029
values that is the<font color="#E5E5E5"> completely decoded</font>

744
00:34:28,840 --> 00:34:33,500
<font color="#E5E5E5">activation code that's</font><font color="#CCCCCC"> fantastic but it</font>

745
00:34:32,030 --> 00:34:35,900
doesn't really help me enough<font color="#E5E5E5"> and yet</font>

746
00:34:33,500 --> 00:34:38,090
<font color="#E5E5E5">what I'm looking for is remember I said</font>

747
00:34:35,900 --> 00:34:40,220
the token serial number is<font color="#CCCCCC"> probably in</font>

748
00:34:38,090 --> 00:34:42,880
there and there has to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> data to</font>

749
00:34:40,219 --> 00:34:45,859
generate<font color="#E5E5E5"> the H</font><font color="#CCCCCC"> Mac one-time password</font>

750
00:34:42,880 --> 00:34:47,480
<font color="#CCCCCC">where is the token serial number</font><font color="#E5E5E5"> well I</font>

751
00:34:45,860 --> 00:34:50,060
know that<font color="#CCCCCC"> the token serial number is</font>

752
00:34:47,480 --> 00:34:52,820
<font color="#E5E5E5">three oh five three whatever but my</font>

753
00:34:50,060 --> 00:34:57,560
activation<font color="#E5E5E5"> code when decoded went</font>

754
00:34:52,820 --> 00:34:59,090
decrypted it's not in decimal<font color="#E5E5E5"> so I just</font>

755
00:34:57,560 --> 00:35:01,700
used Google<font color="#E5E5E5"> to say what is this number</font>

756
00:34:59,090 --> 00:35:05,180
<font color="#E5E5E5">in hex and I get this value Baker six</font>

757
00:35:01,700 --> 00:35:10,879
zero two three David zero four<font color="#E5E5E5"> do you</font>

758
00:35:05,180 --> 00:35:16,819
<font color="#E5E5E5">see that value</font><font color="#CCCCCC"> anywhere in here yes and</font>

759
00:35:10,880 --> 00:35:19,010
<font color="#CCCCCC">no you see it but</font><font color="#E5E5E5"> it is Indian I just</font>

760
00:35:16,820 --> 00:35:20,860
say it's Indian<font color="#E5E5E5"> because</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> always get my</font>

761
00:35:19,010 --> 00:35:22,970
bigger little mixed up so I<font color="#E5E5E5"> just</font>

762
00:35:20,860 --> 00:35:25,760
<font color="#CCCCCC">abstract</font><font color="#E5E5E5"> it to say there's an Indian</font>

763
00:35:22,970 --> 00:35:29,319
<font color="#E5E5E5">Asst about the data which is the case</font>

764
00:35:25,760 --> 00:35:31,369
and I can see the<font color="#CCCCCC"> second to last 4 bytes</font>

765
00:35:29,320 --> 00:35:34,190
<font color="#E5E5E5">appear to be where</font>

766
00:35:31,369 --> 00:35:37,009
the serial number is okay<font color="#CCCCCC"> so it's great</font>

767
00:35:34,190 --> 00:35:39,410
<font color="#E5E5E5">cuz all throughout this exercise I'm</font>

768
00:35:37,009 --> 00:35:41,180
getting like a positive<font color="#CCCCCC"> feedback</font><font color="#E5E5E5"> loop</font>

769
00:35:39,410 --> 00:35:42,558
<font color="#CCCCCC">from the research</font><font color="#E5E5E5"> telling me I'm</font>

770
00:35:41,180 --> 00:35:46,549
<font color="#E5E5E5">probably on the right path because</font><font color="#CCCCCC"> the</font>

771
00:35:42,559 --> 00:35:49,069
<font color="#E5E5E5">serial number was there the last byte 82</font>

772
00:35:46,549 --> 00:35:50,599
is probably<font color="#E5E5E5"> just an integrity</font><font color="#CCCCCC"> check or</font>

773
00:35:49,069 --> 00:35:52,549
checksum that just seems something that

774
00:35:50,599 --> 00:35:56,450
programmers can't help themselves from

775
00:35:52,549 --> 00:35:59,749
doing<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so I want to take this now</font>

776
00:35:56,450 --> 00:36:03,649
<font color="#CCCCCC">and</font><font color="#E5E5E5"> figure out where is the secret data</font>

777
00:35:59,749 --> 00:36:07,098
<font color="#E5E5E5">that generates the sha-1</font><font color="#CCCCCC"> H Mac one-time</font>

778
00:36:03,650 --> 00:36:09,319
password<font color="#E5E5E5"> so to do that let's just take</font>

779
00:36:07,099 --> 00:36:11,539
one<font color="#CCCCCC"> little sidestep to do a</font><font color="#E5E5E5"> little</font>

780
00:36:09,319 --> 00:36:15,380
further<font color="#CCCCCC"> google research into h OTP right</font>

781
00:36:11,539 --> 00:36:17,980
<font color="#CCCCCC">i mentioned it was this RFC standard</font><font color="#E5E5E5"> it</font>

782
00:36:15,380 --> 00:36:20,299
has<font color="#CCCCCC"> components that are shared secret</font>

783
00:36:17,980 --> 00:36:22,910
<font color="#CCCCCC">that generates that and</font><font color="#E5E5E5"> it's counter</font>

784
00:36:20,299 --> 00:36:26,299
based<font color="#E5E5E5"> right the other common one-time</font>

785
00:36:22,910 --> 00:36:28,788
password<font color="#CCCCCC"> compliance system is totp</font>

786
00:36:26,299 --> 00:36:31,460
time-based time-based is technically<font color="#CCCCCC"> the</font>

787
00:36:28,789 --> 00:36:34,220
same<font color="#E5E5E5"> as HT OTP except the counter</font>

788
00:36:31,460 --> 00:36:36,499
instead<font color="#E5E5E5"> of being like</font><font color="#CCCCCC"> 1 then 2 then 3</font>

789
00:36:34,220 --> 00:36:39,558
<font color="#E5E5E5">the counter is like the number of</font>

790
00:36:36,499 --> 00:36:41,480
seconds<font color="#E5E5E5"> since</font><font color="#CCCCCC"> the epoch</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> divided</font>

791
00:36:39,559 --> 00:36:42,980
<font color="#E5E5E5">by 30 or 60</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so the counter</font>

792
00:36:41,480 --> 00:36:45,440
it's still the same function it's just

793
00:36:42,980 --> 00:36:46,880
<font color="#E5E5E5">how they calculate the counter and then</font>

794
00:36:45,440 --> 00:36:48,650
we want<font color="#E5E5E5"> to make this work in google</font>

795
00:36:46,880 --> 00:36:52,759
<font color="#E5E5E5">authenticator</font><font color="#CCCCCC"> so we have to do a little</font>

796
00:36:48,650 --> 00:36:55,279
<font color="#E5E5E5">more to</font><font color="#CCCCCC"> say you know the base 32</font><font color="#E5E5E5"> the key</font>

797
00:36:52,759 --> 00:36:56,779
has to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> based 32 encoded</font><font color="#CCCCCC"> alright</font>

798
00:36:55,279 --> 00:36:58,730
that's good<font color="#E5E5E5"> to know</font>

799
00:36:56,779 --> 00:37:01,730
<font color="#E5E5E5">and the C is the increment encounter</font>

800
00:36:58,730 --> 00:37:04,160
that's just a number<font color="#CCCCCC"> and truncate</font><font color="#E5E5E5"> google</font>

801
00:37:01,730 --> 00:37:06,289
<font color="#E5E5E5">authenticator while completely compliant</font>

802
00:37:04,160 --> 00:37:08,779
with the standard<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> only supports</font>

803
00:37:06,289 --> 00:37:11,619
<font color="#E5E5E5">the</font><font color="#CCCCCC"> six-digit</font><font color="#E5E5E5"> version of these codes so</font>

804
00:37:08,779 --> 00:37:14,989
that's just<font color="#E5E5E5"> stuff I need to be aware of</font>

805
00:37:11,619 --> 00:37:19,339
so now I want<font color="#E5E5E5"> to say how</font><font color="#CCCCCC"> can i generate</font>

806
00:37:14,989 --> 00:37:21,680
<font color="#E5E5E5">these these tokens right so my goal is</font>

807
00:37:19,339 --> 00:37:24,200
to figure out<font color="#E5E5E5"> I've got this amount of</font>

808
00:37:21,680 --> 00:37:28,430
data<font color="#E5E5E5"> these are</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> bytes somewhere in</font>

809
00:37:24,200 --> 00:37:30,230
here<font color="#E5E5E5"> must obviously be my token right</font>

810
00:37:28,430 --> 00:37:32,930
the<font color="#CCCCCC"> data that generates the one-time</font>

811
00:37:30,230 --> 00:37:36,069
password<font color="#E5E5E5"> I don't know where it is so</font><font color="#CCCCCC"> I</font>

812
00:37:32,930 --> 00:37:38,989
grab a very quick<font color="#E5E5E5"> Python script</font><font color="#CCCCCC"> I</font>

813
00:37:36,069 --> 00:37:42,049
actually made the Python<font color="#E5E5E5"> script</font><font color="#CCCCCC"> minus</font>

814
00:37:38,989 --> 00:37:44,269
the imports<font color="#E5E5E5"> and I basically</font><font color="#CCCCCC"> say</font><font color="#E5E5E5"> I'm</font>

815
00:37:42,049 --> 00:37:44,930
gonna go through you know starting at

816
00:37:44,269 --> 00:37:47,270
byte

817
00:37:44,930 --> 00:37:49,069
zero<font color="#E5E5E5"> and for one bite</font><font color="#CCCCCC"> all the way</font>

818
00:37:47,270 --> 00:37:51,410
<font color="#E5E5E5">through the end you know through all the</font>

819
00:37:49,070 --> 00:37:53,180
<font color="#CCCCCC">bites</font><font color="#E5E5E5"> I'm just gonna calculate one-time</font>

820
00:37:51,410 --> 00:37:56,830
passwords<font color="#E5E5E5"> over</font><font color="#CCCCCC"> and over and</font><font color="#E5E5E5"> over again</font>

821
00:37:53,180 --> 00:37:59,569
<font color="#E5E5E5">make five make the first 500 TP</font>

822
00:37:56,830 --> 00:38:03,740
<font color="#E5E5E5">calculations and save them to a file and</font>

823
00:37:59,570 --> 00:38:06,590
<font color="#E5E5E5">then when I</font><font color="#CCCCCC"> grab for</font><font color="#E5E5E5"> my token and I find</font>

824
00:38:03,740 --> 00:38:10,120
the x and<font color="#CCCCCC"> y values I'll know</font><font color="#E5E5E5"> positively</font>

825
00:38:06,590 --> 00:38:12,710
the start<font color="#E5E5E5"> and</font><font color="#CCCCCC"> stop of the secret</font>

826
00:38:10,120 --> 00:38:15,830
fantastic<font color="#E5E5E5"> it would have been better if</font>

827
00:38:12,710 --> 00:38:18,080
it<font color="#E5E5E5"> had worked</font><font color="#CCCCCC"> okay so that didn't work</font>

828
00:38:15,830 --> 00:38:20,180
<font color="#CCCCCC">all right which happens you know</font><font color="#E5E5E5"> from</font>

829
00:38:18,080 --> 00:38:22,670
time<font color="#E5E5E5"> to time</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> and so that we</font>

830
00:38:20,180 --> 00:38:24,799
have to throw<font color="#CCCCCC"> away I also tried nd</font><font color="#E5E5E5"> in</font>

831
00:38:22,670 --> 00:38:26,600
<font color="#E5E5E5">this right so I tried just you know the</font>

832
00:38:24,800 --> 00:38:28,880
serial number was<font color="#CCCCCC"> ND and decoded right</font>

833
00:38:26,600 --> 00:38:30,230
so it would make<font color="#E5E5E5"> sense</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> that</font>

834
00:38:28,880 --> 00:38:33,020
they might<font color="#E5E5E5"> do that too so there's a</font>

835
00:38:30,230 --> 00:38:34,970
script<font color="#CCCCCC"> in there where you might say</font><font color="#E5E5E5"> I</font>

836
00:38:33,020 --> 00:38:37,670
calculated the endianness but<font color="#E5E5E5"> literally</font>

837
00:38:34,970 --> 00:38:39,730
I just<font color="#E5E5E5"> wrote that</font><font color="#CCCCCC"> wrote the hex bytes</font>

838
00:38:37,670 --> 00:38:42,490
backwards<font color="#E5E5E5"> it had the same effect right</font>

839
00:38:39,730 --> 00:38:45,890
<font color="#CCCCCC">and that didn't work either</font><font color="#E5E5E5"> so now</font>

840
00:38:42,490 --> 00:38:48,410
remember<font color="#E5E5E5"> I can go up the stack and I</font>

841
00:38:45,890 --> 00:38:51,259
could figure out actually what<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font>

842
00:38:48,410 --> 00:38:53,299
secret<font color="#E5E5E5"> right I'm using Java snoop so why</font>

843
00:38:51,260 --> 00:38:56,120
the heck don't<font color="#CCCCCC"> I snoop it and figure out</font>

844
00:38:53,300 --> 00:38:58,550
what the actual bytes<font color="#E5E5E5"> are and compare it</font>

845
00:38:56,120 --> 00:39:01,370
<font color="#E5E5E5">to my decoded value</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so let's</font>

846
00:38:58,550 --> 00:39:04,190
go<font color="#E5E5E5"> ahead and do</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so I'm back in</font><font color="#CCCCCC"> the</font>

847
00:39:01,370 --> 00:39:09,279
<font color="#CCCCCC">Java snoop land and</font><font color="#E5E5E5"> accept all the</font>

848
00:39:04,190 --> 00:39:11,810
changes<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so I'm at a problem</font><font color="#CCCCCC"> I</font>

849
00:39:09,280 --> 00:39:14,180
threw my google searching and finding

850
00:39:11,810 --> 00:39:16,640
<font color="#CCCCCC">freely available activation codes for</font>

851
00:39:14,180 --> 00:39:19,279
research did not<font color="#E5E5E5"> find an activation code</font>

852
00:39:16,640 --> 00:39:21,650
that worked for the<font color="#E5E5E5"> Java client so I</font>

853
00:39:19,280 --> 00:39:24,920
don't get<font color="#E5E5E5"> the</font><font color="#CCCCCC"> ability to</font><font color="#E5E5E5"> generate the</font>

854
00:39:21,650 --> 00:39:26,660
<font color="#CCCCCC">one-time</font><font color="#E5E5E5"> password but I have complete</font>

855
00:39:24,920 --> 00:39:29,930
control over the application so I might

856
00:39:26,660 --> 00:39:32,750
have<font color="#CCCCCC"> an end right so what I'll do is</font><font color="#E5E5E5"> if</font>

857
00:39:29,930 --> 00:39:37,009
<font color="#CCCCCC">I go up the stack if you remember here</font>

858
00:39:32,750 --> 00:39:38,140
right so<font color="#CCCCCC"> we do this there's this</font><font color="#E5E5E5"> you</font>

859
00:39:37,010 --> 00:39:41,180
know<font color="#E5E5E5"> what does it do</font>

860
00:39:38,140 --> 00:39:43,910
activate token calls<font color="#E5E5E5"> check token check</font>

861
00:39:41,180 --> 00:39:45,890
token is a boolean<font color="#CCCCCC"> I didn't even have to</font>

862
00:39:43,910 --> 00:39:48,740
google what<font color="#E5E5E5"> boolean</font><font color="#CCCCCC"> metz okay</font><font color="#E5E5E5"> it's true</font>

863
00:39:45,890 --> 00:39:50,629
or false so my guess is<font color="#E5E5E5"> if it's false it</font>

864
00:39:48,740 --> 00:39:54,470
didn't check out so I'm gonna<font color="#E5E5E5"> modify</font>

865
00:39:50,630 --> 00:39:56,940
that and see<font color="#CCCCCC"> if I get some</font><font color="#E5E5E5"> joy all right</font>

866
00:39:54,470 --> 00:40:01,939
<font color="#CCCCCC">so I'm gonna add a new hook</font>

867
00:39:56,940 --> 00:40:13,170
I'm gonna look for oops<font color="#E5E5E5"> I'm gonna browse</font>

868
00:40:01,940 --> 00:40:14,550
the SDK<font color="#E5E5E5"> this is where it is oops</font><font color="#CCCCCC"> and I'm</font>

869
00:40:13,170 --> 00:40:21,800
looking for

870
00:40:14,550 --> 00:40:21,800
it was check token right I miss it

871
00:40:22,810 --> 00:40:26,490
[Music]

872
00:40:24,390 --> 00:40:33,299
check platform<font color="#E5E5E5"> no I don't</font><font color="#CCCCCC"> think that's</font>

873
00:40:26,490 --> 00:40:35,399
the<font color="#CCCCCC"> same one hmm well</font><font color="#E5E5E5"> yeah it wasn't in</font>

874
00:40:33,300 --> 00:40:40,350
DES<font color="#CCCCCC"> so that's good one I'll</font><font color="#E5E5E5"> tell you</font>

875
00:40:35,400 --> 00:40:44,100
what we'll just<font color="#CCCCCC"> do bill just oh</font><font color="#E5E5E5"> actually</font>

876
00:40:40,350 --> 00:40:50,880
you<font color="#E5E5E5"> know if I was smart I would just go</font>

877
00:40:44,100 --> 00:40:56,100
here look at the code go one over<font color="#E5E5E5"> and</font>

878
00:40:50,880 --> 00:40:59,040
<font color="#E5E5E5">they got play get the nice visual effect</font>

879
00:40:56,100 --> 00:41:00,920
<font color="#E5E5E5">okay all right I get there later all</font>

880
00:40:59,040 --> 00:41:03,870
<font color="#E5E5E5">right so here</font>

881
00:41:00,920 --> 00:41:06,480
yeah it's in quest doc token right so I

882
00:41:03,870 --> 00:41:07,950
had the wrong class<font color="#E5E5E5"> all right so easy</font>

883
00:41:06,480 --> 00:41:08,310
mistake anybody could have<font color="#E5E5E5"> made it I</font>

884
00:41:07,950 --> 00:41:10,770
swear

885
00:41:08,310 --> 00:41:12,480
<font color="#E5E5E5">all right so we add a new hook and I'm</font>

886
00:41:10,770 --> 00:41:17,970
looking for

887
00:41:12,480 --> 00:41:20,870
<font color="#CCCCCC">I already Fred ja token right and it was</font>

888
00:41:17,970 --> 00:41:23,850
[Music]

889
00:41:20,870 --> 00:41:29,040
no I wouldn't forgot it again<font color="#E5E5E5"> quest</font>

890
00:41:23,850 --> 00:41:32,420
quest<font color="#CCCCCC"> star token dot Java dot token now</font>

891
00:41:29,040 --> 00:41:35,610
see<font color="#E5E5E5"> I see</font><font color="#CCCCCC"> see I went too fast</font>

892
00:41:32,420 --> 00:41:37,410
everybody quest token dot Java dot token

893
00:41:35,610 --> 00:41:40,560
<font color="#E5E5E5">all right cuesta token</font><font color="#CCCCCC"> that Java but</font>

894
00:41:37,410 --> 00:41:42,140
<font color="#E5E5E5">took a quest token okay yeah</font><font color="#CCCCCC"> so that's</font>

895
00:41:40,560 --> 00:41:45,930
it<font color="#E5E5E5"> all right</font>

896
00:41:42,140 --> 00:41:49,529
and I've got it's a boolean I'm looking

897
00:41:45,930 --> 00:41:52,200
for boolean<font color="#E5E5E5"> check token name nice try</font>

898
00:41:49,530 --> 00:41:52,680
but<font color="#E5E5E5"> that's not it boolean check token</font>

899
00:41:52,200 --> 00:41:56,149
<font color="#E5E5E5">okay</font>

900
00:41:52,680 --> 00:41:56,149
so add the hook

901
00:41:56,430 --> 00:42:00,750
and there's at this time<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to only</font>

902
00:41:58,410 --> 00:42:03,330
tamper with the return value<font color="#CCCCCC"> so</font><font color="#E5E5E5"> okay</font>

903
00:42:00,750 --> 00:42:05,940
very good<font color="#E5E5E5"> so I will</font><font color="#CCCCCC"> do that</font><font color="#E5E5E5"> enter my</font>

904
00:42:03,330 --> 00:42:10,259
<font color="#E5E5E5">activation code demo Shazam</font>

905
00:42:05,940 --> 00:42:14,190
click<font color="#E5E5E5"> activate and the value is false</font>

906
00:42:10,260 --> 00:42:16,050
<font color="#CCCCCC">I am</font><font color="#E5E5E5"> gonna</font><font color="#CCCCCC"> change</font><font color="#E5E5E5"> this to</font><font color="#CCCCCC"> be true</font><font color="#E5E5E5"> now in</font>

907
00:42:14,190 --> 00:42:17,670
the interest<font color="#E5E5E5"> of time I'll save the 30</font>

908
00:42:16,050 --> 00:42:19,710
minutes it took me<font color="#CCCCCC"> to figure this out if</font>

909
00:42:17,670 --> 00:42:23,400
I click true and click accept change it

910
00:42:19,710 --> 00:42:26,340
won't work<font color="#CCCCCC"> because the GUI</font><font color="#E5E5E5"> wants you to</font>

911
00:42:23,400 --> 00:42:28,550
like exit the cell that was not a good

912
00:42:26,340 --> 00:42:30,780
day for me<font color="#CCCCCC"> when that happened</font><font color="#E5E5E5"> okay</font>

913
00:42:28,550 --> 00:42:32,310
<font color="#CCCCCC">because I thought I knew how programming</font>

914
00:42:30,780 --> 00:42:34,800
worked<font color="#E5E5E5"> you know even a little bit and</font>

915
00:42:32,310 --> 00:42:36,960
that didn't work<font color="#CCCCCC"> so but now Shazam</font>

916
00:42:34,800 --> 00:42:40,020
there's my token nine one seven six<font color="#E5E5E5"> two</font>

917
00:42:36,960 --> 00:42:41,790
<font color="#E5E5E5">two</font><font color="#CCCCCC"> I know</font><font color="#E5E5E5"> since I've generated a token</font>

918
00:42:40,020 --> 00:42:44,910
I've clearly generated a one-time

919
00:42:41,790 --> 00:42:49,860
passcode<font color="#E5E5E5"> so let's make another hook add</font>

920
00:42:44,910 --> 00:42:56,569
another hook<font color="#E5E5E5"> let's go for word one time</font>

921
00:42:49,860 --> 00:42:59,670
<font color="#CCCCCC">password</font><font color="#E5E5E5"> algorithm and generate OTP</font>

922
00:42:56,570 --> 00:43:02,310
<font color="#E5E5E5">fantastic and</font><font color="#CCCCCC"> look it even has a series</font>

923
00:42:59,670 --> 00:43:03,900
of<font color="#E5E5E5"> bytes and you know some numbers so</font>

924
00:43:02,310 --> 00:43:07,710
I'm like it's gonna<font color="#E5E5E5"> be a good day I</font>

925
00:43:03,900 --> 00:43:11,100
<font color="#CCCCCC">think</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> right so go here we're going</font>

926
00:43:07,710 --> 00:43:14,100
to tamper<font color="#CCCCCC"> with the parameters</font><font color="#E5E5E5"> I'm just</font>

927
00:43:11,100 --> 00:43:17,040
gonna refresh<font color="#E5E5E5"> my token and there are my</font>

928
00:43:14,100 --> 00:43:20,339
<font color="#E5E5E5">values 6</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> 2</font><font color="#CCCCCC"> D</font><font color="#E5E5E5"> 7 4 etcetera etcetera</font>

929
00:43:17,040 --> 00:43:23,610
etcetera which turn out<font color="#CCCCCC"> to be right here</font>

930
00:43:20,340 --> 00:43:27,090
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I know</font><font color="#E5E5E5"> exactly for this token</font>

931
00:43:23,610 --> 00:43:29,730
what value was used to generate the OTP

932
00:43:27,090 --> 00:43:31,260
<font color="#CCCCCC">and</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> able to lay that out and</font><font color="#E5E5E5"> now I'm</font>

933
00:43:29,730 --> 00:43:34,770
able<font color="#E5E5E5"> to figure it</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> right so I have</font>

934
00:43:31,260 --> 00:43:39,030
for whatever reason they dropped<font color="#CCCCCC"> 3 bytes</font>

935
00:43:34,770 --> 00:43:40,470
out of the stream<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> and then the</font>

936
00:43:39,030 --> 00:43:43,740
rest of the bytes so it looks<font color="#E5E5E5"> like I</font>

937
00:43:40,470 --> 00:43:46,109
<font color="#CCCCCC">think maybe 20 or</font><font color="#E5E5E5"> 40 bytes long there</font>

938
00:43:43,740 --> 00:43:48,089
looks to<font color="#CCCCCC"> be some unused space the night</font>

939
00:43:46,110 --> 00:43:50,580
at least<font color="#E5E5E5"> didn't figure out there's a</font>

940
00:43:48,090 --> 00:43:51,960
platform type so seven is<font color="#E5E5E5"> Android we</font>

941
00:43:50,580 --> 00:43:55,110
know where the serial number is etcetera

942
00:43:51,960 --> 00:43:58,080
<font color="#CCCCCC">so all I have to do is take this binary</font>

943
00:43:55,110 --> 00:43:58,650
<font color="#CCCCCC">data</font><font color="#E5E5E5"> and if you trust</font><font color="#CCCCCC"> me that I that</font>

944
00:43:58,080 --> 00:44:03,180
this works

945
00:43:58,650 --> 00:44:05,700
<font color="#CCCCCC">there's a base 32 encoder</font><font color="#E5E5E5"> and I just put</font>

946
00:44:03,180 --> 00:44:08,100
<font color="#CCCCCC">that in there and then I generate</font><font color="#E5E5E5"> this</font>

947
00:44:05,700 --> 00:44:11,850
one-time password<font color="#E5E5E5"> right that is</font><font color="#CCCCCC"> the</font>

948
00:44:08,100 --> 00:44:14,720
secret<font color="#CCCCCC"> URL that if I make a QR code</font><font color="#E5E5E5"> will</font>

949
00:44:11,850 --> 00:44:17,640
generate<font color="#CCCCCC"> otps that are</font><font color="#E5E5E5"> compliant and</font>

950
00:44:14,720 --> 00:44:19,169
synonymous with the defender tokens<font color="#E5E5E5"> so</font>

951
00:44:17,640 --> 00:44:23,430
let's see how<font color="#CCCCCC"> that</font><font color="#E5E5E5"> works in practice</font>

952
00:44:19,170 --> 00:44:24,280
<font color="#E5E5E5">we'll go to a demo i used plunker to</font>

953
00:44:23,430 --> 00:44:27,879
build<font color="#E5E5E5"> this</font>

954
00:44:24,280 --> 00:44:30,070
<font color="#CCCCCC">assist</font><font color="#E5E5E5"> right so and I learned a lot</font>

955
00:44:27,880 --> 00:44:32,860
about CSS and divs and<font color="#CCCCCC"> blah blah blah</font>

956
00:44:30,070 --> 00:44:36,160
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> cuz previously my HTML</font><font color="#E5E5E5"> is limited</font>

957
00:44:32,860 --> 00:44:41,620
to<font color="#CCCCCC"> geo</font><font color="#E5E5E5"> cities versions right which was</font>

958
00:44:36,160 --> 00:44:43,299
just h1 h2<font color="#E5E5E5"> maybe B for bold</font><font color="#CCCCCC"> alright so</font>

959
00:44:41,620 --> 00:44:45,520
we've we've stepped my game up

960
00:44:43,300 --> 00:44:47,590
considerably<font color="#E5E5E5"> and so I've got I put in</font>

961
00:44:45,520 --> 00:44:50,200
<font color="#E5E5E5">this Android code</font><font color="#CCCCCC"> I've got some fancy</font>

962
00:44:47,590 --> 00:44:52,420
debug output<font color="#E5E5E5"> and I know that my token</font>

963
00:44:50,200 --> 00:44:55,330
<font color="#CCCCCC">value is nine one seven six</font><font color="#E5E5E5"> two two and</font>

964
00:44:52,420 --> 00:44:59,020
I generate the Google Authenticator

965
00:44:55,330 --> 00:45:01,240
compliant token that's awesome<font color="#CCCCCC"> okay</font>

966
00:44:59,020 --> 00:45:03,160
that's really<font color="#E5E5E5"> really good</font><font color="#CCCCCC"> I went ahead</font>

967
00:45:01,240 --> 00:45:06,850
and<font color="#CCCCCC"> made some other</font><font color="#E5E5E5"> enhancements because</font>

968
00:45:03,160 --> 00:45:09,580
as<font color="#CCCCCC"> ah-ha as a counter based token this</font>

969
00:45:06,850 --> 00:45:11,200
functionality<font color="#E5E5E5"> is great when you get the</font>

970
00:45:09,580 --> 00:45:13,330
<font color="#CCCCCC">token when you get the activation</font><font color="#E5E5E5"> code</font>

971
00:45:11,200 --> 00:45:16,060
and you say I don't want<font color="#E5E5E5"> to use</font><font color="#CCCCCC"> del</font>

972
00:45:13,330 --> 00:45:18,430
<font color="#E5E5E5">defender</font><font color="#CCCCCC"> one-time blah blah blah when he</font>

973
00:45:16,060 --> 00:45:21,130
<font color="#E5E5E5">was Google off because I use it for AWS</font>

974
00:45:18,430 --> 00:45:22,899
and LastPass and<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't know World of</font>

975
00:45:21,130 --> 00:45:25,270
Warcraft<font color="#CCCCCC"> I use it for</font><font color="#E5E5E5"> everything so I</font>

976
00:45:22,900 --> 00:45:28,090
<font color="#E5E5E5">don't want another</font><font color="#CCCCCC"> pieces crappy</font>

977
00:45:25,270 --> 00:45:29,380
software<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you got to figure</font><font color="#CCCCCC"> out where</font>

978
00:45:28,090 --> 00:45:31,750
is the token<font color="#CCCCCC"> value and every</font>

979
00:45:29,380 --> 00:45:34,840
incrementing value you can see the token

980
00:45:31,750 --> 00:45:39,010
value changes and the QR code changes so

981
00:45:34,840 --> 00:45:40,390
if you know the token number right which

982
00:45:39,010 --> 00:45:42,160
is available<font color="#E5E5E5"> in the view token</font>

983
00:45:40,390 --> 00:45:45,160
information<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> get that but you</font>

984
00:45:42,160 --> 00:45:47,580
<font color="#E5E5E5">could also be really smart and say if I</font>

985
00:45:45,160 --> 00:45:51,279
know what a token is if I<font color="#E5E5E5"> enter</font><font color="#CCCCCC"> that</font>

986
00:45:47,580 --> 00:45:53,890
I'll know that that is counter value<font color="#E5E5E5"> 537</font>

987
00:45:51,280 --> 00:45:56,320
so I provide in this utility a way for

988
00:45:53,890 --> 00:45:58,450
you to<font color="#E5E5E5"> enter your current token</font><font color="#CCCCCC"> on the</font>

989
00:45:56,320 --> 00:46:01,570
defender app<font color="#CCCCCC"> enter the activation code</font>

990
00:45:58,450 --> 00:46:05,950
<font color="#E5E5E5">and I'll generate for you the QR the QR</font>

991
00:46:01,570 --> 00:46:08,440
code that<font color="#E5E5E5"> Google auth will map to to an</font>

992
00:46:05,950 --> 00:46:10,779
activation code that you can<font color="#E5E5E5"> use inside</font>

993
00:46:08,440 --> 00:46:14,380
Google auth and<font color="#E5E5E5"> you can throw</font><font color="#CCCCCC"> away the</font>

994
00:46:10,780 --> 00:46:17,830
<font color="#CCCCCC">poor</font><font color="#E5E5E5"> usable defender token which is</font>

995
00:46:14,380 --> 00:46:19,990
<font color="#CCCCCC">fantastic a couple of gotchas about that</font>

996
00:46:17,830 --> 00:46:22,210
right is that you have to be careful<font color="#CCCCCC"> you</font>

997
00:46:19,990 --> 00:46:26,790
<font color="#CCCCCC">can't use start using</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> tokens at the</font>

998
00:46:22,210 --> 00:46:26,790
same time<font color="#E5E5E5"> right why is that anybody</font>

999
00:46:27,180 --> 00:46:31,830
right<font color="#CCCCCC"> exactly the counter will go bad on</font>

1000
00:46:29,550 --> 00:46:33,180
<font color="#E5E5E5">you right and you'll</font><font color="#CCCCCC"> see this in my</font>

1001
00:46:31,830 --> 00:46:35,430
lessons learned I had the pleasure of

1002
00:46:33,180 --> 00:46:38,339
doing<font color="#CCCCCC"> that to myself</font><font color="#E5E5E5"> because I was</font>

1003
00:46:35,430 --> 00:46:40,500
refreshing<font color="#E5E5E5"> too many times</font><font color="#CCCCCC"> and I became</font>

1004
00:46:38,340 --> 00:46:42,210
out of<font color="#E5E5E5"> sync</font><font color="#CCCCCC"> with the server and</font><font color="#E5E5E5"> I had to</font>

1005
00:46:40,500 --> 00:46:43,350
ask<font color="#E5E5E5"> for another activation token and</font>

1006
00:46:42,210 --> 00:46:46,460
maybe there were some<font color="#E5E5E5"> questions</font><font color="#CCCCCC"> around</font>

1007
00:46:43,350 --> 00:46:49,670
<font color="#E5E5E5">what I was doing</font><font color="#CCCCCC"> so you know generally</font>

1008
00:46:46,460 --> 00:46:53,520
generally<font color="#E5E5E5"> you want to avoid that</font><font color="#CCCCCC"> okay so</font>

1009
00:46:49,670 --> 00:46:55,590
that was<font color="#CCCCCC"> the demo</font><font color="#E5E5E5"> and it worked</font><font color="#CCCCCC"> so now a</font>

1010
00:46:53,520 --> 00:46:57,600
couple takeaways<font color="#E5E5E5"> you're looking at</font>

1011
00:46:55,590 --> 00:46:59,550
because I think<font color="#E5E5E5"> of not enough I was</font>

1012
00:46:57,600 --> 00:47:01,980
serious<font color="#CCCCCC"> when</font><font color="#E5E5E5"> I think oh not enough</font>

1013
00:46:59,550 --> 00:47:03,810
people<font color="#CCCCCC"> you know showcase</font><font color="#E5E5E5"> thank you</font>

1014
00:47:01,980 --> 00:47:07,380
showcase the steps they took to get

1015
00:47:03,810 --> 00:47:10,080
where they are<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a word cloud of</font>

1016
00:47:07,380 --> 00:47:14,610
all of my<font color="#CCCCCC"> Google searches that led me</font>

1017
00:47:10,080 --> 00:47:19,759
through<font color="#E5E5E5"> the exercise today</font><font color="#CCCCCC"> I put</font><font color="#E5E5E5"> on</font>

1018
00:47:14,610 --> 00:47:23,370
Twitter<font color="#E5E5E5"> this morning</font><font color="#CCCCCC"> like a short video</font>

1019
00:47:19,760 --> 00:47:25,890
<font color="#E5E5E5">of the actual searches I looked right</font>

1020
00:47:23,370 --> 00:47:28,259
and I would<font color="#CCCCCC"> say it's humbling right to</font>

1021
00:47:25,890 --> 00:47:31,109
see a grown man<font color="#CCCCCC"> claim that he had to</font>

1022
00:47:28,260 --> 00:47:33,420
<font color="#CCCCCC">Google</font><font color="#E5E5E5"> for what is 13 and hex</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font>

1023
00:47:31,110 --> 00:47:35,910
but this<font color="#E5E5E5"> is how we make improvement all</font>

1024
00:47:33,420 --> 00:47:38,310
<font color="#E5E5E5">right so you know how do you write a for</font>

1025
00:47:35,910 --> 00:47:39,839
loop<font color="#CCCCCC"> in</font><font color="#E5E5E5"> Python every time I write a for</font>

1026
00:47:38,310 --> 00:47:44,009
loop in Python I have to<font color="#E5E5E5"> Google how</font><font color="#CCCCCC"> to</font>

1027
00:47:39,840 --> 00:47:46,650
do it so<font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> all right good</font>

1028
00:47:44,010 --> 00:47:48,150
security<font color="#E5E5E5"> requires good usability</font><font color="#CCCCCC"> I would</font>

1029
00:47:46,650 --> 00:47:50,880
say it as<font color="#CCCCCC"> information security</font>

1030
00:47:48,150 --> 00:47:53,730
<font color="#CCCCCC">professionals we have</font><font color="#E5E5E5"> got to stop making</font>

1031
00:47:50,880 --> 00:47:57,240
<font color="#E5E5E5">people go</font><font color="#CCCCCC"> through the nine gates</font><font color="#E5E5E5"> of Hell</font>

1032
00:47:53,730 --> 00:48:00,480
<font color="#CCCCCC">to authenticate to VPN all right it's</font>

1033
00:47:57,240 --> 00:48:03,330
it's<font color="#E5E5E5"> not right and you know</font><font color="#CCCCCC"> security has</font>

1034
00:48:00,480 --> 00:48:05,040
to<font color="#E5E5E5"> be easy to use to be secure all right</font>

1035
00:48:03,330 --> 00:48:07,950
get out<font color="#CCCCCC"> of this you</font><font color="#E5E5E5"> know we need you</font><font color="#CCCCCC"> to</font>

1036
00:48:05,040 --> 00:48:09,690
hop<font color="#E5E5E5"> and</font><font color="#CCCCCC"> dance</font><font color="#E5E5E5"> in some ways</font><font color="#CCCCCC"> to take away</font>

1037
00:48:07,950 --> 00:48:12,830
was this was easier than it should be

1038
00:48:09,690 --> 00:48:15,180
there was no code obfuscation<font color="#CCCCCC"> all right</font>

1039
00:48:12,830 --> 00:48:16,890
<font color="#CCCCCC">there were plenty of sample tokens to</font>

1040
00:48:15,180 --> 00:48:19,680
<font color="#CCCCCC">play with</font><font color="#E5E5E5"> right a</font><font color="#CCCCCC"> Google image search</font>

1041
00:48:16,890 --> 00:48:22,410
for<font color="#CCCCCC"> vendor activation code and I got</font>

1042
00:48:19,680 --> 00:48:23,730
enough tokens<font color="#CCCCCC"> to play</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> I didn't</font>

1043
00:48:22,410 --> 00:48:26,910
actually code a whole lot<font color="#E5E5E5"> of this stuff</font>

1044
00:48:23,730 --> 00:48:29,730
up<font color="#E5E5E5"> the des function the OTP function the</font>

1045
00:48:26,910 --> 00:48:32,640
QR code generating function<font color="#E5E5E5"> even</font><font color="#CCCCCC"> the CSS</font>

1046
00:48:29,730 --> 00:48:34,650
file came from<font color="#E5E5E5"> the World Wide Web</font>

1047
00:48:32,640 --> 00:48:36,629
right so it's very easy<font color="#CCCCCC"> for me to</font><font color="#E5E5E5"> make</font>

1048
00:48:34,650 --> 00:48:38,670
this work and in some ways and honestly

1049
00:48:36,630 --> 00:48:40,829
in honesty I made<font color="#E5E5E5"> this harder for myself</font>

1050
00:48:38,670 --> 00:48:42,599
<font color="#CCCCCC">right so I</font>

1051
00:48:40,829 --> 00:48:46,049
used old tool sets that<font color="#CCCCCC"> I was familiar</font>

1052
00:48:42,599 --> 00:48:48,180
<font color="#CCCCCC">with at the time dad is like your</font>

1053
00:48:46,049 --> 00:48:50,489
father's decompiler okay because there's

1054
00:48:48,180 --> 00:48:52,078
<font color="#E5E5E5">Gen X now and it has a GUI</font><font color="#CCCCCC"> it let you</font>

1055
00:48:50,489 --> 00:48:55,380
see<font color="#CCCCCC"> all the</font><font color="#E5E5E5"> code at once it does a</font><font color="#CCCCCC"> much</font>

1056
00:48:52,079 --> 00:48:57,329
better job<font color="#CCCCCC"> I talked about the token</font>

1057
00:48:55,380 --> 00:49:00,630
drift even cyber chef is being

1058
00:48:57,329 --> 00:49:02,519
constantly<font color="#E5E5E5"> maintained</font><font color="#CCCCCC"> so you know you</font>

1059
00:49:00,630 --> 00:49:05,309
know<font color="#CCCCCC"> organized plan</font><font color="#E5E5E5"> upfront would be</font>

1060
00:49:02,519 --> 00:49:07,258
good<font color="#CCCCCC"> there's always a security trade-off</font>

1061
00:49:05,309 --> 00:49:11,489
right<font color="#CCCCCC"> a lot of people use the</font><font color="#E5E5E5"> time based</font>

1062
00:49:07,259 --> 00:49:13,259
<font color="#E5E5E5">tokens because your phone is NTP aware</font>

1063
00:49:11,489 --> 00:49:16,079
<font color="#CCCCCC">because</font><font color="#E5E5E5"> the telephone network requires</font>

1064
00:49:13,259 --> 00:49:17,999
it the<font color="#E5E5E5"> backend server is correctly timed</font>

1065
00:49:16,079 --> 00:49:19,859
because<font color="#E5E5E5"> they require it so it's very</font>

1066
00:49:17,999 --> 00:49:21,479
<font color="#CCCCCC">easy to</font><font color="#E5E5E5"> use time based tokens and you</font>

1067
00:49:19,859 --> 00:49:24,450
say<font color="#E5E5E5"> well only a fool would use a</font>

1068
00:49:21,479 --> 00:49:26,009
hardware counter<font color="#E5E5E5"> well maybe but you got</font>

1069
00:49:24,450 --> 00:49:28,890
to understand<font color="#E5E5E5"> is if you steal</font><font color="#CCCCCC"> a</font>

1070
00:49:26,009 --> 00:49:30,809
time-based<font color="#E5E5E5"> token the victim never has</font>

1071
00:49:28,890 --> 00:49:32,848
the opportunity<font color="#CCCCCC"> to learn that if</font><font color="#E5E5E5"> you</font>

1072
00:49:30,809 --> 00:49:34,920
steal a counter based token they may

1073
00:49:32,849 --> 00:49:36,930
cause the drift<font color="#CCCCCC"> so there is a plus and</font>

1074
00:49:34,920 --> 00:49:39,869
<font color="#CCCCCC">minus two different token types I think</font>

1075
00:49:36,930 --> 00:49:41,819
the last takeaway is activation codes or

1076
00:49:39,869 --> 00:49:44,849
secrets and they must<font color="#E5E5E5"> be treated as such</font>

1077
00:49:41,819 --> 00:49:47,569
just because quest defender says it's

1078
00:49:44,849 --> 00:49:50,160
<font color="#E5E5E5">only good</font><font color="#CCCCCC"> in Android and it's only good</font>

1079
00:49:47,569 --> 00:49:52,680
<font color="#E5E5E5">in our app and it can't be</font><font color="#CCCCCC"> used anywhere</font>

1080
00:49:50,160 --> 00:49:54,660
you might<font color="#E5E5E5"> have a researcher</font><font color="#CCCCCC"> who's</font><font color="#E5E5E5"> upset</font>

1081
00:49:52,680 --> 00:49:57,089
<font color="#E5E5E5">a bunch of poor usability and discovers</font>

1082
00:49:54,660 --> 00:49:59,069
<font color="#CCCCCC">that's not the case</font><font color="#E5E5E5"> so maybe you</font>

1083
00:49:57,089 --> 00:50:01,170
shouldn't email activation codes all

1084
00:49:59,069 --> 00:50:02,640
your employees<font color="#E5E5E5"> because then a breach of</font>

1085
00:50:01,170 --> 00:50:05,339
<font color="#E5E5E5">the email system</font><font color="#CCCCCC"> now breaches the</font>

1086
00:50:02,640 --> 00:50:07,609
multi-factor off last note I want<font color="#CCCCCC"> to</font>

1087
00:50:05,339 --> 00:50:11,099
<font color="#E5E5E5">make is about reverse engineering</font>

1088
00:50:07,609 --> 00:50:14,369
<font color="#E5E5E5">because we did kind</font><font color="#CCCCCC"> of peel away and</font>

1089
00:50:11,099 --> 00:50:16,289
look<font color="#E5E5E5"> inside of something</font><font color="#CCCCCC"> and I highly</font>

1090
00:50:14,369 --> 00:50:19,349
<font color="#E5E5E5">recommend</font><font color="#CCCCCC"> you know I'm a big</font><font color="#E5E5E5"> time</font>

1091
00:50:16,289 --> 00:50:21,839
supporter of the Electronic Frontier

1092
00:50:19,349 --> 00:50:24,150
<font color="#CCCCCC">Foundation</font><font color="#E5E5E5"> and they have a great website</font>

1093
00:50:21,839 --> 00:50:26,160
<font color="#CCCCCC">and a great</font><font color="#E5E5E5"> article about reverse</font>

1094
00:50:24,150 --> 00:50:29,849
<font color="#CCCCCC">engineering and</font><font color="#E5E5E5"> they also can make</font>

1095
00:50:26,160 --> 00:50:31,890
<font color="#E5E5E5">available legal advice and I had a great</font>

1096
00:50:29,849 --> 00:50:34,680
<font color="#CCCCCC">experience</font><font color="#E5E5E5"> with them in this</font><font color="#CCCCCC"> regard so I</font>

1097
00:50:31,890 --> 00:50:36,299
encourage everybody<font color="#E5E5E5"> before you go taking</font>

1098
00:50:34,680 --> 00:50:37,828
something apart<font color="#CCCCCC"> you may want</font><font color="#E5E5E5"> to</font>

1099
00:50:36,299 --> 00:50:41,759
understand what your<font color="#E5E5E5"> risks and</font>

1100
00:50:37,829 --> 00:50:43,529
liabilities<font color="#CCCCCC"> are and that's it and this</font>

1101
00:50:41,759 --> 00:50:45,539
is on github<font color="#CCCCCC"> so it's my first github</font>

1102
00:50:43,529 --> 00:50:47,819
public repo<font color="#E5E5E5"> where</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> wasn't trying to</font>

1103
00:50:45,539 --> 00:50:50,249
fix<font color="#E5E5E5"> somebody else and it's called open</font>

1104
00:50:47,819 --> 00:50:51,960
fender which was<font color="#E5E5E5"> probably a better</font>

1105
00:50:50,249 --> 00:51:01,290
cooler sounding name

1106
00:50:51,960 --> 00:51:13,770
the topic<font color="#E5E5E5"> and any questions no I'm sorry</font>

1107
00:51:01,290 --> 00:51:17,160
I should<font color="#E5E5E5"> have looked</font><font color="#CCCCCC"> yes that's a great</font>

1108
00:51:13,770 --> 00:51:20,210
<font color="#CCCCCC">question so the question was</font><font color="#E5E5E5"> just for</font>

1109
00:51:17,160 --> 00:51:22,618
the camera was when I was<font color="#E5E5E5"> doing the demo</font>

1110
00:51:20,210 --> 00:51:26,400
there wasn't actually<font color="#CCCCCC"> any reference to</font>

1111
00:51:22,619 --> 00:51:28,320
the<font color="#CCCCCC"> initialization vector I believe that</font>

1112
00:51:26,400 --> 00:51:33,690
there<font color="#CCCCCC"> is actually no</font><font color="#E5E5E5"> initialization</font>

1113
00:51:28,320 --> 00:51:37,290
vector it's just in cyber and cyber chef

1114
00:51:33,690 --> 00:51:39,540
<font color="#CCCCCC">if that value</font><font color="#E5E5E5"> does not exist</font><font color="#CCCCCC"> you get a</font>

1115
00:51:37,290 --> 00:51:41,460
different result than<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> then any</font>

1116
00:51:39,540 --> 00:51:43,140
value<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I could have put the letter Q</font>

1117
00:51:41,460 --> 00:51:46,830
in and I would have got the<font color="#CCCCCC"> right toko</font>

1118
00:51:43,140 --> 00:51:49,650
<font color="#CCCCCC">so don't really</font><font color="#E5E5E5"> know you know why but my</font>

1119
00:51:46,830 --> 00:51:52,200
<font color="#E5E5E5">get my belief is there's not an IV in</font>

1120
00:51:49,650 --> 00:51:54,780
the decrypt function it was<font color="#E5E5E5"> an artifact</font>

1121
00:51:52,200 --> 00:51:57,118
I had to<font color="#CCCCCC"> inject into</font><font color="#E5E5E5"> a nuance of cyber</font>

1122
00:51:54,780 --> 00:52:05,980
chef to<font color="#E5E5E5"> make it work great question and</font>

1123
00:51:57,119 --> 00:52:13,470
<font color="#E5E5E5">good pickup yes great</font>

1124
00:52:05,980 --> 00:52:13,470
any other questions<font color="#CCCCCC"> will you all oh yes</font>

1125
00:52:16,589 --> 00:52:23,259
I have no idea<font color="#CCCCCC"> they're entirely</font><font color="#E5E5E5"> welcome</font>

1126
00:52:21,730 --> 00:52:27,000
to run a Google<font color="#E5E5E5"> Alert</font><font color="#CCCCCC"> for their own</font>

1127
00:52:23,260 --> 00:52:27,000
company name find out

1128
00:52:27,540 --> 00:52:33,790
hence the conversation with other<font color="#E5E5E5"> people</font>

1129
00:52:30,760 --> 00:52:34,900
<font color="#E5E5E5">but but great not also</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> good question</font><font color="#CCCCCC"> I</font>

1130
00:52:33,790 --> 00:52:38,710
don't<font color="#CCCCCC"> know what their response would be</font>

1131
00:52:34,900 --> 00:52:41,230
<font color="#E5E5E5">we'll find out yep very</font><font color="#CCCCCC"> good</font>

1132
00:52:38,710 --> 00:52:43,510
<font color="#CCCCCC">alrighty</font><font color="#E5E5E5"> you all were a kind and</font>

1133
00:52:41,230 --> 00:52:46,510
gracious audience to host me<font color="#E5E5E5"> thank you</font>

1134
00:52:43,510 --> 00:52:48,190
<font color="#E5E5E5">so much</font><font color="#CCCCCC"> hope it comes</font><font color="#E5E5E5"> across</font><font color="#CCCCCC"> that I love</font>

1135
00:52:46,510 --> 00:52:49,930
this stuff and you know if<font color="#E5E5E5"> anybody</font>

1136
00:52:48,190 --> 00:52:51,700
wanted<font color="#E5E5E5"> to work on stuff together you</font>

1137
00:52:49,930 --> 00:52:55,129
know I would be more<font color="#CCCCCC"> than happy to do so</font>

1138
00:52:51,700 --> 00:52:59,968
<font color="#E5E5E5">and thank you all for</font><font color="#CCCCCC"> your support</font>

1139
00:52:55,130 --> 00:52:59,969
[Applause]

