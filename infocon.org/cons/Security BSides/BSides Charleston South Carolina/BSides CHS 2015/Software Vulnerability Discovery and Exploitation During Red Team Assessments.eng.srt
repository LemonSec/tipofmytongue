1
00:00:14,480 --> 00:00:19,250
<font color="#CCCCCC">alright so the title</font><font color="#E5E5E5"> of my</font><font color="#CCCCCC"> talk here</font><font color="#E5E5E5"> is</font>

2
00:00:17,600 --> 00:00:21,410
software vulnerability discovery and

3
00:00:19,250 --> 00:00:24,290
<font color="#E5E5E5">exploitation during Red Team assessments</font>

4
00:00:21,410 --> 00:00:26,450
<font color="#CCCCCC">I just kind of</font><font color="#E5E5E5"> realized that this is</font>

5
00:00:24,290 --> 00:00:28,700
actually<font color="#E5E5E5"> the</font><font color="#CCCCCC"> longest least sexy</font><font color="#E5E5E5"> name for</font>

6
00:00:26,450 --> 00:00:30,619
a<font color="#E5E5E5"> title ever so I'll have to bear</font><font color="#CCCCCC"> with</font>

7
00:00:28,700 --> 00:00:34,820
me<font color="#E5E5E5"> hopefully it'll</font><font color="#CCCCCC"> know please approve</font>

8
00:00:30,619 --> 00:00:36,829
<font color="#CCCCCC">me worth it see give a little</font><font color="#E5E5E5"> background</font>

9
00:00:34,820 --> 00:00:41,239
about<font color="#E5E5E5"> myself</font><font color="#CCCCCC"> I work here in Charleston</font>

10
00:00:36,829 --> 00:00:42,739
<font color="#E5E5E5">and I'm a Red Team operator our job is</font>

11
00:00:41,239 --> 00:00:45,230
<font color="#CCCCCC">pretty much to you know simulate</font>

12
00:00:42,739 --> 00:00:48,080
<font color="#E5E5E5">real-world act you</font><font color="#CCCCCC"> know attacks against</font>

13
00:00:45,230 --> 00:00:50,750
our<font color="#CCCCCC"> customers networks</font><font color="#E5E5E5"> so that</font><font color="#CCCCCC"> hopefully</font>

14
00:00:48,080 --> 00:00:52,040
we can find vulnerabilities<font color="#CCCCCC"> and tell</font>

15
00:00:50,750 --> 00:00:54,650
those<font color="#E5E5E5"> to our customers so that they can</font>

16
00:00:52,040 --> 00:00:56,930
patch these<font color="#E5E5E5"> I've been doing this</font>

17
00:00:54,650 --> 00:00:59,629
<font color="#E5E5E5">probably for about three</font><font color="#CCCCCC"> or four years</font>

18
00:00:56,930 --> 00:01:02,450
<font color="#E5E5E5">now so our job continues to get a whole</font>

19
00:00:59,630 --> 00:01:03,770
<font color="#E5E5E5">lot harder as our defenders our blue</font>

20
00:01:02,450 --> 00:01:06,140
team<font color="#E5E5E5"> is getting</font><font color="#CCCCCC"> a whole lot better</font>

21
00:01:03,770 --> 00:01:09,829
because<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that we started</font><font color="#CCCCCC"> looking to</font>

22
00:01:06,140 --> 00:01:12,290
<font color="#E5E5E5">other possible ways that</font><font color="#CCCCCC"> we can have</font>

23
00:01:09,829 --> 00:01:15,350
<font color="#CCCCCC">success on</font><font color="#E5E5E5"> our team and actually be able</font>

24
00:01:12,290 --> 00:01:17,390
<font color="#E5E5E5">to find some of</font><font color="#CCCCCC"> the harder avenues that</font>

25
00:01:15,350 --> 00:01:19,600
maybe some of<font color="#CCCCCC"> the more advanced</font>

26
00:01:17,390 --> 00:01:21,649
attackers are starting to use nowadays

27
00:01:19,600 --> 00:01:23,359
<font color="#E5E5E5">and one of these areas that I've been</font>

28
00:01:21,649 --> 00:01:26,210
<font color="#E5E5E5">looking into</font><font color="#CCCCCC"> a lot now is actually</font>

29
00:01:23,359 --> 00:01:28,130
vulnerability research so we're you<font color="#E5E5E5"> know</font>

30
00:01:26,210 --> 00:01:31,038
looking<font color="#CCCCCC"> for actual bugs in some of the</font>

31
00:01:28,130 --> 00:01:33,259
software<font color="#E5E5E5"> running on the systems that</font>

32
00:01:31,039 --> 00:01:35,380
we're<font color="#CCCCCC"> running across and one of the main</font>

33
00:01:33,259 --> 00:01:37,670
reasons we're doing<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> because a</font>

34
00:01:35,380 --> 00:01:41,208
lot<font color="#CCCCCC"> of our assessments</font><font color="#E5E5E5"> are actually a</font>

35
00:01:37,670 --> 00:01:43,789
long-term persistent<font color="#CCCCCC"> red team</font>

36
00:01:41,209 --> 00:01:45,950
<font color="#E5E5E5">assessments so we might actually have</font>

37
00:01:43,789 --> 00:01:48,770
you know<font color="#E5E5E5"> access inside a network</font>

38
00:01:45,950 --> 00:01:50,779
<font color="#E5E5E5">anywhere from</font><font color="#CCCCCC"> six months to a year</font><font color="#E5E5E5"> and</font>

39
00:01:48,770 --> 00:01:52,579
once we're inside<font color="#E5E5E5"> the reason we're</font><font color="#CCCCCC"> in</font>

40
00:01:50,779 --> 00:01:54,979
there is we're also trying to test them

41
00:01:52,579 --> 00:01:58,609
for you know your internal

42
00:01:54,979 --> 00:01:59,869
vulnerabilities and so we usually<font color="#CCCCCC"> have</font>

43
00:01:58,609 --> 00:02:03,139
to<font color="#E5E5E5"> set</font><font color="#CCCCCC"> up persistence instead the</font>

44
00:01:59,869 --> 00:02:04,819
network and then our biggest goal<font color="#E5E5E5"> next</font>

45
00:02:03,139 --> 00:02:07,039
<font color="#E5E5E5">is usually try to move laterally</font>

46
00:02:04,819 --> 00:02:08,509
throughout the<font color="#CCCCCC"> network unless</font><font color="#E5E5E5"> so that's</font>

47
00:02:07,039 --> 00:02:10,550
kind of<font color="#E5E5E5"> where this all comes</font><font color="#CCCCCC"> into is</font>

48
00:02:08,508 --> 00:02:12,799
we're starting to look for<font color="#E5E5E5"> services and</font>

49
00:02:10,550 --> 00:02:14,240
<font color="#E5E5E5">these types of things that might have</font>

50
00:02:12,800 --> 00:02:17,500
<font color="#CCCCCC">vulnerabilities that</font><font color="#E5E5E5"> we could use to</font>

51
00:02:14,240 --> 00:02:17,500
<font color="#E5E5E5">propagate throughout the network</font>

52
00:02:18,850 --> 00:02:25,310
<font color="#E5E5E5">all right so I guess the the</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> to</font>

53
00:02:22,760 --> 00:02:28,130
start on<font color="#E5E5E5"> this is kind of I</font><font color="#CCCCCC"> just want to</font>

54
00:02:25,310 --> 00:02:29,990
present<font color="#E5E5E5"> just a lot of</font><font color="#CCCCCC"> the tools</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> the</font>

55
00:02:28,130 --> 00:02:33,380
ways that we start<font color="#E5E5E5"> looking</font><font color="#CCCCCC"> for these</font>

56
00:02:29,990 --> 00:02:35,930
targets<font color="#E5E5E5"> and</font><font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> these you guys are</font>

57
00:02:33,380 --> 00:02:37,100
<font color="#CCCCCC">probably pretty</font><font color="#E5E5E5"> used to and so a lot of</font>

58
00:02:35,930 --> 00:02:38,600
<font color="#E5E5E5">this talk</font><font color="#CCCCCC"> is really</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> going to be</font>

59
00:02:37,100 --> 00:02:40,970
collecting those all together<font color="#E5E5E5"> so that</font>

60
00:02:38,600 --> 00:02:44,420
you can package it up<font color="#E5E5E5"> and kind</font><font color="#CCCCCC"> of have a</font>

61
00:02:40,970 --> 00:02:46,850
process our first step<font color="#CCCCCC"> typically when we</font>

62
00:02:44,420 --> 00:02:48,559
get on<font color="#E5E5E5"> the box the first thing we want</font>

63
00:02:46,850 --> 00:02:50,840
to do if<font color="#E5E5E5"> we were looking for remote</font>

64
00:02:48,560 --> 00:02:52,640
<font color="#E5E5E5">access opportunities is first thing we</font>

65
00:02:50,840 --> 00:02:54,260
do is we run that<font color="#CCCCCC"> netstat if it's a</font>

66
00:02:52,640 --> 00:02:57,529
Windows box<font color="#E5E5E5"> and we start identifying</font>

67
00:02:54,260 --> 00:03:00,679
what sockets are open what processes

68
00:02:57,530 --> 00:03:02,810
those are running on those sockets<font color="#E5E5E5"> as</font>

69
00:03:00,680 --> 00:03:05,150
you can see from<font color="#CCCCCC"> our example here</font><font color="#E5E5E5"> this</font>

70
00:03:02,810 --> 00:03:07,190
<font color="#E5E5E5">is just a you</font><font color="#CCCCCC"> know quick example</font><font color="#E5E5E5"> we'll</font>

71
00:03:05,150 --> 00:03:09,110
see<font color="#E5E5E5"> if something's</font><font color="#CCCCCC"> running on port</font><font color="#E5E5E5"> 902</font>

72
00:03:07,190 --> 00:03:12,230
<font color="#E5E5E5">and we see that that's processed</font>

73
00:03:09,110 --> 00:03:13,430
23:52 from this point we<font color="#E5E5E5"> probably won't</font>

74
00:03:12,230 --> 00:03:15,709
identify<font color="#CCCCCC"> okay well what</font><font color="#E5E5E5"> does that</font>

75
00:03:13,430 --> 00:03:17,480
<font color="#CCCCCC">process what is that process where is it</font>

76
00:03:15,709 --> 00:03:20,870
so<font color="#E5E5E5"> I can identify what the application</font>

77
00:03:17,480 --> 00:03:23,268
is well your next<font color="#E5E5E5"> step in</font><font color="#CCCCCC"> that one just</font>

78
00:03:20,870 --> 00:03:25,340
to be run task list<font color="#CCCCCC"> we passed it in that</font>

79
00:03:23,269 --> 00:03:33,080
process<font color="#E5E5E5"> ID and we can see from this</font>

80
00:03:25,340 --> 00:03:34,970
<font color="#CCCCCC">example that</font><font color="#E5E5E5"> that's actually VMware the</font>

81
00:03:33,080 --> 00:03:37,880
same process applies the Linux<font color="#E5E5E5"> is just a</font>

82
00:03:34,970 --> 00:03:39,380
little bit different commands<font color="#CCCCCC"> net stats</font>

83
00:03:37,880 --> 00:03:42,380
the same but then once<font color="#E5E5E5"> you figure out</font>

84
00:03:39,380 --> 00:03:44,540
that<font color="#CCCCCC"> process ID you move on and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> just</font>

85
00:03:42,380 --> 00:03:47,150
search<font color="#E5E5E5"> your process list</font><font color="#CCCCCC"> and grab for</font>

86
00:03:44,540 --> 00:03:48,440
<font color="#CCCCCC">that process</font><font color="#E5E5E5"> this particular example we</font>

87
00:03:47,150 --> 00:03:50,720
were just on<font color="#CCCCCC"> Callie and we had a</font>

88
00:03:48,440 --> 00:03:51,890
listener running and it so<font color="#E5E5E5"> it shows us</font>

89
00:03:50,720 --> 00:03:54,190
that that<font color="#E5E5E5"> was actually</font><font color="#CCCCCC"> Metasploit</font>

90
00:03:51,890 --> 00:03:54,190
running

91
00:03:56,770 --> 00:04:01,090
once you've<font color="#CCCCCC"> identified that</font><font color="#E5E5E5"> application</font>

92
00:03:59,140 --> 00:04:03,070
and<font color="#CCCCCC"> you've found it on the</font><font color="#E5E5E5"> system keep</font>

93
00:04:01,090 --> 00:04:04,390
in mind like<font color="#E5E5E5"> I said this is assuming</font>

94
00:04:03,070 --> 00:04:06,370
<font color="#E5E5E5">that you're already on a system you've</font>

95
00:04:04,390 --> 00:04:09,130
compromised<font color="#CCCCCC"> so more</font><font color="#E5E5E5"> than</font><font color="#CCCCCC"> likely you're</font>

96
00:04:06,370 --> 00:04:13,960
<font color="#E5E5E5">gonna have a rat or some kind of way</font>

97
00:04:09,130 --> 00:04:16,060
into that<font color="#CCCCCC"> network so so once it's a</font><font color="#E5E5E5"> look</font>

98
00:04:13,960 --> 00:04:17,470
like I<font color="#E5E5E5"> was saying originally you're</font>

99
00:04:16,060 --> 00:04:18,970
gonna<font color="#E5E5E5"> get that binary you're gonna</font>

100
00:04:17,470 --> 00:04:20,530
download it<font color="#E5E5E5"> back to your system and</font>

101
00:04:18,970 --> 00:04:23,560
you're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> start doing</font><font color="#CCCCCC"> analysis on</font>

102
00:04:20,529 --> 00:04:25,330
<font color="#E5E5E5">that application and some of your</font>

103
00:04:23,560 --> 00:04:27,310
<font color="#CCCCCC">typical tools</font><font color="#E5E5E5"> that you can use or for</font>

104
00:04:25,330 --> 00:04:30,280
<font color="#E5E5E5">your reverse engineering would</font><font color="#CCCCCC"> be idea</font>

105
00:04:27,310 --> 00:04:32,380
<font color="#E5E5E5">ID a pro or hex raise for those of you</font>

106
00:04:30,280 --> 00:04:35,080
<font color="#E5E5E5">that have you know</font><font color="#CCCCCC"> mac bot boxes or</font>

107
00:04:32,380 --> 00:04:36,610
<font color="#E5E5E5">Linux you can</font><font color="#CCCCCC"> use hopper pretty much</font>

108
00:04:35,080 --> 00:04:37,690
open that up<font color="#E5E5E5"> and from this point you</font>

109
00:04:36,610 --> 00:04:39,850
<font color="#CCCCCC">would actually</font><font color="#E5E5E5"> start</font><font color="#CCCCCC"> doing your stack</font>

110
00:04:37,690 --> 00:04:41,890
analysis looking<font color="#E5E5E5"> for these entry points</font>

111
00:04:39,850 --> 00:04:43,360
for<font color="#CCCCCC"> where</font><font color="#E5E5E5"> that data is coming in so you</font>

112
00:04:41,890 --> 00:04:49,659
can start<font color="#E5E5E5"> trying to trace through the</font>

113
00:04:43,360 --> 00:04:51,880
code when<font color="#CCCCCC"> you start</font><font color="#E5E5E5"> that process like I</font>

114
00:04:49,660 --> 00:04:53,200
said<font color="#CCCCCC"> a lot of the</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> ways you're the</font>

115
00:04:51,880 --> 00:04:55,510
places you're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> want to look is</font>

116
00:04:53,200 --> 00:04:57,310
where that input<font color="#E5E5E5"> comes in some of those</font>

117
00:04:55,510 --> 00:04:59,409
<font color="#CCCCCC">examples would</font><font color="#E5E5E5"> be you know command line</font>

118
00:04:57,310 --> 00:05:01,620
parameters<font color="#E5E5E5"> your sockets as we mentioned</font>

119
00:04:59,410 --> 00:05:05,200
before<font color="#E5E5E5"> any kind of file reads</font>

120
00:05:01,620 --> 00:05:06,910
environmental variables some of those

121
00:05:05,200 --> 00:05:09,070
those functions that<font color="#E5E5E5"> do that kind</font><font color="#CCCCCC"> of</font>

122
00:05:06,910 --> 00:05:11,620
thing that<font color="#CCCCCC"> kind of stand</font><font color="#E5E5E5"> out as you</font>

123
00:05:09,070 --> 00:05:16,150
probably have seen<font color="#CCCCCC"> things</font><font color="#E5E5E5"> like read gets</font>

124
00:05:11,620 --> 00:05:18,190
every and receive or see from from<font color="#E5E5E5"> here</font>

125
00:05:16,150 --> 00:05:20,049
<font color="#E5E5E5">this is a this is pretty much how it</font>

126
00:05:18,190 --> 00:05:21,820
comes in and at that<font color="#E5E5E5"> point you're gonna</font>

127
00:05:20,050 --> 00:05:23,980
move directly<font color="#E5E5E5"> after that because</font>

128
00:05:21,820 --> 00:05:25,599
typically once that<font color="#E5E5E5"> data gets in it</font>

129
00:05:23,980 --> 00:05:27,700
immediately starts getting processed<font color="#E5E5E5"> in</font>

130
00:05:25,600 --> 00:05:29,980
parsed and a lot<font color="#E5E5E5"> of times those bugs</font>

131
00:05:27,700 --> 00:05:31,780
that we end up finding<font color="#E5E5E5"> are right in</font>

132
00:05:29,980 --> 00:05:34,650
those parsing routines<font color="#E5E5E5"> pretty close to</font>

133
00:05:31,780 --> 00:05:34,650
<font color="#E5E5E5">where that data comes in</font>

134
00:05:37,410 --> 00:05:42,610
<font color="#E5E5E5">all right so as I mentioned the the</font>

135
00:05:40,780 --> 00:05:43,059
<font color="#CCCCCC">parsing</font><font color="#E5E5E5"> functions you typically come</font>

136
00:05:42,610 --> 00:05:46,120
next

137
00:05:43,060 --> 00:05:47,889
a lot of the vulnerable functions that

138
00:05:46,120 --> 00:05:50,410
you guys<font color="#E5E5E5"> probably heard</font><font color="#CCCCCC"> about before</font>

139
00:05:47,889 --> 00:05:52,479
<font color="#E5E5E5">when dealing with memory are some of</font>

140
00:05:50,410 --> 00:05:55,870
these<font color="#CCCCCC"> examples here</font><font color="#E5E5E5"> these are things to</font>

141
00:05:52,479 --> 00:05:57,190
<font color="#E5E5E5">kind of keep your eye out for if you</font>

142
00:05:55,870 --> 00:05:59,919
know you run across<font color="#E5E5E5"> these these are</font>

143
00:05:57,190 --> 00:06:01,810
definitely hot areas<font color="#E5E5E5"> to</font><font color="#CCCCCC"> just make</font><font color="#E5E5E5"> sure</font>

144
00:05:59,919 --> 00:06:04,299
<font color="#CCCCCC">that</font><font color="#E5E5E5"> whatever they're doing</font><font color="#CCCCCC"> with memory</font>

145
00:06:01,810 --> 00:06:05,680
using<font color="#E5E5E5"> these are secure because a lot of</font>

146
00:06:04,300 --> 00:06:07,150
<font color="#E5E5E5">times it's just not recommended to use</font>

147
00:06:05,680 --> 00:06:09,820
these so if you see them that's

148
00:06:07,150 --> 00:06:12,070
definitely something<font color="#E5E5E5"> to research further</font>

149
00:06:09,820 --> 00:06:13,900
<font color="#E5E5E5">make sure</font><font color="#CCCCCC"> especially</font><font color="#E5E5E5"> if you see anything</font>

150
00:06:12,070 --> 00:06:15,699
<font color="#E5E5E5">like custom memory operations and</font>

151
00:06:13,900 --> 00:06:17,530
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> written their own string copy or</font>

152
00:06:15,699 --> 00:06:18,550
their own<font color="#E5E5E5"> memory copy those are</font>

153
00:06:17,530 --> 00:06:19,900
<font color="#E5E5E5">definitely places you want to look</font>

154
00:06:18,550 --> 00:06:22,090
closer<font color="#E5E5E5"> to make sure they did everything</font>

155
00:06:19,900 --> 00:06:23,849
correctly<font color="#E5E5E5"> bounds checking all those</font>

156
00:06:22,090 --> 00:06:26,138
types of<font color="#E5E5E5"> things</font>

157
00:06:23,850 --> 00:06:28,630
another definitely good place<font color="#CCCCCC"> to look</font>

158
00:06:26,139 --> 00:06:30,910
<font color="#E5E5E5">when you see data being moved around</font><font color="#CCCCCC"> is</font>

159
00:06:28,630 --> 00:06:33,030
a lot of times when you have data<font color="#CCCCCC"> coming</font>

160
00:06:30,910 --> 00:06:36,550
in from<font color="#CCCCCC"> the outside a lot of those</font>

161
00:06:33,030 --> 00:06:38,979
<font color="#E5E5E5">protocols will allow you to specify</font>

162
00:06:36,550 --> 00:06:40,599
indexes into memory<font color="#E5E5E5"> so say you know this</font>

163
00:06:38,979 --> 00:06:41,949
<font color="#E5E5E5">is</font><font color="#CCCCCC"> my first record</font><font color="#E5E5E5"> this is my second</font>

164
00:06:40,599 --> 00:06:44,919
record<font color="#E5E5E5"> and a lot of people will actually</font>

165
00:06:41,949 --> 00:06:46,780
<font color="#E5E5E5">use those to directly memory access so</font>

166
00:06:44,919 --> 00:06:48,698
if you see any kind<font color="#E5E5E5"> of operations coming</font>

167
00:06:46,780 --> 00:06:50,770
in from the outside<font color="#E5E5E5"> and they're using</font>

168
00:06:48,699 --> 00:06:53,440
indexes and you control<font color="#E5E5E5"> that that's</font>

169
00:06:50,770 --> 00:06:59,139
always a very<font color="#E5E5E5"> interesting thing to</font><font color="#CCCCCC"> look</font>

170
00:06:53,440 --> 00:07:03,130
at<font color="#E5E5E5"> all right so once you've kind of</font><font color="#CCCCCC"> done</font>

171
00:06:59,139 --> 00:07:04,539
the<font color="#E5E5E5"> most static analysis you can you</font>

172
00:07:03,130 --> 00:07:07,690
typically want<font color="#CCCCCC"> to move forward</font><font color="#E5E5E5"> and get</font>

173
00:07:04,539 --> 00:07:10,449
into more<font color="#E5E5E5"> of a</font><font color="#CCCCCC"> dynamic analysis kind of</font>

174
00:07:07,690 --> 00:07:12,250
phase in order<font color="#CCCCCC"> to do that it takes a</font><font color="#E5E5E5"> lot</font>

175
00:07:10,449 --> 00:07:13,479
more time<font color="#CCCCCC"> stack</font><font color="#E5E5E5"> analysis is definitely</font>

176
00:07:12,250 --> 00:07:16,840
easier<font color="#E5E5E5"> because all you really</font><font color="#CCCCCC"> need is</font>

177
00:07:13,479 --> 00:07:18,520
<font color="#CCCCCC">the</font><font color="#E5E5E5"> binary with then I dynamic analysis</font>

178
00:07:16,840 --> 00:07:20,560
you<font color="#E5E5E5"> actually have to model your</font>

179
00:07:18,520 --> 00:07:23,020
environment<font color="#E5E5E5"> so you have to set</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> your</font>

180
00:07:20,560 --> 00:07:25,720
system<font color="#CCCCCC"> as closely as possible as the one</font>

181
00:07:23,020 --> 00:07:27,280
you found the<font color="#CCCCCC"> application on that means</font>

182
00:07:25,720 --> 00:07:30,580
getting<font color="#E5E5E5"> whatever libraries the needs</font>

183
00:07:27,280 --> 00:07:31,138
whatever files<font color="#CCCCCC"> did it might use for info</font>

184
00:07:30,580 --> 00:07:34,479
files

185
00:07:31,139 --> 00:07:36,039
registry<font color="#E5E5E5"> keys</font><font color="#CCCCCC"> is windows a lot</font><font color="#E5E5E5"> of those</font>

186
00:07:34,479 --> 00:07:38,139
fun things<font color="#CCCCCC"> to actually make this</font>

187
00:07:36,039 --> 00:07:40,210
<font color="#CCCCCC">application run if you were to just kick</font>

188
00:07:38,139 --> 00:07:43,120
it off

189
00:07:40,210 --> 00:07:45,190
luckily sysinternals<font color="#CCCCCC"> gives you tons of</font>

190
00:07:43,120 --> 00:07:47,590
<font color="#E5E5E5">tools that</font><font color="#CCCCCC"> actually help this out a lot</font>

191
00:07:45,190 --> 00:07:50,620
<font color="#E5E5E5">so once again if you're</font><font color="#CCCCCC"> on a system</font><font color="#E5E5E5"> that</font>

192
00:07:47,590 --> 00:07:51,909
you've compromised<font color="#E5E5E5"> and you're pretty far</font>

193
00:07:50,620 --> 00:07:53,320
under the<font color="#E5E5E5"> radar a lot of times you can</font>

194
00:07:51,910 --> 00:07:55,810
actually<font color="#E5E5E5"> put these tools on there and</font>

195
00:07:53,320 --> 00:07:59,909
<font color="#CCCCCC">actually find out</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> you need to</font>

196
00:07:55,810 --> 00:07:59,910
<font color="#CCCCCC">actually create</font><font color="#E5E5E5"> your modeled environment</font>

197
00:08:01,350 --> 00:08:07,660
another<font color="#E5E5E5"> option and this</font><font color="#CCCCCC"> usually</font><font color="#E5E5E5"> comes a</font>

198
00:08:04,900 --> 00:08:09,159
little<font color="#CCCCCC"> bit further</font><font color="#E5E5E5"> in your analysis but</font>

199
00:08:07,660 --> 00:08:11,320
if say you're<font color="#E5E5E5"> trying to run your</font>

200
00:08:09,160 --> 00:08:13,930
application<font color="#CCCCCC"> on your modeled environment</font>

201
00:08:11,320 --> 00:08:18,580
and for some reason or another it's just

202
00:08:13,930 --> 00:08:20,590
<font color="#CCCCCC">not working one</font><font color="#E5E5E5"> option you could have</font>

203
00:08:18,580 --> 00:08:23,320
and it's definitely<font color="#E5E5E5"> easier on things</font>

204
00:08:20,590 --> 00:08:25,150
like Linux because<font color="#CCCCCC"> GB comes packaged in</font>

205
00:08:23,320 --> 00:08:29,040
you can actually<font color="#E5E5E5"> attach yourself to</font>

206
00:08:25,150 --> 00:08:31,870
<font color="#E5E5E5">those processes and and dump that memory</font>

207
00:08:29,040 --> 00:08:33,669
at which point then you<font color="#E5E5E5"> can take that</font>

208
00:08:31,870 --> 00:08:35,650
<font color="#CCCCCC">dump and whatever you have in</font><font color="#E5E5E5"> your</font>

209
00:08:33,669 --> 00:08:39,848
<font color="#E5E5E5">modeled environment and you can</font><font color="#CCCCCC"> actually</font>

210
00:08:35,650 --> 00:08:41,588
<font color="#E5E5E5">analyze the</font><font color="#CCCCCC"> two and make sure that that</font>

211
00:08:39,849 --> 00:08:42,669
they're the same<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is this is</font>

212
00:08:41,589 --> 00:08:45,400
<font color="#E5E5E5">definitely one of those things where</font>

213
00:08:42,669 --> 00:08:47,560
I've run into<font color="#E5E5E5"> the problem where you have</font>

214
00:08:45,400 --> 00:08:49,480
one<font color="#E5E5E5"> that you you</font><font color="#CCCCCC"> feel like you've</font>

215
00:08:47,560 --> 00:08:51,130
modeled perfectly but for some reason or

216
00:08:49,480 --> 00:08:53,200
another<font color="#E5E5E5"> it just</font><font color="#CCCCCC"> won't run so</font><font color="#E5E5E5"> you can</font>

217
00:08:51,130 --> 00:08:55,390
dump<font color="#E5E5E5"> that memory analyze it</font><font color="#CCCCCC"> too and see</font>

218
00:08:53,200 --> 00:08:57,820
if you missed a library<font color="#E5E5E5"> if the memory</font>

219
00:08:55,390 --> 00:09:00,250
<font color="#E5E5E5">addresses are just slightly different or</font>

220
00:08:57,820 --> 00:09:01,480
something<font color="#CCCCCC"> like that another thing</font><font color="#E5E5E5"> that</font>

221
00:09:00,250 --> 00:09:04,360
<font color="#CCCCCC">you'll also notice when you're doing</font>

222
00:09:01,480 --> 00:09:05,800
this if you're on<font color="#CCCCCC"> a system</font><font color="#E5E5E5"> say it's a</font>

223
00:09:04,360 --> 00:09:09,610
secure<font color="#CCCCCC"> system you might actually see</font>

224
00:09:05,800 --> 00:09:11,170
other<font color="#CCCCCC"> HIDs application running</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> hvss</font>

225
00:09:09,610 --> 00:09:13,060
or<font color="#CCCCCC"> Emad or something like that</font><font color="#E5E5E5"> and</font>

226
00:09:11,170 --> 00:09:14,290
that's<font color="#E5E5E5"> a</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> to know</font><font color="#E5E5E5"> if once you</font>

227
00:09:13,060 --> 00:09:16,119
take this further and<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> actually</font>

228
00:09:14,290 --> 00:09:21,490
trying to<font color="#E5E5E5"> write an exploit or something</font>

229
00:09:16,120 --> 00:09:23,040
like<font color="#E5E5E5"> that so I guess once you get past</font>

230
00:09:21,490 --> 00:09:25,240
<font color="#CCCCCC">that point</font><font color="#E5E5E5"> let's say that you've already</font>

231
00:09:23,040 --> 00:09:26,709
<font color="#E5E5E5">found your bug you've already moved</font>

232
00:09:25,240 --> 00:09:29,110
forward and you've already written an

233
00:09:26,709 --> 00:09:30,670
exploit and once<font color="#CCCCCC"> again like I just</font>

234
00:09:29,110 --> 00:09:31,420
<font color="#E5E5E5">mentioned it it's not working</font><font color="#CCCCCC"> for some</font>

235
00:09:30,670 --> 00:09:34,050
reason<font color="#CCCCCC"> or</font><font color="#E5E5E5"> another</font>

236
00:09:31,420 --> 00:09:36,209
and say it's crashing

237
00:09:34,050 --> 00:09:39,359
so you've<font color="#CCCCCC"> you've</font><font color="#E5E5E5"> done</font><font color="#CCCCCC"> your memory dumb</font>

238
00:09:36,209 --> 00:09:40,979
<font color="#E5E5E5">and</font><font color="#CCCCCC"> you still can't figure</font><font color="#E5E5E5"> it out</font><font color="#CCCCCC"> if</font>

239
00:09:39,360 --> 00:09:42,809
you're<font color="#E5E5E5"> on Windows you're on Linux there</font>

240
00:09:40,980 --> 00:09:45,600
are<font color="#E5E5E5"> actually a</font><font color="#CCCCCC"> abilities to</font><font color="#E5E5E5"> actually</font>

241
00:09:42,809 --> 00:09:48,300
turn<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> collection of memory and</font>

242
00:09:45,600 --> 00:09:49,619
dumps from<font color="#E5E5E5"> a crash and you can</font><font color="#CCCCCC"> actually</font>

243
00:09:48,300 --> 00:09:51,599
<font color="#E5E5E5">bring those back and analyze those</font>

244
00:09:49,619 --> 00:09:53,279
further<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> see in</font><font color="#CCCCCC"> Windows it's just</font>

245
00:09:51,600 --> 00:09:55,860
a simple registry key<font color="#CCCCCC"> if you have the</font>

246
00:09:53,279 --> 00:09:58,199
<font color="#E5E5E5">ability to write to the registry</font><font color="#CCCCCC"> Linux</font>

247
00:09:55,860 --> 00:10:00,389
<font color="#E5E5E5">same idea it's just</font><font color="#CCCCCC"> quick command and</font>

248
00:09:58,199 --> 00:10:02,699
then those will<font color="#CCCCCC"> dump your course and you</font>

249
00:10:00,389 --> 00:10:05,119
can<font color="#E5E5E5"> bring them</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> in gdb and</font><font color="#CCCCCC"> see what</font>

250
00:10:02,699 --> 00:10:05,118
might have<font color="#CCCCCC"> gone wrong</font>

251
00:10:07,900 --> 00:10:12,860
<font color="#E5E5E5">all right from here</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of move into</font>

252
00:10:10,130 --> 00:10:14,120
<font color="#E5E5E5">a case study is something that we found</font>

253
00:10:12,860 --> 00:10:18,560
when we<font color="#E5E5E5"> were doing one of our red team</font>

254
00:10:14,120 --> 00:10:19,670
assessments on a system and we went

255
00:10:18,560 --> 00:10:21,319
through<font color="#E5E5E5"> the same process that</font><font color="#CCCCCC"> I just</font>

256
00:10:19,670 --> 00:10:23,120
<font color="#E5E5E5">described and</font><font color="#CCCCCC"> I kind of want to show you</font>

257
00:10:21,320 --> 00:10:26,540
what<font color="#E5E5E5"> this might look</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> and you know</font>

258
00:10:23,120 --> 00:10:28,460
real world<font color="#E5E5E5"> environment this particular</font>

259
00:10:26,540 --> 00:10:30,920
<font color="#E5E5E5">application is called medicine serve</font>

260
00:10:28,460 --> 00:10:34,310
it's a medical application<font color="#CCCCCC"> you can</font>

261
00:10:30,920 --> 00:10:38,120
<font color="#CCCCCC">actually get on the internet</font><font color="#E5E5E5"> a lot of</font>

262
00:10:34,310 --> 00:10:41,719
EMR systems use it for storing medical

263
00:10:38,120 --> 00:10:43,490
data and<font color="#E5E5E5"> these types of things</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so</font>

264
00:10:41,720 --> 00:10:44,630
when we<font color="#E5E5E5"> found it we found it running we</font>

265
00:10:43,490 --> 00:10:48,200
thought this<font color="#E5E5E5"> might</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> a pretty good</font>

266
00:10:44,630 --> 00:10:50,210
<font color="#E5E5E5">target to start looking at as you see we</font>

267
00:10:48,200 --> 00:10:52,300
started<font color="#E5E5E5"> on the same process as I</font>

268
00:10:50,210 --> 00:10:54,590
originally<font color="#CCCCCC"> said where we ran</font><font color="#E5E5E5"> that stat</font>

269
00:10:52,300 --> 00:10:57,020
<font color="#E5E5E5">we found that it was running on port</font>

270
00:10:54,590 --> 00:11:02,810
8080<font color="#CCCCCC"> we saw the process it</font><font color="#E5E5E5"> was running</font>

271
00:10:57,020 --> 00:11:04,670
<font color="#E5E5E5">and kind of went from there once we saw</font>

272
00:11:02,810 --> 00:11:07,040
like I said what the<font color="#E5E5E5"> the process ID was</font>

273
00:11:04,670 --> 00:11:09,469
we<font color="#CCCCCC"> identified it as</font><font color="#E5E5E5"> the med serve a</font>

274
00:11:07,040 --> 00:11:12,860
plication we saw was running<font color="#CCCCCC"> as a</font>

275
00:11:09,470 --> 00:11:14,500
service so our<font color="#E5E5E5"> next step was</font><font color="#CCCCCC"> to try to</font>

276
00:11:12,860 --> 00:11:18,920
<font color="#E5E5E5">figure out where on this system</font><font color="#CCCCCC"> it was</font>

277
00:11:14,500 --> 00:11:20,930
so we're in SC query which actually will

278
00:11:18,920 --> 00:11:23,209
list you know<font color="#CCCCCC"> information about any kind</font>

279
00:11:20,930 --> 00:11:25,420
<font color="#E5E5E5">of services running on</font><font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> we were</font>

280
00:11:23,210 --> 00:11:27,680
able<font color="#E5E5E5"> to figure</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> where it was on disk</font>

281
00:11:25,420 --> 00:11:31,000
<font color="#E5E5E5">tracked it down and we're able to</font>

282
00:11:27,680 --> 00:11:31,000
download<font color="#CCCCCC"> it and</font><font color="#E5E5E5"> bring</font><font color="#CCCCCC"> it back</font>

283
00:11:33,610 --> 00:11:38,270
<font color="#E5E5E5">all right so once we brought it back we</font>

284
00:11:36,050 --> 00:11:40,490
opened it up into<font color="#E5E5E5"> I do a pro which is</font>

285
00:11:38,270 --> 00:11:41,930
<font color="#E5E5E5">one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> our favorite dissemblers we were</font>

286
00:11:40,490 --> 00:11:44,360
<font color="#E5E5E5">lucky enough to</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> have hex</font><font color="#CCCCCC"> race</font>

287
00:11:41,930 --> 00:11:47,630
decompiler<font color="#E5E5E5"> so it makes the code look</font>

288
00:11:44,360 --> 00:11:50,390
pretty much like<font color="#E5E5E5"> C allows you to you</font>

289
00:11:47,630 --> 00:11:52,370
know pretty<font color="#E5E5E5"> much</font><font color="#CCCCCC"> risking all of your</font>

290
00:11:50,390 --> 00:11:54,470
<font color="#E5E5E5">variables to what you think</font><font color="#CCCCCC"> they are</font>

291
00:11:52,370 --> 00:11:56,150
doing<font color="#E5E5E5"> so by the time you get done</font>

292
00:11:54,470 --> 00:11:57,320
it looks really<font color="#E5E5E5"> close to probably what</font>

293
00:11:56,150 --> 00:12:00,589
the code<font color="#CCCCCC"> looked</font><font color="#E5E5E5"> like when they first</font>

294
00:11:57,320 --> 00:12:02,120
<font color="#E5E5E5">wrote in as I mentioned</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> very first</font>

295
00:12:00,589 --> 00:12:04,130
thing I did<font color="#CCCCCC"> since I saw that it</font><font color="#E5E5E5"> was</font>

296
00:12:02,120 --> 00:12:06,620
running<font color="#E5E5E5"> on port 8080</font><font color="#CCCCCC"> I knew that it was</font>

297
00:12:04,130 --> 00:12:08,600
<font color="#E5E5E5">listening in on some sockets</font><font color="#CCCCCC"> so I</font><font color="#E5E5E5"> looked</font>

298
00:12:06,620 --> 00:12:09,740
<font color="#E5E5E5">for any receive functions and I was</font>

299
00:12:08,600 --> 00:12:13,190
<font color="#E5E5E5">lucky enough to</font><font color="#CCCCCC"> find</font><font color="#E5E5E5"> that there are only</font>

300
00:12:09,740 --> 00:12:16,310
<font color="#E5E5E5">two so</font><font color="#CCCCCC"> all data</font><font color="#E5E5E5"> coming in</font><font color="#CCCCCC"> was coming in</font>

301
00:12:13,190 --> 00:12:17,990
<font color="#E5E5E5">through this one function</font><font color="#CCCCCC"> and then it</font>

302
00:12:16,310 --> 00:12:20,540
was probably<font color="#CCCCCC"> being processed immediately</font>

303
00:12:17,990 --> 00:12:22,190
<font color="#CCCCCC">after so as you can</font><font color="#E5E5E5"> see it pretty much</font>

304
00:12:20,540 --> 00:12:26,719
takes<font color="#E5E5E5"> in a header and then after I took</font>

305
00:12:22,190 --> 00:12:29,870
<font color="#E5E5E5">in</font><font color="#CCCCCC"> the header took in the data going</font>

306
00:12:26,720 --> 00:12:31,460
<font color="#E5E5E5">from here we assumed once again that the</font>

307
00:12:29,870 --> 00:12:33,500
function calling<font color="#E5E5E5"> this we were hoping</font>

308
00:12:31,460 --> 00:12:37,640
<font color="#CCCCCC">that immediately after ours</font><font color="#E5E5E5"> it would</font>

309
00:12:33,500 --> 00:12:39,339
probably process that data<font color="#CCCCCC"> and we got</font>

310
00:12:37,640 --> 00:12:41,750
<font color="#E5E5E5">lucky and</font><font color="#CCCCCC"> that was exactly</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> was</font>

311
00:12:39,339 --> 00:12:44,060
so<font color="#E5E5E5"> pretty much it took in the data and</font>

312
00:12:41,750 --> 00:12:46,040
then<font color="#CCCCCC"> immediately took one field</font><font color="#E5E5E5"> out of</font>

313
00:12:44,060 --> 00:12:49,279
that data which we assumed was<font color="#E5E5E5"> the</font>

314
00:12:46,040 --> 00:12:51,050
command ID<font color="#E5E5E5"> and began switching over all</font>

315
00:12:49,279 --> 00:12:54,560
the<font color="#E5E5E5"> different types of commands and</font>

316
00:12:51,050 --> 00:12:55,819
processing them<font color="#E5E5E5"> accordingly so when we</font>

317
00:12:54,560 --> 00:12:58,160
were looking<font color="#CCCCCC"> at us code as you see here</font>

318
00:12:55,820 --> 00:12:59,930
was literally like<font color="#CCCCCC"> 300 different</font>

319
00:12:58,160 --> 00:13:02,300
<font color="#E5E5E5">commands and then just how they were</font>

320
00:12:59,930 --> 00:13:03,620
<font color="#CCCCCC">processing</font><font color="#E5E5E5"> them unfortunately at this</font>

321
00:13:02,300 --> 00:13:05,990
point<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> where it gets really</font>

322
00:13:03,620 --> 00:13:07,790
<font color="#E5E5E5">tedious</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> we now had 300 commands</font>

323
00:13:05,990 --> 00:13:09,770
<font color="#E5E5E5">and we didn't know which ones could be</font>

324
00:13:07,790 --> 00:13:14,900
<font color="#E5E5E5">good bad or indifferent which ones might</font>

325
00:13:09,770 --> 00:13:16,400
have<font color="#E5E5E5"> bugs which ones might not so pretty</font>

326
00:13:14,900 --> 00:13:18,439
<font color="#E5E5E5">much at this</font><font color="#CCCCCC"> point there was a lot of</font>

327
00:13:16,400 --> 00:13:21,319
reversing<font color="#E5E5E5"> there was a lot</font><font color="#CCCCCC"> of just</font>

328
00:13:18,440 --> 00:13:22,430
fuzzing just seeing<font color="#CCCCCC"> okay maybe we can</font>

329
00:13:21,320 --> 00:13:24,110
pick<font color="#E5E5E5"> the needle out of the haystack</font>

330
00:13:22,430 --> 00:13:25,609
<font color="#E5E5E5">because we didn't want to actually have</font>

331
00:13:24,110 --> 00:13:26,560
<font color="#E5E5E5">to go through every</font><font color="#CCCCCC"> single one of these</font>

332
00:13:25,610 --> 00:13:28,269
<font color="#E5E5E5">functions</font>

333
00:13:26,560 --> 00:13:29,619
because we were hoping to have<font color="#CCCCCC"> a pretty</font>

334
00:13:28,269 --> 00:13:34,149
quick<font color="#E5E5E5"> turnaround so we can actually use</font>

335
00:13:29,620 --> 00:13:36,730
<font color="#CCCCCC">this in our assessments so much</font>

336
00:13:34,149 --> 00:13:39,370
reversing later we came across this one

337
00:13:36,730 --> 00:13:42,759
<font color="#CCCCCC">function</font><font color="#E5E5E5"> it was</font><font color="#CCCCCC"> a message type it was</font>

338
00:13:39,370 --> 00:13:45,459
like<font color="#E5E5E5"> 239 something like that</font><font color="#CCCCCC"> and it took</font>

339
00:13:42,759 --> 00:13:47,980
<font color="#E5E5E5">in our data and as you might be able</font>

340
00:13:45,459 --> 00:13:50,170
tell here we had a location<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> the</font>

341
00:13:47,980 --> 00:13:54,040
<font color="#E5E5E5">stack</font><font color="#CCCCCC"> that was expecting</font><font color="#E5E5E5"> a hundred</font>

342
00:13:50,170 --> 00:13:56,199
integers<font color="#CCCCCC"> at which point it</font><font color="#E5E5E5"> would go</font>

343
00:13:54,040 --> 00:13:58,540
through<font color="#E5E5E5"> the data that</font><font color="#CCCCCC"> came in and it was</font>

344
00:13:56,199 --> 00:14:02,349
assuming that<font color="#CCCCCC"> data</font><font color="#E5E5E5"> that we gave it was</font>

345
00:13:58,540 --> 00:14:05,349
literally<font color="#E5E5E5"> an array of integers followed</font>

346
00:14:02,350 --> 00:14:07,749
by commas<font color="#CCCCCC"> we don't actually know what</font>

347
00:14:05,350 --> 00:14:09,879
they were<font color="#E5E5E5"> doing with it at our point it</font>

348
00:14:07,749 --> 00:14:11,829
<font color="#E5E5E5">really doesn't matter</font><font color="#CCCCCC"> to us the big</font>

349
00:14:09,879 --> 00:14:13,870
thing that stood out<font color="#E5E5E5"> to</font><font color="#CCCCCC"> us was in our</font>

350
00:14:11,829 --> 00:14:16,180
loop right here<font color="#CCCCCC"> we have absolutely no</font>

351
00:14:13,870 --> 00:14:19,540
bounds checking so<font color="#CCCCCC"> we know it's taking</font>

352
00:14:16,180 --> 00:14:21,339
100 integers and the way that it<font color="#E5E5E5"> breaks</font>

353
00:14:19,540 --> 00:14:23,230
out<font color="#CCCCCC"> of this loop is</font><font color="#E5E5E5"> basically when it</font>

354
00:14:21,339 --> 00:14:24,610
<font color="#E5E5E5">gets to the end of our array which is</font>

355
00:14:23,230 --> 00:14:28,209
absolutely<font color="#E5E5E5"> horrible</font>

356
00:14:24,610 --> 00:14:30,550
so from here<font color="#E5E5E5"> anything</font><font color="#CCCCCC"> over 100 integers</font>

357
00:14:28,209 --> 00:14:32,529
<font color="#E5E5E5">it's going to override our stack and we</font>

358
00:14:30,550 --> 00:14:33,699
could<font color="#CCCCCC"> immediately gain control of</font><font color="#E5E5E5"> this</font>

359
00:14:32,529 --> 00:14:36,629
application<font color="#CCCCCC"> at least this was our</font>

360
00:14:33,699 --> 00:14:36,628
assumption at this point

361
00:14:39,000 --> 00:14:44,160
<font color="#CCCCCC">all right so going forward</font><font color="#E5E5E5"> now we think</font>

362
00:14:41,160 --> 00:14:46,770
<font color="#CCCCCC">we found a</font><font color="#E5E5E5"> button so we've done our</font><font color="#CCCCCC"> sac</font>

363
00:14:44,160 --> 00:14:47,910
analysis we want<font color="#CCCCCC"> to verify</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this</font>

364
00:14:46,770 --> 00:14:49,980
is kind of where you step<font color="#E5E5E5"> into your</font>

365
00:14:47,910 --> 00:14:51,689
<font color="#E5E5E5">dynamic analysis</font><font color="#CCCCCC"> it's like can</font><font color="#E5E5E5"> I</font>

366
00:14:49,980 --> 00:14:55,020
<font color="#CCCCCC">actually validate that'll I think I saw</font>

367
00:14:51,690 --> 00:14:56,160
<font color="#E5E5E5">is actually real so this is where we</font>

368
00:14:55,020 --> 00:14:58,260
were started<font color="#CCCCCC"> bringing</font><font color="#E5E5E5"> up the tools that</font>

369
00:14:56,160 --> 00:14:59,699
<font color="#E5E5E5">I mentioned</font><font color="#CCCCCC"> earlier for</font><font color="#E5E5E5"> dynamic analysis</font>

370
00:14:58,260 --> 00:15:02,100
to start identifying<font color="#E5E5E5"> what like what</font>

371
00:14:59,700 --> 00:15:04,260
files that application needs what

372
00:15:02,100 --> 00:15:07,860
library needs<font color="#E5E5E5"> so that I can</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> run</font>

373
00:15:04,260 --> 00:15:09,750
this on<font color="#E5E5E5"> my virtual environment first</font>

374
00:15:07,860 --> 00:15:11,130
thing we did was<font color="#E5E5E5"> run</font><font color="#CCCCCC"> lists dll's that</font>

375
00:15:09,750 --> 00:15:13,800
should show us any<font color="#E5E5E5"> kind of libraries</font>

376
00:15:11,130 --> 00:15:15,960
<font color="#E5E5E5">that it needs to</font><font color="#CCCCCC"> run as you can tell</font>

377
00:15:13,800 --> 00:15:18,329
there was absolutely nothing proprietary

378
00:15:15,960 --> 00:15:20,040
<font color="#E5E5E5">all the other libraries that used for</font>

379
00:15:18,330 --> 00:15:25,490
<font color="#CCCCCC">Windows libraries so this was actually</font>

380
00:15:20,040 --> 00:15:27,870
<font color="#CCCCCC">really convenient going forward we did</font>

381
00:15:25,490 --> 00:15:30,030
handle<font color="#CCCCCC"> the</font><font color="#E5E5E5"> exe which is another</font>

382
00:15:27,870 --> 00:15:32,190
sysinternals tools that just lists any

383
00:15:30,030 --> 00:15:34,530
open handles<font color="#E5E5E5"> to any files that it might</font>

384
00:15:32,190 --> 00:15:36,600
have open at the time this<font color="#CCCCCC"> is a good</font>

385
00:15:34,530 --> 00:15:38,010
<font color="#E5E5E5">thing if your application opened a bunch</font>

386
00:15:36,600 --> 00:15:39,510
of files and left them open

387
00:15:38,010 --> 00:15:40,620
<font color="#E5E5E5">unfortunately this isn't going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> show</font>

388
00:15:39,510 --> 00:15:42,569
anything<font color="#E5E5E5"> that</font><font color="#CCCCCC"> it might open is a</font>

389
00:15:40,620 --> 00:15:45,720
configuration file and<font color="#E5E5E5"> then close it</font>

390
00:15:42,570 --> 00:15:47,220
<font color="#E5E5E5">subsequently I'm lucky for us</font><font color="#CCCCCC"> though</font><font color="#E5E5E5"> we</font>

391
00:15:45,720 --> 00:15:49,230
got a good<font color="#E5E5E5"> amount of files that are kept</font>

392
00:15:47,220 --> 00:15:51,570
open<font color="#CCCCCC"> and it looks</font><font color="#E5E5E5"> like we had a lock</font>

393
00:15:49,230 --> 00:15:52,530
file because anytime<font color="#E5E5E5"> you see a document</font>

394
00:15:51,570 --> 00:15:55,380
or a text file or<font color="#CCCCCC"> something like that</font>

395
00:15:52,530 --> 00:15:57,030
that's<font color="#E5E5E5"> probably a log so our next step</font>

396
00:15:55,380 --> 00:16:01,110
was<font color="#CCCCCC"> to just go ahead</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> open up</font><font color="#E5E5E5"> that</font>

397
00:15:57,030 --> 00:16:02,910
log file and<font color="#E5E5E5"> see what</font><font color="#CCCCCC"> that was from the</font>

398
00:16:01,110 --> 00:16:06,690
log file<font color="#E5E5E5"> we actually can glean there was</font>

399
00:16:02,910 --> 00:16:08,459
a few other<font color="#E5E5E5"> files</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> needed but the kind</font>

400
00:16:06,690 --> 00:16:10,260
of<font color="#E5E5E5"> overarching thing we saw was pretty</font>

401
00:16:08,460 --> 00:16:12,720
<font color="#E5E5E5">much everything it relied on was in the</font>

402
00:16:10,260 --> 00:16:14,550
directory that<font color="#CCCCCC"> the binary was in so we</font>

403
00:16:12,720 --> 00:16:15,900
were<font color="#E5E5E5"> hoping we</font><font color="#CCCCCC"> just copied that install</font>

404
00:16:14,550 --> 00:16:18,439
directory and<font color="#CCCCCC"> that would be pretty</font><font color="#E5E5E5"> much</font>

405
00:16:15,900 --> 00:16:18,439
everything

406
00:16:21,010 --> 00:16:25,819
so we got just about<font color="#CCCCCC"> everything so we we</font>

407
00:16:24,380 --> 00:16:27,380
got all the files<font color="#E5E5E5"> over that were</font>

408
00:16:25,820 --> 00:16:29,240
libraries<font color="#E5E5E5"> got all the files over there</font>

409
00:16:27,380 --> 00:16:32,480
were input files<font color="#E5E5E5"> we still weren't having</font>

410
00:16:29,240 --> 00:16:33,770
much<font color="#CCCCCC"> luck getting it running</font><font color="#E5E5E5"> and we</font>

411
00:16:32,480 --> 00:16:36,020
remembered the<font color="#E5E5E5"> one last thing we didn't</font>

412
00:16:33,770 --> 00:16:39,110
check<font color="#E5E5E5"> was the registry for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> actual</font>

413
00:16:36,020 --> 00:16:40,579
service and it's pretty rare but

414
00:16:39,110 --> 00:16:42,410
<font color="#E5E5E5">sometimes you will actually see them put</font>

415
00:16:40,580 --> 00:16:44,960
data in there for their their<font color="#CCCCCC"> startup</font>

416
00:16:42,410 --> 00:16:46,130
stuff<font color="#E5E5E5"> and so we checked it out</font><font color="#CCCCCC"> looked at</font>

417
00:16:44,960 --> 00:16:47,840
the registry<font color="#E5E5E5"> and noticed that they</font>

418
00:16:46,130 --> 00:16:52,370
actually had the path to<font color="#E5E5E5"> where their</font>

419
00:16:47,840 --> 00:16:54,800
data<font color="#E5E5E5"> was so that wasn't hard-coded and</font>

420
00:16:52,370 --> 00:16:56,600
so once<font color="#E5E5E5"> we got that out and put that in</font>

421
00:16:54,800 --> 00:16:58,640
our in our system we were<font color="#CCCCCC"> able to start</font>

422
00:16:56,600 --> 00:17:05,240
<font color="#E5E5E5">the</font><font color="#CCCCCC"> application up and</font><font color="#E5E5E5"> begin our dynamic</font>

423
00:16:58,640 --> 00:17:07,550
analysis as I kind of mentioned<font color="#E5E5E5"> the when</font>

424
00:17:05,240 --> 00:17:11,030
you're setting up<font color="#CCCCCC"> your dynamic analysis</font>

425
00:17:07,550 --> 00:17:13,280
modeling virtualized<font color="#E5E5E5"> whatever you</font>

426
00:17:11,030 --> 00:17:14,869
actually want to get to where everything

427
00:17:13,280 --> 00:17:16,459
is as close as<font color="#CCCCCC"> possible to</font><font color="#E5E5E5"> what you're</font>

428
00:17:14,869 --> 00:17:20,060
<font color="#CCCCCC">looking at</font><font color="#E5E5E5"> so you want to get the same</font>

429
00:17:16,459 --> 00:17:21,500
operating<font color="#E5E5E5"> system same patch level you</font>

430
00:17:20,060 --> 00:17:23,139
know you want to<font color="#E5E5E5"> make sure your registry</font>

431
00:17:21,500 --> 00:17:25,700
looks the same you want to have

432
00:17:23,140 --> 00:17:28,100
debugging tools so that<font color="#CCCCCC"> you can actually</font>

433
00:17:25,700 --> 00:17:29,570
<font color="#E5E5E5">step through things if you need to you</font>

434
00:17:28,099 --> 00:17:30,740
<font color="#CCCCCC">want</font><font color="#E5E5E5"> to have some way of writing scripts</font>

435
00:17:29,570 --> 00:17:32,419
<font color="#E5E5E5">because more than likely you're gonna</font>

436
00:17:30,740 --> 00:17:36,500
<font color="#E5E5E5">have a proof of concept</font><font color="#CCCCCC"> that you need to</font>

437
00:17:32,420 --> 00:17:39,520
work on<font color="#E5E5E5"> to to quickly send data</font><font color="#CCCCCC"> this</font>

438
00:17:36,500 --> 00:17:39,520
thing<font color="#CCCCCC"> without much room</font>

439
00:17:41,720 --> 00:17:47,370
and once you've<font color="#CCCCCC"> done that</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you're</font>

440
00:17:44,580 --> 00:17:50,120
gonna want<font color="#E5E5E5"> to try to match what you</font>

441
00:17:47,370 --> 00:17:51,989
<font color="#E5E5E5">found in your stack analysis over to a</font>

442
00:17:50,120 --> 00:17:53,159
debugger<font color="#E5E5E5"> because you're pretty</font><font color="#CCCCCC"> much</font>

443
00:17:51,990 --> 00:17:56,270
gonna start switching tools at this

444
00:17:53,160 --> 00:17:59,550
point unless<font color="#E5E5E5"> you do use a debugger</font>

445
00:17:56,270 --> 00:18:01,350
<font color="#CCCCCC">immediately from your</font><font color="#E5E5E5"> disassembler for</font>

446
00:17:59,550 --> 00:18:04,740
example<font color="#E5E5E5"> idea</font><font color="#CCCCCC"> Pro has a debugger but a</font>

447
00:18:01,350 --> 00:18:06,540
lot<font color="#E5E5E5"> of times I actually tend to move</font>

448
00:18:04,740 --> 00:18:07,860
over<font color="#E5E5E5"> to immunity debugger</font><font color="#CCCCCC"> because they</font>

449
00:18:06,540 --> 00:18:11,520
have a lot<font color="#CCCCCC"> of built-in tools that are</font>

450
00:18:07,860 --> 00:18:14,189
really<font color="#CCCCCC"> nice so from</font><font color="#E5E5E5"> this point we</font><font color="#CCCCCC"> pretty</font>

451
00:18:11,520 --> 00:18:15,150
<font color="#CCCCCC">much found</font><font color="#E5E5E5"> the idea or the address of</font>

452
00:18:14,190 --> 00:18:18,300
the<font color="#CCCCCC"> function that we</font><font color="#E5E5E5"> thought was</font>

453
00:18:15,150 --> 00:18:20,760
vulnerable copy<font color="#E5E5E5"> that thing down and then</font>

454
00:18:18,300 --> 00:18:24,270
<font color="#E5E5E5">move it over to our debugger and</font><font color="#CCCCCC"> put in</font>

455
00:18:20,760 --> 00:18:26,280
a breakpoint<font color="#E5E5E5"> at this point now we have</font>

456
00:18:24,270 --> 00:18:28,379
our system<font color="#E5E5E5"> set up the way we</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> it we</font>

457
00:18:26,280 --> 00:18:30,590
<font color="#CCCCCC">have</font><font color="#E5E5E5"> our binary on it we've loaded it up</font>

458
00:18:28,380 --> 00:18:32,820
in our debugger<font color="#CCCCCC"> and we're ready to see</font>

459
00:18:30,590 --> 00:18:36,389
we're ready to develop<font color="#CCCCCC"> them for proof</font><font color="#E5E5E5"> of</font>

460
00:18:32,820 --> 00:18:39,950
concept to exercise what we think might

461
00:18:36,390 --> 00:18:39,950
have been<font color="#CCCCCC"> a</font><font color="#E5E5E5"> bug and see what happens</font>

462
00:18:44,210 --> 00:18:48,049
so once we can<font color="#CCCCCC"> leave</font><font color="#E5E5E5"> us to get to this</font>

463
00:18:45,889 --> 00:18:51,080
<font color="#E5E5E5">point we kind of start thinking</font><font color="#CCCCCC"> about</font>

464
00:18:48,049 --> 00:18:52,580
the<font color="#E5E5E5"> design for</font><font color="#CCCCCC"> our proof of</font><font color="#E5E5E5"> concept from</font>

465
00:18:51,080 --> 00:18:55,369
<font color="#E5E5E5">what we've</font><font color="#CCCCCC"> seen in our disassembly</font>

466
00:18:52,580 --> 00:18:58,490
<font color="#CCCCCC">there's a header</font><font color="#E5E5E5"> there's data and</font>

467
00:18:55,369 --> 00:18:59,899
there's the data length so we<font color="#CCCCCC"> should be</font>

468
00:18:58,490 --> 00:19:01,639
able<font color="#CCCCCC"> to go ahead and</font><font color="#E5E5E5"> start getting a</font>

469
00:18:59,899 --> 00:19:03,830
proof of concept<font color="#CCCCCC"> for a lot of the</font>

470
00:19:01,639 --> 00:19:06,049
boilerplate<font color="#E5E5E5"> stuff we don't really know</font>

471
00:19:03,830 --> 00:19:07,730
<font color="#E5E5E5">like I said what that</font><font color="#CCCCCC"> function might be</font>

472
00:19:06,049 --> 00:19:11,779
doing otherwise<font color="#E5E5E5"> or what we might have to</font>

473
00:19:07,730 --> 00:19:13,100
do to make it you know a reliable<font color="#CCCCCC"> X way</font>

474
00:19:11,779 --> 00:19:14,809
or anything like that that's<font color="#E5E5E5"> gonna come</font>

475
00:19:13,100 --> 00:19:17,178
much later<font color="#CCCCCC"> but we should be</font><font color="#E5E5E5"> able to go</font>

476
00:19:14,809 --> 00:19:19,240
ahead<font color="#E5E5E5"> and set</font><font color="#CCCCCC"> up the necessary</font><font color="#E5E5E5"> things</font>

477
00:19:17,179 --> 00:19:21,409
like opening<font color="#CCCCCC"> our</font><font color="#E5E5E5"> socket</font>

478
00:19:19,240 --> 00:19:23,330
sending and receiving closing that

479
00:19:21,409 --> 00:19:25,369
socket<font color="#E5E5E5"> just the really easy stuff that</font>

480
00:19:23,330 --> 00:19:28,178
will<font color="#E5E5E5"> get us</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the next step of being</font>

481
00:19:25,369 --> 00:19:30,168
able to develop a<font color="#E5E5E5"> proof of</font><font color="#CCCCCC"> concept and</font>

482
00:19:28,179 --> 00:19:31,879
<font color="#CCCCCC">you can choose you know whatever</font>

483
00:19:30,169 --> 00:19:33,649
<font color="#E5E5E5">scripting language you you feel better</font>

484
00:19:31,879 --> 00:19:35,809
about doing<font color="#CCCCCC"> this</font><font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> stuff and</font><font color="#E5E5E5"> I</font>

485
00:19:33,649 --> 00:19:41,059
usually<font color="#CCCCCC"> pick Python just</font><font color="#E5E5E5"> because I'm</font>

486
00:19:35,809 --> 00:19:42,918
used to it<font color="#CCCCCC"> here's here was our first</font>

487
00:19:41,059 --> 00:19:46,090
stab at<font color="#CCCCCC"> our</font><font color="#E5E5E5"> little proof of concept</font>

488
00:19:42,919 --> 00:19:49,480
skeleton you can see it<font color="#CCCCCC"> just takes in</font>

489
00:19:46,090 --> 00:19:51,949
the<font color="#E5E5E5"> host the</font><font color="#CCCCCC"> for creates a socket</font>

490
00:19:49,480 --> 00:19:55,429
<font color="#E5E5E5">creates a string down here</font><font color="#CCCCCC"> it's</font>

491
00:19:51,950 --> 00:19:56,440
<font color="#E5E5E5">literally just an array of ones followed</font>

492
00:19:55,429 --> 00:19:59,119
by commas

493
00:19:56,440 --> 00:20:01,789
and then it<font color="#E5E5E5"> just sends it and then it</font>

494
00:19:59,119 --> 00:20:04,610
closes<font color="#E5E5E5"> it we did exit I had a little</font>

495
00:20:01,789 --> 00:20:06,408
helper function over<font color="#CCCCCC"> here that will set</font>

496
00:20:04,610 --> 00:20:07,939
up that initial<font color="#E5E5E5"> header</font><font color="#CCCCCC"> it would just</font>

497
00:20:06,409 --> 00:20:10,549
tell basically say hey this is<font color="#CCCCCC"> the type</font>

498
00:20:07,940 --> 00:20:11,869
this is of the<font color="#E5E5E5"> the function that we're</font>

499
00:20:10,549 --> 00:20:13,490
gonna<font color="#E5E5E5"> want to exercise and this</font><font color="#CCCCCC"> is the</font>

500
00:20:11,869 --> 00:20:14,600
length of all<font color="#E5E5E5"> of our data so that just</font>

501
00:20:13,490 --> 00:20:17,149
kind<font color="#CCCCCC"> of made it a</font><font color="#E5E5E5"> little easier</font><font color="#CCCCCC"> for us</font>

502
00:20:14,600 --> 00:20:19,539
<font color="#E5E5E5">whenever</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> send data to this this</font>

503
00:20:17,149 --> 00:20:19,539
service

504
00:20:22,130 --> 00:20:28,200
<font color="#E5E5E5">all</font><font color="#CCCCCC"> right so we got</font><font color="#E5E5E5"> really lucky</font><font color="#CCCCCC"> and</font>

505
00:20:25,530 --> 00:20:30,780
even with<font color="#CCCCCC"> that very</font><font color="#E5E5E5"> simple proof of</font>

506
00:20:28,200 --> 00:20:33,450
concept you<font color="#CCCCCC"> can see that when</font><font color="#E5E5E5"> we ran it</font>

507
00:20:30,780 --> 00:20:36,420
we immediately got access over<font color="#E5E5E5"> a IP</font>

508
00:20:33,450 --> 00:20:38,850
which is your instruction pointer<font color="#E5E5E5"> which</font>

509
00:20:36,420 --> 00:20:41,340
is pretty<font color="#CCCCCC"> much</font><font color="#E5E5E5"> the one register that</font>

510
00:20:38,850 --> 00:20:45,090
determines where<font color="#E5E5E5"> your next</font><font color="#CCCCCC"> execution is</font>

511
00:20:41,340 --> 00:20:47,129
<font color="#CCCCCC">going to be and as</font><font color="#E5E5E5"> y'all could see</font>

512
00:20:45,090 --> 00:20:48,810
earlier there was<font color="#E5E5E5"> that array of ones and</font>

513
00:20:47,130 --> 00:20:50,310
<font color="#E5E5E5">we have</font><font color="#CCCCCC"> a one sitting in EIP</font>

514
00:20:48,810 --> 00:20:57,750
<font color="#E5E5E5">so we are really happy</font><font color="#CCCCCC"> at this point</font>

515
00:20:50,310 --> 00:20:59,159
<font color="#CCCCCC">because it's this</font><font color="#E5E5E5"> is ideal from this</font>

516
00:20:57,750 --> 00:21:01,080
<font color="#E5E5E5">point you probably want to start</font>

517
00:20:59,160 --> 00:21:03,030
<font color="#E5E5E5">thinking</font><font color="#CCCCCC"> about okay now I have the</font><font color="#E5E5E5"> IP I</font>

518
00:21:01,080 --> 00:21:04,260
would like to actually you<font color="#CCCCCC"> know put</font><font color="#E5E5E5"> some</font>

519
00:21:03,030 --> 00:21:06,530
<font color="#E5E5E5">shell code in there I want to take over</font>

520
00:21:04,260 --> 00:21:08,940
<font color="#CCCCCC">the system I want to use this exploit</font>

521
00:21:06,530 --> 00:21:10,889
and when you start<font color="#CCCCCC"> thinking about those</font>

522
00:21:08,940 --> 00:21:12,870
types of<font color="#E5E5E5"> things you want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> know</font>

523
00:21:10,890 --> 00:21:15,390
again more about your environment<font color="#CCCCCC"> you</font>

524
00:21:12,870 --> 00:21:17,219
<font color="#E5E5E5">want to know you know what protections</font>

525
00:21:15,390 --> 00:21:18,990
does this binary have in place what am I

526
00:21:17,220 --> 00:21:22,230
gonna<font color="#CCCCCC"> have to get</font><font color="#E5E5E5"> around to make this</font>

527
00:21:18,990 --> 00:21:24,120
work in<font color="#E5E5E5"> our case we already know because</font>

528
00:21:22,230 --> 00:21:27,480
<font color="#E5E5E5">we control a IP that there were no stack</font>

529
00:21:24,120 --> 00:21:29,070
Canaries<font color="#E5E5E5"> which is typically it's a</font>

530
00:21:27,480 --> 00:21:30,180
protection<font color="#E5E5E5"> that allowed that keeps you</font>

531
00:21:29,070 --> 00:21:31,710
<font color="#CCCCCC">from</font><font color="#E5E5E5"> being able to get to your</font>

532
00:21:30,180 --> 00:21:34,350
instruction pointer because if it

533
00:21:31,710 --> 00:21:35,880
<font color="#CCCCCC">overwrites that stack canary and</font><font color="#E5E5E5"> then it</font>

534
00:21:34,350 --> 00:21:37,379
checks<font color="#E5E5E5"> it before the end</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> function</font>

535
00:21:35,880 --> 00:21:39,420
and<font color="#E5E5E5"> it will kill</font><font color="#CCCCCC"> the whole program</font>

536
00:21:37,380 --> 00:21:41,310
before<font color="#E5E5E5"> you even get to the</font><font color="#CCCCCC"> situation we</font>

537
00:21:39,420 --> 00:21:43,710
just<font color="#E5E5E5"> saw so we know it</font><font color="#CCCCCC"> doesn't have that</font>

538
00:21:41,310 --> 00:21:45,870
<font color="#E5E5E5">for next protection from our list here</font>

539
00:21:43,710 --> 00:21:48,090
this is actually a<font color="#E5E5E5"> command that you</font><font color="#CCCCCC"> can</font>

540
00:21:45,870 --> 00:21:50,129
run from a<font color="#CCCCCC"> mona script which is</font>

541
00:21:48,090 --> 00:21:51,780
developed by<font color="#CCCCCC"> core LAN</font><font color="#E5E5E5"> that will tell you</font>

542
00:21:50,130 --> 00:21:54,780
all<font color="#CCCCCC"> the protections for every</font>

543
00:21:51,780 --> 00:21:57,149
<font color="#E5E5E5">application every library that you have</font>

544
00:21:54,780 --> 00:21:58,950
loaded<font color="#CCCCCC"> into</font><font color="#E5E5E5"> memory</font><font color="#CCCCCC"> at the time and as</font>

545
00:21:57,150 --> 00:22:00,390
<font color="#E5E5E5">you can tell</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> ours it actually shows</font>

546
00:21:58,950 --> 00:22:02,760
that<font color="#CCCCCC"> our binary</font><font color="#E5E5E5"> right there in the</font>

547
00:22:00,390 --> 00:22:05,460
<font color="#E5E5E5">middle has absolutely no protections</font>

548
00:22:02,760 --> 00:22:07,350
<font color="#CCCCCC">this is like once again</font><font color="#E5E5E5"> ideal for us</font>

549
00:22:05,460 --> 00:22:10,480
<font color="#E5E5E5">horrible for them</font>

550
00:22:07,350 --> 00:22:14,519
so at<font color="#E5E5E5"> this point we literally could have</font>

551
00:22:10,480 --> 00:22:16,899
<font color="#CCCCCC">just written one instruction</font><font color="#E5E5E5"> to our VIP</font>

552
00:22:14,519 --> 00:22:20,529
register and jump straight to<font color="#CCCCCC"> our shell</font>

553
00:22:16,899 --> 00:22:22,779
<font color="#CCCCCC">code and we did try that at first</font><font color="#E5E5E5"> but we</font>

554
00:22:20,529 --> 00:22:24,279
<font color="#CCCCCC">assumed that more than likely the</font>

555
00:22:22,779 --> 00:22:26,440
systems we were dealing<font color="#CCCCCC"> with which were</font>

556
00:22:24,279 --> 00:22:30,549
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> very secure systems</font><font color="#E5E5E5"> probably at</font>

557
00:22:26,440 --> 00:22:34,809
<font color="#E5E5E5">least had DDP turned on at the</font><font color="#CCCCCC"> operating</font>

558
00:22:30,549 --> 00:22:36,639
<font color="#CCCCCC">system level</font><font color="#E5E5E5"> and so we determined that</font>

559
00:22:34,809 --> 00:22:39,009
probably to<font color="#E5E5E5"> make this as reliably as</font>

560
00:22:36,639 --> 00:22:41,529
<font color="#E5E5E5">possible we would go ahead and</font><font color="#CCCCCC"> pretend</font>

561
00:22:39,009 --> 00:22:48,490
like all the protections were enabled

562
00:22:41,529 --> 00:22:50,679
and write an exploit for<font color="#CCCCCC"> that so going</font>

563
00:22:48,490 --> 00:22:52,360
<font color="#E5E5E5">with that assumption in mind we're</font>

564
00:22:50,679 --> 00:22:54,159
assuming that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have to get</font><font color="#E5E5E5"> around DP</font>

565
00:22:52,360 --> 00:22:56,908
which means that I can't execute

566
00:22:54,159 --> 00:22:58,869
<font color="#E5E5E5">anything directly on the stack so</font>

567
00:22:56,909 --> 00:23:00,700
<font color="#CCCCCC">typically the first</font><font color="#E5E5E5"> thing you want to do</font>

568
00:22:58,869 --> 00:23:02,499
is you want<font color="#CCCCCC"> to put gel coat on the stack</font>

569
00:23:00,700 --> 00:23:05,710
<font color="#E5E5E5">if you want to execute it so</font><font color="#CCCCCC"> we can't do</font>

570
00:23:02,499 --> 00:23:09,159
that<font color="#E5E5E5"> and we also can see that other than</font>

571
00:23:05,710 --> 00:23:11,200
our binary<font color="#CCCCCC"> a SLR</font><font color="#E5E5E5"> is enabled as</font>

572
00:23:09,159 --> 00:23:13,269
protection<font color="#CCCCCC"> too and they SL are basically</font>

573
00:23:11,200 --> 00:23:15,070
all that means is whenever you<font color="#E5E5E5"> load up</font>

574
00:23:13,269 --> 00:23:17,830
your binary<font color="#E5E5E5"> it gets loaded in a</font>

575
00:23:15,070 --> 00:23:20,259
different place in<font color="#E5E5E5"> memory and so when we</font>

576
00:23:17,830 --> 00:23:22,689
<font color="#CCCCCC">are actually</font><font color="#E5E5E5"> writing these exploits your</font>

577
00:23:20,259 --> 00:23:26,049
<font color="#E5E5E5">exploits gonna be static unless you have</font>

578
00:23:22,690 --> 00:23:28,509
the ability to leak<font color="#E5E5E5"> addresses back to</font>

579
00:23:26,049 --> 00:23:30,580
you<font color="#CCCCCC"> in our case we we don't we don't</font>

580
00:23:28,509 --> 00:23:32,200
even<font color="#E5E5E5"> need that so we want to actually be</font>

581
00:23:30,580 --> 00:23:34,809
able<font color="#E5E5E5"> to just have static addresses</font><font color="#CCCCCC"> in</font>

582
00:23:32,200 --> 00:23:36,789
our exploit which we can jump to and

583
00:23:34,809 --> 00:23:39,389
will actually<font color="#E5E5E5"> start executing down till</font>

584
00:23:36,789 --> 00:23:42,340
we<font color="#CCCCCC"> get to our</font><font color="#E5E5E5"> shellcode</font>

585
00:23:39,390 --> 00:23:43,900
so in this particular<font color="#E5E5E5"> case</font><font color="#CCCCCC"> as I said</font>

586
00:23:42,340 --> 00:23:47,439
<font color="#CCCCCC">we're gonna try to pretend as if all</font>

587
00:23:43,900 --> 00:23:48,910
these protections<font color="#E5E5E5"> are in place</font><font color="#CCCCCC"> so with</font>

588
00:23:47,440 --> 00:23:52,360
them in place we're actually gonna<font color="#E5E5E5"> have</font>

589
00:23:48,910 --> 00:23:53,080
to make calls<font color="#CCCCCC"> to re-enable execution on</font>

590
00:23:52,360 --> 00:23:56,439
our stack

591
00:23:53,080 --> 00:23:58,540
lucky for<font color="#E5E5E5"> us windows provides lots of</font>

592
00:23:56,440 --> 00:24:00,730
different ways<font color="#CCCCCC"> to do that</font><font color="#E5E5E5"> you can use</font>

593
00:23:58,540 --> 00:24:04,120
<font color="#CCCCCC">write process memory you can use virtual</font>

594
00:24:00,730 --> 00:24:05,710
Alec and and the great<font color="#CCCCCC"> thing about</font><font color="#E5E5E5"> this</font>

595
00:24:04,120 --> 00:24:07,810
<font color="#CCCCCC">Mona script as well as it will actually</font>

596
00:24:05,710 --> 00:24:11,760
<font color="#E5E5E5">look for those gadgets for you and it'll</font>

597
00:24:07,810 --> 00:24:11,760
just construct that whole chain for you

598
00:24:13,710 --> 00:24:18,780
so on this slide right<font color="#E5E5E5"> here</font><font color="#CCCCCC"> you can</font>

599
00:24:15,730 --> 00:24:21,970
<font color="#E5E5E5">actually see</font><font color="#CCCCCC"> what happened when I ran</font>

600
00:24:18,780 --> 00:24:25,149
the<font color="#CCCCCC"> rap chain command it went ahead it</font>

601
00:24:21,970 --> 00:24:27,070
found every<font color="#CCCCCC"> gadget I need which is when</font>

602
00:24:25,150 --> 00:24:31,380
I say gadget<font color="#E5E5E5"> this is actually an address</font>

603
00:24:27,070 --> 00:24:34,330
<font color="#E5E5E5">in a static</font><font color="#CCCCCC"> library that you can use to</font>

604
00:24:31,380 --> 00:24:36,160
do something you need<font color="#CCCCCC"> in this case</font><font color="#E5E5E5"> what</font>

605
00:24:34,330 --> 00:24:39,070
we need to do is set up<font color="#E5E5E5"> our stack</font><font color="#CCCCCC"> and a</font>

606
00:24:36,160 --> 00:24:40,900
way<font color="#E5E5E5"> to call that function so this</font>

607
00:24:39,070 --> 00:24:43,389
<font color="#CCCCCC">particular chain is set up to call</font>

608
00:24:40,900 --> 00:24:45,370
virtual<font color="#E5E5E5"> Alec and basically sets up all</font>

609
00:24:43,390 --> 00:24:47,800
the<font color="#CCCCCC"> parameters need needed for virtual</font>

610
00:24:45,370 --> 00:24:49,629
Alec and then once we call virtual Alec

611
00:24:47,800 --> 00:24:51,669
it will change our stack from

612
00:24:49,630 --> 00:24:52,870
non-executable back to executable<font color="#E5E5E5"> at</font>

613
00:24:51,670 --> 00:24:56,260
which<font color="#CCCCCC"> point we</font><font color="#E5E5E5"> can jump straight</font><font color="#CCCCCC"> to our</font>

614
00:24:52,870 --> 00:24:57,699
<font color="#CCCCCC">shellcode and start executing</font><font color="#E5E5E5"> the only</font>

615
00:24:56,260 --> 00:25:01,900
problem<font color="#CCCCCC"> I</font><font color="#E5E5E5"> found in our particular</font>

616
00:24:57,700 --> 00:25:04,000
<font color="#CCCCCC">example was that script found gadgets</font><font color="#E5E5E5"> to</font>

617
00:25:01,900 --> 00:25:07,510
every single<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> we needed</font><font color="#E5E5E5"> except the</font>

618
00:25:04,000 --> 00:25:09,400
address<font color="#E5E5E5"> to virtual Alec it's kind of a</font>

619
00:25:07,510 --> 00:25:12,790
big<font color="#CCCCCC"> problem because</font><font color="#E5E5E5"> that's you know what</font>

620
00:25:09,400 --> 00:25:14,470
we're<font color="#E5E5E5"> all hinged on here so going</font>

621
00:25:12,790 --> 00:25:16,870
forward we<font color="#CCCCCC"> realized we're gonna have to</font>

622
00:25:14,470 --> 00:25:19,450
resolve virtual ourselves using<font color="#E5E5E5"> two</font>

623
00:25:16,870 --> 00:25:21,219
additional function calls<font color="#E5E5E5"> the first</font>

624
00:25:19,450 --> 00:25:23,770
<font color="#E5E5E5">being get module handle which</font><font color="#CCCCCC"> would give</font>

625
00:25:21,220 --> 00:25:25,630
<font color="#CCCCCC">us</font><font color="#E5E5E5"> the addresses at</font><font color="#CCCCCC"> kernel32 and then</font>

626
00:25:23,770 --> 00:25:27,790
once we get<font color="#E5E5E5"> the address</font><font color="#CCCCCC"> at kernel32 we</font>

627
00:25:25,630 --> 00:25:30,130
need to find the<font color="#CCCCCC"> address of get</font><font color="#E5E5E5"> process</font>

628
00:25:27,790 --> 00:25:32,590
address so that<font color="#CCCCCC"> we can then resolve</font>

629
00:25:30,130 --> 00:25:34,270
virtual<font color="#E5E5E5"> Alec and then of course once</font><font color="#CCCCCC"> we</font>

630
00:25:32,590 --> 00:25:35,980
get the virtual<font color="#CCCCCC"> Alec address</font><font color="#E5E5E5"> which are</font>

631
00:25:34,270 --> 00:25:37,510
off straight into this<font color="#CCCCCC"> drop chain that</font>

632
00:25:35,980 --> 00:25:40,020
<font color="#E5E5E5">was generated for</font><font color="#CCCCCC"> us and then our</font>

633
00:25:37,510 --> 00:25:40,020
<font color="#CCCCCC">shellcode</font>

634
00:25:41,730 --> 00:25:45,700
so since all<font color="#CCCCCC"> this gets a little</font>

635
00:25:43,510 --> 00:25:48,640
<font color="#E5E5E5">confusing</font><font color="#CCCCCC"> it really comes down to you</font>

636
00:25:45,700 --> 00:25:50,890
know<font color="#E5E5E5"> just software design in the end and</font>

637
00:25:48,640 --> 00:25:52,900
<font color="#E5E5E5">so you start designing out what this is</font>

638
00:25:50,890 --> 00:25:54,550
<font color="#E5E5E5">gonna need to look like</font><font color="#CCCCCC"> and then you can</font>

639
00:25:52,900 --> 00:25:57,160
<font color="#E5E5E5">start plugging in the pieces as</font><font color="#CCCCCC"> you get</font>

640
00:25:54,550 --> 00:25:59,290
to them and so right<font color="#CCCCCC"> now in the process</font>

641
00:25:57,160 --> 00:26:01,930
we pretty much have our packet header

642
00:25:59,290 --> 00:26:04,990
set up we have<font color="#CCCCCC"> all of our ones which is</font>

643
00:26:01,930 --> 00:26:06,790
basically<font color="#CCCCCC"> our garbage there and then</font>

644
00:26:04,990 --> 00:26:09,700
we'll start setting<font color="#E5E5E5"> up</font><font color="#CCCCCC"> our Rob gadgets</font>

645
00:26:06,790 --> 00:26:11,379
for<font color="#E5E5E5"> the three stages that we needed</font><font color="#CCCCCC"> at</font>

646
00:26:09,700 --> 00:26:13,900
first being getting<font color="#E5E5E5"> that module handle</font>

647
00:26:11,380 --> 00:26:16,000
<font color="#E5E5E5">to kernel32 then getting the address to</font>

648
00:26:13,900 --> 00:26:22,870
virtual<font color="#E5E5E5"> Alec and then calling virtual</font>

649
00:26:16,000 --> 00:26:25,500
Alec and<font color="#E5E5E5"> then calling our shell code we</font>

650
00:26:22,870 --> 00:26:28,600
<font color="#E5E5E5">add one</font><font color="#CCCCCC"> extra little helper function</font>

651
00:26:25,500 --> 00:26:30,820
since we since we<font color="#E5E5E5"> were actually</font><font color="#CCCCCC"> passing</font>

652
00:26:28,600 --> 00:26:34,090
in that<font color="#E5E5E5"> data it's looking for</font><font color="#CCCCCC"> Strings</font>

653
00:26:30,820 --> 00:26:35,679
<font color="#E5E5E5">that are numbers and when we end up</font>

654
00:26:34,090 --> 00:26:37,600
having our shell code<font color="#E5E5E5"> it'll typically</font>

655
00:26:35,680 --> 00:26:40,060
<font color="#CCCCCC">just be raw so we're just</font><font color="#E5E5E5"> going to have</font>

656
00:26:37,600 --> 00:26:41,679
a bunch<font color="#E5E5E5"> of raw bytes</font><font color="#CCCCCC"> and we need to</font>

657
00:26:40,060 --> 00:26:43,960
format<font color="#E5E5E5"> that in such a way</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> they</font><font color="#CCCCCC"> just</font>

658
00:26:41,680 --> 00:26:46,060
look<font color="#CCCCCC"> like</font><font color="#E5E5E5"> an array of</font><font color="#CCCCCC"> numbers</font><font color="#E5E5E5"> so all</font>

659
00:26:43,960 --> 00:26:49,300
<font color="#E5E5E5">this function does is take in all of</font><font color="#CCCCCC"> our</font>

660
00:26:46,060 --> 00:26:51,820
shell code and it converts<font color="#E5E5E5"> them</font><font color="#CCCCCC"> into an</font>

661
00:26:49,300 --> 00:26:56,010
array<font color="#CCCCCC"> of numbers</font><font color="#E5E5E5"> and adds them to the</font>

662
00:26:51,820 --> 00:26:56,010
<font color="#E5E5E5">end of our</font><font color="#CCCCCC"> data set</font><font color="#E5E5E5"> segment there</font>

663
00:26:57,720 --> 00:27:02,210
<font color="#E5E5E5">all right so let's have a demo</font>

664
00:27:07,779 --> 00:27:12,290
<font color="#E5E5E5">all right so</font>

665
00:27:10,400 --> 00:27:15,670
before I run<font color="#CCCCCC"> this I'm going</font><font color="#E5E5E5"> to show you</font>

666
00:27:12,290 --> 00:27:18,440
kind<font color="#E5E5E5"> of what did I ended up looking like</font>

667
00:27:15,670 --> 00:27:24,740
so this<font color="#CCCCCC"> is our code</font><font color="#E5E5E5"> this is our proof of</font>

668
00:27:18,440 --> 00:27:28,070
<font color="#E5E5E5">concepts see if I can go where I can't</font>

669
00:27:24,740 --> 00:27:29,900
see<font color="#E5E5E5"> this</font><font color="#CCCCCC"> at all can you</font><font color="#E5E5E5"> okay just bear</font>

670
00:27:28,070 --> 00:27:31,790
<font color="#CCCCCC">with me all</font><font color="#E5E5E5"> right so this is this</font><font color="#CCCCCC"> part</font>

671
00:27:29,900 --> 00:27:33,080
up top is all of our shell code and<font color="#E5E5E5"> this</font>

672
00:27:31,790 --> 00:27:37,520
<font color="#E5E5E5">is basically just shell code for a</font>

673
00:27:33,080 --> 00:27:39,980
reverse TCP form interpreter<font color="#E5E5E5"> and as you</font>

674
00:27:37,520 --> 00:27:41,690
go<font color="#E5E5E5"> down this</font><font color="#CCCCCC"> is our sin function that</font>

675
00:27:39,980 --> 00:27:43,160
<font color="#CCCCCC">basically just sets</font><font color="#E5E5E5"> up our header and</font>

676
00:27:41,690 --> 00:27:47,120
then sends our data as we were<font color="#E5E5E5"> talking</font>

677
00:27:43,160 --> 00:27:49,070
about this is<font color="#E5E5E5"> our little helper function</font>

678
00:27:47,120 --> 00:27:54,110
that<font color="#E5E5E5"> turns our shell code into</font><font color="#CCCCCC"> the array</font>

679
00:27:49,070 --> 00:27:58,879
<font color="#CCCCCC">of numbers this is a similar helper</font>

680
00:27:54,110 --> 00:28:02,600
function<font color="#E5E5E5"> just for Strings and</font><font color="#CCCCCC"> then this</font>

681
00:27:58,880 --> 00:28:04,160
is<font color="#E5E5E5"> actually our</font><font color="#CCCCCC"> Rob chain so that first</font>

682
00:28:02,600 --> 00:28:06,949
one<font color="#E5E5E5"> as I</font><font color="#CCCCCC"> mentioned</font><font color="#E5E5E5"> before that's gonna</font>

683
00:28:04,160 --> 00:28:09,200
<font color="#E5E5E5">get that's gonna call get module handle</font>

684
00:28:06,950 --> 00:28:12,230
<font color="#E5E5E5">it's gonna get kernel32 she scrolled</font>

685
00:28:09,200 --> 00:28:16,820
down<font color="#E5E5E5"> we'll have our next call which will</font>

686
00:28:12,230 --> 00:28:18,590
be get process<font color="#E5E5E5"> address and</font><font color="#CCCCCC"> then as you</font>

687
00:28:16,820 --> 00:28:22,280
keep<font color="#E5E5E5"> going we're finally gonna get down</font>

688
00:28:18,590 --> 00:28:25,760
<font color="#E5E5E5">to</font><font color="#CCCCCC"> our actual Rob chain</font><font color="#E5E5E5"> to call virtual</font>

689
00:28:22,280 --> 00:28:27,770
Alec I think<font color="#CCCCCC"> that's right here</font><font color="#E5E5E5"> and then</font>

690
00:28:25,760 --> 00:28:32,990
once we call virtual Alec<font color="#E5E5E5"> the last thing</font>

691
00:28:27,770 --> 00:28:40,150
we do<font color="#E5E5E5"> which would</font><font color="#CCCCCC"> be right here</font><font color="#E5E5E5"> is add</font>

692
00:28:32,990 --> 00:28:40,150
our<font color="#E5E5E5"> shell code all right so</font>

693
00:28:41,490 --> 00:28:43,940
<font color="#CCCCCC">yes</font>

694
00:28:52,080 --> 00:28:55,980
<font color="#E5E5E5">all right so if you look over</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> when</font>

695
00:28:53,760 --> 00:28:58,440
you just have simples multi<font color="#CCCCCC"> handler</font>

696
00:28:55,980 --> 00:29:10,080
waiting<font color="#E5E5E5"> for a callback on four four four</font>

697
00:28:58,440 --> 00:29:12,230
four four a reverse<font color="#E5E5E5"> TCP payload and my</font>

698
00:29:10,080 --> 00:29:12,230
mouth

699
00:29:15,800 --> 00:29:23,440
and if we look at<font color="#E5E5E5"> our box here let's</font>

700
00:29:19,550 --> 00:29:23,440
make sure we have<font color="#CCCCCC"> this service</font><font color="#E5E5E5"> running</font>

701
00:29:27,160 --> 00:29:29,850
<font color="#E5E5E5">didn't you</font>

702
00:29:30,740 --> 00:29:35,950
<font color="#E5E5E5">all right so let's check</font><font color="#CCCCCC"> that port</font>

703
00:29:39,160 --> 00:29:43,990
so we can see we have<font color="#CCCCCC"> a service listen</font>

704
00:29:41,470 --> 00:29:47,940
here up<font color="#E5E5E5"> for 8080 is that medicine serve</font>

705
00:29:43,990 --> 00:29:47,940
that we just we've been<font color="#E5E5E5"> talking about</font>

706
00:29:48,330 --> 00:29:53,340
and if we run our scripts

707
00:30:02,970 --> 00:30:08,480
<font color="#CCCCCC">I</font><font color="#E5E5E5"> couldn't look up here looks like</font><font color="#CCCCCC"> we</font>

708
00:30:05,970 --> 00:30:08,480
got a<font color="#E5E5E5"> show back</font>

709
00:30:09,200 --> 00:30:16,580
at which<font color="#CCCCCC"> point we can make sure y'all</font>

710
00:30:15,410 --> 00:30:23,260
definitely can't see this<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> really</font>

711
00:30:16,580 --> 00:30:25,850
<font color="#E5E5E5">can we see that's</font><font color="#CCCCCC"> a we are system</font><font color="#E5E5E5"> and</font>

712
00:30:23,260 --> 00:30:29,179
remember<font color="#CCCCCC"> system info we</font><font color="#E5E5E5"> say this is our</font>

713
00:30:25,850 --> 00:30:31,669
<font color="#CCCCCC">win7 box so this point this</font><font color="#E5E5E5"> would be</font>

714
00:30:29,179 --> 00:30:33,290
exactly<font color="#CCCCCC"> what</font><font color="#E5E5E5"> we wanted this is we found</font>

715
00:30:31,670 --> 00:30:35,360
<font color="#E5E5E5">a service we were able to write exploit</font>

716
00:30:33,290 --> 00:30:38,360
and now we're hoping<font color="#E5E5E5"> that this service</font>

717
00:30:35,360 --> 00:30:40,309
would be installed all over<font color="#CCCCCC"> the network</font>

718
00:30:38,360 --> 00:30:42,229
<font color="#CCCCCC">and we'd be able to allow Li propagate</font>

719
00:30:40,309 --> 00:30:44,120
and start setting<font color="#CCCCCC"> up</font><font color="#E5E5E5"> our persistence on</font>

720
00:30:42,230 --> 00:30:45,260
other boxes that we may or may not could

721
00:30:44,120 --> 00:30:47,770
have gotten<font color="#E5E5E5"> through in our red teen</font>

722
00:30:45,260 --> 00:30:47,770
assessment

723
00:30:51,680 --> 00:30:58,880
so one<font color="#CCCCCC"> of the fun things</font><font color="#E5E5E5"> about stepping</font>

724
00:30:54,920 --> 00:31:02,420
into this new type<font color="#CCCCCC"> of work in the stuff</font>

725
00:30:58,880 --> 00:31:04,100
what we do<font color="#E5E5E5"> as we just described all</font>

726
00:31:02,420 --> 00:31:05,660
these<font color="#E5E5E5"> these things that we're finding or</font>

727
00:31:04,100 --> 00:31:07,730
<font color="#E5E5E5">considered</font><font color="#CCCCCC"> O'Day's so a lot of</font><font color="#E5E5E5"> these</font>

728
00:31:05,660 --> 00:31:08,780
<font color="#E5E5E5">people don't know what we found they</font>

729
00:31:07,730 --> 00:31:13,400
don't<font color="#CCCCCC"> even know that this stuff is</font>

730
00:31:08,780 --> 00:31:16,370
running<font color="#E5E5E5"> on their systems</font><font color="#CCCCCC"> so you know</font>

731
00:31:13,400 --> 00:31:17,810
it's it's it's a<font color="#CCCCCC"> gray</font><font color="#E5E5E5"> area</font><font color="#CCCCCC"> and you</font>

732
00:31:16,370 --> 00:31:19,219
<font color="#CCCCCC">definitely have to make</font><font color="#E5E5E5"> sure that the</font>

733
00:31:17,810 --> 00:31:20,929
<font color="#E5E5E5">the customers that you're working with</font>

734
00:31:19,220 --> 00:31:24,800
<font color="#E5E5E5">are completely okay</font><font color="#CCCCCC"> with you doing these</font>

735
00:31:20,930 --> 00:31:26,840
types of things<font color="#E5E5E5"> in lucky for us our</font>

736
00:31:24,800 --> 00:31:29,060
customers<font color="#E5E5E5"> they want to know about</font>

737
00:31:26,840 --> 00:31:30,530
anything<font color="#E5E5E5"> impossible</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> can be done</font><font color="#CCCCCC"> to</font>

738
00:31:29,060 --> 00:31:33,320
their<font color="#E5E5E5"> network so they're completely</font><font color="#CCCCCC"> okay</font>

739
00:31:30,530 --> 00:31:35,030
with<font color="#E5E5E5"> this</font><font color="#CCCCCC"> but you have to make sure that</font>

740
00:31:33,320 --> 00:31:37,460
<font color="#CCCCCC">you're not gonna</font><font color="#E5E5E5"> be doing</font><font color="#CCCCCC"> anything that</font>

741
00:31:35,030 --> 00:31:38,600
could bring<font color="#CCCCCC"> down</font><font color="#E5E5E5"> their networks</font><font color="#CCCCCC"> so when</font>

742
00:31:37,460 --> 00:31:41,420
you start<font color="#CCCCCC"> doing things like writing</font>

743
00:31:38,600 --> 00:31:42,439
exploits you need to test a lot and you

744
00:31:41,420 --> 00:31:43,940
need to<font color="#E5E5E5"> make sure that what you're doing</font>

745
00:31:42,440 --> 00:31:46,310
<font color="#CCCCCC">isn't going to be adding anything</font>

746
00:31:43,940 --> 00:31:48,500
negative to their performance or

747
00:31:46,310 --> 00:31:51,350
<font color="#CCCCCC">anything</font><font color="#E5E5E5"> like that in this</font><font color="#CCCCCC"> particular</font>

748
00:31:48,500 --> 00:31:53,090
<font color="#E5E5E5">case it</font><font color="#CCCCCC"> was pretty simple</font><font color="#E5E5E5"> because once</font>

749
00:31:51,350 --> 00:31:55,129
we got on we immediately restarted<font color="#E5E5E5"> our</font>

750
00:31:53,090 --> 00:31:58,280
service and they didn't<font color="#CCCCCC"> even</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> that</font>

751
00:31:55,130 --> 00:31:59,630
we<font color="#CCCCCC"> had</font><font color="#E5E5E5"> done anything make sure you get</font>

752
00:31:58,280 --> 00:32:01,520
<font color="#E5E5E5">permission and then of course once you</font>

753
00:31:59,630 --> 00:32:05,930
get permission<font color="#E5E5E5"> then you just get lots of</font>

754
00:32:01,520 --> 00:32:07,460
<font color="#E5E5E5">shells the next step of course knowing</font>

755
00:32:05,930 --> 00:32:09,710
<font color="#E5E5E5">the ramifications of what</font><font color="#CCCCCC"> you've just</font>

756
00:32:07,460 --> 00:32:10,910
<font color="#E5E5E5">done you pretty much have to realize all</font>

757
00:32:09,710 --> 00:32:13,460
right well now I got to<font color="#E5E5E5"> start</font><font color="#CCCCCC"> telling</font>

758
00:32:10,910 --> 00:32:14,630
<font color="#E5E5E5">people what happened here and</font><font color="#CCCCCC"> a lot of</font>

759
00:32:13,460 --> 00:32:17,180
<font color="#E5E5E5">times it's a</font><font color="#CCCCCC"> lot further</font><font color="#E5E5E5"> up the chain</font>

760
00:32:14,630 --> 00:32:18,500
than what you think<font color="#E5E5E5"> because a lot of</font>

761
00:32:17,180 --> 00:32:20,930
<font color="#E5E5E5">times your customer can't do</font><font color="#CCCCCC"> anything</font>

762
00:32:18,500 --> 00:32:23,270
about this<font color="#E5E5E5"> so what we've</font><font color="#CCCCCC"> noticed</font><font color="#E5E5E5"> is</font>

763
00:32:20,930 --> 00:32:25,580
depending on<font color="#E5E5E5"> the customer and how</font>

764
00:32:23,270 --> 00:32:27,889
widespread it is if<font color="#E5E5E5"> it's commercial</font>

765
00:32:25,580 --> 00:32:30,110
based you can<font color="#E5E5E5"> pretty easily just go to</font>

766
00:32:27,890 --> 00:32:32,330
<font color="#CCCCCC">us-cert and say hey</font><font color="#E5E5E5"> I found this</font><font color="#CCCCCC"> thing</font>

767
00:32:30,110 --> 00:32:34,610
with this vendor<font color="#E5E5E5"> we think it's bad news</font>

768
00:32:32,330 --> 00:32:37,220
could you reach<font color="#E5E5E5"> out</font><font color="#CCCCCC"> to them for us and</font>

769
00:32:34,610 --> 00:32:39,350
<font color="#CCCCCC">start this process because I'm</font>

770
00:32:37,220 --> 00:32:40,730
experienced so<font color="#CCCCCC"> far</font><font color="#E5E5E5"> - like a lot of</font><font color="#CCCCCC"> these</font>

771
00:32:39,350 --> 00:32:42,770
<font color="#E5E5E5">vendors they don't want to talk to you</font>

772
00:32:40,730 --> 00:32:44,780
<font color="#E5E5E5">and you can try pretty hard</font><font color="#CCCCCC"> but we've</font>

773
00:32:42,770 --> 00:32:46,420
we've been ignored pretty much every

774
00:32:44,780 --> 00:32:50,090
time we try to<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> to vendors</font><font color="#E5E5E5"> so far</font>

775
00:32:46,420 --> 00:32:50,930
but luckily<font color="#CCCCCC"> us cert somehow gets them to</font>

776
00:32:50,090 --> 00:32:52,879
talk back<font color="#E5E5E5"> and</font>

777
00:32:50,930 --> 00:32:57,260
started<font color="#CCCCCC"> actually moving</font><font color="#E5E5E5"> forward which is</font>

778
00:32:52,880 --> 00:32:59,330
<font color="#CCCCCC">great</font><font color="#E5E5E5"> if you can't let's say for example</font>

779
00:32:57,260 --> 00:33:01,700
<font color="#CCCCCC">that this isn't commercial this</font><font color="#E5E5E5"> is</font>

780
00:32:59,330 --> 00:33:04,639
actually just<font color="#CCCCCC"> got software</font><font color="#E5E5E5"> you can also</font>

781
00:33:01,700 --> 00:33:06,200
have<font color="#E5E5E5"> other</font><font color="#CCCCCC"> avenues like Cybercom for</font>

782
00:33:04,640 --> 00:33:08,590
example and they will push through

783
00:33:06,200 --> 00:33:12,260
similar things<font color="#CCCCCC"> and they will keep it</font>

784
00:33:08,590 --> 00:33:13,720
more close<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the chest since a lot of</font>

785
00:33:12,260 --> 00:33:16,370
<font color="#E5E5E5">that stuff might be sensitive</font>

786
00:33:13,720 --> 00:33:17,900
there's also<font color="#E5E5E5"> miter and this I think</font><font color="#CCCCCC"> they</font>

787
00:33:16,370 --> 00:33:21,290
all pretty much work together with us

788
00:33:17,900 --> 00:33:23,210
<font color="#CCCCCC">cert as the main reporting</font><font color="#E5E5E5"> group at</font>

789
00:33:21,290 --> 00:33:26,389
which point they will then replicate

790
00:33:23,210 --> 00:33:32,630
those disclosures<font color="#E5E5E5"> to you know all the</font>

791
00:33:26,390 --> 00:33:37,880
others<font color="#E5E5E5"> all right does anybody have any</font>

792
00:33:32,630 --> 00:33:40,270
<font color="#CCCCCC">questions anyone anyone</font><font color="#E5E5E5"> all right well</font>

793
00:33:37,880 --> 00:33:40,270
that's<font color="#E5E5E5"> all</font><font color="#CCCCCC"> I got</font>

