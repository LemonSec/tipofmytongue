1
00:00:15,810 --> 00:00:24,250
all right you can<font color="#E5E5E5"> say</font><font color="#CCCCCC"> something action</font>

2
00:00:21,430 --> 00:00:25,360
ok action let's start building<font color="#E5E5E5"> burp</font>

3
00:00:24,250 --> 00:00:27,099
<font color="#E5E5E5">extensions I'm actually gonna talk a</font>

4
00:00:25,360 --> 00:00:29,460
little bit more<font color="#CCCCCC"> than just building Burke</font>

5
00:00:27,099 --> 00:00:30,720
extensions

6
00:00:29,460 --> 00:00:34,140
there's a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit more</font><font color="#CCCCCC"> to this than</font>

7
00:00:30,720 --> 00:00:35,820
<font color="#E5E5E5">that so first of all who my senior</font>

8
00:00:34,140 --> 00:00:37,980
security consultant with secure ideas

9
00:00:35,820 --> 00:00:43,440
and for some reason my presentation is

10
00:00:37,980 --> 00:00:45,180
let's keep going I've done a lot I have

11
00:00:43,440 --> 00:00:47,250
a fairly extensive background in

12
00:00:45,180 --> 00:00:50,879
software development and then I got into

13
00:00:47,250 --> 00:00:52,440
<font color="#E5E5E5">security several years</font><font color="#CCCCCC"> ago and I can't</font>

14
00:00:50,879 --> 00:00:54,239
say I haven't<font color="#CCCCCC"> looked back since I</font>

15
00:00:52,440 --> 00:00:57,349
haven't really wanted to go back into

16
00:00:54,239 --> 00:01:00,360
pure security software development but I

17
00:00:57,350 --> 00:01:03,510
now use those skills to<font color="#E5E5E5"> build out tools</font>

18
00:01:00,360 --> 00:01:07,940
scripts so on and so forth<font color="#E5E5E5"> to make</font>

19
00:01:03,510 --> 00:01:07,940
<font color="#E5E5E5">things better for us</font><font color="#CCCCCC"> and that's</font>

20
00:01:08,060 --> 00:01:13,880
yeah open source contributor so this is

21
00:01:12,530 --> 00:01:18,409
<font color="#E5E5E5">part of the reason why I have this talk</font>

22
00:01:13,880 --> 00:01:21,530
is having to write burp extensions co2

23
00:01:18,409 --> 00:01:25,909
<font color="#E5E5E5">is one correlator is my latest one which</font>

24
00:01:21,530 --> 00:01:28,340
<font color="#CCCCCC">is I think it's pretty cool i also have</font>

25
00:01:25,909 --> 00:01:31,039
contributions into laudanum<font color="#CCCCCC"> mobis sack</font>

26
00:01:28,340 --> 00:01:33,320
samurai web testing framework 33 was

27
00:01:31,039 --> 00:01:38,119
just released it<font color="#E5E5E5"> was earlier this week</font>

28
00:01:33,320 --> 00:01:41,630
or last week so<font color="#CCCCCC"> I've done a lot</font><font color="#E5E5E5"> of that</font>

29
00:01:38,119 --> 00:01:43,039
sort<font color="#CCCCCC"> of thing and other than that</font><font color="#E5E5E5"> run</font>

30
00:01:41,630 --> 00:01:44,690
our musician and probably the most

31
00:01:43,039 --> 00:01:49,009
important point point on the slide is

32
00:01:44,690 --> 00:01:52,250
that I am a home brewer as well that's

33
00:01:49,009 --> 00:01:56,030
what I do for fun so this site has no

34
00:01:52,250 --> 00:02:00,289
title tools what I want<font color="#E5E5E5"> to do is</font>

35
00:01:56,030 --> 00:02:03,380
actually i'm talking about tools think

36
00:02:00,289 --> 00:02:04,939
about first<font color="#E5E5E5"> of all</font><font color="#CCCCCC"> i think it actually</font>

37
00:02:03,380 --> 00:02:07,250
recognize most of people<font color="#CCCCCC"> in this room</font>

38
00:02:04,939 --> 00:02:09,380
why the aren't there more people at

39
00:02:07,250 --> 00:02:10,910
our sweet talk that's what I'm saying I

40
00:02:09,380 --> 00:02:13,180
don't know people realize what the

41
00:02:10,910 --> 00:02:15,410
you can do with this tool I don't know I

42
00:02:13,180 --> 00:02:16,910
mean<font color="#E5E5E5"> that's what that's what we're</font>

43
00:02:15,410 --> 00:02:20,810
talking about we can go get more people

44
00:02:16,910 --> 00:02:22,190
I<font color="#E5E5E5"> will dude burp suite is hot yes maybe</font>

45
00:02:20,810 --> 00:02:25,670
I should<font color="#CCCCCC"> have in your title what the</font>

46
00:02:22,190 --> 00:02:30,859
 can you use maybe then would have

47
00:02:25,670 --> 00:02:34,518
filled through a little better yeah so

48
00:02:30,859 --> 00:02:36,260
tools what I wanted to do is start off

49
00:02:34,519 --> 00:02:38,989
with just think about all of the tools

50
00:02:36,260 --> 00:02:44,200
that you use when you're conducting pen

51
00:02:38,989 --> 00:02:44,200
tests and where those tools come from

52
00:02:44,850 --> 00:02:49,799
and probably some of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> tools that</font>

53
00:02:47,550 --> 00:02:53,430
you're<font color="#E5E5E5"> thinking about are on this slide</font>

54
00:02:49,800 --> 00:02:55,680
here somewhere so the<font color="#CCCCCC"> next question is</font>

55
00:02:53,430 --> 00:02:58,050
what do all of these tools other than

56
00:02:55,680 --> 00:02:59,660
the fact that they are used for pen

57
00:02:58,050 --> 00:03:06,450
testing what do<font color="#E5E5E5"> they all have in common</font>

58
00:02:59,660 --> 00:03:12,240
and the answer is they're all free or

59
00:03:06,450 --> 00:03:13,649
more people coming in<font color="#E5E5E5"> okay let me just</font>

60
00:03:12,240 --> 00:03:15,630
<font color="#CCCCCC">back up one side what we're talking</font>

61
00:03:13,650 --> 00:03:18,930
about is the stuff that<font color="#E5E5E5"> we do for pen</font>

62
00:03:15,630 --> 00:03:20,460
testing here's some of it<font color="#CCCCCC"> right seeing</font>

63
00:03:18,930 --> 00:03:22,380
some<font color="#CCCCCC"> of these tools before they're</font><font color="#E5E5E5"> all</font>

64
00:03:20,460 --> 00:03:24,480
free or they have free versions or

65
00:03:22,380 --> 00:03:27,510
community versions and that's<font color="#E5E5E5"> really</font>

66
00:03:24,480 --> 00:03:32,160
what<font color="#E5E5E5"> I the crux of this this talk is</font>

67
00:03:27,510 --> 00:03:34,530
about is a lot of what we rely<font color="#E5E5E5"> on to do</font>

68
00:03:32,160 --> 00:03:41,120
our jobs is free stuff we like free

69
00:03:34,530 --> 00:03:45,270
stuff right no you don't like free stuff

70
00:03:41,120 --> 00:03:48,240
<font color="#E5E5E5">okay so we like free stuff and but it's</font>

71
00:03:45,270 --> 00:03:50,250
<font color="#CCCCCC">not really free i mean it's it's free to</font>

72
00:03:48,240 --> 00:03:53,130
everyone who's using it<font color="#E5E5E5"> it's free as in</font>

73
00:03:50,250 --> 00:03:55,740
beer but somebody has to put in all the

74
00:03:53,130 --> 00:03:57,930
effort right we have to<font color="#CCCCCC"> actually get</font>

75
00:03:55,740 --> 00:03:59,190
down we have to figure out<font color="#E5E5E5"> how we're</font>

76
00:03:57,930 --> 00:04:00,960
going to write that code that's going to

77
00:03:59,190 --> 00:04:03,030
automate this test or how do we write

78
00:04:00,960 --> 00:04:05,370
this script and so on and so forth in

79
00:04:03,030 --> 00:04:07,650
the case of this talk how how we're

80
00:04:05,370 --> 00:04:10,460
going to write a<font color="#E5E5E5"> burp extension that's</font>

81
00:04:07,650 --> 00:04:14,300
going to solve some problem for us so

82
00:04:10,460 --> 00:04:16,890
that's basically what<font color="#CCCCCC"> I wanted to get to</font>

83
00:04:14,300 --> 00:04:19,170
so let's<font color="#E5E5E5"> start off with birth as anybody</font>

84
00:04:16,890 --> 00:04:21,060
everybody know what purpose yeah

85
00:04:19,170 --> 00:04:22,650
everyone's<font color="#E5E5E5"> on their head good so I don't</font>

86
00:04:21,060 --> 00:04:24,990
<font color="#CCCCCC">really have to talk about</font><font color="#E5E5E5"> this slide too</font>

87
00:04:22,650 --> 00:04:27,030
much there<font color="#CCCCCC"> is a free version of birth</font>

88
00:04:24,990 --> 00:04:30,450
which is good we like free it's an

89
00:04:27,030 --> 00:04:32,489
interception proxy does a bunch of

90
00:04:30,450 --> 00:04:36,780
things the one that we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> talk</font>

91
00:04:32,490 --> 00:04:40,060
about is<font color="#CCCCCC"> the one at the very</font><font color="#E5E5E5"> end the</font>

92
00:04:36,780 --> 00:04:44,440
last arrow there an extender right

93
00:04:40,060 --> 00:04:45,940
not<font color="#CCCCCC"> co2 new</font><font color="#E5E5E5"> extender is part of her so</font>

94
00:04:44,440 --> 00:04:47,560
<font color="#CCCCCC">what I'm</font><font color="#E5E5E5"> saying you can build you can</font>

95
00:04:45,940 --> 00:04:50,410
you can build extensions in burp on the

96
00:04:47,560 --> 00:04:51,370
free version<font color="#E5E5E5"> camp and they have this</font>

97
00:04:50,410 --> 00:04:54,630
<font color="#CCCCCC">thing in there</font><font color="#E5E5E5"> and i'll show</font><font color="#CCCCCC"> it</font>

98
00:04:51,370 --> 00:04:56,889
afterwards the app store which<font color="#CCCCCC"> is</font>

99
00:04:54,630 --> 00:04:58,510
basically a marketplace although

100
00:04:56,889 --> 00:05:02,290
everything on there is free for

101
00:04:58,510 --> 00:05:04,330
extensions and it will tell you on<font color="#CCCCCC"> the</font>

102
00:05:02,290 --> 00:05:06,130
extension which<font color="#E5E5E5"> one's only work with the</font>

103
00:05:04,330 --> 00:05:11,979
pro version and which work with both the

104
00:05:06,130 --> 00:05:13,780
free and the pro version<font color="#CCCCCC"> okay so burp</font>

105
00:05:11,980 --> 00:05:15,760
extensions if you're going to<font color="#E5E5E5"> write a</font>

106
00:05:13,780 --> 00:05:19,260
bit extension fortunately you have

107
00:05:15,760 --> 00:05:21,430
options<font color="#E5E5E5"> you don't have to only know</font><font color="#CCCCCC"> Java</font>

108
00:05:19,260 --> 00:05:23,680
you can write them into Ruby if you

109
00:05:21,430 --> 00:05:25,810
really want to<font color="#E5E5E5"> I don't know if we have</font>

110
00:05:23,680 --> 00:05:29,139
<font color="#CCCCCC">any Ruby people in the room I don't</font><font color="#E5E5E5"> I</font>

111
00:05:25,810 --> 00:05:30,760
really dislike Ruby so ya know<font color="#E5E5E5"> I hate</font>

112
00:05:29,139 --> 00:05:31,750
dealing with gems every time<font color="#E5E5E5"> I install</font>

113
00:05:30,760 --> 00:05:34,120
anything with Ruby I don't know if you

114
00:05:31,750 --> 00:05:36,700
run into this is always yeah you got the

115
00:05:34,120 --> 00:05:41,470
<font color="#E5E5E5">wrong gems installed or some point 1 1 2</font>

116
00:05:36,700 --> 00:05:44,229
<font color="#E5E5E5">3 2 a yeah so now I got to figure out</font>

117
00:05:41,470 --> 00:05:47,890
<font color="#CCCCCC">how</font><font color="#E5E5E5"> to fix this thing and yeah I hate</font>

118
00:05:44,229 --> 00:05:51,130
Dillon threw me python is an option you

119
00:05:47,890 --> 00:05:52,690
<font color="#E5E5E5">can it has a jivonne wrapped around it</font>

120
00:05:51,130 --> 00:05:54,280
you do have to actually download jai

121
00:05:52,690 --> 00:05:56,410
thumb it's a java version of python

122
00:05:54,280 --> 00:05:58,630
basically because earth itself is

123
00:05:56,410 --> 00:06:00,039
written in<font color="#E5E5E5"> java so that's the</font><font color="#CCCCCC"> reason why</font>

124
00:05:58,630 --> 00:06:03,190
these other things they work in sort of

125
00:06:00,039 --> 00:06:04,990
a container inside of<font color="#CCCCCC"> java and then</font>

126
00:06:03,190 --> 00:06:06,840
there's<font color="#CCCCCC"> Java itself and I'm going</font><font color="#E5E5E5"> to</font>

127
00:06:04,990 --> 00:06:09,789
focus on<font color="#E5E5E5"> Java for a couple of reasons</font>

128
00:06:06,840 --> 00:06:13,770
one is burp itself is written in Java it

129
00:06:09,789 --> 00:06:15,789
inherently the it works better with

130
00:06:13,770 --> 00:06:17,139
extensions than it does with these other

131
00:06:15,789 --> 00:06:20,110
languages there are some issues with

132
00:06:17,139 --> 00:06:23,039
them and you'll you'll actually see if

133
00:06:20,110 --> 00:06:27,610
you look at<font color="#CCCCCC"> the port swagger website</font>

134
00:06:23,039 --> 00:06:29,050
home<font color="#CCCCCC"> of burp you'll see there's</font>

135
00:06:27,610 --> 00:06:32,260
instructions on there for making this

136
00:06:29,050 --> 00:06:34,660
work better with Python or Ruby which

137
00:06:32,260 --> 00:06:37,300
involves actually increasing your memory

138
00:06:34,660 --> 00:06:40,650
heap because they tend to actually use a

139
00:06:37,300 --> 00:06:43,180
extra memory and not release it ever so

140
00:06:40,650 --> 00:06:44,739
it can be if<font color="#E5E5E5"> you're just running one or</font>

141
00:06:43,180 --> 00:06:46,840
two and it's not not<font color="#E5E5E5"> usually a problem</font>

142
00:06:44,740 --> 00:06:49,510
but<font color="#E5E5E5"> if you're running a lot</font><font color="#CCCCCC"> of Python or</font>

143
00:06:46,840 --> 00:06:51,520
Ruby based extensions it can

144
00:06:49,510 --> 00:06:55,480
actually exhausts all of the memory<font color="#CCCCCC"> on</font>

145
00:06:51,520 --> 00:07:04,320
your in your burp instance and make it

146
00:06:55,480 --> 00:07:06,520
crash so that's not good so all right so

147
00:07:04,320 --> 00:07:13,630
what we're going to be talking about is

148
00:07:06,520 --> 00:07:15,430
is<font color="#CCCCCC"> Java and to do that hang on second we</font>

149
00:07:13,630 --> 00:07:18,790
<font color="#CCCCCC">need to use I just realized one of my</font>

150
00:07:15,430 --> 00:07:23,200
slides is out of order it's free Java is

151
00:07:18,790 --> 00:07:25,870
free that's good<font color="#CCCCCC"> I have I built a test</font>

152
00:07:23,200 --> 00:07:27,520
case here so this<font color="#CCCCCC"> is a scenario it's a</font>

153
00:07:25,870 --> 00:07:29,380
mechanism that's similar to something

154
00:07:27,520 --> 00:07:34,060
I've run into a couple of<font color="#E5E5E5"> times recently</font>

155
00:07:29,380 --> 00:07:36,490
on Penn tests and is the mechanism isn't

156
00:07:34,060 --> 00:07:38,470
username harvestin<font color="#CCCCCC"> I just made it into a</font>

157
00:07:36,490 --> 00:07:41,470
familiar form the<font color="#E5E5E5"> mechanism</font><font color="#CCCCCC"> is actually</font>

158
00:07:38,470 --> 00:07:43,510
a nonce type of mechanism where you

159
00:07:41,470 --> 00:07:45,160
can't<font color="#E5E5E5"> simply send requests through a</font>

160
00:07:43,510 --> 00:07:47,800
fuzzer like burp intruder it just won't

161
00:07:45,160 --> 00:07:49,200
work right out of the box so we<font color="#E5E5E5"> have to</font>

162
00:07:47,800 --> 00:07:52,240
come up with a way to solve that problem

163
00:07:49,200 --> 00:07:54,130
so<font color="#CCCCCC"> Emily</font><font color="#E5E5E5"> actually this would probably be</font>

164
00:07:52,240 --> 00:08:00,660
<font color="#E5E5E5">easier if I just show it so</font><font color="#CCCCCC"> hopefully</font>

165
00:07:54,130 --> 00:08:03,770
everything just works on here so yeah

166
00:08:00,660 --> 00:08:03,770
can everyone see that

167
00:08:05,180 --> 00:08:12,419
so<font color="#E5E5E5"> I have this this login screen here</font>

168
00:08:08,009 --> 00:08:14,749
and if<font color="#E5E5E5"> you type you type in a username</font>

169
00:08:12,419 --> 00:08:14,748
and a password

170
00:08:21,849 --> 00:08:28,058
they're<font color="#E5E5E5"> okay there we</font><font color="#CCCCCC"> go it woke up so I</font>

171
00:08:25,270 --> 00:08:30,219
typed in a user<font color="#E5E5E5"> that doesn't exist in</font>

172
00:08:28,059 --> 00:08:33,490
the system and it comes back<font color="#E5E5E5"> with this</font>

173
00:08:30,219 --> 00:08:35,049
message no user session no session you

174
00:08:33,490 --> 00:08:37,479
use your session with that user<font color="#CCCCCC"> okay if</font>

175
00:08:35,049 --> 00:08:40,088
i type in i have<font color="#CCCCCC"> a test user account</font>

176
00:08:37,479 --> 00:08:44,050
that<font color="#E5E5E5"> i've created in here so this user</font>

177
00:08:40,089 --> 00:08:45,160
is in the system<font color="#CCCCCC"> and if you put</font><font color="#E5E5E5"> that one</font>

178
00:08:44,049 --> 00:08:47,139
in you actually get a<font color="#E5E5E5"> different message</font>

179
00:08:45,160 --> 00:08:49,889
so this looks<font color="#E5E5E5"> like a very classic</font>

180
00:08:47,139 --> 00:08:52,149
username harvesting type of flaw right

181
00:08:49,889 --> 00:08:54,699
so let's pop over to burp<font color="#CCCCCC"> i'm running</font>

182
00:08:52,149 --> 00:09:04,959
everything through burke and we'll<font color="#E5E5E5"> take</font>

183
00:08:54,699 --> 00:09:07,779
a look and<font color="#E5E5E5"> see what's happening there's</font>

184
00:09:04,959 --> 00:09:10,479
the problem<font color="#CCCCCC"> okay for some reason I don't</font>

185
00:09:07,779 --> 00:09:15,040
know<font color="#E5E5E5"> why</font><font color="#CCCCCC"> but hope seems to think that</font>

186
00:09:10,480 --> 00:09:19,329
the JSON stuff has tits it's a script

187
00:09:15,040 --> 00:09:20,889
response<font color="#E5E5E5"> I'm not sure why so what's</font>

188
00:09:19,329 --> 00:09:24,779
actually happening when I did these two

189
00:09:20,889 --> 00:09:31,389
logins<font color="#E5E5E5"> we see that the first request</font>

190
00:09:24,779 --> 00:09:34,060
let's go back to ya so here's the<font color="#CCCCCC"> first</font>

191
00:09:31,389 --> 00:09:36,370
request that<font color="#E5E5E5"> I sent with user equals</font>

192
00:09:34,060 --> 00:09:39,869
user and what it's doing is it's making

193
00:09:36,370 --> 00:09:42,550
its making a request for a nonce and

194
00:09:39,870 --> 00:09:45,449
then on a second request when it logs in

195
00:09:42,550 --> 00:09:48,250
I don't know if you can see this but the

196
00:09:45,449 --> 00:09:52,359
what's being submitted is the username

197
00:09:48,250 --> 00:09:53,740
again the<font color="#E5E5E5"> password and the nonce so on</font>

198
00:09:52,360 --> 00:09:56,380
the nonce recently there's the nonce

199
00:09:53,740 --> 00:09:59,500
around the response comes back as a<font color="#CCCCCC"> JSON</font>

200
00:09:56,380 --> 00:10:01,060
some kind<font color="#E5E5E5"> of strength question</font>

201
00:09:59,500 --> 00:10:02,980
I<font color="#CCCCCC"> rent work I don't know very much about</font>

202
00:10:01,060 --> 00:10:05,410
it but I flavor with recently yeah I

203
00:10:02,980 --> 00:10:07,510
always<font color="#E5E5E5"> do intercept and I'm really noisy</font>

204
00:10:05,410 --> 00:10:10,750
websites it's<font color="#CCCCCC"> linked as I put forward</font>

205
00:10:07,510 --> 00:10:12,280
<font color="#CCCCCC">yeah been able to just grab what you're</font>

206
00:10:10,750 --> 00:10:14,910
grabbing we're not having to interact

207
00:10:12,280 --> 00:10:19,920
and it slows it down you know

208
00:10:14,910 --> 00:10:22,530
yeah so it's a<font color="#E5E5E5"> great question so when</font>

209
00:10:19,920 --> 00:10:25,860
you're using<font color="#CCCCCC"> burp suite</font><font color="#E5E5E5"> want to see</font>

210
00:10:22,530 --> 00:10:28,079
right click copy is girl<font color="#CCCCCC"> can replay and</font>

211
00:10:25,860 --> 00:10:30,170
<font color="#E5E5E5">right in which case you're actually</font>

212
00:10:28,080 --> 00:10:32,400
using<font color="#E5E5E5"> the wrong tool inside a burp</font>

213
00:10:30,170 --> 00:10:33,810
there's a there's a different way to do

214
00:10:32,400 --> 00:10:38,640
that and<font color="#E5E5E5"> I'm actually going to show that</font>

215
00:10:33,810 --> 00:10:40,560
<font color="#CCCCCC">right now so first of all when the first</font>

216
00:10:38,640 --> 00:10:42,330
thing<font color="#CCCCCC"> you do anybody</font><font color="#E5E5E5"> does when they get</font>

217
00:10:40,560 --> 00:10:46,400
into<font color="#E5E5E5"> burb once they know what they're</font>

218
00:10:42,330 --> 00:10:48,750
doing is they turn off the intercept

219
00:10:46,400 --> 00:10:50,579
over here there's intercept you'll

220
00:10:48,750 --> 00:10:52,380
notice<font color="#CCCCCC"> that it's off and if</font><font color="#E5E5E5"> you go over</font>

221
00:10:50,580 --> 00:10:54,810
to options and scroll all the way down

222
00:10:52,380 --> 00:10:56,340
to<font color="#CCCCCC"> the bottom there's a enable</font>

223
00:10:54,810 --> 00:10:58,619
interception on startup and you can

224
00:10:56,340 --> 00:11:00,150
change<font color="#E5E5E5"> that to always disabled for some</font>

225
00:10:58,620 --> 00:11:01,980
reason that's<font color="#E5E5E5"> the default that the</font>

226
00:11:00,150 --> 00:11:03,720
developer put in there and has never

227
00:11:01,980 --> 00:11:04,920
changed despite everybody telling them

228
00:11:03,720 --> 00:11:10,500
that that's<font color="#E5E5E5"> not the way that you should</font>

229
00:11:04,920 --> 00:11:12,930
be using this tool so so what you want

230
00:11:10,500 --> 00:11:15,810
to do<font color="#E5E5E5"> instead is capture your history</font>

231
00:11:12,930 --> 00:11:17,370
like I<font color="#E5E5E5"> just did here okay and you notice</font>

232
00:11:15,810 --> 00:11:19,229
that<font color="#E5E5E5"> I mean there's this target tab</font>

233
00:11:17,370 --> 00:11:22,410
that's<font color="#E5E5E5"> the other thing too so this gives</font>

234
00:11:19,230 --> 00:11:26,610
you a site map of what's going<font color="#E5E5E5"> on it has</font>

235
00:11:22,410 --> 00:11:27,750
its use but most of the time i use just

236
00:11:26,610 --> 00:11:29,280
the<font color="#E5E5E5"> history tab because everything</font>

237
00:11:27,750 --> 00:11:30,990
happens in order that here it's a lot

238
00:11:29,280 --> 00:11:33,420
easier concert without me having to

239
00:11:30,990 --> 00:11:35,340
forward and<font color="#CCCCCC"> drop yeah it captures it</font>

240
00:11:33,420 --> 00:11:38,760
here in this history lot bug so now you

241
00:11:35,340 --> 00:11:40,140
have<font color="#E5E5E5"> everything yep everything that</font>

242
00:11:38,760 --> 00:11:41,550
every requests that proxies through<font color="#CCCCCC"> i</font>

243
00:11:40,140 --> 00:11:43,530
have these actually filtered right now

244
00:11:41,550 --> 00:11:46,170
so I'm<font color="#E5E5E5"> not showing CSS or images or</font>

245
00:11:43,530 --> 00:11:47,490
anything else so it's a filtered version

246
00:11:46,170 --> 00:11:48,810
of that<font color="#E5E5E5"> list but it captures every</font>

247
00:11:47,490 --> 00:11:50,790
single request and response that goes

248
00:11:48,810 --> 00:11:53,099
through<font color="#E5E5E5"> the proxy and then what you</font><font color="#CCCCCC"> can</font>

249
00:11:50,790 --> 00:11:56,760
do is you can right click and send one

250
00:11:53,100 --> 00:11:58,770
over to repeater ok and the repeater

251
00:11:56,760 --> 00:12:00,540
that's where you can modify request and

252
00:11:58,770 --> 00:12:02,730
send it<font color="#E5E5E5"> and get a response sent to get a</font>

253
00:12:00,540 --> 00:12:05,339
<font color="#E5E5E5">response the browser is no longer part</font>

254
00:12:02,730 --> 00:12:07,680
of the equation right you can just

255
00:12:05,340 --> 00:12:10,410
modify the raw request so that's what

256
00:12:07,680 --> 00:12:11,829
you<font color="#E5E5E5"> probably want to be doing so in this</font>

257
00:12:10,410 --> 00:12:14,890
case here

258
00:12:11,830 --> 00:12:17,770
if<font color="#E5E5E5"> I hit go on this it responds back</font>

259
00:12:14,890 --> 00:12:19,900
with the knots if I go again it responds

260
00:12:17,770 --> 00:12:23,410
back with a different knots so we can

261
00:12:19,900 --> 00:12:25,300
see there in the response rate so

262
00:12:23,410 --> 00:12:26,920
question is we have a username

263
00:12:25,300 --> 00:12:30,010
harvesting fall let's say<font color="#CCCCCC"> that we have a</font>

264
00:12:26,920 --> 00:12:32,589
list of users and we want to run this

265
00:12:30,010 --> 00:12:34,600
list through and see how many these

266
00:12:32,590 --> 00:12:36,130
users are actually in the system<font color="#CCCCCC"> so how</font>

267
00:12:34,600 --> 00:12:37,840
are<font color="#E5E5E5"> we going to do this there's a couple</font>

268
00:12:36,130 --> 00:12:39,040
<font color="#E5E5E5">of ways one is you could pull up Python</font>

269
00:12:37,840 --> 00:12:41,590
which is probably what I would normally

270
00:12:39,040 --> 00:12:42,910
do in this situation it's just write a

271
00:12:41,590 --> 00:12:44,080
quick python script to do it<font color="#E5E5E5"> but I</font>

272
00:12:42,910 --> 00:12:51,180
wanted to<font color="#E5E5E5"> show something with a birth</font>

273
00:12:44,080 --> 00:12:54,070
extension so we'll do<font color="#CCCCCC"> that so and</font>

274
00:12:51,180 --> 00:12:58,780
actually before<font color="#E5E5E5"> I get into that let me</font>

275
00:12:54,070 --> 00:13:03,310
just for completeness I'll show the

276
00:12:58,780 --> 00:13:07,270
login same thing I'm running it<font color="#E5E5E5"> through</font>

277
00:13:03,310 --> 00:13:08,650
repeater but I haven't changed the<font color="#CCCCCC"> nun</font>

278
00:13:07,270 --> 00:13:10,960
so it's going<font color="#E5E5E5"> to say no user session</font>

279
00:13:08,650 --> 00:13:14,199
with that user and even if i put in test

280
00:13:10,960 --> 00:13:17,440
for the user which we already tested on

281
00:13:14,200 --> 00:13:19,480
the actual interface and<font color="#E5E5E5"> i hit go there</font>

282
00:13:17,440 --> 00:13:21,190
<font color="#E5E5E5">i'm still going to get new user session</font>

283
00:13:19,480 --> 00:13:24,670
with that user so unless we get the

284
00:13:21,190 --> 00:13:26,500
knots correct it's going to always

285
00:13:24,670 --> 00:13:27,670
respond the same way and that's not what

286
00:13:26,500 --> 00:13:28,840
<font color="#E5E5E5">about what we're looking for we want</font>

287
00:13:27,670 --> 00:13:33,240
<font color="#E5E5E5">something is going to tell us whether or</font>

288
00:13:28,840 --> 00:13:33,240
not the users in system so

289
00:13:34,769 --> 00:13:38,070
to do that

290
00:13:43,649 --> 00:13:47,699
so to do that we're going to<font color="#E5E5E5"> write a</font>

291
00:13:45,089 --> 00:13:49,350
burp extension how do you<font color="#E5E5E5"> do that first</font>

292
00:13:47,699 --> 00:13:53,969
you need to pick<font color="#E5E5E5"> your language Ruby</font>

293
00:13:49,350 --> 00:13:57,569
Python or Java is what we're going to do

294
00:13:53,970 --> 00:14:02,040
so for Java best to let their to use is

295
00:13:57,569 --> 00:14:04,378
intelligent IntelliJ the reason there's

296
00:14:02,040 --> 00:14:07,230
a couple reasons for this first<font color="#E5E5E5"> of all</font>

297
00:14:04,379 --> 00:14:09,449
this is the<font color="#E5E5E5"> tool that ports burger uses</font>

298
00:14:07,230 --> 00:14:10,679
to build burp I asked them<font color="#E5E5E5"> about this</font>

299
00:14:09,449 --> 00:14:13,498
this is this<font color="#E5E5E5"> is their integrated</font>

300
00:14:10,679 --> 00:14:14,939
development environment so<font color="#E5E5E5"> we know that</font>

301
00:14:13,499 --> 00:14:16,800
it works it provides an easy

302
00:14:14,939 --> 00:14:19,879
drag-and-drop way to make interfaces for

303
00:14:16,800 --> 00:14:21,990
those of you who have seen<font color="#E5E5E5"> co2 before</font>

304
00:14:19,879 --> 00:14:24,809
that entire interface was built

305
00:14:21,990 --> 00:14:26,610
<font color="#CCCCCC">drag-and-drop</font><font color="#E5E5E5"> I didn't have to write any</font>

306
00:14:24,809 --> 00:14:27,629
custom code for that it was<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> the</font>

307
00:14:26,610 --> 00:14:30,179
interface<font color="#CCCCCC"> Park was pretty</font>

308
00:14:27,629 --> 00:14:31,829
straightforward hooking up all the logic

309
00:14:30,179 --> 00:14:35,759
took a little bit<font color="#E5E5E5"> more effort but the</font>

310
00:14:31,829 --> 00:14:37,859
interface wasn't too bad so we want<font color="#E5E5E5"> to</font>

311
00:14:35,759 --> 00:14:40,139
do<font color="#E5E5E5"> it that's that's one reason sep one</font>

312
00:14:37,860 --> 00:14:43,649
is they have a free community version

313
00:14:40,139 --> 00:14:45,269
and we like free so it's a commercial

314
00:14:43,649 --> 00:14:47,699
tool the community version works just

315
00:14:45,269 --> 00:14:50,420
fine it's not disabled in any way<font color="#CCCCCC"> that</font>

316
00:14:47,699 --> 00:14:54,990
prevents us from writing burp extensions

317
00:14:50,420 --> 00:14:58,740
so works well so the first<font color="#CCCCCC"> thing we want</font>

318
00:14:54,990 --> 00:15:02,100
<font color="#E5E5E5">to do is we create a new project in</font>

319
00:14:58,740 --> 00:15:03,779
<font color="#E5E5E5">there and then once you create the</font>

320
00:15:02,100 --> 00:15:06,059
project so I'm actually calling this one

321
00:15:03,779 --> 00:15:09,600
a nonce payload processor and<font color="#E5E5E5"> I'll get</font>

322
00:15:06,059 --> 00:15:11,129
<font color="#E5E5E5">to why we're calling it that shortly but</font>

323
00:15:09,600 --> 00:15:13,559
<font color="#E5E5E5">what we need to do is we</font><font color="#CCCCCC"> need actually</font>

324
00:15:11,129 --> 00:15:17,370
include the<font color="#E5E5E5"> Rope libraries now if you're</font>

325
00:15:13,559 --> 00:15:19,949
writing<font color="#CCCCCC"> this if you're writing</font><font color="#E5E5E5"> it as a</font>

326
00:15:17,370 --> 00:15:21,720
Python or<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't know about the Ruby</font>

327
00:15:19,949 --> 00:15:23,639
actually but I know<font color="#E5E5E5"> for Python you don't</font>

328
00:15:21,720 --> 00:15:24,839
have to go through this type of step you

329
00:15:23,639 --> 00:15:28,470
can<font color="#E5E5E5"> just start writing your Python</font>

330
00:15:24,839 --> 00:15:30,209
script and you just subclass the same

331
00:15:28,470 --> 00:15:31,259
classes<font color="#CCCCCC"> that are in the API the API</font>

332
00:15:30,209 --> 00:15:35,429
doesn't change no matter what language

333
00:15:31,259 --> 00:15:38,040
you're using so but anyway what we'll do

334
00:15:35,429 --> 00:15:39,420
in this case so we<font color="#E5E5E5"> create a project and</font>

335
00:15:38,040 --> 00:15:42,599
<font color="#E5E5E5">then we what we need to do is add an</font>

336
00:15:39,420 --> 00:15:44,160
additional module because<font color="#E5E5E5"> in order for</font>

337
00:15:42,600 --> 00:15:46,490
everything to compile it needs to be

338
00:15:44,160 --> 00:15:48,800
<font color="#CCCCCC">able to see the burp api's</font>

339
00:15:46,490 --> 00:15:51,260
alright so what you'll do is you'll

340
00:15:48,800 --> 00:15:56,270
create this other module call it burp

341
00:15:51,260 --> 00:16:01,430
epi or whatever you want and then hook

342
00:15:56,270 --> 00:16:03,170
that<font color="#E5E5E5"> up so that it basically your your</font>

343
00:16:01,430 --> 00:16:05,029
structure looks like this window down

344
00:16:03,170 --> 00:16:09,380
here afterwards so you have two modules

345
00:16:05,029 --> 00:16:11,510
one is the interfaces and then the

346
00:16:09,380 --> 00:16:18,980
second<font color="#CCCCCC"> one is the</font><font color="#E5E5E5"> your actual code in a</font>

347
00:16:11,510 --> 00:16:21,290
rate which is<font color="#E5E5E5"> right now is empty now</font>

348
00:16:18,980 --> 00:16:23,209
where do we get the<font color="#E5E5E5"> baby is from there</font>

349
00:16:21,290 --> 00:16:24,920
actually insider that's the easiest way

350
00:16:23,209 --> 00:16:27,770
to get to them so you<font color="#E5E5E5"> just go to the</font>

351
00:16:24,920 --> 00:16:29,750
burp extender<font color="#CCCCCC"> epi stab and then you'll</font>

352
00:16:27,770 --> 00:16:32,689
see down at the bottom I don't know if I

353
00:16:29,750 --> 00:16:34,820
<font color="#E5E5E5">could yeah there we go down at the</font>

354
00:16:32,690 --> 00:16:36,470
bottom you have two<font color="#CCCCCC"> buttons one is for</font>

355
00:16:34,820 --> 00:16:38,510
the javadoc files so you can save those

356
00:16:36,470 --> 00:16:42,080
locally and the other one is safe

357
00:16:38,510 --> 00:16:45,260
interface files so what you'll do is

358
00:16:42,080 --> 00:16:48,770
take those save them into that burp<font color="#E5E5E5"> API</font>

359
00:16:45,260 --> 00:16:51,800
folder and<font color="#E5E5E5"> it's best practice to do this</font>

360
00:16:48,770 --> 00:16:53,990
each time because the API is changed

361
00:16:51,800 --> 00:16:57,939
with the version so you<font color="#CCCCCC"> want to make</font>

362
00:16:53,990 --> 00:16:57,940
sure that<font color="#CCCCCC"> you have the latest version</font>

363
00:16:59,860 --> 00:17:04,339
once<font color="#E5E5E5"> that's in there you open up your</font>

364
00:17:02,390 --> 00:17:05,959
<font color="#E5E5E5">module settings I know this is kind of</font>

365
00:17:04,339 --> 00:17:07,220
technical but if you're looking<font color="#CCCCCC"> to do</font>

366
00:17:05,959 --> 00:17:09,980
<font color="#E5E5E5">this later on you can go back</font><font color="#CCCCCC"> to this</font>

367
00:17:07,220 --> 00:17:12,199
video and figure out how so open the

368
00:17:09,980 --> 00:17:16,579
module settings and what you want to do

369
00:17:12,199 --> 00:17:18,170
is go into the the adds a little bit

370
00:17:16,579 --> 00:17:22,250
hard to see here the nonce payload

371
00:17:18,170 --> 00:17:28,510
processor module inside of intelligent

372
00:17:22,250 --> 00:17:32,600
and make<font color="#CCCCCC"> sure that your burp ap</font><font color="#E5E5E5"> is our</font>

373
00:17:28,510 --> 00:17:34,690
our dependency of building your your

374
00:17:32,600 --> 00:17:37,779
actual extension

375
00:17:34,690 --> 00:17:39,370
<font color="#E5E5E5">okay so the reason we do this is that</font>

376
00:17:37,779 --> 00:17:41,470
way everything compiles that means your

377
00:17:39,370 --> 00:17:43,120
<font color="#E5E5E5">extension can actually see all of the</font>

378
00:17:41,470 --> 00:17:47,470
interfaces that you're using from birth

379
00:17:43,120 --> 00:17:49,330
so one more step in the configuration

380
00:17:47,470 --> 00:17:52,269
then it gets on to the<font color="#E5E5E5"> actual fun stuff</font>

381
00:17:49,330 --> 00:17:54,460
so the last thing that<font color="#E5E5E5"> you want to do is</font>

382
00:17:52,269 --> 00:17:58,350
go into the artifacts tab this is still

383
00:17:54,460 --> 00:18:01,929
under<font color="#CCCCCC"> the module settings and and</font>

384
00:17:58,350 --> 00:18:05,949
basically set it up so that it creates

385
00:18:01,929 --> 00:18:07,690
down here you have this build on make

386
00:18:05,950 --> 00:18:11,080
you want what<font color="#E5E5E5"> you want to do is</font><font color="#CCCCCC"> you want</font>

387
00:18:07,690 --> 00:18:12,610
<font color="#E5E5E5">to create a jar file that's the artifact</font>

388
00:18:11,080 --> 00:18:14,678
that the jar file is what you're going

389
00:18:12,610 --> 00:18:17,918
<font color="#E5E5E5">to upload</font><font color="#CCCCCC"> to burp so that it has the</font>

390
00:18:14,679 --> 00:18:19,629
extension so that's how<font color="#CCCCCC"> it's packaged so</font>

391
00:18:17,919 --> 00:18:22,120
you can once you set all of this up

392
00:18:19,629 --> 00:18:23,799
<font color="#E5E5E5">inside of IntelliJ it basically run make</font>

393
00:18:22,120 --> 00:18:26,139
it automatically compiled everything

394
00:18:23,799 --> 00:18:34,539
creates the jar file and it's ready<font color="#E5E5E5"> to</font>

395
00:18:26,139 --> 00:18:36,519
import into birth so okay<font color="#CCCCCC"> so taking a</font>

396
00:18:34,539 --> 00:18:37,690
step back let's think about the problem

397
00:18:36,519 --> 00:18:39,850
<font color="#E5E5E5">that we're trying</font><font color="#CCCCCC"> to solve now that we</font>

398
00:18:37,690 --> 00:18:42,929
have our project structure in place and

399
00:18:39,850 --> 00:18:45,399
the problem is we want<font color="#E5E5E5"> to be able to</font>

400
00:18:42,929 --> 00:18:46,960
capture a nonce so that we can submit

401
00:18:45,399 --> 00:18:48,779
that into a login form so<font color="#CCCCCC"> we can</font>

402
00:18:46,960 --> 00:18:52,629
<font color="#E5E5E5">determine whether or not the user exists</font>

403
00:18:48,779 --> 00:18:54,309
so to do that we're going<font color="#CCCCCC"> to need</font><font color="#E5E5E5"> some</font>

404
00:18:52,629 --> 00:18:55,449
help from we need to have some way to

405
00:18:54,309 --> 00:18:57,399
plug into it so they have these

406
00:18:55,450 --> 00:19:05,289
interfaces that have been set up<font color="#E5E5E5"> in the</font>

407
00:18:57,399 --> 00:19:07,029
API and that the<font color="#CCCCCC"> the main</font><font color="#E5E5E5"> one that we're</font>

408
00:19:05,289 --> 00:19:09,279
<font color="#CCCCCC">going to</font><font color="#E5E5E5"> use is this one here I burp</font>

409
00:19:07,029 --> 00:19:11,259
extender<font color="#CCCCCC"> so if you're building</font><font color="#E5E5E5"> a burp</font>

410
00:19:09,279 --> 00:19:13,919
extension it's weird that is called<font color="#E5E5E5"> I</font>

411
00:19:11,259 --> 00:19:18,090
burp<font color="#E5E5E5"> extender not I burp extension but</font>

412
00:19:13,919 --> 00:19:21,340
that's what<font color="#CCCCCC"> it is so every every</font>

413
00:19:18,090 --> 00:19:23,949
extension implements this interface here

414
00:19:21,340 --> 00:19:28,259
in all it all it has is one method on

415
00:19:23,950 --> 00:19:28,259
their register extender callbacks

416
00:19:28,550 --> 00:19:33,389
and<font color="#E5E5E5"> I'll get to what that looks like in</font>

417
00:19:30,660 --> 00:19:36,060
just a second some<font color="#E5E5E5"> other important ones</font>

418
00:19:33,390 --> 00:19:38,840
to consider the actual callbacks

419
00:19:36,060 --> 00:19:42,780
interface so this<font color="#E5E5E5"> is what lets you</font>

420
00:19:38,840 --> 00:19:45,679
interact with burp itself get into

421
00:19:42,780 --> 00:19:47,970
calling all<font color="#E5E5E5"> the tools so on and so forth</font>

422
00:19:45,680 --> 00:19:50,850
also if you<font color="#CCCCCC"> want to write anything</font><font color="#E5E5E5"> to</font>

423
00:19:47,970 --> 00:19:52,550
standard out or or to the<font color="#E5E5E5"> output with in</font>

424
00:19:50,850 --> 00:19:56,310
berk that's what you're<font color="#E5E5E5"> going to call</font>

425
00:19:52,550 --> 00:19:58,440
<font color="#E5E5E5">you also have your helpers so that's for</font>

426
00:19:56,310 --> 00:20:02,730
actually creating manipulating requests

427
00:19:58,440 --> 00:20:05,820
or requests and responses inside a burp

428
00:20:02,730 --> 00:20:09,330
as well so there's also some decoding

429
00:20:05,820 --> 00:20:10,740
and encoding routines setting scanner

430
00:20:09,330 --> 00:20:11,939
insertion points and things like that<font color="#E5E5E5"> so</font>

431
00:20:10,740 --> 00:20:16,800
miscellaneous functional have

432
00:20:11,940 --> 00:20:18,270
functionality in there so those those

433
00:20:16,800 --> 00:20:20,100
<font color="#CCCCCC">are basically that's all there is for</font>

434
00:20:18,270 --> 00:20:21,990
<font color="#CCCCCC">the main support classes so</font><font color="#E5E5E5"> you have</font>

435
00:20:20,100 --> 00:20:25,320
extender you have callbacks and you have

436
00:20:21,990 --> 00:20:27,030
helpers then the types of things that

437
00:20:25,320 --> 00:20:28,080
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can actually</font><font color="#E5E5E5"> do with an extension so</font>

438
00:20:27,030 --> 00:20:29,970
you might be<font color="#E5E5E5"> thinking okay well what</font>

439
00:20:28,080 --> 00:20:31,350
kinds of<font color="#CCCCCC"> problems can i solve you can</font>

440
00:20:29,970 --> 00:20:33,000
plug into everything that's there so all

441
00:20:31,350 --> 00:20:35,129
of the tools that are available inside

442
00:20:33,000 --> 00:20:38,870
of there's ways to<font color="#E5E5E5"> interact with those</font>

443
00:20:35,130 --> 00:20:42,540
programmatically so we can interact with

444
00:20:38,870 --> 00:20:46,620
with<font color="#E5E5E5"> the actual proxy itself so</font>

445
00:20:42,540 --> 00:20:48,300
basically we can get every single

446
00:20:46,620 --> 00:20:50,159
request and response that goes through

447
00:20:48,300 --> 00:20:51,690
<font color="#E5E5E5">the proxy we can get a handle on that</font>

448
00:20:50,160 --> 00:20:54,780
and do something to it change it

449
00:20:51,690 --> 00:20:59,250
manipulate it analyzed it may be log new

450
00:20:54,780 --> 00:21:02,040
issues we can generate payloads<font color="#E5E5E5"> okay so</font>

451
00:20:59,250 --> 00:21:06,270
I've done some of that before you<font color="#CCCCCC"> won</font>

452
00:21:02,040 --> 00:21:10,200
co2 has a generator in there where you

453
00:21:06,270 --> 00:21:12,570
can pass it a a list of user information

454
00:21:10,200 --> 00:21:16,800
and then it'll<font color="#CCCCCC"> start fuzzing off that</font>

455
00:21:12,570 --> 00:21:19,439
list and create like passwords it'll do

456
00:21:16,800 --> 00:21:21,850
leet speak type of insertions and places

457
00:21:19,440 --> 00:21:24,820
and stuff like that so<font color="#E5E5E5"> it's pretty cool</font>

458
00:21:21,850 --> 00:21:27,639
and then there's a cable processor which

459
00:21:24,820 --> 00:21:30,159
is taking<font color="#CCCCCC"> an existing payload and making</font>

460
00:21:27,640 --> 00:21:31,270
some changes<font color="#E5E5E5"> to it and that's actually</font>

461
00:21:30,160 --> 00:21:34,870
<font color="#E5E5E5">what we're going to use</font><font color="#CCCCCC"> for this problem</font>

462
00:21:31,270 --> 00:21:38,559
<font color="#E5E5E5">a few other things you can do you can</font>

463
00:21:34,870 --> 00:21:40,659
interact you can add issues so that's a

464
00:21:38,559 --> 00:21:42,490
pro version only right so it has the the

465
00:21:40,660 --> 00:21:44,890
scan issues on there so you can<font color="#E5E5E5"> actually</font>

466
00:21:42,490 --> 00:21:47,860
create new issues you can also add

467
00:21:44,890 --> 00:21:49,620
editor tabs change some of<font color="#E5E5E5"> the behavior</font>

468
00:21:47,860 --> 00:21:52,809
of the tabs that are there you can

469
00:21:49,620 --> 00:21:56,199
manipulate session handling logic as

470
00:21:52,809 --> 00:22:01,000
well so can do a bunch of things so

471
00:21:56,200 --> 00:22:02,140
<font color="#E5E5E5">payable processor so we have it has two</font>

472
00:22:01,000 --> 00:22:05,320
functions on there this is directly

473
00:22:02,140 --> 00:22:07,330
<font color="#E5E5E5">snapshot off of the API dots and get the</font>

474
00:22:05,320 --> 00:22:11,678
name of<font color="#CCCCCC"> the processor and then</font><font color="#E5E5E5"> it's pay</font>

475
00:22:07,330 --> 00:22:13,299
process payload and it takes three

476
00:22:11,679 --> 00:22:15,640
values here and it returns a byte array

477
00:22:13,299 --> 00:22:17,110
so basically<font color="#E5E5E5"> what we're the only parts</font>

478
00:22:15,640 --> 00:22:18,340
of<font color="#E5E5E5"> this we're going to use is we're</font>

479
00:22:17,110 --> 00:22:20,678
going to<font color="#E5E5E5"> take the current payload so</font>

480
00:22:18,340 --> 00:22:22,658
that's going<font color="#E5E5E5"> to be the username that</font>

481
00:22:20,679 --> 00:22:24,280
we're passing into the function and then

482
00:22:22,659 --> 00:22:26,770
what we're<font color="#CCCCCC"> going to return is the knots</font>

483
00:22:24,280 --> 00:22:30,220
so we need some way to fetch that knots

484
00:22:26,770 --> 00:22:32,440
and the easiest<font color="#E5E5E5"> way to do</font><font color="#CCCCCC"> that is to</font>

485
00:22:30,220 --> 00:22:34,360
make an HTTP request and just so happens

486
00:22:32,440 --> 00:22:36,520
that there<font color="#E5E5E5"> is a function inside of the</font>

487
00:22:34,360 --> 00:22:40,870
callbacks for making HTTP requests using

488
00:22:36,520 --> 00:22:43,639
<font color="#E5E5E5">Burke's own HTTP sack</font><font color="#CCCCCC"> so you can just</font>

489
00:22:40,870 --> 00:22:48,800
<font color="#CCCCCC">use that directly</font>

490
00:22:43,640 --> 00:22:54,950
and I<font color="#CCCCCC"> think what we'll do is take a look</font>

491
00:22:48,800 --> 00:22:57,770
at<font color="#E5E5E5"> what that looks like so here is</font>

492
00:22:54,950 --> 00:23:04,670
<font color="#E5E5E5">intelligent and I know it's probably</font>

493
00:22:57,770 --> 00:23:07,730
<font color="#CCCCCC">very tiny on that screen it is</font><font color="#E5E5E5"> I don't</font>

494
00:23:04,670 --> 00:23:13,370
<font color="#CCCCCC">know if there's any way to make this</font>

495
00:23:07,730 --> 00:23:20,240
larger now if it<font color="#E5E5E5"> just zooms the whole</font>

496
00:23:13,370 --> 00:23:21,800
window what's<font color="#CCCCCC"> that he</font><font color="#E5E5E5"> doesn't give out</font>

497
00:23:20,240 --> 00:23:27,140
all this I don't want to give up all the

498
00:23:21,800 --> 00:23:29,899
secrets<font color="#E5E5E5"> hey yellow alright so i will</font>

499
00:23:27,140 --> 00:23:31,790
briefly explain what's on here<font color="#E5E5E5"> and I</font>

500
00:23:29,900 --> 00:23:33,920
well I think what I'll do is I'll just

501
00:23:31,790 --> 00:23:35,090
make this available afterwards so you

502
00:23:33,920 --> 00:23:37,790
guys<font color="#E5E5E5"> can take a look at the actual</font>

503
00:23:35,090 --> 00:23:42,110
source code so what I what I did is is I

504
00:23:37,790 --> 00:23:43,639
took a request one of the requests that

505
00:23:42,110 --> 00:23:47,659
we're sending<font color="#CCCCCC"> to the nonce basically</font>

506
00:23:43,640 --> 00:23:50,710
pasted it in here as a template and this

507
00:23:47,660 --> 00:23:55,280
is the request to get the nonce<font color="#CCCCCC"> okay</font>

508
00:23:50,710 --> 00:23:58,600
then i did<font color="#E5E5E5"> in register callbacks just</font>

509
00:23:55,280 --> 00:24:02,540
basically said hey I want to<font color="#E5E5E5"> register a</font>

510
00:23:58,600 --> 00:24:05,090
intruder payload processor and this is

511
00:24:02,540 --> 00:24:07,280
it here and then down<font color="#E5E5E5"> here is that</font>

512
00:24:05,090 --> 00:24:08,810
process payload function and all I'm

513
00:24:07,280 --> 00:24:11,260
doing with<font color="#E5E5E5"> that is it's taking the</font>

514
00:24:08,810 --> 00:24:13,190
<font color="#E5E5E5">username so that current payload</font>

515
00:24:11,260 --> 00:24:15,980
parameter that first parameter that i

516
00:24:13,190 --> 00:24:19,280
showed in the function and it's<font color="#CCCCCC"> actually</font>

517
00:24:15,980 --> 00:24:21,380
making constructing that request for the

518
00:24:19,280 --> 00:24:23,240
nonce sending it out getting the

519
00:24:21,380 --> 00:24:25,820
response taking the non set of the

520
00:24:23,240 --> 00:24:28,040
response and then returning that as the

521
00:24:25,820 --> 00:24:30,970
new payload so it's basically swapping

522
00:24:28,040 --> 00:24:30,970
out a user name for<font color="#E5E5E5"> a nonce</font>

523
00:24:31,700 --> 00:24:39,919
and that's all it's doing so how does

524
00:24:35,750 --> 00:24:49,159
this<font color="#CCCCCC"> look inside of burp I actually have</font>

525
00:24:39,919 --> 00:24:50,840
one set up so for those of looked at

526
00:24:49,159 --> 00:24:53,330
burp before sometimes you're wondering

527
00:24:50,840 --> 00:24:54,470
you know the attack type there's all

528
00:24:53,330 --> 00:24:56,570
these different types<font color="#E5E5E5"> of attack types</font>

529
00:24:54,470 --> 00:24:58,010
<font color="#E5E5E5">remember this so the first one on their</font>

530
00:24:56,570 --> 00:25:00,049
sniper is the default that's what we

531
00:24:58,010 --> 00:25:02,149
almost always use this is one of those

532
00:25:00,049 --> 00:25:05,990
situations we need to submit the user

533
00:25:02,149 --> 00:25:08,149
current username a password and the

534
00:25:05,990 --> 00:25:09,830
knots which is<font color="#E5E5E5"> actually the username</font>

535
00:25:08,149 --> 00:25:11,899
using our payload processors that's been

536
00:25:09,830 --> 00:25:14,299
changed into a nonce so we have a

537
00:25:11,899 --> 00:25:16,370
situation now where we need to initially

538
00:25:14,299 --> 00:25:18,440
submit the user name twice in two

539
00:25:16,370 --> 00:25:23,059
different positions to do that<font color="#CCCCCC"> we use</font>

540
00:25:18,440 --> 00:25:24,559
pitchfork right so now here's a use case

541
00:25:23,059 --> 00:25:26,809
for using pitchfork is the first one

542
00:25:24,559 --> 00:25:30,440
I've ever found it might mean how<font color="#E5E5E5"> the</font>

543
00:25:26,809 --> 00:25:34,970
first<font color="#E5E5E5"> one but they can use pitchfork so</font>

544
00:25:30,440 --> 00:25:37,630
on the on the first payload set I have<font color="#CCCCCC"> I</font>

545
00:25:34,970 --> 00:25:40,429
<font color="#E5E5E5">just put</font><font color="#CCCCCC"> together a list of usernames on</font>

546
00:25:37,630 --> 00:25:41,750
the second payload set it's the same

547
00:25:40,429 --> 00:25:43,940
list the user names because that's how

548
00:25:41,750 --> 00:25:46,010
pitchfork works as<font color="#CCCCCC"> you want to have</font>

549
00:25:43,940 --> 00:25:47,179
pairs of things submitted in this case

550
00:25:46,010 --> 00:25:48,500
here<font color="#E5E5E5"> I want the same ones because the</font>

551
00:25:47,179 --> 00:25:50,710
second one I'm going to change into<font color="#E5E5E5"> the</font>

552
00:25:48,500 --> 00:25:50,710
<font color="#E5E5E5">nonce</font>

553
00:25:51,740 --> 00:26:04,040
sighs no have<font color="#CCCCCC"> you they're</font><font color="#E5E5E5"> huge yeah I</font>

554
00:26:02,270 --> 00:26:06,290
love tools but eventually<font color="#E5E5E5"> something's</font>

555
00:26:04,040 --> 00:26:09,200
<font color="#E5E5E5">going into more purples in their</font>

556
00:26:06,290 --> 00:26:10,730
processes well yeah and here's the<font color="#CCCCCC"> thing</font>

557
00:26:09,200 --> 00:26:12,860
if you run into a case where let's say

558
00:26:10,730 --> 00:26:14,420
you're you're pulling payloads off of

559
00:26:12,860 --> 00:26:16,370
some other tool or something so it could

560
00:26:14,420 --> 00:26:18,530
<font color="#CCCCCC">be an infinite list that's when</font><font color="#E5E5E5"> you want</font>

561
00:26:16,370 --> 00:26:20,510
a payload generator because you can make

562
00:26:18,530 --> 00:26:22,750
<font color="#CCCCCC">that memory efficient so that it doesn't</font>

563
00:26:20,510 --> 00:26:27,020
generate an entire list first it just

564
00:26:22,750 --> 00:26:33,880
generate some as you need them I know I

565
00:26:27,020 --> 00:26:33,879
have it's got 10,000 items on this list

566
00:26:33,970 --> 00:26:38,450
so and now let me go and I'll just

567
00:26:37,100 --> 00:26:40,850
remove this and add it back in so you

568
00:26:38,450 --> 00:26:43,550
<font color="#E5E5E5">can see it so the payment processor for</font>

569
00:26:40,850 --> 00:26:46,040
the second one all you do is is you add

570
00:26:43,550 --> 00:26:47,330
the payload processing and then there

571
00:26:46,040 --> 00:26:48,740
are a bunch of<font color="#CCCCCC"> different options here</font><font color="#E5E5E5"> so</font>

572
00:26:47,330 --> 00:26:49,699
if<font color="#E5E5E5"> you enter ever it out the</font><font color="#CCCCCC"> situation</font>

573
00:26:48,740 --> 00:26:51,559
where you need to do some<font color="#CCCCCC"> type of</font>

574
00:26:49,700 --> 00:26:56,179
encoding or something to a list this is

575
00:26:51,559 --> 00:26:59,720
where you do it and at the very last one

576
00:26:56,179 --> 00:27:02,420
here is invoked<font color="#CCCCCC"> Burt burp extension and</font>

577
00:26:59,720 --> 00:27:04,820
oat<font color="#E5E5E5"> mine's not there actually hand it's</font>

578
00:27:02,420 --> 00:27:08,720
not there because we actually<font color="#CCCCCC"> need to</font>

579
00:27:04,820 --> 00:27:14,600
add it in so on the burp extensions<font color="#E5E5E5"> I</font>

580
00:27:08,720 --> 00:27:17,440
need to go<font color="#E5E5E5"> find my file which is Ayano</font>

581
00:27:14,600 --> 00:27:17,439
find in a second

582
00:27:24,390 --> 00:27:27,650
it's buried

583
00:27:39,270 --> 00:27:43,340
building burp extensions<font color="#E5E5E5"> every are</font>

584
00:27:47,889 --> 00:27:56,689
there's the jar so<font color="#E5E5E5"> I went and found the</font>

585
00:27:50,119 --> 00:27:59,869
jar that I<font color="#E5E5E5"> I created and hit go and</font>

586
00:27:56,690 --> 00:28:01,879
there it is so it's loaded<font color="#CCCCCC"> alright and</font>

587
00:27:59,869 --> 00:28:04,549
<font color="#CCCCCC">so now it shows up on</font><font color="#E5E5E5"> my list here at</font>

588
00:28:01,879 --> 00:28:06,769
the bottom<font color="#E5E5E5"> and then it also shows up</font>

589
00:28:04,549 --> 00:28:10,219
inside of intruder so<font color="#CCCCCC"> i can go i can add</font>

590
00:28:06,769 --> 00:28:14,509
the payload processor vocal<font color="#E5E5E5"> rip</font>

591
00:28:10,219 --> 00:28:16,999
extension knots payloaders what i called

592
00:28:14,509 --> 00:28:19,940
it because in burp everything ends in ER

593
00:28:16,999 --> 00:28:23,409
<font color="#CCCCCC">i don't know if you have a ghost so i</font>

594
00:28:19,940 --> 00:28:28,069
try to stick with it so now we have that

595
00:28:23,409 --> 00:28:29,929
so now if<font color="#E5E5E5"> i start the</font><font color="#CCCCCC"> attack you'll see</font>

596
00:28:28,069 --> 00:28:31,428
that i have to pay loads one the first

597
00:28:29,929 --> 00:28:34,579
one else going slowly because having to

598
00:28:31,429 --> 00:28:37,940
make these extra requests the first one

599
00:28:34,579 --> 00:28:39,739
<font color="#CCCCCC">is the from the first part of the</font>

600
00:28:37,940 --> 00:28:41,779
pitchfork you know how I putting<font color="#CCCCCC"> in two</font>

601
00:28:39,739 --> 00:28:43,249
lists the second one is after the pay

602
00:28:41,779 --> 00:28:45,909
<font color="#E5E5E5">Lisbon process and so that's why we have</font>

603
00:28:43,249 --> 00:28:45,909
the nonce on there

604
00:28:48,230 --> 00:28:54,890
and of course we have a couple<font color="#E5E5E5"> with the</font>

605
00:28:51,290 --> 00:28:56,178
<font color="#E5E5E5">length coming up differently and I don't</font>

606
00:28:54,890 --> 00:29:00,919
know if you<font color="#E5E5E5"> can read those but the user</font>

607
00:28:56,179 --> 00:29:03,860
names are Kevin and Jason's those are

608
00:29:00,919 --> 00:29:14,390
the users in this system completely

609
00:29:03,860 --> 00:29:16,909
random yes so right<font color="#CCCCCC"> so that's that any</font>

610
00:29:14,390 --> 00:29:18,350
questions other than<font color="#CCCCCC"> you know you can</font>

611
00:29:16,910 --> 00:29:22,010
actually see the code or anything like

612
00:29:18,350 --> 00:29:24,770
that so<font color="#E5E5E5"> much too small i will post this</font>

613
00:29:22,010 --> 00:29:26,540
afterwards along<font color="#CCCCCC"> with the code samples</font>

614
00:29:24,770 --> 00:29:30,260
you take a look<font color="#E5E5E5"> at</font><font color="#CCCCCC"> that actually how</font>

615
00:29:26,540 --> 00:29:32,240
that actually really worked one other

616
00:29:30,260 --> 00:29:33,830
thing i want to show because we have a

617
00:29:32,240 --> 00:29:38,299
little<font color="#E5E5E5"> bit extra time which i was hoping</font>

618
00:29:33,830 --> 00:29:40,070
we would is correlator I know probably

619
00:29:38,299 --> 00:29:41,960
something you've seen the<font color="#E5E5E5"> co2 stuff</font>

620
00:29:40,070 --> 00:29:44,480
before correlator i think is actually

621
00:29:41,960 --> 00:29:48,230
<font color="#E5E5E5">extremely valuable tool at making us</font>

622
00:29:44,480 --> 00:29:49,429
more efficient at what we do oh wait<font color="#CCCCCC"> I</font>

623
00:29:48,230 --> 00:29:53,350
think I actually have some slides on

624
00:29:49,429 --> 00:29:53,350
this let me<font color="#E5E5E5"> let me switch over to that</font>

625
00:29:55,070 --> 00:30:00,149
is the pro version worth the money you

626
00:29:57,480 --> 00:30:02,910
<font color="#CCCCCC">spend</font><font color="#E5E5E5"> yeah absolutely if</font><font color="#CCCCCC"> I get for your</font>

627
00:30:00,150 --> 00:30:04,740
mom well yeah if you actually do pen

628
00:30:02,910 --> 00:30:19,380
testing absolutely right off one client

629
00:30:04,740 --> 00:30:21,840
yeah exactly<font color="#E5E5E5"> so it I think it</font><font color="#CCCCCC"> is the one</font>

630
00:30:19,380 --> 00:30:24,960
of the biggest comparisons you see out

631
00:30:21,840 --> 00:30:28,169
there is zap<font color="#E5E5E5"> versus burp</font><font color="#CCCCCC"> zep so awesome</font>

632
00:30:24,960 --> 00:30:30,780
free tool and it is<font color="#CCCCCC"> very good</font><font color="#E5E5E5"> as well so</font>

633
00:30:28,170 --> 00:30:34,140
a lot of it is personal preference i

634
00:30:30,780 --> 00:30:35,760
find verb to be a little<font color="#E5E5E5"> bit more</font>

635
00:30:34,140 --> 00:30:37,740
intuitive it's easier to kind of switch

636
00:30:35,760 --> 00:30:40,650
between the tools so you<font color="#E5E5E5"> can take</font>

637
00:30:37,740 --> 00:30:42,000
payload or not POS you take requests and

638
00:30:40,650 --> 00:30:43,380
responses from one tool and get them

639
00:30:42,000 --> 00:30:45,210
into other tools<font color="#E5E5E5"> very quickly and easily</font>

640
00:30:43,380 --> 00:30:48,290
so<font color="#E5E5E5"> i find i work with it more</font>

641
00:30:45,210 --> 00:30:48,290
efficiently than<font color="#E5E5E5"> i do is out</font>

642
00:30:52,929 --> 00:31:00,950
yeah yeah true it doesn't crash as

643
00:30:57,979 --> 00:31:04,039
frequency so the others are all good

644
00:31:00,950 --> 00:31:05,690
reasons and I mean if you don't<font color="#E5E5E5"> if you</font>

645
00:31:04,039 --> 00:31:06,589
don't do actual pen testing very off<font color="#CCCCCC"> and</font>

646
00:31:05,690 --> 00:31:08,179
if you're just<font color="#E5E5E5"> playing around with it</font>

647
00:31:06,589 --> 00:31:12,799
obvious whatever then immediate isn't

648
00:31:08,179 --> 00:31:28,479
worth<font color="#E5E5E5"> it but for 300 bucks if you do any</font>

649
00:31:12,799 --> 00:31:30,679
pen testing it is in life that so yeah

650
00:31:28,479 --> 00:31:33,739
<font color="#CCCCCC">right some extensions to do the stuff</font>

651
00:31:30,679 --> 00:31:36,649
that it doesn't have it's<font color="#E5E5E5"> possible I</font>

652
00:31:33,739 --> 00:31:39,289
guess so correlator basically what it

653
00:31:36,649 --> 00:31:42,829
does is it's automatically automatic

654
00:31:39,289 --> 00:31:44,629
analysis of the<font color="#CCCCCC"> parameters and and when</font>

655
00:31:42,829 --> 00:31:47,320
am<font color="#CCCCCC"> I say parameters I mean everything so</font>

656
00:31:44,629 --> 00:31:48,949
post parameters get parameters cookies

657
00:31:47,320 --> 00:31:51,979
basically everything<font color="#CCCCCC"> that burp</font>

658
00:31:48,950 --> 00:31:55,399
understands as a parameter and the types

659
00:31:51,979 --> 00:31:57,049
of things that it recognizes is anything

660
00:31:55,399 --> 00:32:00,758
as URL encoded it will decode it

661
00:31:57,049 --> 00:32:03,259
automatically for you base64 encoding

662
00:32:00,759 --> 00:32:06,139
it'll recognize if something looks like

663
00:32:03,259 --> 00:32:10,190
a path and say hey<font color="#E5E5E5"> yeah it looks like</font>

664
00:32:06,139 --> 00:32:12,408
<font color="#CCCCCC">this this is a path HTML XML fragments</font>

665
00:32:10,190 --> 00:32:13,399
email addresses Social Security numbers

666
00:32:12,409 --> 00:32:15,709
if you<font color="#E5E5E5"> see something that looks like</font>

667
00:32:13,399 --> 00:32:18,228
<font color="#CCCCCC">that one</font><font color="#E5E5E5"> that's not on here is credit</font>

668
00:32:15,709 --> 00:32:19,940
cards although I seem to be currently

669
00:32:18,229 --> 00:32:21,709
having an issue with the it's supposed

670
00:32:19,940 --> 00:32:23,149
<font color="#CCCCCC">to run the LUN algorithm on there to</font>

671
00:32:21,709 --> 00:32:24,950
actually determine if it's a valid

672
00:32:23,149 --> 00:32:27,109
credit card number and I'm not one

673
00:32:24,950 --> 00:32:30,619
hundred percent sure it's working and

674
00:32:27,109 --> 00:32:33,619
it'll currently<font color="#E5E5E5"> also decode big eye peas</font>

675
00:32:30,619 --> 00:32:34,999
cookies so if it runs across the big IP

676
00:32:33,619 --> 00:32:37,728
cookie it'll decode that into the IP

677
00:32:34,999 --> 00:32:42,229
addresses so all of this stuff it

678
00:32:37,729 --> 00:32:43,999
basically does automatically and I

679
00:32:42,229 --> 00:32:46,219
eventually want it to do more now the

680
00:32:43,999 --> 00:32:48,079
purpose of<font color="#CCCCCC"> this isn't okay</font><font color="#E5E5E5"> I'm doing a</font>

681
00:32:46,219 --> 00:32:51,549
quick little test let me just run it

682
00:32:48,079 --> 00:32:57,830
through this question what's the big

683
00:32:51,549 --> 00:32:58,970
so big-ip is basically does the<font color="#CCCCCC"> load</font>

684
00:32:57,830 --> 00:33:02,299
<font color="#CCCCCC">balancing yes that's the word I'm</font>

685
00:32:58,970 --> 00:33:03,710
<font color="#CCCCCC">looking for load balancing so it does it</font>

686
00:33:02,299 --> 00:33:07,730
through this<font color="#E5E5E5"> cooking mechanism but</font>

687
00:33:03,710 --> 00:33:09,710
there's a a known flaw in most

688
00:33:07,730 --> 00:33:14,360
configurations of big-ip that I've seen

689
00:33:09,710 --> 00:33:15,649
<font color="#E5E5E5">anyway where the the internal IP address</font>

690
00:33:14,360 --> 00:33:18,110
i think is the internal IP address is

691
00:33:15,649 --> 00:33:21,559
exposed inside the cookie it's in an

692
00:33:18,110 --> 00:33:23,748
encoded format but being encoded not

693
00:33:21,559 --> 00:33:24,830
encrypted there's a way to decode it and

694
00:33:23,749 --> 00:33:26,929
then you can actually see the IP

695
00:33:24,830 --> 00:33:28,399
addresses so just it's just an

696
00:33:26,929 --> 00:33:30,350
information disclosure vulnerability

697
00:33:28,399 --> 00:33:31,998
it's not a huge<font color="#CCCCCC"> deal but it does give</font>

698
00:33:30,350 --> 00:33:33,199
somebody an idea if<font color="#CCCCCC"> okay this is what</font>

699
00:33:31,999 --> 00:33:40,220
the load balancer is on the internal

700
00:33:33,200 --> 00:33:41,779
network mm-hmm yep so<font color="#CCCCCC"> normally well you</font>

701
00:33:40,220 --> 00:33:45,019
would use correlator is if you're

702
00:33:41,779 --> 00:33:48,950
testing a whole bunch of websites or if

703
00:33:45,019 --> 00:33:52,789
you're testing like a very large complex

704
00:33:48,950 --> 00:33:55,759
<font color="#CCCCCC">website</font><font color="#E5E5E5"> that has a whole lot of stuff on</font>

705
00:33:52,789 --> 00:34:01,220
<font color="#CCCCCC">it and</font><font color="#E5E5E5"> I'm going to change my scope here</font>

706
00:33:55,759 --> 00:34:03,590
and I<font color="#CCCCCC"> just ran some demo stuff through</font>

707
00:34:01,220 --> 00:34:05,509
it earlier so<font color="#CCCCCC"> that we could kind of get</font>

708
00:34:03,590 --> 00:34:09,828
an<font color="#E5E5E5"> idea of what it looks like some of</font>

709
00:34:05,509 --> 00:34:11,990
the output and that's basically all I

710
00:34:09,829 --> 00:34:13,099
did so all you do all<font color="#E5E5E5"> it does</font><font color="#CCCCCC"> is it kind</font>

711
00:34:11,989 --> 00:34:15,888
of goes through everything that you've

712
00:34:13,099 --> 00:34:17,210
marked as in scope for your<font color="#CCCCCC"> test and</font>

713
00:34:15,889 --> 00:34:18,679
that's why you saw me pop over to the

714
00:34:17,210 --> 00:34:21,230
target tab for a second<font color="#E5E5E5"> I changed the</font>

715
00:34:18,679 --> 00:34:23,179
scope so everything is marked in scope

716
00:34:21,230 --> 00:34:24,379
it goes through<font color="#CCCCCC"> all of those requests</font>

717
00:34:23,179 --> 00:34:26,540
looks at all the parameters and then it

718
00:34:24,379 --> 00:34:28,129
starts figuring out what's what and then

719
00:34:26,540 --> 00:34:30,679
it gives puts all in a nice table for

720
00:34:28,129 --> 00:34:32,810
you now in this<font color="#E5E5E5"> case here you can still</font>

721
00:34:30,679 --> 00:34:35,030
see that all<font color="#E5E5E5"> of this</font><font color="#CCCCCC"> over here still</font>

722
00:34:32,810 --> 00:34:37,460
looks in its it all in its original form

723
00:34:35,030 --> 00:34:39,740
so that may not be<font color="#E5E5E5"> helpful it does have</font>

724
00:34:37,460 --> 00:34:43,069
the format down here of what it's

725
00:34:39,739 --> 00:34:45,918
figured out it is but then I<font color="#E5E5E5"> actually</font>

726
00:34:43,069 --> 00:34:47,659
<font color="#E5E5E5">just figured recently hey why don't we</font>

727
00:34:45,918 --> 00:34:50,328
<font color="#CCCCCC">just go ahead and do the decoding right</font>

728
00:34:47,659 --> 00:34:52,579
there in the table<font color="#E5E5E5"> so so now</font><font color="#CCCCCC"> it will</font>

729
00:34:50,329 --> 00:34:55,010
actually decode those values right there

730
00:34:52,579 --> 00:34:59,079
on the<font color="#E5E5E5"> table if you click on one</font><font color="#CCCCCC"> of</font>

731
00:34:55,010 --> 00:35:02,780
these like let's say foo for example

732
00:34:59,079 --> 00:35:03,609
this one<font color="#E5E5E5"> here says</font><font color="#CCCCCC"> 75% of</font><font color="#E5E5E5"> the instances</font>

733
00:35:02,780 --> 00:35:09,819
<font color="#CCCCCC">that it ran</font><font color="#E5E5E5"> across</font>

734
00:35:03,609 --> 00:35:13,269
<font color="#CCCCCC">we're md5 so it's probably an md5 and if</font>

735
00:35:09,819 --> 00:35:14,980
you go down<font color="#CCCCCC"> onto the details</font><font color="#E5E5E5"> here it'll</font>

736
00:35:13,269 --> 00:35:16,689
actually lift them off all the unique

737
00:35:14,980 --> 00:35:19,150
values you can<font color="#CCCCCC"> list every single one if</font>

738
00:35:16,690 --> 00:35:20,680
you want but it'll<font color="#CCCCCC"> list</font><font color="#E5E5E5"> off all the</font>

739
00:35:19,150 --> 00:35:26,410
unique values you just click<font color="#E5E5E5"> on one of</font>

740
00:35:20,680 --> 00:35:28,299
those<font color="#E5E5E5"> and you can see it'll walk through</font>

741
00:35:26,410 --> 00:35:29,769
how did it figure out that this<font color="#E5E5E5"> is md5</font>

742
00:35:28,299 --> 00:35:32,559
and it says but basically it looks<font color="#E5E5E5"> like</font>

743
00:35:29,769 --> 00:35:41,379
a hex string and so length 32 which is

744
00:35:32,559 --> 00:35:43,960
commonly md5 some of the other ones this

745
00:35:41,380 --> 00:35:46,269
<font color="#E5E5E5">one here you see the starting value on</font>

746
00:35:43,960 --> 00:35:48,210
that it's this huge string and I've

747
00:35:46,269 --> 00:35:51,660
<font color="#E5E5E5">actually run into stuff like this</font><font color="#CCCCCC"> before</font>

748
00:35:48,210 --> 00:35:54,609
it's<font color="#E5E5E5"> this huge string of gobbly gook and</font>

749
00:35:51,660 --> 00:35:56,799
it figured out on its own hey this this

750
00:35:54,609 --> 00:35:58,720
needs to be base64 decoded then you were

751
00:35:56,799 --> 00:36:00,069
all decoded than URL decode it again and

752
00:35:58,720 --> 00:36:03,129
<font color="#E5E5E5">then finally it looks like something</font>

753
00:36:00,069 --> 00:36:05,670
that's a printable string alright so the

754
00:36:03,130 --> 00:36:10,509
n values may be interesting in<font color="#E5E5E5"> this case</font>

755
00:36:05,670 --> 00:36:11,859
also<font color="#CCCCCC"> I paths it would it would determine</font>

756
00:36:10,509 --> 00:36:14,079
if something looks like a path or in

757
00:36:11,859 --> 00:36:19,529
this case here we have something<font color="#E5E5E5"> that</font>

758
00:36:14,079 --> 00:36:22,779
started off as base64 encoded block of

759
00:36:19,529 --> 00:36:25,690
stuff<font color="#E5E5E5"> and it figured out hey this is</font>

760
00:36:22,779 --> 00:36:29,230
actually XML or HTML I mean it<font color="#E5E5E5"> looks</font>

761
00:36:25,690 --> 00:36:32,289
that's<font color="#E5E5E5"> what it looks like to me so and</font>

762
00:36:29,230 --> 00:36:35,470
then it decoded it for us<font color="#CCCCCC"> too so and</font><font color="#E5E5E5"> it</font>

763
00:36:32,289 --> 00:36:36,880
is turns out this is in HTML fragment so

764
00:36:35,470 --> 00:36:38,499
this type of information if you're

765
00:36:36,880 --> 00:36:40,180
looking<font color="#E5E5E5"> at a huge test being able to</font>

766
00:36:38,499 --> 00:36:42,308
break it down<font color="#CCCCCC"> like this</font><font color="#E5E5E5"> very quickly you</font>

767
00:36:40,180 --> 00:36:43,930
can separate the interesting bits of

768
00:36:42,309 --> 00:36:45,460
information from the probably not so

769
00:36:43,930 --> 00:36:48,009
interesting bits of information very

770
00:36:45,460 --> 00:36:50,349
quickly it's a table it's<font color="#E5E5E5"> all sortable</font>

771
00:36:48,009 --> 00:36:51,759
all the tabs you can you know so if<font color="#E5E5E5"> you</font>

772
00:36:50,349 --> 00:36:52,809
have a really<font color="#CCCCCC"> long list you can say ok</font>

773
00:36:51,759 --> 00:36:54,489
let me<font color="#CCCCCC"> just look at everything</font><font color="#E5E5E5"> that</font>

774
00:36:52,809 --> 00:36:56,319
looks<font color="#E5E5E5"> like an md5 let's look at all the</font>

775
00:36:54,489 --> 00:36:57,670
shell ones let's look at everything that

776
00:36:56,319 --> 00:36:59,079
<font color="#E5E5E5">looks like an XML fragment because</font>

777
00:36:57,670 --> 00:37:01,299
that's a good spot for injection

778
00:36:59,079 --> 00:37:02,920
possibly right if you have<font color="#CCCCCC"> XML fragments</font>

779
00:37:01,299 --> 00:37:05,460
going in let's see if I can put a script

780
00:37:02,920 --> 00:37:05,460
tag in there

781
00:37:05,810 --> 00:37:14,549
so that's it has a couple of other

782
00:37:10,320 --> 00:37:16,020
features too you can highlight<font color="#E5E5E5"> where</font>

783
00:37:14,550 --> 00:37:17,340
something is on the request you can

784
00:37:16,020 --> 00:37:20,870
<font color="#CCCCCC">right click on things</font><font color="#E5E5E5"> to say hey I want</font>

785
00:37:17,340 --> 00:37:26,400
to send<font color="#E5E5E5"> this request over to repeater</font>

786
00:37:20,870 --> 00:37:27,930
you can if you have a one case where

787
00:37:26,400 --> 00:37:29,850
this works like let's say you have a

788
00:37:27,930 --> 00:37:32,669
bunch of<font color="#E5E5E5"> md5 s in there that you think</font>

789
00:37:29,850 --> 00:37:34,319
are useful hashes you can right click on

790
00:37:32,670 --> 00:37:36,120
<font color="#E5E5E5">that and copy that to the clipboard and</font>

791
00:37:34,320 --> 00:37:39,360
then paste it into some other tool where

792
00:37:36,120 --> 00:37:40,230
you're doing like cash lookups you can

793
00:37:39,360 --> 00:37:46,290
do that sort of thing<font color="#E5E5E5"> that they're</font>

794
00:37:40,230 --> 00:37:48,420
pretty<font color="#E5E5E5"> quickly changed so that's</font>

795
00:37:46,290 --> 00:37:49,590
basically it so that's that's correlator

796
00:37:48,420 --> 00:37:50,940
that's the latest extension that I've

797
00:37:49,590 --> 00:37:52,530
built along with an interface and

798
00:37:50,940 --> 00:37:55,050
everything so I do<font color="#E5E5E5"> want to kind of put</font>

799
00:37:52,530 --> 00:37:57,360
in a plug for that I don't think<font color="#CCCCCC"> it's on</font>

800
00:37:55,050 --> 00:38:00,870
the<font color="#E5E5E5"> bap store yet although</font><font color="#CCCCCC"> I asked for</font>

801
00:37:57,360 --> 00:38:14,670
<font color="#E5E5E5">it to be on</font><font color="#CCCCCC"> that decision you just email</font>

802
00:38:00,870 --> 00:38:16,259
them yeah for what<font color="#CCCCCC"> ya know it's it's a</font>

803
00:38:14,670 --> 00:38:17,730
folk it's a company they I've actually

804
00:38:16,260 --> 00:38:19,320
interacted with two different<font color="#E5E5E5"> people so</font>

805
00:38:17,730 --> 00:38:23,370
I know for<font color="#CCCCCC"> sure that there's more</font><font color="#E5E5E5"> than</font>

806
00:38:19,320 --> 00:38:25,500
one here<font color="#E5E5E5"> know what</font><font color="#CCCCCC"> well yeah it could be</font>

807
00:38:23,370 --> 00:38:30,560
I was<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> say one is male the others</font>

808
00:38:25,500 --> 00:38:30,560
female but three's company

809
00:38:39,600 --> 00:38:46,930
so that's that's my<font color="#E5E5E5"> spiel and I mean</font>

810
00:38:43,300 --> 00:38:50,100
really<font color="#E5E5E5"> what this is is hopefully getting</font>

811
00:38:46,930 --> 00:38:53,710
people somewhat interested if you<font color="#E5E5E5"> see</font>

812
00:38:50,100 --> 00:38:58,540
any issues with plugins or tools as

813
00:38:53,710 --> 00:39:00,310
you're using them try<font color="#E5E5E5"> to be I mean first</font>

814
00:38:58,540 --> 00:39:01,660
of all let the author know hey

815
00:39:00,310 --> 00:39:03,009
something's not working right i'm not

816
00:39:01,660 --> 00:39:05,109
sure why I'm latest version seems to be

817
00:39:03,010 --> 00:39:06,670
broken but be polite about it too<font color="#CCCCCC"> and</font>

818
00:39:05,110 --> 00:39:08,470
realize<font color="#CCCCCC"> that most of the time most of us</font>

819
00:39:06,670 --> 00:39:11,710
are<font color="#CCCCCC"> actually doing this on our own time</font>

820
00:39:08,470 --> 00:39:15,509
in<font color="#E5E5E5"> addition to the whatever 60 80 hour</font>

821
00:39:11,710 --> 00:39:15,510
weeks that we're pulling<font color="#E5E5E5"> so question</font>

822
00:39:16,530 --> 00:39:25,810
<font color="#E5E5E5">I'll give you recognition so yeah I'll</font>

823
00:39:24,100 --> 00:39:34,150
give you a big big thanks on Twitter or

824
00:39:25,810 --> 00:39:38,609
something but yeah yeah any questions

825
00:39:34,150 --> 00:39:40,380
and good so you see

826
00:39:38,609 --> 00:39:42,210
honestly collaborate what do you<font color="#E5E5E5"> think</font>

827
00:39:40,380 --> 00:39:47,069
<font color="#E5E5E5">you're going to expand in my or do you</font>

828
00:39:42,210 --> 00:39:49,079
feel like that<font color="#E5E5E5"> it's constantly well I</font>

829
00:39:47,069 --> 00:39:51,420
would like<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do that's a good</font><font color="#CCCCCC"> question</font>

830
00:39:49,079 --> 00:39:55,259
so how can I where I want to go with

831
00:39:51,420 --> 00:39:57,299
collaborator next I think I want to

832
00:39:55,259 --> 00:39:58,499
improve on what's there one of the

833
00:39:57,299 --> 00:40:02,339
things I'm really looking for feedback

834
00:39:58,499 --> 00:40:03,988
if anybody is doing a pen test and you

835
00:40:02,339 --> 00:40:06,089
run into some kind of encoding that it

836
00:40:03,989 --> 00:40:08,430
doesn't handle do let me know and<font color="#E5E5E5"> and</font>

837
00:40:06,089 --> 00:40:09,900
<font color="#E5E5E5">let me know what the decoding is that</font>

838
00:40:08,430 --> 00:40:12,450
you need it to to figure out because

839
00:40:09,900 --> 00:40:14,460
<font color="#E5E5E5">that's the sort of thing that</font><font color="#CCCCCC"> I I'm only</font>

840
00:40:12,450 --> 00:40:25,078
adding functionality as I run into any

841
00:40:14,460 --> 00:40:29,400
pen tests so exactly the submission

842
00:40:25,079 --> 00:40:31,529
<font color="#CCCCCC">function yeah no I don't need that but</font>

843
00:40:29,400 --> 00:40:34,230
yeah that's that's a great day so yeah

844
00:40:31,529 --> 00:40:35,489
if you do if you if you use it and you

845
00:40:34,230 --> 00:40:42,410
find anything<font color="#E5E5E5"> there's any the same thing</font>

846
00:40:35,489 --> 00:40:42,410
with co2 to<font color="#CCCCCC"> Thanks</font>

