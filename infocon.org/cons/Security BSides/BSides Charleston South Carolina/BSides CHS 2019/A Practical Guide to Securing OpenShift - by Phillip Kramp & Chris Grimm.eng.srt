1
00:00:28,949 --> 00:00:31,140
all right my name is little cramp

2
00:00:31,140 --> 00:00:32,850
unfortunately as you may have just heard

3
00:00:32,850 --> 00:00:35,190
Chris Grimm is not here you know

4
00:00:35,190 --> 00:00:37,050
scheduled things better liam is out in

5
00:00:37,050 --> 00:00:40,260
San Diego I will be giving let's talk

6
00:00:40,260 --> 00:00:42,570
today on basically I have us here your

7
00:00:42,570 --> 00:00:45,570
openshift not too different than

8
00:00:45,570 --> 00:00:47,550
securing any of your your other systems

9
00:00:47,550 --> 00:00:49,170
or anything it's just a new technology

10
00:00:49,170 --> 00:00:51,000
so most people aren't too familiar with

11
00:00:51,000 --> 00:00:52,470
how to secure your kubernetes cluster

12
00:00:52,470 --> 00:00:57,329
and all that so there's me see you've

13
00:00:57,329 --> 00:01:00,930
been selling it Red Hat primarily in the

14
00:01:00,930 --> 00:01:02,730
public sector so mostly supporting

15
00:01:02,730 --> 00:01:04,339
government customers around the country

16
00:01:04,339 --> 00:01:07,860
with their various mostly OpenShift but

17
00:01:07,860 --> 00:01:10,289
also ansible and you know there were

18
00:01:10,289 --> 00:01:11,280
products

19
00:01:11,280 --> 00:01:14,369
Chris was on the consulting side as well

20
00:01:14,369 --> 00:01:15,840
he recently switched to become a sales

21
00:01:15,840 --> 00:01:21,440
architect primarily supporting the army

22
00:01:22,820 --> 00:01:25,100
all right today were to talk about kind

23
00:01:25,100 --> 00:01:28,730
of the overall state of security how the

24
00:01:28,730 --> 00:01:30,890
hardened your OS which kind of the first

25
00:01:30,890 --> 00:01:33,350
primary I hopefully was familiar with us

26
00:01:33,350 --> 00:01:37,610
we can do that pretty quickly then kind

27
00:01:37,610 --> 00:01:39,730
of why you want to do container signing

28
00:01:39,730 --> 00:01:41,540
certificate management kind of how

29
00:01:41,540 --> 00:01:45,080
openshift handles that using your secure

30
00:01:45,080 --> 00:01:47,330
pipeline to kind of build a better image

31
00:01:47,330 --> 00:01:49,190
and limit things running in production

32
00:01:49,190 --> 00:01:52,960
and then multi-factor authentication

33
00:01:56,590 --> 00:01:59,030
developers frequently just want to

34
00:01:59,030 --> 00:02:00,740
develop their code they don't really

35
00:02:00,740 --> 00:02:03,800
care about security although as we'll

36
00:02:03,800 --> 00:02:05,450
get to in a minute they they know they

37
00:02:05,450 --> 00:02:08,780
should but they they just frequently

38
00:02:08,780 --> 00:02:10,280
have their own deadlines they do know

39
00:02:10,280 --> 00:02:13,400
they need to get objectives done and

40
00:02:13,400 --> 00:02:15,050
they just generally don't have time to

41
00:02:15,050 --> 00:02:18,590
care too much about security security

42
00:02:18,590 --> 00:02:21,170
thinks you can just encrypt it super

43
00:02:21,170 --> 00:02:23,180
well and then no one get into it

44
00:02:23,180 --> 00:02:25,340
everything's good but you have to kind

45
00:02:25,340 --> 00:02:27,320
of balance that with usability it

46
00:02:27,320 --> 00:02:28,850
doesn't matter how secure it is if no

47
00:02:28,850 --> 00:02:31,830
one you can or will use it

48
00:02:31,830 --> 00:02:35,460
and then DevOps frequently is fighting

49
00:02:35,460 --> 00:02:38,099
fires one at a time

50
00:02:38,099 --> 00:02:41,280
they don't have time really to you root

51
00:02:41,280 --> 00:02:43,439
cause analysis frequently something that

52
00:02:43,439 --> 00:02:44,700
a lot of companies need to do a better

53
00:02:44,700 --> 00:02:46,540
job out

54
00:02:46,540 --> 00:02:48,390
you

55
00:02:48,390 --> 00:02:50,069
you

56
00:02:50,069 --> 00:02:51,700
so

57
00:02:51,700 --> 00:02:54,280
report from about a year ago when say it

58
00:02:54,280 --> 00:02:59,019
was all 2018 might even summer but 33

59
00:02:59,019 --> 00:03:01,120
percent of the people that were surveyed

60
00:03:01,120 --> 00:03:02,459
have reported a webapp

61
00:03:02,459 --> 00:03:07,440
in the last year 48% of the developers

62
00:03:07,440 --> 00:03:09,220
didn't think they had enough time to

63
00:03:09,220 --> 00:03:10,360
work on it because they have other

64
00:03:10,360 --> 00:03:11,590
priorities they've got other deadlines

65
00:03:11,590 --> 00:03:14,739
to me and 80% of everybody security ops

66
00:03:14,739 --> 00:03:16,840
developers agreed that everyone should

67
00:03:16,840 --> 00:03:18,519
be playing a part in it they just don't

68
00:03:18,519 --> 00:03:21,190
have time or priorities

69
00:03:21,190 --> 00:03:23,410
so people know it's a problem we just

70
00:03:23,410 --> 00:03:25,810
have to get management on board I'll try

71
00:03:25,810 --> 00:03:27,830
to fix it

72
00:03:27,830 --> 00:03:30,050
yeah and part of the thing one of the

73
00:03:30,050 --> 00:03:31,850
most basic steps is compliance by

74
00:03:31,850 --> 00:03:33,980
keeping your your apps dependencies

75
00:03:33,980 --> 00:03:35,210
which is a usually a big one with

76
00:03:35,210 --> 00:03:37,000
development even those all of the day

77
00:03:37,000 --> 00:03:42,560
80% of attacks use vulnerabilities that

78
00:03:42,560 --> 00:03:44,060
ever known most of them don't use zero

79
00:03:44,060 --> 00:03:46,400
days most of them don't come up with

80
00:03:46,400 --> 00:03:48,530
their own attacks there's something

81
00:03:48,530 --> 00:03:49,790
that's been patched frequently for

82
00:03:49,790 --> 00:03:51,380
months or years and people just never

83
00:03:51,380 --> 00:03:52,130
got around to it

84
00:03:52,130 --> 00:03:55,100
most of the ransom wires that you see at

85
00:03:55,100 --> 00:03:57,860
hospitals because governments a big one

86
00:03:57,860 --> 00:04:00,710
last year with the credit monitoring

87
00:04:00,710 --> 00:04:02,750
those are all vulnerabilities that have

88
00:04:02,750 --> 00:04:04,640
been out for months that people just

89
00:04:04,640 --> 00:04:07,630
never got our under passion

90
00:04:08,330 --> 00:04:11,130
well that's why the first thing whether

91
00:04:11,130 --> 00:04:13,680
it's whether you're doing containers

92
00:04:13,680 --> 00:04:16,620
kubernetes just or just your OS you need

93
00:04:16,620 --> 00:04:20,970
to harden it so one of the the big ones

94
00:04:20,970 --> 00:04:24,270
is open s cap DoD's that lots of federal

95
00:04:24,270 --> 00:04:26,580
agencies use it it's all out there for

96
00:04:26,580 --> 00:04:27,680
free

97
00:04:27,680 --> 00:04:31,080
this helps write the guidelines for it

98
00:04:31,080 --> 00:04:34,760
and everyone can go through figure out

99
00:04:34,760 --> 00:04:37,620
basically some settings that are good

100
00:04:37,620 --> 00:04:39,630
general guidelines you usually can't

101
00:04:39,630 --> 00:04:41,250
apply every single one is strict as they

102
00:04:41,250 --> 00:04:43,520
want but you should at least know why

103
00:04:43,520 --> 00:04:45,540
you want to leave this vulnerability

104
00:04:45,540 --> 00:04:47,490
open or not necessarily butter ability

105
00:04:47,490 --> 00:04:49,890
but this this permissions level higher

106
00:04:49,890 --> 00:04:55,530
you need this service to run so out of

107
00:04:55,530 --> 00:04:57,330
the box pretty much all of our Red Hat

108
00:04:57,330 --> 00:04:58,770
products because we do support so many

109
00:04:58,770 --> 00:05:01,770
federal customers as well as financial

110
00:05:01,770 --> 00:05:04,169
institutions though you can select a lot

111
00:05:04,169 --> 00:05:06,180
of these as you're installing the

112
00:05:06,180 --> 00:05:08,250
operating system and just have it at a

113
00:05:08,250 --> 00:05:11,520
base hardening already so you got the

114
00:05:11,520 --> 00:05:14,130
PCI DSS which is the one financial

115
00:05:14,130 --> 00:05:16,800
institutions use yeah the DoD DISA

116
00:05:16,800 --> 00:05:21,510
Stig's yeah from Augusta systems and you

117
00:05:21,510 --> 00:05:22,710
can kind of select all these out of the

118
00:05:22,710 --> 00:05:25,710
box go ahead and start it no good point

119
00:05:25,710 --> 00:05:27,720
we've already tested it it's supported

120
00:05:27,720 --> 00:05:28,830
you don't have to worry about breaking

121
00:05:28,830 --> 00:05:31,290
support if you run into issue you can

122
00:05:31,290 --> 00:05:36,990
open up tickets with us get some help so

123
00:05:36,990 --> 00:05:40,669
you can also use ansible to help

124
00:05:41,319 --> 00:05:45,069
so using things like this which will

125
00:05:45,069 --> 00:05:49,270
generate the fix and run it through

126
00:05:49,270 --> 00:05:51,370
and you cannot go ahead and harden it in

127
00:05:51,370 --> 00:05:55,110
kind of a automated and repeatable way

128
00:05:56,900 --> 00:06:00,110
and some of them

129
00:06:00,110 --> 00:06:04,050
no there they go all right so

130
00:06:04,050 --> 00:06:06,330
one of the big things with with DISA and

131
00:06:06,330 --> 00:06:08,759
stage and all that there's a webpage

132
00:06:08,759 --> 00:06:11,430
into the lockdown IO which has a lot of

133
00:06:11,430 --> 00:06:13,409
play books out there a lot of them are

134
00:06:13,409 --> 00:06:15,330
under the mine point group for some

135
00:06:15,330 --> 00:06:17,280
reason that's the group that we usually

136
00:06:17,280 --> 00:06:20,190
work with so they have the official Red

137
00:06:20,190 --> 00:06:22,050
Hat content for kind of sharing your

138
00:06:22,050 --> 00:06:25,470
systems locking down and being able to

139
00:06:25,470 --> 00:06:26,669
apply them in a consistent and

140
00:06:26,669 --> 00:06:29,270
repeatable manner

141
00:06:30,590 --> 00:06:32,330
these are some of the common base lines

142
00:06:32,330 --> 00:06:33,920
that are that are out there that people

143
00:06:33,920 --> 00:06:36,410
we're going to use same thing we talked

144
00:06:36,410 --> 00:06:38,440
about

145
00:06:39,279 --> 00:06:41,799
so one of the things that we've been

146
00:06:41,799 --> 00:06:43,509
doing a lot with our customers and more

147
00:06:43,509 --> 00:06:44,649
and more people are going to use kind of

148
00:06:44,649 --> 00:06:46,959
writing your infrastructure scale and

149
00:06:46,959 --> 00:06:49,269
which is kind of creating sort of

150
00:06:49,269 --> 00:06:52,119
securities code by having repeatable

151
00:06:52,119 --> 00:06:53,949
processes that are pushed but you don't

152
00:06:53,949 --> 00:06:55,209
have to worry about this person making a

153
00:06:55,209 --> 00:06:58,389
typo maybe this will this person wanted

154
00:06:58,389 --> 00:06:59,889
to put these security settings on but

155
00:06:59,889 --> 00:07:01,179
these other person's anything bigger

156
00:07:01,179 --> 00:07:03,969
necessary so by having it having

157
00:07:03,969 --> 00:07:05,859
answerable playbooks or however you like

158
00:07:05,859 --> 00:07:07,719
to do it you can basically have a

159
00:07:07,719 --> 00:07:09,389
push-button deployment and put some

160
00:07:09,389 --> 00:07:11,860
configurations in place put a few new

161
00:07:11,860 --> 00:07:14,799
servers Adam to the VLANs whatever you

162
00:07:14,799 --> 00:07:16,869
need to do in kind of an automated

163
00:07:16,869 --> 00:07:19,589
repeatable back

164
00:07:22,199 --> 00:07:24,930
so and one with one of the big things

165
00:07:24,930 --> 00:07:27,270
that a lot of people don't like to do

166
00:07:27,270 --> 00:07:29,039
because it does take longer to set up

167
00:07:29,039 --> 00:07:31,439
just doing your part back you're a role

168
00:07:31,439 --> 00:07:33,840
based access control and these are the

169
00:07:33,840 --> 00:07:35,279
same things you need to do on servers

170
00:07:35,279 --> 00:07:37,370
you need to do on your clusters

171
00:07:37,370 --> 00:07:40,590
basically set up your groups it'll take

172
00:07:40,590 --> 00:07:42,240
a little more time especially when you

173
00:07:42,240 --> 00:07:44,039
only have a few years you may not think

174
00:07:44,039 --> 00:07:47,340
me of the groups but frequently when you

175
00:07:47,340 --> 00:07:49,620
start onboarding people it accelerates

176
00:07:49,620 --> 00:07:51,240
rapidly and you don't have time to go

177
00:07:51,240 --> 00:07:52,740
back and figure out alright how should

178
00:07:52,740 --> 00:07:54,509
we set up these groups what we need to

179
00:07:54,509 --> 00:07:56,909
do so by setting them up early set up

180
00:07:56,909 --> 00:07:58,589
your permissions you ensure that every

181
00:07:58,589 --> 00:08:00,210
you know what permission sets every 1/2

182
00:08:00,210 --> 00:08:02,099
you're not doing one offs all right this

183
00:08:02,099 --> 00:08:03,509
guy's a cluster admin this guy's a

184
00:08:03,509 --> 00:08:06,749
viewer this guy's an auditor and then

185
00:08:06,749 --> 00:08:10,159
having to remember what everyone has

186
00:08:11,550 --> 00:08:14,600
thing especially with containers and

187
00:08:14,600 --> 00:08:17,490
Buddhas and limits one of the things you

188
00:08:17,490 --> 00:08:19,680
can do in an open ship just say I want

189
00:08:19,680 --> 00:08:21,030
this project to only have this much

190
00:08:21,030 --> 00:08:24,090
compute this much memory storage or this

191
00:08:24,090 --> 00:08:28,440
user and one of the problems people have

192
00:08:28,440 --> 00:08:30,270
is either intentional or unintentional

193
00:08:30,270 --> 00:08:33,360
basically ddossing themselves you can

194
00:08:33,360 --> 00:08:35,490
think of all the resources and not even

195
00:08:35,490 --> 00:08:36,929
realize it if you don't suck your quotas

196
00:08:36,929 --> 00:08:39,419
and limits ahead of time take yourself

197
00:08:39,419 --> 00:08:46,920
offline so one of the things that kind

198
00:08:46,920 --> 00:08:50,250
of helps with limiting what's running on

199
00:08:50,250 --> 00:08:51,750
your system is doing digital signatures

200
00:08:51,750 --> 00:08:54,240
on your containers so kind of the same

201
00:08:54,240 --> 00:08:55,500
thing Microsoft has done with the

202
00:08:55,500 --> 00:08:57,210
updates and drivers and many other

203
00:08:57,210 --> 00:09:01,080
vendors by saying everything it doesn't

204
00:09:01,080 --> 00:09:03,120
prove that it's secure but you know

205
00:09:03,120 --> 00:09:05,400
where it came from you know wasn't some

206
00:09:05,400 --> 00:09:08,310
site loaded by the project you know

207
00:09:08,310 --> 00:09:10,830
isn't a rogue application or anything

208
00:09:10,830 --> 00:09:15,270
running on your cluster and kind of one

209
00:09:15,270 --> 00:09:17,160
of the ways that most people do that is

210
00:09:17,160 --> 00:09:20,550
you have here your built image either

211
00:09:20,550 --> 00:09:24,270
build it yourself so we do build the

212
00:09:24,270 --> 00:09:26,070
image a lot of times with an open shift

213
00:09:26,070 --> 00:09:27,920
or let's say you go out to docker hub

214
00:09:27,920 --> 00:09:30,080
registry that Red Hat or any other

215
00:09:30,080 --> 00:09:34,140
docker container registry you take the

216
00:09:34,140 --> 00:09:37,140
add it into the open ship registry at

217
00:09:37,140 --> 00:09:38,340
the same time you can do when you open

218
00:09:38,340 --> 00:09:40,800
shift API call kind of sign it with the

219
00:09:40,800 --> 00:09:42,090
internal signing certificates that you

220
00:09:42,090 --> 00:09:43,709
set up

221
00:09:43,709 --> 00:09:46,040
it comes back down pulls the image

222
00:09:46,040 --> 00:09:48,119
you're signing thought it will spin up a

223
00:09:48,119 --> 00:09:50,600
new pod just a client

224
00:09:50,600 --> 00:09:52,580
hold that image over signs it with the

225
00:09:52,580 --> 00:09:54,410
signing key and then puts it back in the

226
00:09:54,410 --> 00:09:55,780
registry

227
00:09:55,780 --> 00:09:59,440
so why you care about that is in the

228
00:09:59,440 --> 00:10:00,760
traditional path you have here

229
00:10:00,760 --> 00:10:02,560
frequently with the deficit cops

230
00:10:02,560 --> 00:10:05,110
pipelines you've got the developer he

231
00:10:05,110 --> 00:10:06,310
does his stuff shuts it into the

232
00:10:06,310 --> 00:10:08,980
registry it goes over the test goes over

233
00:10:08,980 --> 00:10:12,250
to fraud and there's no guarantee that

234
00:10:12,250 --> 00:10:13,870
the developer didn't just go ahead and

235
00:10:13,870 --> 00:10:16,930
push it all the way to operations so by

236
00:10:16,930 --> 00:10:18,640
signing in you had in this new path

237
00:10:18,640 --> 00:10:21,280
where it's signed and then you can

238
00:10:21,280 --> 00:10:23,740
restrict your openshift cluster so that

239
00:10:23,740 --> 00:10:28,350
only the sign for fraud runs and fraud

240
00:10:28,350 --> 00:10:30,210
so someone can't just run a rogue

241
00:10:30,210 --> 00:10:32,100
application you can't just skip the test

242
00:10:32,100 --> 00:10:34,170
process then you restrict you has those

243
00:10:34,170 --> 00:10:37,050
signing not just anyone can sign they

244
00:10:37,050 --> 00:10:39,030
have to go through whatever process you

245
00:10:39,030 --> 00:10:40,800
set up and that kind of helps for

246
00:10:40,800 --> 00:10:43,579
technical production

247
00:10:45,130 --> 00:10:48,620
so kind of just overall how did gets

248
00:10:48,620 --> 00:10:50,760
work

249
00:10:50,760 --> 00:10:52,019
there's a high level you got your root

250
00:10:52,019 --> 00:10:53,970
CA generally those aren't connected to

251
00:10:53,970 --> 00:10:57,180
anything general best practices people

252
00:10:57,180 --> 00:10:59,940
spin up a root CA been out a couple sub

253
00:10:59,940 --> 00:11:01,709
CIA's shut it down just from the

254
00:11:01,709 --> 00:11:04,050
internet from everything that way that

255
00:11:04,050 --> 00:11:05,310
doesn't get compromised because if

256
00:11:05,310 --> 00:11:07,139
someone come around here ECA they can

257
00:11:07,139 --> 00:11:08,430
generate all the sub series and

258
00:11:08,430 --> 00:11:10,620
everything they want you keep that one

259
00:11:10,620 --> 00:11:12,540
on flying case you every to revoke any

260
00:11:12,540 --> 00:11:15,600
other sub CAS and at that point if you

261
00:11:15,600 --> 00:11:18,000
do you spin back up revoke a sub CIA

262
00:11:18,000 --> 00:11:20,310
open up a new one it knows what's

263
00:11:20,310 --> 00:11:23,060
revoked and shut your root CA back then

264
00:11:23,060 --> 00:11:26,910
so you can even have multi level sub CAS

265
00:11:26,910 --> 00:11:29,420
that are signing your different

266
00:11:29,420 --> 00:11:32,190
certificates as long as they have that

267
00:11:32,190 --> 00:11:35,029
signing authority

268
00:11:35,030 --> 00:11:39,560
so an open shirt open ship has its own

269
00:11:39,560 --> 00:11:42,190
internal CA that issues all of the

270
00:11:42,190 --> 00:11:44,480
certificates continuously on all the

271
00:11:44,480 --> 00:11:47,060
rank pause as well as your nose your

272
00:11:47,060 --> 00:11:51,459
masternode your structure nose and your

273
00:11:51,600 --> 00:11:54,240
and these are generally they're only

274
00:11:54,240 --> 00:11:59,070
good for thing by default there's 72 or

275
00:11:59,070 --> 00:12:02,220
96 hours and then issued the new one the

276
00:12:02,220 --> 00:12:04,410
one of the one of the thoughts behind

277
00:12:04,410 --> 00:12:07,250
that is as it is its own sign you see a

278
00:12:07,250 --> 00:12:10,140
bike quickly revoking the search name

279
00:12:10,140 --> 00:12:12,360
the key current with what's running out

280
00:12:12,360 --> 00:12:15,480
there and things don't expire and then

281
00:12:15,480 --> 00:12:18,620
as long as you trust the open chef CA

282
00:12:18,620 --> 00:12:20,810
then everything that it issues is trust

283
00:12:20,810 --> 00:12:23,810
as well so that stops those pop-ups

284
00:12:23,810 --> 00:12:25,819
being popped up do you want to trust the

285
00:12:25,819 --> 00:12:27,160
sir

286
00:12:27,160 --> 00:12:30,310
and there's other issues so there's a

287
00:12:30,310 --> 00:12:31,990
couple ways you can do that you can have

288
00:12:31,990 --> 00:12:34,060
if they trust it a lot of federal

289
00:12:34,060 --> 00:12:36,430
agencies and others won't but you can

290
00:12:36,430 --> 00:12:37,899
have them issue a signing serve to

291
00:12:37,899 --> 00:12:41,170
openshift if not for example one of my

292
00:12:41,170 --> 00:12:43,600
clients we have our IDM issue of siding

293
00:12:43,600 --> 00:12:46,360
insert to it and then they trust our IDM

294
00:12:46,360 --> 00:12:50,310
but it doesn't have an official

295
00:12:53,630 --> 00:12:55,689
you

296
00:12:57,810 --> 00:12:59,759
one of the big things that people are

297
00:12:59,759 --> 00:13:01,710
using

298
00:13:01,710 --> 00:13:04,980
in general it quickly his pipelines he

299
00:13:04,980 --> 00:13:06,360
doing kind of been more of an automated

300
00:13:06,360 --> 00:13:08,360
fashion

301
00:13:08,360 --> 00:13:09,860
you have all your different pieces

302
00:13:09,860 --> 00:13:12,590
tie-in you got your pipeline delivery so

303
00:13:12,590 --> 00:13:14,300
frequently people use Jenkins for that

304
00:13:14,300 --> 00:13:20,960
or builder and then usually way we have

305
00:13:20,960 --> 00:13:22,250
it we have it running on top of open

306
00:13:22,250 --> 00:13:24,769
ship that's another

307
00:13:24,769 --> 00:13:26,749
and then that can be running on top of

308
00:13:26,749 --> 00:13:28,459
whatever your infrastructure is with a

309
00:13:28,459 --> 00:13:32,389
Red Hat air metal whether it's AWS

310
00:13:32,389 --> 00:13:35,640
google measure

311
00:13:35,640 --> 00:13:38,010
and then you can lock all that down it

312
00:13:38,010 --> 00:13:38,880
kind of like we were talking about

313
00:13:38,880 --> 00:13:42,329
before use near open that's your big

314
00:13:42,329 --> 00:13:44,360
setting

315
00:13:44,360 --> 00:13:46,160
and then you've got your answer

316
00:13:46,160 --> 00:13:47,720
automation which can run across all

317
00:13:47,720 --> 00:13:49,399
those levels and help do that

318
00:13:49,399 --> 00:13:51,050
infrastructure spin we talked about as

319
00:13:51,050 --> 00:13:55,000
well as automating the process

320
00:13:55,000 --> 00:13:57,040
so the first thing you that has you need

321
00:13:57,040 --> 00:13:58,750
your short school repository in our case

322
00:13:58,750 --> 00:14:01,240
we're gonna be using it and you're gonna

323
00:14:01,240 --> 00:14:05,250
build your hat so once your apps built

324
00:14:05,250 --> 00:14:09,450
it gets sent over to do some quick

325
00:14:09,450 --> 00:14:12,390
those unit-tests can be anything you

326
00:14:12,390 --> 00:14:14,250
want they can be either an automated

327
00:14:14,250 --> 00:14:17,010
approval method so let's say you want to

328
00:14:17,010 --> 00:14:20,070
check make sure one equals one and as

329
00:14:20,070 --> 00:14:21,600
long as you trust that you can just have

330
00:14:21,600 --> 00:14:23,370
it automatically check and I'm pass it

331
00:14:23,370 --> 00:14:26,070
on to the next level frequently you kind

332
00:14:26,070 --> 00:14:27,270
of want to start off with more of an a

333
00:14:27,270 --> 00:14:30,120
manual approval process for two reasons

334
00:14:30,120 --> 00:14:31,710
one you want to make sure all of your

335
00:14:31,710 --> 00:14:32,790
checks are doing what you think they are

336
00:14:32,790 --> 00:14:34,830
kind of validate that you didn't

337
00:14:34,830 --> 00:14:36,870
accidentally put one equals 100

338
00:14:36,870 --> 00:14:38,580
somewhere you don't want that

339
00:14:38,580 --> 00:14:39,690
accidentally making it all the way

340
00:14:39,690 --> 00:14:41,760
through the other is it kind of helps

341
00:14:41,760 --> 00:14:44,130
build the trust for management the

342
00:14:44,130 --> 00:14:45,810
management doesn't trust automating

343
00:14:45,810 --> 00:14:47,760
that's all the way through when they're

344
00:14:47,760 --> 00:14:49,380
used to having a test team that may take

345
00:14:49,380 --> 00:14:51,680
a week

346
00:14:51,850 --> 00:14:54,430
so by proving it you can slowly start

347
00:14:54,430 --> 00:14:56,080
turning these into automated gates and

348
00:14:56,080 --> 00:14:59,740
make this from maybe a week two weeks

349
00:14:59,740 --> 00:15:04,830
some cases a month process the minutes

350
00:15:06,470 --> 00:15:09,390
but from there usually you do static

351
00:15:09,390 --> 00:15:11,250
code analysis same thing you want to do

352
00:15:11,250 --> 00:15:12,630
for your app running anywhere whether

353
00:15:12,630 --> 00:15:14,610
it's a container whether it's running on

354
00:15:14,610 --> 00:15:16,800
a bare metal server running about

355
00:15:16,800 --> 00:15:18,720
somewhere you want to make sure your

356
00:15:18,720 --> 00:15:20,690
code is

357
00:15:20,690 --> 00:15:23,000
so you can set up gates again for this

358
00:15:23,000 --> 00:15:25,129
there are plugins for Jenkins before to

359
00:15:25,129 --> 00:15:27,980
fight past all of your main deck code

360
00:15:27,980 --> 00:15:30,339
analysis tools that can go ahead and

361
00:15:30,339 --> 00:15:33,940
automatically ingest the code analyze it

362
00:15:33,940 --> 00:15:36,680
based on the thresholds you set so many

363
00:15:36,680 --> 00:15:41,060
criticals the code quality you may care

364
00:15:41,060 --> 00:15:43,009
about you can check all of that and make

365
00:15:43,009 --> 00:15:44,029
sure there's enough unit test

366
00:15:44,029 --> 00:15:46,310
documentation and then based on that

367
00:15:46,310 --> 00:15:48,589
either make it a push button to start or

368
00:15:48,589 --> 00:15:53,209
automatically pass or fail if bestest

369
00:15:53,209 --> 00:15:56,750
you go ahead on moving store it into

370
00:15:56,750 --> 00:15:59,750
your artifact repository so frequently

371
00:15:59,750 --> 00:16:03,620
you got things like you kWe nexus j frog

372
00:16:03,620 --> 00:16:05,959
our factories another big one you're

373
00:16:05,959 --> 00:16:07,939
gonna build your image and store it up

374
00:16:07,939 --> 00:16:09,649
there so that you have something to

375
00:16:09,649 --> 00:16:11,899
reference for your test and development

376
00:16:11,899 --> 00:16:22,310
production per layer so once you got

377
00:16:22,310 --> 00:16:24,800
your container you can go ahead and then

378
00:16:24,800 --> 00:16:27,680
also do a container image scam so

379
00:16:27,680 --> 00:16:31,519
there's a couple couple different main

380
00:16:31,519 --> 00:16:34,189
tools you got Claire which is skin

381
00:16:34,189 --> 00:16:38,750
containers black Doug Whitlock as well

382
00:16:38,750 --> 00:16:41,779
as J frog x-ray are the main ones but

383
00:16:41,779 --> 00:16:43,370
basically it's what have you guys prefer

384
00:16:43,370 --> 00:16:45,319
you just plug it into your pipeline

385
00:16:45,319 --> 00:16:47,569
almost all of these either have AP eyes

386
00:16:47,569 --> 00:16:50,000
they can write your own plugin from

387
00:16:50,000 --> 00:16:52,610
Jenkins or even have Jenkins plugins and

388
00:16:52,610 --> 00:16:55,579
the same thing you can do I'm a DJ make

389
00:16:55,579 --> 00:16:57,380
sure there's no vulnerabilities on the

390
00:16:57,380 --> 00:16:59,600
container image itself so your source

391
00:16:59,600 --> 00:17:01,339
code may be good but let's say you're

392
00:17:01,339 --> 00:17:02,930
building on an old version of my sequel

393
00:17:02,930 --> 00:17:04,669
that has the vulnerability in it this

394
00:17:04,669 --> 00:17:06,589
will change and make sure that the whole

395
00:17:06,589 --> 00:17:08,889
thing

396
00:17:09,630 --> 00:17:11,790
and make any reports or vulnerabilities

397
00:17:11,790 --> 00:17:13,380
and then you kind of do the same thing

398
00:17:13,380 --> 00:17:15,329
with the gates if there's too many

399
00:17:15,329 --> 00:17:17,670
vulnerabilities or they're too high of a

400
00:17:17,670 --> 00:17:19,709
level let's say they're criticals you

401
00:17:19,709 --> 00:17:21,569
don't want to have any of those and no

402
00:17:21,569 --> 00:17:24,099
more than one high

403
00:17:24,099 --> 00:17:26,230
and you can go ahead and do that and the

404
00:17:26,230 --> 00:17:27,400
thing you can do at the same time as

405
00:17:27,400 --> 00:17:29,920
well let's pick off an email from

406
00:17:29,920 --> 00:17:32,260
Jenkins or the pipeline that says hey

407
00:17:32,260 --> 00:17:34,630
remoted it but these are the findings

408
00:17:34,630 --> 00:17:36,760
you may want to look at it make sure you

409
00:17:36,760 --> 00:17:39,040
get them scheduled into your sprints or

410
00:17:39,040 --> 00:17:42,870
whatever method you guys are doing in

411
00:17:43,340 --> 00:17:56,280
yeah actually so the way most of them

412
00:17:56,280 --> 00:18:00,360
were container or ingest this container

413
00:18:00,360 --> 00:18:02,220
and kind of analyzes the binary bits

414
00:18:02,220 --> 00:18:03,030
okay

415
00:18:03,030 --> 00:18:06,900
that's usually one of them so there are

416
00:18:06,900 --> 00:18:08,640
so you do have the doctor files though

417
00:18:08,640 --> 00:18:11,549
so you can do some analysis on that but

418
00:18:11,549 --> 00:18:13,890
usually these don't do that okay that's

419
00:18:13,890 --> 00:18:16,080
more kind of a how you want to set up

420
00:18:16,080 --> 00:18:18,270
the container so one of the things the

421
00:18:18,270 --> 00:18:20,190
OpenShift won't allow you to do by

422
00:18:20,190 --> 00:18:22,799
default you can force it is

423
00:18:22,799 --> 00:18:24,630
we don't allow containers to run this

424
00:18:24,630 --> 00:18:27,330
route that way you can't just pull down

425
00:18:27,330 --> 00:18:29,539
anything and run it or install anything

426
00:18:29,539 --> 00:18:31,860
most of these containers for example

427
00:18:31,860 --> 00:18:34,520
some of them may not even have be I

428
00:18:34,520 --> 00:18:36,630
probably don't have W get they don't

429
00:18:36,630 --> 00:18:39,160
have your compilers on them

430
00:18:39,160 --> 00:18:40,720
and we don't want them to be able to

431
00:18:40,720 --> 00:18:42,610
have it if they need to add something

432
00:18:42,610 --> 00:18:45,419
they should go back

433
00:18:50,860 --> 00:18:53,890
kind of more stands for compliance if

434
00:18:53,890 --> 00:18:55,840
you're if you're have a customer or you

435
00:18:55,840 --> 00:18:58,570
care about that so you made sure there's

436
00:18:58,570 --> 00:19:00,669
no vulnerabilities now making sure that

437
00:19:00,669 --> 00:19:03,490
your my sequel

438
00:19:03,490 --> 00:19:06,039
here for example is running with the

439
00:19:06,039 --> 00:19:07,570
right information sets that distinct

440
00:19:07,570 --> 00:19:10,720
required so you can again you're

441
00:19:10,720 --> 00:19:12,460
ensuring your compliance having a good

442
00:19:12,460 --> 00:19:16,240
baseline limits your number of exposures

443
00:19:16,240 --> 00:19:19,649
and vulnerabilities in production

444
00:19:20,560 --> 00:19:22,150
so at that point that's when you can

445
00:19:22,150 --> 00:19:24,070
start doing that that plugin that we

446
00:19:24,070 --> 00:19:26,650
talked about earlier with the tested QA

447
00:19:26,650 --> 00:19:29,140
to prod and you can go ahead and have

448
00:19:29,140 --> 00:19:32,620
this create your deployment it's already

449
00:19:32,620 --> 00:19:34,360
passed everything whether you clicked

450
00:19:34,360 --> 00:19:36,100
yes go to the next gate or it's

451
00:19:36,100 --> 00:19:38,830
automated doesn't matter once you get

452
00:19:38,830 --> 00:19:40,450
into this step it starts moving things

453
00:19:40,450 --> 00:19:43,240
through to the next level

454
00:19:43,240 --> 00:19:46,000
the men you promote it frequently the

455
00:19:46,000 --> 00:19:48,490
way people do it is especially if they

456
00:19:48,490 --> 00:19:49,809
care about the security is like we

457
00:19:49,809 --> 00:19:52,899
talked about and sign your containers so

458
00:19:52,899 --> 00:19:56,919
your devotee wake Buster and only run

459
00:19:56,919 --> 00:19:58,809
images that are signed by development

460
00:19:58,809 --> 00:20:01,929
your your production cluster can only

461
00:20:01,929 --> 00:20:06,060
run images that are signed off by QA

462
00:20:06,060 --> 00:20:07,800
so that kind of ensures people don't

463
00:20:07,800 --> 00:20:12,440
skip steps there and limits what gets

464
00:20:14,840 --> 00:20:18,620
so one of the things

465
00:20:18,620 --> 00:20:20,390
is you kind of want to continuously scan

466
00:20:20,390 --> 00:20:22,309
your containers because as we talked

467
00:20:22,309 --> 00:20:23,900
about if people can run whatever they

468
00:20:23,900 --> 00:20:25,730
want

469
00:20:25,730 --> 00:20:29,630
they may for example in October last

470
00:20:29,630 --> 00:20:32,030
month there was a graboid krypter

471
00:20:32,030 --> 00:20:34,760
krypter jacking images that were found

472
00:20:34,760 --> 00:20:37,460
on docker hub that if people didn't know

473
00:20:37,460 --> 00:20:39,140
better they could go hold down this my

474
00:20:39,140 --> 00:20:41,210
sequel image they thought was clean it

475
00:20:41,210 --> 00:20:43,520
had a crypto minor hitting in there

476
00:20:43,520 --> 00:20:45,710
and I went continuously scan for me just

477
00:20:45,710 --> 00:20:47,510
make sure you didn't pull down one of

478
00:20:47,510 --> 00:20:50,179
the images another problem is even

479
00:20:50,179 --> 00:20:52,390
before people have been baked in once

480
00:20:52,390 --> 00:20:54,289
people would find those containers

481
00:20:54,289 --> 00:20:57,049
running his route and go ahead and pull

482
00:20:57,049 --> 00:20:58,669
down just do like a double you get the

483
00:20:58,669 --> 00:21:01,700
website start up a project running on

484
00:21:01,700 --> 00:21:02,899
the background of your container you

485
00:21:02,899 --> 00:21:04,789
think this is only hosting your database

486
00:21:04,789 --> 00:21:06,020
it's got a crypto minor in the

487
00:21:06,020 --> 00:21:07,820
background also eating up your CPU and

488
00:21:07,820 --> 00:21:11,090
resource but by locking down who can run

489
00:21:11,090 --> 00:21:13,070
his roof and continues to scan your

490
00:21:13,070 --> 00:21:14,450
containers so that there's not row

491
00:21:14,450 --> 00:21:17,270
containers and keep an idea of what's

492
00:21:17,270 --> 00:21:19,970
running in your system

493
00:21:19,970 --> 00:21:21,950
it's just like BMS when people spin

494
00:21:21,950 --> 00:21:24,259
those up generally these days people

495
00:21:24,259 --> 00:21:26,179
have process of jackin how many VMs are

496
00:21:26,179 --> 00:21:28,370
being used what the resources counts are

497
00:21:28,370 --> 00:21:30,110
and everything

498
00:21:30,110 --> 00:21:32,540
containers should be the same but since

499
00:21:32,540 --> 00:21:34,190
it's newer a lot of people kind of don't

500
00:21:34,190 --> 00:21:36,500
really fully understand it yet but you

501
00:21:36,500 --> 00:21:38,240
need to make sure that there's not

502
00:21:38,240 --> 00:21:41,380
ribbon just running on your

503
00:21:44,059 --> 00:21:46,710
so one of things that comes up

504
00:21:46,710 --> 00:21:48,450
especially federal space is your

505
00:21:48,450 --> 00:21:51,220
authentication and authorization

506
00:21:51,220 --> 00:21:53,530
so with openshift with these are kind of

507
00:21:53,530 --> 00:21:55,750
decoupled processes so you can have the

508
00:21:55,750 --> 00:21:57,670
authentication service call out to a

509
00:21:57,670 --> 00:21:59,410
separate authorization service and

510
00:21:59,410 --> 00:22:02,080
that's how we frequently tie in things

511
00:22:02,080 --> 00:22:03,820
like two-factor authentication with

512
00:22:03,820 --> 00:22:06,640
smart cards things like that and just go

513
00:22:06,640 --> 00:22:08,380
ahead and offload that whatever your

514
00:22:08,380 --> 00:22:09,610
this thing infrastructure you have in

515
00:22:09,610 --> 00:22:11,820
place

516
00:22:12,880 --> 00:22:14,860
so with your typical authentication

517
00:22:14,860 --> 00:22:17,050
piece you have the user sign into a web

518
00:22:17,050 --> 00:22:19,660
console that go heads and passes along

519
00:22:19,660 --> 00:22:22,870
yeah Sanwa proxy on the back end so

520
00:22:22,870 --> 00:22:24,430
whatever your identity provider is

521
00:22:24,430 --> 00:22:27,250
whether it's any LDAP or some other

522
00:22:27,250 --> 00:22:30,760
source the user up then get their

523
00:22:30,760 --> 00:22:32,650
credentials get passed over there it

524
00:22:32,650 --> 00:22:33,910
checks to make sure you are who you are

525
00:22:33,910 --> 00:22:36,940
and then it sends it on back and then

526
00:22:36,940 --> 00:22:39,640
you get into the system so you can go

527
00:22:39,640 --> 00:22:41,680
ahead and offload that piece outside of

528
00:22:41,680 --> 00:22:42,340
openshift

529
00:22:42,340 --> 00:22:44,350
handle the same way you do the rest of

530
00:22:44,350 --> 00:22:48,190
your applications services and not have

531
00:22:48,190 --> 00:22:50,970
to change anything there

532
00:22:51,360 --> 00:22:54,210
with authorization by the same thing

533
00:22:54,210 --> 00:22:57,540
here you your user administrator logging

534
00:22:57,540 --> 00:23:01,980
in its getting your group sinks so

535
00:23:01,980 --> 00:23:03,840
Elda the way we frequently have it set

536
00:23:03,840 --> 00:23:07,770
up at the moment is the users and groups

537
00:23:07,770 --> 00:23:11,820
to copy it over into the internal groups

538
00:23:11,820 --> 00:23:13,679
and users on open check and you

539
00:23:13,679 --> 00:23:16,080
continuously syncs those usually using

540
00:23:16,080 --> 00:23:18,870
ansible tower jobs make sure everything

541
00:23:18,870 --> 00:23:21,450
stays up to date and then you can use

542
00:23:21,450 --> 00:23:23,640
your our back to limit who has what

543
00:23:23,640 --> 00:23:25,770
permissions what they can do are they

544
00:23:25,770 --> 00:23:27,150
allowed to create a new project

545
00:23:27,150 --> 00:23:28,919
they allow the start of project they had

546
00:23:28,919 --> 00:23:31,620
users who they have put as limits and

547
00:23:31,620 --> 00:23:33,510
they change those and they change the

548
00:23:33,510 --> 00:23:36,240
parameters on your application so one of

549
00:23:36,240 --> 00:23:37,559
the big things of course with containers

550
00:23:37,559 --> 00:23:40,320
just scalability so you can quickly

551
00:23:40,320 --> 00:23:44,190
scale up the from one pod to 100

552
00:23:44,190 --> 00:23:46,080
but you might want to limit who has that

553
00:23:46,080 --> 00:23:48,470
authorization

554
00:23:50,310 --> 00:23:52,990
but two-factor authentication generally

555
00:23:52,990 --> 00:23:54,870
what people do

556
00:23:54,870 --> 00:23:56,850
you kind of use that same authorization

557
00:23:56,850 --> 00:24:00,029
model and with one additional step where

558
00:24:00,029 --> 00:24:02,419
it falls out here server smart card

559
00:24:02,419 --> 00:24:07,710
server validates that you are who you

560
00:24:07,710 --> 00:24:09,299
say you are that you are Phillip Graham

561
00:24:09,299 --> 00:24:11,549
your cert is still good on the smart

562
00:24:11,549 --> 00:24:14,340
card and then it go to the head checks

563
00:24:14,340 --> 00:24:16,769
what your permissions are again against

564
00:24:16,769 --> 00:24:19,379
the LDAP and your groups and role based

565
00:24:19,379 --> 00:24:21,559
access

566
00:24:22,310 --> 00:24:24,370
you

567
00:24:24,580 --> 00:24:26,169
so one of the things of course with this

568
00:24:26,169 --> 00:24:28,779
is that works for the web but a lot of

569
00:24:28,779 --> 00:24:31,779
times either by choice or because there

570
00:24:31,779 --> 00:24:34,839
isn't a nice web GUI man port need to do

571
00:24:34,839 --> 00:24:36,549
things via the command line so via the

572
00:24:36,549 --> 00:24:39,418
OC CLI

573
00:24:39,510 --> 00:24:41,760
and one of the common things you see

574
00:24:41,760 --> 00:24:43,290
people using if they're using to factor

575
00:24:43,290 --> 00:24:46,050
for SSH is there's buddy cat which is

576
00:24:46,050 --> 00:24:48,420
out there for free you go ahead so here

577
00:24:48,420 --> 00:24:50,580
buddy authorization looking under

578
00:24:50,580 --> 00:24:52,050
Spanish marker I pass that on to the

579
00:24:52,050 --> 00:24:55,230
server and get you an via SSH console so

580
00:24:55,230 --> 00:24:57,270
you can do those OC commands by the by

581
00:24:57,270 --> 00:24:59,510
hand

582
00:25:02,530 --> 00:25:04,860
projects and stuff out there to help you

583
00:25:04,860 --> 00:25:07,270
we generally try to keep all of our

584
00:25:07,270 --> 00:25:10,450
stuff if we can and aren't limited by

585
00:25:10,450 --> 00:25:13,240
the customer we put it back up on github

586
00:25:13,240 --> 00:25:15,370
so others people at Red Hat as well as

587
00:25:15,370 --> 00:25:16,990
the general community can use it and

588
00:25:16,990 --> 00:25:18,940
learn from it you got to get help

589
00:25:18,940 --> 00:25:21,580
official a Red Hat official as well as

590
00:25:21,580 --> 00:25:24,430
the openshift repositories I have here

591
00:25:24,430 --> 00:25:26,620
your LDAP group sings his love your

592
00:25:26,620 --> 00:25:29,920
sam'l playbooks there's a nice redhead

593
00:25:29,920 --> 00:25:32,620
article as well as a blog post on how to

594
00:25:32,620 --> 00:25:35,909
set up a multi-factor authentication

595
00:25:35,909 --> 00:25:39,449
as well as Red Hat learning-dot-com

596
00:25:39,449 --> 00:25:43,379
has kind of like a forum style group so

597
00:25:43,379 --> 00:25:44,999
there's a bunch of people from Red Hat

598
00:25:44,999 --> 00:25:46,499
as well as general community users if

599
00:25:46,499 --> 00:25:48,539
you have questions you kind of go get

600
00:25:48,539 --> 00:25:49,919
some community help if you don't have

601
00:25:49,919 --> 00:25:52,130
support

602
00:25:52,130 --> 00:25:53,960
you

603
00:25:53,960 --> 00:25:57,950
so one of the big things federal

604
00:25:57,950 --> 00:26:00,950
especially is one of the things that may

605
00:26:00,950 --> 00:26:01,970
be kind of weird if you haven't worked

606
00:26:01,970 --> 00:26:04,639
well worked much with government there's

607
00:26:04,639 --> 00:26:07,070
140 - to says you have to use a

608
00:26:07,070 --> 00:26:09,110
supported and approved encryption

609
00:26:09,110 --> 00:26:12,399
algorithm or plaintext so you can't use

610
00:26:12,399 --> 00:26:15,549
you can't use a bad encryption algorithm

611
00:26:15,549 --> 00:26:19,190
it has to be validated and approved or

612
00:26:19,190 --> 00:26:21,220
plain text and the reason for that is

613
00:26:21,220 --> 00:26:23,749
they want you to know that you're using

614
00:26:23,749 --> 00:26:25,429
plain text rather than having a false

615
00:26:25,429 --> 00:26:26,929
sense of security that you're using

616
00:26:26,929 --> 00:26:29,059
something that's really powerful so you

617
00:26:29,059 --> 00:26:33,080
can't do three days on your code or

618
00:26:33,080 --> 00:26:35,840
anything so so far OpenShift is not

619
00:26:35,840 --> 00:26:39,619
supportive but tentatively it's on the

620
00:26:39,619 --> 00:26:41,360
roadmap for open shift 4.3 that should

621
00:26:41,360 --> 00:26:46,659
be coming out by the end of the year and

622
00:26:46,659 --> 00:26:52,249
the so that's for open shift itself so

623
00:26:52,249 --> 00:26:53,869
one of the big things is the open

624
00:26:53,869 --> 00:26:56,240
container storage which kind of allows

625
00:26:56,240 --> 00:26:57,950
you the dynamic provisioning and growing

626
00:26:57,950 --> 00:27:00,619
you just say hey my container needs five

627
00:27:00,619 --> 00:27:02,899
bits of space or need the internet space

628
00:27:02,899 --> 00:27:05,899
the part that allows you to dynamically

629
00:27:05,899 --> 00:27:08,600
allocate that space reclaim it use it as

630
00:27:08,600 --> 00:27:10,960
ye as though inter storage

631
00:27:10,960 --> 00:27:13,279
they haven't definitively said whether

632
00:27:13,279 --> 00:27:17,830
or not that would be in the

633
00:27:18,040 --> 00:27:19,690
so there may be something you may have

634
00:27:19,690 --> 00:27:22,570
the UI with Phipps but not turned on

635
00:27:22,570 --> 00:27:28,060
your storage nodes you do some more the

636
00:27:28,060 --> 00:27:30,610
research we mentioned so you've got the

637
00:27:30,610 --> 00:27:32,350
my point lockdown group that I mentioned

638
00:27:32,350 --> 00:27:34,690
for getting some Ansel playbooks open

639
00:27:34,690 --> 00:27:36,790
lock things down

640
00:27:36,790 --> 00:27:39,000
there's the compliance is good project

641
00:27:39,000 --> 00:27:43,600
that helps you kind of get some

642
00:27:43,600 --> 00:27:46,180
baselines for setting up here your

643
00:27:46,180 --> 00:27:48,340
applications to be infrastructure

644
00:27:48,340 --> 00:27:51,880
specified no CP multi-factor

645
00:27:51,880 --> 00:27:53,320
authentication that's the blog post I

646
00:27:53,320 --> 00:27:55,180
talked about I kind of goes through and

647
00:27:55,180 --> 00:27:58,960
also references those get home projects

648
00:27:58,960 --> 00:28:03,250
and Fear Factory software factory and it

649
00:28:03,250 --> 00:28:07,270
goes through helping you to write your

650
00:28:07,270 --> 00:28:11,760
code using the pipeline in those days

651
00:28:14,039 --> 00:28:17,409
that's about it I think I covered all

652
00:28:17,409 --> 00:28:19,389
the parts Chris was going to but since

653
00:28:19,389 --> 00:28:21,070
he's not here I may have missed some

654
00:28:21,070 --> 00:28:24,840
stuff so you guys have questions

655
00:28:25,460 --> 00:28:31,240
you go back and you slide thanks man

656
00:28:37,320 --> 00:28:39,379
you

