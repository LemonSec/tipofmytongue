1
00:00:29,560 --> 00:00:32,060
all right I guess we're about to get

2
00:00:32,060 --> 00:00:33,770
started like here at the welcome

3
00:00:33,770 --> 00:00:35,870
everybody up my name is Brandon Poole

4
00:00:35,870 --> 00:00:38,960
I'm going to be presenting detectors as

5
00:00:38,960 --> 00:00:44,450
code building better detection so Who am

6
00:00:44,450 --> 00:00:45,400
I

7
00:00:45,400 --> 00:00:47,809
so my name is Brandon Poole I work with

8
00:00:47,809 --> 00:00:50,000
citerior I am a detection engineer

9
00:00:50,000 --> 00:00:54,140
that's my official title however really

10
00:00:54,140 --> 00:00:57,769
and truly I guess I'm more like a person

11
00:00:57,769 --> 00:01:00,170
who does a lot probably like my biggest

12
00:01:00,170 --> 00:01:02,750
bullet point my job description is other

13
00:01:02,750 --> 00:01:05,510
tasks as necessary but yes I've been

14
00:01:05,510 --> 00:01:07,100
with stared for a while my role as

15
00:01:07,100 --> 00:01:09,590
detection engineers in the dart so what

16
00:01:09,590 --> 00:01:11,869
I do kind of in the dart is it is my job

17
00:01:11,869 --> 00:01:15,159
to go through and build detection in

18
00:01:15,159 --> 00:01:19,220
order to detect advanced adversaries so

19
00:01:19,220 --> 00:01:20,890
we do this by a number of means

20
00:01:20,890 --> 00:01:23,060
signature based rules behavior based

21
00:01:23,060 --> 00:01:26,600
rules and really try to build out like a

22
00:01:26,600 --> 00:01:27,950
solid product and this is kind of where

23
00:01:27,950 --> 00:01:29,930
this talk actually came from is some of

24
00:01:29,930 --> 00:01:31,070
the methodologies we've actually

25
00:01:31,070 --> 00:01:37,460
implemented so in the beginning man

26
00:01:37,460 --> 00:01:40,729
created the code and the task and the

27
00:01:40,729 --> 00:01:43,759
task was tedious and error-prone and no

28
00:01:43,759 --> 00:01:47,450
one liked it and then man said let me

29
00:01:47,450 --> 00:01:50,570
automate it and he automated it this

30
00:01:50,570 --> 00:01:54,259
brilliant truly is the whole power of

31
00:01:54,259 --> 00:01:58,429
computing if you think about it this

32
00:01:58,429 --> 00:02:00,259
kind of happened with the way we do

33
00:02:00,259 --> 00:02:02,210
security but first let's talk a little

34
00:02:02,210 --> 00:02:04,969
bit about the history of InfoSec and

35
00:02:04,969 --> 00:02:11,810
detection so back in 1972 there was a

36
00:02:11,810 --> 00:02:14,930
paper published by James P Anderson he

37
00:02:14,930 --> 00:02:17,080
was a general in the Air Force or a

38
00:02:17,080 --> 00:02:20,240
lieutenant in the Air Force and the

39
00:02:20,240 --> 00:02:22,400
paper noted they were a growing number

40
00:02:22,400 --> 00:02:24,709
of security issues they noticed more and

41
00:02:24,709 --> 00:02:26,780
more kind of like viruses weaknesses

42
00:02:26,780 --> 00:02:29,360
with systems the resiliency wasn't

43
00:02:29,360 --> 00:02:31,760
really there so he documented this stuff

44
00:02:31,760 --> 00:02:33,440
and said that you know he really saw

45
00:02:33,440 --> 00:02:35,150
like cyber security becoming the issue

46
00:02:35,150 --> 00:02:38,750
here in the future he followed up with a

47
00:02:38,750 --> 00:02:40,580
theory about automating intrusion

48
00:02:40,580 --> 00:02:41,440
detection

49
00:02:41,440 --> 00:02:45,220
in 1980s on another paper that paper

50
00:02:45,220 --> 00:02:48,610
ultimately led to the first intrusion

51
00:02:48,610 --> 00:02:50,860
detection system being created in 1984

52
00:02:50,860 --> 00:02:54,270
but Dorothy Denning and Peter Newman

53
00:02:54,270 --> 00:02:57,820
this isn't the IDS that we know today

54
00:02:57,820 --> 00:03:00,070
this was actually a what they call like

55
00:03:00,070 --> 00:03:02,100
an intrusion detection expert system

56
00:03:02,100 --> 00:03:05,590
this was a precursor to the AI deep

57
00:03:05,590 --> 00:03:06,850
learning and everything that we heard

58
00:03:06,850 --> 00:03:11,710
now like a lot of the marketing we see

59
00:03:11,710 --> 00:03:13,930
now it didn't have a whole lot of

60
00:03:13,930 --> 00:03:17,230
potential and so ultimately kind of fell

61
00:03:17,230 --> 00:03:18,640
apart but this was really the first

62
00:03:18,640 --> 00:03:20,650
intrusion detection system what they

63
00:03:20,650 --> 00:03:22,870
tried to do is they try to take what an

64
00:03:22,870 --> 00:03:25,090
analyst would look for wait these things

65
00:03:25,090 --> 00:03:27,070
out and try to mimic actually how a

66
00:03:27,070 --> 00:03:28,810
human would think about things in order

67
00:03:28,810 --> 00:03:31,750
to detect these malicious events like I

68
00:03:31,750 --> 00:03:33,610
said wasn't really all that successful

69
00:03:33,610 --> 00:03:36,540
they continued to kind of tinker it and

70
00:03:36,540 --> 00:03:38,710
kind of worked out all the technology

71
00:03:38,710 --> 00:03:42,430
then in 1987 the first antivirus was

72
00:03:42,430 --> 00:03:44,380
released and then we kind of had like a

73
00:03:44,380 --> 00:03:46,420
nice detection kind of like winter I

74
00:03:46,420 --> 00:03:49,600
guess you could say until like 1999 when

75
00:03:49,600 --> 00:03:51,780
each security released the first sim a

76
00:03:51,780 --> 00:03:54,130
few years later they were snapped up by

77
00:03:54,130 --> 00:03:57,280
the Novell and then in the mid-2000s the

78
00:03:57,280 --> 00:03:59,560
first edr carbon black came onto the

79
00:03:59,560 --> 00:04:03,700
market and if you think about it all

80
00:04:03,700 --> 00:04:06,760
these tools in a wave required sections

81
00:04:06,760 --> 00:04:10,780
to be made and these detection that we

82
00:04:10,780 --> 00:04:12,640
kind of make if you think about it our

83
00:04:12,640 --> 00:04:17,589
code really in and of itself your EDR

84
00:04:17,589 --> 00:04:20,380
tool is like an interpreter of sorts or

85
00:04:20,380 --> 00:04:22,420
a compiler you write a rule for it

86
00:04:22,420 --> 00:04:24,850
interprets it compiles it and does what

87
00:04:24,850 --> 00:04:26,590
it needs to do with it it might not be a

88
00:04:26,590 --> 00:04:29,740
Turing complete language but same thing

89
00:04:29,740 --> 00:04:31,630
really with your IDs you're writing some

90
00:04:31,630 --> 00:04:33,790
type of code you can view your IDs

91
00:04:33,790 --> 00:04:35,200
system kind of as a compiler or

92
00:04:35,200 --> 00:04:37,330
interpreter and you're passing it it's

93
00:04:37,330 --> 00:04:38,620
executing some kind of like

94
00:04:38,620 --> 00:04:41,080
functionality so when you think about it

95
00:04:41,080 --> 00:04:42,220
we've actually been doing kind of like

96
00:04:42,220 --> 00:04:44,500
this detector is code stuff for kind of

97
00:04:44,500 --> 00:04:49,210
a while so yeah I don't need to tell you

98
00:04:49,210 --> 00:04:50,979
pretty much already been doing detectors

99
00:04:50,979 --> 00:04:54,350
of code it's kind of surprising right

100
00:04:54,350 --> 00:05:02,520
yep thanks for coming the thought no I

101
00:05:02,520 --> 00:05:07,770
just kiddin so there's a lot of problems

102
00:05:07,770 --> 00:05:09,930
with our current detective strategy yeah

103
00:05:09,930 --> 00:05:11,430
we're doing it as code but the thing is

104
00:05:11,430 --> 00:05:14,450
that we have like a ton of issues still

105
00:05:14,450 --> 00:05:16,889
like these are actual quotes that I've

106
00:05:16,889 --> 00:05:19,500
heard during my time as like a security

107
00:05:19,500 --> 00:05:23,430
like person like hey Brandon you know

108
00:05:23,430 --> 00:05:25,200
that rule I've just made completely blew

109
00:05:25,200 --> 00:05:27,870
up the sim like 20,000 alerts in like

110
00:05:27,870 --> 00:05:30,510
five minutes probably want to clear that

111
00:05:30,510 --> 00:05:33,360
out it's not really something you want

112
00:05:33,360 --> 00:05:35,040
to go through as an analyst to try to

113
00:05:35,040 --> 00:05:37,800
clear out like 20,000 alerts especially

114
00:05:37,800 --> 00:05:39,419
when these types of rules often create

115
00:05:39,419 --> 00:05:42,510
like a backlog effect so you kill the

116
00:05:42,510 --> 00:05:44,250
alert and you continue to still get like

117
00:05:44,250 --> 00:05:46,200
another 20,000 alerts over the next two

118
00:05:46,200 --> 00:05:47,540
or three minutes

119
00:05:47,540 --> 00:05:49,590
another thing that I've actually heard

120
00:05:49,590 --> 00:05:52,200
is you guys noticed we haven't got any

121
00:05:52,200 --> 00:05:54,150
IDs alerts since we upgraded the

122
00:05:54,150 --> 00:05:58,200
hobbyist client six months ago Oh should

123
00:05:58,200 --> 00:06:01,590
have called that one or you know the EGR

124
00:06:01,590 --> 00:06:04,380
rule that creates the detectives we got

125
00:06:04,380 --> 00:06:07,350
pwned again yeah I didn't really quite

126
00:06:07,350 --> 00:06:09,030
test that rule logic the way I should've

127
00:06:09,030 --> 00:06:10,950
and by the way the guys are still

128
00:06:10,950 --> 00:06:12,690
evidently in the networking all about

129
00:06:12,690 --> 00:06:15,330
like 20 or 30 assets not something not

130
00:06:15,330 --> 00:06:17,340
really a talk you want to have with your

131
00:06:17,340 --> 00:06:21,450
c-suite and probably the most

132
00:06:21,450 --> 00:06:23,760
disappointing one is know that noisy

133
00:06:23,760 --> 00:06:28,830
rule I tried the two now I broke it you

134
00:06:28,830 --> 00:06:29,940
don't happen to remember what the old

135
00:06:29,940 --> 00:06:32,130
rule logic was where do you I didn't

136
00:06:32,130 --> 00:06:35,190
write it down it'd be nice to somehow

137
00:06:35,190 --> 00:06:38,490
another get it back I mean really truly

138
00:06:38,490 --> 00:06:40,590
like the way that we implement detector

139
00:06:40,590 --> 00:06:47,520
detection as a as a whole is just

140
00:06:47,520 --> 00:06:49,410
completely and totally broken and we

141
00:06:49,410 --> 00:06:51,180
kind of realized that here it's Soteria

142
00:06:51,180 --> 00:06:52,560
when we went into it we really wanted to

143
00:06:52,560 --> 00:06:54,300
solve this problem and there's a couple

144
00:06:54,300 --> 00:06:55,979
other organizations that's also kind of

145
00:06:55,979 --> 00:06:58,860
follow about this problem and this talk

146
00:06:58,860 --> 00:07:03,750
really is about our solution here so I

147
00:07:03,750 --> 00:07:05,700
mean let's let's really touch on like

148
00:07:05,700 --> 00:07:07,110
you know I gave you a nice

149
00:07:07,110 --> 00:07:08,460
but let's really touch on what the

150
00:07:08,460 --> 00:07:11,490
problems are all your detector is

151
00:07:11,490 --> 00:07:14,190
reliable if I upgrade an operating

152
00:07:14,190 --> 00:07:15,840
system are you sure it's still gonna

153
00:07:15,840 --> 00:07:16,350
work

154
00:07:16,350 --> 00:07:18,690
are you sure that some part of that EDR

155
00:07:18,690 --> 00:07:21,450
systems not gonna break are you sure

156
00:07:21,450 --> 00:07:23,490
that that IDs is still gonna function

157
00:07:23,490 --> 00:07:26,730
the same way those IDs logs and alerts

158
00:07:26,730 --> 00:07:29,070
they gonna still have the same fields

159
00:07:29,070 --> 00:07:32,660
you can parse or my detectives resilient

160
00:07:32,660 --> 00:07:35,430
if I make a detector that looks for

161
00:07:35,430 --> 00:07:37,140
meaning at somewhere in there and that

162
00:07:37,140 --> 00:07:39,930
changed to me me dogs it's just still

163
00:07:39,930 --> 00:07:44,370
gonna fire do I provide all the coverage

164
00:07:44,370 --> 00:07:47,940
I need with my plethora of detection in

165
00:07:47,940 --> 00:07:49,620
order to make sure that more

166
00:07:49,620 --> 00:07:54,180
organization is secure and as we've kind

167
00:07:54,180 --> 00:07:57,450
of heart on our my detectors bug free

168
00:07:57,450 --> 00:07:59,550
they answer that question we'll always

169
00:07:59,550 --> 00:08:02,070
be known as essential both positives are

170
00:08:02,070 --> 00:08:03,930
that's essentially what false negatives

171
00:08:03,930 --> 00:08:06,690
are false positives overwhelm analysts

172
00:08:06,690 --> 00:08:09,120
when they're overwhelmed they kind of

173
00:08:09,120 --> 00:08:10,440
get into this routine like oh that's

174
00:08:10,440 --> 00:08:12,270
always been a false positive kind of

175
00:08:12,270 --> 00:08:15,420
kind of ignore the false negative issue

176
00:08:15,420 --> 00:08:18,390
is you can't fix what you don't know so

177
00:08:18,390 --> 00:08:19,770
if someone's in there and it's a false

178
00:08:19,770 --> 00:08:21,510
negative and it never fires I mean that

179
00:08:21,510 --> 00:08:22,920
that's essentially a bug you want

180
00:08:22,920 --> 00:08:25,890
perfection but unfortunately like just

181
00:08:25,890 --> 00:08:27,540
about any other software product out

182
00:08:27,540 --> 00:08:28,770
there there's no such thing as

183
00:08:28,770 --> 00:08:31,740
perfection the solution to the bug you

184
00:08:31,740 --> 00:08:33,990
currently have in place is just

185
00:08:33,990 --> 00:08:36,570
ultimately gonna be cause the next bug

186
00:08:36,570 --> 00:08:39,539
you have to fix but that being said

187
00:08:39,539 --> 00:08:42,030
there's always an acceptable number of

188
00:08:42,030 --> 00:08:43,650
bugs that you can push into production

189
00:08:43,650 --> 00:08:48,870
that you getting really just handle so

190
00:08:48,870 --> 00:08:51,480
really the ultimate question is does

191
00:08:51,480 --> 00:08:55,280
your detectors work as expected

192
00:08:57,590 --> 00:09:00,380
yep you can see the panic on some

193
00:09:00,380 --> 00:09:04,730
people's faces not really but uh it's

194
00:09:04,730 --> 00:09:06,020
kind of a scary thing it's dark play

195
00:09:06,020 --> 00:09:07,940
really kind of a dark thing if you think

196
00:09:07,940 --> 00:09:10,760
about it like the tools and technology

197
00:09:10,760 --> 00:09:11,930
even if you're not writing your own

198
00:09:11,930 --> 00:09:14,089
detectors if you're using a Palo Alto

199
00:09:14,089 --> 00:09:16,100
and you're using that IDs function built

200
00:09:16,100 --> 00:09:18,740
into the IPS function built into it do

201
00:09:18,740 --> 00:09:20,120
you know that it's doing what's supposed

202
00:09:20,120 --> 00:09:22,910
to do it's kind of scary I mean you

203
00:09:22,910 --> 00:09:24,500
pretty much pretty much you're putting

204
00:09:24,500 --> 00:09:27,950
all your eggs in one basket we got a

205
00:09:27,950 --> 00:09:28,820
solution to that

206
00:09:28,820 --> 00:09:31,880
DevOps the reason is the solution is

207
00:09:31,880 --> 00:09:32,960
because it's a really cool public

208
00:09:32,960 --> 00:09:37,250
buzzword and to be honest actually works

209
00:09:37,250 --> 00:09:39,950
so you know we kind of talked about like

210
00:09:39,950 --> 00:09:42,529
detectors as code like what actually is

211
00:09:42,529 --> 00:09:45,140
like detectives code well what if you

212
00:09:45,140 --> 00:09:46,790
know if you think about it

213
00:09:46,790 --> 00:09:50,660
software developers solve these problems

214
00:09:50,660 --> 00:09:52,610
these bug problems these resiliency

215
00:09:52,610 --> 00:09:56,470
problems does my code do it does my code

216
00:09:56,470 --> 00:09:59,560
work the way I expect it to work and

217
00:09:59,560 --> 00:10:01,640
really and truly if you think about

218
00:10:01,640 --> 00:10:03,290
there's no reason to reinvent the wheel

219
00:10:03,290 --> 00:10:07,670
we can just take from there 30 40 years

220
00:10:07,670 --> 00:10:10,610
of practices of developed like a actual

221
00:10:10,610 --> 00:10:12,470
lifecycle for this type of stuff we can

222
00:10:12,470 --> 00:10:15,380
adopt it we can apply it to our own code

223
00:10:15,380 --> 00:10:18,710
as you will our detectors and use the

224
00:10:18,710 --> 00:10:25,370
same strategy now DevOps is kind of like

225
00:10:25,370 --> 00:10:27,320
one of these newer coding strategy it

226
00:10:27,320 --> 00:10:29,480
would be probably pretty helpful to you

227
00:10:29,480 --> 00:10:30,800
know break it down for those who are

228
00:10:30,800 --> 00:10:33,650
unfamiliar in the room so really truly

229
00:10:33,650 --> 00:10:36,589
like DevOps at its core is like a set of

230
00:10:36,589 --> 00:10:38,420
software development practices that

231
00:10:38,420 --> 00:10:39,950
really true what you're trying to do is

232
00:10:39,950 --> 00:10:41,690
you're trying to bring that dev part in

233
00:10:41,690 --> 00:10:44,000
the operation part together the problem

234
00:10:44,000 --> 00:10:45,440
is there's usually like a disconnect

235
00:10:45,440 --> 00:10:46,850
between the people developing the rules

236
00:10:46,850 --> 00:10:48,830
and the people that's maintaining the

237
00:10:48,830 --> 00:10:51,080
appliances they don't get along they

238
00:10:51,080 --> 00:10:53,240
point fingers they don't work together

239
00:10:53,240 --> 00:10:55,790
tightly enough and because they don't

240
00:10:55,790 --> 00:10:57,920
work together tightly enough there's

241
00:10:57,920 --> 00:10:59,900
communication problems all these things

242
00:10:59,900 --> 00:11:02,390
that seep in that's ultimately what

243
00:11:02,390 --> 00:11:04,130
causes a lot of the issues you see in

244
00:11:04,130 --> 00:11:07,550
production so the object ID abide DevOps

245
00:11:07,550 --> 00:11:10,790
is to kind of merge those almost until I

246
00:11:10,790 --> 00:11:11,089
can

247
00:11:11,089 --> 00:11:14,089
one type of organization they have like

248
00:11:14,089 --> 00:11:16,579
very specified communication channels

249
00:11:16,579 --> 00:11:19,149
developers are trained in operations

250
00:11:19,149 --> 00:11:21,350
operation folks like understand

251
00:11:21,350 --> 00:11:23,779
development so they both understand each

252
00:11:23,779 --> 00:11:25,730
side of the equation they help each

253
00:11:25,730 --> 00:11:28,309
other out it's kind of like a really

254
00:11:28,309 --> 00:11:30,800
it's not too novel if you think about it

255
00:11:30,800 --> 00:11:32,360
but it's really been kind of like

256
00:11:32,360 --> 00:11:33,920
earth-shattering and the way we do

257
00:11:33,920 --> 00:11:37,899
things also a big function of DevOps is

258
00:11:37,899 --> 00:11:40,309
really trying to minimize what we call

259
00:11:40,309 --> 00:11:43,459
whip work-in-progress the idea is if you

260
00:11:43,459 --> 00:11:46,999
as a company are paying for ten million

261
00:11:46,999 --> 00:11:48,379
dollars for some software app

262
00:11:48,379 --> 00:11:51,170
application to be developed you don't

263
00:11:51,170 --> 00:11:53,300
want to wait three or four years for

264
00:11:53,300 --> 00:11:55,040
that ten million dollars to be realized

265
00:11:55,040 --> 00:11:57,290
they would much rather shorten that

266
00:11:57,290 --> 00:11:59,389
work-in-progress cycle and get something

267
00:11:59,389 --> 00:12:01,459
out that maybe isn't as feature-rich

268
00:12:01,459 --> 00:12:03,559
but get it out in production so they

269
00:12:03,559 --> 00:12:05,180
have something so they can start earning

270
00:12:05,180 --> 00:12:06,889
back some of that technical debt they've

271
00:12:06,889 --> 00:12:09,079
accrued they're like start making it

272
00:12:09,079 --> 00:12:10,910
dent and like just to find this ten

273
00:12:10,910 --> 00:12:13,189
million dollar investment and DevOps

274
00:12:13,189 --> 00:12:15,230
really helps out for this because first

275
00:12:15,230 --> 00:12:17,929
of all having really the operation folks

276
00:12:17,929 --> 00:12:19,790
the IT folks and the developers count on

277
00:12:19,790 --> 00:12:21,290
the same page understanding stuff

278
00:12:21,290 --> 00:12:23,149
communicating better really

279
00:12:23,149 --> 00:12:24,740
understanding the technology stack I

280
00:12:24,740 --> 00:12:26,179
mean that's that's one thing to kind of

281
00:12:26,179 --> 00:12:28,370
push that out but there's a whole

282
00:12:28,370 --> 00:12:30,139
different piece to that and that's where

283
00:12:30,139 --> 00:12:31,429
the continuous integration and

284
00:12:31,429 --> 00:12:33,499
continuous development pipelines come in

285
00:12:33,499 --> 00:12:37,309
the idea is that you know way back in

286
00:12:37,309 --> 00:12:41,929
the early like 90s even like mid 2000s a

287
00:12:41,929 --> 00:12:44,689
lot of like the testing that we do for

288
00:12:44,689 --> 00:12:45,949
software to make sure that you know

289
00:12:45,949 --> 00:12:49,309
there's a except you know a user

290
00:12:49,309 --> 00:12:51,499
acceptance test are there gonna be as

291
00:12:51,499 --> 00:12:53,779
few bugs as possible that users aren't

292
00:12:53,779 --> 00:12:56,360
gonna just like rage quit that was all

293
00:12:56,360 --> 00:12:59,779
done manually and you know eventually

294
00:12:59,779 --> 00:13:03,079
you know developers kind of wised up and

295
00:13:03,079 --> 00:13:05,420
decided we can automate these tests I

296
00:13:05,420 --> 00:13:06,769
mean a lot of these are very like simple

297
00:13:06,769 --> 00:13:09,709
tests we are kind of like automate unit

298
00:13:09,709 --> 00:13:11,360
testing so we can probably automate user

299
00:13:11,360 --> 00:13:13,670
accept testing regression testing all

300
00:13:13,670 --> 00:13:16,309
these things and really in truly this

301
00:13:16,309 --> 00:13:18,170
cow we kind of come up with continuous

302
00:13:18,170 --> 00:13:20,439
integration continuous deployment

303
00:13:20,439 --> 00:13:24,320
continuous integration is that idea

304
00:13:24,320 --> 00:13:27,770
going through in pushing pieces of code

305
00:13:27,770 --> 00:13:30,020
as quickly as possible that actually

306
00:13:30,020 --> 00:13:31,940
function get them out there so they can

307
00:13:31,940 --> 00:13:34,520
be used that continuous deployment is

308
00:13:34,520 --> 00:13:36,950
kind of like that piece that's actually

309
00:13:36,950 --> 00:13:39,080
doing the testing so what happens is as

310
00:13:39,080 --> 00:13:40,910
you deploy code the code is

311
00:13:40,910 --> 00:13:43,400
automatically tested if it passed the

312
00:13:43,400 --> 00:13:45,920
test it moves to the next stage so from

313
00:13:45,920 --> 00:13:47,270
the dev environment to the QA

314
00:13:47,270 --> 00:13:49,340
environment maybe in the QA environment

315
00:13:49,340 --> 00:13:51,110
there's some different tests that are

316
00:13:51,110 --> 00:13:52,310
done maybe you're testing for

317
00:13:52,310 --> 00:13:54,650
scalability not the code in QA that

318
00:13:54,650 --> 00:13:56,600
passes those scalability tests that

319
00:13:56,600 --> 00:13:58,820
stress test then it moves over the prod

320
00:13:58,820 --> 00:14:01,670
automatically it really truly if you

321
00:14:01,670 --> 00:14:03,410
think about it you well will touch a

322
00:14:03,410 --> 00:14:05,240
little bit more on this change controls

323
00:14:05,240 --> 00:14:06,800
kind of already built into like this

324
00:14:06,800 --> 00:14:08,990
tooling and technology so that's one of

325
00:14:08,990 --> 00:14:10,130
the ways you can automate it because

326
00:14:10,130 --> 00:14:11,720
that change control process that's

327
00:14:11,720 --> 00:14:14,360
usually like a foundational piece is

328
00:14:14,360 --> 00:14:17,180
actually built in and it's very easy to

329
00:14:17,180 --> 00:14:19,280
revert back bad codes that you thought

330
00:14:19,280 --> 00:14:21,590
was acceptable maybe made to production

331
00:14:21,590 --> 00:14:22,880
that you didn't have a test for it's

332
00:14:22,880 --> 00:14:24,200
really easy to kind of like move that

333
00:14:24,200 --> 00:14:26,540
back especially with the use of source

334
00:14:26,540 --> 00:14:28,760
code management tools like github get

335
00:14:28,760 --> 00:14:30,800
lab because I actually have version

336
00:14:30,800 --> 00:14:33,410
control built in if something doesn't

337
00:14:33,410 --> 00:14:35,750
work I click back it reverts goes right

338
00:14:35,750 --> 00:14:37,580
back through that same see ICD pipeline

339
00:14:37,580 --> 00:14:40,250
and then boom right back to the same

340
00:14:40,250 --> 00:14:41,750
state I wasn't before I push that back

341
00:14:41,750 --> 00:14:47,320
code so if you really think about it our

342
00:14:47,320 --> 00:14:49,730
solution are redefining it detectors

343
00:14:49,730 --> 00:14:51,080
this code it's really adopting the

344
00:14:51,080 --> 00:14:54,140
strategy storing the detector logic and

345
00:14:54,140 --> 00:14:58,540
some type of like software management

346
00:14:58,540 --> 00:15:02,450
code repository like github or gitlab or

347
00:15:02,450 --> 00:15:03,410
even bitbucket

348
00:15:03,410 --> 00:15:04,730
or really anything out there that most

349
00:15:04,730 --> 00:15:07,220
of your software developers use building

350
00:15:07,220 --> 00:15:09,470
a CI CD pipeline to run automated tests

351
00:15:09,470 --> 00:15:12,590
against these detect these this detector

352
00:15:12,590 --> 00:15:15,770
logic and deploying the detector logic

353
00:15:15,770 --> 00:15:20,900
if it passes all the tests automatically

354
00:15:20,900 --> 00:15:23,920
no human interaction involved whatsoever

355
00:15:23,920 --> 00:15:26,270
but it is important to notice that this

356
00:15:26,270 --> 00:15:28,250
is not dev sec ops we're not going to

357
00:15:28,250 --> 00:15:30,440
touch on that I'm not gonna try to teach

358
00:15:30,440 --> 00:15:32,540
you like a whole crash course on develop

359
00:15:32,540 --> 00:15:35,360
dev ops here so this is not what that is

360
00:15:35,360 --> 00:15:37,160
that's the process of actually building

361
00:15:37,160 --> 00:15:38,010
security

362
00:15:38,010 --> 00:15:39,120
to these pipelines we're not going to

363
00:15:39,120 --> 00:15:40,580
touch on that so please don't confuse

364
00:15:40,580 --> 00:15:44,940
this with that so the benefits we've

365
00:15:44,940 --> 00:15:45,990
kind of already touched on them but

366
00:15:45,990 --> 00:15:47,490
let's really kind of like hone in on

367
00:15:47,490 --> 00:15:49,860
change controls built in as a core

368
00:15:49,860 --> 00:15:53,010
feature I put it in code and I check it

369
00:15:53,010 --> 00:15:55,710
into the repository for it to go to the

370
00:15:55,710 --> 00:15:58,020
staging or master branch which is like

371
00:15:58,020 --> 00:15:59,610
another place that the code is moved to

372
00:15:59,610 --> 00:16:02,760
it has to be peer-reviewed so like my

373
00:16:02,760 --> 00:16:04,290
peer David sitting up here in the front

374
00:16:04,290 --> 00:16:05,820
we look over and says yeah this this

375
00:16:05,820 --> 00:16:07,110
looks like it's pretty solid it meets

376
00:16:07,110 --> 00:16:10,350
our our standards I'm gonna approve it

377
00:16:10,350 --> 00:16:12,240
and he gets approved and you can have

378
00:16:12,240 --> 00:16:14,970
two three four however many steps of

379
00:16:14,970 --> 00:16:18,150
peer approval you want in there and once

380
00:16:18,150 --> 00:16:19,680
it meets all that peer prove what you

381
00:16:19,680 --> 00:16:21,690
can even break it up at the front at the

382
00:16:21,690 --> 00:16:23,490
end throughout the whole process

383
00:16:23,490 --> 00:16:25,980
and as it as it goes through this almost

384
00:16:25,980 --> 00:16:27,450
like you're changed control its audited

385
00:16:27,450 --> 00:16:28,860
right there into your source control

386
00:16:28,860 --> 00:16:31,650
management system the version controls

387
00:16:31,650 --> 00:16:33,270
core feature of these source control

388
00:16:33,270 --> 00:16:35,190
management systems we're reverting back

389
00:16:35,190 --> 00:16:37,710
to old code that whole like up forgot

390
00:16:37,710 --> 00:16:39,960
the sim logic you guys remember what it

391
00:16:39,960 --> 00:16:44,970
is easy just button click right back we

392
00:16:44,970 --> 00:16:47,310
can also improve detector resiliency

393
00:16:47,310 --> 00:16:50,790
through automated testing so frameworks

394
00:16:50,790 --> 00:16:54,270
like the atomic Red Team caldera by

395
00:16:54,270 --> 00:16:56,220
miter all this stuff you can actually

396
00:16:56,220 --> 00:17:00,390
build into this CICP pipeline test this

397
00:17:00,390 --> 00:17:03,900
stuff and you know exactly if your rules

398
00:17:03,900 --> 00:17:06,420
are going to fire the way you expect

399
00:17:06,420 --> 00:17:09,240
them to fire and the big thing is we're

400
00:17:09,240 --> 00:17:11,130
reducing the time to deploy detectors

401
00:17:11,130 --> 00:17:13,170
this way I'm not having to wait to go

402
00:17:13,170 --> 00:17:15,089
through like some long rigorous like

403
00:17:15,089 --> 00:17:17,520
change management thing wear some socks

404
00:17:17,520 --> 00:17:19,829
in order to keep the sim from breaking

405
00:17:19,829 --> 00:17:20,910
it's like alright well we're going to

406
00:17:20,910 --> 00:17:23,910
deploy all the rules Wednesday at 9:00

407
00:17:23,910 --> 00:17:26,940
a.m. if a threat comes in on Thursday

408
00:17:26,940 --> 00:17:28,860
you write a rule I mean I don't think

409
00:17:28,860 --> 00:17:30,120
your threat actor is gonna wait till

410
00:17:30,120 --> 00:17:31,770
next Wednesday they like breach your

411
00:17:31,770 --> 00:17:33,990
company I mean if they they do that's

412
00:17:33,990 --> 00:17:35,880
really nice of them how long have your

413
00:17:35,880 --> 00:17:39,360
problems to be honest but you don't have

414
00:17:39,360 --> 00:17:40,560
to worry about stuff like this anymore

415
00:17:40,560 --> 00:17:42,270
you don't have to worry about going

416
00:17:42,270 --> 00:17:44,070
through a process that's gonna slow you

417
00:17:44,070 --> 00:17:47,280
down and that lack of visibility because

418
00:17:47,280 --> 00:17:48,800
that process of getting new stuff

419
00:17:48,800 --> 00:17:51,260
deployed

420
00:17:51,260 --> 00:17:54,990
it's so slow so let's talk about the

421
00:17:54,990 --> 00:17:58,800
process overview here so this here's

422
00:17:58,800 --> 00:18:00,060
kind of the process that we've developed

423
00:18:00,060 --> 00:18:01,710
and I'm going to touch on a couple of

424
00:18:01,710 --> 00:18:04,590
different things here and kind of some

425
00:18:04,590 --> 00:18:06,300
customizations and tweaks you can do so

426
00:18:06,300 --> 00:18:07,800
as you can see kind of like our stage

427
00:18:07,800 --> 00:18:11,730
one is uh new detectors are really

428
00:18:11,730 --> 00:18:12,960
submitted to our source control

429
00:18:12,960 --> 00:18:16,230
management platform but who are like

430
00:18:16,230 --> 00:18:18,300
building these detectors well primarily

431
00:18:18,300 --> 00:18:20,730
our detection engineers but the thing is

432
00:18:20,730 --> 00:18:23,490
like that our detection engineers don't

433
00:18:23,490 --> 00:18:24,960
necessarily know everything so what

434
00:18:24,960 --> 00:18:27,000
we've done is using the source control

435
00:18:27,000 --> 00:18:28,410
management systems there's an issue

436
00:18:28,410 --> 00:18:30,450
tracker in there usually used for

437
00:18:30,450 --> 00:18:32,760
tracking bugs what we actually do is we

438
00:18:32,760 --> 00:18:34,500
open up to the whole company so our

439
00:18:34,500 --> 00:18:36,390
detection engineers can say hey you know

440
00:18:36,390 --> 00:18:39,840
I read this blog article or working you

441
00:18:39,840 --> 00:18:41,700
know this alert I noticed that there was

442
00:18:41,700 --> 00:18:44,430
this other activity that didn't fire we

443
00:18:44,430 --> 00:18:47,010
should make a detector for our threat

444
00:18:47,010 --> 00:18:49,350
intelligence team you know we got some

445
00:18:49,350 --> 00:18:50,820
threat Intel through some sharing

446
00:18:50,820 --> 00:18:53,730
programs this you know this threat

447
00:18:53,730 --> 00:18:56,010
actors using this method I don't know if

448
00:18:56,010 --> 00:18:57,210
we have coverage or not but I'm gonna

449
00:18:57,210 --> 00:19:00,060
put it in there and open up an issue now

450
00:19:00,060 --> 00:19:01,740
we're reverse engineers if you're lucky

451
00:19:01,740 --> 00:19:04,140
enough to have them maybe they break

452
00:19:04,140 --> 00:19:06,360
down a new way that malware is executing

453
00:19:06,360 --> 00:19:08,430
or maybe escalating privileges on the

454
00:19:08,430 --> 00:19:11,460
end point they can put in say hey notice

455
00:19:11,460 --> 00:19:12,990
this new unique way they're escalating

456
00:19:12,990 --> 00:19:15,200
privileged this dude baking crow truth

457
00:19:15,200 --> 00:19:18,090
put it in there incident responders I

458
00:19:18,090 --> 00:19:19,440
mean those are God's boots on the ground

459
00:19:19,440 --> 00:19:21,240
they see something and they're concerned

460
00:19:21,240 --> 00:19:23,340
that we don't have coverage they can put

461
00:19:23,340 --> 00:19:25,800
it or request security analyst really

462
00:19:25,800 --> 00:19:27,240
anything like we even open it up to like

463
00:19:27,240 --> 00:19:30,180
c-suite I mean I don't know the c-suite

464
00:19:30,180 --> 00:19:32,280
it's gonna put a detector in but I mean

465
00:19:32,280 --> 00:19:34,590
hey they have an idea they're usually

466
00:19:34,590 --> 00:19:36,300
just in the know because it's their

467
00:19:36,300 --> 00:19:37,980
business to know about the rest of the

468
00:19:37,980 --> 00:19:40,770
company they can put an issue in our

469
00:19:40,770 --> 00:19:43,050
detection engineers take it they kind of

470
00:19:43,050 --> 00:19:45,660
build that kind of detectors from those

471
00:19:45,660 --> 00:19:48,660
issues now the question is how do you

472
00:19:48,660 --> 00:19:50,700
build this like your Sims not gonna use

473
00:19:50,700 --> 00:19:53,790
the same language it's your IDs like you

474
00:19:53,790 --> 00:19:56,010
know cue radar doesn't take the same

475
00:19:56,010 --> 00:19:58,680
rule logic but sericata does sericata

476
00:19:58,680 --> 00:20:00,360
doesn't take the same rule logic that uh

477
00:20:00,360 --> 00:20:03,060
perot does ros not going to take the

478
00:20:03,060 --> 00:20:04,090
same rule

479
00:20:04,090 --> 00:20:07,450
a carbon Blackwood so really truly what

480
00:20:07,450 --> 00:20:09,039
we've done is we've developed like a

481
00:20:09,039 --> 00:20:11,529
gamma file the animal is really really

482
00:20:11,529 --> 00:20:12,880
simple we'll take a look at it here in a

483
00:20:12,880 --> 00:20:14,980
minute but what we're able to do is

484
00:20:14,980 --> 00:20:17,080
we're able to put that code logic for

485
00:20:17,080 --> 00:20:20,080
each platform in the mo file able to say

486
00:20:20,080 --> 00:20:22,870
what platform it specifies - you're even

487
00:20:22,870 --> 00:20:24,429
able if you want to build out an actual

488
00:20:24,429 --> 00:20:27,070
playbook for how to handle that in the

489
00:20:27,070 --> 00:20:29,350
CMO file and you can actually use this

490
00:20:29,350 --> 00:20:31,240
Jamo file it's like a playbook kind of

491
00:20:31,240 --> 00:20:34,299
like your one-stop shop for everything

492
00:20:34,299 --> 00:20:36,970
you need to know about this detector and

493
00:20:36,970 --> 00:20:39,250
you can push this animal file through

494
00:20:39,250 --> 00:20:41,799
your CI CD pipeline so we use Jenkins

495
00:20:41,799 --> 00:20:43,950
which is a traditional developer tool

496
00:20:43,950 --> 00:20:46,149
Jenkins is very nice it's open source

497
00:20:46,149 --> 00:20:48,520
it's free there's plenty of training out

498
00:20:48,520 --> 00:20:51,640
there on like plural side or just buying

499
00:20:51,640 --> 00:20:53,620
your trading platforms you can go buy

500
00:20:53,620 --> 00:20:55,600
books on it there's other ones out there

501
00:20:55,600 --> 00:20:58,120
- Circle CI is kind of like a cloud one

502
00:20:58,120 --> 00:21:00,399
built natively into github so it's

503
00:21:00,399 --> 00:21:02,770
Travis CI to be completely and totally

504
00:21:02,770 --> 00:21:04,120
honest a lot of the stuff that we're

505
00:21:04,120 --> 00:21:05,500
talking about doing if you have a sore

506
00:21:05,500 --> 00:21:08,049
platform like the mr. or phantom they

507
00:21:08,049 --> 00:21:10,270
have connectors right into github you

508
00:21:10,270 --> 00:21:11,770
don't have to go and try to figure out

509
00:21:11,770 --> 00:21:13,570
Jenkins and learn Jenkins and stuff like

510
00:21:13,570 --> 00:21:15,250
that you can just use the plugins built

511
00:21:15,250 --> 00:21:17,770
right into the misto right into phantom

512
00:21:17,770 --> 00:21:19,419
don't even need to pay for it you can

513
00:21:19,419 --> 00:21:20,950
actually use the free version and just

514
00:21:20,950 --> 00:21:22,929
do the same thing because they have the

515
00:21:22,929 --> 00:21:24,909
API integrations into your sim to push

516
00:21:24,909 --> 00:21:27,820
new rules and update rules so I mean

517
00:21:27,820 --> 00:21:29,950
it's really that simple like you don't

518
00:21:29,950 --> 00:21:31,750
need to have necessarily a full-time dev

519
00:21:31,750 --> 00:21:33,100
on your staff to implement this kind of

520
00:21:33,100 --> 00:21:35,830
stuff now one of the things you can do

521
00:21:35,830 --> 00:21:37,330
is you know you want to have some

522
00:21:37,330 --> 00:21:40,330
environment to kind of test this in you

523
00:21:40,330 --> 00:21:42,850
can use terraform to like build up a

524
00:21:42,850 --> 00:21:45,070
environment now what's interesting and

525
00:21:45,070 --> 00:21:47,260
this is kind of the whole reason we

526
00:21:47,260 --> 00:21:48,850
jumped on this kind of like thought

527
00:21:48,850 --> 00:21:50,890
process for this is terraform is

528
00:21:50,890 --> 00:21:53,289
infrastructure as code this here is

529
00:21:53,289 --> 00:21:54,789
something that you know everyone thought

530
00:21:54,789 --> 00:21:56,610
had to be like a rich turning process

531
00:21:56,610 --> 00:21:58,690
hands-on there's no way you can automate

532
00:21:58,690 --> 00:22:01,179
it and pretty much like hashey corpse

533
00:22:01,179 --> 00:22:02,770
came out with terraform and proved that

534
00:22:02,770 --> 00:22:04,990
you could actually just codify all your

535
00:22:04,990 --> 00:22:06,580
infrastructure all your configurations

536
00:22:06,580 --> 00:22:07,929
and set it up on the fly and tear it

537
00:22:07,929 --> 00:22:10,149
down and that was also one of the

538
00:22:10,149 --> 00:22:11,440
reasons that we really thought that this

539
00:22:11,440 --> 00:22:13,210
model would apply to our detection scope

540
00:22:13,210 --> 00:22:15,220
so I can build an environment from

541
00:22:15,220 --> 00:22:19,350
scratch test in it push it through

542
00:22:19,350 --> 00:22:22,120
bada-bing bada-boom and once my

543
00:22:22,120 --> 00:22:23,919
environment set up now I can use kind of

544
00:22:23,919 --> 00:22:26,350
like my own internal tests I can use my

545
00:22:26,350 --> 00:22:27,090
desk Altera

546
00:22:27,090 --> 00:22:29,919
atomic red team really and truly like

547
00:22:29,919 --> 00:22:31,299
any of these frameworks that are

548
00:22:31,299 --> 00:22:32,740
designed to kind of test your security

549
00:22:32,740 --> 00:22:34,840
attack IQ if you want to go on the paid

550
00:22:34,840 --> 00:22:37,090
side there's a lot of frameworks out

551
00:22:37,090 --> 00:22:39,370
that you can really kind of use the test

552
00:22:39,370 --> 00:22:42,130
your detection z' and really kind of

553
00:22:42,130 --> 00:22:44,320
like step step six as all the stuff gets

554
00:22:44,320 --> 00:22:47,020
fed back into the Jenkins if it passes

555
00:22:47,020 --> 00:22:49,270
the testing phase Jenkins will go

556
00:22:49,270 --> 00:22:50,710
through and like tear down that whole

557
00:22:50,710 --> 00:22:53,409
terraform architecture and they'll push

558
00:22:53,409 --> 00:22:56,559
it out based off like based off the ammo

559
00:22:56,559 --> 00:22:59,140
file it'll push it out to your EDR sense

560
00:22:59,140 --> 00:23:00,789
or whatever it is your network security

561
00:23:00,789 --> 00:23:04,059
platform so sericata snort security

562
00:23:04,059 --> 00:23:07,630
onion zeke formerly known as bro your

563
00:23:07,630 --> 00:23:10,990
sim and you're pretty much up and

564
00:23:10,990 --> 00:23:17,770
running just like that yeah I know it's

565
00:23:17,770 --> 00:23:20,110
a lot to take in so we're gonna break it

566
00:23:20,110 --> 00:23:24,970
down a little bit further so phase one

567
00:23:24,970 --> 00:23:26,919
we kind of touched on it it's a new

568
00:23:26,919 --> 00:23:29,890
detective submission so the way we

569
00:23:29,890 --> 00:23:31,960
decided to do it is we are a very use

570
00:23:31,960 --> 00:23:33,909
case driven organization we don't want

571
00:23:33,909 --> 00:23:36,190
to make just detectives for the sheer

572
00:23:36,190 --> 00:23:38,140
reason of having detectors and so when a

573
00:23:38,140 --> 00:23:40,720
c-suite person comes up they're like you

574
00:23:40,720 --> 00:23:42,460
know I've covered for this you're like

575
00:23:42,460 --> 00:23:44,049
oh yeah sure we have like coverage for

576
00:23:44,049 --> 00:23:45,669
this I'm sure we got like 20,000 rules

577
00:23:45,669 --> 00:23:48,370
and all we come to find out like it's

578
00:23:48,370 --> 00:23:50,620
the same 20,000 rules covering the same

579
00:23:50,620 --> 00:23:52,900
thing so we bill out use cases what do

580
00:23:52,900 --> 00:23:54,870
we care about what do we want to detect

581
00:23:54,870 --> 00:23:58,090
so you know the folks put in these issue

582
00:23:58,090 --> 00:23:59,679
things and what we do is we ask them to

583
00:23:59,679 --> 00:24:01,240
put in kind of like a summary here that

584
00:24:01,240 --> 00:24:02,740
you can see on the screen so summarize

585
00:24:02,740 --> 00:24:04,929
kind of what I'm looking for the threat

586
00:24:04,929 --> 00:24:06,460
model why am i actually concerned about

587
00:24:06,460 --> 00:24:08,409
making this rule we've got some

588
00:24:08,409 --> 00:24:10,000
additional details here so we like to

589
00:24:10,000 --> 00:24:12,130
map our like stuff over to mitre so we

590
00:24:12,130 --> 00:24:13,510
can actually map out what the coverage

591
00:24:13,510 --> 00:24:16,419
is you know aren't tests exist so that's

592
00:24:16,419 --> 00:24:18,490
atomic Red Team so is there an atomic

593
00:24:18,490 --> 00:24:20,289
red team test that can are utilize or

594
00:24:20,289 --> 00:24:22,799
I'm gonna have to build my own test

595
00:24:22,799 --> 00:24:25,270
there are the additional notes if I want

596
00:24:25,270 --> 00:24:27,039
to learn more about this what references

597
00:24:27,039 --> 00:24:27,879
did you use to come

598
00:24:27,879 --> 00:24:30,039
with it so I've kind of build out this

599
00:24:30,039 --> 00:24:32,469
whole template and the nice thing is if

600
00:24:32,469 --> 00:24:34,029
you use something like a github or get

601
00:24:34,029 --> 00:24:35,409
lab you can build these templates

602
00:24:35,409 --> 00:24:37,089
automatically someone someone goes and

603
00:24:37,089 --> 00:24:39,549
clicks new issue it's just a blank

604
00:24:39,549 --> 00:24:41,229
template then they have the summary

605
00:24:41,229 --> 00:24:42,999
threat model additional details and it's

606
00:24:42,999 --> 00:24:44,709
got to kind of like fill it out

607
00:24:44,709 --> 00:24:47,079
another thing is over here kind of on

608
00:24:47,079 --> 00:24:49,389
the right-hand side you can see what we

609
00:24:49,389 --> 00:24:51,249
call labels so labels are kind of like a

610
00:24:51,249 --> 00:24:53,889
tag so we can apply these tags to it so

611
00:24:53,889 --> 00:24:57,759
I can apply does this rule work for

612
00:24:57,759 --> 00:25:00,249
Windows doesn't work for Mac so I can

613
00:25:00,249 --> 00:25:02,649
talk about the OS a applies to is a

614
00:25:02,649 --> 00:25:07,539
network layer type of detection or is it

615
00:25:07,539 --> 00:25:09,190
more of a host base or an application

616
00:25:09,190 --> 00:25:12,009
base I can tag it whether or not like a

617
00:25:12,009 --> 00:25:14,799
test exists already for it I can test if

618
00:25:14,799 --> 00:25:17,709
it's in my ders tack framework a lot of

619
00:25:17,709 --> 00:25:19,359
people think that minor tech framework

620
00:25:19,359 --> 00:25:21,459
is comprehensive it's not really it's a

621
00:25:21,459 --> 00:25:25,569
work in progress it makes it for like

622
00:25:25,569 --> 00:25:27,609
very very very easy kind of like

623
00:25:27,609 --> 00:25:30,159
organization categorization it really

624
00:25:30,159 --> 00:25:31,659
helps us kind of break down like if you

625
00:25:31,659 --> 00:25:33,039
have like customer coming in and say you

626
00:25:33,039 --> 00:25:34,899
know I'm in a Mac environment you can

627
00:25:34,899 --> 00:25:36,399
really going to be able to help us I can

628
00:25:36,399 --> 00:25:38,139
pretty much use these issues or what's

629
00:25:38,139 --> 00:25:39,849
closed because of the issue is closed

630
00:25:39,849 --> 00:25:41,319
we've actually developed it and pushed

631
00:25:41,319 --> 00:25:43,479
it into prod and I can go through and

632
00:25:43,479 --> 00:25:45,940
say yeah we have like you know 20

633
00:25:45,940 --> 00:25:47,979
detection for Mac which you know might

634
00:25:47,979 --> 00:25:50,440
be pretty on the low side there but just

635
00:25:50,440 --> 00:25:52,329
throwing something out there 20 Texans

636
00:25:52,329 --> 00:25:54,069
for Mac and it covers like these seven

637
00:25:54,069 --> 00:25:55,539
different use cases these might or

638
00:25:55,539 --> 00:25:56,979
techniques and I can give you details

639
00:25:56,979 --> 00:25:59,649
just based off this issue tracker and

640
00:25:59,649 --> 00:26:01,209
then the nice thing is most of these

641
00:26:01,209 --> 00:26:02,979
source control management systems you

642
00:26:02,979 --> 00:26:04,659
can kind of group a lot of these issues

643
00:26:04,659 --> 00:26:07,119
together and what we call milestones so

644
00:26:07,119 --> 00:26:08,199
it gives you a way to kind of manage

645
00:26:08,199 --> 00:26:09,699
these this is like a project so I can

646
00:26:09,699 --> 00:26:11,259
actually go and say you know this week I

647
00:26:11,259 --> 00:26:13,059
want to work on like these twenty

648
00:26:13,059 --> 00:26:15,609
detectors you know Joe's gonna take

649
00:26:15,609 --> 00:26:17,799
these five Jill's gonna take these five

650
00:26:17,799 --> 00:26:19,899
and you kind of break it up in the

651
00:26:19,899 --> 00:26:22,619
measure progress

652
00:26:35,410 --> 00:26:38,940
Oh No locked up there

653
00:26:44,120 --> 00:26:50,480
yeah hang with me here just second so

654
00:26:50,480 --> 00:26:52,659
everybody do by Tina room IATI folks

655
00:26:52,659 --> 00:26:55,870
technology folks

656
00:27:02,950 --> 00:27:08,379
let's try this again there we go alright

657
00:27:08,379 --> 00:27:10,090
so phase two we're actually developing

658
00:27:10,090 --> 00:27:11,559
the detector so we're taking these

659
00:27:11,559 --> 00:27:13,269
issues now we're actually trying to make

660
00:27:13,269 --> 00:27:17,169
something of them so this kind of goes

661
00:27:17,169 --> 00:27:18,519
into that gamble format that we were

662
00:27:18,519 --> 00:27:20,739
talking about so there's a couple fields

663
00:27:20,739 --> 00:27:23,080
we usually required in a camel and we

664
00:27:23,080 --> 00:27:24,669
kind of recommend everyone do once a

665
00:27:24,669 --> 00:27:27,070
universally unique identifier so this

666
00:27:27,070 --> 00:27:29,440
kind of helps you know makes it easy for

667
00:27:29,440 --> 00:27:31,090
us to count the number of detections we

668
00:27:31,090 --> 00:27:33,460
have it also makes sure that you know

669
00:27:33,460 --> 00:27:35,559
detector is not gonna be overlapping a

670
00:27:35,559 --> 00:27:38,259
name as like actual like a separate

671
00:27:38,259 --> 00:27:40,269
detection all together the other thing

672
00:27:40,269 --> 00:27:42,220
is like you know you you IDs are great

673
00:27:42,220 --> 00:27:43,960
kind of like IP addresses though they're

674
00:27:43,960 --> 00:27:46,239
hard to memorize and if I say uh you

675
00:27:46,239 --> 00:27:49,799
know alert 86 fired no that is I don't

676
00:27:49,799 --> 00:27:52,239
so you really wanted to have kind of a

677
00:27:52,239 --> 00:27:53,619
detector name or some way to actually

678
00:27:53,619 --> 00:27:55,869
understand what's actually firing so

679
00:27:55,869 --> 00:27:57,609
this is kind of our human kind of like

680
00:27:57,609 --> 00:27:59,259
readable it's like our DNS name for

681
00:27:59,259 --> 00:28:01,090
these rules so we're popping that in

682
00:28:01,090 --> 00:28:02,320
there that's what we're kind of like

683
00:28:02,320 --> 00:28:05,440
pushing to the IDs or the sim that we

684
00:28:05,440 --> 00:28:08,200
actually read so status so this is

685
00:28:08,200 --> 00:28:10,539
another thing it's like maybe you're

686
00:28:10,539 --> 00:28:12,100
right like this really good rule you

687
00:28:12,100 --> 00:28:13,899
think it's a really good rule time you

688
00:28:13,899 --> 00:28:16,029
go through you deploy it and let's say

689
00:28:16,029 --> 00:28:17,379
it's not as good as what you thought it

690
00:28:17,379 --> 00:28:19,480
was maybe you don't need it anymore

691
00:28:19,480 --> 00:28:20,799
because you realize that you are I had

692
00:28:20,799 --> 00:28:23,080
overlapping detection you can have a

693
00:28:23,080 --> 00:28:25,570
status field so I can have a status

694
00:28:25,570 --> 00:28:27,519
field as active so it's actually gonna

695
00:28:27,519 --> 00:28:30,070
deploy to prod archive if I really

696
00:28:30,070 --> 00:28:31,749
realize it's no good anymore

697
00:28:31,749 --> 00:28:33,700
I don't have to delete it so I can still

698
00:28:33,700 --> 00:28:35,080
say hey we've tried this rule at one

699
00:28:35,080 --> 00:28:36,850
point in time it didn't work or for some

700
00:28:36,850 --> 00:28:39,309
reason we've archived it you can even do

701
00:28:39,309 --> 00:28:41,230
something like a testing so let's just

702
00:28:41,230 --> 00:28:43,269
say that you know you're just not into

703
00:28:43,269 --> 00:28:45,549
all this new age DevOps stuff just you

704
00:28:45,549 --> 00:28:48,429
know I deploy prod still want to keep

705
00:28:48,429 --> 00:28:50,049
some of that old-school kind of

706
00:28:50,049 --> 00:28:52,600
mentality there you can to put it like a

707
00:28:52,600 --> 00:28:55,029
testing tab and deploy it to like

708
00:28:55,029 --> 00:28:57,730
testing systems or maybe like you know

709
00:28:57,730 --> 00:28:59,139
you just want to push to some

710
00:28:59,139 --> 00:29:03,249
non-critical assets like IDs is on some

711
00:29:03,249 --> 00:29:05,139
parts of network you don't really care

712
00:29:05,139 --> 00:29:07,389
you want kind of get a better feel for

713
00:29:07,389 --> 00:29:10,809
the performance impact really like the

714
00:29:10,809 --> 00:29:12,489
last ones you need and kind of the

715
00:29:12,489 --> 00:29:14,289
essential thing is that detection logic

716
00:29:14,289 --> 00:29:16,480
so what is the thing that's going to

717
00:29:16,480 --> 00:29:18,330
go into the sim that's actually gonna

718
00:29:18,330 --> 00:29:20,500
compute and do the hard work

719
00:29:20,500 --> 00:29:22,330
what is the actual IDS rule that we're

720
00:29:22,330 --> 00:29:24,760
gonna push the snort you can just store

721
00:29:24,760 --> 00:29:26,679
all that in the annual field - now

722
00:29:26,679 --> 00:29:27,790
there's plenty of other things you can

723
00:29:27,790 --> 00:29:29,230
put in these e ammo fields they're great

724
00:29:29,230 --> 00:29:33,100
ideas play books so once again like you

725
00:29:33,100 --> 00:29:34,990
know you've got like a URL reference in

726
00:29:34,990 --> 00:29:36,730
your snort rule that says hey go through

727
00:29:36,730 --> 00:29:38,290
this URL for more information

728
00:29:38,290 --> 00:29:41,110
think about it you put the URL to that

729
00:29:41,110 --> 00:29:43,929
detector logic in github so when it

730
00:29:43,929 --> 00:29:45,309
fires you click that link it takes you

731
00:29:45,309 --> 00:29:46,750
to the github page you can see the rule

732
00:29:46,750 --> 00:29:49,600
logic you can see who created when the

733
00:29:49,600 --> 00:29:52,450
UUID you can pop a playbook into that ya

734
00:29:52,450 --> 00:29:53,620
know file wouldn't get pushed

735
00:29:53,620 --> 00:29:56,020
necessarily to your IDs but it's right

736
00:29:56,020 --> 00:29:57,580
there so you can read about like the

737
00:29:57,580 --> 00:29:59,350
playbook you can read about known false

738
00:29:59,350 --> 00:30:02,110
positives how to kind of work this stuff

739
00:30:02,110 --> 00:30:04,450
so really truly this becomes like your

740
00:30:04,450 --> 00:30:05,770
kind of like knowledge base at this

741
00:30:05,770 --> 00:30:06,970
point in time if you want to do it that

742
00:30:06,970 --> 00:30:09,640
way really the world is your oyster

743
00:30:09,640 --> 00:30:11,020
the amyl you can put whatever you want

744
00:30:11,020 --> 00:30:13,390
at that it's almost like a JSON but it's

745
00:30:13,390 --> 00:30:17,530
a lot easier the reason that JSON phase

746
00:30:17,530 --> 00:30:20,440
3 is that automated testing we're gonna

747
00:30:20,440 --> 00:30:22,660
spin up that infrastructure with

748
00:30:22,660 --> 00:30:25,030
terraform once again if you don't want

749
00:30:25,030 --> 00:30:26,380
to be all new aging you don't feel

750
00:30:26,380 --> 00:30:28,510
comfortable terraform you can just use

751
00:30:28,510 --> 00:30:30,929
physical hardware VMS are persistent

752
00:30:30,929 --> 00:30:34,780
deploy to them in your gamma file you'll

753
00:30:34,780 --> 00:30:37,169
specify like the test the run against it

754
00:30:37,169 --> 00:30:39,850
so Jenkins knows what kind of tests

755
00:30:39,850 --> 00:30:42,100
actually run against it deploy the rule

756
00:30:42,100 --> 00:30:45,190
to that EDR since our on that box that

757
00:30:45,190 --> 00:30:47,950
you know I'd yes since they're here on

758
00:30:47,950 --> 00:30:50,169
the segment of the network even Friday's

759
00:30:50,169 --> 00:30:51,400
stuff you don't even have to deploy it

760
00:30:51,400 --> 00:30:53,590
to an actual real IDs sensor you can

761
00:30:53,590 --> 00:30:56,500
deploy it to a VM you just spun up use

762
00:30:56,500 --> 00:30:58,570
TCP replay have like some packet

763
00:30:58,570 --> 00:31:00,220
captures you want to replay against it

764
00:31:00,220 --> 00:31:02,260
replay it and if it generates the alerts

765
00:31:02,260 --> 00:31:04,049
you expect it and move on

766
00:31:04,049 --> 00:31:06,549
now we kind of touched on it before

767
00:31:06,549 --> 00:31:07,990
there's a lot of these like frameworks

768
00:31:07,990 --> 00:31:09,970
out there there for free so atomic red

769
00:31:09,970 --> 00:31:11,620
team's a big one there's a whole

770
00:31:11,620 --> 00:31:14,470
community around this miners caldera we

771
00:31:14,470 --> 00:31:15,700
still have on there they've actually

772
00:31:15,700 --> 00:31:17,679
just recently moved over to utilizing

773
00:31:17,679 --> 00:31:20,500
the atomic right team can detentions and

774
00:31:20,500 --> 00:31:24,429
kind of methodology in games red team

775
00:31:24,429 --> 00:31:28,510
automation ubers got one but the name

776
00:31:28,510 --> 00:31:30,340
kind of evades me here but there's all

777
00:31:30,340 --> 00:31:32,650
paid solutions I mean you've got threat

778
00:31:32,650 --> 00:31:35,380
care you've got attack IQ you've got all

779
00:31:35,380 --> 00:31:36,880
these solutions you can use to the

780
00:31:36,880 --> 00:31:40,750
simple button clicks and to be honest

781
00:31:40,750 --> 00:31:42,070
with you I'd recommend you probably

782
00:31:42,070 --> 00:31:43,660
using kind of a combination of all these

783
00:31:43,660 --> 00:31:46,450
plus maybe even building your own atomic

784
00:31:46,450 --> 00:31:48,640
red team are gonna test or built a

785
00:31:48,640 --> 00:31:50,530
certain way to test a certain technique

786
00:31:50,530 --> 00:31:53,830
in games red team automations built

787
00:31:53,830 --> 00:31:56,410
another way so the thing is your rule

788
00:31:56,410 --> 00:31:59,200
could fire on the tonic red team maybe

789
00:31:59,200 --> 00:32:01,560
wouldn't fire for the test that in games

790
00:32:01,560 --> 00:32:04,210
red team automation framework casts so

791
00:32:04,210 --> 00:32:05,980
maybe you can look at Tom mixing and

792
00:32:05,980 --> 00:32:10,560
intermingling to to get your coverage up

793
00:32:11,940 --> 00:32:14,500
really truly what it boils down to is

794
00:32:14,500 --> 00:32:15,940
you really need like good internal

795
00:32:15,940 --> 00:32:18,280
testing techniques I mean does that

796
00:32:18,280 --> 00:32:20,380
detection logic actually detect the

797
00:32:20,380 --> 00:32:23,020
intended behavior does the detection

798
00:32:23,020 --> 00:32:26,620
logic detect any unattended behavior are

799
00:32:26,620 --> 00:32:28,510
you generating too much false positives

800
00:32:28,510 --> 00:32:29,770
like I said you're always gonna have

801
00:32:29,770 --> 00:32:31,930
false positives the question is is the

802
00:32:31,930 --> 00:32:33,700
number of false positives that you are

803
00:32:33,700 --> 00:32:36,490
creating is it acceptable to the number

804
00:32:36,490 --> 00:32:39,160
of staff that you have and are you

805
00:32:39,160 --> 00:32:42,430
willing to accept the risk of minimizing

806
00:32:42,430 --> 00:32:43,990
those false positives and possibly

807
00:32:43,990 --> 00:32:48,460
introducing that false negative or my

808
00:32:48,460 --> 00:32:50,860
detectives resilient enough to withstand

809
00:32:50,860 --> 00:32:53,530
common invasion techniques by changing

810
00:32:53,530 --> 00:32:55,510
me me cats to me me dogs is it still

811
00:32:55,510 --> 00:32:57,670
gonna work I can build that into like

812
00:32:57,670 --> 00:33:00,790
the test really quick really easily if I

813
00:33:00,790 --> 00:33:02,620
know I'm gonna upgrade my idea IDs

814
00:33:02,620 --> 00:33:05,470
sensor I can upgrade the IDS sensor with

815
00:33:05,470 --> 00:33:08,230
terraform deploy the codes there have

816
00:33:08,230 --> 00:33:11,260
packet captures of known bad replay it

817
00:33:11,260 --> 00:33:13,240
and see if the new versions not going to

818
00:33:13,240 --> 00:33:14,650
break something so I can determine

819
00:33:14,650 --> 00:33:16,420
whether or not I actually need to or

820
00:33:16,420 --> 00:33:19,600
want to upgrade those sensors or if I

821
00:33:19,600 --> 00:33:21,130
need to wait a little bit and possibly

822
00:33:21,130 --> 00:33:23,110
reevaluate the way I'm doing my

823
00:33:23,110 --> 00:33:25,480
detection or maybe reach out and put in

824
00:33:25,480 --> 00:33:31,270
the bug foot bug request phase four this

825
00:33:31,270 --> 00:33:33,490
is pretty much where like the gold is if

826
00:33:33,490 --> 00:33:35,650
you ask me it's not automated testing

827
00:33:35,650 --> 00:33:39,790
our automatic Matic deployment so over

828
00:33:39,790 --> 00:33:41,590
here kind of at the top you can see we

829
00:33:41,590 --> 00:33:43,840
have our gamma file to store to get

830
00:33:43,840 --> 00:33:45,100
we have some of the fields that we

831
00:33:45,100 --> 00:33:46,570
talked about so we have like the UUID

832
00:33:46,570 --> 00:33:51,820
are UUID for this one is leap oh I

833
00:33:51,820 --> 00:33:53,020
thought I was gonna get more laughs in

834
00:33:53,020 --> 00:33:56,980
that but the status is active in this

835
00:33:56,980 --> 00:33:58,990
case we're actually looking for MSHDA

836
00:33:58,990 --> 00:34:02,860
executing on a URL or you can see here

837
00:34:02,860 --> 00:34:04,720
kind of like our detector we stated the

838
00:34:04,720 --> 00:34:06,610
detection platform is the Lima Charlie

839
00:34:06,610 --> 00:34:10,780
EDR and our detector code is just you

840
00:34:10,780 --> 00:34:13,510
know kind of a dummy field at this point

841
00:34:13,510 --> 00:34:15,820
time that's good go to Jenkins Jenkins

842
00:34:15,820 --> 00:34:17,409
gonna go and check and say is the

843
00:34:17,409 --> 00:34:20,130
detector active yep

844
00:34:20,130 --> 00:34:22,060
deployed to my terraform inch

845
00:34:22,060 --> 00:34:24,550
infrastructure run my test did it pass

846
00:34:24,550 --> 00:34:27,639
all the tests yep deploy the detector

847
00:34:27,639 --> 00:34:30,310
logic to the Tector platform they which

848
00:34:30,310 --> 00:34:32,170
in this case is Lima Charlie EDR you're

849
00:34:32,170 --> 00:34:37,870
up and running that simple now let's

850
00:34:37,870 --> 00:34:40,650
talk about like tying this all together

851
00:34:40,650 --> 00:34:44,320
really and truly if you take this image

852
00:34:44,320 --> 00:34:45,719
right here and you compare it to the

853
00:34:45,719 --> 00:34:48,460
software design lifecycle it's almost a

854
00:34:48,460 --> 00:34:51,219
perfect overlap at this point in time we

855
00:34:51,219 --> 00:34:53,770
are identifying our issues whether that

856
00:34:53,770 --> 00:34:55,270
be it for tuning request does it doesn't

857
00:34:55,270 --> 00:34:56,620
have to be a new detector you can put an

858
00:34:56,620 --> 00:35:00,550
issue in for a tuning request a coverage

859
00:35:00,550 --> 00:35:03,130
gap a new technique I'm identifying this

860
00:35:03,130 --> 00:35:05,170
stuff I'm writing it up I'm doing my

861
00:35:05,170 --> 00:35:08,050
planning then while I'm doing it for my

862
00:35:08,050 --> 00:35:09,430
planning I'm actually going through and

863
00:35:09,430 --> 00:35:11,500
I'm building it I'm researching it I'm

864
00:35:11,500 --> 00:35:15,160
developing the Hamel I'm determining

865
00:35:15,160 --> 00:35:17,440
what is the acceptable false positive

866
00:35:17,440 --> 00:35:18,970
and false negative rate that I'm willing

867
00:35:18,970 --> 00:35:22,210
to accept for my testing now pushing it

868
00:35:22,210 --> 00:35:24,910
off and I'm performing my testing the

869
00:35:24,910 --> 00:35:29,520
tests all ran against my new detectors

870
00:35:29,520 --> 00:35:32,530
we see if they do what they expect we

871
00:35:32,530 --> 00:35:35,920
expect them to do and you can really

872
00:35:35,920 --> 00:35:37,390
like I said touched on earlier you can

873
00:35:37,390 --> 00:35:39,040
do all kind of testing you can do pretty

874
00:35:39,040 --> 00:35:41,530
much like your resiliency tests you can

875
00:35:41,530 --> 00:35:43,920
push it to sensors and you can like just

876
00:35:43,920 --> 00:35:47,200
stress test it to the the core and see

877
00:35:47,200 --> 00:35:49,210
if it's gonna affect like how that end

878
00:35:49,210 --> 00:35:51,600
point the ER tool like really runs

879
00:35:51,600 --> 00:35:54,490
there's so much you can do there and

880
00:35:54,490 --> 00:35:55,990
then ultimately the last stage is

881
00:35:55,990 --> 00:35:56,800
actually deploy

882
00:35:56,800 --> 00:35:57,910
production I mean that's the most

883
00:35:57,910 --> 00:35:59,970
important part if it's not production I

884
00:35:59,970 --> 00:36:07,660
mean who really cares the thing is that

885
00:36:07,660 --> 00:36:10,240
with this this kind of like DevOps

886
00:36:10,240 --> 00:36:12,910
detection is code lock model we're

887
00:36:12,910 --> 00:36:16,180
pushing them straight to production in

888
00:36:16,180 --> 00:36:18,670
an automated fashion when they pass the

889
00:36:18,670 --> 00:36:21,070
test when the proper reviews have been

890
00:36:21,070 --> 00:36:23,380
done and then we're able to kind of like

891
00:36:23,380 --> 00:36:24,910
monitor after it's done there and we're

892
00:36:24,910 --> 00:36:26,560
kind of able to like metric that false

893
00:36:26,560 --> 00:36:30,510
positive a true positive rate see if it

894
00:36:30,510 --> 00:36:33,430
comes in production is the way we expect

895
00:36:33,430 --> 00:36:36,100
it to if not that kind of gives us ideas

896
00:36:36,100 --> 00:36:38,950
of things to go back and build a new

897
00:36:38,950 --> 00:36:40,950
test for for this detector and others

898
00:36:40,950 --> 00:36:44,470
and then ultimately like I said at some

899
00:36:44,470 --> 00:36:46,090
point in time like you deploy a new

900
00:36:46,090 --> 00:36:48,550
technology or something like that it's

901
00:36:48,550 --> 00:36:49,870
probably gonna create a lot of false

902
00:36:49,870 --> 00:36:52,800
positives you got to go back retune it

903
00:36:52,800 --> 00:36:56,850
start the whole process over again

904
00:37:03,680 --> 00:37:08,770
all right so questions concerns comments

905
00:37:08,770 --> 00:37:12,340
any of the above

906
00:37:16,930 --> 00:37:19,750
all right see you then I'll stick around

907
00:37:19,750 --> 00:37:21,840
so if you have any you want to talk

908
00:37:21,840 --> 00:37:25,630
another thing to denote we are hired and

909
00:37:25,630 --> 00:37:26,950
looking for interns so if you need you

910
00:37:26,950 --> 00:37:28,510
guys are out there looking for full-time

911
00:37:28,510 --> 00:37:30,520
jobs or internships maybe next semester

912
00:37:30,520 --> 00:37:33,580
let us know part of the reasons we

913
00:37:33,580 --> 00:37:35,110
couldn't really do a demo today is

914
00:37:35,110 --> 00:37:37,000
because we sacrificed all the other

915
00:37:37,000 --> 00:37:39,730
interns to the demos God's presentation

916
00:37:39,730 --> 00:37:41,950
we did a while ago so like I said we're

917
00:37:41,950 --> 00:37:43,120
always looking for new interns to

918
00:37:43,120 --> 00:37:47,650
sacrifice the demo guts so uh yeah but

919
00:37:47,650 --> 00:37:50,550
uh thank you for coming out

