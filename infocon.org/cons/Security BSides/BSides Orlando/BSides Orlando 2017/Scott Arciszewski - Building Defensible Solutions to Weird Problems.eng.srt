1
00:00:00,000 --> 00:00:04,049
offers no integrity<font color="#CCCCCC"> protection and the</font>

2
00:00:02,790 --> 00:00:05,370
attacker<font color="#E5E5E5"> is like let's say you're</font>

3
00:00:04,049 --> 00:00:05,790
sitting<font color="#E5E5E5"> in an encrypted file to somebody</font>

4
00:00:05,370 --> 00:00:08,370
else

5
00:00:05,790 --> 00:00:09,870
the attacker can<font color="#E5E5E5"> flip</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> knowing what</font>

6
00:00:08,370 --> 00:00:11,518
file format you're opening and if they

7
00:00:09,870 --> 00:00:14,309
have a like let's say<font color="#E5E5E5"> it's a JPEG</font><font color="#CCCCCC"> image</font>

8
00:00:11,519 --> 00:00:16,740
if a vulnerability and that JPEG library

9
00:00:14,309 --> 00:00:19,140
<font color="#CCCCCC">says you your OS uses to load it</font><font color="#E5E5E5"> they</font>

10
00:00:16,740 --> 00:00:21,959
can<font color="#E5E5E5"> probably pop other software</font><font color="#CCCCCC"> in your</font>

11
00:00:19,140 --> 00:00:24,060
system there's a lot<font color="#CCCCCC"> of other weird</font>

12
00:00:21,960 --> 00:00:26,460
attacks you can do you can<font color="#E5E5E5"> use what's</font>

13
00:00:24,060 --> 00:00:28,348
called a padding Oracle<font color="#CCCCCC"> - if it's like</font>

14
00:00:26,460 --> 00:00:30,740
an online<font color="#E5E5E5"> service can't continue sending</font>

15
00:00:28,349 --> 00:00:32,910
mangled<font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> over and over again</font>

16
00:00:30,740 --> 00:00:37,230
and based on whether or<font color="#CCCCCC"> not</font><font color="#E5E5E5"> you get an</font>

17
00:00:32,910 --> 00:00:38,730
error<font color="#E5E5E5"> decrypt the original image</font><font color="#CCCCCC"> if</font>

18
00:00:37,230 --> 00:00:40,140
you're<font color="#E5E5E5"> going to do anything with crypto</font>

19
00:00:38,730 --> 00:00:42,718
you<font color="#E5E5E5"> could adhere to crypto coding</font>

20
00:00:40,140 --> 00:00:44,460
standards<font color="#CCCCCC"> these are</font><font color="#E5E5E5"> common-sense things</font>

21
00:00:42,719 --> 00:00:46,200
that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> well-known</font><font color="#E5E5E5"> among people who</font>

22
00:00:44,460 --> 00:00:47,730
build and<font color="#E5E5E5"> break crypto</font><font color="#CCCCCC"> but not</font><font color="#E5E5E5"> really</font>

23
00:00:46,200 --> 00:00:51,449
well known<font color="#E5E5E5"> to developers</font><font color="#CCCCCC"> outside of that</font>

24
00:00:47,730 --> 00:00:54,360
<font color="#CCCCCC">niche part of the</font><font color="#E5E5E5"> industry</font><font color="#CCCCCC"> the first one</font>

25
00:00:51,449 --> 00:00:55,800
was<font color="#CCCCCC"> actually a project</font><font color="#E5E5E5"> by a well-known</font>

26
00:00:54,360 --> 00:00:59,250
<font color="#E5E5E5">cryptographer</font><font color="#CCCCCC"> I don't want to</font><font color="#E5E5E5"> butcher</font>

27
00:00:55,800 --> 00:01:01,379
his<font color="#E5E5E5"> last name</font><font color="#CCCCCC"> but he worked on</font><font color="#E5E5E5"> Blake to</font>

28
00:00:59,250 --> 00:01:04,739
<font color="#E5E5E5">sip hash and much other projects you've</font>

29
00:01:01,379 --> 00:01:06,990
probably heard of<font color="#E5E5E5"> um if you're using</font>

30
00:01:04,739 --> 00:01:09,720
random numbers which most cryptography

31
00:01:06,990 --> 00:01:11,729
<font color="#E5E5E5">these are random numbers um used to get</font>

32
00:01:09,720 --> 00:01:14,490
random<font color="#CCCCCC"> q sifts call or Debby random</font>

33
00:01:11,729 --> 00:01:15,869
never read from dev random<font color="#CCCCCC"> don't use</font>

34
00:01:14,490 --> 00:01:17,789
random.org or<font color="#E5E5E5"> I need to either create</font>

35
00:01:15,869 --> 00:01:21,150
<font color="#E5E5E5">the ideas</font><font color="#CCCCCC"> either you'll be surprised how</font>

36
00:01:17,790 --> 00:01:25,100
<font color="#CCCCCC">much</font><font color="#E5E5E5"> I see that in production</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> yeah I</font>

37
00:01:21,150 --> 00:01:27,840
<font color="#CCCCCC">copy the demo</font><font color="#E5E5E5"> good thing as I said that</font>

38
00:01:25,100 --> 00:01:30,089
we focus on PHP<font color="#CCCCCC"> because of its wide</font>

39
00:01:27,840 --> 00:01:32,460
market<font color="#E5E5E5"> share so the code examples that</font>

40
00:01:30,090 --> 00:01:38,009
we have<font color="#E5E5E5"> are in PHP but the concepts are</font>

41
00:01:32,460 --> 00:01:40,559
generally<font color="#E5E5E5"> universal so the first thing</font>

42
00:01:38,009 --> 00:01:42,240
is to<font color="#CCCCCC"> create a threat model client comes</font>

43
00:01:40,560 --> 00:01:44,549
<font color="#E5E5E5">to you and says</font><font color="#CCCCCC"> hey we need this done</font>

44
00:01:42,240 --> 00:01:46,919
your first<font color="#E5E5E5"> question should be okay how</font>

45
00:01:44,549 --> 00:01:48,509
<font color="#CCCCCC">are people going</font><font color="#E5E5E5"> to try to break it like</font>

46
00:01:46,920 --> 00:01:50,579
you know what<font color="#CCCCCC"> do</font><font color="#E5E5E5"> the security properties</font>

47
00:01:48,509 --> 00:01:51,810
<font color="#E5E5E5">you're trying to assure you know do you</font>

48
00:01:50,579 --> 00:01:53,100
want to make sure it's just confidential

49
00:01:51,810 --> 00:01:56,460
<font color="#CCCCCC">you probably should worry about</font>

50
00:01:53,100 --> 00:01:57,630
<font color="#E5E5E5">integrity</font><font color="#CCCCCC"> too</font><font color="#E5E5E5"> if it's confidentiality is</font>

51
00:01:56,460 --> 00:01:59,729
under the issue like<font color="#E5E5E5"> it's a public</font>

52
00:01:57,630 --> 00:02:02,339
ledger<font color="#CCCCCC"> like you're</font><font color="#E5E5E5"> doing something with</font>

53
00:01:59,729 --> 00:02:06,119
like certificate transparency<font color="#E5E5E5"> then you</font>

54
00:02:02,340 --> 00:02:10,979
can just focus<font color="#E5E5E5"> on integrity</font><font color="#CCCCCC"> one attacks</font>

55
00:02:06,119 --> 00:02:12,270
can be<font color="#E5E5E5"> attempted like</font><font color="#CCCCCC"> there's an all</font>

56
00:02:10,979 --> 00:02:14,680
kinds of examples<font color="#CCCCCC"> you can go with that</font>

57
00:02:12,270 --> 00:02:16,180
<font color="#CCCCCC">then I can't take up</font><font color="#E5E5E5"> off of my head</font>

58
00:02:14,680 --> 00:02:18,640
how<font color="#CCCCCC"> should your application tolerate</font>

59
00:02:16,180 --> 00:02:19,480
failure<font color="#E5E5E5"> so as I mentioned there</font><font color="#CCCCCC"> was</font>

60
00:02:18,640 --> 00:02:22,089
something called a padding Oracle

61
00:02:19,480 --> 00:02:24,700
against CBC mode<font color="#E5E5E5"> there's other kinds</font><font color="#CCCCCC"> of</font>

62
00:02:22,090 --> 00:02:26,860
padding Oracle's like against RSA what

63
00:02:24,700 --> 00:02:29,260
this means is that if you are encrypting

64
00:02:26,860 --> 00:02:30,700
data and then you send<font color="#E5E5E5"> it to your client</font>

65
00:02:29,260 --> 00:02:33,190
<font color="#E5E5E5">and they flip a bit somewhere in the</font>

66
00:02:30,700 --> 00:02:34,810
<font color="#CCCCCC">cipher text</font><font color="#E5E5E5"> if it creates an error that</font>

67
00:02:33,190 --> 00:02:36,940
<font color="#CCCCCC">might give</font><font color="#E5E5E5"> them useful information about</font>

68
00:02:34,810 --> 00:02:40,030
<font color="#E5E5E5">what you what the decrypted</font><font color="#CCCCCC"> data looks</font>

69
00:02:36,940 --> 00:02:41,800
<font color="#CCCCCC">like before</font><font color="#E5E5E5"> the error was produced</font><font color="#CCCCCC"> for</font>

70
00:02:40,030 --> 00:02:43,900
example<font color="#CCCCCC"> CBC mode</font><font color="#E5E5E5"> is typically used with</font>

71
00:02:41,800 --> 00:02:45,490
a padding<font color="#CCCCCC"> mode where if you have</font><font color="#E5E5E5"> three</font>

72
00:02:43,900 --> 00:02:48,040
<font color="#E5E5E5">left over bytes in your block cipher</font>

73
00:02:45,490 --> 00:02:51,040
<font color="#CCCCCC">it'll append those three the</font><font color="#E5E5E5"> number</font>

74
00:02:48,040 --> 00:02:52,450
<font color="#CCCCCC">three like in binary</font><font color="#E5E5E5"> three times if one</font>

75
00:02:51,040 --> 00:02:54,780
of<font color="#E5E5E5"> those</font><font color="#CCCCCC"> numbers is</font><font color="#E5E5E5"> wrong you'll get an</font>

76
00:02:52,450 --> 00:02:58,149
error padding error<font color="#E5E5E5"> failed to decrypt</font>

77
00:02:54,780 --> 00:03:00,610
that's actually<font color="#E5E5E5"> useful for adaptive</font>

78
00:02:58,150 --> 00:03:03,730
chosen<font color="#E5E5E5"> ciphertext attacks so thinking</font>

79
00:03:00,610 --> 00:03:05,230
about how if you know it might<font color="#CCCCCC"> not</font><font color="#E5E5E5"> be an</font>

80
00:03:03,730 --> 00:03:08,230
active<font color="#E5E5E5"> attacker it could just be like</font><font color="#CCCCCC"> a</font>

81
00:03:05,230 --> 00:03:09,910
network error thinking<font color="#E5E5E5"> about how you</font>

82
00:03:08,230 --> 00:03:11,230
know<font color="#E5E5E5"> the data can</font><font color="#CCCCCC"> be manipulated and</font><font color="#E5E5E5"> how</font>

83
00:03:09,910 --> 00:03:13,660
that could affect<font color="#E5E5E5"> the security</font><font color="#CCCCCC"> of your</font>

84
00:03:11,230 --> 00:03:17,019
what you're trying<font color="#E5E5E5"> to build is very</font>

85
00:03:13,660 --> 00:03:17,950
important because in practice<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of</font>

86
00:03:17,020 --> 00:03:20,920
the things<font color="#E5E5E5"> that you think</font><font color="#CCCCCC"> would be</font>

87
00:03:17,950 --> 00:03:24,488
secure<font color="#E5E5E5"> aren't because of attacks like</font>

88
00:03:20,920 --> 00:03:26,048
<font color="#CCCCCC">that and as I said</font><font color="#E5E5E5"> reuse Orthodox</font>

89
00:03:24,489 --> 00:03:30,489
solutions<font color="#E5E5E5"> were possible even if you're</font>

90
00:03:26,049 --> 00:03:32,500
<font color="#E5E5E5">doing something on Orthodox and anything</font>

91
00:03:30,489 --> 00:03:34,810
that's<font color="#E5E5E5"> not solvable by like</font><font color="#CCCCCC"> okay if you</font>

92
00:03:32,500 --> 00:03:38,290
<font color="#E5E5E5">need a stream cipher use salsa 20 or</font>

93
00:03:34,810 --> 00:03:39,820
<font color="#E5E5E5">ChaCha 20 don't use rc4 don't invent</font>

94
00:03:38,290 --> 00:03:42,010
your own unless you've<font color="#CCCCCC"> been doing</font>

95
00:03:39,820 --> 00:03:45,640
cryptography<font color="#CCCCCC"> for like</font><font color="#E5E5E5"> 20 years</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then</font>

96
00:03:42,010 --> 00:03:48,100
get peer review and<font color="#E5E5E5"> also don't</font><font color="#CCCCCC"> worry</font>

97
00:03:45,640 --> 00:03:49,420
<font color="#E5E5E5">even by</font><font color="#CCCCCC"> like oh um when I said use</font>

98
00:03:48,100 --> 00:03:51,280
authenticated encryption<font color="#E5E5E5"> it's very</font>

99
00:03:49,420 --> 00:03:53,200
important that<font color="#E5E5E5"> you use</font><font color="#CCCCCC"> a mode</font><font color="#E5E5E5"> that's</font>

100
00:03:51,280 --> 00:03:55,299
given to<font color="#E5E5E5"> you or you build it very</font>

101
00:03:53,200 --> 00:03:57,488
carefully<font color="#CCCCCC"> um</font><font color="#E5E5E5"> if you want to indicate</font>

102
00:03:55,299 --> 00:03:59,850
then encrypt<font color="#E5E5E5"> you create more error more</font>

103
00:03:57,489 --> 00:04:04,290
<font color="#CCCCCC">site channels that people can exploit</font>

104
00:03:59,850 --> 00:04:06,609
<font color="#CCCCCC">crypto fails covered this brilliantly so</font>

105
00:04:04,290 --> 00:04:07,989
the solutions<font color="#E5E5E5"> we're using there's two</font>

106
00:04:06,610 --> 00:04:09,820
ways<font color="#E5E5E5"> you can go</font><font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> to show you</font>

107
00:04:07,989 --> 00:04:12,370
<font color="#E5E5E5">the live sodium way</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> are for shared</font>

108
00:04:09,820 --> 00:04:14,980
key encryption<font color="#E5E5E5"> this is no weird</font>

109
00:04:12,370 --> 00:04:18,600
asymmetric<font color="#E5E5E5"> stuff going on</font><font color="#CCCCCC"> these are the</font>

110
00:04:14,980 --> 00:04:22,840
<font color="#E5E5E5">API is even need secret box off</font><font color="#CCCCCC"> PW hash</font>

111
00:04:18,600 --> 00:04:24,669
<font color="#CCCCCC">straightforward public key box sign key</font>

112
00:04:22,840 --> 00:04:28,330
exchange

113
00:04:24,669 --> 00:04:29,560
this is deceptively simple<font color="#E5E5E5"> because</font><font color="#CCCCCC"> wipe</font>

114
00:04:28,330 --> 00:04:30,998
sodium actually tries to make it<font color="#E5E5E5"> as</font>

115
00:04:29,560 --> 00:04:33,550
simple<font color="#E5E5E5"> as</font><font color="#CCCCCC"> possible to implement secure</font>

116
00:04:30,999 --> 00:04:35,770
crypto<font color="#E5E5E5"> if you can transfer this with</font>

117
00:04:33,550 --> 00:04:38,289
<font color="#E5E5E5">using since we're using PHP using the</font>

118
00:04:35,770 --> 00:04:41,469
<font color="#E5E5E5">open exes</font><font color="#CCCCCC"> ssl extension and the native</font>

119
00:04:38,289 --> 00:04:45,099
hash extension<font color="#CCCCCC"> your symmetric encryption</font>

120
00:04:41,469 --> 00:04:47,979
becomes encrypt with<font color="#CCCCCC"> AES 256</font><font color="#E5E5E5"> and counter</font>

121
00:04:45,099 --> 00:04:49,748
mode and then you append<font color="#E5E5E5"> a H Mac of your</font>

122
00:04:47,979 --> 00:04:52,330
cipher text at the<font color="#CCCCCC"> end</font><font color="#E5E5E5"> and encrypts</font><font color="#CCCCCC"> in</font>

123
00:04:49,749 --> 00:04:56,259
<font color="#CCCCCC">mac mode for authentication</font><font color="#E5E5E5"> hmax</font><font color="#CCCCCC"> sauce</font>

124
00:04:52,330 --> 00:04:58,150
<font color="#CCCCCC">256 is fine password hashing</font><font color="#E5E5E5"> decrypt</font>

125
00:04:56,259 --> 00:05:00,069
<font color="#E5E5E5">cross factor 10 if you're using the</font>

126
00:04:58,150 --> 00:05:02,229
password<font color="#CCCCCC"> hash API then you're already</font>

127
00:05:00,069 --> 00:05:04,210
<font color="#CCCCCC">using that</font><font color="#E5E5E5"> if you need to drive a key</font>

128
00:05:02,229 --> 00:05:05,710
though<font color="#E5E5E5"> bcrypt actually wasn't designed</font>

129
00:05:04,210 --> 00:05:07,779
for key derivation it was<font color="#E5E5E5"> only designed</font>

130
00:05:05,710 --> 00:05:11,500
<font color="#E5E5E5">for passwords so cryptographers</font>

131
00:05:07,779 --> 00:05:12,699
typically recommend pbkdf2<font color="#E5E5E5"> which stands</font>

132
00:05:11,500 --> 00:05:15,039
for password-based key derivation

133
00:05:12,699 --> 00:05:18,430
function<font color="#CCCCCC"> to don't worry it's in the</font>

134
00:05:15,039 --> 00:05:20,409
manual you'll have to memorize<font color="#CCCCCC"> that ok</font>

135
00:05:18,430 --> 00:05:21,789
public key crypto for<font color="#E5E5E5"> with open</font><font color="#CCCCCC"> SSL and</font>

136
00:05:20,409 --> 00:05:24,279
<font color="#CCCCCC">the hash extension is where</font><font color="#E5E5E5"> things get</font>

137
00:05:21,789 --> 00:05:26,349
really messy currently the<font color="#E5E5E5"> best way to</font>

138
00:05:24,279 --> 00:05:29,379
use it is<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> what's called Kim BEM</font>

139
00:05:26,349 --> 00:05:31,688
where you encrypt the key and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> you</font>

140
00:05:29,379 --> 00:05:33,069
<font color="#E5E5E5">cook the data separately so what you</font>

141
00:05:31,689 --> 00:05:36,099
<font color="#E5E5E5">would do is you would take</font><font color="#CCCCCC"> a generate a</font>

142
00:05:33,069 --> 00:05:38,139
random 256 bit<font color="#E5E5E5"> values you would encrypt</font>

143
00:05:36,099 --> 00:05:40,330
<font color="#E5E5E5">this with your RSA public key and you</font>

144
00:05:38,139 --> 00:05:43,149
get an RSA ciphertext you would then<font color="#CCCCCC"> use</font>

145
00:05:40,330 --> 00:05:45,909
<font color="#CCCCCC">your random value and the hash or the</font>

146
00:05:43,149 --> 00:05:49,509
ciphertext<font color="#CCCCCC"> in an H Mac the generate a</font>

147
00:05:45,909 --> 00:05:53,050
sub derived key<font color="#E5E5E5"> you would use</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> for</font>

148
00:05:49,509 --> 00:05:56,939
AES 256 counter and sha 256<font color="#E5E5E5"> as with</font>

149
00:05:53,050 --> 00:05:59,529
symmetric<font color="#CCCCCC"> and then you would send the</font>

150
00:05:56,939 --> 00:06:02,710
encrypt the RSA encrypted message and

151
00:05:59,529 --> 00:06:04,210
the symmetric encrypted a message and if

152
00:06:02,710 --> 00:06:05,948
they have the private key they can<font color="#E5E5E5"> fall</font>

153
00:06:04,210 --> 00:06:10,989
<font color="#CCCCCC">through the process and how to light the</font>

154
00:06:05,949 --> 00:06:13,149
<font color="#E5E5E5">same key this is the most</font><font color="#CCCCCC"> it's sidesteps</font>

155
00:06:10,990 --> 00:06:17,710
a lot of the constructions that<font color="#E5E5E5"> lead</font><font color="#CCCCCC"> to</font>

156
00:06:13,149 --> 00:06:20,620
<font color="#CCCCCC">padding Oracle's like if you use RSA and</font>

157
00:06:17,710 --> 00:06:21,789
pkcs1 directly there's been a tax

158
00:06:20,620 --> 00:06:22,300
<font color="#CCCCCC">published they're like</font><font color="#E5E5E5"> seventeen years</font>

159
00:06:21,789 --> 00:06:27,389
old<font color="#E5E5E5"> now</font>

160
00:06:22,300 --> 00:06:27,389
actually no<font color="#E5E5E5"> 19 years old now in a while</font>

161
00:06:27,689 --> 00:06:33,339
same thing with RSA for<font color="#CCCCCC"> signing if</font>

162
00:06:31,719 --> 00:06:36,969
you're doing<font color="#CCCCCC"> lift a curve and</font><font color="#E5E5E5"> you don't</font>

163
00:06:33,339 --> 00:06:38,319
want to use<font color="#CCCCCC"> deterministic ECDSA so you</font>

164
00:06:36,969 --> 00:06:38,770
don't<font color="#E5E5E5"> suffer</font><font color="#CCCCCC"> the same</font><font color="#E5E5E5"> failure that</font>

165
00:06:38,319 --> 00:06:41,860
<font color="#CCCCCC">plagues</font>

166
00:06:38,770 --> 00:06:43,930
<font color="#E5E5E5">PlayStation free as you can see this is</font>

167
00:06:41,860 --> 00:06:46,199
<font color="#E5E5E5">kind of a mess</font><font color="#CCCCCC"> there's a lot</font><font color="#E5E5E5"> of knobs</font>

168
00:06:43,930 --> 00:06:48,430
and levers and things that<font color="#CCCCCC"> can go wrong</font>

169
00:06:46,199 --> 00:06:50,289
<font color="#CCCCCC">what happens if you actually</font><font color="#E5E5E5"> said equals</font>

170
00:06:48,430 --> 00:06:53,110
<font color="#CCCCCC">one</font><font color="#E5E5E5"> for both these are say things like</font>

171
00:06:50,289 --> 00:06:55,300
<font color="#E5E5E5">salt</font><font color="#CCCCCC"> fected famously</font><font color="#E5E5E5"> four years</font><font color="#CCCCCC"> ago your</font>

172
00:06:53,110 --> 00:06:58,750
<font color="#E5E5E5">security goes zero because you're</font>

173
00:06:55,300 --> 00:07:02,050
encrypting<font color="#E5E5E5"> with RSA with a or</font><font color="#CCCCCC"> D equals</font>

174
00:06:58,750 --> 00:07:04,330
one you're basically just<font color="#E5E5E5"> converting to</font>

175
00:07:02,050 --> 00:07:07,660
<font color="#CCCCCC">excel so for reasons that are obvious</font>

176
00:07:04,330 --> 00:07:09,789
the example<font color="#CCCCCC"> code uses lip so diem if</font>

177
00:07:07,660 --> 00:07:11,319
<font color="#CCCCCC">you're deal making production</font><font color="#E5E5E5"> and you</font>

178
00:07:09,789 --> 00:07:12,909
don't have regulations like said to the

179
00:07:11,319 --> 00:07:17,830
tells you you can't use<font color="#E5E5E5"> lip sodium you</font>

180
00:07:12,909 --> 00:07:19,810
definitely should so let's look at a

181
00:07:17,830 --> 00:07:23,109
weird<font color="#E5E5E5"> problem I thought</font><font color="#CCCCCC"> I'd break</font><font color="#E5E5E5"> this</font>

182
00:07:19,810 --> 00:07:24,940
<font color="#E5E5E5">one up</font><font color="#CCCCCC"> so you're</font><font color="#E5E5E5"> running a weird you're</font>

183
00:07:23,110 --> 00:07:27,580
running a<font color="#E5E5E5"> website with a lot of privacy</font>

184
00:07:24,940 --> 00:07:29,710
<font color="#E5E5E5">focus people this could be an activist</font>

185
00:07:27,580 --> 00:07:31,680
group<font color="#CCCCCC"> this could be like a civil rights</font>

186
00:07:29,710 --> 00:07:34,388
group<font color="#E5E5E5"> like you could be doing</font><font color="#CCCCCC"> like an</font>

187
00:07:31,680 --> 00:07:36,009
outreach for<font color="#E5E5E5"> like an LGBT youth group</font>

188
00:07:34,389 --> 00:07:38,740
and you don't want<font color="#E5E5E5"> to store their IP</font>

189
00:07:36,009 --> 00:07:40,539
addresses<font color="#CCCCCC"> in clear-text</font><font color="#E5E5E5"> but you still</font>

190
00:07:38,740 --> 00:07:42,430
kind<font color="#E5E5E5"> of need analytics for whatever</font>

191
00:07:40,539 --> 00:07:45,250
<font color="#E5E5E5">business reasons</font><font color="#CCCCCC"> comes</font><font color="#E5E5E5"> breathing down</font>

192
00:07:42,430 --> 00:07:50,020
your neck of how much traffic is<font color="#E5E5E5"> being</font>

193
00:07:45,250 --> 00:07:53,979
used<font color="#E5E5E5"> and by what variety of users so</font>

194
00:07:50,020 --> 00:07:55,330
<font color="#E5E5E5">okay so that's what that did so there's</font>

195
00:07:53,979 --> 00:07:56,800
a lot<font color="#CCCCCC"> of ways that</font><font color="#E5E5E5"> I've seen people</font><font color="#CCCCCC"> try</font>

196
00:07:55,330 --> 00:08:00,099
<font color="#CCCCCC">to approach this problem the first one</font>

197
00:07:56,800 --> 00:08:01,630
is to encrypt it<font color="#CCCCCC"> but then you</font><font color="#E5E5E5"> get into a</font>

198
00:08:00,099 --> 00:08:05,409
key<font color="#E5E5E5"> management question what key</font><font color="#CCCCCC"> are you</font>

199
00:08:01,630 --> 00:08:06,969
<font color="#E5E5E5">use to encrypt these IP</font><font color="#CCCCCC"> addresses more</font>

200
00:08:05,409 --> 00:08:09,880
importantly it's reversible<font color="#CCCCCC"> if you have</font>

201
00:08:06,969 --> 00:08:12,490
the key you<font color="#E5E5E5"> can decrypt it so if you're</font>

202
00:08:09,880 --> 00:08:13,960
if you get<font color="#CCCCCC"> a NSL saying we need all</font>

203
00:08:12,490 --> 00:08:16,000
subscriber information<font color="#CCCCCC"> you give them an</font>

204
00:08:13,960 --> 00:08:17,739
encrypted IP address it could come back

205
00:08:16,000 --> 00:08:18,370
<font color="#E5E5E5">and say hey you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> the key</font><font color="#CCCCCC"> you can</font>

206
00:08:17,740 --> 00:08:22,000
decrypt it

207
00:08:18,370 --> 00:08:23,469
so that's not a winning solution another

208
00:08:22,000 --> 00:08:26,110
straightforward idea<font color="#E5E5E5"> people might come</font>

209
00:08:23,469 --> 00:08:30,090
up with<font color="#CCCCCC"> is to just hash it</font><font color="#E5E5E5"> like with md5</font>

210
00:08:26,110 --> 00:08:33,010
or saw - unfortunately for<font color="#CCCCCC"> IP version 4</font>

211
00:08:30,090 --> 00:08:36,370
<font color="#E5E5E5">you only have about</font><font color="#CCCCCC"> 4 billion possible</font>

212
00:08:33,010 --> 00:08:39,760
values<font color="#CCCCCC"> cryptographic hash functions</font><font color="#E5E5E5"> are</font>

213
00:08:36,370 --> 00:08:42,010
fast<font color="#CCCCCC"> and you can enumerate all possible</font>

214
00:08:39,760 --> 00:08:45,939
inputs to outputs very trivially

215
00:08:42,010 --> 00:08:48,490
trivially so this is<font color="#E5E5E5"> the solution</font><font color="#CCCCCC"> that</font>

216
00:08:45,940 --> 00:08:49,990
actually<font color="#E5E5E5"> solves the problems so you're</font>

217
00:08:48,490 --> 00:08:51,400
going<font color="#CCCCCC"> to store a random key</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> can be</font>

218
00:08:49,990 --> 00:08:53,230
store in<font color="#E5E5E5"> a file</font><font color="#CCCCCC"> system you can store it</font>

219
00:08:51,400 --> 00:08:55,220
in memcache

220
00:08:53,230 --> 00:08:56,839
it doesn't<font color="#E5E5E5"> need to be</font><font color="#CCCCCC"> live</font><font color="#E5E5E5"> you know</font>

221
00:08:55,220 --> 00:08:59,450
super sensitive<font color="#E5E5E5"> it just needs to only be</font>

222
00:08:56,839 --> 00:09:02,450
<font color="#CCCCCC">valid for 24</font><font color="#E5E5E5"> hours</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> use crypto</font>

223
00:08:59,450 --> 00:09:06,230
off from<font color="#E5E5E5"> work sodium it's basically a H</font>

224
00:09:02,450 --> 00:09:08,660
marker<font color="#E5E5E5"> um and then you will use</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> on</font>

225
00:09:06,230 --> 00:09:10,699
<font color="#E5E5E5">the IP address and store</font><font color="#CCCCCC"> that and you'll</font>

226
00:09:08,660 --> 00:09:14,120
get this<font color="#E5E5E5"> random looking value so I wrote</font>

227
00:09:10,699 --> 00:09:17,990
a text instead<font color="#E5E5E5"> of</font><font color="#CCCCCC"> for uh</font><font color="#E5E5E5"> binary</font>

228
00:09:14,120 --> 00:09:20,029
when the day ends<font color="#E5E5E5"> notice that the same</font>

229
00:09:17,990 --> 00:09:22,940
<font color="#E5E5E5">ip address completely changes the hash</font>

230
00:09:20,029 --> 00:09:24,139
value because the key is<font color="#E5E5E5"> different</font><font color="#CCCCCC"> for</font>

231
00:09:22,940 --> 00:09:28,490
good<font color="#E5E5E5"> hiding you're going to want to wipe</font>

232
00:09:24,139 --> 00:09:30,139
<font color="#CCCCCC">the old</font><font color="#E5E5E5"> keys after 24 hours you could</font>

233
00:09:28,490 --> 00:09:31,399
try<font color="#CCCCCC"> zero filling the file but if you're</font>

234
00:09:30,139 --> 00:09:34,850
on a solid-state<font color="#CCCCCC"> drive that actually</font>

235
00:09:31,399 --> 00:09:37,279
<font color="#E5E5E5">isn't reliable Sam Bowne had a talk it I</font>

236
00:09:34,850 --> 00:09:43,850
think it was<font color="#E5E5E5"> three years ago at a Def</font>

237
00:09:37,279 --> 00:09:45,769
Con about that<font color="#CCCCCC"> and now for the demo so I</font>

238
00:09:43,850 --> 00:09:47,029
don't<font color="#E5E5E5"> actually know the IP address</font><font color="#CCCCCC"> on</font>

239
00:09:45,769 --> 00:09:50,660
the<font color="#E5E5E5"> network or what</font><font color="#CCCCCC"> some network you</font>

240
00:09:47,029 --> 00:09:52,870
<font color="#E5E5E5">would need to get to I can actually find</font>

241
00:09:50,660 --> 00:09:52,870
<font color="#E5E5E5">out</font>

242
00:10:13,690 --> 00:10:21,700
<font color="#E5E5E5">Hey so</font><font color="#CCCCCC"> to get</font><font color="#E5E5E5"> at 10:18 20.1 31 port 1337</font>

243
00:10:18,900 --> 00:10:24,910
<font color="#CCCCCC">you can actually</font><font color="#E5E5E5"> see the demos on any</font>

244
00:10:21,700 --> 00:10:26,890
<font color="#E5E5E5">air devices and if you do that you'll</font>

245
00:10:24,910 --> 00:10:28,270
<font color="#CCCCCC">create traffic</font><font color="#E5E5E5"> pattern that's more</font>

246
00:10:26,890 --> 00:10:28,810
<font color="#E5E5E5">interesting than</font><font color="#CCCCCC"> just the same IP</font>

247
00:10:28,270 --> 00:10:41,560
<font color="#E5E5E5">address</font>

248
00:10:28,810 --> 00:10:43,479
everywhere<font color="#CCCCCC"> okay here's another weird</font>

249
00:10:41,560 --> 00:10:46,689
problem that comes up a lot<font color="#CCCCCC"> in different</font>

250
00:10:43,480 --> 00:10:48,070
<font color="#CCCCCC">companies</font><font color="#E5E5E5"> disclaimers I was told by</font>

251
00:10:46,690 --> 00:10:49,180
people<font color="#CCCCCC"> in the cryptography community is</font>

252
00:10:48,070 --> 00:10:52,060
<font color="#E5E5E5">that actually discourage you from ever</font>

253
00:10:49,180 --> 00:10:54,459
doing this<font color="#E5E5E5"> because</font><font color="#CCCCCC"> it's bad and</font><font color="#E5E5E5"> it's</font>

254
00:10:52,060 --> 00:10:55,719
wrong and<font color="#E5E5E5"> you should if somebody says</font>

255
00:10:54,460 --> 00:10:58,420
<font color="#E5E5E5">hey we</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> this you should definitely</font>

256
00:10:55,720 --> 00:10:59,410
fight it but if you lose<font color="#CCCCCC"> that fight this</font>

257
00:10:58,420 --> 00:11:00,910
is kind of<font color="#E5E5E5"> how you would want</font><font color="#CCCCCC"> to</font>

258
00:10:59,410 --> 00:11:02,650
<font color="#E5E5E5">approach</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> okay so you're storing</font>

259
00:11:00,910 --> 00:11:04,180
<font color="#E5E5E5">passwords and you're securing this your</font>

260
00:11:02,650 --> 00:11:07,120
<font color="#E5E5E5">passion' them properly you're using</font>

261
00:11:04,180 --> 00:11:08,260
bcrypt if you're on<font color="#CCCCCC"> PHP using</font><font color="#E5E5E5"> argon</font><font color="#CCCCCC"> too</font>

262
00:11:07,120 --> 00:11:11,260
if you're using<font color="#E5E5E5"> lip sodium's</font>

263
00:11:08,260 --> 00:11:12,520
on any lip platform if you're not<font color="#E5E5E5"> using</font>

264
00:11:11,260 --> 00:11:15,370
<font color="#E5E5E5">either of those I hope you're using a</font>

265
00:11:12,520 --> 00:11:19,300
<font color="#E5E5E5">script or pbkdf2 if not then you</font>

266
00:11:15,370 --> 00:11:22,060
<font color="#CCCCCC">definitely need to upgrade</font><font color="#E5E5E5"> and somebody</font>

267
00:11:19,300 --> 00:11:23,859
says<font color="#E5E5E5"> well you know we know fraudsters</font>

268
00:11:22,060 --> 00:11:27,219
are using duplicate passwords<font color="#E5E5E5"> we need a</font>

269
00:11:23,860 --> 00:11:30,820
way<font color="#CCCCCC"> to detect them or identify them for</font>

270
00:11:27,220 --> 00:11:32,980
whatever reason you<font color="#E5E5E5"> know they might have</font>

271
00:11:30,820 --> 00:11:35,140
local regulations<font color="#E5E5E5"> no two users can have</font>

272
00:11:32,980 --> 00:11:36,790
<font color="#E5E5E5">the same</font><font color="#CCCCCC"> password because whatever</font>

273
00:11:35,140 --> 00:11:41,260
business argument comes down from<font color="#E5E5E5"> that</font>

274
00:11:36,790 --> 00:11:42,730
you can't argue with so there's some bad

275
00:11:41,260 --> 00:11:44,800
solutions<font color="#E5E5E5"> I would like to present bad</font>

276
00:11:42,730 --> 00:11:46,120
solutions before<font color="#E5E5E5"> a better solution so</font>

277
00:11:44,800 --> 00:11:48,969
<font color="#CCCCCC">you can kind of get an idea</font><font color="#E5E5E5"> on why I</font>

278
00:11:46,120 --> 00:11:50,740
went<font color="#E5E5E5"> with the solution I did encrypt it</font>

279
00:11:48,970 --> 00:11:54,430
<font color="#CCCCCC">with a secret</font><font color="#E5E5E5"> key this is similar the IP</font>

280
00:11:50,740 --> 00:11:56,140
address solution also<font color="#E5E5E5"> you're storing it</font>

281
00:11:54,430 --> 00:12:02,199
in<font color="#E5E5E5"> plaintext if somebody has access</font><font color="#CCCCCC"> to a</font>

282
00:11:56,140 --> 00:12:05,020
key<font color="#CCCCCC"> also if you needed to detect it</font><font color="#E5E5E5"> like</font>

283
00:12:02,200 --> 00:12:06,640
<font color="#E5E5E5">oh is this password already used now you</font>

284
00:12:05,020 --> 00:12:08,560
need to go through if you can<font color="#E5E5E5"> secure</font>

285
00:12:06,640 --> 00:12:09,819
encryption and decrypt every record in

286
00:12:08,560 --> 00:12:11,140
<font color="#E5E5E5">the database if you have a million users</font>

287
00:12:09,820 --> 00:12:13,990
<font color="#CCCCCC">that means you need to</font><font color="#E5E5E5"> do a million</font>

288
00:12:11,140 --> 00:12:15,970
decryptions and verification or you're

289
00:12:13,990 --> 00:12:17,770
<font color="#E5E5E5">forced to using like ECB mode or some</font>

290
00:12:15,970 --> 00:12:21,930
other is semantically insecure crypto

291
00:12:17,770 --> 00:12:25,329
which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> just bad and don't ever do</font><font color="#CCCCCC"> that</font>

292
00:12:21,930 --> 00:12:27,339
you can see the<font color="#E5E5E5"> Penguins is like the way</font>

293
00:12:25,330 --> 00:12:28,749
a lot of<font color="#CCCCCC"> people like to describe</font><font color="#E5E5E5"> it</font>

294
00:12:27,339 --> 00:12:31,720
some people might<font color="#E5E5E5"> try to store an</font>

295
00:12:28,749 --> 00:12:33,160
unsalted cryptographic hash which

296
00:12:31,720 --> 00:12:35,709
totally undermines the security of

297
00:12:33,160 --> 00:12:38,319
bcrypt and pbkdf2 and all the other

298
00:12:35,709 --> 00:12:40,029
proper password hashing functions<font color="#CCCCCC"> which</font>

299
00:12:38,319 --> 00:12:42,579
is what<font color="#E5E5E5"> Yahoo apparently did with the</font>

300
00:12:40,029 --> 00:12:47,350
<font color="#E5E5E5">md5</font><font color="#CCCCCC"> / bcrypt leak it came out earlier</font>

301
00:12:42,579 --> 00:12:49,388
<font color="#E5E5E5">this year so here's how I would approach</font>

302
00:12:47,350 --> 00:12:52,180
the problem<font color="#E5E5E5"> these parameters might not</font>

303
00:12:49,389 --> 00:12:55,120
be optimal<font color="#CCCCCC"> but what we're going to do is</font>

304
00:12:52,180 --> 00:12:57,910
store<font color="#CCCCCC"> a second password</font><font color="#E5E5E5"> hash with a</font>

305
00:12:55,120 --> 00:12:59,949
caveat<font color="#E5E5E5"> instead of a</font><font color="#CCCCCC"> per user salt</font><font color="#E5E5E5"> like</font>

306
00:12:57,910 --> 00:13:02,709
what your<font color="#E5E5E5"> API typically generates for</font>

307
00:12:59,949 --> 00:13:04,949
you we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use a constant it's</font>

308
00:13:02,709 --> 00:13:07,329
just used<font color="#E5E5E5"> for differentiating uniqueness</font>

309
00:13:04,949 --> 00:13:09,819
<font color="#CCCCCC">because it's the same password</font>

310
00:13:07,329 --> 00:13:11,138
it's<font color="#CCCCCC"> already the same salt you're going</font>

311
00:13:09,819 --> 00:13:12,729
<font color="#CCCCCC">to want to increase the cost</font><font color="#E5E5E5"> a little</font>

312
00:13:11,139 --> 00:13:14,589
<font color="#E5E5E5">bit</font><font color="#CCCCCC"> because if somebody gets ahold of</font>

313
00:13:12,730 --> 00:13:16,720
your hash database they might attempt to

314
00:13:14,589 --> 00:13:19,269
use that to<font color="#CCCCCC"> optimize the brute force and</font>

315
00:13:16,720 --> 00:13:21,129
<font color="#E5E5E5">go oh hey 200</font><font color="#CCCCCC"> users have</font><font color="#E5E5E5"> this password</font>

316
00:13:19,269 --> 00:13:23,980
<font color="#E5E5E5">hash if I attack this one I got 200</font>

317
00:13:21,129 --> 00:13:25,449
accounts in<font color="#E5E5E5"> order to make the economics</font>

318
00:13:23,980 --> 00:13:28,089
lesson theater of hackers you're going

319
00:13:25,449 --> 00:13:29,559
to want<font color="#CCCCCC"> to raise the cost factors</font><font color="#E5E5E5"> now</font>

320
00:13:28,089 --> 00:13:31,180
<font color="#E5E5E5">these are example numbers and you might</font>

321
00:13:29,559 --> 00:13:33,250
in practice want to raise them a lot

322
00:13:31,180 --> 00:13:34,540
higher so and be corrupt if you're

323
00:13:33,250 --> 00:13:37,689
starting<font color="#CCCCCC"> with a cost of 10 you're going</font>

324
00:13:34,540 --> 00:13:38,769
<font color="#CCCCCC">to want to go</font><font color="#E5E5E5"> with at least 12 are gone</font>

325
00:13:37,689 --> 00:13:40,569
<font color="#CCCCCC">to you're going to double the memory</font>

326
00:13:38,769 --> 00:13:43,059
cost and increase the number<font color="#CCCCCC"> of rounds</font>

327
00:13:40,569 --> 00:13:44,649
by at least<font color="#E5E5E5"> one these are lower bounds</font>

328
00:13:43,059 --> 00:13:46,360
you should probably try to go higher

329
00:13:44,649 --> 00:13:49,839
<font color="#E5E5E5">depending</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> what your benchmarks a</font>

330
00:13:46,360 --> 00:13:53,589
while for<font color="#E5E5E5"> your hardware and of course</font>

331
00:13:49,839 --> 00:13:56,199
there's a demo<font color="#CCCCCC"> of this</font><font color="#E5E5E5"> too so let's</font>

332
00:13:53,589 --> 00:14:02,379
<font color="#E5E5E5">create a user real quick let's just go</font>

333
00:13:56,199 --> 00:14:04,660
<font color="#CCCCCC">with the b-side the this</font><font color="#E5E5E5"> field the SFM</font>

334
00:14:02,379 --> 00:14:09,509
field is for the<font color="#E5E5E5"> next example</font><font color="#CCCCCC"> I'm just</font>

335
00:14:04,660 --> 00:14:11,170
<font color="#CCCCCC">going to fill on the</font><font color="#E5E5E5"> pre filled one and</font>

336
00:14:09,509 --> 00:14:13,889
what's a weak password

337
00:14:11,170 --> 00:14:13,889
<font color="#CCCCCC">I know password</font>

338
00:14:17,230 --> 00:14:24,009
hey let's add<font color="#CCCCCC"> another user</font><font color="#E5E5E5"> fill all the</font>

339
00:14:21,709 --> 00:14:24,008
examples

340
00:14:37,320 --> 00:14:42,529
this is<font color="#CCCCCC"> going to the wrong piece</font>

341
00:14:39,019 --> 00:14:42,529
<font color="#E5E5E5">publisher protects</font><font color="#CCCCCC"> bath</font>

342
00:14:45,100 --> 00:14:50,830
here we go so as you can<font color="#CCCCCC"> see they have a</font>

343
00:14:47,560 --> 00:14:54,670
different hash it's a little hard<font color="#E5E5E5"> to see</font>

344
00:14:50,830 --> 00:14:57,580
'cimmanon<font color="#E5E5E5"> so this is an argon</font><font color="#CCCCCC"> two hash</font>

345
00:14:54,670 --> 00:14:59,920
generated by low sodium<font color="#CCCCCC"> seed</font><font color="#E5E5E5"> memory cost</font>

346
00:14:57,580 --> 00:15:03,130
<font color="#E5E5E5">time cost and the number or the parallel</font>

347
00:14:59,920 --> 00:15:06,219
parallelism degree<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> actually the</font>

348
00:15:03,130 --> 00:15:08,680
same hash with a different salt<font color="#E5E5E5"> if you</font>

349
00:15:06,220 --> 00:15:12,490
look<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> left you can</font><font color="#E5E5E5"> see that they</font>

350
00:15:08,680 --> 00:15:14,579
<font color="#CCCCCC">are both the same password</font><font color="#E5E5E5"> but knowing</font>

351
00:15:12,490 --> 00:15:17,500
this doesn't give you the<font color="#CCCCCC"> password self</font>

352
00:15:14,580 --> 00:15:19,690
there are<font color="#CCCCCC"> rents where this does not fit</font>

353
00:15:17,500 --> 00:15:20,920
with<font color="#CCCCCC"> a threat model like you know what</font>

354
00:15:19,690 --> 00:15:22,450
if somebody<font color="#E5E5E5"> obtains your password hash</font>

355
00:15:20,920 --> 00:15:24,459
database a year ago then they look at it

356
00:15:22,450 --> 00:15:27,100
now or every<font color="#E5E5E5"> month</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> that you have a</font>

357
00:15:24,460 --> 00:15:29,320
password<font color="#E5E5E5"> change</font><font color="#CCCCCC"> history over time</font><font color="#E5E5E5"> and if</font>

358
00:15:27,100 --> 00:15:31,120
you can actually crack some of those

359
00:15:29,320 --> 00:15:32,320
passwords<font color="#E5E5E5"> you can study the</font><font color="#CCCCCC"> user's</font>

360
00:15:31,120 --> 00:15:36,700
behavior<font color="#E5E5E5"> and probably</font><font color="#CCCCCC"> get to other other</font>

361
00:15:32,320 --> 00:15:39,910
accounts<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> why they when I first</font>

362
00:15:36,700 --> 00:15:42,700
presented<font color="#E5E5E5"> this</font><font color="#CCCCCC"> idea on Twitter to my</font>

363
00:15:39,910 --> 00:15:44,290
followers<font color="#CCCCCC"> well-known cryptographer said</font>

364
00:15:42,700 --> 00:15:46,530
yeah you should<font color="#CCCCCC"> really</font><font color="#E5E5E5"> emphasize don't</font>

365
00:15:44,290 --> 00:15:46,530
do that

366
00:15:51,690 --> 00:15:56,940
so kind of spoiled a little bit

367
00:15:54,690 --> 00:16:00,270
the<font color="#E5E5E5"> third weird problem this comes up a</font>

368
00:15:56,940 --> 00:16:03,030
lot<font color="#E5E5E5"> especially in medical startups they</font>

369
00:16:00,270 --> 00:16:04,500
want to encrypt<font color="#E5E5E5"> data in a database</font><font color="#CCCCCC"> but</font>

370
00:16:03,030 --> 00:16:06,959
<font color="#CCCCCC">still be able to</font><font color="#E5E5E5"> use it for like search</font>

371
00:16:04,500 --> 00:16:10,290
operations<font color="#E5E5E5"> aggregation or some kind of</font>

372
00:16:06,960 --> 00:16:14,640
reporting<font color="#CCCCCC"> and</font><font color="#E5E5E5"> usually this is from some</font>

373
00:16:10,290 --> 00:16:15,870
<font color="#E5E5E5">ill-founded</font><font color="#CCCCCC"> fear of sequel injection let</font>

374
00:16:14,640 --> 00:16:19,800
me just say<font color="#CCCCCC"> now encryption is not a</font>

375
00:16:15,870 --> 00:16:21,150
<font color="#CCCCCC">solution for bad security so if you</font>

376
00:16:19,800 --> 00:16:23,819
haven't encountered this<font color="#CCCCCC"> before</font><font color="#E5E5E5"> you</font>

377
00:16:21,150 --> 00:16:25,470
probably<font color="#E5E5E5"> will eventually there's three</font>

378
00:16:23,820 --> 00:16:28,020
parts<font color="#E5E5E5"> to this you have the business goal</font>

379
00:16:25,470 --> 00:16:29,430
or the government requirement we need to

380
00:16:28,020 --> 00:16:30,350
store this information<font color="#E5E5E5"> in order</font><font color="#CCCCCC"> to do</font>

381
00:16:29,430 --> 00:16:32,699
our job

382
00:16:30,350 --> 00:16:35,280
common<font color="#E5E5E5"> sense in the industry is going to</font>

383
00:16:32,700 --> 00:16:36,540
<font color="#E5E5E5">say you should encrypt it obviously you</font>

384
00:16:35,280 --> 00:16:38,370
don't want social<font color="#E5E5E5"> security number seeing</font>

385
00:16:36,540 --> 00:16:40,050
<font color="#CCCCCC">around your database</font><font color="#E5E5E5"> it's plain text</font>

386
00:16:38,370 --> 00:16:41,490
especially<font color="#CCCCCC"> if you're like a lot of</font>

387
00:16:40,050 --> 00:16:46,520
<font color="#E5E5E5">medical startups and you have an open</font>

388
00:16:41,490 --> 00:16:49,410
<font color="#E5E5E5">PHP myadmin from like five years ago and</font>

389
00:16:46,520 --> 00:16:52,680
you'll need<font color="#CCCCCC"> to be able</font><font color="#E5E5E5"> to search on them</font>

390
00:16:49,410 --> 00:16:54,780
<font color="#CCCCCC">quickly use them in select queries</font><font color="#E5E5E5"> now</font>

391
00:16:52,680 --> 00:16:56,099
this last requirement<font color="#E5E5E5"> being able to use</font>

392
00:16:54,780 --> 00:16:57,600
them in<font color="#CCCCCC"> the Select query</font><font color="#E5E5E5"> I like to find</font>

393
00:16:56,100 --> 00:16:59,520
a user by their social security<font color="#E5E5E5"> number</font>

394
00:16:57,600 --> 00:17:01,950
is similar to the<font color="#E5E5E5"> password uniqueness</font>

395
00:16:59,520 --> 00:17:03,480
issue<font color="#E5E5E5"> where it becomes a quickly you</font>

396
00:17:01,950 --> 00:17:06,330
know of an operation which should be o

397
00:17:03,480 --> 00:17:07,620
of<font color="#CCCCCC"> one so first can the database decrypt</font>

398
00:17:06,329 --> 00:17:09,599
the values is the<font color="#E5E5E5"> first question you can</font>

399
00:17:07,619 --> 00:17:11,449
ask yourself<font color="#CCCCCC"> if yes</font>

400
00:17:09,599 --> 00:17:13,589
can somebody<font color="#CCCCCC"> aren't a sequel injection</font>

401
00:17:11,450 --> 00:17:14,790
<font color="#E5E5E5">chances are if you said yes the</font><font color="#CCCCCC"> answer</font>

402
00:17:13,589 --> 00:17:18,240
to the second question is<font color="#E5E5E5"> also going to</font>

403
00:17:14,790 --> 00:17:19,770
<font color="#E5E5E5">be a are we using secure encryption</font>

404
00:17:18,240 --> 00:17:23,430
that's indistinguishable<font color="#E5E5E5"> from random</font>

405
00:17:19,770 --> 00:17:25,560
noise has<font color="#E5E5E5"> integrity protection</font><font color="#CCCCCC"> and you</font>

406
00:17:23,430 --> 00:17:27,870
know it's<font color="#E5E5E5"> like one</font><font color="#CCCCCC"> of these modes AES</font>

407
00:17:25,560 --> 00:17:29,810
GCM is<font color="#E5E5E5"> what you probably use to connect</font>

408
00:17:27,869 --> 00:17:33,870
to Google unless you have you know a

409
00:17:29,810 --> 00:17:36,780
<font color="#CCCCCC">smartphone</font><font color="#E5E5E5"> X also</font><font color="#CCCCCC"> xx poly 1305 is what</font>

410
00:17:33,870 --> 00:17:38,729
web so DM uses for its<font color="#CCCCCC"> encryption and</font>

411
00:17:36,780 --> 00:17:40,860
can we avoid reading<font color="#E5E5E5"> and decrypting</font>

412
00:17:38,730 --> 00:17:43,880
every record we<font color="#E5E5E5"> don't want to do a toe</font>

413
00:17:40,860 --> 00:17:46,740
of<font color="#E5E5E5"> n problem we want o of</font><font color="#CCCCCC"> one for that</font>

414
00:17:43,880 --> 00:17:48,890
so there have<font color="#CCCCCC"> been a lot of research</font>

415
00:17:46,740 --> 00:17:51,420
projects trying<font color="#E5E5E5"> to solve this</font><font color="#CCCCCC"> problem</font>

416
00:17:48,890 --> 00:17:53,760
<font color="#CCCCCC">one</font><font color="#E5E5E5"> of them is called</font><font color="#CCCCCC"> Mohammed morphic</font>

417
00:17:51,420 --> 00:17:55,410
encryption this is to where you<font color="#CCCCCC"> encrypt</font>

418
00:17:53,760 --> 00:17:56,970
data you store in your<font color="#E5E5E5"> database and the</font>

419
00:17:55,410 --> 00:17:58,980
server<font color="#E5E5E5"> can do a calculation like</font>

420
00:17:56,970 --> 00:18:00,900
<font color="#E5E5E5">multiply it times</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> and give you back</font>

421
00:17:58,980 --> 00:18:03,929
<font color="#E5E5E5">the</font><font color="#CCCCCC"> result</font><font color="#E5E5E5"> and when you decrypt it it</font>

422
00:18:00,900 --> 00:18:05,670
<font color="#E5E5E5">comes with a load</font><font color="#CCCCCC"> plaintext</font>

423
00:18:03,929 --> 00:18:10,980
they<font color="#E5E5E5"> typically use lattice paste systems</font>

424
00:18:05,670 --> 00:18:13,800
or unpadded<font color="#CCCCCC"> RSAF to achieve this</font><font color="#E5E5E5"> it</font>

425
00:18:10,980 --> 00:18:15,120
<font color="#E5E5E5">doesn't provide integrity</font><font color="#CCCCCC"> protection it</font>

426
00:18:13,800 --> 00:18:17,909
doesn't<font color="#CCCCCC"> ain't distinguishable for mind</font>

427
00:18:15,120 --> 00:18:21,840
knows the<font color="#E5E5E5"> cipher text has structure and</font>

428
00:18:17,910 --> 00:18:24,540
a structure can be<font color="#E5E5E5"> exploited another one</font>

429
00:18:21,840 --> 00:18:26,550
that's<font color="#E5E5E5"> been that pops up late last year</font>

430
00:18:24,540 --> 00:18:29,610
was order<font color="#CCCCCC"> of ilium so we you know order</font>

431
00:18:26,550 --> 00:18:31,190
revealing encryption<font color="#CCCCCC"> but like ECB mode</font>

432
00:18:29,610 --> 00:18:36,030
the symmetric you can see the Penguins

433
00:18:31,190 --> 00:18:38,370
it's not semantically secure and yeah<font color="#E5E5E5"> so</font>

434
00:18:36,030 --> 00:18:39,570
these<font color="#E5E5E5"> solutions can basically be summed</font>

435
00:18:38,370 --> 00:18:41,370
up as if you<font color="#E5E5E5"> want side channels</font>

436
00:18:39,570 --> 00:18:43,470
implement them<font color="#CCCCCC"> there they're</font>

437
00:18:41,370 --> 00:18:45,510
<font color="#E5E5E5">experimental work there's a lot of great</font>

438
00:18:43,470 --> 00:18:46,890
minds working<font color="#E5E5E5"> on this but they're too</font>

439
00:18:45,510 --> 00:18:49,170
interesting<font color="#CCCCCC"> to be used in the old world</font>

440
00:18:46,890 --> 00:18:52,470
<font color="#CCCCCC">software we want our crypto to be nice</font>

441
00:18:49,170 --> 00:18:52,770
and boring<font color="#E5E5E5"> so let's revisit our</font><font color="#CCCCCC"> ground</font>

442
00:18:52,470 --> 00:18:54,570
<font color="#E5E5E5">rules</font>

443
00:18:52,770 --> 00:18:56,460
<font color="#CCCCCC">oh the first</font><font color="#E5E5E5"> one would always be</font>

444
00:18:54,570 --> 00:19:00,240
authenticated<font color="#CCCCCC"> encryption</font><font color="#E5E5E5"> let's start</font>

445
00:18:56,460 --> 00:19:01,830
with that so my solution I'm<font color="#E5E5E5"> gonna</font>

446
00:19:00,240 --> 00:19:04,380
propose uses two columns and two keys

447
00:19:01,830 --> 00:19:06,389
<font color="#CCCCCC">one of them is just</font><font color="#E5E5E5"> your cipher text as</font>

448
00:19:04,380 --> 00:19:09,780
normal using<font color="#E5E5E5"> an authenticated encryption</font>

449
00:19:06,390 --> 00:19:11,760
cipher and<font color="#CCCCCC"> the other</font><font color="#E5E5E5"> ones you know these</font>

450
00:19:09,780 --> 00:19:14,850
are your<font color="#E5E5E5"> modes you can choose</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> is</font>

451
00:19:11,760 --> 00:19:17,059
what I call a blind index<font color="#E5E5E5"> a little bit</font>

452
00:19:14,850 --> 00:19:19,139
more detail on how<font color="#CCCCCC"> they're implemented</font>

453
00:19:17,059 --> 00:19:22,770
typically you would just<font color="#E5E5E5"> take a second</font>

454
00:19:19,140 --> 00:19:25,920
key<font color="#CCCCCC"> and do</font><font color="#E5E5E5"> like a H Mac of your input</font>

455
00:19:22,770 --> 00:19:27,840
with that static key and<font color="#CCCCCC"> that would be</font>

456
00:19:25,920 --> 00:19:29,309
<font color="#E5E5E5">good but if you're</font><font color="#CCCCCC"> doing a low interview</font>

457
00:19:27,840 --> 00:19:31,409
and put like most of the time you're

458
00:19:29,309 --> 00:19:33,149
going to<font color="#E5E5E5"> be you're going</font><font color="#CCCCCC"> to want to</font><font color="#E5E5E5"> use</font>

459
00:19:31,410 --> 00:19:36,150
something<font color="#E5E5E5"> like argon</font><font color="#CCCCCC"> too because if</font>

460
00:19:33,150 --> 00:19:38,880
somebody manages<font color="#E5E5E5"> to get all the blind</font>

461
00:19:36,150 --> 00:19:41,400
index values if it's a<font color="#E5E5E5"> fast hash like</font>

462
00:19:38,880 --> 00:19:43,590
shock you<font color="#E5E5E5"> or even if it's</font><font color="#CCCCCC"> a Choctaw -</font>

463
00:19:41,400 --> 00:19:48,210
they're going<font color="#E5E5E5"> to just burn through all</font>

464
00:19:43,590 --> 00:19:50,010
the possible values<font color="#E5E5E5"> quickly so if you</font>

465
00:19:48,210 --> 00:19:51,540
take the<font color="#CCCCCC"> input you're trying to search</font>

466
00:19:50,010 --> 00:19:53,250
<font color="#CCCCCC">for like let's say a social</font><font color="#E5E5E5"> security</font>

467
00:19:51,540 --> 00:19:56,129
<font color="#E5E5E5">number</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> like the last</font><font color="#CCCCCC"> floor</font><font color="#E5E5E5"> of a</font>

468
00:19:53,250 --> 00:19:57,510
credit<font color="#E5E5E5"> card number</font><font color="#CCCCCC"> and you run it</font>

469
00:19:56,130 --> 00:19:59,400
through<font color="#E5E5E5"> this operation</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> use in</font>

470
00:19:57,510 --> 00:20:00,960
the Select query<font color="#CCCCCC"> say</font><font color="#E5E5E5"> please without</font>

471
00:19:59,400 --> 00:20:03,510
leaking any such any useful information

472
00:20:00,960 --> 00:20:07,410
<font color="#CCCCCC">about</font><font color="#E5E5E5"> what's encrypted other than does</font>

473
00:20:03,510 --> 00:20:08,490
it matter<font color="#CCCCCC"> no and that's similar</font><font color="#E5E5E5"> to</font>

474
00:20:07,410 --> 00:20:12,410
<font color="#E5E5E5">what's</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> on here</font>

475
00:20:08,490 --> 00:20:12,410
I returned

476
00:20:14,010 --> 00:20:22,510
so let's go<font color="#E5E5E5"> one</font><font color="#CCCCCC"> two three four five and</font>

477
00:20:20,430 --> 00:20:27,880
that was the value<font color="#E5E5E5"> entered for Jane</font>

478
00:20:22,510 --> 00:20:30,250
Smith earlier you can see these are all

479
00:20:27,880 --> 00:20:31,750
<font color="#E5E5E5">different values including somebody else</font>

480
00:20:30,250 --> 00:20:37,330
you created one to test the<font color="#CCCCCC"> code it</font>

481
00:20:31,750 --> 00:20:39,400
actually<font color="#E5E5E5"> works</font><font color="#CCCCCC"> so we're using crypto</font>

482
00:20:37,330 --> 00:20:42,429
secret box from<font color="#CCCCCC"> lips sodium to encrypt</font>

483
00:20:39,400 --> 00:20:45,190
the data the demo code uses actually

484
00:20:42,430 --> 00:20:47,920
<font color="#E5E5E5">crypto</font><font color="#CCCCCC"> PW hash for password hashing</font>

485
00:20:45,190 --> 00:20:49,450
which is argon<font color="#CCCCCC"> to just</font><font color="#E5E5E5"> because the demo</font>

486
00:20:47,920 --> 00:20:50,710
<font color="#E5E5E5">code the demo itself uses</font><font color="#CCCCCC"> Social</font>

487
00:20:49,450 --> 00:20:53,230
<font color="#CCCCCC">Security numbers I thought that would</font>

488
00:20:50,710 --> 00:20:55,210
<font color="#CCCCCC">make more sense</font><font color="#E5E5E5"> but your general</font>

489
00:20:53,230 --> 00:20:56,940
construction<font color="#E5E5E5"> looks like that you pull it</font>

490
00:20:55,210 --> 00:20:59,080
<font color="#CCCCCC">from</font><font color="#E5E5E5"> the database</font><font color="#CCCCCC"> and you decrypt it I</font>

491
00:20:56,940 --> 00:21:03,370
didn't<font color="#E5E5E5"> something actually</font><font color="#CCCCCC"> don't love the</font>

492
00:20:59,080 --> 00:21:04,870
decryption<font color="#E5E5E5"> but I unit tested that</font><font color="#CCCCCC"> we</font>

493
00:21:03,370 --> 00:21:08,080
<font color="#E5E5E5">avoid all these hot crazy</font><font color="#CCCCCC"> holomorphic</font>

494
00:21:04,870 --> 00:21:09,639
schemes and you use<font color="#CCCCCC"> non primitive</font><font color="#E5E5E5"> use</font>

495
00:21:08,080 --> 00:21:11,290
the Orthodox solutions that

496
00:21:09,640 --> 00:21:12,700
cryptographers<font color="#E5E5E5"> have been banging on for</font>

497
00:21:11,290 --> 00:21:15,909
years and<font color="#CCCCCC"> not have any weaknesses in</font>

498
00:21:12,700 --> 00:21:17,860
that are practical anyway there<font color="#E5E5E5"> are</font>

499
00:21:15,910 --> 00:21:20,110
limitations here you can only<font color="#E5E5E5"> use it for</font>

500
00:21:17,860 --> 00:21:21,129
<font color="#E5E5E5">an exact lookup if you're looking for</font>

501
00:21:20,110 --> 00:21:23,169
<font color="#E5E5E5">like</font><font color="#CCCCCC"> the first eighth of a social</font>

502
00:21:21,130 --> 00:21:24,030
security<font color="#CCCCCC"> number that's not going to</font><font color="#E5E5E5"> help</font>

503
00:21:23,170 --> 00:21:26,440
you<font color="#CCCCCC"> any</font>

504
00:21:24,030 --> 00:21:28,600
so what if you need two separate

505
00:21:26,440 --> 00:21:30,130
occasions<font color="#E5E5E5"> and case insensitive in case</font>

506
00:21:28,600 --> 00:21:31,330
sensitive searches for example for like

507
00:21:30,130 --> 00:21:34,870
<font color="#CCCCCC">person's name if you're encrypting</font>

508
00:21:31,330 --> 00:21:36,370
everything<font color="#CCCCCC"> what if you need you'll save</font>

509
00:21:34,870 --> 00:21:39,669
<font color="#E5E5E5">time a subset of the data like this the</font>

510
00:21:36,370 --> 00:21:42,100
<font color="#E5E5E5">first</font><font color="#CCCCCC"> few letters of your name match the</font>

511
00:21:39,670 --> 00:21:44,860
general<font color="#E5E5E5"> solution would be</font><font color="#CCCCCC"> to make a</font>

512
00:21:42,100 --> 00:21:46,389
separate<font color="#E5E5E5"> index for each use</font><font color="#CCCCCC"> case which</font>

513
00:21:44,860 --> 00:21:48,729
might<font color="#E5E5E5"> sound</font><font color="#CCCCCC"> very expensive but there's</font>

514
00:21:46,390 --> 00:21:49,900
something<font color="#E5E5E5"> else you can do if you're more</font>

515
00:21:48,730 --> 00:21:52,810
concerned<font color="#E5E5E5"> about storage than you are</font>

516
00:21:49,900 --> 00:21:54,720
<font color="#E5E5E5">about CPU usage you can do truncate the</font>

517
00:21:52,810 --> 00:21:56,860
hashes that<font color="#CCCCCC"> you get from</font><font color="#E5E5E5"> these</font>

518
00:21:54,720 --> 00:21:59,980
<font color="#E5E5E5">operations and use them as a bloom</font>

519
00:21:56,860 --> 00:22:01,540
filter<font color="#E5E5E5"> so you might type in like the</font>

520
00:21:59,980 --> 00:22:02,920
first<font color="#CCCCCC"> two letters</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> John and you</font>

521
00:22:01,540 --> 00:22:04,899
might get five different results with

522
00:22:02,920 --> 00:22:07,420
<font color="#CCCCCC">different</font><font color="#E5E5E5"> ciphertext and</font><font color="#CCCCCC"> then you go</font>

523
00:22:04,900 --> 00:22:09,490
through<font color="#E5E5E5"> a much smaller</font><font color="#CCCCCC"> subset and you</font>

524
00:22:07,420 --> 00:22:13,690
still have an<font color="#E5E5E5"> open solution but you have</font>

525
00:22:09,490 --> 00:22:16,060
less storage so to recap the solutions

526
00:22:13,690 --> 00:22:16,810
<font color="#E5E5E5">if you're logging IP addresses</font>

527
00:22:16,060 --> 00:22:19,320
anonymously

528
00:22:16,810 --> 00:22:21,879
hmm<font color="#CCCCCC"> to daily random off</font><font color="#E5E5E5"> negation key</font>

529
00:22:19,320 --> 00:22:25,629
duplicate password detection are<font color="#E5E5E5"> gone</font>

530
00:22:21,880 --> 00:22:26,790
<font color="#CCCCCC">too or hmm</font><font color="#E5E5E5"> the random salt or static</font>

531
00:22:25,630 --> 00:22:29,530
salt excuse me

532
00:22:26,790 --> 00:22:31,330
encrypted<font color="#E5E5E5"> database search authenticated</font>

533
00:22:29,530 --> 00:22:33,520
encryption with a blind<font color="#E5E5E5"> index no crazy</font>

534
00:22:31,330 --> 00:22:36,129
homebrew primitives<font color="#E5E5E5"> no experimental</font>

535
00:22:33,520 --> 00:22:38,460
academic design<font color="#E5E5E5"> anybody have any</font>

536
00:22:36,130 --> 00:22:38,460
<font color="#CCCCCC">questions</font>

537
00:22:44,860 --> 00:22:48,549
<font color="#E5E5E5">okay well everything is</font><font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> you</font>

538
00:22:47,380 --> 00:22:51,370
can look through<font color="#E5E5E5"> the code you can look</font>

539
00:22:48,549 --> 00:22:54,100
the slides<font color="#CCCCCC"> my contact information</font><font color="#E5E5E5"> is on</font>

540
00:22:51,370 --> 00:22:56,678
the very<font color="#E5E5E5"> first slide so if anybody has</font>

541
00:22:54,100 --> 00:22:58,269
<font color="#E5E5E5">anything you want to ask</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> about I'll</font>

542
00:22:56,679 --> 00:23:02,300
be<font color="#CCCCCC"> around here for most</font><font color="#E5E5E5"> of the day and</font>

543
00:22:58,269 --> 00:23:05,500
you guys<font color="#E5E5E5"> can reach Mount mine thank you</font>

544
00:23:02,300 --> 00:23:05,500
[Applause]

