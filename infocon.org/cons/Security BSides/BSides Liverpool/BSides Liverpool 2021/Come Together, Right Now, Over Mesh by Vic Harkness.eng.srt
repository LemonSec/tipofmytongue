1
00:00:03,280 --> 00:00:05,040
so hello everyone thanks for coming to

2
00:00:05,040 --> 00:00:07,919
my talk um come together right now over

3
00:00:07,919 --> 00:00:10,480
mesh it's my fake attempt at being all

4
00:00:10,480 --> 00:00:13,679
clean with beatles puns

5
00:00:14,920 --> 00:00:16,720
um for what i'm going to be talking

6
00:00:16,720 --> 00:00:18,560
about but you'll probably figure out

7
00:00:18,560 --> 00:00:20,880
what i'm talking about as i go so

8
00:00:20,880 --> 00:00:23,520
skip over that

9
00:00:23,600 --> 00:00:26,800
so who am i i'm vic um list of

10
00:00:26,800 --> 00:00:28,240
credentials there to try and make it

11
00:00:28,240 --> 00:00:31,119
sound like i know what i'm doing uh most

12
00:00:31,119 --> 00:00:32,320
important ones probably being a

13
00:00:32,320 --> 00:00:35,120
qualified falconer

14
00:00:35,120 --> 00:00:36,880
so i'm interested in a bunch of weird

15
00:00:36,880 --> 00:00:38,399
things currently i'm very into weird

16
00:00:38,399 --> 00:00:40,879
protocols come chat to me about stuff

17
00:00:40,879 --> 00:00:42,960
i'm so lonely with the pandemic please

18
00:00:42,960 --> 00:00:45,840
talk to me

19
00:00:45,840 --> 00:00:47,600
so overview of the project and what i'm

20
00:00:47,600 --> 00:00:49,360
going to be talking about today

21
00:00:49,360 --> 00:00:51,199
um i've got going on this project

22
00:00:51,199 --> 00:00:52,399
looking at mesh networking with

23
00:00:52,399 --> 00:00:55,199
raspberry pi's and i've gone down

24
00:00:55,199 --> 00:00:56,879
several weird rabbit holes i keep

25
00:00:56,879 --> 00:00:59,039
getting distracted i keep finding holes

26
00:00:59,039 --> 00:01:00,960
in my knowledge so this talk is going to

27
00:01:00,960 --> 00:01:02,719
be a bit of a breakdown for i guess my

28
00:01:02,719 --> 00:01:04,239
stream of consciousness of what i've

29
00:01:04,239 --> 00:01:07,040
looked at what it's led me to where i'm

30
00:01:07,040 --> 00:01:08,880
going to be going in the future with my

31
00:01:08,880 --> 00:01:10,960
little research project

32
00:01:10,960 --> 00:01:13,360
i apologize it does go into the osi

33
00:01:13,360 --> 00:01:14,880
model at some points which i know some

34
00:01:14,880 --> 00:01:17,840
people have trauma around so

35
00:01:17,840 --> 00:01:20,320
there's a warning

36
00:01:20,320 --> 00:01:22,880
so first up what's a mesh network

37
00:01:22,880 --> 00:01:25,520
it's uh well with your home wi-fi you

38
00:01:25,520 --> 00:01:27,680
normally connect your phones laptops etc

39
00:01:27,680 --> 00:01:29,840
to a router there's one central device

40
00:01:29,840 --> 00:01:31,759
that all of your traffic will go through

41
00:01:31,759 --> 00:01:33,360
in a mesh network you've got none of

42
00:01:33,360 --> 00:01:36,079
that any device can talk to any device

43
00:01:36,079 --> 00:01:37,439
they can be configured in lots of

44
00:01:37,439 --> 00:01:38,799
different ways like we've got this

45
00:01:38,799 --> 00:01:40,320
diagram here where they're kind of

46
00:01:40,320 --> 00:01:42,159
chained together so if you want to get

47
00:01:42,159 --> 00:01:43,439
to this node in the bottom right you've

48
00:01:43,439 --> 00:01:45,119
got to go through the one next to it

49
00:01:45,119 --> 00:01:47,600
which connects to the other ones

50
00:01:47,600 --> 00:01:49,439
the exact configuration depends on what

51
00:01:49,439 --> 00:01:51,200
you're going to be using it for you can

52
00:01:51,200 --> 00:01:52,799
get ones which are just for you know

53
00:01:52,799 --> 00:01:55,680
your home network you've got various um

54
00:01:55,680 --> 00:01:57,439
like something that controls your light

55
00:01:57,439 --> 00:01:59,200
temperature that sort of thing or you

56
00:01:59,200 --> 00:02:01,040
can get ones that are distributed over

57
00:02:01,040 --> 00:02:03,680
large geographic areas it it depends on

58
00:02:03,680 --> 00:02:05,280
what you're doing with it really

59
00:02:05,280 --> 00:02:07,200
ad hoc mesh networks are the type i've

60
00:02:07,200 --> 00:02:09,199
been quite interested in which are mesh

61
00:02:09,199 --> 00:02:11,038
networks which automatically reconfigure

62
00:02:11,038 --> 00:02:13,840
themselves so if a node drops out of the

63
00:02:13,840 --> 00:02:16,239
mesh network it will automatically just

64
00:02:16,239 --> 00:02:18,000
reconfigure itself traffic can be routed

65
00:02:18,000 --> 00:02:19,360
around it you don't have to worry if

66
00:02:19,360 --> 00:02:22,800
your node drops out

67
00:02:22,800 --> 00:02:24,480
so what are they used for

68
00:02:24,480 --> 00:02:26,800
um there's pretty much any time you want

69
00:02:26,800 --> 00:02:28,319
data to be able to be transferred

70
00:02:28,319 --> 00:02:29,920
between nodes without having it having

71
00:02:29,920 --> 00:02:31,920
to go through some central point

72
00:02:31,920 --> 00:02:33,840
so something i've seen them used for is

73
00:02:33,840 --> 00:02:35,360
these explosive ordnance disposal

74
00:02:35,360 --> 00:02:37,920
robotics um that is me i promise in the

75
00:02:37,920 --> 00:02:40,560
picture it's a bit low resolution button

76
00:02:40,560 --> 00:02:42,319
um so you've got the big robots which

77
00:02:42,319 --> 00:02:43,519
are the ones that are actually doing the

78
00:02:43,519 --> 00:02:45,280
bomb disposal and then you'll have

79
00:02:45,280 --> 00:02:47,360
smaller ones which are just basically

80
00:02:47,360 --> 00:02:49,440
you know a camera with wheels and they

81
00:02:49,440 --> 00:02:50,959
use mesh networking here where the

82
00:02:50,959 --> 00:02:52,800
smaller ones can pass the messages along

83
00:02:52,800 --> 00:02:55,519
to reach the actual eod robot at the end

84
00:02:55,519 --> 00:02:56,879
because you don't really want to worry

85
00:02:56,879 --> 00:02:59,120
about losing signal to your eod robot at

86
00:02:59,120 --> 00:03:01,280
the crucial times

87
00:03:01,280 --> 00:03:02,959
i've also seen them proposed for use in

88
00:03:02,959 --> 00:03:05,440
future connected autonomous vehicles

89
00:03:05,440 --> 00:03:08,159
so in the future all of the you know

90
00:03:08,159 --> 00:03:09,680
cars on the roads they're going to be

91
00:03:09,680 --> 00:03:11,200
very connected with each other they're

92
00:03:11,200 --> 00:03:12,720
going to be sharing data with each other

93
00:03:12,720 --> 00:03:14,800
about their position the direction

94
00:03:14,800 --> 00:03:16,319
they're heading

95
00:03:16,319 --> 00:03:18,720
just various things really

96
00:03:18,720 --> 00:03:19,599
but

97
00:03:19,599 --> 00:03:21,360
you can't really connect cars to routers

98
00:03:21,360 --> 00:03:22,879
by the side of the road because cars go

99
00:03:22,879 --> 00:03:25,440
quite fast so you'd have to be keeping

100
00:03:25,440 --> 00:03:27,760
connecting to a router every you know 30

101
00:03:27,760 --> 00:03:30,080
seconds or whatever it's much simpler if

102
00:03:30,080 --> 00:03:31,519
the cars can all just communicate with

103
00:03:31,519 --> 00:03:32,400
each other

104
00:03:32,400 --> 00:03:34,319
and you know essentially transfer the

105
00:03:34,319 --> 00:03:36,319
messages by propagating them along roads

106
00:03:36,319 --> 00:03:37,680
through the mesh network of all the

107
00:03:37,680 --> 00:03:40,159
vehicles

108
00:03:40,720 --> 00:03:42,879
so attacks on mesh networks this is a

109
00:03:42,879 --> 00:03:44,239
bit of a cop-out slide because there's

110
00:03:44,239 --> 00:03:46,000
just so many there's just so many

111
00:03:46,000 --> 00:03:47,920
different things you can do it depends

112
00:03:47,920 --> 00:03:49,840
on what type of mesh network you've got

113
00:03:49,840 --> 00:03:52,080
how it's configured what protocol you're

114
00:03:52,080 --> 00:03:54,720
using to actually handle the routing um

115
00:03:54,720 --> 00:03:56,159
the vehicle mesh networks that i

116
00:03:56,159 --> 00:03:57,200
mentioned

117
00:03:57,200 --> 00:03:58,720
they're likely to be susceptible to

118
00:03:58,720 --> 00:04:00,959
replay attacks um

119
00:04:00,959 --> 00:04:03,519
so in these proposed um mesh networks

120
00:04:03,519 --> 00:04:05,599
were connected in autonomous vehicles

121
00:04:05,599 --> 00:04:06,959
they proposed that the vehicles will

122
00:04:06,959 --> 00:04:08,480
send out these heartbeat messages that

123
00:04:08,480 --> 00:04:11,200
are hey i'm an ambulance i'm this big

124
00:04:11,200 --> 00:04:13,519
i'm going here i'm a car i'm this big

125
00:04:13,519 --> 00:04:14,959
i'm going here

126
00:04:14,959 --> 00:04:15,840
so

127
00:04:15,840 --> 00:04:17,600
the road conditions will be changed

128
00:04:17,600 --> 00:04:19,279
depending upon what types of vehicles

129
00:04:19,279 --> 00:04:21,120
are on it if you've got an ambulance

130
00:04:21,120 --> 00:04:23,040
approaching from one direction traffic

131
00:04:23,040 --> 00:04:24,960
lights up ahead might be more likely to

132
00:04:24,960 --> 00:04:26,639
make that route green so the ambulance

133
00:04:26,639 --> 00:04:28,960
can get through quicker and the proposed

134
00:04:28,960 --> 00:04:30,880
protocols that they've been using for um

135
00:04:30,880 --> 00:04:32,320
or they want to use for these giant

136
00:04:32,320 --> 00:04:34,960
vehicle mesh networks there's no actual

137
00:04:34,960 --> 00:04:36,639
unique value in them there's no nonce

138
00:04:36,639 --> 00:04:38,320
value so they're likely to be

139
00:04:38,320 --> 00:04:40,400
susceptible to replay attacks so you

140
00:04:40,400 --> 00:04:41,919
could just you know record an i'm an

141
00:04:41,919 --> 00:04:43,680
ambulance message and play it as you're

142
00:04:43,680 --> 00:04:44,960
driving along and then the traffic

143
00:04:44,960 --> 00:04:47,199
lights will change and be green for you

144
00:04:47,199 --> 00:04:47,919
so

145
00:04:47,919 --> 00:04:49,680
it really depends on what exactly you're

146
00:04:49,680 --> 00:04:51,280
trying to do with the mesh network what

147
00:04:51,280 --> 00:04:52,560
types of attacks it's likely to be

148
00:04:52,560 --> 00:04:54,400
susceptible to

149
00:04:54,400 --> 00:04:56,240
packet flooding attacks those can be

150
00:04:56,240 --> 00:04:58,160
quite useful interesting when you've got

151
00:04:58,160 --> 00:05:00,080
low-powered devices which are only

152
00:05:00,080 --> 00:05:01,759
expecting to get a message every you

153
00:05:01,759 --> 00:05:03,919
know couple of hours or so if you're

154
00:05:03,919 --> 00:05:05,360
sending them constant messages it might

155
00:05:05,360 --> 00:05:06,960
keep them in a state of wakefulness so

156
00:05:06,960 --> 00:05:08,240
they'll burn through their battery much

157
00:05:08,240 --> 00:05:11,440
faster than they should do um

158
00:05:11,440 --> 00:05:13,039
yeah you can also just mess with the

159
00:05:13,039 --> 00:05:15,280
contents of packets to cause weird

160
00:05:15,280 --> 00:05:17,520
routing issues between the nodes you

161
00:05:17,520 --> 00:05:18,880
know you can force them to root through

162
00:05:18,880 --> 00:05:20,320
nodes which have actually got very poor

163
00:05:20,320 --> 00:05:22,479
connection strength or a high rate of

164
00:05:22,479 --> 00:05:25,280
data loss you also get attacks for fancy

165
00:05:25,280 --> 00:05:27,759
names like byzantine faults which is

166
00:05:27,759 --> 00:05:29,600
where no node in the mesh network can

167
00:05:29,600 --> 00:05:31,360
actually tell where the issue is it just

168
00:05:31,360 --> 00:05:33,600
knows there's an issue so no day might

169
00:05:33,600 --> 00:05:35,680
think that node b is having connection

170
00:05:35,680 --> 00:05:37,840
issues and route around it but node b

171
00:05:37,840 --> 00:05:39,840
thinks that node c is the issue node c

172
00:05:39,840 --> 00:05:42,479
thinks that node d is the issue etc it's

173
00:05:42,479 --> 00:05:44,400
just because no node is actually

174
00:05:44,400 --> 00:05:45,759
obviously the one that's causing the

175
00:05:45,759 --> 00:05:47,520
issues it's really hard to route around

176
00:05:47,520 --> 00:05:49,680
them

177
00:05:50,320 --> 00:05:52,560
so building a simple mesh network i've

178
00:05:52,560 --> 00:05:53,919
been playing around with raspberry pi's

179
00:05:53,919 --> 00:05:55,600
at home because they're cheap and easy

180
00:05:55,600 --> 00:05:58,080
to work with i've been using the batland

181
00:05:58,080 --> 00:06:00,800
routing protocol um it was a fun name

182
00:06:00,800 --> 00:06:02,720
and turns out it's actually a really

183
00:06:02,720 --> 00:06:04,560
interesting protocol i've been loosely

184
00:06:04,560 --> 00:06:06,880
following the guy there um

185
00:06:06,880 --> 00:06:08,319
people take photos of it if they want

186
00:06:08,319 --> 00:06:09,120
but

187
00:06:09,120 --> 00:06:11,199
yeah if you google just wi-fi mesh

188
00:06:11,199 --> 00:06:14,720
raspberry pi you'll find it

189
00:06:14,720 --> 00:06:16,400
first up we're going to talk about what

190
00:06:16,400 --> 00:06:18,080
is batman

191
00:06:18,080 --> 00:06:21,360
um yep batman so batman stands for

192
00:06:21,360 --> 00:06:23,199
better approach to mobile ad hoc

193
00:06:23,199 --> 00:06:25,120
networking i'm never going to remember

194
00:06:25,120 --> 00:06:28,000
that but it's for creating multi-hop ad

195
00:06:28,000 --> 00:06:29,840
hoc mesh networks

196
00:06:29,840 --> 00:06:31,600
the mesh networks will automatically

197
00:06:31,600 --> 00:06:33,199
reconfigure themselves depending on

198
00:06:33,199 --> 00:06:35,759
what's in the network what's in range so

199
00:06:35,759 --> 00:06:37,600
if something if one of your nodes gets

200
00:06:37,600 --> 00:06:39,039
moved a bit further from the others and

201
00:06:39,039 --> 00:06:40,400
it's now you know

202
00:06:40,400 --> 00:06:42,080
a higher latency connection it will

203
00:06:42,080 --> 00:06:43,600
automatically re-route to avoid that

204
00:06:43,600 --> 00:06:45,520
node that sort of thing

205
00:06:45,520 --> 00:06:47,199
you can also connect your mesh network

206
00:06:47,199 --> 00:06:49,199
up to other things like connect it to

207
00:06:49,199 --> 00:06:50,560
your home wi-fi so you'll have like

208
00:06:50,560 --> 00:06:52,400
these bridge nodes which interact with

209
00:06:52,400 --> 00:06:53,680
the whatever other network you're

210
00:06:53,680 --> 00:06:55,759
connected to you can go to the internet

211
00:06:55,759 --> 00:06:57,599
you know you've got options

212
00:06:57,599 --> 00:06:59,039
um so a lot of

213
00:06:59,039 --> 00:07:00,960
network routing protocols sit layer free

214
00:07:00,960 --> 00:07:02,960
in the osi model for as batman sits at

215
00:07:02,960 --> 00:07:05,680
layer two so lower um

216
00:07:05,680 --> 00:07:07,280
and that's why we're gonna have to look

217
00:07:07,280 --> 00:07:09,599
at the osi model just to give you a bit

218
00:07:09,599 --> 00:07:11,520
more of an understanding of what that

219
00:07:11,520 --> 00:07:12,800
actually means

220
00:07:12,800 --> 00:07:15,120
so in the osi model i don't really care

221
00:07:15,120 --> 00:07:17,520
about five six and seven they're too

222
00:07:17,520 --> 00:07:19,599
high up to really bother with um i'm

223
00:07:19,599 --> 00:07:22,000
more interested in four and below

224
00:07:22,000 --> 00:07:22,960
so

225
00:07:22,960 --> 00:07:24,880
at level four you've got things like tcp

226
00:07:24,880 --> 00:07:28,319
and udp at three you've got ip and two

227
00:07:28,319 --> 00:07:30,800
you've got things like ethernet so

228
00:07:30,800 --> 00:07:33,440
because batman sits at layer two it

229
00:07:33,440 --> 00:07:35,440
basically simulates the nodes actually

230
00:07:35,440 --> 00:07:37,199
being directly connected to each other

231
00:07:37,199 --> 00:07:38,639
so the nodes see each other as linked

232
00:07:38,639 --> 00:07:40,080
local to each other

233
00:07:40,080 --> 00:07:40,880
it

234
00:07:40,880 --> 00:07:42,560
makes the routing a lot easier a lot

235
00:07:42,560 --> 00:07:45,520
more efficient um it does mean that when

236
00:07:45,520 --> 00:07:46,800
you're playing around with them it's a

237
00:07:46,800 --> 00:07:48,800
bit more of a faff because

238
00:07:48,800 --> 00:07:49,919
you know

239
00:07:49,919 --> 00:07:51,360
you're kind of having to recreate what

240
00:07:51,360 --> 00:07:53,199
ethernet would normally do

241
00:07:53,199 --> 00:07:55,120
um to give a better bit of a better

242
00:07:55,120 --> 00:07:56,720
opportunity for explanation i've stolen

243
00:07:56,720 --> 00:07:58,879
a graph off of someone which shows how

244
00:07:58,879 --> 00:08:01,039
data comes from the application gets

245
00:08:01,039 --> 00:08:03,599
passed down and ends up transferring

246
00:08:03,599 --> 00:08:06,400
so you've probably heard of udp and tcp

247
00:08:06,400 --> 00:08:08,319
i don't know if i'm making assumptions

248
00:08:08,319 --> 00:08:09,840
um don't ask me what they stand for i

249
00:08:09,840 --> 00:08:11,520
can't remember

250
00:08:11,520 --> 00:08:14,639
but the key difference really is in udp

251
00:08:14,639 --> 00:08:16,240
it's connectionless you're just sending

252
00:08:16,240 --> 00:08:18,240
the data out you're not getting any

253
00:08:18,240 --> 00:08:19,759
acknowledgement back on if it's been

254
00:08:19,759 --> 00:08:22,080
received or not whereas in tcp it's

255
00:08:22,080 --> 00:08:24,560
connection oriented so you do know if

256
00:08:24,560 --> 00:08:26,560
your data's been received or not so you

257
00:08:26,560 --> 00:08:28,639
get the classic uh joke around this of

258
00:08:28,639 --> 00:08:30,720
um i tell you a udp joke but i don't

259
00:08:30,720 --> 00:08:33,519
know if you'd get it

260
00:08:33,519 --> 00:08:34,799
terrible

261
00:08:34,799 --> 00:08:36,000
um

262
00:08:36,000 --> 00:08:37,279
so with the

263
00:08:37,279 --> 00:08:39,200
data that you normally send it comes

264
00:08:39,200 --> 00:08:40,559
from the application

265
00:08:40,559 --> 00:08:43,599
it goes down to the tcp layer where it's

266
00:08:43,599 --> 00:08:46,160
divided up into little tcp segments it's

267
00:08:46,160 --> 00:08:48,080
then passed down to the ip layer where

268
00:08:48,080 --> 00:08:50,800
it's encapsulated in ip datagrams which

269
00:08:50,800 --> 00:08:52,880
can then be sent on to whatever medium

270
00:08:52,880 --> 00:08:55,279
you're using to transmit your data so

271
00:08:55,279 --> 00:08:57,680
ethernet wi-fi whatever it's going to

272
00:08:57,680 --> 00:08:59,680
get encapsulated there and that's the

273
00:08:59,680 --> 00:09:02,720
layer at which batman operates so it'll

274
00:09:02,720 --> 00:09:04,640
be encapsulated there center cross then

275
00:09:04,640 --> 00:09:06,399
it goes back the other way basically

276
00:09:06,399 --> 00:09:08,399
unpacking it all and then it can pass it

277
00:09:08,399 --> 00:09:11,600
back up to the application

278
00:09:11,600 --> 00:09:14,160
so yeah going back to this you can see

279
00:09:14,160 --> 00:09:17,120
we are dealing with layer 2

280
00:09:17,120 --> 00:09:19,920
or ethernet

281
00:09:20,000 --> 00:09:22,560
it is a bit just my brain process of how

282
00:09:22,560 --> 00:09:23,839
i where i've been going during this

283
00:09:23,839 --> 00:09:25,040
project

284
00:09:25,040 --> 00:09:26,160
and this doesn't look good on the

285
00:09:26,160 --> 00:09:27,920
projector at all but this is just me

286
00:09:27,920 --> 00:09:30,399
running isconfig on one of the nodes in

287
00:09:30,399 --> 00:09:32,240
my mesh network so you've got your

288
00:09:32,240 --> 00:09:33,920
standard interfaces you'd normally see

289
00:09:33,920 --> 00:09:37,200
like if0 your ethernet interface you've

290
00:09:37,200 --> 00:09:39,839
got you know your loopback you've got

291
00:09:39,839 --> 00:09:42,480
wlan 0 which is wireless at the top

292
00:09:42,480 --> 00:09:45,200
you'll see bat 0 which is the virtual

293
00:09:45,200 --> 00:09:47,440
network interface that batman protocol

294
00:09:47,440 --> 00:09:48,480
creates

295
00:09:48,480 --> 00:09:51,519
so other actual legit you know big real

296
00:09:51,519 --> 00:09:54,880
network interfaces like e0 wlan 0 can be

297
00:09:54,880 --> 00:09:56,959
assigned to bat zero

298
00:09:56,959 --> 00:09:58,720
and then any data going through there in

299
00:09:58,720 --> 00:09:59,600
the back

300
00:09:59,600 --> 00:10:02,640
using the back probes batman protocol

301
00:10:02,640 --> 00:10:04,320
will you know it'll go through the bat

302
00:10:04,320 --> 00:10:07,040
zero interface which simulates being

303
00:10:07,040 --> 00:10:09,920
local to each other

304
00:10:10,000 --> 00:10:11,839
um so the implications of doing it in

305
00:10:11,839 --> 00:10:14,160
layer two you can within reason use lots

306
00:10:14,160 --> 00:10:16,240
of other protocols that sit above it you

307
00:10:16,240 --> 00:10:17,600
know you don't really have to worry

308
00:10:17,600 --> 00:10:19,839
about um writing special software to

309
00:10:19,839 --> 00:10:21,839
transfer data in a batman mesh network

310
00:10:21,839 --> 00:10:22,959
you can just

311
00:10:22,959 --> 00:10:24,880
you can just do it it's fine

312
00:10:24,880 --> 00:10:26,880
um it's carried out in minutes by the

313
00:10:26,880 --> 00:10:29,839
batman adv kernel module um

314
00:10:29,839 --> 00:10:31,279
that actually makes it kind of more

315
00:10:31,279 --> 00:10:32,959
efficient because everything's being

316
00:10:32,959 --> 00:10:34,399
handled by the kernel you don't have to

317
00:10:34,399 --> 00:10:36,320
read and write to user land

318
00:10:36,320 --> 00:10:38,880
on linux so it makes it a lot faster

319
00:10:38,880 --> 00:10:40,320
which is quite good if you've got a mesh

320
00:10:40,320 --> 00:10:41,839
network where you actually care about

321
00:10:41,839 --> 00:10:44,720
the speed at which data gets transferred

322
00:10:44,720 --> 00:10:46,560
i mean in like the connected autonomous

323
00:10:46,560 --> 00:10:48,000
vehicles example there's been some

324
00:10:48,000 --> 00:10:50,160
proposals that you could have um remote

325
00:10:50,160 --> 00:10:52,480
control vehicles in the roads and to do

326
00:10:52,480 --> 00:10:53,760
that they've said you'd probably need

327
00:10:53,760 --> 00:10:55,920
under 40 milliseconds latency so

328
00:10:55,920 --> 00:10:57,440
potentially something like batman could

329
00:10:57,440 --> 00:11:00,079
be suitable for getting that latency um

330
00:11:00,079 --> 00:11:01,519
i generally think that it's a bad idea

331
00:11:01,519 --> 00:11:02,880
to have remote control vehicles on the

332
00:11:02,880 --> 00:11:04,399
roads but it's something that people

333
00:11:04,399 --> 00:11:05,920
have proposed

334
00:11:05,920 --> 00:11:08,640
um there are some pains with how batman

335
00:11:08,640 --> 00:11:11,040
works i think normal tools like ping and

336
00:11:11,040 --> 00:11:13,360
tracer just don't work with it they just

337
00:11:13,360 --> 00:11:14,880
it just tells you weird stuff it goes a

338
00:11:14,880 --> 00:11:16,880
bit screwy but they've got equivalence

339
00:11:16,880 --> 00:11:20,399
of them like um bat ctl ping bat ctl

340
00:11:20,399 --> 00:11:22,320
traceroute where it does the same

341
00:11:22,320 --> 00:11:24,640
functionality that you're used to but

342
00:11:24,640 --> 00:11:28,480
works with batman so that's nice

343
00:11:28,480 --> 00:11:31,040
um so about batman routing protocol

344
00:11:31,040 --> 00:11:32,000
features

345
00:11:32,000 --> 00:11:34,720
it started as an improvement to optimize

346
00:11:34,720 --> 00:11:36,480
link state routing protocol which is

347
00:11:36,480 --> 00:11:39,360
another mesh network routing protocol

348
00:11:39,360 --> 00:11:41,279
it aims to decentralize the information

349
00:11:41,279 --> 00:11:43,120
about the nodes so each node only knows

350
00:11:43,120 --> 00:11:45,760
how to reach the next best node and this

351
00:11:45,760 --> 00:11:47,519
is done by each node sends out these

352
00:11:47,519 --> 00:11:49,839
little ogms which are little heartbeat

353
00:11:49,839 --> 00:11:52,079
messages and any node that picks it up

354
00:11:52,079 --> 00:11:54,560
reflects it back to it so you can say

355
00:11:54,560 --> 00:11:56,639
okay i sent this message at this time

356
00:11:56,639 --> 00:11:58,320
i've received the reflection from that

357
00:11:58,320 --> 00:12:00,560
node at this time i've got it back from

358
00:12:00,560 --> 00:12:02,160
that node at that time well that load

359
00:12:02,160 --> 00:12:03,680
was faster so i've probably got a better

360
00:12:03,680 --> 00:12:05,279
connection there

361
00:12:05,279 --> 00:12:07,040
and these will get propagated throughout

362
00:12:07,040 --> 00:12:09,279
the network to a degree

363
00:12:09,279 --> 00:12:10,800
where you know no

364
00:12:10,800 --> 00:12:12,160
no day i'll send it's heartbeat that

365
00:12:12,160 --> 00:12:14,560
gets picked up by node b no b or replay

366
00:12:14,560 --> 00:12:16,560
it will get picked up by node c

367
00:12:16,560 --> 00:12:18,160
and they can kind of

368
00:12:18,160 --> 00:12:20,000
when that gets reflected back to node b

369
00:12:20,000 --> 00:12:22,320
node b will know that it was um the one

370
00:12:22,320 --> 00:12:24,480
that sent that message to c so it won't

371
00:12:24,480 --> 00:12:26,320
start repeating it again

372
00:12:26,320 --> 00:12:28,399
but it'll have that link information

373
00:12:28,399 --> 00:12:30,399
which it'll then embed when it sends a

374
00:12:30,399 --> 00:12:33,519
message out to um like no day

375
00:12:33,519 --> 00:12:36,000
um so that basically each node knows the

376
00:12:36,000 --> 00:12:38,079
best kind of next step next hop within

377
00:12:38,079 --> 00:12:40,639
the mesh network um it can lead to some

378
00:12:40,639 --> 00:12:42,320
weird rooting black holes but there's

379
00:12:42,320 --> 00:12:43,200
some

380
00:12:43,200 --> 00:12:45,040
frankly there's i don't have space to

381
00:12:45,040 --> 00:12:46,320
fit all the features they've put into

382
00:12:46,320 --> 00:12:48,399
batman on here there's so much complex

383
00:12:48,399 --> 00:12:50,800
stuff going on in it to try and create

384
00:12:50,800 --> 00:12:52,399
the best routing

385
00:12:52,399 --> 00:12:54,240
decisions that you can

386
00:12:54,240 --> 00:12:56,079
it's um yeah it does a lot of stuff

387
00:12:56,079 --> 00:12:57,920
where it penalizes multi-hop connections

388
00:12:57,920 --> 00:12:59,519
because it wants them to be shorter just

389
00:12:59,519 --> 00:13:01,440
to increase the efficiency

390
00:13:01,440 --> 00:13:03,600
um it does a lot of fancy things to

391
00:13:03,600 --> 00:13:06,480
reduce the risk of interference

392
00:13:06,480 --> 00:13:08,880
so it's designed to use like you can use

393
00:13:08,880 --> 00:13:11,360
ethernet connections wi-fi whatever

394
00:13:11,360 --> 00:13:13,120
it's been they've tried to make it so

395
00:13:13,120 --> 00:13:14,800
that you can have wi-fi devices or

396
00:13:14,800 --> 00:13:16,480
wireless devices that can use multiple

397
00:13:16,480 --> 00:13:18,639
frequencies so you might have one device

398
00:13:18,639 --> 00:13:20,880
that can communicate on 2.4

399
00:13:20,880 --> 00:13:24,079
megahertz gigahertz 2.4 gigahertz and 5

400
00:13:24,079 --> 00:13:26,000
gigahertz and you don't want to be like

401
00:13:26,000 --> 00:13:27,200
sending and receiving on the same

402
00:13:27,200 --> 00:13:29,200
frequency because you might jam yourself

403
00:13:29,200 --> 00:13:31,360
so batman will automatically if it's

404
00:13:31,360 --> 00:13:34,399
receiving on 2.4 it'll send it on five

405
00:13:34,399 --> 00:13:36,320
and then it'll kind of

406
00:13:36,320 --> 00:13:38,399
do that um propagating forward so if

407
00:13:38,399 --> 00:13:39,760
you've got the next node you can only

408
00:13:39,760 --> 00:13:41,839
transmit on 2.4 or so i can only

409
00:13:41,839 --> 00:13:44,000
transmit and receive on 2.4

410
00:13:44,000 --> 00:13:46,240
the node before will try and receive on

411
00:13:46,240 --> 00:13:48,959
five so that you don't get actual uh

412
00:13:48,959 --> 00:13:50,959
accidental jamming they do some very

413
00:13:50,959 --> 00:13:52,399
fancy stuff with this a lot of effort

414
00:13:52,399 --> 00:13:55,519
has gone into this protocol

415
00:13:55,519 --> 00:13:57,839
um so this is the worst diagram in the

416
00:13:57,839 --> 00:14:00,000
whole slide uh i have a touchscreen

417
00:14:00,000 --> 00:14:01,680
laptop and i like to finger paint with

418
00:14:01,680 --> 00:14:04,800
it um so here's my little mesh network

419
00:14:04,800 --> 00:14:08,480
um i'm using um raspbian buster light i

420
00:14:08,480 --> 00:14:10,800
believe for the raspberry pi's

421
00:14:10,800 --> 00:14:12,320
i've just got them in a little daisy

422
00:14:12,320 --> 00:14:14,079
chain right now i've got two connected

423
00:14:14,079 --> 00:14:16,880
on wireless too connected on ethernet um

424
00:14:16,880 --> 00:14:18,720
the one at the end raspberry pi 3 can't

425
00:14:18,720 --> 00:14:20,959
use wireless right now because that was

426
00:14:20,959 --> 00:14:22,480
kind of my way of guaranteeing that the

427
00:14:22,480 --> 00:14:24,000
traffic will be going through raspberry

428
00:14:24,000 --> 00:14:26,000
pi 2. because if i had all three of them

429
00:14:26,000 --> 00:14:27,839
in just a wireless mesh they'd probably

430
00:14:27,839 --> 00:14:30,720
just go directly to each other so yeah i

431
00:14:30,720 --> 00:14:32,240
actually want them to be going and doing

432
00:14:32,240 --> 00:14:33,920
some routine stuff

433
00:14:33,920 --> 00:14:34,880
um

434
00:14:34,880 --> 00:14:36,320
i've also just got a router that i can

435
00:14:36,320 --> 00:14:38,480
plug directly into them to debug but

436
00:14:38,480 --> 00:14:40,000
once they're all on the mesh network i

437
00:14:40,000 --> 00:14:42,000
can do things like ssh from my laptop

438
00:14:42,000 --> 00:14:43,760
into the bastion node which is raspberry

439
00:14:43,760 --> 00:14:46,079
pi one and then from there i can ssh

440
00:14:46,079 --> 00:14:48,720
into raspberry pi 203 batman

441
00:14:48,720 --> 00:14:50,720
encapsulates and handles all of the ssh

442
00:14:50,720 --> 00:14:52,560
traffic which is quite nice and don't

443
00:14:52,560 --> 00:14:54,160
have to worry about getting into stuff

444
00:14:54,160 --> 00:14:56,480
too much

445
00:14:56,480 --> 00:14:59,440
um top tip that i've got a

446
00:14:59,440 --> 00:15:01,839
thing on linux called terminator which

447
00:15:01,839 --> 00:15:03,279
lets you just break down your terminal

448
00:15:03,279 --> 00:15:04,800
window into lots of smaller ones you can

449
00:15:04,800 --> 00:15:06,320
split it vertically and horizontally and

450
00:15:06,320 --> 00:15:07,760
it's been so nice on this project when

451
00:15:07,760 --> 00:15:09,040
i'm dealing with like four raspberry

452
00:15:09,040 --> 00:15:11,680
pi's at once i do have five in total but

453
00:15:11,680 --> 00:15:13,360
i've only got three of them in the mesh

454
00:15:13,360 --> 00:15:15,120
right now

455
00:15:15,120 --> 00:15:16,880
and so here's some top tips of random

456
00:15:16,880 --> 00:15:18,560
commands that you might want to use when

457
00:15:18,560 --> 00:15:20,560
you're setting up a batman network

458
00:15:20,560 --> 00:15:22,320
uh in the top left this is just some

459
00:15:22,320 --> 00:15:24,079
random networking stuff that i found

460
00:15:24,079 --> 00:15:25,199
useful

461
00:15:25,199 --> 00:15:26,399
um so

462
00:15:26,399 --> 00:15:27,199
if

463
00:15:27,199 --> 00:15:31,040
in my setup i've got the bastion node

464
00:15:31,040 --> 00:15:32,959
which i'm just it's plugged into a

465
00:15:32,959 --> 00:15:34,560
router that my laptop's plugged into so

466
00:15:34,560 --> 00:15:36,639
i can communicate with it directly but

467
00:15:36,639 --> 00:15:38,160
that node can't actually reach the

468
00:15:38,160 --> 00:15:40,399
internet and i'm dumb and i forgot to

469
00:15:40,399 --> 00:15:42,000
patch things before setting everything

470
00:15:42,000 --> 00:15:43,519
up so i'm like oh god i need to get this

471
00:15:43,519 --> 00:15:44,880
on the internet i don't want to pull the

472
00:15:44,880 --> 00:15:46,560
sd card and do stuff

473
00:15:46,560 --> 00:15:47,279
so

474
00:15:47,279 --> 00:15:51,199
if you um run those top two commands on

475
00:15:51,199 --> 00:15:53,279
you know like your vm or whatever you

476
00:15:53,279 --> 00:15:55,519
can use to reach the internet it tells

477
00:15:55,519 --> 00:15:57,600
it to forward any data it's receiving on

478
00:15:57,600 --> 00:15:59,759
the if0 interface

479
00:15:59,759 --> 00:16:01,519
and if you then use the second two

480
00:16:01,519 --> 00:16:04,480
commands on your raspberry pi it will

481
00:16:04,480 --> 00:16:06,240
then let you just basically send all the

482
00:16:06,240 --> 00:16:09,199
data through your um virtual machine so

483
00:16:09,199 --> 00:16:11,120
that it can get to the internet and then

484
00:16:11,120 --> 00:16:12,639
you can update stuff and it makes life

485
00:16:12,639 --> 00:16:15,360
easier another top tip explain shell.com

486
00:16:15,360 --> 00:16:16,880
really good website you give it a shell

487
00:16:16,880 --> 00:16:18,560
command and it will just it breaks it

488
00:16:18,560 --> 00:16:20,000
down it tells you what all the flags

489
00:16:20,000 --> 00:16:21,759
mean it's really useful

490
00:16:21,759 --> 00:16:23,279
another one that's useful with raspberry

491
00:16:23,279 --> 00:16:25,680
pi's is rf kill unblock wi-fi because as

492
00:16:25,680 --> 00:16:28,240
default wi-fi is off on them uh i got a

493
00:16:28,240 --> 00:16:30,079
bit confused with that once to why it

494
00:16:30,079 --> 00:16:31,920
wasn't working before realizing oh yeah

495
00:16:31,920 --> 00:16:33,120
i should read the disclaimer that it

496
00:16:33,120 --> 00:16:34,880
posts in the terminal when you start

497
00:16:34,880 --> 00:16:37,839
starting up um top right we've got just

498
00:16:37,839 --> 00:16:41,680
some core batman commands so bat ctl if

499
00:16:41,680 --> 00:16:44,639
add wlan0 that's assigning the wireless

500
00:16:44,639 --> 00:16:48,160
interface wlan zero to bat zero so that

501
00:16:48,160 --> 00:16:49,920
interface can effectively be controlled

502
00:16:49,920 --> 00:16:51,279
by batman

503
00:16:51,279 --> 00:16:54,399
um gw mode client is just gateway it

504
00:16:54,399 --> 00:16:55,839
just means that it's a note that's part

505
00:16:55,839 --> 00:16:58,000
of a mesh network they use a separate

506
00:16:58,000 --> 00:16:59,360
command to set up something that's

507
00:16:59,360 --> 00:17:01,199
designed to be the connection to another

508
00:17:01,199 --> 00:17:03,279
network i've just kind of worked around

509
00:17:03,279 --> 00:17:05,919
it with my slightly janky network setup

510
00:17:05,919 --> 00:17:07,199
um

511
00:17:07,199 --> 00:17:09,119
you know once we've also got like if

512
00:17:09,119 --> 00:17:11,599
command i have config wlan up to bring

513
00:17:11,599 --> 00:17:13,119
that interface up and bring the batman

514
00:17:13,119 --> 00:17:14,480
interface up

515
00:17:14,480 --> 00:17:16,240
um i've written them in that order but i

516
00:17:16,240 --> 00:17:18,880
recall having issues where if you

517
00:17:18,880 --> 00:17:21,039
assign stuff to the bat zero interface

518
00:17:21,039 --> 00:17:23,599
well um like say wlan zero you want to

519
00:17:23,599 --> 00:17:25,599
assign it to the batman interface if you

520
00:17:25,599 --> 00:17:27,679
assign it while it's down and then bring

521
00:17:27,679 --> 00:17:30,000
the interface up it goes scream batman

522
00:17:30,000 --> 00:17:31,600
just does some very strange stuff but it

523
00:17:31,600 --> 00:17:34,080
doesn't tell you why so top tip bring

524
00:17:34,080 --> 00:17:36,799
back zero up bring w land zero up then

525
00:17:36,799 --> 00:17:39,280
assign w man zero to fat zero or it'll

526
00:17:39,280 --> 00:17:40,559
do weird stuff

527
00:17:40,559 --> 00:17:43,760
also uh stop dhcp you don't wanna assign

528
00:17:43,760 --> 00:17:45,520
an ip address to any of the interfaces

529
00:17:45,520 --> 00:17:47,200
because again that makes it just does

530
00:17:47,200 --> 00:17:48,400
weird stuff

531
00:17:48,400 --> 00:17:50,640
it just will not send traffic correctly

532
00:17:50,640 --> 00:17:52,240
but it doesn't send any errors there's

533
00:17:52,240 --> 00:17:53,919
no indication of what's going wrong it

534
00:17:53,919 --> 00:17:56,320
just it just doesn't

535
00:17:56,320 --> 00:17:58,320
um bottom left

536
00:17:58,320 --> 00:18:00,559
network definition for creating wireless

537
00:18:00,559 --> 00:18:02,160
interfaces if you're setting up a

538
00:18:02,160 --> 00:18:03,919
wireless wireless mesh network with the

539
00:18:03,919 --> 00:18:06,320
raspberry pi's you just want to create a

540
00:18:06,320 --> 00:18:08,240
file at that location i'm using bim

541
00:18:08,240 --> 00:18:09,919
because i hate myself

542
00:18:09,919 --> 00:18:11,520
and that's a list of what you'd want to

543
00:18:11,520 --> 00:18:13,600
put in that file i've just got a little

544
00:18:13,600 --> 00:18:15,919
mesh network called vic.net it's not

545
00:18:15,919 --> 00:18:18,640
very secure because i'm lazy um but

546
00:18:18,640 --> 00:18:20,559
that's what the mesh net that's

547
00:18:20,559 --> 00:18:21,919
basically the wireless network that

548
00:18:21,919 --> 00:18:24,000
things have been inducted into

549
00:18:24,000 --> 00:18:26,320
um here which you can't see because it's

550
00:18:26,320 --> 00:18:29,919
bad resolution just ba fat ctl if tells

551
00:18:29,919 --> 00:18:31,280
you what interfaces have been assigned

552
00:18:31,280 --> 00:18:34,400
to batman and bat ctl n tells you what

553
00:18:34,400 --> 00:18:37,039
neighbors you've got because um you

554
00:18:37,039 --> 00:18:38,720
still even though it's like using batman

555
00:18:38,720 --> 00:18:40,240
you're still contacting other nodes

556
00:18:40,240 --> 00:18:42,400
based on their ip address so it was

557
00:18:42,400 --> 00:18:45,120
useful to just check bat ctln to see the

558
00:18:45,120 --> 00:18:47,280
ip address of the near of your neighbors

559
00:18:47,280 --> 00:18:49,360
because every time you re if you bring

560
00:18:49,360 --> 00:18:50,799
down and bring the mesh back up it

561
00:18:50,799 --> 00:18:52,720
reassigns the ip addresses

562
00:18:52,720 --> 00:18:53,600
so

563
00:18:53,600 --> 00:18:54,799
it's useful when you're trying to work

564
00:18:54,799 --> 00:18:56,720
out how do i reach that node

565
00:18:56,720 --> 00:18:58,080
um

566
00:18:58,080 --> 00:18:59,840
yeah and we've got the bat ctl trace

567
00:18:59,840 --> 00:19:01,280
route which is just traceroute but for

568
00:19:01,280 --> 00:19:03,120
batman it's a useful command because if

569
00:19:03,120 --> 00:19:05,600
you try to verify that you know stuff is

570
00:19:05,600 --> 00:19:06,960
pathing through the middle node

571
00:19:06,960 --> 00:19:09,120
correctly it's it's good to be able to

572
00:19:09,120 --> 00:19:11,200
see it

573
00:19:11,200 --> 00:19:13,919
uh status report where am i right now

574
00:19:13,919 --> 00:19:16,960
right now i am in scappy hell

575
00:19:16,960 --> 00:19:18,720
scappy is a python tool which lets you

576
00:19:18,720 --> 00:19:20,960
manually craft network traffic and mess

577
00:19:20,960 --> 00:19:22,400
around with packets

578
00:19:22,400 --> 00:19:24,480
i've been spending way too long crafting

579
00:19:24,480 --> 00:19:25,919
packets and then looking at them on

580
00:19:25,919 --> 00:19:27,760
wireshark and being like why god is it

581
00:19:27,760 --> 00:19:29,360
doing this weirdly

582
00:19:29,360 --> 00:19:30,160
um

583
00:19:30,160 --> 00:19:33,360
so because batman is at layer two it's

584
00:19:33,360 --> 00:19:35,120
basically you know normally you'd have

585
00:19:35,120 --> 00:19:37,200
your ethernet packet and then inside

586
00:19:37,200 --> 00:19:38,720
that you've got your ip packet and

587
00:19:38,720 --> 00:19:41,120
inside that you've got your tcp packet

588
00:19:41,120 --> 00:19:43,600
in this i'm replacing the ethernet stuff

589
00:19:43,600 --> 00:19:45,760
and scampi doesn't doesn't know how to

590
00:19:45,760 --> 00:19:47,600
do batman so i've just been manually

591
00:19:47,600 --> 00:19:49,520
creating ethernet frames and overwriting

592
00:19:49,520 --> 00:19:51,760
all the data in it and sometimes that

593
00:19:51,760 --> 00:19:53,360
seems to work sometimes it makes it go

594
00:19:53,360 --> 00:19:55,520
really screwy here's just a screenshot

595
00:19:55,520 --> 00:19:57,360
of uh one of the packets i attempted to

596
00:19:57,360 --> 00:19:59,840
make where yeah she's added a bunch of x

597
00:19:59,840 --> 00:20:01,200
to the uh i guess it's still on

598
00:20:01,200 --> 00:20:02,400
broadcast

599
00:20:02,400 --> 00:20:03,679
um i think that was when i was trying to

600
00:20:03,679 --> 00:20:05,360
send out packets using the wrong command

601
00:20:05,360 --> 00:20:06,720
on scapion so it was actually

602
00:20:06,720 --> 00:20:08,799
encapsulating them with a malformed

603
00:20:08,799 --> 00:20:10,320
ethernet frame

604
00:20:10,320 --> 00:20:11,679
um another top tip if you're trying to

605
00:20:11,679 --> 00:20:13,840
get into networking stuff just wire

606
00:20:13,840 --> 00:20:16,400
sharp view is really nice like it breaks

607
00:20:16,400 --> 00:20:19,679
it down by you know ethernet ip whatever

608
00:20:19,679 --> 00:20:21,520
and you can click at the top and it will

609
00:20:21,520 --> 00:20:23,440
highlight the bytes at the bottom which

610
00:20:23,440 --> 00:20:25,520
are you know relevant to that packet or

611
00:20:25,520 --> 00:20:27,200
that aspect of the packet you're looking

612
00:20:27,200 --> 00:20:27,840
at

613
00:20:27,840 --> 00:20:29,120
so

614
00:20:29,120 --> 00:20:30,720
you know generally top tip play with

615
00:20:30,720 --> 00:20:34,679
wireshark is a cool tool

616
00:20:35,130 --> 00:20:38,159
[Music]

617
00:20:38,159 --> 00:20:40,320
um so yeah right now i've just been um

618
00:20:40,320 --> 00:20:42,960
recreating the heartbeat messages which

619
00:20:42,960 --> 00:20:45,679
makes stuff upset a little bit to do

620
00:20:45,679 --> 00:20:47,520
um i need to actually start doing more

621
00:20:47,520 --> 00:20:48,880
targeted stuff

622
00:20:48,880 --> 00:20:51,679
so either trying to simulate a malicious

623
00:20:51,679 --> 00:20:53,600
node that's sending out you know

624
00:20:53,600 --> 00:20:55,120
stuff that it shouldn't be

625
00:20:55,120 --> 00:20:57,440
or trying to intercept and manipulate

626
00:20:57,440 --> 00:20:59,039
any of the datagrams that are being sent

627
00:20:59,039 --> 00:21:00,799
around the network as part of its normal

628
00:21:00,799 --> 00:21:03,200
operation the creators the batman

629
00:21:03,200 --> 00:21:05,039
protocol created a tool called the joker

630
00:21:05,039 --> 00:21:06,559
because of course you're going to call

631
00:21:06,559 --> 00:21:08,080
it that which is designed for

632
00:21:08,080 --> 00:21:10,400
penetration testing batman networks and

633
00:21:10,400 --> 00:21:11,840
it can be used to send out things like

634
00:21:11,840 --> 00:21:14,240
packet storms to simulate a malicious

635
00:21:14,240 --> 00:21:16,240
node it just lets you do a lot of

636
00:21:16,240 --> 00:21:17,520
interesting stuff so i need to play

637
00:21:17,520 --> 00:21:18,799
around with that

638
00:21:18,799 --> 00:21:20,080
i want to test out some of the

639
00:21:20,080 --> 00:21:21,760
hypothetical attacks on connected and

640
00:21:21,760 --> 00:21:23,600
autonomous vehicles

641
00:21:23,600 --> 00:21:25,679
i've basically just got like so many

642
00:21:25,679 --> 00:21:27,120
ideas of things i want to do with the

643
00:21:27,120 --> 00:21:29,039
mesh networks that i've not got around

644
00:21:29,039 --> 00:21:31,039
to it yet i also want to have a little

645
00:21:31,039 --> 00:21:33,520
play around with attacks on the tcpip

646
00:21:33,520 --> 00:21:35,120
stack um

647
00:21:35,120 --> 00:21:35,919
and

648
00:21:35,919 --> 00:21:37,280
you know i could do those on just a

649
00:21:37,280 --> 00:21:39,039
standard network but it's much easier if

650
00:21:39,039 --> 00:21:40,640
i can guarantee the traffic's being

651
00:21:40,640 --> 00:21:42,400
forced through my system as it would be

652
00:21:42,400 --> 00:21:44,480
in a mesh network so

653
00:21:44,480 --> 00:21:47,919
seems like an easier way to do it

654
00:21:48,000 --> 00:21:49,679
um yeah thanks for watching this has

655
00:21:49,679 --> 00:21:51,280
just been a bit of a brain dump of what

656
00:21:51,280 --> 00:21:52,880
i've been up to recently and where i'm

657
00:21:52,880 --> 00:21:53,760
going

658
00:21:53,760 --> 00:21:55,919
um if you want to read stuff i've got

659
00:21:55,919 --> 00:21:57,440
the blog where it is just more of me

660
00:21:57,440 --> 00:21:59,280
rambling about stuff

661
00:21:59,280 --> 00:22:01,760
uh i'm also on twitter at bitcartness or

662
00:22:01,760 --> 00:22:03,520
i'm about here

663
00:22:03,520 --> 00:22:05,280
um if anyone wants to chat about mesh

664
00:22:05,280 --> 00:22:06,960
networks come chat to me or any just

665
00:22:06,960 --> 00:22:08,159
random

666
00:22:08,159 --> 00:22:10,240
um also i'm like i think i'm

667
00:22:10,240 --> 00:22:11,760
contractually obligated to say that

668
00:22:11,760 --> 00:22:14,080
f-secure consulting is recruiting so

669
00:22:14,080 --> 00:22:15,440
come talk to me if you want to work at

670
00:22:15,440 --> 00:22:18,559
f-secure consulting

671
00:22:18,960 --> 00:22:22,520
yeah thank you

672
00:22:33,120 --> 00:22:35,360
uh have i done any speed testing with it

673
00:22:35,360 --> 00:22:37,919
this i went down a rabbit hole as i do

674
00:22:37,919 --> 00:22:38,799
on that

675
00:22:38,799 --> 00:22:40,559
where you've got like um you know your

676
00:22:40,559 --> 00:22:42,159
normal ping command where it tells you

677
00:22:42,159 --> 00:22:44,720
the time um for some reason i missed

678
00:22:44,720 --> 00:22:47,200
that there was the bat ctl ping command

679
00:22:47,200 --> 00:22:49,600
and so i started trying to recreate ping

680
00:22:49,600 --> 00:22:52,480
um but using like it was done at tcp

681
00:22:52,480 --> 00:22:54,720
level i was using python sockets

682
00:22:54,720 --> 00:22:56,159
and then i had issues with time

683
00:22:56,159 --> 00:22:57,760
synchronization so then i went down a

684
00:22:57,760 --> 00:23:00,000
rabbit hole with ntp to make sure that

685
00:23:00,000 --> 00:23:01,760
the time was synchronizing on them and

686
00:23:01,760 --> 00:23:03,600
that wasted way too much time and then i

687
00:23:03,600 --> 00:23:06,000
got bored and realized that ctl ping

688
00:23:06,000 --> 00:23:07,120
existed

689
00:23:07,120 --> 00:23:09,600
and then i lost track of that project so

690
00:23:09,600 --> 00:23:12,000
a bit of the project so no i'm not um

691
00:23:12,000 --> 00:23:13,440
i've not looked at speed tests but it

692
00:23:13,440 --> 00:23:15,919
does seem to be quite fast um i need a

693
00:23:15,919 --> 00:23:18,000
bigger flat i went through another stage

694
00:23:18,000 --> 00:23:19,039
where i was wrapping all of the

695
00:23:19,039 --> 00:23:20,720
raspberry pi's and tin foil to try and

696
00:23:20,720 --> 00:23:22,960
 the signal strength a bit and it

697
00:23:22,960 --> 00:23:24,400
was bad my flat looked like it was full

698
00:23:24,400 --> 00:23:25,840
of bombs because there's all these wired

699
00:23:25,840 --> 00:23:28,960
things with tin foil and it wasn't good

700
00:23:28,960 --> 00:23:30,000
um

701
00:23:30,000 --> 00:23:32,000
but maybe in the future i'll play around

702
00:23:32,000 --> 00:23:35,480
with that a bit more

703
00:23:42,030 --> 00:23:45,109
[Music]

704
00:23:47,120 --> 00:23:50,000
so can i do attacks between them um it's

705
00:23:50,000 --> 00:23:52,559
not something i've looked at because

706
00:23:52,559 --> 00:23:54,080
there's not really well with the batman

707
00:23:54,080 --> 00:23:55,600
mesh network i've got set up right now

708
00:23:55,600 --> 00:23:57,919
there's not any authentication like i've

709
00:23:57,919 --> 00:24:00,400
literally just got the vic net that's

710
00:24:00,400 --> 00:24:04,440
just there there's no pass

711
00:24:08,320 --> 00:24:11,409
[Music]

712
00:24:11,919 --> 00:24:13,840
um so i don't think that they really i

713
00:24:13,840 --> 00:24:16,080
don't think nodes really say i'm leaving

714
00:24:16,080 --> 00:24:17,919
they just disappear because all of the

715
00:24:17,919 --> 00:24:19,520
nodes are constantly reaching out and

716
00:24:19,520 --> 00:24:21,120
trying to see what they get a response

717
00:24:21,120 --> 00:24:23,120
from then that's how they work out the

718
00:24:23,120 --> 00:24:23,919
mesh

719
00:24:23,919 --> 00:24:25,760
so something that i want to play around

720
00:24:25,760 --> 00:24:28,000
with is because these nodes are reflect

721
00:24:28,000 --> 00:24:29,360
uh sending out the messages they've

722
00:24:29,360 --> 00:24:31,679
received could i selectively target one

723
00:24:31,679 --> 00:24:33,919
of the nodes so i don't know node a

724
00:24:33,919 --> 00:24:36,080
ascending to node b no b sending to node

725
00:24:36,080 --> 00:24:39,200
c if i could control node b could i make

726
00:24:39,200 --> 00:24:40,799
it drop all of the packets coming from

727
00:24:40,799 --> 00:24:43,200
node a but pass on every other packet

728
00:24:43,200 --> 00:24:44,960
that it receives from every other node

729
00:24:44,960 --> 00:24:46,400
because in that scenario

730
00:24:46,400 --> 00:24:47,679
all the other nodes would think it's

731
00:24:47,679 --> 00:24:50,080
fine and you know if you had say you

732
00:24:50,080 --> 00:24:53,919
required 95 um packet you know a packet

733
00:24:53,919 --> 00:24:55,760
lot loss i don't know what that's five

734
00:24:55,760 --> 00:24:57,520
percent packet loss is acceptable

735
00:24:57,520 --> 00:24:59,279
anything above that is bad if i could

736
00:24:59,279 --> 00:25:01,679
target that five percent on one node you

737
00:25:01,679 --> 00:25:02,960
know that that would be an interesting

738
00:25:02,960 --> 00:25:04,400
attack to play with that one's not

739
00:25:04,400 --> 00:25:07,120
really a batman specific one that's

740
00:25:07,120 --> 00:25:09,440
i guess that one's almost more of a tcp

741
00:25:09,440 --> 00:25:11,679
kind of stuff i think in tcp there are

742
00:25:11,679 --> 00:25:14,159
various provisions for doing reliability

743
00:25:14,159 --> 00:25:16,080
of data transfers but yeah doing

744
00:25:16,080 --> 00:25:17,840
targeted drop packet dropping to make

745
00:25:17,840 --> 00:25:19,360
something effectively be left out of the

746
00:25:19,360 --> 00:25:21,679
mesh network is something that's on the

747
00:25:21,679 --> 00:25:26,760
lengthy to-do list of things to try

748
00:25:27,560 --> 00:25:34,859
[Music]

749
00:25:35,600 --> 00:25:37,360
designed just for

750
00:25:37,360 --> 00:25:39,360
the batman protocol

751
00:25:39,360 --> 00:25:42,799
so um i mean you can use it to

752
00:25:42,799 --> 00:25:44,880
it's a penetration testing tool but it's

753
00:25:44,880 --> 00:25:47,840
very it's it's a hammer it just it spams

754
00:25:47,840 --> 00:25:49,360
out a bunch of traffic which will make

755
00:25:49,360 --> 00:25:51,200
your network freak out there's no kind

756
00:25:51,200 --> 00:25:52,080
of

757
00:25:52,080 --> 00:25:54,720
you know fine-tuned nuanced attacks it's

758
00:25:54,720 --> 00:25:56,480
just designed to make a mess and make

759
00:25:56,480 --> 00:25:57,760
everything freak out i guess that's why

760
00:25:57,760 --> 00:26:00,000
they call it the joker it's um

761
00:26:00,000 --> 00:26:02,559
yeah so it's just to upset mesh networks

762
00:26:02,559 --> 00:26:04,000
i've not got around to playing with it

763
00:26:04,000 --> 00:26:06,960
yet but it's it is on the to-do list of

764
00:26:06,960 --> 00:26:10,360
various things

765
00:26:20,640 --> 00:26:22,720
like in some routing protocols you get

766
00:26:22,720 --> 00:26:24,400
they'll each have like a little table of

767
00:26:24,400 --> 00:26:26,240
roots which is well i guess as i am

768
00:26:26,240 --> 00:26:27,919
traditional ones which gets propagated

769
00:26:27,919 --> 00:26:29,760
throughout them but in batman no it just

770
00:26:29,760 --> 00:26:32,080
goes these are my neighbors i know i've

771
00:26:32,080 --> 00:26:34,400
got this metric of connection to it i

772
00:26:34,400 --> 00:26:35,840
know i've got this metric of connection

773
00:26:35,840 --> 00:26:36,960
to that one

774
00:26:36,960 --> 00:26:40,080
i'm just going to send it to that one

775
00:26:42,410 --> 00:26:48,320
[Music]

776
00:26:48,320 --> 00:26:50,159
oh yeah absolutely

777
00:26:50,159 --> 00:26:51,440
so that's one of the goals of this

778
00:26:51,440 --> 00:26:54,240
project is if i did just plug another

779
00:26:54,240 --> 00:26:57,120
device into it and assign it because

780
00:26:57,120 --> 00:26:58,559
yeah like you know if it is just a

781
00:26:58,559 --> 00:27:00,080
random mesh network it's not very secure

782
00:27:00,080 --> 00:27:01,760
i can just connect to it and i've added

783
00:27:01,760 --> 00:27:02,880
my node and i start sending out

784
00:27:02,880 --> 00:27:05,200
malicious stuff what can i do if i could

785
00:27:05,200 --> 00:27:08,080
somehow you know become a better choice

786
00:27:08,080 --> 00:27:10,080
than another load and then have all the

787
00:27:10,080 --> 00:27:11,840
data be rooted through my malicious node

788
00:27:11,840 --> 00:27:13,039
i can then start doing the selective

789
00:27:13,039 --> 00:27:15,279
packet dropping or just you know do

790
00:27:15,279 --> 00:27:17,840
whatever really it's all about um i

791
00:27:17,840 --> 00:27:19,600
guess malicious compliance i think for

792
00:27:19,600 --> 00:27:21,600
batman attacks you want to not be

793
00:27:21,600 --> 00:27:23,919
penalized by the network for overtly

794
00:27:23,919 --> 00:27:26,000
misbehaving but you still want to be

795
00:27:26,000 --> 00:27:30,000
able to do nasty stuff to other nodes

796
00:27:31,039 --> 00:27:33,679
anyone else

797
00:27:33,830 --> 00:27:36,909
[Music]

798
00:27:39,279 --> 00:27:41,039
there's so many different things that it

799
00:27:41,039 --> 00:27:42,000
uses

800
00:27:42,000 --> 00:27:43,840
yeah so it's got

801
00:27:43,840 --> 00:27:46,159
it's got like this link strength where

802
00:27:46,159 --> 00:27:48,399
it looks at the amount of time it takes

803
00:27:48,399 --> 00:27:50,960
for the next node to set reflected but

804
00:27:50,960 --> 00:27:53,120
in the in the reflected packet the node

805
00:27:53,120 --> 00:27:54,080
will also

806
00:27:54,080 --> 00:27:56,159
contain data about my connection

807
00:27:56,159 --> 00:27:58,960
strength to the next node is also this

808
00:27:58,960 --> 00:28:01,120
and if you've got like it'll also give

809
00:28:01,120 --> 00:28:02,960
an indication like i think there's just

810
00:28:02,960 --> 00:28:04,399
this one value they use for a lot of it

811
00:28:04,399 --> 00:28:07,279
that's controlled by a lot of things so

812
00:28:07,279 --> 00:28:08,880
if you've got like a node there's a

813
00:28:08,880 --> 00:28:12,000
couple out it'll then reduce the num the

814
00:28:12,000 --> 00:28:13,840
value associated with that node every

815
00:28:13,840 --> 00:28:15,120
time it hops

816
00:28:15,120 --> 00:28:16,399
because sometimes you think you end up

817
00:28:16,399 --> 00:28:17,840
with scenarios where it's preferable to

818
00:28:17,840 --> 00:28:20,240
hop a b c than to just go a to c for

819
00:28:20,240 --> 00:28:21,679
whatever reason

820
00:28:21,679 --> 00:28:24,159
um honestly there's just there's they've

821
00:28:24,159 --> 00:28:26,159
written like so much on their website of

822
00:28:26,159 --> 00:28:28,000
all of the weird different things that

823
00:28:28,000 --> 00:28:29,679
they do to make sure that it's making

824
00:28:29,679 --> 00:28:31,840
the best routing decisions um some of

825
00:28:31,840 --> 00:28:33,200
which are designed to try and avoid

826
00:28:33,200 --> 00:28:34,880
things like rooting black holes because

827
00:28:34,880 --> 00:28:36,399
i think that's something they had issues

828
00:28:36,399 --> 00:28:39,360
with in previous versions

829
00:28:49,279 --> 00:28:51,360
yeah so far as i know they've not had

830
00:28:51,360 --> 00:28:52,399
any but i'm pretty sure it's a

831
00:28:52,399 --> 00:28:54,799
background in rather than an acronym but

832
00:28:54,799 --> 00:28:55,760
yeah

833
00:28:55,760 --> 00:28:57,120
i guess because it's just a random linux

834
00:28:57,120 --> 00:28:59,679
project no one probably wants it yeah

835
00:28:59,679 --> 00:29:03,039
there's no money to get out of it

836
00:29:03,039 --> 00:29:05,679
anyone else

837
00:29:05,840 --> 00:29:09,480
cool thanks for your time

