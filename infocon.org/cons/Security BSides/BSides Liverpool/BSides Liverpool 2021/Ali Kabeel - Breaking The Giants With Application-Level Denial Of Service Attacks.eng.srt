1
00:00:03,760 --> 00:00:06,319
and today we will be seeing breaking the

2
00:00:06,319 --> 00:00:08,160
joints with application level denial of

3
00:00:08,160 --> 00:00:10,719
service attacks um so let's start by

4
00:00:10,719 --> 00:00:12,320
some who am i i'm a computer science

5
00:00:12,320 --> 00:00:13,759
engineering student the german

6
00:00:13,759 --> 00:00:15,519
university in cairo i have been a bug

7
00:00:15,519 --> 00:00:17,199
hunter and security researcher since

8
00:00:17,199 --> 00:00:19,920
2014 and my main research interests

9
00:00:19,920 --> 00:00:21,840
revolve around privacy with application

10
00:00:21,840 --> 00:00:24,800
security network security

11
00:00:24,800 --> 00:00:26,880
um and logical vulnerabilities in

12
00:00:26,880 --> 00:00:28,240
specific

13
00:00:28,240 --> 00:00:30,320
i have been a speaker besides las vegas

14
00:00:30,320 --> 00:00:34,960
2021 and i triple e lcn 2020. um you can

15
00:00:34,960 --> 00:00:36,800
find me on social media at logicbreaker

16
00:00:36,800 --> 00:00:39,440
on twitter and i'll be on linkedin

17
00:00:39,440 --> 00:00:43,120
so let's start by some motivation and um

18
00:00:43,120 --> 00:00:45,039
let's break our title into two parts so

19
00:00:45,039 --> 00:00:46,879
our title is breaking the giants with

20
00:00:46,879 --> 00:00:48,239
application level denial of service

21
00:00:48,239 --> 00:00:50,640
attacks so the first part is breaking

22
00:00:50,640 --> 00:00:52,559
the giant what do we mean by the giants

23
00:00:52,559 --> 00:00:54,079
here so the giants are gigantic

24
00:00:54,079 --> 00:00:56,480
companies like snapchat facebook google

25
00:00:56,480 --> 00:00:59,039
and so on that have huge infrastructure

26
00:00:59,039 --> 00:01:00,879
and are

27
00:01:00,879 --> 00:01:02,399
multi-billion dollar companies in

28
00:01:02,399 --> 00:01:03,280
general

29
00:01:03,280 --> 00:01:05,119
and the other part is application level

30
00:01:05,119 --> 00:01:06,400
developer service attack and because

31
00:01:06,400 --> 00:01:08,960
this word is a bit complicated um we

32
00:01:08,960 --> 00:01:10,640
will start by giving some background

33
00:01:10,640 --> 00:01:13,280
information about what is

34
00:01:13,280 --> 00:01:15,439
a denial of service attack in general

35
00:01:15,439 --> 00:01:16,960
before we define the line of service

36
00:01:16,960 --> 00:01:18,799
attacks um

37
00:01:18,799 --> 00:01:20,159
just to make sure that everybody here

38
00:01:20,159 --> 00:01:22,640
understand what the cia trial is so a

39
00:01:22,640 --> 00:01:24,960
cia triad is like the golden standard

40
00:01:24,960 --> 00:01:26,960
defined by information security experts

41
00:01:26,960 --> 00:01:28,720
it would define

42
00:01:28,720 --> 00:01:31,360
a system to be secure

43
00:01:31,360 --> 00:01:32,720
in general

44
00:01:32,720 --> 00:01:35,040
so it consists of three main parts the

45
00:01:35,040 --> 00:01:36,960
first of them is confidentiality a

46
00:01:36,960 --> 00:01:38,560
confidentiality refers to the fact that

47
00:01:38,560 --> 00:01:42,159
whenever information um

48
00:01:42,159 --> 00:01:44,240
is considered a secret or is considered

49
00:01:44,240 --> 00:01:46,159
to be um

50
00:01:46,159 --> 00:01:48,000
not public information in general it

51
00:01:48,000 --> 00:01:49,680
should stay within the system that means

52
00:01:49,680 --> 00:01:51,119
that this information should not be

53
00:01:51,119 --> 00:01:52,479
leaked anyway

54
00:01:52,479 --> 00:01:54,399
to malicious adversaries or even two

55
00:01:54,399 --> 00:01:56,000
third parties that are not intended to

56
00:01:56,000 --> 00:01:57,680
have this information

57
00:01:57,680 --> 00:01:59,759
when the information only stays within

58
00:01:59,759 --> 00:02:02,000
the system and is only accessed by the

59
00:02:02,000 --> 00:02:03,759
authorized personality can say that this

60
00:02:03,759 --> 00:02:05,439
information is confidential or the

61
00:02:05,439 --> 00:02:07,520
confidentiality is not affected

62
00:02:07,520 --> 00:02:09,919
the other part which in the eye in the

63
00:02:09,919 --> 00:02:12,080
cia which is the integrity refers to the

64
00:02:12,080 --> 00:02:13,120
data

65
00:02:13,120 --> 00:02:15,200
integrity which means that

66
00:02:15,200 --> 00:02:17,360
the data is not altered is not tampered

67
00:02:17,360 --> 00:02:21,520
with nobody changes data the data is

68
00:02:21,520 --> 00:02:23,599
the real data the authentic data in the

69
00:02:23,599 --> 00:02:24,800
system so for instance if you have a

70
00:02:24,800 --> 00:02:26,640
facebook account and you log in and you

71
00:02:26,640 --> 00:02:28,000
see that your name is changed for

72
00:02:28,000 --> 00:02:29,599
instance um

73
00:02:29,599 --> 00:02:31,760
this may say that the integrity of the

74
00:02:31,760 --> 00:02:33,200
data has been violated you haven't

75
00:02:33,200 --> 00:02:34,800
changed your name this is not the data

76
00:02:34,800 --> 00:02:36,239
you stored the integrity of loom

77
00:02:36,239 --> 00:02:38,800
variation but if everything is just like

78
00:02:38,800 --> 00:02:40,640
what you did nobody altered or changed

79
00:02:40,640 --> 00:02:42,400
the data we say that the data integrity

80
00:02:42,400 --> 00:02:45,840
is high or that the system is integral

81
00:02:45,840 --> 00:02:47,599
and the last part which is our target

82
00:02:47,599 --> 00:02:48,720
here is the availability and the

83
00:02:48,720 --> 00:02:50,160
availability of the system is the

84
00:02:50,160 --> 00:02:51,680
ability of the system to serve its users

85
00:02:51,680 --> 00:02:54,640
service customers to be usable um

86
00:02:54,640 --> 00:02:56,560
imagine having the most confidential

87
00:02:56,560 --> 00:02:57,840
system in the world with the best

88
00:02:57,840 --> 00:02:59,200
integrity ever but the system is not

89
00:02:59,200 --> 00:03:01,200
usable nobody can access the system it

90
00:03:01,200 --> 00:03:02,640
has low availability the system is

91
00:03:02,640 --> 00:03:04,080
completely useless and this is the

92
00:03:04,080 --> 00:03:06,080
target of denial of service attacks so

93
00:03:06,080 --> 00:03:07,920
the line of service attacks are a class

94
00:03:07,920 --> 00:03:10,080
of attacks that aim to disrupt the

95
00:03:10,080 --> 00:03:11,680
availability of the service it's aimed

96
00:03:11,680 --> 00:03:13,519
to make the service not available to its

97
00:03:13,519 --> 00:03:16,959
customers to its users to deny users

98
00:03:16,959 --> 00:03:19,519
uh in the past this was done using uh

99
00:03:19,519 --> 00:03:22,319
brute force so adversaries just launched

100
00:03:22,319 --> 00:03:24,560
what we call a high volume derived

101
00:03:24,560 --> 00:03:26,879
service attacks um those are attacks in

102
00:03:26,879 --> 00:03:29,200
which the adversary just sends billions

103
00:03:29,200 --> 00:03:30,319
of requests

104
00:03:30,319 --> 00:03:31,920
directly to the server aiming to make

105
00:03:31,920 --> 00:03:34,080
the server unavailable to its religious

106
00:03:34,080 --> 00:03:36,799
or benign users

107
00:03:36,799 --> 00:03:39,200
um the idea here is any server has some

108
00:03:39,200 --> 00:03:41,120
kind of capacity if you consumed all

109
00:03:41,120 --> 00:03:44,000
this capacity with fake or bogus request

110
00:03:44,000 --> 00:03:46,640
the server cannot withstand or cannot

111
00:03:46,640 --> 00:03:47,760
handle

112
00:03:47,760 --> 00:03:49,760
further requests

113
00:03:49,760 --> 00:03:52,000
so what they did is that usually

114
00:03:52,000 --> 00:03:53,760
adversaries distributed malware or

115
00:03:53,760 --> 00:03:55,840
something that allowed them to

116
00:03:55,840 --> 00:03:57,599
get control of

117
00:03:57,599 --> 00:03:59,920
a huge computational power or a huge

118
00:03:59,920 --> 00:04:02,480
number of pcs or a huge number of uh

119
00:04:02,480 --> 00:04:04,239
computational devices in general and

120
00:04:04,239 --> 00:04:06,640
then use those devices uh to launch

121
00:04:06,640 --> 00:04:08,080
denial of service attacks or what we

122
00:04:08,080 --> 00:04:09,680
call distributed denial of service

123
00:04:09,680 --> 00:04:12,879
because it's launched from both nets and

124
00:04:12,879 --> 00:04:14,720
a huge network of connected computers

125
00:04:14,720 --> 00:04:16,639
launching the attack at one time not

126
00:04:16,639 --> 00:04:19,680
just from a single machine

127
00:04:19,680 --> 00:04:22,320
um so this was very effective and it has

128
00:04:22,320 --> 00:04:25,199
proven to cost uh millions and millions

129
00:04:25,199 --> 00:04:26,840
to companies

130
00:04:26,840 --> 00:04:29,840
um but this is starting to change this

131
00:04:29,840 --> 00:04:31,600
attack fight is starting to change and

132
00:04:31,600 --> 00:04:33,199
there are two main reasons here the

133
00:04:33,199 --> 00:04:35,440
first reason is that it requires a huge

134
00:04:35,440 --> 00:04:37,280
computational power the attacker needs

135
00:04:37,280 --> 00:04:39,280
to have access to a huge competition

136
00:04:39,280 --> 00:04:42,639
power to inflict enough damage um even

137
00:04:42,639 --> 00:04:44,560
with this amount of computational power

138
00:04:44,560 --> 00:04:46,320
it's really unlikely that you can target

139
00:04:46,320 --> 00:04:48,479
something like facebook or like google

140
00:04:48,479 --> 00:04:50,639
or like those gigantic companies with

141
00:04:50,639 --> 00:04:53,120
huge data centers um

142
00:04:53,120 --> 00:04:54,639
it's really unlikely that you can target

143
00:04:54,639 --> 00:04:56,880
them using conventional derive service

144
00:04:56,880 --> 00:04:59,120
attacks that aim to just

145
00:04:59,120 --> 00:05:02,080
jam the traffic

146
00:05:02,080 --> 00:05:04,400
so that my users cannot use it

147
00:05:04,400 --> 00:05:06,000
they have huge computational capacity

148
00:05:06,000 --> 00:05:08,800
that you won't be able to withstand

149
00:05:08,800 --> 00:05:11,039
the other reason is

150
00:05:11,039 --> 00:05:12,960
the advances in intrusion detection

151
00:05:12,960 --> 00:05:15,360
system and in cloud solutions like cloud

152
00:05:15,360 --> 00:05:18,080
fair uh cloudflare that now aims to

153
00:05:18,080 --> 00:05:20,400
migrate those device service attacks are

154
00:05:20,400 --> 00:05:22,080
becoming very popular and are becoming

155
00:05:22,080 --> 00:05:23,440
very smart using machine learning

156
00:05:23,440 --> 00:05:25,919
algorithms and ai algorithms and so on

157
00:05:25,919 --> 00:05:28,160
uh the idea here is that heavy

158
00:05:28,160 --> 00:05:30,080
load or high volume demand of service

159
00:05:30,080 --> 00:05:32,800
attacks cause a huge increase in the

160
00:05:32,800 --> 00:05:34,160
number of incoming requests to the

161
00:05:34,160 --> 00:05:37,759
server or the server

162
00:05:37,759 --> 00:05:39,840
um raises a lot of alarms so any

163
00:05:39,840 --> 00:05:41,520
intrusion detection system will know we

164
00:05:41,520 --> 00:05:42,880
are under the null of service attack

165
00:05:42,880 --> 00:05:44,479
imagine that you usually handle 10

166
00:05:44,479 --> 00:05:46,880
requests now you are facing like 100

167
00:05:46,880 --> 00:05:49,039
requests without any good reasoning for

168
00:05:49,039 --> 00:05:50,960
that so it's definitely a denial of

169
00:05:50,960 --> 00:05:52,639
service attack in that case and then we

170
00:05:52,639 --> 00:05:54,160
can work on the mitigation faster

171
00:05:54,160 --> 00:05:56,160
because we know that that exists

172
00:05:56,160 --> 00:05:57,919
um

173
00:05:57,919 --> 00:06:00,800
so before we move on and see how this

174
00:06:00,800 --> 00:06:02,960
changed let's take a few examples uh

175
00:06:02,960 --> 00:06:04,880
regarding high volume attacks the first

176
00:06:04,880 --> 00:06:06,800
of which is the send float attack so the

177
00:06:06,800 --> 00:06:08,000
same float attack exploit the

178
00:06:08,000 --> 00:06:10,240
vulnerability that exists in the tcp

179
00:06:10,240 --> 00:06:12,479
protocol so

180
00:06:12,479 --> 00:06:14,960
the tcp to initiate a connection with

181
00:06:14,960 --> 00:06:17,440
the server you do what we call the tcp

182
00:06:17,440 --> 00:06:19,440
three-way handshake so the first thing

183
00:06:19,440 --> 00:06:21,840
the user will send a sim packet to the

184
00:06:21,840 --> 00:06:23,440
server and then the server will reply

185
00:06:23,440 --> 00:06:25,520
with a send ack packet finally the user

186
00:06:25,520 --> 00:06:27,199
should reply with an ack packet to

187
00:06:27,199 --> 00:06:28,880
complete the connection but what a

188
00:06:28,880 --> 00:06:30,479
malicious attack would do would be the

189
00:06:30,479 --> 00:06:32,479
following the attacker will send the

190
00:06:32,479 --> 00:06:34,240
same packet and then the server will

191
00:06:34,240 --> 00:06:35,919
reply with the same act packet but the

192
00:06:35,919 --> 00:06:37,199
attacker will never reply with an

193
00:06:37,199 --> 00:06:39,840
acknowledgement packet the idea is any

194
00:06:39,840 --> 00:06:41,680
server has certain number of connections

195
00:06:41,680 --> 00:06:43,600
that can withstand for instance server

196
00:06:43,600 --> 00:06:44,880
can withstand ten thousand connections

197
00:06:44,880 --> 00:06:47,919
at the time if the 1001 connection

198
00:06:47,919 --> 00:06:49,759
attempted to connect it won't be able to

199
00:06:49,759 --> 00:06:51,520
do so because the capacity of the server

200
00:06:51,520 --> 00:06:53,360
is exceeded so what we are doing here is

201
00:06:53,360 --> 00:06:54,880
that we are initiating connection with

202
00:06:54,880 --> 00:06:56,479
the server we are not completing the

203
00:06:56,479 --> 00:06:57,840
connection so the server is waiting for

204
00:06:57,840 --> 00:06:59,199
us to complete the connection we are

205
00:06:59,199 --> 00:07:00,720
consuming that but we are never

206
00:07:00,720 --> 00:07:02,240
connecting

207
00:07:02,240 --> 00:07:05,039
so we are virtually consuming those and

208
00:07:05,039 --> 00:07:08,319
usually the timeout period of tcp

209
00:07:08,319 --> 00:07:11,120
handshakes are a bit large so

210
00:07:11,120 --> 00:07:12,960
with enough computational capacity we

211
00:07:12,960 --> 00:07:15,440
can just fill the whole

212
00:07:15,440 --> 00:07:16,400
connection

213
00:07:16,400 --> 00:07:18,639
pool and then deny users will not be

214
00:07:18,639 --> 00:07:21,039
able to connect to the service or to the

215
00:07:21,039 --> 00:07:22,880
system

216
00:07:22,880 --> 00:07:24,639
um another famous example is the pink

217
00:07:24,639 --> 00:07:26,160
flood attack and the paint slot just

218
00:07:26,160 --> 00:07:28,960
utilize what we call the iscmp protocol

219
00:07:28,960 --> 00:07:30,880
and there are two parts to the hashtag

220
00:07:30,880 --> 00:07:32,560
the first of which the attacker will

221
00:07:32,560 --> 00:07:34,720
just send pink packets the very famous

222
00:07:34,720 --> 00:07:37,039
twin packets to the target system and

223
00:07:37,039 --> 00:07:38,800
this actually consumes two things the

224
00:07:38,800 --> 00:07:40,639
first of which is the incoming bandwidth

225
00:07:40,639 --> 00:07:43,280
of the system whenever the

226
00:07:43,280 --> 00:07:45,440
pink packets are sent

227
00:07:45,440 --> 00:07:46,879
to the system

228
00:07:46,879 --> 00:07:48,160
they consume the incoming bandwidth

229
00:07:48,160 --> 00:07:49,759
because we have a huge amount of ping

230
00:07:49,759 --> 00:07:52,560
packets so incoming user requests are

231
00:07:52,560 --> 00:07:56,080
very much delayed because of that

232
00:07:56,080 --> 00:07:58,160
but there is another part to it which is

233
00:07:58,160 --> 00:08:00,960
the outbound request because whenever a

234
00:08:00,960 --> 00:08:03,199
server receives a payment packet it

235
00:08:03,199 --> 00:08:04,560
would have to reply with what they call

236
00:08:04,560 --> 00:08:06,639
an echo paying packet uh this would

237
00:08:06,639 --> 00:08:08,479
result in eventually the server not

238
00:08:08,479 --> 00:08:10,160
being able to

239
00:08:10,160 --> 00:08:11,599
serve the right users because it's

240
00:08:11,599 --> 00:08:14,160
incoming request is being jammed

241
00:08:14,160 --> 00:08:16,639
ping packets and it's outbound request

242
00:08:16,639 --> 00:08:19,120
or it's outbound uh bandwidth is being

243
00:08:19,120 --> 00:08:20,240
jammed with the equipping package

244
00:08:20,240 --> 00:08:22,240
generated as a reply which means that

245
00:08:22,240 --> 00:08:23,680
the online users will not be able to

246
00:08:23,680 --> 00:08:25,680
utilize it so

247
00:08:25,680 --> 00:08:28,160
let's go into a bit of details of what

248
00:08:28,160 --> 00:08:29,840
is application level denial of service

249
00:08:29,840 --> 00:08:32,399
attack from a theoretical point of view

250
00:08:32,399 --> 00:08:33,760
so from a theoretical point of view

251
00:08:33,760 --> 00:08:35,200
according to what some portfolio

252
00:08:35,200 --> 00:08:36,559
application level denial of service

253
00:08:36,559 --> 00:08:38,399
attack is a class of denial of service

254
00:08:38,399 --> 00:08:39,679
attacks that aim to target the

255
00:08:39,679 --> 00:08:41,919
application layer of

256
00:08:41,919 --> 00:08:43,519
the system the application layer here

257
00:08:43,519 --> 00:08:45,440
refers to

258
00:08:45,440 --> 00:08:47,200
whichever vulnerabilities that can be

259
00:08:47,200 --> 00:08:48,640
found in the application layer or the

260
00:08:48,640 --> 00:08:50,320
application itself that causes the line

261
00:08:50,320 --> 00:08:51,600
of service attack it's not really to the

262
00:08:51,600 --> 00:08:53,600
network layer like the high volume

263
00:08:53,600 --> 00:08:55,360
attacks we just explained it's related

264
00:08:55,360 --> 00:08:57,360
to the application and the application

265
00:08:57,360 --> 00:08:59,120
level vulnerability

266
00:08:59,120 --> 00:09:00,720
and the very famous example of that is

267
00:09:00,720 --> 00:09:02,640
what we call the resource locking on

268
00:09:02,640 --> 00:09:04,399
failure what do we mean by that so

269
00:09:04,399 --> 00:09:06,080
imagine that you are using the server to

270
00:09:06,080 --> 00:09:08,080
do some computations and then for

271
00:09:08,080 --> 00:09:09,440
instance any failure happen because

272
00:09:09,440 --> 00:09:11,440
you're divided by zero for instance so

273
00:09:11,440 --> 00:09:12,800
what happen is

274
00:09:12,800 --> 00:09:14,959
the system will go into a failure state

275
00:09:14,959 --> 00:09:17,440
and ideally the system will release all

276
00:09:17,440 --> 00:09:19,200
its resources used for the computations

277
00:09:19,200 --> 00:09:20,800
you were just doing so that other users

278
00:09:20,800 --> 00:09:23,440
can do it but some systems mistakenly

279
00:09:23,440 --> 00:09:25,519
will just lock the resources on failure

280
00:09:25,519 --> 00:09:27,519
so once we fit into a failure this part

281
00:09:27,519 --> 00:09:29,440
of the system or this part of the server

282
00:09:29,440 --> 00:09:31,040
cannot be utilized by other users and

283
00:09:31,040 --> 00:09:32,959
cannot be utilized by you so if you are

284
00:09:32,959 --> 00:09:35,519
a malicious person you can think okay

285
00:09:35,519 --> 00:09:37,040
what if we call the huge number of

286
00:09:37,040 --> 00:09:40,080
failures so that all the server

287
00:09:40,080 --> 00:09:41,920
capabilities will be locked or all the

288
00:09:41,920 --> 00:09:43,680
server resources will be locked on

289
00:09:43,680 --> 00:09:45,440
multiple failures and the reliant users

290
00:09:45,440 --> 00:09:46,720
will not have

291
00:09:46,720 --> 00:09:49,200
any part of the server list to do their

292
00:09:49,200 --> 00:09:50,880
computations and so on

293
00:09:50,880 --> 00:09:52,800
so this is a very famous attack in which

294
00:09:52,800 --> 00:09:54,880
the application level is the problem

295
00:09:54,880 --> 00:09:55,920
here because the application level

296
00:09:55,920 --> 00:09:57,120
should release

297
00:09:57,120 --> 00:10:00,160
the resources

298
00:10:00,480 --> 00:10:01,360
so

299
00:10:01,360 --> 00:10:03,279
moving further we have here a case study

300
00:10:03,279 --> 00:10:04,880
on what we call the second order denial

301
00:10:04,880 --> 00:10:06,560
of service attacks

302
00:10:06,560 --> 00:10:08,640
so before we

303
00:10:08,640 --> 00:10:10,160
talk about the second order of service

304
00:10:10,160 --> 00:10:12,160
attacks let's just remember what is a

305
00:10:12,160 --> 00:10:14,240
second order uh cross-site scripting is

306
00:10:14,240 --> 00:10:15,760
so the second order crosstalk scripting

307
00:10:15,760 --> 00:10:17,040
is a class of crosstalk scripting

308
00:10:17,040 --> 00:10:18,959
vulnerabilities where the payload of the

309
00:10:18,959 --> 00:10:20,240
crossfire scripting is stored in the

310
00:10:20,240 --> 00:10:22,240
database and then it's later rendered

311
00:10:22,240 --> 00:10:24,560
somewhere in the application and

312
00:10:24,560 --> 00:10:25,920
boom the

313
00:10:25,920 --> 00:10:27,519
payload fires

314
00:10:27,519 --> 00:10:28,959
second order the universal attacks are

315
00:10:28,959 --> 00:10:31,200
no different the amount of data that

316
00:10:31,200 --> 00:10:32,880
will cause or the

317
00:10:32,880 --> 00:10:34,320
thing that will cause the demand service

318
00:10:34,320 --> 00:10:36,640
attack is stored in the database

319
00:10:36,640 --> 00:10:38,079
and that's why we call it second order

320
00:10:38,079 --> 00:10:39,440
because the data is stored in the

321
00:10:39,440 --> 00:10:41,360
database and later when we do some

322
00:10:41,360 --> 00:10:43,200
action it triggers the denial of service

323
00:10:43,200 --> 00:10:45,440
attacks so there are two factors for

324
00:10:45,440 --> 00:10:47,200
this attack the first of all is the

325
00:10:47,200 --> 00:10:48,720
missing laser limit on data creation

326
00:10:48,720 --> 00:10:50,560
imagine having something like uh paste

327
00:10:50,560 --> 00:10:52,079
bin and then

328
00:10:52,079 --> 00:10:53,760
you found out that there is no limit to

329
00:10:53,760 --> 00:10:55,519
creating number of pages so you just

330
00:10:55,519 --> 00:10:57,040
created the vote and created 10 million

331
00:10:57,040 --> 00:11:00,240
pages for instance um okay so now you

332
00:11:00,240 --> 00:11:01,760
the first part of this attack is that

333
00:11:01,760 --> 00:11:03,120
you are jamming

334
00:11:03,120 --> 00:11:05,279
um

335
00:11:05,279 --> 00:11:07,680
jamming the server or the database with

336
00:11:07,680 --> 00:11:09,440
unneeded data with garbage data because

337
00:11:09,440 --> 00:11:11,120
nobody is utilizing it but this is not

338
00:11:11,120 --> 00:11:13,279
the worst part of it the worst part is

339
00:11:13,279 --> 00:11:15,360
then you go to your account and then

340
00:11:15,360 --> 00:11:17,360
attempt to view your paste what happens

341
00:11:17,360 --> 00:11:18,800
if the server will go to the database

342
00:11:18,800 --> 00:11:21,200
ask him what is the taste of this user

343
00:11:21,200 --> 00:11:22,720
and it will tell you okay we have 10

344
00:11:22,720 --> 00:11:24,720
million pastes and then the server

345
00:11:24,720 --> 00:11:26,560
attempts to retrieve them if the server

346
00:11:26,560 --> 00:11:28,560
doesn't put an upper bound like for

347
00:11:28,560 --> 00:11:29,920
instance i will just receive the first

348
00:11:29,920 --> 00:11:31,680
100 space what will happen is that the

349
00:11:31,680 --> 00:11:33,360
server will be

350
00:11:33,360 --> 00:11:36,079
hugely consumed to retrieve 10 million

351
00:11:36,079 --> 00:11:38,160
pages imagine this number being received

352
00:11:38,160 --> 00:11:39,839
from the database the time

353
00:11:39,839 --> 00:11:42,640
is huge and as the number increases the

354
00:11:42,640 --> 00:11:43,839
time increase that's what we mean by

355
00:11:43,839 --> 00:11:46,560
linear time as the number of data

356
00:11:46,560 --> 00:11:48,560
or the size of data will increase the

357
00:11:48,560 --> 00:11:51,360
operation will cost more time eventually

358
00:11:51,360 --> 00:11:52,720
rendering the system in the amount of

359
00:11:52,720 --> 00:11:54,560
service state because the service would

360
00:11:54,560 --> 00:11:57,360
be very busy doing this bogus operation

361
00:11:57,360 --> 00:12:00,480
of uh getting back our data

362
00:12:00,480 --> 00:12:02,880
um so let's see some case studies one of

363
00:12:02,880 --> 00:12:04,320
them focus on

364
00:12:04,320 --> 00:12:06,320
second order nine of seven attacks both

365
00:12:06,320 --> 00:12:08,240
are on snapchat so the first is a zero

366
00:12:08,240 --> 00:12:09,839
click second order denial of service

367
00:12:09,839 --> 00:12:12,160
attack on the snapshot developer portal

368
00:12:12,160 --> 00:12:14,160
and the second will be fooling snapchat

369
00:12:14,160 --> 00:12:16,079
api to achieve what we call a targeted

370
00:12:16,079 --> 00:12:17,600
design service attack

371
00:12:17,600 --> 00:12:18,399
so

372
00:12:18,399 --> 00:12:21,600
let's dig deeper so snapchat has

373
00:12:21,600 --> 00:12:23,600
what we call a developer portal in which

374
00:12:23,600 --> 00:12:25,839
you have organizations and then you can

375
00:12:25,839 --> 00:12:27,200
invite developers actually you can add

376
00:12:27,200 --> 00:12:28,639
developers without any invitations which

377
00:12:28,639 --> 00:12:30,560
involves a problem you just type the

378
00:12:30,560 --> 00:12:32,000
developer email and they are added

379
00:12:32,000 --> 00:12:35,120
automatically to your organization

380
00:12:35,120 --> 00:12:36,959
the idea here is you can create a number

381
00:12:36,959 --> 00:12:38,560
of applications so there is something

382
00:12:38,560 --> 00:12:40,160
that's called applications inside the

383
00:12:40,160 --> 00:12:42,160
organization you can create any number

384
00:12:42,160 --> 00:12:43,839
so i thought okay what about creating

385
00:12:43,839 --> 00:12:45,839
ten thousand applications once i created

386
00:12:45,839 --> 00:12:47,600
ten thousand applications my account got

387
00:12:47,600 --> 00:12:49,360
blocked i couldn't access the account

388
00:12:49,360 --> 00:12:51,680
whenever i exit i got like 500 internal

389
00:12:51,680 --> 00:12:53,279
server error and so on

390
00:12:53,279 --> 00:12:55,040
so i thought okay now i got a

391
00:12:55,040 --> 00:12:56,959
self-deniers attack congratulations what

392
00:12:56,959 --> 00:12:58,639
can i do with that and then i thought

393
00:12:58,639 --> 00:13:00,399
okay but i can add others to my

394
00:13:00,399 --> 00:13:01,600
organization

395
00:13:01,600 --> 00:13:02,880
now the thing is

396
00:13:02,880 --> 00:13:05,519
you create a huge amount of applications

397
00:13:05,519 --> 00:13:07,120
anybody in your organization who will

398
00:13:07,120 --> 00:13:09,040
attempt to log into their account

399
00:13:09,040 --> 00:13:10,639
the app the server will automatically

400
00:13:10,639 --> 00:13:11,920
try to retrieve this ten thousand

401
00:13:11,920 --> 00:13:13,760
application so their accounts will not

402
00:13:13,760 --> 00:13:16,560
be used it's not an attack on your

403
00:13:16,560 --> 00:13:18,000
developers it's a attack on any

404
00:13:18,000 --> 00:13:20,160
developer just by knowing their mail

405
00:13:20,160 --> 00:13:21,279
even if they are part of other

406
00:13:21,279 --> 00:13:23,040
organizations you just add them whenever

407
00:13:23,040 --> 00:13:24,959
they log in automatically this data will

408
00:13:24,959 --> 00:13:27,040
be sectioned a timeout will occur

409
00:13:27,040 --> 00:13:28,560
because snapshot didn't allow you to

410
00:13:28,560 --> 00:13:30,560
fetch 10 000 records so the 10 000

411
00:13:30,560 --> 00:13:32,399
record will take for example 3 minutes

412
00:13:32,399 --> 00:13:34,560
the only time out after 15 seconds so

413
00:13:34,560 --> 00:13:36,880
they will give you internal server error

414
00:13:36,880 --> 00:13:38,079
because

415
00:13:38,079 --> 00:13:40,160
a timeout will occur so whenever a

416
00:13:40,160 --> 00:13:42,880
developer try to log into their account

417
00:13:42,880 --> 00:13:45,120
they will not be able to do so which

418
00:13:45,120 --> 00:13:46,639
means that they are denied from

419
00:13:46,639 --> 00:13:48,560
accessing the server and they are logged

420
00:13:48,560 --> 00:13:49,760
out of their account or their account

421
00:13:49,760 --> 00:13:51,360
are not usable anymore

422
00:13:51,360 --> 00:13:53,920
um let's move further into the api

423
00:13:53,920 --> 00:13:56,079
fooling part and also snapchat had what

424
00:13:56,079 --> 00:13:58,240
we call a business account this account

425
00:13:58,240 --> 00:13:59,680
is linked with the developer account so

426
00:13:59,680 --> 00:14:01,199
whenever somebody is added as a

427
00:14:01,199 --> 00:14:03,440
developer they are as automatically as

428
00:14:03,440 --> 00:14:05,040
um

429
00:14:05,040 --> 00:14:06,639
as a part of the business

430
00:14:06,639 --> 00:14:08,560
so the idea here is that the business

431
00:14:08,560 --> 00:14:11,199
account was some kind clever they had

432
00:14:11,199 --> 00:14:12,880
invitation so people will not be added

433
00:14:12,880 --> 00:14:14,560
automatically

434
00:14:14,560 --> 00:14:15,920
but just keep in mind that whenever you

435
00:14:15,920 --> 00:14:17,600
add somebody to the developers account

436
00:14:17,600 --> 00:14:19,199
they're automatically added

437
00:14:19,199 --> 00:14:21,040
um to your business account this

438
00:14:21,040 --> 00:14:23,440
information will be used later okay so

439
00:14:23,440 --> 00:14:24,959
you just send somebody invitation and

440
00:14:24,959 --> 00:14:27,360
then i intercepted the traffic using

441
00:14:27,360 --> 00:14:30,399
proxy and found out that the

442
00:14:30,399 --> 00:14:32,160
request after sending the invitation is

443
00:14:32,160 --> 00:14:34,320
assigning a role to the person so the

444
00:14:34,320 --> 00:14:36,320
person is assigned a developer and an

445
00:14:36,320 --> 00:14:38,079
organization admin and so on so i

446
00:14:38,079 --> 00:14:39,760
thought what will happen if somebody's a

447
00:14:39,760 --> 00:14:41,920
part of an organization and they have no

448
00:14:41,920 --> 00:14:43,600
role in it so i just dropped the request

449
00:14:43,600 --> 00:14:44,560
now you

450
00:14:44,560 --> 00:14:46,959
i sent an invitation that person has no

451
00:14:46,959 --> 00:14:49,440
role and then i went to my test account

452
00:14:49,440 --> 00:14:51,120
and just accepted the invitation what

453
00:14:51,120 --> 00:14:52,959
happened is

454
00:14:52,959 --> 00:14:55,519
boom the account just blew away

455
00:14:55,519 --> 00:14:58,399
it was got locked what happened here the

456
00:14:58,399 --> 00:15:01,279
api looked at it and say

457
00:15:01,279 --> 00:15:03,040
are you a part of organization x and the

458
00:15:03,040 --> 00:15:04,320
answer was yes i'm a part of the

459
00:15:04,320 --> 00:15:06,399
organization x you have any roles there

460
00:15:06,399 --> 00:15:08,639
and the answer is no but how you are a

461
00:15:08,639 --> 00:15:10,320
part of an organization and you have no

462
00:15:10,320 --> 00:15:12,560
role something might be wrong so i will

463
00:15:12,560 --> 00:15:14,079
just close the world account this is not

464
00:15:14,079 --> 00:15:16,560
the normal api behavior but it was a bug

465
00:15:16,560 --> 00:15:18,240
in the api itself instead of just

466
00:15:18,240 --> 00:15:19,760
denying the user from accessing my

467
00:15:19,760 --> 00:15:21,519
organization it denied it from acting

468
00:15:21,519 --> 00:15:23,120
any organization whenever you just log

469
00:15:23,120 --> 00:15:25,040
in okay you are unauthorized but i

470
00:15:25,040 --> 00:15:26,320
haven't done anything but you are

471
00:15:26,320 --> 00:15:29,440
unauthorized why because we manipulated

472
00:15:29,440 --> 00:15:32,079
the api somehow to target people

473
00:15:32,079 --> 00:15:34,000
but then you might say okay the user has

474
00:15:34,000 --> 00:15:35,440
to accept an invitation this is not a

475
00:15:35,440 --> 00:15:38,160
zero click attack but i will tell you i

476
00:15:38,160 --> 00:15:39,759
just said that whenever you add somebody

477
00:15:39,759 --> 00:15:42,240
to the developer um account they are a

478
00:15:42,240 --> 00:15:44,079
business account so you just go to the

479
00:15:44,079 --> 00:15:45,120
developer account that has no

480
00:15:45,120 --> 00:15:47,360
verification no invitations add their

481
00:15:47,360 --> 00:15:49,279
email they are added automatically with

482
00:15:49,279 --> 00:15:50,320
no role

483
00:15:50,320 --> 00:15:52,000
and boom whenever they access their

484
00:15:52,000 --> 00:15:54,160
business account they are completely

485
00:15:54,160 --> 00:15:56,880
denied from accessing it

486
00:15:56,880 --> 00:15:59,120
which is an application level gravity

487
00:15:59,120 --> 00:16:01,360
because it's an api problem the api here

488
00:16:01,360 --> 00:16:03,519
derived the user from accessing his

489
00:16:03,519 --> 00:16:06,720
account and it's actually the kind of

490
00:16:06,720 --> 00:16:08,160
denial of service attack that you might

491
00:16:08,160 --> 00:16:10,399
expect to find in a huge company like

492
00:16:10,399 --> 00:16:12,480
snapchat because

493
00:16:12,480 --> 00:16:14,000
there is no chance that you will have a

494
00:16:14,000 --> 00:16:16,160
computational power that can actually

495
00:16:16,160 --> 00:16:17,839
bring the amount of service that

496
00:16:17,839 --> 00:16:20,399
snapchat has down so usually this is the

497
00:16:20,399 --> 00:16:22,959
kind of value that you should focus on

498
00:16:22,959 --> 00:16:25,519
um so sharing some final thoughts about

499
00:16:25,519 --> 00:16:27,120
how to find and exploit level uh

500
00:16:27,120 --> 00:16:28,240
application level united service

501
00:16:28,240 --> 00:16:30,399
vulnerabilities um usually i would

502
00:16:30,399 --> 00:16:31,600
suggest that you look at previous

503
00:16:31,600 --> 00:16:33,040
reports on something like hacker one and

504
00:16:33,040 --> 00:16:34,959
so on um

505
00:16:34,959 --> 00:16:36,560
dig deeper into an application

506
00:16:36,560 --> 00:16:38,399
understand this further because usually

507
00:16:38,399 --> 00:16:39,759
they are uh

508
00:16:39,759 --> 00:16:41,600
logical probabilities that arrive to

509
00:16:41,600 --> 00:16:43,519
business

510
00:16:43,519 --> 00:16:45,600
develop service attacks

511
00:16:45,600 --> 00:16:47,759
focus on things like uh second order

512
00:16:47,759 --> 00:16:49,759
service attacks and other known

513
00:16:49,759 --> 00:16:51,199
application level because they usually

514
00:16:51,199 --> 00:16:53,279
occur now and then so just like you are

515
00:16:53,279 --> 00:16:54,720
looking for second-order cross-site

516
00:16:54,720 --> 00:16:57,040
scripting search for second-order

517
00:16:57,040 --> 00:16:59,120
service attacks

518
00:16:59,120 --> 00:17:00,959
uh the same way

519
00:17:00,959 --> 00:17:02,880
so about my future work and next i'm

520
00:17:02,880 --> 00:17:05,199
currently looking into attacks

521
00:17:05,199 --> 00:17:06,400
regarding the line of service from

522
00:17:06,400 --> 00:17:07,919
microservices which is an emerging

523
00:17:07,919 --> 00:17:09,919
architecture

524
00:17:09,919 --> 00:17:12,000
and trying to do some emulation and

525
00:17:12,000 --> 00:17:14,480
simulation to automate those attacks and

526
00:17:14,480 --> 00:17:16,640
to understand their behavior and so on

527
00:17:16,640 --> 00:17:18,559
so this is what i'm doing right now

528
00:17:18,559 --> 00:17:20,720
finally i would like to thank a chambox

529
00:17:20,720 --> 00:17:24,240
he was my mentor as my very first top

530
00:17:24,240 --> 00:17:26,319
uh without him i will be here today

531
00:17:26,319 --> 00:17:28,319
i would also like to thank bien seymour

532
00:17:28,319 --> 00:17:30,320
at ligo and the tear matrix those people

533
00:17:30,320 --> 00:17:32,320
mentored me at some part in my life and

534
00:17:32,320 --> 00:17:33,679
i'm still learning from them so i would

535
00:17:33,679 --> 00:17:35,280
urge you to follow them on twitter they

536
00:17:35,280 --> 00:17:36,799
usually share very useful stuff

537
00:17:36,799 --> 00:17:38,320
regarding security that you will

538
00:17:38,320 --> 00:17:41,200
definitely benefit from

539
00:17:41,200 --> 00:17:42,720
finally i would like to thank you all

540
00:17:42,720 --> 00:17:44,559
for attending and i would be happy to

541
00:17:44,559 --> 00:17:47,200
address any question that you might have

542
00:17:47,200 --> 00:17:50,520
thank you everybody

