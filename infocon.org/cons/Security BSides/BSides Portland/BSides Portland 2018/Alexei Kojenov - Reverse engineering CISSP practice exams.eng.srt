1
00:00:17,030 --> 00:00:19,660
thank you for the introduction I hope

2
00:00:19,340 --> 00:00:22,710
you

3
00:00:19,660 --> 00:00:25,509
hear me and see the screen awesome

4
00:00:22,710 --> 00:00:28,720
welcome to today's talk on reverse

5
00:00:25,510 --> 00:00:31,509
engineer in CSP practice exams and this

6
00:00:28,720 --> 00:00:37,530
is not a talk about cheating CISSP exam

7
00:00:31,509 --> 00:00:40,870
so I warn you I have a over a decade of

8
00:00:37,530 --> 00:00:43,150
programming experience writing code and

9
00:00:40,870 --> 00:00:44,680
then I have several years of application

10
00:00:43,150 --> 00:00:47,470
security experience mostly breaking code

11
00:00:44,680 --> 00:00:50,559
but this is talking it's not about me

12
00:00:47,470 --> 00:00:53,140
either if you don't know what cissp is

13
00:00:50,559 --> 00:00:56,019
it's a very popular security

14
00:00:53,140 --> 00:00:59,500
certification I decided to get it some

15
00:00:56,020 --> 00:01:02,469
time ago and when I took an exam last

16
00:00:59,500 --> 00:01:04,209
year I was presented with 250

17
00:01:02,469 --> 00:01:06,070
multiple-choice questions and they gave

18
00:01:04,209 --> 00:01:06,929
me up to 6 hours to finish it so it's

19
00:01:06,070 --> 00:01:09,130
pretty big

20
00:01:06,930 --> 00:01:12,310
this year they changed the format a

21
00:01:09,130 --> 00:01:14,830
little bit it's now up to 150 questions

22
00:01:12,310 --> 00:01:16,509
up to 3 hours basically computer decides

23
00:01:14,830 --> 00:01:19,090
how many questions to ask

24
00:01:16,509 --> 00:01:22,960
depending on how you perform so of

25
00:01:19,090 --> 00:01:26,259
course as with any kind of studies you

26
00:01:22,960 --> 00:01:29,380
want to practice right and several

27
00:01:26,259 --> 00:01:31,929
resources were available to me when when

28
00:01:29,380 --> 00:01:35,399
I did that like this official practice

29
00:01:31,929 --> 00:01:38,459
test book or this unofficial third-party

30
00:01:35,399 --> 00:01:42,940
practice exams by Sean Harris and also I

31
00:01:38,459 --> 00:01:45,580
downloaded some software that that you

32
00:01:42,940 --> 00:01:48,399
can run on computer and kind of just

33
00:01:45,580 --> 00:01:51,580
emulate the exam and we're going to talk

34
00:01:48,399 --> 00:01:54,340
about this particular software today so

35
00:01:51,580 --> 00:01:56,349
when I first ran it on my computer and I

36
00:01:54,340 --> 00:01:59,739
had a Windows machine with a 4k monitor

37
00:01:56,349 --> 00:02:01,989
I saw this this is the like the first

38
00:01:59,739 --> 00:02:03,520
dialog window and as you can see it

39
00:02:01,989 --> 00:02:06,220
looks pretty bad

40
00:02:03,520 --> 00:02:09,568
the content is cropped there are no

41
00:02:06,220 --> 00:02:13,000
buttons I mean it's completely unusable

42
00:02:09,568 --> 00:02:17,349
so I had to downgrade my resolution just

43
00:02:13,000 --> 00:02:20,620
to use it and let me switch to my

44
00:02:17,349 --> 00:02:22,988
Windows virtual machine just to show you

45
00:02:20,620 --> 00:02:26,530
how the software looks oh how is

46
00:02:22,989 --> 00:02:28,819
supposed to look so you start it and it

47
00:02:26,530 --> 00:02:32,239
has 1011 I don't know

48
00:02:28,819 --> 00:02:36,290
why 11 but it has over a thousand

49
00:02:32,239 --> 00:02:38,150
thousand questions and you can click on

50
00:02:36,290 --> 00:02:41,510
the bottom like let's let's let's try an

51
00:02:38,150 --> 00:02:45,500
exam and it picks 250 random questions

52
00:02:41,510 --> 00:02:48,260
out of that 1011 started the exam and

53
00:02:45,500 --> 00:02:53,180
you answer these questions then you

54
00:02:48,260 --> 00:02:55,819
grade it yes and you fail it right and

55
00:02:53,180 --> 00:02:58,129
you and you want to do it again so let's

56
00:02:55,819 --> 00:03:01,458
let's do another one and it picks 250

57
00:02:58,129 --> 00:03:04,040
questions randomly again the problem is

58
00:03:01,459 --> 00:03:07,219
it picks these two these questions out

59
00:03:04,040 --> 00:03:09,679
of the same set so you did 250 first and

60
00:03:07,219 --> 00:03:12,530
then you try another set and it picks

61
00:03:09,680 --> 00:03:16,909
out of the same and so you see repeating

62
00:03:12,530 --> 00:03:18,439
questions like over and over again and I

63
00:03:16,909 --> 00:03:19,698
thought well this is not this is not

64
00:03:18,439 --> 00:03:21,638
good this is not something that I'm

65
00:03:19,699 --> 00:03:26,150
interested in I want to hit all these

66
00:03:21,639 --> 00:03:36,590
all these 1011 questions and try to

67
00:03:26,150 --> 00:03:40,189
answer them okay so I thought can I fix

68
00:03:36,590 --> 00:03:43,669
it so can I can I get those questions

69
00:03:40,189 --> 00:03:47,358
somehow in a format that I like not that

70
00:03:43,669 --> 00:03:49,819
what's given to me which means open it

71
00:03:47,359 --> 00:03:52,009
crack opening this program and trying to

72
00:03:49,819 --> 00:03:54,649
get to the data and before you ask the

73
00:03:52,009 --> 00:03:59,509
software license did not prohibit

74
00:03:54,650 --> 00:04:02,109
reverse engineering and that's what

75
00:03:59,509 --> 00:04:02,108
we're gonna do now

76
00:04:04,580 --> 00:04:13,790
okay so let me get out of here let's

77
00:04:12,260 --> 00:04:16,159
take a look where this program is

78
00:04:13,790 --> 00:04:18,019
located first so it's in this directory

79
00:04:16,160 --> 00:04:20,120
and I can press this button and it takes

80
00:04:18,019 --> 00:04:22,550
me right there and what I see is I see

81
00:04:20,120 --> 00:04:25,820
an executable I see a Java directory and

82
00:04:22,550 --> 00:04:29,000
this directory just has the standard JRE

83
00:04:25,820 --> 00:04:31,310
nothing interesting here is Java Runtime

84
00:04:29,000 --> 00:04:35,630
environment and I also also have a data

85
00:04:31,310 --> 00:04:38,210
directory with just a couple of files in

86
00:04:35,630 --> 00:04:42,950
it so that's probably where the data is

87
00:04:38,210 --> 00:04:46,880
right now windows is not my favorite

88
00:04:42,950 --> 00:04:50,030
operating system so I'm more comfortable

89
00:04:46,880 --> 00:04:52,159
in other environments so I just copied

90
00:04:50,030 --> 00:04:55,099
this whole stuff this whole thing to

91
00:04:52,160 --> 00:04:57,500
Linux so here on my Linux machine I have

92
00:04:55,100 --> 00:05:01,250
this executable Java directory data

93
00:04:57,500 --> 00:05:03,950
directory and I want to take a look at

94
00:05:01,250 --> 00:05:06,700
stuff and see what I have so let's go to

95
00:05:03,950 --> 00:05:06,700
the data directory

96
00:05:11,240 --> 00:05:16,860
and I have a couple of files there right

97
00:05:14,360 --> 00:05:19,860
so the first thing to do is to run the

98
00:05:16,860 --> 00:05:24,360
Linux file command which analyzes the

99
00:05:19,860 --> 00:05:26,250
file signature if you will and tells you

100
00:05:24,360 --> 00:05:27,479
what the phallus so I have a properties

101
00:05:26,250 --> 00:05:29,699
file which is expectedly

102
00:05:27,479 --> 00:05:33,530
ASCII text and I have this other file

103
00:05:29,699 --> 00:05:36,810
with dot Ser extension and this file is

104
00:05:33,530 --> 00:05:39,419
Java serialization data and it's pretty

105
00:05:36,810 --> 00:05:41,389
large it's almost 800 K so that's

106
00:05:39,419 --> 00:05:43,830
probably where all these questions are

107
00:05:41,389 --> 00:05:45,870
so that's my that's that's gonna be my

108
00:05:43,830 --> 00:05:49,770
target but how do I get there how do I

109
00:05:45,870 --> 00:05:57,000
read this is binary format the civilized

110
00:05:49,770 --> 00:05:58,948
Java data is not very it's not actually

111
00:05:57,000 --> 00:06:02,660
human readable I mean you could kind of

112
00:05:58,949 --> 00:06:09,330
see the text here but it's not nice

113
00:06:02,660 --> 00:06:14,400
there is a utility called JD serialize

114
00:06:09,330 --> 00:06:19,710
and you can find it online and what it

115
00:06:14,400 --> 00:06:23,340
does it loads the data the serialize

116
00:06:19,710 --> 00:06:25,440
java data and prints it out in a in a

117
00:06:23,340 --> 00:06:30,109
more like in human readable form

118
00:06:25,440 --> 00:06:32,639
so first what it does it it prints the

119
00:06:30,110 --> 00:06:33,449
declarations of the classes that are

120
00:06:32,639 --> 00:06:35,669
serialized

121
00:06:33,449 --> 00:06:37,860
there are in that in that object so

122
00:06:35,669 --> 00:06:39,389
here's an interesting one question

123
00:06:37,860 --> 00:06:42,539
javabean that's probably the one that I

124
00:06:39,389 --> 00:06:45,210
am looking for with question text and

125
00:06:42,539 --> 00:06:47,909
answers and choices text and so on and

126
00:06:45,210 --> 00:06:50,638
there's a scroll down here are some more

127
00:06:47,909 --> 00:06:56,150
declarations the scroll down I see the

128
00:06:50,639 --> 00:06:59,430
actual practice practice questions data

129
00:06:56,150 --> 00:07:01,198
here's the question for example when is

130
00:06:59,430 --> 00:07:03,610
the emergence state actually over for a

131
00:07:01,199 --> 00:07:04,669
company here are the possible answers

132
00:07:03,610 --> 00:07:07,229
[Music]

133
00:07:04,669 --> 00:07:12,750
and here is the explanation that the

134
00:07:07,229 --> 00:07:16,080
answer B is correct so this is this is

135
00:07:12,750 --> 00:07:18,630
kind of okay but it's still not very I

136
00:07:16,080 --> 00:07:21,570
mean it has a lot of junk here so if I

137
00:07:18,630 --> 00:07:23,780
if I practice my sis be taxed the test

138
00:07:21,570 --> 00:07:27,750
it's not something that I want to

139
00:07:23,780 --> 00:07:29,460
so I have two choices now I can maybe

140
00:07:27,750 --> 00:07:33,810
write some kind of Python script to

141
00:07:29,460 --> 00:07:37,109
parse this this is pretty much tax easy

142
00:07:33,810 --> 00:07:40,020
to parse maybe and then output it in

143
00:07:37,110 --> 00:07:44,250
format that I like and this the second

144
00:07:40,020 --> 00:07:47,010
option is to just crack open this

145
00:07:44,250 --> 00:07:49,590
program this tester program because it's

146
00:07:47,010 --> 00:07:53,510
written in Java and it already has all

147
00:07:49,590 --> 00:07:55,859
the code to read the serialized data

148
00:07:53,510 --> 00:08:00,510
into some kind of internal structure and

149
00:07:55,860 --> 00:08:02,640
present it in that GUI so I decided well

150
00:08:00,510 --> 00:08:04,530
I'm not a developer anymore I don't want

151
00:08:02,640 --> 00:08:07,380
to write a whole new program I'm a

152
00:08:04,530 --> 00:08:11,520
hacker now right so let's let's hack

153
00:08:07,380 --> 00:08:15,000
into that program but first of all where

154
00:08:11,520 --> 00:08:18,750
is the Java code we don't have any jar

155
00:08:15,000 --> 00:08:20,550
file here we don't have a like normally

156
00:08:18,750 --> 00:08:25,320
you see a jar right we don't have a jar

157
00:08:20,550 --> 00:08:28,350
here we have this dot exe file so I

158
00:08:25,320 --> 00:08:31,800
guess the my compiled Java code is

159
00:08:28,350 --> 00:08:33,839
somewhere inside that file so I thought

160
00:08:31,800 --> 00:08:37,830
okay it's probably some kind of like

161
00:08:33,839 --> 00:08:41,659
self extracting executable that that

162
00:08:37,830 --> 00:08:45,900
unpacks on the fly and feeds the

163
00:08:41,659 --> 00:08:53,040
compulsion classes to JVM and I had this

164
00:08:45,900 --> 00:08:54,990
crazy idea can I can I just do this can

165
00:08:53,040 --> 00:08:56,550
I just try to unzip it with a standard

166
00:08:54,990 --> 00:08:59,730
unzip utility even though it doesn't

167
00:08:56,550 --> 00:09:02,579
make much sense this executable and to

168
00:08:59,730 --> 00:09:08,970
my surprise when I hit enter I saw this

169
00:09:02,580 --> 00:09:12,480
Wow pretty awesome here all these

170
00:09:08,970 --> 00:09:14,910
classes right and just let me show you

171
00:09:12,480 --> 00:09:17,580
so it did complain that I had some extra

172
00:09:14,910 --> 00:09:23,550
bytes at the beginning of the file but

173
00:09:17,580 --> 00:09:30,839
then I decided to proceed anyway good ok

174
00:09:23,550 --> 00:09:33,839
so let me just can you maybe I should

175
00:09:30,839 --> 00:09:41,680
move this up a little bit

176
00:09:33,840 --> 00:09:44,380
this is better okay so I'm creating a

177
00:09:41,680 --> 00:09:55,060
directory and I'm going to go into this

178
00:09:44,380 --> 00:09:57,550
directory and unzip everything and this

179
00:09:55,060 --> 00:09:59,439
is what I have now so I have some

180
00:09:57,550 --> 00:10:01,270
compulsion code in this directory

181
00:09:59,440 --> 00:10:03,220
and some other stuff that I'm not really

182
00:10:01,270 --> 00:10:07,590
interested in now where is the entry

183
00:10:03,220 --> 00:10:12,850
point of the program so I thought well

184
00:10:07,590 --> 00:10:17,590
let me just list all the files in the

185
00:10:12,850 --> 00:10:21,010
 directory and search for I think

186
00:10:17,590 --> 00:10:22,870
that the entry point will be some kind

187
00:10:21,010 --> 00:10:26,680
of main class would have main in the

188
00:10:22,870 --> 00:10:31,290
name and yeah there's a few of them and

189
00:10:26,680 --> 00:10:31,290
this looks like maybe a good candidate

190
00:10:33,630 --> 00:10:44,860
now the question is can I just give it

191
00:10:36,570 --> 00:10:48,850
to my own JVM village run let's see and

192
00:10:44,860 --> 00:10:50,950
it did there was an issue though it come

193
00:10:48,850 --> 00:10:51,960
in said that data directory could not be

194
00:10:50,950 --> 00:10:54,400
found

195
00:10:51,960 --> 00:10:58,240
okay remember the data directory where

196
00:10:54,400 --> 00:11:02,400
we had that those two files it's

197
00:10:58,240 --> 00:11:02,400
actually one level above it's right here

198
00:11:03,330 --> 00:11:11,800
so I'll go ahead and create can type a

199
00:11:09,390 --> 00:11:13,530
symbolic link so I have the data

200
00:11:11,800 --> 00:11:15,939
directory in my current folder

201
00:11:13,530 --> 00:11:24,930
I'm not directory symbolic link to

202
00:11:15,940 --> 00:11:29,080
directory and let me run it again Wow so

203
00:11:24,930 --> 00:11:32,199
what did we just do we reported Windows

204
00:11:29,080 --> 00:11:33,850
program to Linux in two minutes or five

205
00:11:32,200 --> 00:11:36,920
minutes

206
00:11:33,850 --> 00:11:38,630
yeah thanks

207
00:11:36,920 --> 00:11:40,219
of course it's Java code so it's

208
00:11:38,630 --> 00:11:44,779
supposed to run anywhere even on your

209
00:11:40,220 --> 00:11:48,680
phone right okay cool so it runs I hear

210
00:11:44,779 --> 00:11:53,959
I have everything that I need now to to

211
00:11:48,680 --> 00:11:55,399
decompile it don't need it I'm still

212
00:11:53,959 --> 00:12:01,729
trying to get those to those questions

213
00:11:55,399 --> 00:12:06,680
correct so when it comes to decompile in

214
00:12:01,730 --> 00:12:10,279
java code my go-to tool is JD short for

215
00:12:06,680 --> 00:12:15,229
java decompiler variables or JD GUI they

216
00:12:10,279 --> 00:12:18,980
have a really nice GUI and it's written

217
00:12:15,230 --> 00:12:21,980
in Java of course it supports several

218
00:12:18,980 --> 00:12:23,870
file formats you can open individual

219
00:12:21,980 --> 00:12:26,089
classes I have maybe a hundred of them

220
00:12:23,870 --> 00:12:27,320
on the disk right now but I I don't want

221
00:12:26,089 --> 00:12:29,120
to open their each one of them

222
00:12:27,320 --> 00:12:30,880
individually I won't like the whole

223
00:12:29,120 --> 00:12:34,040
package but I don't have a jar file

224
00:12:30,880 --> 00:12:37,189
right I have that executable and I don't

225
00:12:34,040 --> 00:12:40,819
see that Exe here but there's a it

226
00:12:37,190 --> 00:12:44,680
supports a zip file so let me just zip

227
00:12:40,820 --> 00:12:44,680
whatever I have on the desk

228
00:12:53,250 --> 00:13:08,490
and give it to JD gray it's okay so it

229
00:13:03,540 --> 00:13:11,160
opened that zip file and I can now I can

230
00:13:08,490 --> 00:13:13,560
navigate through all these classes and I

231
00:13:11,160 --> 00:13:16,889
can click on them and on the right hand

232
00:13:13,560 --> 00:13:18,750
side it shows me Java code this is not

233
00:13:16,889 --> 00:13:21,240
the original Java source of course it's

234
00:13:18,750 --> 00:13:25,170
decompiled but as you can see it's not

235
00:13:21,240 --> 00:13:28,949
appreciated you can read it as it was

236
00:13:25,170 --> 00:13:31,920
written by by by a good programmer who

237
00:13:28,949 --> 00:13:36,899
knows how to do the right syntax and

238
00:13:31,920 --> 00:13:39,509
stuff okay was the quickest quickest way

239
00:13:36,899 --> 00:13:41,610
to get to the data that I need now

240
00:13:39,509 --> 00:13:46,199
remember that file had that ser

241
00:13:41,610 --> 00:13:48,930
extension so in in this tool I can just

242
00:13:46,199 --> 00:13:50,579
search for I can search for types

243
00:13:48,930 --> 00:13:53,638
constructions method I can also search

244
00:13:50,579 --> 00:13:57,388
for strings so I'm searching for a CR

245
00:13:53,639 --> 00:14:00,110
string and here's a few candidates I'm

246
00:13:57,389 --> 00:14:00,110
gonna pick this one

247
00:14:05,560 --> 00:14:11,888
and you can see here that it builds the

248
00:14:08,920 --> 00:14:14,498
filename here right and then we open the

249
00:14:11,889 --> 00:14:17,649
file then we create input stream and

250
00:14:14,499 --> 00:14:20,949
then we finally call read object method

251
00:14:17,649 --> 00:14:23,740
and this this method in Java DC realizes

252
00:14:20,949 --> 00:14:25,889
data and puts it in in an internal

253
00:14:23,740 --> 00:14:28,449
object which goes in this return value

254
00:14:25,889 --> 00:14:31,360
cool so I did find the code that

255
00:14:28,449 --> 00:14:34,809
actually reads that data that I need

256
00:14:31,360 --> 00:14:40,350
from the disk now what can I do with it

257
00:14:34,809 --> 00:14:40,350
can I just copy because I'm lazy

258
00:14:40,499 --> 00:14:59,819
copy this whole method and put it in my

259
00:14:49,930 --> 00:15:04,899
own program so I'm creating a brand new

260
00:14:59,819 --> 00:15:12,430
program called parser the Java it's

261
00:15:04,899 --> 00:15:14,620
gonna be my new class called parser and

262
00:15:12,430 --> 00:15:18,689
now I'm just gonna paste that code that

263
00:15:14,620 --> 00:15:22,029
I just copied from the decompiler here

264
00:15:18,689 --> 00:15:24,059
and I'll need to rename this it doesn't

265
00:15:22,029 --> 00:15:29,170
make sense this is gonna be my

266
00:15:24,059 --> 00:15:31,959
constructor and then I guess I also need

267
00:15:29,170 --> 00:15:34,290
all these import statements so it so it

268
00:15:31,959 --> 00:15:34,290
can pass

269
00:15:38,920 --> 00:15:46,459
it's hard to navigate without Mouse okay

270
00:15:44,300 --> 00:15:50,750
I've got all the imports I've got my

271
00:15:46,459 --> 00:16:02,479
class I've got my methods let's compile

272
00:15:50,750 --> 00:16:04,600
and run right away and i've got a few

273
00:16:02,480 --> 00:16:10,100
compile errors so i need to fix them

274
00:16:04,600 --> 00:16:11,660
that's normal stuff right here are these

275
00:16:10,100 --> 00:16:13,870
two variables that are completely

276
00:16:11,660 --> 00:16:16,339
useless I'm just gonna come in them out

277
00:16:13,870 --> 00:16:18,649
since this is a constructor we no longer

278
00:16:16,339 --> 00:16:24,290
return anything so I need to remove

279
00:16:18,649 --> 00:16:27,260
remove that return value this one and we

280
00:16:24,290 --> 00:16:31,910
also had an issue with this call which

281
00:16:27,260 --> 00:16:34,699
is again useless okay try now okay to

282
00:16:31,910 --> 00:16:39,110
compile but then it complained that I

283
00:16:34,699 --> 00:16:41,899
didn't have the main method of course so

284
00:16:39,110 --> 00:16:51,310
again I hate to type so I'm just gonna

285
00:16:41,899 --> 00:16:51,310
copy and paste okay should I

286
00:16:55,589 --> 00:17:05,740
here's my main method in and in here we

287
00:16:59,890 --> 00:17:12,010
are going to create a new instance of

288
00:17:05,740 --> 00:17:14,559
our parser object and we need to supply

289
00:17:12,010 --> 00:17:20,290
a couple of arguments suite abbreviation

290
00:17:14,559 --> 00:17:22,149
and exam number and these it's how this

291
00:17:20,290 --> 00:17:25,270
file name is built so the first part is

292
00:17:22,150 --> 00:17:29,559
read abbreviation cissp pract and the

293
00:17:25,270 --> 00:17:31,750
number is 1 I don't know what the point

294
00:17:29,559 --> 00:17:43,240
what's the point but they have they had

295
00:17:31,750 --> 00:17:47,280
the reason to do it ok let's try now it

296
00:17:43,240 --> 00:17:53,170
ran and it gave me this debugging window

297
00:17:47,280 --> 00:17:55,510
which again doesn't doesn't give me a

298
00:17:53,170 --> 00:17:57,340
lot of value so I'm just going to

299
00:17:55,510 --> 00:18:04,020
comment that out as well

300
00:17:57,340 --> 00:18:04,020
I was get rid of of the useless stuff

301
00:18:04,290 --> 00:18:11,770
and now it ran it didn't print anything

302
00:18:07,890 --> 00:18:16,300
but I believe it read the data from the

303
00:18:11,770 --> 00:18:18,340
disk and if we can if I can get back to

304
00:18:16,300 --> 00:18:21,399
my source code so and it put put the

305
00:18:18,340 --> 00:18:26,129
data in this return value so now I need

306
00:18:21,400 --> 00:18:32,850
to get those those practice questions

307
00:18:26,130 --> 00:18:32,850
all 1011 of them and print them out

308
00:18:33,330 --> 00:18:40,540
first thing I'm gonna do is I'm gonna

309
00:18:35,800 --> 00:18:43,750
move that object to the class scope and

310
00:18:40,540 --> 00:18:49,920
I don't like return value I'm going to

311
00:18:43,750 --> 00:18:57,930
rename it to exam ok

312
00:18:49,920 --> 00:19:01,650
now this exam is of this type exam job

313
00:18:57,930 --> 00:19:06,600
would be an abstract v3 what can I do at

314
00:19:01,650 --> 00:19:09,420
this kind of class let's go back to the

315
00:19:06,600 --> 00:19:11,580
D compiler and nice thing about this

316
00:19:09,420 --> 00:19:15,180
tool again it's pretty cool tool you can

317
00:19:11,580 --> 00:19:17,730
just click on any class name and it will

318
00:19:15,180 --> 00:19:20,880
take you directly to the Declaration and

319
00:19:17,730 --> 00:19:25,620
here we see the very first method of

320
00:19:20,880 --> 00:19:28,680
this class is get question bins so I'm

321
00:19:25,620 --> 00:19:35,159
again I don't want to type just want to

322
00:19:28,680 --> 00:19:45,300
copy and paste and I'm declaring a local

323
00:19:35,160 --> 00:19:48,260
variable questions and assigned and now

324
00:19:45,300 --> 00:19:56,370
in the interest of time I'm just gonna

325
00:19:48,260 --> 00:20:01,879
copy some code that I wrote before and I

326
00:19:56,370 --> 00:20:01,879
just explain it to you oh wait wait

327
00:20:11,299 --> 00:20:17,158
okay so this is a hashmap

328
00:20:13,549 --> 00:20:20,850
and we we are reiterate through this

329
00:20:17,159 --> 00:20:22,919
hash map and we get um each iteration we

330
00:20:20,850 --> 00:20:25,139
get a single question and it's of this

331
00:20:22,919 --> 00:20:28,350
type and again we go back to your

332
00:20:25,140 --> 00:20:30,029
decompiler click on this class name and

333
00:20:28,350 --> 00:20:31,830
it takes us directly to the Declaration

334
00:20:30,029 --> 00:20:34,230
we see what methods are available and

335
00:20:31,830 --> 00:20:37,289
the methods are like get question text

336
00:20:34,230 --> 00:20:39,630
and get explanation and get choices and

337
00:20:37,289 --> 00:20:41,549
these are the methods that some of them

338
00:20:39,630 --> 00:20:45,240
are gonna use here so we're gonna print

339
00:20:41,549 --> 00:20:49,918
the question text first and get and the

340
00:20:45,240 --> 00:20:54,210
all the possible choices alright

341
00:20:49,919 --> 00:20:56,970
save it run it again and another compile

342
00:20:54,210 --> 00:20:58,679
error it's okay so I need to add a

343
00:20:56,970 --> 00:21:06,899
couple of Java utils

344
00:20:58,679 --> 00:21:15,080
so I'm just gonna wall card this yeah of

345
00:21:06,899 --> 00:21:15,080
course I forgot I forgot this

346
00:21:17,760 --> 00:21:29,200
alright now this makes more sense and I

347
00:21:25,300 --> 00:21:33,580
forgot to declare it as static this is

348
00:21:29,200 --> 00:21:35,610
normal Java stuff right you see it every

349
00:21:33,580 --> 00:21:35,610
day

350
00:21:41,670 --> 00:21:47,680
1011 questions and choices and then I

351
00:21:45,910 --> 00:21:51,130
you know and I can do other things with

352
00:21:47,680 --> 00:21:54,820
it I can break this down to for practice

353
00:21:51,130 --> 00:21:56,920
exams 200 250 questions each and do

354
00:21:54,820 --> 00:22:00,629
anything else I want now that I have the

355
00:21:56,920 --> 00:22:04,900
object in in my program I can just pull

356
00:22:00,630 --> 00:22:08,550
the data I can randomly you know select

357
00:22:04,900 --> 00:22:12,040
out of that hash map and do other things

358
00:22:08,550 --> 00:22:14,740
mission achieved so in conclusion if

359
00:22:12,040 --> 00:22:16,720
things are not in the plain sight think

360
00:22:14,740 --> 00:22:20,050
of side of the box dig deeper like who

361
00:22:16,720 --> 00:22:23,530
would think that you could unzip an

362
00:22:20,050 --> 00:22:27,190
executable it might be possible might

363
00:22:23,530 --> 00:22:31,090
sound crazy but Java bytecode not a

364
00:22:27,190 --> 00:22:34,360
problem you can in lots of cases you can

365
00:22:31,090 --> 00:22:37,449
D compile it and and see Java source

366
00:22:34,360 --> 00:22:39,879
code now if you're on a pen test for

367
00:22:37,450 --> 00:22:42,370
example and it's black box and you see a

368
00:22:39,880 --> 00:22:44,080
jar file a war file and your rules of

369
00:22:42,370 --> 00:22:48,489
engagement did not prohibit you from

370
00:22:44,080 --> 00:22:51,610
from decompiling feel free to do it

371
00:22:48,490 --> 00:22:55,660
you'll find good stuff you'll find

372
00:22:51,610 --> 00:22:57,520
credentials you'll find other things if

373
00:22:55,660 --> 00:22:59,320
you hate to write code there are lots of

374
00:22:57,520 --> 00:23:01,750
ways to reuse code I show you just one

375
00:22:59,320 --> 00:23:04,030
example where I just copied and pasted

376
00:23:01,750 --> 00:23:05,650
it and then I just had a bunch of import

377
00:23:04,030 --> 00:23:08,020
statements that we use to compile

378
00:23:05,650 --> 00:23:10,870
classes and if you see an imperfect

379
00:23:08,020 --> 00:23:12,940
application I can improve it and come

380
00:23:10,870 --> 00:23:15,600
back next year and share with all of us

381
00:23:12,940 --> 00:23:15,600
thank you

382
00:23:16,350 --> 00:23:23,269
[Applause]

383
00:23:20,590 --> 00:23:32,649
do you have time for questions are there

384
00:23:23,269 --> 00:23:39,159
any questions what's that

385
00:23:32,649 --> 00:23:39,158
yes yeah I I did write Java code before

386
00:23:43,809 --> 00:23:49,580
well I thought it it's probably some

387
00:23:46,519 --> 00:23:51,919
kind of self unpacking program and then

388
00:23:49,580 --> 00:23:54,879
I just had a crazy thought you know I

389
00:23:51,919 --> 00:23:54,879
just came out of nowhere

390
00:23:55,509 --> 00:23:58,509
yes

391
00:24:04,860 --> 00:24:10,899
yeah so the question is could hack

392
00:24:08,110 --> 00:24:13,320
randomize function to return one to 50

393
00:24:10,900 --> 00:24:16,210
so the questions do not repeat maybe

394
00:24:13,320 --> 00:24:18,340
yeah I guess that's possible so instead

395
00:24:16,210 --> 00:24:22,770
of doing this I could hack the original

396
00:24:18,340 --> 00:24:26,110
program and maybe modify it and

397
00:24:22,770 --> 00:24:29,260
repackage it and make it do whatever I

398
00:24:26,110 --> 00:24:31,990
want it would probably be more work then

399
00:24:29,260 --> 00:24:36,160
just bring him out this in the text form

400
00:24:31,990 --> 00:24:39,010
though so I spent like maybe 2 3 3 hours

401
00:24:36,160 --> 00:24:47,170
on this and I got my results and I could

402
00:24:39,010 --> 00:24:50,770
yeah that's a great question what if the

403
00:24:47,170 --> 00:24:52,990
code is obfuscated yeah if it is it's

404
00:24:50,770 --> 00:24:57,010
very difficult to read the code but in

405
00:24:52,990 --> 00:24:59,590
this particular example I didn't have to

406
00:24:57,010 --> 00:25:02,050
understand much about what what the code

407
00:24:59,590 --> 00:25:06,040
is doing I just copied the method that I

408
00:25:02,050 --> 00:25:08,110
thought would work for me and then did a

409
00:25:06,040 --> 00:25:10,629
couple of extra things so in this case

410
00:25:08,110 --> 00:25:14,860
it would probably not take me a lot of

411
00:25:10,630 --> 00:25:19,360
effort to to achieve my goal but yeah I

412
00:25:14,860 --> 00:25:29,669
don't know I'm I've not worked a lot

413
00:25:19,360 --> 00:25:29,669
with obfuscated code so yeah yes

414
00:25:29,880 --> 00:25:35,640
yes I believe so yeah I have yeah

415
00:25:33,419 --> 00:25:38,640
totally

416
00:25:35,640 --> 00:25:38,640
yes

417
00:25:38,770 --> 00:25:51,779
do I have my code on github no not this

418
00:25:42,429 --> 00:25:51,779
code thank you very much

419
00:26:01,230 --> 00:26:03,290
you

