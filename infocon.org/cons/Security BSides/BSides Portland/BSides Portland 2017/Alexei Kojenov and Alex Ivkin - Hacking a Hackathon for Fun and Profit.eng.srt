1
00:00:13,250 --> 00:00:18,119
anyway yeah so it's a normal hackathon

2
00:00:16,320 --> 00:00:19,980
we have to go through usual stuff the

3
00:00:18,119 --> 00:00:22,769
URL champion the client-side validation

4
00:00:19,980 --> 00:00:25,170
sequel injection XML injections were

5
00:00:22,769 --> 00:00:27,659
kind of new to me see XSL you're gonna

6
00:00:25,170 --> 00:00:29,760
form cryptanalysis to two bit and then

7
00:00:27,660 --> 00:00:32,360
brute-force attacks and even go to a

8
00:00:29,760 --> 00:00:34,590
dossing an application to unknown

9
00:00:32,360 --> 00:00:38,070
vulnerability in that app so normal

10
00:00:34,590 --> 00:00:40,620
normal hackathon stuff at the end of the

11
00:00:38,070 --> 00:00:45,000
day or rather half day alex and i

12
00:00:40,620 --> 00:00:47,038
finished in the top two of on the

13
00:00:45,000 --> 00:00:56,070
scoreboard for the entire class which is

14
00:00:47,039 --> 00:00:57,510
awesome or so we thought yeah we said so

15
00:00:56,070 --> 00:00:59,850
what's the perfect score and they said

16
00:00:57,510 --> 00:01:02,039
oh the perfect score is 1000 you guys

17
00:00:59,850 --> 00:01:04,199
you know just barely scratching it and

18
00:01:02,039 --> 00:01:12,240
and they also said nobody ever got to

19
00:01:04,199 --> 00:01:14,189
the top score sorry yeah security

20
00:01:12,240 --> 00:01:17,280
innovation was also kind enough to leave

21
00:01:14,189 --> 00:01:20,548
the environment open for a few more days

22
00:01:17,280 --> 00:01:22,710
and they basically told us go home and

23
00:01:20,549 --> 00:01:25,759
keep hacking and keep learning and

24
00:01:22,710 --> 00:01:28,048
that's what we did we went home and kept

25
00:01:25,759 --> 00:01:29,369
exploiting finding and exploiting those

26
00:01:28,049 --> 00:01:33,630
vulnerabilities in this web application

27
00:01:29,369 --> 00:01:39,110
and both Alex and I separately and

28
00:01:33,630 --> 00:01:43,619
combined we got you 9,000 plus points

29
00:01:39,110 --> 00:01:45,840
much better but yeah still we still

30
00:01:43,619 --> 00:01:47,460
didn't hit the tops and I was like come

31
00:01:45,840 --> 00:01:49,290
on you've challenged us we got to get

32
00:01:47,460 --> 00:01:51,780
there and we're sitting there it's

33
00:01:49,290 --> 00:01:53,399
Sunday night it's like eight hours left

34
00:01:51,780 --> 00:01:55,229
till they turn off the service and we're

35
00:01:53,399 --> 00:01:57,030
like let's let's just you know try

36
00:01:55,229 --> 00:01:59,009
something else they just keep scratching

37
00:01:57,030 --> 00:02:02,939
our hasn't said we're gonna turn it off

38
00:01:59,009 --> 00:02:06,420
on Monday morning yeah what do we do so

39
00:02:02,939 --> 00:02:09,060
we decided that you're probably gonna

40
00:02:06,420 --> 00:02:11,819
waste a lot of time trying to find the

41
00:02:09,060 --> 00:02:13,590
those vulnerabilities that they code it

42
00:02:11,819 --> 00:02:15,450
and we should look for some

43
00:02:13,590 --> 00:02:16,920
thing that was not intended there for

44
00:02:15,450 --> 00:02:19,530
that to be so we started in prompted

45
00:02:16,920 --> 00:02:21,780
hacking and you know from your textbooks

46
00:02:19,530 --> 00:02:25,819
on hacking and that's what it looks like

47
00:02:21,780 --> 00:02:31,739
you know reconnaissance research try

48
00:02:25,819 --> 00:02:34,530
exploit profit repeat but in reality you

49
00:02:31,739 --> 00:02:37,739
know it's a lot of frustration trial and

50
00:02:34,530 --> 00:02:40,200
error some alcohol involved

51
00:02:37,739 --> 00:02:42,000
maybe maybe other substances yeah you've

52
00:02:40,200 --> 00:02:43,980
heard on today's talk if you were in the

53
00:02:42,000 --> 00:02:45,750
keynote I mean it's it's rarely this

54
00:02:43,980 --> 00:02:52,349
textbook example is just a lot of

55
00:02:45,750 --> 00:02:54,540
bashing and drinking so I'll give a

56
00:02:52,349 --> 00:02:56,250
quick for into how Hulk hackathons are

57
00:02:54,540 --> 00:02:57,420
built so for those of you haven't been

58
00:02:56,250 --> 00:02:59,420
on the other side of things can

59
00:02:57,420 --> 00:03:01,890
understand by the way there's a talk and

60
00:02:59,420 --> 00:03:03,268
thirty minutes two o'clock right topper

61
00:03:01,890 --> 00:03:05,458
is talking about how he put together

62
00:03:03,269 --> 00:03:06,540
this CTF for this conference so if

63
00:03:05,459 --> 00:03:08,519
you're interested in actually learning

64
00:03:06,540 --> 00:03:11,370
how it's done then go to that talk to

65
00:03:08,519 --> 00:03:13,980
but they in reality it's billed by

66
00:03:11,370 --> 00:03:15,420
hackers for heck cuz right so obviously

67
00:03:13,980 --> 00:03:16,950
they know all the other vulnerabilities

68
00:03:15,420 --> 00:03:20,130
and they they're not just gonna leave

69
00:03:16,950 --> 00:03:21,510
you with a pre Vasque there so you shut

70
00:03:20,130 --> 00:03:23,130
everything tight and obviously the

71
00:03:21,510 --> 00:03:25,319
training company they wanted to make

72
00:03:23,130 --> 00:03:27,630
sure that they keep it all closed and as

73
00:03:25,319 --> 00:03:29,780
to realize much later what we were doing

74
00:03:27,630 --> 00:03:32,880
with it was a bunch of hardened

75
00:03:29,780 --> 00:03:35,220
aw Linux boxes and have no normal tools

76
00:03:32,880 --> 00:03:38,489
no you know you can't just on that cat

77
00:03:35,220 --> 00:03:40,500
and be happy there so no extra all the

78
00:03:38,489 --> 00:03:42,090
challenges everything was hard-coded

79
00:03:40,500 --> 00:03:44,040
into the app and compiled there was no

80
00:03:42,090 --> 00:03:46,769
databases no text files nothing to

81
00:03:44,040 --> 00:03:49,108
tamper with and no public and bond

82
00:03:46,769 --> 00:03:51,150
acceptor for port 18 no outbound either

83
00:03:49,109 --> 00:03:54,599
so it's like oh man

84
00:03:51,150 --> 00:03:56,880
that's really tough yeah so we looked

85
00:03:54,599 --> 00:04:00,060
for those things like open ports

86
00:03:56,880 --> 00:04:03,260
nothing and finally we realized that

87
00:04:00,060 --> 00:04:07,470
some of the URLs have this dot action

88
00:04:03,260 --> 00:04:08,929
extension and I think Alex said yeah

89
00:04:07,470 --> 00:04:12,840
this looks familiar

90
00:04:08,930 --> 00:04:13,500
better the use of Apache struts okay

91
00:04:12,840 --> 00:04:19,440
awesome

92
00:04:13,500 --> 00:04:21,289
anybody here stirs recently no well yeah

93
00:04:19,440 --> 00:04:24,750
so we'll have to slide on there was

94
00:04:21,289 --> 00:04:26,930
earlier but obviously you know it was it

95
00:04:24,750 --> 00:04:29,770
was in March you know

96
00:04:26,930 --> 00:04:33,979
April right no we were doing this like

97
00:04:29,770 --> 00:04:36,080
end of March so you know we were going

98
00:04:33,979 --> 00:04:37,909
out after the exploits and looking at

99
00:04:36,080 --> 00:04:41,539
certain exploits and we come up against

100
00:04:37,910 --> 00:04:43,250
this thing that's you know CV 2017 and

101
00:04:41,539 --> 00:04:47,330
remember this number five three three

102
00:04:43,250 --> 00:04:48,440
eight apparently it's five six three I

103
00:04:47,330 --> 00:04:52,159
can't read English

104
00:04:48,440 --> 00:04:55,610
all right sous-sous it's a it's a CB SS

105
00:04:52,160 --> 00:04:57,590
score town it's like alright and it's

106
00:04:55,610 --> 00:05:00,710
fairly recent so how about we try it

107
00:04:57,590 --> 00:05:02,869
looks like stress is there yeah why not

108
00:05:00,710 --> 00:05:04,489
maybe they haven't passed yet so it's a

109
00:05:02,870 --> 00:05:09,500
couple of weeks after the they actually

110
00:05:04,490 --> 00:05:13,310
release of the so we ran a tool called

111
00:05:09,500 --> 00:05:15,949
Metasploit framework and they already

112
00:05:13,310 --> 00:05:17,599
had an exploit for that I mean they just

113
00:05:15,949 --> 00:05:19,880
searched for strats and they had six or

114
00:05:17,599 --> 00:05:22,699
seven and this was this one was the most

115
00:05:19,880 --> 00:05:24,740
recent and we just put the parameters

116
00:05:22,699 --> 00:05:26,930
the the host name the port

117
00:05:24,740 --> 00:05:29,389
yeah and we're like hey we're gonna have

118
00:05:26,930 --> 00:05:31,909
some time to sleep today - yeah okay

119
00:05:29,389 --> 00:05:34,909
Metasploit is gonna do it for us and it

120
00:05:31,909 --> 00:05:37,639
kind of did so when we hit when we put

121
00:05:34,909 --> 00:05:42,560
the check command it set yay target is

122
00:05:37,639 --> 00:05:44,360
broader ball awesome not quite yeah well

123
00:05:42,560 --> 00:05:46,280
it's said vulnerable but then when we

124
00:05:44,360 --> 00:05:47,810
tried creating such as nothing happens

125
00:05:46,280 --> 00:05:49,789
like you can't get out we can't

126
00:05:47,810 --> 00:05:51,650
communicate nothing's like so the only

127
00:05:49,789 --> 00:05:54,080
little piece of information we had is

128
00:05:51,650 --> 00:05:55,969
like a it says it's smaller and once it

129
00:05:54,080 --> 00:05:59,169
hopefully it's not lying to us it's

130
00:05:55,970 --> 00:06:04,490
promising but we cannot get shell or

131
00:05:59,169 --> 00:06:07,729
remote command execution so we start

132
00:06:04,490 --> 00:06:11,030
looking into that yeah so we could be

133
00:06:07,729 --> 00:06:14,030
first of all we trying to understand how

134
00:06:11,030 --> 00:06:16,369
the how Metasploit was checking that

135
00:06:14,030 --> 00:06:19,880
it's vulnerable so we ran the traffic

136
00:06:16,370 --> 00:06:25,669
through intercepting proxy and we used

137
00:06:19,880 --> 00:06:28,340
burp here on the top you see this is the

138
00:06:25,669 --> 00:06:31,280
request that that Metasploit was sending

139
00:06:28,340 --> 00:06:33,710
and on the bottom is the response the

140
00:06:31,280 --> 00:06:35,900
request is looking kind of funny but the

141
00:06:33,710 --> 00:06:39,469
the highlighted text is what's important

142
00:06:35,900 --> 00:06:40,219
if you look closely at this you can see

143
00:06:39,469 --> 00:06:43,940
it's

144
00:06:40,220 --> 00:06:46,070
looking like Java it's calling a certain

145
00:06:43,940 --> 00:06:49,219
Java method to get proper system get

146
00:06:46,070 --> 00:06:53,270
property with OS dot name parameter and

147
00:06:49,220 --> 00:06:57,470
that it puts the result into just a

148
00:06:53,270 --> 00:07:00,590
random header and on the response here

149
00:06:57,470 --> 00:07:02,590
is this header with the value so it is

150
00:07:00,590 --> 00:07:05,510
running a Java method to get the

151
00:07:02,590 --> 00:07:07,880
operating system name and returning back

152
00:07:05,510 --> 00:07:10,219
to Metasploit that's how it knows that

153
00:07:07,880 --> 00:07:12,590
it's vulnerable and you can see it's

154
00:07:10,220 --> 00:07:14,570
using this funky language that's called

155
00:07:12,590 --> 00:07:16,669
OGN l which we just least recently

156
00:07:14,570 --> 00:07:26,719
learned people in Java world called

157
00:07:16,670 --> 00:07:29,120
agonal so it's using agonal all right so

158
00:07:26,720 --> 00:07:31,310
so the next thing pop off one you know

159
00:07:29,120 --> 00:07:33,020
finally exploit open up the ruby exploit

160
00:07:31,310 --> 00:07:34,669
the Metasploit is running and start

161
00:07:33,020 --> 00:07:36,979
reading the code and it's like what well

162
00:07:34,669 --> 00:07:38,870
how does it work how is it checking you

163
00:07:36,980 --> 00:07:41,630
know you can see in this ruby code it's

164
00:07:38,870 --> 00:07:43,280
putting together the agonal thingy and

165
00:07:41,630 --> 00:07:46,150
it actually is what it's doing

166
00:07:43,280 --> 00:07:48,650
internally is it goes over and starts

167
00:07:46,150 --> 00:07:53,000
setting up this symphony agonal as a

168
00:07:48,650 --> 00:08:00,320
library that apache hasn't developed for

169
00:07:53,000 --> 00:08:05,570
internal language processing but well

170
00:08:00,320 --> 00:08:08,300
sousou you'll see later to it also goes

171
00:08:05,570 --> 00:08:10,040
into setting up excluded classes

172
00:08:08,300 --> 00:08:12,320
basically it removes all the security

173
00:08:10,040 --> 00:08:14,450
precautions that agonal has internally

174
00:08:12,320 --> 00:08:17,000
just basically calling sink clear clear

175
00:08:14,450 --> 00:08:20,030
clear this stuff out and and go and pop

176
00:08:17,000 --> 00:08:22,430
the OS name system property into the

177
00:08:20,030 --> 00:08:24,469
header and then return that hatter now

178
00:08:22,430 --> 00:08:26,870
this thing worked the check works the

179
00:08:24,470 --> 00:08:28,790
exploit thing didn't so we were tasked

180
00:08:26,870 --> 00:08:33,650
with now we need to make this thing work

181
00:08:28,790 --> 00:08:35,300
somehow yeah if you wanted to get

182
00:08:33,650 --> 00:08:37,789
something too useful running the server

183
00:08:35,299 --> 00:08:40,789
so we tried a few things and of course

184
00:08:37,789 --> 00:08:45,470
we we do not intend to write something

185
00:08:40,789 --> 00:08:47,780
in Ruby no well instead we use the

186
00:08:45,470 --> 00:08:50,209
cieaura come out of curl which is a

187
00:08:47,780 --> 00:08:52,610
really nice little tool that can send

188
00:08:50,209 --> 00:08:56,000
any kind of HTTP request and show you

189
00:08:52,610 --> 00:09:00,470
the response so in this case we built a

190
00:08:56,000 --> 00:09:04,280
curl command to send to send requests to

191
00:09:00,470 --> 00:09:07,760
our vulnerable server and this is the

192
00:09:04,280 --> 00:09:09,439
header that that is custom and as you

193
00:09:07,760 --> 00:09:13,610
can see we're trying to run a remote

194
00:09:09,440 --> 00:09:15,620
command basically with the reverse shell

195
00:09:13,610 --> 00:09:16,940
right and that's a bachelor's show if

196
00:09:15,620 --> 00:09:18,500
you've not familiar with this this is

197
00:09:16,940 --> 00:09:19,820
the thing to have like you know if you

198
00:09:18,500 --> 00:09:22,130
don't have that yet that's the way to

199
00:09:19,820 --> 00:09:26,890
get a reverse shell if if you have

200
00:09:22,130 --> 00:09:29,540
oddball Network any good network alright

201
00:09:26,890 --> 00:09:31,280
so the next thing we've tried all right

202
00:09:29,540 --> 00:09:32,689
let's try to just find a filing we'd

203
00:09:31,280 --> 00:09:35,240
from the file so we're built in some

204
00:09:32,690 --> 00:09:37,459
Java code and so that and put a file and

205
00:09:35,240 --> 00:09:40,910
and we were able to actually get and

206
00:09:37,459 --> 00:09:44,150
read and put something into into one of

207
00:09:40,910 --> 00:09:46,250
the headers to return the content so

208
00:09:44,150 --> 00:09:48,680
like all right so we're getting there so

209
00:09:46,250 --> 00:09:51,140
we could get the bits and pieces we also

210
00:09:48,680 --> 00:09:53,180
tried to write a file so we sent two

211
00:09:51,140 --> 00:09:56,380
headers instead of one then one header

212
00:09:53,180 --> 00:10:00,439
contained that base 64 base64 encoded

213
00:09:56,380 --> 00:10:05,300
file content and then the code here got

214
00:10:00,440 --> 00:10:07,850
that header if I can read it it's

215
00:10:05,300 --> 00:10:10,459
difficult to read here is and then it

216
00:10:07,850 --> 00:10:12,410
would decode and then write to file and

217
00:10:10,459 --> 00:10:13,579
then we're hoping that he would just

218
00:10:12,410 --> 00:10:17,959
execute it on the server and get

219
00:10:13,580 --> 00:10:19,580
something I don't know maybe torque we

220
00:10:17,959 --> 00:10:22,400
had no way to check right it was the

221
00:10:19,580 --> 00:10:24,260
server was always silent to us and then

222
00:10:22,400 --> 00:10:28,939
and it took a little while and that dawn

223
00:10:24,260 --> 00:10:31,490
on us yeah yeah so we realize that it

224
00:10:28,940 --> 00:10:34,459
over complicating things and it should

225
00:10:31,490 --> 00:10:36,950
be easier than that and after a couple

226
00:10:34,459 --> 00:10:39,380
hours maybe three four hours we came up

227
00:10:36,950 --> 00:10:42,830
with this and this is the end result of

228
00:10:39,380 --> 00:10:46,280
our hecan't and what this little script

229
00:10:42,830 --> 00:10:47,060
does is it does some prep work there are

230
00:10:46,280 --> 00:10:48,920
some variables

231
00:10:47,060 --> 00:10:51,949
you know it's server name and and B path

232
00:10:48,920 --> 00:10:56,870
to do the application on the server it

233
00:10:51,950 --> 00:11:02,329
creates just a file name with the

234
00:10:56,870 --> 00:11:03,980
timestamp and we use that file to so via

235
00:11:02,329 --> 00:11:05,250
Roenick so we know we know we can run a

236
00:11:03,980 --> 00:11:08,040
command on the server

237
00:11:05,250 --> 00:11:09,860
the problem is how do you get the result

238
00:11:08,040 --> 00:11:12,779
of that command because the server

239
00:11:09,860 --> 00:11:15,750
cannot communicate back to you so you

240
00:11:12,779 --> 00:11:18,269
thought okay this is a web server why

241
00:11:15,750 --> 00:11:20,579
can't we just run the command redirect

242
00:11:18,269 --> 00:11:22,259
its output to a file and then just

243
00:11:20,579 --> 00:11:24,300
retrieve that file from that web server

244
00:11:22,259 --> 00:11:28,610
and that's what we tried and

245
00:11:24,300 --> 00:11:30,870
surprisingly it works so here we just

246
00:11:28,610 --> 00:11:33,060
the dollar one is the command that we're

247
00:11:30,870 --> 00:11:36,360
on and it redirects to our output file

248
00:11:33,060 --> 00:11:38,518
and the blah blah blah runs the process

249
00:11:36,360 --> 00:11:40,079
and we don't care you know about the

250
00:11:38,519 --> 00:11:43,110
process anymore

251
00:11:40,079 --> 00:11:46,170
we just want wanna wait for it to finish

252
00:11:43,110 --> 00:11:49,529
and then on the bottom the this little

253
00:11:46,170 --> 00:11:54,389
command on the very bottom is just a

254
00:11:49,529 --> 00:11:56,759
plain HTTP GET for that file the name of

255
00:11:54,389 --> 00:12:00,420
which we know because we created it

256
00:11:56,759 --> 00:12:02,759
ourselves and then we want to out so

257
00:12:00,420 --> 00:12:05,370
once we got this go on yay let's exfil

258
00:12:02,759 --> 00:12:07,709
everything we we can it's like hey let's

259
00:12:05,370 --> 00:12:09,600
go out after you know get get it see get

260
00:12:07,709 --> 00:12:11,819
off to get a user get you know all the

261
00:12:09,600 --> 00:12:14,699
content from the server we can get and

262
00:12:11,819 --> 00:12:17,160
got everything yeah basically we run

263
00:12:14,699 --> 00:12:19,949
commands to read everything that the web

264
00:12:17,160 --> 00:12:21,480
user was able to read yeah and the most

265
00:12:19,949 --> 00:12:24,899
important thing that came was the

266
00:12:21,480 --> 00:12:27,180
content of the actual hackathon that was

267
00:12:24,899 --> 00:12:29,129
the war file the web application you

268
00:12:27,180 --> 00:12:30,660
know Java compiled code and obviously

269
00:12:29,129 --> 00:12:32,910
what do you do when you get a compiled

270
00:12:30,660 --> 00:12:35,519
code and while you decompile it and JT

271
00:12:32,910 --> 00:12:37,769
goo is an excellent tool to compile look

272
00:12:35,519 --> 00:12:40,019
at it see those at completed challenges

273
00:12:37,769 --> 00:12:41,939
and see those unique identifiers for

274
00:12:40,019 --> 00:12:45,000
those completed challenges that are sent

275
00:12:41,939 --> 00:12:48,120
to their CNC server and it's like all

276
00:12:45,000 --> 00:12:52,559
right I think we got there yeah so we

277
00:12:48,120 --> 00:12:54,689
basically we just took the D compile

278
00:12:52,559 --> 00:12:57,689
code and looked for all these at

279
00:12:54,689 --> 00:13:00,240
completely challenged occurrences with

280
00:12:57,689 --> 00:13:05,069
those unique strings and we built our

281
00:13:00,240 --> 00:13:07,769
own java class that we were hoping to

282
00:13:05,069 --> 00:13:10,740
run on the server to just execute all

283
00:13:07,769 --> 00:13:12,930
these methods and by doing that it would

284
00:13:10,740 --> 00:13:15,870
send the commands that commands but

285
00:13:12,930 --> 00:13:17,880
messages to to the main to the

286
00:13:15,870 --> 00:13:18,480
scoreboard server to register that we

287
00:13:17,880 --> 00:13:20,189
finished

288
00:13:18,480 --> 00:13:21,450
and since we've got all their libraries

289
00:13:20,190 --> 00:13:25,290
too we just compile against their

290
00:13:21,450 --> 00:13:27,360
libraries I can't wouldn't care and then

291
00:13:25,290 --> 00:13:28,980
the next thing was how do we upload all

292
00:13:27,360 --> 00:13:32,490
they were on it but thankfully they also

293
00:13:28,980 --> 00:13:34,380
they had an upload vulnerable upload

294
00:13:32,490 --> 00:13:36,240
page that we have used an intentional

295
00:13:34,380 --> 00:13:38,250
yeah actually that was intentional

296
00:13:36,240 --> 00:13:40,890
vulnerability but we put put it as a

297
00:13:38,250 --> 00:13:46,670
text fake text and renamed it with our

298
00:13:40,890 --> 00:13:52,890
command and you know next thing was hey

299
00:13:46,670 --> 00:13:55,920
timestamps no see how fast we hack it's

300
00:13:52,890 --> 00:14:11,370
like getting 2,000 points in four

301
00:13:55,920 --> 00:14:13,560
seconds or something yeah thank you so

302
00:14:11,370 --> 00:14:15,210
so that was those fun and games and

303
00:14:13,560 --> 00:14:16,530
everything and alex is gonna talk a

304
00:14:15,210 --> 00:14:18,270
little bit about the responsible

305
00:14:16,530 --> 00:14:20,069
disclosure we didn't land and you know

306
00:14:18,270 --> 00:14:22,740
all that common you know good feelings

307
00:14:20,070 --> 00:14:24,600
and stuff but we wanted to talk about a

308
00:14:22,740 --> 00:14:26,460
little more profits so here's another

309
00:14:24,600 --> 00:14:27,840
example he's this is a training program

310
00:14:26,460 --> 00:14:29,790
this is another sort of a hackathon

311
00:14:27,840 --> 00:14:31,740
training program and it's awesome it's

312
00:14:29,790 --> 00:14:34,860
it does pretty well it's it's from my

313
00:14:31,740 --> 00:14:36,720
sac its cybersecurity and access and it

314
00:14:34,860 --> 00:14:38,490
what it does it also you complete a

315
00:14:36,720 --> 00:14:41,190
challenge and then it also reports your

316
00:14:38,490 --> 00:14:43,200
sea pees like any time you spend on

317
00:14:41,190 --> 00:14:46,500
hacking it and and submits on your

318
00:14:43,200 --> 00:14:49,320
behalf and I thought that's an

319
00:14:46,500 --> 00:14:54,060
interesting way let's see what I can do

320
00:14:49,320 --> 00:14:56,580
with CPEs so I did a little more so that

321
00:14:54,060 --> 00:14:58,410
was another hackathon it was a different

322
00:14:56,580 --> 00:15:00,180
blog it was a shell injection it was

323
00:14:58,410 --> 00:15:03,120
actually yeah shell injection then into

324
00:15:00,180 --> 00:15:05,280
an map but there you can do something

325
00:15:03,120 --> 00:15:07,410
else when people submit you know see

326
00:15:05,280 --> 00:15:09,329
Pease on your behalf you can submit a

327
00:15:07,410 --> 00:15:12,750
little more so I thought yeah it spent a

328
00:15:09,330 --> 00:15:14,310
lot of time thinking about it maybe so

329
00:15:12,750 --> 00:15:19,830
for two hours of work you've got 20

330
00:15:14,310 --> 00:15:24,790
hours of CP yeah nice profit yeah but

331
00:15:19,830 --> 00:15:28,850
you know if it were smarter

332
00:15:24,790 --> 00:15:31,250
so when the equifax thing came out they

333
00:15:28,850 --> 00:15:34,160
they kind of hinted right away that it

334
00:15:31,250 --> 00:15:36,350
was my cheese frosting and then a week

335
00:15:34,160 --> 00:15:38,810
later a few days later they actually

336
00:15:36,350 --> 00:15:41,089
confirmed officially that it was the

337
00:15:38,810 --> 00:15:43,790
same Apache stress vulnerability that

338
00:15:41,089 --> 00:15:46,490
they get hacked through same one that we

339
00:15:43,790 --> 00:15:48,439
exploited in that hackathon you see the

340
00:15:46,490 --> 00:15:55,339
number you remember that number right

341
00:15:48,439 --> 00:15:57,500
into 638 so real-life consequences it's

342
00:15:55,339 --> 00:16:00,709
it's not fun anymore

343
00:15:57,500 --> 00:16:04,480
I'm sure I'm one of those 145 million

344
00:16:00,709 --> 00:16:06,589
people and my information is out there

345
00:16:04,480 --> 00:16:08,509
if you ever doubted that your

346
00:16:06,589 --> 00:16:10,269
information was out there it's out there

347
00:16:08,509 --> 00:16:12,620
now

348
00:16:10,269 --> 00:16:20,720
you know it was happening about the same

349
00:16:12,620 --> 00:16:22,160
time essentially all right so so you

350
00:16:20,720 --> 00:16:24,170
know quickly what what does this whole

351
00:16:22,160 --> 00:16:25,879
thing mean to you if you're not you know

352
00:16:24,170 --> 00:16:27,649
putting together hackathons obviously

353
00:16:25,879 --> 00:16:28,790
you know you got to know what's deployed

354
00:16:27,649 --> 00:16:30,500
in your system you've got to watch for

355
00:16:28,790 --> 00:16:32,089
the recent series and you got to

356
00:16:30,500 --> 00:16:33,980
understand your application you get a

357
00:16:32,089 --> 00:16:35,959
scan for vulnerabilities this is I'm not

358
00:16:33,980 --> 00:16:38,930
breaking anything new here it's new you

359
00:16:35,959 --> 00:16:41,209
need the usual cybers you know hygiene

360
00:16:38,930 --> 00:16:42,589
and perform pen testing but the other

361
00:16:41,209 --> 00:16:45,410
thing that's kind of important here and

362
00:16:42,589 --> 00:16:47,269
that's in the light of the Equifax I

363
00:16:45,410 --> 00:16:49,579
mean they get they got hacked pretty

364
00:16:47,269 --> 00:16:52,069
fast too and this you know the security

365
00:16:49,579 --> 00:16:54,529
innovation we were able to get in fairly

366
00:16:52,069 --> 00:16:56,750
fast - there's a certain period of time

367
00:16:54,529 --> 00:16:58,910
before it comes out in somebody hacks in

368
00:16:56,750 --> 00:17:00,529
where you can't really do anything so a

369
00:16:58,910 --> 00:17:02,680
second level of defense would have

370
00:17:00,529 --> 00:17:05,359
definitely helped if they had a Wafaa

371
00:17:02,680 --> 00:17:06,980
plication firewall that had signatures

372
00:17:05,359 --> 00:17:11,089
at least you know filtered out the

373
00:17:06,980 --> 00:17:13,549
freaking whole thing you don't need it

374
00:17:11,089 --> 00:17:14,928
why who does use it and it's like when

375
00:17:13,549 --> 00:17:16,459
we were looking at there's almost no

376
00:17:14,929 --> 00:17:17,569
documentation limit either it's like

377
00:17:16,459 --> 00:17:19,490
come on

378
00:17:17,569 --> 00:17:21,408
use use some other method of protection

379
00:17:19,490 --> 00:17:22,939
know that you're gonna be hacked at some

380
00:17:21,409 --> 00:17:26,839
point what's the other thing that's

381
00:17:22,939 --> 00:17:29,630
gonna stop or it will slow them down and

382
00:17:26,839 --> 00:17:31,549
if your developer meaning you develop an

383
00:17:29,630 --> 00:17:35,270
application or a website or just a

384
00:17:31,549 --> 00:17:36,430
company that has a web presence you got

385
00:17:35,270 --> 00:17:39,150
a watch you know you

386
00:17:36,430 --> 00:17:42,130
know what libraries you using you got a

387
00:17:39,150 --> 00:17:43,960
if there is an issue with them you need

388
00:17:42,130 --> 00:17:47,460
to release your patches promptly as well

389
00:17:43,960 --> 00:17:49,809
and all responsible disclosures meaning

390
00:17:47,460 --> 00:17:51,820
somebody comes to you and says hey your

391
00:17:49,809 --> 00:17:54,280
website is vulnerable and here's how I

392
00:17:51,820 --> 00:17:56,470
can hack it don't just turn them into

393
00:17:54,280 --> 00:17:58,360
your FBI you know work with them because

394
00:17:56,470 --> 00:18:00,970
most people they're trying to help and

395
00:17:58,360 --> 00:18:03,429
that's what we did also we reported this

396
00:18:00,970 --> 00:18:06,670
to security innovation they handle the

397
00:18:03,430 --> 00:18:08,800
situation very professionally they told

398
00:18:06,670 --> 00:18:10,929
us exactly I mean they were respectful

399
00:18:08,800 --> 00:18:13,840
they told us what the planning to do

400
00:18:10,929 --> 00:18:16,559
they asked us to wait on publishing this

401
00:18:13,840 --> 00:18:21,159
until they fix it we complied of course

402
00:18:16,559 --> 00:18:24,428
and it was a very good experience I

403
00:18:21,160 --> 00:18:27,130
think we we said we sent a report like

404
00:18:24,429 --> 00:18:29,820
at 1:00 1:00 a.m. and we got a response

405
00:18:27,130 --> 00:18:32,200
ten minutes later or yeah from a

406
00:18:29,820 --> 00:18:34,899
salesperson their salespeople don't

407
00:18:32,200 --> 00:18:38,040
sleep it was our only point of contact

408
00:18:34,900 --> 00:18:38,040
at the companies

409
00:18:45,790 --> 00:18:51,569
[Applause]

410
00:18:56,720 --> 00:18:58,780
you

