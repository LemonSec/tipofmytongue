1
00:00:13,840 --> 00:00:20,710
I'm Dan Anderson I'm going to talk about

2
00:00:17,820 --> 00:00:24,610
crypto and breaking crypto referendum

3
00:00:20,710 --> 00:00:28,119
number generators the background I've

4
00:00:24,610 --> 00:00:30,730
been working on crypto and security for

5
00:00:28,119 --> 00:00:36,250
about 10 15 years at Sun Microsystems

6
00:00:30,730 --> 00:00:38,200
and later Oracle most recently the whole

7
00:00:36,250 --> 00:00:40,269
project was kind of canceled its lares

8
00:00:38,200 --> 00:00:44,829
and everything and they're now just

9
00:00:40,270 --> 00:00:46,809
admittance mode and that one advantage

10
00:00:44,829 --> 00:00:49,749
that I would freed up a lot of time for

11
00:00:46,809 --> 00:00:50,260
me to work on this presentation so what

12
00:00:49,749 --> 00:00:52,179
did I do

13
00:00:50,260 --> 00:00:56,230
I started fixing up everything around

14
00:00:52,179 --> 00:00:57,969
the house painting gardening drainage

15
00:00:56,230 --> 00:00:59,498
everything but the presentation but it's

16
00:00:57,969 --> 00:01:02,579
it's good because I got everything else

17
00:00:59,499 --> 00:01:05,400
I needed done I also implemented

18
00:01:02,579 --> 00:01:08,729
verified boot on Solaris which Don

19
00:01:05,400 --> 00:01:13,990
verifies kernel modules using RSA

20
00:01:08,729 --> 00:01:16,270
signatures I'm gonna post this

21
00:01:13,990 --> 00:01:22,030
presentation on Twitter and that's my

22
00:01:16,270 --> 00:01:25,890
twitter handle at the bottom so I'm a

23
00:01:22,030 --> 00:01:29,710
common attitude I have IR I see it is

24
00:01:25,890 --> 00:01:31,090
that crypto is broken and there's

25
00:01:29,710 --> 00:01:34,869
nothing that we could do about it

26
00:01:31,090 --> 00:01:37,539
and that's some nice tea from my

27
00:01:34,869 --> 00:01:39,640
technical co-workers you don't work in

28
00:01:37,539 --> 00:01:42,299
security but they have that up to that

29
00:01:39,640 --> 00:01:46,630
all equipped all has backdoors and it's

30
00:01:42,299 --> 00:01:49,119
just that's the way it is but the truth

31
00:01:46,630 --> 00:01:53,679
is the crypto is not broken it's the

32
00:01:49,119 --> 00:01:59,140
math is solid over time you just have to

33
00:01:53,680 --> 00:02:01,659
have longer keys and and some algorithms

34
00:01:59,140 --> 00:02:05,259
especially the early ones like md5 sha-1

35
00:02:01,659 --> 00:02:07,899
they have been been broken but the

36
00:02:05,259 --> 00:02:11,110
current crypto is still working there's

37
00:02:07,899 --> 00:02:14,740
action of course that quantum math and

38
00:02:11,110 --> 00:02:16,720
that I'll talk about a little later but

39
00:02:14,740 --> 00:02:20,380
the important point is it's not

40
00:02:16,720 --> 00:02:23,050
necessary to break crypto there's a lot

41
00:02:20,380 --> 00:02:24,519
of easier methods around it's if you

42
00:02:23,050 --> 00:02:26,640
want to pick the hardest method you

43
00:02:24,519 --> 00:02:30,990
would try to break the math but

44
00:02:26,640 --> 00:02:33,958
some waste of time let's talk about some

45
00:02:30,990 --> 00:02:37,310
other methods I on the social

46
00:02:33,959 --> 00:02:39,660
engineering physical threads blackmail

47
00:02:37,310 --> 00:02:42,720
you could actually take the device

48
00:02:39,660 --> 00:02:45,209
fishing is probably the best way to do

49
00:02:42,720 --> 00:02:47,730
it because it's very easily automated

50
00:02:45,209 --> 00:02:50,160
and you could attack the whole world

51
00:02:47,730 --> 00:02:54,060
there's also side channel leaks that's

52
00:02:50,160 --> 00:02:54,980
where you could listen to the radio ways

53
00:02:54,060 --> 00:03:02,010
or

54
00:02:54,980 --> 00:03:05,179
or or or look for the timing in the

55
00:03:02,010 --> 00:03:08,209
responses and to try to get information

56
00:03:05,180 --> 00:03:13,920
there's also a large databases available

57
00:03:08,209 --> 00:03:15,810
for passwords in hashing and finally

58
00:03:13,920 --> 00:03:18,208
there's poor implementation of crypto

59
00:03:15,810 --> 00:03:20,610
and what I'm going to talk about is this

60
00:03:18,209 --> 00:03:24,630
this one little FAFSA FAFSA bad run

61
00:03:20,610 --> 00:03:28,670
rendering them are generators so all the

62
00:03:24,630 --> 00:03:28,670
other stuff you could see another talks

63
00:03:30,350 --> 00:03:35,010
one problem is crypto is confusing

64
00:03:32,760 --> 00:03:37,590
especially public and private keys you

65
00:03:35,010 --> 00:03:41,429
have two keys and it's very confusing to

66
00:03:37,590 --> 00:03:43,200
people you know if you like do crypto

67
00:03:41,430 --> 00:03:44,790
and send some something that's encrypted

68
00:03:43,200 --> 00:03:47,250
what do you do do some of them the

69
00:03:44,790 --> 00:03:48,840
public key or the private key maybe

70
00:03:47,250 --> 00:03:52,980
should be safe and send them both I

71
00:03:48,840 --> 00:03:56,400
don't know that's what Adobe Adobe has

72
00:03:52,980 --> 00:03:59,190
it they're Security Response some team

73
00:03:56,400 --> 00:04:02,040
you know there's security gurus so what

74
00:03:59,190 --> 00:04:06,420
they do they posted their public key and

75
00:04:02,040 --> 00:04:08,810
private key on the web and that happened

76
00:04:06,420 --> 00:04:12,420
last month they take it took it down but

77
00:04:08,810 --> 00:04:14,760
it's easily you can see I even the

78
00:04:12,420 --> 00:04:17,010
experts can make mistakes and of course

79
00:04:14,760 --> 00:04:18,870
one thing you should not do is throw

80
00:04:17,010 --> 00:04:22,430
your private public key in the same file

81
00:04:18,870 --> 00:04:22,430
it's not a good idea

82
00:04:26,060 --> 00:04:32,370
let's start from the beginnings random

83
00:04:29,970 --> 00:04:35,310
number generators I don't know when they

84
00:04:32,370 --> 00:04:39,210
started but dice have been found from

85
00:04:35,310 --> 00:04:43,050
the 24th century beast BCE so that's

86
00:04:39,210 --> 00:04:46,969
probably the earliest generator in 1950s

87
00:04:43,050 --> 00:04:50,460
RAND Corporation wrote this book a

88
00:04:46,970 --> 00:04:54,500
million random digits and it was

89
00:04:50,460 --> 00:04:58,020
recently republished and night in 2001

90
00:04:54,500 --> 00:05:00,780
and it created that book by using an

91
00:04:58,020 --> 00:05:04,260
electronic roulette wheel and the output

92
00:05:00,780 --> 00:05:08,789
was was punched into several IBM cards

93
00:05:04,260 --> 00:05:11,130
and they published the book from that if

94
00:05:08,790 --> 00:05:12,900
you want to see a lot of funny reviews

95
00:05:11,130 --> 00:05:14,610
you could look at the go to amazon.com

96
00:05:12,900 --> 00:05:17,370
and look at the book reviews for that

97
00:05:14,610 --> 00:05:19,110
like somebody complains that the let me

98
00:05:17,370 --> 00:05:25,710
complain that the page numbers had not

99
00:05:19,110 --> 00:05:28,200
been randomized pseudo-random number

100
00:05:25,710 --> 00:05:30,060
generators were invented by John new von

101
00:05:28,200 --> 00:05:32,090
Neumann you know he invented the

102
00:05:30,060 --> 00:05:36,360
concepts of the modern digital computer

103
00:05:32,090 --> 00:05:38,700
in the 1950s the problem was with his

104
00:05:36,360 --> 00:05:41,490
random number generator is it repeated

105
00:05:38,700 --> 00:05:43,620
very frequently and that's what all

106
00:05:41,490 --> 00:05:46,229
pseudo-random number generators do is

107
00:05:43,620 --> 00:05:49,229
they repeat so the idea is to make them

108
00:05:46,229 --> 00:05:51,900
not repeat for for n bits around digits

109
00:05:49,229 --> 00:05:55,320
and but you just have to be aware of

110
00:05:51,900 --> 00:05:58,169
that problem and true and random number

111
00:05:55,320 --> 00:06:00,469
generators follow then and they usually

112
00:05:58,169 --> 00:06:03,690
take the input from nature like using

113
00:06:00,470 --> 00:06:06,810
heat sensors or something else like that

114
00:06:03,690 --> 00:06:08,910
and finally after that there's crypto

115
00:06:06,810 --> 00:06:11,220
secure rent on pseudo-random number

116
00:06:08,910 --> 00:06:14,160
generators and they have been analyzed

117
00:06:11,220 --> 00:06:17,280
by experts and they have to have these

118
00:06:14,160 --> 00:06:19,610
properties like not repeating after n

119
00:06:17,280 --> 00:06:19,609
bits

120
00:06:24,849 --> 00:06:31,339
randomness there's several ways to tell

121
00:06:28,879 --> 00:06:34,189
if randomness is good and the first

122
00:06:31,339 --> 00:06:36,860
sanity test which is not enough by

123
00:06:34,189 --> 00:06:40,520
itself is just to create a scatter

124
00:06:36,860 --> 00:06:42,319
gather chart I just got some random

125
00:06:40,520 --> 00:06:44,058
numbers and converted into comma

126
00:06:42,319 --> 00:06:47,689
separated variables and imported them

127
00:06:44,059 --> 00:06:51,529
into my open alpha spreadsheet knew you

128
00:06:47,689 --> 00:06:53,930
could do that with Excel to now ran

129
00:06:51,529 --> 00:06:55,539
remembers that I'm going to do this and

130
00:06:53,930 --> 00:06:57,649
that's supposed to see any geometric

131
00:06:55,539 --> 00:06:59,659
patterns in there and if you looked at

132
00:06:57,649 --> 00:07:02,330
early random number generators

133
00:06:59,659 --> 00:07:07,669
especially from 1020 years ago you would

134
00:07:02,330 --> 00:07:09,529
see lines in the chart it also is not

135
00:07:07,669 --> 00:07:13,849
supposed to be perfect for example we

136
00:07:09,529 --> 00:07:16,099
see yeah which is okay if it's perfectly

137
00:07:13,849 --> 00:07:17,479
distributed I would mean you could be

138
00:07:16,099 --> 00:07:19,909
able to predict some of the random

139
00:07:17,479 --> 00:07:27,229
number generator members generated

140
00:07:19,909 --> 00:07:31,308
towards the end NIST which is the US

141
00:07:27,229 --> 00:07:32,748
government standards organization they

142
00:07:31,309 --> 00:07:35,959
have a test suite where you could um

143
00:07:32,749 --> 00:07:38,659
take take them your random numbers and

144
00:07:35,959 --> 00:07:40,869
see if their their values according to

145
00:07:38,659 --> 00:07:44,539
them and you can also use this

146
00:07:40,869 --> 00:07:47,779
statistical analysis on it the the best

147
00:07:44,539 --> 00:07:51,169
bet is on is you actually analyze the

148
00:07:47,779 --> 00:07:54,558
code that actually analyzed algorithm to

149
00:07:51,169 --> 00:07:57,438
see if it's valid and and that's usually

150
00:07:54,559 --> 00:08:03,969
best done with a public discussion and

151
00:07:57,439 --> 00:08:05,990
not in some private secret group okay

152
00:08:03,969 --> 00:08:10,699
I'm going to talk about three different

153
00:08:05,990 --> 00:08:12,079
RSA's and this is the confusion but

154
00:08:10,699 --> 00:08:15,199
there's three to three of them there's

155
00:08:12,079 --> 00:08:18,409
RSA algorithm RSA the conference RSA the

156
00:08:15,199 --> 00:08:21,259
company RSA the algorithm that was

157
00:08:18,409 --> 00:08:25,339
invented in 1978 it was actually

158
00:08:21,259 --> 00:08:26,990
invented in 1973 by the British but is

159
00:08:25,339 --> 00:08:29,479
kept secret there was a top secret

160
00:08:26,990 --> 00:08:32,149
algorithm and so these people in the

161
00:08:29,479 --> 00:08:33,468
u.s. invented it five years later they

162
00:08:32,149 --> 00:08:33,770
didn't know about the earlier invention

163
00:08:33,469 --> 00:08:37,760
because

164
00:08:33,770 --> 00:08:41,088
secret but RSA is a pub is a public

165
00:08:37,760 --> 00:08:43,189
private crypto algorithm so you have a

166
00:08:41,089 --> 00:08:45,649
private key and a public key you encrypt

167
00:08:43,190 --> 00:08:47,750
with the private key and you give it to

168
00:08:45,649 --> 00:08:49,700
somebody else and they could decrypt it

169
00:08:47,750 --> 00:08:53,360
or anybody else could deep decrypt it

170
00:08:49,700 --> 00:08:57,589
with the public it's very robust it's

171
00:08:53,360 --> 00:09:01,790
been around forever the main flaw with

172
00:08:57,589 --> 00:09:04,730
RSA is humans they leak keys and they

173
00:09:01,790 --> 00:09:07,550
don't store keys properly I've worked in

174
00:09:04,730 --> 00:09:10,850
hardware a lot in operating systems and

175
00:09:07,550 --> 00:09:13,640
one thing I found with with a lot of

176
00:09:10,850 --> 00:09:16,339
computer manufacturers is is they have

177
00:09:13,640 --> 00:09:18,680
biases you know for booting everything

178
00:09:16,339 --> 00:09:20,209
and they sign their BIOS but they don't

179
00:09:18,680 --> 00:09:21,709
care about the private key they just

180
00:09:20,209 --> 00:09:24,410
keep it on your hard drive or the home

181
00:09:21,709 --> 00:09:26,329
directory so you could probably for any

182
00:09:24,410 --> 00:09:28,839
BIOS manufacturer eventually snoop

183
00:09:26,330 --> 00:09:31,100
around and find their private keys they

184
00:09:28,839 --> 00:09:34,700
don't store it very well you're supposed

185
00:09:31,100 --> 00:09:38,810
to store it on in a physical stay for an

186
00:09:34,700 --> 00:09:43,940
HSN which is a secure way of storing

187
00:09:38,810 --> 00:09:46,430
keys secure hardware and also as I

188
00:09:43,940 --> 00:09:50,329
mentioned for it's a hard concept to

189
00:09:46,430 --> 00:09:54,469
grasp um especially for the public RSA

190
00:09:50,329 --> 00:09:57,649
is also not quantum safe so supposedly

191
00:09:54,470 --> 00:10:00,589
it would work for next say 20 years or

192
00:09:57,649 --> 00:10:03,709
so but after that it probably won't work

193
00:10:00,589 --> 00:10:09,140
its best in the meantime to use long RSA

194
00:10:03,709 --> 00:10:14,779
keys on 2048 or 342 you could try 4096

195
00:10:09,140 --> 00:10:16,399
but that's kind of very slow okay now

196
00:10:14,779 --> 00:10:19,820
we're talking about RSA the conference

197
00:10:16,399 --> 00:10:22,700
that's in San Francisco and it's kind of

198
00:10:19,820 --> 00:10:25,490
tainted a little bit they the emphasis

199
00:10:22,700 --> 00:10:28,130
is on comedian and actor keynotes

200
00:10:25,490 --> 00:10:30,649
I like comedians and actors too but I

201
00:10:28,130 --> 00:10:34,540
don't go to a conference for technical

202
00:10:30,649 --> 00:10:36,890
content I can see them on TV

203
00:10:34,540 --> 00:10:38,630
fortunately they got rid of the booth

204
00:10:36,890 --> 00:10:41,569
babes or whatever so I'm more

205
00:10:38,630 --> 00:10:45,410
professional but still it's it's there's

206
00:10:41,570 --> 00:10:47,769
a lot of sales hype too so they kind of

207
00:10:45,410 --> 00:10:49,719
emphasize more buying somebody

208
00:10:47,769 --> 00:10:52,540
device that will solve all your problems

209
00:10:49,720 --> 00:10:54,100
as opposed to technical content they

210
00:10:52,540 --> 00:10:56,139
still have technical content but it

211
00:10:54,100 --> 00:10:59,439
seems like it's overshadowed by this

212
00:10:56,139 --> 00:11:02,470
other stuff our RSA security that

213
00:10:59,439 --> 00:11:04,899
company they were formed after RSA was

214
00:11:02,470 --> 00:11:09,220
created they they started with her RSA

215
00:11:04,899 --> 00:11:10,959
the algorithm and sold that and RSA was

216
00:11:09,220 --> 00:11:13,660
later bought by ECC and now it's owned

217
00:11:10,959 --> 00:11:16,299
by Dale corporation they had this

218
00:11:13,660 --> 00:11:19,949
product called be safe which is their

219
00:11:16,299 --> 00:11:27,309
secure crypto library

220
00:11:19,949 --> 00:11:33,309
it had algorithm called dual ec drbg and

221
00:11:27,309 --> 00:11:35,579
but unfortunately the NSA paid them ten

222
00:11:33,309 --> 00:11:42,910
million dollars to put it in there and

223
00:11:35,579 --> 00:11:45,309
they also created algorithm they they

224
00:11:42,910 --> 00:11:48,160
went to an Zi which is kind of a closed

225
00:11:45,309 --> 00:11:50,738
source standards organization and had a

226
00:11:48,160 --> 00:11:53,529
standard approved then they had missed

227
00:11:50,739 --> 00:11:54,790
approved that standard but all the

228
00:11:53,529 --> 00:11:57,850
people who created the standard were

229
00:11:54,790 --> 00:12:02,379
from now and I say so I was very

230
00:11:57,850 --> 00:12:04,480
suspicious and that code that backdoor

231
00:12:02,379 --> 00:12:08,199
code their vector a random number

232
00:12:04,480 --> 00:12:14,079
generator is in there for almost nine

233
00:12:08,199 --> 00:12:17,618
years until 2013 okay let's talk about

234
00:12:14,079 --> 00:12:18,429
breaking crypto that the you start with

235
00:12:17,619 --> 00:12:22,360
brute force

236
00:12:18,429 --> 00:12:25,480
so brute force is just trying every

237
00:12:22,360 --> 00:12:27,009
possibility there is one at a time and

238
00:12:25,480 --> 00:12:29,379
that just gives you an existence proof

239
00:12:27,009 --> 00:12:31,829
that you could break it but it's not

240
00:12:29,379 --> 00:12:35,889
very practical on you want a solution

241
00:12:31,829 --> 00:12:38,169
that will you want to have a solution

242
00:12:35,889 --> 00:12:42,399
before the Sun turns into a red giant

243
00:12:38,169 --> 00:12:44,639
five billion years from now so so you

244
00:12:42,399 --> 00:12:49,449
try to chip away from the possibilities

245
00:12:44,639 --> 00:12:54,579
and one way of chipping away is is well

246
00:12:49,449 --> 00:12:56,919
the key and generating keys is using

247
00:12:54,579 --> 00:12:58,899
random numbers you just you take random

248
00:12:56,919 --> 00:13:00,520
numbers and try each one see if they

249
00:12:58,899 --> 00:13:04,180
work it's if you there

250
00:13:00,520 --> 00:13:06,610
I'm number and everything and if your

251
00:13:04,180 --> 00:13:10,170
input random number input is predictable

252
00:13:06,610 --> 00:13:15,790
your keys are predictable so all that's

253
00:13:10,170 --> 00:13:18,640
and in fact in 2012 somebody tried to

254
00:13:15,790 --> 00:13:20,500
harvest all the SSL keys on on the web

255
00:13:18,640 --> 00:13:22,660
that they could find and they found that

256
00:13:20,500 --> 00:13:25,240
almost a half percent of all the keys

257
00:13:22,660 --> 00:13:28,300
were duplicates that kind of implies

258
00:13:25,240 --> 00:13:30,970
there's a lot of sharing or that a lot

259
00:13:28,300 --> 00:13:36,599
of the key generation is no good because

260
00:13:30,970 --> 00:13:39,520
they use flawed random number generator

261
00:13:36,600 --> 00:13:42,460
so let's talk about remnant number

262
00:13:39,520 --> 00:13:45,910
generation in Trophy is a term that

263
00:13:42,460 --> 00:13:48,820
people use in crypto to talk about the

264
00:13:45,910 --> 00:13:51,069
input for random numbers and that's just

265
00:13:48,820 --> 00:13:53,740
it's taking numbers from the nature or

266
00:13:51,070 --> 00:13:57,190
any other source you could fine and mix

267
00:13:53,740 --> 00:13:59,200
them together to a random pool but

268
00:13:57,190 --> 00:14:01,150
problem is is if you get input if your

269
00:13:59,200 --> 00:14:03,310
garbage in garbage out if your input

270
00:14:01,150 --> 00:14:08,439
your in trophy is bad your random

271
00:14:03,310 --> 00:14:12,579
numbers won't be bad and much software

272
00:14:08,440 --> 00:14:14,950
has had port in trophy wanted at one

273
00:14:12,580 --> 00:14:18,250
time or another I don't want to go over

274
00:14:14,950 --> 00:14:21,130
each problem but here's there's common

275
00:14:18,250 --> 00:14:24,010
problems are found using session IDs or

276
00:14:21,130 --> 00:14:26,340
process IDs those are usually very low

277
00:14:24,010 --> 00:14:29,530
numbers when you first boot a system

278
00:14:26,340 --> 00:14:32,590
mostly zeros same with the clock that

279
00:14:29,530 --> 00:14:36,730
sometimes starts at 0 or at a fixed date

280
00:14:32,590 --> 00:14:39,270
like 1980 1970 whatever 2000 clock

281
00:14:36,730 --> 00:14:41,320
resolution if you use that that's that's

282
00:14:39,270 --> 00:14:43,960
could be fine if you have a high

283
00:14:41,320 --> 00:14:46,930
resolution clock but it's rarely your

284
00:14:43,960 --> 00:14:50,380
clock is rarely down to 1 nanosecond and

285
00:14:46,930 --> 00:14:52,449
some clocks don't go down to 1 seconds

286
00:14:50,380 --> 00:14:57,520
so your high resolution clock is mostly

287
00:14:52,450 --> 00:14:59,740
zeros and one bit on or something also

288
00:14:57,520 --> 00:15:03,640
sometimes used as a random input disk

289
00:14:59,740 --> 00:15:06,730
seek times your keyboard your mouse and

290
00:15:03,640 --> 00:15:08,410
that's all good for desktops it doesn't

291
00:15:06,730 --> 00:15:10,750
work for servers it doesn't work for

292
00:15:08,410 --> 00:15:13,370
embedded devices Internet of Things

293
00:15:10,750 --> 00:15:15,650
because it doesn't have any peripherals

294
00:15:13,370 --> 00:15:17,330
so it's all missing temperature sensors

295
00:15:15,650 --> 00:15:19,520
and other sources of course when you

296
00:15:17,330 --> 00:15:22,220
first boot a system it's the kind of

297
00:15:19,520 --> 00:15:25,340
known temperature is pretty cold so

298
00:15:22,220 --> 00:15:28,610
that's kind of predictable so you don't

299
00:15:25,340 --> 00:15:37,850
want to use a lot of this stuff is just

300
00:15:28,610 --> 00:15:40,880
bad for for your interested rolling your

301
00:15:37,850 --> 00:15:43,070
own number generator is is kind of bad

302
00:15:40,880 --> 00:15:44,390
and risky um let's talk about Debian

303
00:15:43,070 --> 00:15:46,010
Linux

304
00:15:44,390 --> 00:15:50,840
they broke the random number generator

305
00:15:46,010 --> 00:15:52,939
in 2006 somebody on an Adobe entomb ran

306
00:15:50,840 --> 00:15:56,260
the static source analyzer and that does

307
00:15:52,940 --> 00:15:59,360
a lot of good things like looking for

308
00:15:56,260 --> 00:16:02,319
corrupt pointers around initialized data

309
00:15:59,360 --> 00:16:05,030
or duplicate code code well this

310
00:16:02,320 --> 00:16:07,940
analyzer flags some duplicate code so

311
00:16:05,030 --> 00:16:10,430
the guy just deleted the duplicate code

312
00:16:07,940 --> 00:16:14,420
except in this case that code was really

313
00:16:10,430 --> 00:16:16,849
needed and it created a bug and that was

314
00:16:14,420 --> 00:16:19,250
not discovered until several years later

315
00:16:16,850 --> 00:16:21,860
I didn't put down the date there on the

316
00:16:19,250 --> 00:16:23,600
OpenBSD project got tired of problems

317
00:16:21,860 --> 00:16:26,600
not only with Debian Linux by all the

318
00:16:23,600 --> 00:16:28,700
other operating system manufacturers

319
00:16:26,600 --> 00:16:30,830
with poor random number generation so

320
00:16:28,700 --> 00:16:33,440
they had idea we will just invent our

321
00:16:30,830 --> 00:16:35,930
own by just inventing your own doesn't

322
00:16:33,440 --> 00:16:39,350
mean it's good they created this

323
00:16:35,930 --> 00:16:43,370
algorithm or function arc for random

324
00:16:39,350 --> 00:16:46,430
2008 it's based on Northfork crypto

325
00:16:43,370 --> 00:16:49,100
algorithm which was originally a secret

326
00:16:46,430 --> 00:16:53,329
invented by a secret algorithms and by

327
00:16:49,100 --> 00:16:55,010
RSA Labs in 1987 and it was a reverse

328
00:16:53,330 --> 00:16:59,180
engineered by somebody a few years later

329
00:16:55,010 --> 00:17:01,910
looking at the object but it really is a

330
00:16:59,180 --> 00:17:05,109
poor crypto algorithm it's not used

331
00:17:01,910 --> 00:17:10,190
anymore it's a very fast algorithm but

332
00:17:05,109 --> 00:17:12,609
it has problems as in key attack sirs

333
00:17:10,190 --> 00:17:13,880
are several ways of to attack RSA our

334
00:17:12,609 --> 00:17:16,369
rc4

335
00:17:13,880 --> 00:17:19,040
that have been discovered from 2001 to

336
00:17:16,369 --> 00:17:23,060
2015 you could hook them all up on on

337
00:17:19,040 --> 00:17:24,790
this wiki page also rc4 is equip program

338
00:17:23,060 --> 00:17:27,639
there's never intended as

339
00:17:24,790 --> 00:17:29,440
Oh generator and output is not uniforms

340
00:17:27,640 --> 00:17:31,570
you if you take that output and put on

341
00:17:29,440 --> 00:17:34,660
that scatter gathered short short you'll

342
00:17:31,570 --> 00:17:39,850
see a lot of dark and whites plots on

343
00:17:34,660 --> 00:17:42,250
your your graph and on your form is as

344
00:17:39,850 --> 00:17:43,810
bad because that means you kind of

345
00:17:42,250 --> 00:17:46,410
easier to predict your random numbers

346
00:17:43,810 --> 00:17:50,710
and reinterpret predicted it's easier to

347
00:17:46,410 --> 00:17:55,030
to break crypto when it depends on your

348
00:17:50,710 --> 00:17:57,190
end numbers OpenBSD replaced our c4 with

349
00:17:55,030 --> 00:18:00,670
another algorithm for our Berlin called

350
00:17:57,190 --> 00:18:02,380
cha-cha 20 a couple years ago and it

351
00:18:00,670 --> 00:18:05,020
seems to work better but that's just a

352
00:18:02,380 --> 00:18:07,240
lesson as dangerous to invent your own

353
00:18:05,020 --> 00:18:09,900
I'm gonna invent your own crypto but

354
00:18:07,240 --> 00:18:12,940
invent your own random number generator

355
00:18:09,900 --> 00:18:19,210
now there's still code code out there

356
00:18:12,940 --> 00:18:21,820
that uses the old version of rc4 that's

357
00:18:19,210 --> 00:18:25,300
tomato entropy entropy is not all alike

358
00:18:21,820 --> 00:18:30,939
so you want to try to figure out how how

359
00:18:25,300 --> 00:18:32,320
much entropy is in your input we you

360
00:18:30,940 --> 00:18:34,330
generate random number numbers

361
00:18:32,320 --> 00:18:35,980
simplifies you mix all your I'm two feet

362
00:18:34,330 --> 00:18:40,689
together you do some stuff and you have

363
00:18:35,980 --> 00:18:43,960
a random number pool and mixing is often

364
00:18:40,690 --> 00:18:46,300
performed by XOR and in your extracting

365
00:18:43,960 --> 00:18:51,940
fee for you using some crypto algorithms

366
00:18:46,300 --> 00:18:53,770
or like each Mac or CBC Mac but you need

367
00:18:51,940 --> 00:18:56,320
estimate your interface let's take a

368
00:18:53,770 --> 00:18:58,900
simple example of passwords let's assume

369
00:18:56,320 --> 00:19:00,010
your passwords are always lowercase and

370
00:18:58,900 --> 00:19:03,310
often they are unless there's a

371
00:19:00,010 --> 00:19:06,430
restriction there's only 26 characters

372
00:19:03,310 --> 00:19:08,649
to choose from so you could ask me to

373
00:19:06,430 --> 00:19:12,040
dance trophy or square root of 22 6

374
00:19:08,650 --> 00:19:14,050
that's around 5 bits so you don't get

375
00:19:12,040 --> 00:19:17,129
your full 8 bits of entropy in a byte

376
00:19:14,050 --> 00:19:19,629
you only get five out of the eight so

377
00:19:17,130 --> 00:19:21,130
and that's you could do that with any

378
00:19:19,630 --> 00:19:23,230
other interface source you try to

379
00:19:21,130 --> 00:19:27,370
estimate how much randomness there

380
00:19:23,230 --> 00:19:29,920
actually isn't isn't there so let's talk

381
00:19:27,370 --> 00:19:32,500
about drool you see drbg which I

382
00:19:29,920 --> 00:19:37,300
mentioned again that's a deterministic

383
00:19:32,500 --> 00:19:40,990
random bit generator ECC based

384
00:19:37,300 --> 00:19:45,010
as I said before is based on the X 982

385
00:19:40,990 --> 00:19:48,010
standard anji again is a closed standard

386
00:19:45,010 --> 00:19:50,980
so has just done by this closed working

387
00:19:48,010 --> 00:19:54,370
group that consisted completely of NSA

388
00:19:50,980 --> 00:19:57,760
people and was approved by angie the

389
00:19:54,370 --> 00:20:04,239
nist US government standards board just

390
00:19:57,760 --> 00:20:06,310
adopted the standard unchanged so the P

391
00:20:04,240 --> 00:20:08,200
and Q values which are used in

392
00:20:06,310 --> 00:20:13,290
initialization are hard-coded in the

393
00:20:08,200 --> 00:20:16,420
standard and that's a problem because

394
00:20:13,290 --> 00:20:18,190
they put it back door when you use those

395
00:20:16,420 --> 00:20:20,380
P and Q standards and made them easier

396
00:20:18,190 --> 00:20:25,150
to to know what random numbers were

397
00:20:20,380 --> 00:20:27,850
generated as far as we were concerned in

398
00:20:25,150 --> 00:20:29,260
Solaris we did not implement it in our

399
00:20:27,850 --> 00:20:33,129
operating system because there was just

400
00:20:29,260 --> 00:20:36,220
so slow they had about five different

401
00:20:33,130 --> 00:20:37,960
options for bit generators and we just

402
00:20:36,220 --> 00:20:41,170
didn't implement that one there was

403
00:20:37,960 --> 00:20:44,730
other ones out there that have been out

404
00:20:41,170 --> 00:20:48,820
there for years and are tried-and-true

405
00:20:44,730 --> 00:20:50,440
and open SSL they they did implement it

406
00:20:48,820 --> 00:20:52,990
because somebody paid them some money

407
00:20:50,440 --> 00:20:55,000
and of course open SSL is open source

408
00:20:52,990 --> 00:20:56,890
and they're desperate for money and

409
00:20:55,000 --> 00:20:59,500
stuff they only have a couple developers

410
00:20:56,890 --> 00:21:02,140
so they were paid to implement all the

411
00:20:59,500 --> 00:21:06,160
bit generation algorithms in the

412
00:21:02,140 --> 00:21:08,500
standard but fortunately there was a bug

413
00:21:06,160 --> 00:21:10,690
early do you say your fortunately

414
00:21:08,500 --> 00:21:13,390
there's a bug in there but because of

415
00:21:10,690 --> 00:21:15,220
there's that bug that the random number

416
00:21:13,390 --> 00:21:18,310
generator did not work and so the

417
00:21:15,220 --> 00:21:20,110
backdoor did not work so and later when

418
00:21:18,310 --> 00:21:22,270
there was found to fixing the bug was in

419
00:21:20,110 --> 00:21:27,370
one line bug they just deleted all their

420
00:21:22,270 --> 00:21:31,230
code the algorithm itself has been

421
00:21:27,370 --> 00:21:34,090
suspected since 2007 Microsoft Research

422
00:21:31,230 --> 00:21:37,830
you could look it up and they they had

423
00:21:34,090 --> 00:21:37,830
some doubts about that algorithm

424
00:21:40,600 --> 00:21:46,779
okay as far as implementing algorithm is

425
00:21:44,639 --> 00:21:49,029
if you want to implement the algorithm

426
00:21:46,779 --> 00:21:52,179
ever use it you should choose your own P

427
00:21:49,029 --> 00:21:54,009
and Q but nobody did and in fact that's

428
00:21:52,179 --> 00:21:57,429
true in January you try to if you have

429
00:21:54,009 --> 00:21:59,950
option to choose your initial IV your

430
00:21:57,429 --> 00:22:03,309
initial vectors or initial numbers you

431
00:21:59,950 --> 00:22:05,740
should do that over the over a number of

432
00:22:03,309 --> 00:22:08,470
recommended and standard especially that

433
00:22:05,740 --> 00:22:14,769
standard does not tell you how to drive

434
00:22:08,470 --> 00:22:16,990
it okay this kind of repeat duplicate

435
00:22:14,769 --> 00:22:19,870
slides here okay

436
00:22:16,990 --> 00:22:22,779
as I said ten million dollars or state

437
00:22:19,870 --> 00:22:26,559
denies that they knew anything about

438
00:22:22,779 --> 00:22:32,950
this but they did gladly take million

439
00:22:26,559 --> 00:22:35,220
ten million dollars from the NSA and

440
00:22:32,950 --> 00:22:39,100
they did make it the default algorithm

441
00:22:35,220 --> 00:22:40,570
even though it's slow and unproven they

442
00:22:39,100 --> 00:22:43,649
made it to default so it's very

443
00:22:40,570 --> 00:22:46,720
suspicious to me

444
00:22:43,649 --> 00:22:50,199
breaking crypto refrán the numbers I'm

445
00:22:46,720 --> 00:22:51,940
running out of time here Renne magic

446
00:22:50,200 --> 00:22:53,320
number referred to mysterious numbers

447
00:22:51,940 --> 00:22:55,210
you don't know where they come from and

448
00:22:53,320 --> 00:22:58,000
they're using crypto algorithm rhythms

449
00:22:55,210 --> 00:23:00,279
be where are magic numbers if you find

450
00:22:58,000 --> 00:23:03,669
one on a standard ask where that magic

451
00:23:00,279 --> 00:23:07,240
number came come from for example on

452
00:23:03,669 --> 00:23:09,549
sha-256 it uses as magic numbers and on

453
00:23:07,240 --> 00:23:11,769
the first 32 bits of the fractional part

454
00:23:09,549 --> 00:23:13,690
of square roots of the first eight prime

455
00:23:11,769 --> 00:23:15,700
numbers that's hard to fake

456
00:23:13,690 --> 00:23:17,919
so that's sounds pretty good but and

457
00:23:15,700 --> 00:23:20,200
there's you see similar stuff and other

458
00:23:17,919 --> 00:23:22,360
legitimate crypto algorithms that tell

459
00:23:20,200 --> 00:23:29,080
you how they came up with those random

460
00:23:22,360 --> 00:23:31,689
numbers okay until Rd ran that's their

461
00:23:29,080 --> 00:23:35,080
ran remember instruction until

462
00:23:31,690 --> 00:23:37,110
self-certified that their new random

463
00:23:35,080 --> 00:23:41,799
instruction meets all these standards

464
00:23:37,110 --> 00:23:43,629
nist SP 800 well that's fine but

465
00:23:41,799 --> 00:23:46,090
self-certification does not mean

466
00:23:43,629 --> 00:23:49,519
anything I could self certify that my

467
00:23:46,090 --> 00:23:54,539
dog here also meets the standard

468
00:23:49,519 --> 00:23:56,789
you need a third party to active to

469
00:23:54,539 --> 00:24:01,110
actually say that this meets a standard

470
00:23:56,789 --> 00:24:03,720
they can also contributed the changes so

471
00:24:01,110 --> 00:24:05,879
we could use it on Solaris but later on

472
00:24:03,720 --> 00:24:10,470
when we found out about this mischief we

473
00:24:05,880 --> 00:24:12,779
kind of changed it to use it as entropy

474
00:24:10,470 --> 00:24:15,029
input so that you'd do some later

475
00:24:12,779 --> 00:24:18,360
processing to mix everything up and

476
00:24:15,029 --> 00:24:20,610
that's the approach that Linux did from

477
00:24:18,360 --> 00:24:23,039
the beginning and free FreeBSD also

478
00:24:20,610 --> 00:24:26,250
change their code to them

479
00:24:23,039 --> 00:24:28,710
mix up the input of our dear Ann and not

480
00:24:26,250 --> 00:24:32,549
used that input directly and that seems

481
00:24:28,710 --> 00:24:34,679
to be good enough there's a suspicion

482
00:24:32,549 --> 00:24:37,320
you know about our dear Ann Intel's our

483
00:24:34,679 --> 00:24:39,350
dear Ann that NSA did they introduced

484
00:24:37,320 --> 00:24:42,090
the backdoor into it

485
00:24:39,350 --> 00:24:44,580
some of the Snowden papers revealed that

486
00:24:42,090 --> 00:24:47,220
the NSA and the GCHQ that's a British

487
00:24:44,580 --> 00:24:50,759
equivalent broke an unnamed chipset

488
00:24:47,220 --> 00:24:52,740
there was in the design stage there's

489
00:24:50,759 --> 00:24:57,350
four micro processors I know they have

490
00:24:52,740 --> 00:25:00,360
random numbers in it until AMD via spark

491
00:24:57,350 --> 00:25:03,120
now forgive rule out time travel that

492
00:25:00,360 --> 00:25:06,928
takes out two of the candidates spark

493
00:25:03,120 --> 00:25:10,768
was 2006 and AMD was after the fact 2015

494
00:25:06,929 --> 00:25:12,389
so we have two more via ok there that

495
00:25:10,769 --> 00:25:15,360
was designed and created in a Czech

496
00:25:12,389 --> 00:25:17,850
Republic Intel was designed and created

497
00:25:15,360 --> 00:25:21,529
in the United States now if I were as a

498
00:25:17,850 --> 00:25:24,600
USA spy organization who would it by be

499
00:25:21,529 --> 00:25:26,309
who would be more easier to subvert the

500
00:25:24,600 --> 00:25:29,459
check somebody in a Czech Republic or

501
00:25:26,309 --> 00:25:32,908
the United States so but until I think

502
00:25:29,460 --> 00:25:36,149
denies it and there's no smoking gun so

503
00:25:32,909 --> 00:25:39,320
you've got to decide for yourself also

504
00:25:36,149 --> 00:25:41,340
until later and permitted a Rd seed

505
00:25:39,320 --> 00:25:43,908
instruction which is used for seeding

506
00:25:41,340 --> 00:25:50,908
random numbers which is supposed to be

507
00:25:43,909 --> 00:25:53,789
better nonces nuts means once a number

508
00:25:50,909 --> 00:25:56,070
that you used once and it really means

509
00:25:53,789 --> 00:25:59,158
that it doesn't mean use it twice three

510
00:25:56,070 --> 00:26:00,990
times four times means once it doesn't

511
00:25:59,159 --> 00:26:02,370
have to be a random number it could be a

512
00:26:00,990 --> 00:26:02,970
sequential number one two three four

513
00:26:02,370 --> 00:26:05,189
five

514
00:26:02,970 --> 00:26:07,169
but you better never ever use one two

515
00:26:05,190 --> 00:26:11,480
three four five again even after

516
00:26:07,169 --> 00:26:13,740
rebooting even among several systems

517
00:26:11,480 --> 00:26:15,059
these he's just ready to generate

518
00:26:13,740 --> 00:26:17,520
announces with a random number

519
00:26:15,059 --> 00:26:19,590
especially one that's real long because

520
00:26:17,520 --> 00:26:23,010
I go even a 32-bit random number that's

521
00:26:19,590 --> 00:26:25,559
to 1/32 it's you won't repeat that ever

522
00:26:23,010 --> 00:26:28,740
unless you're on number generators as

523
00:26:25,559 --> 00:26:31,350
bad but ran being random is not

524
00:26:28,740 --> 00:26:33,690
sufficient it can't be a constant random

525
00:26:31,350 --> 00:26:37,918
number so you can't put the nonce value

526
00:26:33,690 --> 00:26:40,169
in your code and expect it to work as

527
00:26:37,919 --> 00:26:41,970
exercises a user you could go to github

528
00:26:40,169 --> 00:26:44,880
or any other your favorite source

529
00:26:41,970 --> 00:26:47,190
repositories and look for not to see if

530
00:26:44,880 --> 00:26:49,110
you could find where they hard card it I

531
00:26:47,190 --> 00:26:52,140
found it once in a code review

532
00:26:49,110 --> 00:26:55,139
I haven't searched github but it's a

533
00:26:52,140 --> 00:26:57,179
common mistake a nonce can't also be

534
00:26:55,140 --> 00:27:02,460
usually guess it just can't take time of

535
00:26:57,179 --> 00:27:07,230
day or your process ID as a recent flaw

536
00:27:02,460 --> 00:27:09,780
found in W wpa2 you know your Wi-Fi the

537
00:27:07,230 --> 00:27:11,549
crypto called crack and that replaced

538
00:27:09,780 --> 00:27:14,639
your nights on error conditions and

539
00:27:11,549 --> 00:27:19,470
that's not OK even an error conditions

540
00:27:14,640 --> 00:27:22,440
you can't reuse your your nights TPM

541
00:27:19,470 --> 00:27:25,260
that's the security chip trusted

542
00:27:22,440 --> 00:27:26,580
platform module that does crypto and

543
00:27:25,260 --> 00:27:30,450
lots of other things are called the

544
00:27:26,580 --> 00:27:33,750
Swiss Army knife of crypto there's some

545
00:27:30,450 --> 00:27:35,970
problems with it what if you just one

546
00:27:33,750 --> 00:27:37,980
manufacturer get something wrong that

547
00:27:35,970 --> 00:27:40,820
could cause a lot of damage or what if

548
00:27:37,980 --> 00:27:45,270
one manufacturer is subverted by some

549
00:27:40,820 --> 00:27:47,730
government organization you're just

550
00:27:45,270 --> 00:27:50,840
trusting a black box there how do you

551
00:27:47,730 --> 00:27:54,450
break a TPM it's a side-channel attacks

552
00:27:50,840 --> 00:27:56,760
it has a very slow bus they all PC lopen

553
00:27:54,450 --> 00:28:01,950
camp bus when runs a three through

554
00:27:56,760 --> 00:28:03,690
megahertz that means it's easy to probe

555
00:28:01,950 --> 00:28:05,880
you could actually probe it directly

556
00:28:03,690 --> 00:28:09,480
there's only four data pins out there or

557
00:28:05,880 --> 00:28:13,149
you could try to use monitor for radio

558
00:28:09,480 --> 00:28:15,950
ways or power frequency or something

559
00:28:13,149 --> 00:28:17,928
the OPC also has no checksum so it's

560
00:28:15,950 --> 00:28:23,419
just data doubt going out there and it

561
00:28:17,929 --> 00:28:25,639
clear there's awesome yes okay

562
00:28:23,419 --> 00:28:28,309
I'll speed it up there's also virtual TP

563
00:28:25,639 --> 00:28:30,709
and Rich's could be it's averted more

564
00:28:28,309 --> 00:28:33,529
easily because it's software the current

565
00:28:30,710 --> 00:28:35,419
Infineon ship has a flaw in it from RSA

566
00:28:33,529 --> 00:28:37,639
key generation but that's just not from

567
00:28:35,419 --> 00:28:43,330
random number generators but that's just

568
00:28:37,639 --> 00:28:44,600
from using a low exponent so TPM is a

569
00:28:43,330 --> 00:28:46,970
pro-forma

570
00:28:44,600 --> 00:28:50,209
checkbox security that's there just

571
00:28:46,970 --> 00:28:51,889
because they have to have it that's then

572
00:28:50,210 --> 00:28:55,299
in my talk I'm going to post this on my

573
00:28:51,889 --> 00:28:58,959
Twitter feed clogging a couple days that

574
00:28:55,299 --> 00:28:58,960
Dan Anderson

575
00:29:09,299 --> 00:29:11,360
you

