1
00:00:13,560 --> 00:00:19,200
I I guess I just wanted to talk

2
00:00:16,830 --> 00:00:21,360
reverse engineering like you know like

3
00:00:19,200 --> 00:00:23,040
like the introduction said I I think

4
00:00:21,360 --> 00:00:24,600
reverse engineering is is pretty

5
00:00:23,040 --> 00:00:27,150
important and I like spending a lot of

6
00:00:24,600 --> 00:00:28,380
time doing it and I think maybe it would

7
00:00:27,150 --> 00:00:30,000
be useful to have a slightly different

8
00:00:28,380 --> 00:00:32,549
way of thinking about it you know

9
00:00:30,000 --> 00:00:34,290
something that's less a very specialty

10
00:00:32,549 --> 00:00:36,300
tool that we use for kind of crafting

11
00:00:34,290 --> 00:00:38,280
these like really awesome exploits or

12
00:00:36,300 --> 00:00:42,930
whatever and more just part of learning

13
00:00:38,280 --> 00:00:44,730
how computers work so yeah that's pretty

14
00:00:42,930 --> 00:00:48,120
much for going but I mean like hawkers

15
00:00:44,730 --> 00:00:50,010
are so cool right like like I don't know

16
00:00:48,120 --> 00:00:53,339
anybody else feel like a hacker here I

17
00:00:50,010 --> 00:01:08,190
mean I don't know like these guys are

18
00:00:53,339 --> 00:01:10,289
cool yeah I mean like these guys are

19
00:01:08,190 --> 00:01:13,020
cool right I think I think a lot of them

20
00:01:10,290 --> 00:01:15,869
are actually jerks and I don't know

21
00:01:13,020 --> 00:01:17,580
maybe a lot of us are jerks too but I

22
00:01:15,869 --> 00:01:18,780
think the main thing is that we're kind

23
00:01:17,580 --> 00:01:19,979
of misunderstood and there are a lot of

24
00:01:18,780 --> 00:01:23,730
different things that people mean by

25
00:01:19,979 --> 00:01:26,039
hacking now and I I think you know this

26
00:01:23,730 --> 00:01:27,420
this sort of like media view of like you

27
00:01:26,040 --> 00:01:28,560
know we're all really cool and breaking

28
00:01:27,420 --> 00:01:30,030
into stuff and we can just like do

29
00:01:28,560 --> 00:01:30,540
anything we want with computers in five

30
00:01:30,030 --> 00:01:33,090
minutes

31
00:01:30,540 --> 00:01:34,260
it's not really that helpful but I grew

32
00:01:33,090 --> 00:01:38,280
up with stuff like this so it's still

33
00:01:34,260 --> 00:01:39,480
pretty cool these are also cool hackers

34
00:01:38,280 --> 00:01:46,830
I don't know where this slide came from

35
00:01:39,480 --> 00:01:47,909
though Rick's a hacker too like I said a

36
00:01:46,830 --> 00:01:50,370
lot of hackers are jerks

37
00:01:47,909 --> 00:01:51,720
but you know he can like build a portal

38
00:01:50,370 --> 00:01:55,380
gun in five minutes so people think he's

39
00:01:51,720 --> 00:01:57,450
really cool I just think it's like this

40
00:01:55,380 --> 00:02:00,658
part is so not real though like you

41
00:01:57,450 --> 00:02:02,580
don't the reason someone is kind of

42
00:02:00,659 --> 00:02:04,440
powerful in this computer world is not

43
00:02:02,580 --> 00:02:06,179
because they can do things quickly it's

44
00:02:04,440 --> 00:02:09,149
usually because they have the patience

45
00:02:06,180 --> 00:02:10,409
to be doing them at all so I find I like

46
00:02:09,149 --> 00:02:11,970
I love working Morty I think these

47
00:02:10,408 --> 00:02:13,470
characters are great but they're not

48
00:02:11,970 --> 00:02:16,620
necessarily how I want us to be thinking

49
00:02:13,470 --> 00:02:18,450
about this going forward this is like

50
00:02:16,620 --> 00:02:20,069
more the stuff I grew up with like when

51
00:02:18,450 --> 00:02:22,379
I think about hacker I think of like

52
00:02:20,069 --> 00:02:24,690
people who don't look photogenic on TV

53
00:02:22,379 --> 00:02:27,179
people who like right Linux kernel

54
00:02:24,690 --> 00:02:28,560
drivers and stuff and like that was what

55
00:02:27,180 --> 00:02:30,450
I was doing as a kid and I thought that

56
00:02:28,560 --> 00:02:32,069
was really cool

57
00:02:30,450 --> 00:02:37,768
I don't know a lot of these people are

58
00:02:32,069 --> 00:02:39,359
also jerks but we try to fix that but I

59
00:02:37,769 --> 00:02:40,739
felt really at home here like I would

60
00:02:39,360 --> 00:02:43,800
find other people who did the same thing

61
00:02:40,739 --> 00:02:46,110
we would hang out on IRC and that was

62
00:02:43,800 --> 00:02:49,860
that was like how I learned computers

63
00:02:46,110 --> 00:02:51,239
you know I I didn't have a whole lot of

64
00:02:49,860 --> 00:02:52,620
documentation and there wasn't

65
00:02:51,239 --> 00:02:53,910
necessarily a lot of documentation that

66
00:02:52,620 --> 00:02:56,099
existed for a lot of the stuff I was

67
00:02:53,910 --> 00:02:57,329
interested in like I would find a game

68
00:02:56,099 --> 00:02:58,980
that I really liked and like how does

69
00:02:57,330 --> 00:03:00,420
this even render and I would have no

70
00:02:58,980 --> 00:03:01,950
idea and maybe years later I would find

71
00:03:00,420 --> 00:03:04,530
oh someone else reverse engineered this

72
00:03:01,950 --> 00:03:05,819
and wrote a book on it but at that point

73
00:03:04,530 --> 00:03:06,900
like just taking apart that game

74
00:03:05,819 --> 00:03:09,530
probably would have been the only way to

75
00:03:06,900 --> 00:03:12,299
figure out how it actually worked so

76
00:03:09,530 --> 00:03:13,860
yeah these I mean these hackers I think

77
00:03:12,299 --> 00:03:15,810
the core value they have that I really

78
00:03:13,860 --> 00:03:17,940
fell in love with was this idea of just

79
00:03:15,810 --> 00:03:19,769
doing a huge amount of work and then

80
00:03:17,940 --> 00:03:21,540
just putting it out there for free but

81
00:03:19,769 --> 00:03:23,910
specifically in a form that other people

82
00:03:21,540 --> 00:03:25,048
could build on and I just really like

83
00:03:23,910 --> 00:03:30,329
that a lot and I still find myself

84
00:03:25,049 --> 00:03:32,489
putting a lot of emphasis into that but

85
00:03:30,329 --> 00:03:34,110
yeah it's I don't know there are a lot

86
00:03:32,489 --> 00:03:35,700
of things different things people mean

87
00:03:34,110 --> 00:03:39,660
by hacker and different things people

88
00:03:35,700 --> 00:03:42,839
mean by hacks and like I I think a lot

89
00:03:39,660 --> 00:03:45,180
of the stuff we do is useful for

90
00:03:42,840 --> 00:03:47,160
understanding how computers work enough

91
00:03:45,180 --> 00:03:49,230
to figure out where the flaws are and

92
00:03:47,160 --> 00:03:52,170
what we've built and that's that's great

93
00:03:49,230 --> 00:03:54,209
but I also think a lot of hacks are not

94
00:03:52,170 --> 00:03:55,200
as useful for that and then I think that

95
00:03:54,209 --> 00:03:57,209
some of the stuff that I'm the most

96
00:03:55,200 --> 00:03:59,280
interested in is maybe more useful for

97
00:03:57,209 --> 00:04:01,829
understanding computers than for kind of

98
00:03:59,280 --> 00:04:03,389
breaking them open so I don't know

99
00:04:01,829 --> 00:04:05,549
that's that's kind of the complexity

100
00:04:03,389 --> 00:04:07,380
here like I find that a lot of the stuff

101
00:04:05,549 --> 00:04:10,079
that I am very interested in is super

102
00:04:07,380 --> 00:04:12,269
applicable to security but not just

103
00:04:10,079 --> 00:04:13,590
about security and so people at security

104
00:04:12,269 --> 00:04:14,670
conferences are interested but I think

105
00:04:13,590 --> 00:04:18,030
maybe everybody should be doing this

106
00:04:14,670 --> 00:04:19,858
kind of stuff so I don't know so this is

107
00:04:18,029 --> 00:04:22,440
me I I spent a lot of time just

108
00:04:19,858 --> 00:04:24,359
tinkering with stuff this is kind of an

109
00:04:22,440 --> 00:04:26,719
artist's conception of what I was like

110
00:04:24,360 --> 00:04:30,599
pretty much everyday at a previous job

111
00:04:26,720 --> 00:04:32,340
and you know so as a kid I got started

112
00:04:30,599 --> 00:04:34,400
in this because I just had a lot of time

113
00:04:32,340 --> 00:04:37,619
to just dump into programming stuff and

114
00:04:34,400 --> 00:04:40,320
my dad had this 8086 computer that he

115
00:04:37,620 --> 00:04:41,879
would bring home to do like mathematical

116
00:04:40,320 --> 00:04:43,830
modeling stuff at home

117
00:04:41,879 --> 00:04:45,629
and I would just like you know get some

118
00:04:43,830 --> 00:04:46,740
time to play with that computer and he

119
00:04:45,629 --> 00:04:48,749
would give me a book about it and I

120
00:04:46,740 --> 00:04:50,939
would start with with that kind of

121
00:04:48,749 --> 00:04:52,229
little bit of knowledge but it's so

122
00:04:50,939 --> 00:04:53,429
different than today with the Internet

123
00:04:52,229 --> 00:04:55,020
where you can just instantly get the

124
00:04:53,429 --> 00:04:57,419
answer to anything you want to search

125
00:04:55,020 --> 00:05:00,539
for back then it seemed like knowledge

126
00:04:57,419 --> 00:05:02,219
was so scarce that like focusing on the

127
00:05:00,539 --> 00:05:05,580
ways that you can gather knowledge about

128
00:05:02,219 --> 00:05:07,830
anything seemed super important and I

129
00:05:05,580 --> 00:05:09,599
was also just drawn to areas where the

130
00:05:07,830 --> 00:05:10,770
manufacturers or other people who are

131
00:05:09,599 --> 00:05:12,270
building stuff just kind of had some

132
00:05:10,770 --> 00:05:15,299
incentives not to tell you how things

133
00:05:12,270 --> 00:05:16,919
worked and I think it was also just

134
00:05:15,300 --> 00:05:20,580
really fun I thought it was really fun

135
00:05:16,919 --> 00:05:23,429
to explore new worlds and you know every

136
00:05:20,580 --> 00:05:25,498
piece of technology that you can see

137
00:05:23,429 --> 00:05:26,729
inside of its you know it's kind of like

138
00:05:25,499 --> 00:05:28,860
a little game world it's like a little

139
00:05:26,729 --> 00:05:31,349
you know MMORPG or something you can get

140
00:05:28,860 --> 00:05:32,999
inside of and and just explore for a

141
00:05:31,349 --> 00:05:35,909
huge amount of time so it's it's a lot

142
00:05:32,999 --> 00:05:37,619
like a game and so actually I wasn't

143
00:05:35,909 --> 00:05:40,558
really that interested in games as a kid

144
00:05:37,619 --> 00:05:41,669
it turned out it was a lot more like you

145
00:05:40,559 --> 00:05:42,929
know my brother would be playing the

146
00:05:41,669 --> 00:05:45,779
games and then I would get really

147
00:05:42,929 --> 00:05:46,799
curious how they would work but this I

148
00:05:45,779 --> 00:05:48,240
don't know if anybody's familiar with

149
00:05:46,800 --> 00:05:49,649
the game genie there's this thing you

150
00:05:48,240 --> 00:05:51,959
would stick in between the Nintendo

151
00:05:49,649 --> 00:05:53,309
cartridge and the system and so actually

152
00:05:51,959 --> 00:05:55,469
this is when you start to learn that oh

153
00:05:53,309 --> 00:05:57,539
the Nintendo system is a computer and

154
00:05:55,469 --> 00:05:58,979
the cartridge is a program and this is a

155
00:05:57,539 --> 00:06:01,619
thing that edit to the program in real

156
00:05:58,979 --> 00:06:03,599
time and then you can start to you can

157
00:06:01,619 --> 00:06:05,339
start to kind of get some idea of what's

158
00:06:03,599 --> 00:06:08,519
actually going on inside this black box

159
00:06:05,339 --> 00:06:11,189
and kind of replacing pieces of it in

160
00:06:08,519 --> 00:06:13,229
order to to get a sense for what effect

161
00:06:11,189 --> 00:06:15,990
that had and just it's a lot like

162
00:06:13,229 --> 00:06:18,688
science I think doing experiments trying

163
00:06:15,990 --> 00:06:21,509
to get some sense of what's going on

164
00:06:18,689 --> 00:06:25,139
inside this black box just by just by

165
00:06:21,509 --> 00:06:26,939
making small you know small experiments

166
00:06:25,139 --> 00:06:31,349
or small tests that they try to cut

167
00:06:26,939 --> 00:06:33,419
across one particular aspect of it so

168
00:06:31,349 --> 00:06:36,149
you know I I had some other incentive to

169
00:06:33,419 --> 00:06:37,529
reverse engineer videogames I got really

170
00:06:36,149 --> 00:06:38,819
interested in the controller ports for

171
00:06:37,529 --> 00:06:41,159
some reason because that was just a nice

172
00:06:38,819 --> 00:06:43,050
interface that was exposed that you

173
00:06:41,159 --> 00:06:45,659
could just kind of dig into and figure

174
00:06:43,050 --> 00:06:48,599
out how to deal with so I had a lot of

175
00:06:45,659 --> 00:06:50,789
fun with this is a an adapter that goes

176
00:06:48,599 --> 00:06:51,930
from GameCube to n64 because I really

177
00:06:50,789 --> 00:06:54,820
didn't like playing Super Smash Brothers

178
00:06:51,930 --> 00:06:56,170
with the awful joystick on the n64

179
00:06:54,820 --> 00:06:59,440
and this is before the Gamecube Super

180
00:06:56,170 --> 00:07:01,060
Smash came out and yeah it was it was

181
00:06:59,440 --> 00:07:02,410
really fun and I think this is

182
00:07:01,060 --> 00:07:03,550
especially the kind of project that

183
00:07:02,410 --> 00:07:05,440
really takes a lot of people by surprise

184
00:07:03,550 --> 00:07:07,390
because they think oh it's just some

185
00:07:05,440 --> 00:07:10,360
buttons like how could that be hard and

186
00:07:07,390 --> 00:07:12,370
if you if you were doing this you know

187
00:07:10,360 --> 00:07:14,080
maybe some years earlier and this was an

188
00:07:12,370 --> 00:07:16,390
Atari joystick every button would have

189
00:07:14,080 --> 00:07:18,669
its own wire and it would be super easy

190
00:07:16,390 --> 00:07:21,580
but this was just an interesting project

191
00:07:18,670 --> 00:07:23,620
partly because the n64 controller was so

192
00:07:21,580 --> 00:07:25,240
weird I don't know if anybody remembers

193
00:07:23,620 --> 00:07:27,130
that controller but it actually had

194
00:07:25,240 --> 00:07:29,410
expansion pack on the back of the

195
00:07:27,130 --> 00:07:32,830
controller and you could put like

196
00:07:29,410 --> 00:07:34,240
savegame memory cards in there a lot of

197
00:07:32,830 --> 00:07:35,919
times people would end up just sticking

198
00:07:34,240 --> 00:07:37,240
a rumble pack in there which was like

199
00:07:35,920 --> 00:07:39,460
the add-on vibration motor for the

200
00:07:37,240 --> 00:07:41,080
controller and so what I wanted was to

201
00:07:39,460 --> 00:07:42,280
emulate the vibration feature but the

202
00:07:41,080 --> 00:07:44,590
vibration feature was actually this

203
00:07:42,280 --> 00:07:46,150
separate add-on so it was actually a

204
00:07:44,590 --> 00:07:48,340
matter of figuring out how that memory

205
00:07:46,150 --> 00:07:51,070
bus works and then being able to emulate

206
00:07:48,340 --> 00:07:53,289
that bus and so I mean this this kind of

207
00:07:51,070 --> 00:07:54,640
thing inspired me at a pretty early age

208
00:07:53,290 --> 00:07:58,420
and I just kept doing it as much as I

209
00:07:54,640 --> 00:07:59,710
could and and video games in particular

210
00:07:58,420 --> 00:08:01,720
just seemed like a really good way to

211
00:07:59,710 --> 00:08:04,450
stay interested in this stuff enough to

212
00:08:01,720 --> 00:08:05,740
put enough time into it you can see on

213
00:08:04,450 --> 00:08:06,820
the right that was kind of my set up for

214
00:08:05,740 --> 00:08:09,700
a lot of this you know old school

215
00:08:06,820 --> 00:08:11,440
oscilloscope and that little breadboard

216
00:08:09,700 --> 00:08:12,940
had a couple of pic microcontrollers on

217
00:08:11,440 --> 00:08:14,980
it I think one of them was actually the

218
00:08:12,940 --> 00:08:16,510
the work-in-progress and then the other

219
00:08:14,980 --> 00:08:17,890
one was a debug tool that would take the

220
00:08:16,510 --> 00:08:18,760
packets and dump them out over serial

221
00:08:17,890 --> 00:08:22,120
because I didn't have a logic analyzer

222
00:08:18,760 --> 00:08:22,990
at the time and that's that's one of

223
00:08:22,120 --> 00:08:24,370
those things that may be worth

224
00:08:22,990 --> 00:08:27,040
mentioning is that some of this stuff

225
00:08:24,370 --> 00:08:28,570
does take tools like it could be a lot

226
00:08:27,040 --> 00:08:30,370
easier if you have just the right piece

227
00:08:28,570 --> 00:08:32,830
of equipment and that can seem like a

228
00:08:30,370 --> 00:08:35,320
barrier to entry but that's been that's

229
00:08:32,830 --> 00:08:37,120
never really been that high of a barrier

230
00:08:35,320 --> 00:08:38,440
if you can kind of cleverly work around

231
00:08:37,120 --> 00:08:40,570
those requirements you know if you can

232
00:08:38,440 --> 00:08:42,310
make your own tools in cases where maybe

233
00:08:40,570 --> 00:08:44,110
you you would have liked bought a logic

234
00:08:42,309 --> 00:08:46,750
analyzer for like a lot of money back

235
00:08:44,110 --> 00:08:48,430
then it would have been maybe a lot more

236
00:08:46,750 --> 00:08:49,900
cost effective if you had the time to

237
00:08:48,430 --> 00:08:51,400
just program a microcontroller it's a

238
00:08:49,900 --> 00:08:54,790
sample that one particular piece of data

239
00:08:51,400 --> 00:08:57,420
you care about so I think it was

240
00:08:54,790 --> 00:09:00,010
something where maybe my interest in

241
00:08:57,420 --> 00:09:03,010
reverse engineering was also coinciding

242
00:09:00,010 --> 00:09:05,170
with just more access and and I think at

243
00:09:03,010 --> 00:09:06,490
this point there's just like no excuse

244
00:09:05,170 --> 00:09:09,099
not to be able to take things apart

245
00:09:06,490 --> 00:09:11,529
there are so many good tools out there

246
00:09:09,100 --> 00:09:14,710
and there's there's so many new ways of

247
00:09:11,529 --> 00:09:18,010
both sharing and finding information you

248
00:09:14,710 --> 00:09:19,390
know about how these things work there's

249
00:09:18,010 --> 00:09:21,189
another video game related project to

250
00:09:19,390 --> 00:09:24,220
had a lot of fun with I don't know if

251
00:09:21,190 --> 00:09:26,110
anybody knows this game robot Odyssey it

252
00:09:24,220 --> 00:09:28,210
was kind of a sequel to Rocky's boots

253
00:09:26,110 --> 00:09:30,550
which is another kind of classic like

254
00:09:28,210 --> 00:09:32,890
circuit building sort of game I get

255
00:09:30,550 --> 00:09:35,740
really into this as a kid we had it for

256
00:09:32,890 --> 00:09:37,029
Dass and I never actually finished it

257
00:09:35,740 --> 00:09:40,480
because it's a super hard game it's

258
00:09:37,029 --> 00:09:42,310
actually uh it's it's like an adventure

259
00:09:40,480 --> 00:09:44,560
game you're this you're this person who

260
00:09:42,310 --> 00:09:46,869
like gets stuck in this robo robo tropi

261
00:09:44,560 --> 00:09:48,969
list like sewer that's run by you know

262
00:09:46,870 --> 00:09:51,400
robots that don't want you to escape and

263
00:09:48,970 --> 00:09:52,480
you find a couple of friendly robots but

264
00:09:51,400 --> 00:09:53,949
the only way you can really interact

265
00:09:52,480 --> 00:09:56,200
with them is by building circuits inside

266
00:09:53,950 --> 00:09:58,900
them and that's how you get through

267
00:09:56,200 --> 00:10:00,640
these puzzles so I I got really into

268
00:09:58,900 --> 00:10:02,050
taking this game apart and actually

269
00:10:00,640 --> 00:10:04,199
figured out a bunch of the file formats

270
00:10:02,050 --> 00:10:06,689
and reverse engineered a lot of the code

271
00:10:04,200 --> 00:10:09,490
that bottom left actually the game

272
00:10:06,690 --> 00:10:11,710
normally worked with xt style keyboards

273
00:10:09,490 --> 00:10:13,240
like on a modern computer you can't even

274
00:10:11,710 --> 00:10:15,070
really use the keys correctly because

275
00:10:13,240 --> 00:10:16,390
it's made for such an old keyboard but i

276
00:10:15,070 --> 00:10:19,780
tried adding mouse support because i

277
00:10:16,390 --> 00:10:21,699
thought that was fun and that was mostly

278
00:10:19,780 --> 00:10:23,620
just oh we'll add some code to the

279
00:10:21,700 --> 00:10:25,330
game's main loop and now I know where

280
00:10:23,620 --> 00:10:27,160
the object tables are in RAM so we can

281
00:10:25,330 --> 00:10:30,370
just compare the mouse cursor and that

282
00:10:27,160 --> 00:10:33,069
was that was really fun I even took this

283
00:10:30,370 --> 00:10:36,730
a little bit further and decided to try

284
00:10:33,070 --> 00:10:38,110
porting it to the DS and this was this

285
00:10:36,730 --> 00:10:39,880
was actually really fun because this is

286
00:10:38,110 --> 00:10:42,190
actually running multiple copies of the

287
00:10:39,880 --> 00:10:44,230
game simultaneously so the top screen is

288
00:10:42,190 --> 00:10:45,700
kind of the canonical instance and it's

289
00:10:44,230 --> 00:10:47,830
got a graphics driver that takes the

290
00:10:45,700 --> 00:10:50,170
like CGA frame buffer and scales it out

291
00:10:47,830 --> 00:10:51,910
to the DS size and color converts and

292
00:10:50,170 --> 00:10:53,439
all that but on the bottom screen you

293
00:10:51,910 --> 00:10:55,390
can see these little icons representing

294
00:10:53,440 --> 00:10:57,160
the state of the characters and so those

295
00:10:55,390 --> 00:10:59,050
are actually made by scraping the memory

296
00:10:57,160 --> 00:11:00,310
for those objects into another instance

297
00:10:59,050 --> 00:11:02,319
of the game which just renders that

298
00:11:00,310 --> 00:11:04,810
sprite and because it's all like

299
00:11:02,320 --> 00:11:06,820
designed to run on a four megahertz 8086

300
00:11:04,810 --> 00:11:08,410
with a good enough binary translator you

301
00:11:06,820 --> 00:11:14,020
can just run so many copies of this in a

302
00:11:08,410 --> 00:11:15,310
TS this was another just fun example of

303
00:11:14,020 --> 00:11:17,709
something I did a long time ago that

304
00:11:15,310 --> 00:11:20,469
kind of set me on this path just wanting

305
00:11:17,709 --> 00:11:22,180
to take apart everything this was when I

306
00:11:20,470 --> 00:11:22,720
was living in like an actual house a

307
00:11:22,180 --> 00:11:25,239
while ago

308
00:11:22,720 --> 00:11:28,350
and we had like a circuit breaker box

309
00:11:25,240 --> 00:11:30,370
that you could install stuff in and and

310
00:11:28,350 --> 00:11:32,560
there was this product where you could

311
00:11:30,370 --> 00:11:34,030
put some little current clamps in your

312
00:11:32,560 --> 00:11:35,800
breaker and then it would actually send

313
00:11:34,030 --> 00:11:37,360
information about your power usage over

314
00:11:35,800 --> 00:11:38,709
the powerline and you'd have a little

315
00:11:37,360 --> 00:11:39,790
box you plug in in your kitchen or

316
00:11:38,710 --> 00:11:42,430
whatever and tell you how many kilowatt

317
00:11:39,790 --> 00:11:44,079
hours you're using and I wanted to make

318
00:11:42,430 --> 00:11:47,620
a kilowatt clock that would tick once

319
00:11:44,080 --> 00:11:49,330
per kilowatt second and it was kind of a

320
00:11:47,620 --> 00:11:52,930
stupid idea but it was also an excuse to

321
00:11:49,330 --> 00:11:54,880
reverse engineer this protocol and it

322
00:11:52,930 --> 00:11:56,969
was I would find out that that box

323
00:11:54,880 --> 00:11:59,620
actually had just a very purpose-built

324
00:11:56,970 --> 00:12:01,150
she had been it that just is a powerline

325
00:11:59,620 --> 00:12:04,270
modem that just receives these sorry

326
00:12:01,150 --> 00:12:05,470
receives these packets but I thought it

327
00:12:04,270 --> 00:12:08,680
was a lot more fun to just build one

328
00:12:05,470 --> 00:12:11,950
using op amps and stuff so you know this

329
00:12:08,680 --> 00:12:13,839
this sort of project taught me a lot and

330
00:12:11,950 --> 00:12:16,690
then I tried to document it as best I

331
00:12:13,840 --> 00:12:18,100
could to try to to try to help other

332
00:12:16,690 --> 00:12:22,630
people understand kind of similar

333
00:12:18,100 --> 00:12:24,880
aspects of Technology this is this sorry

334
00:12:22,630 --> 00:12:26,770
this is of course isn't one that I made

335
00:12:24,880 --> 00:12:30,640
a lot of you are probably familiar with

336
00:12:26,770 --> 00:12:34,180
this is a video yeah so this is called

337
00:12:30,640 --> 00:12:35,260
the visual 6502 I guess one thing I

338
00:12:34,180 --> 00:12:37,209
forgot to mention about that robot

339
00:12:35,260 --> 00:12:39,040
Odyssey project is that that was one of

340
00:12:37,210 --> 00:12:41,020
the very few times where I've really

341
00:12:39,040 --> 00:12:43,959
felt like I could just reverse engineer

342
00:12:41,020 --> 00:12:46,000
all of this it's like I I have you know

343
00:12:43,960 --> 00:12:47,050
maybe 100 kilobytes of code here I'll

344
00:12:46,000 --> 00:12:49,240
just sit down and figure out what all

345
00:12:47,050 --> 00:12:51,819
this does but usually that's just not

346
00:12:49,240 --> 00:12:53,380
practical usually your whole system is

347
00:12:51,820 --> 00:12:55,870
just so complicated that you have to

348
00:12:53,380 --> 00:12:58,420
pick a little slice of it to kind of cut

349
00:12:55,870 --> 00:13:00,070
it along but this is one of my favorite

350
00:12:58,420 --> 00:13:02,349
examples of something that does go

351
00:13:00,070 --> 00:13:06,130
really deep they they actually just

352
00:13:02,350 --> 00:13:08,440
scanned the 6502 dye and converted all

353
00:13:06,130 --> 00:13:09,550
the layer images back into polygons that

354
00:13:08,440 --> 00:13:11,589
were accurate enough that you can

355
00:13:09,550 --> 00:13:13,689
actually simulate it in your browser and

356
00:13:11,589 --> 00:13:16,600
you know and actually see each

357
00:13:13,690 --> 00:13:18,160
individual metal wire changing state so

358
00:13:16,600 --> 00:13:19,450
I think I think projects like this are

359
00:13:18,160 --> 00:13:21,370
super inspiring because they show you

360
00:13:19,450 --> 00:13:23,680
just how deep you can cut through the

361
00:13:21,370 --> 00:13:25,150
stack and still have an understanding of

362
00:13:23,680 --> 00:13:29,319
how things work if you you know if you

363
00:13:25,150 --> 00:13:31,089
choose the simple enough platform but

364
00:13:29,320 --> 00:13:33,610
most software I feel like is much more

365
00:13:31,089 --> 00:13:37,240
like Lego blocks you know I mean the

366
00:13:33,610 --> 00:13:38,980
real world is is this complicated

367
00:13:37,240 --> 00:13:41,050
mishmash of interfaces and none of them

368
00:13:38,980 --> 00:13:44,649
really worked the way they say they work

369
00:13:41,050 --> 00:13:45,819
and they're all leaky but we have to

370
00:13:44,649 --> 00:13:48,220
kind of ignore that when we build

371
00:13:45,820 --> 00:13:50,080
software usually and so you end up with

372
00:13:48,220 --> 00:13:51,399
all these pieces where you know what

373
00:13:50,080 --> 00:13:54,670
they do because you've used them a lot

374
00:13:51,399 --> 00:13:56,440
or you you've read the instructions but

375
00:13:54,670 --> 00:13:58,540
that often doesn't really tell you

376
00:13:56,440 --> 00:13:59,740
what's going on inside if it's open

377
00:13:58,540 --> 00:14:01,120
source maybe that's like you took a

378
00:13:59,740 --> 00:14:03,130
bunch of little Lego blocks and built

379
00:14:01,120 --> 00:14:05,230
them and then like potted them in clear

380
00:14:03,130 --> 00:14:06,730
epoxy so you still usually use it as one

381
00:14:05,230 --> 00:14:09,880
big brick but you can look inside it if

382
00:14:06,730 --> 00:14:11,380
you want a lot of software isn't even

383
00:14:09,880 --> 00:14:12,820
like that though and you don't have any

384
00:14:11,380 --> 00:14:15,910
visibility into what's going on you just

385
00:14:12,820 --> 00:14:17,370
have the documentation you just have you

386
00:14:15,910 --> 00:14:21,399
know maybe source code for part of it

387
00:14:17,370 --> 00:14:23,320
and I mean software folks love love

388
00:14:21,399 --> 00:14:26,080
these blocks I mean none of the blocks

389
00:14:23,320 --> 00:14:27,910
are real these diagrams are full of lies

390
00:14:26,080 --> 00:14:29,860
they're always full of lies and they're

391
00:14:27,910 --> 00:14:31,959
only useful for understanding just the

392
00:14:29,860 --> 00:14:33,730
very exterior layers about technology

393
00:14:31,959 --> 00:14:36,459
you know it's like you open a datasheet

394
00:14:33,730 --> 00:14:39,010
and this will tell you roughly what's in

395
00:14:36,459 --> 00:14:40,119
the design or you you look at an API and

396
00:14:39,010 --> 00:14:42,459
this tells you kind of how the

397
00:14:40,120 --> 00:14:43,930
architects intended it to work but this

398
00:14:42,459 --> 00:14:45,160
was always something that came out of

399
00:14:43,930 --> 00:14:47,920
somebody's head near the beginning of

400
00:14:45,160 --> 00:14:49,449
the design process and it's always full

401
00:14:47,920 --> 00:14:51,910
of full of problems whether they're

402
00:14:49,450 --> 00:14:53,230
intentional or not I like to call out

403
00:14:51,910 --> 00:14:54,699
software block diagrams because they're

404
00:14:53,230 --> 00:14:57,459
particularly bad because software is

405
00:14:54,700 --> 00:15:00,670
just so easy to turn into spaghetti and

406
00:14:57,459 --> 00:15:02,439
the hardware has some you know often has

407
00:15:00,670 --> 00:15:04,300
some physical constraints like if you're

408
00:15:02,440 --> 00:15:06,910
making a circuit board usually that's

409
00:15:04,300 --> 00:15:08,890
not going to just be crazy complex

410
00:15:06,910 --> 00:15:11,620
because that actually costs money every

411
00:15:08,890 --> 00:15:13,510
time you make one and there are

412
00:15:11,620 --> 00:15:15,070
limitations about how much complexity

413
00:15:13,510 --> 00:15:17,200
you can pack into system-on-chip designs

414
00:15:15,070 --> 00:15:19,029
to some extent but those are really

415
00:15:17,200 --> 00:15:20,890
becoming much more like software where

416
00:15:19,029 --> 00:15:23,500
you can just have this explosion of

417
00:15:20,890 --> 00:15:25,089
complexity that there's not really a

418
00:15:23,500 --> 00:15:27,010
good way to deal with in the way you

419
00:15:25,089 --> 00:15:28,630
would deal with something by kind of

420
00:15:27,010 --> 00:15:31,209
wrapping your head completely around it

421
00:15:28,630 --> 00:15:33,610
you have to be able to find a way to

422
00:15:31,209 --> 00:15:34,989
kind of dig into one specific part of

423
00:15:33,610 --> 00:15:39,579
the thing in order to understand it when

424
00:15:34,990 --> 00:15:41,920
it gets this complex so yeah I mean this

425
00:15:39,579 --> 00:15:43,390
this Lego block world is super fun it's

426
00:15:41,920 --> 00:15:45,880
like a great place to hang out if you're

427
00:15:43,390 --> 00:15:47,709
Engineering something like if you're

428
00:15:45,880 --> 00:15:50,529
developing a product or if you're

429
00:15:47,709 --> 00:15:50,888
prototyping then you want blocks that

430
00:15:50,529 --> 00:15:52,179
you can

431
00:15:50,889 --> 00:15:53,589
trust you don't want to have to take

432
00:15:52,179 --> 00:15:56,079
everything apart to figure out how it

433
00:15:53,589 --> 00:15:57,339
works and so that's like a case where

434
00:15:56,079 --> 00:16:01,209
you really wouldn't want to have to do

435
00:15:57,339 --> 00:16:03,129
any of this but I I often try to avoid

436
00:16:01,209 --> 00:16:05,128
the stuff that that has such an easy

437
00:16:03,129 --> 00:16:07,929
solution so I often find myself like

438
00:16:05,129 --> 00:16:09,399
needing to to figure out what what is

439
00:16:07,929 --> 00:16:12,999
underneath that floor that we've all

440
00:16:09,399 --> 00:16:16,029
been relying on being solid the floor is

441
00:16:12,999 --> 00:16:18,369
never solid you know we always we always

442
00:16:16,029 --> 00:16:20,019
kind of try to figure out well what can

443
00:16:18,369 --> 00:16:22,869
we sit on it feels comfortable enough to

444
00:16:20,019 --> 00:16:24,189
actually build on and there isn't you

445
00:16:22,869 --> 00:16:25,600
know you can just keep going down right

446
00:16:24,189 --> 00:16:27,099
we still don't really know how physics

447
00:16:25,600 --> 00:16:30,100
work we probably won't understand

448
00:16:27,100 --> 00:16:31,569
physics for centuries more and but we

449
00:16:30,100 --> 00:16:33,970
still build these incredibly complicated

450
00:16:31,569 --> 00:16:35,589
systems by assuming we can start at some

451
00:16:33,970 --> 00:16:37,689
particular point and so some people

452
00:16:35,589 --> 00:16:39,160
start with semiconductor physics and

453
00:16:37,689 --> 00:16:40,929
some people start with you know very log

454
00:16:39,160 --> 00:16:42,579
and a lot of people just start with

455
00:16:40,929 --> 00:16:44,439
whatever is in their language runtime or

456
00:16:42,579 --> 00:16:47,169
you know instructions on their CPUs

457
00:16:44,439 --> 00:16:49,839
instruction set but you always in

458
00:16:47,169 --> 00:16:51,069
defining leaks and that a lot of times

459
00:16:49,839 --> 00:16:52,629
you can just like search Stack Overflow

460
00:16:51,069 --> 00:16:55,509
and somebody will have already figured

461
00:16:52,629 --> 00:16:57,399
out what's wrong with it but you you get

462
00:16:55,509 --> 00:16:58,989
into more esoteric areas and you just

463
00:16:57,399 --> 00:17:02,679
can't rely on that you actually have to

464
00:16:58,989 --> 00:17:04,179
do some research and and kind of do

465
00:17:02,679 --> 00:17:06,638
science on this bug in order to figure

466
00:17:04,179 --> 00:17:08,740
out why it's actually happening and

467
00:17:06,638 --> 00:17:10,750
that's that's reverse engineering like

468
00:17:08,740 --> 00:17:11,980
when you have to start taking apart

469
00:17:10,750 --> 00:17:16,929
those blocks instead of just reading

470
00:17:11,980 --> 00:17:19,179
what's on the exterior so one thing that

471
00:17:16,929 --> 00:17:22,149
I did a lot of for kind of reverse

472
00:17:19,179 --> 00:17:25,089
engineering for interoperability I think

473
00:17:22,148 --> 00:17:27,609
I think anybody who's made software that

474
00:17:25,089 --> 00:17:31,210
other software sits on top of probably

475
00:17:27,609 --> 00:17:32,678
has had to do some kind of like very

476
00:17:31,210 --> 00:17:34,330
difficult kind of reverse engineering

477
00:17:32,679 --> 00:17:35,889
based debugging because if you have this

478
00:17:34,330 --> 00:17:38,439
complicated thing you don't understand

479
00:17:35,889 --> 00:17:40,029
like in this case portal and you have a

480
00:17:38,440 --> 00:17:43,330
bug in the video driver that portal is

481
00:17:40,029 --> 00:17:44,789
running on then you might just have a

482
00:17:43,330 --> 00:17:48,760
crash in a bunch of code that you have

483
00:17:44,789 --> 00:17:49,990
no documentation for and I would I would

484
00:17:48,760 --> 00:17:51,190
end up spending a lot of time just

485
00:17:49,990 --> 00:17:52,750
trying to figure out well in this

486
00:17:51,190 --> 00:17:54,940
complicated system where I can only have

487
00:17:52,750 --> 00:17:57,399
visibility into small pieces of it how

488
00:17:54,940 --> 00:18:00,760
do you actually understand enough of it

489
00:17:57,399 --> 00:18:02,469
to debug the whole system and yeah VM

490
00:18:00,760 --> 00:18:03,879
with VMs you're just asking for this

491
00:18:02,470 --> 00:18:04,820
kind of complexity because it's sort of

492
00:18:03,879 --> 00:18:06,139
like you're taking that

493
00:18:04,820 --> 00:18:08,529
or that everyone else had been relying

494
00:18:06,139 --> 00:18:11,658
on and like jacking it up on stilts and

495
00:18:08,529 --> 00:18:13,759
and now it's kind of shaky and you're

496
00:18:11,659 --> 00:18:17,090
kind of just cheering up like anytime

497
00:18:13,759 --> 00:18:18,529
it's about to fall it's yeah it's

498
00:18:17,090 --> 00:18:20,330
usually not so great and and then the

499
00:18:18,529 --> 00:18:22,429
floors the floors aren't so they're

500
00:18:20,330 --> 00:18:24,199
really bad sometimes like sometimes you

501
00:18:22,429 --> 00:18:26,269
think you can rely on something as

502
00:18:24,200 --> 00:18:28,610
simple as DRAM and then you realize that

503
00:18:26,269 --> 00:18:30,440
well actually they didn't plan for all

504
00:18:28,610 --> 00:18:32,418
the different ways you can access DRM

505
00:18:30,440 --> 00:18:34,179
and all the refresh timings and you end

506
00:18:32,419 --> 00:18:36,289
up with something like row hammer where

507
00:18:34,179 --> 00:18:39,350
and if you know about row hammer that's

508
00:18:36,289 --> 00:18:40,879
a way of by accessing DRAM in a

509
00:18:39,350 --> 00:18:43,100
particular pattern which will depend on

510
00:18:40,879 --> 00:18:46,850
your motherboard chipset and the DRAM

511
00:18:43,100 --> 00:18:48,830
itself you can cause it to you know you

512
00:18:46,850 --> 00:18:50,750
basically cause it to not refresh fast

513
00:18:48,830 --> 00:18:52,340
enough to keep up with the amount you're

514
00:18:50,750 --> 00:18:54,830
disturbing it and you can cause bits to

515
00:18:52,340 --> 00:18:56,600
flip and and I just cuts through all

516
00:18:54,830 --> 00:18:59,899
these levels of abstraction we build up

517
00:18:56,600 --> 00:19:02,570
on top of that that stable floor and and

518
00:18:59,899 --> 00:19:04,428
that's not necessarily something that

519
00:19:02,570 --> 00:19:05,960
you can afford to be thinking of when

520
00:19:04,429 --> 00:19:07,639
you're in that like product development

521
00:19:05,960 --> 00:19:09,980
like building things out of like

522
00:19:07,639 --> 00:19:12,229
well-worn Lego blocks kind of land but

523
00:19:09,980 --> 00:19:14,330
if you if something's starting to go

524
00:19:12,230 --> 00:19:16,190
wrong or like maybe if you're doing

525
00:19:14,330 --> 00:19:18,049
something where a failure like this

526
00:19:16,190 --> 00:19:19,850
would be really catastrophic then it

527
00:19:18,049 --> 00:19:22,220
helps to actually every once in a while

528
00:19:19,850 --> 00:19:23,449
just take that stack of blocks that

529
00:19:22,220 --> 00:19:25,669
you've been sitting on top of and

530
00:19:23,450 --> 00:19:27,289
actually look down and try to take some

531
00:19:25,669 --> 00:19:32,600
of them apart to see if what you're

532
00:19:27,289 --> 00:19:34,158
doing is really working so I don't know

533
00:19:32,600 --> 00:19:35,629
the metaphor that I've been thinking

534
00:19:34,159 --> 00:19:37,730
about reverse engineering lately it's

535
00:19:35,629 --> 00:19:41,178
kind of like a chisel it's this this

536
00:19:37,730 --> 00:19:43,669
kind of slow kind of messy tool that you

537
00:19:41,179 --> 00:19:45,620
know it doesn't really take a lot of a

538
00:19:43,669 --> 00:19:48,620
lot of training to just start splitting

539
00:19:45,620 --> 00:19:50,239
apart a log and I think that's a good

540
00:19:48,620 --> 00:19:53,149
analogy like I don't think reverse

541
00:19:50,240 --> 00:19:54,559
engineering takes a lot of special skill

542
00:19:53,149 --> 00:19:56,389
to start out with I think everyone

543
00:19:54,559 --> 00:19:59,330
should be doing this I think it mostly

544
00:19:56,389 --> 00:20:01,939
just requires kind of knowing enough

545
00:19:59,330 --> 00:20:04,039
about what you're doing to to want to

546
00:20:01,940 --> 00:20:05,480
invest the time in it and I think that's

547
00:20:04,039 --> 00:20:06,590
where a lot of people get stuck is that

548
00:20:05,480 --> 00:20:08,299
they see this thing which seems

549
00:20:06,590 --> 00:20:11,090
complicated and they don't really know

550
00:20:08,299 --> 00:20:13,279
where to start and and so they just

551
00:20:11,090 --> 00:20:14,269
maybe think I I don't have time for this

552
00:20:13,279 --> 00:20:16,309
I've just got to search Stack Overflow

553
00:20:14,269 --> 00:20:18,200
which is you look the right answer but

554
00:20:16,309 --> 00:20:19,940
maybe maybe it's worth fine

555
00:20:18,200 --> 00:20:21,770
some of those projects where you can

556
00:20:19,940 --> 00:20:23,690
actually start to break things open and

557
00:20:21,770 --> 00:20:26,780
understand them on your own to to get

558
00:20:23,690 --> 00:20:28,490
more of that more of that experience and

559
00:20:26,780 --> 00:20:30,620
when you do split the system open along

560
00:20:28,490 --> 00:20:32,840
any of these you know anything's kind of

561
00:20:30,620 --> 00:20:34,219
fault lines you get all this access to

562
00:20:32,840 --> 00:20:39,770
whatever's on both sides of that

563
00:20:34,220 --> 00:20:44,300
interface so this is this is something I

564
00:20:39,770 --> 00:20:46,100
had a lot of fun with hey I mean so much

565
00:20:44,300 --> 00:20:49,040
of reverse engineering is even figuring

566
00:20:46,100 --> 00:20:51,409
out well I've got this chisel which by

567
00:20:49,040 --> 00:20:53,149
that I mean just some way of opening up

568
00:20:51,410 --> 00:20:54,800
an interface and where do I even put it

569
00:20:53,150 --> 00:20:57,770
there's just so much to choose from on a

570
00:20:54,800 --> 00:21:01,010
system like this so this is the Nintendo

571
00:20:57,770 --> 00:21:03,110
DS Nintendo DSi mainboard actually I

572
00:21:01,010 --> 00:21:06,050
think twl is the codename of Twilight

573
00:21:03,110 --> 00:21:08,030
and there's just so much going on here

574
00:21:06,050 --> 00:21:09,409
like there's a bounty of test points

575
00:21:08,030 --> 00:21:14,060
right like some of those are bound to be

576
00:21:09,410 --> 00:21:15,860
interesting and I I wanted to get a

577
00:21:14,060 --> 00:21:20,690
sense of how this worked so that I could

578
00:21:15,860 --> 00:21:22,100
help the homebrew community run you know

579
00:21:20,690 --> 00:21:23,840
like run their own code on the Nintendo

580
00:21:22,100 --> 00:21:25,820
DS the video games were sort of an

581
00:21:23,840 --> 00:21:27,590
interesting thing to get into because a

582
00:21:25,820 --> 00:21:29,929
lot of the information that you would

583
00:21:27,590 --> 00:21:31,159
need in order to write your own code for

584
00:21:29,930 --> 00:21:34,220
the game system is actually being

585
00:21:31,160 --> 00:21:35,930
intentionally obscured but for kind of

586
00:21:34,220 --> 00:21:38,060
silly reasons like Nintendo wants their

587
00:21:35,930 --> 00:21:39,710
licensing fees and they don't want you

588
00:21:38,060 --> 00:21:42,050
know random folks writing code for their

589
00:21:39,710 --> 00:21:43,700
platforms and I think that's kind of a

590
00:21:42,050 --> 00:21:48,110
silly reason so I'm happy to kind of

591
00:21:43,700 --> 00:21:49,460
work against that when I can and so in a

592
00:21:48,110 --> 00:21:51,229
sense I mean this is reverse engineering

593
00:21:49,460 --> 00:21:52,760
for interoperability because I really

594
00:21:51,230 --> 00:21:54,740
wanted to run my own stuff on this

595
00:21:52,760 --> 00:21:56,480
platform but it's also reverse

596
00:21:54,740 --> 00:21:58,090
engineering because the platform is kind

597
00:21:56,480 --> 00:22:00,440
of interesting and it's kind of a way to

598
00:21:58,090 --> 00:22:02,810
to try reverse engineering something

599
00:22:00,440 --> 00:22:05,660
that has more of these features that are

600
00:22:02,810 --> 00:22:08,389
trying to keep you from getting in the

601
00:22:05,660 --> 00:22:11,210
previous DES actually was pretty simple

602
00:22:08,390 --> 00:22:12,980
to get into that was when Nintendo took

603
00:22:11,210 --> 00:22:15,440
their Game Boy Advance and just added a

604
00:22:12,980 --> 00:22:17,390
second processor in a second display it

605
00:22:15,440 --> 00:22:19,610
didn't really change much else but the

606
00:22:17,390 --> 00:22:21,500
DSi it took a lot more cues from how

607
00:22:19,610 --> 00:22:23,870
Nintendo built the Wii where the we

608
00:22:21,500 --> 00:22:27,260
actually has a chain of trust and it has

609
00:22:23,870 --> 00:22:29,570
a separate crypto processor and and they

610
00:22:27,260 --> 00:22:31,100
they ported some of that over to the DSi

611
00:22:29,570 --> 00:22:32,110
at least enough that there was a chain

612
00:22:31,100 --> 00:22:34,149
of trust from Buu

613
00:22:32,110 --> 00:22:37,030
and it was a lot less trivial to just

614
00:22:34,150 --> 00:22:38,350
run random code on it so you know the

615
00:22:37,030 --> 00:22:39,639
test points were interesting we didn't

616
00:22:38,350 --> 00:22:43,389
find him that much that was interesting

617
00:22:39,640 --> 00:22:45,730
on those though I tried replicating

618
00:22:43,390 --> 00:22:47,800
somebody else's work where they found a

619
00:22:45,730 --> 00:22:49,360
vulnerability in the savegame files for

620
00:22:47,800 --> 00:22:52,030
this game healthy cooking coach

621
00:22:49,360 --> 00:22:53,530
it's called cook cook hack so a bunch of

622
00:22:52,030 --> 00:22:56,530
people are buying this cartridge it was

623
00:22:53,530 --> 00:22:59,440
it's not a good game it's really not

624
00:22:56,530 --> 00:23:01,060
it's very buggy which is good for us

625
00:22:59,440 --> 00:23:02,710
because that game has already been

626
00:23:01,060 --> 00:23:05,649
signed by Nintendo like we have this

627
00:23:02,710 --> 00:23:07,870
chain of trust and you can run unsigned

628
00:23:05,650 --> 00:23:09,190
games but then they only have the

629
00:23:07,870 --> 00:23:10,810
previous platforms level of

630
00:23:09,190 --> 00:23:12,730
functionalities to get half the RAM you

631
00:23:10,810 --> 00:23:15,429
don't get the SD card slot or the camera

632
00:23:12,730 --> 00:23:17,350
so we wanted to open up homebrew for the

633
00:23:15,430 --> 00:23:19,720
entire system which meant bypassing this

634
00:23:17,350 --> 00:23:22,870
code signing system they had so one way

635
00:23:19,720 --> 00:23:24,160
of doing that was to find you know it

636
00:23:22,870 --> 00:23:26,830
was like some kind of buffer overflow in

637
00:23:24,160 --> 00:23:28,720
the savegame format and so you could

638
00:23:26,830 --> 00:23:32,110
trigger this just by clipping on to that

639
00:23:28,720 --> 00:23:33,520
SPI memory in the cartridge and writing

640
00:23:32,110 --> 00:23:36,340
your own data onto there exploiting the

641
00:23:33,520 --> 00:23:37,720
bug once but I was especially interested

642
00:23:36,340 --> 00:23:39,550
in coming up with a system for

643
00:23:37,720 --> 00:23:41,860
repeatedly being able to do this so I

644
00:23:39,550 --> 00:23:44,470
would started using an FPGA to emulate

645
00:23:41,860 --> 00:23:47,919
the RAM or the the flash memory chip and

646
00:23:44,470 --> 00:23:49,780
then I could even see where the where

647
00:23:47,920 --> 00:23:52,120
the platform is reading from and try

648
00:23:49,780 --> 00:23:53,350
changing those values really quickly and

649
00:23:52,120 --> 00:23:56,379
then just change it reboot change it

650
00:23:53,350 --> 00:23:58,360
reboot so that was nice I didn't end up

651
00:23:56,380 --> 00:24:01,390
getting that much farther into it via

652
00:23:58,360 --> 00:24:03,429
the spi memory there though because even

653
00:24:01,390 --> 00:24:05,140
when you get full code execution in that

654
00:24:03,430 --> 00:24:07,120
cooking game the cooking game actually

655
00:24:05,140 --> 00:24:08,350
does not have a lot of privileges so we

656
00:24:07,120 --> 00:24:10,510
couldn't use the SD card slot for

657
00:24:08,350 --> 00:24:14,290
example and I think it was still running

658
00:24:10,510 --> 00:24:15,580
at like half the memory or something so

659
00:24:14,290 --> 00:24:19,000
then then you have to break out the

660
00:24:15,580 --> 00:24:20,860
magnet wire and despite this board

661
00:24:19,000 --> 00:24:22,120
having so many test points it turned out

662
00:24:20,860 --> 00:24:24,969
the signals that were most interesting

663
00:24:22,120 --> 00:24:26,530
did not have test points so that's the

664
00:24:24,970 --> 00:24:29,290
system on chip on the left that thing

665
00:24:26,530 --> 00:24:31,360
has two ARM cores it's basically the

666
00:24:29,290 --> 00:24:33,700
Gameboy Advance and the second processor

667
00:24:31,360 --> 00:24:36,159
they added in the DS and the GPU so

668
00:24:33,700 --> 00:24:38,500
basically three cores and a memory

669
00:24:36,160 --> 00:24:40,510
arbiter and some caching there's some

670
00:24:38,500 --> 00:24:44,260
RAM and the SOC but most of the RAM is

671
00:24:40,510 --> 00:24:46,900
next door on an eight Meg SDRAM and then

672
00:24:44,260 --> 00:24:48,910
the non-volatile storage that Ian

673
00:24:46,900 --> 00:24:50,950
which is basically an SD card in a chip

674
00:24:48,910 --> 00:24:52,090
and I was actually one of the first

675
00:24:50,950 --> 00:24:53,860
things we looked at but that was

676
00:24:52,090 --> 00:24:57,939
encrypted and we didn't have an easy way

677
00:24:53,860 --> 00:24:59,320
to get the keys of that the way this

678
00:24:57,940 --> 00:25:02,350
actually ended up leading though was to

679
00:24:59,320 --> 00:25:05,020
this kind of increasingly weird FPGA rig

680
00:25:02,350 --> 00:25:06,490
where this was actually just taking all

681
00:25:05,020 --> 00:25:08,020
the signals that went between the RAM

682
00:25:06,490 --> 00:25:11,380
and the system-on-chip and bringing them

683
00:25:08,020 --> 00:25:13,059
out to an FPGA and the first step of

684
00:25:11,380 --> 00:25:15,039
this was actually just just logging the

685
00:25:13,059 --> 00:25:17,710
data so I would slow down the clock on

686
00:25:15,039 --> 00:25:20,049
the DS as much as possible which was

687
00:25:17,710 --> 00:25:22,270
limited by the the clock multipliers on

688
00:25:20,049 --> 00:25:23,470
the chip so once you slow it down too

689
00:25:22,270 --> 00:25:25,600
much the clock just doesn't want to run

690
00:25:23,470 --> 00:25:28,090
but I slowed it down as much as I could

691
00:25:25,600 --> 00:25:29,649
and then I actually just barely got it

692
00:25:28,090 --> 00:25:31,809
slow enough where I could take that Ram

693
00:25:29,650 --> 00:25:33,880
data in real time so every time it would

694
00:25:31,809 --> 00:25:35,320
read or write to main memory not the

695
00:25:33,880 --> 00:25:37,630
cache not the local memory but the

696
00:25:35,320 --> 00:25:40,059
actual external memory then it would

697
00:25:37,630 --> 00:25:43,539
stream that back over USB so it was just

698
00:25:40,059 --> 00:25:44,918
barely enough for USB to bandwidth and

699
00:25:43,539 --> 00:25:47,049
that was that was actually great I

700
00:25:44,919 --> 00:25:50,020
learned a lot that way but then I took

701
00:25:47,049 --> 00:25:53,110
it one step further and ended up needing

702
00:25:50,020 --> 00:25:56,080
a slightly faster FPGA and doing some

703
00:25:53,110 --> 00:25:57,639
circuit board surgery and that was

704
00:25:56,080 --> 00:26:01,658
actually to get in between one of the

705
00:25:57,640 --> 00:26:04,419
chip enable lines on the on the SDRAM

706
00:26:01,659 --> 00:26:05,740
and the processor so with that you could

707
00:26:04,419 --> 00:26:07,690
actually in the middle of a memory

708
00:26:05,740 --> 00:26:09,400
packet you could kind of switch off the

709
00:26:07,690 --> 00:26:12,429
DRAM and then answer that memory packet

710
00:26:09,400 --> 00:26:15,520
yourself and so that was actually how I

711
00:26:12,429 --> 00:26:18,370
implemented kind of patching arbitrary

712
00:26:15,520 --> 00:26:19,510
code into memory so you know again

713
00:26:18,370 --> 00:26:20,860
there's there's a bunch of internal

714
00:26:19,510 --> 00:26:22,690
memory there's like a ROM that it boots

715
00:26:20,860 --> 00:26:24,070
off of there's internal SRAM which it

716
00:26:22,690 --> 00:26:26,380
tries to keep all the sensitive data in

717
00:26:24,070 --> 00:26:28,689
but at some point it is actually relying

718
00:26:26,380 --> 00:26:31,179
on data in the external Ram during boot

719
00:26:28,690 --> 00:26:32,830
so it was a matter of kind of changing

720
00:26:31,179 --> 00:26:34,330
some of those data structures I forgot

721
00:26:32,830 --> 00:26:35,918
whether it was a pointer or some code or

722
00:26:34,330 --> 00:26:38,408
there's something in there you can patch

723
00:26:35,919 --> 00:26:40,330
and then gain control over the code

724
00:26:38,409 --> 00:26:42,610
execution put in some of your own code

725
00:26:40,330 --> 00:26:44,408
and then you can say copy all the

726
00:26:42,610 --> 00:26:48,010
internal Rams external Ram I know you've

727
00:26:44,409 --> 00:26:49,480
got all the crypto keys so that was it

728
00:26:48,010 --> 00:26:52,539
was a great project I learned a lot from

729
00:26:49,480 --> 00:26:54,580
it this was really before I was in the

730
00:26:52,539 --> 00:26:55,870
habit that I am now of trying to

731
00:26:54,580 --> 00:26:58,460
document the work that I'm doing though

732
00:26:55,870 --> 00:27:01,669
so

733
00:26:58,460 --> 00:27:03,500
yeah I have like this super super messy

734
00:27:01,670 --> 00:27:06,410
Dropbox folder with like 10 gigabytes of

735
00:27:03,500 --> 00:27:08,870
binaries from this and it's terrible and

736
00:27:06,410 --> 00:27:09,920
so that isn't something that a whole lot

737
00:27:08,870 --> 00:27:12,290
of other people have been able to build

738
00:27:09,920 --> 00:27:13,730
on but I really wish I would have done

739
00:27:12,290 --> 00:27:15,889
it more like that

740
00:27:13,730 --> 00:27:17,390
and I think I think you do see this in

741
00:27:15,890 --> 00:27:18,950
especially the video game reversing

742
00:27:17,390 --> 00:27:21,530
community that a lot of people reverse

743
00:27:18,950 --> 00:27:23,180
stuff and then just never release it and

744
00:27:21,530 --> 00:27:24,470
there's a lot of good reasons for that I

745
00:27:23,180 --> 00:27:26,390
mean some people just don't want to get

746
00:27:24,470 --> 00:27:28,400
the video game companies mad some people

747
00:27:26,390 --> 00:27:30,080
don't help the pirates and those are

748
00:27:28,400 --> 00:27:31,580
great those are great concerns like I've

749
00:27:30,080 --> 00:27:32,720
personally just not release stuff

750
00:27:31,580 --> 00:27:37,250
because I don't want it to be used for

751
00:27:32,720 --> 00:27:38,960
piracy but I think it's nice to be able

752
00:27:37,250 --> 00:27:42,860
to find projects that you can document

753
00:27:38,960 --> 00:27:45,020
more thoroughly so I went a little

754
00:27:42,860 --> 00:27:48,649
deeper into that with graphics tablets

755
00:27:45,020 --> 00:27:50,210
kind of recently and I don't I don't

756
00:27:48,650 --> 00:27:52,640
entirely know why I chose graphics

757
00:27:50,210 --> 00:27:55,790
tablets I just think they're cool like

758
00:27:52,640 --> 00:27:57,080
them and I I think a lot of people use

759
00:27:55,790 --> 00:27:58,990
them but don't really know that much

760
00:27:57,080 --> 00:28:01,460
about how they work and haven't tried to

761
00:27:58,990 --> 00:28:03,410
just take them apart and figure out how

762
00:28:01,460 --> 00:28:06,170
to like how to really get in there and

763
00:28:03,410 --> 00:28:08,330
modify it so this was one of the first

764
00:28:06,170 --> 00:28:10,250
things where I I did a kind of thorough

765
00:28:08,330 --> 00:28:11,780
series of reverse engineering projects

766
00:28:10,250 --> 00:28:14,240
on it and sure I didn't just do it all

767
00:28:11,780 --> 00:28:15,530
on video and that's that's been my

768
00:28:14,240 --> 00:28:18,200
preferred way of sharing this stuff

769
00:28:15,530 --> 00:28:20,149
these days is I take video I live stream

770
00:28:18,200 --> 00:28:21,590
everything I can but then I edit

771
00:28:20,150 --> 00:28:28,490
together videos that try to go through

772
00:28:21,590 --> 00:28:29,780
the process and you know sometimes I

773
00:28:28,490 --> 00:28:32,510
don't know sometimes reverse engineering

774
00:28:29,780 --> 00:28:34,460
will will lead down this impossibly deep

775
00:28:32,510 --> 00:28:37,610
rabbit hole where you could just spend

776
00:28:34,460 --> 00:28:39,410
so much time getting some knowledge that

777
00:28:37,610 --> 00:28:40,760
may or may not actually help oh yeah I

778
00:28:39,410 --> 00:28:46,580
forgot this head what you're boarding

779
00:28:40,760 --> 00:28:48,980
here yeah that's great yeah so this was

780
00:28:46,580 --> 00:28:52,520
actually part of the video where I was

781
00:28:48,980 --> 00:28:54,650
kind of explaining it's kind of

782
00:28:52,520 --> 00:28:56,690
explaining the link between putting

783
00:28:54,650 --> 00:28:58,490
graphics tablets and RFID cards where

784
00:28:56,690 --> 00:29:00,770
they both use very similar technology

785
00:28:58,490 --> 00:29:02,420
where you know it's not really radio

786
00:29:00,770 --> 00:29:03,460
it's more like a transformer because

787
00:29:02,420 --> 00:29:08,150
you're dealing with these near-field

788
00:29:03,460 --> 00:29:11,840
couple systems but yeah this was this

789
00:29:08,150 --> 00:29:14,450
was a another project where I used

790
00:29:11,840 --> 00:29:16,699
just a regular AVR microcontroller to

791
00:29:14,450 --> 00:29:18,230
emulate an RFID card and so just kind of

792
00:29:16,700 --> 00:29:20,150
showing the connection between those I

793
00:29:18,230 --> 00:29:21,770
think a lot of this turns out to be

794
00:29:20,150 --> 00:29:23,240
about experiments though so a lot of

795
00:29:21,770 --> 00:29:24,889
what I was showing in these videos was

796
00:29:23,240 --> 00:29:28,760
was kind of doing science on this device

797
00:29:24,890 --> 00:29:31,190
so like you know for example here I've

798
00:29:28,760 --> 00:29:33,620
got a coil on the left that's sending

799
00:29:31,190 --> 00:29:36,890
out these quick impulses so just like

800
00:29:33,620 --> 00:29:39,168
very fast rising magnetic pulses that'll

801
00:29:36,890 --> 00:29:42,049
if there's something resonant nearby so

802
00:29:39,169 --> 00:29:44,029
I explained these resonant circuits a

803
00:29:42,049 --> 00:29:46,220
bit like electric pendulums where you

804
00:29:44,029 --> 00:29:48,080
have in this case and it's an inductance

805
00:29:46,220 --> 00:29:49,700
and a capacitance that kind of keep

806
00:29:48,080 --> 00:29:53,210
juggling energy back and forth between

807
00:29:49,700 --> 00:29:54,590
magnetic and electrical and so in this

808
00:29:53,210 --> 00:29:56,210
case you can actually start to use this

809
00:29:54,590 --> 00:29:57,980
to see what the pen is doing and you can

810
00:29:56,210 --> 00:29:59,299
see oh the pen is resonating because

811
00:29:57,980 --> 00:30:01,760
it's actually taking some of the energy

812
00:29:59,299 --> 00:30:04,700
in that peak and storing it and then re

813
00:30:01,760 --> 00:30:06,350
releasing it as this oscillation and so

814
00:30:04,700 --> 00:30:07,760
even just using little experiments like

815
00:30:06,350 --> 00:30:09,830
that you can just start to see what the

816
00:30:07,760 --> 00:30:12,500
pen is doing without even having to take

817
00:30:09,830 --> 00:30:14,570
it apart or destroy anything and then

818
00:30:12,500 --> 00:30:16,039
here I was noticing that if you if you

819
00:30:14,570 --> 00:30:17,720
touch the end of the pen and like press

820
00:30:16,039 --> 00:30:19,370
the pressure sensor that actually

821
00:30:17,720 --> 00:30:20,960
changes the resonant frequency and you

822
00:30:19,370 --> 00:30:25,459
can kind of get an idea of what it's

823
00:30:20,960 --> 00:30:28,419
doing so these this was one of the

824
00:30:25,460 --> 00:30:30,860
tablets I dug into it's made by who yun

825
00:30:28,419 --> 00:30:33,110
the really the really popular brand

826
00:30:30,860 --> 00:30:34,699
everyone knows about is welcome and so I

827
00:30:33,110 --> 00:30:36,229
was working on a Wacom tablet a little

828
00:30:34,700 --> 00:30:37,460
bit later but just to start out I just

829
00:30:36,230 --> 00:30:39,020
wanted to take the cheapest tablet I

830
00:30:37,460 --> 00:30:40,789
could find and tear it apart and and

831
00:30:39,020 --> 00:30:41,840
just show people how it worked and it

832
00:30:40,789 --> 00:30:44,059
turns out these were actually a lot

833
00:30:41,840 --> 00:30:46,070
simpler they they just use this pen

834
00:30:44,059 --> 00:30:47,600
that's basically a little a little

835
00:30:46,070 --> 00:30:48,950
transmitter that just transmits at a

836
00:30:47,600 --> 00:30:50,899
single frequency and the frequency

837
00:30:48,950 --> 00:30:54,230
changes depending on the sensors and the

838
00:30:50,899 --> 00:30:55,639
buttons on the pen this is the level

839
00:30:54,230 --> 00:30:57,830
that people are more used to dealing

840
00:30:55,640 --> 00:30:59,899
with tablets out I think this is so

841
00:30:57,830 --> 00:31:01,699
tablets are USB devices you might have

842
00:30:59,899 --> 00:31:06,260
heard about USB HID or human interface

843
00:31:01,700 --> 00:31:08,480
device spec it's it's a it's like how

844
00:31:06,260 --> 00:31:12,080
the computer knows when you plug in a

845
00:31:08,480 --> 00:31:13,250
USB device the USB device uses the you

846
00:31:12,080 --> 00:31:16,279
know the data structures in this hid

847
00:31:13,250 --> 00:31:18,649
spec to describe how the physical world

848
00:31:16,279 --> 00:31:20,059
maps to the bytes in the packet and so

849
00:31:18,649 --> 00:31:21,889
we can get some information about how it

850
00:31:20,059 --> 00:31:25,610
works just from looking at the USB

851
00:31:21,890 --> 00:31:29,030
protocol layer but to get an idea

852
00:31:25,610 --> 00:31:33,320
what the pen is really doing yeah the

853
00:31:29,030 --> 00:31:37,190
pen needs pen needs an oscilloscope

854
00:31:33,320 --> 00:31:39,439
really so so here I'm taking a closer

855
00:31:37,190 --> 00:31:44,230
look at the data that I'm seeing

856
00:31:39,440 --> 00:31:44,230
actually between the pen and the tablet

857
00:31:45,040 --> 00:31:52,250
tablet so in this case you're starting

858
00:31:48,320 --> 00:31:55,129
to see I don't know this is a Wacom

859
00:31:52,250 --> 00:31:57,890
tablet yeah so I started to get into the

860
00:31:55,130 --> 00:31:59,630
Wacom because you know they they're more

861
00:31:57,890 --> 00:32:01,930
complicated I think people had more

862
00:31:59,630 --> 00:32:04,940
questions about them because it's more

863
00:32:01,930 --> 00:32:06,260
just like a more common brand and so the

864
00:32:04,940 --> 00:32:08,090
Kooyong tablet was a nice thing to just

865
00:32:06,260 --> 00:32:10,879
get into and it had that continuous sine

866
00:32:08,090 --> 00:32:12,439
wave but this was a Wacom Intuos Pro and

867
00:32:10,880 --> 00:32:15,770
so you can see it's actually a lot more

868
00:32:12,440 --> 00:32:17,930
complicated there's there's that that

869
00:32:15,770 --> 00:32:19,160
kind of big thick yellow part which at

870
00:32:17,930 --> 00:32:21,020
first I was thinking well that's

871
00:32:19,160 --> 00:32:23,690
probably just like a burst of energy

872
00:32:21,020 --> 00:32:25,700
that it uses to kind of power up the pen

873
00:32:23,690 --> 00:32:27,440
give the pen enough electricity to

874
00:32:25,700 --> 00:32:29,330
actually run and respond with the rest

875
00:32:27,440 --> 00:32:31,490
of the signal that might be part of it

876
00:32:29,330 --> 00:32:34,010
but I think that's also used for

877
00:32:31,490 --> 00:32:37,730
locating the pen so I think that that

878
00:32:34,010 --> 00:32:40,610
first pulse is the tablet sending some

879
00:32:37,730 --> 00:32:42,050
you know basically the tablet is a one

880
00:32:40,610 --> 00:32:43,189
side of a transformer like an electrical

881
00:32:42,050 --> 00:32:44,600
transformer and the pen is the other

882
00:32:43,190 --> 00:32:46,490
half and the tablet transmits a little

883
00:32:44,600 --> 00:32:48,800
bit of energy and then just like an RFID

884
00:32:46,490 --> 00:32:50,330
card the pen can kind of modulate a

885
00:32:48,800 --> 00:32:52,730
little bit of data back in its response

886
00:32:50,330 --> 00:32:55,100
by kind of adjusting how much power it

887
00:32:52,730 --> 00:32:57,410
draws from that system so in this case

888
00:32:55,100 --> 00:32:59,000
that first burst of energy is kind of

889
00:32:57,410 --> 00:33:00,560
locating the pen but then it's actually

890
00:32:59,000 --> 00:33:02,240
sitting back a bunch of ones and zeroes

891
00:33:00,560 --> 00:33:06,590
and so that was that was an interesting

892
00:33:02,240 --> 00:33:07,880
thing to dig into also so I'd been

893
00:33:06,590 --> 00:33:09,620
looking at a couple of different tablets

894
00:33:07,880 --> 00:33:12,200
as you can tell by me just confusing one

895
00:33:09,620 --> 00:33:14,389
tablet with a different tablet but then

896
00:33:12,200 --> 00:33:17,240
I started like going a lot deeper into

897
00:33:14,390 --> 00:33:19,280
this particular one it's the Wacom the

898
00:33:17,240 --> 00:33:22,310
model number is CTE 450 but it was also

899
00:33:19,280 --> 00:33:24,440
marketed as the bamboo fun tablet I

900
00:33:22,310 --> 00:33:26,240
liked this one because this was like the

901
00:33:24,440 --> 00:33:27,290
first affordable tablet I found this was

902
00:33:26,240 --> 00:33:28,700
the first time I could just go down to

903
00:33:27,290 --> 00:33:32,000
Fry's Electronics and buy a tablet for a

904
00:33:28,700 --> 00:33:33,740
90 bucks and then much later I found

905
00:33:32,000 --> 00:33:35,510
well these are actually really cheap on

906
00:33:33,740 --> 00:33:37,220
eBay so I could just buy a bunch of them

907
00:33:35,510 --> 00:33:39,280
for like $4 each and then have a great

908
00:33:37,220 --> 00:33:42,800
hacking platform

909
00:33:39,280 --> 00:33:45,139
and even better actually these tablets

910
00:33:42,800 --> 00:33:47,570
came with not just a pen but this little

911
00:33:45,140 --> 00:33:50,090
mouse thing and the mouse thing was

912
00:33:47,570 --> 00:33:53,480
actually so much larger than the pen

913
00:33:50,090 --> 00:33:55,459
that they were using discrete logic

914
00:33:53,480 --> 00:33:57,530
chips so each they didn't even have any

915
00:33:55,460 --> 00:33:58,970
custom silicon they were using like

916
00:33:57,530 --> 00:34:00,350
individual logic gates

917
00:33:58,970 --> 00:34:02,270
you know flip-flops and and gates and

918
00:34:00,350 --> 00:34:04,189
things on the board so this was a great

919
00:34:02,270 --> 00:34:06,050
project to show you know when you don't

920
00:34:04,190 --> 00:34:07,700
have that complexity explosion that

921
00:34:06,050 --> 00:34:09,020
comes from software or a system on chip

922
00:34:07,700 --> 00:34:11,080
when you actually do just have the

923
00:34:09,020 --> 00:34:13,429
hardware out there on the circuit board

924
00:34:11,080 --> 00:34:15,350
it can it can totally be worthwhile to

925
00:34:13,429 --> 00:34:17,360
actually make a schematic and then and

926
00:34:15,350 --> 00:34:18,770
then use that to to get some more

927
00:34:17,360 --> 00:34:21,950
information about you know in this case

928
00:34:18,770 --> 00:34:23,780
the schematic was made it very clear how

929
00:34:21,949 --> 00:34:24,889
the protocol works you could see exactly

930
00:34:23,780 --> 00:34:26,300
where each of the bits are being

931
00:34:24,889 --> 00:34:31,400
calculated and then fed into the shift

932
00:34:26,300 --> 00:34:33,140
register so the mouse the mouse was fun

933
00:34:31,400 --> 00:34:34,580
and easy I did a video episode about the

934
00:34:33,139 --> 00:34:36,440
mouse and that didn't take too long but

935
00:34:34,580 --> 00:34:41,179
then the tablet itself was this huge

936
00:34:36,440 --> 00:34:43,130
rabbit hole so the tablet the tablet

937
00:34:41,179 --> 00:34:45,230
doesn't even use a processor that I was

938
00:34:43,130 --> 00:34:46,640
familiar with before I I like posted a

939
00:34:45,230 --> 00:34:48,260
picture of this processor on Twitter and

940
00:34:46,639 --> 00:34:50,839
was asking it has anybody seen one of

941
00:34:48,260 --> 00:34:52,610
these and actually the more from

942
00:34:50,840 --> 00:34:54,800
Adafruit recognized it as this thing

943
00:34:52,610 --> 00:34:56,660
that used to be made by sanyo and then

944
00:34:54,800 --> 00:34:59,480
got bought up by own semi called the LC

945
00:34:56,659 --> 00:35:02,210
87 which I guess is been used in like

946
00:34:59,480 --> 00:35:03,410
appliances and stuff it's a very strange

947
00:35:02,210 --> 00:35:05,000
chip and there are a lot of different

948
00:35:03,410 --> 00:35:07,069
variants of it that all have different

949
00:35:05,000 --> 00:35:09,920
peripherals and most of those aren't

950
00:35:07,070 --> 00:35:11,510
documented and so it actually turns out

951
00:35:09,920 --> 00:35:15,020
I'm pretty sure this is a custom chip

952
00:35:11,510 --> 00:35:17,450
for walk on that that sanyo is /on semi

953
00:35:15,020 --> 00:35:20,990
made with Wacom specific peripherals on

954
00:35:17,450 --> 00:35:23,120
it and it looked like there was a debug

955
00:35:20,990 --> 00:35:24,379
interface broken out you know going back

956
00:35:23,120 --> 00:35:25,790
to the chisel you know you really want

957
00:35:24,380 --> 00:35:27,350
to find like well where is where is a

958
00:35:25,790 --> 00:35:29,120
great place to stick this in so I can

959
00:35:27,350 --> 00:35:31,009
break the system open and if you can

960
00:35:29,120 --> 00:35:33,020
find firmware that's great

961
00:35:31,010 --> 00:35:34,490
if you can find a debug interface that

962
00:35:33,020 --> 00:35:36,890
lets you slurp out the firmware then

963
00:35:34,490 --> 00:35:38,060
that's that's awesome a lot of times you

964
00:35:36,890 --> 00:35:39,379
don't get that lucky though like the

965
00:35:38,060 --> 00:35:41,390
debug interface would be turned off

966
00:35:39,380 --> 00:35:43,970
you'll have flash readout protection in

967
00:35:41,390 --> 00:35:45,980
this case I think the debug interface

968
00:35:43,970 --> 00:35:49,580
was turned off and I just didn't even

969
00:35:45,980 --> 00:35:51,080
have access to the debug dongle I tried

970
00:35:49,580 --> 00:35:52,700
finding actually eventually one of my

971
00:35:51,080 --> 00:35:54,109
fans actually sent me one of

972
00:35:52,700 --> 00:35:56,118
dongles and so there'll be a follow-up

973
00:35:54,109 --> 00:35:57,470
where I actually dig into that but when

974
00:35:56,119 --> 00:36:01,640
I was doing this that was unobtainium

975
00:35:57,470 --> 00:36:03,200
and so I I just had kind of had to

976
00:36:01,640 --> 00:36:07,098
figure out how this chip worked without

977
00:36:03,200 --> 00:36:10,609
hardly any documentation but that's what

978
00:36:07,099 --> 00:36:12,619
I started following a hunch so I wanted

979
00:36:10,609 --> 00:36:14,180
to read the firmware out of this chip in

980
00:36:12,619 --> 00:36:18,380
order to get an idea of what the tablet

981
00:36:14,180 --> 00:36:20,540
was actually doing and the I think I

982
00:36:18,380 --> 00:36:23,260
think we got a little more in this video

983
00:36:20,540 --> 00:36:25,759
yeah the processor was such a problem

984
00:36:23,260 --> 00:36:27,619
but I had this hunch where we're already

985
00:36:25,760 --> 00:36:29,510
getting a little bit of that info from

986
00:36:27,619 --> 00:36:32,900
the processor in the form of those USB

987
00:36:29,510 --> 00:36:34,369
descriptors where it tells us like okay

988
00:36:32,900 --> 00:36:36,380
I just plugged in my tablet here's the

989
00:36:34,369 --> 00:36:37,849
report descriptor here's how all that

990
00:36:36,380 --> 00:36:41,150
stuff maps into a packet here's my

991
00:36:37,849 --> 00:36:42,680
device string all that and that's in the

992
00:36:41,150 --> 00:36:44,720
same memory as the code that we're

993
00:36:42,680 --> 00:36:47,359
trying to extract so I was thinking well

994
00:36:44,720 --> 00:36:49,009
maybe maybe this is a glitching target

995
00:36:47,359 --> 00:36:51,348
maybe I can just try to interrupt the

996
00:36:49,010 --> 00:36:53,869
processor right when it's deciding how

997
00:36:51,349 --> 00:36:55,550
long that response should be and get it

998
00:36:53,869 --> 00:36:57,230
to calculate that result incorrectly and

999
00:36:55,550 --> 00:37:00,560
just send me a much longer packet and

1000
00:36:57,230 --> 00:37:02,660
just read the firmware out so I started

1001
00:37:00,560 --> 00:37:04,069
following that some of you might be

1002
00:37:02,660 --> 00:37:05,598
familiar with this awesome hacking tool

1003
00:37:04,069 --> 00:37:07,790
called the chip whisperer made by Colin

1004
00:37:05,599 --> 00:37:09,349
O'Flynn this is an add-on I made for it

1005
00:37:07,790 --> 00:37:10,880
called the face whisperer

1006
00:37:09,349 --> 00:37:13,430
because it's also based on the face

1007
00:37:10,880 --> 00:37:16,099
dancer it's basically the the face

1008
00:37:13,430 --> 00:37:18,828
dancer is a kind of a saw like a

1009
00:37:16,099 --> 00:37:21,140
controllable USB host or you can tell it

1010
00:37:18,829 --> 00:37:22,700
you know I want to pretend to be this

1011
00:37:21,140 --> 00:37:24,589
kind of device I want to talk to this

1012
00:37:22,700 --> 00:37:28,250
kind of device uses this chip the max

1013
00:37:24,589 --> 00:37:30,950
3421 II in this case I took that same

1014
00:37:28,250 --> 00:37:34,520
chip and kind of wired it up in a way

1015
00:37:30,950 --> 00:37:36,109
that let me send out a request you know

1016
00:37:34,520 --> 00:37:39,619
ask the device for its descriptors and

1017
00:37:36,109 --> 00:37:41,270
then get a timing trigger that's cycle

1018
00:37:39,619 --> 00:37:43,640
accurate to when the device would be

1019
00:37:41,270 --> 00:37:45,680
seeing that USB packet and then I can

1020
00:37:43,640 --> 00:37:49,310
use that to actually deliver the glitch

1021
00:37:45,680 --> 00:37:51,560
just the right spot so this is this is

1022
00:37:49,310 --> 00:37:53,299
the money shot right here so that that's

1023
00:37:51,560 --> 00:37:55,069
the power power trace on the right and

1024
00:37:53,300 --> 00:37:56,390
you can see the the big spike is the

1025
00:37:55,069 --> 00:37:58,310
glitch and then it's kind of misbehaving

1026
00:37:56,390 --> 00:37:59,660
for a while and the red packets are

1027
00:37:58,310 --> 00:38:01,490
stuff where it just displays the wrong

1028
00:37:59,660 --> 00:38:03,649
and give me the wrong stuff the green

1029
00:38:01,490 --> 00:38:05,868
stuff our packets that are way longer

1030
00:38:03,650 --> 00:38:07,519
than they're supposed to be

1031
00:38:05,869 --> 00:38:09,469
yeah it starts out just giving me

1032
00:38:07,519 --> 00:38:10,910
regular descriptors and then you can

1033
00:38:09,469 --> 00:38:12,079
start to see some bitters show up when

1034
00:38:10,910 --> 00:38:14,509
it gets close to the interesting part

1035
00:38:12,079 --> 00:38:17,839
and then and then just all of a sudden

1036
00:38:14,509 --> 00:38:22,519
huge packets and so that was the

1037
00:38:17,839 --> 00:38:25,670
firmware so this was this was great I

1038
00:38:22,519 --> 00:38:26,988
had a lot of fun with this and this

1039
00:38:25,670 --> 00:38:28,789
seems like a technique that might be

1040
00:38:26,989 --> 00:38:30,729
applicable to a lot of devices so you

1041
00:38:28,789 --> 00:38:32,779
might have actually heard about this in

1042
00:38:30,729 --> 00:38:34,669
Kate and Dominic's talk yesterday

1043
00:38:32,779 --> 00:38:39,259
because there they're working on a tool

1044
00:38:34,670 --> 00:38:40,699
that's like this but a lot better all

1045
00:38:39,259 --> 00:38:43,089
right the most recent thing that I've

1046
00:38:40,699 --> 00:38:45,199
been reverse engineering is this gimbal

1047
00:38:43,089 --> 00:38:46,849
and this is another one of those reverse

1048
00:38:45,199 --> 00:38:49,969
engineering for interoperability kind of

1049
00:38:46,849 --> 00:38:51,979
opportunities so I got this is this is

1050
00:38:49,969 --> 00:38:53,660
for a project where I'm just building a

1051
00:38:51,979 --> 00:38:55,368
robot that lets my cat hang out with

1052
00:38:53,660 --> 00:38:58,489
people on the internet it's really super

1053
00:38:55,369 --> 00:39:01,719
good but it's great I my cats kind of

1054
00:38:58,489 --> 00:39:04,039
the co-star on these these streams and

1055
00:39:01,719 --> 00:39:05,689
I've currently got a tripod that I fell

1056
00:39:04,039 --> 00:39:07,430
over him around with and it just seemed

1057
00:39:05,689 --> 00:39:09,049
like well we could just put this on a

1058
00:39:07,430 --> 00:39:10,308
Roomba or something and have it wander

1059
00:39:09,049 --> 00:39:12,890
around and then people could control it

1060
00:39:10,309 --> 00:39:14,869
and that idea evolved into I want to

1061
00:39:12,890 --> 00:39:16,400
have this camera on wires that we can

1062
00:39:14,869 --> 00:39:17,869
like follow the cat with computer vision

1063
00:39:16,400 --> 00:39:21,079
and have people like control it with

1064
00:39:17,869 --> 00:39:22,969
twitch and and all that so then that led

1065
00:39:21,079 --> 00:39:25,729
to wanting a gimbal that I can both

1066
00:39:22,969 --> 00:39:27,859
stream HD video out of and like

1067
00:39:25,729 --> 00:39:31,308
uncompressed you know 1080p real-time

1068
00:39:27,859 --> 00:39:32,630
and something that was kind of small and

1069
00:39:31,309 --> 00:39:33,769
lightweight and inexpensive all the

1070
00:39:32,630 --> 00:39:35,929
things you'd usually want from a gimbal

1071
00:39:33,769 --> 00:39:37,609
so I didn't want to get this like huge

1072
00:39:35,929 --> 00:39:39,439
thing that was designed for a DSLR that

1073
00:39:37,609 --> 00:39:40,969
already had all these controls I ended

1074
00:39:39,439 --> 00:39:42,949
up just kind of picking this small thing

1075
00:39:40,969 --> 00:39:45,979
designed for quad copters and then

1076
00:39:42,949 --> 00:39:47,929
hacking on it until it worked so part of

1077
00:39:45,979 --> 00:39:50,419
that was mechanical modifications and

1078
00:39:47,929 --> 00:39:52,099
trying to make the right brackets to

1079
00:39:50,420 --> 00:39:53,599
accept the camera that I wanted to use

1080
00:39:52,099 --> 00:39:57,189
and putting some more signal wires

1081
00:39:53,599 --> 00:39:59,150
through the joints in the gimbal but a

1082
00:39:57,189 --> 00:40:01,219
lot of it actually turned out to be

1083
00:39:59,150 --> 00:40:03,199
software like a lot more than I expected

1084
00:40:01,219 --> 00:40:04,549
we could have just controlled this

1085
00:40:03,199 --> 00:40:05,989
gimbal the way it was designed you know

1086
00:40:04,549 --> 00:40:07,400
reading this reading the side of the

1087
00:40:05,989 --> 00:40:09,969
Lego brick and just connecting it the

1088
00:40:07,400 --> 00:40:12,319
way we're supposed to and and that was

1089
00:40:09,969 --> 00:40:13,819
that was what I tried at first but there

1090
00:40:12,319 --> 00:40:15,558
was something missing I needed to know

1091
00:40:13,819 --> 00:40:17,479
where it was currently pointed like you

1092
00:40:15,559 --> 00:40:19,279
can give it do stick inputs and that'll

1093
00:40:17,479 --> 00:40:20,538
move it left or right or up or down

1094
00:40:19,279 --> 00:40:22,159
then I have no way of knowing well where

1095
00:40:20,539 --> 00:40:23,390
does it think it's pointed right now and

1096
00:40:22,159 --> 00:40:24,559
I would have had to add a separate

1097
00:40:23,390 --> 00:40:26,509
sensor for that which would have been

1098
00:40:24,559 --> 00:40:27,829
super annoying so then I started to take

1099
00:40:26,509 --> 00:40:29,989
it apart and try to tie into the

1100
00:40:27,829 --> 00:40:31,549
existing sensor electrically and then

1101
00:40:29,989 --> 00:40:32,719
somebody kind of nerd snipes me with

1102
00:40:31,549 --> 00:40:34,788
like why don't you just pack the

1103
00:40:32,719 --> 00:40:36,049
firmware or why don't you just like talk

1104
00:40:34,789 --> 00:40:37,640
to the serial port and I'm like well

1105
00:40:36,049 --> 00:40:39,949
this seems easier but then they

1106
00:40:37,640 --> 00:40:41,538
eventually convinced me and I started to

1107
00:40:39,949 --> 00:40:44,829
dig into the firmware so we found a

1108
00:40:41,539 --> 00:40:47,809
debug port it was you know like armed

1109
00:40:44,829 --> 00:40:48,380
Sarila wire debug but flash readout was

1110
00:40:47,809 --> 00:40:49,939
disabled

1111
00:40:48,380 --> 00:40:52,309
it had firmware updates but the firmware

1112
00:40:49,939 --> 00:40:54,589
updates were encrypted so it didn't look

1113
00:40:52,309 --> 00:40:57,739
like there was a super easy starting

1114
00:40:54,589 --> 00:40:58,969
point but there was this it came with

1115
00:40:57,739 --> 00:41:00,829
this little tool that you could run in

1116
00:40:58,969 --> 00:41:04,009
Windows it would connect to the gimble

1117
00:41:00,829 --> 00:41:06,109
over serial port it kind of repurposed

1118
00:41:04,009 --> 00:41:08,449
the pitch and yaw controls as like

1119
00:41:06,109 --> 00:41:09,979
serial Rx and TX but only if you

1120
00:41:08,449 --> 00:41:12,109
responded to this magic packet right

1121
00:41:09,979 --> 00:41:13,339
when the gimbal turns on so you can get

1122
00:41:12,109 --> 00:41:15,799
an idea of how this works by just

1123
00:41:13,339 --> 00:41:17,900
reverse engineering the existing Windows

1124
00:41:15,799 --> 00:41:19,249
apps you know you can either take apart

1125
00:41:17,900 --> 00:41:20,209
the binaries but in this case I was

1126
00:41:19,249 --> 00:41:23,269
actually kind of doing it at the

1127
00:41:20,209 --> 00:41:24,019
protocol level and so I looked at the

1128
00:41:23,269 --> 00:41:26,269
serial packets

1129
00:41:24,019 --> 00:41:28,788
I used Sig rock and started making a

1130
00:41:26,269 --> 00:41:30,890
stack of decoders and Stiga rock is an

1131
00:41:28,789 --> 00:41:32,900
open-source framework for logic

1132
00:41:30,890 --> 00:41:34,189
analyzers and it works with a lot of

1133
00:41:32,900 --> 00:41:35,679
different hardware I was using it with

1134
00:41:34,189 --> 00:41:37,699
one of the older salient logic boards

1135
00:41:35,679 --> 00:41:39,140
but in this case it was really handy

1136
00:41:37,699 --> 00:41:40,969
because you can just capture a big data

1137
00:41:39,140 --> 00:41:42,890
stream and then start writing Python

1138
00:41:40,969 --> 00:41:46,309
programs on top of that to just process

1139
00:41:42,890 --> 00:41:50,239
the data so for example I would end up

1140
00:41:46,309 --> 00:41:52,489
with these traces like yeah we were like

1141
00:41:50,239 --> 00:41:56,390
trying to work out the CRC's together on

1142
00:41:52,489 --> 00:41:59,929
the stream and we just ended up with

1143
00:41:56,390 --> 00:42:01,879
this this gradually higher level view of

1144
00:41:59,929 --> 00:42:03,859
what was going on by by first looking at

1145
00:42:01,880 --> 00:42:05,630
the serial data and then just trying to

1146
00:42:03,859 --> 00:42:10,609
figure out more of that and add more

1147
00:42:05,630 --> 00:42:13,539
decoders to the stock so that was that

1148
00:42:10,609 --> 00:42:13,538
got us pretty far

1149
00:42:18,380 --> 00:42:25,020
you know the the gimbal project there

1150
00:42:22,740 --> 00:42:26,549
were a lot of wrong turns in that so the

1151
00:42:25,020 --> 00:42:29,520
serial protocol it turns out was kind of

1152
00:42:26,550 --> 00:42:31,920
buggy and there was a way that you could

1153
00:42:29,520 --> 00:42:33,690
just send it a packet and well there

1154
00:42:31,920 --> 00:42:36,090
were multiple multiple memory corruption

1155
00:42:33,690 --> 00:42:38,340
vulnerabilities that were just really

1156
00:42:36,090 --> 00:42:40,410
really stupidly obvious like there was

1157
00:42:38,340 --> 00:42:43,500
one where it's parsing out packets and

1158
00:42:40,410 --> 00:42:45,529
the packets can be up to 255 bytes long

1159
00:42:43,500 --> 00:42:47,700
because it's an 8 bit length field and

1160
00:42:45,530 --> 00:42:49,500
they're only storing it like a 32 byte

1161
00:42:47,700 --> 00:42:50,819
buffer you know just stupid things like

1162
00:42:49,500 --> 00:42:52,670
that and this is this is still all over

1163
00:42:50,820 --> 00:42:55,140
embedded systems as you might know from

1164
00:42:52,670 --> 00:42:58,260
if you've attended any other talks about

1165
00:42:55,140 --> 00:43:00,330
the security of embedded systems so

1166
00:42:58,260 --> 00:43:02,250
actually this would this turned out to

1167
00:43:00,330 --> 00:43:04,200
be kind of a hazard because I ended up

1168
00:43:02,250 --> 00:43:08,430
kind of breaking the gimble by sending

1169
00:43:04,200 --> 00:43:10,710
it a bad packet and so I actually over

1170
00:43:08,430 --> 00:43:13,200
wrote the settings that told the gimble

1171
00:43:10,710 --> 00:43:14,910
like where's the motor calibration and

1172
00:43:13,200 --> 00:43:16,919
where's the like center of the magnetic

1173
00:43:14,910 --> 00:43:18,180
encoders and so at that point you just

1174
00:43:16,920 --> 00:43:20,310
power on the gimbal and it just

1175
00:43:18,180 --> 00:43:21,930
immediately tries to break itself just

1176
00:43:20,310 --> 00:43:24,779
like physically slams to all the end

1177
00:43:21,930 --> 00:43:26,819
stops and no good so then there was kind

1178
00:43:24,780 --> 00:43:30,480
of a little sub task of how do we get

1179
00:43:26,820 --> 00:43:32,520
back out of that and that developed a

1180
00:43:30,480 --> 00:43:34,320
lot more that needed a lot more tool

1181
00:43:32,520 --> 00:43:36,660
work and kind of understanding of this

1182
00:43:34,320 --> 00:43:38,520
protocol so just still building from

1183
00:43:36,660 --> 00:43:40,020
that serial protocol I ended up kind of

1184
00:43:38,520 --> 00:43:41,540
getting a little higher level and trying

1185
00:43:40,020 --> 00:43:43,650
to see well what are all these different

1186
00:43:41,540 --> 00:43:46,259
what are all these different values mean

1187
00:43:43,650 --> 00:43:47,640
I found this kind of shared memory space

1188
00:43:46,260 --> 00:43:49,380
that all the different control loops in

1189
00:43:47,640 --> 00:43:52,109
the gimbal used and there were actually

1190
00:43:49,380 --> 00:43:54,060
multiple separate microcontrollers each

1191
00:43:52,110 --> 00:43:56,160
joint in the gimbal at a separate micro

1192
00:43:54,060 --> 00:43:57,600
and and so it was just an interesting

1193
00:43:56,160 --> 00:43:58,859
reversing journey and you're trying to

1194
00:43:57,600 --> 00:44:00,560
figure out what are all these settings

1195
00:43:58,860 --> 00:44:03,570
how do I fix the thing that I broke

1196
00:44:00,560 --> 00:44:06,090
ended up getting a second gimbal donated

1197
00:44:03,570 --> 00:44:07,290
and that one actually was kind of the

1198
00:44:06,090 --> 00:44:08,580
known good one that we would transferred

1199
00:44:07,290 --> 00:44:09,450
some settings from but of course they're

1200
00:44:08,580 --> 00:44:10,710
different gimbals and they have

1201
00:44:09,450 --> 00:44:13,799
different calibration so then we had to

1202
00:44:10,710 --> 00:44:15,270
figure out how do you calibrate them so

1203
00:44:13,800 --> 00:44:16,800
that was that was a nice rabbit hole and

1204
00:44:15,270 --> 00:44:20,220
I tried to document that as much as I

1205
00:44:16,800 --> 00:44:21,360
could and so I eventually end up with

1206
00:44:20,220 --> 00:44:23,399
something that kind of works this is the

1207
00:44:21,360 --> 00:44:24,420
view from the camera and this was a

1208
00:44:23,400 --> 00:44:29,130
little unstable

1209
00:44:24,420 --> 00:44:30,720
but it was actually not just like wildly

1210
00:44:29,130 --> 00:44:32,960
oscillating back and forth anymore which

1211
00:44:30,720 --> 00:44:32,959
is not

1212
00:44:33,720 --> 00:44:37,830
I was kinda hoping to avoid having to

1213
00:44:35,910 --> 00:44:39,930
dive into the binary for this project

1214
00:44:37,830 --> 00:44:40,830
because it just seemed like you could

1215
00:44:39,930 --> 00:44:44,250
get everything you needed from that

1216
00:44:40,830 --> 00:44:45,600
serial protocol but because because I

1217
00:44:44,250 --> 00:44:47,220
needed to figure out the calibration and

1218
00:44:45,600 --> 00:44:49,830
because there was just so much going on

1219
00:44:47,220 --> 00:44:51,359
in there it didn't turn out to be really

1220
00:44:49,830 --> 00:44:53,400
useful to take a look at the binary and

1221
00:44:51,360 --> 00:44:55,770
this was something that we got access to

1222
00:44:53,400 --> 00:44:57,120
kind of by luck so I mentioned the

1223
00:44:55,770 --> 00:45:04,230
binary was encrypted in the firmware

1224
00:44:57,120 --> 00:45:06,630
updates and the the the the board like

1225
00:45:04,230 --> 00:45:08,760
each micro controller has a debug port

1226
00:45:06,630 --> 00:45:10,020
broken out but you can connect to the

1227
00:45:08,760 --> 00:45:11,640
debug port but you can't read flash

1228
00:45:10,020 --> 00:45:14,250
memory as soon as you attach a debugger

1229
00:45:11,640 --> 00:45:15,930
it disables flash read and so if you try

1230
00:45:14,250 --> 00:45:17,610
to read from flash if you try to run any

1231
00:45:15,930 --> 00:45:20,700
instructions that read from flash it

1232
00:45:17,610 --> 00:45:24,600
just holds but you can still read SRAM

1233
00:45:20,700 --> 00:45:25,919
and one of the one of the folks in the

1234
00:45:24,600 --> 00:45:28,230
stream actually just happened to notice

1235
00:45:25,920 --> 00:45:29,880
hey this SRAM dump you posted there's a

1236
00:45:28,230 --> 00:45:31,620
thing in here that looks like a private

1237
00:45:29,880 --> 00:45:33,330
like a encryption key looks like here's

1238
00:45:31,620 --> 00:45:36,150
the AES key schedule and this might be a

1239
00:45:33,330 --> 00:45:37,290
key and just like tried it out and yep

1240
00:45:36,150 --> 00:45:39,210
sure enough we can decrypt the firmware

1241
00:45:37,290 --> 00:45:41,750
with that it was just a little bit of

1242
00:45:39,210 --> 00:45:43,680
guessing about what modes to use and

1243
00:45:41,750 --> 00:45:46,770
figuring out what the initialization

1244
00:45:43,680 --> 00:45:48,000
vectors were oh yeah yeah I think I

1245
00:45:46,770 --> 00:45:49,680
think we actually originally found the

1246
00:45:48,000 --> 00:45:53,070
key just by brute forcing it scanning

1247
00:45:49,680 --> 00:45:54,750
through the memory and then and then and

1248
00:45:53,070 --> 00:45:56,610
then after we found the key it was like

1249
00:45:54,750 --> 00:45:58,740
very obvious that here's the rest of the

1250
00:45:56,610 --> 00:46:02,220
kind of leavings of the AES algorithm in

1251
00:45:58,740 --> 00:46:03,839
the bootloader you mean you learned so

1252
00:46:02,220 --> 00:46:05,189
much about the simple problems that you

1253
00:46:03,840 --> 00:46:06,660
can avoid if you're trying to make a

1254
00:46:05,190 --> 00:46:09,270
secure system anytime you take apart

1255
00:46:06,660 --> 00:46:12,629
someone else's system like just just

1256
00:46:09,270 --> 00:46:16,320
clear the keys I mean not the way Wi-Fi

1257
00:46:12,630 --> 00:46:19,680
is clearing the keys but

1258
00:46:16,320 --> 00:46:21,470
yeah yeah there are there problems with

1259
00:46:19,680 --> 00:46:25,770
that both ways huh

1260
00:46:21,470 --> 00:46:27,779
so yeah I mean they're there turned out

1261
00:46:25,770 --> 00:46:29,220
to be a pretty deep rabbit hole in this

1262
00:46:27,780 --> 00:46:31,290
particular reverse engineering project

1263
00:46:29,220 --> 00:46:32,939
and this one isn't even really done I've

1264
00:46:31,290 --> 00:46:36,120
got this to the point where it's kind of

1265
00:46:32,940 --> 00:46:37,890
usable as a you know as a camera gimbal

1266
00:46:36,120 --> 00:46:39,210
but there's still a lot more work to

1267
00:46:37,890 --> 00:46:42,390
figure out how to tune it so it doesn't

1268
00:46:39,210 --> 00:46:45,000
wobble as much and how to just get more

1269
00:46:42,390 --> 00:46:47,160
information about what each of these

1270
00:46:45,000 --> 00:46:48,660
parameters actually does and so I'll be

1271
00:46:47,160 --> 00:46:50,430
I'll be continuing the live streaming on

1272
00:46:48,660 --> 00:46:52,080
that and doing some more reverse

1273
00:46:50,430 --> 00:46:56,220
engineering on that and trying to share

1274
00:46:52,080 --> 00:46:57,810
as much of that as I can yeah so that I

1275
00:46:56,220 --> 00:46:58,830
mean I think that's about as much as I'm

1276
00:46:57,810 --> 00:47:00,779
going to talk about the gimbal right now

1277
00:46:58,830 --> 00:47:05,640
but it's it's still it's still quite a

1278
00:47:00,780 --> 00:47:07,230
fun project I mean I think I don't worry

1279
00:47:05,640 --> 00:47:09,900
where it leaves me though cuz I feel

1280
00:47:07,230 --> 00:47:12,780
like as I mentioned at the beginning of

1281
00:47:09,900 --> 00:47:14,550
this talk I think the way we have been

1282
00:47:12,780 --> 00:47:16,800
approaching this is a little bit wrong

1283
00:47:14,550 --> 00:47:19,170
sometimes we think like because I get

1284
00:47:16,800 --> 00:47:21,930
this from people I talk to a lot like

1285
00:47:19,170 --> 00:47:24,390
they see the stuff that I've like edited

1286
00:47:21,930 --> 00:47:27,960
into a super condensed video and then I

1287
00:47:24,390 --> 00:47:29,490
post this stuff and people think like oh

1288
00:47:27,960 --> 00:47:30,930
you can just do all this stuff instantly

1289
00:47:29,490 --> 00:47:32,279
can I just give you some stuff and you

1290
00:47:30,930 --> 00:47:35,270
can reverse-engineer it all like right

1291
00:47:32,280 --> 00:47:37,560
now and I try to tell people actually

1292
00:47:35,270 --> 00:47:40,710
it's not it doesn't really take that

1293
00:47:37,560 --> 00:47:42,240
much like skill I mean obviously skill

1294
00:47:40,710 --> 00:47:43,500
helps obviously when you do this stuff

1295
00:47:42,240 --> 00:47:45,959
you learn how to do it more efficiently

1296
00:47:43,500 --> 00:47:47,730
and do it better in the stuff builds but

1297
00:47:45,960 --> 00:47:48,990
I don't think that's the primary aspect

1298
00:47:47,730 --> 00:47:50,640
of this the primary aspect is just

1299
00:47:48,990 --> 00:47:52,830
investing a lot of time and being really

1300
00:47:50,640 --> 00:47:54,180
patient with the technology and like

1301
00:47:52,830 --> 00:47:56,910
knowing that all the stuff that you're

1302
00:47:54,180 --> 00:47:59,040
working with is like piles have melted

1303
00:47:56,910 --> 00:48:01,859
Lego blocks put together by people who

1304
00:47:59,040 --> 00:48:07,110
are really overworked and tired and and

1305
00:48:01,860 --> 00:48:10,680
it's it's much more about about that

1306
00:48:07,110 --> 00:48:12,720
just understanding the just how deep

1307
00:48:10,680 --> 00:48:14,430
that rabbit hole goes and so that's why

1308
00:48:12,720 --> 00:48:16,529
I've been trying to share not just the

1309
00:48:14,430 --> 00:48:17,850
really condense stuff but also like what

1310
00:48:16,530 --> 00:48:19,740
does this actually take trying to do

1311
00:48:17,850 --> 00:48:21,720
this stuff with people in real time and

1312
00:48:19,740 --> 00:48:23,520
sharing it on the internet it's also

1313
00:48:21,720 --> 00:48:25,259
trying to get more of that in person and

1314
00:48:23,520 --> 00:48:26,640
I think I think that's a way that we can

1315
00:48:25,260 --> 00:48:28,800
kind of counteract this vision of what

1316
00:48:26,640 --> 00:48:29,980
hacking might be like and kind of push

1317
00:48:28,800 --> 00:48:32,680
back against this idea

1318
00:48:29,980 --> 00:48:33,880
like why why why are we even spending

1319
00:48:32,680 --> 00:48:35,529
time doing it computers should just be

1320
00:48:33,880 --> 00:48:37,780
easy for like people who are really good

1321
00:48:35,530 --> 00:48:39,010
at computers it's like well no even when

1322
00:48:37,780 --> 00:48:40,420
you're really good at this stuff it's

1323
00:48:39,010 --> 00:48:43,930
still hard and it still takes a lot of

1324
00:48:40,420 --> 00:48:45,340
time so I think I think these aren't

1325
00:48:43,930 --> 00:48:46,720
necessarily the kind of hackers I want

1326
00:48:45,340 --> 00:48:50,890
to hang out with or learn from but they

1327
00:48:46,720 --> 00:48:52,839
make great TV characters I think this is

1328
00:48:50,890 --> 00:48:56,500
maybe a bit more the kind of hacking

1329
00:48:52,840 --> 00:48:59,080
that I that I feel at home with so you

1330
00:48:56,500 --> 00:49:01,320
know I feel like it's more like you know

1331
00:48:59,080 --> 00:49:03,880
craftsmanship or like woodworking or

1332
00:49:01,320 --> 00:49:05,920
we're like scribes like copying

1333
00:49:03,880 --> 00:49:09,490
manuscripts I feel like it's something

1334
00:49:05,920 --> 00:49:14,740
that you know it should be treated as

1335
00:49:09,490 --> 00:49:16,629
this this this activity where it's not

1336
00:49:14,740 --> 00:49:18,189
like you've achieved a thing and you

1337
00:49:16,630 --> 00:49:20,830
have this status symbol of like I am a

1338
00:49:18,190 --> 00:49:22,660
hacker it's more like I do I have this

1339
00:49:20,830 --> 00:49:25,540
ritual of investing time in this

1340
00:49:22,660 --> 00:49:27,069
particular practice that can can get you

1341
00:49:25,540 --> 00:49:27,520
closer to understanding of what you're

1342
00:49:27,070 --> 00:49:29,890
working with

1343
00:49:27,520 --> 00:49:32,380
and so I think in that way it is it is

1344
00:49:29,890 --> 00:49:35,140
more like you know like studying a book

1345
00:49:32,380 --> 00:49:36,790
or like doing science I think a lot of

1346
00:49:35,140 --> 00:49:38,609
what we do should be thought of a lot

1347
00:49:36,790 --> 00:49:41,290
more like the physical sciences because

1348
00:49:38,609 --> 00:49:44,319
the things that we that we're trying to

1349
00:49:41,290 --> 00:49:45,940
understand now they're so complex that

1350
00:49:44,320 --> 00:49:47,410
you can't just ask all the people who

1351
00:49:45,940 --> 00:49:49,240
worked on it you know you've got to take

1352
00:49:47,410 --> 00:49:51,819
an approach more like we use for physics

1353
00:49:49,240 --> 00:49:53,379
or biology and find a way to conduct

1354
00:49:51,820 --> 00:49:54,520
experiments and actually figure out for

1355
00:49:53,380 --> 00:49:57,640
yourself what's going on inside

1356
00:49:54,520 --> 00:50:00,400
something so I I would encourage

1357
00:49:57,640 --> 00:50:02,710
everyone to just try to find something

1358
00:50:00,400 --> 00:50:03,730
that you want to take apart and focus a

1359
00:50:02,710 --> 00:50:05,410
lot more on finding something that

1360
00:50:03,730 --> 00:50:07,750
you're interested in then something

1361
00:50:05,410 --> 00:50:09,100
that's like particularly like hard or

1362
00:50:07,750 --> 00:50:10,690
has a particular technology in it or

1363
00:50:09,100 --> 00:50:12,310
anything because so much of it is just

1364
00:50:10,690 --> 00:50:14,140
about the actual time investment that

1365
00:50:12,310 --> 00:50:16,090
you make and if you can find something

1366
00:50:14,140 --> 00:50:18,040
that'll just just really get you

1367
00:50:16,090 --> 00:50:20,230
obsessed then the rest of it will just

1368
00:50:18,040 --> 00:50:23,050
fall out you know you'll you'll figure

1369
00:50:20,230 --> 00:50:24,670
out the problems one by one using the

1370
00:50:23,050 --> 00:50:26,830
same process that you're approaching the

1371
00:50:24,670 --> 00:50:28,180
whole project for like that's the cool

1372
00:50:26,830 --> 00:50:30,609
thing about reverse engineering is not

1373
00:50:28,180 --> 00:50:32,169
always the most efficient way to find an

1374
00:50:30,609 --> 00:50:33,880
answer in fact it's almost never the

1375
00:50:32,170 --> 00:50:35,950
most efficient way to find an answer but

1376
00:50:33,880 --> 00:50:39,160
it almost always works if you're willing

1377
00:50:35,950 --> 00:50:41,529
to and you have the time to put in so I

1378
00:50:39,160 --> 00:50:43,390
think that's that's what I'd like to

1379
00:50:41,530 --> 00:50:46,650
leave you all with today

1380
00:50:43,390 --> 00:50:46,650
yeah happy hacking

1381
00:50:53,260 --> 00:50:55,320
you

1382
00:51:02,430 --> 00:51:04,490
you

