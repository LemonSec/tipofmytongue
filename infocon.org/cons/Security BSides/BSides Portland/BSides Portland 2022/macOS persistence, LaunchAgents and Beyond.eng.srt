1
00:00:00,620 --> 00:00:00,730
[Music]

2
00:00:00,730 --> 00:00:00,900
[Applause]

3
00:00:00,900 --> 00:00:03,300
hi guys uh we're gonna get started here

4
00:00:03,300 --> 00:00:06,299
my name is will kinderman uh thank you

5
00:00:06,299 --> 00:00:07,980
for showing up to this talk about uh

6
00:00:07,980 --> 00:00:10,860
some Mac OS persistence mechanisms I'm

7
00:00:10,860 --> 00:00:12,179
really excited to be here I hope you

8
00:00:12,179 --> 00:00:13,799
guys are having a great day and excited

9
00:00:13,799 --> 00:00:15,660
to hear this talk

10
00:00:15,660 --> 00:00:16,920
um as mentioned in the keep them out

11
00:00:16,920 --> 00:00:18,180
this morning

12
00:00:18,180 --> 00:00:20,100
um this talk is going to be discussing

13
00:00:20,100 --> 00:00:22,380
things like using technology in ways

14
00:00:22,380 --> 00:00:24,900
that were unintended uh you find like in

15
00:00:24,900 --> 00:00:27,439
Mac OS there are a lot of

16
00:00:27,439 --> 00:00:30,180
mechanisms that you can use to do cool

17
00:00:30,180 --> 00:00:31,920
things and so let's talk about four of

18
00:00:31,920 --> 00:00:33,540
them and then at the end we'll close

19
00:00:33,540 --> 00:00:36,000
with uh how you can protect yourself

20
00:00:36,000 --> 00:00:37,620
against this

21
00:00:37,620 --> 00:00:40,200
so first a little bit about me I work at

22
00:00:40,200 --> 00:00:42,719
Oracle Cloud infrastructure I'm on their

23
00:00:42,719 --> 00:00:45,660
red team the photo you see on the right

24
00:00:45,660 --> 00:00:48,899
there is of my wife and our two dogs uh

25
00:00:48,899 --> 00:00:52,739
Lucy Liu and Cedros I'm a huge fan of

26
00:00:52,739 --> 00:00:55,379
retro gaming I have a ton of consoles I

27
00:00:55,379 --> 00:00:58,079
love to restore consoles and I love

28
00:00:58,079 --> 00:00:59,699
modding them like there's so much crazy

29
00:00:59,699 --> 00:01:01,079
cool technology that people are coming

30
00:01:01,079 --> 00:01:02,879
out with these days for like consoles

31
00:01:02,879 --> 00:01:04,260
you know like the Nintendo like it's

32
00:01:04,260 --> 00:01:07,200
it's pretty amazing my first ever

33
00:01:07,200 --> 00:01:10,040
exploit was in 1997.

34
00:01:10,040 --> 00:01:14,400
I was able to steal my parents uh AOL

35
00:01:14,400 --> 00:01:16,740
password from aol's like the save

36
00:01:16,740 --> 00:01:18,780
password thing so I could use AOL on my

37
00:01:18,780 --> 00:01:21,659
computer uh anytime I wanted to a 13

38
00:01:21,659 --> 00:01:22,860
year old me thought that was like the

39
00:01:22,860 --> 00:01:25,140
most awesome thing in the world and it

40
00:01:25,140 --> 00:01:26,820
probably led me down the path that I'm

41
00:01:26,820 --> 00:01:27,740
on today

42
00:01:27,740 --> 00:01:30,720
and finally I did the lock picking

43
00:01:30,720 --> 00:01:33,000
challenges for the CTF this year so if

44
00:01:33,000 --> 00:01:34,140
you haven't had a chance to go check

45
00:01:34,140 --> 00:01:36,900
them out uh go do I think the last time

46
00:01:36,900 --> 00:01:40,020
that I looked the second the last

47
00:01:40,020 --> 00:01:41,820
hardest and the hardest one both had

48
00:01:41,820 --> 00:01:43,799
just one solve on them and so you know

49
00:01:43,799 --> 00:01:45,420
if you get some time on those try to try

50
00:01:45,420 --> 00:01:47,040
to solve them let me know I did that's

51
00:01:47,040 --> 00:01:49,380
my first time ever Keen locks for

52
00:01:49,380 --> 00:01:52,320
pinning locks for a challenge like this

53
00:01:52,320 --> 00:01:54,240
uh in this presentation there will be

54
00:01:54,240 --> 00:01:55,799
some QR codes

55
00:01:55,799 --> 00:01:58,200
um and I have like three for Apple

56
00:01:58,200 --> 00:02:00,600
documentation and then one to take you

57
00:02:00,600 --> 00:02:02,820
to uh some third-party tools that'll

58
00:02:02,820 --> 00:02:04,439
help you protect yourself and so if you

59
00:02:04,439 --> 00:02:06,299
see that QR code it's going to be

60
00:02:06,299 --> 00:02:07,880
talking about like whatever Apple

61
00:02:07,880 --> 00:02:09,660
documentation on the mechanism that

62
00:02:09,660 --> 00:02:12,000
we're using Apple

63
00:02:12,000 --> 00:02:15,060
does not write good documentation uh

64
00:02:15,060 --> 00:02:17,099
but often you can get enough out of it

65
00:02:17,099 --> 00:02:19,860
to do what you want to do

66
00:02:19,860 --> 00:02:22,500
so before we get into talking about the

67
00:02:22,500 --> 00:02:24,540
persistence mechanisms I'd like to talk

68
00:02:24,540 --> 00:02:29,280
about TCC and what TCC means for you so

69
00:02:29,280 --> 00:02:32,520
TCC stands for transparency consent and

70
00:02:32,520 --> 00:02:34,980
control you can find it in every modern

71
00:02:34,980 --> 00:02:37,739
version of an opera operating system

72
00:02:37,739 --> 00:02:40,920
today so like it's on iOS it's on iPad

73
00:02:40,920 --> 00:02:43,440
OS it's on Mac OS and I'm sure it's

74
00:02:43,440 --> 00:02:46,319
probably like an Apple TV OS as well you

75
00:02:46,319 --> 00:02:47,340
know they're all very similar but

76
00:02:47,340 --> 00:02:49,739
they're their own builds and what TCC

77
00:02:49,739 --> 00:02:52,760
does is limits an application's access

78
00:02:52,760 --> 00:02:55,920
to sensitive information right and

79
00:02:55,920 --> 00:02:57,300
sensitive information defined by Apple

80
00:02:57,300 --> 00:03:00,060
in this case are things like the user's

81
00:03:00,060 --> 00:03:04,340
documents the users downloads

82
00:03:04,340 --> 00:03:07,099
and uh

83
00:03:07,099 --> 00:03:09,780
uh the desktop folder as well as like

84
00:03:09,780 --> 00:03:12,420
the trash is also considered to be a

85
00:03:12,420 --> 00:03:16,440
trusted source and so if you don't have

86
00:03:16,440 --> 00:03:18,959
TCC permissions for your application

87
00:03:18,959 --> 00:03:21,480
when you try to access those the user

88
00:03:21,480 --> 00:03:23,700
will get a prompt saying hey you're

89
00:03:23,700 --> 00:03:26,040
trying to access documents do you really

90
00:03:26,040 --> 00:03:27,540
want to do that and it'll say like

91
00:03:27,540 --> 00:03:29,159
whatever application is trying to to

92
00:03:29,159 --> 00:03:30,720
access that and so like it's one of the

93
00:03:30,720 --> 00:03:33,900
the major tells that we run into when

94
00:03:33,900 --> 00:03:36,180
we're trying to like land on a machine

95
00:03:36,180 --> 00:03:38,340
and and do things on a machine when the

96
00:03:38,340 --> 00:03:40,560
user doesn't know that we're there

97
00:03:40,560 --> 00:03:42,239
um and so like I said you know these

98
00:03:42,239 --> 00:03:44,220
most of these are in the user's home

99
00:03:44,220 --> 00:03:46,680
directory and they're like the directors

100
00:03:46,680 --> 00:03:48,659
that really contain the information that

101
00:03:48,659 --> 00:03:51,900
is more most interesting to us

102
00:03:51,900 --> 00:03:53,700
um

103
00:03:53,700 --> 00:03:57,000
as a user you can manually see what

104
00:03:57,000 --> 00:03:58,560
programs have permissions in these

105
00:03:58,560 --> 00:04:00,360
directories by opening up system

106
00:04:00,360 --> 00:04:02,159
preferences then security and privacy

107
00:04:02,159 --> 00:04:04,319
and then privacy and then there's like a

108
00:04:04,319 --> 00:04:08,040
full disk access panel and a files and

109
00:04:08,040 --> 00:04:10,319
folders panel and files and folders will

110
00:04:10,319 --> 00:04:13,019
like be the certain like single

111
00:04:13,019 --> 00:04:16,019
directories that your application is

112
00:04:16,019 --> 00:04:18,180
able to access and then hold this access

113
00:04:18,180 --> 00:04:20,579
or full disk access we'll let your

114
00:04:20,579 --> 00:04:22,260
application access the entire disk no

115
00:04:22,260 --> 00:04:24,720
matter what uh you'll more often see

116
00:04:24,720 --> 00:04:27,060
that like in terminal you know a user

117
00:04:27,060 --> 00:04:29,460
will like get tired of getting prompted

118
00:04:29,460 --> 00:04:31,020
every time they go to a new directory so

119
00:04:31,020 --> 00:04:32,520
they just give like terminal full disk

120
00:04:32,520 --> 00:04:34,440
access and so then you have cart block

121
00:04:34,440 --> 00:04:36,120
on the machine to read anything that you

122
00:04:36,120 --> 00:04:37,800
really want to that you have permissions

123
00:04:37,800 --> 00:04:39,360
to read

124
00:04:39,360 --> 00:04:41,520
um you can reset the TCC permissions so

125
00:04:41,520 --> 00:04:43,080
if you're testing this

126
00:04:43,080 --> 00:04:44,520
um you know just keep in mind that you

127
00:04:44,520 --> 00:04:46,380
can reset them at any time you want just

128
00:04:46,380 --> 00:04:48,479
pop up the terminal and then run the TCC

129
00:04:48,479 --> 00:04:50,759
util and it just reset all and then the

130
00:04:50,759 --> 00:04:52,259
bundle ID for whatever you're doing so

131
00:04:52,259 --> 00:04:54,500
like for terminal it's

132
00:04:54,500 --> 00:04:56,180
com.apple.terminal

133
00:04:56,180 --> 00:04:58,380
and some applications you can just do it

134
00:04:58,380 --> 00:04:59,759
by like the application name so you

135
00:04:59,759 --> 00:05:01,139
might be able to do like terminal.app

136
00:05:01,139 --> 00:05:03,780
and that'll let you clear out those

137
00:05:03,780 --> 00:05:05,100
permissions and so you get reprompted

138
00:05:05,100 --> 00:05:06,540
and it's just a really easy way of doing

139
00:05:06,540 --> 00:05:10,800
testing uh it's also important uh to

140
00:05:10,800 --> 00:05:13,199
keep in mind TCC when you are gaining

141
00:05:13,199 --> 00:05:14,460
for persistence and you're first landing

142
00:05:14,460 --> 00:05:15,479
on a machine because you don't want to

143
00:05:15,479 --> 00:05:18,060
accidentally like CD desktop and then

144
00:05:18,060 --> 00:05:19,680
like all of a sudden your user is like

145
00:05:19,680 --> 00:05:20,880
getting a prompt when they're working on

146
00:05:20,880 --> 00:05:22,979
a PowerPoint presentation for you know

147
00:05:22,979 --> 00:05:27,300
uh totally not uh malware payload uh you

148
00:05:27,300 --> 00:05:28,500
know wants access to your desktop

149
00:05:28,500 --> 00:05:31,139
directory that's kind of embarrassing

150
00:05:31,139 --> 00:05:31,919
um

151
00:05:31,919 --> 00:05:33,479
so just you know be careful that you

152
00:05:33,479 --> 00:05:35,460
know don't browsing directories unless

153
00:05:35,460 --> 00:05:36,960
you know what your contacts that you're

154
00:05:36,960 --> 00:05:39,138
in

155
00:05:39,900 --> 00:05:41,940
um the first technique that I like to

156
00:05:41,940 --> 00:05:43,380
talk about is launch agents and this is

157
00:05:43,380 --> 00:05:45,300
kind of like the bread and butter

158
00:05:45,300 --> 00:05:47,520
um you know this is uh in a Linux world

159
00:05:47,520 --> 00:05:49,139
you would think like a systemd like this

160
00:05:49,139 --> 00:05:51,720
is just like a systemd in its script uh

161
00:05:51,720 --> 00:05:53,400
there are these

162
00:05:53,400 --> 00:05:55,860
P lists which are like property files

163
00:05:55,860 --> 00:05:59,940
and they're really just XML documents

164
00:05:59,940 --> 00:06:03,300
um there's two types of of launch agents

165
00:06:03,300 --> 00:06:04,740
there's the actual launch agent which

166
00:06:04,740 --> 00:06:07,259
are our scope for the user and there are

167
00:06:07,259 --> 00:06:09,180
launch daemons that are scoped for the

168
00:06:09,180 --> 00:06:11,039
system

169
00:06:11,039 --> 00:06:12,720
um so

170
00:06:12,720 --> 00:06:14,820
you know you you you're not going to be

171
00:06:14,820 --> 00:06:15,840
able to do anything with launch

172
00:06:15,840 --> 00:06:16,979
statements you're going to need pseudo

173
00:06:16,979 --> 00:06:18,060
access so when you first line a machine

174
00:06:18,060 --> 00:06:20,280
you're going to only have access to uh

175
00:06:20,280 --> 00:06:21,720
the the launch damage or the launch

176
00:06:21,720 --> 00:06:23,220
agents for the user and you can find

177
00:06:23,220 --> 00:06:25,440
those in the user's home directory and

178
00:06:25,440 --> 00:06:27,000
library and then

179
00:06:27,000 --> 00:06:28,740
um launch agents sometimes the directory

180
00:06:28,740 --> 00:06:31,080
exists sometimes it doesn't exist TCC

181
00:06:31,080 --> 00:06:33,180
doesn't care if you make it so you know

182
00:06:33,180 --> 00:06:34,440
if you land on something just you know

183
00:06:34,440 --> 00:06:36,840
make sure and you can do you can add

184
00:06:36,840 --> 00:06:37,919
that

185
00:06:37,919 --> 00:06:39,360
um so that's you know really cool to

186
00:06:39,360 --> 00:06:40,860
know there's a lot of files actually

187
00:06:40,860 --> 00:06:42,000
that are really interesting that are

188
00:06:42,000 --> 00:06:44,039
under the user's home directory that

189
00:06:44,039 --> 00:06:46,560
Apple doesn't protect

190
00:06:46,560 --> 00:06:48,720
um you can interact with launch agents

191
00:06:48,720 --> 00:06:51,180
uh using the launch CTL command and this

192
00:06:51,180 --> 00:06:54,900
is just like uh you know systemd uh you

193
00:06:54,900 --> 00:06:57,120
know start stop that kind of stuff so

194
00:06:57,120 --> 00:06:59,400
it's you know very very similar to that

195
00:06:59,400 --> 00:07:01,500
on the Linux World

196
00:07:01,500 --> 00:07:03,060
um

197
00:07:03,060 --> 00:07:04,199
and so the ones that we're really

198
00:07:04,199 --> 00:07:05,819
concerned about are the launch agents

199
00:07:05,819 --> 00:07:07,800
here and they are used to run per

200
00:07:07,800 --> 00:07:10,139
background processes uh and they're

201
00:07:10,139 --> 00:07:12,120
super simple to configure uh and the

202
00:07:12,120 --> 00:07:15,479
picture here you can see one for uh a

203
00:07:15,479 --> 00:07:17,460
program called steer Mouse right just

204
00:07:17,460 --> 00:07:19,440
like a tool that you install lets you

205
00:07:19,440 --> 00:07:21,000
control your mouse a little bit more and

206
00:07:21,000 --> 00:07:22,440
you know you're basically writing the

207
00:07:22,440 --> 00:07:24,300
same thing like you'll see the next page

208
00:07:24,300 --> 00:07:26,280
that you'll see that the boilerplate

209
00:07:26,280 --> 00:07:27,780
that we're going to be using is almost

210
00:07:27,780 --> 00:07:30,840
exactly the same as what they have here

211
00:07:30,840 --> 00:07:32,880
um and again they're very uh simple

212
00:07:32,880 --> 00:07:35,460
they're XML sometimes they are binary

213
00:07:35,460 --> 00:07:37,139
encoded XML and you need to use a

214
00:07:37,139 --> 00:07:39,360
utility to decode them and we'll go over

215
00:07:39,360 --> 00:07:40,800
that a little later when we we talk

216
00:07:40,800 --> 00:07:44,759
about another persistence mechanism

217
00:07:45,360 --> 00:07:47,400
uh so here's the cookie cutter code from

218
00:07:47,400 --> 00:07:48,780
Apple like this is literally stolen from

219
00:07:48,780 --> 00:07:50,819
the documents uh and you can find the

220
00:07:50,819 --> 00:07:55,020
docs there in in that QR code uh and so

221
00:07:55,020 --> 00:07:56,460
you can see like there's really three

222
00:07:56,460 --> 00:07:58,080
sections that you might be concerned

223
00:07:58,080 --> 00:08:01,259
about the first section is the name of

224
00:08:01,259 --> 00:08:03,300
the PLS that you're using so like each P

225
00:08:03,300 --> 00:08:05,400
list or launch agent is going to have

226
00:08:05,400 --> 00:08:07,259
its own unique label and so just make

227
00:08:07,259 --> 00:08:08,280
sure you're not stomping on something

228
00:08:08,280 --> 00:08:09,960
else because they will get overwritten

229
00:08:09,960 --> 00:08:11,819
and then if like somebody tries to

230
00:08:11,819 --> 00:08:13,979
unload an agent on their own and you

231
00:08:13,979 --> 00:08:15,900
have the same name like you can confuse

232
00:08:15,900 --> 00:08:17,639
things

233
00:08:17,639 --> 00:08:20,039
um next is the path of the execute we

234
00:08:20,039 --> 00:08:22,259
like to run and so uh and in this

235
00:08:22,259 --> 00:08:24,419
example they do like hello world uh and

236
00:08:24,419 --> 00:08:27,180
so the hello would be the application

237
00:08:27,180 --> 00:08:28,979
that you're actually running and then

238
00:08:28,979 --> 00:08:30,180
the world would be the argument and you

239
00:08:30,180 --> 00:08:31,979
can add as many arguments there as you'd

240
00:08:31,979 --> 00:08:34,098
like

241
00:08:34,620 --> 00:08:36,240
um so just make sure that when you do

242
00:08:36,240 --> 00:08:39,360
put uh your art your program there if

243
00:08:39,360 --> 00:08:41,039
it's not like in the user's path already

244
00:08:41,039 --> 00:08:42,719
give it the full path because it won't

245
00:08:42,719 --> 00:08:45,060
execute otherwise one of our favorite

246
00:08:45,060 --> 00:08:49,680
things to do is land our binary under

247
00:08:49,680 --> 00:08:50,580
um

248
00:08:50,580 --> 00:08:53,339
the the user's home directory and and

249
00:08:53,339 --> 00:08:55,519
just like the um the library directory

250
00:08:55,519 --> 00:08:57,959
and just call it from there and so just

251
00:08:57,959 --> 00:08:59,459
make sure you know you have the user's

252
00:08:59,459 --> 00:09:02,040
full path uh don't use tilde

253
00:09:02,040 --> 00:09:02,700
um

254
00:09:02,700 --> 00:09:04,560
and then you can also like

255
00:09:04,560 --> 00:09:07,080
just let you know put this in place and

256
00:09:07,080 --> 00:09:08,399
then just wait for the user to restart

257
00:09:08,399 --> 00:09:12,240
for this uh to run or you can uh force

258
00:09:12,240 --> 00:09:14,040
it by using launch CTL and just like

259
00:09:14,040 --> 00:09:16,320
launch CTL load and then the path of

260
00:09:16,320 --> 00:09:17,820
your

261
00:09:17,820 --> 00:09:18,360
um

262
00:09:18,360 --> 00:09:21,200
your P list

263
00:09:21,720 --> 00:09:23,399
so there's some also like some

264
00:09:23,399 --> 00:09:24,660
interesting features like you know what

265
00:09:24,660 --> 00:09:26,160
we just saw was just very basic it just

266
00:09:26,160 --> 00:09:28,620
the user logs in and then it starts

267
00:09:28,620 --> 00:09:30,720
executing uh everything under launch

268
00:09:30,720 --> 00:09:32,940
agents and eventually it comes to yours

269
00:09:32,940 --> 00:09:35,459
and it loads but you can also do other

270
00:09:35,459 --> 00:09:36,779
things like

271
00:09:36,779 --> 00:09:39,959
um you can make it look like cron a bit

272
00:09:39,959 --> 00:09:41,519
like it's not totally like chronic

273
00:09:41,519 --> 00:09:43,320
because they use like a calendar uh

274
00:09:43,320 --> 00:09:45,240
Start calendar

275
00:09:45,240 --> 00:09:47,760
um interval and that is really like the

276
00:09:47,760 --> 00:09:49,860
the date the calendar date so and our

277
00:09:49,860 --> 00:09:52,440
example here with like every seventh day

278
00:09:52,440 --> 00:09:55,500
or every seventh of the month it will

279
00:09:55,500 --> 00:09:58,980
run at 1 45 pm

280
00:09:58,980 --> 00:10:01,620
um and so it's not exactly the Quran but

281
00:10:01,620 --> 00:10:05,399
you can do like load uh run at like

282
00:10:05,399 --> 00:10:08,100
every X seconds and just choose you know

283
00:10:08,100 --> 00:10:09,779
you want to run it every 15 hours just

284
00:10:09,779 --> 00:10:11,519
put 15 hours in seconds and it'll

285
00:10:11,519 --> 00:10:13,380
continue to persist there another

286
00:10:13,380 --> 00:10:16,620
interesting uh feature that I that I

287
00:10:16,620 --> 00:10:18,660
found was you can actually listen for

288
00:10:18,660 --> 00:10:21,600
sockets and so you can say uh you know I

289
00:10:21,600 --> 00:10:23,700
want like I know this user is using a

290
00:10:23,700 --> 00:10:25,860
jupyter notebook and I only really care

291
00:10:25,860 --> 00:10:28,260
about uh running something when they

292
00:10:28,260 --> 00:10:29,820
actually have Jupiter up right it's like

293
00:10:29,820 --> 00:10:32,640
I can start pulling down or using you

294
00:10:32,640 --> 00:10:34,019
know a persistent message there or

295
00:10:34,019 --> 00:10:35,700
whatever you want to do but so like you

296
00:10:35,700 --> 00:10:38,220
listen for 8080 or you watch 8080 and

297
00:10:38,220 --> 00:10:41,100
when 8080 comes up you you know can

298
00:10:41,100 --> 00:10:42,899
launch your application based off of

299
00:10:42,899 --> 00:10:43,880
that

300
00:10:43,880 --> 00:10:48,180
finally and it's not the last launch

301
00:10:48,180 --> 00:10:49,800
agent feature but the last one I think

302
00:10:49,800 --> 00:10:51,540
is really useful and that is you can

303
00:10:51,540 --> 00:10:53,339
actually monitor a directory for changes

304
00:10:53,339 --> 00:10:56,279
and so uh you know I was thinking like

305
00:10:56,279 --> 00:11:00,240
if you uh you could like monitor a

306
00:11:00,240 --> 00:11:01,680
repository that the user is working on

307
00:11:01,680 --> 00:11:03,720
for code and then whenever they start

308
00:11:03,720 --> 00:11:05,160
editing it you know that they're active

309
00:11:05,160 --> 00:11:06,899
on their computer so you know you can

310
00:11:06,899 --> 00:11:09,779
use this to send yourself uh like curl a

311
00:11:09,779 --> 00:11:11,040
web hook for you so you get notified

312
00:11:11,040 --> 00:11:13,500
that the user's back online

313
00:11:13,500 --> 00:11:14,700
um

314
00:11:14,700 --> 00:11:16,200
you know or that you know they're

315
00:11:16,200 --> 00:11:17,220
working in a directory that you're

316
00:11:17,220 --> 00:11:18,779
interested in you know maybe it has it

317
00:11:18,779 --> 00:11:19,920
has the cool stuff that you're looking

318
00:11:19,920 --> 00:11:21,300
for and so then you can also like base

319
00:11:21,300 --> 00:11:24,060
attacks uh on that

320
00:11:24,060 --> 00:11:25,140
um you know just knowing when they're

321
00:11:25,140 --> 00:11:26,940
active which can be a little hard if you

322
00:11:26,940 --> 00:11:28,140
you know everybody working from home you

323
00:11:28,140 --> 00:11:29,519
don't have to see the user in the office

324
00:11:29,519 --> 00:11:32,040
or whatever

325
00:11:32,040 --> 00:11:33,720
um so unfortunately with like this ease

326
00:11:33,720 --> 00:11:35,399
of use uh comes like easy

327
00:11:35,399 --> 00:11:37,800
discoverability uh you know any EDR

328
00:11:37,800 --> 00:11:39,420
worth its weight and salt will be

329
00:11:39,420 --> 00:11:41,220
monitoring launch agents right and so

330
00:11:41,220 --> 00:11:43,800
you know uh your detection Response Team

331
00:11:43,800 --> 00:11:45,720
should get like an alert that hey

332
00:11:45,720 --> 00:11:47,880
somebody's putting you know pretty shady

333
00:11:47,880 --> 00:11:49,320
launch agents up here maybe we should go

334
00:11:49,320 --> 00:11:51,300
check out what this user is doing uh you

335
00:11:51,300 --> 00:11:53,279
know this doesn't look like a normal uh

336
00:11:53,279 --> 00:11:56,640
launch agent also there are software

337
00:11:56,640 --> 00:11:57,959
um that has been written to actually

338
00:11:57,959 --> 00:12:00,600
monitor launch agents and let you know

339
00:12:00,600 --> 00:12:03,839
as the user when a launch agent is uh

340
00:12:03,839 --> 00:12:05,459
being initiated like when it's the first

341
00:12:05,459 --> 00:12:07,320
time it runs it you can choose to you

342
00:12:07,320 --> 00:12:09,180
know allow that or temporarily block it

343
00:12:09,180 --> 00:12:10,440
or whatever until you can figure out you

344
00:12:10,440 --> 00:12:12,839
know what's going on with that

345
00:12:12,839 --> 00:12:15,180
um and then finally I think like the

346
00:12:15,180 --> 00:12:16,920
biggest downside to launch agent

347
00:12:16,920 --> 00:12:19,079
persistence is

348
00:12:19,079 --> 00:12:21,079
you're not going to get the TCC

349
00:12:21,079 --> 00:12:23,040
privileges that you want right like

350
00:12:23,040 --> 00:12:24,300
you're going to want to be able to read

351
00:12:24,300 --> 00:12:26,100
the documents directory you're going to

352
00:12:26,100 --> 00:12:27,360
be able to read all those other

353
00:12:27,360 --> 00:12:28,740
directories where all the interesting

354
00:12:28,740 --> 00:12:30,660
stuff is at and since you know you're

355
00:12:30,660 --> 00:12:33,300
you're Landing your own malware uh you

356
00:12:33,300 --> 00:12:33,959
know it's not gonna have those

357
00:12:33,959 --> 00:12:35,279
permissions by default so you're gonna

358
00:12:35,279 --> 00:12:37,920
have to do some tooling around uh how

359
00:12:37,920 --> 00:12:40,680
you land your your payload uh you know

360
00:12:40,680 --> 00:12:41,760
an easy way is just like make an

361
00:12:41,760 --> 00:12:44,579
installer they're pretty easy to do uh

362
00:12:44,579 --> 00:12:45,959
you know just make that installer have

363
00:12:45,959 --> 00:12:47,880
the user say like oh you know just click

364
00:12:47,880 --> 00:12:50,100
this over to your full disk permissions

365
00:12:50,100 --> 00:12:51,480
and

366
00:12:51,480 --> 00:12:53,399
you know users have been trained just to

367
00:12:53,399 --> 00:12:55,260
do that so I think you'll you'll have a

368
00:12:55,260 --> 00:12:58,320
high success chance there

369
00:12:58,320 --> 00:12:59,820
and next

370
00:12:59,820 --> 00:13:01,920
uh persistent mechanism that I thought

371
00:13:01,920 --> 00:13:03,360
was really cool and I recently got to

372
00:13:03,360 --> 00:13:04,620
use this

373
00:13:04,620 --> 00:13:07,380
um is

374
00:13:07,380 --> 00:13:09,779
uh abusing terminal

375
00:13:09,779 --> 00:13:11,040
so

376
00:13:11,040 --> 00:13:12,180
um

377
00:13:12,180 --> 00:13:14,459
terminal is great because

378
00:13:14,459 --> 00:13:16,620
you know you have

379
00:13:16,620 --> 00:13:19,380
the you have the terminals TCC

380
00:13:19,380 --> 00:13:20,940
permissions right so if a user's already

381
00:13:20,940 --> 00:13:23,339
given the terminal full disk access

382
00:13:23,339 --> 00:13:25,320
you have full disaccess by running under

383
00:13:25,320 --> 00:13:29,279
the same TCC context as terminal is this

384
00:13:29,279 --> 00:13:31,079
should also work with iterm with some

385
00:13:31,079 --> 00:13:32,760
minor modifications item keeps their

386
00:13:32,760 --> 00:13:35,100
settings in different places but they

387
00:13:35,100 --> 00:13:37,079
have the same functionality

388
00:13:37,079 --> 00:13:40,200
and so if we look at iterm our terminals

389
00:13:40,200 --> 00:13:42,180
preferences in the UI you can see that

390
00:13:42,180 --> 00:13:46,740
there are like two different uh

391
00:13:46,740 --> 00:13:48,839
two different ways that like you're

392
00:13:48,839 --> 00:13:50,639
allowed to change what happens when a

393
00:13:50,639 --> 00:13:52,440
terminal opens and the first picture

394
00:13:52,440 --> 00:13:53,940
over here you can see that we can change

395
00:13:53,940 --> 00:13:57,120
the shell of the user uh you know so

396
00:13:57,120 --> 00:13:59,459
like if you didn't want to use zsh it

397
00:13:59,459 --> 00:14:01,260
would be an easy way for the user

398
00:14:01,260 --> 00:14:02,820
themselves to change that to like bin

399
00:14:02,820 --> 00:14:05,399
bash I think that's the the kind of what

400
00:14:05,399 --> 00:14:07,380
Apple was going for rather than having

401
00:14:07,380 --> 00:14:09,779
to use chain shell but um

402
00:14:09,779 --> 00:14:11,700
so you see the shell method and then on

403
00:14:11,700 --> 00:14:13,320
the other slide you see that under the

404
00:14:13,320 --> 00:14:15,000
preference there

405
00:14:15,000 --> 00:14:17,579
um you can run a command whenever your

406
00:14:17,579 --> 00:14:19,139
profile loads up and so there's you know

407
00:14:19,139 --> 00:14:20,519
a bunch of built-in profiles and each

408
00:14:20,519 --> 00:14:23,040
one of them has their own Uh custom run

409
00:14:23,040 --> 00:14:25,079
command that you can use

410
00:14:25,079 --> 00:14:26,760
um and so you can you know find out what

411
00:14:26,760 --> 00:14:28,500
the default one is and then change that

412
00:14:28,500 --> 00:14:31,100
run command

413
00:14:31,980 --> 00:14:34,380
uh and and to write these you don't need

414
00:14:34,380 --> 00:14:36,000
TCC permissions because it's also under

415
00:14:36,000 --> 00:14:37,500
library and preferences and apple

416
00:14:37,500 --> 00:14:39,480
doesn't care about that

417
00:14:39,480 --> 00:14:41,459
so uh

418
00:14:41,459 --> 00:14:43,440
this is the first binary P list that

419
00:14:43,440 --> 00:14:45,420
we're going to be talking about and to

420
00:14:45,420 --> 00:14:48,120
use this binary plist you need to use a

421
00:14:48,120 --> 00:14:50,160
PL utility is what Apple calls it and

422
00:14:50,160 --> 00:14:54,540
you can convert that binary into XML and

423
00:14:54,540 --> 00:14:56,880
then make your modifications and then

424
00:14:56,880 --> 00:14:59,459
convert it back into binary and then put

425
00:14:59,459 --> 00:15:00,839
it in place and so the next time the

426
00:15:00,839 --> 00:15:03,839
user loads up their their terminal it

427
00:15:03,839 --> 00:15:05,699
will inherit all those permissions that

428
00:15:05,699 --> 00:15:08,639
you've changed and you'll you'll you

429
00:15:08,639 --> 00:15:10,920
know start start cooking

430
00:15:10,920 --> 00:15:12,120
um

431
00:15:12,120 --> 00:15:14,459
this isn't the only way to actually

432
00:15:14,459 --> 00:15:17,940
convert or change these settings but it

433
00:15:17,940 --> 00:15:19,320
is the easiest way because there's so

434
00:15:19,320 --> 00:15:21,839
much nesting in this P list that it's

435
00:15:21,839 --> 00:15:23,760
easier just to convert it to XML make

436
00:15:23,760 --> 00:15:25,980
your edits and then convert it back I

437
00:15:25,980 --> 00:15:27,300
was hoping like a one-liner with

438
00:15:27,300 --> 00:15:29,699
defaults uh but it just just doesn't

439
00:15:29,699 --> 00:15:31,560
work out really well

440
00:15:31,560 --> 00:15:33,240
and so you can see here on the right

441
00:15:33,240 --> 00:15:34,920
there's

442
00:15:34,920 --> 00:15:35,880
um

443
00:15:35,880 --> 00:15:40,199
just an excerpt of the PLS file after

444
00:15:40,199 --> 00:15:42,600
it's been converted to XML and I

445
00:15:42,600 --> 00:15:44,339
highlighted five different sections that

446
00:15:44,339 --> 00:15:46,199
are interesting to us and the first

447
00:15:46,199 --> 00:15:48,000
section

448
00:15:48,000 --> 00:15:50,040
we can see that the default profile of

449
00:15:50,040 --> 00:15:51,959
the user and now we need to know that so

450
00:15:51,959 --> 00:15:54,180
we know which profile to modify because

451
00:15:54,180 --> 00:15:55,740
you'll have all the profiles that the

452
00:15:55,740 --> 00:15:59,339
user has saved in in terminal but we

453
00:15:59,339 --> 00:16:00,980
only care about the default one mostly

454
00:16:00,980 --> 00:16:03,540
second we have the path for the shell

455
00:16:03,540 --> 00:16:05,940
and you can see in this example uh I had

456
00:16:05,940 --> 00:16:09,300
it highlighted to you know opt Homebrew

457
00:16:09,300 --> 00:16:12,060
bin fish to use the fish cell

458
00:16:12,060 --> 00:16:14,699
um third we have the command which will

459
00:16:14,699 --> 00:16:17,100
run which will run at the default

460
00:16:17,100 --> 00:16:20,040
profile launch and so in our case like

461
00:16:20,040 --> 00:16:22,620
basic I think is our our default profile

462
00:16:22,620 --> 00:16:23,880
and this is the command that runs at

463
00:16:23,880 --> 00:16:27,920
launch of a new basic shell

464
00:16:28,199 --> 00:16:30,720
fourth uh we have processes that

465
00:16:30,720 --> 00:16:33,120
terminal should not warn the user uh

466
00:16:33,120 --> 00:16:34,920
that are open when the user tries to

467
00:16:34,920 --> 00:16:37,680
close the terminal so if you are running

468
00:16:37,680 --> 00:16:39,959
if you open up a shell

469
00:16:39,959 --> 00:16:42,480
and you're you know it's using zsh

470
00:16:42,480 --> 00:16:45,720
because that's the default for OS X and

471
00:16:45,720 --> 00:16:48,420
you type in Bash if you try to close

472
00:16:48,420 --> 00:16:50,459
that window you're going to get a prompt

473
00:16:50,459 --> 00:16:51,899
that bash is still running would you

474
00:16:51,899 --> 00:16:54,360
like to close the window you can tell it

475
00:16:54,360 --> 00:16:56,759
you can tell terminal to ignore those if

476
00:16:56,759 --> 00:16:58,560
you put your application there the

477
00:16:58,560 --> 00:17:01,079
default ones that Apple has in places

478
00:17:01,079 --> 00:17:03,959
tmux and screen and so you can just kind

479
00:17:03,959 --> 00:17:05,220
of follow the examples that they have

480
00:17:05,220 --> 00:17:06,599
there and you can see those in the

481
00:17:06,599 --> 00:17:08,099
screenshot here

482
00:17:08,099 --> 00:17:10,260
finally

483
00:17:10,260 --> 00:17:12,660
we have the option to disable warnings

484
00:17:12,660 --> 00:17:15,780
when closing the prompt and this will

485
00:17:15,780 --> 00:17:17,660
disable the warnings no matter what

486
00:17:17,660 --> 00:17:19,619
application is running and so like it's

487
00:17:19,619 --> 00:17:21,059
kind of like an easy way to cheat to get

488
00:17:21,059 --> 00:17:23,220
to the end but you know every time that

489
00:17:23,220 --> 00:17:25,439
you take one of those shortcuts you're

490
00:17:25,439 --> 00:17:27,480
like leaving a tell and you know and

491
00:17:27,480 --> 00:17:29,220
what we're trying to do is not let the

492
00:17:29,220 --> 00:17:31,919
user know that we're there

493
00:17:31,919 --> 00:17:35,299
so terminal is really awesome because

494
00:17:35,299 --> 00:17:37,080
processes launched from terminal

495
00:17:37,080 --> 00:17:41,220
inherent the TCC permissions of terminal

496
00:17:41,220 --> 00:17:44,520
so if the user already has you know if

497
00:17:44,520 --> 00:17:47,340
we'll just access and you launch a you

498
00:17:47,340 --> 00:17:49,980
know your your payload from terminal uh

499
00:17:49,980 --> 00:17:51,600
as a launch script it's going to have

500
00:17:51,600 --> 00:17:54,240
full disk access as well which is pretty

501
00:17:54,240 --> 00:17:55,799
powerful

502
00:17:55,799 --> 00:17:58,200
um and likewise if you're if it only has

503
00:17:58,200 --> 00:18:00,120
access to documents you'll at least have

504
00:18:00,120 --> 00:18:02,400
access to documents

505
00:18:02,400 --> 00:18:05,340
um if it doesn't have access then the

506
00:18:05,340 --> 00:18:07,740
TCC prompt that pops up will be from

507
00:18:07,740 --> 00:18:11,100
terminal so you know it's kind of

508
00:18:11,100 --> 00:18:12,780
like Wolfson sheep clothing a little bit

509
00:18:12,780 --> 00:18:14,280
uh you can kind of hide what you're

510
00:18:14,280 --> 00:18:16,080
doing the user might not realize that

511
00:18:16,080 --> 00:18:17,940
something's going on

512
00:18:17,940 --> 00:18:20,220
um if they're actively moving around the

513
00:18:20,220 --> 00:18:22,380
file system I know that a lot of people

514
00:18:22,380 --> 00:18:25,440
are using like oh my CSH now and you

515
00:18:25,440 --> 00:18:26,700
know there's autocomplete functionality

516
00:18:26,700 --> 00:18:29,760
in that that will prompt you uh to show

517
00:18:29,760 --> 00:18:32,039
that like your documents directory even

518
00:18:32,039 --> 00:18:33,120
if you're not trying to use your

519
00:18:33,120 --> 00:18:35,280
documents directory and so like

520
00:18:35,280 --> 00:18:38,340
as you know these functionalities clash

521
00:18:38,340 --> 00:18:40,740
with TCC like users are just kind of

522
00:18:40,740 --> 00:18:42,780
like clicking okay you know it's fine

523
00:18:42,780 --> 00:18:45,179
whatever I just want to continue so keep

524
00:18:45,179 --> 00:18:46,140
that in mind when you're when you're

525
00:18:46,140 --> 00:18:50,100
doing uh any persistence

526
00:18:50,100 --> 00:18:51,360
um

527
00:18:51,360 --> 00:18:53,100
so there's some best practice that I

528
00:18:53,100 --> 00:18:55,620
found uh when I was initially starting

529
00:18:55,620 --> 00:18:57,299
out with this I was like yeah we just

530
00:18:57,299 --> 00:18:58,620
like run a command and it'll be like

531
00:18:58,620 --> 00:19:01,380
hunky dory everything was going to work

532
00:19:01,380 --> 00:19:03,000
um but as you can see here like when you

533
00:19:03,000 --> 00:19:04,919
run a command on that first screenshot

534
00:19:04,919 --> 00:19:06,360
up there

535
00:19:06,360 --> 00:19:09,000
um it says what command is run right so

536
00:19:09,000 --> 00:19:11,039
we don't want to like be like hey run

537
00:19:11,039 --> 00:19:12,960
this and then and and the user notices

538
00:19:12,960 --> 00:19:14,280
every time they start their new shell

539
00:19:14,280 --> 00:19:18,380
like it's you know malware dot you know

540
00:19:18,380 --> 00:19:21,179
jxa you know and you know it's gonna

541
00:19:21,179 --> 00:19:23,220
it's gonna give you a way

542
00:19:23,220 --> 00:19:25,860
um and then uh

543
00:19:25,860 --> 00:19:28,260
I would also recommend not replacing the

544
00:19:28,260 --> 00:19:30,299
shell for the user because it's so like

545
00:19:30,299 --> 00:19:32,039
user forward there like don't use the

546
00:19:32,039 --> 00:19:34,679
the first method uh to replace the shell

547
00:19:34,679 --> 00:19:36,720
unless you're going to like compile your

548
00:19:36,720 --> 00:19:38,039
own version of bash that has your back

549
00:19:38,039 --> 00:19:41,640
door in it and then replace it that way

550
00:19:41,640 --> 00:19:43,020
um which would be a you know a good way

551
00:19:43,020 --> 00:19:44,880
of doing it uh you know you can write

552
00:19:44,880 --> 00:19:48,240
the opt Homebrew bin people don't

553
00:19:48,240 --> 00:19:50,400
install bash a lot uh from that so

554
00:19:50,400 --> 00:19:52,080
you're using like some old version that

555
00:19:52,080 --> 00:19:53,820
you know Max still ships with or you

556
00:19:53,820 --> 00:19:56,160
know even zsh you can write there all

557
00:19:56,160 --> 00:19:57,600
you want

558
00:19:57,600 --> 00:19:59,220
um

559
00:19:59,220 --> 00:20:02,640
next if you're using a script to to be

560
00:20:02,640 --> 00:20:04,980
your run command ensure that you're

561
00:20:04,980 --> 00:20:07,140
running your command backgrounding it

562
00:20:07,140 --> 00:20:09,780
clearing the screen and then returning

563
00:20:09,780 --> 00:20:11,640
to a login shell if you don't do that

564
00:20:11,640 --> 00:20:12,900
the user is totally going to know that

565
00:20:12,900 --> 00:20:14,520
like something's up there's still going

566
00:20:14,520 --> 00:20:16,679
to be a tell even if you do

567
00:20:16,679 --> 00:20:17,280
um

568
00:20:17,280 --> 00:20:19,980
the I didn't get a chance to work it out

569
00:20:19,980 --> 00:20:21,299
but like there's a banner at the very

570
00:20:21,299 --> 00:20:22,919
top it says the last time you logged in

571
00:20:22,919 --> 00:20:25,200
and there's got to be a way to like

572
00:20:25,200 --> 00:20:27,419
easily you know print that to the screen

573
00:20:27,419 --> 00:20:29,100
before it does the login shell I just I

574
00:20:29,100 --> 00:20:32,280
wasn't able to figure out a way for this

575
00:20:32,280 --> 00:20:34,740
um you know just be really observant

576
00:20:34,740 --> 00:20:37,080
with how your victim works you know if

577
00:20:37,080 --> 00:20:38,580
you can do a lot of profiling on them

578
00:20:38,580 --> 00:20:39,720
and just understand how they're working

579
00:20:39,720 --> 00:20:41,460
you know it's going to increase your

580
00:20:41,460 --> 00:20:44,460
success uh and not getting caught

581
00:20:44,460 --> 00:20:46,980
um finally I would recommend

582
00:20:46,980 --> 00:20:48,960
um not to change the worn Shell close

583
00:20:48,960 --> 00:20:51,059
action which is the one that will close

584
00:20:51,059 --> 00:20:53,100
no matter what it's a zero which would

585
00:20:53,100 --> 00:20:54,720
just you know you close it and it just

586
00:20:54,720 --> 00:20:55,860
closes the shell because that's going to

587
00:20:55,860 --> 00:20:58,620
be a tell for you uh just whitelist like

588
00:20:58,620 --> 00:20:59,880
whatever process that you're you're

589
00:20:59,880 --> 00:21:01,679
coming back to

590
00:21:01,679 --> 00:21:03,000
other than that you know enjoy your

591
00:21:03,000 --> 00:21:07,860
access to the user's uh projected files

592
00:21:07,860 --> 00:21:11,280
okay so uh next is folder actions uh

593
00:21:11,280 --> 00:21:14,100
folder actions are really interesting

594
00:21:14,100 --> 00:21:14,880
um

595
00:21:14,880 --> 00:21:17,760
you know like launch agents you know

596
00:21:17,760 --> 00:21:20,400
Apple's automator allows you to create

597
00:21:20,400 --> 00:21:22,140
folder actions and so like just like we

598
00:21:22,140 --> 00:21:25,140
saw we can uh do monitor directories you

599
00:21:25,140 --> 00:21:27,120
can do kind of the same thing with

600
00:21:27,120 --> 00:21:29,039
automator and folder actions and there's

601
00:21:29,039 --> 00:21:30,900
like multiple ways you can do it but uh

602
00:21:30,900 --> 00:21:32,700
the GUI I think is the best way or the

603
00:21:32,700 --> 00:21:34,860
easiest way at least

604
00:21:34,860 --> 00:21:37,620
um now these will do things for the user

605
00:21:37,620 --> 00:21:39,720
like run scripts that you decide on the

606
00:21:39,720 --> 00:21:41,880
user's behalf so I think apple is

607
00:21:41,880 --> 00:21:43,980
thinking with this that

608
00:21:43,980 --> 00:21:44,760
um

609
00:21:44,760 --> 00:21:48,539
you know a user has a watch action for

610
00:21:48,539 --> 00:21:50,520
like a document or a photos directory

611
00:21:50,520 --> 00:21:51,900
and every time you drag your photos in

612
00:21:51,900 --> 00:21:54,240
there it'll remove the exit data or

613
00:21:54,240 --> 00:21:55,559
resize the photos in there and that's

614
00:21:55,559 --> 00:21:57,659
kind of the idea behind it because you

615
00:21:57,659 --> 00:21:59,400
can use everything that you can use with

616
00:21:59,400 --> 00:22:01,740
applescript with that as well as you

617
00:22:01,740 --> 00:22:04,140
know run your own shells

618
00:22:04,140 --> 00:22:05,520
um

619
00:22:05,520 --> 00:22:08,760
so to do this uh you know just launch

620
00:22:08,760 --> 00:22:13,220
automator select a folder action

621
00:22:13,220 --> 00:22:15,840
you can also do this with jxa or apple

622
00:22:15,840 --> 00:22:18,179
script but you know the way that I found

623
00:22:18,179 --> 00:22:19,919
the easiest again was just to use

624
00:22:19,919 --> 00:22:22,799
automator on your computer

625
00:22:22,799 --> 00:22:25,260
um you know select the folder action

626
00:22:25,260 --> 00:22:29,100
select which folder that you want to use

627
00:22:29,100 --> 00:22:32,039
specify what you want to do when that an

628
00:22:32,039 --> 00:22:34,380
action happens on that folder

629
00:22:34,380 --> 00:22:35,820
and

630
00:22:35,820 --> 00:22:36,780
um

631
00:22:36,780 --> 00:22:38,760
and then just have automator run a

632
00:22:38,760 --> 00:22:41,100
scripts you know it could be uh you know

633
00:22:41,100 --> 00:22:43,140
a binary it could be a bash script it

634
00:22:43,140 --> 00:22:45,000
could be a Zs you know so whatever you

635
00:22:45,000 --> 00:22:47,159
you really want applescript or jxa are

636
00:22:47,159 --> 00:22:48,240
also really good because you can find

637
00:22:48,240 --> 00:22:49,400
out other information

638
00:22:49,400 --> 00:22:52,700
and so you just create that that action

639
00:22:52,700 --> 00:22:55,440
and uh to save it right and so on your

640
00:22:55,440 --> 00:22:57,179
computer you'll have that folder action

641
00:22:57,179 --> 00:22:58,679
now so you like uh you know for an

642
00:22:58,679 --> 00:23:00,059
example if I was watching the downloads

643
00:23:00,059 --> 00:23:03,000
directory and I get into the downloads

644
00:23:03,000 --> 00:23:05,460
directory I make a change and then

645
00:23:05,460 --> 00:23:07,260
whatever action is going to happen on my

646
00:23:07,260 --> 00:23:09,000
behalf

647
00:23:09,000 --> 00:23:11,100
and then once you've done that you just

648
00:23:11,100 --> 00:23:13,440
copy your folder action dispatcher PLS

649
00:23:13,440 --> 00:23:15,000
from library preferences to your

650
00:23:15,000 --> 00:23:16,260
victim's computer

651
00:23:16,260 --> 00:23:18,559
ensure that all the paths and scripts

652
00:23:18,559 --> 00:23:21,900
exist on your victim's computer

653
00:23:21,900 --> 00:23:24,179
then

654
00:23:24,179 --> 00:23:25,679
thank you

655
00:23:25,679 --> 00:23:27,720
um and then

656
00:23:27,720 --> 00:23:30,440
uh

657
00:23:32,159 --> 00:23:34,679
oh wow I'm sorry we had so then you just

658
00:23:34,679 --> 00:23:37,320
make sure that your victims uh

659
00:23:37,320 --> 00:23:38,400
everything's like the same as your

660
00:23:38,400 --> 00:23:40,919
victim including your user name that's

661
00:23:40,919 --> 00:23:43,260
really important and then just copy over

662
00:23:43,260 --> 00:23:46,500
your folder action script and then just

663
00:23:46,500 --> 00:23:50,039
run folder action setup.app and kill it

664
00:23:50,039 --> 00:23:52,080
immediately and that will register your

665
00:23:52,080 --> 00:23:54,059
your action on the user's behalf and the

666
00:23:54,059 --> 00:23:55,919
user is not going to be wiser

667
00:23:55,919 --> 00:23:56,760
um

668
00:23:56,760 --> 00:23:58,980
moving along kind of quickly here

669
00:23:58,980 --> 00:23:59,760
um

670
00:23:59,760 --> 00:24:03,480
so there is a tell for this uh if you

671
00:24:03,480 --> 00:24:06,059
are running a very long script you are

672
00:24:06,059 --> 00:24:08,100
going to run into

673
00:24:08,100 --> 00:24:10,320
um an icon popping up in the menu bar

674
00:24:10,320 --> 00:24:11,280
and so you just want to make sure you

675
00:24:11,280 --> 00:24:12,960
back around your script or your

676
00:24:12,960 --> 00:24:15,179
application that you're running and then

677
00:24:15,179 --> 00:24:17,220
also like you have to make sure that

678
00:24:17,220 --> 00:24:19,320
your username is the same username as

679
00:24:19,320 --> 00:24:20,640
your victim because if it's not it's not

680
00:24:20,640 --> 00:24:23,280
going to work you can't unpackage this

681
00:24:23,280 --> 00:24:25,980
uh PLS binary list for whatever reason

682
00:24:25,980 --> 00:24:28,440
PLS utilt will just not unpackage uh the

683
00:24:28,440 --> 00:24:30,600
nesting of it

684
00:24:30,600 --> 00:24:31,980
um the next one I want to talk about is

685
00:24:31,980 --> 00:24:34,260
login and logout hooks I'm going to go

686
00:24:34,260 --> 00:24:37,080
this really quickly they're super simple

687
00:24:37,080 --> 00:24:39,659
um they they run on login and log out

688
00:24:39,659 --> 00:24:42,000
you can register them with defaults

689
00:24:42,000 --> 00:24:42,980
right

690
00:24:42,980 --> 00:24:46,679
and com apple login window log out hook

691
00:24:46,679 --> 00:24:48,059
and login hook and just register your

692
00:24:48,059 --> 00:24:50,940
script they require pseudo access so

693
00:24:50,940 --> 00:24:53,280
just be sure that you are you know have

694
00:24:53,280 --> 00:24:54,299
your password because you're not going

695
00:24:54,299 --> 00:24:55,860
to do it without it

696
00:24:55,860 --> 00:24:57,720
um they're deprecated but like Chrono

697
00:24:57,720 --> 00:24:59,460
Mac like they still they still work and

698
00:24:59,460 --> 00:25:02,100
they probably will work forever

699
00:25:02,100 --> 00:25:04,380
um to protect yourself go check out

700
00:25:04,380 --> 00:25:05,940
Objective C software that's Patrick

701
00:25:05,940 --> 00:25:08,760
Wardell uh knock knock and block block

702
00:25:08,760 --> 00:25:11,039
two awesome applications that will help

703
00:25:11,039 --> 00:25:13,320
you protect yourself and then kind of

704
00:25:13,320 --> 00:25:15,000
just understanding what's going on with

705
00:25:15,000 --> 00:25:16,080
your Mac behind the scenes because

706
00:25:16,080 --> 00:25:18,360
there's definitely a lot there

707
00:25:18,360 --> 00:25:20,340
um and then finally be vigilant like

708
00:25:20,340 --> 00:25:22,020
apple and and pretty much every other

709
00:25:22,020 --> 00:25:23,580
vendor analysis training you to click OK

710
00:25:23,580 --> 00:25:25,500
click OK you know let's get through the

711
00:25:25,500 --> 00:25:27,720
security prompts uh you know try to

712
00:25:27,720 --> 00:25:28,679
understand what's going on with those

713
00:25:28,679 --> 00:25:30,419
prompts because you know there is

714
00:25:30,419 --> 00:25:32,460
somebody that understands that and is

715
00:25:32,460 --> 00:25:33,600
going to try to do everything they can

716
00:25:33,600 --> 00:25:36,720
to make you click uh and then finally uh

717
00:25:36,720 --> 00:25:38,700
you know thank you guys

718
00:25:38,700 --> 00:25:39,419
um

719
00:25:39,419 --> 00:25:42,480
I'd like to thank uh you know my team at

720
00:25:42,480 --> 00:25:45,179
oci for and my wife for uh being really

721
00:25:45,179 --> 00:25:46,980
supportive This research and I want to

722
00:25:46,980 --> 00:25:49,500
give a shout out to Cody Thomas and Saba

723
00:25:49,500 --> 00:25:50,820
fitzel for the great work on folder

724
00:25:50,820 --> 00:25:52,200
actions like I was able to really

725
00:25:52,200 --> 00:25:54,840
understand them and and build up on that

726
00:25:54,840 --> 00:25:55,740
so

727
00:25:55,740 --> 00:25:56,550
thank you

728
00:25:56,550 --> 00:26:06,829
[Applause]

729
00:26:07,440 --> 00:26:09,539
yeah yeah we got five minutes I think

730
00:26:09,539 --> 00:26:10,860
for questions uh four minutes so if

731
00:26:10,860 --> 00:26:12,480
there's anybody have a question you back

732
00:26:12,480 --> 00:26:14,659
there

733
00:26:17,310 --> 00:26:20,490
[Music]

734
00:26:27,500 --> 00:26:30,480
okay so I guess like if you did that uh

735
00:26:30,480 --> 00:26:32,159
so he's saying that you can hush the The

736
00:26:32,159 --> 00:26:34,919
Prompt for the user uh the last login

737
00:26:34,919 --> 00:26:37,140
prompt and so you can hush that and

738
00:26:37,140 --> 00:26:39,179
maybe get the user to stop seeing that

739
00:26:39,179 --> 00:26:42,059
before you do your your persistence

740
00:26:42,059 --> 00:26:44,600
over there

741
00:26:44,600 --> 00:26:47,940
the various things that have rights is

742
00:26:47,940 --> 00:26:52,279
there any demand to export the clouds

743
00:26:52,279 --> 00:26:56,159
uh it is all stored in a sqlite database

744
00:26:56,159 --> 00:26:58,200
I think that is protected

745
00:26:58,200 --> 00:27:00,539
um so you can do it with sudo but you

746
00:27:00,539 --> 00:27:02,340
cannot do it uh you know if you don't

747
00:27:02,340 --> 00:27:04,020
have privileges as a user and I think

748
00:27:04,020 --> 00:27:05,520
that it's kind of like

749
00:27:05,520 --> 00:27:07,440
it's it's obfuscated a bit like I've

750
00:27:07,440 --> 00:27:09,000
read some things from probably Cedric

751
00:27:09,000 --> 00:27:10,919
Owens that talks about it

752
00:27:10,919 --> 00:27:12,299
um and so I would check out Cedric Owens

753
00:27:12,299 --> 00:27:14,279
and he can probably uh has a blog post

754
00:27:14,279 --> 00:27:15,600
about it

755
00:27:15,600 --> 00:27:17,159
uh you there on the front in the green

756
00:27:17,159 --> 00:27:17,880
shirt

757
00:27:17,880 --> 00:27:21,240
when you enable uh openssh for remote

758
00:27:21,240 --> 00:27:23,600
login

759
00:27:25,919 --> 00:27:30,360
no so if you are SSH so um remote login

760
00:27:30,360 --> 00:27:32,760
features for sharing under the system

761
00:27:32,760 --> 00:27:34,200
preferences you can enable remote login

762
00:27:34,200 --> 00:27:37,980
and that'll enable SSH for you SSH has

763
00:27:37,980 --> 00:27:41,520
TCC full write permission already you

764
00:27:41,520 --> 00:27:43,679
can actually see that in the full

765
00:27:43,679 --> 00:27:45,539
um this access section of the

766
00:27:45,539 --> 00:27:47,100
permissions and privacy

767
00:27:47,100 --> 00:27:48,600
uh there was another one behind that

768
00:27:48,600 --> 00:27:50,959
gentleman

769
00:28:02,600 --> 00:28:05,640
yeah so I haven't so the question was

770
00:28:05,640 --> 00:28:07,980
have we seen these uh successfully in a

771
00:28:07,980 --> 00:28:09,539
fishing campaign

772
00:28:09,539 --> 00:28:12,120
um we at my job we don't actually do

773
00:28:12,120 --> 00:28:14,279
fishing we we work with our victims so

774
00:28:14,279 --> 00:28:16,260
they know that we're there

775
00:28:16,260 --> 00:28:17,279
um but

776
00:28:17,279 --> 00:28:19,140
um again Cedric Owens who does a lot of

777
00:28:19,140 --> 00:28:22,200
Mac OS research uh has done fishing

778
00:28:22,200 --> 00:28:24,480
campaign campaigns and when he does it

779
00:28:24,480 --> 00:28:28,260
he writes an application uh unsigned and

780
00:28:28,260 --> 00:28:29,880
then just you know tells users to click

781
00:28:29,880 --> 00:28:32,220
OK because they're kind of of use to

782
00:28:32,220 --> 00:28:33,960
that I think that is all the time I have

783
00:28:33,960 --> 00:28:35,700
questions if you guys want to talk to me

784
00:28:35,700 --> 00:28:37,200
about it anymore I'll be in the hallway

785
00:28:37,200 --> 00:28:38,710
thank you guys

786
00:28:38,710 --> 00:28:43,150
[Applause]

