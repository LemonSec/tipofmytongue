1
00:00:02,590 --> 00:00:08,769
can everybody hear me just to feel a

2
00:00:06,520 --> 00:00:10,959
little bit the audience who here is in

3
00:00:08,769 --> 00:00:16,149
offensive security mostly penetration

4
00:00:10,959 --> 00:00:20,890
testing and red teaming raise your hand

5
00:00:16,149 --> 00:00:25,150
defensive people raise your hand okay

6
00:00:20,890 --> 00:00:27,220
and management I guess the rest well

7
00:00:25,150 --> 00:00:30,630
basically we're going to talk about c2

8
00:00:27,220 --> 00:00:30,630
environment so it's command and control

9
00:00:32,488 --> 00:00:35,910
well

10
00:00:33,700 --> 00:00:39,999
protect yourself against corona virus

11
00:00:35,910 --> 00:00:41,589
one way to look at it so in essence

12
00:00:39,999 --> 00:00:44,559
we're going to talk about c2 systems

13
00:00:41,589 --> 00:00:48,489
what are the building blocks what our

14
00:00:44,559 --> 00:00:49,318
standards let's say or basic c2

15
00:00:48,489 --> 00:00:51,309
environments

16
00:00:49,319 --> 00:00:54,159
advanced it to environments and

17
00:00:51,309 --> 00:00:56,289
something what I call next-gen

18
00:00:54,159 --> 00:01:02,979
environment which is my customized

19
00:00:56,289 --> 00:01:06,190
environment for c2 systems so what are

20
00:01:02,979 --> 00:01:09,070
the building blocks of a command and

21
00:01:06,190 --> 00:01:12,219
control environment you can see that

22
00:01:09,070 --> 00:01:15,429
basically it's a c2 server that has its

23
00:01:12,219 --> 00:01:17,439
own communication protocols they execute

24
00:01:15,430 --> 00:01:20,200
commands on infected hosts and obtain

25
00:01:17,439 --> 00:01:23,490
data and results from these commands

26
00:01:20,200 --> 00:01:25,659
then we have the agents and the implants

27
00:01:23,490 --> 00:01:28,419
basically these are running on your

28
00:01:25,659 --> 00:01:32,920
infected hosts and they have several

29
00:01:28,420 --> 00:01:36,250
modules from persistence to other let's

30
00:01:32,920 --> 00:01:38,140
say capabilities but the most important

31
00:01:36,250 --> 00:01:39,700
one that they need to have is to avoid

32
00:01:38,140 --> 00:01:43,509
detection and how they communicate

33
00:01:39,700 --> 00:01:47,200
towards the c2 environment then we have

34
00:01:43,509 --> 00:01:49,659
gateways and redirect errs basically in

35
00:01:47,200 --> 00:01:51,640
an environment if we compromised an

36
00:01:49,659 --> 00:01:54,039
environment we do not want to have so

37
00:01:51,640 --> 00:01:56,770
many see two agents phoning back into

38
00:01:54,039 --> 00:02:01,749
the c2 server because this will lead to

39
00:01:56,770 --> 00:02:09,340
easier detection of your agents or your

40
00:02:01,749 --> 00:02:11,079
c2 environment sorry okay so when we

41
00:02:09,340 --> 00:02:13,860
talk about persistence we need to know

42
00:02:11,080 --> 00:02:15,580
how to persist and when to persist so

43
00:02:13,860 --> 00:02:17,860
how

44
00:02:15,580 --> 00:02:20,470
a binary persist in your environment is

45
00:02:17,860 --> 00:02:24,730
used through registry keys Windows

46
00:02:20,470 --> 00:02:26,920
servers you can use library injections

47
00:02:24,730 --> 00:02:28,989
like dll or Python libraries or dotnet

48
00:02:26,920 --> 00:02:31,480
libraries if you're using some libraries

49
00:02:28,990 --> 00:02:33,610
in your code or in your app you can

50
00:02:31,480 --> 00:02:36,489
inject yourself in the firmware but also

51
00:02:33,610 --> 00:02:39,610
you can use word templates Excel macros

52
00:02:36,490 --> 00:02:42,040
and so on and so forth and one important

53
00:02:39,610 --> 00:02:44,350
thing is communications so how do these

54
00:02:42,040 --> 00:02:45,730
agents communicate back to your seat to

55
00:02:44,350 --> 00:02:47,920
environment how they communicate with

56
00:02:45,730 --> 00:02:51,280
the Gateway or how they communicate with

57
00:02:47,920 --> 00:02:53,559
each other so the moment we have

58
00:02:51,280 --> 00:02:56,200
persistence we're actually leaving bread

59
00:02:53,560 --> 00:02:58,030
crumbs for the vendors to detect us so

60
00:02:56,200 --> 00:03:00,790
even the blue team's the vendors so

61
00:02:58,030 --> 00:03:01,630
anybody that's basically protecting or

62
00:03:00,790 --> 00:03:05,679
investigating

63
00:03:01,630 --> 00:03:07,510
you will leave bread crumbs so how do we

64
00:03:05,680 --> 00:03:10,540
deal with it we use alpha station and

65
00:03:07,510 --> 00:03:14,260
encoding to protect our binary or our

66
00:03:10,540 --> 00:03:16,440
persistence or our agent so this reduces

67
00:03:14,260 --> 00:03:22,239
the chances of us being detected by

68
00:03:16,440 --> 00:03:24,900
typical endpoint systems so let's see

69
00:03:22,239 --> 00:03:27,190
how a basic c2 environment looks like

70
00:03:24,900 --> 00:03:29,550
you can spin it in a matter of minutes

71
00:03:27,190 --> 00:03:33,040
so basically you can script it yourself

72
00:03:29,550 --> 00:03:34,570
requires 1 c2 server which can be

73
00:03:33,040 --> 00:03:37,660
deployed in the cloud or in your own

74
00:03:34,570 --> 00:03:40,720
environment where your agents will call

75
00:03:37,660 --> 00:03:42,640
back to and you're ready to go so

76
00:03:40,720 --> 00:03:44,800
there's multiple things that you need to

77
00:03:42,640 --> 00:03:46,779
do you need to find out let's say an

78
00:03:44,800 --> 00:03:50,200
appropriate c2 environment in this case

79
00:03:46,780 --> 00:03:51,730
you can use covenant there's a really

80
00:03:50,200 --> 00:03:55,390
good example by a very good friend of

81
00:03:51,730 --> 00:03:58,420
mine Federico he wrote his impressions

82
00:03:55,390 --> 00:04:01,179
of this c2 environment in hack the Box

83
00:03:58,420 --> 00:04:03,309
environment for for offshore and rest

84
00:04:01,180 --> 00:04:06,760
elapsed so have a look at it it's really

85
00:04:03,310 --> 00:04:08,380
good to see how this system works and

86
00:04:06,760 --> 00:04:13,480
how you can move laterally using these

87
00:04:08,380 --> 00:04:17,019
implants so the basic how it looks like

88
00:04:13,480 --> 00:04:19,630
this is you as the sea c2 owner you're

89
00:04:17,019 --> 00:04:21,250
issuing commands to your c2 server that

90
00:04:19,630 --> 00:04:24,760
sends down the commands to the infected

91
00:04:21,250 --> 00:04:27,090
host and the infected hosts return the

92
00:04:24,760 --> 00:04:31,169
information back to the c2 environment

93
00:04:27,090 --> 00:04:32,909
very simple so the problems here is that

94
00:04:31,169 --> 00:04:36,270
your c2 is directly exposed to the

95
00:04:32,910 --> 00:04:38,280
internet and it's easy to develop IOC s

96
00:04:36,270 --> 00:04:40,799
because you have one source address and

97
00:04:38,280 --> 00:04:43,260
basically it can be blocked on the

98
00:04:40,800 --> 00:04:45,590
firewall or the vendor can develop

99
00:04:43,260 --> 00:04:49,860
threat intelligence based on the IP

100
00:04:45,590 --> 00:04:51,030
communication protocol and so on so now

101
00:04:49,860 --> 00:04:53,280
we're going to look at a common

102
00:04:51,030 --> 00:04:56,309
infrastructure what most of us are

103
00:04:53,280 --> 00:04:58,739
actually using so you have your c2

104
00:04:56,310 --> 00:05:00,660
server you have a server for payload

105
00:04:58,740 --> 00:05:03,240
delivery you have your fishing server

106
00:05:00,660 --> 00:05:05,850
that are not exposed to the Internet so

107
00:05:03,240 --> 00:05:07,830
what we are doing in this case we are

108
00:05:05,850 --> 00:05:09,720
using redirect errs to filter your

109
00:05:07,830 --> 00:05:12,599
traffic and send it back to the c2

110
00:05:09,720 --> 00:05:15,740
environment it's a much more effective

111
00:05:12,600 --> 00:05:18,660
way in this case in case one of these

112
00:05:15,740 --> 00:05:20,490
red directors get compromised you can

113
00:05:18,660 --> 00:05:21,960
actually spin it up in a cloud

114
00:05:20,490 --> 00:05:28,550
environment somewhere else you can use

115
00:05:21,960 --> 00:05:31,799
Azure AWS Linode and so on and so forth

116
00:05:28,550 --> 00:05:33,930
so the radio actors basically prevent

117
00:05:31,800 --> 00:05:38,789
direct access to our environment so as I

118
00:05:33,930 --> 00:05:40,830
said everything is happening here we

119
00:05:38,789 --> 00:05:43,560
have our fishing server basically we

120
00:05:40,830 --> 00:05:46,229
need to trick the user into clicking on

121
00:05:43,560 --> 00:05:48,360
our payload for example we use web

122
00:05:46,229 --> 00:05:50,750
servers to deliver this payload you can

123
00:05:48,360 --> 00:05:54,210
use a web server FTP whatever not and

124
00:05:50,750 --> 00:05:57,450
most commonly see to traffic and data

125
00:05:54,210 --> 00:06:02,039
exfiltration traffic is over HTTP or DNS

126
00:05:57,450 --> 00:06:04,530
protocol pretty standard so for redirect

127
00:06:02,039 --> 00:06:06,840
errs you can use Janette's Apache H a

128
00:06:04,530 --> 00:06:08,539
proxy phishing you have Go Fish

129
00:06:06,840 --> 00:06:13,250
Kingfisher and so on and so forth

130
00:06:08,539 --> 00:06:19,979
payload delivery again HTTP FTP DNS and

131
00:06:13,250 --> 00:06:21,479
various c2 platforms so what are the

132
00:06:19,979 --> 00:06:23,280
challenges here and the benefits of

133
00:06:21,479 --> 00:06:25,109
using such an environment you can again

134
00:06:23,280 --> 00:06:29,039
deploy it in minutes you can adjust your

135
00:06:25,110 --> 00:06:30,720
threat vectors in minutes again you need

136
00:06:29,039 --> 00:06:32,760
to write your own redirection rules so

137
00:06:30,720 --> 00:06:35,159
basically you need to know how your c2

138
00:06:32,760 --> 00:06:37,560
environment works once C to traffic

139
00:06:35,159 --> 00:06:39,530
reaches your redirector you need to go

140
00:06:37,560 --> 00:06:43,440
back

141
00:06:39,530 --> 00:06:45,150
send it to the c2 environment if there

142
00:06:43,440 --> 00:06:46,590
is a payload delivery you need to

143
00:06:45,150 --> 00:06:51,989
redirect the traffic to the payload

144
00:06:46,590 --> 00:06:53,580
delivery and so on so core

145
00:06:51,990 --> 00:06:56,940
infrastructure is never directly exposed

146
00:06:53,580 --> 00:06:59,729
this is good we can migrate as I said

147
00:06:56,940 --> 00:07:01,020
initially though the Dirie directors

148
00:06:59,729 --> 00:07:04,020
anywhere we want

149
00:07:01,020 --> 00:07:05,849
it requires system admin maintenance

150
00:07:04,020 --> 00:07:08,400
work and stuff like that so basically

151
00:07:05,849 --> 00:07:09,930
you need to maintain the log files you

152
00:07:08,400 --> 00:07:12,330
need to maintain your binaries every

153
00:07:09,930 --> 00:07:14,220
time you create a new agent you need to

154
00:07:12,330 --> 00:07:17,520
publish it manually so on and so forth

155
00:07:14,220 --> 00:07:19,710
so basically it is a lot of work you

156
00:07:17,520 --> 00:07:22,409
cannot avoid customization so this is

157
00:07:19,710 --> 00:07:24,030
something what Harun said initially you

158
00:07:22,409 --> 00:07:25,229
need to be good at coding to be

159
00:07:24,030 --> 00:07:26,489
successful in your red teaming

160
00:07:25,229 --> 00:07:30,120
engagement or in your penetration

161
00:07:26,490 --> 00:07:32,009
testing because if you're using publicly

162
00:07:30,120 --> 00:07:34,500
available exploits and tools they're

163
00:07:32,009 --> 00:07:36,599
already signatures developed for it so

164
00:07:34,500 --> 00:07:39,000
you need to know a way how to bypass and

165
00:07:36,599 --> 00:07:44,840
customize your own code in order to get

166
00:07:39,000 --> 00:07:44,840
code execution or bypass any edr systems

167
00:07:45,139 --> 00:07:51,289
so and one important thing so once you

168
00:07:49,590 --> 00:07:54,090
have all of these items working together

169
00:07:51,289 --> 00:07:57,120
you don't have a centralized environment

170
00:07:54,090 --> 00:07:59,669
to see what is really happening so if

171
00:07:57,120 --> 00:08:01,259
somebody's clicking on your fishing link

172
00:07:59,669 --> 00:08:03,630
you need to go to the web server search

173
00:08:01,259 --> 00:08:05,279
through the logs if somebody is working

174
00:08:03,630 --> 00:08:08,039
on the c2 environment you need to go to

175
00:08:05,279 --> 00:08:10,229
the c2 server and get the log files and

176
00:08:08,039 --> 00:08:13,770
so on and so forth so it's very

177
00:08:10,229 --> 00:08:18,690
difficult to correlate so as I said

178
00:08:13,770 --> 00:08:20,310
communication is the key so how do the

179
00:08:18,690 --> 00:08:24,139
infected hosts communicate with the c2

180
00:08:20,310 --> 00:08:28,110
infrastructure as I said DNS FTP HTTP

181
00:08:24,139 --> 00:08:29,729
you name it you need to know how the

182
00:08:28,110 --> 00:08:31,979
infrastructure you're targeting is

183
00:08:29,729 --> 00:08:34,020
segmented so basically are there

184
00:08:31,979 --> 00:08:36,419
multiple networks is a single network

185
00:08:34,020 --> 00:08:38,029
are there any firewalls there what are

186
00:08:36,419 --> 00:08:41,669
the protocols allowed between these

187
00:08:38,029 --> 00:08:43,828
subnets so for example most companies do

188
00:08:41,669 --> 00:08:45,930
not even segment their network properly

189
00:08:43,828 --> 00:08:46,949
they allow anything to their firewalls

190
00:08:45,930 --> 00:08:49,529
between the client and the server

191
00:08:46,949 --> 00:08:51,900
environment at the end you will find

192
00:08:49,529 --> 00:08:54,420
other companies that actually filter

193
00:08:51,900 --> 00:08:59,670
surely between the client network and

194
00:08:54,420 --> 00:09:01,319
the server network you need to know are

195
00:08:59,670 --> 00:09:03,089
there any proxies in the network

196
00:09:01,320 --> 00:09:06,240
deployed so basically is the traffic

197
00:09:03,090 --> 00:09:09,300
inspected by HTTP proxy by DNS proxy and

198
00:09:06,240 --> 00:09:11,550
so on what are the other things to look

199
00:09:09,300 --> 00:09:14,849
out for like same systems are there any

200
00:09:11,550 --> 00:09:16,410
logging is there any logging is there

201
00:09:14,850 --> 00:09:20,700
any endpoint system deployed on the

202
00:09:16,410 --> 00:09:23,520
machine and things like that so I would

203
00:09:20,700 --> 00:09:25,530
walk you through a scenario so we are in

204
00:09:23,520 --> 00:09:29,790
theme plankton I apologize I'm a very

205
00:09:25,530 --> 00:09:32,730
big spongebob fan we are looking for the

206
00:09:29,790 --> 00:09:34,410
krabby patty formula the burger it's

207
00:09:32,730 --> 00:09:36,990
located on the application server

208
00:09:34,410 --> 00:09:38,189
spongebob is protecting it and only

209
00:09:36,990 --> 00:09:41,760
thing you need to assume is we

210
00:09:38,190 --> 00:09:45,180
compromised the host so scenario number

211
00:09:41,760 --> 00:09:47,430
one the firewall is blocking all inbound

212
00:09:45,180 --> 00:09:49,229
connection but everything outbound is

213
00:09:47,430 --> 00:09:52,109
allowed so basically we can use any

214
00:09:49,230 --> 00:09:54,870
protocol to send data outside of the

215
00:09:52,110 --> 00:09:56,550
situ environment also we can use any

216
00:09:54,870 --> 00:09:58,140
protocol internally as there is no

217
00:09:56,550 --> 00:10:01,319
filtering between the client and the

218
00:09:58,140 --> 00:10:03,210
server Network you won't find this very

219
00:10:01,320 --> 00:10:05,220
often but there are scenarios like this

220
00:10:03,210 --> 00:10:06,240
and you can actually use anything you

221
00:10:05,220 --> 00:10:07,670
want in this type of an environment

222
00:10:06,240 --> 00:10:11,280
that's why I didn't put any

223
00:10:07,670 --> 00:10:14,339
communication folks so we have the

224
00:10:11,280 --> 00:10:16,339
second scenario basically where the

225
00:10:14,340 --> 00:10:18,960
firewall is blocking everything inbound

226
00:10:16,340 --> 00:10:21,780
but it's also doing outbound filtering

227
00:10:18,960 --> 00:10:23,760
so what do I mean by double filtering

228
00:10:21,780 --> 00:10:25,800
the server's don't have direct access to

229
00:10:23,760 --> 00:10:28,950
the network and you have to move

230
00:10:25,800 --> 00:10:30,780
laterally through a infected host so in

231
00:10:28,950 --> 00:10:32,520
this case we're going to use HTTP to

232
00:10:30,780 --> 00:10:35,760
communicate back to the situ environment

233
00:10:32,520 --> 00:10:38,490
and we can use any protocol internally

234
00:10:35,760 --> 00:10:41,340
in the network so again they will adjust

235
00:10:38,490 --> 00:10:42,870
their security they will upgrade the

236
00:10:41,340 --> 00:10:46,380
infrastructure and we need to do a

237
00:10:42,870 --> 00:10:52,580
different way of communication and data

238
00:10:46,380 --> 00:10:54,960
exfiltration so again we have a firewall

239
00:10:52,580 --> 00:10:57,930
everything is again segmented that

240
00:10:54,960 --> 00:10:59,700
protected only specific traffic can go

241
00:10:57,930 --> 00:11:01,650
between the server environment and the

242
00:10:59,700 --> 00:11:03,450
client environment so in this case we

243
00:11:01,650 --> 00:11:05,189
can use SMB to move laterally through

244
00:11:03,450 --> 00:11:05,750
the infrastructure so again we're going

245
00:11:05,190 --> 00:11:07,819
to use

246
00:11:05,750 --> 00:11:11,209
TPS to communicate back to a single host

247
00:11:07,819 --> 00:11:13,670
and in this case we use SMB to move

248
00:11:11,209 --> 00:11:16,180
laterally because you need to allow SMB

249
00:11:13,670 --> 00:11:18,769
in an Active Directory environment so

250
00:11:16,180 --> 00:11:21,019
your clients need to communicate the

251
00:11:18,769 --> 00:11:28,639
Active Directory server or to the file

252
00:11:21,019 --> 00:11:30,139
server basically SMB is allowed the

253
00:11:28,639 --> 00:11:32,750
fourth scenario is when we have a

254
00:11:30,139 --> 00:11:36,290
firewall that also does web filtering or

255
00:11:32,750 --> 00:11:39,410
HTTP inspection or HTTP so in this case

256
00:11:36,290 --> 00:11:42,019
we fall back only to DNS and everything

257
00:11:39,410 --> 00:11:46,399
else stays the same so now the incident

258
00:11:42,019 --> 00:11:48,170
response team deploys a DNS proxy so in

259
00:11:46,399 --> 00:11:50,120
this case we basically cannot

260
00:11:48,170 --> 00:11:55,009
communicate anymore because we've been

261
00:11:50,120 --> 00:11:56,420
detected and everything stops well we

262
00:11:55,009 --> 00:12:00,379
still need to access the carry patty

263
00:11:56,420 --> 00:12:02,420
formula and the Burger of course so now

264
00:12:00,379 --> 00:12:04,759
we are going into building the next gen

265
00:12:02,420 --> 00:12:07,128
c2 environment so what does next-gen

266
00:12:04,759 --> 00:12:09,470
mean basically we need to go the

267
00:12:07,129 --> 00:12:11,899
environment we are targeting you need to

268
00:12:09,470 --> 00:12:14,149
know your target and you need to know

269
00:12:11,899 --> 00:12:15,980
what they have in their environment but

270
00:12:14,149 --> 00:12:19,009
also you need to keep track of the blue

271
00:12:15,980 --> 00:12:22,160
team's activities so we will speak about

272
00:12:19,009 --> 00:12:24,139
it but also you need to know your

273
00:12:22,160 --> 00:12:26,089
limitations and how to solve it so this

274
00:12:24,139 --> 00:12:29,809
means you need to be good at coding you

275
00:12:26,089 --> 00:12:32,389
need to know what you're doing so the

276
00:12:29,809 --> 00:12:34,189
first step is to develop Deception

277
00:12:32,389 --> 00:12:38,110
capabilities and offensive threat

278
00:12:34,189 --> 00:12:40,189
intelligence so what do I mean by it

279
00:12:38,110 --> 00:12:42,649
everything will come to your redirector

280
00:12:40,189 --> 00:12:45,259
so you will have a lot of data so this

281
00:12:42,649 --> 00:12:46,670
means botnets will access blue teams

282
00:12:45,259 --> 00:12:50,139
will access your infrastructure

283
00:12:46,670 --> 00:12:52,009
there'll be normal traffic c2 traffic

284
00:12:50,139 --> 00:12:54,410
security vendors will access it

285
00:12:52,009 --> 00:12:56,509
malicious users will access it basically

286
00:12:54,410 --> 00:13:01,100
everyone so anyone can download your

287
00:12:56,509 --> 00:13:03,949
code so what do we do basically we

288
00:13:01,100 --> 00:13:05,779
develop an engine X module so I mean I

289
00:13:03,949 --> 00:13:07,849
developed an engine X module that

290
00:13:05,779 --> 00:13:10,550
accommodates me to serve the right

291
00:13:07,850 --> 00:13:14,139
content to the right target so what does

292
00:13:10,550 --> 00:13:17,479
this mean basically I can serve content

293
00:13:14,139 --> 00:13:19,550
false contents to everyone except my own

294
00:13:17,480 --> 00:13:22,610
target so my own target will see

295
00:13:19,550 --> 00:13:25,040
malicious code this means I can redirect

296
00:13:22,610 --> 00:13:27,500
content from security providers and give

297
00:13:25,040 --> 00:13:29,569
them a welcome page or a landing page

298
00:13:27,500 --> 00:13:33,320
while my client will download the

299
00:13:29,570 --> 00:13:35,300
original in payload one other thing is

300
00:13:33,320 --> 00:13:37,550
we connect to threat intelligence

301
00:13:35,300 --> 00:13:39,680
sources so what do we do with these

302
00:13:37,550 --> 00:13:42,229
threat intelligence sources is basically

303
00:13:39,680 --> 00:13:43,760
as every binary that you are going to

304
00:13:42,230 --> 00:13:46,579
send and all of your indicators are

305
00:13:43,760 --> 00:13:49,250
compromised from IP addresses dns names

306
00:13:46,579 --> 00:13:52,399
and everything else you can query I this

307
00:13:49,250 --> 00:13:54,410
data with external partners so you can

308
00:13:52,399 --> 00:13:57,440
use your hashes IP addresses fully

309
00:13:54,410 --> 00:13:59,810
qualified on a domain names and you can

310
00:13:57,440 --> 00:14:01,820
enrich your own data so what do I mean

311
00:13:59,810 --> 00:14:06,160
enrich your own data so as everything

312
00:14:01,820 --> 00:14:09,950
again is coming to your redirect errs

313
00:14:06,160 --> 00:14:12,319
you can basically use shorten to query

314
00:14:09,950 --> 00:14:17,149
the source IP address what it is you can

315
00:14:12,320 --> 00:14:20,149
use gray noise virustotal otx talos IBM

316
00:14:17,149 --> 00:14:23,540
x-force and so on and so forth it's very

317
00:14:20,149 --> 00:14:24,020
very interesting concept so what does

318
00:14:23,540 --> 00:14:26,149
this mean

319
00:14:24,020 --> 00:14:28,430
basically in the module itself I will

320
00:14:26,149 --> 00:14:31,880
tell you what I'm doing here all of my

321
00:14:28,430 --> 00:14:35,540
fake content is on this server in my

322
00:14:31,880 --> 00:14:37,730
environment I'm raising an alert every

323
00:14:35,540 --> 00:14:40,040
time Raytheon or force point tries to

324
00:14:37,730 --> 00:14:43,100
access my environment so these AAS

325
00:14:40,040 --> 00:14:45,260
numbers belong to Raytheon so I know my

326
00:14:43,100 --> 00:14:48,950
client is using let's say Raytheon DLP

327
00:14:45,260 --> 00:14:51,410
and Raytheon firewalls and I'm raising a

328
00:14:48,950 --> 00:14:54,529
separate let's say Alert for another

329
00:14:51,410 --> 00:14:58,160
host so what what's the next thing I do

330
00:14:54,529 --> 00:14:59,689
i define my customer I define the

331
00:14:58,160 --> 00:15:03,920
payload server for this specific

332
00:14:59,690 --> 00:15:06,230
customer and the IP address or network

333
00:15:03,920 --> 00:15:08,959
range of the customer so this means that

334
00:15:06,230 --> 00:15:11,690
I will allow my customer in this case my

335
00:15:08,959 --> 00:15:14,719
target to access the real payload

336
00:15:11,690 --> 00:15:18,170
content but if the same link is used by

337
00:15:14,720 --> 00:15:21,140
anybody else it gets redirected to

338
00:15:18,170 --> 00:15:24,140
another server here asbestos if eclis I

339
00:15:21,140 --> 00:15:25,910
want to target Raytheon because if

340
00:15:24,140 --> 00:15:27,649
Raytheon starts accessing my data that

341
00:15:25,910 --> 00:15:30,709
means that the blue team is on to me and

342
00:15:27,649 --> 00:15:32,350
that they're trying to basically capture

343
00:15:30,709 --> 00:15:36,369
our malware

344
00:15:32,350 --> 00:15:38,020
so very simple we also work on the

345
00:15:36,370 --> 00:15:40,270
working hours of the client so basically

346
00:15:38,020 --> 00:15:44,230
we know they work from 8:30 until 5:30

347
00:15:40,270 --> 00:15:46,569
in UTC minus 8 times own so we know at

348
00:15:44,230 --> 00:15:48,880
what time the client is working anything

349
00:15:46,570 --> 00:15:50,650
happening outside is working our you

350
00:15:48,880 --> 00:15:53,740
mean that they're trying to either

351
00:15:50,650 --> 00:15:55,750
they're doing overtime but mostly maybe

352
00:15:53,740 --> 00:15:59,790
they're going to reverse-engineer our

353
00:15:55,750 --> 00:16:03,280
malware or our agent quite interesting

354
00:15:59,790 --> 00:16:06,310
so what do I mean by it so if you open

355
00:16:03,280 --> 00:16:08,110
the URL the customer a will see the

356
00:16:06,310 --> 00:16:12,400
payload so this is a simple PowerShell

357
00:16:08,110 --> 00:16:15,730
script but what will the others see is

358
00:16:12,400 --> 00:16:18,720
the same URL they will look into nginx

359
00:16:15,730 --> 00:16:22,780
or welcome page of whatever you want

360
00:16:18,720 --> 00:16:25,840
it's very very useful to filter out and

361
00:16:22,780 --> 00:16:29,530
not allow your client or the blue team

362
00:16:25,840 --> 00:16:31,660
to get the hold of your payload so what

363
00:16:29,530 --> 00:16:34,660
can we do we deceive blue team's for a

364
00:16:31,660 --> 00:16:36,550
very long time so any time a blue team

365
00:16:34,660 --> 00:16:38,890
tries to access your resource you're

366
00:16:36,550 --> 00:16:43,930
actually deceiving them they don't see

367
00:16:38,890 --> 00:16:47,020
the real content we can filter based on

368
00:16:43,930 --> 00:16:49,839
IP address network range ASN number and

369
00:16:47,020 --> 00:16:52,840
so on so basically also we can use

370
00:16:49,840 --> 00:16:56,680
browsers time of day and we have

371
00:16:52,840 --> 00:17:02,290
one-time download links so how does this

372
00:16:56,680 --> 00:17:06,159
look we have an alert somebody detected

373
00:17:02,290 --> 00:17:08,800
our IO C on ot X what is the agent

374
00:17:06,160 --> 00:17:10,570
client and what is the hash file so I've

375
00:17:08,800 --> 00:17:13,629
blurted it out so you don't see the

376
00:17:10,569 --> 00:17:16,780
actual hash file so also we have another

377
00:17:13,630 --> 00:17:20,500
visualization in E okay which means I

378
00:17:16,780 --> 00:17:22,329
can track your activity history which

379
00:17:20,500 --> 00:17:26,859
IOC is you've detected and which fishing

380
00:17:22,329 --> 00:17:29,110
links have been clicked on again we are

381
00:17:26,859 --> 00:17:31,120
always query external data sources so

382
00:17:29,110 --> 00:17:33,899
this allows us to basically track the

383
00:17:31,120 --> 00:17:36,550
blue team if they try to reuse

384
00:17:33,900 --> 00:17:38,050
authentication keys so our agents

385
00:17:36,550 --> 00:17:40,510
communicate with authentication key and

386
00:17:38,050 --> 00:17:42,850
they only use it once so if there is a

387
00:17:40,510 --> 00:17:45,890
reuse we will actually see it so this

388
00:17:42,850 --> 00:17:49,850
means again that they're trying to

389
00:17:45,890 --> 00:17:52,470
reverse-engineer our malware and

390
00:17:49,850 --> 00:17:54,030
everything else is very well known

391
00:17:52,470 --> 00:17:57,030
already I said it so I'll just have to

392
00:17:54,030 --> 00:17:59,220
speed up a little bit what I mean by

393
00:17:57,030 --> 00:18:03,360
reuse of keys so we can see again an

394
00:17:59,220 --> 00:18:06,870
alert authentication key reuse detected

395
00:18:03,360 --> 00:18:09,240
which agent source and so on and so

396
00:18:06,870 --> 00:18:10,830
forth so we can see the AAS number the

397
00:18:09,240 --> 00:18:15,470
geographical coordinates and the IP

398
00:18:10,830 --> 00:18:18,389
address for this specific detection

399
00:18:15,470 --> 00:18:20,310
second thing is we modify the agents to

400
00:18:18,390 --> 00:18:23,490
communicate and blend in so what do I

401
00:18:20,310 --> 00:18:26,460
mean by that the c2 framework is

402
00:18:23,490 --> 00:18:28,950
optimized to use DNS and social media

403
00:18:26,460 --> 00:18:30,420
and cloud services so basically we use

404
00:18:28,950 --> 00:18:33,510
applications that you use in your

405
00:18:30,420 --> 00:18:37,980
corporations like slack Microsoft teams

406
00:18:33,510 --> 00:18:41,220
Skype for business Twitter we transfer

407
00:18:37,980 --> 00:18:43,380
you name it and we modify the initial

408
00:18:41,220 --> 00:18:45,950
stager to detect certain items in the

409
00:18:43,380 --> 00:18:50,460
environment so when the stager comes in

410
00:18:45,950 --> 00:18:52,410
it queries if we need persistence or not

411
00:18:50,460 --> 00:18:56,610
or do we need access to that host or not

412
00:18:52,410 --> 00:18:58,530
so this happens basically whenever the

413
00:18:56,610 --> 00:19:00,929
persistence is triggered and it's

414
00:18:58,530 --> 00:19:05,070
triggered by either a macro service or

415
00:19:00,930 --> 00:19:07,290
whatever it's done based on activity so

416
00:19:05,070 --> 00:19:09,389
what do we do we grab the OS type patch

417
00:19:07,290 --> 00:19:13,050
level security software and security

418
00:19:09,390 --> 00:19:15,540
settings of this endpoint and we use the

419
00:19:13,050 --> 00:19:18,870
we detect or audio forensics forensic

420
00:19:15,540 --> 00:19:20,520
tools as well so what do we do we

421
00:19:18,870 --> 00:19:23,340
generate the grunt so this is carbon and

422
00:19:20,520 --> 00:19:26,129
platform and we have specific agents for

423
00:19:23,340 --> 00:19:28,770
slack teams Rob box social media and so

424
00:19:26,130 --> 00:19:30,480
on so we will generate a grunt that will

425
00:19:28,770 --> 00:19:35,090
utilize public services to avoid

426
00:19:30,480 --> 00:19:38,930
detection so here you can see an agent

427
00:19:35,090 --> 00:19:44,669
using slack and going to the slack URL

428
00:19:38,930 --> 00:19:46,320
it's very very helpful so we never keep

429
00:19:44,670 --> 00:19:47,940
the code on the affected host so that

430
00:19:46,320 --> 00:19:50,340
basically means we only keep the small

431
00:19:47,940 --> 00:19:52,680
persistence file we have one-time

432
00:19:50,340 --> 00:19:55,530
download codes we query if we need

433
00:19:52,680 --> 00:19:57,420
access and if we don't basically address

434
00:19:55,530 --> 00:20:00,030
until it's called next time

435
00:19:57,420 --> 00:20:04,049
the most important thing is to have self

436
00:20:00,030 --> 00:20:06,000
destruct embedded in the environment so

437
00:20:04,049 --> 00:20:08,910
what do I mean by self destruct we will

438
00:20:06,000 --> 00:20:11,640
talk about it in a second payload for

439
00:20:08,910 --> 00:20:13,920
every host is different and this means

440
00:20:11,640 --> 00:20:17,010
that we can easily track which host

441
00:20:13,920 --> 00:20:18,210
you're trying to investigate which

442
00:20:17,010 --> 00:20:19,440
malware type you're trying to

443
00:20:18,210 --> 00:20:24,750
investigate which agent which

444
00:20:19,440 --> 00:20:28,260
persistence and so on so we have another

445
00:20:24,750 --> 00:20:30,179
alert in E okay so here is redline so

446
00:20:28,260 --> 00:20:33,450
what does the agent do it tells us here

447
00:20:30,179 --> 00:20:37,530
are detected memory forensic tool I'm

448
00:20:33,450 --> 00:20:39,960
wiping out the data and basically it

449
00:20:37,530 --> 00:20:42,770
raises an alert in ALK we get alerted

450
00:20:39,960 --> 00:20:46,140
about it so we know they're trying to

451
00:20:42,770 --> 00:20:47,970
investigate this host and we do it for

452
00:20:46,140 --> 00:20:53,010
basically a lot of tools from redline

453
00:20:47,970 --> 00:20:56,910
volatility we basically know everything

454
00:20:53,010 --> 00:21:00,990
in this case we have a highly customized

455
00:20:56,910 --> 00:21:02,970
DNS server basically it uses the same

456
00:21:00,990 --> 00:21:06,030
rules as we define in our redirect errs

457
00:21:02,970 --> 00:21:09,110
and our deception we use it to

458
00:21:06,030 --> 00:21:12,330
communicate one-time download keys and

459
00:21:09,110 --> 00:21:15,479
you can see it here so what we do we

460
00:21:12,330 --> 00:21:18,149
just define the deception is true we

461
00:21:15,480 --> 00:21:21,150
have the settings that you will serve

462
00:21:18,150 --> 00:21:23,640
these fake entries to it to the subnets

463
00:21:21,150 --> 00:21:26,340
we wanted to serve the real entries and

464
00:21:23,640 --> 00:21:30,720
the real servers the c2 servers will be

465
00:21:26,340 --> 00:21:33,299
here behind so basically again if anyone

466
00:21:30,720 --> 00:21:35,400
is trying to access our name servers

467
00:21:33,299 --> 00:21:38,668
they will see fake entries so we can

468
00:21:35,400 --> 00:21:41,250
serve whatever we want to serve and to

469
00:21:38,669 --> 00:21:44,540
the Intendant user to the intended agent

470
00:21:41,250 --> 00:21:47,850
we will serve the real content

471
00:21:44,540 --> 00:21:51,240
what is the backbone of this elastic

472
00:21:47,850 --> 00:21:54,240
stack so we use all of these tools so

473
00:21:51,240 --> 00:21:56,700
every single tool is basically sending

474
00:21:54,240 --> 00:22:03,049
log files to a centralized system so

475
00:21:56,700 --> 00:22:06,090
think of it as a seam for red teams okay

476
00:22:03,049 --> 00:22:08,910
so all data from c2 systems

477
00:22:06,090 --> 00:22:10,770
fishing redirect errs everything is

478
00:22:08,910 --> 00:22:14,430
store correlated

479
00:22:10,770 --> 00:22:16,379
we enrich everything by using threat

480
00:22:14,430 --> 00:22:19,410
intelligence from all the vendors so

481
00:22:16,380 --> 00:22:23,730
basically we have paid subscriptions but

482
00:22:19,410 --> 00:22:25,950
we enrich the data why do we do it

483
00:22:23,730 --> 00:22:28,290
it's easier to generate documentation

484
00:22:25,950 --> 00:22:30,750
for your client engagement so I don't

485
00:22:28,290 --> 00:22:33,060
need to think about who moved laterally

486
00:22:30,750 --> 00:22:35,640
when what was the keystroke what was the

487
00:22:33,060 --> 00:22:38,490
password entered by the user where is

488
00:22:35,640 --> 00:22:42,690
this stored all the screenshots are

489
00:22:38,490 --> 00:22:44,970
present there so basically you have a

490
00:22:42,690 --> 00:22:48,390
complete history who has done what in

491
00:22:44,970 --> 00:22:50,430
the environment and I'll just walk you

492
00:22:48,390 --> 00:22:53,310
through a quick engagement what what

493
00:22:50,430 --> 00:22:55,110
what is the scenario we targeted a

494
00:22:53,310 --> 00:22:56,669
software development company so their

495
00:22:55,110 --> 00:22:59,399
management wanted us to test their

496
00:22:56,670 --> 00:23:02,160
systems it was a black box engagement

497
00:22:59,400 --> 00:23:04,110
and a long-term operation so what we've

498
00:23:02,160 --> 00:23:07,110
done is we surveyed the environment for

499
00:23:04,110 --> 00:23:08,490
about three weeks and we stay five

500
00:23:07,110 --> 00:23:12,060
months undetected in their

501
00:23:08,490 --> 00:23:13,950
infrastructure what did you do basically

502
00:23:12,060 --> 00:23:15,570
we use open source intelligence we

503
00:23:13,950 --> 00:23:19,860
gathered enough data about our target

504
00:23:15,570 --> 00:23:22,040
using LinkedIn Facebook reddit github

505
00:23:19,860 --> 00:23:25,679
and so on we found some interesting

506
00:23:22,040 --> 00:23:27,570
let's say posts and we obtained code

507
00:23:25,680 --> 00:23:30,480
execution in a way that we sent them

508
00:23:27,570 --> 00:23:33,300
through the forum basically a fix for

509
00:23:30,480 --> 00:23:35,820
their problem so we fixed their dotnet

510
00:23:33,300 --> 00:23:39,600
issue dotnet library issue but we

511
00:23:35,820 --> 00:23:42,810
introduced a call back so we surveyed

512
00:23:39,600 --> 00:23:45,030
the hosts we deployed custom payload we

513
00:23:42,810 --> 00:23:48,300
surveyed everything else in the network

514
00:23:45,030 --> 00:23:49,860
their behavior we moved laterally and we

515
00:23:48,300 --> 00:23:51,899
got to the corporate data and the source

516
00:23:49,860 --> 00:23:54,629
code what was hosted on their

517
00:23:51,900 --> 00:23:58,410
environment so this is basically how it

518
00:23:54,630 --> 00:24:00,720
looks like so what we did we use we use

519
00:23:58,410 --> 00:24:03,390
slack to send C to information outside

520
00:24:00,720 --> 00:24:06,360
so slack is allowed on their layer seven

521
00:24:03,390 --> 00:24:08,640
firewall you can move through it easily

522
00:24:06,360 --> 00:24:11,790
we used SMB to access the backend data

523
00:24:08,640 --> 00:24:14,460
center and we extracted the data out

524
00:24:11,790 --> 00:24:16,530
they didn't see anything irregular in

525
00:24:14,460 --> 00:24:19,260
their environment so we didn't use a

526
00:24:16,530 --> 00:24:22,020
custom HTTP page or custom protocol we

527
00:24:19,260 --> 00:24:23,370
actually used a protocol that was

528
00:24:22,020 --> 00:24:25,139
allowed in their network and an

529
00:24:23,370 --> 00:24:27,209
application that was allowed

530
00:24:25,140 --> 00:24:29,070
we could have done similarly with teams

531
00:24:27,210 --> 00:24:32,940
with Skype for business SharePoint

532
00:24:29,070 --> 00:24:35,159
onedrive you name it and throughout

533
00:24:32,940 --> 00:24:37,980
every engagement throughout every move

534
00:24:35,160 --> 00:24:40,200
we actually monitored the threat

535
00:24:37,980 --> 00:24:43,770
intelligence so did they upload anything

536
00:24:40,200 --> 00:24:46,770
to two-wire store role with the upload

537
00:24:43,770 --> 00:24:48,540
anything to IBM has IBM accessed our

538
00:24:46,770 --> 00:24:52,350
website or has any other vendor

539
00:24:48,540 --> 00:24:56,250
basically accessed the theory directors

540
00:24:52,350 --> 00:24:59,040
or access our content so at the end we

541
00:24:56,250 --> 00:25:02,790
had long term persistence for about five

542
00:24:59,040 --> 00:25:05,520
months what did the blue team see or the

543
00:25:02,790 --> 00:25:07,799
security provider nothing everything was

544
00:25:05,520 --> 00:25:10,980
normal for them we serve them deception

545
00:25:07,799 --> 00:25:14,100
data fake content false DNS responses

546
00:25:10,980 --> 00:25:16,679
false HTTP data they did not know what

547
00:25:14,100 --> 00:25:18,990
was there so basically throughout five

548
00:25:16,679 --> 00:25:21,900
months of engagement we deceived

549
00:25:18,990 --> 00:25:25,290
everybody in the environment and there

550
00:25:21,900 --> 00:25:28,440
was nothing they could do about it so

551
00:25:25,290 --> 00:25:31,399
what are the lessons learned things are

552
00:25:28,440 --> 00:25:33,750
not always shining so you will find

553
00:25:31,400 --> 00:25:36,780
various different things so everybody

554
00:25:33,750 --> 00:25:38,880
uses different security tools you have

555
00:25:36,780 --> 00:25:42,240
to be careful how you open files that

556
00:25:38,880 --> 00:25:44,790
you find so as Haroon previously stated

557
00:25:42,240 --> 00:25:48,020
if you open a file it's a Word document

558
00:25:44,790 --> 00:25:52,350
he has embedded canneries he can see so

559
00:25:48,020 --> 00:25:54,360
if we use containing containers or

560
00:25:52,350 --> 00:25:57,559
isolated informations or sand boxes to

561
00:25:54,360 --> 00:26:00,780
open this content you cannot see it

562
00:25:57,559 --> 00:26:04,950
getting to note the customer IP is a

563
00:26:00,780 --> 00:26:07,020
painful process for several reasons what

564
00:26:04,950 --> 00:26:08,880
if they're using cloud-based DNS servers

565
00:26:07,020 --> 00:26:15,030
what if they use code base that proxies

566
00:26:08,880 --> 00:26:18,600
okay basically three more minutes

567
00:26:15,030 --> 00:26:20,668
excellent so there are ways to detect

568
00:26:18,600 --> 00:26:24,899
the real IP address of your client but

569
00:26:20,669 --> 00:26:27,059
it can be a painful process always have

570
00:26:24,900 --> 00:26:28,590
one agent to communicate back to the

571
00:26:27,059 --> 00:26:31,230
infrastructure because if we run

572
00:26:28,590 --> 00:26:33,330
multiple c2 agents and they call back

573
00:26:31,230 --> 00:26:37,020
basically the firewall will pick it up

574
00:26:33,330 --> 00:26:38,370
the blue team will get alerted and you

575
00:26:37,020 --> 00:26:42,629
won't do anything

576
00:26:38,370 --> 00:26:45,209
to that we had quite a interesting time

577
00:26:42,630 --> 00:26:49,230
basically identifying security vendors

578
00:26:45,210 --> 00:26:51,059
not only by the a s or a 8 IP prefix but

579
00:26:49,230 --> 00:26:54,000
also if they're using any cloud services

580
00:26:51,059 --> 00:26:57,330
or or other addresses basically to

581
00:26:54,000 --> 00:26:59,460
investigate a security threat so it was

582
00:26:57,330 --> 00:27:04,949
deeply disturbing to identify certain

583
00:26:59,460 --> 00:27:07,140
vendors developers are easy targets

584
00:27:04,950 --> 00:27:08,670
they always need special rights so

585
00:27:07,140 --> 00:27:11,970
basically they're always coding they're

586
00:27:08,670 --> 00:27:14,220
always compiling they need debugging

587
00:27:11,970 --> 00:27:17,370
permissions they need to execute a lot

588
00:27:14,220 --> 00:27:19,559
of binaries and they use a lot of

589
00:27:17,370 --> 00:27:23,909
libraries basically sometimes even from

590
00:27:19,559 --> 00:27:25,860
unverified sources and most importantly

591
00:27:23,910 --> 00:27:27,570
as I said you need to code and you need

592
00:27:25,860 --> 00:27:31,260
to learn how to adapt and solve puzzles

593
00:27:27,570 --> 00:27:35,550
so you will not be successful unless you

594
00:27:31,260 --> 00:27:38,190
can adapt to the environment what can we

595
00:27:35,550 --> 00:27:39,960
say about blue teams we you can get the

596
00:27:38,190 --> 00:27:42,780
seed for a very long time you will not

597
00:27:39,960 --> 00:27:44,400
even know about it look for deviations

598
00:27:42,780 --> 00:27:46,980
in your traffic so basically if you see

599
00:27:44,400 --> 00:27:50,220
an increase in SMB traffic from a host

600
00:27:46,980 --> 00:27:52,140
and in the application for a say in our

601
00:27:50,220 --> 00:27:54,090
case it was slack this should have been

602
00:27:52,140 --> 00:27:58,200
your indicator that something is wrong

603
00:27:54,090 --> 00:28:00,590
in the network always micro segment so

604
00:27:58,200 --> 00:28:04,110
filter out all unwanted traffic

605
00:28:00,590 --> 00:28:07,350
everywhere in your network work with

606
00:28:04,110 --> 00:28:09,570
your developers in the company in in

607
00:28:07,350 --> 00:28:14,730
this case raise awareness for using

608
00:28:09,570 --> 00:28:16,010
libraries you can find research on this

609
00:28:14,730 --> 00:28:20,030
topic as well

610
00:28:16,010 --> 00:28:20,030
red elk is an excellent concept

611
00:28:21,280 --> 00:28:24,240
any questions

612
00:28:26,320 --> 00:28:33,710
[Music]

