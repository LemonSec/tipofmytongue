1
00:05:19,400 --> 00:05:21,479
all right so it used to be we'll just

2
00:05:21,479 --> 00:05:23,900
take this

3
00:08:28,620 --> 00:08:30,360
because if you think about it from a

4
00:08:30,360 --> 00:08:31,620
corporate environment

5
00:08:31,620 --> 00:08:34,260
RDP files are used all the time right

6
00:08:34,260 --> 00:08:35,519
you've got some remote desktop that

7
00:08:35,519 --> 00:08:38,519
you're shared for terminal Services

8
00:08:38,519 --> 00:08:40,580
um

9
00:08:41,820 --> 00:08:44,640
you're good my mic just quit working

10
00:08:44,640 --> 00:08:46,680
though hold on one second the mic's

11
00:08:46,680 --> 00:08:50,060
working but my mouse is not working now

12
00:08:50,339 --> 00:08:52,459
all right

13
00:08:52,620 --> 00:08:54,720
let me just try this one more time let's

14
00:08:54,720 --> 00:08:57,380
see if that works

15
00:08:58,440 --> 00:09:01,980
yeah it's not working let me see

16
00:09:01,980 --> 00:09:05,459
there we go sweet so remote desktop

17
00:09:05,459 --> 00:09:07,740
looking at remote desktop the things

18
00:09:07,740 --> 00:09:11,399
that I've noticed were that RDP files

19
00:09:11,399 --> 00:09:13,680
are not blocked by email clients why

20
00:09:13,680 --> 00:09:15,360
because business continuity says that

21
00:09:15,360 --> 00:09:17,339
sometimes we need to send RDP files to

22
00:09:17,339 --> 00:09:18,779
our employees so that they can access

23
00:09:18,779 --> 00:09:21,300
the remote workstation and so that's a

24
00:09:21,300 --> 00:09:22,620
really good indicator for us because

25
00:09:22,620 --> 00:09:24,959
that means we could email RDP files to

26
00:09:24,959 --> 00:09:26,580
our targets

27
00:09:26,580 --> 00:09:28,019
um they're not blocked by security

28
00:09:28,019 --> 00:09:29,700
providers so if you're using like proof

29
00:09:29,700 --> 00:09:32,160
point or any of the security mail

30
00:09:32,160 --> 00:09:34,019
gateways then they'll fly right through

31
00:09:34,019 --> 00:09:35,700
by default I mean you could obviously

32
00:09:35,700 --> 00:09:37,640
configure these rules up to block these

33
00:09:37,640 --> 00:09:40,800
and then Outlook Office 365 all of these

34
00:09:40,800 --> 00:09:43,560
mail providers are also permitting RDP

35
00:09:43,560 --> 00:09:46,019
files by default and so this was just

36
00:09:46,019 --> 00:09:47,760
kind of me generating a bunch of the

37
00:09:47,760 --> 00:09:49,200
extensions and randomly clicking and

38
00:09:49,200 --> 00:09:53,040
then bam RDP pops up and so RDP files

39
00:09:53,040 --> 00:09:54,300
are a really good indicator that we

40
00:09:54,300 --> 00:09:56,100
could leverage that so but when you

41
00:09:56,100 --> 00:09:57,660
start thinking about this what does RDP

42
00:09:57,660 --> 00:09:59,940
provide to an attacker in the event

43
00:09:59,940 --> 00:10:02,640
where an RDP file was sent in

44
00:10:02,640 --> 00:10:05,160
and so the thing that we can actually do

45
00:10:05,160 --> 00:10:07,019
is there's a lot of stuff that comes

46
00:10:07,019 --> 00:10:09,180
with features within this um so RDP can

47
00:10:09,180 --> 00:10:11,940
be configured with the RDP file to

48
00:10:11,940 --> 00:10:13,380
actually pass through Network file

49
00:10:13,380 --> 00:10:14,640
shares for instance so let's just say

50
00:10:14,640 --> 00:10:16,019
that there's a mounted Network file

51
00:10:16,019 --> 00:10:18,180
share as you know Z drive or something

52
00:10:18,180 --> 00:10:19,920
that you're you automatically provision

53
00:10:19,920 --> 00:10:21,720
with a group policy for all your

54
00:10:21,720 --> 00:10:24,660
employees so those map network drives

55
00:10:24,660 --> 00:10:28,339
are available through a session of RDP

56
00:10:28,339 --> 00:10:30,899
then you have read write over the client

57
00:10:30,899 --> 00:10:32,279
drive so on the C drive you can do

58
00:10:32,279 --> 00:10:33,600
binary planning so if you think about

59
00:10:33,600 --> 00:10:35,640
that from the the aspect of dropping a

60
00:10:35,640 --> 00:10:37,440
beacon in the startup folder or some

61
00:10:37,440 --> 00:10:39,420
other sort of persistence you could just

62
00:10:39,420 --> 00:10:41,760
drop it there the other cool thing is it

63
00:10:41,760 --> 00:10:43,680
actually forwards the local printers of

64
00:10:43,680 --> 00:10:44,880
that Network so if there's printers

65
00:10:44,880 --> 00:10:45,959
there it'll mount it and become

66
00:10:45,959 --> 00:10:47,160
available on the terminal Services

67
00:10:47,160 --> 00:10:49,380
client because Microsoft really wants to

68
00:10:49,380 --> 00:10:51,300
be able to enable this remote workspace

69
00:10:51,300 --> 00:10:53,339
so that it's seamless with the clients

70
00:10:53,339 --> 00:10:55,019
that are connecting to it and it creates

71
00:10:55,019 --> 00:10:57,660
a massive Vector for that uh with that

72
00:10:57,660 --> 00:10:59,040
you also get the clipboard contents and

73
00:10:59,040 --> 00:11:00,300
this is really this is actually really

74
00:11:00,300 --> 00:11:02,820
cool because in my research I was in a

75
00:11:02,820 --> 00:11:04,620
virtual machine launching the remote

76
00:11:04,620 --> 00:11:06,540
desktop in order to connect to my rogue

77
00:11:06,540 --> 00:11:07,740
server which we'll talk about in a

78
00:11:07,740 --> 00:11:10,200
minute and the actual clipboard content

79
00:11:10,200 --> 00:11:12,839
from my host computer outside my virtual

80
00:11:12,839 --> 00:11:14,220
machine was forwarded to my remote

81
00:11:14,220 --> 00:11:16,320
server so now you have this other

82
00:11:16,320 --> 00:11:18,839
problem where network files or shares

83
00:11:18,839 --> 00:11:20,160
that are mounted on the host computer

84
00:11:20,160 --> 00:11:22,860
that are forwarded to a VM become

85
00:11:22,860 --> 00:11:24,120
available as well because the clipboard

86
00:11:24,120 --> 00:11:26,040
is usually there by default

87
00:11:26,040 --> 00:11:28,620
and so um you could also look at the

88
00:11:28,620 --> 00:11:30,300
audio devices so think about audio and

89
00:11:30,300 --> 00:11:32,339
video or any sort of USB components that

90
00:11:32,339 --> 00:11:33,720
are plugged into the machine you could

91
00:11:33,720 --> 00:11:36,300
actually set RDP up by default to

92
00:11:36,300 --> 00:11:38,160
forward all of the devices from that

93
00:11:38,160 --> 00:11:40,380
local machine from your target to the

94
00:11:40,380 --> 00:11:41,880
remote session and we'll talk about why

95
00:11:41,880 --> 00:11:43,320
that gets really bad

96
00:11:43,320 --> 00:11:45,540
um in a little bit you can do cameras

97
00:11:45,540 --> 00:11:48,060
the other cool thing is in some some in

98
00:11:48,060 --> 00:11:49,620
some cases you can do remote code

99
00:11:49,620 --> 00:11:51,720
execution directly so as soon as that

100
00:11:51,720 --> 00:11:53,399
client connects to your Rogue server

101
00:11:53,399 --> 00:11:54,420
there's ways that you could actually

102
00:11:54,420 --> 00:11:56,700
execute code on that computer we'll talk

103
00:11:56,700 --> 00:11:57,959
about that a little bit in the con in

104
00:11:57,959 --> 00:11:59,160
the conditions that are required around

105
00:11:59,160 --> 00:12:01,139
it but if you look I mean Microsoft

106
00:12:01,139 --> 00:12:03,420
terminal Services has a wide variety of

107
00:12:03,420 --> 00:12:05,220
attack vectors that we could Leverage

108
00:12:05,220 --> 00:12:07,440
and so the cool thing with that is we

109
00:12:07,440 --> 00:12:10,620
can actually configure mstsc or the RDP

110
00:12:10,620 --> 00:12:12,720
file on our own machine and then just

111
00:12:12,720 --> 00:12:14,639
send it as a file attachment and we

112
00:12:14,639 --> 00:12:15,839
could send it to any meal client because

113
00:12:15,839 --> 00:12:17,339
it passes through all the mail gateways

114
00:12:17,339 --> 00:12:19,139
and it bypasses all the mail providers

115
00:12:19,139 --> 00:12:20,399
and all the security gateways and

116
00:12:20,399 --> 00:12:21,480
everything else so we're basically

117
00:12:21,480 --> 00:12:23,040
evading everything

118
00:12:23,040 --> 00:12:24,420
um from end to end so it's a really

119
00:12:24,420 --> 00:12:26,700
great initial access Vector to kind of

120
00:12:26,700 --> 00:12:28,500
consider the only problem with this is

121
00:12:28,500 --> 00:12:29,940
we need a really good roof so when

122
00:12:29,940 --> 00:12:32,040
you're sending somebody an RDP file in

123
00:12:32,040 --> 00:12:33,300
the corporate environment what do you

124
00:12:33,300 --> 00:12:35,160
typically see right so you think about

125
00:12:35,160 --> 00:12:36,480
this from the outside the box because

126
00:12:36,480 --> 00:12:38,519
you're going to need to tailor the

127
00:12:38,519 --> 00:12:40,380
attack Vector to your Targets in

128
00:12:40,380 --> 00:12:42,120
something that they're familiar with and

129
00:12:42,120 --> 00:12:44,279
so the way that we do that is using a

130
00:12:44,279 --> 00:12:46,800
really good ruse and so the cool thing

131
00:12:46,800 --> 00:12:48,720
is you know with with social engineering

132
00:12:48,720 --> 00:12:50,100
attacks and all this moving to other

133
00:12:50,100 --> 00:12:51,779
verticals and not necessarily having to

134
00:12:51,779 --> 00:12:54,300
stay on email anymore we can go back to

135
00:12:54,300 --> 00:12:56,700
email now and so because these RDP files

136
00:12:56,700 --> 00:12:57,600
pass through we don't have to worry

137
00:12:57,600 --> 00:13:00,360
about security gateways and so what

138
00:13:00,360 --> 00:13:01,380
we're going to try to do is we're going

139
00:13:01,380 --> 00:13:04,079
to try to entice a user to connect to us

140
00:13:04,079 --> 00:13:06,180
and it needs to look legit and because

141
00:13:06,180 --> 00:13:07,500
obviously we want them to be able to

142
00:13:07,500 --> 00:13:09,959
open the RDP file connection and then do

143
00:13:09,959 --> 00:13:11,279
some cool stuff

144
00:13:11,279 --> 00:13:12,600
um and then if we in the in the email

145
00:13:12,600 --> 00:13:14,399
ruse if we provide some sort of out

146
00:13:14,399 --> 00:13:16,139
right if there's concerns or questions

147
00:13:16,139 --> 00:13:18,120
like I'm not expecting this we need to

148
00:13:18,120 --> 00:13:20,220
be able to provide them a decent way to

149
00:13:20,220 --> 00:13:22,380
get out of that without reporting back

150
00:13:22,380 --> 00:13:25,320
to their security teams and then

151
00:13:25,320 --> 00:13:27,240
we could forward them on after they're

152
00:13:27,240 --> 00:13:28,440
done and so we kind of want to think

153
00:13:28,440 --> 00:13:29,700
about all this because you don't want to

154
00:13:29,700 --> 00:13:31,079
leave red flags and you don't want to

155
00:13:31,079 --> 00:13:32,880
leave anybody concerned that they just

156
00:13:32,880 --> 00:13:34,200
open something because then the security

157
00:13:34,200 --> 00:13:35,579
team is going to be on you and then when

158
00:13:35,579 --> 00:13:36,839
they're on there you got a limited time

159
00:13:36,839 --> 00:13:38,700
and you got to move quick and lateral

160
00:13:38,700 --> 00:13:40,139
movement and pivots and everything else

161
00:13:40,139 --> 00:13:41,579
has to be done really quickly rather

162
00:13:41,579 --> 00:13:43,139
than go low and slow like we would all

163
00:13:43,139 --> 00:13:45,720
like to do and so this works really good

164
00:13:45,720 --> 00:13:47,220
if you're on an internal Network because

165
00:13:47,220 --> 00:13:48,600
if you have it on an internal Network

166
00:13:48,600 --> 00:13:50,760
already you could plant RDP files on

167
00:13:50,760 --> 00:13:52,139
like Network file shares and it just

168
00:13:52,139 --> 00:13:54,240
makes it really valuable

169
00:13:54,240 --> 00:13:55,440
um and so the way that we're going to do

170
00:13:55,440 --> 00:13:57,660
this is we're going to set up a fake

171
00:13:57,660 --> 00:14:00,660
remote shared workspace and so I tend to

172
00:14:00,660 --> 00:14:02,699
go to LinkedIn look at what jobs are

173
00:14:02,699 --> 00:14:04,680
hiring for or look at what Engineers

174
00:14:04,680 --> 00:14:06,360
they have on their teams already and

175
00:14:06,360 --> 00:14:07,740
then find out what technologies that

176
00:14:07,740 --> 00:14:09,180
they're well versed in

177
00:14:09,180 --> 00:14:10,740
um in a lot of cases this was a real one

178
00:14:10,740 --> 00:14:13,440
that I used from Citrix workspace and if

179
00:14:13,440 --> 00:14:15,899
you'll notice I I template the email

180
00:14:15,899 --> 00:14:17,639
because I usually send these in bulk so

181
00:14:17,639 --> 00:14:18,959
I'll send like 10 at a time or something

182
00:14:18,959 --> 00:14:20,760
and I'm basically spearfishing like five

183
00:14:20,760 --> 00:14:22,920
or ten people at a time but I want to be

184
00:14:22,920 --> 00:14:24,180
able to search and replace the target

185
00:14:24,180 --> 00:14:26,220
the sender and all that but we're

186
00:14:26,220 --> 00:14:27,600
testing a new shared recruitment

187
00:14:27,600 --> 00:14:29,459
environment need your help please verify

188
00:14:29,459 --> 00:14:31,620
your access as soon as possible to avoid

189
00:14:31,620 --> 00:14:33,839
service disruption the attack connection

190
00:14:33,839 --> 00:14:35,699
file will automatically connect you to

191
00:14:35,699 --> 00:14:37,440
the workspace so we're telling them what

192
00:14:37,440 --> 00:14:38,639
they can expect that way there's no red

193
00:14:38,639 --> 00:14:39,600
flags

194
00:14:39,600 --> 00:14:41,760
so I would automatically connect you to

195
00:14:41,760 --> 00:14:42,899
the workspace

196
00:14:42,899 --> 00:14:45,480
the invitation is going to expire and so

197
00:14:45,480 --> 00:14:46,980
that because it's expiring it creates

198
00:14:46,980 --> 00:14:48,300
that urgency that we're trying to get

199
00:14:48,300 --> 00:14:49,800
them to do before something else happens

200
00:14:49,800 --> 00:14:51,300
we don't want to interfere with business

201
00:14:51,300 --> 00:14:53,100
so they're going to want to click on it

202
00:14:53,100 --> 00:14:55,380
and then I and this is a real Citrus

203
00:14:55,380 --> 00:14:56,820
Workspace Email

204
00:14:56,820 --> 00:14:58,440
um I just swapped it out with my own my

205
00:14:58,440 --> 00:14:59,880
own stuff and then you'll see the the

206
00:14:59,880 --> 00:15:01,620
workspace RDP file and then there's an

207
00:15:01,620 --> 00:15:03,240
attachment on there and it looks really

208
00:15:03,240 --> 00:15:04,320
nice

209
00:15:04,320 --> 00:15:05,940
um the cool thing is at the bottom I put

210
00:15:05,940 --> 00:15:08,399
in the event you're unable to connect to

211
00:15:08,399 --> 00:15:09,779
the remote workspace we don't want them

212
00:15:09,779 --> 00:15:12,180
going to the security team or if I'm

213
00:15:12,180 --> 00:15:14,220
fishing them from another employee we

214
00:15:14,220 --> 00:15:15,360
don't want them to go to that employee

215
00:15:15,360 --> 00:15:17,160
so what we'll do is we'll say if you're

216
00:15:17,160 --> 00:15:18,779
having any problems please fill out this

217
00:15:18,779 --> 00:15:20,220
form using this link that way they just

218
00:15:20,220 --> 00:15:21,720
report it to us and it just goes to

219
00:15:21,720 --> 00:15:23,760
devnoll we don't care

220
00:15:23,760 --> 00:15:26,160
um and so that's that's how we kind of

221
00:15:26,160 --> 00:15:28,079
let them down from the roofs um and so

222
00:15:28,079 --> 00:15:30,180
now the roost delivery is really

223
00:15:30,180 --> 00:15:31,500
interesting because we're once again

224
00:15:31,500 --> 00:15:33,360
back on email but it doesn't have to be

225
00:15:33,360 --> 00:15:35,180
email you could do this through Linkedin

226
00:15:35,180 --> 00:15:37,800
lots of social networks and team

227
00:15:37,800 --> 00:15:39,779
collaboration tools will pass RDP files

228
00:15:39,779 --> 00:15:42,600
through flawlessly so think about start

229
00:15:42,600 --> 00:15:43,800
thinking outside the box whenever you're

230
00:15:43,800 --> 00:15:45,540
starting to send these RDP files you can

231
00:15:45,540 --> 00:15:47,399
plant them anywhere

232
00:15:47,399 --> 00:15:49,259
um and then the other cool thing is when

233
00:15:49,259 --> 00:15:50,339
I was mentioning what the network file

234
00:15:50,339 --> 00:15:51,720
share replacement we'll talk about how

235
00:15:51,720 --> 00:15:53,639
that's going to work but if there if you

236
00:15:53,639 --> 00:15:55,019
find if you're on an internal Network

237
00:15:55,019 --> 00:15:56,899
and you find an RDP file that's there

238
00:15:56,899 --> 00:15:58,920
this technique that I'm going to show

239
00:15:58,920 --> 00:16:00,540
you will give you the ability to replace

240
00:16:00,540 --> 00:16:03,240
theirs with yours and not interfere with

241
00:16:03,240 --> 00:16:04,560
their normal connection so it'll pass

242
00:16:04,560 --> 00:16:06,120
right through they'll still connect to

243
00:16:06,120 --> 00:16:07,380
their normal resources and we'll talk

244
00:16:07,380 --> 00:16:08,639
about how we do that with man in the

245
00:16:08,639 --> 00:16:09,660
middle

246
00:16:09,660 --> 00:16:12,660
um proxying the RDP protocol and so

247
00:16:12,660 --> 00:16:13,920
that's basically what we're going to be

248
00:16:13,920 --> 00:16:15,060
looking for this is what we're going to

249
00:16:15,060 --> 00:16:16,079
deliver

250
00:16:16,079 --> 00:16:17,459
um the cool thing is I have a bonus here

251
00:16:17,459 --> 00:16:19,560
this is a new one that's relatively new

252
00:16:19,560 --> 00:16:21,060
I'm not really sure exactly where I

253
00:16:21,060 --> 00:16:22,920
learned it from but I learned it from a

254
00:16:22,920 --> 00:16:24,240
friend who learned it from someone else

255
00:16:24,240 --> 00:16:25,740
so I don't know where the original came

256
00:16:25,740 --> 00:16:27,600
from it hasn't been talked about really

257
00:16:27,600 --> 00:16:29,339
publicly I think um Steve boros from

258
00:16:29,339 --> 00:16:31,259
Black Hills is doing a blog post on it

259
00:16:31,259 --> 00:16:32,759
this week and so you'll be able to see

260
00:16:32,759 --> 00:16:34,500
more about it but the cool thing with

261
00:16:34,500 --> 00:16:36,300
this is we can actually spoof from

262
00:16:36,300 --> 00:16:39,540
Office 365 to office 365. and so the

263
00:16:39,540 --> 00:16:41,399
reason why this is valuable is now you

264
00:16:41,399 --> 00:16:42,839
can imagine like back in the day you

265
00:16:42,839 --> 00:16:44,399
used to be able to spoof emails and it

266
00:16:44,399 --> 00:16:46,199
was this big thing and now you get dmarc

267
00:16:46,199 --> 00:16:48,120
and or you got SPF records that are set

268
00:16:48,120 --> 00:16:49,740
or dchem you know encryption

269
00:16:49,740 --> 00:16:52,139
certificates but we could bypass all of

270
00:16:52,139 --> 00:16:55,199
that by going directly to the mail

271
00:16:55,199 --> 00:16:58,079
connector for office 365. and so it's

272
00:16:58,079 --> 00:17:00,180
enabled by default for Office 365 it's

273
00:17:00,180 --> 00:17:02,160
using this thing called direct send and

274
00:17:02,160 --> 00:17:04,020
it's a way for being able to send bulk

275
00:17:04,020 --> 00:17:06,299
mail with but it bypasses everything all

276
00:17:06,299 --> 00:17:07,859
the mail gateways and security controls

277
00:17:07,859 --> 00:17:10,140
that are in place you go directly to the

278
00:17:10,140 --> 00:17:12,900
Microsoft connector and and so it's a

279
00:17:12,900 --> 00:17:14,039
smart host is what it's technically

280
00:17:14,039 --> 00:17:15,959
called and so and the reason why it

281
00:17:15,959 --> 00:17:17,640
works is because they don't want to

282
00:17:17,640 --> 00:17:18,959
Route the domain that you're sending

283
00:17:18,959 --> 00:17:21,599
email to as a Spam domain so it just

284
00:17:21,599 --> 00:17:22,740
automatically goes through I don't know

285
00:17:22,740 --> 00:17:24,419
what Microsoft's deal is but if you look

286
00:17:24,419 --> 00:17:25,679
over here on the image over in the

287
00:17:25,679 --> 00:17:27,660
middle there's a pink box that says your

288
00:17:27,660 --> 00:17:31,140
MX endpoint so it's your domain Dash Com

289
00:17:31,140 --> 00:17:34,340
or whatever TLD you have dot

290
00:17:34,340 --> 00:17:36,480
mail.protection.outlook.com the really

291
00:17:36,480 --> 00:17:38,100
Beauty behind us is there's no

292
00:17:38,100 --> 00:17:39,480
authentication you literally just

293
00:17:39,480 --> 00:17:41,460
connect to that mail connector on Port

294
00:17:41,460 --> 00:17:44,039
25 and send SMTP as you normally would

295
00:17:44,039 --> 00:17:47,460
there's only a few caveats with it um

296
00:17:47,460 --> 00:17:49,320
you you need to be able to get the MX

297
00:17:49,320 --> 00:17:50,160
record

298
00:17:50,160 --> 00:17:51,360
um this is the way that I do it I just

299
00:17:51,360 --> 00:17:53,880
use nslookup I query the MX record for

300
00:17:53,880 --> 00:17:56,160
my target domain so whoever the target

301
00:17:56,160 --> 00:17:58,980
is I Target dot comment and then I I'm

302
00:17:58,980 --> 00:18:00,960
able to connect to the SMTP server on

303
00:18:00,960 --> 00:18:05,580
Port 25 and in it's usually always the

304
00:18:05,580 --> 00:18:09,379
the name of the domain Dash the

305
00:18:09,500 --> 00:18:11,640
tld.mail.protection.outlook.com the only

306
00:18:11,640 --> 00:18:13,260
one of the only caveats is you have to

307
00:18:13,260 --> 00:18:16,260
be able to send from and to a real user

308
00:18:16,260 --> 00:18:17,460
that's on there so you want to do some

309
00:18:17,460 --> 00:18:19,380
user enumeration before you're actually

310
00:18:19,380 --> 00:18:21,720
using it for your ruse

311
00:18:21,720 --> 00:18:23,580
um and then the other thing is

312
00:18:23,580 --> 00:18:25,679
um you just you you basically have to

313
00:18:25,679 --> 00:18:27,480
know that the smart host of The Domain

314
00:18:27,480 --> 00:18:29,340
is the right host outside of that you're

315
00:18:29,340 --> 00:18:32,039
really good once you have the the

316
00:18:32,039 --> 00:18:33,240
recipient account and the one that

317
00:18:33,240 --> 00:18:34,620
you're spoofing you could just send it

318
00:18:34,620 --> 00:18:36,780
directly to it and it works on a lot of

319
00:18:36,780 --> 00:18:39,480
o365 domains I mean we've used this

320
00:18:39,480 --> 00:18:41,400
um on pretty much most of the targets

321
00:18:41,400 --> 00:18:44,039
and it goes directly into

322
00:18:44,039 --> 00:18:45,720
um the Inbox and so you're basically

323
00:18:45,720 --> 00:18:47,340
spoofing whatever you want to spoof you

324
00:18:47,340 --> 00:18:48,660
can this proof another user you could

325
00:18:48,660 --> 00:18:50,760
spoof a distribution group as long as

326
00:18:50,760 --> 00:18:52,380
that user account is enabled and it's

327
00:18:52,380 --> 00:18:53,940
not just an alias you should be good to

328
00:18:53,940 --> 00:18:56,220
go so it's just a little bonus slide and

329
00:18:56,220 --> 00:18:57,360
so let's talk about bringing our own

330
00:18:57,360 --> 00:18:58,919
server because this is probably the most

331
00:18:58,919 --> 00:19:00,000
important part right I mean we could

332
00:19:00,000 --> 00:19:01,740
send RDP files all day but if we're not

333
00:19:01,740 --> 00:19:04,320
sending them somewhere to connect to we

334
00:19:04,320 --> 00:19:06,179
need to make sure that um that we we

335
00:19:06,179 --> 00:19:07,679
nailed this part more than anything

336
00:19:07,679 --> 00:19:09,120
because this is where the code is going

337
00:19:09,120 --> 00:19:10,500
to be running right so think about

338
00:19:10,500 --> 00:19:12,539
running your own Windows server and you

339
00:19:12,539 --> 00:19:13,620
know you can put it in the cloud you

340
00:19:13,620 --> 00:19:15,000
could you could expose it if you want

341
00:19:15,000 --> 00:19:16,080
I'm going to show you how you can do it

342
00:19:16,080 --> 00:19:18,059
without exposing it but the idea is

343
00:19:18,059 --> 00:19:20,880
you're running your own RDP server

344
00:19:20,880 --> 00:19:22,799
you spin up a Windows Server you

345
00:19:22,799 --> 00:19:25,260
configure RDP and bear in mind that RDP

346
00:19:25,260 --> 00:19:26,760
file is going to auto connect to your

347
00:19:26,760 --> 00:19:28,860
server so there's some logistical issues

348
00:19:28,860 --> 00:19:30,480
that I had with researching on how to

349
00:19:30,480 --> 00:19:32,220
pass in authentication and how do I do

350
00:19:32,220 --> 00:19:34,260
it where I'm not exposing my RDP server

351
00:19:34,260 --> 00:19:35,400
to the internet because you know Russia

352
00:19:35,400 --> 00:19:37,140
and China are going to be there beating

353
00:19:37,140 --> 00:19:38,820
down your door within minutes if you

354
00:19:38,820 --> 00:19:42,000
have exposed port 3389 and so you could

355
00:19:42,000 --> 00:19:43,860
change the local Port there's a just

356
00:19:43,860 --> 00:19:45,480
quick way to do it down there at the

357
00:19:45,480 --> 00:19:47,340
bottom but the idea is that you're going

358
00:19:47,340 --> 00:19:49,080
to want to open RDP in the firewall set

359
00:19:49,080 --> 00:19:51,000
up your server set up a new user that

360
00:19:51,000 --> 00:19:53,160
has RDP permissions now bear in mind

361
00:19:53,160 --> 00:19:54,539
your malicious code is going to be

362
00:19:54,539 --> 00:19:56,400
running on your own server but what

363
00:19:56,400 --> 00:19:58,020
happens is when the when the client

364
00:19:58,020 --> 00:20:00,480
connects to the server you're actually

365
00:20:00,480 --> 00:20:02,940
able to access the hard drives and all

366
00:20:02,940 --> 00:20:05,280
the devices on the connected clients

367
00:20:05,280 --> 00:20:07,919
this is where the beauty comes in and so

368
00:20:07,919 --> 00:20:10,740
now we're looking at RDP there's lots of

369
00:20:10,740 --> 00:20:12,179
protocols with RDP that we'll talk about

370
00:20:12,179 --> 00:20:15,240
but the hard part about this was really

371
00:20:15,240 --> 00:20:17,220
on the credential loading so if you're

372
00:20:17,220 --> 00:20:19,080
familiar with DP API within Windows

373
00:20:19,080 --> 00:20:21,179
anytime you're you're storing encryption

374
00:20:21,179 --> 00:20:23,460
um your encrypted credentials it's based

375
00:20:23,460 --> 00:20:26,580
on the DP API of the computer that

376
00:20:26,580 --> 00:20:28,140
encrypted the credentials so if I

377
00:20:28,140 --> 00:20:29,580
encrypted them and then put them in an

378
00:20:29,580 --> 00:20:31,860
RDP file and saved it and then sent that

379
00:20:31,860 --> 00:20:33,780
RDP file to someone else that person

380
00:20:33,780 --> 00:20:35,460
that opens it's not able to actually

381
00:20:35,460 --> 00:20:37,260
decrypt the credentials to use them for

382
00:20:37,260 --> 00:20:38,760
the connection

383
00:20:38,760 --> 00:20:40,140
and so I was like okay what if we just

384
00:20:40,140 --> 00:20:41,880
use like a blank account which is super

385
00:20:41,880 --> 00:20:43,260
bad don't ever really think that's a

386
00:20:43,260 --> 00:20:44,520
good idea but I wanted to try because

387
00:20:44,520 --> 00:20:46,679
this is progressing through how to force

388
00:20:46,679 --> 00:20:47,880
the client to automatically connect to

389
00:20:47,880 --> 00:20:48,659
us

390
00:20:48,659 --> 00:20:49,919
um it does require a little bit more

391
00:20:49,919 --> 00:20:51,780
interactions you also get this really

392
00:20:51,780 --> 00:20:53,640
ugly yellow Banner which is always scary

393
00:20:53,640 --> 00:20:55,320
whenever somebody clicks on it you want

394
00:20:55,320 --> 00:20:58,620
blue right Windows yellow is bad blue is

395
00:20:58,620 --> 00:21:00,299
good so we need to be able to get rid of

396
00:21:00,299 --> 00:21:02,400
that yellow Banner blink account

397
00:21:02,400 --> 00:21:03,900
passwords are going to expose the server

398
00:21:03,900 --> 00:21:05,159
to the internet which means anybody can

399
00:21:05,159 --> 00:21:06,720
connect in and while we're running

400
00:21:06,720 --> 00:21:08,220
malicious code so that's not that big of

401
00:21:08,220 --> 00:21:09,480
a deal we don't want to accidentally

402
00:21:09,480 --> 00:21:11,159
hack someone outside of our scope so we

403
00:21:11,159 --> 00:21:13,080
want to make sure we stay in scope so

404
00:21:13,080 --> 00:21:15,000
it's super risky and then there's also

405
00:21:15,000 --> 00:21:16,320
the unverified banner that we're going

406
00:21:16,320 --> 00:21:18,179
to get rid of here in a second and then

407
00:21:18,179 --> 00:21:20,760
if the publisher is unknown now we have

408
00:21:20,760 --> 00:21:22,200
another issue right because it's sketch

409
00:21:22,200 --> 00:21:23,760
it says publisher unknown like you see

410
00:21:23,760 --> 00:21:24,960
that you're like I'm not clicking on

411
00:21:24,960 --> 00:21:26,640
this I'm not connecting

412
00:21:26,640 --> 00:21:28,679
um and then outbound 3389 might be also

413
00:21:28,679 --> 00:21:29,760
blocked right you're like oh well you

414
00:21:29,760 --> 00:21:31,740
know what outbound our RDP over the

415
00:21:31,740 --> 00:21:32,940
Internet we're not going to allow that

416
00:21:32,940 --> 00:21:34,200
we will never we block that at the

417
00:21:34,200 --> 00:21:35,940
firewall okay well that's great but we

418
00:21:35,940 --> 00:21:38,039
can set whatever Port we want and we can

419
00:21:38,039 --> 00:21:41,039
pre-configure the RDP file to use colon

420
00:21:41,039 --> 00:21:42,360
port and it'll just automatically

421
00:21:42,360 --> 00:21:44,400
connect over that other port instead and

422
00:21:44,400 --> 00:21:45,960
so that's kind of the the catches that

423
00:21:45,960 --> 00:21:47,640
we have and so the solutions that we

424
00:21:47,640 --> 00:21:49,380
have is nice and blue

425
00:21:49,380 --> 00:21:50,640
um the way that we do this is we're

426
00:21:50,640 --> 00:21:52,320
gonna we're gonna man in the middle the

427
00:21:52,320 --> 00:21:54,480
client so they're going to connect to

428
00:21:54,480 --> 00:21:57,600
our our proxy server our proxy server is

429
00:21:57,600 --> 00:21:59,820
going to connect to our real server the

430
00:21:59,820 --> 00:22:01,380
reason why that's really good

431
00:22:01,380 --> 00:22:03,240
is because first we could firewall off

432
00:22:03,240 --> 00:22:04,860
only our proxy to be able to connect to

433
00:22:04,860 --> 00:22:06,000
our RDP server and we don't have to

434
00:22:06,000 --> 00:22:07,919
worry about anybody connecting in the

435
00:22:07,919 --> 00:22:09,000
other thing that it really does is it

436
00:22:09,000 --> 00:22:10,320
gives you the ability to create whatever

437
00:22:10,320 --> 00:22:13,620
username you want for the RDP file it

438
00:22:13,620 --> 00:22:15,059
doesn't even matter so what I try to do

439
00:22:15,059 --> 00:22:17,340
is I try to tailor that for my target if

440
00:22:17,340 --> 00:22:18,539
it's a department that I'm targeting

441
00:22:18,539 --> 00:22:19,440
then I'm going to use the department

442
00:22:19,440 --> 00:22:21,240
name for my username you just want to

443
00:22:21,240 --> 00:22:23,700
make it look as legit as possible and

444
00:22:23,700 --> 00:22:25,440
but the other really good thing is you

445
00:22:25,440 --> 00:22:27,120
could just generate a real SSL

446
00:22:27,120 --> 00:22:28,980
certificate now there's some funkiness

447
00:22:28,980 --> 00:22:30,419
that you have to do like if you're

448
00:22:30,419 --> 00:22:31,679
wanting to use let's encrypt for

449
00:22:31,679 --> 00:22:33,240
instance you could convert the let's and

450
00:22:33,240 --> 00:22:34,400
grip

451
00:22:34,400 --> 00:22:37,740
encryption certificate to like a pem and

452
00:22:37,740 --> 00:22:39,720
then import the pem into windows and and

453
00:22:39,720 --> 00:22:41,640
use the thumbprint to sign the RDP we'll

454
00:22:41,640 --> 00:22:42,960
talk about that in a minute but we're

455
00:22:42,960 --> 00:22:44,880
going to assign these RDP files with our

456
00:22:44,880 --> 00:22:47,280
own SSL certificate that matches some

457
00:22:47,280 --> 00:22:49,140
doppelganger domain of the company that

458
00:22:49,140 --> 00:22:50,760
we're targeting and make it look nice

459
00:22:50,760 --> 00:22:51,960
and pretty and then we're going to sign

460
00:22:51,960 --> 00:22:53,460
it using a built-in tool within

461
00:22:53,460 --> 00:22:56,760
Microsoft called RDP sign how novel um

462
00:22:56,760 --> 00:22:59,400
and so we do that it's signed there's no

463
00:22:59,400 --> 00:23:00,840
Mark of the web we're sending this over

464
00:23:00,840 --> 00:23:02,460
the wire we're we're good everything was

465
00:23:02,460 --> 00:23:03,900
great it'll pass through and then when

466
00:23:03,900 --> 00:23:05,039
they open it it's just going to look

467
00:23:05,039 --> 00:23:06,720
like that nice and blue they click

468
00:23:06,720 --> 00:23:08,340
connect and it's game over

469
00:23:08,340 --> 00:23:09,840
and so the other really cool thing with

470
00:23:09,840 --> 00:23:12,299
this is we can set our proxy server to

471
00:23:12,299 --> 00:23:13,559
listen on whatever Port you want to

472
00:23:13,559 --> 00:23:15,179
listen on so if you wanted to set it for

473
00:23:15,179 --> 00:23:18,240
443 or 480 you could certainly do that

474
00:23:18,240 --> 00:23:20,640
and you're basically connecting RDP over

475
00:23:20,640 --> 00:23:22,620
those ports but I mean who cares it's

476
00:23:22,620 --> 00:23:25,320
just a client connecting into you anyway

477
00:23:25,320 --> 00:23:26,880
and so that's the way that you can do

478
00:23:26,880 --> 00:23:28,200
let's encrypt that do this in the slide

479
00:23:28,200 --> 00:23:29,460
deck in case you wanted to go back and

480
00:23:29,460 --> 00:23:30,720
reference the slides later because it

481
00:23:30,720 --> 00:23:32,100
was a little tricky to kind of convert

482
00:23:32,100 --> 00:23:33,539
this stuff especially on a Windows

483
00:23:33,539 --> 00:23:36,059
machine you had to install Coco and

484
00:23:36,059 --> 00:23:38,520
openssl in order to get the python3 sir

485
00:23:38,520 --> 00:23:41,100
bot to actually work properly once you

486
00:23:41,100 --> 00:23:42,240
do that you just generate your

487
00:23:42,240 --> 00:23:44,279
doppelganger domain and then you could

488
00:23:44,279 --> 00:23:46,500
actually use openssl to convert that

489
00:23:46,500 --> 00:23:48,900
certificate and that key into a p um a

490
00:23:48,900 --> 00:23:51,299
pfx which Imports directly into the

491
00:23:51,299 --> 00:23:52,799
search store within Windows once it's

492
00:23:52,799 --> 00:23:54,539
imported into the search store it'll

493
00:23:54,539 --> 00:23:55,500
provide you with a nice little

494
00:23:55,500 --> 00:23:57,419
thumbprint you take that thumb print ID

495
00:23:57,419 --> 00:23:59,580
and you pass it to RDP sign and point it

496
00:23:59,580 --> 00:24:01,320
at your RDP file and it signs it and

497
00:24:01,320 --> 00:24:03,360
everything is super great there's

498
00:24:03,360 --> 00:24:05,039
probably a much easier way to do this

499
00:24:05,039 --> 00:24:06,480
this is just me kind of hacking the

500
00:24:06,480 --> 00:24:07,679
solution through because I have no clue

501
00:24:07,679 --> 00:24:08,760
what I'm talking about with this kind of

502
00:24:08,760 --> 00:24:10,980
stuff I just have to figure it out as I

503
00:24:10,980 --> 00:24:12,539
go so there's probably a better way and

504
00:24:12,539 --> 00:24:13,919
if you do know you know feel free to

505
00:24:13,919 --> 00:24:15,960
reach out and I will update this and I'd

506
00:24:15,960 --> 00:24:18,240
love to find a better way to do it

507
00:24:18,240 --> 00:24:20,340
and so um so the proxies let's talk

508
00:24:20,340 --> 00:24:22,320
about the proxy the proxy is really

509
00:24:22,320 --> 00:24:24,059
interesting because in order to proxy

510
00:24:24,059 --> 00:24:26,220
RDP traffic you have to do all kinds of

511
00:24:26,220 --> 00:24:28,260
protocols there's there's fast protocols

512
00:24:28,260 --> 00:24:29,640
and short protocols and there's these

513
00:24:29,640 --> 00:24:31,320
fast paths and low pass and encryption

514
00:24:31,320 --> 00:24:33,000
protocols and communication protocols

515
00:24:33,000 --> 00:24:35,460
there's lots of binding for the the GUI

516
00:24:35,460 --> 00:24:37,200
so there's lots of protocol binding um

517
00:24:37,200 --> 00:24:38,940
to be able to get the user interface

518
00:24:38,940 --> 00:24:40,559
from the Windows server to pass through

519
00:24:40,559 --> 00:24:43,080
your proxy into the client so they can

520
00:24:43,080 --> 00:24:45,720
render properly there's all kinds of

521
00:24:45,720 --> 00:24:48,179
specifications and this Rabbit Hole goes

522
00:24:48,179 --> 00:24:51,360
really deep so I was I was looking I

523
00:24:51,360 --> 00:24:53,580
started looking at like free x free RDP

524
00:24:53,580 --> 00:24:55,860
I started looking at x-free RDP all

525
00:24:55,860 --> 00:24:57,419
these different protocols or these

526
00:24:57,419 --> 00:24:59,039
software packages that were open source

527
00:24:59,039 --> 00:25:00,539
that kind of already implemented it so I

528
00:25:00,539 --> 00:25:03,480
can try to avoid this part of it

529
00:25:03,480 --> 00:25:05,940
um and then I started I came across a

530
00:25:05,940 --> 00:25:09,539
tool called Pi RDP now Pi RDP

531
00:25:09,539 --> 00:25:11,400
implemented all of the protocols so it's

532
00:25:11,400 --> 00:25:13,320
the TCP the segmentation all of the

533
00:25:13,320 --> 00:25:14,880
encryption the security stack everything

534
00:25:14,880 --> 00:25:16,980
they did all of it in Python it's

535
00:25:16,980 --> 00:25:18,059
already put together you don't have to

536
00:25:18,059 --> 00:25:19,380
do any thing you just tie it together

537
00:25:19,380 --> 00:25:21,960
and they put it in a really cool tool

538
00:25:21,960 --> 00:25:24,779
so they built all of this and the hard

539
00:25:24,779 --> 00:25:26,100
part about this is you have to remember

540
00:25:26,100 --> 00:25:28,320
we're proxying the redirectors for the

541
00:25:28,320 --> 00:25:30,179
file access for the drives for the audio

542
00:25:30,179 --> 00:25:32,700
devices for you know for the USB devices

543
00:25:32,700 --> 00:25:34,919
there's lots of communications between

544
00:25:34,919 --> 00:25:36,480
the client and the server that we have

545
00:25:36,480 --> 00:25:37,919
to account for if we're going to

546
00:25:37,919 --> 00:25:41,700
leverage this in a ruse uh and so Pi RDP

547
00:25:41,700 --> 00:25:43,919
is amazing it wasn't built for this it

548
00:25:43,919 --> 00:25:45,419
was actually built for honey pots like

549
00:25:45,419 --> 00:25:48,539
an RDP honey pot but Pi RDP actually

550
00:25:48,539 --> 00:25:50,400
monitors the clipboard content for you

551
00:25:50,400 --> 00:25:51,659
so I don't have to do it on the server I

552
00:25:51,659 --> 00:25:52,980
could do it on the server but it

553
00:25:52,980 --> 00:25:54,480
actually implemented it in the in the

554
00:25:54,480 --> 00:25:57,299
python Library already it does actually

555
00:25:57,299 --> 00:26:00,779
hijack any of the host host clipboards

556
00:26:00,779 --> 00:26:02,340
so in the event where there is something

557
00:26:02,340 --> 00:26:04,080
on the clipboard you could either you

558
00:26:04,080 --> 00:26:05,820
could write to that clipboard of your

559
00:26:05,820 --> 00:26:07,260
target or you could just monitor it and

560
00:26:07,260 --> 00:26:10,020
then copy off and save stuff it'll has

561
00:26:10,020 --> 00:26:11,880
built-in crawler this is super cool I

562
00:26:11,880 --> 00:26:13,559
have a demo at the end of it

563
00:26:13,559 --> 00:26:16,140
um but it will actually enumerate all of

564
00:26:16,140 --> 00:26:18,900
the files and all of the drives to a

565
00:26:18,900 --> 00:26:20,279
list that you're looking for so you

566
00:26:20,279 --> 00:26:22,500
could set up a list pass it to the crawl

567
00:26:22,500 --> 00:26:23,880
and it'll look for all those extensions

568
00:26:23,880 --> 00:26:28,080
so like dot configs or AWS or Azure if

569
00:26:28,080 --> 00:26:29,400
you're looking for like some sort of um

570
00:26:29,400 --> 00:26:30,960
Cloud credentials on the on the machine

571
00:26:30,960 --> 00:26:32,880
it'll enumerate all of them and any of

572
00:26:32,880 --> 00:26:34,200
those files that it finds it'll download

573
00:26:34,200 --> 00:26:36,120
them directly to the proxy server so you

574
00:26:36,120 --> 00:26:37,140
don't have to worry about writing it

575
00:26:37,140 --> 00:26:38,820
I've wrote it all in C sharp and did it

576
00:26:38,820 --> 00:26:40,440
on the server but this had it in there

577
00:26:40,440 --> 00:26:42,539
so I have kind of built them out

578
00:26:42,539 --> 00:26:45,120
um it does actually Implement most of

579
00:26:45,120 --> 00:26:46,500
the specifications but one of the big

580
00:26:46,500 --> 00:26:48,000
things is all of the GUI bindings it's

581
00:26:48,000 --> 00:26:50,220
already there so we're good on that side

582
00:26:50,220 --> 00:26:51,900
um the cool thing with priority P2 is

583
00:26:51,900 --> 00:26:53,700
you can actually Replay that entire

584
00:26:53,700 --> 00:26:55,380
session so if you wanted to replay the

585
00:26:55,380 --> 00:26:57,299
user interface aspect of it it has that

586
00:26:57,299 --> 00:26:59,760
built in you could pass in the the

587
00:26:59,760 --> 00:27:02,700
certificate and the key in and listening

588
00:27:02,700 --> 00:27:04,320
port and it'll basically just listen on

589
00:27:04,320 --> 00:27:05,460
that Port so if you want to listen on

590
00:27:05,460 --> 00:27:08,100
443 pass in your your certificate and

591
00:27:08,100 --> 00:27:10,260
your key it'll listen on that that way

592
00:27:10,260 --> 00:27:13,080
everything looks good and uh yeah and

593
00:27:13,080 --> 00:27:14,640
the other the beauty part in this part

594
00:27:14,640 --> 00:27:17,159
is it actually solved for my credential

595
00:27:17,159 --> 00:27:18,899
issues so having to log into the server

596
00:27:18,899 --> 00:27:21,000
without exposing the server meant that I

597
00:27:21,000 --> 00:27:23,039
could pass in the command line the real

598
00:27:23,039 --> 00:27:25,980
RDP server the real username and the

599
00:27:25,980 --> 00:27:28,380
real password and the proxy will connect

600
00:27:28,380 --> 00:27:30,720
to my rogue server and now it doesn't

601
00:27:30,720 --> 00:27:32,159
even matter whenever they click connect

602
00:27:32,159 --> 00:27:33,899
on the RDP file it's just automatically

603
00:27:33,899 --> 00:27:35,399
going to log them in and map all the

604
00:27:35,399 --> 00:27:37,260
drives and take everything that it needs

605
00:27:37,260 --> 00:27:39,600
to take so it's super good and then the

606
00:27:39,600 --> 00:27:40,679
cool thing with this is you're thinking

607
00:27:40,679 --> 00:27:42,720
like okay well my client's going to have

608
00:27:42,720 --> 00:27:44,220
some sort of EDR maybe they have the

609
00:27:44,220 --> 00:27:46,140
latest and greatest Secret Sauce stuff

610
00:27:46,140 --> 00:27:48,840
right we're running server-side code so

611
00:27:48,840 --> 00:27:50,399
that server-side code is not running on

612
00:27:50,399 --> 00:27:52,020
the actual Target it's interacting with

613
00:27:52,020 --> 00:27:53,760
the devices of the target but it's not

614
00:27:53,760 --> 00:27:55,260
actually running in a memory space on

615
00:27:55,260 --> 00:27:56,159
the target

616
00:27:56,159 --> 00:27:58,740
which means no EDR and so we get to

617
00:27:58,740 --> 00:28:01,320
bypass kind of all of that and so when

618
00:28:01,320 --> 00:28:02,220
you're when you're thinking about this

619
00:28:02,220 --> 00:28:03,840
we need to be able to run some sort of

620
00:28:03,840 --> 00:28:06,840
payloads on these machines right so our

621
00:28:06,840 --> 00:28:09,419
malware that's running on our server is

622
00:28:09,419 --> 00:28:11,220
running at login so the way that I

623
00:28:11,220 --> 00:28:12,539
usually do it is I just throw it in the

624
00:28:12,539 --> 00:28:14,700
startup but you can set up a GPO policy

625
00:28:14,700 --> 00:28:17,100
that kicks off a file you can do

626
00:28:17,100 --> 00:28:18,539
whatever you want but once that session

627
00:28:18,539 --> 00:28:20,940
is established with a server it's game

628
00:28:20,940 --> 00:28:22,799
over it literally will immediately start

629
00:28:22,799 --> 00:28:25,200
attacking it and so what I like to do is

630
00:28:25,200 --> 00:28:27,720
I like the plant like an lnk file on the

631
00:28:27,720 --> 00:28:28,620
desktop

632
00:28:28,620 --> 00:28:30,779
I'll do like an lnk with like a

633
00:28:30,779 --> 00:28:33,299
Spaceport space bar shortcut right so

634
00:28:33,299 --> 00:28:34,559
every time they hit spacebar it's going

635
00:28:34,559 --> 00:28:36,360
to launch my lnk and I'm going to plant

636
00:28:36,360 --> 00:28:37,919
my binary somewhere so yeah there's a

637
00:28:37,919 --> 00:28:40,020
lot of payloads that get executed or you

638
00:28:40,020 --> 00:28:41,220
could execute it and then delete the

639
00:28:41,220 --> 00:28:42,539
payload immediately so it doesn't run

640
00:28:42,539 --> 00:28:43,500
again

641
00:28:43,500 --> 00:28:44,940
um and you could do some side loading so

642
00:28:44,940 --> 00:28:46,200
if you're familiar with any of the dll

643
00:28:46,200 --> 00:28:47,899
side loading stuff you could drop like

644
00:28:47,899 --> 00:28:49,980
dbghelp.dll in the Microsoft teams

645
00:28:49,980 --> 00:28:51,840
folder so that whenever Microsoft team

646
00:28:51,840 --> 00:28:53,520
starts up you have your persistence and

647
00:28:53,520 --> 00:28:54,779
it's in user land so you don't have to

648
00:28:54,779 --> 00:28:56,039
worry about having elevated permissions

649
00:28:56,039 --> 00:28:57,960
you could do some of the app domain

650
00:28:57,960 --> 00:28:58,980
injections if you're familiar with

651
00:28:58,980 --> 00:29:01,320
like.net where you can update the.net

652
00:29:01,320 --> 00:29:03,120
configuration file plant your dll or

653
00:29:03,120 --> 00:29:05,100
plant your executable and basically

654
00:29:05,100 --> 00:29:08,520
hijack the appdomain for net all kinds

655
00:29:08,520 --> 00:29:10,500
of cool uh ways you can actually execute

656
00:29:10,500 --> 00:29:13,020
code on Startup for persistence within

657
00:29:13,020 --> 00:29:14,159
user land and then the other thing that

658
00:29:14,159 --> 00:29:15,179
I want to do is I want to be able to

659
00:29:15,179 --> 00:29:16,919
look for any of the sensitive files I'm

660
00:29:16,919 --> 00:29:19,320
looking for credentials I'm looking for

661
00:29:19,320 --> 00:29:21,360
um you know gpp stuff on the network

662
00:29:21,360 --> 00:29:23,399
file shares if they're mapped and we

663
00:29:23,399 --> 00:29:24,480
want to be able to do all that because

664
00:29:24,480 --> 00:29:26,220
when we compromise the target machine

665
00:29:26,220 --> 00:29:27,480
we're going to use that Target machine

666
00:29:27,480 --> 00:29:30,000
to Pivot to the network file shares and

667
00:29:30,000 --> 00:29:32,399
search those for stuff as well and then

668
00:29:32,399 --> 00:29:33,659
obviously because it's not running on

669
00:29:33,659 --> 00:29:36,899
the client lots of cool detections and

670
00:29:36,899 --> 00:29:39,539
so uh so server side payload so I have a

671
00:29:39,539 --> 00:29:40,799
little section on this even though Pi

672
00:29:40,799 --> 00:29:42,600
RDP kind of happened to kind of

673
00:29:42,600 --> 00:29:44,399
implement a lot of this

674
00:29:44,399 --> 00:29:45,779
um so the client interaction so I did

675
00:29:45,779 --> 00:29:48,299
most of this stuff in C sharp and um and

676
00:29:48,299 --> 00:29:49,440
the idea is there's a library called

677
00:29:49,440 --> 00:29:51,899
cassia it's really really cool and it

678
00:29:51,899 --> 00:29:54,120
gives you the ability to interact with

679
00:29:54,120 --> 00:29:56,399
the the terminal service client that's

680
00:29:56,399 --> 00:29:57,720
connected to your server so it's

681
00:29:57,720 --> 00:29:59,220
basically a server side code a little

682
00:29:59,220 --> 00:30:00,539
tricky to write because you're having to

683
00:30:00,539 --> 00:30:02,399
like install Visual Studio on your RDP

684
00:30:02,399 --> 00:30:04,380
server and then debug it step through

685
00:30:04,380 --> 00:30:05,700
the debugging sessions and stuff that

686
00:30:05,700 --> 00:30:07,679
way but in a nutshell if you remember

687
00:30:07,679 --> 00:30:09,059
anything this is all you really have to

688
00:30:09,059 --> 00:30:11,820
remember in order to do it if you if a

689
00:30:11,820 --> 00:30:14,159
client connects to your terminal server

690
00:30:14,159 --> 00:30:15,960
and you have code that accesses

691
00:30:15,960 --> 00:30:19,320
backslash backslash tsclient backslash C

692
00:30:19,320 --> 00:30:22,080
drive or C then it's going to interact

693
00:30:22,080 --> 00:30:23,700
with the connected clients machine

694
00:30:23,700 --> 00:30:25,500
rather than the actual servers machine

695
00:30:25,500 --> 00:30:27,000
and this is where it gets really fun

696
00:30:27,000 --> 00:30:28,860
because now we can start leveraging this

697
00:30:28,860 --> 00:30:30,360
in all kinds of different cool unique

698
00:30:30,360 --> 00:30:33,000
ways we can generate the user folders

699
00:30:33,000 --> 00:30:35,520
and start looking for which users are

700
00:30:35,520 --> 00:30:36,779
there and their startup folders and

701
00:30:36,779 --> 00:30:39,360
plant binaries for startup and then

702
00:30:39,360 --> 00:30:40,440
there's all kinds of other stuff too

703
00:30:40,440 --> 00:30:43,020
like I've tested with RDP Gateway RDP

704
00:30:43,020 --> 00:30:44,580
Gateway works but it doesn't work with

705
00:30:44,580 --> 00:30:46,020
pi RDP so if you're familiar with like

706
00:30:46,020 --> 00:30:48,600
Rd um like the RDP gateways

707
00:30:48,600 --> 00:30:50,940
um we're looking for something for like

708
00:30:50,940 --> 00:30:53,520
a low level privileged escalation or uh

709
00:30:53,520 --> 00:30:56,159
code execution so I have one that I'll

710
00:30:56,159 --> 00:30:57,840
talk about here in a second but we're

711
00:30:57,840 --> 00:30:59,460
looking for ways to execute code without

712
00:30:59,460 --> 00:31:00,659
having to wait for the computer to

713
00:31:00,659 --> 00:31:02,580
restart right now it's not that big of a

714
00:31:02,580 --> 00:31:03,600
deal because if you're on like a red

715
00:31:03,600 --> 00:31:05,039
team and you're using this then they're

716
00:31:05,039 --> 00:31:06,179
going to eventually restart the machine

717
00:31:06,179 --> 00:31:08,220
anyway but with that waiting game is

718
00:31:08,220 --> 00:31:09,659
where we get burned because if we're on

719
00:31:09,659 --> 00:31:11,820
a one month red team engagement and we

720
00:31:11,820 --> 00:31:12,899
have to wait two weeks for them to

721
00:31:12,899 --> 00:31:14,460
restart the computer well then we got a

722
00:31:14,460 --> 00:31:16,860
problem and so um

723
00:31:16,860 --> 00:31:19,320
and then anything from that mapped VM

724
00:31:19,320 --> 00:31:20,519
host like I was mentioning earlier if

725
00:31:20,519 --> 00:31:22,019
you have a mapped drive that's shared

726
00:31:22,019 --> 00:31:23,159
with your virtual machine and they're

727
00:31:23,159 --> 00:31:24,779
running that RDP file from a virtual

728
00:31:24,779 --> 00:31:27,000
machine it's game over it's a VM escape

729
00:31:27,000 --> 00:31:29,580
on your client computer uh so we're good

730
00:31:29,580 --> 00:31:30,480
there

731
00:31:30,480 --> 00:31:31,860
and so this is just some of the code I

732
00:31:31,860 --> 00:31:33,120
threw this in there just so you can kind

733
00:31:33,120 --> 00:31:34,500
of have it in case you wanted to

734
00:31:34,500 --> 00:31:35,519
interact with it and play with some

735
00:31:35,519 --> 00:31:37,320
c-sharp I'd just throw this in there um

736
00:31:37,320 --> 00:31:38,640
I have some code that I haven't released

737
00:31:38,640 --> 00:31:41,279
yet just for other reasons uh but yeah

738
00:31:41,279 --> 00:31:43,200
it's pretty cool it gives you some some

739
00:31:43,200 --> 00:31:45,120
deep information about the IP addresses

740
00:31:45,120 --> 00:31:46,320
it'll give you some of the client

741
00:31:46,320 --> 00:31:48,200
information the windows station name

742
00:31:48,200 --> 00:31:50,840
it'll give you the username of the

743
00:31:50,840 --> 00:31:52,799
targets machine so they're a local

744
00:31:52,799 --> 00:31:54,360
machine that they're connecting from so

745
00:31:54,360 --> 00:31:55,860
you know kind of who's there and you can

746
00:31:55,860 --> 00:31:57,179
get the display information and

747
00:31:57,179 --> 00:31:58,860
resolution and all that you can get

748
00:31:58,860 --> 00:32:00,360
other stuff like the printers and and

749
00:32:00,360 --> 00:32:02,100
whatnot if you could uh do that and

750
00:32:02,100 --> 00:32:03,899
enumerate those so there's a lot of

751
00:32:03,899 --> 00:32:05,399
valuable stuff that you can get kind of

752
00:32:05,399 --> 00:32:08,519
from from that uh that Library super

753
00:32:08,519 --> 00:32:09,720
powerful

754
00:32:09,720 --> 00:32:12,360
and so this is our talk path so on the

755
00:32:12,360 --> 00:32:14,100
red teamer over here on the left I'm

756
00:32:14,100 --> 00:32:16,620
going to send my RDP Vish to my victims

757
00:32:16,620 --> 00:32:18,960
workstation we're going to execute

758
00:32:18,960 --> 00:32:19,860
they're going to they're going to

759
00:32:19,860 --> 00:32:21,840
execute that RDP file I'm going to be

760
00:32:21,840 --> 00:32:23,039
able to access the mounted Network

761
00:32:23,039 --> 00:32:26,039
shares using the TS client um server uh

762
00:32:26,039 --> 00:32:28,740
it's also going to connect them directly

763
00:32:28,740 --> 00:32:32,340
to the pi RDP session the pi RDP proxy

764
00:32:32,340 --> 00:32:34,019
is going to connect to our Rogue RDP

765
00:32:34,019 --> 00:32:35,940
server and then we're going to plant a

766
00:32:35,940 --> 00:32:38,460
binary back on that workstation so that

767
00:32:38,460 --> 00:32:40,980
we can get C2 and then just imagine our

768
00:32:40,980 --> 00:32:42,659
Command and control system kind of

769
00:32:42,659 --> 00:32:44,220
working and that's kind of the way that

770
00:32:44,220 --> 00:32:46,679
we're that's that's the attack

771
00:32:46,679 --> 00:32:48,360
so hopefully this is going to work let

772
00:32:48,360 --> 00:32:49,559
me see um

773
00:32:49,559 --> 00:32:51,600
if I can figure out how to share this

774
00:32:51,600 --> 00:32:53,279
with the

775
00:32:53,279 --> 00:32:55,140
this tool here

776
00:32:55,140 --> 00:32:57,240
you want to see if I can get this demo I

777
00:32:57,240 --> 00:32:58,200
don't know if it's going to work but

778
00:32:58,200 --> 00:33:00,440
we'll

779
00:33:10,860 --> 00:33:12,860
um

780
00:33:19,919 --> 00:33:22,080
that's not the

781
00:33:22,080 --> 00:33:25,080
software

782
00:33:50,539 --> 00:33:54,320
that's all the best options

783
00:33:54,960 --> 00:33:57,960
foreign

784
00:34:25,739 --> 00:34:29,239
that's why we start a little bit early

785
00:34:37,560 --> 00:34:40,639
yeah are they working

786
00:34:59,400 --> 00:35:00,859
something

787
00:35:00,859 --> 00:35:04,339
demo ain't gonna work

788
00:35:06,119 --> 00:35:08,160
yeah I know these I need some windows

789
00:35:08,160 --> 00:35:12,200
help actually I don't know um so

790
00:35:22,579 --> 00:35:25,260
we'll see if that'll work where's the

791
00:35:25,260 --> 00:35:27,560
folder

792
00:35:37,619 --> 00:35:39,660
nope

793
00:35:39,660 --> 00:35:42,799
okay no big deal

794
00:35:49,440 --> 00:35:51,960
okay well that ain't gonna work so it

795
00:35:51,960 --> 00:35:53,400
was a demo but there you have some

796
00:35:53,400 --> 00:35:55,079
recording software that's not letting me

797
00:35:55,079 --> 00:35:56,520
share the demo I did pre-record it but

798
00:35:56,520 --> 00:35:58,440
this is why I bring my own um laptop

799
00:35:58,440 --> 00:36:00,180
normally but

800
00:36:00,180 --> 00:36:01,740
um so the demo basically was going to

801
00:36:01,740 --> 00:36:03,240
walk through all of that um I'll tell

802
00:36:03,240 --> 00:36:05,540
you what it does so the the concept is

803
00:36:05,540 --> 00:36:08,460
once that RDP file gets executed it

804
00:36:08,460 --> 00:36:10,500
connects to the the proxy server and the

805
00:36:10,500 --> 00:36:12,839
proxy server is going to connect

806
00:36:12,839 --> 00:36:16,079
to the Rogue RDP server once it does

807
00:36:16,079 --> 00:36:17,640
that the binary planting actually

808
00:36:17,640 --> 00:36:19,619
creates an lnk file on the desktop with

809
00:36:19,619 --> 00:36:21,480
the spacebar and then writes another

810
00:36:21,480 --> 00:36:24,599
payload to the startup folder just for a

811
00:36:24,599 --> 00:36:27,480
sec of persistence once that machine so

812
00:36:27,480 --> 00:36:29,220
the interesting thing with RDP files

813
00:36:29,220 --> 00:36:32,280
writing the file to the lnk on the

814
00:36:32,280 --> 00:36:34,020
desktop is that the shortcut doesn't

815
00:36:34,020 --> 00:36:36,060
actually take effect until the computer

816
00:36:36,060 --> 00:36:38,400
restarts again this is with the

817
00:36:38,400 --> 00:36:39,900
exception of unless you have hyper-v

818
00:36:39,900 --> 00:36:41,339
installed if hyper-v this is an

819
00:36:41,339 --> 00:36:43,560
interesting little excerpt on executing

820
00:36:43,560 --> 00:36:46,140
code on the endpoint Target without

821
00:36:46,140 --> 00:36:47,640
having to worry about restarting the

822
00:36:47,640 --> 00:36:51,599
machine hyper-v actually will create a

823
00:36:51,599 --> 00:36:54,720
process that runs if you print to the

824
00:36:54,720 --> 00:36:56,460
machine so think about from the

825
00:36:56,460 --> 00:36:58,140
computer's perspective you have hyper-v

826
00:36:58,140 --> 00:37:00,359
installed and you're wanting to print

827
00:37:00,359 --> 00:37:03,660
within a hyper-v environment it runs a

828
00:37:03,660 --> 00:37:05,940
program called wfs.exe within the

829
00:37:05,940 --> 00:37:07,440
hyper-v folder

830
00:37:07,440 --> 00:37:09,119
remember that the printers are actually

831
00:37:09,119 --> 00:37:11,760
forwarded to the Rogue server so what we

832
00:37:11,760 --> 00:37:14,520
do is we create a symbolic link we write

833
00:37:14,520 --> 00:37:19,260
the file to the wfs.exe in hyper-v with

834
00:37:19,260 --> 00:37:21,480
our payload this is our our beacan or C2

835
00:37:21,480 --> 00:37:23,640
or whatever it is and and then what we

836
00:37:23,640 --> 00:37:26,640
do is we create a print job on the local

837
00:37:26,640 --> 00:37:28,200
printer that's being shared with our

838
00:37:28,200 --> 00:37:30,480
server and when that happens that print

839
00:37:30,480 --> 00:37:32,579
job in hyper-v actually kicks off our

840
00:37:32,579 --> 00:37:34,260
Beacon and we get remote code execution

841
00:37:34,260 --> 00:37:36,599
without having to worry about a machine

842
00:37:36,599 --> 00:37:39,420
restarting and so it's super valuable it

843
00:37:39,420 --> 00:37:40,500
gives us some really cool stuff but

844
00:37:40,500 --> 00:37:41,880
we're looking for new ways to do that as

845
00:37:41,880 --> 00:37:44,520
well there's probably other audio or USB

846
00:37:44,520 --> 00:37:47,280
camera or certain models of laptops that

847
00:37:47,280 --> 00:37:48,540
will give us the ability to execute

848
00:37:48,540 --> 00:37:50,880
stuff but the the goal is

849
00:37:50,880 --> 00:37:53,099
we don't want to have to wait for the

850
00:37:53,099 --> 00:37:54,960
computer to restart so once that Rogue

851
00:37:54,960 --> 00:37:56,579
RDP server is interacting with our

852
00:37:56,579 --> 00:37:58,740
victim we want that victim machine to

853
00:37:58,740 --> 00:38:00,180
run our Beacon immediately so we can

854
00:38:00,180 --> 00:38:02,220
have our c2's Channel established and

855
00:38:02,220 --> 00:38:03,660
that's pretty much the nuts and bolts of

856
00:38:03,660 --> 00:38:05,400
the demo um there was some other cool

857
00:38:05,400 --> 00:38:06,420
stuff where I was going to show you the

858
00:38:06,420 --> 00:38:08,880
clipboard and then I had a in the demo I

859
00:38:08,880 --> 00:38:11,640
actually had a mounted USB drive that

860
00:38:11,640 --> 00:38:13,740
was in the host computer and so what

861
00:38:13,740 --> 00:38:15,599
happened was I was able to look for a

862
00:38:15,599 --> 00:38:17,700
specific file extension on that USB

863
00:38:17,700 --> 00:38:19,619
drive and actually X fill it off across

864
00:38:19,619 --> 00:38:20,760
the network without even worrying about

865
00:38:20,760 --> 00:38:21,900
it that could have been anything it

866
00:38:21,900 --> 00:38:23,099
could have been a credential file it was

867
00:38:23,099 --> 00:38:25,140
just a demo file but just to kind of

868
00:38:25,140 --> 00:38:27,119
show the impact of this but um yeah so

869
00:38:27,119 --> 00:38:29,339
that's RDP in a nutshell

870
00:38:29,339 --> 00:38:31,800
um and so some closing thoughts um

871
00:38:31,800 --> 00:38:34,200
because we're getting short now but

872
00:38:34,200 --> 00:38:37,560
um so the remediations for this are that

873
00:38:37,560 --> 00:38:40,200
you want to really set a gpp or a group

874
00:38:40,200 --> 00:38:43,500
policy setting for uh the remote desktop

875
00:38:43,500 --> 00:38:45,660
session host because you don't want that

876
00:38:45,660 --> 00:38:47,880
host to be able to share their local

877
00:38:47,880 --> 00:38:51,060
drives with the external connection

878
00:38:51,060 --> 00:38:52,680
right you want to make sure that that's

879
00:38:52,680 --> 00:38:54,180
locked down and so there's a lot of

880
00:38:54,180 --> 00:38:56,339
device and resource redirection that you

881
00:38:56,339 --> 00:38:57,900
could disable like in the video in the

882
00:38:57,900 --> 00:38:59,880
screenshot right there so there's

883
00:38:59,880 --> 00:39:01,740
everything from USBS to network file

884
00:39:01,740 --> 00:39:03,300
shares to all of that where you could

885
00:39:03,300 --> 00:39:04,920
actually restrict that from being shared

886
00:39:04,920 --> 00:39:06,720
out this is the best way to do it but

887
00:39:06,720 --> 00:39:08,040
you have to do it in a policy that's

888
00:39:08,040 --> 00:39:09,119
going to spread across the network

889
00:39:09,119 --> 00:39:11,520
otherwise if nobody's has this enabled

890
00:39:11,520 --> 00:39:12,900
then they're they're prone to be a

891
00:39:12,900 --> 00:39:15,420
victim you can block 33.89 but you

892
00:39:15,420 --> 00:39:16,859
notice that it's still only going to

893
00:39:16,859 --> 00:39:18,240
make it more difficult just routing

894
00:39:18,240 --> 00:39:20,400
around 33.89 and using another Port but

895
00:39:20,400 --> 00:39:22,079
it's not a bad idea to block outbound

896
00:39:22,079 --> 00:39:25,500
3389 and so the other interesting thing

897
00:39:25,500 --> 00:39:26,880
is um so if you're familiar with like

898
00:39:26,880 --> 00:39:31,140
com objects so com gives a um an object

899
00:39:31,140 --> 00:39:34,680
interface to remote desktop sessions so

900
00:39:34,680 --> 00:39:36,300
I obviously I created this initial

901
00:39:36,300 --> 00:39:37,859
access technique in order to get around

902
00:39:37,859 --> 00:39:39,540
using macros because if you didn't know

903
00:39:39,540 --> 00:39:41,339
macros are dead or they're going to be

904
00:39:41,339 --> 00:39:43,500
dead here in very short time so

905
00:39:43,500 --> 00:39:45,720
Microsoft finally decided to say that

906
00:39:45,720 --> 00:39:47,940
macros downloaded from the internet are

907
00:39:47,940 --> 00:39:49,740
bad right like we should have known that

908
00:39:49,740 --> 00:39:51,660
but they're bad now if you didn't know

909
00:39:51,660 --> 00:39:52,740
so they're going to be disabled by

910
00:39:52,740 --> 00:39:53,640
default you're not going to be able to

911
00:39:53,640 --> 00:39:56,220
run macros and so this came out of that

912
00:39:56,220 --> 00:39:58,320
but in the event where you still found a

913
00:39:58,320 --> 00:40:00,660
way to get a Word document or something

914
00:40:00,660 --> 00:40:03,240
with a macro that's bad and and into the

915
00:40:03,240 --> 00:40:05,520
the targets Network you could actually

916
00:40:05,520 --> 00:40:07,980
use the macro to create a com object for

917
00:40:07,980 --> 00:40:10,140
RDP so you could do all of this from

918
00:40:10,140 --> 00:40:11,640
like a word doc without actually having

919
00:40:11,640 --> 00:40:13,619
to send an RDP file now obviously the

920
00:40:13,619 --> 00:40:15,240
whole idea was to send an RDP file

921
00:40:15,240 --> 00:40:16,800
because it's not being blocked but in

922
00:40:16,800 --> 00:40:18,060
the event where you wanted to use a com

923
00:40:18,060 --> 00:40:19,740
object or use something like that for

924
00:40:19,740 --> 00:40:22,380
persistence or for executing code you

925
00:40:22,380 --> 00:40:24,420
can instantiate the comma object you can

926
00:40:24,420 --> 00:40:25,740
even set it where it's invisible where

927
00:40:25,740 --> 00:40:27,780
it's not even going to pop open the the

928
00:40:27,780 --> 00:40:29,940
um the GUI interface for Microsoft

929
00:40:29,940 --> 00:40:31,260
terminal services

930
00:40:31,260 --> 00:40:33,060
and so the idea behind that is it's

931
00:40:33,060 --> 00:40:34,319
going to do the exact same stuff it's

932
00:40:34,319 --> 00:40:35,940
going to share the network it's going to

933
00:40:35,940 --> 00:40:37,500
do everything you would normally do just

934
00:40:37,500 --> 00:40:39,119
run in the background and you know comma

935
00:40:39,119 --> 00:40:40,619
is calm so there's some really cool

936
00:40:40,619 --> 00:40:42,240
stuff you could do with com objects and

937
00:40:42,240 --> 00:40:43,319
so yeah that's what I would say watch

938
00:40:43,319 --> 00:40:45,060
out for so that's pretty much everything

939
00:40:45,060 --> 00:40:46,319
that I had I had a demo but obviously

940
00:40:46,319 --> 00:40:48,240
the demo shortened this so um but yeah I

941
00:40:48,240 --> 00:40:49,680
have some time I guess for questions if

942
00:40:49,680 --> 00:40:53,299
anybody has any questions

943
00:40:55,200 --> 00:40:56,760
is this running through a perimeter

944
00:40:56,760 --> 00:40:58,940
Network

945
00:40:59,540 --> 00:41:01,140
Network

946
00:41:01,140 --> 00:41:03,060
correct yes and so that's the beauty

947
00:41:03,060 --> 00:41:04,440
behind being able to change the port

948
00:41:04,440 --> 00:41:05,760
right so you're going over the internet

949
00:41:05,760 --> 00:41:06,960
you can go through the cloud if you

950
00:41:06,960 --> 00:41:09,180
wanted to but it's basically creating

951
00:41:09,180 --> 00:41:10,560
that connection outside the network

952
00:41:10,560 --> 00:41:12,660
whether it's through because it's

953
00:41:12,660 --> 00:41:14,040
connecting out right it's not we're not

954
00:41:14,040 --> 00:41:15,780
connecting into the network so they're

955
00:41:15,780 --> 00:41:17,819
connecting to us so the cool thing with

956
00:41:17,819 --> 00:41:19,079
that is wherever they're at as long as

957
00:41:19,079 --> 00:41:20,460
they have internet activity they can

958
00:41:20,460 --> 00:41:22,200
connect into our server so great

959
00:41:22,200 --> 00:41:24,379
question

960
00:41:33,380 --> 00:41:36,480
what is your mechanism

961
00:41:36,480 --> 00:41:38,880
yeah so great question as well so the

962
00:41:38,880 --> 00:41:40,319
question was you know once we get that

963
00:41:40,319 --> 00:41:42,599
established C2 and we're we're connected

964
00:41:42,599 --> 00:41:45,720
to our Target how are we doing it and

965
00:41:45,720 --> 00:41:48,000
that's all going to be based on the

966
00:41:48,000 --> 00:41:49,500
actual engagement type and the scope of

967
00:41:49,500 --> 00:41:51,359
the engagement so typically I use this

968
00:41:51,359 --> 00:41:53,099
on red team engagements right where it's

969
00:41:53,099 --> 00:41:55,260
a little bit more low and slow and so a

970
00:41:55,260 --> 00:41:56,400
lot of that is really situational

971
00:41:56,400 --> 00:41:58,619
awareness at first I'm once I establish

972
00:41:58,619 --> 00:41:59,819
that connection I want to know where did

973
00:41:59,819 --> 00:42:00,839
I land

974
00:42:00,839 --> 00:42:02,280
um what process am I running as who's

975
00:42:02,280 --> 00:42:03,660
logged into the machine that I'm logged

976
00:42:03,660 --> 00:42:05,700
in where's that machine and you want to

977
00:42:05,700 --> 00:42:07,680
do that really really slow right because

978
00:42:07,680 --> 00:42:09,300
the moment you start hitting stuff and

979
00:42:09,300 --> 00:42:10,800
running Bloodhound is the moment you're

980
00:42:10,800 --> 00:42:12,000
going to get soft beating down your door

981
00:42:12,000 --> 00:42:14,339
so you want to be able to blend in you

982
00:42:14,339 --> 00:42:16,560
want to tell a story right so what I try

983
00:42:16,560 --> 00:42:18,420
to do is I try to have my beacon

984
00:42:18,420 --> 00:42:20,280
or the binary that I'm planting tell

985
00:42:20,280 --> 00:42:22,619
that story and so think about it from

986
00:42:22,619 --> 00:42:25,079
the when when IR comes running and

987
00:42:25,079 --> 00:42:26,160
they're going to triage that machine

988
00:42:26,160 --> 00:42:27,540
what are they looking for they're

989
00:42:27,540 --> 00:42:28,920
looking for certain processes they're

990
00:42:28,920 --> 00:42:30,900
looking for you know this is a weird

991
00:42:30,900 --> 00:42:33,180
process or this is a a child process of

992
00:42:33,180 --> 00:42:34,740
a really weird parent process that's

993
00:42:34,740 --> 00:42:36,660
phoning home to the internet but it's

994
00:42:36,660 --> 00:42:38,460
like notepad like they're looking for

995
00:42:38,460 --> 00:42:40,319
weird stuff so if you tell that story

996
00:42:40,319 --> 00:42:41,819
and you blend in and you do you know

997
00:42:41,819 --> 00:42:43,440
your parent ID is spoofing and you do

998
00:42:43,440 --> 00:42:45,420
you set up your payloads properly

999
00:42:45,420 --> 00:42:46,920
um then you could just yeah you can do

1000
00:42:46,920 --> 00:42:49,079
your Bloodhound and and lateral movement

1001
00:42:49,079 --> 00:42:51,839
and escalations but it all depends on

1002
00:42:51,839 --> 00:42:53,460
the scope of the objective really but

1003
00:42:53,460 --> 00:42:55,200
that's usually what I do I do use

1004
00:42:55,200 --> 00:42:58,920
Bloodhound and sharp Hound so

1005
00:42:58,920 --> 00:43:00,839
is there a password collection

1006
00:43:00,839 --> 00:43:04,220
opportunity in that proxy

1007
00:43:04,680 --> 00:43:07,319
um so when you when you say password you

1008
00:43:07,319 --> 00:43:09,560
mean

1009
00:43:16,819 --> 00:43:19,859
yes so the cool thing with it um it does

1010
00:43:19,859 --> 00:43:22,319
capture it if there is a password

1011
00:43:22,319 --> 00:43:24,300
um but because once they click connect

1012
00:43:24,300 --> 00:43:26,220
there is no logging in it's automatic

1013
00:43:26,220 --> 00:43:28,740
because we're logging in for them

1014
00:43:28,740 --> 00:43:30,599
um but in the event where like with your

1015
00:43:30,599 --> 00:43:32,400
example like let's say you found an RDP

1016
00:43:32,400 --> 00:43:34,920
file on the network file share that you

1017
00:43:34,920 --> 00:43:36,300
know they needed to type their login and

1018
00:43:36,300 --> 00:43:38,339
password in what we can do is we could

1019
00:43:38,339 --> 00:43:40,980
Point our proxy to the real server

1020
00:43:40,980 --> 00:43:44,400
change their RDP file to our proxy and

1021
00:43:44,400 --> 00:43:46,200
then when they do log in we capture

1022
00:43:46,200 --> 00:43:47,520
credentials as well so that's already

1023
00:43:47,520 --> 00:43:50,540
built into the proxy yeah

1024
00:43:57,300 --> 00:44:00,060
um so that's more manual because I think

1025
00:44:00,060 --> 00:44:01,619
you know when you're planting a binary

1026
00:44:01,619 --> 00:44:03,900
only or any file for that matter only

1027
00:44:03,900 --> 00:44:06,240
you would know where you planted it and

1028
00:44:06,240 --> 00:44:08,280
so what what we do at Black Hills and

1029
00:44:08,280 --> 00:44:09,780
we're on our red team is what we what we

1030
00:44:09,780 --> 00:44:11,880
do is we keep track of our artifacts so

1031
00:44:11,880 --> 00:44:13,680
any changes that we make any you know if

1032
00:44:13,680 --> 00:44:15,359
we make a change to a password or add a

1033
00:44:15,359 --> 00:44:18,060
user for whatever reason or write a file

1034
00:44:18,060 --> 00:44:20,220
somewhere we always keep track of that

1035
00:44:20,220 --> 00:44:21,900
because at the end of the engagement

1036
00:44:21,900 --> 00:44:24,480
somebody has to clean this up and so we

1037
00:44:24,480 --> 00:44:25,380
want to make sure that we're doing our

1038
00:44:25,380 --> 00:44:27,000
due diligence to make sure that whatever

1039
00:44:27,000 --> 00:44:29,099
organization we're testing has the

1040
00:44:29,099 --> 00:44:31,800
ability to see what we did and be able

1041
00:44:31,800 --> 00:44:33,180
to to take those artifacts and delete

1042
00:44:33,180 --> 00:44:35,040
them sometimes I'll delete them um if

1043
00:44:35,040 --> 00:44:37,200
they want me to but yeah so that's the

1044
00:44:37,200 --> 00:44:38,280
best way to do it I don't know another

1045
00:44:38,280 --> 00:44:40,920
way to do it like manually I mean I

1046
00:44:40,920 --> 00:44:42,720
don't know like a tool or anything but I

1047
00:44:42,720 --> 00:44:44,640
would I would definitely I think I would

1048
00:44:44,640 --> 00:44:45,660
do it manually no matter what because

1049
00:44:45,660 --> 00:44:47,040
it's more important to make sure that

1050
00:44:47,040 --> 00:44:50,480
you get all the artifacts properly

1051
00:44:55,880 --> 00:44:58,260
it's a great question um so I didn't

1052
00:44:58,260 --> 00:45:00,839
spend a lot of time on all of them but

1053
00:45:00,839 --> 00:45:02,579
most of the default ones that are within

1054
00:45:02,579 --> 00:45:04,380
windows I opened up there's some graph

1055
00:45:04,380 --> 00:45:06,240
programs for like performance and and

1056
00:45:06,240 --> 00:45:07,619
weird stuff but I didn't see anything

1057
00:45:07,619 --> 00:45:09,420
that I could leverage for an attack

1058
00:45:09,420 --> 00:45:11,880
Vector there's probably a lot of

1059
00:45:11,880 --> 00:45:13,920
unexplored attack vectors in some of

1060
00:45:13,920 --> 00:45:15,480
these default programs though I just

1061
00:45:15,480 --> 00:45:17,220
haven't I didn't spend a lot of time um

1062
00:45:17,220 --> 00:45:19,319
I did also look at um

1063
00:45:19,319 --> 00:45:21,960
there's some uh I think it's wsix or

1064
00:45:21,960 --> 00:45:23,220
something

1065
00:45:23,220 --> 00:45:25,859
um it's like an it's the new

1066
00:45:25,859 --> 00:45:28,440
um it's some new windows remote thing I

1067
00:45:28,440 --> 00:45:30,720
don't know it's like on the new app the

1068
00:45:30,720 --> 00:45:33,300
new app.net whatever it is what is it I

1069
00:45:33,300 --> 00:45:35,339
forget there's some new framework within

1070
00:45:35,339 --> 00:45:36,839
windows that gives you the ability to do

1071
00:45:36,839 --> 00:45:39,300
stuff but it was like um like click once

1072
00:45:39,300 --> 00:45:40,920
it's like the W the new click once is

1073
00:45:40,920 --> 00:45:42,240
what it is remember the click ones from

1074
00:45:42,240 --> 00:45:43,859
like a couple of years ago where you

1075
00:45:43,859 --> 00:45:45,240
could install it and it'll like download

1076
00:45:45,240 --> 00:45:46,560
it through Edge and just run your code

1077
00:45:46,560 --> 00:45:48,180
it's like a new version of that but it's

1078
00:45:48,180 --> 00:45:50,579
for like the new modern Windows through

1079
00:45:50,579 --> 00:45:51,900
the App Store and everything I did play

1080
00:45:51,900 --> 00:45:53,520
with that a little bit but there's some

1081
00:45:53,520 --> 00:45:54,599
really good safeguards with those

1082
00:45:54,599 --> 00:45:56,400
vectors because they need like they need

1083
00:45:56,400 --> 00:45:57,960
to be signed or in the certificate store

1084
00:45:57,960 --> 00:45:59,460
already so you kind of have to figure

1085
00:45:59,460 --> 00:46:02,339
out how to do that but

1086
00:46:02,339 --> 00:46:05,220
yeah so how often do you have time to be

1087
00:46:05,220 --> 00:46:06,660
installed on the routines because I

1088
00:46:06,660 --> 00:46:08,960
can't imagine

1089
00:46:09,319 --> 00:46:11,700
that's a great question yeah that's a

1090
00:46:11,700 --> 00:46:13,920
good question so you'll notice that um

1091
00:46:13,920 --> 00:46:16,740
so when I talk about hyper-v it's always

1092
00:46:16,740 --> 00:46:18,660
just been in theory I've seen it and

1093
00:46:18,660 --> 00:46:20,280
I'll even be on Twitter and I'll say

1094
00:46:20,280 --> 00:46:21,900
I've never seen it in the real world I

1095
00:46:21,900 --> 00:46:23,280
haven't found it but I haven't also

1096
00:46:23,280 --> 00:46:24,480
looked for it so I don't know how often

1097
00:46:24,480 --> 00:46:25,740
it's really there

1098
00:46:25,740 --> 00:46:26,819
um some of these times you don't really

1099
00:46:26,819 --> 00:46:28,440
know what you compromise either so like

1100
00:46:28,440 --> 00:46:30,300
you might not like I go after security

1101
00:46:30,300 --> 00:46:31,560
Engineers I'll go after the it

1102
00:46:31,560 --> 00:46:32,880
Administration like I'll go after

1103
00:46:32,880 --> 00:46:34,440
anybody with any sort of elevated

1104
00:46:34,440 --> 00:46:36,720
privileges that's usually who I Target

1105
00:46:36,720 --> 00:46:38,099
because in your mind you're thinking

1106
00:46:38,099 --> 00:46:39,839
well they would never do that but the

1107
00:46:39,839 --> 00:46:42,839
reality is that we all will do that with

1108
00:46:42,839 --> 00:46:45,119
the right ruse so I I just I kind of go

1109
00:46:45,119 --> 00:46:48,020
that way so

1110
00:46:56,300 --> 00:46:59,040
overly generous treats like this like

1111
00:46:59,040 --> 00:47:01,140
this drive

1112
00:47:01,140 --> 00:47:03,540
that's correct yeah and so it's um so by

1113
00:47:03,540 --> 00:47:04,500
default

1114
00:47:04,500 --> 00:47:06,119
um in the Microsoft terminal service

1115
00:47:06,119 --> 00:47:07,800
client remember we're creating the

1116
00:47:07,800 --> 00:47:09,780
connection file so we just enable all

1117
00:47:09,780 --> 00:47:11,640
disks and then when we save it and send

1118
00:47:11,640 --> 00:47:13,500
an RDP file that's still persisting in

1119
00:47:13,500 --> 00:47:16,200
that RDP file yeah so it just forwards

1120
00:47:16,200 --> 00:47:18,480
all of their disks so it's just pretty

1121
00:47:18,480 --> 00:47:20,099
much game over so I got time for one

1122
00:47:20,099 --> 00:47:21,599
more I think

1123
00:47:21,599 --> 00:47:23,280
probably not

1124
00:47:23,280 --> 00:47:26,240
the kids

1125
00:47:33,420 --> 00:47:36,660
yeah it's a great question so the

1126
00:47:36,660 --> 00:47:38,040
question is what do you have access to

1127
00:47:38,040 --> 00:47:39,839
once that terminal service client is

1128
00:47:39,839 --> 00:47:41,640
connected is that what you're saying so

1129
00:47:41,640 --> 00:47:44,220
um so it really depends um most of the

1130
00:47:44,220 --> 00:47:47,460
time it's all the local printers so I

1131
00:47:47,460 --> 00:47:49,380
enable all the options in the RDP file

1132
00:47:49,380 --> 00:47:51,660
when I'm targeting someone and so and

1133
00:47:51,660 --> 00:47:52,800
what that means is you get the local

1134
00:47:52,800 --> 00:47:54,599
printers you get the audio devices you

1135
00:47:54,599 --> 00:47:56,099
get the camera you get the video devices

1136
00:47:56,099 --> 00:47:58,020
you get any of the Plug and Play devices

1137
00:47:58,020 --> 00:48:00,359
you get any of the maps network drives

1138
00:48:00,359 --> 00:48:01,980
so if like they have Network file share

1139
00:48:01,980 --> 00:48:03,839
that's mapped by default through like a

1140
00:48:03,839 --> 00:48:05,640
policy you'll get that you'll get access

1141
00:48:05,640 --> 00:48:08,160
to that um and so and you can read and

1142
00:48:08,160 --> 00:48:09,660
write as within their permissions right

1143
00:48:09,660 --> 00:48:11,520
so their ACLS on those Network file

1144
00:48:11,520 --> 00:48:12,960
shares that's what you're restricted to

1145
00:48:12,960 --> 00:48:14,940
but yeah you can write to pretty much

1146
00:48:14,940 --> 00:48:17,880
anything across the network clipboard

1147
00:48:17,880 --> 00:48:19,020
um and then anything that's forwarded so

1148
00:48:19,020 --> 00:48:19,980
if they're running it in a VM anything

1149
00:48:19,980 --> 00:48:21,359
that's forwarded to the VM as well so

1150
00:48:21,359 --> 00:48:23,819
shared folders clipboard again

1151
00:48:23,819 --> 00:48:26,540
um yeah thank you

1152
00:48:31,380 --> 00:48:33,240
see now you're thinking that's that's

1153
00:48:33,240 --> 00:48:35,040
exactly what that's exactly where I went

1154
00:48:35,040 --> 00:48:37,380
can I access the hlk you know the actual

1155
00:48:37,380 --> 00:48:39,240
registry because everything's a file

1156
00:48:39,240 --> 00:48:40,440
um I haven't figured that part out yet

1157
00:48:40,440 --> 00:48:42,900
because I'm limited to like like

1158
00:48:42,900 --> 00:48:44,819
backtake back to TS client and then

1159
00:48:44,819 --> 00:48:46,619
whatever's mounted but that's where this

1160
00:48:46,619 --> 00:48:48,240
research should be going is I think I

1161
00:48:48,240 --> 00:48:49,440
think there's lots of really cool stuff

1162
00:48:49,440 --> 00:48:50,520
that we could do especially if it's

1163
00:48:50,520 --> 00:48:52,079
elevated if they're running from local

1164
00:48:52,079 --> 00:48:53,520
admin then you know there's a lot of

1165
00:48:53,520 --> 00:48:55,079
stuff you could potentially do

1166
00:48:55,079 --> 00:48:56,520
um so

1167
00:48:56,520 --> 00:48:58,619
cool all right that's it I think I'm up

1168
00:48:58,619 --> 00:49:00,590
for time but uh yeah appreciate it

1169
00:49:00,590 --> 00:49:08,320
[Applause]

1170
00:49:12,420 --> 00:49:14,400
I'm not a huge fan

1171
00:49:14,400 --> 00:49:18,119
not using my top just because I

1172
00:49:18,119 --> 00:49:20,339
prepare everything on my laptop so like

1173
00:49:20,339 --> 00:49:23,240
I know that it's gonna work

1174
00:49:24,119 --> 00:49:26,119
um

1175
00:49:29,400 --> 00:49:30,900
so

1176
00:49:30,900 --> 00:49:33,720
um right

1177
00:49:33,720 --> 00:49:36,439
guys

