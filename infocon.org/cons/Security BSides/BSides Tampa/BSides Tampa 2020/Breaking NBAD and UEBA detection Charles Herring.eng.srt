1
00:00:00,430 --> 00:00:06,088
[Music]

2
00:00:01,280 --> 00:00:08,220
good morning and welcome to BCI's 2020

3
00:00:06,089 --> 00:00:11,700
in Tampa today's presentation will be

4
00:00:08,220 --> 00:00:13,440
breaking and bed and you'ii be a the

5
00:00:11,700 --> 00:00:15,540
presenter for today's presentation is

6
00:00:13,440 --> 00:00:21,720
Charles herring what that being said

7
00:00:15,540 --> 00:00:25,049
Charles herring all right so you can

8
00:00:21,720 --> 00:00:27,060
grab the deck here from that takes you

9
00:00:25,050 --> 00:00:29,789
to my LinkedIn page you can download it

10
00:00:27,060 --> 00:00:32,098
I have a pastebin scripts are also on

11
00:00:29,789 --> 00:00:33,719
that link little about me then we'll

12
00:00:32,098 --> 00:00:34,440
dive into I'm gonna try to do a live

13
00:00:33,719 --> 00:00:36,450
demo today

14
00:00:34,440 --> 00:00:40,019
I did this talk at Def Con earlier in

15
00:00:36,450 --> 00:00:43,890
the year and wasn't brave enough to try

16
00:00:40,020 --> 00:00:45,780
a live demo on their Wi-Fi so we'll do

17
00:00:43,890 --> 00:00:48,690
it we'll do it here today a little bit

18
00:00:45,780 --> 00:00:50,940
about myself I was in the Navy from 95

19
00:00:48,690 --> 00:00:52,739
to 2005 the first part of that I fixed

20
00:00:50,940 --> 00:00:55,709
f-18 Hornets I was an electronics

21
00:00:52,739 --> 00:00:57,530
technician after 9/11 they detailed me

22
00:00:55,710 --> 00:01:00,120
to the Naval Postgraduate School in

23
00:00:57,530 --> 00:01:01,649
Monterey California to stand up the

24
00:01:00,120 --> 00:01:05,610
network security group and start working

25
00:01:01,649 --> 00:01:07,680
on start working on operationalizing

26
00:01:05,610 --> 00:01:09,840
security inside of the Navy and DOD I

27
00:01:07,680 --> 00:01:13,080
was also a founding member of the school

28
00:01:09,840 --> 00:01:15,420
of route so if you watch if you watch

29
00:01:13,080 --> 00:01:17,400
Silicon Valley guilfoyle says no one's

30
00:01:15,420 --> 00:01:20,610
gonna break in here not the nations say

31
00:01:17,400 --> 00:01:22,530
China not the school of mother root so

32
00:01:20,610 --> 00:01:24,360
that's our team we've won so many times

33
00:01:22,530 --> 00:01:27,570
we can't compete anymore so those were

34
00:01:24,360 --> 00:01:29,310
the good old days Def Con I did magazine

35
00:01:27,570 --> 00:01:31,169
reviews or product reviews for em floral

36
00:01:29,310 --> 00:01:33,479
test Center up until journalism died and

37
00:01:31,170 --> 00:01:35,850
the test center shut down went to work

38
00:01:33,479 --> 00:01:39,270
for doing consulting work for seven

39
00:01:35,850 --> 00:01:41,130
years of DOD the time I was in a post

40
00:01:39,270 --> 00:01:43,048
graduate school we did a lot of research

41
00:01:41,130 --> 00:01:46,890
around anomaly detection or what's now

42
00:01:43,049 --> 00:01:48,869
called machine learning went to work for

43
00:01:46,890 --> 00:01:51,210
a company called Lancope which came out

44
00:01:48,869 --> 00:01:53,759
of Georgia Tech it's acquired by Cisco

45
00:01:51,210 --> 00:01:58,110
than four years ago I started research

46
00:01:53,759 --> 00:01:59,640
at wid fou so before I get started I'm a

47
00:01:58,110 --> 00:02:01,679
fire up a part of them might have to

48
00:01:59,640 --> 00:02:05,520
hold this thing I might get started on

49
00:02:01,680 --> 00:02:08,310
it yeah it's better on the demo so I'm

50
00:02:05,520 --> 00:02:11,478
going to attack my own product today to

51
00:02:08,310 --> 00:02:11,479
save me a cease and desist letter

52
00:02:11,569 --> 00:02:20,420
so we have one incident here with a

53
00:02:14,239 --> 00:02:24,040
handful of a handful of leads from trap

54
00:02:20,420 --> 00:02:29,179
X some firewall blocks Symantec endpoint

55
00:02:24,040 --> 00:02:30,200
i'ma show you this is the attack and

56
00:02:29,180 --> 00:02:31,280
I'll come back we're going to explain

57
00:02:30,200 --> 00:02:33,250
this it's going take a little bit in

58
00:02:31,280 --> 00:02:35,389
time to run so while the attacks running

59
00:02:33,250 --> 00:02:37,790
we'll do some slides and come back to it

60
00:02:35,389 --> 00:02:40,129
later but essentially what this script

61
00:02:37,790 --> 00:02:42,828
is showing and this is the script it's

62
00:02:40,129 --> 00:02:45,739
on pastebin is we set a couple of date

63
00:02:42,829 --> 00:02:47,659
formats this is the destination that I'm

64
00:02:45,739 --> 00:02:51,290
going to send these garbage logs to

65
00:02:47,659 --> 00:02:53,689
which is my in this case my sim product

66
00:02:51,290 --> 00:02:57,168
my logging product and then I'm gonna

67
00:02:53,689 --> 00:03:00,469
randomize the attackers IP address in

68
00:02:57,169 --> 00:03:02,000
the message so that this is you'll will

69
00:03:00,469 --> 00:03:04,069
get to a mass implication this is

70
00:03:02,000 --> 00:03:05,209
basically poisoning all the data inside

71
00:03:04,069 --> 00:03:09,290
of the logging aggregates your

72
00:03:05,209 --> 00:03:12,040
aggregators so that it's useless so

73
00:03:09,290 --> 00:03:19,819
let's run that

74
00:03:12,040 --> 00:03:22,040
do your work all right so we're gonna

75
00:03:19,819 --> 00:03:23,798
hit on what is in bad what does UVA how

76
00:03:22,040 --> 00:03:26,120
does it fit into sim or log aggregation

77
00:03:23,799 --> 00:03:28,699
detection we're gonna go over what

78
00:03:26,120 --> 00:03:30,319
poisoning non-repudiation then we'll get

79
00:03:28,699 --> 00:03:32,419
into the attack techniques and attack

80
00:03:30,319 --> 00:03:34,638
scenarios I really do suggest you

81
00:03:32,419 --> 00:03:37,579
download this there's a lot of code in

82
00:03:34,639 --> 00:03:39,259
here so most of the stuff is command

83
00:03:37,579 --> 00:03:41,930
line codes you can run to generate this

84
00:03:39,259 --> 00:03:43,819
stuff so it's real quick dr. Dorothy

85
00:03:41,930 --> 00:03:46,879
Denning in 1986 wrote a paper called

86
00:03:43,819 --> 00:03:50,208
intrusion detection expert systems at

87
00:03:46,879 --> 00:03:52,069
the Naval War College and she looked at

88
00:03:50,209 --> 00:03:53,870
how do we detect anything how do we

89
00:03:52,069 --> 00:03:56,328
detect any attack and it boils down to

90
00:03:53,870 --> 00:03:57,919
really three categories a signature

91
00:03:56,329 --> 00:04:01,219
based detection is when we're inspecting

92
00:03:57,919 --> 00:04:04,009
an object like a packet or a file for

93
00:04:01,219 --> 00:04:05,418
something we know is bad so after I get

94
00:04:04,009 --> 00:04:07,518
out of the session I'm going to the bar

95
00:04:05,419 --> 00:04:10,430
I'm gonna order a beer if there's mold

96
00:04:07,519 --> 00:04:11,359
in my beer I'm like mold is bad I'm not

97
00:04:10,430 --> 00:04:12,650
going to drink the beer

98
00:04:11,359 --> 00:04:14,689
make sure place to look it's a beer but

99
00:04:12,650 --> 00:04:16,789
the mold is bad so that's signature

100
00:04:14,689 --> 00:04:20,570
detection behavioral detection is you

101
00:04:16,789 --> 00:04:24,590
observe the behavior of the of the

102
00:04:20,570 --> 00:04:27,889
subject after it ingest the object so

103
00:04:24,590 --> 00:04:29,299
the files the files executed inside of a

104
00:04:27,889 --> 00:04:31,040
machine and all of a sudden it starts

105
00:04:29,300 --> 00:04:32,660
encrypting the disk well the you might

106
00:04:31,040 --> 00:04:33,950
not know that the file was bad but you

107
00:04:32,660 --> 00:04:36,080
know the behavior that followed the

108
00:04:33,950 --> 00:04:38,120
execution that's bad so it's behavioral

109
00:04:36,080 --> 00:04:40,159
based detection and then anomaly based

110
00:04:38,120 --> 00:04:42,169
detection is building a baseline of what

111
00:04:40,160 --> 00:04:44,240
is normal what things we know are normal

112
00:04:42,169 --> 00:04:46,130
and when do we deviate from normal so

113
00:04:44,240 --> 00:04:49,100
that's anomaly detection and the way

114
00:04:46,130 --> 00:04:50,780
these things fit together is anomaly

115
00:04:49,100 --> 00:04:53,389
detection helps us create net new

116
00:04:50,780 --> 00:04:56,239
behaviors to look for and behaviors help

117
00:04:53,389 --> 00:04:59,270
us create net new signatures signatures

118
00:04:56,240 --> 00:05:00,530
have the benefit of having certainty of

119
00:04:59,270 --> 00:05:02,390
what they are so they have the lowest

120
00:05:00,530 --> 00:05:04,520
false positive they also have

121
00:05:02,390 --> 00:05:07,099
documentation behind them CVS and that

122
00:05:04,520 --> 00:05:08,210
type of thing for responding to them so

123
00:05:07,100 --> 00:05:10,090
they're very good for no one exploits

124
00:05:08,210 --> 00:05:13,310
obviously not very good for ode a

125
00:05:10,090 --> 00:05:17,479
zero-day unknown exploits and not very

126
00:05:13,310 --> 00:05:18,680
good for exploits that aren't using did

127
00:05:17,479 --> 00:05:21,440
aren't explaining of vulnerabilities

128
00:05:18,680 --> 00:05:23,510
things like a credential abuse someone

129
00:05:21,440 --> 00:05:25,040
that's used is like a Edward Snowden

130
00:05:23,510 --> 00:05:28,039
type of attack there was nothing to

131
00:05:25,040 --> 00:05:31,729
detect the guy had access and he abused

132
00:05:28,040 --> 00:05:34,400
it when we're talking about baselines

133
00:05:31,729 --> 00:05:36,110
and anomaly detection the first thing I

134
00:05:34,400 --> 00:05:38,120
understand is what are you baselining do

135
00:05:36,110 --> 00:05:41,830
you baseline the entity meaning does

136
00:05:38,120 --> 00:05:45,500
every host or every user every file have

137
00:05:41,830 --> 00:05:48,050
baseline or do you create a cohort and

138
00:05:45,500 --> 00:05:50,630
so a peer group would be every other

139
00:05:48,050 --> 00:05:52,580
host on guest Wireless could be a

140
00:05:50,630 --> 00:05:54,650
baseline so your baseline the some of

141
00:05:52,580 --> 00:05:58,310
those hosts as opposed to base lining

142
00:05:54,650 --> 00:06:01,219
each individual and that tends to have

143
00:05:58,310 --> 00:06:05,750
the benefit of any single bad actor

144
00:06:01,220 --> 00:06:07,850
deviating from normal won't mess up the

145
00:06:05,750 --> 00:06:10,310
baseline so you have some safety in

146
00:06:07,850 --> 00:06:12,830
numbers that way it takes time to build

147
00:06:10,310 --> 00:06:15,289
baselines and so supervised machine

148
00:06:12,830 --> 00:06:17,599
learning is when you establish what

149
00:06:15,289 --> 00:06:19,219
variables are going to baselines such as

150
00:06:17,600 --> 00:06:22,940
how many bytes are transferred per day

151
00:06:19,220 --> 00:06:25,580
on user anomalies how many what time of

152
00:06:22,940 --> 00:06:27,979
day people normally log in from HR or so

153
00:06:25,580 --> 00:06:29,770
forth and unsupervised as you just let

154
00:06:27,979 --> 00:06:32,120
the Machine figure out all the possible

155
00:06:29,770 --> 00:06:34,299
variations and build out profiles that

156
00:06:32,120 --> 00:06:34,300
way

157
00:06:35,120 --> 00:06:41,630
Network behavioral anomaly detection

158
00:06:36,830 --> 00:06:44,330
came out around 2002 and the data source

159
00:06:41,630 --> 00:06:46,810
tends to be NetFlow IP fix some type of

160
00:06:44,330 --> 00:06:50,240
metadata concerning packets because

161
00:06:46,810 --> 00:06:51,860
building baselines is volumetric how

162
00:06:50,240 --> 00:06:53,780
many bytes were exchanged how many

163
00:06:51,860 --> 00:06:55,490
relationships how many send packets

164
00:06:53,780 --> 00:06:57,710
versus syntax and those type of things

165
00:06:55,490 --> 00:07:00,919
and all that's really in the TCP header

166
00:06:57,710 --> 00:07:03,109
so metadata like net flow became a

167
00:07:00,919 --> 00:07:04,549
really powerful source of baselining

168
00:07:03,110 --> 00:07:06,710
what's going on in the network and

169
00:07:04,550 --> 00:07:08,440
because it's coming off the route

170
00:07:06,710 --> 00:07:10,310
switching infrastructure you could do it

171
00:07:08,440 --> 00:07:12,320
laterally you could look at the stuff

172
00:07:10,310 --> 00:07:15,169
moving between segments inside of the

173
00:07:12,320 --> 00:07:20,990
network and not be limited to egress

174
00:07:15,169 --> 00:07:24,139
points yep here's a list of some tools

175
00:07:20,990 --> 00:07:27,100
it's from Gartner on things that do that

176
00:07:24,139 --> 00:07:29,120
I think most of these are still around

177
00:07:27,100 --> 00:07:30,830
so when you're looking at embed what

178
00:07:29,120 --> 00:07:33,440
type of anomalies are we looking for one

179
00:07:30,830 --> 00:07:39,800
is service traffic threshold anomaly so

180
00:07:33,440 --> 00:07:43,099
a host is expected to consume less than

181
00:07:39,800 --> 00:07:45,289
a gig of web traffic consumes 20 gigs

182
00:07:43,099 --> 00:07:48,229
that's an anomaly why did it just assume

183
00:07:45,289 --> 00:07:50,659
dis consume 20 times what was expected

184
00:07:48,229 --> 00:07:52,729
same thing with service type of us if a

185
00:07:50,660 --> 00:07:55,550
new service comes up in a subnet that

186
00:07:52,729 --> 00:07:57,590
only has web services and now it's

187
00:07:55,550 --> 00:08:00,260
hosting Onion Routing

188
00:07:57,590 --> 00:08:04,489
or it's hosting DNS that's a new type of

189
00:08:00,260 --> 00:08:07,310
a service stripe type geographic traffic

190
00:08:04,490 --> 00:08:08,660
anomaly is we always get our during

191
00:08:07,310 --> 00:08:10,699
these periods of time we only get

192
00:08:08,660 --> 00:08:12,410
traffic from the following Geo's on the

193
00:08:10,699 --> 00:08:14,780
globe asns belonging to the following

194
00:08:12,410 --> 00:08:18,050
gos and now we start getting a lot of

195
00:08:14,780 --> 00:08:21,020
traffic from Iran or China or somewhere

196
00:08:18,050 --> 00:08:23,419
else data hoarding is a really cool

197
00:08:21,020 --> 00:08:25,159
anomaly detection thing and Network

198
00:08:23,419 --> 00:08:26,359
behavioral anomaly detection essentially

199
00:08:25,160 --> 00:08:29,120
what you do is you figure out how much

200
00:08:26,360 --> 00:08:32,330
internal data is transferred to each

201
00:08:29,120 --> 00:08:34,969
host inside of the network so host a is

202
00:08:32,330 --> 00:08:37,669
expected to consume less than a hundred

203
00:08:34,969 --> 00:08:40,580
Meg's of corporate data in a day so when

204
00:08:37,669 --> 00:08:43,189
it consumes 10 gigabytes of data it's a

205
00:08:40,580 --> 00:08:45,190
extreme concern because normally that

206
00:08:43,190 --> 00:08:47,480
type of anomaly would be associated with

207
00:08:45,190 --> 00:08:48,920
data theft that someone's trying to

208
00:08:47,480 --> 00:08:51,019
hoard the data put it on a thumb

209
00:08:48,920 --> 00:08:54,170
drive and walk out and it's really easy

210
00:08:51,019 --> 00:08:55,370
to catch that using Network behavioral

211
00:08:54,170 --> 00:08:57,589
anomaly detection because you're

212
00:08:55,370 --> 00:09:02,420
counting how many bites a given user or

213
00:08:57,589 --> 00:09:03,380
a given host is taking in same thing

214
00:09:02,420 --> 00:09:05,599
with data disclosure

215
00:09:03,380 --> 00:09:08,389
if you have huge amounts of data leaving

216
00:09:05,600 --> 00:09:10,339
the network from from one host that's

217
00:09:08,389 --> 00:09:13,430
also something you detect by building

218
00:09:10,339 --> 00:09:17,899
out baselines when you get into user and

219
00:09:13,430 --> 00:09:19,219
entity behavioral analysis in the for

220
00:09:17,899 --> 00:09:21,529
those of us that have been doing this

221
00:09:19,220 --> 00:09:24,110
for twenty years now we used to do

222
00:09:21,529 --> 00:09:26,029
Incident Response on alarm rows snort or

223
00:09:24,110 --> 00:09:27,889
firewalls would generate an alert we

224
00:09:26,029 --> 00:09:29,180
would investigate that alert and you

225
00:09:27,889 --> 00:09:30,889
know we never got to the bottom of that

226
00:09:29,180 --> 00:09:33,469
list because they came in much faster

227
00:09:30,889 --> 00:09:36,019
than we could respond to them then we

228
00:09:33,470 --> 00:09:37,850
pivoted over to host based

229
00:09:36,019 --> 00:09:39,589
investigations where we took all of the

230
00:09:37,850 --> 00:09:41,360
alarms we associated them with the

231
00:09:39,589 --> 00:09:43,100
computer host that generated or

232
00:09:41,360 --> 00:09:45,980
connected to those alarms and we

233
00:09:43,100 --> 00:09:47,810
investigated the host then we pivoted to

234
00:09:45,980 --> 00:09:49,730
user based detection later on which

235
00:09:47,810 --> 00:09:52,310
became the basis of a user an entity

236
00:09:49,730 --> 00:09:53,839
behavioral analysis to where the what

237
00:09:52,310 --> 00:09:55,790
you we have a user he's on three

238
00:09:53,839 --> 00:09:57,410
different machines we take all those

239
00:09:55,790 --> 00:10:00,640
alarms that are aggregated there and it

240
00:09:57,410 --> 00:10:03,939
becomes an aggregation layer at the user

241
00:10:00,640 --> 00:10:07,370
so really most of UBA is pivoting around

242
00:10:03,940 --> 00:10:10,160
user behavior and we're baselining

243
00:10:07,370 --> 00:10:12,470
different things that the user does it's

244
00:10:10,160 --> 00:10:17,000
a long list of different things that do

245
00:10:12,470 --> 00:10:19,190
that one of the most common is a magic

246
00:10:17,000 --> 00:10:22,430
carpet attack so if someone logs in from

247
00:10:19,190 --> 00:10:25,279
tampa and their machine and then 30

248
00:10:22,430 --> 00:10:27,920
minutes later logs in from Tehran that

249
00:10:25,279 --> 00:10:29,630
doesn't seem likely that they can make

250
00:10:27,920 --> 00:10:33,290
that cover that kind of distance in that

251
00:10:29,630 --> 00:10:35,390
amount of time so that's part of it as a

252
00:10:33,290 --> 00:10:38,660
geographic anomaly also how often do

253
00:10:35,390 --> 00:10:41,930
they log in to - Geo's outside of

254
00:10:38,660 --> 00:10:43,550
southern Florida a time of day when the

255
00:10:41,930 --> 00:10:45,500
users normally log into their machines

256
00:10:43,550 --> 00:10:50,329
when do they normally access a different

257
00:10:45,500 --> 00:10:52,040
types of data and so forth what host of

258
00:10:50,329 --> 00:10:54,829
the access if they're only hitting email

259
00:10:52,040 --> 00:10:56,599
and SharePoint why are they now all of a

260
00:10:54,829 --> 00:10:59,870
sudden trying to access security tools

261
00:10:56,600 --> 00:11:01,880
or firewalls or those types of things

262
00:10:59,870 --> 00:11:04,250
so with that boring part of the way

263
00:11:01,880 --> 00:11:06,830
let's talk about how to mess it up so

264
00:11:04,250 --> 00:11:08,990
there's a few ways of poisoning data and

265
00:11:06,830 --> 00:11:10,490
when I say poisoning data it's these are

266
00:11:08,990 --> 00:11:12,470
going to be used when you're doing some

267
00:11:10,490 --> 00:11:16,760
type of attack you intend to excellent

268
00:11:12,470 --> 00:11:18,770
rate data or you want to disrupt

269
00:11:16,760 --> 00:11:20,240
services but you don't want to get

270
00:11:18,770 --> 00:11:23,030
caught so these are going to be the

271
00:11:20,240 --> 00:11:24,680
techniques we use to do that

272
00:11:23,030 --> 00:11:28,250
so we have mass implications we're gonna

273
00:11:24,680 --> 00:11:29,870
go over baseline boiling attack masking

274
00:11:28,250 --> 00:11:31,670
and then the methods for generating

275
00:11:29,870 --> 00:11:33,800
those logs will be through log spoofing

276
00:11:31,670 --> 00:11:36,349
behavioral spoofing and where we do it

277
00:11:33,800 --> 00:11:38,150
so this is a screenshot from my thing

278
00:11:36,350 --> 00:11:41,360
where there's this is a data

279
00:11:38,150 --> 00:11:44,990
exfiltration at a large University on

280
00:11:41,360 --> 00:11:48,770
the left and so our goals are either to

281
00:11:44,990 --> 00:11:50,960
make all of those alerts disappear so

282
00:11:48,770 --> 00:11:54,110
that they never show up in the system or

283
00:11:50,960 --> 00:11:55,700
we make a completely useless where

284
00:11:54,110 --> 00:11:57,530
everything is attacking everything and

285
00:11:55,700 --> 00:12:03,350
you can't discern what is real and what

286
00:11:57,530 --> 00:12:04,579
is not real so quick note on how to

287
00:12:03,350 --> 00:12:08,600
prevent this from happening in your

288
00:12:04,580 --> 00:12:10,160
organization one wherever possible do

289
00:12:08,600 --> 00:12:14,570
logging with client based authentication

290
00:12:10,160 --> 00:12:16,660
of via PKI so you know what where the

291
00:12:14,570 --> 00:12:20,570
data came from is verified through a

292
00:12:16,660 --> 00:12:23,449
handshake IP spoofing protection if

293
00:12:20,570 --> 00:12:27,770
you're using cisco gear that's the ios

294
00:12:23,450 --> 00:12:29,510
command to do reverse path checking to

295
00:12:27,770 --> 00:12:31,610
make sure that the for instance if

296
00:12:29,510 --> 00:12:33,650
you're sending a UDP packet you can lie

297
00:12:31,610 --> 00:12:36,940
right you can say your whatever in the

298
00:12:33,650 --> 00:12:40,220
head or whatever IPS source you want to

299
00:12:36,940 --> 00:12:42,020
this command has he routes which

300
00:12:40,220 --> 00:12:43,640
infrastructure check to make sure that's

301
00:12:42,020 --> 00:12:47,210
possible that you really are that

302
00:12:43,640 --> 00:12:48,650
sending a host protecting the security

303
00:12:47,210 --> 00:12:51,680
infrastructure is very important how

304
00:12:48,650 --> 00:12:53,510
data flows in to your log your logging

305
00:12:51,680 --> 00:12:56,839
systems your analysis systems is

306
00:12:53,510 --> 00:12:59,030
critical so doing micro segmentation or

307
00:12:56,840 --> 00:13:02,420
using something like trust sect I take

308
00:12:59,030 --> 00:13:05,060
care of that and and then sort of the

309
00:13:02,420 --> 00:13:07,160
last two more points last thing is honey

310
00:13:05,060 --> 00:13:09,979
pots deception technologies are really

311
00:13:07,160 --> 00:13:11,540
good when everything else fails things

312
00:13:09,980 --> 00:13:14,240
like trap X and

313
00:13:11,540 --> 00:13:16,010
does any honeypot because if someone's

314
00:13:14,240 --> 00:13:18,230
talking to a what's supposed to be a

315
00:13:16,010 --> 00:13:19,790
non-existent host that's gonna give you

316
00:13:18,230 --> 00:13:22,970
a lot of clarity when everything else

317
00:13:19,790 --> 00:13:25,099
fails particularly in spoofing and then

318
00:13:22,970 --> 00:13:28,430
chain-of-custody tracking as you're

319
00:13:25,100 --> 00:13:30,560
bringing data in treat it as evidence

320
00:13:28,430 --> 00:13:33,079
what port did I receive it on what

321
00:13:30,560 --> 00:13:35,270
machine received it was a protocol all

322
00:13:33,080 --> 00:13:37,010
of that should be in the metadata when

323
00:13:35,270 --> 00:13:39,530
you're processing data so if you are

324
00:13:37,010 --> 00:13:41,689
poisoned you have some mechanism for

325
00:13:39,530 --> 00:13:43,880
filtering out the things that were

326
00:13:41,690 --> 00:13:46,100
poisoned so all the attacks are you over

327
00:13:43,880 --> 00:13:48,290
here in a second are they cover

328
00:13:46,100 --> 00:13:50,630
everything except initial access from

329
00:13:48,290 --> 00:13:54,260
the attack mitre from the mitre attack

330
00:13:50,630 --> 00:13:58,130
continuum but initial access needs to

331
00:13:54,260 --> 00:14:00,710
exist so a common technique I use is the

332
00:13:58,130 --> 00:14:02,570
the pump and dump so you can either use

333
00:14:00,710 --> 00:14:05,780
docker I most commonly use docker to do

334
00:14:02,570 --> 00:14:08,480
this you can use a VM if you wanted to

335
00:14:05,780 --> 00:14:10,670
but essentially you set a manual MAC

336
00:14:08,480 --> 00:14:11,930
address on your container I'll show you

337
00:14:10,670 --> 00:14:14,990
the commands to do that in docker in a

338
00:14:11,930 --> 00:14:17,390
second I normally choose to get an IP

339
00:14:14,990 --> 00:14:19,460
address via DHCP so the architecture is

340
00:14:17,390 --> 00:14:21,670
issuing me a new MAC address I mean a

341
00:14:19,460 --> 00:14:24,260
new IP address against the MAC address I

342
00:14:21,670 --> 00:14:26,630
should say attack not attached but um

343
00:14:24,260 --> 00:14:28,400
perform whatever attack you're gonna do

344
00:14:26,630 --> 00:14:32,680
if you want to do recon you scan some

345
00:14:28,400 --> 00:14:37,010
segments release the IP to do a DHCP

346
00:14:32,680 --> 00:14:39,349
lease release swap out the drop swap out

347
00:14:37,010 --> 00:14:41,090
the MAC address on the box and continue

348
00:14:39,350 --> 00:14:43,820
your attack so normally I do these about

349
00:14:41,090 --> 00:14:46,100
every two minutes so the machines IP

350
00:14:43,820 --> 00:14:47,660
address is constantly changing so when

351
00:14:46,100 --> 00:14:49,490
they're trying to find me it takes a lot

352
00:14:47,660 --> 00:14:51,800
longer for them to find me on the

353
00:14:49,490 --> 00:14:55,250
network and of course if you're doing

354
00:14:51,800 --> 00:14:58,520
some access layer logging this is one

355
00:14:55,250 --> 00:15:00,650
great way to catch it so if you're an

356
00:14:58,520 --> 00:15:02,420
access layer monitoring the MAC address

357
00:15:00,650 --> 00:15:04,280
that's connected to the port you can get

358
00:15:02,420 --> 00:15:06,890
there much quicker to preventing us to

359
00:15:04,280 --> 00:15:10,189
pump and dump so this is how it runs

360
00:15:06,890 --> 00:15:13,010
this is the command for the first things

361
00:15:10,190 --> 00:15:16,400
for spinning up Kali Linux

362
00:15:13,010 --> 00:15:20,990
docker container with a static MAC

363
00:15:16,400 --> 00:15:23,780
address so she's broken down to create a

364
00:15:20,990 --> 00:15:25,580
network on the host so there's this maps

365
00:15:23,780 --> 00:15:27,949
to the host Nick

366
00:15:25,580 --> 00:15:31,460
you're setting the MAC address and then

367
00:15:27,950 --> 00:15:34,070
by default it'll you know I'll do DHCP

368
00:15:31,460 --> 00:15:36,560
with this version of Callie and then the

369
00:15:34,070 --> 00:15:38,990
container is called Callie one and then

370
00:15:36,560 --> 00:15:40,459
you start it then you have a bash

371
00:15:38,990 --> 00:15:42,590
command do your stuff

372
00:15:40,460 --> 00:15:44,300
kill the thing and then spin it up with

373
00:15:42,590 --> 00:15:45,920
a new Mac and there's nothing keeping

374
00:15:44,300 --> 00:15:47,300
you from having several of these running

375
00:15:45,920 --> 00:15:52,520
at the same time so that you can

376
00:15:47,300 --> 00:15:54,859
compress the attack window another one

377
00:15:52,520 --> 00:15:58,640
is what I call a pocket dimension is

378
00:15:54,860 --> 00:16:00,880
where you create a fake internet so you

379
00:15:58,640 --> 00:16:03,410
can make any traffic appear to occur

380
00:16:00,880 --> 00:16:05,510
even though it didn't really occur so if

381
00:16:03,410 --> 00:16:07,030
you're plugged in even on wireless and

382
00:16:05,510 --> 00:16:09,800
the wireless is doing access layer

383
00:16:07,030 --> 00:16:12,380
NetFlow in particular orders some other

384
00:16:09,800 --> 00:16:15,410
type of logging with probes and that

385
00:16:12,380 --> 00:16:17,960
type of thing you create one host that

386
00:16:15,410 --> 00:16:20,360
is maybe inside you can create Google

387
00:16:17,960 --> 00:16:22,970
servers and as your servers outside that

388
00:16:20,360 --> 00:16:25,730
have those public IP addresses and you

389
00:16:22,970 --> 00:16:27,650
attack them in this little fake network

390
00:16:25,730 --> 00:16:29,510
well as you're attacking them in the

391
00:16:27,650 --> 00:16:32,150
fake network and your mapped over to the

392
00:16:29,510 --> 00:16:35,390
access layer the access layer is going

393
00:16:32,150 --> 00:16:37,520
to generate telemetry as if that was

394
00:16:35,390 --> 00:16:40,580
really happening so it looks like you

395
00:16:37,520 --> 00:16:42,800
just tried to attack a server that's

396
00:16:40,580 --> 00:16:45,110
outside the network did but you didn't

397
00:16:42,800 --> 00:16:46,760
right but it does create the record so

398
00:16:45,110 --> 00:16:49,250
the architecture starts generating all

399
00:16:46,760 --> 00:16:53,000
of these all of these records so very

400
00:16:49,250 --> 00:16:54,500
simple to do that in docker you're gonna

401
00:16:53,000 --> 00:16:56,690
create a bridge Network so you're going

402
00:16:54,500 --> 00:16:59,840
to take your physical NIC bridge it to

403
00:16:56,690 --> 00:17:03,290
this fake network that I called nothing

404
00:16:59,840 --> 00:17:04,910
I didn't name it network pocket you

405
00:17:03,290 --> 00:17:07,490
create a network called pocket and then

406
00:17:04,910 --> 00:17:09,050
it's gonna you add these hosts to that

407
00:17:07,490 --> 00:17:11,060
network and then as they attack each

408
00:17:09,050 --> 00:17:14,379
other as you're running these fake

409
00:17:11,060 --> 00:17:17,359
attacks the telemetry is being generated

410
00:17:14,380 --> 00:17:23,330
into the network based on the existing

411
00:17:17,359 --> 00:17:25,369
logging infrastructure so a more direct

412
00:17:23,329 --> 00:17:28,550
way of faking things is just spoofing

413
00:17:25,369 --> 00:17:30,379
the logs altogether most systems

414
00:17:28,550 --> 00:17:33,200
collecting logs collected over UDP

415
00:17:30,380 --> 00:17:37,010
syslog five one for UDP is the most

416
00:17:33,200 --> 00:17:38,970
common way if you can find where the

417
00:17:37,010 --> 00:17:41,010
logs are supposed to go in

418
00:17:38,970 --> 00:17:45,210
a lot of organizations its logs diet

419
00:17:41,010 --> 00:17:46,679
corporate dot-com so not generally too

420
00:17:45,210 --> 00:17:51,600
well thought out so you can try that

421
00:17:46,679 --> 00:17:52,980
first and just directly send messages

422
00:17:51,600 --> 00:17:53,780
whatever message you want which I'll

423
00:17:52,980 --> 00:18:01,470
show you in a minute

424
00:17:53,780 --> 00:18:03,260
for to create the fake evidence so you

425
00:18:01,470 --> 00:18:06,780
don't need an expensive tool to forge a

426
00:18:03,260 --> 00:18:08,669
syslog message it's netcat so any

427
00:18:06,780 --> 00:18:11,070
message you want you can find the

428
00:18:08,669 --> 00:18:13,860
format's for different tools all over

429
00:18:11,070 --> 00:18:16,230
the internet you just put together your

430
00:18:13,860 --> 00:18:19,379
message that you want to send pipe it to

431
00:18:16,230 --> 00:18:23,580
netcat with a server with the server's

432
00:18:19,380 --> 00:18:25,409
IP right here on five one four and now

433
00:18:23,580 --> 00:18:26,760
the server thinks something happened

434
00:18:25,409 --> 00:18:28,260
that really didn't happen and you can

435
00:18:26,760 --> 00:18:31,650
tell the server anything that you would

436
00:18:28,260 --> 00:18:34,140
like to tell it when you don't know

437
00:18:31,650 --> 00:18:36,419
where the log aggregation is you can use

438
00:18:34,140 --> 00:18:39,299
an approach i called a UDP spray so

439
00:18:36,419 --> 00:18:41,730
there's a great project on github called

440
00:18:39,299 --> 00:18:44,010
sample quatre and what it does is it

441
00:18:41,730 --> 00:18:45,419
takes in UDP packets and it can send

442
00:18:44,010 --> 00:18:47,640
those UDP packets to multiple

443
00:18:45,419 --> 00:18:50,640
destinations without mangling the the

444
00:18:47,640 --> 00:18:53,490
header so old masquerade and the source

445
00:18:50,640 --> 00:18:57,360
IP and so you can dump in basically an

446
00:18:53,490 --> 00:19:00,330
entire Class B of IP addresses send the

447
00:18:57,360 --> 00:19:02,070
send the packet into the listening port

448
00:19:00,330 --> 00:19:04,500
and then it'll send it out to every one

449
00:19:02,070 --> 00:19:07,889
of those destinations and so one of them

450
00:19:04,500 --> 00:19:09,450
will be will be the logging server so

451
00:19:07,890 --> 00:19:12,409
very simple to set that up so all these

452
00:19:09,450 --> 00:19:17,250
attacks can work through the UDP srei

453
00:19:12,409 --> 00:19:22,350
this is a script for connecting to TLS

454
00:19:17,250 --> 00:19:24,510
this is syslog over TLS connections so

455
00:19:22,350 --> 00:19:26,340
this one requires a little bit of crypto

456
00:19:24,510 --> 00:19:27,658
so this is a Python script you can use

457
00:19:26,340 --> 00:19:29,220
for doing the same thing it's just you

458
00:19:27,659 --> 00:19:31,679
got it you got to do a TCP handshake do

459
00:19:29,220 --> 00:19:38,760
a TLS handshake and then you can ship

460
00:19:31,679 --> 00:19:41,130
ship your messages another way is if you

461
00:19:38,760 --> 00:19:42,360
create a if the architecture or the

462
00:19:41,130 --> 00:19:44,039
security infrastructure is not

463
00:19:42,360 --> 00:19:45,928
generating logs when you do a pocket

464
00:19:44,039 --> 00:19:48,240
dimension you can generate them yourself

465
00:19:45,929 --> 00:19:50,909
so you have a fake Network where you're

466
00:19:48,240 --> 00:19:53,010
gonna run fake attacks you can execute

467
00:19:50,909 --> 00:19:55,290
in probe

468
00:19:53,010 --> 00:19:57,830
you can grab that from in top sight run

469
00:19:55,290 --> 00:20:00,690
em probe on the machine and configure it

470
00:19:57,830 --> 00:20:02,669
using the command there to send all of

471
00:20:00,690 --> 00:20:05,150
the observed traffic to the NetFlow

472
00:20:02,670 --> 00:20:07,470
collector so you and you could also use

473
00:20:05,150 --> 00:20:10,620
UDP spray here to send it everywhere

474
00:20:07,470 --> 00:20:12,390
until it hit a net flow collector so

475
00:20:10,620 --> 00:20:15,209
essentially this allows you to generate

476
00:20:12,390 --> 00:20:19,440
your own fake traffic in situations

477
00:20:15,210 --> 00:20:23,370
where the architecture will not and last

478
00:20:19,440 --> 00:20:25,200
technique here is um if you have things

479
00:20:23,370 --> 00:20:26,729
like elastic search or Splunk that

480
00:20:25,200 --> 00:20:29,460
you're trying to send messages to over

481
00:20:26,730 --> 00:20:31,380
arrests API curls your curls your guy

482
00:20:29,460 --> 00:20:34,410
right there is how you send it this is

483
00:20:31,380 --> 00:20:36,950
an elastic search example alright so now

484
00:20:34,410 --> 00:20:40,110
let's do some of the attack scenarios

485
00:20:36,950 --> 00:20:42,600
mass implication is when I'm running an

486
00:20:40,110 --> 00:20:44,820
attack and I want the I want everybody

487
00:20:42,600 --> 00:20:46,860
else to look guilty so it's not going to

488
00:20:44,820 --> 00:20:48,810
erase that I did it but I'm gonna make

489
00:20:46,860 --> 00:20:51,000
it look like 10,000 other hosts just did

490
00:20:48,810 --> 00:20:52,679
the exact same thing I did so the

491
00:20:51,000 --> 00:20:54,330
incident responders don't know which one

492
00:20:52,680 --> 00:20:59,430
of us are real and which one of us are

493
00:20:54,330 --> 00:21:00,929
fake so the script I just ran a second

494
00:20:59,430 --> 00:21:03,090
ago does this because I know the

495
00:21:00,930 --> 00:21:05,210
destination of the collector so we'll

496
00:21:03,090 --> 00:21:08,310
look at the results of that in a second

497
00:21:05,210 --> 00:21:11,010
but essentially generating bad traffic

498
00:21:08,310 --> 00:21:12,720
that has a lot of attacking hosts so you

499
00:21:11,010 --> 00:21:21,960
can pick several class B's of internal

500
00:21:12,720 --> 00:21:23,700
IP addresses and ship those out okay and

501
00:21:21,960 --> 00:21:25,890
then let's sorry about baseline boiling

502
00:21:23,700 --> 00:21:28,170
so we can use these same techniques to

503
00:21:25,890 --> 00:21:30,690
screw up a machine learned baseline and

504
00:21:28,170 --> 00:21:32,190
so the way that we do this is you pick

505
00:21:30,690 --> 00:21:34,020
what baseline you want to mess with the

506
00:21:32,190 --> 00:21:37,380
most common one I like to mess with is

507
00:21:34,020 --> 00:21:40,800
time of day and geographic user logins

508
00:21:37,380 --> 00:21:42,690
so the systems that do these things are

509
00:21:40,800 --> 00:21:44,909
building baselines over time so if you

510
00:21:42,690 --> 00:21:47,790
have a small deviation it's not going to

511
00:21:44,910 --> 00:21:49,590
generate an alarm and so what we'll do

512
00:21:47,790 --> 00:21:52,110
if I'm looking at data hoarding for

513
00:21:49,590 --> 00:21:53,699
instance I'll pick all of the users that

514
00:21:52,110 --> 00:21:57,199
I can enumerate from Active Directory

515
00:21:53,700 --> 00:22:00,540
and I'll create a log showing that they

516
00:21:57,200 --> 00:22:03,240
downloaded a little bit of traffic 100k

517
00:22:00,540 --> 00:22:05,070
the first day and then the next day 200k

518
00:22:03,240 --> 00:22:06,690
and then after eventually you blow it up

519
00:22:05,070 --> 00:22:08,639
to where the baseline

520
00:22:06,690 --> 00:22:10,440
is now in the Gigabyte so it doesn't

521
00:22:08,640 --> 00:22:13,170
even matter what you do in anomaly

522
00:22:10,440 --> 00:22:16,230
detection because you slowly boil the

523
00:22:13,170 --> 00:22:19,320
baseline beyond limits same thing on

524
00:22:16,230 --> 00:22:21,180
time of day does create a create one log

525
00:22:19,320 --> 00:22:23,520
entry for one user every once in a while

526
00:22:21,180 --> 00:22:25,290
that's a little bit later right if it's

527
00:22:23,520 --> 00:22:28,200
normally four o'clock to start moving it

528
00:22:25,290 --> 00:22:31,260
at a 405 login that's not going to throw

529
00:22:28,200 --> 00:22:32,700
off an alarm next day 410 and so forth

530
00:22:31,260 --> 00:22:34,860
so you can keep rolling these things out

531
00:22:32,700 --> 00:22:37,800
to where everybody's logging in all the

532
00:22:34,860 --> 00:22:39,540
time from everywhere changing the geo so

533
00:22:37,800 --> 00:22:42,629
it boils the baselines to the where they

534
00:22:39,540 --> 00:22:44,580
become useless very common for red teams

535
00:22:42,630 --> 00:22:48,840
that work with to do this over a long

536
00:22:44,580 --> 00:22:51,169
period of time in a pen test and so

537
00:22:48,840 --> 00:22:56,040
that's that piece and let's take a look

538
00:22:51,170 --> 00:22:58,890
see if my script okay my script ran and

539
00:22:56,040 --> 00:23:02,460
so now if i refresh this we had the

540
00:22:58,890 --> 00:23:04,380
Albatross this is what I get now so this

541
00:23:02,460 --> 00:23:08,070
was that simple incident we had before

542
00:23:04,380 --> 00:23:10,080
it looks like this so it in it to the

543
00:23:08,070 --> 00:23:13,169
real incident now has a bunch of fake

544
00:23:10,080 --> 00:23:15,360
data in it fake attackers fake user

545
00:23:13,170 --> 00:23:16,950
accounts fake destinations and it's hard

546
00:23:15,360 --> 00:23:20,939
to even figure out what this is supposed

547
00:23:16,950 --> 00:23:22,230
to be have 541 alarms associated with

548
00:23:20,940 --> 00:23:24,000
this instead of the nine that are

549
00:23:22,230 --> 00:23:26,940
supposed to be here and then I have a

550
00:23:24,000 --> 00:23:29,340
long list of additional incidents that

551
00:23:26,940 --> 00:23:31,260
were generated and you know I'd like to

552
00:23:29,340 --> 00:23:33,179
pride myself in reducing noise but this

553
00:23:31,260 --> 00:23:35,970
is a very everyone's vulnerable to this

554
00:23:33,180 --> 00:23:39,630
if you don't control how the data comes

555
00:23:35,970 --> 00:23:43,500
in and so the one real attacks hidden in

556
00:23:39,630 --> 00:23:49,560
there and we have a bunch of of these

557
00:23:43,500 --> 00:23:51,660
fake attacks that have have been created

558
00:23:49,560 --> 00:23:53,639
as well so which one of these there's

559
00:23:51,660 --> 00:23:57,090
only one machine is actually bad in this

560
00:23:53,640 --> 00:24:03,860
mix and now we have what did it say here

561
00:23:57,090 --> 00:24:07,530
where did we do we did we spoofed 1753

562
00:24:03,860 --> 00:24:11,490
attacking host so IR is one of those is

563
00:24:07,530 --> 00:24:13,790
real 737 under 1754 hosts to investigate

564
00:24:11,490 --> 00:24:16,290
only one of them is a real attacker and

565
00:24:13,790 --> 00:24:17,600
so that's going to take a lot of time to

566
00:24:16,290 --> 00:24:21,409
sort through

567
00:24:17,600 --> 00:24:23,928
what to do there so you know just

568
00:24:21,410 --> 00:24:27,020
reviewing again the MIDI the way to

569
00:24:23,929 --> 00:24:28,490
remediate these things is control how

570
00:24:27,020 --> 00:24:30,260
your data comes in first do

571
00:24:28,490 --> 00:24:33,140
authentication control the pathways that

572
00:24:30,260 --> 00:24:36,080
the logs are taking to come in both the

573
00:24:33,140 --> 00:24:38,690
NetFlow syslog protect access to the api

574
00:24:36,080 --> 00:24:41,330
is providing the data enable spoofing

575
00:24:38,690 --> 00:24:46,070
protection on those pathways that are

576
00:24:41,330 --> 00:24:47,809
bringing it in segments protect the the

577
00:24:46,070 --> 00:24:49,399
security architecture and if you don't

578
00:24:47,809 --> 00:24:52,070
already have a separate logging

579
00:24:49,400 --> 00:24:53,510
architecture from a separate subnet that

580
00:24:52,070 --> 00:24:56,000
has its own Ackles for egress and

581
00:24:53,510 --> 00:25:00,470
ingress that's really important to do to

582
00:24:56,000 --> 00:25:04,909
avoid a lot of this obviously obstacle

583
00:25:00,470 --> 00:25:09,309
named your logging server logs dot wit

584
00:25:04,909 --> 00:25:11,510
phu kham that's just just too easy and

585
00:25:09,309 --> 00:25:13,250
again honey pots where you can put them

586
00:25:11,510 --> 00:25:14,809
out will sort of be if you run into this

587
00:25:13,250 --> 00:25:16,370
will help you catch the real attacker

588
00:25:14,809 --> 00:25:18,789
because if i'm doing a recon of the

589
00:25:16,370 --> 00:25:21,080
network you actually will get a hit

590
00:25:18,789 --> 00:25:23,990
inside the honeypot and then it's chain

591
00:25:21,080 --> 00:25:26,149
of custody inside of the system I use

592
00:25:23,990 --> 00:25:29,150
cue radars good at this as well Splunk

593
00:25:26,150 --> 00:25:30,950
has a piece where the tag how it how did

594
00:25:29,150 --> 00:25:32,690
it come in right how did I receive this

595
00:25:30,950 --> 00:25:35,690
record did it come in over what what

596
00:25:32,690 --> 00:25:37,580
machine received it what IP address what

597
00:25:35,690 --> 00:25:39,770
port was it listening on what protocol

598
00:25:37,580 --> 00:25:41,539
was observed so that if you need to go

599
00:25:39,770 --> 00:25:43,908
in filter out records you can filter out

600
00:25:41,539 --> 00:25:47,150
the things that match the conditions of

601
00:25:43,909 --> 00:25:51,549
the poison data so with that I'll answer

602
00:25:47,150 --> 00:25:54,620
any questions who

603
00:25:51,549 --> 00:25:57,250
someone's got to ask me a question no

604
00:25:54,620 --> 00:25:59,600
nothing alright well I'm on the bar then

605
00:25:57,250 --> 00:26:01,900
alright last call all right you can be

606
00:25:59,600 --> 00:26:01,899
applauded

607
00:26:02,000 --> 00:26:08,610
[Applause]

608
00:26:05,990 --> 00:26:11,250
but you can download all the scripts and

609
00:26:08,610 --> 00:26:13,679
stuff from my there on the blog but

610
00:26:11,250 --> 00:26:15,290
there also on my LinkedIn so grab them

611
00:26:13,680 --> 00:26:18,890
pay me if you need have any questions

612
00:26:15,290 --> 00:26:18,889
yeah good

613
00:26:29,390 --> 00:26:43,580
you'll never detect it yeah yeah that's

614
00:26:41,900 --> 00:26:45,410
right you'll hit one of them if there's

615
00:26:43,580 --> 00:26:46,909
a pathway to it that was immediate

616
00:26:45,410 --> 00:26:49,370
mitigated again so you don't have to

617
00:26:46,910 --> 00:26:50,450
know it's a downside the UDP is he

618
00:26:49,370 --> 00:27:05,989
doesn't know who you are but you also

619
00:26:50,450 --> 00:27:07,970
don't know if the message made it yep it

620
00:27:05,990 --> 00:27:10,340
can be any of those so any access and

621
00:27:07,970 --> 00:27:11,660
most commonly it gets done on guest

622
00:27:10,340 --> 00:27:12,830
why's the question was work where do you

623
00:27:11,660 --> 00:27:15,200
put the machine that generates the

624
00:27:12,830 --> 00:27:16,610
traffic and it can most commonly be on a

625
00:27:15,200 --> 00:27:19,910
wireless network cause it's the easiest

626
00:27:16,610 --> 00:27:21,620
thing to get to and if they're doing

627
00:27:19,910 --> 00:27:23,059
monitoring on the wireless network is

628
00:27:21,620 --> 00:27:24,918
still going to generate telemetry and

629
00:27:23,059 --> 00:27:26,629
the telemetry is not smart enough to

630
00:27:24,919 --> 00:27:28,520
know that it should only be generating

631
00:27:26,630 --> 00:27:29,929
telemetry about the wireless network so

632
00:27:28,520 --> 00:27:32,360
you can generate telemetry about

633
00:27:29,929 --> 00:27:35,780
anything and it's going to go back to

634
00:27:32,360 --> 00:27:38,990
the system so generally you know

635
00:27:35,780 --> 00:27:40,879
spoofing if you can find the logging

636
00:27:38,990 --> 00:27:43,490
server that's nice but even if you can't

637
00:27:40,880 --> 00:27:46,549
if the architecture has been set up too

638
00:27:43,490 --> 00:27:48,169
and with probes or NetFlow or other

639
00:27:46,549 --> 00:27:49,940
logging solutions it's going to generate

640
00:27:48,169 --> 00:27:54,260
traffic for you so you just sort of have

641
00:27:49,940 --> 00:27:55,790
to insert it some wait a whisper

642
00:27:54,260 --> 00:27:57,379
campaign right you're whispering bad

643
00:27:55,790 --> 00:27:59,480
information to the architecture and then

644
00:27:57,380 --> 00:28:00,980
the architecture reports it back to the

645
00:27:59,480 --> 00:28:03,350
reporting systems is the easiest way

646
00:28:00,980 --> 00:28:05,330
easiest way to do it when we're do a pin

647
00:28:03,350 --> 00:28:06,949
test we have some idea because we can

648
00:28:05,330 --> 00:28:09,470
see how much sweat starts coming out

649
00:28:06,950 --> 00:28:10,790
people's faces that went on it's getting

650
00:28:09,470 --> 00:28:13,090
there or not but if you're an external

651
00:28:10,790 --> 00:28:16,820
attacker you generally don't have that

652
00:28:13,090 --> 00:28:18,230
then your botnets are also good so once

653
00:28:16,820 --> 00:28:19,820
you have initial access you can do it

654
00:28:18,230 --> 00:28:21,320
anywhere but most commonly if you have

655
00:28:19,820 --> 00:28:25,399
physical access you just come in and

656
00:28:21,320 --> 00:28:27,939
drop in on a wireless wireless access

657
00:28:25,400 --> 00:28:27,940
point

658
00:28:29,389 --> 00:28:34,070
all right well thank you very much I'll

659
00:28:31,649 --> 00:28:34,070
be at the bar

