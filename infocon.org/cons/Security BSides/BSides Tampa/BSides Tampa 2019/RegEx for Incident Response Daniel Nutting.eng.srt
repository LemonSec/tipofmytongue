1
00:00:00,030 --> 00:00:03,688
<font color="#CCCCCC">quarterman</font><font color="#E5E5E5"> lake in Florida just</font><font color="#CCCCCC"> either</font>

2
00:00:01,530 --> 00:00:05,460
<font color="#E5E5E5">way his scene is response importance in</font>

3
00:00:03,689 --> 00:00:07,919
a responsive<font color="#E5E5E5"> and what they termed threat</font>

4
00:00:05,460 --> 00:00:09,840
protection engineering<font color="#E5E5E5"> this requires the</font>

5
00:00:07,919 --> 00:00:11,879
<font color="#E5E5E5">blue team to understand both the attacks</font>

6
00:00:09,840 --> 00:00:14,040
in the system they target this method

7
00:00:11,880 --> 00:00:16,190
ensures that they have the right box

8
00:00:14,040 --> 00:00:18,900
with the right analytics to identify

9
00:00:16,190 --> 00:00:20,970
attacker<font color="#CCCCCC"> mediated previously he was</font>

10
00:00:18,900 --> 00:00:23,099
officer in the<font color="#E5E5E5"> US Coast Guard and acted</font>

11
00:00:20,970 --> 00:00:25,380
in various<font color="#E5E5E5"> roles from escorting nuclear</font>

12
00:00:23,100 --> 00:00:27,449
submarines to<font color="#E5E5E5"> originate at the coast one</font>

13
00:00:25,380 --> 00:00:30,029
<font color="#E5E5E5">penny it also</font><font color="#CCCCCC"> teaches</font><font color="#E5E5E5"> she teaches</font>

14
00:00:27,449 --> 00:00:31,980
<font color="#CCCCCC">cybersecurity</font><font color="#E5E5E5"> courses</font><font color="#CCCCCC"> having</font><font color="#E5E5E5"> project I</font>

15
00:00:30,029 --> 00:00:34,410
haven't<font color="#E5E5E5"> heard that border</font><font color="#CCCCCC"> southern</font>

16
00:00:31,980 --> 00:00:36,630
ecology<font color="#CCCCCC"> because several</font><font color="#E5E5E5"> service industry</font>

17
00:00:34,410 --> 00:00:42,980
<font color="#E5E5E5">certifications such as the</font><font color="#CCCCCC"> giac</font>

18
00:00:36,630 --> 00:00:42,980
<font color="#CCCCCC">certified know more than everybody</font>

19
00:00:44,450 --> 00:00:52,110
Bridget thank<font color="#E5E5E5"> you so much</font><font color="#CCCCCC"> so quick show</font>

20
00:00:48,120 --> 00:00:53,820
of hands who uses Splunk<font color="#E5E5E5"> so awesome</font>

21
00:00:52,110 --> 00:00:55,350
<font color="#E5E5E5">about half of you half of you will be</font>

22
00:00:53,820 --> 00:00:57,149
really<font color="#CCCCCC"> comfortable</font><font color="#E5E5E5"> with a lot of my</font>

23
00:00:55,350 --> 00:00:59,489
<font color="#CCCCCC">screenshots</font><font color="#E5E5E5"> because I use spunk</font>

24
00:00:57,149 --> 00:01:02,300
<font color="#E5E5E5">and I gave this talk at the spunk</font>

25
00:00:59,489 --> 00:01:05,700
conference just<font color="#CCCCCC"> this past year</font><font color="#E5E5E5"> but I</font>

26
00:01:02,300 --> 00:01:07,470
don't work for<font color="#CCCCCC"> Splunk I don't have stock</font>

27
00:01:05,700 --> 00:01:09,060
<font color="#CCCCCC">in spunk and what I'm going to talk</font>

28
00:01:07,470 --> 00:01:11,970
<font color="#E5E5E5">about</font><font color="#CCCCCC"> actually has nothing to do with</font>

29
00:01:09,060 --> 00:01:15,570
spunk<font color="#E5E5E5"> it's just regular expressions so</font>

30
00:01:11,970 --> 00:01:17,429
the<font color="#CCCCCC"> nature of this is that while I work</font>

31
00:01:15,570 --> 00:01:19,020
for<font color="#E5E5E5"> Publix</font><font color="#CCCCCC"> I'm not</font><font color="#E5E5E5"> officially</font>

32
00:01:17,430 --> 00:01:22,369
representing<font color="#CCCCCC"> public so I'm</font><font color="#E5E5E5"> not even</font>

33
00:01:19,020 --> 00:01:22,369
allowed<font color="#CCCCCC"> to use the logo today</font>

34
00:01:22,439 --> 00:01:27,749
but my point is I work for a<font color="#CCCCCC"> grocery</font>

35
00:01:25,229 --> 00:01:28,350
store<font color="#E5E5E5"> chain</font><font color="#CCCCCC"> I don't work for a security</font>

36
00:01:27,749 --> 00:01:30,990
vendor

37
00:01:28,350 --> 00:01:33,178
I've got nothing that<font color="#CCCCCC"> I could possibly</font>

38
00:01:30,990 --> 00:01:39,089
convince<font color="#E5E5E5"> you</font><font color="#CCCCCC"> guys to buy at 11:00</font><font color="#E5E5E5"> in the</font>

39
00:01:33,179 --> 00:01:39,959
morning on it<font color="#E5E5E5"> a wonderful Saturday but</font>

40
00:01:39,090 --> 00:01:42,689
we're<font color="#E5E5E5"> going to talk about regular</font>

41
00:01:39,959 --> 00:01:46,829
expressions<font color="#CCCCCC"> today so</font><font color="#E5E5E5"> regular expressions</font>

42
00:01:42,689 --> 00:01:50,458
<font color="#E5E5E5">are a engine for doing crazy cool</font>

43
00:01:46,829 --> 00:01:52,848
wildcard searches<font color="#E5E5E5"> so show Han who at</font>

44
00:01:50,459 --> 00:01:55,709
least knows what regular expressions are

45
00:01:52,849 --> 00:01:58,829
everybody<font color="#E5E5E5"> awesome who thinks they're an</font>

46
00:01:55,709 --> 00:02:02,159
expert<font color="#CCCCCC"> in regular</font><font color="#E5E5E5"> expressions one or two</font>

47
00:01:58,829 --> 00:02:04,408
<font color="#E5E5E5">awesome so the experts I'm going to ask</font>

48
00:02:02,159 --> 00:02:07,530
you to bear<font color="#E5E5E5"> with</font><font color="#CCCCCC"> me because</font><font color="#E5E5E5"> I'm going to</font>

49
00:02:04,409 --> 00:02:10,920
<font color="#E5E5E5">ask you to tone it</font><font color="#CCCCCC"> down and the reason</font>

50
00:02:07,530 --> 00:02:12,329
for<font color="#CCCCCC"> that is everybody else isn't</font><font color="#E5E5E5"> but you</font>

51
00:02:10,919 --> 00:02:15,298
need to work<font color="#CCCCCC"> with them and</font><font color="#E5E5E5"> that means</font>

52
00:02:12,329 --> 00:02:16,799
the elements that you write the regular

53
00:02:15,299 --> 00:02:20,010
expressions<font color="#E5E5E5"> and the searches that you</font>

54
00:02:16,799 --> 00:02:23,489
create<font color="#E5E5E5"> need to be capable for everyone</font>

55
00:02:20,010 --> 00:02:24,989
<font color="#E5E5E5">else on your team</font><font color="#CCCCCC"> so we're going to talk</font>

56
00:02:23,489 --> 00:02:26,639
through<font color="#CCCCCC"> some of</font><font color="#E5E5E5"> the prerequisite</font>

57
00:02:24,989 --> 00:02:27,720
knowledge to get through this I'll walk

58
00:02:26,639 --> 00:02:28,829
you through<font color="#CCCCCC"> some of</font><font color="#E5E5E5"> the regular</font>

59
00:02:27,720 --> 00:02:30,900
expressions<font color="#CCCCCC"> to make sure everybody</font>

60
00:02:28,829 --> 00:02:32,819
understands what we're doing the

61
00:02:30,900 --> 00:02:35,670
philosophy that<font color="#E5E5E5"> we developed at Publix</font>

62
00:02:32,819 --> 00:02:37,980
<font color="#E5E5E5">and just ways to develop regular</font>

63
00:02:35,670 --> 00:02:39,929
expressions<font color="#E5E5E5"> good enough regular</font>

64
00:02:37,980 --> 00:02:41,668
<font color="#CCCCCC">expressions faster we're gonna work</font>

65
00:02:39,930 --> 00:02:44,099
through some common use cases work

66
00:02:41,669 --> 00:02:45,870
around around parsing errors<font color="#E5E5E5"> sequel</font>

67
00:02:44,099 --> 00:02:49,768
injection example cross-site scripting

68
00:02:45,870 --> 00:02:53,760
example and system on example so these

69
00:02:49,769 --> 00:02:57,090
prerequisites IP address<font color="#E5E5E5"> we don't need</font>

70
00:02:53,760 --> 00:03:00,750
something fancy right<font color="#CCCCCC"> slash</font><font color="#E5E5E5"> D meaning a</font>

71
00:02:57,090 --> 00:03:03,930
digit 1 comma<font color="#E5E5E5"> 3 have that digit repeat</font><font color="#CCCCCC"> 1</font>

72
00:03:00,750 --> 00:03:06,150
<font color="#CCCCCC">2 3</font><font color="#E5E5E5"> times slash period means I want the</font>

73
00:03:03,930 --> 00:03:08,790
literal period everybody tracking with

74
00:03:06,150 --> 00:03:11,340
me<font color="#E5E5E5"> pretty easy right field extraction</font>

75
00:03:08,790 --> 00:03:13,769
this is probably the<font color="#E5E5E5"> most important part</font>

76
00:03:11,340 --> 00:03:16,440
of the talk if you use<font color="#E5E5E5"> spunk you love</font>

77
00:03:13,769 --> 00:03:19,019
field extractions<font color="#E5E5E5"> this also applies with</font>

78
00:03:16,440 --> 00:03:21,870
tools online<font color="#CCCCCC"> you can do this with I</font>

79
00:03:19,019 --> 00:03:24,150
<font color="#CCCCCC">believe</font><font color="#E5E5E5"> even notepad plus plus the point</font>

80
00:03:21,870 --> 00:03:26,280
is you're going<font color="#E5E5E5"> to capture elements with</font>

81
00:03:24,150 --> 00:03:27,959
the<font color="#E5E5E5"> regular expression and you're going</font>

82
00:03:26,280 --> 00:03:29,550
<font color="#E5E5E5">to pull it out into a field that</font><font color="#CCCCCC"> you can</font>

83
00:03:27,959 --> 00:03:31,380
<font color="#CCCCCC">now</font><font color="#E5E5E5"> have done</font>

84
00:03:29,550 --> 00:03:33,420
and then there's just<font color="#E5E5E5"> all the different</font>

85
00:03:31,380 --> 00:03:36,269
<font color="#E5E5E5">character classes</font><font color="#CCCCCC"> these are good to</font><font color="#E5E5E5"> know</font>

86
00:03:33,420 --> 00:03:40,829
<font color="#CCCCCC">a character class</font><font color="#E5E5E5"> means the lowercase s</font>

87
00:03:36,270 --> 00:03:43,800
is give me<font color="#CCCCCC"> whitespace characters non non</font>

88
00:03:40,830 --> 00:03:46,530
word characters<font color="#E5E5E5"> the uppercase s the</font>

89
00:03:43,800 --> 00:03:48,300
exact opposite<font color="#E5E5E5"> same with the D digits</font>

90
00:03:46,530 --> 00:03:50,130
but an uppercase D anything that's<font color="#E5E5E5"> not a</font>

91
00:03:48,300 --> 00:03:51,990
digit<font color="#E5E5E5"> so we're going to use this</font>

92
00:03:50,130 --> 00:03:55,260
opposite concept throughout the

93
00:03:51,990 --> 00:03:57,030
presentation<font color="#E5E5E5"> and finally the what what</font>

94
00:03:55,260 --> 00:03:58,470
I'm<font color="#CCCCCC"> presenting is not the only</font><font color="#E5E5E5"> way to do</font>

95
00:03:57,030 --> 00:04:02,670
this<font color="#CCCCCC"> I'm not saying that this is the</font>

96
00:03:58,470 --> 00:04:04,740
<font color="#E5E5E5">Bible of regex not by any</font><font color="#CCCCCC"> means</font><font color="#E5E5E5"> but this</font>

97
00:04:02,670 --> 00:04:07,920
will<font color="#E5E5E5"> help you go faster with your</font>

98
00:04:04,740 --> 00:04:14,910
incident response<font color="#E5E5E5"> now some of the things</font>

99
00:04:07,920 --> 00:04:16,500
here is if<font color="#CCCCCC"> you're yes sir it is</font>

100
00:04:14,910 --> 00:04:18,209
<font color="#E5E5E5">available so it's actually been posted</font>

101
00:04:16,500 --> 00:04:20,100
on the<font color="#CCCCCC"> Splunk</font><font color="#E5E5E5"> conference</font><font color="#CCCCCC"> website and</font>

102
00:04:18,209 --> 00:04:22,048
<font color="#E5E5E5">besides is recording the talk so you'll</font>

103
00:04:20,100 --> 00:04:24,800
you'll have access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> it so yeah now if</font>

104
00:04:22,048 --> 00:04:27,840
you want to take pictures<font color="#CCCCCC"> be my guest</font><font color="#E5E5E5"> so</font>

105
00:04:24,800 --> 00:04:30,060
this is after<font color="#CCCCCC"> the</font><font color="#E5E5E5"> alert</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of people</font>

106
00:04:27,840 --> 00:04:32,599
who are used to<font color="#E5E5E5"> working</font><font color="#CCCCCC"> in a sim they're</font>

107
00:04:30,060 --> 00:04:36,120
trying to<font color="#E5E5E5"> craft this alert to be as</font>

108
00:04:32,600 --> 00:04:38,850
precise and as accurate as possible<font color="#CCCCCC"> this</font>

109
00:04:36,120 --> 00:04:41,010
<font color="#CCCCCC">is after that you know something's</font>

110
00:04:38,850 --> 00:04:43,740
<font color="#CCCCCC">happened</font><font color="#E5E5E5"> now you need to</font><font color="#CCCCCC"> collect</font><font color="#E5E5E5"> all the</font>

111
00:04:41,010 --> 00:04:47,880
<font color="#CCCCCC">data which means you need to be fast</font><font color="#E5E5E5"> you</font>

112
00:04:43,740 --> 00:04:49,950
are<font color="#E5E5E5"> in IR mode so speed / precision that</font>

113
00:04:47,880 --> 00:04:53,610
means it's actually<font color="#E5E5E5"> okay to bring in</font>

114
00:04:49,950 --> 00:04:55,969
some false positive data<font color="#E5E5E5"> because we're</font>

115
00:04:53,610 --> 00:04:59,220
analysts<font color="#E5E5E5"> we know what we're</font><font color="#CCCCCC"> looking at</font>

116
00:04:55,970 --> 00:05:01,680
false<font color="#E5E5E5"> negatives however are not okay</font>

117
00:04:59,220 --> 00:05:04,620
<font color="#E5E5E5">what</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> mean by false negatives are I've</font>

118
00:05:01,680 --> 00:05:07,470
missed critical data my regular

119
00:05:04,620 --> 00:05:11,160
expression has not brought in the data I

120
00:05:07,470 --> 00:05:13,260
<font color="#CCCCCC">need to make a sound</font><font color="#E5E5E5"> decision now the</font>

121
00:05:11,160 --> 00:05:16,230
experts in the room they may<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to</font>

122
00:05:13,260 --> 00:05:18,840
write<font color="#E5E5E5"> things</font><font color="#CCCCCC"> like this mind you this is</font>

123
00:05:16,230 --> 00:05:19,980
<font color="#CCCCCC">twenty percent</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> twenty percent of</font>

124
00:05:18,840 --> 00:05:23,130
the regular<font color="#E5E5E5"> expression that we pulled</font>

125
00:05:19,980 --> 00:05:26,220
off of<font color="#CCCCCC"> a Stack Overflow to validate</font><font color="#E5E5E5"> RFC</font>

126
00:05:23,130 --> 00:05:28,380
<font color="#CCCCCC">a two</font><font color="#E5E5E5"> two email</font><font color="#CCCCCC"> addresses yeah sometimes</font>

127
00:05:26,220 --> 00:05:31,290
you<font color="#CCCCCC"> get so preoccupied with whether or</font>

128
00:05:28,380 --> 00:05:34,320
<font color="#CCCCCC">not</font><font color="#E5E5E5"> you can you don't stop to</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> of</font>

129
00:05:31,290 --> 00:05:39,090
you should so I'm going<font color="#E5E5E5"> to urge</font><font color="#CCCCCC"> you to</font>

130
00:05:34,320 --> 00:05:40,880
avoid the threat click<font color="#E5E5E5"> of the</font>

131
00:05:39,090 --> 00:05:44,369
Tyrannosaurus Rex

132
00:05:40,880 --> 00:05:45,469
<font color="#CCCCCC">alright jokes aside</font><font color="#E5E5E5"> so which of these</font><font color="#CCCCCC"> is</font>

133
00:05:44,370 --> 00:05:48,030
easier<font color="#CCCCCC"> to understand</font>

134
00:05:45,470 --> 00:05:50,550
<font color="#E5E5E5">they're both attempting to extract an</font>

135
00:05:48,030 --> 00:05:52,979
email address<font color="#CCCCCC"> and</font><font color="#E5E5E5"> depending on the data</font>

136
00:05:50,550 --> 00:05:56,760
set you're working with both<font color="#E5E5E5"> of them can</font>

137
00:05:52,979 --> 00:05:58,320
work if the second<font color="#E5E5E5"> one works use the</font>

138
00:05:56,760 --> 00:06:03,180
second one<font color="#E5E5E5"> just worry about</font><font color="#CCCCCC"> getting the</font>

139
00:05:58,320 --> 00:06:05,580
data so which of these<font color="#CCCCCC"> is easier to</font>

140
00:06:03,180 --> 00:06:07,680
understand<font color="#E5E5E5"> now unlike</font><font color="#CCCCCC"> the previous</font>

141
00:06:05,580 --> 00:06:10,469
example this one's<font color="#E5E5E5"> more specific but if</font>

142
00:06:07,680 --> 00:06:12,720
the nature<font color="#CCCCCC"> of your incident</font><font color="#E5E5E5"> allows you</font>

143
00:06:10,470 --> 00:06:15,270
to be more<font color="#E5E5E5"> specific</font><font color="#CCCCCC"> choose the more</font>

144
00:06:12,720 --> 00:06:17,880
specific example<font color="#E5E5E5"> choose that</font><font color="#CCCCCC"> Microsoft</font>

145
00:06:15,270 --> 00:06:18,840
generic domain<font color="#E5E5E5"> if those are the email</font>

146
00:06:17,880 --> 00:06:22,100
addresses you're worried about

147
00:06:18,840 --> 00:06:24,510
<font color="#E5E5E5">extracting this type of self</font>

148
00:06:22,100 --> 00:06:26,550
contextualization self documentation of

149
00:06:24,510 --> 00:06:28,710
the incident can<font color="#E5E5E5"> make it much easier</font><font color="#CCCCCC"> for</font>

150
00:06:26,550 --> 00:06:30,750
<font color="#CCCCCC">the other incident responders</font><font color="#E5E5E5"> to follow</font>

151
00:06:28,710 --> 00:06:33,810
your footsteps<font color="#CCCCCC"> to</font><font color="#E5E5E5"> see how you did</font><font color="#CCCCCC"> your</font>

152
00:06:30,750 --> 00:06:36,180
<font color="#CCCCCC">investigation and this is what I mean</font>

153
00:06:33,810 --> 00:06:38,250
<font color="#E5E5E5">about good enough so you might have</font>

154
00:06:36,180 --> 00:06:40,440
brought<font color="#E5E5E5"> in some</font><font color="#CCCCCC"> false positive data</font>

155
00:06:38,250 --> 00:06:44,520
<font color="#E5E5E5">obviously</font><font color="#CCCCCC"> that middle</font><font color="#E5E5E5"> ones a phone</font>

156
00:06:40,440 --> 00:06:47,610
number so what you're an analyst remove

157
00:06:44,520 --> 00:06:50,760
it big deal<font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> need to make this</font>

158
00:06:47,610 --> 00:06:53,669
perfect by<font color="#E5E5E5"> the way this was Stack</font>

159
00:06:50,760 --> 00:06:55,289
<font color="#E5E5E5">Overflow suggestion which do you</font><font color="#CCCCCC"> want to</font>

160
00:06:53,669 --> 00:06:58,950
deal<font color="#E5E5E5"> with when</font><font color="#CCCCCC"> you're trying</font><font color="#E5E5E5"> to review</font>

161
00:06:55,289 --> 00:07:02,070
somebody's regular expression<font color="#E5E5E5"> all right</font>

162
00:06:58,950 --> 00:07:05,190
<font color="#E5E5E5">so good enough regular expressions</font>

163
00:07:02,070 --> 00:07:07,349
faster so we've got a process<font color="#E5E5E5"> here</font><font color="#CCCCCC"> and</font>

164
00:07:05,190 --> 00:07:08,610
it's pretty<font color="#E5E5E5"> straightforward</font><font color="#CCCCCC"> but unless</font>

165
00:07:07,350 --> 00:07:09,870
you've<font color="#CCCCCC"> been working in</font><font color="#E5E5E5"> this in a while</font>

166
00:07:08,610 --> 00:07:14,310
you<font color="#CCCCCC"> just may not have thought</font><font color="#E5E5E5"> about it</font>

167
00:07:09,870 --> 00:07:16,289
first<font color="#CCCCCC"> identify anchors so what I</font><font color="#E5E5E5"> mean by</font>

168
00:07:14,310 --> 00:07:18,390
anchors are these are those character

169
00:07:16,289 --> 00:07:21,810
sets<font color="#E5E5E5"> that are just not going to change</font>

170
00:07:18,390 --> 00:07:24,240
around<font color="#E5E5E5"> the field</font><font color="#CCCCCC"> they may be</font><font color="#E5E5E5"> before they</font>

171
00:07:21,810 --> 00:07:27,510
may be after so in the top<font color="#CCCCCC"> example I</font>

172
00:07:24,240 --> 00:07:29,490
just<font color="#CCCCCC"> want the domain</font><font color="#E5E5E5"> so my front anchor</font>

173
00:07:27,510 --> 00:07:31,979
are going to be the HTTP colon slash

174
00:07:29,490 --> 00:07:34,260
slash<font color="#E5E5E5"> and the back anchor is going to be</font>

175
00:07:31,979 --> 00:07:35,969
that forward slash<font color="#CCCCCC"> now I could just make</font>

176
00:07:34,260 --> 00:07:38,400
the front anchor just<font color="#E5E5E5"> these two</font>

177
00:07:35,970 --> 00:07:40,220
characters<font color="#CCCCCC"> right but again self</font>

178
00:07:38,400 --> 00:07:42,320
contextualization<font color="#CCCCCC"> I</font>

179
00:07:40,220 --> 00:07:44,750
want the regex to be pretty easy to

180
00:07:42,320 --> 00:07:46,880
understand<font color="#CCCCCC"> in the second</font><font color="#E5E5E5"> example we've</font>

181
00:07:44,750 --> 00:07:49,010
<font color="#E5E5E5">got an email address and we know that at</font>

182
00:07:46,880 --> 00:07:54,260
and dot<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> always</font><font color="#E5E5E5"> going to be</font>

183
00:07:49,010 --> 00:07:56,750
<font color="#E5E5E5">consistent now</font><font color="#CCCCCC"> set</font><font color="#E5E5E5"> up exclusions so</font>

184
00:07:54,260 --> 00:07:59,539
we've set up<font color="#CCCCCC"> our anchors here we want to</font>

185
00:07:56,750 --> 00:08:02,210
do<font color="#E5E5E5"> our extraction</font><font color="#CCCCCC"> and then we want</font><font color="#E5E5E5"> to</font>

186
00:07:59,540 --> 00:08:05,600
end the extraction with an exclusion and

187
00:08:02,210 --> 00:08:08,380
I've got a typo in<font color="#E5E5E5"> this data set there</font>

188
00:08:05,600 --> 00:08:10,960
should be a in<font color="#E5E5E5"> parentheses right here</font>

189
00:08:08,380 --> 00:08:12,770
<font color="#E5E5E5">same with the bottom</font><font color="#CCCCCC"> one as well</font>

190
00:08:10,960 --> 00:08:16,580
lastly<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to want to set</font>

191
00:08:12,770 --> 00:08:20,150
boundaries on your quantifiers so we're

192
00:08:16,580 --> 00:08:21,890
used<font color="#E5E5E5"> to using pluses</font><font color="#CCCCCC"> Stars</font><font color="#E5E5E5"> unlimited</font>

193
00:08:20,150 --> 00:08:24,349
quantifiers<font color="#CCCCCC"> because they're easy</font><font color="#E5E5E5"> and</font>

194
00:08:21,890 --> 00:08:26,719
they're fast but sometimes<font color="#CCCCCC"> that can</font><font color="#E5E5E5"> be</font>

195
00:08:24,350 --> 00:08:30,350
damaging to<font color="#E5E5E5"> the regex engine it can take</font>

196
00:08:26,720 --> 00:08:33,740
a catastrophic<font color="#E5E5E5"> amount of time so we're</font>

197
00:08:30,350 --> 00:08:35,870
going<font color="#E5E5E5"> to want to finite this thought</font>

198
00:08:33,740 --> 00:08:38,690
process<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little</font><font color="#CCCCCC"> bit I mean what's the</font>

199
00:08:35,870 --> 00:08:41,030
likelihood<font color="#CCCCCC"> of a normal</font><font color="#E5E5E5"> email address</font>

200
00:08:38,690 --> 00:08:44,360
being more than 64 characters<font color="#E5E5E5"> pretty</font>

201
00:08:41,030 --> 00:08:45,980
darn low so iterate through it test<font color="#E5E5E5"> it</font>

202
00:08:44,360 --> 00:08:47,350
make sure<font color="#E5E5E5"> it makes sense</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> obviously</font>

203
00:08:45,980 --> 00:08:49,640
<font color="#E5E5E5">there's going to be some of those</font>

204
00:08:47,350 --> 00:08:54,500
ridiculously long email addresses from

205
00:08:49,640 --> 00:08:57,830
the the<font color="#CCCCCC"> spam campaigns</font><font color="#E5E5E5"> but for our</font>

206
00:08:54,500 --> 00:09:00,380
incident<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> to 64 may be reasonable let</font>

207
00:08:57,830 --> 00:09:01,970
me prove<font color="#CCCCCC"> this to you so I'm going</font>

208
00:09:00,380 --> 00:09:04,010
<font color="#E5E5E5">through a data set here and I'm just</font>

209
00:09:01,970 --> 00:09:06,680
pulling<font color="#E5E5E5"> out email right and I'm using a</font>

210
00:09:04,010 --> 00:09:07,700
generic<font color="#E5E5E5"> one easy to understand</font><font color="#CCCCCC"> and here</font>

211
00:09:06,680 --> 00:09:10,310
we go

212
00:09:07,700 --> 00:09:11,839
<font color="#E5E5E5">it's extracted it but it's extracted way</font>

213
00:09:10,310 --> 00:09:14,420
too much so I need to clarify<font color="#E5E5E5"> this</font>

214
00:09:11,839 --> 00:09:17,810
regular expression right so I'm<font color="#E5E5E5"> going to</font>

215
00:09:14,420 --> 00:09:20,089
add in some<font color="#E5E5E5"> exclusions but now I've got</font>

216
00:09:17,810 --> 00:09:21,589
this<font color="#CCCCCC"> timeout if you haven't seen this</font>

217
00:09:20,089 --> 00:09:22,790
website<font color="#CCCCCC"> before this is probably my</font>

218
00:09:21,589 --> 00:09:26,330
favorite<font color="#E5E5E5"> website for messing with</font>

219
00:09:22,790 --> 00:09:28,760
regular<font color="#CCCCCC"> expressions reg x101 comm you</font>

220
00:09:26,330 --> 00:09:30,620
can change the type of engine you're

221
00:09:28,760 --> 00:09:32,030
working with it's really really

222
00:09:30,620 --> 00:09:35,660
<font color="#E5E5E5">effective</font><font color="#CCCCCC"> you can even save your</font>

223
00:09:32,030 --> 00:09:37,850
extractions<font color="#E5E5E5"> highly recommend it so we</font>

224
00:09:35,660 --> 00:09:41,480
got our exclusions in we're pretty sure

225
00:09:37,850 --> 00:09:43,910
<font color="#E5E5E5">right but it timed out so let's add</font><font color="#CCCCCC"> some</font>

226
00:09:41,480 --> 00:09:47,980
<font color="#E5E5E5">limiters on there now we've add that</font><font color="#CCCCCC"> one</font>

227
00:09:43,910 --> 00:09:47,980
to<font color="#CCCCCC"> 30</font><font color="#E5E5E5"> and it's completed</font>

228
00:09:49,990 --> 00:09:55,310
we also want to<font color="#E5E5E5"> focus on the negative so</font>

229
00:09:53,300 --> 00:09:56,990
when you're iterating through your

230
00:09:55,310 --> 00:09:59,000
<font color="#E5E5E5">development of regular expressions we</font>

231
00:09:56,990 --> 00:10:01,279
tend to think of all the possible

232
00:09:59,000 --> 00:10:03,709
characters that we want<font color="#E5E5E5"> to bring into</font>

233
00:10:01,279 --> 00:10:05,630
<font color="#CCCCCC">this capture this actually makes it</font>

234
00:10:03,709 --> 00:10:08,268
really difficult to<font color="#E5E5E5"> troubleshoot because</font>

235
00:10:05,630 --> 00:10:10,279
your expressions get long<font color="#CCCCCC"> they get</font>

236
00:10:08,269 --> 00:10:12,620
complicated<font color="#E5E5E5"> and then you have to think</font>

237
00:10:10,279 --> 00:10:15,620
of all<font color="#CCCCCC"> of those edge cases that just</font>

238
00:10:12,620 --> 00:10:18,019
aren't in a normal instance for example

239
00:10:15,620 --> 00:10:22,339
<font color="#E5E5E5">how many people</font><font color="#CCCCCC"> have a plus and</font><font color="#E5E5E5"> their</font>

240
00:10:18,019 --> 00:10:24,680
email address<font color="#E5E5E5"> you kind of do because per</font>

241
00:10:22,339 --> 00:10:26,209
the RFC you're allowed to<font color="#CCCCCC"> use a plus and</font>

242
00:10:24,680 --> 00:10:28,130
you're allowed<font color="#E5E5E5"> to change whatever comes</font>

243
00:10:26,209 --> 00:10:30,439
<font color="#CCCCCC">after</font><font color="#E5E5E5"> the plus and it's it should still</font>

244
00:10:28,130 --> 00:10:31,699
go to the<font color="#CCCCCC"> same mailbox Google is</font><font color="#E5E5E5"> one of</font>

245
00:10:30,440 --> 00:10:34,130
the only email providers that actually

246
00:10:31,699 --> 00:10:36,380
takes advantage of<font color="#E5E5E5"> that feature and if</font>

247
00:10:34,130 --> 00:10:39,769
you're not accounting<font color="#CCCCCC"> for a rarely used</font>

248
00:10:36,380 --> 00:10:41,930
<font color="#E5E5E5">character in email</font><font color="#CCCCCC"> you might miss it</font><font color="#E5E5E5"> but</font>

249
00:10:39,769 --> 00:10:44,329
if you exclude characters that you know

250
00:10:41,930 --> 00:10:49,160
will never<font color="#E5E5E5"> be part of the</font><font color="#CCCCCC"> email address</font>

251
00:10:44,329 --> 00:10:51,529
such as<font color="#CCCCCC"> whitespace</font><font color="#E5E5E5"> you're good to go so</font>

252
00:10:49,160 --> 00:10:53,569
let's<font color="#E5E5E5"> walk through this one more time so</font>

253
00:10:51,529 --> 00:10:55,339
again<font color="#CCCCCC"> I'm trying to extract email</font>

254
00:10:53,569 --> 00:10:56,810
<font color="#CCCCCC">dresses I'm getting too</font><font color="#E5E5E5"> much so I'm</font>

255
00:10:55,339 --> 00:11:00,290
gonna get it right<font color="#CCCCCC"> through this to clean</font>

256
00:10:56,810 --> 00:11:02,869
this up<font color="#E5E5E5"> so I know</font><font color="#CCCCCC"> that I should</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> be</font>

257
00:11:00,290 --> 00:11:05,959
capturing any back slashes<font color="#E5E5E5"> so that</font>

258
00:11:02,870 --> 00:11:07,970
capture that fixes the<font color="#E5E5E5"> back end it's</font>

259
00:11:05,959 --> 00:11:10,339
pretty<font color="#E5E5E5"> easy and I haven't had to overly</font>

260
00:11:07,970 --> 00:11:14,509
complicate my extraction<font color="#E5E5E5"> to get this</font>

261
00:11:10,339 --> 00:11:15,980
<font color="#CCCCCC">information now when I scroll down even</font>

262
00:11:14,509 --> 00:11:17,720
further I see that I've actually got

263
00:11:15,980 --> 00:11:20,600
multiple email<font color="#CCCCCC"> addresses and</font><font color="#E5E5E5"> I may need</font>

264
00:11:17,720 --> 00:11:23,930
<font color="#E5E5E5">a few more exclusions such as quotations</font>

265
00:11:20,600 --> 00:11:28,670
<font color="#E5E5E5">commas</font><font color="#CCCCCC"> square brackets</font><font color="#E5E5E5"> so I've added</font>

266
00:11:23,930 --> 00:11:31,149
those<font color="#CCCCCC"> in now I'm going to I</font><font color="#E5E5E5"> don't have</font>

267
00:11:28,670 --> 00:11:33,259
<font color="#E5E5E5">any limiters on here I'm using</font><font color="#CCCCCC"> that Plus</font>

268
00:11:31,149 --> 00:11:35,420
which allows you<font color="#E5E5E5"> to go an unlimited</font>

269
00:11:33,259 --> 00:11:37,730
<font color="#CCCCCC">amount of</font><font color="#E5E5E5"> time and right now</font><font color="#CCCCCC"> it's taking</font>

270
00:11:35,420 --> 00:11:41,269
<font color="#E5E5E5">one point two one seconds to complete</font>

271
00:11:37,730 --> 00:11:44,209
with over a million steps<font color="#CCCCCC"> if I keep the</font>

272
00:11:41,269 --> 00:11:47,720
same extraction but I just add some

273
00:11:44,209 --> 00:11:51,179
limiters it's now down 192 milliseconds

274
00:11:47,720 --> 00:11:55,529
so think fine knife<font color="#E5E5E5"> you're gonna save</font>

275
00:11:51,179 --> 00:11:57,629
yourself<font color="#E5E5E5"> and your sim a lot of time now</font>

276
00:11:55,529 --> 00:11:59,009
this was<font color="#CCCCCC"> Splunk specific for those</font><font color="#E5E5E5"> of</font>

277
00:11:57,629 --> 00:12:01,290
you who like to<font color="#E5E5E5"> use</font><font color="#CCCCCC"> funk you may not</font>

278
00:11:59,009 --> 00:12:05,339
have known<font color="#CCCCCC"> that the Rex</font><font color="#E5E5E5"> command has a</font>

279
00:12:01,290 --> 00:12:08,040
max underscore match field<font color="#E5E5E5"> so if you add</font>

280
00:12:05,339 --> 00:12:09,629
<font color="#CCCCCC">that to</font><font color="#E5E5E5"> your spunk you can actually</font><font color="#CCCCCC"> get</font>

281
00:12:08,040 --> 00:12:12,240
<font color="#E5E5E5">multi value fields pretty nice pretty</font>

282
00:12:09,629 --> 00:12:14,990
<font color="#E5E5E5">handy all right so let me break</font><font color="#CCCCCC"> this</font>

283
00:12:12,240 --> 00:12:17,339
down<font color="#E5E5E5"> we've got our capture group email</font>

284
00:12:14,990 --> 00:12:19,199
<font color="#E5E5E5">I've got the character</font><font color="#CCCCCC"> class</font><font color="#E5E5E5"> for the</font>

285
00:12:17,339 --> 00:12:21,420
<font color="#E5E5E5">mailbox name that's the section</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

286
00:12:19,199 --> 00:12:23,040
email<font color="#CCCCCC"> before the @ sign</font><font color="#E5E5E5"> and these are</font>

287
00:12:21,420 --> 00:12:25,829
all the<font color="#CCCCCC"> characters that</font><font color="#E5E5E5"> should never be</font>

288
00:12:23,040 --> 00:12:28,740
<font color="#CCCCCC">a</font><font color="#E5E5E5"> part of that including the @ sign</font>

289
00:12:25,829 --> 00:12:30,420
and based on<font color="#CCCCCC"> my data set I determined</font>

290
00:12:28,740 --> 00:12:34,920
that there's no more than 30<font color="#E5E5E5"> characters</font>

291
00:12:30,420 --> 00:12:37,079
<font color="#E5E5E5">I've got my anchor my @ sign and again</font>

292
00:12:34,920 --> 00:12:39,809
an exclusion group for the<font color="#CCCCCC"> backside that</font>

293
00:12:37,079 --> 00:12:41,989
<font color="#E5E5E5">domain</font><font color="#CCCCCC"> name and in</font><font color="#E5E5E5"> this case I</font><font color="#CCCCCC"> already</font>

294
00:12:39,809 --> 00:12:46,559
<font color="#E5E5E5">have a limiter up here so I used a</font>

295
00:12:41,990 --> 00:12:48,749
unlimited repeater at the end<font color="#E5E5E5"> now this</font>

296
00:12:46,559 --> 00:12:51,600
is a weird<font color="#CCCCCC"> Splunk thing if you want to</font>

297
00:12:48,749 --> 00:12:53,850
<font color="#E5E5E5">capture a backslash you can't just</font>

298
00:12:51,600 --> 00:12:57,299
escape it you have to double escape it

299
00:12:53,850 --> 00:13:00,029
so it's<font color="#CCCCCC"> for back slashes</font><font color="#E5E5E5"> weird</font><font color="#CCCCCC"> except it</font>

300
00:12:57,299 --> 00:13:01,319
will<font color="#E5E5E5"> move on all right some of</font><font color="#CCCCCC"> the</font>

301
00:13:00,029 --> 00:13:04,279
things<font color="#E5E5E5"> that you may want</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> to pay</font>

302
00:13:01,319 --> 00:13:06,628
attention<font color="#CCCCCC"> to catastrophic backtracking</font>

303
00:13:04,279 --> 00:13:08,519
<font color="#E5E5E5">repeating a capturing a group</font>

304
00:13:06,629 --> 00:13:09,869
unintentionally<font color="#E5E5E5"> I'm not</font><font color="#CCCCCC"> gonna go into</font>

305
00:13:08,519 --> 00:13:11,939
<font color="#E5E5E5">these but I highly recommend reading</font>

306
00:13:09,869 --> 00:13:13,679
<font color="#E5E5E5">into them it's rare that you would run</font>

307
00:13:11,939 --> 00:13:15,660
into<font color="#CCCCCC"> this but it's worth taking note of</font>

308
00:13:13,679 --> 00:13:18,119
so I recommend this website regular

309
00:13:15,660 --> 00:13:21,389
<font color="#E5E5E5">expressions</font><font color="#CCCCCC"> dot info now one thing I</font>

310
00:13:18,119 --> 00:13:24,329
will talk<font color="#CCCCCC"> about is assuming that all of</font>

311
00:13:21,389 --> 00:13:28,610
<font color="#CCCCCC">your results are going to be</font><font color="#E5E5E5"> captured so</font>

312
00:13:24,329 --> 00:13:28,609
let's talk<font color="#E5E5E5"> through</font><font color="#CCCCCC"> some common use cases</font>

313
00:13:29,550 --> 00:13:34,979
<font color="#E5E5E5">often times my team has to go through HR</font>

314
00:13:32,730 --> 00:13:36,990
requests where we need<font color="#E5E5E5"> to assess what</font>

315
00:13:34,980 --> 00:13:38,430
people have been<font color="#CCCCCC"> doing on the on the web</font>

316
00:13:36,990 --> 00:13:40,920
and whether or not<font color="#E5E5E5"> as a professional</font>

317
00:13:38,430 --> 00:13:42,239
part of their job<font color="#E5E5E5"> so going through user</font>

318
00:13:40,920 --> 00:13:47,069
activity what does their search history

319
00:13:42,240 --> 00:13:50,100
look like so<font color="#CCCCCC"> you know in Splunk we're</font>

320
00:13:47,070 --> 00:13:53,670
able<font color="#E5E5E5"> to pull in URL activity and this</font>

321
00:13:50,100 --> 00:13:55,680
can be a kind of burdensome to crawl

322
00:13:53,670 --> 00:13:57,810
through now<font color="#CCCCCC"> spunk has some features that</font>

323
00:13:55,680 --> 00:13:59,160
<font color="#CCCCCC">can automatically</font><font color="#E5E5E5"> pull out the</font><font color="#CCCCCC"> domain</font>

324
00:13:57,810 --> 00:14:01,199
name but<font color="#E5E5E5"> what if you don't have that</font>

325
00:13:59,160 --> 00:14:03,870
<font color="#E5E5E5">what if you want to just distill down</font>

326
00:14:01,200 --> 00:14:05,310
the<font color="#E5E5E5"> domain name so again we've got</font><font color="#CCCCCC"> our</font>

327
00:14:03,870 --> 00:14:07,830
capture<font color="#E5E5E5"> group we've talked</font><font color="#CCCCCC"> about this</font>

328
00:14:05,310 --> 00:14:09,540
before<font color="#CCCCCC"> we've run the Rex command and</font>

329
00:14:07,830 --> 00:14:13,020
we've distilled down<font color="#E5E5E5"> all that data to</font>

330
00:14:09,540 --> 00:14:16,589
now 136 unique domains the users<font color="#E5E5E5"> visited</font>

331
00:14:13,020 --> 00:14:20,250
<font color="#CCCCCC">- and</font><font color="#E5E5E5"> maybe this person really</font><font color="#CCCCCC"> likes to</font>

332
00:14:16,590 --> 00:14:21,960
drink<font color="#CCCCCC"> beer I don't know</font><font color="#E5E5E5"> you know we have</font>

333
00:14:20,250 --> 00:14:24,540
beer buyers<font color="#E5E5E5"> of public so that might</font>

334
00:14:21,960 --> 00:14:26,610
actually be<font color="#CCCCCC"> part of their job</font><font color="#E5E5E5"> but</font>

335
00:14:24,540 --> 00:14:28,380
<font color="#E5E5E5">another element is what's the users</font>

336
00:14:26,610 --> 00:14:29,400
intent<font color="#CCCCCC"> and this one's kind of fun</font>

337
00:14:28,380 --> 00:14:31,530
because<font color="#E5E5E5"> this is where you get to see</font>

338
00:14:29,400 --> 00:14:34,290
<font color="#CCCCCC">hands</font><font color="#E5E5E5"> on keyboard can you demonstrate</font>

339
00:14:31,530 --> 00:14:37,140
<font color="#E5E5E5">that the user was wanting</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get to the</font>

340
00:14:34,290 --> 00:14:39,150
data that<font color="#CCCCCC"> they happen to see well search</font>

341
00:14:37,140 --> 00:14:40,439
history really really helps<font color="#E5E5E5"> so it's a</font>

342
00:14:39,150 --> 00:14:41,610
<font color="#E5E5E5">little hard to see here</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> this these</font>

343
00:14:40,440 --> 00:14:45,300
are<font color="#E5E5E5"> all Google results and it's</font>

344
00:14:41,610 --> 00:14:48,540
ridiculously long Google strings so we

345
00:14:45,300 --> 00:14:52,020
start to bring in the information<font color="#E5E5E5"> and we</font>

346
00:14:48,540 --> 00:14:53,760
use<font color="#E5E5E5"> the Q equals as the anchor run our</font>

347
00:14:52,020 --> 00:14:57,630
search string and we notice that<font color="#E5E5E5"> the end</font>

348
00:14:53,760 --> 00:14:59,550
of it<font color="#CCCCCC"> that</font><font color="#E5E5E5"> ampersand is that end anchor</font>

349
00:14:57,630 --> 00:15:00,210
so we exclude it and we<font color="#CCCCCC"> just bring</font><font color="#E5E5E5"> in</font>

350
00:14:59,550 --> 00:15:02,910
everything<font color="#E5E5E5"> else</font>

351
00:15:00,210 --> 00:15:03,960
Splunk has a feature you<font color="#CCCCCC"> our URL decode</font>

352
00:15:02,910 --> 00:15:08,069
you don't really<font color="#E5E5E5"> need</font><font color="#CCCCCC"> it</font>

353
00:15:03,960 --> 00:15:09,870
and now<font color="#CCCCCC"> I've got hands on keyboard</font><font color="#E5E5E5"> what</font>

354
00:15:08,070 --> 00:15:11,850
the person was actively searching

355
00:15:09,870 --> 00:15:13,830
through<font color="#E5E5E5"> Google and depending on how</font><font color="#CCCCCC"> your</font>

356
00:15:11,850 --> 00:15:18,500
squid logs your proxy logs are coming in

357
00:15:13,830 --> 00:15:20,520
because<font color="#E5E5E5"> of how Google is every keystroke</font>

358
00:15:18,500 --> 00:15:22,230
presenting that and giving you search

359
00:15:20,520 --> 00:15:23,790
results back you're going<font color="#E5E5E5"> to get proxy</font>

360
00:15:22,230 --> 00:15:26,130
logs for every<font color="#E5E5E5"> single keystroke and</font>

361
00:15:23,790 --> 00:15:29,660
<font color="#CCCCCC">you're going to get as the person's</font>

362
00:15:26,130 --> 00:15:32,180
typing what they're looking for

363
00:15:29,660 --> 00:15:34,969
so big<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> an instance</font><font color="#E5E5E5"> where we</font>

364
00:15:32,180 --> 00:15:36,949
developed<font color="#E5E5E5"> this query and we said hey we</font>

365
00:15:34,970 --> 00:15:39,590
<font color="#CCCCCC">think we got everything we</font><font color="#E5E5E5"> tested it we</font>

366
00:15:36,950 --> 00:15:41,060
realized we did not get<font color="#E5E5E5"> everything so</font>

367
00:15:39,590 --> 00:15:42,350
that's<font color="#E5E5E5"> one of those pitfalls</font><font color="#CCCCCC"> don't</font>

368
00:15:41,060 --> 00:15:43,670
<font color="#E5E5E5">assume just</font><font color="#CCCCCC"> because you're getting</font>

369
00:15:42,350 --> 00:15:46,340
<font color="#E5E5E5">results that you're</font><font color="#CCCCCC"> getting all the</font>

370
00:15:43,670 --> 00:15:47,900
results<font color="#E5E5E5"> in this case we had two</font>

371
00:15:46,340 --> 00:15:49,910
different<font color="#CCCCCC"> elements that being likes to</font>

372
00:15:47,900 --> 00:15:52,069
use so<font color="#E5E5E5"> we have two</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> sets of</font>

373
00:15:49,910 --> 00:15:55,520
anchors we run the search string<font color="#E5E5E5"> run it</font>

374
00:15:52,070 --> 00:15:57,950
<font color="#E5E5E5">again</font><font color="#CCCCCC"> and here you</font><font color="#E5E5E5"> can actually see</font>

375
00:15:55,520 --> 00:16:00,270
<font color="#CCCCCC">people hands</font><font color="#E5E5E5"> on keyboard doing their</font>

376
00:15:57,950 --> 00:16:03,350
favorite Bing search looking for<font color="#CCCCCC"> Google</font>

377
00:16:00,270 --> 00:16:03,350
[Music]

378
00:16:03,520 --> 00:16:07,640
words near other words<font color="#CCCCCC"> so this was</font>

379
00:16:05,900 --> 00:16:09,800
<font color="#CCCCCC">something that</font><font color="#E5E5E5"> I was playing with and I</font>

380
00:16:07,640 --> 00:16:12,199
<font color="#CCCCCC">almost scrapped it and then my</font><font color="#E5E5E5"> partner</font>

381
00:16:09,800 --> 00:16:14,449
who's not<font color="#E5E5E5"> here today</font><font color="#CCCCCC"> my partner found a</font>

382
00:16:12,200 --> 00:16:17,180
good really good<font color="#E5E5E5"> use</font><font color="#CCCCCC"> for this</font><font color="#E5E5E5"> so we were</font>

383
00:16:14,450 --> 00:16:19,790
<font color="#E5E5E5">trying to find instances for the word</font>

384
00:16:17,180 --> 00:16:22,609
username near the word password<font color="#E5E5E5"> because</font>

385
00:16:19,790 --> 00:16:24,319
<font color="#E5E5E5">maybe we've got email logs and maybe we</font>

386
00:16:22,610 --> 00:16:26,660
want to see passwords in the clear or

387
00:16:24,320 --> 00:16:28,190
maybe we've got web application logs and

388
00:16:26,660 --> 00:16:31,510
<font color="#E5E5E5">we want to see if that data is</font><font color="#CCCCCC"> actually</font>

389
00:16:28,190 --> 00:16:34,480
<font color="#CCCCCC">being transited in an unencrypted packet</font>

390
00:16:31,510 --> 00:16:37,610
<font color="#E5E5E5">so in this case we were looking through</font>

391
00:16:34,480 --> 00:16:41,360
SMTP logs and we<font color="#CCCCCC"> actually found an</font>

392
00:16:37,610 --> 00:16:42,860
instance of<font color="#CCCCCC"> Kay lager fields username</font>

393
00:16:41,360 --> 00:16:45,560
and beer<font color="#CCCCCC"> lols</font>

394
00:16:42,860 --> 00:16:47,180
<font color="#E5E5E5">so a little easier to see here so this</font>

395
00:16:45,560 --> 00:16:49,250
is kind of<font color="#E5E5E5"> a problem and if this is a</font>

396
00:16:47,180 --> 00:16:52,310
persistent<font color="#CCCCCC"> problem maybe we want</font><font color="#E5E5E5"> to</font>

397
00:16:49,250 --> 00:16:54,260
<font color="#CCCCCC">actually extract out the information</font><font color="#E5E5E5"> so</font>

398
00:16:52,310 --> 00:16:57,770
<font color="#CCCCCC">that we know what users we need to worry</font>

399
00:16:54,260 --> 00:16:58,370
<font color="#CCCCCC">about doing</font><font color="#E5E5E5"> the password reset on so we</font>

400
00:16:57,770 --> 00:17:00,980
<font color="#E5E5E5">worked through that</font>

401
00:16:58,370 --> 00:17:03,890
hey based on this email<font color="#CCCCCC"> traffic just</font>

402
00:17:00,980 --> 00:17:06,650
<font color="#CCCCCC">username</font><font color="#E5E5E5"> password extract the</font>

403
00:17:03,890 --> 00:17:10,459
information<font color="#CCCCCC"> set our anchors</font><font color="#E5E5E5"> set our</font>

404
00:17:06,650 --> 00:17:11,120
limiters and here we actually<font color="#CCCCCC"> have K</font>

405
00:17:10,459 --> 00:17:15,370
lager field

406
00:17:11,119 --> 00:17:18,530
beer<font color="#E5E5E5"> lols and the extraction decoded in</font>

407
00:17:15,369 --> 00:17:22,339
a large-scale<font color="#CCCCCC"> attack this could be</font>

408
00:17:18,530 --> 00:17:24,829
really really<font color="#CCCCCC"> useful</font><font color="#E5E5E5"> the previous talker</font>

409
00:17:22,339 --> 00:17:26,179
in this room mentioned the scam<font color="#E5E5E5"> that's</font>

410
00:17:24,829 --> 00:17:28,720
going around<font color="#E5E5E5"> is kind</font><font color="#CCCCCC"> of old but</font><font color="#E5E5E5"> it's</font>

411
00:17:26,180 --> 00:17:30,370
come right<font color="#E5E5E5"> back around again</font><font color="#CCCCCC"> hey</font>

412
00:17:28,720 --> 00:17:31,659
this is your<font color="#CCCCCC"> username and</font><font color="#E5E5E5"> I have your</font>

413
00:17:30,370 --> 00:17:33,010
<font color="#CCCCCC">password and I've seen all</font><font color="#E5E5E5"> those dirty</font>

414
00:17:31,659 --> 00:17:34,750
<font color="#E5E5E5">things</font><font color="#CCCCCC"> you've done on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Internet right</font>

415
00:17:33,010 --> 00:17:38,440
I just<font color="#CCCCCC"> got one of my</font><font color="#E5E5E5"> Gmail the other day</font>

416
00:17:34,750 --> 00:17:40,690
and like that you'd<font color="#E5E5E5"> have mine boring I'm</font>

417
00:17:38,440 --> 00:17:41,080
really boring at home<font color="#E5E5E5"> so good luck with</font>

418
00:17:40,690 --> 00:17:44,320
<font color="#CCCCCC">that one</font>

419
00:17:41,080 --> 00:17:46,960
<font color="#E5E5E5">but if that type</font><font color="#CCCCCC"> of scam is coming into</font>

420
00:17:44,320 --> 00:17:49,149
<font color="#E5E5E5">your corporate</font><font color="#CCCCCC"> internet and those</font><font color="#E5E5E5"> are</font>

421
00:17:46,960 --> 00:17:50,710
actual passwords which the one that hit

422
00:17:49,150 --> 00:17:51,549
my<font color="#CCCCCC"> gmail was an actual password from</font>

423
00:17:50,710 --> 00:17:53,279
like<font color="#CCCCCC"> 10 years ago</font>

424
00:17:51,549 --> 00:17:55,570
<font color="#E5E5E5">pretty sure was from the Adobe breach</font>

425
00:17:53,279 --> 00:17:57,970
<font color="#CCCCCC">that may be</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you want</font><font color="#CCCCCC"> to</font>

426
00:17:55,570 --> 00:17:59,500
start<font color="#CCCCCC"> digging through the logs to get</font>

427
00:17:57,970 --> 00:18:02,230
<font color="#E5E5E5">this information because if those</font>

428
00:17:59,500 --> 00:18:04,059
passwords<font color="#E5E5E5"> are still legit that</font><font color="#CCCCCC"> you're</font>

429
00:18:02,230 --> 00:18:05,110
your associates are using you're going

430
00:18:04,059 --> 00:18:07,990
to need to go<font color="#E5E5E5"> through the password</font>

431
00:18:05,110 --> 00:18:09,939
resets now<font color="#CCCCCC"> Splunk has a feature that we</font>

432
00:18:07,990 --> 00:18:11,860
wanted<font color="#E5E5E5"> to highlight you</font><font color="#CCCCCC"> can actually do</font>

433
00:18:09,940 --> 00:18:14,200
the<font color="#CCCCCC"> due masking because maybe you don't</font>

434
00:18:11,860 --> 00:18:15,580
<font color="#CCCCCC">want</font><font color="#E5E5E5"> to actually give away the password</font>

435
00:18:14,200 --> 00:18:18,429
in the logs<font color="#E5E5E5"> that you submit up to the</font>

436
00:18:15,580 --> 00:18:20,889
<font color="#E5E5E5">management so working around parsing</font>

437
00:18:18,429 --> 00:18:22,980
errors<font color="#E5E5E5"> for those of you who love</font><font color="#CCCCCC"> Splunk</font>

438
00:18:20,890 --> 00:18:25,510
will probably run<font color="#CCCCCC"> into this quite a bit</font>

439
00:18:22,980 --> 00:18:28,690
<font color="#CCCCCC">parsing errors can be the bane of an</font>

440
00:18:25,510 --> 00:18:30,760
incident responders<font color="#E5E5E5"> experience so we</font>

441
00:18:28,690 --> 00:18:32,470
were<font color="#E5E5E5"> doing some analysis on a sample</font>

442
00:18:30,760 --> 00:18:34,960
data set<font color="#CCCCCC"> that Splunk gave us and</font><font color="#E5E5E5"> we</font>

443
00:18:32,470 --> 00:18:36,250
thought we<font color="#E5E5E5"> had</font><font color="#CCCCCC"> everything here and we</font>

444
00:18:34,960 --> 00:18:39,460
were a<font color="#E5E5E5"> little confused why are there</font>

445
00:18:36,250 --> 00:18:41,799
only<font color="#E5E5E5"> three domains in this data set so</font>

446
00:18:39,460 --> 00:18:46,020
when we started<font color="#CCCCCC"> digging in we realized</font>

447
00:18:41,799 --> 00:18:49,080
<font color="#CCCCCC">that no we've got some other</font><font color="#E5E5E5"> domains and</font>

448
00:18:46,020 --> 00:18:52,450
we should probably<font color="#E5E5E5"> take assess this</font>

449
00:18:49,080 --> 00:18:55,620
<font color="#E5E5E5">fidelity of these logs a little more so</font>

450
00:18:52,450 --> 00:19:01,539
we<font color="#CCCCCC"> did our extraction</font><font color="#E5E5E5"> again anchors</font>

451
00:18:55,620 --> 00:19:04,779
limiters<font color="#CCCCCC"> I added an HTTPS here for that</font>

452
00:19:01,539 --> 00:19:07,000
self<font color="#E5E5E5"> contextualization</font><font color="#CCCCCC"> and now we're</font>

453
00:19:04,779 --> 00:19:09,159
getting<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot more</font><font color="#CCCCCC"> results</font><font color="#E5E5E5"> a lot more</font>

454
00:19:07,000 --> 00:19:11,919
domains<font color="#CCCCCC"> no longer depending on</font>

455
00:19:09,159 --> 00:19:14,140
potentially faulty<font color="#E5E5E5"> automatic extractions</font>

456
00:19:11,919 --> 00:19:18,250
<font color="#E5E5E5">and in this case one of the domains that</font>

457
00:19:14,140 --> 00:19:21,460
<font color="#CCCCCC">got highlighted right away was this one</font>

458
00:19:18,250 --> 00:19:22,899
server org slash malware -<font color="#E5E5E5"> download this</font>

459
00:19:21,460 --> 00:19:27,429
was<font color="#E5E5E5"> in the middle of one</font><font color="#CCCCCC"> of Splunk</font>

460
00:19:22,899 --> 00:19:31,238
sponsored<font color="#CCCCCC"> CTS</font><font color="#E5E5E5"> sequel injection</font>

461
00:19:27,429 --> 00:19:32,859
so I'm<font color="#CCCCCC"> assuming everybody</font><font color="#E5E5E5"> here knows</font>

462
00:19:31,239 --> 00:19:35,559
sequel injection at<font color="#CCCCCC"> the spunk</font><font color="#E5E5E5"> conference</font>

463
00:19:32,859 --> 00:19:37,239
we couldn't make<font color="#E5E5E5"> that assumption</font><font color="#CCCCCC"> but the</font>

464
00:19:35,559 --> 00:19:39,129
point of<font color="#E5E5E5"> this is you've got an alert</font>

465
00:19:37,239 --> 00:19:44,589
<font color="#E5E5E5">you're starting somewhere remember this</font>

466
00:19:39,129 --> 00:19:49,709
is post alert now in this<font color="#E5E5E5"> case we found</font>

467
00:19:44,589 --> 00:19:53,710
<font color="#E5E5E5">that there was an attack against this</font>

468
00:19:49,710 --> 00:19:55,899
this<font color="#E5E5E5"> function being used and an overload</font>

469
00:19:53,710 --> 00:19:57,849
<font color="#E5E5E5">to that function</font><font color="#CCCCCC"> was allowing a sequel</font>

470
00:19:55,899 --> 00:20:00,699
query to be injected in order to dump

471
00:19:57,849 --> 00:20:03,279
information so after the attacker

472
00:20:00,700 --> 00:20:07,710
submitted this this was<font color="#E5E5E5"> submitted back</font>

473
00:20:03,279 --> 00:20:07,710
to the attacker<font color="#E5E5E5"> providing the</font><font color="#CCCCCC"> username</font>

474
00:20:08,009 --> 00:20:13,149
so what we're trying<font color="#E5E5E5"> to ask him</font><font color="#CCCCCC"> out here</font>

475
00:20:11,229 --> 00:20:15,339
is<font color="#E5E5E5"> we've demonstrated we see that</font>

476
00:20:13,149 --> 00:20:17,799
<font color="#E5E5E5">there's a sequel injection attack what</font>

477
00:20:15,339 --> 00:20:19,629
<font color="#E5E5E5">is the scope of this attack how many</font>

478
00:20:17,799 --> 00:20:22,690
<font color="#CCCCCC">usernames how many</font><font color="#E5E5E5"> passwords what else</font>

479
00:20:19,629 --> 00:20:25,119
has<font color="#E5E5E5"> been leaked out so we do our</font>

480
00:20:22,690 --> 00:20:27,969
extraction<font color="#E5E5E5"> we use that function as our</font>

481
00:20:25,119 --> 00:20:29,889
anchor and we use the angle bracket as

482
00:20:27,969 --> 00:20:31,539
the rear anchor we pull<font color="#CCCCCC"> everything else</font>

483
00:20:29,889 --> 00:20:34,238
<font color="#E5E5E5">in just so we can start pulling in these</font>

484
00:20:31,539 --> 00:20:35,979
sequel injections for analysis<font color="#E5E5E5"> so here</font>

485
00:20:34,239 --> 00:20:37,479
we can see over<font color="#CCCCCC"> and over and over</font><font color="#E5E5E5"> the</font>

486
00:20:35,979 --> 00:20:40,659
subsequent sequel injections that<font color="#E5E5E5"> we</font>

487
00:20:37,479 --> 00:20:42,849
have so if you<font color="#E5E5E5"> look closely you can see</font>

488
00:20:40,659 --> 00:20:44,649
they're pulling password they're pulling

489
00:20:42,849 --> 00:20:46,450
salt<font color="#CCCCCC"> they're putting email</font><font color="#E5E5E5"> addresses</font>

490
00:20:44,649 --> 00:20:48,399
pulling<font color="#CCCCCC"> usernames okay that's</font>

491
00:20:46,450 --> 00:20:50,289
information<font color="#E5E5E5"> we want to know what about</font>

492
00:20:48,399 --> 00:20:52,988
<font color="#E5E5E5">the results</font><font color="#CCCCCC"> that were sent back to</font><font color="#E5E5E5"> the</font>

493
00:20:50,289 --> 00:20:54,820
user<font color="#CCCCCC"> so let's start</font><font color="#E5E5E5"> pulling that</font>

494
00:20:52,989 --> 00:20:59,919
<font color="#CCCCCC">information now we've got the XPath</font>

495
00:20:54,820 --> 00:21:02,349
syntax error as<font color="#CCCCCC"> the anchor and now we're</font>

496
00:20:59,919 --> 00:21:05,019
seeing exactly<font color="#CCCCCC"> what was</font><font color="#E5E5E5"> given back to</font>

497
00:21:02,349 --> 00:21:08,559
the attacker over here we see<font color="#E5E5E5"> both the</font>

498
00:21:05,019 --> 00:21:12,129
query<font color="#E5E5E5"> that was given and</font><font color="#CCCCCC"> the results</font><font color="#E5E5E5"> and</font>

499
00:21:08,559 --> 00:21:13,779
with a<font color="#CCCCCC"> bit of fancy Splunk foo we're</font>

500
00:21:12,129 --> 00:21:16,149
able<font color="#E5E5E5"> to table those results so we</font><font color="#CCCCCC"> can</font>

501
00:21:13,779 --> 00:21:19,509
see how<font color="#E5E5E5"> everything was</font><font color="#CCCCCC"> related together</font>

502
00:21:16,149 --> 00:21:22,748
<font color="#E5E5E5">so the</font><font color="#CCCCCC"> password hash the salt</font><font color="#E5E5E5"> the</font>

503
00:21:19,509 --> 00:21:23,710
<font color="#CCCCCC">username all of that jazz so a sequel</font>

504
00:21:22,749 --> 00:21:25,119
injection attack that you were

505
00:21:23,710 --> 00:21:26,820
<font color="#E5E5E5">vulnerable to and now you need to know</font>

506
00:21:25,119 --> 00:21:30,908
<font color="#E5E5E5">what you've been what</font><font color="#CCCCCC"> you've disclosed</font>

507
00:21:26,820 --> 00:21:32,889
<font color="#CCCCCC">much easier to analyze now you're not</font>

508
00:21:30,909 --> 00:21:35,320
<font color="#CCCCCC">going to be able</font><font color="#E5E5E5"> to use these regular</font>

509
00:21:32,889 --> 00:21:36,789
<font color="#CCCCCC">expressions cut and paste</font><font color="#E5E5E5"> that's not the</font>

510
00:21:35,320 --> 00:21:39,399
point<font color="#E5E5E5"> of this talk right the point of</font>

511
00:21:36,789 --> 00:21:40,710
this talk<font color="#CCCCCC"> is just develop based on</font><font color="#E5E5E5"> your</font>

512
00:21:39,399 --> 00:21:45,149
<font color="#E5E5E5">data set as fast</font>

513
00:21:40,710 --> 00:21:47,520
you can cross-site scripting cross-site

514
00:21:45,149 --> 00:21:49,168
scripting is starting to go away<font color="#CCCCCC"> they're</font>

515
00:21:47,520 --> 00:21:52,440
<font color="#E5E5E5">still definitely exposure on the</font>

516
00:21:49,169 --> 00:21:55,140
<font color="#CCCCCC">internet but simply it's a</font><font color="#E5E5E5"> script</font>

517
00:21:52,440 --> 00:21:58,110
embedded<font color="#E5E5E5"> somewhere either reflective or</font>

518
00:21:55,140 --> 00:22:01,440
resident and it injects code that wasn't

519
00:21:58,110 --> 00:22:03,689
supposed<font color="#E5E5E5"> to be running so skipping paths</font>

520
00:22:01,440 --> 00:22:05,730
<font color="#CCCCCC">that Splunk specific stuff we had an</font>

521
00:22:03,690 --> 00:22:07,860
alert<font color="#E5E5E5"> on a cross-site scripting and it</font>

522
00:22:05,730 --> 00:22:09,330
was obviously malicious because that

523
00:22:07,860 --> 00:22:10,260
<font color="#E5E5E5">organization was never going to have</font>

524
00:22:09,330 --> 00:22:13,710
<font color="#E5E5E5">Korean symbols</font>

525
00:22:10,260 --> 00:22:17,429
so the original<font color="#E5E5E5"> analysis was just look</font>

526
00:22:13,710 --> 00:22:19,380
for the word alert and filter out alert

527
00:22:17,429 --> 00:22:22,559
<font color="#CCCCCC">je s because that was really</font><font color="#E5E5E5"> really</font>

528
00:22:19,380 --> 00:22:25,020
common<font color="#E5E5E5"> and there were three results and</font>

529
00:22:22,559 --> 00:22:28,889
two of them were false positives<font color="#E5E5E5"> okay</font>

530
00:22:25,020 --> 00:22:30,779
let's try the regex way<font color="#E5E5E5"> so this time</font>

531
00:22:28,890 --> 00:22:33,919
we're<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> our anchors and we're</font>

532
00:22:30,779 --> 00:22:36,980
specifically<font color="#E5E5E5"> looking</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> script tag</font>

533
00:22:33,919 --> 00:22:39,380
or in this<font color="#E5E5E5"> case I'm sorry the code tag</font>

534
00:22:36,980 --> 00:22:41,669
<font color="#CCCCCC">because the code tag is what was being</font>

535
00:22:39,380 --> 00:22:44,309
taken<font color="#CCCCCC"> advantage of for the cross-site</font>

536
00:22:41,669 --> 00:22:47,730
scripting so here's our<font color="#E5E5E5"> regex code</font>

537
00:22:44,309 --> 00:22:49,980
equals<font color="#E5E5E5"> pull everything else so in this</font>

538
00:22:47,730 --> 00:22:53,029
case we<font color="#CCCCCC"> actually got more cross-site</font>

539
00:22:49,980 --> 00:22:57,809
scripting<font color="#E5E5E5"> it's that our true positives</font>

540
00:22:53,029 --> 00:23:00,090
just because we didn't<font color="#CCCCCC"> assume that it</font>

541
00:22:57,809 --> 00:23:04,020
required the<font color="#E5E5E5"> word alert in the</font>

542
00:23:00,090 --> 00:23:06,809
cross-site scripting attack now granted

543
00:23:04,020 --> 00:23:08,370
<font color="#E5E5E5">there's maybe non regex ways to do this</font>

544
00:23:06,809 --> 00:23:10,230
<font color="#E5E5E5">but</font><font color="#CCCCCC"> one of</font><font color="#E5E5E5"> the things I like about</font>

545
00:23:08,370 --> 00:23:15,389
regular<font color="#CCCCCC"> expressions is that you end</font><font color="#E5E5E5"> up</font>

546
00:23:10,230 --> 00:23:17,100
naming your fields<font color="#E5E5E5"> and so with</font>

547
00:23:15,390 --> 00:23:19,460
cross-site scripting your<font color="#E5E5E5"> field is now</font>

548
00:23:17,100 --> 00:23:22,139
cross-site scripting so a follow-on

549
00:23:19,460 --> 00:23:23,669
<font color="#E5E5E5">analyst knows what you're looking for</font>

550
00:23:22,140 --> 00:23:26,940
and<font color="#E5E5E5"> what you're</font><font color="#CCCCCC"> anticipating in these</font>

551
00:23:23,669 --> 00:23:28,980
results<font color="#E5E5E5"> working with</font><font color="#CCCCCC"> sis Mon all right</font>

552
00:23:26,940 --> 00:23:32,250
<font color="#E5E5E5">who here has deployed system onto their</font>

553
00:23:28,980 --> 00:23:33,659
<font color="#E5E5E5">Windows environment I highly recommend</font>

554
00:23:32,250 --> 00:23:35,820
you deploy<font color="#E5E5E5"> stencil onto your Windows</font>

555
00:23:33,659 --> 00:23:37,500
environment<font color="#E5E5E5"> if you're not looking at</font>

556
00:23:35,820 --> 00:23:39,689
<font color="#E5E5E5">Windows event logs for threats</font><font color="#CCCCCC"> you</font>

557
00:23:37,500 --> 00:23:42,120
should be and system on gives you so

558
00:23:39,690 --> 00:23:44,640
much<font color="#CCCCCC"> more data than the natural</font><font color="#E5E5E5"> Windows</font>

559
00:23:42,120 --> 00:23:47,789
event logs<font color="#CCCCCC"> the problem is it's not</font>

560
00:23:44,640 --> 00:23:49,620
natively parsed by<font color="#CCCCCC"> a lot of Simms</font><font color="#E5E5E5"> even</font>

561
00:23:47,789 --> 00:23:52,110
though it's XML based it's just not

562
00:23:49,620 --> 00:23:53,459
natively done including<font color="#E5E5E5"> with including</font>

563
00:23:52,110 --> 00:23:55,530
with<font color="#E5E5E5"> Splunk</font>

564
00:23:53,460 --> 00:23:57,240
so before we get here one of the things

565
00:23:55,530 --> 00:24:00,660
<font color="#CCCCCC">that six Mons really</font><font color="#E5E5E5"> valuable with is</font>

566
00:23:57,240 --> 00:24:03,060
it'll give you a hash of the executables

567
00:24:00,660 --> 00:24:04,830
that<font color="#E5E5E5"> are run as they're run it'll give</font>

568
00:24:03,060 --> 00:24:07,230
you the<font color="#CCCCCC"> command</font><font color="#E5E5E5"> line parameters of the</font>

569
00:24:04,830 --> 00:24:09,000
executables<font color="#CCCCCC"> as they're run</font><font color="#E5E5E5"> some of this</font>

570
00:24:07,230 --> 00:24:11,040
information may<font color="#CCCCCC"> be</font><font color="#E5E5E5"> available through</font>

571
00:24:09,000 --> 00:24:12,560
amplified GPOs but the hash isn't and

572
00:24:11,040 --> 00:24:16,139
that hash<font color="#CCCCCC"> can</font><font color="#E5E5E5"> be really really</font><font color="#CCCCCC"> powerful</font>

573
00:24:12,560 --> 00:24:18,540
<font color="#E5E5E5">so we</font><font color="#CCCCCC"> had a scenario a</font><font color="#E5E5E5"> employees hiding</font>

574
00:24:16,140 --> 00:24:20,430
hiding<font color="#CCCCCC"> his browsing history behind tor</font>

575
00:24:18,540 --> 00:24:23,850
<font color="#CCCCCC">so what version</font><font color="#E5E5E5"> of the tor browser was</font>

576
00:24:20,430 --> 00:24:25,350
downloaded so we're working<font color="#CCCCCC"> through</font><font color="#E5E5E5"> six</font>

577
00:24:23,850 --> 00:24:27,719
months<font color="#CCCCCC"> this month typically looks like</font>

578
00:24:25,350 --> 00:24:29,730
this<font color="#CCCCCC"> I don't want to spend</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> time to</font>

579
00:24:27,720 --> 00:24:31,530
<font color="#E5E5E5">parse this one I've got</font><font color="#CCCCCC"> Splunk engineers</font>

580
00:24:29,730 --> 00:24:33,150
who<font color="#E5E5E5"> can get that fixed</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> just got it</font>

581
00:24:31,530 --> 00:24:36,210
on their<font color="#E5E5E5"> roadmap</font><font color="#CCCCCC"> I need to deal</font><font color="#E5E5E5"> with</font>

582
00:24:33,150 --> 00:24:38,790
this<font color="#E5E5E5"> incident today and everything has a</font>

583
00:24:36,210 --> 00:24:41,280
tag and a tag<font color="#E5E5E5"> now you should not be</font>

584
00:24:38,790 --> 00:24:44,909
<font color="#E5E5E5">using</font><font color="#CCCCCC"> regular expressions to parse</font><font color="#E5E5E5"> XML</font>

585
00:24:41,280 --> 00:24:47,490
<font color="#E5E5E5">do not do that that is bad it is never</font>

586
00:24:44,910 --> 00:24:49,920
going to work<font color="#CCCCCC"> successfully but you can</font>

587
00:24:47,490 --> 00:24:52,290
use regular<font color="#E5E5E5"> expressions to parse the</font>

588
00:24:49,920 --> 00:24:54,510
information you need in order<font color="#E5E5E5"> to get</font>

589
00:24:52,290 --> 00:24:56,310
what you<font color="#E5E5E5"> want in this case we're</font><font color="#CCCCCC"> just</font>

590
00:24:54,510 --> 00:24:58,860
looking<font color="#CCCCCC"> for we know there's going to be</font>

591
00:24:56,310 --> 00:25:02,310
a tag and we know that there's<font color="#E5E5E5"> going to</font>

592
00:24:58,860 --> 00:25:04,469
<font color="#E5E5E5">be the word file and tor either</font>

593
00:25:02,310 --> 00:25:07,770
uppercase or lowercase<font color="#E5E5E5"> so let's pull</font>

594
00:25:04,470 --> 00:25:10,860
<font color="#CCCCCC">that information</font><font color="#E5E5E5"> out and quickly we can</font>

595
00:25:07,770 --> 00:25:12,950
see<font color="#E5E5E5"> command line current directory image</font>

596
00:25:10,860 --> 00:25:15,479
parent command<font color="#E5E5E5"> line these</font><font color="#CCCCCC"> are fields</font>

597
00:25:12,950 --> 00:25:17,460
<font color="#CCCCCC">that have</font><font color="#E5E5E5"> been related</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the word tor</font>

598
00:25:15,480 --> 00:25:19,290
in the system on data<font color="#CCCCCC"> I've been able to</font>

599
00:25:17,460 --> 00:25:23,360
take<font color="#E5E5E5"> all of that system on data which</font><font color="#CCCCCC"> is</font>

600
00:25:19,290 --> 00:25:26,120
a lot and<font color="#E5E5E5"> distill it down to six total</font>

601
00:25:23,360 --> 00:25:30,959
<font color="#E5E5E5">categories with about</font><font color="#CCCCCC"> two hundred</font><font color="#E5E5E5"> events</font>

602
00:25:26,120 --> 00:25:33,060
so digging<font color="#E5E5E5"> down even further now I</font><font color="#CCCCCC"> can</font>

603
00:25:30,960 --> 00:25:35,760
actually<font color="#E5E5E5"> see</font><font color="#CCCCCC"> what was</font><font color="#E5E5E5"> being parsed</font>

604
00:25:33,060 --> 00:25:37,409
through<font color="#E5E5E5"> tor awesome now if you're an elk</font>

605
00:25:35,760 --> 00:25:39,930
stack user you can do this an elk sack

606
00:25:37,410 --> 00:25:41,730
as well<font color="#CCCCCC"> I am by no means selling Splunk</font>

607
00:25:39,930 --> 00:25:43,320
<font color="#E5E5E5">if you're pulling the wrong logs raw</font>

608
00:25:41,730 --> 00:25:45,420
logs you<font color="#CCCCCC"> can do this</font><font color="#E5E5E5"> in notepad plus</font>

609
00:25:43,320 --> 00:25:47,610
plus I'm by no means selling<font color="#CCCCCC"> Splunk</font><font color="#E5E5E5"> it's</font>

610
00:25:45,420 --> 00:25:50,100
just what I'm comfortable with

611
00:25:47,610 --> 00:26:02,000
[Music]

612
00:25:50,100 --> 00:26:02,000
so any questions so<font color="#CCCCCC"> far yes sir yes sir</font>

613
00:26:02,240 --> 00:26:08,740
absolutely so let<font color="#E5E5E5"> me hit think that was</font>

614
00:26:05,820 --> 00:26:18,800
<font color="#E5E5E5">slide 14</font>

615
00:26:08,740 --> 00:26:22,860
[Music]

616
00:26:18,800 --> 00:26:24,930
<font color="#E5E5E5">okay so the key element here</font><font color="#CCCCCC"> is your</font>

617
00:26:22,860 --> 00:26:26,879
regular expression<font color="#E5E5E5"> if you just use</font>

618
00:26:24,930 --> 00:26:28,440
natural regular expressions it's going I

619
00:26:26,880 --> 00:26:30,240
forget the term whether greedy or on

620
00:26:28,440 --> 00:26:32,520
greedy I always get those confused<font color="#CCCCCC"> but</font>

621
00:26:30,240 --> 00:26:36,540
it's it's going<font color="#E5E5E5"> to naturally pull all</font>

622
00:26:32,520 --> 00:26:38,100
the results<font color="#CCCCCC"> that's the way just Splunk</font>

623
00:26:36,540 --> 00:26:39,629
happens to do it you can change<font color="#E5E5E5"> that</font>

624
00:26:38,100 --> 00:26:41,730
<font color="#CCCCCC">parameter if you really want to but it's</font>

625
00:26:39,630 --> 00:26:44,610
going<font color="#CCCCCC"> to pull more than</font><font color="#E5E5E5"> one it just will</font>

626
00:26:41,730 --> 00:26:47,850
only return the<font color="#E5E5E5"> first result unless you</font>

627
00:26:44,610 --> 00:26:49,469
set<font color="#E5E5E5"> a max underscore match parameter so</font>

628
00:26:47,850 --> 00:26:51,810
if you set it<font color="#E5E5E5"> equal to zero it'll pull</font>

629
00:26:49,470 --> 00:26:53,730
in all the the results and<font color="#E5E5E5"> put it in a</font>

630
00:26:51,810 --> 00:26:55,919
multi value field<font color="#E5E5E5"> the multi value field</font>

631
00:26:53,730 --> 00:26:58,230
looking like this<font color="#E5E5E5"> here is one event</font><font color="#CCCCCC"> and</font>

632
00:26:55,920 --> 00:26:59,670
here's<font color="#CCCCCC"> all the email addresses that were</font>

633
00:26:58,230 --> 00:27:04,610
in<font color="#CCCCCC"> that one event from that single</font>

634
00:26:59,670 --> 00:27:13,350
<font color="#E5E5E5">regular expression max underscore match</font>

635
00:27:04,610 --> 00:27:15,780
<font color="#E5E5E5">equals zero anybody else well as I</font>

636
00:27:13,350 --> 00:27:17,820
typically do<font color="#E5E5E5"> I talked way too fast</font><font color="#CCCCCC"> so</font>

637
00:27:15,780 --> 00:27:21,350
that<font color="#CCCCCC"> is my</font><font color="#E5E5E5"> presentation</font><font color="#CCCCCC"> thank you so</font>

638
00:27:17,820 --> 00:27:21,350
much for<font color="#CCCCCC"> attending I appreciate it</font>

639
00:27:23,480 --> 00:27:26,390
[Applause]

