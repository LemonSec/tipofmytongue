1
00:00:00,000 --> 00:00:03,280
i would like to welcome to the besides

2
00:00:03,280 --> 00:00:03,919
tel aviv

3
00:00:03,919 --> 00:00:07,120
stage an actual rock star

4
00:00:07,120 --> 00:00:10,080
yossi sasi

5
00:00:11,200 --> 00:00:14,920
yosi and yasi brought near

6
00:00:14,920 --> 00:00:17,920
sias

7
00:00:18,640 --> 00:00:22,240
so you'll see the rock star near got his

8
00:00:22,240 --> 00:00:25,680
pilot license at age 23 and now

9
00:00:25,680 --> 00:00:29,199
he has a skydiving license

10
00:00:29,199 --> 00:00:31,359
so he can take the plane up in the air

11
00:00:31,359 --> 00:00:32,238
and then

12
00:00:32,238 --> 00:00:34,399
jump and bail out if he doesn't go his

13
00:00:34,399 --> 00:00:35,760
way so

14
00:00:35,760 --> 00:00:38,079
yoshi's been with us beside tel aviv a

15
00:00:38,079 --> 00:00:39,120
few years

16
00:00:39,120 --> 00:00:42,640
cheers yossi cheers neil i want to

17
00:00:42,640 --> 00:00:44,399
really i want you to enjoy this session

18
00:00:44,399 --> 00:00:45,760
everybody this is a treat

19
00:00:45,760 --> 00:00:49,120
it's a yummy yummy presentation

20
00:00:49,120 --> 00:00:51,600
it's things that make you go hmm let's

21
00:00:51,600 --> 00:00:52,800
go

22
00:00:52,800 --> 00:00:55,760
give it up for them yeah

23
00:00:56,079 --> 00:00:58,879
cheers karen thank you hello everybody

24
00:00:58,879 --> 00:01:01,120
good afternoon besides tel aviv

25
00:01:01,120 --> 00:01:03,039
so good to be here for the third time

26
00:01:03,039 --> 00:01:06,080
and my fourth talk in besides tel aviv

27
00:01:06,080 --> 00:01:08,159
in my opinion the best community cyber

28
00:01:08,159 --> 00:01:10,400
community event in israel

29
00:01:10,400 --> 00:01:13,200
along with me neil and today we're gonna

30
00:01:13,200 --> 00:01:14,960
talk to you about uh

31
00:01:14,960 --> 00:01:17,040
some forensic artifacts that make you go

32
00:01:17,040 --> 00:01:18,640
hmm

33
00:01:18,640 --> 00:01:21,759
wow so yeah so a bit about forensic

34
00:01:21,759 --> 00:01:22,720
artifacts well

35
00:01:22,720 --> 00:01:25,520
they're quite uh different than the ones

36
00:01:25,520 --> 00:01:26,640
you would expect

37
00:01:26,640 --> 00:01:29,200
goldilocks to live for the three bears

38
00:01:29,200 --> 00:01:30,079
right

39
00:01:30,079 --> 00:01:33,040
uh i mean she did a fairly good job she

40
00:01:33,040 --> 00:01:35,040
didn't evade and bypass too much

41
00:01:35,040 --> 00:01:37,920
uh she left a lot of clues on the way uh

42
00:01:37,920 --> 00:01:38,960
but what we're gonna

43
00:01:38,960 --> 00:01:40,720
talk to you today and especially share

44
00:01:40,720 --> 00:01:42,079
insights and code

45
00:01:42,079 --> 00:01:44,560
with emphasis on code and free tools

46
00:01:44,560 --> 00:01:45,600
today with you

47
00:01:45,600 --> 00:01:47,200
that will be released to github straight

48
00:01:47,200 --> 00:01:48,640
after uh

49
00:01:48,640 --> 00:01:51,520
is some unique artifacts uh you might

50
00:01:51,520 --> 00:01:52,799
know some of them

51
00:01:52,799 --> 00:01:54,720
but essentially we took the time from

52
00:01:54,720 --> 00:01:56,320
our experience in the field

53
00:01:56,320 --> 00:01:58,560
and uh back them up together so you can

54
00:01:58,560 --> 00:02:00,240
get things that you don't find today in

55
00:02:00,240 --> 00:02:00,960
the

56
00:02:00,960 --> 00:02:03,200
in the tools sales toolset that you know

57
00:02:03,200 --> 00:02:04,479
uh currently available

58
00:02:04,479 --> 00:02:07,439
online so a few words about myself

59
00:02:07,439 --> 00:02:08,800
nuettage yeah

60
00:02:08,800 --> 00:02:11,520
you'll see i've been with the keyboards

61
00:02:11,520 --> 00:02:13,200
for a while with code and everything

62
00:02:13,200 --> 00:02:15,040
between it

63
00:02:15,040 --> 00:02:16,959
around two decades ago i worked for

64
00:02:16,959 --> 00:02:19,200
microsoft and coded tools

65
00:02:19,200 --> 00:02:21,200
in windows server but since then doing

66
00:02:21,200 --> 00:02:22,879
mainly independent work

67
00:02:22,879 --> 00:02:25,040
i was also fortunate enough to be part

68
00:02:25,040 --> 00:02:26,720
of javelin networks with the

69
00:02:26,720 --> 00:02:30,080
ex-israeli air force and

70
00:02:30,080 --> 00:02:32,560
a guy from 9 900 that we sold to

71
00:02:32,560 --> 00:02:33,360
symantec

72
00:02:33,360 --> 00:02:36,239
in 2018 doing deception around active

73
00:02:36,239 --> 00:02:37,360
directory

74
00:02:37,360 --> 00:02:40,239
uh and we're doing a lot of assessments

75
00:02:40,239 --> 00:02:41,440
uh essentially

76
00:02:41,440 --> 00:02:44,000
just enjoying myself with computers uh

77
00:02:44,000 --> 00:02:44,879
for a while

78
00:02:44,879 --> 00:02:48,840
and i'll hand over to neo so hello

79
00:02:48,840 --> 00:02:51,840
everybody

80
00:02:51,920 --> 00:02:54,640
i have the owner to share a stage with

81
00:02:54,640 --> 00:02:56,560
yossi usually i'm in the other side of

82
00:02:56,560 --> 00:02:57,840
the crowd

83
00:02:57,840 --> 00:03:01,599
so who am i in a short

84
00:03:01,599 --> 00:03:03,680
description security researcher the head

85
00:03:03,680 --> 00:03:04,720
offensive uh

86
00:03:04,720 --> 00:03:07,519
of professional services at ten retreat

87
00:03:07,519 --> 00:03:09,040
viosi

88
00:03:09,040 --> 00:03:11,120
like i was introduced i'm a licensed

89
00:03:11,120 --> 00:03:12,959
pilot so i can fly a plane but i can

90
00:03:12,959 --> 00:03:14,319
also jump in a plan

91
00:03:14,319 --> 00:03:16,319
from a plan not particularly in that

92
00:03:16,319 --> 00:03:18,080
order and not particularly

93
00:03:18,080 --> 00:03:21,920
together i'm a former officer in the idf

94
00:03:21,920 --> 00:03:24,799
and gcfa forensic analyst from suns it's

95
00:03:24,799 --> 00:03:25,599
one of my

96
00:03:25,599 --> 00:03:28,239
certificates that is most relevant for

97
00:03:28,239 --> 00:03:28,959
today's

98
00:03:28,959 --> 00:03:33,200
talk so let's dive in

99
00:03:33,200 --> 00:03:36,640
uh first of all i want to put some

100
00:03:36,640 --> 00:03:38,879
put the building blocks terms for you to

101
00:03:38,879 --> 00:03:42,319
understand the fire and threat hunting

102
00:03:42,319 --> 00:03:44,560
df digital forensics so let's paint a

103
00:03:44,560 --> 00:03:45,680
picture

104
00:03:45,680 --> 00:03:47,519
we are at the bank robbery if the

105
00:03:47,519 --> 00:03:49,200
robbery is already left the bank

106
00:03:49,200 --> 00:03:50,720
okay we are the police we got to the

107
00:03:50,720 --> 00:03:53,120
scene so we are talking df

108
00:03:53,120 --> 00:03:54,640
right digital forensics we need to

109
00:03:54,640 --> 00:03:56,480
understand what happened it's already

110
00:03:56,480 --> 00:03:57,200
finished

111
00:03:57,200 --> 00:03:58,959
and we need to understand what happened

112
00:03:58,959 --> 00:04:01,200
in the scene if we are getting to the

113
00:04:01,200 --> 00:04:03,280
robbery while the robber is still inside

114
00:04:03,280 --> 00:04:05,360
we have hostages we have everything

115
00:04:05,360 --> 00:04:08,640
happening the activity is still taking

116
00:04:08,640 --> 00:04:12,640
place this is incident response we are

117
00:04:13,360 --> 00:04:17,199
uh giving a response to a live event

118
00:04:17,199 --> 00:04:19,120
uh now in the digital world it's a

119
00:04:19,120 --> 00:04:20,478
little bit more hard

120
00:04:20,478 --> 00:04:22,320
to say when it's digital forensics when

121
00:04:22,320 --> 00:04:23,919
it's incident response that's why we

122
00:04:23,919 --> 00:04:25,600
usually combine them together

123
00:04:25,600 --> 00:04:27,040
when we're talking about threat hunting

124
00:04:27,040 --> 00:04:28,880
we talking about

125
00:04:28,880 --> 00:04:31,040
a proactive forensics approach where

126
00:04:31,040 --> 00:04:32,160
we're trying to find

127
00:04:32,160 --> 00:04:35,759
evidence of bridge before anything even

128
00:04:35,759 --> 00:04:36,400
happen

129
00:04:36,400 --> 00:04:37,840
okay it's something that every

130
00:04:37,840 --> 00:04:39,759
organization need to do to search

131
00:04:39,759 --> 00:04:40,400
actively

132
00:04:40,400 --> 00:04:43,440
in his network in the network to try and

133
00:04:43,440 --> 00:04:44,000
find

134
00:04:44,000 --> 00:04:47,040
some evidence of a breach

135
00:04:47,040 --> 00:04:50,000
now in digital forensics we have two

136
00:04:50,000 --> 00:04:51,360
basic approach

137
00:04:51,360 --> 00:04:53,199
the live approach and the dead approach

138
00:04:53,199 --> 00:04:55,199
the live approach basically everything

139
00:04:55,199 --> 00:04:57,199
that is live while the computer is still

140
00:04:57,199 --> 00:04:57,680
on

141
00:04:57,680 --> 00:05:00,000
that approach everything that lay in the

142
00:05:00,000 --> 00:05:02,000
ntfs so that ntfs

143
00:05:02,000 --> 00:05:05,039
live equals to ram uh

144
00:05:05,039 --> 00:05:07,199
here we're going to just show a little

145
00:05:07,199 --> 00:05:09,280
tool cape coral artifact parser and

146
00:05:09,280 --> 00:05:10,240
extractor

147
00:05:10,240 --> 00:05:13,600
this uh two taking both of the

148
00:05:13,600 --> 00:05:16,880
both approaches together and it has the

149
00:05:16,880 --> 00:05:17,680
models

150
00:05:17,680 --> 00:05:19,680
which responsible for the live approach

151
00:05:19,680 --> 00:05:21,600
you will see arp cache all runs dns

152
00:05:21,600 --> 00:05:22,000
cache

153
00:05:22,000 --> 00:05:23,440
everything that if return of the

154
00:05:23,440 --> 00:05:25,520
computer will

155
00:05:25,520 --> 00:05:28,720
be lost and the dead approach

156
00:05:28,720 --> 00:05:31,840
basically let us take a terabyte of disk

157
00:05:31,840 --> 00:05:34,160
into only the two gigs that matters the

158
00:05:34,160 --> 00:05:35,199
two gigs with

159
00:05:35,199 --> 00:05:38,240
a forensic value

160
00:05:38,240 --> 00:05:40,320
in the end super timeline can be

161
00:05:40,320 --> 00:05:43,120
produced from the

162
00:05:43,120 --> 00:05:46,800
ntfs drive colored and everything

163
00:05:46,800 --> 00:05:48,560
here you can see a tool from eric

164
00:05:48,560 --> 00:05:50,560
zimmerman timeline explorer

165
00:05:50,560 --> 00:05:53,199
which basically take everything from web

166
00:05:53,199 --> 00:05:54,880
history

167
00:05:54,880 --> 00:05:58,240
the registry hive event logs everything

168
00:05:58,240 --> 00:06:00,080
you can find

169
00:06:00,080 --> 00:06:03,199
now this picture our picture from a real

170
00:06:03,199 --> 00:06:03,759
incident

171
00:06:03,759 --> 00:06:07,039
where we were able to construct the

172
00:06:07,039 --> 00:06:10,479
screen of an attacker after he left the

173
00:06:10,479 --> 00:06:13,600
the station a week back okay so we're

174
00:06:13,600 --> 00:06:14,560
able to

175
00:06:14,560 --> 00:06:16,960
reconstruct what he actually did in an

176
00:06:16,960 --> 00:06:17,600
rdp

177
00:06:17,600 --> 00:06:21,199
session you can see he he approaches sql

178
00:06:21,199 --> 00:06:23,199
pro backups you can see the user he was

179
00:06:23,199 --> 00:06:24,080
using

180
00:06:24,080 --> 00:06:28,000
um now how did we done that

181
00:06:28,000 --> 00:06:30,800
bitmap caching so i don't know if you

182
00:06:30,800 --> 00:06:32,880
noticed but when you are

183
00:06:32,880 --> 00:06:35,680
initialing an rdp session the general

184
00:06:35,680 --> 00:06:36,000
have

185
00:06:36,000 --> 00:06:38,240
all the where you want to connect who

186
00:06:38,240 --> 00:06:39,680
you're going to connect with

187
00:06:39,680 --> 00:06:42,720
but the experience tab have this

188
00:06:42,720 --> 00:06:44,880
little check persistent bitmap caching

189
00:06:44,880 --> 00:06:46,479
check you can see

190
00:06:46,479 --> 00:06:48,800
that when it's checked and by default

191
00:06:48,800 --> 00:06:49,840
it's checked

192
00:06:49,840 --> 00:06:52,800
you get a lot of cache files a cache

193
00:06:52,800 --> 00:06:54,720
file for each rdp session

194
00:06:54,720 --> 00:06:57,440
that logs your screen into a small

195
00:06:57,440 --> 00:07:00,479
bitmap 64 by 64

196
00:07:00,479 --> 00:07:04,319
pictures now this is a cool evidence

197
00:07:04,319 --> 00:07:06,160
but it's very hard to

198
00:07:06,160 --> 00:07:07,440
[Music]

199
00:07:07,440 --> 00:07:11,280
go in in an event where you have

200
00:07:11,280 --> 00:07:12,639
thousands of computer

201
00:07:12,639 --> 00:07:15,039
and understand what happened and you'll

202
00:07:15,039 --> 00:07:17,440
see how hard it is to construct

203
00:07:17,440 --> 00:07:19,599
this 64 and try to attach them into a

204
00:07:19,599 --> 00:07:20,560
screen

205
00:07:20,560 --> 00:07:22,880
it takes some time yeah you'll need the

206
00:07:22,880 --> 00:07:24,319
you know function or two

207
00:07:24,319 --> 00:07:27,360
but uh still yeah so

208
00:07:27,360 --> 00:07:31,840
for for that reason we thought about

209
00:07:31,840 --> 00:07:34,000
what what will happen if we make

210
00:07:34,000 --> 00:07:35,599
something that make this process a

211
00:07:35,599 --> 00:07:36,319
little bit

212
00:07:36,319 --> 00:07:39,840
automated it so we make a tool that

213
00:07:39,840 --> 00:07:41,840
first of all collect the rdp caches from

214
00:07:41,840 --> 00:07:43,120
the entire network

215
00:07:43,120 --> 00:07:45,440
all the domain computers just give us

216
00:07:45,440 --> 00:07:47,759
the rdp cache

217
00:07:47,759 --> 00:07:50,960
now after that we take it and parse it

218
00:07:50,960 --> 00:07:52,319
we extract the bitmap

219
00:07:52,319 --> 00:07:56,000
bitmap 64 by 64 images out of it

220
00:07:56,000 --> 00:07:58,960
we format it and scan it with an ocr

221
00:07:58,960 --> 00:07:59,840
mechanism

222
00:07:59,840 --> 00:08:02,080
just extracting the text out of all the

223
00:08:02,080 --> 00:08:03,440
pictures

224
00:08:03,440 --> 00:08:07,039
then we take this text and um

225
00:08:07,039 --> 00:08:09,280
cross it with an ioc's indication of

226
00:08:09,280 --> 00:08:10,240
compromise

227
00:08:10,240 --> 00:08:14,400
so let's say we have some station uh

228
00:08:14,400 --> 00:08:16,560
so you can see the locks collected from

229
00:08:16,560 --> 00:08:17,440
other computers

230
00:08:17,440 --> 00:08:21,120
so let's say we have a station um

231
00:08:21,120 --> 00:08:24,479
where the mimikatz was

232
00:08:24,479 --> 00:08:27,520
was made okay a mimikatz executable

233
00:08:27,520 --> 00:08:30,240
was clicked maybe they passed all the

234
00:08:30,240 --> 00:08:31,759
antivirus all the edr

235
00:08:31,759 --> 00:08:35,519
xdr solutions but this text

236
00:08:35,519 --> 00:08:38,240
from the screen is still in the logs

237
00:08:38,240 --> 00:08:40,159
okay so we made a little tool you can

238
00:08:40,159 --> 00:08:40,958
see me

239
00:08:40,958 --> 00:08:43,360
right now playing the attacker side

240
00:08:43,360 --> 00:08:44,720
connecting

241
00:08:44,720 --> 00:08:48,080
with the bitmap caching checked by

242
00:08:48,080 --> 00:08:50,720
default connecting to a remote station

243
00:08:50,720 --> 00:08:54,560
using the user.net while i

244
00:08:54,560 --> 00:08:56,160
started the connection you can see the

245
00:08:56,160 --> 00:08:59,120
cache file creates

246
00:08:59,120 --> 00:09:03,040
i'm going to take a malicious tool

247
00:09:03,040 --> 00:09:04,720
malicious tool that we all agree

248
00:09:04,720 --> 00:09:08,000
upon mimikatz and i'm going to run this

249
00:09:08,000 --> 00:09:10,720
mimikatz in elevated privileges it

250
00:09:10,720 --> 00:09:12,399
doesn't really matter i can run it

251
00:09:12,399 --> 00:09:14,880
however i want

252
00:09:14,880 --> 00:09:18,480
now while everything is on the screen

253
00:09:18,480 --> 00:09:20,880
all these texts going to be recorded

254
00:09:20,880 --> 00:09:22,320
into the bmc

255
00:09:22,320 --> 00:09:24,800
files okay so i'm going to make it as

256
00:09:24,800 --> 00:09:27,040
short as i can just open the mimikat and

257
00:09:27,040 --> 00:09:28,000
close it

258
00:09:28,000 --> 00:09:29,360
but you will see that even a short

259
00:09:29,360 --> 00:09:31,120
period of time where the

260
00:09:31,120 --> 00:09:33,440
executable was live okay so now i'm

261
00:09:33,440 --> 00:09:35,120
running mimi cuts

262
00:09:35,120 --> 00:09:38,720
so you can see the mimikat's strings

263
00:09:38,720 --> 00:09:42,000
on the screen so even for a short period

264
00:09:42,000 --> 00:09:43,600
of time

265
00:09:43,600 --> 00:09:47,760
while this screen was recorded to the

266
00:09:47,760 --> 00:09:48,800
cache

267
00:09:48,800 --> 00:09:51,839
we'll be able to construct evidence so

268
00:09:51,839 --> 00:09:55,600
i finished my malicious

269
00:09:55,600 --> 00:09:58,160
intentions closed everything you can see

270
00:09:58,160 --> 00:10:00,000
24 megabytes

271
00:10:00,000 --> 00:10:03,360
of cache file creates on one of the

272
00:10:03,360 --> 00:10:06,560
station in the domain now let's move our

273
00:10:06,560 --> 00:10:08,800
to our tool our tool first of all

274
00:10:08,800 --> 00:10:09,680
collect

275
00:10:09,680 --> 00:10:12,720
then parse the bmc the bin file then

276
00:10:12,720 --> 00:10:13,600
search for the

277
00:10:13,600 --> 00:10:17,839
iocs the iocs are defined in this

278
00:10:17,839 --> 00:10:20,880
text file okay the ioc and what the ioc

279
00:10:20,880 --> 00:10:22,000
equivalent for

280
00:10:22,000 --> 00:10:23,920
and the clients that we are going to run

281
00:10:23,920 --> 00:10:26,720
upon so imagine we put all the clients

282
00:10:26,720 --> 00:10:29,200
in the domain put our indication of

283
00:10:29,200 --> 00:10:30,240
compromise

284
00:10:30,240 --> 00:10:33,279
and let it run while while it runs

285
00:10:33,279 --> 00:10:36,880
basically like we said collects all the

286
00:10:36,880 --> 00:10:40,399
evidence from all the computers

287
00:10:40,399 --> 00:10:43,600
the bmc and bin files becomes

288
00:10:43,600 --> 00:10:46,800
a small bmp tiny pictures these tiny

289
00:10:46,800 --> 00:10:48,320
pictures then

290
00:10:48,320 --> 00:10:50,160
you can see the text extracted from all

291
00:10:50,160 --> 00:10:51,839
the pictures

292
00:10:51,839 --> 00:10:55,920
you can also see some of the collages

293
00:10:55,920 --> 00:10:59,040
yeah we try to construct it to a screen

294
00:10:59,040 --> 00:11:04,160
it doesn't it's very hard to see it

295
00:11:04,160 --> 00:11:06,720
when you actually examining thousands of

296
00:11:06,720 --> 00:11:07,600
computers

297
00:11:07,600 --> 00:11:09,760
but when using this tool it's simply

298
00:11:09,760 --> 00:11:12,000
easy so client o1

299
00:11:12,000 --> 00:11:14,959
found with iocs for the user annette

300
00:11:14,959 --> 00:11:16,959
mimikatz and gentle kiwi were found so

301
00:11:16,959 --> 00:11:18,560
we have traces of mimikats

302
00:11:18,560 --> 00:11:22,000
client on two found to be clean

303
00:11:22,000 --> 00:11:25,040
and that's about it that's pretty cool

304
00:11:25,040 --> 00:11:29,839
integration right

305
00:11:30,000 --> 00:11:32,399
it's the collection parsing of the files

306
00:11:32,399 --> 00:11:34,160
uh making the collage so

307
00:11:34,160 --> 00:11:36,880
the ocr tool can work properly on them

308
00:11:36,880 --> 00:11:39,519
ocring them according to ioc's that you

309
00:11:39,519 --> 00:11:40,320
can

310
00:11:40,320 --> 00:11:42,240
determine you can feed it with any type

311
00:11:42,240 --> 00:11:43,680
of strings that you want

312
00:11:43,680 --> 00:11:46,000
and actually uh understanding those

313
00:11:46,000 --> 00:11:47,600
forensics and many thanks to autumn

314
00:11:47,600 --> 00:11:48,320
lipovic

315
00:11:48,320 --> 00:11:50,480
and doramit which were also part of this

316
00:11:50,480 --> 00:11:51,600
research with us

317
00:11:51,600 --> 00:11:54,639
thank you yeah so a special thanks for

318
00:11:54,639 --> 00:11:55,040
them

319
00:11:55,040 --> 00:11:57,600
is also in our git repository you will

320
00:11:57,600 --> 00:11:58,560
get the git

321
00:11:58,560 --> 00:12:01,279
everything on git everything on it yeah

322
00:12:01,279 --> 00:12:03,279
okay so the second artifact i want to

323
00:12:03,279 --> 00:12:04,880
examine with you is the prefetch

324
00:12:04,880 --> 00:12:06,959
prefetch is really the 101

325
00:12:06,959 --> 00:12:10,000
of every forensic artifact right that's

326
00:12:10,000 --> 00:12:11,120
how we

327
00:12:11,120 --> 00:12:13,839
get what was executed on our station so

328
00:12:13,839 --> 00:12:14,959
windows prefetch

329
00:12:14,959 --> 00:12:18,720
uh first introduced in windows xp

330
00:12:18,720 --> 00:12:20,959
okay since windows xp they have some

331
00:12:20,959 --> 00:12:21,920
involvement

332
00:12:21,920 --> 00:12:25,120
but it's basically like every artifact

333
00:12:25,120 --> 00:12:26,160
in windows

334
00:12:26,160 --> 00:12:29,760
it doesn't mean to track your moves

335
00:12:29,760 --> 00:12:31,760
on the operating system but just to

336
00:12:31,760 --> 00:12:32,959
speed up and make

337
00:12:32,959 --> 00:12:36,959
things more efficient so the prefetch

338
00:12:36,959 --> 00:12:39,839
try to make a portable executable that

339
00:12:39,839 --> 00:12:41,839
load to memory more efficient

340
00:12:41,839 --> 00:12:44,240
the prefetch can give us the eight less

341
00:12:44,240 --> 00:12:46,639
time of execution so if you execute some

342
00:12:46,639 --> 00:12:49,600
executable a couple of times we'll get

343
00:12:49,600 --> 00:12:51,519
the eight less execution times

344
00:12:51,519 --> 00:12:52,959
we'll get the first execution the last

345
00:12:52,959 --> 00:12:55,120
execution the path from where

346
00:12:55,120 --> 00:12:57,360
this file was executed if it's a key

347
00:12:57,360 --> 00:12:59,040
logger for say let's take it to the

348
00:12:59,040 --> 00:13:00,639
malicious part we'll get

349
00:13:00,639 --> 00:13:03,920
even maybe the file where the key logger

350
00:13:03,920 --> 00:13:09,920
logs your typing your keyboard typing

351
00:13:10,079 --> 00:13:12,240
so this is prefetch prefetch has a

352
00:13:12,240 --> 00:13:13,440
little bit of involvement

353
00:13:13,440 --> 00:13:15,360
like i said from windows xp to windows

354
00:13:15,360 --> 00:13:16,480
8.1

355
00:13:16,480 --> 00:13:20,639
it was let's say a uncompressed or

356
00:13:20,639 --> 00:13:23,920
just in his natural form

357
00:13:23,920 --> 00:13:29,200
scca was the header exa 53 43 43 41.

358
00:13:29,200 --> 00:13:31,760
in windows 10 there's express huffman

359
00:13:31,760 --> 00:13:32,720
get into

360
00:13:32,720 --> 00:13:36,000
the scene we compress all the preface

361
00:13:36,000 --> 00:13:36,959
files so we

362
00:13:36,959 --> 00:13:38,639
make it a little bit harder they are no

363
00:13:38,639 --> 00:13:40,800
longer in clear text in memory

364
00:13:40,800 --> 00:13:44,160
if it's the ram or the ntfs

365
00:13:44,160 --> 00:13:48,199
and now the header is mum

366
00:13:48,199 --> 00:13:50,720
4d41404

367
00:13:50,720 --> 00:13:54,959
so every time you click on executable

368
00:13:54,959 --> 00:13:57,920
a prefetch is made the second time you

369
00:13:57,920 --> 00:14:00,000
will click on the same executable

370
00:14:00,000 --> 00:14:02,560
the first prefetch go to unallocated

371
00:14:02,560 --> 00:14:03,040
space

372
00:14:03,040 --> 00:14:05,360
on the ntfs and the second prefetch

373
00:14:05,360 --> 00:14:06,320
takes its place

374
00:14:06,320 --> 00:14:08,800
with all the data he had and everything

375
00:14:08,800 --> 00:14:10,959
and you will keep going and every

376
00:14:10,959 --> 00:14:12,399
prefetch

377
00:14:12,399 --> 00:14:15,680
just go and left

378
00:14:15,680 --> 00:14:18,320
in memory so if an executable runs at

379
00:14:18,320 --> 00:14:19,519
least twice

380
00:14:19,519 --> 00:14:23,120
a dot pf file will float in the ntfs

381
00:14:23,120 --> 00:14:26,079
unallocated data

382
00:14:26,079 --> 00:14:28,480
we take these assumptions and we want to

383
00:14:28,480 --> 00:14:30,000
demonstrate it

384
00:14:30,000 --> 00:14:33,199
so first of all run mimikats once

385
00:14:33,199 --> 00:14:37,360
run mimikatz twice that's all

386
00:14:37,360 --> 00:14:39,440
now we're going to use s delete as

387
00:14:39,440 --> 00:14:41,600
delete from sysinternals

388
00:14:41,600 --> 00:14:43,199
run over the memory it's not just

389
00:14:43,199 --> 00:14:45,199
deleting the link to the

390
00:14:45,199 --> 00:14:48,240
file but actually run it we run

391
00:14:48,240 --> 00:14:50,399
the memory 10 times in these scenarios

392
00:14:50,399 --> 00:14:51,760
to make it

393
00:14:51,760 --> 00:14:54,399
extremely emphasize the fact that it's

394
00:14:54,399 --> 00:14:56,000
no longer in memory

395
00:14:56,000 --> 00:14:58,720
now we take a tool called ftk imager to

396
00:14:58,720 --> 00:15:00,880
load our ntfs to see all the hidden

397
00:15:00,880 --> 00:15:02,160
files and all the

398
00:15:02,160 --> 00:15:06,639
uh the files exist

399
00:15:07,040 --> 00:15:10,880
so opening and you can see the

400
00:15:10,880 --> 00:15:14,079
unallocated data space

401
00:15:14,079 --> 00:15:17,199
now just traveling and clicking one

402
00:15:17,199 --> 00:15:19,199
random you can see the mom header so

403
00:15:19,199 --> 00:15:20,800
this is a compress

404
00:15:20,800 --> 00:15:23,199
prefetch in memory in unallocated space

405
00:15:23,199 --> 00:15:25,120
something we already

406
00:15:25,120 --> 00:15:28,800
removed when we execute another file

407
00:15:28,800 --> 00:15:31,920
now we will just take them and export

408
00:15:31,920 --> 00:15:32,320
them

409
00:15:32,320 --> 00:15:35,360
to the file system

410
00:15:38,320 --> 00:15:40,480
we are concentrating here about the

411
00:15:40,480 --> 00:15:42,160
small ones because they are more likely

412
00:15:42,160 --> 00:15:44,240
to be prefetches also they are the

413
00:15:44,240 --> 00:15:47,519
the the one that adds less

414
00:15:47,519 --> 00:15:50,720
so we just taking we don't know which

415
00:15:50,720 --> 00:15:52,480
one of them going to be our prefetch

416
00:15:52,480 --> 00:15:54,240
our destined preference the mimikatz

417
00:15:54,240 --> 00:15:55,839
perfect but

418
00:15:55,839 --> 00:15:57,680
one of them if i didn't lie to you

419
00:15:57,680 --> 00:16:00,079
earlier should be

420
00:16:00,079 --> 00:16:01,839
the size is good enough indication

421
00:16:01,839 --> 00:16:03,279
anyway so yeah

422
00:16:03,279 --> 00:16:04,880
the size is good enough indication and

423
00:16:04,880 --> 00:16:06,720
this is a

424
00:16:06,720 --> 00:16:09,519
poc we will talk a little bit about what

425
00:16:09,519 --> 00:16:10,959
we

426
00:16:10,959 --> 00:16:13,519
saw so here i'm just trying some

427
00:16:13,519 --> 00:16:16,720
powershell to make the

428
00:16:16,720 --> 00:16:19,920
extension of the file i extracted a dot

429
00:16:19,920 --> 00:16:23,199
pf because it's necessary to run pecmd

430
00:16:23,199 --> 00:16:25,839
again a tool by eric zimmerman that let

431
00:16:25,839 --> 00:16:27,199
us

432
00:16:27,199 --> 00:16:30,240
just check a directory and

433
00:16:30,240 --> 00:16:32,240
it will parse it for us so if it's not a

434
00:16:32,240 --> 00:16:34,079
prefetch it will not parse it if it's a

435
00:16:34,079 --> 00:16:34,800
prefetch

436
00:16:34,800 --> 00:16:36,480
it will decompress it and parse it and

437
00:16:36,480 --> 00:16:37,839
give us the answers

438
00:16:37,839 --> 00:16:40,880
and you can see that

439
00:16:40,880 --> 00:16:44,480
we had 73 files and

440
00:16:44,480 --> 00:16:46,720
voila so the first one was mimikat you

441
00:16:46,720 --> 00:16:48,480
see the run count is one

442
00:16:48,480 --> 00:16:51,680
okay it makes sense right the first run

443
00:16:51,680 --> 00:16:55,199
was uh same

444
00:16:55,199 --> 00:16:58,240
in windows prefetch the second one was

445
00:16:58,240 --> 00:17:00,000
moving to the unallocated space and took

446
00:17:00,000 --> 00:17:01,839
her place

447
00:17:01,839 --> 00:17:06,079
uh okay and that's a little bit about

448
00:17:06,079 --> 00:17:08,559
it that's very cool and that's something

449
00:17:08,559 --> 00:17:11,199
thank you very much

450
00:17:11,520 --> 00:17:13,919
and keep in mind that uh while in

451
00:17:13,919 --> 00:17:14,959
volatility

452
00:17:14,959 --> 00:17:16,720
for example in other cool frameworks you

453
00:17:16,720 --> 00:17:19,199
can get it uh from memory from ram

454
00:17:19,199 --> 00:17:21,439
uh you don't have an option to do it on

455
00:17:21,439 --> 00:17:22,400
disk right and

456
00:17:22,400 --> 00:17:24,559
in this way we managed by matching the

457
00:17:24,559 --> 00:17:25,599
the uh

458
00:17:25,599 --> 00:17:28,480
the right hex uh addresses to just fetch

459
00:17:28,480 --> 00:17:29,120
that uh

460
00:17:29,120 --> 00:17:30,720
quite easily living off the land most

461
00:17:30,720 --> 00:17:34,720
importantly yeah thanks so much nir

462
00:17:34,720 --> 00:17:37,280
so moving on to other interesting uh

463
00:17:37,280 --> 00:17:39,440
forensic artifacts uh let's speak about

464
00:17:39,440 --> 00:17:42,720
active directory uh really something

465
00:17:42,720 --> 00:17:44,080
i've spent uh

466
00:17:44,080 --> 00:17:45,600
two and a half decades with this

467
00:17:45,600 --> 00:17:47,120
technology and it still keeps

468
00:17:47,120 --> 00:17:49,919
keeps to amaze me and everyone all of us

469
00:17:49,919 --> 00:17:50,960
around here from

470
00:17:50,960 --> 00:17:53,440
zero logo on through uh whatever print

471
00:17:53,440 --> 00:17:55,440
nightmare and uh etc

472
00:17:55,440 --> 00:17:57,600
and active directory is something very

473
00:17:57,600 --> 00:17:58,960
hard to uh

474
00:17:58,960 --> 00:18:01,360
put your hands and and your full grasp

475
00:18:01,360 --> 00:18:02,320
around it

476
00:18:02,320 --> 00:18:05,440
it's a it's a huge attack surface it's

477
00:18:05,440 --> 00:18:07,120
exposed by design

478
00:18:07,120 --> 00:18:08,640
and really the lack of knowledge and

479
00:18:08,640 --> 00:18:10,160
deep understanding of uh

480
00:18:10,160 --> 00:18:12,240
the multiple technologies related there

481
00:18:12,240 --> 00:18:15,600
right ldap dns kerberos wmi rpc dcom

482
00:18:15,600 --> 00:18:17,039
summer adsi

483
00:18:17,039 --> 00:18:20,320
all adb interfaces adws i'm not even

484
00:18:20,320 --> 00:18:21,760
warming up so

485
00:18:21,760 --> 00:18:24,400
uh active directory forensics can be

486
00:18:24,400 --> 00:18:25,360
quite tricky

487
00:18:25,360 --> 00:18:28,559
uh first of all it's uh it's popular uh

488
00:18:28,559 --> 00:18:30,960
in the microsoft windows networks like

489
00:18:30,960 --> 00:18:33,600
tcp is in the world of networking

490
00:18:33,600 --> 00:18:37,120
it's a very uh it's a perfect target

491
00:18:37,120 --> 00:18:39,280
central authentication access control

492
00:18:39,280 --> 00:18:40,240
management

493
00:18:40,240 --> 00:18:42,480
all the authorization of the network and

494
00:18:42,480 --> 00:18:45,200
it is exposed by design in a 90s uh

495
00:18:45,200 --> 00:18:48,320
kind of design especially before cloud

496
00:18:48,320 --> 00:18:49,919
before virtualization before a lot of

497
00:18:49,919 --> 00:18:51,360
vectors were uh

498
00:18:51,360 --> 00:18:53,600
abused and exploited as they are a lot

499
00:18:53,600 --> 00:18:55,280
of misconfigurations excessive

500
00:18:55,280 --> 00:18:56,320
permissions

501
00:18:56,320 --> 00:18:58,799
tools like bloodhound and the likes that

502
00:18:58,799 --> 00:19:00,799
know to explode those

503
00:19:00,799 --> 00:19:02,720
those vectors and those graphs and

504
00:19:02,720 --> 00:19:04,160
essentially when we come to an event we

505
00:19:04,160 --> 00:19:05,120
want to try understand

506
00:19:05,120 --> 00:19:07,200
who did what and when so to build the

507
00:19:07,200 --> 00:19:08,640
timeline based around

508
00:19:08,640 --> 00:19:10,799
the entities meaning identities user

509
00:19:10,799 --> 00:19:12,400
accounts and computer accounts

510
00:19:12,400 --> 00:19:13,919
and to understand the around

511
00:19:13,919 --> 00:19:16,000
reconnaissance lateral movement

512
00:19:16,000 --> 00:19:17,760
and all types of credential theft and to

513
00:19:17,760 --> 00:19:19,520
see if there are back doors left

514
00:19:19,520 --> 00:19:21,200
in the ad infrastructure so one source

515
00:19:21,200 --> 00:19:23,039
of knowledge can be of course

516
00:19:23,039 --> 00:19:25,840
logs uh especially all types of not only

517
00:19:25,840 --> 00:19:26,480
files but

518
00:19:26,480 --> 00:19:28,480
etw event racing for windows all kinds

519
00:19:28,480 --> 00:19:29,840
of event logs

520
00:19:29,840 --> 00:19:33,200
but many of those events are not turned

521
00:19:33,200 --> 00:19:34,160
on by default

522
00:19:34,160 --> 00:19:36,240
and even if they are in events like

523
00:19:36,240 --> 00:19:37,679
ransomware and others

524
00:19:37,679 --> 00:19:40,720
uh thinkably they can be wiped so we see

525
00:19:40,720 --> 00:19:41,280
a lot

526
00:19:41,280 --> 00:19:43,760
this event logs being wiped you can also

527
00:19:43,760 --> 00:19:46,080
get the approach of a sensor right to

528
00:19:46,080 --> 00:19:49,440
to essentially get a pickup to sniff

529
00:19:49,440 --> 00:19:51,280
the packets on the domain controllers

530
00:19:51,280 --> 00:19:52,880
and some commercial companies actually

531
00:19:52,880 --> 00:19:53,760
do that

532
00:19:53,760 --> 00:19:56,000
but it is very very challenging still to

533
00:19:56,000 --> 00:19:57,039
understand what happened in the

534
00:19:57,039 --> 00:19:59,360
environment once it's compromised

535
00:19:59,360 --> 00:20:02,960
we tend to go for a built-in artifact

536
00:20:02,960 --> 00:20:03,520
called

537
00:20:03,520 --> 00:20:05,600
called the replication metadata and

538
00:20:05,600 --> 00:20:06,640
linked values

539
00:20:06,640 --> 00:20:08,640
so this property replica property

540
00:20:08,640 --> 00:20:11,039
metadata exists on each and every object

541
00:20:11,039 --> 00:20:12,480
in active directory

542
00:20:12,480 --> 00:20:15,280
right and this actually saves a

543
00:20:15,280 --> 00:20:17,039
replication information that was

544
00:20:17,039 --> 00:20:19,039
exchanged between domain controllers

545
00:20:19,039 --> 00:20:21,520
and it saves it on the objects so it's

546
00:20:21,520 --> 00:20:22,480
it sits

547
00:20:22,480 --> 00:20:25,840
directly on the ntds did on the ad

548
00:20:25,840 --> 00:20:27,679
database file the physical file on the

549
00:20:27,679 --> 00:20:29,520
snapshot of system backup

550
00:20:29,520 --> 00:20:31,840
and it has nothing to do with the logs

551
00:20:31,840 --> 00:20:33,520
and also

552
00:20:33,520 --> 00:20:35,200
anything that happens in communication

553
00:20:35,200 --> 00:20:36,960
wise will be saved to this dog

554
00:20:36,960 --> 00:20:40,000
so wouldn't it be nice if we had a tool

555
00:20:40,000 --> 00:20:42,559
that can actually look back in time even

556
00:20:42,559 --> 00:20:44,720
if we have no domain controller online

557
00:20:44,720 --> 00:20:46,240
all our domain controllers got their

558
00:20:46,240 --> 00:20:47,760
security logs wiped

559
00:20:47,760 --> 00:20:49,840
or they got ransomed and we just have a

560
00:20:49,840 --> 00:20:50,960
backup

561
00:20:50,960 --> 00:20:53,360
let's say from the myers incident we

562
00:20:53,360 --> 00:20:54,240
just got a

563
00:20:54,240 --> 00:20:57,039
backup from one dc in africa and from

564
00:20:57,039 --> 00:20:58,640
that we have to reconstruct the network

565
00:20:58,640 --> 00:21:00,880
but we still want the forensic evidence

566
00:21:00,880 --> 00:21:04,240
so would be nice right but there is no

567
00:21:04,240 --> 00:21:05,679
such tool

568
00:21:05,679 --> 00:21:08,400
until today so what we're going to do in

569
00:21:08,400 --> 00:21:09,840
this scenario we're not i'm not going to

570
00:21:09,840 --> 00:21:11,200
show you a code i'm just going to go

571
00:21:11,200 --> 00:21:12,559
through the scenarios but i'm going to

572
00:21:12,559 --> 00:21:14,000
share that we are going to share the

573
00:21:14,000 --> 00:21:15,520
code with you afterwards

574
00:21:15,520 --> 00:21:18,159
on github so we're going to search for

575
00:21:18,159 --> 00:21:19,600
interesting strings in your active

576
00:21:19,600 --> 00:21:20,320
directory

577
00:21:20,320 --> 00:21:22,480
which i suggest you'll do right after

578
00:21:22,480 --> 00:21:24,080
this talk you might be surprised

579
00:21:24,080 --> 00:21:25,600
then we're going to find some renamed

580
00:21:25,600 --> 00:21:27,360
accounts suspiciously named same account

581
00:21:27,360 --> 00:21:29,200
names then we're going to discover

582
00:21:29,200 --> 00:21:31,200
all the logs were wiped and we don't

583
00:21:31,200 --> 00:21:33,679
really have a seam or we lack some

584
00:21:33,679 --> 00:21:35,679
the right artifacts in the right logs in

585
00:21:35,679 --> 00:21:37,360
the seams are not collected

586
00:21:37,360 --> 00:21:40,320
and then we have that either application

587
00:21:40,320 --> 00:21:42,320
metadata to the rescue with an automated

588
00:21:42,320 --> 00:21:44,000
script that is shared online

589
00:21:44,000 --> 00:21:46,240
so we're going to begin to hunt for that

590
00:21:46,240 --> 00:21:48,240
user annette which we saw in the bitmap

591
00:21:48,240 --> 00:21:49,200
cache hunter

592
00:21:49,200 --> 00:21:51,840
bmc cash hunter and we're just going to

593
00:21:51,840 --> 00:21:53,760
query it from ad but oops

594
00:21:53,760 --> 00:21:56,000
we don't have a username the net that's

595
00:21:56,000 --> 00:21:58,000
weird because we have other

596
00:21:58,000 --> 00:21:59,919
tacit forensic evidence from the

597
00:21:59,919 --> 00:22:02,000
computer from the rdp cache that we had

598
00:22:02,000 --> 00:22:02,880
the user so

599
00:22:02,880 --> 00:22:05,120
first of all i encourage you if you

600
00:22:05,120 --> 00:22:06,559
didn't do so already

601
00:22:06,559 --> 00:22:09,039
to enable 80 recycle bin i don't know if

602
00:22:09,039 --> 00:22:10,640
all of you are aware of it but for a

603
00:22:10,640 --> 00:22:11,280
while now

604
00:22:11,280 --> 00:22:13,840
around the decade we had a feature uh

605
00:22:13,840 --> 00:22:14,720
that can keep

606
00:22:14,720 --> 00:22:16,960
deleted objects and reanimate them uh

607
00:22:16,960 --> 00:22:17,760
when we want

608
00:22:17,760 --> 00:22:19,760
the first script that we'll share with

609
00:22:19,760 --> 00:22:21,760
you is a script that essentially

610
00:22:21,760 --> 00:22:24,720
very simply searches for any string you

611
00:22:24,720 --> 00:22:25,120
want

612
00:22:25,120 --> 00:22:28,159
in the entire active directory object

613
00:22:28,159 --> 00:22:29,039
tree

614
00:22:29,039 --> 00:22:31,390
so this looks for a match

615
00:22:31,390 --> 00:22:32,640
[Music]

616
00:22:32,640 --> 00:22:34,960
everywhere in all the properties of all

617
00:22:34,960 --> 00:22:36,559
the objects in the italian tree

618
00:22:36,559 --> 00:22:37,600
recursively so

619
00:22:37,600 --> 00:22:40,760
for example this you know b9 string and

620
00:22:40,760 --> 00:22:42,240
9210

621
00:22:42,240 --> 00:22:45,440
from beverly hills this is a file time

622
00:22:45,440 --> 00:22:47,280
uh password last set attribute if we

623
00:22:47,280 --> 00:22:49,760
look uh for this uh for example for the

624
00:22:49,760 --> 00:22:51,120
world password

625
00:22:51,120 --> 00:22:53,360
try to do it at home on your network so

626
00:22:53,360 --> 00:22:55,039
you'll see some benign results like

627
00:22:55,039 --> 00:22:56,960
password replication policy

628
00:22:56,960 --> 00:22:59,520
or perhaps maybe a lapse enabled

629
00:22:59,520 --> 00:23:00,240
computer

630
00:23:00,240 --> 00:23:02,400
from the local administrator password

631
00:23:02,400 --> 00:23:04,400
solution etc

632
00:23:04,400 --> 00:23:06,000
but on the way we find something

633
00:23:06,000 --> 00:23:07,840
interesting about the password reset by

634
00:23:07,840 --> 00:23:09,120
username the net

635
00:23:09,120 --> 00:23:10,960
and that happened in june that's not not

636
00:23:10,960 --> 00:23:12,320
too long ago right

637
00:23:12,320 --> 00:23:15,679
so something is fishy here uh if we want

638
00:23:15,679 --> 00:23:16,400
to just

639
00:23:16,400 --> 00:23:18,960
separate uh this specific finding using

640
00:23:18,960 --> 00:23:20,159
the same script so

641
00:23:20,159 --> 00:23:22,159
we'll just gonna search for our net and

642
00:23:22,159 --> 00:23:24,240
show this match details

643
00:23:24,240 --> 00:23:27,360
uh so there you go so that that's

644
00:23:27,360 --> 00:23:29,760
that's some evidence that maybe

645
00:23:29,760 --> 00:23:30,480
something

646
00:23:30,480 --> 00:23:33,360
was renamed annette there so the we're

647
00:23:33,360 --> 00:23:34,240
going to look for

648
00:23:34,240 --> 00:23:37,360
renamed users what this script does is

649
00:23:37,360 --> 00:23:40,080
it looks for specific events where the

650
00:23:40,080 --> 00:23:42,159
same account name was renamed

651
00:23:42,159 --> 00:23:44,720
this is quite an unusual step right if

652
00:23:44,720 --> 00:23:45,440
if you know

653
00:23:45,440 --> 00:23:47,200
a bit and you're managing networks you

654
00:23:47,200 --> 00:23:49,200
know renaming the user logon name

655
00:23:49,200 --> 00:23:50,159
essentially

656
00:23:50,159 --> 00:23:51,279
it's not something that happens every

657
00:23:51,279 --> 00:23:54,080
day only when it's uh you change the

658
00:23:54,080 --> 00:23:56,799
prefix etc and we see the user annette

659
00:23:56,799 --> 00:23:58,799
previous m accountant was annette but

660
00:23:58,799 --> 00:24:02,000
now it's called jnd essentially jane doe

661
00:24:02,000 --> 00:24:05,200
and so we're gonna look and

662
00:24:05,200 --> 00:24:06,960
for example in this case we find also in

663
00:24:06,960 --> 00:24:09,200
the logs we can see the user annette got

664
00:24:09,200 --> 00:24:10,240
renamed to jnd

665
00:24:10,240 --> 00:24:12,799
so now we know we have to hunt for the

666
00:24:12,799 --> 00:24:14,640
current entity named jd

667
00:24:14,640 --> 00:24:18,240
inside the active directory application

668
00:24:18,240 --> 00:24:19,279
metadata

669
00:24:19,279 --> 00:24:21,600
so this simple script again leaving of

670
00:24:21,600 --> 00:24:22,320
the land

671
00:24:22,320 --> 00:24:24,720
no dependencies no special permission

672
00:24:24,720 --> 00:24:25,679
you can run it from

673
00:24:25,679 --> 00:24:28,159
any machine it doesn't require any

674
00:24:28,159 --> 00:24:28,880
specific

675
00:24:28,880 --> 00:24:30,720
special model we run it directly with

676
00:24:30,720 --> 00:24:32,240
the native apis

677
00:24:32,240 --> 00:24:34,720
you can see all the changes that

678
00:24:34,720 --> 00:24:36,320
happened to this user since it was

679
00:24:36,320 --> 00:24:37,919
created since its birth

680
00:24:37,919 --> 00:24:39,600
essentially so you could see it was

681
00:24:39,600 --> 00:24:41,600
created back in 2016.

682
00:24:41,600 --> 00:24:43,440
you can see the password was reset you

683
00:24:43,440 --> 00:24:45,679
can see the assignment of the different

684
00:24:45,679 --> 00:24:47,600
semi-account type you can see

685
00:24:47,600 --> 00:24:50,880
it got populated uh with some attributes

686
00:24:50,880 --> 00:24:52,559
essentially we see it was an automated

687
00:24:52,559 --> 00:24:54,320
script because you see the timestamp

688
00:24:54,320 --> 00:24:55,600
everything happened in the same

689
00:24:55,600 --> 00:24:56,559
timestamp

690
00:24:56,559 --> 00:24:58,559
essentially a human cannot change the

691
00:24:58,559 --> 00:25:00,720
company name department etc

692
00:25:00,720 --> 00:25:03,200
but more interestingly the last evidence

693
00:25:03,200 --> 00:25:05,200
we see sorted but or isn't originating

694
00:25:05,200 --> 00:25:06,000
change time

695
00:25:06,000 --> 00:25:08,640
it was a privileged user admin count one

696
00:25:08,640 --> 00:25:09,360
means

697
00:25:09,360 --> 00:25:12,240
that this user was in the past or still

698
00:25:12,240 --> 00:25:12,720
is

699
00:25:12,720 --> 00:25:15,840
a member of a privileged user group in

700
00:25:15,840 --> 00:25:19,520
active directory account operators

701
00:25:21,520 --> 00:25:24,320
and and we also see it has a cd story

702
00:25:24,320 --> 00:25:25,440
populated

703
00:25:25,440 --> 00:25:26,799
usually but you see the read the

704
00:25:26,799 --> 00:25:28,640
relative id is 500 means

705
00:25:28,640 --> 00:25:31,440
it has a cd story perhaps for migration

706
00:25:31,440 --> 00:25:32,720
maybe legitimate

707
00:25:32,720 --> 00:25:34,240
but that's something that should have

708
00:25:34,240 --> 00:25:36,240
been cleaned after the 80 migration took

709
00:25:36,240 --> 00:25:37,679
place and 500

710
00:25:37,679 --> 00:25:40,480
always is suspicious so now we're going

711
00:25:40,480 --> 00:25:41,039
to run

712
00:25:41,039 --> 00:25:43,760
a different tool and this tool get ad

713
00:25:43,760 --> 00:25:45,600
group changes essentially yet another

714
00:25:45,600 --> 00:25:48,000
open source powershell tool we're going

715
00:25:48,000 --> 00:25:48,799
to query

716
00:25:48,799 --> 00:25:52,080
uh the group membership changes for this

717
00:25:52,080 --> 00:25:53,440
user jnt

718
00:25:53,440 --> 00:25:56,159
and when we query the changes we we're

719
00:25:56,159 --> 00:25:56,799
gonna see

720
00:25:56,799 --> 00:25:59,679
exactly when this action occurred in

721
00:25:59,679 --> 00:26:00,159
time

722
00:26:00,159 --> 00:26:02,000
and pay attention this happens

723
00:26:02,000 --> 00:26:04,559
regardless of your logs

724
00:26:04,559 --> 00:26:06,640
you don't need to collect anything right

725
00:26:06,640 --> 00:26:09,520
this is directly from the raw ntds sdit

726
00:26:09,520 --> 00:26:10,480
file

727
00:26:10,480 --> 00:26:13,279
in active directory so we can see it was

728
00:26:13,279 --> 00:26:15,279
a member of backup operators for two

729
00:26:15,279 --> 00:26:17,120
hours which is suspicious enough

730
00:26:17,120 --> 00:26:19,039
that it was added and removed the last

731
00:26:19,039 --> 00:26:20,880
action was removed

732
00:26:20,880 --> 00:26:22,799
and we can see exactly on what date it

733
00:26:22,799 --> 00:26:24,559
happened and this can help us tie out

734
00:26:24,559 --> 00:26:25,600
and tie down

735
00:26:25,600 --> 00:26:27,760
uh the timeline of the attack now we're

736
00:26:27,760 --> 00:26:29,520
gonna output to a grid

737
00:26:29,520 --> 00:26:32,799
uh all the membership changes additions

738
00:26:32,799 --> 00:26:33,679
removals

739
00:26:33,679 --> 00:26:36,799
of uh domain admins

740
00:26:36,799 --> 00:26:39,520
right so in this group quite interesting

741
00:26:39,520 --> 00:26:40,400
and known group

742
00:26:40,400 --> 00:26:43,039
we see there is a user named terry now

743
00:26:43,039 --> 00:26:44,960
this user last action last change that

744
00:26:44,960 --> 00:26:46,400
happened to him in this group it was

745
00:26:46,400 --> 00:26:47,200
removed

746
00:26:47,200 --> 00:26:49,279
but we can see that the member admin

747
00:26:49,279 --> 00:26:51,760
count attribute was reset

748
00:26:51,760 --> 00:26:54,400
now that's peculiar because if uh and

749
00:26:54,400 --> 00:26:55,279
the last change

750
00:26:55,279 --> 00:26:58,559
it was it happened 145 days ago so if a

751
00:26:58,559 --> 00:27:01,440
sysadmin did that as a maintenance thing

752
00:27:01,440 --> 00:27:02,159
whatever

753
00:27:02,159 --> 00:27:04,320
so that's okay but if nobody in the i.t

754
00:27:04,320 --> 00:27:06,000
department knows about that and

755
00:27:06,000 --> 00:27:08,080
and it was removed that means you don't

756
00:27:08,080 --> 00:27:10,000
have evidence about that in the log

757
00:27:10,000 --> 00:27:11,679
the user was a member of a privileged

758
00:27:11,679 --> 00:27:13,679
group it was removed and the

759
00:27:13,679 --> 00:27:15,679
attribute that indicates it was a

760
00:27:15,679 --> 00:27:17,039
privileged user was

761
00:27:17,039 --> 00:27:20,080
maliciously removed just before uh

762
00:27:20,080 --> 00:27:22,720
getting it out of the machine so and and

763
00:27:22,720 --> 00:27:23,360
we're going to

764
00:27:23,360 --> 00:27:26,640
query again terry and we see

765
00:27:26,640 --> 00:27:30,080
exactly this evidence also directly uh

766
00:27:30,080 --> 00:27:32,960
from the tool from the command line so

767
00:27:32,960 --> 00:27:34,000
in this case until

768
00:27:34,000 --> 00:27:35,840
now we created live data we're just

769
00:27:35,840 --> 00:27:37,440
squaring an online dc a domain

770
00:27:37,440 --> 00:27:39,760
controller that answers our requests and

771
00:27:39,760 --> 00:27:41,760
and we get all this metadata back from

772
00:27:41,760 --> 00:27:43,279
the meta replica

773
00:27:43,279 --> 00:27:46,799
replication metadata but what we're

774
00:27:46,799 --> 00:27:47,279
going to

775
00:27:47,279 --> 00:27:50,080
do now is essentially we're going to

776
00:27:50,080 --> 00:27:50,880
move to

777
00:27:50,880 --> 00:27:53,039
a windows 10 machine we're going to work

778
00:27:53,039 --> 00:27:54,159
offline so

779
00:27:54,159 --> 00:27:55,919
until now we worked with the live domain

780
00:27:55,919 --> 00:27:57,360
right you see

781
00:27:57,360 --> 00:27:58,720
the distinguished name of the domain

782
00:27:58,720 --> 00:28:00,480
we've worked at and we have a like local

783
00:28:00,480 --> 00:28:02,320
logon server blah blah blah

784
00:28:02,320 --> 00:28:04,320
we go out of the vm we work on a windows

785
00:28:04,320 --> 00:28:05,520
10 machine right

786
00:28:05,520 --> 00:28:08,240
this is an offline machine uh there you

787
00:28:08,240 --> 00:28:09,600
go

788
00:28:09,600 --> 00:28:11,360
and what we're going to do is we're

789
00:28:11,360 --> 00:28:13,279
going to use the same tool get ad group

790
00:28:13,279 --> 00:28:14,320
changes

791
00:28:14,320 --> 00:28:16,240
to query an offline database file so

792
00:28:16,240 --> 00:28:17,840
either you take it from a system state

793
00:28:17,840 --> 00:28:18,480
backup

794
00:28:18,480 --> 00:28:21,279
or a snapshot in ntds util uh all we

795
00:28:21,279 --> 00:28:23,919
need is the ntds did right the dit file

796
00:28:23,919 --> 00:28:27,440
the ntds directory information tree and

797
00:28:27,440 --> 00:28:31,600
now we're gonna query this file offline

798
00:28:31,600 --> 00:28:33,440
this is very useful because you can use

799
00:28:33,440 --> 00:28:35,919
this offline backup either when uh

800
00:28:35,919 --> 00:28:38,240
you need to query the information for

801
00:28:38,240 --> 00:28:38,960
forensic

802
00:28:38,960 --> 00:28:41,760
evidence outside of the customer premise

803
00:28:41,760 --> 00:28:43,679
or maybe the network is down

804
00:28:43,679 --> 00:28:45,039
maybe you cannot access those domain

805
00:28:45,039 --> 00:28:46,640
controllers that's another scenario oh

806
00:28:46,640 --> 00:28:49,039
maybe all the domain consoles got wiped

807
00:28:49,039 --> 00:28:51,200
and while the other team is focusing on

808
00:28:51,200 --> 00:28:52,640
dr on recovery

809
00:28:52,640 --> 00:28:55,200
so you can do forensics and as you can

810
00:28:55,200 --> 00:28:56,080
see we're

811
00:28:56,080 --> 00:28:58,159
specifying the parameters the switch for

812
00:28:58,159 --> 00:28:59,919
using an offline ad backup

813
00:28:59,919 --> 00:29:03,039
giving it's the uh location

814
00:29:03,039 --> 00:29:05,919
uh from from our standalone workstation

815
00:29:05,919 --> 00:29:07,039
we can query that

816
00:29:07,039 --> 00:29:09,120
you can see what the tool does it

817
00:29:09,120 --> 00:29:10,480
essentially loads the

818
00:29:10,480 --> 00:29:13,360
database in memory as an ldap server

819
00:29:13,360 --> 00:29:14,559
looking for a

820
00:29:14,559 --> 00:29:18,080
an available port and now we're

821
00:29:18,080 --> 00:29:20,720
requiring essentially a running instance

822
00:29:20,720 --> 00:29:22,720
a live instance of this

823
00:29:22,720 --> 00:29:25,440
of your ad server in an offline

824
00:29:25,440 --> 00:29:26,480
environment

825
00:29:26,480 --> 00:29:28,480
and requiring all this forensic data

826
00:29:28,480 --> 00:29:30,799
directly from this on flying environment

827
00:29:30,799 --> 00:29:33,919
uh we're gonna dive a bit more

828
00:29:33,919 --> 00:29:37,520
and uh look in this case for example

829
00:29:37,520 --> 00:29:39,120
we're gonna use the existing offline db

830
00:29:39,120 --> 00:29:40,559
instance for performance and we're going

831
00:29:40,559 --> 00:29:41,600
to take out

832
00:29:41,600 --> 00:29:44,880
a report of all group membership

833
00:29:44,880 --> 00:29:47,679
data as essentially what we're going to

834
00:29:47,679 --> 00:29:48,480
get

835
00:29:48,480 --> 00:29:50,880
is all the changes removals privileged

836
00:29:50,880 --> 00:29:51,840
users or not

837
00:29:51,840 --> 00:29:55,279
of that were done in these domains sense

838
00:29:55,279 --> 00:29:58,960
its creation so everything that happened

839
00:29:58,960 --> 00:29:59,520
in this

840
00:29:59,520 --> 00:30:02,480
domain whether you you have some tools

841
00:30:02,480 --> 00:30:02,960
that

842
00:30:02,960 --> 00:30:05,279
do that or do that partially or etc so

843
00:30:05,279 --> 00:30:06,799
now you have this free tool that does

844
00:30:06,799 --> 00:30:07,600
all this

845
00:30:07,600 --> 00:30:09,600
for you so you can run it just to

846
00:30:09,600 --> 00:30:11,279
monitor changes in your environment

847
00:30:11,279 --> 00:30:13,679
or god forbid if you have to do it

848
00:30:13,679 --> 00:30:15,520
during an incident response or an

849
00:30:15,520 --> 00:30:18,320
investigation

850
00:30:18,320 --> 00:30:20,880
open source powershell no dependencies

851
00:30:20,880 --> 00:30:22,000
you don't have to install any

852
00:30:22,000 --> 00:30:25,440
module we worked quite hard on that

853
00:30:25,440 --> 00:30:27,919
no special permissions right you just

854
00:30:27,919 --> 00:30:28,720
square it

855
00:30:28,720 --> 00:30:30,559
in ldap and this data is available

856
00:30:30,559 --> 00:30:33,120
read-only or if you're offline we made

857
00:30:33,120 --> 00:30:34,720
sure that the instance by default it's

858
00:30:34,720 --> 00:30:36,640
created for admins only we removed the

859
00:30:36,640 --> 00:30:37,600
token

860
00:30:37,600 --> 00:30:39,760
so you can query it from a normal user

861
00:30:39,760 --> 00:30:42,080
and this grid living off the land so you

862
00:30:42,080 --> 00:30:42,880
can just

863
00:30:42,880 --> 00:30:44,480
filter it and you get any results you

864
00:30:44,480 --> 00:30:46,640
want by any name you know any username

865
00:30:46,640 --> 00:30:47,279
any

866
00:30:47,279 --> 00:30:50,000
machine and whatsoever and that's just

867
00:30:50,000 --> 00:30:50,640
up on

868
00:30:50,640 --> 00:30:54,240
github as we speak thank you

869
00:30:56,320 --> 00:30:59,760
always fun so to sum up

870
00:30:59,760 --> 00:31:02,840
uh very cool this world of forensic

871
00:31:02,840 --> 00:31:04,240
artifacts

872
00:31:04,240 --> 00:31:06,720
but some of those artifacts are really

873
00:31:06,720 --> 00:31:09,440
far from getting them out of the box

874
00:31:09,440 --> 00:31:11,200
not all of them are turned on by default

875
00:31:11,200 --> 00:31:13,360
and attackers can essentially wipe your

876
00:31:13,360 --> 00:31:14,720
logs or try to do

877
00:31:14,720 --> 00:31:17,360
really sophisticated stuff yet with some

878
00:31:17,360 --> 00:31:18,000
knowledge and

879
00:31:18,000 --> 00:31:20,080
and essentially insight and integration

880
00:31:20,080 --> 00:31:22,240
of sources you can really come up

881
00:31:22,240 --> 00:31:25,279
uh with useful tools for yourself we

882
00:31:25,279 --> 00:31:27,120
encourage you in this cat and mouse

883
00:31:27,120 --> 00:31:28,320
chase uh

884
00:31:28,320 --> 00:31:31,200
i come especially uh more heavily uh

885
00:31:31,200 --> 00:31:32,799
from the offensive side and with the

886
00:31:32,799 --> 00:31:33,279
ears

887
00:31:33,279 --> 00:31:35,200
i try to help the blue team as much as i

888
00:31:35,200 --> 00:31:36,320
can

889
00:31:36,320 --> 00:31:38,880
playing this in and out because it's a

890
00:31:38,880 --> 00:31:41,120
an unfair battlefield and trying to give

891
00:31:41,120 --> 00:31:43,039
a fair chance for the defenders

892
00:31:43,039 --> 00:31:45,600
so try to practice a before during and

893
00:31:45,600 --> 00:31:46,480
after approach

894
00:31:46,480 --> 00:31:48,559
meaning don't wait for the incident to

895
00:31:48,559 --> 00:31:50,880
have the tools and knowledge and mindset

896
00:31:50,880 --> 00:31:53,600
just read about take those tools the one

897
00:31:53,600 --> 00:31:55,200
we mentioned also in this talk there

898
00:31:55,200 --> 00:31:56,640
there is a bunch more

899
00:31:56,640 --> 00:31:59,039
that is very useful and free driven by

900
00:31:59,039 --> 00:32:00,240
the community

901
00:32:00,240 --> 00:32:01,919
during the event know what to do about

902
00:32:01,919 --> 00:32:04,080
that and after the event make sure in

903
00:32:04,080 --> 00:32:06,559
the post ir that you don't leave any

904
00:32:06,559 --> 00:32:09,360
uh stones unturned you know any

905
00:32:09,360 --> 00:32:11,760
backdoors or persistence mechanisms

906
00:32:11,760 --> 00:32:13,679
whether it's in the host level or in the

907
00:32:13,679 --> 00:32:15,600
network level

908
00:32:15,600 --> 00:32:19,039
and check out our gits from

909
00:32:19,039 --> 00:32:21,600
the tools that we just uploaded you

910
00:32:21,600 --> 00:32:22,799
won't get disappointed

911
00:32:22,799 --> 00:32:28,799
you won't be seeing cheers thank you

