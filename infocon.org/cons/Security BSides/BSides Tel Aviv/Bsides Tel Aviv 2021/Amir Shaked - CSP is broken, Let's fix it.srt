1
00:00:00,240 --> 00:00:02,080
yes okay amir please join me here on the

2
00:00:02,080 --> 00:00:04,080
stage so everybody please help me by

3
00:00:04,080 --> 00:00:04,880
welcoming

4
00:00:04,880 --> 00:00:08,639
amir shakir yeah

5
00:00:08,639 --> 00:00:11,679
and i want to tell you a couple of fun

6
00:00:11,679 --> 00:00:13,360
facts about emil so amir

7
00:00:13,360 --> 00:00:15,920
is the vp senior vp of research and

8
00:00:15,920 --> 00:00:16,640
development

9
00:00:16,640 --> 00:00:20,320
at perimeter x and he's here to talk

10
00:00:20,320 --> 00:00:20,800
about

11
00:00:20,800 --> 00:00:24,320
hacking and fixing the csp standard the

12
00:00:24,320 --> 00:00:25,359
content security

13
00:00:25,359 --> 00:00:27,680
policy standard but what you didn't know

14
00:00:27,680 --> 00:00:29,279
about amir is that other than

15
00:00:29,279 --> 00:00:32,558
being a security pro he also has a

16
00:00:32,558 --> 00:00:35,840
degree in physics amir quickly what is

17
00:00:35,840 --> 00:00:36,239
pi

18
00:00:36,239 --> 00:00:39,200
after five points after the five numbers

19
00:00:39,200 --> 00:00:41,280
after the point of pi

20
00:00:41,280 --> 00:00:44,559
three point i really don't know

21
00:00:44,559 --> 00:00:46,800
oh okay well i wanted to tell you he got

22
00:00:46,800 --> 00:00:48,559
his degree at tel aviv university

23
00:00:48,559 --> 00:00:50,320
but since he didn't know it you got it

24
00:00:50,320 --> 00:00:52,800
in another university

25
00:00:52,800 --> 00:00:55,199
so he has a degree in physics and an mba

26
00:00:55,199 --> 00:00:57,120
both from here from tel aviv university

27
00:00:57,120 --> 00:00:59,840
and his i asked him for his hobby he

28
00:00:59,840 --> 00:01:00,640
says he likes

29
00:01:00,640 --> 00:01:04,879
python 2.7 so there you have it please

30
00:01:04,879 --> 00:01:08,799
welcome amir to our stage

31
00:01:10,400 --> 00:01:15,360
all right let's see if it works

32
00:01:15,360 --> 00:01:18,479
it works excellent hi everyone

33
00:01:18,479 --> 00:01:20,880
uh great being here so much fun doing a

34
00:01:20,880 --> 00:01:21,600
live event

35
00:01:21,600 --> 00:01:23,840
after such a year with only zoom and

36
00:01:23,840 --> 00:01:26,320
seeing on myself

37
00:01:26,320 --> 00:01:28,560
we're going to talk a bit about csp how

38
00:01:28,560 --> 00:01:30,000
we might try to fix it

39
00:01:30,000 --> 00:01:32,720
and part of the purpose of this talk is

40
00:01:32,720 --> 00:01:34,320
to invite everybody here

41
00:01:34,320 --> 00:01:36,640
to try and dive in find more problems

42
00:01:36,640 --> 00:01:38,640
and try to contribute to the csp3

43
00:01:38,640 --> 00:01:40,640
standard to make it better secured and

44
00:01:40,640 --> 00:01:41,360
improve

45
00:01:41,360 --> 00:01:44,000
everyone's security along the way we'll

46
00:01:44,000 --> 00:01:45,920
just demystify a few things

47
00:01:45,920 --> 00:01:49,600
that you might have already known or not

48
00:01:50,159 --> 00:01:53,200
like karen said my name is amir shaked

49
00:01:53,200 --> 00:01:55,680
i lead the research and development at

50
00:01:55,680 --> 00:01:57,280
perimeterix i've been around

51
00:01:57,280 --> 00:02:00,399
security for many years

52
00:02:00,399 --> 00:02:02,960
i avoid warranties i am a lifelong

53
00:02:02,960 --> 00:02:04,159
hacker

54
00:02:04,159 --> 00:02:06,159
aspiring father trying to teach them to

55
00:02:06,159 --> 00:02:08,479
break stuff as well and

56
00:02:08,479 --> 00:02:11,840
will that will dive in straight um

57
00:02:11,840 --> 00:02:14,879
to i think hypothetical story but if

58
00:02:14,879 --> 00:02:19,120
somebody had such a case in his own

59
00:02:19,120 --> 00:02:21,760
work it would be very interesting to see

60
00:02:21,760 --> 00:02:23,040
so

61
00:02:23,040 --> 00:02:25,120
i wanted to enable csp on my website on

62
00:02:25,120 --> 00:02:26,640
our own website

63
00:02:26,640 --> 00:02:28,239
we read and understood the spec

64
00:02:28,239 --> 00:02:30,239
completely it's very well and easily

65
00:02:30,239 --> 00:02:31,440
understood

66
00:02:31,440 --> 00:02:33,599
we added the header with report only

67
00:02:33,599 --> 00:02:35,519
mode and then

68
00:02:35,519 --> 00:02:37,599
a day later we marked all the resources

69
00:02:37,599 --> 00:02:39,120
all the

70
00:02:39,120 --> 00:02:41,120
all the notifications that we got all

71
00:02:41,120 --> 00:02:43,680
the violations supposedly violations

72
00:02:43,680 --> 00:02:46,480
we cleaned everything we rolled it out

73
00:02:46,480 --> 00:02:48,879
we had zero issues with the website

74
00:02:48,879 --> 00:02:51,680
and everything worked fluently i think

75
00:02:51,680 --> 00:02:52,400
no one said

76
00:02:52,400 --> 00:02:56,720
ever anybody here tried to use csp

77
00:02:56,720 --> 00:03:00,640
as a technology one

78
00:03:00,879 --> 00:03:04,080
two okay that's pretty much the stats

79
00:03:04,080 --> 00:03:06,720
that we see also in the internet so it

80
00:03:06,720 --> 00:03:10,000
works long now

81
00:03:10,000 --> 00:03:12,159
it really is a very complicated standard

82
00:03:12,159 --> 00:03:13,840
and it has a lot of problems along the

83
00:03:13,840 --> 00:03:16,239
way on trying to implement it and use it

84
00:03:16,239 --> 00:03:19,360
uh what is uh really frustrating is that

85
00:03:19,360 --> 00:03:21,360
a real story that we did encounter and

86
00:03:21,360 --> 00:03:22,400
helped with

87
00:03:22,400 --> 00:03:26,000
was something a bit differently

88
00:03:26,000 --> 00:03:29,760
so we got a call from the company um

89
00:03:29,760 --> 00:03:32,239
um we got a call from the credit card

90
00:03:32,239 --> 00:03:33,280
company

91
00:03:33,280 --> 00:03:35,519
telling us uh they see a lot of credit

92
00:03:35,519 --> 00:03:37,120
cards being used on some

93
00:03:37,120 --> 00:03:40,799
website uh being uh circulated in some

94
00:03:40,799 --> 00:03:44,080
forums being used and they correlated

95
00:03:44,080 --> 00:03:45,360
all those credit cards

96
00:03:45,360 --> 00:03:47,840
to a specific website and they're

97
00:03:47,840 --> 00:03:48,959
talking with that

98
00:03:48,959 --> 00:03:50,480
company trying to understand what

99
00:03:50,480 --> 00:03:52,560
happened reviewing all the security

100
00:03:52,560 --> 00:03:56,159
possibilities along there and then

101
00:03:56,159 --> 00:03:58,319
what we see is they configured

102
00:03:58,319 --> 00:04:01,120
everything properly everything was

103
00:04:01,120 --> 00:04:04,480
well defined but there was a fundamental

104
00:04:04,480 --> 00:04:07,519
flaw which they have no control over and

105
00:04:07,519 --> 00:04:07,920
that's

106
00:04:07,920 --> 00:04:10,720
the supply chain some third-party vendor

107
00:04:10,720 --> 00:04:11,680
that got hacked

108
00:04:11,680 --> 00:04:14,239
that specific case was a chatbot they

109
00:04:14,239 --> 00:04:15,200
were using

110
00:04:15,200 --> 00:04:17,358
they got hacked their social code was

111
00:04:17,358 --> 00:04:19,680
replaced with an additional code

112
00:04:19,680 --> 00:04:22,960
and that code worked and

113
00:04:22,960 --> 00:04:26,000
basically exfiltrated data from the

114
00:04:26,000 --> 00:04:26,960
website

115
00:04:26,960 --> 00:04:30,000
digital scheming if you want to an

116
00:04:30,000 --> 00:04:31,919
external entity

117
00:04:31,919 --> 00:04:34,400
now it was whitelisted and everything

118
00:04:34,400 --> 00:04:35,520
was supposed to work

119
00:04:35,520 --> 00:04:38,639
properly but why this doesn't mean that

120
00:04:38,639 --> 00:04:40,880
you will not be able to accelerate

121
00:04:40,880 --> 00:04:42,639
information

122
00:04:42,639 --> 00:04:46,160
and let's go here

123
00:04:46,160 --> 00:04:47,600
and from there i want to talk a little

124
00:04:47,600 --> 00:04:49,199
bit about csp what does it mean

125
00:04:49,199 --> 00:04:51,440
how is it used and then we can see a few

126
00:04:51,440 --> 00:04:53,199
of the cases where it breaks down and

127
00:04:53,199 --> 00:04:53,520
has

128
00:04:53,520 --> 00:04:56,800
issues so csp is a standard

129
00:04:56,800 --> 00:04:59,919
um it's actually been around for a lot a

130
00:04:59,919 --> 00:05:01,360
long time

131
00:05:01,360 --> 00:05:04,479
it was first conceived in 2004 by robert

132
00:05:04,479 --> 00:05:05,039
hansen

133
00:05:05,039 --> 00:05:07,759
he um gave the name content security

134
00:05:07,759 --> 00:05:08,639
policy

135
00:05:08,639 --> 00:05:11,680
only around 2012 it actually became a

136
00:05:11,680 --> 00:05:12,639
standard by

137
00:05:12,639 --> 00:05:15,600
w3c that websites started to use and

138
00:05:15,600 --> 00:05:18,320
implement in their own infrastructure

139
00:05:18,320 --> 00:05:20,639
and the common version version 2 which

140
00:05:20,639 --> 00:05:21,680
is the official one

141
00:05:21,680 --> 00:05:24,800
latest version 2016 that's the one that

142
00:05:24,800 --> 00:05:25,840
most browsers

143
00:05:25,840 --> 00:05:28,880
support if you want to see which kind of

144
00:05:28,880 --> 00:05:30,800
features specifically it actually varies

145
00:05:30,800 --> 00:05:31,440
so nobody

146
00:05:31,440 --> 00:05:33,120
really implements the entire standard

147
00:05:33,120 --> 00:05:35,360
like any security standard

148
00:05:35,360 --> 00:05:36,960
can i use is actually a great resource

149
00:05:36,960 --> 00:05:38,420
to see which specific

150
00:05:38,420 --> 00:05:39,919
[Music]

151
00:05:39,919 --> 00:05:42,000
component of the standard is actually

152
00:05:42,000 --> 00:05:43,199
being supported

153
00:05:43,199 --> 00:05:46,000
and the version 3 which started around

154
00:05:46,000 --> 00:05:48,320
2015 is still a work in progress so it's

155
00:05:48,320 --> 00:05:50,639
not finalized yet

156
00:05:50,639 --> 00:05:53,680
and that's being worked on now before i

157
00:05:53,680 --> 00:05:56,560
continue um if anybody has any question

158
00:05:56,560 --> 00:05:57,759
you can just shout

159
00:05:57,759 --> 00:06:00,880
and i'll stop and let you ask it now we

160
00:06:00,880 --> 00:06:02,880
don't have to wait for the end of the

161
00:06:02,880 --> 00:06:06,000
talk okay

162
00:06:06,000 --> 00:06:08,560
so very briefly how does the policy work

163
00:06:08,560 --> 00:06:09,759
what's the standard

164
00:06:09,759 --> 00:06:13,600
it combines two headers one is um

165
00:06:13,600 --> 00:06:15,840
content security policy and the other is

166
00:06:15,840 --> 00:06:18,479
content security policy report only

167
00:06:18,479 --> 00:06:21,840
basically implementing this exact same

168
00:06:21,840 --> 00:06:24,000
standard but not blocking anything just

169
00:06:24,000 --> 00:06:25,199
reporting the violation

170
00:06:25,199 --> 00:06:27,360
if there is a report destination url

171
00:06:27,360 --> 00:06:29,600
where you can send information to

172
00:06:29,600 --> 00:06:31,919
so if we look at this we can see a

173
00:06:31,919 --> 00:06:33,840
pretty simple

174
00:06:33,840 --> 00:06:36,960
description of a policy saying

175
00:06:36,960 --> 00:06:39,199
the default source is to allow any

176
00:06:39,199 --> 00:06:40,479
content to come

177
00:06:40,479 --> 00:06:44,080
from the website source code javascript

178
00:06:44,080 --> 00:06:46,000
code can come from the website

179
00:06:46,000 --> 00:06:48,479
itself and a specific domain cdnjs in

180
00:06:48,479 --> 00:06:49,520
this case

181
00:06:49,520 --> 00:06:51,840
and the report uri on any violation will

182
00:06:51,840 --> 00:06:54,720
be to the website slash csp logging

183
00:06:54,720 --> 00:06:56,400
and then in this case this is a two

184
00:06:56,400 --> 00:06:58,080
examples the image and the script will

185
00:06:58,080 --> 00:06:58,479
work

186
00:06:58,479 --> 00:07:00,840
because they're coming from an allowed

187
00:07:00,840 --> 00:07:02,160
destination

188
00:07:02,160 --> 00:07:04,160
and if everything works properly the

189
00:07:04,160 --> 00:07:05,759
last one will not work because it's

190
00:07:05,759 --> 00:07:07,280
trying to download the script

191
00:07:07,280 --> 00:07:10,000
from an unauthorized destination

192
00:07:10,000 --> 00:07:11,759
basically

193
00:07:11,759 --> 00:07:13,680
not within the policy so the entire

194
00:07:13,680 --> 00:07:15,199
concept of csp

195
00:07:15,199 --> 00:07:17,759
is a whitelist method where you define

196
00:07:17,759 --> 00:07:18,960
what is allowed

197
00:07:18,960 --> 00:07:21,919
if something is not allowed it will not

198
00:07:21,919 --> 00:07:23,039
work

199
00:07:23,039 --> 00:07:25,039
which is great in theory somebody here

200
00:07:25,039 --> 00:07:30,080
tried to manage iptables policies

201
00:07:30,080 --> 00:07:33,520
yeah yes to both you have a question

202
00:07:36,000 --> 00:07:45,840
louder please

203
00:07:50,800 --> 00:07:52,800
i get your question so actually this is

204
00:07:52,800 --> 00:07:55,199
a server protection because this is a

205
00:07:55,199 --> 00:07:56,960
csp can define will be defined in two

206
00:07:56,960 --> 00:07:58,639
ways actually didn't thought of

207
00:07:58,639 --> 00:08:01,199
mentioning that one way which is not

208
00:08:01,199 --> 00:08:03,039
recommended would be within the html

209
00:08:03,039 --> 00:08:04,800
tags you can define the policy

210
00:08:04,800 --> 00:08:06,639
the other would be the http header

211
00:08:06,639 --> 00:08:08,560
itself so the server is the one you need

212
00:08:08,560 --> 00:08:09,360
to protect

213
00:08:09,360 --> 00:08:12,319
defining the and releasing that header

214
00:08:12,319 --> 00:08:12,720
so

215
00:08:12,720 --> 00:08:13,919
that's the that's the place where you

216
00:08:13,919 --> 00:08:15,520
need to make sure that sends the right

217
00:08:15,520 --> 00:08:16,240
header

218
00:08:16,240 --> 00:08:18,720
the server

219
00:08:21,599 --> 00:08:23,280
yes if somebody changes if somebody has

220
00:08:23,280 --> 00:08:25,039
control over it's not just the servers

221
00:08:25,039 --> 00:08:26,720
but you need to change specifically

222
00:08:26,720 --> 00:08:28,960
what's configuring the http headers

223
00:08:28,960 --> 00:08:31,520
because in big websites you have a chain

224
00:08:31,520 --> 00:08:32,240
of

225
00:08:32,240 --> 00:08:34,240
elements say the headers come from the

226
00:08:34,240 --> 00:08:36,080
front edge on the cdn

227
00:08:36,080 --> 00:08:37,599
then it will not be able to manipulate

228
00:08:37,599 --> 00:08:40,399
that even if somebody defines something

229
00:08:40,399 --> 00:08:42,479
down the stream so it really depends on

230
00:08:42,479 --> 00:08:44,399
where you control and how the website is

231
00:08:44,399 --> 00:08:47,200
specifically defined there was another

232
00:08:47,200 --> 00:08:49,680
question here

233
00:08:49,920 --> 00:08:53,519
shout because it's hard to see okay

234
00:08:53,519 --> 00:08:56,480
so that's around that um it's most

235
00:08:56,480 --> 00:08:58,080
commonly practiced is to define it with

236
00:08:58,080 --> 00:08:59,120
http headers

237
00:08:59,120 --> 00:09:01,040
i really don't recommend defining it

238
00:09:01,040 --> 00:09:02,399
within the html

239
00:09:02,399 --> 00:09:05,839
it's really hard to maintain okay

240
00:09:05,839 --> 00:09:09,839
so um

241
00:09:09,839 --> 00:09:11,760
i don't know about you guys but being a

242
00:09:11,760 --> 00:09:13,920
hacker seeing a specification just calls

243
00:09:13,920 --> 00:09:15,600
out to let's try and see where it breaks

244
00:09:15,600 --> 00:09:16,000
and what

245
00:09:16,000 --> 00:09:18,640
you can do with it and different methods

246
00:09:18,640 --> 00:09:19,200
we can

247
00:09:19,200 --> 00:09:21,120
play with it first of all it's not fully

248
00:09:21,120 --> 00:09:23,120
defined even with all the

249
00:09:23,120 --> 00:09:26,160
uh well um rich documentation

250
00:09:26,160 --> 00:09:28,480
that i invite everybody to read it's not

251
00:09:28,480 --> 00:09:29,519
fully defined

252
00:09:29,519 --> 00:09:32,880
there are items um that varies

253
00:09:32,880 --> 00:09:35,279
what the reports hold when to report and

254
00:09:35,279 --> 00:09:37,600
i'm going to show some example of that

255
00:09:37,600 --> 00:09:39,279
and that leads to inconsistency when

256
00:09:39,279 --> 00:09:40,959
you're trying to analyze what it is that

257
00:09:40,959 --> 00:09:42,000
you're viewing

258
00:09:42,000 --> 00:09:44,160
the implementation itself may be lacking

259
00:09:44,160 --> 00:09:45,279
um

260
00:09:45,279 --> 00:09:47,279
just char researching csp and the cv

261
00:09:47,279 --> 00:09:48,880
database and see where

262
00:09:48,880 --> 00:09:50,480
where there are gaps in browsers

263
00:09:50,480 --> 00:09:52,560
themselves and it's very usage dependent

264
00:09:52,560 --> 00:09:54,160
and can be abused and i'm going to give

265
00:09:54,160 --> 00:09:55,519
examples on any of

266
00:09:55,519 --> 00:09:57,519
all of these uh how they're actually

267
00:09:57,519 --> 00:09:59,600
being

268
00:09:59,600 --> 00:10:03,839
exploited so let's start with numbers

269
00:10:03,839 --> 00:10:06,160
we've seen this as a security technology

270
00:10:06,160 --> 00:10:07,200
it's been around for

271
00:10:07,200 --> 00:10:09,920
a long time if you actually try to see

272
00:10:09,920 --> 00:10:11,279
what kind of security

273
00:10:11,279 --> 00:10:15,120
methods are being used by websites

274
00:10:15,120 --> 00:10:17,680
we can see the numbers do people know

275
00:10:17,680 --> 00:10:19,440
http archive

276
00:10:19,440 --> 00:10:22,240
the amazing database it's an amazing

277
00:10:22,240 --> 00:10:23,680
resource

278
00:10:23,680 --> 00:10:26,320
i'm glad to see only a few hands so i

279
00:10:26,320 --> 00:10:27,839
invite you all to try and dive in it's

280
00:10:27,839 --> 00:10:29,200
an amazing resource

281
00:10:29,200 --> 00:10:31,839
they scan in the past three four years

282
00:10:31,839 --> 00:10:33,279
they've been scanning four million

283
00:10:33,279 --> 00:10:33,920
websites

284
00:10:33,920 --> 00:10:36,720
every month storing a lot of information

285
00:10:36,720 --> 00:10:37,680
about that

286
00:10:37,680 --> 00:10:39,839
if you're trying to do analysis on web

287
00:10:39,839 --> 00:10:40,800
usage uh

288
00:10:40,800 --> 00:10:42,959
over history that's a very rich

289
00:10:42,959 --> 00:10:44,560
information where you can try and see a

290
00:10:44,560 --> 00:10:45,440
lot of things

291
00:10:45,440 --> 00:10:47,519
what i was specifically looking at was

292
00:10:47,519 --> 00:10:49,120
how the different http headers

293
00:10:49,120 --> 00:10:52,079
were being reported by websites and what

294
00:10:52,079 --> 00:10:53,360
we can see here

295
00:10:53,360 --> 00:10:56,800
the top three are actually

296
00:10:56,800 --> 00:10:59,360
the one with the dashes they're actually

297
00:10:59,360 --> 00:11:00,240
deprecated

298
00:11:00,240 --> 00:11:02,560
but still growing with numbers so csp is

299
00:11:02,560 --> 00:11:04,640
replacing that but still people use

300
00:11:04,640 --> 00:11:07,440
deprecated security headers within their

301
00:11:07,440 --> 00:11:09,680
infrastructure

302
00:11:09,680 --> 00:11:13,120
and then the bottom

303
00:11:13,120 --> 00:11:16,399
three it's uh csp see i don't have a way

304
00:11:16,399 --> 00:11:16,959
to

305
00:11:16,959 --> 00:11:20,000
shine on this um i'm also colorblind so

306
00:11:20,000 --> 00:11:22,079
i'm not sure which colors i'm gonna say

307
00:11:22,079 --> 00:11:25,279
so the lower one that's report only and

308
00:11:25,279 --> 00:11:28,959
two one two after that that

309
00:11:29,040 --> 00:11:31,440
the content security policy itself now

310
00:11:31,440 --> 00:11:33,040
it's only the mentioning of the

311
00:11:33,040 --> 00:11:34,800
header it doesn't say what's actually

312
00:11:34,800 --> 00:11:36,320
being defined and we're going to see a

313
00:11:36,320 --> 00:11:37,839
bit more numbers around that

314
00:11:37,839 --> 00:11:40,560
what is i was happy to see that over

315
00:11:40,560 --> 00:11:42,160
time and i've been handling these

316
00:11:42,160 --> 00:11:44,399
this in the past few years the numbers

317
00:11:44,399 --> 00:11:46,399
did grow so we're around 10

318
00:11:46,399 --> 00:11:49,519
now of csp usage uh when it was much

319
00:11:49,519 --> 00:11:50,000
lower

320
00:11:50,000 --> 00:11:53,440
in the past so

321
00:11:53,440 --> 00:11:56,320
it seems like a positive trend but when

322
00:11:56,320 --> 00:11:56,639
uh

323
00:11:56,639 --> 00:11:59,360
looking at those comes down to about

324
00:11:59,360 --> 00:12:01,040
seven hundred thousand websites

325
00:12:01,040 --> 00:12:04,639
uh as of last june uh last month

326
00:12:04,639 --> 00:12:06,480
what are they actually using we're gonna

327
00:12:06,480 --> 00:12:08,160
see the following directives

328
00:12:08,160 --> 00:12:10,160
so what is the policy we saw before

329
00:12:10,160 --> 00:12:12,000
several examples of directives these are

330
00:12:12,000 --> 00:12:13,760
the actual directives being used

331
00:12:13,760 --> 00:12:16,399
by websites and what do they mean the

332
00:12:16,399 --> 00:12:18,560
first one the frame ancestors

333
00:12:18,560 --> 00:12:20,560
that basically mean if you can embed a

334
00:12:20,560 --> 00:12:22,560
page within a frame or an iframe

335
00:12:22,560 --> 00:12:25,440
and it's just replacing a previous

336
00:12:25,440 --> 00:12:27,120
security header that we saw which was

337
00:12:27,120 --> 00:12:29,040
the one of the most common

338
00:12:29,040 --> 00:12:30,800
the second one to upgrade insecure

339
00:12:30,800 --> 00:12:32,639
request again

340
00:12:32,639 --> 00:12:34,959
means moving all http traffic to be

341
00:12:34,959 --> 00:12:36,839
https

342
00:12:36,839 --> 00:12:39,760
um and that as well is replacing a

343
00:12:39,760 --> 00:12:41,760
defecated security header that we saw in

344
00:12:41,760 --> 00:12:42,959
the previous slide

345
00:12:42,959 --> 00:12:44,639
so if you look at that we see that most

346
00:12:44,639 --> 00:12:46,240
of the websites implementing csp are

347
00:12:46,240 --> 00:12:47,279
just replacing

348
00:12:47,279 --> 00:12:49,519
uh the different security headers with

349
00:12:49,519 --> 00:12:51,200
the new version they're not implementing

350
00:12:51,200 --> 00:12:53,200
the full scope of what you can do with

351
00:12:53,200 --> 00:12:53,519
this

352
00:12:53,519 --> 00:12:57,040
technology and the following ones

353
00:12:57,040 --> 00:12:58,720
pretty low numbers those are the ones

354
00:12:58,720 --> 00:13:00,480
that are actually interesting the fetch

355
00:13:00,480 --> 00:13:01,360
directives

356
00:13:01,360 --> 00:13:03,360
which tells us where we can get content

357
00:13:03,360 --> 00:13:05,200
from and where we can send it to

358
00:13:05,200 --> 00:13:06,720
these are the interesting ones we can

359
00:13:06,720 --> 00:13:08,639
really use to secure our website

360
00:13:08,639 --> 00:13:11,360
they're not being used that much and i

361
00:13:11,360 --> 00:13:12,639
believe part of the reason is the

362
00:13:12,639 --> 00:13:14,639
complexity of using the technology

363
00:13:14,639 --> 00:13:17,760
within the website and that is

364
00:13:17,760 --> 00:13:20,160
pretty low numbers so it is still sad to

365
00:13:20,160 --> 00:13:21,519
see but will

366
00:13:21,519 --> 00:13:23,279
with those actually trying to use that

367
00:13:23,279 --> 00:13:24,720
we're still going to see a few

368
00:13:24,720 --> 00:13:28,639
fundamental gaps within the technology

369
00:13:29,600 --> 00:13:32,000
um i took the example of several

370
00:13:32,000 --> 00:13:32,839
websites

371
00:13:32,839 --> 00:13:35,920
um and this is frustrating so even

372
00:13:35,920 --> 00:13:38,399
those trying to implement csp they're

373
00:13:38,399 --> 00:13:40,800
using the top one the top one basically

374
00:13:40,800 --> 00:13:41,600
says

375
00:13:41,600 --> 00:13:43,360
you can bring source but it can be

376
00:13:43,360 --> 00:13:45,760
unsafe evil and unsafe inline meaning

377
00:13:45,760 --> 00:13:47,680
we don't check anything everybody can

378
00:13:47,680 --> 00:13:49,360
add code to the page and run it

379
00:13:49,360 --> 00:13:51,360
and we're not going to validate anything

380
00:13:51,360 --> 00:13:52,399
the bottom one

381
00:13:52,399 --> 00:13:55,279
which i've seen a very few websites use

382
00:13:55,279 --> 00:13:56,000
dictates

383
00:13:56,000 --> 00:13:58,000
that if there is an inline javascript

384
00:13:58,000 --> 00:13:59,839
code within the page it has to match the

385
00:13:59,839 --> 00:14:00,880
specific hash

386
00:14:00,880 --> 00:14:03,279
so you can't just add any type of code

387
00:14:03,279 --> 00:14:04,800
you want to add into the page it has

388
00:14:04,800 --> 00:14:07,680
to match the exact hash harder to manage

389
00:14:07,680 --> 00:14:08,000
but

390
00:14:08,000 --> 00:14:09,920
actually brings the security into in

391
00:14:09,920 --> 00:14:12,479
default

392
00:14:14,000 --> 00:14:17,040
and like any system um looking at the

393
00:14:17,040 --> 00:14:18,880
directives we said okay there should be

394
00:14:18,880 --> 00:14:19,760
around 30

395
00:14:19,760 --> 00:14:22,720
why do we see 700 and that's because

396
00:14:22,720 --> 00:14:23,279
people

397
00:14:23,279 --> 00:14:25,370
don't check anything

398
00:14:25,370 --> 00:14:26,639
[Music]

399
00:14:26,639 --> 00:14:28,160
all kinds of mistakes i really don't

400
00:14:28,160 --> 00:14:30,240
understand the last one the go for it

401
00:14:30,240 --> 00:14:33,839
it's interesting um it's been around

402
00:14:33,839 --> 00:14:35,680
on more than one website i'm not sure

403
00:14:35,680 --> 00:14:37,199
what they wanted to do with it

404
00:14:37,199 --> 00:14:40,000
but all kinds of examples and when the

405
00:14:40,000 --> 00:14:41,199
directive is wrong

406
00:14:41,199 --> 00:14:42,959
the policy just breaks and doesn't work

407
00:14:42,959 --> 00:14:44,880
so it's as if we have nothing

408
00:14:44,880 --> 00:14:46,560
so even out of those websites not

409
00:14:46,560 --> 00:14:48,480
everything is actually working

410
00:14:48,480 --> 00:14:51,120
the google csp validator is the best one

411
00:14:51,120 --> 00:14:53,279
i've seen to date so if you're trying to

412
00:14:53,279 --> 00:14:59,839
write a policy please use that

413
00:15:00,959 --> 00:15:04,560
all right it's jump no cool okay

414
00:15:04,560 --> 00:15:06,720
so we defined the policy we defined the

415
00:15:06,720 --> 00:15:08,000
report uri

416
00:15:08,000 --> 00:15:10,079
it's json so it's pretty simple

417
00:15:10,079 --> 00:15:11,839
supposedly to just read the reports and

418
00:15:11,839 --> 00:15:14,160
trying to understand what are we seeing

419
00:15:14,160 --> 00:15:16,800
and um and that's the next phase of the

420
00:15:16,800 --> 00:15:17,920
madness

421
00:15:17,920 --> 00:15:20,720
data is not normalized at all it's full

422
00:15:20,720 --> 00:15:21,440
of stuff

423
00:15:21,440 --> 00:15:23,839
coming from extensions and ads and it's

424
00:15:23,839 --> 00:15:25,440
also unmanageable because if you have an

425
00:15:25,440 --> 00:15:26,399
extension

426
00:15:26,399 --> 00:15:29,120
running within the browser by design

427
00:15:29,120 --> 00:15:30,959
they bypass the csp but if they're

428
00:15:30,959 --> 00:15:32,880
injecting code

429
00:15:32,880 --> 00:15:35,680
into the page the page will still report

430
00:15:35,680 --> 00:15:37,600
csp violations so now you're trying to

431
00:15:37,600 --> 00:15:39,279
read your own violations and they're not

432
00:15:39,279 --> 00:15:40,480
actually coming from the website they're

433
00:15:40,480 --> 00:15:42,560
coming from one specific user

434
00:15:42,560 --> 00:15:44,160
and within the standard there is nothing

435
00:15:44,160 --> 00:15:45,759
that tells you it's a user

436
00:15:45,759 --> 00:15:48,000
you need to add a bit of hackings into

437
00:15:48,000 --> 00:15:49,519
the reporting information itself to

438
00:15:49,519 --> 00:15:50,240
understand

439
00:15:50,240 --> 00:15:52,160
which user was it that reported that

440
00:15:52,160 --> 00:15:54,399
violation so it's really not helping you

441
00:15:54,399 --> 00:15:56,560
to analyze the information

442
00:15:56,560 --> 00:15:58,800
at all and i'm not going to jump into

443
00:15:58,800 --> 00:16:00,320
the link but i invite you to go to the

444
00:16:00,320 --> 00:16:01,199
last one

445
00:16:01,199 --> 00:16:05,120
it's full of really fun examples

446
00:16:05,120 --> 00:16:07,120
that's the explained one you should look

447
00:16:07,120 --> 00:16:08,320
at the unexplained one

448
00:16:08,320 --> 00:16:11,680
it has a lot of examples of csp reports

449
00:16:11,680 --> 00:16:15,040
websites see and they really don't

450
00:16:15,040 --> 00:16:17,600
understand where they come from

451
00:16:17,600 --> 00:16:20,720
the last one when we went into high

452
00:16:20,720 --> 00:16:22,079
scale of looking at the actual

453
00:16:22,079 --> 00:16:24,160
information was browser misalignments

454
00:16:24,160 --> 00:16:26,079
when the report is actually being sent

455
00:16:26,079 --> 00:16:27,279
and what are we seeing

456
00:16:27,279 --> 00:16:28,880
and the few of the examples which are

457
00:16:28,880 --> 00:16:30,720
still relevant chrome

458
00:16:30,720 --> 00:16:34,000
um works differently if the report

459
00:16:34,000 --> 00:16:36,160
is uh to be blocked they will send one

460
00:16:36,160 --> 00:16:37,519
report per page

461
00:16:37,519 --> 00:16:40,320
fine that's gone that's easy firefox

462
00:16:40,320 --> 00:16:43,120
will report it multiple times per page

463
00:16:43,120 --> 00:16:44,639
so now you have the differences between

464
00:16:44,639 --> 00:16:46,160
how many reports you see and how you're

465
00:16:46,160 --> 00:16:47,680
trying to analyze them

466
00:16:47,680 --> 00:16:49,920
and then safari behaves completely

467
00:16:49,920 --> 00:16:51,519
differently if you have a repetitive

468
00:16:51,519 --> 00:16:52,720
call blocked

469
00:16:52,720 --> 00:16:55,680
and and it will send it it just sends

470
00:16:55,680 --> 00:16:56,480
the

471
00:16:56,480 --> 00:16:58,079
top level domain so you don't even get

472
00:16:58,079 --> 00:17:00,330
the full page of the reporting

473
00:17:00,330 --> 00:17:02,160
[Music]

474
00:17:02,160 --> 00:17:05,839
of where it originated from

475
00:17:07,119 --> 00:17:08,480
and then of course like any reporting

476
00:17:08,480 --> 00:17:10,079
service there could be log spamming we

477
00:17:10,079 --> 00:17:11,199
actually saw some

478
00:17:11,199 --> 00:17:13,359
interesting cases where lockspain was

479
00:17:13,359 --> 00:17:15,839
trying to be used to manipulate systems

480
00:17:15,839 --> 00:17:18,880
but this is still i would say next phase

481
00:17:18,880 --> 00:17:19,919
of attacks

482
00:17:19,919 --> 00:17:22,319
because some vendors are trying to build

483
00:17:22,319 --> 00:17:23,599
systems which will automatically

484
00:17:23,599 --> 00:17:24,319
configure

485
00:17:24,319 --> 00:17:28,480
and uh define from reporting policies

486
00:17:28,480 --> 00:17:30,559
what is a uh something that should be

487
00:17:30,559 --> 00:17:32,000
whitelisted you can actually spam

488
00:17:32,000 --> 00:17:34,480
the system and trying to abuse the

489
00:17:34,480 --> 00:17:35,200
machine learning

490
00:17:35,200 --> 00:17:39,200
to to learn a specific domain as should

491
00:17:39,200 --> 00:17:40,480
be whitelisted

492
00:17:40,480 --> 00:17:42,400
i haven't seen an example yet but i

493
00:17:42,400 --> 00:17:44,000
anticipate it will happen as it's

494
00:17:44,000 --> 00:17:44,960
becoming more

495
00:17:44,960 --> 00:17:48,320
abundant so we went over

496
00:17:48,320 --> 00:17:50,799
that part the next part we wanted to

497
00:17:50,799 --> 00:17:51,520
look at

498
00:17:51,520 --> 00:17:54,640
was actually cves and how do browsers

499
00:17:54,640 --> 00:17:55,440
behave

500
00:17:55,440 --> 00:17:58,880
so this is the cvs report over the years

501
00:17:58,880 --> 00:18:01,200
specifically in total in firefox and in

502
00:18:01,200 --> 00:18:02,240
chrome

503
00:18:02,240 --> 00:18:04,240
i'm going to dive a bit to one that we

504
00:18:04,240 --> 00:18:05,520
found

505
00:18:05,520 --> 00:18:09,919
a while back it's pretty straightforward

506
00:18:09,919 --> 00:18:11,440
the following code if you look at the

507
00:18:11,440 --> 00:18:14,160
directive it says that object source uh

508
00:18:14,160 --> 00:18:15,760
shouldn't come from anywhere and skip

509
00:18:15,760 --> 00:18:17,200
source will only come from the page

510
00:18:17,200 --> 00:18:18,240
itself

511
00:18:18,240 --> 00:18:21,440
and then this code uh should not work it

512
00:18:21,440 --> 00:18:22,720
should be blocked by the browser

513
00:18:22,720 --> 00:18:24,000
basically trying to

514
00:18:24,000 --> 00:18:26,160
create an element with a script and

515
00:18:26,160 --> 00:18:27,280
fetch it from

516
00:18:27,280 --> 00:18:31,200
a non-white listed domain but then

517
00:18:31,200 --> 00:18:34,160
if we add a tiny bit of hack this is

518
00:18:34,160 --> 00:18:34,720
already

519
00:18:34,720 --> 00:18:36,480
by the way mitigated so we don't have to

520
00:18:36,480 --> 00:18:38,400
worry

521
00:18:38,400 --> 00:18:40,400
just opening an iframe and adding it

522
00:18:40,400 --> 00:18:41,600
into the iframe

523
00:18:41,600 --> 00:18:44,400
that worked now i'm not blaming browser

524
00:18:44,400 --> 00:18:47,120
developers it's really hard to build a

525
00:18:47,120 --> 00:18:49,520
fully protected browser and to match all

526
00:18:49,520 --> 00:18:51,679
the different possibilities you can have

527
00:18:51,679 --> 00:18:55,120
with all the different variations

528
00:18:55,120 --> 00:18:56,960
but these kinds of cvs happen all the

529
00:18:56,960 --> 00:18:58,880
time and i've actually reviewed a few of

530
00:18:58,880 --> 00:19:01,280
the latest 2021 cves

531
00:19:01,280 --> 00:19:04,720
they've seen um breaches reappear

532
00:19:04,720 --> 00:19:06,160
after they were closed three and four

533
00:19:06,160 --> 00:19:08,160
years ago because

534
00:19:08,160 --> 00:19:11,600
code was refactored again

535
00:19:11,600 --> 00:19:14,799
any questions so far

536
00:19:19,039 --> 00:19:21,120
okay so let's assume we have a

537
00:19:21,120 --> 00:19:23,200
well-defined policy and let's assume the

538
00:19:23,200 --> 00:19:24,400
browsers

539
00:19:24,400 --> 00:19:27,600
work well what can possibly go wrong

540
00:19:27,600 --> 00:19:30,430
with this concept of policy

541
00:19:30,430 --> 00:19:31,679
[Music]

542
00:19:31,679 --> 00:19:33,679
i asked the simple questions again going

543
00:19:33,679 --> 00:19:35,280
back to http archive

544
00:19:35,280 --> 00:19:37,039
let's see which are the most commonly

545
00:19:37,039 --> 00:19:38,960
white listed uh domains

546
00:19:38,960 --> 00:19:41,039
that websites use let's not assume

547
00:19:41,039 --> 00:19:42,400
anything let's just see what they're

548
00:19:42,400 --> 00:19:43,679
using and let's see

549
00:19:43,679 --> 00:19:46,480
what we can do with it so going back to

550
00:19:46,480 --> 00:19:48,799
march 2020 and then looking at

551
00:19:48,799 --> 00:19:52,000
last month we see these domains here is

552
00:19:52,000 --> 00:19:53,280
a question for you

553
00:19:53,280 --> 00:19:55,520
if we look only on the top one does it

554
00:19:55,520 --> 00:19:56,960
bring you an idea what you can do with

555
00:19:56,960 --> 00:19:59,039
it

556
00:20:11,200 --> 00:20:14,159
malaysia's advertisement okay any other

557
00:20:14,159 --> 00:20:16,480
idea

558
00:20:33,600 --> 00:20:37,919
yes so um

559
00:20:37,919 --> 00:20:40,400
thank you um first of all it's not that

560
00:20:40,400 --> 00:20:42,240
the top one it happens again and again

561
00:20:42,240 --> 00:20:44,000
when you're going down the list so it's

562
00:20:44,000 --> 00:20:45,600
more than just the top one it's actually

563
00:20:45,600 --> 00:20:46,799
more common

564
00:20:46,799 --> 00:20:49,840
and the simplest idea here was okay

565
00:20:49,840 --> 00:20:51,280
i'm looking at this information i'm

566
00:20:51,280 --> 00:20:53,200
saying sounds pretty simple let's just

567
00:20:53,200 --> 00:20:54,320
try and use the top

568
00:20:54,320 --> 00:20:56,159
domain which is white listed to

569
00:20:56,159 --> 00:20:59,120
expectate data

570
00:20:59,280 --> 00:21:01,520
will it work will it be that simple and

571
00:21:01,520 --> 00:21:02,559
the answer is

572
00:21:02,559 --> 00:21:06,000
it is because any uh jsonp uh

573
00:21:06,000 --> 00:21:08,880
endpoint that is whitelisted can be used

574
00:21:08,880 --> 00:21:10,240
for data explication

575
00:21:10,240 --> 00:21:12,240
and it's just just google analytics this

576
00:21:12,240 --> 00:21:14,159
is just the simplest one to try to

577
00:21:14,159 --> 00:21:14,960
implement

578
00:21:14,960 --> 00:21:17,039
this bypass it can be with anything it

579
00:21:17,039 --> 00:21:19,039
could be with trying to send tweets

580
00:21:19,039 --> 00:21:21,200
or a facebook message if it's

581
00:21:21,200 --> 00:21:22,960
whitelisted

582
00:21:22,960 --> 00:21:25,600
new relic you can open an account for a

583
00:21:25,600 --> 00:21:27,360
few dollars if that is whitelisted and

584
00:21:27,360 --> 00:21:28,240
use that

585
00:21:28,240 --> 00:21:31,039
any service that is shared and is

586
00:21:31,039 --> 00:21:32,799
commonly whitelisted because websites

587
00:21:32,799 --> 00:21:34,000
are actually using it

588
00:21:34,000 --> 00:21:36,559
can be used for the data exfiltration so

589
00:21:36,559 --> 00:21:38,159
even if we did all the work

590
00:21:38,159 --> 00:21:40,799
of defining a well-protected policy uh

591
00:21:40,799 --> 00:21:41,600
somebody can

592
00:21:41,600 --> 00:21:44,640
try and bypass it and it's pretty simple

593
00:21:44,640 --> 00:21:46,320
to write the code so

594
00:21:46,320 --> 00:21:49,840
we just added a few bits of lines

595
00:21:49,840 --> 00:21:52,480
as you can see

596
00:21:53,760 --> 00:21:56,799
this isn't even a complicated scenario

597
00:21:56,799 --> 00:21:59,200
we just doing all the information

598
00:21:59,200 --> 00:22:01,039
on the query string itself not even

599
00:22:01,039 --> 00:22:02,559
trying to do it as an ajax

600
00:22:02,559 --> 00:22:05,440
request and obviously it worked we have

601
00:22:05,440 --> 00:22:06,240
the information

602
00:22:06,240 --> 00:22:08,159
we can export it from google analytics

603
00:22:08,159 --> 00:22:09,280
and then we have

604
00:22:09,280 --> 00:22:12,480
a user password that we expected uh

605
00:22:12,480 --> 00:22:14,960
from a website even though uh it was

606
00:22:14,960 --> 00:22:15,520
tricked

607
00:22:15,520 --> 00:22:17,280
just because google analytics was

608
00:22:17,280 --> 00:22:19,520
whitelisted

609
00:22:19,520 --> 00:22:23,280
now we went back to the um

610
00:22:23,280 --> 00:22:25,200
to the standard and said okay

611
00:22:25,200 --> 00:22:27,760
interesting let's dive in and see

612
00:22:27,760 --> 00:22:29,600
if somebody tried already to resolve it

613
00:22:29,600 --> 00:22:31,200
so let's at least

614
00:22:31,200 --> 00:22:33,200
with the questioning itself can we do

615
00:22:33,200 --> 00:22:34,720
some kind of limitation

616
00:22:34,720 --> 00:22:37,280
to protect it and as you can see by this

617
00:22:37,280 --> 00:22:38,240
by definition

618
00:22:38,240 --> 00:22:40,480
it doesn't this is a quote from the

619
00:22:40,480 --> 00:22:41,679
standard itself

620
00:22:41,679 --> 00:22:43,760
we do not go into the query string we

621
00:22:43,760 --> 00:22:45,760
don't try to validate anything beyond

622
00:22:45,760 --> 00:22:47,840
top level domains that is the only level

623
00:22:47,840 --> 00:22:48,880
of protection

624
00:22:48,880 --> 00:22:53,200
we can efficiently implement within the

625
00:22:53,200 --> 00:22:57,280
standard itself so that can be supported

626
00:22:57,280 --> 00:23:01,039
unfortunately then we said fine

627
00:23:01,039 --> 00:23:02,880
so far still an interesting story let's

628
00:23:02,880 --> 00:23:04,799
publish that we didn't think it would be

629
00:23:04,799 --> 00:23:08,080
that um

630
00:23:08,080 --> 00:23:10,400
biggest bigger story as itself we

631
00:23:10,400 --> 00:23:11,360
published the

632
00:23:11,360 --> 00:23:14,640
method um it got a lot more exposure

633
00:23:14,640 --> 00:23:16,400
than we expected because it seems pretty

634
00:23:16,400 --> 00:23:17,440
straightforward

635
00:23:17,440 --> 00:23:19,919
and then just a few days later other

636
00:23:19,919 --> 00:23:20,880
security companies

637
00:23:20,880 --> 00:23:22,480
started to report on actually seeing

638
00:23:22,480 --> 00:23:24,640
this being used in the wild

639
00:23:24,640 --> 00:23:26,720
from kaspersky from sunsec and a few

640
00:23:26,720 --> 00:23:28,400
other companies reporting that they

641
00:23:28,400 --> 00:23:29,840
actually see this being abused

642
00:23:29,840 --> 00:23:32,559
so it's not even just story and a theory

643
00:23:32,559 --> 00:23:34,000
it's just a matter of looking at the

644
00:23:34,000 --> 00:23:34,559
data

645
00:23:34,559 --> 00:23:36,480
and trying to underst on playing the

646
00:23:36,480 --> 00:23:38,159
game of if we would have been the

647
00:23:38,159 --> 00:23:38,960
attackers

648
00:23:38,960 --> 00:23:41,919
what we would have done looking at uh

649
00:23:41,919 --> 00:23:43,440
websites and seeing that

650
00:23:43,440 --> 00:23:45,279
yeah somebody is already trying to do

651
00:23:45,279 --> 00:23:46,559
that it's just

652
00:23:46,559 --> 00:23:48,559
a matter of exposing the method and

653
00:23:48,559 --> 00:23:50,400
bringing it into lights

654
00:23:50,400 --> 00:23:52,240
so today by the way if you're going to

655
00:23:52,240 --> 00:23:53,760
add google analytics

656
00:23:53,760 --> 00:23:55,679
as a destination domain and go to the

657
00:23:55,679 --> 00:23:57,440
csp validator tools

658
00:23:57,440 --> 00:24:00,000
they will point it as a potential risk

659
00:24:00,000 --> 00:24:01,840
they don't have any suggestion on how to

660
00:24:01,840 --> 00:24:02,400
solve it

661
00:24:02,400 --> 00:24:03,679
but at least they will tell you that

662
00:24:03,679 --> 00:24:05,760
there is a potential risk so that is an

663
00:24:05,760 --> 00:24:06,400
addition

664
00:24:06,400 --> 00:24:09,440
which is an important one

665
00:24:16,840 --> 00:24:18,400
okay

666
00:24:18,400 --> 00:24:20,000
so if you look at the story from where

667
00:24:20,000 --> 00:24:21,840
it went wrong the ma with the

668
00:24:21,840 --> 00:24:23,919
fundamental problem here is we're trying

669
00:24:23,919 --> 00:24:25,039
to protect

670
00:24:25,039 --> 00:24:27,120
a modern website with a lot of different

671
00:24:27,120 --> 00:24:28,480
elements and tools

672
00:24:28,480 --> 00:24:31,919
with a policy and like i asked before

673
00:24:31,919 --> 00:24:33,840
who tried to configure an iptables

674
00:24:33,840 --> 00:24:34,559
policy

675
00:24:34,559 --> 00:24:36,000
these things are really hard to

676
00:24:36,000 --> 00:24:37,840
configure well and there are a lot of

677
00:24:37,840 --> 00:24:39,440
not a lot of best practices i'm going to

678
00:24:39,440 --> 00:24:40,480
mention a few

679
00:24:40,480 --> 00:24:43,520
but it is really problematic and

680
00:24:43,520 --> 00:24:45,360
when we're defining a policy the most

681
00:24:45,360 --> 00:24:47,600
common vector of attacks today that we

682
00:24:47,600 --> 00:24:47,919
see

683
00:24:47,919 --> 00:24:51,039
on modern websites is coming from some

684
00:24:51,039 --> 00:24:53,279
kind of a

685
00:24:53,279 --> 00:24:55,679
whitelisted target i don't know if

686
00:24:55,679 --> 00:24:56,320
you've seen

687
00:24:56,320 --> 00:24:59,039
just earlier this week cdnjs reported

688
00:24:59,039 --> 00:25:00,799
they had the major

689
00:25:00,799 --> 00:25:04,640
potential breach have you seen it

690
00:25:04,640 --> 00:25:07,919
nobody so cloud4 reported that

691
00:25:07,919 --> 00:25:09,919
they had a major potential breach where

692
00:25:09,919 --> 00:25:12,000
somebody could basically

693
00:25:12,000 --> 00:25:15,120
change the source code on any javascript

694
00:25:15,120 --> 00:25:17,279
placed on cdnjs that's a pretty high

695
00:25:17,279 --> 00:25:19,120
risk item they fixed it after they

696
00:25:19,120 --> 00:25:20,240
discovered it

697
00:25:20,240 --> 00:25:22,240
but that happens all the time that means

698
00:25:22,240 --> 00:25:23,760
that

699
00:25:23,760 --> 00:25:26,000
code we bring into our website which is

700
00:25:26,000 --> 00:25:27,840
running on multiple platforms we didn't

701
00:25:27,840 --> 00:25:29,520
build it we didn't own it

702
00:25:29,520 --> 00:25:31,279
we're using a lot of different tools

703
00:25:31,279 --> 00:25:32,640
when we're building our system or the

704
00:25:32,640 --> 00:25:34,080
marketing team adding

705
00:25:34,080 --> 00:25:36,080
all kinds of tags when they're just

706
00:25:36,080 --> 00:25:37,520
trying to improve uh

707
00:25:37,520 --> 00:25:40,080
some aspect in their website we don't

708
00:25:40,080 --> 00:25:41,760
have actual full control over what's

709
00:25:41,760 --> 00:25:42,320
joining

710
00:25:42,320 --> 00:25:44,320
and we have no control over the security

711
00:25:44,320 --> 00:25:46,080
of those elements

712
00:25:46,080 --> 00:25:47,919
and they're being whitelisted and they

713
00:25:47,919 --> 00:25:51,520
expose us to data exploration

714
00:25:51,520 --> 00:25:53,600
from both angles from where source is

715
00:25:53,600 --> 00:25:55,360
coming and where data can go to

716
00:25:55,360 --> 00:25:58,879
because we're using all these tools

717
00:25:59,279 --> 00:26:00,880
so what can you do to make the best of

718
00:26:00,880 --> 00:26:02,880
it uh it's still a good standard i'm

719
00:26:02,880 --> 00:26:04,480
still recommending everybody to use it

720
00:26:04,480 --> 00:26:06,000
i'm not recommending anybody to just

721
00:26:06,000 --> 00:26:07,279
avoid it it's

722
00:26:07,279 --> 00:26:10,559
still raising the bar and make requiring

723
00:26:10,559 --> 00:26:12,960
a potential attacker to try and work

724
00:26:12,960 --> 00:26:14,640
harder to try and breach

725
00:26:14,640 --> 00:26:18,000
and expert rate information first of all

726
00:26:18,000 --> 00:26:20,080
pretty basic but still not that common

727
00:26:20,080 --> 00:26:21,679
is just to add an identifier

728
00:26:21,679 --> 00:26:24,240
on the report uri at one some kind of an

729
00:26:24,240 --> 00:26:25,679
identifier telling you

730
00:26:25,679 --> 00:26:28,559
this is a user a or user b so you can

731
00:26:28,559 --> 00:26:30,000
look at the logs later on when you're

732
00:26:30,000 --> 00:26:31,360
trying to understand what you're looking

733
00:26:31,360 --> 00:26:32,000
at

734
00:26:32,000 --> 00:26:34,559
obviously filter the reports my go to

735
00:26:34,559 --> 00:26:36,240
here is just look at the most

736
00:26:36,240 --> 00:26:39,760
common newest

737
00:26:39,760 --> 00:26:41,600
browsers if you're trying to understand

738
00:26:41,600 --> 00:26:43,760
if your website is working well enough

739
00:26:43,760 --> 00:26:46,159
ignore all the minor cases just focus on

740
00:26:46,159 --> 00:26:48,000
those which are the most common

741
00:26:48,000 --> 00:26:49,760
if there is a problem that will tell you

742
00:26:49,760 --> 00:26:51,120
where it is you don't need to focus on

743
00:26:51,120 --> 00:26:52,000
anything else on

744
00:26:52,000 --> 00:26:54,640
all the long tail of noise and the last

745
00:26:54,640 --> 00:26:56,480
one which is a pretty nice hack that you

746
00:26:56,480 --> 00:26:57,039
can do

747
00:26:57,039 --> 00:26:59,279
i haven't seen any open source system

748
00:26:59,279 --> 00:27:00,720
yet to do it but it's a pretty

749
00:27:00,720 --> 00:27:03,440
nice method is to a b the policy the way

750
00:27:03,440 --> 00:27:04,400
you can start

751
00:27:04,400 --> 00:27:06,640
is with the report only policy which is

752
00:27:06,640 --> 00:27:07,520
the strictest

753
00:27:07,520 --> 00:27:10,159
allow nothing get all the reports and

754
00:27:10,159 --> 00:27:10,559
then

755
00:27:10,559 --> 00:27:13,679
just starting to add elements one by one

756
00:27:13,679 --> 00:27:15,919
to be still as strict as possible and

757
00:27:15,919 --> 00:27:17,440
see with the report only what kind of

758
00:27:17,440 --> 00:27:19,200
reports you're using once you get to a

759
00:27:19,200 --> 00:27:20,320
position

760
00:27:20,320 --> 00:27:22,240
when you don't see any reports that you

761
00:27:22,240 --> 00:27:24,080
don't think you should get

762
00:27:24,080 --> 00:27:26,880
then switch the policy from report only

763
00:27:26,880 --> 00:27:28,799
to mitigation mode basically changing

764
00:27:28,799 --> 00:27:30,799
the header from report only to

765
00:27:30,799 --> 00:27:33,520
to block and that will give you all the

766
00:27:33,520 --> 00:27:34,000
information

767
00:27:34,000 --> 00:27:36,000
that you need and then you can play with

768
00:27:36,000 --> 00:27:37,760
it as you go along you can keep on

769
00:27:37,760 --> 00:27:38,559
iterating

770
00:27:38,559 --> 00:27:41,919
on the policy uh back and forth on

771
00:27:41,919 --> 00:27:44,960
uh portions of the users on actual part

772
00:27:44,960 --> 00:27:46,000
of the sites

773
00:27:46,000 --> 00:27:49,120
and then see what how you can

774
00:27:49,120 --> 00:27:51,760
verify that both domains that you have

775
00:27:51,760 --> 00:27:52,240
there

776
00:27:52,240 --> 00:27:53,919
should be should be there and that

777
00:27:53,919 --> 00:27:55,440
they're not obsolete this is something

778
00:27:55,440 --> 00:27:57,039
that i didn't mention before

779
00:27:57,039 --> 00:27:59,760
we've seen cases where the csp whitelist

780
00:27:59,760 --> 00:28:00,720
has domains

781
00:28:00,720 --> 00:28:02,480
that were obsolete because somebody did

782
00:28:02,480 --> 00:28:03,760
it fast it didn't work

783
00:28:03,760 --> 00:28:06,080
they added a domain and they they forgot

784
00:28:06,080 --> 00:28:06,880
about it because

785
00:28:06,880 --> 00:28:08,480
you never change it there is never a

786
00:28:08,480 --> 00:28:10,880
report on something is not needed

787
00:28:10,880 --> 00:28:13,760
and the domains got obsolete and are out

788
00:28:13,760 --> 00:28:14,799
there to be bought so

789
00:28:14,799 --> 00:28:16,480
somebody can actually buy domains that

790
00:28:16,480 --> 00:28:18,559
are whitelisted on websites

791
00:28:18,559 --> 00:28:21,600
um not very popular one but

792
00:28:21,600 --> 00:28:23,520
assume you're using startups sometimes

793
00:28:23,520 --> 00:28:24,640
they close

794
00:28:24,640 --> 00:28:26,240
and if you don't remove them from the

795
00:28:26,240 --> 00:28:27,840
policy somebody else can try and buy

796
00:28:27,840 --> 00:28:30,159
that domain and reuse that

797
00:28:30,159 --> 00:28:33,520
as a as a target

798
00:28:34,720 --> 00:28:36,720
so like i said clean up after once in a

799
00:28:36,720 --> 00:28:38,640
while that's the idea behind this

800
00:28:38,640 --> 00:28:42,000
and complicated but i definitely

801
00:28:42,000 --> 00:28:44,080
recommend you use the nuances and hashes

802
00:28:44,080 --> 00:28:45,919
to make sure the actual inline code is

803
00:28:45,919 --> 00:28:47,440
also the one you intended

804
00:28:47,440 --> 00:28:49,200
requires a lot more work but still

805
00:28:49,200 --> 00:28:50,799
something that should

806
00:28:50,799 --> 00:28:54,720
should be relevant and and the last one

807
00:28:54,720 --> 00:28:56,480
still not common enough is to be context

808
00:28:56,480 --> 00:28:58,559
aware you don't need to use the same

809
00:28:58,559 --> 00:29:01,679
policy for the entire website you can be

810
00:29:01,679 --> 00:29:03,440
strict on different pages according to

811
00:29:03,440 --> 00:29:05,600
what's being run there on the login page

812
00:29:05,600 --> 00:29:07,360
be very strict on the front page you can

813
00:29:07,360 --> 00:29:08,960
allow google analytics you can also

814
00:29:08,960 --> 00:29:09,919
decide

815
00:29:09,919 --> 00:29:11,760
that there is no google analytics on the

816
00:29:11,760 --> 00:29:13,279
login page and just

817
00:29:13,279 --> 00:29:15,279
remove that risk you don't need to

818
00:29:15,279 --> 00:29:17,039
assume you need it on every single page

819
00:29:17,039 --> 00:29:18,399
so this is something you can take into

820
00:29:18,399 --> 00:29:21,600
account when you're trying to protect it

821
00:29:21,600 --> 00:29:24,399
and the last one is really to me the

822
00:29:24,399 --> 00:29:25,679
most important one

823
00:29:25,679 --> 00:29:28,799
try to contribute to w3c

824
00:29:28,799 --> 00:29:31,840
to the csp3 with comments and ideas it's

825
00:29:31,840 --> 00:29:33,600
still a very important standard

826
00:29:33,600 --> 00:29:35,200
and a lot of browsers are still

827
00:29:35,200 --> 00:29:36,799
implementing it and it's still open

828
00:29:36,799 --> 00:29:40,159
for reviews so try and hack it trying to

829
00:29:40,159 --> 00:29:41,360
find new ways to bracket

830
00:29:41,360 --> 00:29:43,760
to break the the standard and try to

831
00:29:43,760 --> 00:29:46,080
find ways and ideas in order to

832
00:29:46,080 --> 00:29:47,760
push everything to be better because

833
00:29:47,760 --> 00:29:49,840
it's protecting all of us as users in

834
00:29:49,840 --> 00:29:50,480
the internet

835
00:29:50,480 --> 00:29:53,760
with browsing those websites

836
00:29:53,760 --> 00:29:56,480
any questions

837
00:30:25,279 --> 00:30:28,080
yeah so

838
00:30:28,960 --> 00:30:32,799
welcome yeah so the attack vector the

839
00:30:32,799 --> 00:30:34,799
csp is trying to prevent

840
00:30:34,799 --> 00:30:37,200
is if someone several client side manage

841
00:30:37,200 --> 00:30:39,120
to inject malicious

842
00:30:39,120 --> 00:30:42,720
javascript code and you want to block

843
00:30:42,720 --> 00:30:45,919
exfiltration office for example that's

844
00:30:45,919 --> 00:30:46,880
the whole point

845
00:30:46,880 --> 00:30:49,600
the server sends the http header and the

846
00:30:49,600 --> 00:30:50,080
browser

847
00:30:50,080 --> 00:30:52,720
itself enforces the policy that the

848
00:30:52,720 --> 00:30:53,679
server

849
00:30:53,679 --> 00:30:56,960
defines that's the basic idea behind it

850
00:30:56,960 --> 00:30:59,919
csp is mostly intended to prevent xss so

851
00:30:59,919 --> 00:31:01,519
cross-site scripting those kind of

852
00:31:01,519 --> 00:31:02,159
attacks

853
00:31:02,159 --> 00:31:03,919
they can come from different places but

854
00:31:03,919 --> 00:31:05,919
that's the main idea behind

855
00:31:05,919 --> 00:31:08,559
the the method it's not only that

856
00:31:08,559 --> 00:31:09,279
because

857
00:31:09,279 --> 00:31:11,519
one thing that we see is that the

858
00:31:11,519 --> 00:31:12,880
standards are trying to move

859
00:31:12,880 --> 00:31:15,279
all the security uh headers the

860
00:31:15,279 --> 00:31:16,720
different headers that

861
00:31:16,720 --> 00:31:20,320
we have as directives into csp so it's

862
00:31:20,320 --> 00:31:21,519
also adding of

863
00:31:21,519 --> 00:31:23,360
more layers of protection i would say

864
00:31:23,360 --> 00:31:25,039
but it's just a matter of

865
00:31:25,039 --> 00:31:27,679
making more convenient for the security

866
00:31:27,679 --> 00:31:28,320
person

867
00:31:28,320 --> 00:31:31,120
to manage one context and not and learn

868
00:31:31,120 --> 00:31:34,159
less about less and less

869
00:31:34,159 --> 00:31:36,080
methods that you can try to protect like

870
00:31:36,080 --> 00:31:38,159
the upgrade insecure request for example

871
00:31:38,159 --> 00:31:40,000
that has nothing to do with access

872
00:31:40,000 --> 00:31:42,000
it's mostly about making sure the

873
00:31:42,000 --> 00:31:45,120
website is only https

874
00:31:45,120 --> 00:31:46,960
but it's most but that with that said

875
00:31:46,960 --> 00:31:49,840
it's mostly around access yeah

876
00:31:49,840 --> 00:31:52,080
thank you

877
00:31:55,679 --> 00:31:58,480
how are you answer that

878
00:31:59,440 --> 00:32:02,720
ask a question get a prize

879
00:32:03,200 --> 00:32:06,000
any other questions

880
00:32:08,240 --> 00:32:15,840
over there all right somebody over here

881
00:32:17,519 --> 00:32:20,559
hi can you kindly please comment about

882
00:32:20,559 --> 00:32:23,919
the age of xss in view of

883
00:32:23,919 --> 00:32:28,799
csp can you repeat that

884
00:32:28,799 --> 00:32:32,000
eh what is the status of xss attacks in

885
00:32:32,000 --> 00:32:32,640
view of

886
00:32:32,640 --> 00:32:37,279
css csp implementations

887
00:32:37,279 --> 00:32:39,600
interesting so i haven't seen them

888
00:32:39,600 --> 00:32:41,679
myself i read a few reports and from the

889
00:32:41,679 --> 00:32:43,120
reports i've read

890
00:32:43,120 --> 00:32:46,640
xss is first of all still very common as

891
00:32:46,640 --> 00:32:47,760
an attack vector

892
00:32:47,760 --> 00:32:50,080
but it is very csp is very effective in

893
00:32:50,080 --> 00:32:52,399
blocking that on websites that

894
00:32:52,399 --> 00:32:55,440
published information on how xss is

895
00:32:55,440 --> 00:32:56,960
actually being trying to be abused and

896
00:32:56,960 --> 00:32:58,799
being blocked with csp so

897
00:32:58,799 --> 00:33:01,600
i've seen very few reports of those but

898
00:33:01,600 --> 00:33:03,120
from what they're reporting they report

899
00:33:03,120 --> 00:33:04,640
on very effective

900
00:33:04,640 --> 00:33:10,080
mitigation on various access

901
00:33:10,080 --> 00:33:25,840
other questions someone back there

902
00:33:27,519 --> 00:33:30,399
i'm going to need the mic

903
00:33:32,880 --> 00:33:36,480
do you think we could use the

904
00:33:36,480 --> 00:33:39,279
do you think we could that a new version

905
00:33:39,279 --> 00:33:40,000
of csp

906
00:33:40,000 --> 00:33:42,480
could possibly defend against csrf

907
00:33:42,480 --> 00:33:43,039
attacks

908
00:33:43,039 --> 00:33:45,919
or is it that just not going to work

909
00:33:45,919 --> 00:33:47,600
ever

910
00:33:47,600 --> 00:33:49,679
i don't think so because csp is mostly

911
00:33:49,679 --> 00:33:51,200
intended to be the client side

912
00:33:51,200 --> 00:33:54,240
part of the protection and csrf tries to

913
00:33:54,240 --> 00:33:55,039
manage

914
00:33:55,039 --> 00:33:58,399
both ends so i don't see it

915
00:33:58,399 --> 00:34:00,159
going into that they're mostly focusing

916
00:34:00,159 --> 00:34:02,159
on the xss part and the client side

917
00:34:02,159 --> 00:34:04,000
protection and i think that's where they

918
00:34:04,000 --> 00:34:06,000
should focus it's coming to protect

919
00:34:06,000 --> 00:34:09,518
the user using the websites

920
00:34:15,440 --> 00:34:19,440
hi do you think csp should also support

921
00:34:19,440 --> 00:34:22,399
by this thing of urls full urls on just

922
00:34:22,399 --> 00:34:23,359
domains

923
00:34:23,359 --> 00:34:27,918
because currently um you can just

924
00:34:27,918 --> 00:34:30,800
find a url inside the domains that are

925
00:34:30,800 --> 00:34:31,440
already

926
00:34:31,440 --> 00:34:34,320
whitelisted that you can just do

927
00:34:34,320 --> 00:34:37,200
whatever you want with it

928
00:34:37,599 --> 00:34:39,040
yeah it's a good question it's one of

929
00:34:39,040 --> 00:34:42,000
the items we actually we looked at

930
00:34:42,000 --> 00:34:44,239
interior would say yes but it adds a

931
00:34:44,239 --> 00:34:45,359
very

932
00:34:45,359 --> 00:34:46,960
complicated layer to the browser

933
00:34:46,960 --> 00:34:48,480
themselves trying to be effective when

934
00:34:48,480 --> 00:34:50,639
they're trying to analyze and mitigate

935
00:34:50,639 --> 00:34:52,719
so from the security perspective i would

936
00:34:52,719 --> 00:34:55,359
say yes but as a user this might affect

937
00:34:55,359 --> 00:34:57,280
us in a negative way

938
00:34:57,280 --> 00:34:58,640
so i'm not sure it's something that they

939
00:34:58,640 --> 00:35:01,440
will be able to do there is a reason

940
00:35:01,440 --> 00:35:04,079
so far it's being explicitly said it's

941
00:35:04,079 --> 00:35:06,160
outside of the standard

942
00:35:06,160 --> 00:35:09,440
with that i think it's a combination

943
00:35:09,440 --> 00:35:13,359
the big services that are a potential

944
00:35:13,359 --> 00:35:15,920
leaking endpoint they should also do

945
00:35:15,920 --> 00:35:16,640
their part

946
00:35:16,640 --> 00:35:19,599
in trying to prevent uh themselves being

947
00:35:19,599 --> 00:35:21,280
part of that attack factor

948
00:35:21,280 --> 00:35:24,480
and uh and and protecting uh basically

949
00:35:24,480 --> 00:35:26,079
the businesses that using them as

950
00:35:26,079 --> 00:35:28,000
services so it should be part of the

951
00:35:28,000 --> 00:35:28,960
story it can be

952
00:35:28,960 --> 00:35:30,640
something that is just one way and

953
00:35:30,640 --> 00:35:33,279
one-sided

954
00:35:33,839 --> 00:35:35,280
in practice you know google analytics

955
00:35:35,280 --> 00:35:36,800
should also do something on their end to

956
00:35:36,800 --> 00:35:38,079
try and protect the users

957
00:35:38,079 --> 00:35:39,359
it can be something that only the

958
00:35:39,359 --> 00:35:40,800
browser does because they're on

959
00:35:40,800 --> 00:35:42,079
potential risk

960
00:35:42,079 --> 00:35:45,839
it's not only them but also them

961
00:35:47,520 --> 00:35:50,560
any other questions

962
00:35:51,119 --> 00:35:54,079
going once going twice

963
00:35:54,560 --> 00:35:59,580
all right thank you

964
00:35:59,580 --> 00:36:02,830
[Applause]

