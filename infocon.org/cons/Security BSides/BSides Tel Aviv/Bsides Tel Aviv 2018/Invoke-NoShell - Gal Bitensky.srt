1
00:00:00,439 --> 00:00:05,700
okay testing yeah so hi everyone welcome

2
00:00:05,700 --> 00:00:09,900
to my talk in vogue no shell once you're

3
00:00:09,900 --> 00:00:12,780
out of here like this evening or in just

4
00:00:12,780 --> 00:00:18,210
like 15 minutes time you will be well we

5
00:00:18,210 --> 00:00:20,550
will add to your knowledge a nice way to

6
00:00:20,550 --> 00:00:22,920
execute power shell without power shell

7
00:00:22,920 --> 00:00:25,800
which is quite weird but we'll get to it

8
00:00:25,800 --> 00:00:28,769
and you'll get a tool to take off this

9
00:00:28,769 --> 00:00:31,050
nice power shell things and put it in a

10
00:00:31,050 --> 00:00:34,910
malicious malicious document so let's

11
00:00:34,910 --> 00:00:37,050
look a bit at the outside of the talk

12
00:00:37,050 --> 00:00:39,059
we'll begin with a bit about power shell

13
00:00:39,059 --> 00:00:41,489
why it's good for what's it good for

14
00:00:41,489 --> 00:00:45,180
absolutely nothing and why you red

15
00:00:45,180 --> 00:00:48,180
teamers like it and what do we lack and

16
00:00:48,180 --> 00:00:50,550
power shell for both red team and blue

17
00:00:50,550 --> 00:00:54,300
team s and we will proceed to see what

18
00:00:54,300 --> 00:00:58,050
the hell my toe is doing and then we'll

19
00:00:58,050 --> 00:00:59,910
see how it actually works and performs

20
00:00:59,910 --> 00:01:03,379
against ABS so this is a fast talk note

21
00:01:03,379 --> 00:01:06,630
it's gonna be like 15 mins talk so

22
00:01:06,630 --> 00:01:09,479
please stay focused and stay quiet so

23
00:01:09,479 --> 00:01:12,860
I'll be able to stay focused thank you a

24
00:01:12,860 --> 00:01:15,750
bit about myself I worked for a minute I

25
00:01:15,750 --> 00:01:18,330
work from another labs with those two

26
00:01:18,330 --> 00:01:22,200
fans and front row and I did some

27
00:01:22,200 --> 00:01:25,140
previous work you can search all of it

28
00:01:25,140 --> 00:01:27,509
in my github account which is down here

29
00:01:27,509 --> 00:01:30,600
I'm including invoke no shell feel free

30
00:01:30,600 --> 00:01:33,420
to contact me on Twitter Facebook and or

31
00:01:33,420 --> 00:01:35,490
even an Instagram to really want to I

32
00:01:35,490 --> 00:01:40,560
know I'll be very happy to answer any

33
00:01:40,560 --> 00:01:43,200
kind of questions you have and finally a

34
00:01:43,200 --> 00:01:47,009
couple of thanks for Phillip who spoke

35
00:01:47,009 --> 00:01:50,070
here before today he inspired me to do

36
00:01:50,070 --> 00:01:52,740
this project and object-oriented the

37
00:01:52,740 --> 00:01:55,860
PowerShell which is quite weird but he

38
00:01:55,860 --> 00:01:58,020
inspired me to do it and to Dan

39
00:01:58,020 --> 00:02:03,960
iosifovich which is not here also yeah

40
00:02:03,960 --> 00:02:06,030
she promised she'll be here but tough

41
00:02:06,030 --> 00:02:09,360
luck for giving me the motivation to do

42
00:02:09,360 --> 00:02:11,190
the trick you're about to see with the

43
00:02:11,190 --> 00:02:13,680
PowerShell as partial execution

44
00:02:13,680 --> 00:02:17,920
so foul shall what is it good for mostly

45
00:02:17,920 --> 00:02:20,380
these kind of screens we all know too

46
00:02:20,380 --> 00:02:23,860
good no not really

47
00:02:23,860 --> 00:02:26,770
it is a really nice kind of a scripting

48
00:02:26,770 --> 00:02:30,130
language console built in Windows there

49
00:02:30,130 --> 00:02:32,680
are tons of open source frameworks for

50
00:02:32,680 --> 00:02:35,140
red teamers to use it all kind of

51
00:02:35,140 --> 00:02:37,360
compatible with Metasploit which is good

52
00:02:37,360 --> 00:02:39,040
because we're lazy we don't want to

53
00:02:39,040 --> 00:02:40,450
build anything which is to compare

54
00:02:40,450 --> 00:02:42,730
complex and we just can't just like you

55
00:02:42,730 --> 00:02:45,550
know take it off the shelf and win most

56
00:02:45,550 --> 00:02:47,200
of the Avs which are out there in

57
00:02:47,200 --> 00:02:52,720
nowadays which is cool and easy so I did

58
00:02:52,720 --> 00:02:55,660
a quick survey I questioned about 80

59
00:02:55,660 --> 00:02:59,350
researchers about PowerShell and indeed

60
00:02:59,350 --> 00:03:02,470
most of like security researchers pen

61
00:03:02,470 --> 00:03:04,900
testers mostly like over 95% I believe

62
00:03:04,900 --> 00:03:07,420
no PowerShell some regret that they know

63
00:03:07,420 --> 00:03:12,460
it but including me and but almost

64
00:03:12,460 --> 00:03:14,230
everybody knows pouch and uses

65
00:03:14,230 --> 00:03:21,100
PowerShell to some extent also most of

66
00:03:21,100 --> 00:03:23,020
the people who actually use it for

67
00:03:23,020 --> 00:03:27,040
offensive purposes actually bypass AV

68
00:03:27,040 --> 00:03:29,950
successfully using it so yeah it's not

69
00:03:29,950 --> 00:03:33,100
like a big surprise for anyone but yeah

70
00:03:33,100 --> 00:03:37,540
it was the also a question also the

71
00:03:37,540 --> 00:03:39,670
people who actually use PowerShell

72
00:03:39,670 --> 00:03:41,920
offensively do it mostly with known

73
00:03:41,920 --> 00:03:45,760
frameworks we talked about for again not

74
00:03:45,760 --> 00:03:49,090
surprising never invent the wheel this

75
00:03:49,090 --> 00:03:51,010
kind of people actually write your own

76
00:03:51,010 --> 00:03:53,200
PowerShell offensive payload it's the

77
00:03:53,200 --> 00:03:55,630
kind of people that invent your own

78
00:03:55,630 --> 00:03:57,730
cryptography I believe as well which is

79
00:03:57,730 --> 00:04:02,110
well you know yeah one last bonus

80
00:04:02,110 --> 00:04:06,010
question all of us know this nice screen

81
00:04:06,010 --> 00:04:09,580
execution policies restricted all of us

82
00:04:09,580 --> 00:04:11,860
have seen it too often I guess at least

83
00:04:11,860 --> 00:04:15,340
me we will return to it later in this

84
00:04:15,340 --> 00:04:19,959
talk all the people suffer from it in

85
00:04:19,959 --> 00:04:23,540
different levels some disabled did some

86
00:04:23,540 --> 00:04:28,700
but yeah okay but what we do lack we

87
00:04:28,700 --> 00:04:30,680
have amazing frameworks which allow us

88
00:04:30,680 --> 00:04:34,760
to bypass AVS if you have any experience

89
00:04:34,760 --> 00:04:38,750
using it you already know it so it's

90
00:04:38,750 --> 00:04:41,930
awesome it works but when I want to use

91
00:04:41,930 --> 00:04:43,820
it I want to deploy it somehow often

92
00:04:43,820 --> 00:04:46,160
using malicious document using some

93
00:04:46,160 --> 00:04:47,540
macro tricks dde

94
00:04:47,540 --> 00:04:51,500
whatever and I want to automate it I

95
00:04:51,500 --> 00:04:53,540
want to have all kinds of tricks which

96
00:04:53,540 --> 00:04:56,330
are released on daily basis and to have

97
00:04:56,330 --> 00:04:59,120
it all end and have some kind of

98
00:04:59,120 --> 00:05:00,830
restrictions sometimes in PowerShell I

99
00:05:00,830 --> 00:05:02,630
wanted to automate all the process and

100
00:05:02,630 --> 00:05:06,140
to have one tool to rule them all and to

101
00:05:06,140 --> 00:05:10,820
be able to pack all this nicely and

102
00:05:10,820 --> 00:05:12,500
neatly without too many manual labor

103
00:05:12,500 --> 00:05:14,450
there is a tool called Lucky Strike

104
00:05:14,450 --> 00:05:17,330
which is nice but it wasn't sufficient

105
00:05:17,330 --> 00:05:21,380
for me so this is how invoke no shell

106
00:05:21,380 --> 00:05:24,250
was borned invoke no shell you can see

107
00:05:24,250 --> 00:05:27,620
below here I hope you can see the link

108
00:05:27,620 --> 00:05:34,970
now I heard bb-8 yeah so invoke nutshell

109
00:05:34,970 --> 00:05:39,050
is a mixture of cool partial tricks of a

110
00:05:39,050 --> 00:05:42,350
PowerShell less parallel execution it is

111
00:05:42,350 --> 00:05:44,600
already online my presentation is there

112
00:05:44,600 --> 00:05:49,550
as well so don't like be super picky

113
00:05:49,550 --> 00:05:53,090
about writing all the notes it's it is a

114
00:05:53,090 --> 00:05:55,810
combination of few nice tricks and

115
00:05:55,810 --> 00:06:00,020
framework for creating documents with

116
00:06:00,020 --> 00:06:02,810
macro code in combat addendum

117
00:06:02,810 --> 00:06:06,880
automatically which is quite nice so

118
00:06:06,880 --> 00:06:10,010
this is what you are here for this is

119
00:06:10,010 --> 00:06:12,710
the pearl shell especial execution I

120
00:06:12,710 --> 00:06:14,840
don't know how many of you know it this

121
00:06:14,840 --> 00:06:19,070
is PowerShell ISE the built in IDE for a

122
00:06:19,070 --> 00:06:22,820
PowerShell it's usually used for

123
00:06:22,820 --> 00:06:25,400
debugging PowerShell on the windows

124
00:06:25,400 --> 00:06:29,620
machines and it turns out that if you

125
00:06:29,620 --> 00:06:34,160
read the documentation the this variable

126
00:06:34,160 --> 00:06:36,370
which resolves to a path

127
00:06:36,370 --> 00:06:39,580
this path and if you place a PowerShell

128
00:06:39,580 --> 00:06:43,570
script a ps1 file in this path whenever

129
00:06:43,570 --> 00:06:45,820
publish an IFC starts up it will be

130
00:06:45,820 --> 00:06:49,030
loaded with no power that exit instances

131
00:06:49,030 --> 00:06:53,740
at all which is like what but nobody

132
00:06:53,740 --> 00:06:56,380
blocks partial I see etcetera and well

133
00:06:56,380 --> 00:06:58,510
it turns out to be a nice cool trick to

134
00:06:58,510 --> 00:07:01,139
bypass any kind of restrictions on

135
00:07:01,139 --> 00:07:06,060
PowerShell PowerShell dot XE but wait

136
00:07:06,060 --> 00:07:09,880
there's the execution policy kind of

137
00:07:09,880 --> 00:07:12,580
thing we always use this means if you

138
00:07:12,580 --> 00:07:16,300
bypass if you're bad hackers etc and we

139
00:07:16,300 --> 00:07:18,160
can't do it without shall I see it

140
00:07:18,160 --> 00:07:22,419
doesn't get this arguments you know so

141
00:07:22,419 --> 00:07:25,300
yeah so back to the kind of question

142
00:07:25,300 --> 00:07:27,340
from before from the kind of polls that

143
00:07:27,340 --> 00:07:30,639
I did execution policy is broken it's

144
00:07:30,639 --> 00:07:33,039
just like a broken thing it doesn't work

145
00:07:33,039 --> 00:07:35,470
you can just take it and just like throw

146
00:07:35,470 --> 00:07:41,200
it away I did maybe a couple of minutes

147
00:07:41,200 --> 00:07:43,720
google searching for a way to bypass

148
00:07:43,720 --> 00:07:46,000
execution policy and I found this cool

149
00:07:46,000 --> 00:07:49,479
registry key and value which should be

150
00:07:49,479 --> 00:07:52,840
set it is in the current user hive so

151
00:07:52,840 --> 00:07:54,580
you even don't have to be an admin and

152
00:07:54,580 --> 00:07:57,190
once this registry key is set you can

153
00:07:57,190 --> 00:08:00,190
execute power shell without setting any

154
00:08:00,190 --> 00:08:03,039
kind of unrestricted execution policy

155
00:08:03,039 --> 00:08:05,740
from an admin prompt or something this

156
00:08:05,740 --> 00:08:07,090
is all you need to do you don't need to

157
00:08:07,090 --> 00:08:09,430
be an admin execution policy is broken

158
00:08:09,430 --> 00:08:13,360
and it's just worthless the only thing

159
00:08:13,360 --> 00:08:16,210
that it does it kind of disturbs me from

160
00:08:16,210 --> 00:08:17,949
doing what I want do when I need to

161
00:08:17,949 --> 00:08:21,460
actually use PowerShell created by the

162
00:08:21,460 --> 00:08:26,289
way to the link below so what we now

163
00:08:26,289 --> 00:08:28,930
have is a couple of tricks but I also

164
00:08:28,930 --> 00:08:32,169
want to use them in a document in at or

165
00:08:32,169 --> 00:08:35,440
some sort so in this stage I kind of

166
00:08:35,440 --> 00:08:38,740
went through all what I have I have a

167
00:08:38,740 --> 00:08:41,020
couple of tricks which I can decide

168
00:08:41,020 --> 00:08:43,390
whether or not I want to use I can also

169
00:08:43,390 --> 00:08:46,470
decide when I want to launch this

170
00:08:46,470 --> 00:08:48,580
PowerShell payload on

171
00:08:48,580 --> 00:08:51,700
open on clothes or on user click so I

172
00:08:51,700 --> 00:08:54,810
have if you'll kind of like 12 different

173
00:08:54,810 --> 00:08:58,710
possible permutations to select from and

174
00:08:58,710 --> 00:09:03,160
I have two modes for my tool now my tool

175
00:09:03,160 --> 00:09:06,810
just like get a PowerShell payload and

176
00:09:06,810 --> 00:09:09,430
you can either use it in a manual mode

177
00:09:09,430 --> 00:09:12,460
to selectively manually pick whether or

178
00:09:12,460 --> 00:09:14,500
not you want any of the features or you

179
00:09:14,500 --> 00:09:16,390
can use it in this automatic mode and

180
00:09:16,390 --> 00:09:19,000
just like generate 12 documents at once

181
00:09:19,000 --> 00:09:23,560
and throw it at AV as I did so this

182
00:09:23,560 --> 00:09:24,520
brings me to the test

183
00:09:24,520 --> 00:09:28,150
I actually took ransomware or very

184
00:09:28,150 --> 00:09:30,430
well-known one we have over 95%

185
00:09:30,430 --> 00:09:33,880
detection in virus total I used invoke

186
00:09:33,880 --> 00:09:35,760
reflective injection of a well-known

187
00:09:35,760 --> 00:09:38,380
framework to load the bytes directly to

188
00:09:38,380 --> 00:09:41,140
the memory no special tricks just like

189
00:09:41,140 --> 00:09:43,360
took the bite injected it to the memory

190
00:09:43,360 --> 00:09:47,140
and I talking to it I'd create 12

191
00:09:47,140 --> 00:09:49,750
document and I threw it at five popular

192
00:09:49,750 --> 00:09:50,710
enterprise-class

193
00:09:50,710 --> 00:09:56,590
AVS all fully enabled if they have any

194
00:09:56,590 --> 00:09:58,570
kind of restriction for PowerShell it

195
00:09:58,570 --> 00:10:02,770
was applied and in this stage I actually

196
00:10:02,770 --> 00:10:06,280
set an interesting success criteria I

197
00:10:06,280 --> 00:10:10,480
wanted a success was defined as a kind

198
00:10:10,480 --> 00:10:12,580
of a situation where some of the

199
00:10:12,580 --> 00:10:14,650
payloads bypass the Avs

200
00:10:14,650 --> 00:10:18,280
and some didn't so if not bypass the IV

201
00:10:18,280 --> 00:10:21,910
my tools crap and if none were detected

202
00:10:21,910 --> 00:10:24,790
by the AV Devi is worthless so I want

203
00:10:24,790 --> 00:10:28,300
kind of trade off to define the kind of

204
00:10:28,300 --> 00:10:29,710
situation where my tool is actually

205
00:10:29,710 --> 00:10:34,060
useful and for the results drums drums

206
00:10:34,060 --> 00:10:38,740
Jones yeah 100% it's like a quite rare

207
00:10:38,740 --> 00:10:41,830
situation when it comes to information

208
00:10:41,830 --> 00:10:43,330
security but trying to percent of the

209
00:10:43,330 --> 00:10:47,170
payloads actually bypass the AV but it's

210
00:10:47,170 --> 00:10:48,400
not actually a hundred percent because

211
00:10:48,400 --> 00:10:51,850
in 40% of the cases actually all of the

212
00:10:51,850 --> 00:10:54,700
payloads bypass the AV and in 60 percent

213
00:10:54,700 --> 00:10:55,960
of they fail oh it's my tool is actually

214
00:10:55,960 --> 00:10:59,320
useful so yeah I it was kind of

215
00:10:59,320 --> 00:11:02,980
not worthless job it actually say served

216
00:11:02,980 --> 00:11:08,440
me well and I think that yeah it was a

217
00:11:08,440 --> 00:11:11,620
good job I can like do like this himself

218
00:11:11,620 --> 00:11:17,170
and yeah oh yeah I forgot about him he

219
00:11:17,170 --> 00:11:19,630
can surprise me now life-sized Chuck

220
00:11:19,630 --> 00:11:23,320
Norris and so to conclude this kind of

221
00:11:23,320 --> 00:11:27,910
chance think it kind of worked and it

222
00:11:27,910 --> 00:11:30,520
was wonderful to watch all the of those

223
00:11:30,520 --> 00:11:33,340
vendors who claim that no PowerShell can

224
00:11:33,340 --> 00:11:36,420
be executed under this setting

225
00:11:36,420 --> 00:11:48,370
yeah I totally smashed them this brings

226
00:11:48,370 --> 00:11:50,260
me to the good idea better idea phase of

227
00:11:50,260 --> 00:11:54,820
the talk good ideas and bad ideas are

228
00:11:54,820 --> 00:11:56,860
actually quite a saying here never

229
00:11:56,860 --> 00:11:59,200
believe two kind of vendors which

230
00:11:59,200 --> 00:12:01,390
promise you 100%

231
00:12:01,390 --> 00:12:04,560
bulletproof PowerShell s environment

232
00:12:04,560 --> 00:12:08,710
there's no such thing as 100% blocking

233
00:12:08,710 --> 00:12:12,040
or in information security at all we

234
00:12:12,040 --> 00:12:13,330
just released a blog about it today you

235
00:12:13,330 --> 00:12:16,240
can read the full backstory origin story

236
00:12:16,240 --> 00:12:18,790
of invoke no shell in Minerva's blog

237
00:12:18,790 --> 00:12:23,710
today if you want you I kind of search

238
00:12:23,710 --> 00:12:26,350
for good advices for blue teamers other

239
00:12:26,350 --> 00:12:29,170
than that and it's mostly about logging

240
00:12:29,170 --> 00:12:31,450
my tool by the way if you have

241
00:12:31,450 --> 00:12:35,050
PowerShell 5 or more advanced version it

242
00:12:35,050 --> 00:12:39,460
is logged so enable dogs and don't rely

243
00:12:39,460 --> 00:12:42,850
on any kind of promises which actually

244
00:12:42,850 --> 00:12:46,690
are worthless and I guess that this is

245
00:12:46,690 --> 00:12:49,090
time to my mandatory I'm slide with a

246
00:12:49,090 --> 00:12:51,460
cat he actually looks at Paulo she'll

247
00:12:51,460 --> 00:12:55,660
know that it is like on a Mac I know how

248
00:12:55,660 --> 00:12:59,020
comes it is PowerShell on a Mac but yeah

249
00:12:59,020 --> 00:13:02,410
it's a curious situation we have here

250
00:13:02,410 --> 00:13:06,070
again this is my Twitter handle and my

251
00:13:06,070 --> 00:13:08,980
github account the project is already up

252
00:13:08,980 --> 00:13:11,080
there and I know if you have time for

253
00:13:11,080 --> 00:13:12,040
Q&A or not

254
00:13:12,040 --> 00:13:22,509
but yeah this was in vogue nutshell we

255
00:13:22,509 --> 00:13:24,579
have time for Q&A we have time for Q&A

256
00:13:24,579 --> 00:13:25,630
right or not

257
00:13:25,630 --> 00:13:29,019
okay so questions yeah

258
00:13:29,019 --> 00:13:39,160
question one nobody wow thank you so I

259
00:13:39,160 --> 00:13:42,040
guess this is it

260
00:13:42,040 --> 00:13:45,819
[Applause]

