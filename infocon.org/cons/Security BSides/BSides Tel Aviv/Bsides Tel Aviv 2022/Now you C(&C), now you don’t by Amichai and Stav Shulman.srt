1
00:00:00,290 --> 00:00:03,220
[Music]

2
00:00:03,220 --> 00:00:03,740
[Applause]

3
00:00:03,740 --> 00:00:10,400
[Music]

4
00:00:10,719 --> 00:00:12,240
hello everyone

5
00:00:12,240 --> 00:00:14,799
welcome to our session now you see and

6
00:00:14,799 --> 00:00:16,480
see and now you don't

7
00:00:16,480 --> 00:00:17,920
my name is amica schulman this is

8
00:00:17,920 --> 00:00:20,000
sufficient you can see the resemblance

9
00:00:20,000 --> 00:00:22,000
related

10
00:00:22,000 --> 00:00:24,240
we'll be talking today about how to

11
00:00:24,240 --> 00:00:27,039
build a potent infrastructure that is

12
00:00:27,039 --> 00:00:29,279
very resilient yet at the same time very

13
00:00:29,279 --> 00:00:31,679
cost effective and affordable

14
00:00:31,679 --> 00:00:33,839
so

15
00:00:36,160 --> 00:00:38,879
we'll discuss a little bit what brought

16
00:00:38,879 --> 00:00:40,559
us to

17
00:00:40,559 --> 00:00:42,559
do this research what was the motivation

18
00:00:42,559 --> 00:00:46,000
behind it and then we'll dive into

19
00:00:46,000 --> 00:00:47,520
describing how

20
00:00:47,520 --> 00:00:49,920
botnet infrastructure is built today and

21
00:00:49,920 --> 00:00:51,920
how researchers are

22
00:00:51,920 --> 00:00:54,640
tearing it down

23
00:00:54,640 --> 00:00:56,480
once we understand that

24
00:00:56,480 --> 00:00:58,320
we'll go and show you a few examples

25
00:00:58,320 --> 00:01:00,079
that we're able to pull through our

26
00:01:00,079 --> 00:01:02,960
research of abundant infrastructures

27
00:01:02,960 --> 00:01:05,119
that are very resilient very cost

28
00:01:05,119 --> 00:01:06,960
effective very cheap

29
00:01:06,960 --> 00:01:09,360
and we'll end up with discussing further

30
00:01:09,360 --> 00:01:12,240
research and some conclusions that we

31
00:01:12,240 --> 00:01:13,840
had from this research

32
00:01:13,840 --> 00:01:16,080
so without further ado

33
00:01:16,080 --> 00:01:19,200
why did we pick on botnets because

34
00:01:19,200 --> 00:01:20,799
every real

35
00:01:20,799 --> 00:01:23,280
large-scale cyber crime operation today

36
00:01:23,280 --> 00:01:26,799
relies on a stable functional botnet if

37
00:01:26,799 --> 00:01:28,880
you want to do carding if you want to do

38
00:01:28,880 --> 00:01:30,400
credential stuffing if you want to do

39
00:01:30,400 --> 00:01:32,799
brute forcing denial of service

40
00:01:32,799 --> 00:01:35,600
or even if you want to pull off a large

41
00:01:35,600 --> 00:01:37,759
scale sql injection attack

42
00:01:37,759 --> 00:01:40,640
you need a functioning botnet

43
00:01:40,640 --> 00:01:42,240
so there are these organizations and

44
00:01:42,240 --> 00:01:44,399
personas that they grow and cultivate

45
00:01:44,399 --> 00:01:47,680
botnets and they sell pieces of them to

46
00:01:47,680 --> 00:01:50,159
individual organizations to carry on

47
00:01:50,159 --> 00:01:52,240
their cyber crime operations there are

48
00:01:52,240 --> 00:01:53,920
these organizations who like to build

49
00:01:53,920 --> 00:01:56,880
their own proprietary infrastructure and

50
00:01:56,880 --> 00:01:59,040
use it for the cybercrime organization

51
00:01:59,040 --> 00:02:00,560
but in any case

52
00:02:00,560 --> 00:02:02,240
this is like the first step the

53
00:02:02,240 --> 00:02:03,840
cornerstone

54
00:02:03,840 --> 00:02:04,719
of the

55
00:02:04,719 --> 00:02:07,520
cyber crime operation so

56
00:02:07,520 --> 00:02:09,440
when researchers

57
00:02:09,440 --> 00:02:12,319
and companies and law enforcement are

58
00:02:12,319 --> 00:02:15,040
tearing down or neutralizing that bond

59
00:02:15,040 --> 00:02:18,160
net it means they are destroying

60
00:02:18,160 --> 00:02:20,319
the cyber criminal operation

61
00:02:20,319 --> 00:02:22,480
so the question we ask yourself can we

62
00:02:22,480 --> 00:02:23,360
build

63
00:02:23,360 --> 00:02:25,360
abundant infrastructure that could

64
00:02:25,360 --> 00:02:27,840
survive the current practices of

65
00:02:27,840 --> 00:02:30,640
neutralizing botnet

66
00:02:30,640 --> 00:02:33,840
and can we build such an infrastructure

67
00:02:33,840 --> 00:02:36,560
that is cost effective enough to be used

68
00:02:36,560 --> 00:02:39,040
by your everyday hacker

69
00:02:39,040 --> 00:02:40,480
and of course the biggest question of

70
00:02:40,480 --> 00:02:43,840
all is would we survive this exercise

71
00:02:43,840 --> 00:02:46,720
so take it from here stuff

72
00:02:46,720 --> 00:02:49,599
so i would like to begin with actually

73
00:02:49,599 --> 00:02:51,680
describing the methods and approaches

74
00:02:51,680 --> 00:02:53,519
that are currently available for thread

75
00:02:53,519 --> 00:02:55,680
actors in order to build and maintain

76
00:02:55,680 --> 00:02:58,640
the infrastructures for these botnets

77
00:02:58,640 --> 00:03:00,800
i think we can divide them into three

78
00:03:00,800 --> 00:03:02,720
main difficulty levels

79
00:03:02,720 --> 00:03:04,800
with the first obviously being the most

80
00:03:04,800 --> 00:03:07,440
basic one and that's when an actor

81
00:03:07,440 --> 00:03:09,440
manually maintains a pool of domain

82
00:03:09,440 --> 00:03:12,239
names it means the actor must acquire

83
00:03:12,239 --> 00:03:14,720
dedicated domain names or it can use a

84
00:03:14,720 --> 00:03:17,360
bunch of abused compromised servers on

85
00:03:17,360 --> 00:03:19,360
which it puts some malicious content to

86
00:03:19,360 --> 00:03:21,440
help them operate as part of a c2

87
00:03:21,440 --> 00:03:22,959
infrastructure

88
00:03:22,959 --> 00:03:25,519
using this method the actor must somehow

89
00:03:25,519 --> 00:03:28,400
initially deliver this domain name to

90
00:03:28,400 --> 00:03:30,480
the victim meaning we will find it

91
00:03:30,480 --> 00:03:35,518
embedded inside the malware binary or

92
00:03:36,640 --> 00:03:38,560
or found inside a dedicated

93
00:03:38,560 --> 00:03:41,040
configuration file that will obviously

94
00:03:41,040 --> 00:03:44,720
be in proximity to the malware

95
00:03:44,720 --> 00:03:47,920
now an actor that would really like to

96
00:03:47,920 --> 00:03:50,159
walk an extra mile using this very basic

97
00:03:50,159 --> 00:03:53,680
approach can maybe have a list of backup

98
00:03:53,680 --> 00:03:56,000
domains but these as well would have to

99
00:03:56,000 --> 00:03:57,920
be somehow delivered initially to the

100
00:03:57,920 --> 00:03:59,599
victim meaning they will be in a

101
00:03:59,599 --> 00:04:02,080
configuration file on the machine or

102
00:04:02,080 --> 00:04:03,760
they would have to be delivered via an

103
00:04:03,760 --> 00:04:07,920
already live and functioning c2 channel

104
00:04:08,000 --> 00:04:11,200
moving to some mid-level practices

105
00:04:11,200 --> 00:04:13,439
this approach i would say is for actors

106
00:04:13,439 --> 00:04:14,480
that

107
00:04:14,480 --> 00:04:16,639
really want to feel like they're using

108
00:04:16,639 --> 00:04:18,798
some sort of cutting-edge technology but

109
00:04:18,798 --> 00:04:20,238
are actually still relying on domain

110
00:04:20,238 --> 00:04:22,479
names so that's when we come across

111
00:04:22,479 --> 00:04:25,680
binaries containing dgas so instead of

112
00:04:25,680 --> 00:04:27,600
one domain name per sample we will find

113
00:04:27,600 --> 00:04:30,000
the domain generation algorithm in it

114
00:04:30,000 --> 00:04:32,080
based on a random seed or a set of

115
00:04:32,080 --> 00:04:34,400
parameters and a prefix it will generate

116
00:04:34,400 --> 00:04:36,240
many many many domain names that will be

117
00:04:36,240 --> 00:04:38,320
registered as required

118
00:04:38,320 --> 00:04:40,960
so instead of one server per session we

119
00:04:40,960 --> 00:04:44,000
will see many precision which might seem

120
00:04:44,000 --> 00:04:46,320
confusing at first but

121
00:04:46,320 --> 00:04:48,400
these algorithms are embedded inside the

122
00:04:48,400 --> 00:04:50,320
binary so once i have that i can pretty

123
00:04:50,320 --> 00:04:52,000
much predict how it's going to look like

124
00:04:52,000 --> 00:04:55,680
and what's going to come next

125
00:04:55,680 --> 00:04:59,440
now some actors would be very creative

126
00:04:59,440 --> 00:05:01,759
very thinking outside the box and would

127
00:05:01,759 --> 00:05:05,440
leverage um some platforms tools and and

128
00:05:05,440 --> 00:05:08,240
infrastructures that are not per se were

129
00:05:08,240 --> 00:05:09,520
meant for

130
00:05:09,520 --> 00:05:11,199
communication

131
00:05:11,199 --> 00:05:14,320
and we'll use them as c2s so we can see

132
00:05:14,320 --> 00:05:16,960
the usage of profiles in social media

133
00:05:16,960 --> 00:05:18,560
platforms so things like facebook

134
00:05:18,560 --> 00:05:20,720
instagram twitter we see that

135
00:05:20,720 --> 00:05:22,479
cloud-based file share services are

136
00:05:22,479 --> 00:05:24,080
actually gaining great popularity right

137
00:05:24,080 --> 00:05:27,280
now so things like onedrive and dropbox

138
00:05:27,280 --> 00:05:29,600
and then we can see some actors that

139
00:05:29,600 --> 00:05:33,680
take pre-made um whole utilities that

140
00:05:33,680 --> 00:05:36,639
have a legit purpose in life and then

141
00:05:36,639 --> 00:05:39,039
attempt to use them for malicious

142
00:05:39,039 --> 00:05:40,160
traffic

143
00:05:40,160 --> 00:05:42,160
a great example i would like to give for

144
00:05:42,160 --> 00:05:44,280
this one would be the great

145
00:05:44,280 --> 00:05:47,759
iran-affiliated apt muddy water that had

146
00:05:47,759 --> 00:05:51,120
a huge scale campaign all relying on a

147
00:05:51,120 --> 00:05:54,160
legit i.t utility called screen connect

148
00:05:54,160 --> 00:05:56,000
to have some malicious traffic looking

149
00:05:56,000 --> 00:05:58,080
like

150
00:05:58,080 --> 00:05:59,759
i.t in the network

151
00:05:59,759 --> 00:06:02,240
i have here some more examples for the

152
00:06:02,240 --> 00:06:05,039
usage of cloud bill file share services

153
00:06:05,039 --> 00:06:07,280
so we have dropbox and we have onedrive

154
00:06:07,280 --> 00:06:10,160
and we can see in the highlighted parts

155
00:06:10,160 --> 00:06:13,360
that for these methods the actor has a

156
00:06:13,360 --> 00:06:16,400
set of limited api keys that has to be

157
00:06:16,400 --> 00:06:18,240
embedded in the code and a set of

158
00:06:18,240 --> 00:06:21,360
pre-known folder and file names that are

159
00:06:21,360 --> 00:06:23,360
in the code and are then exposed in the

160
00:06:23,360 --> 00:06:27,199
url for malicious requests

161
00:06:27,199 --> 00:06:29,600
so these are resources that are

162
00:06:29,600 --> 00:06:31,919
available to thread actors

163
00:06:31,919 --> 00:06:35,199
moving on to our side of defenders

164
00:06:35,199 --> 00:06:37,199
security researchers security vendors

165
00:06:37,199 --> 00:06:38,639
and whatnot

166
00:06:38,639 --> 00:06:41,120
and what can we do against these

167
00:06:41,120 --> 00:06:42,560
resources

168
00:06:42,560 --> 00:06:44,479
so i think that we have a pretty

169
00:06:44,479 --> 00:06:47,440
predictable workflow that has four main

170
00:06:47,440 --> 00:06:51,039
steps so we first must identify this

171
00:06:51,039 --> 00:06:53,440
such malicious uh resource

172
00:06:53,440 --> 00:06:56,000
we will then analyze some samples that

173
00:06:56,000 --> 00:06:58,160
are in our position we will enrich the

174
00:06:58,160 --> 00:06:59,919
data to make sure we didn't miss

175
00:06:59,919 --> 00:07:02,560
anything and will then have some sort of

176
00:07:02,560 --> 00:07:06,080
response and remediation process

177
00:07:06,080 --> 00:07:09,360
how do we even identify such melissa

178
00:07:09,360 --> 00:07:11,840
malicious network resources well we have

179
00:07:11,840 --> 00:07:14,880
the classics of network anomalies or

180
00:07:14,880 --> 00:07:18,000
high on standard ports we have the use

181
00:07:18,000 --> 00:07:20,080
of strange domain names which can be

182
00:07:20,080 --> 00:07:23,120
anything in the spectrum between a funny

183
00:07:23,120 --> 00:07:25,039
looking name that doesn't match normal

184
00:07:25,039 --> 00:07:27,360
traffic and all the way to ridiculous

185
00:07:27,360 --> 00:07:28,720
mimics of

186
00:07:28,720 --> 00:07:30,639
legit services

187
00:07:30,639 --> 00:07:33,120
and we can sometimes even identify

188
00:07:33,120 --> 00:07:35,440
a high volume of traffic between

189
00:07:35,440 --> 00:07:38,000
different endpoints that we know are not

190
00:07:38,000 --> 00:07:39,840
supposed to have so much data

191
00:07:39,840 --> 00:07:42,000
transferred between them

192
00:07:42,000 --> 00:07:45,280
we have ids alerts we have anything that

193
00:07:45,280 --> 00:07:47,520
is based on snort ruling and then we

194
00:07:47,520 --> 00:07:50,160
have the more advanced edr's that will

195
00:07:50,160 --> 00:07:53,440
help us dynamically detect any malicious

196
00:07:53,440 --> 00:07:55,360
or strange communication attempts from

197
00:07:55,360 --> 00:07:58,240
processes in the network

198
00:07:58,240 --> 00:08:01,120
so we now have a bunch of network

199
00:08:01,120 --> 00:08:03,520
identifiers in hand what can we do with

200
00:08:03,520 --> 00:08:06,560
them we can hunt for malwares so we can

201
00:08:06,560 --> 00:08:08,879
opt for publicly available repositories

202
00:08:08,879 --> 00:08:11,840
such as virustotal or hybrid analysis

203
00:08:11,840 --> 00:08:14,080
but we have these identifiers from

204
00:08:14,080 --> 00:08:16,720
alerts in the network so obviously they

205
00:08:16,720 --> 00:08:18,960
didn't trigger themselves so we probably

206
00:08:18,960 --> 00:08:21,039
have binaries of our own

207
00:08:21,039 --> 00:08:24,160
we can now begin with the most fun of

208
00:08:24,160 --> 00:08:26,800
malware analysis which can be anything

209
00:08:26,800 --> 00:08:29,440
from the simplest sandbox execution and

210
00:08:29,440 --> 00:08:31,120
can escalate all the way to full reverse

211
00:08:31,120 --> 00:08:33,599
engineering but doesn't matter how

212
00:08:33,599 --> 00:08:36,000
difficult the analysis was because the

213
00:08:36,000 --> 00:08:37,919
outcome would usually be the same which

214
00:08:37,919 --> 00:08:41,839
is more network identifiers

215
00:08:41,839 --> 00:08:44,880
so because we're now such suspicious

216
00:08:44,880 --> 00:08:46,640
beings

217
00:08:46,640 --> 00:08:48,560
we will go ahead and try to enrich all

218
00:08:48,560 --> 00:08:50,640
the data we've collected

219
00:08:50,640 --> 00:08:52,959
so we can do things like look at unique

220
00:08:52,959 --> 00:08:55,440
registrar data so if i have an actor

221
00:08:55,440 --> 00:08:58,320
that is utilizing unique name servers i

222
00:08:58,320 --> 00:08:59,920
will find additional infrastructure that

223
00:08:59,920 --> 00:09:01,920
uses the same ones

224
00:09:01,920 --> 00:09:04,399
if i have an actor that is using abused

225
00:09:04,399 --> 00:09:08,080
hacked servers it means that it has some

226
00:09:08,080 --> 00:09:10,240
paths on its own on these servers and

227
00:09:10,240 --> 00:09:12,959
some malicious content on it so we can

228
00:09:12,959 --> 00:09:15,600
identify its naming conventions and

229
00:09:15,600 --> 00:09:18,080
filenames he likes to use and then uh

230
00:09:18,080 --> 00:09:20,080
enriched based on the content itself and

231
00:09:20,080 --> 00:09:22,959
find additional servers like that

232
00:09:22,959 --> 00:09:25,440
and we can even look at digital

233
00:09:25,440 --> 00:09:27,440
certificates so these can be

234
00:09:27,440 --> 00:09:30,560
certificates forged by the actor or ones

235
00:09:30,560 --> 00:09:35,199
that were stolen by it and then reused

236
00:09:35,839 --> 00:09:38,880
now that we've really exhausted all

237
00:09:38,880 --> 00:09:42,080
possible leads of investigation

238
00:09:42,080 --> 00:09:44,880
we should have some sort of response so

239
00:09:44,880 --> 00:09:47,360
sadly this phase today is still mainly

240
00:09:47,360 --> 00:09:50,880
based on iocs and specifically iocs

241
00:09:50,880 --> 00:09:53,519
related to outbound communication

242
00:09:53,519 --> 00:09:55,680
we can see that it's pretty much the

243
00:09:55,680 --> 00:09:57,920
convention these days we have some

244
00:09:57,920 --> 00:10:00,640
alerts from israeli search us cert

245
00:10:00,640 --> 00:10:03,760
and and all big vendors use iocs

246
00:10:03,760 --> 00:10:05,040
meaning that

247
00:10:05,040 --> 00:10:06,399
everything we've collected in the

248
00:10:06,399 --> 00:10:09,360
research is translated to one so

249
00:10:09,360 --> 00:10:11,760
hash value for files domain names uri

250
00:10:11,760 --> 00:10:14,320
paths and parameters

251
00:10:14,320 --> 00:10:16,720
we would expect organizations to take

252
00:10:16,720 --> 00:10:19,519
these iocs put them in a deny list and

253
00:10:19,519 --> 00:10:20,640
block

254
00:10:20,640 --> 00:10:23,680
we can take response a step further and

255
00:10:23,680 --> 00:10:26,480
we can sinkhole known infrastructure so

256
00:10:26,480 --> 00:10:28,800
we can register malicious domain names

257
00:10:28,800 --> 00:10:30,640
ourselves and make sure that all live

258
00:10:30,640 --> 00:10:33,920
infections will now turn to us

259
00:10:33,920 --> 00:10:36,720
and if we are familiar with the back

260
00:10:36,720 --> 00:10:39,760
office of this actor and the commands

261
00:10:39,760 --> 00:10:41,680
that are supported by its malware then

262
00:10:41,680 --> 00:10:44,800
we can go ahead and have a pseudo server

263
00:10:44,800 --> 00:10:48,560
of our own that will send a disable or a

264
00:10:48,560 --> 00:10:52,320
kill switch to all infected machines

265
00:10:52,320 --> 00:10:55,200
when it comes to remediation we can try

266
00:10:55,200 --> 00:10:57,839
and maybe team up with hosting providers

267
00:10:57,839 --> 00:11:00,480
to take down malicious infrastructure

268
00:11:00,480 --> 00:11:02,959
or we can team up with social media

269
00:11:02,959 --> 00:11:05,760
platforms and have them closing all uh

270
00:11:05,760 --> 00:11:08,560
threat actor owned profiles

271
00:11:08,560 --> 00:11:12,480
and we can really try and clean up

272
00:11:12,480 --> 00:11:14,800
infected machines from all persistent

273
00:11:14,800 --> 00:11:15,600
and

274
00:11:15,600 --> 00:11:17,600
malicious binaries and

275
00:11:17,600 --> 00:11:21,040
we can sure try that

276
00:11:21,040 --> 00:11:22,000
so

277
00:11:22,000 --> 00:11:24,399
if we're looking at the resources

278
00:11:24,399 --> 00:11:26,160
available to threat actors

279
00:11:26,160 --> 00:11:29,760
compared to our defense workflows

280
00:11:29,760 --> 00:11:32,399
that even though they're not perfect

281
00:11:32,399 --> 00:11:34,720
they're not so bad so

282
00:11:34,720 --> 00:11:37,360
you might think that we might have a

283
00:11:37,360 --> 00:11:40,000
shot of winning this

284
00:11:40,000 --> 00:11:42,240
war against crime

285
00:11:42,240 --> 00:11:45,040
because domain registration is expensive

286
00:11:45,040 --> 00:11:47,680
even if a domain is as cheap as ten

287
00:11:47,680 --> 00:11:51,680
dollars it's cheap if i have ten not two

288
00:11:51,680 --> 00:11:54,000
thousand um and we've mentioned that we

289
00:11:54,000 --> 00:11:55,680
can track some

290
00:11:55,680 --> 00:11:58,079
registrations when it comes to social

291
00:11:58,079 --> 00:11:59,839
media platforms and cloud-based file

292
00:11:59,839 --> 00:12:01,440
share services

293
00:12:01,440 --> 00:12:03,279
actually creating the accounts for these

294
00:12:03,279 --> 00:12:05,120
profiles is very laborsome because they

295
00:12:05,120 --> 00:12:07,680
will require things like verify email

296
00:12:07,680 --> 00:12:10,160
accounts and then active phone numbers

297
00:12:10,160 --> 00:12:11,920
for two-factor authentication purposes

298
00:12:11,920 --> 00:12:14,800
which really limits our actors and also

299
00:12:14,800 --> 00:12:16,800
these are platforms that are trying to

300
00:12:16,800 --> 00:12:18,800
fight really hard against fake accounts

301
00:12:18,800 --> 00:12:21,040
and bot accounts so again not in the

302
00:12:21,040 --> 00:12:23,600
favor for actors

303
00:12:23,600 --> 00:12:25,760
we have great technologies of edr so

304
00:12:25,760 --> 00:12:28,079
yeah we can identify malicious network

305
00:12:28,079 --> 00:12:29,279
patterns

306
00:12:29,279 --> 00:12:31,920
we've got great personnel capable for

307
00:12:31,920 --> 00:12:34,560
moral analysis that can analyze captured

308
00:12:34,560 --> 00:12:37,519
samples and identify

309
00:12:37,519 --> 00:12:39,519
patterns of situ registration to block

310
00:12:39,519 --> 00:12:42,399
further infections and of course we can

311
00:12:42,399 --> 00:12:47,120
block and take over known infrastructure

312
00:12:47,120 --> 00:12:49,519
so when do we lose though

313
00:12:49,519 --> 00:12:52,600
usually when we're up against

314
00:12:52,600 --> 00:12:55,440
nation-state-sponsored actors these guys

315
00:12:55,440 --> 00:12:56,399
have

316
00:12:56,399 --> 00:12:59,040
great resources and just a great

317
00:12:59,040 --> 00:13:02,720
abundance of headcount and budget and

318
00:13:02,720 --> 00:13:05,680
they can have as many dropbox accounts

319
00:13:05,680 --> 00:13:07,600
as they can dream of and as many phone

320
00:13:07,600 --> 00:13:09,600
numbers as they like

321
00:13:09,600 --> 00:13:11,200
and generally can do

322
00:13:11,200 --> 00:13:15,279
anything in a gigantic scale

323
00:13:15,519 --> 00:13:18,160
this brings me back to our original

324
00:13:18,160 --> 00:13:20,959
research question and to our motivation

325
00:13:20,959 --> 00:13:23,839
can we create a botnet infrastructure

326
00:13:23,839 --> 00:13:24,800
that is

327
00:13:24,800 --> 00:13:27,680
mega robust and resilient

328
00:13:27,680 --> 00:13:29,920
that is available to our everyday

329
00:13:29,920 --> 00:13:31,519
friendly hackers

330
00:13:31,519 --> 00:13:34,880
we now know that it must be based on

331
00:13:34,880 --> 00:13:37,120
publicly available infrastructure it

332
00:13:37,120 --> 00:13:40,160
must be indistinguishable from normal

333
00:13:40,160 --> 00:13:41,920
traffic in the network

334
00:13:41,920 --> 00:13:45,199
cannot be ioc'd one that if someone were

335
00:13:45,199 --> 00:13:48,160
to catch one of my malwares or one of my

336
00:13:48,160 --> 00:13:50,800
requests then it will not affect the

337
00:13:50,800 --> 00:13:54,000
rest of my infections and my bots and it

338
00:13:54,000 --> 00:13:58,399
has to be cheap and cost effective

339
00:13:58,800 --> 00:14:02,079
so we're experimenting with a few ideas

340
00:14:02,079 --> 00:14:03,920
and we'll start saying yeah this is

341
00:14:03,920 --> 00:14:06,560
going to work and somebody no i can i

342
00:14:06,560 --> 00:14:08,240
know how to tear it down and then we'll

343
00:14:08,240 --> 00:14:10,079
take another one and we'll turn it down

344
00:14:10,079 --> 00:14:12,639
again but eventually we came up with a

345
00:14:12,639 --> 00:14:14,079
scheme that we're

346
00:14:14,079 --> 00:14:15,760
able to

347
00:14:15,760 --> 00:14:17,199
reconstruct with a number of

348
00:14:17,199 --> 00:14:20,079
infrastructures um and first example

349
00:14:20,079 --> 00:14:21,920
i'll talk about is spotify and the

350
00:14:21,920 --> 00:14:24,079
reason we picked on on spotify is

351
00:14:24,079 --> 00:14:27,199
because spotnet which is a spotify-based

352
00:14:27,199 --> 00:14:30,399
botnet seems like a cool thing to do but

353
00:14:30,399 --> 00:14:32,959
also because spotify

354
00:14:32,959 --> 00:14:34,639
is very common today

355
00:14:34,639 --> 00:14:36,160
and

356
00:14:36,160 --> 00:14:39,760
you would see a lot of normal

357
00:14:39,760 --> 00:14:42,639
spotify traffic within organizations as

358
00:14:42,639 --> 00:14:44,959
a regular thing

359
00:14:44,959 --> 00:14:46,720
and the other advantage of course is

360
00:14:46,720 --> 00:14:49,519
spotify has a very nice api that can be

361
00:14:49,519 --> 00:14:52,160
used to interact with the service um

362
00:14:52,160 --> 00:14:54,959
so we took spotify and now the questions

363
00:14:54,959 --> 00:14:57,519
we have to answer are

364
00:14:57,519 --> 00:15:00,320
how do we encode the data using spotify

365
00:15:00,320 --> 00:15:03,199
uh how do we make the botnet spotify

366
00:15:03,199 --> 00:15:05,920
traffic similar to regular botnet

367
00:15:05,920 --> 00:15:07,199
traffic

368
00:15:07,199 --> 00:15:09,920
uh how to ensure that the individual

369
00:15:09,920 --> 00:15:12,800
bots are resilient and talk a little bit

370
00:15:12,800 --> 00:15:15,680
about the registration and how the reach

371
00:15:15,680 --> 00:15:17,600
and how the infection and registration

372
00:15:17,600 --> 00:15:20,079
process is also resilient

373
00:15:20,079 --> 00:15:22,800
so first question how do i encode botnet

374
00:15:22,800 --> 00:15:23,760
data

375
00:15:23,760 --> 00:15:26,639
in spotify and we found the easiest way

376
00:15:26,639 --> 00:15:29,680
to put data into spotify was using

377
00:15:29,680 --> 00:15:31,839
podcasts everyone can put on a new

378
00:15:31,839 --> 00:15:35,040
podcast with episode on spotify

379
00:15:35,040 --> 00:15:36,399
we're doing that through a platform

380
00:15:36,399 --> 00:15:39,600
called castos it cost us 19 dollars a

381
00:15:39,600 --> 00:15:40,480
month

382
00:15:40,480 --> 00:15:42,800
cheap enough uh if you want to go

383
00:15:42,800 --> 00:15:44,959
cheaper than that you can do it

384
00:15:44,959 --> 00:15:48,480
by using an amazon s3 bucket for example

385
00:15:48,480 --> 00:15:51,680
you put all your content audio images

386
00:15:51,680 --> 00:15:54,480
descriptions and the xml feed

387
00:15:54,480 --> 00:15:58,000
into your repository customs in this

388
00:15:58,000 --> 00:15:59,120
instance

389
00:15:59,120 --> 00:16:01,199
and then you go to the

390
00:16:01,199 --> 00:16:04,160
podcasters.spotify.com

391
00:16:04,160 --> 00:16:08,000
and you just put a link to your xml feed

392
00:16:08,000 --> 00:16:10,959
now everything that you upload to your

393
00:16:10,959 --> 00:16:13,839
source customs for example would be

394
00:16:13,839 --> 00:16:17,120
updated in spotify and published within

395
00:16:17,120 --> 00:16:20,639
20 to 30 minutes

396
00:16:20,639 --> 00:16:21,440
so

397
00:16:21,440 --> 00:16:24,240
we have a way to put in data

398
00:16:24,240 --> 00:16:26,160
and how do we encode our commands in

399
00:16:26,160 --> 00:16:28,959
that data well

400
00:16:28,959 --> 00:16:29,839
one

401
00:16:29,839 --> 00:16:33,440
obvious idea is to encode our messages

402
00:16:33,440 --> 00:16:37,040
within the audio files or the images

403
00:16:37,040 --> 00:16:39,360
that are accompanying the podcast and

404
00:16:39,360 --> 00:16:40,720
the episodes

405
00:16:40,720 --> 00:16:42,399
of course there is a lot of room there

406
00:16:42,399 --> 00:16:44,560
and you can put binary data

407
00:16:44,560 --> 00:16:48,480
the problem is that when spotify takes

408
00:16:48,480 --> 00:16:50,320
the information from the original

409
00:16:50,320 --> 00:16:53,199
platform it transforms it

410
00:16:53,199 --> 00:16:56,320
so you cannot just embed a binary within

411
00:16:56,320 --> 00:16:58,240
an audio file

412
00:16:58,240 --> 00:17:00,639
there are ways to do that uh

413
00:17:00,639 --> 00:17:03,519
you could do audio modulation

414
00:17:03,519 --> 00:17:06,079
i think that there are some people here

415
00:17:06,079 --> 00:17:08,559
who remember the sound of a fax machine

416
00:17:08,559 --> 00:17:10,160
or an old modem

417
00:17:10,160 --> 00:17:12,640
uh so you could use that you could use

418
00:17:12,640 --> 00:17:17,359
ocr in images to encode data

419
00:17:17,359 --> 00:17:19,760
not too complex

420
00:17:19,760 --> 00:17:21,839
not that simple

421
00:17:21,839 --> 00:17:24,480
um but turns out

422
00:17:24,480 --> 00:17:27,520
that if we want to deliver

423
00:17:27,520 --> 00:17:30,960
short messages which can be text encoded

424
00:17:30,960 --> 00:17:33,440
for example by using base64

425
00:17:33,440 --> 00:17:36,320
we could use the description

426
00:17:36,320 --> 00:17:39,919
of an episode in podcast

427
00:17:39,919 --> 00:17:42,240
and it's long enough to include short

428
00:17:42,240 --> 00:17:44,160
commands and instructions

429
00:17:44,160 --> 00:17:47,600
it is long enough to include uh the url

430
00:17:47,600 --> 00:17:50,080
for further download of a binary or more

431
00:17:50,080 --> 00:17:51,520
data

432
00:17:51,520 --> 00:17:53,360
and it can include

433
00:17:53,360 --> 00:17:55,760
the identifier

434
00:17:55,760 --> 00:17:59,720
of a next message

435
00:18:00,240 --> 00:18:01,120
uh

436
00:18:01,120 --> 00:18:02,559
one other thing it may include i'll

437
00:18:02,559 --> 00:18:05,280
mention it here talk about it later

438
00:18:05,280 --> 00:18:08,480
it can include a digital signature of

439
00:18:08,480 --> 00:18:10,559
the message

440
00:18:10,559 --> 00:18:13,120
so we've decided that we are going to

441
00:18:13,120 --> 00:18:15,600
encode button messages inside the

442
00:18:15,600 --> 00:18:19,200
description of individual podcasts and

443
00:18:19,200 --> 00:18:22,160
each individual port in each individual

444
00:18:22,160 --> 00:18:24,160
episode we need to podcast would

445
00:18:24,160 --> 00:18:26,080
actually contain

446
00:18:26,080 --> 00:18:26,840
the

447
00:18:26,840 --> 00:18:30,240
identifier of the next message which is

448
00:18:30,240 --> 00:18:33,440
again a podcast episode could be

449
00:18:33,440 --> 00:18:35,600
of the same podcast could be of a

450
00:18:35,600 --> 00:18:38,000
different podcast could be of a podcast

451
00:18:38,000 --> 00:18:39,440
from the same

452
00:18:39,440 --> 00:18:44,400
publisher or a very different publisher

453
00:18:45,120 --> 00:18:46,000
and

454
00:18:46,000 --> 00:18:47,200
the way

455
00:18:47,200 --> 00:18:49,840
a bot is accessing the information

456
00:18:49,840 --> 00:18:53,280
is by accessing the url that you see

457
00:18:53,280 --> 00:18:55,360
there and as you can see

458
00:18:55,360 --> 00:18:59,360
it's a generic spotify url

459
00:18:59,360 --> 00:19:01,120
with

460
00:19:01,120 --> 00:19:04,160
a unique identifier for

461
00:19:04,160 --> 00:19:06,240
each message

462
00:19:06,240 --> 00:19:09,760
so clearly if you try to put

463
00:19:09,760 --> 00:19:12,880
this identifier as your ioc

464
00:19:12,880 --> 00:19:16,559
you are going into a race you cannot win

465
00:19:16,559 --> 00:19:19,280
because each message now has a different

466
00:19:19,280 --> 00:19:21,200
identifier

467
00:19:21,200 --> 00:19:25,600
and the episodes contain the identifiers

468
00:19:25,600 --> 00:19:28,080
of the next messages

469
00:19:28,080 --> 00:19:30,080
so what we have here

470
00:19:30,080 --> 00:19:32,320
is a scheme

471
00:19:32,320 --> 00:19:35,679
that makes it very hard to put iocs in

472
00:19:35,679 --> 00:19:37,520
place in fact

473
00:19:37,520 --> 00:19:40,000
even if you are fast enough

474
00:19:40,000 --> 00:19:44,240
to block a few identifiers of messages

475
00:19:44,240 --> 00:19:47,200
the bot can go back

476
00:19:47,200 --> 00:19:49,760
and ask for older messages using their

477
00:19:49,760 --> 00:19:51,360
identifiers

478
00:19:51,360 --> 00:19:53,760
and the bot master at the same time

479
00:19:53,760 --> 00:19:56,160
would go to the source

480
00:19:56,160 --> 00:19:57,360
of the data

481
00:19:57,360 --> 00:20:00,400
change the description of older episodes

482
00:20:00,400 --> 00:20:04,400
and the bot is now up and running again

483
00:20:04,799 --> 00:20:07,360
so it's very very difficult to take down

484
00:20:07,360 --> 00:20:10,080
this in terms of iocs

485
00:20:10,080 --> 00:20:12,400
and then later even when you found out

486
00:20:12,400 --> 00:20:14,320
that you're infected and you now want to

487
00:20:14,320 --> 00:20:16,799
identify all infected machines within

488
00:20:16,799 --> 00:20:20,320
the organization you'd have to go to all

489
00:20:20,320 --> 00:20:25,120
the machines that have spotify on them

490
00:20:25,200 --> 00:20:28,159
look back at all their internet access

491
00:20:28,159 --> 00:20:31,280
history and try to find out whether they

492
00:20:31,280 --> 00:20:34,120
were accessing spotify with specific

493
00:20:34,120 --> 00:20:36,960
identifiers that you know

494
00:20:36,960 --> 00:20:41,440
that are part of the abundant messages

495
00:20:42,559 --> 00:20:45,120
so so so this is nice but then you have

496
00:20:45,120 --> 00:20:47,600
these dedicated researchers who are

497
00:20:47,600 --> 00:20:50,880
saying well we're able to discover all

498
00:20:50,880 --> 00:20:53,600
the identifiers and then we took down

499
00:20:53,600 --> 00:20:56,159
the podcast itself and we actually made

500
00:20:56,159 --> 00:20:57,600
spotify

501
00:20:57,600 --> 00:20:58,720
close

502
00:20:58,720 --> 00:21:01,200
the account that was used to publish

503
00:21:01,200 --> 00:21:04,240
that podcast what do you do in that case

504
00:21:04,240 --> 00:21:06,640
so very simple what we're going to do in

505
00:21:06,640 --> 00:21:08,480
that case when the bot

506
00:21:08,480 --> 00:21:10,799
feels that communication is down we're

507
00:21:10,799 --> 00:21:13,679
using the search functionality of

508
00:21:13,679 --> 00:21:16,080
spotify and we search for some specific

509
00:21:16,080 --> 00:21:17,200
keywords

510
00:21:17,200 --> 00:21:19,440
okay that we can change from time to

511
00:21:19,440 --> 00:21:22,080
time and we can choose whether we want

512
00:21:22,080 --> 00:21:26,320
very strict search keywords or loose

513
00:21:26,320 --> 00:21:28,720
keywords if we choose strict one like

514
00:21:28,720 --> 00:21:30,559
google here we get

515
00:21:30,559 --> 00:21:31,760
relatively

516
00:21:31,760 --> 00:21:33,679
small set of results we don't need to go

517
00:21:33,679 --> 00:21:35,760
through many results by the way most of

518
00:21:35,760 --> 00:21:38,400
them are legitimate okay

519
00:21:38,400 --> 00:21:40,640
if we do a loose search then we get a

520
00:21:40,640 --> 00:21:42,799
lot of results it cannot be

521
00:21:42,799 --> 00:21:44,400
distinguished from

522
00:21:44,400 --> 00:21:46,559
normal queries in the network

523
00:21:46,559 --> 00:21:49,440
and what the bot is doing now

524
00:21:49,440 --> 00:21:52,320
it's going through the results

525
00:21:52,320 --> 00:21:54,960
looking at the description of individual

526
00:21:54,960 --> 00:21:57,280
podcasts finding a specific pattern

527
00:21:57,280 --> 00:21:59,760
there again this pattern

528
00:21:59,760 --> 00:22:02,400
can be changed from time to time

529
00:22:02,400 --> 00:22:05,600
and once the pattern is found

530
00:22:05,600 --> 00:22:09,039
we know that we have the new channel for

531
00:22:09,039 --> 00:22:10,840
the

532
00:22:10,840 --> 00:22:13,760
botnet and in order to prevent

533
00:22:13,760 --> 00:22:15,520
researchers from

534
00:22:15,520 --> 00:22:17,600
sinkholding this

535
00:22:17,600 --> 00:22:20,240
we're going to use a digital signature

536
00:22:20,240 --> 00:22:21,760
within the message

537
00:22:21,760 --> 00:22:24,000
so the bot

538
00:22:24,000 --> 00:22:26,559
knows that this is an original podcast

539
00:22:26,559 --> 00:22:29,520
which is part of the botnet and not just

540
00:22:29,520 --> 00:22:32,080
a researcher trying to

541
00:22:32,080 --> 00:22:35,039
tear down the network

542
00:22:35,039 --> 00:22:36,880
and again these patterns can change from

543
00:22:36,880 --> 00:22:38,000
time to time

544
00:22:38,000 --> 00:22:39,520
so

545
00:22:39,520 --> 00:22:40,799
it is very

546
00:22:40,799 --> 00:22:44,400
hard for someone to go and say well this

547
00:22:44,400 --> 00:22:47,760
bot has no communication anymore

548
00:22:47,760 --> 00:22:48,720
so

549
00:22:48,720 --> 00:22:51,120
probably the only question now

550
00:22:51,120 --> 00:22:52,840
is how do we

551
00:22:52,840 --> 00:22:56,320
bootstrap all that how do we register

552
00:22:56,320 --> 00:22:57,600
and find

553
00:22:57,600 --> 00:23:00,000
the first

554
00:23:00,000 --> 00:23:01,039
message

555
00:23:01,039 --> 00:23:03,280
in the botnet channel

556
00:23:03,280 --> 00:23:04,960
and clearly we're going to use the same

557
00:23:04,960 --> 00:23:06,960
technology we're going to use the search

558
00:23:06,960 --> 00:23:09,679
functionality with some search terms

559
00:23:09,679 --> 00:23:12,320
that are embedded within the malware

560
00:23:12,320 --> 00:23:14,559
distribution we can change them whenever

561
00:23:14,559 --> 00:23:16,159
we change the malware distribution we

562
00:23:16,159 --> 00:23:18,080
get a list of podcasts

563
00:23:18,080 --> 00:23:19,679
okay

564
00:23:19,679 --> 00:23:21,919
we search for podcasts with a specific

565
00:23:21,919 --> 00:23:24,480
pattern in their description

566
00:23:24,480 --> 00:23:27,600
we check the digital signature and then

567
00:23:27,600 --> 00:23:29,679
we know that this is a channel we can

568
00:23:29,679 --> 00:23:31,440
start working with

569
00:23:31,440 --> 00:23:35,280
notice that even if someone captured

570
00:23:35,280 --> 00:23:37,120
our sample

571
00:23:37,120 --> 00:23:38,720
and knows

572
00:23:38,720 --> 00:23:40,559
the keywords

573
00:23:40,559 --> 00:23:42,960
that we're using

574
00:23:42,960 --> 00:23:46,799
they cannot block infections using this

575
00:23:46,799 --> 00:23:48,720
same

576
00:23:48,720 --> 00:23:51,760
sample of course as long as the search

577
00:23:51,760 --> 00:23:53,120
terms are not

578
00:23:53,120 --> 00:23:54,240
super

579
00:23:54,240 --> 00:23:56,080
unique

580
00:23:56,080 --> 00:24:01,039
okay so we're very resilient here uh

581
00:24:01,039 --> 00:24:03,200
and and and quite frankly what i've

582
00:24:03,200 --> 00:24:05,120
showed you is is that

583
00:24:05,120 --> 00:24:07,360
we have a great scheme

584
00:24:07,360 --> 00:24:11,360
you cannot use your normal iocs

585
00:24:11,360 --> 00:24:13,919
inspecting requests

586
00:24:13,919 --> 00:24:14,720
to

587
00:24:14,720 --> 00:24:16,840
disrupt communications of

588
00:24:16,840 --> 00:24:19,600
existing bots

589
00:24:19,600 --> 00:24:20,880
deny

590
00:24:20,880 --> 00:24:23,440
the addition of new bots

591
00:24:23,440 --> 00:24:25,120
to the network

592
00:24:25,120 --> 00:24:27,520
removing accounts working with spotify

593
00:24:27,520 --> 00:24:30,960
to to clean everything does not help you

594
00:24:30,960 --> 00:24:33,120
tear down the network because it would

595
00:24:33,120 --> 00:24:37,039
be up and running in seconds

596
00:24:37,360 --> 00:24:41,039
and and finding infected machines

597
00:24:41,039 --> 00:24:42,960
is very difficult because you have to go

598
00:24:42,960 --> 00:24:45,520
through all the machines that have

599
00:24:45,520 --> 00:24:49,360
spotify in them and look very closely at

600
00:24:49,360 --> 00:24:52,000
all their spotify activity

601
00:24:52,000 --> 00:24:54,240
in order to understand whether they are

602
00:24:54,240 --> 00:24:57,440
part of the spotify botnet or not

603
00:24:57,440 --> 00:24:58,960
and and

604
00:24:58,960 --> 00:25:01,440
if we actually piggybacked

605
00:25:01,440 --> 00:25:04,799
on existing spotify accounts in the

606
00:25:04,799 --> 00:25:06,960
infected machines

607
00:25:06,960 --> 00:25:08,880
that would have been even

608
00:25:08,880 --> 00:25:13,039
harder for a researcher to find

609
00:25:13,760 --> 00:25:15,760
so

610
00:25:15,760 --> 00:25:18,400
it works perfectly and and we could stop

611
00:25:18,400 --> 00:25:21,200
there but i realized that some of you

612
00:25:21,200 --> 00:25:23,760
people today here would say ah but

613
00:25:23,760 --> 00:25:26,840
that's spotify and and we will not allow

614
00:25:26,840 --> 00:25:29,760
spotify inside our networks that's

615
00:25:29,760 --> 00:25:31,520
social networking that's not for

616
00:25:31,520 --> 00:25:33,279
business people

617
00:25:33,279 --> 00:25:34,880
so we looked for a business application

618
00:25:34,880 --> 00:25:37,360
and we chose discord because discord is

619
00:25:37,360 --> 00:25:40,480
becoming very popular and

620
00:25:40,480 --> 00:25:42,400
because it's a business application

621
00:25:42,400 --> 00:25:46,159
and it has an even simpler api

622
00:25:46,159 --> 00:25:48,000
and the questions we have to answer are

623
00:25:48,000 --> 00:25:50,159
the same questions how do we deliver

624
00:25:50,159 --> 00:25:53,039
data and apparently in

625
00:25:53,039 --> 00:25:56,320
discord this is very simple discord uses

626
00:25:56,320 --> 00:25:59,600
websocket in order to get data

627
00:25:59,600 --> 00:26:01,919
into the clients from the server

628
00:26:01,919 --> 00:26:04,799
each client opens a web socket to

629
00:26:04,799 --> 00:26:06,720
discord gg

630
00:26:06,720 --> 00:26:10,480
and text messages are just poured into

631
00:26:10,480 --> 00:26:11,679
this channel

632
00:26:11,679 --> 00:26:14,400
from the server

633
00:26:14,720 --> 00:26:17,279
if you want to convey binary data no

634
00:26:17,279 --> 00:26:20,559
problem you attach a file to a message

635
00:26:20,559 --> 00:26:22,240
then the message

636
00:26:22,240 --> 00:26:25,520
contains a url to the file which is

637
00:26:25,520 --> 00:26:27,840
actually stored in glue in google cloud

638
00:26:27,840 --> 00:26:31,200
storage with a unique url for each and

639
00:26:31,200 --> 00:26:32,400
every file

640
00:26:32,400 --> 00:26:35,120
so i can send text messages i can send

641
00:26:35,120 --> 00:26:38,400
binary data i can of course

642
00:26:38,400 --> 00:26:40,960
use digital signatures to make sure that

643
00:26:40,960 --> 00:26:42,960
no one is think calling me

644
00:26:42,960 --> 00:26:46,159
and just to make it even prettier the

645
00:26:46,159 --> 00:26:48,960
data going down into the client

646
00:26:48,960 --> 00:26:52,000
is compressed using xelib

647
00:26:52,000 --> 00:26:53,120
so

648
00:26:53,120 --> 00:26:57,440
client is constantly pulling the channel

649
00:26:57,440 --> 00:26:59,679
as part of the normal functionality

650
00:26:59,679 --> 00:27:00,480
saying

651
00:27:00,480 --> 00:27:02,559
do i have messages do i have messages do

652
00:27:02,559 --> 00:27:04,000
i have messages

653
00:27:04,000 --> 00:27:06,720
anything from any source gets poured

654
00:27:06,720 --> 00:27:09,679
into the same channel

655
00:27:09,679 --> 00:27:11,360
and

656
00:27:11,360 --> 00:27:13,279
and what is sent back

657
00:27:13,279 --> 00:27:15,360
is compressed you can see

658
00:27:15,360 --> 00:27:17,440
that there are well you cannot see with

659
00:27:17,440 --> 00:27:19,440
this

660
00:27:19,440 --> 00:27:20,559
the the

661
00:27:20,559 --> 00:27:23,520
actual pulling request is plain text

662
00:27:23,520 --> 00:27:25,360
the message itself

663
00:27:25,360 --> 00:27:26,880
is compressed so

664
00:27:26,880 --> 00:27:28,960
even the same message doesn't look the

665
00:27:28,960 --> 00:27:30,240
same

666
00:27:30,240 --> 00:27:31,360
uh

667
00:27:31,360 --> 00:27:34,159
in two different instances

668
00:27:34,159 --> 00:27:36,000
the request of work contains no

669
00:27:36,000 --> 00:27:39,279
identifier for the source of messages

670
00:27:39,279 --> 00:27:41,279
response

671
00:27:41,279 --> 00:27:43,039
contains of course the identifiers but

672
00:27:43,039 --> 00:27:45,840
you need to decompress

673
00:27:45,840 --> 00:27:47,600
the traffic in order to understand it

674
00:27:47,600 --> 00:27:49,679
which is exactly what we did with our

675
00:27:49,679 --> 00:27:50,880
own

676
00:27:50,880 --> 00:27:54,880
small and simple botnet client here

677
00:27:55,840 --> 00:27:58,399
the thing with discord is that you

678
00:27:58,399 --> 00:28:00,640
cannot work anonymously

679
00:28:00,640 --> 00:28:04,240
so you need some sort of account context

680
00:28:04,240 --> 00:28:06,640
in order to work so we have to work a

681
00:28:06,640 --> 00:28:08,399
little bit harder to create abundance on

682
00:28:08,399 --> 00:28:11,279
top of that uh and the scheme that we

683
00:28:11,279 --> 00:28:13,840
came up with is that

684
00:28:13,840 --> 00:28:16,559
every malware distribution would have

685
00:28:16,559 --> 00:28:18,159
what we call a bootstrap account

686
00:28:18,159 --> 00:28:19,679
credential in it

687
00:28:19,679 --> 00:28:23,200
and it's the same for everyone who is

688
00:28:23,200 --> 00:28:26,720
being infected by the same

689
00:28:26,720 --> 00:28:29,120
malware distribution we change it when

690
00:28:29,120 --> 00:28:31,840
we change the distribution

691
00:28:31,840 --> 00:28:33,679
when infection starts

692
00:28:33,679 --> 00:28:34,960
the client

693
00:28:34,960 --> 00:28:36,559
connects to discord

694
00:28:36,559 --> 00:28:37,440
with

695
00:28:37,440 --> 00:28:39,760
the bootstrap account

696
00:28:39,760 --> 00:28:43,760
in our back office we made sure that the

697
00:28:43,760 --> 00:28:46,720
bootstrap account becomes a friend in

698
00:28:46,720 --> 00:28:49,279
the discord network of the botmaster

699
00:28:49,279 --> 00:28:51,200
account

700
00:28:51,200 --> 00:28:52,240
so

701
00:28:52,240 --> 00:28:54,080
when the client is up and running it

702
00:28:54,080 --> 00:28:55,840
starts receiving messages from the

703
00:28:55,840 --> 00:28:57,440
botmaster account

704
00:28:57,440 --> 00:28:59,840
and the first message

705
00:28:59,840 --> 00:29:02,640
would be the credentials for a newly

706
00:29:02,640 --> 00:29:03,840
created

707
00:29:03,840 --> 00:29:05,600
dedicated account

708
00:29:05,600 --> 00:29:07,840
for that bot

709
00:29:07,840 --> 00:29:10,080
this account is created in our back

710
00:29:10,080 --> 00:29:11,039
office

711
00:29:11,039 --> 00:29:13,760
so they're no problem overcoming issues

712
00:29:13,760 --> 00:29:16,159
like bot protections and recaptcha and

713
00:29:16,159 --> 00:29:17,919
whatnot

714
00:29:17,919 --> 00:29:20,799
and from that moment on

715
00:29:20,799 --> 00:29:23,360
we're connecting to the discord service

716
00:29:23,360 --> 00:29:27,520
using this dedicated account for each

717
00:29:27,520 --> 00:29:30,159
and every bot

718
00:29:30,159 --> 00:29:33,039
so there is no single ioc

719
00:29:33,039 --> 00:29:34,480
you can use

720
00:29:34,480 --> 00:29:35,760
in order to

721
00:29:35,760 --> 00:29:37,760
identify

722
00:29:37,760 --> 00:29:38,840
both

723
00:29:38,840 --> 00:29:40,640
accounts

724
00:29:40,640 --> 00:29:42,640
and from that moment on

725
00:29:42,640 --> 00:29:44,480
now

726
00:29:44,480 --> 00:29:47,200
these bots they are holding on for dear

727
00:29:47,200 --> 00:29:49,919
life because now there is no ioc to

728
00:29:49,919 --> 00:29:52,720
detect the individual or certainly not

729
00:29:52,720 --> 00:29:55,760
to tear down all the accounts

730
00:29:55,760 --> 00:29:57,520
uh

731
00:29:57,520 --> 00:29:59,760
if someone for some reason was able to

732
00:29:59,760 --> 00:30:02,480
identify the bootstrap account and put

733
00:30:02,480 --> 00:30:05,159
an ioc for that

734
00:30:05,159 --> 00:30:09,760
existing infections are not affected

735
00:30:09,760 --> 00:30:11,919
and i will have to issue a new malware

736
00:30:11,919 --> 00:30:13,760
distribution okay

737
00:30:13,760 --> 00:30:16,080
that's a lot of work

738
00:30:16,080 --> 00:30:18,640
if for some reason the botmaster account

739
00:30:18,640 --> 00:30:20,320
was taken down

740
00:30:20,320 --> 00:30:23,440
by working with discord

741
00:30:23,440 --> 00:30:26,399
i create a new botmaster account

742
00:30:26,399 --> 00:30:29,760
in the back office i make it friend of

743
00:30:29,760 --> 00:30:33,360
all the individual bot accounts

744
00:30:33,360 --> 00:30:35,200
and in seconds they are up and running

745
00:30:35,200 --> 00:30:37,919
again receiving messages

746
00:30:37,919 --> 00:30:40,240
now yeah i know that some of you people

747
00:30:40,240 --> 00:30:43,440
here are very dedicated to this

748
00:30:43,440 --> 00:30:46,320
so you probably work with discord and

749
00:30:46,320 --> 00:30:48,880
find each and every individual both

750
00:30:48,880 --> 00:30:52,480
account and take them all out

751
00:30:52,480 --> 00:30:54,159
in which case

752
00:30:54,159 --> 00:30:56,240
what we'll have to do

753
00:30:56,240 --> 00:30:57,360
is

754
00:30:57,360 --> 00:30:59,519
create two accounts

755
00:30:59,519 --> 00:31:01,360
for every new infection

756
00:31:01,360 --> 00:31:04,000
one that is used currently and is friend

757
00:31:04,000 --> 00:31:06,240
of the boatmaster account and one that

758
00:31:06,240 --> 00:31:08,320
is just sitting there

759
00:31:08,320 --> 00:31:10,720
when the network is taken down

760
00:31:10,720 --> 00:31:12,880
again at the back office

761
00:31:12,880 --> 00:31:14,720
i will create a new

762
00:31:14,720 --> 00:31:17,679
bot master account make it friend to all

763
00:31:17,679 --> 00:31:18,480
the

764
00:31:18,480 --> 00:31:23,679
backup accounts that were unused so far

765
00:31:23,679 --> 00:31:25,200
and then the network is up and running

766
00:31:25,200 --> 00:31:26,480
again

767
00:31:26,480 --> 00:31:27,919
and what would be the first message i

768
00:31:27,919 --> 00:31:30,559
would send to each and every block

769
00:31:30,559 --> 00:31:32,720
a new backup account of course

770
00:31:32,720 --> 00:31:34,799
so you can see

771
00:31:34,799 --> 00:31:37,600
this is very pesky you cannot tear this

772
00:31:37,600 --> 00:31:40,399
down easily and of course identifying

773
00:31:40,399 --> 00:31:43,360
infected machines you need to go into

774
00:31:43,360 --> 00:31:44,840
all discord machines in your

775
00:31:44,840 --> 00:31:47,679
organizations and and

776
00:31:47,679 --> 00:31:48,559
hope

777
00:31:48,559 --> 00:31:52,480
that there is some log somewhere that

778
00:31:52,480 --> 00:31:54,799
would give you a clue as to what are the

779
00:31:54,799 --> 00:31:57,120
messages that they were receiving

780
00:31:57,120 --> 00:31:57,919
okay

781
00:31:57,919 --> 00:31:59,200
very simple

782
00:31:59,200 --> 00:32:01,600
very resilient

783
00:32:01,600 --> 00:32:05,120
extremely cheap

784
00:32:06,720 --> 00:32:08,399
so now

785
00:32:08,399 --> 00:32:11,120
what is next ahead for us

786
00:32:11,120 --> 00:32:13,120
well first and foremost

787
00:32:13,120 --> 00:32:16,159
we have to produce a functioning full

788
00:32:16,159 --> 00:32:18,159
poc for the entire thing rather than

789
00:32:18,159 --> 00:32:19,120
just

790
00:32:19,120 --> 00:32:21,679
small pieces of it

791
00:32:21,679 --> 00:32:23,360
we would like to

792
00:32:23,360 --> 00:32:25,919
experiment with abusing additional

793
00:32:25,919 --> 00:32:28,880
platforms so currently we have um

794
00:32:28,880 --> 00:32:32,000
linkedin and google docs and that's

795
00:32:32,000 --> 00:32:34,880
mainly in order to prove that this is

796
00:32:34,880 --> 00:32:37,120
not a one-time thing and that this is

797
00:32:37,120 --> 00:32:39,360
actually a very broad phenomenon and

798
00:32:39,360 --> 00:32:43,760
that dozens of platforms can be abused

799
00:32:43,760 --> 00:32:47,039
we are currently testing the possibility

800
00:32:47,039 --> 00:32:50,000
for having botnets that are based on ad

801
00:32:50,000 --> 00:32:52,559
services so we have this kind of

802
00:32:52,559 --> 00:32:55,279
infection network that actually finds

803
00:32:55,279 --> 00:32:58,480
you rather than you registering to it

804
00:32:58,480 --> 00:33:00,720
and then we would also like to test the

805
00:33:00,720 --> 00:33:03,679
possibility to piggyback on existing

806
00:33:03,679 --> 00:33:06,159
accounts for these abused platforms on

807
00:33:06,159 --> 00:33:10,399
infected machines that we own

808
00:33:10,399 --> 00:33:12,880
what did we have so far

809
00:33:12,880 --> 00:33:13,919
um

810
00:33:13,919 --> 00:33:16,880
we've proved that multiple publicly

811
00:33:16,880 --> 00:33:20,480
available platforms can actually be used

812
00:33:20,480 --> 00:33:25,279
as c2 infrastructures and can be a very

813
00:33:25,279 --> 00:33:27,519
resilient and robust botnet

814
00:33:27,519 --> 00:33:29,200
infrastructure

815
00:33:29,200 --> 00:33:32,559
these platforms all have very

816
00:33:32,559 --> 00:33:36,880
easily to use great documented apis

817
00:33:36,880 --> 00:33:40,799
and mainly that the costs

818
00:33:40,799 --> 00:33:43,519
for threat actors to have these mega

819
00:33:43,519 --> 00:33:48,240
resilient networks is decreasing

820
00:33:48,640 --> 00:33:50,840
what did we learn from this

821
00:33:50,840 --> 00:33:52,240
research um

822
00:33:52,240 --> 00:33:53,679
we've learned that

823
00:33:53,679 --> 00:33:56,000
the toolbox that is currently used for

824
00:33:56,000 --> 00:33:57,440
defenders

825
00:33:57,440 --> 00:33:59,360
must change

826
00:33:59,360 --> 00:34:03,039
that these classic defense mechanisms

827
00:34:03,039 --> 00:34:04,840
that are basically

828
00:34:04,840 --> 00:34:06,399
um

829
00:34:06,399 --> 00:34:10,079
based on iocs are failing to protect us

830
00:34:10,079 --> 00:34:11,918
from these types of malwares and

831
00:34:11,918 --> 00:34:14,639
infrastructures

832
00:34:14,639 --> 00:34:15,440
that

833
00:34:15,440 --> 00:34:18,719
the cost for the threat actor to have

834
00:34:18,719 --> 00:34:21,040
this kind of infrastructure is very

835
00:34:21,040 --> 00:34:23,359
cheap and getting decreasingly cheap but

836
00:34:23,359 --> 00:34:25,359
it's actually becoming increasingly

837
00:34:25,359 --> 00:34:28,639
expensive to us because it opens us up

838
00:34:28,639 --> 00:34:30,320
for new infections and as an

839
00:34:30,320 --> 00:34:33,040
organization being infected is very

840
00:34:33,040 --> 00:34:36,399
costly and also changing our difference

841
00:34:36,399 --> 00:34:38,399
mechanisms as organizations and

842
00:34:38,399 --> 00:34:41,839
replacing our tools is expensive

843
00:34:41,839 --> 00:34:44,560
and we've mainly realized that we would

844
00:34:44,560 --> 00:34:48,480
like to see a new breed of tools

845
00:34:48,480 --> 00:34:51,760
ones that are based on content for both

846
00:34:51,760 --> 00:34:55,679
requests and responses rather than

847
00:34:55,679 --> 00:34:58,480
addresses and uris and parameters and

848
00:34:58,480 --> 00:35:00,400
such things

849
00:35:00,400 --> 00:35:03,040
and that these tools must be platform

850
00:35:03,040 --> 00:35:04,880
agnostic because

851
00:35:04,880 --> 00:35:08,480
we've now shown discord and spotify and

852
00:35:08,480 --> 00:35:10,160
tomorrow someone will abuse something

853
00:35:10,160 --> 00:35:12,720
else and there are dozens and dozens of

854
00:35:12,720 --> 00:35:15,839
options and it is super costly and i

855
00:35:15,839 --> 00:35:17,680
think impossible

856
00:35:17,680 --> 00:35:20,400
to change your entire defenses every

857
00:35:20,400 --> 00:35:24,079
time someone comes up with something new

858
00:35:24,079 --> 00:35:27,040
now i know that this is not something

859
00:35:27,040 --> 00:35:29,920
we're currently seeing in the wild yet

860
00:35:29,920 --> 00:35:31,839
but i think that this is a great

861
00:35:31,839 --> 00:35:33,200
opportunity

862
00:35:33,200 --> 00:35:35,440
for us to prepare ahead

863
00:35:35,440 --> 00:35:38,560
and actually be one step ahead for

864
00:35:38,560 --> 00:35:41,680
threat actors rather than being reactive

865
00:35:41,680 --> 00:35:44,400
later

866
00:35:44,400 --> 00:35:47,760
this would be it from us

867
00:35:47,760 --> 00:35:50,560
and we're open to any questions later on

868
00:35:50,560 --> 00:35:53,799
thank you

869
00:35:58,400 --> 00:36:02,200
question from the audience

870
00:36:19,280 --> 00:36:22,079
so this is what i said earlier

871
00:36:22,079 --> 00:36:24,240
i actually created

872
00:36:24,240 --> 00:36:26,160
it's very easy to create a discord

873
00:36:26,160 --> 00:36:28,480
account

874
00:36:29,680 --> 00:36:31,599
no no no no

875
00:36:31,599 --> 00:36:34,240
no not for discord uh

876
00:36:34,240 --> 00:36:35,839
you don't need a phone number not even

877
00:36:35,839 --> 00:36:37,760
an email address

878
00:36:37,760 --> 00:36:39,359
actually

879
00:36:39,359 --> 00:36:42,720
the question is how do you how are we

880
00:36:42,720 --> 00:36:44,960
able to create this many discord

881
00:36:44,960 --> 00:36:46,240
accounts

882
00:36:46,240 --> 00:36:48,960
don't we need a special identifier for

883
00:36:48,960 --> 00:36:52,160
creating an account and the answer is no

884
00:36:52,160 --> 00:36:53,920
actually in discord they have this

885
00:36:53,920 --> 00:36:56,720
concept also of transient accounts uh

886
00:36:56,720 --> 00:36:58,640
for which you don't even need an email

887
00:36:58,640 --> 00:37:00,160
address

888
00:37:00,160 --> 00:37:02,160
but again because we're doing that at

889
00:37:02,160 --> 00:37:04,480
the back office we can create

890
00:37:04,480 --> 00:37:06,560
non-transient account those that are

891
00:37:06,560 --> 00:37:08,880
based on email but we can base them on

892
00:37:08,880 --> 00:37:11,520
an email server that we're using we can

893
00:37:11,520 --> 00:37:13,760
actually use manual labor cheap manual

894
00:37:13,760 --> 00:37:15,839
labor to create the new accounts in the

895
00:37:15,839 --> 00:37:17,520
back office

896
00:37:17,520 --> 00:37:18,960
okay

897
00:37:18,960 --> 00:37:22,160
so it's it's totally viable we tested it

898
00:37:22,160 --> 00:37:24,399
yeah

899
00:37:24,640 --> 00:37:27,960
other questions

900
00:37:56,800 --> 00:37:59,680
so so the question was

901
00:37:59,680 --> 00:38:02,160
why try to use

902
00:38:02,160 --> 00:38:05,520
something new when you already have a by

903
00:38:05,520 --> 00:38:08,480
design anonymous distributed botnet

904
00:38:08,480 --> 00:38:12,079
based on blockchain or whatever crypto

905
00:38:12,079 --> 00:38:14,880
mechanism we have

906
00:38:15,119 --> 00:38:16,839
this is

907
00:38:16,839 --> 00:38:20,160
not is true this is this is a good

908
00:38:20,160 --> 00:38:22,000
infrastructure to look at

909
00:38:22,000 --> 00:38:24,240
it is a good infrastructure to look at

910
00:38:24,240 --> 00:38:25,520
uh

911
00:38:25,520 --> 00:38:27,359
my personal opinion

912
00:38:27,359 --> 00:38:29,760
uh not a very

913
00:38:29,760 --> 00:38:31,520
efficient one

914
00:38:31,520 --> 00:38:32,400
okay

915
00:38:32,400 --> 00:38:34,560
just because the way the networking

916
00:38:34,560 --> 00:38:37,760
design it's not an efficient one

917
00:38:37,760 --> 00:38:39,200
certainly

918
00:38:39,200 --> 00:38:42,560
not a cost-effective one

919
00:38:43,760 --> 00:38:45,280
much much

920
00:38:45,280 --> 00:38:46,560
more expensive

921
00:38:46,560 --> 00:38:48,720
than the examples we've seen

922
00:38:48,720 --> 00:38:50,640
but but you've got a good point there

923
00:38:50,640 --> 00:38:52,720
you've got a really good point there

924
00:38:52,720 --> 00:38:55,680
uh i think main reason

925
00:38:55,680 --> 00:38:58,560
is it's it's not as cost effective as

926
00:38:58,560 --> 00:39:01,720
the alternatives

927
00:39:04,640 --> 00:39:07,640
questions

928
00:39:20,000 --> 00:39:21,920
so the question is why didn't we use

929
00:39:21,920 --> 00:39:23,440
slack

930
00:39:23,440 --> 00:39:25,520
uh

931
00:39:25,520 --> 00:39:29,520
just scoping things um

932
00:39:29,520 --> 00:39:31,680
write it down we'll do it

933
00:39:31,680 --> 00:39:32,400
uh

934
00:39:32,400 --> 00:39:33,680
yeah

935
00:39:33,680 --> 00:39:35,920
we again we picked on spotify i said

936
00:39:35,920 --> 00:39:38,079
because it's cool we picked on discord

937
00:39:38,079 --> 00:39:39,839
because it was very easy to create

938
00:39:39,839 --> 00:39:40,800
accounts

939
00:39:40,800 --> 00:39:41,839
uh

940
00:39:41,839 --> 00:39:44,079
slack i think has a very similar account

941
00:39:44,079 --> 00:39:45,839
mechanism to discord so it could be a

942
00:39:45,839 --> 00:39:49,480
candidate as well

943
00:40:08,319 --> 00:40:11,800
why do you need

944
00:40:22,480 --> 00:40:24,560
please repeat the question so the

945
00:40:24,560 --> 00:40:26,079
question is

946
00:40:26,079 --> 00:40:27,040
if

947
00:40:27,040 --> 00:40:30,160
dns is going to go over ssl

948
00:40:30,160 --> 00:40:32,000
and it's going to be encrypted end to

949
00:40:32,000 --> 00:40:32,960
end

950
00:40:32,960 --> 00:40:35,920
why do we need all these schemes

951
00:40:35,920 --> 00:40:38,480
and i think you could ask the question

952
00:40:38,480 --> 00:40:40,480
with respect to

953
00:40:40,480 --> 00:40:42,720
any other protocol that

954
00:40:42,720 --> 00:40:44,720
is ssl based and you could ask the

955
00:40:44,720 --> 00:40:45,599
question

956
00:40:45,599 --> 00:40:48,319
you know once it's ssl encrypted who

957
00:40:48,319 --> 00:40:50,839
would know that it's a

958
00:40:50,839 --> 00:40:53,359
botnet and

959
00:40:53,359 --> 00:40:55,920
the reality is that most organizations

960
00:40:55,920 --> 00:40:57,359
today

961
00:40:57,359 --> 00:40:59,760
terminate ssl

962
00:40:59,760 --> 00:41:02,920
at the gateway

963
00:41:14,160 --> 00:41:15,760
again

964
00:41:15,760 --> 00:41:18,160
unless an organization

965
00:41:18,160 --> 00:41:20,720
decides to override that

966
00:41:20,720 --> 00:41:23,119
okay and and pin their own which which

967
00:41:23,119 --> 00:41:25,200
again i i don't know i there are things

968
00:41:25,200 --> 00:41:26,079
i

969
00:41:26,079 --> 00:41:28,480
want to predict there i think i want i

970
00:41:28,480 --> 00:41:29,520
don't know

971
00:41:29,520 --> 00:41:33,119
uh reality is that as of today most

972
00:41:33,119 --> 00:41:36,400
organizations do open up ssl and and

973
00:41:36,400 --> 00:41:38,400
inspect the traffic

974
00:41:38,400 --> 00:41:39,359
again

975
00:41:39,359 --> 00:41:40,880
could well be

976
00:41:40,880 --> 00:41:43,440
that that

977
00:41:43,440 --> 00:41:45,440
dns over ssl

978
00:41:45,440 --> 00:41:48,560
while bringing a lot of security value

979
00:41:48,560 --> 00:41:51,040
but at the same time

980
00:41:51,040 --> 00:41:53,280
create a new set of threats

981
00:41:53,280 --> 00:41:54,880
so

982
00:41:54,880 --> 00:41:57,119
it's a complex world it's a complex

983
00:41:57,119 --> 00:41:59,440
world

984
00:42:00,319 --> 00:42:03,040
i think they are waiting for us to go

985
00:42:03,040 --> 00:42:04,560
off the stage

986
00:42:04,560 --> 00:42:06,800
so we'll be extremely happy to take more

987
00:42:06,800 --> 00:42:08,720
questions outside later

988
00:42:08,720 --> 00:42:11,959
thank you

989
00:42:12,370 --> 00:42:18,510
[Music]

990
00:42:18,510 --> 00:42:20,640
[Applause]

991
00:42:20,640 --> 00:42:22,720
you

