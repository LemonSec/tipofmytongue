1
00:00:01,620 --> 00:00:04,620
foreign

2
00:00:14,219 --> 00:00:15,719
one two

3
00:00:15,719 --> 00:00:17,100
let's go

4
00:00:17,100 --> 00:00:19,440
can they hear me

5
00:00:19,440 --> 00:00:21,840
can you hear me

6
00:00:21,840 --> 00:00:24,180
okay awesome

7
00:00:24,180 --> 00:00:25,859
all right

8
00:00:25,859 --> 00:00:28,800
hello everyone Welcome to our talk on

9
00:00:28,800 --> 00:00:31,140
web isolation

10
00:00:31,140 --> 00:00:34,680
um man it was such an inspiring keynote

11
00:00:34,680 --> 00:00:37,920
it was amazing like it will be very hard

12
00:00:37,920 --> 00:00:40,200
to follow you know we basically should

13
00:00:40,200 --> 00:00:42,120
sit down there yeah we should run away

14
00:00:42,120 --> 00:00:43,680
right

15
00:00:43,680 --> 00:00:45,239
all right so

16
00:00:45,239 --> 00:00:45,920
um

17
00:00:45,920 --> 00:00:50,039
I'm co-founder and CTO of J scrambler

18
00:00:50,039 --> 00:00:53,760
um I also helped started the new Oasis

19
00:00:53,760 --> 00:00:55,879
boa chapter

20
00:00:55,879 --> 00:00:59,520
basically you had our first meet up uh

21
00:00:59,520 --> 00:01:02,160
this week I hope the the other chapter

22
00:01:02,160 --> 00:01:04,680
leaders are somewhere in there

23
00:01:04,680 --> 00:01:07,200
uh but basically I've been working in

24
00:01:07,200 --> 00:01:11,780
security for as far as I can remember

25
00:01:16,200 --> 00:01:18,720
there is uh stands for virtualization I

26
00:01:18,720 --> 00:01:21,119
think uh

27
00:01:21,119 --> 00:01:24,000
no no response at all huh all right

28
00:01:24,000 --> 00:01:25,320
um I've probably been working in

29
00:01:25,320 --> 00:01:28,020
security almost as long as uh Pedro can

30
00:01:28,020 --> 00:01:30,200
remember

31
00:01:30,840 --> 00:01:34,380
okay so time for a little story better

32
00:01:34,380 --> 00:01:37,740
it's 10 a.m I'm barely a coffee in are

33
00:01:37,740 --> 00:01:39,960
we gonna do this yep we need to push

34
00:01:39,960 --> 00:01:42,420
through like people are waiting

35
00:01:42,420 --> 00:01:43,920
so

36
00:01:43,920 --> 00:01:46,259
um it's a story about a ship

37
00:01:46,259 --> 00:01:49,020
um some of you may recognize this ship

38
00:01:49,020 --> 00:01:51,720
it's the Titanic

39
00:01:51,720 --> 00:01:54,420
and it was built in Belfast in their

40
00:01:54,420 --> 00:01:56,939
famous Shipyard which I was lucky enough

41
00:01:56,939 --> 00:02:02,399
to visit during the absec absec EU 2017

42
00:02:02,399 --> 00:02:03,899
I guess

43
00:02:03,899 --> 00:02:06,240
but we want to talk about how it was

44
00:02:06,240 --> 00:02:08,880
built many people do not know this but

45
00:02:08,880 --> 00:02:10,619
when he was built it was bleeding edge

46
00:02:10,619 --> 00:02:12,480
in many ways

47
00:02:12,480 --> 00:02:15,480
so the bottom of the ship was splitting

48
00:02:15,480 --> 00:02:18,660
to 16 water type compartments so it was

49
00:02:18,660 --> 00:02:22,200
made such uh it could withstand some

50
00:02:22,200 --> 00:02:24,060
damage without compromising the whole

51
00:02:24,060 --> 00:02:25,620
ship

52
00:02:25,620 --> 00:02:29,160
it could I think up to two adjacent

53
00:02:29,160 --> 00:02:31,319
compartments could be completely flooded

54
00:02:31,319 --> 00:02:34,260
which back then it was like the worst

55
00:02:34,260 --> 00:02:36,720
situation they could imagine and that's

56
00:02:36,720 --> 00:02:38,580
mainly the reason why they deemed the

57
00:02:38,580 --> 00:02:41,879
the Titanic to be Unsinkable so they

58
00:02:41,879 --> 00:02:45,300
made a great fuss about it

59
00:02:45,300 --> 00:02:48,540
but depending on the exact location of

60
00:02:48,540 --> 00:02:50,819
the damage it could actually withstand

61
00:02:50,819 --> 00:02:53,280
up to four adjacent water type

62
00:02:53,280 --> 00:02:55,819
compartments completely flooded without

63
00:02:55,819 --> 00:02:59,220
sinking the ship

64
00:02:59,220 --> 00:03:02,480
so we all know how this story ended

65
00:03:02,480 --> 00:03:07,080
when the Titanic hit an iceberg the six

66
00:03:07,080 --> 00:03:09,720
forwards compartments were completed

67
00:03:09,720 --> 00:03:14,040
flooded and the Titanic sunk so even

68
00:03:14,040 --> 00:03:16,459
though the story didn't end well

69
00:03:16,459 --> 00:03:20,580
compartmentation was a great idea and it

70
00:03:20,580 --> 00:03:23,220
is still used in shape design to this

71
00:03:23,220 --> 00:03:24,180
day

72
00:03:24,180 --> 00:03:28,560
so the main idea is that if a section is

73
00:03:28,560 --> 00:03:31,200
damaged it doesn't compromise other

74
00:03:31,200 --> 00:03:33,360
parts of the system

75
00:03:33,360 --> 00:03:36,000
the problem with the Titanic is that its

76
00:03:36,000 --> 00:03:38,940
implementation was flawed but we'll tell

77
00:03:38,940 --> 00:03:42,120
you more about that later it's a this is

78
00:03:42,120 --> 00:03:45,299
a cliffhanger at this point yeah I guess

79
00:03:45,299 --> 00:03:46,680
so

80
00:03:46,680 --> 00:03:48,599
all right so

81
00:03:48,599 --> 00:03:49,739
um

82
00:03:49,739 --> 00:03:52,860
let's talk about web isolation then a

83
00:03:52,860 --> 00:03:54,599
little bit of History before we start

84
00:03:54,599 --> 00:03:57,299
okay so the first real attempt at web

85
00:03:57,299 --> 00:03:59,340
isolation was introduced by the same

86
00:03:59,340 --> 00:04:01,980
origin policy to restrict how two

87
00:04:01,980 --> 00:04:03,900
different Origins interact with each

88
00:04:03,900 --> 00:04:08,040
other but restrict how if actually we

89
00:04:08,040 --> 00:04:10,439
can embed a third party like a

90
00:04:10,439 --> 00:04:12,540
cross-origin script from the third party

91
00:04:12,540 --> 00:04:16,738
origin directly to a web page and this

92
00:04:16,738 --> 00:04:18,358
script will actually have the same level

93
00:04:18,358 --> 00:04:20,399
of privilege as any other script like

94
00:04:20,399 --> 00:04:23,880
same origin scripts so where is the same

95
00:04:23,880 --> 00:04:26,880
origin restricting anything here

96
00:04:26,880 --> 00:04:28,880
so it turns out that

97
00:04:28,880 --> 00:04:31,620
embedding is permitted what is

98
00:04:31,620 --> 00:04:35,460
restricted is writing to or reading raw

99
00:04:35,460 --> 00:04:38,400
data from cross-origin domains so the

100
00:04:38,400 --> 00:04:40,620
reality is that the same origin policy

101
00:04:40,620 --> 00:04:43,860
is complex and has lots of exceptions

102
00:04:43,860 --> 00:04:46,919
and to this day many developers don't

103
00:04:46,919 --> 00:04:48,960
fully understand how it works which is

104
00:04:48,960 --> 00:04:53,180
frequently a source of security issues

105
00:04:53,699 --> 00:04:57,180
two years later we they have given us

106
00:04:57,180 --> 00:04:59,699
like iframes okay with which we can

107
00:04:59,699 --> 00:05:02,880
isolate two documents or scripts running

108
00:05:02,880 --> 00:05:05,100
on the same web page

109
00:05:05,100 --> 00:05:08,639
but the problem is that people uh soon

110
00:05:08,639 --> 00:05:09,620
enough

111
00:05:09,620 --> 00:05:12,360
started to look for ways to have these

112
00:05:12,360 --> 00:05:14,220
two different Origins communicating with

113
00:05:14,220 --> 00:05:18,419
itself like coming coming with hacks and

114
00:05:18,419 --> 00:05:22,080
creative hacks basically and and we only

115
00:05:22,080 --> 00:05:25,160
threw the towel 13 years later

116
00:05:25,160 --> 00:05:28,080
and made it official by introducing the

117
00:05:28,080 --> 00:05:30,660
web messaging API with which two

118
00:05:30,660 --> 00:05:32,820
different Origins can communicate using

119
00:05:32,820 --> 00:05:35,820
a post message basically

120
00:05:35,820 --> 00:05:39,360
but not every problem went away so for

121
00:05:39,360 --> 00:05:41,900
instance iframe still had a lot of power

122
00:05:41,900 --> 00:05:45,539
an iframe document can navigate to the

123
00:05:45,539 --> 00:05:49,080
top window among other things so we had

124
00:05:49,080 --> 00:05:52,860
to solve that problem too and 13 years

125
00:05:52,860 --> 00:05:55,979
later we got high frame sandboxing with

126
00:05:55,979 --> 00:05:58,860
which we could restrict very heavily

127
00:05:58,860 --> 00:06:01,979
what an iframe is allowed to do

128
00:06:01,979 --> 00:06:04,440
the problem is that at the same time

129
00:06:04,440 --> 00:06:07,860
they have given us this configuration

130
00:06:07,860 --> 00:06:11,280
attributes that allow us to relax the

131
00:06:11,280 --> 00:06:15,120
iframed sandbox I frame so it's it's

132
00:06:15,120 --> 00:06:17,639
like they given like the power and then

133
00:06:17,639 --> 00:06:19,160
they take it away

134
00:06:19,160 --> 00:06:22,080
and people obviously they're going to

135
00:06:22,080 --> 00:06:26,419
use these things to relax the sandbox

136
00:06:26,639 --> 00:06:28,680
about the same time we got content

137
00:06:28,680 --> 00:06:31,139
security policy version one uh with

138
00:06:31,139 --> 00:06:34,380
which you can do domain-based allow

139
00:06:34,380 --> 00:06:36,000
listing

140
00:06:36,000 --> 00:06:38,100
um which was later found to be

141
00:06:38,100 --> 00:06:39,720
completely broken and you can read all

142
00:06:39,720 --> 00:06:41,940
about it in the paper that you can see

143
00:06:41,940 --> 00:06:43,380
on the right

144
00:06:43,380 --> 00:06:47,220
plus it's very hard to maintain so later

145
00:06:47,220 --> 00:06:50,039
on versions two and three they fixed

146
00:06:50,039 --> 00:06:52,560
these problems but they are not

147
00:06:52,560 --> 00:06:54,539
straightforward to set up

148
00:06:54,539 --> 00:06:56,100
so I would say that like the main

149
00:06:56,100 --> 00:07:00,060
critique that we have on CSP is that it

150
00:07:00,060 --> 00:07:03,479
is kind of binary like either you fully

151
00:07:03,479 --> 00:07:06,120
allow a script to run or you fully block

152
00:07:06,120 --> 00:07:10,740
it there's no middle ground so basically

153
00:07:10,740 --> 00:07:14,160
um if it was more more granular it could

154
00:07:14,160 --> 00:07:18,319
be more useful for sure

155
00:07:19,220 --> 00:07:22,319
and this basically concludes that the

156
00:07:22,319 --> 00:07:24,900
problem with this isolation mechanisms

157
00:07:24,900 --> 00:07:28,860
is that they are they lack granularity

158
00:07:28,860 --> 00:07:33,240
um they the the the boxes that of

159
00:07:33,240 --> 00:07:36,539
isolation that they provide are not are

160
00:07:36,539 --> 00:07:37,919
not configurable

161
00:07:37,919 --> 00:07:41,099
so you basically

162
00:07:41,099 --> 00:07:44,520
so there was never one isolation feature

163
00:07:44,520 --> 00:07:46,560
with which you could do like full

164
00:07:46,560 --> 00:07:49,560
isolation of a web app so it has been

165
00:07:49,560 --> 00:07:52,620
more about stitching together all of

166
00:07:52,620 --> 00:07:55,139
these isolation features and hopefully

167
00:07:55,139 --> 00:07:58,139
to cover as much ground as you want so

168
00:07:58,139 --> 00:08:01,199
this is both complex and error prone so

169
00:08:01,199 --> 00:08:04,620
inevitably you will leave holes or all

170
00:08:04,620 --> 00:08:07,259
blind spots for instance Jason p and

171
00:08:07,259 --> 00:08:10,319
cores are good examples so if they were

172
00:08:10,319 --> 00:08:13,139
configurable and granular maybe people

173
00:08:13,139 --> 00:08:14,660
wouldn't like

174
00:08:14,660 --> 00:08:18,720
had the need to try to find ways to

175
00:08:18,720 --> 00:08:21,960
relax these features or to poke holes on

176
00:08:21,960 --> 00:08:24,138
them

177
00:08:24,180 --> 00:08:26,819
and here you can see the timeline where

178
00:08:26,819 --> 00:08:29,879
these features were introduced you'll

179
00:08:29,879 --> 00:08:34,099
notice a huge gap between 97 and 2009

180
00:08:34,099 --> 00:08:36,659
which you really have to wonder what the

181
00:08:36,659 --> 00:08:37,979
browser people

182
00:08:37,979 --> 00:08:41,520
were doing back then we needed our

183
00:08:41,520 --> 00:08:44,880
pacemakers configured at a higher Pace I

184
00:08:44,880 --> 00:08:46,560
think

185
00:08:46,560 --> 00:08:48,779
all right so what Pedro has been talking

186
00:08:48,779 --> 00:08:52,380
about is a large variety of different

187
00:08:52,380 --> 00:08:55,080
features that browsers give us the thing

188
00:08:55,080 --> 00:08:57,420
that we are trying to get to is

189
00:08:57,420 --> 00:09:00,300
isolation what we are trying to build is

190
00:09:00,300 --> 00:09:02,580
the ability to isolate different scripts

191
00:09:02,580 --> 00:09:06,420
and their actions uh but what we have is

192
00:09:06,420 --> 00:09:08,820
a variety of security features that the

193
00:09:08,820 --> 00:09:10,940
browsers have implemented almost

194
00:09:10,940 --> 00:09:15,120
reactively as different attacks arose

195
00:09:15,120 --> 00:09:17,760
the question is can we use those

196
00:09:17,760 --> 00:09:20,940
features to put together a more solid a

197
00:09:20,940 --> 00:09:24,060
more systematic uh way of building

198
00:09:24,060 --> 00:09:25,560
isolation

199
00:09:25,560 --> 00:09:27,180
and I think that the answer is yes and

200
00:09:27,180 --> 00:09:28,980
you shouldn't just believe me the

201
00:09:28,980 --> 00:09:31,260
community you and I we all have been

202
00:09:31,260 --> 00:09:32,880
building

203
00:09:32,880 --> 00:09:36,180
um essentially a a mechanism for doing

204
00:09:36,180 --> 00:09:38,220
web isolation

205
00:09:38,220 --> 00:09:40,320
on top of the browser features that we

206
00:09:40,320 --> 00:09:42,180
have

207
00:09:42,180 --> 00:09:45,240
um I'm going to describe two different

208
00:09:45,240 --> 00:09:47,700
primary mechanisms that we use in order

209
00:09:47,700 --> 00:09:49,320
to

210
00:09:49,320 --> 00:09:51,660
um in order to implement uh web

211
00:09:51,660 --> 00:09:53,640
isolation and the two techniques that

212
00:09:53,640 --> 00:09:56,220
mostly we use are

213
00:09:56,220 --> 00:09:58,279
um

214
00:09:58,320 --> 00:10:00,560
are uh

215
00:10:00,560 --> 00:10:02,940
virtualization and transformation now

216
00:10:02,940 --> 00:10:04,380
there's three projects that I've

217
00:10:04,380 --> 00:10:06,959
randomly chosen to put on this graph but

218
00:10:06,959 --> 00:10:09,360
most mechanisms for web isolation end up

219
00:10:09,360 --> 00:10:11,640
falling somewhere on this graph on this

220
00:10:11,640 --> 00:10:14,160
graph you have virtualization where what

221
00:10:14,160 --> 00:10:17,420
you do is you virtualize you replace

222
00:10:17,420 --> 00:10:20,100
the versions that are provided by the

223
00:10:20,100 --> 00:10:22,380
browser with our own attenuated version

224
00:10:22,380 --> 00:10:25,200
if you see something that is dangerous

225
00:10:25,200 --> 00:10:26,820
you replace it with something that is

226
00:10:26,820 --> 00:10:28,980
less dangerous or easier to control and

227
00:10:28,980 --> 00:10:30,420
then you have transformation where

228
00:10:30,420 --> 00:10:32,519
you're simply changing the source code

229
00:10:32,519 --> 00:10:34,440
so that you remove the bad things from

230
00:10:34,440 --> 00:10:37,860
your application so we have a way off on

231
00:10:37,860 --> 00:10:39,899
the on the top right we have a project

232
00:10:39,899 --> 00:10:42,180
called Google kaha which was an open

233
00:10:42,180 --> 00:10:44,399
source sandboxing project with which I

234
00:10:44,399 --> 00:10:46,920
was intimately involved which uses both

235
00:10:46,920 --> 00:10:49,079
a combination of virtualization and

236
00:10:49,079 --> 00:10:50,640
transformation to achieve this

237
00:10:50,640 --> 00:10:52,800
sandboxing there was a another open

238
00:10:52,800 --> 00:10:55,560
source project called jsrag which uses

239
00:10:55,560 --> 00:10:58,320
mostly transformation in order to

240
00:10:58,320 --> 00:11:00,060
achieve the same kind of effect and then

241
00:11:00,060 --> 00:11:03,600
we have A J Scrambler with which Pedro

242
00:11:03,600 --> 00:11:06,000
is intimately familiar which uses more

243
00:11:06,000 --> 00:11:08,160
virtualization but essentially what we

244
00:11:08,160 --> 00:11:10,440
have in our we have two tricks in our

245
00:11:10,440 --> 00:11:14,040
toolbox to use to build

246
00:11:14,040 --> 00:11:16,440
um to build isolation which is what we

247
00:11:16,440 --> 00:11:18,000
are trying to get to now I'm going to

248
00:11:18,000 --> 00:11:19,860
talk first about virtualization what is

249
00:11:19,860 --> 00:11:21,600
virtualization well I call it

250
00:11:21,600 --> 00:11:23,640
virtualization but we all already know

251
00:11:23,640 --> 00:11:26,760
this as polyfills right uh what is a

252
00:11:26,760 --> 00:11:28,740
polyfill you have features that are

253
00:11:28,740 --> 00:11:31,019
provided by the browser

254
00:11:31,019 --> 00:11:33,000
or sometimes you don't have a feature

255
00:11:33,000 --> 00:11:34,740
that is provided by the browser you

256
00:11:34,740 --> 00:11:36,600
implement it using other mechanisms that

257
00:11:36,600 --> 00:11:37,860
are available

258
00:11:37,860 --> 00:11:40,079
when you use virtualization for Security

259
00:11:40,079 --> 00:11:43,079
even in cases where the browser provides

260
00:11:43,079 --> 00:11:45,180
some particular capability you end up

261
00:11:45,180 --> 00:11:46,920
replacing it so for example if you have

262
00:11:46,920 --> 00:11:48,839
date this is the real date object

263
00:11:48,839 --> 00:11:50,700
provided by the browser you might

264
00:11:50,700 --> 00:11:53,820
provide a virtualized version well date

265
00:11:53,820 --> 00:11:56,640
unless you care about timing attacks you

266
00:11:56,640 --> 00:11:58,560
can just provide the original date

267
00:11:58,560 --> 00:12:01,519
object directly to to third-party code

268
00:12:01,519 --> 00:12:06,120
another case we saw in the in the

269
00:12:06,120 --> 00:12:09,180
keynote uh a browser I'm going to name

270
00:12:09,180 --> 00:12:10,260
the browser am I going to name the

271
00:12:10,260 --> 00:12:13,560
browser ie6 which uses ActiveX ActiveX

272
00:12:13,560 --> 00:12:16,260
was overly powerful if if a third party

273
00:12:16,260 --> 00:12:18,420
had access to ActiveX there was a huge

274
00:12:18,420 --> 00:12:19,680
number of things that they were able to

275
00:12:19,680 --> 00:12:22,100
do and maybe you don't want to provide

276
00:12:22,100 --> 00:12:25,200
access uh to to

277
00:12:25,200 --> 00:12:28,079
um to ActiveX so you you never provide

278
00:12:28,079 --> 00:12:30,540
this uh to third-party code but you can

279
00:12:30,540 --> 00:12:31,800
also

280
00:12:31,800 --> 00:12:35,279
an innovation where the ie6 also did not

281
00:12:35,279 --> 00:12:38,579
provide a compatible xhr object but

282
00:12:38,579 --> 00:12:41,579
ActiveX was able to implement

283
00:12:41,579 --> 00:12:45,480
um was able to implement uh xhr and so

284
00:12:45,480 --> 00:12:48,060
what you can do is Implement a version

285
00:12:48,060 --> 00:12:51,060
of xhr on top of ActiveX and then via

286
00:12:51,060 --> 00:12:53,100
the power of virtualization you hand

287
00:12:53,100 --> 00:12:57,060
only a version of xhr to uh to

288
00:12:57,060 --> 00:12:58,680
third-party code and you can even

289
00:12:58,680 --> 00:13:01,560
provide a version of xhr that only

290
00:13:01,560 --> 00:13:03,540
connects to particular proxies or

291
00:13:03,540 --> 00:13:05,579
connects to only particular third-party

292
00:13:05,579 --> 00:13:07,680
sites and therefore you're sort of

293
00:13:07,680 --> 00:13:10,440
controlling exactly how much power this

294
00:13:10,440 --> 00:13:12,120
third-party code gets

295
00:13:12,120 --> 00:13:14,940
similarly you can virtualize the Dom you

296
00:13:14,940 --> 00:13:16,800
can virtualize access to location you

297
00:13:16,800 --> 00:13:19,620
can virtualize access to Inner HTML Etc

298
00:13:19,620 --> 00:13:23,279
and you build up this way of controlling

299
00:13:23,279 --> 00:13:25,860
not whether a script executes or not but

300
00:13:25,860 --> 00:13:28,440
how much power the script has when it is

301
00:13:28,440 --> 00:13:30,180
executing so that's virtualization for

302
00:13:30,180 --> 00:13:31,380
control

303
00:13:31,380 --> 00:13:33,839
there is another version where we use

304
00:13:33,839 --> 00:13:37,560
transformation now this is easily my

305
00:13:37,560 --> 00:13:40,380
most favorite slide Pedro gets a little

306
00:13:40,380 --> 00:13:43,320
uh nervous when I get very excited about

307
00:13:43,320 --> 00:13:46,079
this but essentially the only this is

308
00:13:46,079 --> 00:13:49,399
the mechanism by which almost every

309
00:13:49,399 --> 00:13:53,160
language based sandboxing control works

310
00:13:53,160 --> 00:13:56,579
on the on the left hand side left hand

311
00:13:56,579 --> 00:13:59,220
side my right hand side what you have is

312
00:13:59,220 --> 00:14:00,660
the variety of functions that you're

313
00:14:00,660 --> 00:14:03,180
going to call so you have alert which is

314
00:14:03,180 --> 00:14:06,060
like a like a system call for for the

315
00:14:06,060 --> 00:14:07,500
browser right these are functions that

316
00:14:07,500 --> 00:14:11,100
are provided externally you have strings

317
00:14:11,100 --> 00:14:13,260
which are types you have function types

318
00:14:13,260 --> 00:14:15,300
and array types you have a variety of

319
00:14:15,300 --> 00:14:17,279
primitive types which are provided by

320
00:14:17,279 --> 00:14:20,160
the browser what you can do is transform

321
00:14:20,160 --> 00:14:22,500
this and rewrite it so that each one of

322
00:14:22,500 --> 00:14:26,399
those functions types and primitive

323
00:14:26,399 --> 00:14:29,000
objects are instead

324
00:14:29,000 --> 00:14:31,740
accessed only as a result of an argument

325
00:14:31,740 --> 00:14:33,300
to a function so this is very simple

326
00:14:33,300 --> 00:14:35,519
kind of transformation but if you think

327
00:14:35,519 --> 00:14:37,980
about this this means that the caller of

328
00:14:37,980 --> 00:14:40,920
this function controls everything that

329
00:14:40,920 --> 00:14:43,019
is happening inside this function every

330
00:14:43,019 --> 00:14:47,339
call goes by a uh is controlled by the

331
00:14:47,339 --> 00:14:50,760
column and this basic primitive allows

332
00:14:50,760 --> 00:14:54,000
you to essentially sandbox large pieces

333
00:14:54,000 --> 00:14:55,560
of JavaScript now I know those of you

334
00:14:55,560 --> 00:14:57,720
that are familiar with JavaScript I like

335
00:14:57,720 --> 00:15:00,720
just as look there's all this eval that

336
00:15:00,720 --> 00:15:02,160
allows you to break out of the sandbox

337
00:15:02,160 --> 00:15:04,380
and there's ways of Walking Up The

338
00:15:04,380 --> 00:15:05,820
Constructor chain there's ways of

339
00:15:05,820 --> 00:15:07,139
walking up the Prototype train and

340
00:15:07,139 --> 00:15:09,480
you're absolutely right but the basic

341
00:15:09,480 --> 00:15:11,880
idea is this one and this is really I

342
00:15:11,880 --> 00:15:14,660
mean it's a basic mechanism of

343
00:15:14,660 --> 00:15:17,220
sandboxing and it fits on a on a single

344
00:15:17,220 --> 00:15:18,959
slide and I think that that's one of the

345
00:15:18,959 --> 00:15:21,540
reasons why it's power and simplicity

346
00:15:21,540 --> 00:15:24,060
together mean it is the basic building

347
00:15:24,060 --> 00:15:25,440
block of what we're going to end up

348
00:15:25,440 --> 00:15:27,540
building you see how he gets excited

349
00:15:27,540 --> 00:15:30,480
about this too if you you can come talk

350
00:15:30,480 --> 00:15:31,860
to me after this I can talk about this

351
00:15:31,860 --> 00:15:33,000
for ours

352
00:15:33,000 --> 00:15:34,560
um can we do this for HTML and the

353
00:15:34,560 --> 00:15:36,720
answer is obviously yes it's actually

354
00:15:36,720 --> 00:15:39,300
even simpler for HTML because HTML is a

355
00:15:39,300 --> 00:15:41,459
much simpler language and so you know

356
00:15:41,459 --> 00:15:44,459
you can do a a a series of rewrites for

357
00:15:44,459 --> 00:15:48,540
HTML uh on the um on on this side you

358
00:15:48,540 --> 00:15:50,880
have styles and for CSS it's even easier

359
00:15:50,880 --> 00:15:54,480
if you prefix every CSS rule with let's

360
00:15:54,480 --> 00:15:57,720
say in this case uh dot gadget123 that

361
00:15:57,720 --> 00:16:00,420
means that the scope of what is affected

362
00:16:00,420 --> 00:16:03,600
is now limited to only uh the children

363
00:16:03,600 --> 00:16:07,139
of uh of an element that has

364
00:16:07,139 --> 00:16:09,060
um that has that particular class

365
00:16:09,060 --> 00:16:11,699
overall what is happening here we're

366
00:16:11,699 --> 00:16:14,220
turning we're not allowing or blocking

367
00:16:14,220 --> 00:16:16,560
HTML we're not blocking or allowing CSS

368
00:16:16,560 --> 00:16:17,820
we're not blocking or allowing

369
00:16:17,820 --> 00:16:19,579
JavaScript what we're doing is

370
00:16:19,579 --> 00:16:22,740
controlling how much access any

371
00:16:22,740 --> 00:16:24,779
particular part of the code has access

372
00:16:24,779 --> 00:16:27,060
to

373
00:16:27,060 --> 00:16:28,740
um and this is a very powerful General

374
00:16:28,740 --> 00:16:30,720
technique right you can you don't just

375
00:16:30,720 --> 00:16:33,420
need it for uh visibility you can also

376
00:16:33,420 --> 00:16:35,579
use it I mean you don't just use it for

377
00:16:35,579 --> 00:16:37,139
control you can also use it for

378
00:16:37,139 --> 00:16:39,959
visibility you can transform each one of

379
00:16:39,959 --> 00:16:42,300
these functions such that all of the

380
00:16:42,300 --> 00:16:45,000
access goes via one function that you

381
00:16:45,000 --> 00:16:46,440
control and it can do a variety of

382
00:16:46,440 --> 00:16:48,899
things in yesterday's talk I think JB

383
00:16:48,899 --> 00:16:51,000
talked about uh

384
00:16:51,000 --> 00:16:54,180
um how valuable observability is when

385
00:16:54,180 --> 00:16:56,100
you're doing pen testing observability

386
00:16:56,100 --> 00:16:58,560
or visibility as we end up calling it is

387
00:16:58,560 --> 00:17:00,440
very critical because sooner or later

388
00:17:00,440 --> 00:17:04,199
functions fail now you know this room is

389
00:17:04,199 --> 00:17:07,380
filled with clever hackers and sooner or

390
00:17:07,380 --> 00:17:09,900
later the foolish people who are

391
00:17:09,900 --> 00:17:11,280
standing on stage who are building

392
00:17:11,280 --> 00:17:14,939
sandboxes our code and our sandboxes end

393
00:17:14,939 --> 00:17:17,400
up failing what is critical is not to

394
00:17:17,400 --> 00:17:20,280
build sandboxes that remain absolutely

395
00:17:20,280 --> 00:17:23,579
robust but build sandboxes such that

396
00:17:23,579 --> 00:17:25,619
when the sandboxes fail you get

397
00:17:25,619 --> 00:17:27,959
visibility you can to find out that the

398
00:17:27,959 --> 00:17:30,000
attackers are in and so that you can end

399
00:17:30,000 --> 00:17:31,799
up responding and virtualization ends up

400
00:17:31,799 --> 00:17:35,418
giving you the same kind of control

401
00:17:35,760 --> 00:17:37,919
um in general what is happening is

402
00:17:37,919 --> 00:17:40,679
there's some general design principles

403
00:17:40,679 --> 00:17:42,240
that we are using in order to build

404
00:17:42,240 --> 00:17:44,580
these actually in yesterday's keynote

405
00:17:44,580 --> 00:17:47,940
there was a a a slide that Alyssa

406
00:17:47,940 --> 00:17:50,640
presented which as you as I go through

407
00:17:50,640 --> 00:17:52,700
the the three principles

408
00:17:52,700 --> 00:17:55,380
mirror the the the principles that she

409
00:17:55,380 --> 00:17:57,299
was talking about as well Prince so

410
00:17:57,299 --> 00:17:58,380
there's going to be three principles

411
00:17:58,380 --> 00:18:03,000
it's visibility ease of use and control

412
00:18:03,000 --> 00:18:04,620
um

413
00:18:04,620 --> 00:18:06,480
compartment size let's say we are

414
00:18:06,480 --> 00:18:08,760
building a ship one of the problems in

415
00:18:08,760 --> 00:18:12,720
the Titanic was how small uh the the

416
00:18:12,720 --> 00:18:15,419
unit of isolation is if you think about

417
00:18:15,419 --> 00:18:17,640
all of the controls that we have

418
00:18:17,640 --> 00:18:19,500
generally built

419
00:18:19,500 --> 00:18:20,340
um

420
00:18:20,340 --> 00:18:22,740
the controls are either you know the

421
00:18:22,740 --> 00:18:25,559
size of the host or the size of a domain

422
00:18:25,559 --> 00:18:28,559
or the size of a particular path in the

423
00:18:28,559 --> 00:18:31,200
domain or the size of a particular file

424
00:18:31,200 --> 00:18:33,840
or the size of a particular function or

425
00:18:33,840 --> 00:18:35,580
in this in the case of J Scrambler

426
00:18:35,580 --> 00:18:38,340
specific actions right and and you had

427
00:18:38,340 --> 00:18:40,799
the other example of CSP like you either

428
00:18:40,799 --> 00:18:43,080
allowed the whole script or you don't

429
00:18:43,080 --> 00:18:45,900
you block it at all like you you cannot

430
00:18:45,900 --> 00:18:49,679
have a smaller box for that exactly so

431
00:18:49,679 --> 00:18:52,020
the the smaller the size of the

432
00:18:52,020 --> 00:18:55,140
compartment the more control you have

433
00:18:55,140 --> 00:18:57,780
over exactly how much functionality you

434
00:18:57,780 --> 00:19:00,240
are allowing now there is a counter to

435
00:19:00,240 --> 00:19:02,340
this which is the smaller the size of

436
00:19:02,340 --> 00:19:04,200
each one of these compartments the

437
00:19:04,200 --> 00:19:06,059
larger the number of

438
00:19:06,059 --> 00:19:08,400
um the larger the complexity of the

439
00:19:08,400 --> 00:19:10,380
configuration is going to be but we can

440
00:19:10,380 --> 00:19:12,360
counter that by building additional

441
00:19:12,360 --> 00:19:14,340
tools that make it easier to configure

442
00:19:14,340 --> 00:19:18,419
these fine-grained compartments

443
00:19:18,419 --> 00:19:21,000
the second thing if we go back to the

444
00:19:21,000 --> 00:19:22,679
story of the Titanic that we need to

445
00:19:22,679 --> 00:19:25,380
keep in our mind is the strength of the

446
00:19:25,380 --> 00:19:28,080
isolation material now I'm stretching

447
00:19:28,080 --> 00:19:30,780
the analogy a little bit but essentially

448
00:19:30,780 --> 00:19:32,580
um when we build mechanisms for

449
00:19:32,580 --> 00:19:36,059
isolation like iframes like csb

450
00:19:36,059 --> 00:19:39,240
um if they are cut in the wrong

451
00:19:39,240 --> 00:19:41,280
direction we end up having to drill

452
00:19:41,280 --> 00:19:43,140
holes through them and like any

453
00:19:43,140 --> 00:19:45,299
structure if you start out with a solid

454
00:19:45,299 --> 00:19:47,220
structure but you continuously drill

455
00:19:47,220 --> 00:19:49,260
holes you start out with a ship but you

456
00:19:49,260 --> 00:19:50,480
build little

457
00:19:50,480 --> 00:19:53,220
rooms into them so that they are able to

458
00:19:53,220 --> 00:19:55,740
do what the functionality you require is

459
00:19:55,740 --> 00:19:57,900
then you end up weakening the structure

460
00:19:57,900 --> 00:20:00,960
in order to build the in order to

461
00:20:00,960 --> 00:20:03,059
maintain the strength of the isolation

462
00:20:03,059 --> 00:20:04,740
material in order to maintain the

463
00:20:04,740 --> 00:20:07,740
strength of the isolation mechanisms

464
00:20:07,740 --> 00:20:10,919
that we have we have to align with how

465
00:20:10,919 --> 00:20:13,020
developers end up using the software

466
00:20:13,020 --> 00:20:14,940
most of the mechanisms that browsers

467
00:20:14,940 --> 00:20:18,539
provide were built for web 1.0 which is

468
00:20:18,539 --> 00:20:20,160
a very different way in which

469
00:20:20,160 --> 00:20:22,440
applications were being built then the

470
00:20:22,440 --> 00:20:24,179
way in which we build applications today

471
00:20:24,179 --> 00:20:26,280
and sooner or later developers come up

472
00:20:26,280 --> 00:20:28,740
with ways of working around the the

473
00:20:28,740 --> 00:20:30,600
isolation mechanisms that we provide and

474
00:20:30,600 --> 00:20:32,520
the third one is of course visibility

475
00:20:32,520 --> 00:20:35,360
and user friendliness this is very very

476
00:20:35,360 --> 00:20:37,740
this is is a point that I was making

477
00:20:37,740 --> 00:20:40,140
earlier what you don't know may end up

478
00:20:40,140 --> 00:20:41,880
really hurting you you need to

479
00:20:41,880 --> 00:20:44,600
understand the nature of the attacks

480
00:20:44,600 --> 00:20:47,700
in order to understand exactly how

481
00:20:47,700 --> 00:20:50,720
attackers and your users are responding

482
00:20:50,720 --> 00:20:54,179
to to to to the mechanisms that you're

483
00:20:54,179 --> 00:20:56,760
building I end up sometimes saying to

484
00:20:56,760 --> 00:21:00,720
people developers are people too which

485
00:21:00,720 --> 00:21:03,960
is sometimes not obvious to us uh the

486
00:21:03,960 --> 00:21:05,760
user friendliness of the tools that we

487
00:21:05,760 --> 00:21:09,480
build is a very critical part of uh

488
00:21:09,480 --> 00:21:11,880
enticing developers to use our tools and

489
00:21:11,880 --> 00:21:15,080
to use the tools in a way that

490
00:21:15,080 --> 00:21:17,340
enhances the security of the application

491
00:21:17,340 --> 00:21:19,140
rather than being something that they

492
00:21:19,140 --> 00:21:21,840
need to work against

493
00:21:21,840 --> 00:21:25,260
and we are back to our Cliffhanger so

494
00:21:25,260 --> 00:21:28,380
basically we told you that the Titanic

495
00:21:28,380 --> 00:21:30,299
implementation was flawed and this is

496
00:21:30,299 --> 00:21:32,340
kind of a summary of some of the things

497
00:21:32,340 --> 00:21:35,520
we already said like for the Titanic the

498
00:21:35,520 --> 00:21:37,860
compartments were too big okay so they

499
00:21:37,860 --> 00:21:40,860
would need to have smaller compartments

500
00:21:40,860 --> 00:21:43,740
in order to be able to withstand more

501
00:21:43,740 --> 00:21:46,760
compartments being completely flooded

502
00:21:46,760 --> 00:21:49,860
because when you flood the compartment

503
00:21:49,860 --> 00:21:52,860
you flood the whole compartment if the

504
00:21:52,860 --> 00:21:55,620
hit is more precise maybe the the size

505
00:21:55,620 --> 00:21:57,780
of the thing that you're flooding is

506
00:21:57,780 --> 00:22:00,059
smaller and that makes you more

507
00:22:00,059 --> 00:22:03,179
resilient the the materials so the

508
00:22:03,179 --> 00:22:05,820
obviously it wasn't uh strong enough

509
00:22:05,820 --> 00:22:09,539
because like you hit an iceberg so it

510
00:22:09,539 --> 00:22:12,900
would if like if it was uh um made of

511
00:22:12,900 --> 00:22:15,000
like stronger materials maybe could

512
00:22:15,000 --> 00:22:17,880
withstand the hit uh the damage model

513
00:22:17,880 --> 00:22:20,580
had the wrong assumptions uh or in other

514
00:22:20,580 --> 00:22:23,100
words basically the threat model was

515
00:22:23,100 --> 00:22:26,880
wrong was was flawed and last but not

516
00:22:26,880 --> 00:22:29,039
least the lack of visibility because of

517
00:22:29,039 --> 00:22:32,100
obvious reasons if someone had spotted

518
00:22:32,100 --> 00:22:34,860
the iceberg in time they would not

519
00:22:34,860 --> 00:22:37,919
collide with the iceberg so uh

520
00:22:37,919 --> 00:22:40,980
visibility and analytics which are an

521
00:22:40,980 --> 00:22:44,340
interpretation of what you're seeing are

522
00:22:44,340 --> 00:22:47,640
very critical for avoiding these set of

523
00:22:47,640 --> 00:22:49,559
problems

524
00:22:49,559 --> 00:22:53,340
so now time for some demos

525
00:22:53,340 --> 00:22:55,200
and before and to understand the

526
00:22:55,200 --> 00:22:56,820
challenges we first need to understand

527
00:22:56,820 --> 00:23:00,120
what we have been doing wrong so as as

528
00:23:00,120 --> 00:23:02,700
for like browser security isolation

529
00:23:02,700 --> 00:23:05,100
native security isolation features

530
00:23:05,100 --> 00:23:09,720
things have moved slow and erratically

531
00:23:09,720 --> 00:23:11,580
um like I said

532
00:23:11,580 --> 00:23:14,460
we didn't have a feature one feature

533
00:23:14,460 --> 00:23:17,039
that could provide the type of isolation

534
00:23:17,039 --> 00:23:20,220
and user friendliness and like uh

535
00:23:20,220 --> 00:23:22,020
flexible enough

536
00:23:22,020 --> 00:23:24,780
um it has been mostly about

537
00:23:24,780 --> 00:23:27,539
stitching together all of these features

538
00:23:27,539 --> 00:23:30,120
that we talked about as for other

539
00:23:30,120 --> 00:23:31,860
Solutions beyond the browser native

540
00:23:31,860 --> 00:23:33,679
Solutions

541
00:23:33,679 --> 00:23:36,120
there are very few Solutions out there

542
00:23:36,120 --> 00:23:39,480
like Google kaha is a good example of a

543
00:23:39,480 --> 00:23:42,299
analystic web isolation solution but

544
00:23:42,299 --> 00:23:46,320
sadly it was discontinued which Jazz if

545
00:23:46,320 --> 00:23:48,720
you don't know he was the lead of that

546
00:23:48,720 --> 00:23:52,400
project back then at Google

547
00:23:52,620 --> 00:23:55,280
um apart from kaha

548
00:23:55,280 --> 00:23:58,200
there's web page Integrity the the one

549
00:23:58,200 --> 00:24:02,059
the the project that we are doing

550
00:24:05,280 --> 00:24:06,600
ah

551
00:24:06,600 --> 00:24:08,640
so what does the next 20 years look like

552
00:24:08,640 --> 00:24:11,520
given where we have come from what what

553
00:24:11,520 --> 00:24:16,080
we need is a single holistic client-side

554
00:24:16,080 --> 00:24:18,480
web solution that covers all of these

555
00:24:18,480 --> 00:24:20,820
different angles uh that we've talked

556
00:24:20,820 --> 00:24:23,280
about what we need is a sort of a broad

557
00:24:23,280 --> 00:24:25,679
coherent plan

558
00:24:25,679 --> 00:24:27,539
um and I think that those that plan will

559
00:24:27,539 --> 00:24:29,520
come together Guided by these three

560
00:24:29,520 --> 00:24:31,220
principles we've been talking about

561
00:24:31,220 --> 00:24:34,260
limiting the size and granularity of the

562
00:24:34,260 --> 00:24:35,360
compartments that we're building

563
00:24:35,360 --> 00:24:37,919
providing making sure that each one of

564
00:24:37,919 --> 00:24:40,559
these granular boundaries that we build

565
00:24:40,559 --> 00:24:43,140
are solid and reliable and then

566
00:24:43,140 --> 00:24:44,880
providing visibility and user

567
00:24:44,880 --> 00:24:46,740
friendliness so on the one side making

568
00:24:46,740 --> 00:24:49,559
sure the developers find these apis easy

569
00:24:49,559 --> 00:24:54,120
to use but also have these apis provide

570
00:24:54,120 --> 00:24:56,880
feedback so that as they are being used

571
00:24:56,880 --> 00:24:59,400
not only do we know whether developers

572
00:24:59,400 --> 00:25:01,500
are using them well but we also know

573
00:25:01,500 --> 00:25:06,539
when attackers are bypassing them when

574
00:25:06,539 --> 00:25:07,980
as we were making this presentation

575
00:25:07,980 --> 00:25:11,280
Pedro and I joked about uh how do you

576
00:25:11,280 --> 00:25:13,140
make a a ship that is actually

577
00:25:13,140 --> 00:25:16,200
Unsinkable uh and uh I think Pedro said

578
00:25:16,200 --> 00:25:18,419
you give it wings and you can take away

579
00:25:18,419 --> 00:25:21,659
from that what you want uh I I wanted to

580
00:25:21,659 --> 00:25:25,080
pull an example of uh of a feature that

581
00:25:25,080 --> 00:25:27,120
was introduced into browsers that has

582
00:25:27,120 --> 00:25:28,799
this particular characteristic so that

583
00:25:28,799 --> 00:25:30,480
you don't walk away going oh this is all

584
00:25:30,480 --> 00:25:33,419
doomed I have seen no progress uh Shadow

585
00:25:33,419 --> 00:25:36,179
Realms was uh formalized and has made

586
00:25:36,179 --> 00:25:38,640
quite a bit of progress in being shipped

587
00:25:38,640 --> 00:25:41,820
out to to browsers this is an example of

588
00:25:41,820 --> 00:25:44,520
something that I think uh demonstrates

589
00:25:44,520 --> 00:25:47,220
the design features uh what a shadow

590
00:25:47,220 --> 00:25:49,799
realm allows you to do is to create a

591
00:25:49,799 --> 00:25:52,320
separate Enclave that you were able to

592
00:25:52,320 --> 00:25:55,980
interact with uh but uh that you're able

593
00:25:55,980 --> 00:25:58,260
to insert third party code into and then

594
00:25:58,260 --> 00:26:00,720
it executes independently of the rest of

595
00:26:00,720 --> 00:26:03,179
your code it has

596
00:26:03,179 --> 00:26:04,880
um you know it's a very tiny little

597
00:26:04,880 --> 00:26:07,620
isolation boundary it has strong

598
00:26:07,620 --> 00:26:09,900
foundations the user friendliness is an

599
00:26:09,900 --> 00:26:11,400
interesting question but it operates

600
00:26:11,400 --> 00:26:14,039
mostly like an eval but the context is

601
00:26:14,039 --> 00:26:16,980
controlled by the caller that means that

602
00:26:16,980 --> 00:26:19,020
uh developers are going to be able to

603
00:26:19,020 --> 00:26:21,659
much more easily roll out the use of

604
00:26:21,659 --> 00:26:23,279
things like Shadow Realms and there are

605
00:26:23,279 --> 00:26:24,840
other features like that coming into

606
00:26:24,840 --> 00:26:26,700
browsers

607
00:26:26,700 --> 00:26:30,539
uh like in the same way the WPI provides

608
00:26:30,539 --> 00:26:32,760
all of these I think that you know other

609
00:26:32,760 --> 00:26:34,440
browser features that are going to end

610
00:26:34,440 --> 00:26:37,919
up having these kinds of characteristics

611
00:26:37,919 --> 00:26:38,760
um

612
00:26:38,760 --> 00:26:41,700
how far along are we well

613
00:26:41,700 --> 00:26:44,820
large complex features like web

614
00:26:44,820 --> 00:26:47,880
isolation take a long time to build and

615
00:26:47,880 --> 00:26:51,059
they take a long time to bake as well

616
00:26:51,059 --> 00:26:52,620
because what one of the things that we

617
00:26:52,620 --> 00:26:54,900
want to be able to do is put features

618
00:26:54,900 --> 00:26:57,240
into browsers that remain solid they

619
00:26:57,240 --> 00:26:59,820
remain usable so that the next

620
00:26:59,820 --> 00:27:03,480
generation of web applications are not

621
00:27:03,480 --> 00:27:06,059
merely secure but also functional and

622
00:27:06,059 --> 00:27:09,559
usable and it

623
00:27:09,559 --> 00:27:11,820
characteristics like that take time to

624
00:27:11,820 --> 00:27:13,080
bake

625
00:27:13,080 --> 00:27:17,418
that's all we have for today thank you

626
00:27:23,039 --> 00:27:25,860
we can take questions and at least for

627
00:27:25,860 --> 00:27:27,480
the foreseeable future unless Twitter

628
00:27:27,480 --> 00:27:28,980
goes crazier

629
00:27:28,980 --> 00:27:32,220
we're also contactable

630
00:27:32,220 --> 00:27:33,900
so thank you Jazz and Pedro for any

631
00:27:33,900 --> 00:27:36,140
questions

632
00:27:43,140 --> 00:27:48,600
a few more seconds three two one zero

633
00:27:49,440 --> 00:27:51,480
okay thank you very much guys thank you

634
00:27:51,480 --> 00:27:54,260
thank you

635
00:28:00,659 --> 00:28:03,799
yeah I forgot

636
00:28:06,480 --> 00:28:09,260
actually done yeah

637
00:28:15,800 --> 00:28:19,379
[Music]

