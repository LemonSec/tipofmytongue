1
00:00:07,010 --> 00:00:11,759
feeling so I'm gonna do this<font color="#E5E5E5"> talk in</font>

2
00:00:10,290 --> 00:00:13,229
English because I can't really<font color="#E5E5E5"> talk</font>

3
00:00:11,759 --> 00:00:15,089
about technology<font color="#E5E5E5"> in Portuguese it's</font>

4
00:00:13,230 --> 00:00:18,060
really<font color="#E5E5E5"> hard</font><font color="#CCCCCC"> to say i'll be two words</font>

5
00:00:15,089 --> 00:00:19,740
with some kind of buzz word so let<font color="#E5E5E5"> me</font>

6
00:00:18,060 --> 00:00:21,419
<font color="#E5E5E5">know if you can't hear in the back or if</font>

7
00:00:19,740 --> 00:00:23,099
you have any questions<font color="#CCCCCC"> I love for you to</font>

8
00:00:21,420 --> 00:00:25,140
give them at the end I'm gonna<font color="#E5E5E5"> leave a</font>

9
00:00:23,100 --> 00:00:27,660
lot<font color="#CCCCCC"> of time for</font><font color="#E5E5E5"> you to ask whatever you</font>

10
00:00:25,140 --> 00:00:30,390
want I<font color="#E5E5E5"> always do demo so I have two</font>

11
00:00:27,660 --> 00:00:31,529
small demos for you today and then at CN

12
00:00:30,390 --> 00:00:33,329
feel free to<font color="#E5E5E5"> come by i'm going to be</font>

13
00:00:31,529 --> 00:00:34,530
after the conference checking out<font color="#CCCCCC"> a few</font>

14
00:00:33,329 --> 00:00:36,570
talks so if you want to<font color="#E5E5E5"> hack on</font>

15
00:00:34,530 --> 00:00:38,790
something or show<font color="#CCCCCC"> me something or talk</font>

16
00:00:36,570 --> 00:00:41,399
about<font color="#E5E5E5"> more about certificates</font><font color="#CCCCCC"> i'm going</font>

17
00:00:38,790 --> 00:00:43,410
<font color="#E5E5E5">to be around cool so the title of my</font>

18
00:00:41,399 --> 00:00:45,420
talk has an emoji which i<font color="#E5E5E5"> think is</font>

19
00:00:43,410 --> 00:00:47,370
really<font color="#E5E5E5"> adequate because the audience</font>

20
00:00:45,420 --> 00:00:48,930
<font color="#E5E5E5">that I talk about these days really is</font>

21
00:00:47,370 --> 00:00:50,730
into snapchat and all these other things

22
00:00:48,930 --> 00:00:52,350
<font color="#E5E5E5">so I think I want to be more millennial</font>

23
00:00:50,730 --> 00:00:55,800
and I really want<font color="#CCCCCC"> to like connect with</font>

24
00:00:52,350 --> 00:00:58,710
the audience so micro mutual TLS in

25
00:00:55,800 --> 00:01:00,718
microservices world mutual TLS is

26
00:00:58,710 --> 00:01:02,489
obviously for those of you I mean it's a

27
00:01:00,719 --> 00:01:04,140
security<font color="#E5E5E5"> conference it means mutually</font>

28
00:01:02,489 --> 00:01:06,450
authenticated transport layer security

29
00:01:04,140 --> 00:01:08,670
and it's effectively the way of using

30
00:01:06,450 --> 00:01:10,500
transport layer security would client

31
00:01:08,670 --> 00:01:12,720
certificate server certificates and

32
00:01:10,500 --> 00:01:14,880
authorizing each other the baseline for

33
00:01:12,720 --> 00:01:16,259
this stock is assumes that you know what

34
00:01:14,880 --> 00:01:18,149
TLS is and then talk a little bit about

35
00:01:16,259 --> 00:01:20,640
the details and about the advantages but

36
00:01:18,150 --> 00:01:22,320
assumes what you that you know this and

37
00:01:20,640 --> 00:01:24,689
so if<font color="#E5E5E5"> you don't please put your hand up</font>

38
00:01:22,320 --> 00:01:28,740
and I will very quickly explain what

39
00:01:24,689 --> 00:01:31,829
this is about onward so a little bit

40
00:01:28,740 --> 00:01:33,869
before wow this was a dumping way too

41
00:01:31,829 --> 00:01:36,149
many slides before<font color="#E5E5E5"> I go into the talk</font>

42
00:01:33,869 --> 00:01:39,990
itself let me talk<font color="#E5E5E5"> about</font><font color="#CCCCCC"> why am I here</font>

43
00:01:36,150 --> 00:01:41,040
and why I'm going<font color="#E5E5E5"> to talk about TLS so</font>

44
00:01:39,990 --> 00:01:43,320
for those of you that don't know me my

45
00:01:41,040 --> 00:01:45,780
name is yoga Monica I'm Portuguese which

46
00:01:43,320 --> 00:01:48,179
is great I am an alumni from technique

47
00:01:45,780 --> 00:01:50,430
is d I did my PhD in computer science

48
00:01:48,180 --> 00:01:52,320
and then throughout my PhD I was

49
00:01:50,430 --> 00:01:54,259
actually flown to the United States San

50
00:01:52,320 --> 00:01:56,398
<font color="#E5E5E5">Francisco my company called square</font>

51
00:01:54,259 --> 00:01:58,170
square is the startup that was founded

52
00:01:56,399 --> 00:02:00,060
<font color="#E5E5E5">by Jack Dorsey the founder of twitter</font>

53
00:01:58,170 --> 00:02:01,020
it's<font color="#CCCCCC"> a small credit card</font><font color="#E5E5E5"> reader that he</font>

54
00:02:00,060 --> 00:02:03,659
plugged on your phone and can swipe

55
00:02:01,020 --> 00:02:05,880
credit cards and essentially right now

56
00:02:03,659 --> 00:02:09,009
is moving 48 billion dollars a year I

57
00:02:05,880 --> 00:02:11,260
was the second person in security I went

58
00:02:09,008 --> 00:02:13,659
when we were<font color="#E5E5E5"> 50 and I left when we were</font>

59
00:02:11,260 --> 00:02:15,399
thirteen hundred I was there<font color="#CCCCCC"> when</font><font color="#E5E5E5"> it was</font>

60
00:02:13,659 --> 00:02:16,929
a series a company and I left<font color="#E5E5E5"> when it</font>

61
00:02:15,400 --> 00:02:18,579
was a publicly traded company and now

62
00:02:16,930 --> 00:02:20,439
it's worth five billion dollars on<font color="#E5E5E5"> the</font>

63
00:02:18,579 --> 00:02:22,360
public market stock a change in New York

64
00:02:20,439 --> 00:02:24,578
throughout all<font color="#E5E5E5"> of my experience at</font>

65
00:02:22,360 --> 00:02:26,799
square the reality was that there were

66
00:02:24,579 --> 00:02:29,440
no open source or closed source tools

67
00:02:26,799 --> 00:02:31,209
that were adequate to actually have

68
00:02:29,440 --> 00:02:32,709
security for a payments company<font color="#CCCCCC"> there</font>

69
00:02:31,209 --> 00:02:35,650
<font color="#E5E5E5">was a start-up and there was living</font>

70
00:02:32,709 --> 00:02:38,260
after 2000 everything that was built was

71
00:02:35,650 --> 00:02:40,870
built on top of<font color="#CCCCCC"> HTTP and had really no</font>

72
00:02:38,260 --> 00:02:42,250
security for us so across<font color="#E5E5E5"> my existence</font>

73
00:02:40,870 --> 00:02:43,930
in the four<font color="#CCCCCC"> years there</font><font color="#E5E5E5"> was at square we</font>

74
00:02:42,250 --> 00:02:45,609
had to build a lot of softer in one of

75
00:02:43,930 --> 00:02:48,370
the things that<font color="#E5E5E5"> we had to build and that</font>

76
00:02:45,609 --> 00:02:50,950
we<font color="#E5E5E5"> did from day</font><font color="#CCCCCC"> one was we realized that</font>

77
00:02:48,370 --> 00:02:52,269
we should not be using the network where

78
00:02:50,950 --> 00:02:55,268
we should not be trusting the network

79
00:02:52,269 --> 00:02:57,250
and so every single call at square every

80
00:02:55,269 --> 00:02:59,409
single<font color="#E5E5E5"> service to service call even to</font>

81
00:02:57,250 --> 00:03:01,359
localhost used mutually authenticated

82
00:02:59,409 --> 00:03:03,159
TLS with client certificates it doesn't

83
00:03:01,359 --> 00:03:05,379
matter<font color="#CCCCCC"> if it was on</font><font color="#E5E5E5"> the same host across</font>

84
00:03:03,159 --> 00:03:08,200
host across switch across datacenter

85
00:03:05,379 --> 00:03:10,000
everything used mutual TLS so today I'm

86
00:03:08,200 --> 00:03:12,399
going to<font color="#E5E5E5"> go over a little bit on why we</font>

87
00:03:10,000 --> 00:03:14,949
do this and how we did it and<font color="#CCCCCC"> where the</font>

88
00:03:12,400 --> 00:03:16,569
advantages and disadvantages after

89
00:03:14,949 --> 00:03:18,609
square I left to a company called docker

90
00:03:16,569 --> 00:03:20,858
I assume<font color="#E5E5E5"> that by now you know what</font>

91
00:03:18,609 --> 00:03:22,510
doctor has have a few stickers for your

92
00:03:20,859 --> 00:03:23,739
laptop<font color="#E5E5E5"> these are the small version of</font>

93
00:03:22,510 --> 00:03:26,078
<font color="#E5E5E5">the sticker they're really cute so if</font>

94
00:03:23,739 --> 00:03:27,430
you want them come at the end so my

95
00:03:26,079 --> 00:03:29,639
transition from square a lot of people

96
00:03:27,430 --> 00:03:32,079
<font color="#CCCCCC">ask</font><font color="#E5E5E5"> me why he transitions the reality</font><font color="#CCCCCC"> is</font>

97
00:03:29,639 --> 00:03:33,639
everything that<font color="#E5E5E5"> I built that square was</font>

98
00:03:32,079 --> 00:03:36,010
always going to stay inside<font color="#E5E5E5"> of spark in</font>

99
00:03:33,639 --> 00:03:38,079
a talker everything is open source and

100
00:03:36,010 --> 00:03:40,448
so every single thing<font color="#E5E5E5"> that I've put</font><font color="#CCCCCC"> in</font>

101
00:03:38,079 --> 00:03:42,340
security into the container all of you

102
00:03:40,449 --> 00:03:43,780
are getting hair and so I<font color="#E5E5E5"> went to doc</font>

103
00:03:42,340 --> 00:03:47,230
her in the way that I looked at this was

104
00:03:43,780 --> 00:03:49,239
well why was it<font color="#E5E5E5"> so hard for me to have a</font>

105
00:03:47,230 --> 00:03:50,918
payments company and to actually have a

106
00:03:49,239 --> 00:03:53,560
secure infrastructure why<font color="#E5E5E5"> wouldn't this</font>

107
00:03:50,919 --> 00:03:54,970
be trivial<font color="#E5E5E5"> for everyone and so my job at</font>

108
00:03:53,560 --> 00:03:56,889
square right now wherever<font color="#E5E5E5"> doctor right</font>

109
00:03:54,970 --> 00:03:58,690
now is effectively leading the security

110
00:03:56,889 --> 00:04:00,970
<font color="#E5E5E5">team and making sure that</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> the great</font>

111
00:03:58,690 --> 00:04:02,680
stuff there's been used at scale for

112
00:04:00,970 --> 00:04:04,060
millions of users and for 48 billion

113
00:04:02,680 --> 00:04:05,829
dollars a year it's actually available

114
00:04:04,060 --> 00:04:08,769
to everyone else but when I talked her

115
00:04:05,829 --> 00:04:11,109
for two years docker has as you know a

116
00:04:08,769 --> 00:04:13,419
lot of traffic is very successful<font color="#CCCCCC"> as the</font>

117
00:04:11,109 --> 00:04:15,430
effect of expectedly de facto standard

118
00:04:13,419 --> 00:04:17,019
for containers and so<font color="#CCCCCC"> we also following</font>

119
00:04:15,430 --> 00:04:18,870
his top and we're building these things

120
00:04:17,019 --> 00:04:21,760
into orchestrators and to our images

121
00:04:18,870 --> 00:04:22,420
perfect so now let me actually talk<font color="#CCCCCC"> to</font>

122
00:04:21,760 --> 00:04:24,400
you

123
00:04:22,420 --> 00:04:25,300
to you about<font color="#CCCCCC"> micro services and</font><font color="#E5E5E5"> I'm not</font>

124
00:04:24,400 --> 00:04:27,669
going<font color="#E5E5E5"> to describe what our micro</font>

125
00:04:25,300 --> 00:04:29,320
services were all sick of understanding

126
00:04:27,670 --> 00:04:31,270
and knowing exactly what the<font color="#CCCCCC"> advantages</font>

127
00:04:29,320 --> 00:04:32,969
and disadvantages and micro services are

128
00:04:31,270 --> 00:04:36,370
but we all know the<font color="#E5E5E5"> concept of</font>

129
00:04:32,970 --> 00:04:37,450
monolithic application bad home little

130
00:04:36,370 --> 00:04:39,070
micro services you can scale

131
00:04:37,450 --> 00:04:41,110
independently good that's effective what

132
00:04:39,070 --> 00:04:42,430
it is if it's<font color="#E5E5E5"> a monolith it's bad if its</font>

133
00:04:41,110 --> 00:04:44,500
micro services in their small it's good

134
00:04:42,430 --> 00:04:46,060
whatever but from a security perspective

135
00:04:44,500 --> 00:04:48,250
there's actually some very concrete

136
00:04:46,060 --> 00:04:50,050
things and goals that you have<font color="#E5E5E5"> to keep</font>

137
00:04:48,250 --> 00:04:52,810
in mind while you're migrating your

138
00:04:50,050 --> 00:04:55,060
application from a big monolith to small

139
00:04:52,810 --> 00:04:57,310
components in micro services to use

140
00:04:55,060 --> 00:04:59,230
throughout<font color="#E5E5E5"> your organization the first</font>

141
00:04:57,310 --> 00:05:00,550
one<font color="#E5E5E5"> is that from a security team</font>

142
00:04:59,230 --> 00:05:03,280
<font color="#E5E5E5">perspective you have to think</font>

143
00:05:00,550 --> 00:05:05,140
<font color="#E5E5E5">differently beforehand if you had a</font>

144
00:05:03,280 --> 00:05:06,570
monolithic application all of the

145
00:05:05,140 --> 00:05:09,039
security authentication authorization

146
00:05:06,570 --> 00:05:10,690
had to be built in into the code

147
00:05:09,040 --> 00:05:12,340
business logic and authentication

148
00:05:10,690 --> 00:05:13,930
authorization security result was all

149
00:05:12,340 --> 00:05:15,820
part of the monolith because that's the

150
00:05:13,930 --> 00:05:17,800
definition of a model which meant that

151
00:05:15,820 --> 00:05:19,570
the security team did not<font color="#E5E5E5"> have the</font>

152
00:05:17,800 --> 00:05:21,970
ability of effectively create common

153
00:05:19,570 --> 00:05:24,340
infrastructure in common applications

154
00:05:21,970 --> 00:05:26,740
that all the teams could use in benefit

155
00:05:24,340 --> 00:05:29,169
so one of<font color="#E5E5E5"> the goals for micro services</font>

156
00:05:26,740 --> 00:05:31,630
is if everybody needs secrets if

157
00:05:29,170 --> 00:05:33,910
everybody needs TLS everybody needs<font color="#CCCCCC"> a</font>

158
00:05:31,630 --> 00:05:35,860
tokenization service then you as a

159
00:05:33,910 --> 00:05:37,830
security<font color="#E5E5E5"> team should build it and should</font>

160
00:05:35,860 --> 00:05:40,690
provide to everybody else as a service

161
00:05:37,830 --> 00:05:42,700
the second thing is that for a long time

162
00:05:40,690 --> 00:05:45,430
we've<font color="#CCCCCC"> known especially in the military</font>

163
00:05:42,700 --> 00:05:47,289
<font color="#E5E5E5">that least privilege as a</font><font color="#CCCCCC"> principle is</font>

164
00:05:45,430 --> 00:05:48,790
something that should<font color="#CCCCCC"> be</font><font color="#E5E5E5"> followed but</font>

165
00:05:47,290 --> 00:05:50,560
somewhere<font color="#E5E5E5"> along the line we kind of lost</font>

166
00:05:48,790 --> 00:05:52,240
our path and the security people just

167
00:05:50,560 --> 00:05:54,010
started building firewalls and just

168
00:05:52,240 --> 00:05:56,230
saying oh let's block<font color="#E5E5E5"> IPS and block</font>

169
00:05:54,010 --> 00:05:59,039
boards and now we<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> crap that we</font>

170
00:05:56,230 --> 00:06:01,420
have today<font color="#CCCCCC"> unfortunately or fortunately</font>

171
00:05:59,040 --> 00:06:03,040
<font color="#E5E5E5">microservices provide us another shot at</font>

172
00:06:01,420 --> 00:06:04,360
this and another shot and actually

173
00:06:03,040 --> 00:06:06,070
really starting to think<font color="#CCCCCC"> about our</font>

174
00:06:04,360 --> 00:06:09,190
infrastructures as least privilege

175
00:06:06,070 --> 00:06:11,860
meaning that<font color="#E5E5E5"> each service should only</font>

176
00:06:09,190 --> 00:06:13,960
have access to the exact resources that

177
00:06:11,860 --> 00:06:17,380
it needs to do its business works no

178
00:06:13,960 --> 00:06:18,940
more no less the third one is<font color="#E5E5E5"> obviously</font>

179
00:06:17,380 --> 00:06:20,890
better security monitoring if you have

180
00:06:18,940 --> 00:06:22,540
smaller services means that you actually

181
00:06:20,890 --> 00:06:24,400
have behaviors that are more contained

182
00:06:22,540 --> 00:06:26,380
and instead<font color="#CCCCCC"> of having an intrusion</font>

183
00:06:24,400 --> 00:06:28,539
detection system that monitors the whole

184
00:06:26,380 --> 00:06:30,800
network of your company or even monitors

185
00:06:28,540 --> 00:06:33,229
a whole host or a whole

186
00:06:30,800 --> 00:06:35,210
machine now with containers in our wits

187
00:06:33,229 --> 00:06:37,490
by small micro services you can<font color="#CCCCCC"> mater</font>

188
00:06:35,210 --> 00:06:39,109
one application so it becomes a lot

189
00:06:37,490 --> 00:06:41,150
easier for<font color="#CCCCCC"> you to do effectively</font>

190
00:06:39,110 --> 00:06:43,250
recognition of malicious behavior and

191
00:06:41,150 --> 00:06:45,258
effectively pattern matching on what

192
00:06:43,250 --> 00:06:47,690
<font color="#E5E5E5">this application should be doing the</font>

193
00:06:45,259 --> 00:06:49,879
<font color="#CCCCCC">final one is</font><font color="#E5E5E5"> obviously the fact that</font>

194
00:06:47,690 --> 00:06:51,620
with a ton of micro services it's

195
00:06:49,879 --> 00:06:54,139
effectively impossible to do manual

196
00:06:51,620 --> 00:06:55,940
deployments manual rollouts manual

197
00:06:54,139 --> 00:06:57,979
scalability and it's also impossible to

198
00:06:55,940 --> 00:07:00,020
do security it's<font color="#CCCCCC"> impossible to</font>

199
00:06:57,979 --> 00:07:02,330
effectively issue manual certificates

200
00:07:00,020 --> 00:07:04,609
we're trying<font color="#E5E5E5"> to manage these things at</font>

201
00:07:02,330 --> 00:07:06,530
by hand manually and therefore you need

202
00:07:04,610 --> 00:07:08,180
to automate the security of all of your

203
00:07:06,530 --> 00:07:09,559
<font color="#CCCCCC">development cycle not just</font><font color="#E5E5E5"> of your</font>

204
00:07:08,180 --> 00:07:12,229
applications<font color="#E5E5E5"> for your production</font>

205
00:07:09,560 --> 00:07:14,930
deployment in an end to infection okay

206
00:07:12,229 --> 00:07:17,719
so<font color="#E5E5E5"> given all of these goals the major</font>

207
00:07:14,930 --> 00:07:19,729
realization that<font color="#E5E5E5"> I mentioned was</font><font color="#CCCCCC"> that we</font>

208
00:07:17,719 --> 00:07:22,520
have to stop thinking<font color="#E5E5E5"> about layer 3 and</font>

209
00:07:19,729 --> 00:07:24,770
layer 4 so network layers as the

210
00:07:22,520 --> 00:07:27,049
<font color="#E5E5E5">security binary this is no longer true</font>

211
00:07:24,770 --> 00:07:28,430
it hasn't been true for 10 years<font color="#E5E5E5"> so we</font>

212
00:07:27,050 --> 00:07:30,740
<font color="#E5E5E5">should stop insisting on buying</font>

213
00:07:28,430 --> 00:07:32,750
firewalls the reality<font color="#CCCCCC"> is that in the</font>

214
00:07:30,740 --> 00:07:34,460
previous world we've all<font color="#E5E5E5"> seen what's on</font>

215
00:07:32,750 --> 00:07:35,930
top over there which is effectively we

216
00:07:34,460 --> 00:07:38,029
have an<font color="#CCCCCC"> Internet and then we</font><font color="#E5E5E5"> try to</font>

217
00:07:35,930 --> 00:07:39,319
segment and segregate all of these

218
00:07:38,029 --> 00:07:42,169
different regions in all of these

219
00:07:39,319 --> 00:07:44,930
<font color="#E5E5E5">different areas and zones by effectively</font>

220
00:07:42,169 --> 00:07:47,240
just plastering a stateful firewall in

221
00:07:44,930 --> 00:07:49,250
between them well turns out there's a

222
00:07:47,240 --> 00:07:51,380
lot of problems with stateful firewalls

223
00:07:49,250 --> 00:07:54,020
and if you actually go<font color="#E5E5E5"> to any of the big</font>

224
00:07:51,380 --> 00:07:56,449
<font color="#E5E5E5">players a facebook google so on and so</font>

225
00:07:54,020 --> 00:07:58,039
forth the only place where they're using

226
00:07:56,449 --> 00:08:00,440
stateful firewalls today is<font color="#CCCCCC"> the</font>

227
00:07:58,039 --> 00:08:02,240
corporate environment nobody<font color="#E5E5E5"> uses simple</font>

228
00:08:00,440 --> 00:08:03,830
firewalls in production for the simple

229
00:08:02,240 --> 00:08:05,449
reason that they don't scale there's

230
00:08:03,830 --> 00:08:08,508
really no simple far wall over there

231
00:08:05,449 --> 00:08:10,819
<font color="#CCCCCC">that skills today if you want to actual</font>

232
00:08:08,509 --> 00:08:12,889
match the top of the line<font color="#E5E5E5"> arista switch</font>

233
00:08:10,819 --> 00:08:14,509
in terms of bandwidth and you want to

234
00:08:12,889 --> 00:08:16,639
have a stateful firewall that does layer

235
00:08:14,509 --> 00:08:19,039
<font color="#CCCCCC">seven inspection we firstly have to buy</font>

236
00:08:16,639 --> 00:08:20,990
<font color="#CCCCCC">two hundred hollow Alto firewalls or</font>

237
00:08:19,039 --> 00:08:23,509
whatever vendor you have for each one

238
00:08:20,990 --> 00:08:26,960
switch so effectively you have to buy

239
00:08:23,509 --> 00:08:29,000
two hundred times the cost of what 350

240
00:08:26,960 --> 00:08:31,638
thousand dollars just to actually<font color="#E5E5E5"> keep</font>

241
00:08:29,000 --> 00:08:33,260
at line rate with what a switch is so

242
00:08:31,639 --> 00:08:36,110
the top is no longer feasible and

243
00:08:33,260 --> 00:08:37,880
therefore we come<font color="#E5E5E5"> into a situation where</font>

244
00:08:36,110 --> 00:08:40,099
the<font color="#CCCCCC"> internet is effectively split</font>

245
00:08:37,880 --> 00:08:42,169
between<font color="#E5E5E5"> your internal network and your</font>

246
00:08:40,099 --> 00:08:43,140
external<font color="#E5E5E5"> network and everything inside</font>

247
00:08:42,169 --> 00:08:46,050
<font color="#E5E5E5">of your internal network</font>

248
00:08:43,140 --> 00:08:48,150
is effectively one switch a flat natural

249
00:08:46,050 --> 00:08:50,400
<font color="#CCCCCC">a flat hierarchy the way that I think</font>

250
00:08:48,150 --> 00:08:53,459
<font color="#E5E5E5">about this is if you know of</font><font color="#CCCCCC"> Google</font>

251
00:08:50,400 --> 00:08:54,900
beyond cork and the effect of the ideas

252
00:08:53,460 --> 00:08:57,030
of exposing everything to the outside

253
00:08:54,900 --> 00:08:58,770
having really got really good strong

254
00:08:57,030 --> 00:09:01,110
authentication authorization at the edge

255
00:08:58,770 --> 00:09:03,180
what I'm calling<font color="#E5E5E5"> this is effectively be</font>

256
00:09:01,110 --> 00:09:04,920
one prod where you should<font color="#E5E5E5"> not</font><font color="#CCCCCC"> be</font>

257
00:09:03,180 --> 00:09:06,870
isolating your production environment in

258
00:09:04,920 --> 00:09:08,400
thinking that it's behind a hard shell

259
00:09:06,870 --> 00:09:11,130
that is your firewall and you should<font color="#E5E5E5"> be</font>

260
00:09:08,400 --> 00:09:13,350
<font color="#E5E5E5">doing every single service as if it was</font>

261
00:09:11,130 --> 00:09:14,939
explosive internet and the security

262
00:09:13,350 --> 00:09:16,500
requirements for a service to be inside

263
00:09:14,940 --> 00:09:18,030
<font color="#CCCCCC">of your network are the exact</font><font color="#E5E5E5"> same</font>

264
00:09:16,500 --> 00:09:19,500
requirements for it to be exposed<font color="#E5E5E5"> to</font>

265
00:09:18,030 --> 00:09:20,880
Europe the internet and this is

266
00:09:19,500 --> 00:09:23,640
effectively the model ladies thinking

267
00:09:20,880 --> 00:09:25,560
and you should be thinking and so the

268
00:09:23,640 --> 00:09:27,480
reality though is if you're in<font color="#E5E5E5"> this</font>

269
00:09:25,560 --> 00:09:29,609
environment and if you have a flat

270
00:09:27,480 --> 00:09:31,290
network and if every service can talk to

271
00:09:29,610 --> 00:09:32,910
every service and your database is

272
00:09:31,290 --> 00:09:35,910
listening on the<font color="#E5E5E5"> same network as your</font>

273
00:09:32,910 --> 00:09:37,380
crappy wordpress blog for marketing then

274
00:09:35,910 --> 00:09:39,180
you have a problem<font color="#E5E5E5"> and this is why we</font>

275
00:09:37,380 --> 00:09:41,070
have<font color="#CCCCCC"> car rolls in the first place so the</font>

276
00:09:39,180 --> 00:09:42,870
solution for this is obviously bring

277
00:09:41,070 --> 00:09:44,220
security to lay yourself and bring

278
00:09:42,870 --> 00:09:48,270
strong authentication and authorization

279
00:09:44,220 --> 00:09:50,550
to the application layer every<font color="#E5E5E5"> single</font>

280
00:09:48,270 --> 00:09:52,860
call between every single service of

281
00:09:50,550 --> 00:09:54,209
every single<font color="#E5E5E5"> application of every single</font>

282
00:09:52,860 --> 00:09:57,090
one of your data centers should be

283
00:09:54,210 --> 00:09:58,590
authenticated and authorized so you

284
00:09:57,090 --> 00:10:00,420
should be you should be able to know

285
00:09:58,590 --> 00:10:02,310
exactly<font color="#E5E5E5"> what application is calling in</font>

286
00:10:00,420 --> 00:10:04,319
to you and you should<font color="#CCCCCC"> be</font><font color="#E5E5E5"> able to know</font>

287
00:10:02,310 --> 00:10:08,400
exactly what<font color="#E5E5E5"> privileges that application</font>

288
00:10:04,320 --> 00:10:10,260
is supposed to have and to do<font color="#E5E5E5"> this the</font>

289
00:10:08,400 --> 00:10:12,150
major understanding or realization is

290
00:10:10,260 --> 00:10:14,130
you have a very difficult problem in

291
00:10:12,150 --> 00:10:16,110
<font color="#E5E5E5">your hands which is every single one of</font>

292
00:10:14,130 --> 00:10:17,850
<font color="#CCCCCC">your nodes in your infrastructure and</font>

293
00:10:16,110 --> 00:10:20,570
your data center now requires an

294
00:10:17,850 --> 00:10:23,610
identity right and I<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> mean like a</font>

295
00:10:20,570 --> 00:10:26,100
fancy like<font color="#CCCCCC"> hostname like a cute hostname</font>

296
00:10:23,610 --> 00:10:27,960
like KitKat dr. calm or I remember

297
00:10:26,100 --> 00:10:31,620
<font color="#E5E5E5">technique who had like girl names so</font>

298
00:10:27,960 --> 00:10:34,020
Joanna or via threes dot<font color="#E5E5E5"> is decom that's</font>

299
00:10:31,620 --> 00:10:35,850
not what<font color="#CCCCCC"> I mean I mean</font><font color="#E5E5E5"> strong identities</font>

300
00:10:34,020 --> 00:10:38,430
but our cryptographic and allow you to

301
00:10:35,850 --> 00:10:40,100
effectively have a way of identifying

302
00:10:38,430 --> 00:10:42,660
them in sharing confidential information

303
00:10:40,100 --> 00:10:44,130
why is this useful well because if you

304
00:10:42,660 --> 00:10:47,339
have a strong identity then you can

305
00:10:44,130 --> 00:10:49,200
<font color="#CCCCCC">obviously establish strong connections</font>

306
00:10:47,340 --> 00:10:51,120
secure connections and then exchange

307
00:10:49,200 --> 00:10:52,710
things like secrets later on for your

308
00:10:51,120 --> 00:10:54,170
application so it's obviously really

309
00:10:52,710 --> 00:10:58,380
useful

310
00:10:54,170 --> 00:11:00,150
and identities should be per machine at

311
00:10:58,380 --> 00:11:01,830
least<font color="#E5E5E5"> we're going to talk a little bit</font>

312
00:11:00,150 --> 00:11:03,030
about services and about how service and

313
00:11:01,830 --> 00:11:05,520
<font color="#E5E5E5">obligations should also have their own</font>

314
00:11:03,030 --> 00:11:07,140
identities but<font color="#E5E5E5"> the baseline is every</font>

315
00:11:05,520 --> 00:11:08,579
single host or virtual machine that you

316
00:11:07,140 --> 00:11:10,740
have in your datacenter should have one

317
00:11:08,580 --> 00:11:12,960
<font color="#E5E5E5">of these and i am using certificates</font>

318
00:11:10,740 --> 00:11:15,480
there i'm not using identities but it's

319
00:11:12,960 --> 00:11:17,100
effectively the same we're trying<font color="#E5E5E5"> to go</font>

320
00:11:15,480 --> 00:11:19,380
for an identity in general and something

321
00:11:17,100 --> 00:11:21,960
that<font color="#CCCCCC"> I despise the host but now</font>

322
00:11:19,380 --> 00:11:24,750
obviously this comes to the old paradox

323
00:11:21,960 --> 00:11:27,120
what<font color="#E5E5E5"> what came first right was it the</font>

324
00:11:24,750 --> 00:11:31,380
egg or<font color="#CCCCCC"> the</font><font color="#E5E5E5"> whale and I know that a whale</font>

325
00:11:27,120 --> 00:11:32,700
is an ml so<font color="#E5E5E5"> it isn't just gone but what</font>

326
00:11:31,380 --> 00:11:34,650
came<font color="#E5E5E5"> first how do you would trap this</font>

327
00:11:32,700 --> 00:11:36,420
yes<font color="#E5E5E5"> I have a machine but how do i put</font>

328
00:11:34,650 --> 00:11:38,130
the first certificate what is the secure

329
00:11:36,420 --> 00:11:41,219
connection that bootstraps the trust of

330
00:11:38,130 --> 00:11:42,990
this sure like if<font color="#CCCCCC"> i can</font><font color="#E5E5E5"> securely put a</font>

331
00:11:41,220 --> 00:11:44,430
certificate and identity in there then i

332
00:11:42,990 --> 00:11:46,050
already solve the problem of the

333
00:11:44,430 --> 00:11:47,459
<font color="#E5E5E5">communication so there's a couple of</font>

334
00:11:46,050 --> 00:11:51,959
ways that<font color="#CCCCCC"> you can bootstrap this whole</font>

335
00:11:47,460 --> 00:11:52,920
thing right well there you<font color="#CCCCCC"> go there's a</font>

336
00:11:51,960 --> 00:11:54,960
couple of things<font color="#E5E5E5"> that you can bootstrap</font>

337
00:11:52,920 --> 00:11:56,430
this whole thing the first one is the

338
00:11:54,960 --> 00:11:58,110
understanding that you have<font color="#E5E5E5"> a</font>

339
00:11:56,430 --> 00:12:00,000
registration system or at least you

340
00:11:58,110 --> 00:12:02,040
should the registration system is

341
00:12:00,000 --> 00:12:04,380
effectively what is<font color="#CCCCCC"> responsible for</font>

342
00:12:02,040 --> 00:12:06,150
adding you notes your network and given

343
00:12:04,380 --> 00:12:08,130
a registration system that registration

344
00:12:06,150 --> 00:12:10,050
system should<font color="#CCCCCC"> be responsible</font><font color="#E5E5E5"> for</font>

345
00:12:08,130 --> 00:12:12,780
actually minting your identities for

346
00:12:10,050 --> 00:12:14,729
every single<font color="#E5E5E5"> one of your notes how does</font>

347
00:12:12,780 --> 00:12:16,350
that<font color="#E5E5E5"> actually work in practice well the</font>

348
00:12:14,730 --> 00:12:17,810
way that I've seen done in the past I've

349
00:12:16,350 --> 00:12:20,760
<font color="#CCCCCC">seen it done a couple of different ways</font>

350
00:12:17,810 --> 00:12:22,859
at square we had secure networks and

351
00:12:20,760 --> 00:12:24,720
vlans and switches<font color="#E5E5E5"> where a machine would</font>

352
00:12:22,860 --> 00:12:26,400
be indoctrinated and then serial numbers

353
00:12:24,720 --> 00:12:28,140
would be verified from hardware to an

354
00:12:26,400 --> 00:12:30,270
actual registration authority that would

355
00:12:28,140 --> 00:12:31,830
have been manually added by user when a

356
00:12:30,270 --> 00:12:33,930
new Iraq is actually put into the data

357
00:12:31,830 --> 00:12:36,600
center<font color="#E5E5E5"> in that</font><font color="#CCCCCC"> network would effectively</font>

358
00:12:33,930 --> 00:12:38,609
allow a machine to enroll itself in the

359
00:12:36,600 --> 00:12:41,160
<font color="#E5E5E5">registration authority by self</font>

360
00:12:38,610 --> 00:12:42,600
generating a certificate csr obviously

361
00:12:41,160 --> 00:12:44,490
the component<font color="#E5E5E5"> of private key and public</font>

362
00:12:42,600 --> 00:12:46,590
key submitting a csr for provisioning

363
00:12:44,490 --> 00:12:48,720
system<font color="#E5E5E5"> in effectively having a signed</font>

364
00:12:46,590 --> 00:12:52,290
certificate come out<font color="#E5E5E5"> of that so machine</font>

365
00:12:48,720 --> 00:12:54,870
comes up trust the remote system to

366
00:12:52,290 --> 00:12:57,300
provide a certificate and then uses that

367
00:12:54,870 --> 00:12:58,740
prep another way that<font color="#E5E5E5"> we can do this is</font>

368
00:12:57,300 --> 00:13:00,240
if you're using a virtual machine you

369
00:12:58,740 --> 00:13:02,220
can make this into the<font color="#CCCCCC"> image so</font>

370
00:13:00,240 --> 00:13:04,020
technically could bake this in de mi you

371
00:13:02,220 --> 00:13:05,490
could bake a public key that is the

372
00:13:04,020 --> 00:13:07,439
public key that your system when<font color="#CCCCCC"> its</font>

373
00:13:05,490 --> 00:13:09,120
bootstrap is going to trust to<font color="#CCCCCC"> act</font>

374
00:13:07,440 --> 00:13:10,680
we do this dance and<font color="#E5E5E5"> obtained itself</font>

375
00:13:09,120 --> 00:13:12,840
certificate so those are<font color="#CCCCCC"> two ways</font>

376
00:13:10,680 --> 00:13:15,420
another way<font color="#E5E5E5"> that today people are using</font>

377
00:13:12,840 --> 00:13:17,250
a lot is trust on first use so

378
00:13:15,420 --> 00:13:19,469
effectively like<font color="#E5E5E5"> a duck the first thing</font>

379
00:13:17,250 --> 00:13:21,060
that<font color="#E5E5E5"> a duck sees it's his mom so even if</font>

380
00:13:19,470 --> 00:13:22,710
the mom is well now the Ducks are all

381
00:13:21,060 --> 00:13:24,569
following the whale everywhere right

382
00:13:22,710 --> 00:13:26,700
this is effectively a system that is

383
00:13:24,570 --> 00:13:29,940
working<font color="#E5E5E5"> pretty well today in a system</font>

384
00:13:26,700 --> 00:13:32,880
that<font color="#CCCCCC"> works for a lot of web browser web</font>

385
00:13:29,940 --> 00:13:34,950
browser trusts like<font color="#E5E5E5"> HST s and things</font>

386
00:13:32,880 --> 00:13:36,510
like that are a little bit used a jesse

387
00:13:34,950 --> 00:13:38,340
s enter you can preload it but they're

388
00:13:36,510 --> 00:13:40,170
based on the fact that you can do trust

389
00:13:38,340 --> 00:13:42,900
on first use then from the woman on you

390
00:13:40,170 --> 00:13:44,250
trust all of these coupons hbk p there's

391
00:13:42,900 --> 00:13:46,829
another<font color="#CCCCCC"> example of something that you're</font>

392
00:13:44,250 --> 00:13:48,630
being told exactly<font color="#E5E5E5"> what it</font><font color="#CCCCCC"> is so these</font>

393
00:13:46,830 --> 00:13:50,460
<font color="#CCCCCC">are the ways that you bootstrap all of</font>

394
00:13:48,630 --> 00:13:53,550
the trust on all of your notes and<font color="#CCCCCC"> now</font>

395
00:13:50,460 --> 00:13:56,250
that you have this now<font color="#CCCCCC"> i have to explain</font>

396
00:13:53,550 --> 00:13:58,620
<font color="#CCCCCC">to you why I wanted certificates in the</font>

397
00:13:56,250 --> 00:13:59,790
first place again identities are not

398
00:13:58,620 --> 00:14:02,100
necessarily certificates but

399
00:13:59,790 --> 00:14:04,349
certificates are really useful as

400
00:14:02,100 --> 00:14:07,230
identities<font color="#E5E5E5"> because you can simply use</font>

401
00:14:04,350 --> 00:14:09,300
neutral TLS everything else to go from

402
00:14:07,230 --> 00:14:12,420
an identity to an actually secure secure

403
00:14:09,300 --> 00:14:14,099
channel that we can trust right and so

404
00:14:12,420 --> 00:14:15,900
now<font color="#E5E5E5"> we</font><font color="#CCCCCC"> actually have to go over the</font>

405
00:14:14,100 --> 00:14:18,540
advantages and<font color="#E5E5E5"> disadvantages of TLS and</font>

406
00:14:15,900 --> 00:14:20,400
mutual TLS has a lot of advantages which

407
00:14:18,540 --> 00:14:22,020
are pretty obviously mostly the first

408
00:14:20,400 --> 00:14:24,480
one it's supported by effectively

409
00:14:22,020 --> 00:14:25,949
everything everything these days has the

410
00:14:24,480 --> 00:14:28,260
ability of doing TLS communications and

411
00:14:25,950 --> 00:14:30,930
providing client certificates the key

412
00:14:28,260 --> 00:14:32,640
material<font color="#E5E5E5"> stay secret both when you're</font>

413
00:14:30,930 --> 00:14:34,920
actually trying<font color="#E5E5E5"> to get an identity so</font>

414
00:14:32,640 --> 00:14:37,050
creating a<font color="#E5E5E5"> CSR sending the CSR which is</font>

415
00:14:34,920 --> 00:14:38,670
only public content to get sign but also

416
00:14:37,050 --> 00:14:41,160
when<font color="#E5E5E5"> you're doing a connection because</font>

417
00:14:38,670 --> 00:14:42,449
you get to use diffie-hellman and you

418
00:14:41,160 --> 00:14:44,010
get to<font color="#CCCCCC"> actually use your public key</font>

419
00:14:42,450 --> 00:14:45,630
<font color="#CCCCCC">component to prove who you are as a</font>

420
00:14:44,010 --> 00:14:47,010
client<font color="#E5E5E5"> and improve for you are as a</font><font color="#CCCCCC"> SERP</font>

421
00:14:45,630 --> 00:14:48,780
so there's<font color="#E5E5E5"> never private key material</font>

422
00:14:47,010 --> 00:14:50,280
that is actually going over the network

423
00:14:48,780 --> 00:14:52,319
all these<font color="#E5E5E5"> things</font><font color="#CCCCCC"> are computed</font>

424
00:14:50,280 --> 00:14:54,360
independently on each side the client

425
00:14:52,320 --> 00:14:56,610
<font color="#CCCCCC">and</font><font color="#E5E5E5"> the server and obviously</font><font color="#CCCCCC"> it provides</font>

426
00:14:54,360 --> 00:14:59,280
the CIA so our confidentiality our

427
00:14:56,610 --> 00:15:01,740
integrity in our authentication to the

428
00:14:59,280 --> 00:15:04,680
process in the connection unfortunately

429
00:15:01,740 --> 00:15:07,200
it has a lot of disadvantages so it is

430
00:15:04,680 --> 00:15:08,579
incredibly confusing for engineers so if

431
00:15:07,200 --> 00:15:11,040
you've seen an engineer trying to

432
00:15:08,580 --> 00:15:13,440
configure TLS or certificates be even on

433
00:15:11,040 --> 00:15:15,630
the non mutual TLS case just like

434
00:15:13,440 --> 00:15:17,010
serving a certificate that<font color="#CCCCCC"> is correctly</font>

435
00:15:15,630 --> 00:15:18,660
signed by a CA

436
00:15:17,010 --> 00:15:20,700
doesn't present a browser red warning

437
00:15:18,660 --> 00:15:22,290
saying you have<font color="#CCCCCC"> to expect to accept this</font>

438
00:15:20,700 --> 00:15:23,820
<font color="#E5E5E5">self signed certificate which we've all</font>

439
00:15:22,290 --> 00:15:25,589
seen it it's<font color="#CCCCCC"> actually really hard for</font>

440
00:15:23,820 --> 00:15:27,270
engineers to understand what it<font color="#CCCCCC"> is how</font>

441
00:15:25,590 --> 00:15:28,890
to manage it I've<font color="#E5E5E5"> seen people put the</font>

442
00:15:27,270 --> 00:15:30,750
private keys inside of their pens I've

443
00:15:28,890 --> 00:15:32,550
seen all sorts of crazy stuff happen

444
00:15:30,750 --> 00:15:33,870
right and people obviously committing

445
00:15:32,550 --> 00:15:35,969
private keys to get up which happens

446
00:15:33,870 --> 00:15:37,860
every<font color="#CCCCCC"> single day everywhere the other</font>

447
00:15:35,970 --> 00:15:39,840
thing is<font color="#E5E5E5"> that if you're trying to do</font>

448
00:15:37,860 --> 00:15:41,850
<font color="#E5E5E5">this on a machine basis if you have</font>

449
00:15:39,840 --> 00:15:43,800
hundreds or thousands or tens of

450
00:15:41,850 --> 00:15:46,170
thousands of<font color="#E5E5E5"> machines that is a crap ton</font>

451
00:15:43,800 --> 00:15:47,729
<font color="#E5E5E5">of certificates how do you manage those</font>

452
00:15:46,170 --> 00:15:49,349
how do<font color="#E5E5E5"> you rotate them how do you</font>

453
00:15:47,730 --> 00:15:51,390
distribute them securely so this<font color="#E5E5E5"> is a</font>

454
00:15:49,350 --> 00:15:54,210
huge huge problem that this system<font color="#E5E5E5"> has</font>

455
00:15:51,390 --> 00:15:55,860
<font color="#CCCCCC">another thing is that you are now</font>

456
00:15:54,210 --> 00:15:58,290
running a PK<font color="#CCCCCC"> up because we effectively</font>

457
00:15:55,860 --> 00:16:00,240
need to sign certificates so you need

458
00:15:58,290 --> 00:16:02,130
private key that needs to be maybe<font color="#E5E5E5"> in</font>

459
00:16:00,240 --> 00:16:04,350
hardware at least protect it in a way

460
00:16:02,130 --> 00:16:06,510
you need<font color="#E5E5E5"> to understand what revoking</font>

461
00:16:04,350 --> 00:16:08,130
that private key means or how rotating

462
00:16:06,510 --> 00:16:09,540
the<font color="#CCCCCC"> product it happens or what is your</font>

463
00:16:08,130 --> 00:16:11,010
<font color="#E5E5E5">panic situation something got</font>

464
00:16:09,540 --> 00:16:12,719
compromised press the red button

465
00:16:11,010 --> 00:16:14,850
something has<font color="#CCCCCC"> to happen so</font><font color="#E5E5E5"> you have to</font>

466
00:16:12,720 --> 00:16:17,190
have organizational maturity to actually

467
00:16:14,850 --> 00:16:19,320
want<font color="#E5E5E5"> to be ki successful for example I</font>

468
00:16:17,190 --> 00:16:21,960
didn't know if you knew but certificate

469
00:16:19,320 --> 00:16:24,150
revocation lists the<font color="#CCCCCC"> crl that TLS</font>

470
00:16:21,960 --> 00:16:25,890
automatically the majority's clients use

471
00:16:24,150 --> 00:16:28,260
to check if the certificate that they're

472
00:16:25,890 --> 00:16:30,960
<font color="#E5E5E5">using is revoked or has</font><font color="#CCCCCC"> been revoked</font>

473
00:16:28,260 --> 00:16:35,460
actually has an expiration so I've been

474
00:16:30,960 --> 00:16:38,070
in a situation where some unknown mobile

475
00:16:35,460 --> 00:16:40,860
payments<font color="#E5E5E5"> companies infrastructure goes</font>

476
00:16:38,070 --> 00:16:43,140
down because<font color="#CCCCCC"> the crl ran out of and it</font>

477
00:16:40,860 --> 00:16:45,480
was was effectively expired I who'd have

478
00:16:43,140 --> 00:16:47,490
known right now<font color="#CCCCCC"> I know it's burned into</font>

479
00:16:45,480 --> 00:16:49,410
my memory every time<font color="#E5E5E5"> I go in</font><font color="#CCCCCC"> and do any</font>

480
00:16:47,490 --> 00:16:51,270
kind of audit or any kind of consulting

481
00:16:49,410 --> 00:16:53,250
I go and check the expiration of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> crl</font>

482
00:16:51,270 --> 00:16:54,720
or its existence in the first place but

483
00:16:53,250 --> 00:16:57,690
<font color="#E5E5E5">the reality is that you think you're</font>

484
00:16:54,720 --> 00:16:59,610
being smart by having a crl or instead

485
00:16:57,690 --> 00:17:00,960
<font color="#CCCCCC">of not having crl not bothering your</font>

486
00:16:59,610 --> 00:17:04,050
think you're being smart<font color="#CCCCCC"> within</font><font color="#E5E5E5"> your</font>

487
00:17:00,960 --> 00:17:07,470
bidding because TLS is to the next point

488
00:17:04,050 --> 00:17:10,079
completely unforgiving if a crl expires

489
00:17:07,470 --> 00:17:11,880
if a certificate expires<font color="#E5E5E5"> I can guarantee</font>

490
00:17:10,079 --> 00:17:13,470
you there is no amount of reboots or

491
00:17:11,880 --> 00:17:15,300
restarts of your service that is going

492
00:17:13,470 --> 00:17:17,400
to bring<font color="#E5E5E5"> it back</font><font color="#CCCCCC"> up this is now how</font>

493
00:17:15,300 --> 00:17:19,589
computers work with TLS you reboot it

494
00:17:17,400 --> 00:17:22,770
and it's still down because it's just

495
00:17:19,589 --> 00:17:24,958
<font color="#E5E5E5">that and forget however this is actually</font>

496
00:17:22,770 --> 00:17:26,430
the best<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> have today and so given</font>

497
00:17:24,959 --> 00:17:28,350
all these advantages give all the

498
00:17:26,430 --> 00:17:29,160
advantages we still should<font color="#CCCCCC"> be using</font><font color="#E5E5E5"> TLS</font>

499
00:17:28,349 --> 00:17:31,260
because

500
00:17:29,160 --> 00:17:32,580
it's everything<font color="#E5E5E5"> that we should be used</font>

501
00:17:31,260 --> 00:17:34,230
<font color="#E5E5E5">and have I mentioned that it's</font>

502
00:17:32,580 --> 00:17:36,000
unforgiving because you really really

503
00:17:34,230 --> 00:17:38,220
have to<font color="#CCCCCC"> understand</font><font color="#E5E5E5"> that the moment you</font>

504
00:17:36,000 --> 00:17:41,340
turn this on it's<font color="#CCCCCC"> impossible to turn it</font>

505
00:17:38,220 --> 00:17:43,530
off<font color="#CCCCCC"> okay so now let me talk to you about</font>

506
00:17:41,340 --> 00:17:46,649
how we<font color="#E5E5E5"> actually are solving this at</font>

507
00:17:43,530 --> 00:17:48,420
darker darker 112 came with built-in

508
00:17:46,650 --> 00:17:50,280
orchestration what that means is<font color="#CCCCCC"> that</font>

509
00:17:48,420 --> 00:17:51,690
when you use docker effectively instead

510
00:17:50,280 --> 00:17:53,580
of just running containers and stopping

511
00:17:51,690 --> 00:17:55,140
containers on a local host you actually

512
00:17:53,580 --> 00:17:57,750
<font color="#E5E5E5">have a</font><font color="#CCCCCC"> full-featured orchestration</font>

513
00:17:55,140 --> 00:17:59,880
system built in so why just doing swarm

514
00:17:57,750 --> 00:18:01,380
in it you can<font color="#E5E5E5"> create a manager and by</font>

515
00:17:59,880 --> 00:18:02,820
doing<font color="#E5E5E5"> swarm</font><font color="#CCCCCC"> join you can</font><font color="#E5E5E5"> join you</font>

516
00:18:01,380 --> 00:18:05,220
workers to the<font color="#E5E5E5"> to the swarm and</font>

517
00:18:02,820 --> 00:18:06,929
effectively have<font color="#E5E5E5"> a distributed system</font>

518
00:18:05,220 --> 00:18:09,090
that runs all of your containers in the

519
00:18:06,930 --> 00:18:10,440
distributed fashion and so when I was

520
00:18:09,090 --> 00:18:12,030
working<font color="#E5E5E5"> on this project I actually</font>

521
00:18:10,440 --> 00:18:14,520
thought about a lot about<font color="#E5E5E5"> this problem</font>

522
00:18:12,030 --> 00:18:16,740
<font color="#E5E5E5">of certificates how to do the</font>

523
00:18:14,520 --> 00:18:18,600
indoctrination how to do rotation and I

524
00:18:16,740 --> 00:18:20,070
decided look I really<font color="#E5E5E5"> want to solve this</font>

525
00:18:18,600 --> 00:18:21,810
problem once and for all and for

526
00:18:20,070 --> 00:18:24,179
everybody else at least<font color="#E5E5E5"> for all the</font>

527
00:18:21,810 --> 00:18:25,860
doctor users so let<font color="#E5E5E5"> me talk to you about</font>

528
00:18:24,180 --> 00:18:29,130
a little<font color="#CCCCCC"> bit about how we actually</font><font color="#E5E5E5"> did</font>

529
00:18:25,860 --> 00:18:31,500
<font color="#CCCCCC">it and how the system actually works so</font>

530
00:18:29,130 --> 00:18:33,870
in swarm there's two constants of nodes

531
00:18:31,500 --> 00:18:37,110
there's a manager note which is really

532
00:18:33,870 --> 00:18:38,969
important managers are part of raft they

533
00:18:37,110 --> 00:18:41,040
have a quorum you can add more managers

534
00:18:38,970 --> 00:18:42,360
the usual number<font color="#E5E5E5"> of managers is either</font>

535
00:18:41,040 --> 00:18:44,520
one if you don't care<font color="#E5E5E5"> about high</font>

536
00:18:42,360 --> 00:18:46,679
availability three if you can tolerate

537
00:18:44,520 --> 00:18:48,270
one failure or five if<font color="#CCCCCC"> you want to</font>

538
00:18:46,680 --> 00:18:50,400
tolerate two failures you can also have

539
00:18:48,270 --> 00:18:52,020
seven but it's effectively a raft forum

540
00:18:50,400 --> 00:18:54,120
all the managers are the highest

541
00:18:52,020 --> 00:18:56,280
privilege nodes on your cluster in<font color="#E5E5E5"> there</font>

542
00:18:54,120 --> 00:18:58,260
really small compared<font color="#CCCCCC"> to all the work</font><font color="#E5E5E5"> so</font>

543
00:18:56,280 --> 00:19:00,570
three managers can run thousands of

544
00:18:58,260 --> 00:19:02,100
workers which is the second kind of note

545
00:19:00,570 --> 00:19:03,990
that<font color="#E5E5E5"> you have the first thing that</font>

546
00:19:02,100 --> 00:19:05,730
<font color="#E5E5E5">happens is automatically out of the box</font>

547
00:19:03,990 --> 00:19:08,400
when you bootstrap this you do swarm in

548
00:19:05,730 --> 00:19:10,260
it you get<font color="#CCCCCC"> a CA for free it is a</font>

549
00:19:08,400 --> 00:19:11,760
self-signed CA<font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> to describe how</font>

550
00:19:10,260 --> 00:19:13,470
we do the bootstrap but you get to see

551
00:19:11,760 --> 00:19:15,210
it<font color="#E5E5E5"> for free so the</font><font color="#CCCCCC"> manager has its own</font>

552
00:19:13,470 --> 00:19:17,580
certificate has a certificate authority

553
00:19:15,210 --> 00:19:19,230
and it's constantly starting to rotate

554
00:19:17,580 --> 00:19:21,149
<font color="#CCCCCC">the certificates and I'm going to</font><font color="#E5E5E5"> show</font>

555
00:19:19,230 --> 00:19:22,890
<font color="#CCCCCC">you a demo with this it's</font><font color="#E5E5E5"> like a thing</font>

556
00:19:21,150 --> 00:19:24,810
that<font color="#CCCCCC"> happens is when a new node wants to</font>

557
00:19:22,890 --> 00:19:26,550
join what it does is<font color="#CCCCCC"> it</font><font color="#E5E5E5"> does is yes</font>

558
00:19:24,810 --> 00:19:28,770
artists generates a public/private key

559
00:19:26,550 --> 00:19:31,440
submits to csr and it gets assigned

560
00:19:28,770 --> 00:19:33,210
identity that is<font color="#E5E5E5"> actually issued note</font>

561
00:19:31,440 --> 00:19:34,560
that there is<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> a token that is</font>

562
00:19:33,210 --> 00:19:36,060
<font color="#E5E5E5">involved there I'm going to describe how</font>

563
00:19:34,560 --> 00:19:38,850
the token actually allows us to

564
00:19:36,060 --> 00:19:40,860
authorize joining the cluster so this<font color="#CCCCCC"> is</font>

565
00:19:38,850 --> 00:19:42,959
<font color="#E5E5E5">how a worker talks to a manager to get</font>

566
00:19:40,860 --> 00:19:44,908
an identity so at<font color="#E5E5E5"> this point both</font>

567
00:19:42,960 --> 00:19:46,890
of those nodes have TLS certificates

568
00:19:44,909 --> 00:19:49,590
that allow them to use mutual TLS with

569
00:19:46,890 --> 00:19:51,210
each other the third thing<font color="#E5E5E5"> is obviously</font>

570
00:19:49,590 --> 00:19:53,279
workers and managers are always

571
00:19:51,210 --> 00:19:54,539
identified by certificate what this

572
00:19:53,279 --> 00:19:56,929
means is<font color="#E5E5E5"> that the certificate actually</font>

573
00:19:54,539 --> 00:19:59,640
has embedded on<font color="#CCCCCC"> the oh you and other</font>

574
00:19:56,929 --> 00:20:01,350
attributes what the privilege of<font color="#CCCCCC"> the</font>

575
00:19:59,640 --> 00:20:03,840
note is in the cluster so the

576
00:20:01,350 --> 00:20:05,100
certificate<font color="#CCCCCC"> of a manager describes that</font>

577
00:20:03,840 --> 00:20:06,658
this note is a manager in the

578
00:20:05,100 --> 00:20:08,309
certificate of worker described it as

579
00:20:06,659 --> 00:20:10,140
others a worker which means that<font color="#E5E5E5"> there's</font>

580
00:20:08,309 --> 00:20:11,940
<font color="#E5E5E5">that doesn't need</font><font color="#CCCCCC"> to be a centralized</font>

581
00:20:10,140 --> 00:20:13,289
place of authority when you say these

582
00:20:11,940 --> 00:20:14,580
are the managers these are work the

583
00:20:13,289 --> 00:20:16,470
workers because the certificates

584
00:20:14,580 --> 00:20:17,580
themselves prove who you are because

585
00:20:16,470 --> 00:20:20,429
they were minted by a certificate

586
00:20:17,580 --> 00:20:22,980
authority that says no this note is this

587
00:20:20,429 --> 00:20:24,630
privilege and then finally<font color="#CCCCCC"> the effect we</font>

588
00:20:22,980 --> 00:20:27,210
have all the communications between the

589
00:20:24,630 --> 00:20:28,950
cluster that<font color="#E5E5E5"> are using mutual TLS out of</font>

590
00:20:27,210 --> 00:20:30,120
the box you had to do nothing<font color="#E5E5E5"> to</font>

591
00:20:28,950 --> 00:20:33,330
configure it and<font color="#E5E5E5"> I'm going to show you</font>

592
00:20:30,120 --> 00:20:34,889
how<font color="#E5E5E5"> easy that</font><font color="#CCCCCC"> is I mentioned a token so</font>

593
00:20:33,330 --> 00:20:36,480
when a<font color="#E5E5E5"> Joe and when the node wants to</font>

594
00:20:34,890 --> 00:20:38,880
join the swarm wants to join this

595
00:20:36,480 --> 00:20:40,950
orchestration in this network it has to

596
00:20:38,880 --> 00:20:42,000
provide a specific talking in the way

597
00:20:40,950 --> 00:20:44,789
that we<font color="#E5E5E5"> did to token was pretty</font>

598
00:20:42,000 --> 00:20:46,770
interesting it's not that complex but

599
00:20:44,789 --> 00:20:49,649
the<font color="#E5E5E5"> first thing is we started with a</font>

600
00:20:46,770 --> 00:20:51,809
prefix<font color="#E5E5E5"> that all tokens have that are</font>

601
00:20:49,649 --> 00:20:53,879
common an easy reason for this is that

602
00:20:51,809 --> 00:20:56,850
your security team now has a specific

603
00:20:53,880 --> 00:21:00,000
string that against search on CBS or on

604
00:20:56,850 --> 00:21:01,590
CBS aren't VCS github com etc to see if

605
00:21:00,000 --> 00:21:03,419
any one<font color="#CCCCCC"> of your developers actually</font>

606
00:21:01,590 --> 00:21:05,908
committed a secret<font color="#E5E5E5"> token</font><font color="#CCCCCC"> it to get out</font>

607
00:21:03,419 --> 00:21:08,370
so it<font color="#E5E5E5"> just makes grep easier that's all</font>

608
00:21:05,909 --> 00:21:10,080
it's doing<font color="#CCCCCC"> the second thing</font><font color="#E5E5E5"> is obviously</font>

609
00:21:08,370 --> 00:21:11,879
a version that's self-explanatory but

610
00:21:10,080 --> 00:21:13,678
that's the third and<font color="#E5E5E5"> the fourth I'm more</font>

611
00:21:11,880 --> 00:21:16,350
interested the first one is actually

612
00:21:13,679 --> 00:21:18,750
cryptographic hash of<font color="#CCCCCC"> the actual</font><font color="#E5E5E5"> routes</font>

613
00:21:16,350 --> 00:21:20,820
yet what this effectively means is it

614
00:21:18,750 --> 00:21:22,620
turns the issues of downloading a

615
00:21:20,820 --> 00:21:25,200
certificate from all the<font color="#E5E5E5"> CAS to all the</font>

616
00:21:22,620 --> 00:21:27,090
notes easier just because now you only

617
00:21:25,200 --> 00:21:28,799
<font color="#CCCCCC">have to share this token and this dokin</font>

618
00:21:27,090 --> 00:21:30,779
allows you to ensure<font color="#E5E5E5"> that you're joining</font>

619
00:21:28,799 --> 00:21:32,129
the right CA and that you're

620
00:21:30,779 --> 00:21:34,740
bootstrapping that you're downloading

621
00:21:32,130 --> 00:21:36,809
the root CA of the right identity that's

622
00:21:34,740 --> 00:21:37,830
effectively how the bootstrap works once

623
00:21:36,809 --> 00:21:39,240
it's still going<font color="#E5E5E5"> to share it securely</font>

624
00:21:37,830 --> 00:21:40,949
now you know that<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> joining the</font>

625
00:21:39,240 --> 00:21:43,559
right swarm because nobody can fake that

626
00:21:40,950 --> 00:21:45,270
<font color="#CCCCCC">sha256 and then it's a randomly</font>

627
00:21:43,559 --> 00:21:47,370
generated secret that you can<font color="#E5E5E5"> rotate</font><font color="#CCCCCC"> at</font>

628
00:21:45,270 --> 00:21:49,289
<font color="#E5E5E5">any time and that secret is presented</font><font color="#CCCCCC"> to</font>

629
00:21:47,370 --> 00:21:51,059
the managers<font color="#E5E5E5"> the managers are in sync</font>

630
00:21:49,289 --> 00:21:52,799
using raft so they all know what the

631
00:21:51,059 --> 00:21:54,629
current token is valid and if a<font color="#E5E5E5"> node</font>

632
00:21:52,799 --> 00:21:55,470
presents a valid token then<font color="#CCCCCC"> it's</font>

633
00:21:54,630 --> 00:21:57,299
authorized to

634
00:21:55,470 --> 00:21:59,580
to the be issued a certificate so it's

635
00:21:57,299 --> 00:22:01,139
easy as this we<font color="#CCCCCC"> turn the bootstrap into</font>

636
00:21:59,580 --> 00:22:02,730
sharing of a token that has a few

637
00:22:01,140 --> 00:22:05,940
characteristics that are always<font color="#E5E5E5"> too good</font>

638
00:22:02,730 --> 00:22:08,010
strap the system security and so I mean

639
00:22:05,940 --> 00:22:09,480
we're in terms of bootstrap you have a

640
00:22:08,010 --> 00:22:11,640
worker the first thing that the worker

641
00:22:09,480 --> 00:22:15,450
wants to do is to join the cluster so it

642
00:22:11,640 --> 00:22:17,880
provides the token sorry it downloads

643
00:22:15,450 --> 00:22:19,860
the actual root CA and with the token

644
00:22:17,880 --> 00:22:21,960
the component<font color="#E5E5E5"> of the hash checks if the</font>

645
00:22:19,860 --> 00:22:24,539
root CA of the remote manager is

646
00:22:21,960 --> 00:22:26,640
actually valid and if it<font color="#E5E5E5"> is it now knows</font>

647
00:22:24,539 --> 00:22:28,140
<font color="#CCCCCC">that it's not joining a fake manager but</font>

648
00:22:26,640 --> 00:22:30,360
it's<font color="#E5E5E5"> not being men in the middle because</font>

649
00:22:28,140 --> 00:22:32,400
the certificate that actually got<font color="#E5E5E5"> is the</font>

650
00:22:30,360 --> 00:22:34,559
valid one the second thing<font color="#CCCCCC"> that does</font>

651
00:22:32,400 --> 00:22:37,350
<font color="#E5E5E5">number</font><font color="#CCCCCC"> two is generates a public/private</font>

652
00:22:34,559 --> 00:22:39,270
key generates a<font color="#CCCCCC"> CSR and submits is csr</font>

653
00:22:37,350 --> 00:22:41,699
to be signed in the<font color="#E5E5E5"> manager doesn't</font>

654
00:22:39,270 --> 00:22:43,918
trust anything from the<font color="#E5E5E5"> csr except the</font>

655
00:22:41,700 --> 00:22:45,120
public and private key and obviously all

656
00:22:43,919 --> 00:22:46,740
the attributes are related to<font color="#E5E5E5"> that</font>

657
00:22:45,120 --> 00:22:48,239
everything else inside of the

658
00:22:46,740 --> 00:22:49,679
certificate<font color="#CCCCCC"> or inside of the csr is</font>

659
00:22:48,240 --> 00:22:51,600
ignored and the certificate that is

660
00:22:49,679 --> 00:22:53,220
issued is issued by the manager from the

661
00:22:51,600 --> 00:22:55,110
<font color="#E5E5E5">point of view of saying no</font><font color="#CCCCCC"> you are a</font>

662
00:22:53,220 --> 00:22:56,640
worker I am<font color="#E5E5E5"> Telling You you are</font><font color="#CCCCCC"> a worker</font>

663
00:22:55,110 --> 00:22:57,928
and this is a<font color="#E5E5E5"> certificate</font><font color="#CCCCCC"> that you</font>

664
00:22:56,640 --> 00:23:00,330
<font color="#E5E5E5">should be using they should be</font>

665
00:22:57,929 --> 00:23:01,559
presenting everyone the third one is

666
00:23:00,330 --> 00:23:03,899
after you<font color="#CCCCCC"> retrieve a signed certificate</font>

667
00:23:01,559 --> 00:23:06,149
now as a worker you can talk to any

668
00:23:03,900 --> 00:23:08,130
manager and I don't need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually put</font>

669
00:23:06,150 --> 00:23:09,840
anything on the<font color="#CCCCCC"> back end store because</font>

670
00:23:08,130 --> 00:23:11,700
any manager that receives<font color="#CCCCCC"> a TLS</font>

671
00:23:09,840 --> 00:23:13,980
connection with this new certificate can

672
00:23:11,700 --> 00:23:16,559
understand that<font color="#E5E5E5"> this is a note and now</font>

673
00:23:13,980 --> 00:23:18,150
the manager can you shoot a randomly

674
00:23:16,559 --> 00:23:20,240
generated identity inside<font color="#E5E5E5"> of that</font>

675
00:23:18,150 --> 00:23:22,919
certificate so now we<font color="#CCCCCC"> solve</font><font color="#E5E5E5"> our call</font>

676
00:23:20,240 --> 00:23:25,200
every note that joins gets a randomly

677
00:23:22,919 --> 00:23:27,240
generated ID from the<font color="#E5E5E5"> manager that is</font>

678
00:23:25,200 --> 00:23:29,100
signed by CA and it can't be faked so

679
00:23:27,240 --> 00:23:32,400
effectively we bootstrapped are an

680
00:23:29,100 --> 00:23:34,260
entity for all of our<font color="#E5E5E5"> workers in terms</font>

681
00:23:32,400 --> 00:23:36,419
of rotation one of the things<font color="#CCCCCC"> that is</font>

682
00:23:34,260 --> 00:23:37,830
<font color="#E5E5E5">really really hard in TLS is the fact</font>

683
00:23:36,419 --> 00:23:39,960
that you have to or<font color="#E5E5E5"> Katie certificates</font>

684
00:23:37,830 --> 00:23:41,760
and how many<font color="#E5E5E5"> of you haven't had downtime</font>

685
00:23:39,960 --> 00:23:43,470
or issues with certificate exploration

686
00:23:41,760 --> 00:23:45,059
<font color="#CCCCCC">where how</font><font color="#E5E5E5"> many of you haven't had to</font>

687
00:23:43,470 --> 00:23:47,280
scramble last<font color="#E5E5E5"> minute because the</font>

688
00:23:45,059 --> 00:23:49,918
certificates in X part of two<font color="#E5E5E5"> weeks so</font>

689
00:23:47,280 --> 00:23:52,470
one of the issues about TLS in mutual

690
00:23:49,919 --> 00:23:54,510
TLS is that revocation is really<font color="#E5E5E5"> really</font>

691
00:23:52,470 --> 00:23:56,130
hard so what people are doing is we're

692
00:23:54,510 --> 00:24:00,240
shortening the length of certificates

693
00:23:56,130 --> 00:24:02,070
from years before to one year at<font color="#CCCCCC"> 23</font>

694
00:24:00,240 --> 00:24:04,289
months to maybe one month maybe two

695
00:24:02,070 --> 00:24:06,510
weeks to in our system you can bring it

696
00:24:04,289 --> 00:24:08,220
all the way down<font color="#CCCCCC"> to one hour but if you</font>

697
00:24:06,510 --> 00:24:09,090
have certificates expiring every one

698
00:24:08,220 --> 00:24:11,040
hour for every<font color="#E5E5E5"> now</font>

699
00:24:09,090 --> 00:24:13,350
there's no way in hell that this can be

700
00:24:11,040 --> 00:24:15,389
a manual process and therefore i needed

701
00:24:13,350 --> 00:24:17,010
to<font color="#CCCCCC"> built in a good very</font><font color="#E5E5E5"> solid</font>

702
00:24:15,390 --> 00:24:19,680
certificate rotation for you so this is

703
00:24:17,010 --> 00:24:21,930
<font color="#E5E5E5">what we did we don't we no longer need a</font>

704
00:24:19,680 --> 00:24:23,730
certificate to the token to do the

705
00:24:21,930 --> 00:24:26,070
original bootstrap because you already

706
00:24:23,730 --> 00:24:27,960
have<font color="#CCCCCC"> an identity so what you do to</font>

707
00:24:26,070 --> 00:24:29,850
rotate a certificate as a node is you

708
00:24:27,960 --> 00:24:32,250
connect to<font color="#CCCCCC"> a new endpoint you do need</font><font color="#E5E5E5"> to</font>

709
00:24:29,850 --> 00:24:34,709
TLS you prove that you own a certain

710
00:24:32,250 --> 00:24:36,120
identity and now you get issued a new

711
00:24:34,710 --> 00:24:38,070
certificate with a slightly longer

712
00:24:36,120 --> 00:24:40,649
expiration time so it's effectively

713
00:24:38,070 --> 00:24:42,510
woody validation of certificates as time

714
00:24:40,650 --> 00:24:44,490
goes on because you<font color="#E5E5E5"> can do mutual TLS</font>

715
00:24:42,510 --> 00:24:45,750
and if at any point you're down on for

716
00:24:44,490 --> 00:24:47,400
long enough for your certificate to

717
00:24:45,750 --> 00:24:48,720
expire very effectively out of the

718
00:24:47,400 --> 00:24:50,220
cluster that is totally

719
00:24:48,720 --> 00:24:51,840
indistinguishable<font color="#CCCCCC"> from an attacker</font>

720
00:24:50,220 --> 00:24:54,180
<font color="#CCCCCC">stealing a certificate and then trying</font>

721
00:24:51,840 --> 00:24:56,370
to<font color="#E5E5E5"> use it sometime in the future so</font>

722
00:24:54,180 --> 00:24:59,640
automatic certificate a shin is a dolt

723
00:24:56,370 --> 00:25:00,929
for you worry we increasingly<font color="#E5E5E5"> effective</font>

724
00:24:59,640 --> 00:25:02,280
<font color="#CCCCCC">leery validating and adding a new</font>

725
00:25:00,930 --> 00:25:03,770
exploration we're not<font color="#CCCCCC"> increased all the</font>

726
00:25:02,280 --> 00:25:06,660
time it's just reissue a new certificate

727
00:25:03,770 --> 00:25:08,820
and we<font color="#E5E5E5"> obviously</font><font color="#CCCCCC"> wanted not to have you</font>

728
00:25:06,660 --> 00:25:11,190
depend on RCA the reason why we have it

729
00:25:08,820 --> 00:25:12,689
is so bootstrap is absolutely trivial we

730
00:25:11,190 --> 00:25:14,190
wanted<font color="#CCCCCC"> you to</font><font color="#E5E5E5"> also be able to take these</font>

731
00:25:12,690 --> 00:25:16,110
<font color="#E5E5E5">to your companies and support an</font>

732
00:25:14,190 --> 00:25:18,720
external CA so you can just<font color="#E5E5E5"> point the</font>

733
00:25:16,110 --> 00:25:20,280
managers<font color="#CCCCCC"> and say manager do not use your</font>

734
00:25:18,720 --> 00:25:22,440
local certificate authority just use

735
00:25:20,280 --> 00:25:24,090
this for about one that I have so if you

736
00:25:22,440 --> 00:25:25,560
are sophisticated enough and if you have

737
00:25:24,090 --> 00:25:27,000
a company that already has a certificate

738
00:25:25,560 --> 00:25:29,550
authority then you can effectively use

739
00:25:27,000 --> 00:25:32,160
all the managers<font color="#E5E5E5"> and all the same path</font>

740
00:25:29,550 --> 00:25:33,360
think of us<font color="#CCCCCC"> as last mile delivery for</font>

741
00:25:32,160 --> 00:25:35,700
<font color="#CCCCCC">the certificates that come from the back</font>

742
00:25:33,360 --> 00:25:37,620
in and we still manage all the rotation

743
00:25:35,700 --> 00:25:39,810
of all of the internal nodes and the

744
00:25:37,620 --> 00:25:42,419
<font color="#CCCCCC">only thing you have to expose is right</font>

745
00:25:39,810 --> 00:25:44,610
now a CF ssl kind of<font color="#E5E5E5"> API for</font>

746
00:25:42,420 --> 00:25:46,980
certificates on the back end and we do

747
00:25:44,610 --> 00:25:49,050
everything<font color="#E5E5E5"> by just forwarding the CSRs</font>

748
00:25:46,980 --> 00:25:50,610
back and forth so effectively we allow

749
00:25:49,050 --> 00:25:53,879
you to<font color="#E5E5E5"> run automatically out of the box</font>

750
00:25:50,610 --> 00:25:55,350
with a CA or you can<font color="#E5E5E5"> bring it up so now</font>

751
00:25:53,880 --> 00:25:57,420
let me<font color="#CCCCCC"> show you how easy this is to set</font>

752
00:25:55,350 --> 00:25:59,610
up<font color="#CCCCCC"> in practice let me show you swarm kit</font>

753
00:25:57,420 --> 00:26:01,680
swum kit is the base component<font color="#E5E5E5"> that is</font>

754
00:25:59,610 --> 00:26:03,389
actually imported into docker so a

755
00:26:01,680 --> 00:26:04,920
docker doctor actually imports some

756
00:26:03,390 --> 00:26:07,080
external components they're all open

757
00:26:04,920 --> 00:26:08,460
source on their own swarm kit is a

758
00:26:07,080 --> 00:26:10,379
<font color="#E5E5E5">toolkit for you to</font><font color="#CCCCCC"> build distributed</font>

759
00:26:08,460 --> 00:26:12,060
systems that has all of<font color="#E5E5E5"> this and now</font>

760
00:26:10,380 --> 00:26:15,530
it's used<font color="#CCCCCC"> into docker to actually</font>

761
00:26:12,060 --> 00:26:17,610
provide<font color="#E5E5E5"> this so I'm going to sit down</font>

762
00:26:15,530 --> 00:26:20,850
first thing I'm going to do is I'm<font color="#CCCCCC"> going</font>

763
00:26:17,610 --> 00:26:22,679
to<font color="#E5E5E5"> go over here is this big enough kick</font>

764
00:26:20,850 --> 00:26:25,330
<font color="#E5E5E5">and make it a little bigger</font>

765
00:26:22,680 --> 00:26:27,640
<font color="#CCCCCC">we'll</font><font color="#E5E5E5"> have three terminals so this is</font>

766
00:26:25,330 --> 00:26:29,889
warm kit this is effectively a slightly

767
00:26:27,640 --> 00:26:31,060
different branch of<font color="#E5E5E5"> master the only</font>

768
00:26:29,890 --> 00:26:32,800
difference over there is<font color="#E5E5E5"> that I'm</font>

769
00:26:31,060 --> 00:26:35,260
rotating every certificate every five

770
00:26:32,800 --> 00:26:36,790
minutes every saw five seconds instead

771
00:26:35,260 --> 00:26:38,650
of actually respecting the validation

772
00:26:36,790 --> 00:26:41,379
time the way that I do rotations in

773
00:26:38,650 --> 00:26:43,210
swarm by<font color="#E5E5E5"> the way is you define what the</font>

774
00:26:41,380 --> 00:26:44,710
rotation period is imagine one week and

775
00:26:43,210 --> 00:26:46,480
then what I do is I renew the

776
00:26:44,710 --> 00:26:48,760
certificate from fifty to eighty percent

777
00:26:46,480 --> 00:26:50,410
randomly assigned within that one we

778
00:26:48,760 --> 00:26:53,740
can't window and the reason why I do

779
00:26:50,410 --> 00:26:55,330
that is because thundering hurts I don't

780
00:26:53,740 --> 00:26:56,830
want all certificates if you issue a

781
00:26:55,330 --> 00:26:58,210
thousand notes and you<font color="#E5E5E5"> bring up a</font>

782
00:26:56,830 --> 00:26:59,500
thousand Isles at the same time they're

783
00:26:58,210 --> 00:27:01,300
effectively going to have their first

784
00:26:59,500 --> 00:27:02,950
certificate issued on the<font color="#CCCCCC"> same one</font>

785
00:27:01,300 --> 00:27:05,550
minute<font color="#E5E5E5"> or</font><font color="#CCCCCC"> two minute or 30 minute window</font>

786
00:27:02,950 --> 00:27:08,080
so by doing randomness on the actual

787
00:27:05,550 --> 00:27:09,909
rotation I get to uniformly distribute

788
00:27:08,080 --> 00:27:12,159
them across time and as time goes on I

789
00:27:09,910 --> 00:27:13,540
<font color="#E5E5E5">will not have spikes of issuance of</font>

790
00:27:12,160 --> 00:27:15,190
certificates and I won't have<font color="#CCCCCC"> my</font>

791
00:27:13,540 --> 00:27:17,020
managers go down because<font color="#CCCCCC"> all</font><font color="#E5E5E5"> of a sudden</font>

792
00:27:15,190 --> 00:27:19,090
everybody decided to finish your duties

793
00:27:17,020 --> 00:27:20,620
so these<font color="#E5E5E5"> are the small details that I've</font>

794
00:27:19,090 --> 00:27:22,240
had to do in the past<font color="#E5E5E5"> but I've had</font>

795
00:27:20,620 --> 00:27:24,520
downtime for in the past<font color="#E5E5E5"> and that I</font>

796
00:27:22,240 --> 00:27:26,830
<font color="#E5E5E5">baked can has very opinionated default</font>

797
00:27:24,520 --> 00:27:28,930
into the actual swamp so the only

798
00:27:26,830 --> 00:27:30,189
<font color="#CCCCCC">difference here again is this is sort</font>

799
00:27:28,930 --> 00:27:32,200
get from a circuit with five second

800
00:27:30,190 --> 00:27:33,820
rotation window so the first thing I'm

801
00:27:32,200 --> 00:27:35,200
going to do and docker is a lot<font color="#CCCCCC"> easier</font>

802
00:27:33,820 --> 00:27:37,000
than<font color="#E5E5E5"> this this is like the underlying</font>

803
00:27:35,200 --> 00:27:39,400
component so<font color="#CCCCCC"> it's a little bit</font><font color="#E5E5E5"> more a</font>

804
00:27:37,000 --> 00:27:40,210
little bit harder<font color="#CCCCCC"> to digest but the</font>

805
00:27:39,400 --> 00:27:41,680
first<font color="#E5E5E5"> thing I'm going to do is I'm going</font>

806
00:27:40,210 --> 00:27:43,570
<font color="#CCCCCC">to run a note this</font><font color="#E5E5E5"> is going to be the</font>

807
00:27:41,680 --> 00:27:45,370
first manager this is going<font color="#E5E5E5"> to be the</font>

808
00:27:43,570 --> 00:27:47,740
manager that one ran is going to create

809
00:27:45,370 --> 00:27:49,540
<font color="#E5E5E5">a CA issue its own certificate it start</font>

810
00:27:47,740 --> 00:27:50,920
rotating its own certificate for now

811
00:27:49,540 --> 00:27:52,600
it's going<font color="#E5E5E5"> to be isolated</font><font color="#CCCCCC"> it's going to</font>

812
00:27:50,920 --> 00:27:55,240
<font color="#E5E5E5">be</font><font color="#CCCCCC"> a net and manager of</font><font color="#E5E5E5"> one with a</font>

813
00:27:52,600 --> 00:27:56,709
network of one so once i run this you

814
00:27:55,240 --> 00:27:58,390
can see a bunch of things here it

815
00:27:56,710 --> 00:28:00,130
actually created a certificate it

816
00:27:58,390 --> 00:28:01,990
scheduled a certificate renewal in now

817
00:28:00,130 --> 00:28:04,360
every five seconds you're going<font color="#E5E5E5"> to see a</font>

818
00:28:01,990 --> 00:28:06,010
<font color="#CCCCCC">new certificate with a role manager</font>

819
00:28:04,360 --> 00:28:08,409
being issued so you see these

820
00:28:06,010 --> 00:28:09,730
certificates are<font color="#CCCCCC"> being renew old and all</font>

821
00:28:08,410 --> 00:28:12,490
these are being scheduled and it's

822
00:28:09,730 --> 00:28:13,750
taking care of<font color="#E5E5E5"> itself</font><font color="#CCCCCC"> okay so now this</font>

823
00:28:12,490 --> 00:28:15,460
network is not very interesting right

824
00:28:13,750 --> 00:28:17,260
because<font color="#CCCCCC"> we have one note and it's</font>

825
00:28:15,460 --> 00:28:19,690
rotating it's on certificates so what

826
00:28:17,260 --> 00:28:22,330
actually need is to join a new node to

827
00:28:19,690 --> 00:28:23,800
the network in this it for this we need

828
00:28:22,330 --> 00:28:25,840
a token right we<font color="#E5E5E5"> need the secret token</font>

829
00:28:23,800 --> 00:28:26,740
that I showed<font color="#CCCCCC"> you how</font><font color="#E5E5E5"> it was composed so</font>

830
00:28:25,840 --> 00:28:30,639
what I'm going to do is I'm<font color="#E5E5E5"> going to</font>

831
00:28:26,740 --> 00:28:32,770
inspect the cluster and I'm going<font color="#E5E5E5"> to do</font>

832
00:28:30,640 --> 00:28:34,330
swarm CTL which is a controller in

833
00:28:32,770 --> 00:28:36,158
select inspect the default

834
00:28:34,330 --> 00:28:39,460
and it's going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> give</font><font color="#CCCCCC"> me joint Owens</font>

835
00:28:36,159 --> 00:28:41,559
one for the manager one for the work so

836
00:28:39,460 --> 00:28:43,240
if you want to<font color="#CCCCCC"> join a worker no you just</font>

837
00:28:41,559 --> 00:28:45,070
provide<font color="#CCCCCC"> the token if you want to join a</font>

838
00:28:43,240 --> 00:28:46,779
manager no you just provide<font color="#CCCCCC"> the manager</font>

839
00:28:45,070 --> 00:28:48,700
took it everything else is transparent

840
00:28:46,779 --> 00:28:50,500
free and you can also do promotions and

841
00:28:48,700 --> 00:28:53,169
emotions<font color="#CCCCCC"> as</font><font color="#E5E5E5"> I'm gonna choke but for now</font>

842
00:28:50,500 --> 00:28:56,289
let's copy this<font color="#CCCCCC"> working token we have it</font>

843
00:28:53,169 --> 00:28:58,450
and now let's join<font color="#E5E5E5"> a new note and how I</font>

844
00:28:56,289 --> 00:29:01,179
how do<font color="#E5E5E5"> I join in your note well it's as</font>

845
00:28:58,450 --> 00:29:03,100
simple as saying create a<font color="#E5E5E5"> new node join</font>

846
00:29:01,179 --> 00:29:05,289
to this address and this is your<font color="#E5E5E5"> joint</font>

847
00:29:03,100 --> 00:29:08,439
<font color="#E5E5E5">Tony and the joint</font><font color="#CCCCCC"> token is the thing in</font>

848
00:29:05,289 --> 00:29:10,899
<font color="#CCCCCC">white so once</font><font color="#E5E5E5"> i press enter now i have</font>

849
00:29:08,440 --> 00:29:13,360
two nodes and our swarm and you can see

850
00:29:10,899 --> 00:29:15,399
that<font color="#E5E5E5"> this note is an agent is actually a</font>

851
00:29:13,360 --> 00:29:16,750
worker and<font color="#E5E5E5"> it's renewing certificates</font>

852
00:29:15,399 --> 00:29:18,969
every five seconds you see the role

853
00:29:16,750 --> 00:29:20,710
swarm worker and every<font color="#E5E5E5"> five seconds is</font>

854
00:29:18,970 --> 00:29:22,330
renewing surge of got automatically and

855
00:29:20,710 --> 00:29:24,429
<font color="#E5E5E5">i can show you this in two ways number</font>

856
00:29:22,330 --> 00:29:26,408
one going to list the nodes<font color="#E5E5E5"> of the</font>

857
00:29:24,429 --> 00:29:27,850
network we have a manager here which is

858
00:29:26,409 --> 00:29:29,889
the first<font color="#CCCCCC"> thing that we created it has a</font>

859
00:29:27,850 --> 00:29:31,090
certificate authority it is the one that

860
00:29:29,889 --> 00:29:33,789
is<font color="#E5E5E5"> responsible for issuing certificates</font>

861
00:29:31,090 --> 00:29:35,500
we have a note that is effectively not

862
00:29:33,789 --> 00:29:36,940
doing anything here and it's actually

863
00:29:35,500 --> 00:29:40,269
<font color="#CCCCCC">not responsible for running anything</font>

864
00:29:36,940 --> 00:29:43,360
right now the cooler part is if<font color="#CCCCCC"> i do</font>

865
00:29:40,269 --> 00:29:44,590
this<font color="#CCCCCC"> i do openssl inside of a watch and</font>

866
00:29:43,360 --> 00:29:46,360
now we're<font color="#E5E5E5"> actually looking at</font>

867
00:29:44,590 --> 00:29:48,820
certificates so now what<font color="#E5E5E5"> you're seeing</font>

868
00:29:46,360 --> 00:29:51,549
what you're expecting to see<font color="#CCCCCC"> you have a</font>

869
00:29:48,820 --> 00:29:54,720
note that is a worker and therefore the

870
00:29:51,549 --> 00:29:57,010
<font color="#CCCCCC">oh you</font><font color="#E5E5E5"> of the note is worker vou is here</font>

871
00:29:54,720 --> 00:29:58,269
this is when we expect<font color="#E5E5E5"> it because we're</font>

872
00:29:57,010 --> 00:29:59,649
expecting the sir ticket of the night of

873
00:29:58,269 --> 00:30:00,929
the worker the second thing they were

874
00:29:59,649 --> 00:30:02,860
expecting is a randomly generated

875
00:30:00,929 --> 00:30:05,019
<font color="#E5E5E5">identifier that is going to identify</font>

876
00:30:02,860 --> 00:30:07,779
<font color="#CCCCCC">this note</font><font color="#E5E5E5"> for the lifetime of the node</font>

877
00:30:05,019 --> 00:30:09,940
in the cluster and so every<font color="#E5E5E5"> five seconds</font>

878
00:30:07,779 --> 00:30:11,500
you see the certificate rotating but

879
00:30:09,940 --> 00:30:12,850
notes the portions that are<font color="#E5E5E5"> actually</font>

880
00:30:11,500 --> 00:30:15,100
being rotated which are the portions

881
00:30:12,850 --> 00:30:16,959
that show and<font color="#E5E5E5"> what the only thing that</font>

882
00:30:15,100 --> 00:30:19,600
is being changed is obviously the public

883
00:30:16,960 --> 00:30:21,429
key product key material and the serial

884
00:30:19,600 --> 00:30:23,260
number of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> certificate because all of</font>

885
00:30:21,429 --> 00:30:25,510
the other attributes are attributes of

886
00:30:23,260 --> 00:30:27,100
the<font color="#E5E5E5"> note the identity is constant the</font>

887
00:30:25,510 --> 00:30:28,870
worker is the rule is constant

888
00:30:27,100 --> 00:30:31,090
everything<font color="#E5E5E5"> this constant except the</font>

889
00:30:28,870 --> 00:30:32,320
actual certificate so you see that<font color="#E5E5E5"> this</font>

890
00:30:31,090 --> 00:30:34,120
is the actual rotation that you would

891
00:30:32,320 --> 00:30:35,799
have<font color="#E5E5E5"> to do manually happening every five</font>

892
00:30:34,120 --> 00:30:37,870
seconds for every<font color="#E5E5E5"> single node in the</font>

893
00:30:35,799 --> 00:30:39,460
network with no connections dropped you

894
00:30:37,870 --> 00:30:41,379
could have 10,000 notes connected to a

895
00:30:39,460 --> 00:30:42,850
manager and the manager can rotate all

896
00:30:41,380 --> 00:30:44,380
the certificates wrong under the

897
00:30:42,850 --> 00:30:46,080
connections and nothing gets dropped

898
00:30:44,380 --> 00:30:47,669
because everything is being handled

899
00:30:46,080 --> 00:30:50,129
in a transparent fashion<font color="#E5E5E5"> and in atomic</font>

900
00:30:47,669 --> 00:30:51,360
fashion so this is<font color="#E5E5E5"> really cool but now</font>

901
00:30:50,130 --> 00:30:53,909
let me show you this is actually<font color="#CCCCCC"> working</font>

902
00:30:51,360 --> 00:30:57,678
so i'm not<font color="#E5E5E5"> going to stop this watch i'm</font>

903
00:30:53,909 --> 00:31:01,080
going<font color="#CCCCCC"> to go to a new window over here</font>

904
00:30:57,679 --> 00:31:02,340
and<font color="#E5E5E5"> i'm going to do the following i'm</font>

905
00:31:01,080 --> 00:31:05,519
going<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> know what LS we see our</font>

906
00:31:02,340 --> 00:31:07,649
manager we see our worker and<font color="#E5E5E5"> i showed</font>

907
00:31:05,519 --> 00:31:09,120
you on the swatch that this oh you is

908
00:31:07,649 --> 00:31:10,979
worker correct because it's a worker

909
00:31:09,120 --> 00:31:12,739
note so now<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> going to do</font><font color="#CCCCCC"> is I got to</font>

910
00:31:10,980 --> 00:31:15,929
do something I'm going to do a promotion

911
00:31:12,740 --> 00:31:18,059
swarm<font color="#E5E5E5"> kit and docker has the concept of</font>

912
00:31:15,929 --> 00:31:19,559
promotion which is as I told<font color="#E5E5E5"> you</font>

913
00:31:18,059 --> 00:31:20,850
managers you can<font color="#E5E5E5"> increase the number of</font>

914
00:31:19,559 --> 00:31:22,889
managers to have a<font color="#E5E5E5"> high availability</font>

915
00:31:20,850 --> 00:31:24,719
cluster when you made this super easy

916
00:31:22,889 --> 00:31:26,549
<font color="#E5E5E5">for you to build this and so you can</font>

917
00:31:24,720 --> 00:31:29,010
<font color="#E5E5E5">promote any normal node to be a manager</font>

918
00:31:26,549 --> 00:31:30,510
or demote any manager to be a worker now

919
00:31:29,010 --> 00:31:32,429
and when you<font color="#E5E5E5"> promote them to be a</font>

920
00:31:30,510 --> 00:31:34,350
<font color="#E5E5E5">manager now they become privileged you</font>

921
00:31:32,429 --> 00:31:36,419
just replicated your<font color="#CCCCCC"> CA you now have a</font>

922
00:31:34,350 --> 00:31:38,010
<font color="#E5E5E5">high availability CA and you have high</font>

923
00:31:36,419 --> 00:31:40,289
<font color="#CCCCCC">veloute system because they're all</font>

924
00:31:38,010 --> 00:31:42,179
participating in<font color="#CCCCCC"> a quarrel so the moment</font>

925
00:31:40,289 --> 00:31:44,908
<font color="#CCCCCC">I promote this note by providing the ID</font>

926
00:31:42,179 --> 00:31:47,490
a thing<font color="#E5E5E5"> their way in a seat is we're</font>

927
00:31:44,909 --> 00:31:50,100
going<font color="#E5E5E5"> to see this changing oh you now is</font>

928
00:31:47,490 --> 00:31:51,510
for manager nothing else changed but now

929
00:31:50,100 --> 00:31:53,730
<font color="#E5E5E5">the privilege of this node in the</font>

930
00:31:51,510 --> 00:31:55,260
network is for manager and it keeps

931
00:31:53,730 --> 00:31:57,389
rotating the certificate every five

932
00:31:55,260 --> 00:31:59,340
seconds and<font color="#E5E5E5"> we can actually go back and</font>

933
00:31:57,389 --> 00:32:01,110
actually just demote the note<font color="#E5E5E5"> and say</font>

934
00:31:59,340 --> 00:32:03,480
you can no longer<font color="#CCCCCC"> be a manager and at</font>

935
00:32:01,110 --> 00:32:06,149
this point it no longer<font color="#E5E5E5"> has any manager</font>

936
00:32:03,480 --> 00:32:07,889
privileges in the actual in the actual

937
00:32:06,149 --> 00:32:09,840
cluster anymore and it just got demoted

938
00:32:07,889 --> 00:32:12,178
to the enormous and you can do this

939
00:32:09,840 --> 00:32:13,860
transparently scale up and<font color="#E5E5E5"> down and all</font>

940
00:32:12,179 --> 00:32:16,049
the certificates always being rotated in

941
00:32:13,860 --> 00:32:17,939
the<font color="#E5E5E5"> identities are being taken care of</font>

942
00:32:16,049 --> 00:32:20,370
this free so<font color="#E5E5E5"> you never have to worry</font>

943
00:32:17,940 --> 00:32:22,679
about certificates if you notice we did

944
00:32:20,370 --> 00:32:24,330
two things we needed an it and the

945
00:32:22,679 --> 00:32:26,279
manager and we didn't join in a worker

946
00:32:24,330 --> 00:32:30,899
from this moment on everything else is

947
00:32:26,279 --> 00:32:37,350
they can care of for us so why is this

948
00:32:30,899 --> 00:32:39,870
important well the reason the manager

949
00:32:37,350 --> 00:32:41,370
question if<font color="#CCCCCC"> the manager crashes no</font>

950
00:32:39,870 --> 00:32:42,510
certificates can be renewed and this is

951
00:32:41,370 --> 00:32:43,860
why you should have multiple managers

952
00:32:42,510 --> 00:32:45,029
because if you have multiple managers

953
00:32:43,860 --> 00:32:50,158
and you have a high hill though you see

954
00:32:45,029 --> 00:32:51,539
ever<font color="#CCCCCC"> automatically you can't be promoted</font>

955
00:32:50,159 --> 00:32:52,740
because a manager has familiar<font color="#CCCCCC"> because</font>

956
00:32:51,539 --> 00:32:53,820
if a worker could promote itself to

957
00:32:52,740 --> 00:32:55,590
manager then<font color="#CCCCCC"> the worker would be</font>

958
00:32:53,820 --> 00:32:57,418
<font color="#E5E5E5">imagined so from a security perspective</font>

959
00:32:55,590 --> 00:32:59,250
workers are completely and privileged

960
00:32:57,419 --> 00:33:00,900
which is by the way I

961
00:32:59,250 --> 00:33:03,300
follow these privileged here the worker

962
00:33:00,900 --> 00:33:04,710
only has access to the resources of the

963
00:33:03,300 --> 00:33:06,360
work it needs if the worker gets

964
00:33:04,710 --> 00:33:08,910
scheduled a container it only has access

965
00:33:06,360 --> 00:33:11,100
to the secrets the resources the IPS and

966
00:33:08,910 --> 00:33:12,960
the code of the containers that needs to

967
00:33:11,100 --> 00:33:14,310
run this<font color="#CCCCCC"> nav access to other networks is</font>

968
00:33:12,960 --> 00:33:16,110
now have access to whether I imagine

969
00:33:14,310 --> 00:33:17,460
isn't have access to anything else only

970
00:33:16,110 --> 00:33:18,540
the managers are privileged and I'm

971
00:33:17,460 --> 00:33:19,920
actually going<font color="#E5E5E5"> to go forward</font><font color="#CCCCCC"> with this</font>

972
00:33:18,540 --> 00:33:21,389
and I'm<font color="#E5E5E5"> going to go least privilege all</font>

973
00:33:19,920 --> 00:33:23,160
the way I'm going to<font color="#E5E5E5"> make the managers</font>

974
00:33:21,390 --> 00:33:25,200
<font color="#E5E5E5">eventually even trust it so I'm going</font><font color="#CCCCCC"> to</font>

975
00:33:23,160 --> 00:33:26,970
make the workers not even be able to

976
00:33:25,200 --> 00:33:28,290
trust the managers such that the manager

977
00:33:26,970 --> 00:33:33,830
can't force the worker to run arbitrary

978
00:33:28,290 --> 00:33:40,500
code anyway from<font color="#CCCCCC"> a first pin but</font>

979
00:33:33,830 --> 00:33:42,960
authenticate it uses mutual TLS it has a

980
00:33:40,500 --> 00:33:46,830
certificate connects to an end point<font color="#CCCCCC"> %</font>

981
00:33:42,960 --> 00:33:50,240
<font color="#CCCCCC">supplying certificate thus the dance you</font>

982
00:33:46,830 --> 00:33:50,240
create a manager that<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> to work</font>

983
00:33:50,330 --> 00:33:55,379
talk it what why<font color="#E5E5E5"> don't like because</font><font color="#CCCCCC"> you</font>

984
00:33:54,120 --> 00:33:57,120
don't have<font color="#CCCCCC"> a secret token the secret</font>

985
00:33:55,380 --> 00:33:59,610
token has a component of a<font color="#E5E5E5"> secret that</font>

986
00:33:57,120 --> 00:34:03,179
<font color="#CCCCCC">only you have that</font><font color="#E5E5E5"> you only you provide</font>

987
00:33:59,610 --> 00:34:05,340
it to your<font color="#E5E5E5"> your</font><font color="#CCCCCC"> Amazon Cloud watch</font>

988
00:34:03,180 --> 00:34:07,530
whatever or to the expense to the thing

989
00:34:05,340 --> 00:34:09,149
that scales your notes and only that

990
00:34:07,530 --> 00:34:10,980
token is allowed<font color="#CCCCCC"> to actually join you</font>

991
00:34:09,149 --> 00:34:12,870
nose into the network so that's

992
00:34:10,980 --> 00:34:15,480
effectively a secret randomly generated

993
00:34:12,870 --> 00:34:16,589
code that nobody else has except you<font color="#CCCCCC"> and</font>

994
00:34:15,480 --> 00:34:25,260
that's<font color="#E5E5E5"> how the initial communication</font>

995
00:34:16,590 --> 00:34:27,360
goes at least it should know so yeah on

996
00:34:25,260 --> 00:34:28,980
<font color="#E5E5E5">the manager with a manager privilege so</font>

997
00:34:27,360 --> 00:34:30,210
if you have access to the epi of the

998
00:34:28,980 --> 00:34:32,429
manager and you're an authentic

999
00:34:30,210 --> 00:34:33,540
administrator with root on<font color="#CCCCCC"> the note that</font>

1000
00:34:32,429 --> 00:34:34,980
is running<font color="#CCCCCC"> the manager then you</font>

1001
00:34:33,540 --> 00:34:37,550
effectively can list the code if you

1002
00:34:34,980 --> 00:34:40,679
<font color="#CCCCCC">were</font><font color="#E5E5E5"> a worker I couldn't list a good</font>

1003
00:34:37,550 --> 00:34:42,540
perfect<font color="#E5E5E5"> two now at this point let's wait</font>

1004
00:34:40,679 --> 00:34:44,550
for<font color="#E5E5E5"> the endin at this point we</font>

1005
00:34:42,540 --> 00:34:46,560
effectively have workers that have their

1006
00:34:44,550 --> 00:34:48,389
own identities so every single manager

1007
00:34:46,560 --> 00:34:50,009
and every<font color="#E5E5E5"> single worker has its own</font>

1008
00:34:48,389 --> 00:34:51,750
certificate that it can't participate in

1009
00:34:50,010 --> 00:34:53,520
the system and say this is the random

1010
00:34:51,750 --> 00:34:55,320
idea that I am<font color="#CCCCCC"> in this is the privilege</font>

1011
00:34:53,520 --> 00:34:57,630
I have in your network but this is not

1012
00:34:55,320 --> 00:35:00,690
what we want this is always has always

1013
00:34:57,630 --> 00:35:02,370
<font color="#CCCCCC">been about</font><font color="#E5E5E5"> application identities this</font>

1014
00:35:00,690 --> 00:35:04,080
has always<font color="#E5E5E5"> been about applications and</font>

1015
00:35:02,370 --> 00:35:05,970
services connecting to each other so

1016
00:35:04,080 --> 00:35:08,640
what we actually want is<font color="#CCCCCC"> not one node</font>

1017
00:35:05,970 --> 00:35:11,939
one ID we needed one node one ID because

1018
00:35:08,640 --> 00:35:13,890
we want one app one ID

1019
00:35:11,940 --> 00:35:15,839
what we actually want is your

1020
00:35:13,890 --> 00:35:17,549
orchestration system to provide you

1021
00:35:15,839 --> 00:35:18,569
automatically identities for every

1022
00:35:17,550 --> 00:35:20,790
single<font color="#E5E5E5"> one of your applications</font>

1023
00:35:18,569 --> 00:35:22,650
automatically so what should be

1024
00:35:20,790 --> 00:35:24,900
happening is you have an orchestration

1025
00:35:22,650 --> 00:35:26,550
system you deploy an engine X you deploy

1026
00:35:24,900 --> 00:35:28,680
a proxy you deploy your Ruby on Rails

1027
00:35:26,550 --> 00:35:30,510
application do deploy whatever it is and

1028
00:35:28,680 --> 00:35:32,790
your orchestration system should<font color="#CCCCCC"> be</font>

1029
00:35:30,510 --> 00:35:35,460
responsible<font color="#E5E5E5"> for getting a certificate</font>

1030
00:35:32,790 --> 00:35:38,069
with the properties of your application

1031
00:35:35,460 --> 00:35:40,890
and securely deliver it to your node

1032
00:35:38,069 --> 00:35:42,119
with the certificate<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the note so now</font>

1033
00:35:40,890 --> 00:35:44,009
these certificates that we built for

1034
00:35:42,119 --> 00:35:45,569
notes were just a way to<font color="#E5E5E5"> look trap what</font>

1035
00:35:44,010 --> 00:35:47,579
we really want it which is which is

1036
00:35:45,569 --> 00:35:49,259
<font color="#E5E5E5">every application has its own</font>

1037
00:35:47,579 --> 00:35:50,880
certificate when its own properties

1038
00:35:49,260 --> 00:35:52,829
exactly like the notes have and

1039
00:35:50,880 --> 00:35:54,480
everything<font color="#CCCCCC"> is rotated automatically this</font>

1040
00:35:52,829 --> 00:35:56,520
is the<font color="#CCCCCC"> Holy Grail this is the square</font>

1041
00:35:54,480 --> 00:35:59,010
model this is mutual TLS between all the

1042
00:35:56,520 --> 00:36:00,930
services<font color="#CCCCCC"> and so we should be using</font>

1043
00:35:59,010 --> 00:36:02,550
mutual TLS for every<font color="#E5E5E5"> single service</font>

1044
00:36:00,930 --> 00:36:03,750
authentication and this effectively

1045
00:36:02,550 --> 00:36:05,670
removes all of the need for your

1046
00:36:03,750 --> 00:36:07,050
firewalls and allows you to have flat

1047
00:36:05,670 --> 00:36:09,329
networks because you're effectively

1048
00:36:07,050 --> 00:36:10,740
exposing TLS which is the same thing

1049
00:36:09,329 --> 00:36:12,420
<font color="#E5E5E5">that you'd exposed to the outside in the</font>

1050
00:36:10,740 --> 00:36:13,740
first place so<font color="#CCCCCC"> you</font><font color="#E5E5E5"> already have</font><font color="#CCCCCC"> the same</font>

1051
00:36:12,420 --> 00:36:15,960
surface of exposure and you're actually

1052
00:36:13,740 --> 00:36:18,390
concentrating it into one system of

1053
00:36:15,960 --> 00:36:21,119
authentication<font color="#E5E5E5"> authorization the way</font>

1054
00:36:18,390 --> 00:36:23,310
this<font color="#E5E5E5"> works is in the CN of a node you</font>

1055
00:36:21,119 --> 00:36:26,310
have a<font color="#E5E5E5"> random ID that describes the node</font>

1056
00:36:23,310 --> 00:36:27,450
identifier in an application<font color="#E5E5E5"> the CN</font><font color="#CCCCCC"> disk</font>

1057
00:36:26,310 --> 00:36:29,640
<font color="#E5E5E5">law describes what the application</font>

1058
00:36:27,450 --> 00:36:32,669
actually is so in this case<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have a</font>

1059
00:36:29,640 --> 00:36:35,578
go app that is called a<font color="#E5E5E5"> Pio one for</font>

1060
00:36:32,670 --> 00:36:37,440
<font color="#E5E5E5">example it's a payments API or it's some</font>

1061
00:36:35,579 --> 00:36:39,270
kind of authorization API and then you

1062
00:36:37,440 --> 00:36:42,119
have a database which is<font color="#E5E5E5"> my sequel and</font>

1063
00:36:39,270 --> 00:36:45,450
it has DB 01 these names have meaning

1064
00:36:42,119 --> 00:36:47,280
the moment this<font color="#CCCCCC"> go</font><font color="#E5E5E5"> application wants to</font>

1065
00:36:45,450 --> 00:36:49,618
connect to database it connects the DB

1066
00:36:47,280 --> 00:36:51,810
01 and it will verify that the mutual

1067
00:36:49,619 --> 00:36:53,730
TLS handshake is providing a certificate

1068
00:36:51,810 --> 00:36:57,060
for something called<font color="#E5E5E5"> the video on it can</font>

1069
00:36:53,730 --> 00:36:59,490
t be 0 to kent<font color="#CCCCCC"> BTW bo2</font><font color="#E5E5E5"> can be DB 0 3 no</font>

1070
00:36:57,060 --> 00:37:00,839
other application or service<font color="#CCCCCC"> or node on</font>

1071
00:36:59,490 --> 00:37:02,490
the network can fake that because

1072
00:37:00,839 --> 00:37:05,549
another application it has that exact

1073
00:37:02,490 --> 00:37:07,319
certificate and now that we have

1074
00:37:05,550 --> 00:37:09,180
authentication on the applications we

1075
00:37:07,319 --> 00:37:11,040
can go even one step further and we<font color="#CCCCCC"> can</font>

1076
00:37:09,180 --> 00:37:12,328
<font color="#E5E5E5">actually have authorization so it's not</font>

1077
00:37:11,040 --> 00:37:13,920
<font color="#CCCCCC">just about me knowing that I'm</font>

1078
00:37:12,329 --> 00:37:15,450
connecting to a database or the API

1079
00:37:13,920 --> 00:37:18,000
knowing that it's connecting to Redis

1080
00:37:15,450 --> 00:37:20,279
it's really about knowing what kind of

1081
00:37:18,000 --> 00:37:22,349
properties the person or the service

1082
00:37:20,280 --> 00:37:24,720
that I'm connecting two hats so we know

1083
00:37:22,349 --> 00:37:25,050
<font color="#CCCCCC">that this API has acts as this DV sure</font>

1084
00:37:24,720 --> 00:37:26,819
we know

1085
00:37:25,050 --> 00:37:29,340
the identities but we also want to know

1086
00:37:26,820 --> 00:37:31,170
what<font color="#E5E5E5"> kind of credit card what kind of</font>

1087
00:37:29,340 --> 00:37:33,780
database is it in what<font color="#E5E5E5"> kind of</font>

1088
00:37:31,170 --> 00:37:35,280
environment hesitant<font color="#E5E5E5"> for example this</font>

1089
00:37:33,780 --> 00:37:37,740
case that<font color="#E5E5E5"> database is a production</font>

1090
00:37:35,280 --> 00:37:39,990
database<font color="#E5E5E5"> I should not let my API connect</font>

1091
00:37:37,740 --> 00:37:41,970
to DB a one in stage because they're

1092
00:37:39,990 --> 00:37:43,680
totally different systems and I also

1093
00:37:41,970 --> 00:37:46,020
know this<font color="#E5E5E5"> is a credit card database on</font>

1094
00:37:43,680 --> 00:37:48,569
<font color="#CCCCCC">you owe you the</font><font color="#E5E5E5"> organization so if i</font>

1095
00:37:46,020 --> 00:37:50,670
connect<font color="#CCCCCC"> to DB 01 on another of you this</font>

1096
00:37:48,570 --> 00:37:52,620
should not work regardless and if you

1097
00:37:50,670 --> 00:37:54,780
extrapolate from this you can now have

1098
00:37:52,620 --> 00:37:56,850
something<font color="#E5E5E5"> really cool we built something</font>

1099
00:37:54,780 --> 00:37:59,370
called guard dog which was<font color="#CCCCCC"> the framework</font>

1100
00:37:56,850 --> 00:38:01,220
that were effectively a framework that

1101
00:37:59,370 --> 00:38:03,270
<font color="#E5E5E5">was across all of your applications</font>

1102
00:38:01,220 --> 00:38:04,919
everything was transparently taken care

1103
00:38:03,270 --> 00:38:07,410
for developers developers had to create

1104
00:38:04,920 --> 00:38:08,670
one file to have mutual TLS work the

1105
00:38:07,410 --> 00:38:10,799
moment<font color="#CCCCCC"> of file like this</font><font color="#E5E5E5"> was created</font>

1106
00:38:08,670 --> 00:38:12,480
<font color="#E5E5E5">they were describing how their</font>

1107
00:38:10,800 --> 00:38:15,030
application behaved within our network

1108
00:38:12,480 --> 00:38:18,660
number one they were describing that the

1109
00:38:15,030 --> 00:38:21,150
resource user<font color="#CCCCCC"> slash user can only be can</font>

1110
00:38:18,660 --> 00:38:22,740
only be accessed through agate and it

1111
00:38:21,150 --> 00:38:24,450
can only be allowed by those three kinds

1112
00:38:22,740 --> 00:38:26,580
<font color="#E5E5E5">of applications so if there was an</font>

1113
00:38:24,450 --> 00:38:28,319
application there wasn't web fulfillment

1114
00:38:26,580 --> 00:38:31,259
or payments it could<font color="#E5E5E5"> not access this</font>

1115
00:38:28,320 --> 00:38:33,150
<font color="#E5E5E5">info the same thing</font><font color="#CCCCCC"> for post on user the</font>

1116
00:38:31,260 --> 00:38:35,070
same thing for delete on user so I just

1117
00:38:33,150 --> 00:38:37,140
restricted that the<font color="#E5E5E5"> only application</font>

1118
00:38:35,070 --> 00:38:41,520
that can delete users is the web

1119
00:38:37,140 --> 00:38:43,140
application and so this ACL is using the

1120
00:38:41,520 --> 00:38:45,150
properties of the certificates of the

1121
00:38:43,140 --> 00:38:46,710
services which in turn is using the

1122
00:38:45,150 --> 00:38:48,510
properties of certificates of the notes

1123
00:38:46,710 --> 00:38:50,190
to actually have a secure chain of

1124
00:38:48,510 --> 00:38:52,230
exactly<font color="#E5E5E5"> what your application should be</font>

1125
00:38:50,190 --> 00:38:54,000
doing<font color="#E5E5E5"> and by the way</font><font color="#CCCCCC"> this does</font><font color="#E5E5E5"> not</font>

1126
00:38:52,230 --> 00:38:55,560
replace<font color="#CCCCCC"> higher level tokens with its</font>

1127
00:38:54,000 --> 00:38:57,720
innovation and macaroons and things like

1128
00:38:55,560 --> 00:38:59,640
that what<font color="#E5E5E5"> this replaces is it totaled</font>

1129
00:38:57,720 --> 00:39:02,220
<font color="#E5E5E5">replaces your firewalls it allows you to</font>

1130
00:38:59,640 --> 00:39:05,640
do micro segmentation to the HTTP verb

1131
00:39:02,220 --> 00:39:07,169
all reliant on self-regenerating and

1132
00:39:05,640 --> 00:39:10,680
rotating certificates that<font color="#CCCCCC"> aren't</font>

1133
00:39:07,170 --> 00:39:12,320
handled<font color="#E5E5E5"> for you automatically so now we</font>

1134
00:39:10,680 --> 00:39:15,810
need one more<font color="#CCCCCC"> thing for</font><font color="#E5E5E5"> this to succeed</font>

1135
00:39:12,320 --> 00:39:17,820
we have a crap ton of certificates now

1136
00:39:15,810 --> 00:39:20,430
we<font color="#E5E5E5"> need a sane way to get them to the</font>

1137
00:39:17,820 --> 00:39:22,770
applications and this is where<font color="#CCCCCC"> i also</font>

1138
00:39:20,430 --> 00:39:23,879
get i get opinionated again and let<font color="#E5E5E5"> me</font>

1139
00:39:22,770 --> 00:39:25,650
<font color="#CCCCCC">show you a demo of what are we</font><font color="#E5E5E5"> actually</font>

1140
00:39:23,880 --> 00:39:29,370
building into square and something<font color="#CCCCCC"> that</font>

1141
00:39:25,650 --> 00:39:31,140
we<font color="#E5E5E5"> just merged on docker master so we go</font>

1142
00:39:29,370 --> 00:39:32,730
back<font color="#CCCCCC"> to our actual demo we still have</font>

1143
00:39:31,140 --> 00:39:34,170
our certificates rotating in the

1144
00:39:32,730 --> 00:39:35,350
background we have our worker in our

1145
00:39:34,170 --> 00:39:38,340
manager we're<font color="#E5E5E5"> going</font>

1146
00:39:35,350 --> 00:39:43,690
you<font color="#CCCCCC"> here as I'm gonna create</font><font color="#E5E5E5"> a secret</font>

1147
00:39:38,340 --> 00:39:45,040
I'm gonna<font color="#E5E5E5"> create secret create this is</font>

1148
00:39:43,690 --> 00:39:47,580
kind of big what I'm doing here

1149
00:39:45,040 --> 00:39:50,529
effectively is an echoing some kind of

1150
00:39:47,580 --> 00:39:54,370
string into a command called secret

1151
00:39:50,530 --> 00:39:56,710
create do go txt<font color="#CCCCCC"> okay so now I</font><font color="#E5E5E5"> have a</font>

1152
00:39:54,370 --> 00:39:59,140
secret and<font color="#E5E5E5"> I can show</font><font color="#CCCCCC"> you that I have a</font>

1153
00:39:56,710 --> 00:40:00,700
secret by doing secret LS and you can

1154
00:39:59,140 --> 00:40:02,589
see that<font color="#CCCCCC"> I have a secret that was</font>

1155
00:40:00,700 --> 00:40:05,049
created has a certain size and<font color="#CCCCCC"> has a</font>

1156
00:40:02,590 --> 00:40:07,720
certain digest so what<font color="#CCCCCC"> we</font><font color="#E5E5E5"> created with</font>

1157
00:40:05,050 --> 00:40:09,280
docker was we created a secret command

1158
00:40:07,720 --> 00:40:11,529
that allows you<font color="#E5E5E5"> to add secrets remove</font>

1159
00:40:09,280 --> 00:40:13,390
secrets and<font color="#CCCCCC"> associated secrets so if i</font>

1160
00:40:11,530 --> 00:40:15,580
am to create a service services the

1161
00:40:13,390 --> 00:40:17,170
<font color="#CCCCCC">concept</font><font color="#E5E5E5"> of containers in swarm you're</font>

1162
00:40:15,580 --> 00:40:18,700
not running one container you're<font color="#E5E5E5"> running</font>

1163
00:40:17,170 --> 00:40:20,290
a service which could be read as could

1164
00:40:18,700 --> 00:40:21,879
<font color="#E5E5E5">be my sequel could be whatever and then</font>

1165
00:40:20,290 --> 00:40:24,160
you can scale it with multiple instances

1166
00:40:21,880 --> 00:40:27,880
or lower instances so if i create a

1167
00:40:24,160 --> 00:40:29,250
service if i do service create you<font color="#CCCCCC"> can</font>

1168
00:40:27,880 --> 00:40:31,630
see here two things that<font color="#E5E5E5"> are interesting</font>

1169
00:40:29,250 --> 00:40:34,510
number 1 i'm going<font color="#E5E5E5"> to do service create</font>

1170
00:40:31,630 --> 00:40:37,480
i'm going to say that this service has

1171
00:40:34,510 --> 00:40:39,250
three replicas the name is test one and

1172
00:40:37,480 --> 00:40:41,440
it's an image that is alpine it's a

1173
00:40:39,250 --> 00:40:43,960
Redis<font color="#CCCCCC"> alpine so</font><font color="#E5E5E5"> I'm running three</font>

1174
00:40:41,440 --> 00:40:46,870
instances of Redis and I'm saying that I

1175
00:40:43,960 --> 00:40:48,580
need secret do go txt but more<font color="#E5E5E5"> than that</font>

1176
00:40:46,870 --> 00:40:50,830
you<font color="#E5E5E5"> can actually say I need super deal</font>

1177
00:40:48,580 --> 00:40:53,080
with<font color="#E5E5E5"> tea XD but inside of the actual</font>

1178
00:40:50,830 --> 00:40:56,380
container I want to expose it as a file

1179
00:40:53,080 --> 00:40:58,690
called yo go to doc txt so if you run

1180
00:40:56,380 --> 00:41:00,760
this you effectively have a service I

1181
00:40:58,690 --> 00:41:03,070
can show you<font color="#E5E5E5"> that we have a service call</font>

1182
00:41:00,760 --> 00:41:06,490
service LS this is our service and now

1183
00:41:03,070 --> 00:41:08,770
if I do inspect of the service we

1184
00:41:06,490 --> 00:41:13,029
<font color="#E5E5E5">actually see that the service has two</font>

1185
00:41:08,770 --> 00:41:16,990
secrets it has do go txt exposed as do

1186
00:41:13,030 --> 00:41:19,090
go txt and yoga to txt so what this

1187
00:41:16,990 --> 00:41:21,129
actually means is that inside of docker

1188
00:41:19,090 --> 00:41:22,810
when you're running darker you're

1189
00:41:21,130 --> 00:41:25,060
effectively going to have this once<font color="#E5E5E5"> you</font>

1190
00:41:22,810 --> 00:41:26,920
run a container of Redis you're

1191
00:41:25,060 --> 00:41:29,200
effectively going to have a secret call

1192
00:41:26,920 --> 00:41:31,720
under<font color="#E5E5E5"> VAR secrets and whatever name you</font>

1193
00:41:29,200 --> 00:41:34,089
want in<font color="#E5E5E5"> my case</font><font color="#CCCCCC"> it was do go txt in this</font>

1194
00:41:31,720 --> 00:41:36,399
case is a SS credential that idea why am

1195
00:41:34,090 --> 00:41:37,990
L the way that<font color="#CCCCCC"> this</font><font color="#E5E5E5"> works is it's a temp</font>

1196
00:41:36,400 --> 00:41:39,610
FS that is created inside of every

1197
00:41:37,990 --> 00:41:41,439
<font color="#E5E5E5">single one of your containers it only</font>

1198
00:41:39,610 --> 00:41:43,420
contains a secrets in memory these

1199
00:41:41,440 --> 00:41:44,980
secrets are never never sent to disk

1200
00:41:43,420 --> 00:41:46,720
they're never written to disk and their

1201
00:41:44,980 --> 00:41:48,130
dynamic they're created when your

1202
00:41:46,720 --> 00:41:50,770
container is created in there

1203
00:41:48,130 --> 00:41:52,780
only sent down to the worker nodes that

1204
00:41:50,770 --> 00:41:54,160
actually need<font color="#CCCCCC"> to run these containers no</font>

1205
00:41:52,780 --> 00:41:57,580
other worker node can have access to any

1206
00:41:54,160 --> 00:41:59,980
other of these secrets so now we<font color="#CCCCCC"> have a</font>

1207
00:41:57,580 --> 00:42:02,350
same way of distributing secrets that

1208
00:41:59,980 --> 00:42:05,170
magically appear as files this<font color="#E5E5E5"> could</font><font color="#CCCCCC"> be</font>

1209
00:42:02,350 --> 00:42:06,850
your certificate CRT or certificate or

1210
00:42:05,170 --> 00:42:08,590
key or whatever it<font color="#E5E5E5"> is the appear as a</font>

1211
00:42:06,850 --> 00:42:10,089
file you can load it on your<font color="#CCCCCC"> NJ products</font>

1212
00:42:08,590 --> 00:42:11,710
you can<font color="#E5E5E5"> lower load our new engine X you</font>

1213
00:42:10,090 --> 00:42:13,450
can load on your<font color="#CCCCCC"> postgres</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> older on</font>

1214
00:42:11,710 --> 00:42:14,920
my sequel it's effectively just a file

1215
00:42:13,450 --> 00:42:16,509
that<font color="#CCCCCC"> you have access to</font><font color="#E5E5E5"> and by the way</font>

1216
00:42:14,920 --> 00:42:18,280
you can also<font color="#E5E5E5"> control privileges and what</font>

1217
00:42:16,510 --> 00:42:20,290
users represent it as as the files in

1218
00:42:18,280 --> 00:42:22,810
memory whatever it<font color="#E5E5E5"> is but now that you</font>

1219
00:42:20,290 --> 00:42:24,910
have the actual way of distributing the

1220
00:42:22,810 --> 00:42:26,580
secrets<font color="#E5E5E5"> and you have these certificates</font>

1221
00:42:24,910 --> 00:42:29,410
that are automatically being generated

1222
00:42:26,580 --> 00:42:30,430
swarm will in the next version create

1223
00:42:29,410 --> 00:42:32,529
for every<font color="#E5E5E5"> single one of your</font>

1224
00:42:30,430 --> 00:42:34,450
applications by<font color="#E5E5E5"> default a certificate</font>

1225
00:42:32,530 --> 00:42:36,430
that you can use that is signed by the

1226
00:42:34,450 --> 00:42:38,439
ca of the whole swarm and that<font color="#E5E5E5"> everybody</font>

1227
00:42:36,430 --> 00:42:40,240
has access to so effectively where I'm

1228
00:42:38,440 --> 00:42:42,160
telling you because the next<font color="#CCCCCC"> time</font><font color="#E5E5E5"> you</font>

1229
00:42:40,240 --> 00:42:43,629
want<font color="#E5E5E5"> to run or when we release the next</font>

1230
00:42:42,160 --> 00:42:45,520
version of docker the next time that<font color="#E5E5E5"> you</font>

1231
00:42:43,630 --> 00:42:47,320
want to<font color="#E5E5E5"> run an ancient proxy that does</font>

1232
00:42:45,520 --> 00:42:49,030
mutual TLS for your application or the

1233
00:42:47,320 --> 00:42:51,130
<font color="#E5E5E5">next time that you build an API and you</font>

1234
00:42:49,030 --> 00:42:53,440
want often get your API the only thing

1235
00:42:51,130 --> 00:42:57,100
you have to do is you<font color="#CCCCCC"> have to point it</font>

1236
00:42:53,440 --> 00:43:00,010
<font color="#E5E5E5">devour run secrets service the CRT</font>

1237
00:42:57,100 --> 00:43:01,870
service sake and you have to verify that

1238
00:43:00,010 --> 00:43:03,190
you actually have an ACL that matches

1239
00:43:01,870 --> 00:43:04,839
the properties<font color="#CCCCCC"> that you want that's it</font>

1240
00:43:03,190 --> 00:43:06,880
you get your certificates they're

1241
00:43:04,840 --> 00:43:08,440
rotating automatically for you they have

1242
00:43:06,880 --> 00:43:09,910
the description of the services<font color="#E5E5E5"> that you</font>

1243
00:43:08,440 --> 00:43:11,350
<font color="#CCCCCC">describe and that you set up and</font>

1244
00:43:09,910 --> 00:43:13,089
everything else is taken care for you

1245
00:43:11,350 --> 00:43:14,980
with these two things service

1246
00:43:13,090 --> 00:43:17,050
certificates and secrets distribution

1247
00:43:14,980 --> 00:43:20,380
you<font color="#E5E5E5"> actually finally can get to mutual</font>

1248
00:43:17,050 --> 00:43:24,060
TLS by default in your infrastructure so

1249
00:43:20,380 --> 00:43:24,060
that was my talk today thank you<font color="#E5E5E5"> so much</font>

1250
00:43:29,329 --> 00:43:34,589
more questions<font color="#E5E5E5"> but where's the lifetime</font>

1251
00:43:32,190 --> 00:43:36,420
of the<font color="#CCCCCC"> six tickets</font><font color="#E5E5E5"> so yeah you get to</font>

1252
00:43:34,589 --> 00:43:38,640
define them by default nodes exist for

1253
00:43:36,420 --> 00:43:40,950
three months three months and you can

1254
00:43:38,640 --> 00:43:42,629
turn<font color="#CCCCCC"> it all the way down to one hour the</font>

1255
00:43:40,950 --> 00:43:45,930
reason why I didn't allow you to do less

1256
00:43:42,630 --> 00:43:47,279
than<font color="#E5E5E5"> one hour is because TLS has a big</font>

1257
00:43:45,930 --> 00:43:48,750
problem which actually didn't describe

1258
00:43:47,279 --> 00:43:50,760
or didn't say<font color="#CCCCCC"> that I should have said</font>

1259
00:43:48,750 --> 00:43:53,490
which is it<font color="#E5E5E5"> uses wall clocks and wall</font>

1260
00:43:50,760 --> 00:43:56,549
clocks are out of sync very often so in

1261
00:43:53,490 --> 00:43:58,470
the original POC and the original<font color="#CCCCCC"> code</font>

1262
00:43:56,549 --> 00:43:59,640
that I did I did certificates could be

1263
00:43:58,470 --> 00:44:01,740
turned all the way down to 15 minutes

1264
00:43:59,640 --> 00:44:04,348
but immediately we<font color="#E5E5E5"> noticed that when we</font>

1265
00:44:01,740 --> 00:44:07,019
are applying across multiple clouds AWS

1266
00:44:04,349 --> 00:44:08,579
<font color="#E5E5E5">digitalocean as your google cloud</font>

1267
00:44:07,019 --> 00:44:10,049
platform and we have like a thousand

1268
00:44:08,579 --> 00:44:11,819
nodes with swarm or rotating

1269
00:44:10,049 --> 00:44:13,319
certificates immediately started seeing

1270
00:44:11,819 --> 00:44:15,599
issues where nodes would be dropped off

1271
00:44:13,319 --> 00:44:17,220
because 15 minutes they would have clock

1272
00:44:15,599 --> 00:44:18,900
drifts that would not allow them to

1273
00:44:17,220 --> 00:44:19,848
rotate in time and because they thought

1274
00:44:18,900 --> 00:44:21,660
the certificate was going to be

1275
00:44:19,849 --> 00:44:23,549
<font color="#CCCCCC">available for a longer period of time</font>

1276
00:44:21,660 --> 00:44:25,230
but the<font color="#CCCCCC"> manager on the other side said</font>

1277
00:44:23,549 --> 00:44:27,119
<font color="#CCCCCC">nope this certificate is expired I no</font>

1278
00:44:25,230 --> 00:44:28,950
<font color="#E5E5E5">longer want to touch it so we</font>

1279
00:44:27,119 --> 00:44:29,910
effectively allow you to work we prevent

1280
00:44:28,950 --> 00:44:32,970
you from shooting yourself in the foot

1281
00:44:29,910 --> 00:44:35,250
and we made I made the call not we I've

1282
00:44:32,970 --> 00:44:36,868
made the call that one hour is enough

1283
00:44:35,250 --> 00:44:38,970
<font color="#E5E5E5">for you to have this if you want a</font><font color="#CCCCCC"> more</font>

1284
00:44:36,869 --> 00:44:40,559
conservative do a week early<font color="#CCCCCC"> fall three</font>

1285
00:44:38,970 --> 00:44:43,649
months and what if ugly ones what's the

1286
00:44:40,559 --> 00:44:45,240
key length of the<font color="#CCCCCC"> Killens everything is</font>

1287
00:44:43,650 --> 00:44:47,670
using ecdsa it's the<font color="#E5E5E5"> only thing I'm</font>

1288
00:44:45,240 --> 00:44:48,689
supporting right now and it's<font color="#E5E5E5"> v 256 for</font>

1289
00:44:47,670 --> 00:44:50,250
all the certificates that are<font color="#CCCCCC"> being a</font>

1290
00:44:48,690 --> 00:44:53,190
chic<font color="#CCCCCC"> and one of the reasons why this is</font>

1291
00:44:50,250 --> 00:44:54,210
P 256 and not 384 or 512 because all the

1292
00:44:53,190 --> 00:44:55,500
certificates going to be rotated every

1293
00:44:54,210 --> 00:44:57,539
three months and all the certificates

1294
00:44:55,500 --> 00:44:59,549
can be rotated<font color="#CCCCCC"> every hour so if you are</font>

1295
00:44:57,539 --> 00:45:01,470
actually wanna be paranoid you don't

1296
00:44:59,549 --> 00:45:03,390
have to be paranoid about<font color="#E5E5E5"> key length you</font>

1297
00:45:01,470 --> 00:45:04,680
can be paranoid about<font color="#E5E5E5"> a certificate</font>

1298
00:45:03,390 --> 00:45:06,690
duration which is actually something

1299
00:45:04,680 --> 00:45:10,710
that I prefer for this for the reason

1300
00:45:06,690 --> 00:45:12,450
that in go<font color="#CCCCCC"> p 386 and 35 to 25 12 is not</font>

1301
00:45:10,710 --> 00:45:14,460
a sm optimized so it's going<font color="#CCCCCC"> to take you</font>

1302
00:45:12,450 --> 00:45:15,689
20<font color="#E5E5E5"> 20 times more to do verifications an</font>

1303
00:45:14,460 --> 00:45:18,180
issue and settle as a proposal my

1304
00:45:15,690 --> 00:45:20,039
question correct so<font color="#CCCCCC"> i used to</font><font color="#E5E5E5"> 56 you</font>

1305
00:45:18,180 --> 00:45:21,299
should control your security level by

1306
00:45:20,039 --> 00:45:22,980
controlling<font color="#E5E5E5"> the time of certificates</font>

1307
00:45:21,299 --> 00:45:25,230
instead<font color="#E5E5E5"> of controlling key link in the</font>

1308
00:45:22,980 --> 00:45:27,720
future as soon as assembly comes for p3

1309
00:45:25,230 --> 00:45:28,950
384<font color="#CCCCCC"> i'm going</font><font color="#E5E5E5"> to help the CA and of</font>

1310
00:45:27,720 --> 00:45:30,419
every<font color="#E5E5E5"> single certificate to that and</font>

1311
00:45:28,950 --> 00:45:32,970
then it's also a configurable paralyzer

1312
00:45:30,420 --> 00:45:34,740
but it's again like I made some super

1313
00:45:32,970 --> 00:45:37,288
reasonable assumptions so by default you

1314
00:45:34,740 --> 00:45:39,508
have to care about nothing you spin up a

1315
00:45:37,289 --> 00:45:39,950
manager you join nodes and you never

1316
00:45:39,509 --> 00:45:47,270
think about

1317
00:45:39,950 --> 00:45:50,629
again more questions I'll be<font color="#E5E5E5"> when the</font>

1318
00:45:47,270 --> 00:45:52,190
name is<font color="#E5E5E5"> illusion of the notes</font><font color="#CCCCCC"> okay name</font>

1319
00:45:50,630 --> 00:45:54,290
resolution of those<font color="#E5E5E5"> Atlanta</font><font color="#CCCCCC"> trips so</font>

1320
00:45:52,190 --> 00:45:56,240
swarm actually does<font color="#CCCCCC"> that for you so the</font>

1321
00:45:54,290 --> 00:45:58,579
moment you create a service<font color="#E5E5E5"> you already</font>

1322
00:45:56,240 --> 00:46:00,229
<font color="#E5E5E5">have an internal dns resolution within</font>

1323
00:45:58,579 --> 00:46:01,190
all of your containers that actually

1324
00:46:00,230 --> 00:46:03,050
allow you to have name resolution

1325
00:46:01,190 --> 00:46:05,300
automatically so there's a dns server

1326
00:46:03,050 --> 00:46:07,040
that you query for DB one in DB one

1327
00:46:05,300 --> 00:46:08,750
sends you what the IP address of a

1328
00:46:07,040 --> 00:46:11,000
container is and we also<font color="#E5E5E5"> have a routing</font>

1329
00:46:08,750 --> 00:46:12,020
mesh so it<font color="#CCCCCC"> really doesn't matter so we</font>

1330
00:46:11,000 --> 00:46:14,960
use different ports for different

1331
00:46:12,020 --> 00:46:16,430
services if you hit imaginary have 100

1332
00:46:14,960 --> 00:46:19,670
notes and you<font color="#E5E5E5"> have a service running on</font>

1333
00:46:16,430 --> 00:46:21,049
20 of them 148 eh you can hit any of the

1334
00:46:19,670 --> 00:46:22,760
100 notes it doesn't matter<font color="#CCCCCC"> if they're</font>

1335
00:46:21,050 --> 00:46:24,920
<font color="#CCCCCC">running the service or not internally</font>

1336
00:46:22,760 --> 00:46:27,260
what<font color="#CCCCCC"> I do is</font><font color="#E5E5E5"> if I receive a request on</font>

1337
00:46:24,920 --> 00:46:29,180
port 8080 on a note that is not<font color="#E5E5E5"> running</font>

1338
00:46:27,260 --> 00:46:31,190
the service I do internal routing mesh

1339
00:46:29,180 --> 00:46:36,290
and I for that to the actual nodes that

1340
00:46:31,190 --> 00:46:38,380
are running service out of the<font color="#E5E5E5"> Andaluz</font>

1341
00:46:36,290 --> 00:46:41,540
<font color="#E5E5E5">hitting him she sees the answer</font><font color="#CCCCCC"> from</font>

1342
00:46:38,380 --> 00:46:42,829
know that he didn't work so actually

1343
00:46:41,540 --> 00:46:44,779
<font color="#CCCCCC">everything is transparently it's</font>

1344
00:46:42,829 --> 00:46:46,640
essentially triangular routing so

1345
00:46:44,780 --> 00:46:48,290
effectively see the original IP address

1346
00:46:46,640 --> 00:46:49,790
and you receive from the original IP

1347
00:46:48,290 --> 00:46:51,230
address from<font color="#E5E5E5"> the from the perspective of</font>

1348
00:46:49,790 --> 00:46:53,630
the caller in the receiver it's

1349
00:46:51,230 --> 00:46:55,819
effectively indifferent it's like the

1350
00:46:53,630 --> 00:46:59,660
request comes<font color="#E5E5E5"> directly but that's a</font>

1351
00:46:55,819 --> 00:47:02,089
great question other questions<font color="#E5E5E5"> doctor</font>

1352
00:46:59,660 --> 00:47:05,509
about certificates of the security

1353
00:47:02,089 --> 00:47:08,540
services so secrets are<font color="#CCCCCC"> coming for dr.</font>

1354
00:47:05,510 --> 00:47:11,119
113 and then service identities are

1355
00:47:08,540 --> 00:47:12,560
coming from 114 so as a doctor<font color="#CCCCCC"> 114 your</font>

1356
00:47:11,119 --> 00:47:15,020
probly going to be able<font color="#E5E5E5"> to just run a</font>

1357
00:47:12,560 --> 00:47:16,369
container<font color="#E5E5E5"> and then lists VAR run secrets</font>

1358
00:47:15,020 --> 00:47:19,609
and you'll<font color="#E5E5E5"> have certificates there for</font>

1359
00:47:16,369 --> 00:47:21,079
you that are ready<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use perfect</font><font color="#E5E5E5"> I'm</font>

1360
00:47:19,609 --> 00:47:24,220
gonna<font color="#E5E5E5"> be here at DN who free to ask me</font>

1361
00:47:21,079 --> 00:47:24,220
any<font color="#E5E5E5"> other questions thank</font><font color="#CCCCCC"> you so</font><font color="#E5E5E5"> much</font>

