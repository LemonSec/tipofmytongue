1
00:00:05,450 --> 00:00:11,969
what<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> I have a start so welcome sir</font>

2
00:00:09,960 --> 00:00:15,570
time<font color="#CCCCCC"> one besides it's a pleasure to be</font>

3
00:00:11,969 --> 00:00:17,730
here it's very interesting to see the

4
00:00:15,570 --> 00:00:20,580
conference growing up more<font color="#CCCCCC"> people</font><font color="#E5E5E5"> are</font>

5
00:00:17,730 --> 00:00:23,789
coming the conference is as better

6
00:00:20,580 --> 00:00:26,240
better place to be<font color="#E5E5E5"> I hope one of these</font>

7
00:00:23,789 --> 00:00:29,699
days it's not besides anymore and it's

8
00:00:26,240 --> 00:00:31,380
whatever conference name and a big

9
00:00:29,699 --> 00:00:35,100
conference because<font color="#E5E5E5"> Portugal is a nice</font>

10
00:00:31,380 --> 00:00:37,350
place<font color="#E5E5E5"> and I will help them as much as I</font>

11
00:00:35,100 --> 00:00:39,210
can they know this i will not help them

12
00:00:37,350 --> 00:00:41,610
with a logistics because that's<font color="#E5E5E5"> a pain</font>

13
00:00:39,210 --> 00:00:44,129
<font color="#E5E5E5">in the ass but</font><font color="#CCCCCC"> i will speak and I will</font>

14
00:00:41,610 --> 00:00:46,590
do whatever I can i will put the

15
00:00:44,129 --> 00:00:49,800
contacts and and everything<font color="#CCCCCC"> to help them</font>

16
00:00:46,590 --> 00:00:52,559
so it's slight start<font color="#CCCCCC"> is which is a fun</font>

17
00:00:49,800 --> 00:00:55,379
presentation why am I so<font color="#E5E5E5"> as Bruno said</font>

18
00:00:52,559 --> 00:00:58,589
I'm besides Lisbon resident speaker

19
00:00:55,379 --> 00:01:00,480
non-paid so this year I<font color="#CCCCCC"> just spoke</font><font color="#E5E5E5"> once</font>

20
00:00:58,590 --> 00:01:02,730
<font color="#E5E5E5">at</font><font color="#CCCCCC"> Siskin in Singapore and I was</font>

21
00:01:00,480 --> 00:01:04,768
<font color="#CCCCCC">thinking about stopping speaking for a</font>

22
00:01:02,730 --> 00:01:06,240
while sometimes<font color="#CCCCCC"> you get tired and then</font>

23
00:01:04,769 --> 00:01:09,030
they told me oh yeah you are speaking at

24
00:01:06,240 --> 00:01:11,280
besides so okay I have<font color="#E5E5E5"> to speak I have</font>

25
00:01:09,030 --> 00:01:15,090
to get something to to<font color="#E5E5E5"> speaks but it's</font>

26
00:01:11,280 --> 00:01:17,820
still it's my pleasure<font color="#E5E5E5"> to be here two</font>

27
00:01:15,090 --> 00:01:19,799
months ago<font color="#CCCCCC"> Forbes launched an article</font>

28
00:01:17,820 --> 00:01:22,350
with a list of<font color="#E5E5E5"> what they were calling</font>

29
00:01:19,799 --> 00:01:25,500
apple security rock stars I was in that

30
00:01:22,350 --> 00:01:28,619
list because allegedly I was called to

31
00:01:25,500 --> 00:01:31,110
the mothership meaning California for

32
00:01:28,619 --> 00:01:33,090
kick-starting the<font color="#CCCCCC"> Apple security bug</font>

33
00:01:31,110 --> 00:01:36,180
bounty I cannot tell you if it's true or

34
00:01:33,090 --> 00:01:38,490
nuts I didn't cite any NDA so I'm

35
00:01:36,180 --> 00:01:42,659
<font color="#E5E5E5">telling you that</font><font color="#CCCCCC"> I was there if you ever</font>

36
00:01:38,490 --> 00:01:45,270
<font color="#E5E5E5">have any any bug in iOS Mac OS and you</font>

37
00:01:42,659 --> 00:01:47,970
want to disclose to<font color="#E5E5E5"> a pole you</font><font color="#CCCCCC"> can</font>

38
00:01:45,270 --> 00:01:50,429
contact them feel free<font color="#E5E5E5"> then they will be</font>

39
00:01:47,970 --> 00:01:52,170
open to to you or if you want if you

40
00:01:50,430 --> 00:01:55,229
have something really interesting I can

41
00:01:52,170 --> 00:01:57,630
help you<font color="#E5E5E5"> directing to the right guys</font>

42
00:01:55,229 --> 00:01:59,759
inside I will not take<font color="#E5E5E5"> a fierce or</font>

43
00:01:57,630 --> 00:02:02,070
anything I will just tell you this guy

44
00:01:59,759 --> 00:02:04,860
is there and there there's a guy from

45
00:02:02,070 --> 00:02:08,068
Microsoft Jason which is a<font color="#E5E5E5"> very nice guy</font>

46
00:02:04,860 --> 00:02:09,989
<font color="#E5E5E5">you just</font><font color="#CCCCCC"> moved to to Microsoft to I</font><font color="#E5E5E5"> poll</font>

47
00:02:08,068 --> 00:02:12,269
from Microsoft and is managing the the

48
00:02:09,989 --> 00:02:13,420
bug bounty program there so I<font color="#E5E5E5"> know the</font>

49
00:02:12,270 --> 00:02:16,580
guys that

50
00:02:13,420 --> 00:02:19,220
get this stuff<font color="#CCCCCC"> I work for</font><font color="#E5E5E5"> this company</font>

51
00:02:16,580 --> 00:02:21,110
Sentinel one which is<font color="#E5E5E5"> the next</font>

52
00:02:19,220 --> 00:02:23,659
generation AV what is called<font color="#E5E5E5"> next</font>

53
00:02:21,110 --> 00:02:26,299
<font color="#E5E5E5">generation AZ helped to create the Mac</font>

54
00:02:23,659 --> 00:02:28,760
products at<font color="#CCCCCC"> the first person i created</font>

55
00:02:26,299 --> 00:02:30,319
with another colleague right now I don't

56
00:02:28,760 --> 00:02:32,810
have anything to<font color="#E5E5E5"> do with development I</font>

57
00:02:30,319 --> 00:02:35,030
just break stuff I don't develop so I'm

58
00:02:32,810 --> 00:02:37,819
not<font color="#CCCCCC"> a good engineer since I'm</font><font color="#E5E5E5"> I am an</font>

59
00:02:35,030 --> 00:02:40,480
economist by training for those who know

60
00:02:37,819 --> 00:02:44,089
me but if<font color="#E5E5E5"> you are looking for</font>

61
00:02:40,480 --> 00:02:46,099
<font color="#E5E5E5">next-generation solutions</font><font color="#CCCCCC"> az's we have</font>

62
00:02:44,090 --> 00:02:48,379
an<font color="#E5E5E5"> interesting product and sorry for the</font>

63
00:02:46,099 --> 00:02:50,420
product pitch but it's very quick so

64
00:02:48,379 --> 00:02:52,429
there are more competitors this is

65
00:02:50,420 --> 00:02:54,828
interesting technology ever look at it

66
00:02:52,430 --> 00:02:57,290
at<font color="#E5E5E5"> least know it it's it's some</font>

67
00:02:54,829 --> 00:03:00,980
interesting stuff<font color="#CCCCCC"> that might help to to</font>

68
00:02:57,290 --> 00:03:05,690
fight problems on your<font color="#E5E5E5"> company's what's</font>

69
00:03:00,980 --> 00:03:08,810
<font color="#E5E5E5">today subject I want to present some</font>

70
00:03:05,690 --> 00:03:11,329
zero<font color="#E5E5E5"> dies or dead view 0 days because</font>

71
00:03:08,810 --> 00:03:13,790
<font color="#CCCCCC">there were</font><font color="#E5E5E5"> zero days and some masses ago</font>

72
00:03:11,329 --> 00:03:16,250
it's a very interesting<font color="#CCCCCC"> bug I used</font><font color="#E5E5E5"> to</font>

73
00:03:13,790 --> 00:03:20,239
<font color="#E5E5E5">love this bug it's a pity that I had to</font>

74
00:03:16,250 --> 00:03:21,620
kill it but i will show you this bug i

75
00:03:20,239 --> 00:03:26,120
will talk about the internal some

76
00:03:21,620 --> 00:03:28,310
Eternals about<font color="#E5E5E5"> mac and this is all the</font>

77
00:03:26,120 --> 00:03:31,040
<font color="#E5E5E5">everything all the topics usually I have</font>

78
00:03:28,310 --> 00:03:33,319
<font color="#E5E5E5">very long presentations this is the as</font>

79
00:03:31,040 --> 00:03:35,620
usual and lots of interesting

80
00:03:33,319 --> 00:03:38,030
information<font color="#E5E5E5"> I hope you learn something</font>

81
00:03:35,620 --> 00:03:40,930
probably<font color="#E5E5E5"> will have no time for questions</font>

82
00:03:38,030 --> 00:03:43,660
but feel free to an Agni if you want to

83
00:03:40,930 --> 00:03:47,359
understand some other details about

84
00:03:43,660 --> 00:03:49,250
about this presentation so our target is

85
00:03:47,359 --> 00:03:52,790
system integrity protection if you use a

86
00:03:49,250 --> 00:03:56,389
mac this was introduced last year with

87
00:03:52,790 --> 00:03:58,849
<font color="#E5E5E5">El Capitan what it happens with this</font>

88
00:03:56,389 --> 00:04:01,220
with this<font color="#E5E5E5"> feature is that the</font><font color="#CCCCCC"> power of</font>

89
00:03:58,849 --> 00:04:02,929
root user is reduced meaning that<font color="#E5E5E5"> even</font>

90
00:04:01,220 --> 00:04:04,790
as root you cannot do the same<font color="#E5E5E5"> kind of</font>

91
00:04:02,930 --> 00:04:06,410
operations that you could do before for

92
00:04:04,790 --> 00:04:08,629
example there are some protected folders

93
00:04:06,410 --> 00:04:12,019
if you try to update them or write<font color="#E5E5E5"> a</font>

94
00:04:08,629 --> 00:04:15,168
file even<font color="#E5E5E5"> as root you cannot for me I</font>

95
00:04:12,019 --> 00:04:16,970
see it as a system-wide sandbox

96
00:04:15,169 --> 00:04:19,639
basically your whole system<font color="#CCCCCC"> you're all</font>

97
00:04:16,970 --> 00:04:21,469
<font color="#E5E5E5">magazines El Capitan is on a sandbox on</font>

98
00:04:19,639 --> 00:04:23,390
a system sandbox there are rules that

99
00:04:21,469 --> 00:04:25,190
say this program this application can

100
00:04:23,390 --> 00:04:27,200
write to this folder or most

101
00:04:25,190 --> 00:04:29,510
applications cannot write to to the

102
00:04:27,200 --> 00:04:31,729
folders or do certain certain operations

103
00:04:29,510 --> 00:04:33,980
so it's a very<font color="#CCCCCC"> interesting feature there</font>

104
00:04:31,730 --> 00:04:35,390
was a lot of confusion when Apple was

105
00:04:33,980 --> 00:04:37,520
introducing these because apple

106
00:04:35,390 --> 00:04:39,680
introduces everything as a secret they

107
00:04:37,520 --> 00:04:41,780
didn't talk public about about this

108
00:04:39,680 --> 00:04:43,550
thing and people didn't really

109
00:04:41,780 --> 00:04:45,859
<font color="#E5E5E5">understand everyone i say yeah they are</font>

110
00:04:43,550 --> 00:04:50,270
killing<font color="#E5E5E5"> the root user more or less as</font>

111
00:04:45,860 --> 00:04:52,880
the<font color="#E5E5E5"> iOS with a with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> phone with a the</font>

112
00:04:50,270 --> 00:04:54,380
<font color="#CCCCCC">jack</font><font color="#E5E5E5"> the audio jack people don't Apple</font>

113
00:04:52,880 --> 00:04:55,969
is not good to explaining what they want

114
00:04:54,380 --> 00:04:58,100
to do and this is<font color="#E5E5E5"> one of the problems I</font>

115
00:04:55,970 --> 00:05:00,170
have<font color="#E5E5E5"> of people I've been talking to them</font>

116
00:04:58,100 --> 00:05:01,520
<font color="#CCCCCC">okay let's change puts information it</font>

117
00:05:00,170 --> 00:05:03,650
doesn't kill it to put a white paper

118
00:05:01,520 --> 00:05:06,109
telling this is<font color="#E5E5E5"> our goal for this</font>

119
00:05:03,650 --> 00:05:08,960
<font color="#E5E5E5">feature and this is what we want to</font>

120
00:05:06,110 --> 00:05:11,390
achieve and so on because hey if it's

121
00:05:08,960 --> 00:05:13,669
binary we can reverse it you saw in the

122
00:05:11,390 --> 00:05:16,280
morning the machines can can be used<font color="#E5E5E5"> to</font>

123
00:05:13,670 --> 00:05:18,440
automate all this stuff it's<font color="#E5E5E5"> probably</font>

124
00:05:16,280 --> 00:05:20,349
<font color="#E5E5E5">the future</font><font color="#CCCCCC"> or if you give me either and</font>

125
00:05:18,440 --> 00:05:23,450
the binary<font color="#E5E5E5"> I will reverse it given</font>

126
00:05:20,350 --> 00:05:25,700
enough time I will know what is what is

127
00:05:23,450 --> 00:05:28,550
<font color="#E5E5E5">doing this protection is based on this</font>

128
00:05:25,700 --> 00:05:32,060
<font color="#E5E5E5">on on the</font><font color="#CCCCCC"> on the</font><font color="#E5E5E5"> mac</font><font color="#CCCCCC"> f trusted be free</font>

129
00:05:28,550 --> 00:05:34,280
framework this came mostly from freebsd

130
00:05:32,060 --> 00:05:36,230
it's a very<font color="#CCCCCC"> interesting technology i</font>

131
00:05:34,280 --> 00:05:38,869
love this technology apple says it's

132
00:05:36,230 --> 00:05:40,370
closed technology it's not<font color="#E5E5E5"> supported but</font>

133
00:05:38,870 --> 00:05:42,380
they have<font color="#E5E5E5"> been saying these like for</font>

134
00:05:40,370 --> 00:05:44,570
three or four releases it's still there

135
00:05:42,380 --> 00:05:46,550
you can still work with its you get a

136
00:05:44,570 --> 00:05:48,500
warning but you can do a lot of

137
00:05:46,550 --> 00:05:50,420
interesting stuff<font color="#E5E5E5"> on top of this because</font>

138
00:05:48,500 --> 00:05:53,600
if you have many hooks on the system

139
00:05:50,420 --> 00:05:56,240
that<font color="#CCCCCC"> for example</font><font color="#E5E5E5"> you say</font><font color="#CCCCCC"> i want to this</font>

140
00:05:53,600 --> 00:05:58,490
process<font color="#E5E5E5"> doesn't access a file or this</font>

141
00:05:56,240 --> 00:06:01,250
process cannot<font color="#CCCCCC"> 4k</font><font color="#E5E5E5"> and so on this is the</font>

142
00:05:58,490 --> 00:06:03,500
base technology for 40 iOS four one<font color="#E5E5E5"> of</font>

143
00:06:01,250 --> 00:06:06,260
the features of security features of iOS

144
00:06:03,500 --> 00:06:09,260
this is where iOS sandbox is implemented

145
00:06:06,260 --> 00:06:11,900
on top of system integrity protection

146
00:06:09,260 --> 00:06:13,700
uses code signatures make sense it

147
00:06:11,900 --> 00:06:15,739
guarantees you something about<font color="#E5E5E5"> the minor</font>

148
00:06:13,700 --> 00:06:18,110
E and what they call entitlements in

149
00:06:15,740 --> 00:06:19,580
turbulence is basically an entitlement

150
00:06:18,110 --> 00:06:23,090
that says okay you can do this operation

151
00:06:19,580 --> 00:06:26,150
or you can do that's that operation one

152
00:06:23,090 --> 00:06:28,010
of the<font color="#E5E5E5"> problems is that they sign too</font>

153
00:06:26,150 --> 00:06:29,630
many binaries so they have a system

154
00:06:28,010 --> 00:06:31,610
where they create a feature that the

155
00:06:29,630 --> 00:06:34,240
system wasn't designed for<font color="#E5E5E5"> that feature</font>

156
00:06:31,610 --> 00:06:38,390
so you are putting something on<font color="#E5E5E5"> top</font>

157
00:06:34,240 --> 00:06:39,680
<font color="#E5E5E5">until the wineries to to to to</font><font color="#CCCCCC"> continue</font>

158
00:06:38,390 --> 00:06:41,270
to do operations else you need<font color="#E5E5E5"> to</font>

159
00:06:39,680 --> 00:06:43,250
engineer the whole

160
00:06:41,270 --> 00:06:45,710
rating system a pollutant at time for

161
00:06:43,250 --> 00:06:48,620
that so they put created and

162
00:06:45,710 --> 00:06:51,349
entitlements system if<font color="#E5E5E5"> you are older if</font>

163
00:06:48,620 --> 00:06:54,110
you come from from unix world this is

164
00:06:51,350 --> 00:06:56,900
basically the<font color="#CCCCCC"> same thing as uid binaries</font>

165
00:06:54,110 --> 00:07:00,470
what they are saying<font color="#E5E5E5"> okay you have more</font>

166
00:06:56,900 --> 00:07:03,140
more I'll just say you have different

167
00:07:00,470 --> 00:07:05,570
<font color="#E5E5E5">entitlements sews yv is basically one</font>

168
00:07:03,140 --> 00:07:07,039
bit that is to<font color="#E5E5E5"> you</font><font color="#CCCCCC"> will put on the</font>

169
00:07:05,570 --> 00:07:11,060
binary and the binary can do whatever

170
00:07:07,040 --> 00:07:13,310
route operations you you want these you

171
00:07:11,060 --> 00:07:15,530
have a bit more control over what the

172
00:07:13,310 --> 00:07:17,330
binary can do but still there are<font color="#E5E5E5"> too</font>

173
00:07:15,530 --> 00:07:19,400
many wineries you can consult this

174
00:07:17,330 --> 00:07:22,310
database from jonathan levin which is a

175
00:07:19,400 --> 00:07:23,960
mac OS researcher and also wrote some

176
00:07:22,310 --> 00:07:26,660
very interesting books if you look<font color="#E5E5E5"> at</font>

177
00:07:23,960 --> 00:07:28,580
<font color="#E5E5E5">these database you can see like 100</font>

178
00:07:26,660 --> 00:07:31,700
binaries with entitlements so there's

179
00:07:28,580 --> 00:07:34,609
many targets many targets too if you

180
00:07:31,700 --> 00:07:36,020
want to attack because this system<font color="#E5E5E5"> i'm</font>

181
00:07:34,610 --> 00:07:37,280
pretty<font color="#E5E5E5"> sure you can already see</font>

182
00:07:36,020 --> 00:07:39,590
vulnerabilities it's the same

183
00:07:37,280 --> 00:07:42,320
vulnerability as ass yd if there's if

184
00:07:39,590 --> 00:07:44,570
the binary has<font color="#E5E5E5"> somewhat relation and if</font>

185
00:07:42,320 --> 00:07:46,159
you can run arbitrary code on that

186
00:07:44,570 --> 00:07:49,760
binary then you can do whatever

187
00:07:46,160 --> 00:07:53,480
<font color="#E5E5E5">operation the binary is authorized to so</font>

188
00:07:49,760 --> 00:07:55,670
what you get is this you get everyone

189
00:07:53,480 --> 00:07:57,200
gets by everybody gets a binary an

190
00:07:55,670 --> 00:07:59,420
entitlement their entitlements

191
00:07:57,200 --> 00:08:01,400
everywhere on the system so it's

192
00:07:59,420 --> 00:08:04,640
<font color="#E5E5E5">interesting but the design is</font><font color="#CCCCCC"> not yet</font>

193
00:08:01,400 --> 00:08:07,520
<font color="#CCCCCC">the correct design 40s what you need is</font>

194
00:08:04,640 --> 00:08:10,210
a total re-engineer re-engineering law

195
00:08:07,520 --> 00:08:13,430
of the system this is for<font color="#CCCCCC"> example a</font>

196
00:08:10,210 --> 00:08:15,890
sample of entitlement sample you have

197
00:08:13,430 --> 00:08:18,500
this entitlement called condo type<font color="#CCCCCC"> 0</font><font color="#E5E5E5"> dot</font>

198
00:08:15,890 --> 00:08:20,659
<font color="#CCCCCC">rootless not install on this binary this</font>

199
00:08:18,500 --> 00:08:23,150
is the binary<font color="#E5E5E5"> that</font><font color="#CCCCCC"> i will attack to</font>

200
00:08:20,660 --> 00:08:26,510
control to bypass system integrity

201
00:08:23,150 --> 00:08:28,609
protection and write files on the file

202
00:08:26,510 --> 00:08:32,210
system where I<font color="#E5E5E5"> shouldn't be writing this</font>

203
00:08:28,610 --> 00:08:34,060
binary<font color="#CCCCCC"> you is used on on a plate because</font>

204
00:08:32,210 --> 00:08:37,100
<font color="#E5E5E5">okay there's a there's a protection</font>

205
00:08:34,059 --> 00:08:39,140
protecting your system but if you have

206
00:08:37,100 --> 00:08:41,840
an update you need to update files so

207
00:08:39,140 --> 00:08:44,000
<font color="#E5E5E5">you need something</font><font color="#CCCCCC"> to that</font><font color="#E5E5E5"> needs to</font>

208
00:08:41,840 --> 00:08:45,800
update those files and in this case is

209
00:08:44,000 --> 00:08:47,660
this binary one of the<font color="#CCCCCC"> binaries with</font>

210
00:08:45,800 --> 00:08:50,240
this permission<font color="#E5E5E5"> install so this binary</font>

211
00:08:47,660 --> 00:08:51,890
can write anywhere to the system so if

212
00:08:50,240 --> 00:08:53,960
you control this binary you can do

213
00:08:51,890 --> 00:08:55,010
bypass the whole protections because you

214
00:08:53,960 --> 00:08:57,590
can write anywhere

215
00:08:55,010 --> 00:09:00,200
the file in the file system so you have

216
00:08:57,590 --> 00:09:03,350
these guys very surprised with with this

217
00:09:00,200 --> 00:09:04,970
you apologize need this most of these as

218
00:09:03,350 --> 00:09:07,550
<font color="#E5E5E5">I told you I only did this presentation</font>

219
00:09:04,970 --> 00:09:09,290
at<font color="#CCCCCC"> sea scan in Singapore and so these</font>

220
00:09:07,550 --> 00:09:12,199
pictures are all from<font color="#CCCCCC"> Siskin and the</font>

221
00:09:09,290 --> 00:09:14,329
most iron inside jokes but I like them<font color="#E5E5E5"> I</font>

222
00:09:12,200 --> 00:09:16,700
will<font color="#E5E5E5"> my idea was to change them but I</font>

223
00:09:14,330 --> 00:09:18,380
<font color="#CCCCCC">like them so much data</font><font color="#E5E5E5"> ok I will not</font>

224
00:09:16,700 --> 00:09:22,910
change them<font color="#CCCCCC"> and i'll probably explain</font>

225
00:09:18,380 --> 00:09:25,370
you the jokes so sip for<font color="#E5E5E5"> example you</font>

226
00:09:22,910 --> 00:09:27,560
cannot debug<font color="#E5E5E5"> anymore processes you have</font>

227
00:09:25,370 --> 00:09:30,080
a system process you want to debug you

228
00:09:27,560 --> 00:09:31,250
cannot because it's protected because if

229
00:09:30,080 --> 00:09:32,870
you have if you could attach the

230
00:09:31,250 --> 00:09:34,430
debugger to<font color="#CCCCCC"> a process you could modify</font>

231
00:09:32,870 --> 00:09:36,590
because that's that's one of the

232
00:09:34,430 --> 00:09:38,599
purposes of a debugger you can control

233
00:09:36,590 --> 00:09:42,410
it the memory<font color="#CCCCCC"> of the process so you</font><font color="#E5E5E5"> can</font>

234
00:09:38,600 --> 00:09:44,210
modify the process<font color="#CCCCCC"> and control in this</font>

235
00:09:42,410 --> 00:09:46,069
case<font color="#CCCCCC"> I'm trying to create a process</font>

236
00:09:44,210 --> 00:09:48,320
inside the debugger<font color="#E5E5E5"> I want to run a new</font>

237
00:09:46,070 --> 00:09:50,480
process and may it doesn't it lets you

238
00:09:48,320 --> 00:09:52,730
cannot attach to process due to system

239
00:09:50,480 --> 00:09:54,830
integrity protection oh this one is

240
00:09:52,730 --> 00:09:56,570
running and this one is attaching to a

241
00:09:54,830 --> 00:09:59,420
process you want to develop<font color="#E5E5E5"> a process</font>

242
00:09:56,570 --> 00:10:01,790
that is<font color="#E5E5E5"> already running it will try to</font>

243
00:09:59,420 --> 00:10:04,760
attach to the PIV same<font color="#E5E5E5"> thing cannot</font>

244
00:10:01,790 --> 00:10:07,189
attach to the process and as<font color="#E5E5E5"> I</font><font color="#CCCCCC"> told you</font>

245
00:10:04,760 --> 00:10:09,530
you cannot modify delete update

246
00:10:07,190 --> 00:10:11,570
protected files there's tons of system

247
00:10:09,530 --> 00:10:13,939
files that doesn't lie to you updates

248
00:10:11,570 --> 00:10:16,310
even if you try there there were some

249
00:10:13,940 --> 00:10:18,860
bypasses they fix<font color="#E5E5E5"> it for example you you</font>

250
00:10:16,310 --> 00:10:21,260
could mount a file file system and now

251
00:10:18,860 --> 00:10:24,320
right to the month point and bypass they

252
00:10:21,260 --> 00:10:25,939
fix that stuff and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have this utility</font>

253
00:10:24,320 --> 00:10:27,760
that tells you the status<font color="#CCCCCC"> of the</font>

254
00:10:25,940 --> 00:10:31,340
protection in this case the system is

255
00:10:27,760 --> 00:10:33,650
<font color="#CCCCCC">enable so it's magic this system the</font>

256
00:10:31,340 --> 00:10:37,280
first time<font color="#CCCCCC"> people were looking at it say</font>

257
00:10:33,650 --> 00:10:39,170
this is<font color="#E5E5E5"> magic how this works I cannot do</font>

258
00:10:37,280 --> 00:10:41,959
anything with my<font color="#E5E5E5"> system lots of people</font>

259
00:10:39,170 --> 00:10:45,550
were complaining but as everything in

260
00:10:41,960 --> 00:10:52,340
this in this area we<font color="#E5E5E5"> can bypass it</font>

261
00:10:45,550 --> 00:10:54,680
nothing is protected forever one is a

262
00:10:52,340 --> 00:10:56,420
bypass<font color="#CCCCCC"> that surprised me I was not</font>

263
00:10:54,680 --> 00:10:59,750
<font color="#E5E5E5">paying attention sometimes you are doing</font>

264
00:10:56,420 --> 00:11:01,579
<font color="#CCCCCC">something</font><font color="#E5E5E5"> dump it don't pay attention so</font>

265
00:10:59,750 --> 00:11:03,860
this is GD be my favorite debugger I

266
00:11:01,580 --> 00:11:06,950
don't like<font color="#E5E5E5"> LOL DB because of the syntax</font>

267
00:11:03,860 --> 00:11:08,750
is weird but if you do gdb<font color="#E5E5E5"> to for</font>

268
00:11:06,950 --> 00:11:10,730
<font color="#CCCCCC">example a protected binary KX</font>

269
00:11:08,750 --> 00:11:13,040
always the binary<font color="#CCCCCC"> that loads kernel</font>

270
00:11:10,730 --> 00:11:15,170
extensions that allows you to<font color="#E5E5E5"> run kernel</font>

271
00:11:13,040 --> 00:11:19,099
code if<font color="#CCCCCC"> you run Colonel Cole everything</font>

272
00:11:15,170 --> 00:11:21,469
is the game<font color="#CCCCCC"> is over so I run that binary</font>

273
00:11:19,100 --> 00:11:24,320
side the debugger I put a breakpoint and

274
00:11:21,470 --> 00:11:25,520
you would expect that if I try to run

275
00:11:24,320 --> 00:11:27,740
the program i will get the same message

276
00:11:25,520 --> 00:11:31,189
cannot cannot run the problem because

277
00:11:27,740 --> 00:11:34,430
system integrity protection is running

278
00:11:31,190 --> 00:11:37,730
but what you see the program is running

279
00:11:34,430 --> 00:11:41,270
if<font color="#E5E5E5"> you see here I put on this address a</font>

280
00:11:37,730 --> 00:11:43,490
58 and the debugger is running on break

281
00:11:41,270 --> 00:11:47,000
<font color="#E5E5E5">point Saunders rice so basically GD we</font>

282
00:11:43,490 --> 00:11:49,430
can bypass sip you just need to run the

283
00:11:47,000 --> 00:11:53,450
process under under gdb and that's it

284
00:11:49,430 --> 00:11:56,599
see if is gone so you're making<font color="#E5E5E5"> fun of</font>

285
00:11:53,450 --> 00:11:59,840
myself oops there goes system integrity

286
00:11:56,600 --> 00:12:02,540
protection 11 small<font color="#E5E5E5"> trick you cannot</font>

287
00:11:59,840 --> 00:12:06,230
attach to the processes if you try to

288
00:12:02,540 --> 00:12:09,800
gdb with a<font color="#E5E5E5"> given process you can attach</font>

289
00:12:06,230 --> 00:12:12,320
to<font color="#E5E5E5"> the process so it's an iceberg I have</font>

290
00:12:09,800 --> 00:12:14,359
this bug for while I was researching on

291
00:12:12,320 --> 00:12:16,880
this one and then there were some guys

292
00:12:14,360 --> 00:12:18,650
in New York I think it<font color="#E5E5E5"> was New York</font>

293
00:12:16,880 --> 00:12:20,720
presenting and I see this<font color="#E5E5E5"> light and</font>

294
00:12:18,650 --> 00:12:23,630
they've got<font color="#CCCCCC"> the same thing i see ok</font>

295
00:12:20,720 --> 00:12:26,930
thats your day these guys just

296
00:12:23,630 --> 00:12:30,800
accidentally disclosed zero day one of

297
00:12:26,930 --> 00:12:32,780
50 days and<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> I got I got said I talked</font>

298
00:12:30,800 --> 00:12:36,410
to them and they knew more or less what

299
00:12:32,780 --> 00:12:40,040
was happening they didn't knew the the

300
00:12:36,410 --> 00:12:42,829
full implications of this bug but a bug

301
00:12:40,040 --> 00:12:46,819
screen collision happens and it's very

302
00:12:42,830 --> 00:12:50,150
annoying what you can<font color="#CCCCCC"> see here is the</font>

303
00:12:46,820 --> 00:12:53,600
same thing<font color="#CCCCCC"> I'm trying</font><font color="#E5E5E5"> to touch a fast a</font>

304
00:12:50,150 --> 00:12:56,660
file<font color="#E5E5E5"> AAA on on the system folder which</font>

305
00:12:53,600 --> 00:12:59,360
is protected and system integrity

306
00:12:56,660 --> 00:13:02,990
protection it's enabled so no problems

307
00:12:59,360 --> 00:13:04,870
there same thing again the system shows

308
00:13:02,990 --> 00:13:07,839
the

309
00:13:04,870 --> 00:13:10,270
the binary that I used to<font color="#E5E5E5"> exploit so I'm</font>

310
00:13:07,839 --> 00:13:15,160
<font color="#E5E5E5">saying gdb break points on on that</font>

311
00:13:10,270 --> 00:13:18,579
function<font color="#E5E5E5"> okay I can run the program i'm</font>

312
00:13:15,160 --> 00:13:20,949
ok i'm running codes you just write some

313
00:13:18,580 --> 00:13:23,770
some stupid some them shell code that

314
00:13:20,950 --> 00:13:27,010
gets you a shell so here is<font color="#E5E5E5"> the one guy</font>

315
00:13:23,770 --> 00:13:29,079
that I use you write everything manually

316
00:13:27,010 --> 00:13:31,150
or so<font color="#CCCCCC"> I'm writing on the program counter</font>

317
00:13:29,080 --> 00:13:34,960
I'm writing all the shell manually on on

318
00:13:31,150 --> 00:13:37,120
gdb so we keep running the process it

319
00:13:34,960 --> 00:13:39,779
will break this is the the linker so it

320
00:13:37,120 --> 00:13:43,930
gets some some internal stuff to to link

321
00:13:39,779 --> 00:13:45,790
and then I get a shell i touch the file

322
00:13:43,930 --> 00:13:48,579
you can see the file is created and you

323
00:13:45,790 --> 00:13:51,760
see the protection enable so GD b is 0

324
00:13:48,580 --> 00:13:54,400
day on this case or was a zero-day

325
00:13:51,760 --> 00:13:56,140
against system integrity protection so

326
00:13:54,400 --> 00:13:57,939
you can see these my friend<font color="#E5E5E5"> Jacob Torre</font>

327
00:13:56,140 --> 00:14:00,339
talking about system integrity

328
00:13:57,940 --> 00:14:02,290
protection he was at<font color="#CCCCCC"> the at the Pentagon</font>

329
00:14:00,339 --> 00:14:04,150
and told me if<font color="#E5E5E5"> you want a picture there</font>

330
00:14:02,290 --> 00:14:06,760
yes with the comments with the flying

331
00:14:04,150 --> 00:14:10,120
comas and it got me this nice picture so

332
00:14:06,760 --> 00:14:12,069
it's system integrity protection so I

333
00:14:10,120 --> 00:14:14,950
was trolling if you know me I'm trolling

334
00:14:12,070 --> 00:14:17,440
all the time with gdb you can home can

335
00:14:14,950 --> 00:14:21,310
get the whole system it's yours of

336
00:14:17,440 --> 00:14:24,070
course you have to<font color="#E5E5E5"> have a LP 2 root or</font>

337
00:14:21,310 --> 00:14:25,689
RC because we are talking<font color="#CCCCCC"> about root</font>

338
00:14:24,070 --> 00:14:28,240
protections as I told you see pieces

339
00:14:25,690 --> 00:14:30,760
about protecting the system from root so

340
00:14:28,240 --> 00:14:33,760
it doesn't matter<font color="#E5E5E5"> if you don't have an</font>

341
00:14:30,760 --> 00:14:35,860
LP<font color="#E5E5E5"> ok people say yeah but you need root</font>

342
00:14:33,760 --> 00:14:38,200
access yeah but that's what cp's

343
00:14:35,860 --> 00:14:40,480
protection so at the time<font color="#E5E5E5"> I was</font><font color="#CCCCCC"> trolling</font>

344
00:14:38,200 --> 00:14:42,940
you GD v fall under<font color="#CCCCCC"> Watson our control</font>

345
00:14:40,480 --> 00:14:47,339
because it was a zero-day effectively

346
00:14:42,940 --> 00:14:51,970
<font color="#E5E5E5">gdb let's talk about some of the design</font>

347
00:14:47,339 --> 00:14:54,130
weaknesses and I told you if you find a

348
00:14:51,970 --> 00:14:56,350
bug in in one of the entitled binaries

349
00:14:54,130 --> 00:14:58,540
it's game over you can do the operation

350
00:14:56,350 --> 00:15:00,400
that binary is authorized to so what's

351
00:14:58,540 --> 00:15:03,219
your target is binaries that allow you

352
00:15:00,400 --> 00:15:06,100
to to load the kernel extensions because

353
00:15:03,220 --> 00:15:08,080
you want to run kernel code it's the

354
00:15:06,100 --> 00:15:09,850
best place to be even if Apple has a

355
00:15:08,080 --> 00:15:14,050
document saying no don't go to the

356
00:15:09,850 --> 00:15:16,690
colonel<font color="#E5E5E5"> if you find a</font><font color="#CCCCCC"> way to inject for</font>

357
00:15:14,050 --> 00:15:17,979
example a library into that process it's

358
00:15:16,690 --> 00:15:18,610
game over because you are running

359
00:15:17,980 --> 00:15:20,769
average

360
00:15:18,610 --> 00:15:22,810
very cold in the same process if you

361
00:15:20,769 --> 00:15:25,300
find some linking bugs there were some

362
00:15:22,810 --> 00:15:27,550
linking<font color="#E5E5E5"> bugs Stefan has represented at</font>

363
00:15:25,300 --> 00:15:29,319
<font color="#E5E5E5">the same conference some some bugs there</font>

364
00:15:27,550 --> 00:15:30,699
if you have linking<font color="#CCCCCC"> words when the</font>

365
00:15:29,320 --> 00:15:34,060
program is linking a library or

366
00:15:30,700 --> 00:15:37,870
<font color="#E5E5E5">something you get same arbitrary code</font>

367
00:15:34,060 --> 00:15:39,369
execution so game over if you<font color="#E5E5E5"> find some</font>

368
00:15:37,870 --> 00:15:41,410
Colonel Bloods some zero dies on the

369
00:15:39,370 --> 00:15:42,730
colonel<font color="#CCCCCC"> you can attack the protection on</font>

370
00:15:41,410 --> 00:15:45,100
the<font color="#E5E5E5"> colonel because the protection is</font>

371
00:15:42,730 --> 00:15:47,589
running on the colonel<font color="#E5E5E5"> microsoft is</font>

372
00:15:45,100 --> 00:15:49,630
better than these in in<font color="#CCCCCC"> Windows 10</font>

373
00:15:47,589 --> 00:15:52,510
because<font color="#E5E5E5"> they are running stuff at the</font>

374
00:15:49,630 --> 00:15:54,550
<font color="#E5E5E5">eye / visor levels so they are 11</font><font color="#CCCCCC"> layer</font>

375
00:15:52,510 --> 00:15:56,500
lower which is even better if you are

376
00:15:54,550 --> 00:15:58,269
<font color="#CCCCCC">running code at the same level in this</font>

377
00:15:56,500 --> 00:16:00,670
case where the protection is it's<font color="#E5E5E5"> just a</font>

378
00:15:58,269 --> 00:16:03,010
<font color="#E5E5E5">matter of rising or finding where where</font>

379
00:16:00,670 --> 00:16:05,829
<font color="#CCCCCC">the feature is implemented and patch it</font>

380
00:16:03,010 --> 00:16:08,800
and game over or you<font color="#E5E5E5"> can find them</font>

381
00:16:05,829 --> 00:16:12,029
developers which is fun so you have this

382
00:16:08,800 --> 00:16:14,920
program dock mode it's a sexy dog

383
00:16:12,029 --> 00:16:18,459
customization app don't use<font color="#E5E5E5"> it it's not</font>

384
00:16:14,920 --> 00:16:21,279
well coated so the guy was<font color="#E5E5E5"> I publicity</font>

385
00:16:18,459 --> 00:16:23,739
free publicity now don't use it so what

386
00:16:21,279 --> 00:16:27,220
you have here we have a sign Colonel

387
00:16:23,740 --> 00:16:29,560
extension if you were here<font color="#CCCCCC"> last year</font><font color="#E5E5E5"> I</font>

388
00:16:27,220 --> 00:16:32,050
was<font color="#E5E5E5"> presenting about bypassing code</font>

389
00:16:29,560 --> 00:16:34,420
signatures in the colonel so every

390
00:16:32,050 --> 00:16:38,140
kernel extension in your magnet needs to

391
00:16:34,420 --> 00:16:40,029
be signed but the thing it has a bug so

392
00:16:38,140 --> 00:16:43,449
you can<font color="#E5E5E5"> use that dead colonel extension</font>

393
00:16:40,029 --> 00:16:46,120
to load any library that you<font color="#E5E5E5"> want into</font>

394
00:16:43,449 --> 00:16:48,959
any process that you want so game<font color="#CCCCCC"> over I</font>

395
00:16:46,120 --> 00:16:51,760
can put arbitrary codes into any process

396
00:16:48,959 --> 00:16:53,680
your obstacles against doing this kind

397
00:16:51,760 --> 00:16:56,470
of stuff it's basically<font color="#CCCCCC"> ninety nine</font>

398
00:16:53,680 --> 00:16:58,959
<font color="#E5E5E5">dollars which is the cost of code</font>

399
00:16:56,470 --> 00:17:01,120
certificate on on Apple you just give

400
00:16:58,959 --> 00:17:03,099
them a excuse basically if you

401
00:17:01,120 --> 00:17:04,780
want to get<font color="#CCCCCC"> a certificate from Apple the</font>

402
00:17:03,100 --> 00:17:06,819
easiest way please tell them you are

403
00:17:04,780 --> 00:17:09,428
building a security product if you say

404
00:17:06,819 --> 00:17:11,770
I'm doing this in<font color="#E5E5E5"> this in that's very</font>

405
00:17:09,429 --> 00:17:14,890
specific many people have a better

406
00:17:11,770 --> 00:17:16,629
<font color="#CCCCCC">experience</font><font color="#E5E5E5"> in there they just reject so</font>

407
00:17:14,890 --> 00:17:20,290
just tell them I'm building of security

408
00:17:16,630 --> 00:17:23,260
project and that's it I told about<font color="#E5E5E5"> this</font>

409
00:17:20,290 --> 00:17:25,480
<font color="#CCCCCC">to my friends there okay this app is but</font>

410
00:17:23,260 --> 00:17:27,730
he's getting<font color="#E5E5E5"> here's to viper or can be</font>

411
00:17:25,480 --> 00:17:29,679
used to bypass everything so just revoke

412
00:17:27,730 --> 00:17:32,470
the certificate I told the guy because

413
00:17:29,679 --> 00:17:35,980
<font color="#CCCCCC">these</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> like this guy because</font>

414
00:17:32,470 --> 00:17:37,659
stole my<font color="#E5E5E5"> coat and didn't gave me credits</font>

415
00:17:35,980 --> 00:17:39,640
and I told him ok just give credits my

416
00:17:37,659 --> 00:17:41,380
license is permissive if my<font color="#E5E5E5"> coat is</font>

417
00:17:39,640 --> 00:17:43,510
public I don't care because it's<font color="#CCCCCC"> public</font>

418
00:17:41,380 --> 00:17:45,789
but the guy didn't even care because I

419
00:17:43,510 --> 00:17:47,559
put<font color="#E5E5E5"> the colonel extension and I look at</font>

420
00:17:45,789 --> 00:17:49,840
the code<font color="#E5E5E5"> ok this is michael i know this</font>

421
00:17:47,559 --> 00:17:52,389
code from somewhere but the guy told me

422
00:17:49,840 --> 00:17:54,428
oh this<font color="#E5E5E5"> is not a problem</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> already have</font>

423
00:17:52,390 --> 00:17:56,890
<font color="#E5E5E5">like a bunch of certificates that i</font>

424
00:17:54,429 --> 00:17:59,230
<font color="#E5E5E5">ordered so he was already expecting</font>

425
00:17:56,890 --> 00:18:01,780
Apple to see these or this is being used

426
00:17:59,230 --> 00:18:04,360
to do something nasty but<font color="#E5E5E5"> the signature</font>

427
00:18:01,780 --> 00:18:06,700
shouldn't be allowed for<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and so we</font>

428
00:18:04,360 --> 00:18:09,908
cash you got the cash of certificates so

429
00:18:06,700 --> 00:18:12,220
you can see good signatures where man

430
00:18:09,909 --> 00:18:15,789
with just ninety nine dollars it's not a

431
00:18:12,220 --> 00:18:19,380
big obstacle against people doing this

432
00:18:15,789 --> 00:18:22,179
kind of stuff so<font color="#CCCCCC"> let's get some</font>

433
00:18:19,380 --> 00:18:26,140
infrastructure in terms of<font color="#E5E5E5"> Technology of</font>

434
00:18:22,179 --> 00:18:28,150
<font color="#CCCCCC">max technology to understand</font><font color="#E5E5E5"> all the bug</font>

435
00:18:26,140 --> 00:18:31,299
how can you exploit the bug and what if

436
00:18:28,150 --> 00:18:37,299
the bug about so mark is the core of<font color="#E5E5E5"> the</font>

437
00:18:31,299 --> 00:18:41,250
OSX kernel is the microkernel where OS X

438
00:18:37,299 --> 00:18:45,030
is is built bsd if you know my mac OS

439
00:18:41,250 --> 00:18:48,909
it's a bsd layer people look at it<font color="#E5E5E5"> as</font>

440
00:18:45,030 --> 00:18:51,940
unix but the thing is the design is<font color="#E5E5E5"> mac</font>

441
00:18:48,909 --> 00:18:54,340
and then they put a bsd on top of that

442
00:18:51,940 --> 00:18:56,830
if you<font color="#CCCCCC"> are in so Colonel design and so</font>

443
00:18:54,340 --> 00:18:59,678
on the Mac Colonel the the pure mackerel

444
00:18:56,830 --> 00:19:02,799
I some problems the most famous is the

445
00:18:59,679 --> 00:19:05,350
big new earth that is being promised to

446
00:19:02,799 --> 00:19:07,780
being launched for like since like 20

447
00:19:05,350 --> 00:19:11,199
years or something and it will never<font color="#E5E5E5"> be</font>

448
00:19:07,780 --> 00:19:13,570
ready what happens is everything is

449
00:19:11,200 --> 00:19:16,840
implemented as objects a task or a

450
00:19:13,570 --> 00:19:20,230
process or it can<font color="#CCCCCC"> be the most similar</font>

451
00:19:16,840 --> 00:19:23,199
<font color="#CCCCCC">arbiter most similar structure or</font>

452
00:19:20,230 --> 00:19:25,020
logical structure for linux it's the

453
00:19:23,200 --> 00:19:27,100
task you<font color="#CCCCCC"> can you can say it's a process</font>

454
00:19:25,020 --> 00:19:29,230
then you have threads virtual memory

455
00:19:27,100 --> 00:19:31,750
everything is an object inside inside

456
00:19:29,230 --> 00:19:33,370
the colonel the representation and this

457
00:19:31,750 --> 00:19:35,710
is one of<font color="#E5E5E5"> the problems of the the mac</font>

458
00:19:33,370 --> 00:19:38,530
design everything is communicated via

459
00:19:35,710 --> 00:19:40,780
via messages so for example<font color="#E5E5E5"> you have a</font>

460
00:19:38,530 --> 00:19:42,250
lot of overhead on the kernel with the

461
00:19:40,780 --> 00:19:43,990
messages if you want to do an operation

462
00:19:42,250 --> 00:19:45,490
<font color="#E5E5E5">you need to send a message</font><font color="#CCCCCC"> so this is</font>

463
00:19:43,990 --> 00:19:47,470
grating over it

464
00:19:45,490 --> 00:19:50,980
and this is one<font color="#CCCCCC"> of the reasons for the</font>

465
00:19:47,470 --> 00:19:55,540
performance problems of Earth<font color="#E5E5E5"> Mac of</font>

466
00:19:50,980 --> 00:20:01,440
pure<font color="#CCCCCC"> mac for pee Mak Colonel you have</font>

467
00:19:55,540 --> 00:20:04,420
here a design of a layer design of

468
00:20:01,440 --> 00:20:07,660
mccoy's of the colonel optional you can

469
00:20:04,420 --> 00:20:10,780
see the colonel here you can see<font color="#CCCCCC"> the</font>

470
00:20:07,660 --> 00:20:12,640
firmware that's that easier if I my

471
00:20:10,780 --> 00:20:14,950
favorite one of<font color="#E5E5E5"> them my favorite places</font>

472
00:20:12,640 --> 00:20:17,110
I didn't present here but<font color="#E5E5E5"> it</font><font color="#CCCCCC"> is a super</font>

473
00:20:14,950 --> 00:20:19,450
interesting presentation and you have

474
00:20:17,110 --> 00:20:23,409
here Mac and then you have other layers

475
00:20:19,450 --> 00:20:26,140
on top implemented on top of Mac this is

476
00:20:23,410 --> 00:20:28,870
an easier design so you have the

477
00:20:26,140 --> 00:20:32,370
hardware you have Mac I Oh kitties the

478
00:20:28,870 --> 00:20:34,559
the system where is a c++ restricted C++

479
00:20:32,370 --> 00:20:37,928
environment to develop drivers to make

480
00:20:34,559 --> 00:20:40,300
drivers development easy and then you

481
00:20:37,929 --> 00:20:42,520
have<font color="#E5E5E5"> everything on top on top of of that</font>

482
00:20:40,300 --> 00:20:45,070
stack so my keys is very interesting

483
00:20:42,520 --> 00:20:48,160
because you can<font color="#E5E5E5"> send two types of</font>

484
00:20:45,070 --> 00:20:50,260
messages simple messages and complex

485
00:20:48,160 --> 00:20:53,640
messages we are going<font color="#E5E5E5"> to use the complex</font>

486
00:20:50,260 --> 00:20:56,379
ones to exploit and this vulnerability

487
00:20:53,640 --> 00:20:58,990
the simple matrices as the name says and

488
00:20:56,380 --> 00:21:00,400
they have a fix it after this you know

489
00:20:58,990 --> 00:21:02,860
<font color="#E5E5E5">always need this header because it</font>

490
00:21:00,400 --> 00:21:04,510
contains some information for the mac to

491
00:21:02,860 --> 00:21:07,000
communicate inside and then you add some

492
00:21:04,510 --> 00:21:09,429
<font color="#CCCCCC">data in</font><font color="#E5E5E5"> this case</font><font color="#CCCCCC"> I want to transmit</font><font color="#E5E5E5"> two</font>

493
00:21:07,000 --> 00:21:12,610
integers data and data in data<font color="#CCCCCC"> to so</font>

494
00:21:09,429 --> 00:21:14,920
they are encapsulated in the message so

495
00:21:12,610 --> 00:21:17,350
there is<font color="#E5E5E5"> no out of bound out of buns</font>

496
00:21:14,920 --> 00:21:19,630
data and and so on it's very simple it's

497
00:21:17,350 --> 00:21:21,939
basically a structure bean paste between

498
00:21:19,630 --> 00:21:24,690
the colonel<font color="#E5E5E5"> internal in the kernel or</font>

499
00:21:21,940 --> 00:21:26,950
<font color="#E5E5E5">between the colonel and end-user land</font>

500
00:21:24,690 --> 00:21:28,990
complex messages are more interesting

501
00:21:26,950 --> 00:21:30,940
they have a fixie the header then they

502
00:21:28,990 --> 00:21:35,140
have a descriptor can't to say there is

503
00:21:30,940 --> 00:21:37,929
no X data on following the message they

504
00:21:35,140 --> 00:21:40,750
are serial see realized and<font color="#E5E5E5"> then you can</font>

505
00:21:37,929 --> 00:21:43,120
put out of line data and<font color="#CCCCCC"> port</font><font color="#E5E5E5"> rights I</font>

506
00:21:40,750 --> 00:21:46,390
will explain the port rights what what

507
00:21:43,120 --> 00:21:48,189
they are so this<font color="#E5E5E5"> is a</font><font color="#CCCCCC"> picture you have</font>

508
00:21:46,390 --> 00:21:50,800
the<font color="#CCCCCC"> fix-it header with some information</font>

509
00:21:48,190 --> 00:21:53,050
and the remote port and local port is

510
00:21:50,800 --> 00:21:55,360
more or less<font color="#E5E5E5"> about TCP which is the</font>

511
00:21:53,050 --> 00:21:58,629
target of the message and we'll be

512
00:21:55,360 --> 00:21:59,030
sending the message then you have the

513
00:21:58,630 --> 00:22:01,070
number

514
00:21:59,030 --> 00:22:02,720
the number<font color="#E5E5E5"> of descriptors and then you</font>

515
00:22:01,070 --> 00:22:07,189
have the information the data that is

516
00:22:02,720 --> 00:22:09,050
that the message will be<font color="#E5E5E5"> sending so</font>

517
00:22:07,190 --> 00:22:11,000
there are<font color="#E5E5E5"> two interesting macports in</font>

518
00:22:09,050 --> 00:22:13,970
your system as I told<font color="#E5E5E5"> you these are</font>

519
00:22:11,000 --> 00:22:16,940
<font color="#E5E5E5">objects the task which represents the</font>

520
00:22:13,970 --> 00:22:19,070
process it's basically a container in

521
00:22:16,940 --> 00:22:21,080
max terms it's it's a container that

522
00:22:19,070 --> 00:22:23,510
<font color="#E5E5E5">contains information about about the</font>

523
00:22:21,080 --> 00:22:28,040
process not there's a one-to-one mapping

524
00:22:23,510 --> 00:22:30,290
between a task and the<font color="#CCCCCC"> BSD process but</font>

525
00:22:28,040 --> 00:22:31,970
in theory you don't<font color="#E5E5E5"> need to have these</font>

526
00:22:30,290 --> 00:22:34,240
one-to-one mapping so a task is

527
00:22:31,970 --> 00:22:36,890
basically a container for information

528
00:22:34,240 --> 00:22:38,540
then you have a thread a process can

529
00:22:36,890 --> 00:22:41,090
have one thread or many threads running

530
00:22:38,540 --> 00:22:42,860
so this is basically a bunch of objects

531
00:22:41,090 --> 00:22:46,370
<font color="#E5E5E5">and there is the host the host</font>

532
00:22:42,860 --> 00:22:48,679
represents the machine so it's the<font color="#E5E5E5"> most</font>

533
00:22:46,370 --> 00:22:50,750
<font color="#E5E5E5">valuable part if</font><font color="#CCCCCC"> you have access to port</font>

534
00:22:48,680 --> 00:22:56,240
you<font color="#CCCCCC"> can write anywhere in the machine</font>

535
00:22:50,750 --> 00:22:59,840
meaning<font color="#CCCCCC"> Colonel processes and so on the</font>

536
00:22:56,240 --> 00:23:02,450
kernel itself is is a task in as a task

537
00:22:59,840 --> 00:23:04,459
port because<font color="#E5E5E5"> as I told you this is built</font>

538
00:23:02,450 --> 00:23:06,800
on top of mac and the colonel what is

539
00:23:04,460 --> 00:23:09,880
represented as traditionally the colonel

540
00:23:06,800 --> 00:23:12,980
<font color="#E5E5E5">is another task it has a task port</font>

541
00:23:09,880 --> 00:23:14,960
meaning<font color="#CCCCCC"> that if you get some process</font>

542
00:23:12,980 --> 00:23:17,620
with this task port if you control this

543
00:23:14,960 --> 00:23:20,150
task port you can control<font color="#E5E5E5"> the colonel</font>

544
00:23:17,620 --> 00:23:23,989
that was a vulnerability presented to

545
00:23:20,150 --> 00:23:26,210
your last<font color="#E5E5E5"> year at sea scan which is</font>

546
00:23:23,990 --> 00:23:28,070
basically you could get the the kernel

547
00:23:26,210 --> 00:23:33,560
port and then you can do we could do

548
00:23:28,070 --> 00:23:35,780
<font color="#E5E5E5">anything that you</font><font color="#CCCCCC"> want it if you want to</font>

549
00:23:33,560 --> 00:23:37,370
retrieve the task port from another task

550
00:23:35,780 --> 00:23:40,370
meaning for example a debugger a

551
00:23:37,370 --> 00:23:42,169
debugger needs to control the process to

552
00:23:40,370 --> 00:23:44,750
control some process meaning that the

553
00:23:42,170 --> 00:23:47,570
debugger is implemented in in Mac OS as

554
00:23:44,750 --> 00:23:50,390
a task it gets the task port of that

555
00:23:47,570 --> 00:23:54,050
task and then<font color="#E5E5E5"> you can control oops I</font>

556
00:23:50,390 --> 00:23:55,820
cannot live so if you have that task

557
00:23:54,050 --> 00:23:57,260
port of any task you can<font color="#CCCCCC"> do whatever you</font>

558
00:23:55,820 --> 00:23:59,389
want to the task because you control it

559
00:23:57,260 --> 00:24:04,310
you have the object authorization on on

560
00:23:59,390 --> 00:24:06,920
that port under normal circumstances you

561
00:24:04,310 --> 00:24:09,050
what you get is an authorization request

562
00:24:06,920 --> 00:24:11,420
meaning<font color="#CCCCCC"> ok you have this process that</font>

563
00:24:09,050 --> 00:24:12,379
wants to write to that process<font color="#E5E5E5"> it wasn't</font>

564
00:24:11,420 --> 00:24:14,810
like<font color="#CCCCCC"> this on</font><font color="#E5E5E5"> all</font>

565
00:24:12,380 --> 00:24:17,540
<font color="#E5E5E5">Mac versions it's just the process just</font>

566
00:24:14,810 --> 00:24:19,580
needed to be on a special group but now

567
00:24:17,540 --> 00:24:22,850
you need<font color="#CCCCCC"> to authorize the process one</font>

568
00:24:19,580 --> 00:24:24,710
thing you need<font color="#E5E5E5"> to be aware is that you</font>

569
00:24:22,850 --> 00:24:26,209
<font color="#E5E5E5">just need for example if you are doing</font>

570
00:24:24,710 --> 00:24:28,250
the debugging session and you authorize

571
00:24:26,210 --> 00:24:31,730
the debugger is nothing to authorize the

572
00:24:28,250 --> 00:24:34,250
debugger anymore or at least<font color="#E5E5E5"> until you</font>

573
00:24:31,730 --> 00:24:36,770
reboot<font color="#E5E5E5"> your computer meaning for example</font>

574
00:24:34,250 --> 00:24:40,760
if<font color="#E5E5E5"> there is</font><font color="#CCCCCC"> a malware</font><font color="#E5E5E5"> what a mower could</font>

575
00:24:36,770 --> 00:24:43,400
do is get into your<font color="#E5E5E5"> system</font><font color="#CCCCCC"> and try to</font>

576
00:24:40,760 --> 00:24:44,920
run programs that might have these

577
00:24:43,400 --> 00:24:47,150
authorizations so if you are a developer

578
00:24:44,920 --> 00:24:49,100
<font color="#E5E5E5">you might want to reboot</font><font color="#CCCCCC"> your machine</font>

579
00:24:47,150 --> 00:24:50,720
once in a while because<font color="#E5E5E5"> if you are</font>

580
00:24:49,100 --> 00:24:53,030
debugging there's a process that s

581
00:24:50,720 --> 00:24:54,860
authorization to control other processes

582
00:24:53,030 --> 00:24:57,230
of course you are not if you are<font color="#E5E5E5"> not</font>

583
00:24:54,860 --> 00:25:00,379
running the the process the debugger<font color="#E5E5E5"> has</font>

584
00:24:57,230 --> 00:25:02,120
root if only has authorization to to

585
00:25:00,380 --> 00:25:04,340
attack processes that are running as

586
00:25:02,120 --> 00:25:06,260
your user but<font color="#E5E5E5"> even that is very powerful</font>

587
00:25:04,340 --> 00:25:09,080
<font color="#CCCCCC">you can do a lot of nasty stuff with</font>

588
00:25:06,260 --> 00:25:11,180
<font color="#CCCCCC">that so be careful with this take take</font>

589
00:25:09,080 --> 00:25:15,620
this in mind if you are debugging on

590
00:25:11,180 --> 00:25:18,080
Mike OS one<font color="#E5E5E5"> interesting detail is that a</font>

591
00:25:15,620 --> 00:25:20,689
task<font color="#E5E5E5"> doesn't need any privileges to get</font>

592
00:25:18,080 --> 00:25:24,020
its own port so at us can say give me<font color="#CCCCCC"> my</font>

593
00:25:20,690 --> 00:25:26,270
own<font color="#E5E5E5"> port that's that's</font><font color="#CCCCCC"> ok ok operation</font>

594
00:25:24,020 --> 00:25:29,300
there is a function<font color="#E5E5E5"> for this Mac task</font>

595
00:25:26,270 --> 00:25:31,580
self which basically say give me<font color="#CCCCCC"> my own</font>

596
00:25:29,300 --> 00:25:35,090
<font color="#E5E5E5">part give me a right and authorization</font>

597
00:25:31,580 --> 00:25:36,770
to talk to my own port this is

598
00:25:35,090 --> 00:25:39,889
interesting because as I told you in

599
00:25:36,770 --> 00:25:42,020
complex messages you<font color="#CCCCCC"> can pass port</font>

600
00:25:39,890 --> 00:25:46,490
rights between<font color="#E5E5E5"> between applications or</font>

601
00:25:42,020 --> 00:25:48,980
are in a<font color="#E5E5E5"> message so you can say my</font>

602
00:25:46,490 --> 00:25:50,840
application get my own ports and now

603
00:25:48,980 --> 00:25:53,210
give my ports to some other application

604
00:25:50,840 --> 00:25:57,310
and now that application that receives

605
00:25:53,210 --> 00:26:00,080
the port can control my own application

606
00:25:57,310 --> 00:26:01,899
so this is<font color="#CCCCCC"> very interesting as you can</font>

607
00:26:00,080 --> 00:26:05,149
see<font color="#CCCCCC"> you can passport rights you can also</font>

608
00:26:01,900 --> 00:26:07,910
this is something like file descriptors

609
00:26:05,150 --> 00:26:10,160
that you can pass in a normal<font color="#CCCCCC"> UNIX IPC</font>

610
00:26:07,910 --> 00:26:14,600
it's a very powerful design and very

611
00:26:10,160 --> 00:26:17,690
interesting to to exploit as I<font color="#CCCCCC"> told you</font>

612
00:26:14,600 --> 00:26:20,149
can pass the port 22 other applications

613
00:26:17,690 --> 00:26:23,690
normally what what applications do is

614
00:26:20,150 --> 00:26:26,240
task for peel which is the<font color="#CCCCCC"> the argument</font>

615
00:26:23,690 --> 00:26:27,950
is a PID for the process that<font color="#CCCCCC"> you want</font>

616
00:26:26,240 --> 00:26:30,260
to control<font color="#E5E5E5"> and you want to ask the</font>

617
00:26:27,950 --> 00:26:32,420
system give me that the task object for

618
00:26:30,260 --> 00:26:34,429
that<font color="#CCCCCC"> process this is what lunch is that</font>

619
00:26:32,420 --> 00:26:36,050
request and you say<font color="#CCCCCC"> okay I want to</font>

620
00:26:34,429 --> 00:26:39,559
authorize this process to control and

621
00:26:36,050 --> 00:26:41,960
<font color="#CCCCCC">and so on</font><font color="#E5E5E5"> so this doesn't happen in</font>

622
00:26:39,559 --> 00:26:44,750
normal situations in anti publications

623
00:26:41,960 --> 00:26:48,760
giving task ports to others because that

624
00:26:44,750 --> 00:26:50,870
would be<font color="#CCCCCC"> a security</font><font color="#E5E5E5"> and security problem</font>

625
00:26:48,760 --> 00:26:52,460
because of some tricks if you are

626
00:26:50,870 --> 00:26:54,320
creative enough you can do some tricks

627
00:26:52,460 --> 00:26:56,540
with passing ports what you can

628
00:26:54,320 --> 00:26:59,120
something is<font color="#E5E5E5"> something that you you see</font>

629
00:26:56,540 --> 00:27:02,300
in some linux malware which is basically

630
00:26:59,120 --> 00:27:05,330
creating a parent process and a child

631
00:27:02,300 --> 00:27:07,220
process and they talk to each other you

632
00:27:05,330 --> 00:27:11,480
see also<font color="#E5E5E5"> these on</font><font color="#CCCCCC"> windows is a way</font><font color="#E5E5E5"> to</font>

633
00:27:07,220 --> 00:27:14,000
attack reverse engineering because you

634
00:27:11,480 --> 00:27:16,280
have to walk on on both processes the

635
00:27:14,000 --> 00:27:18,080
problem is that the parent is debugging

636
00:27:16,280 --> 00:27:19,670
the child so if you try to attach<font color="#CCCCCC"> a</font>

637
00:27:18,080 --> 00:27:22,280
debugger you can't because there's

638
00:27:19,670 --> 00:27:23,990
already the parent process controlling

639
00:27:22,280 --> 00:27:25,850
the debugger you can work around this

640
00:27:23,990 --> 00:27:27,559
<font color="#E5E5E5">and so on but basically it's more work</font>

641
00:27:25,850 --> 00:27:31,790
if you are trying<font color="#E5E5E5"> to reverse engineer</font>

642
00:27:27,559 --> 00:27:33,830
the malware one trick for example<font color="#CCCCCC"> you</font>

643
00:27:31,790 --> 00:27:37,129
can put<font color="#CCCCCC"> 1 process controlling the other</font>

644
00:27:33,830 --> 00:27:40,129
you put you create for example an

645
00:27:37,130 --> 00:27:42,440
exception<font color="#E5E5E5"> I divide by</font><font color="#CCCCCC"> 0 the the parent</font>

646
00:27:40,130 --> 00:27:45,020
process will get that that because it's

647
00:27:42,440 --> 00:27:48,620
debugging the process<font color="#E5E5E5"> and then you now</font>

648
00:27:45,020 --> 00:27:50,420
run code and there but this is what you

649
00:27:48,620 --> 00:27:52,550
do for example on<font color="#E5E5E5"> windows on structure</font>

650
00:27:50,420 --> 00:27:54,110
structed exception handlers you put an

651
00:27:52,550 --> 00:27:55,790
annular and then you trigger an

652
00:27:54,110 --> 00:27:57,949
exception<font color="#E5E5E5"> and then the code runs there</font>

653
00:27:55,790 --> 00:28:00,050
so if you are not aware or the first

654
00:27:57,950 --> 00:28:02,780
time when this was used<font color="#CCCCCC"> i</font><font color="#E5E5E5"> don't know 10</font>

655
00:28:00,050 --> 00:28:04,610
15 years<font color="#E5E5E5"> ago it would fool the reverse</font>

656
00:28:02,780 --> 00:28:06,350
engineers because they would they

657
00:28:04,610 --> 00:28:07,850
wouldn't see where the codes would be

658
00:28:06,350 --> 00:28:10,570
executing because they're<font color="#E5E5E5"> the debugger</font>

659
00:28:07,850 --> 00:28:13,070
will say<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> i see an exception i</font>

660
00:28:10,570 --> 00:28:14,720
stopped at<font color="#CCCCCC"> the exception and then the</font>

661
00:28:13,070 --> 00:28:17,210
other<font color="#E5E5E5"> code would not be run because the</font>

662
00:28:14,720 --> 00:28:20,630
code<font color="#E5E5E5"> was inside the exception handler of</font>

663
00:28:17,210 --> 00:28:23,450
the of the process so<font color="#CCCCCC"> we would miss cold</font>

664
00:28:20,630 --> 00:28:26,150
or the process would crash and so on<font color="#E5E5E5"> so</font>

665
00:28:23,450 --> 00:28:28,880
this<font color="#E5E5E5"> is a very nice trick to to anti</font>

666
00:28:26,150 --> 00:28:32,090
reverse engineering so let me<font color="#CCCCCC"> explain</font>

667
00:28:28,880 --> 00:28:34,700
<font color="#E5E5E5">you all to send Mac messages your you</font>

668
00:28:32,090 --> 00:28:37,360
have the messages the format now how can

669
00:28:34,700 --> 00:28:39,980
we send messages between the processes

670
00:28:37,360 --> 00:28:43,610
we need to define the four

671
00:28:39,980 --> 00:28:45,919
lot of the messages you<font color="#CCCCCC"> need to define</font>

672
00:28:43,610 --> 00:28:48,290
to two structures one is the one to send

673
00:28:45,919 --> 00:28:52,190
we sending the message sends in a format

674
00:28:48,290 --> 00:28:54,139
and there's another body another message

675
00:28:52,190 --> 00:28:56,570
<font color="#E5E5E5">format for the one that receives that</font>

676
00:28:54,140 --> 00:28:58,610
can receive further information you can

677
00:28:56,570 --> 00:29:00,620
add for example a trailer that tells you

678
00:28:58,610 --> 00:29:02,659
something some things about the<font color="#CCCCCC"> message</font>

679
00:29:00,620 --> 00:29:06,678
usually you don't need you don't need to

680
00:29:02,660 --> 00:29:09,770
add that stuff so<font color="#CCCCCC"> you read register a</font>

681
00:29:06,679 --> 00:29:11,780
server you<font color="#CCCCCC"> need to do some some games</font>

682
00:29:09,770 --> 00:29:13,790
with ports and basically what you are

683
00:29:11,780 --> 00:29:15,830
saying is you allocate important

684
00:29:13,790 --> 00:29:19,010
application and you give its rights

685
00:29:15,830 --> 00:29:21,830
because Mac as port rice basically

686
00:29:19,010 --> 00:29:23,540
basically which which are I have a right

687
00:29:21,830 --> 00:29:26,030
to send a message<font color="#CCCCCC"> I have a right to</font>

688
00:29:23,540 --> 00:29:27,620
receive a message so<font color="#CCCCCC"> you need to</font>

689
00:29:26,030 --> 00:29:30,110
authorize processes to receive or send

690
00:29:27,620 --> 00:29:31,939
messages else it if you send if you

691
00:29:30,110 --> 00:29:34,219
could send<font color="#CCCCCC"> are retiring messages to</font>

692
00:29:31,940 --> 00:29:37,370
processes there will be no<font color="#CCCCCC"> not</font><font color="#E5E5E5"> security</font>

693
00:29:34,220 --> 00:29:40,190
and then you do this bootstrap register

694
00:29:37,370 --> 00:29:42,020
which is basically saying registering

695
00:29:40,190 --> 00:29:45,350
<font color="#CCCCCC">with with</font><font color="#E5E5E5"> the server desert server the</font>

696
00:29:42,020 --> 00:29:48,410
process one on<font color="#CCCCCC"> Mac is launched d which</font>

697
00:29:45,350 --> 00:29:50,719
<font color="#CCCCCC">is a server you tell ok tell everyone</font>

698
00:29:48,410 --> 00:29:53,390
that is interested that I'm<font color="#E5E5E5"> listening</font>

699
00:29:50,720 --> 00:29:58,360
<font color="#E5E5E5">for messages I'm these services com dot</font>

700
00:29:53,390 --> 00:30:01,010
putos dot<font color="#CCCCCC"> Mac rice if my famous name and</font>

701
00:29:58,360 --> 00:30:03,678
then you register and say i'm a server

702
00:30:01,010 --> 00:30:05,629
<font color="#E5E5E5">i'm listening if anyone lookups for this</font>

703
00:30:03,679 --> 00:30:10,280
service I'm the server for for these

704
00:30:05,630 --> 00:30:12,080
services<font color="#CCCCCC"> I forgot</font><font color="#E5E5E5"> the puta joke damn so</font>

705
00:30:10,280 --> 00:30:13,700
<font color="#E5E5E5">basically you loop and do you are a</font>

706
00:30:12,080 --> 00:30:16,909
server you loop and you are<font color="#CCCCCC"> waiting for</font>

707
00:30:13,700 --> 00:30:18,890
for for messages you<font color="#CCCCCC"> have to set some</font>

708
00:30:16,910 --> 00:30:20,690
options saying that you<font color="#CCCCCC"> are a server i'm</font>

709
00:30:18,890 --> 00:30:22,970
a server and i'm waiting for messages

710
00:30:20,690 --> 00:30:25,130
and then one important<font color="#E5E5E5"> thing is that mac</font>

711
00:30:22,970 --> 00:30:28,760
message blocks so it's waiting messages

712
00:30:25,130 --> 00:30:31,910
if no messages arrive it's simply block

713
00:30:28,760 --> 00:30:33,770
waiting waiting for for them so you

714
00:30:31,910 --> 00:30:36,260
basically put a server loop in an

715
00:30:33,770 --> 00:30:38,210
infinite loop you set the options in

716
00:30:36,260 --> 00:30:40,460
this case you say you are receiving

717
00:30:38,210 --> 00:30:42,590
messages you are a server Mac receive

718
00:30:40,460 --> 00:30:44,000
message the options and<font color="#E5E5E5"> load the large</font>

719
00:30:42,590 --> 00:30:47,600
is saying you are expecting large

720
00:30:44,000 --> 00:30:49,940
messages you start the server and then

721
00:30:47,600 --> 00:30:52,639
you are just waiting for for a message

722
00:30:49,940 --> 00:30:53,680
when a message<font color="#E5E5E5"> arrives the code</font>

723
00:30:52,640 --> 00:31:00,550
continues aunt

724
00:30:53,680 --> 00:31:03,070
it's blocked the client had you have to

725
00:31:00,550 --> 00:31:06,700
talk<font color="#CCCCCC"> to lunch d which controls the parts</font>

726
00:31:03,070 --> 00:31:08,500
knows where the servers are you located

727
00:31:06,700 --> 00:31:10,690
once again a port to receive messages

728
00:31:08,500 --> 00:31:14,500
you want to say I'm a client i want<font color="#E5E5E5"> to</font>

729
00:31:10,690 --> 00:31:16,570
receive messages so here you are looking

730
00:31:14,500 --> 00:31:18,520
up the server<font color="#E5E5E5"> the other server you</font>

731
00:31:16,570 --> 00:31:22,389
locate<font color="#CCCCCC"> the message and then you continue</font>

732
00:31:18,520 --> 00:31:25,960
you prepared the message we say sets a

733
00:31:22,390 --> 00:31:28,240
bunch<font color="#E5E5E5"> of options we are sending these</font>

734
00:31:25,960 --> 00:31:33,160
are the ports the server port that we

735
00:31:28,240 --> 00:31:35,050
look up here railroad here so this<font color="#E5E5E5"> is</font>

736
00:31:33,160 --> 00:31:37,360
locating the the server so I'm telling

737
00:31:35,050 --> 00:31:41,080
<font color="#E5E5E5">where is the server and then if the</font>

738
00:31:37,360 --> 00:31:44,080
function worked I got the server<font color="#E5E5E5"> you set</font>

739
00:31:41,080 --> 00:31:46,600
a bunch<font color="#E5E5E5"> of things and the trick is here</font>

740
00:31:44,080 --> 00:31:49,030
we are putting the data as I told you

741
00:31:46,600 --> 00:31:52,480
Muktuk self which<font color="#CCCCCC"> is basically the</font>

742
00:31:49,030 --> 00:31:55,090
client<font color="#CCCCCC"> the client is is getting the port</font>

743
00:31:52,480 --> 00:31:57,250
itself putting the port on a message and

744
00:31:55,090 --> 00:31:59,139
is going<font color="#E5E5E5"> to send the message to the</font>

745
00:31:57,250 --> 00:32:02,490
<font color="#E5E5E5">server so basically I'm transmitting a</font>

746
00:31:59,140 --> 00:32:04,840
port right over a<font color="#CCCCCC"> Mac message and</font>

747
00:32:02,490 --> 00:32:06,610
finally<font color="#CCCCCC"> you send them the message once</font>

748
00:32:04,840 --> 00:32:08,379
again with<font color="#CCCCCC"> mac message this is on the</font>

749
00:32:06,610 --> 00:32:11,469
<font color="#CCCCCC">clients</font><font color="#E5E5E5"> mac message is the function that</font>

750
00:32:08,380 --> 00:32:14,200
you normally use for this you send a

751
00:32:11,470 --> 00:32:16,330
<font color="#E5E5E5">message and now we are waiting for for</font>

752
00:32:14,200 --> 00:32:18,760
for a server you can you can put the

753
00:32:16,330 --> 00:32:20,800
server saying<font color="#CCCCCC"> ok i received the message</font>

754
00:32:18,760 --> 00:32:22,810
and<font color="#E5E5E5"> send another message confirming that</font>

755
00:32:20,800 --> 00:32:24,430
that you receive the message this<font color="#CCCCCC"> is</font>

756
00:32:22,810 --> 00:32:26,350
<font color="#CCCCCC">good because</font><font color="#E5E5E5"> it allows you to sync the</font>

757
00:32:24,430 --> 00:32:28,600
client and the server<font color="#E5E5E5"> you already know</font>

758
00:32:26,350 --> 00:32:31,540
<font color="#E5E5E5">ok the clock the server finally as the</font>

759
00:32:28,600 --> 00:32:33,340
port<font color="#E5E5E5"> rights tell the client and the</font>

760
00:32:31,540 --> 00:32:35,440
client knows<font color="#E5E5E5"> ok the server received</font>

761
00:32:33,340 --> 00:32:40,449
everything everything is ok I can do

762
00:32:35,440 --> 00:32:42,160
whatever I want now as I told you the

763
00:32:40,450 --> 00:32:44,440
server will receive<font color="#CCCCCC"> the message if</font>

764
00:32:42,160 --> 00:32:46,990
everything went ok Mac is pretty it's

765
00:32:44,440 --> 00:32:50,350
pretty reliable sometimes slow but

766
00:32:46,990 --> 00:32:52,270
pretty reliable it extracts the port

767
00:32:50,350 --> 00:32:54,370
right receives the message says I have

768
00:32:52,270 --> 00:32:56,710
these matches there is a port right I

769
00:32:54,370 --> 00:32:58,209
extract<font color="#E5E5E5"> and now you can control the</font>

770
00:32:56,710 --> 00:33:01,120
other process in this case the<font color="#CCCCCC"> client</font>

771
00:32:58,210 --> 00:33:03,160
<font color="#E5E5E5">process as I told</font><font color="#CCCCCC"> you can it can send</font>

772
00:33:01,120 --> 00:33:07,239
you a reply ok I'm ready<font color="#E5E5E5"> everything went</font>

773
00:33:03,160 --> 00:33:10,020
ok I can we can now start talking

774
00:33:07,240 --> 00:33:13,420
so this<font color="#E5E5E5"> is basically sending a message</font>

775
00:33:10,020 --> 00:33:15,220
the message is empty there is nothing<font color="#E5E5E5"> no</font>

776
00:33:13,420 --> 00:33:17,050
content is basically it's just<font color="#CCCCCC"> a sink</font>

777
00:33:15,220 --> 00:33:19,660
message I'm just saying okay I receive

778
00:33:17,050 --> 00:33:21,700
everything is okay there's no

779
00:33:19,660 --> 00:33:26,350
interesting disguising in sending in

780
00:33:21,700 --> 00:33:29,050
sending the data so when I was looking

781
00:33:26,350 --> 00:33:30,969
<font color="#E5E5E5">at this my original goal was to exploit</font>

782
00:33:29,050 --> 00:33:34,240
the<font color="#E5E5E5"> sweaty binaries I wasn't looking at</font>

783
00:33:30,970 --> 00:33:38,110
steep itself this was at the<font color="#CCCCCC"> time there</font>

784
00:33:34,240 --> 00:33:40,990
was a vulnerability rootless that could

785
00:33:38,110 --> 00:33:43,209
exploit<font color="#E5E5E5"> binaries to ID binaries and</font>

786
00:33:40,990 --> 00:33:46,420
whatever they want because they have

787
00:33:43,210 --> 00:33:48,640
root access and as I told<font color="#CCCCCC"> you</font><font color="#E5E5E5"> the same</font>

788
00:33:46,420 --> 00:33:50,350
technique will also work for in title

789
00:33:48,640 --> 00:33:53,160
binaries because the vulnerability

790
00:33:50,350 --> 00:33:57,580
allows you to execute remote<font color="#CCCCCC"> codes and</font>

791
00:33:53,160 --> 00:34:00,400
on the target binary let's go to the

792
00:33:57,580 --> 00:34:06,820
next<font color="#E5E5E5"> step for</font><font color="#CCCCCC"> those of you that don't</font>

793
00:34:00,400 --> 00:34:09,190
know what is is XP this is the<font color="#E5E5E5"> part</font>

794
00:34:06,820 --> 00:34:12,190
where it's very<font color="#E5E5E5"> easy to spot to spot the</font>

795
00:34:09,190 --> 00:34:14,800
vulnerability so these you<font color="#CCCCCC"> have a bunch</font>

796
00:34:12,190 --> 00:34:18,310
<font color="#E5E5E5">of exec functions is that kale is</font><font color="#CCCCCC"> that</font>

797
00:34:14,800 --> 00:34:20,320
<font color="#E5E5E5">Kelly bunch of exactly exactly that</font>

798
00:34:18,310 --> 00:34:23,679
allow you to start to start a process

799
00:34:20,320 --> 00:34:28,629
see this is the<font color="#E5E5E5"> flow on Mac this is one</font>

800
00:34:23,679 --> 00:34:30,730
of<font color="#E5E5E5"> the reasons why AFL is slow fuzzing</font>

801
00:34:28,629 --> 00:34:32,589
on<font color="#CCCCCC"> Mac OS because there's a</font><font color="#E5E5E5"> lot of coal</font>

802
00:34:30,730 --> 00:34:35,260
prices there's a lot of stuff happening

803
00:34:32,590 --> 00:34:37,869
so it's slower starting more processes

804
00:34:35,260 --> 00:34:41,830
and for fuzzing you want to cut all the

805
00:34:37,869 --> 00:34:43,810
overhead so you start a process it goes

806
00:34:41,830 --> 00:34:45,879
to a bunch of things this is the car

807
00:34:43,810 --> 00:34:48,250
image that detect the core function that

808
00:34:45,879 --> 00:34:49,899
detects what kind of<font color="#CCCCCC"> thing you want to</font>

809
00:34:48,250 --> 00:34:53,320
<font color="#E5E5E5">execute because you can execute the</font>

810
00:34:49,899 --> 00:34:55,600
script or a binary too many<font color="#E5E5E5"> things it</font>

811
00:34:53,320 --> 00:34:57,880
then reads the file if it's a binary<font color="#E5E5E5"> a</font>

812
00:34:55,600 --> 00:35:00,100
Mac whole binary then it will load the

813
00:34:57,880 --> 00:35:02,530
file and then there is<font color="#E5E5E5"> this function</font>

814
00:35:00,100 --> 00:35:06,779
that will test if the binary is ass yv

815
00:35:02,530 --> 00:35:09,760
and do some operations on that binary

816
00:35:06,780 --> 00:35:14,170
this is a code snippet from the from the

817
00:35:09,760 --> 00:35:16,450
<font color="#E5E5E5">kernel source you</font><font color="#CCCCCC"> can see here the code</font>

818
00:35:14,170 --> 00:35:18,640
that<font color="#E5E5E5"> loads the</font><font color="#CCCCCC"> Mac the the file it is a</font>

819
00:35:16,450 --> 00:35:20,770
binary<font color="#E5E5E5"> file and it will parse the file</font>

820
00:35:18,640 --> 00:35:23,200
and load the file into memory

821
00:35:20,770 --> 00:35:30,330
and then continue the to start the

822
00:35:23,200 --> 00:35:32,919
process this is basically telling you

823
00:35:30,330 --> 00:35:34,420
the two main functions love<font color="#CCCCCC"> mac file is</font>

824
00:35:32,920 --> 00:35:37,210
the function that loads the binary and

825
00:35:34,420 --> 00:35:39,010
puts in memory most of the there's

826
00:35:37,210 --> 00:35:41,800
another function inside load Mac file

827
00:35:39,010 --> 00:35:43,300
which is<font color="#E5E5E5"> parts mark file which is the</font>

828
00:35:41,800 --> 00:35:45,370
function that does the dirty work of

829
00:35:43,300 --> 00:35:50,710
parsing and understanding which commands

830
00:35:45,370 --> 00:35:53,830
<font color="#E5E5E5">which data is inside the binary remember</font>

831
00:35:50,710 --> 00:35:55,060
if you<font color="#CCCCCC"> control the task port often of an</font>

832
00:35:53,830 --> 00:35:57,100
application you control the whole

833
00:35:55,060 --> 00:35:59,880
process because the task is the most

834
00:35:57,100 --> 00:36:02,170
powerful abstraction<font color="#E5E5E5"> on the process</font>

835
00:35:59,880 --> 00:36:05,290
there was an obvious bug bad seed

836
00:36:02,170 --> 00:36:10,750
inventor<font color="#CCCCCC"> pantera</font><font color="#E5E5E5"> I think it's 10.0 10.1</font>

837
00:36:05,290 --> 00:36:14,320
or<font color="#E5E5E5"> Samsa go 10.0 but</font><font color="#CCCCCC"> no 10.1 or 10.2 yes</font>

838
00:36:10,750 --> 00:36:18,430
the bug was patched in 10.3 so if you

839
00:36:14,320 --> 00:36:22,240
have a<font color="#CCCCCC"> swipe a process what they do is</font>

840
00:36:18,430 --> 00:36:24,250
<font color="#E5E5E5">they have to reset the task port because</font>

841
00:36:22,240 --> 00:36:27,669
what we could do it how could you attack

842
00:36:24,250 --> 00:36:30,340
this it would put<font color="#E5E5E5"> ass yv binary inside</font>

843
00:36:27,670 --> 00:36:33,660
the debugger start debugging the process

844
00:36:30,340 --> 00:36:37,660
and because of<font color="#CCCCCC"> the bugger controls the</font>

845
00:36:33,660 --> 00:36:40,629
task port you get the<font color="#CCCCCC"> swype privileges</font>

846
00:36:37,660 --> 00:36:42,850
so you can change the code<font color="#CCCCCC"> in the task</font>

847
00:36:40,630 --> 00:36:45,400
that is that you control and you are

848
00:36:42,850 --> 00:36:47,799
still running with with yv privileges

849
00:36:45,400 --> 00:36:49,930
without this you<font color="#E5E5E5"> can do that what they</font>

850
00:36:47,800 --> 00:36:51,700
need to do is when you start ass<font color="#CCCCCC"> yv</font>

851
00:36:49,930 --> 00:36:54,790
process one of the things<font color="#E5E5E5"> they</font><font color="#CCCCCC"> need to</font>

852
00:36:51,700 --> 00:36:57,879
do is to reset the task port there was a

853
00:36:54,790 --> 00:37:00,670
process controlling the task port then

854
00:36:57,880 --> 00:37:03,640
you don't get control anymore because

855
00:37:00,670 --> 00:37:08,770
the task was reset so the debugger lost

856
00:37:03,640 --> 00:37:10,900
the<font color="#E5E5E5"> rights to that port so this is more</font>

857
00:37:08,770 --> 00:37:13,330
recent codes that they do some

858
00:37:10,900 --> 00:37:15,670
operations now they reset the task port

859
00:37:13,330 --> 00:37:20,110
and they also reset the threads because

860
00:37:15,670 --> 00:37:22,510
the treads i also have rights so if you

861
00:37:20,110 --> 00:37:23,770
<font color="#CCCCCC">add you can</font><font color="#E5E5E5"> have rights on the task and</font>

862
00:37:22,510 --> 00:37:26,170
the treads independently<font color="#E5E5E5"> they are</font>

863
00:37:23,770 --> 00:37:28,390
independent ports or independent

864
00:37:26,170 --> 00:37:30,400
abstractions in terms of port rights so

865
00:37:28,390 --> 00:37:31,870
if you control a thread and they didn't

866
00:37:30,400 --> 00:37:34,330
reset the thread you could still attack

867
00:37:31,870 --> 00:37:36,130
the thread is not the task we

868
00:37:34,330 --> 00:37:38,500
is the same thing as long the thread run

869
00:37:36,130 --> 00:37:43,300
some code you can do whatever you want

870
00:37:38,500 --> 00:37:45,100
on that space so hopefully<font color="#E5E5E5"> the crew</font>

871
00:37:43,300 --> 00:37:47,020
understood<font color="#CCCCCC"> lab it's not very complicated</font>

872
00:37:45,100 --> 00:37:49,240
the car<font color="#E5E5E5"> nize response the colonel is</font>

873
00:37:47,020 --> 00:37:52,840
responsible two loads<font color="#E5E5E5"> and map any</font>

874
00:37:49,240 --> 00:37:55,660
executable to that you want<font color="#E5E5E5"> to run and</font>

875
00:37:52,840 --> 00:37:57,850
it will try try to guarantee the

876
00:37:55,660 --> 00:37:59,950
integrity of a new process in this case

877
00:37:57,850 --> 00:38:01,839
in the in case<font color="#E5E5E5"> of swype processes</font>

878
00:37:59,950 --> 00:38:04,740
because the sweaty processes are the

879
00:38:01,840 --> 00:38:06,700
most powerful<font color="#E5E5E5"> or were the most powerful</font>

880
00:38:04,740 --> 00:38:09,609
binaries that you have in a system

881
00:38:06,700 --> 00:38:14,589
because they allow you a normal<font color="#E5E5E5"> user to</font>

882
00:38:09,610 --> 00:38:17,260
execute as as as root in this case once

883
00:38:14,590 --> 00:38:21,610
again it tries<font color="#CCCCCC"> to protect the wineries</font>

884
00:38:17,260 --> 00:38:23,500
so let's go<font color="#CCCCCC"> into what was</font><font color="#E5E5E5"> a zero-day so</font>

885
00:38:21,610 --> 00:38:27,970
this is<font color="#CCCCCC"> the function to execute the</font>

886
00:38:23,500 --> 00:38:30,820
binary just a part of<font color="#E5E5E5"> it the binary is</font>

887
00:38:27,970 --> 00:38:32,890
loaded<font color="#E5E5E5"> its parsed then this function the</font>

888
00:38:30,820 --> 00:38:35,530
one that we said<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> ports to assure</font>

889
00:38:32,890 --> 00:38:38,080
the security of the binary<font color="#CCCCCC"> its seer and</font>

890
00:38:35,530 --> 00:38:41,860
then here the<font color="#CCCCCC"> two ones letter that I</font>

891
00:38:38,080 --> 00:38:44,440
show you the<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> and it's very easy</font>

892
00:38:41,860 --> 00:38:46,960
to look to find a bug there is a race

893
00:38:44,440 --> 00:38:49,630
condition between here when the file is

894
00:38:46,960 --> 00:38:54,160
being loaded into memory and when the

895
00:38:49,630 --> 00:38:55,480
parts is being results because<font color="#E5E5E5"> there if</font>

896
00:38:54,160 --> 00:38:58,390
there is a race condition there is the

897
00:38:55,480 --> 00:39:00,670
timing<font color="#E5E5E5"> here where the file is already in</font>

898
00:38:58,390 --> 00:39:04,660
memory but the part is still<font color="#E5E5E5"> not reset</font>

899
00:39:00,670 --> 00:39:06,520
so if you have some if<font color="#E5E5E5"> you give the</font>

900
00:39:04,660 --> 00:39:08,049
<font color="#E5E5E5">ports to some other application in this</font>

901
00:39:06,520 --> 00:39:09,730
case the server and this is the reason

902
00:39:08,050 --> 00:39:12,970
<font color="#E5E5E5">why the client-server model that I</font>

903
00:39:09,730 --> 00:39:15,010
presented you you that server can do

904
00:39:12,970 --> 00:39:16,839
something here in this place in this

905
00:39:15,010 --> 00:39:19,270
time space and if you can do something

906
00:39:16,840 --> 00:39:21,580
here basically<font color="#CCCCCC"> you put a shell code that</font>

907
00:39:19,270 --> 00:39:23,759
gives you a shell in this place when the

908
00:39:21,580 --> 00:39:26,470
<font color="#E5E5E5">program when the colonel arrives here</font>

909
00:39:23,760 --> 00:39:28,660
the binary that was loaded already has

910
00:39:26,470 --> 00:39:30,790
different codes in memory but it<font color="#E5E5E5"> doesn't</font>

911
00:39:28,660 --> 00:39:33,700
care because it didn't detect this race

912
00:39:30,790 --> 00:39:37,180
condition and when you<font color="#E5E5E5"> arrive here you</font>

913
00:39:33,700 --> 00:39:40,419
already got root codes running into the

914
00:39:37,180 --> 00:39:43,089
process this is a more complex version

915
00:39:40,420 --> 00:39:47,230
and because now you have the mac<font color="#E5E5E5"> f</font>

916
00:39:43,090 --> 00:39:49,000
framework trying to check right there's

917
00:39:47,230 --> 00:39:52,070
a hook on

918
00:39:49,000 --> 00:39:54,800
mmm sending<font color="#CCCCCC"> two mfi which is one of</font><font color="#E5E5E5"> the</font>

919
00:39:52,070 --> 00:39:57,860
processes<font color="#E5E5E5"> that attack that protects you</font>

920
00:39:54,800 --> 00:40:01,400
your iOS phone from<font color="#CCCCCC"> jailbreaks this is</font>

921
00:39:57,860 --> 00:40:04,250
one of<font color="#E5E5E5"> the most attack processes so it</font>

922
00:40:01,400 --> 00:40:07,910
tries to check do some verifications but

923
00:40:04,250 --> 00:40:09,470
the race is still<font color="#E5E5E5"> here on this space it</font>

924
00:40:07,910 --> 00:40:12,140
even<font color="#E5E5E5"> improves the race because there's</font>

925
00:40:09,470 --> 00:40:14,120
code more code running on this<font color="#E5E5E5"> pass so</font>

926
00:40:12,140 --> 00:40:16,910
you have more time<font color="#E5E5E5"> to win to win this</font>

927
00:40:14,120 --> 00:40:20,569
race which is very beautiful it's a very

928
00:40:16,910 --> 00:40:23,569
beautiful logical vulnerability so the

929
00:40:20,570 --> 00:40:25,430
ports are only reset after the code is

930
00:40:23,570 --> 00:40:27,500
mapped so this is<font color="#CCCCCC"> the</font><font color="#E5E5E5"> problem in it</font>

931
00:40:25,430 --> 00:40:32,600
first we set the port and then you need

932
00:40:27,500 --> 00:40:35,630
to map and map the process so this<font color="#CCCCCC"> is</font>

933
00:40:32,600 --> 00:40:37,370
<font color="#E5E5E5">the reason why i told you about sending</font>

934
00:40:35,630 --> 00:40:40,970
port rights between a client and the

935
00:40:37,370 --> 00:40:45,740
server so so for example<font color="#CCCCCC"> you have a</font>

936
00:40:40,970 --> 00:40:49,100
binary you pass the port 22 some to a

937
00:40:45,740 --> 00:40:51,830
server and now you can use the<font color="#E5E5E5"> Isaac</font>

938
00:40:49,100 --> 00:40:55,160
exactly function to execute some other

939
00:40:51,830 --> 00:40:57,740
binary still in the same process but

940
00:40:55,160 --> 00:41:00,230
since the server is controlling the task

941
00:40:57,740 --> 00:41:03,950
port you can<font color="#E5E5E5"> write some code so if you</font>

942
00:41:00,230 --> 00:41:07,130
if you if you put a few exact forever so

943
00:41:03,950 --> 00:41:09,350
ID binary the server can do something to

944
00:41:07,130 --> 00:41:13,580
the mapping of that binary and it can

945
00:41:09,350 --> 00:41:16,190
run code with with root privileges so if

946
00:41:13,580 --> 00:41:18,560
<font color="#CCCCCC">we win this</font><font color="#E5E5E5"> race we can write anything</font>

947
00:41:16,190 --> 00:41:21,620
into the new process so this means game

948
00:41:18,560 --> 00:41:26,600
over to any protection that that depends

949
00:41:21,620 --> 00:41:29,029
<font color="#E5E5E5">on</font><font color="#CCCCCC"> are on</font><font color="#E5E5E5"> the binary so the trick is how</font>

950
00:41:26,600 --> 00:41:30,650
to get the task port of another task

951
00:41:29,030 --> 00:41:32,060
right now you already<font color="#E5E5E5"> know you just put</font>

952
00:41:30,650 --> 00:41:34,310
<font color="#E5E5E5">the server and the client and it has</font>

953
00:41:32,060 --> 00:41:37,570
made<font color="#E5E5E5"> the parts between them I told you</font>

954
00:41:34,310 --> 00:41:40,490
task for Pete puts that that that box

955
00:41:37,570 --> 00:41:42,770
maybe that works fishing still works and

956
00:41:40,490 --> 00:41:44,629
there are some users that would put the

957
00:41:42,770 --> 00:41:47,840
password without any problem there but

958
00:41:44,630 --> 00:41:50,300
we want<font color="#E5E5E5"> to be sophisticated so we want</font>

959
00:41:47,840 --> 00:41:54,110
<font color="#E5E5E5">to work around this we don't want that</font>

960
00:41:50,300 --> 00:41:56,960
prompt so what we put it we have a

961
00:41:54,110 --> 00:42:00,650
client that says<font color="#CCCCCC"> ok take my port server</font>

962
00:41:56,960 --> 00:42:01,910
receives the port then we exact the

963
00:42:00,650 --> 00:42:04,130
binary that we won

964
00:42:01,910 --> 00:42:06,288
to attack on the client and the<font color="#CCCCCC"> server</font>

965
00:42:04,130 --> 00:42:08,210
start when the server<font color="#CCCCCC"> syncs with the</font>

966
00:42:06,289 --> 00:42:09,819
client this<font color="#E5E5E5"> is the reason why you</font><font color="#CCCCCC"> have</font>

967
00:42:08,210 --> 00:42:12,890
to sync the client and<font color="#E5E5E5"> the server</font>

968
00:42:09,819 --> 00:42:15,259
because if you start executing this

969
00:42:12,890 --> 00:42:17,180
before the server receives the message

970
00:42:15,260 --> 00:42:19,010
you will lose the race it will be dead

971
00:42:17,180 --> 00:42:21,109
very difficult to sync the race but

972
00:42:19,010 --> 00:42:23,470
sending the message when<font color="#CCCCCC"> the client says</font>

973
00:42:21,109 --> 00:42:26,750
okay I receive the message the server is

974
00:42:23,470 --> 00:42:28,669
finally in sync so<font color="#CCCCCC"> I will i can start</font>

975
00:42:26,750 --> 00:42:31,579
executing and the server will basically

976
00:42:28,670 --> 00:42:34,549
try to<font color="#CCCCCC"> brute force try to to to to win</font>

977
00:42:31,579 --> 00:42:38,480
the race so let's put everything

978
00:42:34,549 --> 00:42:41,119
together how to<font color="#E5E5E5"> hack this this is the</font>

979
00:42:38,480 --> 00:42:43,670
whiskey corn at sis can basically you

980
00:42:41,119 --> 00:42:47,480
have<font color="#CCCCCC"> to drink two shots of whiskey for</font>

981
00:42:43,670 --> 00:42:50,809
talking five minutes<font color="#E5E5E5"> I used to have the</font>

982
00:42:47,480 --> 00:42:53,510
record of of these<font color="#CCCCCC"> there's a very very</font>

983
00:42:50,809 --> 00:42:56,329
bad<font color="#E5E5E5"> video of me we're getting very</font><font color="#CCCCCC"> drunk</font>

984
00:42:53,510 --> 00:42:58,039
talking about hacking team because of

985
00:42:56,329 --> 00:43:00,440
<font color="#CCCCCC">these I was supposed to talk</font><font color="#E5E5E5"> five</font>

986
00:42:58,039 --> 00:43:02,690
minutes<font color="#E5E5E5"> and I think I did six shots so I</font>

987
00:43:00,440 --> 00:43:05,859
<font color="#CCCCCC">talked like 15</font><font color="#E5E5E5"> minutes it isn't went</font>

988
00:43:02,690 --> 00:43:08,599
very well it's very<font color="#E5E5E5"> dangerous not do it</font>

989
00:43:05,859 --> 00:43:12,788
so ought to exploit these<font color="#E5E5E5"> I already told</font>

990
00:43:08,599 --> 00:43:12,789
you all the tricks you have the client

991
00:43:13,119 --> 00:43:20,539
oops you have the client that gets its

992
00:43:17,180 --> 00:43:22,720
own port sends the a<font color="#E5E5E5"> Mac message to the</font>

993
00:43:20,539 --> 00:43:25,369
server the<font color="#CCCCCC"> server</font><font color="#E5E5E5"> acknowledge</font>

994
00:43:22,720 --> 00:43:27,980
acknowledge is that it has received<font color="#E5E5E5"> the</font>

995
00:43:25,369 --> 00:43:30,619
message the client is waiting for for

996
00:43:27,980 --> 00:43:32,839
receiving the message as soon it

997
00:43:30,619 --> 00:43:34,960
receives<font color="#CCCCCC"> the message it executes the</font>

998
00:43:32,839 --> 00:43:38,450
target binary that you want to exploit

999
00:43:34,960 --> 00:43:41,359
and the server is already in a loop in

1000
00:43:38,450 --> 00:43:42,980
an infinite loop trying to write to the

1001
00:43:41,359 --> 00:43:45,558
process trying through in<font color="#E5E5E5"> this case some</font>

1002
00:43:42,980 --> 00:43:47,420
shell code that gives you a bosch prompt

1003
00:43:45,559 --> 00:43:49,549
you could white anything that if you

1004
00:43:47,420 --> 00:43:52,549
want you want to keep as short as

1005
00:43:49,549 --> 00:43:55,220
possible so to improve your your chances

1006
00:43:52,549 --> 00:43:58,220
of winning the<font color="#E5E5E5"> race shell code to</font>

1007
00:43:55,220 --> 00:44:00,680
execute the show is very small so the

1008
00:43:58,220 --> 00:44:03,399
trick for egg for writing to another

1009
00:44:00,680 --> 00:44:05,960
process is that<font color="#E5E5E5"> function mach vm rights</font>

1010
00:44:03,400 --> 00:44:08,000
which the first<font color="#E5E5E5"> argument is the task</font>

1011
00:44:05,960 --> 00:44:15,849
port so it tells you i want to write

1012
00:44:08,000 --> 00:44:15,849
whatever task I have rights too<font color="#E5E5E5"> ok</font>

1013
00:44:22,529 --> 00:44:28,509
okay so thus<font color="#E5E5E5"> why the task is already</font>

1014
00:44:25,839 --> 00:44:32,099
mapped when we are writing this the

1015
00:44:28,509 --> 00:44:35,470
process is mapped so we are changing the

1016
00:44:32,099 --> 00:44:37,720
memory of the target process and if<font color="#E5E5E5"> we</font>

1017
00:44:35,470 --> 00:44:43,538
win the race we got a root shell on the

1018
00:44:37,720 --> 00:44:45,879
<font color="#E5E5E5">target process so we can write anything</font>

1019
00:44:43,539 --> 00:44:48,099
<font color="#E5E5E5">to the new process we need to find</font><font color="#CCCCCC"> the</font>

1020
00:44:45,880 --> 00:44:50,349
memory<font color="#E5E5E5"> usually the entry point is the</font>

1021
00:44:48,099 --> 00:44:52,900
disease<font color="#CCCCCC"> to worry because you know in</font>

1022
00:44:50,349 --> 00:44:55,269
theory it's going to be the first code

1023
00:44:52,900 --> 00:44:56,859
to be executed you can have some C++

1024
00:44:55,269 --> 00:45:00,098
constructors which is one trick of

1025
00:44:56,859 --> 00:45:02,799
running code before but ok let's assume

1026
00:45:00,099 --> 00:45:05,049
attack the entry point and if we really

1027
00:45:02,799 --> 00:45:07,119
win this race we our code will be

1028
00:45:05,049 --> 00:45:10,509
executed game over we took control of

1029
00:45:07,119 --> 00:45:15,069
<font color="#E5E5E5">the binary but there's another obstacle</font>

1030
00:45:10,509 --> 00:45:18,039
before final victory aslr if you run

1031
00:45:15,069 --> 00:45:19,839
this against a known is a SLR binary you

1032
00:45:18,039 --> 00:45:22,119
always know where the binary is going to

1033
00:45:19,839 --> 00:45:25,029
start executing so you<font color="#E5E5E5"> just start codon</font>

1034
00:45:22,119 --> 00:45:27,819
address inside modify the entry point

1035
00:45:25,029 --> 00:45:30,039
and<font color="#E5E5E5"> that's it against</font><font color="#CCCCCC"> 32 bits binaries</font>

1036
00:45:27,819 --> 00:45:32,680
it's also deadly because<font color="#E5E5E5"> the entropy or</font>

1037
00:45:30,039 --> 00:45:34,329
the SLR entropy on that is very small so

1038
00:45:32,680 --> 00:45:38,410
you<font color="#E5E5E5"> just brute force that stuff</font><font color="#CCCCCC"> and</font>

1039
00:45:34,329 --> 00:45:40,960
that's it and if you know SL SL are in

1040
00:45:38,410 --> 00:45:42,999
theory we don't know where the binary is

1041
00:45:40,960 --> 00:45:48,359
in memory because it's randomized on on

1042
00:45:42,999 --> 00:45:50,499
each start I'm not<font color="#E5E5E5"> an exploiter and</font>

1043
00:45:48,359 --> 00:45:54,670
sometimes you don't<font color="#E5E5E5"> see the problem and</font>

1044
00:45:50,499 --> 00:45:57,640
I I talked to a friend 3mo and he told

1045
00:45:54,670 --> 00:46:00,430
<font color="#E5E5E5">me he was already testing some data</font>

1046
00:45:57,640 --> 00:46:04,629
about<font color="#CCCCCC"> the SLR the distribution of a SLR</font>

1047
00:46:00,430 --> 00:46:06,999
in theory should be random but he<font color="#E5E5E5"> told</font>

1048
00:46:04,630 --> 00:46:09,609
<font color="#E5E5E5">me okay just put force with a selected</font>

1049
00:46:06,999 --> 00:46:13,450
value it's one of<font color="#CCCCCC"> the tricks funny</font>

1050
00:46:09,609 --> 00:46:16,299
enough<font color="#E5E5E5"> zero there's a there sometimes</font>

1051
00:46:13,450 --> 00:46:19,779
the function that's that gets that

1052
00:46:16,299 --> 00:46:22,239
generates the SLR slide gets you 0 okay

1053
00:46:19,779 --> 00:46:24,190
its one value which one possible for me

1054
00:46:22,239 --> 00:46:27,670
I would probably<font color="#E5E5E5"> take the zero out</font><font color="#CCCCCC"> of</font>

1055
00:46:24,190 --> 00:46:28,170
there lose one bit of entropy there man

1056
00:46:27,670 --> 00:46:30,869
but

1057
00:46:28,170 --> 00:46:33,299
it's okay<font color="#E5E5E5"> if you try with</font><font color="#CCCCCC"> zero and if</font>

1058
00:46:30,869 --> 00:46:35,760
you run the program thousands<font color="#E5E5E5"> of times</font>

1059
00:46:33,299 --> 00:46:37,079
there will be a probability I can I

1060
00:46:35,760 --> 00:46:39,630
don't know the probability but there

1061
00:46:37,079 --> 00:46:43,500
will<font color="#CCCCCC"> be a probability that will hit zero</font>

1062
00:46:39,630 --> 00:46:47,069
and what if you<font color="#E5E5E5"> get zero and you won the</font>

1063
00:46:43,500 --> 00:46:49,799
<font color="#E5E5E5">race then it's</font><font color="#CCCCCC"> game over so this means</font>

1064
00:46:47,069 --> 00:46:52,079
that<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> true if</font><font color="#CCCCCC"> you do this the</font>

1065
00:46:49,799 --> 00:46:54,270
exploit will be super<font color="#E5E5E5"> noisy you will get</font>

1066
00:46:52,079 --> 00:46:56,670
a spike on CPUs one hundred percent of

1067
00:46:54,270 --> 00:46:59,790
CPU because you are executing thousands

1068
00:46:56,670 --> 00:47:01,950
of times I ahead<font color="#E5E5E5"> I tested sometimes I</font>

1069
00:46:59,790 --> 00:47:04,380
would get like three or four executions

1070
00:47:01,950 --> 00:47:07,578
i would get lucky and get root shell mom

1071
00:47:04,380 --> 00:47:09,780
the normal thing was<font color="#CCCCCC"> like 10 to 20 k</font>

1072
00:47:07,579 --> 00:47:11,819
executions which is a lot if you are

1073
00:47:09,780 --> 00:47:15,270
trying<font color="#E5E5E5"> to be silent in terms of</font>

1074
00:47:11,819 --> 00:47:17,220
exploiting a target so this was at the

1075
00:47:15,270 --> 00:47:19,470
<font color="#CCCCCC">time or at this point it was a great</font>

1076
00:47:17,220 --> 00:47:23,879
vulnerability but the execution wasn't

1077
00:47:19,470 --> 00:47:25,770
perfect I wanted<font color="#E5E5E5"> to improve</font><font color="#CCCCCC"> this it's</font>

1078
00:47:23,880 --> 00:47:28,980
been a ghee is saying here is not

1079
00:47:25,770 --> 00:47:33,059
impressed can you do better of course we

1080
00:47:28,980 --> 00:47:37,260
can that's<font color="#CCCCCC"> why we are here so we need a</font>

1081
00:47:33,059 --> 00:47:40,230
known address 0 is a known address but

1082
00:47:37,260 --> 00:47:43,079
our ASL<font color="#E5E5E5"> are</font><font color="#CCCCCC"> 0 we gives you a nun address</font>

1083
00:47:40,230 --> 00:47:46,290
but<font color="#CCCCCC"> it's not good we have the linker</font>

1084
00:47:43,079 --> 00:47:51,569
dilt which is also under a SLR and the

1085
00:47:46,290 --> 00:47:53,670
different offsets so we have<font color="#E5E5E5"> two two</font>

1086
00:47:51,569 --> 00:47:55,529
addresses that that we could attack but

1087
00:47:53,670 --> 00:47:58,290
we don't know where<font color="#E5E5E5"> they are because</font><font color="#CCCCCC"> a</font>

1088
00:47:55,530 --> 00:48:01,290
<font color="#CCCCCC">SLR but there</font><font color="#E5E5E5"> is a small interesting</font>

1089
00:47:58,290 --> 00:48:03,720
detail you have a library cash to

1090
00:48:01,290 --> 00:48:05,910
improve the speed of<font color="#CCCCCC"> your</font><font color="#E5E5E5"> machine and</font>

1091
00:48:03,720 --> 00:48:08,520
there's a library cash that is on memory

1092
00:48:05,910 --> 00:48:12,808
and<font color="#CCCCCC"> the small detail is that it is</font>

1093
00:48:08,520 --> 00:48:20,549
randomized as I told<font color="#CCCCCC"> you here aslr is</font>

1094
00:48:12,809 --> 00:48:22,740
under<font color="#CCCCCC"> BLD is under a SLR but it's</font>

1095
00:48:20,549 --> 00:48:25,920
randomized on each reboot so every time

1096
00:48:22,740 --> 00:48:28,200
you reboot your<font color="#CCCCCC"> computer the the cash is</font>

1097
00:48:25,920 --> 00:48:30,510
randomized so another good reason to

1098
00:48:28,200 --> 00:48:33,480
reboot your<font color="#E5E5E5"> machine frequently is this</font>

1099
00:48:30,510 --> 00:48:35,069
one reboot so you have randomized on the

1100
00:48:33,480 --> 00:48:37,740
cash because<font color="#E5E5E5"> if you don't put an</font>

1101
00:48:35,069 --> 00:48:41,190
attacker might get lucky get that and

1102
00:48:37,740 --> 00:48:42,060
then it's game over so assuming your

1103
00:48:41,190 --> 00:48:45,240
machine

1104
00:48:42,060 --> 00:48:48,120
assuming we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> we can find the SLR</font>

1105
00:48:45,240 --> 00:48:50,700
because it's the same address<font color="#E5E5E5"> for every</font>

1106
00:48:48,120 --> 00:48:53,160
process because it's a cash so if you

1107
00:48:50,700 --> 00:48:56,819
start the process<font color="#E5E5E5"> that the the cash will</font>

1108
00:48:53,160 --> 00:48:59,940
be<font color="#E5E5E5"> at the same address and because this</font>

1109
00:48:56,820 --> 00:49:02,370
crash is is<font color="#E5E5E5"> copy on rights it's</font><font color="#CCCCCC"> not</font>

1110
00:48:59,940 --> 00:49:05,640
vertical but it's it's funny now<font color="#CCCCCC"> that</font>

1111
00:49:02,370 --> 00:49:09,299
there is a cow there we just need to

1112
00:49:05,640 --> 00:49:10,950
modify a function on that cash and we

1113
00:49:09,300 --> 00:49:13,920
are not attacking every other binary

1114
00:49:10,950 --> 00:49:16,080
meaning because it's a<font color="#CCCCCC"> cache it shared</font>

1115
00:49:13,920 --> 00:49:18,890
between other processes but it is the

1116
00:49:16,080 --> 00:49:22,470
copy on rights technique so if<font color="#E5E5E5"> we write</font>

1117
00:49:18,890 --> 00:49:24,210
on our target that we are attacking we

1118
00:49:22,470 --> 00:49:26,009
are not attacking other processes so

1119
00:49:24,210 --> 00:49:28,950
these guarantees the stability of the

1120
00:49:26,010 --> 00:49:30,810
system we can safely right to the cash

1121
00:49:28,950 --> 00:49:33,930
without attacking other processes

1122
00:49:30,810 --> 00:49:36,840
because if this wasn't with this

1123
00:49:33,930 --> 00:49:38,910
technique if we modify some memory we

1124
00:49:36,840 --> 00:49:41,700
would affect every other processes so

1125
00:49:38,910 --> 00:49:44,549
this is<font color="#CCCCCC"> interesting</font><font color="#E5E5E5"> too for this</font>

1126
00:49:41,700 --> 00:49:48,089
exploitation in this case for<font color="#E5E5E5"> example</font>

1127
00:49:44,550 --> 00:49:51,180
<font color="#E5E5E5">this is the starting point of PS the</font>

1128
00:49:48,090 --> 00:49:53,160
binary PS it calls very very early<font color="#E5E5E5"> this</font>

1129
00:49:51,180 --> 00:49:56,819
function which is<font color="#CCCCCC"> a library function</font>

1130
00:49:53,160 --> 00:50:02,520
it's a<font color="#E5E5E5"> leave c function and i will show</font>

1131
00:49:56,820 --> 00:50:05,160
you why what we can do we can because

1132
00:50:02,520 --> 00:50:07,860
<font color="#CCCCCC">the library</font><font color="#E5E5E5"> that the library address is</font>

1133
00:50:05,160 --> 00:50:11,460
the same for<font color="#CCCCCC"> every process the server</font>

1134
00:50:07,860 --> 00:50:13,200
when it starts says locates the dress of

1135
00:50:11,460 --> 00:50:15,000
that function we can<font color="#E5E5E5"> we can do this</font>

1136
00:50:13,200 --> 00:50:17,220
easily because we can locate<font color="#E5E5E5"> where</font><font color="#CCCCCC"> the</font>

1137
00:50:15,000 --> 00:50:18,660
<font color="#E5E5E5">cash is we locate the cash we know where</font>

1138
00:50:17,220 --> 00:50:20,730
the function is and we<font color="#CCCCCC"> know that</font>

1139
00:50:18,660 --> 00:50:24,930
function is<font color="#E5E5E5"> the same address for every</font>

1140
00:50:20,730 --> 00:50:27,360
process that that's is there so we need

1141
00:50:24,930 --> 00:50:29,250
to do<font color="#E5E5E5"> this once the server finds the</font>

1142
00:50:27,360 --> 00:50:34,530
dress and<font color="#E5E5E5"> we now we have a fixed address</font>

1143
00:50:29,250 --> 00:50:36,870
where we<font color="#E5E5E5"> know we can write to safely so</font>

1144
00:50:34,530 --> 00:50:39,600
this improves our chances because we

1145
00:50:36,870 --> 00:50:41,850
already know 11 value we just need one

1146
00:50:39,600 --> 00:50:44,130
to five attempts maximum because<font color="#E5E5E5"> we are</font>

1147
00:50:41,850 --> 00:50:46,410
just<font color="#CCCCCC"> now trying to</font><font color="#E5E5E5"> win the race we're</font>

1148
00:50:44,130 --> 00:50:48,600
not locating trying to locate an address

1149
00:50:46,410 --> 00:50:51,569
the dress is already known so we have

1150
00:50:48,600 --> 00:50:54,089
just tried to to winning the race and as

1151
00:50:51,570 --> 00:50:55,859
I told<font color="#E5E5E5"> you there's a lot of override on</font>

1152
00:50:54,090 --> 00:50:58,529
that function so we can easily

1153
00:50:55,859 --> 00:51:01,470
win the race 1 25<font color="#CCCCCC"> attempts maximum is</font>

1154
00:50:58,529 --> 00:51:05,130
quite an improvement from 10 to 20 k

1155
00:51:01,470 --> 00:51:06,988
executions so this<font color="#E5E5E5"> is a very interesting</font>

1156
00:51:05,130 --> 00:51:11,430
<font color="#E5E5E5">exploit because it's one hundred percent</font>

1157
00:51:06,989 --> 00:51:13,380
reliable works all the time maybe more

1158
00:51:11,430 --> 00:51:15,960
or less executions but it will always

1159
00:51:13,380 --> 00:51:18,299
work it's super safe because it doesn't

1160
00:51:15,960 --> 00:51:23,009
affect any other processes so it will

1161
00:51:18,299 --> 00:51:25,109
not<font color="#CCCCCC"> crash anything at the time every</font>

1162
00:51:23,009 --> 00:51:27,239
single OS<font color="#E5E5E5"> X version was vulnerable to</font>

1163
00:51:25,109 --> 00:51:30,029
this board so the bug has been there

1164
00:51:27,239 --> 00:51:33,329
since 10.3 so that makes like 10 years

1165
00:51:30,029 --> 00:51:35,999
or<font color="#E5E5E5"> more you can abuse any soy de binary</font>

1166
00:51:33,329 --> 00:51:37,769
because<font color="#E5E5E5"> I can control any process and as</font>

1167
00:51:35,999 --> 00:51:39,899
I<font color="#CCCCCC"> told you you have the</font><font color="#E5E5E5"> more also</font>

1168
00:51:37,769 --> 00:51:43,799
powerful entitled binaries you can also

1169
00:51:39,900 --> 00:51:47,039
<font color="#CCCCCC">use these binaries I found this</font>

1170
00:51:43,799 --> 00:51:48,900
vulnerability in early 2015 I was

1171
00:51:47,039 --> 00:51:51,569
working<font color="#E5E5E5"> on that ruthless and I was</font>

1172
00:51:48,900 --> 00:51:53,069
<font color="#E5E5E5">looking at the code and it's like one of</font>

1173
00:51:51,569 --> 00:51:56,609
<font color="#E5E5E5">those magic moments you look at things</font>

1174
00:51:53,069 --> 00:51:58,799
<font color="#E5E5E5">like BAM this looks obvious it was I was</font>

1175
00:51:56,609 --> 00:52:02,549
working on that function like many times

1176
00:51:58,799 --> 00:52:05,279
because I do work one on that area for

1177
00:52:02,549 --> 00:52:07,079
for the product and I didn't noticed and

1178
00:52:05,279 --> 00:52:09,499
on that<font color="#CCCCCC"> moment I not a cell there's the</font>

1179
00:52:07,079 --> 00:52:13,349
race condition it's very easy super<font color="#E5E5E5"> easy</font>

1180
00:52:09,499 --> 00:52:15,269
he NVR fun the same bug in light 2015 I

1181
00:52:13,349 --> 00:52:18,119
hate<font color="#E5E5E5"> him beer because of this now</font><font color="#CCCCCC"> he's a</font>

1182
00:52:15,269 --> 00:52:21,359
good guy<font color="#CCCCCC"> but he made</font><font color="#E5E5E5"> a collision because</font>

1183
00:52:18,119 --> 00:52:23,519
at the time I was trolling with Apple<font color="#E5E5E5"> El</font>

1184
00:52:21,359 --> 00:52:26,578
<font color="#E5E5E5">Capitan was released in September i</font>

1185
00:52:23,519 --> 00:52:28,529
think and i found<font color="#E5E5E5"> this like in april or</font>

1186
00:52:26,579 --> 00:52:30,269
marsh and<font color="#E5E5E5"> i was trolling on twitter</font>

1187
00:52:28,529 --> 00:52:32,609
apple i'm going to show these on<font color="#E5E5E5"> the</font>

1188
00:52:30,269 --> 00:52:34,799
first day of<font color="#E5E5E5"> el capitan release</font><font color="#CCCCCC"> i'm</font>

1189
00:52:32,609 --> 00:52:36,779
going<font color="#E5E5E5"> to release them and show that your</font>

1190
00:52:34,799 --> 00:52:38,999
system is broken but<font color="#CCCCCC"> i have a very good</font>

1191
00:52:36,779 --> 00:52:41,640
friend that typo let's ask me very

1192
00:52:38,999 --> 00:52:44,419
pretty please don't do that because if

1193
00:52:41,640 --> 00:52:48,900
you know<font color="#CCCCCC"> i also released the zero-day</font><font color="#E5E5E5"> in</font>

1194
00:52:44,420 --> 00:52:51,859
2015 a c-54 more it was an accident<font color="#CCCCCC"> but</font>

1195
00:52:48,900 --> 00:52:54,329
it created a lot of confusion and a

1196
00:52:51,859 --> 00:52:56,519
pretty please ask done to that again

1197
00:52:54,329 --> 00:52:59,789
<font color="#E5E5E5">because don't create more problems to me</font>

1198
00:52:56,519 --> 00:53:02,910
and it's not a problem<font color="#CCCCCC"> to do this so i</font>

1199
00:52:59,789 --> 00:53:05,730
didn't release and then Ian we are puts

1200
00:53:02,910 --> 00:53:08,368
put a very interesting blog post where

1201
00:53:05,730 --> 00:53:09,660
he describes these exploits the

1202
00:53:08,369 --> 00:53:12,119
vulnerability in a different way

1203
00:53:09,660 --> 00:53:14,520
it's the same<font color="#CCCCCC"> bug same same</font>

1204
00:53:12,119 --> 00:53:16,230
vulnerability same way it<font color="#CCCCCC"> just exploits</font>

1205
00:53:14,520 --> 00:53:19,020
in a different way instead of<font color="#E5E5E5"> attacking</font>

1206
00:53:16,230 --> 00:53:21,599
the cash he attacks other properties so

1207
00:53:19,020 --> 00:53:24,440
we<font color="#CCCCCC"> should look at this at this bug which</font>

1208
00:53:21,599 --> 00:53:27,569
if you want to further understand this

1209
00:53:24,440 --> 00:53:29,970
<font color="#CCCCCC">env are being a great exploits continue</font>

1210
00:53:27,569 --> 00:53:33,900
to keep<font color="#CCCCCC"> working on on these issues</font><font color="#E5E5E5"> I'm</font>

1211
00:53:29,970 --> 00:53:37,020
already finishing you keep working<font color="#E5E5E5"> on</font>

1212
00:53:33,900 --> 00:53:39,869
this and there was a still more problems

1213
00:53:37,020 --> 00:53:42,299
with with the task structure and<font color="#CCCCCC"> defined</font>

1214
00:53:39,869 --> 00:53:44,910
tons of interesting bugs<font color="#E5E5E5"> I posted like</font>

1215
00:53:42,299 --> 00:53:46,859
two weeks ago<font color="#CCCCCC"> or something these very</font>

1216
00:53:44,910 --> 00:53:49,500
interesting blog post you<font color="#E5E5E5"> should if you</font>

1217
00:53:46,859 --> 00:53:51,900
are interested in<font color="#CCCCCC"> to mark stuff go read</font>

1218
00:53:49,500 --> 00:53:54,059
because it dives into into<font color="#CCCCCC"> the morning</font>

1219
00:53:51,900 --> 00:53:57,630
twins in the internals of of the task

1220
00:53:54,059 --> 00:54:03,240
structure of of the colonel ND fund a

1221
00:53:57,630 --> 00:54:05,700
lot more vulnerabilities on these i also

1222
00:54:03,240 --> 00:54:07,740
posted a very<font color="#CCCCCC"> i wanted to</font><font color="#E5E5E5"> talk but since</font>

1223
00:54:05,700 --> 00:54:09,720
i have no time<font color="#E5E5E5"> about this about Little</font>

1224
00:54:07,740 --> 00:54:12,779
Snitch which is a firewall for mac OS

1225
00:54:09,720 --> 00:54:14,520
you probably are using so I started

1226
00:54:12,780 --> 00:54:17,029
looking at<font color="#CCCCCC"> it and I</font><font color="#E5E5E5"> found another</font>

1227
00:54:14,520 --> 00:54:20,099
logical vulnerability on<font color="#E5E5E5"> Little Snitch</font>

1228
00:54:17,029 --> 00:54:22,230
the<font color="#CCCCCC"> program's it's very it's very good</font>

1229
00:54:20,099 --> 00:54:24,569
but<font color="#E5E5E5"> it had some logic vulnerability</font>

1230
00:54:22,230 --> 00:54:27,210
there's a very long post describing and

1231
00:54:24,569 --> 00:54:29,549
how to reverse drivers and so on go to

1232
00:54:27,210 --> 00:54:31,710
my blog and you can you can see you can

1233
00:54:29,549 --> 00:54:33,599
<font color="#CCCCCC">see that</font><font color="#E5E5E5"> stuff and it's super</font>

1234
00:54:31,710 --> 00:54:48,859
interesting let me show you quickly a

1235
00:54:33,599 --> 00:54:55,170
demo so this is<font color="#CCCCCC"> a vulnerable vm here I</font>

1236
00:54:48,859 --> 00:54:56,788
<font color="#CCCCCC">the normal user so here I'm running the</font>

1237
00:54:55,170 --> 00:54:58,559
server you don't need to<font color="#E5E5E5"> have two</font>

1238
00:54:56,789 --> 00:55:00,569
processes you can have the<font color="#E5E5E5"> same process</font>

1239
00:54:58,559 --> 00:55:04,049
that forks and that creates another

1240
00:55:00,569 --> 00:55:05,910
another server I just put these<font color="#E5E5E5"> in in</font>

1241
00:55:04,049 --> 00:55:08,279
turn into separate processes to make it

1242
00:55:05,910 --> 00:55:10,259
easier to understand the code so what

1243
00:55:08,279 --> 00:55:12,299
<font color="#E5E5E5">I'm doing here I'm launching the server</font>

1244
00:55:10,260 --> 00:55:14,369
I'm attacking the PS command because

1245
00:55:12,299 --> 00:55:15,990
it's sweaty binary and I'm attacking

1246
00:55:14,369 --> 00:55:18,569
that function that I show you be cutting

1247
00:55:15,990 --> 00:55:21,720
execute very early<font color="#CCCCCC"> and I want</font><font color="#E5E5E5"> to try to</font>

1248
00:55:18,569 --> 00:55:23,250
win the race as early<font color="#CCCCCC"> as</font><font color="#E5E5E5"> possible so now</font>

1249
00:55:21,720 --> 00:55:25,080
what is<font color="#E5E5E5"> doing its</font>

1250
00:55:23,250 --> 00:55:28,440
finding the symbol this compatible in

1251
00:55:25,080 --> 00:55:30,540
the cash it says<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> symbol is at</font>

1252
00:55:28,440 --> 00:55:33,210
these add rice so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the fix it the</font>

1253
00:55:30,540 --> 00:55:35,100
fixed address registers with<font color="#CCCCCC"> the with</font>

1254
00:55:33,210 --> 00:55:38,370
the<font color="#E5E5E5"> launch</font><font color="#CCCCCC"> d so now the server is</font>

1255
00:55:35,100 --> 00:55:40,589
waiting and also detects where the entry

1256
00:55:38,370 --> 00:55:42,660
point of the target is so I know where

1257
00:55:40,590 --> 00:55:46,830
the binary the target binary will be

1258
00:55:42,660 --> 00:55:51,080
without<font color="#CCCCCC"> a SLR and now i just put here</font>

1259
00:55:46,830 --> 00:55:53,880
rice<font color="#E5E5E5"> i'm trying to execute the client</font>

1260
00:55:51,080 --> 00:55:56,190
pencil 1 million times just a big number

1261
00:55:53,880 --> 00:55:58,380
but it will not be needed so i execute

1262
00:55:56,190 --> 00:56:00,420
and<font color="#E5E5E5"> its start talking</font><font color="#CCCCCC"> to the server the</font>

1263
00:55:58,380 --> 00:56:03,990
<font color="#CCCCCC">server is sending the port is executing</font>

1264
00:56:00,420 --> 00:56:09,570
the command<font color="#CCCCCC"> i just want the rice so</font><font color="#E5E5E5"> ID</font>

1265
00:56:03,990 --> 00:56:12,089
I'm route so exploited now let me show

1266
00:56:09,570 --> 00:56:14,490
you attacking<font color="#E5E5E5"> bypassing zip so this is</font>

1267
00:56:12,090 --> 00:56:16,800
basically a local provision privilege

1268
00:56:14,490 --> 00:56:21,859
escalation I'm excavating a normal user

1269
00:56:16,800 --> 00:56:27,570
to route now that's bye bye pass sip or

1270
00:56:21,860 --> 00:56:30,180
server ok this is the server the<font color="#CCCCCC"> server</font>

1271
00:56:27,570 --> 00:56:32,340
I'm attacking that utility that I told

1272
00:56:30,180 --> 00:56:34,710
you system show there's another function

1273
00:56:32,340 --> 00:56:36,840
system function get you ID very early in

1274
00:56:34,710 --> 00:56:43,980
the binary to guarantee that<font color="#E5E5E5"> I win the</font>

1275
00:56:36,840 --> 00:56:46,350
race like me<font color="#E5E5E5"> ok so I'm trying I'm trying</font>

1276
00:56:43,980 --> 00:56:51,060
to write a file to system which is

1277
00:56:46,350 --> 00:56:56,220
protected operation not permitted so

1278
00:56:51,060 --> 00:56:57,750
let's run the client once again this<font color="#E5E5E5"> is</font>

1279
00:56:56,220 --> 00:57:03,109
not going<font color="#E5E5E5"> to run because there is a</font>

1280
00:56:57,750 --> 00:57:03,110
server hold on I didn't run<font color="#CCCCCC"> the server I</font>

1281
00:57:09,260 --> 00:57:13,980
have to kill a server<font color="#E5E5E5"> vicar</font>

1282
00:57:11,700 --> 00:57:19,279
that server is using the same name so I

1283
00:57:13,980 --> 00:57:21,599
didn't code it to clean up but ok<font color="#E5E5E5"> server</font>

1284
00:57:19,280 --> 00:57:24,450
<font color="#CCCCCC">ok the server</font><font color="#E5E5E5"> is running again test</font>

1285
00:57:21,599 --> 00:57:28,190
process so it's trying<font color="#E5E5E5"> to exploit once</font>

1286
00:57:24,450 --> 00:57:40,348
again sigh<font color="#E5E5E5"> mess at same same exploit ok</font>

1287
00:57:28,190 --> 00:57:42,329
it's here 22 so<font color="#E5E5E5"> the sites and that's it</font>

1288
00:57:40,349 --> 00:57:53,910
as you can see I just<font color="#CCCCCC"> my best tip I can</font>

1289
00:57:42,329 --> 00:57:55,650
write and to the protection CS so the

1290
00:57:53,910 --> 00:57:57,180
system seal detects integra system

1291
00:57:55,650 --> 00:57:59,790
integrity protection is still enabled

1292
00:57:57,180 --> 00:58:01,259
but<font color="#CCCCCC"> I can bypass and this shell until I</font>

1293
00:57:59,790 --> 00:58:08,279
leave this shell I can do whatever I

1294
00:58:01,260 --> 00:58:13,530
want to to the system so let's finish

1295
00:58:08,280 --> 00:58:15,420
this so this was cute but last as i told

1296
00:58:13,530 --> 00:58:19,440
<font color="#E5E5E5">you i like the kernel can i load and</font>

1297
00:58:15,420 --> 00:58:23,310
signed kernel code of course I can in

1298
00:58:19,440 --> 00:58:27,359
this case I'm attacking I mean using gdb

1299
00:58:23,310 --> 00:58:30,089
to bypass this<font color="#E5E5E5"> I attack the binary it</font>

1300
00:58:27,359 --> 00:58:34,020
will tell you okay<font color="#E5E5E5"> the the extension</font>

1301
00:58:30,089 --> 00:58:36,240
that I want<font color="#E5E5E5"> to load doesn't have a as</font>

1302
00:58:34,020 --> 00:58:39,869
<font color="#E5E5E5">Anna valid signature in this case it's</font>

1303
00:58:36,240 --> 00:58:41,459
not science and of course<font color="#E5E5E5"> I can use</font>

1304
00:58:39,869 --> 00:58:44,339
these because what i do i patch the

1305
00:58:41,460 --> 00:58:47,700
binary i patch the protections and I can

1306
00:58:44,339 --> 00:58:51,270
loads and signed codes so miyabi's here

1307
00:58:47,700 --> 00:58:53,310
was very happy success let me just go

1308
00:58:51,270 --> 00:58:55,319
very quick over this you can<font color="#E5E5E5"> use the</font>

1309
00:58:53,310 --> 00:58:57,029
same vulnerabilities because this is the

1310
00:58:55,319 --> 00:58:58,650
program that loads the kernel extensions

1311
00:58:57,030 --> 00:59:01,619
you do the<font color="#E5E5E5"> same trick you attack the</font>

1312
00:58:58,650 --> 00:59:04,230
program you patch some checks that are

1313
00:59:01,619 --> 00:59:07,980
there for code signature and then that's

1314
00:59:04,230 --> 00:59:10,050
it you you win that you can load any

1315
00:59:07,980 --> 00:59:12,180
binary you want to the colonel<font color="#CCCCCC"> and then</font>

1316
00:59:10,050 --> 00:59:14,310
you do whatever you want to the colonel

1317
00:59:12,180 --> 00:59:18,419
<font color="#E5E5E5">let me why besties else they will kill</font>

1318
00:59:14,310 --> 00:59:20,970
me<font color="#E5E5E5"> with time and you can see this let</font><font color="#CCCCCC"> me</font>

1319
00:59:18,420 --> 00:59:24,000
use<font color="#CCCCCC"> this let me troll a bit this was a</font>

1320
00:59:20,970 --> 00:59:25,589
vulnerability in in<font color="#CCCCCC"> linux because there</font>

1321
00:59:24,000 --> 00:59:27,390
was a colonel

1322
00:59:25,590 --> 00:59:32,610
signatures in<font color="#CCCCCC"> the colonel colonel</font>

1323
00:59:27,390 --> 00:59:34,799
processing<font color="#CCCCCC"> x509 basically and this was</font>

1324
00:59:32,610 --> 00:59:37,350
my point last year and<font color="#CCCCCC"> i still believe</font>

1325
00:59:34,800 --> 00:59:40,400
<font color="#CCCCCC">on this</font><font color="#E5E5E5"> point you cannot load codes into</font>

1326
00:59:37,350 --> 00:59:43,020
<font color="#CCCCCC">hing</font><font color="#E5E5E5"> 0 also known as the colonel usually</font>

1327
00:59:40,400 --> 00:59:46,290
when you are shaking<font color="#CCCCCC"> the sled same code</font>

1328
00:59:43,020 --> 00:59:49,050
on user land because if you control the

1329
00:59:46,290 --> 00:59:50,970
process you can<font color="#E5E5E5"> do whatever and then you</font>

1330
00:59:49,050 --> 00:59:53,580
just load to the colonel<font color="#E5E5E5"> so this doesn't</font>

1331
00:59:50,970 --> 00:59:56,100
make any sense for me you need to check

1332
00:59:53,580 --> 01:00:00,810
the code at the colonel<font color="#E5E5E5"> and that sing</font>

1333
00:59:56,100 --> 01:00:03,420
from<font color="#CCCCCC"> x509 was there because if they're</font>

1334
01:00:00,810 --> 01:00:06,150
not if you<font color="#CCCCCC"> are unable to do this if</font><font color="#E5E5E5"> you</font>

1335
01:00:03,420 --> 01:00:07,980
aren't<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to build a secure code f 509</font>

1336
01:00:06,150 --> 01:00:09,870
code signing feature in the Colonel's

1337
01:00:07,980 --> 01:00:11,910
ever idea what we are<font color="#E5E5E5"> doing in this</font>

1338
01:00:09,870 --> 01:00:14,850
industry which we should<font color="#E5E5E5"> be able to do</font>

1339
01:00:11,910 --> 01:00:17,460
this create some reasonably secure codes

1340
01:00:14,850 --> 01:00:20,040
on the colonel<font color="#E5E5E5"> that can guarantee that</font>

1341
01:00:17,460 --> 01:00:22,980
<font color="#E5E5E5">the code signature is okay in the rights</font>

1342
01:00:20,040 --> 01:00:24,779
in the right place so<font color="#CCCCCC"> at the time Thomas</font>

1343
01:00:22,980 --> 01:00:28,980
<font color="#E5E5E5">lane mr. Thomas Liam was asking if I can</font>

1344
01:00:24,780 --> 01:00:31,380
apt these stuff so I'll view apt this

1345
01:00:28,980 --> 01:00:34,350
stuff you bypass seep in these or other

1346
01:00:31,380 --> 01:00:36,810
vulnerability you install<font color="#CCCCCC"> apt on the</font>

1347
01:00:34,350 --> 01:00:40,080
protected folder you enable sleep again

1348
01:00:36,810 --> 01:00:42,690
<font color="#E5E5E5">and then the user cannot delete the the</font>

1349
01:00:40,080 --> 01:00:45,860
apt it needs to reboot the machine and

1350
01:00:42,690 --> 01:00:48,570
do a bunch<font color="#E5E5E5"> of steps so it's a very nice</font>

1351
01:00:45,860 --> 01:00:52,320
sleep protection racket sip will protect

1352
01:00:48,570 --> 01:00:54,570
your malware from from the user and from

1353
01:00:52,320 --> 01:00:58,950
a visa and so on so<font color="#CCCCCC"> it's quite</font>

1354
01:00:54,570 --> 01:01:01,980
interesting in this case the user needs

1355
01:00:58,950 --> 01:01:04,080
to intervene it needs to<font color="#CCCCCC"> click the boot</font>

1356
01:01:01,980 --> 01:01:05,910
the machine in recovery mode open the

1357
01:01:04,080 --> 01:01:08,880
comment line you don't see most users

1358
01:01:05,910 --> 01:01:11,490
doing this so get<font color="#E5E5E5"> the out you can</font>

1359
01:01:08,880 --> 01:01:14,490
have the special special Apple entitled

1360
01:01:11,490 --> 01:01:16,229
shell or application for me this will be

1361
01:01:14,490 --> 01:01:18,209
the way if you go to the Apple Genius

1362
01:01:16,230 --> 01:01:21,030
they will put something like this<font color="#E5E5E5"> and</font>

1363
01:01:18,210 --> 01:01:22,890
fix it maybe the FBI<font color="#E5E5E5"> would be interested</font>

1364
01:01:21,030 --> 01:01:27,990
in<font color="#CCCCCC"> today's because</font><font color="#E5E5E5"> they will be able to</font>

1365
01:01:22,890 --> 01:01:31,890
<font color="#CCCCCC">do anything</font><font color="#E5E5E5"> you can use the</font><font color="#CCCCCC"> IV's to</font>

1366
01:01:27,990 --> 01:01:34,319
bypass or disable sip jaja was like here

1367
01:01:31,890 --> 01:01:37,200
last year or two<font color="#CCCCCC"> or on the</font><font color="#E5E5E5"> first edition</font>

1368
01:01:34,320 --> 01:01:39,330
and he was attacking<font color="#CCCCCC"> davies he has tons</font>

1369
01:01:37,200 --> 01:01:40,799
of interesting work AVS there's a

1370
01:01:39,330 --> 01:01:42,900
think it's dave i tell that made this

1371
01:01:40,800 --> 01:01:44,250
quote AV tends to be a<font color="#E5E5E5"> different kind of</font>

1372
01:01:42,900 --> 01:01:46,170
rod kit because they have<font color="#E5E5E5"> tons of</font>

1373
01:01:44,250 --> 01:01:49,380
vulnerabilities and they run on the

1374
01:01:46,170 --> 01:01:51,630
colonel<font color="#E5E5E5"> so good target conclusions so</font>

1375
01:01:49,380 --> 01:01:53,580
this is<font color="#CCCCCC"> why the slide get the off</font>

1376
01:01:51,630 --> 01:02:00,270
<font color="#CCCCCC">the stage because I'm already</font><font color="#E5E5E5"> going over</font>

1377
01:01:53,580 --> 01:02:02,580
time see doesn't file<font color="#CCCCCC"> it's designing I</font>

1378
01:02:00,270 --> 01:02:04,290
hope like okay this is attacking<font color="#E5E5E5"> Apple</font>

1379
01:02:02,580 --> 01:02:06,240
but at the same time protecting<font color="#E5E5E5"> people</font>

1380
01:02:04,290 --> 01:02:07,860
because I'm doing<font color="#CCCCCC"> the same thing I'm</font>

1381
01:02:06,240 --> 01:02:10,109
trying<font color="#E5E5E5"> to design protection systems</font>

1382
01:02:07,860 --> 01:02:12,420
designing security systems is very

1383
01:02:10,110 --> 01:02:15,210
difficult most of the time I'm breaking

1384
01:02:12,420 --> 01:02:17,880
my home systems all the time so cheek

1385
01:02:15,210 --> 01:02:19,890
which is good as long i can<font color="#E5E5E5"> i can break</font>

1386
01:02:17,880 --> 01:02:22,890
my own system means i'm still under

1387
01:02:19,890 --> 01:02:25,799
control when i when i finish and i say i

1388
01:02:22,890 --> 01:02:27,210
don't<font color="#E5E5E5"> know more maybe someone knows so</font>

1389
01:02:25,800 --> 01:02:30,720
this is very<font color="#E5E5E5"> difficult it's a very</font>

1390
01:02:27,210 --> 01:02:32,910
difficult task if you want to say to to

1391
01:02:30,720 --> 01:02:35,279
test it move to the fence side i<font color="#E5E5E5"> have</font>

1392
01:02:32,910 --> 01:02:37,440
been<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the often side i mean now i am</font>

1393
01:02:35,280 --> 01:02:39,270
now on the defense side and i see many

1394
01:02:37,440 --> 01:02:41,160
people on the offense offensive side

1395
01:02:39,270 --> 01:02:43,980
saying oh yeah we have bugs it's easy

1396
01:02:41,160 --> 01:02:46,859
and then just<font color="#E5E5E5"> move to defense and and i</font>

1397
01:02:43,980 --> 01:02:49,230
want to put your money where your mouth

1398
01:02:46,860 --> 01:02:51,330
is and<font color="#E5E5E5"> try and try to defend and try to</font>

1399
01:02:49,230 --> 01:02:53,310
create code without bugs it's not that

1400
01:02:51,330 --> 01:02:54,840
difficult it's not<font color="#CCCCCC"> very easy and then</font>

1401
01:02:53,310 --> 01:02:56,759
you have customers saying go i want an

1402
01:02:54,840 --> 01:02:59,340
exception<font color="#E5E5E5"> and so on and</font><font color="#CCCCCC"> the exceptions</font>

1403
01:02:56,760 --> 01:03:02,220
are the problem as i<font color="#E5E5E5"> told you secrecy</font>

1404
01:02:59,340 --> 01:03:04,290
doesn't buy you much<font color="#E5E5E5"> okay you might have</font>

1405
01:03:02,220 --> 01:03:06,299
proprietary information that you don't

1406
01:03:04,290 --> 01:03:08,070
want but for example the design<font color="#CCCCCC"> the</font>

1407
01:03:06,300 --> 01:03:10,350
where they implemented is was on top of

1408
01:03:08,070 --> 01:03:14,330
<font color="#CCCCCC">mac f so it's known technology so they</font>

1409
01:03:10,350 --> 01:03:17,130
<font color="#CCCCCC">should then most companies should</font>

1410
01:03:14,330 --> 01:03:20,100
publish information or at least invites

1411
01:03:17,130 --> 01:03:21,630
researchers for a private<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> okay hey</font>

1412
01:03:20,100 --> 01:03:23,759
we have this new feature do you want to

1413
01:03:21,630 --> 01:03:25,890
take a<font color="#E5E5E5"> look i will</font><font color="#CCCCCC"> give you a paper okay</font>

1414
01:03:23,760 --> 01:03:29,190
sign an NDA or something and you start

1415
01:03:25,890 --> 01:03:31,920
understanding can help companies<font color="#E5E5E5"> on this</font>

1416
01:03:29,190 --> 01:03:34,700
process really the white paper so we

1417
01:03:31,920 --> 01:03:37,860
researchers can can understand you

1418
01:03:34,700 --> 01:03:39,990
hopefully I convinced you that logic and

1419
01:03:37,860 --> 01:03:41,910
<font color="#E5E5E5">race vulnerabilities are great for</font>

1420
01:03:39,990 --> 01:03:44,069
abilities are<font color="#CCCCCC"> the best vulnerabilities</font>

1421
01:03:41,910 --> 01:03:46,410
because everyone is after memory

1422
01:03:44,070 --> 01:03:48,450
corruption then was showing you that

1423
01:03:46,410 --> 01:03:50,750
machines are going to<font color="#E5E5E5"> kill your memory</font>

1424
01:03:48,450 --> 01:03:52,828
corruption but sooner or<font color="#E5E5E5"> later hopefully</font>

1425
01:03:50,750 --> 01:03:56,849
these bugs can<font color="#CCCCCC"> we</font>

1426
01:03:52,829 --> 01:03:59,339
for many many many many<font color="#E5E5E5"> years this one</font>

1427
01:03:56,849 --> 01:04:01,619
was like 10 or 20<font color="#CCCCCC"> years there are more</font>

1428
01:03:59,339 --> 01:04:03,900
<font color="#E5E5E5">bugs like these logic logic bugs are</font>

1429
01:04:01,619 --> 01:04:05,969
really nice bugs and people are still

1430
01:04:03,900 --> 01:04:08,099
not attacking them everyone is chasing

1431
01:04:05,969 --> 01:04:10,019
memory corruption and so on and<font color="#E5E5E5"> the</font>

1432
01:04:08,099 --> 01:04:12,059
logic bugs are there they imply more

1433
01:04:10,019 --> 01:04:13,769
work they imply you to understand the

1434
01:04:12,059 --> 01:04:17,759
system but when<font color="#E5E5E5"> you find them they are</font>

1435
01:04:13,769 --> 01:04:21,508
<font color="#E5E5E5">really great and bugs to to have patches</font>

1436
01:04:17,759 --> 01:04:24,469
are out for El Capitan for<font color="#CCCCCC"> 10 11.4 is</font>

1437
01:04:21,509 --> 01:04:26,910
already patches iOS is also Patchett

1438
01:04:24,469 --> 01:04:28,380
there are no patches for all other

1439
01:04:26,910 --> 01:04:30,479
versions so if you are running those

1440
01:04:28,380 --> 01:04:32,849
versions you are vulnerable<font color="#CCCCCC"> to this kind</font>

1441
01:04:30,479 --> 01:04:34,739
<font color="#E5E5E5">of stuff and you saw it works so it's</font>

1442
01:04:32,849 --> 01:04:37,529
great vulnerabilities I posted the code

1443
01:04:34,739 --> 01:04:39,269
and so you can use it<font color="#E5E5E5"> for Penn tests or</font>

1444
01:04:37,529 --> 01:04:43,109
something if you have a shop with a

1445
01:04:39,269 --> 01:04:45,419
running gold max you can use it at<font color="#CCCCCC"> the</font>

1446
01:04:43,109 --> 01:04:48,029
time I didn't know why basically it

1447
01:04:45,420 --> 01:04:50,130
needs some region earring on the<font color="#E5E5E5"> colonel</font>

1448
01:04:48,029 --> 01:04:51,479
so apple doesn't support<font color="#E5E5E5"> the older</font>

1449
01:04:50,130 --> 01:04:55,650
versions they didn't want to reverse

1450
01:04:51,479 --> 01:04:58,348
engineer and so<font color="#E5E5E5"> after the latest</font><font color="#CCCCCC"> en beer</font>

1451
01:04:55,650 --> 01:05:03,299
bugs<font color="#CCCCCC"> see idea the</font><font color="#E5E5E5"> latest version is</font><font color="#CCCCCC"> the</font>

1452
01:04:58,349 --> 01:05:05,339
only safe OS<font color="#CCCCCC"> x version to use so never</font>

1453
01:05:03,299 --> 01:05:08,099
forget Dave you can have firewalls

1454
01:05:05,339 --> 01:05:10,440
encryption antivirus but you always<font color="#CCCCCC"> have</font>

1455
01:05:08,099 --> 01:05:13,019
<font color="#E5E5E5">Dave the human error on your corner and</font>

1456
01:05:10,440 --> 01:05:16,229
that's the weakest element and this is

1457
01:05:13,019 --> 01:05:19,319
why we<font color="#CCCCCC"> are not</font><font color="#E5E5E5"> going to have these</font><font color="#CCCCCC"> raise</font>

1458
01:05:16,229 --> 01:05:23,299
these arms race against bugs we are not

1459
01:05:19,319 --> 01:05:25,799
going to win it in in a in a time period

1460
01:05:23,299 --> 01:05:27,989
greetings<font color="#E5E5E5"> to besides teams thank you for</font>

1461
01:05:25,799 --> 01:05:29,729
doing this<font color="#CCCCCC"> and a few other friends if</font>

1462
01:05:27,989 --> 01:05:32,819
<font color="#E5E5E5">you need to contact me you know where</font>

1463
01:05:29,729 --> 01:05:36,479
the blog is feel<font color="#E5E5E5"> free email me and so on</font>

1464
01:05:32,819 --> 01:05:40,410
i will<font color="#E5E5E5"> try to help you and and as much</font>

1465
01:05:36,479 --> 01:05:42,739
<font color="#CCCCCC">as i can so thats it's not bad five</font>

1466
01:05:40,410 --> 01:05:42,739
<font color="#E5E5E5">minutes</font>

