1
00:00:06,350 --> 00:00:12,780
welcome everyone and thank<font color="#CCCCCC"> you</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> being</font>

2
00:00:12,150 --> 00:00:15,570
<font color="#E5E5E5">here today</font>

3
00:00:12,780 --> 00:00:18,990
my name is<font color="#E5E5E5"> Pedro</font><font color="#CCCCCC"> this is my colleague</font>

4
00:00:15,570 --> 00:00:22,170
Ian<font color="#E5E5E5"> who came all of the</font><font color="#CCCCCC"> way from</font><font color="#E5E5E5"> Germany</font>

5
00:00:18,990 --> 00:00:25,770
to be here today<font color="#CCCCCC"> we both work at Siemens</font>

6
00:00:22,170 --> 00:00:28,980
<font color="#E5E5E5">cyber defence centre as for myself</font><font color="#CCCCCC"> I</font>

7
00:00:25,770 --> 00:00:32,580
began at Siemens<font color="#CCCCCC"> two years ago as master</font>

8
00:00:28,980 --> 00:00:35,550
thesis<font color="#E5E5E5"> intern I developed a</font>

9
00:00:32,580 --> 00:00:38,250
<font color="#CCCCCC">proof-of-concept</font><font color="#E5E5E5"> rules engine in</font><font color="#CCCCCC"> our</font>

10
00:00:35,550 --> 00:00:40,828
<font color="#E5E5E5">working</font><font color="#CCCCCC"> mainly as a developer for</font><font color="#E5E5E5"> a</font>

11
00:00:38,250 --> 00:00:45,239
next-generation<font color="#E5E5E5"> detection platform that</font>

12
00:00:40,829 --> 00:00:47,640
we<font color="#E5E5E5"> are going to talk today yeah do you</font>

13
00:00:45,239 --> 00:00:52,230
want to introduce yourself<font color="#CCCCCC"> to</font><font color="#E5E5E5"> it later</font>

14
00:00:47,640 --> 00:00:54,239
<font color="#CCCCCC">yeah okay so um sudden just just my</font>

15
00:00:52,230 --> 00:00:59,519
microphone a little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> yeah it's fine</font>

16
00:00:54,239 --> 00:01:01,800
<font color="#E5E5E5">so before we start I want to talk a</font>

17
00:00:59,520 --> 00:01:04,610
<font color="#E5E5E5">little bit about the Siemens cyber</font>

18
00:01:01,800 --> 00:01:09,060
defence centre<font color="#CCCCCC"> our team</font><font color="#E5E5E5"> and what we do</font>

19
00:01:04,610 --> 00:01:11,729
so<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are responsible for monitoring all</font>

20
00:01:09,060 --> 00:01:13,830
<font color="#E5E5E5">of the Siemens infrastructure worldwide</font>

21
00:01:11,729 --> 00:01:16,200
what<font color="#E5E5E5"> this roughly means is that we</font>

22
00:01:13,830 --> 00:01:18,600
collect<font color="#CCCCCC"> all of the data</font><font color="#E5E5E5"> from Siemens</font>

23
00:01:16,200 --> 00:01:21,509
infrastructure in<font color="#E5E5E5"> order to analyze it</font>

24
00:01:18,600 --> 00:01:23,820
and detect<font color="#E5E5E5"> security threats the Siemens</font>

25
00:01:21,509 --> 00:01:26,460
<font color="#CCCCCC">cyber defence centre is a joint venture</font>

26
00:01:23,820 --> 00:01:29,158
<font color="#E5E5E5">between Germany Portugal and the</font><font color="#CCCCCC"> United</font>

27
00:01:26,460 --> 00:01:32,639
States<font color="#E5E5E5"> in Portugal we are very proud</font><font color="#CCCCCC"> to</font>

28
00:01:29,159 --> 00:01:34,740
be the<font color="#CCCCCC"> largest team we</font><font color="#E5E5E5"> are really very</font>

29
00:01:32,640 --> 00:01:38,400
motivated to<font color="#CCCCCC"> drive</font><font color="#E5E5E5"> Siemens cyber</font>

30
00:01:34,740 --> 00:01:40,710
security topic<font color="#E5E5E5"> forward by the way if you</font>

31
00:01:38,400 --> 00:01:43,619
see<font color="#CCCCCC"> someone wearing a shirt like</font><font color="#E5E5E5"> mine</font>

32
00:01:40,710 --> 00:01:46,250
with that unicorn over there<font color="#E5E5E5"> they are</font>

33
00:01:43,619 --> 00:01:49,439
part of the Siemens cyber defence centre

34
00:01:46,250 --> 00:01:52,530
<font color="#E5E5E5">we are located in alpha jeans in the</font>

35
00:01:49,439 --> 00:01:54,508
outskirts of Lisbon where we do a lot<font color="#CCCCCC"> of</font>

36
00:01:52,530 --> 00:01:56,939
<font color="#E5E5E5">cool activities like we have little</font>

37
00:01:54,509 --> 00:01:59,579
workshops on lock<font color="#E5E5E5"> lock</font><font color="#CCCCCC"> peeking we</font>

38
00:01:56,939 --> 00:02:02,309
assemble our<font color="#E5E5E5"> own 3d</font><font color="#CCCCCC"> printer and we have</font>

39
00:01:59,579 --> 00:02:04,710
people with<font color="#CCCCCC"> different</font><font color="#E5E5E5"> interests like we</font>

40
00:02:02,310 --> 00:02:07,549
have little concerts on Wednesdays<font color="#E5E5E5"> and</font>

41
00:02:04,710 --> 00:02:10,320
that is to say that we have a place for

42
00:02:07,549 --> 00:02:13,200
<font color="#E5E5E5">everyone we also do other outdoor</font>

43
00:02:10,320 --> 00:02:15,540
activities<font color="#CCCCCC"> like hunting for unicorns</font>

44
00:02:13,200 --> 00:02:17,940
we are<font color="#E5E5E5"> not really just painting playing</font>

45
00:02:15,540 --> 00:02:21,380
paintball but

46
00:02:17,940 --> 00:02:24,480
yeah<font color="#CCCCCC"> we</font><font color="#E5E5E5"> do a lot of cool</font><font color="#CCCCCC"> stuff so what</font>

47
00:02:21,380 --> 00:02:27,930
drove us<font color="#CCCCCC"> to build a new detection</font>

48
00:02:24,480 --> 00:02:30,989
platform<font color="#E5E5E5"> cbins is a very large company</font>

49
00:02:27,930 --> 00:02:34,560
located in more<font color="#E5E5E5"> than 200 countries with</font>

50
00:02:30,990 --> 00:02:36,690
more<font color="#E5E5E5"> than</font><font color="#CCCCCC"> 3 150,000 employees</font><font color="#E5E5E5"> and this</font>

51
00:02:34,560 --> 00:02:39,480
translates to a very large<font color="#E5E5E5"> volume</font><font color="#CCCCCC"> of</font>

52
00:02:36,690 --> 00:02:44,520
<font color="#CCCCCC">data that</font><font color="#E5E5E5"> we need to analyze currently</font>

53
00:02:39,480 --> 00:02:48,359
we have about 60,000 events<font color="#E5E5E5"> per second</font>

54
00:02:44,520 --> 00:02:51,180
oops<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is my</font><font color="#E5E5E5"> micro is falling about</font>

55
00:02:48,360 --> 00:02:56,460
<font color="#CCCCCC">60,000 events per second at an average</font>

56
00:02:51,180 --> 00:02:59,630
peak<font color="#CCCCCC"> and to further aggravate the issue</font>

57
00:02:56,460 --> 00:03:03,120
<font color="#E5E5E5">we</font><font color="#CCCCCC"> are seeing that more and more attacks</font>

58
00:02:59,630 --> 00:03:07,260
<font color="#CCCCCC">lately and there's those attacks are</font>

59
00:03:03,120 --> 00:03:10,710
being even more<font color="#E5E5E5"> sophisticated</font><font color="#CCCCCC"> in 2016</font>

60
00:03:07,260 --> 00:03:12,899
<font color="#CCCCCC">2,000 malware samples we were identified</font>

61
00:03:10,710 --> 00:03:17,580
each day on average<font color="#E5E5E5"> and this rate</font>

62
00:03:12,900 --> 00:03:21,630
increased by<font color="#CCCCCC"> 328 in 2017 if we want to</font>

63
00:03:17,580 --> 00:03:25,020
<font color="#E5E5E5">fight back we want to be able to detect</font>

64
00:03:21,630 --> 00:03:27,840
more stuff and be able<font color="#E5E5E5"> to to increase</font>

65
00:03:25,020 --> 00:03:30,330
<font color="#E5E5E5">our capabilities</font><font color="#CCCCCC"> but in order to do that</font>

66
00:03:27,840 --> 00:03:32,880
<font color="#E5E5E5">how can we efficiently scale our</font>

67
00:03:30,330 --> 00:03:35,070
platform<font color="#E5E5E5"> how can we employ new</font>

68
00:03:32,880 --> 00:03:37,470
techniques in this constantly changing

69
00:03:35,070 --> 00:03:41,430
environment<font color="#CCCCCC"> in order to detect more</font>

70
00:03:37,470 --> 00:03:43,760
<font color="#E5E5E5">stuff and how can we quickly react when</font>

71
00:03:41,430 --> 00:03:46,050
once we<font color="#E5E5E5"> identify a security threat</font>

72
00:03:43,760 --> 00:03:48,450
<font color="#E5E5E5">before</font><font color="#CCCCCC"> I dive into our</font><font color="#E5E5E5"> new</font>

73
00:03:46,050 --> 00:03:51,870
infrastructure<font color="#CCCCCC"> I want to talk about the</font>

74
00:03:48,450 --> 00:03:54,630
<font color="#E5E5E5">old one</font><font color="#CCCCCC"> what did</font><font color="#E5E5E5"> you have and why did we</font>

75
00:03:51,870 --> 00:03:57,780
need<font color="#E5E5E5"> it to change</font><font color="#CCCCCC"> so we</font><font color="#E5E5E5"> started off with</font>

76
00:03:54,630 --> 00:04:00,900
a pretty common<font color="#E5E5E5"> set up nowadays we have</font>

77
00:03:57,780 --> 00:04:03,209
<font color="#CCCCCC">a</font><font color="#E5E5E5"> cm instance with a set of rules and</font>

78
00:04:00,900 --> 00:04:05,250
lists those lists can be whitelist

79
00:04:03,209 --> 00:04:07,950
<font color="#CCCCCC">likely it's indicators of compromised</font>

80
00:04:05,250 --> 00:04:11,760
and that<font color="#CCCCCC"> all of our data</font><font color="#E5E5E5"> from our</font>

81
00:04:07,950 --> 00:04:14,790
infrastructure<font color="#E5E5E5"> will be</font><font color="#CCCCCC"> sent to this cm</font>

82
00:04:11,760 --> 00:04:17,760
and be correlated<font color="#E5E5E5"> once we detect</font>

83
00:04:14,790 --> 00:04:20,969
something<font color="#CCCCCC"> using the rule set then a new</font>

84
00:04:17,760 --> 00:04:23,730
alert is generated but because<font color="#E5E5E5"> our</font>

85
00:04:20,970 --> 00:04:26,010
infrastructure is so large we<font color="#CCCCCC"> have a</font>

86
00:04:23,730 --> 00:04:28,280
very large rule set our<font color="#CCCCCC"> lists of</font>

87
00:04:26,010 --> 00:04:30,000
millions of entries<font color="#E5E5E5"> we have a lot of</font>

88
00:04:28,280 --> 00:04:32,700
<font color="#E5E5E5">events</font>

89
00:04:30,000 --> 00:04:33,570
<font color="#CCCCCC">same</font><font color="#E5E5E5"> instance will not suffice</font><font color="#CCCCCC"> oh we</font>

90
00:04:32,700 --> 00:04:37,580
don't<font color="#CCCCCC"> have</font><font color="#E5E5E5"> one</font>

91
00:04:33,570 --> 00:04:41,010
we actually have three<font color="#CCCCCC"> instances and</font>

92
00:04:37,580 --> 00:04:43,140
once we deployed these<font color="#E5E5E5"> architecture the</font>

93
00:04:41,010 --> 00:04:46,349
problems<font color="#E5E5E5"> started to become</font><font color="#CCCCCC"> apparent</font>

94
00:04:43,140 --> 00:04:49,200
first of all these CMS do not scale

95
00:04:46,350 --> 00:04:52,350
<font color="#E5E5E5">Horizonte meaning</font><font color="#CCCCCC"> that the computations</font>

96
00:04:49,200 --> 00:04:55,590
cannot be distributed across several

97
00:04:52,350 --> 00:04:58,320
<font color="#E5E5E5">machines our events are simply splitted</font>

98
00:04:55,590 --> 00:04:59,880
across these three<font color="#E5E5E5"> instances meaning</font>

99
00:04:58,320 --> 00:05:02,849
<font color="#CCCCCC">that if you want to</font><font color="#E5E5E5"> make a calculation</font>

100
00:04:59,880 --> 00:05:06,890
<font color="#E5E5E5">based on all of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> events we can</font><font color="#CCCCCC"> really</font>

101
00:05:02,850 --> 00:05:10,230
do<font color="#E5E5E5"> that on this platform</font><font color="#CCCCCC"> moreover this</font>

102
00:05:06,890 --> 00:05:13,229
<font color="#E5E5E5">license software is a very closed box</font>

103
00:05:10,230 --> 00:05:15,960
and we cannot<font color="#E5E5E5"> tailor it to our</font>

104
00:05:13,230 --> 00:05:19,410
particular<font color="#E5E5E5"> needs</font><font color="#CCCCCC"> and we offer</font><font color="#E5E5E5"> really an</font>

105
00:05:15,960 --> 00:05:22,229
<font color="#E5E5E5">API for</font><font color="#CCCCCC"> us to automate things</font><font color="#E5E5E5"> so what</font>

106
00:05:19,410 --> 00:05:24,450
this<font color="#CCCCCC"> means is that every time</font><font color="#E5E5E5"> we need to</font>

107
00:05:22,230 --> 00:05:27,300
change<font color="#E5E5E5"> a rule in</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> cm we have to</font>

108
00:05:24,450 --> 00:05:30,570
replicate<font color="#CCCCCC"> this change on the</font><font color="#E5E5E5"> other CMS</font>

109
00:05:27,300 --> 00:05:32,880
so besides the lack<font color="#E5E5E5"> of scalability and</font>

110
00:05:30,570 --> 00:05:35,969
flexibility we have replicated<font color="#CCCCCC"> data and</font>

111
00:05:32,880 --> 00:05:37,950
replicated code<font color="#E5E5E5"> moreover every time</font>

112
00:05:35,970 --> 00:05:40,940
someone needs to<font color="#E5E5E5"> access this</font>

113
00:05:37,950 --> 00:05:44,490
infrastructure<font color="#E5E5E5"> it has to access</font><font color="#CCCCCC"> it via</font>

114
00:05:40,940 --> 00:05:46,110
<font color="#CCCCCC">three access consoles</font><font color="#E5E5E5"> moreover to</font>

115
00:05:44,490 --> 00:05:50,460
<font color="#CCCCCC">abbreviate this problem</font><font color="#E5E5E5"> there is no</font>

116
00:05:46,110 --> 00:05:53,070
<font color="#E5E5E5">really</font><font color="#CCCCCC"> analytics and AI integration so</font>

117
00:05:50,460 --> 00:05:56,099
our goal was to<font color="#E5E5E5"> build something that</font>

118
00:05:53,070 --> 00:05:57,960
<font color="#CCCCCC">could be scalable</font><font color="#E5E5E5"> we needed to improve</font>

119
00:05:56,100 --> 00:06:00,479
the overall performance<font color="#E5E5E5"> of this old</font>

120
00:05:57,960 --> 00:06:03,930
architecture we need to improve the

121
00:06:00,479 --> 00:06:05,490
<font color="#CCCCCC">detection capabilities and the solution</font>

122
00:06:03,930 --> 00:06:07,470
really<font color="#E5E5E5"> needed to be</font><font color="#CCCCCC"> flexible</font>

123
00:06:05,490 --> 00:06:10,110
customizable because we need we<font color="#CCCCCC"> need to</font>

124
00:06:07,470 --> 00:06:11,850
be able<font color="#CCCCCC"> to detect</font><font color="#E5E5E5"> new use cases and if</font>

125
00:06:10,110 --> 00:06:14,580
you can't detect them we simply change

126
00:06:11,850 --> 00:06:18,000
our solution<font color="#CCCCCC"> to anyone</font><font color="#E5E5E5"> and of course it</font>

127
00:06:14,580 --> 00:06:21,270
also has<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> cost-effective so we set</font>

128
00:06:18,000 --> 00:06:23,250
<font color="#E5E5E5">out and</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> try to build a new detection</font>

129
00:06:21,270 --> 00:06:26,430
platform and this is what it looks<font color="#E5E5E5"> like</font>

130
00:06:23,250 --> 00:06:31,320
<font color="#E5E5E5">on the left side right</font><font color="#CCCCCC"> here on the log</font>

131
00:06:26,430 --> 00:06:33,510
sources<font color="#E5E5E5"> are the network components and</font>

132
00:06:31,320 --> 00:06:34,680
servers and sensors and<font color="#CCCCCC"> everything that</font>

133
00:06:33,510 --> 00:06:37,349
we<font color="#E5E5E5"> need to monitor</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> our</font>

134
00:06:34,680 --> 00:06:40,580
infrastructure<font color="#E5E5E5"> and they are sent to a</font>

135
00:06:37,350 --> 00:06:42,149
set of collectors collectors which parts

136
00:06:40,580 --> 00:06:46,438
<font color="#E5E5E5">the</font>

137
00:06:42,149 --> 00:06:49,050
those logs<font color="#E5E5E5"> and for them as an event the</font>

138
00:06:46,439 --> 00:06:51,649
first big<font color="#CCCCCC"> change</font><font color="#E5E5E5"> that we</font><font color="#CCCCCC"> made was to add</font>

139
00:06:49,050 --> 00:06:55,770
a<font color="#CCCCCC"> message broker in</font><font color="#E5E5E5"> this case</font><font color="#CCCCCC"> Kappa</font>

140
00:06:51,649 --> 00:06:57,959
<font color="#CCCCCC">Kafka</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> built by</font><font color="#E5E5E5"> LinkedIn to transport</font>

141
00:06:55,770 --> 00:07:01,409
<font color="#E5E5E5">massive amounts of data from one</font><font color="#CCCCCC"> place</font>

142
00:06:57,959 --> 00:07:04,289
to<font color="#E5E5E5"> another and this was very useful</font><font color="#CCCCCC"> for</font>

143
00:07:01,409 --> 00:07:05,129
<font color="#CCCCCC">us because we want to</font><font color="#E5E5E5"> keep our events</font>

144
00:07:04,289 --> 00:07:08,429
flowing

145
00:07:05,129 --> 00:07:10,499
moreover<font color="#E5E5E5"> Kafka is highly scalable</font><font color="#CCCCCC"> so it</font>

146
00:07:08,429 --> 00:07:13,198
can easily<font color="#E5E5E5"> handle our current throughput</font>

147
00:07:10,499 --> 00:07:15,360
<font color="#E5E5E5">and in the future if we need</font><font color="#CCCCCC"> to have</font>

148
00:07:13,199 --> 00:07:19,409
more consumers and have<font color="#E5E5E5"> more data we can</font>

149
00:07:15,360 --> 00:07:23,639
simply<font color="#CCCCCC"> add a</font><font color="#E5E5E5"> new server</font><font color="#CCCCCC"> and that's it</font>

150
00:07:19,409 --> 00:07:26,009
Kafka<font color="#CCCCCC"> off</font><font color="#E5E5E5"> also allowed us to have</font>

151
00:07:23,639 --> 00:07:28,559
several consumers consuming data

152
00:07:26,009 --> 00:07:30,149
directly from Kafka<font color="#E5E5E5"> what this means is</font>

153
00:07:28,559 --> 00:07:31,889
that every<font color="#CCCCCC"> time we need</font><font color="#E5E5E5"> to build a new</font>

154
00:07:30,149 --> 00:07:33,599
<font color="#CCCCCC">application we don't need to configure</font>

155
00:07:31,889 --> 00:07:35,699
<font color="#E5E5E5">all</font><font color="#CCCCCC"> of the collectors to send data to</font>

156
00:07:33,599 --> 00:07:37,259
<font color="#CCCCCC">that application we simply send all of</font>

157
00:07:35,699 --> 00:07:39,330
<font color="#E5E5E5">the data to Kafka and then the</font>

158
00:07:37,259 --> 00:07:42,179
<font color="#E5E5E5">application</font><font color="#CCCCCC"> will simply read that data</font>

159
00:07:39,330 --> 00:07:44,938
the second change that we<font color="#E5E5E5"> needed</font><font color="#CCCCCC"> to make</font>

160
00:07:42,179 --> 00:07:48,688
was<font color="#CCCCCC"> to replace</font><font color="#E5E5E5"> our cm with something new</font>

161
00:07:44,939 --> 00:07:51,389
<font color="#E5E5E5">the current commercial solutions</font><font color="#CCCCCC"> didn't</font>

162
00:07:48,689 --> 00:07:53,159
<font color="#E5E5E5">really offer all of</font><font color="#CCCCCC"> the features that we</font>

163
00:07:51,389 --> 00:07:56,519
needed<font color="#E5E5E5"> and the ones that</font><font color="#CCCCCC"> offer the</font>

164
00:07:53,159 --> 00:08:00,389
features that we needed lack flexibility

165
00:07:56,519 --> 00:08:02,969
<font color="#E5E5E5">for us to really tailor</font><font color="#CCCCCC"> the solution to</font>

166
00:08:00,389 --> 00:08:05,789
our<font color="#E5E5E5"> particular means so instead we set</font>

167
00:08:02,969 --> 00:08:09,689
out and<font color="#CCCCCC"> we built a new one</font><font color="#E5E5E5"> the new rules</font>

168
00:08:05,789 --> 00:08:13,139
engine<font color="#E5E5E5"> using fling</font><font color="#CCCCCC"> link with Flinx</font><font color="#E5E5E5"> API</font>

169
00:08:09,689 --> 00:08:14,789
<font color="#E5E5E5">you can develop an</font><font color="#CCCCCC"> application in all of</font>

170
00:08:13,139 --> 00:08:17,849
your competitions in data can get

171
00:08:14,789 --> 00:08:20,938
distributed<font color="#E5E5E5"> across</font><font color="#CCCCCC"> a fling</font><font color="#E5E5E5"> server for</font>

172
00:08:17,849 --> 00:08:24,409
several a fling cluster<font color="#E5E5E5"> with several</font>

173
00:08:20,939 --> 00:08:27,240
servers<font color="#CCCCCC"> I will talk a little bit about</font>

174
00:08:24,409 --> 00:08:30,329
<font color="#E5E5E5">slink</font><font color="#CCCCCC"> in later slides and this</font>

175
00:08:27,240 --> 00:08:33,438
particular solution<font color="#E5E5E5"> but fundamentally we</font>

176
00:08:30,329 --> 00:08:36,209
were able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> replace our cm with</font>

177
00:08:33,438 --> 00:08:39,559
distributed rules<font color="#E5E5E5"> engine with a simple</font>

178
00:08:36,208 --> 00:08:42,508
set as our cm incapable<font color="#E5E5E5"> of generating</font>

179
00:08:39,559 --> 00:08:45,508
the same alerting and where we could

180
00:08:42,509 --> 00:08:47,819
build the same use cases<font color="#E5E5E5"> besides sending</font>

181
00:08:45,509 --> 00:08:49,980
<font color="#E5E5E5">all of the events to this rule engine we</font>

182
00:08:47,819 --> 00:08:51,779
also send the events to the cloud more

183
00:08:49,980 --> 00:08:53,400
specifically<font color="#E5E5E5"> we send the events to</font>

184
00:08:51,779 --> 00:08:56,700
Athena<font color="#E5E5E5"> where they can require</font>

185
00:08:53,400 --> 00:08:59,939
by our analysts<font color="#E5E5E5"> and this data can also</font>

186
00:08:56,700 --> 00:09:04,200
be<font color="#E5E5E5"> used by the</font><font color="#CCCCCC"> machine</font><font color="#E5E5E5"> learning</font>

187
00:08:59,940 --> 00:09:07,710
algorithms to<font color="#E5E5E5"> detect new use cases which</font>

188
00:09:04,200 --> 00:09:10,610
<font color="#E5E5E5">again we'll talk about next finally all</font>

189
00:09:07,710 --> 00:09:14,100
of<font color="#E5E5E5"> our alerts are also sent to</font><font color="#CCCCCC"> a</font>

190
00:09:10,610 --> 00:09:15,810
distinct link job which<font color="#CCCCCC"> enrich enriches</font>

191
00:09:14,100 --> 00:09:20,040
the data and creates tickets for<font color="#CCCCCC"> our</font>

192
00:09:15,810 --> 00:09:22,469
<font color="#E5E5E5">analysis</font><font color="#CCCCCC"> to triage</font><font color="#E5E5E5"> so I will talk a</font>

193
00:09:20,040 --> 00:09:24,089
little bit about<font color="#CCCCCC"> flink</font><font color="#E5E5E5"> so what the heck</font>

194
00:09:22,470 --> 00:09:27,180
is think many of you probably<font color="#CCCCCC"> never</font>

195
00:09:24,090 --> 00:09:30,060
heard about<font color="#E5E5E5"> it and those</font><font color="#CCCCCC"> who did heard</font>

196
00:09:27,180 --> 00:09:33,060
about it maybe<font color="#E5E5E5"> they you don't know how</font>

197
00:09:30,060 --> 00:09:35,339
it works<font color="#CCCCCC"> out what it does</font><font color="#E5E5E5"> so basically</font>

198
00:09:33,060 --> 00:09:39,109
there are two ways<font color="#CCCCCC"> to process</font><font color="#E5E5E5"> a</font>

199
00:09:35,340 --> 00:09:42,330
continuous stream<font color="#E5E5E5"> of data</font><font color="#CCCCCC"> okay you can</font>

200
00:09:39,110 --> 00:09:45,000
basically gather continuous together a

201
00:09:42,330 --> 00:09:48,540
set<font color="#CCCCCC"> of data once you</font><font color="#E5E5E5"> have a bucket</font><font color="#CCCCCC"> you</font>

202
00:09:45,000 --> 00:09:50,730
<font color="#CCCCCC">can process it that finite</font><font color="#E5E5E5"> set so this</font>

203
00:09:48,540 --> 00:09:52,980
<font color="#E5E5E5">is called the batch processing or you</font>

204
00:09:50,730 --> 00:09:54,870
can continuously<font color="#CCCCCC"> please</font><font color="#E5E5E5"> process events</font>

205
00:09:52,980 --> 00:09:57,150
as they come in<font color="#E5E5E5"> this is called stream</font>

206
00:09:54,870 --> 00:09:59,550
processing<font color="#CCCCCC"> flink was built as a real</font>

207
00:09:57,150 --> 00:10:04,319
stream processor as it can<font color="#E5E5E5"> continuously</font>

208
00:09:59,550 --> 00:10:07,140
process<font color="#E5E5E5"> events and generate results with</font>

209
00:10:04,320 --> 00:10:09,990
<font color="#E5E5E5">flink</font><font color="#CCCCCC"> you can build you can program</font><font color="#E5E5E5"> a</font>

210
00:10:07,140 --> 00:10:12,449
direct acyclic graph<font color="#E5E5E5"> to build your</font>

211
00:10:09,990 --> 00:10:14,810
application<font color="#CCCCCC"> this graph can have a source</font>

212
00:10:12,450 --> 00:10:17,940
node which fetches<font color="#E5E5E5"> data from yet outside</font>

213
00:10:14,810 --> 00:10:20,459
<font color="#E5E5E5">you can have a set of operational nodes</font>

214
00:10:17,940 --> 00:10:23,880
and a set of<font color="#E5E5E5"> sync nodes to export</font><font color="#CCCCCC"> data</font>

215
00:10:20,460 --> 00:10:26,340
to<font color="#E5E5E5"> the outside as an example you could</font>

216
00:10:23,880 --> 00:10:30,630
for<font color="#CCCCCC"> instance created a very simple sync</font>

217
00:10:26,340 --> 00:10:34,020
application<font color="#E5E5E5"> which the source will</font><font color="#CCCCCC"> be</font>

218
00:10:30,630 --> 00:10:36,450
simply reading<font color="#E5E5E5"> data</font><font color="#CCCCCC"> from a socket which</font>

219
00:10:34,020 --> 00:10:38,069
<font color="#E5E5E5">let's assume that our</font><font color="#CCCCCC"> bytes which</font>

220
00:10:36,450 --> 00:10:40,440
represent strings<font color="#CCCCCC"> and then you could</font>

221
00:10:38,070 --> 00:10:44,070
have an operational<font color="#E5E5E5"> mode called a field</font>

222
00:10:40,440 --> 00:10:47,430
filter which<font color="#CCCCCC"> will forward</font><font color="#E5E5E5"> events to the</font>

223
00:10:44,070 --> 00:10:50,220
sync if a string contains the token<font color="#CCCCCC"> Evo</font>

224
00:10:47,430 --> 00:10:52,770
<font color="#E5E5E5">right the cool thing about is is that</font>

225
00:10:50,220 --> 00:10:55,380
you can set a level<font color="#E5E5E5"> of parallelism for</font><font color="#CCCCCC"> a</font>

226
00:10:52,770 --> 00:10:58,829
specific operator<font color="#E5E5E5"> for instance if I set</font>

227
00:10:55,380 --> 00:11:02,189
the parallelism<font color="#E5E5E5"> to</font><font color="#CCCCCC"> 2 for the filter node</font>

228
00:10:58,830 --> 00:11:05,660
<font color="#E5E5E5">this means that the the source node can</font>

229
00:11:02,190 --> 00:11:08,390
split its data<font color="#CCCCCC"> to</font>

230
00:11:05,660 --> 00:11:10,250
the to filter<font color="#E5E5E5"> notes that can process the</font>

231
00:11:08,390 --> 00:11:13,910
events in<font color="#E5E5E5"> parallels okay you can have</font>

232
00:11:10,250 --> 00:11:16,160
two<font color="#CCCCCC"> or more machines in a</font><font color="#E5E5E5"> fling cluster</font>

233
00:11:13,910 --> 00:11:18,380
and<font color="#E5E5E5"> then this node will be replicated</font>

234
00:11:16,160 --> 00:11:20,689
<font color="#E5E5E5">across these two machines the data can</font>

235
00:11:18,380 --> 00:11:22,910
be<font color="#E5E5E5"> sent to both these nodes in parallel</font>

236
00:11:20,690 --> 00:11:25,070
<font color="#E5E5E5">and then the computations can be applied</font>

237
00:11:22,910 --> 00:11:29,000
in<font color="#E5E5E5"> parallel and this is how we scale our</font>

238
00:11:25,070 --> 00:11:30,710
applications so why did<font color="#E5E5E5"> we choose Apache</font>

239
00:11:29,000 --> 00:11:36,890
<font color="#CCCCCC">Fling and not something</font><font color="#E5E5E5"> else</font>

240
00:11:30,710 --> 00:11:40,100
first of all<font color="#E5E5E5"> flink is</font><font color="#CCCCCC"> provides</font><font color="#E5E5E5"> something</font>

241
00:11:36,890 --> 00:11:42,770
called<font color="#CCCCCC"> exactly once semantics</font><font color="#E5E5E5"> which no</font>

242
00:11:40,100 --> 00:11:45,500
other<font color="#CCCCCC"> sim processing engine offered at a</font>

243
00:11:42,770 --> 00:11:47,660
time this means that of our application

244
00:11:45,500 --> 00:11:50,450
files<font color="#E5E5E5"> when it recovers it can recover</font>

245
00:11:47,660 --> 00:11:53,630
exactly from<font color="#E5E5E5"> once from where it was</font>

246
00:11:50,450 --> 00:11:59,140
<font color="#E5E5E5">before the failure with no duplicated</font>

247
00:11:53,630 --> 00:12:01,910
data in no event loss moreover it<font color="#E5E5E5"> is</font>

248
00:11:59,140 --> 00:12:04,990
scalable and offers low-level mechanisms

249
00:12:01,910 --> 00:12:10,069
to access even<font color="#E5E5E5"> time which for</font><font color="#CCCCCC"> instance</font>

250
00:12:04,990 --> 00:12:12,290
<font color="#CCCCCC">Esper cannot be distributed out</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> a box</font>

251
00:12:10,070 --> 00:12:18,770
<font color="#E5E5E5">and storm does not offer such low-level</font>

252
00:12:12,290 --> 00:12:21,380
mechanisms we also have it<font color="#CCCCCC"> also as a an</font>

253
00:12:18,770 --> 00:12:24,680
availability<font color="#E5E5E5"> solution in it's very</font>

254
00:12:21,380 --> 00:12:27,439
<font color="#E5E5E5">flexible so we</font><font color="#CCCCCC"> don't out in both</font>

255
00:12:24,680 --> 00:12:31,790
distributed rules engine<font color="#CCCCCC"> I won't go into</font>

256
00:12:27,440 --> 00:12:33,440
<font color="#E5E5E5">much detail</font><font color="#CCCCCC"> about this</font><font color="#E5E5E5"> engine if you</font>

257
00:12:31,790 --> 00:12:35,480
have questions you<font color="#E5E5E5"> can talk to me later</font>

258
00:12:33,440 --> 00:12:39,050
but I will give a general<font color="#CCCCCC"> idea of how</font>

259
00:12:35,480 --> 00:12:41,930
<font color="#CCCCCC">you build it and</font><font color="#E5E5E5"> how you</font><font color="#CCCCCC"> can do it</font>

260
00:12:39,050 --> 00:12:45,800
<font color="#E5E5E5">yourself</font><font color="#CCCCCC"> so we basically have a source</font>

261
00:12:41,930 --> 00:12:48,709
<font color="#E5E5E5">node that reads data from Kafka and we</font>

262
00:12:45,800 --> 00:12:50,870
started to build a static pipeline to

263
00:12:48,710 --> 00:12:54,440
detect a<font color="#E5E5E5"> specific use case</font><font color="#CCCCCC"> for instance</font>

264
00:12:50,870 --> 00:12:58,400
<font color="#E5E5E5">you can build a filter to try to grab</font>

265
00:12:54,440 --> 00:13:01,490
all of<font color="#E5E5E5"> the events</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> represent user</font>

266
00:12:58,400 --> 00:13:03,260
failed logins<font color="#CCCCCC"> and you can build this</font>

267
00:13:01,490 --> 00:13:05,750
pipeline in order to try<font color="#E5E5E5"> to understand</font>

268
00:13:03,260 --> 00:13:08,450
if a user<font color="#E5E5E5"> is trying to log in more than</font>

269
00:13:05,750 --> 00:13:10,280
<font color="#E5E5E5">a next number of times to specific</font>

270
00:13:08,450 --> 00:13:12,410
machine<font color="#CCCCCC"> indeed spelling and</font><font color="#E5E5E5"> it can</font>

271
00:13:10,280 --> 00:13:15,079
represent a malicious behavior and we

272
00:13:12,410 --> 00:13:18,510
want to detect<font color="#E5E5E5"> it so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> build this</font>

273
00:13:15,080 --> 00:13:22,170
sample pipeline statically which can be

274
00:13:18,510 --> 00:13:24,180
used to generate alerts<font color="#E5E5E5"> but we didn't</font>

275
00:13:22,170 --> 00:13:26,099
<font color="#E5E5E5">want to have a static pipeline because</font>

276
00:13:24,180 --> 00:13:28,709
we don't want<font color="#E5E5E5"> to change the code to</font>

277
00:13:26,100 --> 00:13:32,250
detect new use cases<font color="#E5E5E5"> every time and you</font>

278
00:13:28,710 --> 00:13:36,030
<font color="#CCCCCC">a new use case you wanted</font><font color="#E5E5E5"> to build a</font><font color="#CCCCCC"> new</font>

279
00:13:32,250 --> 00:13:38,670
use case<font color="#E5E5E5"> so instead we found a way to</font>

280
00:13:36,030 --> 00:13:41,220
dynamically<font color="#CCCCCC"> compile code inside of these</font>

281
00:13:38,670 --> 00:13:45,599
operators<font color="#E5E5E5"> so that we can change their</font>

282
00:13:41,220 --> 00:13:47,220
behavior<font color="#CCCCCC"> so we have</font><font color="#E5E5E5"> created an event</font>

283
00:13:45,600 --> 00:13:49,590
processing<font color="#E5E5E5"> language that I'm going to</font>

284
00:13:47,220 --> 00:13:52,170
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about in the next slides but our</font>

285
00:13:49,590 --> 00:13:56,460
users<font color="#E5E5E5"> can use that this simple language</font>

286
00:13:52,170 --> 00:14:00,300
<font color="#CCCCCC">to upload rules to note that rules read</font>

287
00:13:56,460 --> 00:14:02,970
rules from<font color="#E5E5E5"> it and sends it to</font><font color="#CCCCCC"> all of the</font>

288
00:14:00,300 --> 00:14:06,089
nodes in<font color="#CCCCCC"> flink and then when a node</font>

289
00:14:02,970 --> 00:14:08,880
receives this rule it is able<font color="#E5E5E5"> to compile</font>

290
00:14:06,090 --> 00:14:11,100
it and then dynamically apply a specific

291
00:14:08,880 --> 00:14:13,680
<font color="#CCCCCC">function of the rule to the incoming</font>

292
00:14:11,100 --> 00:14:17,130
events<font color="#E5E5E5"> and this is our with</font><font color="#CCCCCC"> an 'm</font><font color="#E5E5E5"> from a</font>

293
00:14:13,680 --> 00:14:18,900
static pipeline<font color="#E5E5E5"> we change to dynamic</font>

294
00:14:17,130 --> 00:14:21,570
pipeline and then we can have rules

295
00:14:18,900 --> 00:14:24,360
flowing in dynamically<font color="#CCCCCC"> without having to</font>

296
00:14:21,570 --> 00:14:27,060
stop and<font color="#E5E5E5"> start the</font><font color="#CCCCCC"> job the good thing</font>

297
00:14:24,360 --> 00:14:30,930
about this is that<font color="#E5E5E5"> we can add a new</font>

298
00:14:27,060 --> 00:14:33,449
server to<font color="#CCCCCC"> the flink cluster and</font><font color="#E5E5E5"> we don't</font>

299
00:14:30,930 --> 00:14:37,410
need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> restart anything and it will</font>

300
00:14:33,450 --> 00:14:38,910
<font color="#E5E5E5">simply be one more server that we can</font>

301
00:14:37,410 --> 00:14:42,380
use and then all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the rules are also</font>

302
00:14:38,910 --> 00:14:45,839
dynamic<font color="#E5E5E5"> so there are no restarts</font>

303
00:14:42,380 --> 00:14:48,180
<font color="#E5E5E5">required to make upgrades to upload</font>

304
00:14:45,840 --> 00:14:51,840
rules<font color="#E5E5E5"> and to do all</font><font color="#CCCCCC"> sorts of things</font>

305
00:14:48,180 --> 00:14:54,239
which<font color="#E5E5E5"> is really cool so this is mother</font>

306
00:14:51,840 --> 00:14:57,510
saw our<font color="#E5E5E5"> event processing</font><font color="#CCCCCC"> language it</font>

307
00:14:54,240 --> 00:15:00,420
looks like you can<font color="#E5E5E5"> create three types</font><font color="#CCCCCC"> of</font>

308
00:14:57,510 --> 00:15:02,370
rules<font color="#E5E5E5"> standard rules</font><font color="#CCCCCC"> data star rules and</font>

309
00:15:00,420 --> 00:15:06,000
aggregation<font color="#E5E5E5"> rules</font><font color="#CCCCCC"> the standard rules are</font>

310
00:15:02,370 --> 00:15:09,600
<font color="#CCCCCC">your just</font><font color="#E5E5E5"> our simple match please action</font>

311
00:15:06,000 --> 00:15:11,670
<font color="#E5E5E5">what this means is that it's such for</font>

312
00:15:09,600 --> 00:15:13,590
specific tokens in an event and when<font color="#CCCCCC"> it</font>

313
00:15:11,670 --> 00:15:15,839
finds them it triggers an alert which

314
00:15:13,590 --> 00:15:18,330
can be enriched<font color="#E5E5E5"> the data store rule is</font>

315
00:15:15,840 --> 00:15:20,730
very similar but<font color="#E5E5E5"> instead of triggering</font>

316
00:15:18,330 --> 00:15:23,340
an alert<font color="#E5E5E5"> all of the events are as for</font>

317
00:15:20,730 --> 00:15:26,070
<font color="#CCCCCC">lead to a data store</font><font color="#E5E5E5"> then we have</font>

318
00:15:23,340 --> 00:15:29,370
aggregation rules which are<font color="#E5E5E5"> a little bit</font>

319
00:15:26,070 --> 00:15:31,810
more<font color="#E5E5E5"> complex so that application rules</font>

320
00:15:29,370 --> 00:15:34,029
can<font color="#E5E5E5"> be used to</font>

321
00:15:31,810 --> 00:15:38,649
<font color="#CCCCCC">get</font><font color="#E5E5E5"> avenging in time windows so we can</font>

322
00:15:34,029 --> 00:15:41,170
aggravate<font color="#E5E5E5"> events for an arbitrary amount</font>

323
00:15:38,649 --> 00:15:43,839
of time and at the end you can apply a

324
00:15:41,170 --> 00:15:45,670
computation<font color="#E5E5E5"> to all of those all of those</font>

325
00:15:43,839 --> 00:15:47,829
events<font color="#E5E5E5"> for instance</font><font color="#CCCCCC"> you can count how</font>

326
00:15:45,670 --> 00:15:52,509
many events fall into that window<font color="#E5E5E5"> and if</font>

327
00:15:47,829 --> 00:15:54,939
that<font color="#CCCCCC"> the dead count surpasses a certain</font>

328
00:15:52,509 --> 00:15:59,470
threshold that<font color="#E5E5E5"> you define then an alert</font>

329
00:15:54,939 --> 00:16:02,199
is generated<font color="#CCCCCC"> I have here a simple of a</font>

330
00:15:59,470 --> 00:16:04,839
rule<font color="#E5E5E5"> of an aggregation rule which was</font>

331
00:16:02,199 --> 00:16:08,339
created using our own language<font color="#E5E5E5"> so you</font>

332
00:16:04,839 --> 00:16:11,889
specify<font color="#E5E5E5"> in the sources which type of</font>

333
00:16:08,339 --> 00:16:13,959
<font color="#E5E5E5">which types of events will be processed</font>

334
00:16:11,889 --> 00:16:16,180
by this<font color="#E5E5E5"> aggregation rule in this</font><font color="#CCCCCC"> case we</font>

335
00:16:13,959 --> 00:16:18,339
are<font color="#E5E5E5"> filtering we are processing VPN</font>

336
00:16:16,180 --> 00:16:21,370
events then we have a filter<font color="#CCCCCC"> function</font>

337
00:16:18,339 --> 00:16:25,720
which is such for such for search

338
00:16:21,370 --> 00:16:27,970
searches for a specific token in<font color="#CCCCCC"> these</font>

339
00:16:25,720 --> 00:16:30,819
<font color="#E5E5E5">events in this case</font>

340
00:16:27,970 --> 00:16:32,499
it's<font color="#E5E5E5"> looking for session starts in the</font>

341
00:16:30,819 --> 00:16:35,620
field name of an event<font color="#E5E5E5"> if</font><font color="#CCCCCC"> it's</font>

342
00:16:32,499 --> 00:16:37,509
<font color="#E5E5E5">assessment session start then the event</font>

343
00:16:35,620 --> 00:16:40,750
is<font color="#CCCCCC"> further processed otherwise it's</font>

344
00:16:37,509 --> 00:16:44,250
discarded<font color="#E5E5E5"> then we do we have</font><font color="#CCCCCC"> here an</font>

345
00:16:40,750 --> 00:16:47,500
aggregation window which is aggregating

346
00:16:44,250 --> 00:16:49,930
session starts for<font color="#CCCCCC"> 8 hours</font><font color="#E5E5E5"> and then</font>

347
00:16:47,500 --> 00:16:52,990
applying a computation every 30 minutes

348
00:16:49,930 --> 00:16:55,420
<font color="#CCCCCC">this is trying to look for a Newser</font><font color="#E5E5E5"> that</font>

349
00:16:52,990 --> 00:16:58,720
is trying<font color="#E5E5E5"> to log</font><font color="#CCCCCC"> two session start</font>

350
00:16:55,420 --> 00:17:01,628
indistinct<font color="#CCCCCC"> oats if he attempts to start</font>

351
00:16:58,720 --> 00:17:03,129
<font color="#E5E5E5">the session in more than three the</font><font color="#CCCCCC"> more</font>

352
00:17:01,629 --> 00:17:05,380
<font color="#CCCCCC">than two hosts then an alert is</font>

353
00:17:03,129 --> 00:17:07,659
generated then we can enrich<font color="#E5E5E5"> these</font>

354
00:17:05,380 --> 00:17:10,299
alerts by pairing a<font color="#E5E5E5"> data store in this</font>

355
00:17:07,659 --> 00:17:13,390
case to add more information<font color="#CCCCCC"> regarding</font>

356
00:17:10,299 --> 00:17:15,490
<font color="#E5E5E5">that user so we</font><font color="#CCCCCC"> will get a user ID and</font>

357
00:17:13,390 --> 00:17:17,260
then we'll worry later<font color="#CCCCCC"> storing at its</font>

358
00:17:15,490 --> 00:17:19,270
<font color="#E5E5E5">name in region and then we called</font><font color="#CCCCCC"> in</font>

359
00:17:17,260 --> 00:17:23,079
<font color="#CCCCCC">richly event with a certain message</font>

360
00:17:19,270 --> 00:17:25,299
saying<font color="#CCCCCC"> that we found the user on</font><font color="#E5E5E5"> this</font>

361
00:17:23,079 --> 00:17:28,359
region<font color="#E5E5E5"> which was attempting to start</font><font color="#CCCCCC"> the</font>

362
00:17:25,299 --> 00:17:33,220
<font color="#CCCCCC">Rypien</font><font color="#E5E5E5"> session from multiple</font><font color="#CCCCCC"> posts</font><font color="#E5E5E5"> in</font>

363
00:17:28,359 --> 00:17:35,699
that<font color="#E5E5E5"> this is how we we developed or are</font>

364
00:17:33,220 --> 00:17:38,830
we develop our<font color="#CCCCCC"> news</font><font color="#E5E5E5"> cases and then</font><font color="#CCCCCC"> these</font>

365
00:17:35,700 --> 00:17:43,510
<font color="#E5E5E5">these rules can then be injected into</font>

366
00:17:38,830 --> 00:17:44,850
<font color="#CCCCCC">our rule rules engine so I will give</font><font color="#E5E5E5"> you</font>

367
00:17:43,510 --> 00:17:47,730
the stage here

368
00:17:44,850 --> 00:17:51,689
thank you Peter can everybody hear<font color="#CCCCCC"> me up</font>

369
00:17:47,730 --> 00:17:54,059
<font color="#CCCCCC">there</font><font color="#E5E5E5"> okay perfect</font><font color="#CCCCCC"> so my name is young</font>

370
00:17:51,690 --> 00:17:56,250
<font color="#E5E5E5">I'm the chief data scientist and cyber</font>

371
00:17:54,059 --> 00:17:58,289
defence centre of Siemens<font color="#E5E5E5"> my background</font>

372
00:17:56,250 --> 00:18:02,970
is in<font color="#CCCCCC"> artificial intelligence and in big</font>

373
00:17:58,289 --> 00:18:04,350
<font color="#CCCCCC">data I start the presentation with a</font>

374
00:18:02,970 --> 00:18:08,759
<font color="#E5E5E5">statistics you have already heard from</font>

375
00:18:04,350 --> 00:18:12,840
Pedro<font color="#CCCCCC"> of the 2016-2017 strong increase</font>

376
00:18:08,759 --> 00:18:14,970
<font color="#E5E5E5">of attacks in</font><font color="#CCCCCC"> cyber security actually</font><font color="#E5E5E5"> I</font>

377
00:18:12,840 --> 00:18:18,330
would like to point you to even<font color="#E5E5E5"> one more</font>

378
00:18:14,970 --> 00:18:21,090
statistics and this statistics which

379
00:18:18,330 --> 00:18:24,928
shows you the<font color="#CCCCCC"> time lag between</font><font color="#E5E5E5"> initial</font>

380
00:18:21,090 --> 00:18:27,299
<font color="#E5E5E5">attack to the containment so which line</font>

381
00:18:24,929 --> 00:18:30,480
<font color="#CCCCCC">is very important</font><font color="#E5E5E5"> for us it's the middle</font>

382
00:18:27,299 --> 00:18:32,970
line here<font color="#E5E5E5"> so actually this line why it</font>

383
00:18:30,480 --> 00:18:36,000
is important<font color="#E5E5E5"> for</font><font color="#CCCCCC"> us because it</font><font color="#E5E5E5"> four or</font>

384
00:18:32,970 --> 00:18:38,610
<font color="#CCCCCC">five</font><font color="#E5E5E5"> years ago the big red bubbles here</font>

385
00:18:36,000 --> 00:18:40,830
have<font color="#E5E5E5"> been right in the middle</font><font color="#CCCCCC"> so from</font>

386
00:18:38,610 --> 00:18:44,189
initial<font color="#E5E5E5"> compromise to discovery it took</font>

387
00:18:40,830 --> 00:18:46,139
days or weeks<font color="#E5E5E5"> sometimes but today you</font>

388
00:18:44,190 --> 00:18:50,730
have<font color="#E5E5E5"> something like weeks months or even</font>

389
00:18:46,139 --> 00:18:54,840
years<font color="#E5E5E5"> so why is it that way so what we</font>

390
00:18:50,730 --> 00:18:56,759
detected is that<font color="#E5E5E5"> it takes</font><font color="#CCCCCC"> today get are</font>

391
00:18:54,840 --> 00:18:59,668
much higher sophisticated and

392
00:18:56,759 --> 00:19:01,049
increasingly get<font color="#E5E5E5"> automated and we have</font>

393
00:18:59,669 --> 00:19:04,379
to fight<font color="#CCCCCC"> back with</font><font color="#E5E5E5"> the same weapons</font>

394
00:19:01,049 --> 00:19:08,158
actually let me guide<font color="#CCCCCC"> you through a</font>

395
00:19:04,379 --> 00:19:11,309
<font color="#E5E5E5">well-known use case who are well</font><font color="#CCCCCC"> known</font>

396
00:19:08,159 --> 00:19:13,019
attack and how to fight<font color="#E5E5E5"> it so a large</font>

397
00:19:11,309 --> 00:19:15,389
corporate network like the Siemens one

398
00:19:13,019 --> 00:19:17,730
is protected from the<font color="#E5E5E5"> Internet</font><font color="#CCCCCC"> we're big</font>

399
00:19:15,389 --> 00:19:19,139
<font color="#CCCCCC">firewall a very powerful fire what this</font>

400
00:19:17,730 --> 00:19:20,759
means basically<font color="#CCCCCC"> you can create</font>

401
00:19:19,139 --> 00:19:23,908
<font color="#E5E5E5">connection from the inside to outside</font>

402
00:19:20,759 --> 00:19:28,559
<font color="#CCCCCC">not vice versa</font><font color="#E5E5E5"> the same thing goes for</font>

403
00:19:23,909 --> 00:19:30,629
malware<font color="#E5E5E5"> basically so if a host is</font>

404
00:19:28,559 --> 00:19:33,960
compromised<font color="#E5E5E5"> inside the network</font><font color="#CCCCCC"> the</font>

405
00:19:30,629 --> 00:19:36,000
malware<font color="#E5E5E5"> tries to connect to</font><font color="#CCCCCC"> its c2</font><font color="#E5E5E5"> hosts</font>

406
00:19:33,960 --> 00:19:39,240
outside the corporate<font color="#CCCCCC"> network on a</font>

407
00:19:36,000 --> 00:19:41,909
regular basis<font color="#E5E5E5"> let's see</font><font color="#CCCCCC"> two hosts</font><font color="#E5E5E5"> itself</font>

408
00:19:39,240 --> 00:19:44,279
<font color="#E5E5E5">tries to hide behind some kind of domain</font>

409
00:19:41,909 --> 00:19:46,919
like I am evil<font color="#E5E5E5"> calm it's a stupid name</font>

410
00:19:44,279 --> 00:19:51,299
right but<font color="#E5E5E5"> even</font><font color="#CCCCCC"> if the name wouldn't be</font>

411
00:19:46,919 --> 00:19:53,850
that obvious<font color="#E5E5E5"> the it's never a good</font><font color="#CCCCCC"> idea</font>

412
00:19:51,299 --> 00:19:56,158
to<font color="#CCCCCC"> hide behind</font><font color="#E5E5E5"> only one</font><font color="#CCCCCC"> domain because</font>

413
00:19:53,850 --> 00:19:57,080
we would at any<font color="#E5E5E5"> time we would track</font><font color="#CCCCCC"> the</font>

414
00:19:56,159 --> 00:19:59,960
traffic

415
00:19:57,080 --> 00:20:03,620
and blacklist<font color="#E5E5E5"> the domain in game of a</font>

416
00:19:59,960 --> 00:20:06,440
player one right so what does<font color="#CCCCCC"> a malware</font>

417
00:20:03,620 --> 00:20:08,989
malware<font color="#E5E5E5"> keeps changing its domain</font>

418
00:20:06,440 --> 00:20:11,630
continuously<font color="#E5E5E5"> like a pending index</font><font color="#CCCCCC"> zero</font>

419
00:20:08,990 --> 00:20:13,910
<font color="#CCCCCC">one zero two or three and so on</font>

420
00:20:11,630 --> 00:20:16,130
again not<font color="#E5E5E5"> a</font><font color="#CCCCCC"> very good</font><font color="#E5E5E5"> idea it's too</font>

421
00:20:13,910 --> 00:20:18,620
predictable<font color="#CCCCCC"> if it's zero eight you would</font>

422
00:20:16,130 --> 00:20:19,280
predict zero zero nine and one<font color="#CCCCCC"> zero and</font>

423
00:20:18,620 --> 00:20:23,050
also<font color="#E5E5E5"> on</font>

424
00:20:19,280 --> 00:20:26,600
so maybe<font color="#E5E5E5"> usually uses something like</font>

425
00:20:23,050 --> 00:20:28,460
domain generation<font color="#E5E5E5"> algorithms this one is</font>

426
00:20:26,600 --> 00:20:32,300
taking actually from<font color="#CCCCCC"> Wikipedia</font><font color="#E5E5E5"> it's a</font>

427
00:20:28,460 --> 00:20:34,610
very simple<font color="#CCCCCC"> one it's initialized with</font>

428
00:20:32,300 --> 00:20:37,610
<font color="#CCCCCC">year month and day</font><font color="#E5E5E5"> and then it</font><font color="#CCCCCC"> produces</font>

429
00:20:34,610 --> 00:20:39,649
<font color="#E5E5E5">every day a new string like the orange</font>

430
00:20:37,610 --> 00:20:42,879
one<font color="#CCCCCC"> on January seventh</font><font color="#E5E5E5"> and the blue one</font>

431
00:20:39,650 --> 00:20:46,070
on January 8th you append a domain

432
00:20:42,880 --> 00:20:48,380
register restore main top-level domain

433
00:20:46,070 --> 00:20:52,610
you register the whole domain<font color="#E5E5E5"> and</font><font color="#CCCCCC"> start</font>

434
00:20:48,380 --> 00:20:54,860
you have<font color="#CCCCCC"> a connection</font><font color="#E5E5E5"> okay in reality</font>

435
00:20:52,610 --> 00:20:56,479
<font color="#E5E5E5">the algorithm is not that easy and</font>

436
00:20:54,860 --> 00:20:58,610
<font color="#E5E5E5">reality</font><font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> that easy</font><font color="#CCCCCC"> to</font>

437
00:20:56,480 --> 00:21:01,250
distinguish<font color="#E5E5E5"> between</font><font color="#CCCCCC"> manifest domain and</font>

438
00:20:58,610 --> 00:21:03,260
normal domains<font color="#E5E5E5"> on this slide you see</font><font color="#CCCCCC"> a</font>

439
00:21:01,250 --> 00:21:05,690
mixture of<font color="#E5E5E5"> normal</font><font color="#CCCCCC"> domains</font><font color="#E5E5E5"> negative</font>

440
00:21:03,260 --> 00:21:07,430
<font color="#CCCCCC">mental mains and malicious domains and</font>

441
00:21:05,690 --> 00:21:12,200
<font color="#E5E5E5">you can try</font><font color="#CCCCCC"> to find</font><font color="#E5E5E5"> out which</font><font color="#CCCCCC"> of these</font>

442
00:21:07,430 --> 00:21:15,550
domains<font color="#CCCCCC"> are really malicious so I think</font>

443
00:21:12,200 --> 00:21:19,130
the task<font color="#E5E5E5"> is not easy here right</font><font color="#CCCCCC"> so it's</font>

444
00:21:15,550 --> 00:21:22,129
by the way not easy for any human human

445
00:21:19,130 --> 00:21:24,110
cognition<font color="#E5E5E5"> is not made for things like</font>

446
00:21:22,130 --> 00:21:27,440
<font color="#E5E5E5">this is not made for detecting things</font>

447
00:21:24,110 --> 00:21:31,399
like this<font color="#E5E5E5"> so in fact humans detect the</font>

448
00:21:27,440 --> 00:21:34,580
malicious domains<font color="#E5E5E5"> only by chance so the</font>

449
00:21:31,400 --> 00:21:36,710
orange ones are<font color="#E5E5E5"> the malicious ones all</font>

450
00:21:34,580 --> 00:21:38,780
the<font color="#CCCCCC"> other ones are legal domains</font><font color="#E5E5E5"> Lego</font>

451
00:21:36,710 --> 00:21:41,120
<font color="#CCCCCC">tomato means</font><font color="#E5E5E5"> they are the normal domains</font>

452
00:21:38,780 --> 00:21:43,730
including the very long one at the

453
00:21:41,120 --> 00:21:46,489
<font color="#E5E5E5">bottom of the slide it's the name</font><font color="#CCCCCC"> of a</font>

454
00:21:43,730 --> 00:21:48,910
city<font color="#E5E5E5"> in Wales actually that</font><font color="#CCCCCC"> they prove</font>

455
00:21:46,490 --> 00:21:52,580
<font color="#E5E5E5">that the weather</font><font color="#CCCCCC"> forecast</font><font color="#E5E5E5"> on British TV</font>

456
00:21:48,910 --> 00:21:54,290
so as we fight<font color="#E5E5E5"> out that humans are not</font>

457
00:21:52,580 --> 00:21:57,470
able<font color="#CCCCCC"> to distinguish the</font><font color="#E5E5E5"> domains from</font>

458
00:21:54,290 --> 00:21:59,899
normal domains<font color="#E5E5E5"> so we decided to bring a</font>

459
00:21:57,470 --> 00:22:02,060
tie to the fight<font color="#E5E5E5"> we took several</font>

460
00:21:59,900 --> 00:22:03,950
approaches<font color="#CCCCCC"> actually some</font><font color="#E5E5E5"> more</font>

461
00:22:02,060 --> 00:22:07,190
traditional<font color="#E5E5E5"> approaches on a most</font>

462
00:22:03,950 --> 00:22:09,560
<font color="#CCCCCC">left-hand side here so</font><font color="#E5E5E5"> you let you let</font>

463
00:22:07,190 --> 00:22:11,450
<font color="#E5E5E5">some experts design</font><font color="#CCCCCC"> stir</font>

464
00:22:09,560 --> 00:22:13,659
<font color="#CCCCCC">mystical</font><font color="#E5E5E5"> features on the domain name</font>

465
00:22:11,450 --> 00:22:16,910
<font color="#E5E5E5">like changes from well to consonants and</font>

466
00:22:13,660 --> 00:22:20,060
similar statistical properties<font color="#E5E5E5"> feed it</font>

467
00:22:16,910 --> 00:22:21,770
into<font color="#CCCCCC"> our machine learning</font><font color="#E5E5E5"> algorithm like</font>

468
00:22:20,060 --> 00:22:24,050
<font color="#CCCCCC">a random forest or a gradient</font><font color="#E5E5E5"> boosting</font>

469
00:22:21,770 --> 00:22:26,960
machine or<font color="#E5E5E5"> something like this and check</font>

470
00:22:24,050 --> 00:22:29,980
what happens<font color="#E5E5E5"> can they distinguished DJs</font>

471
00:22:26,960 --> 00:22:33,170
from<font color="#E5E5E5"> normal domains and actually</font><font color="#CCCCCC"> here</font>

472
00:22:29,980 --> 00:22:36,440
<font color="#E5E5E5">the occurrence</font><font color="#CCCCCC"> is not bad it's 85% it's</font>

473
00:22:33,170 --> 00:22:37,850
actually better than<font color="#E5E5E5"> NAU in Kundu next</font>

474
00:22:36,440 --> 00:22:39,470
approach<font color="#E5E5E5"> you take an approach from</font>

475
00:22:37,850 --> 00:22:41,570
natural language<font color="#CCCCCC"> processing</font><font color="#E5E5E5"> actually</font>

476
00:22:39,470 --> 00:22:44,240
more specifically<font color="#E5E5E5"> from sentiment</font>

477
00:22:41,570 --> 00:22:46,939
analysis<font color="#E5E5E5"> so if you type in your comments</font>

478
00:22:44,240 --> 00:22:49,280
to Netflix on a on a movie or something

479
00:22:46,940 --> 00:22:51,920
like this<font color="#E5E5E5"> they do something</font><font color="#CCCCCC"> like this</font><font color="#E5E5E5"> so</font>

480
00:22:49,280 --> 00:22:53,720
they extract<font color="#E5E5E5"> engrams from a domain</font>

481
00:22:51,920 --> 00:22:55,640
string which<font color="#CCCCCC"> means</font><font color="#E5E5E5"> this are snippets</font>

482
00:22:53,720 --> 00:22:58,190
<font color="#E5E5E5">from the domain string of length or</font>

483
00:22:55,640 --> 00:23:03,530
fixed length we or something like<font color="#E5E5E5"> this</font>

484
00:22:58,190 --> 00:23:06,790
<font color="#E5E5E5">so we extract</font><font color="#CCCCCC"> wwwww</font><font color="#E5E5E5"> dot</font><font color="#CCCCCC"> W dot</font><font color="#E5E5E5"> F and so</font>

485
00:23:03,530 --> 00:23:09,470
on and so on<font color="#CCCCCC"> you get approximately</font>

486
00:23:06,790 --> 00:23:11,870
<font color="#CCCCCC">54,000</font><font color="#E5E5E5"> of these features</font><font color="#CCCCCC"> you encode</font>

487
00:23:09,470 --> 00:23:14,900
everything into a frequency vector again

488
00:23:11,870 --> 00:23:18,500
feed it into<font color="#E5E5E5"> a machine loader</font><font color="#CCCCCC"> and again</font>

489
00:23:14,900 --> 00:23:20,300
looks<font color="#CCCCCC"> what happens 88 percent accuracy</font>

490
00:23:18,500 --> 00:23:22,760
<font color="#CCCCCC">that's even better this one then this</font>

491
00:23:20,300 --> 00:23:25,669
one approach<font color="#E5E5E5"> but both approaches have a</font>

492
00:23:22,760 --> 00:23:27,920
big disadvantage<font color="#CCCCCC"> and it's in the third</font>

493
00:23:25,670 --> 00:23:31,100
<font color="#E5E5E5">column of both algorithms</font><font color="#CCCCCC"> it's a false</font>

494
00:23:27,920 --> 00:23:36,950
<font color="#E5E5E5">positive rate so false positive rate</font>

495
00:23:31,100 --> 00:23:41,870
<font color="#E5E5E5">means this one</font><font color="#CCCCCC"> 9% and 30% this means</font>

496
00:23:36,950 --> 00:23:45,740
<font color="#CCCCCC">basically the rate of false alarms</font><font color="#E5E5E5"> so in</font>

497
00:23:41,870 --> 00:23:48,199
our<font color="#E5E5E5"> case 30% or 9% leads to several</font>

498
00:23:45,740 --> 00:23:49,880
<font color="#E5E5E5">thousand false alarms per day and this</font>

499
00:23:48,200 --> 00:23:52,130
<font color="#E5E5E5">is completely unacceptable actually</font>

500
00:23:49,880 --> 00:23:54,830
because every every<font color="#E5E5E5"> alarm has to be</font>

501
00:23:52,130 --> 00:23:56,890
tracked by a security<font color="#E5E5E5"> analyst and we</font>

502
00:23:54,830 --> 00:23:59,300
would drive this guy's crazy basically

503
00:23:56,890 --> 00:24:02,990
so we moved a little<font color="#E5E5E5"> bit further down</font>

504
00:23:59,300 --> 00:24:06,050
the<font color="#CCCCCC"> road</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit higher advanced</font>

505
00:24:02,990 --> 00:24:08,660
AI algorithms called<font color="#E5E5E5"> deep learning deep</font>

506
00:24:06,050 --> 00:24:12,970
learning is the<font color="#E5E5E5"> latest development in</font>

507
00:24:08,660 --> 00:24:15,230
neural<font color="#CCCCCC"> networks actually</font><font color="#E5E5E5"> and deep</font>

508
00:24:12,970 --> 00:24:16,970
learners have several<font color="#CCCCCC"> beautiful</font>

509
00:24:15,230 --> 00:24:20,270
properties one of the beautiful

510
00:24:16,970 --> 00:24:22,040
<font color="#E5E5E5">properties is they learn their features</font>

511
00:24:20,270 --> 00:24:23,170
on their own if you gave them<font color="#CCCCCC"> the right</font>

512
00:24:22,040 --> 00:24:25,840
<font color="#E5E5E5">data</font>

513
00:24:23,170 --> 00:24:28,690
the other beautiful<font color="#E5E5E5"> property is that</font>

514
00:24:25,840 --> 00:24:29,169
they<font color="#E5E5E5"> can push down</font><font color="#CCCCCC"> their false positive</font>

515
00:24:28,690 --> 00:24:31,420
<font color="#E5E5E5">rate</font>

516
00:24:29,170 --> 00:24:37,210
close to<font color="#CCCCCC"> zero only</font><font color="#E5E5E5"> if you give them</font>

517
00:24:31,420 --> 00:24:42,309
<font color="#E5E5E5">enough data to learn in our case below</font>

518
00:24:37,210 --> 00:24:45,549
is even<font color="#CCCCCC"> 0.7% let's result in a false</font>

519
00:24:42,309 --> 00:24:50,620
positive<font color="#E5E5E5"> rate around 50 false</font><font color="#CCCCCC"> alarms per</font>

520
00:24:45,549 --> 00:24:53,740
day into<font color="#CCCCCC"> this acceptor and people are</font>

521
00:24:50,620 --> 00:24:55,719
basically<font color="#E5E5E5"> set up looks like this one you</font>

522
00:24:53,740 --> 00:24:58,690
feed you know from a top layer<font color="#CCCCCC"> you feed</font>

523
00:24:55,720 --> 00:25:01,210
in their domain again<font color="#E5E5E5"> all the domains</font>

524
00:24:58,690 --> 00:25:02,620
<font color="#E5E5E5">I'm evil</font><font color="#CCCCCC"> calm</font><font color="#E5E5E5"> you're talking</font><font color="#CCCCCC"> i that you</font>

525
00:25:01,210 --> 00:25:04,059
<font color="#CCCCCC">converted to ASCII code or something</font>

526
00:25:02,620 --> 00:25:06,280
<font color="#E5E5E5">like this then</font><font color="#CCCCCC"> you reduce a little</font><font color="#E5E5E5"> bit</font>

527
00:25:04,059 --> 00:25:07,720
<font color="#E5E5E5">in dimensionality who</font><font color="#CCCCCC"> embeddings</font><font color="#E5E5E5"> your</font>

528
00:25:06,280 --> 00:25:10,418
remember<font color="#CCCCCC"> they're very high</font><font color="#E5E5E5"> dimensional</font>

529
00:25:07,720 --> 00:25:12,970
stuff<font color="#E5E5E5"> the forty fifty four thousand in</font>

530
00:25:10,419 --> 00:25:16,090
the previous example<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then you use</font>

531
00:25:12,970 --> 00:25:18,510
one<font color="#CCCCCC"> of the famous deep learning</font>

532
00:25:16,090 --> 00:25:21,370
algorithms which are used today

533
00:25:18,510 --> 00:25:23,320
<font color="#E5E5E5">something</font><font color="#CCCCCC"> like the</font><font color="#E5E5E5"> LST</font><font color="#CCCCCC"> mo GRU they are</font>

534
00:25:21,370 --> 00:25:25,330
from the domain<font color="#CCCCCC"> of</font><font color="#E5E5E5"> recurrent neural</font>

535
00:25:23,320 --> 00:25:27,580
networks recurrent<font color="#CCCCCC"> you and networks are</font>

536
00:25:25,330 --> 00:25:30,040
for example<font color="#CCCCCC"> used for machine translation</font>

537
00:25:27,580 --> 00:25:31,928
so if you<font color="#E5E5E5"> type in a Portuguese text into</font>

538
00:25:30,040 --> 00:25:33,909
Google you get<font color="#E5E5E5"> an English text you</font>

539
00:25:31,929 --> 00:25:35,679
usually<font color="#CCCCCC"> have an</font><font color="#E5E5E5"> LST</font><font color="#CCCCCC"> M model</font><font color="#E5E5E5"> behind this</font>

540
00:25:33,910 --> 00:25:38,590
one so it's all called sequence to

541
00:25:35,679 --> 00:25:40,780
sequence learner and you<font color="#CCCCCC"> but you can</font>

542
00:25:38,590 --> 00:25:42,730
also<font color="#E5E5E5"> use something</font><font color="#CCCCCC"> like a convolutional</font>

543
00:25:40,780 --> 00:25:45,070
neural network this<font color="#E5E5E5"> is from the picture</font>

544
00:25:42,730 --> 00:25:47,950
processing domain actually<font color="#E5E5E5"> from picture</font>

545
00:25:45,070 --> 00:25:52,090
classification so all these<font color="#CCCCCC"> applications</font>

546
00:25:47,950 --> 00:25:54,370
like detecting uncredible<font color="#E5E5E5"> cute cats in</font>

547
00:25:52,090 --> 00:25:56,379
<font color="#E5E5E5">YouTube</font><font color="#CCCCCC"> videos</font><font color="#E5E5E5"> go with convolutional</font>

548
00:25:54,370 --> 00:26:00,549
neural networks<font color="#CCCCCC"> usually something</font><font color="#E5E5E5"> like</font>

549
00:25:56,380 --> 00:26:03,130
<font color="#E5E5E5">this you run it</font><font color="#CCCCCC"> for and classification</font>

550
00:26:00,549 --> 00:26:05,889
layer and get an output<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> a</font>

551
00:26:03,130 --> 00:26:07,900
sigmoid function where you<font color="#E5E5E5"> classify is</font>

552
00:26:05,890 --> 00:26:10,840
it in<font color="#CCCCCC"> DGA or not softmax function is</font>

553
00:26:07,900 --> 00:26:15,700
<font color="#CCCCCC">usually use if you want to</font><font color="#E5E5E5"> know which</font>

554
00:26:10,840 --> 00:26:18,100
type<font color="#E5E5E5"> of dg8 is getting one step deeper</font>

555
00:26:15,700 --> 00:26:22,330
we try to find out how it works actually

556
00:26:18,100 --> 00:26:25,510
<font color="#E5E5E5">or if the all the specific</font><font color="#CCCCCC"> vga</font>

557
00:26:22,330 --> 00:26:27,220
algorithms we found around<font color="#CCCCCC"> 6465 around</font>

558
00:26:25,510 --> 00:26:28,720
from the database from the fluorophore

559
00:26:27,220 --> 00:26:31,300
<font color="#CCCCCC">institute it's a German</font><font color="#E5E5E5"> Research</font>

560
00:26:28,720 --> 00:26:33,460
<font color="#E5E5E5">Institute they reverse engineers all the</font>

561
00:26:31,300 --> 00:26:36,450
DJ's let it run and<font color="#E5E5E5"> they give you and</font>

562
00:26:33,460 --> 00:26:41,370
they give you a database<font color="#E5E5E5"> how the</font>

563
00:26:36,450 --> 00:26:43,290
created<font color="#E5E5E5"> domains look like so</font><font color="#CCCCCC"> the upper</font>

564
00:26:41,370 --> 00:26:45,090
left side here is again the deep<font color="#E5E5E5"> Lerner</font>

565
00:26:43,290 --> 00:26:47,100
<font color="#CCCCCC">on the</font><font color="#E5E5E5"> left-hand side</font><font color="#CCCCCC"> you fit in their</font>

566
00:26:45,090 --> 00:26:51,060
domains<font color="#E5E5E5"> on the right hand side you have</font>

567
00:26:47,100 --> 00:26:53,699
1 euro per<font color="#CCCCCC"> VGA type and if you get an</font>

568
00:26:51,060 --> 00:26:55,470
output<font color="#E5E5E5"> here from the DGA type the final</font>

569
00:26:53,700 --> 00:26:57,300
layer the final hidden layer inside this

570
00:26:55,470 --> 00:26:59,970
neural<font color="#CCCCCC"> network has to</font><font color="#E5E5E5"> came contain the</font>

571
00:26:57,300 --> 00:27:03,030
whole<font color="#CCCCCC"> information so it took this layer</font>

572
00:26:59,970 --> 00:27:05,220
<font color="#CCCCCC">method to</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> two-dimensional space using</font>

573
00:27:03,030 --> 00:27:07,680
<font color="#CCCCCC">a technique called</font><font color="#E5E5E5"> multi-dimensional</font>

574
00:27:05,220 --> 00:27:10,410
scaling<font color="#E5E5E5"> and looked if they are well</font>

575
00:27:07,680 --> 00:27:14,160
separated<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can see yes</font>

576
00:27:10,410 --> 00:27:17,070
for<font color="#E5E5E5"> example DJ of type</font><font color="#CCCCCC"> 1 here the yellow</font>

577
00:27:14,160 --> 00:27:20,960
one<font color="#E5E5E5"> is far</font><font color="#CCCCCC"> away</font><font color="#E5E5E5"> from the other ones here</font>

578
00:27:17,070 --> 00:27:24,889
and here<font color="#E5E5E5"> then you have for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> the</font>

579
00:27:20,960 --> 00:27:28,800
you know the blue one which is<font color="#E5E5E5"> type 3</font>

580
00:27:24,890 --> 00:27:30,090
it's also<font color="#E5E5E5"> very well separated so the</font>

581
00:27:28,800 --> 00:27:33,540
<font color="#E5E5E5">only one which is not very well</font>

582
00:27:30,090 --> 00:27:35,899
<font color="#CCCCCC">separated the green one here</font><font color="#E5E5E5"> and this is</font>

583
00:27:33,540 --> 00:27:39,540
a special type of<font color="#CCCCCC"> EGA so-called</font>

584
00:27:35,900 --> 00:27:41,150
dictionary based<font color="#E5E5E5"> DJ's they use google</font>

585
00:27:39,540 --> 00:27:43,980
dictionaries or regular dictionaries

586
00:27:41,150 --> 00:27:46,140
permute their words<font color="#E5E5E5"> for building up the</font>

587
00:27:43,980 --> 00:27:48,240
<font color="#CCCCCC">new domains</font><font color="#E5E5E5"> and not shifting around</font>

588
00:27:46,140 --> 00:27:50,280
<font color="#E5E5E5">letters like the code from</font><font color="#CCCCCC"> Wikipedia</font>

589
00:27:48,240 --> 00:27:50,850
I've shown you<font color="#E5E5E5"> in</font><font color="#CCCCCC"> a previous</font><font color="#E5E5E5"> one of a</font>

590
00:27:50,280 --> 00:27:53,340
<font color="#CCCCCC">previous slide</font>

591
00:27:50,850 --> 00:27:58,080
<font color="#E5E5E5">anyway they can be handled by</font><font color="#CCCCCC"> different</font>

592
00:27:53,340 --> 00:28:02,159
deep learners<font color="#E5E5E5"> and you can fix this as</font>

593
00:27:58,080 --> 00:28:03,689
well<font color="#CCCCCC"> so we have</font><font color="#E5E5E5"> to cope with other</font>

594
00:28:02,160 --> 00:28:06,150
problems<font color="#CCCCCC"> that a large corporate network</font>

595
00:28:03,690 --> 00:28:08,100
like Siemens<font color="#CCCCCC"> pedra already mentioned we</font>

596
00:28:06,150 --> 00:28:10,380
have 60,000 events per second<font color="#CCCCCC"> which</font>

597
00:28:08,100 --> 00:28:13,110
<font color="#E5E5E5">means we have to ask the d-plan of</font>

598
00:28:10,380 --> 00:28:15,450
60,000 times per second<font color="#CCCCCC"> is it an ETA or</font>

599
00:28:13,110 --> 00:28:18,120
not<font color="#E5E5E5"> and what type of the year it is for</font>

600
00:28:15,450 --> 00:28:21,360
<font color="#CCCCCC">example we capture 6.2 terabytes of data</font>

601
00:28:18,120 --> 00:28:23,070
and we do it 24 by 7 of course there's

602
00:28:21,360 --> 00:28:26,459
always sunlight<font color="#E5E5E5"> somewhere around the</font>

603
00:28:23,070 --> 00:28:29,129
<font color="#E5E5E5">world right for this we built a big</font>

604
00:28:26,460 --> 00:28:32,940
<font color="#E5E5E5">powerful platform on top on Amazon Web</font>

605
00:28:29,130 --> 00:28:34,920
Services we used only<font color="#E5E5E5"> a subset of the</font>

606
00:28:32,940 --> 00:28:37,440
Amazon path services<font color="#CCCCCC"> so-called</font>

607
00:28:34,920 --> 00:28:39,420
serverless<font color="#E5E5E5"> path services these services</font>

608
00:28:37,440 --> 00:28:41,160
have some properties<font color="#E5E5E5"> where they are</font>

609
00:28:39,420 --> 00:28:43,620
fully managed they are<font color="#CCCCCC"> auto scaling and</font>

610
00:28:41,160 --> 00:28:47,010
they are how<font color="#E5E5E5"> to fail over we wanted to</font>

611
00:28:43,620 --> 00:28:49,350
get<font color="#CCCCCC"> rid of this task syndrome we divided</font>

612
00:28:47,010 --> 00:28:52,049
this whole platform<font color="#E5E5E5"> into three zones</font>

613
00:28:49,350 --> 00:28:54,509
<font color="#CCCCCC">in ingestions own</font><font color="#E5E5E5"> storage</font><font color="#CCCCCC"> zone in</font><font color="#E5E5E5"> the</font>

614
00:28:52,049 --> 00:28:56,879
serving zone the congestion zone

615
00:28:54,509 --> 00:29:01,889
consists mainly of a<font color="#CCCCCC"> kinetic stream</font>

616
00:28:56,880 --> 00:29:04,169
<font color="#E5E5E5">engine and there we get the data in from</font>

617
00:29:01,889 --> 00:29:06,689
Peters part<font color="#CCCCCC"> actually from a Fink</font><font color="#E5E5E5"> engine</font>

618
00:29:04,169 --> 00:29:09,090
we pass it through<font color="#CCCCCC"> to a landing</font><font color="#E5E5E5"> zone</font>

619
00:29:06,690 --> 00:29:12,529
<font color="#E5E5E5">there is picked up by a blue</font><font color="#CCCCCC"> angel this</font>

620
00:29:09,090 --> 00:29:15,029
<font color="#CCCCCC">is a managed SPARC version basically</font>

621
00:29:12,529 --> 00:29:17,549
<font color="#CCCCCC">there we do all the cleaning of</font><font color="#E5E5E5"> the data</font>

622
00:29:15,029 --> 00:29:19,950
and we do the complex<font color="#E5E5E5"> pre-processing</font>

623
00:29:17,549 --> 00:29:21,980
which is usually needed for machine

624
00:29:19,950 --> 00:29:24,899
learning<font color="#CCCCCC"> for artificial intelligence</font>

625
00:29:21,980 --> 00:29:28,190
<font color="#E5E5E5">from this point on we move everything</font>

626
00:29:24,899 --> 00:29:30,779
<font color="#E5E5E5">through our AI prediction system is</font>

627
00:29:28,190 --> 00:29:32,700
mainly based on<font color="#CCCCCC"> tensorflow tens of</font>

628
00:29:30,779 --> 00:29:38,220
lawyers<font color="#CCCCCC"> from</font><font color="#E5E5E5"> Google</font><font color="#CCCCCC"> um</font><font color="#E5E5E5"> somebody</font><font color="#CCCCCC"> may know</font>

629
00:29:32,700 --> 00:29:39,299
it so maybe it's famous for if you know

630
00:29:38,220 --> 00:29:42,179
it<font color="#E5E5E5"> probably</font><font color="#CCCCCC"> from</font>

631
00:29:39,299 --> 00:29:45,179
alphago<font color="#E5E5E5"> that engine which has beaten all</font>

632
00:29:42,179 --> 00:29:46,710
<font color="#CCCCCC">the</font><font color="#E5E5E5"> world best</font><font color="#CCCCCC"> goal players so it was</font>

633
00:29:45,179 --> 00:29:51,690
basically<font color="#CCCCCC"> the same</font><font color="#E5E5E5"> engine it's open</font>

634
00:29:46,710 --> 00:29:54,240
<font color="#E5E5E5">source</font><font color="#CCCCCC"> we enrich all the data inside</font>

635
00:29:51,690 --> 00:29:56,009
<font color="#E5E5E5">here</font><font color="#CCCCCC"> detainer database and then these</font>

636
00:29:54,240 --> 00:29:59,100
results are<font color="#CCCCCC"> presented to</font><font color="#E5E5E5"> our incident</font>

637
00:29:56,009 --> 00:30:02,220
analyst or security analyst<font color="#E5E5E5"> these guys</font>

638
00:29:59,100 --> 00:30:05,219
can use it<font color="#CCCCCC"> either</font><font color="#E5E5E5"> for better decisions</font>

639
00:30:02,220 --> 00:30:07,679
for faster decisions or we<font color="#E5E5E5"> create them</font>

640
00:30:05,220 --> 00:30:10,379
certain alarms<font color="#E5E5E5"> which then point them to</font>

641
00:30:07,679 --> 00:30:12,570
certain<font color="#E5E5E5"> types of text for example types</font>

642
00:30:10,379 --> 00:30:16,199
of<font color="#CCCCCC"> ETS or something like this</font><font color="#E5E5E5"> the</font>

643
00:30:12,570 --> 00:30:18,799
security<font color="#CCCCCC"> analysts are not only actually</font>

644
00:30:16,200 --> 00:30:22,559
I'm<font color="#CCCCCC"> very important part</font><font color="#E5E5E5"> in the whole</font>

645
00:30:18,799 --> 00:30:25,679
<font color="#E5E5E5">platform here we do</font><font color="#CCCCCC"> not they do not have</font>

646
00:30:22,559 --> 00:30:29,428
only<font color="#E5E5E5"> the task to find the right attack</font>

647
00:30:25,679 --> 00:30:32,250
<font color="#E5E5E5">and somehow to contain it but they also</font>

648
00:30:29,429 --> 00:30:35,340
are a source of final truth for a

649
00:30:32,250 --> 00:30:38,850
platform actually<font color="#E5E5E5"> so when they decide so</font>

650
00:30:35,340 --> 00:30:42,590
molecular this way so when tens of<font color="#CCCCCC"> law</font>

651
00:30:38,850 --> 00:30:46,009
decides this<font color="#CCCCCC"> is an attack of type a and</font>

652
00:30:42,590 --> 00:30:48,899
security<font color="#E5E5E5"> analysts decide no it's wrong</font>

653
00:30:46,009 --> 00:30:52,789
we<font color="#CCCCCC"> feed back all this information back</font>

654
00:30:48,899 --> 00:30:55,080
to<font color="#CCCCCC"> tens of law weary</font><font color="#E5E5E5"> label the</font><font color="#CCCCCC"> data sets</font>

655
00:30:52,789 --> 00:30:57,840
<font color="#E5E5E5">retrain the whole system and next time</font>

656
00:30:55,080 --> 00:31:01,500
<font color="#CCCCCC">it won't make this mistake again</font><font color="#E5E5E5"> that</font>

657
00:30:57,840 --> 00:31:04,699
way we increasingly get better results

658
00:31:01,500 --> 00:31:04,700
and<font color="#CCCCCC"> then</font><font color="#E5E5E5"> nearly</font>

659
00:31:07,490 --> 00:31:41,129
yeah<font color="#E5E5E5"> thank you that's it any question hi</font>

660
00:31:38,820 --> 00:31:44,490
so basically when you're using machine

661
00:31:41,129 --> 00:31:46,408
learning are something like AI<font color="#E5E5E5"> in</font>

662
00:31:44,490 --> 00:31:48,509
<font color="#CCCCCC">security</font><font color="#E5E5E5"> you have to have the</font>

663
00:31:46,409 --> 00:31:50,639
presumptions<font color="#CCCCCC"> that you know what</font><font color="#E5E5E5"> is good</font>

664
00:31:48,509 --> 00:31:53,220
<font color="#CCCCCC">and what is not and then you can teach</font>

665
00:31:50,639 --> 00:31:55,279
the the<font color="#E5E5E5"> system how to distinguish</font>

666
00:31:53,220 --> 00:31:59,129
between one of<font color="#E5E5E5"> the other</font>

667
00:31:55,279 --> 00:32:03,509
have you ever how do you do that and<font color="#E5E5E5"> how</font>

668
00:31:59,129 --> 00:32:05,600
do<font color="#E5E5E5"> you prevent</font><font color="#CCCCCC"> that the system learns</font>

669
00:32:03,509 --> 00:32:09,409
something<font color="#E5E5E5"> where there's good and then</font>

670
00:32:05,600 --> 00:32:12,209
exponentially<font color="#E5E5E5"> keeps using a loop of</font>

671
00:32:09,409 --> 00:32:15,840
keeping bad behavior over<font color="#E5E5E5"> and over</font><font color="#CCCCCC"> ahead</font>

672
00:32:12,210 --> 00:32:18,840
and then<font color="#E5E5E5"> minimizing the efficacy of</font><font color="#CCCCCC"> of</font>

673
00:32:15,840 --> 00:32:22,678
<font color="#E5E5E5">detection</font><font color="#CCCCCC"> to possibilities you have like</font>

674
00:32:18,840 --> 00:32:24,570
in every machine learning<font color="#E5E5E5"> or AI you have</font>

675
00:32:22,679 --> 00:32:27,059
the possibility to<font color="#CCCCCC"> use either</font>

676
00:32:24,570 --> 00:32:29,549
<font color="#E5E5E5">unsupervised learning so you train you</font>

677
00:32:27,059 --> 00:32:31,710
train the algorithm to<font color="#CCCCCC"> learn</font><font color="#E5E5E5"> the normal</font>

678
00:32:29,549 --> 00:32:33,529
state<font color="#E5E5E5"> somehow and then everything what</font>

679
00:32:31,710 --> 00:32:36,690
deviates<font color="#E5E5E5"> is usually something that</font>

680
00:32:33,529 --> 00:32:38,610
<font color="#E5E5E5">that's one possibility</font><font color="#CCCCCC"> but it produces</font>

681
00:32:36,690 --> 00:32:41,429
usually a higher amount<font color="#E5E5E5"> of false</font>

682
00:32:38,610 --> 00:32:44,758
positives<font color="#CCCCCC"> so the other possibility is of</font>

683
00:32:41,429 --> 00:32:46,919
course you give you have the information

684
00:32:44,759 --> 00:32:48,779
<font color="#E5E5E5">in the data set what</font><font color="#CCCCCC"> is good or what is</font>

685
00:32:46,919 --> 00:32:51,600
bad<font color="#E5E5E5"> in</font><font color="#CCCCCC"> that case you need to</font><font color="#E5E5E5"> have</font>

686
00:32:48,779 --> 00:32:53,850
labeled data<font color="#E5E5E5"> so something like in the</font>

687
00:32:51,600 --> 00:32:55,439
case of<font color="#E5E5E5"> domains you have a data set</font><font color="#CCCCCC"> its</font>

688
00:32:53,850 --> 00:32:56,699
<font color="#CCCCCC">domain is good this domain is bad</font><font color="#E5E5E5"> this</font>

689
00:32:55,440 --> 00:32:59,249
domain is good or<font color="#E5E5E5"> something like this</font>

690
00:32:56,700 --> 00:33:03,080
and<font color="#CCCCCC"> then you get usually very low false</font>

691
00:32:59,249 --> 00:33:05,519
positive<font color="#CCCCCC"> right so if you do</font><font color="#E5E5E5"> not have if</font>

692
00:33:03,080 --> 00:33:07,590
if you do not have label data you can

693
00:33:05,519 --> 00:33:10,230
only go<font color="#E5E5E5"> with the unsupervised case but</font>

694
00:33:07,590 --> 00:33:12,240
in that case<font color="#CCCCCC"> you strongly have to rely</font>

695
00:33:10,230 --> 00:33:13,710
<font color="#CCCCCC">on the specialist and I have to keep</font>

696
00:33:12,240 --> 00:33:15,929
them<font color="#E5E5E5"> constantly in the loop that</font><font color="#CCCCCC"> you</font>

697
00:33:13,710 --> 00:33:16,740
<font color="#E5E5E5">improve the system constant they give</font>

698
00:33:15,929 --> 00:33:18,450
<font color="#E5E5E5">their feedback</font>

699
00:33:16,740 --> 00:33:21,200
and that way that's<font color="#E5E5E5"> the same basically</font>

700
00:33:18,450 --> 00:33:23,429
<font color="#CCCCCC">father-like for the</font><font color="#E5E5E5"> DJ's so we</font>

701
00:33:21,200 --> 00:33:25,980
constantly keep them in a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit so</font>

702
00:33:23,429 --> 00:33:27,960
we take them as final truth<font color="#CCCCCC"> if they say</font>

703
00:33:25,980 --> 00:33:31,289
<font color="#E5E5E5">no that's not</font><font color="#CCCCCC"> a DJ but</font><font color="#E5E5E5"> you said it's a</font>

704
00:33:27,960 --> 00:33:50,010
DJ we correct the<font color="#E5E5E5"> whole data set and say</font>

705
00:33:31,289 --> 00:33:53,760
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> train it so</font><font color="#E5E5E5"> right the end there</font>

706
00:33:50,010 --> 00:33:57,179
<font color="#CCCCCC">you are saying that you use human input</font>

707
00:33:53,760 --> 00:33:58,740
determine whether<font color="#E5E5E5"> the end result</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> a</font>

708
00:33:57,179 --> 00:34:02,390
true positive<font color="#CCCCCC"> a false</font><font color="#E5E5E5"> positive do you</font>

709
00:33:58,740 --> 00:34:05,760
have any detections for false negatives

710
00:34:02,390 --> 00:34:07,830
sure so the statistics of getting all

711
00:34:05,760 --> 00:34:09,810
this information<font color="#E5E5E5"> are there I do not</font><font color="#CCCCCC"> have</font>

712
00:34:07,830 --> 00:34:11,040
it<font color="#E5E5E5"> with me today but if you are</font>

713
00:34:09,810 --> 00:34:12,810
<font color="#CCCCCC">interested in we can have a discussion</font>

714
00:34:11,040 --> 00:34:31,649
<font color="#CCCCCC">on this later on do I have it for sure</font>

715
00:34:12,810 --> 00:34:33,149
somewhere my computer hi good stuff like

716
00:34:31,649 --> 00:34:36,330
ours<font color="#E5E5E5"> Marla from the University of the</font>

717
00:34:33,149 --> 00:34:40,020
<font color="#E5E5E5">autumn I have a question of three</font>

718
00:34:36,330 --> 00:34:44,899
<font color="#E5E5E5">questions actually</font><font color="#CCCCCC"> how do you consider</font>

719
00:34:40,020 --> 00:34:49,159
the adversarial<font color="#CCCCCC"> nature of the attacker</font>

720
00:34:44,899 --> 00:34:54,929
regarding the complexity of the VGA<font color="#E5E5E5"> and</font>

721
00:34:49,159 --> 00:34:57,149
an idea of the levels of<font color="#E5E5E5"> your deep</font>

722
00:34:54,929 --> 00:35:00,570
learning that<font color="#CCCCCC"> that the attacker may may</font>

723
00:34:57,149 --> 00:35:03,509
know so<font color="#E5E5E5"> can the attacker trick your your</font>

724
00:35:00,570 --> 00:35:08,040
AI system and you consider<font color="#E5E5E5"> that that's</font>

725
00:35:03,510 --> 00:35:11,160
one second one is do you<font color="#E5E5E5"> have an idea</font>

726
00:35:08,040 --> 00:35:15,240
<font color="#CCCCCC">for</font><font color="#E5E5E5"> it didn't</font><font color="#CCCCCC"> the first</font><font color="#E5E5E5"> one fully</font><font color="#CCCCCC"> okay</font>

727
00:35:11,160 --> 00:35:20,670
<font color="#E5E5E5">so can the attacker trick your AI system</font>

728
00:35:15,240 --> 00:35:22,089
basically did you<font color="#E5E5E5"> consider that and what</font>

729
00:35:20,670 --> 00:35:26,350
<font color="#CCCCCC">are you doing without</font>

730
00:35:22,090 --> 00:35:28,360
<font color="#E5E5E5">to that the second one is do you have an</font>

731
00:35:26,350 --> 00:35:30,460
idea of how many DNS requests are<font color="#CCCCCC"> not</font>

732
00:35:28,360 --> 00:35:33,580
going in<font color="#CCCCCC"> plaintext</font><font color="#E5E5E5"> and are going</font>

733
00:35:30,460 --> 00:35:37,240
<font color="#E5E5E5">encrypted so ciphered so that means you</font>

734
00:35:33,580 --> 00:35:39,910
cannot really use the AI to make

735
00:35:37,240 --> 00:35:42,819
<font color="#CCCCCC">predictions and and the final</font><font color="#E5E5E5"> one is I</font>

736
00:35:39,910 --> 00:35:49,259
didn't get under<font color="#E5E5E5"> to understand where are</font>

737
00:35:42,820 --> 00:35:52,750
you<font color="#E5E5E5"> using AI in other non DGA non DNS</font>

738
00:35:49,260 --> 00:35:55,390
domains in networking<font color="#CCCCCC"> reason thank you</font>

739
00:35:52,750 --> 00:36:00,970
<font color="#E5E5E5">okay first one can you trick</font><font color="#CCCCCC"> somehow the</font>

740
00:35:55,390 --> 00:36:02,589
deep<font color="#CCCCCC"> learners it depends it depends on</font>

741
00:36:00,970 --> 00:36:05,350
the way how<font color="#E5E5E5"> they're trained and so it's</font>

742
00:36:02,590 --> 00:36:09,460
it's a task of<font color="#E5E5E5"> the data science team</font>

743
00:36:05,350 --> 00:36:11,259
here to make the D plan of somehow<font color="#E5E5E5"> not</font>

744
00:36:09,460 --> 00:36:13,540
memorizing<font color="#E5E5E5"> all this information by</font>

745
00:36:11,260 --> 00:36:17,050
generalizing<font color="#E5E5E5"> and then it's really</font>

746
00:36:13,540 --> 00:36:19,870
difficult<font color="#E5E5E5"> because what we found out that</font>

747
00:36:17,050 --> 00:36:22,840
if you<font color="#E5E5E5"> make this deep learners</font>

748
00:36:19,870 --> 00:36:24,670
generalizing<font color="#CCCCCC"> they do not learn that they</font>

749
00:36:22,840 --> 00:36:27,730
do not memorize the<font color="#CCCCCC"> string simply by the</font>

750
00:36:24,670 --> 00:36:30,340
reverse engineer somehow the way how the

751
00:36:27,730 --> 00:36:32,680
DGA works<font color="#CCCCCC"> and that's what we found out</font>

752
00:36:30,340 --> 00:36:35,200
<font color="#E5E5E5">so in our training set most of the DJ's</font>

753
00:36:32,680 --> 00:36:38,169
we detect today is not available<font color="#CCCCCC"> so it's</font>

754
00:36:35,200 --> 00:36:40,509
really so they<font color="#CCCCCC"> learn somehow the way how</font>

755
00:36:38,170 --> 00:36:44,980
the<font color="#CCCCCC"> DJ algorithm works and there are</font>

756
00:36:40,510 --> 00:36:47,680
currently<font color="#CCCCCC"> approximately 60 65 different</font>

757
00:36:44,980 --> 00:36:52,870
<font color="#E5E5E5">DGA types around</font><font color="#CCCCCC"> which are used actually</font>

758
00:36:47,680 --> 00:36:55,359
<font color="#E5E5E5">and if you bring a completely new DJ</font>

759
00:36:52,870 --> 00:36:59,020
algorithm they<font color="#E5E5E5"> may be trick definitely</font>

760
00:36:55,360 --> 00:37:01,180
yes so then we need<font color="#E5E5E5"> again to take the</font>

761
00:36:59,020 --> 00:37:07,290
<font color="#CCCCCC">new examples in our database and retrain</font>

762
00:37:01,180 --> 00:37:11,980
all<font color="#E5E5E5"> that stuff second</font><font color="#CCCCCC"> question was so</font>

763
00:37:07,290 --> 00:37:17,980
<font color="#E5E5E5">ciphering the so there's</font><font color="#CCCCCC"> DNS over HTTP</font>

764
00:37:11,980 --> 00:37:19,600
and other so<font color="#CCCCCC"> so basically how far how</font>

765
00:37:17,980 --> 00:37:23,440
much do you know in<font color="#E5E5E5"> your network</font>

766
00:37:19,600 --> 00:37:26,020
yeah or DNS is being used in<font color="#E5E5E5"> plaintext</font>

767
00:37:23,440 --> 00:37:31,120
versus not maybe you don't know actually

768
00:37:26,020 --> 00:37:32,980
so yes if the<font color="#E5E5E5"> Texas cyber nodes usually</font>

769
00:37:31,120 --> 00:37:34,569
if you take the whole<font color="#CCCCCC"> URL into the</font><font color="#E5E5E5"> into</font>

770
00:37:32,980 --> 00:37:35,710
account at all<font color="#E5E5E5"> a domain the domain is</font>

771
00:37:34,570 --> 00:37:39,220
<font color="#E5E5E5">usual</font>

772
00:37:35,710 --> 00:37:41,619
but yes<font color="#E5E5E5"> so we had some experimenting</font>

773
00:37:39,220 --> 00:37:44,169
with whole URLs where the whole content

774
00:37:41,619 --> 00:37:46,900
of behind<font color="#E5E5E5"> flesh and all these tough</font>

775
00:37:44,170 --> 00:37:50,760
arguments is encrypted<font color="#E5E5E5"> works as well so</font>

776
00:37:46,900 --> 00:37:54,369
for some for<font color="#E5E5E5"> some reasons obviously</font><font color="#CCCCCC"> the</font>

777
00:37:50,760 --> 00:37:56,380
structure of the<font color="#E5E5E5"> encrypted text</font><font color="#CCCCCC"> still</font>

778
00:37:54,369 --> 00:37:59,740
has some properties which can<font color="#E5E5E5"> be</font>

779
00:37:56,380 --> 00:38:01,930
detected<font color="#E5E5E5"> by deep learners the hit rate</font>

780
00:37:59,740 --> 00:38:06,310
<font color="#CCCCCC">is not as high as with a pure domain</font>

781
00:38:01,930 --> 00:38:07,990
stuff<font color="#CCCCCC"> definitely but it's helpful at</font>

782
00:38:06,310 --> 00:38:10,900
least<font color="#E5E5E5"> for analysts to find out</font>

783
00:38:07,990 --> 00:38:13,390
<font color="#E5E5E5">it gives him a hint to where to point to</font>

784
00:38:10,900 --> 00:38:17,200
or where to<font color="#E5E5E5"> look to actually and if the</font>

785
00:38:13,390 --> 00:38:20,140
final<font color="#E5E5E5"> thing is did</font><font color="#CCCCCC"> we do something I did</font>

786
00:38:17,200 --> 00:38:24,460
we do<font color="#E5E5E5"> applied</font><font color="#CCCCCC"> ai in other domains not</font>

787
00:38:20,140 --> 00:38:26,109
very much like right now<font color="#E5E5E5"> we</font><font color="#CCCCCC"> actually the</font>

788
00:38:24,460 --> 00:38:28,570
plan was to first build up the platform

789
00:38:26,109 --> 00:38:31,119
<font color="#E5E5E5">with this high performance platform for</font>

790
00:38:28,570 --> 00:38:34,859
this stuff<font color="#CCCCCC"> and we are</font><font color="#E5E5E5"> going into new use</font>

791
00:38:31,119 --> 00:38:38,200
cases<font color="#E5E5E5"> like actually finding also</font>

792
00:38:34,859 --> 00:38:41,259
communication to see<font color="#E5E5E5"> two hosts which if</font>

793
00:38:38,200 --> 00:38:43,390
it goes for example Twitter or something

794
00:38:41,260 --> 00:38:45,070
<font color="#CCCCCC">like a link in or something</font><font color="#E5E5E5"> like this</font>

795
00:38:43,390 --> 00:38:47,020
<font color="#E5E5E5">and that would be a case like this one</font>

796
00:38:45,070 --> 00:38:49,450
that<font color="#CCCCCC"> you have to take</font><font color="#E5E5E5"> into account the</font>

797
00:38:47,020 --> 00:38:53,320
<font color="#CCCCCC">whole URL information the information</font>

798
00:38:49,450 --> 00:38:56,919
<font color="#CCCCCC">which</font><font color="#E5E5E5"> is usually encrypted and find out</font>

799
00:38:53,320 --> 00:38:59,950
if you can also get properties the<font color="#CCCCCC"> few</font>

800
00:38:56,920 --> 00:39:03,160
deep learners can learn properties from

801
00:38:59,950 --> 00:39:06,009
exactly this string<font color="#CCCCCC"> its</font><font color="#E5E5E5"> encrypted string</font>

802
00:39:03,160 --> 00:39:07,899
and pointed<font color="#CCCCCC"> to this one definitely a</font>

803
00:39:06,010 --> 00:39:08,350
much more complicated huh thank you<font color="#CCCCCC"> very</font>

804
00:39:07,900 --> 00:39:21,970
much

805
00:39:08,350 --> 00:39:24,640
welcome hi<font color="#CCCCCC"> my</font><font color="#E5E5E5"> question is how long did</font>

806
00:39:21,970 --> 00:39:30,640
it take to go<font color="#CCCCCC"> from the old architecture</font>

807
00:39:24,640 --> 00:39:35,920
<font color="#CCCCCC">to the</font><font color="#E5E5E5"> new to the new one yeah so we</font>

808
00:39:30,640 --> 00:39:38,049
actually<font color="#CCCCCC"> started that development</font><font color="#E5E5E5"> during</font>

809
00:39:35,920 --> 00:39:41,440
my master<font color="#E5E5E5"> thesis so it was nine months</font>

810
00:39:38,050 --> 00:39:44,109
it was to develop a proof of concepts in

811
00:39:41,440 --> 00:39:46,600
<font color="#CCCCCC">order to replace</font><font color="#E5E5E5"> our current</font>

812
00:39:44,109 --> 00:39:47,759
infrastructure<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> were able to</font><font color="#E5E5E5"> set up</font>

813
00:39:46,600 --> 00:39:49,770
Kafka<font color="#E5E5E5"> we</font>

814
00:39:47,760 --> 00:39:53,190
able<font color="#E5E5E5"> to set up our collectors and</font><font color="#CCCCCC"> we</font>

815
00:39:49,770 --> 00:39:57,120
were able to<font color="#E5E5E5"> set up</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> rules engine in</font>

816
00:39:53,190 --> 00:40:00,360
just<font color="#E5E5E5"> this interval right</font><font color="#CCCCCC"> so it took</font>

817
00:39:57,120 --> 00:40:05,310
about nine months<font color="#E5E5E5"> for this first PLC and</font>

818
00:40:00,360 --> 00:40:08,340
then more nine months<font color="#E5E5E5"> around</font><font color="#CCCCCC"> more around</font>

819
00:40:05,310 --> 00:40:11,070
<font color="#E5E5E5">a year just to fine-tune stuff to</font>

820
00:40:08,340 --> 00:40:12,840
<font color="#E5E5E5">improve the language and then the</font>

821
00:40:11,070 --> 00:40:14,490
operational stuff<font color="#E5E5E5"> like if it is</font>

822
00:40:12,840 --> 00:40:19,200
<font color="#E5E5E5">something is done or if there is</font><font color="#CCCCCC"> a</font>

823
00:40:14,490 --> 00:40:33,270
problem<font color="#CCCCCC"> detector we need to detect</font><font color="#E5E5E5"> time</font>

824
00:40:19,200 --> 00:40:36,390
<font color="#E5E5E5">on almost two years hi thank you</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the</font>

825
00:40:33,270 --> 00:40:38,790
talk<font color="#E5E5E5"> but I need to know</font><font color="#CCCCCC"> one thing do</font>

826
00:40:36,390 --> 00:40:41,580
<font color="#E5E5E5">mark a bit domain or good mine</font><font color="#CCCCCC"> only by</font>

827
00:40:38,790 --> 00:40:45,600
the URL<font color="#E5E5E5"> or by the content of</font><font color="#CCCCCC"> the domain</font>

828
00:40:41,580 --> 00:40:49,160
only domain<font color="#CCCCCC"> oh it only</font><font color="#E5E5E5"> domain not a URL</font>

829
00:40:45,600 --> 00:40:49,160
<font color="#E5E5E5">the URL is a bit different case actually</font>

830
00:40:49,760 --> 00:40:55,470
<font color="#E5E5E5">there are two reasons for now</font><font color="#CCCCCC"> to not use</font>

831
00:40:52,590 --> 00:40:57,060
the whole URL one reason is that there

832
00:40:55,470 --> 00:40:59,759
are not<font color="#E5E5E5"> a really good data sets</font>

833
00:40:57,060 --> 00:41:01,830
available for the whole<font color="#E5E5E5"> URL stuff it</font>

834
00:40:59,760 --> 00:41:04,140
would<font color="#CCCCCC"> be</font><font color="#E5E5E5"> necessary actually for example</font>

835
00:41:01,830 --> 00:41:05,130
<font color="#CCCCCC">for the case that the communication go</font>

836
00:41:04,140 --> 00:41:07,410
<font color="#CCCCCC">through Twitter through</font>

837
00:41:05,130 --> 00:41:09,030
I don't know through LinkedIn through

838
00:41:07,410 --> 00:41:10,859
Facebook or<font color="#CCCCCC"> something like this or</font><font color="#E5E5E5"> would</font>

839
00:41:09,030 --> 00:41:14,250
<font color="#CCCCCC">like it would like</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> you have to such a</font>

840
00:41:10,860 --> 00:41:16,620
data set and but and there is a deviated

841
00:41:14,250 --> 00:41:18,900
<font color="#CCCCCC">a set which is available or multiple</font>

842
00:41:16,620 --> 00:41:20,910
digits which are<font color="#CCCCCC"> available they they are</font>

843
00:41:18,900 --> 00:41:23,120
<font color="#CCCCCC">labeled so</font><font color="#E5E5E5"> the labeling is usually the</font>

844
00:41:20,910 --> 00:41:25,740
most expensive<font color="#E5E5E5"> task in machine learning</font>

845
00:41:23,120 --> 00:41:32,100
<font color="#E5E5E5">so if you don't if you</font><font color="#CCCCCC"> don't have it you</font>

846
00:41:25,740 --> 00:41:36,779
<font color="#CCCCCC">have to do Yuja frauds actually</font><font color="#E5E5E5"> oh he</font>

847
00:41:32,100 --> 00:41:38,940
said<font color="#E5E5E5"> I don't know no okay</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> so labeling</font>

848
00:41:36,780 --> 00:41:41,490
you could if you don't have some kind<font color="#CCCCCC"> of</font>

849
00:41:38,940 --> 00:41:44,670
source without<font color="#E5E5E5"> labored</font><font color="#CCCCCC"> datasets</font><font color="#E5E5E5"> you do</font>

850
00:41:41,490 --> 00:41:46,830
need to do<font color="#E5E5E5"> the labeling yourself with</font>

851
00:41:44,670 --> 00:41:48,780
simulation with help from other people

852
00:41:46,830 --> 00:41:53,610
<font color="#CCCCCC">and all this</font><font color="#E5E5E5"> stuff or</font><font color="#CCCCCC"> even by the data</font>

853
00:41:48,780 --> 00:41:55,080
sets<font color="#CCCCCC"> and the second</font><font color="#E5E5E5"> reason simply it was</font>

854
00:41:53,610 --> 00:41:58,800
<font color="#E5E5E5">not necessary</font><font color="#CCCCCC"> for the parasite that</font>

855
00:41:55,080 --> 00:42:06,999
domain was completely enough thank you

856
00:41:58,800 --> 00:42:06,999
[Music]

857
00:42:12,540 --> 00:42:18,550
hello thank you<font color="#CCCCCC"> for this presentation if</font>

858
00:42:16,420 --> 00:42:20,950
I understood<font color="#CCCCCC"> correctly</font><font color="#E5E5E5"> your system is</font>

859
00:42:18,550 --> 00:42:24,580
able to<font color="#CCCCCC"> detect a pattern that generated</font>

860
00:42:20,950 --> 00:42:28,149
<font color="#CCCCCC">a domain</font><font color="#E5E5E5"> but how does the your machine</font>

861
00:42:24,580 --> 00:42:31,840
<font color="#CCCCCC">gun deals with the</font><font color="#E5E5E5"> mines</font><font color="#CCCCCC"> that are not</font>

862
00:42:28,150 --> 00:42:34,570
<font color="#E5E5E5">wood but are just random</font><font color="#CCCCCC"> words from</font>

863
00:42:31,840 --> 00:42:38,170
English this<font color="#E5E5E5"> means</font><font color="#CCCCCC"> that the mine</font><font color="#E5E5E5"> is not</font>

864
00:42:34,570 --> 00:42:41,080
<font color="#E5E5E5">tolerated</font><font color="#CCCCCC"> that is just</font><font color="#E5E5E5"> random words put</font>

865
00:42:38,170 --> 00:42:43,650
together and therefore are not<font color="#E5E5E5"> in</font>

866
00:42:41,080 --> 00:42:46,150
writing how the system deals with them

867
00:42:43,650 --> 00:42:47,980
sorry I did<font color="#CCCCCC"> not fully so what do you</font>

868
00:42:46,150 --> 00:42:49,780
mean what type<font color="#CCCCCC"> oh yeah</font>

869
00:42:47,980 --> 00:42:52,330
when<font color="#CCCCCC"> did I</font><font color="#E5E5E5"> mean is just random</font><font color="#CCCCCC"> words</font>

870
00:42:49,780 --> 00:42:54,420
<font color="#E5E5E5">like for English words</font><font color="#CCCCCC"> how does the</font>

871
00:42:52,330 --> 00:42:57,790
system deals with<font color="#E5E5E5"> these kind of mines</font>

872
00:42:54,420 --> 00:43:00,580
when they are not a<font color="#E5E5E5"> pattern when they</font>

873
00:42:57,790 --> 00:43:02,350
<font color="#E5E5E5">are not generated because</font><font color="#CCCCCC"> if I</font>

874
00:43:00,580 --> 00:43:05,859
understood correctly your system detects

875
00:43:02,350 --> 00:43:08,680
<font color="#CCCCCC">the generation algorithm the pattern of</font>

876
00:43:05,859 --> 00:43:11,580
the generation right yeah and if the

877
00:43:08,680 --> 00:43:14,200
domain is<font color="#CCCCCC"> just words like simple English</font>

878
00:43:11,580 --> 00:43:18,549
words how<font color="#E5E5E5"> does the system deals with</font>

879
00:43:14,200 --> 00:43:20,169
this<font color="#CCCCCC"> yes so that's</font><font color="#E5E5E5"> one so</font><font color="#CCCCCC"> this was one</font>

880
00:43:18,550 --> 00:43:23,560
of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> initial problems with</font>

881
00:43:20,170 --> 00:43:25,450
the system<font color="#CCCCCC"> of course that if you have a</font>

882
00:43:23,560 --> 00:43:27,700
beautician of regular words they are<font color="#E5E5E5"> not</font>

883
00:43:25,450 --> 00:43:29,589
very<font color="#CCCCCC"> well</font><font color="#E5E5E5"> it detected but at the end you</font>

884
00:43:27,700 --> 00:43:33,939
<font color="#E5E5E5">can also use for the machine learners</font>

885
00:43:29,590 --> 00:43:36,820
dictionaries<font color="#E5E5E5"> where</font><font color="#CCCCCC"> they know actually</font>

886
00:43:33,940 --> 00:43:38,380
the patterns from<font color="#CCCCCC"> the words</font><font color="#E5E5E5"> all you</font><font color="#CCCCCC"> can</font>

887
00:43:36,820 --> 00:43:42,910
combine<font color="#E5E5E5"> it with an ensemble approach</font>

888
00:43:38,380 --> 00:43:46,660
with with other learners like fast

889
00:43:42,910 --> 00:43:49,000
exiting<font color="#E5E5E5"> thing like this and you and you</font>

890
00:43:46,660 --> 00:43:50,830
use in one assemble approach a diploma

891
00:43:49,000 --> 00:43:52,450
<font color="#CCCCCC">too</font><font color="#E5E5E5"> though</font><font color="#CCCCCC"> together with a text</font>

892
00:43:50,830 --> 00:43:55,960
specialized<font color="#CCCCCC"> learn or something like this</font>

893
00:43:52,450 --> 00:43:58,290
<font color="#E5E5E5">so</font><font color="#CCCCCC"> what we do in that case</font><font color="#E5E5E5"> usually</font><font color="#CCCCCC"> okay</font>

894
00:43:55,960 --> 00:43:58,290
thank you

895
00:43:58,400 --> 00:44:06,280
[Music]

896
00:44:08,630 --> 00:44:21,450
well let<font color="#E5E5E5"> us think</font><font color="#CCCCCC"> if you like that's a</font>

897
00:44:14,279 --> 00:44:24,660
good question<font color="#E5E5E5"> also I guess the question</font>

898
00:44:21,450 --> 00:44:27,269
is there<font color="#CCCCCC"> are</font><font color="#E5E5E5"> some DJ's that have</font>

899
00:44:24,660 --> 00:44:29,430
different<font color="#E5E5E5"> it's the same DGA but uses</font>

900
00:44:27,269 --> 00:44:32,669
<font color="#E5E5E5">different seeds to initiate the DJ</font>

901
00:44:29,430 --> 00:44:35,700
algorithm and the question is if the

902
00:44:32,670 --> 00:44:40,229
<font color="#CCCCCC">system is able to detect</font><font color="#E5E5E5"> separate seeds</font>

903
00:44:35,700 --> 00:44:42,808
of the<font color="#E5E5E5"> 70g a</font><font color="#CCCCCC"> Yantra is the training</font><font color="#E5E5E5"> data</font>

904
00:44:40,229 --> 00:44:46,319
that<font color="#E5E5E5"> we use for the deep learners we</font>

905
00:44:42,809 --> 00:44:48,989
didn't know<font color="#CCCCCC"> actually which seeds have</font>

906
00:44:46,319 --> 00:44:51,299
<font color="#CCCCCC">been used by the attackers</font><font color="#E5E5E5"> surely so</font>

907
00:44:48,989 --> 00:44:52,950
what you get from from the database for

908
00:44:51,299 --> 00:44:56,038
example<font color="#E5E5E5"> from the throne</font><font color="#CCCCCC"> or in-situ</font>

909
00:44:52,950 --> 00:44:59,519
database<font color="#CCCCCC"> as dataset they reverse</font>

910
00:44:56,039 --> 00:45:01,319
engineer<font color="#E5E5E5"> 60 types of TGS actually they</font>

911
00:44:59,519 --> 00:45:03,899
used some kind<font color="#E5E5E5"> of random seat and this</font>

912
00:45:01,319 --> 00:45:07,440
<font color="#E5E5E5">is</font><font color="#CCCCCC"> definitely</font><font color="#E5E5E5"> not the seat which</font><font color="#CCCCCC"> is used</font>

913
00:45:03,900 --> 00:45:08,700
by<font color="#CCCCCC"> the attackers</font><font color="#E5E5E5"> we have seen anyway the</font>

914
00:45:07,440 --> 00:45:10,890
deep learners and that's one<font color="#CCCCCC"> of the</font>

915
00:45:08,700 --> 00:45:13,410
beautiful properties could

916
00:45:10,890 --> 00:45:18,180
reverse-engineer some other algorithm

917
00:45:13,410 --> 00:45:20,910
and somehow it detects also<font color="#CCCCCC"> DJ's without</font>

918
00:45:18,180 --> 00:45:23,519
with a completely different<font color="#E5E5E5"> seat so</font>

919
00:45:20,910 --> 00:45:26,160
that's that's a<font color="#E5E5E5"> little bit downside of a</font>

920
00:45:23,519 --> 00:45:29,249
deep<font color="#CCCCCC"> Loden it's not really known how</font>

921
00:45:26,160 --> 00:45:31,109
they work internally<font color="#E5E5E5"> what they did and</font>

922
00:45:29,249 --> 00:45:36,180
this results you have seen<font color="#CCCCCC"> and about you</font>

923
00:45:31,109 --> 00:45:38,299
know<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> 0.7% are done with</font>

924
00:45:36,180 --> 00:45:45,950
seats we haven't seen before

925
00:45:38,299 --> 00:45:50,420
thank you any more<font color="#CCCCCC"> questions</font>

926
00:45:45,950 --> 00:45:50,419
<font color="#E5E5E5">let us thank the speakers please</font>

