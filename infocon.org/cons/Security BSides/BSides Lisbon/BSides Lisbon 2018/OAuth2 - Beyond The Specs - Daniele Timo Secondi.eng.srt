1
00:00:04,960 --> 00:00:11,820
this<font color="#E5E5E5"> working</font><font color="#CCCCCC"> oh yeah</font><font color="#E5E5E5"> okay okay hello</font>

2
00:00:07,180 --> 00:00:16,960
<font color="#E5E5E5">everybody how you doing</font>

3
00:00:11,820 --> 00:00:17,800
hope you had a nice break<font color="#CCCCCC"> so I'm</font><font color="#E5E5E5"> very</font>

4
00:00:16,960 --> 00:00:19,330
<font color="#E5E5E5">happy to</font><font color="#CCCCCC"> be here</font>

5
00:00:17,800 --> 00:00:21,369
my name is<font color="#CCCCCC"> daniela working developer</font>

6
00:00:19,330 --> 00:00:23,680
relations<font color="#E5E5E5"> at piledrive and i'm here</font>

7
00:00:21,369 --> 00:00:26,140
<font color="#E5E5E5">today to talk</font><font color="#CCCCCC"> to you about off who here</font>

8
00:00:23,680 --> 00:00:30,009
<font color="#E5E5E5">is familiar with all in raise your hand</font>

9
00:00:26,140 --> 00:00:31,930
<font color="#CCCCCC">okay some so the idea is I will explain</font>

10
00:00:30,009 --> 00:00:33,700
a<font color="#E5E5E5"> little bit what it is how</font><font color="#CCCCCC"> it works and</font>

11
00:00:31,930 --> 00:00:34,870
<font color="#CCCCCC">then</font><font color="#E5E5E5"> I will share some things that we</font>

12
00:00:33,700 --> 00:00:36,850
learned<font color="#E5E5E5"> in</font><font color="#CCCCCC"> five</font><font color="#E5E5E5"> dryable</font>

13
00:00:34,870 --> 00:00:39,730
implementing go out and while<font color="#E5E5E5"> releasing</font>

14
00:00:36,850 --> 00:00:44,320
it for our market base<font color="#E5E5E5"> all right sounds</font>

15
00:00:39,730 --> 00:00:45,419
good<font color="#CCCCCC"> okay so</font><font color="#E5E5E5"> just to give</font><font color="#CCCCCC"> you a little</font>

16
00:00:44,320 --> 00:00:49,000
<font color="#E5E5E5">bit of context</font>

17
00:00:45,420 --> 00:00:51,129
this is<font color="#E5E5E5"> Estonia is where my</font><font color="#CCCCCC"> tribe was</font>

18
00:00:49,000 --> 00:00:53,859
founded it's a country known<font color="#CCCCCC"> for the</font>

19
00:00:51,129 --> 00:00:56,370
cold weather<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> cool software</font>

20
00:00:53,859 --> 00:01:01,600
<font color="#E5E5E5">companies and</font><font color="#CCCCCC"> pipedrive is one of those</font>

21
00:00:56,370 --> 00:01:04,089
yeah<font color="#CCCCCC"> thanks and was founded</font><font color="#E5E5E5"> in 2010 we</font>

22
00:01:01,600 --> 00:01:05,080
have over 80 million<font color="#E5E5E5"> in funding now we</font>

23
00:01:04,089 --> 00:01:09,579
are more than<font color="#CCCCCC"> four hundred</font><font color="#E5E5E5"> people</font>

24
00:01:05,080 --> 00:01:12,220
working<font color="#E5E5E5"> in</font><font color="#CCCCCC"> 5dr and this is some</font><font color="#E5E5E5"> of the</font>

25
00:01:09,579 --> 00:01:16,089
<font color="#E5E5E5">people from the Estonian offices so what</font>

26
00:01:12,220 --> 00:01:18,820
do<font color="#E5E5E5"> we do</font><font color="#CCCCCC"> my drive is not a</font><font color="#E5E5E5"> security</font>

27
00:01:16,090 --> 00:01:22,509
<font color="#E5E5E5">related product we're</font><font color="#CCCCCC"> actually a CRM for</font>

28
00:01:18,820 --> 00:01:24,490
<font color="#E5E5E5">sales</font><font color="#CCCCCC"> people that</font><font color="#E5E5E5"> we have some cool</font>

29
00:01:22,509 --> 00:01:27,009
<font color="#E5E5E5">features</font><font color="#CCCCCC"> you can see</font><font color="#E5E5E5"> some here we focus</font>

30
00:01:24,490 --> 00:01:29,439
a lot<font color="#CCCCCC"> on activities we try to make</font>

31
00:01:27,009 --> 00:01:31,390
<font color="#E5E5E5">everything very easy for sales people so</font>

32
00:01:29,439 --> 00:01:33,908
that they<font color="#CCCCCC"> can focus on the on the things</font>

33
00:01:31,390 --> 00:01:36,579
that that that that<font color="#E5E5E5"> they can control in</font>

34
00:01:33,909 --> 00:01:39,549
their sales pipeline<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so why am</font>

35
00:01:36,579 --> 00:01:41,679
I<font color="#E5E5E5"> here talking about</font><font color="#CCCCCC"> oh wow</font>

36
00:01:39,549 --> 00:01:44,680
one thing that<font color="#CCCCCC"> we know</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that it's</font>

37
00:01:41,680 --> 00:01:47,140
impossible to<font color="#E5E5E5"> create a CRM that covers a</font>

38
00:01:44,680 --> 00:01:49,359
hundred percent<font color="#E5E5E5"> of every possible need</font>

39
00:01:47,140 --> 00:01:51,430
that<font color="#CCCCCC"> salespeople have so that's</font><font color="#E5E5E5"> why we</font>

40
00:01:49,359 --> 00:01:53,380
<font color="#E5E5E5">created a marketplace which is</font><font color="#CCCCCC"> a space</font>

41
00:01:51,430 --> 00:01:55,570
where other companies<font color="#E5E5E5"> and other</font>

42
00:01:53,380 --> 00:01:58,240
developers<font color="#CCCCCC"> can create</font><font color="#E5E5E5"> apps</font><font color="#CCCCCC"> that work</font>

43
00:01:55,570 --> 00:02:00,250
with<font color="#E5E5E5"> pipedrive to cover those needs that</font>

44
00:01:58,240 --> 00:02:03,130
salespeople<font color="#CCCCCC"> have the we don't don't</font>

45
00:02:00,250 --> 00:02:05,439
cover natively<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and this is where I</font>

46
00:02:03,130 --> 00:02:07,509
come in the<font color="#CCCCCC"> picture again</font><font color="#E5E5E5"> my name is</font>

47
00:02:05,439 --> 00:02:10,030
<font color="#CCCCCC">Daniele</font><font color="#E5E5E5"> and what working in developer</font>

48
00:02:07,509 --> 00:02:11,950
relation means that I talk with<font color="#E5E5E5"> these</font>

49
00:02:10,030 --> 00:02:13,660
developers<font color="#E5E5E5"> I talk with these companies</font>

50
00:02:11,950 --> 00:02:15,970
<font color="#E5E5E5">and I try to make their lives easier so</font>

51
00:02:13,660 --> 00:02:17,750
if there are something<font color="#CCCCCC"> to to to improve</font>

52
00:02:15,970 --> 00:02:20,180
<font color="#E5E5E5">with our libraries</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> work on that</font>

53
00:02:17,750 --> 00:02:22,490
or to some support and one of the the

54
00:02:20,180 --> 00:02:25,280
main topics<font color="#E5E5E5"> that that comes up all the</font>

55
00:02:22,490 --> 00:02:27,470
<font color="#E5E5E5">time is because it can be tricky</font>

56
00:02:25,280 --> 00:02:29,360
sometimes<font color="#CCCCCC"> so the idea for</font><font color="#E5E5E5"> this</font>

57
00:02:27,470 --> 00:02:32,960
presentation is I will try<font color="#CCCCCC"> to explain it</font>

58
00:02:29,360 --> 00:02:35,660
in the easiest<font color="#CCCCCC"> way possible</font><font color="#E5E5E5"> so that I'll</font>

59
00:02:32,960 --> 00:02:38,660
say<font color="#E5E5E5"> some of</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> some time when you have</font>

60
00:02:35,660 --> 00:02:40,970
<font color="#E5E5E5">to deal with it in the future so let's</font>

61
00:02:38,660 --> 00:02:43,160
start with<font color="#E5E5E5"> the definition</font><font color="#CCCCCC"> well is an</font>

62
00:02:40,970 --> 00:02:46,460
open standard<font color="#E5E5E5"> for access delegation and</font>

63
00:02:43,160 --> 00:02:49,310
what does that<font color="#E5E5E5"> mean so if you're a user</font>

64
00:02:46,460 --> 00:02:51,080
of any platform<font color="#E5E5E5"> you have access to</font><font color="#CCCCCC"> some</font>

65
00:02:49,310 --> 00:02:53,660
private resources<font color="#E5E5E5"> through a password</font>

66
00:02:51,080 --> 00:02:55,459
<font color="#CCCCCC">okay now what happens if you want</font><font color="#E5E5E5"> to</font>

67
00:02:53,660 --> 00:02:57,950
share some<font color="#CCCCCC"> of these</font><font color="#E5E5E5"> resources with</font>

68
00:02:55,459 --> 00:03:00,890
someone else<font color="#CCCCCC"> with a third party platform</font>

69
00:02:57,950 --> 00:03:06,320
<font color="#E5E5E5">the way</font><font color="#CCCCCC"> it used to</font><font color="#E5E5E5"> work before off was</font>

70
00:03:00,890 --> 00:03:08,179
released back in 2007 or so<font color="#E5E5E5"> looked like</font>

71
00:03:06,320 --> 00:03:10,430
this so you would<font color="#CCCCCC"> share your password</font>

72
00:03:08,180 --> 00:03:12,560
<font color="#E5E5E5">now</font><font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> think I need</font><font color="#CCCCCC"> to explain at a</font>

73
00:03:10,430 --> 00:03:16,310
security<font color="#E5E5E5"> conference</font><font color="#CCCCCC"> why this is a bad</font>

74
00:03:12,560 --> 00:03:18,290
idea<font color="#CCCCCC"> but aside from</font><font color="#E5E5E5"> the obvious reason</font>

75
00:03:16,310 --> 00:03:19,490
that you<font color="#E5E5E5"> don't want to give all</font><font color="#CCCCCC"> that</font>

76
00:03:18,290 --> 00:03:25,489
access<font color="#E5E5E5"> to someone else</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> something</font>

77
00:03:19,490 --> 00:03:28,400
<font color="#E5E5E5">else</font><font color="#CCCCCC"> more practical</font><font color="#E5E5E5"> maybe in a way</font><font color="#CCCCCC"> Kenny</font>

78
00:03:25,489 --> 00:03:39,110
<font color="#E5E5E5">anybody has some ideas you can just</font>

79
00:03:28,400 --> 00:03:41,600
shout it out<font color="#CCCCCC"> no one so there's another</font>

80
00:03:39,110 --> 00:03:44,239
thing<font color="#E5E5E5"> if if I share my password with</font><font color="#CCCCCC"> ten</font>

81
00:03:41,600 --> 00:03:47,030
people<font color="#E5E5E5"> it's very it's impossible</font><font color="#CCCCCC"> for me</font>

82
00:03:44,239 --> 00:03:48,830
to revoke access to only<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of these</font>

83
00:03:47,030 --> 00:03:50,989
because<font color="#E5E5E5"> if I change the</font><font color="#CCCCCC"> password</font><font color="#E5E5E5"> I</font>

84
00:03:48,830 --> 00:03:52,250
revoke access to everybody and if I

85
00:03:50,989 --> 00:03:54,380
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> change the password everybody</font>

86
00:03:52,250 --> 00:03:57,950
still<font color="#CCCCCC"> has access okay so it's not</font><font color="#E5E5E5"> the</font>

87
00:03:54,380 --> 00:04:00,130
the<font color="#CCCCCC"> best best approach a better way</font><font color="#E5E5E5"> to</font>

88
00:03:57,950 --> 00:04:02,929
handle<font color="#CCCCCC"> the to handle this is by</font>

89
00:04:00,130 --> 00:04:05,810
delegating<font color="#E5E5E5"> the granting of permission to</font>

90
00:04:02,930 --> 00:04:08,269
to something else which is the<font color="#CCCCCC"> off</font>

91
00:04:05,810 --> 00:04:11,269
server which acts like a bouncer<font color="#E5E5E5"> and</font>

92
00:04:08,269 --> 00:04:13,370
sits in<font color="#E5E5E5"> the middle between the the</font>

93
00:04:11,269 --> 00:04:16,370
<font color="#E5E5E5">private resources and the third party</font>

94
00:04:13,370 --> 00:04:18,978
platform<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so based on rules that the</font>

95
00:04:16,370 --> 00:04:21,918
user decides it can<font color="#E5E5E5"> grant permission to</font>

96
00:04:18,978 --> 00:04:24,800
some of these platforms<font color="#CCCCCC"> and deny</font>

97
00:04:21,918 --> 00:04:27,469
permission to some others<font color="#E5E5E5"> so in our in</font>

98
00:04:24,800 --> 00:04:29,960
our example in in our case when a user

99
00:04:27,470 --> 00:04:31,210
<font color="#E5E5E5">installs one of these applications there</font>

100
00:04:29,960 --> 00:04:33,770
are

101
00:04:31,210 --> 00:04:35,180
<font color="#E5E5E5">there are prompted with a page</font><font color="#CCCCCC"> that says</font>

102
00:04:33,770 --> 00:04:37,520
hey this application needs to<font color="#E5E5E5"> have</font>

103
00:04:35,180 --> 00:04:39,919
<font color="#E5E5E5">access to your contacts your deals your</font>

104
00:04:37,520 --> 00:04:41,359
activities<font color="#CCCCCC"> or your credit</font><font color="#E5E5E5"> that if you</font>

105
00:04:39,919 --> 00:04:43,698
are<font color="#CCCCCC"> installing</font><font color="#E5E5E5"> the application</font><font color="#CCCCCC"> has</font>

106
00:04:41,360 --> 00:04:47,720
<font color="#E5E5E5">anybody ever done a log in with Google</font>

107
00:04:43,699 --> 00:04:50,409
<font color="#CCCCCC">or Facebook</font><font color="#E5E5E5"> okay I thought so it's</font>

108
00:04:47,720 --> 00:04:53,770
basically the<font color="#E5E5E5"> same thing</font><font color="#CCCCCC"> and oh that's</font>

109
00:04:50,409 --> 00:04:56,659
<font color="#E5E5E5">that's built on off there's a piece of</font>

110
00:04:53,770 --> 00:04:59,180
protocol<font color="#E5E5E5"> on top of it it's a different</font>

111
00:04:56,659 --> 00:05:00,710
protocol it's called Open ID Connect<font color="#CCCCCC"> but</font>

112
00:04:59,180 --> 00:05:01,759
it's basically<font color="#E5E5E5"> the same thing the</font>

113
00:05:00,710 --> 00:05:04,969
concept<font color="#E5E5E5"> is the same</font>

114
00:05:01,759 --> 00:05:07,009
and so the application is installed<font color="#E5E5E5"> so</font>

115
00:05:04,970 --> 00:05:09,139
the<font color="#E5E5E5"> private resource is the</font><font color="#CCCCCC"> pipedrive</font>

116
00:05:07,009 --> 00:05:11,780
account the<font color="#CCCCCC"> the guest in</font><font color="#E5E5E5"> this example is</font>

117
00:05:09,139 --> 00:05:14,000
the client application<font color="#E5E5E5"> for example asana</font>

118
00:05:11,780 --> 00:05:17,750
<font color="#E5E5E5">and the bouncer</font><font color="#CCCCCC"> is the the</font>

119
00:05:14,000 --> 00:05:19,940
authentication server so<font color="#E5E5E5"> we didn't</font>

120
00:05:17,750 --> 00:05:22,750
always<font color="#E5E5E5"> have all if I Drive</font><font color="#CCCCCC"> like many</font>

121
00:05:19,940 --> 00:05:27,469
other<font color="#E5E5E5"> companies and platforms that</font>

122
00:05:22,750 --> 00:05:29,479
provide an API<font color="#E5E5E5"> we started you we started</font>

123
00:05:27,469 --> 00:05:33,740
with API tokens<font color="#CCCCCC"> do you know what an API</font>

124
00:05:29,479 --> 00:05:35,539
token is what an API key is<font color="#E5E5E5"> okay good so</font>

125
00:05:33,740 --> 00:05:37,310
it's<font color="#E5E5E5"> basically like a password</font><font color="#CCCCCC"> it's just</font>

126
00:05:35,539 --> 00:05:39,889
a string that you can include<font color="#E5E5E5"> with all</font>

127
00:05:37,310 --> 00:05:42,380
your API calls<font color="#E5E5E5"> it's just an extra</font>

128
00:05:39,889 --> 00:05:44,840
parameter<font color="#E5E5E5"> and it's all you need to start</font>

129
00:05:42,380 --> 00:05:48,909
<font color="#CCCCCC">using an API it's very fast and easy way</font>

130
00:05:44,840 --> 00:05:50,479
<font color="#CCCCCC">to start using the API and it's</font>

131
00:05:48,909 --> 00:05:52,159
<font color="#E5E5E5">especially if you're trying</font><font color="#CCCCCC"> to build</font>

132
00:05:50,479 --> 00:05:55,669
<font color="#E5E5E5">something internally like for your own</font>

133
00:05:52,159 --> 00:05:58,969
company<font color="#E5E5E5"> it's it's not the best</font><font color="#CCCCCC"> solution</font>

134
00:05:55,669 --> 00:06:00,139
if you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> share the</font><font color="#CCCCCC"> application</font>

135
00:05:58,969 --> 00:06:03,650
<font color="#E5E5E5">that you</font><font color="#CCCCCC"> are creating with the whole</font>

136
00:06:00,139 --> 00:06:05,360
world because<font color="#E5E5E5"> for a</font><font color="#CCCCCC"> few reasons</font><font color="#E5E5E5"> first of</font>

137
00:06:03,650 --> 00:06:08,000
<font color="#E5E5E5">all it's complicated</font><font color="#CCCCCC"> for the final user</font>

138
00:06:05,360 --> 00:06:10,729
because<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you develop an</font><font color="#CCCCCC"> application</font>

139
00:06:08,000 --> 00:06:13,759
then<font color="#CCCCCC"> users API</font><font color="#E5E5E5"> token and I want to use</font>

140
00:06:10,729 --> 00:06:16,039
it I need to go to my<font color="#CCCCCC"> pod</font><font color="#E5E5E5"> apply Drive</font>

141
00:06:13,759 --> 00:06:18,889
account copy the API token<font color="#CCCCCC"> come to your</font>

142
00:06:16,039 --> 00:06:20,690
platform<font color="#CCCCCC"> and paste it so it's kind of</font>

143
00:06:18,889 --> 00:06:22,909
not<font color="#CCCCCC"> the best user experience</font><font color="#E5E5E5"> and again</font>

144
00:06:20,690 --> 00:06:24,590
it has<font color="#CCCCCC"> the</font><font color="#E5E5E5"> same problems that sharing a</font>

145
00:06:22,909 --> 00:06:27,199
password has you're giving access<font color="#E5E5E5"> to</font>

146
00:06:24,590 --> 00:06:29,929
<font color="#CCCCCC">everything</font><font color="#E5E5E5"> and again it you cannot</font>

147
00:06:27,199 --> 00:06:32,960
revoke access to only<font color="#CCCCCC"> one of these these</font>

148
00:06:29,930 --> 00:06:34,789
platforms<font color="#CCCCCC"> all right with</font><font color="#E5E5E5"> all on the</font>

149
00:06:32,960 --> 00:06:37,159
other hand is<font color="#E5E5E5"> very easy</font><font color="#CCCCCC"> for the final</font>

150
00:06:34,789 --> 00:06:39,199
<font color="#E5E5E5">user to start using your application</font>

151
00:06:37,159 --> 00:06:41,899
<font color="#E5E5E5">because the installation is very easy</font>

152
00:06:39,199 --> 00:06:44,360
it's<font color="#CCCCCC"> just one</font><font color="#E5E5E5"> click and you can defy</font>

153
00:06:41,899 --> 00:06:45,889
fine you can define scopes

154
00:06:44,360 --> 00:06:48,530
which means you can define certain

155
00:06:45,889 --> 00:06:50,599
subsets<font color="#E5E5E5"> of resources that your</font>

156
00:06:48,530 --> 00:06:57,318
application<font color="#E5E5E5"> needs to have access to to</font>

157
00:06:50,599 --> 00:06:58,878
work okay<font color="#CCCCCC"> so yeah and and</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> so the</font>

158
00:06:57,319 --> 00:07:00,830
user when<font color="#CCCCCC"> they install the application</font>

159
00:06:58,879 --> 00:07:02,030
can see what kind of data<font color="#CCCCCC"> you need to</font>

160
00:07:00,830 --> 00:07:02,930
<font color="#E5E5E5">have access to</font><font color="#CCCCCC"> they're much more</font>

161
00:07:02,030 --> 00:07:05,109
<font color="#CCCCCC">comfortable with it</font>

162
00:07:02,930 --> 00:07:07,550
<font color="#E5E5E5">and it's much</font><font color="#CCCCCC"> more likely that they will</font>

163
00:07:05,110 --> 00:07:12,229
give your<font color="#E5E5E5"> application</font><font color="#CCCCCC"> a shot all right</font>

164
00:07:07,550 --> 00:07:14,509
<font color="#E5E5E5">so let's see how the product works</font>

165
00:07:12,229 --> 00:07:17,539
<font color="#E5E5E5">we'll focus mainly on on the</font>

166
00:07:14,509 --> 00:07:21,530
authorization<font color="#CCCCCC"> code</font><font color="#E5E5E5"> flow</font><font color="#CCCCCC"> there are four</font>

167
00:07:17,539 --> 00:07:24,530
<font color="#CCCCCC">different variants of all this is one</font>

168
00:07:21,530 --> 00:07:26,440
this<font color="#CCCCCC"> is the the variation that is used</font>

169
00:07:24,530 --> 00:07:28,849
every time that you're dealing<font color="#CCCCCC"> with</font>

170
00:07:26,440 --> 00:07:31,879
<font color="#E5E5E5">marketplaces and applications whether</font>

171
00:07:28,849 --> 00:07:35,810
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> pipedrive github Spotify or</font>

172
00:07:31,879 --> 00:07:38,479
whatever so there<font color="#E5E5E5"> are a few actors</font>

173
00:07:35,810 --> 00:07:41,870
involved<font color="#CCCCCC"> there</font><font color="#E5E5E5"> is the final user there</font>

174
00:07:38,479 --> 00:07:42,440
is a<font color="#E5E5E5"> client which doesn't mean</font><font color="#CCCCCC"> front-end</font>

175
00:07:41,870 --> 00:07:44,120
<font color="#E5E5E5">or browser</font>

176
00:07:42,440 --> 00:07:47,780
it means the client<font color="#E5E5E5"> application is still</font>

177
00:07:44,120 --> 00:07:49,819
a server for example<font color="#E5E5E5"> asana</font><font color="#CCCCCC"> there is an</font>

178
00:07:47,780 --> 00:07:52,340
authentication server and the there is a

179
00:07:49,819 --> 00:07:54,860
<font color="#E5E5E5">resource server now these two they</font><font color="#CCCCCC"> could</font>

180
00:07:52,340 --> 00:07:58,190
be two different service servers<font color="#E5E5E5"> could</font>

181
00:07:54,860 --> 00:08:00,289
<font color="#CCCCCC">be one server could</font><font color="#E5E5E5"> be a complex</font>

182
00:07:58,190 --> 00:08:03,409
architecture the first simplicity<font color="#CCCCCC"> I'll</font>

183
00:08:00,289 --> 00:08:07,099
<font color="#E5E5E5">just call this pipe drive</font><font color="#CCCCCC"> alright so the</font>

184
00:08:03,409 --> 00:08:10,039
goal of the whole<font color="#E5E5E5"> of flow is for the</font>

185
00:08:07,099 --> 00:08:12,400
client<font color="#CCCCCC"> to have access</font><font color="#E5E5E5"> to the</font><font color="#CCCCCC"> user's</font>

186
00:08:10,039 --> 00:08:16,128
resources and how does does it do<font color="#CCCCCC"> that</font>

187
00:08:12,400 --> 00:08:19,128
<font color="#E5E5E5">using</font><font color="#CCCCCC"> what's called an access token the</font>

188
00:08:16,129 --> 00:08:20,870
first access token is exchanged<font color="#E5E5E5"> for what</font>

189
00:08:19,129 --> 00:08:22,789
is called<font color="#E5E5E5"> an authentication code and</font>

190
00:08:20,870 --> 00:08:24,949
we'll see that<font color="#CCCCCC"> I would see how it works</font>

191
00:08:22,789 --> 00:08:27,680
and then every once in a<font color="#CCCCCC"> while the</font>

192
00:08:24,949 --> 00:08:33,680
access token expires so the client needs

193
00:08:27,680 --> 00:08:35,149
<font color="#CCCCCC">to what's gonna refresh it refresh</font><font color="#E5E5E5"> the</font>

194
00:08:33,679 --> 00:08:36,799
term refresh is a little bit<font color="#E5E5E5"> ambiguous</font>

195
00:08:35,149 --> 00:08:38,870
<font color="#CCCCCC">there's nothing that's being refreshed</font>

196
00:08:36,799 --> 00:08:39,289
<font color="#E5E5E5">really you just ask for</font><font color="#CCCCCC"> a new access</font>

197
00:08:38,870 --> 00:08:42,769
token

198
00:08:39,289 --> 00:08:44,959
but that's what it's called<font color="#E5E5E5"> so first</font>

199
00:08:42,769 --> 00:08:48,140
<font color="#E5E5E5">step the page that we've seen before</font><font color="#CCCCCC"> the</font>

200
00:08:44,959 --> 00:08:51,109
client<font color="#CCCCCC"> ask the</font><font color="#E5E5E5"> user through</font><font color="#CCCCCC"> the server</font>

201
00:08:48,140 --> 00:08:53,870
<font color="#E5E5E5">can I have access</font><font color="#CCCCCC"> to your your data if</font>

202
00:08:51,110 --> 00:08:56,180
the user approves<font color="#E5E5E5"> the server redirects</font>

203
00:08:53,870 --> 00:08:58,130
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the client with this authentication</font>

204
00:08:56,180 --> 00:09:00,199
code the client

205
00:08:58,130 --> 00:09:02,600
it receives the authentication code and

206
00:09:00,200 --> 00:09:06,170
can exchange it for<font color="#E5E5E5"> the first pair</font><font color="#CCCCCC"> of</font>

207
00:09:02,600 --> 00:09:07,850
access token and refresh token<font color="#E5E5E5"> and so it</font>

208
00:09:06,170 --> 00:09:11,089
can now use this access<font color="#E5E5E5"> token to make</font>

209
00:09:07,850 --> 00:09:15,290
API calls<font color="#CCCCCC"> for example to get a list of</font>

210
00:09:11,090 --> 00:09:16,970
contacts<font color="#E5E5E5"> or anything else and then after</font>

211
00:09:15,290 --> 00:09:19,459
a while<font color="#E5E5E5"> the access token expires and the</font>

212
00:09:16,970 --> 00:09:23,330
<font color="#CCCCCC">client</font><font color="#E5E5E5"> needs to request a new one</font><font color="#CCCCCC"> using</font>

213
00:09:19,460 --> 00:09:29,480
the<font color="#CCCCCC"> Refresh token</font><font color="#E5E5E5"> okay are you with me</font>

214
00:09:23,330 --> 00:09:34,100
so<font color="#CCCCCC"> far</font><font color="#E5E5E5"> cool</font><font color="#CCCCCC"> so let's see how what what</font>

215
00:09:29,480 --> 00:09:36,980
calls are actually made a little step

216
00:09:34,100 --> 00:09:39,140
<font color="#E5E5E5">back every time you</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> dealing with an</font>

217
00:09:36,980 --> 00:09:42,020
authentication flow<font color="#E5E5E5"> you need to first</font>

218
00:09:39,140 --> 00:09:44,540
register your app which means you need

219
00:09:42,020 --> 00:09:46,250
<font color="#E5E5E5">to create it on on the</font><font color="#CCCCCC"> the platform that</font>

220
00:09:44,540 --> 00:09:51,050
you're<font color="#CCCCCC"> using</font><font color="#E5E5E5"> in this case</font><font color="#CCCCCC"> PI Drive and</font>

221
00:09:46,250 --> 00:09:55,040
you type in some some data<font color="#E5E5E5"> but the most</font>

222
00:09:51,050 --> 00:09:57,770
important thing is the<font color="#CCCCCC"> callback URL</font><font color="#E5E5E5"> so</font>

223
00:09:55,040 --> 00:10:00,709
this is<font color="#E5E5E5"> you're telling</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> server where</font>

224
00:09:57,770 --> 00:10:02,960
<font color="#CCCCCC">the user should be redirected</font><font color="#E5E5E5"> after they</font>

225
00:10:00,710 --> 00:10:06,230
approve the installation<font color="#E5E5E5"> okay</font>

226
00:10:02,960 --> 00:10:07,520
and also the list<font color="#E5E5E5"> of data that you need</font>

227
00:10:06,230 --> 00:10:11,030
to have<font color="#CCCCCC"> access to and what kind of</font>

228
00:10:07,520 --> 00:10:16,340
access is it<font color="#E5E5E5"> read-only is it</font><font color="#CCCCCC"> write read</font>

229
00:10:11,030 --> 00:10:18,890
and<font color="#E5E5E5"> write after</font><font color="#CCCCCC"> you create the the</font>

230
00:10:16,340 --> 00:10:22,430
<font color="#E5E5E5">application</font><font color="#CCCCCC"> after you register it you</font>

231
00:10:18,890 --> 00:10:24,260
get you are given a client ID<font color="#E5E5E5"> and a</font>

232
00:10:22,430 --> 00:10:29,900
client<font color="#E5E5E5"> secret</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this is how the server</font>

233
00:10:24,260 --> 00:10:31,340
can identify the application so the user

234
00:10:29,900 --> 00:10:34,189
installs<font color="#E5E5E5"> again</font>

235
00:10:31,340 --> 00:10:37,190
<font color="#E5E5E5">it's prompted with this with this with</font>

236
00:10:34,190 --> 00:10:40,700
this page but if you take a look at the

237
00:10:37,190 --> 00:10:43,700
the<font color="#E5E5E5"> URL bar right there you can see that</font>

238
00:10:40,700 --> 00:10:46,580
<font color="#CCCCCC">you have the client ID that we just</font>

239
00:10:43,700 --> 00:10:48,410
talked about<font color="#E5E5E5"> and the redirect URI so</font>

240
00:10:46,580 --> 00:10:51,110
where should I be redirected<font color="#E5E5E5"> after</font>

241
00:10:48,410 --> 00:10:54,650
installing this application and install

242
00:10:51,110 --> 00:10:58,130
and voila<font color="#CCCCCC"> I'm redirected to this very</font>

243
00:10:54,650 --> 00:10:59,120
ugly client<font color="#E5E5E5"> right</font><font color="#CCCCCC"> now but it's</font><font color="#E5E5E5"> just to</font>

244
00:10:58,130 --> 00:11:02,300
show<font color="#CCCCCC"> you what's going</font><font color="#E5E5E5"> on</font>

245
00:10:59,120 --> 00:11:07,550
<font color="#E5E5E5">I'm redirected to the client see this is</font>

246
00:11:02,300 --> 00:11:11,060
the redirect URL<font color="#E5E5E5"> plus I have this code</font>

247
00:11:07,550 --> 00:11:12,060
right<font color="#CCCCCC"> now it's the authentication code</font>

248
00:11:11,060 --> 00:11:14,729
<font color="#E5E5E5">the first</font>

249
00:11:12,060 --> 00:11:17,280
of the<font color="#E5E5E5"> from so everything so far is</font>

250
00:11:14,730 --> 00:11:19,200
visible<font color="#E5E5E5"> is on the browser</font><font color="#CCCCCC"> it's on the</font>

251
00:11:17,280 --> 00:11:21,540
<font color="#E5E5E5">front end</font><font color="#CCCCCC"> so you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> everything</font>

252
00:11:19,200 --> 00:11:23,010
that's<font color="#CCCCCC"> going on</font><font color="#E5E5E5"> from this point</font><font color="#CCCCCC"> on what</font>

253
00:11:21,540 --> 00:11:24,920
the calls<font color="#CCCCCC"> that are made are</font>

254
00:11:23,010 --> 00:11:30,600
<font color="#CCCCCC">server-to-server so are there hidden</font>

255
00:11:24,920 --> 00:11:35,069
from the from the user postman<font color="#E5E5E5"> anybody</font>

256
00:11:30,600 --> 00:11:37,080
uses postman<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> it's just</font><font color="#CCCCCC"> a tool with</font>

257
00:11:35,070 --> 00:11:40,410
a very cool visual interface that you

258
00:11:37,080 --> 00:11:42,630
can<font color="#E5E5E5"> use to make calls HTTP requests and</font>

259
00:11:40,410 --> 00:11:46,010
so on<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> do more</font><font color="#E5E5E5"> with it but this</font>

260
00:11:42,630 --> 00:11:48,270
is what I use it for<font color="#E5E5E5"> so the first call</font>

261
00:11:46,010 --> 00:11:49,980
after<font color="#E5E5E5"> getting the access token</font><font color="#CCCCCC"> the</font>

262
00:11:48,270 --> 00:11:52,319
authentication code you<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to request</font>

263
00:11:49,980 --> 00:11:55,470
the first<font color="#E5E5E5"> access token</font><font color="#CCCCCC"> okay and this</font><font color="#E5E5E5"> is</font>

264
00:11:52,320 --> 00:11:57,630
<font color="#CCCCCC">how the call</font><font color="#E5E5E5"> is prepared he needs to be</font>

265
00:11:55,470 --> 00:12:01,260
authenticated<font color="#CCCCCC"> with basic</font><font color="#E5E5E5"> owl so you need</font>

266
00:11:57,630 --> 00:12:04,020
to have<font color="#E5E5E5"> user name and password which</font>

267
00:12:01,260 --> 00:12:07,500
will<font color="#E5E5E5"> be encoded in base64 in the in the</font>

268
00:12:04,020 --> 00:12:08,750
actual final request and in the body of

269
00:12:07,500 --> 00:12:12,960
<font color="#E5E5E5">the request</font>

270
00:12:08,750 --> 00:12:15,600
you have<font color="#CCCCCC"> grant type authorization code</font>

271
00:12:12,960 --> 00:12:17,040
in this<font color="#E5E5E5"> case code the authentication</font>

272
00:12:15,600 --> 00:12:19,910
code that<font color="#CCCCCC"> has been generated by</font><font color="#E5E5E5"> the</font>

273
00:12:17,040 --> 00:12:24,209
<font color="#E5E5E5">server and the redirect URI just for</font>

274
00:12:19,910 --> 00:12:25,949
just<font color="#CCCCCC"> a double check the names of</font><font color="#E5E5E5"> these</font>

275
00:12:24,210 --> 00:12:28,470
parameters<font color="#CCCCCC"> can change from</font><font color="#E5E5E5"> platform to</font>

276
00:12:25,950 --> 00:12:30,750
platform<font color="#E5E5E5"> but the concept is is always</font>

277
00:12:28,470 --> 00:12:33,960
<font color="#E5E5E5">the same you send the authorization code</font>

278
00:12:30,750 --> 00:12:35,880
<font color="#CCCCCC">and you get the first access token so</font>

279
00:12:33,960 --> 00:12:39,090
you send a<font color="#CCCCCC"> request</font><font color="#E5E5E5"> and this is the</font>

280
00:12:35,880 --> 00:12:41,550
response<font color="#CCCCCC"> again the the parameters name</font>

281
00:12:39,090 --> 00:12:44,040
could names could change but you still

282
00:12:41,550 --> 00:12:46,949
get an access<font color="#CCCCCC"> token</font><font color="#E5E5E5"> and usually a</font>

283
00:12:44,040 --> 00:12:49,260
refresh token<font color="#CCCCCC"> we'll talk about it so</font>

284
00:12:46,950 --> 00:12:51,270
this is what you get you<font color="#CCCCCC"> you receive an</font>

285
00:12:49,260 --> 00:12:54,380
<font color="#CCCCCC">access token a token type</font><font color="#E5E5E5"> that is</font>

286
00:12:51,270 --> 00:12:57,569
usually<font color="#E5E5E5"> bearer in how many milliseconds</font>

287
00:12:54,380 --> 00:12:59,550
<font color="#CCCCCC">the access token will expire and the</font>

288
00:12:57,570 --> 00:13:01,890
Refresh token<font color="#E5E5E5"> so you will you will need</font>

289
00:12:59,550 --> 00:13:03,329
to<font color="#E5E5E5"> use this</font><font color="#CCCCCC"> one when you want to request</font>

290
00:13:01,890 --> 00:13:05,730
a new access token<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you also get</font><font color="#CCCCCC"> a</font>

291
00:13:03,330 --> 00:13:10,500
<font color="#E5E5E5">list of resources again that you can</font>

292
00:13:05,730 --> 00:13:12,420
have access<font color="#E5E5E5"> to so you receive the access</font>

293
00:13:10,500 --> 00:13:14,610
<font color="#CCCCCC">token</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you can use it to make API</font>

294
00:13:12,420 --> 00:13:18,870
calls<font color="#E5E5E5"> and how do you do that you</font><font color="#CCCCCC"> just</font>

295
00:13:14,610 --> 00:13:22,380
included in the header with<font color="#E5E5E5"> bearer space</font>

296
00:13:18,870 --> 00:13:25,420
and the token in this<font color="#E5E5E5"> case postman does</font>

297
00:13:22,380 --> 00:13:28,030
that for you here<font color="#E5E5E5"> I'm just making a</font>

298
00:13:25,420 --> 00:13:32,709
<font color="#E5E5E5">we'll get requests to get the deals of</font>

299
00:13:28,030 --> 00:13:35,920
my account<font color="#CCCCCC"> and voila okay it's very very</font>

300
00:13:32,710 --> 00:13:40,210
simple<font color="#CCCCCC"> to use</font><font color="#E5E5E5"> it then it expires you</font>

301
00:13:35,920 --> 00:13:41,920
<font color="#CCCCCC">need to refresh it and the the request</font>

302
00:13:40,210 --> 00:13:44,290
<font color="#E5E5E5">is very similar to the first</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> that</font>

303
00:13:41,920 --> 00:13:46,240
we've seen<font color="#CCCCCC"> it</font><font color="#E5E5E5"> just what changes is now</font>

304
00:13:44,290 --> 00:13:48,849
you have<font color="#CCCCCC"> grant type is</font><font color="#E5E5E5"> refresh token and</font>

305
00:13:46,240 --> 00:13:53,740
refresh token is a refreshed order and

306
00:13:48,850 --> 00:13:56,500
you get a new<font color="#CCCCCC"> access token</font><font color="#E5E5E5"> now if</font>

307
00:13:53,740 --> 00:13:59,170
someone has very<font color="#E5E5E5"> good eyes maybe you</font>

308
00:13:56,500 --> 00:14:03,130
notice that in this case<font color="#E5E5E5"> the Refresh</font>

309
00:13:59,170 --> 00:14:08,040
token<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you are</font><font color="#E5E5E5"> sending it's actually</font>

310
00:14:03,130 --> 00:14:11,560
the same to the one you are<font color="#E5E5E5"> receiving so</font>

311
00:14:08,040 --> 00:14:13,750
why is that<font color="#E5E5E5"> does anybody have any idea</font>

312
00:14:11,560 --> 00:14:15,750
if<font color="#CCCCCC"> you guess</font><font color="#E5E5E5"> it correctly I</font><font color="#CCCCCC"> I'll buy you</font>

313
00:14:13,750 --> 00:14:21,940
a<font color="#E5E5E5"> beer or</font><font color="#CCCCCC"> something</font>

314
00:14:15,750 --> 00:14:24,580
it's tricky so the truth is<font color="#CCCCCC"> that when</font>

315
00:14:21,940 --> 00:14:29,410
you when you read the specifications of

316
00:14:24,580 --> 00:14:33,100
<font color="#CCCCCC">wow</font><font color="#E5E5E5"> this is what it says it's it's it's</font>

317
00:14:29,410 --> 00:14:34,329
optional to to reissue<font color="#E5E5E5"> the Refresh token</font>

318
00:14:33,100 --> 00:14:36,910
<font color="#E5E5E5">so it's up</font><font color="#CCCCCC"> to you when you are</font>

319
00:14:34,330 --> 00:14:39,040
implementing<font color="#E5E5E5"> the alt server to decide if</font>

320
00:14:36,910 --> 00:14:42,370
you want to<font color="#E5E5E5"> if you want your user to use</font>

321
00:14:39,040 --> 00:14:45,040
always<font color="#CCCCCC"> the</font><font color="#E5E5E5"> same refresh token forever or</font>

322
00:14:42,370 --> 00:14:46,930
every time the user<font color="#E5E5E5"> fresh token you</font>

323
00:14:45,040 --> 00:14:49,959
<font color="#E5E5E5">Rishon</font><font color="#CCCCCC"> you want so it</font><font color="#E5E5E5"> will basically</font>

324
00:14:46,930 --> 00:14:52,479
basically<font color="#CCCCCC"> be a one use only refresh</font>

325
00:14:49,960 --> 00:14:58,120
token and in part drive

326
00:14:52,480 --> 00:15:01,510
we started reissuing<font color="#E5E5E5"> refresh token</font><font color="#CCCCCC"> in</font>

327
00:14:58,120 --> 00:15:03,610
the<font color="#E5E5E5"> beginning and so all refresh tokens</font>

328
00:15:01,510 --> 00:15:06,340
were just one use only and we started

329
00:15:03,610 --> 00:15:09,520
having<font color="#E5E5E5"> some issues with developers using</font>

330
00:15:06,340 --> 00:15:10,270
<font color="#E5E5E5">our our flow because they were not used</font>

331
00:15:09,520 --> 00:15:13,300
<font color="#CCCCCC">to this thing</font>

332
00:15:10,270 --> 00:15:15,790
they were<font color="#CCCCCC"> contact contacting us saying</font>

333
00:15:13,300 --> 00:15:17,589
<font color="#E5E5E5">we're having</font><font color="#CCCCCC"> issues with</font><font color="#E5E5E5"> your health</font>

334
00:15:15,790 --> 00:15:19,630
it's not working refresh tokens are not

335
00:15:17,590 --> 00:15:21,970
working<font color="#E5E5E5"> what's going on so we started</font>

336
00:15:19,630 --> 00:15:27,700
<font color="#CCCCCC">looking around we asked ourselves what</font>

337
00:15:21,970 --> 00:15:29,410
do other platforms do so this is this<font color="#E5E5E5"> is</font>

338
00:15:27,700 --> 00:15:31,150
how<font color="#CCCCCC"> what drive used to work so first</font>

339
00:15:29,410 --> 00:15:33,969
time you get a refresh token<font color="#CCCCCC"> second time</font>

340
00:15:31,150 --> 00:15:36,970
<font color="#E5E5E5">you get a different</font><font color="#CCCCCC"> one then</font><font color="#E5E5E5"> you go and</font>

341
00:15:33,970 --> 00:15:38,769
<font color="#E5E5E5">look for example to Spotify</font><font color="#CCCCCC"> this is the</font>

342
00:15:36,970 --> 00:15:41,050
response to the first<font color="#E5E5E5"> request you get</font>

343
00:15:38,769 --> 00:15:43,899
access token<font color="#E5E5E5"> and a refresh token</font><font color="#CCCCCC"> but</font>

344
00:15:41,050 --> 00:15:46,389
then when you use<font color="#CCCCCC"> a</font><font color="#E5E5E5"> refresh token this</font>

345
00:15:43,899 --> 00:15:49,269
is what you get<font color="#CCCCCC"> you only get an access</font>

346
00:15:46,389 --> 00:15:51,610
<font color="#E5E5E5">token</font><font color="#CCCCCC"> so what does that mean it means</font>

347
00:15:49,269 --> 00:15:53,679
<font color="#E5E5E5">that the same Refresh token can</font><font color="#CCCCCC"> be used</font>

348
00:15:51,610 --> 00:15:57,239
more<font color="#E5E5E5"> than once</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can always use the</font>

349
00:15:53,679 --> 00:15:59,738
same<font color="#CCCCCC"> Refresh token then you look someone</font>

350
00:15:57,239 --> 00:16:01,449
else right github<font color="#E5E5E5"> and this is the</font>

351
00:15:59,739 --> 00:16:03,279
response<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> first request</font><font color="#CCCCCC"> you only</font>

352
00:16:01,449 --> 00:16:05,498
get<font color="#E5E5E5"> the access token you don't get</font>

353
00:16:03,279 --> 00:16:07,509
<font color="#CCCCCC">Refresh token at all so that</font><font color="#E5E5E5"> single</font>

354
00:16:05,499 --> 00:16:11,850
access token<font color="#E5E5E5"> lasts forever</font>

355
00:16:07,509 --> 00:16:14,499
yeah and so as I<font color="#E5E5E5"> said we started</font>

356
00:16:11,850 --> 00:16:16,989
<font color="#CCCCCC">racially refresh tokens but we thought</font>

357
00:16:14,499 --> 00:16:18,730
<font color="#E5E5E5">it probably should</font><font color="#CCCCCC"> be more secure</font><font color="#E5E5E5"> right</font>

358
00:16:16,989 --> 00:16:21,220
it makes sense but it turns out<font color="#E5E5E5"> that</font>

359
00:16:18,730 --> 00:16:24,279
<font color="#CCCCCC">maybe is more</font><font color="#E5E5E5"> secure I don't even know</font>

360
00:16:21,220 --> 00:16:27,009
but<font color="#E5E5E5"> it definitely</font><font color="#CCCCCC"> adds an extra layer of</font>

361
00:16:24,279 --> 00:16:29,230
complexity that<font color="#E5E5E5"> is it looks not so</font>

362
00:16:27,009 --> 00:16:35,170
<font color="#E5E5E5">complex but developers turns out are not</font>

363
00:16:29,230 --> 00:16:37,439
used<font color="#E5E5E5"> to it so you get a lot of support</font>

364
00:16:35,170 --> 00:16:42,779
requests and failed<font color="#E5E5E5"> a refresh token</font>

365
00:16:37,439 --> 00:16:45,730
<font color="#E5E5E5">requests so after changing this after</font>

366
00:16:42,779 --> 00:16:48,819
stopping<font color="#E5E5E5"> reissuing refresh tokens</font><font color="#CCCCCC"> that</font>

367
00:16:45,730 --> 00:16:52,420
the situation got much better<font color="#CCCCCC"> and we</font>

368
00:16:48,819 --> 00:16:54,368
<font color="#CCCCCC">left the in the in the response that we</font>

369
00:16:52,420 --> 00:16:57,878
<font color="#CCCCCC">are sending still the same refresh token</font>

370
00:16:54,369 --> 00:16:59,889
Jess<font color="#E5E5E5"> not to break those that already had</font>

371
00:16:57,879 --> 00:17:01,480
the the implementation correctly and

372
00:16:59,889 --> 00:17:05,589
they were updating the<font color="#CCCCCC"> refresh token</font>

373
00:17:01,480 --> 00:17:08,770
every time<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> makes sense so this is</font>

374
00:17:05,589 --> 00:17:10,059
something<font color="#E5E5E5"> cool</font><font color="#CCCCCC"> to - something</font><font color="#E5E5E5"> important</font>

375
00:17:08,770 --> 00:17:10,898
to<font color="#CCCCCC"> keep in mind if you're implementing</font>

376
00:17:10,059 --> 00:17:12,459
<font color="#E5E5E5">or not server</font>

377
00:17:10,898 --> 00:17:15,668
<font color="#CCCCCC">I would suggest don't reissue the</font>

378
00:17:12,459 --> 00:17:18,699
Refresh tokens<font color="#CCCCCC"> one final</font><font color="#E5E5E5"> thing before</font>

379
00:17:15,669 --> 00:17:20,709
closing the chapter<font color="#E5E5E5"> this is a custom</font>

380
00:17:18,699 --> 00:17:23,889
<font color="#CCCCCC">endpoint</font><font color="#E5E5E5"> that we created in pipe drive</font>

381
00:17:20,709 --> 00:17:26,529
<font color="#E5E5E5">and it's an endpoint</font><font color="#CCCCCC"> that's used to</font>

382
00:17:23,888 --> 00:17:28,629
exchange an API token<font color="#E5E5E5"> with the first</font>

383
00:17:26,529 --> 00:17:31,840
pair of<font color="#E5E5E5"> access token and refresh token</font>

384
00:17:28,630 --> 00:17:34,779
so again if you have<font color="#E5E5E5"> your implementation</font>

385
00:17:31,840 --> 00:17:36,668
using the API token you can use this

386
00:17:34,779 --> 00:17:38,980
<font color="#CCCCCC">endpoint and exchange it and for me it</font>

387
00:17:36,669 --> 00:17:41,260
would<font color="#E5E5E5"> resolve it would look like</font><font color="#CCCCCC"> an app</font>

388
00:17:38,980 --> 00:17:42,490
<font color="#E5E5E5">that I already</font><font color="#CCCCCC"> installed</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> we did</font>

389
00:17:41,260 --> 00:17:45,399
this because<font color="#CCCCCC"> we</font><font color="#E5E5E5"> had a lot of</font>

390
00:17:42,490 --> 00:17:49,029
integrations<font color="#E5E5E5"> built with API token and we</font>

391
00:17:45,399 --> 00:17:52,149
wanted<font color="#E5E5E5"> to help them transition</font><font color="#CCCCCC"> to actual</font>

392
00:17:49,029 --> 00:17:52,480
app using the<font color="#E5E5E5"> off flow we can talk more</font>

393
00:17:52,149 --> 00:17:57,129
about

394
00:17:52,480 --> 00:17:59,350
if you're interested<font color="#CCCCCC"> but so this is what</font>

395
00:17:57,130 --> 00:18:01,600
we've covered<font color="#E5E5E5"> so far do you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> any</font>

396
00:17:59,350 --> 00:18:03,730
questions at this<font color="#CCCCCC"> point before we move</font>

397
00:18:01,600 --> 00:18:13,600
on yeah

398
00:18:03,730 --> 00:18:18,730
go<font color="#CCCCCC"> ahead you get</font><font color="#E5E5E5"> access what happens if</font>

399
00:18:13,600 --> 00:18:21,939
a password leaks it's the same yeah<font color="#CCCCCC"> you</font>

400
00:18:18,730 --> 00:18:25,690
<font color="#CCCCCC">can you can revoke the token</font><font color="#E5E5E5"> so yeah so</font>

401
00:18:21,940 --> 00:18:28,299
if some if again because you<font color="#CCCCCC"> have</font>

402
00:18:25,690 --> 00:18:30,429
different access tokens<font color="#E5E5E5"> for</font><font color="#CCCCCC"> everyone you</font>

403
00:18:28,299 --> 00:18:32,320
can revoke just one so if you<font color="#E5E5E5"> if you</font>

404
00:18:30,429 --> 00:18:34,059
find out<font color="#E5E5E5"> that</font><font color="#CCCCCC"> there there has been a</font>

405
00:18:32,320 --> 00:18:37,120
leak<font color="#CCCCCC"> you can just revoke that access</font>

406
00:18:34,059 --> 00:18:40,270
token<font color="#E5E5E5"> and make the user go through the</font>

407
00:18:37,120 --> 00:18:52,330
whole flow again<font color="#E5E5E5"> to request a new access</font>

408
00:18:40,270 --> 00:18:56,110
token<font color="#CCCCCC"> make sense yeah so I think I got</font>

409
00:18:52,330 --> 00:18:59,290
the question<font color="#E5E5E5"> so the the the</font><font color="#CCCCCC"> thing is</font><font color="#E5E5E5"> if</font>

410
00:18:56,110 --> 00:19:01,990
my access token leaks<font color="#E5E5E5"> okay that means</font>

411
00:18:59,290 --> 00:19:04,178
<font color="#CCCCCC">that someone else is using it</font><font color="#E5E5E5"> is using</font>

412
00:19:01,990 --> 00:19:06,460
the the access<font color="#CCCCCC"> token that</font><font color="#E5E5E5"> should be my</font>

413
00:19:04,179 --> 00:19:08,230
<font color="#CCCCCC">own right</font><font color="#E5E5E5"> so you the server you can</font>

414
00:19:06,460 --> 00:19:10,809
decide<font color="#E5E5E5"> to revoke that access token</font><font color="#CCCCCC"> and</font>

415
00:19:08,230 --> 00:19:13,419
for me<font color="#CCCCCC"> it will look like</font><font color="#E5E5E5"> the application</font>

416
00:19:10,809 --> 00:19:15,399
<font color="#CCCCCC">has been uninstalled</font><font color="#E5E5E5"> so I cannot</font><font color="#CCCCCC"> use</font>

417
00:19:13,419 --> 00:19:17,650
that<font color="#CCCCCC"> application anymore to start using</font>

418
00:19:15,400 --> 00:19:20,620
it<font color="#E5E5E5"> again</font><font color="#CCCCCC"> I need to go through the whole</font>

419
00:19:17,650 --> 00:19:23,049
authentication the page that<font color="#E5E5E5"> says do you</font>

420
00:19:20,620 --> 00:19:24,699
<font color="#CCCCCC">want</font><font color="#E5E5E5"> to install this again</font><font color="#CCCCCC"> I need to go</font>

421
00:19:23,049 --> 00:19:27,520
through the whole thing<font color="#CCCCCC"> again and you</font>

422
00:19:24,700 --> 00:19:30,250
get<font color="#CCCCCC"> a new access token okay but what if</font>

423
00:19:27,520 --> 00:19:31,179
what instead<font color="#E5E5E5"> of all going through</font><font color="#CCCCCC"> the</font>

424
00:19:30,250 --> 00:19:34,990
whole process

425
00:19:31,179 --> 00:19:37,330
you just issue<font color="#E5E5E5"> ask for a new and your</font>

426
00:19:34,990 --> 00:19:39,910
token with<font color="#CCCCCC"> the Refresh token</font><font color="#E5E5E5"> so if the</font>

427
00:19:37,330 --> 00:19:42,760
<font color="#CCCCCC">refresh token leaks</font><font color="#E5E5E5"> no no if you if you</font>

428
00:19:39,910 --> 00:19:46,260
leak the access token<font color="#E5E5E5"> the simplest way</font>

429
00:19:42,760 --> 00:19:48,669
is<font color="#CCCCCC"> to have the Refresh token working so</font>

430
00:19:46,260 --> 00:19:50,980
the client could just use<font color="#E5E5E5"> the Refresh</font>

431
00:19:48,669 --> 00:19:52,960
<font color="#E5E5E5">token to get a new one yeah if they</font>

432
00:19:50,980 --> 00:19:56,950
aren't you if you if you<font color="#CCCCCC"> aren't</font>

433
00:19:52,960 --> 00:20:00,160
implementing this<font color="#E5E5E5"> is mandatory to</font><font color="#CCCCCC"> have</font>

434
00:19:56,950 --> 00:20:03,640
<font color="#E5E5E5">the the Refresh token working it won't</font>

435
00:20:00,160 --> 00:20:05,440
<font color="#E5E5E5">work</font><font color="#CCCCCC"> this make sense yeah so you're</font>

436
00:20:03,640 --> 00:20:06,280
saying that you can<font color="#E5E5E5"> request</font><font color="#CCCCCC"> the new</font>

437
00:20:05,440 --> 00:20:08,740
<font color="#E5E5E5">access token</font>

438
00:20:06,280 --> 00:20:11,110
using the<font color="#CCCCCC"> Refresh token yeah yes</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> just</font>

439
00:20:08,740 --> 00:20:13,120
<font color="#CCCCCC">depends on who is doing like if the</font>

440
00:20:11,110 --> 00:20:14,649
client finds out that<font color="#E5E5E5"> there's something</font>

441
00:20:13,120 --> 00:20:18,850
<font color="#E5E5E5">wrong with one access token</font><font color="#CCCCCC"> he</font><font color="#E5E5E5"> can</font>

442
00:20:14,650 --> 00:20:22,360
refresh and get<font color="#CCCCCC"> anyone if if instead you</font>

443
00:20:18,850 --> 00:20:24,580
want to<font color="#E5E5E5"> just revoke the whole the whole</font>

444
00:20:22,360 --> 00:20:26,379
<font color="#CCCCCC">thing refresh token an access token</font><font color="#E5E5E5"> the</font>

445
00:20:24,580 --> 00:20:29,919
user needs<font color="#CCCCCC"> to go through</font><font color="#E5E5E5"> the whole</font>

446
00:20:26,380 --> 00:20:33,160
process again<font color="#E5E5E5"> but</font><font color="#CCCCCC"> you say that the</font>

447
00:20:29,920 --> 00:20:35,740
<font color="#E5E5E5">Refresh token you weren't using the</font>

448
00:20:33,160 --> 00:20:49,510
<font color="#E5E5E5">Refresh token because it was giving the</font>

449
00:20:35,740 --> 00:20:51,430
developers problems<font color="#E5E5E5"> well go ahead maybe</font>

450
00:20:49,510 --> 00:20:53,110
<font color="#E5E5E5">someone can</font><font color="#CCCCCC"> can the</font><font color="#E5E5E5"> the call</font><font color="#CCCCCC"> for a</font>

451
00:20:51,430 --> 00:20:54,910
refresh token<font color="#E5E5E5"> includes the access token</font>

452
00:20:53,110 --> 00:20:57,760
as well right sorry

453
00:20:54,910 --> 00:20:59,590
the the call for the refreshing token

454
00:20:57,760 --> 00:21:01,390
also includes the access token<font color="#CCCCCC"> if the</font>

455
00:20:59,590 --> 00:21:06,970
access to<font color="#E5E5E5"> no revoke it doesn't just</font>

456
00:21:01,390 --> 00:21:08,860
refresh so just to refresh<font color="#E5E5E5"> token</font><font color="#CCCCCC"> I don't</font>

457
00:21:06,970 --> 00:21:17,230
know if I<font color="#CCCCCC"> answered totally but maybe we</font>

458
00:21:08,860 --> 00:21:18,969
can<font color="#E5E5E5"> talk about it so</font><font color="#CCCCCC"> i share quickly</font>

459
00:21:17,230 --> 00:21:21,340
some things that we learned while

460
00:21:18,970 --> 00:21:22,780
dealing<font color="#E5E5E5"> with many apps and then we'll</font>

461
00:21:21,340 --> 00:21:26,909
take a look<font color="#CCCCCC"> at cross-site request</font>

462
00:21:22,780 --> 00:21:29,080
forgery attacks in this protocol so

463
00:21:26,910 --> 00:21:31,780
talking about synchronization<font color="#CCCCCC"> with the</font>

464
00:21:29,080 --> 00:21:34,629
clients<font color="#CCCCCC"> let's talk about web hooks do</font>

465
00:21:31,780 --> 00:21:39,580
you know what a book is<font color="#E5E5E5"> okay</font>

466
00:21:34,630 --> 00:21:42,130
so web hook<font color="#E5E5E5"> is is just a fancy</font><font color="#CCCCCC"> name to</font>

467
00:21:39,580 --> 00:21:44,110
<font color="#E5E5E5">describe a URL on</font><font color="#CCCCCC"> the client that</font><font color="#E5E5E5"> the</font>

468
00:21:42,130 --> 00:21:46,990
server<font color="#E5E5E5"> can call every time that</font>

469
00:21:44,110 --> 00:21:48,610
something<font color="#E5E5E5"> is triggered</font><font color="#CCCCCC"> it's just the</font>

470
00:21:46,990 --> 00:21:50,650
trigger<font color="#E5E5E5"> something happens the server</font>

471
00:21:48,610 --> 00:21:53,350
also URL on the<font color="#E5E5E5"> client and</font><font color="#CCCCCC"> sends</font>

472
00:21:50,650 --> 00:21:55,180
probably some data why do we<font color="#E5E5E5"> need</font>

473
00:21:53,350 --> 00:21:57,610
weapons<font color="#CCCCCC"> what what are they used for</font>

474
00:21:55,180 --> 00:22:00,030
<font color="#E5E5E5">what's the problem so when you have a</font>

475
00:21:57,610 --> 00:22:03,010
client<font color="#E5E5E5"> and a server dealing with data</font>

476
00:22:00,030 --> 00:22:04,899
<font color="#E5E5E5">often what you want to do is to keep the</font>

477
00:22:03,010 --> 00:22:06,790
data synchronized in some way so<font color="#E5E5E5"> if</font>

478
00:22:04,900 --> 00:22:10,030
something happens<font color="#CCCCCC"> on the server you want</font>

479
00:22:06,790 --> 00:22:12,090
it to be mirrored on the<font color="#E5E5E5"> client okay how</font>

480
00:22:10,030 --> 00:22:15,520
do you achieve<font color="#E5E5E5"> this the old-school way</font>

481
00:22:12,090 --> 00:22:17,260
of doing this<font color="#CCCCCC"> looks something like</font><font color="#E5E5E5"> this</font>

482
00:22:15,520 --> 00:22:19,210
<font color="#CCCCCC">you would set a timer on the client</font><font color="#E5E5E5"> and</font>

483
00:22:17,260 --> 00:22:19,840
every once in a while<font color="#E5E5E5"> you go and check</font>

484
00:22:19,210 --> 00:22:23,620
what's going

485
00:22:19,840 --> 00:22:25,090
on the server<font color="#E5E5E5"> so you go you check what's</font>

486
00:22:23,620 --> 00:22:27,510
<font color="#CCCCCC">going on in the server you find some</font><font color="#E5E5E5"> new</font>

487
00:22:25,090 --> 00:22:30,399
<font color="#E5E5E5">data and you download</font><font color="#CCCCCC"> it on the client</font>

488
00:22:27,510 --> 00:22:32,320
<font color="#E5E5E5">then you set the timer again</font><font color="#CCCCCC"> something</font>

489
00:22:30,400 --> 00:22:35,040
<font color="#E5E5E5">else happens on the server</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> you don't</font>

490
00:22:32,320 --> 00:22:38,080
know it yet<font color="#E5E5E5"> because</font><font color="#CCCCCC"> you still</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> not</font>

491
00:22:35,040 --> 00:22:39,460
<font color="#E5E5E5">locating to that then you go find out</font>

492
00:22:38,080 --> 00:22:42,760
what's new<font color="#E5E5E5"> on the server and</font><font color="#CCCCCC"> you copy</font>

493
00:22:39,460 --> 00:22:45,580
the data<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> it works but but of course</font>

494
00:22:42,760 --> 00:22:47,500
you<font color="#E5E5E5"> are making unnecessary calls because</font>

495
00:22:45,580 --> 00:22:51,040
you are checking all the time even<font color="#CCCCCC"> when</font>

496
00:22:47,500 --> 00:22:53,410
nothing happens<font color="#E5E5E5"> and the data is not</font>

497
00:22:51,040 --> 00:22:56,139
<font color="#CCCCCC">updated in real time so with the</font><font color="#E5E5E5"> web</font>

498
00:22:53,410 --> 00:22:58,390
<font color="#E5E5E5">hook you reverse the whole thing so</font>

499
00:22:56,140 --> 00:23:00,730
simply when something something happens

500
00:22:58,390 --> 00:23:02,860
on<font color="#E5E5E5"> the server</font><font color="#CCCCCC"> some new data is created</font>

501
00:23:00,730 --> 00:23:04,480
<font color="#E5E5E5">for example</font><font color="#CCCCCC"> is the server that sends the</font>

502
00:23:02,860 --> 00:23:12,879
<font color="#E5E5E5">data back to the</font><font color="#CCCCCC"> client</font>

503
00:23:04,480 --> 00:23:14,650
<font color="#E5E5E5">ok so so you just do the minimum amount</font>

504
00:23:12,880 --> 00:23:19,900
<font color="#E5E5E5">of calls necessary and the data is</font>

505
00:23:14,650 --> 00:23:21,880
always<font color="#E5E5E5"> updated in real time so it's not</font>

506
00:23:19,900 --> 00:23:23,980
the<font color="#E5E5E5"> only application that you</font><font color="#CCCCCC"> have for</font>

507
00:23:21,880 --> 00:23:25,750
web hooks<font color="#E5E5E5"> so let's talk a little bit</font>

508
00:23:23,980 --> 00:23:28,000
about<font color="#E5E5E5"> uninstallation</font><font color="#CCCCCC"> and trial</font>

509
00:23:25,750 --> 00:23:32,410
explorations what's the issue<font color="#E5E5E5"> when a</font>

510
00:23:28,000 --> 00:23:33,940
user installs<font color="#E5E5E5"> an application the client</font>

511
00:23:32,410 --> 00:23:35,620
<font color="#E5E5E5">starts making some</font><font color="#CCCCCC"> request</font><font color="#E5E5E5"> some API</font>

512
00:23:33,940 --> 00:23:39,250
calls<font color="#E5E5E5"> and the server checks if</font>

513
00:23:35,620 --> 00:23:41,949
everything is<font color="#E5E5E5"> looks good or not and the</font>

514
00:23:39,250 --> 00:23:45,850
the<font color="#E5E5E5"> request can be approved or rejected</font>

515
00:23:41,950 --> 00:23:47,920
<font color="#CCCCCC">ok when</font><font color="#E5E5E5"> the user</font><font color="#CCCCCC"> uninstalled</font><font color="#E5E5E5"> an</font>

516
00:23:45,850 --> 00:23:50,379
application or the trial the trial

517
00:23:47,920 --> 00:23:53,560
expires<font color="#E5E5E5"> or something else happens</font><font color="#CCCCCC"> this</font>

518
00:23:50,380 --> 00:23:56,200
<font color="#CCCCCC">is what the situation looks like you</font>

519
00:23:53,560 --> 00:23:57,760
have all the requests are rejected

520
00:23:56,200 --> 00:23:59,590
<font color="#E5E5E5">because that client should not have</font>

521
00:23:57,760 --> 00:24:01,660
access<font color="#E5E5E5"> to anything anymore</font><font color="#CCCCCC"> all right</font>

522
00:23:59,590 --> 00:24:03,970
but what's what's the<font color="#E5E5E5"> problem the</font>

523
00:24:01,660 --> 00:24:06,010
<font color="#E5E5E5">problem</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that the client has no no way</font>

524
00:24:03,970 --> 00:24:07,750
of knowing<font color="#E5E5E5"> that like on its own so it</font>

525
00:24:06,010 --> 00:24:10,120
<font color="#E5E5E5">will keep trying to make this request</font>

526
00:24:07,750 --> 00:24:12,940
which will be rejected<font color="#E5E5E5"> so how do you</font>

527
00:24:10,120 --> 00:24:16,570
solve it with a web<font color="#E5E5E5"> hook</font><font color="#CCCCCC"> so when the</font>

528
00:24:12,940 --> 00:24:18,040
<font color="#E5E5E5">application is uninstalled you send</font><font color="#CCCCCC"> back</font>

529
00:24:16,570 --> 00:24:22,530
to the client hey you've been

530
00:24:18,040 --> 00:24:27,030
uninstalled<font color="#CCCCCC"> stop making requests</font><font color="#E5E5E5"> ok</font><font color="#CCCCCC"> and</font>

531
00:24:22,530 --> 00:24:30,399
also<font color="#E5E5E5"> you should provide an</font><font color="#CCCCCC"> end point for</font>

532
00:24:27,030 --> 00:24:32,860
revoking the access token from the

533
00:24:30,400 --> 00:24:33,730
client so if for example the app is a

534
00:24:32,860 --> 00:24:36,820
paid

535
00:24:33,730 --> 00:24:39,190
and user stops paying the application

536
00:24:36,820 --> 00:24:42,070
should<font color="#CCCCCC"> be able to</font><font color="#E5E5E5"> uninstall itself</font><font color="#CCCCCC"> okay</font>

537
00:24:39,190 --> 00:24:44,399
<font color="#E5E5E5">so this is another end point that should</font>

538
00:24:42,070 --> 00:24:47,500
<font color="#CCCCCC">be provided</font>

539
00:24:44,399 --> 00:24:49,658
similarly when an app<font color="#E5E5E5"> is installed it</font>

540
00:24:47,500 --> 00:24:52,090
<font color="#CCCCCC">can create</font><font color="#E5E5E5"> it can create its own web</font>

541
00:24:49,659 --> 00:24:54,070
<font color="#E5E5E5">hooks</font><font color="#CCCCCC"> so we can say hey server</font><font color="#E5E5E5"> every</font>

542
00:24:52,090 --> 00:24:57,340
time that something<font color="#E5E5E5"> happens I want you</font>

543
00:24:54,070 --> 00:24:58,928
<font color="#E5E5E5">to send the data back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> and again</font>

544
00:24:57,340 --> 00:25:02,649
<font color="#CCCCCC">what's the issue</font><font color="#E5E5E5"> if the app is</font>

545
00:24:58,929 --> 00:25:04,480
<font color="#E5E5E5">uninstalled all the requests</font><font color="#CCCCCC"> coming from</font>

546
00:25:02,649 --> 00:25:06,879
the<font color="#E5E5E5"> client are rejected again</font><font color="#CCCCCC"> but if you</font>

547
00:25:04,480 --> 00:25:09,039
don't do anything<font color="#E5E5E5"> else</font><font color="#CCCCCC"> you have you</font>

548
00:25:06,880 --> 00:25:11,289
still have data<font color="#E5E5E5"> going from the server to</font>

549
00:25:09,039 --> 00:25:13,000
the client<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so it's very simple</font>

550
00:25:11,289 --> 00:25:16,658
<font color="#E5E5E5">again you just</font><font color="#CCCCCC"> need to remember to</font>

551
00:25:13,000 --> 00:25:20,320
<font color="#E5E5E5">delete these</font><font color="#CCCCCC"> Web books</font><font color="#E5E5E5"> and the this</font>

552
00:25:16,659 --> 00:25:24,100
<font color="#E5E5E5">could look like</font><font color="#CCCCCC"> obvious things</font><font color="#E5E5E5"> but it</font>

553
00:25:20,320 --> 00:25:25,779
turns<font color="#E5E5E5"> out sometimes you don't you don't</font>

554
00:25:24,100 --> 00:25:29,309
figure<font color="#E5E5E5"> it out until you</font><font color="#CCCCCC"> are dealing with</font>

555
00:25:25,779 --> 00:25:34,870
many many apps and many many requests

556
00:25:29,309 --> 00:25:36,460
<font color="#E5E5E5">all right so this is the the kind</font><font color="#CCCCCC"> of the</font>

557
00:25:34,870 --> 00:25:40,209
<font color="#E5E5E5">final chapter</font><font color="#CCCCCC"> and I</font><font color="#E5E5E5"> wanted to talk about</font>

558
00:25:36,460 --> 00:25:43,029
<font color="#E5E5E5">this because it's something important to</font>

559
00:25:40,210 --> 00:25:46,990
understand but it's<font color="#E5E5E5"> not always clear for</font>

560
00:25:43,029 --> 00:25:51,159
<font color="#CCCCCC">all developers how did how cross-site</font>

561
00:25:46,990 --> 00:25:52,840
request forgery attacks<font color="#E5E5E5"> work in this</font>

562
00:25:51,159 --> 00:25:54,820
protocol<font color="#E5E5E5"> and how</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> prevent them</font>

563
00:25:52,840 --> 00:26:00,000
using the state parameter<font color="#CCCCCC"> and it's not</font>

564
00:25:54,820 --> 00:26:02,799
clear<font color="#E5E5E5"> for everybody because sometimes</font><font color="#CCCCCC"> so</font>

565
00:26:00,000 --> 00:26:04,450
yeah so first<font color="#E5E5E5"> of all what is</font><font color="#CCCCCC"> to say the</font>

566
00:26:02,799 --> 00:26:06,820
state parameter<font color="#CCCCCC"> it's a</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> a an</font>

567
00:26:04,450 --> 00:26:08,679
optional parameter<font color="#E5E5E5"> per specification</font>

568
00:26:06,820 --> 00:26:10,870
that<font color="#E5E5E5"> you can include in the flow and</font>

569
00:26:08,679 --> 00:26:14,289
it's a<font color="#E5E5E5"> parameter that</font><font color="#CCCCCC"> can prevent that</font>

570
00:26:10,870 --> 00:26:15,969
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> of attacks it's just a string that</font>

571
00:26:14,289 --> 00:26:18,639
<font color="#E5E5E5">is bounced back and</font><font color="#CCCCCC"> forth between the</font>

572
00:26:15,970 --> 00:26:20,169
client and<font color="#E5E5E5"> the server the server sends</font>

573
00:26:18,639 --> 00:26:22,510
it back to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> client as it is it</font>

574
00:26:20,169 --> 00:26:25,929
doesn't<font color="#CCCCCC"> even touch</font><font color="#E5E5E5"> it you can see here</font>

575
00:26:22,510 --> 00:26:28,000
there is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> URL that we've seen</font>

576
00:26:25,929 --> 00:26:30,820
<font color="#CCCCCC">before with the code plus</font><font color="#E5E5E5"> state</font>

577
00:26:28,000 --> 00:26:32,590
parameter<font color="#E5E5E5"> and it's not certainly clear</font>

578
00:26:30,820 --> 00:26:34,510
always how this work<font color="#E5E5E5"> because if you</font>

579
00:26:32,590 --> 00:26:37,959
<font color="#E5E5E5">google and try to understand it on your</font>

580
00:26:34,510 --> 00:26:40,149
own<font color="#E5E5E5"> you you you sometimes find websites</font>

581
00:26:37,960 --> 00:26:42,070
that say<font color="#CCCCCC"> things</font><font color="#E5E5E5"> like if you don't use</font>

582
00:26:40,149 --> 00:26:44,949
the state parameter<font color="#E5E5E5"> an attacker could</font>

583
00:26:42,070 --> 00:26:47,000
gain<font color="#E5E5E5"> access to a victim's resources</font>

584
00:26:44,950 --> 00:26:50,750
which is kind of true

585
00:26:47,000 --> 00:26:52,790
but it's not precise<font color="#CCCCCC"> it's it's a bit</font>

586
00:26:50,750 --> 00:26:55,970
more<font color="#E5E5E5"> clear if</font><font color="#CCCCCC"> you read the specification</font>

587
00:26:52,790 --> 00:26:59,510
so the important bit is the last part so

588
00:26:55,970 --> 00:27:02,450
it says that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> victim that can be</font>

589
00:26:59,510 --> 00:27:04,280
tricked<font color="#E5E5E5"> into saving their own private</font>

590
00:27:02,450 --> 00:27:05,780
data<font color="#E5E5E5"> thinking that they're saving it to</font>

591
00:27:04,280 --> 00:27:09,940
their own<font color="#E5E5E5"> account but instead they're</font>

592
00:27:05,780 --> 00:27:13,460
<font color="#E5E5E5">saving it on the attackers account</font><font color="#CCCCCC"> okay</font>

593
00:27:09,940 --> 00:27:15,230
so we'll see<font color="#E5E5E5"> how normal flow works</font><font color="#CCCCCC"> we'll</font>

594
00:27:13,460 --> 00:27:16,850
see how the attack works<font color="#E5E5E5"> and then we'll</font>

595
00:27:15,230 --> 00:27:20,810
see<font color="#E5E5E5"> how the state parameter can prevent</font>

596
00:27:16,850 --> 00:27:23,270
it in<font color="#CCCCCC"> our normal flow just</font><font color="#E5E5E5"> to recap the</font>

597
00:27:20,810 --> 00:27:24,860
user installs the application<font color="#E5E5E5"> the</font>

598
00:27:23,270 --> 00:27:26,960
<font color="#E5E5E5">authorization server generates an</font>

599
00:27:24,860 --> 00:27:29,360
authentication code<font color="#E5E5E5"> that's linked</font><font color="#CCCCCC"> to</font>

600
00:27:26,960 --> 00:27:32,200
that specific user the user is

601
00:27:29,360 --> 00:27:34,820
redirected to<font color="#CCCCCC"> the client with this code</font>

602
00:27:32,200 --> 00:27:37,190
exchange is the<font color="#E5E5E5"> code for an access token</font>

603
00:27:34,820 --> 00:27:39,919
that's also linked to<font color="#E5E5E5"> that specific</font>

604
00:27:37,190 --> 00:27:41,690
account<font color="#E5E5E5"> and then the client can use this</font>

605
00:27:39,920 --> 00:27:44,510
access<font color="#E5E5E5"> token to make API calls for</font>

606
00:27:41,690 --> 00:27:47,240
example to send in a new lead<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> that</font>

607
00:27:44,510 --> 00:27:49,580
ends<font color="#E5E5E5"> up on that specific account because</font>

608
00:27:47,240 --> 00:27:53,890
that<font color="#E5E5E5"> access token</font><font color="#CCCCCC"> is linked to</font><font color="#E5E5E5"> that</font>

609
00:27:49,580 --> 00:27:57,260
<font color="#E5E5E5">account okay so how does the attack work</font>

610
00:27:53,890 --> 00:27:59,480
the attacker<font color="#E5E5E5"> starts the process just</font>

611
00:27:57,260 --> 00:28:01,730
<font color="#CCCCCC">like any</font><font color="#E5E5E5"> other user</font><font color="#CCCCCC"> yeah so they approve</font>

612
00:27:59,480 --> 00:28:04,550
the app an authorization code is

613
00:28:01,730 --> 00:28:06,890
<font color="#CCCCCC">generated on</font><font color="#E5E5E5"> the server but at this</font>

614
00:28:04,550 --> 00:28:09,560
point<font color="#E5E5E5"> instead of being redirected to the</font>

615
00:28:06,890 --> 00:28:11,810
client<font color="#CCCCCC"> with</font><font color="#E5E5E5"> this code they interrupt</font><font color="#CCCCCC"> the</font>

616
00:28:09,560 --> 00:28:14,540
request as we seen<font color="#CCCCCC"> before it's just a</font>

617
00:28:11,810 --> 00:28:18,350
<font color="#CCCCCC">URL</font><font color="#E5E5E5"> right so you just take that URL</font><font color="#CCCCCC"> and</font>

618
00:28:14,540 --> 00:28:20,659
you have the victim<font color="#E5E5E5"> go to this URL</font>

619
00:28:18,350 --> 00:28:22,459
<font color="#E5E5E5">instead</font><font color="#CCCCCC"> of them</font><font color="#E5E5E5"> and this can happen in a</font>

620
00:28:20,660 --> 00:28:25,490
number<font color="#CCCCCC"> of ways it can be in a malicious</font>

621
00:28:22,460 --> 00:28:29,020
<font color="#E5E5E5">email it can be hidden somewhere iframes</font>

622
00:28:25,490 --> 00:28:31,820
<font color="#CCCCCC">images so on so let's see what happens</font>

623
00:28:29,020 --> 00:28:33,410
<font color="#E5E5E5">the client goes to the the the user goes</font>

624
00:28:31,820 --> 00:28:35,540
to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> client</font><font color="#CCCCCC"> with this authorization</font>

625
00:28:33,410 --> 00:28:38,510
code that's linked so the attackers

626
00:28:35,540 --> 00:28:40,940
account is exchanged the code is

627
00:28:38,510 --> 00:28:44,240
exchanged<font color="#CCCCCC"> for an access token and now</font>

628
00:28:40,940 --> 00:28:46,700
the client that<font color="#E5E5E5"> the user is sending the</font>

629
00:28:44,240 --> 00:28:48,320
new then the the the<font color="#CCCCCC"> data through the</font>

630
00:28:46,700 --> 00:28:50,570
<font color="#CCCCCC">client using an access token that's</font>

631
00:28:48,320 --> 00:28:53,840
linked<font color="#CCCCCC"> to the attackers account</font><font color="#E5E5E5"> okay and</font>

632
00:28:50,570 --> 00:28:57,649
so this is how the data ends<font color="#CCCCCC"> up actually</font>

633
00:28:53,840 --> 00:28:58,970
on<font color="#E5E5E5"> the attackers account</font><font color="#CCCCCC"> alright so how</font>

634
00:28:57,650 --> 00:29:00,600
do you solve this<font color="#E5E5E5"> using the state</font>

635
00:28:58,970 --> 00:29:02,580
<font color="#CCCCCC">parameter</font>

636
00:29:00,600 --> 00:29:05,929
the state parameter<font color="#E5E5E5"> is generated by the</font>

637
00:29:02,580 --> 00:29:09,090
client and it's a string that identifies

638
00:29:05,930 --> 00:29:12,300
<font color="#E5E5E5">uniquely that specific session which</font>

639
00:29:09,090 --> 00:29:15,480
means that specific user<font color="#CCCCCC"> okay</font>

640
00:29:12,300 --> 00:29:16,649
and and this<font color="#E5E5E5"> parameter is is passed with</font>

641
00:29:15,480 --> 00:29:19,320
each step<font color="#CCCCCC"> of the phone</font>

642
00:29:16,650 --> 00:29:21,690
so when the<font color="#E5E5E5"> user is redirected to the</font>

643
00:29:19,320 --> 00:29:24,120
client<font color="#E5E5E5"> with this code there is also a</font>

644
00:29:21,690 --> 00:29:26,580
state parameter<font color="#E5E5E5"> that identifies it's me</font>

645
00:29:24,120 --> 00:29:30,179
<font color="#E5E5E5">it's the same</font><font color="#CCCCCC"> it's the same session okay</font>

646
00:29:26,580 --> 00:29:32,280
and in the same way the attacker<font color="#E5E5E5"> has a</font>

647
00:29:30,180 --> 00:29:36,270
state parameter<font color="#E5E5E5"> that's linked to its own</font>

648
00:29:32,280 --> 00:29:39,090
their own account<font color="#E5E5E5"> so now if the</font><font color="#CCCCCC"> attacker</font>

649
00:29:36,270 --> 00:29:41,760
tries to have the victim go to this URL

650
00:29:39,090 --> 00:29:44,550
<font color="#E5E5E5">instead of them well it's very easy now</font>

651
00:29:41,760 --> 00:29:46,650
for<font color="#CCCCCC"> the client to</font><font color="#E5E5E5"> see hey the</font><font color="#CCCCCC"> the</font>

652
00:29:44,550 --> 00:29:49,139
session that<font color="#CCCCCC"> is making the request</font><font color="#E5E5E5"> it's</font>

653
00:29:46,650 --> 00:29:50,370
not the same<font color="#E5E5E5"> of</font><font color="#CCCCCC"> these state parameters</font>

654
00:29:49,140 --> 00:29:52,830
that I'm receiving so there's something

655
00:29:50,370 --> 00:29:56,489
<font color="#E5E5E5">fishy</font><font color="#CCCCCC"> going on</font><font color="#E5E5E5"> and the the request can</font>

656
00:29:52,830 --> 00:30:00,030
simply be rejected<font color="#E5E5E5"> this is something</font>

657
00:29:56,490 --> 00:30:02,280
<font color="#CCCCCC">that it is is optional</font><font color="#E5E5E5"> also in</font><font color="#CCCCCC"> piledrive</font>

658
00:30:00,030 --> 00:30:05,430
because it's optional<font color="#CCCCCC"> per specification</font>

659
00:30:02,280 --> 00:30:10,080
<font color="#CCCCCC">I don't think we ever enforce it</font><font color="#E5E5E5"> but if</font>

660
00:30:05,430 --> 00:30:11,460
you<font color="#CCCCCC"> are developing an app</font><font color="#E5E5E5"> using the</font>

661
00:30:10,080 --> 00:30:13,500
OAuth<font color="#CCCCCC"> flow it's definitely recommended</font>

662
00:30:11,460 --> 00:30:15,420
that you use<font color="#E5E5E5"> it I don't</font><font color="#CCCCCC"> know why it's</font>

663
00:30:13,500 --> 00:30:19,530
optional honestly the specifications

664
00:30:15,420 --> 00:30:21,600
maybe someone knows<font color="#CCCCCC"> can tell me</font><font color="#E5E5E5"> but yeah</font>

665
00:30:19,530 --> 00:30:26,070
it's definitely<font color="#E5E5E5"> recommended that you</font><font color="#CCCCCC"> use</font>

666
00:30:21,600 --> 00:30:31,709
it<font color="#E5E5E5"> we've talked</font><font color="#CCCCCC"> about a</font><font color="#E5E5E5"> few things do</font>

667
00:30:26,070 --> 00:30:34,889
<font color="#E5E5E5">you have any more questions</font><font color="#CCCCCC"> was it clear</font>

668
00:30:31,710 --> 00:30:44,130
<font color="#CCCCCC">enough yeah for those</font><font color="#E5E5E5"> who are new to the</font>

669
00:30:34,890 --> 00:30:45,870
whole thing yeah<font color="#CCCCCC"> shy audience it's cool</font>

670
00:30:44,130 --> 00:30:48,180
<font color="#CCCCCC">if you have any</font><font color="#E5E5E5"> more questions anyway</font>

671
00:30:45,870 --> 00:30:51,540
I'll be<font color="#CCCCCC"> around you can you can we</font><font color="#E5E5E5"> can</font>

672
00:30:48,180 --> 00:30:52,800
clarify that<font color="#CCCCCC"> the thing is well thank you</font>

673
00:30:51,540 --> 00:30:58,200
for<font color="#E5E5E5"> your attention guys thank you for</font>

674
00:30:52,800 --> 00:30:59,700
<font color="#E5E5E5">there is there is</font><font color="#CCCCCC"> a question Hey and not</font>

675
00:30:58,200 --> 00:31:04,410
<font color="#E5E5E5">really a question I was</font><font color="#CCCCCC"> just going to</font>

676
00:30:59,700 --> 00:31:08,520
say that<font color="#E5E5E5"> that state parameter yeah I've</font>

677
00:31:04,410 --> 00:31:12,150
seen<font color="#CCCCCC"> it used as</font><font color="#E5E5E5"> a way as a way to</font>

678
00:31:08,520 --> 00:31:13,950
basically pass<font color="#CCCCCC"> information through the</font>

679
00:31:12,150 --> 00:31:17,340
OAuth<font color="#CCCCCC"> flow</font>

680
00:31:13,950 --> 00:31:19,980
so basically let's imagine that<font color="#E5E5E5"> you you</font>

681
00:31:17,340 --> 00:31:24,270
can come from two<font color="#CCCCCC"> different places so</font>

682
00:31:19,980 --> 00:31:29,760
I've seen<font color="#CCCCCC"> clients pass</font><font color="#E5E5E5"> random stuff into</font>

683
00:31:24,270 --> 00:31:33,450
the<font color="#E5E5E5"> state saying homepage or yeah yeah</font>

684
00:31:29,760 --> 00:31:35,580
and<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> yeah not not utilizing the</font>

685
00:31:33,450 --> 00:31:40,230
the code as it<font color="#E5E5E5"> used to be or simply</font>

686
00:31:35,580 --> 00:31:44,730
ignoring it like getting<font color="#CCCCCC"> CS RAF error</font>

687
00:31:40,230 --> 00:31:48,270
and<font color="#E5E5E5"> well what is this</font><font color="#CCCCCC"> and simply ignore</font>

688
00:31:44,730 --> 00:31:48,810
the kill because it was breaking<font color="#CCCCCC"> the</font><font color="#E5E5E5"> oil</font>

689
00:31:48,270 --> 00:31:52,230
<font color="#E5E5E5">flow</font>

690
00:31:48,810 --> 00:31:55,409
it's simply<font color="#E5E5E5"> say again simply</font><font color="#CCCCCC"> broke</font><font color="#E5E5E5"> when</font>

691
00:31:52,230 --> 00:31:59,160
it breaks since since<font color="#E5E5E5"> the basically</font>

692
00:31:55,410 --> 00:32:03,960
<font color="#E5E5E5">imagine</font><font color="#CCCCCC"> that you were using a client</font>

693
00:31:59,160 --> 00:32:05,640
that would make the verification of the

694
00:32:03,960 --> 00:32:08,270
<font color="#CCCCCC">code for yourself</font>

695
00:32:05,640 --> 00:32:11,180
<font color="#CCCCCC">mmm-hmm</font><font color="#E5E5E5"> and it was breaking so then</font>

696
00:32:08,270 --> 00:32:14,940
clients would simply pass<font color="#CCCCCC"> ignore states</font>

697
00:32:11,180 --> 00:32:19,340
ignore state<font color="#CCCCCC"> option and and in</font><font color="#E5E5E5"> that way</font>

698
00:32:14,940 --> 00:32:22,410
it would work okay so<font color="#CCCCCC"> basically clients</font>

699
00:32:19,340 --> 00:32:24,389
<font color="#E5E5E5">don't know what the code does so but</font>

700
00:32:22,410 --> 00:32:26,610
yeah<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you ignore</font><font color="#CCCCCC"> it is it for</font>

701
00:32:24,390 --> 00:32:30,090
<font color="#E5E5E5">something else</font><font color="#CCCCCC"> yeah so as I said it's</font>

702
00:32:26,610 --> 00:32:31,740
just<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> Ramat</font><font color="#E5E5E5"> the server is doesn't do</font>

703
00:32:30,090 --> 00:32:34,919
anything with<font color="#E5E5E5"> it</font><font color="#CCCCCC"> it just sends it back</font>

704
00:32:31,740 --> 00:32:37,380
so yes it's up it's up to the<font color="#E5E5E5"> client</font><font color="#CCCCCC"> to</font>

705
00:32:34,920 --> 00:32:38,700
decide how<font color="#E5E5E5"> to use it and this is how it</font>

706
00:32:37,380 --> 00:32:41,820
<font color="#CCCCCC">should be</font><font color="#E5E5E5"> used to prevent this kind of</font>

707
00:32:38,700 --> 00:32:45,360
<font color="#E5E5E5">attack but yes it can be used to just</font>

708
00:32:41,820 --> 00:32:49,560
know for<font color="#CCCCCC"> example where the user was what</font>

709
00:32:45,360 --> 00:32:51,810
the user was doing<font color="#E5E5E5"> before they went to</font>

710
00:32:49,560 --> 00:32:53,429
<font color="#CCCCCC">the</font><font color="#E5E5E5"> the home flow so that they can</font>

711
00:32:51,810 --> 00:32:56,159
restart from<font color="#CCCCCC"> the same point</font><font color="#E5E5E5"> or something</font>

712
00:32:53,430 --> 00:32:57,720
like<font color="#CCCCCC"> that</font><font color="#E5E5E5"> it should should</font><font color="#CCCCCC"> be used</font><font color="#E5E5E5"> for</font>

713
00:32:56,160 --> 00:32:59,460
if you want to do<font color="#E5E5E5"> that you can do you</font>

714
00:32:57,720 --> 00:33:02,970
can do<font color="#E5E5E5"> it it's probably</font><font color="#CCCCCC"> a good idea to</font>

715
00:32:59,460 --> 00:33:05,460
do both things<font color="#CCCCCC"> so you generate a string</font>

716
00:33:02,970 --> 00:33:08,280
that has<font color="#E5E5E5"> the</font><font color="#CCCCCC"> information of what</font><font color="#E5E5E5"> you</font>

717
00:33:05,460 --> 00:33:10,740
were<font color="#E5E5E5"> doing at that point and also has a</font>

718
00:33:08,280 --> 00:33:13,020
way<font color="#CCCCCC"> of identifying</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> session</font><font color="#CCCCCC"> but</font>

719
00:33:10,740 --> 00:33:15,350
yes it's totally<font color="#CCCCCC"> up to the to the client</font>

720
00:33:13,020 --> 00:33:15,350
yeah

721
00:33:18,809 --> 00:33:24,499
rock<font color="#E5E5E5"> n roll thank you very attention</font>

722
00:33:20,909 --> 00:33:24,499
guys<font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> for having me</font>

