1
00:00:00,160 --> 00:00:02,940
[Music]

2
00:00:02,940 --> 00:00:05,600
foreign

3
00:00:14,520 --> 00:00:17,560
[Music]

4
00:00:23,960 --> 00:00:28,220
second b-sides and this time despite

5
00:00:28,220 --> 00:00:31,500
having a tool that I'll be doing the

6
00:00:31,500 --> 00:00:35,239
moderation part I also at some moment uh

7
00:00:35,239 --> 00:00:38,219
participated in call for papers and

8
00:00:38,219 --> 00:00:40,980
despite me having the most bizarre

9
00:00:40,980 --> 00:00:43,559
speaker's bio to check it from the

10
00:00:43,559 --> 00:00:45,719
website later

11
00:00:45,719 --> 00:00:48,300
uh I got selected

12
00:00:48,300 --> 00:00:51,899
so the talk is about something I'm doing

13
00:00:51,899 --> 00:00:55,079
uh at work and that I I have been doing

14
00:00:55,079 --> 00:00:58,379
touring also past five years when I was

15
00:00:58,379 --> 00:01:00,480
working at Zone

16
00:01:00,480 --> 00:01:03,120
so a lot of these things are kind of

17
00:01:03,120 --> 00:01:04,799
contribution of my current and previous

18
00:01:04,799 --> 00:01:08,159
uh work thanks to whom I understand

19
00:01:08,159 --> 00:01:11,280
these things and and I have learned

20
00:01:11,280 --> 00:01:12,560
these things

21
00:01:12,560 --> 00:01:16,020
uh logs don't lie even if part of them

22
00:01:16,020 --> 00:01:19,260
is lost we are in the theater basically

23
00:01:19,260 --> 00:01:22,500
if it's a theater place so of course we

24
00:01:22,500 --> 00:01:25,080
need to start with a plot twist

25
00:01:25,080 --> 00:01:29,280
rocks namely extremely good at lying to

26
00:01:29,280 --> 00:01:33,240
you and especially not showing up when

27
00:01:33,240 --> 00:01:35,820
you need them it has happened to me a

28
00:01:35,820 --> 00:01:39,139
lot of times in my life

29
00:01:39,600 --> 00:01:43,799
but I've also during that learned how to

30
00:01:43,799 --> 00:01:46,380
kind of like massage the Rocks into

31
00:01:46,380 --> 00:01:47,900
being

32
00:01:47,900 --> 00:01:51,619
and turns out that while I actually like

33
00:01:51,619 --> 00:01:54,240
dealing with reading the logs and

34
00:01:54,240 --> 00:01:56,759
finding the bad guys and everything then

35
00:01:56,759 --> 00:01:59,100
actually most important part of my work

36
00:01:59,100 --> 00:02:01,700
for example when we were on lock Shields

37
00:02:01,700 --> 00:02:05,939
cyber exercise was actually making sure

38
00:02:05,939 --> 00:02:08,818
that all logs are in Pro performance and

39
00:02:08,818 --> 00:02:12,300
they reach elastic

40
00:02:12,300 --> 00:02:15,740
uh so some scene setting

41
00:02:15,740 --> 00:02:17,220
[Music]

42
00:02:17,220 --> 00:02:19,560
what I'm going to talk is because I've

43
00:02:19,560 --> 00:02:21,420
been dealing with the side of security

44
00:02:21,420 --> 00:02:24,080
which could be web application security

45
00:02:24,080 --> 00:02:27,000
so I'll be looking on at the logs not

46
00:02:27,000 --> 00:02:28,500
from the side of Marlborough happening

47
00:02:28,500 --> 00:02:30,420
on your Windows computers but exactly

48
00:02:30,420 --> 00:02:32,520
things that are happening earlier in

49
00:02:32,520 --> 00:02:35,700
relation to web servers

50
00:02:35,700 --> 00:02:40,020
and somehow uh starting from the 24th of

51
00:02:40,020 --> 00:02:43,440
February there has been a more DDOS

52
00:02:43,440 --> 00:02:49,019
attacks than I've ever seen before so

53
00:02:49,019 --> 00:02:52,379
I'm using that as a case to case for

54
00:02:52,379 --> 00:02:54,080
that

55
00:02:54,080 --> 00:02:57,420
and then we are going into the logs

56
00:02:57,420 --> 00:02:59,720
themselves

57
00:02:59,720 --> 00:03:03,599
but to kind of like specify the

58
00:03:03,599 --> 00:03:04,920
territory

59
00:03:04,920 --> 00:03:06,959
there is this very famous Google

60
00:03:06,959 --> 00:03:09,360
interview question about what happens if

61
00:03:09,360 --> 00:03:11,400
you are typing the URL into the browser

62
00:03:11,400 --> 00:03:14,940
so I went out and tried to find this is

63
00:03:14,940 --> 00:03:17,220
there some kind of explanation and turns

64
00:03:17,220 --> 00:03:20,459
out some Alex

65
00:03:20,459 --> 00:03:22,519
Gonzalez whatever

66
00:03:22,519 --> 00:03:26,519
has done 300 comments and come up with a

67
00:03:26,519 --> 00:03:30,180
very detailed thing in as much detail as

68
00:03:30,180 --> 00:03:32,159
possible when you go in and you're

69
00:03:32,159 --> 00:03:33,840
actually going to see that the part I'm

70
00:03:33,840 --> 00:03:35,640
going to talk is just this one line in

71
00:03:35,640 --> 00:03:36,959
this thing

72
00:03:36,959 --> 00:03:39,720
and even more

73
00:03:39,720 --> 00:03:42,500
I'm going to talk about the part that

74
00:03:42,500 --> 00:03:48,299
request ER is received by a web server

75
00:03:48,299 --> 00:03:52,379
then probably it is passed on to some

76
00:03:52,379 --> 00:03:54,239
application I really don't care how how

77
00:03:54,239 --> 00:03:56,580
the application works for me currently

78
00:03:56,580 --> 00:03:59,159
it is just something that takes time I

79
00:03:59,159 --> 00:04:01,260
don't go deep into that

80
00:04:01,260 --> 00:04:05,220
uh and then the responses can send back

81
00:04:05,220 --> 00:04:08,360
again these parts as I said I don't care

82
00:04:08,360 --> 00:04:12,239
uh I'm just talking about basically this

83
00:04:12,239 --> 00:04:14,459
part and perhaps a bit about how it is

84
00:04:14,459 --> 00:04:16,079
going to get sent back but what people

85
00:04:16,079 --> 00:04:18,060
are doing with the response who cares

86
00:04:18,060 --> 00:04:19,680
it's DDOS they're probably not even

87
00:04:19,680 --> 00:04:21,000
reading what they are getting there so

88
00:04:21,000 --> 00:04:22,620
anyway

89
00:04:22,620 --> 00:04:25,080
uh

90
00:04:25,080 --> 00:04:26,900
what kind of uh

91
00:04:26,900 --> 00:04:30,900
denial of services I'm going to keep in

92
00:04:30,900 --> 00:04:34,320
mind uh when uh while describing the

93
00:04:34,320 --> 00:04:36,180
things I have been looking for in the

94
00:04:36,180 --> 00:04:39,139
logs uh

95
00:04:39,139 --> 00:04:42,600
three different examples

96
00:04:42,600 --> 00:04:44,900
the first one is

97
00:04:44,900 --> 00:04:48,840
something called a concerned customer

98
00:04:48,840 --> 00:04:52,380
who informs a website that they are

99
00:04:52,380 --> 00:04:55,500
giving error 500s or something like that

100
00:04:55,500 --> 00:04:59,160
this picture is actually when I

101
00:04:59,160 --> 00:05:01,639
check the logs later and actually

102
00:05:01,639 --> 00:05:06,000
painted the number of requests and turns

103
00:05:06,000 --> 00:05:11,759
out that the user arrived at 4 33

104
00:05:11,759 --> 00:05:14,600
started doing different kinds of

105
00:05:14,600 --> 00:05:19,139
loads looking for things and by 446

106
00:05:19,139 --> 00:05:22,979
which is like 12 minutes later the user

107
00:05:22,979 --> 00:05:26,520
had the concerned visitor had found

108
00:05:26,520 --> 00:05:30,900
endpoint that very effectively took the

109
00:05:30,900 --> 00:05:33,660
site down and actually with very few

110
00:05:33,660 --> 00:05:36,120
requests so there wasn't a question I

111
00:05:36,120 --> 00:05:39,539
think the original one I've apparently

112
00:05:39,539 --> 00:05:42,020
cut away part of the numbers but I think

113
00:05:42,020 --> 00:05:45,300
it was thousands of requests and then as

114
00:05:45,300 --> 00:05:47,820
you see it's basically a TENS of

115
00:05:47,820 --> 00:05:50,539
her ecos was taking Tower

116
00:05:50,539 --> 00:05:53,520
again interesting to understand how it's

117
00:05:53,520 --> 00:05:56,340
happening because if some random dude

118
00:05:56,340 --> 00:05:58,440
can find out how to take your site with

119
00:05:58,440 --> 00:06:01,259
10 requests then probably this is an

120
00:06:01,259 --> 00:06:04,520
important issue

121
00:06:04,919 --> 00:06:08,400
the next case is actually this picture

122
00:06:08,400 --> 00:06:10,440
by the way the first picture was like

123
00:06:10,440 --> 00:06:12,840
something like

124
00:06:12,840 --> 00:06:15,960
tens of minutes so this is basically the

125
00:06:15,960 --> 00:06:18,539
Escape down there 5 10 cilities a

126
00:06:18,539 --> 00:06:19,560
seconds

127
00:06:19,560 --> 00:06:23,160
so this is one minute of a massive

128
00:06:23,160 --> 00:06:24,360
Adidas attack

129
00:06:24,360 --> 00:06:27,080
level seven so because

130
00:06:27,080 --> 00:06:30,539
these sites are behind cloudflare so we

131
00:06:30,539 --> 00:06:33,240
don't care about lower levels just what

132
00:06:33,240 --> 00:06:35,120
could come through

133
00:06:35,120 --> 00:06:37,440
interesting to see is actually the red

134
00:06:37,440 --> 00:06:42,180
line there is indication of error 500s

135
00:06:42,180 --> 00:06:45,120
and when you see the brown line is the

136
00:06:45,120 --> 00:06:48,240
cloud fairs defense kicking in so we can

137
00:06:48,240 --> 00:06:51,419
say that by the number perhaps a bit

138
00:06:51,419 --> 00:06:54,660
after 10th second of the attack it

139
00:06:54,660 --> 00:06:57,060
starts kind of like doing something and

140
00:06:57,060 --> 00:07:01,440
it actually gears up at a 30 second mark

141
00:07:01,440 --> 00:07:03,660
so until that we are kind of naked we

142
00:07:03,660 --> 00:07:06,240
are not being protected and we need to

143
00:07:06,240 --> 00:07:09,360
deal with these things ourselves so the

144
00:07:09,360 --> 00:07:13,259
question is for me uh why did it start

145
00:07:13,259 --> 00:07:16,740
giving these error 500s and what do I

146
00:07:16,740 --> 00:07:20,639
need to make my ingresses and apps more

147
00:07:20,639 --> 00:07:24,440
resilient to these kinds of events

148
00:07:24,900 --> 00:07:26,220
third one

149
00:07:26,220 --> 00:07:30,740
is some person or person's

150
00:07:30,740 --> 00:07:34,080
trying out how the cloudflare works or

151
00:07:34,080 --> 00:07:36,300
how the site Works behind the cloudflare

152
00:07:36,300 --> 00:07:38,819
so the first hit was something like I

153
00:07:38,819 --> 00:07:42,000
think four million requests in one

154
00:07:42,000 --> 00:07:44,340
minute the second one was I think three

155
00:07:44,340 --> 00:07:45,800
or four minutes

156
00:07:45,800 --> 00:07:49,919
and uh and uh third one was also again

157
00:07:49,919 --> 00:07:51,780
one minute ten something like four

158
00:07:51,780 --> 00:07:55,139
million requests in this graph

159
00:07:55,139 --> 00:07:58,259
okay and the time was like one hour in

160
00:07:58,259 --> 00:08:01,440
the night and uh 30 million requests

161
00:08:01,440 --> 00:08:03,720
total

162
00:08:03,720 --> 00:08:06,300
so

163
00:08:06,300 --> 00:08:11,099
Let's uh think now about this thing what

164
00:08:11,099 --> 00:08:14,940
is happening uh Behind these attacks and

165
00:08:14,940 --> 00:08:17,240
actually on the side of our server

166
00:08:17,240 --> 00:08:21,660
and let's look a bit more detail into

167
00:08:21,660 --> 00:08:24,060
what's actually happening

168
00:08:24,060 --> 00:08:26,940
and for me always the question is that

169
00:08:26,940 --> 00:08:29,220
okay I know what happened site went down

170
00:08:29,220 --> 00:08:32,399
but what actually caused that what was

171
00:08:32,399 --> 00:08:34,320
the bottleneck where I need to deal with

172
00:08:34,320 --> 00:08:37,200
things so we can imagine that the same

173
00:08:37,200 --> 00:08:39,419
HTTP request after somebody typed it in

174
00:08:39,419 --> 00:08:42,719
in the browser or launched in a DDOS

175
00:08:42,719 --> 00:08:43,620
tool

176
00:08:43,620 --> 00:08:45,660
either it's cloudflare from cloudflare

177
00:08:45,660 --> 00:08:47,519
it comes to some kind of our whatever

178
00:08:47,519 --> 00:08:49,560
kubernetes Ingress

179
00:08:49,560 --> 00:08:53,100
uh or whatever is kind of like there uh

180
00:08:53,100 --> 00:08:56,060
sometimes it's just going to maybe

181
00:08:56,060 --> 00:08:59,160
some kind of load Challenger there is

182
00:08:59,160 --> 00:09:01,440
probably a varnish doing caching there's

183
00:09:01,440 --> 00:09:04,260
probably nginx serving Pages then there

184
00:09:04,260 --> 00:09:06,720
is something doing the PHP or whatever

185
00:09:06,720 --> 00:09:08,779
language

186
00:09:08,779 --> 00:09:11,600
processes uh

187
00:09:11,600 --> 00:09:14,160
distribution and then there is a process

188
00:09:14,160 --> 00:09:16,339
which again is going to talk to a lot of

189
00:09:16,339 --> 00:09:21,000
different things so what is exactly the

190
00:09:21,000 --> 00:09:22,700
thing that goes wrong

191
00:09:22,700 --> 00:09:25,740
unfortunately there are things that are

192
00:09:25,740 --> 00:09:28,459
repeating and there is always a lot of

193
00:09:28,459 --> 00:09:30,740
specific

194
00:09:30,740 --> 00:09:34,920
questions that can be with each of these

195
00:09:34,920 --> 00:09:36,779
uh we can see it is the cloud for

196
00:09:36,779 --> 00:09:38,459
trigger

197
00:09:38,459 --> 00:09:41,279
these English connections run out was

198
00:09:41,279 --> 00:09:42,720
the page actually cached somewhere

199
00:09:42,720 --> 00:09:44,519
because you I especially picked the

200
00:09:44,519 --> 00:09:47,519
picture with uh blue and yellow

201
00:09:47,519 --> 00:09:51,120
lines because one of them was like

202
00:09:51,120 --> 00:09:53,399
and the page is served by cloudflare and

203
00:09:53,399 --> 00:09:56,160
another one was Pages search by origin

204
00:09:56,160 --> 00:09:59,040
and it was a static page so why the heck

205
00:09:59,040 --> 00:10:02,220
went half of the pages to our origin why

206
00:10:02,220 --> 00:10:04,140
we are not caching it where we could

207
00:10:04,140 --> 00:10:05,600
that

208
00:10:05,600 --> 00:10:09,420
uh there are questions with uh web

209
00:10:09,420 --> 00:10:13,320
server all of these proposable processes

210
00:10:13,320 --> 00:10:20,160
in fbm and actually CPU Cycles

211
00:10:20,160 --> 00:10:22,760
which

212
00:10:22,860 --> 00:10:25,380
is a thing which I working in a hosting

213
00:10:25,380 --> 00:10:26,720
company I

214
00:10:26,720 --> 00:10:30,480
was testing a lot and I found that one

215
00:10:30,480 --> 00:10:33,260
of the very easy explanations usually

216
00:10:33,260 --> 00:10:36,660
works very well so if serving one

217
00:10:36,660 --> 00:10:39,180
request takes like half a second 500

218
00:10:39,180 --> 00:10:41,880
milliseconds and this is not database

219
00:10:41,880 --> 00:10:43,740
time but mostly something happening in

220
00:10:43,740 --> 00:10:47,640
the whatever PHP our JavaScript wherever

221
00:10:47,640 --> 00:10:50,459
then if we have 10 cores then 10 cores

222
00:10:50,459 --> 00:10:54,500
can serve in one second 20 requests

223
00:10:54,500 --> 00:10:57,079
if we have one

224
00:10:57,079 --> 00:11:00,300
request a response taking two and a half

225
00:11:00,300 --> 00:11:02,480
seconds then well we can probably

226
00:11:02,480 --> 00:11:06,360
respond with uh for for respond to four

227
00:11:06,360 --> 00:11:10,380
requests per second

228
00:11:10,620 --> 00:11:12,060
uh

229
00:11:12,060 --> 00:11:15,300
when we are now thinking about the kind

230
00:11:15,300 --> 00:11:16,700
of the first

231
00:11:16,700 --> 00:11:20,640
data set deck then I accidentally did a

232
00:11:20,640 --> 00:11:24,060
similar thing a couple of days ago

233
00:11:24,060 --> 00:11:26,700
when there was a question

234
00:11:26,700 --> 00:11:28,320
from

235
00:11:28,320 --> 00:11:31,740
from one of teams that uh why some

236
00:11:31,740 --> 00:11:33,060
servers

237
00:11:33,060 --> 00:11:38,300
giving error 500s and I took the logs

238
00:11:38,300 --> 00:11:42,180
and uh going over I found that there was

239
00:11:42,180 --> 00:11:45,779
a SEO tool doing site scan SEO tools are

240
00:11:45,779 --> 00:11:47,940
very bad for your sites because they are

241
00:11:47,940 --> 00:11:49,740
often visiting pages that are not cached

242
00:11:49,740 --> 00:11:52,140
because people don't go to all of the

243
00:11:52,140 --> 00:11:53,700
million Pages you have

244
00:11:53,700 --> 00:11:56,540
but it

245
00:11:56,540 --> 00:12:00,600
it shows very nicely what are the slow

246
00:12:00,600 --> 00:12:03,779
requests and I found that for some

247
00:12:03,779 --> 00:12:05,420
reason

248
00:12:05,420 --> 00:12:07,860
some specific and these are actually

249
00:12:07,860 --> 00:12:12,060
category Pages were taking uh very long

250
00:12:12,060 --> 00:12:15,380
I picked a specific category pages

251
00:12:15,380 --> 00:12:19,500
and started running just a curl to see

252
00:12:19,500 --> 00:12:21,240
how long it takes quarter time is just

253
00:12:21,240 --> 00:12:25,200
my my Alias that runs curl and outputs

254
00:12:25,200 --> 00:12:27,480
not what it received but just how long

255
00:12:27,480 --> 00:12:30,720
it took to do which is kind of nicer to

256
00:12:30,720 --> 00:12:34,260
do than in a browser and well I have

257
00:12:34,260 --> 00:12:36,899
also another command which is time Loop

258
00:12:36,899 --> 00:12:39,120
so it's doing the same thing over and

259
00:12:39,120 --> 00:12:41,459
over and again so currently I think I

260
00:12:41,459 --> 00:12:43,800
opened five browser tabs started running

261
00:12:43,800 --> 00:12:47,240
this 30 second codes a 30 second

262
00:12:47,240 --> 00:12:51,440
requests with changing cache poster

263
00:12:51,440 --> 00:12:54,240
at the end just changing number to make

264
00:12:54,240 --> 00:12:56,220
sure it's not cached

265
00:12:56,220 --> 00:12:59,339
and I think in 10 minutes the developer

266
00:12:59,339 --> 00:13:02,040
was in slack asking that why are you

267
00:13:02,040 --> 00:13:04,200
interested in this product

268
00:13:04,200 --> 00:13:06,959
because all of the New Relic alerts had

269
00:13:06,959 --> 00:13:09,779
been went off that there is a lot of

270
00:13:09,779 --> 00:13:11,820
very slow requests reaching the site so

271
00:13:11,820 --> 00:13:15,959
basically and I think uh here is the

272
00:13:15,959 --> 00:13:17,040
picture

273
00:13:17,040 --> 00:13:21,899
so the blue blue area is one minute so I

274
00:13:21,899 --> 00:13:24,720
did I think it's uh 10 requests per

275
00:13:24,720 --> 00:13:25,500
minute

276
00:13:25,500 --> 00:13:27,779
and I was able to basically crash the

277
00:13:27,779 --> 00:13:33,000
site with 10 requests per per minute I

278
00:13:33,000 --> 00:13:35,339
could probably variate more or the

279
00:13:35,339 --> 00:13:36,540
categories what I'm looking and

280
00:13:36,540 --> 00:13:37,980
everything because there is site map

281
00:13:37,980 --> 00:13:40,680
where I can get these but here it's uh

282
00:13:40,680 --> 00:13:43,680
very simple basically boom and the site

283
00:13:43,680 --> 00:13:46,620
is gone

284
00:13:46,620 --> 00:13:48,120
uh

285
00:13:48,120 --> 00:13:51,300
now the good part of this log is

286
00:13:51,300 --> 00:13:52,920
actually that

287
00:13:52,920 --> 00:13:55,740
it had at the end of the line also

288
00:13:55,740 --> 00:13:57,959
similar seconds the seconds don't match

289
00:13:57,959 --> 00:14:00,060
exactly because I'm taking them from

290
00:14:00,060 --> 00:14:02,760
kind of a slightly different part of the

291
00:14:02,760 --> 00:14:04,320
test

292
00:14:04,320 --> 00:14:08,399
but I can very easily understand what's

293
00:14:08,399 --> 00:14:09,779
going on there

294
00:14:09,779 --> 00:14:11,339
unfortunately

295
00:14:11,339 --> 00:14:14,519
when we are looking at your average wave

296
00:14:14,519 --> 00:14:18,959
access log then it turns out that it

297
00:14:18,959 --> 00:14:21,079
doesn't have that kind of data

298
00:14:21,079 --> 00:14:25,160
and it is very difficult to understand

299
00:14:25,160 --> 00:14:27,959
what is the application actually doing

300
00:14:27,959 --> 00:14:30,420
while it's under stress

301
00:14:30,420 --> 00:14:33,600
because uh for me the indicator that

302
00:14:33,600 --> 00:14:38,040
it's just running long long time is uh

303
00:14:38,040 --> 00:14:42,600
um is indicator which helps me find

304
00:14:42,600 --> 00:14:45,180
but there are other mistakes in this

305
00:14:45,180 --> 00:14:47,899
particular line

306
00:14:47,899 --> 00:14:51,120
first the IP address

307
00:14:51,120 --> 00:14:55,440
because often the web requests comes

308
00:14:55,440 --> 00:14:57,480
through different parts parts for

309
00:14:57,480 --> 00:14:58,860
example it starts with a Cloud Player

310
00:14:58,860 --> 00:15:01,199
golfer comes to your loot balancer

311
00:15:01,199 --> 00:15:03,060
whatever Ingress there it goes to

312
00:15:03,060 --> 00:15:05,959
Varnish and so and so on

313
00:15:05,959 --> 00:15:08,100
and uh

314
00:15:08,100 --> 00:15:10,980
the web server usually or actually the

315
00:15:10,980 --> 00:15:13,139
one which is currently processing gets

316
00:15:13,139 --> 00:15:14,639
there gets the request from the previous

317
00:15:14,639 --> 00:15:15,899
guy

318
00:15:15,899 --> 00:15:19,260
so by default everything tends to be uh

319
00:15:19,260 --> 00:15:20,360
the

320
00:15:20,360 --> 00:15:23,820
previous guy's IP

321
00:15:23,820 --> 00:15:26,760
next question is the time

322
00:15:26,760 --> 00:15:32,040
when you're looking at the time in nginx

323
00:15:32,040 --> 00:15:33,839
logs

324
00:15:33,839 --> 00:15:38,300
then what time you're actually seeing

325
00:15:39,660 --> 00:15:42,620
any idea

326
00:15:43,079 --> 00:15:46,079
it's a time of end of request

327
00:15:46,079 --> 00:15:48,060
so if you are trying to kind of like

328
00:15:48,060 --> 00:15:49,820
find a race condition

329
00:15:49,820 --> 00:15:52,800
which request came first and crashed the

330
00:15:52,800 --> 00:15:53,579
site

331
00:15:53,579 --> 00:15:56,100
then you are going to find my 30 second

332
00:15:56,100 --> 00:16:00,660
requests way after things happen well

333
00:16:00,660 --> 00:16:02,399
there is no milliseconds because and

334
00:16:02,399 --> 00:16:04,399
when we are talking about

335
00:16:04,399 --> 00:16:07,800
4 million requests per minute then you

336
00:16:07,800 --> 00:16:09,240
need to couple of have a couple of

337
00:16:09,240 --> 00:16:11,399
decimals to think about that

338
00:16:11,399 --> 00:16:12,959
the duration

339
00:16:12,959 --> 00:16:16,079
and also what served that was it

340
00:16:16,079 --> 00:16:18,720
actually this uh application maybe it

341
00:16:18,720 --> 00:16:20,519
was a statical file and I should kind of

342
00:16:20,519 --> 00:16:22,980
like completely get rid of that uh from

343
00:16:22,980 --> 00:16:26,339
the logs to make it more easily readable

344
00:16:26,339 --> 00:16:30,480
uh fortunately the the version I was

345
00:16:30,480 --> 00:16:31,760
using there

346
00:16:31,760 --> 00:16:35,480
was kubernetes

347
00:16:35,480 --> 00:16:39,380
Ingress nginx which has a default

348
00:16:39,380 --> 00:16:43,320
logging format I think unlike Engineers

349
00:16:43,320 --> 00:16:45,000
Ingress there is a completely different

350
00:16:45,000 --> 00:16:46,800
configurations engineering Ingress and

351
00:16:46,800 --> 00:16:50,699
Ingress nginx and I especially shout out

352
00:16:50,699 --> 00:16:53,040
to my colleagues who have named the

353
00:16:53,040 --> 00:16:55,740
Ingress engineics as nginx Ingress so

354
00:16:55,740 --> 00:16:57,240
when you are whenever I'm going to look

355
00:16:57,240 --> 00:16:59,639
for a configuration settings I'm kind of

356
00:16:59,639 --> 00:17:01,399
like just going crazy

357
00:17:01,399 --> 00:17:05,179
uh anyway it has cool things it actually

358
00:17:05,179 --> 00:17:08,339
tells it has correct IP address

359
00:17:08,339 --> 00:17:10,640
uh time okay

360
00:17:10,640 --> 00:17:13,980
it does have the time it took to serve

361
00:17:13,980 --> 00:17:16,199
time actually how it how long it took to

362
00:17:16,199 --> 00:17:19,559
talk to Upstream there is also a

363
00:17:19,559 --> 00:17:22,500
specific IP of this Upstream service and

364
00:17:22,500 --> 00:17:25,199
then I know aha okay this one went to

365
00:17:25,199 --> 00:17:27,119
these guys and now I can start looking

366
00:17:27,119 --> 00:17:30,540
what they did there so providing more

367
00:17:30,540 --> 00:17:33,660
information is log files is something

368
00:17:33,660 --> 00:17:35,059
that

369
00:17:35,059 --> 00:17:38,340
when you are setting up the system uh

370
00:17:38,340 --> 00:17:40,020
which is better than the first time

371
00:17:40,020 --> 00:17:43,039
first thing because afterwards everybody

372
00:17:43,039 --> 00:17:46,140
forgets that uh

373
00:17:46,140 --> 00:17:48,059
uh there is a need to kind of like

374
00:17:48,059 --> 00:17:50,160
configure the server because server

375
00:17:50,160 --> 00:17:52,020
usually gets together like configured

376
00:17:52,020 --> 00:17:53,640
the first thing and nobody looks at that

377
00:17:53,640 --> 00:17:55,580
later

378
00:17:55,580 --> 00:17:59,299
this is now a bit uh

379
00:17:59,299 --> 00:18:02,820
wider View and uh while it is actually

380
00:18:02,820 --> 00:18:05,880
copied from Excel because I needed to

381
00:18:05,880 --> 00:18:09,419
get this data somewhere on one page this

382
00:18:09,419 --> 00:18:13,880
is actually from Google Cloud's

383
00:18:13,880 --> 00:18:16,460
uh what's the

384
00:18:16,460 --> 00:18:18,480
stackdriver or whatever is there the

385
00:18:18,480 --> 00:18:21,539
logging logging system so the same

386
00:18:21,539 --> 00:18:25,860
requests I showed have actually three

387
00:18:25,860 --> 00:18:27,299
different types

388
00:18:27,299 --> 00:18:30,299
so we have the end of request processing

389
00:18:30,299 --> 00:18:32,100
time which uh thankfully is very

390
00:18:32,100 --> 00:18:34,620
informative I know when nothing when

391
00:18:34,620 --> 00:18:35,700
nothing stopped happening where

392
00:18:35,700 --> 00:18:38,160
everything stopped happening there is a

393
00:18:38,160 --> 00:18:40,559
time of receiving the log line

394
00:18:40,559 --> 00:18:43,200
and usually the first one is the time

395
00:18:43,200 --> 00:18:45,960
the lock was received in some kind of

396
00:18:45,960 --> 00:18:49,020
logging system it is very common when

397
00:18:49,020 --> 00:18:52,140
you're loading the logs into pushing

398
00:18:52,140 --> 00:18:54,120
them into elastic or wherever you are

399
00:18:54,120 --> 00:18:59,280
running them that they tend to have the

400
00:18:59,280 --> 00:19:01,260
time you are seeing is the time it was

401
00:19:01,260 --> 00:19:04,980
received and this is kind of like uh it

402
00:19:04,980 --> 00:19:07,320
usually takes a bit of configuration or

403
00:19:07,320 --> 00:19:09,240
making sure the field is named timestamp

404
00:19:09,240 --> 00:19:11,039
or actually looks like a timestamp or

405
00:19:11,039 --> 00:19:12,120
something like that

406
00:19:12,120 --> 00:19:14,340
but uh

407
00:19:14,340 --> 00:19:16,260
yeah probably this time doesn't look

408
00:19:16,260 --> 00:19:18,419
automatically like that

409
00:19:18,419 --> 00:19:20,760
so

410
00:19:20,760 --> 00:19:22,620
we actually do need

411
00:19:22,620 --> 00:19:25,799
did we get three quests in which order

412
00:19:25,799 --> 00:19:29,820
they actually came in and then we can

413
00:19:29,820 --> 00:19:32,100
start off trying to see that what is the

414
00:19:32,100 --> 00:19:35,100
relation what why did things go the way

415
00:19:35,100 --> 00:19:37,860
they went because I think one of the

416
00:19:37,860 --> 00:19:41,580
very common problems when things start

417
00:19:41,580 --> 00:19:43,799
to snowball is

418
00:19:43,799 --> 00:19:45,840
that there is some kind of database lock

419
00:19:45,840 --> 00:19:47,400
something in the back end is happening

420
00:19:47,400 --> 00:19:49,320
or maybe the server is making some

421
00:19:49,320 --> 00:19:53,640
external request to somewhere and this

422
00:19:53,640 --> 00:19:58,340
kind of like uh request stall and uh

423
00:19:58,340 --> 00:20:02,700
server eventually is dead

424
00:20:02,700 --> 00:20:05,160
this is actually how I like my locks

425
00:20:05,160 --> 00:20:08,160
this is my own lock configuration my

426
00:20:08,160 --> 00:20:09,559
default

427
00:20:09,559 --> 00:20:13,620
configuration for nginx if anybody ever

428
00:20:13,620 --> 00:20:16,440
wants that like you are welcome to I

429
00:20:16,440 --> 00:20:19,500
don't know find me on whatever Media or

430
00:20:19,500 --> 00:20:22,740
here ask me later I can I can show you

431
00:20:22,740 --> 00:20:26,480
that I have also on next next slide but

432
00:20:26,480 --> 00:20:30,000
I do have the request start time I have

433
00:20:30,000 --> 00:20:32,039
the request end time I have a request

434
00:20:32,039 --> 00:20:34,980
duration okay I could calculate having

435
00:20:34,980 --> 00:20:37,380
one time and duration I can calculate

436
00:20:37,380 --> 00:20:39,720
all that time but it's kind of like very

437
00:20:39,720 --> 00:20:42,299
convenient to have them so I can sort

438
00:20:42,299 --> 00:20:47,460
the request by start or end and if I see

439
00:20:47,460 --> 00:20:49,260
like for example that all of the

440
00:20:49,260 --> 00:20:51,360
requests started ending at the same

441
00:20:51,360 --> 00:20:54,059
moment it means this moment is when the

442
00:20:54,059 --> 00:20:56,700
lock was released wherever and I I can

443
00:20:56,700 --> 00:21:00,000
confirm this was a lock related problem

444
00:21:00,000 --> 00:21:02,820
her remote address user if it's logged

445
00:21:02,820 --> 00:21:05,340
on remote Port the remote Port is also

446
00:21:05,340 --> 00:21:08,460
cool because when you're looking at

447
00:21:08,460 --> 00:21:10,500
all of the traffic coming from mobile

448
00:21:10,500 --> 00:21:15,480
operators who are doing that ip4

449
00:21:15,480 --> 00:21:18,120
then probably the only way if they are

450
00:21:18,120 --> 00:21:20,640
locking how you can go to the police and

451
00:21:20,640 --> 00:21:22,440
find out the person who is behind that

452
00:21:22,440 --> 00:21:25,740
is if you are knowing the remote Port if

453
00:21:25,740 --> 00:21:27,799
they are logging it

454
00:21:27,799 --> 00:21:31,200
request length how much data was sent

455
00:21:31,200 --> 00:21:33,539
during the request this is a post

456
00:21:33,539 --> 00:21:35,940
request I'm showing here so I know ah

457
00:21:35,940 --> 00:21:39,120
okay it's five kilobytes looking at the

458
00:21:39,120 --> 00:21:41,280
same application at some time I started

459
00:21:41,280 --> 00:21:44,159
seeing very long post requests so I knew

460
00:21:44,159 --> 00:21:46,440
there was a problem at the site which

461
00:21:46,440 --> 00:21:49,440
was sending data to this particular API

462
00:21:49,440 --> 00:21:51,299
for some reason the requests to grow

463
00:21:51,299 --> 00:21:54,140
growing so I needed to fix the front end

464
00:21:54,140 --> 00:21:57,240
two interesting things request URI and

465
00:21:57,240 --> 00:21:59,640
URI what's the difference

466
00:21:59,640 --> 00:22:02,400
one is the one which web server got and

467
00:22:02,400 --> 00:22:04,860
the other one is actually what script

468
00:22:04,860 --> 00:22:07,799
was executed as a result of that

469
00:22:07,799 --> 00:22:10,500
which again kind of often helps me

470
00:22:10,500 --> 00:22:12,659
understand what's going on arguments

471
00:22:12,659 --> 00:22:15,840
that are not there is a hosts oh and I

472
00:22:15,840 --> 00:22:18,360
have a couple of host names the host is

473
00:22:18,360 --> 00:22:21,720
actually the host header of the request

474
00:22:21,720 --> 00:22:24,600
yeah you're saying it can be forged cool

475
00:22:24,600 --> 00:22:27,000
if I see it forged then this is

476
00:22:27,000 --> 00:22:29,760
interesting information for me so I need

477
00:22:29,760 --> 00:22:32,940
to probably look at these requests more

478
00:22:32,940 --> 00:22:36,240
and also actual hostname which is the

479
00:22:36,240 --> 00:22:39,299
server from the web server configuration

480
00:22:39,299 --> 00:22:41,700
so I know exactly which part of web

481
00:22:41,700 --> 00:22:43,620
server was serving that status points

482
00:22:43,620 --> 00:22:45,840
different content type again very cool

483
00:22:45,840 --> 00:22:48,120
to know what the server actually thinks

484
00:22:48,120 --> 00:22:51,480
it's sent back it's Json okay but if

485
00:22:51,480 --> 00:22:53,400
let's say if we are I don't know getting

486
00:22:53,400 --> 00:22:56,820
maybe accessing CSS and it outputs I

487
00:22:56,820 --> 00:22:59,900
don't know HTML it's a bit suspicious

488
00:22:59,900 --> 00:23:03,480
fbm1 did it use actual application so I

489
00:23:03,480 --> 00:23:06,720
can very easily sort out from the logs

490
00:23:06,720 --> 00:23:10,380
the lines that are running the code

491
00:23:10,380 --> 00:23:12,419
because if it was not running the code

492
00:23:12,419 --> 00:23:14,220
probably it's not causing me DDOS

493
00:23:14,220 --> 00:23:16,320
problems it's not something that uh

494
00:23:16,320 --> 00:23:18,659
hackers are trying to I don't know abuse

495
00:23:18,659 --> 00:23:22,799
so very information Upstream response

496
00:23:22,799 --> 00:23:24,299
time which might be different from the

497
00:23:24,299 --> 00:23:26,940
request time because it takes time and

498
00:23:26,940 --> 00:23:28,500
also the difference between these two

499
00:23:28,500 --> 00:23:32,100
times uh shows me that uh okay if if

500
00:23:32,100 --> 00:23:34,500
they have closed it's not a problem but

501
00:23:34,500 --> 00:23:36,000
if they are very separate there is a

502
00:23:36,000 --> 00:23:38,600
question why does the

503
00:23:38,600 --> 00:23:41,480
response from the Upstream

504
00:23:41,480 --> 00:23:44,400
take so much but the full request is

505
00:23:44,400 --> 00:23:47,640
longer again when you're looking at the

506
00:23:47,640 --> 00:23:51,179
servers doing bad stuff during attacks

507
00:23:51,179 --> 00:23:53,280
there are moments when the two things

508
00:23:53,280 --> 00:23:56,820
get kind of like uh much separated

509
00:23:56,820 --> 00:24:00,059
and they're also very cool and fakeable

510
00:24:00,059 --> 00:24:02,940
uh header x414

511
00:24:02,940 --> 00:24:05,580
we have been coming back to that but I

512
00:24:05,580 --> 00:24:09,419
recall uh Ethan once uh mentioned that

513
00:24:09,419 --> 00:24:12,120
when you were looking at spectixes kind

514
00:24:12,120 --> 00:24:14,700
of access logs it was interesting to see

515
00:24:14,700 --> 00:24:17,400
that people snooping around were using

516
00:24:17,400 --> 00:24:20,220
some kind of vpns or proxies and this

517
00:24:20,220 --> 00:24:22,559
proxy is very nicely added the X forward

518
00:24:22,559 --> 00:24:24,179
in four headers so it was also actually

519
00:24:24,179 --> 00:24:26,880
visible but it what it was

520
00:24:26,880 --> 00:24:29,400
So currently it's actually interesting

521
00:24:29,400 --> 00:24:31,740
the main address is a z-scaler and then

522
00:24:31,740 --> 00:24:33,780
the four or the four addresses some from

523
00:24:33,780 --> 00:24:35,700
from South Africa

524
00:24:35,700 --> 00:24:38,520
that scalar is basically what it says

525
00:24:38,520 --> 00:24:41,520
zero trust provider they are describing

526
00:24:41,520 --> 00:24:43,799
themselves as a leading zero trust

527
00:24:43,799 --> 00:24:45,780
whatever stuck in the world

528
00:24:45,780 --> 00:24:48,000
so basically as somebody is using their

529
00:24:48,000 --> 00:24:51,419
Network and accessing this site

530
00:24:51,419 --> 00:24:54,080
the configuration

531
00:24:54,080 --> 00:24:57,900
uh actually I'd like to see same thing

532
00:24:57,900 --> 00:25:02,580
also in the health charts of uh English

533
00:25:02,580 --> 00:25:05,940
engineers and the other one as well is

534
00:25:05,940 --> 00:25:09,120
calculating some specific values

535
00:25:09,120 --> 00:25:12,240
uh like uh I'm setting because it can be

536
00:25:12,240 --> 00:25:13,620
only set on the server level so it's

537
00:25:13,620 --> 00:25:15,659
like below

538
00:25:15,659 --> 00:25:17,700
I'm setting the start time you can

539
00:25:17,700 --> 00:25:19,799
actually in nginx record the start time

540
00:25:19,799 --> 00:25:23,220
of request if you are configuring a

541
00:25:23,220 --> 00:25:25,020
variable yourself

542
00:25:25,020 --> 00:25:27,659
so this will be the start and the final

543
00:25:27,659 --> 00:25:30,120
request time will be just the end of the

544
00:25:30,120 --> 00:25:32,720
request which is usually locked

545
00:25:32,720 --> 00:25:36,600
why I'm doing this safe numeric values

546
00:25:36,600 --> 00:25:40,279
well this is because I like to put the

547
00:25:40,279 --> 00:25:41,960
numbers

548
00:25:41,960 --> 00:25:46,559
in Json as numbers not strings makes it

549
00:25:46,559 --> 00:25:48,659
easier for later to interpret

550
00:25:48,659 --> 00:25:51,059
turns out that it is very important

551
00:25:51,059 --> 00:25:52,400
whenever your

552
00:25:52,400 --> 00:25:55,799
configuring your log ingest to make sure

553
00:25:55,799 --> 00:25:58,679
everything gets proper data type

554
00:25:58,679 --> 00:26:01,200
for example we found out during lock

555
00:26:01,200 --> 00:26:03,600
Shields we wanted to make some filters

556
00:26:03,600 --> 00:26:06,500
for IP addresses and use consider

557
00:26:06,500 --> 00:26:11,400
notation not adding iprs is one by one

558
00:26:11,400 --> 00:26:13,440
to see what the red team is doing of

559
00:26:13,440 --> 00:26:14,299
course

560
00:26:14,299 --> 00:26:19,140
or maybe real users and turns out that

561
00:26:19,140 --> 00:26:21,240
if it's string it doesn't work it needs

562
00:26:21,240 --> 00:26:22,799
to be IP address so you need to make

563
00:26:22,799 --> 00:26:24,720
sure all of the formats are always

564
00:26:24,720 --> 00:26:28,140
correct and it's always again better to

565
00:26:28,140 --> 00:26:30,000
do these things at the very beginning of

566
00:26:30,000 --> 00:26:32,460
your logging process

567
00:26:32,460 --> 00:26:35,360
and then get the real IP

568
00:26:35,360 --> 00:26:38,159
again my examples are from from my life

569
00:26:38,159 --> 00:26:41,460
where I'm behind Cloud fair so here is

570
00:26:41,460 --> 00:26:43,620
two things first I'm using Cloud for

571
00:26:43,620 --> 00:26:46,679
specific header I can be sure that it's

572
00:26:46,679 --> 00:26:48,900
a cloud fair is not letting to letting

573
00:26:48,900 --> 00:26:52,559
it be letting it be faked I've tried at

574
00:26:52,559 --> 00:26:54,419
least I couldn't maybe some some people

575
00:26:54,419 --> 00:26:57,120
can and only if it's coming from their

576
00:26:57,120 --> 00:26:59,520
IP addresses

577
00:26:59,520 --> 00:27:02,880
um to be sure that it's not spoofed and

578
00:27:02,880 --> 00:27:05,840
I can always uh trust that

579
00:27:05,840 --> 00:27:10,080
interestingly the IPR set of clover has

580
00:27:10,080 --> 00:27:13,740
changed over past years

581
00:27:13,740 --> 00:27:16,919
I think not not very often but there was

582
00:27:16,919 --> 00:27:19,980
a change there was a part of I think it

583
00:27:19,980 --> 00:27:23,720
was this 104 16 or something like that

584
00:27:23,720 --> 00:27:26,760
where they took one's part which is

585
00:27:26,760 --> 00:27:30,299
currently used for Apple has for iCloud

586
00:27:30,299 --> 00:27:33,059
Pro users some private browsing solution

587
00:27:33,059 --> 00:27:36,059
which is using cloudflare Akamai and

588
00:27:36,059 --> 00:27:39,059
fastly networks to root the traffic

589
00:27:39,059 --> 00:27:41,880
so it's going there also Cloud first own

590
00:27:41,880 --> 00:27:44,400
zero trust I think is using the eyepiece

591
00:27:44,400 --> 00:27:46,980
from that range so it turns out that

592
00:27:46,980 --> 00:27:49,320
when you don't know that you can

593
00:27:49,320 --> 00:27:51,720
actually start thinking that okay how

594
00:27:51,720 --> 00:27:53,400
are the users coming from cloudflare or

595
00:27:53,400 --> 00:27:54,840
what's happening

596
00:27:54,840 --> 00:27:58,500
I told her doesn't provide their users

597
00:27:58,500 --> 00:28:01,279
of Ip of course in X4 or before

598
00:28:01,279 --> 00:28:05,700
uh funny part with that is whenever you

599
00:28:05,700 --> 00:28:07,860
are setting up web applications

600
00:28:07,860 --> 00:28:11,179
there is this chain of all of these

601
00:28:11,179 --> 00:28:15,240
participating points that all need to

602
00:28:15,240 --> 00:28:19,020
get the first and correct IP address

603
00:28:19,020 --> 00:28:20,840
so

604
00:28:20,840 --> 00:28:24,600
my my configuration on that part is that

605
00:28:24,600 --> 00:28:26,580
when I get it in the Ingress I make sure

606
00:28:26,580 --> 00:28:28,260
it's Cloud for IP I make sure nobody

607
00:28:28,260 --> 00:28:30,720
else but go upload for a gun access this

608
00:28:30,720 --> 00:28:34,679
uh our Ingress and then I

609
00:28:34,679 --> 00:28:36,980
uh

610
00:28:36,980 --> 00:28:40,620
Uber ride the X forwarded four with this

611
00:28:40,620 --> 00:28:43,020
information that I know to be correct so

612
00:28:43,020 --> 00:28:45,120
there is no question because X forward

613
00:28:45,120 --> 00:28:48,120
E4 can contain multiply purchases and

614
00:28:48,120 --> 00:28:49,919
it's always the question did the

615
00:28:49,919 --> 00:28:51,539
programmer actually read the manual

616
00:28:51,539 --> 00:28:54,000
correctly and decide if they need to

617
00:28:54,000 --> 00:28:56,159
take the first or last one or maybe the

618
00:28:56,159 --> 00:28:58,140
middle one or I don't know put them all

619
00:28:58,140 --> 00:28:59,640
together

620
00:28:59,640 --> 00:29:02,880
so all of this path and uh

621
00:29:02,880 --> 00:29:05,340
it's just uh I'm just kind of like

622
00:29:05,340 --> 00:29:08,700
starting from the in inside most thing

623
00:29:08,700 --> 00:29:12,299
let's say PHP setting my X4 or the four

624
00:29:12,299 --> 00:29:14,580
header and seeing if it comes the stupid

625
00:29:14,580 --> 00:29:16,440
number comes through if it comes it's

626
00:29:16,440 --> 00:29:20,039
bad if it's some internal IP it's bad so

627
00:29:20,039 --> 00:29:23,820
I kind of like go to set up to the end

628
00:29:23,820 --> 00:29:27,480
because there is always some smarter

629
00:29:27,480 --> 00:29:29,640
somewhere who has decided to implement

630
00:29:29,640 --> 00:29:32,520
whatever they found on stack Exchange

631
00:29:32,520 --> 00:29:34,500
so when you're looking from getting uh

632
00:29:34,500 --> 00:29:36,539
for instruction to creating client Type

633
00:29:36,539 --> 00:29:41,220
e in PHP you are probably arriving on

634
00:29:41,220 --> 00:29:42,179
this page

635
00:29:42,179 --> 00:29:45,179
which has actually for some reason this

636
00:29:45,179 --> 00:29:47,580
one isn't the topmost transfer there is

637
00:29:47,580 --> 00:29:49,559
a lot more wrong on answers before you

638
00:29:49,559 --> 00:29:52,200
come to that for unknown reasons maybe

639
00:29:52,200 --> 00:29:53,760
it's so down because it's a security

640
00:29:53,760 --> 00:29:56,279
problem so say they are having those

641
00:29:56,279 --> 00:29:58,500
comments which uh so those answers which

642
00:29:58,500 --> 00:30:00,480
don't explicitly say they are security

643
00:30:00,480 --> 00:30:03,320
problems up there

644
00:30:05,299 --> 00:30:08,580
editors note and comment this is bad

645
00:30:08,580 --> 00:30:09,480
thing

646
00:30:09,480 --> 00:30:12,600
but yeah somebody always does that so

647
00:30:12,600 --> 00:30:14,159
you have kind of like passed everything

648
00:30:14,159 --> 00:30:16,020
through they are going to find from

649
00:30:16,020 --> 00:30:19,020
somewhere from some rare header the

650
00:30:19,020 --> 00:30:20,580
wrong information and using it because

651
00:30:20,580 --> 00:30:22,220
it's so cool

652
00:30:22,220 --> 00:30:25,140
client type views also

653
00:30:25,140 --> 00:30:28,380
uh let's now look at the things uh once

654
00:30:28,380 --> 00:30:32,640
more from the uh

655
00:30:32,640 --> 00:30:36,260
so what was actually behind this picture

656
00:30:36,260 --> 00:30:40,559
that I was able to understand thanks to

657
00:30:40,559 --> 00:30:43,980
just looking at the count of requests

658
00:30:43,980 --> 00:30:46,980
uh

659
00:30:47,640 --> 00:30:51,179
this was a nice MP4 video

660
00:30:51,179 --> 00:30:54,480
sent to customer our cover customer by a

661
00:30:54,480 --> 00:30:56,279
concerned citizen

662
00:30:56,279 --> 00:30:59,159
who demonstrated that they found a login

663
00:30:59,159 --> 00:31:01,760
page and

664
00:31:01,760 --> 00:31:04,140
opening process inspector there is a

665
00:31:04,140 --> 00:31:06,240
request and then they are going with

666
00:31:06,240 --> 00:31:08,940
that to copying the things and going

667
00:31:08,940 --> 00:31:10,740
with these into something called open

668
00:31:10,740 --> 00:31:13,860
bullet which probably is a good tool for

669
00:31:13,860 --> 00:31:16,140
you to test your own servers in the same

670
00:31:16,140 --> 00:31:17,039
manner

671
00:31:17,039 --> 00:31:19,919
and I said okay I understand okay you're

672
00:31:19,919 --> 00:31:23,100
doing a login for end times uh the

673
00:31:23,100 --> 00:31:25,799
hashing of the password probably takes

674
00:31:25,799 --> 00:31:27,899
time it's okay it's it's easy to crush

675
00:31:27,899 --> 00:31:29,039
the server

676
00:31:29,039 --> 00:31:33,320
and then I watched uh

677
00:31:33,840 --> 00:31:37,320
why does it say error 400

678
00:31:37,320 --> 00:31:40,679
not something like uh bad password or or

679
00:31:40,679 --> 00:31:43,080
whatever no not matching

680
00:31:43,080 --> 00:31:44,820
and then I found that

681
00:31:44,820 --> 00:31:48,059
huh script kid he didn't notice that the

682
00:31:48,059 --> 00:31:52,020
original uh question had a content type

683
00:31:52,020 --> 00:31:54,120
of application Json

684
00:31:54,120 --> 00:31:57,140
this one had uh

685
00:31:57,140 --> 00:32:00,419
form encoded so there's some kind of a

686
00:32:00,419 --> 00:32:02,640
middleware API decided that okay I'm not

687
00:32:02,640 --> 00:32:04,140
going to do anything

688
00:32:04,140 --> 00:32:08,340
and despite being the API doing some

689
00:32:08,340 --> 00:32:11,520
decision on the most Elementary part of

690
00:32:11,520 --> 00:32:13,380
just making sure that okay this doesn't

691
00:32:13,380 --> 00:32:16,200
look like a Json request that's not

692
00:32:16,200 --> 00:32:17,520
serve that

693
00:32:17,520 --> 00:32:20,460
he was able to take that down

694
00:32:20,460 --> 00:32:22,620
uh

695
00:32:22,620 --> 00:32:25,200
there was a

696
00:32:25,200 --> 00:32:27,899
wrong content type I think it was

697
00:32:27,899 --> 00:32:29,580
related to the question that just

698
00:32:29,580 --> 00:32:35,039
somehow the node.js backend died again

699
00:32:35,039 --> 00:32:36,360
because

700
00:32:36,360 --> 00:32:38,640
I've seen a lot of cases where people

701
00:32:38,640 --> 00:32:40,320
don't understand that they know no

702
00:32:40,320 --> 00:32:42,179
chairs application when you launch it

703
00:32:42,179 --> 00:32:44,340
it's basically a single thread or let's

704
00:32:44,340 --> 00:32:46,919
say thing single worker you need to kind

705
00:32:46,919 --> 00:32:48,539
of like make sure there is more of them

706
00:32:48,539 --> 00:32:49,679
doing the work

707
00:32:49,679 --> 00:32:54,000
so probably that's what uh died there

708
00:32:54,000 --> 00:32:57,419
uh alternative font scenario which I've

709
00:32:57,419 --> 00:33:01,399
seen for multiple times is

710
00:33:01,399 --> 00:33:04,260
more from requests so forward it to

711
00:33:04,260 --> 00:33:06,539
whatever is behind the API elastic

712
00:33:06,539 --> 00:33:08,700
which gets an error which is not caught

713
00:33:08,700 --> 00:33:12,899
promises are not fulfilled and system

714
00:33:12,899 --> 00:33:15,120
dies very cool

715
00:33:15,120 --> 00:33:20,120
that's now the second DDOS mitigation

716
00:33:20,120 --> 00:33:26,639
it started with a request set like that

717
00:33:26,820 --> 00:33:30,419
it quickly went up into trying to

718
00:33:30,419 --> 00:33:33,059
provide changing URL and bypassing

719
00:33:33,059 --> 00:33:34,760
caching

720
00:33:34,760 --> 00:33:36,960
interestingly this is wrong query

721
00:33:36,960 --> 00:33:38,640
parameter they didn't check what's the

722
00:33:38,640 --> 00:33:41,940
correct query in this system so it

723
00:33:41,940 --> 00:33:44,279
didn't actually try to run unique

724
00:33:44,279 --> 00:33:46,740
queries for everything

725
00:33:46,740 --> 00:33:49,140
it still crashed because there was just

726
00:33:49,140 --> 00:33:50,760
so much of them

727
00:33:50,760 --> 00:33:52,740
and

728
00:33:52,740 --> 00:33:57,080
the interesting part is that the kind of

729
00:33:57,080 --> 00:33:59,760
starting of the cloudflare cloudflare

730
00:33:59,760 --> 00:34:02,820
has very good level 70 dos rules

731
00:34:02,820 --> 00:34:05,220
there is basically signature number 15

732
00:34:05,220 --> 00:34:08,219
which I think is that it has a strange

733
00:34:08,219 --> 00:34:09,379
looking

734
00:34:09,379 --> 00:34:13,800
user agents but the most probable one is

735
00:34:13,800 --> 00:34:15,839
that the origin is we're going to give

736
00:34:15,839 --> 00:34:16,859
errors

737
00:34:16,859 --> 00:34:19,379
so basically Cloud first level seven

738
00:34:19,379 --> 00:34:22,139
DDOS protection very much depends on

739
00:34:22,139 --> 00:34:24,000
your server dying

740
00:34:24,000 --> 00:34:26,460
so basically if you feel it's too much

741
00:34:26,460 --> 00:34:29,219
start giving error 500 Cloud for takes

742
00:34:29,219 --> 00:34:31,619
over just make sure you kind of like

743
00:34:31,619 --> 00:34:34,859
stop giving 500 later

744
00:34:34,859 --> 00:34:38,399
uh so this one was

745
00:34:38,399 --> 00:34:40,619
again four million requests I think the

746
00:34:40,619 --> 00:34:42,659
one minute and four million requests

747
00:34:42,659 --> 00:34:44,159
kind of like seems to be a repeating

748
00:34:44,159 --> 00:34:46,679
pattern here something like 4000 IP

749
00:34:46,679 --> 00:34:49,320
addresses doing somewhat more than

750
00:34:49,320 --> 00:34:53,280
thousand requests but it's uh not that

751
00:34:53,280 --> 00:34:55,800
much and unfortunately most of the rate

752
00:34:55,800 --> 00:34:57,900
limiting is very stupid you can rate

753
00:34:57,900 --> 00:35:00,780
limit requests per IP

754
00:35:00,780 --> 00:35:03,359
and if they are doing thousand requests

755
00:35:03,359 --> 00:35:07,680
to basically the same uh URL then it's

756
00:35:07,680 --> 00:35:09,500
uh

757
00:35:09,500 --> 00:35:12,300
just uh for them it's just a thousand

758
00:35:12,300 --> 00:35:13,980
requests which is completely different

759
00:35:13,980 --> 00:35:15,660
than actual user traffic which is

760
00:35:15,660 --> 00:35:17,640
usually requesting different files

761
00:35:17,640 --> 00:35:19,800
different AP endpoints and so on

762
00:35:19,800 --> 00:35:22,980
and we also learned that recovery took a

763
00:35:22,980 --> 00:35:26,160
way uh longer why did it take longer

764
00:35:26,160 --> 00:35:29,280
because uh

765
00:35:29,280 --> 00:35:31,560
all of these paths

766
00:35:31,560 --> 00:35:33,540
somewhere it was stuck

767
00:35:33,540 --> 00:35:35,579
there was probably some problems with

768
00:35:35,579 --> 00:35:36,780
Ingress

769
00:35:36,780 --> 00:35:40,380
there was probably some PHP adapter

770
00:35:40,380 --> 00:35:42,540
application back there which was

771
00:35:42,540 --> 00:35:44,579
struggling it probably had overloaded

772
00:35:44,579 --> 00:35:48,420
the SQL database and whatever so until

773
00:35:48,420 --> 00:35:51,180
all of these queues kind of like empty

774
00:35:51,180 --> 00:35:54,900
themselves the site was down so one

775
00:35:54,900 --> 00:35:57,480
minute tdos

776
00:35:57,480 --> 00:36:01,200
even if the protections click kick in at

777
00:36:01,200 --> 00:36:02,220
uh

778
00:36:02,220 --> 00:36:04,740
second 30.

779
00:36:04,740 --> 00:36:08,040
then recovery from that might be

780
00:36:08,040 --> 00:36:10,260
actually maybe five minutes maybe eight

781
00:36:10,260 --> 00:36:12,599
minutes or something like that depending

782
00:36:12,599 --> 00:36:14,040
how well you have looked what actually

783
00:36:14,040 --> 00:36:16,619
is happening back there so that's the

784
00:36:16,619 --> 00:36:20,040
point where I went away from looking at

785
00:36:20,040 --> 00:36:20,880
the

786
00:36:20,880 --> 00:36:24,240
at the access logs and I started

787
00:36:24,240 --> 00:36:26,700
actually correlating the times

788
00:36:26,700 --> 00:36:29,880
to the logs I have about the different

789
00:36:29,880 --> 00:36:33,359
server components performance again

790
00:36:33,359 --> 00:36:35,220
that's why it's very important to have

791
00:36:35,220 --> 00:36:37,079
correct times because otherwise I can't

792
00:36:37,079 --> 00:36:39,119
correlate these things if it's kind of

793
00:36:39,119 --> 00:36:41,280
like lock has lines which are telling

794
00:36:41,280 --> 00:36:43,500
that when everything ended then how can

795
00:36:43,500 --> 00:36:46,440
I find the start of the attack

796
00:36:46,440 --> 00:36:48,000
uh

797
00:36:48,000 --> 00:36:51,720
which comes brings us me to the last

798
00:36:51,720 --> 00:36:53,040
example

799
00:36:53,040 --> 00:36:55,040
which is

800
00:36:55,040 --> 00:36:58,320
the detection has left the house

801
00:36:58,320 --> 00:37:01,859
uh it happened uh some time ago the

802
00:37:01,859 --> 00:37:04,260
official answer came later to me was

803
00:37:04,260 --> 00:37:06,839
that oops Yeah we had some kind of uh

804
00:37:06,839 --> 00:37:08,760
problem with false positives or false

805
00:37:08,760 --> 00:37:13,380
negatives in rule number whatever 15. uh

806
00:37:13,380 --> 00:37:15,300
I don't know how they didn't notice that

807
00:37:15,300 --> 00:37:17,520
the server is giving error 500 also but

808
00:37:17,520 --> 00:37:20,940
anyway somehow it happened and for me it

809
00:37:20,940 --> 00:37:24,000
also happened to be a very inconvenient

810
00:37:24,000 --> 00:37:26,460
case because it wasn't our Enterprise

811
00:37:26,460 --> 00:37:29,099
Cloud for it was client's own uh

812
00:37:29,099 --> 00:37:31,440
cloudflare Pro which is a very cool

813
00:37:31,440 --> 00:37:32,460
service

814
00:37:32,460 --> 00:37:35,099
but I can't get the gold Cloud for rocks

815
00:37:35,099 --> 00:37:37,020
and I'm actually

816
00:37:37,020 --> 00:37:41,280
kind of like I totally like that even if

817
00:37:41,280 --> 00:37:43,500
they let the Adidas protect Adidas is

818
00:37:43,500 --> 00:37:44,820
through and whatever mistakes that

819
00:37:44,820 --> 00:37:46,920
happen we are still friends because I

820
00:37:46,920 --> 00:37:50,400
can get super quality Json formatted

821
00:37:50,400 --> 00:37:52,740
logs that have start time with

822
00:37:52,740 --> 00:37:54,480
milliseconds and time with milliseconds

823
00:37:54,480 --> 00:37:56,820
what happened everything and I can just

824
00:37:56,820 --> 00:37:59,280
sit and take all of the four million

825
00:37:59,280 --> 00:38:02,700
requests and then start uh painfully

826
00:38:02,700 --> 00:38:04,440
going through them and seeing what

827
00:38:04,440 --> 00:38:06,200
actually happened

828
00:38:06,200 --> 00:38:10,320
uh this time I didn't have so what I had

829
00:38:10,320 --> 00:38:13,079
to do was I had to resolve to whatever

830
00:38:13,079 --> 00:38:15,180
the actual web servers had provided to

831
00:38:15,180 --> 00:38:18,300
me and it turned out that the yellow is

832
00:38:18,300 --> 00:38:20,220
the normal traffic and the peak is then

833
00:38:20,220 --> 00:38:23,460
uh what they were able to take until

834
00:38:23,460 --> 00:38:26,760
they went down so I think there is

835
00:38:26,760 --> 00:38:28,619
currently capacity I don't know by I

836
00:38:28,619 --> 00:38:32,520
maybe 15 20 times so I think kind of

837
00:38:32,520 --> 00:38:34,820
like for normal use everything is okay

838
00:38:34,820 --> 00:38:39,119
but of the 4 million requests I think I

839
00:38:39,119 --> 00:38:43,800
saw in uh in my side logs I think it was

840
00:38:43,800 --> 00:38:46,859
58 000 or something like that it was 1.6

841
00:38:46,859 --> 00:38:49,079
percent of the logs that I actually was

842
00:38:49,079 --> 00:38:51,000
able to get

843
00:38:51,000 --> 00:38:55,859
and uh started to work and uh draw the

844
00:38:55,859 --> 00:38:57,960
duration of that Tech and uh whatever

845
00:38:57,960 --> 00:38:59,339
happened

846
00:38:59,339 --> 00:39:00,960
and then I noticed

847
00:39:00,960 --> 00:39:02,280
that actually

848
00:39:02,280 --> 00:39:08,220
leave my locks were with error 499

849
00:39:08,220 --> 00:39:09,839
uh

850
00:39:09,839 --> 00:39:12,180
which means that the client has left the

851
00:39:12,180 --> 00:39:13,140
house

852
00:39:13,140 --> 00:39:15,839
uh basically the Adidas serves very

853
00:39:15,839 --> 00:39:17,339
nicely made the requests and didn't

854
00:39:17,339 --> 00:39:19,740
bother to wait until the end

855
00:39:19,740 --> 00:39:22,500
for my side all of this long chain or

856
00:39:22,500 --> 00:39:25,560
whole of the requests was booted up the

857
00:39:25,560 --> 00:39:27,480
application started working and the guy

858
00:39:27,480 --> 00:39:30,140
said okay I'm going to do something next

859
00:39:30,140 --> 00:39:34,920
so I had full of the request log of

860
00:39:34,920 --> 00:39:36,800
these things

861
00:39:36,800 --> 00:39:40,079
I also found that okay there was a fake

862
00:39:40,079 --> 00:39:42,560
IP addresses which turned out uh

863
00:39:42,560 --> 00:39:44,579
multi-car statuses and something like

864
00:39:44,579 --> 00:39:47,640
that uh I found out that the default

865
00:39:47,640 --> 00:39:50,400
Ingress configuration is trying to reach

866
00:39:50,400 --> 00:39:52,440
the back end three times

867
00:39:52,440 --> 00:39:55,619
so basically our own Ingress was

868
00:39:55,619 --> 00:39:57,599
increasing the load on application which

869
00:39:57,599 --> 00:39:59,700
was already down and instead of just

870
00:39:59,700 --> 00:40:03,480
saying error by 500 no guys go home no

871
00:40:03,480 --> 00:40:06,480
nothing to see here it just kept can I

872
00:40:06,480 --> 00:40:08,339
get something can I get something

873
00:40:08,339 --> 00:40:11,760
so uh and I also found that the log is

874
00:40:11,760 --> 00:40:13,380
very cool because the log at some point

875
00:40:13,380 --> 00:40:16,020
has one IP address and at some some

876
00:40:16,020 --> 00:40:18,300
point has at the same time the three IP

877
00:40:18,300 --> 00:40:21,900
address is separated by commas uh it's

878
00:40:21,900 --> 00:40:24,480
very difficult to parse that

879
00:40:24,480 --> 00:40:27,839
uh I also found the numbers went went

880
00:40:27,839 --> 00:40:29,400
back and because I didn't have any any

881
00:40:29,400 --> 00:40:31,140
real IP addresses I started looking what

882
00:40:31,140 --> 00:40:34,380
what fun I can do with uh fake IP

883
00:40:34,380 --> 00:40:36,359
addresses and I found that this

884
00:40:36,359 --> 00:40:40,140
particular botnet is just generating

885
00:40:40,140 --> 00:40:45,119
addresses with all four uh parts of ip4

886
00:40:45,119 --> 00:40:49,260
address starting from 100 to 255.

887
00:40:49,260 --> 00:40:51,960
so again interesting piece of

888
00:40:51,960 --> 00:40:56,460
information uh to uh to use

889
00:40:56,460 --> 00:40:58,800
that is also interesting that some of

890
00:40:58,800 --> 00:41:01,020
the IP ranges are not spoofed I'm not

891
00:41:01,020 --> 00:41:02,820
sure why

892
00:41:02,820 --> 00:41:06,660
and then I went actually to look how

893
00:41:06,660 --> 00:41:11,720
things are happening in the in the uh

894
00:41:11,720 --> 00:41:15,540
container land and I found that yes in

895
00:41:15,540 --> 00:41:18,180
50 seconds after start of the attack we

896
00:41:18,180 --> 00:41:20,220
detected that the hell aliveness has

897
00:41:20,220 --> 00:41:22,440
gone it's basically at the end of the

898
00:41:22,440 --> 00:41:24,000
attack

899
00:41:24,000 --> 00:41:26,280
it wanted to ask the server to go down

900
00:41:26,280 --> 00:41:27,420
nicely

901
00:41:27,420 --> 00:41:30,780
the server was busy dying it didn't

902
00:41:30,780 --> 00:41:34,380
listen so it took like totally five

903
00:41:34,380 --> 00:41:38,460
minutes to get to the point when uh it

904
00:41:38,460 --> 00:41:41,460
finally said okay container go out start

905
00:41:41,460 --> 00:41:44,220
new one so uh

906
00:41:44,220 --> 00:41:48,599
yeah that was uh the story and oh and I

907
00:41:48,599 --> 00:41:50,820
actually tried because of the worker

908
00:41:50,820 --> 00:41:55,260
connections uh uh got full uh on the

909
00:41:55,260 --> 00:41:58,260
second 23 of the attack when it was just

910
00:41:58,260 --> 00:42:00,119
ramping up

911
00:42:00,119 --> 00:42:01,440
so

912
00:42:01,440 --> 00:42:04,040
when you are whenever you are seeing uh

913
00:42:04,040 --> 00:42:07,260
anything happening do you try to get all

914
00:42:07,260 --> 00:42:11,339
of the data and which is available from

915
00:42:11,339 --> 00:42:14,160
that side and then go back to all of the

916
00:42:14,160 --> 00:42:16,200
steps and see what kind of information

917
00:42:16,200 --> 00:42:18,960
you can get from there for me I

918
00:42:18,960 --> 00:42:20,820
currently have these things in a memos

919
00:42:20,820 --> 00:42:23,820
so next time this happens to me I can

920
00:42:23,820 --> 00:42:25,740
easily copy the strings of the messages

921
00:42:25,740 --> 00:42:28,560
from here and just see the same things

922
00:42:28,560 --> 00:42:30,680
in the uh

923
00:42:30,680 --> 00:42:34,619
logs very easily

924
00:42:34,619 --> 00:42:37,280
thank you

925
00:42:41,280 --> 00:42:45,079
we have like one minute for questions

926
00:42:45,079 --> 00:42:48,140
considering there is also

927
00:42:48,140 --> 00:42:51,839
a price for that then it's possible that

928
00:42:51,839 --> 00:42:53,220
you're going to get the price if you ask

929
00:42:53,220 --> 00:42:55,520
now

930
00:43:06,660 --> 00:43:09,420
oh question

931
00:43:09,420 --> 00:43:11,160
this ah there's a question there maybe

932
00:43:11,160 --> 00:43:14,160
you can run the mic

933
00:43:14,160 --> 00:43:18,300
wait for a mic thanks

934
00:43:18,300 --> 00:43:21,720
dito dito's are usually result of uh

935
00:43:21,720 --> 00:43:24,359
asynchronous effort you need to provide

936
00:43:24,359 --> 00:43:25,920
more effort than an attacker does

937
00:43:25,920 --> 00:43:28,500
looking at that and looking at what

938
00:43:28,500 --> 00:43:30,240
you've learned in the in the last couple

939
00:43:30,240 --> 00:43:32,280
of years how would you design a new

940
00:43:32,280 --> 00:43:34,079
environment to be as resilient as

941
00:43:34,079 --> 00:43:36,380
possible

942
00:43:37,200 --> 00:43:41,240
oh it's uh

943
00:43:41,640 --> 00:43:44,280
I have been always thinking that I need

944
00:43:44,280 --> 00:43:49,619
to build smart protections on my side

945
00:43:49,619 --> 00:43:53,880
so I one thing I want to do which Cloud

946
00:43:53,880 --> 00:43:56,700
for currently doesn't let me do is to be

947
00:43:56,700 --> 00:43:59,640
able to detect if there will be the

948
00:43:59,640 --> 00:44:02,040
number a number of requests with exactly

949
00:44:02,040 --> 00:44:03,480
the same path

950
00:44:03,480 --> 00:44:09,960
is rising uh faster than expected so you

951
00:44:09,960 --> 00:44:10,819
can

952
00:44:10,819 --> 00:44:14,339
do the rate limiting by default It Is by

953
00:44:14,339 --> 00:44:18,859
IP but with nginx you can actually

954
00:44:18,859 --> 00:44:21,680
specify what you are using for a string

955
00:44:21,680 --> 00:44:25,800
and being able to modify that and decide

956
00:44:25,800 --> 00:44:28,500
when exactly you are going to just throw

957
00:44:28,500 --> 00:44:33,119
error 500s is something I've been trying

958
00:44:33,119 --> 00:44:36,060
to do for uh for a long time and and

959
00:44:36,060 --> 00:44:38,220
also using more security to to do that

960
00:44:38,220 --> 00:44:42,240
if that's available or then just

961
00:44:42,240 --> 00:44:45,180
Engineers own rate limiting so I can

962
00:44:45,180 --> 00:44:48,599
just throw my hands up and say oh header

963
00:44:48,599 --> 00:44:50,760
500 Cloud Fair please save me and

964
00:44:50,760 --> 00:44:53,160
hopefully in 30 seconds the ignite

965
00:44:53,160 --> 00:44:54,960
Plover and the White Horse or whatever

966
00:44:54,960 --> 00:44:57,780
arrives

967
00:44:57,780 --> 00:44:59,220
thanks

968
00:44:59,220 --> 00:45:02,280
we need some competition for the best

969
00:45:02,280 --> 00:45:05,420
question maybe one more

970
00:45:08,579 --> 00:45:11,060
anything

971
00:45:15,540 --> 00:45:17,339
well then

972
00:45:17,339 --> 00:45:21,540
yeah then the the only question is also

973
00:45:21,540 --> 00:45:24,900
the winning question and you can later

974
00:45:24,900 --> 00:45:30,720
pick a correctly sized uh uh hoodie or

975
00:45:30,720 --> 00:45:34,200
the voucher for twenty dollars in starch

976
00:45:34,200 --> 00:45:37,260
press Bookshop from the back of the

977
00:45:37,260 --> 00:45:42,079
stage thank you thank you to Peters

