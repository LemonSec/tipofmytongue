1
00:00:24,080 --> 00:00:25,199
all right so thank you everyone for

2
00:00:25,199 --> 00:00:27,760
coming my name is danny ademitas and i'm

3
00:00:27,760 --> 00:00:29,119
going to talk about the windows

4
00:00:29,119 --> 00:00:31,439
subsystem for linux i also want to give

5
00:00:31,439 --> 00:00:33,360
a special thanks to my

6
00:00:33,360 --> 00:00:34,880
partner steve rudd who helped me with

7
00:00:34,880 --> 00:00:36,239
this research but unfortunately could

8
00:00:36,239 --> 00:00:39,280
not be here today to present with me

9
00:00:39,280 --> 00:00:40,640
so we're going to do a quick overview

10
00:00:40,640 --> 00:00:42,800
we're going to talk about what is wsl

11
00:00:42,800 --> 00:00:44,960
some of the samples we've observed

12
00:00:44,960 --> 00:00:46,640
how to detect that and then a couple

13
00:00:46,640 --> 00:00:48,399
closing thoughts because we all love

14
00:00:48,399 --> 00:00:50,320
doing that stuff

15
00:00:50,320 --> 00:00:51,680
so for those who don't know me my name

16
00:00:51,680 --> 00:00:53,360
is danielle midas i'm currently a

17
00:00:53,360 --> 00:00:55,199
principal information security engineer

18
00:00:55,199 --> 00:00:57,360
at luma technologies and i focus

19
00:00:57,360 --> 00:00:59,280
obviously anthrax to telecommunications

20
00:00:59,280 --> 00:01:02,000
and isp networks um i've been doing this

21
00:01:02,000 --> 00:01:03,760
for a couple years now and you know my

22
00:01:03,760 --> 00:01:05,519
spare time if you see me afterwards i

23
00:01:05,519 --> 00:01:07,200
love talking about cooking running and

24
00:01:07,200 --> 00:01:09,119
my of course my dog cookie who is the

25
00:01:09,119 --> 00:01:11,680
better half

26
00:01:11,760 --> 00:01:13,360
so for those of you who don't know just

27
00:01:13,360 --> 00:01:14,880
real quick um i work for lumen

28
00:01:14,880 --> 00:01:16,880
technologies this was a rebranding of

29
00:01:16,880 --> 00:01:20,000
centurylink uh level three quest service

30
00:01:20,000 --> 00:01:24,080
um we do cdn dns resolvers um a whole

31
00:01:24,080 --> 00:01:26,240
bunch of things so basically what i want

32
00:01:26,240 --> 00:01:28,240
you to take away is we just have tons

33
00:01:28,240 --> 00:01:30,479
and tons of linux servers and embedded

34
00:01:30,479 --> 00:01:31,920
systems everywhere

35
00:01:31,920 --> 00:01:33,680
so one of my jobs is to try to find

36
00:01:33,680 --> 00:01:35,360
linux based malware that's obviously

37
00:01:35,360 --> 00:01:37,119
going to impact some of our systems and

38
00:01:37,119 --> 00:01:39,600
that will come in handy in a second

39
00:01:39,600 --> 00:01:40,960
and then as part of the luma

40
00:01:40,960 --> 00:01:42,960
technologies we have our own special

41
00:01:42,960 --> 00:01:44,320
threat intelligence division that we

42
00:01:44,320 --> 00:01:46,000
call black louis labs so we have

43
00:01:46,000 --> 00:01:47,520
wonderful stickers and t-shirts if you

44
00:01:47,520 --> 00:01:48,799
want to come see me afterwards you can

45
00:01:48,799 --> 00:01:51,200
get one and it's all cool

46
00:01:51,200 --> 00:01:52,159
so

47
00:01:52,159 --> 00:01:53,439
real quick we're going to talk about

48
00:01:53,439 --> 00:01:56,240
what is wsl or the windows subsystem for

49
00:01:56,240 --> 00:01:58,560
linux uh as you guys might have heard

50
00:01:58,560 --> 00:02:00,320
this is finally going to be the year of

51
00:02:00,320 --> 00:02:02,640
the links desktop almost

52
00:02:02,640 --> 00:02:05,119
um so for those who don't know wsl

53
00:02:05,119 --> 00:02:07,439
allows for almost a near native running

54
00:02:07,439 --> 00:02:09,679
of the actual linux system on your

55
00:02:09,679 --> 00:02:12,000
windows machine um version one was

56
00:02:12,000 --> 00:02:14,400
actually first launched in april of 2016

57
00:02:14,400 --> 00:02:16,080
and it was really good but it was still

58
00:02:16,080 --> 00:02:17,760
a little bit buggy but then they

59
00:02:17,760 --> 00:02:20,239
relaunched it in 2021

60
00:02:20,239 --> 00:02:22,000
with the version two and it was much

61
00:02:22,000 --> 00:02:24,720
smoother it's very good it's awesome um

62
00:02:24,720 --> 00:02:26,400
and this allows you to run a full linux

63
00:02:26,400 --> 00:02:28,239
kernel um you can actually install this

64
00:02:28,239 --> 00:02:30,400
either through a command line with wsl

65
00:02:30,400 --> 00:02:32,400
install with some conditions supplying

66
00:02:32,400 --> 00:02:34,160
such as admin privileges you have to

67
00:02:34,160 --> 00:02:35,680
power cycle device and do a couple other

68
00:02:35,680 --> 00:02:37,440
things or you can download through the

69
00:02:37,440 --> 00:02:39,280
app store um and this allows you to run

70
00:02:39,280 --> 00:02:42,560
things like ubuntu or debian cali alpine

71
00:02:42,560 --> 00:02:44,239
basically whatever your flav your

72
00:02:44,239 --> 00:02:45,200
favorite

73
00:02:45,200 --> 00:02:48,000
linux flavor is they probably have that

74
00:02:48,000 --> 00:02:49,440
and then again this kind of allows you

75
00:02:49,440 --> 00:02:51,440
to run all of those native linux

76
00:02:51,440 --> 00:02:53,360
terminal commands you guys all love so

77
00:02:53,360 --> 00:02:55,120
if you like doing you know apt get

78
00:02:55,120 --> 00:02:57,120
install package you can get through that

79
00:02:57,120 --> 00:02:59,519
you can mount file systems um it just

80
00:02:59,519 --> 00:03:00,959
kind of allows you to do some of those

81
00:03:00,959 --> 00:03:02,319
tasks a little bit easier when you're

82
00:03:02,319 --> 00:03:03,519
like a security engineer or

83
00:03:03,519 --> 00:03:05,200
administrator via that linux command

84
00:03:05,200 --> 00:03:06,959
line but still using your windows system

85
00:03:06,959 --> 00:03:10,159
so you don't have to have two laptops

86
00:03:10,159 --> 00:03:12,000
and again this is actually from the

87
00:03:12,000 --> 00:03:13,840
windows website about why you should

88
00:03:13,840 --> 00:03:16,239
actually use wsl um it's really good for

89
00:03:16,239 --> 00:03:18,000
things like version control on get so if

90
00:03:18,000 --> 00:03:19,440
you're doing software development or if

91
00:03:19,440 --> 00:03:21,120
you're a programmer it kind of makes

92
00:03:21,120 --> 00:03:22,879
your life a little bit easier you can do

93
00:03:22,879 --> 00:03:24,720
cross-platform development with visual

94
00:03:24,720 --> 00:03:26,720
studio everyone loves visual studio and

95
00:03:26,720 --> 00:03:28,560
makes life easier now you can code your

96
00:03:28,560 --> 00:03:30,560
linux projects using that

97
00:03:30,560 --> 00:03:32,480
you can set up docker containers that's

98
00:03:32,480 --> 00:03:33,680
the misspelling i should have caught

99
00:03:33,680 --> 00:03:36,000
that um you can also

100
00:03:36,000 --> 00:03:37,280
set up and connect to things like

101
00:03:37,280 --> 00:03:40,480
databases um you can even connect um usb

102
00:03:40,480 --> 00:03:42,239
drives and you can set up lux containers

103
00:03:42,239 --> 00:03:44,080
and again this is just all taken from

104
00:03:44,080 --> 00:03:47,040
the windows website

105
00:03:47,040 --> 00:03:49,280
so once i saw that monthly list i was

106
00:03:49,280 --> 00:03:50,959
like this is literally everything you

107
00:03:50,959 --> 00:03:52,080
would ever want us if you're a red

108
00:03:52,080 --> 00:03:53,840
teamer you can find the guy who's

109
00:03:53,840 --> 00:03:56,319
actually if i go back the person who's

110
00:03:56,319 --> 00:03:57,920
running diversion control of your get

111
00:03:57,920 --> 00:03:59,599
version that seems like a great box to

112
00:03:59,599 --> 00:04:01,280
be on someone who's continuing your

113
00:04:01,280 --> 00:04:03,040
docker containers connecting and setting

114
00:04:03,040 --> 00:04:05,280
up all of your databases this seems like

115
00:04:05,280 --> 00:04:06,799
that box you'd want to be on to give you

116
00:04:06,799 --> 00:04:08,239
the credentials to all of those other

117
00:04:08,239 --> 00:04:10,159
databases that you would be interested

118
00:04:10,159 --> 00:04:12,239
in in the future so when i saw this i

119
00:04:12,239 --> 00:04:13,840
was like this must be a huge

120
00:04:13,840 --> 00:04:15,760
vulnerability because or not

121
00:04:15,760 --> 00:04:17,680
vulnerability a risk because if you were

122
00:04:17,680 --> 00:04:19,680
gaining access to this particular system

123
00:04:19,680 --> 00:04:21,839
it could allow you access to all these

124
00:04:21,839 --> 00:04:23,440
other more sensitive systems start

125
00:04:23,440 --> 00:04:25,360
deeper within the network

126
00:04:25,360 --> 00:04:27,520
so that's why i kind of took a keen

127
00:04:27,520 --> 00:04:29,280
interest in this because i was like well

128
00:04:29,280 --> 00:04:30,560
again this could kind of lead to other

129
00:04:30,560 --> 00:04:31,520
things

130
00:04:31,520 --> 00:04:33,759
it also allows you to read files you can

131
00:04:33,759 --> 00:04:35,360
set up things like lux containers you

132
00:04:35,360 --> 00:04:37,520
can interact with removable media

133
00:04:37,520 --> 00:04:39,840
this is just a whole bunch of bad things

134
00:04:39,840 --> 00:04:41,360
and then the other really interesting

135
00:04:41,360 --> 00:04:43,360
aspect i want to talk about today is you

136
00:04:43,360 --> 00:04:46,000
can run an l file on the windows machine

137
00:04:46,000 --> 00:04:48,240
using the windows subsystem for linux

138
00:04:48,240 --> 00:04:49,840
and then as i started moving into this

139
00:04:49,840 --> 00:04:51,280
and i kind of talked to some friends who

140
00:04:51,280 --> 00:04:52,880
worked for edr firms there might be a

141
00:04:52,880 --> 00:04:54,880
couple people here they kind of adopted

142
00:04:54,880 --> 00:04:56,240
this approach where they're gonna treat

143
00:04:56,240 --> 00:04:58,080
l-files like disney characters treat

144
00:04:58,080 --> 00:05:00,560
family members named bruno we don't talk

145
00:05:00,560 --> 00:05:02,800
about bruno until it's about two hours

146
00:05:02,800 --> 00:05:04,240
too late and the house is literally

147
00:05:04,240 --> 00:05:05,840
crumbling down around us

148
00:05:05,840 --> 00:05:07,759
so i would like to take the next 20

149
00:05:07,759 --> 00:05:09,520
minutes to talk to you about bruno set

150
00:05:09,520 --> 00:05:10,960
with your house does not come crumbling

151
00:05:10,960 --> 00:05:13,599
down around you

152
00:05:14,160 --> 00:05:16,160
so this kind of started off with again

153
00:05:16,160 --> 00:05:18,320
my routine job of just looking for linux

154
00:05:18,320 --> 00:05:19,600
based malware they could be affecting

155
00:05:19,600 --> 00:05:20,800
our systems

156
00:05:20,800 --> 00:05:22,000
and we kind of create these things i

157
00:05:22,000 --> 00:05:23,680
call generic militias so it just looks

158
00:05:23,680 --> 00:05:25,520
for like weird heuristics weird file

159
00:05:25,520 --> 00:05:27,680
names and one day i came across this

160
00:05:27,680 --> 00:05:30,160
lovely file called bypass.elf

161
00:05:30,160 --> 00:05:31,919
and i was like wow what are you trying

162
00:05:31,919 --> 00:05:33,520
to bypass exactly this seems really

163
00:05:33,520 --> 00:05:34,639
interesting

164
00:05:34,639 --> 00:05:36,320
it was originally designed for a dubbing

165
00:05:36,320 --> 00:05:38,479
system it was compiled in python and it

166
00:05:38,479 --> 00:05:40,400
had a detection rate of zero and i was

167
00:05:40,400 --> 00:05:43,039
like congratulations guys you did it you

168
00:05:43,039 --> 00:05:46,240
bypassed edr i think you named it bypass

169
00:05:46,240 --> 00:05:50,960
so they were so close just so so close

170
00:05:51,280 --> 00:05:53,360
so for those of you who have been around

171
00:05:53,360 --> 00:05:54,880
you guys might know this um but if

172
00:05:54,880 --> 00:05:57,199
you're not um python compiled files are

173
00:05:57,199 --> 00:05:58,960
actually super fun and super easy

174
00:05:58,960 --> 00:06:00,160
particularly if you're kind of a newer

175
00:06:00,160 --> 00:06:02,080
reverse engineer there's a number of

176
00:06:02,080 --> 00:06:03,440
really cool projects already on things

177
00:06:03,440 --> 00:06:05,600
like github called pi instructor um this

178
00:06:05,600 --> 00:06:06,880
will allow you to actually take that

179
00:06:06,880 --> 00:06:09,840
compiled l file or compile pe file and

180
00:06:09,840 --> 00:06:12,160
turn it back into python by code so this

181
00:06:12,160 --> 00:06:13,440
is kind of that first step where you

182
00:06:13,440 --> 00:06:15,039
kind of like are unpacking it and

183
00:06:15,039 --> 00:06:16,240
there's gonna be a second step where you

184
00:06:16,240 --> 00:06:17,840
can turn the bytecode back into actual

185
00:06:17,840 --> 00:06:20,080
human readable python so again this is

186
00:06:20,080 --> 00:06:21,759
another kind of fun thing you guys if

187
00:06:21,759 --> 00:06:24,160
you come across it's fun it's easy i

188
00:06:24,160 --> 00:06:25,600
thought this was actually a little bit

189
00:06:25,600 --> 00:06:26,880
more funding some of the other stuff

190
00:06:26,880 --> 00:06:28,639
written and go

191
00:06:28,639 --> 00:06:30,639
so when i start running this um this is

192
00:06:30,639 --> 00:06:33,039
just kind of like my i guess my story

193
00:06:33,039 --> 00:06:35,199
i was running this before and i was

194
00:06:35,199 --> 00:06:36,479
doing this and i was having a whole

195
00:06:36,479 --> 00:06:37,919
bunch of trouble one day when i found

196
00:06:37,919 --> 00:06:40,160
some files and i of course did not read

197
00:06:40,160 --> 00:06:41,840
any of the error messages because while

198
00:06:41,840 --> 00:06:43,440
they read error messages it just seems

199
00:06:43,440 --> 00:06:44,800
to be working so let's just keep on

200
00:06:44,800 --> 00:06:45,840
going

201
00:06:45,840 --> 00:06:47,680
but then when i went back i saw that you

202
00:06:47,680 --> 00:06:50,000
need to run this file using python27 to

203
00:06:50,000 --> 00:06:52,160
prevent execution errors and i was like

204
00:06:52,160 --> 00:06:54,560
i wonder if that actually impacts me

205
00:06:54,560 --> 00:06:55,919
it did

206
00:06:55,919 --> 00:06:58,319
so then when you try to run uncompile so

207
00:06:58,319 --> 00:06:59,840
there's basically two things and i think

208
00:06:59,840 --> 00:07:01,199
i talked about the next slide but

209
00:07:01,199 --> 00:07:02,720
basically once you get your python by

210
00:07:02,720 --> 00:07:03,919
code you have to convert that back to

211
00:07:03,919 --> 00:07:06,800
real python um but i one of the packages

212
00:07:06,800 --> 00:07:08,639
that does that is called uncompile but

213
00:07:08,639 --> 00:07:10,560
if you try to run that with the wrong

214
00:07:10,560 --> 00:07:12,400
version of python it will get mismatched

215
00:07:12,400 --> 00:07:13,520
and you'll get a whole bunch of error

216
00:07:13,520 --> 00:07:15,680
messages so if you guys are going to do

217
00:07:15,680 --> 00:07:17,759
this at home or as part of your day job

218
00:07:17,759 --> 00:07:19,520
let's check out the error messages and

219
00:07:19,520 --> 00:07:21,120
make sure our python versions match

220
00:07:21,120 --> 00:07:23,120
because as you can see this was python 3

221
00:07:23,120 --> 00:07:25,120
and i was supposed to be using python 2

222
00:07:25,120 --> 00:07:27,120
but when i actually did the right way it

223
00:07:27,120 --> 00:07:28,639
worked successfully and everything

224
00:07:28,639 --> 00:07:31,199
worked out great

225
00:07:31,199 --> 00:07:33,440
and then once we actually deconstruct

226
00:07:33,440 --> 00:07:34,960
that and we get back to the python

227
00:07:34,960 --> 00:07:37,039
bytecode there's two projects i want to

228
00:07:37,039 --> 00:07:39,039
highlight that i really like i did not

229
00:07:39,039 --> 00:07:40,720
write any of these so full credit to

230
00:07:40,720 --> 00:07:42,479
those guys but there's one of them

231
00:07:42,479 --> 00:07:43,440
called

232
00:07:43,440 --> 00:07:46,000
6 and the other one is decompiled 3. the

233
00:07:46,000 --> 00:07:48,000
difference is uncompiled 6 works for

234
00:07:48,000 --> 00:07:50,720
your python 2 7 up to python 3 6

235
00:07:50,720 --> 00:07:52,560
versions if you have something written

236
00:07:52,560 --> 00:07:54,479
above python 36 i would recommend

237
00:07:54,479 --> 00:07:57,280
decompile a 3. the difference is that

238
00:07:57,280 --> 00:07:59,120
with the older variants there's actually

239
00:07:59,120 --> 00:08:01,440
a difference in the like the byte code

240
00:08:01,440 --> 00:08:03,680
of the headers so it again it works

241
00:08:03,680 --> 00:08:05,199
better for that one because it's i think

242
00:08:05,199 --> 00:08:06,879
a three

243
00:08:06,879 --> 00:08:09,440
four three 32-bit works for the older

244
00:08:09,440 --> 00:08:11,919
bearings and four 32-bit works for the

245
00:08:11,919 --> 00:08:13,840
newer ones um so again just one those

246
00:08:13,840 --> 00:08:15,440
little increases that took me about a

247
00:08:15,440 --> 00:08:17,360
day so if this can save you a couple

248
00:08:17,360 --> 00:08:19,520
hours then it was well worth it

249
00:08:19,520 --> 00:08:21,599
so now that we know how to analyze this

250
00:08:21,599 --> 00:08:23,360
i was going to talk about my lovely

251
00:08:23,360 --> 00:08:25,680
bypass file so again i started kind of

252
00:08:25,680 --> 00:08:27,759
going through this process i was able to

253
00:08:27,759 --> 00:08:29,440
kind of get this back to the bytecode

254
00:08:29,440 --> 00:08:31,440
and then i got back to python and then

255
00:08:31,440 --> 00:08:33,360
this is what i was looking at um it's a

256
00:08:33,360 --> 00:08:35,200
little bit blurry but for those of you

257
00:08:35,200 --> 00:08:36,880
who are kind of used to the information

258
00:08:36,880 --> 00:08:38,399
security stuff you'll notice that this

259
00:08:38,399 --> 00:08:40,000
looks a heck of a lot like like

260
00:08:40,000 --> 00:08:41,679
powershell and then i got really

261
00:08:41,679 --> 00:08:43,120
confused because i'm like i thought i

262
00:08:43,120 --> 00:08:44,720
was looking at l files why is your

263
00:08:44,720 --> 00:08:46,959
powershell in my l file

264
00:08:46,959 --> 00:08:48,080
and that's when you can kind of start

265
00:08:48,080 --> 00:08:49,600
seeing so many things like something

266
00:08:49,600 --> 00:08:52,000
went wrong you can't kill av

267
00:08:52,000 --> 00:08:54,560
antivirus detected windows persistence

268
00:08:54,560 --> 00:08:56,000
time to persist and that's when i was

269
00:08:56,000 --> 00:08:56,959
just like

270
00:08:56,959 --> 00:08:58,800
oh that's what they're doing this is

271
00:08:58,800 --> 00:09:01,120
actually one of those wsl samples that i

272
00:09:01,120 --> 00:09:02,320
thought was going to kind of be out

273
00:09:02,320 --> 00:09:03,760
there but we didn't really actually find

274
00:09:03,760 --> 00:09:04,959
before

275
00:09:04,959 --> 00:09:06,320
but when i started looking at this more

276
00:09:06,320 --> 00:09:07,120
i'm like

277
00:09:07,120 --> 00:09:08,399
if you look at the top part they have a

278
00:09:08,399 --> 00:09:09,760
whole bunch of things like windows

279
00:09:09,760 --> 00:09:11,279
update they're trying to inject into

280
00:09:11,279 --> 00:09:13,360
their strings called can't kill av

281
00:09:13,360 --> 00:09:15,279
there's things called windows persistent

282
00:09:15,279 --> 00:09:17,519
with the actual run key right in it my

283
00:09:17,519 --> 00:09:19,519
thought was okay well this is still just

284
00:09:19,519 --> 00:09:20,880
running power shell

285
00:09:20,880 --> 00:09:23,600
i'm totally fine our edr vendors got us

286
00:09:23,600 --> 00:09:25,839
and then i looked at the detection rate

287
00:09:25,839 --> 00:09:27,920
and it was zero and of course my first

288
00:09:27,920 --> 00:09:31,440
thought was what the duck um once again

289
00:09:31,440 --> 00:09:33,519
cookie and her lovely duck so that's

290
00:09:33,519 --> 00:09:34,640
when i was just kind of like all right

291
00:09:34,640 --> 00:09:36,800
well this isn't good we kind of found

292
00:09:36,800 --> 00:09:39,760
some of our first um samples and we were

293
00:09:39,760 --> 00:09:40,800
just kind of going through there and

294
00:09:40,800 --> 00:09:42,080
that's when we actually did a report

295
00:09:42,080 --> 00:09:44,560
back in the fall of 2021

296
00:09:44,560 --> 00:09:46,320
but after we kind of did that we were

297
00:09:46,320 --> 00:09:47,760
like okay well this was something that

298
00:09:47,760 --> 00:09:49,200
was interesting but we're not quite sure

299
00:09:49,200 --> 00:09:50,959
what to make of it um so we're going to

300
00:09:50,959 --> 00:09:52,640
kind of take some of those really unique

301
00:09:52,640 --> 00:09:54,080
rules we wrote before we're going to

302
00:09:54,080 --> 00:09:56,080
kind of why do fuzzy rules so the idea

303
00:09:56,080 --> 00:09:57,279
is we're going to kind of open it up a

304
00:09:57,279 --> 00:09:58,959
little bit we might take some more false

305
00:09:58,959 --> 00:10:00,800
positives but could help us find other

306
00:10:00,800 --> 00:10:03,120
activity that's similar to that and then

307
00:10:03,120 --> 00:10:04,800
we kind of just let them go for the next

308
00:10:04,800 --> 00:10:06,000
couple months because it was

309
00:10:06,000 --> 00:10:07,760
thanksgiving it was christmas everyone

310
00:10:07,760 --> 00:10:09,920
likes to have time off you know all that

311
00:10:09,920 --> 00:10:11,680
fun stuff

312
00:10:11,680 --> 00:10:13,680
so after we kept them running we went

313
00:10:13,680 --> 00:10:15,040
back to this and i want to say it's

314
00:10:15,040 --> 00:10:16,959
january or february-ish sometime around

315
00:10:16,959 --> 00:10:17,839
there

316
00:10:17,839 --> 00:10:19,120
and we actually found a couple more

317
00:10:19,120 --> 00:10:20,560
really interesting samples so we're

318
00:10:20,560 --> 00:10:22,560
going to talk about some of those now uh

319
00:10:22,560 --> 00:10:24,079
there was one that i thought was

320
00:10:24,079 --> 00:10:25,519
interesting was the key logger we

321
00:10:25,519 --> 00:10:26,800
actually found something that was doing

322
00:10:26,800 --> 00:10:28,880
show code injection we found the

323
00:10:28,880 --> 00:10:30,880
cross-compatible agent that was actually

324
00:10:30,880 --> 00:10:33,040
written for alpha like actual linux

325
00:10:33,040 --> 00:10:34,959
files and for windows files i thought

326
00:10:34,959 --> 00:10:36,800
was really kind of weird i wasn't quite

327
00:10:36,800 --> 00:10:38,399
sure what to make of that one and then

328
00:10:38,399 --> 00:10:41,519
there was more of like a simple file

329
00:10:41,519 --> 00:10:42,800
so i'm gonna start off with the

330
00:10:42,800 --> 00:10:43,920
keylogger

331
00:10:43,920 --> 00:10:45,200
this was something that i thought was

332
00:10:45,200 --> 00:10:46,880
actually kind of interesting because it

333
00:10:46,880 --> 00:10:50,399
had like real c2 comps to it it would

334
00:10:50,399 --> 00:10:52,880
actually take all of the

335
00:10:52,880 --> 00:10:55,600
keyboard or the keyboard input it would

336
00:10:55,600 --> 00:10:58,079
put it to a file called logfile.txt and

337
00:10:58,079 --> 00:10:59,920
then it used hard-coded credentials to

338
00:10:59,920 --> 00:11:01,360
actually communicate with a gmail

339
00:11:01,360 --> 00:11:02,320
address

340
00:11:02,320 --> 00:11:04,000
there was a hard-coded password as well

341
00:11:04,000 --> 00:11:05,440
which we did not publish for

342
00:11:05,440 --> 00:11:07,440
intellectual reasons um and then would

343
00:11:07,440 --> 00:11:09,360
actually modify the registry as well so

344
00:11:09,360 --> 00:11:11,279
this thing would stay on your system for

345
00:11:11,279 --> 00:11:12,480
you know as long as it would be there

346
00:11:12,480 --> 00:11:14,640
until someone detected it but this was

347
00:11:14,640 --> 00:11:16,240
just one of those things where um it

348
00:11:16,240 --> 00:11:17,760
just kind of showed that like this looks

349
00:11:17,760 --> 00:11:19,040
to me it looked when i saw this it

350
00:11:19,040 --> 00:11:20,079
looked like people were actually

351
00:11:20,079 --> 00:11:21,680
starting to use this in the wild and

352
00:11:21,680 --> 00:11:23,200
that this is kind of moving off that

353
00:11:23,200 --> 00:11:25,040
theoretical realm and into the actual

354
00:11:25,040 --> 00:11:28,000
real world realm

355
00:11:28,000 --> 00:11:29,839
this was the other one that i really

356
00:11:29,839 --> 00:11:30,959
found to be the most interesting

357
00:11:30,959 --> 00:11:33,200
personally um and this is actually the

358
00:11:33,200 --> 00:11:35,200
python by code right or the python code

359
00:11:35,200 --> 00:11:36,160
to the right

360
00:11:36,160 --> 00:11:38,000
for those of you who aren't great python

361
00:11:38,000 --> 00:11:40,320
would basically open up a url lib and it

362
00:11:40,320 --> 00:11:42,240
would grab a resource um in this case it

363
00:11:42,240 --> 00:11:44,720
was a 127 ip address it would then take

364
00:11:44,720 --> 00:11:46,880
the size of the actual show code it

365
00:11:46,880 --> 00:11:48,800
would allocate memory in the thread and

366
00:11:48,800 --> 00:11:50,160
it would take that shell code and put

367
00:11:50,160 --> 00:11:52,079
that right into a running thread

368
00:11:52,079 --> 00:11:54,079
so anyone who works for a red team knows

369
00:11:54,079 --> 00:11:55,600
that that's a great way to start loading

370
00:11:55,600 --> 00:11:57,519
some of those more advanced tool kicks

371
00:11:57,519 --> 00:11:59,279
so when i saw this

372
00:11:59,279 --> 00:12:00,880
again if you're just allocating shell

373
00:12:00,880 --> 00:12:03,120
code into a running thread it'd be very

374
00:12:03,120 --> 00:12:05,040
easy to basically put something like a

375
00:12:05,040 --> 00:12:07,360
cobalt strike resource on that remote ip

376
00:12:07,360 --> 00:12:09,440
address or meterpreter or basically

377
00:12:09,440 --> 00:12:10,880
anything you want

378
00:12:10,880 --> 00:12:12,560
and that's the thing that kind of got me

379
00:12:12,560 --> 00:12:13,920
because once you have something it's a

380
00:12:13,920 --> 00:12:15,839
running process in memory it becomes a

381
00:12:15,839 --> 00:12:17,519
lot harder to actually detect that than

382
00:12:17,519 --> 00:12:19,120
if it was written to disk

383
00:12:19,120 --> 00:12:20,560
so again this is one of those things

384
00:12:20,560 --> 00:12:22,320
where and of course it had detection

385
00:12:22,320 --> 00:12:25,120
rate of zero because whoever looks at l

386
00:12:25,120 --> 00:12:28,320
files on windows systems

387
00:12:28,480 --> 00:12:31,040
this was the other one that i really

388
00:12:31,040 --> 00:12:32,320
don't know what the heck this was if

389
00:12:32,320 --> 00:12:33,920
this was somebody's computer science

390
00:12:33,920 --> 00:12:35,760
project or if this was somebody who was

391
00:12:35,760 --> 00:12:37,360
just got bored

392
00:12:37,360 --> 00:12:39,920
but it was this thing called

393
00:12:39,920 --> 00:12:41,839
lee's agent and again it was literally

394
00:12:41,839 --> 00:12:44,079
called agent.pi which makes life a lot

395
00:12:44,079 --> 00:12:46,240
easier for me um but the interesting

396
00:12:46,240 --> 00:12:47,920
thing about this is that it actually

397
00:12:47,920 --> 00:12:50,240
would modify linux things so there was

398
00:12:50,240 --> 00:12:52,160
file paths for the i will start and then

399
00:12:52,160 --> 00:12:53,920
there was also file pass for the current

400
00:12:53,920 --> 00:12:56,240
registry um this one was actually kind

401
00:12:56,240 --> 00:12:57,680
of interesting too because it looked to

402
00:12:57,680 --> 00:12:59,519
be the most i was almost professionally

403
00:12:59,519 --> 00:13:01,519
developed it was obviously python so it

404
00:13:01,519 --> 00:13:03,519
kind of felt like more proof of concept

405
00:13:03,519 --> 00:13:05,279
but there was like allocated commands

406
00:13:05,279 --> 00:13:08,079
for upload file download file remove

407
00:13:08,079 --> 00:13:10,240
this directory copy this file take a

408
00:13:10,240 --> 00:13:12,160
screenshot and it kind of had more of

409
00:13:12,160 --> 00:13:13,519
that functionality to expect for

410
00:13:13,519 --> 00:13:14,720
something that was actually being

411
00:13:14,720 --> 00:13:15,920
developed professionally and

412
00:13:15,920 --> 00:13:18,480
concurrently and not just this quick oh

413
00:13:18,480 --> 00:13:19,920
i'm just going to use this to download

414
00:13:19,920 --> 00:13:21,839
my cobalt strike and use the same tools

415
00:13:21,839 --> 00:13:24,880
that we've always been using

416
00:13:25,839 --> 00:13:27,360
and then this was kind of the one where

417
00:13:27,360 --> 00:13:28,800
this was just to me felt like a very

418
00:13:28,800 --> 00:13:31,040
classical loader so this would again

419
00:13:31,040 --> 00:13:33,040
reach out to a remote ip address it

420
00:13:33,040 --> 00:13:34,880
would then download the file as an

421
00:13:34,880 --> 00:13:37,680
actual python file or as a pi file i'm

422
00:13:37,680 --> 00:13:39,279
assuming that was to evade some sort of

423
00:13:39,279 --> 00:13:41,279
network based detection and then once it

424
00:13:41,279 --> 00:13:43,040
actually got onto the system the script

425
00:13:43,040 --> 00:13:44,800
would then rewrite that as an actual

426
00:13:44,800 --> 00:13:47,040
executable it would then decrypt that

427
00:13:47,040 --> 00:13:49,040
with a hard-coded key and then it would

428
00:13:49,040 --> 00:13:50,720
basically copy that to the startup

429
00:13:50,720 --> 00:13:52,880
folder for persistence so again anytime

430
00:13:52,880 --> 00:13:54,720
you reboot your system if it was in

431
00:13:54,720 --> 00:13:56,320
startup file your operating system

432
00:13:56,320 --> 00:13:58,320
automatically kicks that off and again

433
00:13:58,320 --> 00:14:00,160
they will just use that and again this

434
00:14:00,160 --> 00:14:02,160
will just be able to be used to then

435
00:14:02,160 --> 00:14:03,920
develop that wherever it was downloaded

436
00:14:03,920 --> 00:14:06,160
so again that could be a cobalt strike

437
00:14:06,160 --> 00:14:07,600
it could be meta interpreter it could be

438
00:14:07,600 --> 00:14:08,880
a custom payload or it could be

439
00:14:08,880 --> 00:14:10,560
something else but that was just

440
00:14:10,560 --> 00:14:11,600
something where again when you're

441
00:14:11,600 --> 00:14:13,440
downloading files you're decrypting them

442
00:14:13,440 --> 00:14:14,800
with the key and you're like changing

443
00:14:14,800 --> 00:14:17,440
file sanctions it just causes havoc for

444
00:14:17,440 --> 00:14:18,880
all of your like network-based

445
00:14:18,880 --> 00:14:21,439
detections

446
00:14:22,320 --> 00:14:24,320
um so those were like more custom

447
00:14:24,320 --> 00:14:26,240
samples we also found what looked like

448
00:14:26,240 --> 00:14:28,639
open source tools so again these are all

449
00:14:28,639 --> 00:14:31,040
on github anyone can go look at these

450
00:14:31,040 --> 00:14:32,480
there was like a thing called discord

451
00:14:32,480 --> 00:14:34,560
rat that again provides all the standard

452
00:14:34,560 --> 00:14:36,399
functionality that you guys were known

453
00:14:36,399 --> 00:14:38,000
and like know and love

454
00:14:38,000 --> 00:14:39,600
and of course this communicates via

455
00:14:39,600 --> 00:14:41,120
discord api

456
00:14:41,120 --> 00:14:42,480
there's a second one called token

457
00:14:42,480 --> 00:14:44,480
grabber so again it was kind of similar

458
00:14:44,480 --> 00:14:45,920
to that and it would basically grab all

459
00:14:45,920 --> 00:14:47,760
of your authentication tokens for things

460
00:14:47,760 --> 00:14:51,199
like chrome mozilla ie brave and again

461
00:14:51,199 --> 00:14:52,800
once you have those authentication

462
00:14:52,800 --> 00:14:54,639
tokens or authorization tokens you can

463
00:14:54,639 --> 00:14:56,399
basically just authenticate asset end

464
00:14:56,399 --> 00:14:57,519
user

465
00:14:57,519 --> 00:14:58,959
the other thing is there is also one

466
00:14:58,959 --> 00:15:00,160
that kind of picked my interest called

467
00:15:00,160 --> 00:15:02,560
telegram so again it was similar to the

468
00:15:02,560 --> 00:15:04,480
discord rat um obviously the main

469
00:15:04,480 --> 00:15:06,000
difference is it communicates via the

470
00:15:06,000 --> 00:15:08,000
telegram api and to me that kind of

471
00:15:08,000 --> 00:15:09,120
indicates that there was more of a

472
00:15:09,120 --> 00:15:11,839
broader interest so again if you were

473
00:15:11,839 --> 00:15:14,000
hypothetically a u.s company and you saw

474
00:15:14,000 --> 00:15:15,519
something like discord you would think

475
00:15:15,519 --> 00:15:16,959
oh explain it for our younger employees

476
00:15:16,959 --> 00:15:18,880
who's on discord talking to his friends

477
00:15:18,880 --> 00:15:20,480
but if you saw telegram it would kind of

478
00:15:20,480 --> 00:15:22,000
stand out and say well why are we using

479
00:15:22,000 --> 00:15:24,240
telegram that may alert you however if

480
00:15:24,240 --> 00:15:25,839
you have a company in some place like

481
00:15:25,839 --> 00:15:28,320
ukraine everyone there uses telegram so

482
00:15:28,320 --> 00:15:29,680
again that would blend in with the

483
00:15:29,680 --> 00:15:31,360
traffic because everyone has telegram

484
00:15:31,360 --> 00:15:33,199
installed on their desktop so again it's

485
00:15:33,199 --> 00:15:34,560
kind of a way for them to kind of choose

486
00:15:34,560 --> 00:15:35,920
the project that fix the target

487
00:15:35,920 --> 00:15:37,759
environment that they're going after and

488
00:15:37,759 --> 00:15:39,680
again with these things being on github

489
00:15:39,680 --> 00:15:41,360
there is no development time there is no

490
00:15:41,360 --> 00:15:43,360
development cost you get cloned maybe

491
00:15:43,360 --> 00:15:45,440
modify a couple things for an hour and

492
00:15:45,440 --> 00:15:47,519
even without any modifications at all

493
00:15:47,519 --> 00:15:49,360
the telegram rat had a detection rate of

494
00:15:49,360 --> 00:15:50,240
zero

495
00:15:50,240 --> 00:15:52,240
so again you can do this with weight

496
00:15:52,240 --> 00:15:55,759
literally no bug bugshit at all

497
00:15:55,759 --> 00:15:57,199
and then there was the last thing that

498
00:15:57,199 --> 00:15:59,199
kind of sell to me was this credential

499
00:15:59,199 --> 00:16:01,199
harvester so this was again kind of

500
00:16:01,199 --> 00:16:03,519
based off a public forum website and it

501
00:16:03,519 --> 00:16:05,600
was again trying to basically take the

502
00:16:05,600 --> 00:16:07,759
contents of your chrome login database

503
00:16:07,759 --> 00:16:09,440
it would then decrypt them and see all

504
00:16:09,440 --> 00:16:11,759
that so if you guys have ever gone and

505
00:16:11,759 --> 00:16:13,440
used google chrome on your laptop maybe

506
00:16:13,440 --> 00:16:15,279
you log into facebook maybe it's your

507
00:16:15,279 --> 00:16:17,759
bank maybe it's your gym whatever it is

508
00:16:17,759 --> 00:16:19,040
you always get that little pop-up in the

509
00:16:19,040 --> 00:16:20,720
corner hey do you want me to remember

510
00:16:20,720 --> 00:16:22,079
your password so you don't have to log

511
00:16:22,079 --> 00:16:24,240
in next time this would basically grab

512
00:16:24,240 --> 00:16:26,320
all of those safe passwords and as you

513
00:16:26,320 --> 00:16:27,839
guys know once you have a list of known

514
00:16:27,839 --> 00:16:29,600
passwords for a target you can then kind

515
00:16:29,600 --> 00:16:31,199
of use that for other accounts because

516
00:16:31,199 --> 00:16:32,639
maybe they use the same password for

517
00:16:32,639 --> 00:16:34,880
their work email as their personal email

518
00:16:34,880 --> 00:16:36,639
or maybe they use the same password for

519
00:16:36,639 --> 00:16:38,000
other things

520
00:16:38,000 --> 00:16:39,680
and again this thing didn't have any

521
00:16:39,680 --> 00:16:41,199
sort of actual

522
00:16:41,199 --> 00:16:42,959
detection rate to it the one kind of

523
00:16:42,959 --> 00:16:45,199
unique aspect about this one is that it

524
00:16:45,199 --> 00:16:46,959
didn't actually have any sort of command

525
00:16:46,959 --> 00:16:48,079
and control

526
00:16:48,079 --> 00:16:50,160
channel associated with it so to me this

527
00:16:50,160 --> 00:16:51,839
would indicate that someone was already

528
00:16:51,839 --> 00:16:54,160
on your machine they already had a show

529
00:16:54,160 --> 00:16:55,759
they would download this they would run

530
00:16:55,759 --> 00:16:57,199
it they would get the output and then

531
00:16:57,199 --> 00:16:58,959
probably delete that

532
00:16:58,959 --> 00:17:00,480
and again the thing is because excel

533
00:17:00,480 --> 00:17:02,240
files it's kind of hard to sometimes

534
00:17:02,240 --> 00:17:03,839
detect this because you don't have all

535
00:17:03,839 --> 00:17:05,439
those sysmont tools

536
00:17:05,439 --> 00:17:06,799
so for example if you guys are familiar

537
00:17:06,799 --> 00:17:08,720
with sysmond there's a file called save

538
00:17:08,720 --> 00:17:11,039
pe upon delete so again if someone were

539
00:17:11,039 --> 00:17:12,720
to download a file run it and then

540
00:17:12,720 --> 00:17:14,640
delete it and that configuration was set

541
00:17:14,640 --> 00:17:16,400
to one it would then actually take a

542
00:17:16,400 --> 00:17:18,160
copy of that pe file and put in an

543
00:17:18,160 --> 00:17:20,240
archive so you guys can view it later it

544
00:17:20,240 --> 00:17:22,160
doesn't have an equivalent for l files

545
00:17:22,160 --> 00:17:24,319
on windows systems so again that's kind

546
00:17:24,319 --> 00:17:25,599
of a way to sort of get around some of

547
00:17:25,599 --> 00:17:26,720
this stuff

548
00:17:26,720 --> 00:17:27,919
but as you can see it kind of looked

549
00:17:27,919 --> 00:17:29,360
like it was based off the open source

550
00:17:29,360 --> 00:17:30,880
one but it was a little bit more

551
00:17:30,880 --> 00:17:33,039
narrowly focused on chrome and it didn't

552
00:17:33,039 --> 00:17:36,000
have any sort of external channel

553
00:17:36,000 --> 00:17:36,880
so

554
00:17:36,880 --> 00:17:38,320
it kind of presenting some of the stuff

555
00:17:38,320 --> 00:17:39,840
and then you know of course i was really

556
00:17:39,840 --> 00:17:41,280
excited about this i kind of talked to

557
00:17:41,280 --> 00:17:42,960
my boss and i was like look at how cool

558
00:17:42,960 --> 00:17:44,880
this is this is great and then of course

559
00:17:44,880 --> 00:17:46,160
i kind of got the question from her

560
00:17:46,160 --> 00:17:48,400
about well this is cool but it's all

561
00:17:48,400 --> 00:17:50,400
like python crap like why why are we

562
00:17:50,400 --> 00:17:52,480
caring about python crap and then next

563
00:17:52,480 --> 00:17:53,760
thing is like we're not talking about

564
00:17:53,760 --> 00:17:55,440
campaign we're talking about what looks

565
00:17:55,440 --> 00:17:57,440
like a proof of concept you know why are

566
00:17:57,440 --> 00:18:00,400
we talking about this um and again i

567
00:18:00,400 --> 00:18:01,840
kind of acknowledged that you know some

568
00:18:01,840 --> 00:18:03,280
of this stuff still looks like it might

569
00:18:03,280 --> 00:18:04,559
be in development

570
00:18:04,559 --> 00:18:05,919
but the truth of the matter is it's

571
00:18:05,919 --> 00:18:07,520
still effective it's still able to do

572
00:18:07,520 --> 00:18:09,520
its job and it to me almost kind of

573
00:18:09,520 --> 00:18:11,440
feels like powershell in 2017 if people

574
00:18:11,440 --> 00:18:12,880
remember that before i got hooked by

575
00:18:12,880 --> 00:18:15,280
amsi you can type a really simple script

576
00:18:15,280 --> 00:18:17,200
in powershell back then it could be 40

577
00:18:17,200 --> 00:18:19,039
lines you would have great functionality

578
00:18:19,039 --> 00:18:21,120
and you can get away with using it for 8

579
00:18:21,120 --> 00:18:23,440
10 months before anyone caught again if

580
00:18:23,440 --> 00:18:25,520
you can develop a rat in python it's a

581
00:18:25,520 --> 00:18:27,520
very easy programming language it's very

582
00:18:27,520 --> 00:18:29,200
friendly people can do it without really

583
00:18:29,200 --> 00:18:30,799
a whole lot of professional skill and

584
00:18:30,799 --> 00:18:32,080
they can still write something that

585
00:18:32,080 --> 00:18:33,679
allows them to communicate with an

586
00:18:33,679 --> 00:18:36,320
external api or with external c2 and

587
00:18:36,320 --> 00:18:38,240
have a detection rate of zero and if you

588
00:18:38,240 --> 00:18:39,679
make that external thing something like

589
00:18:39,679 --> 00:18:41,760
discord or telegram well now it's not

590
00:18:41,760 --> 00:18:43,919
even going to like a dedicated say

591
00:18:43,919 --> 00:18:46,080
domain or a c2 ip address it becomes

592
00:18:46,080 --> 00:18:48,320
really hard to try to find that noise or

593
00:18:48,320 --> 00:18:51,679
try to find that signal in all the noise

594
00:18:51,679 --> 00:18:53,200
the other thing is this is kind of my

595
00:18:53,200 --> 00:18:54,960
personal you know circle of life or

596
00:18:54,960 --> 00:18:56,400
circle of threat intellections life if

597
00:18:56,400 --> 00:18:58,880
you will um so if any of you guys work

598
00:18:58,880 --> 00:19:00,400
for an enterprise company you know that

599
00:19:00,400 --> 00:19:02,000
typically you start off with monday of

600
00:19:02,000 --> 00:19:03,760
you get some sort of message from a boss

601
00:19:03,760 --> 00:19:06,320
saying hey you know we saw this report

602
00:19:06,320 --> 00:19:08,640
the other day and i was just wondering

603
00:19:08,640 --> 00:19:09,440
if

604
00:19:09,440 --> 00:19:11,679
you guys are detecting this brand new

605
00:19:11,679 --> 00:19:13,280
charming kitten whatever and then of

606
00:19:13,280 --> 00:19:14,799
course that then drives everyone to

607
00:19:14,799 --> 00:19:16,320
start writing detection rules for that

608
00:19:16,320 --> 00:19:18,240
as they write more detection rules more

609
00:19:18,240 --> 00:19:20,320
data gets collected and then as that

610
00:19:20,320 --> 00:19:22,400
data gets collected the thing leaks to

611
00:19:22,400 --> 00:19:23,919
more reporting which then leads to more

612
00:19:23,919 --> 00:19:26,400
questions from all those other people

613
00:19:26,400 --> 00:19:28,080
so again this is kind of my thing is by

614
00:19:28,080 --> 00:19:29,919
me trying to talk about this in these

615
00:19:29,919 --> 00:19:32,080
forms i'm hoping that you know that will

616
00:19:32,080 --> 00:19:33,520
then lead to more people starting to

617
00:19:33,520 --> 00:19:34,799
write more detection rules they have to

618
00:19:34,799 --> 00:19:36,480
have spur cycle to then collect more

619
00:19:36,480 --> 00:19:38,640
data to then help do more reporting so

620
00:19:38,640 --> 00:19:40,400
we can kind of keep going this going

621
00:19:40,400 --> 00:19:41,760
because i feel like this is a very

622
00:19:41,760 --> 00:19:44,879
viable attack surface

623
00:19:45,520 --> 00:19:48,320
so monitoring and detection again kind

624
00:19:48,320 --> 00:19:51,039
of best practices only install wsl on

625
00:19:51,039 --> 00:19:53,360
devices to actually use this so again if

626
00:19:53,360 --> 00:19:55,360
you are a kubernetes system

627
00:19:55,360 --> 00:19:57,039
administrator and you really need this

628
00:19:57,039 --> 00:19:58,880
yeah by all means use it it's a great

629
00:19:58,880 --> 00:20:00,880
tool it might make your life easier if

630
00:20:00,880 --> 00:20:02,880
you are working in the hr department and

631
00:20:02,880 --> 00:20:04,720
you don't know what the terminal is

632
00:20:04,720 --> 00:20:06,320
maybe those people don't actually need

633
00:20:06,320 --> 00:20:07,440
to have it and then we can kind of

634
00:20:07,440 --> 00:20:09,520
reduce the attack surface

635
00:20:09,520 --> 00:20:10,960
again because it's kind of running some

636
00:20:10,960 --> 00:20:12,320
of this linux stuff you can run things

637
00:20:12,320 --> 00:20:14,320
like ip tables you can block outbound

638
00:20:14,320 --> 00:20:15,760
connections so if you're only

639
00:20:15,760 --> 00:20:17,760
administering internal databases you

640
00:20:17,760 --> 00:20:19,280
don't need to have an external internet

641
00:20:19,280 --> 00:20:20,720
connection you can kind of create some

642
00:20:20,720 --> 00:20:22,000
of those firewall rules to help do

643
00:20:22,000 --> 00:20:23,840
things um the other thing is group

644
00:20:23,840 --> 00:20:25,440
policy i was actually looking into that

645
00:20:25,440 --> 00:20:27,039
this morning i think there might be ways

646
00:20:27,039 --> 00:20:29,919
that you can do that

647
00:20:30,960 --> 00:20:34,000
it did it does on the new version okay

648
00:20:34,000 --> 00:20:36,240
cool

649
00:20:36,480 --> 00:20:37,679
i think it was actually they have like

650
00:20:37,679 --> 00:20:39,520
their own like commands like the windows

651
00:20:39,520 --> 00:20:41,520
sub stack command or windows yeah so

652
00:20:41,520 --> 00:20:42,640
they were talking about how they're

653
00:20:42,640 --> 00:20:44,000
integrating it now so i think that's one

654
00:20:44,000 --> 00:20:46,240
of the like new features but it's also

655
00:20:46,240 --> 00:20:48,799
really cool uh and then like that so i

656
00:20:48,799 --> 00:20:50,000
think there's group policies where you

657
00:20:50,000 --> 00:20:51,760
can kind of limit what can and can't be

658
00:20:51,760 --> 00:20:53,679
executed um i was trying to kind of play

659
00:20:53,679 --> 00:20:54,880
around with that swearing and i don't

660
00:20:54,880 --> 00:20:56,880
know the exact configuration but i think

661
00:20:56,880 --> 00:20:58,159
if you guys are monitoring that's

662
00:20:58,159 --> 00:20:59,200
something i would kind of look into a

663
00:20:59,200 --> 00:21:01,039
little bit more um and then the last

664
00:21:01,039 --> 00:21:03,039
thing is like previous talk make sure

665
00:21:03,039 --> 00:21:04,480
you have proper logging make sure you're

666
00:21:04,480 --> 00:21:06,640
saving off all those commands um and

667
00:21:06,640 --> 00:21:08,000
then like i said just make sure you're

668
00:21:08,000 --> 00:21:09,440
doing that because there's not a lot of

669
00:21:09,440 --> 00:21:10,960
pre-built tools so as we mentioned

670
00:21:10,960 --> 00:21:12,559
before there was copy upon delete they

671
00:21:12,559 --> 00:21:14,320
don't exist for elf so you kind of need

672
00:21:14,320 --> 00:21:16,000
to really rely on those other tools to

673
00:21:16,000 --> 00:21:18,720
help things work

674
00:21:19,520 --> 00:21:21,039
all right and lastly some parting

675
00:21:21,039 --> 00:21:23,760
thoughts um so wsl is not going to be as

676
00:21:23,760 --> 00:21:26,640
ubiquitous as things like log4j blog4j

677
00:21:26,640 --> 00:21:28,480
was everywhere and anywhere in effect

678
00:21:28,480 --> 00:21:30,400
that basically everything from

679
00:21:30,400 --> 00:21:32,960
vmware to home routers to anything else

680
00:21:32,960 --> 00:21:34,640
um this does not have that same

681
00:21:34,640 --> 00:21:36,400
footprint so the thing is it's never

682
00:21:36,400 --> 00:21:38,480
going to be that large splashy thing

683
00:21:38,480 --> 00:21:39,360
it's going to be on the front of the

684
00:21:39,360 --> 00:21:40,559
google news

685
00:21:40,559 --> 00:21:43,360
however this is still a very serious

686
00:21:43,360 --> 00:21:45,600
threat for corporate networks the reason

687
00:21:45,600 --> 00:21:47,200
i think it's a serious threat is because

688
00:21:47,200 --> 00:21:49,600
it has such low detection rate and if

689
00:21:49,600 --> 00:21:51,280
you couple that with something like a

690
00:21:51,280 --> 00:21:54,080
network api to telegram or discord

691
00:21:54,080 --> 00:21:55,520
you're not really able to detect down

692
00:21:55,520 --> 00:21:57,039
the host you can't really detect it from

693
00:21:57,039 --> 00:21:58,720
dns you can't really detect some of that

694
00:21:58,720 --> 00:22:00,720
stuff from the firewalls it kind of

695
00:22:00,720 --> 00:22:02,080
allows them to live in that dead

696
00:22:02,080 --> 00:22:04,000
nebulous zone so where they can operate

697
00:22:04,000 --> 00:22:06,080
and still do a lot of damage

698
00:22:06,080 --> 00:22:07,679
the other thing is again because the

699
00:22:07,679 --> 00:22:09,600
systems are typically using this are

700
00:22:09,600 --> 00:22:12,320
those power users i think dex also makes

701
00:22:12,320 --> 00:22:14,320
this a much more attractive target to

702
00:22:14,320 --> 00:22:16,400
people who have wsl pre-installed on

703
00:22:16,400 --> 00:22:18,720
their corporate environments um as i

704
00:22:18,720 --> 00:22:20,720
kind of mentioned before we detected a

705
00:22:20,720 --> 00:22:22,480
couple of these samples all the ones

706
00:22:22,480 --> 00:22:24,240
i've seen so far were written in python

707
00:22:24,240 --> 00:22:25,919
i acknowledge there's a bias because i

708
00:22:25,919 --> 00:22:27,360
kind of wrote my ur rules to look for

709
00:22:27,360 --> 00:22:29,520
other python stuff but there could be

710
00:22:29,520 --> 00:22:31,520
other variants in things like c c plus

711
00:22:31,520 --> 00:22:33,360
pause go pick your favorite programming

712
00:22:33,360 --> 00:22:34,320
language

713
00:22:34,320 --> 00:22:35,679
and again there might be more stuff out

714
00:22:35,679 --> 00:22:37,039
there we're still trying to look for

715
00:22:37,039 --> 00:22:38,640
that but again you're trying to find

716
00:22:38,640 --> 00:22:41,200
that needle in haystack um again it's

717
00:22:41,200 --> 00:22:43,760
used by power users and again the last

718
00:22:43,760 --> 00:22:45,600
thing is by hoping to inform all of you

719
00:22:45,600 --> 00:22:46,960
guys you guys might find something in

720
00:22:46,960 --> 00:22:49,120
your environment um and again i would

721
00:22:49,120 --> 00:22:50,640
hope and encourage you guys to kind of

722
00:22:50,640 --> 00:22:52,320
report that either through virus solo

723
00:22:52,320 --> 00:22:53,919
through twitter whatever mechanisms you

724
00:22:53,919 --> 00:22:55,280
have to kind of share some of those

725
00:22:55,280 --> 00:22:56,960
samples that way we can all do a better

726
00:22:56,960 --> 00:23:00,080
job of defending together

727
00:23:00,880 --> 00:23:02,240
keeping up with us so i work for

728
00:23:02,240 --> 00:23:04,559
blackwell's labs we did a blog about we

729
00:23:04,559 --> 00:23:06,320
did two blogs on this so if you guys are

730
00:23:06,320 --> 00:23:07,840
interested we have a whole bunch of

731
00:23:07,840 --> 00:23:09,120
these resources whole bunch of

732
00:23:09,120 --> 00:23:10,720
screenshots um you guys can just go

733
00:23:10,720 --> 00:23:12,240
there and again you guys don't have to

734
00:23:12,240 --> 00:23:14,159
go through grainy screenshots um if you

735
00:23:14,159 --> 00:23:16,320
have questions i'm danielle midas that's

736
00:23:16,320 --> 00:23:17,919
my twitter handle i'll also be here for

737
00:23:17,919 --> 00:23:19,120
a little bit for the happy hour feel

738
00:23:19,120 --> 00:23:20,640
free to come say hi get some free

739
00:23:20,640 --> 00:23:23,919
stickers um and again there's also a wsl

740
00:23:23,919 --> 00:23:26,000
blog on microsoft um so that's actually

741
00:23:26,000 --> 00:23:27,600
been really cool microsoft has their own

742
00:23:27,600 --> 00:23:29,120
thing where they do it like once every

743
00:23:29,120 --> 00:23:30,240
quarter and they talk about the brand

744
00:23:30,240 --> 00:23:31,840
new features that they're implementing

745
00:23:31,840 --> 00:23:33,760
um i kind of think it's interesting if

746
00:23:33,760 --> 00:23:35,200
you guys are actually doing system admin

747
00:23:35,200 --> 00:23:36,400
work it's nice to know like what they're

748
00:23:36,400 --> 00:23:37,679
working on and how it might make your

749
00:23:37,679 --> 00:23:39,520
life easier um i would encourage you to

750
00:23:39,520 --> 00:23:41,360
check that one out as well

751
00:23:41,360 --> 00:23:42,799
um and again this is just some of the

752
00:23:42,799 --> 00:23:45,039
references if you guys are interested i

753
00:23:45,039 --> 00:23:46,640
saw some screenshots this is just where

754
00:23:46,640 --> 00:23:47,760
all that was

755
00:23:47,760 --> 00:23:48,960
um and then the last thing is just

756
00:23:48,960 --> 00:23:51,679
questions so i think we have like

757
00:23:51,679 --> 00:23:54,080
three-ish minutes five-ish mix somewhere

758
00:23:54,080 --> 00:23:55,440
around there

759
00:23:55,440 --> 00:23:58,799
oh a couple more all right

760
00:23:58,799 --> 00:24:03,080
yeah what's up um

761
00:24:05,840 --> 00:24:08,159
so it's picked up i think stinks to blog

762
00:24:08,159 --> 00:24:10,480
but it's still pretty low i mean it was

763
00:24:10,480 --> 00:24:12,400
like 10 or 12 where you know if you look

764
00:24:12,400 --> 00:24:13,919
at your standard stuff it's typically

765
00:24:13,919 --> 00:24:16,880
around like 30 or 40 um so it's it's

766
00:24:16,880 --> 00:24:18,640
getting better but it's still not where

767
00:24:18,640 --> 00:24:22,159
i would like it to be personally

768
00:24:28,159 --> 00:24:30,400
so it's similar to like that powershell

769
00:24:30,400 --> 00:24:33,120
um and there's actually if you go to i

770
00:24:33,120 --> 00:24:35,600
think the second one if you go back to

771
00:24:35,600 --> 00:24:36,960
the second block we actually link to a

772
00:24:36,960 --> 00:24:38,400
big white paper that talks about this

773
00:24:38,400 --> 00:24:40,400
but basically there is uh windows event

774
00:24:40,400 --> 00:24:42,320
logging and again it looks very similar

775
00:24:42,320 --> 00:24:44,240
to like the powershell blogging again

776
00:24:44,240 --> 00:24:45,840
except you see like the bash stuff so

777
00:24:45,840 --> 00:24:47,039
again you can probably just grab for

778
00:24:47,039 --> 00:24:49,200
bash and pull out all those um you can

779
00:24:49,200 --> 00:24:50,720
also do sysmon logging if you're more

780
00:24:50,720 --> 00:24:52,799
familiar or if you like that more again

781
00:24:52,799 --> 00:24:54,000
obviously throw that to some sort of

782
00:24:54,000 --> 00:24:55,760
central repository you can kind of try

783
00:24:55,760 --> 00:24:57,279
to recreate what exactly it was that

784
00:24:57,279 --> 00:24:58,320
they're doing

785
00:24:58,320 --> 00:24:59,840
and then the other nice thing is if you

786
00:24:59,840 --> 00:25:02,000
do happen to find a compromised system

787
00:25:02,000 --> 00:25:03,520
and they were doing this you may get

788
00:25:03,520 --> 00:25:04,799
lucky and you can just view the bash

789
00:25:04,799 --> 00:25:06,240
history which is just another lovely

790
00:25:06,240 --> 00:25:07,600
thing if you guys have ever done instant

791
00:25:07,600 --> 00:25:08,880
response

792
00:25:08,880 --> 00:25:11,120
uh that guy

793
00:25:11,120 --> 00:25:15,080
i'm sorry i ain't here

794
00:25:24,240 --> 00:25:26,000
so i just i don't know the implications

795
00:25:26,000 --> 00:25:28,960
for um cpu utilization if it will be if

796
00:25:28,960 --> 00:25:30,400
it makes sense or if it will kill your

797
00:25:30,400 --> 00:25:32,720
box um so again i don't want to say one

798
00:25:32,720 --> 00:25:34,400
way but potentially that would be more

799
00:25:34,400 --> 00:25:36,400
secure if you are more in line of

800
00:25:36,400 --> 00:25:38,559
security that would probably work but

801
00:25:38,559 --> 00:25:39,919
again i don't want to tell you something

802
00:25:39,919 --> 00:25:43,360
and have it break your system either

803
00:25:43,360 --> 00:25:46,080
cool what's up

804
00:25:47,760 --> 00:25:49,440
um

805
00:25:49,440 --> 00:25:51,919
i don't think we do but again so we

806
00:25:51,919 --> 00:25:54,240
don't share the er rules per se but we

807
00:25:54,240 --> 00:25:55,679
do share all the samples so if you want

808
00:25:55,679 --> 00:25:57,600
to go on our public blackboard labs

809
00:25:57,600 --> 00:25:59,919
github you can see all the same files i

810
00:25:59,919 --> 00:26:01,440
think most of them are on mileshare and

811
00:26:01,440 --> 00:26:04,000
on viran and on dyrsol um so if you're

812
00:26:04,000 --> 00:26:05,279
curious you can just kind of take those

813
00:26:05,279 --> 00:26:06,880
hashes download them for free and you

814
00:26:06,880 --> 00:26:10,600
can kind of play with this afterwards

815
00:26:30,799 --> 00:26:32,960
as good as i would personally like um

816
00:26:32,960 --> 00:26:34,320
but basically what we were trying to do

817
00:26:34,320 --> 00:26:37,360
was look for um like i guess if you want

818
00:26:37,360 --> 00:26:38,720
you can try find me afterwards i'll show

819
00:26:38,720 --> 00:26:40,559
them to you um but basically it was like

820
00:26:40,559 --> 00:26:42,240
we're looking for windows systems that

821
00:26:42,240 --> 00:26:43,760
we're running things like debian which

822
00:26:43,760 --> 00:26:45,120
we don't really see a whole lot since

823
00:26:45,120 --> 00:26:46,960
most people you're using like ubuntu or

824
00:26:46,960 --> 00:26:48,480
like the routers and embedding systems

825
00:26:48,480 --> 00:26:50,080
they're using mips uh we're looking for

826
00:26:50,080 --> 00:26:52,559
things like file size um and then i

827
00:26:52,559 --> 00:26:53,760
think there's like one or two other

828
00:26:53,760 --> 00:26:54,880
features i think we're trying to look

829
00:26:54,880 --> 00:26:57,120
for like um imported libraries like c

830
00:26:57,120 --> 00:26:58,480
types if you see that that's kind of a

831
00:26:58,480 --> 00:27:00,480
dead giveaway um but again i will

832
00:27:00,480 --> 00:27:02,080
acknowledge there a little bit they're

833
00:27:02,080 --> 00:27:04,080
still really fuzzy um so again it takes

834
00:27:04,080 --> 00:27:06,080
more time to kind of download everything

835
00:27:06,080 --> 00:27:07,520
and then i just run a script to just

836
00:27:07,520 --> 00:27:08,799
unpack everything and then just kind of

837
00:27:08,799 --> 00:27:10,799
look at that it's still sort of manual

838
00:27:10,799 --> 00:27:12,080
at this point but

839
00:27:12,080 --> 00:27:14,159
it's the best bag solution if that makes

840
00:27:14,159 --> 00:27:17,159
sense

841
00:27:23,520 --> 00:27:25,279
yeah you still have to do so when you

842
00:27:25,279 --> 00:27:27,520
basically um when you do like python

843
00:27:27,520 --> 00:27:29,840
like pi 2 exe or something um it

844
00:27:29,840 --> 00:27:31,600
actually kind of converts the python the

845
00:27:31,600 --> 00:27:33,440
byte code and then it zips up that pipe

846
00:27:33,440 --> 00:27:35,760
that by code and that almost acts like

847
00:27:35,760 --> 00:27:37,520
an obvious figure if you will but the

848
00:27:37,520 --> 00:27:38,880
nice thing is because it's like a known

849
00:27:38,880 --> 00:27:41,279
obfuscation method um it's easier to

850
00:27:41,279 --> 00:27:42,880
download that but the problem is again

851
00:27:42,880 --> 00:27:45,360
it does take more time and resources

852
00:27:45,360 --> 00:27:47,279
yep

853
00:27:47,279 --> 00:27:49,840
anyone else

854
00:27:50,080 --> 00:27:50,799
no

855
00:27:50,799 --> 00:27:52,080
okay cool i guess we can go at the

856
00:27:52,080 --> 00:27:54,590
borrowing

857
00:27:54,590 --> 00:28:02,240
[Applause]

858
00:28:02,240 --> 00:28:04,320
you

