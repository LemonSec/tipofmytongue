1
00:00:10,040 --> 00:00:15,540
<font color="#E5E5E5">all right cool we'll get started then so</font>

2
00:00:13,860 --> 00:00:17,788
I'm here to talk<font color="#E5E5E5"> about ember an</font>

3
00:00:15,540 --> 00:00:21,090
<font color="#CCCCCC">open-source malware classifier and</font>

4
00:00:17,789 --> 00:00:23,789
dataset<font color="#E5E5E5"> all right my name's Phil Roth</font>

5
00:00:21,090 --> 00:00:25,050
I'm a data scientist at endgame and in

6
00:00:23,789 --> 00:00:26,640
grad school they told<font color="#CCCCCC"> me to always</font>

7
00:00:25,050 --> 00:00:28,859
<font color="#E5E5E5">include a picture of me at the South</font>

8
00:00:26,640 --> 00:00:31,949
<font color="#CCCCCC">Pole</font><font color="#E5E5E5"> in all of my talks so I sometimes</font>

9
00:00:28,859 --> 00:00:33,870
do that<font color="#E5E5E5"> yeah in grad school I worked on</font>

10
00:00:31,949 --> 00:00:35,579
Ice Cube which<font color="#CCCCCC"> was a neutrino detector</font>

11
00:00:33,870 --> 00:00:38,459
at the South Pole<font color="#CCCCCC"> and it was there that</font>

12
00:00:35,579 --> 00:00:39,809
<font color="#E5E5E5">I</font><font color="#CCCCCC"> learned machine learning</font><font color="#E5E5E5"> and now for</font>

13
00:00:38,460 --> 00:00:41,280
the<font color="#E5E5E5"> last five years have kind of been</font>

14
00:00:39,809 --> 00:00:43,640
applying it to the security industry

15
00:00:41,280 --> 00:00:45,660
<font color="#CCCCCC">here at endgame</font>

16
00:00:43,640 --> 00:00:47,760
none of<font color="#E5E5E5"> this would have been</font><font color="#CCCCCC"> possible</font>

17
00:00:45,660 --> 00:00:49,620
without my<font color="#E5E5E5"> co-author Hiram Hiram is</font>

18
00:00:47,760 --> 00:00:52,050
awesome<font color="#E5E5E5"> he's also the</font><font color="#CCCCCC"> technical director</font>

19
00:00:49,620 --> 00:00:55,860
<font color="#CCCCCC">of</font><font color="#E5E5E5"> data science at endgame but mostly</font>

20
00:00:52,050 --> 00:00:59,910
he's just<font color="#CCCCCC"> awesome</font><font color="#E5E5E5"> so so why amber why</font>

21
00:00:55,860 --> 00:01:02,480
what am I doing here<font color="#CCCCCC"> well open datasets</font>

22
00:00:59,910 --> 00:01:04,649
<font color="#E5E5E5">push machine learning research forward</font>

23
00:01:02,480 --> 00:01:06,750
you know machine<font color="#CCCCCC"> learning has</font><font color="#E5E5E5"> achieved</font>

24
00:01:04,650 --> 00:01:09,540
<font color="#E5E5E5">great results in the last ten years</font><font color="#CCCCCC"> in</font>

25
00:01:06,750 --> 00:01:11,220
like language translation optical

26
00:01:09,540 --> 00:01:14,220
<font color="#E5E5E5">character recognition</font>

27
00:01:11,220 --> 00:01:15,929
you know detecting or identifying<font color="#E5E5E5"> what's</font>

28
00:01:14,220 --> 00:01:18,150
in images the objects that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> in there</font>

29
00:01:15,930 --> 00:01:20,670
<font color="#E5E5E5">and there's a lot of good reasons</font><font color="#CCCCCC"> for</font>

30
00:01:18,150 --> 00:01:21,840
<font color="#E5E5E5">that one of them is you know hardware</font>

31
00:01:20,670 --> 00:01:23,939
has gotten a lot better

32
00:01:21,840 --> 00:01:26,100
<font color="#CCCCCC">datasets</font><font color="#E5E5E5"> have gotten a lot bigger but</font>

33
00:01:23,939 --> 00:01:27,750
I'm saying that<font color="#E5E5E5"> one of the main reasons</font>

34
00:01:26,100 --> 00:01:31,259
they're getting better is the presence

35
00:01:27,750 --> 00:01:33,509
of<font color="#CCCCCC"> open source benchmark datasets in all</font>

36
00:01:31,259 --> 00:01:36,659
of those<font color="#E5E5E5"> fields</font><font color="#CCCCCC"> so what I'm showing you</font>

37
00:01:33,509 --> 00:01:39,420
<font color="#CCCCCC">here is a plot from Ben Hamner and it's</font>

38
00:01:36,659 --> 00:01:42,000
showing<font color="#E5E5E5"> 20 different open source data</font>

39
00:01:39,420 --> 00:01:44,970
sets<font color="#E5E5E5"> and the number of times each</font>

40
00:01:42,000 --> 00:01:46,470
<font color="#CCCCCC">dataset</font><font color="#E5E5E5"> is cited in nips papers that's a</font>

41
00:01:44,970 --> 00:01:49,619
leading<font color="#E5E5E5"> machine learning conference in</font>

42
00:01:46,470 --> 00:01:51,149
the field<font color="#E5E5E5"> over</font><font color="#CCCCCC"> time and so as you</font><font color="#E5E5E5"> can</font>

43
00:01:49,619 --> 00:01:53,340
see<font color="#E5E5E5"> these benchmark</font><font color="#CCCCCC"> datasets</font><font color="#E5E5E5"> have always</font>

44
00:01:51,149 --> 00:01:56,990
existed<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the field</font><font color="#CCCCCC"> but their use has</font>

45
00:01:53,340 --> 00:01:56,990
really taken off in<font color="#E5E5E5"> the last</font><font color="#CCCCCC"> ten years</font>

46
00:01:57,140 --> 00:02:02,700
<font color="#CCCCCC">one example of a benchmark</font><font color="#E5E5E5"> data set in</font>

47
00:02:00,180 --> 00:02:05,610
an area other than<font color="#CCCCCC"> security</font><font color="#E5E5E5"> is M</font><font color="#CCCCCC"> nest</font>

48
00:02:02,700 --> 00:02:08,399
<font color="#E5E5E5">and this is a you know</font><font color="#CCCCCC"> 70,000</font><font color="#E5E5E5"> images of</font>

49
00:02:05,610 --> 00:02:10,978
just handwritten digits and<font color="#E5E5E5"> they're</font>

50
00:02:08,399 --> 00:02:13,740
split<font color="#CCCCCC"> into a</font><font color="#E5E5E5"> 60,000 training set and a</font>

51
00:02:10,979 --> 00:02:17,130
10,000 testing set so researcher

52
00:02:13,740 --> 00:02:19,680
can grab<font color="#E5E5E5"> those 60,000 images train a</font>

53
00:02:17,130 --> 00:02:21,720
model<font color="#CCCCCC"> that recognizing that recognizes</font>

54
00:02:19,680 --> 00:02:24,600
what digit is being written<font color="#E5E5E5"> and then</font>

55
00:02:21,720 --> 00:02:26,130
test<font color="#CCCCCC"> that model</font><font color="#E5E5E5"> on a test set</font><font color="#CCCCCC"> and</font>

56
00:02:24,600 --> 00:02:28,440
because all the<font color="#E5E5E5"> researchers are using</font>

57
00:02:26,130 --> 00:02:29,910
<font color="#CCCCCC">the same images that's the same</font><font color="#E5E5E5"> division</font>

58
00:02:28,440 --> 00:02:33,210
then they can<font color="#E5E5E5"> compare their performance</font>

59
00:02:29,910 --> 00:02:35,549
<font color="#CCCCCC">apples</font><font color="#E5E5E5"> apples</font><font color="#CCCCCC"> a leading researcher in</font>

60
00:02:33,210 --> 00:02:37,740
<font color="#E5E5E5">the field calls em</font><font color="#CCCCCC"> NIST</font><font color="#E5E5E5"> like the new</font>

61
00:02:35,550 --> 00:02:39,690
unit<font color="#CCCCCC"> test and what he's kind of</font><font color="#E5E5E5"> saying</font>

62
00:02:37,740 --> 00:02:42,750
is that the algorithms have kind<font color="#E5E5E5"> of</font>

63
00:02:39,690 --> 00:02:44,520
surpassed<font color="#E5E5E5"> the</font><font color="#CCCCCC"> eminences ability to</font>

64
00:02:42,750 --> 00:02:46,500
measure how well that each one<font color="#CCCCCC"> is doing</font>

65
00:02:44,520 --> 00:02:48,480
because<font color="#E5E5E5"> this</font><font color="#CCCCCC"> datasets</font><font color="#E5E5E5"> kind of smaller</font>

66
00:02:46,500 --> 00:02:50,670
and you know we're<font color="#E5E5E5"> doing really well at</font>

67
00:02:48,480 --> 00:02:54,000
optical character recognition now but

68
00:02:50,670 --> 00:02:55,619
even even even<font color="#CCCCCC"> though the algorithms</font>

69
00:02:54,000 --> 00:02:57,150
kind of move beyond<font color="#E5E5E5"> this data set it's</font>

70
00:02:55,620 --> 00:02:59,040
still useful<font color="#E5E5E5"> as kind</font><font color="#CCCCCC"> of a sanity check</font>

71
00:02:57,150 --> 00:03:01,710
kind<font color="#E5E5E5"> of like a benchmark test like oh</font>

72
00:02:59,040 --> 00:03:05,820
the algorithm works here<font color="#CCCCCC"> so we know it's</font>

73
00:03:01,710 --> 00:03:07,710
at<font color="#E5E5E5"> least</font><font color="#CCCCCC"> doing something good another</font>

74
00:03:05,820 --> 00:03:12,060
<font color="#E5E5E5">open source data set</font><font color="#CCCCCC"> that was on that</font>

75
00:03:07,710 --> 00:03:14,310
<font color="#E5E5E5">first plot is a</font><font color="#CCCCCC"> C far and this</font><font color="#E5E5E5"> is again</font>

76
00:03:12,060 --> 00:03:17,010
<font color="#E5E5E5">just a bunch of image images into a</font>

77
00:03:14,310 --> 00:03:19,890
training<font color="#E5E5E5"> and a testing set here though</font>

78
00:03:17,010 --> 00:03:21,149
those images<font color="#E5E5E5"> just have one of ten</font>

79
00:03:19,890 --> 00:03:23,579
<font color="#E5E5E5">different</font><font color="#CCCCCC"> things like</font><font color="#E5E5E5"> ten different</font>

80
00:03:21,150 --> 00:03:25,050
classes<font color="#E5E5E5"> and so you know the</font><font color="#CCCCCC"> the</font>

81
00:03:23,580 --> 00:03:28,590
algorithm is supposed to<font color="#CCCCCC"> recognize which</font>

82
00:03:25,050 --> 00:03:29,760
class this image belongs<font color="#E5E5E5"> to</font><font color="#CCCCCC"> and then</font>

83
00:03:28,590 --> 00:03:34,230
there's a version that<font color="#E5E5E5"> has a hundred</font>

84
00:03:29,760 --> 00:03:36,359
<font color="#CCCCCC">different classes</font><font color="#E5E5E5"> so like I said these</font>

85
00:03:34,230 --> 00:03:39,000
are<font color="#CCCCCC"> very</font><font color="#E5E5E5"> useful to machine learning</font>

86
00:03:36,360 --> 00:03:40,140
researchers in<font color="#E5E5E5"> other</font><font color="#CCCCCC"> fields</font><font color="#E5E5E5"> and but</font>

87
00:03:39,000 --> 00:03:41,880
there's a<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> and that's that</font>

88
00:03:40,140 --> 00:03:43,890
security kind of lacks these data sets

89
00:03:41,880 --> 00:03:45,450
<font color="#E5E5E5">and that's that's been something I've</font>

90
00:03:43,890 --> 00:03:46,890
been<font color="#E5E5E5"> saying</font><font color="#CCCCCC"> since I've gotten</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> to</font>

91
00:03:45,450 --> 00:03:51,570
the security industry<font color="#E5E5E5"> maybe five</font><font color="#CCCCCC"> years</font>

92
00:03:46,890 --> 00:03:52,739
<font color="#E5E5E5">ago so it's not due to any malice on</font>

93
00:03:51,570 --> 00:03:54,720
anyone's<font color="#E5E5E5"> part there's a lot of good</font>

94
00:03:52,740 --> 00:03:56,850
reasons why it's<font color="#E5E5E5"> tough to release these</font>

95
00:03:54,720 --> 00:03:58,200
data sets<font color="#E5E5E5"> in security and that's because</font>

96
00:03:56,850 --> 00:04:01,260
there's personally identifiable

97
00:03:58,200 --> 00:04:02,640
information in them you know<font color="#CCCCCC"> you don't</font>

98
00:04:01,260 --> 00:04:05,250
want to release<font color="#E5E5E5"> those kind of things to</font>

99
00:04:02,640 --> 00:04:07,320
the<font color="#E5E5E5"> public eye and even if you try</font><font color="#CCCCCC"> and</font>

100
00:04:05,250 --> 00:04:09,420
anonymize these<font color="#E5E5E5"> data sets</font><font color="#CCCCCC"> there's been a</font>

101
00:04:07,320 --> 00:04:11,670
lot of<font color="#E5E5E5"> examples in the past where clever</font>

102
00:04:09,420 --> 00:04:14,220
people<font color="#E5E5E5"> can come up with attacks that</font>

103
00:04:11,670 --> 00:04:15,839
kind of<font color="#E5E5E5"> D anonymize</font><font color="#CCCCCC"> datasets</font><font color="#E5E5E5"> and kind of</font>

104
00:04:14,220 --> 00:04:18,829
<font color="#E5E5E5">expose people</font><font color="#CCCCCC"> to information they didn't</font>

105
00:04:15,840 --> 00:04:22,200
<font color="#E5E5E5">think they were giving out to the public</font>

106
00:04:18,829 --> 00:04:23,190
<font color="#CCCCCC">you it's also tough to to</font><font color="#E5E5E5"> release these</font>

107
00:04:22,200 --> 00:04:25,530
because you don't want to communicate

108
00:04:23,190 --> 00:04:27,389
vulnerabilities to<font color="#CCCCCC"> attackers so even if</font>

109
00:04:25,530 --> 00:04:30,020
a company wanted to

110
00:04:27,389 --> 00:04:32,550
for a research forward in like detecting

111
00:04:30,020 --> 00:04:34,590
network intrusions<font color="#E5E5E5"> they might want to</font>

112
00:04:32,550 --> 00:04:36,659
open source<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the their network</font>

113
00:04:34,590 --> 00:04:38,159
traffic<font color="#E5E5E5"> all their infrastructure and</font>

114
00:04:36,659 --> 00:04:40,199
everything<font color="#E5E5E5"> but</font><font color="#CCCCCC"> that would just kind of</font>

115
00:04:38,159 --> 00:04:41,400
show<font color="#E5E5E5"> attackers exactly what they need</font>

116
00:04:40,199 --> 00:04:42,840
like where to attack and what their

117
00:04:41,400 --> 00:04:44,039
vulnerabilities are<font color="#E5E5E5"> so it would be</font>

118
00:04:42,840 --> 00:04:44,400
really<font color="#CCCCCC"> tough to</font><font color="#E5E5E5"> release something like</font>

119
00:04:44,039 --> 00:04:48,688
that

120
00:04:44,400 --> 00:04:50,998
and lastly<font color="#E5E5E5"> intellectual property and</font>

121
00:04:48,689 --> 00:04:52,199
this is<font color="#E5E5E5"> especially important in the</font><font color="#CCCCCC"> area</font>

122
00:04:50,999 --> 00:04:54,469
that I'm gonna<font color="#CCCCCC"> be talking about</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> is</font>

123
00:04:52,199 --> 00:04:57,150
malware identification where you want to

124
00:04:54,469 --> 00:04:59,189
train on benign programs and malicious

125
00:04:57,150 --> 00:05:01,198
programs<font color="#E5E5E5"> it's very tough</font><font color="#CCCCCC"> to release</font>

126
00:04:59,189 --> 00:05:03,090
those benign programs because I mean

127
00:05:01,199 --> 00:05:05,719
that's<font color="#E5E5E5"> what companies</font><font color="#CCCCCC"> are producing</font><font color="#E5E5E5"> and</font>

128
00:05:03,090 --> 00:05:08,279
that's where they make<font color="#E5E5E5"> their money</font>

129
00:05:05,719 --> 00:05:10,379
so<font color="#E5E5E5"> despite those</font><font color="#CCCCCC"> challenges there are</font>

130
00:05:08,279 --> 00:05:12,870
<font color="#E5E5E5">still some datasets that exist in</font>

131
00:05:10,379 --> 00:05:17,580
<font color="#E5E5E5">security for machine learning engineers</font>

132
00:05:12,870 --> 00:05:19,710
to practice on to use and Mike's<font color="#E5E5E5"> gonzo</font>

133
00:05:17,580 --> 00:05:22,430
here<font color="#E5E5E5"> has a great resource for those</font>

134
00:05:19,710 --> 00:05:24,750
<font color="#E5E5E5">that's called</font><font color="#CCCCCC"> sac repo comm I can't</font>

135
00:05:22,430 --> 00:05:27,449
recommend this website highly enough

136
00:05:24,750 --> 00:05:29,460
it's great it's a kind<font color="#E5E5E5"> of just lists out</font>

137
00:05:27,449 --> 00:05:31,199
all bunch of different third parties who

138
00:05:29,460 --> 00:05:33,628
<font color="#CCCCCC">release data sets</font><font color="#E5E5E5"> like this in the field</font>

139
00:05:31,199 --> 00:05:36,960
<font color="#E5E5E5">of</font><font color="#CCCCCC"> security</font><font color="#E5E5E5"> and not</font><font color="#CCCCCC"> only that but he</font>

140
00:05:33,629 --> 00:05:39,089
kind of he tracks his<font color="#E5E5E5"> own logs and then</font>

141
00:05:36,960 --> 00:05:40,888
releases those<font color="#E5E5E5"> so not only is</font><font color="#CCCCCC"> it like a</font>

142
00:05:39,089 --> 00:05:43,770
resource for other people's data it<font color="#E5E5E5"> also</font>

143
00:05:40,889 --> 00:05:46,710
creates open<font color="#CCCCCC"> datasets as it exists which</font>

144
00:05:43,770 --> 00:05:48,389
is<font color="#E5E5E5"> great so here I'm</font><font color="#CCCCCC"> gonna go through a</font>

145
00:05:46,710 --> 00:05:51,419
couple<font color="#CCCCCC"> of the datasets that exist on</font>

146
00:05:48,389 --> 00:05:53,069
that on that<font color="#E5E5E5"> site and kind of by doing</font>

147
00:05:51,419 --> 00:05:54,419
that show you different areas where

148
00:05:53,069 --> 00:05:57,060
machine<font color="#CCCCCC"> learning can be applied to the</font>

149
00:05:54,419 --> 00:05:59,460
security<font color="#CCCCCC"> industry the first one here is</font>

150
00:05:57,060 --> 00:06:01,649
domain<font color="#E5E5E5"> generation algorithms so that's</font>

151
00:05:59,460 --> 00:06:03,930
that's when an algorithm<font color="#E5E5E5"> creates large</font>

152
00:06:01,649 --> 00:06:05,339
number of domain<font color="#E5E5E5"> names that can serve</font><font color="#CCCCCC"> as</font>

153
00:06:03,930 --> 00:06:07,409
rendezvous<font color="#CCCCCC"> for command</font><font color="#E5E5E5"> and control</font>

154
00:06:05,339 --> 00:06:10,979
servers so<font color="#E5E5E5"> you have a piece of malware</font>

155
00:06:07,409 --> 00:06:12,810
<font color="#E5E5E5">and it just generates large numbers of</font>

156
00:06:10,979 --> 00:06:15,930
domains in kind<font color="#CCCCCC"> of semi random</font><font color="#E5E5E5"> and</font>

157
00:06:12,810 --> 00:06:18,120
unpredictable way and the<font color="#CCCCCC"> malware author</font>

158
00:06:15,930 --> 00:06:20,520
<font color="#E5E5E5">you know has</font><font color="#CCCCCC"> that algorithm</font><font color="#E5E5E5"> and is</font><font color="#CCCCCC"> able</font>

159
00:06:18,120 --> 00:06:22,080
<font color="#CCCCCC">to know when you know when a domain</font><font color="#E5E5E5"> is</font>

160
00:06:20,520 --> 00:06:23,938
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to come up and then they</font><font color="#CCCCCC"> can</font>

161
00:06:22,080 --> 00:06:26,068
<font color="#E5E5E5">register one</font><font color="#CCCCCC"> of those large number of</font>

162
00:06:23,939 --> 00:06:27,509
domains<font color="#E5E5E5"> and then each of the pieces</font><font color="#CCCCCC"> of</font>

163
00:06:26,069 --> 00:06:29,550
that<font color="#E5E5E5"> malware is going to go talk to that</font>

164
00:06:27,509 --> 00:06:32,669
one domain<font color="#E5E5E5"> and get instructions</font><font color="#CCCCCC"> about</font>

165
00:06:29,550 --> 00:06:34,110
what<font color="#CCCCCC"> to do next so you can build</font>

166
00:06:32,669 --> 00:06:36,240
detectors for<font color="#E5E5E5"> this using machine</font>

167
00:06:34,110 --> 00:06:38,519
learning<font color="#E5E5E5"> and you would rely on these</font>

168
00:06:36,240 --> 00:06:41,050
<font color="#E5E5E5">data sets the</font><font color="#CCCCCC"> alexa top 1 million</font><font color="#E5E5E5"> will</font>

169
00:06:38,519 --> 00:06:45,490
give you a good set of benign<font color="#CCCCCC"> known</font>

170
00:06:41,050 --> 00:06:47,289
safe<font color="#CCCCCC"> domains and</font><font color="#E5E5E5"> then here</font><font color="#CCCCCC"> they're</font>

171
00:06:45,490 --> 00:06:51,159
listed there there's there's three more

172
00:06:47,289 --> 00:06:53,620
kind<font color="#E5E5E5"> of resources for DGA generated</font>

173
00:06:51,159 --> 00:06:56,080
domain names especially<font color="#CCCCCC"> the</font><font color="#E5E5E5"> last</font><font color="#CCCCCC"> ones</font>

174
00:06:53,620 --> 00:06:57,789
<font color="#CCCCCC">really good</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> yo.hannes</font><font color="#E5E5E5"> there he's</font>

175
00:06:56,080 --> 00:07:00,639
reversed a bunch of<font color="#E5E5E5"> these algorithms</font>

176
00:06:57,789 --> 00:07:03,039
kind of shown what these algorithms<font color="#E5E5E5"> do</font>

177
00:07:00,639 --> 00:07:05,500
in code and then generates a couple

178
00:07:03,039 --> 00:07:09,250
examples for<font color="#E5E5E5"> you</font><font color="#CCCCCC"> to use</font><font color="#E5E5E5"> so I'd highly</font>

179
00:07:05,500 --> 00:07:10,659
<font color="#CCCCCC">recommend</font><font color="#E5E5E5"> not last one so yeah another</font>

180
00:07:09,250 --> 00:07:12,340
<font color="#CCCCCC">thing you can</font><font color="#E5E5E5"> use machine</font><font color="#CCCCCC"> learning for</font>

181
00:07:10,659 --> 00:07:14,800
<font color="#CCCCCC">is</font><font color="#E5E5E5"> kind of network intrusion detection</font>

182
00:07:12,340 --> 00:07:16,448
<font color="#E5E5E5">that's kind of this</font><font color="#CCCCCC"> is an unsupervised</font>

183
00:07:14,800 --> 00:07:18,639
learning problem where it's tough to

184
00:07:16,449 --> 00:07:20,590
have<font color="#CCCCCC"> labeled data so you're kind of</font><font color="#E5E5E5"> just</font>

185
00:07:18,639 --> 00:07:22,509
<font color="#E5E5E5">looking for anomalous Network events and</font>

186
00:07:20,590 --> 00:07:25,150
to me<font color="#E5E5E5"> this turns into an alert ordering</font>

187
00:07:22,509 --> 00:07:27,219
<font color="#E5E5E5">problem this one's very difficult I've</font>

188
00:07:25,150 --> 00:07:29,049
seen a lot less like successful

189
00:07:27,219 --> 00:07:31,780
applications of<font color="#CCCCCC"> machine learning</font><font color="#E5E5E5"> in this</font>

190
00:07:29,050 --> 00:07:34,030
area and it's kind of its kind<font color="#E5E5E5"> of</font>

191
00:07:31,780 --> 00:07:35,799
tempting for<font color="#E5E5E5"> people like me</font><font color="#CCCCCC"> who come in</font>

192
00:07:34,030 --> 00:07:39,159
from<font color="#CCCCCC"> a physics background to be like oh</font>

193
00:07:35,800 --> 00:07:41,199
I'll<font color="#CCCCCC"> just look for</font><font color="#E5E5E5"> look for outliers but</font>

194
00:07:39,159 --> 00:07:43,360
<font color="#E5E5E5">it gets to be a really difficult problem</font>

195
00:07:41,199 --> 00:07:44,979
and<font color="#E5E5E5"> there's a lot of failures over</font><font color="#CCCCCC"> the</font>

196
00:07:43,360 --> 00:07:50,050
years<font color="#E5E5E5"> but there are data sets available</font>

197
00:07:44,979 --> 00:07:51,699
<font color="#E5E5E5">they're very old</font><font color="#CCCCCC"> its newer newer</font><font color="#E5E5E5"> like</font>

198
00:07:50,050 --> 00:07:55,569
network<font color="#CCCCCC"> traffic</font><font color="#E5E5E5"> data</font><font color="#CCCCCC"> sets</font><font color="#E5E5E5"> don't really</font>

199
00:07:51,699 --> 00:07:56,860
exist so now we get<font color="#E5E5E5"> to a static</font>

200
00:07:55,569 --> 00:07:58,180
classification<font color="#CCCCCC"> of malware</font><font color="#E5E5E5"> and that's</font>

201
00:07:56,860 --> 00:08:00,099
kind of<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> what I've</font><font color="#CCCCCC"> been working on</font>

202
00:07:58,180 --> 00:08:02,169
the last<font color="#E5E5E5"> three</font><font color="#CCCCCC"> years</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> what</font>

203
00:08:00,099 --> 00:08:03,789
I'll be<font color="#CCCCCC"> talking</font><font color="#E5E5E5"> about here and this is</font>

204
00:08:02,169 --> 00:08:06,068
basically<font color="#CCCCCC"> the</font><font color="#E5E5E5"> antivirus problem with</font>

205
00:08:03,789 --> 00:08:08,440
machine learning<font color="#CCCCCC"> you have a</font><font color="#E5E5E5"> with a</font>

206
00:08:06,069 --> 00:08:12,039
Windows executable file<font color="#E5E5E5"> is it safe to</font>

207
00:08:08,440 --> 00:08:13,539
<font color="#E5E5E5">run or is it malicious and there are</font>

208
00:08:12,039 --> 00:08:14,440
data sets<font color="#E5E5E5"> available but they're pretty</font>

209
00:08:13,539 --> 00:08:16,900
limited

210
00:08:14,440 --> 00:08:20,740
<font color="#E5E5E5">Drebin here it's not Windows executable</font>

211
00:08:16,900 --> 00:08:22,270
files<font color="#CCCCCC"> it's android apk is instead</font><font color="#E5E5E5"> virus</font>

212
00:08:20,740 --> 00:08:24,039
share is a great resource<font color="#E5E5E5"> for</font>

213
00:08:22,270 --> 00:08:28,210
researchers but it<font color="#E5E5E5"> only provides</font>

214
00:08:24,039 --> 00:08:29,560
<font color="#E5E5E5">malicious malware the Microsoft malware</font>

215
00:08:28,210 --> 00:08:31,960
challenge that happened about<font color="#E5E5E5"> two or</font>

216
00:08:29,560 --> 00:08:34,539
three<font color="#CCCCCC"> years ago</font><font color="#E5E5E5"> and what Microsoft did</font>

217
00:08:31,960 --> 00:08:36,578
was they they released malicious files

218
00:08:34,539 --> 00:08:38,019
from<font color="#E5E5E5"> ten different families and they</font>

219
00:08:36,578 --> 00:08:40,179
posted them<font color="#E5E5E5"> all on this data science</font>

220
00:08:38,019 --> 00:08:43,120
competition<font color="#CCCCCC"> website called Kaggle com</font>

221
00:08:40,179 --> 00:08:45,399
but not only<font color="#E5E5E5"> was it like only malicious</font>

222
00:08:43,120 --> 00:08:46,630
files but that the PE headers were

223
00:08:45,399 --> 00:08:48,490
stripped from<font color="#E5E5E5"> those files so they</font>

224
00:08:46,630 --> 00:08:50,020
<font color="#CCCCCC">weren't they weren't</font><font color="#E5E5E5"> real files and</font><font color="#CCCCCC"> you</font>

225
00:08:48,490 --> 00:08:54,160
couldn't really you couldn't use like

226
00:08:50,020 --> 00:08:54,939
real world techniques on them<font color="#CCCCCC"> if they</font>

227
00:08:54,160 --> 00:08:55,900
were I think<font color="#E5E5E5"> what</font>

228
00:08:54,940 --> 00:08:57,490
they were going<font color="#CCCCCC"> for was kind of like</font>

229
00:08:55,900 --> 00:08:59,079
<font color="#CCCCCC">next-level things like you can use the</font>

230
00:08:57,490 --> 00:09:01,300
<font color="#CCCCCC">information from the PE header but</font><font color="#E5E5E5"> what</font>

231
00:08:59,080 --> 00:09:03,520
else can<font color="#CCCCCC"> you do</font><font color="#E5E5E5"> to classify these</font>

232
00:09:01,300 --> 00:09:07,390
malware families into whatever<font color="#E5E5E5"> family</font>

233
00:09:03,520 --> 00:09:08,890
<font color="#E5E5E5">they're in yeah but still that did spur</font>

234
00:09:07,390 --> 00:09:10,569
research forward there are<font color="#CCCCCC"> a lot of</font>

235
00:09:08,890 --> 00:09:14,140
papers<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that Microsoft malware</font>

236
00:09:10,570 --> 00:09:16,120
challenge<font color="#E5E5E5"> data set so now I'm</font><font color="#CCCCCC"> going to</font>

237
00:09:14,140 --> 00:09:17,470
talk a little<font color="#E5E5E5"> bit about static</font>

238
00:09:16,120 --> 00:09:19,720
classification<font color="#E5E5E5"> of malware</font><font color="#CCCCCC"> and kind</font><font color="#E5E5E5"> of</font>

239
00:09:17,470 --> 00:09:22,060
give a little<font color="#E5E5E5"> introduction into machine</font>

240
00:09:19,720 --> 00:09:24,280
<font color="#CCCCCC">learning in general</font><font color="#E5E5E5"> and and how you</font>

241
00:09:22,060 --> 00:09:26,500
would solve this problem with machine

242
00:09:24,280 --> 00:09:27,699
<font color="#CCCCCC">learning so</font><font color="#E5E5E5"> you have a bunch of benign</font><font color="#CCCCCC"> a</font>

243
00:09:26,500 --> 00:09:29,680
<font color="#E5E5E5">malicious samples and you want to train</font>

244
00:09:27,700 --> 00:09:31,450
a model the first<font color="#E5E5E5"> thing you need to do</font>

245
00:09:29,680 --> 00:09:34,420
is extract<font color="#E5E5E5"> features from all of those</font>

246
00:09:31,450 --> 00:09:37,060
samples<font color="#CCCCCC"> and you're</font><font color="#E5E5E5"> gonna end up</font>

247
00:09:34,420 --> 00:09:38,800
extracting maybe<font color="#CCCCCC"> 2,000 3,000 features or</font>

248
00:09:37,060 --> 00:09:40,510
something but to<font color="#E5E5E5"> simplify it you can</font>

249
00:09:38,800 --> 00:09:41,979
think oh we're<font color="#CCCCCC"> just extracting two of</font>

250
00:09:40,510 --> 00:09:45,819
them and then we can<font color="#E5E5E5"> just plot them on</font>

251
00:09:41,980 --> 00:09:48,250
this graph<font color="#CCCCCC"> and look exactly</font><font color="#E5E5E5"> at them yeah</font>

252
00:09:45,820 --> 00:09:49,750
<font color="#CCCCCC">so if</font><font color="#E5E5E5"> those features were like file size</font>

253
00:09:48,250 --> 00:09:51,640
and number of imports then you could

254
00:09:49,750 --> 00:09:54,130
place<font color="#CCCCCC"> it on a plot and then kind of</font>

255
00:09:51,640 --> 00:09:56,890
separate the<font color="#E5E5E5"> two the the</font><font color="#CCCCCC"> red dots the</font>

256
00:09:54,130 --> 00:09:58,810
malicious dots from<font color="#E5E5E5"> the blue dots and</font>

257
00:09:56,890 --> 00:10:00,699
yeah you want<font color="#E5E5E5"> to predict new samples as</font>

258
00:09:58,810 --> 00:10:02,859
<font color="#CCCCCC">they come in and the way you can do that</font>

259
00:10:00,700 --> 00:10:04,540
<font color="#E5E5E5">is pen by drawing a boundary and then</font>

260
00:10:02,860 --> 00:10:08,050
seeing which side<font color="#CCCCCC"> of the boundary</font><font color="#E5E5E5"> the</font>

261
00:10:04,540 --> 00:10:10,120
new sample is on is<font color="#E5E5E5"> on so you can do</font>

262
00:10:08,050 --> 00:10:12,520
that with rules<font color="#E5E5E5"> yeah it's very easy to</font>

263
00:10:10,120 --> 00:10:14,140
do that<font color="#E5E5E5"> with rules but I you know</font><font color="#CCCCCC"> you</font>

264
00:10:12,520 --> 00:10:16,150
get you end up getting<font color="#CCCCCC"> some of the</font>

265
00:10:14,140 --> 00:10:19,569
samples wrong it doesn't<font color="#CCCCCC"> have the best</font>

266
00:10:16,150 --> 00:10:22,000
<font color="#E5E5E5">performance so you can turn to machine</font>

267
00:10:19,570 --> 00:10:24,010
<font color="#E5E5E5">learning or using a statistical model</font>

268
00:10:22,000 --> 00:10:25,600
that's<font color="#CCCCCC"> going to better describe</font><font color="#E5E5E5"> kind of</font>

269
00:10:24,010 --> 00:10:27,310
the boundary between<font color="#E5E5E5"> the malicious and</font>

270
00:10:25,600 --> 00:10:29,200
<font color="#E5E5E5">the benign and again this is happening</font>

271
00:10:27,310 --> 00:10:31,959
in<font color="#E5E5E5"> two two dimensions but you can</font>

272
00:10:29,200 --> 00:10:35,560
imagine a much more complicated<font color="#E5E5E5"> boundary</font>

273
00:10:31,960 --> 00:10:37,750
in a much higher dimensional space<font color="#CCCCCC"> so I</font>

274
00:10:35,560 --> 00:10:40,199
think we<font color="#CCCCCC"> Hyrum</font><font color="#E5E5E5"> and I generated this plot</font>

275
00:10:37,750 --> 00:10:43,630
<font color="#CCCCCC">using a support vector machine which is</font>

276
00:10:40,200 --> 00:10:45,640
it's expressly<font color="#E5E5E5"> its purpose is</font><font color="#CCCCCC"> to build a</font>

277
00:10:43,630 --> 00:10:47,830
boundary<font color="#CCCCCC"> between the two but</font><font color="#E5E5E5"> there are</font>

278
00:10:45,640 --> 00:10:50,230
many other options<font color="#E5E5E5"> and so how can you</font>

279
00:10:47,830 --> 00:10:53,230
<font color="#E5E5E5">decide which one's best well I'd say</font>

280
00:10:50,230 --> 00:10:55,540
benchmark<font color="#E5E5E5"> data sets are for you so</font><font color="#CCCCCC"> ember</font>

281
00:10:53,230 --> 00:10:57,670
<font color="#E5E5E5">stands for an endgame</font><font color="#CCCCCC"> our benchmark</font><font color="#E5E5E5"> for</font>

282
00:10:55,540 --> 00:11:02,800
research<font color="#CCCCCC"> we hope it</font><font color="#E5E5E5"> becomes known as</font>

283
00:10:57,670 --> 00:11:05,920
<font color="#CCCCCC">m-miss for malware and so a caveat I</font>

284
00:11:02,800 --> 00:11:08,199
know amber I think<font color="#E5E5E5"> is a good name I</font>

285
00:11:05,920 --> 00:11:08,800
<font color="#E5E5E5">chose it</font><font color="#CCCCCC"> because the letters line up</font>

286
00:11:08,200 --> 00:11:11,769
everything

287
00:11:08,800 --> 00:11:13,390
it's great<font color="#E5E5E5"> but I also chose it</font><font color="#CCCCCC"> so I</font>

288
00:11:11,769 --> 00:11:15,730
could say this joke<font color="#E5E5E5"> over and over again</font>

289
00:11:13,390 --> 00:11:18,790
so<font color="#CCCCCC"> I hope you guys don't get tired</font><font color="#E5E5E5"> of it</font>

290
00:11:15,730 --> 00:11:21,430
<font color="#E5E5E5">because I'm not going to all right so</font>

291
00:11:18,790 --> 00:11:24,189
what is<font color="#CCCCCC"> ember amber is an</font><font color="#E5E5E5"> open source</font>

292
00:11:21,430 --> 00:11:27,219
<font color="#E5E5E5">collection of 1.1 million PE file hashes</font>

293
00:11:24,190 --> 00:11:28,350
<font color="#E5E5E5">that were scanned sometime in 2017 by</font>

294
00:11:27,220 --> 00:11:31,089
virustotal

295
00:11:28,350 --> 00:11:33,850
the<font color="#E5E5E5"> dataset includes metadata like the</font>

296
00:11:31,089 --> 00:11:35,500
hash<font color="#E5E5E5"> it also includes derived features</font><font color="#CCCCCC"> a</font>

297
00:11:33,850 --> 00:11:37,360
model trained on those<font color="#E5E5E5"> features and</font>

298
00:11:35,500 --> 00:11:39,570
there is a github repository that<font color="#E5E5E5"> makes</font>

299
00:11:37,360 --> 00:11:41,769
it easy to<font color="#CCCCCC"> work with</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> of this data</font>

300
00:11:39,570 --> 00:11:44,769
<font color="#E5E5E5">importantly it does not include the</font>

301
00:11:41,769 --> 00:11:46,300
files themselves<font color="#CCCCCC"> like I</font><font color="#E5E5E5"> said earlier you</font>

302
00:11:44,769 --> 00:11:48,370
<font color="#CCCCCC">know that that would kind of if we did</font>

303
00:11:46,300 --> 00:11:49,750
<font color="#E5E5E5">include all these benign files</font><font color="#CCCCCC"> they're</font>

304
00:11:48,370 --> 00:11:52,000
not ours<font color="#CCCCCC"> we would be releasing</font><font color="#E5E5E5"> other</font>

305
00:11:49,750 --> 00:11:54,100
<font color="#E5E5E5">companies intellectual property into the</font>

306
00:11:52,000 --> 00:11:56,740
wild<font color="#E5E5E5"> and we don't own those programs we</font>

307
00:11:54,100 --> 00:11:59,850
can't do that<font color="#E5E5E5"> but we can release derived</font>

308
00:11:56,740 --> 00:12:02,470
features from all of those files<font color="#CCCCCC"> so</font>

309
00:11:59,850 --> 00:12:04,540
<font color="#CCCCCC">there it's divided into</font><font color="#E5E5E5"> a training and</font>

310
00:12:02,470 --> 00:12:06,399
test set we have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> nine hundred</font><font color="#CCCCCC"> thousand</font>

311
00:12:04,540 --> 00:12:09,819
training set and<font color="#CCCCCC"> a</font><font color="#E5E5E5"> two hundred thousand</font>

312
00:12:06,399 --> 00:12:11,709
testing set<font color="#E5E5E5"> the training set is divided</font>

313
00:12:09,820 --> 00:12:16,390
between<font color="#E5E5E5"> evenly divided between benign</font>

314
00:12:11,709 --> 00:12:17,739
malicious and unlabeled samples and<font color="#E5E5E5"> the</font>

315
00:12:16,390 --> 00:12:19,779
training<font color="#E5E5E5"> set data appears</font>

316
00:12:17,740 --> 00:12:22,000
<font color="#E5E5E5">chronologically prior to the test data</font>

317
00:12:19,779 --> 00:12:23,380
<font color="#CCCCCC">and this</font><font color="#E5E5E5"> is kind of important</font><font color="#CCCCCC"> because it</font>

318
00:12:22,000 --> 00:12:26,350
kind of reflects the nature<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

319
00:12:23,380 --> 00:12:28,360
problem<font color="#E5E5E5"> you know malware is always</font>

320
00:12:26,350 --> 00:12:30,550
evolving<font color="#CCCCCC"> a benign software is always</font>

321
00:12:28,360 --> 00:12:33,220
<font color="#E5E5E5">evolving it looks different over time</font>

322
00:12:30,550 --> 00:12:35,500
<font color="#E5E5E5">but you need to train a model at some</font>

323
00:12:33,220 --> 00:12:37,120
point and release it<font color="#E5E5E5"> so you can train a</font>

324
00:12:35,500 --> 00:12:40,060
model<font color="#E5E5E5"> on all the data you have at one</font>

325
00:12:37,120 --> 00:12:41,740
time<font color="#E5E5E5"> but then your goal with</font><font color="#CCCCCC"> that model</font>

326
00:12:40,060 --> 00:12:43,930
is to predict new data that<font color="#E5E5E5"> comes along</font>

327
00:12:41,740 --> 00:12:46,209
<font color="#E5E5E5">data the malware samples you haven't</font>

328
00:12:43,930 --> 00:12:48,279
seen<font color="#CCCCCC"> before</font><font color="#E5E5E5"> or malware families that you</font>

329
00:12:46,209 --> 00:12:49,689
haven't seen<font color="#CCCCCC"> before</font><font color="#E5E5E5"> so you need to train</font>

330
00:12:48,279 --> 00:12:55,140
them<font color="#E5E5E5"> all at some point</font><font color="#CCCCCC"> and then judge</font>

331
00:12:49,690 --> 00:12:55,140
its performance<font color="#E5E5E5"> on what comes next</font><font color="#CCCCCC"> so I</font>

332
00:12:55,920 --> 00:13:02,140
should have<font color="#E5E5E5"> got that song into my</font>

333
00:12:58,089 --> 00:13:03,880
problem my presentation here<font color="#CCCCCC"> yeah so all</font>

334
00:13:02,140 --> 00:13:06,670
the training<font color="#CCCCCC"> data that</font><font color="#E5E5E5"> we have to</font>

335
00:13:03,880 --> 00:13:09,279
<font color="#CCCCCC">provide labels for is October or earlier</font>

336
00:13:06,670 --> 00:13:10,779
in 2017 and this is<font color="#E5E5E5"> why not this is when</font>

337
00:13:09,279 --> 00:13:13,269
the<font color="#E5E5E5"> data is first seen when</font><font color="#CCCCCC"> the malware</font>

338
00:13:10,779 --> 00:13:15,640
or the<font color="#CCCCCC"> benign files are first seen</font><font color="#E5E5E5"> and</font>

339
00:13:13,269 --> 00:13:17,260
then you can train a model<font color="#E5E5E5"> on all that</font>

340
00:13:15,640 --> 00:13:19,329
<font color="#E5E5E5">data up till then and then you can test</font>

341
00:13:17,260 --> 00:13:21,550
it<font color="#E5E5E5"> on samples that</font><font color="#CCCCCC"> are first seen in</font>

342
00:13:19,329 --> 00:13:22,660
November<font color="#CCCCCC"> and December and then we</font>

343
00:13:21,550 --> 00:13:23,949
<font color="#E5E5E5">provide the month</font>

344
00:13:22,660 --> 00:13:26,379
that's part of the metadata<font color="#E5E5E5"> that we're</font>

345
00:13:23,949 --> 00:13:28,180
providing<font color="#CCCCCC"> so it's not the exact day but</font>

346
00:13:26,379 --> 00:13:30,250
by providing<font color="#E5E5E5"> the month we can we allow</font>

347
00:13:28,180 --> 00:13:33,459
you<font color="#E5E5E5"> to do chronological cross validation</font>

348
00:13:30,250 --> 00:13:36,730
<font color="#E5E5E5">or quantify model performance</font>

349
00:13:33,459 --> 00:13:38,649
<font color="#E5E5E5">degradation over time so you know you</font>

350
00:13:36,730 --> 00:13:40,689
<font color="#CCCCCC">train a malware model and it's a text</font>

351
00:13:38,649 --> 00:13:42,430
malware very well but then<font color="#E5E5E5"> malware kind</font>

352
00:13:40,689 --> 00:13:44,349
of continues<font color="#E5E5E5"> to evolve to things that</font>

353
00:13:42,430 --> 00:13:47,439
<font color="#CCCCCC">you haven't</font><font color="#E5E5E5"> seen</font><font color="#CCCCCC"> before and your model</font>

354
00:13:44,350 --> 00:13:50,860
<font color="#E5E5E5">gets worse and worse</font><font color="#CCCCCC"> at classifying that</font>

355
00:13:47,439 --> 00:13:52,959
new malware<font color="#E5E5E5"> so what you can do kind of</font>

356
00:13:50,860 --> 00:13:54,399
with this data set<font color="#E5E5E5"> is choose an</font>

357
00:13:52,959 --> 00:13:56,888
<font color="#E5E5E5">arbitrary cutoff and say we're going to</font>

358
00:13:54,399 --> 00:13:58,120
train on data up till June and then

359
00:13:56,889 --> 00:14:00,519
we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to say how well does it</font>

360
00:13:58,120 --> 00:14:02,079
classify data<font color="#E5E5E5"> in July and then you can</font>

361
00:14:00,519 --> 00:14:04,379
say how<font color="#CCCCCC"> old is</font><font color="#E5E5E5"> it classify it data in</font>

362
00:14:02,079 --> 00:14:09,579
August<font color="#E5E5E5"> and so on and</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> watch how</font>

363
00:14:04,379 --> 00:14:10,810
how much worse your model becomes so

364
00:14:09,579 --> 00:14:12,579
yeah that's a lot<font color="#CCCCCC"> of information about</font>

365
00:14:10,810 --> 00:14:14,979
the data there<font color="#E5E5E5"> this is what it looks</font>

366
00:14:12,579 --> 00:14:18,609
like<font color="#CCCCCC"> actually on</font><font color="#E5E5E5"> disk we're distributing</font>

367
00:14:14,980 --> 00:14:21,129
that<font color="#E5E5E5"> visa to file it's one</font><font color="#CCCCCC"> point</font><font color="#E5E5E5"> six</font>

368
00:14:18,610 --> 00:14:23,079
gigabytes<font color="#E5E5E5"> on disk when you extract it</font>

369
00:14:21,129 --> 00:14:27,399
<font color="#E5E5E5">and you go into that directory</font><font color="#CCCCCC"> there's</font>

370
00:14:23,079 --> 00:14:30,459
<font color="#CCCCCC">seven JSON blob files and yeah each line</font>

371
00:14:27,399 --> 00:14:32,250
is<font color="#CCCCCC"> actually a JSON blob</font><font color="#E5E5E5"> unless we can</font>

372
00:14:30,459 --> 00:14:34,719
look into<font color="#E5E5E5"> one of these files here</font>

373
00:14:32,250 --> 00:14:36,189
so the first three<font color="#E5E5E5"> keys in each of those</font>

374
00:14:34,720 --> 00:14:38,529
JSON blobs is kind of<font color="#E5E5E5"> the metadata</font>

375
00:14:36,189 --> 00:14:40,209
that's the hash<font color="#E5E5E5"> I've already talked</font>

376
00:14:38,529 --> 00:14:42,040
about<font color="#E5E5E5"> the month and then</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> label zero</font>

377
00:14:40,209 --> 00:14:45,758
for benign one for malicious and

378
00:14:42,040 --> 00:14:48,250
negative 1 for unlabeled<font color="#CCCCCC"> and then the</font>

379
00:14:45,759 --> 00:14:50,290
<font color="#E5E5E5">next keys in each of these blobs are the</font>

380
00:14:48,250 --> 00:14:53,290
features themselves<font color="#E5E5E5"> on</font><font color="#CCCCCC"> there eight</font>

381
00:14:50,290 --> 00:14:55,599
categories<font color="#E5E5E5"> of features and those eight</font>

382
00:14:53,290 --> 00:14:58,180
categories<font color="#E5E5E5"> of features fall into two two</font>

383
00:14:55,600 --> 00:14:59,500
<font color="#E5E5E5">different categories</font><font color="#CCCCCC"> one the</font><font color="#E5E5E5"> first that</font>

384
00:14:58,180 --> 00:15:01,089
can be calculated just<font color="#E5E5E5"> from the raw</font>

385
00:14:59,500 --> 00:15:02,980
bytes<font color="#CCCCCC"> all you need is the file itself</font>

386
00:15:01,089 --> 00:15:05,800
<font color="#E5E5E5">and then you can count how many how many</font>

387
00:15:02,980 --> 00:15:07,480
<font color="#E5E5E5">times each byte occurs and so</font><font color="#CCCCCC"> on you</font><font color="#E5E5E5"> can</font>

388
00:15:05,800 --> 00:15:10,630
also extract strings right from<font color="#CCCCCC"> that raw</font>

389
00:15:07,480 --> 00:15:11,620
<font color="#CCCCCC">data</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> in a bunch of these categories</font>

390
00:15:10,630 --> 00:15:14,769
of features you're going<font color="#CCCCCC"> to actually</font>

391
00:15:11,620 --> 00:15:16,389
<font color="#CCCCCC">need</font><font color="#E5E5E5"> to parse the PE file format and so</font>

392
00:15:14,769 --> 00:15:18,639
we're using<font color="#CCCCCC"> an open source solution to</font>

393
00:15:16,389 --> 00:15:21,430
do that<font color="#E5E5E5"> called leaf it's the library to</font>

394
00:15:18,639 --> 00:15:23,529
instrument executable formats<font color="#E5E5E5"> and this</font>

395
00:15:21,430 --> 00:15:25,540
<font color="#CCCCCC">Cork's lab open source to this library</font>

396
00:15:23,529 --> 00:15:27,490
<font color="#E5E5E5">and we rely on it and we got to give a</font>

397
00:15:25,540 --> 00:15:31,540
<font color="#E5E5E5">big shout out to the</font><font color="#CCCCCC"> Cork's</font><font color="#E5E5E5"> lab people</font>

398
00:15:27,490 --> 00:15:33,100
<font color="#E5E5E5">for for doing</font><font color="#CCCCCC"> this all right</font>

399
00:15:31,540 --> 00:15:35,800
a one more<font color="#E5E5E5"> note before I kind</font><font color="#CCCCCC"> of go</font>

400
00:15:33,100 --> 00:15:36,579
through those feature categories future

401
00:15:35,800 --> 00:15:38,258
calculation is a

402
00:15:36,579 --> 00:15:40,420
<font color="#CCCCCC">two</font><font color="#E5E5E5"> step process this is the code the</font>

403
00:15:38,259 --> 00:15:41,589
details are<font color="#CCCCCC"> not important but I</font><font color="#E5E5E5"> just</font>

404
00:15:40,420 --> 00:15:44,559
want to highlight that<font color="#CCCCCC"> there's two</font>

405
00:15:41,589 --> 00:15:47,920
functions to calculate<font color="#E5E5E5"> the features from</font>

406
00:15:44,559 --> 00:15:50,249
from the file itself<font color="#E5E5E5"> and that first</font><font color="#CCCCCC"> step</font>

407
00:15:47,920 --> 00:15:52,479
generates these JSON blobs<font color="#E5E5E5"> that were</font>

408
00:15:50,249 --> 00:15:53,619
distributing that's kind of called the

409
00:15:52,480 --> 00:15:55,629
raw features that's<font color="#E5E5E5"> what we've</font><font color="#CCCCCC"> been</font>

410
00:15:53,619 --> 00:15:57,189
calling the<font color="#E5E5E5"> raw features once you have</font>

411
00:15:55,629 --> 00:15:59,259
that JSON blob you need to feed it to

412
00:15:57,189 --> 00:16:01,059
the second function<font color="#E5E5E5"> and the output of</font>

413
00:15:59,259 --> 00:16:04,869
that<font color="#E5E5E5"> function is a feature vector and</font>

414
00:16:01,059 --> 00:16:06,549
that's just a<font color="#E5E5E5"> vector of floats a feature</font>

415
00:16:04,869 --> 00:16:08,589
vector<font color="#CCCCCC"> once you have a</font><font color="#E5E5E5"> feature vector</font>

416
00:16:06,549 --> 00:16:10,480
you can<font color="#E5E5E5"> feed</font><font color="#CCCCCC"> that into a bunch of</font>

417
00:16:08,589 --> 00:16:12,839
different<font color="#E5E5E5"> machine</font><font color="#CCCCCC"> learning algorithms a</font>

418
00:16:10,480 --> 00:16:16,629
lot of algorithms<font color="#E5E5E5"> accept feature vectors</font>

419
00:16:12,839 --> 00:16:17,920
<font color="#CCCCCC">and the model</font><font color="#E5E5E5"> that we're distributing is</font>

420
00:16:16,629 --> 00:16:21,670
a gradient boosted decision tree that

421
00:16:17,920 --> 00:16:23,649
<font color="#E5E5E5">certainly accepts feature vectors so the</font>

422
00:16:21,670 --> 00:16:24,998
point<font color="#E5E5E5"> is it's a two-step process we're</font>

423
00:16:23,649 --> 00:16:27,429
kind<font color="#CCCCCC"> of releasing features in the middle</font>

424
00:16:24,999 --> 00:16:29,170
of<font color="#E5E5E5"> that process</font><font color="#CCCCCC"> and we're doing that so</font>

425
00:16:27,429 --> 00:16:32,259
that<font color="#CCCCCC"> if you think you</font><font color="#E5E5E5"> have a better</font>

426
00:16:29,170 --> 00:16:34,360
solution<font color="#E5E5E5"> for vectorizing features you</font>

427
00:16:32,259 --> 00:16:36,519
know that we're using feature<font color="#E5E5E5"> hasher</font>

428
00:16:34,360 --> 00:16:38,589
that's a function<font color="#E5E5E5"> that's in the open</font>

429
00:16:36,519 --> 00:16:39,819
source<font color="#E5E5E5"> library scikit-learn if you think</font>

430
00:16:38,589 --> 00:16:41,649
you have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> better solution to doing that</font>

431
00:16:39,819 --> 00:16:43,660
then you can<font color="#CCCCCC"> take these JSON blobs</font>

432
00:16:41,649 --> 00:16:45,309
<font color="#E5E5E5">vector as</font><font color="#CCCCCC"> the features yourself train a</font>

433
00:16:43,660 --> 00:16:47,110
new model and<font color="#E5E5E5"> show that it's performance</font>

434
00:16:45,309 --> 00:16:51,819
is<font color="#E5E5E5"> better than the</font><font color="#CCCCCC"> benchmark model</font><font color="#E5E5E5"> that</font>

435
00:16:47,110 --> 00:16:53,499
<font color="#CCCCCC">were releasing so we have</font><font color="#E5E5E5"> white</font>

436
00:16:51,819 --> 00:16:55,988
histograms that's just how many<font color="#E5E5E5"> times</font>

437
00:16:53,499 --> 00:16:58,569
<font color="#CCCCCC">each byte occurs in a file we also do a</font>

438
00:16:55,989 --> 00:17:00,610
<font color="#CCCCCC">byte entropy histogram calculation</font><font color="#E5E5E5"> this</font>

439
00:16:58,569 --> 00:17:03,939
is<font color="#CCCCCC"> a kind of a sliding</font><font color="#E5E5E5"> window entropy</font>

440
00:17:00,610 --> 00:17:05,559
<font color="#E5E5E5">calculation that benchmarks it's those</font>

441
00:17:03,939 --> 00:17:08,168
entropy calculations back to what

442
00:17:05,559 --> 00:17:10,359
<font color="#E5E5E5">flights occur in that window but there's</font>

443
00:17:08,169 --> 00:17:13,990
many<font color="#E5E5E5"> more</font><font color="#CCCCCC"> details in that</font><font color="#E5E5E5"> paper</font><font color="#CCCCCC"> that I</font>

444
00:17:10,359 --> 00:17:15,789
show there there's also section

445
00:17:13,990 --> 00:17:17,230
<font color="#CCCCCC">information</font><font color="#E5E5E5"> so we're looking at the PE</font>

446
00:17:15,789 --> 00:17:19,000
header we're looking at what sections

447
00:17:17,230 --> 00:17:21,130
occur<font color="#E5E5E5"> we're looking how big they are</font>

448
00:17:19,000 --> 00:17:24,119
<font color="#E5E5E5">how complicated they are and we're also</font>

449
00:17:21,130 --> 00:17:27,220
distributing what the entry section<font color="#E5E5E5"> is</font>

450
00:17:24,119 --> 00:17:29,620
imports and exports<font color="#E5E5E5"> we're showing with</font>

451
00:17:27,220 --> 00:17:31,750
what<font color="#E5E5E5"> libraries functions are imported</font>

452
00:17:29,620 --> 00:17:34,629
from<font color="#E5E5E5"> and and what the function names are</font>

453
00:17:31,750 --> 00:17:37,120
<font color="#CCCCCC">also listing all the exports while</font>

454
00:17:34,630 --> 00:17:39,159
string information<font color="#E5E5E5"> I mentioned so we're</font>

455
00:17:37,120 --> 00:17:41,018
not distributing all the strings<font color="#E5E5E5"> that</font>

456
00:17:39,159 --> 00:17:42,130
occur in the<font color="#E5E5E5"> file because</font><font color="#CCCCCC"> we were a</font>

457
00:17:41,019 --> 00:17:44,380
little<font color="#E5E5E5"> worried</font><font color="#CCCCCC"> about personally</font>

458
00:17:42,130 --> 00:17:45,909
identifiable information<font color="#E5E5E5"> or intellectual</font>

459
00:17:44,380 --> 00:17:47,889
property<font color="#CCCCCC"> so we didn't</font><font color="#E5E5E5"> want to release</font>

460
00:17:45,909 --> 00:17:50,160
all<font color="#E5E5E5"> those strings so release</font><font color="#CCCCCC"> we're</font>

461
00:17:47,889 --> 00:17:52,260
releasing statistics about those strings

462
00:17:50,160 --> 00:17:54,060
and you can see the number of<font color="#E5E5E5"> them</font>

463
00:17:52,260 --> 00:17:56,310
<font color="#CCCCCC">they're average lengths we're doing a</font>

464
00:17:54,060 --> 00:17:59,100
histogram<font color="#E5E5E5"> of the characters that occur</font>

465
00:17:56,310 --> 00:18:00,780
in all the strings<font color="#E5E5E5"> those last four keys</font>

466
00:17:59,100 --> 00:18:04,620
there that's kind of we<font color="#E5E5E5"> have regular</font>

467
00:18:00,780 --> 00:18:06,180
expressions that match strings that that

468
00:18:04,620 --> 00:18:07,949
might look like<font color="#E5E5E5"> a path or might look</font>

469
00:18:06,180 --> 00:18:09,510
like<font color="#E5E5E5"> a URL</font><font color="#CCCCCC"> and so then we're just</font>

470
00:18:07,950 --> 00:18:11,610
<font color="#CCCCCC">counting up</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> number of</font><font color="#E5E5E5"> times</font><font color="#CCCCCC"> those</font>

471
00:18:09,510 --> 00:18:14,840
types of things occur in the file and

472
00:18:11,610 --> 00:18:17,159
then distributing that that count

473
00:18:14,840 --> 00:18:19,740
there's also<font color="#E5E5E5"> general information here</font>

474
00:18:17,160 --> 00:18:21,930
that's just<font color="#CCCCCC"> kind of pulled from the the</font>

475
00:18:19,740 --> 00:18:23,520
PE header itself<font color="#E5E5E5"> and more specific</font>

476
00:18:21,930 --> 00:18:26,220
information<font color="#E5E5E5"> that's in</font><font color="#CCCCCC"> the PE header like</font>

477
00:18:23,520 --> 00:18:28,650
what machines<font color="#CCCCCC"> these files were compiled</font>

478
00:18:26,220 --> 00:18:30,480
on the compiler<font color="#CCCCCC"> version this</font><font color="#E5E5E5"> is all</font>

479
00:18:28,650 --> 00:18:32,520
really<font color="#E5E5E5"> small but the data is</font><font color="#CCCCCC"> open source</font>

480
00:18:30,480 --> 00:18:36,360
you<font color="#E5E5E5"> can get it for all the 1.1 million</font>

481
00:18:32,520 --> 00:18:40,170
samples so<font color="#E5E5E5"> I talked a little bit about</font>

482
00:18:36,360 --> 00:18:41,580
vectorization<font color="#E5E5E5"> it I just want to dwell on</font>

483
00:18:40,170 --> 00:18:44,730
the fact<font color="#E5E5E5"> that it's a necessary</font><font color="#CCCCCC"> step</font>

484
00:18:41,580 --> 00:18:46,260
<font color="#CCCCCC">before you train a model</font><font color="#E5E5E5"> and the code</font>

485
00:18:44,730 --> 00:18:48,630
<font color="#CCCCCC">that we're releasing defines how you</font>

486
00:18:46,260 --> 00:18:51,750
<font color="#CCCCCC">vectorize these JSON blobs</font><font color="#E5E5E5"> into feature</font>

487
00:18:48,630 --> 00:18:53,280
vectors I downloaded the<font color="#E5E5E5"> data</font><font color="#CCCCCC"> onto this</font>

488
00:18:51,750 --> 00:18:55,860
computer<font color="#CCCCCC"> right here and the</font><font color="#E5E5E5"> feature of</font>

489
00:18:53,280 --> 00:18:58,410
vectorization took 20 hours<font color="#E5E5E5"> but it can</font>

490
00:18:55,860 --> 00:19:00,149
take like as short as 15<font color="#E5E5E5"> minutes on on</font>

491
00:18:58,410 --> 00:19:04,950
some servers that we have<font color="#E5E5E5"> a</font><font color="#CCCCCC"> ten-game so</font>

492
00:19:00,150 --> 00:19:06,510
it varies<font color="#CCCCCC"> so that's a lot of information</font>

493
00:19:04,950 --> 00:19:08,640
<font color="#CCCCCC">about all the</font><font color="#E5E5E5"> features</font><font color="#CCCCCC"> we're</font>

494
00:19:06,510 --> 00:19:09,810
distributing<font color="#E5E5E5"> I'm going to talk a little</font>

495
00:19:08,640 --> 00:19:11,970
bit<font color="#E5E5E5"> here</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> the model we're</font>

496
00:19:09,810 --> 00:19:14,220
distributing<font color="#E5E5E5"> as well we train</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> model a</font>

497
00:19:11,970 --> 00:19:17,010
gradient boosted decision tree model<font color="#CCCCCC"> and</font>

498
00:19:14,220 --> 00:19:19,320
we used the library<font color="#CCCCCC"> Lite GBM to</font><font color="#E5E5E5"> train</font>

499
00:19:17,010 --> 00:19:20,879
that<font color="#E5E5E5"> model this is kind of a summary of</font>

500
00:19:19,320 --> 00:19:23,730
the code<font color="#CCCCCC"> that we use to train that model</font>

501
00:19:20,880 --> 00:19:25,860
<font color="#E5E5E5">it's very simple</font><font color="#CCCCCC"> we made no decisions</font>

502
00:19:23,730 --> 00:19:27,720
<font color="#E5E5E5">going into it it's mostly default</font>

503
00:19:25,860 --> 00:19:29,340
parameters there's one parameter<font color="#CCCCCC"> we've</font>

504
00:19:27,720 --> 00:19:31,590
<font color="#E5E5E5">specified there that we're doing a</font>

505
00:19:29,340 --> 00:19:35,100
binary classification<font color="#CCCCCC"> but</font><font color="#E5E5E5"> other than</font>

506
00:19:31,590 --> 00:19:39,060
that<font color="#E5E5E5"> it's very very simple it's</font><font color="#CCCCCC"> about 23</font>

507
00:19:35,100 --> 00:19:41,669
<font color="#E5E5E5">or 25 trees don't hold 25 decision trees</font>

508
00:19:39,060 --> 00:19:43,290
don't<font color="#E5E5E5"> hold me</font><font color="#CCCCCC"> to that though but</font><font color="#E5E5E5"> yeah</font>

509
00:19:41,670 --> 00:19:45,990
and<font color="#E5E5E5"> then that's distributed along with</font>

510
00:19:43,290 --> 00:19:48,300
all the<font color="#CCCCCC"> features and again yeah I</font>

511
00:19:45,990 --> 00:19:50,940
<font color="#CCCCCC">trained the model on this laptop it took</font>

512
00:19:48,300 --> 00:19:54,750
about<font color="#E5E5E5"> three hours</font><font color="#CCCCCC"> and it takes a little</font>

513
00:19:50,940 --> 00:19:57,240
<font color="#CCCCCC">bit quicker on other servers oh yeah so</font>

514
00:19:54,750 --> 00:20:00,180
once you have<font color="#E5E5E5"> a model</font><font color="#CCCCCC"> we've trained it</font>

515
00:19:57,240 --> 00:20:01,410
on the<font color="#CCCCCC"> 300,000 benign and 300,000</font>

516
00:20:00,180 --> 00:20:03,779
malicious samples<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are in the</font>

517
00:20:01,410 --> 00:20:06,210
<font color="#E5E5E5">training set we ignored the unlabeled</font>

518
00:20:03,779 --> 00:20:08,070
samples<font color="#CCCCCC"> and once you have a model you</font>

519
00:20:06,210 --> 00:20:10,080
<font color="#E5E5E5">can then make a</font><font color="#CCCCCC"> prediction on</font><font color="#E5E5E5"> all the</font>

520
00:20:08,070 --> 00:20:11,700
data<font color="#E5E5E5"> that's in the test set</font><font color="#CCCCCC"> and that's a</font>

521
00:20:10,080 --> 00:20:15,029
histogram<font color="#CCCCCC"> of all the scores there the</font>

522
00:20:11,700 --> 00:20:16,590
red is for<font color="#CCCCCC"> the scores from</font><font color="#E5E5E5"> the model on</font>

523
00:20:15,029 --> 00:20:17,969
<font color="#E5E5E5">the malicious files and the blue is for</font>

524
00:20:16,590 --> 00:20:19,289
those on<font color="#CCCCCC"> the benign and you can see</font>

525
00:20:17,969 --> 00:20:21,779
there's a<font color="#CCCCCC"> little overlap which kind of</font>

526
00:20:19,289 --> 00:20:23,549
represents<font color="#E5E5E5"> the error but uh yeah the</font>

527
00:20:21,779 --> 00:20:27,809
scores range from<font color="#E5E5E5"> zero to one one for</font>

528
00:20:23,549 --> 00:20:29,099
more malicious<font color="#E5E5E5"> zero for more benign once</font>

529
00:20:27,809 --> 00:20:31,320
you do make<font color="#E5E5E5"> all those predictions on the</font>

530
00:20:29,099 --> 00:20:33,090
<font color="#E5E5E5">test set then</font><font color="#CCCCCC"> you can kind of make you</font>

531
00:20:31,320 --> 00:20:35,489
can say how well you're doing<font color="#E5E5E5"> and give</font>

532
00:20:33,090 --> 00:20:37,228
some performance data<font color="#CCCCCC"> the way I like to</font>

533
00:20:35,489 --> 00:20:40,799
<font color="#E5E5E5">do that as a receiver operator</font>

534
00:20:37,229 --> 00:20:42,509
characteristic<font color="#E5E5E5"> occurred and there's more</font>

535
00:20:40,799 --> 00:20:43,918
<font color="#CCCCCC">information about you know what that</font>

536
00:20:42,509 --> 00:20:47,339
curve is kind of<font color="#E5E5E5"> in the paper we're</font>

537
00:20:43,919 --> 00:20:48,599
distributing<font color="#E5E5E5"> but this is the once you</font>

538
00:20:47,339 --> 00:20:50,940
generate<font color="#E5E5E5"> that curve</font><font color="#CCCCCC"> you can calculate</font>

539
00:20:48,599 --> 00:20:52,950
<font color="#E5E5E5">the</font><font color="#CCCCCC"> area under it</font><font color="#E5E5E5"> the more area under</font>

540
00:20:50,940 --> 00:20:55,710
that curve the better<font color="#E5E5E5"> your model is at</font>

541
00:20:52,950 --> 00:20:58,229
distinguishing<font color="#E5E5E5"> benign from</font><font color="#CCCCCC"> malicious so</font>

542
00:20:55,710 --> 00:21:00,210
those are the numbers<font color="#CCCCCC"> there if you you</font>

543
00:20:58,229 --> 00:21:04,259
can<font color="#CCCCCC"> then pick a threshold</font><font color="#E5E5E5"> like between</font>

544
00:21:00,210 --> 00:21:05,849
<font color="#E5E5E5">zero and one you're gonna say okay 0.87</font>

545
00:21:04,259 --> 00:21:07,109
<font color="#CCCCCC">one any score above</font><font color="#E5E5E5"> that that's</font>

546
00:21:05,849 --> 00:21:10,168
malicious that can't run on<font color="#CCCCCC"> a computer</font>

547
00:21:07,109 --> 00:21:12,389
anything<font color="#E5E5E5"> below</font><font color="#CCCCCC"> that we see</font><font color="#E5E5E5"> we say is</font>

548
00:21:10,169 --> 00:21:13,889
safe once you pick a threshold then you

549
00:21:12,389 --> 00:21:15,478
can say what the false positive rate

550
00:21:13,889 --> 00:21:17,008
with the false negative rate and so

551
00:21:15,479 --> 00:21:22,710
honest and so<font color="#E5E5E5"> those numbers are right</font>

552
00:21:17,009 --> 00:21:24,809
there<font color="#E5E5E5"> so big disclaimer this</font><font color="#CCCCCC"> Ember model</font>

553
00:21:22,710 --> 00:21:27,570
is not<font color="#E5E5E5"> malware score this</font><font color="#CCCCCC"> is a research</font>

554
00:21:24,809 --> 00:21:29,700
<font color="#E5E5E5">model malware score is better optimized</font>

555
00:21:27,570 --> 00:21:32,309
has better features performs better<font color="#E5E5E5"> and</font>

556
00:21:29,700 --> 00:21:34,139
in my totally biased opinion is the best

557
00:21:32,309 --> 00:21:38,749
<font color="#CCCCCC">method for protecting</font><font color="#E5E5E5"> your endpoints</font>

558
00:21:34,139 --> 00:21:40,978
<font color="#E5E5E5">against malware it's great you I mean</font>

559
00:21:38,749 --> 00:21:42,089
the<font color="#CCCCCC"> Ember model we're distributing it</font>

560
00:21:40,979 --> 00:21:43,919
with code<font color="#CCCCCC"> that allows you</font><font color="#E5E5E5"> to make</font>

561
00:21:42,089 --> 00:21:46,109
predictions<font color="#E5E5E5"> you could conceivably like</font>

562
00:21:43,919 --> 00:21:47,369
write up some<font color="#CCCCCC"> Python that makes</font>

563
00:21:46,109 --> 00:21:48,989
predictions<font color="#E5E5E5"> and protects your own</font>

564
00:21:47,369 --> 00:21:51,359
machines with this<font color="#CCCCCC"> ember model but I</font>

565
00:21:48,989 --> 00:21:53,549
would<font color="#E5E5E5"> not suggest it I you know it's</font>

566
00:21:51,359 --> 00:21:55,859
trained on data through October of last

567
00:21:53,549 --> 00:21:57,809
year<font color="#E5E5E5"> and because of the constantly</font>

568
00:21:55,859 --> 00:21:59,399
<font color="#CCCCCC">evolving nature</font><font color="#E5E5E5"> it's not</font><font color="#CCCCCC"> ember is not</font>

569
00:21:57,809 --> 00:22:01,080
going to be better<font color="#CCCCCC"> it's not gonna</font><font color="#E5E5E5"> be</font>

570
00:21:59,399 --> 00:22:05,369
very<font color="#E5E5E5"> good at detecting the latest</font><font color="#CCCCCC"> mower</font>

571
00:22:01,080 --> 00:22:07,830
<font color="#CCCCCC">Oh code yeah so let's</font><font color="#E5E5E5"> talk a little bit</font>

572
00:22:05,369 --> 00:22:10,049
<font color="#CCCCCC">more about the code</font><font color="#E5E5E5"> the repo is right</font>

573
00:22:07,830 --> 00:22:12,658
there with<font color="#E5E5E5"> it you can vector as</font><font color="#CCCCCC"> the</font>

574
00:22:10,049 --> 00:22:14,429
features you can train the model<font color="#E5E5E5"> you can</font>

575
00:22:12,659 --> 00:22:15,659
make predictions<font color="#CCCCCC"> on</font><font color="#E5E5E5"> new PE files that</font>

576
00:22:14,429 --> 00:22:16,890
come<font color="#E5E5E5"> in so</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can calculate the</font>

577
00:22:15,659 --> 00:22:18,120
features and then<font color="#E5E5E5"> use</font>

578
00:22:16,890 --> 00:22:21,570
the model<font color="#E5E5E5"> that we're distributing to</font>

579
00:22:18,120 --> 00:22:23,159
make a prediction<font color="#E5E5E5"> do ya</font><font color="#CCCCCC"> and then there</font>

580
00:22:21,570 --> 00:22:26,040
is<font color="#CCCCCC"> a notebook in there that</font><font color="#E5E5E5"> kind of</font>

581
00:22:23,160 --> 00:22:27,720
generates all<font color="#E5E5E5"> the graphs in this in this</font>

582
00:22:26,040 --> 00:22:28,980
presentation and<font color="#E5E5E5"> also in the paper that</font>

583
00:22:27,720 --> 00:22:31,890
<font color="#E5E5E5">we're distributing so it's very</font>

584
00:22:28,980 --> 00:22:33,210
reproducible<font color="#CCCCCC"> it has files in there that</font>

585
00:22:31,890 --> 00:22:35,370
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of define the Python environment</font>

586
00:22:33,210 --> 00:22:37,080
<font color="#E5E5E5">that I ran everything in so you can</font>

587
00:22:35,370 --> 00:22:41,989
pretty much do everything that<font color="#E5E5E5"> I did</font>

588
00:22:37,080 --> 00:22:44,399
here so now that<font color="#E5E5E5"> I've released this</font>

589
00:22:41,990 --> 00:22:46,440
<font color="#CCCCCC">Hiram</font><font color="#E5E5E5"> and I hope certain things happen</font>

590
00:22:44,400 --> 00:22:48,390
we hope researchers<font color="#E5E5E5"> pick it up and run</font>

591
00:22:46,440 --> 00:22:50,400
<font color="#CCCCCC">with it and we</font><font color="#E5E5E5"> have this bunch of</font>

592
00:22:48,390 --> 00:22:53,610
<font color="#E5E5E5">suggestions for what researchers could</font>

593
00:22:50,400 --> 00:22:54,870
do the benchmark<font color="#CCCCCC"> model like I said we</font>

594
00:22:53,610 --> 00:22:56,820
didn't make<font color="#CCCCCC"> many decisions we didn't</font>

595
00:22:54,870 --> 00:22:57,929
optimize many parameters<font color="#E5E5E5"> there's a lot</font>

596
00:22:56,820 --> 00:23:00,000
of ways that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> improve the</font>

597
00:22:57,930 --> 00:23:01,680
benchmark<font color="#CCCCCC"> model you can use feature</font>

598
00:23:00,000 --> 00:23:03,480
<font color="#E5E5E5">selection techniques to throw out some</font>

599
00:23:01,680 --> 00:23:06,990
of the<font color="#E5E5E5"> features that we provide</font><font color="#CCCCCC"> you</font>

600
00:23:03,480 --> 00:23:09,960
<font color="#CCCCCC">could find</font><font color="#E5E5E5"> better features and extract</font>

601
00:23:06,990 --> 00:23:11,280
them from the<font color="#CCCCCC"> files themselves</font><font color="#E5E5E5"> so in</font>

602
00:23:09,960 --> 00:23:12,450
that case if you<font color="#E5E5E5"> want to do that you</font>

603
00:23:11,280 --> 00:23:14,820
would<font color="#CCCCCC"> need access</font><font color="#E5E5E5"> to the files</font>

604
00:23:12,450 --> 00:23:16,590
<font color="#CCCCCC">themselves we don't provide that</font><font color="#E5E5E5"> but we</font>

605
00:23:14,820 --> 00:23:18,840
do provide<font color="#CCCCCC"> the hashes so</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> maybe</font>

606
00:23:16,590 --> 00:23:21,060
research institutions or other companies

607
00:23:18,840 --> 00:23:22,169
that have<font color="#E5E5E5"> access to virustotal</font><font color="#CCCCCC"> might be</font>

608
00:23:21,060 --> 00:23:25,200
able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> download the files themselves</font>

609
00:23:22,170 --> 00:23:27,240
<font color="#E5E5E5">and do their own research</font><font color="#CCCCCC"> like I said</font>

610
00:23:25,200 --> 00:23:30,270
you can also<font color="#E5E5E5"> optimize the light</font><font color="#CCCCCC"> CBM</font>

611
00:23:27,240 --> 00:23:31,140
model parameters with grid search or you

612
00:23:30,270 --> 00:23:33,810
can do some semi-supervised learning

613
00:23:31,140 --> 00:23:35,460
that's incorporating information<font color="#CCCCCC"> from</font>

614
00:23:33,810 --> 00:23:38,399
unlabeled samples<font color="#E5E5E5"> into the training</font>

615
00:23:35,460 --> 00:23:40,230
itself<font color="#E5E5E5"> that's actually a technique</font><font color="#CCCCCC"> that</font>

616
00:23:38,400 --> 00:23:42,630
the<font color="#E5E5E5"> team the winning team from that</font>

617
00:23:40,230 --> 00:23:44,130
Microsoft malware challenge used they

618
00:23:42,630 --> 00:23:46,770
took the test<font color="#E5E5E5"> set where the labels</font>

619
00:23:44,130 --> 00:23:48,150
aren't provided and they<font color="#E5E5E5"> trained they</font>

620
00:23:46,770 --> 00:23:49,500
had like their first version<font color="#E5E5E5"> of the</font>

621
00:23:48,150 --> 00:23:51,180
model<font color="#E5E5E5"> and then they classified</font>

622
00:23:49,500 --> 00:23:52,860
everything in the test set or<font color="#E5E5E5"> there's no</font>

623
00:23:51,180 --> 00:23:55,740
labels and they got some rough labels

624
00:23:52,860 --> 00:23:57,270
and then if something<font color="#E5E5E5"> is benign</font><font color="#CCCCCC"> if they</font>

625
00:23:55,740 --> 00:23:59,250
thought<font color="#E5E5E5"> something was benign they just</font>

626
00:23:57,270 --> 00:24:01,290
said<font color="#CCCCCC"> it</font><font color="#E5E5E5"> was benign and handed it back</font>

627
00:23:59,250 --> 00:24:03,060
<font color="#E5E5E5">into the training set and trained a new</font>

628
00:24:01,290 --> 00:24:05,159
model<font color="#E5E5E5"> and then that one kind of</font>

629
00:24:03,060 --> 00:24:08,220
performed better<font color="#E5E5E5"> on the test data in the</font>

630
00:24:05,160 --> 00:24:10,170
end you can get into<font color="#E5E5E5"> trouble doing that</font>

631
00:24:08,220 --> 00:24:11,790
<font color="#CCCCCC">with overfitting</font><font color="#E5E5E5"> and everything but you</font>

632
00:24:10,170 --> 00:24:12,870
know by providing some unlabeled samples

633
00:24:11,790 --> 00:24:16,290
we hope some<font color="#CCCCCC"> people do some</font>

634
00:24:12,870 --> 00:24:18,570
semi-supervised techniques<font color="#E5E5E5"> like that so</font>

635
00:24:16,290 --> 00:24:21,510
that's<font color="#E5E5E5"> all to beat the model that we're</font>

636
00:24:18,570 --> 00:24:23,580
<font color="#E5E5E5">distributing you know there's more</font>

637
00:24:21,510 --> 00:24:25,170
directions you can<font color="#E5E5E5"> go and you</font><font color="#CCCCCC"> can like</font><font color="#E5E5E5"> I</font>

638
00:24:23,580 --> 00:24:26,550
mentioned this before quantifying a

639
00:24:25,170 --> 00:24:30,300
model<font color="#E5E5E5"> performance degradation through</font>

640
00:24:26,550 --> 00:24:30,690
<font color="#E5E5E5">time you can you can build and compare</font>

641
00:24:30,300 --> 00:24:32,280
the

642
00:24:30,690 --> 00:24:34,140
performance<font color="#E5E5E5"> a featureless neural network</font>

643
00:24:32,280 --> 00:24:36,810
based models instead<font color="#E5E5E5"> of like gradient</font>

644
00:24:34,140 --> 00:24:39,270
<font color="#E5E5E5">boosted</font><font color="#CCCCCC"> dissident trees like we relied</font>

645
00:24:36,810 --> 00:24:40,800
on<font color="#E5E5E5"> but again you would</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> access to</font>

646
00:24:39,270 --> 00:24:43,410
<font color="#CCCCCC">the files themselves which we don't</font>

647
00:24:40,800 --> 00:24:45,740
<font color="#E5E5E5">provide but we're hoping other bigger</font>

648
00:24:43,410 --> 00:24:49,650
entities can do that<font color="#E5E5E5"> sort of research</font>

649
00:24:45,740 --> 00:24:52,170
<font color="#E5E5E5">and then lastly this is kind of like an</font>

650
00:24:49,650 --> 00:24:54,900
<font color="#E5E5E5">offensive research you could look into</font>

651
00:24:52,170 --> 00:24:56,730
<font color="#E5E5E5">how can</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> modify the malicious samples</font>

652
00:24:54,900 --> 00:24:59,160
that<font color="#CCCCCC"> are in the training</font><font color="#E5E5E5"> set to bypass</font>

653
00:24:56,730 --> 00:25:00,570
the<font color="#CCCCCC"> embro model or any other models that</font>

654
00:24:59,160 --> 00:25:03,060
are out<font color="#CCCCCC"> there and</font><font color="#E5E5E5"> how best can you do</font>

655
00:25:00,570 --> 00:25:05,250
that<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> that that's kind of like</font>

656
00:25:03,060 --> 00:25:07,950
an offensive<font color="#E5E5E5"> research but I think it's</font>

657
00:25:05,250 --> 00:25:09,510
important for defenders to know about

658
00:25:07,950 --> 00:25:12,290
<font color="#E5E5E5">what might be coming so that they can be</font>

659
00:25:09,510 --> 00:25:13,650
<font color="#E5E5E5">better</font><font color="#CCCCCC"> prepared for</font><font color="#E5E5E5"> those new techniques</font>

660
00:25:12,290 --> 00:25:15,960
<font color="#E5E5E5">all</font><font color="#CCCCCC"> right</font>

661
00:25:13,650 --> 00:25:19,560
demo<font color="#CCCCCC"> time this is where talks are won</font>

662
00:25:15,960 --> 00:25:22,290
and lost<font color="#CCCCCC"> so I'm going</font><font color="#E5E5E5"> to Don</font><font color="#CCCCCC"> the Hat</font>

663
00:25:19,560 --> 00:25:25,050
<font color="#E5E5E5">from a winning team kind of channel some</font>

664
00:25:22,290 --> 00:25:26,010
<font color="#E5E5E5">of their some of their winning</font><font color="#CCCCCC"> ways so</font>

665
00:25:25,050 --> 00:25:29,100
<font color="#E5E5E5">trust</font><font color="#CCCCCC"> the process</font>

666
00:25:26,010 --> 00:25:30,720
<font color="#CCCCCC">alright here we</font><font color="#E5E5E5"> go so what I'm gonna do</font>

667
00:25:29,100 --> 00:25:32,820
is I'm<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> download some of the</font>

668
00:25:30,720 --> 00:25:35,070
latest benign files or latest malicious

669
00:25:32,820 --> 00:25:36,629
files from<font color="#E5E5E5"> virustotal and then use the</font>

670
00:25:35,070 --> 00:25:38,490
<font color="#E5E5E5">Ember model to make a prediction on them</font>

671
00:25:36,630 --> 00:25:39,660
and see if<font color="#E5E5E5"> it gets it right</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> already</font>

672
00:25:38,490 --> 00:25:42,330
told you that<font color="#E5E5E5"> you shouldn't do this</font><font color="#CCCCCC"> you</font>

673
00:25:39,660 --> 00:25:46,170
shouldn't use<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Emporer model as a</font>

674
00:25:42,330 --> 00:25:47,879
protection but hopefully it does<font color="#E5E5E5"> okay so</font>

675
00:25:46,170 --> 00:25:50,520
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I did this</font><font color="#E5E5E5"> search</font><font color="#CCCCCC"> this morning I</font>

676
00:25:47,880 --> 00:25:54,900
<font color="#CCCCCC">just want to</font><font color="#E5E5E5"> refresh it so</font><font color="#CCCCCC"> that it's the</font>

677
00:25:50,520 --> 00:25:58,440
very latest<font color="#E5E5E5"> stuff all right so this</font><font color="#CCCCCC"> is</font>

678
00:25:54,900 --> 00:26:00,420
for PE files with that<font color="#CCCCCC"> 50 or</font><font color="#E5E5E5"> more AV</font>

679
00:25:58,440 --> 00:26:03,600
scanners<font color="#E5E5E5"> said it's malicious so I'm</font>

680
00:26:00,420 --> 00:26:05,610
going to<font color="#E5E5E5"> download the download the</font>

681
00:26:03,600 --> 00:26:07,199
malware directly to my computer because

682
00:26:05,610 --> 00:26:10,979
I'm a trained<font color="#CCCCCC"> professional I'm not gonna</font>

683
00:26:07,200 --> 00:26:18,020
do that<font color="#E5E5E5"> these are benign files so</font><font color="#CCCCCC"> let's</font>

684
00:26:10,980 --> 00:26:20,880
get one<font color="#E5E5E5"> of those all right curses curses</font>

685
00:26:18,020 --> 00:26:27,629
<font color="#CCCCCC">it's looking</font><font color="#E5E5E5"> great guys it's great it's</font>

686
00:26:20,880 --> 00:26:30,020
going<font color="#E5E5E5"> great</font><font color="#CCCCCC"> I don't know it's ugly</font><font color="#E5E5E5"> it</font>

687
00:26:27,630 --> 00:26:30,020
was<font color="#E5E5E5"> better before</font>

688
00:26:31,250 --> 00:26:40,070
<font color="#CCCCCC">alright let's you alright that's the</font>

689
00:26:36,480 --> 00:26:42,780
search I<font color="#CCCCCC"> did and then I sorted by what's</font>

690
00:26:40,070 --> 00:26:44,610
by the the very latest thing<font color="#E5E5E5"> like it was</font>

691
00:26:42,780 --> 00:26:47,340
first<font color="#CCCCCC"> submitted in the last minute or so</font>

692
00:26:44,610 --> 00:26:50,629
<font color="#CCCCCC">think so that's</font><font color="#E5E5E5"> for benign files no</font>

693
00:26:47,340 --> 00:26:53,070
scanner thinks it's malicious<font color="#E5E5E5"> and then</font>

694
00:26:50,630 --> 00:26:55,950
similarly<font color="#E5E5E5"> here 50 or more scanners</font>

695
00:26:53,070 --> 00:26:58,590
thinks it's malicious<font color="#E5E5E5"> so those I'd</font>

696
00:26:55,950 --> 00:27:01,860
<font color="#E5E5E5">already downloaded those let's go over</font>

697
00:26:58,590 --> 00:27:04,280
<font color="#E5E5E5">here there that's there</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> right</font>

698
00:27:01,860 --> 00:27:09,120
there okay

699
00:27:04,280 --> 00:27:11,129
so now here's the<font color="#E5E5E5"> data</font><font color="#CCCCCC"> that's the that's</font>

700
00:27:09,120 --> 00:27:13,979
the the data set that<font color="#E5E5E5"> you can go out</font><font color="#CCCCCC"> and</font>

701
00:27:11,130 --> 00:27:16,679
<font color="#E5E5E5">download right now</font><font color="#CCCCCC"> if you extract it all</font>

702
00:27:13,980 --> 00:27:19,320
it looks like this<font color="#E5E5E5"> on disk that's those</font>

703
00:27:16,679 --> 00:27:22,140
JSON files<font color="#CCCCCC"> and that this is the ember</font>

704
00:27:19,320 --> 00:27:24,899
model they're built that last one and

705
00:27:22,140 --> 00:27:26,490
the cool<font color="#CCCCCC"> thing about light GBM is it</font>

706
00:27:24,900 --> 00:27:28,860
exports the model and saves them to disk

707
00:27:26,490 --> 00:27:31,380
and<font color="#E5E5E5"> it's actually</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> test and so you</font>

708
00:27:28,860 --> 00:27:34,649
can look at<font color="#E5E5E5"> it</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> inspect it</font><font color="#CCCCCC"> this</font>

709
00:27:31,380 --> 00:27:36,299
<font color="#E5E5E5">is some feature importances</font><font color="#CCCCCC"> I go</font><font color="#E5E5E5"> high</font>

710
00:27:34,650 --> 00:27:37,770
enough<font color="#CCCCCC"> you can see the actual trees and</font>

711
00:27:36,299 --> 00:27:39,960
the decisions it's making and<font color="#E5E5E5"> what</font>

712
00:27:37,770 --> 00:27:43,410
features<font color="#E5E5E5"> it's making those decisions on</font>

713
00:27:39,960 --> 00:27:46,080
<font color="#E5E5E5">it's kind of cool so this is the code</font>

714
00:27:43,410 --> 00:27:47,370
I've already checked<font color="#E5E5E5"> it out</font><font color="#CCCCCC"> I've</font><font color="#E5E5E5"> already</font>

715
00:27:46,080 --> 00:27:51,600
<font color="#E5E5E5">installed it so I'm not gonna try</font><font color="#CCCCCC"> and do</font>

716
00:27:47,370 --> 00:27:53,010
<font color="#E5E5E5">that but there's scripts in here one to</font>

717
00:27:51,600 --> 00:27:55,740
train the<font color="#E5E5E5"> whole model from the</font><font color="#CCCCCC"> beginning</font>

718
00:27:53,010 --> 00:27:58,610
to end<font color="#CCCCCC"> and one to classify binaries this</font>

719
00:27:55,740 --> 00:27:58,610
is all shown up<font color="#E5E5E5"> yeah</font>

720
00:27:59,120 --> 00:28:16,830
all right so let's point it at the<font color="#E5E5E5"> model</font>

721
00:28:03,510 --> 00:28:20,340
and<font color="#CCCCCC"> then let's point it at the</font><font color="#E5E5E5"> alright</font>

722
00:28:16,830 --> 00:28:22,830
<font color="#E5E5E5">so it loads the model</font><font color="#CCCCCC"> I got a score of</font>

723
00:28:20,340 --> 00:28:25,409
0.9<font color="#CCCCCC"> five and point two seven let's just</font>

724
00:28:22,830 --> 00:28:28,320
check that<font color="#E5E5E5"> money I guess the</font><font color="#CCCCCC"> web pages</font>

725
00:28:25,410 --> 00:28:30,750
look bad so<font color="#CCCCCC"> oh here</font>

726
00:28:28,320 --> 00:28:36,659
so the malicious one was<font color="#CCCCCC"> winning five</font>

727
00:28:30,750 --> 00:28:40,110
and we got 95 and the benign one was

728
00:28:36,660 --> 00:28:42,600
<font color="#E5E5E5">five nine three and we got that pretty</font>

729
00:28:40,110 --> 00:28:44,959
low score so we<font color="#CCCCCC"> did</font><font color="#E5E5E5"> it victory</font><font color="#CCCCCC"> just like</font>

730
00:28:42,600 --> 00:28:44,959
the 76ers

731
00:28:49,700 --> 00:28:55,970
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> so ember read the paper</font><font color="#E5E5E5"> it's</font>

732
00:28:52,950 --> 00:28:58,350
available on<font color="#E5E5E5"> archive</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a highlight</font>

733
00:28:55,970 --> 00:29:00,629
<font color="#E5E5E5">evidently despite increased model size</font>

734
00:28:58,350 --> 00:29:02,820
<font color="#CCCCCC">so in the paper to understand the</font>

735
00:29:00,629 --> 00:29:04,289
sentence<font color="#CCCCCC"> we have the model we show</font><font color="#E5E5E5"> its</font>

736
00:29:02,820 --> 00:29:07,320
performance<font color="#E5E5E5"> we also trained a</font>

737
00:29:04,289 --> 00:29:09,929
convolutional neural net<font color="#E5E5E5"> we kind of took</font>

738
00:29:07,320 --> 00:29:11,460
the<font color="#E5E5E5"> technique from other from another</font>

739
00:29:09,929 --> 00:29:13,619
researcher who said<font color="#E5E5E5"> you know this is the</font>

740
00:29:11,460 --> 00:29:16,110
best<font color="#E5E5E5"> way to do this sort of thing</font>

741
00:29:13,619 --> 00:29:19,649
without features and we compared the

742
00:29:16,110 --> 00:29:21,779
<font color="#CCCCCC">performance and the neural net was the</font>

743
00:29:19,649 --> 00:29:23,879
<font color="#E5E5E5">performance was a little</font><font color="#CCCCCC"> less it was not</font>

744
00:29:21,779 --> 00:29:25,710
as<font color="#E5E5E5"> good and so we evidently despite</font>

745
00:29:23,879 --> 00:29:27,779
increased model size and computational

746
00:29:25,710 --> 00:29:29,369
burden featureless deep<font color="#CCCCCC"> learning models</font>

747
00:29:27,779 --> 00:29:31,169
have yet to<font color="#E5E5E5"> eclipse</font><font color="#CCCCCC"> the performance of</font>

748
00:29:29,369 --> 00:29:33,899
models that<font color="#E5E5E5"> leverage domain model via</font>

749
00:29:31,169 --> 00:29:35,460
parsed features and what we're<font color="#E5E5E5"> saying by</font>

750
00:29:33,899 --> 00:29:37,139
<font color="#CCCCCC">that is the gradient boosted decision</font>

751
00:29:35,460 --> 00:29:38,879
trees they do better it's an older

752
00:29:37,139 --> 00:29:40,918
<font color="#E5E5E5">technique but right now they do better</font>

753
00:29:38,879 --> 00:29:43,110
<font color="#E5E5E5">in the problem of Mau or classification</font>

754
00:29:40,919 --> 00:29:45,059
you know deep learning is great and<font color="#E5E5E5"> has</font>

755
00:29:43,110 --> 00:29:47,519
had<font color="#E5E5E5"> great results in a lot</font><font color="#CCCCCC"> of different</font>

756
00:29:45,059 --> 00:29:49,710
fields<font color="#CCCCCC"> Harmon</font><font color="#E5E5E5"> I just don't think that</font>

757
00:29:47,519 --> 00:29:51,749
kind<font color="#CCCCCC"> of those kind of leaps and bounds</font>

758
00:29:49,710 --> 00:29:54,509
have made it to Maori classification<font color="#E5E5E5"> and</font>

759
00:29:51,749 --> 00:29:57,179
we hope<font color="#E5E5E5"> that you know by releasing this</font>

760
00:29:54,509 --> 00:29:59,070
data set<font color="#CCCCCC"> that we can kind of</font><font color="#E5E5E5"> bring those</font>

761
00:29:57,179 --> 00:30:00,720
great<font color="#E5E5E5"> results that deep learning</font><font color="#CCCCCC"> has</font>

762
00:29:59,070 --> 00:30:05,519
done in other<font color="#CCCCCC"> domains into this domain</font>

763
00:30:00,720 --> 00:30:09,350
<font color="#CCCCCC">and so bring it on down load the data</font>

764
00:30:05,519 --> 00:30:09,350
<font color="#E5E5E5">with the code thanks a lot</font>

765
00:30:13,880 --> 00:30:26,490
yeah<font color="#CCCCCC"> I didn't fill the</font><font color="#E5E5E5"> hour sorry so I</font>

766
00:30:16,500 --> 00:30:28,140
can<font color="#E5E5E5"> take lots of questions</font><font color="#CCCCCC"> so yes the</font>

767
00:30:26,490 --> 00:30:32,250
question<font color="#E5E5E5"> the question</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> how did</font><font color="#CCCCCC"> we</font>

768
00:30:28,140 --> 00:30:34,289
decide<font color="#E5E5E5"> that</font><font color="#CCCCCC"> threshold</font><font color="#E5E5E5"> of 0.87</font><font color="#CCCCCC"> won so we</font>

769
00:30:32,250 --> 00:30:36,659
decided what our target false-positive

770
00:30:34,289 --> 00:30:39,179
rate was gonna be at point<font color="#CCCCCC"> 1 percent</font><font color="#E5E5E5"> and</font>

771
00:30:36,659 --> 00:30:41,789
then<font color="#E5E5E5"> we kind of just scanned through the</font>

772
00:30:39,179 --> 00:30:43,710
thresholds until we found<font color="#E5E5E5"> exactly where</font>

773
00:30:41,789 --> 00:30:51,000
we where we<font color="#E5E5E5"> hit that false positive rate</font>

774
00:30:43,710 --> 00:30:53,520
<font color="#CCCCCC">0.1% it is but you just you</font><font color="#E5E5E5"> don't want</font>

775
00:30:51,000 --> 00:30:54,090
to flood<font color="#CCCCCC"> you don't want to flood with</font>

776
00:30:53,520 --> 00:30:56,340
<font color="#E5E5E5">alerts</font>

777
00:30:54,090 --> 00:30:58,799
I mean false positives really<font color="#E5E5E5"> decrease</font>

778
00:30:56,340 --> 00:31:00,809
confidence in the user of a model and if

779
00:30:58,799 --> 00:31:03,418
you're gonna start flagging on<font color="#E5E5E5"> people's</font>

780
00:31:00,809 --> 00:31:06,059
you know<font color="#E5E5E5"> the software that they need</font><font color="#CCCCCC"> to</font>

781
00:31:03,419 --> 00:31:08,429
do their jobs<font color="#E5E5E5"> they're really not going</font>

782
00:31:06,059 --> 00:31:10,559
to<font color="#E5E5E5"> like</font><font color="#CCCCCC"> trust your model</font><font color="#E5E5E5"> and so we we</font>

783
00:31:08,429 --> 00:31:13,250
aim for very<font color="#E5E5E5"> very low false positive</font>

784
00:31:10,559 --> 00:31:18,178
<font color="#CCCCCC">rates</font><font color="#E5E5E5"> that's kind of where we started</font><font color="#CCCCCC"> oh</font>

785
00:31:13,250 --> 00:31:19,740
yeah yeah oh no no yeah yeah I was<font color="#E5E5E5"> just</font>

786
00:31:18,179 --> 00:31:20,340
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> trying to motivate why we do</font>

787
00:31:19,740 --> 00:31:34,500
that sort<font color="#CCCCCC"> of thing</font>

788
00:31:20,340 --> 00:31:36,000
I didn't look the<font color="#E5E5E5"> question is what are</font>

789
00:31:34,500 --> 00:31:38,100
the best features like it can you

790
00:31:36,000 --> 00:31:41,669
<font color="#E5E5E5">analyze the decision tree and figure out</font>

791
00:31:38,100 --> 00:31:46,289
<font color="#E5E5E5">what features</font><font color="#CCCCCC"> it relied on and yes you</font>

792
00:31:41,669 --> 00:31:48,330
can do that<font color="#E5E5E5"> no I haven't done that I've</font>

793
00:31:46,289 --> 00:31:52,320
<font color="#E5E5E5">done some studies like with Mauer score</font>

794
00:31:48,330 --> 00:31:54,480
about like what features are best like

795
00:31:52,320 --> 00:31:55,770
section information<font color="#CCCCCC"> like the entry</font>

796
00:31:54,480 --> 00:31:58,620
section<font color="#E5E5E5"> like that sort of</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> really</font>

797
00:31:55,770 --> 00:32:00,690
helped out<font color="#E5E5E5"> but no we do need</font><font color="#CCCCCC"> to dive</font>

798
00:31:58,620 --> 00:32:02,250
into that<font color="#E5E5E5"> and I do hope</font><font color="#CCCCCC"> that kind of</font>

799
00:32:00,690 --> 00:32:04,500
research is spurred by<font color="#E5E5E5"> this because um</font>

800
00:32:02,250 --> 00:32:06,450
<font color="#E5E5E5">you can do model and SPECT ability and</font>

801
00:32:04,500 --> 00:32:08,039
you kind<font color="#E5E5E5"> of okay like right now we just</font>

802
00:32:06,450 --> 00:32:10,049
give a<font color="#E5E5E5"> number and it's not like it</font>

803
00:32:08,039 --> 00:32:11,879
there's no information about<font color="#CCCCCC"> why the</font>

804
00:32:10,049 --> 00:32:14,220
number is that like why does this model

805
00:32:11,880 --> 00:32:15,960
think this is<font color="#CCCCCC"> malware and we're hoping</font>

806
00:32:14,220 --> 00:32:17,370
by<font color="#E5E5E5"> releasing an open source</font><font color="#CCCCCC"> model there</font>

807
00:32:15,960 --> 00:32:19,260
will be more research<font color="#E5E5E5"> into</font><font color="#CCCCCC"> that like</font>

808
00:32:17,370 --> 00:32:21,239
<font color="#E5E5E5">getting better at explaining the</font>

809
00:32:19,260 --> 00:32:23,240
decisions the model<font color="#E5E5E5"> makes</font>

810
00:32:21,240 --> 00:32:23,240
ah

811
00:32:39,990 --> 00:32:46,170
I mean we've tested<font color="#E5E5E5"> it with like latest</font>

812
00:32:44,190 --> 00:32:48,380
stuff<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this the stuff we download</font>

813
00:32:46,170 --> 00:32:51,960
from from virustotal

814
00:32:48,380 --> 00:32:54,750
but nothing powershell specific<font color="#E5E5E5"> no I</font>

815
00:32:51,960 --> 00:32:56,520
didn't look<font color="#E5E5E5"> into that and no I</font><font color="#CCCCCC"> I didn't</font>

816
00:32:54,750 --> 00:32:58,620
really look into like the different

817
00:32:56,520 --> 00:33:01,500
families<font color="#CCCCCC"> and the performance on of this</font>

818
00:32:58,620 --> 00:33:04,139
model on different families<font color="#E5E5E5"> but but yeah</font>

819
00:33:01,500 --> 00:33:19,160
that would be<font color="#CCCCCC"> a good a good area for</font>

820
00:33:04,140 --> 00:33:20,970
further study<font color="#E5E5E5"> uh</font><font color="#CCCCCC"> no plans to do that</font><font color="#E5E5E5"> I</font>

821
00:33:19,160 --> 00:33:22,950
it<font color="#E5E5E5"> was a lot of work getting this</font>

822
00:33:20,970 --> 00:33:28,650
<font color="#CCCCCC">together</font><font color="#E5E5E5"> and I need to get back to</font>

823
00:33:22,950 --> 00:33:30,510
malware score but but I hope I hope

824
00:33:28,650 --> 00:33:32,970
researchers look at it and if in

825
00:33:30,510 --> 00:33:36,450
publishing more papers about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> like a</font>

826
00:33:32,970 --> 00:33:37,740
problem becomes you know inescapable or

827
00:33:36,450 --> 00:33:39,720
something<font color="#E5E5E5"> then maybe we can do like a</font>

828
00:33:37,740 --> 00:33:43,110
<font color="#CCCCCC">20-18</font><font color="#E5E5E5"> version later that makes better</font>

829
00:33:39,720 --> 00:33:46,700
decisions<font color="#CCCCCC"> but right now right now we</font>

830
00:33:43,110 --> 00:33:46,699
don't have any plans to<font color="#E5E5E5"> update it</font>

831
00:33:55,370 --> 00:34:01,699
actually yes<font color="#CCCCCC"> because because the feature</font>

832
00:33:58,460 --> 00:34:04,530
<font color="#E5E5E5">generation code is released</font><font color="#CCCCCC"> if you have</font>

833
00:34:01,700 --> 00:34:06,270
access to<font color="#CCCCCC"> data or PE files that you are</font>

834
00:34:04,530 --> 00:34:07,410
interested<font color="#CCCCCC"> in then you can generate</font>

835
00:34:06,270 --> 00:34:10,889
those<font color="#E5E5E5"> features and release those</font>

836
00:34:07,410 --> 00:34:11,400
features<font color="#CCCCCC"> you know that it</font><font color="#E5E5E5"> so so that's</font>

837
00:34:10,889 --> 00:34:19,259
possible

838
00:34:11,400 --> 00:34:21,270
definitely yeah<font color="#CCCCCC"> ok</font>

839
00:34:19,260 --> 00:34:23,419
<font color="#CCCCCC">alright thanks a</font><font color="#E5E5E5"> lot I'll be around if</font>

840
00:34:21,270 --> 00:34:25,509
you<font color="#CCCCCC"> have any more</font><font color="#E5E5E5"> questions</font>

841
00:34:23,418 --> 00:34:25,509
<font color="#CCCCCC">you</font>

842
00:34:25,570 --> 00:34:28,749
[Applause]

