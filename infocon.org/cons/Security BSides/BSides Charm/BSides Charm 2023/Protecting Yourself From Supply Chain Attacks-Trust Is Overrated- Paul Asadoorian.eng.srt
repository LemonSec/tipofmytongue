1
00:00:00,120 --> 00:00:03,120
foreign

2
00:00:06,020 --> 00:00:20,340
[Music]

3
00:00:20,340 --> 00:00:23,220
hi hey thanks for coming to my talk

4
00:00:23,220 --> 00:00:26,160
um I like to start my talks usually

5
00:00:26,160 --> 00:00:27,480
talking about something kind of

6
00:00:27,480 --> 00:00:29,760
ridiculous and off topic and then

7
00:00:29,760 --> 00:00:33,180
hopefully we'll bring it on topic and I

8
00:00:33,180 --> 00:00:34,860
don't want you to disclose any personal

9
00:00:34,860 --> 00:00:37,680
health information so like if you do

10
00:00:37,680 --> 00:00:39,360
have high blood pressure like you don't

11
00:00:39,360 --> 00:00:40,980
have to raise your hand just make a

12
00:00:40,980 --> 00:00:42,960
mental note of it but like if anyone

13
00:00:42,960 --> 00:00:44,160
wants to admit they have high blood

14
00:00:44,160 --> 00:00:45,960
pressure if you don't it's okay because

15
00:00:45,960 --> 00:00:47,460
I'm going to admit that I've been

16
00:00:47,460 --> 00:00:49,620
diagnosed with high blood pressure

17
00:00:49,620 --> 00:00:53,219
um it's fine I take medication

18
00:00:53,219 --> 00:00:55,920
um but it's uh something that start you

19
00:00:55,920 --> 00:00:57,120
start thinking about some of the things

20
00:00:57,120 --> 00:00:59,879
you do that might impact your blood

21
00:00:59,879 --> 00:01:02,640
pressure like standing up on stage and

22
00:01:02,640 --> 00:01:04,140
giving a presentation

23
00:01:04,140 --> 00:01:05,459
or

24
00:01:05,459 --> 00:01:07,680
drinking coffee

25
00:01:07,680 --> 00:01:09,900
how many people here drink coffee

26
00:01:09,900 --> 00:01:13,740
oh right I love coffee there is nothing

27
00:01:13,740 --> 00:01:17,280
like that first sip of hot coffee in the

28
00:01:17,280 --> 00:01:21,180
morning but now as I've disclosed I also

29
00:01:21,180 --> 00:01:22,860
have high blood pressure

30
00:01:22,860 --> 00:01:25,320
so these two things could be at odds

31
00:01:25,320 --> 00:01:27,119
with each other so I wake up every

32
00:01:27,119 --> 00:01:28,680
morning and I take my blood pressure

33
00:01:28,680 --> 00:01:31,500
medicine drink 12 cups of coffee and I'm

34
00:01:31,500 --> 00:01:33,420
the same like they just cancel each

35
00:01:33,420 --> 00:01:36,540
other out like what am I doing but I

36
00:01:36,540 --> 00:01:40,619
love coffee too much so my wife my wife

37
00:01:40,619 --> 00:01:43,259
I mean people that are married right my

38
00:01:43,259 --> 00:01:45,840
wife loves me even though sometimes that

39
00:01:45,840 --> 00:01:48,659
can be tough but uh she's like I'm

40
00:01:48,659 --> 00:01:50,159
really concerned because you drink a lot

41
00:01:50,159 --> 00:01:51,659
of coffee and you have high blood

42
00:01:51,659 --> 00:01:54,240
pressure and I'm like well you know if

43
00:01:54,240 --> 00:01:56,540
you search the internet long enough

44
00:01:56,540 --> 00:02:00,479
anything can become true to support well

45
00:02:00,479 --> 00:02:03,479
like your bad habits so some research

46
00:02:03,479 --> 00:02:06,060
suggests coffee can lower the risk for

47
00:02:06,060 --> 00:02:07,320
high blood pressure

48
00:02:07,320 --> 00:02:08,818
now I could probably say that really

49
00:02:08,818 --> 00:02:10,619
quick and it probably wouldn't get past

50
00:02:10,619 --> 00:02:12,420
my wife because that's only for people

51
00:02:12,420 --> 00:02:13,860
who don't already have high blood

52
00:02:13,860 --> 00:02:15,959
pressure right but we can find lots of

53
00:02:15,959 --> 00:02:19,020
studies that may support uh drinking

54
00:02:19,020 --> 00:02:23,000
coffee if you have high blood pressure

55
00:02:23,220 --> 00:02:27,000
um so then you know the hacker skeptic

56
00:02:27,000 --> 00:02:29,700
nerd and myself is like well okay so

57
00:02:29,700 --> 00:02:32,160
like how much caffeine is safe and how

58
00:02:32,160 --> 00:02:34,560
much caffeine is in a cup of coffee

59
00:02:34,560 --> 00:02:35,940
and this seems to be like a very

60
00:02:35,940 --> 00:02:38,280
debatable thing on the internet uh

61
00:02:38,280 --> 00:02:41,640
roughly 95 milligrams of caffeine in a

62
00:02:41,640 --> 00:02:43,739
cup of coffee a little like what's a cup

63
00:02:43,739 --> 00:02:46,560
of coffee like my giant Yeti mug that

64
00:02:46,560 --> 00:02:48,360
holds almost like more than half a pot

65
00:02:48,360 --> 00:02:50,700
of coffee is that a cup is a cup like

66
00:02:50,700 --> 00:02:52,560
you know is it eight ounces in a cup

67
00:02:52,560 --> 00:02:53,700
because that's just like a little

68
00:02:53,700 --> 00:02:56,280
espresso for me in the morning because I

69
00:02:56,280 --> 00:02:57,599
bought this really nice coffee machine

70
00:02:57,599 --> 00:02:59,879
and it makes all this wonderful coffee

71
00:02:59,879 --> 00:03:01,920
so I drink a lot of it so like what what

72
00:03:01,920 --> 00:03:04,760
what's a cup

73
00:03:04,980 --> 00:03:06,840
um but that also begs the question of

74
00:03:06,840 --> 00:03:10,560
how am I consuming my coffee how am I

75
00:03:10,560 --> 00:03:12,659
Brewing my coffee where am I getting my

76
00:03:12,659 --> 00:03:15,000
coffee from which may have different

77
00:03:15,000 --> 00:03:17,340
amounts of caffeine which also could

78
00:03:17,340 --> 00:03:18,599
have different amounts of caffeine

79
00:03:18,599 --> 00:03:22,440
depending on how I'm drinking it as well

80
00:03:22,440 --> 00:03:25,019
so this starts to question the the

81
00:03:25,019 --> 00:03:28,680
supply chain of my coffee how much can I

82
00:03:28,680 --> 00:03:31,620
safely consume now I start to scrutinize

83
00:03:31,620 --> 00:03:33,420
the supply chain of my coffee and

84
00:03:33,420 --> 00:03:34,860
wanting to measure it

85
00:03:34,860 --> 00:03:36,239
so

86
00:03:36,239 --> 00:03:38,940
I take to the internet and I go to chat

87
00:03:38,940 --> 00:03:42,599
GPT and I'm like I really need to know

88
00:03:42,599 --> 00:03:46,260
how to measure how much caffeine is in

89
00:03:46,260 --> 00:03:48,900
coffee now turns out the entire lecture

90
00:03:48,900 --> 00:03:50,519
could probably be about each of these

91
00:03:50,519 --> 00:03:53,640
methods in chat GPT told me which are

92
00:03:53,640 --> 00:03:56,220
all super interesting right like mass

93
00:03:56,220 --> 00:04:00,000
spectrometry and chromatography stuff

94
00:04:00,000 --> 00:04:02,760
that I can't even pronounce right uh

95
00:04:02,760 --> 00:04:05,700
enzymatic essays right like what is all

96
00:04:05,700 --> 00:04:07,080
I have no idea what all this stuff is

97
00:04:07,080 --> 00:04:08,280
now I've read it and tried to understand

98
00:04:08,280 --> 00:04:10,980
it and we understand some of these

99
00:04:10,980 --> 00:04:14,040
methods for measuring coffee chemically

100
00:04:14,040 --> 00:04:16,560
separating the caffeine seeing how it

101
00:04:16,560 --> 00:04:18,298
reacts to light and doing different

102
00:04:18,298 --> 00:04:20,880
measurements they do make the little I

103
00:04:20,880 --> 00:04:22,320
think number three is like the little

104
00:04:22,320 --> 00:04:24,180
test strips that you could put in coffee

105
00:04:24,180 --> 00:04:26,220
it turns out

106
00:04:26,220 --> 00:04:27,900
because I spent more time researching

107
00:04:27,900 --> 00:04:30,360
this than I should have that just tells

108
00:04:30,360 --> 00:04:32,040
you if it's decaf or if it's regular

109
00:04:32,040 --> 00:04:34,440
coffee like is there caffeine in it is

110
00:04:34,440 --> 00:04:35,639
it not

111
00:04:35,639 --> 00:04:38,460
um which is not so helpful for my use

112
00:04:38,460 --> 00:04:41,580
case so I was like well maybe I'll just

113
00:04:41,580 --> 00:04:44,220
have my own machine at home like that

114
00:04:44,220 --> 00:04:46,979
that could be fun right but they're kind

115
00:04:46,979 --> 00:04:48,540
of expensive the fifteen thousand

116
00:04:48,540 --> 00:04:51,479
dollars like the used version of it uh

117
00:04:51,479 --> 00:04:54,120
and this performs a a chemical you know

118
00:04:54,120 --> 00:04:56,280
a process that will measure how much

119
00:04:56,280 --> 00:04:59,639
caffeine is in your coffee uh separating

120
00:04:59,639 --> 00:05:02,460
molecules and then the incorporation of

121
00:05:02,460 --> 00:05:06,020
UV Spectrum I can't even say that word

122
00:05:06,020 --> 00:05:09,060
spectroscopy yes thank you

123
00:05:09,060 --> 00:05:10,740
um allows it to determine the

124
00:05:10,740 --> 00:05:12,240
concentration of caffeine in the coffee

125
00:05:12,240 --> 00:05:13,380
I'm like well

126
00:05:13,380 --> 00:05:15,120
I guess at this point I just have to

127
00:05:15,120 --> 00:05:18,060
trust the supply chain which after my

128
00:05:18,060 --> 00:05:19,919
talk at shmukh Khan earlier this year in

129
00:05:19,919 --> 00:05:21,060
this talk and like well that really

130
00:05:21,060 --> 00:05:22,919
sucks Paul we really shouldn't trust the

131
00:05:22,919 --> 00:05:25,440
supply chain in this case I I might have

132
00:05:25,440 --> 00:05:27,539
to unless someone has one of these at

133
00:05:27,539 --> 00:05:29,759
home in their lab that I could borrow on

134
00:05:29,759 --> 00:05:31,380
a regular basis because I like to

135
00:05:31,380 --> 00:05:33,300
continuously monitor the amount of

136
00:05:33,300 --> 00:05:35,280
caffeine in my coffee

137
00:05:35,280 --> 00:05:37,139
so how do we minimize these supply chain

138
00:05:37,139 --> 00:05:40,139
risks I've spent

139
00:05:40,139 --> 00:05:42,660
um at least a good solid two months as a

140
00:05:42,660 --> 00:05:45,780
focus uh on my podcast talking to people

141
00:05:45,780 --> 00:05:48,900
about supply chain supply chain threats

142
00:05:48,900 --> 00:05:52,199
risks supply chain vulnerabilities what

143
00:05:52,199 --> 00:05:54,240
those mean I talk with people way

144
00:05:54,240 --> 00:05:56,039
smarter than me and really started

145
00:05:56,039 --> 00:05:57,660
digging into the issues surrounding

146
00:05:57,660 --> 00:06:00,300
supply chain much of which you know led

147
00:06:00,300 --> 00:06:02,160
to me being able to give this

148
00:06:02,160 --> 00:06:04,020
presentation today

149
00:06:04,020 --> 00:06:06,300
so some of the things that I've been

150
00:06:06,300 --> 00:06:08,340
thinking about recently is well how do

151
00:06:08,340 --> 00:06:10,259
we minimize these risks and I really

152
00:06:10,259 --> 00:06:12,479
think this is a scale right if we think

153
00:06:12,479 --> 00:06:14,220
about any supply chain whether it's

154
00:06:14,220 --> 00:06:16,080
coffee or whether it's software and

155
00:06:16,080 --> 00:06:18,539
Hardware that we all have to deal with I

156
00:06:18,539 --> 00:06:20,940
could create everything myself I could

157
00:06:20,940 --> 00:06:23,819
grow my own coffee beans which I'm not

158
00:06:23,819 --> 00:06:25,919
much like a plant and I really don't

159
00:06:25,919 --> 00:06:27,660
don't get along

160
00:06:27,660 --> 00:06:30,060
um so I could create everything myself I

161
00:06:30,060 --> 00:06:32,280
could do the same thing with software as

162
00:06:32,280 --> 00:06:34,979
well I could write all the software that

163
00:06:34,979 --> 00:06:37,440
I use from scratch I don't think many of

164
00:06:37,440 --> 00:06:41,100
us want to take on that challenge today

165
00:06:41,100 --> 00:06:43,319
in the Middle where I think most of us

166
00:06:43,319 --> 00:06:46,740
land is that we verify then we trust and

167
00:06:46,740 --> 00:06:48,360
we work to make the attackers lives more

168
00:06:48,360 --> 00:06:50,220
difficult that's what I think is The

169
00:06:50,220 --> 00:06:52,620
Sweet Spot that yes we don't create

170
00:06:52,620 --> 00:06:54,660
everything ourselves but we also don't

171
00:06:54,660 --> 00:06:56,940
just pull everything off the shelf we do

172
00:06:56,940 --> 00:06:58,680
some kind of mixture of it and we

173
00:06:58,680 --> 00:07:01,319
validate what we get in this middle

174
00:07:01,319 --> 00:07:03,720
stage and so I may have all these fancy

175
00:07:03,720 --> 00:07:06,539
devices for making coffee right I'm not

176
00:07:06,539 --> 00:07:08,580
growing it myself but I'm also not going

177
00:07:08,580 --> 00:07:10,259
to the convenience store and grabbing a

178
00:07:10,259 --> 00:07:11,699
Starbucks frappuccino that's already

179
00:07:11,699 --> 00:07:14,100
made off the shelf right that is the

180
00:07:14,100 --> 00:07:17,759
create nothing and do verification do no

181
00:07:17,759 --> 00:07:20,340
verification I'm just blindly going and

182
00:07:20,340 --> 00:07:21,840
whatever that Starbucks thing is I don't

183
00:07:21,840 --> 00:07:23,160
even care how much caffeine I'm just

184
00:07:23,160 --> 00:07:24,840
taking it and I'm drinking it

185
00:07:24,840 --> 00:07:27,300
now the more I think about this analogy

186
00:07:27,300 --> 00:07:30,539
in this slide when we advise companies

187
00:07:30,539 --> 00:07:34,099
today on their supply chain strategy

188
00:07:34,099 --> 00:07:36,479
that you're likely going to do something

189
00:07:36,479 --> 00:07:40,099
in all of these areas that in some cases

190
00:07:40,099 --> 00:07:42,120
you're going to want to create things

191
00:07:42,120 --> 00:07:45,360
yourself in some cases you're going to

192
00:07:45,360 --> 00:07:46,979
want to grab the Starbucks coffee off

193
00:07:46,979 --> 00:07:49,560
the shelf and accept the risk now I

194
00:07:49,560 --> 00:07:51,000
don't think you ever do no verification

195
00:07:51,000 --> 00:07:54,060
I think you still can verify but as we

196
00:07:54,060 --> 00:07:58,860
look at our supply chain uh processes in

197
00:07:58,860 --> 00:08:00,720
our respective organizations you're

198
00:08:00,720 --> 00:08:02,099
likely going to have a combination of

199
00:08:02,099 --> 00:08:04,940
these things going on

200
00:08:05,220 --> 00:08:08,460
okay so also in this talk

201
00:08:08,460 --> 00:08:10,680
um it's in this Unwritten unspoken

202
00:08:10,680 --> 00:08:13,380
contract that I use Linux as my daily

203
00:08:13,380 --> 00:08:16,979
driver now uh and so this laptop up here

204
00:08:16,979 --> 00:08:18,960
is running Linux and it's displaying

205
00:08:18,960 --> 00:08:20,099
just fine

206
00:08:20,099 --> 00:08:21,599
okay

207
00:08:21,599 --> 00:08:23,520
um also these two are the the funniest

208
00:08:23,520 --> 00:08:26,160
posts that I've made on social media and

209
00:08:26,160 --> 00:08:27,900
each of these have

210
00:08:27,900 --> 00:08:29,460
um the one on the left on Twitter has

211
00:08:29,460 --> 00:08:31,440
over a million impressions the one on

212
00:08:31,440 --> 00:08:32,880
the right on LinkedIn has over a million

213
00:08:32,880 --> 00:08:34,380
impressions and I think you're they're

214
00:08:34,380 --> 00:08:37,020
hilarious so okay you can you can laugh

215
00:08:37,020 --> 00:08:39,419
now it's fine thank you thank you thank

216
00:08:39,419 --> 00:08:40,979
you maybe they're funny when you see

217
00:08:40,979 --> 00:08:42,539
them on social media

218
00:08:42,539 --> 00:08:46,560
um but it's my way of telling you that a

219
00:08:46,560 --> 00:08:48,720
lot of the examples I'll give in this

220
00:08:48,720 --> 00:08:50,940
talk will be Linux based

221
00:08:50,940 --> 00:08:53,580
um because that's my daily driver and I

222
00:08:53,580 --> 00:08:55,860
still maintain Linux systems uh that

223
00:08:55,860 --> 00:08:58,740
support the podcast uh so a lot of my

224
00:08:58,740 --> 00:09:00,660
work deals with Linux so a lot of my

225
00:09:00,660 --> 00:09:02,519
supply chain examples that I will give

226
00:09:02,519 --> 00:09:05,880
in tools are specific to Linux some of

227
00:09:05,880 --> 00:09:07,920
those run on other platforms such as

228
00:09:07,920 --> 00:09:10,260
Windows or Mac OS but largely they run

229
00:09:10,260 --> 00:09:12,800
on Linux

230
00:09:13,279 --> 00:09:15,959
okay this will be the the kind of

231
00:09:15,959 --> 00:09:18,180
premise for talking about the digital

232
00:09:18,180 --> 00:09:21,420
supply chain and again this was the

233
00:09:21,420 --> 00:09:23,220
result of me meeting with lots of people

234
00:09:23,220 --> 00:09:27,060
thinking about the supply chain and what

235
00:09:27,060 --> 00:09:29,279
I wanted to create was a map on how we

236
00:09:29,279 --> 00:09:30,899
think about the digital supply chain

237
00:09:30,899 --> 00:09:32,640
because supply chain is an

238
00:09:32,640 --> 00:09:34,800
all-encompassing term that means a lot

239
00:09:34,800 --> 00:09:36,660
of things to a lot of people but let's

240
00:09:36,660 --> 00:09:38,279
dig into what the digital supply chain

241
00:09:38,279 --> 00:09:41,339
is on the left hand side we have the

242
00:09:41,339 --> 00:09:43,620
physical supply chain this is often what

243
00:09:43,620 --> 00:09:45,600
we think of when we acquire Hardware

244
00:09:45,600 --> 00:09:49,019
when we get a PC a laptop a server an

245
00:09:49,019 --> 00:09:52,019
iot device it's physical Hardware we ask

246
00:09:52,019 --> 00:09:54,420
ourselves we should ask ourselves

247
00:09:54,420 --> 00:09:56,820
has it been tampered with has someone

248
00:09:56,820 --> 00:09:59,820
physically altered the hardware

249
00:09:59,820 --> 00:10:01,920
now in terms of this happened if you

250
00:10:01,920 --> 00:10:03,779
search for hunting for back doors in

251
00:10:03,779 --> 00:10:06,060
counterfeit Cisco devices that's where

252
00:10:06,060 --> 00:10:08,880
the the bottom image of that physical

253
00:10:08,880 --> 00:10:11,519
box is is someone actually soldered a

254
00:10:11,519 --> 00:10:14,820
piece of Hardware onto a Cisco device to

255
00:10:14,820 --> 00:10:17,519
tamper with it to install a back door

256
00:10:17,519 --> 00:10:20,040
so that's the physical aspect

257
00:10:20,040 --> 00:10:22,380
the next if we move from left to right

258
00:10:22,380 --> 00:10:25,740
we have what I call well what Bob Martin

259
00:10:25,740 --> 00:10:27,779
from might are called and I stole from

260
00:10:27,779 --> 00:10:29,700
Bob because I think is a great way of

261
00:10:29,700 --> 00:10:31,560
thinking about it when we think about

262
00:10:31,560 --> 00:10:33,660
things such as firmware

263
00:10:33,660 --> 00:10:35,399
now firmware

264
00:10:35,399 --> 00:10:37,260
is just software that's inconvenient to

265
00:10:37,260 --> 00:10:38,279
program

266
00:10:38,279 --> 00:10:41,279
the other thing about firmware is that

267
00:10:41,279 --> 00:10:43,380
it's pre-installed when you acquire a

268
00:10:43,380 --> 00:10:45,660
piece of Hardware you don't have a

269
00:10:45,660 --> 00:10:48,060
choice of what's installed on that

270
00:10:48,060 --> 00:10:50,160
laptop in terms of firmware I mean maybe

271
00:10:50,160 --> 00:10:51,899
you do maybe you don't but for the most

272
00:10:51,899 --> 00:10:57,420
part your UEFI bios has to be put

273
00:10:57,420 --> 00:10:59,519
together Acquired and programmed onto

274
00:10:59,519 --> 00:11:01,680
your Hardware by the manufacturer it's

275
00:11:01,680 --> 00:11:03,240
pre-installed

276
00:11:03,240 --> 00:11:06,000
so my second category of where we need

277
00:11:06,000 --> 00:11:07,380
to worry about the supply chain is

278
00:11:07,380 --> 00:11:10,019
pre-installed software like firmware now

279
00:11:10,019 --> 00:11:11,640
you also notice bootloaders are in there

280
00:11:11,640 --> 00:11:14,399
too but boot loaders are oblique us

281
00:11:14,399 --> 00:11:15,899
nerds we're going to mess with boot

282
00:11:15,899 --> 00:11:17,880
loaders for the most part

283
00:11:17,880 --> 00:11:19,740
other people aren't messing with boot

284
00:11:19,740 --> 00:11:22,019
loaders it's pre-installed by the

285
00:11:22,019 --> 00:11:25,620
operating system uh kernels also might

286
00:11:25,620 --> 00:11:27,839
be pre-installed and may be messed with

287
00:11:27,839 --> 00:11:30,959
by you know Linux nerds and such but for

288
00:11:30,959 --> 00:11:32,839
the most part kernels are also largely

289
00:11:32,839 --> 00:11:35,940
pre-installed for most user populations

290
00:11:35,940 --> 00:11:38,700
then we get into operating systems we

291
00:11:38,700 --> 00:11:40,440
customize the operating system a little

292
00:11:40,440 --> 00:11:42,420
bit and that speaks to where I think

293
00:11:42,420 --> 00:11:44,040
firmware and there's lower level

294
00:11:44,040 --> 00:11:45,839
software sits is the level of

295
00:11:45,839 --> 00:11:47,640
customization and interaction that you

296
00:11:47,640 --> 00:11:50,399
have with it most users are not

297
00:11:50,399 --> 00:11:52,440
customizing firmware bootloaders kernels

298
00:11:52,440 --> 00:11:54,839
in much of the operating system okay now

299
00:11:54,839 --> 00:11:57,480
those of us in this room probably are

300
00:11:57,480 --> 00:11:59,040
doing all that stuff with all those

301
00:11:59,040 --> 00:12:01,560
things and that's fine but most of our

302
00:12:01,560 --> 00:12:04,260
users that we're supporting are not most

303
00:12:04,260 --> 00:12:06,720
of our users are in this the third

304
00:12:06,720 --> 00:12:07,920
bucket there

305
00:12:07,920 --> 00:12:10,980
of the digital supply chain third-party

306
00:12:10,980 --> 00:12:13,019
applications right

307
00:12:13,019 --> 00:12:15,240
when people think about using their

308
00:12:15,240 --> 00:12:17,820
Computing device whatever it is they're

309
00:12:17,820 --> 00:12:20,339
using slack they're using Zoom they're

310
00:12:20,339 --> 00:12:22,680
using Google Chrome and that's also each

311
00:12:22,680 --> 00:12:25,019
of those pieces of software have a

312
00:12:25,019 --> 00:12:26,940
separate supply chain

313
00:12:26,940 --> 00:12:29,459
now the fourth box all the way on the

314
00:12:29,459 --> 00:12:31,680
right is the one where when we say

315
00:12:31,680 --> 00:12:33,959
supply chain it seems to have taken over

316
00:12:33,959 --> 00:12:36,180
this term in our industry what they

317
00:12:36,180 --> 00:12:37,860
really mean is the software supply chain

318
00:12:37,860 --> 00:12:40,680
this bucket for me is software you write

319
00:12:40,680 --> 00:12:43,560
yourself now nothing wrong with that uh

320
00:12:43,560 --> 00:12:45,959
But realize that's a separate supply

321
00:12:45,959 --> 00:12:48,540
chain vertical if you will where we

322
00:12:48,540 --> 00:12:50,339
worry about software libraries where do

323
00:12:50,339 --> 00:12:52,320
we get our software libraries from how

324
00:12:52,320 --> 00:12:54,300
do we track the transient dependencies

325
00:12:54,300 --> 00:12:56,820
within our software libraries how do we

326
00:12:56,820 --> 00:12:59,339
know how much third-party software is

327
00:12:59,339 --> 00:13:00,839
included in our software that we're

328
00:13:00,839 --> 00:13:02,880
writing ourselves so that's the force

329
00:13:02,880 --> 00:13:06,120
bucket fourth bucket now notice the

330
00:13:06,120 --> 00:13:07,920
arrows are going from uh left to right

331
00:13:07,920 --> 00:13:10,920
so I think the further you go towards

332
00:13:10,920 --> 00:13:13,680
physical Hardware you get reduced

333
00:13:13,680 --> 00:13:16,500
visibility and validation is hard right

334
00:13:16,500 --> 00:13:18,000
got to physically open up the hardware

335
00:13:18,000 --> 00:13:20,040
to look and see if there's a supply

336
00:13:20,040 --> 00:13:23,700
chain issue I think as you go towards uh

337
00:13:23,700 --> 00:13:26,339
software developed in-house you get

338
00:13:26,339 --> 00:13:29,220
increased customization and control I

339
00:13:29,220 --> 00:13:31,800
can't really control the firmware that's

340
00:13:31,800 --> 00:13:35,100
on my laptop I'm relying on the supply

341
00:13:35,100 --> 00:13:37,560
chain to deliver me that software we

342
00:13:37,560 --> 00:13:39,120
talked about that in the shmukh Khan

343
00:13:39,120 --> 00:13:41,760
presentation so this talk is a kind of a

344
00:13:41,760 --> 00:13:44,579
follow-up on how you defend yourself uh

345
00:13:44,579 --> 00:13:46,620
from the shmukh Khan presentation

346
00:13:46,620 --> 00:13:48,480
so we get that increased customization

347
00:13:48,480 --> 00:13:50,040
and control

348
00:13:50,040 --> 00:13:51,899
um though when I like to think about it

349
00:13:51,899 --> 00:13:54,899
as I work with firmware largely for my

350
00:13:54,899 --> 00:13:58,079
job today and it's always been a love of

351
00:13:58,079 --> 00:13:59,700
mine a love-hate relationship with

352
00:13:59,700 --> 00:14:02,940
firmware uh you could say that uh when I

353
00:14:02,940 --> 00:14:05,279
was developing software I had a lot of

354
00:14:05,279 --> 00:14:07,500
control I could take a library and I

355
00:14:07,500 --> 00:14:09,060
could go you know what I'm going to

356
00:14:09,060 --> 00:14:11,100
write that myself I'm not going to rely

357
00:14:11,100 --> 00:14:12,360
on a supply chain I'm just going to

358
00:14:12,360 --> 00:14:14,700
write that myself and that's going to be

359
00:14:14,700 --> 00:14:18,060
my library when we move left on this

360
00:14:18,060 --> 00:14:19,740
graph it gets harder and harder to do

361
00:14:19,740 --> 00:14:21,000
that I can't go oh I'm just going to

362
00:14:21,000 --> 00:14:23,220
design my own chip and solder it on

363
00:14:23,220 --> 00:14:25,680
there to replace that that gets harder

364
00:14:25,680 --> 00:14:28,320
okay so that's the supply chain attack

365
00:14:28,320 --> 00:14:30,300
surface

366
00:14:30,300 --> 00:14:33,540
now when it comes to the issue of trust

367
00:14:33,540 --> 00:14:36,660
I trust none of it

368
00:14:36,660 --> 00:14:39,240
I don't trust the supply chain at all I

369
00:14:39,240 --> 00:14:41,339
think we need to go into it knowing that

370
00:14:41,339 --> 00:14:44,040
we do not trust any Link in the supply

371
00:14:44,040 --> 00:14:47,160
chain and we have to verify every single

372
00:14:47,160 --> 00:14:51,660
Link in the supply chain as best we can

373
00:14:51,660 --> 00:14:54,240
so and the reason for that is here's

374
00:14:54,240 --> 00:14:57,180
some real world attacks now I purposely

375
00:14:57,180 --> 00:14:59,399
chose ones aside from the physical which

376
00:14:59,399 --> 00:15:01,620
I won't focus too much on uh for the

377
00:15:01,620 --> 00:15:03,540
remainder of the talk but the rest of

378
00:15:03,540 --> 00:15:05,760
them are examples that happened recently

379
00:15:05,760 --> 00:15:10,680
like late 2022 and into 2023 these are

380
00:15:10,680 --> 00:15:13,199
some of the kind of poster child supply

381
00:15:13,199 --> 00:15:16,019
chain attacks and we'll couple these

382
00:15:16,019 --> 00:15:18,300
with some of the defensive mechanisms

383
00:15:18,300 --> 00:15:21,480
that I've been working on and

384
00:15:21,480 --> 00:15:24,139
researching

385
00:15:24,360 --> 00:15:25,860
um so I mean we'll talk a little bit

386
00:15:25,860 --> 00:15:28,199
these are like physical and firmware

387
00:15:28,199 --> 00:15:29,940
kind of lumped into one

388
00:15:29,940 --> 00:15:34,260
um so let's start with your TPM right

389
00:15:34,260 --> 00:15:36,420
um The Trusted platform module of course

390
00:15:36,420 --> 00:15:39,660
holds keys for things uh on your system

391
00:15:39,660 --> 00:15:41,579
things like secure Boot and other such

392
00:15:41,579 --> 00:15:44,399
things there are a couple of different

393
00:15:44,399 --> 00:15:47,279
vulnerabilities with this uh one is an

394
00:15:47,279 --> 00:15:48,779
older one

395
00:15:48,779 --> 00:15:50,820
um that I have I have seen detections

396
00:15:50,820 --> 00:15:53,660
for this is checking for the newer one

397
00:15:53,660 --> 00:15:57,240
that was discovered by quarks Labs

398
00:15:57,240 --> 00:15:59,279
um uh there's actually two I believe

399
00:15:59,279 --> 00:16:00,839
vulnerabilities that were disclosed by

400
00:16:00,839 --> 00:16:02,399
quarks Labs

401
00:16:02,399 --> 00:16:04,920
um one of them is I believe a memory

402
00:16:04,920 --> 00:16:07,440
corruption buffer overflow inside the

403
00:16:07,440 --> 00:16:10,440
TPM firmware this software is where you

404
00:16:10,440 --> 00:16:12,839
can check for this it's super hard to

405
00:16:12,839 --> 00:16:15,240
find like at this level like freely

406
00:16:15,240 --> 00:16:16,860
available tools to check for some of

407
00:16:16,860 --> 00:16:18,120
these things

408
00:16:18,120 --> 00:16:20,760
um so I I think it's awesome and so I

409
00:16:20,760 --> 00:16:23,459
ran this tool on some of my systems and

410
00:16:23,459 --> 00:16:26,040
like lo and behold I'm I'm vulnerable

411
00:16:26,040 --> 00:16:29,220
I'm like okay that's great what do we do

412
00:16:29,220 --> 00:16:31,380
now now we've checked the supply chain

413
00:16:31,380 --> 00:16:34,860
we figured out oh the TPM manufacturer

414
00:16:34,860 --> 00:16:37,560
has given me software that's on a chip

415
00:16:37,560 --> 00:16:41,279
that's vulnerable what do we do

416
00:16:41,279 --> 00:16:43,320
it's my best advice I'm sorry I don't

417
00:16:43,320 --> 00:16:44,820
have great advice for depending

418
00:16:44,820 --> 00:16:47,519
defending the supply chain so you know

419
00:16:47,519 --> 00:16:50,220
there might be another talk going on uh

420
00:16:50,220 --> 00:16:53,579
but uh that's set it on fire and so

421
00:16:53,579 --> 00:16:55,920
here's uh here's the story behind this

422
00:16:55,920 --> 00:16:59,880
is that uh Yvonne Arcee uh and I go go

423
00:16:59,880 --> 00:17:01,860
way back he's the founder of uh core

424
00:17:01,860 --> 00:17:03,480
security Technologies from back in the

425
00:17:03,480 --> 00:17:04,859
day they were the first sponsor of my

426
00:17:04,859 --> 00:17:06,240
podcast

427
00:17:06,240 --> 00:17:08,760
um so Yvonne works for quarks Labs

428
00:17:08,760 --> 00:17:11,760
Yvonne is the director and coordinator

429
00:17:11,760 --> 00:17:14,280
for the vulnerability research at quarks

430
00:17:14,280 --> 00:17:16,619
Labs it was one of the researchers on

431
00:17:16,619 --> 00:17:18,540
Yvonne's team that discovered these

432
00:17:18,540 --> 00:17:22,079
vulnerabilities in the TPM so Yvonne

433
00:17:22,079 --> 00:17:23,459
worked with the researcher and worked

434
00:17:23,459 --> 00:17:25,380
the disclosure process for this in that

435
00:17:25,380 --> 00:17:27,780
disclosure process Yvonne goes you know

436
00:17:27,780 --> 00:17:31,919
let me check my own uh Dell laptop okay

437
00:17:31,919 --> 00:17:35,160
now I'm not picking on Dell it's even

438
00:17:35,160 --> 00:17:37,260
playing field out there right it just in

439
00:17:37,260 --> 00:17:38,340
this case it happened to be Dell

440
00:17:38,340 --> 00:17:40,080
variable could have been HP Lenovo

441
00:17:40,080 --> 00:17:41,880
whatever but just happened to be Dell

442
00:17:41,880 --> 00:17:45,539
let me check my Dell laptop turns out he

443
00:17:45,539 --> 00:17:47,400
checks his Dell laptop the TPM is

444
00:17:47,400 --> 00:17:48,960
vulnerable to the vulnerabilities that

445
00:17:48,960 --> 00:17:51,179
his researcher found so he goes to the

446
00:17:51,179 --> 00:17:53,039
chip manufacturer

447
00:17:53,039 --> 00:17:56,160
and he says look uh this this Dell

448
00:17:56,160 --> 00:17:58,080
laptop like on your chip it's vulnerable

449
00:17:58,080 --> 00:18:01,140
and they're like well that chip that

450
00:18:01,140 --> 00:18:03,720
runs the TPM is into life according to

451
00:18:03,720 --> 00:18:06,780
the TPM manufacturer he's like okay he's

452
00:18:06,780 --> 00:18:08,039
like so you're not gonna make a fix for

453
00:18:08,039 --> 00:18:10,740
it and they're like no he's like but my

454
00:18:10,740 --> 00:18:14,520
laptop is still supported by Dell so you

455
00:18:14,520 --> 00:18:15,900
should expect that Dell is going to go

456
00:18:15,900 --> 00:18:17,880
to you and ask you for an update and

457
00:18:17,880 --> 00:18:20,700
when you tell Dell that the chip has

458
00:18:20,700 --> 00:18:23,340
been uh discontinued they're probably

459
00:18:23,340 --> 00:18:24,960
not going to be too happy about that or

460
00:18:24,960 --> 00:18:26,640
maybe I don't know I don't want to

461
00:18:26,640 --> 00:18:29,460
represent Dell here so when you go to

462
00:18:29,460 --> 00:18:31,679
Dell for Yvonne's laptop there's still

463
00:18:31,679 --> 00:18:34,860
no update for his TPM so that's why like

464
00:18:34,860 --> 00:18:37,500
set it on fire is the really only way

465
00:18:37,500 --> 00:18:39,320
right now to kill that vulnerability

466
00:18:39,320 --> 00:18:41,160
otherwise you're just waiting on

467
00:18:41,160 --> 00:18:45,539
Upstream uh supply chain issues so

468
00:18:45,539 --> 00:18:47,460
it's good to have the tool to check for

469
00:18:47,460 --> 00:18:49,500
it but we also need to plan on the back

470
00:18:49,500 --> 00:18:51,240
end right now you got to start thinking

471
00:18:51,240 --> 00:18:53,400
about replacing that Hardware updating

472
00:18:53,400 --> 00:18:55,980
it if uh or using it in a different

473
00:18:55,980 --> 00:18:57,720
manner right depending on the

474
00:18:57,720 --> 00:19:00,840
sensitivity level uh of the the data or

475
00:19:00,840 --> 00:19:03,539
the Personnel involved in this laptop so

476
00:19:03,539 --> 00:19:04,679
these are the kind of supply chain

477
00:19:04,679 --> 00:19:07,200
problems that we deal with first step is

478
00:19:07,200 --> 00:19:09,780
Discovery and pressuring oems and

479
00:19:09,780 --> 00:19:11,820
manufacturers to get these fixes out

480
00:19:11,820 --> 00:19:14,000
there

481
00:19:14,700 --> 00:19:20,360
um another great tool is lvfs and FW upd

482
00:19:20,360 --> 00:19:25,020
it is a suite of tools for Linux and it

483
00:19:25,020 --> 00:19:27,179
allows you to do a couple things one is

484
00:19:27,179 --> 00:19:29,640
enumerate all the devices and Hardware

485
00:19:29,640 --> 00:19:33,179
within your system right there are ways

486
00:19:33,179 --> 00:19:34,500
to do this on all all different

487
00:19:34,500 --> 00:19:36,600
platforms I just happen to focus in on

488
00:19:36,600 --> 00:19:38,940
on the Linux one this is a great free

489
00:19:38,940 --> 00:19:41,820
and open source tool two components uh

490
00:19:41,820 --> 00:19:44,280
it was created by Richard Hughes and the

491
00:19:44,280 --> 00:19:46,440
two components are the lvfs which is the

492
00:19:46,440 --> 00:19:48,900
database of all the firmware that works

493
00:19:48,900 --> 00:19:51,539
directly with Hardware manufacturers and

494
00:19:51,539 --> 00:19:53,580
vendors they upload their firmware

495
00:19:53,580 --> 00:19:56,100
updates to lvfs the Linux vendor

496
00:19:56,100 --> 00:19:57,419
firmware service

497
00:19:57,419 --> 00:20:00,900
FW up D is the open source free and open

498
00:20:00,900 --> 00:20:04,020
source software on Linux that allows you

499
00:20:04,020 --> 00:20:06,539
that gives you the set of utilities to

500
00:20:06,539 --> 00:20:07,980
enumerate the hardware on your system

501
00:20:07,980 --> 00:20:09,720
and numerate the firmware on your system

502
00:20:09,720 --> 00:20:12,840
and also apply updates to vendors who

503
00:20:12,840 --> 00:20:14,820
are participating in the program

504
00:20:14,820 --> 00:20:16,620
so when you're looking at your hardware

505
00:20:16,620 --> 00:20:19,380
and considering the supply chain this is

506
00:20:19,380 --> 00:20:22,700
a great thing to use

507
00:20:23,880 --> 00:20:26,160
the other Tool uh I thought I had

508
00:20:26,160 --> 00:20:28,140
another slide okay that's fine

509
00:20:28,140 --> 00:20:31,020
um the other tool that I found uh and

510
00:20:31,020 --> 00:20:32,340
this one was kind of interesting because

511
00:20:32,340 --> 00:20:34,559
we were really like figuring out ways on

512
00:20:34,559 --> 00:20:36,660
Linux I want to know what audio drivers

513
00:20:36,660 --> 00:20:39,179
and audio stack that I have and getting

514
00:20:39,179 --> 00:20:42,059
that answer easily led me and I stumbled

515
00:20:42,059 --> 00:20:45,299
upon this Tool uh called inksy I'll call

516
00:20:45,299 --> 00:20:46,160
it

517
00:20:46,160 --> 00:20:50,820
inxi and it does an amazing job of

518
00:20:50,820 --> 00:20:52,760
querying all the hardware on your system

519
00:20:52,760 --> 00:20:56,520
and giving you a complete list now if

520
00:20:56,520 --> 00:20:57,960
you just run it by itself it gives you a

521
00:20:57,960 --> 00:20:59,460
little bit of output you can manipulate

522
00:20:59,460 --> 00:21:02,340
the command line output to give you a

523
00:21:02,340 --> 00:21:04,320
lot of information telling you which

524
00:21:04,320 --> 00:21:06,000
Hardware you have so you can start

525
00:21:06,000 --> 00:21:08,700
evaluating the the supply chain threats

526
00:21:08,700 --> 00:21:11,820
and or risks that you may have

527
00:21:11,820 --> 00:21:14,820
one thing that you'll notice that I'm

528
00:21:14,820 --> 00:21:16,559
kind of I'm kind of proud of is that's

529
00:21:16,559 --> 00:21:19,140
my desktop the 24 core threadripper it's

530
00:21:19,140 --> 00:21:23,280
awesome it's awesome uh and when I built

531
00:21:23,280 --> 00:21:27,059
the system uh probably two or three

532
00:21:27,059 --> 00:21:29,760
years ago now uh I was like well I'll

533
00:21:29,760 --> 00:21:31,260
upgrade it eventually and now I'm

534
00:21:31,260 --> 00:21:32,460
sitting here two three years from now

535
00:21:32,460 --> 00:21:34,919
going yeah I still can't find anything

536
00:21:34,919 --> 00:21:36,720
that's like would be much faster than

537
00:21:36,720 --> 00:21:38,880
what I have now like that's pretty

538
00:21:38,880 --> 00:21:42,000
awesome it's got 256 gigs of RAM uh

539
00:21:42,000 --> 00:21:44,580
which is impressive now I don't I don't

540
00:21:44,580 --> 00:21:47,520
use all that power I just it's bragging

541
00:21:47,520 --> 00:21:50,820
rights right so so there

542
00:21:50,820 --> 00:21:53,940
um but also what that means from a

543
00:21:53,940 --> 00:21:56,520
supply chain perspective I built this

544
00:21:56,520 --> 00:21:58,260
massive computer that I use as my

545
00:21:58,260 --> 00:22:00,720
desktop uh which I love but I'm gonna

546
00:22:00,720 --> 00:22:02,580
have that for like a long time right

547
00:22:02,580 --> 00:22:05,159
like it's not gonna get slow or I'm not

548
00:22:05,159 --> 00:22:08,220
any time in the future which means I

549
00:22:08,220 --> 00:22:09,780
have to look at and preserve the supply

550
00:22:09,780 --> 00:22:12,480
chain of the hardware and firmware

551
00:22:12,480 --> 00:22:15,179
components that are on the system the

552
00:22:15,179 --> 00:22:17,940
manufacturer may stop and say I'm not

553
00:22:17,940 --> 00:22:19,140
giving you any more firmware updates

554
00:22:19,140 --> 00:22:22,080
that is end of life right now sorry

555
00:22:22,080 --> 00:22:23,940
you're out of luck I'm not lighting this

556
00:22:23,940 --> 00:22:26,340
computer on fire right so we've got an

557
00:22:26,340 --> 00:22:28,799
interesting situation on our hands the

558
00:22:28,799 --> 00:22:30,480
bigger systems we build the most the

559
00:22:30,480 --> 00:22:32,700
longer we have to support it I think for

560
00:22:32,700 --> 00:22:34,200
me one of the takeaways is to start

561
00:22:34,200 --> 00:22:36,080
looking into some of the open source

562
00:22:36,080 --> 00:22:39,720
firmware like core boot My Hope Is we've

563
00:22:39,720 --> 00:22:41,820
seen some evidence of this as core boot

564
00:22:41,820 --> 00:22:44,280
supports more Hardware open source will

565
00:22:44,280 --> 00:22:46,799
continue support where the manufacturer

566
00:22:46,799 --> 00:22:49,500
left off and I think that that is my tip

567
00:22:49,500 --> 00:22:52,620
basically for for this situation and the

568
00:22:52,620 --> 00:22:54,780
TPM is a harder one because there's

569
00:22:54,780 --> 00:22:56,400
probably like licensing and other

570
00:22:56,400 --> 00:22:59,100
mitigating factors but for things like

571
00:22:59,100 --> 00:23:02,039
UEFI for example core boot can come up

572
00:23:02,039 --> 00:23:04,140
with open source Alternatives where the

573
00:23:04,140 --> 00:23:06,720
manufacturer has left off and left you

574
00:23:06,720 --> 00:23:08,880
vulnerable

575
00:23:08,880 --> 00:23:12,419
okay let's look at some pre-installed

576
00:23:12,419 --> 00:23:15,539
um firmware uh in Events first so the

577
00:23:15,539 --> 00:23:17,940
MSI breach and the supply chain has

578
00:23:17,940 --> 00:23:21,360
everyone heard about the MSI breach uh a

579
00:23:21,360 --> 00:23:25,020
few of you have so uh MSI was a victim

580
00:23:25,020 --> 00:23:26,940
of a ransomware attack now look I'm just

581
00:23:26,940 --> 00:23:28,140
going to tell you like what I've read

582
00:23:28,140 --> 00:23:31,620
I'm not claiming any inside knowledge so

583
00:23:31,620 --> 00:23:34,260
like please don't get me in trouble or

584
00:23:34,260 --> 00:23:35,960
stop the recording I can tell you more

585
00:23:35,960 --> 00:23:39,240
but they're the victim of a ransomware

586
00:23:39,240 --> 00:23:40,620
attack

587
00:23:40,620 --> 00:23:43,460
the ransomware threat actors stole 1.5

588
00:23:43,460 --> 00:23:47,460
terabytes of software including source

589
00:23:47,460 --> 00:23:50,460
code bios development Frameworks and

590
00:23:50,460 --> 00:23:53,159
private Keys that's one of the dangerous

591
00:23:53,159 --> 00:23:56,220
things now we did see Intel had some uh

592
00:23:56,220 --> 00:23:58,260
source code and keys leaked turns out

593
00:23:58,260 --> 00:24:00,240
that was for boot guard turns out those

594
00:24:00,240 --> 00:24:02,100
keys were not pushed out to production

595
00:24:02,100 --> 00:24:04,020
systems they were only using development

596
00:24:04,020 --> 00:24:07,620
as far as I can tell uh MSI on the other

597
00:24:07,620 --> 00:24:10,679
hand uh I believe that these some of

598
00:24:10,679 --> 00:24:13,860
these keys are used in production this

599
00:24:13,860 --> 00:24:16,140
essentially means that the entire supply

600
00:24:16,140 --> 00:24:19,799
chain for MSI hardware and any hardware

601
00:24:19,799 --> 00:24:22,620
related to the leak is potentially

602
00:24:22,620 --> 00:24:25,200
easily compromised by attackers this

603
00:24:25,200 --> 00:24:27,720
means they can create their own signed

604
00:24:27,720 --> 00:24:30,780
code to run on your Hardware it is the

605
00:24:30,780 --> 00:24:32,700
the cryptographic signing of this

606
00:24:32,700 --> 00:24:34,740
firmware that prevents attackers from

607
00:24:34,740 --> 00:24:36,419
doing this but once all the source code

608
00:24:36,419 --> 00:24:38,880
leaks in the private Keys leak it's it's

609
00:24:38,880 --> 00:24:41,580
you know the gloves come off and anyone

610
00:24:41,580 --> 00:24:43,500
can produce a firmware update that

611
00:24:43,500 --> 00:24:45,559
firmware update will be presented

612
00:24:45,559 --> 00:24:48,419
installed on your system it'll check out

613
00:24:48,419 --> 00:24:51,500
and that means an attacker now has

614
00:24:51,500 --> 00:24:54,480
persistent very high privileged access

615
00:24:54,480 --> 00:24:57,000
to your system that is very very

616
00:24:57,000 --> 00:25:00,299
difficult to detect

617
00:25:00,299 --> 00:25:05,039
um so we also I didn't did I say we I

618
00:25:05,039 --> 00:25:08,640
say also it was published that uh MSI

619
00:25:08,640 --> 00:25:11,159
systems had a lack of signature Updates

620
00:25:11,159 --> 00:25:13,080
this is something we've been uh pushing

621
00:25:13,080 --> 00:25:16,140
for is the update package is actually

622
00:25:16,140 --> 00:25:18,659
signed so that you're not installing

623
00:25:18,659 --> 00:25:22,200
just anyone's update to you EFI system

624
00:25:22,200 --> 00:25:24,000
that you're installing the assigned

625
00:25:24,000 --> 00:25:25,860
update from the manufacturer some

626
00:25:25,860 --> 00:25:27,659
manufacturers don't sign their updates

627
00:25:27,659 --> 00:25:30,480
MSI was one of them since all this stuff

628
00:25:30,480 --> 00:25:32,700
leaked we could go through the leak and

629
00:25:32,700 --> 00:25:35,039
go did you sign any of the stuff no okay

630
00:25:35,039 --> 00:25:37,620
well then Eclipse team has a couple of

631
00:25:37,620 --> 00:25:39,659
blogs that are summarizing everything

632
00:25:39,659 --> 00:25:44,100
that our research team has found so far

633
00:25:44,100 --> 00:25:46,740
Black Lotus is another instance and this

634
00:25:46,740 --> 00:25:49,260
one this particularly love because

635
00:25:49,260 --> 00:25:52,620
it's a is an interesting aspect of

636
00:25:52,620 --> 00:25:54,960
supply chain in that like I'm bringing

637
00:25:54,960 --> 00:25:58,620
my own vulnerable modules or code to the

638
00:25:58,620 --> 00:26:00,659
system I've been seeing a trend as I

639
00:26:00,659 --> 00:26:02,700
cover the articles on security weekly

640
00:26:02,700 --> 00:26:05,580
that once an attacker gains a foothold

641
00:26:05,580 --> 00:26:08,700
if there's not enough attack surface

642
00:26:08,700 --> 00:26:11,100
that's vulnerable enough they'll just

643
00:26:11,100 --> 00:26:13,919
bring their own PHP module and put it on

644
00:26:13,919 --> 00:26:15,059
there that's vulnerable to your

645
00:26:15,059 --> 00:26:17,100
WordPress server they'll bring their own

646
00:26:17,100 --> 00:26:19,980
bootloader in in the case of Black Lotus

647
00:26:19,980 --> 00:26:22,080
it install also has a vulnerability they

648
00:26:22,080 --> 00:26:24,720
can exploit to increase their privilege

649
00:26:24,720 --> 00:26:26,940
level that allows them to be more

650
00:26:26,940 --> 00:26:29,580
persistent which also gives them greater

651
00:26:29,580 --> 00:26:31,740
impact on the system as well

652
00:26:31,740 --> 00:26:34,679
that's essentially Black Lotus uh in a

653
00:26:34,679 --> 00:26:37,039
nutshell

654
00:26:38,220 --> 00:26:39,840
um also slides on order so we're going

655
00:26:39,840 --> 00:26:42,059
to switch back I explained all of the uh

656
00:26:42,059 --> 00:26:44,640
after all so the other part of fwfd the

657
00:26:44,640 --> 00:26:46,559
reason I put this in here is there's

658
00:26:46,559 --> 00:26:48,360
another feature so not just enumerating

659
00:26:48,360 --> 00:26:50,220
your Hardware so now we're talking about

660
00:26:50,220 --> 00:26:52,140
there could be vulnerabilities and

661
00:26:52,140 --> 00:26:54,840
conditions in your UEFI firmware that

662
00:26:54,840 --> 00:26:58,140
make it ripe for attackers well FW upd

663
00:26:58,140 --> 00:27:00,419
has this great Little Hardware security

664
00:27:00,419 --> 00:27:02,400
module

665
00:27:02,400 --> 00:27:05,159
um that you can run and what's

666
00:27:05,159 --> 00:27:07,980
interesting is uh it hasn't been widely

667
00:27:07,980 --> 00:27:10,860
publicized and basically it scans your

668
00:27:10,860 --> 00:27:13,320
hardware and firmware on your system and

669
00:27:13,320 --> 00:27:15,020
classifies your system into different

670
00:27:15,020 --> 00:27:17,940
what he calls host security IDs or

671
00:27:17,940 --> 00:27:20,400
security models so if you fail enough

672
00:27:20,400 --> 00:27:23,520
tests it's basically a score he's like

673
00:27:23,520 --> 00:27:26,039
you're not at a good security model for

674
00:27:26,039 --> 00:27:28,260
your firmware which is awesome

675
00:27:28,260 --> 00:27:30,539
uh for you to know not awesome because

676
00:27:30,539 --> 00:27:33,179
then you have to fix it but uh it's a

677
00:27:33,179 --> 00:27:36,960
great little so it's FW upd MGR security

678
00:27:36,960 --> 00:27:39,000
um I have to use dash dash Force for

679
00:27:39,000 --> 00:27:40,620
certain certain Hardware that it may or

680
00:27:40,620 --> 00:27:43,200
may not recognize uh and it gives you a

681
00:27:43,200 --> 00:27:46,140
basically a readout of not just what

682
00:27:46,140 --> 00:27:47,760
firmware might exist but what

683
00:27:47,760 --> 00:27:50,100
configuration and other options might

684
00:27:50,100 --> 00:27:51,539
not exist on there as well like Intel

685
00:27:51,539 --> 00:27:53,700
boot guard uh you know is it is it there

686
00:27:53,700 --> 00:27:55,080
is it enabled

687
00:27:55,080 --> 00:27:56,400
um so this is developed by Richard

688
00:27:56,400 --> 00:28:00,480
Hughes uh he works for Red Hat uh I did

689
00:28:00,480 --> 00:28:02,159
an interview with him on the eclipsing

690
00:28:02,159 --> 00:28:04,080
podcast so you can listen to our entire

691
00:28:04,080 --> 00:28:06,000
discussion uh about how the project

692
00:28:06,000 --> 00:28:07,980
started where it's going and all the

693
00:28:07,980 --> 00:28:10,080
things you can do with it but if you're

694
00:28:10,080 --> 00:28:12,179
looking to validate the supply chain did

695
00:28:12,179 --> 00:28:14,700
your Hardware manufacturer give you

696
00:28:14,700 --> 00:28:17,640
hardware and firmware that was in a

697
00:28:17,640 --> 00:28:20,039
secure State well one of the ways you

698
00:28:20,039 --> 00:28:21,840
can test that is using free and open

699
00:28:21,840 --> 00:28:24,559
source tool

700
00:28:25,220 --> 00:28:27,840
secure boots also like a really good

701
00:28:27,840 --> 00:28:30,240
thing to have uh as well and I still

702
00:28:30,240 --> 00:28:32,039
feel like there's some misconceptions

703
00:28:32,039 --> 00:28:34,020
out there and maybe not with you folks

704
00:28:34,020 --> 00:28:35,580
in the audience

705
00:28:35,580 --> 00:28:37,740
um but with the community like larger

706
00:28:37,740 --> 00:28:41,039
Community uh some people think secure

707
00:28:41,039 --> 00:28:42,900
boot is well that's just a physical

708
00:28:42,900 --> 00:28:44,880
mechanism to protect it sometimes when I

709
00:28:44,880 --> 00:28:46,320
talk to administrators they're like well

710
00:28:46,320 --> 00:28:48,419
you know yeah I can enable or not enable

711
00:28:48,419 --> 00:28:50,580
but that only protects me if someone has

712
00:28:50,580 --> 00:28:52,919
physical access access to the system I'm

713
00:28:52,919 --> 00:28:55,980
like no secure boot is cryptographically

714
00:28:55,980 --> 00:28:58,020
verifying every piece of software in

715
00:28:58,020 --> 00:29:00,120
your boot process it's a great

716
00:29:00,120 --> 00:29:03,000
protection mechanism against supply

717
00:29:03,000 --> 00:29:05,220
chain attacks because if there is a

718
00:29:05,220 --> 00:29:06,779
supply chain attack that doesn't

719
00:29:06,779 --> 00:29:08,520
compromise secure boot then we have

720
00:29:08,520 --> 00:29:10,260
those as well that's the last bullet on

721
00:29:10,260 --> 00:29:12,900
the slide and that happens however if

722
00:29:12,900 --> 00:29:14,640
there are other supply chain attacks

723
00:29:14,640 --> 00:29:17,640
that are not bypassing the secure boot

724
00:29:17,640 --> 00:29:20,340
mechanism it's a great way to ensure the

725
00:29:20,340 --> 00:29:23,640
Integrity of your system however it

726
00:29:23,640 --> 00:29:25,980
hinges upon the fact this is a theme

727
00:29:25,980 --> 00:29:28,080
that will come up that you keep your

728
00:29:28,080 --> 00:29:30,840
revocation list up to date revocation

729
00:29:30,840 --> 00:29:33,779
list updating is a Hot Topic it's not

730
00:29:33,779 --> 00:29:35,399
something we directly have control over

731
00:29:35,399 --> 00:29:39,600
we we can take that back we can if you

732
00:29:39,600 --> 00:29:40,919
want to assume all the responsibility

733
00:29:40,919 --> 00:29:42,779
for maintaining all the keys and

734
00:29:42,779 --> 00:29:44,700
cryptographically signing every piece of

735
00:29:44,700 --> 00:29:47,460
software on your system Intel and

736
00:29:47,460 --> 00:29:49,020
Microsoft develop secure boot so you

737
00:29:49,020 --> 00:29:50,580
could do that that's a lot of work and

738
00:29:50,580 --> 00:29:52,260
responsibility so I don't necessarily

739
00:29:52,260 --> 00:29:54,539
recommend that however then you're

740
00:29:54,539 --> 00:29:57,960
relying on the oems and manufacturers to

741
00:29:57,960 --> 00:29:59,700
update the revocation list because they

742
00:29:59,700 --> 00:30:02,940
control the keys and it's up to you and

743
00:30:02,940 --> 00:30:05,159
us in the community to make sure that it

744
00:30:05,159 --> 00:30:06,779
gets updated

745
00:30:06,779 --> 00:30:10,080
um lvfs again FW upd has done this for

746
00:30:10,080 --> 00:30:12,720
Linux systems you can do this in Windows

747
00:30:12,720 --> 00:30:14,460
um apple and Mac OS have their own

748
00:30:14,460 --> 00:30:15,840
process for that because they control

749
00:30:15,840 --> 00:30:18,120
the hardware firmware and software more

750
00:30:18,120 --> 00:30:20,100
than any other manufacturer so we

751
00:30:20,100 --> 00:30:21,720
basically just have to trust it like

752
00:30:21,720 --> 00:30:24,179
Apple's good which we can have that

753
00:30:24,179 --> 00:30:26,580
debate however if we go back to the

754
00:30:26,580 --> 00:30:28,380
Linux systems

755
00:30:28,380 --> 00:30:28,919
um

756
00:30:28,919 --> 00:30:32,039
Richard did a great job of updating FW

757
00:30:32,039 --> 00:30:34,860
up D to help you update your dbx on

758
00:30:34,860 --> 00:30:37,980
Linux because on Linux I still think

759
00:30:37,980 --> 00:30:40,200
it's difficult to detect whose

760
00:30:40,200 --> 00:30:42,720
responsibility is this to update the

761
00:30:42,720 --> 00:30:44,940
revocation list for secure boot should

762
00:30:44,940 --> 00:30:47,279
it be should it be Microsoft should it

763
00:30:47,279 --> 00:30:49,740
be your OEM or manufacturer through a

764
00:30:49,740 --> 00:30:52,020
UEFI update should it be your operating

765
00:30:52,020 --> 00:30:55,020
system vendor well if you're using shim

766
00:30:55,020 --> 00:30:56,820
and shim is shared by multiple Linux

767
00:30:56,820 --> 00:30:59,460
distributions whose job is it to update

768
00:30:59,460 --> 00:31:00,720
all of that software and all those

769
00:31:00,720 --> 00:31:02,940
revocation lists so Richard said you

770
00:31:02,940 --> 00:31:05,039
know what I can help you with that and

771
00:31:05,039 --> 00:31:07,740
it does a great job of doing it it Flags

772
00:31:07,740 --> 00:31:10,320
situations such as if you're going to

773
00:31:10,320 --> 00:31:13,020
update your dbx I was trying to help a

774
00:31:13,020 --> 00:31:14,460
random person on the internet with this

775
00:31:14,460 --> 00:31:16,380
and they just weren't getting it because

776
00:31:16,380 --> 00:31:18,480
they were trying to update their dbx and

777
00:31:18,480 --> 00:31:21,299
like the updates failing and it says

778
00:31:21,299 --> 00:31:23,220
that my my bootloader is in the in the

779
00:31:23,220 --> 00:31:25,080
dbx I'm like yeah that's because you

780
00:31:25,080 --> 00:31:26,760
haven't updated your bootloader and

781
00:31:26,760 --> 00:31:28,740
they're like no no it's up it's up to

782
00:31:28,740 --> 00:31:32,159
date I'm like no no the hash of your

783
00:31:32,159 --> 00:31:35,000
bootloader is in the revocation list

784
00:31:35,000 --> 00:31:38,220
FW upd is telling you that if you apply

785
00:31:38,220 --> 00:31:40,919
this update when you reboot and you have

786
00:31:40,919 --> 00:31:43,440
secure boot enabled it's not going to

787
00:31:43,440 --> 00:31:45,419
boot because your bootloader is in the

788
00:31:45,419 --> 00:31:48,120
dbx it's warning of that before all

789
00:31:48,120 --> 00:31:49,980
those bad things happen so go update

790
00:31:49,980 --> 00:31:51,779
your bootloader he's like I'll just I'll

791
00:31:51,779 --> 00:31:54,840
wait for an update to FW upd I'm like no

792
00:31:54,840 --> 00:31:58,220
no never mind

793
00:31:58,220 --> 00:32:01,860
hopefully they figured it out

794
00:32:01,860 --> 00:32:03,840
okay let's look at some third-party

795
00:32:03,840 --> 00:32:05,159
software

796
00:32:05,159 --> 00:32:08,360
how are we doing on time good

797
00:32:08,640 --> 00:32:12,960
3cx was that a train wreck or what good

798
00:32:12,960 --> 00:32:15,779
Lord the more I looked into this so now

799
00:32:15,779 --> 00:32:17,220
we're talking about third-party software

800
00:32:17,220 --> 00:32:19,740
right the desktop software that people

801
00:32:19,740 --> 00:32:22,080
use and we've all probably got like

802
00:32:22,080 --> 00:32:23,700
little Snippets from the story you know

803
00:32:23,700 --> 00:32:25,020
that we pulled so I'm not gonna go into

804
00:32:25,020 --> 00:32:28,980
too much detail here but what was

805
00:32:28,980 --> 00:32:30,539
astonishing to me was how much of a

806
00:32:30,539 --> 00:32:32,820
train wreck this was a a supply chain

807
00:32:32,820 --> 00:32:35,760
attack that led to another supply chain

808
00:32:35,760 --> 00:32:38,820
attack that compromised software that

809
00:32:38,820 --> 00:32:41,159
was for voice over IP for for call

810
00:32:41,159 --> 00:32:43,380
centers and in places like that they got

811
00:32:43,380 --> 00:32:46,080
pushed out to all of the users that did

812
00:32:46,080 --> 00:32:48,240
some side Channel loading dlls like

813
00:32:48,240 --> 00:32:49,980
there's a this is an amazing you could

814
00:32:49,980 --> 00:32:52,020
give a whole talk just on this whole

815
00:32:52,020 --> 00:32:53,520
thing right here but this is most

816
00:32:53,520 --> 00:32:55,260
definitely a great example of

817
00:32:55,260 --> 00:32:57,539
third-party software in the supply chain

818
00:32:57,539 --> 00:33:00,299
being compromised the vendor also

819
00:33:00,299 --> 00:33:02,460
handled it very very very very very

820
00:33:02,460 --> 00:33:06,480
poorly it was really really bad they're

821
00:33:06,480 --> 00:33:08,159
like there's no there's no problem here

822
00:33:08,159 --> 00:33:10,380
the like Jedi hand like yeah is no

823
00:33:10,380 --> 00:33:13,799
problem here your EDR must be as a false

824
00:33:13,799 --> 00:33:16,200
positive or something like no your

825
00:33:16,200 --> 00:33:18,600
entire supply chain uh has been

826
00:33:18,600 --> 00:33:20,519
compromised now and we're still

827
00:33:20,519 --> 00:33:22,380
uncovering the extent of these damages

828
00:33:22,380 --> 00:33:25,559
because the ax Trader software was

829
00:33:25,559 --> 00:33:27,840
compromised in a supply chain attack the

830
00:33:27,840 --> 00:33:30,539
3cx builds were compromised in a supply

831
00:33:30,539 --> 00:33:33,059
chain attack uh and so there's others

832
00:33:33,059 --> 00:33:34,740
being affected by this breach and it

833
00:33:34,740 --> 00:33:36,720
just keeps unraveling and it's a hot

834
00:33:36,720 --> 00:33:38,899
mess

835
00:33:39,720 --> 00:33:41,940
um so I want to go uh to a Linux example

836
00:33:41,940 --> 00:33:43,799
of third-party software and it's

837
00:33:43,799 --> 00:33:45,539
interesting this is what set me down the

838
00:33:45,539 --> 00:33:48,419
path of getting really interested in

839
00:33:48,419 --> 00:33:50,279
supply chain stuff you know my day job

840
00:33:50,279 --> 00:33:51,600
was getting more interested in supply

841
00:33:51,600 --> 00:33:54,360
chain stuff and immediately when they

842
00:33:54,360 --> 00:33:56,399
did that like I I started relating it to

843
00:33:56,399 --> 00:33:58,519
me right I try and make things relatable

844
00:33:58,519 --> 00:34:02,279
uh to my own experiences and I was like

845
00:34:02,279 --> 00:34:04,260
you know I used I use Linux again I'm

846
00:34:04,260 --> 00:34:05,519
obligated to tell you that's in the

847
00:34:05,519 --> 00:34:08,879
unwritten contract and on my desktop so

848
00:34:08,879 --> 00:34:10,679
I'm like I update all the software all

849
00:34:10,679 --> 00:34:12,839
the time and I used to be I'm a

850
00:34:12,839 --> 00:34:15,239
recovering Ubuntu user I used to be in

851
00:34:15,239 --> 00:34:17,460
Ubuntu user and what what got me with

852
00:34:17,460 --> 00:34:19,500
the whole supply chain issue there was

853
00:34:19,500 --> 00:34:21,599
I'm running Ubuntu and I want to install

854
00:34:21,599 --> 00:34:25,440
software and if I use ubuntu's package

855
00:34:25,440 --> 00:34:28,080
repos it's either not there or it's

856
00:34:28,080 --> 00:34:29,760
really outdated so I'm like all right

857
00:34:29,760 --> 00:34:32,219
all right fine okay I'll go to snap like

858
00:34:32,219 --> 00:34:34,560
maybe snap and then I'm like but there's

859
00:34:34,560 --> 00:34:36,839
like two different snaps out there and

860
00:34:36,839 --> 00:34:38,699
then snap does a sandboxing that breaks

861
00:34:38,699 --> 00:34:40,800
the function functionality of the snap

862
00:34:40,800 --> 00:34:42,540
and then but now I also have to remember

863
00:34:42,540 --> 00:34:44,820
to update snap I'm like oh okay that

864
00:34:44,820 --> 00:34:49,500
that's fine uh maybe I'll just go to the

865
00:34:49,500 --> 00:34:51,599
uh like Google Chrome has its own

866
00:34:51,599 --> 00:34:54,540
repository and I'll go to their repo and

867
00:34:54,540 --> 00:34:56,159
then I got to make sure I trust their

868
00:34:56,159 --> 00:34:58,800
keys I gotta validate their keys and now

869
00:34:58,800 --> 00:35:00,839
I'm getting Chrome from them and if I

870
00:35:00,839 --> 00:35:03,000
want Firefox I get a disable Firefox and

871
00:35:03,000 --> 00:35:05,640
ubuntu's official one uh and then what

872
00:35:05,640 --> 00:35:07,020
is the other now I'm having a mental

873
00:35:07,020 --> 00:35:09,720
blank what's the other Linux uh one that

874
00:35:09,720 --> 00:35:11,520
they want to use that's like Snap what

875
00:35:11,520 --> 00:35:13,200
is that called

876
00:35:13,200 --> 00:35:15,240
flat pack thank you then I'm like oh

877
00:35:15,240 --> 00:35:17,520
then we have flap pack but what strikes

878
00:35:17,520 --> 00:35:18,960
me about all these different areas is

879
00:35:18,960 --> 00:35:21,060
I'm like someone else is packaging my

880
00:35:21,060 --> 00:35:25,140
software and do I trust them or not and

881
00:35:25,140 --> 00:35:28,680
so I switched to Manjaro and Arch Linux

882
00:35:28,680 --> 00:35:31,079
and I still have the same problems but

883
00:35:31,079 --> 00:35:34,500
I'm not running Ubuntu anymore uh so

884
00:35:34,500 --> 00:35:37,320
here's now I validated this with a

885
00:35:37,320 --> 00:35:38,940
member of the the Arch Linux security

886
00:35:38,940 --> 00:35:40,320
team

887
00:35:40,320 --> 00:35:41,640
um who happens to be one of my new

888
00:35:41,640 --> 00:35:43,560
friends that came on the show and I was

889
00:35:43,560 --> 00:35:46,200
like dude this is really bad and he

890
00:35:46,200 --> 00:35:49,020
wrote me a very nice email Santiago is

891
00:35:49,020 --> 00:35:51,119
an amazing person and they're working on

892
00:35:51,119 --> 00:35:53,099
this on this issue he's like I hear you

893
00:35:53,099 --> 00:35:55,020
he's like we know about this and we're

894
00:35:55,020 --> 00:35:57,540
working on resolving it which breeds

895
00:35:57,540 --> 00:35:59,040
some confidence in me they're not just

896
00:35:59,040 --> 00:36:00,900
like sweeping it under the rug like some

897
00:36:00,900 --> 00:36:04,680
some vendors do right but basically uh

898
00:36:04,680 --> 00:36:07,380
this article described a situation where

899
00:36:07,380 --> 00:36:08,640
they're able to pull off this attack

900
00:36:08,640 --> 00:36:13,680
where in Arch Linux packaging you as the

901
00:36:13,680 --> 00:36:15,839
packager can turn off signature

902
00:36:15,839 --> 00:36:19,560
validation for your own software now I

903
00:36:19,560 --> 00:36:20,940
believe this feature was put in there if

904
00:36:20,940 --> 00:36:22,500
you have something as part of your

905
00:36:22,500 --> 00:36:25,440
package that you don't need to verify uh

906
00:36:25,440 --> 00:36:27,359
as part of it maybe it's a glob of data

907
00:36:27,359 --> 00:36:29,400
that has no security implications in

908
00:36:29,400 --> 00:36:31,260
these weird use cases this is what

909
00:36:31,260 --> 00:36:32,400
happens when you make software for

910
00:36:32,400 --> 00:36:33,720
everyone you could account for all these

911
00:36:33,720 --> 00:36:35,760
different use cases I'm not a fan of the

912
00:36:35,760 --> 00:36:37,920
feature because what I discovered is

913
00:36:37,920 --> 00:36:41,160
when you're as the end user updating the

914
00:36:41,160 --> 00:36:43,200
software the package maintainer goes

915
00:36:43,200 --> 00:36:44,520
yeah we're just going to skip validation

916
00:36:44,520 --> 00:36:46,800
for that it doesn't give me an option to

917
00:36:46,800 --> 00:36:49,020
go do I accept or not it just continues

918
00:36:49,020 --> 00:36:51,720
on with life and I'm like I I don't I

919
00:36:51,720 --> 00:36:53,280
don't like this and I think this is one

920
00:36:53,280 --> 00:36:54,900
of my you know this is one of my tips

921
00:36:54,900 --> 00:36:56,760
for all of you in validating and

922
00:36:56,760 --> 00:36:58,200
defending the supply chain is

923
00:36:58,200 --> 00:36:59,940
questioning this stuff you have to

924
00:36:59,940 --> 00:37:01,200
really look for it when you're doing

925
00:37:01,200 --> 00:37:03,300
things like updating packages look for

926
00:37:03,300 --> 00:37:05,820
it and reach out to people right so now

927
00:37:05,820 --> 00:37:08,339
the the team is looking at this

928
00:37:08,339 --> 00:37:10,140
um and so what happens is if you skip

929
00:37:10,140 --> 00:37:12,000
that validation the other thing you have

930
00:37:12,000 --> 00:37:14,280
to do is find expired domains

931
00:37:14,280 --> 00:37:16,920
and you have to take over the domain to

932
00:37:16,920 --> 00:37:18,780
deliver that software and since you can

933
00:37:18,780 --> 00:37:20,400
do that and the software is not signed

934
00:37:20,400 --> 00:37:22,560
you can install malicious software on

935
00:37:22,560 --> 00:37:24,359
people's devices

936
00:37:24,359 --> 00:37:25,619
um and it's all explained in that

937
00:37:25,619 --> 00:37:27,300
article but again this is one of the

938
00:37:27,300 --> 00:37:29,760
supply chain things that uh I come

939
00:37:29,760 --> 00:37:31,920
across uh and it's not the only one

940
00:37:31,920 --> 00:37:33,480
right

941
00:37:33,480 --> 00:37:36,420
um when you're updating as well it may

942
00:37:36,420 --> 00:37:38,820
ask you to validate a key and this is

943
00:37:38,820 --> 00:37:40,920
where I think we just need to be extra

944
00:37:40,920 --> 00:37:42,660
diligent and this has been a problem

945
00:37:42,660 --> 00:37:45,000
ever since we started signing software

946
00:37:45,000 --> 00:37:47,040
in any capacity now there's a you know a

947
00:37:47,040 --> 00:37:49,079
check sum and a signing process those

948
00:37:49,079 --> 00:37:50,900
are two totally different things

949
00:37:50,900 --> 00:37:54,359
but in this case I was installing

950
00:37:54,359 --> 00:37:56,940
software like I want to run Spotify on

951
00:37:56,940 --> 00:37:59,099
my Linux desktop I don't want to have to

952
00:37:59,099 --> 00:38:00,720
build Spotify I don't have to like go

953
00:38:00,720 --> 00:38:03,180
out of my way I do want to have some

954
00:38:03,180 --> 00:38:05,040
trust that there's a third party that I

955
00:38:05,040 --> 00:38:07,920
can trust that will validate this will

956
00:38:07,920 --> 00:38:09,900
produce a package that can be validated

957
00:38:09,900 --> 00:38:12,599
however when I'm updating it says do

958
00:38:12,599 --> 00:38:16,020
trust is key now be be honest

959
00:38:16,020 --> 00:38:19,380
how many you're laughing already how

960
00:38:19,380 --> 00:38:21,839
many of you when you're in a hurry you

961
00:38:21,839 --> 00:38:23,760
want to listen to some music you got a

962
00:38:23,760 --> 00:38:25,800
lot of meetings that day and project

963
00:38:25,800 --> 00:38:27,300
deadlines are just going to click yes

964
00:38:27,300 --> 00:38:29,940
like just yes yeah come on be honest

965
00:38:29,940 --> 00:38:33,599
it's fine it's fine it's fine right what

966
00:38:33,599 --> 00:38:35,579
I'm proposing is that we notice

967
00:38:35,579 --> 00:38:38,160
situations like this that we work with

968
00:38:38,160 --> 00:38:39,540
package maintainers that come up with

969
00:38:39,540 --> 00:38:41,540
more automated ways to validate the key

970
00:38:41,540 --> 00:38:44,040
which is being worked on

971
00:38:44,040 --> 00:38:45,599
um so that we just don't click yes right

972
00:38:45,599 --> 00:38:47,579
and I think this is part of the if we're

973
00:38:47,579 --> 00:38:49,800
going to start to have solutions for the

974
00:38:49,800 --> 00:38:51,780
supply chain we need to not just be in

975
00:38:51,780 --> 00:38:54,960
the mode of clicking yes but also the

976
00:38:54,960 --> 00:38:57,180
update mechanisms need to help us as

977
00:38:57,180 --> 00:38:58,920
well help us do better help us more

978
00:38:58,920 --> 00:39:00,960
easily validate these things that aren't

979
00:39:00,960 --> 00:39:03,420
so manual

980
00:39:03,420 --> 00:39:06,480
okay let's look at software developed

981
00:39:06,480 --> 00:39:08,820
in-house

982
00:39:08,820 --> 00:39:13,500
I love this paper this might be my

983
00:39:13,500 --> 00:39:15,900
favorite security paper of all time

984
00:39:15,900 --> 00:39:18,000
we've We've joked about it on on the

985
00:39:18,000 --> 00:39:19,260
show actually because when we were

986
00:39:19,260 --> 00:39:21,060
talking heavily about supply chain Josh

987
00:39:21,060 --> 00:39:22,800
marpet would be like you know they're

988
00:39:22,800 --> 00:39:24,420
remember Paul there's the paper that

989
00:39:24,420 --> 00:39:25,920
talks about the compiler inside of the

990
00:39:25,920 --> 00:39:27,420
compiler inside of the compiler I'm like

991
00:39:27,420 --> 00:39:29,520
I know Josh I know and then like I got

992
00:39:29,520 --> 00:39:31,980
it wrong and who wrote the paper but

993
00:39:31,980 --> 00:39:34,859
it's Ken Thompson's paper Reflections on

994
00:39:34,859 --> 00:39:38,940
trusting trust in August of 1984. I

995
00:39:38,940 --> 00:39:41,579
don't know how old all of you were in

996
00:39:41,579 --> 00:39:43,560
1984

997
00:39:43,560 --> 00:39:46,520
um but I was I was in elementary school

998
00:39:46,520 --> 00:39:49,380
and Ken was right in the smartest paper

999
00:39:49,380 --> 00:39:52,619
in the world on supply chain security

1000
00:39:52,619 --> 00:39:56,099
does anyone know how many pages it is

1001
00:39:56,099 --> 00:39:58,079
how many pages how many did you guess

1002
00:39:58,079 --> 00:40:00,119
eight Jeff I know you know put your hand

1003
00:40:00,119 --> 00:40:02,700
down eight

1004
00:40:02,700 --> 00:40:05,880
two it's three it's three pages I was

1005
00:40:05,880 --> 00:40:08,339
Aston I'm like oh my God and so you read

1006
00:40:08,339 --> 00:40:11,099
it and then you read it again and then

1007
00:40:11,099 --> 00:40:14,099
you go I still I still don't wow okay

1008
00:40:14,099 --> 00:40:15,900
let me put it down and I'll go read it

1009
00:40:15,900 --> 00:40:18,660
again uh but he he really just he's

1010
00:40:18,660 --> 00:40:20,640
summer is so densely packed and so

1011
00:40:20,640 --> 00:40:23,220
eloquently just summarizes software

1012
00:40:23,220 --> 00:40:25,680
supply chain security you cannot trust

1013
00:40:25,680 --> 00:40:28,680
code you did not totally create yourself

1014
00:40:28,680 --> 00:40:32,040
I mean it's of course like that I'm like

1015
00:40:32,040 --> 00:40:34,560
oh well if we listened to Ken 1984 we

1016
00:40:34,560 --> 00:40:35,700
wouldn't have the supply chain problem

1017
00:40:35,700 --> 00:40:37,560
but we got lazy we rely on other

1018
00:40:37,560 --> 00:40:39,839
people's code uh I mean from the

1019
00:40:39,839 --> 00:40:41,160
beginning of time we were allowed on

1020
00:40:41,160 --> 00:40:42,960
people's code there were Punch Cards in

1021
00:40:42,960 --> 00:40:45,060
a drawer in a central location that

1022
00:40:45,060 --> 00:40:46,859
people used to share so we've been

1023
00:40:46,859 --> 00:40:48,780
sharing code ever since we could write

1024
00:40:48,780 --> 00:40:51,119
software on Punch Cards

1025
00:40:51,119 --> 00:40:52,380
um no amount of source level

1026
00:40:52,380 --> 00:40:54,480
verification or scrutiny will protect

1027
00:40:54,480 --> 00:40:56,940
you from using untrusted Code doesn't

1028
00:40:56,940 --> 00:40:58,640
matter how much we look at the code

1029
00:40:58,640 --> 00:41:01,800
finding logic flaws and other things is

1030
00:41:01,800 --> 00:41:04,859
super super hard especially as we have

1031
00:41:04,859 --> 00:41:06,599
millions and millions of lines of code

1032
00:41:06,599 --> 00:41:09,480
and roughly estimates I see that 70

1033
00:41:09,480 --> 00:41:11,579
percent of that code is open source in

1034
00:41:11,579 --> 00:41:13,619
someone else's software

1035
00:41:13,619 --> 00:41:14,160
um

1036
00:41:14,160 --> 00:41:15,900
so I encourage you to go back and when

1037
00:41:15,900 --> 00:41:17,579
we think about software security read

1038
00:41:17,579 --> 00:41:21,420
Ken's paper and then read it again and I

1039
00:41:21,420 --> 00:41:23,220
just be astonished that it was written

1040
00:41:23,220 --> 00:41:27,420
in 1984. so amazing stuff so we started

1041
00:41:27,420 --> 00:41:30,540
applying some of those Concepts I am uh

1042
00:41:30,540 --> 00:41:33,000
working on I don't have a date when it's

1043
00:41:33,000 --> 00:41:34,500
going to be released but I'm working on

1044
00:41:34,500 --> 00:41:36,359
a class the class is centered around

1045
00:41:36,359 --> 00:41:38,760
vulnerability management my first task

1046
00:41:38,760 --> 00:41:41,220
was to set out and build a whole bunch

1047
00:41:41,220 --> 00:41:43,380
of vulnerable stuff you'd think that

1048
00:41:43,380 --> 00:41:45,060
would be easier than it turns out that

1049
00:41:45,060 --> 00:41:48,300
it gets super hard like why is this so

1050
00:41:48,300 --> 00:41:50,520
hard putting up vulnerable stuff like I

1051
00:41:50,520 --> 00:41:52,140
used to it would be like oh my God it's

1052
00:41:52,140 --> 00:41:54,540
vulnerable it's really horrible and I'm

1053
00:41:54,540 --> 00:41:55,740
like well I really want it to be

1054
00:41:55,740 --> 00:41:57,660
vulnerable why is it so hard

1055
00:41:57,660 --> 00:42:00,599
um so but one of the things and this is

1056
00:42:00,599 --> 00:42:02,700
like in order to have supply chain

1057
00:42:02,700 --> 00:42:04,440
Security in your software you can do the

1058
00:42:04,440 --> 00:42:06,180
opposite of what I'm doing here so it's

1059
00:42:06,180 --> 00:42:08,760
like learning by the opposite in order

1060
00:42:08,760 --> 00:42:10,859
to have a really good reliable

1061
00:42:10,859 --> 00:42:13,619
vulnerable system I had to build a lot

1062
00:42:13,619 --> 00:42:16,500
of things myself like literally in

1063
00:42:16,500 --> 00:42:20,099
Docker from scratch so I couldn't rely

1064
00:42:20,099 --> 00:42:23,520
on the Upstream because the older stuff

1065
00:42:23,520 --> 00:42:25,859
to their credit Debian and others like

1066
00:42:25,859 --> 00:42:27,300
they're taking that stuff down like they

1067
00:42:27,300 --> 00:42:29,099
don't want you to use the older stuff so

1068
00:42:29,099 --> 00:42:30,660
a lot of that older stuff will disappear

1069
00:42:30,660 --> 00:42:33,060
and go away but I'm like no I need that

1070
00:42:33,060 --> 00:42:36,119
I but put that put that back so

1071
00:42:36,119 --> 00:42:38,940
one way to solve the problem is I did

1072
00:42:38,940 --> 00:42:40,619
from scratch which basically gives you

1073
00:42:40,619 --> 00:42:42,240
an empty container the next thing you

1074
00:42:42,240 --> 00:42:43,859
need in that container is the root file

1075
00:42:43,859 --> 00:42:46,740
system I stole an old root file system

1076
00:42:46,740 --> 00:42:50,160
from Debian eight I think Jesse is Jesse

1077
00:42:50,160 --> 00:42:52,200
eight I think it was Jesse was eight or

1078
00:42:52,200 --> 00:42:55,619
nine uh there's a Debbie and Jesse uh

1079
00:42:55,619 --> 00:42:58,560
build root and I install that now I've

1080
00:42:58,560 --> 00:43:01,319
got a reliable way no one can Muck with

1081
00:43:01,319 --> 00:43:02,940
my build route because I downloaded it I

1082
00:43:02,940 --> 00:43:04,740
have it when I build the base container

1083
00:43:04,740 --> 00:43:07,740
it puts an old version of Debian in

1084
00:43:07,740 --> 00:43:10,920
there and then I can go in and put my

1085
00:43:10,920 --> 00:43:12,540
stuff that I want to be in every one of

1086
00:43:12,540 --> 00:43:14,819
my vulnerable containers inside of that

1087
00:43:14,819 --> 00:43:16,740
and I build it myself

1088
00:43:16,740 --> 00:43:19,079
if you've ever and then you know I

1089
00:43:19,079 --> 00:43:21,780
looked at all of the vulnerable scripts

1090
00:43:21,780 --> 00:43:24,119
for containers uh to create containers

1091
00:43:24,119 --> 00:43:27,119
that are vulnerable and I re-roll all of

1092
00:43:27,119 --> 00:43:30,060
those as well uh so they were more they

1093
00:43:30,060 --> 00:43:31,319
were vulnerable in a more reliable

1094
00:43:31,319 --> 00:43:32,579
fashion

1095
00:43:32,579 --> 00:43:36,060
and uh so I had this really really great

1096
00:43:36,060 --> 00:43:38,819
environment but now this was to be

1097
00:43:38,819 --> 00:43:41,579
vulnerable to not be vulnerable to go

1098
00:43:41,579 --> 00:43:44,220
back to the Ken Thompson paper build

1099
00:43:44,220 --> 00:43:47,520
stuff yourself I see so many Docker

1100
00:43:47,520 --> 00:43:51,359
containers that are just horrible level

1101
00:43:51,359 --> 00:43:53,180
security because they're just

1102
00:43:53,180 --> 00:43:55,380
willy-nilly pulling in components from

1103
00:43:55,380 --> 00:43:58,319
wherever and not validating so I think

1104
00:43:58,319 --> 00:43:59,700
if you have a chance to look at

1105
00:43:59,700 --> 00:44:01,619
containers in your environment you

1106
00:44:01,619 --> 00:44:03,119
should go towards building more things

1107
00:44:03,119 --> 00:44:06,660
on your own don't just do from you know

1108
00:44:06,660 --> 00:44:10,800
whatever PHP application from WordPress

1109
00:44:10,800 --> 00:44:14,099
because inside of that is someone else's

1110
00:44:14,099 --> 00:44:16,380
code it's downloading all their people's

1111
00:44:16,380 --> 00:44:19,020
code and installing on your systems so

1112
00:44:19,020 --> 00:44:21,000
try and lean more towards building your

1113
00:44:21,000 --> 00:44:22,680
own things you might probably have to go

1114
00:44:22,680 --> 00:44:24,420
from this extreme because this was from

1115
00:44:24,420 --> 00:44:27,240
a vulnerable lab but definitely go

1116
00:44:27,240 --> 00:44:29,339
towards the more build it yourself when

1117
00:44:29,339 --> 00:44:31,260
you're working with containers another

1118
00:44:31,260 --> 00:44:32,819
way to deal with

1119
00:44:32,819 --> 00:44:34,980
specifically containers and also

1120
00:44:34,980 --> 00:44:38,160
libraries is Google's got a pretty new a

1121
00:44:38,160 --> 00:44:41,040
new and pretty cool project where right

1122
00:44:41,040 --> 00:44:43,440
now it's Java in Python they are

1123
00:44:43,440 --> 00:44:46,460
producing software packages that are

1124
00:44:46,460 --> 00:44:49,260
validated by Google so I mean if you

1125
00:44:49,260 --> 00:44:50,760
trust who do you trust do you trust

1126
00:44:50,760 --> 00:44:52,859
Google do we trust Google they used to

1127
00:44:52,859 --> 00:44:54,480
say they weren't evil and they stopped

1128
00:44:54,480 --> 00:44:55,859
saying that so I don't know if I trust

1129
00:44:55,859 --> 00:44:58,079
them as much but I do think this project

1130
00:44:58,079 --> 00:45:01,800
is cool they produce s-bombs in spdx and

1131
00:45:01,800 --> 00:45:05,819
vax formats they are applying uh salsa

1132
00:45:05,819 --> 00:45:08,040
artifacts for that these are all some of

1133
00:45:08,040 --> 00:45:09,240
the newer projects that are talking

1134
00:45:09,240 --> 00:45:13,140
about the supply chain so you can get

1135
00:45:13,140 --> 00:45:16,140
yours if you have to rely on the I want

1136
00:45:16,140 --> 00:45:18,660
to go get a coffee and I want to just

1137
00:45:18,660 --> 00:45:19,980
pull it from the convenience store and

1138
00:45:19,980 --> 00:45:21,960
drink it get it from Google because

1139
00:45:21,960 --> 00:45:23,099
they're doing a higher level of

1140
00:45:23,099 --> 00:45:25,079
assurance I think this this project is

1141
00:45:25,079 --> 00:45:26,940
they're saying all the right things to

1142
00:45:26,940 --> 00:45:30,540
me so hopefully this is successful

1143
00:45:30,540 --> 00:45:33,720
so in conclusion uh Hardware firmware

1144
00:45:33,720 --> 00:45:36,079
third-party software application uh

1145
00:45:36,079 --> 00:45:39,000
software developer strategy based on

1146
00:45:39,000 --> 00:45:41,040
some of the suggestions I have here have

1147
00:45:41,040 --> 00:45:43,619
a strategy for each of them right though

1148
00:45:43,619 --> 00:45:46,619
they are four distinct areas of the

1149
00:45:46,619 --> 00:45:49,740
supply chain attack surface one other

1150
00:45:49,740 --> 00:45:51,599
thing that I really love as advice is

1151
00:45:51,599 --> 00:45:54,300
you need to monitor for changes

1152
00:45:54,300 --> 00:45:58,440
continuously that is my best examples I

1153
00:45:58,440 --> 00:46:01,440
have ironically enough in MSI laptop

1154
00:46:01,440 --> 00:46:03,420
this is not an MSI laptop this is a

1155
00:46:03,420 --> 00:46:05,099
framework framework did a great job by

1156
00:46:05,099 --> 00:46:06,359
the way with their with their firmware

1157
00:46:06,359 --> 00:46:11,220
but MSI did not and MSI stopped

1158
00:46:11,220 --> 00:46:13,920
producing a you if I bios update pretty

1159
00:46:13,920 --> 00:46:16,260
much right as I bought it in 2020. so

1160
00:46:16,260 --> 00:46:18,180
what I do what do you do as I said you

1161
00:46:18,180 --> 00:46:20,099
can let it on fire you know your TPM

1162
00:46:20,099 --> 00:46:22,740
example from earlier what I do is I use

1163
00:46:22,740 --> 00:46:25,020
software to monitor any changes in my

1164
00:46:25,020 --> 00:46:27,300
UEFI environment if that changes it

1165
00:46:27,300 --> 00:46:29,460
shouldn't change if MSI hasn't released

1166
00:46:29,460 --> 00:46:31,560
an update you shouldn't change if it

1167
00:46:31,560 --> 00:46:33,540
changes an attacker may have modified it

1168
00:46:33,540 --> 00:46:35,280
I do the same thing with my boot loader

1169
00:46:35,280 --> 00:46:38,160
if my bootloader changes as a result of

1170
00:46:38,160 --> 00:46:40,200
not an operating system update that I

1171
00:46:40,200 --> 00:46:42,180
applied I want to know about it so I

1172
00:46:42,180 --> 00:46:44,400
monitor my boot loaders and go if that

1173
00:46:44,400 --> 00:46:46,740
changes I want an alert and I want to

1174
00:46:46,740 --> 00:46:48,359
cross-reference with my operating system

1175
00:46:48,359 --> 00:46:51,000
updates so not only getting a good

1176
00:46:51,000 --> 00:46:52,380
supply chain from the beginning but

1177
00:46:52,380 --> 00:46:54,440
monitoring moving forward is important

1178
00:46:54,440 --> 00:46:57,420
s-bombs I like s-bombs a lot but I think

1179
00:46:57,420 --> 00:46:59,280
it's the s-bomb comparison that's really

1180
00:46:59,280 --> 00:47:01,380
where it's at the manufacturer of

1181
00:47:01,380 --> 00:47:03,480
whatever component is producing an

1182
00:47:03,480 --> 00:47:06,780
s-bomb great take that then analyze

1183
00:47:06,780 --> 00:47:09,240
their Hardware software firmware and

1184
00:47:09,240 --> 00:47:11,220
create your own s-bomb and then compare

1185
00:47:11,220 --> 00:47:13,260
them and continuously compare them over

1186
00:47:13,260 --> 00:47:15,500
time

1187
00:47:16,200 --> 00:47:18,240
uh I always like to thank my co-workers

1188
00:47:18,240 --> 00:47:20,280
and others that have worked in firmware

1189
00:47:20,280 --> 00:47:22,740
longer than I have I learned everything

1190
00:47:22,740 --> 00:47:24,480
about firmware from Reading their

1191
00:47:24,480 --> 00:47:27,060
research and talking with them I work

1192
00:47:27,060 --> 00:47:29,400
with an amazing team at eclipsium and I

1193
00:47:29,400 --> 00:47:30,900
have to give them credit because they

1194
00:47:30,900 --> 00:47:32,579
make me sound smart

1195
00:47:32,579 --> 00:47:34,619
and at the end it's just some resources

1196
00:47:34,619 --> 00:47:35,880
pretty much same ones from my schum

1197
00:47:35,880 --> 00:47:37,740
presentation they kind of laid the

1198
00:47:37,740 --> 00:47:38,880
foundation from some of the more

1199
00:47:38,880 --> 00:47:41,579
technical firmware stuff that speaks to

1200
00:47:41,579 --> 00:47:44,520
the supply chain so I don't think I have

1201
00:47:44,520 --> 00:47:47,520
a slide after that that was it so thanks

1202
00:47:47,520 --> 00:47:49,859
for coming and we'll take any questions

1203
00:47:49,859 --> 00:47:54,078
do we have time for questions thank you

1204
00:47:54,780 --> 00:47:57,079
foreign

1205
00:47:57,180 --> 00:47:59,460
I can't see it says one minute can we go

1206
00:47:59,460 --> 00:48:02,359
one minute for questions

1207
00:48:05,700 --> 00:48:08,299
yes

1208
00:48:11,460 --> 00:48:13,880
yes

1209
00:48:15,119 --> 00:48:17,599
correct

1210
00:48:24,260 --> 00:48:26,220
so the question is where do you start

1211
00:48:26,220 --> 00:48:28,740
fixing hardware and firmware specific

1212
00:48:28,740 --> 00:48:32,220
issues so uh in my schmoocom

1213
00:48:32,220 --> 00:48:33,960
presentation you might have seen the

1214
00:48:33,960 --> 00:48:36,300
Spider-Man meme where all Spider-Man's

1215
00:48:36,300 --> 00:48:38,579
pointing at each other yeah and each one

1216
00:48:38,579 --> 00:48:41,040
is you know AMD is a Spider-Man and

1217
00:48:41,040 --> 00:48:44,099
Microsoft is Spider-Man uh in in that's

1218
00:48:44,099 --> 00:48:45,839
and that's the challenge where where do

1219
00:48:45,839 --> 00:48:48,000
you get you're gonna have to

1220
00:48:48,000 --> 00:48:50,460
again sometimes open source is going to

1221
00:48:50,460 --> 00:48:53,460
give you an update sometimes Microsoft

1222
00:48:53,460 --> 00:48:56,220
is going to push an update for you so if

1223
00:48:56,220 --> 00:48:58,560
it's a component so now we're stepping

1224
00:48:58,560 --> 00:49:00,480
outside of UEFI like let's say it's some

1225
00:49:00,480 --> 00:49:03,359
other your EC firmware Microsoft might

1226
00:49:03,359 --> 00:49:05,760
work with that OEM to push it out and

1227
00:49:05,760 --> 00:49:07,920
there's multiple different ways to get

1228
00:49:07,920 --> 00:49:09,420
firmware for all of those different

1229
00:49:09,420 --> 00:49:13,079
components which makes it hard if that's

1230
00:49:13,079 --> 00:49:15,780
really bothering you and you can

1231
00:49:15,780 --> 00:49:17,819
standardize on a platform it's what

1232
00:49:17,819 --> 00:49:20,819
gives like Microsoft Surface and Apple

1233
00:49:20,819 --> 00:49:23,220
Mac OS in a real Advantage because they

1234
00:49:23,220 --> 00:49:24,720
control more of the hardware software

1235
00:49:24,720 --> 00:49:27,960
and firmware so like my Surface Pro I

1236
00:49:27,960 --> 00:49:30,540
have a so confession your Linux desktop

1237
00:49:30,540 --> 00:49:32,579
user you have an emergency Windows

1238
00:49:32,579 --> 00:49:36,900
laptop guilty mine is a Surface Pro 3 in

1239
00:49:36,900 --> 00:49:39,119
firmware wise and Supply chain-wise it

1240
00:49:39,119 --> 00:49:41,040
might be the most secure device that I

1241
00:49:41,040 --> 00:49:43,140
own because every time I do a Microsoft

1242
00:49:43,140 --> 00:49:46,260
update a Windows update it applies all

1243
00:49:46,260 --> 00:49:48,420
of all the firmware for me so but when

1244
00:49:48,420 --> 00:49:50,700
we get into the larger ecosystem yeah it

1245
00:49:50,700 --> 00:49:52,859
gets complicated it gets comp that's why

1246
00:49:52,859 --> 00:49:55,680
efforts like lvfs are working to have a

1247
00:49:55,680 --> 00:49:57,300
central place to put all those things so

1248
00:49:57,300 --> 00:50:00,920
we can get updates from a central place

1249
00:50:00,920 --> 00:50:04,579
yes Richard

1250
00:50:18,119 --> 00:50:20,940
yeah the question is uh where where do

1251
00:50:20,940 --> 00:50:22,500
we start with the supply addressing

1252
00:50:22,500 --> 00:50:23,819
supply chain issues do we start with

1253
00:50:23,819 --> 00:50:25,020
Hardware firmware do we start with

1254
00:50:25,020 --> 00:50:27,240
third-party software uh I'd like to

1255
00:50:27,240 --> 00:50:29,099
start at the base layer I like to start

1256
00:50:29,099 --> 00:50:32,460
at the uh Hardware level and the

1257
00:50:32,460 --> 00:50:35,099
firmware level and reach a place and

1258
00:50:35,099 --> 00:50:37,380
there's multiple efforts on this lvfs is

1259
00:50:37,380 --> 00:50:40,140
working on a method uh and there are

1260
00:50:40,140 --> 00:50:41,700
other things in the works that I can't

1261
00:50:41,700 --> 00:50:44,220
talk about yet with the goal being

1262
00:50:44,220 --> 00:50:46,200
something that I talked about at shmukon

1263
00:50:46,200 --> 00:50:48,599
as well is I want to go to a place and

1264
00:50:48,599 --> 00:50:51,240
say I want new laptops I want 20 000 new

1265
00:50:51,240 --> 00:50:53,940
laptops what about this Dell model Oh

1266
00:50:53,940 --> 00:50:56,280
look The s-bomb is pretty clean the

1267
00:50:56,280 --> 00:50:57,720
firmware looks like it's in good shape

1268
00:50:57,720 --> 00:50:59,880
because lvfs already scanned the

1269
00:50:59,880 --> 00:51:02,040
firmware so I want to start in a known

1270
00:51:02,040 --> 00:51:05,099
good state so we are developing ways as

1271
00:51:05,099 --> 00:51:08,460
an industry that before you purchase the

1272
00:51:08,460 --> 00:51:10,740
gear you'll be able to glean some

1273
00:51:10,740 --> 00:51:12,900
information about the supply chain of

1274
00:51:12,900 --> 00:51:14,579
that device and that is definitely where

1275
00:51:14,579 --> 00:51:17,220
I would start and then when we get into

1276
00:51:17,220 --> 00:51:19,079
third-party software all that stuff you

1277
00:51:19,079 --> 00:51:20,640
know then it gets trickier how we

1278
00:51:20,640 --> 00:51:22,859
validate that on each of those but if

1279
00:51:22,859 --> 00:51:24,420
you're not securing that hardware and

1280
00:51:24,420 --> 00:51:26,520
firmware level an attacker that gets on

1281
00:51:26,520 --> 00:51:28,740
that system could could persist and gain

1282
00:51:28,740 --> 00:51:31,220
privileges

1283
00:51:33,000 --> 00:51:35,540
yes

1284
00:51:39,960 --> 00:51:42,359
I've not looked into bootstrap compilers

1285
00:51:42,359 --> 00:51:44,760
it the term sounds familiar yeah we

1286
00:51:44,760 --> 00:51:46,800
didn't talk about the what was in Ken

1287
00:51:46,800 --> 00:51:49,680
Thompson's paper is the it started with

1288
00:51:49,680 --> 00:51:53,460
a writing a program that can reproduce

1289
00:51:53,460 --> 00:51:56,339
itself and that led to what if I put

1290
00:51:56,339 --> 00:51:58,640
something in the compiler I can backdoor

1291
00:51:58,640 --> 00:52:01,500
login.c but then someone could detect

1292
00:52:01,500 --> 00:52:03,660
that so the compiler that compiles the

1293
00:52:03,660 --> 00:52:05,520
compiler will put the back door on the

1294
00:52:05,520 --> 00:52:08,400
compiler so that any program has has

1295
00:52:08,400 --> 00:52:10,740
that back door and bootstrap compile

1296
00:52:10,740 --> 00:52:12,240
sounds familiar but it might have

1297
00:52:12,240 --> 00:52:15,240
something I read in in passing

1298
00:52:15,240 --> 00:52:18,319
we'll talk after

1299
00:52:20,640 --> 00:52:22,800
any other questions we have

1300
00:52:22,800 --> 00:52:24,839
next speakers here are we good I'll be

1301
00:52:24,839 --> 00:52:26,040
I'll be around for a little while Jason

1302
00:52:26,040 --> 00:52:29,240
one last question Jason

1303
00:52:29,660 --> 00:52:33,480
90 milligrams on average

1304
00:52:33,480 --> 00:52:35,119
foreign

1305
00:52:35,119 --> 00:52:38,240
thank you

1306
00:52:39,180 --> 00:52:41,299
thank you

