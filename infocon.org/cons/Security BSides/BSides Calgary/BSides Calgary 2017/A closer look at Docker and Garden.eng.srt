1
00:00:02,560 --> 00:00:07,630
right<font color="#E5E5E5"> hi everyone</font><font color="#CCCCCC"> I hope</font><font color="#E5E5E5"> everyone's</font>

2
00:00:06,220 --> 00:00:10,389
having<font color="#CCCCCC"> a</font><font color="#E5E5E5"> great day so far there's</font><font color="#CCCCCC"> been</font>

3
00:00:07,630 --> 00:00:12,129
lots of good<font color="#E5E5E5"> talks and it's my sort of</font>

4
00:00:10,389 --> 00:00:13,660
official first time in<font color="#E5E5E5"> Calgary I've only</font>

5
00:00:12,129 --> 00:00:14,860
been to Calgary once but it was for like

6
00:00:13,660 --> 00:00:17,140
a day meeting so this time I'm actually

7
00:00:14,860 --> 00:00:19,960
here for<font color="#CCCCCC"> three days</font><font color="#E5E5E5"> hopefully</font><font color="#CCCCCC"> I get</font><font color="#E5E5E5"> to</font>

8
00:00:17,140 --> 00:00:22,300
check<font color="#E5E5E5"> out the city a little bit</font><font color="#CCCCCC"> this</font>

9
00:00:19,960 --> 00:00:24,300
<font color="#E5E5E5">talk is about</font><font color="#CCCCCC"> containers security the</font>

10
00:00:22,300 --> 00:00:26,200
title<font color="#CCCCCC"> du containers fully contain</font>

11
00:00:24,300 --> 00:00:28,480
security<font color="#E5E5E5"> issues try to have fun</font><font color="#CCCCCC"> with</font>

12
00:00:26,200 --> 00:00:30,910
words<font color="#CCCCCC"> there Who</font><font color="#E5E5E5"> am I</font>

13
00:00:28,480 --> 00:00:34,000
Farshad<font color="#CCCCCC"> Abasi</font><font color="#E5E5E5"> based in</font><font color="#CCCCCC"> Vancouver Canada</font>

14
00:00:30,910 --> 00:00:35,920
<font color="#CCCCCC">I'm the co-founder of Mirage</font><font color="#E5E5E5"> security</font>

15
00:00:34,000 --> 00:00:37,570
I'm also<font color="#E5E5E5"> CTO see so of mutual</font>

16
00:00:35,920 --> 00:00:40,809
technologies<font color="#CCCCCC"> it's a small</font><font color="#E5E5E5"> software</font>

17
00:00:37,570 --> 00:00:42,969
startup building a services<font color="#CCCCCC"> platform I'm</font>

18
00:00:40,809 --> 00:00:45,899
also an instructor<font color="#CCCCCC"> at BCIT I guess a</font>

19
00:00:42,969 --> 00:00:47,949
<font color="#E5E5E5">similar to</font><font color="#CCCCCC"> site here</font><font color="#E5E5E5"> I've been teaching</font>

20
00:00:45,899 --> 00:00:51,010
<font color="#CCCCCC">Network and information security</font><font color="#E5E5E5"> there</font>

21
00:00:47,949 --> 00:00:53,409
for 15 years and<font color="#CCCCCC"> a</font><font color="#E5E5E5"> few other courses</font>

22
00:00:51,010 --> 00:00:55,178
<font color="#E5E5E5">that have built security over time I'm</font>

23
00:00:53,409 --> 00:00:57,129
also<font color="#E5E5E5"> news correspondent with a local</font>

24
00:00:55,179 --> 00:00:59,769
radio station<font color="#CCCCCC"> in Victoria see facts and</font>

25
00:00:57,129 --> 00:01:01,510
1070<font color="#E5E5E5"> get to talk about</font><font color="#CCCCCC"> security issues</font>

26
00:00:59,769 --> 00:01:03,159
when they come up<font color="#E5E5E5"> I'm also a board</font>

27
00:01:01,510 --> 00:01:06,039
member besides Vancouver so I organized

28
00:01:03,159 --> 00:01:08,920
<font color="#E5E5E5">this with my other fellow board members</font>

29
00:01:06,040 --> 00:01:09,909
in Vancouver<font color="#E5E5E5"> so some of you should come</font>

30
00:01:08,920 --> 00:01:12,610
check<font color="#CCCCCC"> it</font><font color="#E5E5E5"> out if you get the opportunity</font>

31
00:01:09,909 --> 00:01:14,439
<font color="#E5E5E5">to we are</font><font color="#CCCCCC"> also we have a non-profit</font>

32
00:01:12,610 --> 00:01:16,600
<font color="#CCCCCC">society called Mars</font><font color="#E5E5E5"> mainland</font><font color="#CCCCCC"> Advanced</font>

33
00:01:14,439 --> 00:01:17,949
<font color="#CCCCCC">Research Society where we you</font><font color="#E5E5E5"> know</font>

34
00:01:16,600 --> 00:01:19,869
curate different community events<font color="#CCCCCC"> from</font>

35
00:01:17,950 --> 00:01:22,149
talks to social social<font color="#E5E5E5"> gatherings and</font>

36
00:01:19,869 --> 00:01:23,649
things<font color="#E5E5E5"> like that and I guess fun fact</font>

37
00:01:22,149 --> 00:01:24,969
about<font color="#E5E5E5"> me I'm an avid music fan I</font>

38
00:01:23,649 --> 00:01:27,390
probably have one<font color="#E5E5E5"> of the largest record</font>

39
00:01:24,969 --> 00:01:30,070
collections of most people that<font color="#E5E5E5"> I know</font>

40
00:01:27,390 --> 00:01:33,759
<font color="#CCCCCC">spends</font><font color="#E5E5E5"> all kinds of genres</font><font color="#CCCCCC"> of music and</font>

41
00:01:30,070 --> 00:01:35,889
that's<font color="#E5E5E5"> my hobby</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> enough about me this</font>

42
00:01:33,759 --> 00:01:37,869
talk is about container security but

43
00:01:35,890 --> 00:01:39,310
we're<font color="#E5E5E5"> going to start by looking at you</font>

44
00:01:37,869 --> 00:01:41,409
know cloud computing because containers

45
00:01:39,310 --> 00:01:43,270
are a form of cloud computer or

46
00:01:41,409 --> 00:01:44,890
<font color="#E5E5E5">virtualization so we're going to look at</font>

47
00:01:43,270 --> 00:01:46,210
that<font color="#E5E5E5"> it's just</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make</font><font color="#CCCCCC"> sure that we're</font>

48
00:01:44,890 --> 00:01:48,250
all level<font color="#CCCCCC"> sets and we understand the</font>

49
00:01:46,210 --> 00:01:50,530
different<font color="#CCCCCC"> types of cloud</font><font color="#E5E5E5"> computing and</font>

50
00:01:48,250 --> 00:01:52,450
<font color="#CCCCCC">where containers fit and then we're</font>

51
00:01:50,530 --> 00:01:54,399
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to really clarify</font><font color="#E5E5E5"> what containers</font>

52
00:01:52,450 --> 00:01:55,899
are because I noticed<font color="#E5E5E5"> that in this</font>

53
00:01:54,399 --> 00:01:57,609
<font color="#E5E5E5">journey of me with containers that's</font>

54
00:01:55,899 --> 00:01:58,990
<font color="#CCCCCC">it's been about</font><font color="#E5E5E5"> two years now</font><font color="#CCCCCC"> now</font>

55
00:01:57,609 --> 00:02:01,149
there's a lot of confusion<font color="#CCCCCC"> people call</font>

56
00:01:58,990 --> 00:02:02,229
kubernetes containers that there's a lot

57
00:02:01,149 --> 00:02:03,130
<font color="#E5E5E5">of confusion</font><font color="#CCCCCC"> on what's the container</font>

58
00:02:02,229 --> 00:02:04,179
what's the scheduler what's

59
00:02:03,130 --> 00:02:05,589
orchestration what are all these

60
00:02:04,179 --> 00:02:07,030
different<font color="#CCCCCC"> things so I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to try</font><font color="#E5E5E5"> to</font>

61
00:02:05,590 --> 00:02:10,509
<font color="#E5E5E5">clarify that so then you have a better</font>

62
00:02:07,030 --> 00:02:12,340
idea<font color="#E5E5E5"> of where everything fits and then</font>

63
00:02:10,508 --> 00:02:14,739
supporting cast which is all the<font color="#E5E5E5"> tools</font>

64
00:02:12,340 --> 00:02:17,050
and and and and various things<font color="#E5E5E5"> that</font>

65
00:02:14,740 --> 00:02:18,040
support container deployments<font color="#CCCCCC"> and then</font>

66
00:02:17,050 --> 00:02:19,600
we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> look at the difference</font>

67
00:02:18,040 --> 00:02:21,130
between<font color="#E5E5E5"> containerization and</font>

68
00:02:19,600 --> 00:02:23,859
virtualization<font color="#E5E5E5"> there's a fundamental</font>

69
00:02:21,130 --> 00:02:25,269
<font color="#E5E5E5">difference there and the two example</font>

70
00:02:23,860 --> 00:02:27,670
container engines<font color="#E5E5E5"> that I used for</font><font color="#CCCCCC"> this</font>

71
00:02:25,270 --> 00:02:29,730
presentation are docker and garden

72
00:02:27,670 --> 00:02:31,989
Dockers probably the most popular<font color="#E5E5E5"> one</font>

73
00:02:29,730 --> 00:02:34,660
<font color="#E5E5E5">garden was one that I ended up using I</font>

74
00:02:31,990 --> 00:02:36,250
was a principal architect<font color="#E5E5E5"> for HSBC</font><font color="#CCCCCC"> I</font>

75
00:02:34,660 --> 00:02:37,960
worked there<font color="#CCCCCC"> for quite</font><font color="#E5E5E5"> a while and</font><font color="#CCCCCC"> we</font>

76
00:02:36,250 --> 00:02:39,970
<font color="#CCCCCC">had implemented cloud</font><font color="#E5E5E5"> foundries garden</font>

77
00:02:37,960 --> 00:02:42,310
so I'm familiar with<font color="#E5E5E5"> that so those are</font>

78
00:02:39,970 --> 00:02:44,410
the two commercial technologies that<font color="#E5E5E5"> I</font>

79
00:02:42,310 --> 00:02:46,120
picked<font color="#E5E5E5"> for this presentation to kind of</font>

80
00:02:44,410 --> 00:02:47,740
compare them a bit<font color="#CCCCCC"> fairly similar</font><font color="#E5E5E5"> and</font>

81
00:02:46,120 --> 00:02:50,590
<font color="#CCCCCC">then we're gonna look at key security</font>

82
00:02:47,740 --> 00:02:52,420
<font color="#E5E5E5">concerns</font><font color="#CCCCCC"> with those container</font>

83
00:02:50,590 --> 00:02:54,310
<font color="#E5E5E5">technologies in general</font><font color="#CCCCCC"> and then of</font>

84
00:02:52,420 --> 00:02:56,500
<font color="#CCCCCC">course you know quickly</font><font color="#E5E5E5"> look at some</font>

85
00:02:54,310 --> 00:02:57,520
<font color="#E5E5E5">known vulnerabilities and then everybody</font>

86
00:02:56,500 --> 00:02:59,110
wants<font color="#CCCCCC"> to</font><font color="#E5E5E5"> know well you've told us all</font>

87
00:02:57,520 --> 00:03:00,400
<font color="#CCCCCC">about</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> security</font><font color="#E5E5E5"> concerns how do we do</font>

88
00:02:59,110 --> 00:03:02,500
something<font color="#CCCCCC"> about</font><font color="#E5E5E5"> it so</font><font color="#CCCCCC"> that's how we wrap</font>

89
00:03:00,400 --> 00:03:04,090
<font color="#CCCCCC">it up we talk about the what is</font>

90
00:03:02,500 --> 00:03:06,490
considered safe<font color="#CCCCCC"> consent container</font>

91
00:03:04,090 --> 00:03:09,100
practice you do have to keep<font color="#E5E5E5"> in mind</font>

92
00:03:06,490 --> 00:03:11,020
<font color="#E5E5E5">that</font><font color="#CCCCCC"> this technology</font><font color="#E5E5E5"> still fairly new I</font>

93
00:03:09,100 --> 00:03:12,250
mean<font color="#CCCCCC"> its containers in that form they've</font>

94
00:03:11,020 --> 00:03:14,260
been around for a long<font color="#CCCCCC"> time but</font><font color="#E5E5E5"> in the</font>

95
00:03:12,250 --> 00:03:15,640
modern<font color="#E5E5E5"> form not so long I've done this</font>

96
00:03:14,260 --> 00:03:16,989
<font color="#CCCCCC">presentation this</font><font color="#E5E5E5"> presentation started</font>

97
00:03:15,640 --> 00:03:19,269
about two years<font color="#CCCCCC"> ago</font><font color="#E5E5E5"> as my journey with</font>

98
00:03:16,990 --> 00:03:21,490
containers started and has taken<font color="#E5E5E5"> its</font>

99
00:03:19,270 --> 00:03:22,930
<font color="#CCCCCC">it's evolved quite a bit since the</font>

100
00:03:21,490 --> 00:03:24,070
<font color="#CCCCCC">thirty days there's a lot that's changed</font>

101
00:03:22,930 --> 00:03:27,130
in terms<font color="#E5E5E5"> of security</font><font color="#CCCCCC"> it's gotten better</font>

102
00:03:24,070 --> 00:03:29,709
<font color="#E5E5E5">which is good and and hopefully expect</font>

103
00:03:27,130 --> 00:03:31,930
it<font color="#E5E5E5"> as we really jump into the world</font><font color="#CCCCCC"> of</font>

104
00:03:29,710 --> 00:03:35,200
containers<font color="#E5E5E5"> so we'll talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> that a</font>

105
00:03:31,930 --> 00:03:36,940
little bit<font color="#CCCCCC"> as well so here you can see a</font>

106
00:03:35,200 --> 00:03:38,980
picture<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the Vancouver's Lion Gate</font>

107
00:03:36,940 --> 00:03:40,630
Bridge<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> COO is always cloudy so</font>

108
00:03:38,980 --> 00:03:42,579
computing in the<font color="#E5E5E5"> cloud</font><font color="#CCCCCC"> I figured that</font>

109
00:03:40,630 --> 00:03:43,600
was a very fitting picture to<font color="#E5E5E5"> put that</font>

110
00:03:42,580 --> 00:03:44,830
there<font color="#CCCCCC"> while we were talking about</font><font color="#E5E5E5"> the</font>

111
00:03:43,600 --> 00:03:46,299
cloud<font color="#E5E5E5"> because it's always cloudy and</font>

112
00:03:44,830 --> 00:03:48,790
raining<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I think when I left it was</font>

113
00:03:46,300 --> 00:03:50,970
<font color="#E5E5E5">there was</font><font color="#CCCCCC"> a massive</font><font color="#E5E5E5"> downpour as well so</font>

114
00:03:48,790 --> 00:03:54,609
<font color="#E5E5E5">cloud computing fits Vancouver very well</font>

115
00:03:50,970 --> 00:03:56,230
<font color="#CCCCCC">the definition from NIST is cloud</font>

116
00:03:54,610 --> 00:03:58,900
computing<font color="#CCCCCC"> is a model</font><font color="#E5E5E5"> for enabling</font>

117
00:03:56,230 --> 00:04:01,380
ubiquitous convenient on-demand network

118
00:03:58,900 --> 00:04:04,450
access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> a shared pool of</font><font color="#E5E5E5"> configurable</font>

119
00:04:01,380 --> 00:04:07,120
<font color="#E5E5E5">computing resources eg network servers</font>

120
00:04:04,450 --> 00:04:09,640
storage applications and services that

121
00:04:07,120 --> 00:04:11,020
<font color="#CCCCCC">can be rapidly provisioned</font><font color="#E5E5E5"> and released</font>

122
00:04:09,640 --> 00:04:12,880
with minimal management effort or

123
00:04:11,020 --> 00:04:14,080
service provider interactions<font color="#E5E5E5"> a lot of</font>

124
00:04:12,880 --> 00:04:16,029
words right<font color="#CCCCCC"> but I wanted</font><font color="#E5E5E5"> to put the</font>

125
00:04:14,080 --> 00:04:16,510
<font color="#E5E5E5">official this definition of cloud</font>

126
00:04:16,029 --> 00:04:17,769
computing

127
00:04:16,510 --> 00:04:20,289
while<font color="#E5E5E5"> we're start talking about this and</font>

128
00:04:17,769 --> 00:04:21,820
<font color="#CCCCCC">level-set our understanding and there</font>

129
00:04:20,290 --> 00:04:24,669
are different<font color="#CCCCCC"> models and the different</font>

130
00:04:21,820 --> 00:04:26,710
models of cloud computing<font color="#E5E5E5"> the they all</font>

131
00:04:24,669 --> 00:04:28,260
require workload<font color="#E5E5E5"> isolation so how you do</font>

132
00:04:26,710 --> 00:04:29,520
<font color="#E5E5E5">that workload isolation determine</font>

133
00:04:28,260 --> 00:04:31,110
the model of<font color="#E5E5E5"> cloud computing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you go</font>

134
00:04:29,520 --> 00:04:33,270
with<font color="#E5E5E5"> so you can do physical separation</font>

135
00:04:31,110 --> 00:04:35,100
you can<font color="#E5E5E5"> have bare metal cloud where you</font>

136
00:04:33,270 --> 00:04:36,510
know one machine<font color="#CCCCCC"> you know you you can</font>

137
00:04:35,100 --> 00:04:39,180
have multiple<font color="#E5E5E5"> physical machines than</font>

138
00:04:36,510 --> 00:04:40,770
you're allocating workloads but<font color="#E5E5E5"> your</font>

139
00:04:39,180 --> 00:04:42,420
isolation work<font color="#E5E5E5"> alone isolation is the</font>

140
00:04:40,770 --> 00:04:44,370
<font color="#E5E5E5">physical machine so there's only one one</font>

141
00:04:42,420 --> 00:04:45,780
workload per machine<font color="#CCCCCC"> the</font><font color="#E5E5E5"> only advantage</font>

142
00:04:44,370 --> 00:04:48,360
<font color="#E5E5E5">that gives you</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> a bit of a dynamic</font>

143
00:04:45,780 --> 00:04:49,710
control over that but the real most of

144
00:04:48,360 --> 00:04:51,270
us are familiar with<font color="#E5E5E5"> the virtualization</font>

145
00:04:49,710 --> 00:04:52,950
concept also<font color="#E5E5E5"> known as hardware</font>

146
00:04:51,270 --> 00:04:55,289
virtualization and<font color="#E5E5E5"> that's your typical</font><font color="#CCCCCC"> I</font>

147
00:04:52,950 --> 00:04:57,479
as you<font color="#E5E5E5"> know you'll</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> VMware</font><font color="#CCCCCC"> and all</font>

148
00:04:55,290 --> 00:04:59,940
that kind of<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> and so that</font>

149
00:04:57,480 --> 00:05:01,130
virtualization<font color="#E5E5E5"> is where each of those</font>

150
00:04:59,940 --> 00:05:02,940
virtual<font color="#E5E5E5"> machines they have</font><font color="#CCCCCC"> their own</font>

151
00:05:01,130 --> 00:05:04,170
<font color="#E5E5E5">kernel right it's not a shared</font>

152
00:05:02,940 --> 00:05:06,030
environment<font color="#CCCCCC"> that sort of thing in that</font>

153
00:05:04,170 --> 00:05:07,950
<font color="#E5E5E5">sense and that's typically used to</font>

154
00:05:06,030 --> 00:05:09,780
provide<font color="#E5E5E5"> I as our infrastructure as a</font>

155
00:05:07,950 --> 00:05:11,490
service<font color="#E5E5E5"> and the vulnerabilities</font><font color="#CCCCCC"> they're</font>

156
00:05:09,780 --> 00:05:13,590
<font color="#E5E5E5">they're related to CPU or hypervisor</font>

157
00:05:11,490 --> 00:05:15,660
<font color="#E5E5E5">that</font><font color="#CCCCCC"> there can be impact right because</font>

158
00:05:13,590 --> 00:05:17,969
at the<font color="#E5E5E5"> bottom line is that hypervisor</font>

159
00:05:15,660 --> 00:05:20,310
the host OS<font color="#E5E5E5"> is shared so that that's</font>

160
00:05:17,970 --> 00:05:22,140
where the attacks could take place<font color="#E5E5E5"> then</font>

161
00:05:20,310 --> 00:05:24,540
you have<font color="#E5E5E5"> containerization so as you go</font>

162
00:05:22,140 --> 00:05:26,039
up<font color="#E5E5E5"> the</font><font color="#CCCCCC"> stack also known as OS level</font>

163
00:05:24,540 --> 00:05:29,490
virtualization<font color="#E5E5E5"> and that's where your</font>

164
00:05:26,040 --> 00:05:31,290
workload isolation is<font color="#CCCCCC"> your the operating</font>

165
00:05:29,490 --> 00:05:33,120
system<font color="#E5E5E5"> and that's used to deliver</font>

166
00:05:31,290 --> 00:05:35,010
container as a service<font color="#E5E5E5"> caz which is a</font>

167
00:05:33,120 --> 00:05:36,720
new term<font color="#E5E5E5"> ish</font><font color="#CCCCCC"> newish term that's coming</font>

168
00:05:35,010 --> 00:05:38,070
<font color="#E5E5E5">up</font><font color="#CCCCCC"> or pass</font><font color="#E5E5E5"> some of you may be familiar</font>

169
00:05:36,720 --> 00:05:39,630
with that that term has been<font color="#E5E5E5"> around for</font>

170
00:05:38,070 --> 00:05:42,030
a number<font color="#CCCCCC"> of years</font><font color="#E5E5E5"> platform as a service</font>

171
00:05:39,630 --> 00:05:43,409
<font color="#CCCCCC">we'll talk about this</font><font color="#E5E5E5"> a little bit and</font>

172
00:05:42,030 --> 00:05:45,119
then at the top<font color="#E5E5E5"> of the stack</font><font color="#CCCCCC"> you have</font>

173
00:05:43,410 --> 00:05:46,920
<font color="#E5E5E5">the multi</font><font color="#CCCCCC"> user accounts which is you</font>

174
00:05:45,120 --> 00:05:48,300
know<font color="#CCCCCC"> what's as</font><font color="#E5E5E5"> so they're the workload</font>

175
00:05:46,920 --> 00:05:49,320
isolation there is an<font color="#CCCCCC"> actual user</font>

176
00:05:48,300 --> 00:05:51,780
accounts<font color="#E5E5E5"> right so there's not much</font>

177
00:05:49,320 --> 00:05:53,490
separation<font color="#E5E5E5"> and aside from that so here</font>

178
00:05:51,780 --> 00:05:55,320
you can<font color="#E5E5E5"> see from top to bottom right you</font>

179
00:05:53,490 --> 00:05:56,760
got the bare<font color="#E5E5E5"> metal and then the people</font>

180
00:05:55,320 --> 00:05:58,409
<font color="#CCCCCC">that are usually involved there but</font>

181
00:05:56,760 --> 00:05:59,820
<font color="#E5E5E5">Brett Merrell or I as their</font>

182
00:05:58,410 --> 00:06:02,370
infrastructure architects<font color="#E5E5E5"> or admins</font>

183
00:05:59,820 --> 00:06:03,750
right so the the<font color="#E5E5E5"> the lower you go the</font>

184
00:06:02,370 --> 00:06:05,550
<font color="#E5E5E5">more control you have right this is the</font>

185
00:06:03,750 --> 00:06:07,230
particularly bare metal you have<font color="#CCCCCC"> the</font>

186
00:06:05,550 --> 00:06:09,150
whole<font color="#CCCCCC"> hardware you</font><font color="#E5E5E5"> can install and do</font>

187
00:06:07,230 --> 00:06:10,350
<font color="#E5E5E5">things as you wish and the higher you go</font>

188
00:06:09,150 --> 00:06:12,330
the less control<font color="#E5E5E5"> you'll have right so</font>

189
00:06:10,350 --> 00:06:13,290
when you get SAS level you<font color="#E5E5E5"> don't really</font>

190
00:06:12,330 --> 00:06:14,760
<font color="#E5E5E5">have much control you have</font><font color="#CCCCCC"> a user</font>

191
00:06:13,290 --> 00:06:16,260
account<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the system but someone else</font>

192
00:06:14,760 --> 00:06:17,430
is<font color="#E5E5E5"> running the database and they're</font>

193
00:06:16,260 --> 00:06:20,159
<font color="#E5E5E5">running all the other stuff underneath</font>

194
00:06:17,430 --> 00:06:21,630
<font color="#E5E5E5">it so it</font><font color="#CCCCCC"> passes somewhere in between</font><font color="#E5E5E5"> so</font>

195
00:06:20,160 --> 00:06:23,100
people that<font color="#E5E5E5"> are typically involved with</font>

196
00:06:21,630 --> 00:06:24,390
has<font color="#E5E5E5"> are the application architects or</font>

197
00:06:23,100 --> 00:06:26,010
developers that's where the focus<font color="#CCCCCC"> is</font>

198
00:06:24,390 --> 00:06:27,870
because<font color="#E5E5E5"> everything the the other</font>

199
00:06:26,010 --> 00:06:29,520
components are provided<font color="#CCCCCC"> to them</font><font color="#E5E5E5"> right</font>

200
00:06:27,870 --> 00:06:31,380
like the database logging service and

201
00:06:29,520 --> 00:06:33,180
all<font color="#E5E5E5"> the other services</font><font color="#CCCCCC"> are provided by</font>

202
00:06:31,380 --> 00:06:34,860
<font color="#E5E5E5">the</font><font color="#CCCCCC"> platform so really you're just</font>

203
00:06:33,180 --> 00:06:36,680
<font color="#CCCCCC">building an application so that typical</font>

204
00:06:34,860 --> 00:06:39,000
user of it<font color="#CCCCCC"> passes an application</font>

205
00:06:36,680 --> 00:06:40,920
<font color="#CCCCCC">architecture or developer and</font><font color="#E5E5E5"> then when</font>

206
00:06:39,000 --> 00:06:42,100
you get to<font color="#E5E5E5"> SAS it's just</font><font color="#CCCCCC"> end-users</font>

207
00:06:40,920 --> 00:06:44,860
<font color="#E5E5E5">because there's not much to do by</font>

208
00:06:42,100 --> 00:06:45,820
but configure this application<font color="#E5E5E5"> given the</font>

209
00:06:44,860 --> 00:06:47,440
<font color="#CCCCCC">parameters you're</font><font color="#E5E5E5"> not writing the</font>

210
00:06:45,820 --> 00:06:49,420
application<font color="#E5E5E5"> you're not doing anything</font>

211
00:06:47,440 --> 00:06:54,400
<font color="#E5E5E5">with the platform</font><font color="#CCCCCC"> it's all provided for</font>

212
00:06:49,420 --> 00:06:55,360
you so what<font color="#E5E5E5"> are containers and you know</font>

213
00:06:54,400 --> 00:06:57,070
why are<font color="#E5E5E5"> we talking about them so</font>

214
00:06:55,360 --> 00:06:59,010
<font color="#E5E5E5">containers as I mentioned also known as</font>

215
00:06:57,070 --> 00:07:01,750
operating<font color="#E5E5E5"> system-level virtualization</font>

216
00:06:59,010 --> 00:07:03,969
<font color="#CCCCCC">they provide multiple isolated user</font>

217
00:07:01,750 --> 00:07:05,680
space instances that share<font color="#E5E5E5"> a given</font>

218
00:07:03,970 --> 00:07:08,530
kernel right<font color="#E5E5E5"> so we're gonna look at what</font>

219
00:07:05,680 --> 00:07:10,630
<font color="#E5E5E5">these user spaces and namespaces are in</font>

220
00:07:08,530 --> 00:07:13,690
a second but each instance is

221
00:07:10,630 --> 00:07:15,280
essentially a<font color="#E5E5E5"> container and it's also</font>

222
00:07:13,690 --> 00:07:17,410
<font color="#CCCCCC">also known as partitioning or</font><font color="#E5E5E5"> virtual</font>

223
00:07:15,280 --> 00:07:19,989
engines or jails<font color="#E5E5E5"> you know for example</font><font color="#CCCCCC"> in</font>

224
00:07:17,410 --> 00:07:21,820
<font color="#CCCCCC">FreeBSD we had</font><font color="#E5E5E5"> FreeBSD jails or the</font><font color="#CCCCCC"> true</font>

225
00:07:19,990 --> 00:07:22,960
<font color="#CCCCCC">root Jail has been around for a long</font>

226
00:07:21,820 --> 00:07:25,150
<font color="#CCCCCC">time how many people have heard</font><font color="#E5E5E5"> of</font>

227
00:07:22,960 --> 00:07:26,469
chroot or have<font color="#E5E5E5"> used it in the past okay</font>

228
00:07:25,150 --> 00:07:28,570
<font color="#CCCCCC">a</font><font color="#E5E5E5"> few people right that's that's pretty</font>

229
00:07:26,470 --> 00:07:31,480
<font color="#E5E5E5">good I mean I've used</font><font color="#CCCCCC"> Trude for at least</font>

230
00:07:28,570 --> 00:07:33,240
<font color="#E5E5E5">since</font><font color="#CCCCCC"> the late 90s you know with Linux</font>

231
00:07:31,480 --> 00:07:35,860
we used to when we hardened<font color="#E5E5E5"> our</font>

232
00:07:33,240 --> 00:07:38,320
<font color="#CCCCCC">applications you know you root them and</font>

233
00:07:35,860 --> 00:07:40,390
put<font color="#E5E5E5"> them in their own</font><font color="#CCCCCC"> Jail but it didn't</font>

234
00:07:38,320 --> 00:07:41,890
it isolated<font color="#E5E5E5"> it but mostly from</font><font color="#CCCCCC"> a</font>

235
00:07:40,390 --> 00:07:43,450
perspective of file system<font color="#E5E5E5"> I didn't</font>

236
00:07:41,890 --> 00:07:44,650
really isolate the process<font color="#E5E5E5"> space or many</font>

237
00:07:43,450 --> 00:07:47,229
of the<font color="#CCCCCC"> other spaces</font><font color="#E5E5E5"> and that's where</font>

238
00:07:44,650 --> 00:07:49,450
modern containers have really built<font color="#E5E5E5"> on</font>

239
00:07:47,230 --> 00:07:51,670
that concept<font color="#E5E5E5"> and and added a lot more</font>

240
00:07:49,450 --> 00:07:53,560
isolation<font color="#CCCCCC"> of course the Linux kernel</font><font color="#E5E5E5"> is</font>

241
00:07:51,670 --> 00:07:54,970
evolved and provides the facilities for

242
00:07:53,560 --> 00:07:57,250
you to do that<font color="#E5E5E5"> isolation and a few other</font>

243
00:07:54,970 --> 00:07:59,070
<font color="#CCCCCC">things as well</font><font color="#E5E5E5"> along</font><font color="#CCCCCC"> with that</font><font color="#E5E5E5"> would the</font>

244
00:07:57,250 --> 00:08:02,050
evolution of<font color="#E5E5E5"> the container technologies</font>

245
00:07:59,070 --> 00:08:03,219
so typically encapsulated applications

246
00:08:02,050 --> 00:08:04,780
and act as<font color="#E5E5E5"> an interface to the</font>

247
00:08:03,220 --> 00:08:06,640
surrounding system for that<font color="#CCCCCC"> application</font>

248
00:08:04,780 --> 00:08:08,859
<font color="#E5E5E5">and</font><font color="#CCCCCC"> that kernel provides</font><font color="#E5E5E5"> you a resource</font>

249
00:08:06,640 --> 00:08:10,000
<font color="#E5E5E5">management so it limits the</font><font color="#CCCCCC"> impact of</font>

250
00:08:08,860 --> 00:08:12,100
<font color="#E5E5E5">the container activities on other</font>

251
00:08:10,000 --> 00:08:12,760
containers and that's what provides that

252
00:08:12,100 --> 00:08:15,010
facility

253
00:08:12,760 --> 00:08:18,610
so here's<font color="#CCCCCC"> trooped it's been around since</font>

254
00:08:15,010 --> 00:08:19,900
version 7<font color="#CCCCCC"> unix</font><font color="#E5E5E5"> and from 1979</font><font color="#CCCCCC"> so it's you</font>

255
00:08:18,610 --> 00:08:21,520
know<font color="#CCCCCC"> the concept of containers there's</font>

256
00:08:19,900 --> 00:08:23,229
nothing new<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> I find that a lot of</font>

257
00:08:21,520 --> 00:08:24,700
<font color="#E5E5E5">these older concepts are coming back</font><font color="#CCCCCC"> in</font>

258
00:08:23,230 --> 00:08:26,260
more<font color="#E5E5E5"> modern ways right everyone is</font>

259
00:08:24,700 --> 00:08:28,030
<font color="#E5E5E5">you've</font><font color="#CCCCCC"> probably in here use a slack</font><font color="#E5E5E5"> I</font>

260
00:08:26,260 --> 00:08:30,219
mean a slack is a glorified<font color="#CCCCCC"> IRC in my</font>

261
00:08:28,030 --> 00:08:31,929
opinion and you<font color="#CCCCCC"> know containers are</font>

262
00:08:30,220 --> 00:08:33,099
glorified<font color="#E5E5E5"> katroo essentially I mean</font><font color="#CCCCCC"> all</font>

263
00:08:31,930 --> 00:08:34,870
these<font color="#E5E5E5"> things</font><font color="#CCCCCC"> they're going</font><font color="#E5E5E5"> back and</font>

264
00:08:33,099 --> 00:08:36,280
<font color="#CCCCCC">saying</font><font color="#E5E5E5"> hey what technology is left and</font>

265
00:08:34,870 --> 00:08:37,630
how can<font color="#E5E5E5"> we modernize them and then</font>

266
00:08:36,280 --> 00:08:38,770
they're picking them up<font color="#E5E5E5"> and modernizing</font>

267
00:08:37,630 --> 00:08:40,240
them and doing<font color="#CCCCCC"> a pretty good job with</font>

268
00:08:38,770 --> 00:08:42,189
<font color="#E5E5E5">most of them right</font><font color="#CCCCCC"> and slack is really</font>

269
00:08:40,240 --> 00:08:43,110
good docker<font color="#E5E5E5"> these things are really good</font>

270
00:08:42,190 --> 00:08:46,870
way better than their previous

271
00:08:43,110 --> 00:08:48,580
<font color="#E5E5E5">incarnations so it isit</font><font color="#CCCCCC"> route what I did</font>

272
00:08:46,870 --> 00:08:50,770
it<font color="#CCCCCC"> only isolated</font><font color="#E5E5E5"> the file system have</font>

273
00:08:48,580 --> 00:08:52,660
you for<font color="#CCCCCC"> processing his children but</font>

274
00:08:50,770 --> 00:08:55,480
<font color="#E5E5E5">didn't isolate other resources so for</font>

275
00:08:52,660 --> 00:08:57,219
example your networking processes<font color="#CCCCCC"> it's</font>

276
00:08:55,480 --> 00:08:59,530
cetera<font color="#E5E5E5"> weren't</font><font color="#CCCCCC"> isolated you could see</font>

277
00:08:57,220 --> 00:09:00,670
the<font color="#CCCCCC"> product</font><font color="#E5E5E5"> process if you did a PS you</font>

278
00:08:59,530 --> 00:09:02,709
could see the<font color="#E5E5E5"> processes for everybody</font>

279
00:09:00,670 --> 00:09:04,839
else that<font color="#CCCCCC"> was</font><font color="#E5E5E5"> running on there so it</font>

280
00:09:02,710 --> 00:09:05,830
only helped if someone was within<font color="#E5E5E5"> that</font>

281
00:09:04,840 --> 00:09:07,300
true to the environment and<font color="#E5E5E5"> they</font>

282
00:09:05,830 --> 00:09:08,980
couldn't see<font color="#E5E5E5"> the</font><font color="#CCCCCC"> route of the</font><font color="#E5E5E5"> file</font>

283
00:09:07,300 --> 00:09:10,329
<font color="#E5E5E5">system right the route that they saw was</font>

284
00:09:08,980 --> 00:09:12,250
<font color="#E5E5E5">the route that</font><font color="#CCCCCC"> you wanted</font><font color="#E5E5E5"> them</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> see</font>

285
00:09:10,330 --> 00:09:14,080
and so they couldn't pivot around<font color="#E5E5E5"> and do</font>

286
00:09:12,250 --> 00:09:16,270
that through the file system but the

287
00:09:14,080 --> 00:09:18,580
other resources<font color="#E5E5E5"> were not separated</font><font color="#CCCCCC"> and</font>

288
00:09:16,270 --> 00:09:21,579
then the road<font color="#CCCCCC"> root account</font><font color="#E5E5E5"> also had full</font>

289
00:09:18,580 --> 00:09:23,410
view<font color="#CCCCCC"> and access so</font><font color="#E5E5E5"> moderate containers</font>

290
00:09:21,580 --> 00:09:26,950
they use namespaces and<font color="#CCCCCC"> this is the key</font>

291
00:09:23,410 --> 00:09:29,530
<font color="#CCCCCC">and</font><font color="#E5E5E5"> and how well they use it it depends</font>

292
00:09:26,950 --> 00:09:31,600
on the<font color="#E5E5E5"> implementation and and they use</font>

293
00:09:29,530 --> 00:09:33,370
that<font color="#CCCCCC"> to separate the resources so the</font>

294
00:09:31,600 --> 00:09:35,290
<font color="#E5E5E5">that you the namespaces</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font>

295
00:09:33,370 --> 00:09:36,970
typically supported<font color="#CCCCCC"> is the process or</font>

296
00:09:35,290 --> 00:09:39,490
<font color="#CCCCCC">the</font><font color="#E5E5E5"> pit namespace which is for process</font>

297
00:09:36,970 --> 00:09:41,860
IDs right<font color="#E5E5E5"> they most container modern</font>

298
00:09:39,490 --> 00:09:44,260
container technologies<font color="#CCCCCC"> support isolation</font>

299
00:09:41,860 --> 00:09:46,540
<font color="#CCCCCC">they're the mounts namespace the network</font>

300
00:09:44,260 --> 00:09:50,350
namespace the<font color="#E5E5E5"> UTS which handles hostname</font>

301
00:09:46,540 --> 00:09:52,420
and<font color="#CCCCCC"> an</font><font color="#E5E5E5"> S domain</font><font color="#CCCCCC"> name and</font><font color="#E5E5E5"> IP</font><font color="#CCCCCC"> c namespace</font>

302
00:09:50,350 --> 00:09:53,710
and<font color="#E5E5E5"> the user</font><font color="#CCCCCC"> namespaces</font><font color="#E5E5E5"> the user</font>

303
00:09:52,420 --> 00:09:56,469
<font color="#E5E5E5">namespaces are arguably the</font><font color="#CCCCCC"> most</font>

304
00:09:53,710 --> 00:09:57,850
important one and it's<font color="#E5E5E5"> not always</font>

305
00:09:56,470 --> 00:09:59,740
implemented I'm going to talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that</font>

306
00:09:57,850 --> 00:10:01,960
in a minute<font color="#E5E5E5"> so just kind of</font><font color="#CCCCCC"> keep that</font><font color="#E5E5E5"> in</font>

307
00:09:59,740 --> 00:10:03,280
<font color="#E5E5E5">mind but that's one of the</font><font color="#CCCCCC"> docker for</font>

308
00:10:01,960 --> 00:10:05,140
example implements it but it's only

309
00:10:03,280 --> 00:10:06,910
optional it's not<font color="#E5E5E5"> enabled by default so</font>

310
00:10:05,140 --> 00:10:10,150
in my opinion<font color="#CCCCCC"> it should</font><font color="#E5E5E5"> be enabled</font><font color="#CCCCCC"> by</font>

311
00:10:06,910 --> 00:10:13,150
<font color="#E5E5E5">default because that's a big contributor</font>

312
00:10:10,150 --> 00:10:14,530
to security<font color="#CCCCCC"> there are other things</font><font color="#E5E5E5"> that</font>

313
00:10:13,150 --> 00:10:16,630
modern containers use as well things

314
00:10:14,530 --> 00:10:19,510
<font color="#E5E5E5">like C groups</font><font color="#CCCCCC"> to meter and limit</font>

315
00:10:16,630 --> 00:10:22,120
<font color="#E5E5E5">resources to provide some access control</font>

316
00:10:19,510 --> 00:10:29,830
to the<font color="#CCCCCC"> two devices</font><font color="#E5E5E5"> and perform</font><font color="#CCCCCC"> a crowd</font>

317
00:10:22,120 --> 00:10:31,330
control<font color="#E5E5E5"> there's more on namespaces so</font>

318
00:10:29,830 --> 00:10:33,330
the user<font color="#CCCCCC"> namespace</font><font color="#E5E5E5"> is the most important</font>

319
00:10:31,330 --> 00:10:35,740
one that<font color="#E5E5E5"> I wanted to talk</font><font color="#CCCCCC"> about first</font>

320
00:10:33,330 --> 00:10:38,290
<font color="#E5E5E5">their namespaces for user IDs and</font><font color="#CCCCCC"> group</font>

321
00:10:35,740 --> 00:10:39,670
IDs so<font color="#CCCCCC"> a given</font><font color="#E5E5E5"> user ID inside the</font>

322
00:10:38,290 --> 00:10:41,709
container will map to<font color="#CCCCCC"> a different user</font>

323
00:10:39,670 --> 00:10:42,910
<font color="#E5E5E5">ID on the host if they</font><font color="#CCCCCC"> user</font><font color="#E5E5E5"> name spaces</font>

324
00:10:41,710 --> 00:10:45,430
are enabled<font color="#E5E5E5"> right but if you haven't</font>

325
00:10:42,910 --> 00:10:46,870
<font color="#CCCCCC">enabled that it'll be the same so if you</font>

326
00:10:45,430 --> 00:10:48,760
have a root user in one<font color="#E5E5E5"> container it'll</font>

327
00:10:46,870 --> 00:10:52,720
be the same root user ID and<font color="#E5E5E5"> all the</font>

328
00:10:48,760 --> 00:10:54,189
other containers<font color="#CCCCCC"> including the</font><font color="#E5E5E5"> the host</font>

329
00:10:52,720 --> 00:10:55,660
<font color="#E5E5E5">operating</font><font color="#CCCCCC"> system and as you can imagine</font>

330
00:10:54,190 --> 00:10:58,060
and appreciate<font color="#E5E5E5"> that's not a good thing</font>

331
00:10:55,660 --> 00:10:58,839
<font color="#CCCCCC">rights if you have root access</font><font color="#E5E5E5"> in one of</font>

332
00:10:58,060 --> 00:11:00,760
those containers<font color="#E5E5E5"> and there's a</font>

333
00:10:58,840 --> 00:11:01,990
<font color="#CCCCCC">vulnerability if someone breaks out</font><font color="#E5E5E5"> with</font>

334
00:11:00,760 --> 00:11:03,970
root access<font color="#E5E5E5"> of a particular application</font>

335
00:11:01,990 --> 00:11:06,040
<font color="#CCCCCC">then technically because</font><font color="#E5E5E5"> you're sharing</font>

336
00:11:03,970 --> 00:11:07,990
<font color="#CCCCCC">the kernel they could make kernel calls</font>

337
00:11:06,040 --> 00:11:09,069
with that same user ID which would then

338
00:11:07,990 --> 00:11:10,930
<font color="#CCCCCC">they can break out of</font><font color="#E5E5E5"> that</font>

339
00:11:09,070 --> 00:11:12,580
go to other containers so what you want

340
00:11:10,930 --> 00:11:14,890
is enabling the user<font color="#CCCCCC"> namespace</font>

341
00:11:12,580 --> 00:11:16,660
separation and so that the root user

342
00:11:14,890 --> 00:11:18,160
<font color="#E5E5E5">doesn't map to their same root user ID</font>

343
00:11:16,660 --> 00:11:19,900
as<font color="#CCCCCC"> the one in the</font><font color="#E5E5E5"> host right but if you</font>

344
00:11:18,160 --> 00:11:21,490
don't<font color="#E5E5E5"> have it I enabled</font><font color="#CCCCCC"> then it's the</font>

345
00:11:19,900 --> 00:11:23,319
same ID<font color="#E5E5E5"> all across all the containers</font>

346
00:11:21,490 --> 00:11:26,140
<font color="#E5E5E5">and that's not a good thing</font><font color="#CCCCCC"> so that's</font>

347
00:11:23,320 --> 00:11:27,280
that when when<font color="#E5E5E5"> I started looking</font><font color="#CCCCCC"> at</font>

348
00:11:26,140 --> 00:11:28,569
containers a couple<font color="#E5E5E5"> of years</font><font color="#CCCCCC"> ago for</font>

349
00:11:27,280 --> 00:11:29,800
example docker didn't support<font color="#E5E5E5"> that at</font>

350
00:11:28,570 --> 00:11:32,260
all<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> a big negative</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> them</font>

351
00:11:29,800 --> 00:11:33,520
cloud foundries garden has some<font color="#E5E5E5"> support</font>

352
00:11:32,260 --> 00:11:35,470
for<font color="#E5E5E5"> it but</font><font color="#CCCCCC"> I wasn't</font><font color="#E5E5E5"> perfect and even</font>

353
00:11:33,520 --> 00:11:36,730
<font color="#E5E5E5">with support for</font><font color="#CCCCCC"> it the implementation</font>

354
00:11:35,470 --> 00:11:37,840
has<font color="#CCCCCC"> to be really good because even if</font>

355
00:11:36,730 --> 00:11:39,610
some<font color="#E5E5E5"> of them some</font><font color="#CCCCCC"> of the container</font>

356
00:11:37,840 --> 00:11:41,260
technologies that do<font color="#E5E5E5"> support this</font>

357
00:11:39,610 --> 00:11:42,580
there have been no involvement abilities

358
00:11:41,260 --> 00:11:45,189
where you can still break<font color="#E5E5E5"> out of it so</font>

359
00:11:42,580 --> 00:11:46,120
it's kind of<font color="#E5E5E5"> a tricky one because it's</font>

360
00:11:45,190 --> 00:11:48,520
<font color="#E5E5E5">fairly new they've been known</font>

361
00:11:46,120 --> 00:11:49,810
vulnerabilities at<font color="#E5E5E5"> the start system</font>

362
00:11:48,520 --> 00:11:52,569
calls the security logic should be

363
00:11:49,810 --> 00:11:54,010
namespace aware<font color="#E5E5E5"> and check the capability</font>

364
00:11:52,570 --> 00:11:55,420
in<font color="#CCCCCC"> the correct namespace so see it this</font>

365
00:11:54,010 --> 00:11:57,189
<font color="#E5E5E5">is kind of tricky</font><font color="#CCCCCC"> right so</font><font color="#E5E5E5"> even if</font>

366
00:11:55,420 --> 00:11:58,870
you've<font color="#CCCCCC"> implemented it if the system call</font>

367
00:11:57,190 --> 00:11:59,980
is not namespace aware<font color="#E5E5E5"> and it's not</font>

368
00:11:58,870 --> 00:12:03,610
<font color="#E5E5E5">checking the capabilities in the right</font>

369
00:11:59,980 --> 00:12:05,260
place<font color="#CCCCCC"> things can still go wrong and</font><font color="#E5E5E5"> so</font>

370
00:12:03,610 --> 00:12:07,330
incorrect checking<font color="#CCCCCC"> may lead</font><font color="#E5E5E5"> - there's</font>

371
00:12:05,260 --> 00:12:10,000
the clone new user and clone FS exploit

372
00:12:07,330 --> 00:12:12,010
vulnerabilities<font color="#E5E5E5"> and so exploits are</font>

373
00:12:10,000 --> 00:12:13,120
still possible<font color="#CCCCCC"> even</font><font color="#E5E5E5"> if you enable this</font>

374
00:12:12,010 --> 00:12:15,010
right so don't<font color="#E5E5E5"> think that I've enabled</font>

375
00:12:13,120 --> 00:12:16,570
it and<font color="#E5E5E5"> everything's great maybe the</font>

376
00:12:15,010 --> 00:12:17,890
implementation is not<font color="#E5E5E5"> right maybe the</font>

377
00:12:16,570 --> 00:12:18,670
<font color="#E5E5E5">person making</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> system calls is not</font>

378
00:12:17,890 --> 00:12:20,680
doing it correctly

379
00:12:18,670 --> 00:12:22,839
so it's not all<font color="#CCCCCC"> that straightforward and</font>

380
00:12:20,680 --> 00:12:24,640
and what I've seen is when I worked with

381
00:12:22,840 --> 00:12:26,170
development teams that aren't security

382
00:12:24,640 --> 00:12:27,160
where they just<font color="#CCCCCC"> see their benefits and</font>

383
00:12:26,170 --> 00:12:28,959
containers<font color="#CCCCCC"> though they're sort of like</font>

384
00:12:27,160 --> 00:12:30,430
<font color="#CCCCCC">they're so great</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> deploy them so</font>

385
00:12:28,960 --> 00:12:32,020
<font color="#CCCCCC">quickly it's perfect for</font><font color="#E5E5E5"> DevOps</font>

386
00:12:30,430 --> 00:12:34,270
<font color="#E5E5E5">but they really don't think of the</font>

387
00:12:32,020 --> 00:12:35,620
<font color="#E5E5E5">consequences</font><font color="#CCCCCC"> so what they do is</font><font color="#E5E5E5"> there a</font>

388
00:12:34,270 --> 00:12:38,020
lot of<font color="#E5E5E5"> people</font><font color="#CCCCCC"> re architecting their</font>

389
00:12:35,620 --> 00:12:39,460
applications<font color="#CCCCCC"> from</font><font color="#E5E5E5"> you know traditional</font>

390
00:12:38,020 --> 00:12:40,689
applications where they contain many

391
00:12:39,460 --> 00:12:42,520
functions and<font color="#CCCCCC"> they're breaking it into</font>

392
00:12:40,690 --> 00:12:43,960
containers or might<font color="#CCCCCC"> you know they're</font>

393
00:12:42,520 --> 00:12:45,189
making<font color="#CCCCCC"> them into micro services and that</font>

394
00:12:43,960 --> 00:12:47,230
each micro<font color="#CCCCCC"> service resides in a</font>

395
00:12:45,190 --> 00:12:48,160
container<font color="#E5E5E5"> but then they're mixing and</font>

396
00:12:47,230 --> 00:12:49,660
matching all<font color="#E5E5E5"> these different</font>

397
00:12:48,160 --> 00:12:51,490
applications<font color="#CCCCCC"> in one pool right whereas</font>

398
00:12:49,660 --> 00:12:53,650
in the past<font color="#CCCCCC"> each application resided on</font>

399
00:12:51,490 --> 00:12:54,910
its own<font color="#CCCCCC"> physical server separated from</font>

400
00:12:53,650 --> 00:12:55,930
the other application so if there<font color="#E5E5E5"> was a</font>

401
00:12:54,910 --> 00:12:57,819
vulnerability<font color="#E5E5E5"> in there</font>

402
00:12:55,930 --> 00:12:59,620
<font color="#E5E5E5">the impact where the blast radius was</font>

403
00:12:57,820 --> 00:13:00,940
more<font color="#E5E5E5"> limited now they're throwing all</font>

404
00:12:59,620 --> 00:13:02,740
these<font color="#CCCCCC"> micro services belonging to</font>

405
00:13:00,940 --> 00:13:04,360
different<font color="#E5E5E5"> risk types right so we've got</font>

406
00:13:02,740 --> 00:13:05,890
applications of different rest levels

407
00:13:04,360 --> 00:13:07,600
<font color="#CCCCCC">all their micro services</font><font color="#E5E5E5"> are in</font>

408
00:13:05,890 --> 00:13:10,780
containers they're all running<font color="#E5E5E5"> in the</font>

409
00:13:07,600 --> 00:13:12,040
same cluster<font color="#CCCCCC"> right</font><font color="#E5E5E5"> and and so</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> someone</font>

410
00:13:10,780 --> 00:13:13,030
breaks out there could be<font color="#E5E5E5"> impact on the</font>

411
00:13:12,040 --> 00:13:15,040
other<font color="#CCCCCC"> one</font><font color="#E5E5E5"> so you really have to be</font>

412
00:13:13,030 --> 00:13:17,980
careful<font color="#CCCCCC"> about segregating and how you</font>

413
00:13:15,040 --> 00:13:20,050
you architect<font color="#E5E5E5"> your your application as</font>

414
00:13:17,980 --> 00:13:21,520
it coexist with the other<font color="#E5E5E5"> micro services</font>

415
00:13:20,050 --> 00:13:24,569
from other<font color="#E5E5E5"> applications</font>

416
00:13:21,520 --> 00:13:27,069
we'll talk<font color="#CCCCCC"> a</font><font color="#E5E5E5"> bit about that later so</font>

417
00:13:24,570 --> 00:13:29,170
other namespaces<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> the network</font>

418
00:13:27,070 --> 00:13:30,700
namespace<font color="#CCCCCC"> it provides a separated</font>

419
00:13:29,170 --> 00:13:32,020
<font color="#CCCCCC">network stack for each container</font><font color="#E5E5E5"> right</font>

420
00:13:30,700 --> 00:13:34,060
that's what namespaces are<font color="#E5E5E5"> about a</font>

421
00:13:32,020 --> 00:13:35,500
<font color="#E5E5E5">separation of the particular type of</font>

422
00:13:34,060 --> 00:13:37,359
resource<font color="#E5E5E5"> that you're</font><font color="#CCCCCC"> talking</font><font color="#E5E5E5"> about so if</font>

423
00:13:35,500 --> 00:13:39,520
<font color="#E5E5E5">you've enabled and implemented</font><font color="#CCCCCC"> network</font>

424
00:13:37,360 --> 00:13:41,770
namespaces<font color="#CCCCCC"> it'll provide a separate</font>

425
00:13:39,520 --> 00:13:45,010
<font color="#CCCCCC">network stack</font><font color="#E5E5E5"> it's widely used there's</font>

426
00:13:41,770 --> 00:13:46,780
also<font color="#E5E5E5"> there's been abuses so for example</font>

427
00:13:45,010 --> 00:13:48,520
<font color="#CCCCCC">did</font><font color="#E5E5E5"> net raw because you need raw sockets</font>

428
00:13:46,780 --> 00:13:49,420
and there's been an abuse where you know

429
00:13:48,520 --> 00:13:50,980
there's a flaw in<font color="#CCCCCC"> that particular</font>

430
00:13:49,420 --> 00:13:52,540
namespace and you can't really<font color="#E5E5E5"> say well</font>

431
00:13:50,980 --> 00:13:55,180
you can't use raw sockets<font color="#E5E5E5"> for example or</font>

432
00:13:52,540 --> 00:13:58,360
not<font color="#E5E5E5"> using that raw so there are problems</font>

433
00:13:55,180 --> 00:14:00,099
<font color="#CCCCCC">there as well there's the pig namespace</font>

434
00:13:58,360 --> 00:14:03,130
<font color="#E5E5E5">which is the process ID namespace</font><font color="#CCCCCC"> which</font>

435
00:14:00,100 --> 00:14:05,260
allows each container<font color="#E5E5E5"> to have a fully</font>

436
00:14:03,130 --> 00:14:06,460
isolated<font color="#CCCCCC"> process tree so unlike true</font>

437
00:14:05,260 --> 00:14:10,510
that didn't do that you could see<font color="#E5E5E5"> other</font>

438
00:14:06,460 --> 00:14:12,340
people's processes<font color="#CCCCCC"> the process ID would</font>

439
00:14:10,510 --> 00:14:13,060
<font color="#E5E5E5">be different inside each container that</font>

440
00:14:12,340 --> 00:14:15,100
<font color="#E5E5E5">on the host</font>

441
00:14:13,060 --> 00:14:16,209
but again vulnerabilities<font color="#CCCCCC"> that</font><font color="#E5E5E5"> have been</font>

442
00:14:15,100 --> 00:14:18,610
vulnerabilities that<font color="#CCCCCC"> have</font><font color="#E5E5E5"> shown</font><font color="#CCCCCC"> that</font>

443
00:14:16,210 --> 00:14:20,230
this info can also leak<font color="#E5E5E5"> so again none of</font>

444
00:14:18,610 --> 00:14:22,990
these are perfect<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> technology is</font>

445
00:14:20,230 --> 00:14:24,730
still evolving<font color="#CCCCCC"> the other namespaces that</font>

446
00:14:22,990 --> 00:14:26,530
we have are<font color="#E5E5E5"> the mount namespace</font><font color="#CCCCCC"> which is</font>

447
00:14:24,730 --> 00:14:29,320
used<font color="#E5E5E5"> to separate the</font><font color="#CCCCCC"> filesystem for each</font>

448
00:14:26,530 --> 00:14:31,750
container<font color="#E5E5E5"> and there's the IPC namespace</font>

449
00:14:29,320 --> 00:14:34,090
<font color="#CCCCCC">that deals with the system 5 IPC and</font>

450
00:14:31,750 --> 00:14:35,620
POSIX message queues and there's the UTS

451
00:14:34,090 --> 00:14:37,720
one that I<font color="#E5E5E5"> mentioned this used for host</font>

452
00:14:35,620 --> 00:14:38,680
host names so these are the ones<font color="#CCCCCC"> that</font>

453
00:14:37,720 --> 00:14:41,080
are typically implemented they're

454
00:14:38,680 --> 00:14:42,849
actually more that some containers may

455
00:14:41,080 --> 00:14:45,340
or may not implement but most<font color="#E5E5E5"> of the</font>

456
00:14:42,850 --> 00:14:46,020
<font color="#E5E5E5">modern ones do those again may not</font><font color="#CCCCCC"> do</font>

457
00:14:45,340 --> 00:14:48,100
them perfectly

458
00:14:46,020 --> 00:14:49,900
aside from namespaces there are other

459
00:14:48,100 --> 00:14:52,500
Linux security<font color="#E5E5E5"> features that can</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> used</font>

460
00:14:49,900 --> 00:14:55,150
<font color="#E5E5E5">to secure the containers even further</font>

461
00:14:52,500 --> 00:14:56,680
one of those is the use of<font color="#CCCCCC"> C groups or</font>

462
00:14:55,150 --> 00:14:59,590
control groups right then what those do

463
00:14:56,680 --> 00:15:01,540
for<font color="#E5E5E5"> those of you not familiar they limit</font>

464
00:14:59,590 --> 00:15:04,360
an account for<font color="#CCCCCC"> our</font><font color="#E5E5E5"> and isolate the user</font>

465
00:15:01,540 --> 00:15:06,880
the resource users so for example your

466
00:15:04,360 --> 00:15:08,740
CPU<font color="#E5E5E5"> usage or memory usage disk i/o and</font>

467
00:15:06,880 --> 00:15:12,939
that kind<font color="#CCCCCC"> of stuff so they provide that</font>

468
00:15:08,740 --> 00:15:14,320
resource separation<font color="#E5E5E5"> and the collection</font>

469
00:15:12,940 --> 00:15:16,450
of<font color="#E5E5E5"> for collection of</font><font color="#CCCCCC"> processes and</font><font color="#E5E5E5"> they</font>

470
00:15:14,320 --> 00:15:17,920
can also be used<font color="#CCCCCC"> along with</font><font color="#E5E5E5"> IP tables to</font>

471
00:15:16,450 --> 00:15:19,780
do some traffic<font color="#E5E5E5"> shaping if that's what</font>

472
00:15:17,920 --> 00:15:21,339
you want to do there are also

473
00:15:19,780 --> 00:15:24,160
capabilities<font color="#E5E5E5"> that you can use in the</font>

474
00:15:21,340 --> 00:15:26,650
<font color="#E5E5E5">Linux capabilities allow for breaking</font>

475
00:15:24,160 --> 00:15:28,140
<font color="#CCCCCC">down the role</font><font color="#E5E5E5"> into more granular pieces</font>

476
00:15:26,650 --> 00:15:30,060
so instead<font color="#CCCCCC"> of just</font><font color="#E5E5E5"> saying you</font><font color="#CCCCCC"> have</font>

477
00:15:28,140 --> 00:15:31,680
you know root access and<font color="#CCCCCC"> wood access he</font>

478
00:15:30,060 --> 00:15:34,469
could do all these other<font color="#CCCCCC"> things with</font>

479
00:15:31,680 --> 00:15:36,089
with the Linux capabilities you<font color="#CCCCCC"> can say</font>

480
00:15:34,470 --> 00:15:37,890
no you you can only<font color="#E5E5E5"> do this one</font>

481
00:15:36,090 --> 00:15:38,850
<font color="#CCCCCC">privileged function out of</font><font color="#E5E5E5"> all the</font>

482
00:15:37,890 --> 00:15:40,650
things that<font color="#CCCCCC"> root can do so you can</font>

483
00:15:38,850 --> 00:15:43,250
<font color="#E5E5E5">actually make it</font><font color="#CCCCCC"> more granular</font><font color="#E5E5E5"> and have</font>

484
00:15:40,650 --> 00:15:43,250
more<font color="#CCCCCC"> control</font>

485
00:15:43,830 --> 00:15:49,110
there's also<font color="#E5E5E5"> Mac mandatory access</font>

486
00:15:45,840 --> 00:15:51,240
control which<font color="#CCCCCC"> it's limits the action of</font>

487
00:15:49,110 --> 00:15:55,710
a program<font color="#E5E5E5"> there are hooks provided by</font>

488
00:15:51,240 --> 00:15:58,050
Linux<font color="#E5E5E5"> that by</font><font color="#CCCCCC"> the LSMs</font><font color="#E5E5E5"> or the Linux</font>

489
00:15:55,710 --> 00:15:59,580
security<font color="#E5E5E5"> modules such as a farmer for</font>

490
00:15:58,050 --> 00:16:01,620
<font color="#E5E5E5">those of you are familiar with it</font>

491
00:15:59,580 --> 00:16:04,590
both docker and<font color="#CCCCCC"> Lexy have this enabled</font>

492
00:16:01,620 --> 00:16:06,210
<font color="#CCCCCC">and selinux is also an option</font><font color="#E5E5E5"> but it's</font>

493
00:16:04,590 --> 00:16:08,340
not well supported<font color="#E5E5E5"> and documented but</font>

494
00:16:06,210 --> 00:16:11,730
again things<font color="#CCCCCC"> will probably</font><font color="#E5E5E5"> change</font><font color="#CCCCCC"> as we</font>

495
00:16:08,340 --> 00:16:13,230
go forward<font color="#E5E5E5"> you can also do</font><font color="#CCCCCC"> use second</font><font color="#E5E5E5"> to</font>

496
00:16:11,730 --> 00:16:15,210
filter system calls right so if you want

497
00:16:13,230 --> 00:16:16,440
to you know say hey I don't want<font color="#CCCCCC"> just</font>

498
00:16:15,210 --> 00:16:17,970
anybody to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to call these</font><font color="#CCCCCC"> or</font>

499
00:16:16,440 --> 00:16:20,010
<font color="#CCCCCC">maybe I want to</font><font color="#E5E5E5"> have some sort of</font>

500
00:16:17,970 --> 00:16:23,250
<font color="#CCCCCC">filtering on what systems</font><font color="#E5E5E5"> call cost can</font>

501
00:16:20,010 --> 00:16:24,510
<font color="#CCCCCC">be made then</font><font color="#E5E5E5"> you can put it in strict</font>

502
00:16:23,250 --> 00:16:26,910
<font color="#E5E5E5">mode which allows only a small set of</font>

503
00:16:24,510 --> 00:16:29,490
system<font color="#E5E5E5"> calls and which can't be modified</font>

504
00:16:26,910 --> 00:16:32,910
<font color="#E5E5E5">or</font><font color="#CCCCCC"> you can go in filter mode and you can</font>

505
00:16:29,490 --> 00:16:34,320
write these filters using via<font color="#E5E5E5"> BPF so the</font>

506
00:16:32,910 --> 00:16:36,650
Berkeley Berkeley packet<font color="#CCCCCC"> filtering</font>

507
00:16:34,320 --> 00:16:39,810
programs that allow more finely grained

508
00:16:36,650 --> 00:16:41,459
policies docker<font color="#E5E5E5"> supports</font><font color="#CCCCCC"> second PDFs</font><font color="#E5E5E5"> and</font>

509
00:16:39,810 --> 00:16:43,979
<font color="#E5E5E5">there's there</font><font color="#CCCCCC"> was a peach race</font>

510
00:16:41,460 --> 00:16:48,150
vulnerability that<font color="#E5E5E5"> bypassed this that</font>

511
00:16:43,980 --> 00:16:50,070
was<font color="#E5E5E5"> demonstrated as well so</font><font color="#CCCCCC"> ok we looked</font>

512
00:16:48,150 --> 00:16:51,420
at capabilities and different<font color="#E5E5E5"> different</font>

513
00:16:50,070 --> 00:16:53,670
things<font color="#CCCCCC"> you can do to secure containers</font>

514
00:16:51,420 --> 00:16:55,110
but what about container uses<font color="#E5E5E5"> so</font>

515
00:16:53,670 --> 00:16:57,120
container uses are things like

516
00:16:55,110 --> 00:16:58,800
allocation of finite hardware resources

517
00:16:57,120 --> 00:17:00,300
same as same thing you would do with

518
00:16:58,800 --> 00:17:02,120
hardware virtualization<font color="#E5E5E5"> you know with</font>

519
00:17:00,300 --> 00:17:04,500
the<font color="#CCCCCC"> ember and all that kind of stuff</font>

520
00:17:02,120 --> 00:17:06,510
<font color="#CCCCCC">they give you improved hardware</font>

521
00:17:04,500 --> 00:17:07,650
independence and added resource

522
00:17:06,510 --> 00:17:09,390
management so we<font color="#E5E5E5"> could package an</font>

523
00:17:07,650 --> 00:17:11,220
application and there's dependencies as

524
00:17:09,390 --> 00:17:13,170
a<font color="#E5E5E5"> container and just you know without</font>

525
00:17:11,220 --> 00:17:14,880
without dependency just deploy it out

526
00:17:13,170 --> 00:17:16,949
again<font color="#CCCCCC"> virtualization</font><font color="#E5E5E5"> has done this for</font><font color="#CCCCCC"> a</font>

527
00:17:14,880 --> 00:17:20,610
<font color="#E5E5E5">while as</font><font color="#CCCCCC"> well like</font><font color="#E5E5E5"> with VMware you or</font>

528
00:17:16,949 --> 00:17:22,350
<font color="#CCCCCC">OVF files you can</font><font color="#E5E5E5"> also big use for</font>

529
00:17:20,609 --> 00:17:26,520
containers as hosting api's and micro

530
00:17:22,349 --> 00:17:28,590
services right so as as<font color="#CCCCCC"> people re are</font>

531
00:17:26,520 --> 00:17:30,240
<font color="#E5E5E5">connecting their applications and taking</font>

532
00:17:28,590 --> 00:17:32,189
these old monolithic applications and

533
00:17:30,240 --> 00:17:34,110
breaking them into<font color="#E5E5E5"> the micro services</font>

534
00:17:32,190 --> 00:17:35,700
contain and and and and<font color="#CCCCCC"> you know</font>

535
00:17:34,110 --> 00:17:37,889
providing<font color="#E5E5E5"> access to those micro services</font>

536
00:17:35,700 --> 00:17:39,390
through an<font color="#E5E5E5"> API containers go really well</font>

537
00:17:37,890 --> 00:17:41,160
with<font color="#CCCCCC"> that so you know if you can take a</font>

538
00:17:39,390 --> 00:17:41,610
micro service put in a container<font color="#E5E5E5"> as</font>

539
00:17:41,160 --> 00:17:43,650
light

540
00:17:41,610 --> 00:17:44,850
microservices is small<font color="#CCCCCC"> I mean it</font>

541
00:17:43,650 --> 00:17:46,740
wouldn't<font color="#E5E5E5"> make sense if we did this with</font>

542
00:17:44,850 --> 00:17:48,840
with hardware virtualization or with a

543
00:17:46,740 --> 00:17:50,760
<font color="#E5E5E5">was like like like with an actual</font><font color="#CCCCCC"> VM</font>

544
00:17:48,840 --> 00:17:52,860
because if you broke the application and

545
00:17:50,760 --> 00:17:54,870
<font color="#E5E5E5">to say 50 functions and put each</font><font color="#CCCCCC"> of them</font>

546
00:17:52,860 --> 00:17:56,520
into a VM<font color="#E5E5E5"> that's too heavy because each</font>

547
00:17:54,870 --> 00:17:57,989
of those<font color="#E5E5E5"> VMs are gonna have a kernel</font><font color="#CCCCCC"> and</font>

548
00:17:56,520 --> 00:17:59,639
now you're gonna end up<font color="#E5E5E5"> with like you</font>

549
00:17:57,990 --> 00:18:01,620
<font color="#E5E5E5">know 50 kernels</font><font color="#CCCCCC"> that you have to startup</font>

550
00:17:59,640 --> 00:18:04,320
requires a lot<font color="#CCCCCC"> of resources and all that</font>

551
00:18:01,620 --> 00:18:05,639
kind of stuff<font color="#CCCCCC"> right but but in but if</font>

552
00:18:04,320 --> 00:18:08,010
you take the application<font color="#CCCCCC"> and break it</font>

553
00:18:05,640 --> 00:18:09,870
into 50<font color="#E5E5E5"> micro services and put them in</font>

554
00:18:08,010 --> 00:18:11,820
containers containers<font color="#E5E5E5"> they don't have</font>

555
00:18:09,870 --> 00:18:14,189
their own kernel<font color="#CCCCCC"> they're light they</font>

556
00:18:11,820 --> 00:18:17,070
start up really quickly<font color="#E5E5E5"> so it's not as</font>

557
00:18:14,190 --> 00:18:18,809
<font color="#E5E5E5">much</font><font color="#CCCCCC"> of a burden so that the</font><font color="#E5E5E5"> the</font>

558
00:18:17,070 --> 00:18:21,659
application<font color="#CCCCCC"> breakdown that you've</font>

559
00:18:18,809 --> 00:18:23,970
introduced<font color="#E5E5E5"> due to you know putting them</font>

560
00:18:21,660 --> 00:18:25,710
on micro<font color="#E5E5E5"> services doesn't doesn't add a</font>

561
00:18:23,970 --> 00:18:27,660
lot<font color="#CCCCCC"> of overhead</font><font color="#E5E5E5"> if you use containers to</font>

562
00:18:25,710 --> 00:18:29,160
do that and of<font color="#CCCCCC"> course you know each of</font>

563
00:18:27,660 --> 00:18:31,230
them can<font color="#E5E5E5"> be opened as an API but the</font>

564
00:18:29,160 --> 00:18:32,309
thing<font color="#E5E5E5"> to note is that you you know if</font>

565
00:18:31,230 --> 00:18:33,960
you have a micro service it doesn't

566
00:18:32,309 --> 00:18:34,918
<font color="#E5E5E5">necessarily</font><font color="#CCCCCC"> have to</font><font color="#E5E5E5"> have an API right I</font>

567
00:18:33,960 --> 00:18:36,809
mean some<font color="#CCCCCC"> people think that</font>

568
00:18:34,919 --> 00:18:38,730
automatically if I have a<font color="#E5E5E5"> Microsoft has</font>

569
00:18:36,809 --> 00:18:39,960
an API<font color="#E5E5E5"> but it doesn't have to be that</font>

570
00:18:38,730 --> 00:18:41,640
way you<font color="#E5E5E5"> can have micro services that</font>

571
00:18:39,960 --> 00:18:43,919
talk to each<font color="#E5E5E5"> other without api's or</font><font color="#CCCCCC"> I</font>

572
00:18:41,640 --> 00:18:47,669
utilize<font color="#CCCCCC"> the resources in other ways or</font>

573
00:18:43,919 --> 00:18:49,950
communicate so containers also<font color="#E5E5E5"> help</font>

574
00:18:47,669 --> 00:18:51,360
automate deployment<font color="#CCCCCC"> of applications so</font>

575
00:18:49,950 --> 00:18:52,350
<font color="#CCCCCC">you can there's a distribution method</font>

576
00:18:51,360 --> 00:18:54,659
for software to guarantee

577
00:18:52,350 --> 00:18:57,480
reproducibility<font color="#E5E5E5"> and like I</font><font color="#CCCCCC"> said</font><font color="#E5E5E5"> earlier</font>

578
00:18:54,660 --> 00:18:59,760
the data they're good for<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> DevOps</font>

579
00:18:57,480 --> 00:19:01,950
tool chains for deploying and testing

580
00:18:59,760 --> 00:19:03,510
code and they're<font color="#E5E5E5"> typically the building</font>

581
00:19:01,950 --> 00:19:05,250
blocks<font color="#E5E5E5"> for a path so when you get</font><font color="#CCCCCC"> into</font>

582
00:19:03,510 --> 00:19:07,260
the past conversation typically

583
00:19:05,250 --> 00:19:09,150
containers are<font color="#E5E5E5"> a building building block</font>

584
00:19:07,260 --> 00:19:13,110
of<font color="#CCCCCC"> that amongst other things within</font><font color="#E5E5E5"> a</font>

585
00:19:09,150 --> 00:19:14,490
pass<font color="#CCCCCC"> so</font><font color="#E5E5E5"> Cloud Foundry is a pass and and</font>

586
00:19:13,110 --> 00:19:16,409
the container engine<font color="#E5E5E5"> used in</font><font color="#CCCCCC"> Cloud</font>

587
00:19:14,490 --> 00:19:18,540
<font color="#CCCCCC">Foundry is guard and we'll look at that</font>

588
00:19:16,410 --> 00:19:21,030
<font color="#CCCCCC">in a minute</font><font color="#E5E5E5"> and they're common in</font>

589
00:19:18,540 --> 00:19:22,320
virtual hosting<font color="#E5E5E5"> and then I put security</font>

590
00:19:21,030 --> 00:19:23,700
<font color="#CCCCCC">at the bottom right with question</font><font color="#E5E5E5"> mark</font>

591
00:19:22,320 --> 00:19:25,200
so is that a container use right or is

592
00:19:23,700 --> 00:19:26,720
that a byproduct<font color="#E5E5E5"> of it because some</font>

593
00:19:25,200 --> 00:19:28,679
people like<font color="#CCCCCC"> wow</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> taking my</font>

594
00:19:26,720 --> 00:19:30,450
application and<font color="#E5E5E5"> all these functions used</font>

595
00:19:28,679 --> 00:19:31,710
to be together<font color="#E5E5E5"> and one and now I'm</font>

596
00:19:30,450 --> 00:19:32,910
separating them putting<font color="#CCCCCC"> into separate</font>

597
00:19:31,710 --> 00:19:35,040
containers<font color="#E5E5E5"> isn't that better</font>

598
00:19:32,910 --> 00:19:36,270
isn't<font color="#CCCCCC"> that isolation</font><font color="#E5E5E5"> right but that's</font>

599
00:19:35,040 --> 00:19:38,399
like<font color="#CCCCCC"> telling me back in the late</font>

600
00:19:36,270 --> 00:19:39,720
nineties that<font color="#E5E5E5"> hey I've got a you</font><font color="#CCCCCC"> know</font>

601
00:19:38,400 --> 00:19:41,910
I've got a<font color="#CCCCCC"> switched hub and that gives</font>

602
00:19:39,720 --> 00:19:43,140
<font color="#E5E5E5">me security because people are no</font><font color="#CCCCCC"> longer</font>

603
00:19:41,910 --> 00:19:44,220
able to<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> each other but as we</font>

604
00:19:43,140 --> 00:19:45,900
know that's<font color="#CCCCCC"> not true</font><font color="#E5E5E5"> right because you</font>

605
00:19:44,220 --> 00:19:47,130
can do our poisoning you can flood<font color="#E5E5E5"> the</font>

606
00:19:45,900 --> 00:19:48,809
ARP table there's lots of<font color="#E5E5E5"> ways to get</font>

607
00:19:47,130 --> 00:19:50,520
<font color="#E5E5E5">around that</font><font color="#CCCCCC"> and put</font><font color="#E5E5E5"> that switch</font><font color="#CCCCCC"> hub into</font>

608
00:19:48,809 --> 00:19:53,010
regular mode and read that the data

609
00:19:50,520 --> 00:19:54,480
<font color="#E5E5E5">that's floating around so or VLANs when</font>

610
00:19:53,010 --> 00:19:55,020
they first came out<font color="#E5E5E5"> right like it was</font>

611
00:19:54,480 --> 00:19:56,700
some of<font color="#E5E5E5"> these</font>

612
00:19:55,020 --> 00:19:58,770
things were not<font color="#CCCCCC"> designed to</font><font color="#E5E5E5"> address</font>

613
00:19:56,700 --> 00:20:01,170
security<font color="#E5E5E5"> they were designed to you know</font>

614
00:19:58,770 --> 00:20:02,520
separate the network<font color="#E5E5E5"> traffic and reduce</font>

615
00:20:01,170 --> 00:20:04,620
the chatter<font color="#CCCCCC"> and all that kind of stuff</font>

616
00:20:02,520 --> 00:20:06,180
security was a byproduct<font color="#CCCCCC"> you know in the</font>

617
00:20:04,620 --> 00:20:07,739
beginning<font color="#CCCCCC"> you could do VLAN hopping and</font>

618
00:20:06,180 --> 00:20:10,140
all that other<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> but as we've seen</font>

619
00:20:07,740 --> 00:20:12,390
with<font color="#CCCCCC"> its technology like VLAN as the</font>

620
00:20:10,140 --> 00:20:14,790
years<font color="#CCCCCC"> have gone</font><font color="#E5E5E5"> by through process and</font>

621
00:20:12,390 --> 00:20:16,020
and improvements<font color="#CCCCCC"> to technology</font><font color="#E5E5E5"> then we</font>

622
00:20:14,790 --> 00:20:18,240
can<font color="#E5E5E5"> implement those kinds of things in a</font>

623
00:20:16,020 --> 00:20:19,920
secure manner<font color="#E5E5E5"> but security was not it</font>

624
00:20:18,240 --> 00:20:20,490
was more of an afterthought<font color="#E5E5E5"> so it's the</font>

625
00:20:19,920 --> 00:20:22,200
<font color="#E5E5E5">same thing</font>

626
00:20:20,490 --> 00:20:23,910
containers were not<font color="#E5E5E5"> this really designed</font>

627
00:20:22,200 --> 00:20:24,870
to<font color="#E5E5E5"> give you security and extra isolation</font>

628
00:20:23,910 --> 00:20:26,640
they were designed<font color="#E5E5E5"> for be lightweight</font>

629
00:20:24,870 --> 00:20:28,290
<font color="#CCCCCC">use all this other stuff</font><font color="#E5E5E5"> but if you</font>

630
00:20:26,640 --> 00:20:31,110
don't<font color="#E5E5E5"> put them correctly they can add</font>

631
00:20:28,290 --> 00:20:33,720
they can end up in giving you some<font color="#CCCCCC"> added</font>

632
00:20:31,110 --> 00:20:36,570
security<font color="#CCCCCC"> but the operative</font><font color="#E5E5E5"> word</font><font color="#CCCCCC"> being</font>

633
00:20:33,720 --> 00:20:40,080
here being deploying them<font color="#E5E5E5"> correctly and</font>

634
00:20:36,570 --> 00:20:42,419
<font color="#CCCCCC">that sort of thing</font><font color="#E5E5E5"> so here are some</font>

635
00:20:40,080 --> 00:20:44,399
<font color="#E5E5E5">modern implementations</font><font color="#CCCCCC"> they make</font>

636
00:20:42,420 --> 00:20:46,140
containers easy to use docker has

637
00:20:44,400 --> 00:20:47,370
extremely<font color="#E5E5E5"> easy to use like it'll take</font>

638
00:20:46,140 --> 00:20:49,200
you a couple<font color="#CCCCCC"> minutes</font><font color="#E5E5E5"> to install it on</font>

639
00:20:47,370 --> 00:20:51,030
your<font color="#E5E5E5"> computer</font><font color="#CCCCCC"> you know download the</font>

640
00:20:49,200 --> 00:20:52,860
thing click click<font color="#E5E5E5"> it's installed not so</font>

641
00:20:51,030 --> 00:20:55,560
much for<font color="#E5E5E5"> garden or</font><font color="#CCCCCC"> Cloud Foundry a</font>

642
00:20:52,860 --> 00:20:56,820
little bit more tricky<font color="#CCCCCC"> but</font><font color="#E5E5E5"> you know they</font>

643
00:20:55,560 --> 00:20:59,190
have definitely<font color="#E5E5E5"> come a long way</font>

644
00:20:56,820 --> 00:21:01,169
docker<font color="#E5E5E5"> so there's you know things like</font>

645
00:20:59,190 --> 00:21:03,440
<font color="#E5E5E5">docker engine cloud foundries garden</font>

646
00:21:01,170 --> 00:21:05,700
openvz<font color="#CCCCCC"> let's</font><font color="#E5E5E5"> see all that</font><font color="#CCCCCC"> other stuff</font>

647
00:21:03,440 --> 00:21:07,710
<font color="#E5E5E5">some of them are designed to run</font>

648
00:21:05,700 --> 00:21:09,090
multiple processes and services<font color="#CCCCCC"> some</font>

649
00:21:07,710 --> 00:21:12,030
<font color="#E5E5E5">only a single service right so some of</font>

650
00:21:09,090 --> 00:21:15,240
<font color="#E5E5E5">them run one service so it's likely the</font>

651
00:21:12,030 --> 00:21:16,470
traditional<font color="#CCCCCC"> I guess</font><font color="#E5E5E5"> Pat you know there's</font>

652
00:21:15,240 --> 00:21:18,540
<font color="#CCCCCC">the pets and Cattle concept where</font>

653
00:21:16,470 --> 00:21:19,800
kettles can scale out<font color="#E5E5E5"> pets</font><font color="#CCCCCC"> are these</font>

654
00:21:18,540 --> 00:21:21,389
things<font color="#E5E5E5"> you grow and they're just like</font><font color="#CCCCCC"> a</font>

655
00:21:19,800 --> 00:21:23,850
single<font color="#E5E5E5"> machine so you can use containers</font>

656
00:21:21,390 --> 00:21:25,350
to run<font color="#CCCCCC"> a full-blown machine like you</font>

657
00:21:23,850 --> 00:21:27,959
<font color="#E5E5E5">would with any other virtualization</font>

658
00:21:25,350 --> 00:21:30,870
<font color="#E5E5E5">technology but or you can use</font><font color="#CCCCCC"> it to run</font>

659
00:21:27,960 --> 00:21:32,790
a<font color="#E5E5E5"> single service so that's typically</font>

660
00:21:30,870 --> 00:21:34,020
when we get to micro services right so

661
00:21:32,790 --> 00:21:36,000
in<font color="#E5E5E5"> that mode you're putting a single</font>

662
00:21:34,020 --> 00:21:37,770
<font color="#E5E5E5">function</font><font color="#CCCCCC"> and/or</font><font color="#E5E5E5"> micro service in a</font>

663
00:21:36,000 --> 00:21:40,860
container or<font color="#CCCCCC"> you can put a full-blown</font>

664
00:21:37,770 --> 00:21:42,600
application stack with everything in<font color="#E5E5E5"> it</font>

665
00:21:40,860 --> 00:21:43,830
just<font color="#E5E5E5"> like a virtual</font><font color="#CCCCCC"> machine because that</font>

666
00:21:42,600 --> 00:21:45,449
bottom<font color="#E5E5E5"> line when you're inside the</font>

667
00:21:43,830 --> 00:21:46,860
container<font color="#E5E5E5"> it looks like a regular</font>

668
00:21:45,450 --> 00:21:49,950
operating system right<font color="#CCCCCC"> so it could be</font>

669
00:21:46,860 --> 00:21:51,990
<font color="#CCCCCC">running whatever</font><font color="#E5E5E5"> you want in there what</font>

670
00:21:49,950 --> 00:21:54,570
<font color="#CCCCCC">about the supporting</font><font color="#E5E5E5"> cast</font><font color="#CCCCCC"> so these are</font>

671
00:21:51,990 --> 00:21:56,100
all the different<font color="#E5E5E5"> tools that support the</font>

672
00:21:54,570 --> 00:21:58,139
container engines right so container

673
00:21:56,100 --> 00:21:59,730
engines being<font color="#E5E5E5"> you know things like</font>

674
00:21:58,140 --> 00:22:00,960
docker engine or garden but then you

675
00:21:59,730 --> 00:22:02,850
need orchestration<font color="#CCCCCC"> and you need</font><font color="#E5E5E5"> all</font>

676
00:22:00,960 --> 00:22:05,190
<font color="#E5E5E5">these other stuff so</font><font color="#CCCCCC"> there are things</font>

677
00:22:02,850 --> 00:22:07,379
container schedulers as they allow scale

678
00:22:05,190 --> 00:22:08,690
out load<font color="#E5E5E5"> balancing adding storage or</font>

679
00:22:07,380 --> 00:22:10,270
network<font color="#E5E5E5"> resources</font>

680
00:22:08,690 --> 00:22:12,710
maintaining<font color="#E5E5E5"> high availability</font>

681
00:22:10,270 --> 00:22:14,720
<font color="#E5E5E5">recoverability</font><font color="#CCCCCC"> that's things like docker</font>

682
00:22:12,710 --> 00:22:16,730
swarm<font color="#E5E5E5"> docker swarm is failed he knew</font>

683
00:22:14,720 --> 00:22:17,810
before<font color="#CCCCCC"> docker swarm if</font><font color="#E5E5E5"> he wanted to do</font>

684
00:22:16,730 --> 00:22:19,700
<font color="#CCCCCC">scheduling you would do something like</font>

685
00:22:17,810 --> 00:22:21,800
kubernetes right because docker engine

686
00:22:19,700 --> 00:22:24,020
itself there's not much you<font color="#E5E5E5"> some people</font>

687
00:22:21,800 --> 00:22:25,520
<font color="#CCCCCC">would use</font><font color="#E5E5E5"> symbol and try to make you</font>

688
00:22:24,020 --> 00:22:27,230
know<font color="#E5E5E5"> make</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> work</font>

689
00:22:25,520 --> 00:22:28,670
chef pop<font color="#CCCCCC"> add all kinds of other stuff</font>

690
00:22:27,230 --> 00:22:30,020
but<font color="#CCCCCC"> kubernetes came along</font><font color="#E5E5E5"> they're like</font>

691
00:22:28,670 --> 00:22:32,030
hey we can do all the<font color="#E5E5E5"> scheduling</font>

692
00:22:30,020 --> 00:22:33,590
<font color="#E5E5E5">orchestration for you really nicely but</font>

693
00:22:32,030 --> 00:22:35,389
<font color="#E5E5E5">now docker has got swarm as well which</font>

694
00:22:33,590 --> 00:22:39,080
it's actually<font color="#CCCCCC"> pretty cool</font><font color="#E5E5E5"> because before</font>

695
00:22:35,390 --> 00:22:41,450
<font color="#E5E5E5">docker swarm dr. swarm brought the</font>

696
00:22:39,080 --> 00:22:42,980
<font color="#E5E5E5">concept of clusters right and before</font>

697
00:22:41,450 --> 00:22:44,000
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you didn't really have that so what</font>

698
00:22:42,980 --> 00:22:46,550
<font color="#E5E5E5">you did is</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> deployed all your</font>

699
00:22:44,000 --> 00:22:47,780
<font color="#CCCCCC">containers into one big pool and as</font><font color="#E5E5E5"> I</font>

700
00:22:46,550 --> 00:22:49,430
mentioned<font color="#E5E5E5"> earlier that's not really so</font>

701
00:22:47,780 --> 00:22:50,780
good for security<font color="#E5E5E5"> that's like saying you</font>

702
00:22:49,430 --> 00:22:52,850
know<font color="#E5E5E5"> our company's gonna have a flat</font>

703
00:22:50,780 --> 00:22:54,020
<font color="#E5E5E5">network right no</font><font color="#CCCCCC"> DMZ no sub networks</font><font color="#E5E5E5"> or</font>

704
00:22:52,850 --> 00:22:55,550
<font color="#E5E5E5">nothing let's just put everybody in one</font>

705
00:22:54,020 --> 00:22:57,530
big<font color="#E5E5E5"> network right that's the best</font>

706
00:22:55,550 --> 00:22:59,149
<font color="#E5E5E5">analogy I can give you but with docker</font>

707
00:22:57,530 --> 00:23:01,730
swarm you<font color="#E5E5E5"> can create clusters that he</font>

708
00:22:59,150 --> 00:23:03,650
<font color="#CCCCCC">can</font><font color="#E5E5E5"> label you can in your develop</font>

709
00:23:01,730 --> 00:23:05,810
developer pipeline<font color="#E5E5E5"> you could introduce</font>

710
00:23:03,650 --> 00:23:08,120
tags<font color="#E5E5E5"> and then you can tap based on the</font>

711
00:23:05,810 --> 00:23:10,070
tag<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> deploy containers on</font>

712
00:23:08,120 --> 00:23:12,110
different virtual machines<font color="#CCCCCC"> and then then</font>

713
00:23:10,070 --> 00:23:15,110
<font color="#E5E5E5">your separation barrier becomes the</font>

714
00:23:12,110 --> 00:23:17,240
hypervisor rather than you know<font color="#E5E5E5"> the</font>

715
00:23:15,110 --> 00:23:19,550
shared kernel which which is<font color="#E5E5E5"> where the</font>

716
00:23:17,240 --> 00:23:21,500
container sits<font color="#E5E5E5"> so you get some added</font>

717
00:23:19,550 --> 00:23:22,700
<font color="#E5E5E5">security by doing that by deploying so</font>

718
00:23:21,500 --> 00:23:24,380
you'd say you have like three<font color="#E5E5E5"> different</font>

719
00:23:22,700 --> 00:23:26,090
risk levels and you<font color="#E5E5E5"> tag your</font>

720
00:23:24,380 --> 00:23:27,440
<font color="#E5E5E5">applications you know risk level 1 2 3</font>

721
00:23:26,090 --> 00:23:29,149
<font color="#E5E5E5">and when you're deploying them through</font>

722
00:23:27,440 --> 00:23:30,320
your pipeline<font color="#E5E5E5"> that container gets</font>

723
00:23:29,150 --> 00:23:31,850
deployed<font color="#CCCCCC"> in two different</font><font color="#E5E5E5"> clusters</font>

724
00:23:30,320 --> 00:23:33,050
depending on the label<font color="#CCCCCC"> that you've</font>

725
00:23:31,850 --> 00:23:35,419
attached to it<font color="#E5E5E5"> so then you're creating</font>

726
00:23:33,050 --> 00:23:38,060
separation amongst the containers<font color="#E5E5E5"> that's</font>

727
00:23:35,420 --> 00:23:39,620
one of the<font color="#E5E5E5"> uses of of clustering but</font>

728
00:23:38,060 --> 00:23:40,790
there's many other<font color="#E5E5E5"> uses</font><font color="#CCCCCC"> for it</font><font color="#E5E5E5"> as well</font>

729
00:23:39,620 --> 00:23:43,129
<font color="#CCCCCC">but</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> from a security</font><font color="#E5E5E5"> perspective</font>

730
00:23:40,790 --> 00:23:44,810
and you can do that<font color="#E5E5E5"> as well with with</font>

731
00:23:43,130 --> 00:23:46,580
<font color="#E5E5E5">Cloud Foundry</font><font color="#CCCCCC"> you know they have the</font>

732
00:23:44,810 --> 00:23:48,950
same similar<font color="#E5E5E5"> concept they call them</font>

733
00:23:46,580 --> 00:23:50,540
elastic clusters and you know you can

734
00:23:48,950 --> 00:23:51,800
set up<font color="#CCCCCC"> multiple elastic clusters and</font><font color="#E5E5E5"> you</font>

735
00:23:50,540 --> 00:23:53,750
can deploy containers into different

736
00:23:51,800 --> 00:23:55,190
clusters depending on what you're<font color="#CCCCCC"> doing</font>

737
00:23:53,750 --> 00:23:58,520
the risk level and however<font color="#E5E5E5"> you've</font>

738
00:23:55,190 --> 00:24:00,560
architected your system<font color="#CCCCCC"> so cloud foundry</font>

739
00:23:58,520 --> 00:24:01,639
does that<font color="#CCCCCC"> dare</font><font color="#E5E5E5"> container orchestration</font>

740
00:24:00,560 --> 00:24:04,730
of scheduling it's called<font color="#E5E5E5"> diego</font>

741
00:24:01,640 --> 00:24:07,010
kubernetes you know kubernetes of course

742
00:24:04,730 --> 00:24:09,050
docker container docker containers<font color="#E5E5E5"> or</font>

743
00:24:07,010 --> 00:24:11,360
engine<font color="#E5E5E5"> docker engine containers and then</font>

744
00:24:09,050 --> 00:24:13,940
of<font color="#CCCCCC"> course</font><font color="#E5E5E5"> there's swarm then there's the</font>

745
00:24:11,360 --> 00:24:16,040
packaging and staging right<font color="#E5E5E5"> so there's</font>

746
00:24:13,940 --> 00:24:18,260
the open shifts<font color="#E5E5E5"> s2i and there's the</font>

747
00:24:16,040 --> 00:24:20,149
cloud foundry<font color="#CCCCCC"> build packs</font><font color="#E5E5E5"> those are the</font>

748
00:24:18,260 --> 00:24:21,470
more popular ones and<font color="#E5E5E5"> then they also</font>

749
00:24:20,150 --> 00:24:22,140
underneath<font color="#E5E5E5"> the containers you need some</font>

750
00:24:21,470 --> 00:24:24,030
sort<font color="#CCCCCC"> of</font>

751
00:24:22,140 --> 00:24:25,410
I mean containers are up here<font color="#E5E5E5"> you</font><font color="#CCCCCC"> need</font>

752
00:24:24,030 --> 00:24:28,050
to<font color="#CCCCCC"> run them</font><font color="#E5E5E5"> on top of something is</font>

753
00:24:25,410 --> 00:24:29,490
either<font color="#E5E5E5"> bare metal or or some sort of</font>

754
00:24:28,050 --> 00:24:31,620
hardware virtualization<font color="#E5E5E5"> typically you</font>

755
00:24:29,490 --> 00:24:33,540
run them<font color="#E5E5E5"> on top</font><font color="#CCCCCC"> of some sort of ayahs</font>

756
00:24:31,620 --> 00:24:35,310
and so you need to orchestrate that<font color="#E5E5E5"> so</font>

757
00:24:33,540 --> 00:24:36,629
typically<font color="#CCCCCC"> ansible</font><font color="#E5E5E5"> is the most popular</font>

758
00:24:35,310 --> 00:24:38,250
one<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> how York is straight your</font>

759
00:24:36,630 --> 00:24:40,470
virtual machines on top of which you

760
00:24:38,250 --> 00:24:42,660
<font color="#E5E5E5">employ it you deploy your containers and</font>

761
00:24:40,470 --> 00:24:44,820
the<font color="#CCCCCC"> cloud foundry uses Bosh</font>

762
00:24:42,660 --> 00:24:46,380
so Bosh deploys the<font color="#E5E5E5"> virtual machines and</font>

763
00:24:44,820 --> 00:24:48,899
then once you've<font color="#CCCCCC"> got those virtual</font>

764
00:24:46,380 --> 00:24:50,700
machines then<font color="#CCCCCC"> diego comes in which does</font>

765
00:24:48,900 --> 00:24:52,110
the scheduling and automation<font color="#E5E5E5"> and</font><font color="#CCCCCC"> all</font>

766
00:24:50,700 --> 00:24:53,850
that kind of<font color="#E5E5E5"> stuff for the containers so</font>

767
00:24:52,110 --> 00:24:55,080
so hopefully that<font color="#CCCCCC"> makes</font><font color="#E5E5E5"> sense that how</font>

768
00:24:53,850 --> 00:24:57,659
these things<font color="#E5E5E5"> come at different levels</font>

769
00:24:55,080 --> 00:24:59,189
and how they play<font color="#E5E5E5"> out together in terms</font>

770
00:24:57,660 --> 00:25:01,050
of platform<font color="#CCCCCC"> as-a-service you have things</font>

771
00:24:59,190 --> 00:25:02,550
like<font color="#CCCCCC"> open</font><font color="#E5E5E5"> shift or</font><font color="#CCCCCC"> Cloud Foundry</font><font color="#E5E5E5"> so</font>

772
00:25:01,050 --> 00:25:05,340
Cloud Foundry brings it all together<font color="#E5E5E5"> so</font>

773
00:25:02,550 --> 00:25:06,780
it includes<font color="#E5E5E5"> Diego and Bosh and garden</font>

774
00:25:05,340 --> 00:25:08,340
<font color="#E5E5E5">and all this stuff</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you know logging</font>

775
00:25:06,780 --> 00:25:09,990
<font color="#E5E5E5">and database and all the other</font>

776
00:25:08,340 --> 00:25:12,510
facilities<font color="#CCCCCC"> you need</font><font color="#E5E5E5"> to have a pass and</font>

777
00:25:09,990 --> 00:25:14,100
then puts puts<font color="#E5E5E5"> that together</font><font color="#CCCCCC"> that you</font>

778
00:25:12,510 --> 00:25:15,780
can build an application<font color="#E5E5E5"> on top of</font>

779
00:25:14,100 --> 00:25:18,300
there's also<font color="#CCCCCC"> OpenShift</font>

780
00:25:15,780 --> 00:25:19,860
<font color="#E5E5E5">that also provides a pass and so these</font>

781
00:25:18,300 --> 00:25:22,350
tools<font color="#E5E5E5"> have evolved at the same time</font>

782
00:25:19,860 --> 00:25:24,090
independently<font color="#E5E5E5"> so there is a bunch of</font>

783
00:25:22,350 --> 00:25:25,530
crossover there's a lot of<font color="#E5E5E5"> confusion you</font>

784
00:25:24,090 --> 00:25:27,600
<font color="#CCCCCC">know</font><font color="#E5E5E5"> some of these people</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> talk to</font>

785
00:25:25,530 --> 00:25:29,430
each other and this market<font color="#E5E5E5"> is fairly new</font>

786
00:25:27,600 --> 00:25:31,649
<font color="#E5E5E5">so none</font><font color="#CCCCCC"> of this is sort of cut and</font><font color="#E5E5E5"> dry</font>

787
00:25:29,430 --> 00:25:33,780
<font color="#CCCCCC">that like this</font><font color="#E5E5E5"> does just</font><font color="#CCCCCC"> this you know</font>

788
00:25:31,650 --> 00:25:34,830
some kubernetes might do some scheduling

789
00:25:33,780 --> 00:25:38,129
<font color="#CCCCCC">but it might</font><font color="#E5E5E5"> also do some other stuff</font>

790
00:25:34,830 --> 00:25:39,720
<font color="#CCCCCC">and</font><font color="#E5E5E5"> you know</font><font color="#CCCCCC"> Cloud Foundry does multiple</font>

791
00:25:38,130 --> 00:25:40,980
<font color="#CCCCCC">different things</font><font color="#E5E5E5"> that's that's because</font>

792
00:25:39,720 --> 00:25:43,020
these things<font color="#E5E5E5"> have</font><font color="#CCCCCC"> been evolving</font>

793
00:25:40,980 --> 00:25:45,570
<font color="#CCCCCC">independently over</font><font color="#E5E5E5"> time but as time goes</font>

794
00:25:43,020 --> 00:25:47,520
<font color="#CCCCCC">by and as this ecosystem matures</font><font color="#E5E5E5"> we'll</font>

795
00:25:45,570 --> 00:25:49,679
see some<font color="#CCCCCC"> of these things settle</font><font color="#E5E5E5"> down</font>

796
00:25:47,520 --> 00:25:51,660
<font color="#E5E5E5">some players will go away some of</font><font color="#CCCCCC"> them</font>

797
00:25:49,680 --> 00:25:54,210
will<font color="#E5E5E5"> grow and absorb the others and and</font>

798
00:25:51,660 --> 00:25:56,580
in five<font color="#E5E5E5"> years from</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> this won't look</font>

799
00:25:54,210 --> 00:25:58,290
the same I<font color="#E5E5E5"> mean if you look at you</font><font color="#CCCCCC"> know</font>

800
00:25:56,580 --> 00:26:00,000
hardware virtualization I mean VMware

801
00:25:58,290 --> 00:26:02,159
has been around since<font color="#E5E5E5"> the</font><font color="#CCCCCC"> early 2000 so</font>

802
00:26:00,000 --> 00:26:03,690
it's almost like<font color="#E5E5E5"> 17</font><font color="#CCCCCC"> years that</font><font color="#E5E5E5"> has</font><font color="#CCCCCC"> been</font>

803
00:26:02,160 --> 00:26:05,520
around right<font color="#E5E5E5"> so there's quite a bit of</font>

804
00:26:03,690 --> 00:26:07,680
<font color="#CCCCCC">time for it to mature you know</font>

805
00:26:05,520 --> 00:26:08,970
addressing<font color="#CCCCCC"> security and tooling and all</font>

806
00:26:07,680 --> 00:26:11,010
that kind of stuff<font color="#E5E5E5"> and whereas with</font>

807
00:26:08,970 --> 00:26:13,080
modern containers you know it's only

808
00:26:11,010 --> 00:26:15,210
been<font color="#E5E5E5"> about five</font><font color="#CCCCCC"> years or</font><font color="#E5E5E5"> so so we've got</font>

809
00:26:13,080 --> 00:26:17,040
a way to go<font color="#E5E5E5"> but it's good it's</font><font color="#CCCCCC"> very</font>

810
00:26:15,210 --> 00:26:21,210
exciting<font color="#E5E5E5"> lots is being done in security</font>

811
00:26:17,040 --> 00:26:23,310
and and that<font color="#E5E5E5"> that is a good thing so</font>

812
00:26:21,210 --> 00:26:24,930
quick look at the difference between

813
00:26:23,310 --> 00:26:26,610
<font color="#E5E5E5">containerization and virtualization</font>

814
00:26:24,930 --> 00:26:29,250
because<font color="#E5E5E5"> I know that this is not always</font>

815
00:26:26,610 --> 00:26:32,490
<font color="#E5E5E5">clear so in containerization containers</font>

816
00:26:29,250 --> 00:26:34,830
always share the<font color="#E5E5E5"> same kernel</font><font color="#CCCCCC"> right so on</font>

817
00:26:32,490 --> 00:26:38,159
your hosts when you install docker or<font color="#E5E5E5"> go</font>

818
00:26:34,830 --> 00:26:40,439
or whatever<font color="#CCCCCC"> it is if</font><font color="#E5E5E5"> that's a Mac or if</font>

819
00:26:38,159 --> 00:26:42,029
<font color="#E5E5E5">that's a whatever Linux flavor you'll</font>

820
00:26:40,440 --> 00:26:43,320
only be<font color="#CCCCCC"> able to you</font><font color="#E5E5E5"> know all the</font>

821
00:26:42,029 --> 00:26:44,429
different containers that<font color="#E5E5E5"> are running I</font>

822
00:26:43,320 --> 00:26:47,129
mean that's the kernel<font color="#E5E5E5"> that you're using</font>

823
00:26:44,429 --> 00:26:49,110
right<font color="#E5E5E5"> if you say on that computer</font><font color="#CCCCCC"> you</font>

824
00:26:47,130 --> 00:26:51,240
install<font color="#E5E5E5"> a virtual</font><font color="#CCCCCC"> machine</font><font color="#E5E5E5"> and then in</font>

825
00:26:49,110 --> 00:26:53,250
that VM<font color="#CCCCCC"> you deploy containers again</font>

826
00:26:51,240 --> 00:26:54,600
those containers<font color="#E5E5E5"> will be</font><font color="#CCCCCC"> sharing the</font>

827
00:26:53,250 --> 00:26:55,799
kernel from<font color="#CCCCCC"> that</font><font color="#E5E5E5"> virtual machine</font><font color="#CCCCCC"> that</font>

828
00:26:54,600 --> 00:26:58,408
<font color="#E5E5E5">you've deployed right so they're all</font>

829
00:26:55,799 --> 00:27:02,070
<font color="#E5E5E5">whatever is their host</font><font color="#CCCCCC"> they will all</font><font color="#E5E5E5"> be</font>

830
00:26:58,409 --> 00:27:03,659
sharing the<font color="#CCCCCC"> the kernel with that host so</font>

831
00:27:02,070 --> 00:27:04,678
<font color="#E5E5E5">they are fast so you can't use</font>

832
00:27:03,659 --> 00:27:06,029
containers<font color="#CCCCCC"> with different operating</font>

833
00:27:04,679 --> 00:27:07,380
<font color="#E5E5E5">systems right like as I mentioned so if</font>

834
00:27:06,029 --> 00:27:09,360
you've<font color="#CCCCCC"> installed docker on a Linux</font>

835
00:27:07,380 --> 00:27:11,010
machine<font color="#CCCCCC"> or a Linux VM those containers</font>

836
00:27:09,360 --> 00:27:12,510
<font color="#CCCCCC">Robbie Linux containers right if you</font>

837
00:27:11,010 --> 00:27:15,570
want a different<font color="#CCCCCC"> one you have to set up</font>

838
00:27:12,510 --> 00:27:17,039
a<font color="#E5E5E5"> different VM with say</font><font color="#CCCCCC"> Windows kernel</font>

839
00:27:15,570 --> 00:27:18,889
and<font color="#E5E5E5"> then you can deploy</font><font color="#CCCCCC"> containers that</font>

840
00:27:17,039 --> 00:27:20,669
<font color="#E5E5E5">all go in there</font>

841
00:27:18,889 --> 00:27:21,959
containers are faster they're

842
00:27:20,669 --> 00:27:23,490
lightweight they're more portable<font color="#E5E5E5"> and</font>

843
00:27:21,960 --> 00:27:25,019
they scale more efficiently why is all

844
00:27:23,490 --> 00:27:26,880
this because<font color="#E5E5E5"> there's no hardware</font>

845
00:27:25,019 --> 00:27:28,289
emulation but<font color="#CCCCCC"> the neck sharing of the</font>

846
00:27:26,880 --> 00:27:30,059
kernel has something to<font color="#E5E5E5"> do with it as</font>

847
00:27:28,289 --> 00:27:32,220
well<font color="#E5E5E5"> right</font><font color="#CCCCCC"> because if you don't have</font><font color="#E5E5E5"> to</font>

848
00:27:30,059 --> 00:27:33,450
boot a full full stack every time that's

849
00:27:32,220 --> 00:27:35,309
<font color="#CCCCCC">gonna be really fast right like when</font>

850
00:27:33,450 --> 00:27:38,399
you're<font color="#E5E5E5"> firing</font><font color="#CCCCCC"> off a VM I mean it's fast</font>

851
00:27:35,309 --> 00:27:39,840
<font color="#E5E5E5">if you got an SSD specially but the</font>

852
00:27:38,399 --> 00:27:41,459
thing<font color="#CCCCCC"> is it still has to</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> through the</font>

853
00:27:39,840 --> 00:27:43,260
full<font color="#CCCCCC"> process start the kernel do all</font>

854
00:27:41,460 --> 00:27:44,460
that stuff<font color="#CCCCCC"> load the full OS and then</font>

855
00:27:43,260 --> 00:27:46,379
<font color="#E5E5E5">you're in but when you start up a</font>

856
00:27:44,460 --> 00:27:47,820
container that<font color="#E5E5E5"> OS is already there is</font>

857
00:27:46,380 --> 00:27:49,200
sharing the kernel all that stuff is

858
00:27:47,820 --> 00:27:51,149
there the libraries are loaded all it's

859
00:27:49,200 --> 00:27:52,950
doing is just<font color="#CCCCCC"> loading that top part of</font>

860
00:27:51,149 --> 00:27:55,199
<font color="#CCCCCC">the stack so it's much quicker much like</font>

861
00:27:52,950 --> 00:27:56,730
or<font color="#CCCCCC"> lightweight</font><font color="#E5E5E5"> and that's what's</font>

862
00:27:55,200 --> 00:27:57,870
attractive to the to the development

863
00:27:56,730 --> 00:27:59,970
community that wants to<font color="#E5E5E5"> really quickly</font>

864
00:27:57,870 --> 00:28:01,529
<font color="#E5E5E5">do that continuous integration and</font>

865
00:27:59,970 --> 00:28:02,899
<font color="#E5E5E5">continuous</font><font color="#CCCCCC"> development and you know roll</font>

866
00:28:01,529 --> 00:28:05,909
something<font color="#E5E5E5"> out and test it really quickly</font>

867
00:28:02,899 --> 00:28:09,779
and and this<font color="#E5E5E5"> this lightness really lends</font>

868
00:28:05,909 --> 00:28:10,950
<font color="#CCCCCC">itself well to</font><font color="#E5E5E5"> that they don't provide</font>

869
00:28:09,779 --> 00:28:12,330
<font color="#CCCCCC">the same level of isolation as</font>

870
00:28:10,950 --> 00:28:13,769
virtualization right<font color="#CCCCCC"> obviously I've been</font>

871
00:28:12,330 --> 00:28:15,360
saying this<font color="#E5E5E5"> over and</font><font color="#CCCCCC"> over you're sharing</font>

872
00:28:13,769 --> 00:28:16,740
the kernel<font color="#E5E5E5"> so there's not as much</font><font color="#CCCCCC"> the</font>

873
00:28:15,360 --> 00:28:18,418
same level of isolation<font color="#E5E5E5"> it's not that</font>

874
00:28:16,740 --> 00:28:19,950
everybody's got<font color="#E5E5E5"> their</font><font color="#CCCCCC"> own</font><font color="#E5E5E5"> you know</font><font color="#CCCCCC"> it's</font>

875
00:28:18,419 --> 00:28:22,470
like one brain and multiple people

876
00:28:19,950 --> 00:28:23,940
<font color="#CCCCCC">sharing that brain if that brain gets</font>

877
00:28:22,470 --> 00:28:25,710
<font color="#CCCCCC">diseased to all the people sharing that</font>

878
00:28:23,940 --> 00:28:27,299
brain how will share the disease right

879
00:28:25,710 --> 00:28:29,220
so if you have your<font color="#E5E5E5"> everybody's got</font>

880
00:28:27,299 --> 00:28:30,240
their own<font color="#E5E5E5"> brains every separate kernels</font>

881
00:28:29,220 --> 00:28:32,190
if one of them<font color="#CCCCCC"> gets sick it doesn't</font>

882
00:28:30,240 --> 00:28:33,600
<font color="#CCCCCC">impact</font><font color="#E5E5E5"> the other one so that's</font><font color="#CCCCCC"> the</font>

883
00:28:32,190 --> 00:28:35,429
<font color="#E5E5E5">danger of containerization and that's</font>

884
00:28:33,600 --> 00:28:38,039
why you have to be really careful when

885
00:28:35,429 --> 00:28:39,389
using it<font color="#CCCCCC"> virtualization on the other</font>

886
00:28:38,039 --> 00:28:40,830
hand is mature like I said it's<font color="#E5E5E5"> been</font>

887
00:28:39,389 --> 00:28:43,350
<font color="#E5E5E5">around for quite a while over a decade</font>

888
00:28:40,830 --> 00:28:45,270
extensive ecosystem allows for mixed

889
00:28:43,350 --> 00:28:47,699
kernels<font color="#CCCCCC"> I mean each VM</font><font color="#E5E5E5"> has got its own</font>

890
00:28:45,270 --> 00:28:48,850
kernel<font color="#CCCCCC"> on the same platform the host</font>

891
00:28:47,700 --> 00:28:50,650
emulates the hardware

892
00:28:48,850 --> 00:28:52,030
to the<font color="#CCCCCC"> VM so there's this hardware</font>

893
00:28:50,650 --> 00:28:53,740
emulation<font color="#E5E5E5"> which makes it a little bit</font>

894
00:28:52,030 --> 00:28:55,330
<font color="#E5E5E5">slower than containers and it looks like</font>

895
00:28:53,740 --> 00:28:57,820
it's running<font color="#E5E5E5"> on separate hardware from</font>

896
00:28:55,330 --> 00:28:59,230
<font color="#CCCCCC">the perspective</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> hypervisor is</font>

897
00:28:57,820 --> 00:29:01,600
<font color="#E5E5E5">the security boundary right so that's</font>

898
00:28:59,230 --> 00:29:02,710
<font color="#E5E5E5">where it comes that's where if you break</font>

899
00:29:01,600 --> 00:29:04,330
out of<font color="#E5E5E5"> the hypervisor and there have</font>

900
00:29:02,710 --> 00:29:05,740
<font color="#CCCCCC">been known vulnerabilities that</font><font color="#E5E5E5"> have</font>

901
00:29:04,330 --> 00:29:07,990
demonstrated<font color="#E5E5E5"> that you can break out</font><font color="#CCCCCC"> of a</font>

902
00:29:05,740 --> 00:29:09,820
hypervisor but again the<font color="#CCCCCC"> technology is</font>

903
00:29:07,990 --> 00:29:12,900
matured<font color="#E5E5E5"> and hopefully that will happen</font>

904
00:29:09,820 --> 00:29:12,899
less as we go along

905
00:29:14,130 --> 00:29:17,860
here's a quick graphic<font color="#CCCCCC"> just to</font>

906
00:29:16,060 --> 00:29:19,510
<font color="#E5E5E5">demonstrate that there's a type 2</font>

907
00:29:17,860 --> 00:29:21,010
hypervisor right it's not<font color="#CCCCCC"> the bare metal</font>

908
00:29:19,510 --> 00:29:23,110
<font color="#E5E5E5">where you've got the server</font>

909
00:29:21,010 --> 00:29:24,879
you've got the host OS so it's like a

910
00:29:23,110 --> 00:29:27,250
<font color="#E5E5E5">typical you know you had a</font><font color="#CCCCCC"> laptop you're</font>

911
00:29:24,880 --> 00:29:30,070
running Windows or Mac on it then<font color="#CCCCCC"> you</font>

912
00:29:27,250 --> 00:29:31,990
put like you know<font color="#CCCCCC"> VM workstation as</font><font color="#E5E5E5"> your</font>

913
00:29:30,070 --> 00:29:34,450
hypervisor and<font color="#E5E5E5"> then you got a full stack</font>

914
00:29:31,990 --> 00:29:36,130
right<font color="#E5E5E5"> each of</font><font color="#CCCCCC"> those have</font><font color="#E5E5E5"> their own guest</font>

915
00:29:34,450 --> 00:29:38,290
OS<font color="#E5E5E5"> they have their own binaries and</font>

916
00:29:36,130 --> 00:29:39,760
libraries<font color="#CCCCCC"> and their own apps right</font><font color="#E5E5E5"> but</font>

917
00:29:38,290 --> 00:29:41,379
on the other<font color="#E5E5E5"> side here you've got the</font>

918
00:29:39,760 --> 00:29:43,660
server and your host OS whatever it may

919
00:29:41,380 --> 00:29:45,310
be Mac or Windows<font color="#E5E5E5"> but then there is no</font>

920
00:29:43,660 --> 00:29:47,260
hypervisor you got the runtime<font color="#E5E5E5"> like</font>

921
00:29:45,310 --> 00:29:49,210
you'll have<font color="#E5E5E5"> the docker run time and then</font>

922
00:29:47,260 --> 00:29:51,610
that<font color="#E5E5E5"> runtime is using the kernel or the</font>

923
00:29:49,210 --> 00:29:55,000
<font color="#E5E5E5">host kernel so whatever your machine had</font>

924
00:29:51,610 --> 00:29:56,500
right if you had a Mac<font color="#E5E5E5"> laptop or Windows</font>

925
00:29:55,000 --> 00:29:58,420
machine or whatever<font color="#CCCCCC"> it</font><font color="#E5E5E5"> was that's the</font>

926
00:29:56,500 --> 00:30:00,280
<font color="#E5E5E5">host alas so the runtime is using that</font>

927
00:29:58,420 --> 00:30:01,750
and everybody's sharing<font color="#E5E5E5"> that kernel now</font>

928
00:30:00,280 --> 00:30:02,920
you can see that there's the orange<font color="#E5E5E5"> one</font>

929
00:30:01,750 --> 00:30:04,840
on the<font color="#CCCCCC"> Left</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> the first two</font>

930
00:30:02,920 --> 00:30:06,220
containers<font color="#E5E5E5"> they're sharing binaries in</font>

931
00:30:04,840 --> 00:30:08,080
<font color="#E5E5E5">libraries so you can't have some</font>

932
00:30:06,220 --> 00:30:09,430
containers that again<font color="#E5E5E5"> for efficiency</font>

933
00:30:08,080 --> 00:30:11,649
that shared libraries and binary<font color="#E5E5E5"> so</font>

934
00:30:09,430 --> 00:30:14,650
<font color="#E5E5E5">they're the group the four on the right</font>

935
00:30:11,650 --> 00:30:16,360
and the two on the<font color="#CCCCCC"> left those four on</font>

936
00:30:14,650 --> 00:30:17,530
the right<font color="#CCCCCC"> are sharing some libraries and</font>

937
00:30:16,360 --> 00:30:20,110
the other ones are sharing some other

938
00:30:17,530 --> 00:30:22,570
libraries but but other than that

939
00:30:20,110 --> 00:30:26,590
<font color="#E5E5E5">there's there's a shared kernel down</font>

940
00:30:22,570 --> 00:30:28,060
below over here<font color="#E5E5E5"> so let's look at a</font>

941
00:30:26,590 --> 00:30:30,250
<font color="#E5E5E5">little bit of the behind</font><font color="#CCCCCC"> the scenes is</font>

942
00:30:28,060 --> 00:30:32,980
how what the darker architecture<font color="#E5E5E5"> looks</font>

943
00:30:30,250 --> 00:30:34,900
like<font color="#E5E5E5"> we'll and then we'll look at the</font>

944
00:30:32,980 --> 00:30:38,560
quickly behind<font color="#CCCCCC"> the scene of garden Cloud</font>

945
00:30:34,900 --> 00:30:40,270
Foundry as well so it may<font color="#E5E5E5"> be a little</font>

946
00:30:38,560 --> 00:30:43,060
<font color="#E5E5E5">bit small from the back there but you</font>

947
00:30:40,270 --> 00:30:45,070
can see here we've got<font color="#E5E5E5"> the so the</font>

948
00:30:43,060 --> 00:30:46,990
container accesses the Linux kernel

949
00:30:45,070 --> 00:30:49,899
virtualization in many ways right so if

950
00:30:46,990 --> 00:30:51,580
you've got the<font color="#E5E5E5"> the docker</font><font color="#CCCCCC"> runtime up</font>

951
00:30:49,900 --> 00:30:53,920
here to access<font color="#E5E5E5"> the Linux kernel</font>

952
00:30:51,580 --> 00:30:55,689
virtualization facilities<font color="#CCCCCC"> you know you</font>

953
00:30:53,920 --> 00:30:59,320
can do<font color="#E5E5E5"> it through</font><font color="#CCCCCC"> Lib container</font><font color="#E5E5E5"> libvirt</font>

954
00:30:55,690 --> 00:31:01,420
<font color="#CCCCCC">Lexi etc so before version</font><font color="#E5E5E5"> point</font><font color="#CCCCCC"> 9 of</font>

955
00:30:59,320 --> 00:31:04,450
docker<font color="#E5E5E5"> Lexi was the default execution</font>

956
00:31:01,420 --> 00:31:06,340
but then what they've done is after 0.9

957
00:31:04,450 --> 00:31:07,900
<font color="#E5E5E5">they're using</font><font color="#CCCCCC"> Runcie which is now</font>

958
00:31:06,340 --> 00:31:10,149
standardized<font color="#E5E5E5"> or also known as</font><font color="#CCCCCC"> lip</font>

959
00:31:07,900 --> 00:31:11,800
container<font color="#E5E5E5"> which is written and go is</font>

960
00:31:10,150 --> 00:31:14,290
<font color="#CCCCCC">open-source allows for direct use of</font>

961
00:31:11,800 --> 00:31:16,810
<font color="#CCCCCC">Linux</font><font color="#E5E5E5"> virtualization facilities but they</font>

962
00:31:14,290 --> 00:31:18,970
still support they still support

963
00:31:16,810 --> 00:31:20,860
abstracted virtualization interfaces so

964
00:31:18,970 --> 00:31:23,140
although this<font color="#CCCCCC"> is natively supported they</font>

965
00:31:20,860 --> 00:31:26,169
still support the other interfaces<font color="#E5E5E5"> as</font>

966
00:31:23,140 --> 00:31:28,330
well<font color="#E5E5E5"> or I should say docker does</font><font color="#CCCCCC"> so</font>

967
00:31:26,170 --> 00:31:31,090
actions<font color="#CCCCCC"> so typically things you do are</font>

968
00:31:28,330 --> 00:31:33,730
done to the darker base image<font color="#E5E5E5"> so it uses</font>

969
00:31:31,090 --> 00:31:36,070
<font color="#E5E5E5">Union FS so the layers are created so</font>

970
00:31:33,730 --> 00:31:37,450
docker images there's<font color="#CCCCCC"> the base image and</font>

971
00:31:36,070 --> 00:31:39,220
you<font color="#E5E5E5"> can put layers on</font><font color="#CCCCCC"> top</font><font color="#E5E5E5"> of it so it's</font>

972
00:31:37,450 --> 00:31:40,690
an<font color="#E5E5E5"> interesting way of doing</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and it</font>

973
00:31:39,220 --> 00:31:42,160
allows<font color="#CCCCCC"> for recreation so we could like</font>

974
00:31:40,690 --> 00:31:44,020
recreate<font color="#E5E5E5"> the layers by putting things</font>

975
00:31:42,160 --> 00:31:45,670
back together and the other thing to

976
00:31:44,020 --> 00:31:47,139
notice that the docker daemon runs this

977
00:31:45,670 --> 00:31:49,390
route<font color="#E5E5E5"> so this may or may not be a good</font>

978
00:31:47,140 --> 00:31:53,020
<font color="#CCCCCC">thing</font><font color="#E5E5E5"> you can see the architecture here</font>

979
00:31:49,390 --> 00:31:54,910
real quick<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> see basically</font>

980
00:31:53,020 --> 00:31:56,020
there's your again it may<font color="#E5E5E5"> be too small</font>

981
00:31:54,910 --> 00:31:58,510
<font color="#CCCCCC">to the back but you</font><font color="#E5E5E5"> got your docker</font>

982
00:31:56,020 --> 00:32:00,010
daemon up here and the docker daemon<font color="#CCCCCC"> you</font>

983
00:31:58,510 --> 00:32:02,379
can talk<font color="#E5E5E5"> to it you know there's it</font>

984
00:32:00,010 --> 00:32:04,330
exposes a bunch of<font color="#CCCCCC"> api's right so they</font>

985
00:32:02,380 --> 00:32:06,130
provide a<font color="#CCCCCC"> command-line interface all</font>

986
00:32:04,330 --> 00:32:08,320
that<font color="#CCCCCC"> command-line interface all it's</font>

987
00:32:06,130 --> 00:32:10,180
doing is<font color="#CCCCCC"> just talking to</font><font color="#E5E5E5"> that API</font><font color="#CCCCCC"> I mean</font>

988
00:32:08,320 --> 00:32:11,740
if you picked<font color="#E5E5E5"> up that API you could even</font>

989
00:32:10,180 --> 00:32:13,060
run<font color="#E5E5E5"> your</font><font color="#CCCCCC"> own</font><font color="#E5E5E5"> interface to it right</font>

990
00:32:11,740 --> 00:32:14,680
but they've provided<font color="#E5E5E5"> a command-line</font>

991
00:32:13,060 --> 00:32:16,419
<font color="#CCCCCC">interface that</font><font color="#E5E5E5"> talks to that API already</font>

992
00:32:14,680 --> 00:32:19,270
and then you<font color="#CCCCCC"> can do things like build</font>

993
00:32:16,420 --> 00:32:20,740
<font color="#CCCCCC">poll run</font><font color="#E5E5E5"> and so when you say</font><font color="#CCCCCC"> let's say</font>

994
00:32:19,270 --> 00:32:21,970
for example<font color="#E5E5E5"> to do a docker run and the</font>

995
00:32:20,740 --> 00:32:24,190
image is not there in your<font color="#E5E5E5"> local</font>

996
00:32:21,970 --> 00:32:25,750
<font color="#CCCCCC">repository what the docker demon will do</font>

997
00:32:24,190 --> 00:32:27,670
is it'll go to the<font color="#E5E5E5"> registry out there</font>

998
00:32:25,750 --> 00:32:29,320
somewhere<font color="#E5E5E5"> and says hey</font><font color="#CCCCCC"> Ferrara is trying</font>

999
00:32:27,670 --> 00:32:30,880
to do a docker run on this<font color="#E5E5E5"> one image and</font>

1000
00:32:29,320 --> 00:32:33,340
I don't<font color="#E5E5E5"> have it and it will download</font>

1001
00:32:30,880 --> 00:32:35,530
<font color="#E5E5E5">that</font><font color="#CCCCCC"> to your local image repository and</font>

1002
00:32:33,340 --> 00:32:37,060
then it will create an instance<font color="#E5E5E5"> based on</font>

1003
00:32:35,530 --> 00:32:38,950
that image<font color="#E5E5E5"> right so either you have that</font>

1004
00:32:37,060 --> 00:32:40,960
<font color="#E5E5E5">already or you don't and if you</font><font color="#CCCCCC"> don't it</font>

1005
00:32:38,950 --> 00:32:42,460
will go and get<font color="#E5E5E5"> it</font><font color="#CCCCCC"> for you</font><font color="#E5E5E5"> and then</font>

1006
00:32:40,960 --> 00:32:43,690
<font color="#E5E5E5">it'll create the container instance so</font>

1007
00:32:42,460 --> 00:32:45,970
here we've<font color="#CCCCCC"> got like four different</font>

1008
00:32:43,690 --> 00:32:49,330
<font color="#E5E5E5">container instances based on that image</font>

1009
00:32:45,970 --> 00:32:50,620
and then<font color="#E5E5E5"> this is the swarm architecture</font>

1010
00:32:49,330 --> 00:32:52,270
so we got two clusters<font color="#E5E5E5"> here as you can</font>

1011
00:32:50,620 --> 00:32:54,939
<font color="#CCCCCC">see this one cluster</font><font color="#E5E5E5"> in one cluster so</font>

1012
00:32:52,270 --> 00:32:56,590
before before swarm all these<font color="#E5E5E5"> containers</font>

1013
00:32:54,940 --> 00:32:58,600
would<font color="#E5E5E5"> have been in in one cluster there</font>

1014
00:32:56,590 --> 00:33:00,970
was no<font color="#E5E5E5"> separation right but with swarm</font>

1015
00:32:58,600 --> 00:33:02,530
<font color="#CCCCCC">you know basically</font><font color="#E5E5E5"> you can say hey I</font>

1016
00:33:00,970 --> 00:33:04,030
want these containers to go to this side

1017
00:33:02,530 --> 00:33:05,379
and I<font color="#E5E5E5"> want the other ones to go here and</font>

1018
00:33:04,030 --> 00:33:08,620
<font color="#E5E5E5">again</font><font color="#CCCCCC"> you can do this</font><font color="#E5E5E5"> based on labels</font>

1019
00:33:05,380 --> 00:33:11,200
and tags<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can architect it based</font>

1020
00:33:08,620 --> 00:33:12,399
on<font color="#E5E5E5"> your requirement and there's cluster</font>

1021
00:33:11,200 --> 00:33:15,350
managers that manage each of the

1022
00:33:12,400 --> 00:33:17,299
<font color="#CCCCCC">clusters</font><font color="#E5E5E5"> this is only showing</font><font color="#CCCCCC"> two class</font>

1023
00:33:15,350 --> 00:33:20,209
but as you can appreciate<font color="#E5E5E5"> you can have a</font>

1024
00:33:17,299 --> 00:33:21,679
lot<font color="#CCCCCC"> more than</font><font color="#E5E5E5"> that so what about garden</font>

1025
00:33:20,210 --> 00:33:23,150
that's<font color="#E5E5E5"> not a quick look at</font><font color="#CCCCCC"> that very</font>

1026
00:33:21,679 --> 00:33:24,530
<font color="#E5E5E5">similar architecture</font><font color="#CCCCCC"> all these things</font>

1027
00:33:23,150 --> 00:33:27,080
typically<font color="#E5E5E5"> they</font><font color="#CCCCCC"> have a demon so this one</font>

1028
00:33:24,530 --> 00:33:28,610
has a garden server so garden needs<font color="#E5E5E5"> to</font>

1029
00:33:27,080 --> 00:33:31,039
be called<font color="#E5E5E5"> warden and then what they did</font>

1030
00:33:28,610 --> 00:33:33,620
<font color="#CCCCCC">is they</font><font color="#E5E5E5"> rewrote it</font><font color="#CCCCCC"> and go so the the the</font>

1031
00:33:31,039 --> 00:33:35,539
the<font color="#CCCCCC"> W got dropped and</font><font color="#E5E5E5"> then the G from go</font>

1032
00:33:33,620 --> 00:33:38,120
got put in so award and became garden

1033
00:33:35,539 --> 00:33:40,220
and so what they what<font color="#E5E5E5"> they</font><font color="#CCCCCC"> did</font><font color="#E5E5E5"> is as a</font>

1034
00:33:38,120 --> 00:33:42,860
part of the rewrite they also<font color="#E5E5E5"> added this</font>

1035
00:33:40,220 --> 00:33:44,600
flexible<font color="#CCCCCC"> backend so</font><font color="#E5E5E5"> that this is</font><font color="#CCCCCC"> not all</font>

1036
00:33:42,860 --> 00:33:47,030
the in the previous versions<font color="#E5E5E5"> this was</font>

1037
00:33:44,600 --> 00:33:48,469
<font color="#E5E5E5">all</font><font color="#CCCCCC"> together so the server</font><font color="#E5E5E5"> and then the</font>

1038
00:33:47,030 --> 00:33:50,360
<font color="#CCCCCC">Linux backend work</font><font color="#E5E5E5"> together but this</font>

1039
00:33:48,470 --> 00:33:52,039
<font color="#E5E5E5">allows plug plug ability so you could</font>

1040
00:33:50,360 --> 00:33:53,539
actually take the<font color="#E5E5E5"> Linux back-end and</font>

1041
00:33:52,039 --> 00:33:55,580
puts a<font color="#CCCCCC"> Windows back-end or</font><font color="#E5E5E5"> some other</font>

1042
00:33:53,539 --> 00:33:57,590
<font color="#E5E5E5">back-end and easily adopt garden for</font>

1043
00:33:55,580 --> 00:33:59,030
different operating systems<font color="#E5E5E5"> and then the</font>

1044
00:33:57,590 --> 00:34:01,220
client works in a<font color="#E5E5E5"> similar way there's an</font>

1045
00:33:59,030 --> 00:34:02,539
API<font color="#CCCCCC"> that the server exposes and when</font>

1046
00:34:01,220 --> 00:34:04,400
you're you know<font color="#E5E5E5"> running the command line</font>

1047
00:34:02,539 --> 00:34:07,039
<font color="#CCCCCC">today</font><font color="#E5E5E5"> it's calling those functions to</font>

1048
00:34:04,400 --> 00:34:09,500
the<font color="#E5E5E5"> API to the garden protocol and then</font>

1049
00:34:07,039 --> 00:34:12,080
as similarly as you<font color="#E5E5E5"> saw with</font><font color="#CCCCCC"> with docker</font>

1050
00:34:09,500 --> 00:34:13,960
<font color="#CCCCCC">the</font><font color="#E5E5E5"> demon spawned off the you know it</font>

1051
00:34:12,080 --> 00:34:15,949
<font color="#E5E5E5">basically looked at the repository</font><font color="#CCCCCC"> and</font>

1052
00:34:13,960 --> 00:34:17,389
picked<font color="#E5E5E5"> it up up in an image and it</font>

1053
00:34:15,949 --> 00:34:19,460
created a container instance based<font color="#E5E5E5"> on</font>

1054
00:34:17,389 --> 00:34:21,980
<font color="#E5E5E5">that image</font><font color="#CCCCCC"> and similar thing happens</font>

1055
00:34:19,460 --> 00:34:24,109
<font color="#CCCCCC">here the garden server they have</font><font color="#E5E5E5"> built</font>

1056
00:34:21,980 --> 00:34:25,790
<font color="#CCCCCC">packs it's not</font><font color="#E5E5E5"> images and it's not</font>

1057
00:34:24,109 --> 00:34:28,759
layered they don't use<font color="#CCCCCC"> uni NFS a little</font>

1058
00:34:25,790 --> 00:34:30,859
bit of a different<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> but the</font><font color="#E5E5E5"> warden</font>

1059
00:34:28,760 --> 00:34:32,000
shell daemon will launch the the

1060
00:34:30,859 --> 00:34:33,350
instance and<font color="#CCCCCC"> then the app will run</font>

1061
00:34:32,000 --> 00:34:35,119
inside you can see there's multiple

1062
00:34:33,350 --> 00:34:37,429
containers<font color="#E5E5E5"> here that are managed by that</font>

1063
00:34:35,119 --> 00:34:38,690
<font color="#E5E5E5">so then the communication</font><font color="#CCCCCC"> between</font><font color="#E5E5E5"> the</font>

1064
00:34:37,429 --> 00:34:40,250
actual containers has done through the

1065
00:34:38,690 --> 00:34:41,780
back end and that's specific for

1066
00:34:40,250 --> 00:34:44,540
<font color="#CCCCCC">different you know different</font><font color="#E5E5E5"> operating</font>

1067
00:34:41,780 --> 00:34:45,830
systems<font color="#E5E5E5"> so here's a bit about it</font><font color="#CCCCCC"> so</font>

1068
00:34:44,540 --> 00:34:47,629
garden it was<font color="#CCCCCC"> warned and</font><font color="#E5E5E5"> written and</font>

1069
00:34:45,830 --> 00:34:49,580
rewritten and go it's got pluggable

1070
00:34:47,629 --> 00:34:50,118
backends for platforms as I showed you<font color="#CCCCCC"> a</font>

1071
00:34:49,580 --> 00:34:52,909
second ago

1072
00:34:50,119 --> 00:34:54,470
there's the<font color="#E5E5E5"> run see</font><font color="#CCCCCC"> backhand which</font><font color="#E5E5E5"> is</font>

1073
00:34:52,909 --> 00:34:57,109
<font color="#E5E5E5">Linux specific implementation of the</font>

1074
00:34:54,469 --> 00:34:59,600
garden interface<font color="#E5E5E5"> they're using that open</font>

1075
00:34:57,109 --> 00:35:02,869
container interface<font color="#CCCCCC"> OCI standard which</font>

1076
00:34:59,600 --> 00:35:04,640
<font color="#CCCCCC">is good a primer is used for all</font>

1077
00:35:02,869 --> 00:35:05,960
unprivileged containers and<font color="#E5E5E5"> then set</font>

1078
00:35:04,640 --> 00:35:07,700
comp is used for white listing which

1079
00:35:05,960 --> 00:35:09,830
restricts access to<font color="#CCCCCC"> this set of</font><font color="#E5E5E5"> system</font>

1080
00:35:07,700 --> 00:35:11,330
calls<font color="#E5E5E5"> which we mentioned earlier the</font>

1081
00:35:09,830 --> 00:35:14,330
<font color="#CCCCCC">warden</font><font color="#E5E5E5"> shell daemon that you saw in the</font>

1082
00:35:11,330 --> 00:35:17,390
diagram<font color="#E5E5E5"> on the on the right side there</font>

1083
00:35:14,330 --> 00:35:18,710
<font color="#CCCCCC">it's what is does is</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> root process for</font>

1084
00:35:17,390 --> 00:35:21,440
<font color="#CCCCCC">managing containers right</font><font color="#E5E5E5"> so when you</font>

1085
00:35:18,710 --> 00:35:22,839
<font color="#E5E5E5">the when you want</font><font color="#CCCCCC"> to actually manage the</font>

1086
00:35:21,440 --> 00:35:25,010
container instances that's done by<font color="#E5E5E5"> the</font>

1087
00:35:22,839 --> 00:35:26,390
warden shell<font color="#E5E5E5"> daemon and</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> stream</font>

1088
00:35:25,010 --> 00:35:27,500
standard output<font color="#E5E5E5"> and errors back to the</font>

1089
00:35:26,390 --> 00:35:29,450
client<font color="#CCCCCC"> for</font>

1090
00:35:27,500 --> 00:35:31,370
<font color="#E5E5E5">in troubleshooting another this is not</font>

1091
00:35:29,450 --> 00:35:34,759
really small<font color="#CCCCCC"> so I apologize but this</font>

1092
00:35:31,370 --> 00:35:37,730
this<font color="#CCCCCC"> Inc this shows the whole Cloud</font>

1093
00:35:34,760 --> 00:35:39,410
Foundry pass right<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> VA go here</font>

1094
00:35:37,730 --> 00:35:41,780
this is your container orchestration but

1095
00:35:39,410 --> 00:35:44,660
it<font color="#E5E5E5"> passes more than that right so here</font>

1096
00:35:41,780 --> 00:35:47,240
is where your<font color="#CCCCCC"> guard there's your</font><font color="#E5E5E5"> garden</font>

1097
00:35:44,660 --> 00:35:48,529
engine right and then the the containers

1098
00:35:47,240 --> 00:35:50,540
are being launched here so they call it

1099
00:35:48,530 --> 00:35:52,460
a cloud<font color="#E5E5E5"> firing they call them a</font><font color="#CCCCCC"> cell so</font>

1100
00:35:50,540 --> 00:35:53,720
you've got these<font color="#CCCCCC"> garden cells</font><font color="#E5E5E5"> and that's</font>

1101
00:35:52,460 --> 00:35:55,760
<font color="#E5E5E5">where the containers are running but</font>

1102
00:35:53,720 --> 00:35:57,890
Diego<font color="#E5E5E5"> is doing all the scheduling and</font>

1103
00:35:55,760 --> 00:36:00,230
orchestration and<font color="#E5E5E5"> the pass is</font><font color="#CCCCCC"> providing</font>

1104
00:35:57,890 --> 00:36:01,879
a database is providing you know logger

1105
00:36:00,230 --> 00:36:03,710
Gator with<font color="#CCCCCC"> logging capabilities the</font>

1106
00:36:01,880 --> 00:36:06,470
routing capabilities<font color="#E5E5E5"> so it provides a</font>

1107
00:36:03,710 --> 00:36:08,180
multitude of services as a<font color="#E5E5E5"> platform but</font>

1108
00:36:06,470 --> 00:36:09,740
<font color="#E5E5E5">within</font><font color="#CCCCCC"> that the key</font><font color="#E5E5E5"> component of it is</font>

1109
00:36:08,180 --> 00:36:12,350
that containers<font color="#CCCCCC"> themselves which</font><font color="#E5E5E5"> are put</font>

1110
00:36:09,740 --> 00:36:15,080
<font color="#CCCCCC">into what they call Cloud</font><font color="#E5E5E5"> Foundry cells</font>

1111
00:36:12,350 --> 00:36:18,529
that are managed<font color="#CCCCCC"> by their orchestration</font>

1112
00:36:15,080 --> 00:36:21,259
engine called<font color="#E5E5E5"> Diego quick comparison</font>

1113
00:36:18,530 --> 00:36:22,970
between<font color="#CCCCCC"> docker garden fairly similar</font><font color="#E5E5E5"> you</font>

1114
00:36:21,260 --> 00:36:25,100
know minor differences in<font color="#E5E5E5"> terms of</font>

1115
00:36:22,970 --> 00:36:27,439
resource isolation<font color="#E5E5E5"> and control as</font><font color="#CCCCCC"> you</font>

1116
00:36:25,100 --> 00:36:29,779
can see they they<font color="#CCCCCC"> both do CPU sharing</font>

1117
00:36:27,440 --> 00:36:31,960
you<font color="#CCCCCC"> know garden does memory swaps and</font>

1118
00:36:29,780 --> 00:36:34,220
network bandwidth and and this<font color="#E5E5E5"> quota</font>

1119
00:36:31,960 --> 00:36:37,550
<font color="#E5E5E5">doctor does a few sets memory memory</font>

1120
00:36:34,220 --> 00:36:38,899
swap block device bandwidth<font color="#E5E5E5"> in terms of</font>

1121
00:36:37,550 --> 00:36:41,060
dynamic resource management<font color="#E5E5E5"> docker</font>

1122
00:36:38,900 --> 00:36:42,740
doesn't support<font color="#E5E5E5"> it garden supports it</font>

1123
00:36:41,060 --> 00:36:46,370
<font color="#CCCCCC">but it's not</font><font color="#E5E5E5"> used</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> often image</font>

1124
00:36:42,740 --> 00:36:48,649
management that<font color="#E5E5E5"> garden uses Bill</font><font color="#CCCCCC"> Paxil</font>

1125
00:36:46,370 --> 00:36:50,029
images<font color="#CCCCCC"> but you</font><font color="#E5E5E5"> can use them you</font><font color="#CCCCCC"> can</font>

1126
00:36:48,650 --> 00:36:51,620
<font color="#E5E5E5">reuse them to create</font><font color="#CCCCCC"> new</font><font color="#E5E5E5"> ones</font>

1127
00:36:50,030 --> 00:36:53,360
Dockers got the layered approach where

1128
00:36:51,620 --> 00:36:55,940
you know you can build<font color="#CCCCCC"> upon it using</font>

1129
00:36:53,360 --> 00:36:57,560
Union FS<font color="#E5E5E5"> linking can you link the</font>

1130
00:36:55,940 --> 00:36:59,630
containers<font color="#E5E5E5"> no garden doesn't let you do</font>

1131
00:36:57,560 --> 00:37:01,640
that<font color="#E5E5E5"> like</font><font color="#CCCCCC"> Bill packs</font><font color="#E5E5E5"> docker yes</font>

1132
00:36:59,630 --> 00:37:04,600
flexibility again<font color="#CCCCCC"> due to the</font><font color="#E5E5E5"> nature of</font>

1133
00:37:01,640 --> 00:37:06,770
how it deals with with the images<font color="#E5E5E5"> and</font>

1134
00:37:04,600 --> 00:37:09,259
exposing ports you<font color="#E5E5E5"> can expose multiple</font>

1135
00:37:06,770 --> 00:37:13,190
ports per container<font color="#E5E5E5"> in garden but with</font>

1136
00:37:09,260 --> 00:37:14,210
and also<font color="#CCCCCC"> with</font><font color="#E5E5E5"> with docker so we've</font>

1137
00:37:13,190 --> 00:37:16,040
talked<font color="#E5E5E5"> about all these things of what</font>

1138
00:37:14,210 --> 00:37:16,520
they are<font color="#E5E5E5"> where they fit and and all that</font>

1139
00:37:16,040 --> 00:37:18,320
other<font color="#E5E5E5"> stuff</font>

1140
00:37:16,520 --> 00:37:20,570
what about key security<font color="#E5E5E5"> concerns what</font>

1141
00:37:18,320 --> 00:37:23,450
are they<font color="#CCCCCC"> so I've mentioned</font><font color="#E5E5E5"> this one the</font>

1142
00:37:20,570 --> 00:37:24,620
top<font color="#CCCCCC"> one</font><font color="#E5E5E5"> user</font><font color="#CCCCCC"> namespace support again</font>

1143
00:37:23,450 --> 00:37:26,629
when<font color="#E5E5E5"> I started this</font><font color="#CCCCCC"> presentation a</font>

1144
00:37:24,620 --> 00:37:28,880
couple<font color="#CCCCCC"> years ago only cloud</font><font color="#E5E5E5"> foundry</font>

1145
00:37:26,630 --> 00:37:30,470
supported this<font color="#E5E5E5"> and it wasn't great now</font>

1146
00:37:28,880 --> 00:37:32,540
<font color="#E5E5E5">garden supports it as well and</font><font color="#CCCCCC"> a few</font>

1147
00:37:30,470 --> 00:37:34,490
<font color="#E5E5E5">others</font><font color="#CCCCCC"> but it's not enabled</font><font color="#E5E5E5"> by default</font>

1148
00:37:32,540 --> 00:37:36,440
<font color="#CCCCCC">in docker so if you are deploying</font><font color="#E5E5E5"> it</font>

1149
00:37:34,490 --> 00:37:38,120
make sure<font color="#CCCCCC"> you enable</font><font color="#E5E5E5"> that and without it</font>

1150
00:37:36,440 --> 00:37:39,110
<font color="#E5E5E5">process is running as root inside a</font>

1151
00:37:38,120 --> 00:37:40,230
container can<font color="#E5E5E5"> have root access</font>

1152
00:37:39,110 --> 00:37:42,359
<font color="#E5E5E5">everywhere right because it's</font>

1153
00:37:40,230 --> 00:37:43,530
<font color="#E5E5E5">say</font><font color="#CCCCCC"> mighty they're not mapping it and</font>

1154
00:37:42,359 --> 00:37:45,119
they're not<font color="#E5E5E5"> creating different IDs in</font>

1155
00:37:43,530 --> 00:37:47,730
each container<font color="#E5E5E5"> that map</font><font color="#CCCCCC"> to a</font>

1156
00:37:45,119 --> 00:37:50,609
unprivileged<font color="#E5E5E5"> unprivileged user in the in</font>

1157
00:37:47,730 --> 00:37:52,109
the in<font color="#E5E5E5"> the host operating system</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> has</font>

1158
00:37:50,609 --> 00:37:53,580
to<font color="#E5E5E5"> be configured property and not break</font>

1159
00:37:52,109 --> 00:37:55,259
programs and then<font color="#E5E5E5"> people and as I</font>

1160
00:37:53,580 --> 00:37:57,270
mentioned<font color="#E5E5E5"> and for you</font><font color="#CCCCCC"> the in one of the</font>

1161
00:37:55,260 --> 00:37:59,820
earlier slides<font color="#CCCCCC"> the program also has to</font>

1162
00:37:57,270 --> 00:38:01,080
<font color="#E5E5E5">be aware and you use the right namespace</font>

1163
00:37:59,820 --> 00:38:03,000
and<font color="#E5E5E5"> put things</font><font color="#CCCCCC"> in the right place so</font>

1164
00:38:01,080 --> 00:38:05,190
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> not it's not straightforward it's</font>

1165
00:38:03,000 --> 00:38:06,450
like it's like<font color="#E5E5E5"> trying to implement TLS</font>

1166
00:38:05,190 --> 00:38:08,310
<font color="#CCCCCC">in your own application rather than</font>

1167
00:38:06,450 --> 00:38:09,450
using<font color="#E5E5E5"> something that's provided I've</font>

1168
00:38:08,310 --> 00:38:11,730
worked with<font color="#E5E5E5"> a lot of developments that</font>

1169
00:38:09,450 --> 00:38:13,680
<font color="#E5E5E5">were</font><font color="#CCCCCC"> rating me creating native apps</font><font color="#E5E5E5"> and</font>

1170
00:38:11,730 --> 00:38:16,440
you<font color="#E5E5E5"> know some of them had to</font><font color="#CCCCCC"> implement</font>

1171
00:38:13,680 --> 00:38:17,910
their own you know TLS handshake you

1172
00:38:16,440 --> 00:38:19,440
know<font color="#E5E5E5"> a lot of other stuff and they got</font>

1173
00:38:17,910 --> 00:38:22,170
it wrong most of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> it's not</font>

1174
00:38:19,440 --> 00:38:24,690
<font color="#E5E5E5">straightforward</font><font color="#CCCCCC"> and it's a similar</font><font color="#E5E5E5"> idea</font>

1175
00:38:22,170 --> 00:38:27,300
here namespaces do not cover everything

1176
00:38:24,690 --> 00:38:28,710
<font color="#E5E5E5">in Linux so there is more</font><font color="#CCCCCC"> to then</font><font color="#E5E5E5"> just</font>

1177
00:38:27,300 --> 00:38:29,940
the namespaces<font color="#CCCCCC"> that you saw so even if</font>

1178
00:38:28,710 --> 00:38:31,770
they implemented<font color="#E5E5E5"> those even if they did</font>

1179
00:38:29,940 --> 00:38:34,440
<font color="#E5E5E5">it perfectly</font><font color="#CCCCCC"> there's more to it just</font><font color="#E5E5E5"> in</font>

1180
00:38:31,770 --> 00:38:36,840
those namespaces that<font color="#E5E5E5"> you saw so you</font>

1181
00:38:34,440 --> 00:38:39,000
know again that's<font color="#E5E5E5"> another gap</font><font color="#CCCCCC"> there's</font>

1182
00:38:36,840 --> 00:38:42,270
also the<font color="#E5E5E5"> whole imperfect design and code</font>

1183
00:38:39,000 --> 00:38:44,070
<font color="#E5E5E5">so not everybody's perfect</font><font color="#CCCCCC"> there can be</font>

1184
00:38:42,270 --> 00:38:46,530
a lot of<font color="#E5E5E5"> issues when they're building</font>

1185
00:38:44,070 --> 00:38:50,190
these<font color="#E5E5E5"> things they're complex</font><font color="#CCCCCC"> the kernel</font>

1186
00:38:46,530 --> 00:38:52,320
<font color="#CCCCCC">itself is is got a lot of opportunity as</font>

1187
00:38:50,190 --> 00:38:53,730
an attack surface<font color="#E5E5E5"> so</font><font color="#CCCCCC"> imperfect design</font>

1188
00:38:52,320 --> 00:38:56,310
and code increases the attack surface

1189
00:38:53,730 --> 00:38:58,290
<font color="#E5E5E5">that can be namespace leaks president</font>

1190
00:38:56,310 --> 00:39:00,600
many containers many containers<font color="#E5E5E5"> had</font>

1191
00:38:58,290 --> 00:39:02,100
little security analysis right when I

1192
00:39:00,600 --> 00:39:04,109
teach<font color="#CCCCCC"> my security</font><font color="#E5E5E5"> course one of the</font>

1193
00:39:02,100 --> 00:39:05,640
things<font color="#CCCCCC"> I tell the students</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

1194
00:39:04,109 --> 00:39:07,049
know<font color="#CCCCCC"> in security it's really important</font>

1195
00:39:05,640 --> 00:39:08,670
to<font color="#E5E5E5"> have stood the test</font><font color="#CCCCCC"> of time</font><font color="#E5E5E5"> there's a</font>

1196
00:39:07,050 --> 00:39:10,740
couple<font color="#E5E5E5"> of important criteria is like one</font>

1197
00:39:08,670 --> 00:39:12,540
of<font color="#CCCCCC"> them</font><font color="#E5E5E5"> is get your you know code</font>

1198
00:39:10,740 --> 00:39:14,009
reviewed or your<font color="#E5E5E5"> your idea reviewed by</font>

1199
00:39:12,540 --> 00:39:15,750
as many people<font color="#CCCCCC"> as possible get</font><font color="#E5E5E5"> as many</font>

1200
00:39:14,010 --> 00:39:16,950
<font color="#E5E5E5">sets of eyes looking at it right because</font>

1201
00:39:15,750 --> 00:39:18,270
<font color="#E5E5E5">the more sets of eyes looking at</font>

1202
00:39:16,950 --> 00:39:19,500
something<font color="#E5E5E5"> the more problems they'll find</font>

1203
00:39:18,270 --> 00:39:21,270
and hopefully you'll<font color="#E5E5E5"> fix those problems</font>

1204
00:39:19,500 --> 00:39:22,500
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then your stuff gets better right</font>

1205
00:39:21,270 --> 00:39:23,940
that's one of<font color="#CCCCCC"> the arguments for open</font>

1206
00:39:22,500 --> 00:39:25,170
source<font color="#E5E5E5"> they're saying hey you put it out</font>

1207
00:39:23,940 --> 00:39:26,760
there<font color="#E5E5E5"> lots of people look at it they can</font>

1208
00:39:25,170 --> 00:39:28,650
fix all the problems<font color="#CCCCCC"> right whereas with</font>

1209
00:39:26,760 --> 00:39:30,810
closed source<font color="#CCCCCC"> it's only the eyes of</font>

1210
00:39:28,650 --> 00:39:33,900
those<font color="#CCCCCC"> that are privy to</font><font color="#E5E5E5"> be looking at it</font>

1211
00:39:30,810 --> 00:39:36,240
<font color="#E5E5E5">and that's not as many</font><font color="#CCCCCC"> generally</font><font color="#E5E5E5"> as a</font>

1212
00:39:33,900 --> 00:39:38,280
generality<font color="#E5E5E5"> and the other principle is as</font>

1213
00:39:36,240 --> 00:39:40,109
having<font color="#E5E5E5"> stood the test of time right</font><font color="#CCCCCC"> so</font>

1214
00:39:38,280 --> 00:39:41,960
as the time goes by<font color="#E5E5E5"> more problems would</font>

1215
00:39:40,109 --> 00:39:43,950
have been find the<font color="#CCCCCC"> technology perfected</font>

1216
00:39:41,960 --> 00:39:46,320
<font color="#CCCCCC">but</font><font color="#E5E5E5"> this hasn't had that chance</font>

1217
00:39:43,950 --> 00:39:48,240
<font color="#E5E5E5">containers are fairly new they haven't</font>

1218
00:39:46,320 --> 00:39:51,960
really stood<font color="#E5E5E5"> the test of time and so</font>

1219
00:39:48,240 --> 00:39:53,339
we've got a bit of<font color="#CCCCCC"> ways to go do some</font>

1220
00:39:51,960 --> 00:39:54,010
more<font color="#E5E5E5"> security analysis</font><font color="#CCCCCC"> and find some</font>

1221
00:39:53,340 --> 00:39:56,770
problems<font color="#CCCCCC"> on the</font>

1222
00:39:54,010 --> 00:39:57,790
<font color="#E5E5E5">hopefully</font><font color="#CCCCCC"> and also doctors image</font>

1223
00:39:56,770 --> 00:39:59,470
verification<font color="#CCCCCC"> is not a hundred percent</font>

1224
00:39:57,790 --> 00:40:00,009
<font color="#E5E5E5">there have been known problems with that</font>

1225
00:39:59,470 --> 00:40:02,319
as well

1226
00:40:00,010 --> 00:40:04,090
the shared kernel is a big one<font color="#CCCCCC"> any</font>

1227
00:40:02,320 --> 00:40:05,290
vulnerability in<font color="#CCCCCC"> the kernel can impact</font>

1228
00:40:04,090 --> 00:40:07,390
<font color="#E5E5E5">all the other containers right as you</font>

1229
00:40:05,290 --> 00:40:09,870
saw it's just one host<font color="#CCCCCC"> OS and at</font><font color="#E5E5E5"> runtime</font>

1230
00:40:07,390 --> 00:40:13,120
<font color="#E5E5E5">right you don't have each VM in its own</font>

1231
00:40:09,870 --> 00:40:14,319
box with its own kernel it's just<font color="#E5E5E5"> one so</font>

1232
00:40:13,120 --> 00:40:16,330
if there's any problem and<font color="#E5E5E5"> one of them</font>

1233
00:40:14,320 --> 00:40:19,840
breaks out<font color="#E5E5E5"> it can go through the kernel</font>

1234
00:40:16,330 --> 00:40:21,310
and and and<font color="#E5E5E5"> go elsewhere and so the</font>

1235
00:40:19,840 --> 00:40:22,900
operating<font color="#E5E5E5"> system kernel</font><font color="#CCCCCC"> provides much</font>

1236
00:40:21,310 --> 00:40:24,820
more<font color="#CCCCCC"> functionality than</font><font color="#E5E5E5"> the hypervisor</font>

1237
00:40:22,900 --> 00:40:26,440
that<font color="#CCCCCC"> also means a larger attack surface</font>

1238
00:40:24,820 --> 00:40:28,570
right because the<font color="#E5E5E5"> hypervisor is really</font>

1239
00:40:26,440 --> 00:40:30,910
locked down<font color="#E5E5E5"> only to do very</font><font color="#CCCCCC"> specific set</font>

1240
00:40:28,570 --> 00:40:33,460
of<font color="#E5E5E5"> things but Linux</font><font color="#CCCCCC"> kernels general</font>

1241
00:40:30,910 --> 00:40:35,470
operating<font color="#E5E5E5"> system kernels</font><font color="#CCCCCC"> it's not a it's</font>

1242
00:40:33,460 --> 00:40:37,990
<font color="#CCCCCC">not it's it</font><font color="#E5E5E5"> doesn't minimize this</font>

1243
00:40:35,470 --> 00:40:39,580
exposed functionality<font color="#CCCCCC"> you know it's like</font>

1244
00:40:37,990 --> 00:40:41,890
in the old<font color="#E5E5E5"> days I mean one of the things</font>

1245
00:40:39,580 --> 00:40:43,270
<font color="#CCCCCC">that made Cisco successful is that they</font>

1246
00:40:41,890 --> 00:40:45,220
said<font color="#E5E5E5"> you know why take a general</font>

1247
00:40:43,270 --> 00:40:46,750
operating system right<font color="#E5E5E5"> I mean back in</font>

1248
00:40:45,220 --> 00:40:48,220
<font color="#E5E5E5">the late 80s if you want to get a router</font>

1249
00:40:46,750 --> 00:40:51,280
<font color="#E5E5E5">you have to go get a Sun box right you</font>

1250
00:40:48,220 --> 00:40:53,020
got a Sun box<font color="#E5E5E5"> R and Sun OS and it was a</font>

1251
00:40:51,280 --> 00:40:54,490
<font color="#E5E5E5">full-blown operating system but most of</font>

1252
00:40:53,020 --> 00:40:56,560
the world's<font color="#CCCCCC"> internet was routed using</font>

1253
00:40:54,490 --> 00:40:57,819
these as you know<font color="#E5E5E5"> Sun OS boxes but</font>

1254
00:40:56,560 --> 00:40:59,320
that's<font color="#E5E5E5"> the full-blown operating system</font>

1255
00:40:57,820 --> 00:41:01,600
why do I need<font color="#CCCCCC"> all these</font><font color="#E5E5E5"> facilities all</font>

1256
00:40:59,320 --> 00:41:02,890
these services who is service and<font color="#CCCCCC"> finger</font>

1257
00:41:01,600 --> 00:41:04,839
service and million other things<font color="#E5E5E5"> that</font>

1258
00:41:02,890 --> 00:41:06,129
comes with Linux UNIX<font color="#E5E5E5"> right so what</font>

1259
00:41:04,840 --> 00:41:08,170
Cisco<font color="#E5E5E5"> did is like hey let's take the</font>

1260
00:41:06,130 --> 00:41:09,880
UNIX idea<font color="#E5E5E5"> throw out all the other things</font>

1261
00:41:08,170 --> 00:41:10,990
you<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> need and just</font><font color="#CCCCCC"> keep the bits</font>

1262
00:41:09,880 --> 00:41:12,400
that<font color="#E5E5E5"> are to do specifically with</font>

1263
00:41:10,990 --> 00:41:14,140
networking<font color="#E5E5E5"> and routing right and then</font>

1264
00:41:12,400 --> 00:41:16,570
made this like very lean UNIX operating

1265
00:41:14,140 --> 00:41:19,029
system<font color="#E5E5E5"> that became the Cisco router and</font>

1266
00:41:16,570 --> 00:41:20,320
so it's<font color="#E5E5E5"> nothing crazy</font><font color="#CCCCCC"> I mean they didn't</font>

1267
00:41:19,030 --> 00:41:21,700
build<font color="#E5E5E5"> I mean yes they built their own</font>

1268
00:41:20,320 --> 00:41:23,440
<font color="#E5E5E5">operating</font><font color="#CCCCCC"> system but based on existing</font>

1269
00:41:21,700 --> 00:41:25,060
concepts but the core concept was

1270
00:41:23,440 --> 00:41:26,920
throwing<font color="#E5E5E5"> things you don't need keep just</font>

1271
00:41:25,060 --> 00:41:28,750
what you need<font color="#E5E5E5"> and minimize that it was</font>

1272
00:41:26,920 --> 00:41:30,400
gonna be faster plus you<font color="#E5E5E5"> don't have all</font>

1273
00:41:28,750 --> 00:41:31,810
this extra bits that<font color="#CCCCCC"> it that increase</font>

1274
00:41:30,400 --> 00:41:33,160
<font color="#CCCCCC">your attack</font><font color="#E5E5E5"> surface right same thing</font>

1275
00:41:31,810 --> 00:41:34,630
<font color="#CCCCCC">when you're</font><font color="#E5E5E5"> like setting up in the old</font>

1276
00:41:33,160 --> 00:41:36,940
days I remember<font color="#E5E5E5"> when setting up a</font>

1277
00:41:34,630 --> 00:41:38,080
Windows<font color="#CCCCCC"> server heaven forbid you know it</font>

1278
00:41:36,940 --> 00:41:39,760
came<font color="#E5E5E5"> with like million different</font>

1279
00:41:38,080 --> 00:41:41,230
services<font color="#E5E5E5"> that you know you so one of the</font>

1280
00:41:39,760 --> 00:41:42,700
things you did as<font color="#E5E5E5"> a hardening process</font>

1281
00:41:41,230 --> 00:41:44,680
you went<font color="#CCCCCC"> through</font><font color="#E5E5E5"> it and you're like why</font>

1282
00:41:42,700 --> 00:41:46,750
is this<font color="#E5E5E5"> service on why is that on you</font>

1283
00:41:44,680 --> 00:41:48,310
<font color="#E5E5E5">disable all</font><font color="#CCCCCC"> the services deleted all the</font>

1284
00:41:46,750 --> 00:41:50,500
accounts you didn't<font color="#E5E5E5"> need and you reduce</font>

1285
00:41:48,310 --> 00:41:52,120
<font color="#E5E5E5">the</font><font color="#CCCCCC"> attack surface</font><font color="#E5E5E5"> right so that's the</font>

1286
00:41:50,500 --> 00:41:53,530
same<font color="#CCCCCC"> idea here you've got a kernel it's</font>

1287
00:41:52,120 --> 00:41:54,910
a<font color="#E5E5E5"> general-purpose kernel it's got all</font>

1288
00:41:53,530 --> 00:41:56,800
<font color="#E5E5E5">these facilities that is providing for</font>

1289
00:41:54,910 --> 00:41:58,569
other uses<font color="#CCCCCC"> it wasn't designed</font><font color="#E5E5E5"> just to</font>

1290
00:41:56,800 --> 00:42:00,220
facilitate containers right and that

1291
00:41:58,570 --> 00:42:01,660
those extra<font color="#E5E5E5"> things</font><font color="#CCCCCC"> that you don't need</font>

1292
00:42:00,220 --> 00:42:03,740
<font color="#CCCCCC">to use for containers can provide</font>

1293
00:42:01,660 --> 00:42:08,089
opportunity<font color="#CCCCCC"> for attackers</font><font color="#E5E5E5"> to</font>

1294
00:42:03,740 --> 00:42:09,500
break out<font color="#E5E5E5"> of containers so the the point</font>

1295
00:42:08,090 --> 00:42:10,910
here is<font color="#CCCCCC"> that they were</font><font color="#E5E5E5"> not designed to</font>

1296
00:42:09,500 --> 00:42:12,530
contain security issues which was<font color="#E5E5E5"> the</font>

1297
00:42:10,910 --> 00:42:14,839
title<font color="#E5E5E5"> of my presentation</font><font color="#CCCCCC"> they were</font>

1298
00:42:12,530 --> 00:42:17,990
designed to do other<font color="#E5E5E5"> things but we can</font>

1299
00:42:14,840 --> 00:42:20,000
<font color="#CCCCCC">use them to try to contain security</font>

1300
00:42:17,990 --> 00:42:21,589
issues<font color="#E5E5E5"> there's also the issue of</font>

1301
00:42:20,000 --> 00:42:22,820
corporate channels<font color="#E5E5E5"> I'm some you know</font>

1302
00:42:21,590 --> 00:42:24,800
some of<font color="#CCCCCC"> you are</font><font color="#E5E5E5"> familiar with this being</font>

1303
00:42:22,820 --> 00:42:26,000
<font color="#CCCCCC">the security but if you're not</font><font color="#E5E5E5"> they</font>

1304
00:42:24,800 --> 00:42:27,830
provide capability to transfer

1305
00:42:26,000 --> 00:42:29,090
information between processes<font color="#E5E5E5"> that are</font>

1306
00:42:27,830 --> 00:42:31,100
<font color="#E5E5E5">not allowed to communicate</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so you</font>

1307
00:42:29,090 --> 00:42:33,230
say hey I<font color="#E5E5E5"> physically separated these two</font>

1308
00:42:31,100 --> 00:42:35,180
processes<font color="#E5E5E5"> there's no IP there's no</font>

1309
00:42:33,230 --> 00:42:36,500
mechanism<font color="#CCCCCC"> of communication</font><font color="#E5E5E5"> but hey if</font>

1310
00:42:35,180 --> 00:42:38,330
they all they<font color="#E5E5E5"> both have access</font><font color="#CCCCCC"> to the</font>

1311
00:42:36,500 --> 00:42:40,040
same memory<font color="#E5E5E5"> one of them could hit a</font>

1312
00:42:38,330 --> 00:42:41,210
particular<font color="#E5E5E5"> block and then the other one</font>

1313
00:42:40,040 --> 00:42:43,460
could<font color="#E5E5E5"> observe how many read and writes</font>

1314
00:42:41,210 --> 00:42:44,720
are happening<font color="#E5E5E5"> or open a particular file</font>

1315
00:42:43,460 --> 00:42:47,240
if they both have<font color="#CCCCCC"> access to a particular</font>

1316
00:42:44,720 --> 00:42:48,799
<font color="#E5E5E5">file system one of them could open the</font>

1317
00:42:47,240 --> 00:42:50,779
file and<font color="#E5E5E5"> close</font><font color="#CCCCCC"> it so</font><font color="#E5E5E5"> many</font><font color="#CCCCCC"> times</font><font color="#E5E5E5"> and the</font>

1318
00:42:48,800 --> 00:42:51,560
other one could<font color="#CCCCCC"> observe that</font><font color="#E5E5E5"> file to see</font>

1319
00:42:50,780 --> 00:42:54,080
what's happening and they're almost

1320
00:42:51,560 --> 00:42:55,970
sending each other<font color="#CCCCCC"> out of and</font><font color="#E5E5E5"> signaling</font>

1321
00:42:54,080 --> 00:42:57,650
and then with today's computing power

1322
00:42:55,970 --> 00:42:59,930
<font color="#E5E5E5">you can do that</font><font color="#CCCCCC"> pretty quickly so you</font>

1323
00:42:57,650 --> 00:43:01,970
could actually transfer information

1324
00:42:59,930 --> 00:43:03,379
<font color="#E5E5E5">across those corporate channels so</font>

1325
00:43:01,970 --> 00:43:05,118
there's the storage<font color="#CCCCCC"> Channel example that</font>

1326
00:43:03,380 --> 00:43:07,250
I just<font color="#CCCCCC"> talked about you can</font><font color="#E5E5E5"> communicate</font>

1327
00:43:05,119 --> 00:43:08,750
by modifying a storage location<font color="#CCCCCC"> or you</font>

1328
00:43:07,250 --> 00:43:10,190
can do the timing<font color="#E5E5E5"> channel attacks which</font>

1329
00:43:08,750 --> 00:43:12,950
you perform operations affecting

1330
00:43:10,190 --> 00:43:15,950
response time so<font color="#CCCCCC"> the the receiver</font>

1331
00:43:12,950 --> 00:43:17,509
observes that<font color="#E5E5E5"> and and then the based on</font>

1332
00:43:15,950 --> 00:43:19,660
<font color="#CCCCCC">the observation made on</font><font color="#E5E5E5"> this changes in</font>

1333
00:43:17,510 --> 00:43:21,980
<font color="#E5E5E5">time you can pick up what the message is</font>

1334
00:43:19,660 --> 00:43:23,540
specifically difficult to completely

1335
00:43:21,980 --> 00:43:25,760
prevent on the same processor<font color="#CCCCCC"> right so</font>

1336
00:43:23,540 --> 00:43:27,259
if you're<font color="#E5E5E5"> sharing the same</font><font color="#CCCCCC"> processor</font><font color="#E5E5E5"> the</font>

1337
00:43:25,760 --> 00:43:29,540
<font color="#CCCCCC">visible</font><font color="#E5E5E5"> resources some of</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> things</font>

1338
00:43:27,260 --> 00:43:30,950
are difficult<font color="#CCCCCC"> to to get around that's</font>

1339
00:43:29,540 --> 00:43:33,650
<font color="#CCCCCC">just the inherent nature</font><font color="#E5E5E5"> of how things</font>

1340
00:43:30,950 --> 00:43:35,618
are and techniques<font color="#CCCCCC"> for locating</font>

1341
00:43:33,650 --> 00:43:38,180
potential covert channels or things like

1342
00:43:35,619 --> 00:43:40,580
<font color="#CCCCCC">analyzing the resources</font><font color="#E5E5E5"> of a system or</font>

1343
00:43:38,180 --> 00:43:42,410
doing source code level analysis but you

1344
00:43:40,580 --> 00:43:44,259
<font color="#CCCCCC">can</font><font color="#E5E5E5"> possibly be reduced by careful</font>

1345
00:43:42,410 --> 00:43:47,540
<font color="#E5E5E5">design and</font><font color="#CCCCCC"> analysis but it's it's hard</font>

1346
00:43:44,260 --> 00:43:50,170
<font color="#CCCCCC">to do</font><font color="#E5E5E5"> that so here's the roll hammer</font>

1347
00:43:47,540 --> 00:43:52,310
<font color="#CCCCCC">attack that came out a</font><font color="#E5E5E5"> few years ago</font>

1348
00:43:50,170 --> 00:43:54,560
<font color="#E5E5E5">there was it was a defect</font><font color="#CCCCCC"> in hardware</font>

1349
00:43:52,310 --> 00:43:56,570
protection mechanisms and you know

1350
00:43:54,560 --> 00:43:59,420
computer hardware is pretty<font color="#E5E5E5"> complex so</font>

1351
00:43:56,570 --> 00:44:01,040
<font color="#CCCCCC">the</font><font color="#E5E5E5"> dean ambrose</font><font color="#CCCCCC"> amber bug it was used</font>

1352
00:43:59,420 --> 00:44:03,619
to gain privileged<font color="#E5E5E5"> colonel</font><font color="#CCCCCC"> privilege</font>

1353
00:44:01,040 --> 00:44:05,690
<font color="#E5E5E5">access but it enabled changes in value</font>

1354
00:44:03,619 --> 00:44:07,520
in<font color="#E5E5E5"> other programs</font><font color="#CCCCCC"> in colonel</font><font color="#E5E5E5"> and it was</font>

1355
00:44:05,690 --> 00:44:09,170
demonstrated<font color="#CCCCCC"> by</font><font color="#E5E5E5"> the google team on a</font>

1356
00:44:07,520 --> 00:44:11,630
<font color="#E5E5E5">variety of systems right so basically</font>

1357
00:44:09,170 --> 00:44:14,000
<font color="#CCCCCC">you changed</font><font color="#E5E5E5"> the voltage repeatedly in a</font>

1358
00:44:11,630 --> 00:44:15,140
row of memory cells<font color="#E5E5E5"> and we know if</font><font color="#CCCCCC"> it</font>

1359
00:44:14,000 --> 00:44:15,700
was an observer<font color="#E5E5E5"> watching what was</font>

1360
00:44:15,140 --> 00:44:19,480
<font color="#E5E5E5">happening</font>

1361
00:44:15,700 --> 00:44:20,828
they could pick<font color="#E5E5E5"> up a message</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> a</font>

1362
00:44:19,480 --> 00:44:22,690
quick<font color="#E5E5E5"> slide on no involvement abilities</font>

1363
00:44:20,829 --> 00:44:26,829
<font color="#CCCCCC">there have been a whole bunch</font><font color="#E5E5E5"> there been</font>

1364
00:44:22,690 --> 00:44:28,660
since<font color="#CCCCCC"> -</font><font color="#E5E5E5"> 2014 these are from the CB CD</font>

1365
00:44:26,829 --> 00:44:30,369
details<font color="#CCCCCC"> that's where the</font><font color="#E5E5E5"> sources they</font>

1366
00:44:28,660 --> 00:44:33,098
basically go through<font color="#E5E5E5"> the</font><font color="#CCCCCC"> CV database and</font>

1367
00:44:30,369 --> 00:44:34,540
present you with lots of metrics on

1368
00:44:33,099 --> 00:44:36,010
these kinds of<font color="#CCCCCC"> things</font><font color="#E5E5E5"> so since 2014</font>

1369
00:44:34,540 --> 00:44:37,390
they've been tracking<font color="#E5E5E5"> docker</font>

1370
00:44:36,010 --> 00:44:39,400
vulnerabilities particularly just

1371
00:44:37,390 --> 00:44:41,109
focused on<font color="#E5E5E5"> a docker engine</font><font color="#CCCCCC"> if you look</font>

1372
00:44:39,400 --> 00:44:42,339
up<font color="#E5E5E5"> other</font><font color="#CCCCCC"> things to do</font><font color="#E5E5E5"> with docker</font>

1373
00:44:41,109 --> 00:44:44,440
there's actually more vulnerabilities

1374
00:44:42,339 --> 00:44:46,150
but<font color="#E5E5E5"> I focus</font><font color="#CCCCCC"> on just the core</font><font color="#E5E5E5"> engine so</font>

1375
00:44:44,440 --> 00:44:47,650
there were<font color="#E5E5E5"> 14</font><font color="#CCCCCC"> of them and they range</font>

1376
00:44:46,150 --> 00:44:49,900
from all kinds of things<font color="#CCCCCC"> from das and</font>

1377
00:44:47,650 --> 00:44:51,970
code execution and<font color="#E5E5E5"> you know being able</font>

1378
00:44:49,900 --> 00:44:54,700
to bypass something privileged gaining

1379
00:44:51,970 --> 00:44:57,279
<font color="#E5E5E5">privilege and so on and so forth and for</font>

1380
00:44:54,700 --> 00:44:58,750
garden<font color="#CCCCCC"> they've been 11 since 2016 that</font>

1381
00:44:57,280 --> 00:45:01,540
they've been tracking<font color="#CCCCCC"> this so I guess</font><font color="#E5E5E5"> -</font>

1382
00:44:58,750 --> 00:45:04,510
2016 2017<font color="#E5E5E5"> there were</font><font color="#CCCCCC"> four in 2016 and</font>

1383
00:45:01,540 --> 00:45:07,150
<font color="#E5E5E5">seven and 2017 again this is just a core</font>

1384
00:45:04,510 --> 00:45:08,740
piece you<font color="#E5E5E5"> know if you look at cloud</font>

1385
00:45:07,150 --> 00:45:10,869
foundry as a whole there's more<font color="#E5E5E5"> I mean</font>

1386
00:45:08,740 --> 00:45:12,129
<font color="#E5E5E5">if you step back</font><font color="#CCCCCC"> and look at</font><font color="#E5E5E5"> CDs for</font>

1387
00:45:10,869 --> 00:45:13,390
cloud foundry and<font color="#E5E5E5"> all the tools and</font>

1388
00:45:12,130 --> 00:45:15,160
things<font color="#CCCCCC"> that comes with it</font><font color="#E5E5E5"> there's</font>

1389
00:45:13,390 --> 00:45:16,569
<font color="#E5E5E5">probably more than more than</font><font color="#CCCCCC"> 11 but you</font>

1390
00:45:15,160 --> 00:45:18,670
know<font color="#E5E5E5"> that's a opening right so it's not</font>

1391
00:45:16,570 --> 00:45:20,109
<font color="#E5E5E5">they're all perfectly</font><font color="#CCCCCC"> safe</font><font color="#E5E5E5"> with zero</font>

1392
00:45:18,670 --> 00:45:21,970
<font color="#CCCCCC">vulnerabilities there</font><font color="#E5E5E5"> are things being</font>

1393
00:45:20,109 --> 00:45:23,710
found at least<font color="#E5E5E5"> I know you can see</font>

1394
00:45:21,970 --> 00:45:26,919
average<font color="#CCCCCC"> - three things Wallner abilities</font>

1395
00:45:23,710 --> 00:45:28,869
a year<font color="#E5E5E5"> and hopefully as time</font><font color="#CCCCCC"> goes by and</font>

1396
00:45:26,920 --> 00:45:30,880
these technologies<font color="#E5E5E5"> mature that will go</font>

1397
00:45:28,869 --> 00:45:33,069
down<font color="#E5E5E5"> but I wouldn't foresee that for the</font>

1398
00:45:30,880 --> 00:45:34,660
next<font color="#E5E5E5"> couple</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> years</font><font color="#CCCCCC"> so how do you</font>

1399
00:45:33,069 --> 00:45:36,579
contain the<font color="#E5E5E5"> potential harm right so</font>

1400
00:45:34,660 --> 00:45:38,290
these<font color="#E5E5E5"> are called containers so how do we</font>

1401
00:45:36,579 --> 00:45:42,040
actually how do they how do they<font color="#E5E5E5"> live up</font>

1402
00:45:38,290 --> 00:45:44,109
to<font color="#E5E5E5"> their name</font><font color="#CCCCCC"> so one of</font><font color="#E5E5E5"> the things I've</font>

1403
00:45:42,040 --> 00:45:45,910
mentioned<font color="#E5E5E5"> is you</font><font color="#CCCCCC"> should group containers</font>

1404
00:45:44,109 --> 00:45:47,859
on a given<font color="#E5E5E5"> VM based on classic</font>

1405
00:45:45,910 --> 00:45:50,799
segregation principles right<font color="#E5E5E5"> we you know</font>

1406
00:45:47,859 --> 00:45:51,910
we as security professionals<font color="#CCCCCC"> some of us</font>

1407
00:45:50,800 --> 00:45:53,470
are familiar with<font color="#E5E5E5"> this concept</font>

1408
00:45:51,910 --> 00:45:55,720
like I said in network design<font color="#E5E5E5"> right you</font>

1409
00:45:53,470 --> 00:45:57,790
you<font color="#E5E5E5"> typically</font><font color="#CCCCCC"> you either</font><font color="#E5E5E5"> go based on a</font>

1410
00:45:55,720 --> 00:45:59,589
department or<font color="#E5E5E5"> based on function you know</font>

1411
00:45:57,790 --> 00:46:01,089
you look at all<font color="#E5E5E5"> your users and you go</font>

1412
00:45:59,589 --> 00:46:02,020
hey this<font color="#E5E5E5"> is my accounting department and</font>

1413
00:46:01,089 --> 00:46:03,490
these are<font color="#CCCCCC"> they're gonna be handling</font>

1414
00:46:02,020 --> 00:46:04,630
financial data<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> gonna create a</font>

1415
00:46:03,490 --> 00:46:06,098
separate<font color="#CCCCCC"> network for them right and</font>

1416
00:46:04,630 --> 00:46:07,569
these guys<font color="#CCCCCC"> are my sales guys they're</font>

1417
00:46:06,099 --> 00:46:09,220
<font color="#E5E5E5">gonna download every email</font><font color="#CCCCCC"> and click on</font>

1418
00:46:07,569 --> 00:46:10,420
everything<font color="#CCCCCC"> and open all the stuff</font><font color="#E5E5E5"> so</font>

1419
00:46:09,220 --> 00:46:12,069
they're<font color="#E5E5E5"> really risky I'm gonna put them</font>

1420
00:46:10,420 --> 00:46:13,750
<font color="#E5E5E5">in their own network and this is my</font>

1421
00:46:12,069 --> 00:46:15,130
Wi-Fi network I'm gonna separate<font color="#E5E5E5"> that</font>

1422
00:46:13,750 --> 00:46:16,960
because I have guests coming<font color="#E5E5E5"> into it</font>

1423
00:46:15,130 --> 00:46:18,130
<font color="#E5E5E5">maybe and this is my DMZ where the</font>

1424
00:46:16,960 --> 00:46:19,450
<font color="#CCCCCC">servers set</font><font color="#E5E5E5"> you create all these</font>

1425
00:46:18,130 --> 00:46:21,040
separate<font color="#CCCCCC"> Network segments you put</font><font color="#E5E5E5"> rules</font>

1426
00:46:19,450 --> 00:46:23,649
between<font color="#E5E5E5"> them so why not do</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> for</font>

1427
00:46:21,040 --> 00:46:26,290
<font color="#E5E5E5">containers right and the you know the</font>

1428
00:46:23,650 --> 00:46:29,290
docker swarm<font color="#CCCCCC"> plus diego's facilities</font>

1429
00:46:26,290 --> 00:46:30,490
provide<font color="#E5E5E5"> they allow they provide you with</font>

1430
00:46:29,290 --> 00:46:32,500
facilities to be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to do that</font>

1431
00:46:30,490 --> 00:46:34,180
<font color="#E5E5E5">separation so you can use</font><font color="#CCCCCC"> the risk-based</font>

1432
00:46:32,500 --> 00:46:36,040
<font color="#E5E5E5">approach use whatever approach your</font>

1433
00:46:34,180 --> 00:46:38,140
<font color="#E5E5E5">organization uses to do separation but</font>

1434
00:46:36,040 --> 00:46:39,550
apply that classic methodology<font color="#E5E5E5"> and</font>

1435
00:46:38,140 --> 00:46:41,140
consider impact and likelihood when

1436
00:46:39,550 --> 00:46:42,400
you're when<font color="#CCCCCC"> you're doing</font><font color="#E5E5E5"> that right so</font>

1437
00:46:41,140 --> 00:46:44,290
if you put a bunch<font color="#E5E5E5"> of containers that</font>

1438
00:46:42,400 --> 00:46:45,640
have the likelihood of something<font color="#E5E5E5"> bad</font>

1439
00:46:44,290 --> 00:46:47,080
<font color="#E5E5E5">happening</font><font color="#CCCCCC"> but the more</font><font color="#E5E5E5"> of those things</font>

1440
00:46:45,640 --> 00:46:49,150
you<font color="#CCCCCC"> put together the likelihood Rises</font>

1441
00:46:47,080 --> 00:46:51,310
<font color="#CCCCCC">there's so there's a point at which</font><font color="#E5E5E5"> it</font>

1442
00:46:49,150 --> 00:46:52,390
<font color="#E5E5E5">doesn't make sense to combine containers</font>

1443
00:46:51,310 --> 00:46:54,250
of<font color="#CCCCCC"> different types because</font><font color="#E5E5E5"> their</font>

1444
00:46:52,390 --> 00:46:55,660
likelihood goes to a level that may be

1445
00:46:54,250 --> 00:46:57,310
beyond<font color="#E5E5E5"> your appetite and you may not</font>

1446
00:46:55,660 --> 00:47:01,029
<font color="#E5E5E5">want to add more containers of different</font>

1447
00:46:57,310 --> 00:47:02,680
<font color="#CCCCCC">types in</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> mix</font><font color="#E5E5E5"> services should</font><font color="#CCCCCC"> be run</font>

1448
00:47:01,030 --> 00:47:04,030
as unprivileged right as you can

1449
00:47:02,680 --> 00:47:05,319
<font color="#E5E5E5">appreciate this is one of</font><font color="#CCCCCC"> the top things</font>

1450
00:47:04,030 --> 00:47:07,800
<font color="#E5E5E5">I've talked about is the user name</font>

1451
00:47:05,320 --> 00:47:09,850
spaces<font color="#E5E5E5"> so if you're running privileged</font>

1452
00:47:07,800 --> 00:47:12,160
containers there's a chance to break out

1453
00:47:09,850 --> 00:47:13,990
as if you haven't<font color="#E5E5E5"> implemented namespaces</font>

1454
00:47:12,160 --> 00:47:15,730
then you're<font color="#E5E5E5"> really in trouble</font><font color="#CCCCCC"> so if you</font>

1455
00:47:13,990 --> 00:47:18,250
do if<font color="#E5E5E5"> you run them as unprivileged</font><font color="#CCCCCC"> and</font>

1456
00:47:15,730 --> 00:47:20,880
you've got the<font color="#E5E5E5"> user name</font><font color="#CCCCCC"> spaces enabled</font>

1457
00:47:18,250 --> 00:47:23,110
then<font color="#CCCCCC"> you know things are better for</font><font color="#E5E5E5"> you</font>

1458
00:47:20,880 --> 00:47:23,770
<font color="#CCCCCC">I'm privileged to be dropped as soon as</font>

1459
00:47:23,110 --> 00:47:26,020
<font color="#E5E5E5">that's not needed</font>

1460
00:47:23,770 --> 00:47:27,940
you know that's common<font color="#CCCCCC"> sense and you</font>

1461
00:47:26,020 --> 00:47:29,200
should treat<font color="#CCCCCC"> root inside a container as</font>

1462
00:47:27,940 --> 00:47:31,030
if it was rude outside the container

1463
00:47:29,200 --> 00:47:32,710
<font color="#CCCCCC">right that's important and</font><font color="#E5E5E5"> only run</font>

1464
00:47:31,030 --> 00:47:35,770
containers from<font color="#E5E5E5"> trusted parties if you</font>

1465
00:47:32,710 --> 00:47:38,020
can and and follow a layered defense

1466
00:47:35,770 --> 00:47:40,540
approach use<font color="#E5E5E5"> app armor or</font><font color="#CCCCCC"> SELinux right</font>

1467
00:47:38,020 --> 00:47:42,970
<font color="#CCCCCC">I mean the layered defense approach you</font>

1468
00:47:40,540 --> 00:47:44,880
know keeps coming back<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know on</font>

1469
00:47:42,970 --> 00:47:47,649
Monday<font color="#E5E5E5"> we all heard about the Wi-Fi</font>

1470
00:47:44,880 --> 00:47:49,240
<font color="#E5E5E5">attack and all that stuff and you</font><font color="#CCCCCC"> know</font>

1471
00:47:47,650 --> 00:47:51,280
and of course<font color="#E5E5E5"> when I worked at a</font>

1472
00:47:49,240 --> 00:47:52,839
<font color="#E5E5E5">financial institution they required us</font>

1473
00:47:51,280 --> 00:47:54,520
<font color="#CCCCCC">to always</font><font color="#E5E5E5"> use a VPN</font><font color="#CCCCCC"> no matter where</font>

1474
00:47:52,840 --> 00:47:56,410
right so I gave me a laptop<font color="#E5E5E5"> and the</font>

1475
00:47:54,520 --> 00:47:57,610
laptop<font color="#CCCCCC"> he opened it up the</font><font color="#E5E5E5"> first thing</font>

1476
00:47:56,410 --> 00:47:59,020
he did<font color="#CCCCCC"> is connect to the</font><font color="#E5E5E5"> network the</font>

1477
00:47:57,610 --> 00:48:00,520
second that<font color="#CCCCCC"> it did it automatically</font>

1478
00:47:59,020 --> 00:48:02,890
connected to<font color="#E5E5E5"> the VPN right you couldn't</font>

1479
00:48:00,520 --> 00:48:04,420
<font color="#CCCCCC">use that laptop over Wi-Fi or wired</font>

1480
00:48:02,890 --> 00:48:06,160
network without the<font color="#E5E5E5"> VPN if you were not</font>

1481
00:48:04,420 --> 00:48:07,990
inside the<font color="#E5E5E5"> organization and that's</font><font color="#CCCCCC"> your</font>

1482
00:48:06,160 --> 00:48:10,149
layered defense model so if the Wi-Fi

1483
00:48:07,990 --> 00:48:11,890
security fails<font color="#E5E5E5"> but they've got the VPN</font>

1484
00:48:10,150 --> 00:48:13,450
if that fails<font color="#E5E5E5"> their applications</font><font color="#CCCCCC"> were</font>

1485
00:48:11,890 --> 00:48:14,730
<font color="#E5E5E5">using TLS on top so you got three layers</font>

1486
00:48:13,450 --> 00:48:16,870
<font color="#E5E5E5">of security right that's the whole</font>

1487
00:48:14,730 --> 00:48:18,040
<font color="#E5E5E5">defense</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> depth or layered</font><font color="#CCCCCC"> security</font>

1488
00:48:16,870 --> 00:48:19,990
approach and you should follow that here

1489
00:48:18,040 --> 00:48:21,940
as<font color="#E5E5E5"> well you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> your segregation you</font>

1490
00:48:19,990 --> 00:48:23,799
put your control groups you you

1491
00:48:21,940 --> 00:48:25,480
implement the capabilities and<font color="#CCCCCC"> you know</font>

1492
00:48:23,800 --> 00:48:26,920
all this other stuff<font color="#E5E5E5"> and then if one of</font>

1493
00:48:25,480 --> 00:48:28,360
them fails you've got access<font color="#E5E5E5"> control</font>

1494
00:48:26,920 --> 00:48:29,920
you've got all these<font color="#E5E5E5"> other security</font>

1495
00:48:28,360 --> 00:48:31,660
mechanisms to really back you up so

1496
00:48:29,920 --> 00:48:34,210
that's<font color="#E5E5E5"> where you know things like app</font>

1497
00:48:31,660 --> 00:48:35,890
<font color="#CCCCCC">armor selinux are important to also</font><font color="#E5E5E5"> look</font>

1498
00:48:34,210 --> 00:48:38,590
at not<font color="#CCCCCC"> just the segregation through</font>

1499
00:48:35,890 --> 00:48:41,379
clustering you should<font color="#CCCCCC"> standardize</font><font color="#E5E5E5"> and</font>

1500
00:48:38,590 --> 00:48:43,040
verify hardened<font color="#E5E5E5"> host OS that's pretty</font>

1501
00:48:41,380 --> 00:48:44,480
important because the host<font color="#E5E5E5"> OS is</font>

1502
00:48:43,040 --> 00:48:45,410
<font color="#CCCCCC">Colonel that's offering</font><font color="#E5E5E5"> itself to</font>

1503
00:48:44,480 --> 00:48:47,480
everybody else<font color="#E5E5E5"> so that should be</font>

1504
00:48:45,410 --> 00:48:48,830
<font color="#E5E5E5">standardized and</font><font color="#CCCCCC"> hardened because</font><font color="#E5E5E5"> if</font>

1505
00:48:47,480 --> 00:48:50,840
it's<font color="#E5E5E5"> not then you</font><font color="#CCCCCC"> have a chance to</font><font color="#E5E5E5"> break</font>

1506
00:48:48,830 --> 00:48:52,970
out<font color="#E5E5E5"> you should scan containers for</font>

1507
00:48:50,840 --> 00:48:54,200
vulnerabilities right I mean<font color="#E5E5E5"> you most of</font>

1508
00:48:52,970 --> 00:48:55,310
us that<font color="#CCCCCC"> are gonna use containers it's</font>

1509
00:48:54,200 --> 00:48:56,660
<font color="#CCCCCC">gonna go in some sort of a devops</font>

1510
00:48:55,310 --> 00:48:57,560
environment it's<font color="#CCCCCC"> gonna go in a</font>

1511
00:48:56,660 --> 00:48:59,839
continuous<font color="#E5E5E5"> integration continuous</font>

1512
00:48:57,560 --> 00:49:00,830
<font color="#E5E5E5">delivery environment</font><font color="#CCCCCC"> so why not as</font>

1513
00:48:59,840 --> 00:49:03,080
you're rolling these things out

1514
00:49:00,830 --> 00:49:05,029
implement some sort<font color="#CCCCCC"> of vulnerability</font>

1515
00:49:03,080 --> 00:49:06,590
scanning and patch<font color="#E5E5E5"> management in that</font>

1516
00:49:05,030 --> 00:49:07,910
dev pipeline so as these<font color="#E5E5E5"> things are</font>

1517
00:49:06,590 --> 00:49:09,200
<font color="#E5E5E5">being rolled out you know when the</font>

1518
00:49:07,910 --> 00:49:11,240
developers are pushing out a new<font color="#E5E5E5"> thing</font>

1519
00:49:09,200 --> 00:49:13,430
hey what version of<font color="#E5E5E5"> it what version of</font>

1520
00:49:11,240 --> 00:49:15,200
OS does it have as it doesn't<font color="#E5E5E5"> have the</font>

1521
00:49:13,430 --> 00:49:17,930
latest<font color="#CCCCCC"> patches and</font><font color="#E5E5E5"> so on and so forth</font>

1522
00:49:15,200 --> 00:49:20,020
<font color="#CCCCCC">and check for</font><font color="#E5E5E5"> configuration</font><font color="#CCCCCC"> and you</font>

1523
00:49:17,930 --> 00:49:22,580
should measure containers and sign them

1524
00:49:20,020 --> 00:49:25,520
analyze them sandbox them build profile

1525
00:49:22,580 --> 00:49:28,460
confirm the signatures<font color="#CCCCCC"> of boot</font><font color="#E5E5E5"> all these</font>

1526
00:49:25,520 --> 00:49:29,780
<font color="#CCCCCC">kynos sort</font><font color="#E5E5E5"> of security practices should</font>

1527
00:49:28,460 --> 00:49:33,290
<font color="#CCCCCC">be</font><font color="#E5E5E5"> applied to containers as</font><font color="#CCCCCC"> well these</font>

1528
00:49:29,780 --> 00:49:35,420
<font color="#CCCCCC">are not</font><font color="#E5E5E5"> new practices and monitored</font>

1529
00:49:33,290 --> 00:49:36,860
detect anomalous behavior so<font color="#E5E5E5"> definitely</font>

1530
00:49:35,420 --> 00:49:38,390
this<font color="#CCCCCC"> is I mean again</font><font color="#E5E5E5"> security best</font>

1531
00:49:36,860 --> 00:49:40,490
practice not<font color="#E5E5E5"> just limited to containers</font>

1532
00:49:38,390 --> 00:49:42,470
but<font color="#E5E5E5"> you know doing your alerting and</font>

1533
00:49:40,490 --> 00:49:44,569
logging<font color="#E5E5E5"> and</font><font color="#CCCCCC"> all that other</font><font color="#E5E5E5"> stuff is</font>

1534
00:49:42,470 --> 00:49:47,509
<font color="#E5E5E5">quite important</font><font color="#CCCCCC"> here as it</font><font color="#E5E5E5"> is with other</font>

1535
00:49:44,570 --> 00:49:48,770
use cases<font color="#CCCCCC"> and of course</font><font color="#E5E5E5"> analyze the law</font>

1536
00:49:47,510 --> 00:49:51,110
of usage logs to see<font color="#E5E5E5"> if there's</font>

1537
00:49:48,770 --> 00:49:52,400
weaknesses or<font color="#E5E5E5"> there's some patterns that</font>

1538
00:49:51,110 --> 00:49:54,410
you should adopt and then churn the

1539
00:49:52,400 --> 00:49:58,610
learning across different instances

1540
00:49:54,410 --> 00:50:01,330
within<font color="#E5E5E5"> your organization</font><font color="#CCCCCC"> so that brings</font>

1541
00:49:58,610 --> 00:50:03,110
me<font color="#CCCCCC"> to conclusion of today's talk</font>

1542
00:50:01,330 --> 00:50:05,630
<font color="#E5E5E5">conclusions containers are really useful</font>

1543
00:50:03,110 --> 00:50:07,400
<font color="#E5E5E5">right don't be like oh no</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> not</font>

1544
00:50:05,630 --> 00:50:09,590
good<font color="#CCCCCC"> for</font><font color="#E5E5E5"> security let's not use them</font>

1545
00:50:07,400 --> 00:50:11,150
as with any<font color="#CCCCCC"> new technology if you use it</font>

1546
00:50:09,590 --> 00:50:12,380
correctly<font color="#CCCCCC"> that</font><font color="#E5E5E5"> can be a lot of benefits</font>

1547
00:50:11,150 --> 00:50:14,120
so they're<font color="#CCCCCC"> very useful</font><font color="#E5E5E5"> they help</font><font color="#CCCCCC"> these</font>

1548
00:50:12,380 --> 00:50:15,380
software management<font color="#CCCCCC"> great for your</font>

1549
00:50:14,120 --> 00:50:17,240
development<font color="#CCCCCC"> especially</font><font color="#E5E5E5"> if you're going</font>

1550
00:50:15,380 --> 00:50:18,650
<font color="#CCCCCC">in rhe architecting doing a real</font>

1551
00:50:17,240 --> 00:50:20,979
architectural your applications<font color="#CCCCCC"> that's</font>

1552
00:50:18,650 --> 00:50:23,060
<font color="#CCCCCC">micro services</font><font color="#E5E5E5"> they really come in</font><font color="#CCCCCC"> handy</font>

1553
00:50:20,980 --> 00:50:24,800
work<font color="#E5E5E5"> has being</font><font color="#CCCCCC"> done to address security</font>

1554
00:50:23,060 --> 00:50:27,320
<font color="#CCCCCC">like lots of work has been</font><font color="#E5E5E5"> done</font><font color="#CCCCCC"> in the</font>

1555
00:50:24,800 --> 00:50:28,340
space<font color="#E5E5E5"> as as I mentioned and just</font><font color="#CCCCCC"> in the</font>

1556
00:50:27,320 --> 00:50:31,730
<font color="#E5E5E5">last couple</font><font color="#CCCCCC"> years that I've been</font>

1557
00:50:28,340 --> 00:50:33,740
involved I've seen a lot of security

1558
00:50:31,730 --> 00:50:35,390
<font color="#CCCCCC">features come on board</font><font color="#E5E5E5"> implemented of</font>

1559
00:50:33,740 --> 00:50:37,490
user<font color="#CCCCCC"> namespaces one of them that wasn't</font>

1560
00:50:35,390 --> 00:50:39,080
<font color="#E5E5E5">really done before</font><font color="#CCCCCC"> but you should</font><font color="#E5E5E5"> use it</font>

1561
00:50:37,490 --> 00:50:41,479
with caution<font color="#E5E5E5"> right this stuff is still</font>

1562
00:50:39,080 --> 00:50:42,710
not perfect<font color="#CCCCCC"> processes in the container</font>

1563
00:50:41,480 --> 00:50:44,870
should<font color="#E5E5E5"> not be given privileged access</font>

1564
00:50:42,710 --> 00:50:46,490
<font color="#CCCCCC">they're good for deploying</font><font color="#E5E5E5"> apps that are</font>

1565
00:50:44,870 --> 00:50:47,900
<font color="#CCCCCC">trusted so if you have apps from the</font>

1566
00:50:46,490 --> 00:50:49,339
same<font color="#E5E5E5"> development team</font><font color="#CCCCCC"> or same vendor</font>

1567
00:50:47,900 --> 00:50:50,960
<font color="#E5E5E5">that's fine because it's the same trust</font>

1568
00:50:49,340 --> 00:50:52,790
<font color="#E5E5E5">but if you're mixing and matching things</font>

1569
00:50:50,960 --> 00:50:54,500
from different<font color="#E5E5E5"> people and not clustering</font>

1570
00:50:52,790 --> 00:50:56,509
then you're putting<font color="#CCCCCC"> yourself at risk</font>

1571
00:50:54,500 --> 00:50:59,930
and there's other mechanisms such as

1572
00:50:56,510 --> 00:51:01,040
<font color="#CCCCCC">SELinux seccomp app armor and separate</font>

1573
00:50:59,930 --> 00:51:02,509
user accounts should<font color="#E5E5E5"> be used in</font>

1574
00:51:01,040 --> 00:51:04,310
<font color="#E5E5E5">conjunction with all the</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> controls</font>

1575
00:51:02,510 --> 00:51:10,160
<font color="#CCCCCC">that we mentioned to ensure that</font><font color="#E5E5E5"> you</font>

1576
00:51:04,310 --> 00:51:12,500
<font color="#CCCCCC">have a safe container</font><font color="#E5E5E5"> ecosystem so that</font>

1577
00:51:10,160 --> 00:51:14,180
brings<font color="#E5E5E5"> me</font><font color="#CCCCCC"> to the end</font><font color="#E5E5E5"> of this talk I'll</font>

1578
00:51:12,500 --> 00:51:16,910
open it up<font color="#E5E5E5"> for questions as I'm sure</font>

1579
00:51:14,180 --> 00:51:17,930
some people<font color="#CCCCCC"> will have yeah put your</font><font color="#E5E5E5"> hand</font>

1580
00:51:16,910 --> 00:51:32,450
up if you<font color="#CCCCCC"> have any questions and</font><font color="#E5E5E5"> I'll be</font>

1581
00:51:17,930 --> 00:51:34,009
<font color="#CCCCCC">happy to</font><font color="#E5E5E5"> answer yes like</font><font color="#CCCCCC"> somebody's so</font>

1582
00:51:32,450 --> 00:51:35,689
you were the question was are there

1583
00:51:34,010 --> 00:51:37,369
<font color="#E5E5E5">unique tools that will provide</font>

1584
00:51:35,690 --> 00:51:40,099
<font color="#E5E5E5">visibility of container to host</font>

1585
00:51:37,369 --> 00:51:41,930
communication<font color="#CCCCCC"> I am not</font><font color="#E5E5E5"> aware of anything</font>

1586
00:51:40,099 --> 00:51:43,609
<font color="#E5E5E5">unique I mean so it like in terms of</font>

1587
00:51:41,930 --> 00:51:45,529
looking at<font color="#E5E5E5"> it without outside of an IP</font>

1588
00:51:43,609 --> 00:51:47,000
boundary right like I mean IP IP

1589
00:51:45,530 --> 00:51:48,890
communication you can<font color="#CCCCCC"> do that but in</font>

1590
00:51:47,000 --> 00:51:50,420
that<font color="#CCCCCC"> respect of intercepting it at that</font>

1591
00:51:48,890 --> 00:51:52,790
<font color="#E5E5E5">level of the kernel communication I'm</font>

1592
00:51:50,420 --> 00:51:53,750
not aware of any specific<font color="#E5E5E5"> tools but I'm</font>

1593
00:51:52,790 --> 00:51:57,650
<font color="#E5E5E5">sure there's some work being</font><font color="#CCCCCC"> done in</font>

1594
00:51:53,750 --> 00:52:07,400
<font color="#CCCCCC">that area there was</font><font color="#E5E5E5"> another question</font>

1595
00:51:57,650 --> 00:52:09,859
there<font color="#E5E5E5"> to reduce the privileges on the</font>

1596
00:52:07,400 --> 00:52:11,990
<font color="#E5E5E5">runtime</font><font color="#CCCCCC"> well that depends on</font><font color="#E5E5E5"> the</font>

1597
00:52:09,859 --> 00:52:13,460
<font color="#E5E5E5">implementation right like so garden and</font>

1598
00:52:11,990 --> 00:52:14,990
docker have done<font color="#E5E5E5"> a fair bit</font><font color="#CCCCCC"> of work I</font>

1599
00:52:13,460 --> 00:52:16,849
mean the thing is docker still runs

1600
00:52:14,990 --> 00:52:18,669
<font color="#E5E5E5">those</font><font color="#CCCCCC"> routes so that's</font><font color="#E5E5E5"> not good</font><font color="#CCCCCC"> but</font>

1601
00:52:16,849 --> 00:52:20,450
there I know garden is working on<font color="#E5E5E5"> that</font>

1602
00:52:18,670 --> 00:52:22,910
there's some there's there are

1603
00:52:20,450 --> 00:52:24,649
complexities<font color="#E5E5E5"> because sometimes those the</font>

1604
00:52:22,910 --> 00:52:26,420
runtime actually needs privileged<font color="#CCCCCC"> access</font>

1605
00:52:24,650 --> 00:52:27,740
so they try<font color="#CCCCCC"> to limit</font><font color="#E5E5E5"> that through those</font>

1606
00:52:26,420 --> 00:52:29,480
other mechanisms that<font color="#CCCCCC"> I was talking</font>

1607
00:52:27,740 --> 00:52:30,680
<font color="#CCCCCC">about through</font><font color="#E5E5E5"> eliminating the system</font>

1608
00:52:29,480 --> 00:52:33,349
calls and a<font color="#E5E5E5"> few other</font><font color="#CCCCCC"> things but</font>

1609
00:52:30,680 --> 00:52:38,859
directly<font color="#E5E5E5"> it's not an easy problem to</font>

1610
00:52:33,349 --> 00:52:38,859
solve<font color="#E5E5E5"> any other yes</font>

1611
00:52:51,400 --> 00:53:00,770
right because<font color="#E5E5E5"> you have so many machines</font>

1612
00:52:58,580 --> 00:53:02,810
so I think<font color="#E5E5E5"> so</font><font color="#CCCCCC"> if I understand the</font>

1613
00:53:00,770 --> 00:53:04,250
<font color="#E5E5E5">question correctly is</font><font color="#CCCCCC"> that is their</font>

1614
00:53:02,810 --> 00:53:05,690
level<font color="#CCCCCC"> of</font><font color="#E5E5E5"> which is just not optimal</font>

1615
00:53:04,250 --> 00:53:06,980
because<font color="#E5E5E5"> you have so many containers you</font>

1616
00:53:05,690 --> 00:53:08,840
have<font color="#E5E5E5"> to monitor them</font><font color="#CCCCCC"> and there's a</font><font color="#E5E5E5"> lot</font>

1617
00:53:06,980 --> 00:53:10,730
<font color="#E5E5E5">of</font><font color="#CCCCCC"> overhead right is that the question</font>

1618
00:53:08,840 --> 00:53:12,140
<font color="#E5E5E5">yeah I mean and</font><font color="#CCCCCC"> that's true so even</font>

1619
00:53:10,730 --> 00:53:13,340
though containers are lighter and<font color="#E5E5E5"> they</font>

1620
00:53:12,140 --> 00:53:14,660
don't have their<font color="#CCCCCC"> own kernel there's a</font>

1621
00:53:13,340 --> 00:53:16,820
little bit<font color="#E5E5E5"> of that overhead because</font>

1622
00:53:14,660 --> 00:53:18,589
<font color="#E5E5E5">you're firing up this</font><font color="#CCCCCC"> ecosystem and you</font>

1623
00:53:16,820 --> 00:53:20,030
<font color="#E5E5E5">have to manage it</font><font color="#CCCCCC"> but it's not a lot I</font>

1624
00:53:18,590 --> 00:53:21,890
mean if you<font color="#CCCCCC"> think</font><font color="#E5E5E5"> about it the heaviest</font>

1625
00:53:20,030 --> 00:53:23,360
part<font color="#E5E5E5"> is the kernel itself and the</font>

1626
00:53:21,890 --> 00:53:25,700
libraries right<font color="#E5E5E5"> so if you're sharing</font>

1627
00:53:23,360 --> 00:53:27,110
<font color="#E5E5E5">that above it is just a separate is the</font>

1628
00:53:25,700 --> 00:53:28,850
<font color="#E5E5E5">username space to separation and that's</font>

1629
00:53:27,110 --> 00:53:30,320
handled in the kernel<font color="#E5E5E5"> so it's not super</font>

1630
00:53:28,850 --> 00:53:32,299
intensive<font color="#E5E5E5"> because the kernel natively</font>

1631
00:53:30,320 --> 00:53:34,760
supports<font color="#E5E5E5"> yeah you know through the</font>

1632
00:53:32,300 --> 00:53:36,770
<font color="#E5E5E5">various interfaces that you saw built-in</font>

1633
00:53:34,760 --> 00:53:38,750
built-in<font color="#CCCCCC"> support for namespaces so that</font>

1634
00:53:36,770 --> 00:53:39,920
separation is being handled at that

1635
00:53:38,750 --> 00:53:41,870
lower<font color="#E5E5E5"> level and it's done very</font>

1636
00:53:39,920 --> 00:53:43,700
<font color="#E5E5E5">efficiently</font><font color="#CCCCCC"> so by just saying</font><font color="#E5E5E5"> hey I want</font>

1637
00:53:41,870 --> 00:53:45,740
<font color="#CCCCCC">a network namespace and</font><font color="#E5E5E5"> give me you know</font>

1638
00:53:43,700 --> 00:53:47,750
<font color="#CCCCCC">0 and 3 different namespaces that</font>

1639
00:53:45,740 --> 00:53:48,890
<font color="#E5E5E5">doesn't add a lot</font><font color="#CCCCCC"> of overhead so that's</font>

1640
00:53:47,750 --> 00:53:50,060
and<font color="#E5E5E5"> that's what's really</font><font color="#CCCCCC"> attractive</font>

1641
00:53:48,890 --> 00:53:51,529
<font color="#E5E5E5">about them so you can fire up quite a</font>

1642
00:53:50,060 --> 00:53:54,230
few<font color="#E5E5E5"> of them but there will be a there</font>

1643
00:53:51,530 --> 00:53:56,060
<font color="#CCCCCC">will be a point where it's diminishing</font>

1644
00:53:54,230 --> 00:53:57,710
returns<font color="#CCCCCC"> where when you fire</font><font color="#E5E5E5"> up more</font><font color="#CCCCCC"> of</font>

1645
00:53:56,060 --> 00:53:59,120
them then there's just too many so how

1646
00:53:57,710 --> 00:54:00,380
<font color="#CCCCCC">many is too</font><font color="#E5E5E5"> many that depends on the</font>

1647
00:53:59,120 --> 00:54:02,180
<font color="#CCCCCC">application you're deploying in it</font>

1648
00:54:00,380 --> 00:54:04,340
whether it's a micro service or whether

1649
00:54:02,180 --> 00:54:05,569
<font color="#E5E5E5">it's a full-blown application and and</font>

1650
00:54:04,340 --> 00:54:07,880
you'd have<font color="#E5E5E5"> to analyze that within your</font>

1651
00:54:05,570 --> 00:54:09,590
<font color="#E5E5E5">environment there will</font><font color="#CCCCCC"> be there will be</font>

1652
00:54:07,880 --> 00:54:11,840
a<font color="#E5E5E5"> point where you're like okay on this</font>

1653
00:54:09,590 --> 00:54:13,310
one<font color="#E5E5E5"> VM I can put more than 50 micro</font>

1654
00:54:11,840 --> 00:54:15,110
services but that depends<font color="#E5E5E5"> on what that</font>

1655
00:54:13,310 --> 00:54:17,120
<font color="#E5E5E5">micro service is doing so it's more the</font>

1656
00:54:15,110 --> 00:54:18,380
<font color="#CCCCCC">focus is more on the requirements from</font>

1657
00:54:17,120 --> 00:54:19,819
<font color="#E5E5E5">the application perspective how much</font>

1658
00:54:18,380 --> 00:54:25,760
<font color="#E5E5E5">resource memory and all that kind of</font>

1659
00:54:19,820 --> 00:54:29,020
stuff they'll need<font color="#CCCCCC"> other questions</font><font color="#E5E5E5"> any</font>

1660
00:54:25,760 --> 00:54:29,020
other questions<font color="#E5E5E5"> yes</font>

1661
00:54:34,200 --> 00:54:39,189
yeah<font color="#E5E5E5"> yeah so that's what you saw the the</font>

1662
00:54:37,030 --> 00:54:42,010
lip container there's a bunch of the

1663
00:54:39,190 --> 00:54:43,930
Linux<font color="#E5E5E5"> kernel model so the the facilities</font>

1664
00:54:42,010 --> 00:54:45,520
that<font color="#CCCCCC"> the containers use are provided by</font>

1665
00:54:43,930 --> 00:54:47,410
the current<font color="#E5E5E5"> Linux kernel so that they're</font>

1666
00:54:45,520 --> 00:54:49,450
that base is provided by the kernel the

1667
00:54:47,410 --> 00:54:51,460
<font color="#E5E5E5">separate for</font><font color="#CCCCCC"> example the namespace</font>

1668
00:54:49,450 --> 00:54:56,950
separation and control groups and all

1669
00:54:51,460 --> 00:55:00,340
those kinds of other things<font color="#CCCCCC"> all for</font>

1670
00:54:56,950 --> 00:55:01,660
<font color="#CCCCCC">container ization I guess I get what if</font>

1671
00:55:00,340 --> 00:55:03,430
you have like support<font color="#CCCCCC"> for a</font><font color="#E5E5E5"> Lib</font>

1672
00:55:01,660 --> 00:55:04,810
<font color="#E5E5E5">container C or run C or whatever that</font>

1673
00:55:03,430 --> 00:55:06,399
<font color="#E5E5E5">would</font><font color="#CCCCCC"> be the flavor that would have that</font>

1674
00:55:04,810 --> 00:55:09,130
<font color="#E5E5E5">support versus the ones that wouldn't</font>

1675
00:55:06,400 --> 00:55:10,570
have that so<font color="#E5E5E5"> you would you just compile</font>

1676
00:55:09,130 --> 00:55:11,980
that<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you use that version that has</font>

1677
00:55:10,570 --> 00:55:19,510
those libraries and their facilities

1678
00:55:11,980 --> 00:55:21,820
yeah<font color="#CCCCCC"> other questions</font><font color="#E5E5E5"> how are we doing</font>

1679
00:55:19,510 --> 00:55:23,430
<font color="#E5E5E5">for time we've got I think like</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> more</font>

1680
00:55:21,820 --> 00:55:25,900
minutes

1681
00:55:23,430 --> 00:55:27,069
cool well if there are<font color="#E5E5E5"> no</font><font color="#CCCCCC"> other</font>

1682
00:55:25,900 --> 00:55:28,990
questions<font color="#E5E5E5"> I'll stick</font><font color="#CCCCCC"> around if people</font>

1683
00:55:27,070 --> 00:55:30,850
<font color="#CCCCCC">want to</font><font color="#E5E5E5"> come</font><font color="#CCCCCC"> and ask</font><font color="#E5E5E5"> questions</font><font color="#CCCCCC"> directly</font>

1684
00:55:28,990 --> 00:55:33,129
or talk about<font color="#CCCCCC"> anything and</font><font color="#E5E5E5"> thank you</font>

1685
00:55:30,850 --> 00:55:33,500
<font color="#E5E5E5">very much for attending and have a great</font>

1686
00:55:33,130 --> 00:55:37,550
<font color="#E5E5E5">afternoon</font>

1687
00:55:33,500 --> 00:55:37,550
[Applause]

