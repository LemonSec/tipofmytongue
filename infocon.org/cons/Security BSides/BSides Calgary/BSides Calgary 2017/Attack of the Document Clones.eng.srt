1
00:00:04,700 --> 00:00:12,000
Cheers<font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> name is Ross Gibb</font>

2
00:00:09,240 --> 00:00:14,480
<font color="#E5E5E5">I'm here with my colleague Josh Reynolds</font>

3
00:00:12,000 --> 00:00:17,670
<font color="#E5E5E5">and we're gonna give you a talk about</font>

4
00:00:14,480 --> 00:00:19,770
malicious office documents and some

5
00:00:17,670 --> 00:00:24,900
threat Intel projects we've<font color="#CCCCCC"> been working</font>

6
00:00:19,770 --> 00:00:27,869
on<font color="#E5E5E5"> about them so Josh and I work on the</font>

7
00:00:24,900 --> 00:00:31,259
research<font color="#E5E5E5"> and efficacy team at Cisco in</font>

8
00:00:27,869 --> 00:00:33,629
the<font color="#CCCCCC"> Calgary</font><font color="#E5E5E5"> engineering office so our</font>

9
00:00:31,260 --> 00:00:37,079
<font color="#E5E5E5">job is basically to ensure the efficacy</font>

10
00:00:33,629 --> 00:00:40,559
<font color="#E5E5E5">of the advanced malware protection suite</font>

11
00:00:37,079 --> 00:00:42,359
of products<font color="#E5E5E5"> the Cisco</font><font color="#CCCCCC"> cells so our job</font>

12
00:00:40,559 --> 00:00:44,309
basically<font color="#E5E5E5"> boils down to ensuring that we</font>

13
00:00:42,359 --> 00:00:47,579
detect everything<font color="#E5E5E5"> we should and nothing</font>

14
00:00:44,309 --> 00:00:52,108
we shouldn't so maximizing<font color="#CCCCCC"> - positives</font>

15
00:00:47,579 --> 00:00:53,879
and minimizing false<font color="#E5E5E5"> positives</font><font color="#CCCCCC"> we both</font>

16
00:00:52,109 --> 00:00:56,010
spoke<font color="#CCCCCC"> at</font><font color="#E5E5E5"> besides last year and</font><font color="#CCCCCC"> seperates</font>

17
00:00:53,879 --> 00:00:58,108
talks<font color="#E5E5E5"> so we're really proud to be back</font>

18
00:00:56,010 --> 00:01:01,949
this<font color="#CCCCCC"> year</font><font color="#E5E5E5"> to support a really well</font>

19
00:00:58,109 --> 00:01:05,549
organized and good<font color="#E5E5E5"> conference and we're</font>

20
00:01:01,949 --> 00:01:07,079
<font color="#CCCCCC">both actually co-authors of a malware</font>

21
00:01:05,549 --> 00:01:08,280
<font color="#E5E5E5">analysis course that's going to be</font>

22
00:01:07,079 --> 00:01:12,059
offered<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the second year of the</font>

23
00:01:08,280 --> 00:01:15,390
<font color="#CCCCCC">brand-new</font><font color="#E5E5E5"> sate</font><font color="#CCCCCC"> IT security program which</font>

24
00:01:12,060 --> 00:01:17,600
were<font color="#E5E5E5"> also really proud of just a</font><font color="#CCCCCC"> little</font>

25
00:01:15,390 --> 00:01:20,399
bit about<font color="#E5E5E5"> myself</font><font color="#CCCCCC"> I'm from</font><font color="#E5E5E5"> Calgary</font>

26
00:01:17,600 --> 00:01:23,820
<font color="#CCCCCC">previous to Cisco I worked at IBM</font><font color="#E5E5E5"> and</font>

27
00:01:20,399 --> 00:01:25,770
Symantec in<font color="#CCCCCC"> Calgary and California at</font>

28
00:01:23,820 --> 00:01:28,949
Symantec I worked on investigating

29
00:01:25,770 --> 00:01:30,658
<font color="#CCCCCC">targeted attacks and taking taking down</font>

30
00:01:28,950 --> 00:01:32,280
botnets<font color="#E5E5E5"> when I'm not doing computer</font>

31
00:01:30,659 --> 00:01:35,689
stuff I like board games and politics

32
00:01:32,280 --> 00:01:38,640
<font color="#CCCCCC">and josh</font><font color="#E5E5E5"> is going to introduce himself</font>

33
00:01:35,689 --> 00:01:41,008
so as we Ross said my name is<font color="#E5E5E5"> Josh</font>

34
00:01:38,640 --> 00:01:43,700
Reynolds<font color="#CCCCCC"> I also work on</font><font color="#E5E5E5"> the same team as</font>

35
00:01:41,009 --> 00:01:48,030
Ross<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> essentially the same things</font>

36
00:01:43,700 --> 00:01:51,929
<font color="#E5E5E5">my backgrounds is kind of varied</font><font color="#CCCCCC"> when I</font>

37
00:01:48,030 --> 00:01:53,820
initially was doing my program at state

38
00:01:51,929 --> 00:01:57,210
<font color="#E5E5E5">after my first</font><font color="#CCCCCC"> year I would luckily</font><font color="#E5E5E5"> got</font>

39
00:01:53,820 --> 00:01:59,969
hired on doing QA for<font color="#CCCCCC"> a</font><font color="#E5E5E5"> local web</font>

40
00:01:57,210 --> 00:02:02,609
consulting company after I graduated

41
00:01:59,969 --> 00:02:03,689
from<font color="#CCCCCC"> States I went over to Australia</font><font color="#E5E5E5"> to</font>

42
00:02:02,609 --> 00:02:07,649
finish the bachelor<font color="#CCCCCC"> degree</font><font color="#E5E5E5"> and</font>

43
00:02:03,689 --> 00:02:09,299
<font color="#E5E5E5">information technology</font><font color="#CCCCCC"> there I interned</font>

44
00:02:07,649 --> 00:02:11,430
with Red Hat on their<font color="#CCCCCC"> penetration</font>

45
00:02:09,300 --> 00:02:14,159
testing team and I wrote<font color="#CCCCCC"> some web</font>

46
00:02:11,430 --> 00:02:16,019
application fuzzing frameworks<font color="#E5E5E5"> for them</font>

47
00:02:14,159 --> 00:02:17,879
then when I came back I did some system

48
00:02:16,019 --> 00:02:21,269
<font color="#E5E5E5">administration for gray Colin while also</font>

49
00:02:17,879 --> 00:02:23,010
<font color="#E5E5E5">doing a few penetration testing</font>

50
00:02:21,269 --> 00:02:25,730
exercises for some of their<font color="#E5E5E5"> clients and</font>

51
00:02:23,010 --> 00:02:30,078
then I came<font color="#E5E5E5"> over</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> source fire and a QA</font>

52
00:02:25,730 --> 00:02:32,429
<font color="#CCCCCC">role and then once I began to show</font>

53
00:02:30,079 --> 00:02:33,900
<font color="#E5E5E5">expressed interest in malware research</font>

54
00:02:32,430 --> 00:02:37,019
because<font color="#E5E5E5"> that's kind of our bread</font><font color="#CCCCCC"> and</font>

55
00:02:33,900 --> 00:02:40,139
butter<font color="#CCCCCC"> I moved over</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the team I am on</font>

56
00:02:37,019 --> 00:02:43,680
now I'll pass it off to<font color="#E5E5E5"> Ross to move</font>

57
00:02:40,139 --> 00:02:45,659
through some<font color="#CCCCCC"> of our documents</font><font color="#E5E5E5"> cool so</font>

58
00:02:43,680 --> 00:02:48,480
the presentation<font color="#E5E5E5"> is kind</font><font color="#CCCCCC"> of in two parts</font>

59
00:02:45,659 --> 00:02:50,790
I'm<font color="#E5E5E5"> gonna cover the first part which is</font>

60
00:02:48,480 --> 00:02:52,319
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be a discussion about trying</font><font color="#CCCCCC"> to</font>

61
00:02:50,790 --> 00:02:54,780
generate<font color="#CCCCCC"> some threat intelligence</font>

62
00:02:52,319 --> 00:02:57,030
<font color="#E5E5E5">information on like an aggregation of</font>

63
00:02:54,780 --> 00:02:59,370
malicious office documents and the

64
00:02:57,030 --> 00:03:01,200
second half<font color="#CCCCCC"> josh is going</font><font color="#E5E5E5"> to be cover</font>

65
00:02:59,370 --> 00:03:03,950
and it's going<font color="#E5E5E5"> to be a deep dive</font><font color="#CCCCCC"> into a</font>

66
00:03:01,200 --> 00:03:07,560
<font color="#E5E5E5">specific threat and and threat actor</font>

67
00:03:03,950 --> 00:03:10,108
okay<font color="#E5E5E5"> so what are the kind of clones</font><font color="#CCCCCC"> that</font>

68
00:03:07,560 --> 00:03:12,870
the title of<font color="#E5E5E5"> the talk is referring</font><font color="#CCCCCC"> to</font>

69
00:03:10,109 --> 00:03:15,480
and<font color="#E5E5E5"> it's it's malicious documents that</font>

70
00:03:12,870 --> 00:03:16,680
look kind<font color="#E5E5E5"> of like this if you have any</font>

71
00:03:15,480 --> 00:03:18,090
kind<font color="#E5E5E5"> of responsibility for email</font>

72
00:03:16,680 --> 00:03:19,709
security<font color="#E5E5E5"> at your company or your</font>

73
00:03:18,090 --> 00:03:21,989
<font color="#CCCCCC">organization or you have an email</font>

74
00:03:19,709 --> 00:03:24,510
<font color="#E5E5E5">address</font><font color="#CCCCCC"> you may have seen documents</font><font color="#E5E5E5"> like</font>

75
00:03:21,989 --> 00:03:27,060
this<font color="#CCCCCC"> so what these</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> these are</font><font color="#E5E5E5"> two</font>

76
00:03:24,510 --> 00:03:29,340
examples<font color="#CCCCCC"> of malicious office documents</font>

77
00:03:27,060 --> 00:03:32,010
with macros inside which a macro is a

78
00:03:29,340 --> 00:03:35,099
tiny<font color="#E5E5E5"> little program</font><font color="#CCCCCC"> and if you are</font>

79
00:03:32,010 --> 00:03:36,959
enticed into<font color="#E5E5E5"> enabling the content that</font>

80
00:03:35,099 --> 00:03:39,328
<font color="#E5E5E5">program will execute and most likely</font>

81
00:03:36,959 --> 00:03:42,150
infect you so what we typically<font color="#E5E5E5"> see with</font>

82
00:03:39,329 --> 00:03:43,530
these<font color="#E5E5E5"> is an image is used so this is</font>

83
00:03:42,150 --> 00:03:45,449
actually this blue<font color="#CCCCCC"> background and</font><font color="#E5E5E5"> white</font>

84
00:03:43,530 --> 00:03:47,939
text is<font color="#E5E5E5"> actually an image and in this</font>

85
00:03:45,449 --> 00:03:49,530
case it's it's telling you<font color="#E5E5E5"> that the</font>

86
00:03:47,939 --> 00:03:51,418
current<font color="#E5E5E5"> document was from an old version</font>

87
00:03:49,530 --> 00:03:54,299
<font color="#E5E5E5">of word and trying to get you to click</font>

88
00:03:51,419 --> 00:03:56,489
<font color="#E5E5E5">the enable</font><font color="#CCCCCC"> content the second one here</font>

89
00:03:54,299 --> 00:03:58,650
is<font color="#CCCCCC"> very similar they're actually showing</font>

90
00:03:56,489 --> 00:04:00,299
<font color="#E5E5E5">alpha skated text here to kind of say oh</font>

91
00:03:58,650 --> 00:04:02,790
it's it's<font color="#CCCCCC"> scrambled and we need to</font>

92
00:04:00,299 --> 00:04:04,109
update<font color="#E5E5E5"> it</font><font color="#CCCCCC"> here's a couple more</font><font color="#E5E5E5"> the one</font>

93
00:04:02,790 --> 00:04:05,578
on the left has<font color="#E5E5E5"> been really prominent</font>

94
00:04:04,109 --> 00:04:06,780
over the last couple<font color="#CCCCCC"> months</font><font color="#E5E5E5"> this looks</font>

95
00:04:05,579 --> 00:04:09,239
like text but it's actually an image

96
00:04:06,780 --> 00:04:10,560
<font color="#E5E5E5">this is an image again it's just trying</font>

97
00:04:09,239 --> 00:04:11,759
<font color="#E5E5E5">to entice you everything is trying to</font>

98
00:04:10,560 --> 00:04:14,280
<font color="#CCCCCC">theis you to click this button and</font>

99
00:04:11,759 --> 00:04:18,358
enable the content<font color="#CCCCCC"> the one on the right</font>

100
00:04:14,280 --> 00:04:19,918
is actually<font color="#E5E5E5"> not using any images</font><font color="#CCCCCC"> so</font>

101
00:04:18,358 --> 00:04:22,409
there's some obfuscated text and there's

102
00:04:19,918 --> 00:04:26,070
like a line<font color="#CCCCCC"> of English here to try</font><font color="#E5E5E5"> to</font>

103
00:04:22,409 --> 00:04:27,330
get you<font color="#E5E5E5"> to to enable it last one the one</font>

104
00:04:26,070 --> 00:04:29,580
<font color="#E5E5E5">on the left here is</font>

105
00:04:27,330 --> 00:04:31,620
kind<font color="#E5E5E5"> of well done it sort of looks like</font>

106
00:04:29,580 --> 00:04:35,099
an encrypted message<font color="#CCCCCC"> and there's an RSA</font>

107
00:04:31,620 --> 00:04:37,500
logo<font color="#CCCCCC"> to</font><font color="#E5E5E5"> to further to further that point</font>

108
00:04:35,099 --> 00:04:39,990
<font color="#E5E5E5">again everything is to entice</font><font color="#CCCCCC"> you to</font>

109
00:04:37,500 --> 00:04:43,159
click<font color="#E5E5E5"> the content and this is your</font>

110
00:04:39,990 --> 00:04:44,389
<font color="#E5E5E5">three-step plan to get infected so again</font>

111
00:04:43,159 --> 00:04:47,250
<font color="#E5E5E5">okay</font>

112
00:04:44,389 --> 00:04:48,389
so how do we<font color="#E5E5E5"> actually get</font><font color="#CCCCCC"> here so this</font>

113
00:04:47,250 --> 00:04:49,770
<font color="#E5E5E5">part I mean I'm</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> going to cover a</font>

114
00:04:48,389 --> 00:04:51,810
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> background if you don't</font>

115
00:04:49,770 --> 00:04:54,150
spend your a lot of time worrying<font color="#E5E5E5"> about</font>

116
00:04:51,810 --> 00:04:58,169
office documents with macros inside them

117
00:04:54,150 --> 00:05:03,750
so<font color="#CCCCCC"> Microsoft Word was joined</font><font color="#E5E5E5"> with Visual</font>

118
00:04:58,169 --> 00:05:04,979
<font color="#E5E5E5">Basic</font><font color="#CCCCCC"> if we if I didn't it</font><font color="#E5E5E5"> you can kind</font>

119
00:05:03,750 --> 00:05:07,500
of see how<font color="#E5E5E5"> this might be</font><font color="#CCCCCC"> a good idea you</font>

120
00:05:04,979 --> 00:05:09,389
can<font color="#E5E5E5"> add a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> rich content to office</font>

121
00:05:07,500 --> 00:05:11,240
documents with with like having a real

122
00:05:09,389 --> 00:05:13,949
programming<font color="#E5E5E5"> and language embedded</font>

123
00:05:11,240 --> 00:05:17,310
<font color="#CCCCCC">there's some amazing spreadsheets that</font>

124
00:05:13,949 --> 00:05:18,960
<font color="#E5E5E5">I've that we've had detection</font><font color="#CCCCCC"> zhan</font><font color="#E5E5E5"> that</font>

125
00:05:17,310 --> 00:05:21,659
we're actually<font color="#E5E5E5"> totally clean and there's</font>

126
00:05:18,960 --> 00:05:23,580
a lot<font color="#E5E5E5"> of Commerce</font><font color="#CCCCCC"> conducted in this</font>

127
00:05:21,659 --> 00:05:25,650
manner<font color="#E5E5E5"> but the problem from a security</font>

128
00:05:23,580 --> 00:05:27,690
standpoint<font color="#E5E5E5"> is when these these</font><font color="#CCCCCC"> two</font>

129
00:05:25,650 --> 00:05:30,739
things combined like kind<font color="#E5E5E5"> of lead you on</font>

130
00:05:27,690 --> 00:05:30,740
a<font color="#E5E5E5"> path to the dark side</font>

131
00:05:30,880 --> 00:05:37,180
okay so<font color="#E5E5E5"> VBA kind of came</font><font color="#CCCCCC"> into word</font>

132
00:05:34,050 --> 00:05:38,560
officially<font color="#E5E5E5"> with word 97 although</font>

133
00:05:37,180 --> 00:05:42,940
previous to that<font color="#CCCCCC"> there was</font><font color="#E5E5E5"> something</font>

134
00:05:38,560 --> 00:05:44,340
called word basic<font color="#CCCCCC"> as soon as a VBA which</font>

135
00:05:42,940 --> 00:05:47,290
stands for<font color="#CCCCCC"> Visual Basic for applications</font>

136
00:05:44,340 --> 00:05:49,270
<font color="#E5E5E5">was integrated into Microsoft</font><font color="#CCCCCC"> Word</font>

137
00:05:47,290 --> 00:05:52,150
malicious macros followed really shortly

138
00:05:49,270 --> 00:05:54,310
after so attackers<font color="#E5E5E5"> realize you could</font>

139
00:05:52,150 --> 00:05:56,049
write a little<font color="#CCCCCC"> program email it to</font>

140
00:05:54,310 --> 00:05:57,910
<font color="#CCCCCC">someone as soon</font><font color="#E5E5E5"> as they open the</font>

141
00:05:56,050 --> 00:06:00,130
document<font color="#E5E5E5"> the program would execute and</font>

142
00:05:57,910 --> 00:06:02,080
you'd subsequently become infected

143
00:06:00,130 --> 00:06:04,330
the famous one<font color="#E5E5E5"> if you ever read about</font>

144
00:06:02,080 --> 00:06:07,599
<font color="#E5E5E5">the</font><font color="#CCCCCC"> history of malware is the</font><font color="#E5E5E5"> Melissa</font>

145
00:06:04,330 --> 00:06:09,969
<font color="#CCCCCC">virus macros existed</font><font color="#E5E5E5"> or malicious macros</font>

146
00:06:07,600 --> 00:06:11,650
existed<font color="#E5E5E5"> previous to Melissa</font>

147
00:06:09,970 --> 00:06:14,260
but the reason<font color="#CCCCCC"> melissa is famous is</font>

148
00:06:11,650 --> 00:06:17,169
because<font color="#CCCCCC"> it propagated itself</font><font color="#E5E5E5"> it would</font>

149
00:06:14,260 --> 00:06:18,820
read<font color="#E5E5E5"> 50 email addresses from your</font>

150
00:06:17,170 --> 00:06:21,040
Outlook contacts and<font color="#E5E5E5"> send itself to</font>

151
00:06:18,820 --> 00:06:23,670
<font color="#E5E5E5">those contacts as</font><font color="#CCCCCC"> well it</font><font color="#E5E5E5"> was called a</font>

152
00:06:21,040 --> 00:06:25,920
virus<font color="#E5E5E5"> because it would infect your</font>

153
00:06:23,670 --> 00:06:27,970
template on<font color="#CCCCCC"> your</font><font color="#E5E5E5"> local office</font>

154
00:06:25,920 --> 00:06:29,410
<font color="#E5E5E5">installation and then every subsequent</font>

155
00:06:27,970 --> 00:06:32,050
<font color="#E5E5E5">document you would create would have a</font>

156
00:06:29,410 --> 00:06:33,760
copy<font color="#CCCCCC"> of the Melissa virus and it wasn't</font>

157
00:06:32,050 --> 00:06:36,040
<font color="#E5E5E5">particularly malicious other than</font><font color="#CCCCCC"> it</font>

158
00:06:33,760 --> 00:06:37,599
swamped<font color="#CCCCCC"> computer networks at the time</font>

159
00:06:36,040 --> 00:06:38,860
which<font color="#E5E5E5"> weren't as robust as they are</font>

160
00:06:37,600 --> 00:06:43,060
<font color="#E5E5E5">today</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> brought down a number of</font>

161
00:06:38,860 --> 00:06:46,270
computer networks at<font color="#CCCCCC"> the time</font><font color="#E5E5E5"> so in 2007</font>

162
00:06:43,060 --> 00:06:47,830
<font color="#E5E5E5">Microsoft made some big security</font>

163
00:06:46,270 --> 00:06:49,299
improvements<font color="#E5E5E5"> in a lot of their products</font>

164
00:06:47,830 --> 00:06:51,659
<font color="#E5E5E5">or it was kind of leading up to this</font>

165
00:06:49,300 --> 00:06:54,460
point<font color="#CCCCCC"> so in office they did the disabled</font>

166
00:06:51,660 --> 00:06:56,320
<font color="#E5E5E5">macros by default</font><font color="#CCCCCC"> and we achieved peace</font>

167
00:06:54,460 --> 00:06:57,849
in the galaxy<font color="#E5E5E5"> there's a lot myself</font>

168
00:06:56,320 --> 00:06:59,500
<font color="#E5E5E5">included thought the problem was going</font>

169
00:06:57,850 --> 00:07:03,160
to be solved<font color="#E5E5E5"> once people had to click</font>

170
00:06:59,500 --> 00:07:03,910
through something to enable macros but

171
00:07:03,160 --> 00:07:06,160
like the<font color="#CCCCCC"> Deathstar</font>

172
00:07:03,910 --> 00:07:09,160
that we have to<font color="#E5E5E5"> keep destroying every</font>

173
00:07:06,160 --> 00:07:11,970
couple movies<font color="#CCCCCC"> bad things keep have a</font>

174
00:07:09,160 --> 00:07:11,970
<font color="#E5E5E5">habit of coming back</font>

175
00:07:11,980 --> 00:07:16,690
so between<font color="#E5E5E5"> 2007 and now they didn't go</font>

176
00:07:15,400 --> 00:07:18,340
<font color="#CCCCCC">away</font>

177
00:07:16,690 --> 00:07:20,170
there's a<font color="#E5E5E5"> famous kind of hacking</font><font color="#CCCCCC"> and</font>

178
00:07:18,340 --> 00:07:23,500
<font color="#E5E5E5">sentence against the German Chancellor</font>

179
00:07:20,170 --> 00:07:25,510
Angela Merkel in 2007<font color="#CCCCCC"> that was based on</font>

180
00:07:23,500 --> 00:07:28,630
a<font color="#E5E5E5"> office document with the malicious</font>

181
00:07:25,510 --> 00:07:29,740
macro and there was there's a nice paper

182
00:07:28,630 --> 00:07:31,870
about how they were<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> be the</font>

183
00:07:29,740 --> 00:07:34,720
future<font color="#CCCCCC"> of cyber war the future munitions</font>

184
00:07:31,870 --> 00:07:37,930
<font color="#E5E5E5">of a cyber war and and most recently and</font>

185
00:07:34,720 --> 00:07:39,720
I would in my<font color="#E5E5E5"> kind of like anecdotal</font>

186
00:07:37,930 --> 00:07:42,700
just being in the industry<font color="#CCCCCC"> around</font>

187
00:07:39,720 --> 00:07:46,930
<font color="#CCCCCC">2012-2013 is</font><font color="#E5E5E5"> when we started to see a</font>

188
00:07:42,700 --> 00:07:49,630
lot of malicious<font color="#E5E5E5"> macros like kind of the</font>

189
00:07:46,930 --> 00:07:51,640
rebirth of them and you can kind of see

190
00:07:49,630 --> 00:07:53,680
that<font color="#E5E5E5"> from this this really good vice</font>

191
00:07:51,640 --> 00:07:54,430
headline<font color="#E5E5E5"> the</font><font color="#CCCCCC"> 90s hacking trick making</font><font color="#E5E5E5"> a</font>

192
00:07:53,680 --> 00:07:56,140
comeback<font color="#E5E5E5"> right</font>

193
00:07:54,430 --> 00:07:59,140
we thought we'd kind of<font color="#E5E5E5"> solve the macro</font>

194
00:07:56,140 --> 00:08:02,740
problem<font color="#CCCCCC"> but here we are</font><font color="#E5E5E5"> sort of dealing</font>

195
00:07:59,140 --> 00:08:05,140
with<font color="#E5E5E5"> them</font><font color="#CCCCCC"> kind of the</font><font color="#E5E5E5"> final sort of</font>

196
00:08:02,740 --> 00:08:06,910
introduction<font color="#E5E5E5"> slide</font><font color="#CCCCCC"> this is a</font><font color="#E5E5E5"> little bit</font>

197
00:08:05,140 --> 00:08:09,880
anecdotal I don't have this presentation

198
00:08:06,910 --> 00:08:12,190
<font color="#E5E5E5">is about this but this is a screenshot</font>

199
00:08:09,880 --> 00:08:14,469
<font color="#E5E5E5">of 2007</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I noticed that the old way</font>

200
00:08:12,190 --> 00:08:16,540
<font color="#E5E5E5">to enable macros had this options button</font>

201
00:08:14,470 --> 00:08:18,640
so you push this<font color="#E5E5E5"> and you get another</font>

202
00:08:16,540 --> 00:08:20,440
menu<font color="#CCCCCC"> then there was I think</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> was a</font>

203
00:08:18,640 --> 00:08:22,840
radio button you had to choose<font color="#CCCCCC"> something</font>

204
00:08:20,440 --> 00:08:23,350
and then it<font color="#E5E5E5"> then in okay so two to three</font>

205
00:08:22,840 --> 00:08:27,190
clicks

206
00:08:23,350 --> 00:08:28,690
whereas in office 2010<font color="#CCCCCC"> and later they</font>

207
00:08:27,190 --> 00:08:33,130
kind of they kind<font color="#E5E5E5"> of simplified this</font>

208
00:08:28,690 --> 00:08:34,570
down to enable<font color="#CCCCCC"> content so this didn't</font>

209
00:08:33,130 --> 00:08:38,620
<font color="#E5E5E5">help</font><font color="#CCCCCC"> I guess that's my</font><font color="#E5E5E5"> point of this</font>

210
00:08:34,570 --> 00:08:40,510
<font color="#E5E5E5">slide</font><font color="#CCCCCC"> okay I've told you about</font><font color="#E5E5E5"> this</font>

211
00:08:38,620 --> 00:08:42,820
malicious macro problem<font color="#CCCCCC"> again I can</font><font color="#E5E5E5"> tell</font>

212
00:08:40,510 --> 00:08:45,850
you how to<font color="#E5E5E5"> solve it</font><font color="#CCCCCC"> immediately and that</font>

213
00:08:42,820 --> 00:08:47,470
is if you can block any document coming

214
00:08:45,850 --> 00:08:51,340
in to your email gateway<font color="#CCCCCC"> from outside</font>

215
00:08:47,470 --> 00:08:53,380
that has a macro you just do<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the</font>

216
00:08:51,340 --> 00:08:56,470
problem<font color="#CCCCCC"> with this approach</font><font color="#E5E5E5"> is that like</font>

217
00:08:53,380 --> 00:08:58,600
I<font color="#E5E5E5"> was saying before</font><font color="#CCCCCC"> commerce is really</font>

218
00:08:56,470 --> 00:09:01,000
conducted through a lot of the use of a

219
00:08:58,600 --> 00:09:05,350
lot of<font color="#CCCCCC"> these documents</font><font color="#E5E5E5"> so unfortunately</font>

220
00:09:01,000 --> 00:09:07,720
<font color="#E5E5E5">for the product</font><font color="#CCCCCC"> we sell we are given</font>

221
00:09:05,350 --> 00:09:09,820
unknown<font color="#E5E5E5"> office documents with macros and</font>

222
00:09:07,720 --> 00:09:12,700
<font color="#E5E5E5">we're expected to give a verdict</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> if</font>

223
00:09:09,820 --> 00:09:13,360
you can do this<font color="#E5E5E5"> please please do it</font><font color="#CCCCCC"> we</font>

224
00:09:12,700 --> 00:09:16,630
don't<font color="#CCCCCC"> have</font><font color="#E5E5E5"> that option</font>

225
00:09:13,360 --> 00:09:18,760
I know a lot<font color="#CCCCCC"> of people don't so this is</font>

226
00:09:16,630 --> 00:09:21,550
what this is what the so the rest of<font color="#CCCCCC"> the</font>

227
00:09:18,760 --> 00:09:23,410
talk now focuses on malicious macros and

228
00:09:21,550 --> 00:09:26,049
<font color="#E5E5E5">how we can better classify them for</font>

229
00:09:23,410 --> 00:09:27,699
for an intelligence perspective<font color="#E5E5E5"> so the</font>

230
00:09:26,049 --> 00:09:29,999
data set<font color="#CCCCCC"> that I worked on</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> this</font>

231
00:09:27,699 --> 00:09:33,719
<font color="#E5E5E5">project was from the month of August</font><font color="#CCCCCC"> and</font>

232
00:09:29,999 --> 00:09:38,879
what we're<font color="#CCCCCC"> looking at here</font><font color="#E5E5E5"> is a count of</font>

233
00:09:33,720 --> 00:09:42,429
unique<font color="#CCCCCC"> Shaw's so unique files that were</font>

234
00:09:38,879 --> 00:09:46,869
Microsoft Word documents so dot docx or

235
00:09:42,429 --> 00:09:49,419
dot docx<font color="#E5E5E5"> so Excel I kind of excluded</font>

236
00:09:46,869 --> 00:09:51,249
from this<font color="#E5E5E5"> data set and these are the</font>

237
00:09:49,419 --> 00:09:54,039
number of<font color="#E5E5E5"> unique ones that customers</font>

238
00:09:51,249 --> 00:09:55,599
send us to get a verdict on<font color="#E5E5E5"> and these</font>

239
00:09:54,039 --> 00:09:57,399
<font color="#E5E5E5">are the numbers</font><font color="#CCCCCC"> that get to the sandbox</font>

240
00:09:55,599 --> 00:09:59,529
which is kind of the end<font color="#E5E5E5"> of a long</font><font color="#CCCCCC"> chain</font>

241
00:09:57,399 --> 00:10:02,409
of services that could give a verdict

242
00:09:59,529 --> 00:10:06,059
<font color="#E5E5E5">and so once it gets</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the sandbox phase</font>

243
00:10:02,409 --> 00:10:08,439
we open it and and observe<font color="#E5E5E5"> behavioral</font>

244
00:10:06,059 --> 00:10:10,358
actions that the document<font color="#E5E5E5"> takes when</font>

245
00:10:08,439 --> 00:10:13,358
it's opened and then and the macros are

246
00:10:10,359 --> 00:10:15,909
enabled<font color="#CCCCCC"> and so the data here kind of</font>

247
00:10:13,359 --> 00:10:18,039
demonstrates<font color="#CCCCCC"> a typical work week so the</font>

248
00:10:15,909 --> 00:10:20,339
peaks here are Monday to Friday<font color="#E5E5E5"> and then</font>

249
00:10:18,039 --> 00:10:22,539
when less people<font color="#E5E5E5"> are</font><font color="#CCCCCC"> working basically</font>

250
00:10:20,339 --> 00:10:26,470
<font color="#CCCCCC">Saturday</font><font color="#E5E5E5"> and Sunday are much lower and</font>

251
00:10:22,539 --> 00:10:29,939
you can see we<font color="#CCCCCC"> averaged about</font><font color="#E5E5E5"> during the</font>

252
00:10:26,470 --> 00:10:34,359
work week<font color="#CCCCCC"> about four thousand unique</font>

253
00:10:29,939 --> 00:10:36,699
sorry<font color="#E5E5E5"> office documents with a macro so</font>

254
00:10:34,359 --> 00:10:39,069
this is<font color="#E5E5E5"> both clean</font><font color="#CCCCCC"> and malicious so we</font>

255
00:10:36,699 --> 00:10:42,339
got<font color="#E5E5E5"> four thousand unique ones every day</font>

256
00:10:39,069 --> 00:10:46,868
<font color="#CCCCCC">to</font><font color="#E5E5E5"> try to classify</font><font color="#CCCCCC"> okay so the goal of</font>

257
00:10:42,339 --> 00:10:48,069
<font color="#CCCCCC">this of my work was not to classify</font><font color="#E5E5E5"> we</font>

258
00:10:46,869 --> 00:10:50,769
already had<font color="#E5E5E5"> that information</font><font color="#CCCCCC"> we already</font>

259
00:10:48,069 --> 00:10:52,449
<font color="#E5E5E5">had we already knew</font><font color="#CCCCCC"> which ones</font><font color="#E5E5E5"> we gave a</font>

260
00:10:50,769 --> 00:10:55,509
clean verdict to and which ones we gave

261
00:10:52,449 --> 00:10:57,488
a malicious verdict to so of the ones

262
00:10:55,509 --> 00:10:59,319
<font color="#E5E5E5">that we gave a malicious verdict to we</font>

263
00:10:57,489 --> 00:11:01,509
wanted to supplement<font color="#E5E5E5"> the data not</font><font color="#CCCCCC"> only</font>

264
00:10:59,319 --> 00:11:05,128
is it malicious but can we give<font color="#E5E5E5"> any kind</font>

265
00:11:01,509 --> 00:11:07,959
<font color="#E5E5E5">of data about the</font><font color="#CCCCCC"> threat actors involved</font>

266
00:11:05,129 --> 00:11:11,470
<font color="#E5E5E5">any changes of the payloads over</font><font color="#CCCCCC"> time</font>

267
00:11:07,959 --> 00:11:13,388
and tactics as well<font color="#CCCCCC"> as our</font><font color="#E5E5E5"> customers are</font>

268
00:11:11,470 --> 00:11:14,769
always interested<font color="#E5E5E5"> in finding targeted</font>

269
00:11:13,389 --> 00:11:17,139
attacks<font color="#E5E5E5"> so if it's something really</font>

270
00:11:14,769 --> 00:11:19,449
<font color="#CCCCCC">unique</font><font color="#E5E5E5"> to a specific set of customers</font>

271
00:11:17,139 --> 00:11:22,089
<font color="#E5E5E5">that</font><font color="#CCCCCC"> would be interesting from</font><font color="#E5E5E5"> a threat</font>

272
00:11:19,449 --> 00:11:23,649
intelligence<font color="#E5E5E5"> standpoint and from a</font>

273
00:11:22,089 --> 00:11:25,689
<font color="#CCCCCC">personal standpoint I would</font><font color="#E5E5E5"> just love</font><font color="#CCCCCC"> to</font>

274
00:11:23,649 --> 00:11:27,819
handle<font color="#E5E5E5"> the malicious macro</font><font color="#CCCCCC"> problem and</font>

275
00:11:25,689 --> 00:11:30,959
never look at a visual<font color="#E5E5E5"> basic for</font>

276
00:11:27,819 --> 00:11:30,959
applications again

277
00:11:32,630 --> 00:11:40,189
okay so when we<font color="#E5E5E5"> back</font><font color="#CCCCCC"> at the beginning</font>

278
00:11:35,660 --> 00:11:41,480
<font color="#CCCCCC">when I showed</font><font color="#E5E5E5"> you a number of of the</font>

279
00:11:40,190 --> 00:11:44,240
sample documents they all had an image

280
00:11:41,480 --> 00:11:45,529
<font color="#E5E5E5">in them and over time when you open up</font>

281
00:11:44,240 --> 00:11:46,880
these things<font color="#E5E5E5"> and</font><font color="#CCCCCC"> start looking</font><font color="#E5E5E5"> at them</font>

282
00:11:45,529 --> 00:11:49,279
<font color="#CCCCCC">you</font><font color="#E5E5E5"> notice that the same image comes up</font>

283
00:11:46,880 --> 00:11:52,339
and up and over<font color="#CCCCCC"> and</font><font color="#E5E5E5"> over again</font><font color="#CCCCCC"> so there</font>

284
00:11:49,279 --> 00:11:54,079
was a kind of an idea<font color="#CCCCCC"> of</font><font color="#E5E5E5"> well what if we</font>

285
00:11:52,339 --> 00:11:55,430
extracted every image<font color="#E5E5E5"> that was in the</font>

286
00:11:54,079 --> 00:11:57,649
document<font color="#E5E5E5"> hashed them and looked for</font>

287
00:11:55,430 --> 00:12:01,399
overlapping so exact exactly image

288
00:11:57,649 --> 00:12:03,110
matching<font color="#E5E5E5"> so again so this is this is the</font>

289
00:12:01,399 --> 00:12:06,560
exact same slide<font color="#E5E5E5"> I just show this is the</font>

290
00:12:03,110 --> 00:12:10,130
volume<font color="#CCCCCC"> of</font><font color="#E5E5E5"> total Word documents with a</font>

291
00:12:06,560 --> 00:12:13,969
macro and this is over that same time

292
00:12:10,130 --> 00:12:16,310
<font color="#CCCCCC">period this is the malicious</font><font color="#E5E5E5"> count from</font>

293
00:12:13,970 --> 00:12:18,680
that set of unique<font color="#E5E5E5"> unique documents and</font>

294
00:12:16,310 --> 00:12:21,199
you can<font color="#CCCCCC"> see right away that</font><font color="#E5E5E5"> there is no</font>

295
00:12:18,680 --> 00:12:22,579
kind<font color="#E5E5E5"> of day</font><font color="#CCCCCC"> work week</font><font color="#E5E5E5"> pattern here it's</font>

296
00:12:21,199 --> 00:12:24,740
just<font color="#CCCCCC"> sort of it's sort</font><font color="#E5E5E5"> of random it's</font>

297
00:12:22,579 --> 00:12:28,250
it's a little bit<font color="#E5E5E5"> spiky here in the</font>

298
00:12:24,740 --> 00:12:30,920
<font color="#E5E5E5">early part flat for</font><font color="#CCCCCC"> awhile</font><font color="#E5E5E5"> and spiky at</font>

299
00:12:28,250 --> 00:12:32,690
the end sort of the the first<font color="#E5E5E5"> question</font>

300
00:12:30,920 --> 00:12:35,259
<font color="#CCCCCC">that might come to</font><font color="#E5E5E5"> mind here is</font><font color="#CCCCCC"> well</font>

301
00:12:32,690 --> 00:12:37,850
what happened here<font color="#E5E5E5"> what's going on</font><font color="#CCCCCC"> here</font>

302
00:12:35,259 --> 00:12:41,540
<font color="#CCCCCC">because this graph is showing unique</font>

303
00:12:37,850 --> 00:12:42,860
samples<font color="#CCCCCC"> there's actually</font><font color="#E5E5E5"> there are</font>

304
00:12:41,540 --> 00:12:45,139
spikes here if you<font color="#E5E5E5"> consider the</font>

305
00:12:42,860 --> 00:12:47,170
identical file so we do see the

306
00:12:45,139 --> 00:12:51,050
identical<font color="#E5E5E5"> file sent to like multiple</font>

307
00:12:47,170 --> 00:12:53,060
<font color="#E5E5E5">customers but when their files are</font>

308
00:12:51,050 --> 00:12:54,889
identical we don't it's sort of<font color="#E5E5E5"> easy</font><font color="#CCCCCC"> to</font>

309
00:12:53,060 --> 00:12:58,518
deal<font color="#E5E5E5"> with them</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is this is</font>

310
00:12:54,889 --> 00:13:00,889
<font color="#E5E5E5">totally</font><font color="#CCCCCC"> unique counts and so what we</font>

311
00:12:58,519 --> 00:13:03,589
kind<font color="#E5E5E5"> of wanted to do was account for</font>

312
00:13:00,889 --> 00:13:05,089
some of<font color="#E5E5E5"> these spikes and say yeah we</font>

313
00:13:03,589 --> 00:13:08,240
know<font color="#CCCCCC"> these</font><font color="#E5E5E5"> are malicious but what more</font>

314
00:13:05,089 --> 00:13:11,360
data can<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can we tell about them so</font>

315
00:13:08,240 --> 00:13:13,880
<font color="#E5E5E5">using the image hashing extracting the</font>

316
00:13:11,360 --> 00:13:15,529
images and<font color="#E5E5E5"> then grouping them based on</font>

317
00:13:13,880 --> 00:13:18,050
<font color="#E5E5E5">that we kind of come</font><font color="#CCCCCC"> up with this</font>

318
00:13:15,529 --> 00:13:21,350
grouping<font color="#E5E5E5"> so what what I'm showing here</font>

319
00:13:18,050 --> 00:13:24,620
<font color="#CCCCCC">is</font><font color="#E5E5E5"> that top</font><font color="#CCCCCC"> ten groups in terms</font><font color="#E5E5E5"> of count</font>

320
00:13:21,350 --> 00:13:28,850
of unique documents that contained an

321
00:13:24,620 --> 00:13:30,889
identical image inside them<font color="#E5E5E5"> so kind</font><font color="#CCCCCC"> of</font>

322
00:13:28,850 --> 00:13:34,670
right away<font color="#CCCCCC"> you see some of the spikes</font>

323
00:13:30,889 --> 00:13:37,759
are accounted for<font color="#E5E5E5"> so this blue</font><font color="#CCCCCC"> group one</font>

324
00:13:34,670 --> 00:13:41,930
which is the<font color="#E5E5E5"> largest group had eight</font>

325
00:13:37,759 --> 00:13:44,240
<font color="#E5E5E5">hundred unique documents had the same</font>

326
00:13:41,930 --> 00:13:46,489
image<font color="#E5E5E5"> and then it</font><font color="#CCCCCC"> it's interestingly it</font>

327
00:13:44,240 --> 00:13:48,260
kind<font color="#E5E5E5"> of spikes drops off</font>

328
00:13:46,490 --> 00:13:51,020
<font color="#E5E5E5">buycks again and then it's kind of gone</font>

329
00:13:48,260 --> 00:13:54,050
for the rest<font color="#E5E5E5"> of the month</font>

330
00:13:51,020 --> 00:13:57,770
what we see here<font color="#CCCCCC"> too is group 2 which is</font>

331
00:13:54,050 --> 00:13:59,990
the green again kind of was falling as

332
00:13:57,770 --> 00:14:03,230
the month began spiked<font color="#E5E5E5"> and then had a</font>

333
00:13:59,990 --> 00:14:06,560
<font color="#E5E5E5">little bit at the</font><font color="#CCCCCC"> end okay</font><font color="#E5E5E5"> so that's</font>

334
00:14:03,230 --> 00:14:09,010
<font color="#E5E5E5">kind of</font><font color="#CCCCCC"> interesting so we've we've now</font>

335
00:14:06,560 --> 00:14:13,040
grouped documents that have identical

336
00:14:09,010 --> 00:14:15,140
<font color="#E5E5E5">images in them but what more can we say</font>

337
00:14:13,040 --> 00:14:18,050
<font color="#CCCCCC">about them well we have some sandboxing</font>

338
00:14:15,140 --> 00:14:20,449
<font color="#E5E5E5">data or runtime data</font><font color="#CCCCCC"> what happens when</font>

339
00:14:18,050 --> 00:14:24,979
you<font color="#CCCCCC"> open them</font><font color="#E5E5E5"> so looking at just this</font>

340
00:14:20,450 --> 00:14:27,529
group one<font color="#E5E5E5"> just</font><font color="#CCCCCC"> just Group one if we pull</font>

341
00:14:24,980 --> 00:14:29,540
out<font color="#E5E5E5"> the</font><font color="#CCCCCC"> runtime data from the sandbox</font>

342
00:14:27,529 --> 00:14:31,310
<font color="#CCCCCC">all of these documents here we're</font>

343
00:14:29,540 --> 00:14:33,560
contacting<font color="#CCCCCC"> and downloading the exact</font>

344
00:14:31,310 --> 00:14:35,270
same next stage payload<font color="#E5E5E5"> so all of these</font>

345
00:14:33,560 --> 00:14:37,550
<font color="#CCCCCC">doc all 800 of</font><font color="#E5E5E5"> these eight hundred odd</font>

346
00:14:35,270 --> 00:14:39,760
documents here we're all contacting the

347
00:14:37,550 --> 00:14:43,000
same<font color="#CCCCCC"> IP</font><font color="#E5E5E5"> address</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> getting the same</font>

348
00:14:39,760 --> 00:14:45,170
payload<font color="#E5E5E5"> so that kind of lets us start</font>

349
00:14:43,000 --> 00:14:49,070
being a<font color="#E5E5E5"> little bit more confident in</font>

350
00:14:45,170 --> 00:14:50,660
<font color="#E5E5E5">there in the grouping of these and again</font>

351
00:14:49,070 --> 00:14:52,160
it's the same<font color="#E5E5E5"> for all of these now if we</font>

352
00:14:50,660 --> 00:14:57,350
look<font color="#E5E5E5"> at</font><font color="#CCCCCC"> Group</font><font color="#E5E5E5"> two just looking at the</font>

353
00:14:52,160 --> 00:14:59,420
<font color="#E5E5E5">the top two groupings of documents the</font>

354
00:14:57,350 --> 00:15:01,250
<font color="#E5E5E5">green which all share</font><font color="#CCCCCC"> an image they are</font>

355
00:14:59,420 --> 00:15:04,029
actually downloading the exact same

356
00:15:01,250 --> 00:15:07,970
payload<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the blue group is is</font>

357
00:15:04,029 --> 00:15:11,779
downloading<font color="#E5E5E5"> so both</font><font color="#CCCCCC"> of these the Group 1</font>

358
00:15:07,970 --> 00:15:13,610
and group 2 using the each within<font color="#E5E5E5"> each</font>

359
00:15:11,779 --> 00:15:15,500
<font color="#CCCCCC">one they use an identical image but</font>

360
00:15:13,610 --> 00:15:17,000
their first<font color="#E5E5E5"> stage payload the place that</font>

361
00:15:15,500 --> 00:15:19,399
they're downloading their first stage of

362
00:15:17,000 --> 00:15:21,589
malware<font color="#CCCCCC"> from is from</font><font color="#E5E5E5"> the exact same</font>

363
00:15:19,399 --> 00:15:24,920
<font color="#CCCCCC">location so if you saw the keynote</font>

364
00:15:21,589 --> 00:15:29,029
earlier<font color="#E5E5E5"> today it seems like this was a</font>

365
00:15:24,920 --> 00:15:31,060
kid<font color="#E5E5E5"> right it seems like someone had some</font>

366
00:15:29,029 --> 00:15:34,790
automation<font color="#E5E5E5"> to generate these documents</font>

367
00:15:31,060 --> 00:15:38,029
<font color="#CCCCCC">they all included the</font><font color="#E5E5E5"> same image and</font>

368
00:15:34,790 --> 00:15:40,819
they were after<font color="#E5E5E5"> the same kind</font><font color="#CCCCCC"> of payload</font>

369
00:15:38,029 --> 00:15:44,750
<font color="#E5E5E5">and there was a second kit used or maybe</font>

370
00:15:40,820 --> 00:15:46,550
a second automation solution<font color="#CCCCCC"> used to</font>

371
00:15:44,750 --> 00:15:49,490
create group<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> and what we're hoping to</font>

372
00:15:46,550 --> 00:15:51,529
do over time<font color="#E5E5E5"> is</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> determine our group</font><font color="#CCCCCC"> 1</font>

373
00:15:49,490 --> 00:15:53,270
<font color="#E5E5E5">and to the same people or they different</font>

374
00:15:51,529 --> 00:15:53,590
what's kind of interesting is is that

375
00:15:53,270 --> 00:15:57,370
group

376
00:15:53,590 --> 00:15:59,080
- falls off<font color="#CCCCCC"> 2-0 on the 4th</font><font color="#E5E5E5"> and suddenly</font>

377
00:15:57,370 --> 00:16:01,030
<font color="#E5E5E5">group</font><font color="#CCCCCC"> 1 shoots up and falls down like</font>

378
00:15:59,080 --> 00:16:02,710
they don't kind<font color="#E5E5E5"> of coincide with each</font>

379
00:16:01,030 --> 00:16:04,209
<font color="#E5E5E5">other so we're we're</font><font color="#CCCCCC"> kind of hoping</font><font color="#E5E5E5"> this</font>

380
00:16:02,710 --> 00:16:07,150
research is<font color="#E5E5E5"> going to help us track when</font>

381
00:16:04,210 --> 00:16:09,280
we can we can do subsequent groupings on

382
00:16:07,150 --> 00:16:11,459
this and you can see that there's

383
00:16:09,280 --> 00:16:14,260
there's a<font color="#E5E5E5"> lot of smaller groups as well</font>

384
00:16:11,460 --> 00:16:16,090
<font color="#CCCCCC">just to show you the</font><font color="#E5E5E5"> the two documents</font>

385
00:16:14,260 --> 00:16:19,120
<font color="#E5E5E5">that came out so this is</font><font color="#CCCCCC"> Group one here</font>

386
00:16:16,090 --> 00:16:20,560
<font color="#E5E5E5">on the</font><font color="#CCCCCC"> left</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of interestingly their</font>

387
00:16:19,120 --> 00:16:23,320
automation solution that built this

388
00:16:20,560 --> 00:16:24,729
document<font color="#E5E5E5"> this is the image inside it but</font>

389
00:16:23,320 --> 00:16:26,800
it's actually<font color="#CCCCCC"> not</font><font color="#E5E5E5"> visible when</font><font color="#CCCCCC"> you open</font>

390
00:16:24,730 --> 00:16:28,630
the document so<font color="#E5E5E5"> the forensics tools I</font>

391
00:16:26,800 --> 00:16:30,880
use which was<font color="#E5E5E5"> just for most if you're</font>

392
00:16:28,630 --> 00:16:32,410
familiar with that<font color="#E5E5E5"> tool</font><font color="#CCCCCC"> it extracts</font><font color="#E5E5E5"> this</font>

393
00:16:30,880 --> 00:16:33,970
image this image<font color="#E5E5E5"> is inside the document</font>

394
00:16:32,410 --> 00:16:36,850
<font color="#E5E5E5">but it's actually</font><font color="#CCCCCC"> not visible</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> you</font>

395
00:16:33,970 --> 00:16:39,280
open it<font color="#E5E5E5"> and on this one</font><font color="#CCCCCC"> the image is</font>

396
00:16:36,850 --> 00:16:41,770
very<font color="#E5E5E5"> much open</font><font color="#CCCCCC"> so over the month there</font>

397
00:16:39,280 --> 00:16:43,780
was<font color="#CCCCCC"> 1500 these</font><font color="#E5E5E5"> there was a round a</font>

398
00:16:41,770 --> 00:16:45,569
thousand of these<font color="#E5E5E5"> and they both were</font>

399
00:16:43,780 --> 00:16:47,650
downloading the exact same payload<font color="#E5E5E5"> so</font>

400
00:16:45,570 --> 00:16:50,470
from an analyst standpoint<font color="#E5E5E5"> right away</font>

401
00:16:47,650 --> 00:16:52,240
you can say<font color="#E5E5E5"> okay well these 1500 I kind</font>

402
00:16:50,470 --> 00:16:54,130
of understand all<font color="#CCCCCC"> of them and then I can</font>

403
00:16:52,240 --> 00:16:56,440
look at the payload<font color="#CCCCCC"> get some runtime</font>

404
00:16:54,130 --> 00:16:58,240
<font color="#E5E5E5">data from when we open them and describe</font>

405
00:16:56,440 --> 00:17:00,700
this group<font color="#E5E5E5"> that's sending them and</font>

406
00:16:58,240 --> 00:17:05,980
supplement our convictions<font color="#E5E5E5"> with that</font>

407
00:17:00,700 --> 00:17:07,840
<font color="#E5E5E5">kind of data okay so an incredible</font>

408
00:17:05,980 --> 00:17:11,349
number<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> documents have images and</font>

409
00:17:07,839 --> 00:17:13,689
<font color="#CCCCCC">we're it was kind of</font><font color="#E5E5E5"> useful to group</font>

410
00:17:11,349 --> 00:17:16,000
them in the<font color="#E5E5E5"> the exact image hashing</font>

411
00:17:13,690 --> 00:17:18,280
method but there<font color="#E5E5E5"> was a small number</font><font color="#CCCCCC"> of</font>

412
00:17:16,000 --> 00:17:21,040
documents<font color="#E5E5E5"> that didn't have any image</font>

413
00:17:18,280 --> 00:17:22,480
data to hash<font color="#E5E5E5"> right so that the the</font>

414
00:17:21,040 --> 00:17:26,470
technique pre-leased described wouldn't

415
00:17:22,480 --> 00:17:28,690
work at all so for these<font color="#E5E5E5"> documents I</font>

416
00:17:26,470 --> 00:17:30,820
wanted to try something<font color="#CCCCCC"> else</font><font color="#E5E5E5"> so this is</font>

417
00:17:28,690 --> 00:17:33,220
both dot doc and<font color="#E5E5E5"> docx</font>

418
00:17:30,820 --> 00:17:35,560
so to do the subsequent work I then

419
00:17:33,220 --> 00:17:37,570
separated them into<font color="#E5E5E5"> the old format which</font>

420
00:17:35,560 --> 00:17:43,600
is dot<font color="#E5E5E5"> doc</font><font color="#CCCCCC"> and the new format which is</font>

421
00:17:37,570 --> 00:17:45,970
dot docx<font color="#CCCCCC"> so this graph is both and this</font>

422
00:17:43,600 --> 00:17:49,449
subsequent graph is just<font color="#CCCCCC"> the old-style</font>

423
00:17:45,970 --> 00:17:52,090
<font color="#E5E5E5">document CDF is another name</font><font color="#CCCCCC"> for it</font><font color="#E5E5E5"> it's</font>

424
00:17:49,450 --> 00:17:54,130
basically<font color="#E5E5E5"> dot</font><font color="#CCCCCC"> docx</font><font color="#E5E5E5"> the older Microsoft</font>

425
00:17:52,090 --> 00:17:56,020
<font color="#E5E5E5">Office format so again you can see</font><font color="#CCCCCC"> a</font>

426
00:17:54,130 --> 00:17:57,940
<font color="#E5E5E5">spike</font><font color="#CCCCCC"> now we're talking about</font><font color="#E5E5E5"> a very low</font>

427
00:17:56,020 --> 00:17:59,379
volume<font color="#E5E5E5"> of unique files from what we were</font>

428
00:17:57,940 --> 00:18:02,240
looking at<font color="#E5E5E5"> in the previous graphs but</font>

429
00:17:59,380 --> 00:18:04,580
again you see<font color="#CCCCCC"> a kind of a spike and then</font>

430
00:18:02,240 --> 00:18:07,400
trailing<font color="#E5E5E5"> off</font>

431
00:18:04,580 --> 00:18:10,310
so the idea here<font color="#E5E5E5"> was I had</font><font color="#CCCCCC"> no image data</font>

432
00:18:07,400 --> 00:18:14,900
<font color="#E5E5E5">hat</font><font color="#CCCCCC"> - but</font><font color="#E5E5E5"> I</font>

433
00:18:10,310 --> 00:18:16,129
I started to<font color="#E5E5E5"> look at the format of of a</font>

434
00:18:14,900 --> 00:18:17,660
<font color="#CCCCCC">docx file and I</font><font color="#E5E5E5"> want to</font><font color="#CCCCCC"> kind of</font>

435
00:18:16,130 --> 00:18:20,180
something<font color="#E5E5E5"> simple</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> was similar</font><font color="#CCCCCC"> to the</font>

436
00:18:17,660 --> 00:18:22,910
image hashing because I was somewhat

437
00:18:20,180 --> 00:18:25,460
<font color="#CCCCCC">successful</font><font color="#E5E5E5"> so what I what I just did is</font>

438
00:18:22,910 --> 00:18:27,940
hash the streams<font color="#E5E5E5"> so a dot</font><font color="#CCCCCC"> doc file is</font>

439
00:18:25,460 --> 00:18:30,410
<font color="#E5E5E5">made up of named streams so I just</font>

440
00:18:27,940 --> 00:18:33,500
extracted all<font color="#CCCCCC"> the streams</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> hashed</font>

441
00:18:30,410 --> 00:18:35,000
them<font color="#E5E5E5"> and so that gives you like a set of</font>

442
00:18:33,500 --> 00:18:36,200
hashes of<font color="#E5E5E5"> streams that</font><font color="#CCCCCC"> are inside a</font>

443
00:18:35,000 --> 00:18:38,570
<font color="#CCCCCC">document and I do that for every</font>

444
00:18:36,200 --> 00:18:40,580
document<font color="#E5E5E5"> and then look</font><font color="#CCCCCC"> for intersections</font>

445
00:18:38,570 --> 00:18:42,050
<font color="#E5E5E5">between documents and there's a little</font>

446
00:18:40,580 --> 00:18:44,990
<font color="#E5E5E5">bit of logic here some of these streams</font>

447
00:18:42,050 --> 00:18:48,470
are<font color="#E5E5E5"> not useful</font><font color="#CCCCCC"> for this purpose because</font>

448
00:18:44,990 --> 00:18:49,910
<font color="#CCCCCC">comp object dreams are often the same</font>

449
00:18:48,470 --> 00:18:51,020
<font color="#E5E5E5">between documents that really have</font>

450
00:18:49,910 --> 00:18:54,550
nothing<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> with each other</font>

451
00:18:51,020 --> 00:18:57,470
whereas some of these other<font color="#E5E5E5"> streams like</font>

452
00:18:54,550 --> 00:19:00,620
anything to do with VBA is often the

453
00:18:57,470 --> 00:19:02,750
same or<font color="#CCCCCC"> word document so when the</font><font color="#E5E5E5"> kids</font>

454
00:19:00,620 --> 00:19:04,760
are building<font color="#E5E5E5"> these documents they're</font>

455
00:19:02,750 --> 00:19:06,710
assembling<font color="#E5E5E5"> the document programmatically</font>

456
00:19:04,760 --> 00:19:08,810
<font color="#E5E5E5">and a lot of these contents are not</font>

457
00:19:06,710 --> 00:19:10,910
changing between<font color="#E5E5E5"> they might be re</font>

458
00:19:08,810 --> 00:19:12,139
obfuscating the macro<font color="#E5E5E5"> that's inside but</font>

459
00:19:10,910 --> 00:19:13,490
some of these other supporting streams

460
00:19:12,140 --> 00:19:16,280
are<font color="#E5E5E5"> remaining the</font><font color="#CCCCCC"> same so</font><font color="#E5E5E5"> that's how</font>

461
00:19:13,490 --> 00:19:18,500
we're<font color="#E5E5E5"> kind of able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> match them up so</font>

462
00:19:16,280 --> 00:19:20,030
the results of<font color="#E5E5E5"> this were again we we get</font>

463
00:19:18,500 --> 00:19:22,250
<font color="#E5E5E5">a number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> groups</font><font color="#CCCCCC"> but interestingly</font>

464
00:19:20,030 --> 00:19:25,670
some<font color="#CCCCCC"> of the spikes again we're</font><font color="#E5E5E5"> counting</font>

465
00:19:22,250 --> 00:19:29,180
<font color="#E5E5E5">or accounted for so the early spike we</font>

466
00:19:25,670 --> 00:19:31,460
saw in the data<font color="#CCCCCC"> that</font><font color="#E5E5E5"> actually flowed</font>

467
00:19:29,180 --> 00:19:33,740
into<font color="#CCCCCC"> group two</font><font color="#E5E5E5"> the second largest</font><font color="#CCCCCC"> group</font>

468
00:19:31,460 --> 00:19:35,360
and you can<font color="#CCCCCC"> see that it it came up here</font>

469
00:19:33,740 --> 00:19:37,640
there's a little<font color="#CCCCCC"> bit at the end and</font>

470
00:19:35,360 --> 00:19:39,500
again<font color="#CCCCCC"> okay was this a good grouping does</font>

471
00:19:37,640 --> 00:19:41,450
this make sense<font color="#CCCCCC"> well we can use</font><font color="#E5E5E5"> the</font>

472
00:19:39,500 --> 00:19:43,340
runtime data from the sandbox to see yes

473
00:19:41,450 --> 00:19:45,230
these are all launching<font color="#E5E5E5"> PowerShell in</font>

474
00:19:43,340 --> 00:19:47,060
the exact same way<font color="#CCCCCC"> looks like they came</font>

475
00:19:45,230 --> 00:19:49,880
from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same kit and if we can keep</font>

476
00:19:47,060 --> 00:19:52,700
<font color="#E5E5E5">track</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this over time when this group</font>

477
00:19:49,880 --> 00:19:54,590
comes<font color="#E5E5E5"> back in September</font><font color="#CCCCCC"> we'll be able</font><font color="#E5E5E5"> to</font>

478
00:19:52,700 --> 00:19:57,170
<font color="#E5E5E5">maybe say</font><font color="#CCCCCC"> something and more intelligent</font>

479
00:19:54,590 --> 00:20:00,679
about<font color="#E5E5E5"> it then yeah it's just malicious</font>

480
00:19:57,170 --> 00:20:03,110
<font color="#E5E5E5">and the results from the docx so this is</font>

481
00:20:00,680 --> 00:20:05,480
just<font color="#E5E5E5"> the docx samples over the month</font>

482
00:20:03,110 --> 00:20:09,080
<font color="#E5E5E5">again we have a spike to account for and</font>

483
00:20:05,480 --> 00:20:10,790
some<font color="#E5E5E5"> background noise</font><font color="#CCCCCC"> doc</font><font color="#E5E5E5"> X's don't have</font>

484
00:20:09,080 --> 00:20:13,040
stream data it's a different file format

485
00:20:10,790 --> 00:20:14,750
but their zip files<font color="#E5E5E5"> and so inside the</font>

486
00:20:13,040 --> 00:20:17,570
zip file there's a number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> files</font><font color="#CCCCCC"> and</font>

487
00:20:14,750 --> 00:20:18,580
so in kind of using<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> the same</font>

488
00:20:17,570 --> 00:20:20,290
method

489
00:20:18,580 --> 00:20:22,419
instead of taking streams I just took

490
00:20:20,290 --> 00:20:25,260
the internal files hashed them and again

491
00:20:22,420 --> 00:20:27,820
looked for intersecting<font color="#E5E5E5"> sets between</font>

492
00:20:25,260 --> 00:20:29,379
<font color="#E5E5E5">documents and again some of these are</font>

493
00:20:27,820 --> 00:20:32,169
not useful<font color="#E5E5E5"> I threw them away</font>

494
00:20:29,380 --> 00:20:33,670
so anything<font color="#CCCCCC"> that ends in dot</font><font color="#E5E5E5"> re LS is</font>

495
00:20:32,170 --> 00:20:36,430
generally not<font color="#CCCCCC"> useful so these get thrown</font>

496
00:20:33,670 --> 00:20:39,100
away<font color="#E5E5E5"> but some of these</font><font color="#CCCCCC"> XML files</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> vba</font>

497
00:20:36,430 --> 00:20:41,140
project files are excellent for for

498
00:20:39,100 --> 00:20:45,909
grouping<font color="#E5E5E5"> documents that come from the</font>

499
00:20:41,140 --> 00:20:47,140
same<font color="#E5E5E5"> kit or</font><font color="#CCCCCC"> the same group again so what</font>

500
00:20:45,910 --> 00:20:48,970
was kind<font color="#CCCCCC"> of encouraging about</font><font color="#E5E5E5"> all this</font>

501
00:20:47,140 --> 00:20:50,770
work was is<font color="#CCCCCC"> that the spikes we're</font>

502
00:20:48,970 --> 00:20:54,280
starting<font color="#E5E5E5"> to get accounted for</font>

503
00:20:50,770 --> 00:20:56,379
whereas<font color="#E5E5E5"> grouping the internal files</font>

504
00:20:54,280 --> 00:20:59,200
accounted for the big spike we saw in

505
00:20:56,380 --> 00:21:01,000
the middle<font color="#CCCCCC"> of the month</font><font color="#E5E5E5"> and again</font><font color="#CCCCCC"> using</font>

506
00:20:59,200 --> 00:21:04,020
this sandbox data<font color="#E5E5E5"> that</font><font color="#CCCCCC"> run time</font><font color="#E5E5E5"> data as</font>

507
00:21:01,000 --> 00:21:08,560
a verification<font color="#CCCCCC"> these are all actually</font>

508
00:21:04,020 --> 00:21:11,110
related<font color="#E5E5E5"> so this kind of work is</font><font color="#CCCCCC"> it's</font>

509
00:21:08,560 --> 00:21:13,480
<font color="#CCCCCC">ongoing and the idea is that we're gonna</font>

510
00:21:11,110 --> 00:21:16,270
<font color="#E5E5E5">keep track of</font><font color="#CCCCCC"> this data over time and as</font>

511
00:21:13,480 --> 00:21:17,980
so as more<font color="#E5E5E5"> as more malicious documents</font>

512
00:21:16,270 --> 00:21:19,660
come in if they fit into one<font color="#E5E5E5"> of</font><font color="#CCCCCC"> these</font>

513
00:21:17,980 --> 00:21:22,090
groups<font color="#E5E5E5"> we'll be able to supplement our</font>

514
00:21:19,660 --> 00:21:23,470
data we've convicted them but<font color="#E5E5E5"> we'll</font><font color="#CCCCCC"> able</font>

515
00:21:22,090 --> 00:21:24,240
<font color="#E5E5E5">to</font><font color="#CCCCCC"> supplement like oh this is usually</font>

516
00:21:23,470 --> 00:21:26,230
<font color="#E5E5E5">ransomware</font>

517
00:21:24,240 --> 00:21:29,080
<font color="#CCCCCC">and now they're distributing</font><font color="#E5E5E5"> something</font>

518
00:21:26,230 --> 00:21:30,370
else or<font color="#E5E5E5"> we have all these</font><font color="#CCCCCC"> groups we have</font>

519
00:21:29,080 --> 00:21:31,840
all these malicious documents that we

520
00:21:30,370 --> 00:21:33,669
can't group what's special about them

521
00:21:31,840 --> 00:21:34,510
<font color="#E5E5E5">what what is what</font><font color="#CCCCCC"> is making</font><font color="#E5E5E5"> them</font>

522
00:21:33,670 --> 00:21:37,120
<font color="#E5E5E5">different are they doing something</font>

523
00:21:34,510 --> 00:21:39,879
<font color="#E5E5E5">different is it a new tactic and when we</font>

524
00:21:37,120 --> 00:21:42,159
see spikes<font color="#E5E5E5"> where we're hoping this</font>

525
00:21:39,880 --> 00:21:44,770
technique allows<font color="#E5E5E5"> us to account</font><font color="#CCCCCC"> for them</font>

526
00:21:42,160 --> 00:21:46,720
<font color="#E5E5E5">so I'm gonna we're gonna segue over to</font>

527
00:21:44,770 --> 00:21:48,490
Josh<font color="#E5E5E5"> and Josh is going to take us</font>

528
00:21:46,720 --> 00:21:50,650
through<font color="#E5E5E5"> the rest</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the presentation</font><font color="#CCCCCC"> so</font>

529
00:21:48,490 --> 00:21:52,780
just so you know if any of you<font color="#CCCCCC"> are earth</font>

530
00:21:50,650 --> 00:21:56,190
record customers or potential<font color="#E5E5E5"> records</font>

531
00:21:52,780 --> 00:21:59,020
customers<font color="#CCCCCC"> cisco brought us</font><font color="#E5E5E5"> here today so</font>

532
00:21:56,190 --> 00:22:01,180
<font color="#E5E5E5">a lot</font><font color="#CCCCCC"> of those extracted artifacts you</font>

533
00:21:59,020 --> 00:22:02,800
can<font color="#E5E5E5"> actually pivot from our sandbox and</font>

534
00:22:01,180 --> 00:22:04,300
<font color="#E5E5E5">we have a giant</font><font color="#CCCCCC"> elasticsearch cluster</font>

535
00:22:02,800 --> 00:22:06,909
that<font color="#E5E5E5"> you can search for any other</font>

536
00:22:04,300 --> 00:22:11,440
samples<font color="#E5E5E5"> that have the same artifacts so</font>

537
00:22:06,910 --> 00:22:13,570
just a commercial plug there but<font color="#E5E5E5"> so we</font>

538
00:22:11,440 --> 00:22:15,100
have<font color="#E5E5E5"> so a lot of you are gonna say okay</font>

539
00:22:13,570 --> 00:22:17,139
<font color="#E5E5E5">you're hashing image files whatever</font>

540
00:22:15,100 --> 00:22:19,870
<font color="#E5E5E5">that's lame</font><font color="#CCCCCC"> because you have a</font>

541
00:22:17,140 --> 00:22:22,540
cryptically sorry a<font color="#E5E5E5"> cryptographic secure</font>

542
00:22:19,870 --> 00:22:23,919
alga rhythm that's going to look for a

543
00:22:22,540 --> 00:22:25,540
single image file and<font color="#E5E5E5"> if you were to</font>

544
00:22:23,920 --> 00:22:26,560
change one single<font color="#E5E5E5"> pixel that image file</font>

545
00:22:25,540 --> 00:22:31,330
then it's going<font color="#E5E5E5"> to have a different hash</font>

546
00:22:26,560 --> 00:22:34,060
right so for this talking for our

547
00:22:31,330 --> 00:22:37,210
search to feed back into<font color="#E5E5E5"> our product</font>

548
00:22:34,060 --> 00:22:39,040
lines<font color="#CCCCCC"> I was looking at maybe some kind</font>

549
00:22:37,210 --> 00:22:40,900
<font color="#E5E5E5">of fuzzy matching algorithm that we can</font>

550
00:22:39,040 --> 00:22:43,810
use with images to cluster them<font color="#E5E5E5"> together</font>

551
00:22:40,900 --> 00:22:46,180
<font color="#CCCCCC">rather than using hashing mechanisms</font>

552
00:22:43,810 --> 00:22:47,740
that will<font color="#E5E5E5"> only look for exact matches so</font>

553
00:22:46,180 --> 00:22:50,740
I was<font color="#E5E5E5"> reading a whole bunch of academic</font>

554
00:22:47,740 --> 00:22:52,300
papers<font color="#CCCCCC"> by Google on scaling for looking</font>

555
00:22:50,740 --> 00:22:54,400
at duplicate images<font color="#E5E5E5"> within their engine</font>

556
00:22:52,300 --> 00:22:57,190
but I<font color="#E5E5E5"> thought we could use something</font><font color="#CCCCCC"> a</font>

557
00:22:54,400 --> 00:23:00,040
little bit simpler<font color="#CCCCCC"> the opencv project is</font>

558
00:22:57,190 --> 00:23:01,660
fantastic if you're going to use any if

559
00:23:00,040 --> 00:23:04,690
you're<font color="#E5E5E5"> going to do any image research or</font>

560
00:23:01,660 --> 00:23:07,600
video research they have<font color="#E5E5E5"> Python</font>

561
00:23:04,690 --> 00:23:09,970
libraries Python bindings<font color="#E5E5E5"> C++</font><font color="#CCCCCC"> C++</font>

562
00:23:07,600 --> 00:23:13,659
bindings<font color="#CCCCCC"> that provide a really</font><font color="#E5E5E5"> good way</font>

563
00:23:09,970 --> 00:23:16,120
of<font color="#E5E5E5"> working with images</font><font color="#CCCCCC"> I found there</font>

564
00:23:13,660 --> 00:23:18,990
<font color="#CCCCCC">their</font><font color="#E5E5E5"> orb algorithm which is oriented</font>

565
00:23:16,120 --> 00:23:22,030
<font color="#E5E5E5">fast and rotated brief algorithm is</font>

566
00:23:18,990 --> 00:23:25,260
fantastic for clustering images<font color="#CCCCCC"> and then</font>

567
00:23:22,030 --> 00:23:28,899
<font color="#E5E5E5">essentially what I did</font><font color="#CCCCCC"> was take a known</font>

568
00:23:25,260 --> 00:23:30,700
malicious<font color="#E5E5E5"> or an image that's known to</font><font color="#CCCCCC"> be</font>

569
00:23:28,900 --> 00:23:33,010
malicious<font color="#E5E5E5"> or associated with malicious</font>

570
00:23:30,700 --> 00:23:34,690
documents and then I use<font color="#CCCCCC"> that as a seed</font>

571
00:23:33,010 --> 00:23:36,940
image and then compared it against all

572
00:23:34,690 --> 00:23:39,700
clean<font color="#CCCCCC"> all what we've</font><font color="#E5E5E5"> defined as being</font>

573
00:23:36,940 --> 00:23:43,150
clean documents for a certain<font color="#E5E5E5"> amount of</font>

574
00:23:39,700 --> 00:23:45,040
<font color="#E5E5E5">days and then if a number of those</font>

575
00:23:43,150 --> 00:23:47,080
features<font color="#CCCCCC"> that we've extracted</font><font color="#E5E5E5"> from the</font>

576
00:23:45,040 --> 00:23:48,610
image match<font color="#E5E5E5"> any of those supposed to</font>

577
00:23:47,080 --> 00:23:51,520
clean documents<font color="#E5E5E5"> then we know we've</font>

578
00:23:48,610 --> 00:23:54,669
missed them<font color="#CCCCCC"> right so this</font><font color="#E5E5E5"> is known as</font>

579
00:23:51,520 --> 00:23:56,440
<font color="#CCCCCC">Feaster extraction i'm not going to try</font>

580
00:23:54,670 --> 00:23:59,230
<font color="#CCCCCC">and</font><font color="#E5E5E5"> fake my way through</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of the</font>

581
00:23:56,440 --> 00:24:01,390
computer<font color="#E5E5E5"> vision theory</font><font color="#CCCCCC"> because i don't</font>

582
00:23:59,230 --> 00:24:03,460
have<font color="#CCCCCC"> a major background in this but</font><font color="#E5E5E5"> open</font>

583
00:24:01,390 --> 00:24:05,440
<font color="#CCCCCC">Seavey's libraries made this actually</font>

584
00:24:03,460 --> 00:24:09,090
quite<font color="#CCCCCC"> easy and</font><font color="#E5E5E5"> then essentially I</font>

585
00:24:05,440 --> 00:24:11,440
established a certain<font color="#E5E5E5"> percentage</font><font color="#CCCCCC"> of</font>

586
00:24:09,090 --> 00:24:14,709
<font color="#CCCCCC">mashing features extracted from</font><font color="#E5E5E5"> both</font>

587
00:24:11,440 --> 00:24:16,750
<font color="#E5E5E5">documents and if that certain percentage</font>

588
00:24:14,710 --> 00:24:21,220
and<font color="#E5E5E5"> ceiling was met then i bucketed it</font>

589
00:24:16,750 --> 00:24:24,820
<font color="#E5E5E5">for later review so here's an example so</font>

590
00:24:21,220 --> 00:24:27,400
<font color="#E5E5E5">open CV will do this for you where</font><font color="#CCCCCC"> you</font>

591
00:24:24,820 --> 00:24:30,100
have<font color="#E5E5E5"> two images</font><font color="#CCCCCC"> the one</font><font color="#E5E5E5"> on the left is</font>

592
00:24:27,400 --> 00:24:32,230
<font color="#E5E5E5">known to be a part of a malicious</font>

593
00:24:30,100 --> 00:24:35,379
document and then the<font color="#E5E5E5"> one</font><font color="#CCCCCC"> on the right</font>

594
00:24:32,230 --> 00:24:37,480
is from a supposed to<font color="#E5E5E5"> clean document so</font>

595
00:24:35,380 --> 00:24:40,090
this<font color="#E5E5E5"> provides some fantastic feedback</font>

596
00:24:37,480 --> 00:24:41,590
because<font color="#CCCCCC"> obviously in this</font><font color="#E5E5E5"> case we did</font>

597
00:24:40,090 --> 00:24:44,889
<font color="#E5E5E5">not classify the one on the right as</font>

598
00:24:41,590 --> 00:24:47,740
malicious<font color="#CCCCCC"> but what was occurring</font>

599
00:24:44,890 --> 00:24:50,230
was within<font color="#E5E5E5"> our</font><font color="#CCCCCC"> sandbox</font><font color="#E5E5E5"> it had an auto</font>

600
00:24:47,740 --> 00:24:52,450
<font color="#CCCCCC">closed macro so the</font><font color="#E5E5E5"> macro is only</font>

601
00:24:50,230 --> 00:24:53,800
<font color="#E5E5E5">executed upon document</font><font color="#CCCCCC"> closed yes this</font>

602
00:24:52,450 --> 00:24:56,470
is a feature<font color="#E5E5E5"> why it's a feature I</font><font color="#CCCCCC"> don't</font>

603
00:24:53,800 --> 00:24:57,790
know but they were<font color="#E5E5E5"> using</font><font color="#CCCCCC"> that to</font><font color="#E5E5E5"> execute</font>

604
00:24:56,470 --> 00:24:58,900
their malicious code<font color="#E5E5E5"> only when the</font>

605
00:24:57,790 --> 00:25:01,960
document<font color="#CCCCCC"> was closed</font>

606
00:24:58,900 --> 00:25:03,730
now threat grid recently released some

607
00:25:01,960 --> 00:25:05,920
functionality called<font color="#E5E5E5"> playbooks which</font>

608
00:25:03,730 --> 00:25:08,290
automatically<font color="#E5E5E5"> closes documents for you</font>

609
00:25:05,920 --> 00:25:09,910
<font color="#E5E5E5">so this now we have have an actual</font>

610
00:25:08,290 --> 00:25:12,340
<font color="#CCCCCC">solution from the feedback</font><font color="#E5E5E5"> from this</font>

611
00:25:09,910 --> 00:25:14,650
research<font color="#E5E5E5"> this is a more interesting</font>

612
00:25:12,340 --> 00:25:18,070
<font color="#CCCCCC">example where extracted features</font><font color="#E5E5E5"> on the</font>

613
00:25:14,650 --> 00:25:20,200
<font color="#CCCCCC">Left image was</font><font color="#E5E5E5"> actually a part of a</font>

614
00:25:18,070 --> 00:25:22,899
smaller image<font color="#E5E5E5"> embedded within a larger</font>

615
00:25:20,200 --> 00:25:25,000
<font color="#CCCCCC">image so in this</font><font color="#E5E5E5"> instance this was</font>

616
00:25:22,900 --> 00:25:27,340
actually<font color="#CCCCCC"> looking for</font><font color="#E5E5E5"> our story</font>

617
00:25:25,000 --> 00:25:30,550
supposedly looking like a fax document

618
00:25:27,340 --> 00:25:32,199
and then it had essentially a social

619
00:25:30,550 --> 00:25:34,659
<font color="#E5E5E5">engineering message embedded within it</font>

620
00:25:32,200 --> 00:25:37,210
<font color="#CCCCCC">within it a smaller image</font><font color="#E5E5E5"> that had the</font>

621
00:25:34,660 --> 00:25:39,700
same features as<font color="#CCCCCC"> the image on</font><font color="#E5E5E5"> the left</font>

622
00:25:37,210 --> 00:25:44,200
<font color="#E5E5E5">so</font><font color="#CCCCCC"> that was a really</font><font color="#E5E5E5"> cool product of</font>

623
00:25:39,700 --> 00:25:46,660
this research so<font color="#E5E5E5"> great</font><font color="#CCCCCC"> we're talking</font>

624
00:25:44,200 --> 00:25:49,630
about<font color="#E5E5E5"> this from a</font><font color="#CCCCCC"> high-level point of</font>

625
00:25:46,660 --> 00:25:51,070
<font color="#CCCCCC">view of trying to track these documents</font>

626
00:25:49,630 --> 00:25:52,960
within<font color="#E5E5E5"> our sandbox trying to extract</font>

627
00:25:51,070 --> 00:25:54,700
features<font color="#E5E5E5"> to designate them as being</font>

628
00:25:52,960 --> 00:25:57,820
malicious<font color="#E5E5E5"> but what about the</font><font color="#CCCCCC"> actors</font>

629
00:25:54,700 --> 00:26:00,970
themselves<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> just put</font><font color="#CCCCCC"> out a</font>

630
00:25:57,820 --> 00:26:02,080
blog on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> telus the Tallis blog</font><font color="#E5E5E5"> the</font>

631
00:26:00,970 --> 00:26:03,730
<font color="#CCCCCC">Telus</font><font color="#E5E5E5"> Intelligence blog which is</font>

632
00:26:02,080 --> 00:26:06,370
<font color="#CCCCCC">fantastic if you</font><font color="#E5E5E5"> if you haven't looked</font>

633
00:26:03,730 --> 00:26:08,650
at<font color="#CCCCCC"> it</font><font color="#E5E5E5"> the entire blog and and our post</font>

634
00:26:06,370 --> 00:26:11,050
goes over this in detail<font color="#CCCCCC"> but there's a</font>

635
00:26:08,650 --> 00:26:12,340
fin<font color="#CCCCCC"> seven threat actor that's</font>

636
00:26:11,050 --> 00:26:13,810
essentially been active<font color="#CCCCCC"> for a large</font>

637
00:26:12,340 --> 00:26:18,820
number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> years</font><font color="#CCCCCC"> they're financially</font>

638
00:26:13,810 --> 00:26:20,740
motivated<font color="#E5E5E5"> they deploy</font><font color="#CCCCCC"> and target a large</font>

639
00:26:18,820 --> 00:26:23,710
amount of<font color="#E5E5E5"> financial institutions</font>

640
00:26:20,740 --> 00:26:25,570
hospitality<font color="#E5E5E5"> and medical industries</font>

641
00:26:23,710 --> 00:26:26,920
<font color="#CCCCCC">so it's essentially applicable to</font>

642
00:26:25,570 --> 00:26:28,899
everybody<font color="#E5E5E5"> in this</font><font color="#CCCCCC"> room because</font><font color="#E5E5E5"> we all</font>

643
00:26:26,920 --> 00:26:32,650
use<font color="#E5E5E5"> banks we all go to the</font><font color="#CCCCCC"> hospital</font>

644
00:26:28,900 --> 00:26:34,510
sometimes we we all go out and<font color="#E5E5E5"> eat and</font>

645
00:26:32,650 --> 00:26:35,920
stay at hotels<font color="#E5E5E5"> so they're targeting all</font>

646
00:26:34,510 --> 00:26:39,730
these campaigns with financial

647
00:26:35,920 --> 00:26:42,340
motivation of stealing money<font color="#CCCCCC"> and they're</font>

648
00:26:39,730 --> 00:26:44,260
typically using<font color="#E5E5E5"> spear</font><font color="#CCCCCC"> fishing</font><font color="#E5E5E5"> techniques</font>

649
00:26:42,340 --> 00:26:46,030
with documents so I'll be going<font color="#CCCCCC"> into one</font>

650
00:26:44,260 --> 00:26:48,910
of<font color="#E5E5E5"> the documents today and this is</font>

651
00:26:46,030 --> 00:26:53,740
<font color="#E5E5E5">constantly changing</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> evolving so we</font>

652
00:26:48,910 --> 00:26:56,680
from the month of July in August<font color="#E5E5E5"> we were</font>

653
00:26:53,740 --> 00:26:58,029
seeing<font color="#E5E5E5"> some odd 30 documents from this</font>

654
00:26:56,680 --> 00:27:00,309
<font color="#CCCCCC">throw actor alone</font>

655
00:26:58,029 --> 00:27:01,869
that they had changed<font color="#E5E5E5"> their technique or</font>

656
00:27:00,309 --> 00:27:07,149
their<font color="#CCCCCC"> Technic</font><font color="#E5E5E5"> their techniques and</font>

657
00:27:01,869 --> 00:27:09,668
<font color="#E5E5E5">tactics</font><font color="#CCCCCC"> quite quite frequently and this</font>

658
00:27:07,149 --> 00:27:11,649
was to avoid<font color="#E5E5E5"> antivirus detection okay so</font>

659
00:27:09,669 --> 00:27:13,960
they they are constantly monitoring

660
00:27:11,649 --> 00:27:16,539
blogs they are constantly monitoring any

661
00:27:13,960 --> 00:27:18,159
of our services<font color="#CCCCCC"> for them being detected</font>

662
00:27:16,539 --> 00:27:20,049
<font color="#E5E5E5">and then they'll</font><font color="#CCCCCC"> change their techniques</font>

663
00:27:18,159 --> 00:27:24,399
<font color="#E5E5E5">and then go on another campaign again</font>

664
00:27:20,049 --> 00:27:27,908
<font color="#CCCCCC">and they're</font><font color="#E5E5E5"> also leveraging public tools</font>

665
00:27:24,399 --> 00:27:30,639
so I commonly get<font color="#E5E5E5"> in an</font><font color="#CCCCCC"> argument with</font>

666
00:27:27,909 --> 00:27:33,909
<font color="#CCCCCC">one</font><font color="#E5E5E5"> of my pen test friends over the</font>

667
00:27:30,639 --> 00:27:37,059
release of penetration testing tools<font color="#E5E5E5"> so</font>

668
00:27:33,909 --> 00:27:39,279
this<font color="#E5E5E5"> is an example</font><font color="#CCCCCC"> of their</font><font color="#E5E5E5"> literally</font>

669
00:27:37,059 --> 00:27:41,710
copy pasting code from the<font color="#E5E5E5"> power sploit</font>

670
00:27:39,279 --> 00:27:43,739
project and using<font color="#CCCCCC"> it in active campaigns</font>

671
00:27:41,710 --> 00:27:45,789
against financial<font color="#E5E5E5"> institutions so</font>

672
00:27:43,739 --> 00:27:46,469
anyways take take<font color="#E5E5E5"> from that what</font><font color="#CCCCCC"> you</font>

673
00:27:45,789 --> 00:27:50,950
<font color="#E5E5E5">will</font>

674
00:27:46,469 --> 00:27:53,769
<font color="#CCCCCC">so document analysis let's actually</font><font color="#E5E5E5"> dig</font>

675
00:27:50,950 --> 00:27:56,349
into<font color="#CCCCCC"> a document</font><font color="#E5E5E5"> and look at it so the</font>

676
00:27:53,769 --> 00:27:58,419
nice people at Cisco<font color="#CCCCCC"> made me this</font>

677
00:27:56,349 --> 00:27:59,889
<font color="#CCCCCC">beautiful graphic</font><font color="#E5E5E5"> so I'm just going to</font>

678
00:27:58,419 --> 00:28:02,799
<font color="#E5E5E5">move through each component of this</font>

679
00:27:59,889 --> 00:28:04,718
document using this graphic<font color="#CCCCCC"> so this is</font>

680
00:28:02,799 --> 00:28:06,879
an RTF document which<font color="#CCCCCC"> you can see</font><font color="#E5E5E5"> up</font>

681
00:28:04,719 --> 00:28:10,239
here<font color="#E5E5E5"> this is what the document</font><font color="#CCCCCC"> looks</font>

682
00:28:06,879 --> 00:28:12,849
like so I'm<font color="#E5E5E5"> not</font><font color="#CCCCCC"> sure if you know this</font>

683
00:28:10,239 --> 00:28:16,119
but<font color="#E5E5E5"> within</font><font color="#CCCCCC"> office documents if you drag</font>

684
00:28:12,849 --> 00:28:18,309
and drop a file<font color="#E5E5E5"> it becomes an embedded</font>

685
00:28:16,119 --> 00:28:22,359
oily object<font color="#E5E5E5"> within that</font><font color="#CCCCCC"> document so in</font>

686
00:28:18,309 --> 00:28:25,869
this<font color="#E5E5E5"> case the document contains a oily</font>

687
00:28:22,359 --> 00:28:28,210
object that's an<font color="#CCCCCC"> LNK file</font><font color="#E5E5E5"> okay so for</font>

688
00:28:25,869 --> 00:28:30,580
those of<font color="#E5E5E5"> you who are not very</font>

689
00:28:28,210 --> 00:28:32,019
<font color="#CCCCCC">well-versed with Windows</font><font color="#E5E5E5"> L&K files are</font>

690
00:28:30,580 --> 00:28:33,759
simply<font color="#E5E5E5"> link files so if you were to</font>

691
00:28:32,019 --> 00:28:35,979
right-click<font color="#E5E5E5"> on</font><font color="#CCCCCC"> a file and make a</font>

692
00:28:33,759 --> 00:28:37,869
<font color="#E5E5E5">shortcut</font><font color="#CCCCCC"> that's an LMK that</font><font color="#E5E5E5"> will link to</font>

693
00:28:35,979 --> 00:28:39,399
an executable<font color="#CCCCCC"> that you can execute</font><font color="#E5E5E5"> but</font>

694
00:28:37,869 --> 00:28:41,228
what a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people don't know is you</font>

695
00:28:39,399 --> 00:28:43,478
can<font color="#CCCCCC"> actually embed commands</font><font color="#E5E5E5"> with an</font><font color="#CCCCCC"> LNK</font>

696
00:28:41,229 --> 00:28:44,919
files<font color="#E5E5E5"> and those will be executed so if</font>

697
00:28:43,479 --> 00:28:46,479
somebody<font color="#E5E5E5"> sends you an</font><font color="#CCCCCC"> LNK</font><font color="#E5E5E5"> and you click</font>

698
00:28:44,919 --> 00:28:48,219
on<font color="#CCCCCC"> it</font><font color="#E5E5E5"> they can actually get full remote</font>

699
00:28:46,479 --> 00:28:49,719
code execution on your box<font color="#E5E5E5"> and a lot of</font>

700
00:28:48,219 --> 00:28:51,940
<font color="#E5E5E5">people</font><font color="#CCCCCC"> don't know that</font><font color="#E5E5E5"> but these guys</font>

701
00:28:49,719 --> 00:28:56,229
embedded an<font color="#CCCCCC"> L&K file</font><font color="#E5E5E5"> within the document</font>

702
00:28:51,940 --> 00:28:58,960
itself<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so what they did now was</font>

703
00:28:56,229 --> 00:29:00,700
they execute<font color="#E5E5E5"> W scripts</font><font color="#CCCCCC"> okay</font>

704
00:28:58,960 --> 00:29:03,309
so this is the<font color="#CCCCCC"> Windows scripting host on</font>

705
00:29:00,700 --> 00:29:05,019
the Windows operating system<font color="#E5E5E5"> that</font>

706
00:29:03,309 --> 00:29:08,339
they're<font color="#E5E5E5"> executing from an L&K file</font>

707
00:29:05,019 --> 00:29:11,399
within<font color="#E5E5E5"> a Word document</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> I'll try and</font>

708
00:29:08,339 --> 00:29:13,529
space this out as much<font color="#E5E5E5"> as I can</font><font color="#CCCCCC"> but</font>

709
00:29:11,399 --> 00:29:14,849
you can ask<font color="#CCCCCC"> questions afterwards</font><font color="#E5E5E5"> if if</font>

710
00:29:13,529 --> 00:29:18,029
it gets complicated<font color="#E5E5E5"> because it's going</font>

711
00:29:14,849 --> 00:29:20,009
<font color="#E5E5E5">to get</font><font color="#CCCCCC"> complicated</font><font color="#E5E5E5"> but essentially they</font>

712
00:29:18,029 --> 00:29:22,259
were executing<font color="#CCCCCC"> W scripts</font><font color="#E5E5E5"> and this is the</font>

713
00:29:20,009 --> 00:29:25,919
command<font color="#CCCCCC"> that they were executing</font><font color="#E5E5E5"> so they</font>

714
00:29:22,259 --> 00:29:29,299
were doing<font color="#CCCCCC"> command dot exe</font><font color="#E5E5E5"> and then they</font>

715
00:29:25,919 --> 00:29:33,509
were<font color="#E5E5E5"> using W script to execute</font>

716
00:29:29,299 --> 00:29:36,809
JavaScript<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and I when I found this</font>

717
00:29:33,509 --> 00:29:40,469
<font color="#CCCCCC">I was amazed</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> W script</font><font color="#E5E5E5"> you can</font>

718
00:29:36,809 --> 00:29:45,869
reference an open<font color="#CCCCCC"> office document okay</font>

719
00:29:40,469 --> 00:29:48,749
they were extracting<font color="#E5E5E5"> JavaScript from</font>

720
00:29:45,869 --> 00:29:50,968
<font color="#CCCCCC">within an active document object within</font>

721
00:29:48,749 --> 00:29:54,179
<font color="#E5E5E5">the open document so this is an external</font>

722
00:29:50,969 --> 00:29:56,999
application<font color="#E5E5E5"> that can actually pull out</font>

723
00:29:54,179 --> 00:30:01,259
<font color="#E5E5E5">data that's in an open document</font><font color="#CCCCCC"> okay</font>

724
00:29:56,999 --> 00:30:04,830
they write this to disk in a file called

725
00:30:01,259 --> 00:30:09,149
<font color="#E5E5E5">md5 dot exe or txt</font><font color="#CCCCCC"> on your home path and</font>

726
00:30:04,830 --> 00:30:12,869
then they execute that<font color="#CCCCCC"> ok so then what</font>

727
00:30:09,149 --> 00:30:15,389
<font color="#E5E5E5">happens is a large series of base64</font>

728
00:30:12,869 --> 00:30:17,158
decoding<font color="#CCCCCC"> x' from java scripts</font><font color="#E5E5E5"> so now</font>

729
00:30:15,389 --> 00:30:18,718
we're now we're strictly executing

730
00:30:17,159 --> 00:30:20,369
JavaScript from the<font color="#CCCCCC"> window scripting</font>

731
00:30:18,719 --> 00:30:22,379
host<font color="#E5E5E5"> so for</font><font color="#CCCCCC"> those of</font><font color="#E5E5E5"> you who don't know</font>

732
00:30:20,369 --> 00:30:24,689
the<font color="#E5E5E5"> windows scripting host allows you to</font>

733
00:30:22,379 --> 00:30:26,218
execute<font color="#E5E5E5"> JavaScript and you have access</font>

734
00:30:24,690 --> 00:30:27,599
to<font color="#E5E5E5"> ActiveX controls and things like that</font>

735
00:30:26,219 --> 00:30:28,830
<font color="#CCCCCC">so this is</font><font color="#E5E5E5"> very different than when you</font>

736
00:30:27,599 --> 00:30:30,239
execute<font color="#E5E5E5"> it in a browser where it's</font>

737
00:30:28,830 --> 00:30:32,158
completely sandbox from the operating

738
00:30:30,239 --> 00:30:34,169
<font color="#E5E5E5">system</font><font color="#CCCCCC"> environment</font><font color="#E5E5E5"> when you when you use</font>

739
00:30:32,159 --> 00:30:35,219
<font color="#E5E5E5">JavaScript on Windows with W script you</font>

740
00:30:34,169 --> 00:30:37,649
actually have access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> full</font>

741
00:30:35,219 --> 00:30:41,700
<font color="#E5E5E5">operating system for the most part so</font>

742
00:30:37,649 --> 00:30:45,149
here we have this breaks up<font color="#CCCCCC"> into a whole</font>

743
00:30:41,700 --> 00:30:47,609
array of JavaScript files that have a

744
00:30:45,149 --> 00:30:51,149
whole bunch of different base64 decoding

745
00:30:47,609 --> 00:30:53,428
steps so I'm sure<font color="#CCCCCC"> many of you</font><font color="#E5E5E5"> in the</font>

746
00:30:51,149 --> 00:30:56,279
room<font color="#E5E5E5"> I know what base64 encoding is but</font>

747
00:30:53,429 --> 00:31:00,149
<font color="#E5E5E5">basically it's an encoding format for</font>

748
00:30:56,279 --> 00:31:03,869
any type of data<font color="#CCCCCC"> they've done anywhere</font>

749
00:31:00,149 --> 00:31:06,258
upwards of<font color="#CCCCCC"> 8 encoding steps of base64</font>

750
00:31:03,869 --> 00:31:08,549
I'm assuming this is to<font color="#E5E5E5"> avoid any</font>

751
00:31:06,259 --> 00:31:10,469
antivirus<font color="#CCCCCC"> emulation that we'll be</font>

752
00:31:08,549 --> 00:31:12,749
attempting<font color="#CCCCCC"> to emulate</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> javascript</font>

753
00:31:10,469 --> 00:31:14,849
<font color="#E5E5E5">because they'll</font><font color="#CCCCCC"> only do a certain</font><font color="#E5E5E5"> amount</font>

754
00:31:12,749 --> 00:31:16,109
of iterations otherwise you're gonna

755
00:31:14,849 --> 00:31:21,239
kill the machine that<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> running</font>

756
00:31:16,109 --> 00:31:22,889
<font color="#E5E5E5">your</font><font color="#CCCCCC"> a/v on so and we basically just</font>

757
00:31:21,239 --> 00:31:24,490
built a custom<font color="#E5E5E5"> Python script</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> would</font>

758
00:31:22,889 --> 00:31:26,139
extract<font color="#CCCCCC"> end</font>

759
00:31:24,490 --> 00:31:28,090
automatically decode all these basics

760
00:31:26,139 --> 00:31:30,248
before decoding blobs<font color="#E5E5E5"> and then in the</font>

761
00:31:28,090 --> 00:31:34,090
end we ended up with almost<font color="#E5E5E5"> some</font><font color="#CCCCCC"> II</font>

762
00:31:30,249 --> 00:31:37,869
<font color="#E5E5E5">sorry</font><font color="#CCCCCC"> forty some odd JavaScript files</font>

763
00:31:34,090 --> 00:31:38,980
for a single document<font color="#E5E5E5"> okay so this is</font>

764
00:31:37,869 --> 00:31:42,249
basically<font color="#CCCCCC"> what the basics before</font>

765
00:31:38,980 --> 00:31:44,619
decoding looked like<font color="#E5E5E5"> what was</font>

766
00:31:42,249 --> 00:31:46,749
interesting was the char set that

767
00:31:44,619 --> 00:31:48,970
they're setting<font color="#E5E5E5"> for this base64 decoding</font>

768
00:31:46,749 --> 00:31:51,580
function is Cyrillic which could

769
00:31:48,970 --> 00:31:55,210
<font color="#E5E5E5">actually indicate Russian origin</font><font color="#CCCCCC"> take</font>

770
00:31:51,580 --> 00:31:58,360
from that way you will<font color="#E5E5E5"> and then here we</font>

771
00:31:55,210 --> 00:32:01,659
have<font color="#E5E5E5"> the</font><font color="#CCCCCC"> evaluation of the base64 decode</font>

772
00:31:58,360 --> 00:32:04,149
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so this this basically made up a</font>

773
00:32:01,659 --> 00:32:05,860
series of JavaScript files and a series

774
00:32:04,149 --> 00:32:08,139
of JavaScript files that actually made

775
00:32:05,860 --> 00:32:13,629
up a<font color="#E5E5E5"> JavaScript botnet from a single</font>

776
00:32:08,139 --> 00:32:15,248
document<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so now as I said</font><font color="#E5E5E5"> we had 40</font>

777
00:32:13,629 --> 00:32:18,129
some-odd<font color="#CCCCCC"> javascript files</font><font color="#E5E5E5"> from a single</font>

778
00:32:15,249 --> 00:32:20,259
document<font color="#CCCCCC"> that's a lot</font><font color="#E5E5E5"> to process and go</font>

779
00:32:18,129 --> 00:32:21,998
through manually and and of course<font color="#E5E5E5"> i'm</font>

780
00:32:20,259 --> 00:32:23,169
lazy<font color="#E5E5E5"> and a programmer so I was like okay</font>

781
00:32:21,999 --> 00:32:26,619
I'm gonna write code<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> this for me</font>

782
00:32:23,169 --> 00:32:27,879
<font color="#E5E5E5">so essentially if</font><font color="#CCCCCC"> we wanted to cluster</font>

783
00:32:26,619 --> 00:32:32,918
<font color="#E5E5E5">this</font><font color="#CCCCCC"> JavaScript we have to extract</font>

784
00:32:27,879 --> 00:32:35,789
<font color="#CCCCCC">certain features okay</font><font color="#E5E5E5"> so for extracting</font>

785
00:32:32,919 --> 00:32:39,399
<font color="#E5E5E5">attributes from</font><font color="#CCCCCC"> the documents</font><font color="#E5E5E5"> we have</font>

786
00:32:35,789 --> 00:32:41,049
<font color="#E5E5E5">like I said</font><font color="#CCCCCC"> for you similar files and I</font>

787
00:32:39,399 --> 00:32:44,199
wanted<font color="#E5E5E5"> something simple so I use the</font>

788
00:32:41,049 --> 00:32:46,809
<font color="#CCCCCC">scatterplot</font><font color="#E5E5E5"> okay so within the</font>

789
00:32:44,200 --> 00:32:49,090
<font color="#E5E5E5">scatterplot</font><font color="#CCCCCC"> I used are for those of you</font>

790
00:32:46,809 --> 00:32:52,029
who are<font color="#CCCCCC"> working with</font><font color="#E5E5E5"> any data</font><font color="#CCCCCC"> I highly</font>

791
00:32:49,090 --> 00:32:53,649
suggest<font color="#E5E5E5"> that you use</font><font color="#CCCCCC"> are for any types</font>

792
00:32:52,029 --> 00:32:55,090
type of analysis like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> lot</font>

793
00:32:53,649 --> 00:32:58,360
<font color="#E5E5E5">of supporting Python libraries as well</font>

794
00:32:55,090 --> 00:33:00,759
<font color="#CCCCCC">like Syfy</font><font color="#E5E5E5"> and stuff like that but</font><font color="#CCCCCC"> for</font>

795
00:32:58,360 --> 00:33:03,340
<font color="#CCCCCC">this I used the ggplot in g giraffe</font><font color="#E5E5E5"> our</font>

796
00:33:00,759 --> 00:33:06,549
libraries which are<font color="#CCCCCC"> fantastic to plot</font>

797
00:33:03,340 --> 00:33:08,590
<font color="#E5E5E5">this</font><font color="#CCCCCC"> within</font><font color="#E5E5E5"> a scatter plot</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> for one</font>

798
00:33:06,549 --> 00:33:10,809
of the axes we use the base64 decoding

799
00:33:08,590 --> 00:33:12,580
<font color="#E5E5E5">so the amount of base64 decoding</font>

800
00:33:10,809 --> 00:33:17,440
required to<font color="#CCCCCC"> get to</font><font color="#E5E5E5"> that javascript file</font>

801
00:33:12,580 --> 00:33:18,939
<font color="#E5E5E5">and then entropy okay so for those of</font>

802
00:33:17,440 --> 00:33:22,629
<font color="#CCCCCC">you</font><font color="#E5E5E5"> who don't know what entropy is</font>

803
00:33:18,940 --> 00:33:24,399
essentially it's<font color="#E5E5E5"> the calculation of</font>

804
00:33:22,629 --> 00:33:26,168
disorder and uncertainty with any<font color="#E5E5E5"> given</font>

805
00:33:24,399 --> 00:33:29,258
amount<font color="#E5E5E5"> of data</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> essentially it's</font>

806
00:33:26,169 --> 00:33:32,850
looking for<font color="#E5E5E5"> randomness within any given</font>

807
00:33:29,259 --> 00:33:35,289
<font color="#E5E5E5">amount of data but we can use that for</font>

808
00:33:32,850 --> 00:33:38,418
clustering<font color="#CCCCCC"> JavaScript files because you</font>

809
00:33:35,289 --> 00:33:41,330
can have essentially any<font color="#E5E5E5"> related code</font>

810
00:33:38,419 --> 00:33:43,309
would would technically look the same in

811
00:33:41,330 --> 00:33:45,289
<font color="#E5E5E5">terms of randomness but it could be</font>

812
00:33:43,309 --> 00:33:47,359
different<font color="#CCCCCC"> in terms</font><font color="#E5E5E5"> of actual textual</font>

813
00:33:45,289 --> 00:33:51,080
<font color="#E5E5E5">content so I'll show you what that kind</font>

814
00:33:47,359 --> 00:33:53,629
<font color="#CCCCCC">of</font><font color="#E5E5E5"> looks like and then so what we go out</font>

815
00:33:51,080 --> 00:33:55,759
<font color="#E5E5E5">of this was was essentially this I know</font>

816
00:33:53,629 --> 00:33:59,059
it's I know<font color="#E5E5E5"> it's pretty small</font><font color="#CCCCCC"> but</font>

817
00:33:55,759 --> 00:34:00,679
<font color="#CCCCCC">essentially we got clusters which I was</font>

818
00:33:59,059 --> 00:34:01,970
amazed that this actually worked<font color="#E5E5E5"> this is</font>

819
00:34:00,679 --> 00:34:05,600
the first thing<font color="#E5E5E5"> I tried</font><font color="#CCCCCC"> and I was like</font>

820
00:34:01,970 --> 00:34:07,159
awesome<font color="#CCCCCC"> okay so</font><font color="#E5E5E5"> up here we have so these</font>

821
00:34:05,600 --> 00:34:10,639
are all<font color="#E5E5E5"> different</font><font color="#CCCCCC"> JavaScript files that</font>

822
00:34:07,159 --> 00:34:12,770
<font color="#E5E5E5">have different functionality</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> in the</font>

823
00:34:10,639 --> 00:34:14,149
top<font color="#CCCCCC"> left we have scheduled tasks</font><font color="#E5E5E5"> that</font>

824
00:34:12,770 --> 00:34:15,859
are executing each part<font color="#E5E5E5"> of the botnet</font>

825
00:34:14,149 --> 00:34:19,750
<font color="#CCCCCC">that's made up of JavaScript on your</font>

826
00:34:15,859 --> 00:34:23,089
<font color="#CCCCCC">system then we have</font><font color="#E5E5E5"> like W</font><font color="#CCCCCC"> Script</font>

827
00:34:19,750 --> 00:34:25,639
JavaScript execution<font color="#E5E5E5"> then we have the</font>

828
00:34:23,089 --> 00:34:26,839
botnet command<font color="#E5E5E5"> and control commands that</font>

829
00:34:25,639 --> 00:34:30,889
were clustered together<font color="#E5E5E5"> using this</font>

830
00:34:26,839 --> 00:34:34,369
technique<font color="#CCCCCC"> and then we have like base64</font>

831
00:34:30,889 --> 00:34:38,809
decoding steps and and<font color="#E5E5E5"> a</font><font color="#CCCCCC"> number of other</font>

832
00:34:34,369 --> 00:34:40,490
<font color="#E5E5E5">scheduled task areas so the conclusions</font>

833
00:34:38,809 --> 00:34:44,119
<font color="#E5E5E5">that we can extract</font><font color="#CCCCCC"> from that clustering</font>

834
00:34:40,489 --> 00:34:46,279
exercise are<font color="#E5E5E5"> pretty significant like</font>

835
00:34:44,119 --> 00:34:50,030
<font color="#E5E5E5">obviously with the higher depth of</font>

836
00:34:46,280 --> 00:34:51,799
base64 decoding we have more interesting

837
00:34:50,030 --> 00:34:53,540
functionality<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so that's to be</font>

838
00:34:51,799 --> 00:34:55,250
expected<font color="#E5E5E5"> because they're going to keep</font>

839
00:34:53,540 --> 00:34:58,970
their most interesting<font color="#E5E5E5"> functionality for</font>

840
00:34:55,250 --> 00:35:05,359
the most amount of decodes<font color="#E5E5E5"> and we were</font>

841
00:34:58,970 --> 00:35:08,029
<font color="#E5E5E5">able to cluster these bought</font>

842
00:35:05,359 --> 00:35:11,180
functionalities<font color="#E5E5E5"> into multiple</font><font color="#CCCCCC"> different</font>

843
00:35:08,030 --> 00:35:12,380
sets of files<font color="#CCCCCC"> and this showed us that</font>

844
00:35:11,180 --> 00:35:14,598
essentially they were<font color="#E5E5E5"> changing their</font>

845
00:35:12,380 --> 00:35:16,609
algorithm each time where we would<font color="#CCCCCC"> have</font>

846
00:35:14,599 --> 00:35:17,630
a<font color="#E5E5E5"> large number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> different files but</font>

847
00:35:16,609 --> 00:35:20,420
they would have<font color="#CCCCCC"> the same functionality</font>

848
00:35:17,630 --> 00:35:22,910
<font color="#E5E5E5">at in in different encoding steps and</font>

849
00:35:20,420 --> 00:35:24,440
then like<font color="#CCCCCC"> another variance of what I</font>

850
00:35:22,910 --> 00:35:26,690
<font color="#E5E5E5">just mentioned</font><font color="#CCCCCC"> is essentially</font><font color="#E5E5E5"> that we</font>

851
00:35:24,440 --> 00:35:28,910
have the task scheduling functionality

852
00:35:26,690 --> 00:35:30,290
that varied in decoding<font color="#CCCCCC"> depth</font><font color="#E5E5E5"> so</font>

853
00:35:28,910 --> 00:35:32,480
essentially<font color="#E5E5E5"> that shows us they're</font>

854
00:35:30,290 --> 00:35:34,190
changing the<font color="#E5E5E5"> amount of decodes that</font>

855
00:35:32,480 --> 00:35:38,000
<font color="#E5E5E5">they're doing in every single</font><font color="#CCCCCC"> document</font>

856
00:35:34,190 --> 00:35:40,250
Federation so this is an example it's

857
00:35:38,000 --> 00:35:44,270
super hard to read I'm sorry<font color="#CCCCCC"> but</font>

858
00:35:40,250 --> 00:35:46,190
essentially this is<font color="#E5E5E5"> the base64 decoding</font>

859
00:35:44,270 --> 00:35:47,839
<font color="#CCCCCC">JavaScript block and you see you can see</font>

860
00:35:46,190 --> 00:35:49,490
they<font color="#E5E5E5"> did some function reordering</font><font color="#CCCCCC"> so</font>

861
00:35:47,839 --> 00:35:51,890
these are the same functions<font color="#E5E5E5"> but they</font>

862
00:35:49,490 --> 00:35:52,439
have different<font color="#E5E5E5"> order but</font><font color="#CCCCCC"> we were able to</font>

863
00:35:51,890 --> 00:35:54,839
cluster

864
00:35:52,440 --> 00:35:56,849
<font color="#E5E5E5">using entropy and the base64 decoding</font>

865
00:35:54,839 --> 00:35:58,799
depth and that essentially showed us

866
00:35:56,849 --> 00:36:01,619
that they're<font color="#E5E5E5"> doing some function</font>

867
00:35:58,800 --> 00:36:03,990
reordering<font color="#E5E5E5"> within within the JavaScript</font>

868
00:36:01,619 --> 00:36:06,660
in each document<font color="#CCCCCC"> I duration and then</font>

869
00:36:03,990 --> 00:36:09,359
here<font color="#CCCCCC"> you can't see it but they're</font>

870
00:36:06,660 --> 00:36:11,129
renaming variables<font color="#E5E5E5"> that's another change</font>

871
00:36:09,359 --> 00:36:14,848
<font color="#CCCCCC">that they're doing</font><font color="#E5E5E5"> through every</font>

872
00:36:11,130 --> 00:36:17,190
document<font color="#CCCCCC"> iteration so here you</font><font color="#E5E5E5"> have B</font><font color="#CCCCCC"> e</font>

873
00:36:14,849 --> 00:36:20,780
and then you have rename functions over

874
00:36:17,190 --> 00:36:24,530
here<font color="#CCCCCC"> some of you might notice this large</font>

875
00:36:20,780 --> 00:36:27,119
<font color="#CCCCCC">like this is just color coded vim</font><font color="#E5E5E5"> but</font>

876
00:36:24,530 --> 00:36:28,410
<font color="#E5E5E5">you can see this large comment block or</font>

877
00:36:27,119 --> 00:36:29,579
what looks to be<font color="#CCCCCC"> a comment block</font><font color="#E5E5E5"> so I</font>

878
00:36:28,410 --> 00:36:31,589
was super<font color="#E5E5E5"> confused when I started</font>

879
00:36:29,579 --> 00:36:33,150
<font color="#CCCCCC">looking</font><font color="#E5E5E5"> at this because I was like so</font>

880
00:36:31,589 --> 00:36:37,140
they've commented out this functionality

881
00:36:33,150 --> 00:36:39,210
<font color="#E5E5E5">well it turns out that with a large</font>

882
00:36:37,140 --> 00:36:41,250
<font color="#E5E5E5">comment block like this in JavaScript</font>

883
00:36:39,210 --> 00:36:43,380
you<font color="#E5E5E5"> can actually use the</font><font color="#CCCCCC"> to string</font>

884
00:36:41,250 --> 00:36:46,920
function<font color="#E5E5E5"> take a slice and then you can</font>

885
00:36:43,380 --> 00:36:50,430
eval that<font color="#CCCCCC"> so it's actually</font><font color="#E5E5E5"> this is a</font>

886
00:36:46,920 --> 00:36:52,319
<font color="#E5E5E5">JavaScript</font><font color="#CCCCCC"> evasion mechanism for</font>

887
00:36:50,430 --> 00:36:54,029
emulation engines is what I suspect they

888
00:36:52,319 --> 00:36:56,339
were using<font color="#E5E5E5"> it for but like this is</font>

889
00:36:54,030 --> 00:36:58,319
insane<font color="#E5E5E5"> right</font><font color="#CCCCCC"> like you</font><font color="#E5E5E5"> think you think a</font>

890
00:36:56,339 --> 00:36:59,819
<font color="#E5E5E5">comment block wouldn't be able to be</font>

891
00:36:58,319 --> 00:37:01,349
<font color="#E5E5E5">turned back into a string and then</font><font color="#CCCCCC"> you'd</font>

892
00:36:59,819 --> 00:37:03,660
<font color="#E5E5E5">be able to evaluate it but</font><font color="#CCCCCC"> apparently</font>

893
00:37:01,349 --> 00:37:04,710
it's<font color="#E5E5E5"> true in JavaScript and actually</font>

894
00:37:03,660 --> 00:37:08,279
somebody<font color="#E5E5E5"> in this room helped me with</font>

895
00:37:04,710 --> 00:37:11,250
<font color="#CCCCCC">that so thank you and here's</font><font color="#E5E5E5"> just an</font>

896
00:37:08,280 --> 00:37:13,079
example<font color="#E5E5E5"> of this in in the the</font><font color="#CCCCCC"> chrome</font>

897
00:37:11,250 --> 00:37:15,569
console and I<font color="#E5E5E5"> say I can't believe this</font>

898
00:37:13,079 --> 00:37:18,990
actually<font color="#E5E5E5"> works and it does</font><font color="#CCCCCC"> so that's</font>

899
00:37:15,569 --> 00:37:23,490
<font color="#E5E5E5">another interesting technique that</font>

900
00:37:18,990 --> 00:37:28,160
they've employed<font color="#E5E5E5"> though so as I</font>

901
00:37:23,490 --> 00:37:31,649
<font color="#CCCCCC">mentioned it with that PowerShell code</font>

902
00:37:28,160 --> 00:37:33,328
<font color="#E5E5E5">what they're actually doing is in one of</font>

903
00:37:31,650 --> 00:37:36,420
<font color="#CCCCCC">those final decoding</font><font color="#E5E5E5"> JavaScript</font>

904
00:37:33,329 --> 00:37:38,369
documents they've essentially gotten<font color="#E5E5E5"> to</font>

905
00:37:36,420 --> 00:37:41,480
the point where<font color="#CCCCCC"> they execute some power</font>

906
00:37:38,369 --> 00:37:44,819
<font color="#E5E5E5">show okay and that power shell is</font>

907
00:37:41,480 --> 00:37:46,619
actually decoding an entire portable

908
00:37:44,819 --> 00:37:48,750
executable<font color="#E5E5E5"> and this is all within the</font>

909
00:37:46,619 --> 00:37:50,609
document<font color="#CCCCCC"> okay they were decoding an</font>

910
00:37:48,750 --> 00:37:52,260
entire portable executable<font color="#E5E5E5"> then they're</font>

911
00:37:50,609 --> 00:37:55,950
using<font color="#E5E5E5"> PowerShell from the power sploit</font>

912
00:37:52,260 --> 00:37:58,589
project to reflectively<font color="#CCCCCC"> dll inject that</font>

913
00:37:55,950 --> 00:38:01,549
into memory and and I will go<font color="#CCCCCC"> over the</font>

914
00:37:58,589 --> 00:38:06,330
<font color="#E5E5E5">actual functionality of of that</font><font color="#CCCCCC"> malware</font>

915
00:38:01,550 --> 00:38:08,220
so so here we have code that<font color="#E5E5E5"> was</font>

916
00:38:06,330 --> 00:38:10,920
<font color="#CCCCCC">beat and pasted from the powersploit</font>

917
00:38:08,220 --> 00:38:12,720
project<font color="#CCCCCC"> it's a function called invoke</font>

918
00:38:10,920 --> 00:38:14,010
reflective<font color="#E5E5E5"> PE injection if you want to</font>

919
00:38:12,720 --> 00:38:15,839
use that if<font color="#CCCCCC"> you</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to look</font><font color="#E5E5E5"> at the</font>

920
00:38:14,010 --> 00:38:18,840
function itself but essentially what

921
00:38:15,840 --> 00:38:21,420
it's doing is if you<font color="#E5E5E5"> don't know how</font>

922
00:38:18,840 --> 00:38:23,580
reflective<font color="#E5E5E5"> portable executable injection</font>

923
00:38:21,420 --> 00:38:26,070
works or DLL<font color="#E5E5E5"> injection works is that</font>

924
00:38:23,580 --> 00:38:27,509
essentially you're loading the<font color="#E5E5E5"> DLL into</font>

925
00:38:26,070 --> 00:38:28,770
memory yourself so you have a custom

926
00:38:27,510 --> 00:38:30,530
<font color="#E5E5E5">load here you're not depending on the</font>

927
00:38:28,770 --> 00:38:34,680
<font color="#E5E5E5">operating system</font><font color="#CCCCCC"> to do it</font><font color="#E5E5E5"> for you</font><font color="#CCCCCC"> and</font>

928
00:38:30,530 --> 00:38:37,800
what this is commonly used<font color="#CCCCCC"> for is to</font><font color="#E5E5E5"> is</font>

929
00:38:34,680 --> 00:38:39,960
an<font color="#E5E5E5"> evasion technique where if you're</font>

930
00:38:37,800 --> 00:38:42,360
calling<font color="#E5E5E5"> an operating system API to load</font>

931
00:38:39,960 --> 00:38:44,340
<font color="#E5E5E5">a DLL for you that's commonly hooked by</font>

932
00:38:42,360 --> 00:38:46,350
a law by a large<font color="#E5E5E5"> amount of antivirus</font>

933
00:38:44,340 --> 00:38:47,850
engines but if you are loading<font color="#CCCCCC"> the DLL</font>

934
00:38:46,350 --> 00:38:49,319
yourself<font color="#CCCCCC"> without</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> assistance of</font><font color="#E5E5E5"> the</font>

935
00:38:47,850 --> 00:38:53,880
operating system<font color="#E5E5E5"> then you can</font>

936
00:38:49,320 --> 00:38:55,620
essentially avoid that so<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> okay</font>

937
00:38:53,880 --> 00:38:57,360
so we have this<font color="#E5E5E5"> DLL that's being</font>

938
00:38:55,620 --> 00:39:00,990
injected into memory what is it<font color="#E5E5E5"> doing so</font>

939
00:38:57,360 --> 00:39:04,290
I reverse this<font color="#E5E5E5"> and they had some similar</font>

940
00:39:00,990 --> 00:39:06,299
functionality to a malware variant that

941
00:39:04,290 --> 00:39:08,220
<font color="#E5E5E5">we looked at last summer you can look up</font>

942
00:39:06,300 --> 00:39:10,980
the<font color="#E5E5E5"> h1n1 blog that I wrote</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Sisqo</font>

943
00:39:08,220 --> 00:39:12,540
blog<font color="#CCCCCC"> but essentially and they had some</font>

944
00:39:10,980 --> 00:39:16,560
import hashing which is very common for

945
00:39:12,540 --> 00:39:19,680
for malware but their end goal was to

946
00:39:16,560 --> 00:39:22,470
steal Firefox Chrome<font color="#CCCCCC"> they were targeting</font>

947
00:39:19,680 --> 00:39:24,899
chromium<font color="#CCCCCC"> Forks</font><font color="#E5E5E5"> and telephone data from</font>

948
00:39:22,470 --> 00:39:27,660
Internet Explorer opera<font color="#E5E5E5"> and Outlook</font>

949
00:39:24,900 --> 00:39:29,940
login data<font color="#CCCCCC"> okay so essentially</font><font color="#E5E5E5"> the end</font>

950
00:39:27,660 --> 00:39:32,460
goal of<font color="#E5E5E5"> this of this DLL was to extract</font>

951
00:39:29,940 --> 00:39:35,280
<font color="#CCCCCC">your passwords and</font><font color="#E5E5E5"> then send them back</font>

952
00:39:32,460 --> 00:39:38,460
to<font color="#CCCCCC"> a command-and-control</font><font color="#E5E5E5"> server</font><font color="#CCCCCC"> and</font>

953
00:39:35,280 --> 00:39:40,500
here's an<font color="#CCCCCC"> example</font><font color="#E5E5E5"> of I go it I go into</font>

954
00:39:38,460 --> 00:39:42,270
<font color="#CCCCCC">all this functionality</font><font color="#E5E5E5"> in depth from</font><font color="#CCCCCC"> the</font>

955
00:39:40,500 --> 00:39:43,260
h1n1 blog that we published last<font color="#E5E5E5"> summer</font>

956
00:39:42,270 --> 00:39:46,320
<font color="#E5E5E5">because they're using</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> same</font>

957
00:39:43,260 --> 00:39:48,630
techniques but it's<font color="#E5E5E5"> interesting with the</font>

958
00:39:46,320 --> 00:39:51,030
intelafone data<font color="#CCCCCC"> they're actually</font>

959
00:39:48,630 --> 00:39:54,150
encrypting<font color="#E5E5E5"> so in</font><font color="#CCCCCC"> Internet Explorer when</font>

960
00:39:51,030 --> 00:39:56,910
you're prompted to<font color="#E5E5E5"> save your password</font><font color="#CCCCCC"> it</font>

961
00:39:54,150 --> 00:39:58,560
<font color="#E5E5E5">essentially says when you say yes it's</font>

962
00:39:56,910 --> 00:40:00,740
<font color="#E5E5E5">actually storing it on the system</font><font color="#CCCCCC"> but</font>

963
00:39:58,560 --> 00:40:04,470
it's storing it in an<font color="#E5E5E5"> encrypted form and</font>

964
00:40:00,740 --> 00:40:06,120
the way that the Windows OS does this it

965
00:40:04,470 --> 00:40:08,629
might have<font color="#CCCCCC"> changed an edge or the newer</font>

966
00:40:06,120 --> 00:40:12,750
Internet Explorer variants or versions

967
00:40:08,630 --> 00:40:16,080
<font color="#CCCCCC">is that they will sha-1 the URL that</font><font color="#E5E5E5"> you</font>

968
00:40:12,750 --> 00:40:18,420
used to<font color="#CCCCCC"> login with okay</font><font color="#E5E5E5"> and then they</font>

969
00:40:16,080 --> 00:40:20,220
will<font color="#CCCCCC"> use that</font><font color="#E5E5E5"> to encrypt</font><font color="#CCCCCC"> your password</font>

970
00:40:18,420 --> 00:40:22,319
<font color="#E5E5E5">so every single time</font><font color="#CCCCCC"> you</font>

971
00:40:20,220 --> 00:40:24,180
website<font color="#E5E5E5"> it'll just it'll automatically</font>

972
00:40:22,319 --> 00:40:25,800
<font color="#CCCCCC">show one that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> wrote URL and say oh I</font>

973
00:40:24,180 --> 00:40:27,930
have a password<font color="#E5E5E5"> for this and then it</font>

974
00:40:25,800 --> 00:40:30,960
<font color="#E5E5E5">will insert it but what they</font><font color="#CCCCCC"> actually</font>

975
00:40:27,930 --> 00:40:33,899
did<font color="#CCCCCC"> which was</font><font color="#E5E5E5"> pretty clever is they used</font>

976
00:40:30,960 --> 00:40:37,050
to find first URL cache entry to find

977
00:40:33,900 --> 00:40:39,690
every every single<font color="#E5E5E5"> cached URL entry on</font>

978
00:40:37,050 --> 00:40:41,670
your<font color="#E5E5E5"> system and then they'll sha-1 those</font>

979
00:40:39,690 --> 00:40:43,170
and then try to decrypt your password

980
00:40:41,670 --> 00:40:46,230
which eat with each of those<font color="#E5E5E5"> sha ones</font>

981
00:40:43,170 --> 00:40:48,450
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so they basically decrypt the</font>

982
00:40:46,230 --> 00:40:51,180
functionality that<font color="#E5E5E5"> like I know Microsoft</font>

983
00:40:48,450 --> 00:40:53,609
<font color="#CCCCCC">doesn't really consider this a security</font>

984
00:40:51,180 --> 00:40:56,009
boundary probably<font color="#E5E5E5"> but I thought</font><font color="#CCCCCC"> that was</font>

985
00:40:53,609 --> 00:40:58,470
quite<font color="#CCCCCC"> entertaining</font><font color="#E5E5E5"> and with all these</font>

986
00:40:56,010 --> 00:41:01,260
<font color="#E5E5E5">other browser variants</font><font color="#CCCCCC"> you can use a</font>

987
00:40:58,470 --> 00:41:02,189
Windows API<font color="#CCCCCC"> I think you have to be</font>

988
00:41:01,260 --> 00:41:03,960
administrator but if<font color="#CCCCCC"> you're</font>

989
00:41:02,190 --> 00:41:07,020
administrator you can<font color="#E5E5E5"> use and logged in</font>

990
00:41:03,960 --> 00:41:10,290
as<font color="#CCCCCC"> the user you can</font><font color="#E5E5E5"> just use I think</font>

991
00:41:07,020 --> 00:41:12,270
it's Krypton protect<font color="#E5E5E5"> API on Windows to</font>

992
00:41:10,290 --> 00:41:15,359
decrypt your passwords<font color="#E5E5E5"> and they do this</font>

993
00:41:12,270 --> 00:41:18,480
prior<font color="#CCCCCC"> to sending it</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> to their</font>

994
00:41:15,359 --> 00:41:22,020
command control server so what does<font color="#CCCCCC"> that</font>

995
00:41:18,480 --> 00:41:24,569
look like<font color="#E5E5E5"> so so once they've extracted</font>

996
00:41:22,020 --> 00:41:26,609
your passwords<font color="#CCCCCC"> Davis sent they</font>

997
00:41:24,569 --> 00:41:31,050
essentially<font color="#E5E5E5"> write it to</font><font color="#CCCCCC"> app data</font>

998
00:41:26,609 --> 00:41:33,359
<font color="#CCCCCC">username dot ini and then for whatever</font>

999
00:41:31,050 --> 00:41:36,390
<font color="#E5E5E5">reason they're changing it</font><font color="#CCCCCC"> to the</font>

1000
00:41:33,359 --> 00:41:39,150
<font color="#E5E5E5">timestamp of the right for that</font><font color="#CCCCCC"> I&I file</font>

1001
00:41:36,390 --> 00:41:41,549
has changed<font color="#CCCCCC"> that of ntdll i'm assuming</font>

1002
00:41:39,150 --> 00:41:43,109
<font color="#CCCCCC">this</font><font color="#E5E5E5"> isn't an anti forensics mechanism</font>

1003
00:41:41,550 --> 00:41:44,400
where essentially<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> diff the files</font>

1004
00:41:43,109 --> 00:41:47,759
on the<font color="#E5E5E5"> system</font><font color="#CCCCCC"> that were</font><font color="#E5E5E5"> changed for the</font>

1005
00:41:44,400 --> 00:41:49,460
past day<font color="#CCCCCC"> you wouldn't see and you</font>

1006
00:41:47,760 --> 00:41:51,359
wouldn't<font color="#E5E5E5"> see this password file because</font>

1007
00:41:49,460 --> 00:41:52,589
they're simply<font color="#E5E5E5"> setting it to the</font>

1008
00:41:51,359 --> 00:41:54,180
timestamp<font color="#CCCCCC"> of ntdll</font>

1009
00:41:52,589 --> 00:41:55,410
which would be changed maybe since

1010
00:41:54,180 --> 00:42:00,029
you're lost<font color="#E5E5E5"> windows update or something</font>

1011
00:41:55,410 --> 00:42:03,299
<font color="#CCCCCC">like that and then this</font><font color="#E5E5E5"> is encrypted and</font>

1012
00:42:00,030 --> 00:42:05,190
then periodically<font color="#E5E5E5"> using a scheduled task</font>

1013
00:42:03,300 --> 00:42:07,950
<font color="#E5E5E5">from that extracted javascript is</font>

1014
00:42:05,190 --> 00:42:11,790
periodically posted to a remote command

1015
00:42:07,950 --> 00:42:13,020
<font color="#E5E5E5">and control server and then this is</font>

1016
00:42:11,790 --> 00:42:16,160
essentially what that encryption

1017
00:42:13,020 --> 00:42:19,050
<font color="#E5E5E5">algorithm looks like and it's a basic</font>

1018
00:42:16,160 --> 00:42:20,490
<font color="#E5E5E5">substitution cipher so if you were to</font>

1019
00:42:19,050 --> 00:42:22,859
see this<font color="#E5E5E5"> command and control traffic you</font>

1020
00:42:20,490 --> 00:42:25,890
could decrypt it<font color="#CCCCCC"> inline and see that</font>

1021
00:42:22,859 --> 00:42:28,980
your users were compromised<font color="#CCCCCC"> and then</font>

1022
00:42:25,890 --> 00:42:32,450
here<font color="#CCCCCC"> you can actually see the ALF</font>

1023
00:42:28,980 --> 00:42:34,050
in and alpha out variables which are

1024
00:42:32,450 --> 00:42:35,879
initializing

1025
00:42:34,050 --> 00:42:39,900
those alphabets<font color="#E5E5E5"> for the substitution</font>

1026
00:42:35,880 --> 00:42:42,330
cipher and then you have some<font color="#E5E5E5"> hard-coded</font>

1027
00:42:39,900 --> 00:42:45,150
<font color="#CCCCCC">eyepiece here that are</font><font color="#E5E5E5"> the command</font>

1028
00:42:42,330 --> 00:42:46,830
<font color="#E5E5E5">control servers</font><font color="#CCCCCC"> and then what was also</font>

1029
00:42:45,150 --> 00:42:48,480
<font color="#CCCCCC">interesting which a number</font><font color="#E5E5E5"> of other</font>

1030
00:42:46,830 --> 00:42:50,580
<font color="#E5E5E5">people have talked</font><font color="#CCCCCC"> about with fin 7 is</font>

1031
00:42:48,480 --> 00:42:52,500
they're<font color="#E5E5E5"> using the Google script hosting</font>

1032
00:42:50,580 --> 00:42:53,460
service as<font color="#E5E5E5"> a command control server as</font>

1033
00:42:52,500 --> 00:42:56,460
well<font color="#E5E5E5"> for backup</font>

1034
00:42:53,460 --> 00:42:58,230
<font color="#E5E5E5">so say this IP is down then they can</font>

1035
00:42:56,460 --> 00:43:00,480
<font color="#E5E5E5">still rely on Google</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get their stolen</font>

1036
00:42:58,230 --> 00:43:04,230
<font color="#E5E5E5">passwords</font><font color="#CCCCCC"> which are encrypted using that</font>

1037
00:43:00,480 --> 00:43:06,480
substitution<font color="#E5E5E5"> cipher so and then</font>

1038
00:43:04,230 --> 00:43:09,330
essentially<font color="#E5E5E5"> all this is just implemented</font>

1039
00:43:06,480 --> 00:43:11,370
in in JavaScript<font color="#E5E5E5"> their entire botnet</font>

1040
00:43:09,330 --> 00:43:12,750
functionality<font color="#CCCCCC"> so I know I move that</font>

1041
00:43:11,370 --> 00:43:14,069
through that really<font color="#CCCCCC"> quickly and I'm</font>

1042
00:43:12,750 --> 00:43:16,410
surprised we're not over time so I'm

1043
00:43:14,070 --> 00:43:17,460
sorry<font color="#E5E5E5"> that I went through that</font><font color="#CCCCCC"> really</font>

1044
00:43:16,410 --> 00:43:18,899
<font color="#CCCCCC">quickly but</font><font color="#E5E5E5"> if you guys</font><font color="#CCCCCC"> have any</font>

1045
00:43:17,460 --> 00:43:20,760
<font color="#E5E5E5">questions I'm I think we're gonna post</font>

1046
00:43:18,900 --> 00:43:24,180
<font color="#E5E5E5">up the slide somewhere hopefully may I</font>

1047
00:43:20,760 --> 00:43:29,360
can<font color="#CCCCCC"> talk to Steve about that but if you</font>

1048
00:43:24,180 --> 00:43:29,359
have any questions yeah

1049
00:43:33,369 --> 00:43:36,150
<font color="#E5E5E5">do we have a mic</font>

1050
00:43:39,380 --> 00:43:44,690
anything<font color="#E5E5E5"> do you want</font><font color="#CCCCCC"> to add anything</font><font color="#E5E5E5"> so</font>

1051
00:43:42,769 --> 00:43:47,508
great presentation guys thank<font color="#E5E5E5"> you</font>

1052
00:43:44,690 --> 00:43:51,890
when was<font color="#E5E5E5"> javascript given system level</font>

1053
00:43:47,509 --> 00:43:55,869
control<font color="#E5E5E5"> in Windows so so I'm not exactly</font>

1054
00:43:51,890 --> 00:43:59,420
<font color="#E5E5E5">sure when this occurred</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> effectively</font>

1055
00:43:55,869 --> 00:44:01,789
<font color="#CCCCCC">Windows gives you access to the</font><font color="#E5E5E5"> Windows</font>

1056
00:43:59,420 --> 00:44:05,720
scripting host<font color="#E5E5E5"> to perform scripted tasks</font>

1057
00:44:01,789 --> 00:44:07,759
for you like any<font color="#E5E5E5"> scripted</font><font color="#CCCCCC"> task and</font><font color="#E5E5E5"> what</font>

1058
00:44:05,720 --> 00:44:09,410
<font color="#E5E5E5">gives you like code execution control or</font>

1059
00:44:07,759 --> 00:44:14,210
system level<font color="#E5E5E5"> access is actually</font><font color="#CCCCCC"> the</font>

1060
00:44:09,410 --> 00:44:17,089
ActiveX objects<font color="#CCCCCC"> that that you can access</font>

1061
00:44:14,210 --> 00:44:20,660
<font color="#CCCCCC">from the</font><font color="#E5E5E5"> JavaScript itself so so in this</font>

1062
00:44:17,089 --> 00:44:23,799
<font color="#E5E5E5">scenario</font><font color="#CCCCCC"> they were able</font><font color="#E5E5E5"> to say execute</font>

1063
00:44:20,660 --> 00:44:26,118
power shell from an ActiveX object<font color="#CCCCCC"> and</font>

1064
00:44:23,799 --> 00:44:29,740
yeah so I'm not<font color="#E5E5E5"> exactly sure when that</font>

1065
00:44:26,119 --> 00:44:33,680
happens<font color="#E5E5E5"> but I do view it</font><font color="#CCCCCC"> as being like</font>

1066
00:44:29,740 --> 00:44:35,808
in<font color="#CCCCCC"> reality this</font><font color="#E5E5E5"> could be done with any</font>

1067
00:44:33,680 --> 00:44:37,430
other<font color="#E5E5E5"> scripting language so like on so</font>

1068
00:44:35,809 --> 00:44:39,859
if you were to compromise<font color="#E5E5E5"> OS 10 and</font>

1069
00:44:37,430 --> 00:44:42,230
<font color="#CCCCCC">Metasploit will do this</font><font color="#E5E5E5"> - is it will use</font>

1070
00:44:39,859 --> 00:44:44,119
VBA with an embedded macro and if it

1071
00:44:42,230 --> 00:44:46,779
<font color="#E5E5E5">checks that the operating</font><font color="#CCCCCC"> system is OS</font>

1072
00:44:44,119 --> 00:44:50,809
10 so like<font color="#E5E5E5"> Mac OS then it will use</font>

1073
00:44:46,779 --> 00:44:52,069
Python so in<font color="#E5E5E5"> reality</font><font color="#CCCCCC"> like they could</font>

1074
00:44:50,809 --> 00:44:53,480
<font color="#CCCCCC">have implemented</font><font color="#E5E5E5"> this botnet</font>

1075
00:44:52,069 --> 00:44:55,940
functionality with anything but<font color="#CCCCCC"> they</font>

1076
00:44:53,480 --> 00:44:56,359
just chose<font color="#CCCCCC"> to use javascript because</font><font color="#E5E5E5"> why</font>

1077
00:44:55,940 --> 00:44:58,970
not

1078
00:44:56,359 --> 00:45:01,640
there are this is<font color="#CCCCCC"> like an entirely other</font>

1079
00:44:58,970 --> 00:45:05,450
<font color="#E5E5E5">talk or sorry a whole talk in and of</font>

1080
00:45:01,640 --> 00:45:08,720
itself but Microsoft<font color="#E5E5E5"> is working on a</font>

1081
00:45:05,450 --> 00:45:11,680
large amount of engines<font color="#E5E5E5"> to automatically</font>

1082
00:45:08,720 --> 00:45:13,730
do<font color="#CCCCCC"> obviously this</font><font color="#E5E5E5"> kind of stuff so</font>

1083
00:45:11,680 --> 00:45:17,390
<font color="#E5E5E5">that's something to keep in mind Chris</font>

1084
00:45:13,730 --> 00:45:20,210
talked about a few<font color="#E5E5E5"> of them which which</font>

1085
00:45:17,390 --> 00:45:22,578
the<font color="#CCCCCC"> ATA and HCP product lines are making</font>

1086
00:45:20,210 --> 00:45:24,890
use of but we've actually been looking

1087
00:45:22,579 --> 00:45:26,480
<font color="#CCCCCC">into leveraging some some operating</font>

1088
00:45:24,890 --> 00:45:29,420
system<font color="#CCCCCC"> api is provided by Windows on</font>

1089
00:45:26,480 --> 00:45:31,069
Windows 10<font color="#E5E5E5"> for automated obfuscation</font><font color="#CCCCCC"> but</font>

1090
00:45:29,420 --> 00:45:33,410
as right<font color="#CCCCCC"> now we do have pretty decent</font>

1091
00:45:31,069 --> 00:45:36,700
coverage<font color="#E5E5E5"> of even obfuscation techniques</font>

1092
00:45:33,410 --> 00:45:39,470
<font color="#CCCCCC">like a lot of the work that</font><font color="#E5E5E5"> Ross</font><font color="#CCCCCC"> and I</font>

1093
00:45:36,700 --> 00:45:40,788
do is looking<font color="#E5E5E5"> at these attack</font>

1094
00:45:39,470 --> 00:45:42,828
methodologies<font color="#E5E5E5"> and see how they change</font>

1095
00:45:40,789 --> 00:45:44,420
over<font color="#E5E5E5"> time and then we provide that</font>

1096
00:45:42,829 --> 00:45:46,849
feedback back into the<font color="#E5E5E5"> product lines</font>

1097
00:45:44,420 --> 00:45:49,609
that<font color="#E5E5E5"> we work on so yeah here's some</font>

1098
00:45:46,849 --> 00:45:52,190
<font color="#CCCCCC">resources we have another question</font><font color="#E5E5E5"> sorry</font>

1099
00:45:49,609 --> 00:45:54,299
<font color="#CCCCCC">where was it</font>

1100
00:45:52,190 --> 00:45:54,750
excellent presentation guys thanks<font color="#E5E5E5"> very</font>

1101
00:45:54,300 --> 00:45:57,300
much

1102
00:45:54,750 --> 00:46:00,540
quick question<font color="#CCCCCC"> you have done any</font>

1103
00:45:57,300 --> 00:46:02,460
feedback here you have a document file

1104
00:46:00,540 --> 00:46:04,020
in it and it's<font color="#E5E5E5"> got a macro in it is</font>

1105
00:46:02,460 --> 00:46:06,180
there any way you<font color="#CCCCCC"> can simply tell just</font>

1106
00:46:04,020 --> 00:46:07,800
by<font color="#CCCCCC"> looking at properties or something</font>

1107
00:46:06,180 --> 00:46:10,049
<font color="#E5E5E5">whether there is actually a macro in the</font>

1108
00:46:07,800 --> 00:46:12,240
document<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> because that's almost</font><font color="#E5E5E5"> like</font>

1109
00:46:10,050 --> 00:46:16,400
a fairly<font color="#E5E5E5"> easy step one check</font><font color="#CCCCCC"> yeah</font>

1110
00:46:12,240 --> 00:46:18,839
absolutely<font color="#CCCCCC"> so</font><font color="#E5E5E5"> if you save</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> manually</font>

1111
00:46:16,400 --> 00:46:21,180
<font color="#CCCCCC">newer</font><font color="#E5E5E5"> versions of</font><font color="#CCCCCC"> office will insist</font>

1112
00:46:18,840 --> 00:46:23,330
that you save them as a docx<font color="#CCCCCC"> em</font><font color="#E5E5E5"> so it</font>

1113
00:46:21,180 --> 00:46:25,910
gives like the user a clue

1114
00:46:23,330 --> 00:46:27,930
generally the icon is different<font color="#CCCCCC"> -</font>

1115
00:46:25,910 --> 00:46:31,410
<font color="#CCCCCC">depends on</font><font color="#E5E5E5"> the versioning but there'll</font>

1116
00:46:27,930 --> 00:46:33,299
be a an exclamation mark<font color="#E5E5E5"> or a something</font>

1117
00:46:31,410 --> 00:46:35,370
<font color="#E5E5E5">other indicating on the on the document</font>

1118
00:46:33,300 --> 00:46:38,790
icon<font color="#E5E5E5"> the trouble is when they come in</font>

1119
00:46:35,370 --> 00:46:43,799
through email<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> not always noticed</font>

1120
00:46:38,790 --> 00:46:45,750
or not<font color="#CCCCCC"> always obvious to the user so</font><font color="#E5E5E5"> in</font>

1121
00:46:43,800 --> 00:46:48,540
my<font color="#E5E5E5"> opinion your email</font><font color="#CCCCCC"> solution should</font><font color="#E5E5E5"> be</font>

1122
00:46:45,750 --> 00:46:50,370
able to<font color="#E5E5E5"> detect that like that that would</font>

1123
00:46:48,540 --> 00:46:52,790
be like a must-have<font color="#E5E5E5"> feature of like</font><font color="#CCCCCC"> an</font>

1124
00:46:50,370 --> 00:46:52,790
incoming

1125
00:46:57,319 --> 00:47:00,219
<font color="#CCCCCC">as</font><font color="#E5E5E5"> an</font><font color="#CCCCCC"> end-user</font>

1126
00:47:02,319 --> 00:47:05,969
so thankfully<font color="#E5E5E5"> to Mike</font>

1127
00:47:06,350 --> 00:47:11,299
the question was about<font color="#CCCCCC"> an end-user that</font>

1128
00:47:09,980 --> 00:47:12,860
maybe doesn't<font color="#CCCCCC"> have access</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> an</font>

1129
00:47:11,300 --> 00:47:15,860
enterprise<font color="#E5E5E5"> security solution what what</font>

1130
00:47:12,860 --> 00:47:16,370
do you do so<font color="#CCCCCC"> then being disabled by</font>

1131
00:47:15,860 --> 00:47:17,990
default

1132
00:47:16,370 --> 00:47:23,089
is is a very excellent thing that

1133
00:47:17,990 --> 00:47:25,520
<font color="#CCCCCC">Microsoft did and</font><font color="#E5E5E5"> the problem is is that</font>

1134
00:47:23,090 --> 00:47:26,780
<font color="#CCCCCC">I know a lot of</font><font color="#E5E5E5"> people are in the habit</font>

1135
00:47:25,520 --> 00:47:28,100
of<font color="#E5E5E5"> just enabling that all the time</font>

1136
00:47:26,780 --> 00:47:29,510
<font color="#E5E5E5">especially if you're used to getting</font>

1137
00:47:28,100 --> 00:47:31,250
them from colleagues or something and

1138
00:47:29,510 --> 00:47:33,050
that's<font color="#CCCCCC"> how you can conduct business</font>

1139
00:47:31,250 --> 00:47:36,530
it's like muscle memory just<font color="#E5E5E5"> to enable</font>

1140
00:47:33,050 --> 00:47:37,970
the content so that's<font color="#CCCCCC"> what</font><font color="#E5E5E5"> I kind of in</font>

1141
00:47:36,530 --> 00:47:39,620
<font color="#CCCCCC">my opinion deficiencies with that</font>

1142
00:47:37,970 --> 00:47:41,540
approach<font color="#E5E5E5"> is that you've trained users</font>

1143
00:47:39,620 --> 00:47:44,359
<font color="#E5E5E5">just to click without thinking</font><font color="#CCCCCC"> so at</font>

1144
00:47:41,540 --> 00:47:45,860
home<font color="#CCCCCC"> if it's just a macro and</font><font color="#E5E5E5"> doesn't</font>

1145
00:47:44,360 --> 00:47:48,140
<font color="#E5E5E5">contain an exploit if you don't enable</font>

1146
00:47:45,860 --> 00:47:49,940
<font color="#CCCCCC">it you</font><font color="#E5E5E5"> should be</font><font color="#CCCCCC"> okay you should if you</font>

1147
00:47:48,140 --> 00:47:52,180
<font color="#E5E5E5">have default settings you</font><font color="#CCCCCC"> should be</font>

1148
00:47:49,940 --> 00:47:54,800
notified<font color="#E5E5E5"> and don't be in the habit of of</font>

1149
00:47:52,180 --> 00:47:56,540
enabling every time<font color="#E5E5E5"> just yeah you can</font>

1150
00:47:54,800 --> 00:47:58,580
just<font color="#E5E5E5"> disable macros by default and then</font>

1151
00:47:56,540 --> 00:48:00,920
if<font color="#E5E5E5"> somebody sends you document like as</font>

1152
00:47:58,580 --> 00:48:02,569
an<font color="#E5E5E5"> end user at home like if they're like</font>

1153
00:48:00,920 --> 00:48:05,090
oh you<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to enable macros</font><font color="#E5E5E5"> ask them</font>

1154
00:48:02,570 --> 00:48:07,160
why like<font color="#E5E5E5"> really for a Word document</font>

1155
00:48:05,090 --> 00:48:09,680
like<font color="#CCCCCC"> in what's like they're like oh I</font>

1156
00:48:07,160 --> 00:48:11,060
want my like dynamic<font color="#CCCCCC"> banner to like fly</font>

1157
00:48:09,680 --> 00:48:12,259
<font color="#CCCCCC">across the page when you open the</font>

1158
00:48:11,060 --> 00:48:14,810
document or<font color="#E5E5E5"> something right like there's</font>

1159
00:48:12,260 --> 00:48:17,240
<font color="#E5E5E5">not really any valid use case</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> Word</font>

1160
00:48:14,810 --> 00:48:20,600
document<font color="#CCCCCC"> to be open</font><font color="#E5E5E5"> with macros in a</font>

1161
00:48:17,240 --> 00:48:21,890
normal and<font color="#E5E5E5"> user scenario with with like</font>

1162
00:48:20,600 --> 00:48:25,549
<font color="#E5E5E5">Excel it's a little bit different</font>

1163
00:48:21,890 --> 00:48:26,690
<font color="#E5E5E5">because you do have like you do have a</font>

1164
00:48:25,550 --> 00:48:29,300
whole bunch of logic<font color="#E5E5E5"> that you can</font>

1165
00:48:26,690 --> 00:48:31,130
<font color="#E5E5E5">implement in Excel using VBA but</font><font color="#CCCCCC"> yeah</font>

1166
00:48:29,300 --> 00:48:36,560
for it for an end user<font color="#CCCCCC"> I would</font><font color="#E5E5E5"> honestly</font>

1167
00:48:31,130 --> 00:48:39,560
<font color="#E5E5E5">just suggest not like just disabling</font>

1168
00:48:36,560 --> 00:48:44,570
them by<font color="#CCCCCC"> default</font><font color="#E5E5E5"> but if you if you do</font>

1169
00:48:39,560 --> 00:48:47,240
have<font color="#E5E5E5"> you will get that warning</font><font color="#CCCCCC"> if you do</font>

1170
00:48:44,570 --> 00:48:50,270
have the<font color="#E5E5E5"> default setting enabled within</font>

1171
00:48:47,240 --> 00:48:52,729
<font color="#E5E5E5">within</font><font color="#CCCCCC"> office so you'll always get</font><font color="#E5E5E5"> that</font>

1172
00:48:50,270 --> 00:48:54,710
<font color="#E5E5E5">warning unless you say like I think</font>

1173
00:48:52,730 --> 00:48:57,970
<font color="#CCCCCC">there's an option for always execute</font>

1174
00:48:54,710 --> 00:48:57,970
macros which is obviously the<font color="#E5E5E5"> worst</font>

1175
00:48:59,880 --> 00:49:02,549
still find if there is a macro in the

1176
00:49:01,440 --> 00:49:05,099
document by looking at the properties

1177
00:49:02,549 --> 00:49:10,200
<font color="#CCCCCC">I'm not sure about CDF I know I know I</font>

1178
00:49:05,099 --> 00:49:11,940
<font color="#CCCCCC">know</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> for docx or</font><font color="#E5E5E5"> that format the</font>

1179
00:49:10,200 --> 00:49:14,250
newer format you have<font color="#CCCCCC"> to have doc M or</font>

1180
00:49:11,940 --> 00:49:16,049
<font color="#CCCCCC">also will</font><font color="#E5E5E5"> not you have to have doc M as</font>

1181
00:49:14,250 --> 00:49:20,519
<font color="#CCCCCC">the file extension or</font><font color="#E5E5E5"> L so will not like</font>

1182
00:49:16,049 --> 00:49:22,589
like attempt to execute<font color="#E5E5E5"> those macros but</font>

1183
00:49:20,519 --> 00:49:25,500
yeah I'll have<font color="#E5E5E5"> to actually have to check</font>

1184
00:49:22,589 --> 00:49:27,029
for CDF<font color="#E5E5E5"> like we you can know like you</font>

1185
00:49:25,500 --> 00:49:30,259
can see in our stuff but obviously don't

1186
00:49:27,029 --> 00:49:35,160
<font color="#E5E5E5">have access to</font><font color="#CCCCCC"> that as an end user</font>

1187
00:49:30,259 --> 00:49:39,210
another question<font color="#E5E5E5"> so how would you guys</font>

1188
00:49:35,160 --> 00:49:41,250
rate the complexity of this attack<font color="#CCCCCC"> with</font>

1189
00:49:39,210 --> 00:49:44,210
regards to exploiting office macros and

1190
00:49:41,250 --> 00:49:47,130
going back to<font color="#CCCCCC"> your statement about</font>

1191
00:49:44,210 --> 00:49:50,789
<font color="#E5E5E5">Microsoft not considering the hashing of</font>

1192
00:49:47,130 --> 00:49:52,470
the<font color="#E5E5E5"> URLs a security issue</font><font color="#CCCCCC"> what is your</font>

1193
00:49:50,789 --> 00:49:53,940
<font color="#E5E5E5">overall thinking behind</font><font color="#CCCCCC"> that and</font><font color="#E5E5E5"> is</font>

1194
00:49:52,470 --> 00:49:56,578
<font color="#E5E5E5">anybody else using that same</font><font color="#CCCCCC"> technique</font>

1195
00:49:53,940 --> 00:49:58,230
<font color="#E5E5E5">to store</font><font color="#CCCCCC"> passwords locally so can you</font>

1196
00:49:56,579 --> 00:49:59,789
<font color="#E5E5E5">repeat that first question it's</font><font color="#CCCCCC"> hard to</font>

1197
00:49:58,230 --> 00:50:02,309
<font color="#CCCCCC">here with the vendors yeah so how would</font>

1198
00:49:59,789 --> 00:50:04,170
<font color="#E5E5E5">you rate the complexity of this attack</font>

1199
00:50:02,309 --> 00:50:06,089
like initially looking at with regards

1200
00:50:04,170 --> 00:50:07,109
to exploiting office macros initially

1201
00:50:06,089 --> 00:50:08,759
looking<font color="#E5E5E5"> at this I'm like wow this has</font>

1202
00:50:07,109 --> 00:50:10,140
got to be seriously targeted at<font color="#CCCCCC"> c-level</font>

1203
00:50:08,759 --> 00:50:11,549
executives but<font color="#E5E5E5"> then it's more of a user</font>

1204
00:50:10,140 --> 00:50:13,259
behavior issue because<font color="#CCCCCC"> people are</font>

1205
00:50:11,549 --> 00:50:14,819
storing their passwords foolishly in

1206
00:50:13,259 --> 00:50:16,109
their browsers which would obviously<font color="#CCCCCC"> be</font>

1207
00:50:14,819 --> 00:50:19,799
circumvented<font color="#E5E5E5"> by use of a password</font>

1208
00:50:16,109 --> 00:50:23,390
<font color="#E5E5E5">manager for</font><font color="#CCCCCC"> example yeah</font><font color="#E5E5E5"> that's so so</font>

1209
00:50:19,799 --> 00:50:26,130
<font color="#E5E5E5">yeah it's to answer the first question</font>

1210
00:50:23,390 --> 00:50:27,379
<font color="#CCCCCC">the use of macros is trivial as an</font>

1211
00:50:26,130 --> 00:50:31,589
attack vector

1212
00:50:27,380 --> 00:50:34,819
<font color="#E5E5E5">unfortunately the like the end user</font>

1213
00:50:31,589 --> 00:50:38,759
doesn't<font color="#E5E5E5"> understand these scenarios and</font>

1214
00:50:34,819 --> 00:50:41,788
<font color="#E5E5E5">like I for one would like Microsoft to</font>

1215
00:50:38,759 --> 00:50:43,500
provide macro functionality with without

1216
00:50:41,789 --> 00:50:46,410
<font color="#CCCCCC">having access</font><font color="#E5E5E5"> to the operating</font><font color="#CCCCCC"> system</font>

1217
00:50:43,500 --> 00:50:49,230
like sandbox<font color="#E5E5E5"> the macro like they don't</font>

1218
00:50:46,410 --> 00:50:51,390
have<font color="#CCCCCC"> to have</font><font color="#E5E5E5"> access to like to execute</font>

1219
00:50:49,230 --> 00:50:53,160
code on the<font color="#CCCCCC"> box from</font><font color="#E5E5E5"> a macro and and</font>

1220
00:50:51,390 --> 00:50:55,259
like<font color="#CCCCCC"> even like if you have</font><font color="#E5E5E5"> office</font>

1221
00:50:53,160 --> 00:50:57,118
installed on your Mac it literally opens

1222
00:50:55,259 --> 00:50:58,650
<font color="#CCCCCC">up</font><font color="#E5E5E5"> that exact same</font><font color="#CCCCCC"> attack vector on an</font>

1223
00:50:57,119 --> 00:51:00,509
entirely different operating<font color="#E5E5E5"> system so</font>

1224
00:50:58,650 --> 00:51:01,829
you're literally porting<font color="#E5E5E5"> a giant</font>

1225
00:51:00,509 --> 00:51:03,869
security problem to an entirely<font color="#E5E5E5"> new</font>

1226
00:51:01,829 --> 00:51:06,450
operating system on<font color="#CCCCCC"> your software</font><font color="#E5E5E5"> that's</font>

1227
00:51:03,869 --> 00:51:10,230
used<font color="#CCCCCC"> by millions if not like billions</font><font color="#E5E5E5"> of</font>

1228
00:51:06,450 --> 00:51:11,328
people<font color="#CCCCCC"> write it do you have anything</font><font color="#E5E5E5"> to</font>

1229
00:51:10,230 --> 00:51:15,380
add<font color="#CCCCCC"> No</font>

1230
00:51:11,329 --> 00:51:19,390
and then in terms yeah<font color="#E5E5E5"> for password</font>

1231
00:51:15,380 --> 00:51:23,630
management<font color="#CCCCCC"> I use a local pastor manager</font>

1232
00:51:19,390 --> 00:51:25,040
<font color="#CCCCCC">on like like I think OS 10 has a better</font>

1233
00:51:23,630 --> 00:51:28,010
approach where they have like a<font color="#E5E5E5"> keychain</font>

1234
00:51:25,040 --> 00:51:33,980
<font color="#E5E5E5">and then that is encrypted by by your</font>

1235
00:51:28,010 --> 00:51:35,960
password from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> IE perspective</font><font color="#CCCCCC"> like if</font>

1236
00:51:33,980 --> 00:51:37,819
they have<font color="#CCCCCC"> access like in reality if they</font>

1237
00:51:35,960 --> 00:51:39,619
have<font color="#E5E5E5"> access to</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> local</font><font color="#CCCCCC"> machine they</font>

1238
00:51:37,819 --> 00:51:42,319
can<font color="#CCCCCC"> probably</font><font color="#E5E5E5"> just get your</font><font color="#CCCCCC"> password in</font>

1239
00:51:39,619 --> 00:51:49,400
like a<font color="#E5E5E5"> million</font><font color="#CCCCCC"> other ways like</font><font color="#E5E5E5"> key</font>

1240
00:51:42,319 --> 00:51:51,140
<font color="#E5E5E5">logging or</font><font color="#CCCCCC"> yeah like like</font><font color="#E5E5E5"> a pop-up box</font>

1241
00:51:49,400 --> 00:51:53,869
that's prompting them that looks similar

1242
00:51:51,140 --> 00:51:56,690
<font color="#CCCCCC">to another</font><font color="#E5E5E5"> application</font><font color="#CCCCCC"> things like that</font>

1243
00:51:53,869 --> 00:52:00,220
for a normal<font color="#E5E5E5"> end user</font><font color="#CCCCCC"> so I think</font><font color="#E5E5E5"> they've</font>

1244
00:51:56,690 --> 00:52:03,079
kind<font color="#E5E5E5"> of like gone a step further than</font>

1245
00:52:00,220 --> 00:52:04,549
<font color="#E5E5E5">storing an employee text but I don't</font>

1246
00:52:03,079 --> 00:52:07,609
think<font color="#E5E5E5"> it's not much further</font><font color="#CCCCCC"> but yeah my</font>

1247
00:52:04,550 --> 00:52:10,790
suggestion would be<font color="#E5E5E5"> for a normal user is</font>

1248
00:52:07,609 --> 00:52:11,960
to use a<font color="#CCCCCC"> posture manager but I I'm still</font>

1249
00:52:10,790 --> 00:52:13,819
not<font color="#E5E5E5"> a huge</font><font color="#CCCCCC"> fan of</font><font color="#E5E5E5"> password managers</font>

1250
00:52:11,960 --> 00:52:16,910
<font color="#CCCCCC">either so it's there's not really a</font>

1251
00:52:13,819 --> 00:52:18,589
great<font color="#E5E5E5"> solution for the the</font><font color="#CCCCCC"> endpoint</font>

1252
00:52:16,910 --> 00:52:21,500
<font color="#E5E5E5">itself</font><font color="#CCCCCC"> if you can remember them</font><font color="#E5E5E5"> in your</font>

1253
00:52:18,589 --> 00:52:23,960
brain probably the best<font color="#E5E5E5"> suggestion but I</font>

1254
00:52:21,500 --> 00:52:28,420
know that's<font color="#E5E5E5"> not really that's not really</font>

1255
00:52:23,960 --> 00:52:28,420
a useful suggestion so

1256
00:52:28,440 --> 00:52:35,250
any other questions yeah<font color="#CCCCCC"> a</font><font color="#E5E5E5"> you know the</font>

1257
00:52:32,880 --> 00:52:37,079
entropy<font color="#E5E5E5"> classification that you did</font>

1258
00:52:35,250 --> 00:52:38,819
there you had<font color="#CCCCCC"> the I think the scheduled</font>

1259
00:52:37,079 --> 00:52:42,810
tasks on the one side<font color="#CCCCCC"> and on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> other</font>

1260
00:52:38,819 --> 00:52:45,630
<font color="#E5E5E5">side does that entropy clustering detect</font>

1261
00:52:42,810 --> 00:52:48,930
differences between authors of of files

1262
00:52:45,630 --> 00:52:51,780
<font color="#CCCCCC">on</font><font color="#E5E5E5"> that no so the we know these are</font>

1263
00:52:48,930 --> 00:52:53,609
based on<font color="#E5E5E5"> the attributes and we</font><font color="#CCCCCC"> and the</font>

1264
00:52:51,780 --> 00:52:55,380
way and<font color="#E5E5E5"> the way we're tracking them we</font>

1265
00:52:53,609 --> 00:53:00,660
know these are<font color="#E5E5E5"> Finn</font><font color="#CCCCCC"> 7 so we know they're</font>

1266
00:52:55,380 --> 00:53:02,520
the<font color="#CCCCCC"> same actor the yeah in theory</font><font color="#E5E5E5"> we</font>

1267
00:53:00,660 --> 00:53:05,009
could<font color="#E5E5E5"> definitely use entropy</font>

1268
00:53:02,520 --> 00:53:08,400
<font color="#CCCCCC">I was only</font><font color="#E5E5E5"> used like I was only using a</font>

1269
00:53:05,010 --> 00:53:11,490
fixed<font color="#CCCCCC"> byte size for the entropy</font>

1270
00:53:08,400 --> 00:53:13,349
calculation<font color="#CCCCCC"> so that could be</font><font color="#E5E5E5"> like the</font>

1271
00:53:11,490 --> 00:53:15,089
task management code was up here and

1272
00:53:13,349 --> 00:53:16,470
<font color="#E5E5E5">then the task management code was up</font>

1273
00:53:15,089 --> 00:53:21,299
here<font color="#E5E5E5"> in that and that's like the large</font>

1274
00:53:16,470 --> 00:53:23,609
reason<font color="#CCCCCC"> behind the the entropy change so</font>

1275
00:53:21,300 --> 00:53:26,250
like this<font color="#CCCCCC"> is not an exact science it was</font>

1276
00:53:23,609 --> 00:53:28,560
kind of like here's what I tried these

1277
00:53:26,250 --> 00:53:31,470
were my results and I think<font color="#E5E5E5"> you'd find</font>

1278
00:53:28,560 --> 00:53:34,770
them interesting<font color="#CCCCCC"> could we scale this for</font>

1279
00:53:31,470 --> 00:53:36,839
large clustering<font color="#E5E5E5"> of like large different</font>

1280
00:53:34,770 --> 00:53:39,900
samples<font color="#E5E5E5"> I'd like to reach that with the</font>

1281
00:53:36,839 --> 00:53:43,259
<font color="#CCCCCC">opencv image</font><font color="#E5E5E5"> clustering because I</font><font color="#CCCCCC"> think</font>

1282
00:53:39,900 --> 00:53:46,349
that<font color="#E5E5E5"> that shows</font><font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> potential</font><font color="#CCCCCC"> but</font>

1283
00:53:43,260 --> 00:53:48,450
for for this scenario<font color="#CCCCCC"> like</font><font color="#E5E5E5"> since we were</font>

1284
00:53:46,349 --> 00:53:51,240
using basics before decoding depth as

1285
00:53:48,450 --> 00:53:53,009
one of<font color="#E5E5E5"> the axes I don't believe that it</font>

1286
00:53:51,240 --> 00:53:55,290
could<font color="#E5E5E5"> be</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> applied elsewhere unless</font>

1287
00:53:53,010 --> 00:53:57,450
we we see base64 decoding death<font color="#E5E5E5"> being</font>

1288
00:53:55,290 --> 00:53:58,710
used again so this was almost<font color="#CCCCCC"> just for</font>

1289
00:53:57,450 --> 00:54:01,169
clustering the<font color="#E5E5E5"> fin 7 documents</font>

1290
00:53:58,710 --> 00:54:03,599
themselves<font color="#CCCCCC"> and then once like</font><font color="#E5E5E5"> what I</font>

1291
00:54:01,170 --> 00:54:05,880
<font color="#E5E5E5">kind of didn't really mention that well</font>

1292
00:54:03,599 --> 00:54:07,500
is<font color="#E5E5E5"> that the reason I did the clustering</font>

1293
00:54:05,880 --> 00:54:09,869
<font color="#E5E5E5">was to look at those my new changes</font>

1294
00:54:07,500 --> 00:54:11,369
which then I saw<font color="#E5E5E5"> later on when I was</font>

1295
00:54:09,869 --> 00:54:14,730
comparing<font color="#E5E5E5"> this the files within the</font>

1296
00:54:11,369 --> 00:54:18,150
clusters<font color="#CCCCCC"> be I definitely could totally</font>

1297
00:54:14,730 --> 00:54:22,410
be used to look<font color="#CCCCCC"> at different actors</font><font color="#E5E5E5"> if</font>

1298
00:54:18,150 --> 00:54:24,359
you were like like this<font color="#E5E5E5"> the clustering</font>

1299
00:54:22,410 --> 00:54:27,509
field is<font color="#E5E5E5"> is huge so like you can have</font>

1300
00:54:24,359 --> 00:54:29,130
like<font color="#CCCCCC"> k-means</font><font color="#E5E5E5"> look at X number of</font>

1301
00:54:27,510 --> 00:54:31,260
different dimensions<font color="#CCCCCC"> of data but</font><font color="#E5E5E5"> in this</font>

1302
00:54:29,130 --> 00:54:34,400
instance I just<font color="#E5E5E5"> used a</font><font color="#CCCCCC"> two dimensional</font>

1303
00:54:31,260 --> 00:54:36,599
<font color="#CCCCCC">scatterplot I didn't use k-means or</font>

1304
00:54:34,400 --> 00:54:37,950
supervisor and supervised machine

1305
00:54:36,599 --> 00:54:39,900
learning or things like<font color="#CCCCCC"> that but there's</font>

1306
00:54:37,950 --> 00:54:41,549
<font color="#CCCCCC">definitely like a whole</font><font color="#E5E5E5"> bunch of</font>

1307
00:54:39,900 --> 00:54:42,119
different computer science fields that

1308
00:54:41,550 --> 00:54:48,180
can<font color="#E5E5E5"> be applied</font>

1309
00:54:42,119 --> 00:54:51,690
<font color="#E5E5E5">to this problem hello</font><font color="#CCCCCC"> Hey</font>

1310
00:54:48,180 --> 00:54:54,899
so I have two<font color="#E5E5E5"> questions</font><font color="#CCCCCC"> you had a like</font>

1311
00:54:51,690 --> 00:54:56,460
an<font color="#CCCCCC"> English mashing thing onward did you</font>

1312
00:54:54,900 --> 00:54:59,749
find any false<font color="#CCCCCC"> positive</font><font color="#E5E5E5"> with that like</font>

1313
00:54:56,460 --> 00:55:04,490
without<font color="#CCCCCC"> even mashing</font><font color="#E5E5E5"> at all like yes</font><font color="#CCCCCC"> yep</font>

1314
00:54:59,749 --> 00:55:09,089
like basically<font color="#CCCCCC"> I was trying to adjust</font>

1315
00:55:04,490 --> 00:55:10,979
the<font color="#CCCCCC"> required mashing features to the</font>

1316
00:55:09,089 --> 00:55:14,940
point that we<font color="#E5E5E5"> weren't getting false</font>

1317
00:55:10,980 --> 00:55:19,069
positives<font color="#E5E5E5"> but it was like it was</font>

1318
00:55:14,940 --> 00:55:21,660
difficult<font color="#CCCCCC"> because for example when I</font>

1319
00:55:19,069 --> 00:55:23,549
turned it down<font color="#CCCCCC"> to the point the</font><font color="#E5E5E5"> number</font>

1320
00:55:21,660 --> 00:55:25,769
of required<font color="#E5E5E5"> features matching to the</font>

1321
00:55:23,549 --> 00:55:28,410
<font color="#E5E5E5">point of getting that embedded image</font>

1322
00:55:25,769 --> 00:55:29,970
within<font color="#E5E5E5"> another embedded image</font><font color="#CCCCCC"> then I was</font>

1323
00:55:28,410 --> 00:55:31,170
getting more false positives<font color="#CCCCCC"> than if I</font>

1324
00:55:29,970 --> 00:55:32,788
cranked it up<font color="#E5E5E5"> and then I was almost</font>

1325
00:55:31,170 --> 00:55:35,190
getting exactly images<font color="#CCCCCC"> map image</font>

1326
00:55:32,789 --> 00:55:38,609
matching for extracted features<font color="#E5E5E5"> even</font>

1327
00:55:35,190 --> 00:55:41,309
though they are<font color="#CCCCCC"> different hashes so yeah</font>

1328
00:55:38,609 --> 00:55:43,589
I still again<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is like essentially</font>

1329
00:55:41,309 --> 00:55:46,440
something<font color="#E5E5E5"> we've tried I'm gonna try and</font>

1330
00:55:43,589 --> 00:55:51,150
<font color="#CCCCCC">make it scale and then see how it</font>

1331
00:55:46,440 --> 00:55:54,480
<font color="#E5E5E5">performs in giving us like one we're</font>

1332
00:55:51,150 --> 00:55:56,249
<font color="#CCCCCC">using these</font><font color="#E5E5E5"> images for for</font>

1333
00:55:54,480 --> 00:55:57,869
classification<font color="#CCCCCC"> of malicious documents</font>

1334
00:55:56,249 --> 00:56:00,480
and then<font color="#CCCCCC"> two we're using it for feedback</font>

1335
00:55:57,869 --> 00:56:02,960
into what we're not classifying properly

1336
00:56:00,480 --> 00:56:02,960
within<font color="#E5E5E5"> the sandbox</font>

1337
00:56:06,340 --> 00:56:12,340
so sorry so I meant<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Shah image from</font>

1338
00:56:09,160 --> 00:56:13,990
the<font color="#CCCCCC"> underworld documents do</font><font color="#E5E5E5"> you find if</font>

1339
00:56:12,340 --> 00:56:16,000
like any clean documents that are also

1340
00:56:13,990 --> 00:56:17,470
included<font color="#CCCCCC"> I'll image and also</font><font color="#E5E5E5"> I want you</font>

1341
00:56:16,000 --> 00:56:19,930
<font color="#E5E5E5">I want</font><font color="#CCCCCC"> you here</font><font color="#E5E5E5"> a little bit about your</font>

1342
00:56:17,470 --> 00:56:21,970
takes on what techniques do you<font color="#E5E5E5"> think</font>

1343
00:56:19,930 --> 00:56:25,509
Microsoft<font color="#E5E5E5"> can do besides</font><font color="#CCCCCC"> obviously</font>

1344
00:56:21,970 --> 00:56:27,279
<font color="#E5E5E5">disabling</font><font color="#CCCCCC"> matters</font><font color="#E5E5E5"> at all</font><font color="#CCCCCC"> to like lower</font>

1345
00:56:25,510 --> 00:56:30,160
down that the amount of malicious<font color="#CCCCCC"> things</font>

1346
00:56:27,280 --> 00:56:33,100
<font color="#E5E5E5">the documents can deal with macros</font><font color="#CCCCCC"> as</font>

1347
00:56:30,160 --> 00:56:35,649
far as the image<font color="#E5E5E5"> matching was good</font>

1348
00:56:33,100 --> 00:56:36,790
because<font color="#E5E5E5"> it was exact it was good at</font>

1349
00:56:35,650 --> 00:56:40,210
finding documents<font color="#CCCCCC"> being</font><font color="#E5E5E5"> that's</font>

1350
00:56:36,790 --> 00:56:42,370
<font color="#E5E5E5">classified</font><font color="#CCCCCC"> so there was documents that</font>

1351
00:56:40,210 --> 00:56:44,650
were marked as unknown that were

1352
00:56:42,370 --> 00:56:48,759
actually malicious and that<font color="#CCCCCC"> was</font><font color="#E5E5E5"> because</font>

1353
00:56:44,650 --> 00:56:50,710
they<font color="#CCCCCC"> had the same image inside in</font><font color="#E5E5E5"> most</font>

1354
00:56:48,760 --> 00:56:52,810
of those cases<font color="#E5E5E5"> it was finding things</font>

1355
00:56:50,710 --> 00:56:54,550
that<font color="#E5E5E5"> were corrupted so that they'd been</font>

1356
00:56:52,810 --> 00:56:55,990
<font color="#E5E5E5">they've been altered in some</font><font color="#CCCCCC"> way so they</font>

1357
00:56:54,550 --> 00:56:57,970
actually<font color="#CCCCCC"> didn't</font><font color="#E5E5E5"> open we didn't have a</font>

1358
00:56:55,990 --> 00:57:01,569
lot<font color="#CCCCCC"> of behavioral data so we it was it</font>

1359
00:56:57,970 --> 00:57:03,580
was difficult to<font color="#E5E5E5"> classify them they were</font>

1360
00:57:01,570 --> 00:57:07,300
<font color="#CCCCCC">also impossible they'll be opened by</font>

1361
00:57:03,580 --> 00:57:08,980
<font color="#CCCCCC">end-user but we're not seeing</font><font color="#E5E5E5"> like for</font>

1362
00:57:07,300 --> 00:57:11,620
the exact thing we're not I'm<font color="#CCCCCC"> not I</font>

1363
00:57:08,980 --> 00:57:13,650
<font color="#CCCCCC">couldn't</font><font color="#E5E5E5"> find any examples</font><font color="#CCCCCC"> of clean</font>

1364
00:57:11,620 --> 00:57:16,000
documents using<font color="#E5E5E5"> those images because</font>

1365
00:57:13,650 --> 00:57:18,460
there's they're very focused<font color="#CCCCCC"> to social</font>

1366
00:57:16,000 --> 00:57:22,210
engineering<font color="#CCCCCC"> and it just didn't make</font>

1367
00:57:18,460 --> 00:57:27,610
sense<font color="#CCCCCC"> as far as the macro problem in</font>

1368
00:57:22,210 --> 00:57:30,760
<font color="#CCCCCC">Word having users click through it is no</font>

1369
00:57:27,610 --> 00:57:32,380
solution<font color="#E5E5E5"> in my opinion the so office</font>

1370
00:57:30,760 --> 00:57:34,720
2016<font color="#E5E5E5"> I know has a bunch of features that</font>

1371
00:57:32,380 --> 00:57:36,460
<font color="#E5E5E5">allow you to if you run in Active</font>

1372
00:57:34,720 --> 00:57:38,250
Directory domain you<font color="#CCCCCC"> can do you can</font>

1373
00:57:36,460 --> 00:57:42,730
secure<font color="#CCCCCC"> that you can ensure all your</font>

1374
00:57:38,250 --> 00:57:45,040
individual users are<font color="#E5E5E5"> secure</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> only the</font>

1375
00:57:42,730 --> 00:57:48,120
<font color="#CCCCCC">only thing I could Josh mentioned</font><font color="#E5E5E5"> it</font>

1376
00:57:45,040 --> 00:57:50,800
already is some kind of sandbox approach

1377
00:57:48,120 --> 00:57:52,660
<font color="#CCCCCC">you're gonna I've looked at a</font><font color="#E5E5E5"> lot of</font>

1378
00:57:50,800 --> 00:57:54,340
<font color="#E5E5E5">clean macros you're gonna break a lot of</font>

1379
00:57:52,660 --> 00:57:57,069
<font color="#CCCCCC">them so I think that's the conundrum</font>

1380
00:57:54,340 --> 00:57:58,660
that<font color="#E5E5E5"> Microsoft is in but they know they</font>

1381
00:57:57,070 --> 00:58:00,160
know<font color="#CCCCCC"> they could add a sandbox</font><font color="#E5E5E5"> but</font>

1382
00:57:58,660 --> 00:58:03,430
there's all these macros<font color="#CCCCCC"> that</font><font color="#E5E5E5"> commerce</font>

1383
00:58:00,160 --> 00:58:05,140
is basically you know<font color="#E5E5E5"> like</font><font color="#CCCCCC"> people's</font>

1384
00:58:03,430 --> 00:58:07,029
invoicing systems are based on<font color="#CCCCCC"> these and</font>

1385
00:58:05,140 --> 00:58:09,549
they're running you know they're<font color="#CCCCCC"> they're</font>

1386
00:58:07,030 --> 00:58:10,870
<font color="#E5E5E5">often it's at least push button or the</font>

1387
00:58:09,550 --> 00:58:13,150
user<font color="#CCCCCC"> asked to interact with the document</font>

1388
00:58:10,870 --> 00:58:14,650
more but still<font color="#CCCCCC"> they're they're executing</font>

1389
00:58:13,150 --> 00:58:16,510
PowerShell from like totally clean

1390
00:58:14,650 --> 00:58:18,390
documents written by you know I'm

1391
00:58:16,510 --> 00:58:20,730
<font color="#E5E5E5">talking like</font>

1392
00:58:18,390 --> 00:58:23,250
and stuff like<font color="#E5E5E5"> cuz there's there's also</font>

1393
00:58:20,730 --> 00:58:26,190
actually macro signing functionality

1394
00:58:23,250 --> 00:58:27,360
that microsoft<font color="#E5E5E5"> offers so if you're in an</font>

1395
00:58:26,190 --> 00:58:29,760
enterprise<font color="#CCCCCC"> environment and you</font><font color="#E5E5E5"> can</font>

1396
00:58:27,360 --> 00:58:32,730
enable macro signing that would be good

1397
00:58:29,760 --> 00:58:35,310
<font color="#E5E5E5">but again like if Lucy and HR gets</font>

1398
00:58:32,730 --> 00:58:36,720
<font color="#E5E5E5">popped and then you get her signing key</font>

1399
00:58:35,310 --> 00:58:38,900
then you<font color="#E5E5E5"> can just sign macros and then</font>

1400
00:58:36,720 --> 00:58:42,660
send<font color="#E5E5E5"> it to the rest</font><font color="#CCCCCC"> of the company</font><font color="#E5E5E5"> so</font>

1401
00:58:38,900 --> 00:58:44,340
I'd like<font color="#E5E5E5"> a permanent kind of approach of</font>

1402
00:58:42,660 --> 00:58:47,430
like the<font color="#E5E5E5"> sandbox key methodology</font><font color="#CCCCCC"> where</font>

1403
00:58:44,340 --> 00:58:50,400
just restricting access<font color="#E5E5E5"> to the operating</font>

1404
00:58:47,430 --> 00:58:52,379
<font color="#CCCCCC">system</font><font color="#E5E5E5"> itself seems logical to me it's</font>

1405
00:58:50,400 --> 00:58:53,730
like<font color="#E5E5E5"> it's like having</font><font color="#CCCCCC"> hey I know</font>

1406
00:58:52,380 --> 00:58:55,140
Microsoft does this all<font color="#CCCCCC"> the time</font>

1407
00:58:53,730 --> 00:58:58,590
right like an<font color="#CCCCCC"> IE</font><font color="#E5E5E5"> used to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

1408
00:58:55,140 --> 00:59:00,270
enable ActiveX controls from like a

1409
00:58:58,590 --> 00:59:03,210
<font color="#E5E5E5">website and then you could just get code</font>

1410
00:59:00,270 --> 00:59:04,740
execution<font color="#E5E5E5"> like so anyways I know I know</font>

1411
00:59:03,210 --> 00:59:06,500
I know it's not<font color="#E5E5E5"> an easy</font><font color="#CCCCCC"> solution for</font>

1412
00:59:04,740 --> 00:59:09,629
<font color="#E5E5E5">them either because they're gonna break</font>

1413
00:59:06,500 --> 00:59:12,270
<font color="#CCCCCC">millions of environments so I</font><font color="#E5E5E5"> think it's</font>

1414
00:59:09,630 --> 00:59:16,110
lunch thanks a<font color="#E5E5E5"> lot yes lunch time thank</font>

1415
00:59:12,270 --> 00:59:19,250
you<font color="#E5E5E5"> so much guys that was awesome</font><font color="#CCCCCC"> we'll</font>

1416
00:59:16,110 --> 00:59:19,250
be<font color="#E5E5E5"> back in this room at</font><font color="#CCCCCC"> 1 o'clock</font>

