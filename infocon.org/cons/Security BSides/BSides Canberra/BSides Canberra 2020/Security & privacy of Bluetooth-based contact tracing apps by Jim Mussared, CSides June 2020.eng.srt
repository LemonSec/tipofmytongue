1
00:00:00,890 --> 00:00:05,819
right which brings us to our final four

2
00:00:03,990 --> 00:00:07,710
I did get told on the slack that my

3
00:00:05,819 --> 00:00:09,179
microphone was a little bit like Sony

4
00:00:07,710 --> 00:00:11,519
creates the volume hopefully that's a

5
00:00:09,179 --> 00:00:14,820
little bit better but our final talk is

6
00:00:11,519 --> 00:00:16,350
a really topical talk tonight for a

7
00:00:14,820 --> 00:00:19,310
stronger as well

8
00:00:16,350 --> 00:00:21,359
it is looking at contact tracing and

9
00:00:19,310 --> 00:00:23,070
specifically that I'm talking the title

10
00:00:21,359 --> 00:00:24,420
that it has it in the abstract the

11
00:00:23,070 --> 00:00:27,300
claimants a cup and some of the

12
00:00:24,420 --> 00:00:31,170
vulnerabilities around that and it is

13
00:00:27,300 --> 00:00:33,120
why Jim Jim was around and Jean works in

14
00:00:31,170 --> 00:00:35,610
the microwave - project is one of the

15
00:00:33,120 --> 00:00:37,290
authors of what crowed pythons of Malloy

16
00:00:35,610 --> 00:00:38,489
Street implementation before that he

17
00:00:37,290 --> 00:00:41,670
worked at a high school computer science

18
00:00:38,489 --> 00:00:43,379
education at Brock learning distributed

19
00:00:41,670 --> 00:00:45,719
systems in cloud storage at Google

20
00:00:43,379 --> 00:00:47,699
Australia and also industrial process

21
00:00:45,719 --> 00:00:50,910
control and monitoring systems that is

22
00:00:47,700 --> 00:01:02,969
free so let's give a virtual welcome to

23
00:00:50,910 --> 00:01:03,959
Jim and he cannot take enough hi Sylvia

24
00:01:02,969 --> 00:01:07,590
- thankfully thank you for the

25
00:01:03,960 --> 00:01:09,090
introduction and thank you to both of

26
00:01:07,590 --> 00:01:12,030
you Colleen Sylvia for the opportunity

27
00:01:09,090 --> 00:01:13,170
to present I'm based in Sydney so I'd

28
00:01:12,030 --> 00:01:15,210
like to acknowledge the gadigal people

29
00:01:13,170 --> 00:01:16,799
of the eora nation the traditional

30
00:01:15,210 --> 00:01:18,179
custodians of this land and pay my

31
00:01:16,799 --> 00:01:19,790
respects to their elders past and

32
00:01:18,180 --> 00:01:22,409
present

33
00:01:19,790 --> 00:01:25,710
so I'm gonna give a quick introduction

34
00:01:22,409 --> 00:01:27,360
to contact tracing apps and I'm sure

35
00:01:25,710 --> 00:01:30,449
most of you are very familiar with with

36
00:01:27,360 --> 00:01:32,520
codes often and the general problem here

37
00:01:30,450 --> 00:01:34,229
but I just sum up our goal here is to

38
00:01:32,520 --> 00:01:36,329
detect potential exposures while

39
00:01:34,229 --> 00:01:39,060
maintaining user privacy to the maximum

40
00:01:36,329 --> 00:01:40,470
extent possible this has been a pretty

41
00:01:39,060 --> 00:01:43,079
interesting journey I don't have a

42
00:01:40,470 --> 00:01:44,759
security background I'm just interested

43
00:01:43,079 --> 00:01:47,270
in Bluetooth then this seemed like a fun

44
00:01:44,759 --> 00:01:49,799
opportunity of something to investigate

45
00:01:47,270 --> 00:01:52,890
this has taken me into investigating

46
00:01:49,799 --> 00:01:54,840
several countries contact tracing

47
00:01:52,890 --> 00:01:56,670
applications I've written Senate

48
00:01:54,840 --> 00:01:59,130
submission I've spoken to journalists

49
00:01:56,670 --> 00:02:04,439
I've been on the radio it's all very

50
00:01:59,130 --> 00:02:05,460
very surreal and on brand for 2020 so

51
00:02:04,439 --> 00:02:07,258
there many different ways to build a

52
00:02:05,460 --> 00:02:08,970
contact tracing app and every country

53
00:02:07,259 --> 00:02:11,819
has gone a different path through these

54
00:02:08,970 --> 00:02:13,000
options New Zealand for example have a

55
00:02:11,819 --> 00:02:15,790
manual app where you scan

56
00:02:13,000 --> 00:02:17,950
qr-code this functions more as a memory

57
00:02:15,790 --> 00:02:19,269
aid but it's great for privacy there's

58
00:02:17,950 --> 00:02:21,250
different ways of doing proximity

59
00:02:19,270 --> 00:02:24,340
detection we're going to focus on

60
00:02:21,250 --> 00:02:26,140
Bluetooth here but the idea is that an

61
00:02:24,340 --> 00:02:28,150
identifier is distributed to and

62
00:02:26,140 --> 00:02:30,309
recorded by nearby phones on a regular

63
00:02:28,150 --> 00:02:31,990
interval and later if you use a test

64
00:02:30,310 --> 00:02:33,820
positive than any other user who has

65
00:02:31,990 --> 00:02:36,790
seen an identifier from that user must

66
00:02:33,820 --> 00:02:39,220
be notified these identifiers can either

67
00:02:36,790 --> 00:02:41,890
be downloaded regularly from a central

68
00:02:39,220 --> 00:02:43,450
authority server or they can be

69
00:02:41,890 --> 00:02:45,279
generated on device via a cryptographic

70
00:02:43,450 --> 00:02:48,790
scheme as is done in the Apple and

71
00:02:45,280 --> 00:02:50,260
Google notification API for a user to

72
00:02:48,790 --> 00:02:51,910
say that they have tested positive there

73
00:02:50,260 --> 00:02:54,120
may be some verification by a central

74
00:02:51,910 --> 00:02:57,280
authority code would say if you just

75
00:02:54,120 --> 00:02:59,290
type it in and get a verification SMS

76
00:02:57,280 --> 00:03:02,020
but in Apple Google you can actually

77
00:02:59,290 --> 00:03:02,799
have full-on I got this test result with

78
00:03:02,020 --> 00:03:06,790
this with his ID

79
00:03:02,800 --> 00:03:08,920
attached to it and the main thing that

80
00:03:06,790 --> 00:03:10,390
made people mostly focus on is how is

81
00:03:08,920 --> 00:03:12,070
the encounter matching algorithm

82
00:03:10,390 --> 00:03:14,109
implemented is it done on the device or

83
00:03:12,070 --> 00:03:16,420
is it done on the server to be and

84
00:03:14,110 --> 00:03:19,660
usually analyzed by a human contact

85
00:03:16,420 --> 00:03:21,309
tracer and then finally who gets this

86
00:03:19,660 --> 00:03:23,200
notification is it just the user on

87
00:03:21,310 --> 00:03:25,660
their phone with a pop-up saying you

88
00:03:23,200 --> 00:03:27,310
should self isolate or is the is the

89
00:03:25,660 --> 00:03:29,430
central contact tracing Authority

90
00:03:27,310 --> 00:03:33,190
involved in tracking whether the user

91
00:03:29,430 --> 00:03:36,790
needed to be notified and is undergoing

92
00:03:33,190 --> 00:03:38,829
their isolation so specifically covert

93
00:03:36,790 --> 00:03:40,030
safe on first install the user provides

94
00:03:38,830 --> 00:03:41,650
their name and phone number to the

95
00:03:40,030 --> 00:03:43,900
server in exchange they get an

96
00:03:41,650 --> 00:03:46,180
authentication token every two hours the

97
00:03:43,900 --> 00:03:48,100
app downloads a new temp ID and this is

98
00:03:46,180 --> 00:03:51,549
the idea that they distribute to two

99
00:03:48,100 --> 00:03:53,019
other phones nearby these temp IDs are

100
00:03:51,549 --> 00:03:55,480
encrypted by a key that's known only to

101
00:03:53,019 --> 00:03:58,120
the server and once decrypted they map

102
00:03:55,480 --> 00:04:00,220
back to that user's record in the

103
00:03:58,120 --> 00:04:01,600
database we imagine unfortunate the

104
00:04:00,220 --> 00:04:04,299
details of this encryption process are

105
00:04:01,600 --> 00:04:06,100
not known and this would be a really

106
00:04:04,299 --> 00:04:07,660
good thing to have access to and

107
00:04:06,100 --> 00:04:10,810
understand more about how the silents

108
00:04:07,660 --> 00:04:12,700
system works once a user test positive

109
00:04:10,810 --> 00:04:14,709
any temp ID recorded by that device

110
00:04:12,700 --> 00:04:17,108
uniquely identifies the positive contact

111
00:04:14,709 --> 00:04:18,970
a possible contact I should say so the

112
00:04:17,108 --> 00:04:21,010
full database of recorded temp IDs is

113
00:04:18,970 --> 00:04:22,810
then uploaded to the server the server

114
00:04:21,010 --> 00:04:24,340
can then decrypt these temp IDs and turn

115
00:04:22,810 --> 00:04:26,800
them into name and foreign records this

116
00:04:24,340 --> 00:04:30,549
data set of name and phone encounters

117
00:04:26,800 --> 00:04:32,830
is analyzed by contact tracer in

118
00:04:30,550 --> 00:04:34,690
contrast the Apple Google exposure

119
00:04:32,830 --> 00:04:37,628
notification API which I'm just going to

120
00:04:34,690 --> 00:04:40,270
call the exposure notification API has a

121
00:04:37,629 --> 00:04:43,000
process where no initial registration

122
00:04:40,270 --> 00:04:48,818
process happens and no PII is collected

123
00:04:43,000 --> 00:04:50,319
from the user but every day the device

124
00:04:48,819 --> 00:04:52,479
cryptographically generates a temporary

125
00:04:50,319 --> 00:04:53,740
exposure key this is used throughout the

126
00:04:52,479 --> 00:04:55,330
day to generate further rolling

127
00:04:53,740 --> 00:04:57,069
proximity identifies them these are the

128
00:04:55,330 --> 00:04:58,900
things that are broadcast nearby devices

129
00:04:57,069 --> 00:05:00,430
but the key thing is that if you know

130
00:04:58,900 --> 00:05:03,250
the temporary exposure key you can

131
00:05:00,430 --> 00:05:04,719
generate all of the rolling proximity

132
00:05:03,250 --> 00:05:07,360
identifiers that would be distributed by

133
00:05:04,719 --> 00:05:08,680
that phone in that day and so this is

134
00:05:07,360 --> 00:05:12,909
what happens when you test positive you

135
00:05:08,680 --> 00:05:15,430
upload to a central server the last 14

136
00:05:12,909 --> 00:05:16,930
days of exposure keys and then the

137
00:05:15,430 --> 00:05:18,699
central server just distributes those

138
00:05:16,930 --> 00:05:20,199
two keys to other devices it doesn't

139
00:05:18,699 --> 00:05:22,780
analyze them in any way it just it just

140
00:05:20,199 --> 00:05:25,599
shares them and then of all devices are

141
00:05:22,780 --> 00:05:27,250
constantly downloading this set of keys

142
00:05:25,599 --> 00:05:29,440
and then they use that to check if any

143
00:05:27,250 --> 00:05:31,569
of the generated proximity identifies

144
00:05:29,440 --> 00:05:33,240
match records in their local database

145
00:05:31,569 --> 00:05:36,159
and then they show a notification

146
00:05:33,240 --> 00:05:37,779
optionally the user can then upload that

147
00:05:36,159 --> 00:05:43,389
notification to the server to initiate a

148
00:05:37,779 --> 00:05:45,069
or more hands-on contact processing so

149
00:05:43,389 --> 00:05:48,009
the fundamental goal here is to do all

150
00:05:45,069 --> 00:05:50,110
that while not making any extra

151
00:05:48,009 --> 00:05:51,940
information to an attacker or an

152
00:05:50,110 --> 00:05:53,620
observer this is a difficult challenge

153
00:05:51,940 --> 00:05:55,090
of course because the whole goal here is

154
00:05:53,620 --> 00:06:00,159
to exchange contact information with

155
00:05:55,090 --> 00:06:02,560
other users so one simple example that

156
00:06:00,159 --> 00:06:04,860
we need to watch out for is can I

157
00:06:02,560 --> 00:06:08,620
identify the same device multiple times

158
00:06:04,860 --> 00:06:10,779
so in this case we have cat unicorn and

159
00:06:08,620 --> 00:06:14,529
frog and we observe them at some place

160
00:06:10,779 --> 00:06:18,219
in time location one time t1 and then

161
00:06:14,529 --> 00:06:20,409
some point later if we can identify the

162
00:06:18,219 --> 00:06:21,879
same ID again so this the unicorn is

163
00:06:20,409 --> 00:06:24,879
still broadcasting the same identifier

164
00:06:21,879 --> 00:06:26,250
we know that's the same phone so it's

165
00:06:24,879 --> 00:06:29,800
very important that nothing that you

166
00:06:26,250 --> 00:06:31,830
leak from the from the protocol stays

167
00:06:29,800 --> 00:06:34,150
constant over longer periods of time and

168
00:06:31,830 --> 00:06:36,219
similarly if we go back to that original

169
00:06:34,150 --> 00:06:38,380
location at a time 3 a different time

170
00:06:36,219 --> 00:06:40,270
later and we don't see the unicorn in

171
00:06:38,380 --> 00:06:41,710
the cat we do see the frog and the

172
00:06:40,270 --> 00:06:43,750
still has the same identifier that we

173
00:06:41,710 --> 00:06:45,219
know who's home and who is not we can

174
00:06:43,750 --> 00:06:50,560
track when people come and go from this

175
00:06:45,220 --> 00:06:52,030
from this location additionally if you

176
00:06:50,560 --> 00:06:54,520
have more than one identifier that you

177
00:06:52,030 --> 00:06:56,380
leak even if they both have short life

178
00:06:54,520 --> 00:06:59,650
times they need to both change on the

179
00:06:56,380 --> 00:07:01,270
same intervals so in this case we've

180
00:06:59,650 --> 00:07:04,210
seen two different identifiers from this

181
00:07:01,270 --> 00:07:06,490
device a one and the a identifier in the

182
00:07:04,210 --> 00:07:08,409
B identifier and if a change is well B

183
00:07:06,490 --> 00:07:11,760
stays the same then we can use BB to

184
00:07:08,410 --> 00:07:11,760
link a and vice-versa

185
00:07:12,610 --> 00:07:16,210
we can even do that with a single

186
00:07:14,080 --> 00:07:19,659
identifier over time because if we only

187
00:07:16,210 --> 00:07:22,419
see one user's ID change at a time then

188
00:07:19,660 --> 00:07:24,550
we hope we deduct we deduce that there

189
00:07:22,420 --> 00:07:26,860
were the one that changed and so we can

190
00:07:24,550 --> 00:07:28,870
we can link them together and then if we

191
00:07:26,860 --> 00:07:30,880
even have a weakly identifiable piece of

192
00:07:28,870 --> 00:07:33,100
information like maybe which phone model

193
00:07:30,880 --> 00:07:34,659
they're running then then we can

194
00:07:33,100 --> 00:07:36,460
probabilistically say well they both

195
00:07:34,660 --> 00:07:38,020
change at the same time but one was on

196
00:07:36,460 --> 00:07:40,539
an old phone and one was on a new phone

197
00:07:38,020 --> 00:07:41,740
and we can tell even that their IDs

198
00:07:40,540 --> 00:07:44,170
changed it they're in fact still the

199
00:07:41,740 --> 00:07:48,520
same person so our goal is to avoid

200
00:07:44,170 --> 00:07:51,820
these sort of problems very quickly a

201
00:07:48,520 --> 00:07:53,200
overview of how Bluetooth works because

202
00:07:51,820 --> 00:07:55,360
it'll be relevant to the issues that

203
00:07:53,200 --> 00:07:57,039
were going to discuss in this F so

204
00:07:55,360 --> 00:07:59,110
Bluetooth Low Energy was introduced as

205
00:07:57,040 --> 00:08:02,530
part of the Bluetooth 4.0 specification

206
00:07:59,110 --> 00:08:05,410
it coexists with classic Bluetooth and

207
00:08:02,530 --> 00:08:07,450
shares the same 2.4 gigahertz osm

208
00:08:05,410 --> 00:08:10,810
frequency buts otherwise completely

209
00:08:07,450 --> 00:08:14,229
different from them from the radio up in

210
00:08:10,810 --> 00:08:18,130
ble the 2.4 gig band is broken up into

211
00:08:14,230 --> 00:08:19,810
42 megahertz channels it uses G FSK

212
00:08:18,130 --> 00:08:20,950
modulation which is Gaussian frequency

213
00:08:19,810 --> 00:08:22,660
shift keying it's basically a digital

214
00:08:20,950 --> 00:08:24,640
equivalent to FM radio in fact this

215
00:08:22,660 --> 00:08:27,070
whole thing works just like having 40 FM

216
00:08:24,640 --> 00:08:29,020
radio channels it's short range and

217
00:08:27,070 --> 00:08:30,700
devices are identified by their six map

218
00:08:29,020 --> 00:08:34,360
six by MAC address which is much like

219
00:08:30,700 --> 00:08:36,159
Ethernet and is this Bluetooth MAC

220
00:08:34,360 --> 00:08:39,610
address where we see the same see our

221
00:08:36,159 --> 00:08:41,230
first identifiers like Ethernet

222
00:08:39,610 --> 00:08:42,610
Bluetooth devices have fixed MAC

223
00:08:41,230 --> 00:08:44,530
addresses and these are assigned by a

224
00:08:42,610 --> 00:08:47,290
central authority this is known as the

225
00:08:44,530 --> 00:08:48,910
public or the identity address and this

226
00:08:47,290 --> 00:08:50,349
would be a disaster for privacy because

227
00:08:48,910 --> 00:08:51,400
we just see the same device by it same

228
00:08:50,350 --> 00:08:54,170
MAC address all the time

229
00:08:51,400 --> 00:08:56,600
but fortunately bluetooth has

230
00:08:54,170 --> 00:08:58,280
an alternate address that you can use

231
00:08:56,600 --> 00:09:00,320
called your random private resolvable

232
00:08:58,280 --> 00:09:02,260
address and this is cryptographically

233
00:09:00,320 --> 00:09:05,330
generated from your identity address

234
00:09:02,260 --> 00:09:08,960
using a key known as the IR K identity

235
00:09:05,330 --> 00:09:10,940
resolving key and basically if you know

236
00:09:08,960 --> 00:09:13,370
the identity resolving key then you can

237
00:09:10,940 --> 00:09:17,930
turn a public address into a into a

238
00:09:13,370 --> 00:09:20,300
private dress and vice-versa and this

239
00:09:17,930 --> 00:09:21,859
process is what pairing and bonding is

240
00:09:20,300 --> 00:09:24,410
about so when I pair two devices

241
00:09:21,860 --> 00:09:26,900
together they exchange their resolving

242
00:09:24,410 --> 00:09:28,790
keys and then in the future any random

243
00:09:26,900 --> 00:09:30,590
address that I see from that device can

244
00:09:28,790 --> 00:09:32,599
be turned back into its identity address

245
00:09:30,590 --> 00:09:35,570
and so that's how my head phones

246
00:09:32,600 --> 00:09:38,780
remember my my phone or something like

247
00:09:35,570 --> 00:09:40,880
that what we see with with covert safe

248
00:09:38,780 --> 00:09:42,199
is that it's not it's not it doesn't do

249
00:09:40,880 --> 00:09:45,350
pairing in bonding it's just it's just a

250
00:09:42,200 --> 00:09:47,300
quick exchange of data with no intent of

251
00:09:45,350 --> 00:09:48,560
making a future connection so it

252
00:09:47,300 --> 00:09:51,650
entirely operates with the random

253
00:09:48,560 --> 00:09:53,839
resolvable private address and so

254
00:09:51,650 --> 00:09:59,180
there's no long-term tracking here but

255
00:09:53,840 --> 00:10:00,620
it's important that the MAC address even

256
00:09:59,180 --> 00:10:02,449
though it is for a short amount of time

257
00:10:00,620 --> 00:10:04,640
it doesn't change is the same interval

258
00:10:02,450 --> 00:10:05,900
as as other identifiers as we'll see so

259
00:10:04,640 --> 00:10:09,230
it can actually be used to link those

260
00:10:05,900 --> 00:10:12,590
identifiers together in blue if there

261
00:10:09,230 --> 00:10:15,760
are four roles and devices act in some

262
00:10:12,590 --> 00:10:18,800
subset of these four available roles

263
00:10:15,760 --> 00:10:20,630
broadcasters and short undirected

264
00:10:18,800 --> 00:10:22,479
advertising payloads round-robin on

265
00:10:20,630 --> 00:10:24,650
three specially reserved channels

266
00:10:22,480 --> 00:10:25,970
observers constantly rotate between

267
00:10:24,650 --> 00:10:27,439
these three channels and listen for

268
00:10:25,970 --> 00:10:30,260
these payloads allowing them to discover

269
00:10:27,440 --> 00:10:32,240
other devices apps can do both of these

270
00:10:30,260 --> 00:10:32,569
roles while in the background on iOS and

271
00:10:32,240 --> 00:10:34,910
Android

272
00:10:32,570 --> 00:10:36,560
however the app level API for the

273
00:10:34,910 --> 00:10:40,760
broadcaster role is severely restricted

274
00:10:36,560 --> 00:10:42,410
on iOS but only while backgrounded and

275
00:10:40,760 --> 00:10:45,350
so the unfortunately this prevents its

276
00:10:42,410 --> 00:10:47,150
use for contact tracing apps but the

277
00:10:45,350 --> 00:10:48,410
Apple Google and expression notification

278
00:10:47,150 --> 00:10:51,650
API gets around this because it's a

279
00:10:48,410 --> 00:10:53,569
system app and can use these roles

280
00:10:51,650 --> 00:10:54,860
entirely for exchanging of data and so

281
00:10:53,570 --> 00:10:57,820
that is healthy the Apple Google

282
00:10:54,860 --> 00:10:59,980
notification API exchanges data

283
00:10:57,820 --> 00:11:01,810
so then finally we have additional roles

284
00:10:59,980 --> 00:11:03,850
peripheral and central so peripheral is

285
00:11:01,810 --> 00:11:06,099
a device that can be connected to and

286
00:11:03,850 --> 00:11:08,860
advertises its presence via the

287
00:11:06,100 --> 00:11:10,150
broadcaster and central uses the

288
00:11:08,860 --> 00:11:11,770
observer role to discover other

289
00:11:10,150 --> 00:11:14,980
peripherals and then connects to a

290
00:11:11,770 --> 00:11:19,360
peripheral once connected you hop over

291
00:11:14,980 --> 00:11:21,430
the 37 remain channels and these two

292
00:11:19,360 --> 00:11:27,280
roles are unrestricted on Android and

293
00:11:21,430 --> 00:11:28,660
iOS even while back rounded so once the

294
00:11:27,280 --> 00:11:30,430
connections been established between a

295
00:11:28,660 --> 00:11:31,900
peripheral and central they exchange

296
00:11:30,430 --> 00:11:34,420
data everything called the generic

297
00:11:31,900 --> 00:11:39,280
attribute profile which is a client

298
00:11:34,420 --> 00:11:40,959
server where the server exposes a set of

299
00:11:39,280 --> 00:11:44,650
services each containing characteristics

300
00:11:40,960 --> 00:11:46,150
with metadata in the descriptors think

301
00:11:44,650 --> 00:11:47,800
of a server is the way that the features

302
00:11:46,150 --> 00:11:48,730
of the device are exposed so for example

303
00:11:47,800 --> 00:11:50,890
a temperature sensor would have a

304
00:11:48,730 --> 00:11:52,810
environmental sensing service and it

305
00:11:50,890 --> 00:11:56,949
would have a temperature or humidity or

306
00:11:52,810 --> 00:12:00,400
wind direction characteristic and so

307
00:11:56,950 --> 00:12:02,440
it's via GATT that the non-apple Google

308
00:12:00,400 --> 00:12:04,449
contact tracing apps work they expect

309
00:12:02,440 --> 00:12:11,650
exchange data over a characteristic

310
00:12:04,450 --> 00:12:13,000
value so at this point that's about all

311
00:12:11,650 --> 00:12:15,550
on you I'm going to do this

312
00:12:13,000 --> 00:12:17,020
professionally but but there's not much

313
00:12:15,550 --> 00:12:18,160
that much water Bluetooth mostly it's

314
00:12:17,020 --> 00:12:21,130
about figuring out how the API is

315
00:12:18,160 --> 00:12:23,290
working and using that in a useful way

316
00:12:21,130 --> 00:12:24,939
and so when Travis F was released I

317
00:12:23,290 --> 00:12:26,170
thought I'd take a look and figure out

318
00:12:24,940 --> 00:12:29,440
how the payloads work and things like

319
00:12:26,170 --> 00:12:30,550
that and so the only if you have one

320
00:12:29,440 --> 00:12:31,900
takeaway from this talk and you're

321
00:12:30,550 --> 00:12:33,040
interested in Bluetooth the tool that

322
00:12:31,900 --> 00:12:35,439
you need to install in your phone is

323
00:12:33,040 --> 00:12:37,680
called NRF connect it's from Nordic

324
00:12:35,440 --> 00:12:41,110
semiconductor who a big player in the

325
00:12:37,680 --> 00:12:43,569
chipset market for Bluetooth and so this

326
00:12:41,110 --> 00:12:45,840
app lets you scan for nearby devices so

327
00:12:43,570 --> 00:12:48,130
it's the the observer role looking for

328
00:12:45,840 --> 00:12:51,010
broadcasters and we see here I can see

329
00:12:48,130 --> 00:12:54,160
four devices and it it knows by their

330
00:12:51,010 --> 00:12:55,930
MAC address what what because of the

331
00:12:54,160 --> 00:12:57,400
central authority what make they are but

332
00:12:55,930 --> 00:12:58,839
it's actually um for the top and the

333
00:12:57,400 --> 00:13:02,920
bottom device it doesn't know so that's

334
00:12:58,840 --> 00:13:04,390
why it's got the Bluetooth logo but

335
00:13:02,920 --> 00:13:06,189
there is it one of these devices I

336
00:13:04,390 --> 00:13:07,840
promise you is is a Android device

337
00:13:06,190 --> 00:13:09,190
running covert safe and we know it's

338
00:13:07,840 --> 00:13:10,730
running covert safe because normally

339
00:13:09,190 --> 00:13:12,650
Android devices are actually in

340
00:13:10,730 --> 00:13:15,710
to bluetooth they don't they don't

341
00:13:12,650 --> 00:13:17,420
advertise so already already our

342
00:13:15,710 --> 00:13:22,130
presence is being made or made made

343
00:13:17,420 --> 00:13:25,910
visible so I'm going to expand the the

344
00:13:22,130 --> 00:13:27,950
Android device here and so the MAC

345
00:13:25,910 --> 00:13:30,650
address five five three II and we can

346
00:13:27,950 --> 00:13:31,790
see it's advertising payload so the kind

347
00:13:30,650 --> 00:13:33,079
of weird thing here is it's telling us

348
00:13:31,790 --> 00:13:34,880
that it's made by Withings who

349
00:13:33,080 --> 00:13:36,710
manufacture like smart scales and health

350
00:13:34,880 --> 00:13:39,560
and fitness devices and it's got this

351
00:13:36,710 --> 00:13:42,980
extra data attached to the to the

352
00:13:39,560 --> 00:13:45,069
manufacturer we'd leave hex three one

353
00:13:42,980 --> 00:13:48,380
three zero three three it's kind of all

354
00:13:45,070 --> 00:13:51,560
ascii hex 0.029

355
00:13:48,380 --> 00:13:52,880
8f range it's kind of weird and then it

356
00:13:51,560 --> 00:13:55,280
also has this service unit and so the

357
00:13:52,880 --> 00:13:57,439
service identify is what gets service

358
00:13:55,280 --> 00:14:00,589
this server will expose when we connect

359
00:13:57,440 --> 00:14:06,080
to it and if you look up the

360
00:14:00,590 --> 00:14:09,620
specification b8 to a be etc is um is

361
00:14:06,080 --> 00:14:13,250
the covert safe service so we're going

362
00:14:09,620 --> 00:14:16,300
to connect to this device and we'll see

363
00:14:13,250 --> 00:14:18,140
the list of services that it supports

364
00:14:16,300 --> 00:14:19,729
NRF connect doesn't know what this

365
00:14:18,140 --> 00:14:23,990
service is but it'll show its

366
00:14:19,730 --> 00:14:25,670
characteristics and then we can issue a

367
00:14:23,990 --> 00:14:30,290
read for this for this characteristic

368
00:14:25,670 --> 00:14:31,490
value i've somewhat obscured the data

369
00:14:30,290 --> 00:14:34,120
here don't think it's that important

370
00:14:31,490 --> 00:14:36,230
that you can't see my my trace ID but

371
00:14:34,120 --> 00:14:38,810
this is what the the payload that's

372
00:14:36,230 --> 00:14:39,860
exchange by covert safe looks like and

373
00:14:38,810 --> 00:14:41,750
so the first thing they jumped out to me

374
00:14:39,860 --> 00:14:43,400
here and unfortunately this is a newer

375
00:14:41,750 --> 00:14:44,050
version of the protocol and it doesn't

376
00:14:43,400 --> 00:14:48,380
have this anymore

377
00:14:44,050 --> 00:14:49,790
we got fixed but the first thing is i'm

378
00:14:48,380 --> 00:14:52,790
down to me was to see my phone model

379
00:14:49,790 --> 00:14:54,860
name in this in this payload and so the

380
00:14:52,790 --> 00:14:57,050
phone model name is important because I

381
00:14:54,860 --> 00:14:59,390
mean I've got a pixel to it's not that

382
00:14:57,050 --> 00:15:01,420
uncommon but it's not that common but

383
00:14:59,390 --> 00:15:03,650
some people have really unique finds and

384
00:15:01,420 --> 00:15:07,010
so this is actually strongly identifying

385
00:15:03,650 --> 00:15:08,810
piece of information for example if if I

386
00:15:07,010 --> 00:15:10,400
on that site a building and I can

387
00:15:08,810 --> 00:15:11,989
identify the three different phones that

388
00:15:10,400 --> 00:15:14,870
are in there then at any point in the

389
00:15:11,990 --> 00:15:16,310
future I can tell you which of those

390
00:15:14,870 --> 00:15:18,770
three people are currently home or not

391
00:15:16,310 --> 00:15:20,449
home and and as we discussed earlier I

392
00:15:18,770 --> 00:15:23,319
can use this to link other identifiers

393
00:15:20,450 --> 00:15:23,320
together as well

394
00:15:23,649 --> 00:15:29,800
and but why is it here eventually

395
00:15:27,459 --> 00:15:31,268
tracked down the the specification from

396
00:15:29,800 --> 00:15:34,149
the Singapore app that this is based on

397
00:15:31,269 --> 00:15:36,519
and they use this to calibrate the radio

398
00:15:34,149 --> 00:15:39,040
signal strength which they use to make a

399
00:15:36,519 --> 00:15:40,660
distance calculation estimation but

400
00:15:39,040 --> 00:15:44,349
unfortunately this just doesn't work

401
00:15:40,660 --> 00:15:46,949
the this method of calculating distance

402
00:15:44,350 --> 00:15:49,899
from from signal strength is is highly

403
00:15:46,949 --> 00:15:51,279
inaccurate and my own experiments show

404
00:15:49,899 --> 00:15:52,809
that I can just turn my phone upside

405
00:15:51,279 --> 00:15:54,519
down on the table and make it look as if

406
00:15:52,809 --> 00:15:56,740
I have jumped you know to the other side

407
00:15:54,519 --> 00:15:58,569
of the room but remember that the

408
00:15:56,740 --> 00:16:00,610
official documentation for koban save

409
00:15:58,569 --> 00:16:03,849
says that the threshold is 1.5 meters

410
00:16:00,610 --> 00:16:05,819
for 15 minutes but by having the phone

411
00:16:03,850 --> 00:16:08,170
differently in my pocket I could be

412
00:16:05,819 --> 00:16:09,550
either either side of that threshold

413
00:16:08,170 --> 00:16:15,998
despite sitting across the table from

414
00:16:09,550 --> 00:16:17,949
somebody so what we have here is is that

415
00:16:15,999 --> 00:16:19,269
the temp ID is this is the idea that

416
00:16:17,949 --> 00:16:23,498
needs to change on a regular interval

417
00:16:19,269 --> 00:16:26,619
and the documentation said that this

418
00:16:23,499 --> 00:16:29,050
would change every two hours so let's

419
00:16:26,619 --> 00:16:31,329
test that so I work on micro Python in

420
00:16:29,050 --> 00:16:33,248
my day job and so that's the easiest

421
00:16:31,329 --> 00:16:36,069
bluetooth I know how to use because I'm

422
00:16:33,249 --> 00:16:39,610
familiar with it but it's quite easy to

423
00:16:36,069 --> 00:16:42,639
write a dual script to run on a on a dev

424
00:16:39,610 --> 00:16:45,939
board that they're constantly connected

425
00:16:42,639 --> 00:16:48,699
to it to my phone recorded that the the

426
00:16:45,939 --> 00:16:50,199
resolvable public address recorded that

427
00:16:48,699 --> 00:16:52,899
manufacturer data that we saw earlier

428
00:16:50,199 --> 00:16:54,550
and the device model and the temp ID

429
00:16:52,899 --> 00:16:56,220
payload so this is an old temp ID

430
00:16:54,550 --> 00:17:00,219
payload from them from the first version

431
00:16:56,220 --> 00:17:01,829
and so this is at 10:29 p.m. on the on

432
00:17:00,220 --> 00:17:07,689
the night that covert safe was launched

433
00:17:01,829 --> 00:17:10,658
fun Sunday night and all good so we try

434
00:17:07,689 --> 00:17:14,260
again two minutes later as we expect the

435
00:17:10,659 --> 00:17:18,850
same the same information right but and

436
00:17:14,260 --> 00:17:20,949
again 10:44 10:59 and then very excited

437
00:17:18,849 --> 00:17:22,539
we're now two hours later one at one

438
00:17:20,949 --> 00:17:27,250
minute away from the from the expected

439
00:17:22,539 --> 00:17:30,129
rollover still the same payload ah still

440
00:17:27,250 --> 00:17:31,809
the same payload that's a problem this

441
00:17:30,130 --> 00:17:33,490
is obviously not rolling over on a

442
00:17:31,809 --> 00:17:35,860
two-hour interval as the as the

443
00:17:33,490 --> 00:17:37,570
specification said

444
00:17:35,860 --> 00:17:38,919
and it's worth noting that's two hours

445
00:17:37,570 --> 00:17:41,500
in Australia but the protocol actually

446
00:17:38,920 --> 00:17:42,700
says it's supposed to be 15 minutes for

447
00:17:41,500 --> 00:17:44,890
the obvious reason of keeping the

448
00:17:42,700 --> 00:17:47,710
identity identification interval as

449
00:17:44,890 --> 00:17:51,730
short as possible so again a bit later

450
00:17:47,710 --> 00:17:54,100
at 114 and then again at 821 in the

451
00:17:51,730 --> 00:17:55,570
morning so something's clearly not

452
00:17:54,100 --> 00:17:58,270
working here and then the phone is Rio

453
00:17:55,570 --> 00:18:01,389
Tinto fireball so I rebooted the phone a

454
00:17:58,270 --> 00:18:03,639
bit later and as we see the identifier

455
00:18:01,390 --> 00:18:05,140
now changes and interestingly so does

456
00:18:03,640 --> 00:18:07,510
that manufacturer data so if we go back

457
00:18:05,140 --> 00:18:14,140
and forward both both pieces of data

458
00:18:07,510 --> 00:18:15,429
changed so yeah at this point it's like

459
00:18:14,140 --> 00:18:19,480
well there's something not cook

460
00:18:15,429 --> 00:18:21,580
something not right here but while we're

461
00:18:19,480 --> 00:18:23,919
also looking at in RF Connect earlier we

462
00:18:21,580 --> 00:18:25,149
saw in addition to the covert safe

463
00:18:23,919 --> 00:18:28,000
service there were these other services

464
00:18:25,150 --> 00:18:29,410
and one of the fields that you get out

465
00:18:28,000 --> 00:18:31,299
of these other services is the device

466
00:18:29,410 --> 00:18:32,799
name and so here it says pixel 2 which

467
00:18:31,299 --> 00:18:34,120
is the same as the phone model but it

468
00:18:32,799 --> 00:18:36,580
turns out this is actually controlled by

469
00:18:34,120 --> 00:18:39,309
the user and so a lot of people have

470
00:18:36,580 --> 00:18:41,949
this set to for example Jim's pixel 2 or

471
00:18:39,309 --> 00:18:43,750
my awesome new phone because this is the

472
00:18:41,950 --> 00:18:47,740
identifier that shows up in your cast

473
00:18:43,750 --> 00:18:48,970
area or something like that and so it's

474
00:18:47,740 --> 00:18:52,390
worse than the phone model because it's

475
00:18:48,970 --> 00:18:55,090
actually potentially name identifying

476
00:18:52,390 --> 00:18:56,770
but it's also if the users set it to

477
00:18:55,090 --> 00:18:59,110
anything other than the device model

478
00:18:56,770 --> 00:19:03,879
then it is potentially completely unique

479
00:18:59,110 --> 00:19:05,168
and and fixed on iphone the story's a

480
00:19:03,880 --> 00:19:07,900
bit different and I encourage everybody

481
00:19:05,169 --> 00:19:12,970
if you haven't seen it to read this

482
00:19:07,900 --> 00:19:14,230
Apple ble research because iPhones do

483
00:19:12,970 --> 00:19:18,669
actually give away a lot of additional

484
00:19:14,230 --> 00:19:20,740
information as well so let's look into

485
00:19:18,669 --> 00:19:24,429
what's why these identifiers are not

486
00:19:20,740 --> 00:19:25,750
changing it's clearly a bug here so at

487
00:19:24,429 --> 00:19:28,360
this stage the source code had not been

488
00:19:25,750 --> 00:19:30,370
released but the source code for the

489
00:19:28,360 --> 00:19:33,159
Singapore out that this is based on had

490
00:19:30,370 --> 00:19:35,409
been released so the first place to look

491
00:19:33,160 --> 00:19:37,390
is the manufacturer data why why are

492
00:19:35,410 --> 00:19:39,450
those three additional ascii looking

493
00:19:37,390 --> 00:19:43,059
bytes ask your hex looking bytes

494
00:19:39,450 --> 00:19:46,510
appended to the manufacturer payload and

495
00:19:43,059 --> 00:19:49,750
so i found the code that starts the

496
00:19:46,510 --> 00:19:52,120
advertising process amazingly that

497
00:19:49,750 --> 00:19:53,680
on the first line there is one of the

498
00:19:52,120 --> 00:19:58,239
only comments in this entire code base

499
00:19:53,680 --> 00:19:59,770
and this all looks fine every time we

500
00:19:58,240 --> 00:20:01,300
start advertising and I've checked in

501
00:19:59,770 --> 00:20:05,920
other places that this happens every few

502
00:20:01,300 --> 00:20:07,270
minutes we generate a new data payload

503
00:20:05,920 --> 00:20:09,460
so first of all we generate some random

504
00:20:07,270 --> 00:20:11,170
data and that is those three bytes that

505
00:20:09,460 --> 00:20:12,550
we see it's a pretty strange way of

506
00:20:11,170 --> 00:20:14,620
generating three bytes of random data

507
00:20:12,550 --> 00:20:17,800
but it actually explains why there hex

508
00:20:14,620 --> 00:20:19,500
values because it's a random uard that's

509
00:20:17,800 --> 00:20:22,270
been converted to a string totally a

510
00:20:19,500 --> 00:20:24,460
string of hex values we take off a few

511
00:20:22,270 --> 00:20:25,930
bytes off the end of it and then we

512
00:20:24,460 --> 00:20:27,520
append that into the manufacturing data

513
00:20:25,930 --> 00:20:30,310
and this thousand and twenty three in

514
00:20:27,520 --> 00:20:33,150
the middle is is Withings as an effector

515
00:20:30,310 --> 00:20:37,570
ID I have no idea why they're using that

516
00:20:33,150 --> 00:20:41,470
so that'll that'll looks fine we should

517
00:20:37,570 --> 00:20:43,330
be getting a new identifier but instead

518
00:20:41,470 --> 00:20:46,150
so I disassembled the Australian app and

519
00:20:43,330 --> 00:20:47,320
this is the exact same code this is

520
00:20:46,150 --> 00:20:49,570
actually the the when the open source

521
00:20:47,320 --> 00:20:51,580
was released instead but the disassembly

522
00:20:49,570 --> 00:20:53,260
showed the same thing but notice the

523
00:20:51,580 --> 00:20:55,899
difference is that where we used to just

524
00:20:53,260 --> 00:21:00,100
always generate data we now only do it

525
00:20:55,900 --> 00:21:01,420
if data is null I doubt if and data is a

526
00:21:00,100 --> 00:21:03,040
member of this class and that class

527
00:21:01,420 --> 00:21:05,830
lives for the last time lifetime of the

528
00:21:03,040 --> 00:21:08,020
app so this code has been changed

529
00:21:05,830 --> 00:21:14,290
somehow to always read you always use

530
00:21:08,020 --> 00:21:15,670
the same identifier I assume somebody

531
00:21:14,290 --> 00:21:17,649
thought this was an optimization or

532
00:21:15,670 --> 00:21:19,870
maybe this was fixed in the Singapore

533
00:21:17,650 --> 00:21:21,940
code after the Australian code was

534
00:21:19,870 --> 00:21:24,760
forked or something like that but but

535
00:21:21,940 --> 00:21:27,360
that's what's going on and then the next

536
00:21:24,760 --> 00:21:29,890
thing is why is the temp ID not changing

537
00:21:27,360 --> 00:21:33,729
so this is the code that handles a read

538
00:21:29,890 --> 00:21:37,900
of that characteristic value so we get

539
00:21:33,730 --> 00:21:40,030
an incoming read request and we check

540
00:21:37,900 --> 00:21:42,550
that we have a valid temp ID which is

541
00:21:40,030 --> 00:21:44,620
the checking if the context is valid and

542
00:21:42,550 --> 00:21:47,350
then there's this map a read payload

543
00:21:44,620 --> 00:21:49,000
mouth of caches the payload by the

544
00:21:47,350 --> 00:21:49,929
address and this is pretty strange

545
00:21:49,000 --> 00:21:51,730
because what it actually does is

546
00:21:49,930 --> 00:21:56,890
completely recompute the payload and

547
00:21:51,730 --> 00:21:58,840
then try and get an entry from the cache

548
00:21:56,890 --> 00:22:00,850
and if it's not there at stores there's

549
00:21:58,840 --> 00:22:02,080
new value but if there is an entry then

550
00:22:00,850 --> 00:22:03,049
it throws away the new value that it's

551
00:22:02,080 --> 00:22:04,759
just generated and you

552
00:22:03,049 --> 00:22:07,759
is the cash value instead and this cash

553
00:22:04,759 --> 00:22:09,350
is done by the device address and then

554
00:22:07,759 --> 00:22:11,210
finally when a right happens later when

555
00:22:09,350 --> 00:22:14,090
we write back our own temp ID to the to

556
00:22:11,210 --> 00:22:16,129
the device we call save data saved and

557
00:22:14,090 --> 00:22:18,980
then saved out of a removes this entry

558
00:22:16,129 --> 00:22:21,408
from the cache and so this is the hint

559
00:22:18,980 --> 00:22:23,389
is that although phones are always used

560
00:22:21,409 --> 00:22:25,489
they're resolvable random private

561
00:22:23,389 --> 00:22:27,408
address my little dev board running

562
00:22:25,489 --> 00:22:27,769
market Python is actually using a fixed

563
00:22:27,409 --> 00:22:29,869
address

564
00:22:27,769 --> 00:22:34,850
so almost completely by accident I found

565
00:22:29,869 --> 00:22:36,738
this and immediately if I change my

566
00:22:34,850 --> 00:22:39,230
device to use a random address then then

567
00:22:36,739 --> 00:22:41,210
the problem went away but an attacker

568
00:22:39,230 --> 00:22:43,009
can can can choose that and then use

569
00:22:41,210 --> 00:22:45,259
whatever address they like so they can

570
00:22:43,009 --> 00:22:46,730
take advantage of this so the code was

571
00:22:45,259 --> 00:22:48,710
working in terms of fetching new temp

572
00:22:46,730 --> 00:22:50,299
IDs but but an attacker had a way to

573
00:22:48,710 --> 00:22:52,909
control it and make it always see the

574
00:22:50,299 --> 00:22:54,230
same one and it's worth noting that an

575
00:22:52,909 --> 00:22:57,739
attacker doesn't have to be one device

576
00:22:54,230 --> 00:23:01,009
an attacker can be you know a whole

577
00:22:57,739 --> 00:23:02,690
range of $5 devices all running blood

578
00:23:01,009 --> 00:23:04,730
hit scanners and spread out over a

579
00:23:02,690 --> 00:23:06,139
number of locations and they can all

580
00:23:04,730 --> 00:23:08,269
share the same MAC address if they want

581
00:23:06,139 --> 00:23:12,738
and they shouldn't but they attack I can

582
00:23:08,269 --> 00:23:16,429
do that so this is I guess where it got

583
00:23:12,739 --> 00:23:17,359
interesting I tried to figure out what

584
00:23:16,429 --> 00:23:19,970
to do about this

585
00:23:17,359 --> 00:23:22,340
because because this felt important to

586
00:23:19,970 --> 00:23:24,879
me but with no previous background in

587
00:23:22,340 --> 00:23:26,809
security I didn't know where to start

588
00:23:24,879 --> 00:23:30,859
this was a difficult and frustrating

589
00:23:26,809 --> 00:23:32,690
process I started looking for official

590
00:23:30,859 --> 00:23:34,100
and unofficial contacts I must have

591
00:23:32,690 --> 00:23:37,100
written the same email about 10 times

592
00:23:34,100 --> 00:23:38,330
before I wrote a doc in Google Docs and

593
00:23:37,100 --> 00:23:41,748
started sharing that with anybody I

594
00:23:38,330 --> 00:23:43,489
could find anyone vaguely connected to

595
00:23:41,749 --> 00:23:45,919
government ité cybersecurity or the

596
00:23:43,489 --> 00:23:47,659
covert safe project friends of friends

597
00:23:45,919 --> 00:23:49,190
who I knew worked at at companies that

598
00:23:47,659 --> 00:23:54,470
were associated with this project and

599
00:23:49,190 --> 00:23:56,749
things like that and nothing like this

600
00:23:54,470 --> 00:24:01,249
was this was astounding

601
00:23:56,749 --> 00:24:02,960
like odo just even imagined to reply

602
00:24:01,249 --> 00:24:03,859
from the official addresses but just

603
00:24:02,960 --> 00:24:07,850
just nothing

604
00:24:03,859 --> 00:24:09,499
it took me seven days and in a very

605
00:24:07,850 --> 00:24:11,178
direct contact with through someone who

606
00:24:09,499 --> 00:24:14,660
knew someone who worked at the senior of

607
00:24:11,179 --> 00:24:18,410
the DTA and I finally got

608
00:24:14,660 --> 00:24:19,820
an SMS and then you know I made them

609
00:24:18,410 --> 00:24:21,710
aware that I wanted to talk about these

610
00:24:19,820 --> 00:24:23,480
issues and whatever and then that

611
00:24:21,710 --> 00:24:25,250
evening I spoke to them on the phone and

612
00:24:23,480 --> 00:24:26,450
they still hadn't read the document but

613
00:24:25,250 --> 00:24:28,430
then the next day confirmed that their

614
00:24:26,450 --> 00:24:29,180
team had received the document several

615
00:24:28,430 --> 00:24:31,880
days earlier

616
00:24:29,180 --> 00:24:33,320
so it doesn't it didn't feel to me that

617
00:24:31,880 --> 00:24:35,900
I mean they had other priorities right

618
00:24:33,320 --> 00:24:37,460
they shipped an app in in three weeks or

619
00:24:35,900 --> 00:24:39,590
you know there's a small number of

620
00:24:37,460 --> 00:24:42,110
amount of time and then it must be very

621
00:24:39,590 --> 00:24:45,590
hard to triage reports on it and honor

622
00:24:42,110 --> 00:24:49,129
after a launch to you know the target of

623
00:24:45,590 --> 00:24:50,389
several million Australians but it

624
00:24:49,130 --> 00:24:55,640
didn't feel to me like these issues were

625
00:24:50,390 --> 00:24:57,980
serious and unfortunately I was excited

626
00:24:55,640 --> 00:25:00,290
when when a an update was released later

627
00:24:57,980 --> 00:25:03,140
that night but it only changed the

628
00:25:00,290 --> 00:25:04,670
graphics and the status icon not a

629
00:25:03,140 --> 00:25:06,920
single fixed with a bit Bluetooth

630
00:25:04,670 --> 00:25:08,570
protocol or any security stuff and then

631
00:25:06,920 --> 00:25:10,820
finally these issues were fixed ten days

632
00:25:08,570 --> 00:25:16,399
later so several weeks after after

633
00:25:10,820 --> 00:25:18,950
launch this this needs to be better so

634
00:25:16,400 --> 00:25:20,720
for next time I'm sure everybody who's

635
00:25:18,950 --> 00:25:23,960
in this this meetup knows this already

636
00:25:20,720 --> 00:25:27,020
but they needed to be a security contact

637
00:25:23,960 --> 00:25:29,210
at launch they did later add a security

638
00:25:27,020 --> 00:25:30,530
contact but it was called support at and

639
00:25:29,210 --> 00:25:32,240
so I think that was probably a little

640
00:25:30,530 --> 00:25:36,230
bit confusing but finally was changed to

641
00:25:32,240 --> 00:25:37,430
be security at private safe and the

642
00:25:36,230 --> 00:25:40,220
source code should have been released

643
00:25:37,430 --> 00:25:42,200
before the launch even for public

644
00:25:40,220 --> 00:25:44,750
analysis and these sort of bugs could

645
00:25:42,200 --> 00:25:45,830
have been found one of the most

646
00:25:44,750 --> 00:25:47,680
frustrating things for me over the past

647
00:25:45,830 --> 00:25:51,110
eight weeks has just been coordinating

648
00:25:47,680 --> 00:25:53,300
the bugs because I made a bit of a fuss

649
00:25:51,110 --> 00:25:55,040
at the start I became the person that

650
00:25:53,300 --> 00:25:56,480
people wrote to you so all sorts of

651
00:25:55,040 --> 00:25:58,310
random people have reached out to me to

652
00:25:56,480 --> 00:25:59,510
talk about bugs and covert safe and I've

653
00:25:58,310 --> 00:26:02,210
sort of been the one that's coordinated

654
00:25:59,510 --> 00:26:03,379
getting them investigated and getting to

655
00:26:02,210 --> 00:26:04,670
the bottom of the Bluetooth issues and

656
00:26:03,380 --> 00:26:06,830
stuff like that and then and then using

657
00:26:04,670 --> 00:26:09,650
the content that I'd made at ETA to get

658
00:26:06,830 --> 00:26:11,179
them looked out there should be an SLA

659
00:26:09,650 --> 00:26:12,830
on responses like if you send an email

660
00:26:11,180 --> 00:26:14,900
to security yet you should get an email

661
00:26:12,830 --> 00:26:16,550
in 24 hours and they should start

662
00:26:14,900 --> 00:26:18,460
talking to you about disclosure and and

663
00:26:16,550 --> 00:26:22,870
although you know sensible things that

664
00:26:18,460 --> 00:26:24,800
happen in a in a security incident

665
00:26:22,870 --> 00:26:26,929
service there should be a bug grantee

666
00:26:24,800 --> 00:26:28,430
and then services like poke cry out or

667
00:26:26,930 --> 00:26:29,930
disclose or

668
00:26:28,430 --> 00:26:33,230
hacker one I think the other one is

669
00:26:29,930 --> 00:26:35,000
golden and from the start this app

670
00:26:33,230 --> 00:26:36,110
should have engaged with experts there

671
00:26:35,000 --> 00:26:38,600
are there are amazing people in

672
00:26:36,110 --> 00:26:42,110
Australia you know people over NASA

673
00:26:38,600 --> 00:26:43,790
Teague who you know are so you know

674
00:26:42,110 --> 00:26:47,209
cryptography and security experts and

675
00:26:43,790 --> 00:26:48,770
things like that but also that other

676
00:26:47,210 --> 00:26:50,300
things like like forming a community and

677
00:26:48,770 --> 00:26:51,680
how to engage with open-source and stuff

678
00:26:50,300 --> 00:26:52,940
like that there are there are really

679
00:26:51,680 --> 00:26:56,420
great people they prepared that they

680
00:26:52,940 --> 00:26:57,650
could have spoken to and and people with

681
00:26:56,420 --> 00:27:00,260
budget experience people with a lot more

682
00:26:57,650 --> 00:27:03,740
Bluetooth experience than me who who

683
00:27:00,260 --> 00:27:04,910
could have made this a bit more a little

684
00:27:03,740 --> 00:27:06,380
bit there's things that you've never

685
00:27:04,910 --> 00:27:07,520
bought to test for and they and that

686
00:27:06,380 --> 00:27:14,000
would have been really good advice to

687
00:27:07,520 --> 00:27:15,170
have received so the phone model that I

688
00:27:14,000 --> 00:27:17,720
mentioned earlier that was part of the

689
00:27:15,170 --> 00:27:19,610
payload I wish I could say that was

690
00:27:17,720 --> 00:27:21,170
fixed by simply removing from the

691
00:27:19,610 --> 00:27:24,169
payload and this this took a little bit

692
00:27:21,170 --> 00:27:26,690
longer to finally um you know in a much

693
00:27:24,170 --> 00:27:27,860
later update however instead they

694
00:27:26,690 --> 00:27:30,410
implemented a vastly more complicated

695
00:27:27,860 --> 00:27:31,760
payload encryption scheme they're not

696
00:27:30,410 --> 00:27:33,410
even going to try to explain because I'm

697
00:27:31,760 --> 00:27:35,150
not a cryptographer but I highly

698
00:27:33,410 --> 00:27:38,540
recommend that you look at Vanessa

699
00:27:35,150 --> 00:27:40,070
Teague's blog at the URL here and on a

700
00:27:38,540 --> 00:27:41,659
personal note I'd like to public

701
00:27:40,070 --> 00:27:44,510
knowledge how amazing it's been to work

702
00:27:41,660 --> 00:27:45,740
with her and her team she was one of the

703
00:27:44,510 --> 00:27:47,929
first people I reached out to at the

704
00:27:45,740 --> 00:27:49,820
beginning when I when I had exhausted

705
00:27:47,929 --> 00:27:54,380
all the obvious government contacts and

706
00:27:49,820 --> 00:27:56,120
stuff like that and being able to watch

707
00:27:54,380 --> 00:27:57,170
them analyze the encryption changes and

708
00:27:56,120 --> 00:27:59,169
just talk to them about the sort of

709
00:27:57,170 --> 00:28:00,740
stuff it's been absolutely wonderful and

710
00:27:59,170 --> 00:28:02,059
Eleanor who we heard from earlier

711
00:28:00,740 --> 00:28:06,110
tonight was was one of those people

712
00:28:02,059 --> 00:28:09,410
which was really cool and related to

713
00:28:06,110 --> 00:28:11,419
this the this encryption change it

714
00:28:09,410 --> 00:28:13,010
unfortunately broke the iPhone app and

715
00:28:11,420 --> 00:28:14,420
so the iPhone app became unable to do

716
00:28:13,010 --> 00:28:17,660
one of the directions of the of the

717
00:28:14,420 --> 00:28:19,610
exchange so it only worked in central to

718
00:28:17,660 --> 00:28:21,590
peripheral not peripheral to central

719
00:28:19,610 --> 00:28:23,090
because of the way they changed the size

720
00:28:21,590 --> 00:28:25,840
of the payload and then and the MTU

721
00:28:23,090 --> 00:28:28,159
exchange was not done properly and

722
00:28:25,840 --> 00:28:29,510
related that there was this whole open

723
00:28:28,160 --> 00:28:31,640
question at the time about does the

724
00:28:29,510 --> 00:28:35,150
iPhone even work especially in the

725
00:28:31,640 --> 00:28:36,890
background and I'd like to shout out the

726
00:28:35,150 --> 00:28:39,050
excellent work by Richard Nelson and

727
00:28:36,890 --> 00:28:40,480
John Evershed here who did a lot of work

728
00:28:39,050 --> 00:28:42,700
to figure out exactly

729
00:28:40,480 --> 00:28:44,080
didn't work and how to fix it and then

730
00:28:42,700 --> 00:28:46,840
it took an even longer for those fixes

731
00:28:44,080 --> 00:28:48,639
to get applied however I'm excited to

732
00:28:46,840 --> 00:28:51,490
say that as of the update that came out

733
00:28:48,640 --> 00:28:52,929
this morning version 1.6 it seems like

734
00:28:51,490 --> 00:28:54,730
the iPhone probably for the first time

735
00:28:52,929 --> 00:28:57,429
actually works well locked and in the

736
00:28:54,730 --> 00:28:59,919
background this has got nothing to do

737
00:28:57,429 --> 00:29:01,780
with being Apple's fault or problems

738
00:28:59,919 --> 00:29:04,750
with older models or antennas it just

739
00:29:01,780 --> 00:29:06,490
just needed a few fixes and some people

740
00:29:04,750 --> 00:29:09,250
did some really great work to get to go

741
00:29:06,490 --> 00:29:10,360
to the bottom of that on the topic of

742
00:29:09,250 --> 00:29:14,080
the iPhone just kind of on a lighter

743
00:29:10,360 --> 00:29:15,549
note well a serious bit but it's a bit a

744
00:29:14,080 --> 00:29:18,309
serious issue is that while we were

745
00:29:15,549 --> 00:29:20,350
investigating the iPhone code we were

746
00:29:18,309 --> 00:29:23,710
looking at the the switch code that was

747
00:29:20,350 --> 00:29:27,010
released and and this was truly the

748
00:29:23,710 --> 00:29:28,210
single version - and I sent this line to

749
00:29:27,010 --> 00:29:31,090
Richard for a completely unrelated

750
00:29:28,210 --> 00:29:33,640
reason and he answered my question about

751
00:29:31,090 --> 00:29:37,059
what it was doing in video he also said

752
00:29:33,640 --> 00:29:38,620
well what if menu data is fewer than two

753
00:29:37,059 --> 00:29:40,960
bytes like it's trying to take a slice

754
00:29:38,620 --> 00:29:43,209
of a thing that it's is assumed to be at

755
00:29:40,960 --> 00:29:44,470
least two bytes long and turns out that

756
00:29:43,210 --> 00:29:45,429
manufacturer data can be anything you

757
00:29:44,470 --> 00:29:48,040
like you don't have to set a

758
00:29:45,429 --> 00:29:50,320
manufacturer ID and Rich's written about

759
00:29:48,040 --> 00:29:51,428
padded here and you should read that and

760
00:29:50,320 --> 00:29:53,770
I don't think I have time to play the

761
00:29:51,429 --> 00:29:55,140
video but very within about 15 minutes

762
00:29:53,770 --> 00:29:57,910
of discovering this I had a little

763
00:29:55,140 --> 00:30:00,549
Bluetooth beacon that I had in my drawer

764
00:29:57,910 --> 00:30:02,890
and he pushed the button on that and any

765
00:30:00,549 --> 00:30:04,809
iPhones nearby immediately terminate the

766
00:30:02,890 --> 00:30:07,450
covert safe app and so became very easy

767
00:30:04,809 --> 00:30:09,160
to build a the covert safe blocker and

768
00:30:07,450 --> 00:30:12,160
so that actually got fixed really

769
00:30:09,160 --> 00:30:15,220
quickly haha they got a richard got a

770
00:30:12,160 --> 00:30:17,650
spot on on sunrise and on the TV on the

771
00:30:15,220 --> 00:30:18,790
telly and yeah they did respond a lot

772
00:30:17,650 --> 00:30:20,049
more to that and i think it was good

773
00:30:18,790 --> 00:30:21,399
that we already had established the

774
00:30:20,049 --> 00:30:23,620
contacts with the DTA through the other

775
00:30:21,400 --> 00:30:28,570
bugs but yeah it was good to leverage

776
00:30:23,620 --> 00:30:29,770
that so through the a lot of a lot of

777
00:30:28,570 --> 00:30:33,389
new friends that I've made in this

778
00:30:29,770 --> 00:30:36,610
process and somebody introduced me to

779
00:30:33,390 --> 00:30:38,559
person named Alan - at the Australian

780
00:30:36,610 --> 00:30:41,678
National University and and he had

781
00:30:38,559 --> 00:30:43,090
independently discovered I think all of

782
00:30:41,679 --> 00:30:46,570
the issues that we've talked about so

783
00:30:43,090 --> 00:30:48,699
far but they said I'll you be interested

784
00:30:46,570 --> 00:30:50,379
in changing him and and he had this

785
00:30:48,700 --> 00:30:53,049
interesting thing that he just noticed

786
00:30:50,380 --> 00:30:54,520
and that between the two of us we then

787
00:30:53,049 --> 00:30:57,420
spent a large chunk of Linux

788
00:30:54,520 --> 00:31:01,930
for weeks investigating this further

789
00:30:57,420 --> 00:31:03,130
he's his works amazing is his yeah the

790
00:31:01,930 --> 00:31:07,450
discoveries that he's made have been

791
00:31:03,130 --> 00:31:08,500
absolutely fascinating so remember at

792
00:31:07,450 --> 00:31:10,900
the beginning I was talking about this

793
00:31:08,500 --> 00:31:12,640
this public address and private private

794
00:31:10,900 --> 00:31:16,000
address and the resolving key that's

795
00:31:12,640 --> 00:31:20,230
used to convert between them and so once

796
00:31:16,000 --> 00:31:22,000
the pairing process happens you you can

797
00:31:20,230 --> 00:31:27,430
then permanently identify that device by

798
00:31:22,000 --> 00:31:29,020
its identity address so you need to make

799
00:31:27,430 --> 00:31:31,300
sure that you can't pair with covert

800
00:31:29,020 --> 00:31:32,770
safe and you may have noticed if you've

801
00:31:31,300 --> 00:31:33,760
installed a later version of covert safe

802
00:31:32,770 --> 00:31:36,190
that there's a message on the home

803
00:31:33,760 --> 00:31:39,670
screen that says covert safe does not

804
00:31:36,190 --> 00:31:42,060
send parry requests and so that's Alan's

805
00:31:39,670 --> 00:31:42,060
fault I guess

806
00:31:42,600 --> 00:31:50,379
so now this is what the CVE is all about

807
00:31:47,550 --> 00:31:52,360
so normally if you're familiar with how

808
00:31:50,380 --> 00:31:54,370
pairing works on a phone on a Bluetooth

809
00:31:52,360 --> 00:31:56,770
device you get a prompt saying please

810
00:31:54,370 --> 00:32:01,419
enter this code or is this the device

811
00:31:56,770 --> 00:32:03,520
you're trying to connect to but if the

812
00:32:01,420 --> 00:32:05,830
user would have clicked yes to that then

813
00:32:03,520 --> 00:32:07,180
they've now expose their that are okay

814
00:32:05,830 --> 00:32:10,870
and their identity address and they

815
00:32:07,180 --> 00:32:12,670
become permanently trackable but what

816
00:32:10,870 --> 00:32:15,580
Alvin discovered is that you can make

817
00:32:12,670 --> 00:32:16,960
this happen silently on Android so this

818
00:32:15,580 --> 00:32:18,760
is a quick demo of how this works so

819
00:32:16,960 --> 00:32:20,950
from NRF connect I can initiate the

820
00:32:18,760 --> 00:32:23,470
pairing process to an app running to a

821
00:32:20,950 --> 00:32:25,390
phone running covert safe and covert

822
00:32:23,470 --> 00:32:27,640
safe pops up and says would you like to

823
00:32:25,390 --> 00:32:33,000
pair and so hopefully a user would not

824
00:32:27,640 --> 00:32:33,000
click on that but but they might and

825
00:32:34,230 --> 00:32:39,040
here's the iPhone equivalent it's pretty

826
00:32:37,660 --> 00:32:40,450
convincing in at the time the iPhone app

827
00:32:39,040 --> 00:32:41,710
had to be in the foreground to work so

828
00:32:40,450 --> 00:32:43,600
that you know there might have worked

829
00:32:41,710 --> 00:32:46,030
but I realized that of course you can

830
00:32:43,600 --> 00:32:47,770
control the text on here which is why it

831
00:32:46,030 --> 00:32:49,960
says covert safe rather than you know

832
00:32:47,770 --> 00:32:54,280
anything else and then I realized that

833
00:32:49,960 --> 00:32:56,020
you can turn off what's the man in the

834
00:32:54,280 --> 00:32:59,139
middle attack protection which which is

835
00:32:56,020 --> 00:33:01,770
why there's the passcode shown here so

836
00:32:59,140 --> 00:33:04,870
we had a pretty convincing request and

837
00:33:01,770 --> 00:33:06,160
if the user clicks pair then it's then

838
00:33:04,870 --> 00:33:08,000
it's all over

839
00:33:06,160 --> 00:33:09,800
but our one figured out how to make it

840
00:33:08,000 --> 00:33:12,350
happen silently and so the way this

841
00:33:09,800 --> 00:33:14,659
works is rather than sending a pairing

842
00:33:12,350 --> 00:33:18,969
request what you do is you pretend that

843
00:33:14,660 --> 00:33:22,250
the read required more authentication so

844
00:33:18,970 --> 00:33:23,930
the attacker on the right connects to

845
00:33:22,250 --> 00:33:27,320
the the phone on the Left running covert

846
00:33:23,930 --> 00:33:29,090
safe in central role and oh sorry sorry

847
00:33:27,320 --> 00:33:31,189
other way around the attacker says that

848
00:33:29,090 --> 00:33:33,530
it is running covert safe as a

849
00:33:31,190 --> 00:33:35,390
peripheral the central on the Left

850
00:33:33,530 --> 00:33:37,639
connects to and attempts to read the

851
00:33:35,390 --> 00:33:39,200
tracing characteristic and then the

852
00:33:37,640 --> 00:33:40,910
attacker says are you don't have

853
00:33:39,200 --> 00:33:42,860
permission to that characteristic and so

854
00:33:40,910 --> 00:33:45,260
the central says well I trust you

855
00:33:42,860 --> 00:33:47,600
because I I connected to you so I'd like

856
00:33:45,260 --> 00:33:49,490
to pair with you and then the peripheral

857
00:33:47,600 --> 00:33:51,439
says yep but but no passcode none of

858
00:33:49,490 --> 00:33:55,460
that nonsense and so the central says

859
00:33:51,440 --> 00:33:57,800
sure no worries he's my okay and then

860
00:33:55,460 --> 00:34:03,560
it's all over at that point you can now

861
00:33:57,800 --> 00:34:06,260
permanently identify that device but

862
00:34:03,560 --> 00:34:07,730
what do you do with an eye okay like how

863
00:34:06,260 --> 00:34:09,050
do I use that to track the device in the

864
00:34:07,730 --> 00:34:11,179
future like what if they uninstall the

865
00:34:09,050 --> 00:34:12,649
app or whatever it turns out the phones

866
00:34:11,179 --> 00:34:15,200
will always respond to a ping on their

867
00:34:12,649 --> 00:34:17,210
identity address so once you know their

868
00:34:15,199 --> 00:34:20,149
I okay you've once off get their

869
00:34:17,210 --> 00:34:21,949
identity address and now you can result

870
00:34:20,149 --> 00:34:23,899
you can ping it so I can always I can

871
00:34:21,949 --> 00:34:26,089
always ask is this device currently near

872
00:34:23,899 --> 00:34:28,960
me which is enough to do all of the the

873
00:34:26,090 --> 00:34:30,950
attacks that we've talked about so far

874
00:34:28,960 --> 00:34:32,330
but what else can you do with an

875
00:34:30,949 --> 00:34:35,629
identity address and so it turns out

876
00:34:32,330 --> 00:34:38,560
somebody left a very very helpful two

877
00:34:35,630 --> 00:34:41,570
star review in the Play Store

878
00:34:38,560 --> 00:34:42,620
two days after launch I'd love to know

879
00:34:41,570 --> 00:34:48,200
what they think a one star review

880
00:34:42,620 --> 00:34:55,219
deserves but yeah this CVE is it's

881
00:34:48,199 --> 00:34:58,069
called blue frag and it is a heat

882
00:34:55,219 --> 00:34:59,569
vulnerability in the system Bluetooth

883
00:34:58,070 --> 00:35:02,600
service on Android in the way that it

884
00:34:59,570 --> 00:35:04,190
does packet reassembly just like just

885
00:35:02,600 --> 00:35:06,589
like I Pete you do Bluetooth packet

886
00:35:04,190 --> 00:35:08,780
packet fragmentation and all you need to

887
00:35:06,590 --> 00:35:14,690
know is the identity address of the

888
00:35:08,780 --> 00:35:18,080
phone to initiate it we that that page

889
00:35:14,690 --> 00:35:19,700
that was linked to has a demo way to

890
00:35:18,080 --> 00:35:23,000
reproduce the exploit

891
00:35:19,700 --> 00:35:25,430
and as you can see it works so they

892
00:35:23,000 --> 00:35:29,829
don't publish the full exploit which has

893
00:35:25,430 --> 00:35:33,200
got a um a rope chain to code execution

894
00:35:29,829 --> 00:35:35,829
in a system service but we were able to

895
00:35:33,200 --> 00:35:39,049
demonstrate that at least it worked for

896
00:35:35,829 --> 00:35:40,430
crashing the service but also there's a

897
00:35:39,050 --> 00:35:41,690
demo that allows you to leak data out of

898
00:35:40,430 --> 00:35:45,109
memory and things like that and that

899
00:35:41,690 --> 00:35:48,349
that all works fine so this affects only

900
00:35:45,109 --> 00:35:49,940
versions of Android up to 9.0 but that's

901
00:35:48,349 --> 00:35:55,280
still the vast majority of Android

902
00:35:49,940 --> 00:35:57,079
phones out there but then finally one

903
00:35:55,280 --> 00:35:58,250
more thing that you can do not just with

904
00:35:57,079 --> 00:35:59,890
the identity address but because we've

905
00:35:58,250 --> 00:36:03,950
successfully paired with the phone is

906
00:35:59,890 --> 00:36:08,270
that after you've done that exchange you

907
00:36:03,950 --> 00:36:11,390
can then tell Bluetooth oh by the way

908
00:36:08,270 --> 00:36:13,280
I'm a keyboard now and the phone will

909
00:36:11,390 --> 00:36:14,960
happily then allow you to be connected

910
00:36:13,280 --> 00:36:17,710
as a keyboard and send arbitrary key

911
00:36:14,960 --> 00:36:22,369
presses and remote control of the phone

912
00:36:17,710 --> 00:36:27,440
and we've tested this with keyboards and

913
00:36:22,369 --> 00:36:28,760
also with headphones and sets and you

914
00:36:27,440 --> 00:36:31,060
can do that you can play pause the music

915
00:36:28,760 --> 00:36:34,369
and all that stuff

916
00:36:31,060 --> 00:36:36,828
extremely fortunately I it doesn't also

917
00:36:34,369 --> 00:36:38,690
let you access the call log or the

918
00:36:36,829 --> 00:36:41,480
contact list that will prop up another

919
00:36:38,690 --> 00:36:42,770
another pairing prompt but it's just

920
00:36:41,480 --> 00:36:44,150
another pairing prompt right in here so

921
00:36:42,770 --> 00:36:48,700
it's there's a social engineering side

922
00:36:44,150 --> 00:36:51,050
to that so this is pretty scary um and

923
00:36:48,700 --> 00:36:53,149
yeah maybe it's a maybe it's a fairly

924
00:36:51,050 --> 00:36:55,480
targeted attack fit but this this

925
00:36:53,150 --> 00:37:01,339
existed Inc I would say from-from launch

926
00:36:55,480 --> 00:37:02,869
and was fixed two weeks ago we in fact

927
00:37:01,339 --> 00:37:05,390
Alan and I weren't able to come up with

928
00:37:02,869 --> 00:37:09,170
it with a fix for this but the the Cova

929
00:37:05,390 --> 00:37:12,650
save team didn't implement a fix using

930
00:37:09,170 --> 00:37:14,150
reflection basically on Android the the

931
00:37:12,650 --> 00:37:17,030
library that you link against the SDK

932
00:37:14,150 --> 00:37:18,589
that the talks the system services is

933
00:37:17,030 --> 00:37:20,839
itself written in Java so you can use

934
00:37:18,589 --> 00:37:22,730
reflection to modify its state and so

935
00:37:20,839 --> 00:37:25,819
they trick the Android SDK into thinking

936
00:37:22,730 --> 00:37:27,380
that the pairing has already happened

937
00:37:25,819 --> 00:37:30,170
silently and then it doesn't try and do

938
00:37:27,380 --> 00:37:32,450
it again if you think this sounds pretty

939
00:37:30,170 --> 00:37:33,470
dodgy yes it is but it's actually a

940
00:37:32,450 --> 00:37:35,660
really common thing that

941
00:37:33,470 --> 00:37:37,250
that outs do on Android and Google have

942
00:37:35,660 --> 00:37:38,480
a whole process for how to allow apps

943
00:37:37,250 --> 00:37:39,710
through the store even when they're

944
00:37:38,480 --> 00:37:42,440
doing these sorts of the answers got

945
00:37:39,710 --> 00:37:44,000
great listing the fix seems to work

946
00:37:42,440 --> 00:37:46,130
which is really good and so that that

947
00:37:44,000 --> 00:37:49,720
was released in version 1.0 point 18

948
00:37:46,130 --> 00:37:49,720
which was just over two weeks ago

949
00:37:50,080 --> 00:38:02,270
we do have unrelated to this particular

950
00:37:54,800 --> 00:38:04,670
issue we do have another way of getting

951
00:38:02,270 --> 00:38:06,259
the identity dress but we haven't

952
00:38:04,670 --> 00:38:09,530
released the details of that yet but it

953
00:38:06,260 --> 00:38:13,220
was actually it's um is actually fixed

954
00:38:09,530 --> 00:38:16,580
today so that's that's good so they

955
00:38:13,220 --> 00:38:18,589
won't go into the details of that it's

956
00:38:16,580 --> 00:38:21,560
really important to ensure that you get

957
00:38:18,590 --> 00:38:24,020
the updates to this app to get these

958
00:38:21,560 --> 00:38:25,520
fixes as several fixes we've talked

959
00:38:24,020 --> 00:38:28,119
about plus the functionality fixes to

960
00:38:25,520 --> 00:38:30,980
iPhone I should mention as well that

961
00:38:28,119 --> 00:38:32,770
Vanessa takes team looked at light into

962
00:38:30,980 --> 00:38:35,240
encryption and there was a bug

963
00:38:32,770 --> 00:38:38,960
associated with the way that works on

964
00:38:35,240 --> 00:38:41,689
Android with concurrency and that could

965
00:38:38,960 --> 00:38:43,220
lead to corrupt Tramp IDs and and fairly

966
00:38:41,690 --> 00:38:46,099
de três and possibly makes the app stop

967
00:38:43,220 --> 00:38:48,500
working properly that was also fixed

968
00:38:46,099 --> 00:38:49,910
today however what we've discovered is

969
00:38:48,500 --> 00:38:51,680
that the app doesn't necessarily auto

970
00:38:49,910 --> 00:38:53,060
update and we think the reason for this

971
00:38:51,680 --> 00:38:54,410
might be something to do with the fact

972
00:38:53,060 --> 00:38:57,380
that it's running in the background but

973
00:38:54,410 --> 00:38:59,000
it's very very active and so in the same

974
00:38:57,380 --> 00:39:00,589
way that auto update won't happen on

975
00:38:59,000 --> 00:39:03,740
your podcast player while you're playing

976
00:39:00,589 --> 00:39:05,990
a podcast I think possibly that that

977
00:39:03,740 --> 00:39:07,819
Google Play services is not Auto

978
00:39:05,990 --> 00:39:10,069
updating covert save cuz it can't find a

979
00:39:07,820 --> 00:39:11,420
time to schedule the update so it's

980
00:39:10,070 --> 00:39:13,820
extremely important that you manually

981
00:39:11,420 --> 00:39:16,490
check in the Play Store or an apple in

982
00:39:13,820 --> 00:39:19,609
the Apple App Store for any potential

983
00:39:16,490 --> 00:39:21,169
updates and install them manually so as

984
00:39:19,609 --> 00:39:24,680
of today the latest version of Android

985
00:39:21,170 --> 00:39:27,950
is one point 0.28 and for iPhone it's

986
00:39:24,680 --> 00:39:29,149
version 1.6 so check yourself but also

987
00:39:27,950 --> 00:39:34,520
encourage your friends and family to

988
00:39:29,150 --> 00:39:37,410
check too so that's it

989
00:39:34,520 --> 00:39:38,920
I think the best outcome here is that

990
00:39:37,410 --> 00:39:41,299
[Music]

991
00:39:38,920 --> 00:39:42,830
the phone name is still addressed in

992
00:39:41,300 --> 00:39:45,140
some way so there was a fixer to a

993
00:39:42,830 --> 00:39:48,240
couple of weeks ago whether he for new

994
00:39:45,140 --> 00:39:49,859
users only in registration

995
00:39:48,240 --> 00:39:53,700
they encourage the user to change the

996
00:39:49,860 --> 00:39:55,470
phone name to Android phone but they say

997
00:39:53,700 --> 00:39:57,210
something like please make this

998
00:39:55,470 --> 00:39:59,399
anonymous and I think that might in fact

999
00:39:57,210 --> 00:40:01,590
trick people will confuse people into

1000
00:39:59,400 --> 00:40:02,820
entering something that is unique in the

1001
00:40:01,590 --> 00:40:04,080
end because it's because it's got a bit

1002
00:40:02,820 --> 00:40:06,180
hard to explain what the what the actual

1003
00:40:04,080 --> 00:40:07,680
goal of this is but unfortunately this

1004
00:40:06,180 --> 00:40:08,970
change only applies to people who are

1005
00:40:07,680 --> 00:40:10,259
new to the app and so they don't need

1006
00:40:08,970 --> 00:40:13,890
the people who only installed in the

1007
00:40:10,260 --> 00:40:16,320
last couple of weeks so for now your

1008
00:40:13,890 --> 00:40:19,700
phone name is still very much exposed to

1009
00:40:16,320 --> 00:40:23,280
anybody who can find you with this app

1010
00:40:19,700 --> 00:40:24,569
additionally there are some something

1011
00:40:23,280 --> 00:40:26,790
needs to be done about the auto updating

1012
00:40:24,570 --> 00:40:30,930
on Android I know the DJ is aware of

1013
00:40:26,790 --> 00:40:34,980
this and and can confirm what I was

1014
00:40:30,930 --> 00:40:36,180
reporting and there are some open

1015
00:40:34,980 --> 00:40:38,730
questions about how the encryption

1016
00:40:36,180 --> 00:40:40,620
scheme works in terms of the payload

1017
00:40:38,730 --> 00:40:41,970
encryption in terms of whether or not

1018
00:40:40,620 --> 00:40:43,859
additional information is leaked from

1019
00:40:41,970 --> 00:40:47,370
there and I encourage you to follow

1020
00:40:43,860 --> 00:40:51,240
along at Vanessa's blog github.com /bt

1021
00:40:47,370 --> 00:40:53,160
slash contact tracing and finally of

1022
00:40:51,240 --> 00:40:54,899
course we still have no idea what

1023
00:40:53,160 --> 00:40:56,549
happens on the server how is this data

1024
00:40:54,900 --> 00:40:59,790
collected how does the encryption scheme

1025
00:40:56,550 --> 00:41:02,670
for temp IDs work who has access to the

1026
00:40:59,790 --> 00:41:04,140
data there's beans in vague rumors

1027
00:41:02,670 --> 00:41:06,030
around you know only state based

1028
00:41:04,140 --> 00:41:07,920
contractor contact tracers can access

1029
00:41:06,030 --> 00:41:10,380
state-based data and things but that

1030
00:41:07,920 --> 00:41:12,780
doesn't appear to be aligned with the

1031
00:41:10,380 --> 00:41:14,340
way though of what we've seen and so I

1032
00:41:12,780 --> 00:41:17,070
would love to see the server side open

1033
00:41:14,340 --> 00:41:20,370
sourced and and the community engaged on

1034
00:41:17,070 --> 00:41:22,380
making that better too but fundamentally

1035
00:41:20,370 --> 00:41:24,210
the issue with covert safe is that it's

1036
00:41:22,380 --> 00:41:27,510
based on this GATT server based exchange

1037
00:41:24,210 --> 00:41:28,820
and Bluetooth Bluetooth frameworks on

1038
00:41:27,510 --> 00:41:30,930
phones were never designed to be

1039
00:41:28,820 --> 00:41:32,880
operated in a mode where they connected

1040
00:41:30,930 --> 00:41:36,149
to any random device around that

1041
00:41:32,880 --> 00:41:38,160
advertised the right service so it's

1042
00:41:36,150 --> 00:41:39,270
kind of like a higher risk option for

1043
00:41:38,160 --> 00:41:42,839
how to implement an app like this

1044
00:41:39,270 --> 00:41:45,920
and my feeling is that in in chasing

1045
00:41:42,840 --> 00:41:48,890
this sort of centralized model of a very

1046
00:41:45,920 --> 00:41:52,200
you know hands-on contact tracing

1047
00:41:48,890 --> 00:41:54,569
they've missed out on privacy and the

1048
00:41:52,200 --> 00:41:56,100
basic functionality and reliability that

1049
00:41:54,570 --> 00:41:58,410
the Apple Google notification would have

1050
00:41:56,100 --> 00:42:00,330
would have provided and so I really feel

1051
00:41:58,410 --> 00:42:02,700
that when the Apple Google hood

1052
00:42:00,330 --> 00:42:05,940
Google API was announced at the very

1053
00:42:02,700 --> 00:42:07,319
start of April that that the sensible

1054
00:42:05,940 --> 00:42:10,580
thing to done would have been to

1055
00:42:07,320 --> 00:42:13,800
immediately jump on board with that and

1056
00:42:10,580 --> 00:42:15,930
like Germany they would have an app

1057
00:42:13,800 --> 00:42:18,150
available already that that is based on

1058
00:42:15,930 --> 00:42:21,540
this API and works really well on on as

1059
00:42:18,150 --> 00:42:23,100
many devices as possible so that's all I

1060
00:42:21,540 --> 00:42:26,160
have

1061
00:42:23,100 --> 00:42:28,170
we'd love to hear questions and please

1062
00:42:26,160 --> 00:42:31,770
engage email and Twitter and on the

1063
00:42:28,170 --> 00:42:34,800
slack afterwards well it's great yeah

1064
00:42:31,770 --> 00:42:39,540
very good very very busy on the slack

1065
00:42:34,800 --> 00:42:41,070
actually during your talk a lot of it

1066
00:42:39,540 --> 00:42:45,600
was actually a lot of questions for a

1067
00:42:41,070 --> 00:42:49,230
lot of like support and a lot of ongoing

1068
00:42:45,600 --> 00:42:51,380
commentary yeah yeah a couple of

1069
00:42:49,230 --> 00:42:53,700
questions I asked for questions everyone

1070
00:42:51,380 --> 00:42:55,800
there was was very impressed with all

1071
00:42:53,700 --> 00:42:57,120
the work he did there was one question

1072
00:42:55,800 --> 00:43:00,510
in particular I'm not quite sure if you

1073
00:42:57,120 --> 00:43:04,170
you it's been answered but it's in it so

1074
00:43:00,510 --> 00:43:07,470
the blue frog volubility all Android

1075
00:43:04,170 --> 00:43:09,690
devices passed candy packs for this or

1076
00:43:07,470 --> 00:43:11,669
their limitations on some devices that

1077
00:43:09,690 --> 00:43:15,540
that can't updates in the latest Android

1078
00:43:11,670 --> 00:43:18,120
channel or whatnot right now it's only

1079
00:43:15,540 --> 00:43:21,450
patched in Android ten there's a if you

1080
00:43:18,120 --> 00:43:24,150
read if you read the the details by the

1081
00:43:21,450 --> 00:43:25,470
author there is something in Android

1082
00:43:24,150 --> 00:43:29,370
nine but I think I think they found a

1083
00:43:25,470 --> 00:43:32,339
workaround for that or something um yeah

1084
00:43:29,370 --> 00:43:35,730
basically Android ten safe but Android 9

1085
00:43:32,340 --> 00:43:37,890
and below have issues here okay

1086
00:43:35,730 --> 00:43:42,800
and then I was um I was just wondering

1087
00:43:37,890 --> 00:43:42,799
commenting on how much time you spent

1088
00:43:43,340 --> 00:43:49,200
and and I think I think maybe added to

1089
00:43:47,430 --> 00:43:53,060
that and said can you ask him if he sent

1090
00:43:49,200 --> 00:43:53,060
DT an invoice for his hours

1091
00:43:53,670 --> 00:44:04,289
as a lot of time then we're in curve in

1092
00:44:01,500 --> 00:44:05,660
1908 right like it's absolutely on touch

1093
00:44:04,289 --> 00:44:06,779
racing is really important and

1094
00:44:05,660 --> 00:44:12,180
absolutely

1095
00:44:06,779 --> 00:44:13,079
kind of my frustration here is that I've

1096
00:44:12,180 --> 00:44:14,669
had I've had some very interesting

1097
00:44:13,079 --> 00:44:16,920
conversations of people over the last

1098
00:44:14,670 --> 00:44:19,079
eight weeks people from all sorts of

1099
00:44:16,920 --> 00:44:21,180
different areas and and I need to be

1100
00:44:19,079 --> 00:44:22,470
really clear I like I'm a computer

1101
00:44:21,180 --> 00:44:25,470
program who's interested in how radios

1102
00:44:22,470 --> 00:44:27,868
work and I'm not an epidemiologist and

1103
00:44:25,470 --> 00:44:33,890
I'm not a contact race or a politician

1104
00:44:27,869 --> 00:44:36,119
or any of that right but from a purely

1105
00:44:33,890 --> 00:44:38,549
yeah and so there's a really good

1106
00:44:36,119 --> 00:44:39,869
question so settlers are asked a really

1107
00:44:38,549 --> 00:44:42,660
good question in a conversation piece

1108
00:44:39,869 --> 00:44:44,789
about should we be letting Apple and

1109
00:44:42,660 --> 00:44:50,430
Google set the policy for how we do

1110
00:44:44,789 --> 00:44:51,450
contact tracing and yeah like no we

1111
00:44:50,430 --> 00:44:53,339
didn't we didn't vote for Apple and

1112
00:44:51,450 --> 00:44:54,868
Google we we you know for weather or

1113
00:44:53,339 --> 00:44:56,009
sweet right at our government and and we

1114
00:44:54,869 --> 00:44:57,900
should be letting them set the policy

1115
00:44:56,010 --> 00:45:00,450
but unfortunately in this case the

1116
00:44:57,900 --> 00:45:03,809
technical the technical side of this is

1117
00:45:00,450 --> 00:45:08,250
really important to and the approach

1118
00:45:03,809 --> 00:45:10,619
taken by crowded safe is not it's not

1119
00:45:08,250 --> 00:45:13,049
the it's not the best and then and and

1120
00:45:10,619 --> 00:45:15,390
we trade it off we trade it off having a

1121
00:45:13,049 --> 00:45:17,990
thing that worked well for a thing that

1122
00:45:15,390 --> 00:45:20,308
didn't really work that well at all and

1123
00:45:17,990 --> 00:45:23,549
we're very lucky in Australia because

1124
00:45:20,309 --> 00:45:25,890
because because thanks to the amazing

1125
00:45:23,549 --> 00:45:27,150
public health teams in the state based

1126
00:45:25,890 --> 00:45:29,180
public health teams and a lot of very

1127
00:45:27,150 --> 00:45:33,000
very dedicated and passionate people

1128
00:45:29,180 --> 00:45:35,609
that the pandemic has been really well

1129
00:45:33,000 --> 00:45:37,589
managed in Australia and so to a certain

1130
00:45:35,609 --> 00:45:39,930
extent I'm happy to help right like I'm

1131
00:45:37,589 --> 00:45:42,450
happy i I genuinely can walk away from

1132
00:45:39,930 --> 00:45:44,879
this feeling that thanks to this work

1133
00:45:42,450 --> 00:45:46,319
Cova tape works better it's not the

1134
00:45:44,880 --> 00:45:49,619
disapp I would've designed and it's not

1135
00:45:46,319 --> 00:45:52,650
the a pilot chosen but other people

1136
00:45:49,619 --> 00:45:55,369
reached it in Jeff weary and John and

1137
00:45:52,650 --> 00:45:57,420
Vanessa and and then countless others

1138
00:45:55,369 --> 00:46:00,809
have done really good work here and it's

1139
00:45:57,420 --> 00:46:04,619
and so very very grateful to all of

1140
00:46:00,809 --> 00:46:05,609
those people yeah it's true I've not

1141
00:46:04,619 --> 00:46:07,789
done a lot of work in the last eight

1142
00:46:05,609 --> 00:46:07,788
weeks

1143
00:46:08,090 --> 00:46:13,650
there's one more question here from

1144
00:46:10,200 --> 00:46:17,279
Casey who actually said when you got

1145
00:46:13,650 --> 00:46:19,740
connected to DTA what was the appetite

1146
00:46:17,280 --> 00:46:21,750
for future security feedback like were

1147
00:46:19,740 --> 00:46:23,970
they happy encouraging or do they see

1148
00:46:21,750 --> 00:46:29,010
more inconvenience not wanting feedback

1149
00:46:23,970 --> 00:46:30,480
for future engagements I guess it's

1150
00:46:29,010 --> 00:46:33,330
harder I mean I don't know these people

1151
00:46:30,480 --> 00:46:36,480
and and so you know conversations over

1152
00:46:33,330 --> 00:46:38,130
email and I know a bit tricky I did I

1153
00:46:36,480 --> 00:46:39,510
did have a very very poor interaction

1154
00:46:38,130 --> 00:46:42,360
very early on with somebody from one of

1155
00:46:39,510 --> 00:46:45,120
the the third party firms who ordered

1156
00:46:42,360 --> 00:46:46,680
the app and yeah you know I was told

1157
00:46:45,120 --> 00:46:48,480
something like you're not the only kid

1158
00:46:46,680 --> 00:46:51,169
with a disassembled oh and they're too

1159
00:46:48,480 --> 00:46:57,030
busy for polite emails you know yeah and

1160
00:46:51,170 --> 00:46:57,960
but the DJ themselves yeah I think the

1161
00:46:57,030 --> 00:47:00,930
thing I would love to see in the future

1162
00:46:57,960 --> 00:47:03,210
is what I said earlier respond to emails

1163
00:47:00,930 --> 00:47:06,540
quickly and acknowledge that the bugs

1164
00:47:03,210 --> 00:47:08,760
exist and but more importantly encourage

1165
00:47:06,540 --> 00:47:11,160
the discussion around what to do about

1166
00:47:08,760 --> 00:47:12,780
these bugs so like I understand things

1167
00:47:11,160 --> 00:47:14,990
take time to fix although although a lot

1168
00:47:12,780 --> 00:47:19,970
of them were very small one line changes

1169
00:47:14,990 --> 00:47:22,229
but engage on things like disclosure and

1170
00:47:19,970 --> 00:47:24,089
what the responsibilities are and things

1171
00:47:22,230 --> 00:47:25,350
like that I mean based on the earlier

1172
00:47:24,090 --> 00:47:27,090
comment I would have really loved a bug

1173
00:47:25,350 --> 00:47:28,560
bounty and not just because I want to

1174
00:47:27,090 --> 00:47:31,470
not because I want the money for it I

1175
00:47:28,560 --> 00:47:33,509
it's because by establishing something

1176
00:47:31,470 --> 00:47:34,740
like a bug bounty you are forced to

1177
00:47:33,510 --> 00:47:37,290
think about what the process for how

1178
00:47:34,740 --> 00:47:39,930
people report issues is so different

1179
00:47:37,290 --> 00:47:43,350
thank you as well and appreciating the

1180
00:47:39,930 --> 00:47:46,700
work that's being done yeah yeah and I

1181
00:47:43,350 --> 00:47:51,750
assume it's Casey from background babies

1182
00:47:46,700 --> 00:47:53,730
Casey and something like that is it's a

1183
00:47:51,750 --> 00:47:56,490
streamline way to get that right without

1184
00:47:53,730 --> 00:47:58,860
even you know just do the easy easy

1185
00:47:56,490 --> 00:48:02,009
obvious thing yeah hope that answers

1186
00:47:58,860 --> 00:48:03,690
question awesome and I think there's

1187
00:48:02,010 --> 00:48:05,760
there's lots of people just sort of

1188
00:48:03,690 --> 00:48:08,070
chatting now and agreeing with you in

1189
00:48:05,760 --> 00:48:09,990
the in the in the chat probably if you

1190
00:48:08,070 --> 00:48:13,020
have some time after the talk to head

1191
00:48:09,990 --> 00:48:15,600
over to the chat and talk to people I

1192
00:48:13,020 --> 00:48:17,550
was a great presentation yesterday thank

1193
00:48:15,600 --> 00:48:19,080
you very much it's a great way no no

1194
00:48:17,550 --> 00:48:19,950
thank you thank you very much buddy to

1195
00:48:19,080 --> 00:48:26,390
be fair

1196
00:48:19,950 --> 00:48:26,390
me Oh Vicki thank you say

