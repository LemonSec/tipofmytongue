1
00:00:12,160 --> 00:00:20,020
<font color="#E5E5E5">okay our next speaker</font><font color="#CCCCCC"> is James</font><font color="#E5E5E5"> head -</font>

2
00:00:16,590 --> 00:00:23,080
otherwise<font color="#CCCCCC"> known as</font><font color="#E5E5E5"> ec0 and he'll be</font>

3
00:00:20,020 --> 00:00:25,869
talking<font color="#E5E5E5"> about its UNIX system Intel ma</font>

4
00:00:23,080 --> 00:00:29,278
de tag and<font color="#CCCCCC"> open source</font><font color="#E5E5E5"> biases so let's</font>

5
00:00:25,869 --> 00:00:29,279
welcome James to the<font color="#E5E5E5"> stage</font>

6
00:00:32,380 --> 00:00:38,060
thank you<font color="#CCCCCC"> okay I want to start right</font>

7
00:00:36,620 --> 00:00:39,379
<font color="#CCCCCC">over the gate by</font><font color="#E5E5E5"> saying that I feel the</font>

8
00:00:38,060 --> 00:00:40,700
Jurassic<font color="#E5E5E5"> Park is the best hack and maybe</font>

9
00:00:39,380 --> 00:00:47,480
that's ever been made and I<font color="#CCCCCC"> know that's</font>

10
00:00:40,700 --> 00:00:50,690
<font color="#E5E5E5">an unpopular opinion yes so my name's</font>

11
00:00:47,480 --> 00:00:52,430
<font color="#E5E5E5">James and</font><font color="#CCCCCC"> backgrounds</font><font color="#E5E5E5"> not that important</font>

12
00:00:50,690 --> 00:00:54,019
but I'm right into hardware security

13
00:00:52,430 --> 00:00:55,610
hardware hacking you can find me up at

14
00:00:54,020 --> 00:01:00,460
the<font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> village for</font><font color="#E5E5E5"> the next couple</font>

15
00:00:55,610 --> 00:01:02,990
days<font color="#E5E5E5"> I'm right into open source</font>

16
00:01:00,460 --> 00:01:04,190
liberation<font color="#E5E5E5"> and all that kind of stuff</font><font color="#CCCCCC"> so</font>

17
00:01:02,990 --> 00:01:06,500
<font color="#E5E5E5">what I'm going</font><font color="#CCCCCC"> to be talking about today</font>

18
00:01:04,190 --> 00:01:09,560
is very near and<font color="#CCCCCC"> dear to my heart I've</font>

19
00:01:06,500 --> 00:01:11,290
<font color="#E5E5E5">spent a lot of my own time</font><font color="#CCCCCC"> coming to</font>

20
00:01:09,560 --> 00:01:14,119
understand all this sort of<font color="#CCCCCC"> stuff and</font>

21
00:01:11,290 --> 00:01:17,090
the format of the talk<font color="#CCCCCC"> is kind</font><font color="#E5E5E5"> of less</font>

22
00:01:14,119 --> 00:01:19,130
dropping mad zero days and more<font color="#E5E5E5"> of a</font>

23
00:01:17,090 --> 00:01:20,960
<font color="#E5E5E5">public service announcement about</font><font color="#CCCCCC"> all</font>

24
00:01:19,130 --> 00:01:25,810
the weird<font color="#CCCCCC"> that your computer does</font>

25
00:01:20,960 --> 00:01:29,089
that you<font color="#E5E5E5"> probably don't know about okay</font>

26
00:01:25,810 --> 00:01:30,619
<font color="#E5E5E5">so I wanted to start by just</font><font color="#CCCCCC"> giving a</font>

27
00:01:29,090 --> 00:01:32,540
brief overview<font color="#CCCCCC"> of actually what happens</font>

28
00:01:30,619 --> 00:01:34,610
when you turn on a<font color="#CCCCCC"> computer a mobile</font>

29
00:01:32,540 --> 00:01:39,920
phone anything with the processor in it

30
00:01:34,610 --> 00:01:43,070
<font color="#CCCCCC">basically</font><font color="#E5E5E5"> the CPU die has</font><font color="#CCCCCC"> built-in</font><font color="#E5E5E5"> logic</font>

31
00:01:39,920 --> 00:01:45,229
that will essentially hold the<font color="#CCCCCC"> processor</font>

32
00:01:43,070 --> 00:01:46,910
in a certain<font color="#E5E5E5"> state until all the</font>

33
00:01:45,229 --> 00:01:52,250
voltages stabilize at which point of

34
00:01:46,910 --> 00:01:55,970
resets<font color="#E5E5E5"> at that at that point the CPU</font>

35
00:01:52,250 --> 00:01:58,070
starts<font color="#E5E5E5"> looking for code and the place in</font>

36
00:01:55,970 --> 00:01:59,660
which<font color="#E5E5E5"> it looks is called the reset</font>

37
00:01:58,070 --> 00:02:01,970
<font color="#CCCCCC">vector it's a technical</font><font color="#E5E5E5"> term for</font>

38
00:01:59,660 --> 00:02:03,679
<font color="#CCCCCC">basically a fixed memory address that</font>

39
00:02:01,970 --> 00:02:08,270
gets assigned when they just line a

40
00:02:03,679 --> 00:02:11,600
processor 4 Intel and AMD processors

41
00:02:08,270 --> 00:02:12,680
<font color="#CCCCCC">it's just hard coded and the chips</font><font color="#E5E5E5"> it's</font>

42
00:02:11,600 --> 00:02:17,210
the same<font color="#E5E5E5"> because they use the same</font>

43
00:02:12,680 --> 00:02:19,880
<font color="#E5E5E5">architecture for</font><font color="#CCCCCC"> it's it's</font><font color="#E5E5E5"> another</font>

44
00:02:17,210 --> 00:02:22,550
address but basically once the<font color="#CCCCCC"> voltage</font>

45
00:02:19,880 --> 00:02:25,810
<font color="#E5E5E5">is settled your processor resets start</font>

46
00:02:22,550 --> 00:02:25,810
executing executing code

47
00:02:26,880 --> 00:02:31,109
<font color="#CCCCCC">you can see the addresses here these</font>

48
00:02:29,340 --> 00:02:33,750
<font color="#E5E5E5">have been the same for</font><font color="#CCCCCC"> decades and</font>

49
00:02:31,110 --> 00:02:36,060
<font color="#E5E5E5">decades and</font><font color="#CCCCCC"> decades and decades nothing</font>

50
00:02:33,750 --> 00:02:39,410
has really changed<font color="#CCCCCC"> in processes from</font>

51
00:02:36,060 --> 00:02:41,340
<font color="#E5E5E5">this perspective for a super long time</font>

52
00:02:39,410 --> 00:02:43,770
<font color="#CCCCCC">there's actually some pretty cool tricks</font>

53
00:02:41,340 --> 00:02:45,270
<font color="#E5E5E5">that go on in a processor to</font><font color="#CCCCCC"> start</font>

54
00:02:43,770 --> 00:02:48,690
<font color="#E5E5E5">loading code and start getting a</font>

55
00:02:45,270 --> 00:02:54,120
computer<font color="#E5E5E5"> ready to be a useful computer</font>

56
00:02:48,690 --> 00:02:56,460
to humans and<font color="#CCCCCC"> that all starts after the</font>

57
00:02:54,120 --> 00:02:59,460
<font color="#E5E5E5">processor jumps to the reset</font><font color="#CCCCCC"> vector and</font>

58
00:02:56,460 --> 00:03:05,520
starts loading<font color="#E5E5E5"> code an example here is</font>

59
00:02:59,460 --> 00:03:07,950
the<font color="#CCCCCC"> Intel series of processors</font><font color="#E5E5E5"> when you</font>

60
00:03:05,520 --> 00:03:09,330
have a<font color="#E5E5E5"> CPU a CPU is not smart enough and</font>

61
00:03:07,950 --> 00:03:11,579
doesn't<font color="#CCCCCC"> have enough logic in it</font><font color="#E5E5E5"> to</font>

62
00:03:09,330 --> 00:03:13,890
actually<font color="#E5E5E5"> bring itself to life you need</font>

63
00:03:11,580 --> 00:03:16,740
supporting circuitry typically these<font color="#E5E5E5"> are</font>

64
00:03:13,890 --> 00:03:18,119
<font color="#E5E5E5">called North bridges</font><font color="#CCCCCC"> South bridges these</font>

65
00:03:16,740 --> 00:03:20,190
are<font color="#E5E5E5"> just extra chips on the motherboard</font>

66
00:03:18,120 --> 00:03:22,440
<font color="#E5E5E5">that basically give the process</font><font color="#CCCCCC"> of what</font>

67
00:03:20,190 --> 00:03:25,350
it needs<font color="#E5E5E5"> to start up and start executing</font>

68
00:03:22,440 --> 00:03:27,960
instructions<font color="#E5E5E5"> in sort of</font><font color="#CCCCCC"> more recent</font>

69
00:03:25,350 --> 00:03:29,900
Intel chipsets<font color="#E5E5E5"> we're talking about the</font>

70
00:03:27,960 --> 00:03:33,420
North Bridge doing things like loading

71
00:03:29,900 --> 00:03:36,210
code from a flash chip<font color="#E5E5E5"> and poking it</font>

72
00:03:33,420 --> 00:03:39,660
into these addresses so basically<font color="#E5E5E5"> CPU</font>

73
00:03:36,210 --> 00:03:41,940
fires up voltages<font color="#E5E5E5"> settle resets at the</font>

74
00:03:39,660 --> 00:03:44,190
reset<font color="#CCCCCC"> vector the</font><font color="#E5E5E5"> Northbridge has already</font>

75
00:03:41,940 --> 00:03:46,740
come in and<font color="#E5E5E5"> it done some weird stuff</font><font color="#CCCCCC"> to</font>

76
00:03:44,190 --> 00:03:49,950
load the contents<font color="#E5E5E5"> of the flash ROM on</font>

77
00:03:46,740 --> 00:03:52,440
the system<font color="#E5E5E5"> board into these addresses in</font>

78
00:03:49,950 --> 00:03:54,269
l2<font color="#E5E5E5"> cache on the</font><font color="#CCCCCC"> cpu</font><font color="#E5E5E5"> so it's kind of</font>

79
00:03:52,440 --> 00:03:55,829
tricks it into thinking like hey you've

80
00:03:54,270 --> 00:04:01,740
got this stuff in memory you should

81
00:03:55,830 --> 00:04:03,410
start executing it<font color="#CCCCCC"> does a similar</font><font color="#E5E5E5"> thing</font>

82
00:04:01,740 --> 00:04:05,880
<font color="#CCCCCC">it's typically more implementation</font>

83
00:04:03,410 --> 00:04:08,609
<font color="#CCCCCC">specific and it's typically baked into</font>

84
00:04:05,880 --> 00:04:11,280
<font color="#E5E5E5">the CPU design example being on the</font>

85
00:04:08,610 --> 00:04:13,709
Raspberry Pi basically you've<font color="#CCCCCC"> got like a</font>

86
00:04:11,280 --> 00:04:16,108
stage<font color="#E5E5E5"> 0 bootloader that gets loaded from</font>

87
00:04:13,709 --> 00:04:19,079
an<font color="#E5E5E5"> SD card and the logic</font><font color="#CCCCCC"> to do that is</font>

88
00:04:16,108 --> 00:04:21,659
actually<font color="#E5E5E5"> baked</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> the CPU and it will</font>

89
00:04:19,079 --> 00:04:24,330
basically take<font color="#CCCCCC"> that boot 0</font><font color="#E5E5E5"> again poke it</font>

90
00:04:21,660 --> 00:04:27,510
<font color="#E5E5E5">into the CPU</font><font color="#CCCCCC"> cache and away you go</font><font color="#E5E5E5"> start</font>

91
00:04:24,330 --> 00:04:29,568
running<font color="#CCCCCC"> your very very basic bootloader</font>

92
00:04:27,510 --> 00:04:31,639
[Music]

93
00:04:29,569 --> 00:04:33,080
all this is absolutely invisible<font color="#E5E5E5"> to the</font>

94
00:04:31,639 --> 00:04:37,189
<font color="#CCCCCC">user which is</font><font color="#E5E5E5"> kind of the important</font>

95
00:04:33,080 --> 00:04:39,020
thing here<font color="#E5E5E5"> it's normally binary it's</font>

96
00:04:37,189 --> 00:04:41,240
norm normally source code you normally

97
00:04:39,020 --> 00:04:43,339
can't change it out<font color="#E5E5E5"> it's usually not</font>

98
00:04:41,240 --> 00:04:47,689
<font color="#E5E5E5">free and</font><font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> implementations of</font>

99
00:04:43,339 --> 00:04:49,069
<font color="#E5E5E5">this stuff at this level</font><font color="#CCCCCC"> but it is</font><font color="#E5E5E5"> very</font>

100
00:04:47,689 --> 00:04:51,080
important to<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> bringing up the</font>

101
00:04:49,069 --> 00:04:52,129
processor and bring up the<font color="#CCCCCC"> processor to</font>

102
00:04:51,080 --> 00:04:56,779
<font color="#E5E5E5">a state we can start addressing</font>

103
00:04:52,129 --> 00:04:59,119
peripherals<font color="#E5E5E5"> and essentially once you've</font>

104
00:04:56,779 --> 00:05:02,270
<font color="#E5E5E5">been through this state the processor is</font>

105
00:04:59,119 --> 00:05:07,209
in a<font color="#E5E5E5"> sort of situation where it's able</font>

106
00:05:02,270 --> 00:05:10,580
<font color="#E5E5E5">to maybe start looking in</font><font color="#CCCCCC"> SPI</font><font color="#E5E5E5"> flashes or</font>

107
00:05:07,209 --> 00:05:12,649
<font color="#E5E5E5">in the case</font><font color="#CCCCCC"> of parm</font><font color="#E5E5E5"> on an SD card for</font>

108
00:05:10,580 --> 00:05:15,068
the<font color="#E5E5E5"> next stage bootloader which I'll</font>

109
00:05:12,649 --> 00:05:18,229
refer<font color="#CCCCCC"> to</font><font color="#E5E5E5"> generally has boot code but</font>

110
00:05:15,069 --> 00:05:21,169
we're talking<font color="#E5E5E5"> about BIOS as UEFI</font>

111
00:05:18,229 --> 00:05:23,269
implementations<font color="#CCCCCC"> and in the case</font><font color="#E5E5E5"> of arm</font>

112
00:05:21,169 --> 00:05:30,529
systems it's usually a closed<font color="#E5E5E5"> source</font>

113
00:05:23,269 --> 00:05:31,580
system<font color="#CCCCCC"> just a general bootloader</font><font color="#E5E5E5"> so the</font>

114
00:05:30,529 --> 00:05:32,959
other thing that happens and this<font color="#E5E5E5"> is</font>

115
00:05:31,580 --> 00:05:35,389
<font color="#CCCCCC">becoming</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> and more prevalent and</font>

116
00:05:32,959 --> 00:05:39,740
<font color="#E5E5E5">it's spooky</font>

117
00:05:35,389 --> 00:05:42,050
hence the flight your<font color="#CCCCCC"> computer's</font><font color="#E5E5E5"> also</font>

118
00:05:39,740 --> 00:05:44,719
going<font color="#CCCCCC"> to start up and it's</font><font color="#E5E5E5"> gonna start</font>

119
00:05:42,050 --> 00:05:48,439
up a series of support<font color="#CCCCCC"> processors</font><font color="#E5E5E5"> this</font>

120
00:05:44,719 --> 00:05:50,469
<font color="#E5E5E5">is less common</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> arm systems Intel and</font>

121
00:05:48,439 --> 00:05:53,689
<font color="#E5E5E5">AMD systems have their own</font>

122
00:05:50,469 --> 00:05:57,169
implementations of<font color="#E5E5E5"> this technically</font>

123
00:05:53,689 --> 00:05:58,909
they're basically gonna fire up as soon

124
00:05:57,169 --> 00:06:01,549
<font color="#E5E5E5">as everything has power so they're not</font>

125
00:05:58,909 --> 00:06:06,259
actually<font color="#CCCCCC"> involved in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> process we just</font>

126
00:06:01,550 --> 00:06:08,659
talked about AMD has a processor<font color="#E5E5E5"> in</font>

127
00:06:06,259 --> 00:06:11,599
<font color="#E5E5E5">their CPUs</font><font color="#CCCCCC"> that does this</font><font color="#E5E5E5"> sort of weird</font>

128
00:06:08,659 --> 00:06:14,269
handshake with the hardware we'll talk

129
00:06:11,599 --> 00:06:16,128
<font color="#CCCCCC">about</font><font color="#E5E5E5"> that but essentially your computer</font>

130
00:06:14,269 --> 00:06:17,719
is<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> also in tandem</font><font color="#E5E5E5"> to the main</font>

131
00:06:16,129 --> 00:06:19,249
CPU be spinning up a whole bunch<font color="#E5E5E5"> of</font>

132
00:06:17,719 --> 00:06:23,229
other processes<font color="#CCCCCC"> whether</font><font color="#E5E5E5"> they're on</font><font color="#CCCCCC"> our</font>

133
00:06:19,249 --> 00:06:26,629
Bluetooth<font color="#E5E5E5"> chipsets network cards</font>

134
00:06:23,229 --> 00:06:28,579
external bare-metal control cards and

135
00:06:26,629 --> 00:06:29,990
<font color="#E5E5E5">also the security processor in modern</font>

136
00:06:28,579 --> 00:06:32,300
<font color="#E5E5E5">processors</font><font color="#CCCCCC"> is going to spin up at the</font>

137
00:06:29,990 --> 00:06:35,029
same<font color="#E5E5E5"> time so you</font><font color="#CCCCCC"> cook all of</font><font color="#E5E5E5"> this stuff</font>

138
00:06:32,300 --> 00:06:36,979
<font color="#E5E5E5">going on</font><font color="#CCCCCC"> none of it is visible to</font><font color="#E5E5E5"> you</font>

139
00:06:35,029 --> 00:06:38,310
you have no control<font color="#CCCCCC"> over the code that</font>

140
00:06:36,979 --> 00:06:46,169
<font color="#E5E5E5">runs on it it</font>

141
00:06:38,310 --> 00:06:48,720
<font color="#CCCCCC">a bit</font><font color="#E5E5E5"> scary once all of that's happened</font>

142
00:06:46,170 --> 00:06:50,880
<font color="#E5E5E5">and</font><font color="#CCCCCC"> you sort</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> staged the Euro boot</font>

143
00:06:48,720 --> 00:06:52,710
<font color="#CCCCCC">loader</font><font color="#E5E5E5"> has gotten the system</font><font color="#CCCCCC"> in a stage</font>

144
00:06:50,880 --> 00:06:57,570
where<font color="#CCCCCC"> it might</font><font color="#E5E5E5"> actually start</font><font color="#CCCCCC"> thinking</font>

145
00:06:52,710 --> 00:06:58,979
about<font color="#E5E5E5"> loading an operating system</font><font color="#CCCCCC"> that's</font>

146
00:06:57,570 --> 00:07:01,530
when you actually<font color="#CCCCCC"> load a boot loader and</font>

147
00:06:58,980 --> 00:07:06,990
that's always something<font color="#E5E5E5"> like you know</font>

148
00:07:01,530 --> 00:07:09,960
grub with Linux<font color="#CCCCCC"> gnu/linux NT loader</font>

149
00:07:06,990 --> 00:07:12,780
<font color="#CCCCCC">which Windows NT boot loader</font><font color="#E5E5E5"> launch</font><font color="#CCCCCC"> D on</font>

150
00:07:09,960 --> 00:07:14,280
<font color="#E5E5E5">OS</font><font color="#CCCCCC"> X</font><font color="#E5E5E5"> I bid on iOS H boot is the really</font>

151
00:07:12,780 --> 00:07:19,500
common<font color="#CCCCCC"> boot loader</font><font color="#E5E5E5"> on Android systems</font>

152
00:07:14,280 --> 00:07:22,080
<font color="#E5E5E5">dusty goo built on</font><font color="#CCCCCC"> most routers</font><font color="#E5E5E5"> these</font>

153
00:07:19,500 --> 00:07:23,750
are a little<font color="#E5E5E5"> more</font><font color="#CCCCCC"> common</font><font color="#E5E5E5"> a little less</font>

154
00:07:22,080 --> 00:07:26,219
implementation-specific and<font color="#E5E5E5"> these</font><font color="#CCCCCC"> 'm</font>

155
00:07:23,750 --> 00:07:27,780
<font color="#E5E5E5">there's a tendency for these to be open</font>

156
00:07:26,220 --> 00:07:32,760
<font color="#CCCCCC">source so for example the co boot is</font>

157
00:07:27,780 --> 00:07:36,380
<font color="#E5E5E5">open source I boot is despite</font><font color="#CCCCCC"> apples</font>

158
00:07:32,760 --> 00:07:39,990
intentions now open source not licensed

159
00:07:36,380 --> 00:07:42,840
grub that<font color="#CCCCCC"> is obviously</font><font color="#E5E5E5"> the grand unified</font>

160
00:07:39,990 --> 00:07:45,900
<font color="#CCCCCC">boot loader</font><font color="#E5E5E5"> it is a new project and it's</font>

161
00:07:42,840 --> 00:07:47,909
totally<font color="#CCCCCC"> open source</font><font color="#E5E5E5"> so this is where you</font>

162
00:07:45,900 --> 00:07:49,530
<font color="#E5E5E5">probably as a user have the first</font>

163
00:07:47,910 --> 00:07:51,320
opportunity<font color="#CCCCCC"> to start controlling what's</font>

164
00:07:49,530 --> 00:07:54,239
actually happening on<font color="#E5E5E5"> your computer</font>

165
00:07:51,320 --> 00:07:56,159
<font color="#CCCCCC">obviously if you run our</font><font color="#E5E5E5"> sex you've said</font>

166
00:07:54,240 --> 00:07:57,180
I<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> care and if you run Windows</font>

167
00:07:56,160 --> 00:08:02,390
you've said I<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> care</font>

168
00:07:57,180 --> 00:08:05,460
I trust you Apple<font color="#CCCCCC"> I trust you Microsoft</font>

169
00:08:02,390 --> 00:08:06,780
<font color="#E5E5E5">interestingly enough obviously these</font>

170
00:08:05,460 --> 00:08:09,659
<font color="#E5E5E5">things</font><font color="#CCCCCC"> being open source</font><font color="#E5E5E5"> doesn't make</font>

171
00:08:06,780 --> 00:08:12,270
them secure<font color="#E5E5E5"> because often the version of</font>

172
00:08:09,660 --> 00:08:14,100
you boot that you're running<font color="#E5E5E5"> the version</font>

173
00:08:12,270 --> 00:08:15,750
of grub you're running it's<font color="#E5E5E5"> not</font>

174
00:08:14,100 --> 00:08:17,130
necessarily up to date like that's

175
00:08:15,750 --> 00:08:22,920
that's<font color="#E5E5E5"> on you to keep that up to</font><font color="#CCCCCC"> date</font>

176
00:08:17,130 --> 00:08:25,110
<font color="#E5E5E5">basically these are these pieces of</font>

177
00:08:22,920 --> 00:08:27,560
software<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> their sole role in life</font>

178
00:08:25,110 --> 00:08:30,090
their whole<font color="#CCCCCC"> reason for existing is to</font>

179
00:08:27,560 --> 00:08:31,590
<font color="#CCCCCC">take your computer and start looking</font><font color="#E5E5E5"> at</font>

180
00:08:30,090 --> 00:08:33,390
storage devices where they might be<font color="#CCCCCC"> able</font>

181
00:08:31,590 --> 00:08:36,120
<font color="#CCCCCC">to load a more complicated operating</font>

182
00:08:33,390 --> 00:08:39,299
system<font color="#CCCCCC"> the examples</font><font color="#E5E5E5"> are here of course</font>

183
00:08:36,120 --> 00:08:41,370
<font color="#E5E5E5">OS X Linux iOS Android these are all way</font>

184
00:08:39,299 --> 00:08:43,020
too big<font color="#E5E5E5"> and complement complicated to</font>

185
00:08:41,370 --> 00:08:46,470
actually fit in the seat<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> died</font>

186
00:08:43,020 --> 00:08:48,040
or fit in like a small boot flash so you

187
00:08:46,470 --> 00:08:51,310
have<font color="#E5E5E5"> these stages</font>

188
00:08:48,040 --> 00:08:59,019
<font color="#CCCCCC">buuut and a lot of</font><font color="#E5E5E5"> code running that you</font>

189
00:08:51,310 --> 00:09:03,369
never see so we talked a little bit

190
00:08:59,019 --> 00:09:04,300
about<font color="#CCCCCC"> coprocessors before and some more</font>

191
00:09:03,370 --> 00:09:06,240
examples of<font color="#CCCCCC"> things</font><font color="#E5E5E5"> that might be</font>

192
00:09:04,300 --> 00:09:09,689
happening<font color="#CCCCCC"> when your machine starts up</font>

193
00:09:06,240 --> 00:09:12,550
things like firmware you know we've got

194
00:09:09,690 --> 00:09:15,579
<font color="#E5E5E5">Bluetooth chipsets in laptops and phones</font>

195
00:09:12,550 --> 00:09:17,199
these days<font color="#CCCCCC"> super convenient those</font>

196
00:09:15,579 --> 00:09:19,870
typically<font color="#E5E5E5"> have a small service processor</font>

197
00:09:17,199 --> 00:09:23,500
in them that<font color="#E5E5E5"> run a</font><font color="#CCCCCC"> binary</font><font color="#E5E5E5"> only firmware</font>

198
00:09:19,870 --> 00:09:25,779
to<font color="#E5E5E5"> actually do the Bluetooth bits</font><font color="#CCCCCC"> you</font>

199
00:09:23,500 --> 00:09:27,310
know those have essentially got

200
00:09:25,779 --> 00:09:29,259
potential<font color="#E5E5E5"> attack surface on them because</font>

201
00:09:27,310 --> 00:09:31,149
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> they're RF devices they can be</font>

202
00:09:29,259 --> 00:09:35,170
interacted with<font color="#E5E5E5"> from outside</font><font color="#CCCCCC"> of the</font>

203
00:09:31,149 --> 00:09:36,519
machine<font color="#CCCCCC"> these are almost</font><font color="#E5E5E5"> always required</font>

204
00:09:35,170 --> 00:09:39,579
to run<font color="#CCCCCC"> the chip</font><font color="#E5E5E5"> and they're almost</font>

205
00:09:36,519 --> 00:09:41,529
always<font color="#CCCCCC"> close source</font><font color="#E5E5E5"> you're essentially</font>

206
00:09:39,579 --> 00:09:43,449
by having<font color="#CCCCCC"> bluetooth enabled trusting the</font>

207
00:09:41,529 --> 00:09:45,189
vendor<font color="#CCCCCC"> of that device that they're being</font>

208
00:09:43,449 --> 00:09:46,149
proactive<font color="#E5E5E5"> about security and that</font>

209
00:09:45,190 --> 00:09:48,550
they're bringing your new firmware

210
00:09:46,149 --> 00:09:50,079
whenever they find an issue and<font color="#E5E5E5"> that</font>

211
00:09:48,550 --> 00:09:53,050
they<font color="#E5E5E5"> even think that issues are a real</font>

212
00:09:50,079 --> 00:09:56,079
thing<font color="#CCCCCC"> you've got things</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> add-on</font>

213
00:09:53,050 --> 00:09:58,000
cards<font color="#E5E5E5"> PCI boot roms for example when you</font>

214
00:09:56,079 --> 00:10:01,439
boot a computer over<font color="#E5E5E5"> the network to</font>

215
00:09:58,000 --> 00:10:04,149
<font color="#E5E5E5">deploy it say you're going to be running</font>

216
00:10:01,440 --> 00:10:05,470
like a PCI add-on<font color="#E5E5E5"> ROM that's called and</font>

217
00:10:04,149 --> 00:10:08,380
it's essentially something<font color="#CCCCCC"> that gets</font>

218
00:10:05,470 --> 00:10:10,930
<font color="#E5E5E5">loaded into the BIOS</font><font color="#CCCCCC"> gets executed</font><font color="#E5E5E5"> from</font>

219
00:10:08,380 --> 00:10:13,120
a flash chip on the PCI card<font color="#CCCCCC"> network</font>

220
00:10:10,930 --> 00:10:16,359
card<font color="#CCCCCC"> and it extends the</font><font color="#E5E5E5"> functionality of</font>

221
00:10:13,120 --> 00:10:18,459
the<font color="#E5E5E5"> BIOS there's not a lot of</font><font color="#CCCCCC"> security</font>

222
00:10:16,360 --> 00:10:21,819
or signing around these<font color="#E5E5E5"> usually you can</font>

223
00:10:18,459 --> 00:10:23,560
load alternate free<font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> boot</font>

224
00:10:21,819 --> 00:10:25,479
roms on a lot of cards a lot<font color="#E5E5E5"> of Intel</font>

225
00:10:23,560 --> 00:10:28,800
cards have<font color="#E5E5E5"> the ability to load things</font>

226
00:10:25,480 --> 00:10:35,550
like<font color="#CCCCCC"> IP x e and g</font><font color="#E5E5E5"> p XE to replace the</font>

227
00:10:28,800 --> 00:10:38,439
vendor maintained<font color="#E5E5E5"> chip contents and</font>

228
00:10:35,550 --> 00:10:40,839
people don't do<font color="#E5E5E5"> that stuff that really</font>

229
00:10:38,440 --> 00:10:43,329
<font color="#E5E5E5">so you're typically running potentially</font>

230
00:10:40,839 --> 00:10:47,889
the<font color="#E5E5E5"> firmware for these devices</font><font color="#CCCCCC"> that the</font>

231
00:10:43,329 --> 00:10:49,810
system<font color="#E5E5E5"> came with firmware</font><font color="#CCCCCC"> boot roms by</font>

232
00:10:47,889 --> 00:10:51,879
officers<font color="#E5E5E5"> typically don't get updated too</font>

233
00:10:49,810 --> 00:10:53,229
often because you<font color="#E5E5E5"> typically</font><font color="#CCCCCC"> also have to</font>

234
00:10:51,879 --> 00:10:55,569
reboot the<font color="#CCCCCC"> machine right</font><font color="#E5E5E5"> and that's</font>

235
00:10:53,230 --> 00:10:56,769
that's<font color="#E5E5E5"> very disruptive</font><font color="#CCCCCC"> when you take</font>

236
00:10:55,569 --> 00:10:59,050
<font color="#E5E5E5">that out</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> like the enterprise scale</font>

237
00:10:56,769 --> 00:11:01,240
<font color="#CCCCCC">you take</font><font color="#E5E5E5"> that out to production servers</font>

238
00:10:59,050 --> 00:11:04,329
<font color="#CCCCCC">this stuff's just not happening it's</font>

239
00:11:01,240 --> 00:11:06,100
just<font color="#E5E5E5"> not on people's radar</font><font color="#CCCCCC"> it's sort of</font>

240
00:11:04,329 --> 00:11:07,719
like<font color="#CCCCCC"> a third real class of systems here</font>

241
00:11:06,100 --> 00:11:11,129
in Co processes that are starting up a

242
00:11:07,720 --> 00:11:14,740
light<font color="#CCCCCC"> out</font><font color="#E5E5E5"> and BMC management cards</font>

243
00:11:11,129 --> 00:11:20,589
<font color="#CCCCCC">examples</font><font color="#E5E5E5"> of these like the dell idrac</font><font color="#CCCCCC"> or</font>

244
00:11:14,740 --> 00:11:22,560
HP ILO<font color="#E5E5E5"> IBM</font><font color="#CCCCCC"> i think they still call it I</font>

245
00:11:20,589 --> 00:11:25,509
think it's got a flash new name but

246
00:11:22,560 --> 00:11:27,099
they're<font color="#CCCCCC"> basically all ARM processors</font>

247
00:11:25,509 --> 00:11:29,170
sitting on a<font color="#E5E5E5"> PCI daughterboard</font>

248
00:11:27,100 --> 00:11:31,930
with a full OS like<font color="#E5E5E5"> full embedded OS</font>

249
00:11:29,170 --> 00:11:34,628
running<font color="#E5E5E5"> on them and network access</font><font color="#CCCCCC"> and</font>

250
00:11:31,930 --> 00:11:37,810
they typically got access if not to<font color="#CCCCCC"> the</font>

251
00:11:34,629 --> 00:11:41,439
host OS via<font color="#E5E5E5"> drivers that</font><font color="#CCCCCC"> are installed</font>

252
00:11:37,810 --> 00:11:43,750
<font color="#E5E5E5">in the host</font><font color="#CCCCCC"> OS also if</font><font color="#E5E5E5"> I you can just</font>

253
00:11:41,439 --> 00:11:45,219
reboot service with them typically<font color="#E5E5E5"> week</font>

254
00:11:43,750 --> 00:11:47,769
<font color="#E5E5E5">off indication on the most people use</font>

255
00:11:45,220 --> 00:11:50,009
the default passwords and typically you

256
00:11:47,769 --> 00:11:52,870
can get into like a show mode on them so

257
00:11:50,009 --> 00:11:54,279
again<font color="#CCCCCC"> you'd sort</font><font color="#E5E5E5"> of know you had one</font><font color="#CCCCCC"> of</font>

258
00:11:52,870 --> 00:11:56,740
these cards this wouldn't sneak up on

259
00:11:54,279 --> 00:11:58,750
you<font color="#CCCCCC"> but they're not</font><font color="#E5E5E5"> something that</font>

260
00:11:56,740 --> 00:12:02,290
necessarily gets updated<font color="#E5E5E5"> very often and</font>

261
00:11:58,750 --> 00:12:05,790
can also prevent present<font color="#CCCCCC"> a bit more</font>

262
00:12:02,290 --> 00:12:09,670
attack surface on a system there's been

263
00:12:05,790 --> 00:12:11,740
stacks of<font color="#E5E5E5"> CVS for these cards if you go</font>

264
00:12:09,670 --> 00:12:15,219
to any<font color="#E5E5E5"> CDE database just search dell</font>

265
00:12:11,740 --> 00:12:21,610
idrac<font color="#CCCCCC"> its eye watering authentication</font>

266
00:12:15,220 --> 00:12:23,290
<font color="#E5E5E5">bar bypasses code execution and people</font>

267
00:12:21,610 --> 00:12:24,430
don't<font color="#E5E5E5"> update them so they're off in a</font>

268
00:12:23,290 --> 00:12:25,980
really<font color="#CCCCCC"> good</font><font color="#E5E5E5"> place</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> start if you're</font>

269
00:12:24,430 --> 00:12:28,219
trying<font color="#CCCCCC"> to cause some havoc on</font><font color="#E5E5E5"> a</font>

270
00:12:25,980 --> 00:12:34,160
enterprise network

271
00:12:28,220 --> 00:12:37,580
<font color="#E5E5E5">I really just want to use this gift</font>

272
00:12:34,160 --> 00:12:41,540
<font color="#E5E5E5">that's why this slide exists</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> yeah</font>

273
00:12:37,580 --> 00:12:45,140
look I<font color="#E5E5E5"> mean in in summary boot code is</font>

274
00:12:41,540 --> 00:12:46,550
there to bring<font color="#E5E5E5"> the system up on system</font>

275
00:12:45,140 --> 00:12:49,189
on chips it's<font color="#E5E5E5"> typically referred to as</font>

276
00:12:46,550 --> 00:12:51,140
like a stage<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> all of these things</font>

277
00:12:49,190 --> 00:12:58,310
essentially perform the same function

278
00:12:51,140 --> 00:13:01,130
which is to make a computer usable<font color="#E5E5E5"> the</font>

279
00:12:58,310 --> 00:13:05,959
main sort<font color="#E5E5E5"> of key thing with the boot</font>

280
00:13:01,130 --> 00:13:08,470
code<font color="#E5E5E5"> which is you know BIOS UEFI it's</font>

281
00:13:05,960 --> 00:13:10,550
it's it's almost always closed source

282
00:13:08,470 --> 00:13:11,840
<font color="#CCCCCC">we'll find out</font><font color="#E5E5E5"> with the firmware as we</font>

283
00:13:10,550 --> 00:13:16,339
find<font color="#CCCCCC"> out with the stage zero boot</font>

284
00:13:11,840 --> 00:13:18,440
loaders<font color="#E5E5E5"> boot code is typically</font><font color="#CCCCCC"> only</font>

285
00:13:16,340 --> 00:13:20,200
generated by<font color="#E5E5E5"> a few companies</font><font color="#CCCCCC"> in the</font>

286
00:13:18,440 --> 00:13:23,270
world<font color="#E5E5E5"> american megatrends are an example</font>

287
00:13:20,200 --> 00:13:25,940
<font color="#E5E5E5">inside by us</font><font color="#CCCCCC"> intel's got a</font><font color="#E5E5E5"> reference</font>

288
00:13:23,270 --> 00:13:30,829
UEFI implementation they call Tiano now

289
00:13:25,940 --> 00:13:33,170
<font color="#E5E5E5">and they've got this really</font><font color="#CCCCCC"> great</font><font color="#E5E5E5"> catch</font>

290
00:13:30,830 --> 00:13:34,280
<font color="#CCCCCC">all-around licensing which means that</font>

291
00:13:33,170 --> 00:13:39,099
they don't<font color="#E5E5E5"> have to release the source</font>

292
00:13:34,280 --> 00:13:41,720
code the trend<font color="#CCCCCC"> away from open sourcing</font>

293
00:13:39,100 --> 00:13:45,020
<font color="#CCCCCC">the code</font><font color="#E5E5E5"> for these is often speculated</font>

294
00:13:41,720 --> 00:13:47,900
to<font color="#CCCCCC"> be related to government backdoors</font>

295
00:13:45,020 --> 00:13:52,449
is a really common<font color="#E5E5E5"> theory</font><font color="#CCCCCC"> licensing</font><font color="#E5E5E5"> is</font>

296
00:13:47,900 --> 00:13:55,579
usually the defense but due to the

297
00:13:52,450 --> 00:13:59,360
system wide access<font color="#E5E5E5"> the UEFI firmwares</font>

298
00:13:55,580 --> 00:14:01,670
and by us have it's pretty common<font color="#E5E5E5"> for</font>

299
00:13:59,360 --> 00:14:03,530
people to<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to in especially in the</font>

300
00:14:01,670 --> 00:14:05,329
hardware<font color="#E5E5E5"> liberation kind of community</font>

301
00:14:03,530 --> 00:14:06,530
<font color="#E5E5E5">want to replace the boot code</font><font color="#CCCCCC"> with</font>

302
00:14:05,330 --> 00:14:08,600
something a little<font color="#CCCCCC"> more little</font><font color="#E5E5E5"> bit more</font>

303
00:14:06,530 --> 00:14:11,630
<font color="#CCCCCC">palatable a little bit more open</font><font color="#E5E5E5"> source</font>

304
00:14:08,600 --> 00:14:15,380
<font color="#E5E5E5">and something they can sort of inspect</font>

305
00:14:11,630 --> 00:14:18,170
and sort<font color="#E5E5E5"> of know is secure and also just</font>

306
00:14:15,380 --> 00:14:20,450
add additional<font color="#E5E5E5"> features to old old</font>

307
00:14:18,170 --> 00:14:22,490
hardware<font color="#CCCCCC"> new code is something that</font>

308
00:14:20,450 --> 00:14:24,820
<font color="#CCCCCC">often limits the usability of older</font>

309
00:14:22,490 --> 00:14:24,820
hardware

310
00:14:29,059 --> 00:14:34,620
in recent<font color="#CCCCCC"> years we've sort of seen</font>

311
00:14:31,110 --> 00:14:37,050
<font color="#CCCCCC">technology</font><font color="#E5E5E5"> head towards the direction of</font>

312
00:14:34,620 --> 00:14:38,819
locking users out of choice<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of</font>

313
00:14:37,050 --> 00:14:40,258
<font color="#E5E5E5">similar to what has happened</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> the</font>

314
00:14:38,819 --> 00:14:42,628
years<font color="#E5E5E5"> with our gaming consoles as an</font>

315
00:14:40,259 --> 00:14:44,309
<font color="#E5E5E5">example</font><font color="#CCCCCC"> we're now in a situation where</font>

316
00:14:42,629 --> 00:14:48,509
essentially<font color="#E5E5E5"> if you buy a gaming console</font>

317
00:14:44,309 --> 00:14:50,519
<font color="#CCCCCC">you are essentially buying a license to</font>

318
00:14:48,509 --> 00:14:52,580
use<font color="#CCCCCC"> that machinery</font><font color="#E5E5E5"> but if you modify it</font>

319
00:14:50,519 --> 00:14:54,259
you're a breaching<font color="#CCCCCC"> your EULA</font>

320
00:14:52,580 --> 00:14:56,790
[Music]

321
00:14:54,259 --> 00:14:58,829
<font color="#CCCCCC">Technologies like a UEFI secure boot</font>

322
00:14:56,790 --> 00:15:04,230
they sort of come<font color="#E5E5E5"> with these cool words</font>

323
00:14:58,829 --> 00:15:05,819
like secure<font color="#E5E5E5"> in the name and they can't</font>

324
00:15:04,230 --> 00:15:07,410
<font color="#CCCCCC">improve the</font><font color="#E5E5E5"> security of a process</font>

325
00:15:05,819 --> 00:15:10,610
there's there's a real potential for

326
00:15:07,410 --> 00:15:14,939
<font color="#E5E5E5">someone to load I don't know like a</font>

327
00:15:10,610 --> 00:15:17,040
malicious<font color="#E5E5E5"> kernel modification then you</font>

328
00:15:14,939 --> 00:15:18,779
<font color="#E5E5E5">know could cook your real way into a</font>

329
00:15:17,040 --> 00:15:20,579
<font color="#E5E5E5">system you if you have kernel level</font>

330
00:15:18,779 --> 00:15:22,319
<font color="#E5E5E5">access</font><font color="#CCCCCC"> to a</font><font color="#E5E5E5"> system you're essentially</font>

331
00:15:20,579 --> 00:15:23,489
<font color="#E5E5E5">route or administrator</font><font color="#CCCCCC"> and there's</font>

332
00:15:22,319 --> 00:15:26,729
nothing stopping<font color="#CCCCCC"> you doing what you need</font>

333
00:15:23,490 --> 00:15:30,449
<font color="#CCCCCC">to do so locking down using encryption</font>

334
00:15:26,730 --> 00:15:32,550
and<font color="#E5E5E5"> key signing</font><font color="#CCCCCC"> the actual kernel</font>

335
00:15:30,449 --> 00:15:33,870
modules<font color="#CCCCCC"> themselves and the actual kernel</font>

336
00:15:32,550 --> 00:15:35,219
is like a really<font color="#CCCCCC"> good way to stop that</font>

337
00:15:33,870 --> 00:15:38,459
<font color="#CCCCCC">from</font><font color="#E5E5E5"> happening and to keep a system</font>

338
00:15:35,220 --> 00:15:42,629
<font color="#E5E5E5">secure</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> only problem with UEFI secure</font>

339
00:15:38,459 --> 00:15:44,248
boot<font color="#CCCCCC"> is most people turn it off and you</font>

340
00:15:42,629 --> 00:15:46,319
<font color="#CCCCCC">have</font><font color="#E5E5E5"> to actually have your binary signed</font>

341
00:15:44,249 --> 00:15:47,819
by Microsoft<font color="#CCCCCC"> thereby implementation the</font>

342
00:15:46,319 --> 00:15:51,899
only<font color="#E5E5E5"> people who are allowed</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> sign</font>

343
00:15:47,819 --> 00:15:53,849
things<font color="#E5E5E5"> are you can install your own key</font>

344
00:15:51,899 --> 00:15:56,519
<font color="#CCCCCC">routes like</font><font color="#E5E5E5"> a lot of system firmwares</font>

345
00:15:53,850 --> 00:15:58,290
have that capability<font color="#CCCCCC"> but most people</font>

346
00:15:56,519 --> 00:15:59,730
aren't<font color="#E5E5E5"> gonna go down that path like if</font>

347
00:15:58,290 --> 00:16:01,860
you want to say<font color="#CCCCCC"> like</font><font color="#E5E5E5"> hey you want to run</font>

348
00:15:59,730 --> 00:16:03,420
Mac you want<font color="#CCCCCC"> to run with</font><font color="#E5E5E5"> it eggs you've</font>

349
00:16:01,860 --> 00:16:05,100
got<font color="#CCCCCC"> a</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> install</font><font color="#E5E5E5"> your own key</font><font color="#CCCCCC"> root to</font>

350
00:16:03,420 --> 00:16:07,800
have this secure boot feature enabled

351
00:16:05,100 --> 00:16:09,959
people<font color="#E5E5E5"> they're not</font><font color="#CCCCCC"> going to do</font><font color="#E5E5E5"> it so it</font>

352
00:16:07,800 --> 00:16:12,979
relies<font color="#E5E5E5"> on Microsoft actually ordaining</font>

353
00:16:09,959 --> 00:16:15,449
<font color="#E5E5E5">an operating system to</font><font color="#CCCCCC"> run</font><font color="#E5E5E5"> on a system</font>

354
00:16:12,980 --> 00:16:18,290
<font color="#CCCCCC">it's kind of</font><font color="#E5E5E5"> a flawed implementation for</font>

355
00:16:15,449 --> 00:16:18,290
that<font color="#CCCCCC"> for that reason</font>

356
00:16:18,490 --> 00:16:23,990
in<font color="#E5E5E5"> even more recent</font><font color="#CCCCCC"> processors like our</font>

357
00:16:21,590 --> 00:16:26,050
<font color="#E5E5E5">skylake onwards I think it is om systems</font>

358
00:16:23,990 --> 00:16:29,720
have the capability of essentially

359
00:16:26,050 --> 00:16:32,630
<font color="#E5E5E5">burning into the CPU die</font><font color="#CCCCCC"> a series of</font>

360
00:16:29,720 --> 00:16:35,120
<font color="#E5E5E5">keys those keys</font><font color="#CCCCCC"> are then used to</font>

361
00:16:32,630 --> 00:16:37,430
<font color="#CCCCCC">authenticate</font><font color="#E5E5E5"> the boot code so the actual</font>

362
00:16:35,120 --> 00:16:39,220
system<font color="#CCCCCC"> bios UEFI intel have an</font>

363
00:16:37,430 --> 00:16:42,920
<font color="#CCCCCC">implementation of</font><font color="#E5E5E5"> this called boot guard</font>

364
00:16:39,220 --> 00:16:44,630
<font color="#CCCCCC">it basically relies on the processor</font><font color="#E5E5E5"> and</font>

365
00:16:42,920 --> 00:16:47,839
<font color="#E5E5E5">the system board me being manufactured</font>

366
00:16:44,630 --> 00:16:49,550
by the same person<font color="#CCCCCC"> and when they install</font>

367
00:16:47,840 --> 00:16:51,650
the CPU into the board

368
00:16:49,550 --> 00:16:53,000
they set a bunch of<font color="#CCCCCC"> CPU fuses that</font>

369
00:16:51,650 --> 00:16:55,189
contain the<font color="#CCCCCC"> CPUs</font><font color="#E5E5E5"> and once they've been</font>

370
00:16:53,000 --> 00:16:58,970
said you can't unset them or anything

371
00:16:55,190 --> 00:17:00,890
like<font color="#CCCCCC"> they're burned in this</font><font color="#E5E5E5"> obviously</font>

372
00:16:58,970 --> 00:17:02,590
stops<font color="#CCCCCC"> people from putting alternate</font>

373
00:17:00,890 --> 00:17:04,790
biases on these systems<font color="#CCCCCC"> it also</font>

374
00:17:02,590 --> 00:17:08,510
<font color="#E5E5E5">potentially mitigates the risk of things</font>

375
00:17:04,790 --> 00:17:13,280
like<font color="#E5E5E5"> like bad by us like malicious</font><font color="#CCCCCC"> BIOS</font>

376
00:17:08,510 --> 00:17:14,990
modifications designed to maintain

377
00:17:13,280 --> 00:17:16,940
persistence on a system<font color="#E5E5E5"> there's not a</font>

378
00:17:14,990 --> 00:17:18,260
lot of evidence<font color="#E5E5E5"> that this sort of stuff</font>

379
00:17:16,940 --> 00:17:22,250
actually<font color="#E5E5E5"> goes on it's more of a</font>

380
00:17:18,260 --> 00:17:26,629
theoretical attack but you<font color="#E5E5E5"> know it's</font>

381
00:17:22,250 --> 00:17:29,210
possible<font color="#E5E5E5"> so into a boot guard designed</font>

382
00:17:26,630 --> 00:17:34,310
to<font color="#E5E5E5"> sort of keep</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> BIOS locked to what</font>

383
00:17:29,210 --> 00:17:36,500
the vendor wants<font color="#E5E5E5"> you to run</font><font color="#CCCCCC"> what's</font>

384
00:17:34,310 --> 00:17:37,879
what's a bit awful about<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is it sort</font>

385
00:17:36,500 --> 00:17:41,000
of prevents you from modifying<font color="#E5E5E5"> a BIOS</font>

386
00:17:37,880 --> 00:17:42,950
and we've started to see things like

387
00:17:41,000 --> 00:17:44,660
<font color="#E5E5E5">digital</font><font color="#CCCCCC"> rights management technology</font>

388
00:17:42,950 --> 00:17:46,970
built into system firmwares

389
00:17:44,660 --> 00:17:48,850
and essentially into the<font color="#E5E5E5"> Intel</font>

390
00:17:46,970 --> 00:17:51,200
management engine<font color="#E5E5E5"> there</font><font color="#CCCCCC"> is built-in</font>

391
00:17:48,850 --> 00:17:53,270
system<font color="#E5E5E5"> there for enforcing digital</font>

392
00:17:51,200 --> 00:17:57,950
rights management again limiting user

393
00:17:53,270 --> 00:17:59,660
choice<font color="#E5E5E5"> so it's another one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> those</font>

394
00:17:57,950 --> 00:18:01,400
<font color="#E5E5E5">technologies</font><font color="#CCCCCC"> that sort of looks like it</font>

395
00:17:59,660 --> 00:18:05,150
<font color="#E5E5E5">it improves system security</font><font color="#CCCCCC"> and it it</font>

396
00:18:01,400 --> 00:18:07,100
does by all accounts<font color="#E5E5E5"> but it relies</font><font color="#CCCCCC"> on</font>

397
00:18:05,150 --> 00:18:09,710
Intel ordaining things and the vendor

398
00:18:07,100 --> 00:18:11,780
ordaining things and the problem then is

399
00:18:09,710 --> 00:18:13,700
<font color="#CCCCCC">you know if you're not running like an</font>

400
00:18:11,780 --> 00:18:16,639
open source<font color="#CCCCCC"> bios or something</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font>

401
00:18:13,700 --> 00:18:18,320
you<font color="#E5E5E5"> have absolutely no say in what gets</font>

402
00:18:16,640 --> 00:18:19,990
fixed<font color="#E5E5E5"> or the functionality that gets</font>

403
00:18:18,320 --> 00:18:22,840
added to<font color="#CCCCCC"> your system</font>

404
00:18:19,990 --> 00:18:24,580
<font color="#E5E5E5">by us to suffer from bit rot I challenge</font>

405
00:18:22,840 --> 00:18:26,770
<font color="#CCCCCC">you</font><font color="#E5E5E5"> to find a BIOS that</font><font color="#CCCCCC"> got a meltdown</font>

406
00:18:24,580 --> 00:18:30,220
<font color="#CCCCCC">on spec</font><font color="#E5E5E5"> to fix that was more than like</font>

407
00:18:26,770 --> 00:18:32,889
<font color="#E5E5E5">four years</font><font color="#CCCCCC"> old and you actually mind</font>

408
00:18:30,220 --> 00:18:37,330
<font color="#E5E5E5">that's kinda here or there</font>

409
00:18:32,890 --> 00:18:39,790
it's basically<font color="#E5E5E5"> putting control from a</font>

410
00:18:37,330 --> 00:18:41,889
security perspective<font color="#E5E5E5"> of</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> firmware</font>

411
00:18:39,790 --> 00:18:42,879
<font color="#CCCCCC">back in the</font><font color="#E5E5E5"> hands of the manufacturers</font>

412
00:18:41,890 --> 00:18:44,350
rather than back<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the hands of the</font>

413
00:18:42,880 --> 00:18:47,410
users in<font color="#CCCCCC"> the security community in</font>

414
00:18:44,350 --> 00:18:50,860
general<font color="#CCCCCC"> it's it's designed</font><font color="#E5E5E5"> to minimize</font>

415
00:18:47,410 --> 00:18:58,420
<font color="#CCCCCC">the attack surface but</font><font color="#E5E5E5"> yeah it limits</font>

416
00:18:50,860 --> 00:19:00,399
<font color="#E5E5E5">user choice on the topic of sort of</font>

417
00:18:58,420 --> 00:19:01,660
out-of-band management cards like bare

418
00:19:00,400 --> 00:19:04,510
metal controllers which we talked<font color="#E5E5E5"> about</font>

419
00:19:01,660 --> 00:19:06,250
<font color="#E5E5E5">earlier so</font><font color="#CCCCCC"> these are</font><font color="#E5E5E5"> these are kind of</font>

420
00:19:04,510 --> 00:19:10,300
<font color="#CCCCCC">interesting</font><font color="#E5E5E5"> because they're essentially</font>

421
00:19:06,250 --> 00:19:11,770
deliberate<font color="#E5E5E5"> backdoors you don't want</font>

422
00:19:10,300 --> 00:19:13,450
someone to log<font color="#CCCCCC"> into your system and have</font>

423
00:19:11,770 --> 00:19:15,100
access<font color="#CCCCCC"> to</font><font color="#E5E5E5"> your screen</font><font color="#CCCCCC"> keyboard and mouse</font>

424
00:19:13,450 --> 00:19:18,190
<font color="#CCCCCC">and be able</font><font color="#E5E5E5"> to turn</font><font color="#CCCCCC"> your computer on and</font>

425
00:19:15,100 --> 00:19:19,810
<font color="#E5E5E5">off but a lot of enterprise systems come</font>

426
00:19:18,190 --> 00:19:21,070
<font color="#CCCCCC">with these</font><font color="#E5E5E5"> cards installed a lot of</font>

427
00:19:19,810 --> 00:19:23,470
people<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> change the default</font>

428
00:19:21,070 --> 00:19:25,179
passwords on them<font color="#CCCCCC"> it's super common to</font>

429
00:19:23,470 --> 00:19:28,690
<font color="#E5E5E5">find these systems on corporate networks</font>

430
00:19:25,180 --> 00:19:32,760
with<font color="#CCCCCC"> Fadel our</font><font color="#E5E5E5"> route as the</font><font color="#CCCCCC"> username and</font>

431
00:19:28,690 --> 00:19:37,270
<font color="#E5E5E5">Calvin whoever Calvin is as the password</font>

432
00:19:32,760 --> 00:19:40,270
but it's kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> like an easy way into a</font>

433
00:19:37,270 --> 00:19:41,860
system really<font color="#CCCCCC"> there's also like a tack</font>

434
00:19:40,270 --> 00:19:44,260
surface there because you can<font color="#CCCCCC"> just wait</font>

435
00:19:41,860 --> 00:19:47,740
out an administrator needing to log<font color="#E5E5E5"> into</font>

436
00:19:44,260 --> 00:19:49,629
<font color="#E5E5E5">the console and people are not super</font>

437
00:19:47,740 --> 00:19:52,660
diligent<font color="#E5E5E5"> about logging out</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the actual</font>

438
00:19:49,630 --> 00:19:54,010
video card on servers<font color="#E5E5E5"> once they've done</font>

439
00:19:52,660 --> 00:19:55,630
<font color="#E5E5E5">what they needed to do bring the server</font>

440
00:19:54,010 --> 00:19:57,100
back<font color="#CCCCCC"> up from</font><font color="#E5E5E5"> like a power malfunction or</font>

441
00:19:55,630 --> 00:19:58,660
<font color="#E5E5E5">whatever they typically just close</font><font color="#CCCCCC"> their</font>

442
00:19:57,100 --> 00:20:00,159
<font color="#CCCCCC">remote management</font><font color="#E5E5E5"> console either leaving</font>

443
00:19:58,660 --> 00:20:02,500
a root console or an administrator

444
00:20:00,160 --> 00:20:03,730
logged in console on<font color="#E5E5E5"> the system so if</font>

445
00:20:02,500 --> 00:20:06,970
you can<font color="#E5E5E5"> find one of those through</font><font color="#CCCCCC"> there</font>

446
00:20:03,730 --> 00:20:11,440
the<font color="#CCCCCC"> out-of-band</font><font color="#E5E5E5"> management console</font><font color="#CCCCCC"> you</font>

447
00:20:06,970 --> 00:20:14,830
basically in<font color="#CCCCCC"> I mentioned before these</font>

448
00:20:11,440 --> 00:20:16,540
<font color="#CCCCCC">systems are kind</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> very closed doors</font>

449
00:20:14,830 --> 00:20:20,110
they're actually like entire computers

450
00:20:16,540 --> 00:20:21,639
<font color="#E5E5E5">running on a chip so security updates on</font>

451
00:20:20,110 --> 00:20:23,050
<font color="#E5E5E5">these are super important like I can't</font>

452
00:20:21,640 --> 00:20:25,180
stress that enough<font color="#CCCCCC"> and people don't do</font>

453
00:20:23,050 --> 00:20:26,590
them enough so if you<font color="#E5E5E5"> actually work in</font>

454
00:20:25,180 --> 00:20:29,300
an enterprise<font color="#CCCCCC"> that has lights-out</font>

455
00:20:26,590 --> 00:20:31,639
Management cards please update<font color="#E5E5E5"> them</font>

456
00:20:29,300 --> 00:20:37,820
<font color="#CCCCCC">there's a very very easy</font><font color="#E5E5E5"> way for people</font>

457
00:20:31,640 --> 00:20:39,770
<font color="#E5E5E5">to get into systems that's if your</font>

458
00:20:37,820 --> 00:20:43,909
vendor is still<font color="#CCCCCC"> actually issuing updates</font>

459
00:20:39,770 --> 00:20:45,410
<font color="#E5E5E5">for in line with this like this is a</font>

460
00:20:43,910 --> 00:20:48,230
feature<font color="#E5E5E5"> that used to just be relegated</font>

461
00:20:45,410 --> 00:20:50,570
to<font color="#CCCCCC"> Enterprise land and like really</font>

462
00:20:48,230 --> 00:20:53,180
<font color="#E5E5E5">expensive</font><font color="#CCCCCC"> servers like several thousand</font>

463
00:20:50,570 --> 00:20:57,530
dollar chassis systems<font color="#CCCCCC"> sit in data</font>

464
00:20:53,180 --> 00:20:59,090
centers<font color="#E5E5E5"> as recently as like it's less</font>

465
00:20:57,530 --> 00:21:02,750
<font color="#E5E5E5">than ten years</font><font color="#CCCCCC"> ago so it's recent in CPU</font>

466
00:20:59,090 --> 00:21:05,990
land<font color="#CCCCCC"> Intel introduced a functionality</font>

467
00:21:02,750 --> 00:21:08,080
<font color="#E5E5E5">called</font><font color="#CCCCCC"> a MT V Pro you might have seen</font>

468
00:21:05,990 --> 00:21:10,850
labeled on your new<font color="#CCCCCC"> Dell workstation</font>

469
00:21:08,080 --> 00:21:14,510
<font color="#CCCCCC">this is essentially in its earliest</font>

470
00:21:10,850 --> 00:21:16,909
incarnation<font color="#E5E5E5"> an ARCA processor sitting</font>

471
00:21:14,510 --> 00:21:19,070
inside the CPU die<font color="#E5E5E5"> running its own</font>

472
00:21:16,910 --> 00:21:22,520
<font color="#E5E5E5">operating system with access</font><font color="#CCCCCC"> to the</font>

473
00:21:19,070 --> 00:21:23,810
<font color="#E5E5E5">network card</font><font color="#CCCCCC"> OB</font><font color="#E5E5E5"> system designed to</font>

474
00:21:22,520 --> 00:21:27,740
provide lights-out management on

475
00:21:23,810 --> 00:21:29,690
workstation class systems<font color="#E5E5E5"> I mean like</font>

476
00:21:27,740 --> 00:21:34,100
those those words<font color="#CCCCCC"> should be pretty scary</font>

477
00:21:29,690 --> 00:21:36,260
but<font color="#CCCCCC"> they scare me and it's it's another</font>

478
00:21:34,100 --> 00:21:37,610
one of<font color="#CCCCCC"> those situations</font><font color="#E5E5E5"> where a a lot of</font>

479
00:21:36,260 --> 00:21:40,040
<font color="#CCCCCC">people buy</font><font color="#E5E5E5"> hardware with</font><font color="#CCCCCC"> these</font>

480
00:21:37,610 --> 00:21:41,510
<font color="#E5E5E5">functionality enabled they don't</font>

481
00:21:40,040 --> 00:21:44,360
configure it they<font color="#E5E5E5"> don't change the</font>

482
00:21:41,510 --> 00:21:46,610
passwords and again back to the point

483
00:21:44,360 --> 00:21:50,750
<font color="#CCCCCC">about vendors potentially not really</font>

484
00:21:46,610 --> 00:21:52,219
giving a about updating<font color="#E5E5E5"> these</font>

485
00:21:50,750 --> 00:21:54,740
things and taking<font color="#CCCCCC"> security seriously</font>

486
00:21:52,220 --> 00:21:59,360
<font color="#CCCCCC">there's been you know a couple</font><font color="#E5E5E5"> of really</font>

487
00:21:54,740 --> 00:22:01,820
notable<font color="#CCCCCC"> CVS against AM T</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> V Pro that</font>

488
00:21:59,360 --> 00:22:04,040
have allowed<font color="#E5E5E5"> unauthenticated access to</font>

489
00:22:01,820 --> 00:22:05,659
the AMT<font color="#E5E5E5"> web interface because it runs a</font>

490
00:22:04,040 --> 00:22:10,010
web server of<font color="#E5E5E5"> course it does</font>

491
00:22:05,660 --> 00:22:12,260
and actually the the attack vector was

492
00:22:10,010 --> 00:22:13,610
just not supplying a HT digest when you

493
00:22:12,260 --> 00:22:17,240
authenticate it<font color="#CCCCCC"> and that's latinas</font>

494
00:22:13,610 --> 00:22:19,760
administrator so pretty cool stuff

495
00:22:17,240 --> 00:22:23,420
pretty pretty like security 101 kind of

496
00:22:19,760 --> 00:22:26,740
stuff<font color="#E5E5E5"> and one of my favorite things is</font>

497
00:22:23,420 --> 00:22:28,450
<font color="#E5E5E5">like this idea that someone</font>

498
00:22:26,740 --> 00:22:30,310
<font color="#E5E5E5">design this feature and would have been</font>

499
00:22:28,450 --> 00:22:31,930
<font color="#E5E5E5">super</font><font color="#CCCCCC"> excited about it and would</font><font color="#E5E5E5"> have</font>

500
00:22:30,310 --> 00:22:34,060
<font color="#E5E5E5">been like oh wow you know</font><font color="#CCCCCC"> we can do this</font>

501
00:22:31,930 --> 00:22:35,830
amazing<font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> in the CPU we can control</font>

502
00:22:34,060 --> 00:22:37,600
it<font color="#CCCCCC"> from anywhere</font><font color="#E5E5E5"> in the world we can</font>

503
00:22:35,830 --> 00:22:41,949
turn the machine on and<font color="#CCCCCC"> off</font><font color="#E5E5E5"> we can give</font>

504
00:22:37,600 --> 00:22:44,530
<font color="#E5E5E5">access to</font><font color="#CCCCCC"> the console</font><font color="#E5E5E5"> never at any point</font>

505
00:22:41,950 --> 00:22:45,940
in the process<font color="#E5E5E5"> did they go</font><font color="#CCCCCC"> actually</font>

506
00:22:44,530 --> 00:22:49,350
<font color="#CCCCCC">that's a really bad</font><font color="#E5E5E5"> idea</font><font color="#CCCCCC"> that's a really</font>

507
00:22:45,940 --> 00:22:53,560
huge<font color="#E5E5E5"> security issue</font><font color="#CCCCCC"> why do I</font><font color="#E5E5E5"> want that</font>

508
00:22:49,350 --> 00:22:57,070
but sure enough Intel<font color="#E5E5E5"> baked it into the</font>

509
00:22:53,560 --> 00:22:58,690
processes<font color="#E5E5E5"> in doing so a lot of hardware</font>

510
00:22:57,070 --> 00:23:01,500
<font color="#CCCCCC">liberation community and like</font><font color="#E5E5E5"> hardware</font>

511
00:22:58,690 --> 00:23:04,480
security<font color="#E5E5E5"> community raised an eyebrow</font>

512
00:23:01,500 --> 00:23:05,470
<font color="#CCCCCC">okay this maybe isn't the</font><font color="#E5E5E5"> best idea have</font>

513
00:23:04,480 --> 00:23:06,910
you<font color="#E5E5E5"> guys thought about</font><font color="#CCCCCC"> the security</font>

514
00:23:05,470 --> 00:23:12,690
<font color="#E5E5E5">implications</font><font color="#CCCCCC"> or someone breaching this</font>

515
00:23:06,910 --> 00:23:15,700
processor<font color="#CCCCCC"> typical vendor response</font><font color="#E5E5E5"> it's</font>

516
00:23:12,690 --> 00:23:21,420
we've had the CVS there to show<font color="#CCCCCC"> that it</font>

517
00:23:15,700 --> 00:23:24,280
is<font color="#E5E5E5"> important to consider this systems</font>

518
00:23:21,420 --> 00:23:26,620
<font color="#E5E5E5">one of the main reasons</font><font color="#CCCCCC"> that this was</font>

519
00:23:24,280 --> 00:23:28,950
<font color="#E5E5E5">implemented anyway despite the security</font>

520
00:23:26,620 --> 00:23:31,179
<font color="#CCCCCC">implications is when you're managing</font>

521
00:23:28,950 --> 00:23:34,510
thousands<font color="#E5E5E5"> and thousands of workstations</font>

522
00:23:31,180 --> 00:23:36,910
<font color="#CCCCCC">in an enterprise</font><font color="#E5E5E5"> network</font><font color="#CCCCCC"> and you get a</font>

523
00:23:34,510 --> 00:23:39,550
call<font color="#CCCCCC"> from you know you've got</font><font color="#E5E5E5"> your</font>

524
00:23:36,910 --> 00:23:43,120
helpdesk centralized<font color="#E5E5E5"> somewhere somewhere</font>

525
00:23:39,550 --> 00:23:45,490
cost-effective and you know<font color="#E5E5E5"> your</font><font color="#CCCCCC"> cost</font>

526
00:23:43,120 --> 00:23:47,800
<font color="#CCCCCC">effective help Help Center is having</font>

527
00:23:45,490 --> 00:23:49,210
trouble walking

528
00:23:47,800 --> 00:23:50,379
the user who's calling through the

529
00:23:49,210 --> 00:23:54,490
process of<font color="#E5E5E5"> rebuilding their machine</font>

530
00:23:50,380 --> 00:23:55,930
<font color="#E5E5E5">because that fixes all problems</font><font color="#CCCCCC"> being</font>

531
00:23:54,490 --> 00:23:57,310
<font color="#E5E5E5">able to actually</font><font color="#CCCCCC"> just log into</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> vPro</font>

532
00:23:55,930 --> 00:23:59,110
interface and kick off a reboot<font color="#E5E5E5"> it's</font>

533
00:23:57,310 --> 00:24:00,970
super<font color="#E5E5E5"> helpful</font><font color="#CCCCCC"> and saves a lot of</font><font color="#E5E5E5"> time</font>

534
00:23:59,110 --> 00:24:03,820
<font color="#CCCCCC">saves a lot of</font><font color="#E5E5E5"> unnecessary Hardware</font>

535
00:24:00,970 --> 00:24:07,990
replacement<font color="#CCCCCC"> so you know</font><font color="#E5E5E5"> this is this is</font>

536
00:24:03,820 --> 00:24:10,689
enterprise driven<font color="#E5E5E5"> it's not as common in</font>

537
00:24:07,990 --> 00:24:12,310
home systems but all of the bits and

538
00:24:10,690 --> 00:24:14,200
pieces are there right like the<font color="#E5E5E5"> CPU</font>

539
00:24:12,310 --> 00:24:17,260
support said most<font color="#E5E5E5"> of the system boards</font>

540
00:24:14,200 --> 00:24:19,030
<font color="#CCCCCC">supported it is focused on fleet</font>

541
00:24:17,260 --> 00:24:20,980
management in enterprise<font color="#CCCCCC"> environments</font>

542
00:24:19,030 --> 00:24:22,810
and even<font color="#CCCCCC"> so even though it's an</font>

543
00:24:20,980 --> 00:24:24,790
enterprise<font color="#CCCCCC"> environment I've worked in</font>

544
00:24:22,810 --> 00:24:28,300
enough places<font color="#E5E5E5"> that don't</font><font color="#CCCCCC"> actually</font>

545
00:24:24,790 --> 00:24:31,530
configure it<font color="#E5E5E5"> to be secure that I have</font>

546
00:24:28,300 --> 00:24:31,530
<font color="#CCCCCC">opinions about it</font><font color="#E5E5E5"> being there</font>

547
00:24:35,490 --> 00:24:42,280
you're talking about<font color="#E5E5E5"> processes that are</font>

548
00:24:39,070 --> 00:24:43,480
<font color="#E5E5E5">embedded inside processes AMD's got</font>

549
00:24:42,280 --> 00:24:46,450
their own thing<font color="#E5E5E5"> which is called the</font>

550
00:24:43,480 --> 00:24:47,770
platform service processor platform

551
00:24:46,450 --> 00:24:51,220
security processor it's right there on

552
00:24:47,770 --> 00:24:53,500
<font color="#CCCCCC">the</font><font color="#E5E5E5"> slide James its present in</font><font color="#CCCCCC"> 16h and</font>

553
00:24:51,220 --> 00:24:55,600
higher AMD processors so like the much

554
00:24:53,500 --> 00:24:58,170
older<font color="#CCCCCC"> or</font><font color="#E5E5E5"> they're like torrents and</font>

555
00:24:55,600 --> 00:25:00,689
<font color="#E5E5E5">things like that they didn't have this</font>

556
00:24:58,170 --> 00:25:04,300
essentially<font color="#CCCCCC"> Hardware initialization on</font>

557
00:25:00,690 --> 00:25:07,060
AMD<font color="#E5E5E5"> processors is currently and was</font>

558
00:25:04,300 --> 00:25:10,480
previously<font color="#E5E5E5"> handled by an open source</font>

559
00:25:07,060 --> 00:25:12,730
library<font color="#CCCCCC"> called a GSA</font><font color="#E5E5E5"> AG ESA and that was</font>

560
00:25:10,480 --> 00:25:14,380
a totally totally<font color="#E5E5E5"> open source so the</font>

561
00:25:12,730 --> 00:25:16,660
<font color="#E5E5E5">sources that had been provided to like a</font>

562
00:25:14,380 --> 00:25:21,970
bunch of open<font color="#E5E5E5"> source firmware vendors</font>

563
00:25:16,660 --> 00:25:24,430
and vendors projects<font color="#E5E5E5"> and basically it</font>

564
00:25:21,970 --> 00:25:27,340
meant that<font color="#E5E5E5"> you could write a firmware</font>

565
00:25:24,430 --> 00:25:29,200
<font color="#E5E5E5">for an AMD</font><font color="#CCCCCC"> processor and all of the</font>

566
00:25:27,340 --> 00:25:31,689
hardware bring up was handled for you by

567
00:25:29,200 --> 00:25:33,640
this<font color="#E5E5E5"> library when they introduced the</font>

568
00:25:31,690 --> 00:25:36,250
security processor they moved all of

569
00:25:33,640 --> 00:25:38,410
<font color="#E5E5E5">that responsibility into this it's</font>

570
00:25:36,250 --> 00:25:41,200
actually<font color="#E5E5E5"> an ARM processor so it's an ARM</font>

571
00:25:38,410 --> 00:25:43,450
processor inside an x86 processor that

572
00:25:41,200 --> 00:25:47,790
provides all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the security</font><font color="#CCCCCC"> features</font>

573
00:25:43,450 --> 00:25:50,890
like TPM<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it also is heavily heavily</font>

574
00:25:47,790 --> 00:25:54,520
linked to<font color="#E5E5E5"> Hardware initialization so you</font>

575
00:25:50,890 --> 00:25:57,190
actually<font color="#E5E5E5"> can't turn an AMD x86 processor</font>

576
00:25:54,520 --> 00:25:58,990
on without the tiny little ARM processor

577
00:25:57,190 --> 00:26:00,970
inside saying it's<font color="#CCCCCC"> okay and setting up</font>

578
00:25:58,990 --> 00:26:07,900
<font color="#E5E5E5">all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> memory timings and everything so</font>

579
00:26:00,970 --> 00:26:09,550
it's super embedded yeah it's like an a5

580
00:26:07,900 --> 00:26:11,290
so it's<font color="#E5E5E5"> reasonably powerful like it's</font>

581
00:26:09,550 --> 00:26:13,360
<font color="#E5E5E5">not what the arc caused in the early</font>

582
00:26:11,290 --> 00:26:16,770
<font color="#E5E5E5">Intel processors were really really</font>

583
00:26:13,360 --> 00:26:19,899
underpowered like<font color="#E5E5E5"> 100 megahertz or less</font>

584
00:26:16,770 --> 00:26:24,060
this<font color="#E5E5E5"> is a cortex a5 it runs a full</font>

585
00:26:19,900 --> 00:26:24,060
<font color="#E5E5E5">real-time operating system inside</font>

586
00:26:24,120 --> 00:26:29,429
<font color="#E5E5E5">I mentioned it implements things like</font>

587
00:26:26,010 --> 00:26:32,070
that<font color="#E5E5E5"> at the TPM so what that means is</font>

588
00:26:29,430 --> 00:26:34,110
the inside the flash regions which are

589
00:26:32,070 --> 00:26:36,689
<font color="#CCCCCC">allocated to the</font><font color="#E5E5E5"> platform security</font>

590
00:26:34,110 --> 00:26:39,000
processor<font color="#E5E5E5"> you've got user credentials</font>

591
00:26:36,690 --> 00:26:42,210
you've got encryption<font color="#CCCCCC"> keys that</font><font color="#E5E5E5"> people</font>

592
00:26:39,000 --> 00:26:43,980
have stored in the TPM<font color="#CCCCCC"> because the TPM</font>

593
00:26:42,210 --> 00:26:47,310
on these<font color="#E5E5E5"> processes is a software device</font>

594
00:26:43,980 --> 00:26:49,080
it's<font color="#E5E5E5"> not a hardware</font><font color="#CCCCCC"> device you know it'd</font>

595
00:26:47,310 --> 00:26:50,940
be really really<font color="#CCCCCC"> sad if there was a</font><font color="#E5E5E5"> CV</font>

596
00:26:49,080 --> 00:26:54,629
that<font color="#E5E5E5"> allowed code execution on these</font>

597
00:26:50,940 --> 00:26:57,510
<font color="#E5E5E5">processes</font><font color="#CCCCCC"> they also have access</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

598
00:26:54,630 --> 00:26:59,130
<font color="#CCCCCC">host memory</font><font color="#E5E5E5"> which is pretty cool so if</font>

599
00:26:57,510 --> 00:27:00,480
you see erratically got into one<font color="#E5E5E5"> of</font>

600
00:26:59,130 --> 00:27:02,490
these<font color="#CCCCCC"> machines</font><font color="#E5E5E5"> and had code execution</font>

601
00:27:00,480 --> 00:27:07,440
<font color="#E5E5E5">you would essentially have readwrite</font>

602
00:27:02,490 --> 00:27:09,660
memory access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> host</font><font color="#CCCCCC"> I have a</font>

603
00:27:07,440 --> 00:27:14,580
<font color="#E5E5E5">diagram here it's kind of small</font>

604
00:27:09,660 --> 00:27:17,190
unfortunately it's meant to<font color="#E5E5E5"> show you all</font>

605
00:27:14,580 --> 00:27:19,949
<font color="#CCCCCC">of the stuff going on</font><font color="#E5E5E5"> inside the little</font>

606
00:27:17,190 --> 00:27:24,000
<font color="#E5E5E5">ARM processor and how it's just part of</font>

607
00:27:19,950 --> 00:27:26,280
<font color="#E5E5E5">the arm</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> the AMD processor talked</font>

608
00:27:24,000 --> 00:27:27,990
<font color="#CCCCCC">about the TPM</font><font color="#E5E5E5"> there have been</font>

609
00:27:26,280 --> 00:27:30,690
vulnerabilities so you can absolutely

610
00:27:27,990 --> 00:27:34,200
achieve code execution inside the TPM on

611
00:27:30,690 --> 00:27:36,930
these<font color="#E5E5E5"> processes there's also been a</font><font color="#CCCCCC"> lot</font>

612
00:27:34,200 --> 00:27:42,480
<font color="#E5E5E5">of the recent security announcements AMD</font>

613
00:27:36,930 --> 00:27:44,460
<font color="#E5E5E5">flaws the former was a very legitimate</font>

614
00:27:42,480 --> 00:27:46,740
<font color="#E5E5E5">security issue like it basically meant</font>

615
00:27:44,460 --> 00:27:49,970
you could dump credentials if you had

616
00:27:46,740 --> 00:27:49,970
access<font color="#E5E5E5"> to the TPM</font>

617
00:27:50,770 --> 00:27:55,840
AMD<font color="#CCCCCC"> floors is</font><font color="#E5E5E5"> a little less it's more of</font>

618
00:27:53,800 --> 00:27:57,490
a persistence<font color="#E5E5E5"> being at best it was</font>

619
00:27:55,840 --> 00:28:00,939
really played<font color="#CCCCCC"> up as like you know</font><font color="#E5E5E5"> the</font>

620
00:27:57,490 --> 00:28:02,440
next<font color="#CCCCCC"> big security issue</font><font color="#E5E5E5"> but it really</font>

621
00:28:00,940 --> 00:28:05,560
<font color="#CCCCCC">looks like it was probably just a stock</font>

622
00:28:02,440 --> 00:28:09,970
manipulation you need like local admin

623
00:28:05,560 --> 00:28:11,889
<font color="#E5E5E5">on the machine to exploit this at best</font>

624
00:28:09,970 --> 00:28:13,690
you using it<font color="#E5E5E5"> to like inject code into</font>

625
00:28:11,890 --> 00:28:15,730
the<font color="#CCCCCC"> platform security processor to stay</font>

626
00:28:13,690 --> 00:28:17,320
a resident<font color="#E5E5E5"> but it's not actually giving</font>

627
00:28:15,730 --> 00:28:18,820
you any sort<font color="#CCCCCC"> of extra privilege that</font>

628
00:28:17,320 --> 00:28:25,750
having<font color="#E5E5E5"> local admin</font><font color="#CCCCCC"> whom the</font><font color="#E5E5E5"> Machine</font>

629
00:28:18,820 --> 00:28:28,540
wouldn't<font color="#E5E5E5"> give you so</font><font color="#CCCCCC"> arm</font><font color="#E5E5E5"> processors also</font>

630
00:28:25,750 --> 00:28:30,340
implement a similar thing just whilst

631
00:28:28,540 --> 00:28:33,730
we're talking about<font color="#CCCCCC"> AMD's I mentioned</font>

632
00:28:30,340 --> 00:28:39,459
was an ARM processor um<font color="#CCCCCC"> trust zone</font><font color="#E5E5E5"> is</font>

633
00:28:33,730 --> 00:28:44,020
<font color="#E5E5E5">security implementation forearm</font><font color="#CCCCCC"> is the</font>

634
00:28:39,460 --> 00:28:45,730
<font color="#CCCCCC">security implementation for AMD AMD runs</font>

635
00:28:44,020 --> 00:28:48,280
an ARM processor for security and that

636
00:28:45,730 --> 00:28:51,640
ARM processor also<font color="#CCCCCC"> has its</font><font color="#E5E5E5"> own secret</font>

637
00:28:48,280 --> 00:28:54,250
<font color="#CCCCCC">processors inside it under</font><font color="#E5E5E5"> trust zone so</font>

638
00:28:51,640 --> 00:28:58,060
you know<font color="#E5E5E5"> yo dawg i heard you like</font>

639
00:28:54,250 --> 00:29:01,200
coprocessors<font color="#E5E5E5"> basically arm trust zone is</font>

640
00:28:58,060 --> 00:29:04,780
actually not so<font color="#E5E5E5"> much individual CPU dies</font>

641
00:29:01,200 --> 00:29:08,320
it allows you to partition<font color="#E5E5E5"> an ARM</font>

642
00:29:04,780 --> 00:29:09,370
processor into multiple worlds<font color="#E5E5E5"> and</font>

643
00:29:08,320 --> 00:29:12,669
they're called so they're just<font color="#E5E5E5"> like</font>

644
00:29:09,370 --> 00:29:14,770
<font color="#E5E5E5">memory regions certain memory allocated</font>

645
00:29:12,670 --> 00:29:15,820
to what's called the secure world or<font color="#CCCCCC"> SW</font>

646
00:29:14,770 --> 00:29:17,860
<font color="#CCCCCC">d can't</font>

647
00:29:15,820 --> 00:29:19,840
it's totally<font color="#CCCCCC"> invisible and it's also</font>

648
00:29:17,860 --> 00:29:22,659
inaccessible to the normal<font color="#CCCCCC"> world which</font>

649
00:29:19,840 --> 00:29:23,830
is where your code runs<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> blinky</font>

650
00:29:22,660 --> 00:29:28,090
light demo<font color="#E5E5E5"> that's running on your</font>

651
00:29:23,830 --> 00:29:30,340
Raspberry Pi actually can't see the

652
00:29:28,090 --> 00:29:32,770
secure world<font color="#E5E5E5"> at all and on ARM</font>

653
00:29:30,340 --> 00:29:34,780
processors things like you typically

654
00:29:32,770 --> 00:29:36,970
<font color="#E5E5E5">only</font><font color="#CCCCCC"> see these in really expensive arm</font>

655
00:29:34,780 --> 00:29:39,190
systems like<font color="#CCCCCC"> server</font><font color="#E5E5E5"> systems but they</font>

656
00:29:36,970 --> 00:29:41,650
have<font color="#CCCCCC"> TP M's and</font><font color="#E5E5E5"> all that sort of stuff</font>

657
00:29:39,190 --> 00:29:44,170
<font color="#E5E5E5">built into</font><font color="#CCCCCC"> them to make them competitive</font>

658
00:29:41,650 --> 00:29:47,200
as server systems but<font color="#E5E5E5"> they're actually</font>

659
00:29:44,170 --> 00:29:50,820
<font color="#E5E5E5">again just software running inside</font><font color="#CCCCCC"> the</font>

660
00:29:47,200 --> 00:29:50,820
secure world on these<font color="#E5E5E5"> processes</font>

661
00:29:51,990 --> 00:29:58,570
it's a little bit of a<font color="#E5E5E5"> diagram so orange</font>

662
00:29:55,570 --> 00:30:01,629
being the normal world<font color="#CCCCCC"> blue being the</font>

663
00:29:58,570 --> 00:30:03,100
secure world<font color="#E5E5E5"> the important thing to</font>

664
00:30:01,630 --> 00:30:08,080
<font color="#E5E5E5">remember about</font><font color="#CCCCCC"> ARM processors is they're</font>

665
00:30:03,100 --> 00:30:10,060
actually<font color="#E5E5E5"> extremely variable</font><font color="#CCCCCC"> between</font>

666
00:30:08,080 --> 00:30:11,889
vendors<font color="#E5E5E5"> so</font><font color="#CCCCCC"> arm only really sort</font><font color="#E5E5E5"> of gives</font>

667
00:30:10,060 --> 00:30:13,450
<font color="#CCCCCC">out</font><font color="#E5E5E5"> generic reference implementations</font>

668
00:30:11,890 --> 00:30:15,280
for<font color="#E5E5E5"> ARM processors and then it's up</font><font color="#CCCCCC"> to</font>

669
00:30:13,450 --> 00:30:17,230
the individual vendors to do something

670
00:30:15,280 --> 00:30:21,460
with that<font color="#CCCCCC"> and do it securely</font><font color="#E5E5E5"> which</font>

671
00:30:17,230 --> 00:30:22,990
<font color="#E5E5E5">always goes great</font><font color="#CCCCCC"> the secure world</font><font color="#E5E5E5"> has</font>

672
00:30:21,460 --> 00:30:25,600
this thing<font color="#CCCCCC"> called the monitor running</font>

673
00:30:22,990 --> 00:30:27,100
<font color="#E5E5E5">which is actually what gates access in</font>

674
00:30:25,600 --> 00:30:29,500
and out of things running<font color="#CCCCCC"> in</font><font color="#E5E5E5"> secure</font>

675
00:30:27,100 --> 00:30:31,480
world so you've got a TPM running<font color="#E5E5E5"> in</font>

676
00:30:29,500 --> 00:30:33,370
<font color="#E5E5E5">secure world you you do need to expose</font>

677
00:30:31,480 --> 00:30:36,060
that<font color="#CCCCCC"> to the normal</font><font color="#E5E5E5"> world somehow so you</font>

678
00:30:33,370 --> 00:30:39,100
can actually<font color="#E5E5E5"> implement an API to</font><font color="#CCCCCC"> access</font>

679
00:30:36,060 --> 00:30:40,419
securely the secrets<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's that's</font>

680
00:30:39,100 --> 00:30:44,320
<font color="#E5E5E5">the monitors job so there's basically</font>

681
00:30:40,420 --> 00:30:46,540
special registers that<font color="#E5E5E5"> get set when</font>

682
00:30:44,320 --> 00:30:48,429
<font color="#E5E5E5">you're running code that are</font>

683
00:30:46,540 --> 00:30:52,180
authenticated<font color="#E5E5E5"> by this code that</font><font color="#CCCCCC"> is</font>

684
00:30:48,430 --> 00:30:53,620
<font color="#E5E5E5">running in this secure world they're</font>

685
00:30:52,180 --> 00:30:57,370
kind of<font color="#E5E5E5"> like interrupts</font><font color="#CCCCCC"> that you can</font>

686
00:30:53,620 --> 00:30:59,290
<font color="#E5E5E5">fire and you can pass</font><font color="#CCCCCC"> parameters so what</font>

687
00:30:57,370 --> 00:31:02,620
actually<font color="#CCCCCC"> happens is the execution of</font>

688
00:30:59,290 --> 00:31:04,750
<font color="#E5E5E5">those instructions then has access</font><font color="#CCCCCC"> to</font>

689
00:31:02,620 --> 00:31:06,489
the secure<font color="#E5E5E5"> world really briefly in like</font>

690
00:31:04,750 --> 00:31:07,840
a certain way that<font color="#E5E5E5"> the secure world has</font>

691
00:31:06,490 --> 00:31:10,210
to respond to so it's essentially kind

692
00:31:07,840 --> 00:31:12,959
<font color="#E5E5E5">of like a REST API</font><font color="#CCCCCC"> in a in a</font><font color="#E5E5E5"> processor</font>

693
00:31:10,210 --> 00:31:15,970
it's it's pretty<font color="#CCCCCC"> heavy-duty stuff but</font>

694
00:31:12,960 --> 00:31:19,660
<font color="#E5E5E5">essentially it means that you can have</font>

695
00:31:15,970 --> 00:31:21,930
<font color="#CCCCCC">specific calls running to access the</font>

696
00:31:19,660 --> 00:31:23,920
secure world<font color="#CCCCCC"> to retrieve data and</font>

697
00:31:21,930 --> 00:31:27,550
basically<font color="#E5E5E5"> that's available to the normal</font>

698
00:31:23,920 --> 00:31:28,840
<font color="#E5E5E5">world</font><font color="#CCCCCC"> and like most API</font><font color="#E5E5E5"> is it has</font>

699
00:31:27,550 --> 00:31:31,540
security vulnerabilities which is

700
00:31:28,840 --> 00:31:33,550
exactly<font color="#E5E5E5"> how the the TPM code execution</font>

701
00:31:31,540 --> 00:31:35,020
was achieved there was I<font color="#E5E5E5"> think it was</font>

702
00:31:33,550 --> 00:31:38,919
actually a simple buffer overflow in one

703
00:31:35,020 --> 00:31:40,510
of the api's and once you've got code

704
00:31:38,920 --> 00:31:42,010
exec<font color="#E5E5E5"> in</font><font color="#CCCCCC"> secure world you've actually got</font>

705
00:31:40,510 --> 00:31:43,720
access<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the entire host memory</font>

706
00:31:42,010 --> 00:31:46,720
<font color="#E5E5E5">whatever</font><font color="#CCCCCC"> you're running in there can't</font>

707
00:31:43,720 --> 00:31:48,990
<font color="#E5E5E5">be seen by normal world so it's a super</font>

708
00:31:46,720 --> 00:31:48,990
<font color="#E5E5E5">nasty</font>

709
00:31:49,510 --> 00:31:55,140
<font color="#CCCCCC">I also mentioned the implementations are</font>

710
00:31:51,580 --> 00:31:58,689
extremely vendor specific so for example

711
00:31:55,140 --> 00:32:03,510
<font color="#E5E5E5">Volcom</font><font color="#CCCCCC"> their their implementation of</font>

712
00:31:58,690 --> 00:32:05,770
<font color="#CCCCCC">trustzone is</font><font color="#E5E5E5"> called Q SEC q</font><font color="#CCCCCC"> SE</font><font color="#E5E5E5"> e and</font>

713
00:32:03,510 --> 00:32:08,290
<font color="#CCCCCC">Qualcomm</font><font color="#E5E5E5"> secure execution environment</font>

714
00:32:05,770 --> 00:32:12,610
<font color="#CCCCCC">off the top of</font><font color="#E5E5E5"> my head and they also had</font>

715
00:32:08,290 --> 00:32:15,280
a<font color="#E5E5E5"> CVO that was a codec</font><font color="#CCCCCC"> in secure world</font>

716
00:32:12,610 --> 00:32:17,889
and it was an API that<font color="#CCCCCC"> they had</font>

717
00:32:15,280 --> 00:32:19,960
implemented<font color="#E5E5E5"> in the secure world to allow</font>

718
00:32:17,890 --> 00:32:23,290
<font color="#CCCCCC">access to like media files or</font><font color="#E5E5E5"> something</font>

719
00:32:19,960 --> 00:32:25,660
and it basically allowed code exact

720
00:32:23,290 --> 00:32:31,360
because<font color="#E5E5E5"> it's just an API</font><font color="#CCCCCC"> and they didn't</font>

721
00:32:25,660 --> 00:32:33,520
write it well<font color="#CCCCCC"> so the main the main thing</font>

722
00:32:31,360 --> 00:32:34,840
<font color="#E5E5E5">I think</font><font color="#CCCCCC"> that is probably</font><font color="#E5E5E5"> the most</font>

723
00:32:33,520 --> 00:32:37,660
<font color="#E5E5E5">interesting about this</font><font color="#CCCCCC"> world</font><font color="#E5E5E5"> of</font>

724
00:32:34,840 --> 00:32:39,879
coprocessors and like secret<font color="#E5E5E5"> code</font><font color="#CCCCCC"> and</font>

725
00:32:37,660 --> 00:32:41,950
all that sort of stuff<font color="#CCCCCC"> is</font><font color="#E5E5E5"> Intel</font>

726
00:32:39,880 --> 00:32:43,990
management engine there's been a lot of

727
00:32:41,950 --> 00:32:47,500
focus on<font color="#E5E5E5"> the Intel management engine I</font>

728
00:32:43,990 --> 00:32:50,290
think white quite rightly<font color="#E5E5E5"> it's been</font>

729
00:32:47,500 --> 00:32:53,200
around for a while<font color="#CCCCCC"> so sort</font><font color="#E5E5E5"> of post Core</font>

730
00:32:50,290 --> 00:32:57,129
2 Duo<font color="#CCCCCC"> were the very early</font>

731
00:32:53,200 --> 00:33:00,540
implementations<font color="#CCCCCC"> it is the hardware side</font>

732
00:32:57,130 --> 00:33:02,530
of<font color="#E5E5E5"> AMT and</font><font color="#CCCCCC"> vPro so it's actually</font><font color="#E5E5E5"> the</font>

733
00:33:00,540 --> 00:33:06,450
hardware<font color="#CCCCCC"> implementation that is</font>

734
00:33:02,530 --> 00:33:09,430
basically allowing AMT<font color="#E5E5E5"> which is a</font>

735
00:33:06,450 --> 00:33:11,680
software<font color="#E5E5E5"> product to dial into your</font>

736
00:33:09,430 --> 00:33:14,040
process and to dial into your system and

737
00:33:11,680 --> 00:33:16,870
<font color="#CCCCCC">do things</font><font color="#E5E5E5"> like reboot the machine or</font>

738
00:33:14,040 --> 00:33:21,490
<font color="#E5E5E5">yeah like mount virtual</font><font color="#CCCCCC"> media</font><font color="#E5E5E5"> all this</font>

739
00:33:16,870 --> 00:33:22,659
stuff<font color="#E5E5E5"> that it can do it's integrated</font>

740
00:33:21,490 --> 00:33:26,080
into<font color="#E5E5E5"> what's</font><font color="#CCCCCC"> called the platform</font>

741
00:33:22,660 --> 00:33:28,360
controller hub<font color="#E5E5E5"> and that's essentially</font>

742
00:33:26,080 --> 00:33:31,659
the<font color="#E5E5E5"> majority of the functionality</font><font color="#CCCCCC"> of the</font>

743
00:33:28,360 --> 00:33:35,199
Northbridge chip<font color="#E5E5E5"> Northbridge chip on the</font>

744
00:33:31,660 --> 00:33:37,960
system board<font color="#E5E5E5"> which has access to like</font>

745
00:33:35,200 --> 00:33:40,390
all of<font color="#CCCCCC"> your i/o controllers</font><font color="#E5E5E5"> all of your</font>

746
00:33:37,960 --> 00:33:42,750
memory<font color="#CCCCCC"> it actually uses the host memory</font>

747
00:33:40,390 --> 00:33:42,750
to run

748
00:33:43,680 --> 00:33:48,240
<font color="#CCCCCC">priest skylight that looks something</font>

749
00:33:45,780 --> 00:33:50,730
like this<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> have like your main CPU</font>

750
00:33:48,240 --> 00:33:52,170
<font color="#E5E5E5">any like operating system agents that</font>

751
00:33:50,730 --> 00:33:54,780
<font color="#CCCCCC">are communicating with the management</font>

752
00:33:52,170 --> 00:33:56,610
engine AMT for example<font color="#E5E5E5"> you've got your</font>

753
00:33:54,780 --> 00:33:58,800
operating system running<font color="#E5E5E5"> on the main CPU</font>

754
00:33:56,610 --> 00:34:00,360
and then inside the platform<font color="#E5E5E5"> controller</font>

755
00:33:58,800 --> 00:34:02,310
hub inside the<font color="#E5E5E5"> Northbridge you had a</font>

756
00:34:00,360 --> 00:34:04,679
dedicated<font color="#E5E5E5"> ARCA core which was running a</font>

757
00:34:02,310 --> 00:34:06,780
real-time<font color="#CCCCCC"> operating system anything in</font>

758
00:34:04,680 --> 00:34:11,399
orange on this is essentially dedicated

759
00:34:06,780 --> 00:34:14,130
to the<font color="#E5E5E5"> management engine but what's</font>

760
00:34:11,399 --> 00:34:15,899
problematic<font color="#E5E5E5"> here is that the</font><font color="#CCCCCC"> management</font>

761
00:34:14,130 --> 00:34:17,850
engine is inside the piece of the PCH<font color="#CCCCCC"> so</font>

762
00:34:15,899 --> 00:34:20,719
actually has<font color="#CCCCCC"> access to</font><font color="#E5E5E5"> everything that</font>

763
00:34:17,850 --> 00:34:25,949
PCH does which<font color="#E5E5E5"> means Hardware sensors</font>

764
00:34:20,719 --> 00:34:27,689
<font color="#E5E5E5">the Ethernet MAC just super cool</font><font color="#CCCCCC"> and all</font>

765
00:34:25,949 --> 00:34:29,158
<font color="#E5E5E5">of the i/o devices that</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> hang</font>

766
00:34:27,690 --> 00:34:31,530
off the<font color="#CCCCCC"> Southbridge which it also has</font>

767
00:34:29,159 --> 00:34:35,159
<font color="#CCCCCC">access to it also takes up</font><font color="#E5E5E5"> a small</font>

768
00:34:31,530 --> 00:34:37,260
<font color="#CCCCCC">amount of the slot 0 DDR Ram it</font><font color="#E5E5E5"> was</font>

769
00:34:35,159 --> 00:34:39,810
<font color="#E5E5E5">actually pretty cool YouTube</font><font color="#CCCCCC"> talk with</font>

770
00:34:37,260 --> 00:34:41,880
the guy who invented<font color="#E5E5E5"> this</font><font color="#CCCCCC"> he's like</font>

771
00:34:39,810 --> 00:34:45,120
<font color="#E5E5E5">super pumped about it</font><font color="#CCCCCC"> you know this is a</font>

772
00:34:41,880 --> 00:34:46,620
great feature<font color="#CCCCCC"> and he accidentally sort</font>

773
00:34:45,120 --> 00:34:48,779
of mentioned<font color="#CCCCCC"> that yeah it runs</font><font color="#E5E5E5"> in the</font>

774
00:34:46,620 --> 00:34:51,179
slot<font color="#E5E5E5"> zero</font><font color="#CCCCCC"> RAM so if you just like didn't</font>

775
00:34:48,780 --> 00:34:52,320
have<font color="#E5E5E5"> that bad in the ma wouldn't run and</font>

776
00:34:51,179 --> 00:34:53,668
you could literally just<font color="#E5E5E5"> take your first</font>

777
00:34:52,320 --> 00:34:58,830
stick around<font color="#CCCCCC"> Mountain EMA would be</font>

778
00:34:53,668 --> 00:35:00,509
<font color="#CCCCCC">neutralised the actual operating system</font>

779
00:34:58,830 --> 00:35:05,549
for the<font color="#CCCCCC"> entire management</font><font color="#E5E5E5"> engine runs in</font>

780
00:35:00,510 --> 00:35:08,010
a partition inside the BIOS flash<font color="#E5E5E5"> so for</font>

781
00:35:05,550 --> 00:35:11,360
it<font color="#E5E5E5"> to actually</font><font color="#CCCCCC"> work it requires</font><font color="#E5E5E5"> the</font>

782
00:35:08,010 --> 00:35:13,500
<font color="#CCCCCC">system bios to have a functional</font>

783
00:35:11,360 --> 00:35:15,780
<font color="#E5E5E5">environment for it to load up and run as</font>

784
00:35:13,500 --> 00:35:17,940
its<font color="#E5E5E5"> operating</font><font color="#CCCCCC"> system if that doesn't</font>

785
00:35:15,780 --> 00:35:19,440
<font color="#E5E5E5">happen</font><font color="#CCCCCC"> your machine will reboot within</font>

786
00:35:17,940 --> 00:35:21,450
30 minutes<font color="#E5E5E5"> because it has like</font><font color="#CCCCCC"> a</font>

787
00:35:19,440 --> 00:35:25,440
triggers<font color="#CCCCCC"> or watchdog timer inside the</font>

788
00:35:21,450 --> 00:35:26,779
CPU<font color="#E5E5E5"> so you can't really</font><font color="#CCCCCC"> easily remove</font><font color="#E5E5E5"> it</font>

789
00:35:25,440 --> 00:35:28,830
[Music]

790
00:35:26,780 --> 00:35:30,510
inside<font color="#E5E5E5"> that same flash you've got the</font>

791
00:35:28,830 --> 00:35:34,440
system bios you've got the gigabyte

792
00:35:30,510 --> 00:35:36,540
<font color="#CCCCCC">gigabit</font><font color="#E5E5E5"> ethernet firmware etc and so I</font>

793
00:35:34,440 --> 00:35:41,070
<font color="#E5E5E5">mentioned it has</font><font color="#CCCCCC"> access to</font><font color="#E5E5E5"> the network</font>

794
00:35:36,540 --> 00:35:42,620
<font color="#E5E5E5">card it's able</font><font color="#CCCCCC"> to basically coexist on</font>

795
00:35:41,070 --> 00:35:45,110
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Ethernet</font>

796
00:35:42,620 --> 00:35:46,970
physical interface on the system board

797
00:35:45,110 --> 00:35:48,830
<font color="#CCCCCC">and send and receive packets on</font><font color="#E5E5E5"> the</font>

798
00:35:46,970 --> 00:35:52,669
ethernet network and respond<font color="#E5E5E5"> to those</font>

799
00:35:48,830 --> 00:35:54,650
and that's how<font color="#E5E5E5"> a</font><font color="#CCCCCC"> MT is implemented</font><font color="#E5E5E5"> this</font>

800
00:35:52,670 --> 00:35:55,910
this essentially wasn't as scary because

801
00:35:54,650 --> 00:35:57,920
<font color="#E5E5E5">it was in the Northbridge it wasn't</font>

802
00:35:55,910 --> 00:35:59,779
<font color="#CCCCCC">sitting in the</font><font color="#E5E5E5"> CPU die if you if you</font>

803
00:35:57,920 --> 00:36:01,700
disabled it there were basically ways to

804
00:35:59,780 --> 00:36:04,510
disable it<font color="#E5E5E5"> by setting flags in the</font><font color="#CCCCCC"> SPI</font>

805
00:36:01,700 --> 00:36:06,560
flash<font color="#E5E5E5"> and it was not that big a deal</font>

806
00:36:04,510 --> 00:36:08,900
post skylake though they actually

807
00:36:06,560 --> 00:36:12,560
<font color="#CCCCCC">removed</font><font color="#E5E5E5"> the intel management engine into</font>

808
00:36:08,900 --> 00:36:16,730
the<font color="#E5E5E5"> CPU die so it's actually sitting</font>

809
00:36:12,560 --> 00:36:19,130
there it's in Intel Atom systems<font color="#E5E5E5"> it was</font>

810
00:36:16,730 --> 00:36:20,510
actually a spark system<font color="#E5E5E5"> which i think is</font>

811
00:36:19,130 --> 00:36:22,610
kind<font color="#CCCCCC"> of cool it's like an old</font><font color="#E5E5E5"> hardware</font>

812
00:36:20,510 --> 00:36:24,050
nerd that if you had<font color="#E5E5E5"> one of these atom</font>

813
00:36:22,610 --> 00:36:29,090
systems you<font color="#CCCCCC"> also</font><font color="#E5E5E5"> had a spark</font>

814
00:36:24,050 --> 00:36:31,310
<font color="#E5E5E5">so really the good old days you are in</font>

815
00:36:29,090 --> 00:36:35,710
the newer systems though it's<font color="#E5E5E5"> actually</font>

816
00:36:31,310 --> 00:36:38,690
an x86 core so you've got x86 on x86

817
00:36:35,710 --> 00:36:41,150
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> it's it's way harder to disable so</font>

818
00:36:38,690 --> 00:36:44,390
the tricks<font color="#CCCCCC"> around</font><font color="#E5E5E5"> just sort</font><font color="#CCCCCC"> of setting</font>

819
00:36:41,150 --> 00:36:47,450
the<font color="#E5E5E5"> spi flash flags that don't work</font>

820
00:36:44,390 --> 00:36:49,480
anymore we'll talk we'll<font color="#CCCCCC"> talk about the</font>

821
00:36:47,450 --> 00:36:51,439
methods for disabling<font color="#E5E5E5"> this but</font>

822
00:36:49,480 --> 00:36:54,500
essentially being integrated into<font color="#E5E5E5"> the</font>

823
00:36:51,440 --> 00:36:56,720
process<font color="#E5E5E5"> it makes it much much harder to</font>

824
00:36:54,500 --> 00:37:00,650
neutralize it's much more<font color="#E5E5E5"> crucial</font><font color="#CCCCCC"> to the</font>

825
00:36:56,720 --> 00:37:03,020
running<font color="#CCCCCC"> of the processor</font><font color="#E5E5E5"> and being in</font>

826
00:37:00,650 --> 00:37:06,640
the CPU<font color="#CCCCCC"> die it has everything that the</font>

827
00:37:03,020 --> 00:37:06,640
<font color="#E5E5E5">CPU</font><font color="#CCCCCC"> can access it can</font><font color="#E5E5E5"> access</font>

828
00:37:08,780 --> 00:37:13,799
recent<font color="#E5E5E5"> research into the Emmy</font><font color="#CCCCCC"> to try and</font>

829
00:37:12,540 --> 00:37:15,450
sort<font color="#CCCCCC"> of get an idea of like what it's</font>

830
00:37:13,799 --> 00:37:17,280
capable of and<font color="#CCCCCC"> what code</font><font color="#E5E5E5"> it's running</font>

831
00:37:15,450 --> 00:37:19,230
<font color="#CCCCCC">because really if this is running</font><font color="#E5E5E5"> inside</font>

832
00:37:17,280 --> 00:37:21,270
the<font color="#E5E5E5"> Emmy it's running on your computer</font>

833
00:37:19,230 --> 00:37:25,799
<font color="#CCCCCC">all the time and you can't observe</font><font color="#E5E5E5"> it at</font>

834
00:37:21,270 --> 00:37:28,230
all recent<font color="#CCCCCC"> research shows that basically</font>

835
00:37:25,799 --> 00:37:31,740
the processor has multiple unlock modes

836
00:37:28,230 --> 00:37:35,780
and these unlock modes are controlled by

837
00:37:31,740 --> 00:37:39,419
specific encrypted flash partitions

838
00:37:35,780 --> 00:37:40,650
if these partitions contain<font color="#CCCCCC"> Intel Keys</font>

839
00:37:39,420 --> 00:37:44,099
the processor will enter what's called

840
00:37:40,650 --> 00:37:47,430
<font color="#CCCCCC">read unlock mode and there is</font>

841
00:37:44,099 --> 00:37:51,299
essentially an Intel<font color="#CCCCCC"> technology called</font>

842
00:37:47,430 --> 00:37:52,980
<font color="#E5E5E5">DCI which is debug bus that they use</font>

843
00:37:51,299 --> 00:37:55,109
when<font color="#E5E5E5"> manufacturing and debugging</font><font color="#CCCCCC"> Intel</font>

844
00:37:52,980 --> 00:37:57,150
processors<font color="#E5E5E5"> and if the processor is in</font>

845
00:37:55,109 --> 00:37:59,549
<font color="#CCCCCC">read unlock mode you actually have a</font>

846
00:37:57,150 --> 00:38:05,099
functional JTAG interface into the<font color="#E5E5E5"> Intel</font>

847
00:37:59,549 --> 00:38:07,140
<font color="#CCCCCC">ME processor basically what's required</font>

848
00:38:05,099 --> 00:38:08,730
there is<font color="#E5E5E5"> not foreign basically you need</font>

849
00:38:07,140 --> 00:38:11,009
the<font color="#E5E5E5"> Intel</font><font color="#CCCCCC"> Keys to get that mode because</font>

850
00:38:08,730 --> 00:38:15,869
read unlock code mode<font color="#E5E5E5"> needs the Intel</font>

851
00:38:11,010 --> 00:38:18,030
<font color="#CCCCCC">Keys there were some recent CBS against</font>

852
00:38:15,869 --> 00:38:22,230
this<font color="#E5E5E5"> though which allowed code execution</font>

853
00:38:18,030 --> 00:38:23,309
inside the Intel<font color="#CCCCCC"> ME one cool thing is</font>

854
00:38:22,230 --> 00:38:26,579
like if you<font color="#E5E5E5"> if you're familiar with</font>

855
00:38:23,309 --> 00:38:28,950
<font color="#E5E5E5">memory access there's multiple rings in</font>

856
00:38:26,579 --> 00:38:30,359
an Intel processor<font color="#CCCCCC"> ring 0 traditionally</font>

857
00:38:28,950 --> 00:38:32,430
being the highest<font color="#CCCCCC"> you know that's</font><font color="#E5E5E5"> like</font>

858
00:38:30,359 --> 00:38:35,970
the the operational<font color="#E5E5E5"> mode of the kernel</font>

859
00:38:32,430 --> 00:38:39,390
and<font color="#E5E5E5"> the until</font><font color="#CCCCCC"> Emmy actually runs in ring</font>

860
00:38:35,970 --> 00:38:42,359
minus<font color="#E5E5E5"> 3 so it not</font><font color="#CCCCCC"> only has access</font><font color="#E5E5E5"> to</font>

861
00:38:39,390 --> 00:38:44,819
everything<font color="#CCCCCC"> that ring</font><font color="#E5E5E5"> 0 can't see it</font><font color="#CCCCCC"> so</font>

862
00:38:42,359 --> 00:38:45,839
<font color="#CCCCCC">it's totally visible but basically there</font>

863
00:38:44,819 --> 00:38:48,869
were<font color="#CCCCCC"> Seavey's that allowed code</font>

864
00:38:45,839 --> 00:38:51,509
execution in ring minus 3 in the<font color="#E5E5E5"> Intel</font>

865
00:38:48,869 --> 00:38:53,970
<font color="#CCCCCC">ME core which is an x86 core</font><font color="#E5E5E5"> that</font>

866
00:38:51,510 --> 00:38:55,500
allowed<font color="#CCCCCC"> positive positive security did a</font>

867
00:38:53,970 --> 00:38:57,149
lot of<font color="#E5E5E5"> really great research on it</font>

868
00:38:55,500 --> 00:39:01,829
there's<font color="#E5E5E5"> been some awesome talks coming</font>

869
00:38:57,150 --> 00:39:03,119
<font color="#E5E5E5">over blackhat in a year</font><font color="#CCCCCC"> and this code</font>

870
00:39:01,829 --> 00:39:07,109
<font color="#E5E5E5">executional they are dumping</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

871
00:39:03,119 --> 00:39:10,170
firmware<font color="#E5E5E5"> it allowed also for these guys</font>

872
00:39:07,109 --> 00:39:11,970
to<font color="#CCCCCC"> work out that there was a like secret</font>

873
00:39:10,170 --> 00:39:13,230
undocumented<font color="#E5E5E5"> unlock mode that didn't</font>

874
00:39:11,970 --> 00:39:15,689
need<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Intel</font><font color="#E5E5E5"> keys and would get you</font>

875
00:39:13,230 --> 00:39:20,400
<font color="#CCCCCC">into read unlock mode which they did</font>

876
00:39:15,690 --> 00:39:23,320
JTAG was had<font color="#E5E5E5"> firmware was dumped and</font>

877
00:39:20,400 --> 00:39:26,590
yeah basically<font color="#CCCCCC"> they</font><font color="#E5E5E5"> found out it runs</font>

878
00:39:23,320 --> 00:39:32,230
<font color="#CCCCCC">MINIX</font><font color="#E5E5E5"> which is an educational</font><font color="#CCCCCC"> UNIX</font>

879
00:39:26,590 --> 00:39:33,730
operating system<font color="#E5E5E5"> this</font><font color="#CCCCCC"> kinda correspond</font>

880
00:39:32,230 --> 00:39:36,160
<font color="#E5E5E5">with a bunch of emails back and forth</font>

881
00:39:33,730 --> 00:39:39,160
from<font color="#E5E5E5"> Android</font><font color="#CCCCCC"> Tannenbaum who's the guy</font>

882
00:39:36,160 --> 00:39:41,020
who wrote<font color="#CCCCCC"> MINIX</font><font color="#E5E5E5"> from Intel without</font>

883
00:39:39,160 --> 00:39:42,490
asking<font color="#E5E5E5"> like loads of</font><font color="#CCCCCC"> questions about</font>

884
00:39:41,020 --> 00:39:46,330
meanings<font color="#E5E5E5"> and he's like this is weird but</font>

885
00:39:42,490 --> 00:39:48,490
<font color="#CCCCCC">okay and yeah they basically</font><font color="#E5E5E5"> wrote their</font>

886
00:39:46,330 --> 00:39:49,990
own<font color="#E5E5E5"> extended version of</font><font color="#CCCCCC"> MINIX for this</font>

887
00:39:48,490 --> 00:39:52,629
they haven't<font color="#E5E5E5"> released any of the source</font>

888
00:39:49,990 --> 00:39:54,370
code again there's more<font color="#E5E5E5"> speculation that</font>

889
00:39:52,630 --> 00:39:56,020
<font color="#E5E5E5">that's due to government backdoors but</font>

890
00:39:54,370 --> 00:39:59,700
it's it's<font color="#E5E5E5"> probably just because they</font>

891
00:39:56,020 --> 00:39:59,700
don't<font color="#E5E5E5"> want a</font><font color="#CCCCCC"> AMD to steal this and</font>

892
00:39:59,730 --> 00:40:03,700
basically<font color="#CCCCCC"> they're emmys</font><font color="#E5E5E5"> a UNIX system</font>

893
00:40:02,020 --> 00:40:06,940
running<font color="#E5E5E5"> inside your processor no matter</font>

894
00:40:03,700 --> 00:40:10,180
like<font color="#CCCCCC"> what host OS you run you're running</font>

895
00:40:06,940 --> 00:40:11,890
<font color="#CCCCCC">MINIX which is cool cuz</font><font color="#E5E5E5"> meaning it's</font>

896
00:40:10,180 --> 00:40:18,399
kind of<font color="#E5E5E5"> like the most commonly</font><font color="#CCCCCC"> run</font>

897
00:40:11,890 --> 00:40:20,259
<font color="#E5E5E5">operating system in the</font><font color="#CCCCCC"> world</font><font color="#E5E5E5"> now so</font>

898
00:40:18,400 --> 00:40:22,780
from<font color="#CCCCCC"> all</font><font color="#E5E5E5"> of this like there's a few</font>

899
00:40:20,260 --> 00:40:25,600
takeaways<font color="#CCCCCC"> general</font><font color="#E5E5E5"> coprocessor security</font>

900
00:40:22,780 --> 00:40:27,250
<font color="#CCCCCC">to long didn't read security processes</font>

901
00:40:25,600 --> 00:40:29,020
running<font color="#CCCCCC"> closed source code beyond user</font>

902
00:40:27,250 --> 00:40:31,480
control which are hard<font color="#E5E5E5"> to update without</font>

903
00:40:29,020 --> 00:40:33,400
significant impact<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> system they</font>

904
00:40:31,480 --> 00:40:35,760
don't necessarily improve<font color="#E5E5E5"> the security</font>

905
00:40:33,400 --> 00:40:38,680
<font color="#E5E5E5">posture in the long term of a system</font>

906
00:40:35,760 --> 00:40:40,270
<font color="#CCCCCC">closed source processors which control</font>

907
00:40:38,680 --> 00:40:42,100
<font color="#CCCCCC">the initialization</font><font color="#E5E5E5"> of hardware and which</font>

908
00:40:40,270 --> 00:40:44,320
payloads they will pass execution to

909
00:40:42,100 --> 00:40:46,690
outside of user control<font color="#CCCCCC"> are bad for use</font>

910
00:40:44,320 --> 00:40:48,040
of freedom<font color="#E5E5E5"> so not being able to run what</font>

911
00:40:46,690 --> 00:40:50,940
<font color="#CCCCCC">you need to running</font><font color="#E5E5E5"> hardware that you've</font>

912
00:40:48,040 --> 00:40:54,130
paid money<font color="#CCCCCC"> for is it's not</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> like</font>

913
00:40:50,940 --> 00:40:55,900
<font color="#CCCCCC">being unfair it's actually kind of</font>

914
00:40:54,130 --> 00:40:59,140
preventing you from<font color="#E5E5E5"> keeping that</font>

915
00:40:55,900 --> 00:41:01,150
<font color="#E5E5E5">hardware for longer</font><font color="#CCCCCC"> it forces you to buy</font>

916
00:40:59,140 --> 00:41:03,370
new<font color="#CCCCCC"> hardware and</font><font color="#E5E5E5"> maybe the hobby of</font><font color="#CCCCCC"> god</font>

917
00:41:01,150 --> 00:41:06,880
is<font color="#E5E5E5"> totally fine there's like</font>

918
00:41:03,370 --> 00:41:08,230
environmental<font color="#E5E5E5"> implications for that</font><font color="#CCCCCC"> and</font>

919
00:41:06,880 --> 00:41:09,340
also<font color="#CCCCCC"> he</font><font color="#E5E5E5"> the computer probably</font><font color="#CCCCCC"> has a</font>

920
00:41:08,230 --> 00:41:12,370
<font color="#E5E5E5">backdoor in it that you don't know</font><font color="#CCCCCC"> about</font>

921
00:41:09,340 --> 00:41:14,430
<font color="#E5E5E5">and there's not heaps you can do about</font>

922
00:41:12,370 --> 00:41:14,430
that

923
00:41:15,800 --> 00:41:19,970
from a hardware<font color="#E5E5E5"> liberation perspective</font>

924
00:41:17,420 --> 00:41:22,099
there's<font color="#CCCCCC"> those</font><font color="#E5E5E5"> options though so you can</font>

925
00:41:19,970 --> 00:41:23,990
<font color="#E5E5E5">basically replace the boot code on your</font>

926
00:41:22,099 --> 00:41:28,040
<font color="#E5E5E5">system with something like Linux boot</font>

927
00:41:23,990 --> 00:41:29,808
<font color="#E5E5E5">coreboot</font><font color="#CCCCCC"> Libre boot you</font><font color="#E5E5E5"> can disable</font>

928
00:41:28,040 --> 00:41:32,930
security<font color="#E5E5E5"> management processes like the</font>

929
00:41:29,809 --> 00:41:34,819
<font color="#E5E5E5">Intel</font><font color="#CCCCCC"> ME through various means and</font>

930
00:41:32,930 --> 00:41:37,640
there's<font color="#CCCCCC"> also alternate firmwares being</font>

931
00:41:34,819 --> 00:41:43,308
developed<font color="#CCCCCC"> for</font><font color="#E5E5E5"> bare metal management</font>

932
00:41:37,640 --> 00:41:44,750
cards like open<font color="#CCCCCC"> BNC Linux boot is</font>

933
00:41:43,309 --> 00:41:46,760
actually a<font color="#E5E5E5"> kind of interesting project</font>

934
00:41:44,750 --> 00:41:49,970
because<font color="#CCCCCC"> it essentially means to replace</font>

935
00:41:46,760 --> 00:41:52,400
the<font color="#CCCCCC"> system</font><font color="#E5E5E5"> bios with Linux it's got</font>

936
00:41:49,970 --> 00:41:53,629
essentially<font color="#E5E5E5"> just enough to bring up the</font>

937
00:41:52,400 --> 00:41:56,180
<font color="#E5E5E5">system to the</font><font color="#CCCCCC"> point where Linux can</font>

938
00:41:53,630 --> 00:41:57,500
bootstrap<font color="#CCCCCC"> and most</font><font color="#E5E5E5"> drivers in Linux</font>

939
00:41:56,180 --> 00:41:58,848
<font color="#E5E5E5">actually are capable of</font><font color="#CCCCCC"> bringing up</font>

940
00:41:57,500 --> 00:42:01,880
<font color="#CCCCCC">Hardware without assistance</font><font color="#E5E5E5"> from the</font>

941
00:41:58,849 --> 00:42:03,530
<font color="#E5E5E5">BIOS mostly because BIOS is are</font><font color="#CCCCCC"> very</font>

942
00:42:01,880 --> 00:42:04,520
unreliable<font color="#E5E5E5"> for bringing up Hardware</font>

943
00:42:03,530 --> 00:42:05,750
<font color="#E5E5E5">unless you've got the secret</font>

944
00:42:04,520 --> 00:42:09,290
documentation that<font color="#E5E5E5"> they give to</font>

945
00:42:05,750 --> 00:42:11,930
<font color="#E5E5E5">Microsoft but</font><font color="#CCCCCC"> yo Linux boot is is</font>

946
00:42:09,290 --> 00:42:17,359
essentially more<font color="#E5E5E5"> of a server orientated</font>

947
00:42:11,930 --> 00:42:19,399
project<font color="#E5E5E5"> for end user systems and I</font><font color="#CCCCCC"> run</font>

948
00:42:17,359 --> 00:42:21,558
it on<font color="#E5E5E5"> this laptop</font><font color="#CCCCCC"> core boot is a</font>

949
00:42:19,400 --> 00:42:25,640
becoming<font color="#CCCCCC"> more of a common option it's an</font>

950
00:42:21,559 --> 00:42:27,140
<font color="#CCCCCC">open source by us basically</font><font color="#E5E5E5"> replaces</font>

951
00:42:25,640 --> 00:42:29,180
<font color="#E5E5E5">your vendor BIOS and</font><font color="#CCCCCC"> it's enough to</font>

952
00:42:27,140 --> 00:42:30,859
bring up your system<font color="#CCCCCC"> more like unlike</font>

953
00:42:29,180 --> 00:42:33,319
<font color="#E5E5E5">Linux boot you can</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> you know</font>

954
00:42:30,859 --> 00:42:35,109
press f12<font color="#CCCCCC"> boot off the</font><font color="#E5E5E5"> USB it's quite</font>

955
00:42:33,319 --> 00:42:38,450
quite<font color="#E5E5E5"> usable</font>

956
00:42:35,109 --> 00:42:40,040
UEFI actually there is a free and

957
00:42:38,450 --> 00:42:41,328
<font color="#E5E5E5">open-source implementation of UEFI</font>

958
00:42:40,040 --> 00:42:44,270
called<font color="#E5E5E5"> Tiano court and that's actually</font>

959
00:42:41,329 --> 00:42:46,520
<font color="#E5E5E5">part of the Intel UEFI implementation</font>

960
00:42:44,270 --> 00:42:48,349
<font color="#E5E5E5">that they have open sourced it's often</font>

961
00:42:46,520 --> 00:42:51,640
<font color="#CCCCCC">used as a payload</font><font color="#E5E5E5"> for core boot if you</font>

962
00:42:48,349 --> 00:42:54,500
need to boot UEFI only operating systems

963
00:42:51,640 --> 00:42:57,109
<font color="#E5E5E5">and then you've got projects like heads</font>

964
00:42:54,500 --> 00:42:59,960
which is<font color="#E5E5E5"> basically meant to coexist</font><font color="#CCCCCC"> with</font>

965
00:42:57,109 --> 00:43:02,210
tails<font color="#E5E5E5"> and it's essentially like a</font>

966
00:42:59,960 --> 00:43:07,160
verified boot option so all stages of

967
00:43:02,210 --> 00:43:10,720
the boot process essentially verified

968
00:43:07,160 --> 00:43:10,720
with a public key cryptography

969
00:43:10,789 --> 00:43:15,150
so as far<font color="#CCCCCC"> as if you've got a coprocessor</font>

970
00:43:12,929 --> 00:43:17,130
<font color="#CCCCCC">in you know pro if you've got a</font>

971
00:43:15,150 --> 00:43:19,199
coprocessor<font color="#CCCCCC"> in your process</font><font color="#E5E5E5"> of what can</font>

972
00:43:17,130 --> 00:43:23,789
you do about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> until they</font><font color="#E5E5E5"> me there's</font>

973
00:43:19,199 --> 00:43:26,419
some kind of crap options<font color="#CCCCCC"> MD PSP us or</font>

974
00:43:23,789 --> 00:43:29,579
<font color="#E5E5E5">out</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> like it can't be disabled at all</font>

975
00:43:26,419 --> 00:43:33,689
<font color="#CCCCCC">trusts own</font><font color="#E5E5E5"> you can get lucky based on</font>

976
00:43:29,579 --> 00:43:41,189
the vendor<font color="#CCCCCC"> BMC's</font><font color="#E5E5E5"> you can get lucky based</font>

977
00:43:33,689 --> 00:43:43,709
on the<font color="#E5E5E5"> vendor by age there are different</font>

978
00:43:41,189 --> 00:43:45,149
means for disabling me until<font color="#E5E5E5"> ma</font><font color="#CCCCCC"> the very</font>

979
00:43:43,709 --> 00:43:46,859
early<font color="#CCCCCC"> ones we talked about</font><font color="#E5E5E5"> the ones</font>

980
00:43:45,150 --> 00:43:49,679
embedded in the platform controller hub

981
00:43:46,859 --> 00:43:51,869
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> set some flags in the flash</font>

982
00:43:49,679 --> 00:43:55,829
descriptor<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it will just not boot up</font>

983
00:43:51,869 --> 00:43:57,479
it's<font color="#E5E5E5"> fine it's gone</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> hilum onward</font><font color="#CCCCCC"> you</font>

984
00:43:55,829 --> 00:43:59,969
<font color="#CCCCCC">can run it as</font><font color="#E5E5E5"> an open source</font><font color="#CCCCCC"> project</font>

985
00:43:57,479 --> 00:44:03,629
called<font color="#CCCCCC"> ami cleaner and essentially what</font>

986
00:43:59,969 --> 00:44:08,489
that<font color="#E5E5E5"> does is it removes as many modules</font>

987
00:44:03,630 --> 00:44:10,410
<font color="#E5E5E5">as it can from any firmware leaving only</font>

988
00:44:08,489 --> 00:44:12,809
the barest minimum modules<font color="#E5E5E5"> that they've</font>

989
00:44:10,410 --> 00:44:14,969
found<font color="#CCCCCC"> a needed to send that watchdog</font>

990
00:44:12,809 --> 00:44:15,419
<font color="#E5E5E5">pulse to the processor to keep it</font>

991
00:44:14,969 --> 00:44:19,049
running

992
00:44:15,419 --> 00:44:20,939
so the nasty<font color="#CCCCCC"> stuff is more than likely</font>

993
00:44:19,049 --> 00:44:22,739
in those other modules there's

994
00:44:20,939 --> 00:44:24,658
absolutely nothing to<font color="#E5E5E5"> say that</font><font color="#CCCCCC"> the core</font>

995
00:44:22,739 --> 00:44:31,949
modules don't also have<font color="#E5E5E5"> nasty stuff in</font>

996
00:44:24,659 --> 00:44:33,719
<font color="#E5E5E5">them</font><font color="#CCCCCC"> there is as a result of the the CVS</font>

997
00:44:31,949 --> 00:44:35,400
that<font color="#CCCCCC"> have come out in telling me</font><font color="#E5E5E5"> the</font>

998
00:44:33,719 --> 00:44:37,289
research that<font color="#CCCCCC"> has been done by positive</font>

999
00:44:35,400 --> 00:44:39,839
security<font color="#E5E5E5"> there's been another method</font>

1000
00:44:37,289 --> 00:44:42,869
found very<font color="#E5E5E5"> recently using the JTAG</font>

1001
00:44:39,839 --> 00:44:44,699
interface which is<font color="#E5E5E5"> called old emmy</font>

1002
00:44:42,869 --> 00:44:46,169
disabled and it is<font color="#E5E5E5"> similar</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the early</font>

1003
00:44:44,699 --> 00:44:48,029
<font color="#CCCCCC">methods of disabling me</font><font color="#E5E5E5"> where you can</font>

1004
00:44:46,169 --> 00:44:52,769
set a couple<font color="#E5E5E5"> of flags in the spi flash</font>

1005
00:44:48,029 --> 00:44:54,089
and the<font color="#E5E5E5"> Emmy sort of goes to sleep don't</font>

1006
00:44:52,769 --> 00:44:58,249
<font color="#E5E5E5">really like this isn't</font><font color="#CCCCCC"> documented</font>

1007
00:44:54,089 --> 00:45:00,869
anywhere<font color="#E5E5E5"> but it seems to work</font><font color="#CCCCCC"> 2013 Plus</font>

1008
00:44:58,249 --> 00:45:03,209
<font color="#E5E5E5">Intel have actually implemented</font><font color="#CCCCCC"> a high</font>

1009
00:45:00,869 --> 00:45:05,099
assurance platform support which is not

1010
00:45:03,209 --> 00:45:07,828
a public feature it's been designed

1011
00:45:05,099 --> 00:45:09,179
essentially at the NSA's behest<font color="#CCCCCC"> because</font>

1012
00:45:07,829 --> 00:45:12,130
probably enough they<font color="#CCCCCC"> don't want secret</font>

1013
00:45:09,179 --> 00:45:14,230
processes running in their environment

1014
00:45:12,130 --> 00:45:16,030
<font color="#E5E5E5">an</font><font color="#CCCCCC"> Emmy</font><font color="#E5E5E5"> cleaner now has support for</font>

1015
00:45:14,230 --> 00:45:18,760
setting that<font color="#E5E5E5"> bit on the newer processors</font>

1016
00:45:16,030 --> 00:45:21,550
and you can essentially disable the<font color="#CCCCCC"> ma</font>

1017
00:45:18,760 --> 00:45:23,020
that way as well<font color="#E5E5E5"> you obviously</font><font color="#CCCCCC"> can't do</font>

1018
00:45:21,550 --> 00:45:25,600
this on systems<font color="#CCCCCC"> with Intel boot guard</font>

1019
00:45:23,020 --> 00:45:26,770
<font color="#E5E5E5">because</font><font color="#CCCCCC"> you'll be changing</font><font color="#E5E5E5"> the contents</font>

1020
00:45:25,600 --> 00:45:31,390
of<font color="#E5E5E5"> the system bios it'll no longer</font>

1021
00:45:26,770 --> 00:45:33,310
verify it won't boot<font color="#E5E5E5"> so om systems sorry</font>

1022
00:45:31,390 --> 00:45:35,740
systems<font color="#E5E5E5"> that you've built yourself for</font>

1023
00:45:33,310 --> 00:45:37,570
example<font color="#E5E5E5"> by buying a motherboard</font><font color="#CCCCCC"> buying a</font>

1024
00:45:35,740 --> 00:45:39,129
processor<font color="#E5E5E5"> there's no way the bootcut</font>

1025
00:45:37,570 --> 00:45:40,480
bootcut can be enabled<font color="#CCCCCC"> on that</font>

1026
00:45:39,130 --> 00:45:42,700
<font color="#CCCCCC">combination</font><font color="#E5E5E5"> so you can absolutely</font>

1027
00:45:40,480 --> 00:45:44,230
disable the<font color="#CCCCCC"> MA using that and there's</font>

1028
00:45:42,700 --> 00:45:46,779
<font color="#E5E5E5">also vendors like our purism and</font>

1029
00:45:44,230 --> 00:45:48,670
<font color="#CCCCCC">system76 that are basically they are</font>

1030
00:45:46,780 --> 00:45:52,930
hardware manufacturers and they choose

1031
00:45:48,670 --> 00:45:55,750
not to<font color="#E5E5E5"> enable this when they set the CPU</font>

1032
00:45:52,930 --> 00:46:00,220
die they set<font color="#E5E5E5"> the fuses on the CPU they</font>

1033
00:45:55,750 --> 00:46:02,440
don't<font color="#CCCCCC"> leave they</font><font color="#E5E5E5"> don't put keys in so</font>

1034
00:46:00,220 --> 00:46:04,060
<font color="#CCCCCC">boot</font><font color="#E5E5E5"> doesn't work so you can still</font>

1035
00:46:02,440 --> 00:46:07,540
enable<font color="#CCCCCC"> Emme because you can modify your</font>

1036
00:46:04,060 --> 00:46:10,360
<font color="#CCCCCC">bios</font><font color="#E5E5E5"> and you can also run</font><font color="#CCCCCC"> coreboot on</font>

1037
00:46:07,540 --> 00:46:12,090
some of these systems as well talked

1038
00:46:10,360 --> 00:46:16,540
<font color="#E5E5E5">about that</font><font color="#CCCCCC"> bar</font><font color="#E5E5E5"> arm you can't run</font>

1039
00:46:12,090 --> 00:46:21,520
anything<font color="#E5E5E5"> but PSP that's your life</font><font color="#CCCCCC"> i'm</font>

1040
00:46:16,540 --> 00:46:23,920
<font color="#CCCCCC">trustzone</font><font color="#E5E5E5"> so certain vendors allow their</font>

1041
00:46:21,520 --> 00:46:25,420
processes to<font color="#E5E5E5"> you can't disable</font><font color="#CCCCCC"> trustzone</font>

1042
00:46:23,920 --> 00:46:27,790
<font color="#E5E5E5">because it's kind of an inherent cpu</font>

1043
00:46:25,420 --> 00:46:30,820
feature that allows you<font color="#E5E5E5"> to partition</font>

1044
00:46:27,790 --> 00:46:32,740
areas of<font color="#E5E5E5"> memory but some of the vendors</font>

1045
00:46:30,820 --> 00:46:35,590
<font color="#CCCCCC">will allow you</font><font color="#E5E5E5"> to run code in it so you</font>

1046
00:46:32,740 --> 00:46:37,089
kind of have<font color="#E5E5E5"> access to that you can sort</font>

1047
00:46:35,590 --> 00:46:40,240
of inspect it you can see what's going

1048
00:46:37,090 --> 00:46:45,040
<font color="#CCCCCC">on</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> it's still</font><font color="#E5E5E5"> not or some</font>

1049
00:46:40,240 --> 00:46:46,839
<font color="#CCCCCC">situation for BMC's you've got open BMC</font>

1050
00:46:45,040 --> 00:46:49,330
I mentioned earlier<font color="#E5E5E5"> or you can actually</font>

1051
00:46:46,840 --> 00:46:51,250
just often<font color="#CCCCCC"> D solder the modules or pull</font>

1052
00:46:49,330 --> 00:46:56,440
<font color="#CCCCCC">out the BMC cards if you don't use them</font>

1053
00:46:51,250 --> 00:46:57,970
<font color="#E5E5E5">but open</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> BMC funnily enough is</font>

1054
00:46:56,440 --> 00:47:00,790
actually a<font color="#E5E5E5"> Facebook initiative because</font>

1055
00:46:57,970 --> 00:47:02,470
<font color="#E5E5E5">they</font><font color="#CCCCCC"> weren't happy with the</font><font color="#E5E5E5"> stability</font><font color="#CCCCCC"> of</font>

1056
00:47:00,790 --> 00:47:04,270
their bare metal controllers<font color="#E5E5E5"> but also</font>

1057
00:47:02,470 --> 00:47:06,850
<font color="#E5E5E5">they didn't like the</font><font color="#CCCCCC"> idea of trusting</font><font color="#E5E5E5"> a</font>

1058
00:47:04,270 --> 00:47:09,660
vendor<font color="#CCCCCC"> to have access</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> their data</font>

1059
00:47:06,850 --> 00:47:15,549
<font color="#E5E5E5">which</font>

1060
00:47:09,660 --> 00:47:17,470
<font color="#CCCCCC">10 out of 10</font><font color="#E5E5E5"> for self-awareness and I</font>

1061
00:47:15,550 --> 00:47:21,960
figured a now just<font color="#E5E5E5"> sort of go</font><font color="#CCCCCC"> through</font>

1062
00:47:17,470 --> 00:47:24,939
demo of a laptop I've disassembled

1063
00:47:21,960 --> 00:47:27,130
<font color="#E5E5E5">dumping the firmware disabling the MA</font>

1064
00:47:24,940 --> 00:47:30,339
flashing<font color="#CCCCCC"> Corbett showing what that looks</font>

1065
00:47:27,130 --> 00:47:33,990
like<font color="#E5E5E5"> which is going to involve me</font>

1066
00:47:30,339 --> 00:47:33,990
playing a video on the external<font color="#E5E5E5"> screen</font>

1067
00:47:46,210 --> 00:47:49,290
of course not

1068
00:47:50,660 --> 00:47:57,290
right<font color="#E5E5E5"> so this is</font><font color="#CCCCCC"> a motherboard</font><font color="#E5E5E5"> out of a</font>

1069
00:47:53,510 --> 00:47:59,360
Lenovo<font color="#E5E5E5"> x2 20 that I've pulled you</font><font color="#CCCCCC"> can do</font>

1070
00:47:57,290 --> 00:48:00,710
a lot of<font color="#E5E5E5"> this stuff inside the machine</font>

1071
00:47:59,360 --> 00:48:02,240
<font color="#CCCCCC">like</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> don't necessarily need to</font><font color="#E5E5E5"> pull</font>

1072
00:48:00,710 --> 00:48:04,970
the motherboard a lot of systems<font color="#E5E5E5"> just</font>

1073
00:48:02,240 --> 00:48:08,060
have the flash chip underneath the palm

1074
00:48:04,970 --> 00:48:12,310
rest<font color="#CCCCCC"> let's say that's model hands</font><font color="#E5E5E5"> that I</font>

1075
00:48:08,060 --> 00:48:14,870
hired showing where the SPI flash is one

1076
00:48:12,310 --> 00:48:18,710
<font color="#CCCCCC">of the worst and stupidest things you</font>

1077
00:48:14,870 --> 00:48:21,589
can try<font color="#CCCCCC"> and do is this because it</font>

1078
00:48:18,710 --> 00:48:23,650
<font color="#E5E5E5">doesn't work basically</font><font color="#CCCCCC"> I have it in this</font>

1079
00:48:21,590 --> 00:48:25,850
<font color="#E5E5E5">video to demonstrate how futile</font><font color="#CCCCCC"> it is</font>

1080
00:48:23,650 --> 00:48:27,590
unless you really<font color="#E5E5E5"> dial up the</font>

1081
00:48:25,850 --> 00:48:29,770
temperature on a heat gun<font color="#E5E5E5"> it's very hard</font>

1082
00:48:27,590 --> 00:48:31,730
<font color="#E5E5E5">to remove an SPI flash for</font><font color="#CCCCCC"> flashing</font>

1083
00:48:29,770 --> 00:48:33,320
<font color="#E5E5E5">because they sold them on to the ground</font>

1084
00:48:31,730 --> 00:48:35,660
<font color="#E5E5E5">plane of the board you've kind of got</font><font color="#CCCCCC"> to</font>

1085
00:48:33,320 --> 00:48:36,920
warm up the entire board<font color="#E5E5E5"> so what you</font>

1086
00:48:35,660 --> 00:48:39,830
want to<font color="#E5E5E5"> use is something like a test</font>

1087
00:48:36,920 --> 00:48:41,630
clip and this is just a soak a test clip

1088
00:48:39,830 --> 00:48:42,950
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> clip it onto the board you can</font>

1089
00:48:41,630 --> 00:48:45,320
see<font color="#CCCCCC"> I've got</font><font color="#E5E5E5"> the power supply connected</font>

1090
00:48:42,950 --> 00:48:47,029
to the board that<font color="#CCCCCC"> can that can be a</font>

1091
00:48:45,320 --> 00:48:49,210
<font color="#E5E5E5">really</font><font color="#CCCCCC"> good way to supply</font><font color="#E5E5E5"> enough</font><font color="#CCCCCC"> power</font>

1092
00:48:47,030 --> 00:48:53,050
<font color="#CCCCCC">to the entire</font><font color="#E5E5E5"> board in the flash chip</font>

1093
00:48:49,210 --> 00:48:55,460
often when you plug these things in

1094
00:48:53,050 --> 00:48:55,880
<font color="#CCCCCC">sweet that's</font><font color="#E5E5E5"> cool that's what I wanted</font>

1095
00:48:55,460 --> 00:49:00,950
to<font color="#E5E5E5"> happen</font>

1096
00:48:55,880 --> 00:49:02,930
<font color="#CCCCCC">oh no that that's intended basically the</font>

1097
00:49:00,950 --> 00:49:04,160
the power from the SPI flasher is not

1098
00:49:02,930 --> 00:49:05,359
going to be enough to power<font color="#E5E5E5"> up the whole</font>

1099
00:49:04,160 --> 00:49:06,740
motherboard and because the<font color="#CCCCCC"> chip still</font>

1100
00:49:05,360 --> 00:49:12,800
<font color="#CCCCCC">soldered</font><font color="#E5E5E5"> that's essentially what it's</font>

1101
00:49:06,740 --> 00:49:16,790
<font color="#E5E5E5">going to be trying to do that's probably</font>

1102
00:49:12,800 --> 00:49:19,360
<font color="#E5E5E5">not</font><font color="#CCCCCC"> is that readable ok cool it's not</font>

1103
00:49:16,790 --> 00:49:19,360
readable for me

1104
00:49:19,850 --> 00:49:25,400
so with a<font color="#CCCCCC"> sope chip connected there's a</font>

1105
00:49:23,480 --> 00:49:27,410
piece of<font color="#CCCCCC"> software called flash rom which</font>

1106
00:49:25,400 --> 00:49:28,820
is just<font color="#E5E5E5"> really common</font><font color="#CCCCCC"> open-source piece</font>

1107
00:49:27,410 --> 00:49:32,149
of software it's<font color="#E5E5E5"> used for interacting</font>

1108
00:49:28,820 --> 00:49:34,070
with<font color="#E5E5E5"> SPI flashes</font><font color="#CCCCCC"> you can see this</font>

1109
00:49:32,150 --> 00:49:36,170
command<font color="#E5E5E5"> over on here it's just a shell</font>

1110
00:49:34,070 --> 00:49:38,000
script<font color="#CCCCCC"> that I'm using a BeagleBone black</font>

1111
00:49:36,170 --> 00:49:40,730
<font color="#CCCCCC">to do the flashing</font><font color="#E5E5E5"> because it's got a</font>

1112
00:49:38,000 --> 00:49:43,670
pretty<font color="#CCCCCC"> decent 3.3</font><font color="#E5E5E5"> volt supply which is</font>

1113
00:49:40,730 --> 00:49:46,220
important<font color="#CCCCCC"> it's also</font><font color="#E5E5E5"> very fast because it</font>

1114
00:49:43,670 --> 00:49:47,810
does native<font color="#E5E5E5"> SPI so I'm just dumping out</font>

1115
00:49:46,220 --> 00:49:51,339
the firmware<font color="#E5E5E5"> from that chip</font><font color="#CCCCCC"> and you</font><font color="#E5E5E5"> can</font>

1116
00:49:47,810 --> 00:49:51,340
see it<font color="#E5E5E5"> dumped just fine</font>

1117
00:49:58,410 --> 00:50:04,680
so this is me powering up the laptop

1118
00:50:00,300 --> 00:50:07,950
<font color="#CCCCCC">before I have made any changes system</font>

1119
00:50:04,680 --> 00:50:09,210
vital data not that interesting<font color="#CCCCCC"> you will</font>

1120
00:50:07,950 --> 00:50:15,799
<font color="#E5E5E5">be able to see though on the config tab</font>

1121
00:50:09,210 --> 00:50:15,800
<font color="#E5E5E5">when I switch to it</font><font color="#CCCCCC"> okay fine</font>

1122
00:50:22,910 --> 00:50:26,140
I'll catch<font color="#CCCCCC"> it this time</font>

1123
00:50:28,490 --> 00:50:31,490
I prepared this whole video<font color="#CCCCCC"> with a piece</font>

1124
00:50:30,260 --> 00:50:35,090
of<font color="#E5E5E5"> software called open shot and it was</font>

1125
00:50:31,490 --> 00:50:38,330
my anyway<font color="#E5E5E5"> probably</font><font color="#CCCCCC"> saw it flash up there</font>

1126
00:50:35,090 --> 00:50:43,150
the<font color="#E5E5E5"> Intel AMT is showing</font><font color="#CCCCCC"> us enabled in</font>

1127
00:50:38,330 --> 00:50:45,259
there<font color="#CCCCCC"> I</font><font color="#E5E5E5"> got some</font><font color="#CCCCCC"> pretty decent effects</font>

1128
00:50:43,150 --> 00:50:47,300
transitions and stuff<font color="#E5E5E5"> so I was pretty</font>

1129
00:50:45,260 --> 00:50:48,590
<font color="#CCCCCC">impressed with</font><font color="#E5E5E5"> myself but I didn't</font>

1130
00:50:47,300 --> 00:50:53,810
manage<font color="#E5E5E5"> to pause it long enough</font><font color="#CCCCCC"> on the</font>

1131
00:50:48,590 --> 00:50:56,060
AMT bit yeah essentially<font color="#E5E5E5"> you can see</font>

1132
00:50:53,810 --> 00:50:58,520
that it's<font color="#CCCCCC"> enabled its the vendor BIOS</font>

1133
00:50:56,060 --> 00:51:01,090
like you've probably<font color="#E5E5E5"> all seen anything</font>

1134
00:50:58,520 --> 00:51:01,090
<font color="#CCCCCC">paid boot up</font>

1135
00:51:07,330 --> 00:51:11,360
what we'll do<font color="#E5E5E5"> now is we'll go through</font>

1136
00:51:09,140 --> 00:51:14,390
the process<font color="#CCCCCC"> of running</font><font color="#E5E5E5"> an Intel ME</font>

1137
00:51:11,360 --> 00:51:16,400
cleaner on the flash<font color="#CCCCCC"> that I dumped</font>

1138
00:51:14,390 --> 00:51:20,359
earlier so basically taking the vendor

1139
00:51:16,400 --> 00:51:23,150
<font color="#CCCCCC">BIOS running ma cleaner over</font><font color="#E5E5E5"> it which I</font>

1140
00:51:20,360 --> 00:51:25,370
run it with the<font color="#CCCCCC"> dash S flag which</font><font color="#E5E5E5"> also</font>

1141
00:51:23,150 --> 00:51:27,670
sets the<font color="#E5E5E5"> high assurance platform</font><font color="#CCCCCC"> bid in</font>

1142
00:51:25,370 --> 00:51:27,670
the flash

1143
00:51:32,420 --> 00:51:39,529
and then yeah<font color="#CCCCCC"> we basically write the</font>

1144
00:51:35,430 --> 00:51:39,529
<font color="#CCCCCC">flash back to the chip</font>

1145
00:51:40,130 --> 00:51:43,520
which is always<font color="#E5E5E5"> way faster than reading</font>

1146
00:51:42,110 --> 00:51:45,140
<font color="#CCCCCC">the whole thing because basically if</font>

1147
00:51:43,520 --> 00:51:46,460
there are any<font color="#E5E5E5"> zeros in your flash file</font>

1148
00:51:45,140 --> 00:51:49,150
it'll just skip<font color="#CCCCCC"> over</font><font color="#E5E5E5"> them rather than</font>

1149
00:51:46,460 --> 00:51:49,150
rewriting<font color="#E5E5E5"> them</font>

1150
00:52:06,599 --> 00:52:10,430
<font color="#CCCCCC">I promise I</font><font color="#E5E5E5"> spit this up</font>

1151
00:52:46,150 --> 00:52:51,739
so this is just<font color="#E5E5E5"> doing a walk of the</font>

1152
00:52:49,039 --> 00:52:54,589
original flash showing just the<font color="#CCCCCC"> amount</font>

1153
00:52:51,739 --> 00:52:58,069
of<font color="#CCCCCC"> staff these</font><font color="#E5E5E5"> are all flash partitions</font>

1154
00:52:54,589 --> 00:52:59,299
is raw mostly<font color="#E5E5E5"> containing code and</font>

1155
00:52:58,069 --> 00:53:01,670
modules that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> running inside</font><font color="#CCCCCC"> the</font>

1156
00:52:59,299 --> 00:53:05,660
management engine just<font color="#E5E5E5"> to give you an</font>

1157
00:53:01,670 --> 00:53:07,219
idea<font color="#E5E5E5"> of the scope of it so any cleaner</font>

1158
00:53:05,660 --> 00:53:13,999
will reduce this down<font color="#CCCCCC"> to about 2 or 3</font>

1159
00:53:07,219 --> 00:53:15,799
modules<font color="#CCCCCC"> depending on the edition</font><font color="#E5E5E5"> the</font>

1160
00:53:13,999 --> 00:53:17,299
rest of it is things like video drivers

1161
00:53:15,799 --> 00:53:20,839
and things like<font color="#CCCCCC"> that because it</font>

1162
00:53:17,299 --> 00:53:21,859
interacts with<font color="#E5E5E5"> the video card and all</font>

1163
00:53:20,839 --> 00:53:25,599
sorts of stuff<font color="#CCCCCC"> that seems really</font>

1164
00:53:21,859 --> 00:53:25,598
<font color="#CCCCCC">unnecessary for a security processor</font>

1165
00:53:32,130 --> 00:53:35,030
there's a lot

1166
00:53:38,590 --> 00:53:44,420
<font color="#E5E5E5">yeah this is basically any cleaner</font>

1167
00:53:41,030 --> 00:53:46,660
running over it<font color="#CCCCCC"> she's removed a bunch</font><font color="#E5E5E5"> of</font>

1168
00:53:44,420 --> 00:53:46,660
stuff

1169
00:54:19,230 --> 00:54:24,589
so now we booted up with the newly

1170
00:54:21,359 --> 00:54:24,589
flashed cleaned by us

1171
00:54:28,119 --> 00:54:35,140
so<font color="#CCCCCC"> it firstly does boot after</font><font color="#E5E5E5"> reflashing</font>

1172
00:54:31,489 --> 00:54:35,140
the modified<font color="#CCCCCC"> bios</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> is kind of cool</font>

1173
00:54:44,040 --> 00:54:48,440
if we get into<font color="#CCCCCC"> the system menu on the</font>

1174
00:54:46,260 --> 00:54:48,440
wireless

1175
00:54:53,620 --> 00:55:00,450
<font color="#E5E5E5">see the</font><font color="#CCCCCC"> EMT options gone so it's</font>

1176
00:54:57,430 --> 00:55:00,450
essentially disabled it

1177
00:55:05,110 --> 00:55:10,010
this is essentially<font color="#E5E5E5"> a compilation of</font>

1178
00:55:07,370 --> 00:55:11,720
coreboot being a free and<font color="#E5E5E5"> open source</font>

1179
00:55:10,010 --> 00:55:13,010
project you sort of have<font color="#CCCCCC"> to select your</font>

1180
00:55:11,720 --> 00:55:14,689
<font color="#E5E5E5">board</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> supports a whole bunch</font><font color="#CCCCCC"> of</font>

1181
00:55:13,010 --> 00:55:18,620
<font color="#CCCCCC">different</font><font color="#E5E5E5"> hardware I've selected the x2</font>

1182
00:55:14,690 --> 00:55:20,360
20 it supports a number of payloads<font color="#CCCCCC"> so</font>

1183
00:55:18,620 --> 00:55:24,170
when you run<font color="#CCCCCC"> Corbitt on your machine you</font>

1184
00:55:20,360 --> 00:55:26,510
<font color="#CCCCCC">are not just</font><font color="#E5E5E5"> running for</font><font color="#CCCCCC"> boot so</font><font color="#E5E5E5"> you can</font>

1185
00:55:24,170 --> 00:55:28,100
basically configure<font color="#CCCCCC"> coreboot to load</font>

1186
00:55:26,510 --> 00:55:30,740
what's called<font color="#CCCCCC"> C BIOS</font><font color="#E5E5E5"> which is an</font><font color="#CCCCCC"> open</font>

1187
00:55:28,100 --> 00:55:32,630
<font color="#CCCCCC">source traditional</font><font color="#E5E5E5"> BIOS</font><font color="#CCCCCC"> you can</font>

1188
00:55:30,740 --> 00:55:34,790
configure it to actually load grub

1189
00:55:32,630 --> 00:55:37,160
<font color="#E5E5E5">directly in the SPI flash</font><font color="#CCCCCC"> so you</font><font color="#E5E5E5"> can</font>

1190
00:55:34,790 --> 00:55:38,509
direct boot you kernel or your OS you

1191
00:55:37,160 --> 00:55:40,279
<font color="#CCCCCC">can even load a Linux kernel in as a</font>

1192
00:55:38,510 --> 00:55:41,330
payload so you<font color="#E5E5E5"> actually really cut</font><font color="#CCCCCC"> down</font>

1193
00:55:40,280 --> 00:55:46,610
the<font color="#E5E5E5"> amount of code running on your</font>

1194
00:55:41,330 --> 00:55:48,799
<font color="#E5E5E5">machine</font><font color="#CCCCCC"> I've gone</font><font color="#E5E5E5"> with grub here one</font>

1195
00:55:46,610 --> 00:55:51,110
downside from filming<font color="#E5E5E5"> this demo was that</font>

1196
00:55:48,800 --> 00:55:52,280
I learned about<font color="#E5E5E5"> halfway through actually</font>

1197
00:55:51,110 --> 00:55:55,310
<font color="#CCCCCC">it made me super glad I</font><font color="#E5E5E5"> wasn't doing</font>

1198
00:55:52,280 --> 00:55:58,700
this live is<font color="#E5E5E5"> that you actually can't get</font>

1199
00:55:55,310 --> 00:56:03,940
an external<font color="#CCCCCC"> monitor working</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> coreboot</font>

1200
00:55:58,700 --> 00:56:03,939
apparently compilation

1201
00:56:07,450 --> 00:56:11,720
<font color="#E5E5E5">I'm just flashing in</font><font color="#CCCCCC"> and then running em</font>

1202
00:56:10,130 --> 00:56:14,420
a cleaner<font color="#E5E5E5"> over the coreboot binary</font>

1203
00:56:11,720 --> 00:56:15,919
because<font color="#CCCCCC"> Corbett needs the Emmy firmware</font>

1204
00:56:14,420 --> 00:56:18,160
as well as keep the processor up and

1205
00:56:15,920 --> 00:56:18,160
running

1206
00:56:24,450 --> 00:56:30,210
and it's following up on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> laptop</font>

1207
00:56:26,940 --> 00:56:33,119
screen now because their boots straight

1208
00:56:30,210 --> 00:56:37,079
into<font color="#E5E5E5"> grub so</font><font color="#CCCCCC"> no vendor bios anymore and</font>

1209
00:56:33,119 --> 00:56:38,190
me disabled and<font color="#E5E5E5"> you can embed a config</font>

1210
00:56:37,079 --> 00:56:39,660
file so at<font color="#E5E5E5"> boot you kernel and</font>

1211
00:56:38,190 --> 00:56:42,119
<font color="#E5E5E5">everything like</font><font color="#CCCCCC"> that for the purposes of</font>

1212
00:56:39,660 --> 00:56:44,270
<font color="#E5E5E5">the demo I didn't but that's essentially</font>

1213
00:56:42,119 --> 00:56:44,270
<font color="#E5E5E5">it</font>

1214
00:56:53,940 --> 00:56:57,109
any questions

1215
00:57:02,290 --> 00:57:07,050
thank you very much change let's give

1216
00:57:04,120 --> 00:57:07,049
James<font color="#CCCCCC"> a round of applause</font>

1217
00:57:12,260 --> 00:57:16,890
we might have<font color="#E5E5E5"> time</font><font color="#CCCCCC"> for one question</font>

1218
00:57:15,059 --> 00:57:19,109
before<font color="#CCCCCC"> us</font><font color="#E5E5E5"> that before the start of the</font>

1219
00:57:16,890 --> 00:57:22,890
<font color="#E5E5E5">next talk if there's any person people</font>

1220
00:57:19,109 --> 00:57:26,058
<font color="#E5E5E5">out there that want to ask</font><font color="#CCCCCC"> okay great we</font>

1221
00:57:22,890 --> 00:57:26,058
have one<font color="#E5E5E5"> question over</font><font color="#CCCCCC"> here</font>

1222
00:57:28,130 --> 00:57:35,700
so how many<font color="#E5E5E5"> systems have signed by</font><font color="#CCCCCC"> OSA</font>

1223
00:57:32,519 --> 00:57:37,140
so you can't run any cleaner on them<font color="#E5E5E5"> so</font>

1224
00:57:35,700 --> 00:57:40,618
<font color="#E5E5E5">I actually actually missed the last half</font>

1225
00:57:37,140 --> 00:57:42,089
of the question<font color="#E5E5E5"> so how many biases are</font>

1226
00:57:40,619 --> 00:57:45,000
<font color="#E5E5E5">signs that you can't just run any</font>

1227
00:57:42,089 --> 00:57:47,308
cleaner and modify them<font color="#CCCCCC"> pretty much</font><font color="#E5E5E5"> any</font>

1228
00:57:45,000 --> 00:57:49,650
<font color="#CCCCCC">OAM system so the Novo</font><font color="#E5E5E5"> dell they they</font>

1229
00:57:47,309 --> 00:57:51,390
all enable good<font color="#CCCCCC"> card it's all all signed</font>

1230
00:57:49,650 --> 00:57:55,470
pretty much the only<font color="#CCCCCC"> one</font><font color="#E5E5E5"> newer systems</font>

1231
00:57:51,390 --> 00:57:57,240
is to<font color="#E5E5E5"> go with</font><font color="#CCCCCC"> a vendor who specifically</font>

1232
00:57:55,470 --> 00:57:59,519
<font color="#E5E5E5">doesn't sign their</font><font color="#CCCCCC"> BIOS is</font><font color="#E5E5E5"> like system</font>

1233
00:57:57,240 --> 00:58:03,450
77 purism don't paying me any<font color="#E5E5E5"> money to</font>

1234
00:57:59,519 --> 00:58:05,549
say that<font color="#CCCCCC"> or build</font><font color="#E5E5E5"> your own systems using</font>

1235
00:58:03,450 --> 00:58:06,598
sort<font color="#E5E5E5"> of</font><font color="#CCCCCC"> standalone parts but they they</font>

1236
00:58:05,549 --> 00:58:07,100
all enable it because it's a security

1237
00:58:06,599 --> 00:58:08,930
<font color="#CCCCCC">feature</font>

1238
00:58:07,100 --> 00:58:11,130
[Music]

1239
00:58:08,930 --> 00:58:12,669
thank you very much<font color="#E5E5E5"> just one more round</font>

1240
00:58:11,130 --> 00:58:15,889
of applause for<font color="#E5E5E5"> James</font>

1241
00:58:12,670 --> 00:58:15,889
[Applause]

1242
00:58:17,190 --> 00:58:20,640
and by the way James mentioned<font color="#CCCCCC"> this</font>

1243
00:58:19,109 --> 00:58:23,038
earlier he<font color="#E5E5E5"> is part of the hardware</font>

1244
00:58:20,640 --> 00:58:25,650
<font color="#E5E5E5">people</font><font color="#CCCCCC"> which stuff is Paul Louise coming</font>

1245
00:58:23,039 --> 00:58:27,329
up next so go see those guys<font color="#E5E5E5"> tomorrow at</font>

1246
00:58:25,650 --> 00:58:30,349
the hardware hacking village<font color="#E5E5E5"> and they'll</font>

1247
00:58:27,329 --> 00:58:30,349
show you a thing or two

