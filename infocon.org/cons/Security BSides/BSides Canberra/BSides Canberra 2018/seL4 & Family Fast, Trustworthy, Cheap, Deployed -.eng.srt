1
00:00:10,920 --> 00:00:17,039
we actually<font color="#E5E5E5"> have a really</font><font color="#CCCCCC"> great talk now</font>

2
00:00:12,980 --> 00:00:19,789
<font color="#CCCCCC">by</font><font color="#E5E5E5"> Igor coos</font><font color="#CCCCCC"> talking</font><font color="#E5E5E5"> about self force</font>

3
00:00:17,039 --> 00:00:21,840
which is<font color="#E5E5E5"> the formally verified</font>

4
00:00:19,789 --> 00:00:25,740
microkernel<font color="#CCCCCC"> and</font><font color="#E5E5E5"> he'll be</font><font color="#CCCCCC"> talking about</font>

5
00:00:21,840 --> 00:00:29,219
self<font color="#E5E5E5"> Loren family</font><font color="#CCCCCC"> fast</font><font color="#E5E5E5"> trustworthy</font><font color="#CCCCCC"> sheep</font>

6
00:00:25,740 --> 00:00:36,360
<font color="#E5E5E5">deployed so let's welcome</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> hall with a</font>

7
00:00:29,219 --> 00:00:38,820
round of<font color="#E5E5E5"> applause all right thanks</font>

8
00:00:36,360 --> 00:00:42,960
everyone<font color="#CCCCCC"> so yeah I me whore</font><font color="#E5E5E5"> and I'm</font>

9
00:00:38,820 --> 00:00:44,579
gonna talk<font color="#CCCCCC"> to you about SEL</font><font color="#E5E5E5"> for and the</font>

10
00:00:42,960 --> 00:00:46,200
work<font color="#CCCCCC"> were</font><font color="#E5E5E5"> do well I'll introduce what it</font>

11
00:00:44,579 --> 00:00:47,970
is in<font color="#CCCCCC"> case people aren't aware</font><font color="#E5E5E5"> of what</font>

12
00:00:46,200 --> 00:00:50,880
it<font color="#CCCCCC"> is</font><font color="#E5E5E5"> and then I'll talk about the work</font>

13
00:00:47,970 --> 00:00:54,210
we're doing in order to<font color="#E5E5E5"> make</font><font color="#CCCCCC"> it more</font>

14
00:00:50,880 --> 00:00:57,390
widely<font color="#E5E5E5"> used basically so there's this</font>

15
00:00:54,210 --> 00:00:59,100
common common knowledge that<font color="#E5E5E5"> if you want</font>

16
00:00:57,390 --> 00:01:01,200
to<font color="#E5E5E5"> build a system or you want to get a</font>

17
00:00:59,100 --> 00:01:02,430
<font color="#E5E5E5">service then</font><font color="#CCCCCC"> you want</font><font color="#E5E5E5"> it to be fast you</font>

18
00:01:01,200 --> 00:01:05,659
want it to be good<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you want</font><font color="#E5E5E5"> it to be</font>

19
00:01:02,430 --> 00:01:09,479
cheap<font color="#CCCCCC"> but you can usually only</font><font color="#E5E5E5"> pick two</font>

20
00:01:05,659 --> 00:01:12,000
<font color="#CCCCCC">so we've got SEO for and family which is</font>

21
00:01:09,479 --> 00:01:15,299
<font color="#CCCCCC">the platform</font><font color="#E5E5E5"> around it and other tools</font>

22
00:01:12,000 --> 00:01:17,340
<font color="#E5E5E5">related to it</font><font color="#CCCCCC"> and what we want is all</font>

23
00:01:15,299 --> 00:01:19,950
three<font color="#E5E5E5"> of those so I'm</font><font color="#CCCCCC"> gonna talk to you</font>

24
00:01:17,340 --> 00:01:21,330
about why I see SEO for<font color="#E5E5E5"> is fast and good</font>

25
00:01:19,950 --> 00:01:22,830
and then I'm gonna<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> to you about</font>

26
00:01:21,330 --> 00:01:27,960
what we're doing<font color="#E5E5E5"> to</font><font color="#CCCCCC"> make building</font>

27
00:01:22,830 --> 00:01:29,908
systems with it cheap<font color="#E5E5E5"> so SEO for maybe</font>

28
00:01:27,960 --> 00:01:32,250
show of<font color="#E5E5E5"> hands who</font><font color="#CCCCCC"> knows what it is</font><font color="#E5E5E5"> who's</font>

29
00:01:29,909 --> 00:01:32,820
never heard<font color="#CCCCCC"> of it</font><font color="#E5E5E5"> a couple</font><font color="#CCCCCC"> of people all</font>

30
00:01:32,250 --> 00:01:36,060
right cool

31
00:01:32,820 --> 00:01:39,149
so SEO<font color="#E5E5E5"> for is a small fast capability</font>

32
00:01:36,060 --> 00:01:44,130
<font color="#E5E5E5">based operating systems microkernel so</font>

33
00:01:39,150 --> 00:01:46,170
what does that mean<font color="#CCCCCC"> it's small so think</font>

34
00:01:44,130 --> 00:01:49,798
<font color="#CCCCCC">about the order of 10,000 lines of</font><font color="#E5E5E5"> code</font>

35
00:01:46,170 --> 00:01:52,920
of<font color="#CCCCCC"> see and assembly what that means is</font>

36
00:01:49,799 --> 00:01:55,110
that it has<font color="#CCCCCC"> a small attack surface so</font>

37
00:01:52,920 --> 00:01:57,680
there's not that<font color="#E5E5E5"> much</font><font color="#CCCCCC"> code to attack and</font>

38
00:01:55,110 --> 00:02:00,060
more<font color="#E5E5E5"> importantly it's amenable to</font>

39
00:01:57,680 --> 00:02:01,830
<font color="#E5E5E5">verification to formal verification so</font>

40
00:02:00,060 --> 00:02:05,159
you can<font color="#CCCCCC"> actually do proofs</font><font color="#E5E5E5"> about the</font>

41
00:02:01,830 --> 00:02:07,408
whole code base it's not<font color="#E5E5E5"> too big it's</font>

42
00:02:05,159 --> 00:02:09,780
fast what does that<font color="#E5E5E5"> mean it's the</font>

43
00:02:07,409 --> 00:02:11,849
world's fastest<font color="#E5E5E5"> operating systems kernel</font>

44
00:02:09,780 --> 00:02:14,189
<font color="#E5E5E5">and that's designed</font><font color="#CCCCCC"> for security and</font>

45
00:02:11,849 --> 00:02:16,078
<font color="#CCCCCC">safety</font><font color="#E5E5E5"> so what does that mean</font>

46
00:02:14,189 --> 00:02:17,640
it<font color="#CCCCCC"> means</font><font color="#E5E5E5"> that it's suitable for use in</font>

47
00:02:16,079 --> 00:02:19,260
<font color="#E5E5E5">the real world so</font><font color="#CCCCCC"> our goal with</font>

48
00:02:17,640 --> 00:02:20,480
developing a<font color="#E5E5E5"> seal for was to build</font>

49
00:02:19,260 --> 00:02:23,390
something<font color="#CCCCCC"> that was</font>

50
00:02:20,480 --> 00:02:24,950
<font color="#CCCCCC">pure</font><font color="#E5E5E5"> that could be formally verified</font><font color="#CCCCCC"> but</font>

51
00:02:23,390 --> 00:02:26,899
that could<font color="#CCCCCC"> be used for real-world</font>

52
00:02:24,950 --> 00:02:28,518
<font color="#CCCCCC">systems we didn't want a toy system we</font>

53
00:02:26,900 --> 00:02:29,629
didn't want an academic system we wanted

54
00:02:28,519 --> 00:02:33,080
something<font color="#E5E5E5"> that we could</font><font color="#CCCCCC"> build real</font>

55
00:02:29,629 --> 00:02:35,179
systems on<font color="#CCCCCC"> top of it's capability-based</font>

56
00:02:33,080 --> 00:02:37,370
<font color="#CCCCCC">so what does that mean</font><font color="#E5E5E5"> it's built with</font>

57
00:02:35,180 --> 00:02:41,030
the capability<font color="#E5E5E5"> based security model and</font>

58
00:02:37,370 --> 00:02:44,900
<font color="#E5E5E5">that means that unprivileged code needs</font>

59
00:02:41,030 --> 00:02:47,120
permission<font color="#E5E5E5"> to</font><font color="#CCCCCC"> access resources</font><font color="#E5E5E5"> and to do</font>

60
00:02:44,900 --> 00:02:49,250
communication so by default you can't do

61
00:02:47,120 --> 00:02:51,590
anything<font color="#E5E5E5"> unless you're given explicit</font>

62
00:02:49,250 --> 00:02:53,180
permission to do something<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so what</font>

63
00:02:51,590 --> 00:02:56,150
that<font color="#CCCCCC"> means is that</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> kernel can</font>

64
00:02:53,180 --> 00:03:00,650
confine damage from attacks in

65
00:02:56,150 --> 00:03:02,989
unprivileged code and then finally it's

66
00:03:00,650 --> 00:03:05,840
an operating<font color="#E5E5E5"> systems microkernel so what</font>

67
00:03:02,989 --> 00:03:08,120
<font color="#CCCCCC">that means is code that runs in the up</font>

68
00:03:05,840 --> 00:03:09,739
in the sorry<font color="#CCCCCC"> it's the operating</font><font color="#E5E5E5"> system</font>

69
00:03:08,120 --> 00:03:12,140
kernel<font color="#CCCCCC"> which means that it is the</font><font color="#E5E5E5"> code</font>

70
00:03:09,739 --> 00:03:14,390
<font color="#CCCCCC">that</font><font color="#E5E5E5"> runs in the privileged mode of</font>

71
00:03:12,140 --> 00:03:16,339
hardware<font color="#CCCCCC"> and that means it's the</font><font color="#E5E5E5"> most</font>

72
00:03:14,390 --> 00:03:18,230
<font color="#E5E5E5">critical part of the software</font><font color="#CCCCCC"> because</font>

73
00:03:16,340 --> 00:03:20,120
<font color="#E5E5E5">anything that</font><font color="#CCCCCC"> the operating</font><font color="#E5E5E5"> system</font>

74
00:03:18,230 --> 00:03:22,220
<font color="#CCCCCC">kernel</font><font color="#E5E5E5"> can do anything that's running in</font>

75
00:03:20,120 --> 00:03:24,709
privileged mode<font color="#E5E5E5"> can do whatever it wants</font>

76
00:03:22,220 --> 00:03:29,209
in the whole<font color="#E5E5E5"> system so there's a little</font>

77
00:03:24,709 --> 00:03:30,920
picture<font color="#E5E5E5"> of what SEO for is it's that</font>

78
00:03:29,209 --> 00:03:33,049
<font color="#E5E5E5">middle layer between the</font><font color="#CCCCCC"> hardware and</font>

79
00:03:30,920 --> 00:03:34,578
the<font color="#CCCCCC"> user level applications it's the</font>

80
00:03:33,049 --> 00:03:37,130
part that<font color="#CCCCCC"> runs in</font><font color="#E5E5E5"> privileged mode and</font>

81
00:03:34,579 --> 00:03:39,609
<font color="#E5E5E5">basically does virtual memory management</font>

82
00:03:37,130 --> 00:03:42,980
does<font color="#CCCCCC"> inter process communication</font>

83
00:03:39,609 --> 00:03:45,950
dust<font color="#E5E5E5"> read management and provides access</font>

84
00:03:42,980 --> 00:03:49,040
<font color="#E5E5E5">control and then everything else in the</font>

85
00:03:45,950 --> 00:03:51,768
system<font color="#E5E5E5"> is written on top of the kernel</font>

86
00:03:49,040 --> 00:03:53,870
<font color="#E5E5E5">runs</font><font color="#CCCCCC"> in unprivileged mode</font><font color="#E5E5E5"> and basically</font>

87
00:03:51,769 --> 00:03:56,060
runs as components<font color="#E5E5E5"> that can be isolated</font>

88
00:03:53,870 --> 00:03:58,700
<font color="#E5E5E5">from each other so this is kind of an</font>

89
00:03:56,060 --> 00:04:00,859
<font color="#E5E5E5">overview of what SEO</font><font color="#CCCCCC"> for is bring</font>

90
00:03:58,700 --> 00:04:03,950
everyone up to<font color="#CCCCCC"> speed ok so I mentioned</font>

91
00:04:00,859 --> 00:04:09,200
<font color="#E5E5E5">it's fast so what does that mean well</font>

92
00:04:03,950 --> 00:04:11,030
some numbers<font color="#E5E5E5"> to just look at the goal of</font>

93
00:04:09,200 --> 00:04:13,010
making<font color="#E5E5E5"> a sale for fast</font><font color="#CCCCCC"> is to make the</font>

94
00:04:11,030 --> 00:04:15,440
<font color="#E5E5E5">IPC which is inter process communication</font>

95
00:04:13,010 --> 00:04:17,630
performance fast<font color="#CCCCCC"> so that when you</font><font color="#E5E5E5"> need</font>

96
00:04:15,440 --> 00:04:19,339
<font color="#CCCCCC">to switch from component process to</font>

97
00:04:17,630 --> 00:04:21,079
<font color="#E5E5E5">process and use the level or when you</font>

98
00:04:19,339 --> 00:04:22,580
need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do communication between the</font>

99
00:04:21,079 --> 00:04:23,930
<font color="#CCCCCC">processes you can do that</font><font color="#E5E5E5"> very quickly</font>

100
00:04:22,580 --> 00:04:26,840
and<font color="#CCCCCC"> that's important for a microkernel</font>

101
00:04:23,930 --> 00:04:27,460
<font color="#E5E5E5">because it relies</font><font color="#CCCCCC"> on this switching and</font>

102
00:04:26,840 --> 00:04:29,679
this

103
00:04:27,460 --> 00:04:31,180
communication<font color="#E5E5E5"> so it's the fastest</font>

104
00:04:29,680 --> 00:04:33,550
microkernel<font color="#E5E5E5"> out there has the fastest</font>

105
00:04:31,180 --> 00:04:36,220
IPC interesting thing<font color="#E5E5E5"> I was when we</font>

106
00:04:33,550 --> 00:04:38,349
<font color="#E5E5E5">started developing a steel floor with</font>

107
00:04:36,220 --> 00:04:41,050
this<font color="#E5E5E5"> goal of formally verifying it and</font>

108
00:04:38,349 --> 00:04:44,139
so on that we wanted<font color="#CCCCCC"> to make sure</font><font color="#E5E5E5"> that</font>

109
00:04:41,050 --> 00:04:46,630
<font color="#CCCCCC">it wouldn't</font><font color="#E5E5E5"> be less than or</font><font color="#CCCCCC"> more than</font>

110
00:04:44,139 --> 00:04:48,430
<font color="#CCCCCC">10%</font><font color="#E5E5E5"> slower than the current version than</font>

111
00:04:46,630 --> 00:04:50,469
the existing versions<font color="#E5E5E5"> in the end it</font>

112
00:04:48,430 --> 00:04:51,819
ended<font color="#E5E5E5"> up being the fastest version ended</font>

113
00:04:50,470 --> 00:04:55,150
up being<font color="#CCCCCC"> faster than the</font><font color="#E5E5E5"> existing</font>

114
00:04:51,819 --> 00:04:57,910
versions<font color="#E5E5E5"> so that was a good win so it's</font>

115
00:04:55,150 --> 00:05:00,789
fast<font color="#E5E5E5"> it's good what do we mean by SEO</font>

116
00:04:57,910 --> 00:05:02,380
<font color="#E5E5E5">for is good well in this case we mean</font>

117
00:05:00,789 --> 00:05:04,360
that the code is<font color="#CCCCCC"> good the code is</font>

118
00:05:02,380 --> 00:05:07,960
trustworthy<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's the world's most</font>

119
00:05:04,360 --> 00:05:09,039
verified kernel so we have a lot<font color="#CCCCCC"> of</font>

120
00:05:07,960 --> 00:05:10,930
different ways of<font color="#E5E5E5"> saying this but</font>

121
00:05:09,039 --> 00:05:13,180
<font color="#CCCCCC">basically it means that we've</font><font color="#E5E5E5"> formally</font>

122
00:05:10,930 --> 00:05:16,599
verified that kernel<font color="#E5E5E5"> so what does that</font>

123
00:05:13,180 --> 00:05:19,330
mean we've got a mathematical<font color="#E5E5E5"> proof that</font>

124
00:05:16,599 --> 00:05:22,449
<font color="#E5E5E5">it's code is correct with</font><font color="#CCCCCC"> respect to its</font>

125
00:05:19,330 --> 00:05:24,250
specification we have a<font color="#CCCCCC"> mathematical</font>

126
00:05:22,449 --> 00:05:27,069
<font color="#E5E5E5">proof that enforces strong security</font>

127
00:05:24,250 --> 00:05:28,870
properties and we've proved safe<font color="#E5E5E5"> from</font>

128
00:05:27,069 --> 00:05:31,960
<font color="#E5E5E5">upper bounds on</font><font color="#CCCCCC"> the worst case execution</font>

129
00:05:28,870 --> 00:05:33,970
time<font color="#E5E5E5"> of the kernel so let me explain</font>

130
00:05:31,960 --> 00:05:36,159
<font color="#E5E5E5">this picture here if you look at the</font>

131
00:05:33,970 --> 00:05:38,289
middle there's a green box that<font color="#E5E5E5"> says</font>

132
00:05:36,159 --> 00:05:39,610
specification<font color="#CCCCCC"> so what we did was we</font>

133
00:05:38,289 --> 00:05:42,550
started<font color="#CCCCCC"> with the specification of</font><font color="#E5E5E5"> the</font>

134
00:05:39,610 --> 00:05:45,130
specification<font color="#E5E5E5"> basically tells you what</font>

135
00:05:42,550 --> 00:05:47,500
the API does<font color="#E5E5E5"> so for every API function</font>

136
00:05:45,130 --> 00:05:48,820
we specify exactly what<font color="#E5E5E5"> it does what</font><font color="#CCCCCC"> the</font>

137
00:05:47,500 --> 00:05:50,830
preconditions are what the post

138
00:05:48,820 --> 00:05:52,570
conditions are how the state changes

139
00:05:50,830 --> 00:05:55,150
after<font color="#CCCCCC"> you run</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> function so this is</font>

140
00:05:52,570 --> 00:05:58,870
all formally specified<font color="#E5E5E5"> in in</font><font color="#CCCCCC"> Isabel</font>

141
00:05:55,150 --> 00:06:00,909
which is a formal logic what we then do

142
00:05:58,870 --> 00:06:03,669
<font color="#E5E5E5">is go to the box underneath that and</font>

143
00:06:00,909 --> 00:06:07,840
write code that<font color="#E5E5E5"> implements that</font>

144
00:06:03,669 --> 00:06:09,698
<font color="#E5E5E5">specification we take that code and we</font>

145
00:06:07,840 --> 00:06:11,830
translate it<font color="#CCCCCC"> into the same</font><font color="#E5E5E5"> kind of</font>

146
00:06:09,699 --> 00:06:13,570
formal logic<font color="#CCCCCC"> Isabel in</font><font color="#E5E5E5"> Isabel in</font>

147
00:06:11,830 --> 00:06:16,060
<font color="#CCCCCC">higher-order</font><font color="#E5E5E5"> logic so we have this</font>

148
00:06:13,570 --> 00:06:18,699
<font color="#E5E5E5">formal specification so then we've got</font>

149
00:06:16,060 --> 00:06:21,070
this<font color="#CCCCCC"> visa specification</font><font color="#E5E5E5"> and this API</font>

150
00:06:18,699 --> 00:06:24,219
specification<font color="#CCCCCC"> and then we do a formal</font>

151
00:06:21,070 --> 00:06:25,990
proof<font color="#E5E5E5"> so a mathematical proof that the</font>

152
00:06:24,219 --> 00:06:29,699
<font color="#E5E5E5">C's specification that the C code</font>

153
00:06:25,990 --> 00:06:32,560
implements exactly the API specification

154
00:06:29,699 --> 00:06:35,100
<font color="#E5E5E5">why is that important well</font><font color="#CCCCCC"> obviously</font>

155
00:06:32,560 --> 00:06:36,900
it's important because<font color="#E5E5E5"> you want to know</font>

156
00:06:35,100 --> 00:06:39,420
<font color="#E5E5E5">your code is implementing the API</font>

157
00:06:36,900 --> 00:06:41,909
correctly it's gonna do what you think

158
00:06:39,420 --> 00:06:44,610
it's going to<font color="#E5E5E5"> do but more importantly it</font>

159
00:06:41,910 --> 00:06:46,980
means that the C code implements exactly

160
00:06:44,610 --> 00:06:48,390
<font color="#E5E5E5">these the API specification so it</font>

161
00:06:46,980 --> 00:06:50,430
doesn't do anything<font color="#E5E5E5"> more and it doesn't</font>

162
00:06:48,390 --> 00:06:52,919
do anything less<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is important</font>

163
00:06:50,430 --> 00:06:55,710
because<font color="#CCCCCC"> that also means that your C code</font>

164
00:06:52,920 --> 00:06:58,950
doesn't<font color="#E5E5E5"> do things like buffer overflows</font>

165
00:06:55,710 --> 00:07:01,080
access the<font color="#E5E5E5"> wrong memory it doesn't do</font>

166
00:06:58,950 --> 00:07:03,060
things like null pointer dereferences

167
00:07:01,080 --> 00:07:05,039
and so on<font color="#E5E5E5"> so that takes away a whole</font>

168
00:07:03,060 --> 00:07:06,660
<font color="#CCCCCC">category of</font><font color="#E5E5E5"> potential problems in your</font>

169
00:07:05,040 --> 00:07:08,880
<font color="#E5E5E5">code so you know that your code does the</font>

170
00:07:06,660 --> 00:07:11,790
right thing and you know it doesn't do

171
00:07:08,880 --> 00:07:13,770
all the bad<font color="#E5E5E5"> things that it could do so</font>

172
00:07:11,790 --> 00:07:16,650
anyone who's paying attention will have

173
00:07:13,770 --> 00:07:19,109
a bunch of objections here<font color="#CCCCCC"> at least two</font>

174
00:07:16,650 --> 00:07:20,820
so one of them is<font color="#CCCCCC"> well how do you</font><font color="#E5E5E5"> know</font>

175
00:07:19,110 --> 00:07:22,260
<font color="#CCCCCC">that the specification is right</font><font color="#E5E5E5"> how do</font>

176
00:07:20,820 --> 00:07:24,900
you know<font color="#CCCCCC"> that you got the specification</font>

177
00:07:22,260 --> 00:07:26,640
right and the answer to<font color="#CCCCCC"> that is well you</font>

178
00:07:24,900 --> 00:07:28,710
look at it<font color="#E5E5E5"> really hard</font><font color="#CCCCCC"> and you make sure</font>

179
00:07:26,640 --> 00:07:30,719
that<font color="#CCCCCC"> it says what</font><font color="#E5E5E5"> you think it says but</font>

180
00:07:28,710 --> 00:07:33,299
we<font color="#E5E5E5"> went a step</font><font color="#CCCCCC"> further</font><font color="#E5E5E5"> and so we said</font>

181
00:07:30,720 --> 00:07:34,560
<font color="#E5E5E5">well we want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use this code</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> build</font>

182
00:07:33,300 --> 00:07:36,480
secure systems so what kind of

183
00:07:34,560 --> 00:07:38,280
<font color="#E5E5E5">properties</font><font color="#CCCCCC"> of secure systems need well</font>

184
00:07:36,480 --> 00:07:39,900
there's the standard CIA properties

185
00:07:38,280 --> 00:07:42,450
confidentiality<font color="#E5E5E5"> integrity and</font>

186
00:07:39,900 --> 00:07:44,429
availability<font color="#E5E5E5"> and so what we did was we</font>

187
00:07:42,450 --> 00:07:46,229
<font color="#CCCCCC">made</font><font color="#E5E5E5"> proofs on top of the specification</font>

188
00:07:44,430 --> 00:07:49,160
that<font color="#CCCCCC"> say that if you set up</font><font color="#E5E5E5"> your system</font>

189
00:07:46,230 --> 00:07:50,940
<font color="#CCCCCC">correctly that</font><font color="#E5E5E5"> you will have</font>

190
00:07:49,160 --> 00:07:52,680
<font color="#E5E5E5">confidentiality between different</font>

191
00:07:50,940 --> 00:07:54,000
processes<font color="#E5E5E5"> as long as they're not allowed</font>

192
00:07:52,680 --> 00:07:55,800
to<font color="#CCCCCC"> share any data or have any</font>

193
00:07:54,000 --> 00:07:57,720
communication<font color="#E5E5E5"> you will have integrity</font>

194
00:07:55,800 --> 00:07:58,920
between these<font color="#E5E5E5"> processes</font><font color="#CCCCCC"> that you won't</font>

195
00:07:57,720 --> 00:08:02,280
they<font color="#E5E5E5"> won't be able to modify each</font>

196
00:07:58,920 --> 00:08:04,230
<font color="#E5E5E5">other's data</font><font color="#CCCCCC"> and so in this way we have</font>

197
00:08:02,280 --> 00:08:06,510
proved that the<font color="#E5E5E5"> specification gives us</font>

198
00:08:04,230 --> 00:08:09,390
the properties<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we want so the other</font>

199
00:08:06,510 --> 00:08:11,219
objection people have is well<font color="#CCCCCC"> okay</font>

200
00:08:09,390 --> 00:08:12,960
<font color="#E5E5E5">you've proved the C code but that's not</font>

201
00:08:11,220 --> 00:08:14,640
what runs on<font color="#CCCCCC"> your hardware you still</font>

202
00:08:12,960 --> 00:08:16,950
have a compiler in the mix you<font color="#E5E5E5"> need to</font>

203
00:08:14,640 --> 00:08:19,409
compile the C code into binary<font color="#CCCCCC"> code and</font>

204
00:08:16,950 --> 00:08:21,659
that's<font color="#E5E5E5"> what actually runs so that's true</font>

205
00:08:19,410 --> 00:08:23,490
we didn't take the route<font color="#E5E5E5"> of</font><font color="#CCCCCC"> using a</font>

206
00:08:21,660 --> 00:08:26,040
verified compiler but what we did

207
00:08:23,490 --> 00:08:28,350
instead<font color="#E5E5E5"> was we verified that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> binary</font>

208
00:08:26,040 --> 00:08:30,540
code that the compiler spits out does

209
00:08:28,350 --> 00:08:33,120
the same thing as the C code<font color="#CCCCCC"> and so we</font>

210
00:08:30,540 --> 00:08:34,800
took a bind<font color="#E5E5E5"> the binary code</font><font color="#CCCCCC"> we took a</font>

211
00:08:33,120 --> 00:08:36,780
model<font color="#E5E5E5"> of the hardware</font><font color="#CCCCCC"> that runs on so</font>

212
00:08:34,799 --> 00:08:38,909
<font color="#E5E5E5">this was arm in this case</font>

213
00:08:36,780 --> 00:08:40,620
we read in the<font color="#E5E5E5"> binary code we create a</font>

214
00:08:38,909 --> 00:08:43,559
<font color="#E5E5E5">formal model of what the binary code</font>

215
00:08:40,620 --> 00:08:45,270
does and then we extract control flow

216
00:08:43,559 --> 00:08:47,280
graphs from<font color="#E5E5E5"> the binary code from the C</font>

217
00:08:45,270 --> 00:08:50,069
code<font color="#CCCCCC"> and we show that they do the same</font>

218
00:08:47,280 --> 00:08:52,560
<font color="#CCCCCC">thing and so what that gives us is a</font>

219
00:08:50,070 --> 00:08:54,180
proof that<font color="#E5E5E5"> the binary code that's</font>

220
00:08:52,560 --> 00:08:56,280
running<font color="#E5E5E5"> as long</font><font color="#CCCCCC"> as it's configured</font>

221
00:08:54,180 --> 00:08:58,199
correctly<font color="#E5E5E5"> gives us the desired security</font>

222
00:08:56,280 --> 00:09:00,900
properties<font color="#E5E5E5"> and so this was a big deal</font>

223
00:08:58,200 --> 00:09:04,800
this happened over the over<font color="#E5E5E5"> the</font><font color="#CCCCCC"> last</font>

224
00:09:00,900 --> 00:09:06,270
almost<font color="#CCCCCC"> 10 years and and so</font><font color="#E5E5E5"> these proofs</font>

225
00:09:04,800 --> 00:09:08,069
<font color="#E5E5E5">are mathematical proofs and they're done</font>

226
00:09:06,270 --> 00:09:12,540
in in<font color="#CCCCCC"> Isabel which uses higher-order</font>

227
00:09:08,070 --> 00:09:15,600
<font color="#E5E5E5">logic so it's so SEO for is fast and</font>

228
00:09:12,540 --> 00:09:17,880
it's good which<font color="#E5E5E5"> is awesome but it's not</font>

229
00:09:15,600 --> 00:09:20,160
magic security<font color="#E5E5E5"> fairy dust</font><font color="#CCCCCC"> so just</font>

230
00:09:17,880 --> 00:09:23,010
sprinkling some<font color="#CCCCCC"> SEL 4 on your</font><font color="#E5E5E5"> systems</font>

231
00:09:20,160 --> 00:09:26,730
won't make<font color="#E5E5E5"> them secure so what's the</font>

232
00:09:23,010 --> 00:09:28,590
catch why why not<font color="#CCCCCC"> we have a bunch</font><font color="#E5E5E5"> of</font>

233
00:09:26,730 --> 00:09:30,330
assumptions<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the proof</font><font color="#CCCCCC"> so one of the</font>

234
00:09:28,590 --> 00:09:32,370
big assumptions in the proof is that<font color="#E5E5E5"> the</font>

235
00:09:30,330 --> 00:09:33,900
<font color="#E5E5E5">hardware is correct</font><font color="#CCCCCC"> and it does the</font>

236
00:09:32,370 --> 00:09:35,460
<font color="#E5E5E5">right thing and that's not always the</font>

237
00:09:33,900 --> 00:09:36,900
<font color="#CCCCCC">case and particularly we've seen</font>

238
00:09:35,460 --> 00:09:38,160
<font color="#CCCCCC">recently with</font><font color="#E5E5E5"> meltdown inspector that</font>

239
00:09:36,900 --> 00:09:41,790
<font color="#CCCCCC">the</font><font color="#E5E5E5"> hardware does really bad things</font>

240
00:09:38,160 --> 00:09:43,469
<font color="#E5E5E5">sometimes not all of the code is is</font>

241
00:09:41,790 --> 00:09:45,300
verified yet so there's some part of<font color="#E5E5E5"> the</font>

242
00:09:43,470 --> 00:09:46,980
kernel<font color="#E5E5E5"> initialization there's a little</font>

243
00:09:45,300 --> 00:09:51,150
bit of<font color="#CCCCCC"> assembly code that</font><font color="#E5E5E5"> isn't fully</font>

244
00:09:46,980 --> 00:09:52,920
verified<font color="#E5E5E5"> yet</font><font color="#CCCCCC"> SEO for currently runs on a</font>

245
00:09:51,150 --> 00:09:55,319
single<font color="#CCCCCC"> core it's verified for</font><font color="#E5E5E5"> a single</font>

246
00:09:52,920 --> 00:09:57,240
core<font color="#E5E5E5"> so a lot of systems</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to use</font>

247
00:09:55,320 --> 00:09:59,820
multi core we're still working on<font color="#E5E5E5"> that</font>

248
00:09:57,240 --> 00:10:01,470
and<font color="#CCCCCC"> then SEO for</font><font color="#E5E5E5"> again is the</font>

249
00:09:59,820 --> 00:10:03,510
microkernel that runs in privilege level

250
00:10:01,470 --> 00:10:06,660
there's a<font color="#E5E5E5"> lot of code</font><font color="#CCCCCC"> that needs to run</font>

251
00:10:03,510 --> 00:10:08,610
at user level<font color="#E5E5E5"> so we need to verify</font>

252
00:10:06,660 --> 00:10:10,439
libraries and user level code and stuff

253
00:10:08,610 --> 00:10:10,980
<font color="#E5E5E5">like that so there's still more proof to</font>

254
00:10:10,440 --> 00:10:13,290
be done

255
00:10:10,980 --> 00:10:14,880
it's a microkernel not a full operating

256
00:10:13,290 --> 00:10:16,949
system<font color="#CCCCCC"> so most people aren't used to</font>

257
00:10:14,880 --> 00:10:18,330
<font color="#CCCCCC">working with the microkernel you need to</font>

258
00:10:16,950 --> 00:10:19,710
provide your own drivers you need<font color="#CCCCCC"> to</font>

259
00:10:18,330 --> 00:10:21,510
provide your<font color="#CCCCCC"> own</font><font color="#E5E5E5"> network stack your own</font>

260
00:10:19,710 --> 00:10:22,860
storage stack it doesn't give you POSIX

261
00:10:21,510 --> 00:10:24,540
so if you want POSIX you need to

262
00:10:22,860 --> 00:10:29,130
implement POSIX support on top of that

263
00:10:24,540 --> 00:10:30,660
<font color="#E5E5E5">so kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> difficult</font><font color="#CCCCCC"> to work with and</font>

264
00:10:29,130 --> 00:10:33,210
that<font color="#CCCCCC"> leads</font><font color="#E5E5E5"> to a higher</font><font color="#CCCCCC"> development</font>

265
00:10:30,660 --> 00:10:35,550
effort and cost<font color="#E5E5E5"> for people using it you</font>

266
00:10:33,210 --> 00:10:36,900
need<font color="#CCCCCC"> to port it to potentially port it</font>

267
00:10:35,550 --> 00:10:38,579
<font color="#CCCCCC">to a</font><font color="#E5E5E5"> hardware that you're interested in</font>

268
00:10:36,900 --> 00:10:41,370
<font color="#E5E5E5">it doesn't run on everything under the</font>

269
00:10:38,580 --> 00:10:43,740
Sun<font color="#CCCCCC"> you need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> develop those</font><font color="#E5E5E5"> OS</font>

270
00:10:41,370 --> 00:10:45,330
services you may<font color="#E5E5E5"> need to redesign your</font>

271
00:10:43,740 --> 00:10:45,490
systems if you<font color="#E5E5E5"> want to run them</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> top</font>

272
00:10:45,330 --> 00:10:47,950
of

273
00:10:45,490 --> 00:10:50,290
<font color="#CCCCCC">co4 and</font><font color="#E5E5E5"> it doesn't support every</font>

274
00:10:47,950 --> 00:10:52,709
language<font color="#E5E5E5"> under the</font><font color="#CCCCCC"> Sun so we support</font><font color="#E5E5E5"> see</font>

275
00:10:50,290 --> 00:10:54,880
we have some C++ support we support rust

276
00:10:52,709 --> 00:10:56,319
<font color="#CCCCCC">pass well there's some other languages</font>

277
00:10:54,880 --> 00:10:57,520
we support but you know if you come with

278
00:10:56,320 --> 00:10:58,930
your<font color="#E5E5E5"> favorite</font><font color="#CCCCCC"> language of the day</font>

279
00:10:57,520 --> 00:11:01,420
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> will need to develop</font>

280
00:10:58,930 --> 00:11:05,319
support<font color="#E5E5E5"> for that and then finally the</font>

281
00:11:01,420 --> 00:11:08,890
verification effort and cost<font color="#CCCCCC"> are still</font>

282
00:11:05,320 --> 00:11:10,540
reasonably high<font color="#E5E5E5"> in particular if if the</font>

283
00:11:08,890 --> 00:11:12,220
kernel changes if we<font color="#E5E5E5"> make</font><font color="#CCCCCC"> changes to</font>

284
00:11:10,540 --> 00:11:14,469
<font color="#E5E5E5">that if we</font><font color="#CCCCCC"> add</font><font color="#E5E5E5"> things like to fix</font>

285
00:11:12,220 --> 00:11:16,420
meltdown inspector or if we add features

286
00:11:14,470 --> 00:11:18,670
or if we change the API<font color="#CCCCCC"> around</font><font color="#E5E5E5"> then</font>

287
00:11:16,420 --> 00:11:20,829
those need to<font color="#CCCCCC"> be verified</font><font color="#E5E5E5"> likewise if we</font>

288
00:11:18,670 --> 00:11:22,689
port to a new platform<font color="#E5E5E5"> and add platform</font>

289
00:11:20,830 --> 00:11:26,290
features then those need to<font color="#CCCCCC"> be verified</font>

290
00:11:22,690 --> 00:11:28,060
<font color="#E5E5E5">as well so it's not perfect but we want</font>

291
00:11:26,290 --> 00:11:30,459
to make it perfect<font color="#E5E5E5"> and so this is a</font>

292
00:11:28,060 --> 00:11:34,689
<font color="#E5E5E5">little bit of a story about how to do</font>

293
00:11:30,459 --> 00:11:37,029
<font color="#E5E5E5">that</font><font color="#CCCCCC"> before I</font><font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> that a little</font>

294
00:11:34,690 --> 00:11:39,790
<font color="#E5E5E5">overview of building systems with SEO</font>

295
00:11:37,029 --> 00:11:42,189
for<font color="#CCCCCC"> so if you want to</font><font color="#E5E5E5"> build a system to</font>

296
00:11:39,790 --> 00:11:44,949
run on SEO for this is approximately

297
00:11:42,190 --> 00:11:46,959
what it should<font color="#CCCCCC"> look like</font><font color="#E5E5E5"> so you've got</font>

298
00:11:44,950 --> 00:11:48,550
your hardware your<font color="#E5E5E5"> processor</font><font color="#CCCCCC"> running</font>

299
00:11:46,959 --> 00:11:49,959
you've got the little<font color="#CCCCCC"> microkernel</font>

300
00:11:48,550 --> 00:11:52,719
running on top of that and then

301
00:11:49,959 --> 00:11:55,750
everything else<font color="#E5E5E5"> runs on top of that in</font>

302
00:11:52,720 --> 00:11:57,970
user mode<font color="#E5E5E5"> so in unprivileged mode and so</font>

303
00:11:55,750 --> 00:11:59,620
if you need<font color="#CCCCCC"> to access file system you</font>

304
00:11:57,970 --> 00:12:01,420
need<font color="#E5E5E5"> to provide a process that deals</font>

305
00:11:59,620 --> 00:12:02,950
with<font color="#E5E5E5"> file system</font><font color="#CCCCCC"> access if you need to</font>

306
00:12:01,420 --> 00:12:04,899
access<font color="#E5E5E5"> the</font><font color="#CCCCCC"> network you need</font><font color="#E5E5E5"> to have a</font>

307
00:12:02,950 --> 00:12:07,300
process<font color="#CCCCCC"> that gives you network access</font>

308
00:12:04,899 --> 00:12:08,980
<font color="#E5E5E5">you need your device drivers so to</font>

309
00:12:07,300 --> 00:12:11,229
access<font color="#E5E5E5"> hardware you need</font><font color="#CCCCCC"> to have device</font>

310
00:12:08,980 --> 00:12:12,520
drivers<font color="#E5E5E5"> process management and memory</font>

311
00:12:11,230 --> 00:12:14,260
<font color="#E5E5E5">management and so</font><font color="#CCCCCC"> on so</font><font color="#E5E5E5"> you need to</font>

312
00:12:12,520 --> 00:12:15,699
provide<font color="#CCCCCC"> all of</font><font color="#E5E5E5"> those some</font><font color="#CCCCCC"> of those are</font>

313
00:12:14,260 --> 00:12:17,470
<font color="#E5E5E5">already available some</font><font color="#CCCCCC"> of them you need</font>

314
00:12:15,700 --> 00:12:20,890
<font color="#E5E5E5">to write yourself and then you write</font>

315
00:12:17,470 --> 00:12:22,149
<font color="#E5E5E5">your</font><font color="#CCCCCC"> application so you need to</font><font color="#E5E5E5"> take</font>

316
00:12:20,890 --> 00:12:24,579
your<font color="#CCCCCC"> application you need</font><font color="#E5E5E5"> to structure</font>

317
00:12:22,149 --> 00:12:28,060
<font color="#E5E5E5">it in such a</font><font color="#CCCCCC"> way to make</font><font color="#E5E5E5"> it take</font>

318
00:12:24,579 --> 00:12:30,010
<font color="#CCCCCC">advantage of the confidentiality</font>

319
00:12:28,060 --> 00:12:32,260
integrity properties that<font color="#CCCCCC"> SCF or it</font>

320
00:12:30,010 --> 00:12:34,540
<font color="#E5E5E5">gives you and build your</font><font color="#CCCCCC"> system in</font><font color="#E5E5E5"> that</font>

321
00:12:32,260 --> 00:12:38,110
way<font color="#E5E5E5"> it needs to communicate with all of</font>

322
00:12:34,540 --> 00:12:40,180
those other<font color="#CCCCCC"> components on the left so</font>

323
00:12:38,110 --> 00:12:43,000
the file system<font color="#CCCCCC"> and so on</font><font color="#E5E5E5"> to do things</font>

324
00:12:40,180 --> 00:12:44,680
and then<font color="#CCCCCC"> eventually</font><font color="#E5E5E5"> you get tired of</font>

325
00:12:43,000 --> 00:12:46,570
<font color="#E5E5E5">doing that and so the rest of the stuff</font>

326
00:12:44,680 --> 00:12:48,939
you<font color="#CCCCCC"> just</font><font color="#E5E5E5"> run on Linux running in a</font>

327
00:12:46,570 --> 00:12:52,060
<font color="#CCCCCC">virtual machine you don't</font><font color="#E5E5E5"> care</font><font color="#CCCCCC"> that much</font>

328
00:12:48,940 --> 00:12:54,130
<font color="#CCCCCC">about that</font><font color="#E5E5E5"> the main thing is that SEO</font>

329
00:12:52,060 --> 00:12:56,260
for is a context switching engine so it

330
00:12:54,130 --> 00:12:58,839
allows all<font color="#CCCCCC"> of those processes to</font><font color="#E5E5E5"> run and</font>

331
00:12:56,260 --> 00:12:59,360
switch between<font color="#E5E5E5"> them it gives you this</font>

332
00:12:58,839 --> 00:13:01,820
strong

333
00:12:59,360 --> 00:13:04,190
<font color="#CCCCCC">isolation</font><font color="#E5E5E5"> between</font><font color="#CCCCCC"> the processes</font><font color="#E5E5E5"> so if</font>

334
00:13:01,820 --> 00:13:05,810
one of<font color="#CCCCCC"> those processes goes goes crazy</font>

335
00:13:04,190 --> 00:13:08,240
maybe one of your device drivers is

336
00:13:05,810 --> 00:13:11,689
buggy<font color="#E5E5E5"> and it goes crazy</font><font color="#CCCCCC"> it can't affect</font>

337
00:13:08,240 --> 00:13:13,220
the other processes<font color="#E5E5E5"> and then finally it</font>

338
00:13:11,690 --> 00:13:15,740
gives<font color="#E5E5E5"> you controlled communication</font>

339
00:13:13,220 --> 00:13:17,750
between the processes<font color="#E5E5E5"> so</font><font color="#CCCCCC"> only if you</font>

340
00:13:15,740 --> 00:13:21,589
<font color="#E5E5E5">explicitly allow communication</font><font color="#CCCCCC"> between</font>

341
00:13:17,750 --> 00:13:24,589
processes can you do<font color="#E5E5E5"> that so that's</font>

342
00:13:21,589 --> 00:13:27,500
<font color="#E5E5E5">awesome</font><font color="#CCCCCC"> we want to use SEO for to build</font>

343
00:13:24,589 --> 00:13:29,390
trustworthy systems<font color="#E5E5E5"> this is I'm from the</font>

344
00:13:27,500 --> 00:13:32,149
trustworthy Systems Group<font color="#E5E5E5"> at data 61 our</font>

345
00:13:29,390 --> 00:13:34,730
goal is<font color="#CCCCCC"> to build trustworthy systems</font><font color="#E5E5E5"> but</font>

346
00:13:32,149 --> 00:13:37,970
<font color="#E5E5E5">what's a trustworthy system so let's</font>

347
00:13:34,730 --> 00:13:39,380
start<font color="#E5E5E5"> with software every system that</font>

348
00:13:37,970 --> 00:13:40,760
needs<font color="#E5E5E5"> that has some kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> critical</font>

349
00:13:39,380 --> 00:13:43,040
functionality<font color="#E5E5E5"> or</font><font color="#CCCCCC"> needs secure</font>

350
00:13:40,760 --> 00:13:45,230
functionality will have some trusted

351
00:13:43,040 --> 00:13:47,569
software<font color="#CCCCCC"> and trusted software is the</font>

352
00:13:45,230 --> 00:13:50,120
software<font color="#CCCCCC"> that must work correctly</font><font color="#E5E5E5"> to</font>

353
00:13:47,570 --> 00:13:52,160
ensure that<font color="#CCCCCC"> security requires our men</font><font color="#E5E5E5"> or</font>

354
00:13:50,120 --> 00:13:53,839
another way of<font color="#E5E5E5"> looking at that is it's</font>

355
00:13:52,160 --> 00:13:55,699
the software<font color="#E5E5E5"> that's able to break</font>

356
00:13:53,839 --> 00:13:58,310
security of the system<font color="#CCCCCC"> so if the</font>

357
00:13:55,700 --> 00:13:59,839
<font color="#E5E5E5">software that if it misbehaves it can</font>

358
00:13:58,310 --> 00:14:02,689
<font color="#E5E5E5">basically break the system</font><font color="#CCCCCC"> and do</font>

359
00:13:59,839 --> 00:14:04,220
whatever it<font color="#CCCCCC"> wants so we take the</font>

360
00:14:02,690 --> 00:14:06,529
collection<font color="#CCCCCC"> of all</font><font color="#E5E5E5"> the trusted</font><font color="#CCCCCC"> software</font>

361
00:14:04,220 --> 00:14:08,810
on the system<font color="#CCCCCC"> and we define the trusted</font>

362
00:14:06,529 --> 00:14:11,329
computing<font color="#E5E5E5"> base</font><font color="#CCCCCC"> and so this is just all</font>

363
00:14:08,810 --> 00:14:13,819
<font color="#E5E5E5">this trusted software on the system next</font>

364
00:14:11,329 --> 00:14:16,010
<font color="#E5E5E5">we look at trustworthy software</font>

365
00:14:13,820 --> 00:14:18,199
trustworthy software is the<font color="#CCCCCC"> trusted</font>

366
00:14:16,010 --> 00:14:20,480
software<font color="#CCCCCC"> that is worthy of</font><font color="#E5E5E5"> the trust</font>

367
00:14:18,199 --> 00:14:22,729
<font color="#E5E5E5">that it gets so we put all this trust in</font>

368
00:14:20,480 --> 00:14:24,649
this<font color="#E5E5E5"> software but should we do we know</font>

369
00:14:22,730 --> 00:14:26,269
that<font color="#CCCCCC"> it's bug free do do we know that it</font>

370
00:14:24,649 --> 00:14:27,199
<font color="#CCCCCC">doesn't have exploits</font><font color="#E5E5E5"> in it do you know</font>

371
00:14:26,269 --> 00:14:29,899
that it's<font color="#CCCCCC"> not gonna do something</font>

372
00:14:27,199 --> 00:14:31,939
<font color="#CCCCCC">malicious we don't know but when it's</font>

373
00:14:29,899 --> 00:14:35,029
trustworthy<font color="#CCCCCC"> we've done</font><font color="#E5E5E5"> something to make</font>

374
00:14:31,940 --> 00:14:37,490
<font color="#CCCCCC">sure</font><font color="#E5E5E5"> that it is actually</font><font color="#CCCCCC"> worthy of being</font>

375
00:14:35,029 --> 00:14:38,990
trusted so there's high assurance<font color="#E5E5E5"> and we</font>

376
00:14:37,490 --> 00:14:41,930
can do that by doing<font color="#CCCCCC"> good coding</font>

377
00:14:38,990 --> 00:14:43,970
practice by doing<font color="#CCCCCC"> a lot of testing by</font>

378
00:14:41,930 --> 00:14:47,689
using awesome languages like rust and so

379
00:14:43,970 --> 00:14:50,959
on<font color="#E5E5E5"> by</font><font color="#CCCCCC"> doing formal methods</font><font color="#E5E5E5"> so finally</font>

380
00:14:47,690 --> 00:14:53,089
the a trustworthy system is a<font color="#E5E5E5"> system</font>

381
00:14:50,959 --> 00:14:55,099
whose<font color="#CCCCCC"> trust</font><font color="#E5E5E5"> works trusted computing base</font>

382
00:14:53,089 --> 00:14:56,690
<font color="#E5E5E5">is trustworthy</font><font color="#CCCCCC"> so we've actually looked</font>

383
00:14:55,100 --> 00:14:58,790
<font color="#E5E5E5">at the trust word trusted computing base</font>

384
00:14:56,690 --> 00:15:01,160
and made sure<font color="#CCCCCC"> that</font><font color="#E5E5E5"> it is worthy of the</font>

385
00:14:58,790 --> 00:15:03,500
<font color="#CCCCCC">trust</font><font color="#E5E5E5"> that it has so how do we build</font>

386
00:15:01,160 --> 00:15:05,329
trustworthy systems with SEO<font color="#E5E5E5"> for how do</font>

387
00:15:03,500 --> 00:15:06,769
we use it<font color="#CCCCCC"> to actually build trustworthy</font>

388
00:15:05,329 --> 00:15:08,810
systems like I said it's not magic

389
00:15:06,769 --> 00:15:10,899
security fairy dust so you can't just

390
00:15:08,810 --> 00:15:13,479
<font color="#E5E5E5">put something on SEO for and it'll be</font>

391
00:15:10,899 --> 00:15:16,569
<font color="#E5E5E5">secur so there are a couple of ideals in</font>

392
00:15:13,480 --> 00:15:19,119
in<font color="#E5E5E5"> building a trustworthy system the</font>

393
00:15:16,569 --> 00:15:20,709
first<font color="#E5E5E5"> one is a minimal TCB so minimal</font>

394
00:15:19,119 --> 00:15:22,089
trusted computing base<font color="#E5E5E5"> you want to</font>

395
00:15:20,709 --> 00:15:24,399
<font color="#E5E5E5">minimize the amount of code that needs</font>

396
00:15:22,089 --> 00:15:25,990
<font color="#CCCCCC">to be trusted because the more code</font>

397
00:15:24,399 --> 00:15:27,759
there is<font color="#E5E5E5"> to be trusted the more likely</font>

398
00:15:25,990 --> 00:15:29,519
it is that<font color="#E5E5E5"> something will go</font><font color="#CCCCCC"> wrong and</font>

399
00:15:27,759 --> 00:15:33,160
it the bigger the attack surfaces and

400
00:15:29,519 --> 00:15:35,230
then you'd like<font color="#CCCCCC"> to</font><font color="#E5E5E5"> verify that TCB so</font>

401
00:15:33,160 --> 00:15:37,240
make sure<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> tcp is trusted apply</font>

402
00:15:35,230 --> 00:15:39,069
formal methods or apply good coding<font color="#E5E5E5"> or</font>

403
00:15:37,240 --> 00:15:41,410
use good languages etc<font color="#CCCCCC"> all right so</font>

404
00:15:39,069 --> 00:15:44,199
these<font color="#CCCCCC"> are</font><font color="#E5E5E5"> the two kind of drivers of</font>

405
00:15:41,410 --> 00:15:46,059
building trustworthy systems and then in

406
00:15:44,199 --> 00:15:48,248
<font color="#E5E5E5">doing that they're a bunch of well-known</font>

407
00:15:46,059 --> 00:15:49,329
<font color="#E5E5E5">principles for building secure systems</font>

408
00:15:48,249 --> 00:15:51,279
to follow us<font color="#E5E5E5"> or things like lease</font>

409
00:15:49,329 --> 00:15:52,779
privilege make sure<font color="#E5E5E5"> that a component or</font>

410
00:15:51,279 --> 00:15:54,490
<font color="#CCCCCC">a</font><font color="#E5E5E5"> process doesn't have any more</font>

411
00:15:52,779 --> 00:15:56,829
privileged<font color="#CCCCCC"> than it actually</font><font color="#E5E5E5"> needs to</font><font color="#CCCCCC"> do</font>

412
00:15:54,490 --> 00:15:59,649
its work separation of<font color="#CCCCCC"> privileged</font><font color="#E5E5E5"> make</font>

413
00:15:56,829 --> 00:16:01,449
sure that components don't do too<font color="#E5E5E5"> much</font>

414
00:15:59,649 --> 00:16:03,309
and have too much<font color="#CCCCCC"> privilege to separate</font>

415
00:16:01,449 --> 00:16:05,319
out tasks<font color="#E5E5E5"> so that the amount of</font>

416
00:16:03,309 --> 00:16:09,449
privilege<font color="#E5E5E5"> a component has is reduced</font>

417
00:16:05,319 --> 00:16:11,740
<font color="#CCCCCC">least common mechanism</font><font color="#E5E5E5"> so make sure</font><font color="#CCCCCC"> that</font>

418
00:16:09,449 --> 00:16:13,628
you<font color="#CCCCCC"> don't have</font><font color="#E5E5E5"> all the components using</font>

419
00:16:11,740 --> 00:16:15,670
<font color="#CCCCCC">a single component</font><font color="#E5E5E5"> as a single other</font>

420
00:16:13,629 --> 00:16:17,470
service<font color="#E5E5E5"> to get something done spread</font>

421
00:16:15,670 --> 00:16:19,748
that<font color="#CCCCCC"> out as well so</font><font color="#E5E5E5"> that there's no kind</font>

422
00:16:17,470 --> 00:16:21,069
of one point<font color="#E5E5E5"> of compromise and then</font>

423
00:16:19,749 --> 00:16:23,980
defense-in-depth have a bunch of

424
00:16:21,069 --> 00:16:27,639
<font color="#E5E5E5">different mechanisms</font><font color="#CCCCCC"> to catch attacks or</font>

425
00:16:23,980 --> 00:16:30,220
to<font color="#E5E5E5"> stop attacks from happening and so we</font>

426
00:16:27,639 --> 00:16:31,540
use the<font color="#E5E5E5"> SI four mechanisms</font><font color="#CCCCCC"> to do that so</font>

427
00:16:30,220 --> 00:16:33,339
we<font color="#E5E5E5"> use the fact that we have a</font>

428
00:16:31,540 --> 00:16:36,339
microkernel we start with<font color="#E5E5E5"> a</font><font color="#CCCCCC"> really small</font>

429
00:16:33,339 --> 00:16:38,319
trusted computing base<font color="#CCCCCC"> compared SEL</font><font color="#E5E5E5"> for</font>

430
00:16:36,339 --> 00:16:39,879
size of<font color="#E5E5E5"> ten thousand lines of code</font><font color="#CCCCCC"> to</font>

431
00:16:38,319 --> 00:16:41,949
something<font color="#E5E5E5"> like Linux which</font><font color="#CCCCCC"> is which is</font>

432
00:16:39,879 --> 00:16:44,139
<font color="#CCCCCC">millions</font><font color="#E5E5E5"> of lines of code and the</font>

433
00:16:41,949 --> 00:16:46,779
starting TCB<font color="#CCCCCC"> is a lot smaller already</font>

434
00:16:44,139 --> 00:16:48,610
<font color="#E5E5E5">then we need to apply isolation so we</font>

435
00:16:46,779 --> 00:16:50,800
need to<font color="#E5E5E5"> apply the fact that</font><font color="#CCCCCC"> SEO port</font>

436
00:16:48,610 --> 00:16:53,829
does isolation really good or really

437
00:16:50,800 --> 00:16:55,149
<font color="#CCCCCC">well and apply that so that gives us</font>

438
00:16:53,829 --> 00:16:57,399
<font color="#E5E5E5">things like separation</font><font color="#CCCCCC"> ship</font><font color="#E5E5E5"> privilege</font>

439
00:16:55,149 --> 00:16:59,319
again applying isolation helps us to

440
00:16:57,399 --> 00:17:02,199
<font color="#E5E5E5">reduce the TCB so we can take the</font>

441
00:16:59,319 --> 00:17:04,779
trusted functionality out and isolate it

442
00:17:02,199 --> 00:17:07,329
<font color="#CCCCCC">from the untrusted functionality we use</font>

443
00:17:04,779 --> 00:17:10,240
controlled<font color="#CCCCCC"> communication</font><font color="#E5E5E5"> so control who</font>

444
00:17:07,329 --> 00:17:12,428
gets<font color="#CCCCCC"> to communicate with who and of</font>

445
00:17:10,240 --> 00:17:14,890
course<font color="#CCCCCC"> verification to make the</font><font color="#E5E5E5"> TCB</font>

446
00:17:12,429 --> 00:17:16,230
trustworthy<font color="#E5E5E5"> so have preferably formal</font>

447
00:17:14,890 --> 00:17:19,530
verification to

448
00:17:16,230 --> 00:17:21,690
so here's an example<font color="#CCCCCC"> we call this</font><font color="#E5E5E5"> the</font>

449
00:17:19,530 --> 00:17:24,389
security<font color="#E5E5E5"> retrofit and this is an analogy</font>

450
00:17:21,690 --> 00:17:27,270
<font color="#E5E5E5">this is basically taking existing</font>

451
00:17:24,390 --> 00:17:29,370
<font color="#E5E5E5">systems</font><font color="#CCCCCC"> and retrofitting them to run on</font>

452
00:17:27,270 --> 00:17:30,930
SEO for to take advantage of SEO for<font color="#CCCCCC"> its</font>

453
00:17:29,370 --> 00:17:33,449
property to make them<font color="#CCCCCC"> more secure</font><font color="#E5E5E5"> and</font>

454
00:17:30,930 --> 00:17:35,130
the name security retrofit<font color="#E5E5E5"> is an analogy</font>

455
00:17:33,450 --> 00:17:37,260
<font color="#CCCCCC">to a seismic retrofit when you take an</font>

456
00:17:35,130 --> 00:17:40,200
existing<font color="#E5E5E5"> building</font><font color="#CCCCCC"> and you modify it so</font>

457
00:17:37,260 --> 00:17:42,420
that<font color="#E5E5E5"> it's better better resistant to</font>

458
00:17:40,200 --> 00:17:44,970
earthquakes<font color="#E5E5E5"> so this is what we're doing</font>

459
00:17:42,420 --> 00:17:46,740
<font color="#E5E5E5">with with</font><font color="#CCCCCC"> Software Systems so we start</font>

460
00:17:44,970 --> 00:17:49,620
with<font color="#CCCCCC"> a regular system</font><font color="#E5E5E5"> the example here</font>

461
00:17:46,740 --> 00:17:51,000
<font color="#E5E5E5">is a UAV on the mission board on a UAV</font>

462
00:17:49,620 --> 00:17:53,459
this is based<font color="#E5E5E5"> on a project</font><font color="#CCCCCC"> that we've</font>

463
00:17:51,000 --> 00:17:56,400
done<font color="#E5E5E5"> in practice</font><font color="#CCCCCC"> we start</font><font color="#E5E5E5"> with a regular</font>

464
00:17:53,460 --> 00:17:58,530
system<font color="#E5E5E5"> and the first step is to take</font>

465
00:17:56,400 --> 00:18:00,060
<font color="#E5E5E5">that it runs on Linux so we take the</font>

466
00:17:58,530 --> 00:18:02,730
<font color="#E5E5E5">whole system and run it on a virtual</font>

467
00:18:00,060 --> 00:18:04,320
<font color="#E5E5E5">machine on top of</font><font color="#CCCCCC"> SCL for now this</font>

468
00:18:02,730 --> 00:18:06,300
doesn't<font color="#CCCCCC"> give us any security but it's</font>

469
00:18:04,320 --> 00:18:09,950
the<font color="#E5E5E5"> engineering work needed for the next</font>

470
00:18:06,300 --> 00:18:13,139
steps next<font color="#E5E5E5"> we take</font><font color="#CCCCCC"> that virtual machine</font>

471
00:18:09,950 --> 00:18:14,610
<font color="#CCCCCC">or take that</font><font color="#E5E5E5"> Linux instance and we split</font>

472
00:18:13,140 --> 00:18:16,290
<font color="#E5E5E5">it up</font><font color="#CCCCCC"> so we take some</font><font color="#E5E5E5"> of the</font>

473
00:18:14,610 --> 00:18:18,000
functionality<font color="#CCCCCC"> and we run it in a</font>

474
00:18:16,290 --> 00:18:20,129
separate<font color="#E5E5E5"> virtual machine or</font><font color="#CCCCCC"> a separate</font>

475
00:18:18,000 --> 00:18:22,230
instance of Linux<font color="#E5E5E5"> that starts with the</font>

476
00:18:20,130 --> 00:18:24,120
isolation already we have some isolation

477
00:18:22,230 --> 00:18:25,860
between<font color="#E5E5E5"> different functionalities then</font>

478
00:18:24,120 --> 00:18:28,260
we also take some of that<font color="#E5E5E5"> functionality</font>

479
00:18:25,860 --> 00:18:29,580
<font color="#E5E5E5">and we move it outside of Linux and</font>

480
00:18:28,260 --> 00:18:31,590
outside of<font color="#E5E5E5"> the virtual machine and</font>

481
00:18:29,580 --> 00:18:33,270
implement it natively so in this<font color="#E5E5E5"> example</font>

482
00:18:31,590 --> 00:18:36,149
we've taken the network stack up<font color="#E5E5E5"> and</font>

483
00:18:33,270 --> 00:18:37,860
implemented<font color="#E5E5E5"> it natively and we reiterate</font>

484
00:18:36,150 --> 00:18:40,050
that process<font color="#E5E5E5"> and take more and more</font>

485
00:18:37,860 --> 00:18:42,810
<font color="#E5E5E5">identified the trusted components in the</font>

486
00:18:40,050 --> 00:18:45,090
<font color="#E5E5E5">system and remove</font><font color="#CCCCCC"> those outside of Linux</font>

487
00:18:42,810 --> 00:18:47,940
<font color="#E5E5E5">into native components and so what</font><font color="#CCCCCC"> that</font>

488
00:18:45,090 --> 00:18:49,800
<font color="#E5E5E5">does is removes for example this huge</font>

489
00:18:47,940 --> 00:18:51,630
<font color="#E5E5E5">Linux from the trusted computing</font><font color="#CCCCCC"> base</font><font color="#E5E5E5"> so</font>

490
00:18:49,800 --> 00:18:54,030
<font color="#E5E5E5">you no longer have to</font><font color="#CCCCCC"> rely on Lync</font><font color="#E5E5E5"> it's</font>

491
00:18:51,630 --> 00:18:56,220
being correct<font color="#E5E5E5"> or no one attacking Linux</font>

492
00:18:54,030 --> 00:18:58,350
and so on and so<font color="#CCCCCC"> you get this set of</font>

493
00:18:56,220 --> 00:19:00,890
trusted components running preferably

494
00:18:58,350 --> 00:19:03,899
natively<font color="#CCCCCC"> that you can then apply</font>

495
00:19:00,890 --> 00:19:05,280
verification techniques to and make sure

496
00:19:03,900 --> 00:19:06,960
that they work correctly<font color="#CCCCCC"> so in the</font>

497
00:19:05,280 --> 00:19:08,520
project we did we stopped at moving<font color="#E5E5E5"> the</font>

498
00:19:06,960 --> 00:19:10,230
components out natively<font color="#E5E5E5"> we didn't</font>

499
00:19:08,520 --> 00:19:10,418
<font color="#E5E5E5">necessarily verify all</font><font color="#CCCCCC"> of them although</font>

500
00:19:10,230 --> 00:19:13,929
we

501
00:19:10,419 --> 00:19:15,759
use some good<font color="#E5E5E5"> product good</font><font color="#CCCCCC"> programming</font>

502
00:19:13,929 --> 00:19:18,509
languages<font color="#CCCCCC"> that give us a lot of</font>

503
00:19:15,759 --> 00:19:21,609
properties<font color="#E5E5E5"> already to implement those</font>

504
00:19:18,509 --> 00:19:26,999
we've done a bunch<font color="#E5E5E5"> of projects with SEO</font>

505
00:19:21,609 --> 00:19:30,070
<font color="#E5E5E5">for so mostly on autonomous</font><font color="#CCCCCC"> vehicles and</font>

506
00:19:26,999 --> 00:19:32,200
<font color="#CCCCCC">it's it's open</font><font color="#E5E5E5"> source so it's usable by</font>

507
00:19:30,070 --> 00:19:34,480
<font color="#E5E5E5">by people</font><font color="#CCCCCC"> outside</font><font color="#E5E5E5"> so we're building up a</font>

508
00:19:32,200 --> 00:19:37,210
community<font color="#E5E5E5"> around</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and we've seen</font>

509
00:19:34,480 --> 00:19:39,279
people<font color="#CCCCCC"> coming up to us and using this</font>

510
00:19:37,210 --> 00:19:42,249
and so people<font color="#E5E5E5"> are using SEO for</font>

511
00:19:39,279 --> 00:19:44,739
independent of us to<font color="#E5E5E5"> build products to</font>

512
00:19:42,249 --> 00:19:46,809
do research<font color="#E5E5E5"> and so on so that's really</font>

513
00:19:44,739 --> 00:19:49,509
good<font color="#CCCCCC"> we're getting more</font><font color="#E5E5E5"> and more</font>

514
00:19:46,809 --> 00:19:52,658
<font color="#E5E5E5">interest from people</font><font color="#CCCCCC"> doing IOT people</font>

515
00:19:49,509 --> 00:19:54,909
doing automotive<font color="#E5E5E5"> from defense etc etc so</font>

516
00:19:52,659 --> 00:19:56,289
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is really good but you know when I</font>

517
00:19:54,909 --> 00:19:58,960
asked<font color="#CCCCCC"> who knew SEO for there were a</font>

518
00:19:56,289 --> 00:20:01,090
couple<font color="#E5E5E5"> of hands who here has</font><font color="#CCCCCC"> actually</font>

519
00:19:58,960 --> 00:20:06,909
looked<font color="#E5E5E5"> at SEO for or done anything with</font>

520
00:20:01,090 --> 00:20:09,220
SEO<font color="#CCCCCC"> for</font><font color="#E5E5E5"> okay one person so I expect most</font>

521
00:20:06,909 --> 00:20:11,350
<font color="#CCCCCC">people</font><font color="#E5E5E5"> have it right and why so I mean</font>

522
00:20:09,220 --> 00:20:12,639
it's awesome<font color="#E5E5E5"> it's great there's all</font>

523
00:20:11,350 --> 00:20:14,139
<font color="#E5E5E5">these awesome things</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do people are</font>

524
00:20:12,639 --> 00:20:17,799
using<font color="#E5E5E5"> it but it's not in the mainstream</font>

525
00:20:14,139 --> 00:20:19,508
<font color="#E5E5E5">and so we've done a lot</font><font color="#CCCCCC"> of work</font><font color="#E5E5E5"> on SEO</font>

526
00:20:17,799 --> 00:20:22,059
for the next step is to make it

527
00:20:19,509 --> 00:20:23,200
<font color="#E5E5E5">mainstream and what do we need to do in</font>

528
00:20:22,059 --> 00:20:25,690
order<font color="#E5E5E5"> to make that happen</font>

529
00:20:23,200 --> 00:20:29,919
well there's<font color="#E5E5E5"> three main things we need</font>

530
00:20:25,690 --> 00:20:31,659
to<font color="#E5E5E5"> make it cheaper so it's expensive and</font>

531
00:20:29,919 --> 00:20:33,909
development effort<font color="#E5E5E5"> but it's also</font>

532
00:20:31,659 --> 00:20:35,679
expensive<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> the verification it's</font>

533
00:20:33,909 --> 00:20:37,440
also expensive<font color="#E5E5E5"> to make sure that that</font>

534
00:20:35,679 --> 00:20:40,269
trusted computing base is actually

535
00:20:37,440 --> 00:20:42,369
trustworthy to make sure that we can

536
00:20:40,269 --> 00:20:44,019
verify<font color="#CCCCCC"> these components and so on</font><font color="#E5E5E5"> so</font>

537
00:20:42,369 --> 00:20:45,488
what we would<font color="#E5E5E5"> like</font><font color="#CCCCCC"> is to get proofs for</font>

538
00:20:44,019 --> 00:20:47,320
free<font color="#E5E5E5"> we'd like to be able to write</font>

539
00:20:45,489 --> 00:20:49,330
<font color="#CCCCCC">software and just have proofs that</font><font color="#E5E5E5"> it's</font>

540
00:20:47,320 --> 00:20:51,700
correct<font color="#CCCCCC"> that it's good</font><font color="#E5E5E5"> we need</font><font color="#CCCCCC"> to make</font>

541
00:20:49,330 --> 00:20:54,070
it<font color="#E5E5E5"> more</font><font color="#CCCCCC"> relevant</font><font color="#E5E5E5"> so whenever we</font><font color="#CCCCCC"> talk to</font>

542
00:20:51,700 --> 00:20:55,450
anyone<font color="#E5E5E5"> about using SEO for they've got</font>

543
00:20:54,070 --> 00:20:57,100
all<font color="#E5E5E5"> these requirements that we don't</font>

544
00:20:55,450 --> 00:20:59,259
<font color="#E5E5E5">mean we want to run it on this platform</font>

545
00:20:57,100 --> 00:21:02,939
we want to run<font color="#E5E5E5"> it on multi-core we want</font>

546
00:20:59,259 --> 00:21:05,049
to use you know<font color="#E5E5E5"> Ruby</font><font color="#CCCCCC"> or something crazy</font>

547
00:21:02,940 --> 00:21:06,759
<font color="#CCCCCC">so we need to make it more</font><font color="#E5E5E5"> relevant we</font>

548
00:21:05,049 --> 00:21:09,730
need to add more<font color="#CCCCCC"> features</font><font color="#E5E5E5"> to it and then</font>

549
00:21:06,759 --> 00:21:12,790
<font color="#CCCCCC">finally we need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> make it scale so the</font>

550
00:21:09,730 --> 00:21:17,020
effort it took to verify SEO<font color="#E5E5E5"> for</font>

551
00:21:12,790 --> 00:21:20,350
huge pretty large<font color="#E5E5E5"> especially for</font><font color="#CCCCCC"> a group</font>

552
00:21:17,020 --> 00:21:22,690
our size<font color="#CCCCCC"> and we're</font><font color="#E5E5E5"> constantly</font><font color="#CCCCCC"> reeve arif</font>

553
00:21:20,350 --> 00:21:24,939
<font color="#CCCCCC">eyeing</font><font color="#E5E5E5"> things so as we modify a sale</font><font color="#CCCCCC"> for</font>

554
00:21:22,690 --> 00:21:26,650
as it<font color="#CCCCCC"> evolves as it</font><font color="#E5E5E5"> grows the the proof</font>

555
00:21:24,940 --> 00:21:28,450
needs to<font color="#E5E5E5"> evolve as well</font><font color="#CCCCCC"> it wasn't a</font>

556
00:21:26,650 --> 00:21:30,700
one-shot<font color="#CCCCCC"> thing that we did and throw</font>

557
00:21:28,450 --> 00:21:33,280
away we need<font color="#E5E5E5"> to keep that active and so</font>

558
00:21:30,700 --> 00:21:36,400
I'll talk about<font color="#E5E5E5"> a proof engineering what</font>

559
00:21:33,280 --> 00:21:39,280
it takes to actually<font color="#CCCCCC"> do that</font><font color="#E5E5E5"> so let</font><font color="#CCCCCC"> me</font>

560
00:21:36,400 --> 00:21:40,960
start<font color="#E5E5E5"> with making it cheaper</font><font color="#CCCCCC"> when we</font>

561
00:21:39,280 --> 00:21:43,450
developed a<font color="#CCCCCC"> feel</font><font color="#E5E5E5"> for we estimated that</font>

562
00:21:40,960 --> 00:21:46,380
<font color="#E5E5E5">the cost of developing and verifying the</font>

563
00:21:43,450 --> 00:21:48,970
kernel was about<font color="#CCCCCC"> $400 per line of</font><font color="#E5E5E5"> code</font>

564
00:21:46,380 --> 00:21:51,340
<font color="#E5E5E5">so multiply that</font><font color="#CCCCCC"> by lines of code and</font>

565
00:21:48,970 --> 00:21:53,230
<font color="#E5E5E5">you get the total</font><font color="#CCCCCC"> cost compare that to</font>

566
00:21:51,340 --> 00:21:55,030
<font color="#E5E5E5">other software development so if you</font>

567
00:21:53,230 --> 00:21:57,190
take low assurance software development

568
00:21:55,030 --> 00:21:59,050
<font color="#CCCCCC">basically using a traditional embedded</font>

569
00:21:57,190 --> 00:22:00,640
kernel<font color="#E5E5E5"> and developing a traditional</font>

570
00:21:59,050 --> 00:22:02,290
embedded kernel<font color="#E5E5E5"> you're looking at</font><font color="#CCCCCC"> about</font>

571
00:22:00,640 --> 00:22:04,480
<font color="#E5E5E5">one hundred two hundred dollars per line</font>

572
00:22:02,290 --> 00:22:06,190
of<font color="#E5E5E5"> code</font><font color="#CCCCCC"> and if you look at high</font>

573
00:22:04,480 --> 00:22:07,780
assurance<font color="#E5E5E5"> software development so</font>

574
00:22:06,190 --> 00:22:10,960
something that<font color="#E5E5E5"> needs to meet Common</font>

575
00:22:07,780 --> 00:22:13,360
Criteria requirements<font color="#CCCCCC"> l6</font><font color="#E5E5E5"> plus</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

576
00:22:10,960 --> 00:22:15,970
stuff<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you know you need</font><font color="#CCCCCC"> to run</font><font color="#E5E5E5"> you</font>

577
00:22:13,360 --> 00:22:18,490
need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have to do top-secret work and</font>

578
00:22:15,970 --> 00:22:20,590
so on<font color="#CCCCCC"> that goes</font><font color="#E5E5E5"> up to</font><font color="#CCCCCC"> a thousand lines</font>

579
00:22:18,490 --> 00:22:22,300
<font color="#E5E5E5">of</font><font color="#CCCCCC"> code so SEO for</font><font color="#E5E5E5"> is not the cheapest</font>

580
00:22:20,590 --> 00:22:25,570
<font color="#CCCCCC">but it's also not the more expensive and</font>

581
00:22:22,300 --> 00:22:28,480
we argue<font color="#E5E5E5"> that it gives you more than the</font>

582
00:22:25,570 --> 00:22:30,970
<font color="#E5E5E5">Common Criteria</font><font color="#CCCCCC"> el6 plus level of</font>

583
00:22:28,480 --> 00:22:33,700
assurance<font color="#E5E5E5"> so it's still</font><font color="#CCCCCC"> pretty good</font><font color="#E5E5E5"> but</font>

584
00:22:30,970 --> 00:22:36,010
it's still expensive<font color="#E5E5E5"> in particular if we</font>

585
00:22:33,700 --> 00:22:37,630
<font color="#CCCCCC">need to verify</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> of the user</font><font color="#E5E5E5"> level</font>

586
00:22:36,010 --> 00:22:39,400
stuff that makes up the trusted

587
00:22:37,630 --> 00:22:41,140
computing<font color="#CCCCCC"> base as well that's</font><font color="#E5E5E5"> a lot of</font>

588
00:22:39,400 --> 00:22:43,720
verification work that<font color="#E5E5E5"> still</font><font color="#CCCCCC"> needs to be</font>

589
00:22:41,140 --> 00:22:45,910
<font color="#E5E5E5">done and so what we want to do is</font>

590
00:22:43,720 --> 00:22:47,650
automate proof<font color="#E5E5E5"> generation so get proofs</font>

591
00:22:45,910 --> 00:22:49,450
for free<font color="#E5E5E5"> so we've got two main</font>

592
00:22:47,650 --> 00:22:51,580
approaches for<font color="#E5E5E5"> doing that right now both</font>

593
00:22:49,450 --> 00:22:54,280
of<font color="#E5E5E5"> them involve</font><font color="#CCCCCC"> programming languages</font><font color="#E5E5E5"> we</font>

594
00:22:51,580 --> 00:22:56,470
have<font color="#E5E5E5"> a project called cogent which is</font>

595
00:22:54,280 --> 00:22:58,780
developing a high-level<font color="#E5E5E5"> language</font><font color="#CCCCCC"> for</font>

596
00:22:56,470 --> 00:23:02,170
developing system services<font color="#E5E5E5"> in so we're</font>

597
00:22:58,780 --> 00:23:03,850
<font color="#E5E5E5">developing services like</font><font color="#CCCCCC"> drivers we're</font>

598
00:23:02,170 --> 00:23:05,710
<font color="#E5E5E5">developing services like network stacks</font>

599
00:23:03,850 --> 00:23:07,449
like file systems and<font color="#E5E5E5"> so on in this</font>

600
00:23:05,710 --> 00:23:09,880
<font color="#CCCCCC">language</font><font color="#E5E5E5"> and the idea with</font><font color="#CCCCCC"> this language</font>

601
00:23:07,450 --> 00:23:11,410
<font color="#E5E5E5">is that you take the language you</font>

602
00:23:09,880 --> 00:23:13,420
compile it<font color="#CCCCCC"> and that generates your</font>

603
00:23:11,410 --> 00:23:15,730
executable code so your<font color="#CCCCCC"> binary that you</font>

604
00:23:13,420 --> 00:23:18,010
run<font color="#E5E5E5"> but it also executes SAP roof of</font>

605
00:23:15,730 --> 00:23:19,930
that code as well<font color="#E5E5E5"> so you get your</font>

606
00:23:18,010 --> 00:23:22,030
executable code and your proof<font color="#E5E5E5"> at the</font>

607
00:23:19,930 --> 00:23:23,309
same time<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> really good this is</font>

608
00:23:22,030 --> 00:23:25,259
work in<font color="#CCCCCC"> progress you</font>

609
00:23:23,309 --> 00:23:27,629
really take budget and do stuff with<font color="#CCCCCC"> it</font>

610
00:23:25,259 --> 00:23:29,970
yet<font color="#E5E5E5"> we've got</font><font color="#CCCCCC"> some examples the other</font>

611
00:23:27,629 --> 00:23:31,860
approach is is based on<font color="#CCCCCC"> K Kamel which is</font>

612
00:23:29,970 --> 00:23:34,320
a verified optimizing compiler<font color="#E5E5E5"> and the</font>

613
00:23:31,860 --> 00:23:36,899
idea there is that you<font color="#CCCCCC"> write your</font>

614
00:23:34,320 --> 00:23:38,879
theorem<font color="#E5E5E5"> in a theorem proving language so</font>

615
00:23:36,899 --> 00:23:43,110
for<font color="#E5E5E5"> example in a</font><font color="#CCCCCC"> higher-order</font><font color="#E5E5E5"> logic and</font>

616
00:23:38,879 --> 00:23:45,748
it and from<font color="#E5E5E5"> that generates code that</font>

617
00:23:43,110 --> 00:23:47,248
implements<font color="#E5E5E5"> what you want so you actually</font>

618
00:23:45,749 --> 00:23:49,019
<font color="#E5E5E5">don't write your program in a regular</font>

619
00:23:47,249 --> 00:23:51,600
<font color="#E5E5E5">programming language you do that in</font>

620
00:23:49,019 --> 00:23:53,879
logic<font color="#E5E5E5"> and you get good code out</font><font color="#CCCCCC"> of that</font>

621
00:23:51,600 --> 00:23:56,219
and because the<font color="#E5E5E5"> compiler is verified as</font>

622
00:23:53,879 --> 00:23:59,369
well you know that the code<font color="#E5E5E5"> matches your</font>

623
00:23:56,220 --> 00:24:01,950
theorems<font color="#E5E5E5"> both of those can</font><font color="#CCCCCC"> be used to</font>

624
00:23:59,369 --> 00:24:03,990
then hook<font color="#CCCCCC"> into sd4 and systems running</font>

625
00:24:01,950 --> 00:24:05,669
<font color="#E5E5E5">on top of that to verify your trusted</font>

626
00:24:03,990 --> 00:24:07,379
computing<font color="#E5E5E5"> bases so these are two</font><font color="#CCCCCC"> things</font>

627
00:24:05,669 --> 00:24:09,509
<font color="#CCCCCC">that we're doing to make it</font><font color="#E5E5E5"> cheaper</font><font color="#CCCCCC"> to</font>

628
00:24:07,379 --> 00:24:11,789
make it possible<font color="#E5E5E5"> for people</font><font color="#CCCCCC"> who aren't</font>

629
00:24:09,509 --> 00:24:13,409
us<font color="#E5E5E5"> weren't in our group to actually do</font>

630
00:24:11,789 --> 00:24:17,158
this<font color="#E5E5E5"> kind of stuff and</font><font color="#CCCCCC"> build</font><font color="#E5E5E5"> systems on</font>

631
00:24:13,409 --> 00:24:18,720
<font color="#CCCCCC">top of SEO for we also need to</font><font color="#E5E5E5"> make it</font>

632
00:24:17,159 --> 00:24:21,360
<font color="#CCCCCC">more</font><font color="#E5E5E5"> relevant so I mentioned a bunch of</font>

633
00:24:18,720 --> 00:24:23,940
things<font color="#E5E5E5"> before about why people probably</font>

634
00:24:21,360 --> 00:24:25,709
aren't using<font color="#E5E5E5"> SEO</font><font color="#CCCCCC"> poor so things like</font>

635
00:24:23,940 --> 00:24:27,330
<font color="#E5E5E5">multi-core we need to have multi-core</font>

636
00:24:25,710 --> 00:24:28,860
everyone wants to<font color="#E5E5E5"> run things</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> lots of</font>

637
00:24:27,330 --> 00:24:31,590
cores people apparently have a lot of

638
00:24:28,860 --> 00:24:33,178
<font color="#CCCCCC">computation that</font><font color="#E5E5E5"> they need</font><font color="#CCCCCC"> to do so</font><font color="#E5E5E5"> we</font>

639
00:24:31,590 --> 00:24:35,158
do have an implementation<font color="#CCCCCC"> of SEO for</font>

640
00:24:33,179 --> 00:24:36,840
that works on<font color="#E5E5E5"> multi-core so an SMP</font>

641
00:24:35,159 --> 00:24:38,639
implementation the interesting thing is

642
00:24:36,840 --> 00:24:40,110
we use a big log for<font color="#E5E5E5"> that which</font><font color="#CCCCCC"> you</font>

643
00:24:38,639 --> 00:24:43,590
shouldn't<font color="#E5E5E5"> ever do except it's a</font>

644
00:24:40,110 --> 00:24:44,189
<font color="#E5E5E5">microkernel and it actually</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> okay so</font>

645
00:24:43,590 --> 00:24:46,320
that's good

646
00:24:44,190 --> 00:24:48,240
the hard part there<font color="#E5E5E5"> is doing the</font>

647
00:24:46,320 --> 00:24:49,860
verification of a multi-core kernel so

648
00:24:48,240 --> 00:24:51,509
there's a lot<font color="#E5E5E5"> of work that</font><font color="#CCCCCC"> a lot of</font>

649
00:24:49,860 --> 00:24:54,418
<font color="#E5E5E5">research work going into that right now</font>

650
00:24:51,509 --> 00:24:56,399
figuring<font color="#E5E5E5"> out how</font><font color="#CCCCCC"> to verify concurrent</font>

651
00:24:54,419 --> 00:24:59,070
<font color="#CCCCCC">systems that run on multiple processors</font>

652
00:24:56,399 --> 00:25:02,668
it's it's a tough task<font color="#CCCCCC"> we're doing it</font>

653
00:24:59,070 --> 00:25:04,259
and<font color="#E5E5E5"> hopefully we'll get there we want to</font>

654
00:25:02,669 --> 00:25:06,179
run<font color="#E5E5E5"> it on embedded systems</font><font color="#CCCCCC"> we want to</font>

655
00:25:04,259 --> 00:25:08,190
run<font color="#E5E5E5"> it on real-time systems these are</font>

656
00:25:06,179 --> 00:25:09,659
systems<font color="#CCCCCC"> that have timing requirements</font>

657
00:25:08,190 --> 00:25:11,970
they have<font color="#CCCCCC"> strict deadlines that need to</font>

658
00:25:09,659 --> 00:25:13,409
be meet met otherwise<font color="#E5E5E5"> the quadcopter</font><font color="#CCCCCC"> the</font>

659
00:25:11,970 --> 00:25:14,010
<font color="#E5E5E5">helicopter falls out</font><font color="#CCCCCC"> of the sky and we</font>

660
00:25:13,409 --> 00:25:16,080
<font color="#CCCCCC">don't</font>

661
00:25:14,010 --> 00:25:18,030
to happen<font color="#CCCCCC"> so we've done a</font><font color="#E5E5E5"> lot of work on</font>

662
00:25:16,080 --> 00:25:20,850
that<font color="#CCCCCC"> we've got a version of SEO poor</font>

663
00:25:18,030 --> 00:25:22,440
that's and this is<font color="#E5E5E5"> going to become the</font>

664
00:25:20,850 --> 00:25:24,090
main version<font color="#E5E5E5"> of SEO for that's for mixed</font>

665
00:25:22,440 --> 00:25:25,860
criticality systems for<font color="#CCCCCC"> real-time</font>

666
00:25:24,090 --> 00:25:27,449
systems so<font color="#CCCCCC"> that exists and we're</font>

667
00:25:25,860 --> 00:25:30,479
currently<font color="#CCCCCC"> working on proofs of that</font>

668
00:25:27,450 --> 00:25:32,370
system<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we also need Prevert for</font>

669
00:25:30,480 --> 00:25:34,110
real-time<font color="#E5E5E5"> systems we need to have worst</font>

670
00:25:32,370 --> 00:25:36,959
case execution<font color="#E5E5E5"> time analysis so we need</font>

671
00:25:34,110 --> 00:25:39,689
to know<font color="#E5E5E5"> how long</font><font color="#CCCCCC"> does it take when you</font>

672
00:25:36,960 --> 00:25:41,820
invoke a system call because<font color="#CCCCCC"> you</font><font color="#E5E5E5"> that's</font>

673
00:25:39,690 --> 00:25:43,980
part of<font color="#CCCCCC"> meaning your timing deadlines</font>

674
00:25:41,820 --> 00:25:46,020
<font color="#E5E5E5">and so we've done a full worst case</font>

675
00:25:43,980 --> 00:25:47,970
execution<font color="#E5E5E5"> time analysis on the kernel</font>

676
00:25:46,020 --> 00:25:50,070
<font color="#CCCCCC">and</font><font color="#E5E5E5"> it's one of the only kernels that's</font>

677
00:25:47,970 --> 00:25:51,240
ever actually<font color="#E5E5E5"> had that done so that's</font>

678
00:25:50,070 --> 00:25:54,179
<font color="#CCCCCC">really</font><font color="#E5E5E5"> good so we're doing really well</font>

679
00:25:51,240 --> 00:25:56,400
<font color="#CCCCCC">on the real-time</font><font color="#E5E5E5"> systems aspect timing</font>

680
00:25:54,180 --> 00:25:57,900
channels<font color="#E5E5E5"> so we've talked about SEO for</font>

681
00:25:56,400 --> 00:26:01,200
providing isolation provides

682
00:25:57,900 --> 00:26:02,850
confidentiality<font color="#CCCCCC"> but that doesn't</font><font color="#E5E5E5"> include</font>

683
00:26:01,200 --> 00:26:05,570
timing channels<font color="#E5E5E5"> right so</font><font color="#CCCCCC"> those are</font>

684
00:26:02,850 --> 00:26:08,250
explicit channels and so as we've seen

685
00:26:05,570 --> 00:26:09,899
time and channels are tough<font color="#E5E5E5"> right</font><font color="#CCCCCC"> Jen</font>

686
00:26:08,250 --> 00:26:13,830
gave this talk about<font color="#E5E5E5"> all these</font><font color="#CCCCCC"> timing</font>

687
00:26:09,900 --> 00:26:16,190
channels<font color="#CCCCCC"> that are possible</font><font color="#E5E5E5"> we have some</font>

688
00:26:13,830 --> 00:26:18,720
approach that's also<font color="#CCCCCC"> challenge work of</font>

689
00:26:16,190 --> 00:26:20,370
dealing with timing channels in SEO for

690
00:26:18,720 --> 00:26:22,620
by<font color="#E5E5E5"> doing cache</font><font color="#CCCCCC"> coloring</font><font color="#E5E5E5"> so making sure</font>

691
00:26:20,370 --> 00:26:24,810
<font color="#CCCCCC">that</font><font color="#E5E5E5"> things that are</font><font color="#CCCCCC"> actually isolated</font>

692
00:26:22,620 --> 00:26:26,699
don't share any cache which is<font color="#E5E5E5"> awesome</font>

693
00:26:24,810 --> 00:26:29,129
that works<font color="#E5E5E5"> except that the</font><font color="#CCCCCC"> hardware is</font>

694
00:26:26,700 --> 00:26:31,020
broken<font color="#E5E5E5"> and we can't rely on the hardware</font>

695
00:26:29,130 --> 00:26:32,340
necessarily so we're doing<font color="#CCCCCC"> work</font><font color="#E5E5E5"> on that</font>

696
00:26:31,020 --> 00:26:33,690
we're<font color="#E5E5E5"> trying to change the hardware</font><font color="#CCCCCC"> as</font>

697
00:26:32,340 --> 00:26:35,639
<font color="#CCCCCC">well we're trying</font><font color="#E5E5E5"> to get influenced to</font>

698
00:26:33,690 --> 00:26:37,890
actually make the hardware<font color="#CCCCCC"> work</font>

699
00:26:35,640 --> 00:26:39,960
I guess one way of that doing<font color="#E5E5E5"> that is</font>

700
00:26:37,890 --> 00:26:42,390
finding things like meltdown inspector

701
00:26:39,960 --> 00:26:45,780
and embarrassing<font color="#CCCCCC"> hardware met vendors</font>

702
00:26:42,390 --> 00:26:48,960
<font color="#CCCCCC">into</font><font color="#E5E5E5"> changing it and then we need</font>

703
00:26:45,780 --> 00:26:50,790
platform support so we want it<font color="#E5E5E5"> to</font><font color="#CCCCCC"> run on</font>

704
00:26:48,960 --> 00:26:52,560
a lot<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of hardware currently runs</font>

705
00:26:50,790 --> 00:26:56,340
on a lot of ARM processors it runs on

706
00:26:52,560 --> 00:26:59,429
x86<font color="#E5E5E5"> we're we're doing verification for</font>

707
00:26:56,340 --> 00:27:02,310
64-bit x86 and we're doing<font color="#E5E5E5"> support for</font>

708
00:26:59,430 --> 00:27:04,050
64-bit<font color="#CCCCCC"> arm as well we need to expand</font>

709
00:27:02,310 --> 00:27:08,250
<font color="#E5E5E5">that as people have more requirements</font>

710
00:27:04,050 --> 00:27:09,930
<font color="#CCCCCC">and so on but also on the user level</font>

711
00:27:08,250 --> 00:27:11,940
<font color="#E5E5E5">when you move</font><font color="#CCCCCC"> to new hardware platforms</font>

712
00:27:09,930 --> 00:27:14,070
you need to provide disk drive I'm sorry

713
00:27:11,940 --> 00:27:16,260
<font color="#CCCCCC">device</font><font color="#E5E5E5"> drivers</font><font color="#CCCCCC"> and so on and we're</font>

714
00:27:14,070 --> 00:27:18,030
looking<font color="#E5E5E5"> at using cogent and KML to do</font>

715
00:27:16,260 --> 00:27:19,060
these kind of<font color="#E5E5E5"> things to provide verified</font>

716
00:27:18,030 --> 00:27:21,820
drivers and so

717
00:27:19,060 --> 00:27:25,750
and then finally we need<font color="#CCCCCC"> to make it</font>

718
00:27:21,820 --> 00:27:28,240
scale<font color="#E5E5E5"> so currently the proof is about</font>

719
00:27:25,750 --> 00:27:31,300
half a million lines of<font color="#E5E5E5"> proof code this</font>

720
00:27:28,240 --> 00:27:35,800
is one of<font color="#CCCCCC"> the largest mathematical</font>

721
00:27:31,300 --> 00:27:37,570
formal proofs in the<font color="#CCCCCC"> world</font><font color="#E5E5E5"> nope which</font>

722
00:27:35,800 --> 00:27:40,330
means nobody's<font color="#E5E5E5"> really done this before</font>

723
00:27:37,570 --> 00:27:42,129
<font color="#CCCCCC">and we're adding</font><font color="#E5E5E5"> more features we're</font>

724
00:27:40,330 --> 00:27:43,659
adding support<font color="#CCCCCC"> for virtualization</font>

725
00:27:42,130 --> 00:27:45,040
<font color="#E5E5E5">hardware we're doing this multi</font>

726
00:27:43,660 --> 00:27:46,990
criticality<font color="#E5E5E5"> kernel</font>

727
00:27:45,040 --> 00:27:48,370
<font color="#CCCCCC">where´s we're adding support for</font><font color="#E5E5E5"> multi</font>

728
00:27:46,990 --> 00:27:51,310
<font color="#E5E5E5">core we're adding support for more</font>

729
00:27:48,370 --> 00:27:56,110
<font color="#CCCCCC">platform 64-bit and alongside the 32-bit</font>

730
00:27:51,310 --> 00:27:58,450
<font color="#E5E5E5">and so on and it's tough right</font><font color="#CCCCCC"> now it</font>

731
00:27:56,110 --> 00:28:00,250
resembles<font color="#E5E5E5"> the early days of software</font>

732
00:27:58,450 --> 00:28:03,250
development<font color="#E5E5E5"> where people had no</font>

733
00:28:00,250 --> 00:28:06,100
<font color="#CCCCCC">experience building large systems and so</font>

734
00:28:03,250 --> 00:28:08,500
they didn't know what to<font color="#CCCCCC"> do to actually</font>

735
00:28:06,100 --> 00:28:12,639
make building designing<font color="#E5E5E5"> and writing</font>

736
00:28:08,500 --> 00:28:13,990
<font color="#CCCCCC">these systems maintainable and so this</font>

737
00:28:12,640 --> 00:28:16,780
is what we're doing<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we've invented a</font>

738
00:28:13,990 --> 00:28:19,420
new field<font color="#CCCCCC"> called proof engineering which</font>

739
00:28:16,780 --> 00:28:20,920
<font color="#CCCCCC">is analogous to</font><font color="#E5E5E5"> software engineering</font><font color="#CCCCCC"> so</font>

740
00:28:19,420 --> 00:28:23,290
it's two proofs<font color="#E5E5E5"> what software</font>

741
00:28:20,920 --> 00:28:25,090
engineering is<font color="#E5E5E5"> to software how do we</font>

742
00:28:23,290 --> 00:28:27,280
<font color="#E5E5E5">improve</font><font color="#CCCCCC"> the proof tools how do we</font>

743
00:28:25,090 --> 00:28:29,320
improve automation<font color="#E5E5E5"> how do we</font><font color="#CCCCCC"> actually</font>

744
00:28:27,280 --> 00:28:31,240
structure proofs<font color="#E5E5E5"> such that they're</font>

745
00:28:29,320 --> 00:28:33,639
expandable such that they can grow and

746
00:28:31,240 --> 00:28:35,710
not become unwieldy and<font color="#E5E5E5"> unmaintainable</font>

747
00:28:33,640 --> 00:28:37,840
<font color="#CCCCCC">so we need to learn how</font><font color="#E5E5E5"> to you reuse</font>

748
00:28:35,710 --> 00:28:39,910
proofs more we need<font color="#E5E5E5"> to have more</font>

749
00:28:37,840 --> 00:28:41,980
abstraction in our proofs we need to do

750
00:28:39,910 --> 00:28:44,200
all of these<font color="#E5E5E5"> things</font><font color="#CCCCCC"> to make it scale</font><font color="#E5E5E5"> and</font>

751
00:28:41,980 --> 00:28:46,570
once we do<font color="#CCCCCC"> that we can start really</font><font color="#E5E5E5"> kind</font>

752
00:28:44,200 --> 00:28:48,340
<font color="#E5E5E5">of ramping up and verifying with a</font>

753
00:28:46,570 --> 00:28:51,879
bigger and bigger<font color="#E5E5E5"> systems more and more</font>

754
00:28:48,340 --> 00:28:53,919
systems<font color="#E5E5E5"> so these are the three things</font>

755
00:28:51,880 --> 00:28:55,690
<font color="#CCCCCC">that we need to work on</font><font color="#E5E5E5"> to make this</font>

756
00:28:53,920 --> 00:28:57,250
<font color="#CCCCCC">usable and hopefully when we've done</font>

757
00:28:55,690 --> 00:28:58,810
<font color="#E5E5E5">this in a couple</font><font color="#CCCCCC"> of years it can come</font>

758
00:28:57,250 --> 00:29:00,790
<font color="#CCCCCC">back</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> and say who's building systems</font>

759
00:28:58,810 --> 00:29:03,220
on<font color="#E5E5E5"> SCO 4 and you know a lot of</font><font color="#CCCCCC"> a lot</font>

760
00:29:00,790 --> 00:29:05,800
more<font color="#E5E5E5"> people will raise their hands so in</font>

761
00:29:03,220 --> 00:29:08,140
summary<font color="#E5E5E5"> takeaway message is that we</font>

762
00:29:05,800 --> 00:29:10,450
produced verified technology that's high

763
00:29:08,140 --> 00:29:11,920
performance<font color="#E5E5E5"> and has been deployed in</font>

764
00:29:10,450 --> 00:29:14,770
systems around<font color="#E5E5E5"> the world</font><font color="#CCCCCC"> so people are</font>

765
00:29:11,920 --> 00:29:17,200
actually<font color="#E5E5E5"> using</font><font color="#CCCCCC"> this to build things</font><font color="#E5E5E5"> but</font>

766
00:29:14,770 --> 00:29:20,560
<font color="#E5E5E5">our goal now is to</font><font color="#CCCCCC"> radically change the</font>

767
00:29:17,200 --> 00:29:21,940
way<font color="#E5E5E5"> the</font><font color="#CCCCCC"> world build systems so we want</font>

768
00:29:20,560 --> 00:29:24,460
to get to a point where there will be no

769
00:29:21,940 --> 00:29:27,020
<font color="#E5E5E5">excuse</font><font color="#CCCCCC"> for bad software</font><font color="#E5E5E5"> in systems there</font>

770
00:29:24,460 --> 00:29:28,670
will be no excuse for software that<font color="#E5E5E5"> has</font>

771
00:29:27,020 --> 00:29:31,160
vulnerabilities<font color="#CCCCCC"> that has</font><font color="#E5E5E5"> security bugs</font>

772
00:29:28,670 --> 00:29:34,750
in<font color="#E5E5E5"> it</font><font color="#CCCCCC"> and we want the</font><font color="#E5E5E5"> future to be</font>

773
00:29:31,160 --> 00:29:34,750
verified<font color="#CCCCCC"> thank you</font>

774
00:29:40,380 --> 00:29:49,590
we've got time<font color="#CCCCCC"> for</font><font color="#E5E5E5"> a couple</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> questions</font>

775
00:29:42,750 --> 00:29:54,929
if people<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> ask any other one</font><font color="#CCCCCC"> over</font>

776
00:29:49,590 --> 00:29:56,789
<font color="#CCCCCC">here I get a tow</font><font color="#E5E5E5"> got CA technologies</font>

777
00:29:54,929 --> 00:29:59,130
I've<font color="#CCCCCC"> worked with embedded software for a</font>

778
00:29:56,789 --> 00:30:00,269
long time and most<font color="#E5E5E5"> of you probably don't</font>

779
00:29:59,130 --> 00:30:01,559
know<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> built the face where I</font>

780
00:30:00,269 --> 00:30:03,929
write<font color="#E5E5E5"> us for the intake triggers in</font>

781
00:30:01,559 --> 00:30:06,059
Australia<font color="#E5E5E5"> so my question is are</font><font color="#CCCCCC"> you</font>

782
00:30:03,929 --> 00:30:11,909
planning<font color="#E5E5E5"> on putting this to PC</font>

783
00:30:06,059 --> 00:30:13,320
<font color="#CCCCCC">architecture the question is whether</font>

784
00:30:11,909 --> 00:30:15,870
we're planning to<font color="#E5E5E5"> port this to the</font>

785
00:30:13,320 --> 00:30:17,279
PowerPC architecture and I laugh and<font color="#E5E5E5"> I</font>

786
00:30:15,870 --> 00:30:19,379
say that's<font color="#E5E5E5"> an awesome question because</font>

787
00:30:17,279 --> 00:30:23,269
we get<font color="#E5E5E5"> that</font><font color="#CCCCCC"> question</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> lot</font>

788
00:30:19,379 --> 00:30:29,219
automotive people like PowerPC as well

789
00:30:23,269 --> 00:30:31,259
we resist<font color="#CCCCCC"> maybe someday it'll happen but</font>

790
00:30:29,220 --> 00:30:34,019
<font color="#E5E5E5">currently we're resisting we're hoping</font>

791
00:30:31,259 --> 00:30:37,019
that<font color="#E5E5E5"> eventually people</font><font color="#CCCCCC"> stop using</font>

792
00:30:34,019 --> 00:30:38,250
PowerPC<font color="#E5E5E5"> we won't have to do it</font><font color="#CCCCCC"> I don't</font>

793
00:30:37,019 --> 00:30:40,080
know if that will<font color="#CCCCCC"> happen or not if it</font>

794
00:30:38,250 --> 00:30:45,330
doesn't happen we probably will in the

795
00:30:40,080 --> 00:30:48,259
<font color="#E5E5E5">end any more questions in this</font>

796
00:30:45,330 --> 00:30:48,259
presentation

797
00:30:55,140 --> 00:30:58,269
[Music]

798
00:31:03,590 --> 00:31:09,299
so the question is whether<font color="#E5E5E5"> the risk 5</font>

799
00:31:06,170 --> 00:31:11,070
<font color="#E5E5E5">offers opportunities to do the hardware</font>

800
00:31:09,299 --> 00:31:12,960
right and avoid a lot<font color="#CCCCCC"> of these timing</font>

801
00:31:11,070 --> 00:31:16,559
channels that<font color="#E5E5E5"> exist</font><font color="#CCCCCC"> in the commodity</font>

802
00:31:12,960 --> 00:31:19,200
Intel and<font color="#CCCCCC"> ARM processors yes we we're</font>

803
00:31:16,559 --> 00:31:22,290
very interested in risk<font color="#E5E5E5"> 5 and we're</font><font color="#CCCCCC"> very</font>

804
00:31:19,200 --> 00:31:24,179
interested<font color="#E5E5E5"> in working together with the</font>

805
00:31:22,290 --> 00:31:27,450
<font color="#CCCCCC">community</font><font color="#E5E5E5"> to make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that they do</font>

806
00:31:24,179 --> 00:31:29,040
things right<font color="#E5E5E5"> and</font><font color="#CCCCCC"> to influence</font><font color="#E5E5E5"> how they</font>

807
00:31:27,450 --> 00:31:31,650
do things<font color="#CCCCCC"> to influence</font><font color="#E5E5E5"> that the hardware</font>

808
00:31:29,040 --> 00:31:33,360
<font color="#E5E5E5">is written in such a way or is designed</font>

809
00:31:31,650 --> 00:31:36,240
in<font color="#E5E5E5"> such a way</font><font color="#CCCCCC"> that the microarchitecture</font>

810
00:31:33,360 --> 00:31:38,070
doesn't have all<font color="#E5E5E5"> of the state that that</font>

811
00:31:36,240 --> 00:31:39,570
<font color="#E5E5E5">leaks</font><font color="#CCCCCC"> information and it provides the</font>

812
00:31:38,070 --> 00:31:44,850
right functionalities for<font color="#E5E5E5"> closing the</font>

813
00:31:39,570 --> 00:31:46,350
channels<font color="#E5E5E5"> so yes risk 5 awesome actually</font>

814
00:31:44,850 --> 00:31:48,809
<font color="#CCCCCC">thinks elf horns one</font><font color="#E5E5E5"> of the crowning</font>

815
00:31:46,350 --> 00:31:50,850
<font color="#E5E5E5">achievements</font><font color="#CCCCCC"> of Australia</font><font color="#E5E5E5"> so let's let's</font>

816
00:31:48,809 --> 00:31:52,430
thank people for<font color="#E5E5E5"> his presentation</font>

817
00:31:50,850 --> 00:31:55,020
[Applause]

818
00:31:52,430 --> 00:31:58,190
[Music]

819
00:31:55,020 --> 00:31:58,190
[Applause]

