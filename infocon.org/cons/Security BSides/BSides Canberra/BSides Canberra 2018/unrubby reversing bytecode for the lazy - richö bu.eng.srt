1
00:00:10,680 --> 00:00:17,850
we are very<font color="#E5E5E5"> privileged again so you have</font>

2
00:00:13,799 --> 00:00:21,630
<font color="#CCCCCC">an overseas speaker rich Oh has</font><font color="#E5E5E5"> traveled</font>

3
00:00:17,850 --> 00:00:23,700
<font color="#E5E5E5">to Australia just to present it besides</font>

4
00:00:21,630 --> 00:00:27,750
Canberra<font color="#E5E5E5"> so we are very grateful for</font>

5
00:00:23,700 --> 00:00:30,119
<font color="#CCCCCC">that and his talk is on</font><font color="#E5E5E5"> unruly reversing</font>

6
00:00:27,750 --> 00:00:37,079
bytecode for<font color="#CCCCCC"> the lazy</font><font color="#E5E5E5"> so let's welcome</font>

7
00:00:30,119 --> 00:00:39,570
<font color="#E5E5E5">rich out to the stage today how's</font><font color="#CCCCCC"> it</font>

8
00:00:37,079 --> 00:00:43,079
going<font color="#E5E5E5"> so yeah my talk is called</font><font color="#CCCCCC"> unruly</font>

9
00:00:39,570 --> 00:00:44,550
<font color="#E5E5E5">I'm gonna say</font><font color="#CCCCCC"> Rubby a lot it's probably</font>

10
00:00:43,079 --> 00:00:46,440
worth getting<font color="#E5E5E5"> out of out of the way up</font>

11
00:00:44,550 --> 00:00:49,260
front<font color="#E5E5E5"> every time I say</font><font color="#CCCCCC"> Robbie I mean</font>

12
00:00:46,440 --> 00:00:51,839
Ruby<font color="#CCCCCC"> I</font><font color="#E5E5E5"> spent a lot of time working on</font>

13
00:00:49,260 --> 00:00:54,420
Robbie<font color="#E5E5E5"> and I've kind of lost the</font><font color="#CCCCCC"> ability</font>

14
00:00:51,839 --> 00:00:55,920
to take<font color="#E5E5E5"> it seriously and so my internal</font>

15
00:00:54,420 --> 00:00:57,179
defense<font color="#E5E5E5"> is to call it Robbie and that</font>

16
00:00:55,920 --> 00:00:58,850
makes me feel<font color="#CCCCCC"> better</font><font color="#E5E5E5"> about the like</font>

17
00:00:57,179 --> 00:01:01,859
ridiculous behavior<font color="#CCCCCC"> that you bump into</font>

18
00:00:58,850 --> 00:01:02,940
the obligatory like<font color="#E5E5E5"> who am i slide my</font>

19
00:01:01,859 --> 00:01:06,090
<font color="#E5E5E5">name is Richard Butz</font>

20
00:01:02,940 --> 00:01:07,170
<font color="#CCCCCC">I speak a lot in the</font><font color="#E5E5E5"> US and so I have to</font>

21
00:01:06,090 --> 00:01:09,300
explain<font color="#CCCCCC"> to people how to say my name</font>

22
00:01:07,170 --> 00:01:10,950
<font color="#CCCCCC">happily that's like this trip has been</font>

23
00:01:09,300 --> 00:01:13,200
<font color="#E5E5E5">awesome I've had literally everyone get</font>

24
00:01:10,950 --> 00:01:15,180
it right the first<font color="#CCCCCC"> time I work at stripe</font>

25
00:01:13,200 --> 00:01:16,440
<font color="#CCCCCC">we're a payments company</font><font color="#E5E5E5"> I'm obligated</font>

26
00:01:15,180 --> 00:01:17,640
to shout them<font color="#CCCCCC"> out a</font><font color="#E5E5E5"> little bit if you</font>

27
00:01:16,440 --> 00:01:19,950
<font color="#CCCCCC">want to work</font><font color="#E5E5E5"> with me and come talk to me</font>

28
00:01:17,640 --> 00:01:22,350
<font color="#E5E5E5">afterwards it'll be neat</font><font color="#CCCCCC"> me and Mike</font>

29
00:01:19,950 --> 00:01:25,350
Ryan have the most ridiculous<font color="#CCCCCC"> CVE for a</font>

30
00:01:22,350 --> 00:01:27,449
skateboard<font color="#CCCCCC"> as you do I also run a con</font>

31
00:01:25,350 --> 00:01:29,550
and I jump<font color="#E5E5E5"> out of planes and stuff a lot</font>

32
00:01:27,450 --> 00:01:31,160
so this<font color="#E5E5E5"> is like mostly what I'm doing</font>

33
00:01:29,550 --> 00:01:33,149
when I'm<font color="#E5E5E5"> not hacking computers and stuff</font>

34
00:01:31,160 --> 00:01:35,100
I'm gonna skip the<font color="#E5E5E5"> selfie because I'm</font>

35
00:01:33,150 --> 00:01:36,180
<font color="#E5E5E5">like 10 minutes behind maybe I'll take</font>

36
00:01:35,100 --> 00:01:40,410
one of<font color="#E5E5E5"> the end if we have time</font>

37
00:01:36,180 --> 00:01:41,130
so this talk<font color="#E5E5E5"> it's some cool tricks with</font>

38
00:01:40,410 --> 00:01:44,009
<font color="#CCCCCC">bytecode vm's</font>

39
00:01:41,130 --> 00:01:45,330
<font color="#CCCCCC">i want to show you</font><font color="#E5E5E5"> some like goofy</font>

40
00:01:44,010 --> 00:01:46,680
that<font color="#E5E5E5"> i found inside of robbie while i</font>

41
00:01:45,330 --> 00:01:48,630
was working<font color="#CCCCCC"> on this cuz i think</font><font color="#E5E5E5"> it's</font>

42
00:01:46,680 --> 00:01:50,760
like fun to kick people while<font color="#CCCCCC"> they're</font>

43
00:01:48,630 --> 00:01:52,440
<font color="#E5E5E5">down i</font><font color="#CCCCCC"> guess and i want</font><font color="#E5E5E5"> to talk a little</font>

44
00:01:50,760 --> 00:01:53,940
<font color="#CCCCCC">bit about like what reversing is and</font>

45
00:01:52,440 --> 00:01:55,590
specifically like how you can reverse

46
00:01:53,940 --> 00:01:57,899
engineer stuff without<font color="#E5E5E5"> actually having</font>

47
00:01:55,590 --> 00:01:59,580
to<font color="#CCCCCC"> be a reverse engineer because while I</font>

48
00:01:57,900 --> 00:02:01,380
have friends<font color="#CCCCCC"> that like think a really</font>

49
00:01:59,580 --> 00:02:03,360
good way<font color="#CCCCCC"> to spend</font><font color="#E5E5E5"> a weekend is to spend</font>

50
00:02:01,380 --> 00:02:05,490
like 36 consecutive hours like staring

51
00:02:03,360 --> 00:02:08,610
it<font color="#E5E5E5"> Eider and</font><font color="#CCCCCC"> matching</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> 5 it's not</font>

52
00:02:05,490 --> 00:02:09,929
really my jam<font color="#CCCCCC"> and so I mostly</font><font color="#E5E5E5"> prefer to</font>

53
00:02:08,610 --> 00:02:11,700
like do a<font color="#E5E5E5"> little bit of work</font><font color="#CCCCCC"> upfront and</font>

54
00:02:09,929 --> 00:02:13,200
<font color="#E5E5E5">then just like do a thing and then</font><font color="#CCCCCC"> have</font>

55
00:02:11,700 --> 00:02:15,349
source code just<font color="#E5E5E5"> pop out the</font><font color="#CCCCCC"> end so I</font>

56
00:02:13,200 --> 00:02:18,420
can<font color="#CCCCCC"> look at it because</font><font color="#E5E5E5"> that's way easier</font>

57
00:02:15,349 --> 00:02:20,849
so this talk isn't<font color="#E5E5E5"> really dropping like</font>

58
00:02:18,420 --> 00:02:21,899
<font color="#CCCCCC">are they oh bugs although it does like</font>

59
00:02:20,849 --> 00:02:24,689
sort of<font color="#E5E5E5"> prove</font>

60
00:02:21,900 --> 00:02:26,489
that commercial obfuscated products for

61
00:02:24,689 --> 00:02:28,799
Ruby<font color="#E5E5E5"> are completely pointless</font><font color="#CCCCCC"> which I</font>

62
00:02:26,489 --> 00:02:32,129
guess like qualifies because I might at

63
00:02:28,799 --> 00:02:35,790
least upset a vendor<font color="#E5E5E5"> or something but</font>

64
00:02:32,129 --> 00:02:37,140
like<font color="#E5E5E5"> yeah but that's the TLDR is I'm</font>

65
00:02:35,790 --> 00:02:38,608
just<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> show you some cool tricks and</font>

66
00:02:37,140 --> 00:02:41,069
you could like maybe apply them to<font color="#E5E5E5"> some</font>

67
00:02:38,609 --> 00:02:42,090
stuff so<font color="#E5E5E5"> really quickly some terminology</font>

68
00:02:41,069 --> 00:02:44,220
<font color="#CCCCCC">that I'm gonna use</font>

69
00:02:42,090 --> 00:02:46,739
when I say<font color="#E5E5E5"> VM</font><font color="#CCCCCC"> I mean a virtual</font><font color="#E5E5E5"> machine</font>

70
00:02:44,220 --> 00:02:47,879
in the sense that it's like<font color="#CCCCCC"> a register</font>

71
00:02:46,739 --> 00:02:49,379
machine or a stack<font color="#E5E5E5"> machine that's</font>

72
00:02:47,879 --> 00:02:51,420
abstract it on<font color="#E5E5E5"> highway it's not like</font>

73
00:02:49,379 --> 00:02:53,129
<font color="#E5E5E5">Linux guest running on your Mac or</font>

74
00:02:51,420 --> 00:02:55,920
whatever which<font color="#CCCCCC"> is like the other</font><font color="#E5E5E5"> popular</font>

75
00:02:53,129 --> 00:02:57,388
term for VM<font color="#CCCCCC"> up</font><font color="#E5E5E5"> card and instruction are</font>

76
00:02:55,920 --> 00:02:59,040
pretty interchangeable<font color="#E5E5E5"> but they're</font>

77
00:02:57,389 --> 00:03:01,980
<font color="#E5E5E5">basically the operations that that vm</font>

78
00:02:59,040 --> 00:03:03,450
<font color="#E5E5E5">influenced</font><font color="#CCCCCC"> bytecode is</font><font color="#E5E5E5"> basically just a</font>

79
00:03:01,980 --> 00:03:05,429
<font color="#E5E5E5">long string</font><font color="#CCCCCC"> of op</font><font color="#E5E5E5"> codes or instructions</font>

80
00:03:03,450 --> 00:03:08,010
as<font color="#CCCCCC"> i mentioned probably is an</font>

81
00:03:05,430 --> 00:03:11,280
interpreted dynamic language and<font color="#E5E5E5"> yell of</font>

82
00:03:08,010 --> 00:03:13,078
and MRI<font color="#E5E5E5"> are the implementations of these</font>

83
00:03:11,280 --> 00:03:14,099
things for<font color="#E5E5E5"> the gold standard of Robbie</font>

84
00:03:13,079 --> 00:03:16,079
right there are a ton of Robbie

85
00:03:14,099 --> 00:03:16,939
implementations but nearly everyone uses

86
00:03:16,079 --> 00:03:20,060
<font color="#E5E5E5">Yavin</font><font color="#CCCCCC"> am i right</font>

87
00:03:16,939 --> 00:03:21,870
sorry<font color="#E5E5E5"> how did I get working on this</font>

88
00:03:20,060 --> 00:03:23,700
<font color="#CCCCCC">fundamentally there like a ton of</font>

89
00:03:21,870 --> 00:03:25,349
companies out<font color="#CCCCCC"> there and I won't name any</font>

90
00:03:23,700 --> 00:03:26,940
names<font color="#E5E5E5"> but like it's not terribly</font>

91
00:03:25,349 --> 00:03:28,858
<font color="#CCCCCC">difficult to figure</font><font color="#E5E5E5"> out what some like</font>

92
00:03:26,940 --> 00:03:31,109
classic examples<font color="#E5E5E5"> of this would</font><font color="#CCCCCC"> be but</font>

93
00:03:28,859 --> 00:03:32,760
they like enterprise customers they want

94
00:03:31,109 --> 00:03:33,959
to sell you an on-premise<font color="#CCCCCC"> solution so</font>

95
00:03:32,760 --> 00:03:35,698
<font color="#E5E5E5">that you can run this</font><font color="#CCCCCC"> software</font><font color="#E5E5E5"> behind</font>

96
00:03:33,959 --> 00:03:36,989
your firewall where you have like some

97
00:03:35,699 --> 00:03:38,040
control<font color="#CCCCCC"> over</font><font color="#E5E5E5"> it and you can observe it</font>

98
00:03:36,989 --> 00:03:39,239
<font color="#CCCCCC">and figure out</font><font color="#E5E5E5"> whether or not it's</font>

99
00:03:38,040 --> 00:03:41,730
trying to like send<font color="#E5E5E5"> all your source code</font>

100
00:03:39,239 --> 00:03:43,319
to<font color="#E5E5E5"> China and they want</font><font color="#CCCCCC"> to let</font><font color="#E5E5E5"> you do</font>

101
00:03:41,730 --> 00:03:44,940
this but<font color="#CCCCCC"> they want</font><font color="#E5E5E5"> to do let you do this</font>

102
00:03:43,319 --> 00:03:46,409
in a way<font color="#CCCCCC"> that doesn't also</font><font color="#E5E5E5"> give you</font>

103
00:03:44,940 --> 00:03:48,419
access to<font color="#E5E5E5"> like all</font><font color="#CCCCCC"> of their</font><font color="#E5E5E5"> corporate I</font>

104
00:03:46,409 --> 00:03:49,790
pay for example<font color="#E5E5E5"> because that's kind of</font>

105
00:03:48,419 --> 00:03:52,590
antithetical to<font color="#E5E5E5"> their business model</font>

106
00:03:49,790 --> 00:03:54,510
<font color="#E5E5E5">right and so the solution proves people</font>

107
00:03:52,590 --> 00:03:56,430
run with is obfuscation<font color="#CCCCCC"> right you give</font>

108
00:03:54,510 --> 00:03:58,709
someone something that's functionally

109
00:03:56,430 --> 00:04:00,180
identical to their source<font color="#CCCCCC"> card in the</font>

110
00:03:58,709 --> 00:04:01,500
sense that<font color="#CCCCCC"> like when you</font><font color="#E5E5E5"> run it it like</font>

111
00:04:00,180 --> 00:04:04,019
does the thing that their software<font color="#E5E5E5"> is</font>

112
00:04:01,500 --> 00:04:05,849
meant to do but<font color="#CCCCCC"> it's sufficiently</font>

113
00:04:04,019 --> 00:04:07,799
mangled that as someone interested<font color="#CCCCCC"> in</font>

114
00:04:05,849 --> 00:04:09,388
<font color="#E5E5E5">finding bugs or launching a</font><font color="#CCCCCC"> competing</font>

115
00:04:07,799 --> 00:04:11,190
<font color="#CCCCCC">business or just</font><font color="#E5E5E5"> like doing some</font>

116
00:04:09,389 --> 00:04:12,510
recreational corporate espionage<font color="#CCCCCC"> it</font>

117
00:04:11,190 --> 00:04:14,549
doesn't have like<font color="#CCCCCC"> all the useful</font>

118
00:04:12,510 --> 00:04:16,978
properties<font color="#E5E5E5"> that like a full dump of</font><font color="#CCCCCC"> the</font>

119
00:04:14,549 --> 00:04:19,889
source code<font color="#CCCCCC"> would</font><font color="#E5E5E5"> write and this</font><font color="#CCCCCC"> isn't</font>

120
00:04:16,978 --> 00:04:21,238
like near<font color="#E5E5E5"> right long before anyone was</font>

121
00:04:19,889 --> 00:04:23,039
like you know what I'm gonna do I'm

122
00:04:21,238 --> 00:04:24,570
gonna package<font color="#E5E5E5"> up my</font><font color="#CCCCCC"> ruby sauce app and</font>

123
00:04:23,039 --> 00:04:26,190
sell it for extreme money<font color="#E5E5E5"> behind the</font>

124
00:04:24,570 --> 00:04:28,020
firewall<font color="#CCCCCC"> like malware authors have been</font>

125
00:04:26,190 --> 00:04:29,190
<font color="#E5E5E5">doing this for a really long</font><font color="#CCCCCC"> time games</font>

126
00:04:28,020 --> 00:04:30,810
developers have been doing this like

127
00:04:29,190 --> 00:04:32,039
forever<font color="#E5E5E5"> with their like licensing</font>

128
00:04:30,810 --> 00:04:33,790
systems<font color="#E5E5E5"> right because it turns out</font>

129
00:04:32,039 --> 00:04:36,099
<font color="#E5E5E5">licensing systems everyone configure</font>

130
00:04:33,790 --> 00:04:38,560
not as good<font color="#CCCCCC"> as</font><font color="#E5E5E5"> ones that</font><font color="#CCCCCC"> are magic black</font>

131
00:04:36,100 --> 00:04:40,420
boxes and<font color="#E5E5E5"> even doing this</font><font color="#CCCCCC"> with by Kurt</font>

132
00:04:38,560 --> 00:04:41,980
isn't<font color="#E5E5E5"> new</font><font color="#CCCCCC"> like burp sweet</font>

133
00:04:40,420 --> 00:04:43,990
I have a bunch of<font color="#E5E5E5"> friends who</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> like</font>

134
00:04:41,980 --> 00:04:46,420
being driven<font color="#E5E5E5"> to the brink of</font><font color="#CCCCCC"> insanity by</font>

135
00:04:43,990 --> 00:04:48,160
trying to<font color="#CCCCCC"> reverse-engineer bap sweet and</font>

136
00:04:46,420 --> 00:04:49,480
like web sweet is still just Java under

137
00:04:48,160 --> 00:04:50,620
the hood right like in theory<font color="#E5E5E5"> you can</font>

138
00:04:49,480 --> 00:04:51,940
apply<font color="#E5E5E5"> the same technique</font><font color="#CCCCCC"> to it and</font>

139
00:04:50,620 --> 00:04:53,080
<font color="#E5E5E5">hopefully I'm gonna know it snipe at</font>

140
00:04:51,940 --> 00:04:55,960
least one person<font color="#CCCCCC"> that's doing it because</font>

141
00:04:53,080 --> 00:04:57,880
I think<font color="#E5E5E5"> it would be funny</font><font color="#CCCCCC"> but like in a</font>

142
00:04:55,960 --> 00:05:01,359
<font color="#CCCCCC">bye card VM</font><font color="#E5E5E5"> most of the typical</font>

143
00:04:57,880 --> 00:05:03,430
obfuscation techniques are there<font color="#E5E5E5"> they're</font>

144
00:05:01,360 --> 00:05:05,410
<font color="#E5E5E5">challenging right like with native</font><font color="#CCCCCC"> code</font>

145
00:05:03,430 --> 00:05:06,490
you can<font color="#E5E5E5"> use performance counters to</font>

146
00:05:05,410 --> 00:05:08,710
figure out whether<font color="#CCCCCC"> or</font><font color="#E5E5E5"> not someone's</font>

147
00:05:06,490 --> 00:05:09,790
tampered with<font color="#CCCCCC"> your card you can use side</font>

148
00:05:08,710 --> 00:05:11,260
channels to figure out<font color="#E5E5E5"> whether or</font><font color="#CCCCCC"> not</font>

149
00:05:09,790 --> 00:05:13,030
you're<font color="#E5E5E5"> being instrumented for example</font>

150
00:05:11,260 --> 00:05:15,099
like the pin framework<font color="#E5E5E5"> from Intel is</font>

151
00:05:13,030 --> 00:05:17,140
pretty<font color="#CCCCCC"> good</font><font color="#E5E5E5"> but it does like</font><font color="#CCCCCC"> a drum</font>

152
00:05:15,100 --> 00:05:18,430
<font color="#CCCCCC">time-cost right and if you know</font><font color="#E5E5E5"> things</font>

153
00:05:17,140 --> 00:05:19,450
<font color="#CCCCCC">about your execution environment you can</font>

154
00:05:18,430 --> 00:05:20,590
figure out<font color="#E5E5E5"> whether or not someone's</font>

155
00:05:19,450 --> 00:05:22,360
doing things to you<font color="#E5E5E5"> and you can like</font>

156
00:05:20,590 --> 00:05:24,130
bail out<font color="#E5E5E5"> of execution pretty early and</font>

157
00:05:22,360 --> 00:05:26,050
you can also just like jab at weird

158
00:05:24,130 --> 00:05:27,370
instructions<font color="#E5E5E5"> and figure out whether or</font>

159
00:05:26,050 --> 00:05:29,770
not they<font color="#E5E5E5"> emulated that you're in like</font>

160
00:05:27,370 --> 00:05:31,480
correctly implements them turns<font color="#E5E5E5"> out that</font>

161
00:05:29,770 --> 00:05:32,919
like<font color="#E5E5E5"> Intel silicon for example like</font>

162
00:05:31,480 --> 00:05:34,320
doesn't do what the<font color="#CCCCCC"> manual says it</font>

163
00:05:32,920 --> 00:05:36,340
should in a lot of<font color="#E5E5E5"> places and</font>

164
00:05:34,320 --> 00:05:37,990
implementers tend to read the<font color="#CCCCCC"> manual and</font>

165
00:05:36,340 --> 00:05:39,310
<font color="#E5E5E5">just assume that's</font><font color="#CCCCCC"> correct right and so</font>

166
00:05:37,990 --> 00:05:40,600
if you like<font color="#CCCCCC"> Javid a</font><font color="#E5E5E5"> weird instruction</font>

167
00:05:39,310 --> 00:05:41,740
that has<font color="#CCCCCC"> a bizarre edge case you can use</font>

168
00:05:40,600 --> 00:05:43,270
that to figure out whether or not the

169
00:05:41,740 --> 00:05:46,450
execution environment you're running in

170
00:05:43,270 --> 00:05:47,770
is genuine or<font color="#CCCCCC"> not but in a super dynamic</font>

171
00:05:46,450 --> 00:05:49,900
language this is<font color="#E5E5E5"> even worse</font><font color="#CCCCCC"> right</font>

172
00:05:47,770 --> 00:05:51,370
<font color="#CCCCCC">because you can't mangle a lot of</font>

173
00:05:49,900 --> 00:05:52,690
semantic information<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example if</font>

174
00:05:51,370 --> 00:05:54,790
you've ever looked<font color="#E5E5E5"> at obfuscated Java</font>

175
00:05:52,690 --> 00:05:56,770
<font color="#E5E5E5">like</font><font color="#CCCCCC"> you've dumped it</font><font color="#E5E5E5"> into JD GUI and it</font>

176
00:05:54,790 --> 00:05:58,210
like pops out you'll<font color="#E5E5E5"> notice that all the</font>

177
00:05:56,770 --> 00:06:00,520
classes<font color="#CCCCCC"> are named class 1 and class 2</font>

178
00:05:58,210 --> 00:06:02,109
class 3 and<font color="#E5E5E5"> so on right because it's</font>

179
00:06:00,520 --> 00:06:03,849
<font color="#E5E5E5">possible for the compiler to</font><font color="#CCCCCC"> take</font><font color="#E5E5E5"> all of</font>

180
00:06:02,110 --> 00:06:04,870
<font color="#E5E5E5">the semantic</font><font color="#CCCCCC"> information like class</font>

181
00:06:03,850 --> 00:06:06,190
names and stuff<font color="#E5E5E5"> and throw it away</font>

182
00:06:04,870 --> 00:06:08,080
because it can consistently rename

183
00:06:06,190 --> 00:06:09,670
everything<font color="#E5E5E5"> right but in this like super</font>

184
00:06:08,080 --> 00:06:11,530
contrived example that I wrote a moment

185
00:06:09,670 --> 00:06:13,360
ago in<font color="#E5E5E5"> the green room you</font><font color="#CCCCCC"> can't do that</font>

186
00:06:11,530 --> 00:06:14,950
<font color="#CCCCCC">because</font><font color="#E5E5E5"> if you</font><font color="#CCCCCC"> take user provide an</font>

187
00:06:13,360 --> 00:06:16,240
input<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then you use that</font><font color="#CCCCCC"> to look up a</font>

188
00:06:14,950 --> 00:06:18,039
class or a method name and you've

189
00:06:16,240 --> 00:06:20,110
renamed the class<font color="#E5E5E5"> or method then like</font>

190
00:06:18,040 --> 00:06:21,880
your application breaks horribly<font color="#E5E5E5"> and so</font>

191
00:06:20,110 --> 00:06:23,590
no<font color="#E5E5E5"> matter what you do you're still</font><font color="#CCCCCC"> going</font>

192
00:06:21,880 --> 00:06:24,640
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be preserving like a ton of semantic</font>

193
00:06:23,590 --> 00:06:26,320
information<font color="#E5E5E5"> that's really interesting</font>

194
00:06:24,640 --> 00:06:29,560
someone in for example<font color="#CCCCCC"> when</font><font color="#E5E5E5"> saw reverse</font>

195
00:06:26,320 --> 00:06:30,940
<font color="#E5E5E5">engineer stuff without</font><font color="#CCCCCC"> a JIT you also</font>

196
00:06:29,560 --> 00:06:33,070
can't do anything super interesting<font color="#CCCCCC"> to</font>

197
00:06:30,940 --> 00:06:35,620
<font color="#E5E5E5">method buddies so you can't like</font>

198
00:06:33,070 --> 00:06:36,010
obfuscate them too hard<font color="#CCCCCC"> because</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> code</font>

199
00:06:35,620 --> 00:06:37,660
vm's

200
00:06:36,010 --> 00:06:39,340
aren't typically super fast especially

201
00:06:37,660 --> 00:06:42,190
<font color="#E5E5E5">if you're looking at like Python or</font>

202
00:06:39,340 --> 00:06:43,900
<font color="#CCCCCC">rubbie</font><font color="#E5E5E5"> or whatever and without the</font>

203
00:06:42,190 --> 00:06:46,150
<font color="#E5E5E5">ability to do anything on the fly</font><font color="#CCCCCC"> your</font>

204
00:06:43,900 --> 00:06:47,469
your options are<font color="#CCCCCC"> pretty limited right</font>

205
00:06:46,150 --> 00:06:49,870
and so most of the

206
00:06:47,470 --> 00:06:51,220
like most of<font color="#CCCCCC"> your</font><font color="#E5E5E5"> options are purely in</font>

207
00:06:49,870 --> 00:06:53,160
trying to make<font color="#E5E5E5"> it</font><font color="#CCCCCC"> very difficult to</font>

208
00:06:51,220 --> 00:06:56,380
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> get at the bike</font><font color="#CCCCCC"> herd</font><font color="#E5E5E5"> itself</font>

209
00:06:53,160 --> 00:06:57,940
right<font color="#E5E5E5"> and so like this is a</font><font color="#CCCCCC"> screencap</font>

210
00:06:56,380 --> 00:07:00,159
<font color="#E5E5E5">from some malware</font><font color="#CCCCCC"> I tried to reverse</font><font color="#E5E5E5"> a</font>

211
00:06:57,940 --> 00:07:01,870
while ago<font color="#CCCCCC"> like 1400 basic</font><font color="#E5E5E5"> blocks is a</font>

212
00:07:00,160 --> 00:07:03,850
really effective way<font color="#CCCCCC"> to tell any reverse</font>

213
00:07:01,870 --> 00:07:05,470
engineer to go<font color="#E5E5E5"> themselves</font><font color="#CCCCCC"> right</font>

214
00:07:03,850 --> 00:07:06,880
<font color="#E5E5E5">like if you want someone</font><font color="#CCCCCC"> to like stop</font>

215
00:07:05,470 --> 00:07:11,590
looking<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a really good place to</font>

216
00:07:06,880 --> 00:07:12,700
<font color="#CCCCCC">start so cool</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> we talk about</font><font color="#E5E5E5"> how</font>

217
00:07:11,590 --> 00:07:16,450
<font color="#E5E5E5">to break Rabi it's worth understanding</font>

218
00:07:12,700 --> 00:07:20,380
<font color="#E5E5E5">like how</font><font color="#CCCCCC"> rubbing fits together</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> and</font>

219
00:07:16,450 --> 00:07:22,090
<font color="#E5E5E5">so if you wanted to just like evaluate</font>

220
00:07:20,380 --> 00:07:23,710
some<font color="#E5E5E5"> ruby code this is fundamentally</font>

221
00:07:22,090 --> 00:07:25,929
what<font color="#E5E5E5"> happens you take a source file</font><font color="#CCCCCC"> the</font>

222
00:07:23,710 --> 00:07:27,549
<font color="#CCCCCC">VM reads it in and it generates code</font>

223
00:07:25,930 --> 00:07:29,830
from it right and<font color="#E5E5E5"> so this is what</font><font color="#CCCCCC"> that</font>

224
00:07:27,550 --> 00:07:31,960
looks<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this is like some goofy</font>

225
00:07:29,830 --> 00:07:33,789
<font color="#CCCCCC">rubbery code that I wrote and rubber you</font>

226
00:07:31,960 --> 00:07:35,770
conveniently has this like disassembler

227
00:07:33,790 --> 00:07:38,500
thing which will like take some

228
00:07:35,770 --> 00:07:41,409
<font color="#E5E5E5">executable object and spit out the the</font>

229
00:07:38,500 --> 00:07:43,720
<font color="#CCCCCC">byte code</font><font color="#E5E5E5"> for it and like</font><font color="#CCCCCC"> Roby's</font><font color="#E5E5E5"> byte</font>

230
00:07:41,410 --> 00:07:45,790
<font color="#E5E5E5">code is</font><font color="#CCCCCC"> actually pretty expressive it's</font>

231
00:07:43,720 --> 00:07:47,230
it's not<font color="#E5E5E5"> like the</font><font color="#CCCCCC"> the kind of like</font>

232
00:07:45,790 --> 00:07:49,450
<font color="#CCCCCC">sticks instruction</font><font color="#E5E5E5"> stack machine that it</font>

233
00:07:47,230 --> 00:07:51,160
could be and<font color="#CCCCCC"> so it's not the worst idea</font>

234
00:07:49,450 --> 00:07:52,990
to just<font color="#E5E5E5"> settle down like read this and</font>

235
00:07:51,160 --> 00:07:57,790
like rewrite<font color="#E5E5E5"> this off by hand but it's</font>

236
00:07:52,990 --> 00:07:59,110
like not<font color="#E5E5E5"> the</font><font color="#CCCCCC"> best idea but also it has a</font>

237
00:07:57,790 --> 00:08:01,360
pretty printer that<font color="#E5E5E5"> will actually render</font>

238
00:07:59,110 --> 00:08:02,710
<font color="#E5E5E5">it as an</font><font color="#CCCCCC"> ast</font><font color="#E5E5E5"> right so you get like next</font>

239
00:08:01,360 --> 00:08:03,970
thing<font color="#E5E5E5"> you get someone</font><font color="#CCCCCC"> to send</font><font color="#E5E5E5"> you how</font>

240
00:08:02,710 --> 00:08:06,520
objects<font color="#E5E5E5"> and clothes relate to one</font>

241
00:08:03,970 --> 00:08:09,550
<font color="#CCCCCC">another and like you get you know</font>

242
00:08:06,520 --> 00:08:10,840
another<font color="#E5E5E5"> layer of semantic information so</font>

243
00:08:09,550 --> 00:08:12,730
this is like the first<font color="#CCCCCC"> example of</font>

244
00:08:10,840 --> 00:08:13,900
something<font color="#CCCCCC"> super goofy and hilarious that</font>

245
00:08:12,730 --> 00:08:16,630
<font color="#E5E5E5">I found inside of</font><font color="#CCCCCC"> Robby while I was</font>

246
00:08:13,900 --> 00:08:18,419
<font color="#E5E5E5">working on this so this is inside the</font>

247
00:08:16,630 --> 00:08:20,409
the<font color="#E5E5E5"> rubba compiler they have their</font>

248
00:08:18,419 --> 00:08:22,510
definition for their bytecode format and

249
00:08:20,410 --> 00:08:25,000
I really enjoy<font color="#E5E5E5"> the idea</font><font color="#CCCCCC"> that they</font><font color="#E5E5E5"> have</font>

250
00:08:22,510 --> 00:08:26,860
like a magic<font color="#E5E5E5"> a major version and a minor</font>

251
00:08:25,000 --> 00:08:29,230
version<font color="#E5E5E5"> and above that</font><font color="#CCCCCC"> a comment</font><font color="#E5E5E5"> being</font>

252
00:08:26,860 --> 00:08:31,810
like oh no compatibility<font color="#CCCCCC"> as though like</font>

253
00:08:29,230 --> 00:08:33,190
they have version numbers<font color="#E5E5E5"> how do you run</font>

254
00:08:31,810 --> 00:08:38,650
<font color="#E5E5E5">into compatibility issues when you know</font>

255
00:08:33,190 --> 00:08:39,969
what<font color="#CCCCCC"> versions stuff is so anyway once</font>

256
00:08:38,650 --> 00:08:41,740
you<font color="#E5E5E5"> have this</font><font color="#CCCCCC"> core gen</font><font color="#E5E5E5"> like once you've</font>

257
00:08:39,969 --> 00:08:43,659
taken<font color="#E5E5E5"> the source code and turned it into</font>

258
00:08:41,740 --> 00:08:45,550
<font color="#E5E5E5">bytecode you evaluate it right and</font>

259
00:08:43,659 --> 00:08:48,010
that's like fundamentally how this all

260
00:08:45,550 --> 00:08:49,300
works<font color="#CCCCCC"> if you're planning on</font><font color="#E5E5E5"> obfuscating</font>

261
00:08:48,010 --> 00:08:51,490
your card you just<font color="#CCCCCC"> have to add a</font><font color="#E5E5E5"> couple</font>

262
00:08:49,300 --> 00:08:53,949
of<font color="#CCCCCC"> extra steps</font><font color="#E5E5E5"> right after curtain you</font>

263
00:08:51,490 --> 00:08:55,360
do obfuscation and<font color="#E5E5E5"> you omit that into</font>

264
00:08:53,950 --> 00:08:57,310
some obfuscated source file<font color="#CCCCCC"> and that's</font>

265
00:08:55,360 --> 00:08:59,530
what you shipped to customers and then

266
00:08:57,310 --> 00:09:01,150
at runtime<font color="#E5E5E5"> you unpack that back</font><font color="#CCCCCC"> into</font>

267
00:08:59,530 --> 00:09:03,730
some format<font color="#E5E5E5"> that's like somewhat execute</font>

268
00:09:01,150 --> 00:09:05,560
and you<font color="#CCCCCC"> evaluate that</font><font color="#E5E5E5"> right and this is</font>

269
00:09:03,730 --> 00:09:07,330
<font color="#E5E5E5">what it looks like</font><font color="#CCCCCC"> this is a super</font>

270
00:09:05,560 --> 00:09:08,890
contrived example of like what this

271
00:09:07,330 --> 00:09:10,960
might<font color="#CCCCCC"> look like real-world examples look</font>

272
00:09:08,890 --> 00:09:13,000
almost<font color="#CCCCCC"> identical to</font><font color="#E5E5E5"> this the caveat that</font>

273
00:09:10,960 --> 00:09:14,140
I was trying to<font color="#E5E5E5"> avoid</font><font color="#CCCCCC"> trying to put</font>

274
00:09:13,000 --> 00:09:15,220
things<font color="#E5E5E5"> that might be water</font><font color="#CCCCCC"> mapped</font><font color="#E5E5E5"> into</font>

275
00:09:14,140 --> 00:09:19,120
<font color="#E5E5E5">my talk because</font><font color="#CCCCCC"> I thought that might</font>

276
00:09:15,220 --> 00:09:20,860
come back<font color="#E5E5E5"> to bite</font><font color="#CCCCCC"> me so ruby is super</font>

277
00:09:19,120 --> 00:09:24,279
dynamic<font color="#CCCCCC"> run</font><font color="#E5E5E5"> time debugging</font><font color="#CCCCCC"> is like very</font>

278
00:09:20,860 --> 00:09:26,529
well<font color="#E5E5E5"> supported</font><font color="#CCCCCC"> and so as like the</font>

279
00:09:24,279 --> 00:09:28,330
dumbest<font color="#CCCCCC"> possible starting</font><font color="#E5E5E5"> point</font><font color="#CCCCCC"> you can</font>

280
00:09:26,529 --> 00:09:30,370
<font color="#CCCCCC">just like add instrumentation at</font><font color="#E5E5E5"> runtime</font>

281
00:09:28,330 --> 00:09:32,440
<font color="#CCCCCC">right you can attach any</font><font color="#E5E5E5"> buggy to the</font>

282
00:09:30,370 --> 00:09:33,700
process<font color="#E5E5E5"> and call</font><font color="#CCCCCC"> RBF</font><font color="#E5E5E5"> evallo on which</font>

283
00:09:32,440 --> 00:09:35,470
lets you evaluate statements in the

284
00:09:33,700 --> 00:09:37,089
current context right and so<font color="#E5E5E5"> you can</font>

285
00:09:35,470 --> 00:09:39,220
like explore what's currently<font color="#E5E5E5"> loaded</font>

286
00:09:37,089 --> 00:09:41,470
inside<font color="#E5E5E5"> the VM</font><font color="#CCCCCC"> there's also a really cool</font>

287
00:09:39,220 --> 00:09:42,610
debug your code pry<font color="#E5E5E5"> which if any of you</font>

288
00:09:41,470 --> 00:09:44,110
have<font color="#E5E5E5"> done rubbery things before you</font>

289
00:09:42,610 --> 00:09:45,310
might have interacted with it's<font color="#E5E5E5"> pretty</font>

290
00:09:44,110 --> 00:09:47,200
sweet<font color="#E5E5E5"> it just drops you into</font><font color="#CCCCCC"> a replica</font>

291
00:09:45,310 --> 00:09:49,089
context and you can like type in<font color="#CCCCCC"> Rubby</font>

292
00:09:47,200 --> 00:09:50,589
card and explore your environment right

293
00:09:49,089 --> 00:09:52,390
you can get like reasonably<font color="#CCCCCC"> fought with</font>

294
00:09:50,589 --> 00:09:55,870
that<font color="#E5E5E5"> but</font><font color="#CCCCCC"> again like if you're</font><font color="#E5E5E5"> interested</font>

295
00:09:52,390 --> 00:09:58,000
in let's say<font color="#E5E5E5"> finding a bug in like a</font><font color="#CCCCCC"> ten</font>

296
00:09:55,870 --> 00:10:00,190
million line card base<font color="#E5E5E5"> like you're not</font>

297
00:09:58,000 --> 00:10:02,140
going<font color="#E5E5E5"> to do that by like typing where am</font>

298
00:10:00,190 --> 00:10:04,779
<font color="#CCCCCC">I in</font><font color="#E5E5E5"> to pry a lot right it's it's</font><font color="#CCCCCC"> just</font>

299
00:10:02,140 --> 00:10:06,990
simply<font color="#E5E5E5"> never gonna work it's also like</font>

300
00:10:04,779 --> 00:10:09,730
<font color="#E5E5E5">really plausible to break these</font><font color="#CCCCCC"> things</font>

301
00:10:06,990 --> 00:10:11,470
like pry is really<font color="#E5E5E5"> really</font><font color="#CCCCCC"> easy</font><font color="#E5E5E5"> to</font>

302
00:10:09,730 --> 00:10:13,060
disable at runtime<font color="#E5E5E5"> or at least like easy</font>

303
00:10:11,470 --> 00:10:15,430
to disable in ways that are<font color="#E5E5E5"> annoying and</font>

304
00:10:13,060 --> 00:10:17,739
difficult to to re-enable<font color="#CCCCCC"> as well as</font>

305
00:10:15,430 --> 00:10:18,939
like you can turn off a<font color="#CCCCCC"> bf a vowel like</font>

306
00:10:17,740 --> 00:10:21,880
fairly straightforward if you're like

307
00:10:18,940 --> 00:10:23,529
bundling<font color="#E5E5E5"> it</font><font color="#CCCCCC"> VM for example so all of the</font>

308
00:10:21,880 --> 00:10:26,140
dynamism<font color="#CCCCCC"> that you can</font><font color="#E5E5E5"> abuse as an</font>

309
00:10:23,529 --> 00:10:27,640
attacker is also like sometimes<font color="#E5E5E5"> really</font>

310
00:10:26,140 --> 00:10:29,290
<font color="#E5E5E5">handy</font><font color="#CCCCCC"> is a defender right</font><font color="#E5E5E5"> because you</font>

311
00:10:27,640 --> 00:10:32,380
can figure out some things<font color="#CCCCCC"> that people</font>

312
00:10:29,290 --> 00:10:34,000
<font color="#E5E5E5">are trying to do but Robby's open source</font>

313
00:10:32,380 --> 00:10:35,290
and you<font color="#E5E5E5"> can modify it and it's not a</font>

314
00:10:34,000 --> 00:10:38,470
black box binary like for example

315
00:10:35,290 --> 00:10:40,810
articles<font color="#E5E5E5"> Jerry</font><font color="#CCCCCC"> and so you can just slam</font>

316
00:10:38,470 --> 00:10:42,339
your<font color="#E5E5E5"> and debug interfaces in so I did</font>

317
00:10:40,810 --> 00:10:44,349
<font color="#E5E5E5">all of this work on the</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the reference</font>

318
00:10:42,339 --> 00:10:45,490
implementation which is<font color="#E5E5E5"> MRI</font><font color="#CCCCCC"> I mentioned</font>

319
00:10:44,350 --> 00:10:47,500
<font color="#CCCCCC">before</font>

320
00:10:45,490 --> 00:10:49,540
pretty much everything targets anyway<font color="#CCCCCC"> I</font>

321
00:10:47,500 --> 00:10:52,060
guess like<font color="#CCCCCC"> the exotic Rubby interpret is</font>

322
00:10:49,540 --> 00:10:53,349
super widely used at least<font color="#E5E5E5"> as</font><font color="#CCCCCC"> far as I</font>

323
00:10:52,060 --> 00:10:55,119
can tell

324
00:10:53,350 --> 00:10:57,100
<font color="#E5E5E5">rubbie and python both had this like</font>

325
00:10:55,120 --> 00:10:58,990
fascination with trying to<font color="#CCCCCC"> try to build</font>

326
00:10:57,100 --> 00:11:01,120
like I guess an off<font color="#E5E5E5"> lock and interpreter</font>

327
00:10:58,990 --> 00:11:02,320
that went really<font color="#CCCCCC"> fast but</font><font color="#E5E5E5"> as far</font><font color="#CCCCCC"> as I</font>

328
00:11:01,120 --> 00:11:06,940
can tell<font color="#E5E5E5"> like none of</font><font color="#CCCCCC"> those attempts</font>

329
00:11:02,320 --> 00:11:08,620
<font color="#CCCCCC">were really really successful</font><font color="#E5E5E5"> but</font>

330
00:11:06,940 --> 00:11:10,180
<font color="#E5E5E5">happily most of these products</font><font color="#CCCCCC"> that like</font>

331
00:11:08,620 --> 00:11:12,250
commercially obfuscated things<font color="#E5E5E5"> also</font>

332
00:11:10,180 --> 00:11:14,050
<font color="#E5E5E5">shipped like a ton of loaders and so in</font>

333
00:11:12,250 --> 00:11:14,400
actuality the version that they want<font color="#CCCCCC"> to</font>

334
00:11:14,050 --> 00:11:15,900
run<font color="#E5E5E5"> it</font>

335
00:11:14,400 --> 00:11:17,910
isn't necessarily the one that you have

336
00:11:15,900 --> 00:11:19,079
<font color="#E5E5E5">to use anyway like typically if for</font>

337
00:11:17,910 --> 00:11:21,060
example you only<font color="#E5E5E5"> had done</font><font color="#CCCCCC"> rubbery</font>

338
00:11:19,080 --> 00:11:22,980
targeting one version of which is<font color="#E5E5E5"> what</font>

339
00:11:21,060 --> 00:11:24,780
it does<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can actually just like</font>

340
00:11:22,980 --> 00:11:25,980
<font color="#CCCCCC">backport the vendor software to use</font><font color="#E5E5E5"> this</font>

341
00:11:24,780 --> 00:11:27,650
<font color="#E5E5E5">instead and everything will just work</font>

342
00:11:25,980 --> 00:11:30,540
<font color="#CCCCCC">which is pretty cool</font>

343
00:11:27,650 --> 00:11:31,890
so anyway<font color="#CCCCCC"> like we're now at the</font><font color="#E5E5E5"> point</font>

344
00:11:30,540 --> 00:11:33,000
<font color="#E5E5E5">where it's</font><font color="#CCCCCC"> like well I'm interested in</font>

345
00:11:31,890 --> 00:11:34,740
having<font color="#E5E5E5"> a look</font><font color="#CCCCCC"> at the insides of some</font>

346
00:11:33,000 --> 00:11:37,710
software<font color="#CCCCCC"> I</font><font color="#E5E5E5"> have like the</font><font color="#CCCCCC"> Robbie solace</font>

347
00:11:34,740 --> 00:11:39,090
<font color="#E5E5E5">like why do I go from</font><font color="#CCCCCC"> this and so I'll</font>

348
00:11:37,710 --> 00:11:40,650
<font color="#E5E5E5">be of</font><font color="#CCCCCC"> Li seek is like the most</font>

349
00:11:39,090 --> 00:11:41,970
interesting<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> so we have these</font>

350
00:11:40,650 --> 00:11:43,590
things called instruction<font color="#E5E5E5"> sequences</font>

351
00:11:41,970 --> 00:11:47,280
which are basically<font color="#E5E5E5"> like strings of</font>

352
00:11:43,590 --> 00:11:49,200
black card<font color="#CCCCCC"> and Robbie has</font><font color="#E5E5E5"> this function</font>

353
00:11:47,280 --> 00:11:52,530
called a BL IC<font color="#E5E5E5"> which like takes one and</font>

354
00:11:49,200 --> 00:11:54,480
<font color="#E5E5E5">evaluates it and this is the patch</font><font color="#CCCCCC"> that</font>

355
00:11:52,530 --> 00:11:56,069
<font color="#E5E5E5">I added to Robbie to like get</font><font color="#CCCCCC"> all of</font>

356
00:11:54,480 --> 00:11:57,990
this working<font color="#CCCCCC"> it's really really</font>

357
00:11:56,070 --> 00:12:00,270
straightforward<font color="#CCCCCC"> all it</font><font color="#E5E5E5"> did in this</font>

358
00:11:57,990 --> 00:12:01,830
instance<font color="#E5E5E5"> is every time you</font><font color="#CCCCCC"> try and</font>

359
00:12:00,270 --> 00:12:03,180
<font color="#E5E5E5">evaluate an instruction sequence it</font>

360
00:12:01,830 --> 00:12:04,950
calls<font color="#CCCCCC"> disassemble on it and then it</font>

361
00:12:03,180 --> 00:12:06,120
prints<font color="#E5E5E5"> it to stand it out right and like</font>

362
00:12:04,950 --> 00:12:07,850
the immediate result of this is that

363
00:12:06,120 --> 00:12:10,260
<font color="#CCCCCC">your terminal explodes and catches file</font>

364
00:12:07,850 --> 00:12:11,820
<font color="#E5E5E5">but in like the smoldering wreckage of</font>

365
00:12:10,260 --> 00:12:13,110
<font color="#E5E5E5">that you have the entirety of the</font>

366
00:12:11,820 --> 00:12:14,310
instruction sequences for like the

367
00:12:13,110 --> 00:12:16,110
entirety of<font color="#E5E5E5"> the Ruby program that you</font>

368
00:12:14,310 --> 00:12:17,489
spit out<font color="#E5E5E5"> that you fed in and so for</font>

369
00:12:16,110 --> 00:12:19,320
<font color="#E5E5E5">example if this</font><font color="#CCCCCC"> is like a</font><font color="#E5E5E5"> commercial</font>

370
00:12:17,490 --> 00:12:21,780
<font color="#E5E5E5">product with like 10 million lines of</font>

371
00:12:19,320 --> 00:12:23,700
<font color="#E5E5E5">Ruby</font><font color="#CCCCCC"> it's like it's a</font><font color="#E5E5E5"> lot and again like</font>

372
00:12:21,780 --> 00:12:25,709
it's kind of back to<font color="#CCCCCC"> that like 1400</font>

373
00:12:23,700 --> 00:12:27,510
instruction based<font color="#CCCCCC"> 1,400 basic block</font>

374
00:12:25,710 --> 00:12:29,520
function like you're not gonna rummage

375
00:12:27,510 --> 00:12:31,200
through that by hand<font color="#E5E5E5"> but to first order</font>

376
00:12:29,520 --> 00:12:32,819
a this<font color="#E5E5E5"> proves that like with a single</font>

377
00:12:31,200 --> 00:12:33,930
patch to Ruby<font color="#E5E5E5"> I could defeat like all</font>

378
00:12:32,820 --> 00:12:35,400
obfuscation<font color="#CCCCCC"> forever</font>

379
00:12:33,930 --> 00:12:37,290
because this works without<font color="#CCCCCC"> any knowledge</font>

380
00:12:35,400 --> 00:12:39,329
of how<font color="#E5E5E5"> their load it works right like</font>

381
00:12:37,290 --> 00:12:40,800
they're loaded does its thing<font color="#E5E5E5"> and then</font>

382
00:12:39,330 --> 00:12:42,090
<font color="#CCCCCC">afterwards it calls</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> the VM</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I'm</font>

383
00:12:40,800 --> 00:12:44,130
like<font color="#E5E5E5"> all cool instruction</font><font color="#CCCCCC"> sequence is</font>

384
00:12:42,090 --> 00:12:45,330
<font color="#E5E5E5">like I love looking at those and so no</font>

385
00:12:44,130 --> 00:12:46,920
matter<font color="#E5E5E5"> what they've done to like</font>

386
00:12:45,330 --> 00:12:48,600
<font color="#E5E5E5">Mangalore untangle them I still get to</font>

387
00:12:46,920 --> 00:12:51,870
look at them in the end<font color="#E5E5E5"> which was pretty</font>

388
00:12:48,600 --> 00:12:53,010
cool and<font color="#CCCCCC"> so at this point</font><font color="#E5E5E5"> I was like</font>

389
00:12:51,870 --> 00:12:55,170
<font color="#E5E5E5">trying to figure out what I could do to</font>

390
00:12:53,010 --> 00:12:56,550
<font color="#E5E5E5">take like this well now I have</font><font color="#CCCCCC"> access</font><font color="#E5E5E5"> to</font>

391
00:12:55,170 --> 00:12:58,319
the instruction sequences but that's not

392
00:12:56,550 --> 00:12:59,849
really what I wanted all along<font color="#E5E5E5"> and do</font>

393
00:12:58,320 --> 00:13:01,230
something more<font color="#E5E5E5"> interesting with it so I</font>

394
00:12:59,850 --> 00:13:03,210
<font color="#E5E5E5">started digging around for like other</font>

395
00:13:01,230 --> 00:13:05,280
symbols<font color="#E5E5E5"> that might be interesting so</font>

396
00:13:03,210 --> 00:13:06,810
I'll be eval<font color="#E5E5E5"> I seek like evaluates</font>

397
00:13:05,280 --> 00:13:08,189
instruction sequences but<font color="#E5E5E5"> there's also</font>

398
00:13:06,810 --> 00:13:09,599
like I'll be defined method and VM

399
00:13:08,190 --> 00:13:11,010
defined method which is<font color="#E5E5E5"> called every</font>

400
00:13:09,600 --> 00:13:13,530
<font color="#CCCCCC">time you create a new</font><font color="#E5E5E5"> method in the VM</font>

401
00:13:11,010 --> 00:13:15,330
right which is like realistically more

402
00:13:13,530 --> 00:13:17,760
interesting to you like evaluating stuff

403
00:13:15,330 --> 00:13:19,320
isn't<font color="#E5E5E5"> that cool but like like</font><font color="#CCCCCC"> explaining</font>

404
00:13:17,760 --> 00:13:21,330
the structure of the card base and<font color="#E5E5E5"> like</font>

405
00:13:19,320 --> 00:13:23,730
<font color="#E5E5E5">defining methods is suddenly really</font>

406
00:13:21,330 --> 00:13:27,030
interesting<font color="#E5E5E5"> there's whole</font><font color="#CCCCCC"> surah bf eval</font>

407
00:13:23,730 --> 00:13:27,610
which like I I did pull a bunch<font color="#CCCCCC"> of about</font>

408
00:13:27,030 --> 00:13:29,350
pull

409
00:13:27,610 --> 00:13:31,209
a bunch<font color="#E5E5E5"> of software in the process of</font>

410
00:13:29,350 --> 00:13:33,070
this research<font color="#E5E5E5"> right like</font><font color="#CCCCCC"> you're for</font>

411
00:13:31,209 --> 00:13:36,279
academic<font color="#CCCCCC"> purposes what</font><font color="#E5E5E5"> about and the</font>

412
00:13:33,070 --> 00:13:38,350
vast majority<font color="#CCCCCC"> of things like coal into</font>

413
00:13:36,279 --> 00:13:39,550
internal like<font color="#CCCCCC"> Ruby data structures and</font>

414
00:13:38,350 --> 00:13:41,410
like to find methods and like do

415
00:13:39,550 --> 00:13:43,630
something<font color="#CCCCCC"> at least like somewhat</font>

416
00:13:41,410 --> 00:13:45,219
insidious and annoying<font color="#CCCCCC"> cur of</font><font color="#E5E5E5"> us</font><font color="#CCCCCC"> but I</font>

417
00:13:43,630 --> 00:13:48,399
did bump into one that<font color="#E5E5E5"> like the</font><font color="#CCCCCC"> entire</font>

418
00:13:45,220 --> 00:13:49,959
<font color="#CCCCCC">their obligation engine had like it's a</font>

419
00:13:48,399 --> 00:13:52,510
little<font color="#CCCCCC"> more</font><font color="#E5E5E5"> complicated this but</font>

420
00:13:49,959 --> 00:13:54,250
semantically what they did was rot13 the

421
00:13:52,510 --> 00:13:57,310
entirety<font color="#CCCCCC"> of their codebase like comments</font>

422
00:13:54,250 --> 00:13:59,140
<font color="#E5E5E5">and all and then like</font><font color="#CCCCCC"> unpack it in</font>

423
00:13:57,310 --> 00:14:01,359
memory<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then just like</font><font color="#CCCCCC"> coal</font><font color="#E5E5E5"> eval on</font>

424
00:13:59,140 --> 00:14:02,740
it which was pretty<font color="#CCCCCC"> cool</font><font color="#E5E5E5"> because like in</font>

425
00:14:01,360 --> 00:14:05,440
<font color="#CCCCCC">general you never expect to</font><font color="#E5E5E5"> get the</font>

426
00:14:02,740 --> 00:14:08,800
comments back<font color="#E5E5E5"> so I was like</font><font color="#CCCCCC"> really</font>

427
00:14:05,440 --> 00:14:10,600
pleased by that but like that's<font color="#E5E5E5"> not I</font>

428
00:14:08,800 --> 00:14:12,849
guess like you<font color="#E5E5E5"> shouldn't bet on</font><font color="#CCCCCC"> that</font>

429
00:14:10,600 --> 00:14:15,730
happening<font color="#E5E5E5"> every</font><font color="#CCCCCC"> single time</font><font color="#E5E5E5"> all right</font>

430
00:14:12,850 --> 00:14:18,160
<font color="#E5E5E5">sir we have black card but like what do</font>

431
00:14:15,730 --> 00:14:19,750
<font color="#E5E5E5">we do with that like how do I</font><font color="#CCCCCC"> get</font>

432
00:14:18,160 --> 00:14:21,160
further<font color="#E5E5E5"> than like reading</font><font color="#CCCCCC"> bytecode and</font>

433
00:14:19,750 --> 00:14:24,220
<font color="#E5E5E5">trying to figure out what I could</font><font color="#CCCCCC"> do</font>

434
00:14:21,160 --> 00:14:26,589
<font color="#E5E5E5">with it so</font><font color="#CCCCCC"> Robby's</font><font color="#E5E5E5"> VM is a stack machine</font>

435
00:14:24,220 --> 00:14:28,959
<font color="#E5E5E5">it basically has an instruction pointer</font>

436
00:14:26,589 --> 00:14:31,300
and like a flag register with a bunch of

437
00:14:28,959 --> 00:14:33,189
like conditional jumping stuff<font color="#E5E5E5"> in it but</font>

438
00:14:31,300 --> 00:14:35,410
in<font color="#CCCCCC"> general</font><font color="#E5E5E5"> everything resides on</font><font color="#CCCCCC"> the</font>

439
00:14:33,190 --> 00:14:36,640
stack<font color="#E5E5E5"> right so all operations consume</font>

440
00:14:35,410 --> 00:14:39,579
their operands from<font color="#E5E5E5"> the socket and leave</font>

441
00:14:36,640 --> 00:14:42,579
them behind<font color="#CCCCCC"> and so as you dig through</font>

442
00:14:39,579 --> 00:14:45,029
<font color="#E5E5E5">you'll</font><font color="#CCCCCC"> see like an increasing number of</font>

443
00:14:42,579 --> 00:14:47,680
like put object calls for example like

444
00:14:45,029 --> 00:14:48,970
this card is<font color="#CCCCCC"> like</font><font color="#E5E5E5"> fetching</font><font color="#CCCCCC"> a constant</font>

445
00:14:47,680 --> 00:14:50,769
which leaves it<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the on the stack</font>

446
00:14:48,970 --> 00:14:52,540
interacts with the cache which we can

447
00:14:50,769 --> 00:14:54,519
like happily ignore it puts another

448
00:14:52,540 --> 00:14:56,709
<font color="#CCCCCC">object</font><font color="#E5E5E5"> on the cache and</font><font color="#CCCCCC"> then it</font><font color="#E5E5E5"> sends a</font>

449
00:14:54,519 --> 00:14:58,149
send message which basically says invoke

450
00:14:56,709 --> 00:14:59,560
a method on the objects on the stack

451
00:14:58,149 --> 00:15:01,510
using<font color="#CCCCCC"> the other object</font><font color="#E5E5E5"> on the stack as</font>

452
00:14:59,560 --> 00:15:02,949
an argument<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then it retrieves the</font>

453
00:15:01,510 --> 00:15:04,660
object<font color="#E5E5E5"> from the stack and sets it to an</font>

454
00:15:02,949 --> 00:15:06,969
instance variable<font color="#CCCCCC"> right and</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is like</font>

455
00:15:04,660 --> 00:15:08,620
fundamentally how everything works right

456
00:15:06,970 --> 00:15:09,760
<font color="#E5E5E5">and</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is pretty cool because when</font>

457
00:15:08,620 --> 00:15:11,260
we're looking<font color="#E5E5E5"> at the</font><font color="#CCCCCC"> bytecode we can</font>

458
00:15:09,760 --> 00:15:12,640
basically just<font color="#E5E5E5"> model the stack in memory</font>

459
00:15:11,260 --> 00:15:14,529
and like figure out<font color="#E5E5E5"> what it would have</font>

460
00:15:12,640 --> 00:15:16,540
<font color="#E5E5E5">done and this provides like a pretty</font>

461
00:15:14,529 --> 00:15:18,339
<font color="#CCCCCC">straightforward path to translating</font>

462
00:15:16,540 --> 00:15:20,349
<font color="#E5E5E5">everything back into like equivalent</font>

463
00:15:18,339 --> 00:15:21,910
<font color="#E5E5E5">source code it's also kind of cool</font>

464
00:15:20,350 --> 00:15:24,459
because you can<font color="#E5E5E5"> check your work right</font>

465
00:15:21,910 --> 00:15:25,569
you take your<font color="#CCCCCC"> buy code</font><font color="#E5E5E5"> and you try</font><font color="#CCCCCC"> and</font>

466
00:15:24,459 --> 00:15:26,949
reverse engineer like you try and

467
00:15:25,570 --> 00:15:28,240
translate<font color="#CCCCCC"> it into source code and then</font>

468
00:15:26,949 --> 00:15:29,680
<font color="#E5E5E5">you compile the source code and</font><font color="#CCCCCC"> if it</font>

469
00:15:28,240 --> 00:15:32,140
comes<font color="#E5E5E5"> out the same as</font><font color="#CCCCCC"> the bytecode then</font>

470
00:15:29,680 --> 00:15:35,890
like great<font color="#E5E5E5"> you did it right so you have</font>

471
00:15:32,140 --> 00:15:37,180
this like<font color="#CCCCCC"> really easy like</font><font color="#E5E5E5"> ability to</font>

472
00:15:35,890 --> 00:15:38,709
<font color="#E5E5E5">check your work as you're going which</font>

473
00:15:37,180 --> 00:15:40,180
means<font color="#CCCCCC"> that you don't do</font><font color="#E5E5E5"> for example</font>

474
00:15:38,709 --> 00:15:41,619
<font color="#E5E5E5">months of work and</font><font color="#CCCCCC"> then discover</font>

475
00:15:40,180 --> 00:15:42,609
some of<font color="#E5E5E5"> your assumptions</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> wrong and</font>

476
00:15:41,620 --> 00:15:47,170
realize that you screwed up your life

477
00:15:42,610 --> 00:15:49,630
which I've done a bunch<font color="#CCCCCC"> of times</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> like</font>

478
00:15:47,170 --> 00:15:51,640
I<font color="#CCCCCC"> said the</font><font color="#E5E5E5"> IR is like pretty easy to</font>

479
00:15:49,630 --> 00:15:53,860
read<font color="#CCCCCC"> I did</font><font color="#E5E5E5"> actually find some bugs by</font>

480
00:15:51,640 --> 00:15:55,210
reading by hand<font color="#E5E5E5"> but like because it's so</font>

481
00:15:53,860 --> 00:15:57,520
expressive<font color="#CCCCCC"> decompilation is super</font>

482
00:15:55,210 --> 00:15:59,830
tenable<font color="#E5E5E5"> so I started writing a decompile</font>

483
00:15:57,520 --> 00:16:01,689
<font color="#CCCCCC">uh</font><font color="#E5E5E5"> because that seemed</font><font color="#CCCCCC"> like a</font><font color="#E5E5E5"> fairly</font>

484
00:15:59,830 --> 00:16:03,820
<font color="#E5E5E5">obvious step at this point and the</font>

485
00:16:01,690 --> 00:16:06,310
<font color="#E5E5E5">bytecode is really expressive so it</font>

486
00:16:03,820 --> 00:16:07,930
wasn't super challenging but like a few

487
00:16:06,310 --> 00:16:10,180
<font color="#E5E5E5">hours in I was like</font><font color="#CCCCCC"> this is really</font>

488
00:16:07,930 --> 00:16:11,859
<font color="#CCCCCC">really annoying I don't want to do this</font>

489
00:16:10,180 --> 00:16:13,930
<font color="#CCCCCC">I wonder if anyone else has done this</font>

490
00:16:11,860 --> 00:16:16,240
<font color="#E5E5E5">and it turns out this guy Michael Edgar</font>

491
00:16:13,930 --> 00:16:17,979
adopted broke the<font color="#E5E5E5"> sink over vessel and</font>

492
00:16:16,240 --> 00:16:19,720
<font color="#E5E5E5">you</font><font color="#CCCCCC"> just give it instruction sequences</font>

493
00:16:17,980 --> 00:16:21,610
<font color="#E5E5E5">and it turns them back</font><font color="#CCCCCC"> into sauce</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> I</font>

494
00:16:19,720 --> 00:16:23,110
was like<font color="#CCCCCC"> hum Ken this</font><font color="#E5E5E5"> is really</font>

495
00:16:21,610 --> 00:16:26,580
convenient<font color="#E5E5E5"> this is the exact thing</font><font color="#CCCCCC"> that</font>

496
00:16:23,110 --> 00:16:29,260
I wanted<font color="#E5E5E5"> sir</font>

497
00:16:26,580 --> 00:16:31,000
reversal operated on like some really

498
00:16:29,260 --> 00:16:33,720
<font color="#E5E5E5">old versions of</font><font color="#CCCCCC"> rubbery and it had some</font>

499
00:16:31,000 --> 00:16:36,640
like sort<font color="#E5E5E5"> of clown shoes bugs in it</font>

500
00:16:33,720 --> 00:16:38,830
<font color="#CCCCCC">amusingly the the Rubby that it was set</font>

501
00:16:36,640 --> 00:16:40,780
up<font color="#CCCCCC"> to work with like literally didn't</font>

502
00:16:38,830 --> 00:16:43,870
even build even<font color="#E5E5E5"> when I checked out like</font>

503
00:16:40,780 --> 00:16:45,430
that specific revision<font color="#E5E5E5"> from github which</font>

504
00:16:43,870 --> 00:16:47,140
I'm probably<font color="#E5E5E5"> never going to understand I</font>

505
00:16:45,430 --> 00:16:49,359
think<font color="#E5E5E5"> this is like what interacting with</font>

506
00:16:47,140 --> 00:16:51,760
academia<font color="#E5E5E5"> is like but I'm not really</font>

507
00:16:49,360 --> 00:16:53,830
<font color="#E5E5E5">positive but this project was also lost</font>

508
00:16:51,760 --> 00:16:56,800
touched in 2010 which like I think<font color="#CCCCCC"> I</font>

509
00:16:53,830 --> 00:16:58,240
started<font color="#E5E5E5"> this</font><font color="#CCCCCC"> in 2006 ish and so like</font>

510
00:16:56,800 --> 00:16:59,650
there was a big gap and<font color="#CCCCCC"> it's like</font>

511
00:16:58,240 --> 00:17:03,370
understandable the bit<font color="#E5E5E5"> rot kind of</font>

512
00:16:59,650 --> 00:17:05,560
occurred<font color="#CCCCCC"> I kind of</font><font color="#E5E5E5"> touched on</font><font color="#CCCCCC"> that like</font>

513
00:17:03,370 --> 00:17:07,540
the<font color="#E5E5E5"> VM has grown more instructions this</font>

514
00:17:05,560 --> 00:17:08,500
<font color="#E5E5E5">is one</font><font color="#CCCCCC"> of my favorite like goofy things</font>

515
00:17:07,540 --> 00:17:10,990
in<font color="#CCCCCC"> Rubby</font>

516
00:17:08,500 --> 00:17:13,720
so the the<font color="#E5E5E5"> VM</font><font color="#CCCCCC"> has like a ton of jerk</font>

517
00:17:10,990 --> 00:17:15,790
instructions in it which is<font color="#CCCCCC"> like fine or</font>

518
00:17:13,720 --> 00:17:17,560
whatever<font color="#CCCCCC"> it like you might as well</font><font color="#E5E5E5"> add</font>

519
00:17:15,790 --> 00:17:19,270
jerks<font color="#E5E5E5"> the thing that pisses me off about</font>

520
00:17:17,560 --> 00:17:20,980
<font color="#E5E5E5">this is that the optimizer doesn't know</font>

521
00:17:19,270 --> 00:17:22,240
anything<font color="#E5E5E5"> about this instruction like it</font>

522
00:17:20,980 --> 00:17:23,740
just seems counterintuitive to me<font color="#E5E5E5"> like</font>

523
00:17:22,240 --> 00:17:25,089
if you're<font color="#E5E5E5"> gonna add a goofy instruction</font>

524
00:17:23,740 --> 00:17:26,770
that puts the string a bit of bacon

525
00:17:25,089 --> 00:17:29,050
lettuce and tomato<font color="#E5E5E5"> on the stack you</font>

526
00:17:26,770 --> 00:17:30,970
should also teach your optimizer<font color="#E5E5E5"> to find</font>

527
00:17:29,050 --> 00:17:32,860
references<font color="#CCCCCC"> to the string literal a bit</font>

528
00:17:30,970 --> 00:17:34,060
of bacon lettuce and<font color="#CCCCCC"> tomato and use this</font>

529
00:17:32,860 --> 00:17:35,560
instruction because it would be way

530
00:17:34,060 --> 00:17:38,169
cooler<font color="#E5E5E5"> and it probably would have foiled</font>

531
00:17:35,560 --> 00:17:40,030
my reverse engineering<font color="#E5E5E5"> methods there's</font>

532
00:17:38,170 --> 00:17:43,090
also this gem which my terminal<font color="#E5E5E5"> can't</font>

533
00:17:40,030 --> 00:17:44,920
render<font color="#CCCCCC"> the help for</font><font color="#E5E5E5"> but if you invoke</font>

534
00:17:43,090 --> 00:17:47,199
the answer instruction you get 42<font color="#E5E5E5"> which</font>

535
00:17:44,920 --> 00:17:48,810
makes sense<font color="#CCCCCC"> I guess but</font><font color="#E5E5E5"> so while I was</font>

536
00:17:47,200 --> 00:17:49,890
<font color="#E5E5E5">doing this I like</font>

537
00:17:48,810 --> 00:17:51,659
the reason I<font color="#E5E5E5"> found these two</font>

538
00:17:49,890 --> 00:17:52,890
<font color="#E5E5E5">instructions is because I was trying</font><font color="#CCCCCC"> to</font>

539
00:17:51,660 --> 00:17:54,060
ride to decompile and I was trying<font color="#E5E5E5"> to</font>

540
00:17:52,890 --> 00:17:56,220
add support<font color="#CCCCCC"> for instructions</font><font color="#E5E5E5"> that when</font>

541
00:17:54,060 --> 00:17:57,600
supported and that was like well I kind

542
00:17:56,220 --> 00:17:59,400
of<font color="#E5E5E5"> needed to know what instructions did</font>

543
00:17:57,600 --> 00:18:01,020
and so I was<font color="#CCCCCC"> thinking through there's a</font>

544
00:17:59,400 --> 00:18:03,210
file<font color="#CCCCCC"> code</font><font color="#E5E5E5"> instruction it's not deaf</font><font color="#CCCCCC"> and</font>

545
00:18:01,020 --> 00:18:04,800
it is like this goofy<font color="#CCCCCC"> C macro thing that</font>

546
00:18:03,210 --> 00:18:07,290
like defines all the instructions in the

547
00:18:04,800 --> 00:18:08,490
VM right and so every<font color="#CCCCCC"> time I bumped into</font>

548
00:18:07,290 --> 00:18:10,260
a new<font color="#E5E5E5"> instruction</font><font color="#CCCCCC"> I didn't know how</font><font color="#E5E5E5"> it</font>

549
00:18:08,490 --> 00:18:12,320
<font color="#E5E5E5">worked</font><font color="#CCCCCC"> I was like oh sick</font><font color="#E5E5E5"> this has</font>

550
00:18:10,260 --> 00:18:14,520
documentation<font color="#CCCCCC"> it's gonna be awesome so</font>

551
00:18:12,320 --> 00:18:15,750
<font color="#CCCCCC">Robbie is now</font><font color="#E5E5E5"> in English language like</font>

552
00:18:14,520 --> 00:18:18,690
officially the<font color="#CCCCCC"> rubbery community</font>

553
00:18:15,750 --> 00:18:20,010
operates in English but this is like not

554
00:18:18,690 --> 00:18:22,290
<font color="#E5E5E5">really true for a lot</font><font color="#CCCCCC"> of the card base</font>

555
00:18:20,010 --> 00:18:24,390
<font color="#E5E5E5">so I was looking</font><font color="#CCCCCC"> to expand</font><font color="#E5E5E5"> array and the</font>

556
00:18:22,290 --> 00:18:26,879
English help says expand array to<font color="#E5E5E5"> numb</font>

557
00:18:24,390 --> 00:18:28,440
objects and I know enough about

558
00:18:26,880 --> 00:18:30,030
information theory to know that like

559
00:18:28,440 --> 00:18:32,940
Japanese is like character for character

560
00:18:30,030 --> 00:18:34,860
<font color="#E5E5E5">like meaning dense compared to English</font>

561
00:18:32,940 --> 00:18:37,050
<font color="#CCCCCC">and that's</font><font color="#E5E5E5"> also just</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot more</font>

562
00:18:34,860 --> 00:18:38,729
characters<font color="#E5E5E5"> and so I'm willing to bet</font>

563
00:18:37,050 --> 00:18:40,710
<font color="#E5E5E5">that there's like some interesting stuff</font>

564
00:18:38,730 --> 00:18:42,390
that expand<font color="#E5E5E5"> array does that doesn't fit</font>

565
00:18:40,710 --> 00:18:46,140
neatly<font color="#E5E5E5"> into</font><font color="#CCCCCC"> the description</font><font color="#E5E5E5"> expander</font>

566
00:18:42,390 --> 00:18:48,570
rates and<font color="#CCCCCC"> um objects so I got</font><font color="#E5E5E5"> really</font>

567
00:18:46,140 --> 00:18:50,730
tight<font color="#E5E5E5"> with my</font><font color="#CCCCCC"> friends Izaak who is like</font>

568
00:18:48,570 --> 00:18:52,139
<font color="#E5E5E5">learning Japanese and super excited</font>

569
00:18:50,730 --> 00:18:53,700
about<font color="#CCCCCC"> Robbie</font><font color="#E5E5E5"> and so like we spend a good</font>

570
00:18:52,140 --> 00:18:55,710
long<font color="#E5E5E5"> time like trying</font><font color="#CCCCCC"> to decode a lot of</font>

571
00:18:53,700 --> 00:18:57,510
these help messages because<font color="#CCCCCC"> we're like</font>

572
00:18:55,710 --> 00:19:00,270
<font color="#E5E5E5">super interested</font><font color="#CCCCCC"> what on earth is going</font>

573
00:18:57,510 --> 00:19:01,950
<font color="#CCCCCC">on here</font><font color="#E5E5E5"> especially</font><font color="#CCCCCC"> like there's like</font>

574
00:19:00,270 --> 00:19:03,360
enough<font color="#E5E5E5"> English identifies in there like</font>

575
00:19:01,950 --> 00:19:05,010
the repeated references to nail<font color="#E5E5E5"> a</font>

576
00:19:03,360 --> 00:19:08,610
definitely<font color="#CCCCCC"> some</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> kooky</font><font color="#E5E5E5"> edge by edge</font>

577
00:19:05,010 --> 00:19:10,020
case behavior<font color="#E5E5E5"> but</font><font color="#CCCCCC"> to be very the flip</font>

578
00:19:08,610 --> 00:19:11,610
side<font color="#CCCCCC"> of this is</font><font color="#E5E5E5"> because I had the</font>

579
00:19:10,020 --> 00:19:14,820
<font color="#CCCCCC">ability to kind of check my work by</font>

580
00:19:11,610 --> 00:19:16,889
<font color="#E5E5E5">recompiling my D compilation artifacts</font>

581
00:19:14,820 --> 00:19:18,300
when I couldn't figure stuff out<font color="#E5E5E5"> I did</font>

582
00:19:16,890 --> 00:19:19,620
have like<font color="#E5E5E5"> a reasonable attempt</font><font color="#CCCCCC"> because I</font>

583
00:19:18,300 --> 00:19:21,270
just like try something and then<font color="#E5E5E5"> like</font>

584
00:19:19,620 --> 00:19:23,699
see how<font color="#E5E5E5"> it differed from the from the</font>

585
00:19:21,270 --> 00:19:25,710
gold<font color="#E5E5E5"> standard and like by and large it</font>

586
00:19:23,700 --> 00:19:27,420
was<font color="#E5E5E5"> pretty tenable it also turns out</font>

587
00:19:25,710 --> 00:19:30,000
<font color="#CCCCCC">that like of the</font><font color="#E5E5E5"> emitted code like</font>

588
00:19:27,420 --> 00:19:31,950
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> 78% of</font><font color="#E5E5E5"> it is like effectively</font>

589
00:19:30,000 --> 00:19:33,300
no<font color="#E5E5E5"> ups like MRI emits a ton of</font>

590
00:19:31,950 --> 00:19:34,890
instructions<font color="#E5E5E5"> that relate to the cache</font>

591
00:19:33,300 --> 00:19:35,940
and it turns out when you decompiling

592
00:19:34,890 --> 00:19:38,120
stuff you can just<font color="#CCCCCC"> like throw all of</font>

593
00:19:35,940 --> 00:19:40,650
them away<font color="#CCCCCC"> and everything</font><font color="#E5E5E5"> still works</font><font color="#CCCCCC"> so</font>

594
00:19:38,120 --> 00:19:42,060
<font color="#CCCCCC">I started trying</font><font color="#E5E5E5"> to provide</font><font color="#CCCCCC"> for Russell</font>

595
00:19:40,650 --> 00:19:45,090
I was like this<font color="#E5E5E5"> project looks pretty</font>

596
00:19:42,060 --> 00:19:47,010
<font color="#CCCCCC">cool I think</font><font color="#E5E5E5"> I'm gonna use it so the</font>

597
00:19:45,090 --> 00:19:49,139
<font color="#E5E5E5">first thing I</font><font color="#CCCCCC"> did was</font><font color="#E5E5E5"> I just</font><font color="#CCCCCC"> like did</font>

598
00:19:47,010 --> 00:19:51,480
the like edit make loop until it<font color="#E5E5E5"> built</font>

599
00:19:49,140 --> 00:19:52,920
cleanly<font color="#E5E5E5"> and then I realized that it was</font>

600
00:19:51,480 --> 00:19:54,780
targeting like a comically old rubbing

601
00:19:52,920 --> 00:19:57,300
<font color="#CCCCCC">that like even the load</font><font color="#E5E5E5"> is the target</font>

602
00:19:54,780 --> 00:19:58,500
everything we're like wow that's<font color="#E5E5E5"> really</font>

603
00:19:57,300 --> 00:20:00,659
old we<font color="#CCCCCC"> don't want anything to do with</font>

604
00:19:58,500 --> 00:20:01,680
<font color="#E5E5E5">that so I added support</font><font color="#CCCCCC"> for one line</font>

605
00:20:00,660 --> 00:20:03,420
three

606
00:20:01,680 --> 00:20:05,040
which like for a long<font color="#E5E5E5"> time was like</font><font color="#CCCCCC"> the</font>

607
00:20:03,420 --> 00:20:06,360
gold standard<font color="#CCCCCC"> Ravi amusingly</font><font color="#E5E5E5"> like they</font>

608
00:20:05,040 --> 00:20:08,610
released<font color="#CCCCCC"> one nine four and then we're</font>

609
00:20:06,360 --> 00:20:10,379
like<font color="#E5E5E5"> that's a bad plan don't do that and</font>

610
00:20:08,610 --> 00:20:12,449
so I got<font color="#E5E5E5"> it up to 193 and</font><font color="#CCCCCC"> I subsequently</font>

611
00:20:10,380 --> 00:20:13,890
<font color="#CCCCCC">got it up</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> two one</font><font color="#E5E5E5"> which is now a few</font>

612
00:20:12,450 --> 00:20:16,559
<font color="#CCCCCC">versions behind</font><font color="#E5E5E5"> but it's like super</font>

613
00:20:13,890 --> 00:20:18,120
modern enough<font color="#CCCCCC"> I</font><font color="#E5E5E5"> had support for a bunch</font>

614
00:20:16,559 --> 00:20:19,260
<font color="#E5E5E5">of new instructions including some jerks</font>

615
00:20:18,120 --> 00:20:22,229
because I thought it<font color="#E5E5E5"> would be pretty</font>

616
00:20:19,260 --> 00:20:24,960
<font color="#E5E5E5">cool if</font><font color="#CCCCCC"> it could if reversal at least</font>

617
00:20:22,230 --> 00:20:26,730
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of knew about them and then I</font>

618
00:20:24,960 --> 00:20:30,030
bundle roll up and<font color="#E5E5E5"> shipped it sir</font>

619
00:20:26,730 --> 00:20:31,680
<font color="#E5E5E5">that that's on</font><font color="#CCCCCC"> Ruby so unruly is</font>

620
00:20:30,030 --> 00:20:33,990
basically like a suite of things<font color="#E5E5E5"> it</font>

621
00:20:31,680 --> 00:20:36,900
gives<font color="#E5E5E5"> you a rub EVM so you can run</font>

622
00:20:33,990 --> 00:20:39,030
<font color="#CCCCCC">software with it it</font><font color="#E5E5E5"> hooks a ton of</font>

623
00:20:36,900 --> 00:20:40,770
internal behavior<font color="#CCCCCC"> for reasons I'll get</font>

624
00:20:39,030 --> 00:20:42,570
<font color="#E5E5E5">into in a second it reaches that</font>

625
00:20:40,770 --> 00:20:44,160
<font color="#CCCCCC">traversal for the compilation so like</font>

626
00:20:42,570 --> 00:20:46,530
<font color="#E5E5E5">basically you</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> hand it like</font>

627
00:20:44,160 --> 00:20:48,630
<font color="#E5E5E5">something that invokes Ruby code</font>

628
00:20:46,530 --> 00:20:50,580
<font color="#E5E5E5">hopefully eventually</font><font color="#CCCCCC"> and it'll just like</font>

629
00:20:48,630 --> 00:20:52,290
turn it back into<font color="#E5E5E5"> source code and then</font>

630
00:20:50,580 --> 00:20:54,559
<font color="#CCCCCC">it prints it out for you so you can you</font>

631
00:20:52,290 --> 00:20:57,870
<font color="#E5E5E5">know mess with it do what</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> so</font>

632
00:20:54,559 --> 00:20:59,428
<font color="#CCCCCC">like why not just use reversal on its</font>

633
00:20:57,870 --> 00:21:01,860
own like why did I do all<font color="#E5E5E5"> this</font><font color="#CCCCCC"> like</font>

634
00:20:59,429 --> 00:21:06,120
futzing around<font color="#E5E5E5"> with the</font><font color="#CCCCCC"> rubble um the</font>

635
00:21:01,860 --> 00:21:07,678
biggest<font color="#E5E5E5"> reason is because reversal is</font>

636
00:21:06,120 --> 00:21:10,260
pretty cool but<font color="#E5E5E5"> it's also pretty fragile</font>

637
00:21:07,679 --> 00:21:13,740
it gets confused reasonably easily<font color="#E5E5E5"> it's</font>

638
00:21:10,260 --> 00:21:15,420
<font color="#E5E5E5">definitely not perfect</font><font color="#CCCCCC"> and it's</font>

639
00:21:13,740 --> 00:21:17,130
<font color="#CCCCCC">underlying assumption was that</font><font color="#E5E5E5"> it could</font>

640
00:21:15,420 --> 00:21:19,200
<font color="#CCCCCC">just give</font><font color="#E5E5E5"> it a whole program</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> is like</font>

641
00:21:17,130 --> 00:21:20,640
figure<font color="#CCCCCC"> it out</font><font color="#E5E5E5"> and ultimately it just</font>

642
00:21:19,200 --> 00:21:23,130
<font color="#E5E5E5">kind of wasn't smart enough</font><font color="#CCCCCC"> to pull that</font>

643
00:21:20,640 --> 00:21:24,960
stunt<font color="#CCCCCC"> off but by hooking the behavior of</font>

644
00:21:23,130 --> 00:21:28,080
the<font color="#CCCCCC"> VM suddenly I'm populating a lot of</font>

645
00:21:24,960 --> 00:21:29,940
internal state like structurally<font color="#CCCCCC"> i'm</font>

646
00:21:28,080 --> 00:21:31,320
<font color="#CCCCCC">robi without reversal can tell you about</font>

647
00:21:29,940 --> 00:21:32,880
all<font color="#E5E5E5"> the classes</font><font color="#CCCCCC"> and methods</font><font color="#E5E5E5"> in the</font>

648
00:21:31,320 --> 00:21:34,080
program which like through some use

649
00:21:32,880 --> 00:21:36,660
cases<font color="#CCCCCC"> is actually more</font><font color="#E5E5E5"> than enough</font>

650
00:21:34,080 --> 00:21:39,210
information<font color="#CCCCCC"> to reverse everything anyway</font>

651
00:21:36,660 --> 00:21:41,370
and ultimately<font color="#CCCCCC"> because it's so deeply</font>

652
00:21:39,210 --> 00:21:42,420
<font color="#E5E5E5">tied to the VM it's actually really like</font>

653
00:21:41,370 --> 00:21:44,489
I've<font color="#E5E5E5"> spent a lot</font><font color="#CCCCCC"> of time trying</font><font color="#E5E5E5"> to</font>

654
00:21:42,420 --> 00:21:45,809
figure<font color="#CCCCCC"> out like if I worked for one</font><font color="#E5E5E5"> of</font>

655
00:21:44,490 --> 00:21:47,490
these<font color="#E5E5E5"> companies</font><font color="#CCCCCC"> that obfuscates trouble</font>

656
00:21:45,809 --> 00:21:48,780
you for a living<font color="#E5E5E5"> like how I would stop</font>

657
00:21:47,490 --> 00:21:50,160
people<font color="#CCCCCC"> like me from</font><font color="#E5E5E5"> doing this</font><font color="#CCCCCC"> and I</font>

658
00:21:48,780 --> 00:21:52,678
still haven't<font color="#E5E5E5"> really come up</font><font color="#CCCCCC"> with</font>

659
00:21:50,160 --> 00:21:56,010
<font color="#E5E5E5">anything because</font><font color="#CCCCCC"> you've sort of tied to</font>

660
00:21:52,679 --> 00:21:57,570
all this like structural fragility of

661
00:21:56,010 --> 00:22:00,000
<font color="#E5E5E5">like having used to rub you in the first</font>

662
00:21:57,570 --> 00:22:01,320
<font color="#E5E5E5">place so like</font><font color="#CCCCCC"> I mentioned it</font><font color="#E5E5E5"> does claim</font>

663
00:22:00,000 --> 00:22:02,760
it<font color="#CCCCCC"> can turn into a whole program back</font>

664
00:22:01,320 --> 00:22:04,320
into sauce and it has some<font color="#E5E5E5"> really</font>

665
00:22:02,760 --> 00:22:07,020
contrived test cases and the code<font color="#E5E5E5"> base</font>

666
00:22:04,320 --> 00:22:08,700
that<font color="#E5E5E5"> do this where you end it like a</font><font color="#CCCCCC"> 7</font>

667
00:22:07,020 --> 00:22:09,810
million line instruction sequence and it

668
00:22:08,700 --> 00:22:12,510
turns it<font color="#E5E5E5"> back into the whole thing</font>

669
00:22:09,810 --> 00:22:14,310
because<font color="#CCCCCC"> like defining</font><font color="#E5E5E5"> a class is still</font>

670
00:22:12,510 --> 00:22:16,860
just embarking<font color="#E5E5E5"> off guard as far</font>

671
00:22:14,310 --> 00:22:18,270
<font color="#E5E5E5">rubba is concerned</font><font color="#CCCCCC"> but in</font><font color="#E5E5E5"> practice I</font>

672
00:22:16,860 --> 00:22:20,669
found that it<font color="#CCCCCC"> nearly always gets</font><font color="#E5E5E5"> really</font>

673
00:22:18,270 --> 00:22:23,040
confused and it like loses like it

674
00:22:20,670 --> 00:22:24,840
doesn't<font color="#E5E5E5"> keep</font><font color="#CCCCCC"> track of like scarp and so</font>

675
00:22:23,040 --> 00:22:26,310
<font color="#E5E5E5">actually all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> your classes in the</font>

676
00:22:24,840 --> 00:22:28,379
entire<font color="#CCCCCC"> ten million</font><font color="#E5E5E5"> line card base are</font>

677
00:22:26,310 --> 00:22:29,790
like infinitely nested which was a

678
00:22:28,380 --> 00:22:31,470
really fun bug when<font color="#E5E5E5"> I first bumped into</font>

679
00:22:29,790 --> 00:22:33,840
it because like it tries to indent

680
00:22:31,470 --> 00:22:35,520
everything<font color="#E5E5E5"> nicely and so incremental</font>

681
00:22:33,840 --> 00:22:36,720
<font color="#CCCCCC">compilation where</font><font color="#E5E5E5"> you basically like</font>

682
00:22:35,520 --> 00:22:38,129
tease apart the structure of the program

683
00:22:36,720 --> 00:22:40,290
<font color="#E5E5E5">and then you hand it basically just</font>

684
00:22:38,130 --> 00:22:41,820
method buddies and<font color="#CCCCCC"> just like class</font>

685
00:22:40,290 --> 00:22:44,220
parties and ask it to decompile them

686
00:22:41,820 --> 00:22:45,689
works way better<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a because</font>

687
00:22:44,220 --> 00:22:47,460
there's like less<font color="#E5E5E5"> internal state for it</font>

688
00:22:45,690 --> 00:22:49,170
to<font color="#E5E5E5"> get lost in and B because when it</font>

689
00:22:47,460 --> 00:22:50,550
gets everything wrong<font color="#CCCCCC"> you get</font><font color="#E5E5E5"> to like</font>

690
00:22:49,170 --> 00:22:53,040
start with a fresh context on every

691
00:22:50,550 --> 00:22:54,210
method<font color="#E5E5E5"> so if you eyeball a method and</font>

692
00:22:53,040 --> 00:22:55,409
you're like that's<font color="#E5E5E5"> wrong that</font><font color="#CCCCCC"> doesn't</font>

693
00:22:54,210 --> 00:22:56,700
make any<font color="#CCCCCC"> sense there's a</font><font color="#E5E5E5"> good chance</font>

694
00:22:55,410 --> 00:22:59,160
<font color="#CCCCCC">that the thing next to it might still be</font>

695
00:22:56,700 --> 00:23:00,690
correct<font color="#E5E5E5"> which was very much not the case</font>

696
00:22:59,160 --> 00:23:04,830
when<font color="#CCCCCC"> you hand it like the whole program</font>

697
00:23:00,690 --> 00:23:07,320
as one<font color="#E5E5E5"> giant instruction sequence</font><font color="#CCCCCC"> so</font>

698
00:23:04,830 --> 00:23:08,850
<font color="#CCCCCC">they're like a few</font><font color="#E5E5E5"> levels</font><font color="#CCCCCC"> to this</font><font color="#E5E5E5"> like</font>

699
00:23:07,320 --> 00:23:11,159
the<font color="#E5E5E5"> other thing that people do is like</font>

700
00:23:08,850 --> 00:23:14,040
generate deliberately<font color="#E5E5E5"> difficult to read</font>

701
00:23:11,160 --> 00:23:16,260
by<font color="#CCCCCC"> code and like I guess a really really</font>

702
00:23:14,040 --> 00:23:18,450
trivial<font color="#E5E5E5"> example of this is like creating</font>

703
00:23:16,260 --> 00:23:21,300
<font color="#CCCCCC">a class right so like creating a class</font>

704
00:23:18,450 --> 00:23:23,010
in Java<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example like you can do it</font>

705
00:23:21,300 --> 00:23:24,659
<font color="#CCCCCC">dynamically but you can also like</font>

706
00:23:23,010 --> 00:23:27,360
basically specified<font color="#E5E5E5"> instead of inside</font><font color="#CCCCCC"> of</font>

707
00:23:24,660 --> 00:23:29,340
<font color="#E5E5E5">a class file in</font><font color="#CCCCCC"> Rubby there is like only</font>

708
00:23:27,360 --> 00:23:31,560
<font color="#CCCCCC">one way</font><font color="#E5E5E5"> he says about to show you the</font>

709
00:23:29,340 --> 00:23:33,240
other<font color="#E5E5E5"> way</font><font color="#CCCCCC"> but so there's this myth</font><font color="#E5E5E5"> this</font>

710
00:23:31,560 --> 00:23:35,070
up code called<font color="#CCCCCC"> define class which like</font>

711
00:23:33,240 --> 00:23:37,440
take<font color="#E5E5E5"> some arguments and it like creates</font>

712
00:23:35,070 --> 00:23:40,590
a<font color="#E5E5E5"> class in the current namespace but you</font>

713
00:23:37,440 --> 00:23:42,180
can also load<font color="#CCCCCC"> the constant class</font><font color="#E5E5E5"> onto</font>

714
00:23:40,590 --> 00:23:44,699
the stack<font color="#E5E5E5"> and then you invert the new</font>

715
00:23:42,180 --> 00:23:46,410
method on<font color="#CCCCCC"> it and like eventually</font><font color="#E5E5E5"> this</font>

716
00:23:44,700 --> 00:23:48,810
<font color="#E5E5E5">will kind of like run through enough</font>

717
00:23:46,410 --> 00:23:50,370
<font color="#CCCCCC">rubbie</font><font color="#E5E5E5"> machinery to generate a</font><font color="#CCCCCC"> class</font><font color="#E5E5E5"> but</font>

718
00:23:48,810 --> 00:23:53,760
<font color="#E5E5E5">it does so through</font><font color="#CCCCCC"> like to almost</font>

719
00:23:50,370 --> 00:23:55,620
entirely disparate code paths<font color="#E5E5E5"> and this</font>

720
00:23:53,760 --> 00:23:57,420
<font color="#E5E5E5">was one of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> things that</font><font color="#CCCCCC"> reversal</font>

721
00:23:55,620 --> 00:23:59,129
<font color="#CCCCCC">struggled with it first because its</font>

722
00:23:57,420 --> 00:24:01,740
internal notion was<font color="#CCCCCC"> that the only way</font><font color="#E5E5E5"> to</font>

723
00:23:59,130 --> 00:24:04,380
define classes<font color="#E5E5E5"> is via the defined class</font>

724
00:24:01,740 --> 00:24:06,300
up<font color="#CCCCCC"> kurd and so it's the compiler would</font>

725
00:24:04,380 --> 00:24:08,820
like pouring in on<font color="#E5E5E5"> that as the only way</font>

726
00:24:06,300 --> 00:24:10,260
<font color="#CCCCCC">to do it</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> sorry well I was like no</font>

727
00:24:08,820 --> 00:24:12,270
<font color="#E5E5E5">not to worry</font><font color="#CCCCCC"> I can fix this</font>

728
00:24:10,260 --> 00:24:14,580
so I started hooking more and more stuff

729
00:24:12,270 --> 00:24:15,900
<font color="#CCCCCC">inside of the VM</font><font color="#E5E5E5"> and so by hooking</font><font color="#CCCCCC"> our</font>

730
00:24:14,580 --> 00:24:17,970
be defined class<font color="#E5E5E5"> it doesn't matter</font>

731
00:24:15,900 --> 00:24:20,220
whether you define<font color="#E5E5E5"> a class with defined</font>

732
00:24:17,970 --> 00:24:22,230
class whether you like<font color="#E5E5E5"> Col class</font><font color="#CCCCCC"> name</font>

733
00:24:20,220 --> 00:24:24,120
<font color="#CCCCCC">whether</font><font color="#E5E5E5"> you like eval</font><font color="#CCCCCC"> the string cost on</font>

734
00:24:22,230 --> 00:24:26,070
you like it doesn't<font color="#E5E5E5"> matter what kind of</font>

735
00:24:24,120 --> 00:24:27,540
goofy piece of<font color="#E5E5E5"> plumbing you used to like</font>

736
00:24:26,070 --> 00:24:29,399
wind up at a cost

737
00:24:27,540 --> 00:24:30,720
the instruction pointer always finds<font color="#E5E5E5"> its</font>

738
00:24:29,400 --> 00:24:32,940
way into<font color="#E5E5E5"> a be defined class and I always</font>

739
00:24:30,720 --> 00:24:35,820
<font color="#E5E5E5">get</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> include that in my class</font><font color="#CCCCCC"> map all</font>

740
00:24:32,940 --> 00:24:37,559
<font color="#E5E5E5">right and so this was like the the</font>

741
00:24:35,820 --> 00:24:39,059
important part<font color="#E5E5E5"> which was like removing a</font>

742
00:24:37,559 --> 00:24:40,710
<font color="#E5E5E5">little like structural fragility that</font>

743
00:24:39,059 --> 00:24:41,940
<font color="#E5E5E5">you have to deal with</font><font color="#CCCCCC"> by virtue of like</font>

744
00:24:40,710 --> 00:24:44,070
being in<font color="#CCCCCC"> Rubby</font>

745
00:24:41,940 --> 00:24:45,870
so<font color="#E5E5E5"> I started</font><font color="#CCCCCC"> adding a bunch of patches</font>

746
00:24:44,070 --> 00:24:47,879
and they were all like really<font color="#E5E5E5"> really</font>

747
00:24:45,870 --> 00:24:49,979
simple<font color="#CCCCCC"> this was like</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> first and</font><font color="#E5E5E5"> most</font>

748
00:24:47,880 --> 00:24:52,050
important<font color="#CCCCCC"> one which</font><font color="#E5E5E5"> was that there was</font>

749
00:24:49,980 --> 00:24:54,210
<font color="#CCCCCC">this like really hilarious loop where if</font>

750
00:24:52,050 --> 00:24:55,409
you included reversal<font color="#E5E5E5"> from user space it</font>

751
00:24:54,210 --> 00:24:57,720
would<font color="#E5E5E5"> start</font><font color="#CCCCCC"> trying to be</font><font color="#E5E5E5"> compiled itself</font>

752
00:24:55,410 --> 00:24:59,460
and then like everything went sideways

753
00:24:57,720 --> 00:25:02,250
pretty quickly after<font color="#CCCCCC"> that</font><font color="#E5E5E5"> so I stopped</font>

754
00:24:59,460 --> 00:25:04,410
<font color="#CCCCCC">doing that</font><font color="#E5E5E5"> I started adding these like</font>

755
00:25:02,250 --> 00:25:05,790
<font color="#E5E5E5">really tiny declarations to basically</font>

756
00:25:04,410 --> 00:25:07,050
every method<font color="#E5E5E5"> that like builds up</font>

757
00:25:05,790 --> 00:25:09,178
internal state like anything<font color="#CCCCCC"> that</font>

758
00:25:07,050 --> 00:25:11,070
defines<font color="#CCCCCC"> a constant or attach as a method</font>

759
00:25:09,179 --> 00:25:14,070
to<font color="#CCCCCC"> a constant inside</font><font color="#E5E5E5"> of the VM</font><font color="#CCCCCC"> I just</font>

760
00:25:11,070 --> 00:25:16,169
<font color="#E5E5E5">added these little stubs to it which</font>

761
00:25:14,070 --> 00:25:18,030
<font color="#E5E5E5">basically like he compiles it and then</font>

762
00:25:16,170 --> 00:25:19,920
shoves it into<font color="#E5E5E5"> this like huge class map</font>

763
00:25:18,030 --> 00:25:21,660
and that<font color="#CCCCCC"> class map is just</font><font color="#E5E5E5"> a native</font>

764
00:25:19,920 --> 00:25:23,280
<font color="#E5E5E5">rubble object and so if you decide that</font>

765
00:25:21,660 --> 00:25:24,510
you<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> work on</font><font color="#CCCCCC"> this like you're not</font>

766
00:25:23,280 --> 00:25:26,629
stuck with<font color="#E5E5E5"> just like handing it off to</font>

767
00:25:24,510 --> 00:25:28,920
reversal<font color="#CCCCCC"> and doing</font><font color="#E5E5E5"> whatever like you</font><font color="#CCCCCC"> can</font>

768
00:25:26,630 --> 00:25:30,030
<font color="#E5E5E5">pop a ripple and then stop fiddling</font>

769
00:25:28,920 --> 00:25:31,470
around with the<font color="#E5E5E5"> class map and like look</font>

770
00:25:30,030 --> 00:25:33,690
at it<font color="#CCCCCC"> and</font><font color="#E5E5E5"> like write your own static</font>

771
00:25:31,470 --> 00:25:35,970
analysis<font color="#E5E5E5"> pasta or whatever you can do</font>

772
00:25:33,690 --> 00:25:37,350
all<font color="#CCCCCC"> kinds of fun stuff which</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> turns</font>

773
00:25:35,970 --> 00:25:40,710
that<font color="#E5E5E5"> was my</font><font color="#CCCCCC"> next slide</font><font color="#E5E5E5"> getting ahead of</font>

774
00:25:37,350 --> 00:25:42,360
myself but so this is basically<font color="#E5E5E5"> what</font>

775
00:25:40,710 --> 00:25:44,220
that winds<font color="#E5E5E5"> up looking like there's a</font>

776
00:25:42,360 --> 00:25:45,629
hash of hashes and<font color="#E5E5E5"> each one of them</font>

777
00:25:44,220 --> 00:25:47,040
includes like the methods includes

778
00:25:45,630 --> 00:25:49,710
extends and whether or<font color="#E5E5E5"> not has a</font>

779
00:25:47,040 --> 00:25:51,330
superclass<font color="#CCCCCC"> I did</font><font color="#E5E5E5"> run</font><font color="#CCCCCC"> into a really</font><font color="#E5E5E5"> fun</font>

780
00:25:49,710 --> 00:25:53,270
bug yesterday when I was rewriting<font color="#CCCCCC"> on my</font>

781
00:25:51,330 --> 00:25:55,649
<font color="#E5E5E5">demos</font><font color="#CCCCCC"> cuz I</font><font color="#E5E5E5"> accidentally deleted them</font>

782
00:25:53,270 --> 00:25:56,879
<font color="#CCCCCC">that like</font><font color="#E5E5E5"> this approach</font><font color="#CCCCCC"> actually loses</font>

783
00:25:55,650 --> 00:25:58,440
some<font color="#E5E5E5"> ordering information which turns</font>

784
00:25:56,880 --> 00:25:59,850
<font color="#E5E5E5">out to be semantically relevant and so</font>

785
00:25:58,440 --> 00:26:01,830
this is like the<font color="#E5E5E5"> next bug that I'm gonna</font>

786
00:25:59,850 --> 00:26:03,840
<font color="#E5E5E5">fix but currently it doesn't</font><font color="#CCCCCC"> understand</font>

787
00:26:01,830 --> 00:26:05,850
whether like at what point you included

788
00:26:03,840 --> 00:26:07,949
another method<font color="#E5E5E5"> included another object</font>

789
00:26:05,850 --> 00:26:10,620
<font color="#CCCCCC">which it</font><font color="#E5E5E5"> turns out like drastically</font>

790
00:26:07,950 --> 00:26:12,300
alters<font color="#CCCCCC"> programmed behavior but it also</font>

791
00:26:10,620 --> 00:26:14,879
has a<font color="#E5E5E5"> couple of other like I guess</font>

792
00:26:12,300 --> 00:26:16,440
unexpected benefits one of which is<font color="#CCCCCC"> that</font>

793
00:26:14,880 --> 00:26:18,480
if<font color="#E5E5E5"> you have lots and lots</font><font color="#CCCCCC"> of goofy meta</font>

794
00:26:16,440 --> 00:26:20,250
<font color="#CCCCCC">programming</font><font color="#E5E5E5"> because of the way the</font><font color="#CCCCCC"> rubb</font>

795
00:26:18,480 --> 00:26:22,679
<font color="#E5E5E5">EVM works</font><font color="#CCCCCC"> it will</font><font color="#E5E5E5"> actually effectively</font>

796
00:26:20,250 --> 00:26:24,450
unroll it<font color="#E5E5E5"> for you</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> may or may</font><font color="#CCCCCC"> not be</font>

797
00:26:22,679 --> 00:26:25,770
a bonus<font color="#CCCCCC"> if for example your meta</font>

798
00:26:24,450 --> 00:26:27,179
programming exists<font color="#E5E5E5"> because you needed to</font>

799
00:26:25,770 --> 00:26:29,639
<font color="#E5E5E5">define</font><font color="#CCCCCC"> 10 million methods that are</font>

800
00:26:27,179 --> 00:26:31,679
nearly all the same you may not regard

801
00:26:29,640 --> 00:26:32,970
<font color="#E5E5E5">it as like a huge favor that I did you</font>

802
00:26:31,679 --> 00:26:34,170
<font color="#E5E5E5">by like giving you the concrete</font>

803
00:26:32,970 --> 00:26:36,660
implementations of<font color="#E5E5E5"> those 10 million</font>

804
00:26:34,170 --> 00:26:38,340
methods<font color="#CCCCCC"> but for the most part</font><font color="#E5E5E5"> it</font>

805
00:26:36,660 --> 00:26:39,690
<font color="#CCCCCC">actually works out</font><font color="#E5E5E5"> pretty well a good</font>

806
00:26:38,340 --> 00:26:41,110
<font color="#E5E5E5">example of this is if you've ever used</font>

807
00:26:39,690 --> 00:26:44,920
Sinatra

808
00:26:41,110 --> 00:26:46,689
Sinatra has like magic get and posts

809
00:26:44,920 --> 00:26:48,520
like class method on its controller

810
00:26:46,690 --> 00:26:49,780
class and you invoked that and it like

811
00:26:48,520 --> 00:26:51,670
under<font color="#CCCCCC"> the hood defines the</font><font color="#E5E5E5"> method</font><font color="#CCCCCC"> to</font>

812
00:26:49,780 --> 00:26:52,990
actually<font color="#E5E5E5"> handle it</font><font color="#CCCCCC"> because of the way</font>

813
00:26:51,670 --> 00:26:54,640
this works<font color="#CCCCCC"> it will actually give you</font><font color="#E5E5E5"> the</font>

814
00:26:52,990 --> 00:26:56,340
concrete handler classes and not<font color="#E5E5E5"> just</font>

815
00:26:54,640 --> 00:26:58,690
<font color="#CCCCCC">those</font><font color="#E5E5E5"> like getting put declarations</font>

816
00:26:56,340 --> 00:27:00,040
which don't have to mostly<font color="#E5E5E5"> be more</font>

817
00:26:58,690 --> 00:27:03,010
useful especially if you're<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to do</font>

818
00:27:00,040 --> 00:27:04,120
like a static analysis<font color="#E5E5E5"> kind of thing see</font>

819
00:27:03,010 --> 00:27:05,650
<font color="#E5E5E5">yeah we</font><font color="#CCCCCC"> could all</font><font color="#E5E5E5"> kinds of stuff it's</font>

820
00:27:04,120 --> 00:27:07,449
<font color="#E5E5E5">kind of a nightmare inside of rails cuz</font>

821
00:27:05,650 --> 00:27:10,290
rails is full of magic<font color="#E5E5E5"> but</font><font color="#CCCCCC"> put the</font><font color="#E5E5E5"> motor</font>

822
00:27:07,450 --> 00:27:13,660
spot<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> like pretty neat</font>

823
00:27:10,290 --> 00:27:14,290
<font color="#CCCCCC">sir I'll</font><font color="#E5E5E5"> be defined</font><font color="#CCCCCC"> Clause I kind of</font>

824
00:27:13,660 --> 00:27:15,460
lied to you before

825
00:27:14,290 --> 00:27:17,139
<font color="#CCCCCC">ah-huh be</font><font color="#E5E5E5"> defined class is like</font>

826
00:27:15,460 --> 00:27:20,710
absolutely<font color="#CCCCCC"> not</font><font color="#E5E5E5"> the only way to define a</font>

827
00:27:17,140 --> 00:27:22,150
class<font color="#E5E5E5"> it turns out this is like fairly</font>

828
00:27:20,710 --> 00:27:24,220
unique like it's only because<font color="#CCCCCC"> like</font>

829
00:27:22,150 --> 00:27:25,600
classes are one of the two<font color="#E5E5E5"> universal</font>

830
00:27:24,220 --> 00:27:27,550
primitives like<font color="#CCCCCC"> everything's</font><font color="#E5E5E5"> either a</font>

831
00:27:25,600 --> 00:27:30,580
module<font color="#E5E5E5"> or a class at some point in the</font>

832
00:27:27,550 --> 00:27:31,899
in the Ruby hierarchy<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it turns out</font>

833
00:27:30,580 --> 00:27:34,000
<font color="#E5E5E5">like hooking ah be defined</font><font color="#CCCCCC"> class didn't</font>

834
00:27:31,900 --> 00:27:35,290
get me<font color="#E5E5E5"> far enough so I just like added</font>

835
00:27:34,000 --> 00:27:37,420
my hook function to literally everything

836
00:27:35,290 --> 00:27:39,940
in class<font color="#E5E5E5"> let's see and that like pretty</font>

837
00:27:37,420 --> 00:27:41,680
<font color="#CCCCCC">much made the problem go away alright</font><font color="#E5E5E5"> so</font>

838
00:27:39,940 --> 00:27:42,880
I do have<font color="#E5E5E5"> a demo</font><font color="#CCCCCC"> you're gonna have to</font>

839
00:27:41,680 --> 00:27:44,080
bear with me<font color="#E5E5E5"> for a second</font><font color="#CCCCCC"> because while</font>

840
00:27:42,880 --> 00:27:45,640
I<font color="#E5E5E5"> was trying to make this dongle work I</font>

841
00:27:44,080 --> 00:27:48,639
restarted my computer<font color="#E5E5E5"> and so am I like</font>

842
00:27:45,640 --> 00:27:52,570
carefully laid-out demo is<font color="#E5E5E5"> uh not</font>

843
00:27:48,640 --> 00:27:54,640
anymore<font color="#CCCCCC"> but I bet I can</font><font color="#E5E5E5"> do this the live</font>

844
00:27:52,570 --> 00:27:57,850
demos always go so well<font color="#CCCCCC"> alright so this</font>

845
00:27:54,640 --> 00:27:59,590
<font color="#CCCCCC">should be</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> here and then I don't</font>

846
00:27:57,850 --> 00:28:01,929
remember<font color="#E5E5E5"> how</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> fullscreen things on my</font>

847
00:27:59,590 --> 00:28:02,620
new laptop<font color="#CCCCCC"> and if</font><font color="#E5E5E5"> I I'm big in this</font>

848
00:28:01,930 --> 00:28:11,470
somewhat

849
00:28:02,620 --> 00:28:12,729
can you<font color="#E5E5E5"> see that</font><font color="#CCCCCC"> okay sweet</font><font color="#E5E5E5"> so it's not</font>

850
00:28:11,470 --> 00:28:15,570
like I started really<font color="#E5E5E5"> late this would be</font>

851
00:28:12,730 --> 00:28:15,570
fine<font color="#E5E5E5"> I've got heaps of time</font>

852
00:28:27,040 --> 00:28:33,399
and<font color="#E5E5E5"> sweet okay sir I have this</font><font color="#CCCCCC"> fan here</font>

853
00:28:30,700 --> 00:28:38,260
<font color="#CCCCCC">and I have a copy</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> an Roby</font><font color="#E5E5E5"> and then I</font>

854
00:28:33,400 --> 00:28:40,900
have so I definitely<font color="#E5E5E5"> did a commercial</font>

855
00:28:38,260 --> 00:28:42,700
<font color="#CCCCCC">application which I'm praying doesn't</font>

856
00:28:40,900 --> 00:28:44,740
put its watermark near the end<font color="#E5E5E5"> and I</font>

857
00:28:42,700 --> 00:28:46,300
used it<font color="#E5E5E5"> to encode the CSV library from</font>

858
00:28:44,740 --> 00:28:48,220
<font color="#E5E5E5">Robbie itself because I was like well at</font>

859
00:28:46,300 --> 00:28:49,480
least like<font color="#E5E5E5"> the</font><font color="#CCCCCC"> thing I'm encoding is in</font>

860
00:28:48,220 --> 00:28:51,760
<font color="#CCCCCC">commercial so</font><font color="#E5E5E5"> that's good</font>

861
00:28:49,480 --> 00:28:54,190
so anyway<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is like</font><font color="#E5E5E5"> basically</font><font color="#CCCCCC"> what it</font>

862
00:28:51,760 --> 00:28:55,510
spits out<font color="#CCCCCC"> it does like a little bit</font><font color="#E5E5E5"> of</font>

863
00:28:54,190 --> 00:28:57,730
magic<font color="#E5E5E5"> to try and find</font><font color="#CCCCCC"> its loader and</font>

864
00:28:55,510 --> 00:28:59,830
then it hands a<font color="#E5E5E5"> base64 encoded string</font>

865
00:28:57,730 --> 00:29:02,230
off to its<font color="#E5E5E5"> loader and it's like hey load</font>

866
00:28:59,830 --> 00:29:05,500
this in and so if everything<font color="#E5E5E5"> goes really</font>

867
00:29:02,230 --> 00:29:09,090
really well which it work<font color="#CCCCCC"> cuz control</font>

868
00:29:05,500 --> 00:29:09,090
<font color="#CCCCCC">Allah doesn't</font><font color="#E5E5E5"> work</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> God how does this</font>

869
00:29:09,390 --> 00:29:14,950
yeah it looks about right<font color="#E5E5E5"> okay so what</font>

870
00:29:11,680 --> 00:29:17,560
<font color="#E5E5E5">I'm doing</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> is I'm deferring reversal</font>

871
00:29:14,950 --> 00:29:19,090
<font color="#E5E5E5">because it tries to learn it itself but</font>

872
00:29:17,560 --> 00:29:20,679
<font color="#E5E5E5">I found a ridiculous bug in it and I</font>

873
00:29:19,090 --> 00:29:22,300
couldn't<font color="#E5E5E5"> be bothered fixing it</font><font color="#CCCCCC"> so I'm</font>

874
00:29:20,680 --> 00:29:24,010
telling<font color="#CCCCCC"> unremedied not to try and find</font>

875
00:29:22,300 --> 00:29:25,600
reversal on its<font color="#CCCCCC"> own I'm immediately</font>

876
00:29:24,010 --> 00:29:28,890
telling it where it can find<font color="#E5E5E5"> reversal so</font>

877
00:29:25,600 --> 00:29:32,110
that it will<font color="#E5E5E5"> work</font><font color="#CCCCCC"> and then I'm inverting</font>

878
00:29:28,890 --> 00:29:34,210
<font color="#CCCCCC">on Robbie's just like a drop-in</font><font color="#E5E5E5"> for Ruby</font>

879
00:29:32,110 --> 00:29:36,820
<font color="#E5E5E5">and it will also like evaluate your code</font>

880
00:29:34,210 --> 00:29:39,010
<font color="#CCCCCC">so if you're like for some reason</font><font color="#E5E5E5"> trying</font>

881
00:29:36,820 --> 00:29:40,210
to figure out<font color="#CCCCCC"> like pact malware and</font>

882
00:29:39,010 --> 00:29:42,250
probably<font color="#E5E5E5"> because I guess that's the</font>

883
00:29:40,210 --> 00:29:43,270
thing<font color="#CCCCCC"> people maybe they're like don't</font><font color="#E5E5E5"> do</font>

884
00:29:42,250 --> 00:29:45,490
<font color="#E5E5E5">it on your machine because it like will</font>

885
00:29:43,270 --> 00:29:47,680
actually<font color="#CCCCCC"> run the code but</font><font color="#E5E5E5"> anyway so I'm</font>

886
00:29:45,490 --> 00:29:50,170
going<font color="#E5E5E5"> to invert this and after</font><font color="#CCCCCC"> loading</font>

887
00:29:47,680 --> 00:29:52,150
the<font color="#CCCCCC"> CSV library it's spat out like the</font>

888
00:29:50,170 --> 00:30:00,220
contents of the<font color="#CCCCCC"> CSV module which is</font>

889
00:29:52,150 --> 00:30:03,690
<font color="#E5E5E5">pretty neat they should be more that's</font>

890
00:30:00,220 --> 00:30:06,580
weird something's gone horribly wrong<font color="#E5E5E5"> I</font>

891
00:30:03,690 --> 00:30:08,440
am gonna blame restarting<font color="#E5E5E5"> my computer</font>

892
00:30:06,580 --> 00:30:09,909
anyway<font color="#CCCCCC"> I swear this demo worked</font>

893
00:30:08,440 --> 00:30:11,470
<font color="#E5E5E5">yesterday in the green room if we</font><font color="#CCCCCC"> have</font>

894
00:30:09,910 --> 00:30:12,760
time afterwards I'll dig<font color="#E5E5E5"> around but</font><font color="#CCCCCC"> I</font>

895
00:30:11,470 --> 00:30:14,590
would prefer<font color="#CCCCCC"> not to</font><font color="#E5E5E5"> waste all of your</font>

896
00:30:12,760 --> 00:30:16,900
time while<font color="#E5E5E5"> I</font><font color="#CCCCCC"> butts with my group you</font>

897
00:30:14,590 --> 00:30:18,760
<font color="#CCCCCC">think it's all right you don't have</font><font color="#E5E5E5"> to</font>

898
00:30:16,900 --> 00:30:22,360
clap<font color="#CCCCCC"> failed demos get nothing sorry</font>

899
00:30:18,760 --> 00:30:25,450
uh-huh like how do we<font color="#CCCCCC"> actually like make</font>

900
00:30:22,360 --> 00:30:27,040
this like work<font color="#E5E5E5"> the fact that Robbie</font><font color="#CCCCCC"> is</font>

901
00:30:25,450 --> 00:30:28,840
like super willing to<font color="#CCCCCC"> basically do</font>

902
00:30:27,040 --> 00:30:31,060
anything<font color="#E5E5E5"> for</font><font color="#CCCCCC"> anyone is like</font><font color="#E5E5E5"> really</font>

903
00:30:28,840 --> 00:30:32,740
practical for<font color="#CCCCCC"> us because we can do a lot</font>

904
00:30:31,060 --> 00:30:36,159
<font color="#CCCCCC">of goofy stuff to the VM Before we jump</font>

905
00:30:32,740 --> 00:30:37,780
into like the I guess like attacking

906
00:30:36,160 --> 00:30:38,890
control code so we<font color="#E5E5E5"> can set</font><font color="#CCCCCC"> up an</font>

907
00:30:37,780 --> 00:30:40,660
environment<font color="#E5E5E5"> where we're more likely to</font>

908
00:30:38,890 --> 00:30:43,480
<font color="#E5E5E5">succeed</font>

909
00:30:40,660 --> 00:30:45,250
so we can preload<font color="#E5E5E5"> our library</font><font color="#CCCCCC"> and then</font>

910
00:30:43,480 --> 00:30:46,780
like let it jump in and<font color="#E5E5E5"> then we can like</font>

911
00:30:45,250 --> 00:30:49,150
hijack execution like fiddle with more

912
00:30:46,780 --> 00:30:50,649
stuff<font color="#CCCCCC"> this is super useful for</font><font color="#E5E5E5"> the case</font>

913
00:30:49,150 --> 00:30:52,600
like where I wanted<font color="#E5E5E5"> to not try and</font>

914
00:30:50,650 --> 00:30:55,300
disassemble reversal itself because that

915
00:30:52,600 --> 00:30:57,010
<font color="#E5E5E5">like led to some pain</font><font color="#CCCCCC"> and then we just</font>

916
00:30:55,300 --> 00:30:59,260
<font color="#E5E5E5">add an ADD exit hook so basically when</font>

917
00:30:57,010 --> 00:31:00,760
the<font color="#E5E5E5"> VM exits cleanly we're like hey take</font>

918
00:30:59,260 --> 00:31:02,170
the entirety of<font color="#E5E5E5"> the class map that you</font>

919
00:31:00,760 --> 00:31:05,260
<font color="#E5E5E5">generated and just like spit it out to</font>

920
00:31:02,170 --> 00:31:07,240
<font color="#E5E5E5">stand</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> but so let's say you want to</font>

921
00:31:05,260 --> 00:31:09,400
like break something in the real world

922
00:31:07,240 --> 00:31:10,570
<font color="#CCCCCC">right you have three</font><font color="#E5E5E5"> SC SC library that</font>

923
00:31:09,400 --> 00:31:11,650
you're curious about<font color="#CCCCCC"> how it works then</font>

924
00:31:10,570 --> 00:31:15,879
<font color="#E5E5E5">you can't remember how to get the sauce</font>

925
00:31:11,650 --> 00:31:17,680
out<font color="#CCCCCC"> of the rebbe tree</font><font color="#E5E5E5"> like how do you do</font>

926
00:31:15,880 --> 00:31:19,210
this in<font color="#CCCCCC"> the real world when you have</font>

927
00:31:17,680 --> 00:31:20,410
like a real application<font color="#E5E5E5"> that you want</font><font color="#CCCCCC"> to</font>

928
00:31:19,210 --> 00:31:21,640
<font color="#E5E5E5">look at the source for but you don't</font>

929
00:31:20,410 --> 00:31:24,580
want to accidentally dissemble the

930
00:31:21,640 --> 00:31:27,100
entirety of<font color="#E5E5E5"> rails</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> the naive way to</font>

931
00:31:24,580 --> 00:31:29,290
do this is to<font color="#E5E5E5"> just implement rails</font>

932
00:31:27,100 --> 00:31:30,370
<font color="#E5E5E5">without anybody's nearly all of the</font>

933
00:31:29,290 --> 00:31:31,570
applications that<font color="#E5E5E5"> I looked at where</font>

934
00:31:30,370 --> 00:31:33,149
rails apps<font color="#E5E5E5"> because that's like what</font>

935
00:31:31,570 --> 00:31:35,560
<font color="#CCCCCC">enterprise companies build these days</font>

936
00:31:33,150 --> 00:31:37,030
and so<font color="#CCCCCC"> if you basically include enough</font>

937
00:31:35,560 --> 00:31:39,220
shims that<font color="#E5E5E5"> like all of the calls into</font>

938
00:31:37,030 --> 00:31:41,080
rails like<font color="#E5E5E5"> weren't no method arrow then</font>

939
00:31:39,220 --> 00:31:42,250
you get enough plumbing that<font color="#E5E5E5"> it can like</font>

940
00:31:41,080 --> 00:31:46,899
<font color="#E5E5E5">to find all his classes</font><font color="#CCCCCC"> and do its thing</font>

941
00:31:42,250 --> 00:31:48,430
<font color="#CCCCCC">but you can also do</font><font color="#E5E5E5"> this like the kind</font>

942
00:31:46,900 --> 00:31:50,980
of ridiculous<font color="#E5E5E5"> way that's guaranteed to</font>

943
00:31:48,430 --> 00:31:52,660
like duck punch away<font color="#E5E5E5"> to glory so if</font>

944
00:31:50,980 --> 00:31:54,730
you're<font color="#E5E5E5"> not familiar method missing and</font>

945
00:31:52,660 --> 00:31:56,410
cons missing<font color="#CCCCCC"> are magic methods</font><font color="#E5E5E5"> that are</font>

946
00:31:54,730 --> 00:31:59,140
invoked when you try<font color="#E5E5E5"> to access a</font><font color="#CCCCCC"> method</font>

947
00:31:56,410 --> 00:32:01,120
or a constant that<font color="#E5E5E5"> doesn't exist</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you</font>

948
00:31:59,140 --> 00:32:02,770
can also reopen classes and like<font color="#E5E5E5"> add</font>

949
00:32:01,120 --> 00:32:05,439
<font color="#E5E5E5">more methods to them later</font><font color="#CCCCCC"> which is like</font>

950
00:32:02,770 --> 00:32:08,350
a really<font color="#E5E5E5"> bizarre</font><font color="#CCCCCC"> miss feature</font><font color="#E5E5E5"> rubbing I</font>

951
00:32:05,440 --> 00:32:10,540
guess so I wrote<font color="#E5E5E5"> these two stubs the</font>

952
00:32:08,350 --> 00:32:12,879
<font color="#CCCCCC">first one basically says whenever you</font>

953
00:32:10,540 --> 00:32:15,190
call<font color="#E5E5E5"> a method on a stub that doesn't</font>

954
00:32:12,880 --> 00:32:17,560
<font color="#E5E5E5">exist just</font><font color="#CCCCCC"> return and you stub that</font><font color="#E5E5E5"> also</font>

955
00:32:15,190 --> 00:32:19,180
<font color="#E5E5E5">does that and on object I was like every</font>

956
00:32:17,560 --> 00:32:21,820
time<font color="#CCCCCC"> you try and</font><font color="#E5E5E5"> access a class that</font>

957
00:32:19,180 --> 00:32:23,350
<font color="#E5E5E5">doesn't exist</font><font color="#CCCCCC"> return to stub</font><font color="#E5E5E5"> right and</font>

958
00:32:21,820 --> 00:32:25,149
so in actuality this means that if<font color="#E5E5E5"> you</font>

959
00:32:23,350 --> 00:32:26,530
try and<font color="#CCCCCC"> access anything</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> rubbing</font>

960
00:32:25,150 --> 00:32:28,780
<font color="#E5E5E5">name space you get</font><font color="#CCCCCC"> a stub and if you try</font>

961
00:32:26,530 --> 00:32:30,580
any bug any method on<font color="#CCCCCC"> it you get a stub</font>

962
00:32:28,780 --> 00:32:31,780
<font color="#E5E5E5">that</font><font color="#CCCCCC"> makes everything work</font><font color="#E5E5E5"> right and so</font>

963
00:32:30,580 --> 00:32:33,100
it's like<font color="#E5E5E5"> literally impossible to</font>

964
00:32:31,780 --> 00:32:35,350
<font color="#E5E5E5">receive in our method error and no</font>

965
00:32:33,100 --> 00:32:37,270
constant<font color="#E5E5E5"> error after this and so if you</font>

966
00:32:35,350 --> 00:32:39,100
<font color="#E5E5E5">run any piece of source no matter what</font>

967
00:32:37,270 --> 00:32:41,650
kind of<font color="#E5E5E5"> pre-existing state it expects to</font>

968
00:32:39,100 --> 00:32:43,330
<font color="#E5E5E5">exist in the universe it will like run</font>

969
00:32:41,650 --> 00:32:44,640
cleanly enough<font color="#E5E5E5"> that reversal will get to</font>

970
00:32:43,330 --> 00:32:47,500
look at<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of its instruction sequences</font>

971
00:32:44,640 --> 00:32:49,120
<font color="#CCCCCC">which is pretty cool because typically</font>

972
00:32:47,500 --> 00:32:51,310
like<font color="#CCCCCC"> ruby applications are split</font><font color="#E5E5E5"> into</font>

973
00:32:49,120 --> 00:32:53,229
like not one gigantic file with all<font color="#E5E5E5"> the</font>

974
00:32:51,310 --> 00:32:54,279
<font color="#CCCCCC">source code in it they're like organized</font>

975
00:32:53,230 --> 00:32:55,539
into a hierarchy<font color="#E5E5E5"> that</font>

976
00:32:54,279 --> 00:32:58,690
<font color="#E5E5E5">next to be alerted</font><font color="#CCCCCC"> in a really specific</font>

977
00:32:55,539 --> 00:33:00,009
<font color="#CCCCCC">cordon</font><font color="#E5E5E5"> and like generally speaking you</font>

978
00:32:58,690 --> 00:33:01,629
<font color="#CCCCCC">don't want to like load the top-level</font>

979
00:33:00,009 --> 00:33:03,609
<font color="#E5E5E5">thing and then receive like 10 jillion</font>

980
00:33:01,629 --> 00:33:05,559
lines of<font color="#CCCCCC"> Rubby and like put them into</font>

981
00:33:03,609 --> 00:33:07,029
<font color="#E5E5E5">rubble abbey and then like open it and</font>

982
00:33:05,559 --> 00:33:08,799
vim<font color="#CCCCCC"> and be like man I better know with a</font>

983
00:33:07,029 --> 00:33:10,359
<font color="#E5E5E5">buzzsaw</font><font color="#CCCCCC"> you want to look through file</font><font color="#E5E5E5"> by</font>

984
00:33:08,799 --> 00:33:11,889
<font color="#E5E5E5">file and like figure</font><font color="#CCCCCC"> out like the</font><font color="#E5E5E5"> one</font>

985
00:33:10,359 --> 00:33:13,989
<font color="#E5E5E5">called secret sta'abi is</font><font color="#CCCCCC"> probably a</font>

986
00:33:11,889 --> 00:33:15,668
<font color="#CCCCCC">really</font><font color="#E5E5E5"> good place to stop</font><font color="#CCCCCC"> and so this</font>

987
00:33:13,989 --> 00:33:17,080
lets you like decompile file by file<font color="#CCCCCC"> and</font>

988
00:33:15,669 --> 00:33:20,440
<font color="#E5E5E5">instead of being forced to like look at</font>

989
00:33:17,080 --> 00:33:22,029
<font color="#E5E5E5">the whole</font><font color="#CCCCCC"> thing at once so the next</font>

990
00:33:20,440 --> 00:33:23,320
thing i<font color="#E5E5E5"> kind of thought about was like</font>

991
00:33:22,029 --> 00:33:25,809
<font color="#E5E5E5">nearly everything</font><font color="#CCCCCC"> i was progressing like</font>

992
00:33:23,320 --> 00:33:28,359
<font color="#E5E5E5">had license</font><font color="#CCCCCC"> servers and like it's</font><font color="#E5E5E5"> not</font>

993
00:33:25,809 --> 00:33:30,460
it's kind of<font color="#E5E5E5"> challenging to figure out</font>

994
00:33:28,359 --> 00:33:32,408
whether<font color="#CCCCCC"> or</font><font color="#E5E5E5"> not like</font><font color="#CCCCCC"> i'm doing</font><font color="#E5E5E5"> something</font>

995
00:33:30,460 --> 00:33:34,299
<font color="#E5E5E5">bad and</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> stop me but it's like</font>

996
00:33:32,409 --> 00:33:35,739
pretty<font color="#CCCCCC"> straightforward to</font><font color="#E5E5E5"> like reach out</font>

997
00:33:34,299 --> 00:33:37,658
to your<font color="#E5E5E5"> licensing server to be like hey</font>

998
00:33:35,739 --> 00:33:39,099
here's the<font color="#E5E5E5"> check some of the</font><font color="#CCCCCC"> Ruby like</font>

999
00:33:37,659 --> 00:33:42,219
the Ruby<font color="#E5E5E5"> evaluator that I'm running with</font>

1000
00:33:39,099 --> 00:33:43,658
I don't<font color="#E5E5E5"> think it's right thoughts and so</font>

1001
00:33:42,219 --> 00:33:45,039
I like figured that would probably<font color="#E5E5E5"> be</font>

1002
00:33:43,659 --> 00:33:47,109
bad and so when I was<font color="#E5E5E5"> first working</font><font color="#CCCCCC"> on</font>

1003
00:33:45,039 --> 00:33:48,789
<font color="#E5E5E5">this I was like</font><font color="#CCCCCC"> working</font><font color="#E5E5E5"> in unreadable VM</font>

1004
00:33:47,109 --> 00:33:50,199
and that was kind of my isolation

1005
00:33:48,789 --> 00:33:51,279
primitive to make sure that the things

1006
00:33:50,200 --> 00:33:53,409
always tampering with<font color="#CCCCCC"> weren't like</font>

1007
00:33:51,279 --> 00:33:54,789
calling harm to be like hey you<font color="#CCCCCC"> should</font>

1008
00:33:53,409 --> 00:33:56,229
talk<font color="#CCCCCC"> to that</font><font color="#E5E5E5"> Richard</font><font color="#CCCCCC"> butts guy I don't</font>

1009
00:33:54,789 --> 00:33:58,719
<font color="#E5E5E5">think this</font><font color="#CCCCCC"> is like part</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> end-user</font>

1010
00:33:56,229 --> 00:34:00,129
License Agreement<font color="#CCCCCC"> but that was super</font>

1011
00:33:58,719 --> 00:34:01,929
miserable<font color="#E5E5E5"> because like I spent a lot of</font>

1012
00:34:00,129 --> 00:34:03,968
time realizing<font color="#CCCCCC"> that I like had forgotten</font>

1013
00:34:01,929 --> 00:34:05,169
something<font color="#E5E5E5"> and like I'd have to like kill</font>

1014
00:34:03,969 --> 00:34:06,519
<font color="#E5E5E5">everything and then like make it</font>

1015
00:34:05,169 --> 00:34:08,079
routable so I could like put stuff<font color="#E5E5E5"> into</font>

1016
00:34:06,519 --> 00:34:09,909
it<font color="#E5E5E5"> and then like make it unravel again</font>

1017
00:34:08,079 --> 00:34:11,409
and like I end up making compromises<font color="#E5E5E5"> and</font>

1018
00:34:09,909 --> 00:34:13,480
in the end like if people<font color="#CCCCCC"> were actually</font>

1019
00:34:11,409 --> 00:34:15,429
<font color="#E5E5E5">trying to keep an eye on me then like I</font>

1020
00:34:13,480 --> 00:34:18,520
failed miserably<font color="#CCCCCC"> so the next thing I did</font>

1021
00:34:15,429 --> 00:34:20,859
<font color="#CCCCCC">was add this magic environment called</font><font color="#E5E5E5"> on</font>

1022
00:34:18,520 --> 00:34:22,750
rub you suck<font color="#E5E5E5"> at hack</font><font color="#CCCCCC"> all I</font><font color="#E5E5E5"> did was I</font>

1023
00:34:20,859 --> 00:34:24,699
patched up<font color="#CCCCCC"> the</font><font color="#E5E5E5"> entirety of the socket</font>

1024
00:34:22,750 --> 00:34:26,949
module to like not do<font color="#E5E5E5"> anything if this</font>

1025
00:34:24,699 --> 00:34:28,178
<font color="#E5E5E5">environment variable</font><font color="#CCCCCC"> is set and so</font>

1026
00:34:26,949 --> 00:34:30,699
anything<font color="#E5E5E5"> that</font><font color="#CCCCCC"> tries to</font><font color="#E5E5E5"> create a native</font>

1027
00:34:28,179 --> 00:34:32,980
<font color="#CCCCCC">rubbing socket will transparently fail</font>

1028
00:34:30,699 --> 00:34:34,299
it will like act as though it created a

1029
00:34:32,980 --> 00:34:36,449
socket<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it'll read some writes</font><font color="#E5E5E5"> that</font>

1030
00:34:34,299 --> 00:34:39,460
socket will just like instantly return

1031
00:34:36,449 --> 00:34:41,109
<font color="#CCCCCC">but like this isn't</font><font color="#E5E5E5"> like a perfect</font>

1032
00:34:39,460 --> 00:34:43,000
defense like again if you're like<font color="#E5E5E5"> doing</font>

1033
00:34:41,109 --> 00:34:45,069
some insane like<font color="#CCCCCC"> turner of us malware</font>

1034
00:34:43,000 --> 00:34:46,779
<font color="#E5E5E5">something like anything that knows how</font>

1035
00:34:45,069 --> 00:34:48,879
<font color="#E5E5E5">to invert</font><font color="#CCCCCC"> sis coals or</font><font color="#E5E5E5"> coal ash an</font>

1036
00:34:46,779 --> 00:34:51,190
object can still like reach socket like

1037
00:34:48,879 --> 00:34:52,750
this isn't<font color="#E5E5E5"> a real sandbox</font><font color="#CCCCCC"> but it is like</font>

1038
00:34:51,190 --> 00:34:54,879
really<font color="#E5E5E5"> cheap insurance against the like</font>

1039
00:34:52,750 --> 00:34:59,230
they<font color="#E5E5E5"> imported it</font><font color="#CCCCCC"> Ruby HTTP library to</font>

1040
00:34:54,879 --> 00:35:00,819
like do stuff<font color="#E5E5E5"> so</font><font color="#CCCCCC"> yeah I guess</font><font color="#E5E5E5"> like what</font>

1041
00:34:59,230 --> 00:35:03,490
what do you get in the box if you like

1042
00:35:00,819 --> 00:35:05,079
<font color="#CCCCCC">decide to use Robby</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> get a ruby sauce</font>

1043
00:35:03,490 --> 00:35:06,500
<font color="#E5E5E5">tree which</font><font color="#CCCCCC"> is being like patched out the</font>

1044
00:35:05,079 --> 00:35:07,910
<font color="#E5E5E5">Alice to have like a bunch of</font>

1045
00:35:06,500 --> 00:35:10,010
<font color="#E5E5E5">helpers and stuff to</font><font color="#CCCCCC"> make it really easy</font>

1046
00:35:07,910 --> 00:35:11,450
<font color="#CCCCCC">to do this you get a patch version of</font>

1047
00:35:10,010 --> 00:35:13,670
reversal that works with<font color="#E5E5E5"> that version of</font>

1048
00:35:11,450 --> 00:35:16,250
<font color="#CCCCCC">Robbie you get a rail shim that's like</font>

1049
00:35:13,670 --> 00:35:17,480
less invasive<font color="#E5E5E5"> than like ridiculous like</font>

1050
00:35:16,250 --> 00:35:19,130
duck<font color="#CCCCCC"> punch</font><font color="#E5E5E5"> the universe and</font><font color="#CCCCCC"> two always</font>

1051
00:35:17,480 --> 00:35:20,390
succeeding thing which<font color="#E5E5E5"> actually works</font>

1052
00:35:19,130 --> 00:35:23,000
better<font color="#E5E5E5"> because it marks a lot of bugs</font>

1053
00:35:20,390 --> 00:35:24,650
<font color="#CCCCCC">and so if you want to</font><font color="#E5E5E5"> play with it that</font>

1054
00:35:23,000 --> 00:35:27,080
<font color="#CCCCCC">would</font><font color="#E5E5E5"> be awesome</font><font color="#CCCCCC"> like I highly encourage</font>

1055
00:35:24,650 --> 00:35:28,760
people to either<font color="#E5E5E5"> mess with</font><font color="#CCCCCC"> Unruh B or to</font>

1056
00:35:27,080 --> 00:35:30,110
try and write the same thing<font color="#E5E5E5"> ideally for</font>

1057
00:35:28,760 --> 00:35:31,580
<font color="#E5E5E5">the JVM because I</font><font color="#CCCCCC"> think it'd be cool but</font>

1058
00:35:30,110 --> 00:35:35,570
<font color="#E5E5E5">like really any bytecode VM</font><font color="#CCCCCC"> you can do</font>

1059
00:35:31,580 --> 00:35:38,779
this and there's this like unreal<font color="#CCCCCC"> you</font>

1060
00:35:35,570 --> 00:35:40,490
<font color="#CCCCCC">reportbug' thing</font><font color="#E5E5E5"> which if you export it</font>

1061
00:35:38,780 --> 00:35:43,010
it's an<font color="#E5E5E5"> environment variable</font><font color="#CCCCCC"> it'll like</font>

1062
00:35:40,490 --> 00:35:44,359
if the decompiler chokes<font color="#E5E5E5"> it'll like spit</font>

1063
00:35:43,010 --> 00:35:45,830
out the instruction sequence<font color="#E5E5E5"> the</font><font color="#CCCCCC"> perk</font><font color="#E5E5E5"> it</font>

1064
00:35:44,360 --> 00:35:46,940
and a<font color="#E5E5E5"> little bit of</font><font color="#CCCCCC"> information and like</font>

1065
00:35:45,830 --> 00:35:49,850
you can kind<font color="#CCCCCC"> of redact it and then</font>

1066
00:35:46,940 --> 00:35:52,400
ideally send it to me<font color="#CCCCCC"> so there's some</font>

1067
00:35:49,850 --> 00:35:54,350
other<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> in there on Robbie</font><font color="#E5E5E5"> fly sink</font>

1068
00:35:52,400 --> 00:35:55,700
is the<font color="#CCCCCC"> I</font><font color="#E5E5E5"> guess that first prototype I</font>

1069
00:35:54,350 --> 00:35:57,470
wrote that like dumps instruction

1070
00:35:55,700 --> 00:35:59,029
sequences<font color="#E5E5E5"> out to the terminal</font><font color="#CCCCCC"> it's like</font>

1071
00:35:57,470 --> 00:36:00,589
unless<font color="#E5E5E5"> you want to feel</font><font color="#CCCCCC"> like you're</font>

1072
00:35:59,030 --> 00:36:02,060
compiling<font color="#CCCCCC"> gen 2 or something it's like</font>

1073
00:36:00,590 --> 00:36:03,950
<font color="#E5E5E5">pretty useless because it just</font><font color="#CCCCCC"> bizzy's</font>

1074
00:36:02,060 --> 00:36:06,290
<font color="#E5E5E5">up your terminal</font><font color="#CCCCCC"> but like occasionally</font>

1075
00:36:03,950 --> 00:36:07,730
it's useful for<font color="#E5E5E5"> debugging</font><font color="#CCCCCC"> unwary methods</font>

1076
00:36:06,290 --> 00:36:09,290
is like the default thing that you want

1077
00:36:07,730 --> 00:36:12,230
which just emits a class map complete

1078
00:36:09,290 --> 00:36:13,880
with populated<font color="#CCCCCC"> sauce and it's actually</font>

1079
00:36:12,230 --> 00:36:16,640
been a while<font color="#CCCCCC"> I do know for</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> fact that</font>

1080
00:36:13,880 --> 00:36:21,590
exporting<font color="#CCCCCC"> Yolo</font><font color="#E5E5E5"> does something I don't</font>

1081
00:36:16,640 --> 00:36:22,370
<font color="#CCCCCC">remember what but I bet it's good so</font>

1082
00:36:21,590 --> 00:36:24,740
yeah why not

1083
00:36:22,370 --> 00:36:26,750
you can also like grab the thing but you

1084
00:36:24,740 --> 00:36:29,359
can also<font color="#E5E5E5"> tie with you or Tyler</font><font color="#CCCCCC"> duh</font>

1085
00:36:26,750 --> 00:36:31,130
Robbie has this like facility it's

1086
00:36:29,360 --> 00:36:32,300
really similar to<font color="#E5E5E5"> PHP if any of you have</font>

1087
00:36:31,130 --> 00:36:34,580
like ruined your life in<font color="#CCCCCC"> that specific</font>

1088
00:36:32,300 --> 00:36:36,020
<font color="#E5E5E5">way where you can describe a</font><font color="#CCCCCC"> pattern</font>

1089
00:36:34,580 --> 00:36:37,340
that basically<font color="#E5E5E5"> says like if you bump</font>

1090
00:36:36,020 --> 00:36:37,520
into<font color="#CCCCCC"> a class and you don't know where it</font>

1091
00:36:37,340 --> 00:36:39,980
is

1092
00:36:37,520 --> 00:36:41,810
I'm sorry if you if you try<font color="#CCCCCC"> to access a</font>

1093
00:36:39,980 --> 00:36:43,460
class and that class does<font color="#CCCCCC"> not exist</font><font color="#E5E5E5"> like</font>

1094
00:36:41,810 --> 00:36:45,049
inside<font color="#CCCCCC"> of the current class</font><font color="#E5E5E5"> hierarchy</font>

1095
00:36:43,460 --> 00:36:47,570
like here is how<font color="#E5E5E5"> you should figure out</font>

1096
00:36:45,050 --> 00:36:47,960
<font color="#E5E5E5">which file to evaluate in</font><font color="#CCCCCC"> order to like</font>

1097
00:36:47,570 --> 00:36:50,870
<font color="#CCCCCC">do it</font>

1098
00:36:47,960 --> 00:36:52,610
and a order load is a<font color="#CCCCCC"> suite</font><font color="#E5E5E5"> because like</font>

1099
00:36:50,870 --> 00:36:55,069
a<font color="#E5E5E5"> lot of times it's like remote critics</font>

1100
00:36:52,610 --> 00:36:56,600
<font color="#CCCCCC">concurred execution</font><font color="#E5E5E5"> because like you</font>

1101
00:36:55,070 --> 00:36:57,920
just<font color="#CCCCCC"> have to give</font><font color="#E5E5E5"> them a craftily named</font>

1102
00:36:56,600 --> 00:36:59,690
<font color="#E5E5E5">clot like if you can coax them into</font>

1103
00:36:57,920 --> 00:37:01,370
loading an<font color="#E5E5E5"> attack</font><font color="#CCCCCC"> in controlled class</font>

1104
00:36:59,690 --> 00:37:03,080
they'll<font color="#E5E5E5"> just like a burly require files</font>

1105
00:37:01,370 --> 00:37:05,000
in the<font color="#E5E5E5"> file system which is pretty sweet</font>

1106
00:37:03,080 --> 00:37:07,130
like<font color="#CCCCCC"> your one attacker controlled upload</font>

1107
00:37:05,000 --> 00:37:09,170
<font color="#E5E5E5">for victory but</font><font color="#CCCCCC"> you can also</font><font color="#E5E5E5"> have use</font>

1108
00:37:07,130 --> 00:37:11,930
the<font color="#E5E5E5"> auto loader for fun</font><font color="#CCCCCC"> of fun</font><font color="#E5E5E5"> and</font>

1109
00:37:09,170 --> 00:37:13,460
profit here in<font color="#E5E5E5"> order to like let it</font>

1110
00:37:11,930 --> 00:37:16,580
explore the<font color="#CCCCCC"> program for you and kind of</font>

1111
00:37:13,460 --> 00:37:18,260
tell you where<font color="#CCCCCC"> the fun stuff is so I</font>

1112
00:37:16,580 --> 00:37:19,310
touched<font color="#CCCCCC"> on</font><font color="#E5E5E5"> this before that that</font><font color="#CCCCCC"> always</font>

1113
00:37:18,260 --> 00:37:20,240
the goofy<font color="#CCCCCC"> meta programming</font><font color="#E5E5E5"> will get</font>

1114
00:37:19,310 --> 00:37:21,828
expanded<font color="#CCCCCC"> in the class</font>

1115
00:37:20,240 --> 00:37:23,660
I think one of the things I really want

1116
00:37:21,829 --> 00:37:26,119
to do is like<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> gate this behind</font>

1117
00:37:23,660 --> 00:37:27,649
a switch to like figure<font color="#CCCCCC"> out how many</font><font color="#E5E5E5"> I</font>

1118
00:37:26,119 --> 00:37:28,789
guess<font color="#E5E5E5"> like blocks tape you</font><font color="#CCCCCC"> out when</font>

1119
00:37:27,650 --> 00:37:30,109
you're defining methods and decide

1120
00:37:28,789 --> 00:37:32,690
whether or not<font color="#E5E5E5"> to do it to avoid</font><font color="#CCCCCC"> that</font>

1121
00:37:30,109 --> 00:37:37,069
<font color="#CCCCCC">like</font><font color="#E5E5E5"> state explosion of receiving like a</font>

1122
00:37:32,690 --> 00:37:38,450
<font color="#CCCCCC">10 million</font><font color="#E5E5E5"> method cost them</font><font color="#CCCCCC"> so yeah like</font>

1123
00:37:37,069 --> 00:37:39,680
how how do<font color="#E5E5E5"> you actually do</font><font color="#CCCCCC"> this in the</font>

1124
00:37:38,450 --> 00:37:41,808
real world

1125
00:37:39,680 --> 00:37:44,210
it currently targets<font color="#CCCCCC"> Robbie to one which</font>

1126
00:37:41,809 --> 00:37:46,490
is modern<font color="#E5E5E5"> ish I guess I don't think</font>

1127
00:37:44,210 --> 00:37:47,779
there's any I<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> think the current</font>

1128
00:37:46,490 --> 00:37:49,038
<font color="#E5E5E5">Robbie which is like too full</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these</font>

1129
00:37:47,779 --> 00:37:50,990
days has anything backwards incompatible

1130
00:37:49,039 --> 00:37:52,760
<font color="#CCCCCC">four to</font><font color="#E5E5E5"> one there's just like more</font>

1131
00:37:50,990 --> 00:37:56,419
modules in the standard library<font color="#CCCCCC"> and some</font>

1132
00:37:52,760 --> 00:37:58,369
performance<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> Venice ship shims for</font>

1133
00:37:56,420 --> 00:38:00,890
<font color="#CCCCCC">there Robbie one fun thing that</font><font color="#E5E5E5"> you can</font>

1134
00:37:58,369 --> 00:38:02,390
do is like if you're looking<font color="#E5E5E5"> at a bundle</font>

1135
00:38:00,890 --> 00:38:05,029
<font color="#CCCCCC">program and it</font><font color="#E5E5E5"> only comes with like a</font>

1136
00:38:02,390 --> 00:38:06,618
<font color="#E5E5E5">single</font><font color="#CCCCCC"> erta</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> there like diversion of</font>

1137
00:38:05,029 --> 00:38:08,000
<font color="#E5E5E5">Robbie that they intended you use you</font>

1138
00:38:06,619 --> 00:38:09,440
<font color="#CCCCCC">can typically</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> Google the name of</font>

1139
00:38:08,000 --> 00:38:10,910
the<font color="#E5E5E5"> Lord of they're using and then go to</font>

1140
00:38:09,440 --> 00:38:13,490
<font color="#CCCCCC">their thing and then</font><font color="#E5E5E5"> get a dimmer and</font>

1141
00:38:10,910 --> 00:38:14,990
then get the shim that works with<font color="#CCCCCC"> Unruh</font>

1142
00:38:13,490 --> 00:38:16,279
because it's the<font color="#E5E5E5"> same version and then</font>

1143
00:38:14,990 --> 00:38:18,169
just like put<font color="#E5E5E5"> that by the side of</font><font color="#CCCCCC"> it and</font>

1144
00:38:16,279 --> 00:38:19,400
<font color="#E5E5E5">all</font><font color="#CCCCCC"> the sudden they'll all work because</font>

1145
00:38:18,170 --> 00:38:23,270
everything's super compatible which is

1146
00:38:19,400 --> 00:38:26,529
pretty neat<font color="#CCCCCC"> you can also like if in the</font>

1147
00:38:23,270 --> 00:38:28,640
<font color="#E5E5E5">case where some some applications</font><font color="#CCCCCC"> like</font>

1148
00:38:26,529 --> 00:38:30,980
obviously<font color="#CCCCCC"> both</font><font color="#E5E5E5"> this Java and so this is</font>

1149
00:38:28,640 --> 00:38:32,240
like a bad simile<font color="#E5E5E5"> but like Burke has</font>

1150
00:38:30,980 --> 00:38:34,279
like an icon that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> double</font><font color="#E5E5E5"> click and</font>

1151
00:38:32,240 --> 00:38:35,750
<font color="#E5E5E5">it like invokes its are bundled Java</font>

1152
00:38:34,279 --> 00:38:37,940
which is<font color="#CCCCCC"> like</font><font color="#E5E5E5"> hidden somewhere in there</font>

1153
00:38:35,750 --> 00:38:39,559
so like tampering<font color="#CCCCCC"> like you need</font><font color="#E5E5E5"> to open</font>

1154
00:38:37,940 --> 00:38:41,869
up<font color="#CCCCCC"> the package and</font><font color="#E5E5E5"> like stick your</font>

1155
00:38:39,559 --> 00:38:43,250
<font color="#E5E5E5">malicious Java in there you can do the</font>

1156
00:38:41,869 --> 00:38:46,579
same thing with<font color="#CCCCCC"> rubbery programs right</font>

1157
00:38:43,250 --> 00:38:47,779
like if you open up<font color="#CCCCCC"> I</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> started me</font>

1158
00:38:46,579 --> 00:38:49,309
<font color="#E5E5E5">to</font><font color="#CCCCCC"> think of a</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> example but they're</font>

1159
00:38:47,779 --> 00:38:51,020
like tons of desktop<font color="#CCCCCC"> applications that</font>

1160
00:38:49,309 --> 00:38:52,460
are like Robbie under the hood you can

1161
00:38:51,020 --> 00:38:54,200
<font color="#CCCCCC">just open</font><font color="#E5E5E5"> up the package file and like</font>

1162
00:38:52,460 --> 00:38:56,809
drop on rubbing instead of it and then

1163
00:38:54,200 --> 00:38:59,029
like<font color="#E5E5E5"> everything would just work which is</font>

1164
00:38:56,809 --> 00:39:01,010
pretty<font color="#E5E5E5"> cool so like I said</font><font color="#CCCCCC"> I thought</font><font color="#E5E5E5"> I</font>

1165
00:38:59,029 --> 00:39:02,930
<font color="#E5E5E5">spent some time like trying to figure</font>

1166
00:39:01,010 --> 00:39:04,130
<font color="#CCCCCC">out how I would defeat this like if I</font>

1167
00:39:02,930 --> 00:39:06,710
work for<font color="#E5E5E5"> that company</font><font color="#CCCCCC"> how would I start</font>

1168
00:39:04,130 --> 00:39:09,049
<font color="#E5E5E5">some jerk like me from doing this</font><font color="#CCCCCC"> and</font>

1169
00:39:06,710 --> 00:39:11,210
it's a little unclear right<font color="#E5E5E5"> like it</font>

1170
00:39:09,049 --> 00:39:12,740
turns out Robbie it's just like a bad

1171
00:39:11,210 --> 00:39:14,359
language<font color="#E5E5E5"> to implement your software and</font>

1172
00:39:12,740 --> 00:39:16,788
<font color="#E5E5E5">if you want to give it to other people</font>

1173
00:39:14,359 --> 00:39:18,740
<font color="#CCCCCC">like honestly I think the only real</font>

1174
00:39:16,789 --> 00:39:20,660
solution<font color="#CCCCCC"> is to SGX really really hard</font>

1175
00:39:18,740 --> 00:39:23,839
<font color="#CCCCCC">right</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> you literally put it inside</font>

1176
00:39:20,660 --> 00:39:25,490
of<font color="#E5E5E5"> any like an execution Enclave to</font><font color="#CCCCCC"> like</font>

1177
00:39:23,839 --> 00:39:28,099
the hypervisor can't look into<font color="#E5E5E5"> but</font>

1178
00:39:25,490 --> 00:39:29,598
<font color="#E5E5E5">that's kind of extreme and probably more</font>

1179
00:39:28,099 --> 00:39:34,040
work than anyone's really<font color="#E5E5E5"> willing to</font><font color="#CCCCCC"> put</font>

1180
00:39:29,599 --> 00:39:35,540
into this<font color="#CCCCCC"> you can definitely like</font><font color="#E5E5E5"> you</font>

1181
00:39:34,040 --> 00:39:38,000
you can play<font color="#CCCCCC"> like a tack a tag for a</font>

1182
00:39:35,540 --> 00:39:39,610
while you can<font color="#CCCCCC"> just like introduce more</font>

1183
00:39:38,000 --> 00:39:43,910
annoying things<font color="#E5E5E5"> that you need</font><font color="#CCCCCC"> to bypass</font>

1184
00:39:39,610 --> 00:39:45,890
<font color="#CCCCCC">but like this is not skewed in favor of</font>

1185
00:39:43,910 --> 00:39:47,029
the defender<font color="#E5E5E5"> right like in actuality is</font>

1186
00:39:45,890 --> 00:39:48,230
probably<font color="#E5E5E5"> really annoying for</font><font color="#CCCCCC"> you to</font>

1187
00:39:47,030 --> 00:39:49,640
<font color="#CCCCCC">implement those</font><font color="#E5E5E5"> checks and it's really</font>

1188
00:39:48,230 --> 00:39:51,740
<font color="#E5E5E5">not that annoying for me to like</font><font color="#CCCCCC"> make</font>

1189
00:39:49,640 --> 00:39:53,330
<font color="#E5E5E5">I'm</font><font color="#CCCCCC"> rubbing</font><font color="#E5E5E5"> past them as well as like</font>

1190
00:39:51,740 --> 00:39:55,790
any checks that you do<font color="#E5E5E5"> inside of</font><font color="#CCCCCC"> rubble</font>

1191
00:39:53,330 --> 00:39:57,770
<font color="#E5E5E5">and like it's pretty easy to smash them</font>

1192
00:39:55,790 --> 00:39:59,690
as a whole like in the same<font color="#E5E5E5"> way that I</font>

1193
00:39:57,770 --> 00:40:01,070
made<font color="#CCCCCC"> all</font><font color="#E5E5E5"> class and method resolutions</font>

1194
00:39:59,690 --> 00:40:02,780
just like transparently work because it

1195
00:40:01,070 --> 00:40:04,490
<font color="#E5E5E5">was easy for me like it's not actually</font>

1196
00:40:02,780 --> 00:40:06,380
<font color="#CCCCCC">that</font><font color="#E5E5E5"> hard to</font><font color="#CCCCCC"> just like</font><font color="#E5E5E5"> patch</font><font color="#CCCCCC"> all</font>

1197
00:40:04,490 --> 00:40:08,629
<font color="#E5E5E5">equality comparisons to be like well the</font>

1198
00:40:06,380 --> 00:40:10,010
right hand side looks like<font color="#E5E5E5"> it has a sort</font>

1199
00:40:08,630 --> 00:40:11,300
of checksum look to it so yeah the<font color="#E5E5E5"> left</font>

1200
00:40:10,010 --> 00:40:12,950
hand side is<font color="#CCCCCC"> definitely also</font><font color="#E5E5E5"> the same</font>

1201
00:40:11,300 --> 00:40:14,750
checksum<font color="#E5E5E5"> it's like something</font><font color="#CCCCCC"> you can</font>

1202
00:40:12,950 --> 00:40:16,189
reasonably easily<font color="#E5E5E5"> do inside</font><font color="#CCCCCC"> of Rubby</font>

1203
00:40:14,750 --> 00:40:19,220
which like would break a lot of naive

1204
00:40:16,190 --> 00:40:20,900
attempts<font color="#CCCCCC"> and so like</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> think</font>

1205
00:40:19,220 --> 00:40:22,759
realistically your best bet is<font color="#CCCCCC"> to</font>

1206
00:40:20,900 --> 00:40:24,890
include shadow definitions of like all

1207
00:40:22,760 --> 00:40:26,570
of<font color="#CCCCCC"> the like</font><font color="#E5E5E5"> callosum method definition</font>

1208
00:40:24,890 --> 00:40:27,650
machinery so that you can like twiddle

1209
00:40:26,570 --> 00:40:31,460
with<font color="#CCCCCC"> the internal data structures</font>

1210
00:40:27,650 --> 00:40:32,600
<font color="#CCCCCC">without ever in working my hooks</font><font color="#E5E5E5"> I at</font>

1211
00:40:31,460 --> 00:40:34,130
the same time like<font color="#CCCCCC"> if you did</font><font color="#E5E5E5"> that I</font>

1212
00:40:32,600 --> 00:40:35,330
would totally<font color="#CCCCCC"> just like ochio's</font><font color="#E5E5E5"> with pin</font>

1213
00:40:34,130 --> 00:40:37,460
and we'd be right back where we started

1214
00:40:35,330 --> 00:40:39,980
<font color="#CCCCCC">and</font><font color="#E5E5E5"> so it really upsets</font><font color="#CCCCCC"> me to say this</font>

1215
00:40:37,460 --> 00:40:41,390
<font color="#E5E5E5">and Sam</font><font color="#CCCCCC"> Collinson and like wanted to be</font>

1216
00:40:39,980 --> 00:40:43,400
<font color="#CCCCCC">quoted</font><font color="#E5E5E5"> in my slides but isn't because I</font>

1217
00:40:41,390 --> 00:40:45,529
forgot<font color="#E5E5E5"> but like I think nerd might</font>

1218
00:40:43,400 --> 00:40:48,140
almost be a good<font color="#E5E5E5"> idea which</font><font color="#CCCCCC"> is</font>

1219
00:40:45,530 --> 00:40:49,580
horrifying<font color="#CCCCCC"> but</font><font color="#E5E5E5"> purely because you have</font>

1220
00:40:48,140 --> 00:40:51,680
<font color="#E5E5E5">access to this</font><font color="#CCCCCC"> chip suddenly you have</font>

1221
00:40:49,580 --> 00:40:52,970
like you're still gonna lose<font color="#E5E5E5"> like you're</font>

1222
00:40:51,680 --> 00:40:54,410
still coughing up<font color="#E5E5E5"> like a lot</font><font color="#CCCCCC"> of the</font>

1223
00:40:52,970 --> 00:40:56,029
structural<font color="#CCCCCC"> information about like how</font>

1224
00:40:54,410 --> 00:40:58,160
your program fits together<font color="#CCCCCC"> but at least</font>

1225
00:40:56,030 --> 00:40:59,540
you do have the<font color="#E5E5E5"> option to like</font><font color="#CCCCCC"> emit like</font>

1226
00:40:58,160 --> 00:41:00,910
native code that makes<font color="#CCCCCC"> reverses</font><font color="#E5E5E5"> hate</font>

1227
00:40:59,540 --> 00:41:02,660
themselves<font color="#E5E5E5"> for all of your method bodies</font>

1228
00:41:00,910 --> 00:41:03,710
<font color="#CCCCCC">you're running to this like reverse</font>

1229
00:41:02,660 --> 00:41:05,149
problem where you need to<font color="#E5E5E5"> convince it to</font>

1230
00:41:03,710 --> 00:41:07,190
<font color="#E5E5E5">get literally</font><font color="#CCCCCC"> everything and you need to</font>

1231
00:41:05,150 --> 00:41:08,300
figure<font color="#E5E5E5"> out how</font><font color="#CCCCCC"> to like stole the shitty</font>

1232
00:41:07,190 --> 00:41:10,070
<font color="#CCCCCC">curtain hand that off but</font><font color="#E5E5E5"> like</font>

1233
00:41:08,300 --> 00:41:11,630
terrifyingly I think like you should

1234
00:41:10,070 --> 00:41:15,320
write your enterprise app<font color="#E5E5E5"> in nerd I</font>

1235
00:41:11,630 --> 00:41:16,790
guess<font color="#CCCCCC"> Courtney or at me the cool the</font>

1236
00:41:15,320 --> 00:41:18,380
<font color="#CCCCCC">good news is there's like no obvious way</font>

1237
00:41:16,790 --> 00:41:20,750
to defeat this attack which is great and

1238
00:41:18,380 --> 00:41:23,720
the cost to attack is like really<font color="#CCCCCC"> really</font>

1239
00:41:20,750 --> 00:41:24,980
<font color="#E5E5E5">low but you can definitely apply this to</font>

1240
00:41:23,720 --> 00:41:28,580
<font color="#E5E5E5">other things which is like the question</font>

1241
00:41:24,980 --> 00:41:31,430
I typically get asked at the<font color="#CCCCCC"> end so yeah</font>

1242
00:41:28,580 --> 00:41:33,940
go on<font color="#E5E5E5"> reverse stuff</font><font color="#CCCCCC"> so like</font><font color="#E5E5E5"> I mentioned</font>

1243
00:41:31,430 --> 00:41:36,140
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is like the most important</font><font color="#CCCCCC"> thing I</font>

1244
00:41:33,940 --> 00:41:38,870
fixed all the bugs<font color="#CCCCCC"> that I bumped into</font>

1245
00:41:36,140 --> 00:41:40,490
and<font color="#CCCCCC"> I reversed some like pretty</font>

1246
00:41:38,870 --> 00:41:42,230
substantial pieces<font color="#E5E5E5"> of software which</font><font color="#CCCCCC"> I</font>

1247
00:41:40,490 --> 00:41:44,540
<font color="#CCCCCC">think means I have like reasonable</font>

1248
00:41:42,230 --> 00:41:46,190
<font color="#E5E5E5">coverage but like every time I tried</font>

1249
00:41:44,540 --> 00:41:47,220
something new<font color="#CCCCCC"> I</font><font color="#E5E5E5"> like consistently bumped</font>

1250
00:41:46,190 --> 00:41:49,410
into something<font color="#CCCCCC"> goofy</font>

1251
00:41:47,220 --> 00:41:51,000
like the coverage<font color="#E5E5E5"> I have for up</font><font color="#CCCCCC"> curbs is</font>

1252
00:41:49,410 --> 00:41:52,740
like deliberately driven by up<font color="#CCCCCC"> cars I</font>

1253
00:41:51,000 --> 00:41:54,030
<font color="#E5E5E5">saw like it just looked really annoying</font>

1254
00:41:52,740 --> 00:41:54,990
<font color="#E5E5E5">to implement all of them so I didn't</font>

1255
00:41:54,030 --> 00:41:55,410
when I could get away with<font color="#E5E5E5"> not</font><font color="#CCCCCC"> doing</font>

1256
00:41:54,990 --> 00:41:57,720
<font color="#E5E5E5">that</font>

1257
00:41:55,410 --> 00:41:59,250
so please do reach<font color="#E5E5E5"> out like in actuality</font>

1258
00:41:57,720 --> 00:42:01,560
fixing the bugs is really easy I just

1259
00:41:59,250 --> 00:42:02,700
<font color="#E5E5E5">need to know where they</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> so I wanted</font>

1260
00:42:01,560 --> 00:42:04,080
<font color="#E5E5E5">to give you a sneak peek of something</font>

1261
00:42:02,700 --> 00:42:05,879
I'm working<font color="#E5E5E5"> on right now</font>

1262
00:42:04,080 --> 00:42:08,069
I actually just offloaded<font color="#CCCCCC"> this to</font>

1263
00:42:05,880 --> 00:42:10,650
someone new on my team<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it turns out</font>

1264
00:42:08,070 --> 00:42:12,960
like porting<font color="#CCCCCC"> AFL</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> Rubby is like not</font>

1265
00:42:10,650 --> 00:42:14,430
super<font color="#E5E5E5"> complicated</font><font color="#CCCCCC"> especially at the</font>

1266
00:42:12,960 --> 00:42:16,800
<font color="#E5E5E5">point we have</font><font color="#CCCCCC"> like this</font><font color="#E5E5E5"> fine grained</font>

1267
00:42:14,430 --> 00:42:18,180
information and what the<font color="#CCCCCC"> VM</font><font color="#E5E5E5"> is doing so</font>

1268
00:42:16,800 --> 00:42:19,800
I wrote a little<font color="#E5E5E5"> C shim that like</font>

1269
00:42:18,180 --> 00:42:21,270
<font color="#CCCCCC">influenced the FL shed memory protocol</font>

1270
00:42:19,800 --> 00:42:22,830
and<font color="#E5E5E5"> then I</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> trace point to basically</font>

1271
00:42:21,270 --> 00:42:24,590
be like hey every<font color="#E5E5E5"> time you do something</font>

1272
00:42:22,830 --> 00:42:28,710
<font color="#CCCCCC">like reach into this so I can total bits</font>

1273
00:42:24,590 --> 00:42:31,080
<font color="#E5E5E5">so it's now possible to fuzz plaque box</font>

1274
00:42:28,710 --> 00:42:33,240
<font color="#CCCCCC">rubbie applications</font><font color="#E5E5E5"> and then translate</font>

1275
00:42:31,080 --> 00:42:35,970
the crashes back into solos<font color="#CCCCCC"> in like a</font>

1276
00:42:33,240 --> 00:42:37,200
totally hands-off way<font color="#E5E5E5"> that like you you</font>

1277
00:42:35,970 --> 00:42:38,609
<font color="#E5E5E5">don't need to know literally anything</font>

1278
00:42:37,200 --> 00:42:40,649
about either<font color="#E5E5E5"> the way it's packed</font><font color="#CCCCCC"> or</font>

1279
00:42:38,609 --> 00:42:42,330
written<font color="#CCCCCC"> you've just like handed garbage</font>

1280
00:42:40,650 --> 00:42:44,190
inputs until something cool happens and

1281
00:42:42,330 --> 00:42:47,240
then<font color="#E5E5E5"> you like have</font><font color="#CCCCCC"> a look at the source</font>

1282
00:42:44,190 --> 00:42:49,500
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the bug which i think is pretty</font><font color="#CCCCCC"> cool</font>

1283
00:42:47,240 --> 00:42:51,839
<font color="#CCCCCC">yeah so I</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to teach out a few</font><font color="#E5E5E5"> people</font>

1284
00:42:49,500 --> 00:42:53,580
out rich<font color="#E5E5E5"> Smith where the single paretic</font>

1285
00:42:51,839 --> 00:42:55,470
<font color="#CCCCCC">PI retic but about</font><font color="#E5E5E5"> he really said a</font>

1286
00:42:53,580 --> 00:42:57,240
black<font color="#E5E5E5"> out like forever ago</font><font color="#CCCCCC"> it was a</font>

1287
00:42:55,470 --> 00:42:59,669
fundamentally kind of similar thing for

1288
00:42:57,240 --> 00:43:02,098
<font color="#CCCCCC">Python it</font><font color="#E5E5E5"> definitely didn't do a lot</font><font color="#CCCCCC"> of</font>

1289
00:42:59,670 --> 00:43:03,359
like ridiculous hands off just<font color="#E5E5E5"> rename a</font>

1290
00:43:02,099 --> 00:43:05,339
binary and you're off to<font color="#CCCCCC"> the races</font><font color="#E5E5E5"> this</font>

1291
00:43:03,359 --> 00:43:08,520
kind of thing but he definitely<font color="#E5E5E5"> kind of</font>

1292
00:43:05,339 --> 00:43:10,410
pioneered<font color="#E5E5E5"> this idea of extracting like a</font>

1293
00:43:08,520 --> 00:43:12,180
semantic<font color="#CCCCCC"> class map and then populating</font>

1294
00:43:10,410 --> 00:43:13,830
everything post<font color="#E5E5E5"> factor</font><font color="#CCCCCC"> which I was super</font>

1295
00:43:12,180 --> 00:43:15,690
grateful<font color="#CCCCCC"> he</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> give</font><font color="#E5E5E5"> really good talk</font>

1296
00:43:13,830 --> 00:43:17,549
<font color="#CCCCCC">about it</font><font color="#E5E5E5"> Michael</font><font color="#CCCCCC"> I'd go for writing</font>

1297
00:43:15,690 --> 00:43:18,900
<font color="#CCCCCC">reversal like if he didn't do that</font><font color="#E5E5E5"> I</font>

1298
00:43:17,550 --> 00:43:19,980
would<font color="#E5E5E5"> have had to write the B compiler</font>

1299
00:43:18,900 --> 00:43:21,720
and<font color="#E5E5E5"> that would have made</font><font color="#CCCCCC"> me really sad</font>

1300
00:43:19,980 --> 00:43:23,520
<font color="#CCCCCC">I'm shouting out the wrong conference</font><font color="#E5E5E5"> in</font>

1301
00:43:21,720 --> 00:43:26,509
my slides which is really embarrassing

1302
00:43:23,520 --> 00:43:28,830
<font color="#CCCCCC">I up pretty badly sorry</font><font color="#E5E5E5"> Sylvia</font>

1303
00:43:26,510 --> 00:43:30,510
<font color="#E5E5E5">but really thinks these sites</font><font color="#CCCCCC"> are having</font>

1304
00:43:28,830 --> 00:43:34,049
me I obviously<font color="#CCCCCC"> spoke about this at</font>

1305
00:43:30,510 --> 00:43:35,250
<font color="#CCCCCC">troopas once and Dominic</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> just</font>

1306
00:43:34,050 --> 00:43:36,660
didn't update<font color="#CCCCCC"> the slide because it was</font>

1307
00:43:35,250 --> 00:43:38,849
towards<font color="#CCCCCC"> the end and I didn't</font><font color="#E5E5E5"> get around</font>

1308
00:43:36,660 --> 00:43:41,190
<font color="#CCCCCC">to reading</font><font color="#E5E5E5"> it sorry I'm so sorry</font><font color="#CCCCCC"> anyway</font>

1309
00:43:38,849 --> 00:43:42,990
if<font color="#E5E5E5"> you have any questions I'd love to</font>

1310
00:43:41,190 --> 00:43:44,820
answer<font color="#E5E5E5"> a few</font><font color="#CCCCCC"> of them</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> now or you</font>

1311
00:43:42,990 --> 00:43:46,740
can<font color="#E5E5E5"> ping</font><font color="#CCCCCC"> me on</font><font color="#E5E5E5"> Twitter or you can email</font>

1312
00:43:44,820 --> 00:43:49,230
me<font color="#E5E5E5"> at work which is where I've done this</font>

1313
00:43:46,740 --> 00:43:52,410
substantial<font color="#E5E5E5"> amount</font><font color="#CCCCCC"> of work</font><font color="#E5E5E5"> of this cool</font>

1314
00:43:49,230 --> 00:43:54,750
<font color="#CCCCCC">are there any questions we might</font><font color="#E5E5E5"> just</font>

1315
00:43:52,410 --> 00:43:58,160
have time for one question<font color="#CCCCCC"> and a selfie</font>

1316
00:43:54,750 --> 00:43:58,160
of<font color="#CCCCCC"> richer as well</font>

1317
00:44:00,250 --> 00:44:05,510
how much program execution do you need

1318
00:44:03,080 --> 00:44:08,480
to say<font color="#CCCCCC"> before you get a useful class map</font>

1319
00:44:05,510 --> 00:44:09,680
out<font color="#E5E5E5"> of Ruby sorry it was a little</font><font color="#CCCCCC"> hottie</font>

1320
00:44:08,480 --> 00:44:13,040
it was the question<font color="#E5E5E5"> how much program</font>

1321
00:44:09,680 --> 00:44:15,980
execution do you need to say yes<font color="#CCCCCC"> so like</font>

1322
00:44:13,040 --> 00:44:19,130
the answer is like maybe none maybe all

1323
00:44:15,980 --> 00:44:23,030
<font color="#CCCCCC">of it</font><font color="#E5E5E5"> sir</font><font color="#CCCCCC"> the way this fundamentally</font>

1324
00:44:19,130 --> 00:44:24,920
works<font color="#E5E5E5"> is Ruby</font><font color="#CCCCCC"> like Ruby doesn't have</font>

1325
00:44:23,030 --> 00:44:27,140
like a<font color="#E5E5E5"> separate like compile and run</font>

1326
00:44:24,920 --> 00:44:28,850
step<font color="#E5E5E5"> the way many languages through and</font>

1327
00:44:27,140 --> 00:44:30,799
this isn't like<font color="#E5E5E5"> novel to Ruby pipe</font>

1328
00:44:28,850 --> 00:44:32,839
<font color="#E5E5E5">Python works the same way but</font><font color="#CCCCCC"> like in</font>

1329
00:44:30,800 --> 00:44:34,580
actuality<font color="#E5E5E5"> when you run a ruby</font><font color="#CCCCCC"> program</font>

1330
00:44:32,840 --> 00:44:36,680
like all of the class definition method

1331
00:44:34,580 --> 00:44:38,450
definition stuff is just it's imperative

1332
00:44:36,680 --> 00:44:39,770
card<font color="#E5E5E5"> but instead</font><font color="#CCCCCC"> of like immediately</font>

1333
00:44:38,450 --> 00:44:41,210
<font color="#E5E5E5">having like side effects where like</font>

1334
00:44:39,770 --> 00:44:42,980
print something<font color="#CCCCCC"> or does arithmetic it</font>

1335
00:44:41,210 --> 00:44:46,730
defines classes inside of the local

1336
00:44:42,980 --> 00:44:49,190
hierarchy and on<font color="#CCCCCC"> Robby looks at them in</font>

1337
00:44:46,730 --> 00:44:51,020
<font color="#E5E5E5">real</font><font color="#CCCCCC"> time right so like if the program</font>

1338
00:44:49,190 --> 00:44:52,520
for<font color="#E5E5E5"> example like defines a bunch of</font>

1339
00:44:51,020 --> 00:44:54,110
<font color="#E5E5E5">classes and then does a bunch of stuff</font>

1340
00:44:52,520 --> 00:44:56,210
<font color="#CCCCCC">with</font><font color="#E5E5E5"> those</font><font color="#CCCCCC"> classes and then defines a</font>

1341
00:44:54,110 --> 00:44:57,440
bunch more<font color="#E5E5E5"> classes</font><font color="#CCCCCC"> I guess like</font><font color="#E5E5E5"> the</font>

1342
00:44:56,210 --> 00:44:59,330
<font color="#E5E5E5">concrete answer to your question is like</font>

1343
00:44:57,440 --> 00:45:00,650
<font color="#E5E5E5">in the hypothetical example if it</font>

1344
00:44:59,330 --> 00:45:02,000
crashes<font color="#E5E5E5"> in that middle part where it</font>

1345
00:45:00,650 --> 00:45:03,440
<font color="#E5E5E5">interacts with the first set of classes</font>

1346
00:45:02,000 --> 00:45:04,760
<font color="#CCCCCC">you weren't good to see anything</font><font color="#E5E5E5"> about</font>

1347
00:45:03,440 --> 00:45:07,940
the second set because they were never

1348
00:45:04,760 --> 00:45:09,950
defined but<font color="#E5E5E5"> you also like if you're</font>

1349
00:45:07,940 --> 00:45:12,230
asking do you<font color="#E5E5E5"> need to exercise the code</font>

1350
00:45:09,950 --> 00:45:14,149
in those<font color="#E5E5E5"> classes in order to get this</font>

1351
00:45:12,230 --> 00:45:16,130
source of them the answer is<font color="#CCCCCC"> not as soon</font>

1352
00:45:14,150 --> 00:45:17,600
as they're defined<font color="#E5E5E5"> like</font><font color="#CCCCCC"> on row B has</font>

1353
00:45:16,130 --> 00:45:20,030
looked at them it's like figured them

1354
00:45:17,600 --> 00:45:22,700
out<font color="#E5E5E5"> and you will get to look at them so</font>

1355
00:45:20,030 --> 00:45:24,020
like the ideal case is<font color="#E5E5E5"> that you can load</font>

1356
00:45:22,700 --> 00:45:27,859
all of<font color="#E5E5E5"> the card without ever actually</font>

1357
00:45:24,020 --> 00:45:29,300
like in the I guess like web application

1358
00:45:27,860 --> 00:45:30,410
is<font color="#CCCCCC"> a service</font><font color="#E5E5E5"> behind your file</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> like</font>

1359
00:45:29,300 --> 00:45:31,700
if you can load all<font color="#E5E5E5"> the card without</font>

1360
00:45:30,410 --> 00:45:32,899
starting<font color="#CCCCCC"> the</font><font color="#E5E5E5"> web server it's great</font>

1361
00:45:31,700 --> 00:45:34,730
because you<font color="#E5E5E5"> want to get like debug logs</font>

1362
00:45:32,900 --> 00:45:37,460
<font color="#E5E5E5">in amongst</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> source for example is</font>

1363
00:45:34,730 --> 00:45:38,810
<font color="#E5E5E5">that it's your question suite I think</font>

1364
00:45:37,460 --> 00:45:40,730
there's time for<font color="#E5E5E5"> that</font><font color="#CCCCCC"> Sophie</font><font color="#E5E5E5"> that you</font>

1365
00:45:38,810 --> 00:45:46,240
wanted at the<font color="#E5E5E5"> beginning of you if you</font><font color="#CCCCCC"> so</font>

1366
00:45:40,730 --> 00:45:46,240
<font color="#CCCCCC">watch</font><font color="#E5E5E5"> yeah there is today's a good day</font>

1367
00:45:46,510 --> 00:45:51,310
<font color="#CCCCCC">alright everyone</font><font color="#E5E5E5"> smile because I'll know</font>

1368
00:45:48,890 --> 00:45:51,310
if you're<font color="#E5E5E5"> not</font>

1369
00:45:53,400 --> 00:45:58,300
<font color="#E5E5E5">rude</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right thank you all</font><font color="#CCCCCC"> so much</font>

1370
00:45:55,990 --> 00:46:03,269
let's thank rich I for a great tool

1371
00:45:58,300 --> 00:46:03,269
[Applause]

