1
00:00:02,590 --> 00:00:07,569
but for now we have Martin fron who's

2
00:00:05,800 --> 00:00:09,520
going to give a talk on the fresh smell

3
00:00:07,569 --> 00:00:14,639
of rants and copies so can we please

4
00:00:09,520 --> 00:00:14,639
welcome Martin to the stage thank you

5
00:00:15,420 --> 00:00:20,349
welcome everybody to my talk this is the

6
00:00:18,400 --> 00:00:23,470
last talk of a day it has been a long

7
00:00:20,349 --> 00:00:26,230
day so I'm here to entertain you a bit

8
00:00:23,470 --> 00:00:28,900
and what could be more entertaining than

9
00:00:26,230 --> 00:00:32,320
a live demo that could possibly fail

10
00:00:28,900 --> 00:00:36,400
right so let's dive into the

11
00:00:32,320 --> 00:00:39,340
presentation so Who am I actually I work

12
00:00:36,400 --> 00:00:42,670
as a security researcher at security

13
00:00:39,340 --> 00:00:45,760
vendor Avast and to be honest this talk

14
00:00:42,670 --> 00:00:49,510
is not my area of expertise it's more

15
00:00:45,760 --> 00:00:54,879
like a personal story because I love

16
00:00:49,510 --> 00:00:57,099
coffee you probably seen this that's

17
00:00:54,880 --> 00:01:03,340
exactly the moment when you want to cry

18
00:00:57,100 --> 00:01:05,619
right this is a run somewhere and it's a

19
00:01:03,340 --> 00:01:08,859
well-known and big strain or run

20
00:01:05,619 --> 00:01:10,960
somewhere called wanna cry and you you

21
00:01:08,859 --> 00:01:12,729
can easily spot what's wrong with your

22
00:01:10,960 --> 00:01:16,178
computer right because if you see this

23
00:01:12,729 --> 00:01:19,719
you are doomed but what about devices

24
00:01:16,179 --> 00:01:22,689
that doesn't have any screen or keyboard

25
00:01:19,719 --> 00:01:25,928
like IOT devices there is a running joke

26
00:01:22,689 --> 00:01:31,449
that the s in IOT stands for security

27
00:01:25,929 --> 00:01:36,039
and we will dive more into how bad the

28
00:01:31,450 --> 00:01:39,399
situation is right so as I said I'm a

29
00:01:36,039 --> 00:01:41,560
coffee addict I love coffee so let me

30
00:01:39,399 --> 00:01:46,659
ask you a question how many of you like

31
00:01:41,560 --> 00:01:49,659
coffee okay how many of you can't live

32
00:01:46,659 --> 00:01:51,700
without the coffee we are developers

33
00:01:49,659 --> 00:01:55,359
right most of us IT persons

34
00:01:51,700 --> 00:01:57,880
okay so what do you think what happens

35
00:01:55,359 --> 00:02:04,320
when you deny a developer a decent cup

36
00:01:57,880 --> 00:02:07,350
of coffee this could happen right

37
00:02:04,320 --> 00:02:10,440
it could be it could be a crisis for the

38
00:02:07,350 --> 00:02:13,260
whole industry right what what about

39
00:02:10,440 --> 00:02:17,640
like developers without coffee that's

40
00:02:13,260 --> 00:02:21,450
gonna be disaster so that was the

41
00:02:17,640 --> 00:02:24,600
initial impulse because I'm like I can't

42
00:02:21,450 --> 00:02:26,730
live without the coffee so my idea was

43
00:02:24,600 --> 00:02:29,549
let's research on coffee makers

44
00:02:26,730 --> 00:02:32,489
particularly on smart coffee makers

45
00:02:29,550 --> 00:02:35,600
because these devices are connected to

46
00:02:32,490 --> 00:02:39,270
the Internet to our Wi-Fi networks and

47
00:02:35,600 --> 00:02:44,040
unfortunately it's quite easy to misuse

48
00:02:39,270 --> 00:02:48,150
them and I pick this one

49
00:02:44,040 --> 00:02:50,910
it's called small coffee maker and the

50
00:02:48,150 --> 00:02:53,730
smart functionality here is basically

51
00:02:50,910 --> 00:02:56,040
just to be able to control the coffee

52
00:02:53,730 --> 00:02:58,709
maker using your mobile application so

53
00:02:56,040 --> 00:03:01,429
you have your coffee already in the

54
00:02:58,709 --> 00:03:05,070
kitchen before you get out of a bed

55
00:03:01,430 --> 00:03:07,050
that's as simple as it is it's a really

56
00:03:05,070 --> 00:03:11,340
simple device it has like four buttons

57
00:03:07,050 --> 00:03:14,790
small display nothing really fancy on a

58
00:03:11,340 --> 00:03:16,890
technical side it when you take the

59
00:03:14,790 --> 00:03:19,739
device out of a box it creates its own

60
00:03:16,890 --> 00:03:20,609
Wi-Fi network for setup which is called

61
00:03:19,739 --> 00:03:25,320
smarter coffee

62
00:03:20,610 --> 00:03:28,320
xx and these two X stand for the last

63
00:03:25,320 --> 00:03:30,690
byte of the MAC address so that's kind

64
00:03:28,320 --> 00:03:35,010
of a unique identification of the Wi-Fi

65
00:03:30,690 --> 00:03:39,540
for set up it listens on the porch TCP

66
00:03:35,010 --> 00:03:42,810
to old a1 that's the only port which is

67
00:03:39,540 --> 00:03:44,970
open and it uses a very simple binary

68
00:03:42,810 --> 00:03:46,950
protocol we don't know how Turing

69
00:03:44,970 --> 00:03:51,170
authentication no authorization

70
00:03:46,950 --> 00:03:53,640
whatsoever so I was quite curious like

71
00:03:51,170 --> 00:03:55,859
what can you do

72
00:03:53,640 --> 00:03:58,320
even without like connecting the coffee

73
00:03:55,860 --> 00:03:59,850
maker into your own network because

74
00:03:58,320 --> 00:04:02,489
that's the purpose of this set up

75
00:03:59,850 --> 00:04:06,780
network right and it turned out that you

76
00:04:02,489 --> 00:04:10,380
can do anything it comes with the

77
00:04:06,780 --> 00:04:11,220
company application as a set for iOS for

78
00:04:10,380 --> 00:04:14,190
Android as well

79
00:04:11,220 --> 00:04:16,769
and it's pretty simple you can prepare

80
00:04:14,190 --> 00:04:17,670
your own formula for a coffee like the

81
00:04:16,769 --> 00:04:20,250
strength number

82
00:04:17,670 --> 00:04:22,650
of cups and you can brew the coffee from

83
00:04:20,250 --> 00:04:25,740
the application so that's as simple as

84
00:04:22,650 --> 00:04:27,690
as it looks like in terms of a protocol

85
00:04:25,740 --> 00:04:30,060
this protocol has been already

86
00:04:27,690 --> 00:04:33,780
documented on the Internet to do some

87
00:04:30,060 --> 00:04:35,460
extent and it's really really simple so

88
00:04:33,780 --> 00:04:37,770
the whole protocol cons is basically a

89
00:04:35,460 --> 00:04:40,739
few bytes the first byte is a comment

90
00:04:37,770 --> 00:04:42,630
then followed by n bytes depending on

91
00:04:40,740 --> 00:04:47,640
the comment and then there is like a

92
00:04:42,630 --> 00:04:49,800
terminator which is 7 a hex always the

93
00:04:47,640 --> 00:04:51,990
response is very simple as well so the

94
00:04:49,800 --> 00:04:54,930
response basically starts with the

95
00:04:51,990 --> 00:04:58,040
response type then followed by and data

96
00:04:54,930 --> 00:05:01,140
and bytes of data again and a terminator

97
00:04:58,040 --> 00:05:04,920
so in case the response type is a just a

98
00:05:01,140 --> 00:05:07,800
neck or acknowledgment response the

99
00:05:04,920 --> 00:05:11,850
response type is always 3 so that's the

100
00:05:07,800 --> 00:05:14,370
whole protocol as I said it has been

101
00:05:11,850 --> 00:05:17,550
documented on the internet so you can

102
00:05:14,370 --> 00:05:20,130
find for example this comment which one

103
00:05:17,550 --> 00:05:22,590
sent to a coffee maker it brews you a

104
00:05:20,130 --> 00:05:24,780
nice cup of coffee with the default

105
00:05:22,590 --> 00:05:30,060
settings of the coffee maker so just

106
00:05:24,780 --> 00:05:32,609
this 2 bytes to port 20 81 there is also

107
00:05:30,060 --> 00:05:36,480
one comment where specific moment which

108
00:05:32,610 --> 00:05:40,140
is like documented truth only some

109
00:05:36,480 --> 00:05:43,410
extent and this command is 6d what it

110
00:05:40,140 --> 00:05:47,039
does it turns the coffeemaker into an

111
00:05:43,410 --> 00:05:48,270
update mode and it looks like this so

112
00:05:47,040 --> 00:05:50,250
once you send this command the

113
00:05:48,270 --> 00:05:52,260
coffeemaker switches itself into a

114
00:05:50,250 --> 00:05:55,890
update mode and waits for another

115
00:05:52,260 --> 00:05:58,920
comments it turned out that all the

116
00:05:55,890 --> 00:06:01,680
documented comments didn't work in this

117
00:05:58,920 --> 00:06:04,260
mode and I was quite a puzzled what's

118
00:06:01,680 --> 00:06:06,660
like what's going on what's how how

119
00:06:04,260 --> 00:06:11,310
should I proceed to to get to know how

120
00:06:06,660 --> 00:06:13,010
the update process works so I try to use

121
00:06:11,310 --> 00:06:16,020
the application because the application

122
00:06:13,010 --> 00:06:17,940
is able to update a firmware or the on

123
00:06:16,020 --> 00:06:20,640
the coffeemaker the problem with the

124
00:06:17,940 --> 00:06:23,969
application or with my coffeemaker was

125
00:06:20,640 --> 00:06:28,740
that the firmware was up-to-date so that

126
00:06:23,970 --> 00:06:30,159
that wasn't the way to go but something

127
00:06:28,740 --> 00:06:32,259
has changed

128
00:06:30,159 --> 00:06:34,360
when the coffee maker is an update mode

129
00:06:32,259 --> 00:06:37,900
it changes its Wi-Fi network into

130
00:06:34,360 --> 00:06:40,199
smarter coffee update xx again exact

131
00:06:37,900 --> 00:06:43,719
stands for last byte of the MAC address

132
00:06:40,199 --> 00:06:47,169
so I've tried everything the only open

133
00:06:43,719 --> 00:06:48,998
port again is 2081 I tried everything to

134
00:06:47,169 --> 00:06:52,389
connect the coffee makers and all the

135
00:06:48,999 --> 00:06:57,039
commands to fast the protocol nothing

136
00:06:52,389 --> 00:06:59,619
basically worked so how you should

137
00:06:57,039 --> 00:07:02,889
approach such a situation there are

138
00:06:59,619 --> 00:07:04,839
actually the easiest way is to get the

139
00:07:02,889 --> 00:07:08,789
firmware because by reverse engineering

140
00:07:04,839 --> 00:07:11,469
the firmware you can get the three C's

141
00:07:08,789 --> 00:07:14,229
what's a description of the protocol and

142
00:07:11,469 --> 00:07:16,120
exactly how it works so how can you get

143
00:07:14,229 --> 00:07:20,008
the firmware there are again several

144
00:07:16,120 --> 00:07:23,680
options one pretty obvious google it

145
00:07:20,009 --> 00:07:25,569
that didn't work in this case there is

146
00:07:23,680 --> 00:07:28,389
no firmware for this coffee maker on the

147
00:07:25,569 --> 00:07:30,279
internet you can snip the traffic

148
00:07:28,389 --> 00:07:32,680
between the company application and the

149
00:07:30,279 --> 00:07:36,180
coffee maker that didn't work as well

150
00:07:32,680 --> 00:07:38,680
because the coffeemaker was up to date

151
00:07:36,180 --> 00:07:41,139
next option is to dismount the device

152
00:07:38,680 --> 00:07:44,620
and download the firmware directly from

153
00:07:41,139 --> 00:07:49,419
the CPU or from the chip that's kind of

154
00:07:44,620 --> 00:07:53,409
a tedious process and I would like to

155
00:07:49,419 --> 00:07:55,448
avoid that so the last option is to

156
00:07:53,409 --> 00:07:58,058
reverse the company application itself

157
00:07:55,449 --> 00:08:01,269
and because it's Android and it's an MP

158
00:07:58,059 --> 00:08:03,129
apk it's pretty easy to do so and it

159
00:08:01,269 --> 00:08:06,459
turns out when you open the application

160
00:08:03,129 --> 00:08:09,909
itself it has two very interesting files

161
00:08:06,459 --> 00:08:10,449
in it in its assets it has like binary

162
00:08:09,909 --> 00:08:13,089
file

163
00:08:10,449 --> 00:08:14,919
kofi dirt bin and binary file cattle dog

164
00:08:13,089 --> 00:08:18,279
bin it's turned out that these are

165
00:08:14,919 --> 00:08:20,919
basically a firmware images for all two

166
00:08:18,279 --> 00:08:25,080
products that the company does which is

167
00:08:20,919 --> 00:08:27,789
so smart coffee maker and a smart kettle

168
00:08:25,080 --> 00:08:31,229
so when you open the file

169
00:08:27,789 --> 00:08:38,049
it's obviously obviously an unencrypted

170
00:08:31,229 --> 00:08:41,979
anybody knows what these strings are so

171
00:08:38,049 --> 00:08:43,089
our typical 8080 common so used for

172
00:08:41,979 --> 00:08:46,210
modems

173
00:08:43,090 --> 00:08:48,430
in this particular case it's a it's

174
00:08:46,210 --> 00:08:52,330
basically common strings or these are

175
00:08:48,430 --> 00:08:55,079
common strings for for esp8266 chip

176
00:08:52,330 --> 00:08:59,020
which is the Wi-Fi modem which is

177
00:08:55,080 --> 00:09:01,600
probably or at this time I really don't

178
00:08:59,020 --> 00:09:03,880
know what what's inside which is

179
00:09:01,600 --> 00:09:06,760
probably inside the coffee maker I guess

180
00:09:03,880 --> 00:09:08,800
most of you know the esp8266 if you are

181
00:09:06,760 --> 00:09:15,160
tinkering with the IOT is the most

182
00:09:08,800 --> 00:09:17,170
common Wi-Fi modem okay so I the

183
00:09:15,160 --> 00:09:20,650
compiled the company and application

184
00:09:17,170 --> 00:09:23,589
which basically proved my point that the

185
00:09:20,650 --> 00:09:26,230
update process is same for both products

186
00:09:23,590 --> 00:09:29,290
and it only depends on a on a type of

187
00:09:26,230 --> 00:09:31,570
the device that's being read from from

188
00:09:29,290 --> 00:09:33,459
the device itself so it serves either

189
00:09:31,570 --> 00:09:36,640
the binary coffee that being or binary

190
00:09:33,460 --> 00:09:40,060
file capital or been depending on a type

191
00:09:36,640 --> 00:09:43,240
of a device so let's have a look into a

192
00:09:40,060 --> 00:09:46,420
binary file coffee road bin like if you

193
00:09:43,240 --> 00:09:48,190
have a firmware image you need like the

194
00:09:46,420 --> 00:09:50,939
next step is probably to get to know

195
00:09:48,190 --> 00:09:53,740
what architecture is it intended for

196
00:09:50,940 --> 00:09:56,440
again you have several options you can

197
00:09:53,740 --> 00:09:58,600
you can guess you can use some auto

198
00:09:56,440 --> 00:10:02,920
detection features for example for

199
00:09:58,600 --> 00:10:06,700
either pro but for me because I like to

200
00:10:02,920 --> 00:10:09,370
dismount devices and eventually putting

201
00:10:06,700 --> 00:10:11,650
them together I dismounted a coffee

202
00:10:09,370 --> 00:10:13,270
maker that was the easiest option for me

203
00:10:11,650 --> 00:10:14,709
so this is the whole coffee maker

204
00:10:13,270 --> 00:10:16,780
basically this is the whole logic of the

205
00:10:14,710 --> 00:10:21,060
coffee maker you can see there the

206
00:10:16,780 --> 00:10:23,709
esp8266 chip which is the modem and

207
00:10:21,060 --> 00:10:26,250
after a while I basically identified

208
00:10:23,710 --> 00:10:31,150
like four main components on the board

209
00:10:26,250 --> 00:10:34,510
the one is as I said esp8266 then the

210
00:10:31,150 --> 00:10:38,560
second the number two is basically ARM

211
00:10:34,510 --> 00:10:40,780
Cortex and 0 which turned out it's a

212
00:10:38,560 --> 00:10:43,989
brain of the whole coffee maker and it's

213
00:10:40,780 --> 00:10:46,350
kind of a funny because this chip has

214
00:10:43,990 --> 00:10:50,830
like 64 kilobytes of memory and

215
00:10:46,350 --> 00:10:53,350
comparing to es pH 266 it's way less

216
00:10:50,830 --> 00:10:55,990
powerful it's like 10 times or 12 times

217
00:10:53,350 --> 00:10:56,770
less powerful than number actual Wi-Fi

218
00:10:55,990 --> 00:11:00,550
modem

219
00:10:56,770 --> 00:11:04,649
but that's how it works there are also

220
00:11:00,550 --> 00:11:08,349
like four debug pins or debug headers

221
00:11:04,649 --> 00:11:10,540
with the ports used for programming and

222
00:11:08,350 --> 00:11:12,490
also for communication with the modem so

223
00:11:10,540 --> 00:11:14,380
you can basically using these pins you

224
00:11:12,490 --> 00:11:18,970
can tap into the communication between

225
00:11:14,380 --> 00:11:21,250
the modem and the main CPU ok so the

226
00:11:18,970 --> 00:11:27,870
next logical step is to get a data sheet

227
00:11:21,250 --> 00:11:27,870
for a CPU that's how it works right and

228
00:11:28,050 --> 00:11:35,469
because I already knew what type of CPU

229
00:11:31,000 --> 00:11:40,029
is inside I was able to to load the file

230
00:11:35,470 --> 00:11:43,020
into either and started to decompiling

231
00:11:40,029 --> 00:11:46,420
or reverse-engineering the whole thing

232
00:11:43,020 --> 00:11:48,970
usually the easiest way how to reverse

233
00:11:46,420 --> 00:11:51,880
engineer some firmware is start with the

234
00:11:48,970 --> 00:11:55,209
strings because that gives you a pretty

235
00:11:51,880 --> 00:11:58,540
good clue what what these strings are

236
00:11:55,209 --> 00:12:01,569
used for and by referencing them to a

237
00:11:58,540 --> 00:12:06,010
code which uses them you can pretty fast

238
00:12:01,570 --> 00:12:08,589
get to main functions and it turned out

239
00:12:06,010 --> 00:12:09,850
this is probably the most complex and

240
00:12:08,589 --> 00:12:11,980
the main function of the whole

241
00:12:09,850 --> 00:12:15,430
coffeemaker it's a big switch and that

242
00:12:11,980 --> 00:12:16,810
switch is basically the whole handler

243
00:12:15,430 --> 00:12:22,239
for all the commands that the

244
00:12:16,810 --> 00:12:24,130
coffeemaker is able to to run by

245
00:12:22,240 --> 00:12:27,760
proceeding further this is basically

246
00:12:24,130 --> 00:12:30,520
just like close up of this function so

247
00:12:27,760 --> 00:12:34,000
you can see there are like already known

248
00:12:30,520 --> 00:12:38,170
comments for example 6d and I'm not sure

249
00:12:34,000 --> 00:12:44,980
if this is the 6d comment which is

250
00:12:38,170 --> 00:12:49,120
basically the star of the update ok so

251
00:12:44,980 --> 00:12:53,200
let's fast forward a bit after 5 days I

252
00:12:49,120 --> 00:12:55,660
bet I was basically able to to reverse

253
00:12:53,200 --> 00:12:58,329
engineer the whole firmware and get all

254
00:12:55,660 --> 00:13:00,880
the main functions like it's easy

255
00:12:58,329 --> 00:13:03,790
because the firmware itself is like 49

256
00:13:00,880 --> 00:13:06,699
kilobytes so it's pretty small it's

257
00:13:03,790 --> 00:13:09,339
really dumb device there is no no fancy

258
00:13:06,699 --> 00:13:14,000
OS nothing like this

259
00:13:09,340 --> 00:13:16,100
and I came up with this architecture or

260
00:13:14,000 --> 00:13:17,450
diagram of the coffee maker so you can

261
00:13:16,100 --> 00:13:22,100
see it's pretty simple

262
00:13:17,450 --> 00:13:24,800
very few detectors basically wired into

263
00:13:22,100 --> 00:13:27,560
into the i/o pins of the CPU directly

264
00:13:24,800 --> 00:13:29,089
which is like missing carafe detector so

265
00:13:27,560 --> 00:13:32,449
when you when you take out the carafe

266
00:13:29,090 --> 00:13:35,180
the coffeemaker basically doesn't allow

267
00:13:32,450 --> 00:13:39,290
you to coffee then there is a grinder

268
00:13:35,180 --> 00:13:42,979
motor heating element hotbed like it's

269
00:13:39,290 --> 00:13:45,020
pretty simple control buttons the the

270
00:13:42,980 --> 00:13:47,570
only interesting part would be a coffee

271
00:13:45,020 --> 00:13:50,240
flap which is basically the flat between

272
00:13:47,570 --> 00:13:52,790
the grinder and the filter which opens

273
00:13:50,240 --> 00:13:56,630
at the moment when when the coffee is

274
00:13:52,790 --> 00:14:00,230
ground so I'm three what are a lot of

275
00:13:56,630 --> 00:14:04,310
sensors if you if you look at the base

276
00:14:00,230 --> 00:14:07,340
picture you can see there is no security

277
00:14:04,310 --> 00:14:09,109
measure in hardware so everything every

278
00:14:07,340 --> 00:14:11,780
security measure in this coffee maker is

279
00:14:09,110 --> 00:14:14,900
in software so once you change the

280
00:14:11,780 --> 00:14:17,360
firmware once you patch the firmware you

281
00:14:14,900 --> 00:14:20,300
can potentially create a really

282
00:14:17,360 --> 00:14:23,180
dangerous machine which overheats

283
00:14:20,300 --> 00:14:25,849
which runs the grinder forever for

284
00:14:23,180 --> 00:14:32,000
example which basically runs the coffee

285
00:14:25,850 --> 00:14:33,920
forever right after a while after

286
00:14:32,000 --> 00:14:37,010
reversing the component application I

287
00:14:33,920 --> 00:14:39,469
was also able to identify the exact

288
00:14:37,010 --> 00:14:42,319
process of the update and it turned out

289
00:14:39,470 --> 00:14:45,860
it's very simple again no authorization

290
00:14:42,320 --> 00:14:49,580
no authentication no signature the only

291
00:14:45,860 --> 00:14:53,870
thing is the CRC at the end so it works

292
00:14:49,580 --> 00:14:55,940
basically like this so once you switch

293
00:14:53,870 --> 00:14:58,850
the coffeemaker in to update mode it

294
00:14:55,940 --> 00:15:01,000
changes the Wi-Fi network waits for a

295
00:14:58,850 --> 00:15:04,880
start of the update and then

296
00:15:01,000 --> 00:15:05,630
block-by-block each of size two five six

297
00:15:04,880 --> 00:15:08,260
bytes

298
00:15:05,630 --> 00:15:13,040
basically it uploads the new firmware

299
00:15:08,260 --> 00:15:15,860
into a coffee maker following by CRC and

300
00:15:13,040 --> 00:15:17,930
the command which which signal to a

301
00:15:15,860 --> 00:15:22,440
coffee maker that that's the end of

302
00:15:17,930 --> 00:15:23,969
update so it's pretty simple so if

303
00:15:22,440 --> 00:15:26,610
you have the knowledge about how the

304
00:15:23,970 --> 00:15:30,960
coffeemaker works how the update process

305
00:15:26,610 --> 00:15:34,140
takes place the easiest and next logical

306
00:15:30,960 --> 00:15:37,860
step is to try to update the firmware

307
00:15:34,140 --> 00:15:48,210
right so this is the first attempt I

308
00:15:37,860 --> 00:15:50,190
made updating the firmware ok

309
00:15:48,210 --> 00:15:53,430
to be honest I've cheated in this case

310
00:15:50,190 --> 00:15:55,920
because I've only replaced the image

311
00:15:53,430 --> 00:15:59,430
which says that there is no carafe

312
00:15:55,920 --> 00:16:01,260
because there is no carafe but and it

313
00:15:59,430 --> 00:16:02,760
also turned out that there is no font in

314
00:16:01,260 --> 00:16:05,400
a coffee maker so everything you see

315
00:16:02,760 --> 00:16:09,240
it's an image so there is like there are

316
00:16:05,400 --> 00:16:10,770
like 12 images 4 cups start medium beans

317
00:16:09,240 --> 00:16:13,530
everything is basically just the image

318
00:16:10,770 --> 00:16:19,050
so it's pretty easy easy to tinker with

319
00:16:13,530 --> 00:16:23,189
that ok so the next logical step is to

320
00:16:19,050 --> 00:16:25,140
create something more complex right so

321
00:16:23,190 --> 00:16:27,150
I've created a payroll because it turns

322
00:16:25,140 --> 00:16:31,230
out there is no space at the end of the

323
00:16:27,150 --> 00:16:34,140
firmware which is freely available and

324
00:16:31,230 --> 00:16:37,070
could be used so I replace the original

325
00:16:34,140 --> 00:16:40,980
handler for a join to Wi-Fi comment

326
00:16:37,070 --> 00:16:43,260
which is kind of you know like

327
00:16:40,980 --> 00:16:47,910
interesting so you you basically create

328
00:16:43,260 --> 00:16:51,030
a malicious payload that activates on a

329
00:16:47,910 --> 00:16:57,660
try of the user to join the coffeemaker

330
00:16:51,030 --> 00:17:01,199
into his or her Network ok so that's a

331
00:16:57,660 --> 00:17:05,099
time for a demo fingers crossed and I

332
00:17:01,200 --> 00:17:07,370
will show you what I've created in five

333
00:17:05,099 --> 00:17:07,369
days

334
00:17:10,150 --> 00:17:16,130
so if everything works you can see the

335
00:17:13,760 --> 00:17:20,510
display of the coffee maker here so

336
00:17:16,130 --> 00:17:23,990
that's my hand and let's upload the

337
00:17:20,510 --> 00:17:30,520
payload I know if you can see the

338
00:17:23,990 --> 00:17:32,960
terminal is it readable so I've made a

339
00:17:30,520 --> 00:17:45,220
little application for that because

340
00:17:32,960 --> 00:17:45,220
that's the tedious process okay I need

341
00:17:46,929 --> 00:17:52,429
so the first stage is to switch the

342
00:17:49,880 --> 00:17:56,440
coffee maker into a update mode which is

343
00:17:52,429 --> 00:17:56,440
basically by sending to these two bytes

344
00:17:57,910 --> 00:18:03,650
ok that was pretty quick so now the

345
00:18:01,220 --> 00:18:07,730
coffeemaker is in update mode but Wi-Fi

346
00:18:03,650 --> 00:18:09,800
changed and it right likes comment so

347
00:18:07,730 --> 00:18:13,270
the next logical step is to upload the

348
00:18:09,800 --> 00:18:13,270
payload and the modified firmware

349
00:18:22,580 --> 00:18:28,840
and sometimes take a while depending on

350
00:18:26,360 --> 00:18:28,840
the Wi-Fi

351
00:18:40,270 --> 00:18:48,429
okay so that that's exactly the case if

352
00:18:44,620 --> 00:18:50,620
something goes wrong there we go

353
00:18:48,429 --> 00:18:53,050
update completed it should restart

354
00:18:50,620 --> 00:18:56,020
automatically as you seen there is no

355
00:18:53,050 --> 00:18:59,129
interaction from the user

356
00:18:56,020 --> 00:19:02,620
needed so everything was just automatic

357
00:18:59,130 --> 00:19:04,870
Ottoman so now the coffeemaker is tears

358
00:19:02,620 --> 00:19:09,280
itself and it contains the malicious

359
00:19:04,870 --> 00:19:13,449
payload so the third stage which I have

360
00:19:09,280 --> 00:19:16,480
here as a setting on fire is basically

361
00:19:13,450 --> 00:19:18,580
to run the command or to send the

362
00:19:16,480 --> 00:19:23,020
command to a coffeemaker to join to a

363
00:19:18,580 --> 00:19:25,090
Wi-Fi and this is the outcome again

364
00:19:23,020 --> 00:19:27,879
thanks a while because it needs to

365
00:19:25,090 --> 00:19:32,370
change the Wi-Fi network again it needs

366
00:19:27,880 --> 00:19:32,370
to connect to the Wi-Fi okay

367
00:19:35,760 --> 00:19:51,670
and this is how it works and

368
00:19:46,250 --> 00:19:55,610
if you if you wait a while it gets mad I

369
00:19:51,670 --> 00:20:01,850
think it's like 10 repetition of these

370
00:19:55,610 --> 00:20:04,580
two images so what what it's now doing

371
00:20:01,850 --> 00:20:06,980
is heating up the element but because

372
00:20:04,580 --> 00:20:09,320
there is no water you can't see it and

373
00:20:06,980 --> 00:20:12,740
now it runs the grinder and runs the

374
00:20:09,320 --> 00:20:17,110
Grider for forever basically so you

375
00:20:12,740 --> 00:20:17,110
can't use your coffeemaker anymore and

376
00:20:17,890 --> 00:20:22,779
so

377
00:20:19,850 --> 00:20:22,779
smells good

378
00:20:24,250 --> 00:20:31,539
so the only thing I can do is unplug the

379
00:20:27,429 --> 00:20:34,419
coffeemaker and the other thing is that

380
00:20:31,539 --> 00:20:36,789
you can even change the comment or

381
00:20:34,419 --> 00:20:39,490
overwrite or patch the comment that

382
00:20:36,789 --> 00:20:42,129
basically says update so in that case

383
00:20:39,490 --> 00:20:44,799
you break the device and unless someone

384
00:20:42,130 --> 00:20:46,960
like take it apart and replace the

385
00:20:44,799 --> 00:20:50,639
firmware using the debug port or the

386
00:20:46,960 --> 00:21:01,510
programming port it won't work anymore

387
00:20:50,640 --> 00:21:04,770
okay so that went pretty smooth actually

388
00:21:01,510 --> 00:21:08,289
this is in case the demo won't work and

389
00:21:04,770 --> 00:21:12,158
I can like quickly show you

390
00:21:08,289 --> 00:21:27,940
oops that wasn't what I wanted to show

391
00:21:12,159 --> 00:21:33,460
you okay - that was too easy right come

392
00:21:27,940 --> 00:21:42,030
on show me okay let's fast-forward to

393
00:21:33,460 --> 00:21:42,030
the part which is here

394
00:21:46,120 --> 00:21:54,320
let's hope it's going to work if I fast

395
00:21:49,940 --> 00:21:58,100
forward it has a nice steam effect when

396
00:21:54,320 --> 00:22:00,590
the water starts dripping through the

397
00:21:58,100 --> 00:22:10,299
coffeemaker without the car off so it's

398
00:22:00,590 --> 00:22:19,939
just to entertain you even more okay so

399
00:22:10,299 --> 00:22:22,100
this is just another case okay so let's

400
00:22:19,940 --> 00:22:26,120
discuss the attack vector how you can

401
00:22:22,100 --> 00:22:27,830
misuse this actually this device I don't

402
00:22:26,120 --> 00:22:30,320
know if you recognize that if if you

403
00:22:27,830 --> 00:22:32,960
have a kids and even the Lego Mindstorms

404
00:22:30,320 --> 00:22:35,870
that's a smart brick which basically

405
00:22:32,960 --> 00:22:38,690
powers the whole way go I was able to

406
00:22:35,870 --> 00:22:41,689
create this version of uploader into

407
00:22:38,690 --> 00:22:45,130
that brick so you can easily visit your

408
00:22:41,690 --> 00:22:50,149
neighbor who who has this coffee maker

409
00:22:45,130 --> 00:22:52,850
so obvious there are like few versions

410
00:22:50,149 --> 00:22:55,039
of attack vectors so the first one is

411
00:22:52,850 --> 00:22:57,949
many in the middle attack because in the

412
00:22:55,039 --> 00:23:00,649
new firmware they actually edit a

413
00:22:57,950 --> 00:23:03,950
functionality that needs the user to

414
00:23:00,649 --> 00:23:05,330
press update I'm a coffee maker but if

415
00:23:03,950 --> 00:23:07,610
you think about it because there is no

416
00:23:05,330 --> 00:23:10,908
authorization authentication the open

417
00:23:07,610 --> 00:23:14,719
the Wi-Fi is basically opened it's

418
00:23:10,909 --> 00:23:18,019
pretty easy to do am an intimate man in

419
00:23:14,720 --> 00:23:20,899
the middle attack and to make the

420
00:23:18,019 --> 00:23:22,970
application belief that the coffeemaker

421
00:23:20,899 --> 00:23:25,219
really needs an update and in that case

422
00:23:22,970 --> 00:23:28,700
the user will happily press update the

423
00:23:25,220 --> 00:23:31,639
coffeemaker and also press the update on

424
00:23:28,700 --> 00:23:32,830
the coffee maker itself so that's one

425
00:23:31,639 --> 00:23:35,510
possibility

426
00:23:32,830 --> 00:23:37,850
obviously the proximity proximity attack

427
00:23:35,510 --> 00:23:41,240
so you can as I said you can be like

428
00:23:37,850 --> 00:23:44,689
passing by your neighbor or a company

429
00:23:41,240 --> 00:23:46,580
because this device is also or these

430
00:23:44,690 --> 00:23:52,039
devices you can find these devices also

431
00:23:46,580 --> 00:23:53,809
in companies and that one which I want

432
00:23:52,039 --> 00:23:56,450
to show you is a social engineering

433
00:23:53,809 --> 00:23:57,760
attack that's my favorite one because it

434
00:23:56,450 --> 00:24:02,260
does

435
00:23:57,760 --> 00:24:04,870
any special equipment and then obviously

436
00:24:02,260 --> 00:24:06,700
you can for example sniff the SSID and

437
00:24:04,870 --> 00:24:10,090
the password for the network that the

438
00:24:06,700 --> 00:24:12,460
coffeemaker is being connected to and

439
00:24:10,090 --> 00:24:15,699
the social engineering attack is pretty

440
00:24:12,460 --> 00:24:17,830
simple just send the packet which starts

441
00:24:15,700 --> 00:24:19,750
the update on the coffeemaker and the

442
00:24:17,830 --> 00:24:21,250
prompt spells to a user that the

443
00:24:19,750 --> 00:24:25,900
coffeemaker needs an update and

444
00:24:21,250 --> 00:24:28,450
basically ask them to to either either

445
00:24:25,900 --> 00:24:33,400
confirm the update by pressing ok or

446
00:24:28,450 --> 00:24:37,870
pressing cancel but I've tried it on my

447
00:24:33,400 --> 00:24:40,930
wife and if you're sending the packet

448
00:24:37,870 --> 00:24:43,330
start update over and over it there is

449
00:24:40,930 --> 00:24:45,130
basically no way how we can cancel

450
00:24:43,330 --> 00:24:48,100
because if you press the cancel it

451
00:24:45,130 --> 00:24:52,870
displays again the update so after some

452
00:24:48,100 --> 00:24:56,740
try or number of tries everybody gave up

453
00:24:52,870 --> 00:24:58,449
and press the update so that's the

454
00:24:56,740 --> 00:25:01,750
simplest social engineering attack you

455
00:24:58,450 --> 00:25:05,020
can do and it turned out also that

456
00:25:01,750 --> 00:25:08,200
probably users don't really need a smart

457
00:25:05,020 --> 00:25:11,590
coffee makers because if you go to Viggo

458
00:25:08,200 --> 00:25:15,580
which is you know like the database or

459
00:25:11,590 --> 00:25:18,629
or map of all Wi-Fi networks around the

460
00:25:15,580 --> 00:25:21,669
globe you can easily find like two

461
00:25:18,630 --> 00:25:25,210
thousand and five hundred coffee makers

462
00:25:21,670 --> 00:25:27,640
with the open Wi-Fi that has that have

463
00:25:25,210 --> 00:25:31,870
been never that never have been set up

464
00:25:27,640 --> 00:25:36,580
so yes the question is if we really need

465
00:25:31,870 --> 00:25:40,659
a smart coffee maker so to conclude my

466
00:25:36,580 --> 00:25:43,240
talk the one problem with most IOT

467
00:25:40,660 --> 00:25:46,290
devices is so-called out of a box

468
00:25:43,240 --> 00:25:50,140
problem so we have a lot of IOT devices

469
00:25:46,290 --> 00:25:51,879
that just works when you when you

470
00:25:50,140 --> 00:25:54,340
basically take them out of a box and

471
00:25:51,880 --> 00:25:57,910
connect them and that's an issue because

472
00:25:54,340 --> 00:26:00,340
for example my personal experience from

473
00:25:57,910 --> 00:26:02,740
the apartment where where I moved to is

474
00:26:00,340 --> 00:26:05,320
that there was a Ethernet socket for

475
00:26:02,740 --> 00:26:07,330
Internet so I've connected my laptop and

476
00:26:05,320 --> 00:26:10,990
because I'm curious

477
00:26:07,330 --> 00:26:11,470
I was curious what's what's behind the

478
00:26:10,990 --> 00:26:13,690
walls

479
00:26:11,470 --> 00:26:15,840
I've connected to my default gateway and

480
00:26:13,690 --> 00:26:18,700
it's turned out that my default gateway

481
00:26:15,840 --> 00:26:22,870
asked me to set up the password for the

482
00:26:18,700 --> 00:26:25,570
first time and that's a problem that's a

483
00:26:22,870 --> 00:26:28,418
problem like these IOT devices like we

484
00:26:25,570 --> 00:26:32,049
we've exchanged the convenience for

485
00:26:28,419 --> 00:26:34,600
security that's a really big issue so we

486
00:26:32,049 --> 00:26:35,559
should we should really make these

487
00:26:34,600 --> 00:26:38,379
devices

488
00:26:35,559 --> 00:26:43,450
you know parable until you properly

489
00:26:38,379 --> 00:26:47,408
setup them firmware is no longer firm

490
00:26:43,450 --> 00:26:51,600
but it I think this the statement is

491
00:26:47,409 --> 00:26:54,309
valid for for some time all right and

492
00:26:51,600 --> 00:26:56,289
the other thing is you need to build the

493
00:26:54,309 --> 00:26:59,980
security for the bottom up so if you are

494
00:26:56,289 --> 00:27:03,639
planning to create any IOT device you

495
00:26:59,980 --> 00:27:05,440
should start with the secure OTA update

496
00:27:03,639 --> 00:27:08,350
first because if you have a secure

497
00:27:05,440 --> 00:27:10,240
device on a user level which with the

498
00:27:08,350 --> 00:27:13,678
generated username and password for

499
00:27:10,240 --> 00:27:17,169
example and you have a vulnerable

500
00:27:13,679 --> 00:27:20,919
firmware update process you basically

501
00:27:17,169 --> 00:27:23,320
broke the whole security and the

502
00:27:20,919 --> 00:27:26,740
question at the end is would you really

503
00:27:23,320 --> 00:27:30,220
trust any device today because this

504
00:27:26,740 --> 00:27:33,730
could be a great example of supply chain

505
00:27:30,220 --> 00:27:36,039
attack using IOT devices we've seen this

506
00:27:33,730 --> 00:27:40,480
today using a software using a

507
00:27:36,039 --> 00:27:43,179
repositories but the same thing could be

508
00:27:40,480 --> 00:27:45,789
achieved by IOT devices and the problem

509
00:27:43,179 --> 00:27:51,250
is bigger because nobody really knows

510
00:27:45,789 --> 00:27:54,639
what's inside the device ok so this talk

511
00:27:51,250 --> 00:28:01,509
is Memoriam of this device which I

512
00:27:54,639 --> 00:28:05,439
unintentionally bricked and shortly

513
00:28:01,509 --> 00:28:09,129
after this talk when I get my cup of

514
00:28:05,440 --> 00:28:10,960
coffee and some rest I will upload all

515
00:28:09,129 --> 00:28:13,209
the software you've seen and all the

516
00:28:10,960 --> 00:28:16,090
documentation for the coffee maker to

517
00:28:13,210 --> 00:28:20,860
this github repository so if you want to

518
00:28:16,090 --> 00:28:22,520
download it just in the QR code okay

519
00:28:20,860 --> 00:28:25,010
that's it

520
00:28:22,520 --> 00:28:29,180
I don't know if we have a time for any

521
00:28:25,010 --> 00:28:32,740
bonus or Q&A we can take one or two

522
00:28:29,180 --> 00:28:32,740
questions yep

523
00:28:33,260 --> 00:28:42,860
do we have a mic right up high it looked

524
00:28:40,550 --> 00:28:47,450
like the other ASP pins we sold it in

525
00:28:42,860 --> 00:28:48,770
did they go anywhere sorry so the ESP

526
00:28:47,450 --> 00:28:50,360
chip that was soldered onto the

527
00:28:48,770 --> 00:28:52,520
motherboard it looked like that was

528
00:28:50,360 --> 00:28:54,379
being well more than just the serial

529
00:28:52,520 --> 00:28:56,120
pins were sold into something did they

530
00:28:54,380 --> 00:28:58,100
actually go anywhere on the traces or

531
00:28:56,120 --> 00:29:03,250
were they just yes basically from the

532
00:28:58,100 --> 00:29:07,370
esp8266 the pins that had been used were

533
00:29:03,250 --> 00:29:10,280
TX Eric so basically rs-232

534
00:29:07,370 --> 00:29:13,610
communication pins and and the power

535
00:29:10,280 --> 00:29:15,470
that was that's basically it and you can

536
00:29:13,610 --> 00:29:17,810
you can even like there is a

537
00:29:15,470 --> 00:29:21,770
functionality inside the ARM Cortex and

538
00:29:17,810 --> 00:29:26,919
0 which allows you to even update the

539
00:29:21,770 --> 00:29:30,320
firmware on the esp8266 but it this goes

540
00:29:26,920 --> 00:29:34,040
like through the vendor update process

541
00:29:30,320 --> 00:29:37,639
like the vendor of the asph 266 and it's

542
00:29:34,040 --> 00:29:43,720
like known to be pretty secure in this

543
00:29:37,640 --> 00:29:43,720
case question over there as well

544
00:29:44,800 --> 00:29:53,090
have you been to own a coffee yet in

545
00:29:47,600 --> 00:29:57,320
Canberra is actually very good coffee I

546
00:29:53,090 --> 00:30:00,639
like it very much okay I need to get

547
00:29:57,320 --> 00:30:04,909
some coffee really and some sleep

548
00:30:00,640 --> 00:30:08,410
are there any other questions one behind

549
00:30:04,910 --> 00:30:08,410
the camera over there yeah

550
00:30:10,670 --> 00:30:16,870
actually I can show you a little bit of

551
00:30:12,770 --> 00:30:16,870
spoiler this is my upcoming project

552
00:30:19,900 --> 00:30:27,770
hello yes yes perhaps one of the vendor

553
00:30:25,429 --> 00:30:31,370
responses to these convenience versus

554
00:30:27,770 --> 00:30:35,150
security thing is to now provide pseudo

555
00:30:31,370 --> 00:30:38,120
secure cloud services whereby your iot

556
00:30:35,150 --> 00:30:39,679
will connect to a vendor supported cloud

557
00:30:38,120 --> 00:30:43,010
surface and then you login to that by

558
00:30:39,679 --> 00:30:45,770
your phone up how do you see this is a

559
00:30:43,010 --> 00:30:50,629
compromise between security and control

560
00:30:45,770 --> 00:30:53,840
of the device as well as convenience for

561
00:30:50,630 --> 00:30:56,690
the operator user it always depends what

562
00:30:53,840 --> 00:31:00,949
protocol they use because that like in

563
00:30:56,690 --> 00:31:04,250
IOT world is the problem here is that

564
00:31:00,950 --> 00:31:06,470
many vendors are using like you know

565
00:31:04,250 --> 00:31:07,790
like obscure protocols it's like the

566
00:31:06,470 --> 00:31:09,530
security by obscurity

567
00:31:07,790 --> 00:31:11,960
you don't really know what's inside and

568
00:31:09,530 --> 00:31:15,200
they they are basically relying on the

569
00:31:11,960 --> 00:31:17,720
fact that if it's unknown and obscure

570
00:31:15,200 --> 00:31:19,910
nobody will like dive into that because

571
00:31:17,720 --> 00:31:22,429
nobody understands that protocol and

572
00:31:19,910 --> 00:31:24,830
sometimes it it turns out that the

573
00:31:22,429 --> 00:31:29,450
protocol is basically a plaintext just

574
00:31:24,830 --> 00:31:32,870
you know put into a nice nice series of

575
00:31:29,450 --> 00:31:38,150
bytes so I think like the communication

576
00:31:32,870 --> 00:31:40,729
with with cloud is not kind of a proof

577
00:31:38,150 --> 00:31:43,190
that the setup is secure for example

578
00:31:40,730 --> 00:31:45,470
there are light bulbs that are connected

579
00:31:43,190 --> 00:31:47,600
to a cloud and the only identification

580
00:31:45,470 --> 00:31:50,090
that they are using when connecting

581
00:31:47,600 --> 00:31:52,399
through your Wi-Fi to to a cloud is

582
00:31:50,090 --> 00:31:54,709
their MAC address so there is no

583
00:31:52,400 --> 00:31:57,710
password no authorization the only thing

584
00:31:54,710 --> 00:31:59,510
the only ID they are using is is the MAC

585
00:31:57,710 --> 00:32:02,540
address and the whole protocol again is

586
00:31:59,510 --> 00:32:05,179
plain text and it's susceptible to a dos

587
00:32:02,540 --> 00:32:07,250
attack because if you connect your

588
00:32:05,179 --> 00:32:08,990
script through the same cloud with the

589
00:32:07,250 --> 00:32:10,910
same identifier it disconnects the

590
00:32:08,990 --> 00:32:14,870
original device because it can handle

591
00:32:10,910 --> 00:32:17,660
only one connection so it I think there

592
00:32:14,870 --> 00:32:19,520
is no guaranteed and when the

593
00:32:17,660 --> 00:32:22,040
configuration is done through a cloud

594
00:32:19,520 --> 00:32:22,879
that it's secure it really depends on

595
00:32:22,040 --> 00:32:25,850
the Wonder and

596
00:32:22,880 --> 00:32:26,600
the implementation may be time for one

597
00:32:25,850 --> 00:32:31,669
more question

598
00:32:26,600 --> 00:32:36,459
will you have one well let's thank

599
00:32:31,670 --> 00:32:36,460
Martin for a great talk thank you

