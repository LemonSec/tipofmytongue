1
00:00:02,879 --> 00:00:04,960
uh yeah i think we can get started so uh

2
00:00:04,960 --> 00:00:07,759
welcome everybody thanks for coming for

3
00:00:07,759 --> 00:00:10,719
my talk developer centered security

4
00:00:10,719 --> 00:00:15,040
um my name is olgard i'm working for

5
00:00:15,040 --> 00:00:17,520
cloud division at oracle

6
00:00:17,520 --> 00:00:19,359
and i work in the security architecture

7
00:00:19,359 --> 00:00:20,960
team there

8
00:00:20,960 --> 00:00:23,279
um yes we'll be talking about developers

9
00:00:23,279 --> 00:00:24,800
and why they

10
00:00:24,800 --> 00:00:27,519
are some sometimes unnecessarily blamed

11
00:00:27,519 --> 00:00:30,320
for security vulnerabilities

12
00:00:30,320 --> 00:00:33,040
so what this talk is about so in general

13
00:00:33,040 --> 00:00:34,719
right if you look at that it's it's a

14
00:00:34,719 --> 00:00:36,800
usable security talk right that'll

15
00:00:36,800 --> 00:00:38,960
explain what usable security is more

16
00:00:38,960 --> 00:00:40,719
specifically we are talking about usable

17
00:00:40,719 --> 00:00:43,760
security in context of developers

18
00:00:43,760 --> 00:00:45,520
and their apis and within that we'll

19
00:00:45,520 --> 00:00:46,960
talk about some

20
00:00:46,960 --> 00:00:51,920
myths and changes to developer practice

21
00:00:52,000 --> 00:00:53,680
the the core

22
00:00:53,680 --> 00:00:55,520
is a bunch of real-time exact real-life

23
00:00:55,520 --> 00:00:57,280
examples of

24
00:00:57,280 --> 00:00:59,520
software problems

25
00:00:59,520 --> 00:01:01,199
in there and

26
00:01:01,199 --> 00:01:04,159
a bit of description of best practices

27
00:01:04,159 --> 00:01:07,280
okay so usable security

28
00:01:07,280 --> 00:01:08,960
so this is something that

29
00:01:08,960 --> 00:01:11,680
exists for probably last 20 years and

30
00:01:11,680 --> 00:01:15,680
it's got much better

31
00:01:15,680 --> 00:01:17,920
it's hard to describe

32
00:01:17,920 --> 00:01:20,479
20 years of research in five minutes but

33
00:01:20,479 --> 00:01:21,840
i'll try with a

34
00:01:21,840 --> 00:01:23,360
with this example

35
00:01:23,360 --> 00:01:26,400
so you've seen that right and the the

36
00:01:26,400 --> 00:01:28,479
older you are the the more likely you've

37
00:01:28,479 --> 00:01:30,880
seen that particular one um so what is

38
00:01:30,880 --> 00:01:33,119
this this is the you know ssl error

39
00:01:33,119 --> 00:01:34,560
certificate certificate error that

40
00:01:34,560 --> 00:01:36,640
you've you've been seeing all the time

41
00:01:36,640 --> 00:01:37,840
and

42
00:01:37,840 --> 00:01:41,119
what this one actually means and this 81

43
00:01:41,119 --> 00:01:44,320
words right so it's hard to parse

44
00:01:44,320 --> 00:01:47,920
the server you're connecting to

45
00:01:47,920 --> 00:01:50,640
established ssl correctly but the

46
00:01:50,640 --> 00:01:52,960
certificate that it's offering is just

47
00:01:52,960 --> 00:01:55,280
generated by somebody some dude on the

48
00:01:55,280 --> 00:01:58,000
internet right so it matches the host

49
00:01:58,000 --> 00:02:00,799
but it's not trusted right so in terms

50
00:02:00,799 --> 00:02:03,759
of ssl it's a critical flow right you're

51
00:02:03,759 --> 00:02:05,360
you're not connecting probably to the

52
00:02:05,360 --> 00:02:09,598
server you you're supposed to right now

53
00:02:09,598 --> 00:02:12,640
what user sees though

54
00:02:12,640 --> 00:02:15,120
um okay so they say

55
00:02:15,120 --> 00:02:17,040
it was issued by a company you have not

56
00:02:17,040 --> 00:02:19,280
chosen to trust

57
00:02:19,280 --> 00:02:20,879
a company right so

58
00:02:20,879 --> 00:02:23,040
some legitimacy in that right

59
00:02:23,040 --> 00:02:24,080
um

60
00:02:24,080 --> 00:02:26,239
and they tell you okay you know view the

61
00:02:26,239 --> 00:02:27,520
certificate

62
00:02:27,520 --> 00:02:28,560
fine

63
00:02:28,560 --> 00:02:30,000
right um

64
00:02:30,000 --> 00:02:32,319
again i'm a user right i was in the

65
00:02:32,319 --> 00:02:34,000
middle of something i'm just logging

66
00:02:34,000 --> 00:02:36,319
into my you know tax office right to pay

67
00:02:36,319 --> 00:02:37,360
my tax

68
00:02:37,360 --> 00:02:38,319
um

69
00:02:38,319 --> 00:02:40,800
that's not very useful okay so what else

70
00:02:40,800 --> 00:02:41,680
i can

71
00:02:41,680 --> 00:02:43,120
have with that okay

72
00:02:43,120 --> 00:02:45,440
they ask me what they want to proceed

73
00:02:45,440 --> 00:02:46,879
so maybe i want to understand what the

74
00:02:46,879 --> 00:02:48,720
risk actually is right again i'm a user

75
00:02:48,720 --> 00:02:50,959
i'm not a security expert

76
00:02:50,959 --> 00:02:51,920
um

77
00:02:51,920 --> 00:02:54,160
okay it cannot be viewed or changed by

78
00:02:54,160 --> 00:02:56,080
others that's reassuring right of course

79
00:02:56,080 --> 00:02:58,000
it's a lie right

80
00:02:58,000 --> 00:02:59,120
it's

81
00:02:59,120 --> 00:03:01,280
what they mean right is that it's

82
00:03:01,280 --> 00:03:02,400
encrypted

83
00:03:02,400 --> 00:03:04,080
that's and it cannot be viewed or

84
00:03:04,080 --> 00:03:05,680
changed by others right

85
00:03:05,680 --> 00:03:07,599
unless that address is the one who

86
00:03:07,599 --> 00:03:10,080
planned this certificate right on a fake

87
00:03:10,080 --> 00:03:12,319
server that you're connecting to

88
00:03:12,319 --> 00:03:13,920
right and

89
00:03:13,920 --> 00:03:15,200
uh

90
00:03:15,200 --> 00:03:17,280
amusingly like they give you like what's

91
00:03:17,280 --> 00:03:18,640
what's good about it right oh the

92
00:03:18,640 --> 00:03:21,120
certificate has a valid name right so

93
00:03:21,120 --> 00:03:22,879
it's it's untrusted but with a proper

94
00:03:22,879 --> 00:03:24,159
name

95
00:03:24,159 --> 00:03:26,080
and the date is fine right

96
00:03:26,080 --> 00:03:28,319
it's like why is this information useful

97
00:03:28,319 --> 00:03:29,519
to the user

98
00:03:29,519 --> 00:03:31,599
so oh this is not it's not an error it's

99
00:03:31,599 --> 00:03:33,920
kind of like a warning right

100
00:03:33,920 --> 00:03:35,840
the icon says so

101
00:03:35,840 --> 00:03:37,120
so it's like

102
00:03:37,120 --> 00:03:40,799
uh out of three things one is kind of a

103
00:03:40,799 --> 00:03:43,200
warning

104
00:03:43,840 --> 00:03:46,959
yeah i guess so right this looks

105
00:03:46,959 --> 00:03:48,640
like some

106
00:03:48,640 --> 00:03:50,959
some some computer problem right it's

107
00:03:50,959 --> 00:03:53,599
not a security risk

108
00:03:53,599 --> 00:03:56,319
as a user i interpret it this way right

109
00:03:56,319 --> 00:03:58,400
so so the problem is that

110
00:03:58,400 --> 00:04:00,400
somebody who's designing the system like

111
00:04:00,400 --> 00:04:04,319
this is the tls or ssl flow they are

112
00:04:04,319 --> 00:04:05,680
working on

113
00:04:05,680 --> 00:04:07,120
and this is what they implement this

114
00:04:07,120 --> 00:04:08,480
application for

115
00:04:08,480 --> 00:04:10,239
but the real system is this right the

116
00:04:10,239 --> 00:04:12,480
real system is a system that involves a

117
00:04:12,480 --> 00:04:14,480
user in the middle

118
00:04:14,480 --> 00:04:17,600
and they present a dialogue to the user

119
00:04:17,600 --> 00:04:19,918
and they expect user to make a decision

120
00:04:19,918 --> 00:04:22,560
they inform user about how to make that

121
00:04:22,560 --> 00:04:24,400
decision and if user makes a wrong

122
00:04:24,400 --> 00:04:26,320
decision the system fails

123
00:04:26,320 --> 00:04:28,080
so this is really the system that we

124
00:04:28,080 --> 00:04:30,080
should be implementing for

125
00:04:30,080 --> 00:04:32,080
and because they were not they're just

126
00:04:32,080 --> 00:04:34,000
giving like very raw misleading

127
00:04:34,000 --> 00:04:36,160
confusing information to the user that's

128
00:04:36,160 --> 00:04:38,320
a failure to entire system right it's

129
00:04:38,320 --> 00:04:41,360
most likely that somebody will break tls

130
00:04:41,360 --> 00:04:42,800
or ssl

131
00:04:42,800 --> 00:04:44,800
through that

132
00:04:44,800 --> 00:04:47,280
by just putting wrong certificates and

133
00:04:47,280 --> 00:04:49,600
nine out of ten users will accept it

134
00:04:49,600 --> 00:04:51,360
rather than like trying to break crypto

135
00:04:51,360 --> 00:04:53,680
or something right

136
00:04:53,680 --> 00:04:58,080
so we got better so this is modern

137
00:04:58,080 --> 00:05:00,320
equivalent of the same error

138
00:05:00,320 --> 00:05:01,360
and it says

139
00:05:01,360 --> 00:05:04,880
it's 20 words right and it says

140
00:05:04,880 --> 00:05:07,360
hey attackers are stealing your credit

141
00:05:07,360 --> 00:05:09,680
cards right it's it's better right and

142
00:05:09,680 --> 00:05:10,960
it doesn't say like

143
00:05:10,960 --> 00:05:13,120
how to proceed choose right let's say

144
00:05:13,120 --> 00:05:15,600
hey go back to safety it's it's not a

145
00:05:15,600 --> 00:05:17,600
dialogue asking user to do something

146
00:05:17,600 --> 00:05:19,759
it's more like a status right say hey

147
00:05:19,759 --> 00:05:21,600
this website doesn't work right there's

148
00:05:21,600 --> 00:05:24,479
this security problem right just like

149
00:05:24,479 --> 00:05:26,880
there is no obvious path for user to

150
00:05:26,880 --> 00:05:27,919
continue

151
00:05:27,919 --> 00:05:29,600
right it's more like

152
00:05:29,600 --> 00:05:30,960
there's this error

153
00:05:30,960 --> 00:05:33,520
it doesn't work

154
00:05:33,520 --> 00:05:35,680
so in summary what usable security is

155
00:05:35,680 --> 00:05:38,240
like users are part of the system and

156
00:05:38,240 --> 00:05:40,080
the system design should

157
00:05:40,080 --> 00:05:42,720
include that

158
00:05:42,720 --> 00:05:44,800
should be designed for users like not

159
00:05:44,800 --> 00:05:46,639
involving them if you don't have to

160
00:05:46,639 --> 00:05:48,160
right why delegate your security

161
00:05:48,160 --> 00:05:50,000
problems to two users

162
00:05:50,000 --> 00:05:51,759
have secure defaults

163
00:05:51,759 --> 00:05:53,759
clear and transparent information

164
00:05:53,759 --> 00:05:56,000
right

165
00:05:56,720 --> 00:05:58,240
so developers

166
00:05:58,240 --> 00:06:00,720
they are humans too

167
00:06:00,720 --> 00:06:02,720
so the point i'm trying to make during

168
00:06:02,720 --> 00:06:05,360
this this presentation is that

169
00:06:05,360 --> 00:06:07,520
we take this wrong view when we design

170
00:06:07,520 --> 00:06:09,360
things for developers to consume like

171
00:06:09,360 --> 00:06:12,560
apis and documentation

172
00:06:12,560 --> 00:06:15,039
various specs as the case we think about

173
00:06:15,039 --> 00:06:16,720
those things and you know developers

174
00:06:16,720 --> 00:06:18,639
take that and implement an application

175
00:06:18,639 --> 00:06:21,120
but it's really again developers part of

176
00:06:21,120 --> 00:06:23,199
that right how well they will understand

177
00:06:23,199 --> 00:06:26,080
it how well they will process what

178
00:06:26,080 --> 00:06:27,680
you're offering them

179
00:06:27,680 --> 00:06:29,520
has an impact right and developers will

180
00:06:29,520 --> 00:06:31,440
have their own biases their own

181
00:06:31,440 --> 00:06:33,440
experience from maybe previously doing

182
00:06:33,440 --> 00:06:35,039
something similar

183
00:06:35,039 --> 00:06:37,520
the organization the culture they are in

184
00:06:37,520 --> 00:06:40,160
support they are getting

185
00:06:40,160 --> 00:06:43,199
right so so this is really the system so

186
00:06:43,199 --> 00:06:44,880
just like with users we should include

187
00:06:44,880 --> 00:06:47,759
developers in the mix

188
00:06:47,759 --> 00:06:50,000
now who are those developers

189
00:06:50,000 --> 00:06:53,840
and what do they do and security people

190
00:06:53,840 --> 00:06:56,000
sometimes have this

191
00:06:56,000 --> 00:06:57,919
wrong idea about

192
00:06:57,919 --> 00:07:00,560
uh who developers are right so they

193
00:07:00,560 --> 00:07:02,639
think we have this

194
00:07:02,639 --> 00:07:03,680
like

195
00:07:03,680 --> 00:07:06,720
professional skilled engineers

196
00:07:06,720 --> 00:07:10,800
who who are career people who write code

197
00:07:10,800 --> 00:07:12,479
for living right

198
00:07:12,479 --> 00:07:14,800
but sometimes we just have people like

199
00:07:14,800 --> 00:07:17,199
doing random stuff right we have like

200
00:07:17,199 --> 00:07:20,160
kids coding we have people doing coding

201
00:07:20,160 --> 00:07:22,479
like on a site they are doing some some

202
00:07:22,479 --> 00:07:25,520
quick integration right and

203
00:07:25,520 --> 00:07:27,199
they are like doing some some quick

204
00:07:27,199 --> 00:07:28,960
mobile apps or you know joining two

205
00:07:28,960 --> 00:07:30,960
things together right they may be like

206
00:07:30,960 --> 00:07:33,120
working in at but doing doing some

207
00:07:33,120 --> 00:07:35,199
coding in the middle right but even with

208
00:07:35,199 --> 00:07:36,720
professional developers we have this

209
00:07:36,720 --> 00:07:38,240
bias of

210
00:07:38,240 --> 00:07:40,639
okay we have these developers they code

211
00:07:40,639 --> 00:07:42,160
right but we have like testers and build

212
00:07:42,160 --> 00:07:43,919
people and package people in

213
00:07:43,919 --> 00:07:45,599
deployment and operations these are all

214
00:07:45,599 --> 00:07:46,400
like

215
00:07:46,400 --> 00:07:48,639
special skills and special skill sets

216
00:07:48,639 --> 00:07:50,560
right well

217
00:07:50,560 --> 00:07:53,280
nope uh we have everybody coding now

218
00:07:53,280 --> 00:07:54,639
right so

219
00:07:54,639 --> 00:07:56,479
all of those things that we used to have

220
00:07:56,479 --> 00:07:58,240
special professions for it's like

221
00:07:58,240 --> 00:08:00,160
another flavor of coding right and if

222
00:08:00,160 --> 00:08:02,479
you're lucky you may have a team where

223
00:08:02,479 --> 00:08:03,599
you have

224
00:08:03,599 --> 00:08:06,080
people who were previously

225
00:08:06,080 --> 00:08:08,000
doing those things and now we're told

226
00:08:08,000 --> 00:08:10,000
hey you know now you have you're not

227
00:08:10,000 --> 00:08:12,400
testing things you're developing tests

228
00:08:12,400 --> 00:08:14,160
you're not an administrator now you're

229
00:08:14,160 --> 00:08:16,000
writing your you know ops automation

230
00:08:16,000 --> 00:08:16,800
right

231
00:08:16,800 --> 00:08:18,319
and so

232
00:08:18,319 --> 00:08:20,960
either you start coding or you know we

233
00:08:20,960 --> 00:08:23,680
find somebody else in your place or it

234
00:08:23,680 --> 00:08:25,199
was this original developer who was

235
00:08:25,199 --> 00:08:26,400
writing this thing

236
00:08:26,400 --> 00:08:28,639
that say okay you know when we finish

237
00:08:28,639 --> 00:08:29,919
doing your

238
00:08:29,919 --> 00:08:32,479
your java development uh do some scala

239
00:08:32,479 --> 00:08:35,599
for for our gradle integration test uh

240
00:08:35,599 --> 00:08:37,760
write some docker file

241
00:08:37,760 --> 00:08:38,719
um

242
00:08:38,719 --> 00:08:41,839
maybe some gradle on the side and uh do

243
00:08:41,839 --> 00:08:43,760
the terraform manifest and maybe

244
00:08:43,760 --> 00:08:45,360
implement some python to like monitor

245
00:08:45,360 --> 00:08:46,880
the application right so those

246
00:08:46,880 --> 00:08:48,720
developers are like spread thinly over

247
00:08:48,720 --> 00:08:50,720
those multiple technologies right so

248
00:08:50,720 --> 00:08:52,399
it's not like they will have time to go

249
00:08:52,399 --> 00:08:53,839
and like

250
00:08:53,839 --> 00:08:57,120
investigate every single detail right

251
00:08:57,120 --> 00:08:59,120
another thing that changed recently is

252
00:08:59,120 --> 00:09:00,800
how many

253
00:09:00,800 --> 00:09:01,680
um

254
00:09:01,680 --> 00:09:04,160
like how we actually code

255
00:09:04,160 --> 00:09:07,519
we used to code it was like

256
00:09:07,519 --> 00:09:09,519
language specific thing like you you

257
00:09:09,519 --> 00:09:11,040
know the language you implement your

258
00:09:11,040 --> 00:09:14,080
logic in a language

259
00:09:14,080 --> 00:09:15,680
now it's more like you're just

260
00:09:15,680 --> 00:09:17,680
integrating components that language

261
00:09:17,680 --> 00:09:20,160
becomes a glue for those components that

262
00:09:20,160 --> 00:09:22,800
you integrate right so if you ever like

263
00:09:22,800 --> 00:09:25,040
code in node.js right you know what i'm

264
00:09:25,040 --> 00:09:26,480
talking about right

265
00:09:26,480 --> 00:09:29,120
so we have like more and more

266
00:09:29,120 --> 00:09:31,120
open source or not even open source

267
00:09:31,120 --> 00:09:32,240
components

268
00:09:32,240 --> 00:09:34,480
uh they are like super easy to get you

269
00:09:34,480 --> 00:09:37,839
know you press compress you know boot

270
00:09:37,839 --> 00:09:39,519
one line and you have a component

271
00:09:39,519 --> 00:09:41,200
download it installed add it to your

272
00:09:41,200 --> 00:09:43,200
build manifest great right

273
00:09:43,200 --> 00:09:45,440
um

274
00:09:46,240 --> 00:09:48,160
it's it is expected that it will use

275
00:09:48,160 --> 00:09:50,160
them right like nobody will go and like

276
00:09:50,160 --> 00:09:52,160
implement their own authentication or

277
00:09:52,160 --> 00:09:54,399
their own like any anything that is

278
00:09:54,399 --> 00:09:55,600
routine

279
00:09:55,600 --> 00:09:57,760
it has an open source component we are

280
00:09:57,760 --> 00:09:59,360
as developers we are expected to use

281
00:09:59,360 --> 00:10:00,080
them

282
00:10:00,080 --> 00:10:01,760
but it also means that

283
00:10:01,760 --> 00:10:03,200
the amount of documentation and

284
00:10:03,200 --> 00:10:05,680
potential settings and and things we

285
00:10:05,680 --> 00:10:07,680
have to interact with

286
00:10:07,680 --> 00:10:10,079
it's growing much more right because

287
00:10:10,079 --> 00:10:12,079
there's like now

288
00:10:12,079 --> 00:10:13,920
25 different libraries that we may

289
00:10:13,920 --> 00:10:16,240
incorrectly use right or not understand

290
00:10:16,240 --> 00:10:18,399
how to use securely it's like with those

291
00:10:18,399 --> 00:10:20,240
interfaces right

292
00:10:20,240 --> 00:10:22,399
so that that that interface for

293
00:10:22,399 --> 00:10:23,680
developer

294
00:10:23,680 --> 00:10:25,040
increases

295
00:10:25,040 --> 00:10:27,360
and with third party components

296
00:10:27,360 --> 00:10:28,720
this is

297
00:10:28,720 --> 00:10:29,519
um

298
00:10:29,519 --> 00:10:30,480
top

299
00:10:30,480 --> 00:10:33,040
i think top 100 npm components and how

300
00:10:33,040 --> 00:10:34,480
they

301
00:10:34,480 --> 00:10:37,040
interact with each other so so there's

302
00:10:37,040 --> 00:10:38,720
what i'm trying to say is like you may

303
00:10:38,720 --> 00:10:40,240
also not be using those components

304
00:10:40,240 --> 00:10:41,680
directly right like you're using

305
00:10:41,680 --> 00:10:43,360
component that is using a component that

306
00:10:43,360 --> 00:10:45,440
is using a component and so forth right

307
00:10:45,440 --> 00:10:47,279
but still maybe they will have some

308
00:10:47,279 --> 00:10:49,040
impact and maybe you have some indirect

309
00:10:49,040 --> 00:10:50,320
ways of

310
00:10:50,320 --> 00:10:52,640
of um

311
00:10:52,640 --> 00:10:54,079
configuring them

312
00:10:54,079 --> 00:10:56,880
um so finally okay so

313
00:10:56,880 --> 00:10:58,560
it's important that we choose those

314
00:10:58,560 --> 00:10:59,760
components

315
00:10:59,760 --> 00:11:01,519
you know very diligently right when we

316
00:11:01,519 --> 00:11:03,040
do that

317
00:11:03,040 --> 00:11:04,959
that's also not always the case right

318
00:11:04,959 --> 00:11:06,959
because we don't have time

319
00:11:06,959 --> 00:11:09,120
as developers sometimes or not all

320
00:11:09,120 --> 00:11:11,440
developers have time to like spend a lot

321
00:11:11,440 --> 00:11:12,959
of effort to

322
00:11:12,959 --> 00:11:14,800
like first of all they want this stuff

323
00:11:14,800 --> 00:11:17,760
to work right like choosing from

324
00:11:17,760 --> 00:11:19,279
multiple components based on like

325
00:11:19,279 --> 00:11:21,600
security quality on top of all the other

326
00:11:21,600 --> 00:11:22,399
things like does it have the

327
00:11:22,399 --> 00:11:25,040
functionality i want right

328
00:11:25,040 --> 00:11:26,880
okay so that's how

329
00:11:26,880 --> 00:11:29,040
developers change so so now let's look

330
00:11:29,040 --> 00:11:30,079
at

331
00:11:30,079 --> 00:11:32,640
some case study so

332
00:11:32,640 --> 00:11:35,440
how we fail sometimes as a

333
00:11:35,440 --> 00:11:37,760
as an industry in

334
00:11:37,760 --> 00:11:40,240
doing good security interfaces for

335
00:11:40,240 --> 00:11:41,519
developers

336
00:11:41,519 --> 00:11:43,839
uh so i was talking about web hooks they

337
00:11:43,839 --> 00:11:46,079
are nice right so if you don't know

338
00:11:46,079 --> 00:11:48,079
before web hooks if you wanted to

339
00:11:48,079 --> 00:11:50,480
integrate with some service you wanted

340
00:11:50,480 --> 00:11:52,240
to know that something changed you had

341
00:11:52,240 --> 00:11:53,600
to like call them

342
00:11:53,600 --> 00:11:56,639
and they respond oh nothing new right oh

343
00:11:56,639 --> 00:11:58,480
call them again nothing new call them

344
00:11:58,480 --> 00:12:00,480
again like nobody would do anything with

345
00:12:00,480 --> 00:12:02,399
that this is terrible

346
00:12:02,399 --> 00:12:04,639
um so we have web hooks right so like oh

347
00:12:04,639 --> 00:12:06,160
the service tells you that there is

348
00:12:06,160 --> 00:12:07,680
something new

349
00:12:07,680 --> 00:12:09,680
and those things happen like when they

350
00:12:09,680 --> 00:12:12,320
happen right so don't have to like

351
00:12:12,320 --> 00:12:14,000
hammer the service with your requests

352
00:12:14,000 --> 00:12:16,000
service will call you

353
00:12:16,000 --> 00:12:18,079
okay perfect right so

354
00:12:18,079 --> 00:12:19,760
typically the way you do that is that

355
00:12:19,760 --> 00:12:21,920
like you go to some service

356
00:12:21,920 --> 00:12:23,279
you have some

357
00:12:23,279 --> 00:12:25,760
you either do it with via api

358
00:12:25,760 --> 00:12:28,079
or you have some panel

359
00:12:28,079 --> 00:12:30,959
you provide a callback url you tell the

360
00:12:30,959 --> 00:12:32,720
service what kind of events you want and

361
00:12:32,720 --> 00:12:34,959
maybe some other options and they record

362
00:12:34,959 --> 00:12:36,399
that and when this event happened they

363
00:12:36,399 --> 00:12:39,680
call you on your callback url

364
00:12:39,680 --> 00:12:42,079
right so so an example like in in dublin

365
00:12:42,079 --> 00:12:45,120
we have this uh dublin airport web hook

366
00:12:45,120 --> 00:12:46,240
well app

367
00:12:46,240 --> 00:12:48,160
whatsapp bot

368
00:12:48,160 --> 00:12:50,880
um so you can you can sign up for for

369
00:12:50,880 --> 00:12:53,519
those updates and they will tell you

370
00:12:53,519 --> 00:12:56,720
right when when the the plane is

371
00:12:56,720 --> 00:12:58,880
landing and and so forth why i use that

372
00:12:58,880 --> 00:13:01,839
because i live nearby the airport so i i

373
00:13:01,839 --> 00:13:03,200
get into the car when i get a

374
00:13:03,200 --> 00:13:05,120
notification it landed and it's not

375
00:13:05,120 --> 00:13:07,040
always on schedule so that's very

376
00:13:07,040 --> 00:13:08,800
convenient right so like when i send

377
00:13:08,800 --> 00:13:10,240
that message

378
00:13:10,240 --> 00:13:11,519
to that bot

379
00:13:11,519 --> 00:13:13,279
this is what they get right so they get

380
00:13:13,279 --> 00:13:16,160
some on their url they get this kind of

381
00:13:16,160 --> 00:13:17,279
message

382
00:13:17,279 --> 00:13:20,079
um okay signing up and from whom it was

383
00:13:20,079 --> 00:13:22,560
sent and some some other stuff right

384
00:13:22,560 --> 00:13:24,320
that's how it looks

385
00:13:24,320 --> 00:13:25,120
so

386
00:13:25,120 --> 00:13:26,880
why why web hooks why i want to talk

387
00:13:26,880 --> 00:13:28,560
about leftovers they're very interesting

388
00:13:28,560 --> 00:13:30,800
because okay this is like a services

389
00:13:30,800 --> 00:13:33,200
authentic request to consumers

390
00:13:33,200 --> 00:13:34,800
right but of course it could be an

391
00:13:34,800 --> 00:13:36,880
attacker sending their request to that

392
00:13:36,880 --> 00:13:38,720
consumer all right

393
00:13:38,720 --> 00:13:41,199
and this is the like the core security

394
00:13:41,199 --> 00:13:43,360
problem with web books like how we tell

395
00:13:43,360 --> 00:13:46,560
one and the other apart from each other

396
00:13:46,560 --> 00:13:47,920
but it's interesting because it's the

397
00:13:47,920 --> 00:13:49,680
service that defines those controls

398
00:13:49,680 --> 00:13:52,000
right i cannot authenticate them because

399
00:13:52,000 --> 00:13:53,920
i'm not generating them and i cannot

400
00:13:53,920 --> 00:13:55,920
tell what's up how they should

401
00:13:55,920 --> 00:13:57,920
authenticate those calls coming to me

402
00:13:57,920 --> 00:13:59,760
right they already define that i can

403
00:13:59,760 --> 00:14:01,760
take it or leave it right

404
00:14:01,760 --> 00:14:03,440
so i have to implement the controls that

405
00:14:03,440 --> 00:14:05,199
they have defined

406
00:14:05,199 --> 00:14:07,199
uh which is just interesting so and

407
00:14:07,199 --> 00:14:09,360
there is no direct uh impact to the

408
00:14:09,360 --> 00:14:11,120
service when it goes wrong because it's

409
00:14:11,120 --> 00:14:12,399
like my application that gets

410
00:14:12,399 --> 00:14:14,880
compromised not theirs

411
00:14:14,880 --> 00:14:17,279
um so i took

412
00:14:17,279 --> 00:14:19,839
a look at like 10 different services

413
00:14:19,839 --> 00:14:20,880
um

414
00:14:20,880 --> 00:14:23,199
and it was biased and unfair i didn't

415
00:14:23,199 --> 00:14:25,600
look for like the ones i knew had good

416
00:14:25,600 --> 00:14:27,680
web hook implementation like github for

417
00:14:27,680 --> 00:14:28,880
example right

418
00:14:28,880 --> 00:14:30,399
i look at those that i was expecting to

419
00:14:30,399 --> 00:14:32,480
find some problems um

420
00:14:32,480 --> 00:14:34,560
so we look at api and documentation and

421
00:14:34,560 --> 00:14:37,600
so code samples and so forth

422
00:14:37,600 --> 00:14:39,680
um okay so first

423
00:14:39,680 --> 00:14:42,240
approach to how to tell

424
00:14:42,240 --> 00:14:44,880
service and not service from each other

425
00:14:44,880 --> 00:14:45,760
right

426
00:14:45,760 --> 00:14:47,279
um

427
00:14:47,279 --> 00:14:49,600
some services publish list of ip

428
00:14:49,600 --> 00:14:51,120
addresses that they will send you f

429
00:14:51,120 --> 00:14:52,880
hooks from right

430
00:14:52,880 --> 00:14:54,160
um

431
00:14:54,160 --> 00:14:56,560
on their website

432
00:14:56,560 --> 00:14:59,040
and like as a developer what am i

433
00:14:59,040 --> 00:15:01,279
supposed to do with that right

434
00:15:01,279 --> 00:15:03,839
okay i i have to take it literally from

435
00:15:03,839 --> 00:15:06,959
that html right and paste it somewhere

436
00:15:06,959 --> 00:15:08,800
in like a config file in my code right

437
00:15:08,800 --> 00:15:10,639
but they didn't tell me like when this

438
00:15:10,639 --> 00:15:13,120
will change or will it ever change

439
00:15:13,120 --> 00:15:14,800
if i start restricting and they change

440
00:15:14,800 --> 00:15:16,880
my application is broken the moment it

441
00:15:16,880 --> 00:15:18,480
gets broken i will remove that piece of

442
00:15:18,480 --> 00:15:20,720
code and never turn it on again right

443
00:15:20,720 --> 00:15:22,959
because my application has to work

444
00:15:22,959 --> 00:15:25,600
um so this is this is very unusable

445
00:15:25,600 --> 00:15:27,760
right not mentioning this is a pretty

446
00:15:27,760 --> 00:15:29,519
poor mechanism right i can be running my

447
00:15:29,519 --> 00:15:32,480
server behind proxies uh on shared

448
00:15:32,480 --> 00:15:34,079
infrastructure i may have multiple

449
00:15:34,079 --> 00:15:36,480
services connecting to me like and

450
00:15:36,480 --> 00:15:38,720
dealing with ip addresses is kind of

451
00:15:38,720 --> 00:15:40,880
difficult there right

452
00:15:40,880 --> 00:15:43,199
so another one um

453
00:15:43,199 --> 00:15:44,800
and i will not name them right there's

454
00:15:44,800 --> 00:15:45,920
no point

455
00:15:45,920 --> 00:15:47,199
another one

456
00:15:47,199 --> 00:15:49,440
gives literally that piece of advice

457
00:15:49,440 --> 00:15:50,399
right so

458
00:15:50,399 --> 00:15:52,560
do a dns lookup

459
00:15:52,560 --> 00:15:54,560
so we will have those ap addresses that

460
00:15:54,560 --> 00:15:57,360
we will send these messages from

461
00:15:57,360 --> 00:16:00,079
behind that dns so you can dynamically

462
00:16:00,079 --> 00:16:01,600
check them right rather than taking them

463
00:16:01,600 --> 00:16:03,199
from the website

464
00:16:03,199 --> 00:16:04,320
okay

465
00:16:04,320 --> 00:16:05,600
um

466
00:16:05,600 --> 00:16:07,360
so should i implement it on like every

467
00:16:07,360 --> 00:16:10,079
call i'm getting like how often this

468
00:16:10,079 --> 00:16:12,399
will change can i cache it for a day

469
00:16:12,399 --> 00:16:14,000
they don't tell me

470
00:16:14,000 --> 00:16:16,639
should i like manually do that and

471
00:16:16,639 --> 00:16:19,279
i wait things go wrong and then manually

472
00:16:19,279 --> 00:16:21,120
do it again

473
00:16:21,120 --> 00:16:23,199
again i don't know how to build a system

474
00:16:23,199 --> 00:16:24,800
using something like this right it's

475
00:16:24,800 --> 00:16:27,279
it's just it's very shallow as an

476
00:16:27,279 --> 00:16:29,680
explanati as a tool right it doesn't

477
00:16:29,680 --> 00:16:32,240
help a lot and of course now i am

478
00:16:32,240 --> 00:16:35,040
relying on that list of addresses being

479
00:16:35,040 --> 00:16:37,920
delivered to me via plain text channel

480
00:16:37,920 --> 00:16:39,759
right because the dns i don't know that

481
00:16:39,759 --> 00:16:42,000
dns request is coming from from them

482
00:16:42,000 --> 00:16:43,360
right so if i integrate that i'm

483
00:16:43,360 --> 00:16:45,360
actually i was probably actually better

484
00:16:45,360 --> 00:16:48,000
off with that page if it was on https

485
00:16:48,000 --> 00:16:49,600
and taking the addresses from there then

486
00:16:49,600 --> 00:16:51,839
from from this

487
00:16:51,839 --> 00:16:52,959
okay

488
00:16:52,959 --> 00:16:55,199
um so tls right so okay network address

489
00:16:55,199 --> 00:16:57,519
is one thing uh tls right we want this

490
00:16:57,519 --> 00:16:59,199
communication to be encrypted of course

491
00:16:59,199 --> 00:17:03,199
right um in this documentation only 20

492
00:17:03,199 --> 00:17:05,199
of the 10 i was looking at

493
00:17:05,199 --> 00:17:09,280
actually recommend in any form using

494
00:17:09,280 --> 00:17:10,559
tls

495
00:17:10,559 --> 00:17:14,079
and like examples since so like

496
00:17:14,079 --> 00:17:18,079
documentation is riddled with http urls

497
00:17:18,079 --> 00:17:19,919
right callback urls right because it's

498
00:17:19,919 --> 00:17:21,439
my atls that i have to have right

499
00:17:21,439 --> 00:17:23,439
because they are sending it to me

500
00:17:23,439 --> 00:17:25,439
and all the examples are like http

501
00:17:25,439 --> 00:17:28,000
screenshots are http that's very bad as

502
00:17:28,000 --> 00:17:29,280
a developer

503
00:17:29,280 --> 00:17:31,039
i'm still i'm getting primed with oh

504
00:17:31,039 --> 00:17:32,880
this is this can be over http it's fine

505
00:17:32,880 --> 00:17:34,320
right the documentation says all right

506
00:17:34,320 --> 00:17:36,400
they don't recommend it they don't say

507
00:17:36,400 --> 00:17:38,720
it's safe but they don't say it's unsafe

508
00:17:38,720 --> 00:17:40,559
either right and they give me all these

509
00:17:40,559 --> 00:17:43,039
http examples

510
00:17:43,039 --> 00:17:45,640
uh sample code right so you have like a

511
00:17:45,640 --> 00:17:48,640
node.js sample code for webhooks which

512
00:17:48,640 --> 00:17:50,160
is great i can just take download it and

513
00:17:50,160 --> 00:17:52,799
build my webhook handler on top of that

514
00:17:52,799 --> 00:17:54,400
but again that sample code that they

515
00:17:54,400 --> 00:17:58,480
give me uses plain text uses http

516
00:17:58,480 --> 00:18:00,559
um that's pretty bad

517
00:18:00,559 --> 00:18:01,840
um

518
00:18:01,840 --> 00:18:04,159
okay

519
00:18:04,480 --> 00:18:05,840
none of them

520
00:18:05,840 --> 00:18:07,679
enforces tls

521
00:18:07,679 --> 00:18:09,679
so none of them will say hey your

522
00:18:09,679 --> 00:18:13,520
endpoint has to be at https

523
00:18:13,520 --> 00:18:15,679
zero does that right but clearly i

524
00:18:15,679 --> 00:18:16,880
understand there is because like on

525
00:18:16,880 --> 00:18:19,280
their side when they have their endpoint

526
00:18:19,280 --> 00:18:22,160
that i am calling as an api of course

527
00:18:22,160 --> 00:18:24,320
they only do https

528
00:18:24,320 --> 00:18:26,160
they don't give me choice like call me

529
00:18:26,160 --> 00:18:28,640
on htc or https right

530
00:18:28,640 --> 00:18:31,039
but with webhooks they don't right uh

531
00:18:31,039 --> 00:18:33,280
it's

532
00:18:33,840 --> 00:18:35,280
if we have more time we can discuss it's

533
00:18:35,280 --> 00:18:37,440
a balancing act right it's sometimes

534
00:18:37,440 --> 00:18:38,960
well it used to be difficult for

535
00:18:38,960 --> 00:18:41,280
somebody to just like enable https

536
00:18:41,280 --> 00:18:42,720
endpoints right

537
00:18:42,720 --> 00:18:45,120
but none of them enforces that in any

538
00:18:45,120 --> 00:18:47,360
way right so every time i can just go

539
00:18:47,360 --> 00:18:49,679
and have http

540
00:18:49,679 --> 00:18:52,960
s sorry http uh end point

541
00:18:52,960 --> 00:18:55,360
okay so like but the real thing and the

542
00:18:55,360 --> 00:18:56,559
more important one is like

543
00:18:56,559 --> 00:18:59,679
authentication right so i want to know

544
00:18:59,679 --> 00:19:01,679
and i i we we know like we want to do it

545
00:19:01,679 --> 00:19:04,000
over encrypted channel fine right we

546
00:19:04,000 --> 00:19:05,440
probably don't want to do network

547
00:19:05,440 --> 00:19:08,160
address thing fine so we want to find

548
00:19:08,160 --> 00:19:10,640
out that there's some proof

549
00:19:10,640 --> 00:19:12,080
that the request i'm getting is

550
00:19:12,080 --> 00:19:13,679
authentic it's actually coming from the

551
00:19:13,679 --> 00:19:15,120
service right which is what

552
00:19:15,120 --> 00:19:17,440
authentication does right so the

553
00:19:17,440 --> 00:19:19,039
authentic request will have some

554
00:19:19,039 --> 00:19:20,720
verifiable proof

555
00:19:20,720 --> 00:19:22,080
and the

556
00:19:22,080 --> 00:19:24,080
malicious ones will have no proof and i

557
00:19:24,080 --> 00:19:25,919
can tell them apart by that right it

558
00:19:25,919 --> 00:19:28,160
could be like a secret a token whatever

559
00:19:28,160 --> 00:19:29,919
right signature

560
00:19:29,919 --> 00:19:30,799
um

561
00:19:30,799 --> 00:19:33,200
five out of ten don't offer any

562
00:19:33,200 --> 00:19:34,720
authentication so

563
00:19:34,720 --> 00:19:36,400
well i i take it or leave it they give

564
00:19:36,400 --> 00:19:38,799
me that ip address option

565
00:19:38,799 --> 00:19:39,840
um

566
00:19:39,840 --> 00:19:41,760
from the other five that do any

567
00:19:41,760 --> 00:19:44,720
authentication um one does the secret

568
00:19:44,720 --> 00:19:47,200
url option

569
00:19:47,200 --> 00:19:49,760
three one does basic off

570
00:19:49,760 --> 00:19:52,240
and three do hmac so i will not talk

571
00:19:52,240 --> 00:19:55,520
about basic oauth um

572
00:19:55,520 --> 00:19:57,360
because you all know about these

573
00:19:57,360 --> 00:19:59,760
problems that's boring um so let's talk

574
00:19:59,760 --> 00:20:01,360
about the secret url

575
00:20:01,360 --> 00:20:03,600
piece of service documentation as a best

576
00:20:03,600 --> 00:20:05,280
practice provide a callback url that's

577
00:20:05,280 --> 00:20:06,880
not guessable and make sure that you can

578
00:20:06,880 --> 00:20:08,799
easily change it

579
00:20:08,799 --> 00:20:10,400
like something like this right so so the

580
00:20:10,400 --> 00:20:13,200
idea behind this is that

581
00:20:13,200 --> 00:20:14,880
my callback url

582
00:20:14,880 --> 00:20:17,200
is has has some part there's some

583
00:20:17,200 --> 00:20:19,600
component that is not guessable right

584
00:20:19,600 --> 00:20:21,919
so an attacker who's making a call will

585
00:20:21,919 --> 00:20:24,240
not know that callback url

586
00:20:24,240 --> 00:20:26,320
so they will not be able to make a call

587
00:20:26,320 --> 00:20:28,320
to me right they can call my server but

588
00:20:28,320 --> 00:20:29,919
they don't know the path right for

589
00:20:29,919 --> 00:20:32,080
example right or i can have a parameter

590
00:20:32,080 --> 00:20:32,960
okay

591
00:20:32,960 --> 00:20:34,240
that's that's really like a static

592
00:20:34,240 --> 00:20:36,159
secret right it's it's it's

593
00:20:36,159 --> 00:20:38,000
security-wise it's equivalent to basic

594
00:20:38,000 --> 00:20:39,840
all right

595
00:20:39,840 --> 00:20:41,120
um okay

596
00:20:41,120 --> 00:20:42,080
but

597
00:20:42,080 --> 00:20:43,520
imagine like i'm a developer i'm not a

598
00:20:43,520 --> 00:20:45,840
security person and i'm just doing this

599
00:20:45,840 --> 00:20:47,600
on a site so

600
00:20:47,600 --> 00:20:49,840
it's a best practice

601
00:20:49,840 --> 00:20:51,120
like

602
00:20:51,120 --> 00:20:53,760
it's very confusing right so like

603
00:20:53,760 --> 00:20:57,919
if i don't do it am i insecure

604
00:20:57,919 --> 00:21:00,480
or not right i again i'm reading that in

605
00:21:00,480 --> 00:21:02,400
the middle of something i'm just trying

606
00:21:02,400 --> 00:21:04,480
to make things work

607
00:21:04,480 --> 00:21:06,000
um

608
00:21:06,000 --> 00:21:08,320
and i i it's very unclear whether this

609
00:21:08,320 --> 00:21:09,760
is something important for security or

610
00:21:09,760 --> 00:21:12,080
not it's like some best practice right

611
00:21:12,080 --> 00:21:14,480
and it's supposed to be not kissable

612
00:21:14,480 --> 00:21:15,600
um like

613
00:21:15,600 --> 00:21:18,480
is this not kissable

614
00:21:18,480 --> 00:21:20,960
like they don't tell you what it means

615
00:21:20,960 --> 00:21:22,960
to be not guessable

616
00:21:22,960 --> 00:21:24,400
this looks pretty noticeable would you

617
00:21:24,400 --> 00:21:26,010
consider this to be like secure

618
00:21:26,010 --> 00:21:28,159
[Music]

619
00:21:28,159 --> 00:21:30,799
and like easy change it why why why and

620
00:21:30,799 --> 00:21:33,520
when like again they don't go further

621
00:21:33,520 --> 00:21:35,440
with that so this is also confusing

622
00:21:35,440 --> 00:21:37,600
should i be changing that regularly or

623
00:21:37,600 --> 00:21:39,919
like when would i change it right and

624
00:21:39,919 --> 00:21:41,679
most importantly

625
00:21:41,679 --> 00:21:44,720
like urls are terrible secrets

626
00:21:44,720 --> 00:21:45,919
because now

627
00:21:45,919 --> 00:21:48,000
if i have a password right in my code

628
00:21:48,000 --> 00:21:51,039
i'm handling password in my system i

629
00:21:51,039 --> 00:21:53,600
know it's a password right or secret or

630
00:21:53,600 --> 00:21:54,960
a key

631
00:21:54,960 --> 00:21:57,039
um so there would be developers be

632
00:21:57,039 --> 00:21:59,280
primed to like treat it with respect

633
00:21:59,280 --> 00:22:01,039
but now there's this url

634
00:22:01,039 --> 00:22:02,960
right like somebody else may be setting

635
00:22:02,960 --> 00:22:04,640
the url somebody may be maybe

636
00:22:04,640 --> 00:22:06,400
implementing an application

637
00:22:06,400 --> 00:22:08,480
uh this is unclear whether or not this

638
00:22:08,480 --> 00:22:09,919
is something they should be handling

639
00:22:09,919 --> 00:22:12,080
correctly right they are handling url

640
00:22:12,080 --> 00:22:13,840
but that url is a secret right they may

641
00:22:13,840 --> 00:22:15,280
mishandle that

642
00:22:15,280 --> 00:22:16,080
um

643
00:22:16,080 --> 00:22:18,640
so finally um the last ones are doing

644
00:22:18,640 --> 00:22:20,559
hmac

645
00:22:20,559 --> 00:22:22,400
um

646
00:22:22,400 --> 00:22:24,799
sorry i have 45

647
00:22:24,799 --> 00:22:28,639
oh it's uh 45 minutes

648
00:22:29,919 --> 00:22:31,039
okay

649
00:22:31,039 --> 00:22:32,320
so i still have

650
00:22:32,320 --> 00:22:34,559
20 minutes right okay

651
00:22:34,559 --> 00:22:37,280
um sorry um so

652
00:22:37,280 --> 00:22:40,400
um hmac so free do hmac right so if you

653
00:22:40,400 --> 00:22:42,720
know what hmac is

654
00:22:42,720 --> 00:22:44,799
um if you don't

655
00:22:44,799 --> 00:22:46,799
very quickly

656
00:22:46,799 --> 00:22:50,640
you take some piece of text

657
00:22:50,640 --> 00:22:51,760
data

658
00:22:51,760 --> 00:22:53,200
you

659
00:22:53,200 --> 00:22:56,559
add a key that you know and the verifier

660
00:22:56,559 --> 00:22:58,480
knows and you hash them together right

661
00:22:58,480 --> 00:23:00,799
so you just append one with another and

662
00:23:00,799 --> 00:23:03,600
you hash them right in the simplest form

663
00:23:03,600 --> 00:23:05,440
right and you send that

664
00:23:05,440 --> 00:23:06,880
over the channel so you send the data

665
00:23:06,880 --> 00:23:09,200
and you send that that hash of the data

666
00:23:09,200 --> 00:23:11,039
with the key but you never send the key

667
00:23:11,039 --> 00:23:13,440
so somebody who has the key can repeat

668
00:23:13,440 --> 00:23:15,919
the process and compare that the thing

669
00:23:15,919 --> 00:23:18,320
that they got

670
00:23:18,320 --> 00:23:21,679
is uh is is the same as as as the one

671
00:23:21,679 --> 00:23:24,000
they generated so it's pretty neat right

672
00:23:24,000 --> 00:23:25,280
because like you don't have to transfer

673
00:23:25,280 --> 00:23:28,400
the key ever every time right um so like

674
00:23:28,400 --> 00:23:30,400
if i got my hmac it only works for that

675
00:23:30,400 --> 00:23:31,840
piece of data right it doesn't work for

676
00:23:31,840 --> 00:23:34,400
any other data if i add a timestamp it's

677
00:23:34,400 --> 00:23:37,840
so it's decent right

678
00:23:38,240 --> 00:23:40,000
okay but like

679
00:23:40,000 --> 00:23:43,120
as a developer right i may be

680
00:23:43,120 --> 00:23:45,360
um busy i might not understand right it

681
00:23:45,360 --> 00:23:47,600
adds a bit of additional problems to my

682
00:23:47,600 --> 00:23:48,960
code now i have to do some hash

683
00:23:48,960 --> 00:23:51,039
functions and stuff and like maybe i'm

684
00:23:51,039 --> 00:23:54,480
busy so the code looks very similar

685
00:23:54,480 --> 00:23:56,159
to me if it's not having that

686
00:23:56,159 --> 00:23:58,000
verification everything still works

687
00:23:58,000 --> 00:23:58,960
right

688
00:23:58,960 --> 00:24:03,679
i just removed that piece from my site

689
00:24:03,679 --> 00:24:05,039
and it still works doesn't nothing

690
00:24:05,039 --> 00:24:07,760
breaks right if i stop authenticating

691
00:24:07,760 --> 00:24:09,360
outgoing calls to the service of course

692
00:24:09,360 --> 00:24:11,120
they will just just reject them right

693
00:24:11,120 --> 00:24:13,039
but if i stop verifying signatures on my

694
00:24:13,039 --> 00:24:14,480
site

695
00:24:14,480 --> 00:24:16,880
um everything works right and as a

696
00:24:16,880 --> 00:24:18,480
developer i may not know that this is

697
00:24:18,480 --> 00:24:20,320
important right or like that this is

698
00:24:20,320 --> 00:24:22,720
something i should be doing

699
00:24:22,720 --> 00:24:24,000
um so

700
00:24:24,000 --> 00:24:27,600
it's important that the provider service

701
00:24:27,600 --> 00:24:29,360
communicates that clearly to those

702
00:24:29,360 --> 00:24:32,360
developers

703
00:24:33,200 --> 00:24:35,360
sometimes they don't right so this is

704
00:24:35,360 --> 00:24:39,600
again snippets from real life um

705
00:24:40,559 --> 00:24:43,039
pieces of documentation so

706
00:24:43,039 --> 00:24:46,159
for added security the webhooks are sent

707
00:24:46,159 --> 00:24:48,799
verified right um for added security

708
00:24:48,799 --> 00:24:51,679
this is when they explain hbac stuff

709
00:24:51,679 --> 00:24:53,600
okay so i have to do this complicated

710
00:24:53,600 --> 00:24:55,679
thing with hash functions and keys and

711
00:24:55,679 --> 00:24:58,400
this is for added security so it's it's

712
00:24:58,400 --> 00:25:00,480
kind of secure

713
00:25:00,480 --> 00:25:02,799
by default this is some added security

714
00:25:02,799 --> 00:25:04,799
do i need that added security that they

715
00:25:04,799 --> 00:25:06,720
are talking about

716
00:25:06,720 --> 00:25:08,559
maybe not

717
00:25:08,559 --> 00:25:10,640
um so maybe i can skip that right it's

718
00:25:10,640 --> 00:25:11,760
like it's

719
00:25:11,760 --> 00:25:13,679
four o'clock right and i have to go back

720
00:25:13,679 --> 00:25:16,320
home so so maybe maybe i don't need it

721
00:25:16,320 --> 00:25:17,919
out of security i'll go go back to

722
00:25:17,919 --> 00:25:19,360
tomorrow of course i don't remember

723
00:25:19,360 --> 00:25:21,760
about that right or the service can

724
00:25:21,760 --> 00:25:24,400
optionally sign the webhook events

725
00:25:24,400 --> 00:25:26,400
so so like you have to

726
00:25:26,400 --> 00:25:29,200
turn that thing on in the service to

727
00:25:29,200 --> 00:25:32,159
like authenticate outgoing calls in your

728
00:25:32,159 --> 00:25:33,440
configuration

729
00:25:33,440 --> 00:25:35,760
uh but it's optional they can optionally

730
00:25:35,760 --> 00:25:38,000
sign it um

731
00:25:38,000 --> 00:25:39,120
again

732
00:25:39,120 --> 00:25:42,240
why why just not to make it default and

733
00:25:42,240 --> 00:25:43,840
again this is very confusing right so

734
00:25:43,840 --> 00:25:45,679
now we are asking user we are telling

735
00:25:45,679 --> 00:25:47,760
them that there is this hmac thing but

736
00:25:47,760 --> 00:25:49,679
we are not explaining clearly that this

737
00:25:49,679 --> 00:25:51,039
is something they should be totally

738
00:25:51,039 --> 00:25:53,279
doing

739
00:25:53,279 --> 00:25:57,559
so a couple of other things um

740
00:25:58,320 --> 00:26:00,880
so key generation um

741
00:26:00,880 --> 00:26:03,440
for hmac i have to generate a key right

742
00:26:03,440 --> 00:26:05,440
and this hmac is as secure as the key

743
00:26:05,440 --> 00:26:07,360
that i have if my key is you know easy

744
00:26:07,360 --> 00:26:09,200
to guess somebody can just manufacture

745
00:26:09,200 --> 00:26:10,960
the signatures and send them

746
00:26:10,960 --> 00:26:13,840
um just one service provides a sample of

747
00:26:13,840 --> 00:26:16,080
like how to properly generate hmac like

748
00:26:16,080 --> 00:26:18,880
randomly and so on like that key

749
00:26:18,880 --> 00:26:21,360
non does it for a customer right which

750
00:26:21,360 --> 00:26:23,440
could be super cool right like okay they

751
00:26:23,440 --> 00:26:24,960
know how to generate correct key they

752
00:26:24,960 --> 00:26:26,960
can just give you that key say hey

753
00:26:26,960 --> 00:26:28,880
we will be sending you those web hooks

754
00:26:28,880 --> 00:26:32,880
signed with this key just use that

755
00:26:35,360 --> 00:26:36,559
some have

756
00:26:36,559 --> 00:26:38,880
web ui screenshots with key that is like

757
00:26:38,880 --> 00:26:40,720
a award

758
00:26:40,720 --> 00:26:42,960
or or have docs with a key that is like

759
00:26:42,960 --> 00:26:46,080
fubar so so again as a developer who

760
00:26:46,080 --> 00:26:48,640
doesn't know much about security i am

761
00:26:48,640 --> 00:26:50,080
not primed to think that this is

762
00:26:50,080 --> 00:26:51,520
something that i should generate as like

763
00:26:51,520 --> 00:26:52,840
a you know

764
00:26:52,840 --> 00:26:56,000
128-bit random number right

765
00:26:56,000 --> 00:26:58,559
no i they have a they have a password

766
00:26:58,559 --> 00:27:01,200
right or a word so i can use that right

767
00:27:01,200 --> 00:27:03,440
because again they don't tell me

768
00:27:03,440 --> 00:27:04,400
um

769
00:27:04,400 --> 00:27:07,200
some reuse api key so the key that they

770
00:27:07,200 --> 00:27:09,840
that you're supposed to use to send

771
00:27:09,840 --> 00:27:12,080
outgoing request

772
00:27:12,080 --> 00:27:15,600
uh in in like authorization header

773
00:27:15,600 --> 00:27:19,360
um is also used by them to sign that

774
00:27:19,360 --> 00:27:21,039
that's um

775
00:27:21,039 --> 00:27:22,640
pretty

776
00:27:22,640 --> 00:27:24,640
that's a bad practice because now i have

777
00:27:24,640 --> 00:27:26,720
to handle that key that allows me to

778
00:27:26,720 --> 00:27:28,240
control that service

779
00:27:28,240 --> 00:27:29,840
in the same place maybe this is like

780
00:27:29,840 --> 00:27:31,760
different endpoints now i have to handle

781
00:27:31,760 --> 00:27:33,279
it in more places it makes it more

782
00:27:33,279 --> 00:27:36,559
likely that i will misuse it

783
00:27:36,559 --> 00:27:39,200
nobody does public key signatures which

784
00:27:39,200 --> 00:27:42,000
would be super cool

785
00:27:42,000 --> 00:27:43,440
because then

786
00:27:43,440 --> 00:27:45,120
the only thing i have to handle is a

787
00:27:45,120 --> 00:27:47,039
public key to verify

788
00:27:47,039 --> 00:27:48,640
so i don't have a private key that

789
00:27:48,640 --> 00:27:50,880
somebody if i lose it if i can put it on

790
00:27:50,880 --> 00:27:52,399
on facebook

791
00:27:52,399 --> 00:27:54,480
nobody cares right it's a public key

792
00:27:54,480 --> 00:27:57,360
that i use to verify things

793
00:27:57,360 --> 00:27:59,679
and i don't have to handle private key

794
00:27:59,679 --> 00:28:01,279
and i don't need that private key for

795
00:28:01,279 --> 00:28:02,960
anything

796
00:28:02,960 --> 00:28:05,200
um

797
00:28:05,679 --> 00:28:08,559
right so code samples again uh there's

798
00:28:08,559 --> 00:28:10,640
boilerplate application for webhook

799
00:28:10,640 --> 00:28:12,960
handler that is just not implementing

800
00:28:12,960 --> 00:28:14,960
hmac verification even though they send

801
00:28:14,960 --> 00:28:16,559
this right so that the sample code

802
00:28:16,559 --> 00:28:18,320
doesn't do that

803
00:28:18,320 --> 00:28:20,880
some uh sample codes will have

804
00:28:20,880 --> 00:28:23,279
hard-coded key right which is again

805
00:28:23,279 --> 00:28:25,520
terrible terrible thing to have

806
00:28:25,520 --> 00:28:27,200
especially if you're now storing this

807
00:28:27,200 --> 00:28:28,559
code in

808
00:28:28,559 --> 00:28:32,480
your code repository and so forth um

809
00:28:32,480 --> 00:28:35,279
a terrible example so one provider gives

810
00:28:35,279 --> 00:28:37,279
you a testing tool so that you can test

811
00:28:37,279 --> 00:28:39,440
whether your web hook works but in order

812
00:28:39,440 --> 00:28:40,960
for you to use that tool you have to

813
00:28:40,960 --> 00:28:42,559
turn off the authentication because

814
00:28:42,559 --> 00:28:44,000
testing tool doesn't authenticate

815
00:28:44,000 --> 00:28:45,840
outgoing requests

816
00:28:45,840 --> 00:28:47,919
so imagine like oh something is wrong

817
00:28:47,919 --> 00:28:49,360
and you get called in the middle of the

818
00:28:49,360 --> 00:28:51,120
night so you run the testing tool oh you

819
00:28:51,120 --> 00:28:52,960
turn off authentication right probably

820
00:28:52,960 --> 00:28:55,279
like comment it out in your

821
00:28:55,279 --> 00:28:56,840
note uh

822
00:28:56,840 --> 00:28:59,200
script you never turn it off turn it on

823
00:28:59,200 --> 00:29:01,600
again because it's like oh you sold your

824
00:29:01,600 --> 00:29:03,440
problem right the thing started working

825
00:29:03,440 --> 00:29:04,320
again

826
00:29:04,320 --> 00:29:06,880
um the testing tool forced you to do

827
00:29:06,880 --> 00:29:09,919
something insecure right this is bad

828
00:29:09,919 --> 00:29:11,360
um

829
00:29:11,360 --> 00:29:13,039
yeah so so with all of that like let's

830
00:29:13,039 --> 00:29:14,640
think of the day in the life of a

831
00:29:14,640 --> 00:29:15,919
developer who's implementing that

832
00:29:15,919 --> 00:29:17,279
webhook

833
00:29:17,279 --> 00:29:19,919
uh so they go and register

834
00:29:19,919 --> 00:29:21,760
their web hook right on on the service

835
00:29:21,760 --> 00:29:24,240
they find out about it right they find

836
00:29:24,240 --> 00:29:27,200
some sample code they may deal with

837
00:29:27,200 --> 00:29:29,360
with network address

838
00:29:29,360 --> 00:29:30,880
whether or not to do that they may

839
00:29:30,880 --> 00:29:32,240
encounter that

840
00:29:32,240 --> 00:29:33,679
um so

841
00:29:33,679 --> 00:29:35,840
so this may or may not be some security

842
00:29:35,840 --> 00:29:37,760
problem so they do some coding and they

843
00:29:37,760 --> 00:29:40,080
encounter this tls which they don't know

844
00:29:40,080 --> 00:29:41,840
that they have to do and maybe they do

845
00:29:41,840 --> 00:29:42,559
but

846
00:29:42,559 --> 00:29:45,120
they see all the examples with http so

847
00:29:45,120 --> 00:29:47,520
so they don't bother maybe they do

848
00:29:47,520 --> 00:29:49,919
uh sorry they do more coding

849
00:29:49,919 --> 00:29:50,799
um

850
00:29:50,799 --> 00:29:52,159
and then it's like okay do i do

851
00:29:52,159 --> 00:29:54,480
authentication

852
00:29:54,480 --> 00:29:57,200
provided that they use a service that is

853
00:29:57,200 --> 00:29:59,520
actually authenticating those calls

854
00:29:59,520 --> 00:30:01,120
and then

855
00:30:01,120 --> 00:30:03,039
that they understand that they need to

856
00:30:03,039 --> 00:30:05,120
do it and then that they will do it

857
00:30:05,120 --> 00:30:06,640
correctly

858
00:30:06,640 --> 00:30:09,200
okay uh again with documentation this

859
00:30:09,200 --> 00:30:11,840
may be confusing so some more coding

860
00:30:11,840 --> 00:30:14,080
okay so so it's if it's an hmac maybe

861
00:30:14,080 --> 00:30:15,600
they have to think about how to do it

862
00:30:15,600 --> 00:30:16,640
test it

863
00:30:16,640 --> 00:30:19,360
uh handle the key somehow and they will

864
00:30:19,360 --> 00:30:21,600
do some coding and testing right so

865
00:30:21,600 --> 00:30:22,480
pretty

866
00:30:22,480 --> 00:30:24,320
many things right that the developer has

867
00:30:24,320 --> 00:30:26,000
to do in order to implement web hooks

868
00:30:26,000 --> 00:30:27,840
and all of those points are when they

869
00:30:27,840 --> 00:30:30,320
can get into traffic of doing something

870
00:30:30,320 --> 00:30:31,600
insecure

871
00:30:31,600 --> 00:30:33,760
and the provider is not helping

872
00:30:33,760 --> 00:30:35,279
sometimes with

873
00:30:35,279 --> 00:30:38,559
like bad design insecure defaults and

874
00:30:38,559 --> 00:30:40,559
bad documentation right and that

875
00:30:40,559 --> 00:30:42,320
developer is not doing that

876
00:30:42,320 --> 00:30:43,760
this is not the only thing that they do

877
00:30:43,760 --> 00:30:46,559
right on that day they may be you know

878
00:30:46,559 --> 00:30:48,399
some fixing some ui bug and updating

879
00:30:48,399 --> 00:30:50,880
docker file and dealing with some

880
00:30:50,880 --> 00:30:54,240
database issue doing that thing

881
00:30:54,240 --> 00:30:56,399
and like maybe setting yet another web

882
00:30:56,399 --> 00:30:57,760
hook right for integration with a

883
00:30:57,760 --> 00:30:59,760
different service that has completely

884
00:30:59,760 --> 00:31:01,279
different documentation and different

885
00:31:01,279 --> 00:31:04,720
defaults and different examples right

886
00:31:04,720 --> 00:31:06,799
okay so with webhooks

887
00:31:06,799 --> 00:31:08,640
um

888
00:31:08,640 --> 00:31:10,159
what are the best practices what we can

889
00:31:10,159 --> 00:31:12,240
learn from from that

890
00:31:12,240 --> 00:31:14,000
uh so first of all like avoid lazy

891
00:31:14,000 --> 00:31:16,799
security controls right if you're you're

892
00:31:16,799 --> 00:31:19,679
so so my appeal is to people who are

893
00:31:19,679 --> 00:31:22,640
in security industry who like

894
00:31:22,640 --> 00:31:24,799
have influence on that right control how

895
00:31:24,799 --> 00:31:25,840
people do

896
00:31:25,840 --> 00:31:27,679
interfaces or or building those

897
00:31:27,679 --> 00:31:28,880
interfaces

898
00:31:28,880 --> 00:31:31,039
so avoid lazy security controls what is

899
00:31:31,039 --> 00:31:32,960
lazy security control like not

900
00:31:32,960 --> 00:31:35,279
implementing authentication and giving

901
00:31:35,279 --> 00:31:37,440
people a list of ip addresses this is

902
00:31:37,440 --> 00:31:39,600
lazy right like oh i did nothing it's

903
00:31:39,600 --> 00:31:41,840
like you do the thing which is not

904
00:31:41,840 --> 00:31:45,120
modern security thing

905
00:31:45,200 --> 00:31:47,679
so no don't do network so so so this is

906
00:31:47,679 --> 00:31:49,919
like a general guidance and this is how

907
00:31:49,919 --> 00:31:51,519
it would work for web hooks right so

908
00:31:51,519 --> 00:31:54,000
like no don't do network controls

909
00:31:54,000 --> 00:31:56,320
now you may provide that list of ip

910
00:31:56,320 --> 00:31:58,720
addresses because like for example some

911
00:31:58,720 --> 00:32:00,559
enterprises may be interested to like

912
00:32:00,559 --> 00:32:02,720
admit certain traffic on their like

913
00:32:02,720 --> 00:32:05,279
boundary firewall right so this is still

914
00:32:05,279 --> 00:32:07,919
useful as a defense in depth right so so

915
00:32:07,919 --> 00:32:09,760
some people may ask you what are your ip

916
00:32:09,760 --> 00:32:12,080
addresses but when you do that i deliver

917
00:32:12,080 --> 00:32:14,640
them via api right so i can just call

918
00:32:14,640 --> 00:32:17,440
and get like list of addresses

919
00:32:17,440 --> 00:32:18,960
valid now

920
00:32:18,960 --> 00:32:20,320
for me

921
00:32:20,320 --> 00:32:22,559
over encrypted channel

922
00:32:22,559 --> 00:32:24,080
that i can trust

923
00:32:24,080 --> 00:32:26,240
and be clear about schedule so if i'm

924
00:32:26,240 --> 00:32:27,760
implementing any controls like i know

925
00:32:27,760 --> 00:32:29,679
when they will change maybe like overlap

926
00:32:29,679 --> 00:32:31,600
them at them earlier right so i know

927
00:32:31,600 --> 00:32:32,320
that

928
00:32:32,320 --> 00:32:34,559
like so tell them like okay

929
00:32:34,559 --> 00:32:36,000
you know if you check them once a week

930
00:32:36,000 --> 00:32:37,360
you will be fine

931
00:32:37,360 --> 00:32:39,200
right because we will never turn them on

932
00:32:39,200 --> 00:32:44,240
like turn them off with shorter heads up

933
00:32:44,240 --> 00:32:48,559
okay so explain risk risks clearly so

934
00:32:48,559 --> 00:32:50,559
for rep hooks like explain plain text

935
00:32:50,559 --> 00:32:52,320
communication why it's wrong right they

936
00:32:52,320 --> 00:32:54,240
don't do that like maybe two those

937
00:32:54,240 --> 00:32:57,360
recommend https so explain them like you

938
00:32:57,360 --> 00:32:59,200
totally don't do this right this is

939
00:32:59,200 --> 00:33:02,720
wrong you should be using tls uh explain

940
00:33:02,720 --> 00:33:05,039
why authentication is is is make your

941
00:33:05,039 --> 00:33:06,960
breaker of security in for your web hook

942
00:33:06,960 --> 00:33:09,360
right it's not like added security thing

943
00:33:09,360 --> 00:33:12,320
or best practice it's it's it's secure

944
00:33:12,320 --> 00:33:13,760
or insecure

945
00:33:13,760 --> 00:33:15,279
talk about key strength and how to

946
00:33:15,279 --> 00:33:17,519
generate it correctly

947
00:33:17,519 --> 00:33:19,600
um

948
00:33:19,600 --> 00:33:23,120
do not provide insecure options

949
00:33:23,120 --> 00:33:27,360
so this is for example with tls like

950
00:33:27,360 --> 00:33:29,279
don't offer

951
00:33:29,279 --> 00:33:32,000
http endpoints right like

952
00:33:32,000 --> 00:33:34,720
people shouldn't be using them right

953
00:33:34,720 --> 00:33:38,240
don't don't do that just don't um

954
00:33:38,240 --> 00:33:40,000
outgoing request authentication by

955
00:33:40,000 --> 00:33:42,159
default again don't make authenticating

956
00:33:42,159 --> 00:33:44,799
of your outgoing requests an option

957
00:33:44,799 --> 00:33:47,519
right like like who would want not to

958
00:33:47,519 --> 00:33:49,200
authenticate them

959
00:33:49,200 --> 00:33:50,960
this is like everybody should be doing

960
00:33:50,960 --> 00:33:53,200
that this is what the system is about

961
00:33:53,200 --> 00:33:55,440
um

962
00:33:56,720 --> 00:33:58,880
like for example with the you know

963
00:33:58,880 --> 00:34:01,120
authenticated apis in the

964
00:34:01,120 --> 00:34:04,159
in the you know car chargers um

965
00:34:04,159 --> 00:34:06,159
authentication setup required so i

966
00:34:06,159 --> 00:34:07,760
cannot make it an option like when i'm

967
00:34:07,760 --> 00:34:09,599
creating a web hoot i should be

968
00:34:09,599 --> 00:34:12,239
generating the key right so like i know

969
00:34:12,239 --> 00:34:14,399
oh this is part of my workflow right

970
00:34:14,399 --> 00:34:17,040
it's not like something else i do

971
00:34:17,040 --> 00:34:20,480
um in in addition to my registration

972
00:34:20,480 --> 00:34:22,320
this is part of that registration it

973
00:34:22,320 --> 00:34:26,879
drives me to think about authentication

974
00:34:26,960 --> 00:34:27,918
um

975
00:34:27,918 --> 00:34:29,679
don't delegate security tasks if you can

976
00:34:29,679 --> 00:34:30,879
do something

977
00:34:30,879 --> 00:34:33,520
in in your platform like do it don't

978
00:34:33,520 --> 00:34:35,599
i'll use this and now go and generate

979
00:34:35,599 --> 00:34:37,280
the key right

980
00:34:37,280 --> 00:34:39,280
you generate the key why not right give

981
00:34:39,280 --> 00:34:40,879
them the key

982
00:34:40,879 --> 00:34:43,598
automatically

983
00:34:43,679 --> 00:34:45,760
you can also do automatic authentication

984
00:34:45,760 --> 00:34:47,040
test

985
00:34:47,040 --> 00:34:49,280
just uh again nobody does

986
00:34:49,280 --> 00:34:52,639
at least not nobody i i know about um so

987
00:34:52,639 --> 00:34:54,239
so when somebody is like enabling the

988
00:34:54,239 --> 00:34:55,839
web hook right

989
00:34:55,839 --> 00:34:57,520
you can check if they are doing

990
00:34:57,520 --> 00:34:59,119
authentication like send them wrong

991
00:34:59,119 --> 00:35:01,200
requests with with missing header or

992
00:35:01,200 --> 00:35:03,440
with wrong signature and tell them hey

993
00:35:03,440 --> 00:35:05,040
you don't have authentication we will

994
00:35:05,040 --> 00:35:06,640
not enable it

995
00:35:06,640 --> 00:35:08,640
right why not right this is super easy

996
00:35:08,640 --> 00:35:09,599
to do

997
00:35:09,599 --> 00:35:10,960
or at least like

998
00:35:10,960 --> 00:35:12,480
you can decide whether you want to just

999
00:35:12,480 --> 00:35:14,079
alert them

1000
00:35:14,079 --> 00:35:17,440
or maybe do it periodically or make it

1001
00:35:17,440 --> 00:35:18,960
something that you totally have to do

1002
00:35:18,960 --> 00:35:22,400
before it starts working right if if you

1003
00:35:22,400 --> 00:35:24,400
not stop if you don't send them any

1004
00:35:24,400 --> 00:35:26,320
message before they have authentication

1005
00:35:26,320 --> 00:35:27,760
implemented

1006
00:35:27,760 --> 00:35:29,440
like everybody will do it right and if

1007
00:35:29,440 --> 00:35:31,440
you check it periodically and maybe

1008
00:35:31,440 --> 00:35:33,920
alert them that's that's pretty much you

1009
00:35:33,920 --> 00:35:34,960
know

1010
00:35:34,960 --> 00:35:37,599
like solves all of those problems right

1011
00:35:37,599 --> 00:35:40,079
and again it's very easy to do

1012
00:35:40,079 --> 00:35:41,680
fairly easy right

1013
00:35:41,680 --> 00:35:42,800
because you're already sending those

1014
00:35:42,800 --> 00:35:44,480
authenticated requests in your code

1015
00:35:44,480 --> 00:35:47,520
right you have that code

1016
00:35:49,200 --> 00:35:51,280
code samples right so code samples

1017
00:35:51,280 --> 00:35:53,200
should be production quality

1018
00:35:53,200 --> 00:35:54,480
because it will be somebody else's

1019
00:35:54,480 --> 00:35:55,839
production code

1020
00:35:55,839 --> 00:35:58,400
if you're offering them to developers

1021
00:35:58,400 --> 00:36:00,640
like you assume that they will just go

1022
00:36:00,640 --> 00:36:02,240
take that code and build applications

1023
00:36:02,240 --> 00:36:04,079
from that so don't implement like poor

1024
00:36:04,079 --> 00:36:07,040
code with no authentication http by

1025
00:36:07,040 --> 00:36:10,240
default and hard coded secrets

1026
00:36:10,240 --> 00:36:11,359
because

1027
00:36:11,359 --> 00:36:13,119
like they will not know that this is

1028
00:36:13,119 --> 00:36:14,640
wrong right they were like oh i got it

1029
00:36:14,640 --> 00:36:16,240
from this provider i'm trusting that

1030
00:36:16,240 --> 00:36:20,079
they did the whole thing securely um so

1031
00:36:20,079 --> 00:36:23,599
again you're showing them bad examples

1032
00:36:23,599 --> 00:36:24,640
um

1033
00:36:24,640 --> 00:36:26,480
or they will so so they will think this

1034
00:36:26,480 --> 00:36:29,119
is fine or just building poor thing for

1035
00:36:29,119 --> 00:36:33,119
them to to work on top of okay

1036
00:36:33,119 --> 00:36:35,440
um

1037
00:36:39,200 --> 00:36:40,880
isolated transparent debugging so this

1038
00:36:40,880 --> 00:36:42,480
is interesting so

1039
00:36:42,480 --> 00:36:44,800
um the reason why many of those don't

1040
00:36:44,800 --> 00:36:47,520
have those web hooks authenticated or

1041
00:36:47,520 --> 00:36:50,160
doing https is because like people want

1042
00:36:50,160 --> 00:36:51,760
to just you know test things right and

1043
00:36:51,760 --> 00:36:52,880
they want to don't want to generate

1044
00:36:52,880 --> 00:36:54,480
certificate and not those things okay

1045
00:36:54,480 --> 00:36:56,079
but this can be still done right you can

1046
00:36:56,079 --> 00:36:57,119
do it

1047
00:36:57,119 --> 00:36:58,560
you can be smart about it you can have

1048
00:36:58,560 --> 00:37:01,520
like oh this is this is testing mode

1049
00:37:01,520 --> 00:37:02,960
right like we will never send any

1050
00:37:02,960 --> 00:37:04,960
production data on that web hook right

1051
00:37:04,960 --> 00:37:06,839
or like you know depends on the

1052
00:37:06,839 --> 00:37:10,720
application uh what this will um

1053
00:37:10,720 --> 00:37:13,040
how this will look like but but they can

1054
00:37:13,040 --> 00:37:15,200
clearly have like a debug mode that is

1055
00:37:15,200 --> 00:37:17,200
not connected to any real data that they

1056
00:37:17,200 --> 00:37:18,880
can play with

1057
00:37:18,880 --> 00:37:20,480
uh and they this is when they can

1058
00:37:20,480 --> 00:37:22,720
disable tls or you know maybe don't do

1059
00:37:22,720 --> 00:37:25,040
authentication

1060
00:37:25,040 --> 00:37:27,440
and the moment they turn the production

1061
00:37:27,440 --> 00:37:29,119
mode all of those things are required

1062
00:37:29,119 --> 00:37:31,040
and verified right so you can have both

1063
00:37:31,040 --> 00:37:33,119
right you don't have to like not

1064
00:37:33,119 --> 00:37:36,000
authenticate like real calls or not

1065
00:37:36,000 --> 00:37:39,760
enforce https for everything

1066
00:37:39,760 --> 00:37:41,440
um so you can have like separate

1067
00:37:41,440 --> 00:37:42,960
instances or maybe separate groups again

1068
00:37:42,960 --> 00:37:44,560
this depends on what your application is

1069
00:37:44,560 --> 00:37:47,680
doing and how you construct those things

1070
00:37:47,680 --> 00:37:49,520
okay so

1071
00:37:49,520 --> 00:37:52,320
in summary right

1072
00:37:52,320 --> 00:37:54,400
this is all about the view of the system

1073
00:37:54,400 --> 00:37:55,839
right you can think about the system in

1074
00:37:55,839 --> 00:37:58,560
a minimalistic way like this is just my

1075
00:37:58,560 --> 00:38:00,640
system and my code right but maybe it's

1076
00:38:00,640 --> 00:38:02,480
my code and my users and maybe it's my

1077
00:38:02,480 --> 00:38:05,359
code and my developers and interfaces i

1078
00:38:05,359 --> 00:38:07,760
give them and those interfaces are

1079
00:38:07,760 --> 00:38:10,960
documentation and ui and samples this is

1080
00:38:10,960 --> 00:38:13,200
all part of the security story of the

1081
00:38:13,200 --> 00:38:15,119
whole system

1082
00:38:15,119 --> 00:38:18,640
so developers are part of the so human

1083
00:38:18,640 --> 00:38:20,320
are parts of the systems and systems

1084
00:38:20,320 --> 00:38:22,240
should be designed with them in mind and

1085
00:38:22,240 --> 00:38:24,320
developers are also humans and also part

1086
00:38:24,320 --> 00:38:25,920
of the system they are these new users

1087
00:38:25,920 --> 00:38:27,520
and the boundary between developer and

1088
00:38:27,520 --> 00:38:30,000
user is quite blurred

1089
00:38:30,000 --> 00:38:33,599
apis dogs and samples are all

1090
00:38:33,599 --> 00:38:35,839
developer interface and you should

1091
00:38:35,839 --> 00:38:38,160
implement them securely

1092
00:38:38,160 --> 00:38:41,440
and because poor interfaces tricks

1093
00:38:41,440 --> 00:38:43,119
developers into security bugs and it's

1094
00:38:43,119 --> 00:38:45,440
not necessarily always their fault

1095
00:38:45,440 --> 00:38:47,200
and solutions are out there and they are

1096
00:38:47,200 --> 00:38:48,960
pretty easy

1097
00:38:48,960 --> 00:38:51,119
so yeah go and do that

1098
00:38:51,119 --> 00:38:54,640
so thank you for for your time

1099
00:38:58,079 --> 00:39:00,079
and we have a couple of minutes for

1100
00:39:00,079 --> 00:39:02,480
questions

1101
00:39:08,640 --> 00:39:11,119
thank you great uh great show

1102
00:39:11,119 --> 00:39:12,960
who do you think should be responsible

1103
00:39:12,960 --> 00:39:16,000
for fixing all of these developer issues

1104
00:39:16,000 --> 00:39:18,400
ips i've encountered so many uh

1105
00:39:18,400 --> 00:39:20,320
dangerous uh instructions in

1106
00:39:20,320 --> 00:39:22,079
documentation i've been trying to send

1107
00:39:22,079 --> 00:39:24,079
emails to the security email addresses

1108
00:39:24,079 --> 00:39:26,320
of of companies but like these things

1109
00:39:26,320 --> 00:39:28,960
are do not tend to be seen as security

1110
00:39:28,960 --> 00:39:30,640
problems neither are they seen as like

1111
00:39:30,640 --> 00:39:32,560
product bugs who should be responsible

1112
00:39:32,560 --> 00:39:35,440
for fixing these uh usability issues

1113
00:39:35,440 --> 00:39:38,320
yeah yeah i i think they should have cve

1114
00:39:38,320 --> 00:39:39,599
records right

1115
00:39:39,599 --> 00:39:42,560
like but really right this is like if i

1116
00:39:42,560 --> 00:39:44,480
have a

1117
00:39:44,480 --> 00:39:45,520
sample

1118
00:39:45,520 --> 00:39:47,920
that is missing security control

1119
00:39:47,920 --> 00:39:50,640
it's a vulnerability right and

1120
00:39:50,640 --> 00:39:52,800
yeah i think this should be

1121
00:39:52,800 --> 00:39:55,040
part of the release right so so it's

1122
00:39:55,040 --> 00:39:56,720
it's more

1123
00:39:56,720 --> 00:39:58,560
you know so so i work in

1124
00:39:58,560 --> 00:40:00,720
in in in software industry right so i

1125
00:40:00,720 --> 00:40:03,119
work in in in process of developing code

1126
00:40:03,119 --> 00:40:04,800
so i have this view of like what is the

1127
00:40:04,800 --> 00:40:06,319
release right so the release of the

1128
00:40:06,319 --> 00:40:08,800
software is release of everything it's

1129
00:40:08,800 --> 00:40:11,760
release of my software and my apis and

1130
00:40:11,760 --> 00:40:14,640
my documentation and my samples

1131
00:40:14,640 --> 00:40:17,040
and then security should be responsible

1132
00:40:17,040 --> 00:40:18,800
security organization should be

1133
00:40:18,800 --> 00:40:20,960
responsible for ensuring that this is

1134
00:40:20,960 --> 00:40:22,960
all there right it's more about changes

1135
00:40:22,960 --> 00:40:24,400
of mindsets that

1136
00:40:24,400 --> 00:40:26,480
hey all those other things are still my

1137
00:40:26,480 --> 00:40:28,720
responsibility right and security is

1138
00:40:28,720 --> 00:40:31,040
important right and i know it's

1139
00:40:31,040 --> 00:40:32,880
challenging right it's it's hard to

1140
00:40:32,880 --> 00:40:36,400
explain like how it endangers the system

1141
00:40:36,400 --> 00:40:38,800
because it doesn't

1142
00:40:38,800 --> 00:40:42,480
in a small view of the system

1143
00:40:48,640 --> 00:40:49,839
just to add to that more and more

1144
00:40:49,839 --> 00:40:51,760
security teams now have an application

1145
00:40:51,760 --> 00:40:54,079
security function whose job it is to be

1146
00:40:54,079 --> 00:40:55,680
responsible for this

1147
00:40:55,680 --> 00:40:58,079
right to enforce these kind of things

1148
00:40:58,079 --> 00:41:00,319
kind of go no you can't go around

1149
00:41:00,319 --> 00:41:03,200
creating api if you are building apis as

1150
00:41:03,200 --> 00:41:04,560
a provider

1151
00:41:04,560 --> 00:41:06,000
you are not allowed to do these things

1152
00:41:06,000 --> 00:41:08,640
anymore right yes so so yeah there's

1153
00:41:08,640 --> 00:41:11,040
there's plenty of good examples in in in

1154
00:41:11,040 --> 00:41:12,800
in the industry right so like big

1155
00:41:12,800 --> 00:41:15,040
players and people who really depend on

1156
00:41:15,040 --> 00:41:17,200
that ecosystem do it correctly right

1157
00:41:17,200 --> 00:41:18,839
they do

1158
00:41:18,839 --> 00:41:23,040
um sometimes in the past this all apis

1159
00:41:23,040 --> 00:41:24,720
it was after thought right it's like oh

1160
00:41:24,720 --> 00:41:27,200
we have to add those apis so they did it

1161
00:41:27,200 --> 00:41:28,800
poorly right

1162
00:41:28,800 --> 00:41:30,160
but yeah i think this should be just

1163
00:41:30,160 --> 00:41:31,920
just like

1164
00:41:31,920 --> 00:41:34,079
in the past bad user interfaces and

1165
00:41:34,079 --> 00:41:35,839
security interfaces were not considered

1166
00:41:35,839 --> 00:41:37,920
a security problem right now they are

1167
00:41:37,920 --> 00:41:40,000
right so so i hope this will this will

1168
00:41:40,000 --> 00:41:41,359
change

1169
00:41:41,359 --> 00:41:42,160
um

1170
00:41:42,160 --> 00:41:44,960
any more questions

1171
00:41:46,160 --> 00:41:48,000
okay so so just just one more minute

1172
00:41:48,000 --> 00:41:50,240
like a quick example of if you want to

1173
00:41:50,240 --> 00:41:52,079
convince somebody that this is important

1174
00:41:52,079 --> 00:41:54,560
thing to do right um think about your

1175
00:41:54,560 --> 00:41:57,520
designing i'm designing an intersection

1176
00:41:57,520 --> 00:41:59,119
right on the road

1177
00:41:59,119 --> 00:42:01,680
and i designed it poorly and there is

1178
00:42:01,680 --> 00:42:04,240
lots of crashes right like if you look

1179
00:42:04,240 --> 00:42:06,400
at any individual crash

1180
00:42:06,400 --> 00:42:08,480
you can say oh this is this is driver's

1181
00:42:08,480 --> 00:42:10,079
fault right it's all it's always

1182
00:42:10,079 --> 00:42:11,839
driver's fault

1183
00:42:11,839 --> 00:42:14,160
right but if my intersection

1184
00:42:14,160 --> 00:42:17,040
has like twice as many crashes as as all

1185
00:42:17,040 --> 00:42:18,720
the other intersections

1186
00:42:18,720 --> 00:42:20,400
even though it's individual cases

1187
00:42:20,400 --> 00:42:22,160
driver's fault it's a bad design of an

1188
00:42:22,160 --> 00:42:24,640
intersection and just that bad design

1189
00:42:24,640 --> 00:42:26,880
contributed to those crashes

1190
00:42:26,880 --> 00:42:29,200
same with uh with like bad apis and that

1191
00:42:29,200 --> 00:42:33,399
documentation thank you

