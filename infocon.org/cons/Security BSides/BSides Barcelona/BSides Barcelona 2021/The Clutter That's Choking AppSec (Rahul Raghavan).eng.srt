1
00:00:07,359 --> 00:00:10,359
okay

2
00:00:19,199 --> 00:00:21,840
okay so i think we can give you a um a

3
00:00:21,840 --> 00:00:24,000
star on your presentation so first of

4
00:00:24,000 --> 00:00:26,480
all thanks for being here didn't you

5
00:00:26,480 --> 00:00:29,519
participate in the besides barcelona

6
00:00:29,519 --> 00:00:30,960
it's always good you know to see

7
00:00:30,960 --> 00:00:34,480
presentations around absec so yeah the

8
00:00:34,480 --> 00:00:37,920
the floor is yours all the best

9
00:00:37,920 --> 00:00:39,440
thank you so much thanks for having me

10
00:00:39,440 --> 00:00:41,520
here it's the first time

11
00:00:41,520 --> 00:00:43,840
i'm glad that you'll be part of this uh

12
00:00:43,840 --> 00:00:46,559
presentation this time so uh welcome

13
00:00:46,559 --> 00:00:49,280
everybody to who is listening online

14
00:00:49,280 --> 00:00:51,520
live now or later on at the live streams

15
00:00:51,520 --> 00:00:53,920
recording through the presentation um

16
00:00:53,920 --> 00:00:56,399
the clutter that's shocking upset uh

17
00:00:56,399 --> 00:00:58,160
before we get started a little bit about

18
00:00:58,160 --> 00:00:59,520
myself my name is

19
00:00:59,520 --> 00:01:03,280
one of the co-founders of p45 um we are

20
00:01:03,280 --> 00:01:05,040
an application security company

21
00:01:05,040 --> 00:01:06,720
essentially kind of helping

22
00:01:06,720 --> 00:01:08,880
um product teams across the world in

23
00:01:08,880 --> 00:01:10,400
terms of implementing and scaling

24
00:01:10,400 --> 00:01:13,439
application security uh programs um

25
00:01:13,439 --> 00:01:15,680
personally uh things that keep me at

26
00:01:15,680 --> 00:01:18,240
night keep me excited uh in the aztec

27
00:01:18,240 --> 00:01:20,560
world i think around up against security

28
00:01:20,560 --> 00:01:21,840
automation

29
00:01:21,840 --> 00:01:24,479
more recently express modeling and the

30
00:01:24,479 --> 00:01:26,320
way it's just modeling kind of changes

31
00:01:26,320 --> 00:01:28,640
integrates with security testing and

32
00:01:28,640 --> 00:01:30,000
other aspects

33
00:01:30,000 --> 00:01:32,960
um also a lot in terms of vulnerability

34
00:01:32,960 --> 00:01:34,880
correlation vulnerability management

35
00:01:34,880 --> 00:01:37,119
things like that so uh for all the

36
00:01:37,119 --> 00:01:40,479
enthusiasts who share a common interest

37
00:01:40,479 --> 00:01:42,479
in any of these things that you see on

38
00:01:42,479 --> 00:01:45,439
screen happy to connect offline and have

39
00:01:45,439 --> 00:01:48,799
to reject more of these topics um

40
00:01:48,799 --> 00:01:50,320
so a little bit about this presentation

41
00:01:50,320 --> 00:01:52,799
so i made this presentation first in uh

42
00:01:52,799 --> 00:01:54,479
i started working on this presentation

43
00:01:54,479 --> 00:01:57,759
way back in november 2019 and ever since

44
00:01:57,759 --> 00:01:59,520
i've presented this in at least 15

45
00:01:59,520 --> 00:02:01,280
different venues across the world and

46
00:02:01,280 --> 00:02:03,200
every time i make this presentation the

47
00:02:03,200 --> 00:02:05,680
impact that it has on people are very

48
00:02:05,680 --> 00:02:08,160
different um when i made this the first

49
00:02:08,160 --> 00:02:09,758
time around each person i used to

50
00:02:09,758 --> 00:02:12,080
obviously kind of get a lot a lot of uh

51
00:02:12,080 --> 00:02:13,920
feedback in terms of people who had

52
00:02:13,920 --> 00:02:16,000
multiple questions and people uh who

53
00:02:16,000 --> 00:02:17,360
couldn't really kind of associate it

54
00:02:17,360 --> 00:02:19,760
with it um differently but since we're

55
00:02:19,760 --> 00:02:21,599
doing this virtually the last two years

56
00:02:21,599 --> 00:02:22,400
or so

57
00:02:22,400 --> 00:02:23,520
things have been a little bit different

58
00:02:23,520 --> 00:02:26,080
but yet um for those who are on the

59
00:02:26,080 --> 00:02:28,480
program right now um so

60
00:02:28,480 --> 00:02:30,560
my intention here is that even if you

61
00:02:30,560 --> 00:02:32,560
are in any part of the product

62
00:02:32,560 --> 00:02:34,840
engineering you're a developer you're an

63
00:02:34,840 --> 00:02:36,319
architect you're a devops engineer

64
00:02:36,319 --> 00:02:38,800
you're a social engineer my hope and

65
00:02:38,800 --> 00:02:40,720
aspiration is that there's something in

66
00:02:40,720 --> 00:02:43,360
this in this presentation that you can

67
00:02:43,360 --> 00:02:45,760
personally kind of take back uh from an

68
00:02:45,760 --> 00:02:48,319
implementation perspective so

69
00:02:48,319 --> 00:02:51,120
having said that let's get started

70
00:02:51,120 --> 00:02:54,400
so i can start off uh really having a

71
00:02:54,400 --> 00:02:56,239
look at how product engineering has kind

72
00:02:56,239 --> 00:02:57,120
of

73
00:02:57,120 --> 00:02:59,040
moved on or has

74
00:02:59,040 --> 00:03:00,879
evolved over the last couple of years

75
00:03:00,879 --> 00:03:02,720
and some of these things are not

76
00:03:02,720 --> 00:03:05,599
uh something that's uh you know uh

77
00:03:05,599 --> 00:03:07,920
really brainstormingly new or something

78
00:03:07,920 --> 00:03:09,680
like that but still there are some

79
00:03:09,680 --> 00:03:11,040
very interesting developments that have

80
00:03:11,040 --> 00:03:13,360
happened um obviously tvs are going a

81
00:03:13,360 --> 00:03:15,680
lot more in terms of agile than

82
00:03:15,680 --> 00:03:17,760
waterfall and i always joke that there's

83
00:03:17,760 --> 00:03:19,440
always going to be a group that is agile

84
00:03:19,440 --> 00:03:20,239
fall

85
00:03:20,239 --> 00:03:22,560
which is between waterfall and adults

86
00:03:22,560 --> 00:03:24,000
and we're also seeing a lot of

87
00:03:24,000 --> 00:03:26,000
accelerated deployments in terms of

88
00:03:26,000 --> 00:03:28,480
fabrics that are enabling teams to take

89
00:03:28,480 --> 00:03:30,959
applications uh to the cloud

90
00:03:30,959 --> 00:03:32,319
especially with the identity of the

91
00:03:32,319 --> 00:03:34,159
rocks so i'm talking about things like

92
00:03:34,159 --> 00:03:37,200
uh both cia both on the ci front and the

93
00:03:37,200 --> 00:03:39,840
ca front so you're talking about more uh

94
00:03:39,840 --> 00:03:42,159
github actions based integrations of the

95
00:03:42,159 --> 00:03:44,319
ta perspective and also seeking a lot

96
00:03:44,319 --> 00:03:45,120
more

97
00:03:45,120 --> 00:03:48,640
calculus helping us deployments like

98
00:03:48,640 --> 00:03:51,440
things like chest and puppet and ansible

99
00:03:51,440 --> 00:03:54,000
uh that are being more seen in terms of

100
00:03:54,000 --> 00:03:56,080
content deployments

101
00:03:56,080 --> 00:03:58,799
in terms of share the the architecture

102
00:03:58,799 --> 00:04:01,120
of apps itself is that obviously we're

103
00:04:01,120 --> 00:04:02,799
not looking at a lot of monolith apps

104
00:04:02,799 --> 00:04:04,799
anymore we're seeing a lot of more of

105
00:04:04,799 --> 00:04:06,640
multi-tiered approach to application

106
00:04:06,640 --> 00:04:08,720
architecture which includes a lot of

107
00:04:08,720 --> 00:04:10,959
micro services and serverless stacks

108
00:04:10,959 --> 00:04:12,720
that we've seen as opposed to really

109
00:04:12,720 --> 00:04:14,720
large chunks of apps that we used to say

110
00:04:14,720 --> 00:04:16,720
a couple of years ago and then they've

111
00:04:16,720 --> 00:04:18,478
also seen an increase in terms of

112
00:04:18,478 --> 00:04:20,560
third-party libraries and that's quite

113
00:04:20,560 --> 00:04:23,280
evident with the advent of more fca

114
00:04:23,280 --> 00:04:25,040
platforms that have become that have

115
00:04:25,040 --> 00:04:26,560
become very relevant over the last

116
00:04:26,560 --> 00:04:29,199
couple of um to you guys as well

117
00:04:29,199 --> 00:04:31,919
so all this from a testing perspective

118
00:04:31,919 --> 00:04:36,000
uh has also led to a more automation um

119
00:04:36,000 --> 00:04:37,840
when it comes to not just functional

120
00:04:37,840 --> 00:04:39,919
performance but actually i see from a

121
00:04:39,919 --> 00:04:41,680
security perspective as well you know a

122
00:04:41,680 --> 00:04:44,479
lot more in terms of um testing and

123
00:04:44,479 --> 00:04:46,880
automation that we've seen

124
00:04:46,880 --> 00:04:47,680
um

125
00:04:47,680 --> 00:04:49,199
in terms of just the application

126
00:04:49,199 --> 00:04:51,040
delivery landscape

127
00:04:51,040 --> 00:04:52,800
we actually see

128
00:04:52,800 --> 00:04:57,199
two distinct kind of um ecosystems so i

129
00:04:57,199 --> 00:04:59,440
typically consider i usually when i make

130
00:04:59,440 --> 00:05:01,759
these presentations in the u.s i usually

131
00:05:01,759 --> 00:05:03,120
compare it to the west and the east

132
00:05:03,120 --> 00:05:05,199
coast of the u.s right for example let's

133
00:05:05,199 --> 00:05:07,600
take a typical silicon valley company in

134
00:05:07,600 --> 00:05:09,360
the bay area somebody who's 200

135
00:05:09,360 --> 00:05:10,800
employees somebody was working on a

136
00:05:10,800 --> 00:05:13,759
product they have multiple deployments

137
00:05:13,759 --> 00:05:15,759
in a particular way they probably have

138
00:05:15,759 --> 00:05:17,600
lesser number of applications they're

139
00:05:17,600 --> 00:05:19,759
probably working on four or five or ten

140
00:05:19,759 --> 00:05:22,639
core applications but you see continuous

141
00:05:22,639 --> 00:05:25,039
changes having uh do those 10

142
00:05:25,039 --> 00:05:26,800
applications so you're seeing multiple

143
00:05:26,800 --> 00:05:28,479
deployments in a day and therefore

144
00:05:28,479 --> 00:05:31,039
multiple deliveries so that's one view

145
00:05:31,039 --> 00:05:33,919
of the world now consider a large

146
00:05:33,919 --> 00:05:36,080
enterprise let's say a bank or a

147
00:05:36,080 --> 00:05:38,000
financial institution or a large retail

148
00:05:38,000 --> 00:05:40,400
organization they might have hundreds of

149
00:05:40,400 --> 00:05:42,400
apps that probably even have 500 apps

150
00:05:42,400 --> 00:05:44,479
but those apps don't necessarily undergo

151
00:05:44,479 --> 00:05:47,280
the same kind of deployments

152
00:05:47,280 --> 00:05:49,840
as the other example that we saw so

153
00:05:49,840 --> 00:05:51,440
you're probably looking at one or two

154
00:05:51,440 --> 00:05:53,680
deployments in a quarter or something

155
00:05:53,680 --> 00:05:54,720
like that

156
00:05:54,720 --> 00:05:56,800
so even if you consider both these views

157
00:05:56,800 --> 00:05:59,039
of the world one thing that's common is

158
00:05:59,039 --> 00:06:00,720
that the number of deliveries are more

159
00:06:00,720 --> 00:06:02,080
for example this year you have 10

160
00:06:02,080 --> 00:06:04,080
applications with a daily delivery but

161
00:06:04,080 --> 00:06:05,919
there you have 500 applications it's

162
00:06:05,919 --> 00:06:08,000
probably one terribly a month so either

163
00:06:08,000 --> 00:06:10,800
way the application delivery

164
00:06:10,800 --> 00:06:13,600
model has kind of really kind of uh

165
00:06:13,600 --> 00:06:15,520
moved very further and this we're

166
00:06:15,520 --> 00:06:17,600
talking about it at a time period now

167
00:06:17,600 --> 00:06:19,039
but when i remember

168
00:06:19,039 --> 00:06:22,319
when amazon moved to aws uh a long time

169
00:06:22,319 --> 00:06:24,080
ago they used to develop and deploy

170
00:06:24,080 --> 00:06:26,960
applications once at 11.7 seconds uh and

171
00:06:26,960 --> 00:06:28,400
i'm sure that's something that's gone

172
00:06:28,400 --> 00:06:30,720
further as we speak uh

173
00:06:30,720 --> 00:06:32,160
right now

174
00:06:32,160 --> 00:06:34,960
there's a third kind of uh uh groups

175
00:06:34,960 --> 00:06:36,880
that fall in between both these views

176
00:06:36,880 --> 00:06:38,639
right so you could there are there are

177
00:06:38,639 --> 00:06:39,840
usually companies who are product

178
00:06:39,840 --> 00:06:41,199
companies who actually say that they

179
00:06:41,199 --> 00:06:44,319
probably have like a 150 applications uh

180
00:06:44,319 --> 00:06:47,120
in their portfolio um and with the

181
00:06:47,120 --> 00:06:49,680
advent of devops and with the advent of

182
00:06:49,680 --> 00:06:52,400
um application security automation they

183
00:06:52,400 --> 00:06:54,240
actually are in both of these worlds

184
00:06:54,240 --> 00:06:56,880
right so they have massive releases

185
00:06:56,880 --> 00:06:59,520
and with these masterpieces comes a lot

186
00:06:59,520 --> 00:07:01,199
of challenges

187
00:07:01,199 --> 00:07:04,160
now obviously this is a

188
00:07:04,160 --> 00:07:05,680
this is a a

189
00:07:05,680 --> 00:07:07,919
an image that a lot of us are familiar

190
00:07:07,919 --> 00:07:09,759
with with a lot many conferences this is

191
00:07:09,759 --> 00:07:13,120
obviously the partners in finite loop um

192
00:07:13,120 --> 00:07:15,280
of devops and designs now i'm not really

193
00:07:15,280 --> 00:07:16,960
sure about the rest of the folks during

194
00:07:16,960 --> 00:07:18,880
the call but me personally and there's

195
00:07:18,880 --> 00:07:20,639
not even a week 45 opinion but this is

196
00:07:20,639 --> 00:07:23,199
the personal rahul's opinion is that i

197
00:07:23,199 --> 00:07:25,120
find this image be really really

198
00:07:25,120 --> 00:07:28,840
confusing and i don't think it really is

199
00:07:28,840 --> 00:07:32,080
as relevant to the current way in which

200
00:07:32,080 --> 00:07:34,479
we see african security

201
00:07:34,479 --> 00:07:36,240
so what i've done is i've kind of tried

202
00:07:36,240 --> 00:07:38,720
to give a different representation of

203
00:07:38,720 --> 00:07:41,199
what devops and that's the culture

204
00:07:41,199 --> 00:07:41,919
and

205
00:07:41,919 --> 00:07:42,880
this

206
00:07:42,880 --> 00:07:44,400
is what i would call

207
00:07:44,400 --> 00:07:46,080
uh the true definite cosplay device

208
00:07:46,080 --> 00:07:48,080
model so what you see on the top of this

209
00:07:48,080 --> 00:07:50,720
image are the typical application

210
00:07:50,720 --> 00:07:51,520
uh

211
00:07:51,520 --> 00:07:53,520
product engineering process that you

212
00:07:53,520 --> 00:07:56,240
essentially plan code with test release

213
00:07:56,240 --> 00:07:59,039
deploy and monitor and what you see on

214
00:07:59,039 --> 00:08:01,199
the bottom are the typical phases of

215
00:08:01,199 --> 00:08:03,280
security so what you see in the process

216
00:08:03,280 --> 00:08:05,120
product engineering what is your

217
00:08:05,120 --> 00:08:06,879
department security engineering which is

218
00:08:06,879 --> 00:08:08,720
actually threat modeling

219
00:08:08,720 --> 00:08:11,199
analysis data analysis infrastructure as

220
00:08:11,199 --> 00:08:13,919
code and finding security uh monitoring

221
00:08:13,919 --> 00:08:16,160
and impact detection now what i'd like

222
00:08:16,160 --> 00:08:17,440
to do is i'd like to really kind of give

223
00:08:17,440 --> 00:08:19,680
a color code of where we see the

224
00:08:19,680 --> 00:08:21,599
security engineering process to kind of

225
00:08:21,599 --> 00:08:23,599
fit with the appropriate product

226
00:08:23,599 --> 00:08:26,080
engineering process for example thresh

227
00:08:26,080 --> 00:08:27,120
modeling

228
00:08:27,120 --> 00:08:29,120
usually started off as an activity that

229
00:08:29,120 --> 00:08:31,440
was performed in the planned phase in in

230
00:08:31,440 --> 00:08:33,519
the place where people would probably do

231
00:08:33,519 --> 00:08:35,279
a design or an architectural review

232
00:08:35,279 --> 00:08:36,958
architecture really come up and say

233
00:08:36,958 --> 00:08:38,399
let's look at the blueprints that

234
00:08:38,399 --> 00:08:41,399
probably

235
00:08:48,399 --> 00:08:50,560
so that used to be threat modeling

236
00:08:50,560 --> 00:08:52,800
purely in the plan phase but as they

237
00:08:52,800 --> 00:08:55,360
keep moving with it with security as a

238
00:08:55,360 --> 00:08:57,519
code we are now in a space where you

239
00:08:57,519 --> 00:08:59,760
could do strict modeling as code and

240
00:08:59,760 --> 00:09:01,200
that's a different presentation that i

241
00:09:01,200 --> 00:09:03,120
do i would love to talk about that on

242
00:09:03,120 --> 00:09:05,600
other days but with the advent of things

243
00:09:05,600 --> 00:09:07,360
like modeling this code and things like

244
00:09:07,360 --> 00:09:09,680
marketing more towards the developers

245
00:09:09,680 --> 00:09:11,440
community we're actually seeing threat

246
00:09:11,440 --> 00:09:13,920
modeling moving from the plan phase

247
00:09:13,920 --> 00:09:15,600
moving to a little bit into the core

248
00:09:15,600 --> 00:09:17,200
phases and that's where you see a little

249
00:09:17,200 --> 00:09:21,360
bit of orange uh in that code uh

250
00:09:21,360 --> 00:09:24,480
fast and that's predominantly a code

251
00:09:24,480 --> 00:09:26,399
builder test therefore you see that

252
00:09:26,399 --> 00:09:28,959
completely uh taking over to test and

253
00:09:28,959 --> 00:09:30,959
and so on and so forth uh i don't want

254
00:09:30,959 --> 00:09:32,320
to go through the entire image here but

255
00:09:32,320 --> 00:09:34,080
you guys you i'm sure you get the idea

256
00:09:34,080 --> 00:09:36,240
in terms of how

257
00:09:36,240 --> 00:09:38,480
the security process is

258
00:09:38,480 --> 00:09:40,640
kind of finding its right way in terms

259
00:09:40,640 --> 00:09:42,000
of the proximity process and the reason

260
00:09:42,000 --> 00:09:43,920
i like this particular

261
00:09:43,920 --> 00:09:46,000
diagrammatic representation

262
00:09:46,000 --> 00:09:47,360
is the fact that every time i do a

263
00:09:47,360 --> 00:09:49,600
presentation the color code changes

264
00:09:49,600 --> 00:09:52,480
because at that point in time in 2020

265
00:09:52,480 --> 00:09:54,720
this color code looked really different

266
00:09:54,720 --> 00:09:57,360
and therefore the whole ship flip model

267
00:09:57,360 --> 00:10:00,080
was very different than in 2021 where

268
00:10:00,080 --> 00:10:01,839
you have a lot more advancements and a

269
00:10:01,839 --> 00:10:03,600
lot more experiments that have been done

270
00:10:03,600 --> 00:10:05,440
in terms of taking code closer to

271
00:10:05,440 --> 00:10:06,959
security

272
00:10:06,959 --> 00:10:09,920
so therefore you see the fact that a lot

273
00:10:09,920 --> 00:10:11,760
of these color codes will keep changing

274
00:10:11,760 --> 00:10:13,600
as the years move by depending upon the

275
00:10:13,600 --> 00:10:16,160
kind of advantages that we make

276
00:10:16,160 --> 00:10:18,560
so therefore the current state uh the

277
00:10:18,560 --> 00:10:20,399
devops in the left half movement is

278
00:10:20,399 --> 00:10:22,480
really picked up right so businesses

279
00:10:22,480 --> 00:10:24,720
across the plane want to move faster

280
00:10:24,720 --> 00:10:27,040
they want to go to the market faster and

281
00:10:27,040 --> 00:10:29,279
therefore their pickups amongst other

282
00:10:29,279 --> 00:10:31,120
things on the screen that you see here

283
00:10:31,120 --> 00:10:33,040
has led to a lot more in terms of

284
00:10:33,040 --> 00:10:34,320
tooling it's

285
00:10:34,320 --> 00:10:36,320
it's seen an increase in ci toning it's

286
00:10:36,320 --> 00:10:38,240
been an increase in test management

287
00:10:38,240 --> 00:10:40,800
build management deploys voice deploys

288
00:10:40,800 --> 00:10:43,600
and so on and so forth uh and therefore

289
00:10:43,600 --> 00:10:46,000
security too has kind

290
00:10:46,000 --> 00:10:48,240
what we used to call it as a gatekeeper

291
00:10:48,240 --> 00:10:49,200
function

292
00:10:49,200 --> 00:10:52,640
uh today much more uh relevant and being

293
00:10:52,640 --> 00:10:54,720
able to kind of embed itself

294
00:10:54,720 --> 00:10:56,959
in terms of different parts uh within

295
00:10:56,959 --> 00:10:58,480
the project engineering landscape and

296
00:10:58,480 --> 00:11:00,640
people talk about the security champions

297
00:11:00,640 --> 00:11:02,399
program which really is that it's the up

298
00:11:02,399 --> 00:11:03,600
and spoke model where you have a

299
00:11:03,600 --> 00:11:04,560
centralized

300
00:11:04,560 --> 00:11:07,279
team and it has satellite squads uh off

301
00:11:07,279 --> 00:11:08,720
the center security team who kind of

302
00:11:08,720 --> 00:11:11,200
embed themselves with the various uh

303
00:11:11,200 --> 00:11:13,200
members with the adulting

304
00:11:13,200 --> 00:11:15,200
but all this means that we're moving

305
00:11:15,200 --> 00:11:17,760
between using more tools than what we're

306
00:11:17,760 --> 00:11:20,000
using uh when security was a siloed

307
00:11:20,000 --> 00:11:21,920
activity and this also means that there

308
00:11:21,920 --> 00:11:23,760
are a lot more integration

309
00:11:23,760 --> 00:11:27,680
between tools and also between one unit

310
00:11:27,680 --> 00:11:29,040
and another

311
00:11:29,040 --> 00:11:30,480
and so these are some reports from the

312
00:11:30,480 --> 00:11:33,440
2016 2017 year and they eventually kept

313
00:11:33,440 --> 00:11:35,680
that uh

314
00:11:35,680 --> 00:11:37,360
quite dated because i wanted to see the

315
00:11:37,360 --> 00:11:39,440
contrast right for example

316
00:11:39,440 --> 00:11:42,079
uh if you look at here like mature does

317
00:11:42,079 --> 00:11:45,360
check out shop run almost 300 scans a

318
00:11:45,360 --> 00:11:48,560
year and this was way back in 2017 and

319
00:11:48,560 --> 00:11:50,800
back then you had 3 000 vulnerabilities

320
00:11:50,800 --> 00:11:52,639
that were disclosed

321
00:11:52,639 --> 00:11:55,040
but if you look at the kind of time that

322
00:11:55,040 --> 00:11:57,279
it takes for people to kind of

323
00:11:57,279 --> 00:12:00,560
fix those issues on an average it's 34

324
00:12:00,560 --> 00:12:02,000
days and that's really the problem

325
00:12:02,000 --> 00:12:03,519
because the more number of

326
00:12:03,519 --> 00:12:05,839
vulnerabilities that you find

327
00:12:05,839 --> 00:12:07,760
it's going to overwhelm the system in

328
00:12:07,760 --> 00:12:10,240
terms of being able to take corrective

329
00:12:10,240 --> 00:12:12,000
actions to fix those vulnerabilities and

330
00:12:12,000 --> 00:12:14,160
that's that's a problem statement that i

331
00:12:14,160 --> 00:12:15,760
just want to leave it there for a moment

332
00:12:15,760 --> 00:12:17,360
i'll come back to this a little later

333
00:12:17,360 --> 00:12:18,560
but i just wanted to kind of give you

334
00:12:18,560 --> 00:12:21,519
some context in terms of the downside of

335
00:12:21,519 --> 00:12:23,360
potentially kind of increasing tooling

336
00:12:23,360 --> 00:12:25,360
and just focusing our attention

337
00:12:25,360 --> 00:12:27,600
a lot in terms of just finding issues as

338
00:12:27,600 --> 00:12:31,040
much as it is about fixing those issues

339
00:12:31,040 --> 00:12:34,160
and in terms of diversity and and scale

340
00:12:34,160 --> 00:12:36,800
also we've kind of really kind of seen a

341
00:12:36,800 --> 00:12:39,040
lot more changes today you're testing

342
00:12:39,040 --> 00:12:41,200
servers you're testing containers you're

343
00:12:41,200 --> 00:12:43,279
getting applications you're testing api

344
00:12:43,279 --> 00:12:45,360
services databases orchestration

345
00:12:45,360 --> 00:12:47,440
services cloud services and then you

346
00:12:47,440 --> 00:12:49,120
have third-party libraries and all of

347
00:12:49,120 --> 00:12:51,440
this really means that with more tools

348
00:12:51,440 --> 00:12:53,600
uh there is a lot in terms of

349
00:12:53,600 --> 00:12:55,839
information overload that security

350
00:12:55,839 --> 00:12:57,440
engineers are having to deal with right

351
00:12:57,440 --> 00:12:58,880
it is not like

352
00:12:58,880 --> 00:13:00,560
the days old where you just had one map

353
00:13:00,560 --> 00:13:01,760
and you probably had four or five

354
00:13:01,760 --> 00:13:03,760
components that need to test the process

355
00:13:03,760 --> 00:13:05,839
uh right now with with the architecture

356
00:13:05,839 --> 00:13:07,519
kind of changing as much and with so

357
00:13:07,519 --> 00:13:10,000
many testing being done there's really a

358
00:13:10,000 --> 00:13:12,959
lot more that you need to kind of uh

359
00:13:12,959 --> 00:13:15,519
assess and therefore look at

360
00:13:15,519 --> 00:13:17,600
and therefore with that information

361
00:13:17,600 --> 00:13:20,160
overload we have some challenges we look

362
00:13:20,160 --> 00:13:23,360
at some of them in more detail but

363
00:13:23,360 --> 00:13:25,600
application security teams themselves

364
00:13:25,600 --> 00:13:27,360
have some serious security

365
00:13:27,360 --> 00:13:29,200
have some serious constraints in terms

366
00:13:29,200 --> 00:13:31,040
of availability right in terms of time

367
00:13:31,040 --> 00:13:32,880
that they spend in terms of triaging

368
00:13:32,880 --> 00:13:35,200
issues sorting issues and so on and so

369
00:13:35,200 --> 00:13:36,079
forth

370
00:13:36,079 --> 00:13:38,160
and there are concerns in terms of tools

371
00:13:38,160 --> 00:13:39,839
like we can see further as well there's

372
00:13:39,839 --> 00:13:41,680
some major inconsistencies in terms of

373
00:13:41,680 --> 00:13:43,040
the results that some of these students

374
00:13:43,040 --> 00:13:44,000
give

375
00:13:44,000 --> 00:13:46,240
a lot of us in security engineering

376
00:13:46,240 --> 00:13:48,000
still don't know how the best we can

377
00:13:48,000 --> 00:13:49,680
integrate ourselves in terms of

378
00:13:49,680 --> 00:13:51,360
engineering workflows so there's a big

379
00:13:51,360 --> 00:13:53,279
business there's a big gap in terms of

380
00:13:53,279 --> 00:13:54,959
security engineering and product

381
00:13:54,959 --> 00:13:57,600
engineering in terms of technological uh

382
00:13:57,600 --> 00:13:59,440
integration and finally you have an

383
00:13:59,440 --> 00:14:01,199
issue in terms of managing

384
00:14:01,199 --> 00:14:02,720
vulnerabilities and remediating

385
00:14:02,720 --> 00:14:05,360
fundamentalists themselves

386
00:14:05,360 --> 00:14:06,880
in terms

387
00:14:06,880 --> 00:14:08,720
of the sheer one of the biggest issues

388
00:14:08,720 --> 00:14:10,880
still considers to be bandwidth right

389
00:14:10,880 --> 00:14:12,880
within the african security that's quite

390
00:14:12,880 --> 00:14:14,480
evident in terms of the number of job

391
00:14:14,480 --> 00:14:16,880
posts that we see on a daily basis

392
00:14:16,880 --> 00:14:18,800
people calling affiliate security

393
00:14:18,800 --> 00:14:20,240
engineers to come and join their team

394
00:14:20,240 --> 00:14:22,480
and even today the business is moving

395
00:14:22,480 --> 00:14:24,079
higher they're hiding more deaths

396
00:14:24,079 --> 00:14:25,519
they're hiring more agile project

397
00:14:25,519 --> 00:14:27,920
managers more office folks more cloud

398
00:14:27,920 --> 00:14:30,160
engineers but no one no one almost from

399
00:14:30,160 --> 00:14:33,440
an exclusive security standpoint uh and

400
00:14:33,440 --> 00:14:34,880
and something that you've noticed in a

401
00:14:34,880 --> 00:14:37,279
lot of forums like these uh i mean not

402
00:14:37,279 --> 00:14:38,160
just here

403
00:14:38,160 --> 00:14:39,920
let's say even if you're doing meetup

404
00:14:39,920 --> 00:14:41,600
groups and things like that

405
00:14:41,600 --> 00:14:43,680
people really have a lot of job openings

406
00:14:43,680 --> 00:14:46,560
for our video engineers which is great

407
00:14:46,560 --> 00:14:48,639
but then the reality is that when they

408
00:14:48,639 --> 00:14:50,560
actually go and start working their

409
00:14:50,560 --> 00:14:52,079
expectations and what they're supposed

410
00:14:52,079 --> 00:14:54,000
to be working on are quite different

411
00:14:54,000 --> 00:14:55,199
and

412
00:14:55,199 --> 00:14:56,959
just to talk about that i just have i

413
00:14:56,959 --> 00:14:58,639
just want to take an example of a small

414
00:14:58,639 --> 00:15:00,800
story here in terms of how a typical

415
00:15:00,800 --> 00:15:03,120
security nurse talent is spent so let's

416
00:15:03,120 --> 00:15:05,279
say for example this is someone called

417
00:15:05,279 --> 00:15:08,480
jason um and just obviously a fictitious

418
00:15:08,480 --> 00:15:09,440
person

419
00:15:09,440 --> 00:15:12,800
let's say that he's joined this new uh

420
00:15:12,800 --> 00:15:14,639
digital product company let's say in the

421
00:15:14,639 --> 00:15:16,720
banking space as a as a security

422
00:15:16,720 --> 00:15:20,240
engineer um and and let's consider what

423
00:15:20,240 --> 00:15:23,680
somebody an african security a day in a

424
00:15:23,680 --> 00:15:25,360
typical week would be like a couple of

425
00:15:25,360 --> 00:15:26,639
months down the road so couple of months

426
00:15:26,639 --> 00:15:29,360
down the road this jason is

427
00:15:29,360 --> 00:15:30,639
asked to take care of security

428
00:15:30,639 --> 00:15:32,720
assessments which is okay

429
00:15:32,720 --> 00:15:34,480
then you're supposed to kind of help

430
00:15:34,480 --> 00:15:36,480
your developers remediate those fine

431
00:15:36,480 --> 00:15:38,480
things which is fine but you're in the

432
00:15:38,480 --> 00:15:40,560
backing and industry sometimes you get

433
00:15:40,560 --> 00:15:42,639
called down to the ciso and you're kind

434
00:15:42,639 --> 00:15:44,880
of asked to help in terms of compliance

435
00:15:44,880 --> 00:15:47,360
orders from the security perspective um

436
00:15:47,360 --> 00:15:49,199
you're also

437
00:15:49,199 --> 00:15:50,720
you're also involved in drafting

438
00:15:50,720 --> 00:15:52,480
security reports then you're asked to

439
00:15:52,480 --> 00:15:54,000
onboard tools you're being fixed

440
00:15:54,000 --> 00:15:55,920
modeling you're automating tools in ci

441
00:15:55,920 --> 00:15:57,920
cd validating for those fixings

442
00:15:57,920 --> 00:15:59,759
reviewing those fixing and you're doing

443
00:15:59,759 --> 00:16:02,959
so many things almost with no time that

444
00:16:02,959 --> 00:16:05,120
you have to focus on your core domain

445
00:16:05,120 --> 00:16:07,199
which is that of security research

446
00:16:07,199 --> 00:16:10,480
and with all of these things in place

447
00:16:10,480 --> 00:16:12,000
we still ask

448
00:16:12,000 --> 00:16:13,759
and we still told that we need to

449
00:16:13,759 --> 00:16:16,959
continuously test for security

450
00:16:16,959 --> 00:16:18,480
right

451
00:16:18,480 --> 00:16:20,959
and now jason the gesture is not

452
00:16:20,959 --> 00:16:22,639
happening so it's not the same json that

453
00:16:22,639 --> 00:16:24,959
we saw earlier right because now he's

454
00:16:24,959 --> 00:16:27,040
disturbed uh and that's really what

455
00:16:27,040 --> 00:16:28,399
happens when

456
00:16:28,399 --> 00:16:30,959
this new world of update security uh

457
00:16:30,959 --> 00:16:32,800
with all with all of this automation and

458
00:16:32,800 --> 00:16:34,639
things like that coming into perspective

459
00:16:34,639 --> 00:16:37,759
it kind of changes the actual uh reason

460
00:16:37,759 --> 00:16:39,680
or the actual course objective of a

461
00:16:39,680 --> 00:16:41,759
security engineer

462
00:16:41,759 --> 00:16:42,720
right

463
00:16:42,720 --> 00:16:44,399
and but today we're not going to be

464
00:16:44,399 --> 00:16:45,759
looking at all of these things right

465
00:16:45,759 --> 00:16:47,120
we're essentially going to be looking at

466
00:16:47,120 --> 00:16:48,959
one major issue

467
00:16:48,959 --> 00:16:51,680
which really is that of managing

468
00:16:51,680 --> 00:16:53,440
vulnerabilities

469
00:16:53,440 --> 00:16:55,839
and that really is the crux of my talk

470
00:16:55,839 --> 00:16:58,959
which is the cluster and the clutter

471
00:16:58,959 --> 00:17:01,600
um in application security which is that

472
00:17:01,600 --> 00:17:03,360
of managing possibilities and i often

473
00:17:03,360 --> 00:17:05,760
say that an applicant's security program

474
00:17:05,760 --> 00:17:08,319
is only as efficient

475
00:17:08,319 --> 00:17:09,919
as managing the vulnerabilities that

476
00:17:09,919 --> 00:17:12,480
come out of it um and i i mean what

477
00:17:12,480 --> 00:17:14,319
really is the point of having all these

478
00:17:14,319 --> 00:17:16,559
amazing tools and platforms and teams

479
00:17:16,559 --> 00:17:18,160
the processes if software

480
00:17:18,160 --> 00:17:20,880
vulnerabilities cannot be efficiently

481
00:17:20,880 --> 00:17:23,039
generated they can't be categorized they

482
00:17:23,039 --> 00:17:25,119
can't be shared they can't be remediated

483
00:17:25,119 --> 00:17:27,439
or even worse finally prevented from

484
00:17:27,439 --> 00:17:30,160
getting back upstream into accordingly

485
00:17:30,160 --> 00:17:32,400
right and this clutter

486
00:17:32,400 --> 00:17:34,880
is probably the most significant reasons

487
00:17:34,880 --> 00:17:37,679
that prevent uh products and security

488
00:17:37,679 --> 00:17:40,559
gains in not being able to bridge that

489
00:17:40,559 --> 00:17:43,039
proverbial gap uh between the ideal and

490
00:17:43,039 --> 00:17:45,520
the practical of uh of

491
00:17:45,520 --> 00:17:47,440
right um and we'll be able to kind of

492
00:17:47,440 --> 00:17:48,720
increase what we like to call the

493
00:17:48,720 --> 00:17:51,120
secular product through throughput uh so

494
00:17:51,120 --> 00:17:53,200
let's leave this a little further uh

495
00:17:53,200 --> 00:17:55,039
into this clutter but before we do that

496
00:17:55,039 --> 00:17:57,280
it's essential that we understand what

497
00:17:57,280 --> 00:18:00,918
really is the anatomy

498
00:18:11,520 --> 00:18:13,039
have been in the security world for a

499
00:18:13,039 --> 00:18:14,640
while but trust me

500
00:18:14,640 --> 00:18:16,640
it is really important that we

501
00:18:16,640 --> 00:18:18,000
understand the difference between these

502
00:18:18,000 --> 00:18:20,080
three concepts because the number of

503
00:18:20,080 --> 00:18:22,080
times i've had people confuse these

504
00:18:22,080 --> 00:18:24,160
three things these concepts

505
00:18:24,160 --> 00:18:26,720
is quite significant so before we start

506
00:18:26,720 --> 00:18:28,400
looking at uh

507
00:18:28,400 --> 00:18:31,360
what uh the cwe the stuff what

508
00:18:31,360 --> 00:18:32,960
the vulnerabilities are let's take a

509
00:18:32,960 --> 00:18:35,520
look at what cwd cde and cdss are

510
00:18:35,520 --> 00:18:36,799
because i think this is very important

511
00:18:36,799 --> 00:18:39,440
for us to kind of move further and also

512
00:18:39,440 --> 00:18:41,039
take an example that

513
00:18:41,039 --> 00:18:42,080
you know these three things are

514
00:18:42,080 --> 00:18:44,160
something like recorded groups right

515
00:18:44,160 --> 00:18:45,600
we all know that they're important but

516
00:18:45,600 --> 00:18:47,840
you don't know who is what child

517
00:18:47,840 --> 00:18:50,000
especially if you remove alex

518
00:18:50,000 --> 00:18:51,520
equation so with these remaining three

519
00:18:51,520 --> 00:18:53,360
brothers you really don't know who's uh

520
00:18:53,360 --> 00:18:55,280
what

521
00:18:55,280 --> 00:18:59,120
so let's do a quick 101 in terms of uh

522
00:18:59,120 --> 00:19:01,760
these three concepts so the cwe is the

523
00:19:01,760 --> 00:19:04,240
common weakness enumeration right

524
00:19:04,240 --> 00:19:06,320
and this really is a system for

525
00:19:06,320 --> 00:19:08,240
categorizing software vulnerabilities it

526
00:19:08,240 --> 00:19:11,360
has over 600 categories uh including

527
00:19:11,360 --> 00:19:13,600
specific categories for buffer overflows

528
00:19:13,600 --> 00:19:15,360
parts directory traversals race

529
00:19:15,360 --> 00:19:18,080
conditions such as 15 hard-coded

530
00:19:18,080 --> 00:19:20,640
passwords uh insecure random numbers and

531
00:19:20,640 --> 00:19:22,559
so on and so forth so every time you

532
00:19:22,559 --> 00:19:23,760
find the vulnerability that

533
00:19:23,760 --> 00:19:25,440
vulnerability be categorized under a

534
00:19:25,440 --> 00:19:27,679
particular bucket and that bucket is the

535
00:19:27,679 --> 00:19:30,960
cwe now the cvss which essentially is

536
00:19:30,960 --> 00:19:33,760
the common vulnerability scoring system

537
00:19:33,760 --> 00:19:35,600
that is really

538
00:19:35,600 --> 00:19:38,400
a way for you to categorize the security

539
00:19:38,400 --> 00:19:40,720
of one property right it is a free and

540
00:19:40,720 --> 00:19:43,039
open source open industry standard uh

541
00:19:43,039 --> 00:19:44,559
which kind of helps you assess the

542
00:19:44,559 --> 00:19:46,559
security of a computer

543
00:19:46,559 --> 00:19:48,400
of a security vulnerability

544
00:19:48,400 --> 00:19:50,240
and cvss really kind of attempts to kind

545
00:19:50,240 --> 00:19:52,480
of assign security scores to each of

546
00:19:52,480 --> 00:19:54,400
these vulnerabilities so that you can

547
00:19:54,400 --> 00:19:56,559
you can understand which needs to be

548
00:19:56,559 --> 00:19:58,000
remediated first which we should be

549
00:19:58,000 --> 00:19:59,679
prioritized first which gives you that

550
00:19:59,679 --> 00:20:00,960
second and third so that's the

551
00:20:00,960 --> 00:20:02,320
seriousness

552
00:20:02,320 --> 00:20:04,000
and the cde is the common

553
00:20:04,000 --> 00:20:05,919
vulnerabilities and exposures which

554
00:20:05,919 --> 00:20:07,919
really is a dictionary type

555
00:20:07,919 --> 00:20:10,320
list of standardized vulnerabilities and

556
00:20:10,320 --> 00:20:12,320
things every time there's a new zero-day

557
00:20:12,320 --> 00:20:14,720
attack that comes in it will find an

558
00:20:14,720 --> 00:20:17,440
entry in the cve and then it would find

559
00:20:17,440 --> 00:20:19,840
an entry potentially once this

560
00:20:19,840 --> 00:20:21,360
if it's a web application attack could

561
00:20:21,360 --> 00:20:24,159
essentially find uh usually find a space

562
00:20:24,159 --> 00:20:26,080
in the cpu under one of those categories

563
00:20:26,080 --> 00:20:27,120
as well

564
00:20:27,120 --> 00:20:31,039
so this is really what the cwe and cbss

565
00:20:31,039 --> 00:20:32,640
and the cvtv

566
00:20:32,640 --> 00:20:34,159
and like i told you this understanding

567
00:20:34,159 --> 00:20:35,840
is really important for some of the next

568
00:20:35,840 --> 00:20:37,520
slides that they're going to look at so

569
00:20:37,520 --> 00:20:40,000
we talked about the issue of tools right

570
00:20:40,000 --> 00:20:42,240
tools are great we've got a lot of tools

571
00:20:42,240 --> 00:20:44,720
in african security they're great they

572
00:20:44,720 --> 00:20:47,280
make our life easy they're able to find

573
00:20:47,280 --> 00:20:49,840
flaws and ways and approaches

574
00:20:49,840 --> 00:20:52,480
and generate the data required to find

575
00:20:52,480 --> 00:20:54,559
these things that manual testing might

576
00:20:54,559 --> 00:20:55,919
not be but there are some

577
00:20:55,919 --> 00:20:57,360
inconsistencies

578
00:20:57,360 --> 00:20:59,120
a lot of them

579
00:20:59,120 --> 00:21:01,280
both open source and commercial

580
00:21:01,280 --> 00:21:03,039
have a lot of inconsistencies in the

581
00:21:03,039 --> 00:21:03,840
name

582
00:21:03,840 --> 00:21:06,000
the way that they produce the data for

583
00:21:06,000 --> 00:21:07,520
example

584
00:21:07,520 --> 00:21:09,120
two tools could provide the same

585
00:21:09,120 --> 00:21:11,120
vulnerability but different names they

586
00:21:11,120 --> 00:21:12,799
call it differently they have different

587
00:21:12,799 --> 00:21:14,640
verbiages

588
00:21:14,640 --> 00:21:17,200
most tools kind of accomplish these

589
00:21:17,200 --> 00:21:19,280
results based on the cwp but a lot of

590
00:21:19,280 --> 00:21:22,000
crews don't even give you cwc example

591
00:21:22,000 --> 00:21:23,679
open source tools they expand it with

592
00:21:23,679 --> 00:21:25,919
embracement uh these are tools that

593
00:21:25,919 --> 00:21:28,840
don't give you results that have a cwp

594
00:21:28,840 --> 00:21:31,600
uh number there so how do you kind of

595
00:21:31,600 --> 00:21:33,200
correlate this information there's no

596
00:21:33,200 --> 00:21:34,640
way for you to kind of backtrack the

597
00:21:34,640 --> 00:21:36,720
vulnerabilities from from uh from these

598
00:21:36,720 --> 00:21:39,039
tools and with the nomination

599
00:21:39,039 --> 00:21:40,400
and some of them don't even give you the

600
00:21:40,400 --> 00:21:42,400
taxonomy for example you don't know

601
00:21:42,400 --> 00:21:44,480
whether a particular issue

602
00:21:44,480 --> 00:21:46,640
relates to an oas vulnerability relates

603
00:21:46,640 --> 00:21:48,320
to a fan structure where there will be

604
00:21:48,320 --> 00:21:50,159
there's some kind of taxonomy to these

605
00:21:50,159 --> 00:21:51,760
vulnerabilities as well

606
00:21:51,760 --> 00:21:54,640
and let's see some examples

607
00:21:54,640 --> 00:21:56,159
so let's say for example that you're

608
00:21:56,159 --> 00:21:57,760
running a staff

609
00:21:57,760 --> 00:21:59,840
and sca and adapts and let's say that

610
00:21:59,840 --> 00:22:01,520
you find something like a sql injection

611
00:22:01,520 --> 00:22:03,520
now there's a good possibility that each

612
00:22:03,520 --> 00:22:06,480
of these type of tools would cause equal

613
00:22:06,480 --> 00:22:08,000
injection in three different ways for

614
00:22:08,000 --> 00:22:10,880
example a lab or a verb might call it a

615
00:22:10,880 --> 00:22:13,440
blinding sql injection a class you might

616
00:22:13,440 --> 00:22:15,840
call it a time-based sql injection and

617
00:22:15,840 --> 00:22:17,440
then you would find probably have other

618
00:22:17,440 --> 00:22:19,520
kind of massive inconsistencies because

619
00:22:19,520 --> 00:22:21,039
really when i say this they literally

620
00:22:21,039 --> 00:22:23,120
tried doing this for almost a year when

621
00:22:23,120 --> 00:22:24,880
they're building our own intelligent

622
00:22:24,880 --> 00:22:27,200
correlation system which is orchestra um

623
00:22:27,200 --> 00:22:29,200
and we tried really every combination of

624
00:22:29,200 --> 00:22:30,799
the book right you've you've tried

625
00:22:30,799 --> 00:22:32,000
streaming matches they're trying

626
00:22:32,000 --> 00:22:33,760
intervention distinct algorithms we've

627
00:22:33,760 --> 00:22:35,760
tried ml algorithms and all of these

628
00:22:35,760 --> 00:22:36,640
provide

629
00:22:36,640 --> 00:22:38,559
a lot of these inconsistencies

630
00:22:38,559 --> 00:22:40,720
and what's worse is within web

631
00:22:40,720 --> 00:22:42,960
application scanners let's say you put

632
00:22:42,960 --> 00:22:45,039
an infrastructure or a network security

633
00:22:45,039 --> 00:22:46,799
camera like a national

634
00:22:46,799 --> 00:22:48,559
uh or something like that now nessus

635
00:22:48,559 --> 00:22:49,520
will give you

636
00:22:49,520 --> 00:22:52,000
three ease they don't even give you cds

637
00:22:52,000 --> 00:22:55,080
and then

638
00:23:03,039 --> 00:23:06,000
now this is the result between acunetix

639
00:23:06,000 --> 00:23:08,559
and check marks the one on the top um is

640
00:23:08,559 --> 00:23:10,559
kinetics and the one on the bottom is a

641
00:23:10,559 --> 00:23:12,159
result from check mark that's obviously

642
00:23:12,159 --> 00:23:14,480
from a uh from an intentionally

643
00:23:14,480 --> 00:23:16,000
vulnerable app so don't worry if you see

644
00:23:16,000 --> 00:23:17,600
some code on the screen now i just want

645
00:23:17,600 --> 00:23:19,919
to focus your attention to see the e79

646
00:23:19,919 --> 00:23:21,600
both these ones both these tools are on

647
00:23:21,600 --> 00:23:24,960
the same issue cw 79

648
00:23:24,960 --> 00:23:27,200
is called by the academics as vulnerable

649
00:23:27,200 --> 00:23:29,039
javascript library

650
00:23:29,039 --> 00:23:31,600
but in check marks the same line of code

651
00:23:31,600 --> 00:23:33,679
the same cwe is being called as

652
00:23:33,679 --> 00:23:36,240
respected crossfit

653
00:23:36,240 --> 00:23:39,440
so the same line of code same cwe but

654
00:23:39,440 --> 00:23:40,799
called differently by two different

655
00:23:40,799 --> 00:23:41,679
tools

656
00:23:41,679 --> 00:23:45,200
this is cwe 693 the result on the top is

657
00:23:45,200 --> 00:23:47,039
the app scan and the result on the

658
00:23:47,039 --> 00:23:49,840
bottom is our standard good old friend

659
00:23:49,840 --> 00:23:50,799
birth

660
00:23:50,799 --> 00:23:52,799
now appscan causes vulnerability

661
00:23:52,799 --> 00:23:56,000
insecure cross-frame scripting

662
00:23:56,000 --> 00:23:58,400
and work causing protection mechanical

663
00:23:58,400 --> 00:24:00,400
failure now imagine you give this result

664
00:24:00,400 --> 00:24:02,960
to a developer ask them to fix it they

665
00:24:02,960 --> 00:24:04,559
would look at this wonderful two

666
00:24:04,559 --> 00:24:05,679
different tools and they would have

667
00:24:05,679 --> 00:24:06,960
nothing to say that they had the same

668
00:24:06,960 --> 00:24:08,400
issue they would think that both of

669
00:24:08,400 --> 00:24:10,159
these are two different issues let's

670
00:24:10,159 --> 00:24:12,480
find another example now between two

671
00:24:12,480 --> 00:24:14,640
fact platforms the one on the top is

672
00:24:14,640 --> 00:24:16,400
function bugs which is an open source

673
00:24:16,400 --> 00:24:18,320
platform and the one on the bottom is

674
00:24:18,320 --> 00:24:19,520
very cool

675
00:24:19,520 --> 00:24:22,960
right uh we're talking about the cwe89

676
00:24:22,960 --> 00:24:24,720
it's called sequential it's a secret

677
00:24:24,720 --> 00:24:26,799
injection vulnerability but look at what

678
00:24:26,799 --> 00:24:28,880
they call i mean findtech books calls it

679
00:24:28,880 --> 00:24:31,919
non non-constant string pass to execute

680
00:24:31,919 --> 00:24:34,240
blah blah blah and then

681
00:24:34,240 --> 00:24:35,919
paracord calls it neutralization of

682
00:24:35,919 --> 00:24:37,279
special elements using that skill

683
00:24:37,279 --> 00:24:38,240
command

684
00:24:38,240 --> 00:24:39,039
right

685
00:24:39,039 --> 00:24:41,760
and finally we have

686
00:24:41,760 --> 00:24:43,360
an example where you don't even get a

687
00:24:43,360 --> 00:24:46,159
cwd right this is from node.js from the

688
00:24:46,159 --> 00:24:48,000
top and zap on the bottom

689
00:24:48,000 --> 00:24:48,799
uh

690
00:24:48,799 --> 00:24:50,080
that tells you that it's the sequel

691
00:24:50,080 --> 00:24:51,440
injection vulnerability it gives you

692
00:24:51,440 --> 00:24:54,480
that cwee 89 which all of us know but no

693
00:24:54,480 --> 00:24:55,840
js doesn't tell you anything it doesn't

694
00:24:55,840 --> 00:24:57,520
even tell you what that vulnerability is

695
00:24:57,520 --> 00:25:00,320
so how would a security engineer or how

696
00:25:00,320 --> 00:25:01,760
would a developer

697
00:25:01,760 --> 00:25:04,159
especially when you use so many tools in

698
00:25:04,159 --> 00:25:06,480
automation how do you try and get that

699
00:25:06,480 --> 00:25:08,080
centralized view

700
00:25:08,080 --> 00:25:09,440
is that really the problem that you're

701
00:25:09,440 --> 00:25:11,360
kind of dealing with

702
00:25:11,360 --> 00:25:13,440
and the worst is when you run this in

703
00:25:13,440 --> 00:25:15,600
scale let's say you have a nicely built

704
00:25:15,600 --> 00:25:17,840
or a daily build and there is and let's

705
00:25:17,840 --> 00:25:20,000
say that this is a very simple kind of

706
00:25:20,000 --> 00:25:21,520
an architecture you just put you're just

707
00:25:21,520 --> 00:25:22,720
going to give people then you have a

708
00:25:22,720 --> 00:25:23,760
band-aid

709
00:25:23,760 --> 00:25:25,440
an sda as a app

710
00:25:25,440 --> 00:25:27,279
but this is a very simplistic view of

711
00:25:27,279 --> 00:25:29,600
the world usually you would have a much

712
00:25:29,600 --> 00:25:33,120
more complicated kind of a

713
00:25:33,360 --> 00:25:35,760
genetically fight um and then

714
00:25:35,760 --> 00:25:37,039
let's say if we daily build your

715
00:25:37,039 --> 00:25:38,640
nightstands and the kind of data that

716
00:25:38,640 --> 00:25:40,640
would get generated is just phenomenon

717
00:25:40,640 --> 00:25:42,000
and imagine you have to go through that

718
00:25:42,000 --> 00:25:43,679
data on a daily basis just to kind of

719
00:25:43,679 --> 00:25:45,360
find out what those issues are it's not

720
00:25:45,360 --> 00:25:48,480
a simple task right

721
00:25:48,480 --> 00:25:50,720
let's also talk about some contributors

722
00:25:50,720 --> 00:25:53,120
that make this even more difficult

723
00:25:53,120 --> 00:25:55,120
first is the issue of false qualities

724
00:25:55,120 --> 00:25:57,440
right you cannot eliminate the soft

725
00:25:57,440 --> 00:25:58,640
hormones possible that's something that

726
00:25:58,640 --> 00:26:00,480
they want to talk about or actually you

727
00:26:00,480 --> 00:26:01,600
want to stress i mean if somebody's

728
00:26:01,600 --> 00:26:02,960
saying that they can eliminate false

729
00:26:02,960 --> 00:26:05,520
positives in african security you can't

730
00:26:05,520 --> 00:26:08,400
all you could do is you can reduce the

731
00:26:08,400 --> 00:26:10,640
effect of past positives right

732
00:26:10,640 --> 00:26:12,480
and therefore if there's a way for you

733
00:26:12,480 --> 00:26:13,760
to kind of

734
00:26:13,760 --> 00:26:15,919
de-clutter the results by showing false

735
00:26:15,919 --> 00:26:18,320
positives separately that crystal makes

736
00:26:18,320 --> 00:26:20,559
a lot of score for example burp gives

737
00:26:20,559 --> 00:26:22,240
you something called a scanner

738
00:26:22,240 --> 00:26:24,720
confidence index uh i don't know whether

739
00:26:24,720 --> 00:26:26,159
other tools do it but i know for a fact

740
00:26:26,159 --> 00:26:27,679
that birthdays is every time you find an

741
00:26:27,679 --> 00:26:29,520
issue in birth next to the issue is give

742
00:26:29,520 --> 00:26:31,600
you a confidence index so based on this

743
00:26:31,600 --> 00:26:33,039
conference index

744
00:26:33,039 --> 00:26:34,480
you will know

745
00:26:34,480 --> 00:26:35,279
how

746
00:26:35,279 --> 00:26:38,480
uh impact or how true that particular uh

747
00:26:38,480 --> 00:26:40,159
vulnerability is

748
00:26:40,159 --> 00:26:42,799
so first part is again is a big issue

749
00:26:42,799 --> 00:26:44,480
the second issue is in terms of

750
00:26:44,480 --> 00:26:46,559
prioritization or security right

751
00:26:46,559 --> 00:26:47,600
different tools give you different

752
00:26:47,600 --> 00:26:49,840
prioritizations in terms of how severe a

753
00:26:49,840 --> 00:26:52,240
particular vulnerability is and

754
00:26:52,240 --> 00:26:53,679
especially

755
00:26:53,679 --> 00:26:55,679
you need to look at security in context

756
00:26:55,679 --> 00:26:57,200
your application in your particular

757
00:26:57,200 --> 00:26:58,960
organization so because i can't take two

758
00:26:58,960 --> 00:27:01,120
applications and call sql injection of

759
00:27:01,120 --> 00:27:02,240
both these

760
00:27:02,240 --> 00:27:04,400
applications in the same priority in one

761
00:27:04,400 --> 00:27:05,600
place could be a critical girl in

762
00:27:05,600 --> 00:27:07,360
another place it would cause even medium

763
00:27:07,360 --> 00:27:09,279
depending upon what the impact of that

764
00:27:09,279 --> 00:27:11,200
vulnerability is

765
00:27:11,200 --> 00:27:12,880
and finally the issue of remediation

766
00:27:12,880 --> 00:27:16,159
strategy right in terms of how do you

767
00:27:16,159 --> 00:27:18,240
eliminate that vulnerability most tools

768
00:27:18,240 --> 00:27:21,039
will give you a very standard cookie

769
00:27:21,039 --> 00:27:23,600
cutter appropriate approaches to

770
00:27:23,600 --> 00:27:25,279
remediating vulnerabilities but again we

771
00:27:25,279 --> 00:27:26,880
all know that that doesn't work quite

772
00:27:26,880 --> 00:27:28,240
well because

773
00:27:28,240 --> 00:27:30,559
developers need to really kind of have

774
00:27:30,559 --> 00:27:32,720
more than one option to find and fix

775
00:27:32,720 --> 00:27:34,320
those issues it doesn't make sense if

776
00:27:34,320 --> 00:27:35,520
you just keep them

777
00:27:35,520 --> 00:27:37,679
sometimes remediation could be incorrect

778
00:27:37,679 --> 00:27:39,120
or sometimes remediation strategies

779
00:27:39,120 --> 00:27:40,640
could be insufficient which means that

780
00:27:40,640 --> 00:27:42,799
you need to give them um

781
00:27:42,799 --> 00:27:45,279
an alternative view or an alternative

782
00:27:45,279 --> 00:27:46,159
idea

783
00:27:46,159 --> 00:27:47,919
in terms of your vulnerability so that

784
00:27:47,919 --> 00:27:50,640
could also be an issue that comes across

785
00:27:50,640 --> 00:27:52,080
so with all these things we've talked

786
00:27:52,080 --> 00:27:54,399
about problems all this while now let's

787
00:27:54,399 --> 00:27:56,640
talk about a solution to this how do we

788
00:27:56,640 --> 00:27:59,360
potentially declutter this now obviously

789
00:27:59,360 --> 00:28:02,879
there's no magic pill approach

790
00:28:04,159 --> 00:28:05,840
application security is not a one-state

791
00:28:05,840 --> 00:28:07,840
fix all so therefore the solutions to

792
00:28:07,840 --> 00:28:09,279
update security is not also

793
00:28:09,279 --> 00:28:10,720
one-size-fits-all it really depends on

794
00:28:10,720 --> 00:28:12,799
the context but i do have some ideas

795
00:28:12,799 --> 00:28:14,720
that i want to float around

796
00:28:14,720 --> 00:28:16,720
around the room and see what uh which of

797
00:28:16,720 --> 00:28:19,440
these things work right the first thing

798
00:28:19,440 --> 00:28:22,320
uh is simply the issue of

799
00:28:22,320 --> 00:28:24,640
i'll be able to do two things very

800
00:28:24,640 --> 00:28:26,880
clearly five bucks early

801
00:28:26,880 --> 00:28:29,279
and six bucks early this is really the

802
00:28:29,279 --> 00:28:31,600
motto this is the mantra that secured

803
00:28:31,600 --> 00:28:34,159
engineering teams who need to follow uh

804
00:28:34,159 --> 00:28:37,279
for a more uh uh you know well-washed

805
00:28:37,279 --> 00:28:39,440
well-oiled missionary for the journey if

806
00:28:39,440 --> 00:28:41,279
we can kind of focus our attention

807
00:28:41,279 --> 00:28:44,480
towards just anything that we do with

808
00:28:44,480 --> 00:28:46,000
it needs to fall under one of these two

809
00:28:46,000 --> 00:28:48,159
buckets it either helps

810
00:28:48,159 --> 00:28:50,799
security engineers find bugs early or it

811
00:28:50,799 --> 00:28:53,520
helps developers fix those bugs right

812
00:28:53,520 --> 00:28:55,440
right uh if you can kind of have this

813
00:28:55,440 --> 00:28:57,200
outlook to kind of help us in terms of

814
00:28:57,200 --> 00:28:59,520
what we're talking about

815
00:28:59,520 --> 00:29:00,720
i'm sorry the first thing that i want to

816
00:29:00,720 --> 00:29:03,760
talk about is vulnerability correlation

817
00:29:03,760 --> 00:29:06,240
or most automated contribution uh now

818
00:29:06,240 --> 00:29:07,679
going back to a previous discussion

819
00:29:07,679 --> 00:29:08,799
let's say that you have a string of

820
00:29:08,799 --> 00:29:12,960
tools eta that runs on a nike

821
00:29:14,320 --> 00:29:15,360
across

822
00:29:15,360 --> 00:29:17,520
all of these tools uh now correlation

823
00:29:17,520 --> 00:29:18,880
platforms essentially kind of help

824
00:29:18,880 --> 00:29:20,399
secure the engineers

825
00:29:20,399 --> 00:29:21,360
issues

826
00:29:21,360 --> 00:29:23,440
uh without them personally needing to

827
00:29:23,440 --> 00:29:26,399
say okay so here is an issue from that

828
00:29:26,399 --> 00:29:28,159
this state is equal like i have

829
00:29:28,159 --> 00:29:30,240
something else from that it seems like

830
00:29:30,240 --> 00:29:31,520
it's equal i want to put these both

831
00:29:31,520 --> 00:29:32,880
together to see the same button so

832
00:29:32,880 --> 00:29:34,640
coordination tools do that

833
00:29:34,640 --> 00:29:37,039
uh they are able to identify results

834
00:29:37,039 --> 00:29:38,559
that come from multiple tools that

835
00:29:38,559 --> 00:29:40,080
they're able to kind of correlate those

836
00:29:40,080 --> 00:29:42,159
results and there are some uh there are

837
00:29:42,159 --> 00:29:43,840
some examples of those i'm not going to

838
00:29:43,840 --> 00:29:45,679
name those two because

839
00:29:45,679 --> 00:29:47,200
i don't want to make it sound like this

840
00:29:47,200 --> 00:29:49,039
is commercial but you can actually go

841
00:29:49,039 --> 00:29:51,120
ahead and look at a lot of open source

842
00:29:51,120 --> 00:29:52,559
and commercial tools out there that

843
00:29:52,559 --> 00:29:54,720
helps you correlate the responsibilities

844
00:29:54,720 --> 00:29:55,600
right

845
00:29:55,600 --> 00:29:57,200
uh because if you remember the previous

846
00:29:57,200 --> 00:30:00,080
slide that we saw uh we saw as to how

847
00:30:00,080 --> 00:30:03,039
different tools provide different uh

848
00:30:03,039 --> 00:30:06,399
different profiles right for example um

849
00:30:06,399 --> 00:30:07,840
let's say you have a source composition

850
00:30:07,840 --> 00:30:08,880
analysis

851
00:30:08,880 --> 00:30:10,880
run finding a particular tool they are

852
00:30:10,880 --> 00:30:12,159
right they are widely different in the

853
00:30:12,159 --> 00:30:13,760
way that the staff would find that issue

854
00:30:13,760 --> 00:30:15,360
for example an saa would say that it

855
00:30:15,360 --> 00:30:17,679
found a particular issue with the nested

856
00:30:17,679 --> 00:30:20,000
dependency in a library level down for

857
00:30:20,000 --> 00:30:23,200
example say an encryption library uh

858
00:30:23,200 --> 00:30:25,679
that users say a triple test has a

859
00:30:25,679 --> 00:30:27,520
particular issue with the basic 64

860
00:30:27,520 --> 00:30:29,679
implementation in that library

861
00:30:29,679 --> 00:30:31,520
and something like that so that would be

862
00:30:31,520 --> 00:30:34,080
the world of review that an asda would

863
00:30:34,080 --> 00:30:36,080
give but a sash will give you a

864
00:30:36,080 --> 00:30:37,440
completely different view of the world

865
00:30:37,440 --> 00:30:38,960
give you a line number where an issue

866
00:30:38,960 --> 00:30:40,799
exists so combination tools essentially

867
00:30:40,799 --> 00:30:42,240
kind of helps you

868
00:30:42,240 --> 00:30:44,960
put these various data sources together

869
00:30:44,960 --> 00:30:47,520
in terms of

870
00:30:48,000 --> 00:30:49,840
um the other thing i want to talk about

871
00:30:49,840 --> 00:30:53,039
is security as a code uh now

872
00:30:53,039 --> 00:30:55,360
we've always talked about the fact in

873
00:30:55,360 --> 00:30:57,440
all security conferences and talks we've

874
00:30:57,440 --> 00:30:59,039
always said developers need to

875
00:30:59,039 --> 00:31:00,159
understand security and this is

876
00:31:00,159 --> 00:31:02,399
something that we've been talking about

877
00:31:02,399 --> 00:31:04,880
in the last 10 years in african security

878
00:31:04,880 --> 00:31:06,399
now i want to change this statement

879
00:31:06,399 --> 00:31:07,919
we're talking enough about the fact that

880
00:31:07,919 --> 00:31:09,919
developers need to understand security

881
00:31:09,919 --> 00:31:11,600
but i think we need to now

882
00:31:11,600 --> 00:31:15,039
ask security teams to understand code

883
00:31:15,039 --> 00:31:17,039
and that's the fundamental change that

884
00:31:17,039 --> 00:31:18,799
needs to come abroad yes developers have

885
00:31:18,799 --> 00:31:20,240
been trained to understand security

886
00:31:20,240 --> 00:31:21,679
they've done security courses they've

887
00:31:21,679 --> 00:31:23,760
done all of these things but how many

888
00:31:23,760 --> 00:31:26,320
security engineers actually understand

889
00:31:26,320 --> 00:31:27,519
code

890
00:31:27,519 --> 00:31:29,360
how much of how many of them still write

891
00:31:29,360 --> 00:31:31,519
code or read code at

892
00:31:31,519 --> 00:31:34,240
a fundamental level right because if

893
00:31:34,240 --> 00:31:36,480
security is able to understand core a

894
00:31:36,480 --> 00:31:38,559
lot of these problems get solved for

895
00:31:38,559 --> 00:31:40,640
example they can write explicit scripts

896
00:31:40,640 --> 00:31:43,840
and expired scripts actually help you

897
00:31:43,840 --> 00:31:45,440
take a particular security business

898
00:31:45,440 --> 00:31:47,440
logic flaw in an application security

899
00:31:47,440 --> 00:31:49,440
clause and then be able to kind of write

900
00:31:49,440 --> 00:31:51,039
the selenium script around it or to

901
00:31:51,039 --> 00:31:52,960
kubernetes around it and add it back to

902
00:31:52,960 --> 00:31:54,720
a security regression

903
00:31:54,720 --> 00:31:56,159
that is possible

904
00:31:56,159 --> 00:31:58,559
uh with reset which means that

905
00:31:58,559 --> 00:32:00,399
just like how functional testing has

906
00:32:00,399 --> 00:32:02,159
functional testing suites security

907
00:32:02,159 --> 00:32:03,440
testing can also help the journey

908
00:32:03,440 --> 00:32:05,120
distance that's the possibility if

909
00:32:05,120 --> 00:32:07,919
you're able to kind of write code uh

910
00:32:07,919 --> 00:32:10,080
you're also able to give

911
00:32:10,080 --> 00:32:12,240
very very focused remediations or

912
00:32:12,240 --> 00:32:15,039
alternative limitations

913
00:32:15,039 --> 00:32:16,960
therefore being able to

914
00:32:16,960 --> 00:32:19,039
you know be more empathetic towards

915
00:32:19,039 --> 00:32:20,799
developers be able to kind of talk to

916
00:32:20,799 --> 00:32:22,559
them with the same language

917
00:32:22,559 --> 00:32:24,320
as they do and therefore you're able to

918
00:32:24,320 --> 00:32:26,480
kind of get into that community a little

919
00:32:26,480 --> 00:32:27,760
bit as well

920
00:32:27,760 --> 00:32:30,320
so that's another advantage of of having

921
00:32:30,320 --> 00:32:32,799
to go uh the third thing that i want to

922
00:32:32,799 --> 00:32:35,919
talk about is that of cross training

923
00:32:35,919 --> 00:32:37,840
right uh and what i mean by cross

924
00:32:37,840 --> 00:32:40,840
training is uh the fact that

925
00:32:40,840 --> 00:32:44,480
we talk about security and engineering

926
00:32:44,480 --> 00:32:46,159
in two different silos and things like

927
00:32:46,159 --> 00:32:49,120
that we are doing a lot of work in terms

928
00:32:49,120 --> 00:32:50,000
of

929
00:32:50,000 --> 00:32:52,000
bridging that gap from a technology

930
00:32:52,000 --> 00:32:54,240
perspective i think there's also a lot

931
00:32:54,240 --> 00:32:55,600
of bridging that needs to be done from a

932
00:32:55,600 --> 00:32:57,360
cultural standpoint

933
00:32:57,360 --> 00:32:59,279
and part of that is being able to kind

934
00:32:59,279 --> 00:33:00,799
of train

935
00:33:00,799 --> 00:33:02,399
so

936
00:33:02,399 --> 00:33:04,399
when we talk about training

937
00:33:04,399 --> 00:33:07,440
i just don't mean training as a point in

938
00:33:07,440 --> 00:33:08,960
time activity

939
00:33:08,960 --> 00:33:11,279
especially in terms of product teams

940
00:33:11,279 --> 00:33:14,159
you have a lot of people let's say that

941
00:33:14,159 --> 00:33:15,519
a typical product team would have a

942
00:33:15,519 --> 00:33:17,360
developer group they would have a qa

943
00:33:17,360 --> 00:33:19,360
group they would have a automation or a

944
00:33:19,360 --> 00:33:21,200
devops group and they would have a

945
00:33:21,200 --> 00:33:22,960
security group

946
00:33:22,960 --> 00:33:23,760
now

947
00:33:23,760 --> 00:33:25,840
there is a lot of skills that are

948
00:33:25,840 --> 00:33:27,760
transferable amongst these people so

949
00:33:27,760 --> 00:33:29,440
there's a lot that security can learn

950
00:33:29,440 --> 00:33:31,760
from qa there's a lot that devops can

951
00:33:31,760 --> 00:33:33,440
learn from development there's a lot

952
00:33:33,440 --> 00:33:35,679
from things there's a lot that qa can

953
00:33:35,679 --> 00:33:37,279
learn from security

954
00:33:37,279 --> 00:33:38,799
there is a lot of need for

955
00:33:38,799 --> 00:33:40,960
cross-functional training and this

956
00:33:40,960 --> 00:33:42,880
training would kind of help build a lot

957
00:33:42,880 --> 00:33:43,679
of

958
00:33:43,679 --> 00:33:45,919
efficiencies within the existing client

959
00:33:45,919 --> 00:33:47,840
organizations itself

960
00:33:47,840 --> 00:33:49,919
so you are able to kind of not just look

961
00:33:49,919 --> 00:33:52,080
at vendors for all things but you're

962
00:33:52,080 --> 00:33:53,840
also being able to develop

963
00:33:53,840 --> 00:33:56,320
internal capabilities for us to tackle a

964
00:33:56,320 --> 00:33:58,240
lot of application problems and that's

965
00:33:58,240 --> 00:33:59,200
something

966
00:33:59,200 --> 00:34:01,200
that we've been talking about for a lot

967
00:34:01,200 --> 00:34:03,600
so so training should be more of a

968
00:34:03,600 --> 00:34:04,640
reference

969
00:34:04,640 --> 00:34:06,960
right and

970
00:34:12,159 --> 00:34:13,918
they would go ahead and refer to case

971
00:34:13,918 --> 00:34:16,000
files they would go ahead and refer to

972
00:34:16,000 --> 00:34:17,599
previous such instances that have

973
00:34:17,599 --> 00:34:19,280
happened so training needs to be like

974
00:34:19,280 --> 00:34:20,719
that training program needs to be

975
00:34:20,719 --> 00:34:22,239
something that developers or private

976
00:34:22,239 --> 00:34:24,399
engineers are able to refer to and not

977
00:34:24,399 --> 00:34:26,000
something that they just get certified

978
00:34:26,000 --> 00:34:27,679
against or just something like

979
00:34:27,679 --> 00:34:29,918
uh something that they need to do

980
00:34:29,918 --> 00:34:31,040
right

981
00:34:31,040 --> 00:34:33,599
so i often say know what you need

982
00:34:33,599 --> 00:34:34,639
and not

983
00:34:34,639 --> 00:34:36,000
what you need to know right if it's

984
00:34:36,000 --> 00:34:38,320
always important that

985
00:34:38,320 --> 00:34:41,359
you need to have some skill at a point

986
00:34:41,359 --> 00:34:43,040
in time that is relevant to the kind of

987
00:34:43,040 --> 00:34:45,759
work that you're doing

988
00:34:47,040 --> 00:34:48,639
i've also seen

989
00:34:48,639 --> 00:34:51,119
a security champions program be very

990
00:34:51,119 --> 00:34:52,560
effective and we talked about that a

991
00:34:52,560 --> 00:34:54,079
little bit earlier as well where you

992
00:34:54,079 --> 00:34:55,119
said that

993
00:34:55,119 --> 00:34:56,800
you could have a centralized security

994
00:34:56,800 --> 00:34:58,480
team and you could

995
00:34:58,480 --> 00:35:00,720
create the squads

996
00:35:00,720 --> 00:35:02,320
of security champions who are

997
00:35:02,320 --> 00:35:04,079
essentially developers turned security

998
00:35:04,079 --> 00:35:05,760
professionals who are able to kind of

999
00:35:05,760 --> 00:35:07,760
take the message of security programs

1000
00:35:07,760 --> 00:35:09,920
across to various teams so therefore

1001
00:35:09,920 --> 00:35:12,320
you're not having to kind of have the

1002
00:35:12,320 --> 00:35:14,880
entire burden of security

1003
00:35:14,880 --> 00:35:16,880
of the security of an app stick program

1004
00:35:16,880 --> 00:35:18,640
on a few security people but you're

1005
00:35:18,640 --> 00:35:20,960
actually being able to have them

1006
00:35:20,960 --> 00:35:23,359
split across

1007
00:35:23,359 --> 00:35:24,800
so these are some of the things that we

1008
00:35:24,800 --> 00:35:27,119
could do from a training initiative i

1009
00:35:27,119 --> 00:35:29,440
know we've got another 10 more minutes i

1010
00:35:29,440 --> 00:35:32,320
want to just keep some time for q a but

1011
00:35:32,320 --> 00:35:35,040
in summary um i'd like to leave you with

1012
00:35:35,040 --> 00:35:37,680
this topic from a core vulnerability

1013
00:35:37,680 --> 00:35:40,560
management standpoint um i think the

1014
00:35:40,560 --> 00:35:42,079
focus should be

1015
00:35:42,079 --> 00:35:44,800
beyond just traffic light indicators of

1016
00:35:44,800 --> 00:35:46,720
how many vulnerabilities are high medium

1017
00:35:46,720 --> 00:35:49,119
or low uh or just the sheer number of

1018
00:35:49,119 --> 00:35:52,160
issues that the teams have found um

1019
00:35:52,160 --> 00:35:54,160
because there is an actual value in the

1020
00:35:54,160 --> 00:35:56,000
metadata that these foundability

1021
00:35:56,000 --> 00:35:58,480
statistics provide for example if i see

1022
00:35:58,480 --> 00:36:00,640
more issues propping up in a certain

1023
00:36:00,640 --> 00:36:02,400
class of vulnerabilities that are more

1024
00:36:02,400 --> 00:36:04,880
design oriented for example perhaps the

1025
00:36:04,880 --> 00:36:06,480
focus needs to be around threat modeling

1026
00:36:06,480 --> 00:36:08,240
and not so much around electing static

1027
00:36:08,240 --> 00:36:10,079
code tools

1028
00:36:10,079 --> 00:36:12,720
and it is also about using the right set

1029
00:36:12,720 --> 00:36:14,800
of tools organizations would need to

1030
00:36:14,800 --> 00:36:17,440
kind of look at procuring platforms but

1031
00:36:17,440 --> 00:36:19,760
not just keep constant mind body but

1032
00:36:19,760 --> 00:36:22,079
things like allies benefit how well do

1033
00:36:22,079 --> 00:36:24,000
they integrate by other students how

1034
00:36:24,000 --> 00:36:25,440
well do i integrate with existing

1035
00:36:25,440 --> 00:36:26,880
workflows

1036
00:36:26,880 --> 00:36:28,960
and how what kind of quality of metrics

1037
00:36:28,960 --> 00:36:30,320
do they give

1038
00:36:30,320 --> 00:36:32,079
right and things like that now while

1039
00:36:32,079 --> 00:36:33,359
this slide

1040
00:36:33,359 --> 00:36:34,960
summarizes what we've discussed in a

1041
00:36:34,960 --> 00:36:37,440
nutshell the larger role that we as a

1042
00:36:37,440 --> 00:36:39,599
security community have to play in this

1043
00:36:39,599 --> 00:36:41,839
decade and i always say that the last

1044
00:36:41,839 --> 00:36:44,960
decade the end that in 2020 was a decade

1045
00:36:44,960 --> 00:36:46,320
that kind of gave

1046
00:36:46,320 --> 00:36:49,119
application security the prime time slot

1047
00:36:49,119 --> 00:36:50,400
inside of the engine

1048
00:36:50,400 --> 00:36:52,240
which is great because today when you

1049
00:36:52,240 --> 00:36:54,320
say appsec people stand up and people

1050
00:36:54,320 --> 00:36:55,680
look at you people

1051
00:36:55,680 --> 00:36:57,359
have to know what you know what you have

1052
00:36:57,359 --> 00:36:59,839
to say so that is done the last decade

1053
00:36:59,839 --> 00:37:02,960
gave up this part but going forward i

1054
00:37:02,960 --> 00:37:05,359
think the focus for us uh really needs

1055
00:37:05,359 --> 00:37:07,359
to be being able to make the best use of

1056
00:37:07,359 --> 00:37:08,720
it right

1057
00:37:08,720 --> 00:37:10,320
so so when

1058
00:37:10,320 --> 00:37:12,400
this decade was actually about realizing

1059
00:37:12,400 --> 00:37:13,760
the various possibilities that

1060
00:37:13,760 --> 00:37:16,079
automation and the scale of abstract

1061
00:37:16,079 --> 00:37:18,720
could bring to priority um so i think

1062
00:37:18,720 --> 00:37:21,680
that really needs to be the focus

1063
00:37:21,680 --> 00:37:23,119
for us as

1064
00:37:23,119 --> 00:37:25,520
security engineers as we move forward

1065
00:37:25,520 --> 00:37:28,320
so with that um i'd like to say thank

1066
00:37:28,320 --> 00:37:31,520
you to the besides barcelona for

1067
00:37:31,520 --> 00:37:33,359
inviting me and accepting me for this

1068
00:37:33,359 --> 00:37:35,359
presentation

1069
00:37:35,359 --> 00:37:37,680
so with that having said that i'd be

1070
00:37:37,680 --> 00:37:39,839
happy to take any questions that anybody

1071
00:37:39,839 --> 00:37:42,320
might have

1072
00:37:45,119 --> 00:37:47,359
thank you raul it was a very interesting

1073
00:37:47,359 --> 00:37:51,359
presentation on this new paradigm

1074
00:37:51,359 --> 00:37:53,680
is there any question

1075
00:37:53,680 --> 00:37:56,800
i don't see any question

1076
00:37:56,800 --> 00:37:59,680
in the zoom

1077
00:38:02,240 --> 00:38:04,480
let's check also slack i think there

1078
00:38:04,480 --> 00:38:07,839
isn't anything specific

1079
00:38:09,200 --> 00:38:11,520
so first of all you know thanks for your

1080
00:38:11,520 --> 00:38:13,599
presentation that was pretty interesting

1081
00:38:13,599 --> 00:38:14,640
so

1082
00:38:14,640 --> 00:38:15,839
i got

1083
00:38:15,839 --> 00:38:19,760
a question actually so i mean the um

1084
00:38:19,760 --> 00:38:21,839
we're saying that security thieves you

1085
00:38:21,839 --> 00:38:22,880
know

1086
00:38:22,880 --> 00:38:24,640
in some of the cases you know let's say

1087
00:38:24,640 --> 00:38:26,240
i would be overloaded you know we're

1088
00:38:26,240 --> 00:38:27,760
talking about you know probabilities

1089
00:38:27,760 --> 00:38:30,880
right like we count them by the numbers

1090
00:38:30,880 --> 00:38:33,440
so i wonder if you have any maybe some

1091
00:38:33,440 --> 00:38:36,560
ideas or concepts about maybe protesting

1092
00:38:36,560 --> 00:38:38,480
in a different way so i've seen things

1093
00:38:38,480 --> 00:38:40,480
like this i'm moving more into

1094
00:38:40,480 --> 00:38:42,880
you know trying to analyze the um the

1095
00:38:42,880 --> 00:38:45,119
risk to the organization versus you know

1096
00:38:45,119 --> 00:38:47,520
to the specific you know they say um

1097
00:38:47,520 --> 00:38:49,359
vulnerability risk call you know that

1098
00:38:49,359 --> 00:38:51,680
might not be you know the uh exactly the

1099
00:38:51,680 --> 00:38:53,680
same so i wonder if you have any ideas

1100
00:38:53,680 --> 00:38:55,920
as well about you know

1101
00:38:55,920 --> 00:38:58,560
that prioritization of vulnerabilities

1102
00:38:58,560 --> 00:39:01,920
to be more let's say pragmatic you know

1103
00:39:01,920 --> 00:39:04,160
in the way that we do

1104
00:39:04,160 --> 00:39:06,880
yeah so so i think uh the idea here

1105
00:39:06,880 --> 00:39:08,640
really in terms of the role that the

1106
00:39:08,640 --> 00:39:10,640
regard engineering plays as well but

1107
00:39:10,640 --> 00:39:12,160
really i wanted to kind of bring about

1108
00:39:12,160 --> 00:39:14,079
that in terms of the presentation as

1109
00:39:14,079 --> 00:39:15,359
well so

1110
00:39:15,359 --> 00:39:17,280
i think the way that the description of

1111
00:39:17,280 --> 00:39:20,880
the application is defined today is

1112
00:39:20,880 --> 00:39:22,960
is quite confusing because people always

1113
00:39:22,960 --> 00:39:25,040
think of an aspect engineer is almost

1114
00:39:25,040 --> 00:39:29,040
like a superhero he needs to understand

1115
00:39:34,560 --> 00:39:36,480
so i think the focus of the presentation

1116
00:39:36,480 --> 00:39:38,960
also was to say that try and understand

1117
00:39:38,960 --> 00:39:40,560
what skills are core for an african

1118
00:39:40,560 --> 00:39:42,720
security engineer so therefore you give

1119
00:39:42,720 --> 00:39:44,720
him or her enough time

1120
00:39:44,720 --> 00:39:47,839
and enough space for more research and

1121
00:39:47,839 --> 00:39:49,520
more uh

1122
00:39:49,520 --> 00:39:51,119
you know things that can be more

1123
00:39:51,119 --> 00:39:52,880
intuitive and many hours

1124
00:39:52,880 --> 00:39:54,400
trying to be more pragmatic because

1125
00:39:54,400 --> 00:39:56,240
today the problem really is that people

1126
00:39:56,240 --> 00:39:58,079
are overwhelmed and overloaded with work

1127
00:39:58,079 --> 00:40:00,640
that are not really course acceptable uh

1128
00:40:00,640 --> 00:40:02,400
a lot of things that could be automated

1129
00:40:02,400 --> 00:40:04,240
are not automated and a lot of things

1130
00:40:04,240 --> 00:40:06,400
that should not be automated is what is

1131
00:40:06,400 --> 00:40:08,400
automated so i think there needs to be a

1132
00:40:08,400 --> 00:40:09,920
step back and we need to kind of think

1133
00:40:09,920 --> 00:40:10,880
about

1134
00:40:10,880 --> 00:40:12,560
what are the core skills of an aspect

1135
00:40:12,560 --> 00:40:13,760
engineer

1136
00:40:13,760 --> 00:40:15,760
and therefore look at it from that

1137
00:40:15,760 --> 00:40:18,240
viewpoint

1138
00:40:20,720 --> 00:40:23,200
that makes

1139
00:40:23,200 --> 00:40:25,599
raul i sense a question for you do you

1140
00:40:25,599 --> 00:40:28,240
think if an organization is a mature

1141
00:40:28,240 --> 00:40:29,440
enough

1142
00:40:29,440 --> 00:40:32,960
a back bounty program can help with the

1143
00:40:32,960 --> 00:40:34,640
overload of information that the

1144
00:40:34,640 --> 00:40:36,720
security teams have

1145
00:40:36,720 --> 00:40:38,880
what's your point of view on a bug

1146
00:40:38,880 --> 00:40:41,200
bounty program

1147
00:40:41,200 --> 00:40:43,359
so i think a bug body program is very

1148
00:40:43,359 --> 00:40:45,920
very useful i think it is one of uh i

1149
00:40:45,920 --> 00:40:48,960
mean if done correctly it is it is a

1150
00:40:48,960 --> 00:40:51,599
great source of additional

1151
00:40:51,599 --> 00:40:53,440
uh vulnerabilities that a program

1152
00:40:53,440 --> 00:40:54,880
management can get because today you

1153
00:40:54,880 --> 00:40:57,280
have different source of uh getting

1154
00:40:57,280 --> 00:40:59,359
issues you get you get issues from tools

1155
00:40:59,359 --> 00:41:00,720
you get issues from internal event

1156
00:41:00,720 --> 00:41:02,240
testers you get your issues from your

1157
00:41:02,240 --> 00:41:04,880
customers now a bug bounty program is

1158
00:41:04,880 --> 00:41:07,200
just a way for you to get any kind of

1159
00:41:07,200 --> 00:41:09,040
issues that all these sources have

1160
00:41:09,040 --> 00:41:12,240
missed uh from an external uh from an

1161
00:41:12,240 --> 00:41:15,599
external party uh because a pentester is

1162
00:41:15,599 --> 00:41:17,040
a pentester whether there is internal or

1163
00:41:17,040 --> 00:41:18,880
external so i have seen organizations

1164
00:41:18,880 --> 00:41:21,680
where they run bug body programs

1165
00:41:21,680 --> 00:41:24,640
to to get a very valuable source of

1166
00:41:24,640 --> 00:41:26,880
information for potential security

1167
00:41:26,880 --> 00:41:29,280
issues that neither tools have found or

1168
00:41:29,280 --> 00:41:31,200
internal penetrators are found on

1169
00:41:31,200 --> 00:41:32,839
external appendages so therefore

1170
00:41:32,839 --> 00:41:35,839
sometimes uh bug hunters might find that

1171
00:41:35,839 --> 00:41:38,960
one or two just one or two very specific

1172
00:41:38,960 --> 00:41:41,040
critical issues which could be great and

1173
00:41:41,040 --> 00:41:42,800
once you find those issues you also have

1174
00:41:42,800 --> 00:41:44,800
an opportunity for you to to kind of

1175
00:41:44,800 --> 00:41:46,720
take those issues and loop them back

1176
00:41:46,720 --> 00:41:48,079
into your

1177
00:41:48,079 --> 00:41:49,839
pipeline for you to create correct

1178
00:41:49,839 --> 00:41:52,640
models that mimic those issues so more

1179
00:41:52,640 --> 00:41:54,000
functionalities also gives you an

1180
00:41:54,000 --> 00:41:57,359
opportunity to create more uh innovative

1181
00:41:57,359 --> 00:41:58,880
security test cases that you might not

1182
00:41:58,880 --> 00:42:02,040
have thought

1183
00:42:06,079 --> 00:42:08,560
thanks so much for for your time today i

1184
00:42:08,560 --> 00:42:10,180
really appreciate it

1185
00:42:10,180 --> 00:42:11,599
[Music]

1186
00:42:11,599 --> 00:42:13,280
i hope to see you again at future

1187
00:42:13,280 --> 00:42:14,800
conferences

1188
00:42:14,800 --> 00:42:17,839
sure thank you so much

