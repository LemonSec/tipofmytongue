1
00:00:03,520 --> 00:00:05,520
uh it should be

2
00:00:05,520 --> 00:00:08,000
visible now

3
00:00:08,000 --> 00:00:09,120
okay

4
00:00:09,120 --> 00:00:11,040
perfect thanks

5
00:00:11,040 --> 00:00:12,639
okay so

6
00:00:12,639 --> 00:00:15,759
well first of all uh thanks to besides

7
00:00:15,759 --> 00:00:18,480
to christian

8
00:00:18,480 --> 00:00:20,080
to you david

9
00:00:20,080 --> 00:00:23,119
to all the organizers

10
00:00:23,119 --> 00:00:25,039
of this conference

11
00:00:25,039 --> 00:00:28,000
it's my first time here and i'm really

12
00:00:28,000 --> 00:00:29,359
excited to

13
00:00:29,359 --> 00:00:30,800
present

14
00:00:30,800 --> 00:00:32,719
well

15
00:00:32,719 --> 00:00:35,360
the weird things i like to investigate

16
00:00:35,360 --> 00:00:36,480
about

17
00:00:36,480 --> 00:00:39,920
so this is the title of the

18
00:00:39,920 --> 00:00:41,760
of the talk

19
00:00:41,760 --> 00:00:42,559
it's

20
00:00:42,559 --> 00:00:45,120
hacking coordinates 101

21
00:00:45,120 --> 00:00:46,399
as the leader

22
00:00:46,399 --> 00:00:48,719
was saying

23
00:00:48,719 --> 00:00:50,399
this will include

24
00:00:50,399 --> 00:00:52,399
like

25
00:00:52,399 --> 00:00:53,760
some

26
00:00:53,760 --> 00:00:55,360
key ideas of

27
00:00:55,360 --> 00:00:58,480
how these

28
00:00:58,480 --> 00:01:00,960
can be attacked and also how uh it could

29
00:01:00,960 --> 00:01:02,160
be hardened

30
00:01:02,160 --> 00:01:04,400
to avoid those attacks

31
00:01:04,400 --> 00:01:06,880
uh and i hope well

32
00:01:06,880 --> 00:01:09,360
you will all like the talk

33
00:01:09,360 --> 00:01:12,479
so let's start well

34
00:01:12,479 --> 00:01:13,840
who am i

35
00:01:13,840 --> 00:01:15,439
my name is

36
00:01:15,439 --> 00:01:18,640
daniel monton aka star code

37
00:01:18,640 --> 00:01:20,159
i'm a pentester

38
00:01:20,159 --> 00:01:23,040
at intel innotech security i like to

39
00:01:23,040 --> 00:01:23,840
hand

40
00:01:23,840 --> 00:01:25,119
cvs

41
00:01:25,119 --> 00:01:27,759
from time to time in random software i

42
00:01:27,759 --> 00:01:29,200
download

43
00:01:29,200 --> 00:01:31,119
i've written some tools like that one

44
00:01:31,119 --> 00:01:33,920
and the expounder and you can find me

45
00:01:33,920 --> 00:01:35,920
there on twitter if later you have any

46
00:01:35,920 --> 00:01:38,079
questions or whatever

47
00:01:38,079 --> 00:01:39,439
so

48
00:01:39,439 --> 00:01:42,240
let's start er first of all as this is a

49
00:01:42,240 --> 00:01:44,399
101

50
00:01:44,399 --> 00:01:46,560
we will start by introducing what is

51
00:01:46,560 --> 00:01:48,799
kubernetes for the

52
00:01:48,799 --> 00:01:51,280
ones who don't uh

53
00:01:51,280 --> 00:01:53,439
well don't know the technology that well

54
00:01:53,439 --> 00:01:56,079
maybe you have heard it but uh you know

55
00:01:56,079 --> 00:01:56,960
this

56
00:01:56,960 --> 00:01:57,840
is

57
00:01:57,840 --> 00:02:01,280
a more in-depth introduction to this

58
00:02:01,280 --> 00:02:02,960
so this is

59
00:02:02,960 --> 00:02:05,520
the oral schema

60
00:02:05,520 --> 00:02:07,439
these are the pieces

61
00:02:07,439 --> 00:02:11,119
of a kubernetes environment

62
00:02:11,120 --> 00:02:13,599
all the nodes maybe virtual machines

63
00:02:13,599 --> 00:02:15,520
maybe

64
00:02:15,520 --> 00:02:17,120
physical machines

65
00:02:17,120 --> 00:02:19,760
and mostly their worker nodes which are

66
00:02:19,760 --> 00:02:21,200
like this ones

67
00:02:21,200 --> 00:02:24,640
and the master node the master node

68
00:02:24,640 --> 00:02:27,120
is the key to the kingdom

69
00:02:27,120 --> 00:02:29,520
if you can compromise the master node

70
00:02:29,520 --> 00:02:32,239
that's it you get everything from there

71
00:02:32,239 --> 00:02:35,519
and these are what the parts of

72
00:02:35,519 --> 00:02:36,800
of this

73
00:02:36,800 --> 00:02:39,440
the master node includes the scheduler

74
00:02:39,440 --> 00:02:42,879
the api server which is actually the

75
00:02:42,879 --> 00:02:44,720
more or less the heart of

76
00:02:44,720 --> 00:02:47,519
a kubernetes environment

77
00:02:47,519 --> 00:02:49,920
as you can see everything interacts with

78
00:02:49,920 --> 00:02:53,519
the api server it's like you know the

79
00:02:53,519 --> 00:02:55,200
if you get into this

80
00:02:55,200 --> 00:02:57,280
you're done

81
00:02:57,280 --> 00:02:58,879
it has an optional cloud controller

82
00:02:58,879 --> 00:03:03,040
manager in case uh well you want to

83
00:03:03,040 --> 00:03:05,599
in case you want to

84
00:03:05,599 --> 00:03:07,040
launch or

85
00:03:07,040 --> 00:03:10,080
start building a kubernetes environment

86
00:03:10,080 --> 00:03:10,879
uh

87
00:03:10,879 --> 00:03:14,080
well in whatever cloud services you want

88
00:03:14,080 --> 00:03:16,080
uh and this is the

89
00:03:16,080 --> 00:03:18,640
well a typical worker node

90
00:03:18,640 --> 00:03:19,440
uh

91
00:03:19,440 --> 00:03:22,239
this cubelet is an agent uh which runs

92
00:03:22,239 --> 00:03:25,040
in every of the nodes and interacts as

93
00:03:25,040 --> 00:03:26,799
you can see also with the

94
00:03:26,799 --> 00:03:29,280
with the api server and so

95
00:03:29,280 --> 00:03:30,080
uh

96
00:03:30,080 --> 00:03:32,640
well dc advisor thing it's uh

97
00:03:32,640 --> 00:03:34,879
like a matrix uh

98
00:03:34,879 --> 00:03:37,280
a matrix thing that sometimes uh leaks

99
00:03:37,280 --> 00:03:39,840
information is full to an attacker and

100
00:03:39,840 --> 00:03:41,519
this cube proxy is the component

101
00:03:41,519 --> 00:03:44,319
responsible of exposing services to the

102
00:03:44,319 --> 00:03:45,440
internet

103
00:03:45,440 --> 00:03:47,440
and which is well

104
00:03:47,440 --> 00:03:50,239
as you already know er

105
00:03:50,239 --> 00:03:52,879
probably the weakest point of this

106
00:03:52,879 --> 00:03:56,159
and in each of these nodes uh

107
00:03:56,159 --> 00:03:57,760
there are pots

108
00:03:57,760 --> 00:03:59,200
it may not

109
00:03:59,200 --> 00:04:00,560
be equal

110
00:04:00,560 --> 00:04:03,120
a part to a container but

111
00:04:03,120 --> 00:04:06,319
in the majority well most of the times

112
00:04:06,319 --> 00:04:09,519
there is just one container per pot

113
00:04:09,519 --> 00:04:10,879
which is like

114
00:04:10,879 --> 00:04:12,879
more or less another container

115
00:04:12,879 --> 00:04:14,400
and

116
00:04:14,400 --> 00:04:17,040
i forgot to mention the epcd

117
00:04:17,040 --> 00:04:19,959
database this is a key value database

118
00:04:19,959 --> 00:04:22,560
[Music]

119
00:04:22,560 --> 00:04:23,600
it's

120
00:04:23,600 --> 00:04:24,720
well

121
00:04:24,720 --> 00:04:26,720
it holds a lot of

122
00:04:26,720 --> 00:04:29,520
juicy information uh

123
00:04:29,520 --> 00:04:31,600
and we will see it before we'll see it

124
00:04:31,600 --> 00:04:33,040
after sorry

125
00:04:33,040 --> 00:04:36,400
uh and the runtime which is uh what what

126
00:04:36,400 --> 00:04:37,680
actually

127
00:04:37,680 --> 00:04:39,680
makes

128
00:04:39,680 --> 00:04:43,199
the container park uh well it makes it

129
00:04:43,199 --> 00:04:44,400
to work

130
00:04:44,400 --> 00:04:48,000
so after it was before it was a docker

131
00:04:48,000 --> 00:04:50,960
uh but now they are changing that to

132
00:04:50,960 --> 00:04:52,240
container t

133
00:04:52,240 --> 00:04:54,400
and because docker is actually built on

134
00:04:54,400 --> 00:04:58,800
container d so yeah it was a nonsense

135
00:04:58,800 --> 00:05:00,160
um

136
00:05:00,160 --> 00:05:02,000
okay

137
00:05:02,000 --> 00:05:04,479
one second

138
00:05:04,880 --> 00:05:07,600
and well and as you can see it in a

139
00:05:07,600 --> 00:05:09,520
different structure and these are

140
00:05:09,520 --> 00:05:10,639
services

141
00:05:10,639 --> 00:05:14,000
which is the first and almost

142
00:05:14,000 --> 00:05:16,800
the most not vulnerable but

143
00:05:16,800 --> 00:05:19,199
one of the most critical components

144
00:05:19,199 --> 00:05:20,000
of

145
00:05:20,000 --> 00:05:22,840
kubernetes environments which are

146
00:05:22,840 --> 00:05:26,080
well the services uh

147
00:05:26,080 --> 00:05:28,000
that may or may be not exposed to the

148
00:05:28,000 --> 00:05:29,600
internet depending on the type of

149
00:05:29,600 --> 00:05:30,960
service

150
00:05:30,960 --> 00:05:33,360
and this is well

151
00:05:33,360 --> 00:05:34,720
uh

152
00:05:34,720 --> 00:05:35,840
where

153
00:05:35,840 --> 00:05:37,360
every attacker

154
00:05:37,360 --> 00:05:39,680
almost almost every attacker should

155
00:05:39,680 --> 00:05:40,720
start

156
00:05:40,720 --> 00:05:42,560
looking into

157
00:05:42,560 --> 00:05:45,360
so this is

158
00:05:45,360 --> 00:05:46,800
another

159
00:05:46,800 --> 00:05:49,520
another slide in which we can see more

160
00:05:49,520 --> 00:05:51,280
or less the different attack vectors

161
00:05:51,280 --> 00:05:54,320
from zero to

162
00:05:54,320 --> 00:05:55,360
start

163
00:05:55,360 --> 00:05:57,840
getting into nodes start getting into

164
00:05:57,840 --> 00:05:58,800
boats

165
00:05:58,800 --> 00:06:03,120
these are these are mostly the well

166
00:06:03,199 --> 00:06:06,000
the most used techniques uh actually

167
00:06:06,000 --> 00:06:09,440
probably is this one and this one

168
00:06:09,440 --> 00:06:10,960
this one are

169
00:06:10,960 --> 00:06:13,919
well and also yeah and the fourth one

170
00:06:13,919 --> 00:06:17,360
and the other ones are less common

171
00:06:17,360 --> 00:06:18,800
but

172
00:06:18,800 --> 00:06:22,000
let's start explaining so

173
00:06:22,000 --> 00:06:24,880
the api the api server which i told you

174
00:06:24,880 --> 00:06:26,000
this is the

175
00:06:26,000 --> 00:06:27,840
the heart

176
00:06:27,840 --> 00:06:28,960
of the

177
00:06:28,960 --> 00:06:30,639
kubernetes environment

178
00:06:30,639 --> 00:06:33,520
and this can be interacted with uh well

179
00:06:33,520 --> 00:06:36,479
it is an http api so you can interact

180
00:06:36,479 --> 00:06:39,680
with it with cool or wgets

181
00:06:39,680 --> 00:06:41,840
or even with the

182
00:06:41,840 --> 00:06:44,639
well the command line interface which is

183
00:06:44,639 --> 00:06:46,160
cuba ctl

184
00:06:46,160 --> 00:06:47,840
the xposed dashboard we will see it

185
00:06:47,840 --> 00:06:50,960
before after sorry uh we will see it

186
00:06:50,960 --> 00:06:53,520
after and it's uh

187
00:06:53,520 --> 00:06:54,560
a very

188
00:06:54,560 --> 00:06:56,639
well a

189
00:06:56,639 --> 00:06:59,759
very stupid way of getting phone so

190
00:06:59,759 --> 00:07:01,520
the cubelet api

191
00:07:01,520 --> 00:07:04,080
as i told you there's a cubelet running

192
00:07:04,080 --> 00:07:05,520
on every node

193
00:07:05,520 --> 00:07:09,520
and this also has an api

194
00:07:09,520 --> 00:07:10,639
and

195
00:07:10,639 --> 00:07:13,120
well it's really easy to

196
00:07:13,120 --> 00:07:15,680
get the code execution into any of the

197
00:07:15,680 --> 00:07:16,880
pots

198
00:07:16,880 --> 00:07:20,160
of the node using the cubelet api

199
00:07:20,160 --> 00:07:21,759
and

200
00:07:21,759 --> 00:07:25,520
the last of all of these techniques uh

201
00:07:25,520 --> 00:07:29,280
the etc api which is this one

202
00:07:29,280 --> 00:07:31,199
this one is

203
00:07:31,199 --> 00:07:34,720
way harder to exploit but

204
00:07:34,720 --> 00:07:37,199
sometimes it is exposed

205
00:07:37,199 --> 00:07:38,160
so

206
00:07:38,160 --> 00:07:40,400
from an attacker

207
00:07:40,400 --> 00:07:42,720
point of view this is what you will see

208
00:07:42,720 --> 00:07:44,960
if you are in a well if you are

209
00:07:44,960 --> 00:07:46,960
interested in something and you

210
00:07:46,960 --> 00:07:49,039
suddenly

211
00:07:49,039 --> 00:07:51,840
discover these kind of ports

212
00:07:51,840 --> 00:07:53,280
this is what

213
00:07:53,280 --> 00:07:56,639
it will make you think you are in

214
00:07:56,639 --> 00:07:59,759
europe testing kubernetes environment

215
00:07:59,759 --> 00:08:02,240
so these are the the common ports here

216
00:08:02,240 --> 00:08:04,400
you have the uh

217
00:08:04,400 --> 00:08:07,039
the components uh

218
00:08:07,039 --> 00:08:08,639
all these ports

219
00:08:08,639 --> 00:08:11,520
are from etcd the

220
00:08:11,520 --> 00:08:14,560
the cubelet apis

221
00:08:14,560 --> 00:08:17,440
what all this stuff okay so the cluster

222
00:08:17,440 --> 00:08:18,639
components

223
00:08:18,639 --> 00:08:22,720
and this is not necessarily like this

224
00:08:22,720 --> 00:08:25,199
because these are the default ports in

225
00:08:25,199 --> 00:08:27,039
which

226
00:08:27,039 --> 00:08:29,599
kubernetes

227
00:08:29,599 --> 00:08:31,120
listens

228
00:08:31,120 --> 00:08:32,980
or a node can listen

229
00:08:32,980 --> 00:08:34,080
[Applause]

230
00:08:34,080 --> 00:08:34,880
like

231
00:08:34,880 --> 00:08:37,519
a service

232
00:08:37,679 --> 00:08:38,479
so

233
00:08:38,479 --> 00:08:40,799
you can expose something to the to the

234
00:08:40,799 --> 00:08:41,760
internet

235
00:08:41,760 --> 00:08:44,000
this is not necessarily like this okay

236
00:08:44,000 --> 00:08:46,800
but the the rest of them yes

237
00:08:46,800 --> 00:08:48,959
um okay

238
00:08:48,959 --> 00:08:51,519
so container metrics this mini cube

239
00:08:51,519 --> 00:08:53,519
thing it is

240
00:08:53,519 --> 00:08:56,800
rare and not really common

241
00:08:56,800 --> 00:08:59,040
and because mini cube is a

242
00:08:59,040 --> 00:09:00,959
like a self-contained

243
00:09:00,959 --> 00:09:02,959
kubernetes environment in uh in

244
00:09:02,959 --> 00:09:05,120
virtualbox

245
00:09:05,120 --> 00:09:07,920
okay the the cubelet apis

246
00:09:07,920 --> 00:09:10,080
the cube proxy which is the one

247
00:09:10,080 --> 00:09:12,160
interacting with the

248
00:09:12,160 --> 00:09:14,480
well exposing things to the internet and

249
00:09:14,480 --> 00:09:17,200
this is just one

250
00:09:17,200 --> 00:09:19,519
more custom things

251
00:09:19,519 --> 00:09:22,880
okay so first of all is

252
00:09:22,880 --> 00:09:25,200
kubernetes hacking even a thing uh well

253
00:09:25,200 --> 00:09:26,800
yes uh

254
00:09:26,800 --> 00:09:29,360
this is an attack matrix uh

255
00:09:29,360 --> 00:09:30,959
similar to

256
00:09:30,959 --> 00:09:32,959
you know the mitre

257
00:09:32,959 --> 00:09:35,440
the very famous one meter

258
00:09:35,440 --> 00:09:37,120
did

259
00:09:37,120 --> 00:09:38,480
this time

260
00:09:38,480 --> 00:09:40,560
it was microsoft who did it and it was

261
00:09:40,560 --> 00:09:42,080
the past year

262
00:09:42,080 --> 00:09:43,440
even

263
00:09:43,440 --> 00:09:45,600
even wasp

264
00:09:45,600 --> 00:09:46,959
has started to

265
00:09:46,959 --> 00:09:49,920
to write i know if a top 10 or something

266
00:09:49,920 --> 00:09:51,440
similar

267
00:09:51,440 --> 00:09:53,600
as you can see

268
00:09:53,600 --> 00:09:56,080
many of the techniques

269
00:09:56,080 --> 00:09:58,880
we mentioned before and that we will see

270
00:09:58,880 --> 00:10:01,200
in detail

271
00:10:01,200 --> 00:10:03,680
right now

272
00:10:03,760 --> 00:10:07,040
are mentioned here uh for example uh let

273
00:10:07,040 --> 00:10:08,640
me see

274
00:10:08,640 --> 00:10:12,000
what uh for example well the exec into a

275
00:10:12,000 --> 00:10:15,360
container the dashboard for instance uh

276
00:10:15,360 --> 00:10:17,040
or well

277
00:10:17,040 --> 00:10:19,120
any service uh

278
00:10:19,120 --> 00:10:21,200
an exposed dashboard okay so application

279
00:10:21,200 --> 00:10:24,240
vulnerability leading to compromise

280
00:10:24,240 --> 00:10:26,560
etc and the cloud thing

281
00:10:26,560 --> 00:10:28,399
all that stuff so

282
00:10:28,399 --> 00:10:30,399
you know in case you need a reference if

283
00:10:30,399 --> 00:10:33,120
you are in a pen test or whatever that

284
00:10:33,120 --> 00:10:36,640
you need to know about kubernetes to

285
00:10:36,640 --> 00:10:38,160
to do your job

286
00:10:38,160 --> 00:10:40,640
then you can always check this

287
00:10:40,640 --> 00:10:43,680
to get some some fresh ideas

288
00:10:43,680 --> 00:10:44,640
about

289
00:10:44,640 --> 00:10:46,560
what to do next

290
00:10:46,560 --> 00:10:49,680
okay so this is the kubernetes dashboard

291
00:10:49,680 --> 00:10:52,880
whenever you create a

292
00:10:52,880 --> 00:10:56,959
kubernetes cluster you get one of these

293
00:10:56,959 --> 00:10:59,680
one of these websites

294
00:10:59,680 --> 00:11:01,519
the

295
00:11:01,519 --> 00:11:05,440
and the bad part of this is uh well

296
00:11:05,440 --> 00:11:08,079
that many people actually don't

297
00:11:08,079 --> 00:11:10,399
protect this in any way

298
00:11:10,399 --> 00:11:12,480
and you can go

299
00:11:12,480 --> 00:11:16,399
to show them and just well

300
00:11:16,399 --> 00:11:19,680
check if there are exposed dashboards go

301
00:11:19,680 --> 00:11:22,640
you know here to workloads but

302
00:11:22,640 --> 00:11:25,519
click on the pod and exec and you

303
00:11:25,519 --> 00:11:27,519
will be granted with a

304
00:11:27,519 --> 00:11:30,560
with a nice cell in whatever pot

305
00:11:30,560 --> 00:11:32,560
you you want

306
00:11:32,560 --> 00:11:34,959
so this is terrible and

307
00:11:34,959 --> 00:11:36,480
some companies

308
00:11:36,480 --> 00:11:38,399
have been well

309
00:11:38,399 --> 00:11:40,160
compromised using

310
00:11:40,160 --> 00:11:43,360
this attack vector so

311
00:11:43,360 --> 00:11:46,160
we need to take care of that in many in

312
00:11:46,160 --> 00:11:47,680
many cases

313
00:11:47,680 --> 00:11:50,480
so uh this is the other

314
00:11:50,480 --> 00:11:53,120
this is the other api well one of the

315
00:11:53,120 --> 00:11:56,560
others which is the cubelet uh as i told

316
00:11:56,560 --> 00:11:59,519
you there is one api uh

317
00:11:59,519 --> 00:12:01,839
per node okay so

318
00:12:01,839 --> 00:12:04,720
maybe you cannot interact with an api in

319
00:12:04,720 --> 00:12:06,639
one of the nodes but maybe you can

320
00:12:06,639 --> 00:12:08,320
interact

321
00:12:08,320 --> 00:12:11,920
with another in other node of the of the

322
00:12:11,920 --> 00:12:13,839
kubernetes environment

323
00:12:13,839 --> 00:12:15,200
so

324
00:12:15,200 --> 00:12:19,040
as any of the apis you can interact with

325
00:12:19,040 --> 00:12:21,680
it using cool or level you get or

326
00:12:21,680 --> 00:12:22,639
whatever

327
00:12:22,639 --> 00:12:26,560
typical linux command you are used to

328
00:12:26,560 --> 00:12:28,240
and also using a

329
00:12:28,240 --> 00:12:30,240
command line interface this one i think

330
00:12:30,240 --> 00:12:34,079
it's non-official i think so

331
00:12:34,160 --> 00:12:36,399
but it works

332
00:12:36,399 --> 00:12:39,120
decently so

333
00:12:39,120 --> 00:12:41,440
er what can be done with this

334
00:12:41,440 --> 00:12:43,120
well

335
00:12:43,120 --> 00:12:46,000
directly you can well get a list of pots

336
00:12:46,000 --> 00:12:48,320
running in a node okay

337
00:12:48,320 --> 00:12:50,000
with this command

338
00:12:50,000 --> 00:12:52,480
and after you can uh

339
00:12:52,480 --> 00:12:53,760
well

340
00:12:53,760 --> 00:12:55,600
you can

341
00:12:55,600 --> 00:12:58,160
run a command inside a node you need to

342
00:12:58,160 --> 00:13:01,519
specify uh the namespace here

343
00:13:01,519 --> 00:13:03,680
um but it's fairly easy to get command

344
00:13:03,680 --> 00:13:06,720
execution into any node sorry into any

345
00:13:06,720 --> 00:13:08,800
port of the node

346
00:13:08,800 --> 00:13:11,360
so this is a you know

347
00:13:11,360 --> 00:13:13,040
a very easy vector and if you expose

348
00:13:13,040 --> 00:13:16,240
this port to the internet well

349
00:13:16,240 --> 00:13:18,079
whatever

350
00:13:18,079 --> 00:13:19,360
apt

351
00:13:19,360 --> 00:13:21,519
that's using mascara

352
00:13:21,519 --> 00:13:24,959
can can detect this and well

353
00:13:24,959 --> 00:13:27,440
you may have a problem

354
00:13:27,440 --> 00:13:28,720
so and also

355
00:13:28,720 --> 00:13:29,600
you can

356
00:13:29,600 --> 00:13:31,279
check the logs

357
00:13:31,279 --> 00:13:33,920
which is interesting and you can check

358
00:13:33,920 --> 00:13:36,720
the logs and you for example

359
00:13:36,720 --> 00:13:38,079
can

360
00:13:38,079 --> 00:13:41,199
search for the cube edm

361
00:13:41,199 --> 00:13:42,240
well

362
00:13:42,240 --> 00:13:44,639
this is the cube idm is the command line

363
00:13:44,639 --> 00:13:47,519
interface used to well

364
00:13:47,519 --> 00:13:50,079
when you create the cluster you use this

365
00:13:50,079 --> 00:13:52,800
instead of cube cdm okay

366
00:13:52,800 --> 00:13:55,120
so you can find the token and

367
00:13:55,120 --> 00:13:57,120
use to join the machine to the to the

368
00:13:57,120 --> 00:13:59,199
cluster and you can

369
00:13:59,199 --> 00:14:00,160
just

370
00:14:00,160 --> 00:14:02,399
add your own malicious machine to the

371
00:14:02,399 --> 00:14:04,399
cluster which is

372
00:14:04,399 --> 00:14:07,279
not good at all and also if you are

373
00:14:07,279 --> 00:14:10,240
using http

374
00:14:10,240 --> 00:14:11,440
[Applause]

375
00:14:11,440 --> 00:14:13,040
to visit whatever

376
00:14:13,040 --> 00:14:14,320
and

377
00:14:14,320 --> 00:14:16,800
you are using cookies or tokens or

378
00:14:16,800 --> 00:14:17,920
whatever

379
00:14:17,920 --> 00:14:19,839
uh or ids

380
00:14:19,839 --> 00:14:21,040
and you are

381
00:14:21,040 --> 00:14:24,079
well putting that into a get parameter

382
00:14:24,079 --> 00:14:25,519
you are

383
00:14:25,519 --> 00:14:26,320
well

384
00:14:26,320 --> 00:14:28,800
all of this can be exposed just

385
00:14:28,800 --> 00:14:31,600
by making some requests to the logs

386
00:14:31,600 --> 00:14:34,240
to the last thing of the cubelet api so

387
00:14:34,240 --> 00:14:35,440
here's an

388
00:14:35,440 --> 00:14:37,279
an example you can see

389
00:14:37,279 --> 00:14:40,639
it's not difficult to do this

390
00:14:40,639 --> 00:14:43,279
okay so the last one the

391
00:14:43,279 --> 00:14:45,440
one

392
00:14:45,440 --> 00:14:46,560
well

393
00:14:46,560 --> 00:14:48,560
this one it's way more difficult to

394
00:14:48,560 --> 00:14:50,160
exploit

395
00:14:50,160 --> 00:14:52,240
because you need

396
00:14:52,240 --> 00:14:56,079
all these files the ca crt the health

397
00:14:56,079 --> 00:14:58,720
check one and the lc client

398
00:14:58,720 --> 00:15:01,279
you need to specify the api version with

399
00:15:01,279 --> 00:15:03,680
this environment variable there is also

400
00:15:03,680 --> 00:15:07,040
a command line interface by the way

401
00:15:07,040 --> 00:15:08,639
and well

402
00:15:08,639 --> 00:15:10,320
you can just

403
00:15:10,320 --> 00:15:13,920
for example launch this and start uh

404
00:15:13,920 --> 00:15:15,120
well

405
00:15:15,120 --> 00:15:17,360
start dumping the whole database of the

406
00:15:17,360 --> 00:15:19,360
kubernetes environment

407
00:15:19,360 --> 00:15:21,600
uh

408
00:15:21,760 --> 00:15:23,199
you know

409
00:15:23,199 --> 00:15:24,000
the

410
00:15:24,000 --> 00:15:26,880
good thing about this is that you

411
00:15:26,880 --> 00:15:29,600
need these files so

412
00:15:29,600 --> 00:15:31,839
uh as i said this is

413
00:15:31,839 --> 00:15:34,639
not that easy to exploit but

414
00:15:34,639 --> 00:15:37,360
it's another way

415
00:15:37,360 --> 00:15:38,720
so

416
00:15:38,720 --> 00:15:40,399
we are in

417
00:15:40,399 --> 00:15:41,920
in a po

418
00:15:41,920 --> 00:15:45,279
right we have compromised uh

419
00:15:45,279 --> 00:15:47,279
whatever our web application exposed to

420
00:15:47,279 --> 00:15:50,240
the internet whatever a typical scenario

421
00:15:50,240 --> 00:15:53,279
we are there so what do we know

422
00:15:53,279 --> 00:15:57,839
uh okay so now uh we need to enumerate a

423
00:15:57,839 --> 00:16:00,880
little bit both as you would uh normally

424
00:16:00,880 --> 00:16:03,360
enumerate a machine after you compromise

425
00:16:03,360 --> 00:16:04,320
this

426
00:16:04,320 --> 00:16:06,399
and also taking into account the

427
00:16:06,399 --> 00:16:08,639
particularities of kubernetes

428
00:16:08,639 --> 00:16:10,959
environment for example

429
00:16:10,959 --> 00:16:12,800
you can check the environment variables

430
00:16:12,800 --> 00:16:14,720
and if you

431
00:16:14,720 --> 00:16:16,399
see the kubernetes in the world

432
00:16:16,399 --> 00:16:18,399
kubernetes you know you're in a

433
00:16:18,399 --> 00:16:20,160
kubernetes cluster

434
00:16:20,160 --> 00:16:21,279
also

435
00:16:21,279 --> 00:16:23,759
you can check c groups and if you see

436
00:16:23,759 --> 00:16:24,880
cubots

437
00:16:24,880 --> 00:16:27,199
as well you are in a

438
00:16:27,199 --> 00:16:29,120
kubernetes cluster

439
00:16:29,120 --> 00:16:31,440
and this is interesting

440
00:16:31,440 --> 00:16:33,839
and this is a very common

441
00:16:33,839 --> 00:16:35,040
uh

442
00:16:35,040 --> 00:16:37,759
misconfiguration that administrator

443
00:16:37,759 --> 00:16:41,440
administrators do sometimes

444
00:16:41,440 --> 00:16:42,720
which is

445
00:16:42,720 --> 00:16:45,440
not disabling

446
00:16:45,440 --> 00:16:48,240
the service account

447
00:16:48,240 --> 00:16:50,320
mounting

448
00:16:50,320 --> 00:16:53,279
on a pot a newly created pot so what is

449
00:16:53,279 --> 00:16:54,480
this

450
00:16:54,480 --> 00:16:57,680
when you create a pot

451
00:16:58,160 --> 00:16:59,839
many times if you don't disable it this

452
00:16:59,839 --> 00:17:02,160
is enabled by default

453
00:17:02,160 --> 00:17:04,400
you can just

454
00:17:04,400 --> 00:17:07,039
yeah well if you get a cell you can just

455
00:17:07,039 --> 00:17:09,359
go here and grab

456
00:17:09,359 --> 00:17:12,000
the access token

457
00:17:12,000 --> 00:17:14,160
for the default service account

458
00:17:14,160 --> 00:17:15,919
and with this you can interact with the

459
00:17:15,919 --> 00:17:17,599
api

460
00:17:17,599 --> 00:17:19,359
with the api the

461
00:17:19,359 --> 00:17:21,599
well the api server

462
00:17:21,599 --> 00:17:22,559
which is

463
00:17:22,559 --> 00:17:25,280
by far the most important api

464
00:17:25,280 --> 00:17:27,199
so uh

465
00:17:27,199 --> 00:17:29,679
like this is free themselves

466
00:17:29,679 --> 00:17:30,640
almost

467
00:17:30,640 --> 00:17:32,559
um

468
00:17:32,559 --> 00:17:34,880
also you need to check if it's

469
00:17:34,880 --> 00:17:37,600
present again the binary of

470
00:17:37,600 --> 00:17:39,120
cube ctl

471
00:17:39,120 --> 00:17:42,480
or wk or cool to do it manually

472
00:17:42,480 --> 00:17:45,200
credentials ssh keys

473
00:17:45,200 --> 00:17:47,760
database whatever

474
00:17:47,760 --> 00:17:51,120
many times they have databases local

475
00:17:51,120 --> 00:17:52,480
and

476
00:17:52,480 --> 00:17:55,600
well when there are databases in

477
00:17:55,600 --> 00:17:58,879
you know in localhost

478
00:17:59,200 --> 00:18:01,840
maybe the the web application you are

479
00:18:01,840 --> 00:18:04,559
you compromised or whatever it's reusing

480
00:18:04,559 --> 00:18:08,559
credentials uh for the rest of stuff uh

481
00:18:08,559 --> 00:18:10,000
like uh

482
00:18:10,000 --> 00:18:12,559
i don't know the root account in

483
00:18:12,559 --> 00:18:14,480
in case you are not root directly

484
00:18:14,480 --> 00:18:16,480
on the container

485
00:18:16,480 --> 00:18:17,280
uh

486
00:18:17,280 --> 00:18:19,120
whatever

487
00:18:19,120 --> 00:18:21,520
also use tools like you hunter try to

488
00:18:21,520 --> 00:18:23,679
accept to the rest of pods

489
00:18:23,679 --> 00:18:26,840
or modify all of these types of

490
00:18:26,840 --> 00:18:29,280
objects and

491
00:18:29,280 --> 00:18:32,000
and also typical stuff like

492
00:18:32,000 --> 00:18:34,720
trying to see

493
00:18:34,720 --> 00:18:35,760
gain

494
00:18:35,760 --> 00:18:38,400
more knowledge of where are you exactly

495
00:18:38,400 --> 00:18:41,120
what services you can access since

496
00:18:41,120 --> 00:18:43,760
traffic etc

497
00:18:43,760 --> 00:18:47,200
also you can if you have cube ctl

498
00:18:47,200 --> 00:18:48,400
you can

499
00:18:48,400 --> 00:18:49,840
try to

500
00:18:49,840 --> 00:18:51,520
well

501
00:18:51,520 --> 00:18:56,320
with these commands you can try to um

502
00:18:56,320 --> 00:18:58,240
get like a

503
00:18:58,240 --> 00:19:00,880
more exact idea of what permissions you

504
00:19:00,880 --> 00:19:02,240
do have

505
00:19:02,240 --> 00:19:04,799
and well if you have

506
00:19:04,799 --> 00:19:08,080
a lot of permissions you can do this

507
00:19:08,080 --> 00:19:10,799
which is what changing our role binding

508
00:19:10,799 --> 00:19:13,440
which i i will explain uh

509
00:19:13,440 --> 00:19:17,520
later in the end so this is an example

510
00:19:17,520 --> 00:19:20,559
of well an attacker gaining root on on a

511
00:19:20,559 --> 00:19:23,559
container

512
00:19:24,320 --> 00:19:25,679
and let's see

513
00:19:25,679 --> 00:19:27,919
well what we asked

514
00:19:27,919 --> 00:19:31,160
so far

515
00:19:32,000 --> 00:19:35,170
[Music]

516
00:19:41,120 --> 00:19:42,160
okay

517
00:19:42,160 --> 00:19:43,679
so you can see all the environment

518
00:19:43,679 --> 00:19:45,840
variables so we are going to coordinate

519
00:19:45,840 --> 00:19:49,000
this environment

520
00:19:56,960 --> 00:19:57,440
okay

521
00:19:57,440 --> 00:20:02,320
[Music]

522
00:20:02,320 --> 00:20:05,520
so there you see the um

523
00:20:05,520 --> 00:20:07,520
what i told you before the service

524
00:20:07,520 --> 00:20:09,120
account

525
00:20:09,120 --> 00:20:10,880
that's well

526
00:20:10,880 --> 00:20:13,760
automatically mounted on every port

527
00:20:13,760 --> 00:20:18,679
if you don't disable it of course so

528
00:20:20,159 --> 00:20:22,720
let's see

529
00:20:26,080 --> 00:20:28,720
yeah so that's the access token and with

530
00:20:28,720 --> 00:20:31,840
that you're able to

531
00:20:32,480 --> 00:20:36,720
to access the ap the api of the api

532
00:20:36,720 --> 00:20:38,640
server

533
00:20:38,640 --> 00:20:40,799
okay so there's no cube ctl

534
00:20:40,799 --> 00:20:42,640
which is normal in a

535
00:20:42,640 --> 00:20:46,080
in a container

536
00:20:47,200 --> 00:20:49,840
okay

537
00:20:50,799 --> 00:20:52,159
the good thing

538
00:20:52,159 --> 00:20:54,400
in case you don't have er

539
00:20:54,400 --> 00:20:55,760
well

540
00:20:55,760 --> 00:20:58,880
cube ctl and you don't want to learn the

541
00:20:58,880 --> 00:21:00,960
whole api

542
00:21:00,960 --> 00:21:03,360
and you don't want it to do it be a cool

543
00:21:03,360 --> 00:21:05,760
you can just upload it like i did in the

544
00:21:05,760 --> 00:21:07,280
example

545
00:21:07,280 --> 00:21:08,880
uh

546
00:21:08,880 --> 00:21:10,880
i know this is a

547
00:21:10,880 --> 00:21:14,480
linux machine with 64-bit

548
00:21:14,480 --> 00:21:18,480
architecture so i just download the

549
00:21:18,480 --> 00:21:20,720
the one i need

550
00:21:20,720 --> 00:21:22,799
i get permissions

551
00:21:22,799 --> 00:21:25,039
and from there

552
00:21:25,039 --> 00:21:28,240
i can start checking uh what

553
00:21:28,240 --> 00:21:31,799
what can i access

554
00:21:37,120 --> 00:21:40,120
okay

555
00:21:45,600 --> 00:21:48,000
yeah so yes i can leave spots

556
00:21:48,000 --> 00:21:49,280
now we'll see

557
00:21:49,280 --> 00:21:50,960
some more examples

558
00:21:50,960 --> 00:21:52,159
but

559
00:21:52,159 --> 00:21:53,679
there's something important to take into

560
00:21:53,679 --> 00:21:56,559
account yeah that is that

561
00:21:56,559 --> 00:22:00,559
in this case it wasn't even needed to

562
00:22:01,120 --> 00:22:02,559
to use

563
00:22:02,559 --> 00:22:05,600
the token where we grabbed before

564
00:22:05,600 --> 00:22:07,039
i mean

565
00:22:07,039 --> 00:22:08,880
we can do all of this without

566
00:22:08,880 --> 00:22:12,720
authentication which is terrible because

567
00:22:12,720 --> 00:22:15,520
almost anyone

568
00:22:15,520 --> 00:22:17,440
getting god execution

569
00:22:17,440 --> 00:22:19,280
in any of the containers they can do

570
00:22:19,280 --> 00:22:20,799
whatever

571
00:22:20,799 --> 00:22:22,000
whatever

572
00:22:22,000 --> 00:22:25,640
he wants so

573
00:22:28,960 --> 00:22:31,200
okay

574
00:22:31,360 --> 00:22:33,600
so

575
00:22:34,000 --> 00:22:36,480
can i list notes

576
00:22:36,480 --> 00:22:39,480
yes

577
00:22:42,720 --> 00:22:46,559
and i get notes details of the notes

578
00:22:46,559 --> 00:22:50,000
okay so as you can see uh

579
00:22:50,000 --> 00:22:51,039
we

580
00:22:51,039 --> 00:22:56,000
asked the api uh if we can perform

581
00:22:56,000 --> 00:22:59,760
various actions and we can so

582
00:22:59,760 --> 00:23:00,799
well

583
00:23:00,799 --> 00:23:02,720
this this would be a terrible scenario

584
00:23:02,720 --> 00:23:04,320
for any

585
00:23:04,320 --> 00:23:06,080
admin

586
00:23:06,080 --> 00:23:07,440
okay

587
00:23:07,440 --> 00:23:10,799
so let's go to the secrets part okay so

588
00:23:10,799 --> 00:23:12,559
secrets in

589
00:23:12,559 --> 00:23:13,919
kubernetes

590
00:23:13,919 --> 00:23:16,240
well they are just as you can see here

591
00:23:16,240 --> 00:23:18,880
this is a screenshot from the

592
00:23:18,880 --> 00:23:21,120
official documentation

593
00:23:21,120 --> 00:23:23,600
they are just basically for encoded

594
00:23:23,600 --> 00:23:26,400
strings so this is

595
00:23:26,400 --> 00:23:29,840
almost equal to clear text

596
00:23:30,480 --> 00:23:33,360
and you know anyone with api access in

597
00:23:33,360 --> 00:23:36,159
this case as you saw anyone could access

598
00:23:36,159 --> 00:23:37,520
the api

599
00:23:37,520 --> 00:23:40,000
it can retrieve the secrets

600
00:23:40,000 --> 00:23:44,320
so uh we could do it if we didn't

601
00:23:44,320 --> 00:23:47,279
buy any reason have qctl

602
00:23:47,279 --> 00:23:48,640
we could do it

603
00:23:48,640 --> 00:23:50,960
using this okay uh

604
00:23:50,960 --> 00:23:53,120
using cool just

605
00:23:53,120 --> 00:23:56,080
no using the api this is what

606
00:23:56,080 --> 00:23:56,920
gets done

607
00:23:56,920 --> 00:23:58,080
[Applause]

608
00:23:58,080 --> 00:24:02,240
by cube ctl in in the background so

609
00:24:02,320 --> 00:24:05,279
in this case for example uh we wouldn't

610
00:24:05,279 --> 00:24:07,840
need this header but in case for example

611
00:24:07,840 --> 00:24:10,000
that we couldn't uh

612
00:24:10,000 --> 00:24:14,880
all all of these uh commands return no

613
00:24:14,880 --> 00:24:17,600
we could just have added the access

614
00:24:17,600 --> 00:24:19,760
token we got from the

615
00:24:19,760 --> 00:24:21,760
well insecure mount of the service

616
00:24:21,760 --> 00:24:24,240
account token and use it here

617
00:24:24,240 --> 00:24:26,960
and we can get secrets and we can

618
00:24:26,960 --> 00:24:30,080
well exactly check what's in the in the

619
00:24:30,080 --> 00:24:31,520
secret object

620
00:24:31,520 --> 00:24:34,720
so here is an example

621
00:24:38,520 --> 00:24:41,120
[Music]

622
00:24:41,120 --> 00:24:44,120
okay

623
00:24:55,600 --> 00:24:58,600
okay

624
00:25:04,480 --> 00:25:05,760
perfect so

625
00:25:05,760 --> 00:25:07,039
um

626
00:25:07,039 --> 00:25:10,000
here yeah that's the value of the

627
00:25:10,000 --> 00:25:13,720
natural value of the secret

628
00:25:24,080 --> 00:25:25,440
perfect so

629
00:25:25,440 --> 00:25:27,600
what you see here is the

630
00:25:27,600 --> 00:25:28,400
well

631
00:25:28,400 --> 00:25:30,480
but it's a story in the secret that you

632
00:25:30,480 --> 00:25:32,480
can see that well

633
00:25:32,480 --> 00:25:34,720
secrets in kubernetes

634
00:25:34,720 --> 00:25:36,320
are not that secret

635
00:25:36,320 --> 00:25:38,240
so

636
00:25:38,240 --> 00:25:41,679
it's something to take in talent

637
00:25:41,679 --> 00:25:43,760
okay as you can see here

638
00:25:43,760 --> 00:25:46,960
these are well this is another command

639
00:25:46,960 --> 00:25:48,960
which is listing the

640
00:25:48,960 --> 00:25:52,400
the namespaces namespaces are well

641
00:25:52,400 --> 00:25:54,880
logical divisions

642
00:25:54,880 --> 00:25:57,679
of clusters a physical cluster like can

643
00:25:57,679 --> 00:26:02,080
be divided into different name spaces

644
00:26:02,080 --> 00:26:03,200
uh

645
00:26:03,200 --> 00:26:06,000
the default one is this one but there

646
00:26:06,000 --> 00:26:07,600
are others created

647
00:26:07,600 --> 00:26:08,799
when you

648
00:26:08,799 --> 00:26:10,960
well when you create a cluster

649
00:26:10,960 --> 00:26:11,919
like

650
00:26:11,919 --> 00:26:14,559
this one the cube system one

651
00:26:14,559 --> 00:26:17,840
and the cube system one is particularly

652
00:26:17,840 --> 00:26:20,480
dangerous because all the secrets

653
00:26:20,480 --> 00:26:23,039
belonging to this name space

654
00:26:23,039 --> 00:26:24,260
yeah well

655
00:26:24,260 --> 00:26:25,840
[Music]

656
00:26:25,840 --> 00:26:27,840
are of service well they belong to

657
00:26:27,840 --> 00:26:30,559
service accounts which

658
00:26:30,559 --> 00:26:33,279
they hold very high privilege

659
00:26:33,279 --> 00:26:35,200
so

660
00:26:35,200 --> 00:26:37,200
in case you have access to this

661
00:26:37,200 --> 00:26:39,679
namespace and to the secrets and well

662
00:26:39,679 --> 00:26:41,279
your remote zone

663
00:26:41,279 --> 00:26:42,559
you got everything

664
00:26:42,559 --> 00:26:44,640
so this is what we did

665
00:26:44,640 --> 00:26:45,760
before

666
00:26:45,760 --> 00:26:48,080
without specifying the namespace as you

667
00:26:48,080 --> 00:26:50,080
can see this is the same result we got

668
00:26:50,080 --> 00:26:53,720
in the previous slide

669
00:26:53,919 --> 00:26:55,039
and here

670
00:26:55,039 --> 00:26:58,000
we can list and check the output of you

671
00:26:58,000 --> 00:26:59,200
know

672
00:26:59,200 --> 00:27:00,640
we can list

673
00:27:00,640 --> 00:27:03,440
the secrets of another namespace and

674
00:27:03,440 --> 00:27:05,120
here we can even get the

675
00:27:05,120 --> 00:27:08,799
um the clear text of uh of the secrets

676
00:27:08,799 --> 00:27:11,120
in in other

677
00:27:11,120 --> 00:27:12,400
namespaces

678
00:27:12,400 --> 00:27:14,799
so this one is critical yes

679
00:27:14,799 --> 00:27:15,840
the

680
00:27:15,840 --> 00:27:17,200
no that's the

681
00:27:17,200 --> 00:27:19,279
that's the point of this

682
00:27:19,279 --> 00:27:20,880
okay

683
00:27:20,880 --> 00:27:21,919
so

684
00:27:21,919 --> 00:27:25,520
uh a part of xposed apis how do we get

685
00:27:25,520 --> 00:27:27,360
on uh

686
00:27:27,360 --> 00:27:30,159
well with this with services uh

687
00:27:30,159 --> 00:27:31,919
here well i don't know

688
00:27:31,919 --> 00:27:34,399
why this wasn't working

689
00:27:34,399 --> 00:27:35,919
okay but

690
00:27:35,919 --> 00:27:37,520
here you would see

691
00:27:37,520 --> 00:27:40,159
in a normal situation you would see the

692
00:27:40,159 --> 00:27:42,399
external ap

693
00:27:42,399 --> 00:27:43,520
or

694
00:27:43,520 --> 00:27:45,520
more concretely here

695
00:27:45,520 --> 00:27:49,120
you would see the external ep of

696
00:27:49,120 --> 00:27:50,320
of these

697
00:27:50,320 --> 00:27:51,760
services okay

698
00:27:51,760 --> 00:27:53,760
so

699
00:27:53,760 --> 00:27:54,720
there are

700
00:27:54,720 --> 00:27:58,159
many types of services okay

701
00:27:58,159 --> 00:28:00,240
but the ones

702
00:28:00,240 --> 00:28:01,760
well the most common ones are the

703
00:28:01,760 --> 00:28:04,960
cluster ips which are responsible

704
00:28:04,960 --> 00:28:06,720
for

705
00:28:06,720 --> 00:28:08,720
well just

706
00:28:08,720 --> 00:28:11,120
launching an

707
00:28:11,120 --> 00:28:13,520
a service a network service

708
00:28:13,520 --> 00:28:14,399
in

709
00:28:14,399 --> 00:28:16,480
inside the cluster so you can access it

710
00:28:16,480 --> 00:28:17,440
like

711
00:28:17,440 --> 00:28:20,080
well something like if you were in your

712
00:28:20,080 --> 00:28:22,480
uh at home and

713
00:28:22,480 --> 00:28:24,640
you open a netcat okay that would be an

714
00:28:24,640 --> 00:28:26,159
open port but

715
00:28:26,159 --> 00:28:27,840
yeah but

716
00:28:27,840 --> 00:28:29,200
if someone

717
00:28:29,200 --> 00:28:31,840
tried to reach the board tries to reach

718
00:28:31,840 --> 00:28:33,679
that board from the outside

719
00:28:33,679 --> 00:28:36,799
uh it wouldn't be possible but the note

720
00:28:36,799 --> 00:28:37,760
ports

721
00:28:37,760 --> 00:28:39,679
and others okay but the note ports are

722
00:28:39,679 --> 00:28:42,320
the most the most common ones

723
00:28:42,320 --> 00:28:43,279
uh

724
00:28:43,279 --> 00:28:45,840
well they are used to expose uh

725
00:28:45,840 --> 00:28:48,559
services okay to the internet

726
00:28:48,559 --> 00:28:50,320
services uh

727
00:28:50,320 --> 00:28:53,039
that could be whatever

728
00:28:53,039 --> 00:28:54,559
from

729
00:28:54,559 --> 00:28:57,279
ssh to um

730
00:28:57,279 --> 00:29:00,399
i don't know to a web application

731
00:29:00,399 --> 00:29:03,039
and whatever you can imagine

732
00:29:03,039 --> 00:29:03,840
so

733
00:29:03,840 --> 00:29:06,399
in this uh well in this command it

734
00:29:06,399 --> 00:29:09,039
should be possible and i i

735
00:29:09,039 --> 00:29:11,440
don't know exactly why this time when i

736
00:29:11,440 --> 00:29:14,159
did the screenshot didn't work but you

737
00:29:14,159 --> 00:29:16,799
should be able to see here the external

738
00:29:16,799 --> 00:29:18,000
ip

739
00:29:18,000 --> 00:29:19,120
so

740
00:29:19,120 --> 00:29:22,080
if you don't take care of this and well

741
00:29:22,080 --> 00:29:25,960
if you don't do a proper

742
00:29:26,240 --> 00:29:27,360
not

743
00:29:27,360 --> 00:29:29,279
i don't know how to say this

744
00:29:29,279 --> 00:29:31,200
if you don't uh

745
00:29:31,200 --> 00:29:33,600
have a clear list of what you expose to

746
00:29:33,600 --> 00:29:35,600
the internet uh

747
00:29:35,600 --> 00:29:38,480
it's and also when you have a like very

748
00:29:38,480 --> 00:29:41,840
big development environments

749
00:29:41,840 --> 00:29:44,640
and so using kubernetes it's very easy

750
00:29:44,640 --> 00:29:47,039
to well

751
00:29:47,039 --> 00:29:48,799
to expose something you don't want to

752
00:29:48,799 --> 00:29:50,799
expose

753
00:29:50,799 --> 00:29:52,799
so

754
00:29:52,799 --> 00:29:54,559
more attacks okay

755
00:29:54,559 --> 00:29:56,320
so we're in a pot

756
00:29:56,320 --> 00:29:59,200
but apart well where the where in the

757
00:29:59,200 --> 00:30:02,799
container of the po okay

758
00:30:02,799 --> 00:30:05,360
so but we are well

759
00:30:05,360 --> 00:30:06,880
we are like

760
00:30:06,880 --> 00:30:09,440
if we were in a docker typical docker

761
00:30:09,440 --> 00:30:10,960
container

762
00:30:10,960 --> 00:30:12,320
we have no

763
00:30:12,320 --> 00:30:15,120
no more permissions okay

764
00:30:15,120 --> 00:30:15,919
but

765
00:30:15,919 --> 00:30:18,480
and there's a thing

766
00:30:18,480 --> 00:30:20,640
which is a very typical attack

767
00:30:20,640 --> 00:30:22,399
that if you are well first if you can

768
00:30:22,399 --> 00:30:25,440
find a bugs in the world you are uh well

769
00:30:25,440 --> 00:30:27,600
in which you are

770
00:30:27,600 --> 00:30:30,240
you can try to well access another boats

771
00:30:30,240 --> 00:30:31,440
etc

772
00:30:31,440 --> 00:30:33,919
and this uh this permission that we

773
00:30:33,919 --> 00:30:36,960
listed before and we have it um

774
00:30:36,960 --> 00:30:37,760
well

775
00:30:37,760 --> 00:30:40,799
we can create bots okay

776
00:30:40,799 --> 00:30:41,840
the

777
00:30:41,840 --> 00:30:44,799
way of declaring about is with these

778
00:30:44,799 --> 00:30:47,200
files

779
00:30:48,799 --> 00:30:50,799
if you declare

780
00:30:50,799 --> 00:30:53,679
this okay the host volume and the amount

781
00:30:53,679 --> 00:30:56,480
path and also the privilege true

782
00:30:56,480 --> 00:30:57,760
what this would do

783
00:30:57,760 --> 00:30:59,919
is to create a bot okay

784
00:30:59,919 --> 00:31:03,039
and mount the whole

785
00:31:03,039 --> 00:31:04,960
notes file system

786
00:31:04,960 --> 00:31:07,840
into this folder so we could just exec

787
00:31:07,840 --> 00:31:09,200
into the

788
00:31:09,200 --> 00:31:13,360
into the attacker port in in this case

789
00:31:13,760 --> 00:31:15,440
and if we go to

790
00:31:15,440 --> 00:31:19,120
slash attacker we could see whatever

791
00:31:19,120 --> 00:31:22,080
what whatever it's in the

792
00:31:22,080 --> 00:31:24,720
in the host's file system

793
00:31:24,720 --> 00:31:26,880
and this attack is particularly

794
00:31:26,880 --> 00:31:29,679
dangerous because

795
00:31:29,679 --> 00:31:31,279
there's well

796
00:31:31,279 --> 00:31:34,240
you can specify exactly in which node to

797
00:31:34,240 --> 00:31:36,080
create this spot

798
00:31:36,080 --> 00:31:38,000
and there's uh

799
00:31:38,000 --> 00:31:40,799
well a high chance that

800
00:31:40,799 --> 00:31:42,480
an attacker will try to create a

801
00:31:42,480 --> 00:31:44,880
malicious spot in the masternode

802
00:31:44,880 --> 00:31:46,799
because one thing you are once you are

803
00:31:46,799 --> 00:31:49,200
in the masternode uh well you get access

804
00:31:49,200 --> 00:31:51,519
to everything because uh for example you

805
00:31:51,519 --> 00:31:53,440
know the token i mentioned before to

806
00:31:53,440 --> 00:31:55,600
join machines to the kubernetes cluster

807
00:31:55,600 --> 00:31:57,039
it's there

808
00:31:57,039 --> 00:31:59,919
they logs everything they access tokens

809
00:31:59,919 --> 00:32:02,159
everything's there so

810
00:32:02,159 --> 00:32:05,519
and the dtcd everything so

811
00:32:05,519 --> 00:32:06,960
once you get this

812
00:32:06,960 --> 00:32:09,840
you're done as well

813
00:32:09,840 --> 00:32:11,840
okay

814
00:32:11,840 --> 00:32:13,200
so

815
00:32:13,200 --> 00:32:14,640
what

816
00:32:14,640 --> 00:32:16,240
more to look at

817
00:32:16,240 --> 00:32:18,080
once you are checking the security of

818
00:32:18,080 --> 00:32:20,080
the bots well

819
00:32:20,080 --> 00:32:22,240
you can check all of these options

820
00:32:22,240 --> 00:32:23,519
okay

821
00:32:23,519 --> 00:32:25,760
well the privileged true one which is

822
00:32:25,760 --> 00:32:28,840
the one

823
00:32:28,960 --> 00:32:30,159
that actually

824
00:32:30,159 --> 00:32:32,640
allowed us to do the previous attack

825
00:32:32,640 --> 00:32:34,880
the host ipc the host network this

826
00:32:34,880 --> 00:32:36,559
allows the pod to access the same

827
00:32:36,559 --> 00:32:38,640
network of the node

828
00:32:38,640 --> 00:32:39,519
there are

829
00:32:39,519 --> 00:32:41,919
three or four options and in different

830
00:32:41,919 --> 00:32:44,159
combinations can lead to

831
00:32:44,159 --> 00:32:46,080
multiple

832
00:32:46,080 --> 00:32:49,120
ways to compromise the

833
00:32:49,200 --> 00:32:51,279
the kubernetes environment

834
00:32:51,279 --> 00:32:54,399
so and here is a very good example of

835
00:32:54,399 --> 00:32:58,159
of this okay

836
00:32:58,159 --> 00:33:00,640
well they put security admission what uh

837
00:33:00,640 --> 00:33:02,480
this is a way the bot security policy

838
00:33:02,480 --> 00:33:05,840
this is another way to

839
00:33:06,960 --> 00:33:08,480
to declare the

840
00:33:08,480 --> 00:33:12,000
security context of the pod

841
00:33:12,000 --> 00:33:14,159
now well

842
00:33:14,159 --> 00:33:16,720
now that's deprecated

843
00:33:16,720 --> 00:33:18,720
and it's used in

844
00:33:18,720 --> 00:33:21,600
if i don't remember

845
00:33:21,600 --> 00:33:24,960
if you remember correctly it was

846
00:33:24,960 --> 00:33:26,880
an admission i think an ambition

847
00:33:26,880 --> 00:33:29,360
controller that i was

848
00:33:29,360 --> 00:33:30,720
using right now

849
00:33:30,720 --> 00:33:31,519
to

850
00:33:31,519 --> 00:33:34,720
well instead of the bot security policy

851
00:33:34,720 --> 00:33:35,919
okay i

852
00:33:35,919 --> 00:33:37,120
also

853
00:33:37,120 --> 00:33:39,120
for those who think they are safe in the

854
00:33:39,120 --> 00:33:41,039
cloud

855
00:33:41,039 --> 00:33:43,600
here you have well some examples of how

856
00:33:43,600 --> 00:33:45,760
to

857
00:33:45,919 --> 00:33:48,960
of how to leverage

858
00:33:48,960 --> 00:33:50,320
well

859
00:33:50,320 --> 00:33:54,240
a simple post compromise to what to

860
00:33:54,240 --> 00:33:56,399
get all your

861
00:33:56,399 --> 00:33:59,600
only assets you have in your

862
00:33:59,600 --> 00:34:01,120
aws

863
00:34:01,120 --> 00:34:02,880
organization

864
00:34:02,880 --> 00:34:07,679
or your google cloud platform or if one

865
00:34:07,679 --> 00:34:10,239
for example well the this is the advisor

866
00:34:10,239 --> 00:34:11,839
thing i mentioned

867
00:34:11,839 --> 00:34:14,239
before

868
00:34:14,320 --> 00:34:17,520
this is not particularly useful

869
00:34:17,520 --> 00:34:21,918
but for example this one the aws one is

870
00:34:21,918 --> 00:34:23,280
very typical

871
00:34:23,280 --> 00:34:26,719
because right now there's a what

872
00:34:26,719 --> 00:34:29,199
a very popular service

873
00:34:29,199 --> 00:34:32,000
aws is providing

874
00:34:32,000 --> 00:34:35,359
that it's aks

875
00:34:35,359 --> 00:34:36,800
eks or

876
00:34:36,800 --> 00:34:39,520
eks whoa

877
00:34:39,520 --> 00:34:41,599
um

878
00:34:41,599 --> 00:34:44,879
with this one just to run a

879
00:34:44,879 --> 00:34:48,239
kubernetes cluster in the cloud and from

880
00:34:48,239 --> 00:34:52,799
that you can both do like a

881
00:34:52,879 --> 00:34:54,960
double that will compromise both the

882
00:34:54,960 --> 00:34:58,000
cloud environment and also the cluster

883
00:34:58,000 --> 00:34:59,440
and the package manager this is the

884
00:34:59,440 --> 00:35:02,720
typical package manager using kuerner's

885
00:35:02,720 --> 00:35:04,480
environment it can be attacked as well

886
00:35:04,480 --> 00:35:06,640
and here you have an example

887
00:35:06,640 --> 00:35:08,320
this is

888
00:35:08,320 --> 00:35:10,480
we cannot stop

889
00:35:10,480 --> 00:35:13,280
as much as i would want in all of this

890
00:35:13,280 --> 00:35:15,119
but

891
00:35:15,119 --> 00:35:16,400
in case you

892
00:35:16,400 --> 00:35:18,880
later won the the slides just tell me so

893
00:35:18,880 --> 00:35:21,839
you can get all all the reference

894
00:35:21,839 --> 00:35:23,040
okay

895
00:35:23,040 --> 00:35:25,760
so for instance what we could do

896
00:35:25,760 --> 00:35:28,079
if we have a kubernetes environment

897
00:35:28,079 --> 00:35:31,200
that's running on the cloud okay

898
00:35:31,200 --> 00:35:32,000
so

899
00:35:32,000 --> 00:35:33,920
for example uh

900
00:35:33,920 --> 00:35:35,280
this uh

901
00:35:35,280 --> 00:35:36,720
both the master node and the worker

902
00:35:36,720 --> 00:35:40,240
nodes in aws kubernetes environments

903
00:35:40,240 --> 00:35:42,960
are ec2 machines okay typical ec2

904
00:35:42,960 --> 00:35:44,640
machines so

905
00:35:44,640 --> 00:35:49,200
uh if you well maybe if you

906
00:35:49,359 --> 00:35:51,119
if you have ever

907
00:35:51,119 --> 00:35:52,720
just like

908
00:35:52,720 --> 00:35:55,280
tried that bounty program or read some

909
00:35:55,280 --> 00:35:58,800
back bounty write-ups or whatever

910
00:35:58,800 --> 00:36:01,599
you may recognize the dc2 instance

911
00:36:01,599 --> 00:36:04,560
metadata service you know the 1

912
00:36:04,560 --> 00:36:07,200
169 dot

913
00:36:07,200 --> 00:36:09,280
254

914
00:36:09,280 --> 00:36:11,119
you know that ap yeah

915
00:36:11,119 --> 00:36:12,480
so

916
00:36:12,480 --> 00:36:15,200
this uh service

917
00:36:15,200 --> 00:36:16,880
well you can get credentials from this

918
00:36:16,880 --> 00:36:18,960
and this is very typical

919
00:36:18,960 --> 00:36:20,480
and from this

920
00:36:20,480 --> 00:36:22,160
you can well

921
00:36:22,160 --> 00:36:23,839
try to

922
00:36:23,839 --> 00:36:27,200
escalate privileges and get well

923
00:36:27,200 --> 00:36:29,599
into the root account of the

924
00:36:29,599 --> 00:36:32,320
aws organizations and same thing with

925
00:36:32,320 --> 00:36:33,359
the

926
00:36:33,359 --> 00:36:36,480
the cloud metadata service software

927
00:36:36,480 --> 00:36:38,839
or workload platform the same

928
00:36:38,839 --> 00:36:40,960
thing okay

929
00:36:40,960 --> 00:36:42,560
so uh

930
00:36:42,560 --> 00:36:45,599
about the permissions and how they work

931
00:36:45,599 --> 00:36:48,560
well and you're gonna specify uh

932
00:36:48,560 --> 00:36:50,560
permissions based on the node you want

933
00:36:50,560 --> 00:36:51,790
to

934
00:36:51,790 --> 00:36:52,960
[Applause]

935
00:36:52,960 --> 00:36:56,400
to run the bot in okay

936
00:36:56,400 --> 00:37:00,720
this attribute one it's not that used uh

937
00:37:00,720 --> 00:37:03,119
or at least i don't know many people who

938
00:37:03,119 --> 00:37:04,880
use the

939
00:37:04,880 --> 00:37:06,800
this type of authorization the role

940
00:37:06,800 --> 00:37:08,960
role-based access control yes and we

941
00:37:08,960 --> 00:37:10,480
will see it in the

942
00:37:10,480 --> 00:37:12,960
the next slides which are more focused

943
00:37:12,960 --> 00:37:14,960
on hardwaring

944
00:37:14,960 --> 00:37:16,400
okay

945
00:37:16,400 --> 00:37:17,200
well

946
00:37:17,200 --> 00:37:18,880
and the web hooks

947
00:37:18,880 --> 00:37:21,359
as well here you have the documentation

948
00:37:21,359 --> 00:37:22,640
if you want to

949
00:37:22,640 --> 00:37:25,119
to read it

950
00:37:25,119 --> 00:37:26,720
more in depth

951
00:37:26,720 --> 00:37:29,760
the web hook and a well

952
00:37:29,760 --> 00:37:32,720
are used but you know mainly people use

953
00:37:32,720 --> 00:37:33,760
this one

954
00:37:33,760 --> 00:37:36,640
or at least that's what i see from the

955
00:37:36,640 --> 00:37:38,880
people i know they use kubernetes

956
00:37:38,880 --> 00:37:40,880
okay so

957
00:37:40,880 --> 00:37:42,370
hardening tips

958
00:37:42,370 --> 00:37:43,839
[Music]

959
00:37:43,839 --> 00:37:48,400
for those who are developers or

960
00:37:48,400 --> 00:37:50,480
system administrators

961
00:37:50,480 --> 00:37:51,520
whatever

962
00:37:51,520 --> 00:37:55,119
okay so first of all uh depo the

963
00:37:55,119 --> 00:37:56,960
prosecutor mission and norwich polar

964
00:37:56,960 --> 00:37:58,880
images there are various admission

965
00:37:58,880 --> 00:38:00,880
controllers which are emission

966
00:38:00,880 --> 00:38:03,440
controllers are pieces of software

967
00:38:03,440 --> 00:38:06,240
between the api server and you

968
00:38:06,240 --> 00:38:07,200
okay

969
00:38:07,200 --> 00:38:09,440
and there are some of them which

970
00:38:09,440 --> 00:38:11,040
can actually help to

971
00:38:11,040 --> 00:38:12,720
to secure

972
00:38:12,720 --> 00:38:14,000
well

973
00:38:14,000 --> 00:38:16,880
the kubernetes assets you have network

974
00:38:16,880 --> 00:38:20,400
policies these are

975
00:38:20,400 --> 00:38:21,760
useful as well

976
00:38:21,760 --> 00:38:23,520
but

977
00:38:23,520 --> 00:38:25,359
if you go establish

978
00:38:25,359 --> 00:38:28,000
this kind of policies but you don't for

979
00:38:28,000 --> 00:38:30,480
example

980
00:38:30,800 --> 00:38:32,400
but you specify this

981
00:38:32,400 --> 00:38:35,680
well you may get into trouble because

982
00:38:35,680 --> 00:38:36,800
well if you

983
00:38:36,800 --> 00:38:37,920
have

984
00:38:37,920 --> 00:38:40,800
some policies but you allow the attacker

985
00:38:40,800 --> 00:38:44,160
to access the network of the

986
00:38:44,160 --> 00:38:46,480
of the node well uh

987
00:38:46,480 --> 00:38:49,599
no not very good idea uh disabling the

988
00:38:49,599 --> 00:38:52,400
amount of the service account token what

989
00:38:52,400 --> 00:38:54,480
we saw before uh

990
00:38:54,480 --> 00:38:57,280
well it's a simple command okay to get

991
00:38:57,280 --> 00:38:58,480
this done

992
00:38:58,480 --> 00:39:00,560
and greet the secrets uh

993
00:39:00,560 --> 00:39:01,520
well

994
00:39:01,520 --> 00:39:04,320
if you don't want your stuff to be in

995
00:39:04,320 --> 00:39:07,599
base64 formats then uh do this

996
00:39:07,599 --> 00:39:09,760
disabling the anonymous access to the

997
00:39:09,760 --> 00:39:12,800
api server just

998
00:39:12,800 --> 00:39:15,359
this would uh actually

999
00:39:15,359 --> 00:39:17,119
make very

1000
00:39:17,119 --> 00:39:18,400
way harder

1001
00:39:18,400 --> 00:39:19,839
the

1002
00:39:19,839 --> 00:39:23,920
all this stuff that we did okay

1003
00:39:25,760 --> 00:39:27,920
okay

1004
00:39:27,920 --> 00:39:30,160
also disabling

1005
00:39:30,160 --> 00:39:30,880
the

1006
00:39:30,880 --> 00:39:33,040
unauthenticated access to the cubelet

1007
00:39:33,040 --> 00:39:35,520
apis

1008
00:39:36,079 --> 00:39:37,280
this is

1009
00:39:37,280 --> 00:39:38,720
well

1010
00:39:38,720 --> 00:39:41,760
important okay because if you have some

1011
00:39:41,760 --> 00:39:43,599
critical information

1012
00:39:43,599 --> 00:39:45,760
in some of the pots uh

1013
00:39:45,760 --> 00:39:47,839
and you don't disable this well

1014
00:39:47,839 --> 00:39:48,720
then

1015
00:39:48,720 --> 00:39:50,800
you're done

1016
00:39:50,800 --> 00:39:51,760
and

1017
00:39:51,760 --> 00:39:54,240
quite a lot of recommendations

1018
00:39:54,240 --> 00:39:54,960
so

1019
00:39:54,960 --> 00:39:56,880
what i mentioned before about role based

1020
00:39:56,880 --> 00:39:59,520
access control is based on this

1021
00:39:59,520 --> 00:40:03,760
okay this is our these are um

1022
00:40:03,760 --> 00:40:06,480
well the typical objects used for

1023
00:40:06,480 --> 00:40:08,000
role-based access control which are

1024
00:40:08,000 --> 00:40:10,400
roles which are like the permissions

1025
00:40:10,400 --> 00:40:12,160
part okay so

1026
00:40:12,160 --> 00:40:13,839
where

1027
00:40:13,839 --> 00:40:15,760
what you would have access to and role

1028
00:40:15,760 --> 00:40:18,160
bindings are just the object that will

1029
00:40:18,160 --> 00:40:21,680
bind a role to a user

1030
00:40:21,680 --> 00:40:24,319
and this is the same thing but a cluster

1031
00:40:24,319 --> 00:40:26,800
level but at a cluster level

1032
00:40:26,800 --> 00:40:29,520
uh okay and uh well

1033
00:40:29,520 --> 00:40:31,760
for the typical recommendations don't

1034
00:40:31,760 --> 00:40:32,720
assign

1035
00:40:32,720 --> 00:40:34,720
the cluster admin or the admin role to

1036
00:40:34,720 --> 00:40:36,880
any service account okay

1037
00:40:36,880 --> 00:40:39,440
these two are critical don't just go on

1038
00:40:39,440 --> 00:40:41,760
this is like giving root permissions to

1039
00:40:41,760 --> 00:40:45,040
uh apache server it has nonsense it's a

1040
00:40:45,040 --> 00:40:46,160
nonsense

1041
00:40:46,160 --> 00:40:48,160
um

1042
00:40:48,160 --> 00:40:48,960
okay

1043
00:40:48,960 --> 00:40:51,440
well don't grant the the permission to

1044
00:40:51,440 --> 00:40:54,880
escalate to any service account

1045
00:40:54,880 --> 00:40:58,400
so in also when you're declaring a pot

1046
00:40:58,400 --> 00:41:01,359
you shouldn't specify the privilege as

1047
00:41:01,359 --> 00:41:04,640
true nor the host ipc host network all

1048
00:41:04,640 --> 00:41:06,960
the options we saw before

1049
00:41:06,960 --> 00:41:09,680
and if you don't need to

1050
00:41:09,680 --> 00:41:11,520
well you don't need to

1051
00:41:11,520 --> 00:41:14,079
write anything you can define

1052
00:41:14,079 --> 00:41:16,880
the whole container as a well a

1053
00:41:16,880 --> 00:41:19,200
read-only file system okay and you want

1054
00:41:19,200 --> 00:41:21,200
to specify also the permissions

1055
00:41:21,200 --> 00:41:23,090
everything

1056
00:41:23,090 --> 00:41:24,720
[Music]

1057
00:41:24,720 --> 00:41:26,200
also well

1058
00:41:26,200 --> 00:41:27,839
[Music]

1059
00:41:27,839 --> 00:41:30,560
this is important well in case

1060
00:41:30,560 --> 00:41:31,920
you don't want to

1061
00:41:31,920 --> 00:41:35,280
to expose your api uh i know some people

1062
00:41:35,280 --> 00:41:36,160
that

1063
00:41:36,160 --> 00:41:37,920
may need to expose the

1064
00:41:37,920 --> 00:41:41,359
the api of the api server

1065
00:41:41,359 --> 00:41:44,800
but if you can avoid it

1066
00:41:44,800 --> 00:41:46,400
you can

1067
00:41:46,400 --> 00:41:49,839
do it modifying this

1068
00:41:51,599 --> 00:41:53,839
okay

1069
00:41:54,480 --> 00:41:56,079
okay well

1070
00:41:56,079 --> 00:41:58,319
so this is uh

1071
00:41:58,319 --> 00:42:00,880
for the cubelet api same thing

1072
00:42:00,880 --> 00:42:03,200
sorry

1073
00:42:03,520 --> 00:42:04,560
okay

1074
00:42:04,560 --> 00:42:07,359
okay okay yeah i'm finishing i'm i'm

1075
00:42:07,359 --> 00:42:09,359
almost there okay

1076
00:42:09,359 --> 00:42:12,560
so uh also

1077
00:42:12,560 --> 00:42:15,280
well protecting with a logging and the

1078
00:42:15,280 --> 00:42:16,930
kubernetes dashboard

1079
00:42:16,930 --> 00:42:18,319
[Music]

1080
00:42:18,319 --> 00:42:20,960
also the containers

1081
00:42:20,960 --> 00:42:24,560
you want to use well this

1082
00:42:24,560 --> 00:42:25,599
well this

1083
00:42:25,599 --> 00:42:27,920
has no sense because now

1084
00:42:27,920 --> 00:42:30,480
kubernetes doesn't use a docker

1085
00:42:30,480 --> 00:42:32,480
but check the well try to harden also

1086
00:42:32,480 --> 00:42:34,800
the the images uh your juice you're

1087
00:42:34,800 --> 00:42:36,079
using

1088
00:42:36,079 --> 00:42:38,160
review the chrome jobs this is a very

1089
00:42:38,160 --> 00:42:40,640
the jeff's underground jobs are a

1090
00:42:40,640 --> 00:42:43,280
very common way of persistence

1091
00:42:43,280 --> 00:42:45,359
inside the kubernetes cluster unchecked

1092
00:42:45,359 --> 00:42:47,680
this is uh these are all the type of

1093
00:42:47,680 --> 00:42:51,760
services which expose

1094
00:42:51,760 --> 00:42:53,520
well expose a network service to the

1095
00:42:53,520 --> 00:42:55,680
internet so review these ones

1096
00:42:55,680 --> 00:42:58,640
uh okay and this one not that

1097
00:42:58,640 --> 00:43:01,280
very important okay and for pentesters

1098
00:43:01,280 --> 00:43:03,599
this is our these are the tools of the

1099
00:43:03,599 --> 00:43:05,440
trade okay

1100
00:43:05,440 --> 00:43:08,000
there are many many tools uh

1101
00:43:08,000 --> 00:43:10,640
i like this tool called striker and qv

1102
00:43:10,640 --> 00:43:12,880
scan but here you have a lot more in

1103
00:43:12,880 --> 00:43:14,480
case you wanna

1104
00:43:14,480 --> 00:43:18,160
play around with all of this

1105
00:43:18,160 --> 00:43:21,680
and that's it this is these are all

1106
00:43:21,680 --> 00:43:23,920
well all the objects

1107
00:43:23,920 --> 00:43:28,720
which are in the in the api uh

1108
00:43:28,720 --> 00:43:31,119
so if you want to take a look on the

1109
00:43:31,119 --> 00:43:33,760
security of some of this we have seen

1110
00:43:33,760 --> 00:43:35,680
the services service accounts secrets

1111
00:43:35,680 --> 00:43:37,200
whatever pods

1112
00:43:37,200 --> 00:43:38,880
but there are you know

1113
00:43:38,880 --> 00:43:40,400
security

1114
00:43:40,400 --> 00:43:41,520
risks

1115
00:43:41,520 --> 00:43:43,839
in others and this is a

1116
00:43:43,839 --> 00:43:45,760
interesting thing to to take a look if

1117
00:43:45,760 --> 00:43:46,880
you want to

1118
00:43:46,880 --> 00:43:49,040
if you're curious about the topic

1119
00:43:49,040 --> 00:43:49,839
so

1120
00:43:49,839 --> 00:43:51,760
that's it

1121
00:43:51,760 --> 00:43:54,640
i hope you like the talk and whatever

1122
00:43:54,640 --> 00:43:56,560
questions or

1123
00:43:56,560 --> 00:43:59,599
doubts or whatever

1124
00:43:59,920 --> 00:44:01,359
you want me to do

1125
00:44:01,359 --> 00:44:02,560
well

1126
00:44:02,560 --> 00:44:07,359
here or in twitter if you if you prefer

1127
00:44:07,440 --> 00:44:10,480
great thank you very much uh daniel

1128
00:44:10,480 --> 00:44:12,880
i don't know if we have any questions

1129
00:44:12,880 --> 00:44:14,880
for in the meanwhile just to give people

1130
00:44:14,880 --> 00:44:16,880
a couple of minutes to formulate those

1131
00:44:16,880 --> 00:44:17,920
questions

1132
00:44:17,920 --> 00:44:20,400
um i have perhaps like

1133
00:44:20,400 --> 00:44:22,319
one out of you know the curiosity i was

1134
00:44:22,319 --> 00:44:23,280
really

1135
00:44:23,280 --> 00:44:24,720
uh

1136
00:44:24,720 --> 00:44:26,160
curious about i'm really cool i was

1137
00:44:26,160 --> 00:44:28,640
really impacted by the one that you said

1138
00:44:28,640 --> 00:44:30,800
about the vulnerability that allows you

1139
00:44:30,800 --> 00:44:33,599
to mount um you know the file system the

1140
00:44:33,599 --> 00:44:35,839
hostile system into a pod by using a

1141
00:44:35,839 --> 00:44:37,920
privileged container right yeah is this

1142
00:44:37,920 --> 00:44:39,680
is this kind of like a

1143
00:44:39,680 --> 00:44:41,839
default behavior i mean would that by

1144
00:44:41,839 --> 00:44:43,520
default yes yeah right yeah right

1145
00:44:43,520 --> 00:44:45,359
because i remember that you because i

1146
00:44:45,359 --> 00:44:47,040
remember basically by default you can

1147
00:44:47,040 --> 00:44:49,119
create privilege containers right and

1148
00:44:49,119 --> 00:44:51,599
then you have to explicitly disable it

1149
00:44:51,599 --> 00:44:52,560
right

1150
00:44:52,560 --> 00:44:54,880
but if it's not if it's not a privileged

1151
00:44:54,880 --> 00:44:56,960
container would that attack

1152
00:44:56,960 --> 00:45:01,760
still working uh be a thing

1153
00:45:02,960 --> 00:45:06,160
uh i think it wouldn't work

1154
00:45:06,160 --> 00:45:08,720
i think it wouldn't but uh

1155
00:45:08,720 --> 00:45:10,800
anyway uh

1156
00:45:10,800 --> 00:45:11,520
as

1157
00:45:11,520 --> 00:45:14,640
i i think there are no politics uh that

1158
00:45:14,640 --> 00:45:18,240
like would like uh

1159
00:45:18,240 --> 00:45:21,279
make an attacker

1160
00:45:21,440 --> 00:45:23,760
not possible

1161
00:45:23,760 --> 00:45:27,119
to define uh apple that's a privilege i

1162
00:45:27,119 --> 00:45:28,800
mean if you have the permission to

1163
00:45:28,800 --> 00:45:30,400
create pots

1164
00:45:30,400 --> 00:45:31,520
i don't think

1165
00:45:31,520 --> 00:45:34,319
there's going to be any permission to

1166
00:45:34,319 --> 00:45:36,800
create bots but not privileged so

1167
00:45:36,800 --> 00:45:40,640
once you get the create pods permission

1168
00:45:40,720 --> 00:45:41,760
then

1169
00:45:41,760 --> 00:45:42,440
you're done

1170
00:45:42,440 --> 00:45:43,920
[Music]

1171
00:45:43,920 --> 00:45:46,800
okay great thank you very much uh daniel

1172
00:45:46,800 --> 00:45:48,240
i don't see any questions and again you

1173
00:45:48,240 --> 00:45:50,240
can reach out to him on twitter but also

1174
00:45:50,240 --> 00:45:52,079
on slack channels

1175
00:45:52,079 --> 00:45:55,480
we'll be there

