1
00:00:03,290 --> 00:00:09,300
hi everyone I hope you had a nice lunch

2
00:00:06,300 --> 00:00:13,320
and that you're not a sleepy as I am and

3
00:00:09,300 --> 00:00:15,990
yes I had that job prepared so we're

4
00:00:13,320 --> 00:00:19,560
gonna talk today about logging and

5
00:00:15,990 --> 00:00:23,039
alerting in GCP I am Diana I'm a senior

6
00:00:19,560 --> 00:00:25,830
security engineer at King and I also

7
00:00:23,039 --> 00:00:28,699
come from telecommunications so I still

8
00:00:25,830 --> 00:00:31,589
remember some of the Maxwell's equations

9
00:00:28,699 --> 00:00:33,810
also I'm from a network and network

10
00:00:31,589 --> 00:00:36,030
security background so I know the

11
00:00:33,810 --> 00:00:37,830
challenges that as a security

12
00:00:36,030 --> 00:00:41,130
professional face when moving from

13
00:00:37,830 --> 00:00:43,920
on-prem where we have our cables and our

14
00:00:41,130 --> 00:00:47,550
hardware to a completely serverless

15
00:00:43,920 --> 00:00:49,770
solution somewhere in the cloud and also

16
00:00:47,550 --> 00:00:53,040
I'm native from Romania and that means I

17
00:00:49,770 --> 00:00:55,470
know all Dracula jokes so if you wanna

18
00:00:53,040 --> 00:00:58,500
learn more about Dracula mythology or

19
00:00:55,470 --> 00:01:00,390
vampires please follow me on Twitter and

20
00:00:58,500 --> 00:01:04,650
we can as well talk about cloud security

21
00:01:00,390 --> 00:01:07,289
that's boring great so this will be our

22
00:01:04,650 --> 00:01:11,369
content today it's divided into two

23
00:01:07,289 --> 00:01:14,820
parts in one we will talk about logs and

24
00:01:11,369 --> 00:01:17,520
alerts and the options that GCP game

25
00:01:14,820 --> 00:01:19,949
gives us will state some problem and

26
00:01:17,520 --> 00:01:21,600
philosophy there and then in the second

27
00:01:19,950 --> 00:01:25,320
part we will show an automation

28
00:01:21,600 --> 00:01:27,210
framework completely built inside GCP

29
00:01:25,320 --> 00:01:31,699
that will help us with detection and

30
00:01:27,210 --> 00:01:34,589
incident response great so let's start I

31
00:01:31,700 --> 00:01:37,829
think this is a very busy slide and you

32
00:01:34,590 --> 00:01:40,590
don't see anything so I start to dive in

33
00:01:37,829 --> 00:01:46,619
icon we got to this

34
00:01:40,590 --> 00:01:49,469
okay so GCP has a lot of services like

35
00:01:46,619 --> 00:01:52,079
the ones you can't see they're based on

36
00:01:49,469 --> 00:01:55,169
computing and other managed complete

37
00:01:52,079 --> 00:01:58,609
managed services storage bigquery or

38
00:01:55,170 --> 00:02:01,829
machine learning for although all those

39
00:01:58,609 --> 00:02:04,229
services it has monitoring tools for

40
00:02:01,829 --> 00:02:06,630
diagnosis logging in all types of

41
00:02:04,229 --> 00:02:09,630
monitoring so we will see this shortly

42
00:02:06,630 --> 00:02:12,450
and also we need to remember that some

43
00:02:09,630 --> 00:02:14,549
services of Google work over compute

44
00:02:12,450 --> 00:02:16,019
engine which are basically VMs and they

45
00:02:14,550 --> 00:02:19,770
have the protections you

46
00:02:16,020 --> 00:02:22,140
laughter overall virtual own networks

47
00:02:19,770 --> 00:02:24,930
and then they have some complete

48
00:02:22,140 --> 00:02:27,059
management complete managed services

49
00:02:24,930 --> 00:02:29,490
where we just need to control access

50
00:02:27,060 --> 00:02:30,030
those resources and we will see that

51
00:02:29,490 --> 00:02:32,760
shortly

52
00:02:30,030 --> 00:02:35,160
and here foggy is the shared

53
00:02:32,760 --> 00:02:37,200
responsibility model which we were lucky

54
00:02:35,160 --> 00:02:39,690
that we saw it today for Amazon as well

55
00:02:37,200 --> 00:02:41,489
so basically means that we're moving

56
00:02:39,690 --> 00:02:43,170
from an infrastructure as a service

57
00:02:41,490 --> 00:02:45,090
module where we have compute engine

58
00:02:43,170 --> 00:02:47,970
where we need to control everything from

59
00:02:45,090 --> 00:02:51,540
system operating up operating system up

60
00:02:47,970 --> 00:02:54,030
and we go to completely serverless logic

61
00:02:51,540 --> 00:02:58,760
and elastic resources where we just need

62
00:02:54,030 --> 00:03:02,400
to control the access to that and as

63
00:02:58,760 --> 00:03:05,790
winking are collaborating with GCP for a

64
00:03:02,400 --> 00:03:09,270
couple of years our main use cases for

65
00:03:05,790 --> 00:03:10,739
GCP platform are Big Data because we

66
00:03:09,270 --> 00:03:12,720
have a lot of players and a lot of

67
00:03:10,740 --> 00:03:15,450
metadata for that players and we need to

68
00:03:12,720 --> 00:03:17,520
parse it as well as machine learning and

69
00:03:15,450 --> 00:03:20,280
this is a super cool use case we

70
00:03:17,520 --> 00:03:23,310
actually have virtual players for our

71
00:03:20,280 --> 00:03:25,320
games that's you know like computers

72
00:03:23,310 --> 00:03:27,959
that play candy crush and I think that

73
00:03:25,320 --> 00:03:31,650
is terrific and you can find more

74
00:03:27,959 --> 00:03:35,520
information on our tech blog in the big

75
00:03:31,650 --> 00:03:38,190
nasty problem so this talk will be

76
00:03:35,520 --> 00:03:40,740
focused on the vision and on the

77
00:03:38,190 --> 00:03:42,359
perspective of moving from on print to

78
00:03:40,740 --> 00:03:45,840
the cloud and the problems that this

79
00:03:42,360 --> 00:03:47,820
adds and basically the problems as as

80
00:03:45,840 --> 00:03:50,730
follows we are used and we are

81
00:03:47,820 --> 00:03:53,760
comfortable in an on-prem where we have

82
00:03:50,730 --> 00:03:56,220
our stack we have our hardware where we

83
00:03:53,760 --> 00:03:58,260
know how to manage your those controls

84
00:03:56,220 --> 00:04:01,430
and we're we're moving to the cloud

85
00:03:58,260 --> 00:04:05,429
environment we see that we cannot

86
00:04:01,430 --> 00:04:07,220
implement the same stack and that makes

87
00:04:05,430 --> 00:04:09,990
us feel we have a lack of visibility

88
00:04:07,220 --> 00:04:11,940
also in the DevOps environment where

89
00:04:09,990 --> 00:04:14,370
developers are managing their own

90
00:04:11,940 --> 00:04:16,620
infrastructure there are in agile

91
00:04:14,370 --> 00:04:19,649
technology companies it happens more and

92
00:04:16,620 --> 00:04:21,298
more and some companies even enforce

93
00:04:19,649 --> 00:04:22,650
that the developers manage their own

94
00:04:21,298 --> 00:04:25,200
infrastructure they don't want it

95
00:04:22,650 --> 00:04:27,359
centralized and this lack of centralized

96
00:04:25,200 --> 00:04:29,389
management also makes us feel insecure

97
00:04:27,360 --> 00:04:31,479
and out of control and

98
00:04:29,389 --> 00:04:35,120
makes us not be too open to the cloud

99
00:04:31,479 --> 00:04:37,430
and all this the news that we hear every

100
00:04:35,120 --> 00:04:40,219
day about the italics don't make us feel

101
00:04:37,430 --> 00:04:43,879
very well because most of those news are

102
00:04:40,219 --> 00:04:48,020
because of buckets of storage pockets or

103
00:04:43,879 --> 00:04:50,930
data databases which are not properly

104
00:04:48,020 --> 00:04:52,280
configured and we need to understand how

105
00:04:50,930 --> 00:04:54,650
we have visibility and how we can

106
00:04:52,280 --> 00:04:57,710
control that and we will see how to

107
00:04:54,650 --> 00:05:00,378
solve this nasty problem with GCP native

108
00:04:57,710 --> 00:05:02,120
tools and the second thing we are very

109
00:05:00,379 --> 00:05:05,270
lucky to have in the cloud is that we

110
00:05:02,120 --> 00:05:07,250
can very easily practice now even in the

111
00:05:05,270 --> 00:05:10,639
demo that I will show you actually did a

112
00:05:07,250 --> 00:05:12,949
demo with my private account in five

113
00:05:10,639 --> 00:05:15,770
minutes I found it up and I have some

114
00:05:12,949 --> 00:05:19,340
tokens for a full year to test I don't

115
00:05:15,770 --> 00:05:21,919
need to buy an expensive appliance or to

116
00:05:19,340 --> 00:05:23,960
have a very complex virtual lab I just

117
00:05:21,919 --> 00:05:27,109
with two clicks I am able to practice

118
00:05:23,960 --> 00:05:33,219
that and that's absolutely great so now

119
00:05:27,110 --> 00:05:33,219
let's go into logging internal Emma tree

120
00:05:36,039 --> 00:05:42,080
so I want you to also think about those

121
00:05:39,349 --> 00:05:44,389
slides as a cheat sheet in the future

122
00:05:42,080 --> 00:05:46,490
because there are some lines of codes

123
00:05:44,389 --> 00:05:48,650
and some queries and we don't need to go

124
00:05:46,490 --> 00:05:50,719
over them now but there thought this is

125
00:05:48,650 --> 00:05:53,479
something that I used I would have loved

126
00:05:50,719 --> 00:05:55,490
to have a few years ago you know and I

127
00:05:53,479 --> 00:05:57,500
started looking into this I would like

128
00:05:55,490 --> 00:06:00,289
to have already those lights prepared so

129
00:05:57,500 --> 00:06:03,349
if it's so much information don't worry

130
00:06:00,289 --> 00:06:06,080
we're gonna see it afterwards so one of

131
00:06:03,349 --> 00:06:08,539
the googles monitoring products that it

132
00:06:06,080 --> 00:06:13,250
has is that driver which is basically a

133
00:06:08,539 --> 00:06:16,610
log aggregator and in no GCP everything

134
00:06:13,250 --> 00:06:19,039
is locked every action every access to

135
00:06:16,610 --> 00:06:21,710
data is being logged and it's being long

136
00:06:19,039 --> 00:06:24,289
in JSON format which gives us a lot of

137
00:06:21,710 --> 00:06:26,330
flexibility than to parse those logs you

138
00:06:24,289 --> 00:06:28,339
have options to keep the logs in this

139
00:06:26,330 --> 00:06:30,318
tab driver and parse them there of

140
00:06:28,339 --> 00:06:33,229
course to discard them if they're not of

141
00:06:30,319 --> 00:06:35,560
use or to export them to storage to

142
00:06:33,229 --> 00:06:38,300
bigquery or to pub/sub which is a

143
00:06:35,560 --> 00:06:41,000
messaging service published subscription

144
00:06:38,300 --> 00:06:42,470
messaging service for your external

145
00:06:41,000 --> 00:06:45,800
themes or sis

146
00:06:42,470 --> 00:06:48,650
and we have audit logging for access to

147
00:06:45,800 --> 00:06:49,820
data we have rich metadata telemetry for

148
00:06:48,650 --> 00:06:52,700
log balance

149
00:06:49,820 --> 00:06:56,120
traffic's VPC flows and firewall logs

150
00:06:52,700 --> 00:06:59,270
and some application specific logging

151
00:06:56,120 --> 00:07:02,030
and here we'll enter a little into

152
00:06:59,270 --> 00:07:04,310
detail the admin activity logs are

153
00:07:02,030 --> 00:07:07,000
enabled by default and it's all the

154
00:07:04,310 --> 00:07:09,560
activity performed by a means of

155
00:07:07,000 --> 00:07:12,770
resources so this means if somebody

156
00:07:09,560 --> 00:07:15,620
created modify deleted resources we can

157
00:07:12,770 --> 00:07:18,820
see all that we can see who did it so it

158
00:07:15,620 --> 00:07:22,340
could even need now to have a clearer

159
00:07:18,820 --> 00:07:25,099
audit of our inventory of our resources

160
00:07:22,340 --> 00:07:29,090
because we can see who acted on the

161
00:07:25,100 --> 00:07:30,740
resources source IP user agents and info

162
00:07:29,090 --> 00:07:33,710
about the projects and the methods

163
00:07:30,740 --> 00:07:35,990
invoked and on the right you can see but

164
00:07:33,710 --> 00:07:38,570
there are some freedom fields that you

165
00:07:35,990 --> 00:07:41,480
can directly use in your queries or in

166
00:07:38,570 --> 00:07:43,370
your investigations and here is a query

167
00:07:41,480 --> 00:07:47,630
that can be in stackdriver to see all

168
00:07:43,370 --> 00:07:49,940
the activity from a subnet of compute

169
00:07:47,630 --> 00:07:54,020
engine VMs so you can check this out

170
00:07:49,940 --> 00:07:57,320
later this is access to data data access

171
00:07:54,020 --> 00:07:58,849
logs and if you in the case of admin

172
00:07:57,320 --> 00:08:01,099
activity logs we could have seen when

173
00:07:58,850 --> 00:08:03,020
somebody created a bucket in this case

174
00:08:01,100 --> 00:08:05,260
we can see if somebody uploaded or

175
00:08:03,020 --> 00:08:08,150
downloaded information from that bucket

176
00:08:05,260 --> 00:08:11,780
we have the same metadata about this

177
00:08:08,150 --> 00:08:14,090
activity and we can see also the methods

178
00:08:11,780 --> 00:08:17,619
that have been invoked from where and

179
00:08:14,090 --> 00:08:21,500
what or whom who did them and here is a

180
00:08:17,620 --> 00:08:24,830
very nice blurry example of a query to

181
00:08:21,500 --> 00:08:28,760
see all activity over a bucket by a sole

182
00:08:24,830 --> 00:08:31,930
user and here in the result you can see

183
00:08:28,760 --> 00:08:35,569
it's a get method over the exact budget

184
00:08:31,930 --> 00:08:38,539
exact object so it's a download so you

185
00:08:35,570 --> 00:08:41,990
can see that and here is another busy

186
00:08:38,539 --> 00:08:43,819
slide with VPC flows and VPC flows are

187
00:08:41,990 --> 00:08:46,280
like the flows that we're used on-prem

188
00:08:43,820 --> 00:08:50,780
you can have the five tuple with source

189
00:08:46,280 --> 00:08:52,520
IP and destination IP and destination IP

190
00:08:50,780 --> 00:08:54,939
source port and destination port and

191
00:08:52,520 --> 00:08:57,460
protocols volume information in

192
00:08:54,940 --> 00:08:59,620
is the diagram which is from data studio

193
00:08:57,460 --> 00:09:02,260
also a service from GCP that can help

194
00:08:59,620 --> 00:09:06,690
you visualize big data information flows

195
00:09:02,260 --> 00:09:11,170
being one of it you can see flows from

196
00:09:06,690 --> 00:09:12,790
sol vm to server or public I t's you can

197
00:09:11,170 --> 00:09:15,219
see the ports and you can see how much

198
00:09:12,790 --> 00:09:17,560
volume of traffic has been now passed

199
00:09:15,220 --> 00:09:19,330
and here are some direct little queries

200
00:09:17,560 --> 00:09:23,310
that you can use in your investigation

201
00:09:19,330 --> 00:09:26,380
to see VPC flows for vm port and subnet

202
00:09:23,310 --> 00:09:28,329
so with all those informations

203
00:09:26,380 --> 00:09:30,850
and all those data that we have we've

204
00:09:28,330 --> 00:09:32,800
seen now it should leverage them and we

205
00:09:30,850 --> 00:09:34,600
can leverage them creating alerting and

206
00:09:32,800 --> 00:09:37,990
this is a very interesting concept

207
00:09:34,600 --> 00:09:39,760
because we are used with parsing logs

208
00:09:37,990 --> 00:09:41,230
and creating alerts so we can do the

209
00:09:39,760 --> 00:09:43,150
same thing in the cloud the only

210
00:09:41,230 --> 00:09:44,980
difference is we have all the logs

211
00:09:43,150 --> 00:09:48,340
needed we don't need to go and beg for

212
00:09:44,980 --> 00:09:50,770
hugs for several teams and we can alert

213
00:09:48,340 --> 00:09:53,020
over everything some can be a policy and

214
00:09:50,770 --> 00:09:58,210
compliances migration of non-compliance

215
00:09:53,020 --> 00:10:01,120
vm or non domain account has access in

216
00:09:58,210 --> 00:10:03,520
GCP and others can be a security related

217
00:10:01,120 --> 00:10:05,830
as traffic volume and high resource

218
00:10:03,520 --> 00:10:09,100
consumption and on the right is an

219
00:10:05,830 --> 00:10:12,460
example of such alert over traffic sent

220
00:10:09,100 --> 00:10:15,310
bytes from a vm but here we discover

221
00:10:12,460 --> 00:10:18,370
another problem ok we have all the logs

222
00:10:15,310 --> 00:10:21,670
ok you create alerts for everything ok

223
00:10:18,370 --> 00:10:24,670
or developers have freedom spam in the

224
00:10:21,670 --> 00:10:27,130
span instance that users you know do

225
00:10:24,670 --> 00:10:28,959
their thing but it's very difficult to

226
00:10:27,130 --> 00:10:30,970
manage a scale alerting on all those

227
00:10:28,960 --> 00:10:33,550
things and going what's going on slack

228
00:10:30,970 --> 00:10:37,480
on each one hello have you added this

229
00:10:33,550 --> 00:10:40,689
person here you shouldn't have has a

230
00:10:37,480 --> 00:10:43,030
high operational overhead and being a

231
00:10:40,690 --> 00:10:45,160
reactive approach we need and giving the

232
00:10:43,030 --> 00:10:48,040
freedom in being reactive we need to

233
00:10:45,160 --> 00:10:50,050
react fast so you know have an alert and

234
00:10:48,040 --> 00:10:56,140
react on it over 12 hours and that's not

235
00:10:50,050 --> 00:10:58,930
a good idea so part of a cloud solution

236
00:10:56,140 --> 00:11:02,580
in this case TCP as we have a look for

237
00:10:58,930 --> 00:11:06,040
everything we have an API for everything

238
00:11:02,580 --> 00:11:08,310
we're gonna see a clear example how we

239
00:11:06,040 --> 00:11:10,500
can leverage all the logs and

240
00:11:08,310 --> 00:11:17,609
all the api's to create a complete

241
00:11:10,500 --> 00:11:19,350
automotive auto native solution to be

242
00:11:17,610 --> 00:11:21,060
able to feel comfortable in the cloud

243
00:11:19,350 --> 00:11:23,779
because we're detecting everything and

244
00:11:21,060 --> 00:11:27,209
we level to respond to those challenges

245
00:11:23,779 --> 00:11:29,520
so the example here is the classic and

246
00:11:27,210 --> 00:11:33,210
in famous public bucket we've seen how

247
00:11:29,520 --> 00:11:35,760
much problems this gave and one of the

248
00:11:33,210 --> 00:11:38,370
things that the public bucket has in

249
00:11:35,760 --> 00:11:41,370
case of GCPD has two ways of making it

250
00:11:38,370 --> 00:11:44,640
public one is all users which basically

251
00:11:41,370 --> 00:11:47,850
means is 100% public and the second

252
00:11:44,640 --> 00:11:51,150
thing is roll all the authenticated

253
00:11:47,850 --> 00:11:52,950
users and this has a little problem

254
00:11:51,150 --> 00:11:55,439
because people might think that all

255
00:11:52,950 --> 00:11:58,740
authenticated users might mean user

256
00:11:55,440 --> 00:12:01,529
authenticated in my organization and so

257
00:11:58,740 --> 00:12:04,080
not true means all my organization any

258
00:12:01,529 --> 00:12:06,750
organization that has a GCP a Google

259
00:12:04,080 --> 00:12:09,150
account or even Gmail accounts so you

260
00:12:06,750 --> 00:12:11,990
need to be authenticated with Google so

261
00:12:09,150 --> 00:12:14,370
this creates a lot of problems so

262
00:12:11,990 --> 00:12:16,410
basically we can create an alert with

263
00:12:14,370 --> 00:12:19,710
this query right here we're checking for

264
00:12:16,410 --> 00:12:22,410
the member or users being added over the

265
00:12:19,710 --> 00:12:24,360
resource type being a bucket and another

266
00:12:22,410 --> 00:12:26,280
nice thing to see is that every time you

267
00:12:24,360 --> 00:12:27,870
have a back-end being made public it

268
00:12:26,280 --> 00:12:30,120
gives you a little message there and

269
00:12:27,870 --> 00:12:32,210
says beware it's public it's not a good

270
00:12:30,120 --> 00:12:32,210
idea

271
00:12:33,710 --> 00:12:41,820
okay so having this alert query let's

272
00:12:39,780 --> 00:12:44,939
see how we can automate completely the

273
00:12:41,820 --> 00:12:48,120
response so if you know policy is you

274
00:12:44,940 --> 00:12:50,670
cannot have a public bucket except the

275
00:12:48,120 --> 00:12:52,320
use case is clearly analyzed before by

276
00:12:50,670 --> 00:12:55,079
security and we add you to a white

277
00:12:52,320 --> 00:12:56,910
listing and we approve you to be on a

278
00:12:55,080 --> 00:12:58,950
public bucket which basically we need to

279
00:12:56,910 --> 00:13:02,130
have a public bucket only if you have

280
00:12:58,950 --> 00:13:06,480
public web content if not we will have a

281
00:13:02,130 --> 00:13:09,209
way to reduce it to a group or a user so

282
00:13:06,480 --> 00:13:11,730
here what's happening I can't even see

283
00:13:09,209 --> 00:13:14,040
what's happening here so what's

284
00:13:11,730 --> 00:13:18,510
happening here you will see afterwards

285
00:13:14,040 --> 00:13:21,030
is that we have a user that when goes to

286
00:13:18,510 --> 00:13:21,580
a bucket and says ok I want to make it

287
00:13:21,030 --> 00:13:24,520
make this

288
00:13:21,580 --> 00:13:26,500
bubbling and in that moment that look

289
00:13:24,520 --> 00:13:29,829
that somebody made a bucket public with

290
00:13:26,500 --> 00:13:32,710
the filter we saw before goes to logging

291
00:13:29,830 --> 00:13:35,620
to stack drivers monitoring and there we

292
00:13:32,710 --> 00:13:38,500
have a pops up listening to all the

293
00:13:35,620 --> 00:13:42,270
events that apply that query tool and

294
00:13:38,500 --> 00:13:45,490
then and this is where the magic happens

295
00:13:42,270 --> 00:13:49,000
we have a function that listens to that

296
00:13:45,490 --> 00:13:51,250
pops up on the puffs of the Foo locums

297
00:13:49,000 --> 00:13:54,310
so we are it's adjacent we can parse it

298
00:13:51,250 --> 00:13:56,020
and as we said we have the log the

299
00:13:54,310 --> 00:13:59,020
function is listening to it and then it

300
00:13:56,020 --> 00:14:01,350
invokes the cloud storage API to make

301
00:13:59,020 --> 00:14:04,090
that bucket private again and that's

302
00:14:01,350 --> 00:14:05,920
instantaneous and of course as we

303
00:14:04,090 --> 00:14:08,800
respect our users because sometimes they

304
00:14:05,920 --> 00:14:10,329
might be wrong or we message because we

305
00:14:08,800 --> 00:14:12,729
can use for parties we can send it to

306
00:14:10,330 --> 00:14:14,410
slack on email and send them the message

307
00:14:12,730 --> 00:14:16,180
saying okay you are not allowed to do

308
00:14:14,410 --> 00:14:17,860
this but if you wanna do this this is

309
00:14:16,180 --> 00:14:19,750
the documentation and we start the

310
00:14:17,860 --> 00:14:22,870
conversation with them so that's super

311
00:14:19,750 --> 00:14:25,120
cool and we're gonna see it now and here

312
00:14:22,870 --> 00:14:26,860
you have a little snippet like this is

313
00:14:25,120 --> 00:14:29,620
done with less than 20 lines of codes

314
00:14:26,860 --> 00:14:33,250
okay this you just get it you put it

315
00:14:29,620 --> 00:14:35,290
then and there you have it let's see

316
00:14:33,250 --> 00:14:41,890
exactly how the magic happens okay are

317
00:14:35,290 --> 00:14:46,209
you excited yeah great because I am so

318
00:14:41,890 --> 00:14:48,790
okay so can we see okay we can see this

319
00:14:46,210 --> 00:14:52,210
is the log export export that I told you

320
00:14:48,790 --> 00:14:55,569
about so here is the exact query that we

321
00:14:52,210 --> 00:14:58,690
saw okay do I still have internet I

322
00:14:55,570 --> 00:15:02,530
don't of course I don't have internet oh

323
00:14:58,690 --> 00:15:06,310
yes I do okay we have internet people so

324
00:15:02,530 --> 00:15:08,920
here is the here is the query we talked

325
00:15:06,310 --> 00:15:11,680
about so we're just checking to be all

326
00:15:08,920 --> 00:15:14,709
user add over this resource type and as

327
00:15:11,680 --> 00:15:16,959
I said this is my own private google

328
00:15:14,710 --> 00:15:18,640
cloud project and organization and

329
00:15:16,960 --> 00:15:20,410
everything done with my account which I

330
00:15:18,640 --> 00:15:23,140
did it in one hour so everybody can play

331
00:15:20,410 --> 00:15:26,110
with this and Here I am exporting it to

332
00:15:23,140 --> 00:15:29,620
this destination which this is the pops

333
00:15:26,110 --> 00:15:31,720
up if we go to the function we can see

334
00:15:29,620 --> 00:15:33,430
which is a function like lambda

335
00:15:31,720 --> 00:15:35,059
functions more or less in Amazon for

336
00:15:33,430 --> 00:15:39,189
people more familiar if

337
00:15:35,059 --> 00:15:42,709
listening to this topic and this is the

338
00:15:39,189 --> 00:15:45,589
this is the function this is all so it's

339
00:15:42,709 --> 00:15:47,748
super short here is reading the log that

340
00:15:45,589 --> 00:15:51,199
just came through pops up here is

341
00:15:47,749 --> 00:15:57,199
getting the client for cloud storage and

342
00:15:51,199 --> 00:16:00,409
here is discarding the role okay so this

343
00:15:57,199 --> 00:16:05,628
is our packet we're adding the member or

344
00:16:00,409 --> 00:16:07,909
users okay let's add it just your roles

345
00:16:05,629 --> 00:16:11,659
the rules are the same as every of your

346
00:16:07,909 --> 00:16:13,699
editor full admin and you will see that

347
00:16:11,659 --> 00:16:18,529
now it tells us that the bucket is

348
00:16:13,699 --> 00:16:24,858
public and let's go back here and okay

349
00:16:18,529 --> 00:16:34,879
look at the function details let's have

350
00:16:24,859 --> 00:16:38,719
patience with it even if okay refresh

351
00:16:34,879 --> 00:16:42,559
this yeah I'm from my phone now so the

352
00:16:38,719 --> 00:16:46,399
magic happened there so you know okay I

353
00:16:42,559 --> 00:16:49,009
have a video as well as okay let's

354
00:16:46,399 --> 00:16:52,279
refresh this and we will see how it's

355
00:16:49,009 --> 00:16:56,929
not public anymore see the bucket is no

356
00:16:52,279 --> 00:16:59,419
longer public and if this has refreshed

357
00:16:56,929 --> 00:17:01,429
we will be able to see that the function

358
00:16:59,419 --> 00:17:04,638
has triggered so this happen in how long

359
00:17:01,429 --> 00:17:09,949
and how long my phone internet works in

360
00:17:04,638 --> 00:17:11,809
20 seconds so is that simple and with so

361
00:17:09,949 --> 00:17:13,279
little things you are in control again

362
00:17:11,809 --> 00:17:15,019
and you're doing something that is done

363
00:17:13,279 --> 00:17:17,089
very difficult on frame because I'm Prem

364
00:17:15,019 --> 00:17:19,279
is more difficult to interact with or

365
00:17:17,089 --> 00:17:22,938
our security controls and our security

366
00:17:19,279 --> 00:17:26,089
status to automate this see it's it's

367
00:17:22,939 --> 00:17:31,190
been triggered and the bucket is private

368
00:17:26,089 --> 00:17:32,840
again that's cool wasn't it thank you

369
00:17:31,190 --> 00:17:35,930
same come on I need to write here for

370
00:17:32,840 --> 00:17:39,080
I'm good perfect

371
00:17:35,930 --> 00:17:41,180
and as we saw it the case for just the

372
00:17:39,080 --> 00:17:44,480
public bucket of course this can be

373
00:17:41,180 --> 00:17:47,300
extended to everything so you can see

374
00:17:44,480 --> 00:17:49,220
here again but you can have a pops up

375
00:17:47,300 --> 00:17:51,200
the three slopes for everything you want

376
00:17:49,220 --> 00:17:53,270
to enforce being if you see a

377
00:17:51,200 --> 00:17:57,730
high-volume consumption if you see a

378
00:17:53,270 --> 00:18:00,410
resource consumption if you see that

379
00:17:57,730 --> 00:18:02,870
user from outside the company or

380
00:18:00,410 --> 00:18:05,840
anything like that and then you have

381
00:18:02,870 --> 00:18:07,310
several functions for each one and the

382
00:18:05,840 --> 00:18:09,889
last thing is the notification module

383
00:18:07,310 --> 00:18:12,020
you have a sole notification for

384
00:18:09,890 --> 00:18:14,030
everything or several depending on how

385
00:18:12,020 --> 00:18:16,430
you go and you might have one that

386
00:18:14,030 --> 00:18:19,070
directly sends to slack and notifies the

387
00:18:16,430 --> 00:18:20,740
user or just opens directly an incident

388
00:18:19,070 --> 00:18:26,620
ticket in your Incident Response

389
00:18:20,740 --> 00:18:29,900
framework and with this conclusions and

390
00:18:26,620 --> 00:18:31,489
the idea we started with is that we

391
00:18:29,900 --> 00:18:33,530
don't feel comfortable going to the

392
00:18:31,490 --> 00:18:36,200
cloud because we have no Levy's ability

393
00:18:33,530 --> 00:18:38,960
but we have because of the rich logging

394
00:18:36,200 --> 00:18:41,390
information and then that we feel you

395
00:18:38,960 --> 00:18:43,610
are not in control because security

396
00:18:41,390 --> 00:18:45,800
controls are now distributed and managed

397
00:18:43,610 --> 00:18:48,500
by developers but we do have control

398
00:18:45,800 --> 00:18:52,370
because we have api's and we can do this

399
00:18:48,500 --> 00:18:55,220
centrally and then what this happens is

400
00:18:52,370 --> 00:18:58,010
we can balance the world of user freedom

401
00:18:55,220 --> 00:19:00,140
with the reactive enforcing of security

402
00:18:58,010 --> 00:19:01,879
policies for automation because we can

403
00:19:00,140 --> 00:19:03,740
automate all this and we're not afraid

404
00:19:01,880 --> 00:19:06,830
that really will being without the

405
00:19:03,740 --> 00:19:09,020
control for too long time and as I said

406
00:19:06,830 --> 00:19:10,730
I think it's a great starting point for

407
00:19:09,020 --> 00:19:13,639
the transition from the on-prem

408
00:19:10,730 --> 00:19:17,000
mentality to the cloud mentality feeling

409
00:19:13,640 --> 00:19:19,970
you you know and you can interact with

410
00:19:17,000 --> 00:19:21,650
until you fully enter in that serverless

411
00:19:19,970 --> 00:19:24,140
mentality and you understand all the

412
00:19:21,650 --> 00:19:28,470
controls that the cloud for a cloud

413
00:19:24,140 --> 00:19:31,410
platform can give thank you in questions

414
00:19:28,470 --> 00:19:34,779
[Applause]

415
00:19:31,410 --> 00:19:34,779
[Music]

416
00:19:37,730 --> 00:19:44,239
[Music]

417
00:19:51,339 --> 00:20:01,129
hi thank you for that you you have 1 1

418
00:19:57,859 --> 00:20:01,939
alert here which is an open an open

419
00:20:01,129 --> 00:20:05,299
bucket

420
00:20:01,940 --> 00:20:07,909
how many alerts do you propose writing

421
00:20:05,299 --> 00:20:10,668
or do you have any library of alerts

422
00:20:07,909 --> 00:20:14,029
that you could apply or buy from

423
00:20:10,669 --> 00:20:15,710
somewhere or how many others are you

424
00:20:14,029 --> 00:20:17,169
aiming at well that's a very good idea

425
00:20:15,710 --> 00:20:20,839
actually

426
00:20:17,169 --> 00:20:22,999
well every company will in its blue team

427
00:20:20,839 --> 00:20:24,710
or in its sock team have a catalog of

428
00:20:22,999 --> 00:20:27,080
alerts and of detection that they do

429
00:20:24,710 --> 00:20:29,570
over time starting with some basic

430
00:20:27,080 --> 00:20:31,699
alerting that everybody has and then

431
00:20:29,570 --> 00:20:34,399
going to more specific alerting based on

432
00:20:31,700 --> 00:20:37,219
their environment so I think this should

433
00:20:34,399 --> 00:20:39,439
just make part of your detection

434
00:20:37,219 --> 00:20:40,999
framework and detection catalog and as

435
00:20:39,440 --> 00:20:43,039
you add a new detection for the

436
00:20:40,999 --> 00:20:46,429
production on-prem environment because

437
00:20:43,039 --> 00:20:48,408
you know you have some applications and

438
00:20:46,429 --> 00:20:50,149
how to detect them you can do the same

439
00:20:48,409 --> 00:20:52,039
type of the same thing with the cloud

440
00:20:50,149 --> 00:20:54,559
and the only difference would be that

441
00:20:52,039 --> 00:20:58,070
you are adding a new lock source for

442
00:20:54,559 --> 00:20:59,629
those depictions so ok how many you have

443
00:20:58,070 --> 00:21:01,399
how many feel necessary if you only

444
00:20:59,629 --> 00:21:03,738
imagine if you only start using cloud

445
00:21:01,399 --> 00:21:06,529
using buckets this will be enough for

446
00:21:03,739 --> 00:21:08,690
you when you start using other services

447
00:21:06,529 --> 00:21:10,219
you will add but thank you for the idea

448
00:21:08,690 --> 00:21:13,839
it would be nice to already have you

449
00:21:10,219 --> 00:21:17,119
know like a set of predefined alerts and

450
00:21:13,839 --> 00:21:17,658
I've done can be directly used to create

451
00:21:17,119 --> 00:21:20,178
alerts

452
00:21:17,659 --> 00:21:22,399
but this also depends on the theme

453
00:21:20,179 --> 00:21:23,599
you're using you can do it over a cm in

454
00:21:22,399 --> 00:21:25,218
particular and you will have your

455
00:21:23,599 --> 00:21:25,908
queries or you can do them directly in

456
00:21:25,219 --> 00:21:29,330
stackdriver

457
00:21:25,909 --> 00:21:31,869
but it is just part of the detection

458
00:21:29,330 --> 00:21:31,869
catalog

459
00:21:32,169 --> 00:21:38,119
hello thank you so much for the

460
00:21:34,789 --> 00:21:40,609
presentation it was lovely here yep a

461
00:21:38,119 --> 00:21:42,709
quick question this is an event that you

462
00:21:40,609 --> 00:21:44,570
can trigger very easily something in

463
00:21:42,710 --> 00:21:46,100
order to fix the issue but

464
00:21:44,570 --> 00:21:48,470
what happens when you receive a lot of

465
00:21:46,100 --> 00:21:50,449
alerts that are related to false

466
00:21:48,470 --> 00:21:54,080
positives how you handle false positives

467
00:21:50,450 --> 00:21:57,559
in other kind of alerts that are not as

468
00:21:54,080 --> 00:21:59,840
easy to detect as this one okay so also

469
00:21:57,559 --> 00:22:01,940
in the part that you have of the

470
00:21:59,840 --> 00:22:03,678
detection framework that you already

471
00:22:01,940 --> 00:22:05,809
have on frame when you're when you're

472
00:22:03,679 --> 00:22:07,700
designing when you alert what you're

473
00:22:05,809 --> 00:22:10,460
doing is that you have a first time of

474
00:22:07,700 --> 00:22:12,200
doing the event discovery and starting

475
00:22:10,460 --> 00:22:14,539
to say okay I want to detect this I want

476
00:22:12,200 --> 00:22:16,610
to detect when the communication happens

477
00:22:14,539 --> 00:22:19,639
on this port or when this user is added

478
00:22:16,610 --> 00:22:21,889
you first do some queries be it in stag

479
00:22:19,639 --> 00:22:23,418
driver or in your cm and you see how

480
00:22:21,889 --> 00:22:25,459
many events that would have generated

481
00:22:23,419 --> 00:22:27,710
during a while and you start tweaking

482
00:22:25,460 --> 00:22:29,269
that alert until it makes sense because

483
00:22:27,710 --> 00:22:30,919
you're right with something an alert

484
00:22:29,269 --> 00:22:33,799
makes sense only if it's actionable

485
00:22:30,919 --> 00:22:35,570
that's the idea of automation so you

486
00:22:33,799 --> 00:22:37,580
just need to know your environment I'm

487
00:22:35,570 --> 00:22:39,980
sure every environment is different and

488
00:22:37,580 --> 00:22:42,110
you need to do an alarm is not done like

489
00:22:39,980 --> 00:22:43,879
okay have this query I'm just gonna

490
00:22:42,110 --> 00:22:46,789
enable it you need to work on it and

491
00:22:43,879 --> 00:22:50,959
tweak it until it's perfect hope that

492
00:22:46,789 --> 00:22:53,899
answers your question question here

493
00:22:50,960 --> 00:22:56,960
thank you I wish to ask you which kind

494
00:22:53,899 --> 00:22:59,209
of our benchmarks or frameworks you are

495
00:22:56,960 --> 00:23:02,450
trying to achieve then Google or in King

496
00:22:59,210 --> 00:23:04,639
or is that something that is homemade by

497
00:23:02,450 --> 00:23:06,860
you or your team of security engineers

498
00:23:04,639 --> 00:23:08,240
or you're trying to which kind of level

499
00:23:06,860 --> 00:23:10,158
you are giving to the tools that you

500
00:23:08,240 --> 00:23:11,360
have in Google Cloud or external tools

501
00:23:10,159 --> 00:23:17,480
in order to achieve this compliance

502
00:23:11,360 --> 00:23:19,639
level I mean you as an example says I

503
00:23:17,480 --> 00:23:21,049
mean you have been using products in

504
00:23:19,639 --> 00:23:23,209
Google Cloud in order to automate that

505
00:23:21,049 --> 00:23:25,100
stuff right yes but which kind of lever

506
00:23:23,210 --> 00:23:27,889
presento you are trying to achieve see

507
00:23:25,100 --> 00:23:29,750
is benchmarks some kind of compliance

508
00:23:27,889 --> 00:23:33,080
level on that sense where you're doing

509
00:23:29,750 --> 00:23:35,480
an Inc at King in your own team some

510
00:23:33,080 --> 00:23:37,279
kind of framework another that I can

511
00:23:35,480 --> 00:23:39,110
help you know the touch of this okay I

512
00:23:37,279 --> 00:23:41,750
see what you're saying what I was

513
00:23:39,110 --> 00:23:44,928
showing here was just a point of

514
00:23:41,750 --> 00:23:48,230
starting so just a way of a security of

515
00:23:44,929 --> 00:23:50,600
a company to leverage those logs and

516
00:23:48,230 --> 00:23:52,639
have this control by the fact that they

517
00:23:50,600 --> 00:23:54,408
follow a framework or another when

518
00:23:52,639 --> 00:23:56,719
they're enforcing controls because this

519
00:23:54,409 --> 00:23:56,930
is just a reactive detection part that

520
00:23:56,720 --> 00:23:59,270
it

521
00:23:56,930 --> 00:24:02,690
in every company we also have our types

522
00:23:59,270 --> 00:24:04,370
of controls that go over this this is

523
00:24:02,690 --> 00:24:07,160
more from a point of view what what you

524
00:24:04,370 --> 00:24:08,840
need when you the first day you start so

525
00:24:07,160 --> 00:24:17,810
I think it's it's more important to be

526
00:24:08,840 --> 00:24:20,300
seen from that point of view yeah if you

527
00:24:17,810 --> 00:24:23,030
have a particular attack or a data

528
00:24:20,300 --> 00:24:25,730
breach are you able to reconstruct the

529
00:24:23,030 --> 00:24:30,410
activity what is the longer attention

530
00:24:25,730 --> 00:24:32,270
and this platform okay so you by default

531
00:24:30,410 --> 00:24:35,540
in stackdriver so you're just using

532
00:24:32,270 --> 00:24:37,790
stackdriver they have 40 days retention

533
00:24:35,540 --> 00:24:40,310
which is not enough then you can export

534
00:24:37,790 --> 00:24:42,500
it to Platt to other platforms for like

535
00:24:40,310 --> 00:24:45,080
bigquery for example or in cold storage

536
00:24:42,500 --> 00:24:48,470
and then you can use whatever retention

537
00:24:45,080 --> 00:24:50,240
you are using in your policies so yes

538
00:24:48,470 --> 00:24:52,490
for stock drivers for today's is just

539
00:24:50,240 --> 00:24:54,350
good for alerting and first incident

540
00:24:52,490 --> 00:24:56,120
response on something that you see but

541
00:24:54,350 --> 00:24:57,860
then you need to you need to export them

542
00:24:56,120 --> 00:25:02,439
somewhere where you can have a longer

543
00:24:57,860 --> 00:25:02,439
storage correctly good question

544
00:25:03,270 --> 00:25:06,369
[Music]

545
00:25:06,580 --> 00:25:10,060
[Applause]

