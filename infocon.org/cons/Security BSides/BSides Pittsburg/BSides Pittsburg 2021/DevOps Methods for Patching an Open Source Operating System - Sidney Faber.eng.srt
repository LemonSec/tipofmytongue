1
00:00:00,240 --> 00:00:03,360
we are ready to kick this thing off um

2
00:00:03,360 --> 00:00:05,440
our first talk today and we also want to

3
00:00:05,440 --> 00:00:07,440
thank all this the

4
00:00:07,440 --> 00:00:09,519
people watching on the live stream so

5
00:00:09,519 --> 00:00:12,480
hello live stream

6
00:00:12,480 --> 00:00:15,360
our first talk today is devops method

7
00:00:15,360 --> 00:00:17,440
for patching open source operating

8
00:00:17,440 --> 00:00:20,720
systems so let's take it away

9
00:00:20,720 --> 00:00:23,920
all right thanks um

10
00:00:23,920 --> 00:00:25,599
can you hear me okay through the through

11
00:00:25,599 --> 00:00:27,519
this mic does that work

12
00:00:27,519 --> 00:00:30,519
hello

13
00:00:32,000 --> 00:00:33,760
how about now

14
00:00:33,760 --> 00:00:35,520
better okay all right

15
00:00:35,520 --> 00:00:38,160
so uh so good morning i can't okay so

16
00:00:38,160 --> 00:00:39,600
we've said thank you like a million

17
00:00:39,600 --> 00:00:41,360
times but honestly can't thank you

18
00:00:41,360 --> 00:00:43,520
enough for actually having a venue like

19
00:00:43,520 --> 00:00:45,840
this is so cool to be in a room with

20
00:00:45,840 --> 00:00:48,960
other people a lot of other people so

21
00:00:48,960 --> 00:00:50,559
thanks a lot

22
00:00:50,559 --> 00:00:53,039
yeah and i know also um i did want to

23
00:00:53,039 --> 00:00:54,879
mention the streaming folks right so

24
00:00:54,879 --> 00:00:56,640
this is being streamed we really

25
00:00:56,640 --> 00:00:58,000
appreciate the folks that are working on

26
00:00:58,000 --> 00:00:58,800
that

27
00:00:58,800 --> 00:01:00,559
um

28
00:01:00,559 --> 00:01:02,399
so i'm going to go ahead and get started

29
00:01:02,399 --> 00:01:04,080
with my talk i want to talk a little bit

30
00:01:04,080 --> 00:01:07,280
about um open source operating system

31
00:01:07,280 --> 00:01:09,920
patches this is something that i kind of

32
00:01:09,920 --> 00:01:11,200
fell into

33
00:01:11,200 --> 00:01:12,960
uh and i think it's

34
00:01:12,960 --> 00:01:14,479
if you're like me

35
00:01:14,479 --> 00:01:17,040
like open source is open source but how

36
00:01:17,040 --> 00:01:19,600
this whole stuff works like it was

37
00:01:19,600 --> 00:01:21,840
really kind of i had to tease it all out

38
00:01:21,840 --> 00:01:23,360
so that's why i wanted to present this

39
00:01:23,360 --> 00:01:25,119
to you let me give you a little bit of

40
00:01:25,119 --> 00:01:27,360
background i've been in in security for

41
00:01:27,360 --> 00:01:29,759
for a number of years um

42
00:01:29,759 --> 00:01:32,960
and uh you know i went through

43
00:01:32,960 --> 00:01:35,600
a number of different positions uh

44
00:01:35,600 --> 00:01:37,280
throughout different parts of the field

45
00:01:37,280 --> 00:01:40,320
ended up as cso one of the fun companies

46
00:01:40,320 --> 00:01:43,280
downtown uh and an opportunity presented

47
00:01:43,280 --> 00:01:45,680
itself for me to join

48
00:01:45,680 --> 00:01:48,399
uh the security team at canonical now

49
00:01:48,399 --> 00:01:50,000
canonical is a company that produces

50
00:01:50,000 --> 00:01:51,280
ubuntu

51
00:01:51,280 --> 00:01:54,479
they had an opening to add security into

52
00:01:54,479 --> 00:01:57,119
the robotic operating operating system

53
00:01:57,119 --> 00:02:00,000
roz so raz is a complete open source

54
00:02:00,000 --> 00:02:02,479
ecosystem that you use for robotics

55
00:02:02,479 --> 00:02:04,399
right and they wanted to improve the

56
00:02:04,399 --> 00:02:07,040
security in there and so on and so on so

57
00:02:07,040 --> 00:02:10,000
it's a really neat opportunity to work

58
00:02:10,000 --> 00:02:13,520
both uh creating and building the ros

59
00:02:13,520 --> 00:02:16,319
security ecosystem while working with

60
00:02:16,319 --> 00:02:19,440
the very mature canonical open source

61
00:02:19,440 --> 00:02:21,680
patching ecosystem so that's kind of

62
00:02:21,680 --> 00:02:23,040
what i'm going to share with you is and

63
00:02:23,040 --> 00:02:24,720
that's that's the ben the twist that

64
00:02:24,720 --> 00:02:27,440
you'll see behind it um

65
00:02:27,440 --> 00:02:29,360
we were putting together extended

66
00:02:29,360 --> 00:02:32,640
security maintenance for raw's an open

67
00:02:32,640 --> 00:02:35,200
source product so how you actually

68
00:02:35,200 --> 00:02:37,920
maintain the product after the open

69
00:02:37,920 --> 00:02:40,239
source community has moved on to the

70
00:02:40,239 --> 00:02:42,080
newer releases and we'll talk more about

71
00:02:42,080 --> 00:02:44,560
kind of how that whole um ecosystem

72
00:02:44,560 --> 00:02:46,480
works right

73
00:02:46,480 --> 00:02:50,080
um so you'll notice um

74
00:02:50,080 --> 00:02:52,560
like we prepared this i was working with

75
00:02:52,560 --> 00:02:54,879
with uh folks on this presentation

76
00:02:54,879 --> 00:02:56,800
because i thought it was really cool uh

77
00:02:56,800 --> 00:02:58,480
and then covet happened so i never got

78
00:02:58,480 --> 00:03:00,400
to give the presentation and then i

79
00:03:00,400 --> 00:03:02,720
changed companies and things you know

80
00:03:02,720 --> 00:03:04,319
whatever i still want to get this out

81
00:03:04,319 --> 00:03:06,080
there so you notice none of my slides

82
00:03:06,080 --> 00:03:08,400
are really branded at all they're very

83
00:03:08,400 --> 00:03:10,319
bland and so on just because i didn't

84
00:03:10,319 --> 00:03:11,760
know what to do with them right so there

85
00:03:11,760 --> 00:03:14,080
you go um

86
00:03:14,080 --> 00:03:16,560
so now i'm with plus consulting so

87
00:03:16,560 --> 00:03:18,640
hopefully i'll see you all around town

88
00:03:18,640 --> 00:03:20,640
um and

89
00:03:20,640 --> 00:03:22,959
yeah so let's let's move on what i plan

90
00:03:22,959 --> 00:03:25,360
to cover today we'll talk a little bit

91
00:03:25,360 --> 00:03:28,640
about how vulnerabilities get triaged uh

92
00:03:28,640 --> 00:03:31,599
in the open source ubuntu world uh we'll

93
00:03:31,599 --> 00:03:33,120
talk about open source and how that

94
00:03:33,120 --> 00:03:34,959
happens what upstream means and what

95
00:03:34,959 --> 00:03:37,360
downstream means and how code actually

96
00:03:37,360 --> 00:03:39,760
flows throughout this ecosystem to end

97
00:03:39,760 --> 00:03:42,400
up in my laptop right

98
00:03:42,400 --> 00:03:44,480
versions and distributions become really

99
00:03:44,480 --> 00:03:46,879
important when we're talking about this

100
00:03:46,879 --> 00:03:50,400
and also this concept of back porting a

101
00:03:50,400 --> 00:03:53,439
patch and back porting software so

102
00:03:53,439 --> 00:03:56,080
if you haven't heard that that'll be

103
00:03:56,080 --> 00:03:58,319
a new thing we'll cover right

104
00:03:58,319 --> 00:04:00,239
so please stop me as we go along this is

105
00:04:00,239 --> 00:04:01,280
the first time i've given this

106
00:04:01,280 --> 00:04:04,080
presentation end to end so it i i may

107
00:04:04,080 --> 00:04:06,000
not cover everything in enough detail so

108
00:04:06,000 --> 00:04:08,319
if you get confused just let me know all

109
00:04:08,319 --> 00:04:09,599
right

110
00:04:09,599 --> 00:04:10,560
so

111
00:04:10,560 --> 00:04:12,720
we're going to start with where the

112
00:04:12,720 --> 00:04:16,560
security team starts out at in canonical

113
00:04:16,560 --> 00:04:18,720
which is to patch

114
00:04:18,720 --> 00:04:21,759
ubuntu right ubuntu is just a collection

115
00:04:21,759 --> 00:04:24,400
of a lot of open source software so

116
00:04:24,400 --> 00:04:25,840
where do we begin

117
00:04:25,840 --> 00:04:30,160
uh and where we begin is at the cves

118
00:04:30,160 --> 00:04:34,000
right so we mine the cdes to take a look

119
00:04:34,000 --> 00:04:35,680
at what's changed there's probably about

120
00:04:35,680 --> 00:04:37,280
150

121
00:04:37,280 --> 00:04:39,840
usually less than 200 changes per week

122
00:04:39,840 --> 00:04:41,680
right so they go in and they get you get

123
00:04:41,680 --> 00:04:44,240
eyeballs on them to see if they apply um

124
00:04:44,240 --> 00:04:45,680
the interesting thing if you didn't

125
00:04:45,680 --> 00:04:47,120
realize it

126
00:04:47,120 --> 00:04:51,040
is that cves are all on github

127
00:04:51,040 --> 00:04:53,040
i i thought that was pretty cool right

128
00:04:53,040 --> 00:04:54,960
so if you want to do this you can go

129
00:04:54,960 --> 00:04:57,759
right ahead you can go in and get your

130
00:04:57,759 --> 00:05:01,280
cves from 2021 you can watch any changes

131
00:05:01,280 --> 00:05:03,280
that anybody's updated

132
00:05:03,280 --> 00:05:05,600
all the details are there

133
00:05:05,600 --> 00:05:07,840
and they're in json format so you can

134
00:05:07,840 --> 00:05:09,440
parse them out you can have your own

135
00:05:09,440 --> 00:05:11,919
copy on your own laptop all right

136
00:05:11,919 --> 00:05:13,680
so we'll take a look at those we'll pull

137
00:05:13,680 --> 00:05:15,440
down any of the changes and evaluate

138
00:05:15,440 --> 00:05:18,080
them to see if there's anything first of

139
00:05:18,080 --> 00:05:21,039
all that applies to the ubuntu open

140
00:05:21,039 --> 00:05:22,880
source ecosystem

141
00:05:22,880 --> 00:05:26,160
all right uh and then if it does apply

142
00:05:26,160 --> 00:05:28,960
then let's take a look at it and see how

143
00:05:28,960 --> 00:05:30,639
important it is

144
00:05:30,639 --> 00:05:32,240
right

145
00:05:32,240 --> 00:05:34,960
so you do an actual risk assessment

146
00:05:34,960 --> 00:05:37,360
has anybody here ever done decision

147
00:05:37,360 --> 00:05:40,240
making based off of cvss scores for a

148
00:05:40,240 --> 00:05:42,320
cve

149
00:05:42,320 --> 00:05:44,880
have you been successful

150
00:05:44,880 --> 00:05:45,680
yeah

151
00:05:45,680 --> 00:05:47,520
yeah it's kind of like it's a place to

152
00:05:47,520 --> 00:05:48,720
start

153
00:05:48,720 --> 00:05:51,360
but you know cvss scores have their

154
00:05:51,360 --> 00:05:53,919
challenges because everybody's different

155
00:05:53,919 --> 00:05:56,160
and so on so we do the same thing with

156
00:05:56,160 --> 00:05:57,919
with ubuntu right

157
00:05:57,919 --> 00:06:00,880
so you'll get a high rank cvss score on

158
00:06:00,880 --> 00:06:02,880
the cve you got to assess it and you

159
00:06:02,880 --> 00:06:04,400
realize oh well

160
00:06:04,400 --> 00:06:06,479
when ubuntu creates the the code and

161
00:06:06,479 --> 00:06:08,400
they compile it they use a compiler flag

162
00:06:08,400 --> 00:06:10,160
that compiles that vulnerability right

163
00:06:10,160 --> 00:06:12,720
out so we're going to re-rank that as as

164
00:06:12,720 --> 00:06:14,880
low not high because you're not

165
00:06:14,880 --> 00:06:16,800
vulnerable if you're using you know

166
00:06:16,800 --> 00:06:18,960
distributed software from ubuntu right

167
00:06:18,960 --> 00:06:21,440
so all that kind of all fits together

168
00:06:21,440 --> 00:06:23,440
and that's part of the daily routine on

169
00:06:23,440 --> 00:06:25,840
the security team full in cves look and

170
00:06:25,840 --> 00:06:28,319
see what's changed use that to decide

171
00:06:28,319 --> 00:06:29,680
what the workload is going to be what

172
00:06:29,680 --> 00:06:31,360
we're going to work on today what's high

173
00:06:31,360 --> 00:06:33,199
risk what needs to go out to our

174
00:06:33,199 --> 00:06:34,720
customers

175
00:06:34,720 --> 00:06:37,600
all those results end up at this really

176
00:06:37,600 --> 00:06:40,720
cool website that's the ubuntu cve

177
00:06:40,720 --> 00:06:43,360
tracker right and this is our cve

178
00:06:43,360 --> 00:06:45,039
reports

179
00:06:45,039 --> 00:06:46,720
so um

180
00:06:46,720 --> 00:06:49,199
we're going to if you notice here

181
00:06:49,199 --> 00:06:50,400
there's some

182
00:06:50,400 --> 00:06:52,400
some of the most current work

183
00:06:52,400 --> 00:06:54,560
is listed here then some of the recent

184
00:06:54,560 --> 00:06:56,160
changes that are updates that have been

185
00:06:56,160 --> 00:06:58,560
things that have been triaged

186
00:06:58,560 --> 00:07:00,560
um i want to spend a little bit of time

187
00:07:00,560 --> 00:07:02,560
given that you know i got into this in

188
00:07:02,560 --> 00:07:04,639
robotics we're going to look at a

189
00:07:04,639 --> 00:07:07,199
package called opencv

190
00:07:07,199 --> 00:07:09,919
right and so it's just a package we'll

191
00:07:09,919 --> 00:07:11,840
talk about what it is in just a second

192
00:07:11,840 --> 00:07:14,479
uh but if you notice there's 33 cves for

193
00:07:14,479 --> 00:07:17,840
opencv okay

194
00:07:18,560 --> 00:07:22,840
so 33 results 33 cves and it goes from

195
00:07:22,840 --> 00:07:25,280
2019 down

196
00:07:25,280 --> 00:07:27,120
and there's the priority ranking so

197
00:07:27,120 --> 00:07:29,360
that's the manual triage it comes back

198
00:07:29,360 --> 00:07:31,360
and says this is how important this cve

199
00:07:31,360 --> 00:07:33,919
is to ubuntu users and it's got all

200
00:07:33,919 --> 00:07:35,759
these columns about all kinds of

201
00:07:35,759 --> 00:07:37,840
different statuses right things that are

202
00:07:37,840 --> 00:07:39,599
needed things that are not vulnerable

203
00:07:39,599 --> 00:07:41,680
things have been deferred and all that

204
00:07:41,680 --> 00:07:45,280
like that gets confusing rather quickly

205
00:07:45,280 --> 00:07:48,000
right what do i need to do

206
00:07:48,000 --> 00:07:50,400
uh and that's what i want to dig into is

207
00:07:50,400 --> 00:07:52,080
where this chart comes from so that you

208
00:07:52,080 --> 00:07:54,080
can make this this all manageable for

209
00:07:54,080 --> 00:07:56,960
you so this looks really confusing but

210
00:07:56,960 --> 00:07:59,280
to understand what it is

211
00:07:59,280 --> 00:08:01,680
you really have to understand a little

212
00:08:01,680 --> 00:08:03,360
bit about how

213
00:08:03,360 --> 00:08:05,599
ubuntu comes into being and that's what

214
00:08:05,599 --> 00:08:08,240
i want to talk about to understand um

215
00:08:08,240 --> 00:08:10,840
that we're going to look into

216
00:08:10,840 --> 00:08:14,000
um oops sorry

217
00:08:14,000 --> 00:08:16,479
we're going to look into what is going

218
00:08:16,479 --> 00:08:18,639
on with

219
00:08:18,639 --> 00:08:22,160
how ubuntu is created

220
00:08:23,520 --> 00:08:24,879
right so

221
00:08:24,879 --> 00:08:26,479
again we're looking at the opencv

222
00:08:26,479 --> 00:08:28,000
package and i'm going to take one of

223
00:08:28,000 --> 00:08:30,160
these bowls and walk it all the way

224
00:08:30,160 --> 00:08:31,039
through

225
00:08:31,039 --> 00:08:33,360
from the open source patch that's in the

226
00:08:33,360 --> 00:08:35,519
public github repo and bring it all the

227
00:08:35,519 --> 00:08:38,559
way back into an ubuntu distribution all

228
00:08:38,559 --> 00:08:39,440
right

229
00:08:39,440 --> 00:08:42,080
so we're looking at opencv

230
00:08:42,080 --> 00:08:44,959
um have you ever seen pictures like this

231
00:08:44,959 --> 00:08:47,040
right they're really cool you know the

232
00:08:47,040 --> 00:08:49,120
little like the the rectangles that

233
00:08:49,120 --> 00:08:51,680
follow around eyeballs and you know

234
00:08:51,680 --> 00:08:53,760
recognize things in your pictures that's

235
00:08:53,760 --> 00:08:55,760
what opencv does

236
00:08:55,760 --> 00:08:58,399
open computer vision library so this is

237
00:08:58,399 --> 00:09:01,200
a library of software it's not really an

238
00:09:01,200 --> 00:09:03,760
application on its own it's an open

239
00:09:03,760 --> 00:09:06,399
source library that gets included into

240
00:09:06,399 --> 00:09:09,839
other things so it is included in a

241
00:09:09,839 --> 00:09:11,279
number of different products if you're

242
00:09:11,279 --> 00:09:13,519
going to put out a product that has to

243
00:09:13,519 --> 00:09:16,240
do with some sort of image recognition

244
00:09:16,240 --> 00:09:17,839
you're going to pull down a copy of this

245
00:09:17,839 --> 00:09:20,000
open source library and embed it in your

246
00:09:20,000 --> 00:09:22,240
product right so obviously in robotics

247
00:09:22,240 --> 00:09:24,480
we had a copy of it embedded and that's

248
00:09:24,480 --> 00:09:25,839
why i care

249
00:09:25,839 --> 00:09:27,680
about opencv

250
00:09:27,680 --> 00:09:30,240
all right um so here's all the all the

251
00:09:30,240 --> 00:09:32,480
cdes that are related to this

252
00:09:32,480 --> 00:09:34,320
side note the reason why there's so many

253
00:09:34,320 --> 00:09:37,600
cves related to the opencv project is

254
00:09:37,600 --> 00:09:40,399
because they are very active and very

255
00:09:40,399 --> 00:09:42,480
good participants

256
00:09:42,480 --> 00:09:44,399
in securing their software and tracking

257
00:09:44,399 --> 00:09:47,120
them by cves it's not a recognition of

258
00:09:47,120 --> 00:09:49,200
the quality of software sometimes you

259
00:09:49,200 --> 00:09:51,120
think a lot of cves means that it's bad

260
00:09:51,120 --> 00:09:53,440
software not the case these guys are

261
00:09:53,440 --> 00:09:55,600
really good at tracking cves against

262
00:09:55,600 --> 00:09:57,279
their software all right

263
00:09:57,279 --> 00:09:58,640
so again we're going to dig into this

264
00:09:58,640 --> 00:10:04,320
one cv in particular um cv 2019 15 9 39

265
00:10:04,320 --> 00:10:07,440
let's take a look at that

266
00:10:13,120 --> 00:10:16,680
where's my handle

267
00:10:20,320 --> 00:10:22,880
there we go

268
00:10:26,720 --> 00:10:29,519
so this is a cve entry from the mvd

269
00:10:29,519 --> 00:10:31,600
right pretty straightforward there's an

270
00:10:31,600 --> 00:10:32,399
issue

271
00:10:32,399 --> 00:10:35,760
in a divide by zero all right

272
00:10:35,760 --> 00:10:37,600
um

273
00:10:37,600 --> 00:10:39,440
and this is the cve entry that's

274
00:10:39,440 --> 00:10:41,440
originally in you know github that you

275
00:10:41,440 --> 00:10:43,839
can pull down through json and whatnot

276
00:10:43,839 --> 00:10:45,839
all right the nice thing is here

277
00:10:45,839 --> 00:10:47,920
this one actually has references if you

278
00:10:47,920 --> 00:10:49,519
can see them down here

279
00:10:49,519 --> 00:10:52,560
all right it references the issue on

280
00:10:52,560 --> 00:10:54,399
github that first identified this

281
00:10:54,399 --> 00:10:56,640
vulnerability uh and then it even has a

282
00:10:56,640 --> 00:11:01,079
code fix so let's take a look at that

283
00:11:08,079 --> 00:11:10,800
all right so this is the issue

284
00:11:10,800 --> 00:11:12,640
and again this is standard github issue

285
00:11:12,640 --> 00:11:15,120
and this is the way the opencv ecosystem

286
00:11:15,120 --> 00:11:17,360
works you have a bug you file an issue

287
00:11:17,360 --> 00:11:19,040
the issue gets triaged and then it gets

288
00:11:19,040 --> 00:11:21,040
worked on and fixed right

289
00:11:21,040 --> 00:11:22,959
this one if i'm not mistaken i believe

290
00:11:22,959 --> 00:11:25,680
this was the result of a pen test vendor

291
00:11:25,680 --> 00:11:27,440
it might have even been x-force or

292
00:11:27,440 --> 00:11:29,120
something something along those lines

293
00:11:29,120 --> 00:11:30,560
where they were doing a pen test they

294
00:11:30,560 --> 00:11:31,920
recognized

295
00:11:31,920 --> 00:11:34,079
this divide by zero error

296
00:11:34,079 --> 00:11:35,839
and they filed this report they filed

297
00:11:35,839 --> 00:11:37,680
this issue and then they walked away

298
00:11:37,680 --> 00:11:39,519
right they're not the code maintainers

299
00:11:39,519 --> 00:11:41,519
they just identified a vulnerability

300
00:11:41,519 --> 00:11:44,160
nice thing is in this particular one

301
00:11:44,160 --> 00:11:46,000
they gave us a lot of nice information

302
00:11:46,000 --> 00:11:49,519
about it okay so here's a system that's

303
00:11:49,519 --> 00:11:50,320
that's

304
00:11:50,320 --> 00:11:52,240
vulnerable you know the version that's

305
00:11:52,240 --> 00:11:55,680
vulnerable here's some debug information

306
00:11:55,680 --> 00:11:58,399
and then the one other thing that you'll

307
00:11:58,399 --> 00:12:00,240
see is invaluable

308
00:12:00,240 --> 00:12:02,639
is that they also

309
00:12:02,639 --> 00:12:04,560
included

310
00:12:04,560 --> 00:12:06,959
the vulnerability the exploit

311
00:12:06,959 --> 00:12:09,040
all right now this isn't an exploit that

312
00:12:09,040 --> 00:12:10,399
gives you root shell or anything like

313
00:12:10,399 --> 00:12:12,720
that it's just an exploit to say here's

314
00:12:12,720 --> 00:12:14,720
the problem here's a file that you can

315
00:12:14,720 --> 00:12:17,760
use to run against this piece of code to

316
00:12:17,760 --> 00:12:20,639
reproduce my problem right and as you'll

317
00:12:20,639 --> 00:12:22,720
see throughout the whole process that

318
00:12:22,720 --> 00:12:25,040
becomes really handy right

319
00:12:25,040 --> 00:12:27,760
all right so any questions about that

320
00:12:27,760 --> 00:12:29,519
okay so now we've got a vulnerability

321
00:12:29,519 --> 00:12:32,959
that was identified by someone uh and

322
00:12:32,959 --> 00:12:34,959
another thing that goes along with that

323
00:12:34,959 --> 00:12:37,040
is the actual fix

324
00:12:37,040 --> 00:12:39,440
that goes that was used to close this

325
00:12:39,440 --> 00:12:41,680
issue

326
00:12:45,839 --> 00:12:47,920
so the fix itself is also in github

327
00:12:47,920 --> 00:12:50,320
github remembers everything forever

328
00:12:50,320 --> 00:12:53,360
right so um you'll see this is uh the

329
00:12:53,360 --> 00:12:56,160
fix it's been merged uh into production

330
00:12:56,160 --> 00:12:57,440
this is actually a little bit old it's

331
00:12:57,440 --> 00:12:59,760
from 2019. so it's merged into

332
00:12:59,760 --> 00:13:02,399
production uh and also if you see it was

333
00:13:02,399 --> 00:13:03,839
merged into

334
00:13:03,839 --> 00:13:08,160
uh this tag right version 3.4

335
00:13:08,160 --> 00:13:10,399
right and in august and the other thing

336
00:13:10,399 --> 00:13:13,200
is so we actually get to see the code

337
00:13:13,200 --> 00:13:15,600
that was

338
00:13:18,839 --> 00:13:21,120
changed looks like the internet's not

339
00:13:21,120 --> 00:13:23,360
running too fast all right

340
00:13:23,360 --> 00:13:25,680
so here we see the code that was changed

341
00:13:25,680 --> 00:13:28,639
all right so it's in this file right

342
00:13:28,639 --> 00:13:30,720
hog.cpp

343
00:13:30,720 --> 00:13:31,680
all right

344
00:13:31,680 --> 00:13:33,200
and it's pretty straightforward right

345
00:13:33,200 --> 00:13:35,279
okay let's check and assert to make sure

346
00:13:35,279 --> 00:13:38,240
that this variable is not zero check to

347
00:13:38,240 --> 00:13:39,760
see if this is empty check to see if

348
00:13:39,760 --> 00:13:41,440
this is empty all right really

349
00:13:41,440 --> 00:13:43,440
straightforward stuff just checking for

350
00:13:43,440 --> 00:13:46,560
zeros all right so easy fix everything's

351
00:13:46,560 --> 00:13:49,440
good right so where are we now

352
00:13:49,440 --> 00:13:51,360
we've got a vulnerability that was

353
00:13:51,360 --> 00:13:54,320
identified through a cve we've got a an

354
00:13:54,320 --> 00:13:56,079
issue that was logged against the code

355
00:13:56,079 --> 00:13:58,240
and it's been patched so therefore we're

356
00:13:58,240 --> 00:14:00,880
done right

357
00:14:01,040 --> 00:14:03,519
so unfortunately no this is only just

358
00:14:03,519 --> 00:14:05,600
the beginning all right to answer the

359
00:14:05,600 --> 00:14:06,880
question on whether or not you're

360
00:14:06,880 --> 00:14:08,160
patched

361
00:14:08,160 --> 00:14:09,839
you've got to understand a little bit

362
00:14:09,839 --> 00:14:12,720
more about how ubuntu

363
00:14:12,720 --> 00:14:15,120
gets created all right

364
00:14:15,120 --> 00:14:16,959
so let's talk about that for a second

365
00:14:16,959 --> 00:14:19,920
all right an ubuntu release

366
00:14:19,920 --> 00:14:22,959
is a collection of software that works

367
00:14:22,959 --> 00:14:24,639
very well together

368
00:14:24,639 --> 00:14:26,480
right so i take all these different

369
00:14:26,480 --> 00:14:29,040
packages of all different versions that

370
00:14:29,040 --> 00:14:31,519
are all being you know churned and

371
00:14:31,519 --> 00:14:34,480
created all the time but i take specific

372
00:14:34,480 --> 00:14:36,320
releases of them and put them all

373
00:14:36,320 --> 00:14:39,040
together i test them very heavily and

374
00:14:39,040 --> 00:14:41,040
then make sure that that everything's

375
00:14:41,040 --> 00:14:43,760
nice and stable and that becomes a

376
00:14:43,760 --> 00:14:46,880
release all right ubuntu issues a

377
00:14:46,880 --> 00:14:49,440
release every six months

378
00:14:49,440 --> 00:14:51,519
uh they issue a stable release once

379
00:14:51,519 --> 00:14:54,560
every two years so the interim releases

380
00:14:54,560 --> 00:14:57,600
our interim for testing to get to that

381
00:14:57,600 --> 00:14:59,920
eventually stable release once every two

382
00:14:59,920 --> 00:15:02,560
years right

383
00:15:04,000 --> 00:15:05,920
this release cycle

384
00:15:05,920 --> 00:15:06,720
right

385
00:15:06,720 --> 00:15:10,320
comes from their upstream so uh the

386
00:15:10,320 --> 00:15:12,560
initial load of

387
00:15:12,560 --> 00:15:14,639
software comes from their upstream which

388
00:15:14,639 --> 00:15:16,880
is debian all right so ubuntu is derived

389
00:15:16,880 --> 00:15:18,160
from debian

390
00:15:18,160 --> 00:15:21,680
and it gets added into the ubuntu ci

391
00:15:21,680 --> 00:15:24,240
platform which is launchpad so launchpad

392
00:15:24,240 --> 00:15:26,480
does all the ci work for you it builds

393
00:15:26,480 --> 00:15:29,440
the source code runs the automated tests

394
00:15:29,440 --> 00:15:32,160
uh bundles the binaries up into packages

395
00:15:32,160 --> 00:15:33,600
and gets everything ready for the

396
00:15:33,600 --> 00:15:35,839
distribution you test the packages out

397
00:15:35,839 --> 00:15:37,519
make sure that they again they all work

398
00:15:37,519 --> 00:15:38,800
together

399
00:15:38,800 --> 00:15:41,600
and then that becomes a release

400
00:15:41,600 --> 00:15:43,120
all right

401
00:15:43,120 --> 00:15:45,920
once we have a release and we push out

402
00:15:45,920 --> 00:15:49,040
uh uh particularly a long term lts

403
00:15:49,040 --> 00:15:51,199
stable release

404
00:15:51,199 --> 00:15:53,440
we don't want to change it right so we

405
00:15:53,440 --> 00:15:56,000
don't want to bring in any new code

406
00:15:56,000 --> 00:15:58,959
unless we absolutely have to so version

407
00:15:58,959 --> 00:16:00,959
updates feature creep all that kind of

408
00:16:00,959 --> 00:16:03,040
stuff we don't add that to the old

409
00:16:03,040 --> 00:16:04,639
software because

410
00:16:04,639 --> 00:16:06,240
we want to keep it stable so if you're

411
00:16:06,240 --> 00:16:08,639
running ubuntu 1804 you're going to stay

412
00:16:08,639 --> 00:16:10,720
on 1804 you're not going to get the

413
00:16:10,720 --> 00:16:13,120
updates to open cv if they come out

414
00:16:13,120 --> 00:16:14,720
you're going to stay with the version

415
00:16:14,720 --> 00:16:16,880
that was released all right so in order

416
00:16:16,880 --> 00:16:19,519
to patch ubuntu we've got a patch the

417
00:16:19,519 --> 00:16:22,240
version that was released with that

418
00:16:22,240 --> 00:16:25,120
version of ubuntu right that's a little

419
00:16:25,120 --> 00:16:26,800
bit confusing so let's take a closer

420
00:16:26,800 --> 00:16:29,040
look

421
00:16:32,079 --> 00:16:32,959
so

422
00:16:32,959 --> 00:16:35,279
are you familiar with upstream versus

423
00:16:35,279 --> 00:16:37,279
downstream have you dealt with that in

424
00:16:37,279 --> 00:16:39,759
the open source world right

425
00:16:39,759 --> 00:16:43,120
so upstream produces the source code

426
00:16:43,120 --> 00:16:46,079
downstream consumes the code from

427
00:16:46,079 --> 00:16:48,240
upstream right we're all talking about

428
00:16:48,240 --> 00:16:50,880
source so this is all open source right

429
00:16:50,880 --> 00:16:54,000
opencv as we saw on github

430
00:16:54,000 --> 00:16:56,240
maintains the code base all right so if

431
00:16:56,240 --> 00:16:58,240
you're going to program an opencv you're

432
00:16:58,240 --> 00:16:59,839
going to program through github you're

433
00:16:59,839 --> 00:17:01,279
going to commit to that github

434
00:17:01,279 --> 00:17:03,600
repository how does that make its way to

435
00:17:03,600 --> 00:17:06,559
ubuntu ubuntu it's the downstream and it

436
00:17:06,559 --> 00:17:09,520
consumes the software from

437
00:17:09,520 --> 00:17:11,280
opencv

438
00:17:11,280 --> 00:17:13,839
ubuntu has other downstreams there are a

439
00:17:13,839 --> 00:17:16,559
number of versions of ubuntu that that

440
00:17:16,559 --> 00:17:18,400
are sub versions if you will that are

441
00:17:18,400 --> 00:17:21,919
derived from ubuntu proper

442
00:17:21,919 --> 00:17:24,880
and ubuntu itself is derived from an

443
00:17:24,880 --> 00:17:27,039
upstream as i mentioned ubuntu is

444
00:17:27,039 --> 00:17:30,640
derived from debian all right so opencv

445
00:17:30,640 --> 00:17:34,559
actually pushes its software to debian

446
00:17:34,559 --> 00:17:37,440
and then debian uh the debian it's

447
00:17:37,440 --> 00:17:39,679
actually the unstable branch gets copied

448
00:17:39,679 --> 00:17:42,480
into ubuntu as we start a release

449
00:17:42,480 --> 00:17:46,720
so ubuntu is a derivative of debian

450
00:17:46,720 --> 00:17:47,679
right

451
00:17:47,679 --> 00:17:49,120
this i don't know if you've ever seen

452
00:17:49,120 --> 00:17:51,600
this tree this is this is wikipedia so

453
00:17:51,600 --> 00:17:54,959
it's got to be right right

454
00:17:55,520 --> 00:17:57,440
there's a really cool timeline here that

455
00:17:57,440 --> 00:18:00,160
talks about it's a timeline plus a list

456
00:18:00,160 --> 00:18:02,880
of the derivatives of different variants

457
00:18:02,880 --> 00:18:06,400
of ubuntu and it's amazing if you look

458
00:18:06,400 --> 00:18:07,840
at the whole

459
00:18:07,840 --> 00:18:08,799
tree

460
00:18:08,799 --> 00:18:10,640
of who

461
00:18:10,640 --> 00:18:14,000
comes from what right this is all the

462
00:18:14,000 --> 00:18:17,120
open source upstream downstream tree

463
00:18:17,120 --> 00:18:19,520
for linux all right if you notice we're

464
00:18:19,520 --> 00:18:21,760
talking about ubuntu and we talk a lot

465
00:18:21,760 --> 00:18:24,240
about debian and debian packages

466
00:18:24,240 --> 00:18:26,880
if you look at the genealogy of red hat

467
00:18:26,880 --> 00:18:30,000
it is not the same right red hat doesn't

468
00:18:30,000 --> 00:18:32,240
have an upstream it is its own upstream

469
00:18:32,240 --> 00:18:34,799
it is you know the root source there so

470
00:18:34,799 --> 00:18:37,120
it has a different packaging system and

471
00:18:37,120 --> 00:18:39,520
a different way of taking in the updates

472
00:18:39,520 --> 00:18:42,400
so we're going to talk about

473
00:18:42,400 --> 00:18:45,039
how ubuntu happens a lot of you probably

474
00:18:45,039 --> 00:18:47,280
use

475
00:18:47,280 --> 00:18:49,039
cali linux

476
00:18:49,039 --> 00:18:52,559
do you know who cali's upstream is

477
00:18:53,600 --> 00:18:56,080
debian right yeah so we'll find cali on

478
00:18:56,080 --> 00:18:58,640
this on this chart um and it's upstream

479
00:18:58,640 --> 00:19:00,160
is debian and so

480
00:19:00,160 --> 00:19:04,559
cali will get updates from debian

481
00:19:07,600 --> 00:19:10,320
all right so now opencv is a very active

482
00:19:10,320 --> 00:19:12,400
project right so they're constantly

483
00:19:12,400 --> 00:19:15,120
updating code and and taking in updates

484
00:19:15,120 --> 00:19:17,039
you know there's a lot that's going on

485
00:19:17,039 --> 00:19:19,280
in the computer vision world um a lot of

486
00:19:19,280 --> 00:19:22,080
it is very academic so if you're doing a

487
00:19:22,080 --> 00:19:24,240
thesis and you find a new way to

488
00:19:24,240 --> 00:19:26,559
recognize a new thing in images you're

489
00:19:26,559 --> 00:19:29,360
going to probably commit that code into

490
00:19:29,360 --> 00:19:31,200
the opencv

491
00:19:31,200 --> 00:19:33,440
open source ecosystem and from time to

492
00:19:33,440 --> 00:19:35,200
time

493
00:19:35,200 --> 00:19:38,799
open opencv has got a stamp

494
00:19:38,799 --> 00:19:41,840
code at a certain version uh and tag it

495
00:19:41,840 --> 00:19:44,559
and call it a version all right um and

496
00:19:44,559 --> 00:19:46,400
that's standard software engineering

497
00:19:46,400 --> 00:19:48,480
practices right version three two three

498
00:19:48,480 --> 00:19:49,840
four four

499
00:19:49,840 --> 00:19:53,840
five yeah so on right so it's constantly

500
00:19:53,840 --> 00:19:56,559
churning different versions of opencv

501
00:19:56,559 --> 00:19:58,400
software

502
00:19:58,400 --> 00:20:02,799
every once in a while debian pulls down

503
00:20:02,799 --> 00:20:06,080
the updated code from opencv so they'll

504
00:20:06,080 --> 00:20:08,640
pull down that just simply pull from the

505
00:20:08,640 --> 00:20:09,840
get repo

506
00:20:09,840 --> 00:20:12,559
right through github and bring that into

507
00:20:12,559 --> 00:20:15,120
the debian source tree

508
00:20:15,120 --> 00:20:16,080
right

509
00:20:16,080 --> 00:20:18,480
this actually goes into debian unstable

510
00:20:18,480 --> 00:20:21,840
which is also known as sid

511
00:20:21,840 --> 00:20:24,080
so i feel unstable from time to time

512
00:20:24,080 --> 00:20:26,159
whatever but um so this gets pulled in

513
00:20:26,159 --> 00:20:28,640
from time to time by the debian project

514
00:20:28,640 --> 00:20:30,799
all right and gets pulled into unstable

515
00:20:30,799 --> 00:20:32,960
and unstable gets promoted into testing

516
00:20:32,960 --> 00:20:35,280
and then becomes a debian release all

517
00:20:35,280 --> 00:20:37,840
right ubuntu

518
00:20:37,840 --> 00:20:39,919
follows a very standard cadence as i

519
00:20:39,919 --> 00:20:41,760
mentioned every six months they start a

520
00:20:41,760 --> 00:20:43,919
new release cycle and the release cycle

521
00:20:43,919 --> 00:20:46,240
begins by pulling that whole bundle of

522
00:20:46,240 --> 00:20:49,760
software that exists in debian right in

523
00:20:49,760 --> 00:20:52,080
debian unstable so use that to populate

524
00:20:52,080 --> 00:20:54,080
then we add in some more stuff that

525
00:20:54,080 --> 00:20:56,159
makes ubuntu ubuntu you know some

526
00:20:56,159 --> 00:20:58,400
different desktop different features and

527
00:20:58,400 --> 00:20:59,679
and whatnot

528
00:20:59,679 --> 00:21:01,679
and then compile that all together and

529
00:21:01,679 --> 00:21:04,080
then start the testing for an ubuntu

530
00:21:04,080 --> 00:21:07,360
release that's all that software working

531
00:21:07,360 --> 00:21:10,320
together right what that means

532
00:21:10,320 --> 00:21:14,159
is that the version of opencv

533
00:21:14,159 --> 00:21:16,480
that gets pulled into ubuntu mirrors

534
00:21:16,480 --> 00:21:19,120
what was in debian at the time and it

535
00:21:19,120 --> 00:21:20,960
changes it's not

536
00:21:20,960 --> 00:21:22,640
every release

537
00:21:22,640 --> 00:21:24,240
of opencv

538
00:21:24,240 --> 00:21:26,240
uh and if you want the latest features

539
00:21:26,240 --> 00:21:28,640
of opencv you're not going to get them

540
00:21:28,640 --> 00:21:31,280
every time that you install

541
00:21:31,280 --> 00:21:34,400
ubuntu 1804 you're going to get version

542
00:21:34,400 --> 00:21:36,080
3.2.0

543
00:21:36,080 --> 00:21:37,600
of opencv

544
00:21:37,600 --> 00:21:40,080
if you want something more more

545
00:21:40,080 --> 00:21:41,600
recent then you have to do something

546
00:21:41,600 --> 00:21:43,200
different and you have to install it in

547
00:21:43,200 --> 00:21:44,799
a different way

548
00:21:44,799 --> 00:21:46,960
but also understand if you're gonna you

549
00:21:46,960 --> 00:21:50,080
know upgrade your ubuntu 1804 to version

550
00:21:50,080 --> 00:21:51,120
four

551
00:21:51,120 --> 00:21:53,679
of opencv then

552
00:21:53,679 --> 00:21:55,280
how are all your dependencies going to

553
00:21:55,280 --> 00:21:56,960
work how well is that going to work

554
00:21:56,960 --> 00:21:58,799
together with the whole ecosystem that's

555
00:21:58,799 --> 00:22:00,240
when you find yourself in dependency

556
00:22:00,240 --> 00:22:02,799
hell if you've ever been there right

557
00:22:02,799 --> 00:22:05,039
so this all works together as long as

558
00:22:05,039 --> 00:22:06,799
you can stay with the features and the

559
00:22:06,799 --> 00:22:08,640
features are what you're looking for

560
00:22:08,640 --> 00:22:10,080
quite frankly if you want to use the

561
00:22:10,080 --> 00:22:11,840
latest version then update your

562
00:22:11,840 --> 00:22:14,480
operating system yeah go to the latest

563
00:22:14,480 --> 00:22:15,919
stable release

564
00:22:15,919 --> 00:22:18,080
and things usually work pretty well and

565
00:22:18,080 --> 00:22:20,559
usually opencv keeps an eye on what's

566
00:22:20,559 --> 00:22:22,000
going on with

567
00:22:22,000 --> 00:22:24,080
the debian and the ubuntu universe to

568
00:22:24,080 --> 00:22:26,320
keep things working fairly well that way

569
00:22:26,320 --> 00:22:30,000
right so that's how we get a specific

570
00:22:30,000 --> 00:22:32,880
version of software

571
00:22:32,880 --> 00:22:34,080
into

572
00:22:34,080 --> 00:22:36,720
an ubuntu distribution that's how it

573
00:22:36,720 --> 00:22:38,559
gets picked any questions on that does

574
00:22:38,559 --> 00:22:41,120
that make sense

575
00:22:41,120 --> 00:22:44,240
or am i getting blank stares

576
00:22:44,240 --> 00:22:47,200
we're good okay

577
00:22:47,200 --> 00:22:49,520
all right so another interesting facet

578
00:22:49,520 --> 00:22:50,880
of this

579
00:22:50,880 --> 00:22:52,159
is that

580
00:22:52,159 --> 00:22:54,480
you've heard about building from source

581
00:22:54,480 --> 00:22:56,480
you know you can download the tarball

582
00:22:56,480 --> 00:22:59,039
and you know make it and and make

583
00:22:59,039 --> 00:23:02,960
install it right um or or do whatever

584
00:23:02,960 --> 00:23:04,880
from source right

585
00:23:04,880 --> 00:23:07,360
if you install from source you are going

586
00:23:07,360 --> 00:23:08,640
to get

587
00:23:08,640 --> 00:23:10,159
the latest version

588
00:23:10,159 --> 00:23:10,960
right

589
00:23:10,960 --> 00:23:12,960
um and so if you want to keep track and

590
00:23:12,960 --> 00:23:14,799
you're doing in active development

591
00:23:14,799 --> 00:23:16,880
that's probably what you want to do

592
00:23:16,880 --> 00:23:20,000
right but if you want the stable release

593
00:23:20,000 --> 00:23:22,799
that you get through using the apt

594
00:23:22,799 --> 00:23:24,799
toolkits and the standard updates and

595
00:23:24,799 --> 00:23:27,120
and everything that's built into ubuntu

596
00:23:27,120 --> 00:23:28,880
proper you're going to get this version

597
00:23:28,880 --> 00:23:31,679
if you're on running version 2004 you're

598
00:23:31,679 --> 00:23:34,159
going to get version 4.2.0

599
00:23:34,159 --> 00:23:37,840
of opencv okay

600
00:23:37,919 --> 00:23:40,880
this has an interesting takeaway

601
00:23:40,880 --> 00:23:42,960
all right so we'll take a side note here

602
00:23:42,960 --> 00:23:44,880
uh based on what we've talked about so

603
00:23:44,880 --> 00:23:45,840
far

604
00:23:45,840 --> 00:23:46,720
um

605
00:23:46,720 --> 00:23:47,760
is that

606
00:23:47,760 --> 00:23:50,080
we're talking about in this talk about

607
00:23:50,080 --> 00:23:53,279
how you update ubuntu packages

608
00:23:53,279 --> 00:23:55,039
all right how you get those automatic

609
00:23:55,039 --> 00:23:57,360
updates when you have automatic updates

610
00:23:57,360 --> 00:23:59,440
enabled and software's coming down

611
00:23:59,440 --> 00:24:00,799
you're automatically installing the

612
00:24:00,799 --> 00:24:02,480
updates everything's good everything's

613
00:24:02,480 --> 00:24:05,360
working together but that may not work

614
00:24:05,360 --> 00:24:07,440
because you need the latest releases of

615
00:24:07,440 --> 00:24:10,320
the software right so if you're not

616
00:24:10,320 --> 00:24:12,720
using the ubuntu you know standard

617
00:24:12,720 --> 00:24:14,720
distributions and updates

618
00:24:14,720 --> 00:24:17,039
if you're building from source

619
00:24:17,039 --> 00:24:19,520
then you're not going to get the updates

620
00:24:19,520 --> 00:24:20,960
that we're talking about we're not going

621
00:24:20,960 --> 00:24:22,480
to get the patches that i'm talking

622
00:24:22,480 --> 00:24:25,200
about right if you want an update from

623
00:24:25,200 --> 00:24:26,159
source

624
00:24:26,159 --> 00:24:28,640
then you have to download the updated

625
00:24:28,640 --> 00:24:30,400
source and rebuild it right so if you're

626
00:24:30,400 --> 00:24:33,600
installing from source recognize that if

627
00:24:33,600 --> 00:24:35,039
you want to update you're installing

628
00:24:35,039 --> 00:24:36,559
from source or you're building from

629
00:24:36,559 --> 00:24:38,320
source you've got to do it yourself all

630
00:24:38,320 --> 00:24:40,240
right so if there's a security patch or

631
00:24:40,240 --> 00:24:42,159
anything like that you've got to do that

632
00:24:42,159 --> 00:24:44,159
hopefully you already knew that you

633
00:24:44,159 --> 00:24:45,600
already knew that if you're going to

634
00:24:45,600 --> 00:24:47,200
build from source

635
00:24:47,200 --> 00:24:49,360
that you know you've got to maintain it

636
00:24:49,360 --> 00:24:50,880
yourself and that's a manual type of

637
00:24:50,880 --> 00:24:51,840
thing

638
00:24:51,840 --> 00:24:53,679
however

639
00:24:53,679 --> 00:24:57,120
this gets really challenging in an open

640
00:24:57,120 --> 00:24:59,440
source ecosystem

641
00:24:59,440 --> 00:25:02,000
if your application providers if the

642
00:25:02,000 --> 00:25:04,480
people that bundle in this software

643
00:25:04,480 --> 00:25:07,279
don't pay close attention to that right

644
00:25:07,279 --> 00:25:09,279
so we mentioned opencv is a bundle of

645
00:25:09,279 --> 00:25:11,440
libraries that are all pulled together

646
00:25:11,440 --> 00:25:14,880
um into into you know a just a standard

647
00:25:14,880 --> 00:25:17,600
set of utility libraries um maybe

648
00:25:17,600 --> 00:25:19,360
there's an application that pulls down

649
00:25:19,360 --> 00:25:21,039
that code and then bundles that code and

650
00:25:21,039 --> 00:25:23,600
releases it right so that application

651
00:25:23,600 --> 00:25:26,480
then um is gonna have to get updated

652
00:25:26,480 --> 00:25:29,039
from time to time and usually they do

653
00:25:29,039 --> 00:25:30,799
right so there's an update from opencv

654
00:25:30,799 --> 00:25:32,880
the application pulls in the update and

655
00:25:32,880 --> 00:25:34,559
then bundles it up and ships it out the

656
00:25:34,559 --> 00:25:35,600
door and you've got an updated

657
00:25:35,600 --> 00:25:37,919
application that's good

658
00:25:37,919 --> 00:25:40,400
sometimes your your vendors will pull

659
00:25:40,400 --> 00:25:43,520
down the open source and they'll vendor

660
00:25:43,520 --> 00:25:46,480
the open source create their own custom

661
00:25:46,480 --> 00:25:49,600
features so they'll modify the source

662
00:25:49,600 --> 00:25:51,120
of opencv

663
00:25:51,120 --> 00:25:52,640
right because they own the source it'll

664
00:25:52,640 --> 00:25:54,320
add some features in add some checks

665
00:25:54,320 --> 00:25:55,679
right into there

666
00:25:55,679 --> 00:25:57,279
they won't commit them back to the

667
00:25:57,279 --> 00:26:00,000
upstream to the original open source

668
00:26:00,000 --> 00:26:01,760
opencv tree

669
00:26:01,760 --> 00:26:02,960
right and if they don't get committed

670
00:26:02,960 --> 00:26:04,159
that means they can't take in the

671
00:26:04,159 --> 00:26:05,600
updates because it'll wipe out any of

672
00:26:05,600 --> 00:26:07,760
the customizations they've changed so a

673
00:26:07,760 --> 00:26:09,840
lot of this gets really icky really

674
00:26:09,840 --> 00:26:11,440
quickly if you're not paying close

675
00:26:11,440 --> 00:26:13,200
attention to what's going on

676
00:26:13,200 --> 00:26:14,640
right so

677
00:26:14,640 --> 00:26:15,840
if you're in the open source world

678
00:26:15,840 --> 00:26:17,039
hopefully you got that if you're not in

679
00:26:17,039 --> 00:26:18,480
the open source world hopefully you

680
00:26:18,480 --> 00:26:20,320
don't have to deal with it okay

681
00:26:20,320 --> 00:26:21,679
so

682
00:26:21,679 --> 00:26:23,919
all right so let's go back to this uh

683
00:26:23,919 --> 00:26:26,799
cve tracker website right so let's see

684
00:26:26,799 --> 00:26:28,960
where we're at right now so we figured

685
00:26:28,960 --> 00:26:31,840
out um that these rows

686
00:26:31,840 --> 00:26:33,919
represent individual vulnerabilities we

687
00:26:33,919 --> 00:26:37,360
knew that right uh then these columns

688
00:26:37,360 --> 00:26:39,520
represent the distributions but also

689
00:26:39,520 --> 00:26:42,240
implied in that is which version of

690
00:26:42,240 --> 00:26:44,960
opencv we're talking about okay so we

691
00:26:44,960 --> 00:26:48,720
saw we looked at 16 18 and 2004

692
00:26:48,720 --> 00:26:50,400
these all have different versions of

693
00:26:50,400 --> 00:26:53,279
opencv all right if you do an apt

694
00:26:53,279 --> 00:26:54,559
upgrade

695
00:26:54,559 --> 00:26:56,559
right you're going to upgrade that

696
00:26:56,559 --> 00:26:59,039
version of opencv and that's what all

697
00:26:59,039 --> 00:27:01,440
this means is that this one's not

698
00:27:01,440 --> 00:27:03,840
vulnerable and this needs an update and

699
00:27:03,840 --> 00:27:05,760
this one's not vulnerable all right

700
00:27:05,760 --> 00:27:09,039
triage the triage process that happened

701
00:27:09,039 --> 00:27:11,440
by the security team said hey we

702
00:27:11,440 --> 00:27:13,919
recognize we actually do need to update

703
00:27:13,919 --> 00:27:17,840
the source code here right

704
00:27:18,320 --> 00:27:20,399
so that's how to kind of understand what

705
00:27:20,399 --> 00:27:22,559
the cve tracker is and how what it means

706
00:27:22,559 --> 00:27:24,799
to you all right

707
00:27:24,799 --> 00:27:25,760
so

708
00:27:25,760 --> 00:27:27,679
just to summarize again where where

709
00:27:27,679 --> 00:27:29,200
we've come from

710
00:27:29,200 --> 00:27:33,039
ubuntu is an entire ecosystem

711
00:27:33,039 --> 00:27:35,360
of software

712
00:27:35,360 --> 00:27:38,240
and a specific snapshot in time the

713
00:27:38,240 --> 00:27:40,559
software is continually evolving but an

714
00:27:40,559 --> 00:27:42,960
ubuntu release takes it out of snapshot

715
00:27:42,960 --> 00:27:45,919
in time make sure it all works together

716
00:27:45,919 --> 00:27:48,159
and you get a stable release and you

717
00:27:48,159 --> 00:27:49,760
want a stable release you don't want any

718
00:27:49,760 --> 00:27:51,279
updates that are going to break your

719
00:27:51,279 --> 00:27:53,760
stability your system right right so to

720
00:27:53,760 --> 00:27:56,080
maximize that stability

721
00:27:56,080 --> 00:27:58,240
they're only going to accept tiny

722
00:27:58,240 --> 00:28:00,559
updates small updates there's a stable

723
00:28:00,559 --> 00:28:02,880
release update process that's documented

724
00:28:02,880 --> 00:28:04,080
the only time we're going to update is

725
00:28:04,080 --> 00:28:06,159
if we got to fix the security flaw or we

726
00:28:06,159 --> 00:28:08,799
have a significant uh you know bug that

727
00:28:08,799 --> 00:28:11,360
impacts uh uh you know software doesn't

728
00:28:11,360 --> 00:28:13,600
doesn't make it work all right so

729
00:28:13,600 --> 00:28:14,960
normally

730
00:28:14,960 --> 00:28:16,880
we're not going to see feature updates

731
00:28:16,880 --> 00:28:18,640
should see that

732
00:28:18,640 --> 00:28:21,760
and also we want to update the software

733
00:28:21,760 --> 00:28:24,559
that was distributed at the time that

734
00:28:24,559 --> 00:28:26,080
release was made

735
00:28:26,080 --> 00:28:27,760
right we're not going to update the

736
00:28:27,760 --> 00:28:29,679
software as it currently exists we've

737
00:28:29,679 --> 00:28:31,520
got to go back in time to do that that

738
00:28:31,520 --> 00:28:33,039
means that the software version that

739
00:28:33,039 --> 00:28:35,360
you're running um

740
00:28:35,360 --> 00:28:37,279
rarely changes as long as you stick with

741
00:28:37,279 --> 00:28:38,880
the operating system you're running

742
00:28:38,880 --> 00:28:41,120
ubuntu 1804 it's going to be supported

743
00:28:41,120 --> 00:28:44,320
for five years um you stick with 1804

744
00:28:44,320 --> 00:28:45,760
and you're good

745
00:28:45,760 --> 00:28:47,279
it's not going to be updated you're not

746
00:28:47,279 --> 00:28:48,640
going to get new features you're going

747
00:28:48,640 --> 00:28:51,360
to be stable all right

748
00:28:51,360 --> 00:28:52,640
so

749
00:28:52,640 --> 00:28:54,720
if we want to fix this vulnerability now

750
00:28:54,720 --> 00:28:57,919
we have to patch multiple versions of

751
00:28:57,919 --> 00:28:59,919
opencv and that's where we're at we got

752
00:28:59,919 --> 00:29:01,919
the source code source code worked for

753
00:29:01,919 --> 00:29:04,640
version 3.4 and that's not what we're

754
00:29:04,640 --> 00:29:06,159
running all right

755
00:29:06,159 --> 00:29:09,039
so again when we looked at the commit

756
00:29:09,039 --> 00:29:11,440
and github to the to the open source

757
00:29:11,440 --> 00:29:14,159
tree um it was to

758
00:29:14,159 --> 00:29:16,720
open cv got published in opencv version

759
00:29:16,720 --> 00:29:18,480
3.4

760
00:29:18,480 --> 00:29:20,720
all right um this is the date again

761
00:29:20,720 --> 00:29:24,000
we're working on 2019

762
00:29:24,000 --> 00:29:25,760
and let me ask you an interesting side

763
00:29:25,760 --> 00:29:27,520
question right

764
00:29:27,520 --> 00:29:31,600
anybody here know what a hog detector is

765
00:29:32,559 --> 00:29:35,279
yeah so like if you're working this do

766
00:29:35,279 --> 00:29:37,520
you have to figure out what that is

767
00:29:37,520 --> 00:29:38,880
right you have to understand the

768
00:29:38,880 --> 00:29:40,399
software how much do you have to figure

769
00:29:40,399 --> 00:29:42,320
out the software in order to figure out

770
00:29:42,320 --> 00:29:44,320
how to bring this patch in because it's

771
00:29:44,320 --> 00:29:46,880
not now you know i'm working for

772
00:29:46,880 --> 00:29:49,360
canonical working for ubuntu not working

773
00:29:49,360 --> 00:29:51,200
for opencv so i don't have all the

774
00:29:51,200 --> 00:29:53,360
context of what all this software does

775
00:29:53,360 --> 00:29:55,440
so how much do i have to actually figure

776
00:29:55,440 --> 00:29:58,000
it out uh in order to do that it's

777
00:29:58,000 --> 00:30:00,000
actually pretty cool

778
00:30:00,000 --> 00:30:02,640
a hog detector is part of that smart

779
00:30:02,640 --> 00:30:04,559
logic that somebody did with the phd and

780
00:30:04,559 --> 00:30:07,360
a couple other phds refined on how they

781
00:30:07,360 --> 00:30:09,200
figure out gradients and images and all

782
00:30:09,200 --> 00:30:11,120
this so really cool stuff and you can

783
00:30:11,120 --> 00:30:13,679
see it's actually being used a lot all

784
00:30:13,679 --> 00:30:15,360
right so that's why we want to fix this

785
00:30:15,360 --> 00:30:17,120
vulnerability or want to take a look at

786
00:30:17,120 --> 00:30:20,279
it right

787
00:30:22,960 --> 00:30:26,720
all right so we took a look at the file

788
00:30:26,720 --> 00:30:28,960
the source code that we got

789
00:30:28,960 --> 00:30:32,880
and we saw that for ubuntu

790
00:30:32,880 --> 00:30:35,200
1804

791
00:30:35,200 --> 00:30:37,679
i am running version 3.2

792
00:30:37,679 --> 00:30:40,080
all right this patch went into version

793
00:30:40,080 --> 00:30:41,600
3.4

794
00:30:41,600 --> 00:30:43,840
so this patch was does not exist in

795
00:30:43,840 --> 00:30:45,760
version 3.2

796
00:30:45,760 --> 00:30:48,559
all right so when i compare it i can see

797
00:30:48,559 --> 00:30:50,399
uh we'll take a look in a second at the

798
00:30:50,399 --> 00:30:52,399
source code i can see that the version

799
00:30:52,399 --> 00:30:55,120
that i have in ubuntu 1804 does not have

800
00:30:55,120 --> 00:30:56,240
this fix

801
00:30:56,240 --> 00:30:58,880
all right um

802
00:30:58,880 --> 00:31:01,360
and uh yeah so that's you gotta have

803
00:31:01,360 --> 00:31:03,600
some c plus plus food to figure that out

804
00:31:03,600 --> 00:31:06,960
if we look at a version at ubuntu 1604

805
00:31:06,960 --> 00:31:07,919
right

806
00:31:07,919 --> 00:31:10,399
that's version 2.4.9

807
00:31:10,399 --> 00:31:13,200
based on at least what the triage said

808
00:31:13,200 --> 00:31:15,840
that's not vulnerable and 2004 is

809
00:31:15,840 --> 00:31:18,159
running version 4.2 which should carry

810
00:31:18,159 --> 00:31:19,600
the fix all the way forward so that

811
00:31:19,600 --> 00:31:21,600
shouldn't be vulnerable either all right

812
00:31:21,600 --> 00:31:23,519
let's look at what this vulnerability

813
00:31:23,519 --> 00:31:27,120
actually is right so um if you're into c

814
00:31:27,120 --> 00:31:29,840
plus c code right you'll get this but

815
00:31:29,840 --> 00:31:32,080
it's pretty straightforward right so we

816
00:31:32,080 --> 00:31:35,120
see over here this is version 3.4 which

817
00:31:35,120 --> 00:31:37,120
is the patch version it has this

818
00:31:37,120 --> 00:31:39,519
assertion up here which is not in

819
00:31:39,519 --> 00:31:41,600
version 3.2

820
00:31:41,600 --> 00:31:43,919
it has an assertion over here it's not

821
00:31:43,919 --> 00:31:47,279
in version 3.2 and some assertions over

822
00:31:47,279 --> 00:31:49,279
here that are not in 3.2 we've got the

823
00:31:49,279 --> 00:31:51,440
source code we saw that way a long time

824
00:31:51,440 --> 00:31:52,880
ago all i have to do is bring that

825
00:31:52,880 --> 00:31:56,399
source code back into version 3.2 and

826
00:31:56,399 --> 00:31:58,960
then issue that update into my ubuntu

827
00:31:58,960 --> 00:32:01,120
update channels and i'm good to go right

828
00:32:01,120 --> 00:32:03,679
now patched pretty straightforward stuff

829
00:32:03,679 --> 00:32:05,120
right

830
00:32:05,120 --> 00:32:07,360
that process of taking something from

831
00:32:07,360 --> 00:32:09,360
version 3.4

832
00:32:09,360 --> 00:32:12,640
and bringing it in backwards into 3.2 is

833
00:32:12,640 --> 00:32:14,960
what's known as back porting and so if

834
00:32:14,960 --> 00:32:16,720
you haven't heard that term before

835
00:32:16,720 --> 00:32:19,440
you're going to be backboarding a patch

836
00:32:19,440 --> 00:32:21,440
all right normally your upstream only

837
00:32:21,440 --> 00:32:23,519
keeps the most current versions updated

838
00:32:23,519 --> 00:32:26,000
maybe a few versions recent but usually

839
00:32:26,000 --> 00:32:29,200
not as long as you know the five to ten

840
00:32:29,200 --> 00:32:31,039
year operating system life size the life

841
00:32:31,039 --> 00:32:32,960
side so that's why you got to back port

842
00:32:32,960 --> 00:32:35,519
the patches all right if we take a look

843
00:32:35,519 --> 00:32:37,360
at version uh

844
00:32:37,360 --> 00:32:40,080
2.4.9

845
00:32:40,080 --> 00:32:42,080
you know this is 3 2 over here on the

846
00:32:42,080 --> 00:32:45,200
left side and 2 4 9 is on the right

847
00:32:45,200 --> 00:32:47,200
the code's not there the code that

848
00:32:47,200 --> 00:32:49,760
causes the problem which is these

849
00:32:49,760 --> 00:32:51,679
i believe it was these two

850
00:32:51,679 --> 00:32:53,600
functions right here

851
00:32:53,600 --> 00:32:56,080
those functions don't exist in the older

852
00:32:56,080 --> 00:32:58,000
code so the older code's not vulnerable

853
00:32:58,000 --> 00:32:59,440
we've done our triage we know that we

854
00:32:59,440 --> 00:33:01,440
don't have to make any updates to the

855
00:33:01,440 --> 00:33:03,120
1604

856
00:33:03,120 --> 00:33:07,200
ubuntu 1604 or version 249 of opencv

857
00:33:07,200 --> 00:33:09,360
right now if i look at version 42 just

858
00:33:09,360 --> 00:33:11,440
for the sake of completeness

859
00:33:11,440 --> 00:33:14,159
i can see all my search ends are copied

860
00:33:14,159 --> 00:33:16,080
over into version

861
00:33:16,080 --> 00:33:18,880
4.2 right so the insertions here are

862
00:33:18,880 --> 00:33:21,039
there and here they're there all right

863
00:33:21,039 --> 00:33:23,600
so we're good we only have to patch that

864
00:33:23,600 --> 00:33:26,000
one version all right so that's going

865
00:33:26,000 --> 00:33:28,480
back to that ubuntu cve tracker you saw

866
00:33:28,480 --> 00:33:31,760
that 1604 is not vulnerable 2004 and

867
00:33:31,760 --> 00:33:34,640
beyond is not vulnerable only 1804 is

868
00:33:34,640 --> 00:33:36,240
vulnerable that's the only patch that we

869
00:33:36,240 --> 00:33:39,840
have to backboard okay

870
00:33:40,240 --> 00:33:41,919
so again looking at it a little bit

871
00:33:41,919 --> 00:33:44,000
graphically we see the same thing here

872
00:33:44,000 --> 00:33:46,000
we're going to take some code changes

873
00:33:46,000 --> 00:33:48,799
that were here in 3.4.0

874
00:33:48,799 --> 00:33:52,640
and bring them back to version 3.2

875
00:33:52,640 --> 00:33:54,240
that's in

876
00:33:54,240 --> 00:33:58,799
bionic right ubuntu bionic 1804.

877
00:34:02,960 --> 00:34:05,679
all right so in order to do this again

878
00:34:05,679 --> 00:34:07,440
you know i stress that again minimal

879
00:34:07,440 --> 00:34:09,839
changes minimal impact to the end user

880
00:34:09,839 --> 00:34:12,239
we want to use the original code

881
00:34:12,239 --> 00:34:14,719
that was published and being open source

882
00:34:14,719 --> 00:34:16,159
that's all available to you so if you

883
00:34:16,159 --> 00:34:18,399
want to start working on patching stuff

884
00:34:18,399 --> 00:34:20,639
you can do that this is the opencv

885
00:34:20,639 --> 00:34:22,639
package in ubuntu

886
00:34:22,639 --> 00:34:25,440
that is on launchpad so launchpad is the

887
00:34:25,440 --> 00:34:27,839
ci cd platform

888
00:34:27,839 --> 00:34:31,119
for ubuntu right so

889
00:34:31,119 --> 00:34:34,079
the package sits here

890
00:34:34,079 --> 00:34:35,280
all right if you notice these are all

891
00:34:35,280 --> 00:34:36,560
the different libraries that get

892
00:34:36,560 --> 00:34:37,918
published with that package there's a

893
00:34:37,918 --> 00:34:39,040
lot of them

894
00:34:39,040 --> 00:34:40,079
here

895
00:34:40,079 --> 00:34:41,679
and then these are all the different

896
00:34:41,679 --> 00:34:43,199
versions

897
00:34:43,199 --> 00:34:44,800
that are distributed with different

898
00:34:44,800 --> 00:34:47,040
releases of ubuntu so this is a whole

899
00:34:47,040 --> 00:34:49,520
pack of genealogy here

900
00:34:49,520 --> 00:34:51,119
and you can see

901
00:34:51,119 --> 00:34:53,440
going all the way back to

902
00:34:53,440 --> 00:34:57,520
trusty xenial bionic focal hair suit so

903
00:34:57,520 --> 00:34:59,359
these are all the different versions

904
00:34:59,359 --> 00:35:01,920
that were released with ubuntu so if i

905
00:35:01,920 --> 00:35:04,320
want to actually get the original source

906
00:35:04,320 --> 00:35:05,680
code

907
00:35:05,680 --> 00:35:08,240
for the original opencv that was pulled

908
00:35:08,240 --> 00:35:10,960
from debian that was pulled from opencv

909
00:35:10,960 --> 00:35:13,200
that was used to create

910
00:35:13,200 --> 00:35:16,560
the original 1804 version of

911
00:35:16,560 --> 00:35:21,119
ubuntu here it is right here right

912
00:35:21,520 --> 00:35:23,680
we're going to take a look at the

913
00:35:23,680 --> 00:35:26,640
current version

914
00:35:27,520 --> 00:35:28,800
here

915
00:35:28,800 --> 00:35:30,960
all right so the current version for

916
00:35:30,960 --> 00:35:32,560
1804

917
00:35:32,560 --> 00:35:34,880
um if you do you know an ap install or

918
00:35:34,880 --> 00:35:36,560
whatever and you get the source code or

919
00:35:36,560 --> 00:35:38,720
you get the binaries it's from this

920
00:35:38,720 --> 00:35:41,200
source package right here's the change

921
00:35:41,200 --> 00:35:44,000
log on it so this is kind of neat um

922
00:35:44,000 --> 00:35:46,400
eduardo was busy eduardo typically

923
00:35:46,400 --> 00:35:48,000
maintains

924
00:35:48,000 --> 00:35:50,160
this opencv

925
00:35:50,160 --> 00:35:52,480
from the ubuntu side all right and you

926
00:35:52,480 --> 00:35:54,640
can see he actually updated

927
00:35:54,640 --> 00:35:57,359
all these cves

928
00:35:57,359 --> 00:35:59,040
is pushing out one update so normally

929
00:35:59,040 --> 00:36:00,240
what happens

930
00:36:00,240 --> 00:36:02,000
is the mediums

931
00:36:02,000 --> 00:36:04,480
you get to them when you get to them

932
00:36:04,480 --> 00:36:07,119
but the highs you get to all of them and

933
00:36:07,119 --> 00:36:08,640
then when you have a high risk

934
00:36:08,640 --> 00:36:10,880
vulnerability for a package like opencv

935
00:36:10,880 --> 00:36:12,480
then you pull in as many of the mediums

936
00:36:12,480 --> 00:36:13,839
as you can you got the patient open

937
00:36:13,839 --> 00:36:15,760
let's pull in all these updates so

938
00:36:15,760 --> 00:36:17,440
there's probably a high risk update in

939
00:36:17,440 --> 00:36:19,440
here somewhere along the way that caused

940
00:36:19,440 --> 00:36:21,760
eduardo to start working on opencv

941
00:36:21,760 --> 00:36:23,760
pulled in took a look at all the cvs

942
00:36:23,760 --> 00:36:25,200
that he could patch

943
00:36:25,200 --> 00:36:27,599
at a time and put them all into this

944
00:36:27,599 --> 00:36:30,079
incremental release right

945
00:36:30,079 --> 00:36:33,200
so that was released in september 2018

946
00:36:33,200 --> 00:36:35,440
our vaults from 2019 which is why it's

947
00:36:35,440 --> 00:36:38,240
not included in here all right

948
00:36:38,240 --> 00:36:40,240
but you can also pull down this specific

949
00:36:40,240 --> 00:36:42,560
tarball if you want and open it up and

950
00:36:42,560 --> 00:36:44,480
take a look at the source and modify the

951
00:36:44,480 --> 00:36:45,359
source

952
00:36:45,359 --> 00:36:46,880
all right and so that's what you do when

953
00:36:46,880 --> 00:36:49,200
you're patching it um you go back and

954
00:36:49,200 --> 00:36:51,680
you you back port that patch so we have

955
00:36:51,680 --> 00:36:53,599
the three floor which is not in the

956
00:36:53,599 --> 00:36:56,000
ubuntu ecosystem we bring that those

957
00:36:56,000 --> 00:36:58,640
updates into the 3-2 version

958
00:36:58,640 --> 00:37:02,640
add them in and that's how i patch in my

959
00:37:02,640 --> 00:37:04,640
source code all right

960
00:37:04,640 --> 00:37:06,720
so again going back to the source code

961
00:37:06,720 --> 00:37:08,079
it's pretty straightforward i know i

962
00:37:08,079 --> 00:37:10,240
have to add this so i just forklift that

963
00:37:10,240 --> 00:37:13,520
over into the 3-2 code add this over add

964
00:37:13,520 --> 00:37:15,119
this over

965
00:37:15,119 --> 00:37:16,800
use a little bit of smarts to make sure

966
00:37:16,800 --> 00:37:18,880
yeah it does do what the vulnerability

967
00:37:18,880 --> 00:37:20,480
you know it's fixing the vulnerability

968
00:37:20,480 --> 00:37:22,880
take a look at it you know it looks good

969
00:37:22,880 --> 00:37:24,800
all right make minimal changes don't

970
00:37:24,800 --> 00:37:26,960
change white space don't add extra stuff

971
00:37:26,960 --> 00:37:30,720
just put it over there um and and i

972
00:37:30,720 --> 00:37:32,400
should be good right so i go ahead and

973
00:37:32,400 --> 00:37:33,839
compile it

974
00:37:33,839 --> 00:37:37,040
and it fails to compile all right so my

975
00:37:37,040 --> 00:37:39,839
back port failed why did it fail

976
00:37:39,839 --> 00:37:42,400
because in version 3 3

977
00:37:42,400 --> 00:37:44,240
they added an empty

978
00:37:44,240 --> 00:37:47,599
method to the size object

979
00:37:47,599 --> 00:37:50,079
all right so now i've got a problem

980
00:37:50,079 --> 00:37:54,079
right so my back port my fix is relying

981
00:37:54,079 --> 00:37:56,480
on something that was added in version 3

982
00:37:56,480 --> 00:37:59,440
3 and used in version 3 4 so if i'm

983
00:37:59,440 --> 00:38:02,400
fixing version 3 2 i can't use the same

984
00:38:02,400 --> 00:38:03,680
fix

985
00:38:03,680 --> 00:38:05,599
right i've got to write some code so

986
00:38:05,599 --> 00:38:07,440
it's not as simple as just lifting the

987
00:38:07,440 --> 00:38:09,760
code you actually have to write it and

988
00:38:09,760 --> 00:38:12,000
and and change it so this is where back

989
00:38:12,000 --> 00:38:13,440
parting becomes kind of challenging

990
00:38:13,440 --> 00:38:14,400
right

991
00:38:14,400 --> 00:38:16,400
this is pretty simple because we're just

992
00:38:16,400 --> 00:38:18,560
backboarding something that's not too

993
00:38:18,560 --> 00:38:20,400
different right it's only probably about

994
00:38:20,400 --> 00:38:21,839
you know six to eight months worth of

995
00:38:21,839 --> 00:38:24,000
development time difference but imagine

996
00:38:24,000 --> 00:38:25,760
if you're backboarding something that's

997
00:38:25,760 --> 00:38:29,040
four years old six years old um it ends

998
00:38:29,040 --> 00:38:31,119
up getting to be kind of challenging

999
00:38:31,119 --> 00:38:33,839
right

1000
00:38:36,240 --> 00:38:39,520
so um i talked with um seth seth is one

1001
00:38:39,520 --> 00:38:41,040
of the guys that works on this team he's

1002
00:38:41,040 --> 00:38:42,960
been doing this for quite a while

1003
00:38:42,960 --> 00:38:44,480
and we're talking about back porting and

1004
00:38:44,480 --> 00:38:47,520
he dropped me a note and he said um

1005
00:38:47,520 --> 00:38:49,839
he gave me this bolded list of problems

1006
00:38:49,839 --> 00:38:52,400
that he runs into from time to time when

1007
00:38:52,400 --> 00:38:54,400
he's back porting patches all right so

1008
00:38:54,400 --> 00:38:57,119
again imagine that we've got a patch

1009
00:38:57,119 --> 00:38:58,480
over here

1010
00:38:58,480 --> 00:39:00,320
from a new version and we bring that

1011
00:39:00,320 --> 00:39:02,079
back to an old version because there's a

1012
00:39:02,079 --> 00:39:03,440
vulnerability in the new version that's

1013
00:39:03,440 --> 00:39:05,040
carried back to the old

1014
00:39:05,040 --> 00:39:06,400
sometimes all you've got to do is clean

1015
00:39:06,400 --> 00:39:08,160
up white space move it over and you're

1016
00:39:08,160 --> 00:39:10,480
good to go all right sometimes the code

1017
00:39:10,480 --> 00:39:12,720
is moved right so i move from one source

1018
00:39:12,720 --> 00:39:14,320
file to another source file so you got

1019
00:39:14,320 --> 00:39:16,720
to track down where the code is and you

1020
00:39:16,720 --> 00:39:18,640
got to start reverse engineering what

1021
00:39:18,640 --> 00:39:21,119
this piece of software does right

1022
00:39:21,119 --> 00:39:23,599
sometimes all the variables got renamed

1023
00:39:23,599 --> 00:39:26,240
so i forklift my code but it's working

1024
00:39:26,240 --> 00:39:27,920
on variables that don't exist in the

1025
00:39:27,920 --> 00:39:29,599
older version and you got to tease all

1026
00:39:29,599 --> 00:39:31,839
that out all right

1027
00:39:31,839 --> 00:39:33,520
sometimes as we saw here the patch

1028
00:39:33,520 --> 00:39:35,599
depends on macros or functions or

1029
00:39:35,599 --> 00:39:37,920
methods that don't exist in the older

1030
00:39:37,920 --> 00:39:40,320
code so you have to rewrite things you

1031
00:39:40,320 --> 00:39:42,880
can't just forklift that method back

1032
00:39:42,880 --> 00:39:44,640
over because then it's not going to be

1033
00:39:44,640 --> 00:39:47,280
compatible right and that goes um to

1034
00:39:47,280 --> 00:39:50,720
another point which on my next slide but

1035
00:39:50,720 --> 00:39:53,680
it has to remain the binaries have to

1036
00:39:53,680 --> 00:39:55,920
remain compatible so if you do any

1037
00:39:55,920 --> 00:39:57,680
reverse engineering you probably know

1038
00:39:57,680 --> 00:39:59,599
that you know you enter into a function

1039
00:39:59,599 --> 00:40:01,440
with a structure it's a specific

1040
00:40:01,440 --> 00:40:02,800
structure right

1041
00:40:02,800 --> 00:40:05,040
if your patch is going to change that

1042
00:40:05,040 --> 00:40:07,359
structure of how you call a function

1043
00:40:07,359 --> 00:40:09,280
it's not going to be compatible

1044
00:40:09,280 --> 00:40:10,960
everybody that depends on that header

1045
00:40:10,960 --> 00:40:13,760
has to recompile that that piece of code

1046
00:40:13,760 --> 00:40:16,079
gets to be a a

1047
00:40:16,079 --> 00:40:18,319
yeah a nightmare so you usually don't

1048
00:40:18,319 --> 00:40:20,160
make anything that's not compatible in

1049
00:40:20,160 --> 00:40:22,560
that way right sometimes the code was

1050
00:40:22,560 --> 00:40:24,640
completely rewritten

1051
00:40:24,640 --> 00:40:26,079
and then you have to figure out whether

1052
00:40:26,079 --> 00:40:29,040
the ball exists in the old code or not

1053
00:40:29,040 --> 00:40:31,040
and then it gets into some more reverse

1054
00:40:31,040 --> 00:40:33,359
engineering the code and so on

1055
00:40:33,359 --> 00:40:35,599
and also when you're looking at a vol

1056
00:40:35,599 --> 00:40:37,040
how many times have we looked at it and

1057
00:40:37,040 --> 00:40:38,880
we say oh yeah they patched the bowl but

1058
00:40:38,880 --> 00:40:40,960
there's more to it than that and you

1059
00:40:40,960 --> 00:40:43,040
have to patch and patch again so that

1060
00:40:43,040 --> 00:40:44,640
whole idea of the vole being the tip of

1061
00:40:44,640 --> 00:40:46,079
the iceberg becomes

1062
00:40:46,079 --> 00:40:48,160
one of the problems as well

1063
00:40:48,160 --> 00:40:49,839
all right

1064
00:40:49,839 --> 00:40:51,440
so let's assume that we got over all

1065
00:40:51,440 --> 00:40:53,760
that we patched all our code now we've

1066
00:40:53,760 --> 00:40:55,520
got to test it before we push it out

1067
00:40:55,520 --> 00:40:58,079
right so you begin by testing it locally

1068
00:40:58,079 --> 00:40:59,520
and you're testing it against the

1069
00:40:59,520 --> 00:41:02,319
original unpatched you take the vol the

1070
00:41:02,319 --> 00:41:04,560
exploit right so we got an exploit with

1071
00:41:04,560 --> 00:41:06,079
this piece of code so you take the

1072
00:41:06,079 --> 00:41:08,079
exploit you run the exploit against the

1073
00:41:08,079 --> 00:41:10,880
code that the the original code first of

1074
00:41:10,880 --> 00:41:13,359
all to see that yeah it fails and now i

1075
00:41:13,359 --> 00:41:15,040
know how it fails and that's what i got

1076
00:41:15,040 --> 00:41:17,200
to fix and then you run the exploit

1077
00:41:17,200 --> 00:41:19,280
against the patch code to make sure it's

1078
00:41:19,280 --> 00:41:21,440
not exploitable if you don't have an

1079
00:41:21,440 --> 00:41:22,960
exploit then you probably have to create

1080
00:41:22,960 --> 00:41:25,119
one in order to really test to make sure

1081
00:41:25,119 --> 00:41:27,200
that you've patched that vulnerability

1082
00:41:27,200 --> 00:41:28,960
right and then you run all the other

1083
00:41:28,960 --> 00:41:31,920
tests unit tests and so on the opencv

1084
00:41:31,920 --> 00:41:35,680
library is huge um their tests take

1085
00:41:35,680 --> 00:41:38,000
hours to run and there's thousands upon

1086
00:41:38,000 --> 00:41:40,079
thousands of tests unit tests that

1087
00:41:40,079 --> 00:41:42,079
happen in there right

1088
00:41:42,079 --> 00:41:43,920
and then you have to test all the

1089
00:41:43,920 --> 00:41:45,359
different versions right so if i put the

1090
00:41:45,359 --> 00:41:49,280
patch out for ubuntu 1804 plus 2004 plus

1091
00:41:49,280 --> 00:41:51,359
1604 i've got to test all those

1092
00:41:51,359 --> 00:41:52,800
different versions

1093
00:41:52,800 --> 00:41:54,400
um

1094
00:41:54,400 --> 00:41:56,560
and then well if it's python right then

1095
00:41:56,560 --> 00:41:57,920
you got to test against python 2 and

1096
00:41:57,920 --> 00:41:59,680
python 3 because we're talking about

1097
00:41:59,680 --> 00:42:02,400
older systems that support python 2.

1098
00:42:02,400 --> 00:42:04,000
right

1099
00:42:04,000 --> 00:42:05,119
and then you have to test it against

1100
00:42:05,119 --> 00:42:06,480
different architectures right so you

1101
00:42:06,480 --> 00:42:09,520
want to test arm i386 you know and so on

1102
00:42:09,520 --> 00:42:11,040
and so on so you got to do all that

1103
00:42:11,040 --> 00:42:12,640
testing

1104
00:42:12,640 --> 00:42:13,920
and then

1105
00:42:13,920 --> 00:42:16,560
for opencv opencv often ties into

1106
00:42:16,560 --> 00:42:18,720
hardware so you really want to do some

1107
00:42:18,720 --> 00:42:20,480
kind of hardware testing so can you

1108
00:42:20,480 --> 00:42:22,800
emulate the hardware testing and so on

1109
00:42:22,800 --> 00:42:25,200
and so on and

1110
00:42:25,200 --> 00:42:27,119
then you want to kind of test patch

1111
00:42:27,119 --> 00:42:29,119
delivery so you want to put it into a

1112
00:42:29,119 --> 00:42:32,400
mocked up patch delivery system and then

1113
00:42:32,400 --> 00:42:34,480
make sure it gets delivered and gets

1114
00:42:34,480 --> 00:42:37,680
updated and so on and so on and so on

1115
00:42:37,680 --> 00:42:39,200
testing's hard

1116
00:42:39,200 --> 00:42:42,880
right back porting to older versions

1117
00:42:42,880 --> 00:42:44,800
gets really challenging really quickly

1118
00:42:44,800 --> 00:42:46,319
right so when you're back porting to

1119
00:42:46,319 --> 00:42:48,240
older versions you really have to step

1120
00:42:48,240 --> 00:42:50,880
back in time to the way the world was in

1121
00:42:50,880 --> 00:42:52,960
2018

1122
00:42:52,960 --> 00:42:55,760
and then test the patch in 2018. that

1123
00:42:55,760 --> 00:42:59,440
means all the stuff that you use to test

1124
00:42:59,440 --> 00:43:01,920
right anything that's in your ci cd

1125
00:43:01,920 --> 00:43:04,960
pipeline for testing has to be the 2018

1126
00:43:04,960 --> 00:43:06,560
version because imagine if you're

1127
00:43:06,560 --> 00:43:09,359
testing your 2018 code against

1128
00:43:09,359 --> 00:43:12,079
signatures from 2021

1129
00:43:12,079 --> 00:43:14,160
against a new vulnerability or new code

1130
00:43:14,160 --> 00:43:16,720
pattern uh problematic code pattern and

1131
00:43:16,720 --> 00:43:18,720
you find it in your old code or you can

1132
00:43:18,720 --> 00:43:20,560
update your old code

1133
00:43:20,560 --> 00:43:24,960
right so really messy stuff that's why

1134
00:43:24,960 --> 00:43:28,160
it's hard to maintain older operating

1135
00:43:28,160 --> 00:43:30,640
systems and older software right

1136
00:43:30,640 --> 00:43:32,800
um it just gets really challenging back

1137
00:43:32,800 --> 00:43:35,040
porting patches is hard

1138
00:43:35,040 --> 00:43:37,119
hats off to the guys at canonical that

1139
00:43:37,119 --> 00:43:39,440
do this day in and day out i don't know

1140
00:43:39,440 --> 00:43:41,119
how they can keep in their head all

1141
00:43:41,119 --> 00:43:43,359
these different software packages all

1142
00:43:43,359 --> 00:43:45,200
the thousands of packages that make up

1143
00:43:45,200 --> 00:43:46,640
ubuntu

1144
00:43:46,640 --> 00:43:48,480
rip out the high risk vulnerabilities

1145
00:43:48,480 --> 00:43:50,640
and rip them apart and patch them for

1146
00:43:50,640 --> 00:43:53,280
all those just different distributions

1147
00:43:53,280 --> 00:43:55,280
they do extended support as well so

1148
00:43:55,280 --> 00:43:57,359
they're patching all the way back to

1149
00:43:57,359 --> 00:43:59,760
ubuntu that's 10 years old right and

1150
00:43:59,760 --> 00:44:01,359
have to recreate the environment as it

1151
00:44:01,359 --> 00:44:03,920
was 10 years ago and patch that so it

1152
00:44:03,920 --> 00:44:06,560
gets exponentially more complex

1153
00:44:06,560 --> 00:44:08,079
and this is why we put software into

1154
00:44:08,079 --> 00:44:09,599
extended support

1155
00:44:09,599 --> 00:44:11,119
this is why sometimes you have to pay

1156
00:44:11,119 --> 00:44:12,640
for extended support because there's

1157
00:44:12,640 --> 00:44:14,640
just a lot of work

1158
00:44:14,640 --> 00:44:17,040
to make sure this works so hats off

1159
00:44:17,040 --> 00:44:18,800
again to the

1160
00:44:18,800 --> 00:44:21,040
security team at canonical that makes

1161
00:44:21,040 --> 00:44:23,680
all this happen um

1162
00:44:23,680 --> 00:44:25,839
uh this is this is their launch pad

1163
00:44:25,839 --> 00:44:28,880
group right um uh the manager over there

1164
00:44:28,880 --> 00:44:31,440
sean murphy uh sean took over from if

1165
00:44:31,440 --> 00:44:33,280
any you know joe mcmanus he used to be

1166
00:44:33,280 --> 00:44:35,920
here at the sci he used to manage this

1167
00:44:35,920 --> 00:44:38,960
team um and also uh you've got a lot of

1168
00:44:38,960 --> 00:44:40,240
help from these guys and putting this

1169
00:44:40,240 --> 00:44:42,319
presentation together steve bailey

1170
00:44:42,319 --> 00:44:44,800
manages the uh kind of the day-to-day

1171
00:44:44,800 --> 00:44:47,040
work on how this all happens all right

1172
00:44:47,040 --> 00:44:50,640
so um some really really cool stuff that

1173
00:44:50,640 --> 00:44:51,920
happens there

1174
00:44:51,920 --> 00:44:53,599
all right so

1175
00:44:53,599 --> 00:44:55,440
one last thing i want to leave you with

1176
00:44:55,440 --> 00:44:57,680
we've talked about ubuntu and how this

1177
00:44:57,680 --> 00:44:59,839
works and that's hopefully informational

1178
00:44:59,839 --> 00:45:01,920
for you to understand how this works as

1179
00:45:01,920 --> 00:45:03,839
long as you do your automatic updates

1180
00:45:03,839 --> 00:45:05,520
you're good this is the stuff that

1181
00:45:05,520 --> 00:45:07,839
you're getting they're prioritizing i

1182
00:45:07,839 --> 00:45:09,440
feel comfortable they're prioritizing

1183
00:45:09,440 --> 00:45:11,280
things right all right but if your

1184
00:45:11,280 --> 00:45:13,359
software looks like this

1185
00:45:13,359 --> 00:45:15,200
and you're not getting your software

1186
00:45:15,200 --> 00:45:17,440
through a standard apt update it might

1187
00:45:17,440 --> 00:45:19,680
be time to ask how they do their updates

1188
00:45:19,680 --> 00:45:22,400
how do they get their code from upstream

1189
00:45:22,400 --> 00:45:24,000
how do they consume it have they forked

1190
00:45:24,000 --> 00:45:25,839
the code are they maintaining their own

1191
00:45:25,839 --> 00:45:28,079
branches if so are they back porting the

1192
00:45:28,079 --> 00:45:29,920
patches this is the kind of stuff that

1193
00:45:29,920 --> 00:45:31,920
we're working on doing for the robotic

1194
00:45:31,920 --> 00:45:34,400
operating system to maintain that after

1195
00:45:34,400 --> 00:45:36,400
the upstream stopped maintaining it this

1196
00:45:36,400 --> 00:45:38,480
is something that that is you have to be

1197
00:45:38,480 --> 00:45:40,000
very aware of in the open source

1198
00:45:40,000 --> 00:45:41,839
ecosystem

1199
00:45:41,839 --> 00:45:43,760
so i'm going to leave it there

1200
00:45:43,760 --> 00:45:45,760
and see do we have any any questions

1201
00:45:45,760 --> 00:45:49,839
anybody uh have any thoughts yet

1202
00:45:59,040 --> 00:46:01,359
that causes um numbers

1203
00:46:01,359 --> 00:46:06,040
being involved being different um

1204
00:46:17,280 --> 00:46:18,800
yeah so that's a great question so how

1205
00:46:18,800 --> 00:46:20,960
do we get the version numbers right and

1206
00:46:20,960 --> 00:46:23,280
why does that matter is because when you

1207
00:46:23,280 --> 00:46:27,119
do a an apt update and then an apt

1208
00:46:27,119 --> 00:46:29,839
upgrade and look and see what software

1209
00:46:29,839 --> 00:46:32,000
you're going to get down it's all based

1210
00:46:32,000 --> 00:46:33,839
on the version number right so the

1211
00:46:33,839 --> 00:46:35,599
version number has to be bumped up for

1212
00:46:35,599 --> 00:46:38,160
you to get the new software installed

1213
00:46:38,160 --> 00:46:41,119
right so if you're running version 4.2

1214
00:46:41,119 --> 00:46:44,319
and you have an update 3.2.1

1215
00:46:44,319 --> 00:46:46,000
that's not going to be installed because

1216
00:46:46,000 --> 00:46:47,760
it's an older version right but if

1217
00:46:47,760 --> 00:46:49,920
you're running 3.2.1 and you see at

1218
00:46:49,920 --> 00:46:52,720
3.12.2

1219
00:46:52,720 --> 00:46:55,200
you're going to install that right so so

1220
00:46:55,200 --> 00:46:57,119
they there is a standard and i think

1221
00:46:57,119 --> 00:46:58,960
it's documented in their public wiki

1222
00:46:58,960 --> 00:47:01,520
about how they actually number these and

1223
00:47:01,520 --> 00:47:02,960
if you'll see this

1224
00:47:02,960 --> 00:47:04,240
um

1225
00:47:04,240 --> 00:47:06,879
these are number

1226
00:47:07,079 --> 00:47:10,319
3.2.0.dfsg and so on that versioning and

1227
00:47:10,319 --> 00:47:12,720
the way that they number the releases

1228
00:47:12,720 --> 00:47:13,839
make sure

1229
00:47:13,839 --> 00:47:17,680
that you are getting the updated code

1230
00:47:17,680 --> 00:47:20,079
if you have the older code installed so

1231
00:47:20,079 --> 00:47:22,800
if you have version 3.2.0

1232
00:47:22,800 --> 00:47:25,839
we will update it 3.2.0.1

1233
00:47:25,839 --> 00:47:27,440
right so there so the way the version

1234
00:47:27,440 --> 00:47:29,440
numbers happen make sure that you get

1235
00:47:29,440 --> 00:47:33,400
the right code

1236
00:47:39,040 --> 00:47:41,280
so if you do the apt

1237
00:47:41,280 --> 00:47:43,839
info i think the apt info is going to

1238
00:47:43,839 --> 00:47:45,839
give you the whole forget exactly the

1239
00:47:45,839 --> 00:47:47,760
command because i'm stuck in windows now

1240
00:47:47,760 --> 00:47:51,040
with my new job but um the the the

1241
00:47:51,040 --> 00:47:53,520
within one of the apt tool sets

1242
00:47:53,520 --> 00:47:55,760
it'll give you the full description of

1243
00:47:55,760 --> 00:47:58,880
what is installed and what is available

1244
00:47:58,880 --> 00:48:02,960
and actually that comes from

1245
00:48:03,280 --> 00:48:04,880
that comes from information that is

1246
00:48:04,880 --> 00:48:06,559
distributed in this package like it's

1247
00:48:06,559 --> 00:48:08,079
actually just a text file that comes

1248
00:48:08,079 --> 00:48:10,400
with it

1249
00:48:12,480 --> 00:48:15,119
so they should be built into

1250
00:48:15,119 --> 00:48:17,440
the overlay that debian puts on top of

1251
00:48:17,440 --> 00:48:19,200
the code when they package it right and

1252
00:48:19,200 --> 00:48:20,400
then the red hat is going to have a

1253
00:48:20,400 --> 00:48:22,160
different overlay but yeah yeah

1254
00:48:22,160 --> 00:48:24,559
absolutely so versioning is i'll just

1255
00:48:24,559 --> 00:48:26,240
like there's a lot of nuances to

1256
00:48:26,240 --> 00:48:27,839
versioning and versioning is challenging

1257
00:48:27,839 --> 00:48:29,280
but it's also

1258
00:48:29,280 --> 00:48:31,760
algorithmic so very standard you can

1259
00:48:31,760 --> 00:48:34,240
make sure that you get the right one

1260
00:48:34,240 --> 00:48:36,480
there's also the issue of

1261
00:48:36,480 --> 00:48:39,119
this is an open source world

1262
00:48:39,119 --> 00:48:41,520
shouldn't they commit the patch back to

1263
00:48:41,520 --> 00:48:44,240
upstream so if i patch version 3.2

1264
00:48:44,240 --> 00:48:46,160
shouldn't i give that back to the opencv

1265
00:48:46,160 --> 00:48:48,400
community and that is an option for some

1266
00:48:48,400 --> 00:48:50,640
packages although the community has to

1267
00:48:50,640 --> 00:48:53,119
be still supporting 3.

1268
00:48:53,119 --> 00:48:54,800
2. you know the community's not

1269
00:48:54,800 --> 00:48:56,400
supporting 3.2 they're not going to take

1270
00:48:56,400 --> 00:48:59,760
updates to version 3.2 anymore

1271
00:48:59,760 --> 00:49:03,480
so any other questions

1272
00:49:03,599 --> 00:49:05,520
all right so uh

1273
00:49:05,520 --> 00:49:07,920
thanks a lot for uh thanks a lot for

1274
00:49:07,920 --> 00:49:09,359
attending thanks a lot for being here i

1275
00:49:09,359 --> 00:49:11,680
really appreciate it uh oh we got one

1276
00:49:11,680 --> 00:49:14,680
more

1277
00:49:19,200 --> 00:49:22,319
i'm sorry can you say again

1278
00:49:33,040 --> 00:49:36,800
yeah so if you uh under ubuntu advantage

1279
00:49:36,800 --> 00:49:39,119
you're gonna get the support you're

1280
00:49:39,119 --> 00:49:42,640
gonna pull in the updates um the lts

1281
00:49:42,640 --> 00:49:45,359
versions supported for five years under

1282
00:49:45,359 --> 00:49:47,200
ubuntu advantage you get the 10 year

1283
00:49:47,200 --> 00:49:48,720
support so that you can run your

1284
00:49:48,720 --> 00:49:50,800
operating system for 10 years and again

1285
00:49:50,800 --> 00:49:52,559
in the robotics world that was why that

1286
00:49:52,559 --> 00:49:54,079
was so important to us

1287
00:49:54,079 --> 00:49:55,440
because your hardware is going to last

1288
00:49:55,440 --> 00:49:57,280
for 10 years for sure so you want to

1289
00:49:57,280 --> 00:49:58,800
make sure your software will run that

1290
00:49:58,800 --> 00:50:00,000
long as well

1291
00:50:00,000 --> 00:50:01,760
all right so if you've got any more

1292
00:50:01,760 --> 00:50:03,119
questions stop by and see me i'll

1293
00:50:03,119 --> 00:50:05,119
probably be at the plus booth and if you

1294
00:50:05,119 --> 00:50:07,280
stop by we have this uh wearable wire

1295
00:50:07,280 --> 00:50:09,760
shark self-decoding packet capture so

1296
00:50:09,760 --> 00:50:12,240
stop by and grab a t-shirt i love to

1297
00:50:12,240 --> 00:50:14,240
chat more about this so

1298
00:50:14,240 --> 00:50:17,119
that's all i got back to you

1299
00:50:17,119 --> 00:50:19,270
thank you

1300
00:50:19,270 --> 00:50:22,429
[Applause]

