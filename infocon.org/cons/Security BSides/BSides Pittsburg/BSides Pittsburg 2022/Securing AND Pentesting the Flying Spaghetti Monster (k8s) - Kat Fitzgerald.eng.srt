1
00:00:00,960 --> 00:00:04,000
can you switch to my feed does it is it

2
00:00:04,000 --> 00:00:06,240
good

3
00:00:07,440 --> 00:00:11,040
hey all right it works

4
00:00:13,599 --> 00:00:17,920
all right we are going to get started

5
00:00:20,960 --> 00:00:22,960
so those of you that aren't here yet

6
00:00:22,960 --> 00:00:24,880
just let me know when you get here but

7
00:00:24,880 --> 00:00:26,880
we'll just we'll go ahead and continue

8
00:00:26,880 --> 00:00:29,039
from from that point on

9
00:00:29,039 --> 00:00:31,279
um welcome to

10
00:00:31,279 --> 00:00:33,840
securing kubernetes or what i like to

11
00:00:33,840 --> 00:00:34,800
call

12
00:00:34,800 --> 00:00:36,880
the great spaghetti monster the flying

13
00:00:36,880 --> 00:00:40,559
spaghetti monster uh or whatever

14
00:00:40,559 --> 00:00:42,559
friendly little name you have for it i'm

15
00:00:42,559 --> 00:00:45,039
kat fitzgerald um

16
00:00:45,039 --> 00:00:47,520
i have been doing this for a very long

17
00:00:47,520 --> 00:00:49,440
time how many people

18
00:00:49,440 --> 00:00:53,920
go back to defcon 3.

19
00:00:54,239 --> 00:00:57,120
okay i'm gonna leave now because i am

20
00:00:57,120 --> 00:00:58,640
very old

21
00:00:58,640 --> 00:00:59,600
um

22
00:00:59,600 --> 00:01:04,319
wow oh well um yeah i run b-side chicago

23
00:01:04,319 --> 00:01:06,400
i'm also part of the b-sides pittsburgh

24
00:01:06,400 --> 00:01:08,640
team woo-hoo

25
00:01:08,640 --> 00:01:11,200
so yeah i've been doing this stuff since

26
00:01:11,200 --> 00:01:13,280
defcon 3 which is a very very long time

27
00:01:13,280 --> 00:01:15,280
ago

28
00:01:15,280 --> 00:01:18,400
google is a very uh is our premier

29
00:01:18,400 --> 00:01:20,880
sponsor for b-sides pittsburgh if you're

30
00:01:20,880 --> 00:01:22,479
looking

31
00:01:22,479 --> 00:01:25,360
i am hiring i have a very large team at

32
00:01:25,360 --> 00:01:26,880
google so i'm just throwing that out

33
00:01:26,880 --> 00:01:28,400
there

34
00:01:28,400 --> 00:01:30,479
come see me later i'm based out of

35
00:01:30,479 --> 00:01:32,079
seattle

36
00:01:32,079 --> 00:01:34,079
honey pots and refrigerators are

37
00:01:34,079 --> 00:01:36,720
something that i love to play with a lot

38
00:01:36,720 --> 00:01:39,200
especially when it comes to

39
00:01:39,200 --> 00:01:41,280
kubernetes because i use kubernetes for

40
00:01:41,280 --> 00:01:43,840
deploying some of my honey pots

41
00:01:43,840 --> 00:01:46,159
and i love to cook and the reason i put

42
00:01:46,159 --> 00:01:48,799
that up there is just last weekend when

43
00:01:48,799 --> 00:01:49,840
i was

44
00:01:49,840 --> 00:01:50,640
home

45
00:01:50,640 --> 00:01:51,680
i

46
00:01:51,680 --> 00:01:54,079
decided i wanted to put up a new spice

47
00:01:54,079 --> 00:01:56,719
rack in my in my kitchen so what do you

48
00:01:56,719 --> 00:01:59,280
think i don't know is it

49
00:01:59,280 --> 00:02:02,320
pretty cool huh

50
00:02:03,200 --> 00:02:05,759
okay

51
00:02:06,399 --> 00:02:09,440
anyway uh my disclaimer the views and

52
00:02:09,440 --> 00:02:11,680
opinions here are mine and mine alone

53
00:02:11,680 --> 00:02:13,920
have nothing to do with my employer or

54
00:02:13,920 --> 00:02:15,599
current or past

55
00:02:15,599 --> 00:02:18,000
um and anything that i share from the

56
00:02:18,000 --> 00:02:21,680
standpoint of security vulnerabilities

57
00:02:21,680 --> 00:02:23,840
etc please always take them with a grain

58
00:02:23,840 --> 00:02:27,520
of salt do not go and commit crimes only

59
00:02:27,520 --> 00:02:30,480
do things to systems that you have

60
00:02:30,480 --> 00:02:32,160
control over

61
00:02:32,160 --> 00:02:35,440
and you have legal rights to do so

62
00:02:35,440 --> 00:02:39,200
so why are we not here today well i'm

63
00:02:39,200 --> 00:02:41,120
not going to solve all your kubernetes

64
00:02:41,120 --> 00:02:43,599
um security problems that's not going to

65
00:02:43,599 --> 00:02:46,239
happen in 45 minutes

66
00:02:46,239 --> 00:02:48,720
neither will the person and even though

67
00:02:48,720 --> 00:02:51,040
it has crossed out sitting

68
00:02:51,040 --> 00:02:52,560
that's because i never know if i'm going

69
00:02:52,560 --> 00:02:55,200
to give this talk virtually or what it's

70
00:02:55,200 --> 00:02:57,519
going to be but it's so cool to see

71
00:02:57,519 --> 00:02:59,840
people again so welcome all of you back

72
00:02:59,840 --> 00:03:02,840
to besides pittsburgh

73
00:03:02,840 --> 00:03:05,920
and something that i like to say is is

74
00:03:05,920 --> 00:03:08,959
common sense kind of went out the window

75
00:03:08,959 --> 00:03:11,760
a long long time ago uh

76
00:03:11,760 --> 00:03:15,120
part of that is is or that is one of the

77
00:03:15,120 --> 00:03:16,800
problems that we have to deal with we'll

78
00:03:16,800 --> 00:03:19,760
talk about that so why are we really

79
00:03:19,760 --> 00:03:23,120
here well kubernetes for the most part

80
00:03:23,120 --> 00:03:25,599
people are still getting into it it's

81
00:03:25,599 --> 00:03:28,720
still kind of new the reason i say it's

82
00:03:28,720 --> 00:03:30,799
new is because it's always changing and

83
00:03:30,799 --> 00:03:32,799
everybody's still kind of figuring it

84
00:03:32,799 --> 00:03:35,040
out and you never know

85
00:03:35,040 --> 00:03:36,400
but it's fun

86
00:03:36,400 --> 00:03:38,799
and there are very quick and dirty ways

87
00:03:38,799 --> 00:03:41,519
to get up to speed on kubernetes if you

88
00:03:41,519 --> 00:03:43,680
happen to be running ubuntu you can

89
00:03:43,680 --> 00:03:46,080
throw microcase on your system or even

90
00:03:46,080 --> 00:03:48,959
on a mac or pc you can have it up and

91
00:03:48,959 --> 00:03:51,280
running in a matter of five minutes or

92
00:03:51,280 --> 00:03:52,319
so

93
00:03:52,319 --> 00:03:55,519
so think about that containers are not

94
00:03:55,519 --> 00:03:56,480
new

95
00:03:56,480 --> 00:03:59,120
and this is part of the problem

96
00:03:59,120 --> 00:04:02,959
if i were to ask you right now

97
00:04:02,959 --> 00:04:05,519
which is more secure

98
00:04:05,519 --> 00:04:08,560
a virtualized system

99
00:04:08,560 --> 00:04:11,760
or a container based system

100
00:04:11,760 --> 00:04:14,480
what would you say don't answer that but

101
00:04:14,480 --> 00:04:16,320
think about that question

102
00:04:16,320 --> 00:04:17,759
okay

103
00:04:17,759 --> 00:04:20,560
and security is for everyone

104
00:04:20,560 --> 00:04:22,639
i like to say that because i like to get

105
00:04:22,639 --> 00:04:26,479
people interested in doing security and

106
00:04:26,479 --> 00:04:30,080
i lied common sense is required so

107
00:04:30,080 --> 00:04:33,199
please disregard my previous slide

108
00:04:33,199 --> 00:04:34,560
okay

109
00:04:34,560 --> 00:04:36,160
um

110
00:04:36,160 --> 00:04:37,759
something to keep in mind when we talk

111
00:04:37,759 --> 00:04:40,560
about kubernetes most breaches are not

112
00:04:40,560 --> 00:04:42,400
zero day when you look at all the

113
00:04:42,400 --> 00:04:45,120
breaches that we see today

114
00:04:45,120 --> 00:04:47,199
they're not really fancy they're not

115
00:04:47,199 --> 00:04:49,600
caused by these these zero day attacks

116
00:04:49,600 --> 00:04:51,919
and so on most of the breaches don't

117
00:04:51,919 --> 00:04:53,680
come from ooh somebody ran a

118
00:04:53,680 --> 00:04:56,320
vulnerability scanner and figured out

119
00:04:56,320 --> 00:04:58,479
that that there was a problem and then

120
00:04:58,479 --> 00:05:02,160
they broke into me and and so on no most

121
00:05:02,160 --> 00:05:05,840
problems come from configuration issues

122
00:05:05,840 --> 00:05:08,320
and configuration issues when you start

123
00:05:08,320 --> 00:05:10,880
to think about kubernetes

124
00:05:10,880 --> 00:05:14,560
are huge and containers okay a close

125
00:05:14,560 --> 00:05:16,560
second happens to be compromised

126
00:05:16,560 --> 00:05:18,720
credentials

127
00:05:18,720 --> 00:05:20,320
i still

128
00:05:20,320 --> 00:05:23,919
go on github you know once a week or so

129
00:05:23,919 --> 00:05:26,160
and i just search for keywords like

130
00:05:26,160 --> 00:05:28,320
password or root

131
00:05:28,320 --> 00:05:33,360
or aws or token or things like that see

132
00:05:33,360 --> 00:05:36,160
how many occurrences you will find

133
00:05:36,160 --> 00:05:39,440
and then the third trailing um

134
00:05:39,440 --> 00:05:43,919
compromise is over privileged accounts

135
00:05:43,919 --> 00:05:46,240
this is also important if you're going

136
00:05:46,240 --> 00:05:49,680
to be deploying kubernetes in the cloud

137
00:05:49,680 --> 00:05:52,720
i don't care which cloud you do it in

138
00:05:52,720 --> 00:05:55,440
well i do but

139
00:05:55,440 --> 00:05:57,840
no which cloud you do it in it's going

140
00:05:57,840 --> 00:06:00,479
to be a problem because a lot of people

141
00:06:00,479 --> 00:06:01,440
just go

142
00:06:01,440 --> 00:06:03,120
oh wait what are all these i am

143
00:06:03,120 --> 00:06:06,000
permissions what oh gosh you know i

144
00:06:06,000 --> 00:06:08,319
really need to do everything so i'm just

145
00:06:08,319 --> 00:06:12,080
going to give my account everything and

146
00:06:12,080 --> 00:06:14,960
it's like root okay fine

147
00:06:14,960 --> 00:06:17,440
how many people still log in to root on

148
00:06:17,440 --> 00:06:20,080
their linux box and do all their work

149
00:06:20,080 --> 00:06:22,880
all day on route

150
00:06:22,880 --> 00:06:25,840
uh you're all lying

151
00:06:28,000 --> 00:06:30,800
kubernetes really has all three of these

152
00:06:30,800 --> 00:06:33,759
types of events that can cause

153
00:06:33,759 --> 00:06:35,680
incidents so we're going to look at that

154
00:06:35,680 --> 00:06:37,199
as we go

155
00:06:37,199 --> 00:06:38,960
by the way if you haven't figured it out

156
00:06:38,960 --> 00:06:41,759
yet yes i do like cat memes

157
00:06:41,759 --> 00:06:44,720
i don't know why

158
00:06:44,960 --> 00:06:47,440
containers we have to kind of start with

159
00:06:47,440 --> 00:06:50,400
containers before we get into kubernetes

160
00:06:50,400 --> 00:06:54,639
containers are not secure by default

161
00:06:54,639 --> 00:06:57,440
when i do interviews of potential

162
00:06:57,440 --> 00:06:59,120
candidates

163
00:06:59,120 --> 00:07:01,599
i typically will ask the question that i

164
00:07:01,599 --> 00:07:02,479
just

165
00:07:02,479 --> 00:07:04,479
gave you a few minutes ago is a

166
00:07:04,479 --> 00:07:06,160
virtualized system

167
00:07:06,160 --> 00:07:10,080
or a container-based system more secure

168
00:07:10,080 --> 00:07:12,400
and several years ago i asked this

169
00:07:12,400 --> 00:07:14,479
question of a particular candidate and

170
00:07:14,479 --> 00:07:16,880
another company that i was working at

171
00:07:16,880 --> 00:07:20,319
and they swore up and down

172
00:07:20,319 --> 00:07:23,120
that if they took their application that

173
00:07:23,120 --> 00:07:25,120
had vulnerabilities

174
00:07:25,120 --> 00:07:28,400
and they moved it into a container

175
00:07:28,400 --> 00:07:30,400
that the container would fix all the

176
00:07:30,400 --> 00:07:33,360
vulnerabilities of the application

177
00:07:33,360 --> 00:07:35,919
and i kept trying to get them to explain

178
00:07:35,919 --> 00:07:38,720
it to me how it would do this

179
00:07:38,720 --> 00:07:40,560
they went through a very long

180
00:07:40,560 --> 00:07:44,160
explanation which ended up as c the

181
00:07:44,160 --> 00:07:47,520
application is now secure and i was just

182
00:07:47,520 --> 00:07:48,319
like

183
00:07:48,319 --> 00:07:50,560
huh

184
00:07:50,639 --> 00:07:52,560
because containers are not secure by

185
00:07:52,560 --> 00:07:54,560
default and they don't change if you

186
00:07:54,560 --> 00:07:57,680
have an insecure application so please

187
00:07:57,680 --> 00:07:59,919
keep that in mind but

188
00:07:59,919 --> 00:08:01,840
when we work with containers we have

189
00:08:01,840 --> 00:08:04,080
resources think of a container as a

190
00:08:04,080 --> 00:08:05,680
grouping of these resources or a

191
00:08:05,680 --> 00:08:08,800
grouping of stuff stuff equals resources

192
00:08:08,800 --> 00:08:11,599
resources are named spaces

193
00:08:11,599 --> 00:08:14,319
if you do not apply

194
00:08:14,319 --> 00:08:16,160
certain

195
00:08:16,160 --> 00:08:18,800
controls on your namespaces you will

196
00:08:18,800 --> 00:08:22,080
have an insecure container okay

197
00:08:22,080 --> 00:08:24,160
namespaces will contain things like

198
00:08:24,160 --> 00:08:27,520
processes cpus network ports all these

199
00:08:27,520 --> 00:08:29,039
various things

200
00:08:29,039 --> 00:08:31,680
resources can be exploitable

201
00:08:31,680 --> 00:08:33,599
what if you have a container sitting on

202
00:08:33,599 --> 00:08:36,479
a system that has oh i don't know 20

203
00:08:36,479 --> 00:08:40,640
cpus on it and and you know um a hundred

204
00:08:40,640 --> 00:08:42,640
gig of memory something like that but

205
00:08:42,640 --> 00:08:46,320
you don't put any limits on cpu or

206
00:08:46,320 --> 00:08:49,040
memory usage of a container and somebody

207
00:08:49,040 --> 00:08:51,200
either tries to do a denial of service

208
00:08:51,200 --> 00:08:52,880
against that container the the

209
00:08:52,880 --> 00:08:54,399
application in the container

210
00:08:54,399 --> 00:08:56,240
or they actually break into it in some

211
00:08:56,240 --> 00:08:58,560
way well they bring down the whole

212
00:08:58,560 --> 00:09:01,920
bloody container and the system so

213
00:09:01,920 --> 00:09:04,160
always remember that resources are

214
00:09:04,160 --> 00:09:07,360
exploitable so first thing we're going

215
00:09:07,360 --> 00:09:10,080
to start is to look at how we secure the

216
00:09:10,080 --> 00:09:12,480
container we're going to do that with

217
00:09:12,480 --> 00:09:16,399
control groups control groups are limits

218
00:09:16,399 --> 00:09:19,360
so we want to apply limits to these

219
00:09:19,360 --> 00:09:21,200
control groups

220
00:09:21,200 --> 00:09:22,959
come on

221
00:09:22,959 --> 00:09:24,240
there we go

222
00:09:24,240 --> 00:09:27,040
so if we're looking at a container you

223
00:09:27,040 --> 00:09:29,120
know how hard it is to get a cat to do

224
00:09:29,120 --> 00:09:30,480
this

225
00:09:30,480 --> 00:09:33,519
okay that wasn't easy

226
00:09:33,519 --> 00:09:34,839
when you when you think about a

227
00:09:34,839 --> 00:09:37,440
container think about it as a file

228
00:09:37,440 --> 00:09:39,920
system snapshot well where does the file

229
00:09:39,920 --> 00:09:41,360
system come from

230
00:09:41,360 --> 00:09:43,279
oh sure we're just going to do docker

231
00:09:43,279 --> 00:09:44,399
run

232
00:09:44,399 --> 00:09:47,760
and we're going to pull it from wherever

233
00:09:47,760 --> 00:09:49,920
from the internet

234
00:09:49,920 --> 00:09:52,240
how many of you were around

235
00:09:52,240 --> 00:09:54,000
some of you look like you were around

236
00:09:54,000 --> 00:09:57,279
when um docker hub was compromised

237
00:09:57,279 --> 00:10:00,080
and we were pulling compromised images

238
00:10:00,080 --> 00:10:02,000
from docker hub now we have to be

239
00:10:02,000 --> 00:10:04,880
careful there but who's going to decide

240
00:10:04,880 --> 00:10:07,120
where your file system snapshot comes

241
00:10:07,120 --> 00:10:08,079
from

242
00:10:08,079 --> 00:10:11,519
well we probably want to strip it down

243
00:10:11,519 --> 00:10:13,920
and if you've heard of cis benchmarks

244
00:10:13,920 --> 00:10:15,600
which i have the link for it coming up

245
00:10:15,600 --> 00:10:16,880
in a little bit

246
00:10:16,880 --> 00:10:19,519
we want to use the cis benchmarks for

247
00:10:19,519 --> 00:10:21,839
either docker containers container d we

248
00:10:21,839 --> 00:10:23,519
want to strip down

249
00:10:23,519 --> 00:10:25,279
the version of the file system that

250
00:10:25,279 --> 00:10:26,959
we're going to run within our container

251
00:10:26,959 --> 00:10:28,320
that's number one

252
00:10:28,320 --> 00:10:31,360
container isolation okay

253
00:10:31,360 --> 00:10:33,440
we need to do it it's not going to

254
00:10:33,440 --> 00:10:36,240
happen by default so when we look at

255
00:10:36,240 --> 00:10:39,200
this the picture kind of shows us

256
00:10:39,200 --> 00:10:41,440
you know where it all comes from where

257
00:10:41,440 --> 00:10:43,360
we have our name spaces and our

258
00:10:43,360 --> 00:10:46,320
containers and so on

259
00:10:46,320 --> 00:10:49,279
anybody notice if i were going to threat

260
00:10:49,279 --> 00:10:51,600
model this

261
00:10:51,600 --> 00:10:54,240
where's probably

262
00:10:54,240 --> 00:10:57,920
the most dangerous point of attack on

263
00:10:57,920 --> 00:10:59,200
this slide

264
00:10:59,200 --> 00:11:02,959
anybody want to take a stab at it

265
00:11:04,640 --> 00:11:06,959
let's see if this works wait hey there

266
00:11:06,959 --> 00:11:10,720
it is my docker registry right there

267
00:11:10,720 --> 00:11:12,800
because if that registry where i'm

268
00:11:12,800 --> 00:11:15,920
pulling everything gets compromised and

269
00:11:15,920 --> 00:11:18,560
or it is not private and controlled

270
00:11:18,560 --> 00:11:21,360
within my environment no matter what i

271
00:11:21,360 --> 00:11:23,519
do with kubernetes i'm going to be

272
00:11:23,519 --> 00:11:26,720
deploying insecure containers

273
00:11:26,720 --> 00:11:29,040
somebody dropped their watch

274
00:11:29,040 --> 00:11:32,719
okay so keep that in mind

275
00:11:32,800 --> 00:11:35,040
all right container best practices

276
00:11:35,040 --> 00:11:37,040
before we get into before we get into

277
00:11:37,040 --> 00:11:39,920
kubernetes the base image itself i

278
00:11:39,920 --> 00:11:42,640
already said it you need to secure

279
00:11:42,640 --> 00:11:44,320
the repo

280
00:11:44,320 --> 00:11:47,600
so you don't want to be using just some

281
00:11:47,600 --> 00:11:50,079
public repo somewhere sure when you're

282
00:11:50,079 --> 00:11:53,519
playing and learning and so on yeah but

283
00:11:53,519 --> 00:11:58,480
don't be doing it in production also cis

284
00:11:58,480 --> 00:12:02,480
is everybody aware of the cis benchmarks

285
00:12:02,480 --> 00:12:05,680
who isn't who has never heard of cis

286
00:12:05,680 --> 00:12:07,920
and there are some people in here go to

287
00:12:07,920 --> 00:12:10,920
cissecurity.org

288
00:12:11,279 --> 00:12:15,760
cis is the center for internet security

289
00:12:15,760 --> 00:12:18,800
it is an organization pretty much mostly

290
00:12:18,800 --> 00:12:22,000
volunteers and they work on contributing

291
00:12:22,000 --> 00:12:24,880
to the benchmarks for best practices of

292
00:12:24,880 --> 00:12:29,600
security on the cis center you will find

293
00:12:29,600 --> 00:12:31,600
everything from security of basic

294
00:12:31,600 --> 00:12:34,639
operating systems of containers of

295
00:12:34,639 --> 00:12:36,639
kubernetes

296
00:12:36,639 --> 00:12:38,959
you want to start there you want to

297
00:12:38,959 --> 00:12:41,519
start securing your environment by using

298
00:12:41,519 --> 00:12:43,839
cis benchmarks

299
00:12:43,839 --> 00:12:46,639
in some cases it's difficult to do

300
00:12:46,639 --> 00:12:49,200
because you have to do it manually

301
00:12:49,200 --> 00:12:51,839
unless and i don't work for cis or

302
00:12:51,839 --> 00:12:53,519
anything

303
00:12:53,519 --> 00:12:55,519
you have to pay for a subscription and

304
00:12:55,519 --> 00:12:58,000
you get automated tools that help you do

305
00:12:58,000 --> 00:13:00,959
it in an automated fashion honestly i

306
00:13:00,959 --> 00:13:03,600
just suggest people support it and get a

307
00:13:03,600 --> 00:13:05,360
membership because it does make your

308
00:13:05,360 --> 00:13:06,959
life a lot easier

309
00:13:06,959 --> 00:13:08,560
okay

310
00:13:08,560 --> 00:13:10,800
please keep in mind don't run containers

311
00:13:10,800 --> 00:13:12,399
as root

312
00:13:12,399 --> 00:13:14,560
i still see people doing it when i'm

313
00:13:14,560 --> 00:13:17,440
doing security evaluations of kubernetes

314
00:13:17,440 --> 00:13:19,839
environments or just of containerized

315
00:13:19,839 --> 00:13:22,399
applications i go wow look the container

316
00:13:22,399 --> 00:13:25,360
is running as root oh joy

317
00:13:25,360 --> 00:13:28,399
this is going to be fun

318
00:13:29,279 --> 00:13:31,200
coming

319
00:13:31,200 --> 00:13:32,880
visibility

320
00:13:32,880 --> 00:13:34,880
think about this

321
00:13:34,880 --> 00:13:36,639
you're gonna you're gonna deploy a

322
00:13:36,639 --> 00:13:39,839
kubernetes cluster it's a kind of a

323
00:13:39,839 --> 00:13:42,800
complex thing has a lot of moving parts

324
00:13:42,800 --> 00:13:45,199
which we'll see in just a second how are

325
00:13:45,199 --> 00:13:48,800
you gonna monitor all of that

326
00:13:48,800 --> 00:13:51,040
there better be ways to do it we'll talk

327
00:13:51,040 --> 00:13:54,319
more about that in a minute

328
00:13:55,839 --> 00:13:58,720
think of it as kind of a domino effect

329
00:13:58,720 --> 00:14:01,360
because what tends to happen

330
00:14:01,360 --> 00:14:03,600
when you're deploying out into a

331
00:14:03,600 --> 00:14:05,600
kubernetes cluster and you're using it

332
00:14:05,600 --> 00:14:07,279
to get

333
00:14:07,279 --> 00:14:09,519
extra stability in your environment so

334
00:14:09,519 --> 00:14:11,920
on or additional

335
00:14:11,920 --> 00:14:15,040
scalability if one of the containers

336
00:14:15,040 --> 00:14:17,600
falls you can pretty much guarantee that

337
00:14:17,600 --> 00:14:18,959
most the containers are going to start

338
00:14:18,959 --> 00:14:21,320
to fall when you're talking about

339
00:14:21,320 --> 00:14:24,720
insecurity why because well you probably

340
00:14:24,720 --> 00:14:26,800
deployed those containers from the same

341
00:14:26,800 --> 00:14:29,760
place you probably used the same file

342
00:14:29,760 --> 00:14:31,839
system snapshot

343
00:14:31,839 --> 00:14:35,600
to make them secure or insecure

344
00:14:35,600 --> 00:14:37,920
okay

345
00:14:38,079 --> 00:14:39,680
privileges

346
00:14:39,680 --> 00:14:41,120
probably

347
00:14:41,120 --> 00:14:43,120
still one of the biggest problems when

348
00:14:43,120 --> 00:14:45,839
it comes to containers why because

349
00:14:45,839 --> 00:14:48,720
people end up putting out

350
00:14:48,720 --> 00:14:51,199
insecure applications that they get

351
00:14:51,199 --> 00:14:53,680
compromised then an attacker once

352
00:14:53,680 --> 00:14:56,399
they're inside they find a

353
00:14:56,399 --> 00:14:58,560
that it was launched via

354
00:14:58,560 --> 00:15:01,839
a username that they can then elevate

355
00:15:01,839 --> 00:15:04,240
privileges well there are very simple

356
00:15:04,240 --> 00:15:06,639
settings in containers

357
00:15:06,639 --> 00:15:11,120
that say basically do not allow any new

358
00:15:11,120 --> 00:15:12,800
elevated privileges and i'll show you

359
00:15:12,800 --> 00:15:14,160
that in a second

360
00:15:14,160 --> 00:15:16,959
secrets management

361
00:15:16,959 --> 00:15:18,160
uh

362
00:15:18,160 --> 00:15:21,360
several years ago i i had some engineers

363
00:15:21,360 --> 00:15:23,760
come to me and they said well you told

364
00:15:23,760 --> 00:15:27,839
us we couldn't um keep our tokens out in

365
00:15:27,839 --> 00:15:29,360
github

366
00:15:29,360 --> 00:15:31,680
can we go ahead and put user names and

367
00:15:31,680 --> 00:15:34,320
passwords in the configuration yaml

368
00:15:34,320 --> 00:15:36,800
files that are out on github

369
00:15:36,800 --> 00:15:39,440
i said wait wait what

370
00:15:39,440 --> 00:15:43,199
no please don't do that

371
00:15:43,199 --> 00:15:45,839
secrets management use vault use

372
00:15:45,839 --> 00:15:46,959
something

373
00:15:46,959 --> 00:15:49,839
and please

374
00:15:50,560 --> 00:15:53,279
when you're doing a kubernetes cluster

375
00:15:53,279 --> 00:15:55,519
and you create some nodes that you're

376
00:15:55,519 --> 00:15:58,480
going to then deploy kubernetes to

377
00:15:58,480 --> 00:15:59,519
stop

378
00:15:59,519 --> 00:16:04,480
allowing ssh into those worker nodes

379
00:16:04,480 --> 00:16:06,480
because if you think about it

380
00:16:06,480 --> 00:16:08,320
i've got a whole bunch of nodes that i'm

381
00:16:08,320 --> 00:16:10,800
now going to deploy kubernetes on

382
00:16:10,800 --> 00:16:14,480
they're set up to allow ssh

383
00:16:14,480 --> 00:16:17,600
you launch kubernetes

384
00:16:17,600 --> 00:16:19,759
and you have monitoring turned on such

385
00:16:19,759 --> 00:16:23,279
as kubernetes dashboard but if i ssh

386
00:16:23,279 --> 00:16:25,920
into the worker node directly your

387
00:16:25,920 --> 00:16:28,320
monitoring doesn't see me

388
00:16:28,320 --> 00:16:30,480
so i could then compromise your

389
00:16:30,480 --> 00:16:31,920
application

390
00:16:31,920 --> 00:16:34,160
and all this fancy monitoring that you

391
00:16:34,160 --> 00:16:37,040
have with kubernetes won't necessarily

392
00:16:37,040 --> 00:16:39,360
see me because i'm kind of running under

393
00:16:39,360 --> 00:16:41,199
the radar a little bit

394
00:16:41,199 --> 00:16:44,240
so once a system is deployed you do not

395
00:16:44,240 --> 00:16:48,000
want ssh on the worker nodes

396
00:16:48,000 --> 00:16:49,440
okay

397
00:16:49,440 --> 00:16:51,759
namespace limits i talked about it a

398
00:16:51,759 --> 00:16:53,680
minute ago we're going to look at some

399
00:16:53,680 --> 00:16:56,399
of these but we want to have them

400
00:16:56,399 --> 00:16:59,519
here is a great tool it's called docker

401
00:16:59,519 --> 00:17:00,560
slim

402
00:17:00,560 --> 00:17:02,880
docker slim will actually take a

403
00:17:02,880 --> 00:17:05,599
container and the application

404
00:17:05,599 --> 00:17:08,160
you run it through docker slim and let's

405
00:17:08,160 --> 00:17:11,359
say a docker container might be oh i

406
00:17:11,359 --> 00:17:14,640
don't know 300 meg when it's deployed

407
00:17:14,640 --> 00:17:16,400
you run it through docker slim you're

408
00:17:16,400 --> 00:17:18,559
going to end up with maybe a 10 meg

409
00:17:18,559 --> 00:17:20,480
image that gets deployed

410
00:17:20,480 --> 00:17:23,439
saves you a lot of wear and tear in your

411
00:17:23,439 --> 00:17:26,880
environment so take a look at this tool

412
00:17:26,880 --> 00:17:29,120
okay

413
00:17:29,840 --> 00:17:30,840
often

414
00:17:30,840 --> 00:17:33,520
overlooked how many people know what se

415
00:17:33,520 --> 00:17:35,200
linux is

416
00:17:35,200 --> 00:17:36,799
how many people

417
00:17:36,799 --> 00:17:39,840
turn it off when they install a new

418
00:17:39,840 --> 00:17:42,240
linux server

419
00:17:42,240 --> 00:17:45,440
oh come on i know all of you do

420
00:17:45,440 --> 00:17:48,480
why because well you turn on se linux

421
00:17:48,480 --> 00:17:50,240
and you start to run applications and

422
00:17:50,240 --> 00:17:52,400
they start to fail they don't run

423
00:17:52,400 --> 00:17:54,559
anymore they can't open ports and things

424
00:17:54,559 --> 00:17:57,200
because sc linux has not been configured

425
00:17:57,200 --> 00:17:58,400
properly

426
00:17:58,400 --> 00:18:01,760
i've asked other um you know sres and

427
00:18:01,760 --> 00:18:03,679
system administrators and so on why do

428
00:18:03,679 --> 00:18:05,919
you keep turning it off and they'll say

429
00:18:05,919 --> 00:18:08,320
because it's hard

430
00:18:08,320 --> 00:18:09,200
well

431
00:18:09,200 --> 00:18:11,840
um take some time learn a little bit

432
00:18:11,840 --> 00:18:13,520
about it learn a little bit about app

433
00:18:13,520 --> 00:18:16,640
armor one or the other but in kubernetes

434
00:18:16,640 --> 00:18:20,160
and in containers you can turn it on

435
00:18:20,160 --> 00:18:23,200
and it will help prevent things such as

436
00:18:23,200 --> 00:18:26,000
privilege escalation remember the number

437
00:18:26,000 --> 00:18:27,200
three

438
00:18:27,200 --> 00:18:30,400
problem with um

439
00:18:30,400 --> 00:18:33,520
config or incidents and remember the

440
00:18:33,520 --> 00:18:35,760
infrastructure this is ding ding ding

441
00:18:35,760 --> 00:18:37,039
for the win

442
00:18:37,039 --> 00:18:39,120
in other words

443
00:18:39,120 --> 00:18:41,600
your if you're deploying on an

444
00:18:41,600 --> 00:18:46,240
environment that is insecure by default

445
00:18:46,240 --> 00:18:48,720
no matter what you do to your kubernetes

446
00:18:48,720 --> 00:18:50,080
cluster

447
00:18:50,080 --> 00:18:52,320
it's still going to be insecure if i

448
00:18:52,320 --> 00:18:55,919
have telnet running on on all my systems

449
00:18:55,919 --> 00:18:58,480
and then i deploy kubernetes on these

450
00:18:58,480 --> 00:18:59,600
systems

451
00:18:59,600 --> 00:19:02,160
well it's not going to be very secure

452
00:19:02,160 --> 00:19:04,960
so please keep that in mind make sure

453
00:19:04,960 --> 00:19:06,559
the operating systems that you're

454
00:19:06,559 --> 00:19:09,120
deploying your kubernetes cluster to

455
00:19:09,120 --> 00:19:12,000
have been configured securely

456
00:19:12,000 --> 00:19:13,120
okay

457
00:19:13,120 --> 00:19:16,080
so here's that picture again uh well not

458
00:19:16,080 --> 00:19:18,480
again here is the picture that describes

459
00:19:18,480 --> 00:19:20,559
the question that i asked a little bit

460
00:19:20,559 --> 00:19:22,160
ago where

461
00:19:22,160 --> 00:19:24,480
which is more secure a virtualized

462
00:19:24,480 --> 00:19:27,919
system or a kubernetes or container

463
00:19:27,919 --> 00:19:31,360
based system well we see in the first

464
00:19:31,360 --> 00:19:33,280
part you know we see oh we've got

465
00:19:33,280 --> 00:19:34,960
hardware we've got an operating system

466
00:19:34,960 --> 00:19:37,280
and then some applications running on it

467
00:19:37,280 --> 00:19:39,840
we now come to a virtualized system we

468
00:19:39,840 --> 00:19:42,480
have a hypervisor level and then we

469
00:19:42,480 --> 00:19:45,760
build virtual machines on top of that

470
00:19:45,760 --> 00:19:48,880
well there is much more isolation

471
00:19:48,880 --> 00:19:50,640
blocking

472
00:19:50,640 --> 00:19:53,760
within a hyper or within a vm based

473
00:19:53,760 --> 00:19:54,799
system

474
00:19:54,799 --> 00:19:57,600
when you go to a container all you've

475
00:19:57,600 --> 00:20:01,039
got a container run time system if i can

476
00:20:01,039 --> 00:20:04,080
compromise this system then i can most

477
00:20:04,080 --> 00:20:07,280
likely get to all of the containers or

478
00:20:07,280 --> 00:20:10,159
if i can compromise a container i can

479
00:20:10,159 --> 00:20:13,679
very possibly get to other containers if

480
00:20:13,679 --> 00:20:15,760
i compromise a vm

481
00:20:15,760 --> 00:20:17,360
does that mean i'm going to get into the

482
00:20:17,360 --> 00:20:20,320
other vm no it's a completely separate

483
00:20:20,320 --> 00:20:22,320
operating system i could be running

484
00:20:22,320 --> 00:20:24,000
linux on one and

485
00:20:24,000 --> 00:20:25,679
windows on another

486
00:20:25,679 --> 00:20:30,240
people still run no never mind um

487
00:20:30,320 --> 00:20:34,880
so the point here is is yeah a vm system

488
00:20:34,880 --> 00:20:37,520
based system is going to be a little bit

489
00:20:37,520 --> 00:20:40,559
more secure assuming that the hypervisor

490
00:20:40,559 --> 00:20:43,440
is secure that that is an issue yes i do

491
00:20:43,440 --> 00:20:45,440
take that into consideration

492
00:20:45,440 --> 00:20:46,720
uh but

493
00:20:46,720 --> 00:20:49,440
i really have a lot more ways to get

494
00:20:49,440 --> 00:20:52,799
into a container based system especially

495
00:20:52,799 --> 00:20:54,400
with kubernetes

496
00:20:54,400 --> 00:20:55,840
okay

497
00:20:55,840 --> 00:20:58,799
i don't know this this came out years

498
00:20:58,799 --> 00:21:01,520
ago but i still think it describes

499
00:21:01,520 --> 00:21:03,039
kubernetes

500
00:21:03,039 --> 00:21:03,760
in

501
00:21:03,760 --> 00:21:06,559
a great way because if we just inundate

502
00:21:06,559 --> 00:21:09,200
them with quarterly kubernetes releases

503
00:21:09,200 --> 00:21:11,440
hell

504
00:21:11,440 --> 00:21:12,640
it's it's

505
00:21:12,640 --> 00:21:14,000
just going to be

506
00:21:14,000 --> 00:21:16,320
you know security god they keep changing

507
00:21:16,320 --> 00:21:18,880
it um but that's what we're gonna do

508
00:21:18,880 --> 00:21:20,320
there are a lot of releases of

509
00:21:20,320 --> 00:21:22,960
kubernetes so let's see how it's gonna

510
00:21:22,960 --> 00:21:24,960
make things interesting

511
00:21:24,960 --> 00:21:27,039
so kubernetes in a nutshell we have a

512
00:21:27,039 --> 00:21:30,159
master node think of that as the manager

513
00:21:30,159 --> 00:21:32,640
of all the things okay

514
00:21:32,640 --> 00:21:35,360
we have worker nodes and remember worker

515
00:21:35,360 --> 00:21:37,679
nodes are going to be the things that we

516
00:21:37,679 --> 00:21:40,720
want to make sure we we keep those very

517
00:21:40,720 --> 00:21:43,200
very secure we don't want them running

518
00:21:43,200 --> 00:21:46,159
extra services underneath the containers

519
00:21:46,159 --> 00:21:48,159
we only want them running

520
00:21:48,159 --> 00:21:50,640
the the parts of kubernetes that it

521
00:21:50,640 --> 00:21:52,159
needs

522
00:21:52,159 --> 00:21:56,240
we have pods pods are a very interesting

523
00:21:56,240 --> 00:21:58,960
concept and they are often overlooked

524
00:21:58,960 --> 00:22:02,320
when it comes to security think of a pod

525
00:22:02,320 --> 00:22:05,120
as an isolation chamber

526
00:22:05,120 --> 00:22:07,760
so i don't want to have a pod that is

527
00:22:07,760 --> 00:22:11,440
running both the web facing application

528
00:22:11,440 --> 00:22:13,919
and the database

529
00:22:13,919 --> 00:22:17,039
that is being controlled by this web

530
00:22:17,039 --> 00:22:20,159
facing application i want to have a pod

531
00:22:20,159 --> 00:22:22,880
that is dedicated to maybe

532
00:22:22,880 --> 00:22:23,919
hmm

533
00:22:23,919 --> 00:22:26,720
oh maybe the web apps and then a pod

534
00:22:26,720 --> 00:22:29,360
that is is controlled for just the

535
00:22:29,360 --> 00:22:31,919
databases or maybe i'll have a pod that

536
00:22:31,919 --> 00:22:35,760
is specific to dev and a pod specific to

537
00:22:35,760 --> 00:22:39,200
qa and a pod specific to production why

538
00:22:39,200 --> 00:22:42,400
because they're isolation realms so i'll

539
00:22:42,400 --> 00:22:45,200
show you that in a second

540
00:22:45,200 --> 00:22:46,480
services

541
00:22:46,480 --> 00:22:48,720
services are all the pieces that we need

542
00:22:48,720 --> 00:22:51,440
to make kubernetes run and then there's

543
00:22:51,440 --> 00:22:52,880
going to be some very

544
00:22:52,880 --> 00:22:55,039
specific main components we're going to

545
00:22:55,039 --> 00:22:56,000
look at

546
00:22:56,000 --> 00:22:58,720
probably the one that we'll talk about

547
00:22:58,720 --> 00:23:02,080
the most at cd right there

548
00:23:02,080 --> 00:23:06,240
it is indeed something that is

549
00:23:06,240 --> 00:23:07,600
overlooked

550
00:23:07,600 --> 00:23:11,120
and often not well protected and that is

551
00:23:11,120 --> 00:23:14,320
the keys to the kingdom when it comes to

552
00:23:14,320 --> 00:23:16,240
kubernetes

553
00:23:16,240 --> 00:23:17,039
so

554
00:23:17,039 --> 00:23:18,960
here's i like to say you know picture is

555
00:23:18,960 --> 00:23:21,120
worth a thousand words and it is in this

556
00:23:21,120 --> 00:23:23,200
case because it takes that previous

557
00:23:23,200 --> 00:23:27,520
slide makes it a little easier to digest

558
00:23:27,520 --> 00:23:30,000
because when we look at the master node

559
00:23:30,000 --> 00:23:32,400
and what we see on it

560
00:23:32,400 --> 00:23:34,480
that's where we're controlling it with

561
00:23:34,480 --> 00:23:37,679
kube cuddle uh or coug control as some

562
00:23:37,679 --> 00:23:39,360
people like to say

563
00:23:39,360 --> 00:23:42,000
but i'll say coop cuddle anyway

564
00:23:42,000 --> 00:23:44,000
we're going to control the master node

565
00:23:44,000 --> 00:23:47,600
and notice that xcd is actually drawn

566
00:23:47,600 --> 00:23:49,919
like a database and in a way it kind of

567
00:23:49,919 --> 00:23:52,640
is all your credentials all your things

568
00:23:52,640 --> 00:23:56,320
are are there we want to protect that

569
00:23:56,320 --> 00:23:59,200
we want to protect that like like it's

570
00:23:59,200 --> 00:24:01,760
fort knox you know put firewalling

571
00:24:01,760 --> 00:24:04,720
around it and do everything the master

572
00:24:04,720 --> 00:24:06,080
node is where we're going to control

573
00:24:06,080 --> 00:24:07,600
everything that's where the scheduler

574
00:24:07,600 --> 00:24:10,880
runs we have the api that allows us to

575
00:24:10,880 --> 00:24:12,960
talk to it and talk to all the other

576
00:24:12,960 --> 00:24:15,360
things so we want that pretty well

577
00:24:15,360 --> 00:24:16,400
hardened

578
00:24:16,400 --> 00:24:19,840
our worker nodes contain kublets

579
00:24:19,840 --> 00:24:22,559
i i love all the names of in kubernetes

580
00:24:22,559 --> 00:24:26,240
it's just so fun to say kublets

581
00:24:26,240 --> 00:24:29,520
anyway but we have kublets that run

582
00:24:29,520 --> 00:24:31,919
and a common mistake in the beginning is

583
00:24:31,919 --> 00:24:35,279
that people will will do their darndest

584
00:24:35,279 --> 00:24:37,760
to open a couplet to

585
00:24:37,760 --> 00:24:40,080
the the internet they want to open it

586
00:24:40,080 --> 00:24:42,640
internet facing in some way it's hard to

587
00:24:42,640 --> 00:24:44,960
do it can be done but no that's what

588
00:24:44,960 --> 00:24:46,720
coup proxy is for

589
00:24:46,720 --> 00:24:49,039
good proxy is the thing that's going to

590
00:24:49,039 --> 00:24:52,400
allow our traffic into the kubelets okay

591
00:24:52,400 --> 00:24:55,200
but see how the pods

592
00:24:55,200 --> 00:24:57,360
here this is where

593
00:24:57,360 --> 00:25:01,120
we want to isolate things because a pod

594
00:25:01,120 --> 00:25:03,279
is how we want to group our applications

595
00:25:03,279 --> 00:25:07,600
or our environments if a pod falls

596
00:25:07,600 --> 00:25:10,240
it should not take down the entire

597
00:25:10,240 --> 00:25:11,919
environment

598
00:25:11,919 --> 00:25:13,120
okay

599
00:25:13,120 --> 00:25:17,120
um whether it's dev or prod or who knows

600
00:25:17,120 --> 00:25:19,600
what it whatever it's going to be okay

601
00:25:19,600 --> 00:25:21,679
so you see you have multiple worker

602
00:25:21,679 --> 00:25:24,320
nodes um and then docker is running in

603
00:25:24,320 --> 00:25:26,799
there or container d it's all very

604
00:25:26,799 --> 00:25:29,039
similar

605
00:25:29,039 --> 00:25:31,520
so yeah that kind of explains or gives

606
00:25:31,520 --> 00:25:33,840
you a slightly better picture

607
00:25:33,840 --> 00:25:36,080
of what those concepts were on the

608
00:25:36,080 --> 00:25:39,600
previous slide but let's talk about

609
00:25:39,600 --> 00:25:43,600
common sense and how we can now secure

610
00:25:43,600 --> 00:25:47,039
kubernetes okay

611
00:25:47,039 --> 00:25:48,799
first and foremost

612
00:25:48,799 --> 00:25:51,200
tls everywhere

613
00:25:51,200 --> 00:25:53,600
it is possible to configure things so

614
00:25:53,600 --> 00:25:56,880
you're not using tls huge mistake did i

615
00:25:56,880 --> 00:25:59,279
put too many exclamation points there i

616
00:25:59,279 --> 00:26:01,679
don't know

617
00:26:02,880 --> 00:26:05,360
i run into situations where i'm

618
00:26:05,360 --> 00:26:07,360
analyzing a cluster

619
00:26:07,360 --> 00:26:10,000
and i see connections and they have not

620
00:26:10,000 --> 00:26:12,880
enabled tls and my simple question is

621
00:26:12,880 --> 00:26:14,480
why and they say

622
00:26:14,480 --> 00:26:15,200
just

623
00:26:15,200 --> 00:26:16,960
didn't get around to it

624
00:26:16,960 --> 00:26:19,279
i'll get to it later

625
00:26:19,279 --> 00:26:21,679
something like that they never get to it

626
00:26:21,679 --> 00:26:23,360
later

627
00:26:23,360 --> 00:26:25,279
how many times have you said i'll get to

628
00:26:25,279 --> 00:26:27,440
it later and then you don't get to it

629
00:26:27,440 --> 00:26:29,360
i'll raise my own hand

630
00:26:29,360 --> 00:26:30,640
in that case

631
00:26:30,640 --> 00:26:33,600
harden the infrastructure remember i

632
00:26:33,600 --> 00:26:36,000
already said that okay

633
00:26:36,000 --> 00:26:38,480
enable our back

634
00:26:38,480 --> 00:26:41,600
all of kubernetes uses role-based access

635
00:26:41,600 --> 00:26:44,080
controls you enable it with least

636
00:26:44,080 --> 00:26:47,360
privileges disable the asset based

637
00:26:47,360 --> 00:26:50,559
access controls this is

638
00:26:50,559 --> 00:26:53,279
you can do it but

639
00:26:53,279 --> 00:26:55,679
it adds a layer of complexity that just

640
00:26:55,679 --> 00:26:57,760
makes it much harder

641
00:26:57,760 --> 00:27:00,320
i'm not even going to get into it

642
00:27:00,320 --> 00:27:03,520
and you need to monitor everything i

643
00:27:03,520 --> 00:27:05,840
have an example of a great tool i happen

644
00:27:05,840 --> 00:27:08,799
to like it's open source called wazoo

645
00:27:08,799 --> 00:27:11,279
and they have a blog entry that they did

646
00:27:11,279 --> 00:27:12,400
on

647
00:27:12,400 --> 00:27:14,960
monitoring and auditing kubernetes

648
00:27:14,960 --> 00:27:16,559
that's one of the first and foremost

649
00:27:16,559 --> 00:27:18,240
things because most people that are

650
00:27:18,240 --> 00:27:20,399
installing kubernetes are just

651
00:27:20,399 --> 00:27:22,960
forgetting about the monitoring part

652
00:27:22,960 --> 00:27:24,880
because they think oh it's going to run

653
00:27:24,880 --> 00:27:28,240
just fine not a problem

654
00:27:28,799 --> 00:27:29,840
and then

655
00:27:29,840 --> 00:27:32,559
this command here the cube cuddle get

656
00:27:32,559 --> 00:27:35,679
roll binding all name spaces

657
00:27:35,679 --> 00:27:37,440
every time i deploy

658
00:27:37,440 --> 00:27:40,399
a kubernetes cluster i'll run this in

659
00:27:40,399 --> 00:27:43,039
other words this is trust but verify i

660
00:27:43,039 --> 00:27:44,640
want to make sure that all the name

661
00:27:44,640 --> 00:27:46,799
spaces that i have configured remember

662
00:27:46,799 --> 00:27:49,840
the namespaces are part of your your

663
00:27:49,840 --> 00:27:50,960
containers

664
00:27:50,960 --> 00:27:53,120
i want to make sure that all my role

665
00:27:53,120 --> 00:27:55,600
binding and all my accounts and our back

666
00:27:55,600 --> 00:27:57,440
is is set up there are some tools on

667
00:27:57,440 --> 00:27:59,200
another slide coming up i'll show you to

668
00:27:59,200 --> 00:28:01,039
do that

669
00:28:01,039 --> 00:28:03,760
you could use a third-party auth server

670
00:28:03,760 --> 00:28:04,720
for

671
00:28:04,720 --> 00:28:06,159
the api

672
00:28:06,159 --> 00:28:08,240
in other words you could set up

673
00:28:08,240 --> 00:28:10,640
something outside of the kubernetes

674
00:28:10,640 --> 00:28:12,960
cluster don't use the built-in auth

675
00:28:12,960 --> 00:28:15,679
server for doing authentications for

676
00:28:15,679 --> 00:28:17,679
your api calls

677
00:28:17,679 --> 00:28:18,640
hmm

678
00:28:18,640 --> 00:28:21,279
that gives you an extra level

679
00:28:21,279 --> 00:28:23,520
of security that you could put in i

680
00:28:23,520 --> 00:28:25,279
don't have enough time to go into all of

681
00:28:25,279 --> 00:28:28,159
that in a 45 minute session but think

682
00:28:28,159 --> 00:28:32,480
about that if you are in a really really

683
00:28:32,480 --> 00:28:36,000
this has to be as secure as possible i

684
00:28:36,000 --> 00:28:38,720
would definitely do that okay

685
00:28:38,720 --> 00:28:42,240
separate and firewall your xcd cluster

686
00:28:42,240 --> 00:28:46,480
the xcd make sure it is protected from

687
00:28:46,480 --> 00:28:48,960
any and all intruders and you have an

688
00:28:48,960 --> 00:28:51,440
extra level of monitoring on the xcd

689
00:28:51,440 --> 00:28:52,960
cluster

690
00:28:52,960 --> 00:28:56,240
if that is compromised

691
00:28:56,240 --> 00:28:58,399
pretty much keys to the kingdom

692
00:28:58,399 --> 00:29:00,799
rotate your encryption keys use

693
00:29:00,799 --> 00:29:03,600
something like hashicorp vault i like it

694
00:29:03,600 --> 00:29:06,080
it's open source it works great

695
00:29:06,080 --> 00:29:07,039
um

696
00:29:07,039 --> 00:29:09,120
linux security features i mentioned this

697
00:29:09,120 --> 00:29:12,799
before but in the configuration of the

698
00:29:12,799 --> 00:29:15,520
pods there is an option pot for pod

699
00:29:15,520 --> 00:29:17,760
security policies where you can enable

700
00:29:17,760 --> 00:29:20,320
either se linux or app armor it's off by

701
00:29:20,320 --> 00:29:22,720
default enable one

702
00:29:22,720 --> 00:29:24,320
it's not that hard

703
00:29:24,320 --> 00:29:29,279
it will solve so many of your problems

704
00:29:32,320 --> 00:29:35,440
kube cuddle get secrets this is one of

705
00:29:35,440 --> 00:29:37,600
the commands you want to run when you

706
00:29:37,600 --> 00:29:40,559
first install your environment

707
00:29:40,559 --> 00:29:41,600
well

708
00:29:41,600 --> 00:29:43,440
this is a better way to do it it's an

709
00:29:43,440 --> 00:29:46,000
easier way there are some open source

710
00:29:46,000 --> 00:29:49,360
tools that will allow you you run these

711
00:29:49,360 --> 00:29:51,919
it will kind of audit your configuration

712
00:29:51,919 --> 00:29:54,240
and it's going to tell you what yeah

713
00:29:54,240 --> 00:29:56,559
you've got some problems here

714
00:29:56,559 --> 00:29:58,880
um you've got some over privileged over

715
00:29:58,880 --> 00:30:01,600
privileged accounts or oh here's one

716
00:30:01,600 --> 00:30:03,919
without a u without a password or

717
00:30:03,919 --> 00:30:06,960
something you know so run these

718
00:30:06,960 --> 00:30:09,679
and make sure all your accounts are at

719
00:30:09,679 --> 00:30:12,320
the proper privileges they have the

720
00:30:12,320 --> 00:30:16,080
right access controls

721
00:30:16,240 --> 00:30:17,520
there are

722
00:30:17,520 --> 00:30:19,840
some

723
00:30:21,279 --> 00:30:22,880
now i'm not going to say it i i'm going

724
00:30:22,880 --> 00:30:24,799
to skip over that part about github for

725
00:30:24,799 --> 00:30:27,120
right now i'll come back to it

726
00:30:27,120 --> 00:30:31,200
um your image repos remember the repos

727
00:30:31,200 --> 00:30:34,159
they have to be secure those are the um

728
00:30:34,159 --> 00:30:36,480
your docker registries

729
00:30:36,480 --> 00:30:38,720
okay keep those secure

730
00:30:38,720 --> 00:30:42,080
um all of the libraries i mean think

731
00:30:42,080 --> 00:30:44,159
about your supply chain where are the

732
00:30:44,159 --> 00:30:46,000
libraries coming from that that are

733
00:30:46,000 --> 00:30:48,799
getting installed here

734
00:30:48,799 --> 00:30:51,279
application

735
00:30:51,279 --> 00:30:53,440
i watched a team

736
00:30:53,440 --> 00:30:56,799
build an incredibly secure kubernetes

737
00:30:56,799 --> 00:30:58,960
cluster once

738
00:30:58,960 --> 00:31:01,519
and then they installed an application

739
00:31:01,519 --> 00:31:03,440
that they deployed

740
00:31:03,440 --> 00:31:06,720
which they had never done any security

741
00:31:06,720 --> 00:31:09,039
review of it they never ran any

742
00:31:09,039 --> 00:31:12,559
vulnerability checks on it nothing

743
00:31:12,559 --> 00:31:14,960
so the first time i i got into it i

744
00:31:14,960 --> 00:31:17,360
started looking and i went yeah but you

745
00:31:17,360 --> 00:31:19,360
have sql injection

746
00:31:19,360 --> 00:31:21,919
right here on the application and i just

747
00:31:21,919 --> 00:31:24,240
got into the container and i can now do

748
00:31:24,240 --> 00:31:27,039
remote code execution and i've now taken

749
00:31:27,039 --> 00:31:29,120
over your entire kubernetes cluster and

750
00:31:29,120 --> 00:31:32,159
they were like how how'd you do that um

751
00:31:32,159 --> 00:31:35,760
because your application was insecure

752
00:31:35,760 --> 00:31:38,000
minor problem please don't forget the

753
00:31:38,000 --> 00:31:39,440
application

754
00:31:39,440 --> 00:31:41,760
just because you're deploying it with

755
00:31:41,760 --> 00:31:46,240
kubernetes and think about pods think

756
00:31:46,240 --> 00:31:50,720
about using them for isolation

757
00:31:50,720 --> 00:31:53,279
and i can i mean i can't say it enough

758
00:31:53,279 --> 00:31:55,200
also i mean

759
00:31:55,200 --> 00:31:56,960
how many is everybody here know about

760
00:31:56,960 --> 00:31:58,960
showdown

761
00:31:58,960 --> 00:32:01,279
if you anybody not know about showdown

762
00:32:01,279 --> 00:32:03,840
if you've never used showdan

763
00:32:03,840 --> 00:32:06,399
showdan think of it as the web crawler

764
00:32:06,399 --> 00:32:09,600
of all things internet it will go out

765
00:32:09,600 --> 00:32:12,320
and i i use this in my honeypot talks as

766
00:32:12,320 --> 00:32:14,720
well because you can go to showdown and

767
00:32:14,720 --> 00:32:16,399
search for all the

768
00:32:16,399 --> 00:32:19,519
opened webcams of the world and and

769
00:32:19,519 --> 00:32:21,600
things like that but you can also search

770
00:32:21,600 --> 00:32:22,320
for

771
00:32:22,320 --> 00:32:26,240
um you know nsa uh toasters and and what

772
00:32:26,240 --> 00:32:28,720
have you but showdan

773
00:32:28,720 --> 00:32:31,039
you could actually go to showdan and

774
00:32:31,039 --> 00:32:32,320
search for

775
00:32:32,320 --> 00:32:35,039
xcd clusters that are open to the

776
00:32:35,039 --> 00:32:36,640
internet oops

777
00:32:36,640 --> 00:32:39,840
you might find quite a few

778
00:32:39,840 --> 00:32:42,240
because most of the time it's people

779
00:32:42,240 --> 00:32:44,240
that have just oh i'm playing with

780
00:32:44,240 --> 00:32:46,960
kubernetes i'll deploy something

781
00:32:46,960 --> 00:32:48,799
and they just take all the defaults so

782
00:32:48,799 --> 00:32:51,519
it's not very secure and yeah they leave

783
00:32:51,519 --> 00:32:52,960
it up there running and they don't

784
00:32:52,960 --> 00:32:55,919
realize it but sometimes you might even

785
00:32:55,919 --> 00:32:58,559
find some production level kubernetes

786
00:32:58,559 --> 00:33:01,360
clusters that are completely exposed

787
00:33:01,360 --> 00:33:04,399
so i use shodan just for looking and

788
00:33:04,399 --> 00:33:07,200
searching for those types of things i

789
00:33:07,200 --> 00:33:09,279
like to if there's some way of figuring

790
00:33:09,279 --> 00:33:11,600
out who the owner is i'll i'll report it

791
00:33:11,600 --> 00:33:12,720
to them

792
00:33:12,720 --> 00:33:15,120
so don't be afraid to use showdown to

793
00:33:15,120 --> 00:33:16,799
look for your own stuff

794
00:33:16,799 --> 00:33:18,399
come on there we go

795
00:33:18,399 --> 00:33:20,960
configurations

796
00:33:20,960 --> 00:33:23,519
all right um remember most the breaches

797
00:33:23,519 --> 00:33:26,320
come from configuration issues here are

798
00:33:26,320 --> 00:33:30,240
your links and where you want to get the

799
00:33:30,240 --> 00:33:32,640
cis benchmarks for hardening your

800
00:33:32,640 --> 00:33:34,960
environment and i will tell you right

801
00:33:34,960 --> 00:33:35,919
now

802
00:33:35,919 --> 00:33:39,120
besides learning how to harden the

803
00:33:39,120 --> 00:33:40,480
environment

804
00:33:40,480 --> 00:33:43,200
you will learn all the configuration

805
00:33:43,200 --> 00:33:45,519
commands and settings and things like

806
00:33:45,519 --> 00:33:48,000
that by looking through the cis

807
00:33:48,000 --> 00:33:50,720
benchmarks you will learn more about the

808
00:33:50,720 --> 00:33:52,320
configurations

809
00:33:52,320 --> 00:33:54,960
by just going through these than if you

810
00:33:54,960 --> 00:33:58,080
would reading some huge kubernetes book

811
00:33:58,080 --> 00:34:01,120
or something like that so take the time

812
00:34:01,120 --> 00:34:04,559
to look at first docker

813
00:34:04,559 --> 00:34:06,480
and then kubernetes

814
00:34:06,480 --> 00:34:08,560
look at how to secure the container

815
00:34:08,560 --> 00:34:09,839
first

816
00:34:09,839 --> 00:34:14,639
and then how to secure kubernetes

817
00:34:15,119 --> 00:34:18,639
okay so you get the idea

818
00:34:18,639 --> 00:34:21,440
i i don't know if anybody was here in in

819
00:34:21,440 --> 00:34:23,800
the very first talk this morning on the

820
00:34:23,800 --> 00:34:26,800
cissp but one of the things they talked

821
00:34:26,800 --> 00:34:29,839
about was what kind of a learner are you

822
00:34:29,839 --> 00:34:32,239
are you a visual learner you know are

823
00:34:32,239 --> 00:34:34,480
you a thinking learner what how do you

824
00:34:34,480 --> 00:34:36,719
learn things better

825
00:34:36,719 --> 00:34:40,079
or more easily and i i sometimes think

826
00:34:40,079 --> 00:34:42,239
that actually going through these

827
00:34:42,239 --> 00:34:45,199
benchmarks i learn a lot more about

828
00:34:45,199 --> 00:34:47,280
whatever the thing is

829
00:34:47,280 --> 00:34:49,599
because it explains what you're really

830
00:34:49,599 --> 00:34:52,719
trying to harden it against what is what

831
00:34:52,719 --> 00:34:55,520
is the threat that this configuration

832
00:34:55,520 --> 00:34:59,119
change will protect against

833
00:34:59,119 --> 00:35:02,119
okay

834
00:35:02,160 --> 00:35:04,800
what about automation i don't want to

835
00:35:04,800 --> 00:35:07,920
put all these things in by hand

836
00:35:07,920 --> 00:35:12,000
well there are some ways to do it

837
00:35:12,000 --> 00:35:13,920
although my cat is frightened about

838
00:35:13,920 --> 00:35:15,359
automation

839
00:35:15,359 --> 00:35:17,920
what if you use jenkins or some tools

840
00:35:17,920 --> 00:35:20,560
similar to that there are some open

841
00:35:20,560 --> 00:35:23,040
source tools that will plug in to

842
00:35:23,040 --> 00:35:26,160
jenkins and they will take and do things

843
00:35:26,160 --> 00:35:29,280
like analyzing the image that you're

844
00:35:29,280 --> 00:35:32,320
actually deploying it will analyze the

845
00:35:32,320 --> 00:35:35,359
container configuration to see if the

846
00:35:35,359 --> 00:35:38,320
container is secure or insecure

847
00:35:38,320 --> 00:35:41,599
so keep that in mind it's going to help

848
00:35:41,599 --> 00:35:43,839
you to deploy something that's very very

849
00:35:43,839 --> 00:35:44,800
secure

850
00:35:44,800 --> 00:35:45,920
or

851
00:35:45,920 --> 00:35:48,079
more secure than it would be if you

852
00:35:48,079 --> 00:35:50,640
happen to use jenkins or similar tools

853
00:35:50,640 --> 00:35:52,480
like that

854
00:35:52,480 --> 00:35:53,920
okay

855
00:35:53,920 --> 00:35:56,320
some additional tools

856
00:35:56,320 --> 00:35:58,640
let's say you you just installed your

857
00:35:58,640 --> 00:36:01,200
first kubernetes cluster you want to

858
00:36:01,200 --> 00:36:04,079
know is it secure um

859
00:36:04,079 --> 00:36:07,200
love aqua security they have cube bench

860
00:36:07,200 --> 00:36:09,440
this is something that's going to run

861
00:36:09,440 --> 00:36:12,400
and tell you have you applied all the

862
00:36:12,400 --> 00:36:15,359
cis benchmarks correctly

863
00:36:15,359 --> 00:36:19,040
or did you not apply any of them

864
00:36:19,040 --> 00:36:20,720
okay

865
00:36:20,720 --> 00:36:23,920
run it against a master node a master or

866
00:36:23,920 --> 00:36:27,040
a worker node okay there's another tool

867
00:36:27,040 --> 00:36:28,800
called coupe audit

868
00:36:28,800 --> 00:36:32,240
this will be a little more granular

869
00:36:32,240 --> 00:36:33,920
this is going to show you where you've

870
00:36:33,920 --> 00:36:36,880
gone wrong maybe you forgot to to do

871
00:36:36,880 --> 00:36:39,280
some of the configuration changes that

872
00:36:39,280 --> 00:36:42,560
cis benchmarks suggested

873
00:36:42,560 --> 00:36:46,320
okay here's an example

874
00:36:46,320 --> 00:36:48,480
when you start to look at this you can

875
00:36:48,480 --> 00:36:51,359
see that if this works yeah there we go

876
00:36:51,359 --> 00:36:53,040
oops

877
00:36:53,040 --> 00:36:55,920
the read only root file system wasn't

878
00:36:55,920 --> 00:36:57,040
set

879
00:36:57,040 --> 00:36:59,359
see there's a common configuration

880
00:36:59,359 --> 00:37:01,200
setting where

881
00:37:01,200 --> 00:37:03,680
you can set the root file system to be

882
00:37:03,680 --> 00:37:05,440
read only

883
00:37:05,440 --> 00:37:07,359
we don't want them because what's on the

884
00:37:07,359 --> 00:37:10,160
root file system of a container it's

885
00:37:10,160 --> 00:37:12,560
going to have an etsy password file it

886
00:37:12,560 --> 00:37:14,400
is going to be out there we don't want

887
00:37:14,400 --> 00:37:15,680
that readable

888
00:37:15,680 --> 00:37:17,839
i'm sorry we don't want that writable i

889
00:37:17,839 --> 00:37:20,320
guess we do want it readable

890
00:37:20,320 --> 00:37:22,400
we just don't want it writable

891
00:37:22,400 --> 00:37:24,560
but you see how it's it's telling you

892
00:37:24,560 --> 00:37:26,800
and you start to go through

893
00:37:26,800 --> 00:37:29,040
all the little configuration settings

894
00:37:29,040 --> 00:37:30,880
this is part of the problem of figuring

895
00:37:30,880 --> 00:37:33,040
out containers and kubernetes is the

896
00:37:33,040 --> 00:37:34,800
fact that there are so many

897
00:37:34,800 --> 00:37:37,680
configuration settings that's why i say

898
00:37:37,680 --> 00:37:39,440
start with cis

899
00:37:39,440 --> 00:37:41,040
start to go through the ones that you

900
00:37:41,040 --> 00:37:43,920
really need and then run the audit tools

901
00:37:43,920 --> 00:37:46,240
so you start to see oh

902
00:37:46,240 --> 00:37:49,200
mistyped one or forgot to set one or i

903
00:37:49,200 --> 00:37:52,240
set it to yes when i really meant no or

904
00:37:52,240 --> 00:37:53,760
something like that

905
00:37:53,760 --> 00:37:56,000
okay

906
00:37:56,880 --> 00:37:59,200
some other tools that are available

907
00:37:59,200 --> 00:38:01,599
claire this is a static analysis tool

908
00:38:01,599 --> 00:38:05,359
for the actual application containers

909
00:38:05,359 --> 00:38:08,720
very useful clar which actually

910
00:38:08,720 --> 00:38:11,200
integrates claire and your docker

911
00:38:11,200 --> 00:38:14,720
registry so we can look at the whole

912
00:38:14,720 --> 00:38:16,160
package there

913
00:38:16,160 --> 00:38:17,920
falco i'm going to show you falco in a

914
00:38:17,920 --> 00:38:21,200
second falco is perhaps my favorite

915
00:38:21,200 --> 00:38:22,480
thing

916
00:38:22,480 --> 00:38:23,680
falco

917
00:38:23,680 --> 00:38:26,960
looks for weird stuff going on in your

918
00:38:26,960 --> 00:38:28,800
containers

919
00:38:28,800 --> 00:38:31,440
it looks for abnormalities

920
00:38:31,440 --> 00:38:34,560
um we'll see that and then coop hunter

921
00:38:34,560 --> 00:38:37,200
is how you can actually do kind of a pen

922
00:38:37,200 --> 00:38:39,520
test once you're done and you've

923
00:38:39,520 --> 00:38:42,320
configured your environment you can run

924
00:38:42,320 --> 00:38:44,160
coupe hunter against it

925
00:38:44,160 --> 00:38:46,880
here is oh wait

926
00:38:46,880 --> 00:38:49,119
did i

927
00:38:49,119 --> 00:38:51,680
oh i'm missing a slide here i had an

928
00:38:51,680 --> 00:38:52,800
example

929
00:38:52,800 --> 00:38:55,119
of falco sorry

930
00:38:55,119 --> 00:38:58,160
i had an example of falco running um but

931
00:38:58,160 --> 00:38:59,359
i had to take it out because i was

932
00:38:59,359 --> 00:39:01,599
having weird problems with getting it to

933
00:39:01,599 --> 00:39:04,400
to sync up with the video

934
00:39:04,400 --> 00:39:07,200
but yeah go to the falco.org site you'll

935
00:39:07,200 --> 00:39:09,599
see it's an agent that runs within each

936
00:39:09,599 --> 00:39:12,000
of the containers and

937
00:39:12,000 --> 00:39:14,320
basically it looks for anomalies it

938
00:39:14,320 --> 00:39:16,880
looks for suspicious things like if it

939
00:39:16,880 --> 00:39:18,160
sees

940
00:39:18,160 --> 00:39:22,240
somebody is doing cat or or something is

941
00:39:22,240 --> 00:39:24,720
doing cat etsy password

942
00:39:24,720 --> 00:39:25,920
um

943
00:39:25,920 --> 00:39:27,839
yeah that's probably not something that

944
00:39:27,839 --> 00:39:29,280
should be happening inside your

945
00:39:29,280 --> 00:39:32,800
container and yet i have had

946
00:39:32,800 --> 00:39:35,200
vulnerable kubernetes clusters and the

947
00:39:35,200 --> 00:39:37,680
containers where falco actually caught

948
00:39:37,680 --> 00:39:38,720
someone

949
00:39:38,720 --> 00:39:42,079
doing cat etsy password it was a red

950
00:39:42,079 --> 00:39:43,359
team

951
00:39:43,359 --> 00:39:46,079
and we caught them we were the blue team

952
00:39:46,079 --> 00:39:48,160
at the time and we were we kicked them

953
00:39:48,160 --> 00:39:50,000
out and they were like ah

954
00:39:50,000 --> 00:39:51,280
that was how we were going to get into

955
00:39:51,280 --> 00:39:55,119
your systems and make you look bad

956
00:39:55,119 --> 00:39:57,359
but yeah anyway

957
00:39:57,359 --> 00:39:58,480
all right

958
00:39:58,480 --> 00:40:02,400
if i were a a hacker i am hacker i i'm

959
00:40:02,400 --> 00:40:03,839
going to attack

960
00:40:03,839 --> 00:40:06,960
well how do i actually approach

961
00:40:06,960 --> 00:40:09,040
pen testing or attacking a kubernetes

962
00:40:09,040 --> 00:40:10,560
cluster

963
00:40:10,560 --> 00:40:12,079
first thing i'm going to start with is

964
00:40:12,079 --> 00:40:13,760
all the services that run on all the

965
00:40:13,760 --> 00:40:15,040
ports

966
00:40:15,040 --> 00:40:17,040
so there they are

967
00:40:17,040 --> 00:40:19,839
i would start by just looking and making

968
00:40:19,839 --> 00:40:22,640
sure first of all does anybody notice

969
00:40:22,640 --> 00:40:25,200
anything that's missing here

970
00:40:25,200 --> 00:40:27,839
that that might be

971
00:40:27,839 --> 00:40:29,440
important

972
00:40:29,440 --> 00:40:31,680
what might i look for

973
00:40:31,680 --> 00:40:34,240
in an attack methodology within a

974
00:40:34,240 --> 00:40:36,400
kubernetes cluster there's two things

975
00:40:36,400 --> 00:40:39,640
that are missing

976
00:40:42,160 --> 00:40:45,118
what about

977
00:40:45,760 --> 00:40:49,839
before port 443 what about port 80

978
00:40:49,839 --> 00:40:52,960
what if i find an open port 80. oh

979
00:40:52,960 --> 00:40:55,839
somebody forgot to turn on tls

980
00:40:55,839 --> 00:40:58,720
what if i find port 22.

981
00:40:58,720 --> 00:41:01,200
oh crap let's turn that off

982
00:41:01,200 --> 00:41:03,440
okay keep that in mind

983
00:41:03,440 --> 00:41:05,920
so this gives you a kind of an attack

984
00:41:05,920 --> 00:41:08,079
vector obviously

985
00:41:08,079 --> 00:41:09,160
um

986
00:41:09,160 --> 00:41:12,480
6666 for xcd i'd be looking to see if

987
00:41:12,480 --> 00:41:15,359
that is exposed in some way

988
00:41:15,359 --> 00:41:16,800
okay

989
00:41:16,800 --> 00:41:20,000
so it's the same kind of thing you know

990
00:41:20,000 --> 00:41:22,400
if you're if you're an attacker and you

991
00:41:22,400 --> 00:41:25,440
want to go after a kubernetes cluster

992
00:41:25,440 --> 00:41:27,760
these are the things that i look for

993
00:41:27,760 --> 00:41:30,560
can i get to the api server

994
00:41:30,560 --> 00:41:33,440
if i can get to the api server i have an

995
00:41:33,440 --> 00:41:36,319
attack vector that oops

996
00:41:36,319 --> 00:41:38,720
probably shouldn't be there especially

997
00:41:38,720 --> 00:41:41,599
from very depending on what network

998
00:41:41,599 --> 00:41:44,160
check for fcd make sure that cd is

999
00:41:44,160 --> 00:41:46,160
locked down if that is not then you have

1000
00:41:46,160 --> 00:41:48,319
a problem

1001
00:41:48,319 --> 00:41:50,640
checking on the kublets

1002
00:41:50,640 --> 00:41:54,319
the kublet port should always be read

1003
00:41:54,319 --> 00:41:56,880
only it should never you should never

1004
00:41:56,880 --> 00:41:59,280
find a kubelet that has right access to

1005
00:41:59,280 --> 00:42:00,720
it okay

1006
00:42:00,720 --> 00:42:03,280
the container vulnerabilities

1007
00:42:03,280 --> 00:42:05,280
i mean there's nothing stopping you from

1008
00:42:05,280 --> 00:42:07,200
running a quick vulnerability scanner

1009
00:42:07,200 --> 00:42:08,880
against any of the applications that are

1010
00:42:08,880 --> 00:42:10,880
running within your containers

1011
00:42:10,880 --> 00:42:13,440
do you have sensitive files that are not

1012
00:42:13,440 --> 00:42:16,640
protected remember falco you actually

1013
00:42:16,640 --> 00:42:19,599
will configure file code that say oh i

1014
00:42:19,599 --> 00:42:22,240
have these specific files not part of

1015
00:42:22,240 --> 00:42:24,000
you know etsy password or something

1016
00:42:24,000 --> 00:42:26,319
maybe i have some other files that have

1017
00:42:26,319 --> 00:42:28,160
some important things in them that have

1018
00:42:28,160 --> 00:42:30,800
to be part of a container application

1019
00:42:30,800 --> 00:42:33,280
so i want to tell falco hey keep an eye

1020
00:42:33,280 --> 00:42:36,079
on on this file or these sets of files

1021
00:42:36,079 --> 00:42:38,160
or whatever

1022
00:42:38,160 --> 00:42:40,240
kernel exploits

1023
00:42:40,240 --> 00:42:42,400
there are going to be vulnerabilities in

1024
00:42:42,400 --> 00:42:44,720
the os's that you're deploying via

1025
00:42:44,720 --> 00:42:46,079
kubernetes

1026
00:42:46,079 --> 00:42:47,920
so if one comes out

1027
00:42:47,920 --> 00:42:50,319
please remember to patch the systems and

1028
00:42:50,319 --> 00:42:53,119
then redeploy your worker nodes which is

1029
00:42:53,119 --> 00:42:55,040
usually very easy you can roll that

1030
00:42:55,040 --> 00:42:57,599
through but i do see people forget that

1031
00:42:57,599 --> 00:42:58,400
a lot

1032
00:42:58,400 --> 00:43:01,280
they they don't remember

1033
00:43:01,280 --> 00:43:04,000
you have to patch those containers you

1034
00:43:04,000 --> 00:43:07,119
have to patch the entire cluster

1035
00:43:07,119 --> 00:43:08,480
because if we can get privilege

1036
00:43:08,480 --> 00:43:11,520
escalation we can take over your cluster

1037
00:43:11,520 --> 00:43:13,920
the vulnerable apps yeah that goes

1038
00:43:13,920 --> 00:43:15,920
without saying

1039
00:43:15,920 --> 00:43:18,720
so some final threat modeling

1040
00:43:18,720 --> 00:43:20,400
to think about when it comes to

1041
00:43:20,400 --> 00:43:21,920
kubernetes

1042
00:43:21,920 --> 00:43:24,880
think of the entire ci cicd pipeline if

1043
00:43:24,880 --> 00:43:26,800
you have one

1044
00:43:26,800 --> 00:43:28,960
if you're in the cloud you might have a

1045
00:43:28,960 --> 00:43:32,079
very automated one might not be an issue

1046
00:43:32,079 --> 00:43:35,119
think about your workload security

1047
00:43:35,119 --> 00:43:38,240
think about pods i usually say this in a

1048
00:43:38,240 --> 00:43:40,640
honeypot talk that i give that

1049
00:43:40,640 --> 00:43:44,560
90 of the time you do with honey pots

1050
00:43:44,560 --> 00:43:47,200
should be planning

1051
00:43:47,200 --> 00:43:50,800
same thing with kubernetes kind of 90

1052
00:43:50,800 --> 00:43:53,119
of your time should be spent thinking

1053
00:43:53,119 --> 00:43:56,280
about how can we group

1054
00:43:56,280 --> 00:44:00,240
applications such that if this cluster

1055
00:44:00,240 --> 00:44:04,640
or this pod is compromised

1056
00:44:04,640 --> 00:44:06,880
what's going to happen what's my risk at

1057
00:44:06,880 --> 00:44:08,640
that level

1058
00:44:08,640 --> 00:44:11,680
container security directly

1059
00:44:11,680 --> 00:44:15,119
file storage security keep in mind that

1060
00:44:15,119 --> 00:44:18,960
in the kubernetes world file storage is

1061
00:44:18,960 --> 00:44:22,079
not permanent unless you set it that way

1062
00:44:22,079 --> 00:44:24,960
it is transitory so if a container goes

1063
00:44:24,960 --> 00:44:27,040
down or the cluster goes down you will

1064
00:44:27,040 --> 00:44:29,200
lose whatever storage you might have had

1065
00:44:29,200 --> 00:44:31,760
in there unless you make it secure by

1066
00:44:31,760 --> 00:44:35,200
default or permanent by default

1067
00:44:35,200 --> 00:44:37,040
the network security remember the

1068
00:44:37,040 --> 00:44:39,599
infrastructure and then the application

1069
00:44:39,599 --> 00:44:42,079
security itself those are the things

1070
00:44:42,079 --> 00:44:44,480
that we really want to think about when

1071
00:44:44,480 --> 00:44:47,839
we're looking at the entire package

1072
00:44:47,839 --> 00:44:51,359
okay so your key takeaways for today

1073
00:44:51,359 --> 00:44:54,240
okay common sense is still there

1074
00:44:54,240 --> 00:44:57,280
um i like to say in all my talks that we

1075
00:44:57,280 --> 00:45:01,920
keep spending billions on fancy software

1076
00:45:01,920 --> 00:45:04,800
and hardware and all this stuff and yet

1077
00:45:04,800 --> 00:45:06,880
breaches keep going up

1078
00:45:06,880 --> 00:45:09,440
why is that because we're forgetting

1079
00:45:09,440 --> 00:45:11,920
best practices and everything that we've

1080
00:45:11,920 --> 00:45:15,200
learned doing security so stop

1081
00:45:15,200 --> 00:45:18,079
overthinking this stuff go back to best

1082
00:45:18,079 --> 00:45:20,960
practices secure the infrastructure have

1083
00:45:20,960 --> 00:45:22,720
a secure repo

1084
00:45:22,720 --> 00:45:25,280
you know don't let people get in and

1085
00:45:25,280 --> 00:45:27,520
play around with your repos and things

1086
00:45:27,520 --> 00:45:29,359
like that

1087
00:45:29,359 --> 00:45:31,119
okay

1088
00:45:31,119 --> 00:45:33,680
stick with the basics

1089
00:45:33,680 --> 00:45:34,560
okay

1090
00:45:34,560 --> 00:45:38,800
stop the fancy for god's sake um just

1091
00:45:38,800 --> 00:45:41,440
use cis benchmarks

1092
00:45:41,440 --> 00:45:44,800
um that is going to be very important

1093
00:45:44,800 --> 00:45:47,040
and then our back

1094
00:45:47,040 --> 00:45:50,000
and all of the configurations we want to

1095
00:45:50,000 --> 00:45:52,880
make sure that we're applying benchmarks

1096
00:45:52,880 --> 00:45:55,200
across the board

1097
00:45:55,200 --> 00:45:57,280
okay if you take one thing away from

1098
00:45:57,280 --> 00:46:00,319
this talk today if you learned about cis

1099
00:46:00,319 --> 00:46:02,319
there's a good one threat model your

1100
00:46:02,319 --> 00:46:03,599
environment

1101
00:46:03,599 --> 00:46:04,400
okay

1102
00:46:04,400 --> 00:46:06,720
the access controls i mentioned this

1103
00:46:06,720 --> 00:46:09,599
more than once because it is often what

1104
00:46:09,599 --> 00:46:12,839
is overlooked in deploying kubernetes

1105
00:46:12,839 --> 00:46:16,800
clusters okay did i mention our back

1106
00:46:16,800 --> 00:46:18,480
yes

1107
00:46:18,480 --> 00:46:21,040
because it like i said it's overlooked

1108
00:46:21,040 --> 00:46:22,560
patch

1109
00:46:22,560 --> 00:46:25,040
patch your environment

1110
00:46:25,040 --> 00:46:28,640
log for jay just hit back in december

1111
00:46:28,640 --> 00:46:30,240
how many people had to patch their

1112
00:46:30,240 --> 00:46:32,400
kubernetes clusters because they were

1113
00:46:32,400 --> 00:46:35,920
running java based applications

1114
00:46:35,920 --> 00:46:38,079
it was a little easier because okay

1115
00:46:38,079 --> 00:46:39,760
you're in a kubernetes cluster you can

1116
00:46:39,760 --> 00:46:42,319
roll through the containers and get get

1117
00:46:42,319 --> 00:46:45,040
all your pods upgraded and so on but you

1118
00:46:45,040 --> 00:46:47,760
still had to do it

1119
00:46:47,760 --> 00:46:50,240
logging and auditing

1120
00:46:50,240 --> 00:46:52,640
if you don't monitor how are you going

1121
00:46:52,640 --> 00:46:55,760
to ever know and i throw the wazoo back

1122
00:46:55,760 --> 00:46:58,160
up there again take a look at it it's

1123
00:46:58,160 --> 00:47:00,400
just it's a great open source tool and

1124
00:47:00,400 --> 00:47:03,040
it works very very well with kubernetes

1125
00:47:03,040 --> 00:47:05,119
and containers

1126
00:47:05,119 --> 00:47:06,400
okay

1127
00:47:06,400 --> 00:47:07,280
so

1128
00:47:07,280 --> 00:47:08,400
that's it

1129
00:47:08,400 --> 00:47:11,040
let's see did i make it oh barely

1130
00:47:11,040 --> 00:47:13,119
thank you very much i will make my

1131
00:47:13,119 --> 00:47:14,800
slides available

1132
00:47:14,800 --> 00:47:17,760
if you watch my twitter account um i'll

1133
00:47:17,760 --> 00:47:20,880
post when i post the slides to my github

1134
00:47:20,880 --> 00:47:25,280
my github is also rainbowcat same thing

1135
00:47:25,280 --> 00:47:29,160
that's it any questions

1136
00:47:29,770 --> 00:47:35,340
[Applause]

