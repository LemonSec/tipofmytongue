1
00:00:04,880 --> 00:00:09,679
good morning rishikesh

2
00:00:06,720 --> 00:00:10,400
good morning tom how are you i'm fine

3
00:00:09,679 --> 00:00:12,480
how are you doing

4
00:00:10,400 --> 00:00:14,719
yeah very good thank you refreshed and

5
00:00:12,480 --> 00:00:17,279
ready for another great day

6
00:00:14,719 --> 00:00:19,198
and uh good to see that you are ready

7
00:00:17,279 --> 00:00:22,400
wired up and ready to go

8
00:00:19,199 --> 00:00:25,279
uh russia talk is going to be on

9
00:00:22,400 --> 00:00:26,880
operational tech binaries and the tale

10
00:00:25,279 --> 00:00:30,080
of deductions

11
00:00:26,880 --> 00:00:32,079
uh uh i'm intrigued already uh so

12
00:00:30,080 --> 00:00:33,680
uh rush keth please bring up your

13
00:00:32,079 --> 00:00:37,600
presentation

14
00:00:33,680 --> 00:00:37,600
and we will get ready to go

15
00:00:41,520 --> 00:00:44,559
while rishikesh is doing that please do

16
00:00:43,680 --> 00:00:47,200
not forget

17
00:00:44,559 --> 00:00:47,599
ask questions best way getting something

18
00:00:47,200 --> 00:00:51,199
out

19
00:00:47,600 --> 00:00:52,800
of the uh speakers the most intelligent

20
00:00:51,199 --> 00:00:53,519
question or perhaps just my favorite

21
00:00:52,800 --> 00:00:56,078
question

22
00:00:53,520 --> 00:00:57,199
will win this very t-shirt the i love

23
00:00:56,079 --> 00:01:00,960
billy

24
00:00:57,199 --> 00:01:04,479
b-sides deli i will guarantee it

25
00:01:00,960 --> 00:01:08,320
is washed and posted directly to you um

26
00:01:04,479 --> 00:01:10,720
so rishikesh are you ready to go yes

27
00:01:08,320 --> 00:01:12,479
okay let's get your presentation up on

28
00:01:10,720 --> 00:01:14,400
the screen i'm not

29
00:01:12,479 --> 00:01:16,400
i don't think it's been shared at the

30
00:01:14,400 --> 00:01:20,320
moment

31
00:01:16,400 --> 00:01:22,479
here we go oops nearly there we go

32
00:01:20,320 --> 00:01:27,679
okay rishikesh thank you very much

33
00:01:22,479 --> 00:01:31,680
please take it away

34
00:01:27,680 --> 00:01:35,200
okay uh grafton all

35
00:01:31,680 --> 00:01:36,320
uh okay today i will be i'd be sharing

36
00:01:35,200 --> 00:01:39,200
some of my

37
00:01:36,320 --> 00:01:40,798
experiences or the struggles per se uh

38
00:01:39,200 --> 00:01:43,600
on on the

39
00:01:40,799 --> 00:01:45,119
uh on the topic which is more related to

40
00:01:43,600 --> 00:01:45,839
industrial control systems or

41
00:01:45,119 --> 00:01:48,880
operational

42
00:01:45,840 --> 00:01:51,520
technologies uh where

43
00:01:48,880 --> 00:01:52,000
when i basically started working on the

44
00:01:51,520 --> 00:01:54,640
uh

45
00:01:52,000 --> 00:01:56,560
thread collection or threat intelligence

46
00:01:54,640 --> 00:01:57,360
collection part of the operational

47
00:01:56,560 --> 00:02:00,799
technologies

48
00:01:57,360 --> 00:02:03,759
what all kind of the problems i uh

49
00:02:00,799 --> 00:02:06,240
tried to solve and how did i do that as

50
00:02:03,759 --> 00:02:06,240
far as

51
00:02:06,640 --> 00:02:10,720
reverse engineering or malware analysis

52
00:02:08,639 --> 00:02:15,119
of ics binaries is concerned

53
00:02:10,720 --> 00:02:15,120
uh i'd be discussing that so

54
00:02:15,599 --> 00:02:20,399
yeah so a basic introduction about

55
00:02:19,520 --> 00:02:22,720
myself i

56
00:02:20,400 --> 00:02:23,920
am a researcher at firearm indian threat

57
00:02:22,720 --> 00:02:27,040
intelligence

58
00:02:23,920 --> 00:02:27,679
uh division i i basically try to

59
00:02:27,040 --> 00:02:30,640
understand

60
00:02:27,680 --> 00:02:31,599
and learn more about networks wireless

61
00:02:30,640 --> 00:02:34,559
data link layer

62
00:02:31,599 --> 00:02:36,079
memory uh computer memory per se and

63
00:02:34,560 --> 00:02:39,440
formal methods

64
00:02:36,080 --> 00:02:42,640
i'm actually a big fan of linux kernel

65
00:02:39,440 --> 00:02:44,170
and i i do small contributions into

66
00:02:42,640 --> 00:02:47,220
linux kernel as well

67
00:02:44,170 --> 00:02:47,220
[Music]

68
00:02:47,360 --> 00:02:54,000
so introduction what exactly is

69
00:02:50,400 --> 00:02:57,360
operational technology is our industry

70
00:02:54,000 --> 00:02:59,040
uh uh it's actually uh another name for

71
00:02:57,360 --> 00:03:01,760
industrial control systems or

72
00:02:59,040 --> 00:03:02,319
another name for cyber physical systems

73
00:03:01,760 --> 00:03:05,440
uh

74
00:03:02,319 --> 00:03:08,000
so ot basically is

75
00:03:05,440 --> 00:03:09,519
is most of the time in our context is

76
00:03:08,000 --> 00:03:13,519
that particular

77
00:03:09,519 --> 00:03:14,720
uh software automation which is deployed

78
00:03:13,519 --> 00:03:18,159
between

79
00:03:14,720 --> 00:03:21,519
the real production physical machines

80
00:03:18,159 --> 00:03:23,679
and other i.t systems of any company

81
00:03:21,519 --> 00:03:25,599
so when i say real production physical

82
00:03:23,680 --> 00:03:28,799
machines by that i mean

83
00:03:25,599 --> 00:03:30,879
uh it could be like uh uh

84
00:03:28,799 --> 00:03:32,080
you can say a sugar production industry

85
00:03:30,879 --> 00:03:34,159
could be a

86
00:03:32,080 --> 00:03:36,480
a power generation plant could be a

87
00:03:34,159 --> 00:03:38,159
nuclear reactor could be a dam control

88
00:03:36,480 --> 00:03:40,159
system could be a building control

89
00:03:38,159 --> 00:03:44,159
system it could be

90
00:03:40,159 --> 00:03:47,359
such similar applications of

91
00:03:44,159 --> 00:03:48,480
computing uh technologies that we see

92
00:03:47,360 --> 00:03:50,159
everywhere

93
00:03:48,480 --> 00:03:53,679
uh and yeah for that matter it could

94
00:03:50,159 --> 00:03:57,679
even be a signal control systems as well

95
00:03:53,680 --> 00:04:00,959
so why why uh ics is important it

96
00:03:57,680 --> 00:04:02,959
is important because these are the

97
00:04:00,959 --> 00:04:06,720
systems which are

98
00:04:02,959 --> 00:04:09,920
directly controlling and impacting the

99
00:04:06,720 --> 00:04:09,920
human lives per se

100
00:04:11,599 --> 00:04:15,359
as well they and and when we talk of

101
00:04:14,400 --> 00:04:17,759
same thing in

102
00:04:15,360 --> 00:04:19,519
in terms of production a physical

103
00:04:17,759 --> 00:04:20,160
production system they are directly

104
00:04:19,519 --> 00:04:22,079
impacting

105
00:04:20,160 --> 00:04:24,320
revenue of that particular organization

106
00:04:22,079 --> 00:04:28,479
as well

107
00:04:24,320 --> 00:04:30,880
now another part like why why nowadays

108
00:04:28,479 --> 00:04:34,800
threats are more prominent onto

109
00:04:30,880 --> 00:04:37,840
onto these ot systems it is so because

110
00:04:34,800 --> 00:04:42,320
uh the software's being run on such

111
00:04:37,840 --> 00:04:45,440
systems or on such computers are

112
00:04:42,320 --> 00:04:47,280
are kind of ancient honestly are have

113
00:04:45,440 --> 00:04:50,160
been developed in an era

114
00:04:47,280 --> 00:04:51,758
or by that mindset where they need to

115
00:04:50,160 --> 00:04:54,160
make work something

116
00:04:51,759 --> 00:04:54,880
uh security has never been taken in

117
00:04:54,160 --> 00:04:58,160
account

118
00:04:54,880 --> 00:04:59,199
in majority of the majority of such

119
00:04:58,160 --> 00:05:01,759
softwares

120
00:04:59,199 --> 00:05:03,120
so that is a big problem and being a low

121
00:05:01,759 --> 00:05:06,800
hanging fruit for

122
00:05:03,120 --> 00:05:09,840
bad guys they they usually try to

123
00:05:06,800 --> 00:05:12,880
approach such targets quickly and yes

124
00:05:09,840 --> 00:05:14,239
these devices or rather these systems

125
00:05:12,880 --> 00:05:16,159
these softwares

126
00:05:14,240 --> 00:05:17,759
have been left unpatched there is a

127
00:05:16,160 --> 00:05:20,160
reason for that

128
00:05:17,759 --> 00:05:21,520
one of the one of the most prominent

129
00:05:20,160 --> 00:05:23,680
reason is

130
00:05:21,520 --> 00:05:24,560
majority of these systems are producing

131
00:05:23,680 --> 00:05:27,600
a lot of

132
00:05:24,560 --> 00:05:30,080
lot of units per

133
00:05:27,600 --> 00:05:31,840
per minute and taking them down is

134
00:05:30,080 --> 00:05:34,960
directly proportional to

135
00:05:31,840 --> 00:05:38,479
losing that much amount of revenue from

136
00:05:34,960 --> 00:05:40,719
from the pocket uh people actually

137
00:05:38,479 --> 00:05:42,639
i mean as everybody of us know security

138
00:05:40,720 --> 00:05:45,840
is more of a trade-off

139
00:05:42,639 --> 00:05:48,160
uh people uh usually opt for

140
00:05:45,840 --> 00:05:49,198
not patching the things and not taking

141
00:05:48,160 --> 00:05:53,199
down their

142
00:05:49,199 --> 00:05:57,039
uh systems per se ah

143
00:05:53,199 --> 00:05:57,039
okay yeah

144
00:05:57,520 --> 00:06:03,758
so uh when i started into

145
00:06:00,720 --> 00:06:05,759
trade collection of threat intelligence

146
00:06:03,759 --> 00:06:06,880
division of industrial control systems

147
00:06:05,759 --> 00:06:10,240
of fire eye

148
00:06:06,880 --> 00:06:13,759
i i had a lot of questions

149
00:06:10,240 --> 00:06:15,759
like uh eventually there were a lot of

150
00:06:13,759 --> 00:06:18,160
samples which i used to gather on

151
00:06:15,759 --> 00:06:20,560
virustotal from various sources

152
00:06:18,160 --> 00:06:22,800
from honeypots and whatnot but then

153
00:06:20,560 --> 00:06:25,840
these were the typical questions

154
00:06:22,800 --> 00:06:28,639
i had i had in my mind before

155
00:06:25,840 --> 00:06:31,679
going further for analysis so what makes

156
00:06:28,639 --> 00:06:34,720
the binary interesting for analysis

157
00:06:31,680 --> 00:06:37,840
uh this is basically like okay

158
00:06:34,720 --> 00:06:39,039
uh so according to virustotal or maybe

159
00:06:37,840 --> 00:06:42,159
some another

160
00:06:39,039 --> 00:06:44,719
uh antivirus the binary may be shown as

161
00:06:42,160 --> 00:06:47,600
benign but is that still a benign thing

162
00:06:44,720 --> 00:06:50,880
or shall i wait for some time to see the

163
00:06:47,600 --> 00:06:54,240
malicious behavior or rather some other

164
00:06:50,880 --> 00:06:57,919
uh antivirus flagging it malicious

165
00:06:54,240 --> 00:06:58,319
no there has to be some something from

166
00:06:57,919 --> 00:07:02,159
my

167
00:06:58,319 --> 00:07:05,440
end to to basically deduce the behavior

168
00:07:02,160 --> 00:07:07,919
behavioral trade per se what does the

169
00:07:05,440 --> 00:07:09,680
binary do in legitimate mode of behavior

170
00:07:07,919 --> 00:07:11,840
this was one of the biggest

171
00:07:09,680 --> 00:07:13,280
problem biggest question i still am

172
00:07:11,840 --> 00:07:16,000
trying to answer

173
00:07:13,280 --> 00:07:18,400
uh it is so because as far as industrial

174
00:07:16,000 --> 00:07:20,960
control systems binaries are concerned

175
00:07:18,400 --> 00:07:22,400
they are not openly and easily available

176
00:07:20,960 --> 00:07:25,359
in the wild

177
00:07:22,400 --> 00:07:26,880
so getting hold of legitimate binary was

178
00:07:25,360 --> 00:07:30,560
yet another

179
00:07:26,880 --> 00:07:32,319
uh you can say a struggle i had faced

180
00:07:30,560 --> 00:07:34,160
what is the malicious activity being

181
00:07:32,319 --> 00:07:36,400
done by this binary

182
00:07:34,160 --> 00:07:37,919
this was the trickiest part as well

183
00:07:36,400 --> 00:07:40,960
reason being

184
00:07:37,919 --> 00:07:44,000
majority of the times what antivirus

185
00:07:40,960 --> 00:07:47,120
or for our sandbox interprets

186
00:07:44,000 --> 00:07:49,440
as a malicious activity may not always

187
00:07:47,120 --> 00:07:52,800
be a malicious activity for

188
00:07:49,440 --> 00:07:55,199
ot binary reason being the the

189
00:07:52,800 --> 00:07:56,479
act say like you know reaching out to a

190
00:07:55,199 --> 00:07:59,759
particular network

191
00:07:56,479 --> 00:08:01,199
device or you know reaching out or

192
00:07:59,759 --> 00:08:04,720
rather you know opening up

193
00:08:01,199 --> 00:08:05,680
another uh privilege process or

194
00:08:04,720 --> 00:08:08,240
something

195
00:08:05,680 --> 00:08:09,759
uh which according to sandbox or an

196
00:08:08,240 --> 00:08:11,919
anti-virus could be an

197
00:08:09,759 --> 00:08:14,400
could be a malicious activity can

198
00:08:11,919 --> 00:08:18,318
actually be a normal activity for the

199
00:08:14,400 --> 00:08:21,599
for the ot binary so this was another

200
00:08:18,319 --> 00:08:24,319
uh tricky question uh that

201
00:08:21,599 --> 00:08:26,479
usually pops up whenever there is a ics

202
00:08:24,319 --> 00:08:29,280
or ot binary

203
00:08:26,479 --> 00:08:29,758
and and the last question is is one of

204
00:08:29,280 --> 00:08:32,000
the

205
00:08:29,759 --> 00:08:33,760
essential one to be answered like what

206
00:08:32,000 --> 00:08:37,440
makes the binary and otr

207
00:08:33,760 --> 00:08:39,360
ics binary now this is this is the

208
00:08:37,440 --> 00:08:41,440
biggest

209
00:08:39,360 --> 00:08:42,800
this is the biggest thing or rather

210
00:08:41,440 --> 00:08:46,560
biggest challenge

211
00:08:42,799 --> 00:08:49,760
uh i i see here because most of the

212
00:08:46,560 --> 00:08:52,399
most of the uh bad

213
00:08:49,760 --> 00:08:53,680
binaries which are actually impacting or

214
00:08:52,399 --> 00:08:57,040
are

215
00:08:53,680 --> 00:08:58,880
creating a problem in operational tech

216
00:08:57,040 --> 00:09:02,800
environments

217
00:08:58,880 --> 00:09:04,399
are are actually affecting some another

218
00:09:02,800 --> 00:09:07,599
box and from there pivoting

219
00:09:04,399 --> 00:09:09,680
into ot setup

220
00:09:07,600 --> 00:09:11,680
having said that answering this

221
00:09:09,680 --> 00:09:14,800
particular question

222
00:09:11,680 --> 00:09:15,839
will probably cover most of uh or the

223
00:09:14,800 --> 00:09:19,519
rest of the talk

224
00:09:15,839 --> 00:09:22,399
here so uh

225
00:09:19,519 --> 00:09:22,880
yeah before going further we must we

226
00:09:22,399 --> 00:09:25,360
first

227
00:09:22,880 --> 00:09:26,399
need to know like what exactly is a need

228
00:09:25,360 --> 00:09:28,959
or rather what

229
00:09:26,399 --> 00:09:30,080
what makes the legit binary important in

230
00:09:28,959 --> 00:09:33,599
this whole

231
00:09:30,080 --> 00:09:37,519
uh endeavor per se so

232
00:09:33,600 --> 00:09:39,760
uh the problem with

233
00:09:37,519 --> 00:09:40,959
uh finding legit binaries or related

234
00:09:39,760 --> 00:09:43,920
behaviors per se

235
00:09:40,959 --> 00:09:45,920
is there is almost no documentation

236
00:09:43,920 --> 00:09:49,199
available around

237
00:09:45,920 --> 00:09:52,399
around the ot binaries or uh

238
00:09:49,200 --> 00:09:55,040
or the executables or or the

239
00:09:52,399 --> 00:09:55,600
you can say protocols or whatever being

240
00:09:55,040 --> 00:09:58,319
developed

241
00:09:55,600 --> 00:09:59,839
specific to industrial control systems

242
00:09:58,320 --> 00:10:00,640
reason being these are close source

243
00:09:59,839 --> 00:10:03,680
things

244
00:10:00,640 --> 00:10:06,319
uh these are vendor-specific things they

245
00:10:03,680 --> 00:10:07,359
are basically bound to that specific

246
00:10:06,320 --> 00:10:09,440
hardware

247
00:10:07,360 --> 00:10:12,480
which is being sold and not freely

248
00:10:09,440 --> 00:10:15,120
available so everything comes under the

249
00:10:12,480 --> 00:10:15,760
under the end user license of that

250
00:10:15,120 --> 00:10:18,320
particular

251
00:10:15,760 --> 00:10:19,680
license agreement of that particular

252
00:10:18,320 --> 00:10:22,160
manufacturer

253
00:10:19,680 --> 00:10:23,359
that makes it little more tricky to get

254
00:10:22,160 --> 00:10:26,640
hold of

255
00:10:23,360 --> 00:10:28,800
legit binaries yeah

256
00:10:26,640 --> 00:10:32,160
as i have already spoke of these are

257
00:10:28,800 --> 00:10:34,800
like specific to non-public devices

258
00:10:32,160 --> 00:10:35,600
uh when i say non-public devices these

259
00:10:34,800 --> 00:10:38,959
devices

260
00:10:35,600 --> 00:10:42,079
are tailored to very specific need and

261
00:10:38,959 --> 00:10:44,239
and it's been sold most of the time they

262
00:10:42,079 --> 00:10:47,120
are not freely available like our open

263
00:10:44,240 --> 00:10:48,160
source softwares a huge number of

264
00:10:47,120 --> 00:10:50,640
manufacturers

265
00:10:48,160 --> 00:10:52,000
and devices yes that is another big

266
00:10:50,640 --> 00:10:55,040
problem here

267
00:10:52,000 --> 00:10:59,519
uh so like uh for

268
00:10:55,040 --> 00:10:59,519
for for example say

269
00:10:59,600 --> 00:11:02,959
building control system there could be

270
00:11:01,519 --> 00:11:05,680
10 different vendors

271
00:11:02,959 --> 00:11:08,079
that says 10 different manufacturers so

272
00:11:05,680 --> 00:11:11,040
those 10 different manufacturers

273
00:11:08,079 --> 00:11:13,120
may be producing i mean one each of

274
00:11:11,040 --> 00:11:14,560
those 10 different manufacturers would

275
00:11:13,120 --> 00:11:18,000
be actually producing

276
00:11:14,560 --> 00:11:19,920
100 different versions of the building

277
00:11:18,000 --> 00:11:22,079
control system devices

278
00:11:19,920 --> 00:11:23,839
depending upon the requirement and need

279
00:11:22,079 --> 00:11:26,319
of the environment

280
00:11:23,839 --> 00:11:29,279
so that makes it i mean that makes the

281
00:11:26,320 --> 00:11:32,320
scope of this whole

282
00:11:29,279 --> 00:11:35,839
ics setup a little more

283
00:11:32,320 --> 00:11:37,760
huge now having said that

284
00:11:35,839 --> 00:11:39,839
more manufacturers producing more

285
00:11:37,760 --> 00:11:41,600
devices they are producing more software

286
00:11:39,839 --> 00:11:44,720
for those devices

287
00:11:41,600 --> 00:11:47,519
hence more functions more code

288
00:11:44,720 --> 00:11:47,519
more secrets

289
00:11:49,279 --> 00:11:53,600
okay yeah challenges yeah i have been i

290
00:11:53,040 --> 00:11:55,120
have been

291
00:11:53,600 --> 00:11:56,959
actually speaking of most of the

292
00:11:55,120 --> 00:12:00,480
challenges itself so far

293
00:11:56,959 --> 00:12:02,079
as i already said these are not usually

294
00:12:00,480 --> 00:12:05,120
documented things

295
00:12:02,079 --> 00:12:08,079
uh even the user manuals which we get

296
00:12:05,120 --> 00:12:09,040
along with the devices or along with the

297
00:12:08,079 --> 00:12:12,560
code

298
00:12:09,040 --> 00:12:13,279
are pretty brief they do not speak of

299
00:12:12,560 --> 00:12:16,319
anything

300
00:12:13,279 --> 00:12:19,519
uh uh related to their

301
00:12:16,320 --> 00:12:22,240
uh internal behavior uh

302
00:12:19,519 --> 00:12:24,399
cryptic behavior yes reason being many

303
00:12:22,240 --> 00:12:26,320
of the protocols and the

304
00:12:24,399 --> 00:12:28,320
many of the protocols and many of the

305
00:12:26,320 --> 00:12:30,560
things that are actually included in the

306
00:12:28,320 --> 00:12:33,279
devices or into the software

307
00:12:30,560 --> 00:12:34,719
are specific to the specific to the

308
00:12:33,279 --> 00:12:37,760
device itself

309
00:12:34,720 --> 00:12:38,000
and and and those things may or may not

310
00:12:37,760 --> 00:12:41,040
be

311
00:12:38,000 --> 00:12:45,200
possible by by a normally

312
00:12:41,040 --> 00:12:50,000
normally uh found or used

313
00:12:45,200 --> 00:12:53,279
uh you can say reverse engineering tools

314
00:12:50,000 --> 00:12:55,760
but that's not always the case um

315
00:12:53,279 --> 00:12:57,439
biggest another challenge is usually

316
00:12:55,760 --> 00:13:00,000
distributed in parts yes

317
00:12:57,440 --> 00:13:01,760
so even even if you get hold of uh an

318
00:13:00,000 --> 00:13:03,920
executable file

319
00:13:01,760 --> 00:13:05,920
you will not be trigger it completely in

320
00:13:03,920 --> 00:13:06,959
your debugger or in your environment

321
00:13:05,920 --> 00:13:10,479
because

322
00:13:06,959 --> 00:13:11,518
uh that they usually the big vendors

323
00:13:10,480 --> 00:13:16,320
they do not

324
00:13:11,519 --> 00:13:18,880
uh share complete executable in a single

325
00:13:16,320 --> 00:13:21,040
uh in a single instance so there is like

326
00:13:18,880 --> 00:13:23,279
they they basically share executable in

327
00:13:21,040 --> 00:13:25,680
part so part one part two part three

328
00:13:23,279 --> 00:13:28,000
so these all parts has to be in place in

329
00:13:25,680 --> 00:13:30,638
a specific sequence then only the

330
00:13:28,000 --> 00:13:32,560
uh uh you can say anticipated

331
00:13:30,639 --> 00:13:35,920
functionality would be triggered

332
00:13:32,560 --> 00:13:37,680
so that's another big problem with ics

333
00:13:35,920 --> 00:13:39,920
or ot binaries

334
00:13:37,680 --> 00:13:41,439
and yes they are they are acutely

335
00:13:39,920 --> 00:13:44,160
expensive

336
00:13:41,440 --> 00:13:46,399
the devices and the software part as

337
00:13:44,160 --> 00:13:46,399
well

338
00:13:46,560 --> 00:13:53,760
so channels to acquire binaries

339
00:13:50,320 --> 00:13:54,079
uh yeah so malware sample aggregators

340
00:13:53,760 --> 00:13:58,000
like

341
00:13:54,079 --> 00:14:00,719
virustotal and other uh places

342
00:13:58,000 --> 00:14:02,560
discussion forums yes uh many of the

343
00:14:00,720 --> 00:14:04,240
times we get a lot of

344
00:14:02,560 --> 00:14:05,680
interesting samples from discussion

345
00:14:04,240 --> 00:14:07,680
forums and

346
00:14:05,680 --> 00:14:09,120
in-house collection systems like honey

347
00:14:07,680 --> 00:14:13,199
pots and

348
00:14:09,120 --> 00:14:13,199
and other collection systems per se

349
00:14:14,320 --> 00:14:21,519
uh yeah so now let's start with the

350
00:14:18,160 --> 00:14:23,920
actual thing uh

351
00:14:21,519 --> 00:14:25,920
tests of deduction these are the these

352
00:14:23,920 --> 00:14:26,800
are the approaches we will be discussing

353
00:14:25,920 --> 00:14:29,279
in today's

354
00:14:26,800 --> 00:14:31,839
talk so first thing is static strings

355
00:14:29,279 --> 00:14:33,519
another is the strings in memory it's

356
00:14:31,839 --> 00:14:34,959
you can say it's an advanced version of

357
00:14:33,519 --> 00:14:36,720
statistics

358
00:14:34,959 --> 00:14:38,638
then there are yara rules we will be

359
00:14:36,720 --> 00:14:40,160
covering error rules at the last or we

360
00:14:38,639 --> 00:14:40,720
will be discussing couple of lines on

361
00:14:40,160 --> 00:14:44,319
that

362
00:14:40,720 --> 00:14:48,000
at the la at the end of uh session

363
00:14:44,320 --> 00:14:52,000
functions of interest then fuzzy hash

364
00:14:48,000 --> 00:14:53,120
or import hash api call sequences device

365
00:14:52,000 --> 00:14:56,160
probes network

366
00:14:53,120 --> 00:15:00,399
device probes and that's it so

367
00:14:56,160 --> 00:15:02,959
let's go to static strings so

368
00:15:00,399 --> 00:15:04,959
static strings is something so in

369
00:15:02,959 --> 00:15:06,959
usually

370
00:15:04,959 --> 00:15:08,160
linux boxes there is a basic command

371
00:15:06,959 --> 00:15:10,319
called strings

372
00:15:08,160 --> 00:15:11,680
if we run that particular command on a

373
00:15:10,320 --> 00:15:15,120
sample it gives us

374
00:15:11,680 --> 00:15:17,120
pretty much of understanding of uh

375
00:15:15,120 --> 00:15:19,440
the the strings which are statically

376
00:15:17,120 --> 00:15:22,079
available into that particular sample

377
00:15:19,440 --> 00:15:23,680
so i have shown here an output of a

378
00:15:22,079 --> 00:15:27,120
particular sample which

379
00:15:23,680 --> 00:15:30,319
is actually a plc related functionality

380
00:15:27,120 --> 00:15:31,920
which actually is uh delivering a plc

381
00:15:30,320 --> 00:15:35,279
related functionality

382
00:15:31,920 --> 00:15:38,319
so you can see uh uh

383
00:15:35,279 --> 00:15:40,240
the the output in the output itself it

384
00:15:38,320 --> 00:15:42,720
is revealing the string in the red

385
00:15:40,240 --> 00:15:45,920
saying plc station number or

386
00:15:42,720 --> 00:15:49,360
value received from plc or something so

387
00:15:45,920 --> 00:15:52,479
let me quickly go to uh

388
00:15:49,360 --> 00:15:54,639
demo of this or rather i'll cover the

389
00:15:52,480 --> 00:15:57,040
dynamic string as well and then i'll

390
00:15:54,639 --> 00:15:58,399
combine the demo for static and dynamic

391
00:15:57,040 --> 00:16:00,480
uh at the same time

392
00:15:58,399 --> 00:16:01,440
let me check if there are any questions

393
00:16:00,480 --> 00:16:03,040
guys

394
00:16:01,440 --> 00:16:04,480
please feel free to ask questions

395
00:16:03,040 --> 00:16:07,519
anytime you uh

396
00:16:04,480 --> 00:16:09,120
you have them or if you want to store it

397
00:16:07,519 --> 00:16:10,079
to the end of the session that would be

398
00:16:09,120 --> 00:16:12,399
awesome as well

399
00:16:10,079 --> 00:16:14,479
so the the thing is up to you you can

400
00:16:12,399 --> 00:16:17,279
decide on that

401
00:16:14,480 --> 00:16:17,279
okay sorry

402
00:16:17,680 --> 00:16:22,399
yeah so static strings demo we'll cover

403
00:16:21,040 --> 00:16:25,199
this soon

404
00:16:22,399 --> 00:16:27,120
dynamic strings so here uh here what

405
00:16:25,199 --> 00:16:29,359
we're trying to do is like we are trying

406
00:16:27,120 --> 00:16:30,240
to emulate that particular binary

407
00:16:29,360 --> 00:16:33,040
behavior

408
00:16:30,240 --> 00:16:33,839
into into a terminal and see like how

409
00:16:33,040 --> 00:16:36,800
how it

410
00:16:33,839 --> 00:16:38,880
it it might be uh producing a different

411
00:16:36,800 --> 00:16:41,758
set of strings apart from

412
00:16:38,880 --> 00:16:42,399
apart from a static strings so if you

413
00:16:41,759 --> 00:16:45,440
see the

414
00:16:42,399 --> 00:16:49,040
output here of this

415
00:16:45,440 --> 00:16:50,160
particular screenshot you can see there

416
00:16:49,040 --> 00:16:54,880
are like

417
00:16:50,160 --> 00:16:58,079
one two three four five six entries and

418
00:16:54,880 --> 00:17:01,199
for the same binary when i when i ran

419
00:16:58,079 --> 00:17:01,758
uh dynamic string extractor i have

420
00:17:01,199 --> 00:17:04,799
couple of

421
00:17:01,759 --> 00:17:06,240
more entries like for say uh clear

422
00:17:04,799 --> 00:17:08,879
screen received error

423
00:17:06,240 --> 00:17:09,839
and received bad message from plc these

424
00:17:08,880 --> 00:17:12,319
two entries are

425
00:17:09,839 --> 00:17:13,119
a newer one for for the dynamic string

426
00:17:12,319 --> 00:17:15,359
that

427
00:17:13,119 --> 00:17:16,639
that says like you know even dynamic

428
00:17:15,359 --> 00:17:19,760
strings gives you more

429
00:17:16,640 --> 00:17:22,640
uh inputs about what exactly is

430
00:17:19,760 --> 00:17:23,280
uh being stored on on the fly or when

431
00:17:22,640 --> 00:17:25,280
the

432
00:17:23,280 --> 00:17:27,119
sample is being executed or loaded in

433
00:17:25,280 --> 00:17:30,399
memory

434
00:17:27,119 --> 00:17:32,719
so demo part demo time so

435
00:17:30,400 --> 00:17:36,640
i probably need to stop sharing this and

436
00:17:32,720 --> 00:17:47,840
i'll start sharing my vm

437
00:17:36,640 --> 00:17:50,400
so give me a moment share screen

438
00:17:47,840 --> 00:17:50,399
sorry

439
00:17:58,840 --> 00:18:01,840
okay

440
00:18:15,360 --> 00:18:18,799
i probably need to share entire screen

441
00:18:18,160 --> 00:18:21,919
is that

442
00:18:18,799 --> 00:18:26,720
okay if i do that

443
00:18:21,919 --> 00:18:30,320
uh somebody from support can

444
00:18:26,720 --> 00:18:33,120
can you comment if it is okay to share

445
00:18:30,320 --> 00:18:33,120
complete screen

446
00:18:40,640 --> 00:18:47,120
okay i'll i'll share complete screen

447
00:18:43,919 --> 00:18:51,120
no problem so let's go to my

448
00:18:47,120 --> 00:18:57,840
virtual machine here

449
00:18:51,120 --> 00:18:57,840
let's run strings

450
00:19:02,880 --> 00:19:06,640
there's something open oh sure

451
00:19:07,200 --> 00:19:11,440
yeah so i'm running strings on a

452
00:19:10,640 --> 00:19:14,559
specific

453
00:19:11,440 --> 00:19:17,919
sample to

454
00:19:14,559 --> 00:19:21,360
check if something of interest pops up

455
00:19:17,919 --> 00:19:23,760
uh it's kind of

456
00:19:21,360 --> 00:19:25,280
huge i'm not sure if my string is

457
00:19:23,760 --> 00:19:27,280
visible

458
00:19:25,280 --> 00:19:30,720
can somebody please comment if my string

459
00:19:27,280 --> 00:19:39,840
is if my

460
00:19:30,720 --> 00:19:39,840
screen is visible

461
00:19:48,880 --> 00:19:52,160
oh sorry in comments part i missed on to

462
00:19:50,960 --> 00:19:55,520
the question

463
00:19:52,160 --> 00:19:55,520
uh why are they

464
00:19:57,039 --> 00:20:00,160
in part so a reason for that is like

465
00:19:58,960 --> 00:20:01,919
basically this is their intellectual

466
00:20:00,160 --> 00:20:06,240
property and which is actually

467
00:20:01,919 --> 00:20:08,000
uh which is actually

468
00:20:06,240 --> 00:20:10,880
definitely they will try to they will

469
00:20:08,000 --> 00:20:15,200
try to kind of uh

470
00:20:10,880 --> 00:20:15,200
uh you know protect their

471
00:20:16,080 --> 00:20:19,918
for all possible ways licensing is one

472
00:20:17,840 --> 00:20:21,360
part and having them shipped in multiple

473
00:20:19,919 --> 00:20:23,520
parts will actually help them

474
00:20:21,360 --> 00:20:25,120
infringing into their intellectual

475
00:20:23,520 --> 00:20:28,320
property to some more extent

476
00:20:25,120 --> 00:20:35,840
so that's the reason uh does that answer

477
00:20:28,320 --> 00:20:35,840
your question sarthak

478
00:20:37,919 --> 00:20:45,280
okay so by the time he answers let me

479
00:20:41,840 --> 00:20:47,039
go to the virtual machine so just

480
00:20:45,280 --> 00:20:49,678
if somebody can confirm my virtual

481
00:20:47,039 --> 00:20:52,799
machine is visible to

482
00:20:49,679 --> 00:21:03,840
to everybody to attendees

483
00:20:52,799 --> 00:21:03,840
that will help

484
00:21:30,000 --> 00:21:37,760
okay so let's grab this output with say

485
00:21:33,760 --> 00:21:40,879
plc ah nothing shown up

486
00:21:37,760 --> 00:21:42,960
let's say modbus yeah

487
00:21:40,880 --> 00:21:45,360
so we can say a lot of instances of

488
00:21:42,960 --> 00:21:48,640
modbus could be seen here

489
00:21:45,360 --> 00:21:50,240
uh the the entries in red tells us okay

490
00:21:48,640 --> 00:21:53,760
this is a modbus binary

491
00:21:50,240 --> 00:21:56,000
and yes this is actually an ics related

492
00:21:53,760 --> 00:21:58,000
functionality so yes this thing is of

493
00:21:56,000 --> 00:22:01,840
interest for us

494
00:21:58,000 --> 00:22:04,240
uh so if i run a dynamic

495
00:22:01,840 --> 00:22:04,959
memory extractor tool onto this same

496
00:22:04,240 --> 00:22:08,240
binary

497
00:22:04,960 --> 00:22:09,360
let's see what output it generates okay

498
00:22:08,240 --> 00:22:12,480
so there are more

499
00:22:09,360 --> 00:22:17,678
modbus entries as well we can see here

500
00:22:12,480 --> 00:22:17,679
and let's go for

501
00:22:17,840 --> 00:22:24,840
a tool so i would be using floss here to

502
00:22:21,200 --> 00:22:27,440
to show you the dynamic memory uh

503
00:22:24,840 --> 00:22:32,399
extraction or dynamic string

504
00:22:27,440 --> 00:22:32,400
extraction from memory so bf5

505
00:22:32,559 --> 00:22:34,960
image

506
00:22:36,480 --> 00:22:43,360
awesome so it actually extracted

507
00:22:39,600 --> 00:22:47,039
little more data i'll try griping it

508
00:22:43,360 --> 00:22:48,399
with modbus i'm not sure if this would

509
00:22:47,039 --> 00:22:51,600
run yeah it did

510
00:22:48,400 --> 00:22:54,240
so you can see the lib modbus

511
00:22:51,600 --> 00:22:55,520
outcome which was earlier not there has

512
00:22:54,240 --> 00:22:58,559
popped up

513
00:22:55,520 --> 00:23:02,320
and couple of more entries here

514
00:22:58,559 --> 00:23:04,799
which are related to again uh

515
00:23:02,320 --> 00:23:07,039
modbus functionality have been mentioned

516
00:23:04,799 --> 00:23:07,039
here

517
00:23:07,200 --> 00:23:09,840
okay

518
00:23:10,799 --> 00:23:15,200
and check if there are any comments

519
00:23:16,400 --> 00:23:20,720
okay so uh are you still not able to see

520
00:23:19,760 --> 00:23:23,840
my

521
00:23:20,720 --> 00:23:23,840
uh terminal

522
00:23:56,480 --> 00:23:59,200
i'm audible

523
00:24:01,760 --> 00:24:05,600
now we can hi yeah we can now see your

524
00:24:05,120 --> 00:24:09,039
screen

525
00:24:05,600 --> 00:24:09,039
your uh virtual machine

526
00:24:13,600 --> 00:24:16,959
no put it back to how it was not sure

527
00:24:16,000 --> 00:24:18,880
what's happening

528
00:24:16,960 --> 00:24:20,799
right now there that's that's now

529
00:24:18,880 --> 00:24:24,880
visible and we can see your

530
00:24:20,799 --> 00:24:24,879
your virtual machine oh

531
00:24:27,440 --> 00:24:35,520
hi can you hear me

532
00:24:32,640 --> 00:24:35,520
hi rushikesh

533
00:24:36,720 --> 00:24:40,080
rishikesh can you hear me

534
00:24:44,880 --> 00:24:48,400
russia rishikesh can you hear me okay so

535
00:24:47,600 --> 00:24:51,279
yes

536
00:24:48,400 --> 00:24:52,880
thank you for responding so these are

537
00:24:51,279 --> 00:24:56,000
two small demos so i have used

538
00:24:52,880 --> 00:24:58,000
floss floss tool here there is another

539
00:24:56,000 --> 00:24:59,559
tool if you want to do same thing on to

540
00:24:58,000 --> 00:25:00,880
windows there is a tool called

541
00:24:59,559 --> 00:25:02,960
strings.txt

542
00:25:00,880 --> 00:25:06,240
which actually extracts static as well

543
00:25:02,960 --> 00:25:06,240
as dynamic strings for you

544
00:25:09,840 --> 00:25:17,199
okay so having said that let's move away

545
00:25:13,440 --> 00:25:20,240
from the demo and let me stop

546
00:25:17,200 --> 00:25:20,240
sharing the screen

547
00:25:26,400 --> 00:25:35,200
okay awesome uh okay let's

548
00:25:29,600 --> 00:25:35,199
go back to presentation part

549
00:25:35,919 --> 00:25:40,000
yeah so those were two small demos uh

550
00:25:38,799 --> 00:25:43,120
another important thing

551
00:25:40,000 --> 00:25:47,039
is a thing is a functions of interest

552
00:25:43,120 --> 00:25:49,678
so like uh many times when we try to

553
00:25:47,039 --> 00:25:51,360
analyze the binary it's it's actually

554
00:25:49,679 --> 00:25:56,240
huge amount of effort

555
00:25:51,360 --> 00:25:58,799
uh but whether to decide on to

556
00:25:56,240 --> 00:26:00,000
analyze the binary or not it it can be

557
00:25:58,799 --> 00:26:02,639
done in a quickest

558
00:26:00,000 --> 00:26:04,159
quickest way possible so initial to test

559
00:26:02,640 --> 00:26:06,400
we have confirmed like from static

560
00:26:04,159 --> 00:26:08,480
strings and dynamic strings like yes

561
00:26:06,400 --> 00:26:10,159
there is something which is actually

562
00:26:08,480 --> 00:26:13,120
having a mention of plc

563
00:26:10,159 --> 00:26:15,039
or modbus for that matter but uh further

564
00:26:13,120 --> 00:26:17,120
going we just need to confirm whether

565
00:26:15,039 --> 00:26:19,840
that particular thing is of

566
00:26:17,120 --> 00:26:21,279
actually importance as far as industrial

567
00:26:19,840 --> 00:26:24,480
control systems

568
00:26:21,279 --> 00:26:25,360
are concerned so for that uh we will be

569
00:26:24,480 --> 00:26:27,279
doing a bit of

570
00:26:25,360 --> 00:26:28,399
uh we'll be doing a bit of reverse

571
00:26:27,279 --> 00:26:30,720
engineering

572
00:26:28,400 --> 00:26:31,520
uh for that i would be using the draft

573
00:26:30,720 --> 00:26:35,600
for that

574
00:26:31,520 --> 00:26:39,840
and let me share full screen again

575
00:26:35,600 --> 00:26:43,279
okay entire screen

576
00:26:39,840 --> 00:26:44,320
yeah so on the same set of samples i'll

577
00:26:43,279 --> 00:26:47,840
be

578
00:26:44,320 --> 00:26:50,879
doing a bit of analysis using gedra

579
00:26:47,840 --> 00:26:53,840
so let me close

580
00:26:50,880 --> 00:26:53,840
all the

581
00:26:54,400 --> 00:26:58,480
instances perfect so

582
00:27:00,159 --> 00:27:05,679
so here it is so i'll use this

583
00:27:02,720 --> 00:27:08,720
particular sample to

584
00:27:05,679 --> 00:27:11,840
do the basic deduction

585
00:27:08,720 --> 00:27:14,880
uh it would require me to analyze

586
00:27:11,840 --> 00:27:19,520
the whole binary so let it

587
00:27:14,880 --> 00:27:21,039
run through this analysis part

588
00:27:19,520 --> 00:27:23,279
okay meanwhile if there are any

589
00:27:21,039 --> 00:27:26,000
questions we can always

590
00:27:23,279 --> 00:27:27,120
answer them because this would take at

591
00:27:26,000 --> 00:27:34,799
least like

592
00:27:27,120 --> 00:27:39,199
30 odd seconds

593
00:27:34,799 --> 00:27:39,200
meanwhile let me check if the

594
00:27:41,760 --> 00:27:48,720
okay analysis is done let's go to

595
00:27:46,840 --> 00:27:52,399
functions yeah

596
00:27:48,720 --> 00:27:55,120
and i see some entry as a new modbus

597
00:27:52,399 --> 00:27:57,439
i don't know what that entry is i'll

598
00:27:55,120 --> 00:28:02,239
just go here

599
00:27:57,440 --> 00:28:06,320
and click on the entry to check

600
00:28:02,240 --> 00:28:09,120
what exactly it is so

601
00:28:06,320 --> 00:28:11,439
at least i got an understanding here

602
00:28:09,120 --> 00:28:14,879
that okay it is some function

603
00:28:11,440 --> 00:28:18,399
uh which is actually seeking a modbus

604
00:28:14,880 --> 00:28:18,399
port uh

605
00:28:18,640 --> 00:28:23,360
now now what i'll do is like i'll try

606
00:28:21,279 --> 00:28:26,080
decompiling that particular code it's

607
00:28:23,360 --> 00:28:29,360
actually decompiled here thanks to kidra

608
00:28:26,080 --> 00:28:30,480
but we can do it again if required so it

609
00:28:29,360 --> 00:28:33,120
is actually giving me

610
00:28:30,480 --> 00:28:35,039
complete understanding now saying okay

611
00:28:33,120 --> 00:28:37,279
this is uh

612
00:28:35,039 --> 00:28:38,559
this is some binary which is actually

613
00:28:37,279 --> 00:28:42,080
seeking some inputs and

614
00:28:38,559 --> 00:28:43,200
outputs from modbus related

615
00:28:42,080 --> 00:28:44,960
functionality

616
00:28:43,200 --> 00:28:46,640
and that gives me like a complete

617
00:28:44,960 --> 00:28:49,120
confidence on this binary now

618
00:28:46,640 --> 00:28:50,720
okay this binary has to be analyzed

619
00:28:49,120 --> 00:28:54,799
going further

620
00:28:50,720 --> 00:28:55,679
so i i i eventually i actually purposely

621
00:28:54,799 --> 00:28:57,840
cut down

622
00:28:55,679 --> 00:28:59,440
onto most of the parts in the hydra

623
00:28:57,840 --> 00:29:02,320
analysis as well because

624
00:28:59,440 --> 00:29:03,760
that would be a kind of how to score for

625
00:29:02,320 --> 00:29:06,240
our talk here

626
00:29:03,760 --> 00:29:07,679
and just to maintain the interest of

627
00:29:06,240 --> 00:29:10,799
attendees in the

628
00:29:07,679 --> 00:29:12,799
talk but if you have questions on this

629
00:29:10,799 --> 00:29:13,840
we can always take those questions now

630
00:29:12,799 --> 00:29:16,720
or offline

631
00:29:13,840 --> 00:29:17,120
uh whichever way you guys prefer so this

632
00:29:16,720 --> 00:29:21,520
is

633
00:29:17,120 --> 00:29:23,600
uh so this is the function of interest

634
00:29:21,520 --> 00:29:25,840
like that there would be another

635
00:29:23,600 --> 00:29:29,039
function of interest but it would be

636
00:29:25,840 --> 00:29:33,678
tricky to find so

637
00:29:29,039 --> 00:29:37,120
let's go back to let's go back to the

638
00:29:33,679 --> 00:29:40,320
presentation uh the demo have already

639
00:29:37,120 --> 00:29:42,639
shown you fuzzy hash and import hash

640
00:29:40,320 --> 00:29:45,039
another important and interesting thing

641
00:29:42,640 --> 00:29:47,840
i won't be covering demo here because

642
00:29:45,039 --> 00:29:49,679
that would take a lot of time uh to

643
00:29:47,840 --> 00:29:52,559
explain the demo i'll just

644
00:29:49,679 --> 00:29:53,120
explain you the brief uh of methodology

645
00:29:52,559 --> 00:29:55,520
so what

646
00:29:53,120 --> 00:29:56,639
here we are trying to do or what we did

647
00:29:55,520 --> 00:29:58,879
was like

648
00:29:56,640 --> 00:30:00,480
uh as we have seen in the functions of

649
00:29:58,880 --> 00:30:03,360
interest part like this particular

650
00:30:00,480 --> 00:30:06,559
function say new modbus outstation port

651
00:30:03,360 --> 00:30:10,240
function is actually uh uh

652
00:30:06,559 --> 00:30:13,039
is is used in this binary so uh we

653
00:30:10,240 --> 00:30:14,640
try to use the import hash to kind of

654
00:30:13,039 --> 00:30:16,000
calculate hash for that particular

655
00:30:14,640 --> 00:30:17,520
function and then comparing that

656
00:30:16,000 --> 00:30:20,320
particular hash with

657
00:30:17,520 --> 00:30:22,639
uh a pool of binaries and basically sort

658
00:30:20,320 --> 00:30:24,080
them out okay these these binaries are

659
00:30:22,640 --> 00:30:25,120
having this particular function in

660
00:30:24,080 --> 00:30:27,439
common so

661
00:30:25,120 --> 00:30:28,239
let's have uh let's have this function

662
00:30:27,440 --> 00:30:30,240
analyzed

663
00:30:28,240 --> 00:30:31,520
i mean let's have this part this set of

664
00:30:30,240 --> 00:30:36,960
binaries analyzed

665
00:30:31,520 --> 00:30:40,960
uh dedicatedly

666
00:30:36,960 --> 00:30:42,799
api sequences uh not fully relevant here

667
00:30:40,960 --> 00:30:44,640
but in majority of scenarios i have

668
00:30:42,799 --> 00:30:48,240
found this thing relevant here

669
00:30:44,640 --> 00:30:51,440
uh so what exactly api sequences

670
00:30:48,240 --> 00:30:54,880
uh uh creates

671
00:30:51,440 --> 00:30:57,120
relevance here is uh whenever

672
00:30:54,880 --> 00:30:58,640
whenever a specific function is being

673
00:30:57,120 --> 00:31:01,918
invoked by the

674
00:30:58,640 --> 00:31:05,840
executable or a binary it actually calls

675
00:31:01,919 --> 00:31:09,519
or it actually calls a set of apis

676
00:31:05,840 --> 00:31:13,199
those set of apis have been found unique

677
00:31:09,519 --> 00:31:17,039
to specific behavior

678
00:31:13,200 --> 00:31:18,240
now this behavior can be compared to the

679
00:31:17,039 --> 00:31:22,080
analogous behavior

680
00:31:18,240 --> 00:31:25,200
of a malware so say for a specific

681
00:31:22,080 --> 00:31:27,439
malware these these apis have been

682
00:31:25,200 --> 00:31:29,679
invoked in these these sequences so

683
00:31:27,440 --> 00:31:30,399
similar thing can be implemented here as

684
00:31:29,679 --> 00:31:33,840
well

685
00:31:30,399 --> 00:31:37,120
and we have had some evidences of such

686
00:31:33,840 --> 00:31:38,799
uh occurrences for which were specific

687
00:31:37,120 --> 00:31:40,719
to industrial control systems and i'm

688
00:31:38,799 --> 00:31:42,720
not talking of malware

689
00:31:40,720 --> 00:31:44,320
so the binaries which were specific to

690
00:31:42,720 --> 00:31:47,760
industrial control systems

691
00:31:44,320 --> 00:31:50,559
we had certain uh certain functions

692
00:31:47,760 --> 00:31:51,519
uh isolated and those functions were

693
00:31:50,559 --> 00:31:54,559
actually calling

694
00:31:51,519 --> 00:31:56,480
a very specific sequences of apis

695
00:31:54,559 --> 00:31:58,720
so that gave us another level of

696
00:31:56,480 --> 00:32:01,679
confidence okay this binary is specific

697
00:31:58,720 --> 00:32:03,840
to industrial control systems

698
00:32:01,679 --> 00:32:04,880
uh for example reading coils so yeah

699
00:32:03,840 --> 00:32:06,879
this thing

700
00:32:04,880 --> 00:32:08,880
so reading coils is actually a function

701
00:32:06,880 --> 00:32:12,080
we usually uh

702
00:32:08,880 --> 00:32:13,279
see in modbus related functions and a

703
00:32:12,080 --> 00:32:16,240
modbus related

704
00:32:13,279 --> 00:32:17,760
uh utilities so we will shortly see the

705
00:32:16,240 --> 00:32:19,440
demo of like how we can

706
00:32:17,760 --> 00:32:21,440
reach to the reading coils not

707
00:32:19,440 --> 00:32:23,760
specifically for api sequences but we

708
00:32:21,440 --> 00:32:28,399
will see this

709
00:32:23,760 --> 00:32:30,799
uh device probes another very important

710
00:32:28,399 --> 00:32:32,399
uh aspect or rather i would say one of

711
00:32:30,799 --> 00:32:34,480
the critical aspect

712
00:32:32,399 --> 00:32:36,158
why critical because uh most of the

713
00:32:34,480 --> 00:32:37,600
software's written for industrial

714
00:32:36,159 --> 00:32:40,720
control systems

715
00:32:37,600 --> 00:32:43,439
uh functions they have

716
00:32:40,720 --> 00:32:44,880
something or some hardware deployed

717
00:32:43,440 --> 00:32:48,799
somewhere in either

718
00:32:44,880 --> 00:32:51,039
uh either in either the same box or

719
00:32:48,799 --> 00:32:52,720
in the local radio or local network

720
00:32:51,039 --> 00:32:56,000
periphery

721
00:32:52,720 --> 00:32:59,120
and eventually these uh devices

722
00:32:56,000 --> 00:33:00,960
they are capturing some data in form of

723
00:32:59,120 --> 00:33:02,799
sensing or in form of some other

724
00:33:00,960 --> 00:33:04,240
readings and they are sending it back to

725
00:33:02,799 --> 00:33:06,480
the software

726
00:33:04,240 --> 00:33:07,360
for calculation purpose for inference

727
00:33:06,480 --> 00:33:11,120
purpose for

728
00:33:07,360 --> 00:33:13,760
for computation purpose so uh

729
00:33:11,120 --> 00:33:14,639
to to kind of you know check these

730
00:33:13,760 --> 00:33:16,640
probes

731
00:33:14,640 --> 00:33:18,880
i mean to basically connect to those

732
00:33:16,640 --> 00:33:20,640
devices there has to be certain remote

733
00:33:18,880 --> 00:33:23,360
procedure calls or some

734
00:33:20,640 --> 00:33:24,240
raw sockets or some type of mechanism in

735
00:33:23,360 --> 00:33:27,199
place

736
00:33:24,240 --> 00:33:28,080
in the software or in the ics binary

737
00:33:27,200 --> 00:33:29,760
which actually

738
00:33:28,080 --> 00:33:32,240
will be speaking to the device and will

739
00:33:29,760 --> 00:33:36,158
be fetching data from the device

740
00:33:32,240 --> 00:33:38,799
now having said that device probes play

741
00:33:36,159 --> 00:33:40,559
a crucial role here

742
00:33:38,799 --> 00:33:42,399
so let's see if there's demo yeah this

743
00:33:40,559 --> 00:33:45,840
demo so let me

744
00:33:42,399 --> 00:33:45,840
quickly spawn

745
00:33:46,320 --> 00:33:49,439
another okay let me check if i'm sharing

746
00:33:48,720 --> 00:33:53,840
whole screen

747
00:33:49,440 --> 00:33:53,840
yeah i'm sharing wall screen yeah

748
00:33:54,480 --> 00:34:03,840
so i'll shut down ketra here

749
00:33:59,440 --> 00:34:07,760
open up another shell

750
00:34:03,840 --> 00:34:08,399
yeah so so for this pro purpose i'll use

751
00:34:07,760 --> 00:34:11,119
uh

752
00:34:08,399 --> 00:34:14,480
i'll use the tool called radare and

753
00:34:11,119 --> 00:34:17,919
let's analyze a binary using radare

754
00:34:14,480 --> 00:34:21,440
so i ran the binary and i'm

755
00:34:17,918 --> 00:34:23,359
trying analyze that whole binary

756
00:34:21,440 --> 00:34:26,159
or rather the radar is trying analyze

757
00:34:23,359 --> 00:34:26,159
whole binary

758
00:34:29,119 --> 00:34:33,520
it can take a couple of seconds more

759
00:34:32,000 --> 00:34:35,280
meanwhile if

760
00:34:33,520 --> 00:34:36,719
there's questions no question okay

761
00:34:35,280 --> 00:34:40,000
awesome yeah

762
00:34:36,719 --> 00:34:40,000
the analysis is done

763
00:34:40,399 --> 00:34:49,279
so i'll try to check what all

764
00:34:44,079 --> 00:34:53,119
imports are there the list is huge

765
00:34:49,280 --> 00:34:53,359
so here i'll try use the basic behavior

766
00:34:53,119 --> 00:34:57,680
of

767
00:34:53,359 --> 00:35:02,400
any software for that matter so i

768
00:34:57,680 --> 00:35:05,440
try to find

769
00:35:02,400 --> 00:35:08,720
something which is opening file

770
00:35:05,440 --> 00:35:10,720
why opening file so f open the api

771
00:35:08,720 --> 00:35:13,680
or the system call for that matter in

772
00:35:10,720 --> 00:35:16,000
linux will actually try to

773
00:35:13,680 --> 00:35:17,118
open a file and we'll try to read or

774
00:35:16,000 --> 00:35:20,320
write over there

775
00:35:17,119 --> 00:35:23,119
so there would be an even question for

776
00:35:20,320 --> 00:35:25,119
from from you like why open file what

777
00:35:23,119 --> 00:35:26,960
what exactly is this trying to do

778
00:35:25,119 --> 00:35:29,280
so when we say we are trying to open a

779
00:35:26,960 --> 00:35:32,320
file in case of operating systems

780
00:35:29,280 --> 00:35:34,240
uh or in case of kernel

781
00:35:32,320 --> 00:35:35,599
they are trying to read something from

782
00:35:34,240 --> 00:35:38,000
some location

783
00:35:35,599 --> 00:35:39,280
and for most of the operating systems

784
00:35:38,000 --> 00:35:41,280
everything is fine

785
00:35:39,280 --> 00:35:42,640
your device is a file your memory is a

786
00:35:41,280 --> 00:35:46,960
file your

787
00:35:42,640 --> 00:35:48,400
your uh your normal mp3 file is also a

788
00:35:46,960 --> 00:35:50,800
file

789
00:35:48,400 --> 00:35:53,040
so having said that there are two

790
00:35:50,800 --> 00:35:55,040
entries let me

791
00:35:53,040 --> 00:35:58,160
show you here so for open file there are

792
00:35:55,040 --> 00:36:01,440
two entries so i'll try to

793
00:35:58,160 --> 00:36:03,759
go to first entry and see what's

794
00:36:01,440 --> 00:36:03,760
there

795
00:36:07,520 --> 00:36:14,000
so yeah i i could see there are more

796
00:36:11,040 --> 00:36:17,759
there are more uh there are more things

797
00:36:14,000 --> 00:36:21,520
available at that particular entry

798
00:36:17,760 --> 00:36:25,440
uh at at this particular thing

799
00:36:21,520 --> 00:36:26,079
so let's try to reach out to this

800
00:36:25,440 --> 00:36:29,680
particular

801
00:36:26,079 --> 00:36:33,280
address specifically

802
00:36:29,680 --> 00:36:35,919
so say seek this address

803
00:36:33,280 --> 00:36:38,400
and say pds and this will give me

804
00:36:35,920 --> 00:36:38,400
summary

805
00:36:38,880 --> 00:36:45,359
nothing interesting found so i'll go to

806
00:36:42,240 --> 00:36:49,439
another address here

807
00:36:45,359 --> 00:36:53,200
and i'll try to check see

808
00:36:49,440 --> 00:36:56,800
this one okay

809
00:36:53,200 --> 00:37:00,480
and then say pds and i got

810
00:36:56,800 --> 00:37:02,720
something interesting here so that says

811
00:37:00,480 --> 00:37:03,920
accessing coil register address field

812
00:37:02,720 --> 00:37:06,879
file

813
00:37:03,920 --> 00:37:08,000
so as i've already told you fee uh coils

814
00:37:06,880 --> 00:37:11,520
are usually

815
00:37:08,000 --> 00:37:12,320
um frequently accessed in the modbus

816
00:37:11,520 --> 00:37:14,560
protocol

817
00:37:12,320 --> 00:37:16,400
i have got an evidence okay the binary

818
00:37:14,560 --> 00:37:18,240
i'm trying to analyze is actually a

819
00:37:16,400 --> 00:37:21,760
modbus binary and is having a

820
00:37:18,240 --> 00:37:25,520
functionality which is related to modbus

821
00:37:21,760 --> 00:37:30,960
so so this explains

822
00:37:25,520 --> 00:37:32,960
another thing into the device probe

823
00:37:30,960 --> 00:37:34,400
so you can easily see that from this

824
00:37:32,960 --> 00:37:36,800
error it is evident that

825
00:37:34,400 --> 00:37:39,119
this particular software is trying to

826
00:37:36,800 --> 00:37:41,920
access a particular hardware

827
00:37:39,119 --> 00:37:43,839
a particular device which as at present

828
00:37:41,920 --> 00:37:46,160
is not available in my system

829
00:37:43,839 --> 00:37:47,200
so it through an error saying okay

830
00:37:46,160 --> 00:37:49,118
accessing

831
00:37:47,200 --> 00:37:50,399
error accessing coil register address

832
00:37:49,119 --> 00:37:52,320
field high

833
00:37:50,400 --> 00:37:54,560
right so here i got an evidence of a

834
00:37:52,320 --> 00:37:58,000
device probe now similar to this there

835
00:37:54,560 --> 00:38:01,359
could be network probes as well

836
00:37:58,000 --> 00:38:03,839
like there could be uh you can say uh

837
00:38:01,359 --> 00:38:05,440
evidence is found using maybe wireshark

838
00:38:03,839 --> 00:38:07,839
or tcp dump

839
00:38:05,440 --> 00:38:09,280
if we run this particular binary and

840
00:38:07,839 --> 00:38:11,440
before that if we trigger

841
00:38:09,280 --> 00:38:12,320
a wireshark so there would be an evident

842
00:38:11,440 --> 00:38:15,280
traffic can be

843
00:38:12,320 --> 00:38:18,079
monitored into wireshark saying okay uh

844
00:38:15,280 --> 00:38:18,079
this particular

845
00:38:19,520 --> 00:38:22,880
we can easily see that okay there is

846
00:38:21,119 --> 00:38:24,640
some packet actually trying to reach to

847
00:38:22,880 --> 00:38:26,560
so and so ip address

848
00:38:24,640 --> 00:38:28,560
or so and mac address or something like

849
00:38:26,560 --> 00:38:32,320
that but that gives us a clear

850
00:38:28,560 --> 00:38:35,359
evidence and idea about uh the device

851
00:38:32,320 --> 00:38:37,040
or the network network device pro okay

852
00:38:35,359 --> 00:38:38,480
so there's another slide on that

853
00:38:37,040 --> 00:38:40,720
so yeah there are embedded devices

854
00:38:38,480 --> 00:38:42,079
remote devices using traffic analysis we

855
00:38:40,720 --> 00:38:44,480
can easily

856
00:38:42,079 --> 00:38:45,839
check that thing not always reason being

857
00:38:44,480 --> 00:38:47,359
there could be some undocumented

858
00:38:45,839 --> 00:38:48,799
protocols on which this particular

859
00:38:47,359 --> 00:38:50,880
software is trying to reach to that

860
00:38:48,800 --> 00:38:53,599
particular device in such scenarios

861
00:38:50,880 --> 00:38:54,880
uh traffic analysis may not thoroughly

862
00:38:53,599 --> 00:38:57,359
help

863
00:38:54,880 --> 00:38:59,040
but yeah for that we basically need to

864
00:38:57,359 --> 00:39:01,839
place hooks onto the

865
00:38:59,040 --> 00:39:03,520
binary and kind of you know get data

866
00:39:01,839 --> 00:39:06,160
from the context switches

867
00:39:03,520 --> 00:39:08,720
that probably would be out of scope for

868
00:39:06,160 --> 00:39:10,879
the talk here

869
00:39:08,720 --> 00:39:12,720
yara rules i purposely kept this slide

870
00:39:10,880 --> 00:39:14,320
at kind of you know

871
00:39:12,720 --> 00:39:16,399
later part of the discussion reason

872
00:39:14,320 --> 00:39:17,680
being whatever the methods we have

873
00:39:16,400 --> 00:39:20,400
discussed before

874
00:39:17,680 --> 00:39:21,839
can very well be uh converted into yara

875
00:39:20,400 --> 00:39:24,880
rules

876
00:39:21,839 --> 00:39:26,560
uh i tried doing that on individual uh

877
00:39:24,880 --> 00:39:29,040
test case basis and i found that there

878
00:39:26,560 --> 00:39:31,119
was a lot of noise generated

879
00:39:29,040 --> 00:39:32,480
this noise can very well be avoided

880
00:39:31,119 --> 00:39:34,720
using using

881
00:39:32,480 --> 00:39:36,240
a lot of fine tuning mechanisms using a

882
00:39:34,720 --> 00:39:41,359
very specific

883
00:39:36,240 --> 00:39:45,118
uh using a very specific type of

884
00:39:41,359 --> 00:39:48,400
yara input things but yeah that requires

885
00:39:45,119 --> 00:39:48,400
a bit of patience

886
00:39:48,560 --> 00:39:53,119
um yeah for me it was initially little

887
00:39:51,359 --> 00:39:55,598
challenging but now

888
00:39:53,119 --> 00:39:57,200
over the period of time as as one is

889
00:39:55,599 --> 00:39:59,920
comfortable with writing error rules

890
00:39:57,200 --> 00:40:02,960
things go smooth

891
00:39:59,920 --> 00:40:04,640
so lessons learned

892
00:40:02,960 --> 00:40:06,480
failures and more failures and more

893
00:40:04,640 --> 00:40:09,200
failures and more failures

894
00:40:06,480 --> 00:40:10,560
why because again most of the things are

895
00:40:09,200 --> 00:40:12,480
not documented

896
00:40:10,560 --> 00:40:14,000
uh most of the efforts i'm doing i was

897
00:40:12,480 --> 00:40:15,839
really not aware whether they are going

898
00:40:14,000 --> 00:40:19,839
to lead to certain

899
00:40:15,839 --> 00:40:22,400
uh certain concrete uh

900
00:40:19,839 --> 00:40:23,759
uh output but yeah that's what research

901
00:40:22,400 --> 00:40:26,160
is so i'm fine with that there's no

902
00:40:23,760 --> 00:40:27,760
silver bullet to sort all types of ics

903
00:40:26,160 --> 00:40:29,759
or ot binaries in

904
00:40:27,760 --> 00:40:30,960
one particular go no that's that's not

905
00:40:29,760 --> 00:40:33,760
possible like

906
00:40:30,960 --> 00:40:35,280
uh like what we have seen for a modbus

907
00:40:33,760 --> 00:40:38,079
and plcs

908
00:40:35,280 --> 00:40:40,240
uh there would be something else for

909
00:40:38,079 --> 00:40:42,800
ic104 there would be something else for

910
00:40:40,240 --> 00:40:46,078
profinet there would be something for

911
00:40:42,800 --> 00:40:48,720
a heart so uh

912
00:40:46,079 --> 00:40:49,440
not everything could be uh combined into

913
00:40:48,720 --> 00:40:52,078
one

914
00:40:49,440 --> 00:40:53,119
uh research effort and could be used to

915
00:40:52,079 --> 00:40:55,920
you know sort

916
00:40:53,119 --> 00:40:57,599
ics binaries from a normal binding so

917
00:40:55,920 --> 00:41:00,560
yeah that's that's the problem

918
00:40:57,599 --> 00:41:02,079
results yeah so for for this uh

919
00:41:00,560 --> 00:41:04,000
approaches that i have shared with you

920
00:41:02,079 --> 00:41:06,000
earlier

921
00:41:04,000 --> 00:41:07,119
automation is pretty much possible for

922
00:41:06,000 --> 00:41:10,160
for individual

923
00:41:07,119 --> 00:41:12,480
technology uh we tried achieve

924
00:41:10,160 --> 00:41:14,480
uh automation in that part could not do

925
00:41:12,480 --> 00:41:17,760
complete automation but yeah for

926
00:41:14,480 --> 00:41:19,119
for most of the things uh we have

927
00:41:17,760 --> 00:41:22,800
reduced almost like

928
00:41:19,119 --> 00:41:25,839
40 percent uh effort overhead

929
00:41:22,800 --> 00:41:26,720
uh analysis was expediated because we

930
00:41:25,839 --> 00:41:30,640
already had

931
00:41:26,720 --> 00:41:33,040
a assorted set of binaries in place

932
00:41:30,640 --> 00:41:35,359
so that actually helped a lot in in

933
00:41:33,040 --> 00:41:38,640
expediating analysis

934
00:41:35,359 --> 00:41:39,759
help reducing clutter as well uh let me

935
00:41:38,640 --> 00:41:41,598
mention one more thing

936
00:41:39,760 --> 00:41:44,000
we were able to reduce the glitter we

937
00:41:41,599 --> 00:41:45,680
were not able to remove the clutter

938
00:41:44,000 --> 00:41:48,640
so yeah there were there was still

939
00:41:45,680 --> 00:41:52,078
certain false positives we got into the

940
00:41:48,640 --> 00:41:55,040
sorted samples so yeah so the

941
00:41:52,079 --> 00:41:56,720
clutter was not completely removed all

942
00:41:55,040 --> 00:41:58,160
in all we were able to set up a

943
00:41:56,720 --> 00:42:00,480
benchmark to sort

944
00:41:58,160 --> 00:42:02,240
uh operational technology binaries or

945
00:42:00,480 --> 00:42:04,580
ics binaries for further

946
00:42:02,240 --> 00:42:05,919
investigation and

947
00:42:04,580 --> 00:42:07,920
[Music]

948
00:42:05,920 --> 00:42:10,800
yeah that was kind of a benchmark we

949
00:42:07,920 --> 00:42:14,480
were able to set up there

950
00:42:10,800 --> 00:42:16,640
uh okay so that's most of my talk now

951
00:42:14,480 --> 00:42:18,800
uh bibliography these are some of the

952
00:42:16,640 --> 00:42:19,839
resources i have used to prepare the

953
00:42:18,800 --> 00:42:22,160
presentation

954
00:42:19,839 --> 00:42:23,040
for my work there are there are more

955
00:42:22,160 --> 00:42:25,200
resources

956
00:42:23,040 --> 00:42:26,079
if somebody of you is interested please

957
00:42:25,200 --> 00:42:29,520
reach out i'll

958
00:42:26,079 --> 00:42:31,680
share all the resources with you guys

959
00:42:29,520 --> 00:42:33,280
uh so now is the question and answer

960
00:42:31,680 --> 00:42:35,359
time if there is any question

961
00:42:33,280 --> 00:42:37,680
i would be really happy to answer if i

962
00:42:35,359 --> 00:42:39,920
know the answer

963
00:42:37,680 --> 00:42:41,440
excellent thank you stop sharing the

964
00:42:39,920 --> 00:42:45,760
screen

965
00:42:41,440 --> 00:42:48,880
rishikesh hello can you hear me

966
00:42:45,760 --> 00:42:50,079
hello russia cash

967
00:42:48,880 --> 00:42:52,240
tom you're not audible if you're

968
00:42:50,079 --> 00:42:55,599
speaking to me i am speaking to you

969
00:42:52,240 --> 00:42:58,399
uh am i audible to everyone else

970
00:42:55,599 --> 00:42:59,760
yeah i know you already but okay great

971
00:42:58,400 --> 00:43:01,520
great thank you rishikesh

972
00:42:59,760 --> 00:43:03,520
much appreciated if you could put your

973
00:43:01,520 --> 00:43:06,480
uh resources and your

974
00:43:03,520 --> 00:43:08,079
um etc into the slack channel that would

975
00:43:06,480 --> 00:43:10,720
be perfect and then everybody

976
00:43:08,079 --> 00:43:12,240
will have somewhere to to find it yeah

977
00:43:10,720 --> 00:43:14,640
i'll positively do that

978
00:43:12,240 --> 00:43:16,720
fantastic thank you you also answered

979
00:43:14,640 --> 00:43:18,400
your questions as you went along so we

980
00:43:16,720 --> 00:43:20,240
don't have any extra questions

981
00:43:18,400 --> 00:43:22,000
the only thing i would say is i'm glad

982
00:43:20,240 --> 00:43:25,359
to see that the uh demo

983
00:43:22,000 --> 00:43:28,560
gods are still alive and well in uh

984
00:43:25,359 --> 00:43:30,560
in india um yeah there's never a

985
00:43:28,560 --> 00:43:32,720
conference that goes by where a demo

986
00:43:30,560 --> 00:43:36,319
doesn't go smoothly you know so

987
00:43:32,720 --> 00:43:38,160
um yeah very good very good rishikesh uh

988
00:43:36,319 --> 00:43:40,640
thank you very much indeed

989
00:43:38,160 --> 00:43:42,240
for your talk uh very interesting thank

990
00:43:40,640 --> 00:43:45,440
you for elaborating on everything

991
00:43:42,240 --> 00:43:47,598
and uh yes if anybody would like to

992
00:43:45,440 --> 00:43:48,400
follow up with rashikesh please uh jump

993
00:43:47,599 --> 00:43:50,720
into the

994
00:43:48,400 --> 00:43:52,319
slack channels and hopefully rishikesh

995
00:43:50,720 --> 00:43:54,399
will be there as well

996
00:43:52,319 --> 00:43:56,079
yeah i thought before before concluding

997
00:43:54,400 --> 00:43:57,520
let me share last slide where i have

998
00:43:56,079 --> 00:44:00,000
actually mentioned my email and twitter

999
00:43:57,520 --> 00:44:01,920
so in case somebody want to reach me

1000
00:44:00,000 --> 00:44:03,359
uh on on those channels that will help

1001
00:44:01,920 --> 00:44:06,400
uh if that's okay

1002
00:44:03,359 --> 00:44:09,839
yeah i think sure

1003
00:44:06,400 --> 00:44:11,280
so if if the magicians in the back could

1004
00:44:09,839 --> 00:44:13,040
just take a quick look at that that'd be

1005
00:44:11,280 --> 00:44:16,640
great

1006
00:44:13,040 --> 00:44:21,040
if you get your screen up yeah

1007
00:44:16,640 --> 00:44:21,759
should be here and rishikesh i must say

1008
00:44:21,040 --> 00:44:24,560
i find

1009
00:44:21,760 --> 00:44:24,960
your choice of t-shirts very very good

1010
00:44:24,560 --> 00:44:28,000
i'm

1011
00:44:24,960 --> 00:44:29,920
really impressed inside 2017

1012
00:44:28,000 --> 00:44:32,160
excellent stuff glad to see yeah first

1013
00:44:29,920 --> 00:44:34,319
edition i was fortunate to attend that

1014
00:44:32,160 --> 00:44:37,520
yeah yeah yeah i've been to them all i'm

1015
00:44:34,319 --> 00:44:40,640
glad to say in one form or another so

1016
00:44:37,520 --> 00:44:42,960
but hey anyway here we go um here's uh

1017
00:44:40,640 --> 00:44:43,920
rishikesh yeah sorry excuse me

1018
00:44:42,960 --> 00:44:47,440
rushikesh's

1019
00:44:43,920 --> 00:44:50,720
uh email and twitter folks so please

1020
00:44:47,440 --> 00:44:54,160
obviously a lot of knowledge and talent

1021
00:44:50,720 --> 00:44:57,598
to tap into there reach out to him

1022
00:44:54,160 --> 00:44:57,598
on here brilliant

1023
00:44:59,119 --> 00:45:02,800
and that's excellent exit look at that

1024
00:45:02,079 --> 00:45:09,200
brilliant

1025
00:45:02,800 --> 00:45:09,200
thank you rishikesh really appreciate it

