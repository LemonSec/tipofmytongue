1
00:00:07,610 --> 00:00:10,520
Dave's vault

2
00:00:10,520 --> 00:00:14,460
welcome to the DevOps crusade the causes

3
00:00:14,460 --> 00:00:18,830
and casualties of AWS misconfigurations

4
00:00:18,830 --> 00:00:20,850
here's the ground that we're gonna cover

5
00:00:20,850 --> 00:00:23,820
since this is a security talk I'm going

6
00:00:23,820 --> 00:00:26,250
to start off with some victim shaming

7
00:00:26,250 --> 00:00:30,300
and then after that I will go into a

8
00:00:30,300 --> 00:00:33,480
two-ish minute rant on why I blame

9
00:00:33,480 --> 00:00:37,110
DevOps for security issues and that is

10
00:00:37,110 --> 00:00:38,820
followed by the technical side of the

11
00:00:38,820 --> 00:00:41,370
talk which nobody remembers where I

12
00:00:41,370 --> 00:00:43,049
explained the complexities of

13
00:00:43,049 --> 00:00:47,280
permissions in AWS and I will also go

14
00:00:47,280 --> 00:00:49,850
over some tools and tips on how to

15
00:00:49,850 --> 00:00:54,269
assess your your account your account

16
00:00:54,269 --> 00:00:58,920
security in AWS for free and then we'll

17
00:00:58,920 --> 00:01:01,140
conclude with some steps on how you can

18
00:01:01,140 --> 00:01:06,360
lock down your AWS account oh and if you

19
00:01:06,360 --> 00:01:08,880
happen to use a different cloud provider

20
00:01:08,880 --> 00:01:11,400
please stay tuned for the end because

21
00:01:11,400 --> 00:01:14,460
the tips I give will be ubiquitous no

22
00:01:14,460 --> 00:01:20,550
matter who you choose tell me if you've

23
00:01:20,550 --> 00:01:24,440
heard this story before a minor mistake

24
00:01:24,440 --> 00:01:31,650
led to a relatively massive leak it's

25
00:01:31,650 --> 00:01:33,510
not the first time we've been here

26
00:01:33,510 --> 00:01:37,950
has it we've had s3 data leaks affecting

27
00:01:37,950 --> 00:01:41,670
millions of users every 6 to 12 months

28
00:01:41,670 --> 00:01:45,090
for the past three years this is

29
00:01:45,090 --> 00:01:48,300
ridiculous especially since company a's

30
00:01:48,300 --> 00:01:51,570
can save billions and the millions of us

31
00:01:51,570 --> 00:01:55,860
who use these services and products can

32
00:01:55,860 --> 00:02:00,210
save lots of headache and misery with 17

33
00:02:00,210 --> 00:02:03,299
lines of json I'm talking about curly

34
00:02:03,299 --> 00:02:06,720
brackets key value player and key value

35
00:02:06,720 --> 00:02:12,260
pairs is here but I want to go over the

36
00:02:12,260 --> 00:02:15,209
2019 Capital One breach I want to

37
00:02:15,209 --> 00:02:17,790
emphasize that it is different

38
00:02:17,790 --> 00:02:20,640
and the reason why I want to go over

39
00:02:20,640 --> 00:02:22,920
this one with you is because it's not

40
00:02:22,920 --> 00:02:27,959
the usual open s3 bucket out on the

41
00:02:27,959 --> 00:02:28,560
Internet

42
00:02:28,560 --> 00:02:30,950
the folks at Capital One weren't stupid

43
00:02:30,950 --> 00:02:34,950
they they had it LA they had what they

44
00:02:34,950 --> 00:02:37,200
thought was locked down behind a web

45
00:02:37,200 --> 00:02:39,629
application firewall that was all that

46
00:02:39,629 --> 00:02:41,879
also just happened to be misconfigured

47
00:02:41,879 --> 00:02:44,940
the attacker was able to get through the

48
00:02:44,940 --> 00:02:48,590
firewall onto an ec2 instance and then

49
00:02:48,590 --> 00:02:51,680
connect to what I think

50
00:02:51,680 --> 00:02:54,480
multiple s3 buckets containing millions

51
00:02:54,480 --> 00:02:57,620
in customer data

52
00:02:57,620 --> 00:03:02,639
my thought is why that particular ec2

53
00:03:02,639 --> 00:03:05,459
instance why did it have that much

54
00:03:05,459 --> 00:03:08,940
access to s3 to download that much

55
00:03:08,940 --> 00:03:12,090
content that's the question I that's

56
00:03:12,090 --> 00:03:13,799
been buzzing around in my mind and the

57
00:03:13,799 --> 00:03:15,349
other question as follows

58
00:03:15,349 --> 00:03:18,629
what can I do to prevent this from going

59
00:03:18,629 --> 00:03:25,879
on in my own environment but first I

60
00:03:25,879 --> 00:03:29,239
want to blame my problems on DevOps I

61
00:03:29,239 --> 00:03:33,299
blame DevOps I blame country company

62
00:03:33,299 --> 00:03:35,699
cultures that prioritize pushing

63
00:03:35,699 --> 00:03:39,030
features at breakneck crackhead speeds I

64
00:03:39,030 --> 00:03:43,440
am we're building things fast and

65
00:03:43,440 --> 00:03:47,760
they're breaking down even faster but

66
00:03:47,760 --> 00:03:52,739
here's the thing the devops crusade it's

67
00:03:52,739 --> 00:03:53,329
over

68
00:03:53,329 --> 00:03:58,680
day one we are all we're all taking the

69
00:03:58,680 --> 00:04:02,400
DevOps kool-aid by now all of our we're

70
00:04:02,400 --> 00:04:03,959
moving our infrastructure to the cloud

71
00:04:03,959 --> 00:04:06,629
we are just screaming Automation at the

72
00:04:06,629 --> 00:04:09,599
top of our lungs we drank the DevOps

73
00:04:09,599 --> 00:04:12,590
kool-aid and we're paying for it of

74
00:04:12,590 --> 00:04:16,560
course there's another buzzword solution

75
00:04:16,560 --> 00:04:18,870
to buzzword problems I hear this bounce

76
00:04:18,870 --> 00:04:21,750
this term bounced around a lot dev SEC

77
00:04:21,750 --> 00:04:25,560
ops I don't like it it's bulky it's sell

78
00:04:25,560 --> 00:04:28,770
elegant and it's just throwing security

79
00:04:28,770 --> 00:04:31,590
in the middle of it to try to get

80
00:04:31,590 --> 00:04:36,000
curity people on board with this but

81
00:04:36,000 --> 00:04:41,460
part of me thinks to myself you know why

82
00:04:41,460 --> 00:04:42,240
stop there

83
00:04:42,240 --> 00:04:49,140
I mean we're all tea on the same team

84
00:04:49,140 --> 00:05:02,460
right I mean come on SEC security isn't

85
00:05:02,460 --> 00:05:04,500
something that you throw into the middle

86
00:05:04,500 --> 00:05:06,900
of things it's something that needs to

87
00:05:06,900 --> 00:05:11,990
be ingrained into everyday business so

88
00:05:11,990 --> 00:05:16,200
the DevOps I'm arguing for values

89
00:05:16,200 --> 00:05:17,790
genuine dialogue and communication

90
00:05:17,790 --> 00:05:20,190
between development security and

91
00:05:20,190 --> 00:05:22,650
operations we're not talking about just

92
00:05:22,650 --> 00:05:25,440
throwing around code faster and

93
00:05:25,440 --> 00:05:27,720
automated fashion between the teams and

94
00:05:27,720 --> 00:05:30,630
between the silos what I'm arguing for

95
00:05:30,630 --> 00:05:33,120
is that every developer be trained to

96
00:05:33,120 --> 00:05:35,250
understand the security and operations

97
00:05:35,250 --> 00:05:38,340
requirements so that they can write

98
00:05:38,340 --> 00:05:44,970
secure code that works that's the that's

99
00:05:44,970 --> 00:05:51,360
the vision I want to sow to and part of

100
00:05:51,360 --> 00:05:55,550
that is enabling the developer and

101
00:05:55,550 --> 00:05:59,010
neighboring developers to write that

102
00:05:59,010 --> 00:06:00,900
code and in order to do that they have

103
00:06:00,900 --> 00:06:04,860
to understand the complexities of s3 so

104
00:06:04,860 --> 00:06:08,040
what's so complicated about for access

105
00:06:08,040 --> 00:06:10,710
management and s3 well here's the

106
00:06:10,710 --> 00:06:13,890
details you've got two options

107
00:06:13,890 --> 00:06:17,130
and I say options in the same way that

108
00:06:17,130 --> 00:06:20,660
seatbelts and airbags are options

109
00:06:20,660 --> 00:06:24,960
theoretically you can use one or the

110
00:06:24,960 --> 00:06:27,750
other and feel relatively safe but let's

111
00:06:27,750 --> 00:06:29,690
use both

112
00:06:29,690 --> 00:06:32,880
the first system is I am roles and

113
00:06:32,880 --> 00:06:35,880
policies I am has a lot to do with users

114
00:06:35,880 --> 00:06:38,910
and the users and entities acting on

115
00:06:38,910 --> 00:06:41,729
those users behalf the second the second

116
00:06:41,729 --> 00:06:44,370
system our bucket policies and the

117
00:06:44,370 --> 00:06:47,100
bucket itself determines who it will

118
00:06:47,100 --> 00:06:53,310
open itself to for its resources now I

119
00:06:53,310 --> 00:06:56,490
am roles here's an example for I am

120
00:06:56,490 --> 00:07:00,330
roles as a developer I have access to

121
00:07:00,330 --> 00:07:03,960
source code for our ongoing projects for

122
00:07:03,960 --> 00:07:06,720
secure ideas as a consultant with secure

123
00:07:06,720 --> 00:07:10,110
ideas I also have the I also have the

124
00:07:10,110 --> 00:07:12,479
ability to just spin up a cracking

125
00:07:12,479 --> 00:07:14,970
server password cracking server when I'm

126
00:07:14,970 --> 00:07:21,289
on an engagement so I am roles are

127
00:07:21,289 --> 00:07:24,090
specifically associated with users or

128
00:07:24,090 --> 00:07:26,610
entities acting on users behalf and

129
00:07:26,610 --> 00:07:29,039
there have written statements attached

130
00:07:29,039 --> 00:07:31,919
to them that determine what they can do

131
00:07:31,919 --> 00:07:34,260
and what they can access that's what

132
00:07:34,260 --> 00:07:37,520
that's I am its users its user or

133
00:07:37,520 --> 00:07:40,289
service centered and I say service

134
00:07:40,289 --> 00:07:44,310
centered because a dus pipeline has a

135
00:07:44,310 --> 00:07:47,190
role within itself it's not necessarily

136
00:07:47,190 --> 00:07:49,740
human you wouldn't call it a user but

137
00:07:49,740 --> 00:07:53,099
AWS code pipeline takes code from any

138
00:07:53,099 --> 00:07:55,650
source that you give it whether it be s3

139
00:07:55,650 --> 00:07:59,460
or github what builds the code and then

140
00:07:59,460 --> 00:08:01,620
to pull and then deploys it to whatever

141
00:08:01,620 --> 00:08:04,260
wherever you want to do values it to

142
00:08:04,260 --> 00:08:08,550
wherever you want to go so that code

143
00:08:08,550 --> 00:08:11,190
pipeline has to have a role that allows

144
00:08:11,190 --> 00:08:14,300
it to get to grab it from the source and

145
00:08:14,300 --> 00:08:18,450
deploy the code it those policies have

146
00:08:18,450 --> 00:08:20,460
to be written into the code and we refer

147
00:08:20,460 --> 00:08:22,910
it to do this job and to do its function

148
00:08:22,910 --> 00:08:29,010
now for s3 bucket policies there's a lot

149
00:08:29,010 --> 00:08:32,580
that we can go into but I have to I have

150
00:08:32,580 --> 00:08:35,039
to cut myself off because we only have

151
00:08:35,039 --> 00:08:38,760
20 minutes together and so one things

152
00:08:38,760 --> 00:08:41,039
some things I will mention you can lock

153
00:08:41,039 --> 00:08:42,279
down with

154
00:08:42,279 --> 00:08:43,839
dick bucket you can lock it down with

155
00:08:43,839 --> 00:08:46,540
multi-factor authentication you can

156
00:08:46,540 --> 00:08:48,970
restrict the level of IP addresses that

157
00:08:48,970 --> 00:08:51,160
can access files on this s3 bucket

158
00:08:51,160 --> 00:08:54,579
there's so much you can do but if you

159
00:08:54,579 --> 00:08:57,819
understand and know I am roles those

160
00:08:57,819 --> 00:09:02,699
same principles apply to bucket policies

161
00:09:02,850 --> 00:09:07,300
so mastering so mastering permission

162
00:09:07,300 --> 00:09:10,209
structure and s3 involves mastering I I

163
00:09:10,209 --> 00:09:13,930
am roles and mastering s3 bucket

164
00:09:13,930 --> 00:09:19,629
policies but insecure use is three easy

165
00:09:19,629 --> 00:09:25,269
clicks away now this is beautiful its

166
00:09:25,269 --> 00:09:28,329
elegant it's what we saw it's probably

167
00:09:28,329 --> 00:09:32,350
what the CEO was sold on when you when

168
00:09:32,350 --> 00:09:33,939
it was brought up to move your

169
00:09:33,939 --> 00:09:36,459
infrastructure to AWS it's these types

170
00:09:36,459 --> 00:09:38,850
of things

171
00:09:38,850 --> 00:09:42,610
step one and this is a step by step

172
00:09:42,610 --> 00:09:46,329
process on how do I connect how do I

173
00:09:46,329 --> 00:09:50,529
access s3 through an ec2 instance so

174
00:09:50,529 --> 00:09:54,129
step one you create the I am role step

175
00:09:54,129 --> 00:09:58,259
two you attach the s3 full access policy

176
00:09:58,259 --> 00:10:02,319
this is built in this policy use wide

177
00:10:02,319 --> 00:10:06,449
open access to s3 is built into every

178
00:10:06,449 --> 00:10:11,709
single AWS account and takes or clicks

179
00:10:11,709 --> 00:10:16,870
to use then you just set up and launch

180
00:10:16,870 --> 00:10:19,420
an ec2 instance just spin it up and just

181
00:10:19,420 --> 00:10:21,519
click and through and follow the on line

182
00:10:21,519 --> 00:10:27,040
wizard now we go into how the secure use

183
00:10:27,040 --> 00:10:31,870
the right way to the right way to access

184
00:10:31,870 --> 00:10:34,839
s3 from the need situ instance and I'm

185
00:10:34,839 --> 00:10:37,240
not going to lie to you this is

186
00:10:37,240 --> 00:10:40,689
complicated but follow along with me if

187
00:10:40,689 --> 00:10:46,199
you will first you create an I am role

188
00:10:46,350 --> 00:10:51,370
then you create and edit as custom s3

189
00:10:51,370 --> 00:10:53,649
policy which involves you learning some

190
00:10:53,649 --> 00:10:56,110
JSON memorizing some of those

191
00:10:56,110 --> 00:10:58,570
you value pairs some of the actions that

192
00:10:58,570 --> 00:11:03,399
you're allowed to take on Amazon s3 we

193
00:11:03,399 --> 00:11:06,310
attach the custom we attach that custom

194
00:11:06,310 --> 00:11:09,760
policy then we set up and launch the ec2

195
00:11:09,760 --> 00:11:13,000
instance spin it up and you SSH into it

196
00:11:13,000 --> 00:11:15,399
you're in the Box you use the built in

197
00:11:15,399 --> 00:11:20,950
AWS CLI and access denied it doesn't

198
00:11:20,950 --> 00:11:25,899
work you can't chain you can't change

199
00:11:25,899 --> 00:11:28,930
the rules of ec2 instance while it's

200
00:11:28,930 --> 00:11:30,519
running so you have to tear down that

201
00:11:30,519 --> 00:11:33,730
ec2 instance go back to step two and

202
00:11:33,730 --> 00:11:36,040
continue this process over and over

203
00:11:36,040 --> 00:11:42,570
again this secure use of the platform is

204
00:11:42,570 --> 00:11:45,310
difficult and tedious and requires a lot

205
00:11:45,310 --> 00:11:49,510
of trial and error this is not something

206
00:11:49,510 --> 00:11:52,029
you just hate you just throw at the

207
00:11:52,029 --> 00:11:54,310
security team well it's three months in

208
00:11:54,310 --> 00:11:58,540
production and say secure this for

209
00:11:58,540 --> 00:12:01,209
massive web applications that are cloud

210
00:12:01,209 --> 00:12:04,540
native it could be this is the gist in

211
00:12:04,540 --> 00:12:09,029
the interaction between two services

212
00:12:09,029 --> 00:12:12,790
regular full-blown cloud apps could have

213
00:12:12,790 --> 00:12:15,820
dozens of services that interact in

214
00:12:15,820 --> 00:12:20,220
different ways and so this process gets

215
00:12:20,220 --> 00:12:22,209
exponentially more difficult

216
00:12:22,209 --> 00:12:25,240
the larger the app is and the more that

217
00:12:25,240 --> 00:12:30,910
you leverage Amazon Web Services so with

218
00:12:30,910 --> 00:12:33,910
that said how can we assess security on

219
00:12:33,910 --> 00:12:38,470
AWS resources well the one tool I'm

220
00:12:38,470 --> 00:12:39,940
going to show and present to you today

221
00:12:39,940 --> 00:12:43,149
it's freely available all for most

222
00:12:43,149 --> 00:12:45,940
people working on AWS is a tool that

223
00:12:45,940 --> 00:12:47,890
will cost you nothing no matter how much

224
00:12:47,890 --> 00:12:51,160
you use it it's not a free tool and then

225
00:12:51,160 --> 00:12:54,540
you get a bill for $400 next month and

226
00:12:54,540 --> 00:12:57,010
you go screaming at your devops guys

227
00:12:57,010 --> 00:13:01,750
like what are you doing it's absolutely

228
00:13:01,750 --> 00:13:03,790
free and it's accessible to anyone who

229
00:13:03,790 --> 00:13:08,170
uses it and with that

230
00:13:08,170 --> 00:13:11,210
we switch over we switch over to the

231
00:13:11,210 --> 00:13:19,840
live demo portion so here's an example

232
00:13:21,460 --> 00:13:27,680
here's an example of a bad as bad ec2

233
00:13:27,680 --> 00:13:29,780
server you could see two servers roll

234
00:13:29,780 --> 00:13:45,440
oh one second yep so this is an example

235
00:13:45,440 --> 00:13:47,350
of a bad

236
00:13:47,350 --> 00:13:50,600
that's three yesterday demo roll it only

237
00:13:50,600 --> 00:13:54,410
has one policy in it and you note the

238
00:13:54,410 --> 00:13:57,010
use of wildcards it's just four lines

239
00:13:57,010 --> 00:14:00,890
simple elegant beautiful right but if we

240
00:14:00,890 --> 00:14:03,590
go into but if we go into s3 and we

241
00:14:03,590 --> 00:14:05,960
actually look at all of these select all

242
00:14:05,960 --> 00:14:08,620
of the app options that it gives us

243
00:14:08,620 --> 00:14:12,460
everything is allowed green means go for

244
00:14:12,460 --> 00:14:15,920
everyone including you the legitimate

245
00:14:15,920 --> 00:14:19,040
user and an attacker who just happens to

246
00:14:19,040 --> 00:14:23,210
acquire the role so some of the so some

247
00:14:23,210 --> 00:14:25,910
of the permission structure or that you

248
00:14:25,910 --> 00:14:28,070
can get with full s3 access is

249
00:14:28,070 --> 00:14:30,110
ridiculous you can list all the you can

250
00:14:30,110 --> 00:14:31,720
do things like list all the buckets

251
00:14:31,720 --> 00:14:35,330
download you can delete entire buckets

252
00:14:35,330 --> 00:14:40,430
if you store logs in s3 or attacks or

253
00:14:40,430 --> 00:14:43,550
malicious activity someone with full s3

254
00:14:43,550 --> 00:14:46,070
access can go into the logs and race

255
00:14:46,070 --> 00:14:50,120
their traces there are multi room any

256
00:14:50,120 --> 00:14:53,800
things your way to many actions here

257
00:14:53,800 --> 00:14:56,420
that could be abused

258
00:14:56,420 --> 00:14:59,330
so let's tone it down to something more

259
00:14:59,330 --> 00:15:05,930
sane so here's an example of a more

260
00:15:05,930 --> 00:15:10,340
secure s3 policy and now this is

261
00:15:10,340 --> 00:15:13,370
something now this is the 17 lines of

262
00:15:13,370 --> 00:15:16,300
JSON that I'm talking about you're

263
00:15:16,300 --> 00:15:20,100
keeping it saying you're designating

264
00:15:20,100 --> 00:15:23,910
you're designating one bucket that

265
00:15:23,910 --> 00:15:25,890
happens to be some bucket and the

266
00:15:25,890 --> 00:15:28,860
objects within that one bucket you're

267
00:15:28,860 --> 00:15:31,230
allowed to access and the actions that

268
00:15:31,230 --> 00:15:34,860
you want is the simple use case of s3

269
00:15:34,860 --> 00:15:39,180
when you think of s3 you think I want to

270
00:15:39,180 --> 00:15:43,500
download files I want to upload files to

271
00:15:43,500 --> 00:15:45,510
some server that I don't want to manage

272
00:15:45,510 --> 00:15:48,180
and I want but I would like to refer to

273
00:15:48,180 --> 00:15:52,890
the server by name so that is yet so

274
00:15:52,890 --> 00:15:55,710
that's get object code object and the

275
00:15:55,710 --> 00:15:59,520
list bucket operation now when we run

276
00:15:59,520 --> 00:16:04,260
them now when we apply this and run the

277
00:16:04,260 --> 00:16:06,320
simulation again

278
00:16:06,320 --> 00:16:09,900
access denied and this is a good thing

279
00:16:09,900 --> 00:16:13,320
that means someone that means someone

280
00:16:13,320 --> 00:16:16,770
who has attached and has access to this

281
00:16:16,770 --> 00:16:20,580
role can't really you can't really use

282
00:16:20,580 --> 00:16:24,000
this particular role to abuse use it on

283
00:16:24,000 --> 00:16:26,790
multiple buckets on orbit and arbitrary

284
00:16:26,790 --> 00:16:30,300
bucket what they can do and we can and

285
00:16:30,300 --> 00:16:34,530
we can go into death I'm going to

286
00:16:34,530 --> 00:16:39,420
specify the object by using the AR n by

287
00:16:39,420 --> 00:16:42,740
just copying the air and

288
00:16:47,050 --> 00:16:54,550
ultimate in hand-eye coordination and

289
00:16:54,550 --> 00:16:57,860
minimal and I'm also going to specify

290
00:16:57,860 --> 00:17:00,950
the bucket by cop by copying the air in

291
00:17:00,950 --> 00:17:03,950
as well and all I'm doing is hey let's

292
00:17:03,950 --> 00:17:06,829
rerun the simulation rather than on star

293
00:17:06,829 --> 00:17:09,380
wildcard any resource here let's

294
00:17:09,380 --> 00:17:12,050
specifically designate one particular

295
00:17:12,050 --> 00:17:14,839
bucket or one set of objects here we're

296
00:17:14,839 --> 00:17:18,440
using wildcard thoughtfully we're using

297
00:17:18,440 --> 00:17:21,170
it specifically to refer to every object

298
00:17:21,170 --> 00:17:24,859
or every file within that bucket rather

299
00:17:24,859 --> 00:17:27,189
than all buckets are all resources

300
00:17:27,189 --> 00:17:33,620
throughout your AWS account now you run

301
00:17:33,620 --> 00:17:37,010
the simulation and it's the same thing

302
00:17:37,010 --> 00:17:41,720
right well when we go into lit and when

303
00:17:41,720 --> 00:17:44,120
we go to these specific permissions that

304
00:17:44,120 --> 00:17:46,760
we're going to we see that these

305
00:17:46,760 --> 00:17:50,630
specific permissions are allowed so you

306
00:17:50,630 --> 00:17:52,520
can list bucket meaning you can refer to

307
00:17:52,520 --> 00:17:54,920
this bucket by name which is kind of

308
00:17:54,920 --> 00:17:57,290
needed if you want to access the files

309
00:17:57,290 --> 00:18:00,770
got in at least know the whole folder

310
00:18:00,770 --> 00:18:06,530
name right get object with get object

311
00:18:06,530 --> 00:18:12,500
which get object which means you can

312
00:18:12,500 --> 00:18:14,390
download files and put objects which

313
00:18:14,390 --> 00:18:17,990
means you can create and upload files to

314
00:18:17,990 --> 00:18:27,920
s3 and that's the demo portion so with

315
00:18:27,920 --> 00:18:32,830
all that in mind and all that said whew

316
00:18:32,830 --> 00:18:43,629
wrong screen wrong screen there we go

317
00:18:47,470 --> 00:18:50,360
with that said how do we lock down our

318
00:18:50,360 --> 00:18:53,270
agent how do we lock down our AWS

319
00:18:53,270 --> 00:18:56,570
accounts first we need to understand the

320
00:18:56,570 --> 00:18:59,809
secure DevOps requires review and allows

321
00:18:59,809 --> 00:19:03,620
us of the code and the cloud what that

322
00:19:03,620 --> 00:19:07,370
means is is if your developers or rut or

323
00:19:07,370 --> 00:19:10,580
DevOps people or whomever is writing is

324
00:19:10,580 --> 00:19:12,799
writing and making this weird black

325
00:19:12,799 --> 00:19:16,340
magic make sure that you review what

326
00:19:16,340 --> 00:19:18,620
they're doing not just code wise but

327
00:19:18,620 --> 00:19:23,299
also in AWS have those changes mentioned

328
00:19:23,299 --> 00:19:25,610
in the pull request and then bake this

329
00:19:25,610 --> 00:19:27,860
into the process of development you can

330
00:19:27,860 --> 00:19:30,080
also use cloud formation templates and

331
00:19:30,080 --> 00:19:33,460
to have the cloud infrastructure

332
00:19:33,460 --> 00:19:36,470
embedded into the codebase term that

333
00:19:36,470 --> 00:19:38,809
gets thrown about is infrastructure as

334
00:19:38,809 --> 00:19:41,809
code it's really effective to help get

335
00:19:41,809 --> 00:19:45,080
eyes on on the changes that are being

336
00:19:45,080 --> 00:19:49,460
made and then make sure that you

337
00:19:49,460 --> 00:19:52,070
actually have the reviewer check for

338
00:19:52,070 --> 00:19:54,919
security issues at every pull request

339
00:19:54,919 --> 00:19:58,309
number two resources need to be isolated

340
00:19:58,309 --> 00:20:01,130
and given the least possible privileges

341
00:20:01,130 --> 00:20:05,510
so one easy way to do that it's just to

342
00:20:05,510 --> 00:20:08,360
have two separate AWS accounts one for

343
00:20:08,360 --> 00:20:10,700
production that's cut that's nice

344
00:20:10,700 --> 00:20:12,620
beautiful shiny product that's available

345
00:20:12,620 --> 00:20:16,130
for the customers and then the other for

346
00:20:16,130 --> 00:20:19,460
the half-baked works in progress so the

347
00:20:19,460 --> 00:20:21,860
devs mess up here they're not going to

348
00:20:21,860 --> 00:20:26,330
expose confidential data we understand

349
00:20:26,330 --> 00:20:28,610
that isolation is needed for code it

350
00:20:28,610 --> 00:20:31,549
needs to also be isolated for service

351
00:20:31,549 --> 00:20:33,950
infrastructure that has a price tag

352
00:20:33,950 --> 00:20:37,730
attached also make sure you that you

353
00:20:37,730 --> 00:20:39,980
have both that you be suspicious and

354
00:20:39,980 --> 00:20:42,710
weary of wild cards and not use full

355
00:20:42,710 --> 00:20:45,950
access permissions do not allow full

356
00:20:45,950 --> 00:20:51,669
access permissions number three

357
00:20:51,669 --> 00:20:54,649
understand that secured you a patches

358
00:20:54,649 --> 00:20:58,600
are bug fixes security improve

359
00:20:58,600 --> 00:21:01,420
our features and they need to be treated

360
00:21:01,420 --> 00:21:05,290
as such have the devs use tools like the

361
00:21:05,290 --> 00:21:07,330
AWS policy simulator to debug

362
00:21:07,330 --> 00:21:09,520
permissions and write code securely the

363
00:21:09,520 --> 00:21:14,530
first time around and please please for

364
00:21:14,530 --> 00:21:15,790
all that is sacred

365
00:21:15,790 --> 00:21:19,840
do not throw your massive cloud native

366
00:21:19,840 --> 00:21:22,090
application to the set team and tell

367
00:21:22,090 --> 00:21:23,890
them to lock it down after it's in

368
00:21:23,890 --> 00:21:26,380
production for three months while the

369
00:21:26,380 --> 00:21:29,650
fires are that we there are enough fires

370
00:21:29,650 --> 00:21:32,800
to put out this this dumpster fire can

371
00:21:32,800 --> 00:21:39,340
be prevented now using all the

372
00:21:39,340 --> 00:21:41,470
techniques that we've discussed we could

373
00:21:41,470 --> 00:21:43,990
prevent these headlines if the attacker

374
00:21:43,990 --> 00:21:46,540
got access to the ec2 instance and it

375
00:21:46,540 --> 00:21:48,700
only served a Maya role and only had

376
00:21:48,700 --> 00:21:52,030
access to one bucket we wouldn't have

377
00:21:52,030 --> 00:21:54,820
this massive leak affecting millions of

378
00:21:54,820 --> 00:21:58,180
people secure dev can create specific

379
00:21:58,180 --> 00:22:01,120
policies that save billions of dollars

380
00:22:01,120 --> 00:22:06,239
and save a lot of us a lot of misery

381
00:22:06,270 --> 00:22:09,430
security is a never-ending campaign and

382
00:22:09,430 --> 00:22:15,040
this sort of IT technology journey we're

383
00:22:15,040 --> 00:22:18,880
all trying to build and create beautiful

384
00:22:18,880 --> 00:22:22,630
things and change the world I believe

385
00:22:22,630 --> 00:22:24,610
we're all on the same side and we

386
00:22:24,610 --> 00:22:28,290
shouldn't be fighting against each other

387
00:22:28,800 --> 00:22:31,060
security and the concerns with that is

388
00:22:31,060 --> 00:22:33,490
just a never-ending campaign within that

389
00:22:33,490 --> 00:22:38,230
journey so my invitation to you is let

390
00:22:38,230 --> 00:22:42,640
the devs join in on the action they are

391
00:22:42,640 --> 00:22:45,340
eager to help you trust me you should

392
00:22:45,340 --> 00:22:49,000
see it when you should see it when we

393
00:22:49,000 --> 00:22:53,020
actually teach them that they can hack

394
00:22:53,020 --> 00:22:55,870
their own apps their eyes just light up

395
00:22:55,870 --> 00:22:58,679
and it's just like

396
00:23:03,040 --> 00:23:05,710
that's my invitation that's simply my

397
00:23:05,710 --> 00:23:09,760
invitation to you so invite the devs on

398
00:23:09,760 --> 00:23:13,150
the journey let's the devops crusade

399
00:23:13,150 --> 00:23:17,200
continue let's retake the cloud Davis

400
00:23:17,200 --> 00:23:18,900
vault

401
00:23:18,900 --> 00:23:21,829
[Applause]

