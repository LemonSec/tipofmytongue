1
00:00:15,700 --> 00:00:19,029
but the intro to HTTP we all know it

2
00:00:19,029 --> 00:00:20,710
right because we're all on the internet

3
00:00:20,710 --> 00:00:22,270
all the time everybody that's on their

4
00:00:22,270 --> 00:00:25,509
phone right now is using HTTP so and

5
00:00:25,509 --> 00:00:29,140
what does it stand for HTML to

6
00:00:29,140 --> 00:00:33,040
technology protocol and where is this

7
00:00:33,040 --> 00:00:35,470
yeah the cat thing YouTube's everywhere

8
00:00:35,470 --> 00:00:38,829
you know so okay the actual HTTP

9
00:00:38,829 --> 00:00:41,350
hypertext Transfer Protocol and

10
00:00:41,350 --> 00:00:44,100
according to Wikipedia the you know

11
00:00:44,100 --> 00:00:46,570
definitive source of all knowledge

12
00:00:46,570 --> 00:00:48,910
it stands for risking the hypertext is

13
00:00:48,910 --> 00:00:51,220
structured text that uses logical Lange

14
00:00:51,220 --> 00:00:53,770
say ka hyperlinks between nodes

15
00:00:53,770 --> 00:00:57,130
containing text HTTP is the protocol to

16
00:00:57,130 --> 00:00:59,860
exchange or transfer hypertext that's

17
00:00:59,860 --> 00:01:01,690
really drawn out to say we send stuff

18
00:01:01,690 --> 00:01:04,780
back and forth like we use links to send

19
00:01:04,780 --> 00:01:09,759
 okay so hmm yeah so as far as like

20
00:01:09,759 --> 00:01:12,700
the piece of HTTP that really ties in to

21
00:01:12,700 --> 00:01:16,540
rest HTTP communicates using verbs aka

22
00:01:16,540 --> 00:01:17,770
methods

23
00:01:17,770 --> 00:01:20,109
Suchi as well we're gonna touch on them

24
00:01:20,109 --> 00:01:23,249
in a second but I different methods to

25
00:01:23,249 --> 00:01:26,109
you know conduct business so to speak

26
00:01:26,109 --> 00:01:28,630
across the internet if we're receiving a

27
00:01:28,630 --> 00:01:30,909
webpage or sending data or whatnot

28
00:01:30,909 --> 00:01:33,639
so let's take a look at those so some of

29
00:01:33,639 --> 00:01:38,429
the methods we have I get post put patch

30
00:01:38,429 --> 00:01:42,159
delete and lots more because there's you

31
00:01:42,159 --> 00:01:44,649
know extensions and extensions to the

32
00:01:44,649 --> 00:01:48,579
protocol year after year so let's dive

33
00:01:48,579 --> 00:01:51,119
into them a little bit so I get request

34
00:01:51,119 --> 00:01:55,420
that requests were retrieves a record so

35
00:01:55,420 --> 00:01:58,749
as we go through these methods I've put

36
00:01:58,749 --> 00:02:01,990
some sequel equivalents in here which

37
00:02:01,990 --> 00:02:04,509
seems totally irrelevant to http but he

38
00:02:04,509 --> 00:02:06,759
does tie in later on so bear with me so

39
00:02:06,759 --> 00:02:08,740
an a get request is kind of like a

40
00:02:08,740 --> 00:02:11,200
select statement in sequel if you will

41
00:02:11,200 --> 00:02:14,560
like we're getting data so a post

42
00:02:14,560 --> 00:02:16,930
request creates a record the orange see

43
00:02:16,930 --> 00:02:20,670
Gordon it might be an insert the record

44
00:02:20,670 --> 00:02:24,760
must not already exist and I'll say this

45
00:02:24,760 --> 00:02:26,379
a couple of times as we go through but

46
00:02:26,379 --> 00:02:28,160
this is all

47
00:02:28,160 --> 00:02:29,960
according to the proper standard and

48
00:02:29,960 --> 00:02:34,250
whatnot hmm what's actually done is up

49
00:02:34,250 --> 00:02:37,520
to the developer anybody that's writing

50
00:02:37,520 --> 00:02:39,770
a web server can write whatever they

51
00:02:39,770 --> 00:02:42,230
want they can you know if they want to

52
00:02:42,230 --> 00:02:44,300
retrieve web pages using posts

53
00:02:44,300 --> 00:02:46,160
constantly and post between every single

54
00:02:46,160 --> 00:02:49,550
page they probably shouldn't be a web

55
00:02:49,550 --> 00:02:52,070
developer but you know think they can do

56
00:02:52,070 --> 00:02:56,270
it's my early web development days or

57
00:02:56,270 --> 00:02:59,920
rest days I should say using a flask I

58
00:02:59,920 --> 00:03:04,100
you know I saw you can specify different

59
00:03:04,100 --> 00:03:06,740
actions based on what type of request

60
00:03:06,740 --> 00:03:08,420
you have if it's a get request do this

61
00:03:08,420 --> 00:03:10,250
if it supposed to do this etcetera

62
00:03:10,250 --> 00:03:11,810
there's you know you can do whatever you

63
00:03:11,810 --> 00:03:13,720
want so that's the beauty of development

64
00:03:13,720 --> 00:03:17,320
in theory so okay um a put request

65
00:03:17,320 --> 00:03:20,630
updates a record mm-hmm if it doesn't

66
00:03:20,630 --> 00:03:23,510
exist it creates a new record so it's

67
00:03:23,510 --> 00:03:25,840
like an insert or an update in sequel a

68
00:03:25,840 --> 00:03:29,150
patch partial modification of existing

69
00:03:29,150 --> 00:03:32,270
record sequel updated again the you know

70
00:03:32,270 --> 00:03:35,180
the sequel comparison is not foolproof

71
00:03:35,180 --> 00:03:38,510
here but mm-hmm so delete I think we can

72
00:03:38,510 --> 00:03:39,950
guess what that does right deletes

73
00:03:39,950 --> 00:03:45,260
records okay so some examples here so if

74
00:03:45,260 --> 00:03:48,260
we're say loading ready calm which right

75
00:03:48,260 --> 00:03:50,000
it's gonna be our example today because

76
00:03:50,000 --> 00:03:52,520
that's the main site I'm constantly on

77
00:03:52,520 --> 00:03:56,209
all the time so I get requests is if

78
00:03:56,209 --> 00:03:58,280
you're loading up a web page so now I'm

79
00:03:58,280 --> 00:04:00,800
logging into my account that's a post

80
00:04:00,800 --> 00:04:03,200
request I'm sending my account data to

81
00:04:03,200 --> 00:04:05,750
the server um if I'm changing my

82
00:04:05,750 --> 00:04:07,100
password

83
00:04:07,100 --> 00:04:09,650
that's a put I'm updating that complete

84
00:04:09,650 --> 00:04:12,680
record for the password because if we

85
00:04:12,680 --> 00:04:14,780
change a password it's changing the

86
00:04:14,780 --> 00:04:17,329
entire piece not just like one character

87
00:04:17,329 --> 00:04:19,010
if you're you know storing passwords

88
00:04:19,010 --> 00:04:22,340
properly say I'm modifying my email

89
00:04:22,340 --> 00:04:24,410
address now I am changing like from calm

90
00:04:24,410 --> 00:04:26,360
to dotnet and the rest of the data can

91
00:04:26,360 --> 00:04:29,000
stay there that could in theory be a

92
00:04:29,000 --> 00:04:32,980
patch delete account can anybody guess

93
00:04:32,980 --> 00:04:35,520
don't you okay

94
00:04:35,520 --> 00:04:38,460
all right so mm-hmm now that we've gone

95
00:04:38,460 --> 00:04:42,870
through HTTP let's talk about rest so it

96
00:04:42,870 --> 00:04:44,520
stands for representational state

97
00:04:44,520 --> 00:04:48,470
transfer and this according to Wikipedia

98
00:04:48,470 --> 00:04:50,780
communication between client and server

99
00:04:50,780 --> 00:04:53,789
using Uniform Resource identifier zyou

100
00:04:53,789 --> 00:04:56,639
our eyes and HTTP methods to identify

101
00:04:56,639 --> 00:04:59,069
objects and perform actions or functions

102
00:04:59,069 --> 00:05:05,970
okay so and the HTTP headers can contain

103
00:05:05,970 --> 00:05:08,880
authorization information so essentially

104
00:05:08,880 --> 00:05:13,610
what this means is we're using those

105
00:05:13,610 --> 00:05:19,830
HTTP calls to function as an API over

106
00:05:19,830 --> 00:05:23,389
the Internet so rather than saying

107
00:05:23,389 --> 00:05:26,460
rather than using some advanced API we

108
00:05:26,460 --> 00:05:28,919
can say like my example with flask

109
00:05:28,919 --> 00:05:33,900
before mmm if a get request goes to this

110
00:05:33,900 --> 00:05:36,599
URL perform this action if it's a post

111
00:05:36,599 --> 00:05:39,180
request do this if it's this URL do that

112
00:05:39,180 --> 00:05:42,599
and based on the path of the URL it

113
00:05:42,599 --> 00:05:45,210
really is can be object-oriented we can

114
00:05:45,210 --> 00:05:48,449
say like the user path like ready com

115
00:05:48,449 --> 00:05:51,419
slash user slash whomever and we're

116
00:05:51,419 --> 00:05:53,099
going to get to that in a second that's

117
00:05:53,099 --> 00:05:55,889
an object and then perform various

118
00:05:55,889 --> 00:05:58,560
methods on that object once you start

119
00:05:58,560 --> 00:06:00,719
you know going in a path passed that

120
00:06:00,719 --> 00:06:04,680
name itself so an example here say I

121
00:06:04,680 --> 00:06:06,210
want to view my account

122
00:06:06,210 --> 00:06:09,740
get ready comms /eu that's the user

123
00:06:09,740 --> 00:06:12,779
specifier there so I have a green VHM

124
00:06:12,779 --> 00:06:16,169
now if I want to view my comments so

125
00:06:16,169 --> 00:06:18,360
that would be another get requesting to

126
00:06:18,360 --> 00:06:22,110
my user account and then slash comments

127
00:06:22,110 --> 00:06:24,900
so like I said that's uh hmm

128
00:06:24,900 --> 00:06:27,900
that's working at say a comments

129
00:06:27,900 --> 00:06:32,729
property of my user object now if I want

130
00:06:32,729 --> 00:06:35,190
to view my messages you know I can't

131
00:06:35,190 --> 00:06:37,139
nobody obviously not everybody can just

132
00:06:37,139 --> 00:06:40,110
log in and view my private messages

133
00:06:40,110 --> 00:06:41,909
hopefully you need some kind of

134
00:06:41,909 --> 00:06:43,740
authentication and you can either send

135
00:06:43,740 --> 00:06:46,740
that data in the post or you can send it

136
00:06:46,740 --> 00:06:47,590
in an authorization

137
00:06:47,590 --> 00:06:51,460
header so that might be get ready calm

138
00:06:51,460 --> 00:06:54,510
slash the message slash inbox and now

139
00:06:54,510 --> 00:06:57,070
we're going to the message path rather

140
00:06:57,070 --> 00:07:00,100
than the user path and so that's a

141
00:07:00,100 --> 00:07:01,960
different type of object or a different

142
00:07:01,960 --> 00:07:04,750
a different database that I might be

143
00:07:04,750 --> 00:07:06,930
looking at or what have you

144
00:07:06,930 --> 00:07:09,760
okay so if I want to view my sent

145
00:07:09,760 --> 00:07:12,900
messages again requires authorization I

146
00:07:12,900 --> 00:07:16,150
another get request to the message

147
00:07:16,150 --> 00:07:20,430
object say and then the center path

148
00:07:20,430 --> 00:07:23,320
send a message and we'll keep you know a

149
00:07:23,320 --> 00:07:27,690
couple more of these so post so you see

150
00:07:27,690 --> 00:07:30,670
retrieving data get request sending data

151
00:07:30,670 --> 00:07:37,210
post requests and we'll go into a little

152
00:07:37,210 --> 00:07:39,660
more program specific stuff right now so

153
00:07:39,660 --> 00:07:42,960
here's my username that's a user object

154
00:07:42,960 --> 00:07:46,450
now the get request for that might be

155
00:07:46,450 --> 00:07:49,690
the equivalent of I eat green B hmm that

156
00:07:49,690 --> 00:07:52,390
is the instance of my user object get

157
00:07:52,390 --> 00:07:55,750
profile so we're calling a method based

158
00:07:55,750 --> 00:07:59,050
on the path of the URL now if I want to

159
00:07:59,050 --> 00:08:01,600
view my comments we showed the comment

160
00:08:01,600 --> 00:08:05,980
path that's a comments object now it's a

161
00:08:05,980 --> 00:08:09,880
property of my user object so the get

162
00:08:09,880 --> 00:08:12,250
request for that might be the equivalent

163
00:08:12,250 --> 00:08:17,040
of a green bhm comments get comments and

164
00:08:17,040 --> 00:08:20,590
the post requests might be meet comments

165
00:08:20,590 --> 00:08:22,630
and then past the comment text and

166
00:08:22,630 --> 00:08:24,970
whatever other metadata as a parameter

167
00:08:24,970 --> 00:08:29,110
to that hall so is everybody see sort of

168
00:08:29,110 --> 00:08:32,350
how this equates like path and and HTTP

169
00:08:32,350 --> 00:08:35,380
method equals you know normal API call

170
00:08:35,380 --> 00:08:39,760
and once you sort of figure this out it

171
00:08:39,760 --> 00:08:43,120
makes programming for a mobile app or

172
00:08:43,120 --> 00:08:45,640
what have you a lot easier because now

173
00:08:45,640 --> 00:08:48,120
you can really see ok I'm designing

174
00:08:48,120 --> 00:08:51,820
again flask say I want to perform this

175
00:08:51,820 --> 00:08:55,930
function so design whatever method

176
00:08:55,930 --> 00:08:59,910
within the get for this path and

177
00:08:59,910 --> 00:09:03,570
now my app just calls this URL with a

178
00:09:03,570 --> 00:09:09,300
get request and my function happens so

179
00:09:09,300 --> 00:09:13,110
again continuing through this the inbox

180
00:09:13,110 --> 00:09:16,950
might be a list of message objects and a

181
00:09:16,950 --> 00:09:19,350
get request might be my user object get

182
00:09:19,350 --> 00:09:25,460
messages and message / compose might be

183
00:09:25,490 --> 00:09:28,590
there we go a send message so we're

184
00:09:28,590 --> 00:09:31,800
creating a new message object via the

185
00:09:31,800 --> 00:09:34,260
send message method of the eggwin

186
00:09:34,260 --> 00:09:36,830
Beecham object instance

187
00:09:36,830 --> 00:09:40,950
okay so json i it's the preferred data

188
00:09:40,950 --> 00:09:42,240
format for rest

189
00:09:42,240 --> 00:09:44,130
i've seen all kinds of different data

190
00:09:44,130 --> 00:09:46,530
formats used but it's the most readable

191
00:09:46,530 --> 00:09:49,470
in my opinion and it's also very

192
00:09:49,470 --> 00:09:52,050
lightweight so it stands for JavaScript

193
00:09:52,050 --> 00:09:54,810
object notation and all it really is is

194
00:09:54,810 --> 00:09:57,270
key value pairs and this is the same

195
00:09:57,270 --> 00:10:01,590
thing as a Python dictionary so they're

196
00:10:01,590 --> 00:10:03,740
signified by curly brackets or braces

197
00:10:03,740 --> 00:10:08,220
and the as far as the values go they can

198
00:10:08,220 --> 00:10:11,580
be text lists or key value pairs so we

199
00:10:11,580 --> 00:10:13,500
can contain other types of data within

200
00:10:13,500 --> 00:10:15,860
this but it's all text-based

201
00:10:15,860 --> 00:10:19,710
so here's an example so my username and

202
00:10:19,710 --> 00:10:23,130
you see that curly brace starting the

203
00:10:23,130 --> 00:10:25,620
key is username and the value is a queen

204
00:10:25,620 --> 00:10:29,520
b hm twitter is the key at dignity hm

205
00:10:29,520 --> 00:10:32,550
you got the idea now here we got

206
00:10:32,550 --> 00:10:34,410
comments and you see the square bracket

207
00:10:34,410 --> 00:10:37,530
next to it that signifies a list and or

208
00:10:37,530 --> 00:10:39,510
maybe an array depending on what your

209
00:10:39,510 --> 00:10:42,360
language of choice is so now we've got a

210
00:10:42,360 --> 00:10:44,580
list of different comment objects and

211
00:10:44,580 --> 00:10:45,780
within that and then you see the first

212
00:10:45,780 --> 00:10:49,440
curly brace then the ID and then the

213
00:10:49,440 --> 00:10:53,040
text so we haven't that's a a comment

214
00:10:53,040 --> 00:10:56,520
object and then the comma signifies the

215
00:10:56,520 --> 00:10:59,190
next object in a list then we have

216
00:10:59,190 --> 00:11:01,230
another comment object and we can have

217
00:11:01,230 --> 00:11:04,390
as many of those as there might be so

218
00:11:04,390 --> 00:11:11,770
hmm yeah so all this gets passed in the

219
00:11:11,770 --> 00:11:14,580
body of the request itself and

220
00:11:14,580 --> 00:11:18,880
everything is good we can also pass data

221
00:11:18,880 --> 00:11:21,910
say just in the URL itself you know a

222
00:11:21,910 --> 00:11:24,130
lot of times with PHP you see that you

223
00:11:24,130 --> 00:11:27,060
know question mark key equals

224
00:11:27,060 --> 00:11:29,830
what-have-you ampersand and you know you

225
00:11:29,830 --> 00:11:32,200
have a ridiculously long URL with all

226
00:11:32,200 --> 00:11:35,350
kinds of parameters so where you can do

227
00:11:35,350 --> 00:11:37,450
a combination of those two maybe the odd

228
00:11:37,450 --> 00:11:39,580
I mean maybe the authentication goes in

229
00:11:39,580 --> 00:11:41,830
the URL and then the rest of the request

230
00:11:41,830 --> 00:11:43,660
is in the data again it's up to you

231
00:11:43,660 --> 00:11:46,320
developing the app and the server that

232
00:11:46,320 --> 00:11:49,090
corresponds with it so what are some

233
00:11:49,090 --> 00:11:53,160
benefits of rest the readable design

234
00:11:53,160 --> 00:11:55,570
it's easy to determine the function

235
00:11:55,570 --> 00:11:57,940
based on the URL like we said based on

236
00:11:57,940 --> 00:11:59,530
the path it's really easy to determine

237
00:11:59,530 --> 00:12:02,230
what's happening here the first piece of

238
00:12:02,230 --> 00:12:06,070
that user account path my username okay

239
00:12:06,070 --> 00:12:07,510
we're looking at the user object then

240
00:12:07,510 --> 00:12:09,520
slash comments okay we're looking at the

241
00:12:09,520 --> 00:12:13,120
comments of that user object it's a

242
00:12:13,120 --> 00:12:14,410
lightweight we were just talking about

243
00:12:14,410 --> 00:12:17,170
how the you know it's really focused on

244
00:12:17,170 --> 00:12:21,580
JSON and text preferably and yeah it

245
00:12:21,580 --> 00:12:23,830
really passes as what it was possible

246
00:12:23,830 --> 00:12:26,230
over the web so because there's so many

247
00:12:26,230 --> 00:12:27,970
mobile apps are using rest to

248
00:12:27,970 --> 00:12:29,830
communicate that's really important when

249
00:12:29,830 --> 00:12:32,470
you have eliminate data it's also

250
00:12:32,470 --> 00:12:34,690
stateless meaning you don't need to keep

251
00:12:34,690 --> 00:12:35,920
a constant connection with the server

252
00:12:35,920 --> 00:12:39,010
every request has authorization data so

253
00:12:39,010 --> 00:12:41,440
that way the server doesn't need to keep

254
00:12:41,440 --> 00:12:43,660
track of who's connected and logged in

255
00:12:43,660 --> 00:12:45,730
and all that if you speak to the server

256
00:12:45,730 --> 00:12:47,590
with a valid authorization header

257
00:12:47,590 --> 00:12:50,590
whatever method of authenticating that's

258
00:12:50,590 --> 00:12:56,070
it okay some some caveats of rest

259
00:12:56,070 --> 00:12:59,320
there's no 100% uniform way to design a

260
00:12:59,320 --> 00:13:02,440
restful api there are some best

261
00:13:02,440 --> 00:13:04,660
practices but it's really again up to

262
00:13:04,660 --> 00:13:07,840
whoever is designing the system I've

263
00:13:07,840 --> 00:13:10,150
seen all kinds of craziness out there so

264
00:13:10,150 --> 00:13:12,700
they don't always conform to the HTTP

265
00:13:12,700 --> 00:13:16,070
method design and post input are

266
00:13:16,070 --> 00:13:18,410
a lot of times I mean maybe they're not

267
00:13:18,410 --> 00:13:22,100
supposed to be but people do do whatever

268
00:13:22,100 --> 00:13:25,250
they feel like and an example I'm guilty

269
00:13:25,250 --> 00:13:27,080
as well rather than putting

270
00:13:27,080 --> 00:13:29,570
authen authentication data in an

271
00:13:29,570 --> 00:13:32,720
authorization header I made I made

272
00:13:32,720 --> 00:13:35,360
requests I made some get requests post

273
00:13:35,360 --> 00:13:37,610
requests that way I could send my office

274
00:13:37,610 --> 00:13:40,160
on occasion data to the server and then

275
00:13:40,160 --> 00:13:42,530
the return or smoother response to that

276
00:13:42,530 --> 00:13:45,650
request was whatever normally would come

277
00:13:45,650 --> 00:13:48,080
from a get response you know for my very

278
00:13:48,080 --> 00:13:50,030
limited app it didn't make a difference

279
00:13:50,030 --> 00:13:54,080
but you know it's gonna be different no

280
00:13:54,080 --> 00:13:55,430
matter what you look at like I said

281
00:13:55,430 --> 00:13:57,530
that's probably not best practice but it

282
00:13:57,530 --> 00:13:59,420
was my first rest app so you'll have to

283
00:13:59,420 --> 00:14:03,339
give me a pass on that one

284
00:14:04,900 --> 00:14:10,700
okay so talk about rest hacking so it's

285
00:14:10,700 --> 00:14:14,300
a it's a great attack vector because you

286
00:14:14,300 --> 00:14:16,430
talk about mobile apps web apps

287
00:14:16,430 --> 00:14:19,310
what-have-you it's an undocumented a lot

288
00:14:19,310 --> 00:14:23,900
of the times internet facing API you

289
00:14:23,900 --> 00:14:27,290
know people have all these apps that are

290
00:14:27,290 --> 00:14:29,390
being designed by people that don't know

291
00:14:29,390 --> 00:14:31,010
anything about programming don't know

292
00:14:31,010 --> 00:14:33,470
security most importantly and they're

293
00:14:33,470 --> 00:14:35,330
putting a lot of times sensitive

294
00:14:35,330 --> 00:14:38,780
information publicly exposed and hoping

295
00:14:38,780 --> 00:14:41,780
that nobody takes a look at it and the

296
00:14:41,780 --> 00:14:43,490
story that we're gonna be getting into

297
00:14:43,490 --> 00:14:47,240
is exactly that so the fact that it's

298
00:14:47,240 --> 00:14:50,630
undocumented helps sometimes because you

299
00:14:50,630 --> 00:14:53,180
know security by obscurity how we didn't

300
00:14:53,180 --> 00:14:55,010
document this so nobody's gonna hack us

301
00:14:55,010 --> 00:14:56,390
because they don't know how to use our

302
00:14:56,390 --> 00:14:59,600
crazy API that you know is really not

303
00:14:59,600 --> 00:15:02,390
that crazy so oftentimes it's

304
00:15:02,390 --> 00:15:04,190
misconfigured where it's missing a

305
00:15:04,190 --> 00:15:06,920
security the thing we're gonna be

306
00:15:06,920 --> 00:15:11,000
looking at is both of those and because

307
00:15:11,000 --> 00:15:13,730
of the readable design by Nature REST

308
00:15:13,730 --> 00:15:15,980
API is are easy to determine what's

309
00:15:15,980 --> 00:15:17,830
govern Lonnie if they're undocumented

310
00:15:17,830 --> 00:15:20,930
but you look at the traffic which

311
00:15:20,930 --> 00:15:23,060
anybody with a you know Wireshark or

312
00:15:23,060 --> 00:15:24,440
some of the other tools we're gonna talk

313
00:15:24,440 --> 00:15:26,990
about can do this it's pretty easy to

314
00:15:26,990 --> 00:15:28,510
figure out what's going on

315
00:15:28,510 --> 00:15:31,540
and if you're working with a system that

316
00:15:31,540 --> 00:15:33,490
doesn't have security you were is

317
00:15:33,490 --> 00:15:35,770
misconfigured now that you know how this

318
00:15:35,770 --> 00:15:38,160
system works you can exploit it

319
00:15:38,160 --> 00:15:41,320
so yeah just said that there's lots of

320
00:15:41,320 --> 00:15:43,620
tools to assist such as

321
00:15:43,620 --> 00:15:45,850
man-in-the-middle proxy that was the one

322
00:15:45,850 --> 00:15:47,950
I started with but there's some better

323
00:15:47,950 --> 00:15:50,020
tools than that for what I'm looking to

324
00:15:50,020 --> 00:15:52,990
accomplish such as sort of see meso men

325
00:15:52,990 --> 00:15:56,200
the middle proxy intercepts what traffic

326
00:15:56,200 --> 00:16:00,459
and you can do SSL as well now there's

327
00:16:00,459 --> 00:16:03,459
nothing crazy black magic II about men

328
00:16:03,459 --> 00:16:05,440
the middle proxy you have a self-signed

329
00:16:05,440 --> 00:16:07,600
certificates your man in the middling

330
00:16:07,600 --> 00:16:09,670
traffic you're gonna throw SSL errors

331
00:16:09,670 --> 00:16:11,230
unless you trust the self signed

332
00:16:11,230 --> 00:16:12,700
certificate already either we're not

333
00:16:12,700 --> 00:16:16,240
finding a way around this as though some

334
00:16:16,240 --> 00:16:18,160
of the better suited tools for this type

335
00:16:18,160 --> 00:16:22,300
of thing burp suite and zap as well both

336
00:16:22,300 --> 00:16:25,060
trap all kinds of stuff you can do with

337
00:16:25,060 --> 00:16:28,589
those but a traffic analysis tools and

338
00:16:28,589 --> 00:16:31,750
web spiders built-in and lots of

339
00:16:31,750 --> 00:16:33,520
different functionality they're both

340
00:16:33,520 --> 00:16:36,550
included in Kali by default actually all

341
00:16:36,550 --> 00:16:39,040
three of those are included in Kali the

342
00:16:39,040 --> 00:16:41,800
last two there you can intercept traffic

343
00:16:41,800 --> 00:16:44,140
and modify it man-in-the-middle proxy

344
00:16:44,140 --> 00:16:46,750
can do that as well but I feel like man

345
00:16:46,750 --> 00:16:49,060
the mental proxy is meant more to do

346
00:16:49,060 --> 00:16:52,180
that in an automated sense whereas I

347
00:16:52,180 --> 00:16:55,839
like using burp for manually doing this

348
00:16:55,839 --> 00:16:58,450
stuff just analyzing each packet as it

349
00:16:58,450 --> 00:17:02,920
comes through and the same for that the

350
00:17:02,920 --> 00:17:05,920
advanced rest client is just a Chrome

351
00:17:05,920 --> 00:17:10,300
extension that I use that's I found it

352
00:17:10,300 --> 00:17:12,160
helpful you just you know I don't need

353
00:17:12,160 --> 00:17:14,559
the whole burp suite or anything like

354
00:17:14,559 --> 00:17:16,230
that if I just want to send some

355
00:17:16,230 --> 00:17:19,089
requests to a restful api I just hold

356
00:17:19,089 --> 00:17:20,859
this thing up type a few things in and

357
00:17:20,859 --> 00:17:22,390
there you go

358
00:17:22,390 --> 00:17:25,420
also it I des have them my favorite one

359
00:17:25,420 --> 00:17:28,150
is pycharm it has a rest client built

360
00:17:28,150 --> 00:17:30,040
into it which was really helpful when

361
00:17:30,040 --> 00:17:32,470
you're developing software that's using

362
00:17:32,470 --> 00:17:35,980
rest you can test it right there okay so

363
00:17:35,980 --> 00:17:38,770
story time right so this is called you

364
00:17:38,770 --> 00:17:41,080
know hacking with rest for a load right

365
00:17:41,080 --> 00:17:41,890
so

366
00:17:41,890 --> 00:17:44,380
what is the love peace we're gonna get

367
00:17:44,380 --> 00:17:47,320
into that so well set the scene so I was

368
00:17:47,320 --> 00:17:49,510
using a mobile app I used to me a mobile

369
00:17:49,510 --> 00:17:51,610
dating app called J swipe and similar to

370
00:17:51,610 --> 00:17:54,570
tinder it's focused for Jewish folks and

371
00:17:54,570 --> 00:17:57,370
hmm so for those of you guys that don't

372
00:17:57,370 --> 00:18:00,100
know tinder it's a location-based dating

373
00:18:00,100 --> 00:18:02,770
app where people in your general

374
00:18:02,770 --> 00:18:04,630
vicinity will show up and you either say

375
00:18:04,630 --> 00:18:06,550
you like them or you don't and then you

376
00:18:06,550 --> 00:18:08,680
move on and you set search radiuses and

377
00:18:08,680 --> 00:18:12,840
stuff like that and based on geolocation

378
00:18:12,840 --> 00:18:16,080
you know you find people and move on and

379
00:18:16,080 --> 00:18:19,660
we'll get into that so I'm getting more

380
00:18:19,660 --> 00:18:23,200
and more frustrated not for you because

381
00:18:23,200 --> 00:18:27,160
my dating life was awful but the main

382
00:18:27,160 --> 00:18:31,180
reason the app sucks it's a total POS in

383
00:18:31,180 --> 00:18:34,570
particular so frequently entire message

384
00:18:34,570 --> 00:18:37,900
threads were reloading like oh it really

385
00:18:37,900 --> 00:18:41,140
slowly so I opened up the app oh I have

386
00:18:41,140 --> 00:18:43,090
a message oh look here's every message

387
00:18:43,090 --> 00:18:46,180
coming through again what's up messages

388
00:18:46,180 --> 00:18:48,070
randomly not coming through like I

389
00:18:48,070 --> 00:18:50,230
prefer all of them to come through

390
00:18:50,230 --> 00:18:52,050
rather than none of them to come through

391
00:18:52,050 --> 00:18:56,260
so that was annoying too but also again

392
00:18:56,260 --> 00:18:59,700
it's supposed to be like close yeah

393
00:18:59,700 --> 00:19:03,010
apparently Ohio is closer to Raleigh

394
00:19:03,010 --> 00:19:06,940
than I thought so and it wasn't like one

395
00:19:06,940 --> 00:19:09,100
random person it was like lots lots of

396
00:19:09,100 --> 00:19:11,110
them all of a sudden I was in the

397
00:19:11,110 --> 00:19:15,220
Midwest so anyway okay so I'm getting

398
00:19:15,220 --> 00:19:16,870
frustrated you know I'm flipping the

399
00:19:16,870 --> 00:19:20,070
table and what's wrong with the app like

400
00:19:20,070 --> 00:19:22,480
what's what's happening here like I

401
00:19:22,480 --> 00:19:24,070
think there's it was like a Saturday

402
00:19:24,070 --> 00:19:25,930
morning I'm simply having some coffee

403
00:19:25,930 --> 00:19:28,390
trying to you know enjoy my weekend the

404
00:19:28,390 --> 00:19:31,690
little time I get off and just trying to

405
00:19:31,690 --> 00:19:33,970
talk to somebody and it's not happening

406
00:19:33,970 --> 00:19:35,230
like I finally got something to talk to

407
00:19:35,230 --> 00:19:37,180
me like why can't I actually talk to

408
00:19:37,180 --> 00:19:40,780
them so dating life's not going anywhere

409
00:19:40,780 --> 00:19:43,090
getting frustrated blah blah blah so I

410
00:19:43,090 --> 00:19:46,150
turned to IT insecurity let's see what

411
00:19:46,150 --> 00:19:48,790
we can do with this let's figure out why

412
00:19:48,790 --> 00:19:51,160
this app sucks like what's going on here

413
00:19:51,160 --> 00:19:54,490
and okay we're going to talk about what

414
00:19:54,490 --> 00:19:54,820
I just

415
00:19:54,820 --> 00:19:57,370
covered so here are the tools that I

416
00:19:57,370 --> 00:20:00,070
used I used my Android phone or they

417
00:20:00,070 --> 00:20:02,440
have I am plenty of emulators as well I

418
00:20:02,440 --> 00:20:05,399
particularly like genymotion which is

419
00:20:05,399 --> 00:20:10,240
free for my personal use somebody who

420
00:20:10,240 --> 00:20:11,860
correct me if I'm wrong but I think the

421
00:20:11,860 --> 00:20:14,200
Android SDK recently came out with like

422
00:20:14,200 --> 00:20:16,840
a new emulator that's a lot faster than

423
00:20:16,840 --> 00:20:20,799
the old one was but a year or so ago

424
00:20:20,799 --> 00:20:23,259
when I was doing this the efficient one

425
00:20:23,259 --> 00:20:25,149
was pretty slow where his genymotion was

426
00:20:25,149 --> 00:20:26,889
pretty darn fast

427
00:20:26,889 --> 00:20:30,730
I used man-in-the-middle proxy again a

428
00:20:30,730 --> 00:20:33,610
burp or zap or any tool like that would

429
00:20:33,610 --> 00:20:35,379
do the job just as well we just want to

430
00:20:35,379 --> 00:20:38,200
intercept traffic maybe modify it or it

431
00:20:38,200 --> 00:20:40,480
was just to see what's going on and the

432
00:20:40,480 --> 00:20:42,580
reason we couldn't use Wireshark it

433
00:20:42,580 --> 00:20:44,559
weighs not to my knowledge is because

434
00:20:44,559 --> 00:20:46,059
the traffic is encrypted I know there's

435
00:20:46,059 --> 00:20:49,059
ways to view encrypted SSL traffic in

436
00:20:49,059 --> 00:20:51,730
Wireshark but these other tools were

437
00:20:51,730 --> 00:20:54,309
more straightforward for doing what I

438
00:20:54,309 --> 00:20:55,899
wanted which was just intercepting

439
00:20:55,899 --> 00:20:58,149
traffic from an app on my phone and

440
00:20:58,149 --> 00:21:00,639
rather than from say like Chrome which I

441
00:21:00,639 --> 00:21:02,919
think has there's some way to do it with

442
00:21:02,919 --> 00:21:05,080
parole or other browsers but not that I

443
00:21:05,080 --> 00:21:09,639
know for an app so the only saving grace

444
00:21:09,639 --> 00:21:13,830
this app had was it was using SSL like

445
00:21:13,830 --> 00:21:16,269
they don't get points for that but it's

446
00:21:16,269 --> 00:21:20,379
better than nothing not by much so I

447
00:21:20,379 --> 00:21:24,220
used jet jet brains pycharm that's the

448
00:21:24,220 --> 00:21:25,269
Python IDE

449
00:21:25,269 --> 00:21:30,340
it's my favorite one by far I mentioned

450
00:21:30,340 --> 00:21:31,450
before that there's a rest

451
00:21:31,450 --> 00:21:34,299
arrest client built into it I use that

452
00:21:34,299 --> 00:21:35,860
as well it's really helpful I have my

453
00:21:35,860 --> 00:21:38,230
code up top my rest client right below I

454
00:21:38,230 --> 00:21:39,730
can test stuff out and then I can

455
00:21:39,730 --> 00:21:42,399
implement it into code it's really nice

456
00:21:42,399 --> 00:21:44,799
there's so many other options out there

457
00:21:44,799 --> 00:21:46,360
though for rest clients you pick

458
00:21:46,360 --> 00:21:50,110
whatever you like I use Python for

459
00:21:50,110 --> 00:21:58,679
writing this exploit like I just said so

460
00:21:58,679 --> 00:22:01,600
we need to figure out like what's going

461
00:22:01,600 --> 00:22:03,970
on on the network what traffic is being

462
00:22:03,970 --> 00:22:06,760
generated what network activity so I

463
00:22:06,760 --> 00:22:08,630
here's what I did I set up man in the

464
00:22:08,630 --> 00:22:11,090
proxy on my computer which was a lot

465
00:22:11,090 --> 00:22:13,520
harder you to do on a Mac than I

466
00:22:13,520 --> 00:22:14,330
expected

467
00:22:14,330 --> 00:22:16,610
I've always used it on Kali but I didn't

468
00:22:16,610 --> 00:22:20,570
have a Kali ISO with me and I didn't

469
00:22:20,570 --> 00:22:21,860
want to wait the four minutes to

470
00:22:21,860 --> 00:22:23,840
download one so this turned into a whole

471
00:22:23,840 --> 00:22:28,520
word deal but anyway so I recommend Kali

472
00:22:28,520 --> 00:22:31,910
if you're going to do this so like I

473
00:22:31,910 --> 00:22:33,290
said before man the metal proxy

474
00:22:33,290 --> 00:22:35,060
generates a self-signed certificates

475
00:22:35,060 --> 00:22:37,280
that it uses to Rhian crypt traffic that

476
00:22:37,280 --> 00:22:40,880
it intercepts and decrypt so in order to

477
00:22:40,880 --> 00:22:43,460
make the apps that you're using on your

478
00:22:43,460 --> 00:22:45,500
phone function properly when you're

479
00:22:45,500 --> 00:22:47,120
using a self-signed certificate you need

480
00:22:47,120 --> 00:22:48,770
to tell what your phone to trust that

481
00:22:48,770 --> 00:22:51,230
self signed certificate again that was

482
00:22:51,230 --> 00:22:52,640
also more difficult than I would have

483
00:22:52,640 --> 00:22:54,740
thought trying to find a way to like get

484
00:22:54,740 --> 00:22:57,770
an SSL certificate onto my phone like if

485
00:22:57,770 --> 00:23:00,020
I just downloaded it and copied it to

486
00:23:00,020 --> 00:23:01,700
the SD card that's one thing but

487
00:23:01,700 --> 00:23:04,160
actually getting an ssl certificate from

488
00:23:04,160 --> 00:23:05,870
a site on my phone without downloading

489
00:23:05,870 --> 00:23:07,490
some special app or something was

490
00:23:07,490 --> 00:23:10,520
surprisingly difficult I mean not hard

491
00:23:10,520 --> 00:23:13,880
but you know not as easy it is as it is

492
00:23:13,880 --> 00:23:19,580
on a regular you know desktop OS so some

493
00:23:19,580 --> 00:23:23,300
apps will throw SSL errors if you know

494
00:23:23,300 --> 00:23:25,430
you're not using a valid SSL certificate

495
00:23:25,430 --> 00:23:28,400
plenty of them don't this I don't know

496
00:23:28,400 --> 00:23:29,780
if this one did or not I wasn't gonna

497
00:23:29,780 --> 00:23:31,850
give it the chance I really didn't want

498
00:23:31,850 --> 00:23:33,560
to be any more disgusted than it was

499
00:23:33,560 --> 00:23:35,120
when I figured the rest of this stuff

500
00:23:35,120 --> 00:23:39,620
out but anyway um so best best idea to

501
00:23:39,620 --> 00:23:43,490
have a trusted SSL certificate also some

502
00:23:43,490 --> 00:23:45,710
apps now more and more doing certificate

503
00:23:45,710 --> 00:23:47,060
pinning which means that they're

504
00:23:47,060 --> 00:23:49,820
trusting only one particular certificate

505
00:23:49,820 --> 00:23:51,560
it's either baked into the app like

506
00:23:51,560 --> 00:23:52,880
trust this certificate in this

507
00:23:52,880 --> 00:23:55,480
certificate only or the first

508
00:23:55,480 --> 00:23:58,040
certificate that it sees that's the one

509
00:23:58,040 --> 00:24:00,620
that I trust moving forward there was

510
00:24:00,620 --> 00:24:02,060
nothing of the sort with this app I

511
00:24:02,060 --> 00:24:03,200
don't have to worry about that but

512
00:24:03,200 --> 00:24:05,060
that's something you could run into if

513
00:24:05,060 --> 00:24:08,690
you're looking at apps or and any really

514
00:24:08,690 --> 00:24:10,490
any program this these days I know the

515
00:24:10,490 --> 00:24:14,540
desktop Dropbox client does pinning all

516
00:24:14,540 --> 00:24:16,430
I had to do was then use

517
00:24:16,430 --> 00:24:18,650
man-in-the-middle proxy trustee SSL

518
00:24:18,650 --> 00:24:20,180
certificate and then just use the app

519
00:24:20,180 --> 00:24:21,100
and

520
00:24:21,100 --> 00:24:23,140
exploring network traffic as it comes

521
00:24:23,140 --> 00:24:25,240
through so let's just do what I want to

522
00:24:25,240 --> 00:24:28,120
see and then we'll analyze the results

523
00:24:28,120 --> 00:24:30,280
and see what's happening so what did I

524
00:24:30,280 --> 00:24:32,490
find

525
00:24:34,799 --> 00:24:37,210
so the first thing I figured out was

526
00:24:37,210 --> 00:24:39,520
there's a third-party back-end

527
00:24:39,520 --> 00:24:42,460
aka back-end as a service by being used

528
00:24:42,460 --> 00:24:43,720
for hosting data they're not running

529
00:24:43,720 --> 00:24:45,880
their own servers and databases and all

530
00:24:45,880 --> 00:24:48,070
this stuff they're just using a third

531
00:24:48,070 --> 00:24:50,590
party hosted solution and this is parse

532
00:24:50,590 --> 00:24:54,789
comm now what that parse a little bit

533
00:24:54,789 --> 00:24:57,940
and it provides ya the stuff I just said

534
00:24:57,940 --> 00:25:01,539
as well as SDKs for all kinds of mobile

535
00:25:01,539 --> 00:25:03,220
web development or mobile app

536
00:25:03,220 --> 00:25:06,070
development they got bought out by

537
00:25:06,070 --> 00:25:07,630
Facebook a couple years ago and if

538
00:25:07,630 --> 00:25:09,340
you're looking to develop an app don't

539
00:25:09,340 --> 00:25:10,720
use them because they're being shut down

540
00:25:10,720 --> 00:25:15,669
this year yeah I actually used them for

541
00:25:15,669 --> 00:25:18,520
something after learning about them

542
00:25:18,520 --> 00:25:20,110
through this whole process I wrote an

543
00:25:20,110 --> 00:25:21,820
app that I was like okay well let's try

544
00:25:21,820 --> 00:25:23,350
this out and then I get an email six

545
00:25:23,350 --> 00:25:24,760
months later like hey we're shutting our

546
00:25:24,760 --> 00:25:26,980
service down like here's although we're

547
00:25:26,980 --> 00:25:28,780
gonna open source all of our stuff so

548
00:25:28,780 --> 00:25:30,340
you can host your own servers I'm like

549
00:25:30,340 --> 00:25:32,309
that's that's great the free app is now

550
00:25:32,309 --> 00:25:34,480
requiring that I buy a server or

551
00:25:34,480 --> 00:25:35,950
something where maybe just you know

552
00:25:35,950 --> 00:25:37,630
siphon some server space off of the

553
00:25:37,630 --> 00:25:43,419
office or whatever so they have a REST

554
00:25:43,419 --> 00:25:45,820
API used for data communication that's

555
00:25:45,820 --> 00:25:49,720
the preferred method of using parse okay

556
00:25:49,720 --> 00:25:53,679
so I get requests on this app to get

557
00:25:53,679 --> 00:25:58,870
users so we're doing get parse calm and

558
00:25:58,870 --> 00:26:00,669
then I don't know what the one is but

559
00:26:00,669 --> 00:26:02,559
that was in all the queries and then

560
00:26:02,559 --> 00:26:05,190
class is it's you know we're looking at

561
00:26:05,190 --> 00:26:08,350
object-oriented stuff a class and then

562
00:26:08,350 --> 00:26:12,130
user that is the default user object not

563
00:26:12,130 --> 00:26:15,429
for this app but for all parse stuff I

564
00:26:15,429 --> 00:26:17,860
found that out when I get that open to

565
00:26:17,860 --> 00:26:20,559
my own app on their platform depending

566
00:26:20,559 --> 00:26:22,690
on what you're doing here you can that

567
00:26:22,690 --> 00:26:25,059
user piece might be something custom if

568
00:26:25,059 --> 00:26:26,950
you're making other types of classes

569
00:26:26,950 --> 00:26:29,530
that's specific to parse

570
00:26:29,530 --> 00:26:31,060
sure there's different ways for

571
00:26:31,060 --> 00:26:35,080
different services so if we want to get

572
00:26:35,080 --> 00:26:37,630
a user or a list of users and I think

573
00:26:37,630 --> 00:26:41,370
that this query is for multiple users

574
00:26:41,370 --> 00:26:44,680
you would do you miss Jim you would

575
00:26:44,680 --> 00:26:46,660
request that URL now you can add

576
00:26:46,660 --> 00:26:49,210
optional query parameters now go back to

577
00:26:49,210 --> 00:26:51,190
the first few slides when I was

578
00:26:51,190 --> 00:26:53,440
acquitting HTTP methods to sequel

579
00:26:53,440 --> 00:26:55,660
statements now you know maybe make a

580
00:26:55,660 --> 00:26:58,660
little more sense so as part of this URL

581
00:26:58,660 --> 00:27:02,050
you can add various sequel statements or

582
00:27:02,050 --> 00:27:05,980
sequel parameters to the request so

583
00:27:05,980 --> 00:27:08,890
limit equals a thousand that's the same

584
00:27:08,890 --> 00:27:10,780
as like Olympian 1000 in a sequel

585
00:27:10,780 --> 00:27:12,640
statement and I talked about

586
00:27:12,640 --> 00:27:14,860
undocumented API is the beautiful thing

587
00:27:14,860 --> 00:27:16,750
about this was this was all documented

588
00:27:16,750 --> 00:27:19,690
like because parse is public all this

589
00:27:19,690 --> 00:27:22,390
stuff I could just look at you know

590
00:27:22,390 --> 00:27:24,040
their knowledge base or the wiki

591
00:27:24,040 --> 00:27:26,410
whatever it was and learn of all this

592
00:27:26,410 --> 00:27:28,420
stuff that I didn't see in traffic

593
00:27:28,420 --> 00:27:32,230
requests so basically using morten using

594
00:27:32,230 --> 00:27:34,270
my knowledge about the service i was

595
00:27:34,270 --> 00:27:36,400
able to exploit the lack of security

596
00:27:36,400 --> 00:27:39,070
that they put in place it was to me that

597
00:27:39,070 --> 00:27:42,520
the app developers put in place so order

598
00:27:42,520 --> 00:27:44,920
equals created at again order by in

599
00:27:44,920 --> 00:27:48,700
sequel so created at being the account

600
00:27:48,700 --> 00:27:51,070
creation date for the users now if the

601
00:27:51,070 --> 00:27:53,890
limit 1000 I'm selecting 1,000 users

602
00:27:53,890 --> 00:27:55,690
from the database I'm not selecting a

603
00:27:55,690 --> 00:27:58,450
single user as I normally would when I

604
00:27:58,450 --> 00:28:01,060
use the app normally and I told it next

605
00:28:01,060 --> 00:28:04,090
person it did this request with a user

606
00:28:04,090 --> 00:28:06,430
name or object ID or something like that

607
00:28:06,430 --> 00:28:08,200
where maybe you just said only met one

608
00:28:08,200 --> 00:28:11,980
well I found out oh you can just change

609
00:28:11,980 --> 00:28:13,420
that limit higher and higher and higher

610
00:28:13,420 --> 00:28:18,220
and get as many people as I want this is

611
00:28:18,220 --> 00:28:23,350
some more mmm select limiting if you

612
00:28:23,350 --> 00:28:26,590
will so we're equals created at is

613
00:28:26,590 --> 00:28:29,710
greater than 2013 I just chose that the

614
00:28:29,710 --> 00:28:32,530
app started in like 2014 or something so

615
00:28:32,530 --> 00:28:34,690
I figured this is a good starting date

616
00:28:34,690 --> 00:28:37,810
if I start here I'll get everybody

617
00:28:37,810 --> 00:28:41,050
I'll get that 1000 users I'll get the

618
00:28:41,050 --> 00:28:42,860
first 1000 use

619
00:28:42,860 --> 00:28:46,549
that were created after 2013 and it's

620
00:28:46,549 --> 00:28:48,620
going to order it by D date that they

621
00:28:48,620 --> 00:28:55,160
were created so this part was really

622
00:28:55,160 --> 00:28:57,799
good user details this was something

623
00:28:57,799 --> 00:29:01,120
that I read about in the API this one

624
00:29:01,120 --> 00:29:04,220
this includes all kinds of information

625
00:29:04,220 --> 00:29:07,040
about the user such as there's their

626
00:29:07,040 --> 00:29:10,160
preferences their search radius etc like

627
00:29:10,160 --> 00:29:14,120
not just their user name and their you

628
00:29:14,120 --> 00:29:15,740
know whatever other public information

629
00:29:15,740 --> 00:29:17,600
it is this is like show me your bank

630
00:29:17,600 --> 00:29:22,130
account information yeah so let's go

631
00:29:22,130 --> 00:29:23,750
through that so analyzing captured

632
00:29:23,750 --> 00:29:25,520
traffic I said there's two main end

633
00:29:25,520 --> 00:29:27,770
points and I might have mixed these up

634
00:29:27,770 --> 00:29:29,540
from what it actually was but the gist

635
00:29:29,540 --> 00:29:32,000
of it was a message end point any user

636
00:29:32,000 --> 00:29:34,309
endpoint it's fairly clear to see what

637
00:29:34,309 --> 00:29:37,400
those were so there was an OAuth token

638
00:29:37,400 --> 00:29:39,799
used for authentication didn't really

639
00:29:39,799 --> 00:29:43,580
matter too much except that I had to use

640
00:29:43,580 --> 00:29:46,640
that same token when I was testing this

641
00:29:46,640 --> 00:29:49,490
out using my rest client now the pycharm

642
00:29:49,490 --> 00:29:51,710
rest client has a nice little place that

643
00:29:51,710 --> 00:29:53,990
you can put headers right there so all I

644
00:29:53,990 --> 00:29:56,210
did was copy and paste and there we go

645
00:29:56,210 --> 00:29:58,100
now I'm authenticated we're not checking

646
00:29:58,100 --> 00:30:01,100
like you know user agent or anything

647
00:30:01,100 --> 00:30:03,530
crazy like that I mean you could but

648
00:30:03,530 --> 00:30:06,020
they didn't so all I had to do was

649
00:30:06,020 --> 00:30:09,290
authenticate in there I am now so why

650
00:30:09,290 --> 00:30:11,179
was the message function so flaky why

651
00:30:11,179 --> 00:30:13,700
were they reloading like every time they

652
00:30:13,700 --> 00:30:15,410
were passing the entire thread every

653
00:30:15,410 --> 00:30:17,150
time I wasn't like I wasn't like

654
00:30:17,150 --> 00:30:18,559
spazzing out like this was actually

655
00:30:18,559 --> 00:30:21,260
happening everything was going each time

656
00:30:21,260 --> 00:30:23,360
and it was getting you know larger and

657
00:30:23,360 --> 00:30:26,059
larger every every message that was

658
00:30:26,059 --> 00:30:27,950
being sent it wasn't incremental updates

659
00:30:27,950 --> 00:30:32,360
so anyway why was the app's justing

660
00:30:32,360 --> 00:30:35,150
that's people across the country were in

661
00:30:35,150 --> 00:30:37,610
my search radius I don't know because I

662
00:30:37,610 --> 00:30:40,520
abandon that quickly because who cares

663
00:30:40,520 --> 00:30:43,940
after I found the next thing so here's

664
00:30:43,940 --> 00:30:47,270
an example of the get response have some

665
00:30:47,270 --> 00:30:49,910
information here this is all JSON and

666
00:30:49,910 --> 00:30:52,100
you can see the first thing is like

667
00:30:52,100 --> 00:30:53,760
profile picture and it's

668
00:30:53,760 --> 00:30:55,530
you know some random name of the picture

669
00:30:55,530 --> 00:30:59,060
and then a half a URL excuse me for the

670
00:30:59,060 --> 00:31:02,220
user picture and then other types of

671
00:31:02,220 --> 00:31:03,990
profile information I said it was did

672
00:31:03,990 --> 00:31:05,580
you know the Jewish dating app so

673
00:31:05,580 --> 00:31:07,850
profile was kosher there you go

674
00:31:07,850 --> 00:31:13,680
bah bah blah okay so birthday user

675
00:31:13,680 --> 00:31:17,370
search distance now go back to the part

676
00:31:17,370 --> 00:31:18,800
where I was talking about the different

677
00:31:18,800 --> 00:31:23,060
query parameters not only can you not

678
00:31:23,060 --> 00:31:25,620
only can you limit your results but

679
00:31:25,620 --> 00:31:26,910
where that you remember that greater

680
00:31:26,910 --> 00:31:30,210
than 2013 I can choose any of these

681
00:31:30,210 --> 00:31:34,560
profile items anything here can be used

682
00:31:34,560 --> 00:31:39,090
as a search parameter so where what are

683
00:31:39,090 --> 00:31:41,550
we got here where birth date equals say

684
00:31:41,550 --> 00:31:42,900
I want everybody that's born of my

685
00:31:42,900 --> 00:31:43,620
birthday

686
00:31:43,620 --> 00:31:45,570
well I should add that in there wherever

687
00:31:45,570 --> 00:31:47,700
I want everybody that's you know X age

688
00:31:47,700 --> 00:31:52,110
and here's another thing another or

689
00:31:52,110 --> 00:31:54,570
there was a lot of data that you include

690
00:31:54,570 --> 00:31:56,520
user details that dumped like three

691
00:31:56,520 --> 00:31:58,350
pages worth of stuff that I had to break

692
00:31:58,350 --> 00:32:00,150
up into pictures so we would fit in a

693
00:32:00,150 --> 00:32:04,110
readable form for y'all so anyway let's

694
00:32:04,110 --> 00:32:06,210
say say I want to search for all the 25

695
00:32:06,210 --> 00:32:08,340
year old females in the entire world

696
00:32:08,340 --> 00:32:11,700
which at the time there were 250,000

697
00:32:11,700 --> 00:32:14,220
users on this app so all I have to do is

698
00:32:14,220 --> 00:32:15,780
where gender even was female and where

699
00:32:15,780 --> 00:32:17,550
age equals 25 and there you go now I

700
00:32:17,550 --> 00:32:19,230
have every Jewish woman on this app in

701
00:32:19,230 --> 00:32:23,900
the entire world nice so

702
00:32:23,990 --> 00:32:27,450
so there was a tiny additional design

703
00:32:27,450 --> 00:32:31,409
for so um you know you authenticate with

704
00:32:31,409 --> 00:32:33,509
facebook login with Facebook just like

705
00:32:33,509 --> 00:32:37,080
every good app these days so as part of

706
00:32:37,080 --> 00:32:39,269
that information the Facebook ID was

707
00:32:39,269 --> 00:32:40,769
there like your true identity and

708
00:32:40,769 --> 00:32:43,080
considering this is like a semi

709
00:32:43,080 --> 00:32:47,129
anonymous like first name only app you

710
00:32:47,129 --> 00:32:48,659
know seeing some of these true identity

711
00:32:48,659 --> 00:32:51,000
is not good but not the worst thing in

712
00:32:51,000 --> 00:32:55,019
the world but not great so here's a

713
00:32:55,019 --> 00:32:57,120
screenshot of that here's their Facebook

714
00:32:57,120 --> 00:33:02,990
ID I could also query for that and

715
00:33:02,990 --> 00:33:08,039
you'll see that in just a sec so another

716
00:33:08,039 --> 00:33:10,019
little piece of this puzzle the real

717
00:33:10,019 --> 00:33:19,200
shocker here was what is this yeah so

718
00:33:19,200 --> 00:33:23,909
and by the way it's location-based app

719
00:33:23,909 --> 00:33:26,899
so it would updates every few minutes

720
00:33:26,899 --> 00:33:32,220
yeah and also the other talked about the

721
00:33:32,220 --> 00:33:34,019
search preferences so what did I say

722
00:33:34,019 --> 00:33:36,899
before about like using information as

723
00:33:36,899 --> 00:33:41,580
the query parameters that I just saw now

724
00:33:41,580 --> 00:33:43,409
I can query for all these types of stuff

725
00:33:43,409 --> 00:33:44,970
and what I can look for specific people

726
00:33:44,970 --> 00:33:46,830
or I can say I can find somebody on

727
00:33:46,830 --> 00:33:48,809
Facebook and now I can get their

728
00:33:48,809 --> 00:33:52,080
Facebook ID and say query for that and I

729
00:33:52,080 --> 00:33:53,549
think I talked about that a few slides

730
00:33:53,549 --> 00:33:55,169
over so I'm gonna hold my tongue for a

731
00:33:55,169 --> 00:33:57,539
second there was one I remember where I

732
00:33:57,539 --> 00:34:00,629
said I only made 1,000 likes oh I got a

733
00:34:00,629 --> 00:34:04,259
thousand users that's a lot but there's

734
00:34:04,259 --> 00:34:08,250
no rate limiting so so no sleep

735
00:34:08,250 --> 00:34:10,739
statements no pause no no they just loop

736
00:34:10,739 --> 00:34:12,359
over and over and over and over and over

737
00:34:12,359 --> 00:34:15,319
what

738
00:34:18,080 --> 00:34:25,170
so using this we had a little proof of

739
00:34:25,170 --> 00:34:28,409
concept Hicks so using the information

740
00:34:28,409 --> 00:34:31,230
an attacker could develop a program to

741
00:34:31,230 --> 00:34:32,820
query the database for the person

742
00:34:32,820 --> 00:34:34,620
matching a certain criteria like I said

743
00:34:34,620 --> 00:34:37,679
25 year old female say and take the find

744
00:34:37,679 --> 00:34:40,110
their Facebook ID and then I can look

745
00:34:40,110 --> 00:34:42,000
them up on Facebook and then I can track

746
00:34:42,000 --> 00:34:43,920
their GPS coordinates that get updated

747
00:34:43,920 --> 00:34:46,469
every few minutes I have a tracking app

748
00:34:46,469 --> 00:34:49,830
for people that fit whatever criteria I

749
00:34:49,830 --> 00:34:53,520
look for and you're supposed to like

750
00:34:53,520 --> 00:34:55,530
initiate conversations with people in

751
00:34:55,530 --> 00:34:56,850
order to talk to or sorry you're

752
00:34:56,850 --> 00:34:58,230
supposed to match with them in order to

753
00:34:58,230 --> 00:35:00,210
be able to initiate conversation I

754
00:35:00,210 --> 00:35:02,040
forget that like I can talk to people

755
00:35:02,040 --> 00:35:03,870
and I don't think there's a whole lot of

756
00:35:03,870 --> 00:35:05,700
Jews in Japan but I suppose I could talk

757
00:35:05,700 --> 00:35:07,080
to somebody over there if I just send

758
00:35:07,080 --> 00:35:10,680
the right query to you know to the app

759
00:35:10,680 --> 00:35:14,190
via that URL so so that's basically what

760
00:35:14,190 --> 00:35:22,230
I did to the CEO so yeah I was like wow

761
00:35:22,230 --> 00:35:23,610
this is pretty bad but I need to have

762
00:35:23,610 --> 00:35:27,180
some fun with this first so so I found

763
00:35:27,180 --> 00:35:29,400
his Facebook ID he's not I mean he's not

764
00:35:29,400 --> 00:35:31,470
super famous but he was like you know

765
00:35:31,470 --> 00:35:33,300
making himself real public publicizing

766
00:35:33,300 --> 00:35:35,160
this app and everything like that so all

767
00:35:35,160 --> 00:35:37,740
I did was I found use his name I found

768
00:35:37,740 --> 00:35:39,540
his Facebook profile and then there's

769
00:35:39,540 --> 00:35:41,190
websites out there that'll let you just

770
00:35:41,190 --> 00:35:43,950
take the like Facebook username and

771
00:35:43,950 --> 00:35:47,210
punch it in and out gives you a Facebook

772
00:35:47,210 --> 00:35:49,770
profile ID which is just I think now

773
00:35:49,770 --> 00:35:51,240
it's like an eight digit number or

774
00:35:51,240 --> 00:35:55,200
something like that so yeah and then all

775
00:35:55,200 --> 00:35:58,530
I need to do is that whole get user

776
00:35:58,530 --> 00:36:01,830
where Facebook ID equals his Facebook ID

777
00:36:01,830 --> 00:36:05,460
and now I know his GPS coordinates so I

778
00:36:05,460 --> 00:36:06,990
tracked him across the country for the

779
00:36:06,990 --> 00:36:08,550
weekend like he was going in the Midwest

780
00:36:08,550 --> 00:36:10,470
for something maybe he was in Ohio maybe

781
00:36:10,470 --> 00:36:12,090
that's why he kept showing up I don't

782
00:36:12,090 --> 00:36:16,430
know but uh anyway I saved the data and

783
00:36:16,430 --> 00:36:18,660
you know I wanted to be able to say hey

784
00:36:18,660 --> 00:36:22,140
look I tracked you lots of people can do

785
00:36:22,140 --> 00:36:24,060
that this wasn't hard to do you probably

786
00:36:24,060 --> 00:36:27,690
need to fix this anyway and then oh by

787
00:36:27,690 --> 00:36:29,020
the way I also dumped 290

788
00:36:29,020 --> 00:36:30,670
thousand users before I said okay I

789
00:36:30,670 --> 00:36:34,840
think my concept is proved so anyway no

790
00:36:34,840 --> 00:36:36,430
rate-limiting no nothing so here's a

791
00:36:36,430 --> 00:36:40,840
dump so here's a code snippet of the DB

792
00:36:40,840 --> 00:36:44,500
dump code and it's real easy except I

793
00:36:44,500 --> 00:36:48,730
can't see it so we have the URL we get

794
00:36:48,730 --> 00:36:52,690
the creative that parameter and we're

795
00:36:52,690 --> 00:36:56,740
adding our authorization headers and hmm

796
00:36:56,740 --> 00:36:59,770
the request success piece that was just

797
00:36:59,770 --> 00:37:02,500
something I added to that was my own

798
00:37:02,500 --> 00:37:04,990
error checking to make sure my requests

799
00:37:04,990 --> 00:37:08,350
were going through I created a database

800
00:37:08,350 --> 00:37:10,090
the sequel like database tell a could

801
00:37:10,090 --> 00:37:12,100
properly store all my stolen information

802
00:37:12,100 --> 00:37:18,220
and then I query you to four users

803
00:37:18,220 --> 00:37:25,090
created after 2013 June 23rd include the

804
00:37:25,090 --> 00:37:30,640
user details and there it is I'm limit

805
00:37:30,640 --> 00:37:33,160
1000 order by the creation date that's

806
00:37:33,160 --> 00:37:37,900
all online 10 that URL right there so

807
00:37:37,900 --> 00:37:40,090
and then the rest of whites doing is

808
00:37:40,090 --> 00:37:42,550
it's going to this URL it's getting a

809
00:37:42,550 --> 00:37:45,850
thousand users basically the first user

810
00:37:45,850 --> 00:37:49,240
to the 1000th user returning them to me

811
00:37:49,240 --> 00:37:51,430
and then taking the date that that

812
00:37:51,430 --> 00:37:54,100
1000th user was created at and using

813
00:37:54,100 --> 00:37:56,230
that as the parameter for the next ones

814
00:37:56,230 --> 00:37:58,210
now I get the next 1,000 and like I said

815
00:37:58,210 --> 00:38:00,550
I got about 90,000 people before I

816
00:38:00,550 --> 00:38:02,650
decided to cut it off and realized I

817
00:38:02,650 --> 00:38:05,790
don't really need the rest of them

818
00:38:05,790 --> 00:38:09,040
anyway so yeah but what is this like I

819
00:38:09,040 --> 00:38:13,030
don't know 30 not even yeah 30 some odd

820
00:38:13,030 --> 00:38:15,610
lines of code that was all that was

821
00:38:15,610 --> 00:38:17,170
needed and I'm sure there's lots of

822
00:38:17,170 --> 00:38:20,640
extra junk here that was unnecessary

823
00:38:20,640 --> 00:38:23,050
okay so here's a quick screenshot of

824
00:38:23,050 --> 00:38:25,270
man-in-the-middle proxy if you haven't

825
00:38:25,270 --> 00:38:29,200
used it before so what you see here this

826
00:38:29,200 --> 00:38:32,680
is not the app that I was working with

827
00:38:32,680 --> 00:38:34,420
this is a different mobile dating app

828
00:38:34,420 --> 00:38:37,750
that has the same problem before I gave

829
00:38:37,750 --> 00:38:39,869
a similar talk at one point

830
00:38:39,869 --> 00:38:42,359
I was like okay well they patched a hole

831
00:38:42,359 --> 00:38:45,539
on the app that I'm working with but I

832
00:38:45,539 --> 00:38:46,859
wonder if anybody else does it so I

833
00:38:46,859 --> 00:38:49,170
spent an hour downloading every dating

834
00:38:49,170 --> 00:38:51,630
app I could on my Android emulator and

835
00:38:51,630 --> 00:38:53,700
scanning the traffic and then oh all of

836
00:38:53,700 --> 00:38:55,920
a sudden oh yeah this this worked no

837
00:38:55,920 --> 00:38:59,339
problem so yeah another app waking GPS

838
00:38:59,339 --> 00:39:05,480
coordinates awesome so you're say

839
00:39:05,480 --> 00:39:07,140
actually you know what let me go back

840
00:39:07,140 --> 00:39:11,099
for a second so yeah as we see here this

841
00:39:11,099 --> 00:39:12,869
is the JSON data here are the different

842
00:39:12,869 --> 00:39:16,499
headers and at the top where it says

843
00:39:16,499 --> 00:39:20,130
response this is the response that the

844
00:39:20,130 --> 00:39:23,130
server gave me if you tab over to I

845
00:39:23,130 --> 00:39:25,019
can't really see it from here I think it

846
00:39:25,019 --> 00:39:27,960
says request somewhere there yeah there

847
00:39:27,960 --> 00:39:31,470
it is hmm you can tab over and see what

848
00:39:31,470 --> 00:39:34,349
requests I send so now I can see say

849
00:39:34,349 --> 00:39:36,569
what did the app send and this is what I

850
00:39:36,569 --> 00:39:38,309
returned and now I can you know make my

851
00:39:38,309 --> 00:39:40,319
own assumptions based on the user

852
00:39:40,319 --> 00:39:43,559
friendly the user friendly displayed

853
00:39:43,559 --> 00:39:46,499
URLs and design of rest I can now do

854
00:39:46,499 --> 00:39:48,509
whatever I want because I see how it

855
00:39:48,509 --> 00:39:50,369
works I am authorized I mean if I would

856
00:39:50,369 --> 00:39:52,140
like to hide myself by not using my

857
00:39:52,140 --> 00:39:53,940
actual user account that would add

858
00:39:53,940 --> 00:39:56,910
another extra step of complexity but not

859
00:39:56,910 --> 00:40:01,230
a big one so oh and yeah I was thinking

860
00:40:01,230 --> 00:40:02,880
like halfway through it my whole testing

861
00:40:02,880 --> 00:40:04,799
like oh I wonder if they're gonna see

862
00:40:04,799 --> 00:40:06,059
this because I'm not really trying to

863
00:40:06,059 --> 00:40:08,069
hide myself and then at a certain point

864
00:40:08,069 --> 00:40:10,109
I was like I wonder if they're gonna see

865
00:40:10,109 --> 00:40:12,059
me like well I'm just not even try alike

866
00:40:12,059 --> 00:40:14,700
let's so let's test out just how poor

867
00:40:14,700 --> 00:40:18,059
this is okay so here's a here's a

868
00:40:18,059 --> 00:40:20,309
screenshot of a restaurant this is the

869
00:40:20,309 --> 00:40:22,680
one that's built into pie charm and I

870
00:40:22,680 --> 00:40:24,509
really like you this was really useful

871
00:40:24,509 --> 00:40:26,489
for when I was coding because I would

872
00:40:26,489 --> 00:40:28,349
just make the request see if it worked

873
00:40:28,349 --> 00:40:29,819
and then I'm like okay you did let's

874
00:40:29,819 --> 00:40:33,150
incorporate that into the code now the

875
00:40:33,150 --> 00:40:36,029
end result after repeated attempts to

876
00:40:36,029 --> 00:40:37,470
get in contact with the company like I

877
00:40:37,470 --> 00:40:38,970
sent them emails I filled out the

878
00:40:38,970 --> 00:40:41,940
contact form they I I sent something to

879
00:40:41,940 --> 00:40:44,430
their security people which I'm kidding

880
00:40:44,430 --> 00:40:45,960
they didn't have any of that stuff yeah

881
00:40:45,960 --> 00:40:49,440
so anyway eventually I finally

882
00:40:49,440 --> 00:40:51,089
threatened

883
00:40:51,089 --> 00:40:52,380
threaten us I shouldn't use that word

884
00:40:52,380 --> 00:40:55,079
but that's what it was to I was like I'm

885
00:40:55,079 --> 00:40:57,029
gonna disclose this without giving you

886
00:40:57,029 --> 00:40:58,380
guys a chance to fix it if you don't

887
00:40:58,380 --> 00:40:59,460
write back to me because it's been like

888
00:40:59,460 --> 00:41:02,819
a week this I'm able to track 250,000

889
00:41:02,819 --> 00:41:05,039
people around the world who else has

890
00:41:05,039 --> 00:41:06,710
been doing this for god knows how long

891
00:41:06,710 --> 00:41:10,829
so that finally got their attention and

892
00:41:10,829 --> 00:41:13,829
they fixed it and so vulnerability was

893
00:41:13,829 --> 00:41:16,289
fixed but I'm still single

894
00:41:16,289 --> 00:41:22,249
so anyway so the conclusion on this is

895
00:41:22,249 --> 00:41:25,019
apps often have poor server and/or

896
00:41:25,019 --> 00:41:26,880
client-side security we're talking right

897
00:41:26,880 --> 00:41:29,430
now about server-side security I didn't

898
00:41:29,430 --> 00:41:31,349
even dive into the app itself because we

899
00:41:31,349 --> 00:41:33,269
needed to the server piece was so easy

900
00:41:33,269 --> 00:41:36,719
but the bar has been set so low to

901
00:41:36,719 --> 00:41:39,630
design apps that anybody can do it and

902
00:41:39,630 --> 00:41:42,359
everybody is doing it and these people

903
00:41:42,359 --> 00:41:43,799
don't know anything about security

904
00:41:43,799 --> 00:41:45,390
they're not security experts they're not

905
00:41:45,390 --> 00:41:47,369
you know professional programmers

906
00:41:47,369 --> 00:41:48,930
they're like you know there's a lot of

907
00:41:48,930 --> 00:41:50,369
teenagers doing this in their mom's

908
00:41:50,369 --> 00:41:52,410
basement and they get a really popular

909
00:41:52,410 --> 00:41:54,630
app but you don't know what information

910
00:41:54,630 --> 00:41:56,219
is being leaked out from then and a lot

911
00:41:56,219 --> 00:41:57,539
of the times it's not like somebody's

912
00:41:57,539 --> 00:41:59,670
doing something maliciously this is just

913
00:41:59,670 --> 00:42:00,749
happening because they don't know what

914
00:42:00,749 --> 00:42:03,539
they're doing I spoke to the head

915
00:42:03,539 --> 00:42:05,759
engineer at this app who was this one

916
00:42:05,759 --> 00:42:07,950
guy who I hooked on his life didn't

917
00:42:07,950 --> 00:42:08,369
stuff

918
00:42:08,369 --> 00:42:11,279
his background was like a web developer

919
00:42:11,279 --> 00:42:13,589
he does JavaScript stuff like primarily

920
00:42:13,589 --> 00:42:16,259
he makes really pretty stuff he doesn't

921
00:42:16,259 --> 00:42:19,109
know about security apparently so I and

922
00:42:19,109 --> 00:42:22,170
you know I didn't want to out him so

923
00:42:22,170 --> 00:42:24,089
that's why I waited until they fixed all

924
00:42:24,089 --> 00:42:25,890
this stuff before disclosing any of it

925
00:42:25,890 --> 00:42:28,319
but like you know they made an app I

926
00:42:28,319 --> 00:42:29,940
think the company contracted this guy to

927
00:42:29,940 --> 00:42:32,009
make this app he made it he got popular

928
00:42:32,009 --> 00:42:33,839
and great but they're not thinking like

929
00:42:33,839 --> 00:42:35,339
afterwards about security worth we're

930
00:42:35,339 --> 00:42:37,319
adding features patch on security later

931
00:42:37,319 --> 00:42:42,359
if ever so rest in and of itself isn't

932
00:42:42,359 --> 00:42:44,700
easy to use API design which can easily

933
00:42:44,700 --> 00:42:46,229
be exploited if it's not properly

934
00:42:46,229 --> 00:42:48,479
secured and not because of any specific

935
00:42:48,479 --> 00:42:52,309
technical means but because exploiting

936
00:42:52,309 --> 00:42:54,479
exploiting apps that you don't know

937
00:42:54,479 --> 00:42:55,920
about or things like that or is a lot

938
00:42:55,920 --> 00:42:58,229
easier when you can read exactly what it

939
00:42:58,229 --> 00:42:59,940
does when it takes the guessing out of

940
00:42:59,940 --> 00:43:01,469
it you don't need to say what the hell

941
00:43:01,469 --> 00:43:03,539
is this random string like Oh get

942
00:43:03,539 --> 00:43:04,720
messages I

943
00:43:04,720 --> 00:43:08,349
for what that means be careful about

944
00:43:08,349 --> 00:43:13,650
what happens to use that use GPS ok so

945
00:43:13,650 --> 00:43:16,720
last slide is contact info but I'm also

946
00:43:16,720 --> 00:43:18,520
going to open up the quick for questions

947
00:43:18,520 --> 00:43:25,930
so you can reach me on Twitter at HM and

948
00:43:25,930 --> 00:43:28,919
here's my github

949
00:44:49,550 --> 00:44:52,280
right translate ancient you'll find all

950
00:44:52,280 --> 00:45:08,720
sorts of stuff in these things that I do

951
00:45:08,720 --> 00:45:10,790
also want to add because you know oh

952
00:45:10,790 --> 00:45:13,250
it's hard to implement security a parse

953
00:45:13,250 --> 00:45:16,070
has access control was available as part

954
00:45:16,070 --> 00:45:17,750
of the API that you can very easily add

955
00:45:17,750 --> 00:45:19,760
in fact that's exactly what the company

956
00:45:19,760 --> 00:45:23,660
did they added a CLS to this rather

957
00:45:23,660 --> 00:45:26,180
quickly so it wasn't some huge complex

958
00:45:26,180 --> 00:45:28,730
thing so if they weren't doing that you

959
00:45:28,730 --> 00:45:30,680
know who else is missing out on that and

960
00:45:30,680 --> 00:45:33,110
as you as you could see the only

961
00:45:33,110 --> 00:45:35,690
information I needed was what was passed

962
00:45:35,690 --> 00:45:37,430
back to me a couple of times and that

963
00:45:37,430 --> 00:45:39,200
was my search those were my search

964
00:45:39,200 --> 00:45:42,560
parameters since you know the I

965
00:45:42,560 --> 00:45:45,470
mentioned the user URL that's standard

966
00:45:45,470 --> 00:45:47,120
across all parse accounts while the rest

967
00:45:47,120 --> 00:45:49,820
of it is you know custom classes that

968
00:45:49,820 --> 00:45:52,610
the app developer chooses well they're

969
00:45:52,610 --> 00:45:54,590
not very well hidden because they get

970
00:45:54,590 --> 00:45:56,210
passed back to you especially when you

971
00:45:56,210 --> 00:45:58,970
say include all user details now you got

972
00:45:58,970 --> 00:46:04,959
everything so any other questions yes I

973
00:46:09,190 --> 00:46:11,690
honestly can't say I haven't used burpin

974
00:46:11,690 --> 00:46:14,900
in automated capacity I usually just

975
00:46:14,900 --> 00:47:19,850
manually examine traffic hey I have

976
00:47:19,850 --> 00:47:21,710
something to add to that that just came

977
00:47:21,710 --> 00:47:24,020
up the other day friend of mine who

978
00:47:24,020 --> 00:47:26,300
lives in the Charlotte area apparently

979
00:47:26,300 --> 00:47:28,160
just outside Charlotte I don't know the

980
00:47:28,160 --> 00:47:30,140
area two O's Huntersville is that sound

981
00:47:30,140 --> 00:47:32,660
right apparently he lives there but he's

982
00:47:32,660 --> 00:47:34,310
technically Charlotte's but his address

983
00:47:34,310 --> 00:47:35,810
is Huntersville he wanted at Google

984
00:47:35,810 --> 00:47:38,990
Fiber shirt really badly so apparently

985
00:47:38,990 --> 00:47:41,180
it was rejecting it though because he

986
00:47:41,180 --> 00:47:43,150
didn't have a Charlotte address so he

987
00:47:43,150 --> 00:47:46,400
explored the JavaScript on that forum

988
00:47:46,400 --> 00:47:48,680
page and apparently he found if you just

989
00:47:48,680 --> 00:47:51,410
changed that you know who say one word

990
00:47:51,410 --> 00:47:53,530
zero or something like that you know

991
00:47:53,530 --> 00:47:56,600
spoof yes Charlotte's and he got his

992
00:47:56,600 --> 00:47:59,410
free shirt so

993
00:48:18,059 --> 00:48:20,440
it's there it's amazing what you can

994
00:48:20,440 --> 00:48:22,540
find if you just walk people count or

995
00:48:22,540 --> 00:48:25,240
the developers count on you not looking

996
00:48:25,240 --> 00:48:27,220
it's not any kind of black magic it's

997
00:48:27,220 --> 00:48:30,460
just using you know like the developer

998
00:48:30,460 --> 00:49:11,079
tools and chrome that's that's the

999
00:49:11,079 --> 00:49:22,650
steepest piece of rest yes sir yeah

1000
00:49:26,060 --> 00:49:33,300
right I I personally do not know any off

1001
00:49:33,300 --> 00:49:34,650
the top of my head except I'd you know

1002
00:49:34,650 --> 00:49:37,560
if it was doing sir pinning based on the

1003
00:49:37,560 --> 00:49:39,900
first search that it got if you wiped

1004
00:49:39,900 --> 00:49:42,150
the app data or not app data but you

1005
00:49:42,150 --> 00:49:44,190
know I guess app data on in this case

1006
00:49:44,190 --> 00:49:46,440
that would probably work um does anybody

1007
00:49:46,440 --> 00:49:48,810
have an answer for that how do you like

1008
00:49:48,810 --> 00:49:51,090
say you can't or say it's built into the

1009
00:49:51,090 --> 00:49:52,710
app does anybody know of a way to get

1010
00:49:52,710 --> 00:50:09,390
around that is that using like smiling

1011
00:50:09,390 --> 00:50:12,140
or something like that

1012
00:50:40,920 --> 00:50:46,200
any other questions all right thanks a

1013
00:50:46,200 --> 00:50:48,560
lot guys

