1
00:00:03,600 --> 00:00:06,540
all right so can everybody hear me all

2
00:00:06,540 --> 00:00:09,179
right good so I'm gonna do a talk on uh

3
00:00:09,179 --> 00:00:12,719
attacking uh.net web services uh this is

4
00:00:12,719 --> 00:00:14,940
more of a talk kind of uh about my

5
00:00:14,940 --> 00:00:16,859
general process on how you know I kind

6
00:00:16,859 --> 00:00:19,320
of go through some of these things

7
00:00:19,320 --> 00:00:22,140
uh as she said I am Ryan winsey I work

8
00:00:22,140 --> 00:00:25,199
for Spira uh I do a lot of uh bug

9
00:00:25,199 --> 00:00:27,660
hunting uh where we do primarily red

10
00:00:27,660 --> 00:00:30,420
team work for the Navy

11
00:00:30,420 --> 00:00:33,059
um I have uh my history here some some

12
00:00:33,059 --> 00:00:35,160
advisories that I found some of the cves

13
00:00:35,160 --> 00:00:36,840
I've gotten when I've looked for certain

14
00:00:36,840 --> 00:00:39,000
types of bugs as well as a link here to

15
00:00:39,000 --> 00:00:41,100
the last talk I gave uh that's kind of

16
00:00:41,100 --> 00:00:43,260
similar to this uh here at besides in

17
00:00:43,260 --> 00:00:45,899
2015. uh it was a similar kind of

18
00:00:45,899 --> 00:00:47,280
walkthrough but more for memory

19
00:00:47,280 --> 00:00:49,320
corruption type bugs uh where this one's

20
00:00:49,320 --> 00:00:51,719
going to be more uh web services kind of

21
00:00:51,719 --> 00:00:53,700
the newer type things that are out uh

22
00:00:53,700 --> 00:00:55,260
since memory corruption seems to be kind

23
00:00:55,260 --> 00:00:58,020
of going away in a certain regard

24
00:00:58,020 --> 00:00:59,600
thank you

25
00:00:59,600 --> 00:01:01,860
all right so kind of to go through what

26
00:01:01,860 --> 00:01:04,080
I I mentioned a second ago so this this

27
00:01:04,080 --> 00:01:05,939
talk is going to be

28
00:01:05,939 --> 00:01:08,280
um kind of more process related uh in

29
00:01:08,280 --> 00:01:10,860
regards to you know hey I had a Target

30
00:01:10,860 --> 00:01:12,780
that we got assigned to uh we're gonna

31
00:01:12,780 --> 00:01:14,760
be doing a kind of white box code review

32
00:01:14,760 --> 00:01:18,299
uh of the the software here

33
00:01:18,299 --> 00:01:19,979
um our customer kind of gave us a couple

34
00:01:19,979 --> 00:01:21,600
weeks they said hey we want you to find

35
00:01:21,600 --> 00:01:22,799
some vulnerabilities we want you to

36
00:01:22,799 --> 00:01:26,640
prove impact uh tell us why we care

37
00:01:26,640 --> 00:01:28,560
um so as we walk through this you know

38
00:01:28,560 --> 00:01:30,600
that's kind of the the goals here we're

39
00:01:30,600 --> 00:01:31,920
going to be looking for vulnerabilities

40
00:01:31,920 --> 00:01:34,140
uh interesting things

41
00:01:34,140 --> 00:01:35,880
um as well as kind of displaying some of

42
00:01:35,880 --> 00:01:37,860
the tools that we had to do or to use to

43
00:01:37,860 --> 00:01:39,119
do so

44
00:01:39,119 --> 00:01:40,619
um and then at the end of it I'm going

45
00:01:40,619 --> 00:01:42,600
to show okay based on some of these bugs

46
00:01:42,600 --> 00:01:44,340
it might have found uh here's some of

47
00:01:44,340 --> 00:01:46,079
the ways that you would exploit them uh

48
00:01:46,079 --> 00:01:48,659
to kind of show impact

49
00:01:48,659 --> 00:01:50,780
yeah

50
00:01:51,420 --> 00:01:53,579
a few of the tools that I've note that

51
00:01:53,579 --> 00:01:54,899
I'll go through here

52
00:01:54,899 --> 00:01:55,619
um

53
00:01:55,619 --> 00:01:58,439
moans mostly for reversing uh and

54
00:01:58,439 --> 00:02:01,020
debugging as well as kind of the exploit

55
00:02:01,020 --> 00:02:04,799
phase uh we got dnspy and Dot Peak uh

56
00:02:04,799 --> 00:02:06,420
they're gonna be primarily for the.net

57
00:02:06,420 --> 00:02:09,239
reversing as well as the debugging uh

58
00:02:09,239 --> 00:02:10,380
and then the last of course is burp

59
00:02:10,380 --> 00:02:12,000
Suite that's going to help us kind of

60
00:02:12,000 --> 00:02:13,560
walk through some of the the web

61
00:02:13,560 --> 00:02:15,840
exploits and sending those packets to

62
00:02:15,840 --> 00:02:17,400
make sure that uh we can actually see

63
00:02:17,400 --> 00:02:19,500
some effects

64
00:02:19,500 --> 00:02:21,680
foreign

65
00:02:23,340 --> 00:02:27,120
so our Target here uh this is a a piece

66
00:02:27,120 --> 00:02:29,640
of software that's put out by uh Siemens

67
00:02:29,640 --> 00:02:31,440
health and ears it's called Cinco

68
00:02:31,440 --> 00:02:33,780
Dynamics uh we had this on a customer

69
00:02:33,780 --> 00:02:36,239
Target uh it's used primarily for doing

70
00:02:36,239 --> 00:02:39,660
kind of cardiovascular Imaging but when

71
00:02:39,660 --> 00:02:41,040
you look behind the scenes it's really

72
00:02:41,040 --> 00:02:42,720
just kind of a thin wrapper around a

73
00:02:42,720 --> 00:02:45,239
whole bunch of net web services

74
00:02:45,239 --> 00:02:46,980
um so that's kind of the basis of this

75
00:02:46,980 --> 00:02:48,300
whole talk we're going to be using it as

76
00:02:48,300 --> 00:02:50,400
kind of our example on what you would

77
00:02:50,400 --> 00:02:51,959
look at if you uh were trying to do

78
00:02:51,959 --> 00:02:54,420
something similar

79
00:02:54,420 --> 00:02:56,760
all right

80
00:02:56,760 --> 00:02:58,680
all right so again kind of giving

81
00:02:58,680 --> 00:03:00,720
context here

82
00:03:00,720 --> 00:03:02,519
um you know if you were given this task

83
00:03:02,519 --> 00:03:04,260
one of the the primary things you're

84
00:03:04,260 --> 00:03:05,459
gonna have to do first is kind of get

85
00:03:05,459 --> 00:03:07,500
access to the software

86
00:03:07,500 --> 00:03:09,180
um so in our example you know we were

87
00:03:09,180 --> 00:03:10,680
kind of given

88
00:03:10,680 --> 00:03:13,080
um you know access to these systems that

89
00:03:13,080 --> 00:03:15,120
has the software installed

90
00:03:15,120 --> 00:03:17,040
um so one of the things we like to do is

91
00:03:17,040 --> 00:03:19,800
try to model this environment uh outside

92
00:03:19,800 --> 00:03:21,900
of the system so one of the things you

93
00:03:21,900 --> 00:03:23,220
would do in this scenario if you

94
00:03:23,220 --> 00:03:24,900
couldn't get access to the software is

95
00:03:24,900 --> 00:03:28,260
grab what you can off of that Target try

96
00:03:28,260 --> 00:03:30,720
to get it over to your environment uh

97
00:03:30,720 --> 00:03:32,640
try to model it yourself on a similar

98
00:03:32,640 --> 00:03:35,120
you know VM or something of the like

99
00:03:35,120 --> 00:03:37,440
make sure you try to get it configured

100
00:03:37,440 --> 00:03:40,099
and that sort of thing

101
00:03:40,099 --> 00:03:42,239
so some of the details you'll see later

102
00:03:42,239 --> 00:03:43,739
on here is kind of going through that

103
00:03:43,739 --> 00:03:45,000
process of

104
00:03:45,000 --> 00:03:46,319
here's what it would be like if you were

105
00:03:46,319 --> 00:03:47,879
able to actually get the software and

106
00:03:47,879 --> 00:03:49,200
how to try to get it up running yourself

107
00:03:49,200 --> 00:03:51,060
uh so you can go through and actually

108
00:03:51,060 --> 00:03:53,280
try to look for vulnerabilities and

109
00:03:53,280 --> 00:03:56,480
debug through it

110
00:03:59,640 --> 00:04:00,959
so one of the first things when you're

111
00:04:00,959 --> 00:04:03,060
looking at say you know a.net web

112
00:04:03,060 --> 00:04:06,840
application uh unlike you know a regular

113
00:04:06,840 --> 00:04:09,060
service binary application where it's

114
00:04:09,060 --> 00:04:11,040
super simple and you're like hey here's

115
00:04:11,040 --> 00:04:12,180
this application that's running I know

116
00:04:12,180 --> 00:04:13,439
where the code is

117
00:04:13,439 --> 00:04:15,120
um you start reversing it with web

118
00:04:15,120 --> 00:04:17,760
services it's not as clear-cut first you

119
00:04:17,760 --> 00:04:19,978
kind of have to find it so one of the

120
00:04:19,978 --> 00:04:22,199
easier places to kind of start that that

121
00:04:22,199 --> 00:04:24,600
path there where to look as you start

122
00:04:24,600 --> 00:04:26,160
looking in the configuration files for

123
00:04:26,160 --> 00:04:27,080
IIs

124
00:04:27,080 --> 00:04:29,220
one of the first places to look here is

125
00:04:29,220 --> 00:04:31,800
your inet server config as you can see

126
00:04:31,800 --> 00:04:32,940
here it's going to start telling you

127
00:04:32,940 --> 00:04:34,740
where on disk some of these things are

128
00:04:34,740 --> 00:04:37,740
installed to start prodding further that

129
00:04:37,740 --> 00:04:39,780
leads you to your web configs for the

130
00:04:39,780 --> 00:04:41,580
particular application so you see here

131
00:04:41,580 --> 00:04:43,560
in the bottom right when you start

132
00:04:43,560 --> 00:04:44,820
looking there it starts kind of giving

133
00:04:44,820 --> 00:04:46,500
you ideas of here's the particular

134
00:04:46,500 --> 00:04:49,440
classes Here's the the the different

135
00:04:49,440 --> 00:04:52,139
paths they're going to be mapped to to

136
00:04:52,139 --> 00:04:53,639
kind of give you a better idea of hey

137
00:04:53,639 --> 00:04:54,840
this is where I need to start looking

138
00:04:54,840 --> 00:04:56,820
these are the places I need to start

139
00:04:56,820 --> 00:04:58,800
investigating to see if I can track down

140
00:04:58,800 --> 00:05:00,479
where the code is for this web

141
00:05:00,479 --> 00:05:02,900
application

142
00:05:06,180 --> 00:05:08,100
so if you follow those through and you

143
00:05:08,100 --> 00:05:09,600
start looking on disk where you know the

144
00:05:09,600 --> 00:05:12,060
config files are pointing uh we take

145
00:05:12,060 --> 00:05:13,860
example one right here is called data

146
00:05:13,860 --> 00:05:15,900
transfer services you're gonna find a

147
00:05:15,900 --> 00:05:19,139
whole bunch of these files in a SVC

148
00:05:19,139 --> 00:05:20,820
um so sorry starting sound like web

149
00:05:20,820 --> 00:05:22,440
services

150
00:05:22,440 --> 00:05:24,360
um you open one up and you start seeing

151
00:05:24,360 --> 00:05:26,639
some definitions here that say simply

152
00:05:26,639 --> 00:05:29,039
and it has you know pretty generic names

153
00:05:29,039 --> 00:05:31,440
like okay data transfer services but it

154
00:05:31,440 --> 00:05:33,240
doesn't look like a particular file so

155
00:05:33,240 --> 00:05:35,039
you you're getting a little closer but

156
00:05:35,039 --> 00:05:36,780
you're still not kind of exactly you

157
00:05:36,780 --> 00:05:38,280
know what this file is or where it is

158
00:05:38,280 --> 00:05:41,840
but you're on the right track

159
00:05:45,360 --> 00:05:47,039
so in that config file and reference

160
00:05:47,039 --> 00:05:48,780
something called an assembly so if you

161
00:05:48,780 --> 00:05:50,539
look at what assemblies are in.net

162
00:05:50,539 --> 00:05:52,740
here's a quick kind of explanation for

163
00:05:52,740 --> 00:05:54,780
Microsoft tells you assemblies are

164
00:05:54,780 --> 00:05:58,020
typically you know an exe or a dll

165
00:05:58,020 --> 00:05:59,460
um it's going to be in your your.net

166
00:05:59,460 --> 00:06:02,100
application so you're in that directory

167
00:06:02,100 --> 00:06:04,139
that we saw earlier so you start poking

168
00:06:04,139 --> 00:06:05,580
around see if you can actually find any

169
00:06:05,580 --> 00:06:07,320
dlls or executables in that same

170
00:06:07,320 --> 00:06:09,360
directory structure

171
00:06:09,360 --> 00:06:11,340
so you'll see here I just brought up

172
00:06:11,340 --> 00:06:13,500
search in that same directory that had

173
00:06:13,500 --> 00:06:14,759
all the service files and just start

174
00:06:14,759 --> 00:06:17,100
looking for dlls and executables they're

175
00:06:17,100 --> 00:06:19,500
in that actual directory structure there

176
00:06:19,500 --> 00:06:21,720
and you'll see pretty quickly uh the

177
00:06:21,720 --> 00:06:23,039
name of that service that we looked for

178
00:06:23,039 --> 00:06:24,780
in the config file there's a dll that's

179
00:06:24,780 --> 00:06:26,639
named the same thing so there's a good

180
00:06:26,639 --> 00:06:28,020
chance this is exactly the file we're

181
00:06:28,020 --> 00:06:30,380
looking for

182
00:06:33,539 --> 00:06:35,520
so at this point you kind of want to

183
00:06:35,520 --> 00:06:36,600
crack that open you want to start

184
00:06:36,600 --> 00:06:38,699
looking at you know what's in this dll

185
00:06:38,699 --> 00:06:40,979
is this actually the

186
00:06:40,979 --> 00:06:43,440
the uh the code for the web service that

187
00:06:43,440 --> 00:06:44,759
I'm looking for and what's that going to

188
00:06:44,759 --> 00:06:47,039
look like so one of the first tools that

189
00:06:47,039 --> 00:06:49,800
we're going to show here is uh jetbrains

190
00:06:49,800 --> 00:06:51,840
dot Peak

191
00:06:51,840 --> 00:06:53,280
um dot Peak is you know something you

192
00:06:53,280 --> 00:06:55,380
can load a dll into with this uh you

193
00:06:55,380 --> 00:06:56,819
know.net and they will actually reverse

194
00:06:56,819 --> 00:06:58,199
that for you it'll show you all the code

195
00:06:58,199 --> 00:06:59,940
that you need and you can actually start

196
00:06:59,940 --> 00:07:02,039
looking at it uh one of the nice things

197
00:07:02,039 --> 00:07:03,240
about

198
00:07:03,240 --> 00:07:04,800
um jet brands that makes it a little bit

199
00:07:04,800 --> 00:07:06,780
different than some of his

200
00:07:06,780 --> 00:07:09,600
um other Alternatives is it also allows

201
00:07:09,600 --> 00:07:11,460
you to generate pdbs

202
00:07:11,460 --> 00:07:12,600
um this is something that will come in

203
00:07:12,600 --> 00:07:14,100
handy later when we start talking about

204
00:07:14,100 --> 00:07:15,660
debugging

205
00:07:15,660 --> 00:07:17,280
um could be useful something we might

206
00:07:17,280 --> 00:07:21,198
have to have uh going forward

207
00:07:24,599 --> 00:07:26,160
as I mentioned one of the main

208
00:07:26,160 --> 00:07:28,139
Alternatives a lot of other folks use is

209
00:07:28,139 --> 00:07:30,060
called the inspy it looks almost

210
00:07:30,060 --> 00:07:32,520
identical uh the developer I assume just

211
00:07:32,520 --> 00:07:34,500
kind of used jetbrains probably as a you

212
00:07:34,500 --> 00:07:36,419
know a template for what they wanted to

213
00:07:36,419 --> 00:07:38,580
look like this is open source

214
00:07:38,580 --> 00:07:40,620
um last similar functionality the big

215
00:07:40,620 --> 00:07:42,780
difference between this and jetbrains is

216
00:07:42,780 --> 00:07:44,880
this allows you actually do debugging

217
00:07:44,880 --> 00:07:46,680
which is going to be very useful when

218
00:07:46,680 --> 00:07:47,639
you get to the part where you actually

219
00:07:47,639 --> 00:07:48,960
want to run your code and see what you

220
00:07:48,960 --> 00:07:50,699
can do with it

221
00:07:50,699 --> 00:07:51,240
um

222
00:07:51,240 --> 00:07:52,979
but yeah otherwise you can see you know

223
00:07:52,979 --> 00:07:54,780
it's almost identical

224
00:07:54,780 --> 00:07:56,099
um in this particular example we're

225
00:07:56,099 --> 00:07:58,620
looking at our data transfer services uh

226
00:07:58,620 --> 00:08:00,479
that we were looking for earlier uh this

227
00:08:00,479 --> 00:08:02,160
is a class here

228
00:08:02,160 --> 00:08:03,660
um and one of the interesting things to

229
00:08:03,660 --> 00:08:05,280
note I have brought up here is there's

230
00:08:05,280 --> 00:08:06,840
something called contracts when it comes

231
00:08:06,840 --> 00:08:08,819
to these web services and if you're very

232
00:08:08,819 --> 00:08:12,240
familiar with coding in general and the

233
00:08:12,240 --> 00:08:14,580
idea of things like interfaces

234
00:08:14,580 --> 00:08:16,560
um a contract is kind of a similar idea

235
00:08:16,560 --> 00:08:18,660
where it says okay here's the functions

236
00:08:18,660 --> 00:08:20,300
that a service would actually expose

237
00:08:20,300 --> 00:08:22,620
think of it as the different things that

238
00:08:22,620 --> 00:08:24,120
you could call through your web service

239
00:08:24,120 --> 00:08:25,979
so this is going to be very important to

240
00:08:25,979 --> 00:08:27,419
us when we start trying to actually

241
00:08:27,419 --> 00:08:29,460
utilize our web service and the

242
00:08:29,460 --> 00:08:31,259
different you know entry points that

243
00:08:31,259 --> 00:08:32,520
we're going to start looking at when we

244
00:08:32,520 --> 00:08:34,559
start reverse engineering

245
00:08:34,559 --> 00:08:37,620
so again you know we got a handful here

246
00:08:37,620 --> 00:08:39,000
and at this point we're going to start

247
00:08:39,000 --> 00:08:40,559
kind of digging deeper and pick a couple

248
00:08:40,559 --> 00:08:42,179
out and start seeing how would you

249
00:08:42,179 --> 00:08:43,740
actually look at the code where do you

250
00:08:43,740 --> 00:08:46,140
go after you you have a contract or an

251
00:08:46,140 --> 00:08:47,820
interface uh to actually start doing

252
00:08:47,820 --> 00:08:50,480
something useful

253
00:08:52,860 --> 00:08:55,580
all right so we have

254
00:08:57,600 --> 00:09:00,600
uh dot P but D and spy does the same

255
00:09:00,600 --> 00:09:01,880
thing they have all the same

256
00:09:01,880 --> 00:09:04,320
functionality so if you were to click on

257
00:09:04,320 --> 00:09:06,120
one of your contracts here let's ride on

258
00:09:06,120 --> 00:09:08,760
over to get go to implementation

259
00:09:08,760 --> 00:09:11,120
foreign

260
00:09:15,440 --> 00:09:18,420
this particular example

261
00:09:18,420 --> 00:09:19,920
um you start seeing some useful things

262
00:09:19,920 --> 00:09:22,140
has has to do with files which is one of

263
00:09:22,140 --> 00:09:23,940
the key indications of things I like to

264
00:09:23,940 --> 00:09:25,980
look for uh when you're looking for web

265
00:09:25,980 --> 00:09:27,720
services uh some of your common

266
00:09:27,720 --> 00:09:29,459
vulnerabilities are like file uploads

267
00:09:29,459 --> 00:09:31,560
file rights those types of things so

268
00:09:31,560 --> 00:09:33,060
already this kind of jumps out to me as

269
00:09:33,060 --> 00:09:34,260
something that could be interesting to

270
00:09:34,260 --> 00:09:35,600
look into

271
00:09:35,600 --> 00:09:38,720
thank you

272
00:09:39,959 --> 00:09:41,760
uh this is the later part of that same

273
00:09:41,760 --> 00:09:44,100
function super small

274
00:09:44,100 --> 00:09:44,820
um

275
00:09:44,820 --> 00:09:47,220
as you can see here it opens up a file

276
00:09:47,220 --> 00:09:49,080
it actually reads it and then it just

277
00:09:49,080 --> 00:09:50,399
passes it straight back

278
00:09:50,399 --> 00:09:51,899
so this is already kind of sounding

279
00:09:51,899 --> 00:09:54,540
interesting this might be a possible you

280
00:09:54,540 --> 00:09:56,880
know local file read uh just straight

281
00:09:56,880 --> 00:09:58,980
from you know remote procedure call

282
00:09:58,980 --> 00:10:01,140
which is one of your your entry points

283
00:10:01,140 --> 00:10:04,699
into this web service

284
00:10:10,080 --> 00:10:12,779
so another thing I meant to point out

285
00:10:12,779 --> 00:10:14,580
here uh that also it was interesting

286
00:10:14,580 --> 00:10:16,440
that I wasn't super familiar with at the

287
00:10:16,440 --> 00:10:17,580
time so you start actually looking

288
00:10:17,580 --> 00:10:19,500
through some of this code uh the one of

289
00:10:19,500 --> 00:10:20,580
the things that looks interesting is

290
00:10:20,580 --> 00:10:22,500
that one of the arguments that you have

291
00:10:22,500 --> 00:10:24,839
here is this dysfunction our file name

292
00:10:24,839 --> 00:10:26,700
that we actually control is passed into

293
00:10:26,700 --> 00:10:29,399
this function called path combined it

294
00:10:29,399 --> 00:10:31,200
takes in you know what looks to be some

295
00:10:31,200 --> 00:10:33,480
kind of configuration path to the root

296
00:10:33,480 --> 00:10:36,060
and then our file name creates you know

297
00:10:36,060 --> 00:10:37,920
a combination of that through path

298
00:10:37,920 --> 00:10:39,839
combined and then it passes it on to

299
00:10:39,839 --> 00:10:40,920
actually be red

300
00:10:40,920 --> 00:10:42,899
so at first glance you probably think

301
00:10:42,899 --> 00:10:44,820
okay well that sounds normal right like

302
00:10:44,820 --> 00:10:46,320
you're going to have one argument that

303
00:10:46,320 --> 00:10:47,700
you don't control one that you do

304
00:10:47,700 --> 00:10:49,260
they're going to safely combine those

305
00:10:49,260 --> 00:10:51,660
together no big deal how's any kind of

306
00:10:51,660 --> 00:10:54,120
vulnerabilities here

307
00:10:54,120 --> 00:10:55,680
but we skip forward here and you

308
00:10:55,680 --> 00:10:57,240
actually look at this article that

309
00:10:57,240 --> 00:11:00,120
Pretoria put out a year or two ago

310
00:11:00,120 --> 00:11:01,920
uh they found a very interesting effect

311
00:11:01,920 --> 00:11:04,380
here which was passing behind actually

312
00:11:04,380 --> 00:11:06,060
will take

313
00:11:06,060 --> 00:11:08,040
both of those parameters

314
00:11:08,040 --> 00:11:10,560
and if you have one to say absolute path

315
00:11:10,560 --> 00:11:12,480
it will just ignore the other one

316
00:11:12,480 --> 00:11:15,060
so super interesting because now we

317
00:11:15,060 --> 00:11:16,740
always have the equivalent of a you know

318
00:11:16,740 --> 00:11:18,180
direct Universal or something similar

319
00:11:18,180 --> 00:11:20,160
where we can arbitrarily control the

320
00:11:20,160 --> 00:11:21,360
path

321
00:11:21,360 --> 00:11:23,339
um to whatever this argument that comes

322
00:11:23,339 --> 00:11:26,760
in so we got lucky here and that we have

323
00:11:26,760 --> 00:11:28,260
what we thought this is a local filing

324
00:11:28,260 --> 00:11:29,100
thing

325
00:11:29,100 --> 00:11:31,019
so pretty interesting right get all

326
00:11:31,019 --> 00:11:32,220
excited and you're like okay this could

327
00:11:32,220 --> 00:11:34,700
be interesting

328
00:11:37,200 --> 00:11:39,000
all right so if we skip back to our

329
00:11:39,000 --> 00:11:41,040
services here uh when we're looking for

330
00:11:41,040 --> 00:11:43,920
the code earlier you know usually once I

331
00:11:43,920 --> 00:11:45,000
get to this point where I'm like okay

332
00:11:45,000 --> 00:11:46,680
there could be an interesting finding I

333
00:11:46,680 --> 00:11:48,600
really want to see if this is real you

334
00:11:48,600 --> 00:11:49,680
know now you actually want to start

335
00:11:49,680 --> 00:11:51,959
constructing some kind of POC some kind

336
00:11:51,959 --> 00:11:53,700
of payload so you can actually confirm

337
00:11:53,700 --> 00:11:55,740
your findings right so how do we get to

338
00:11:55,740 --> 00:11:57,839
the point where I'm looking at code

339
00:11:57,839 --> 00:12:00,779
in this weird you know web services.net

340
00:12:00,779 --> 00:12:02,940
stuff how do I convert this on over so

341
00:12:02,940 --> 00:12:04,920
that I can start sending packets because

342
00:12:04,920 --> 00:12:06,600
at this point I have no clue how to put

343
00:12:06,600 --> 00:12:08,640
that together so all I see is service

344
00:12:08,640 --> 00:12:10,140
contracts I don't know what that is how

345
00:12:10,140 --> 00:12:12,620
that works

346
00:12:14,420 --> 00:12:17,399
so if we take a look at some of these

347
00:12:17,399 --> 00:12:19,500
you know naming uh you know

348
00:12:19,500 --> 00:12:21,660
terminologies or whatever

349
00:12:21,660 --> 00:12:24,120
think of it here as our WWE root and

350
00:12:24,120 --> 00:12:25,560
then of course into our directory here

351
00:12:25,560 --> 00:12:27,420
that in this example it's data transfer

352
00:12:27,420 --> 00:12:29,160
services

353
00:12:29,160 --> 00:12:31,200
um our WWE that's going to be just like

354
00:12:31,200 --> 00:12:33,540
regular website right starting there at

355
00:12:33,540 --> 00:12:35,519
root everything behind it to you know

356
00:12:35,519 --> 00:12:37,620
your url so if we're gonna just guess

357
00:12:37,620 --> 00:12:39,180
and say okay how could I get to one of

358
00:12:39,180 --> 00:12:40,800
these Services I'm probably just going

359
00:12:40,800 --> 00:12:42,600
to type in data transfer services and

360
00:12:42,600 --> 00:12:44,579
I'm going to pick one of these these SVC

361
00:12:44,579 --> 00:12:47,940
files to see if I can get there

362
00:12:47,940 --> 00:12:49,500
so here's an example

363
00:12:49,500 --> 00:12:52,740
we picked commonservices.scc within our

364
00:12:52,740 --> 00:12:54,300
data transfer services we're going to

365
00:12:54,300 --> 00:12:55,740
put it in our browser and just see what

366
00:12:55,740 --> 00:12:57,420
what comes up what's the service look

367
00:12:57,420 --> 00:12:59,040
like with.net

368
00:12:59,040 --> 00:13:00,660
so this is probably going to be your

369
00:13:00,660 --> 00:13:02,339
most common example of what that would

370
00:13:02,339 --> 00:13:04,740
look like it's going to say service

371
00:13:04,740 --> 00:13:06,540
it's gonna not tell you much else it's

372
00:13:06,540 --> 00:13:08,579
going to say your metadata is disabled

373
00:13:08,579 --> 00:13:09,959
and you're like okay well that doesn't

374
00:13:09,959 --> 00:13:12,540
tell me much how do I actually use any

375
00:13:12,540 --> 00:13:13,860
of these functions that we're looking at

376
00:13:13,860 --> 00:13:15,899
how do I send a packet to this I don't

377
00:13:15,899 --> 00:13:16,980
understand

378
00:13:16,980 --> 00:13:19,019
so the cool thing about this is it

379
00:13:19,019 --> 00:13:20,160
actually kind of tells you the answer

380
00:13:20,160 --> 00:13:22,019
says okay well if you actually want to

381
00:13:22,019 --> 00:13:24,480
enable metadata AKA get more information

382
00:13:24,480 --> 00:13:26,820
about what's going on here go into the

383
00:13:26,820 --> 00:13:28,860
config file you put in this new

384
00:13:28,860 --> 00:13:30,540
configuration point and it's going to

385
00:13:30,540 --> 00:13:33,500
start showing you more information

386
00:13:34,820 --> 00:13:37,139
so we're going to navigate over to that

387
00:13:37,139 --> 00:13:39,660
same directory we're in as our SVC

388
00:13:39,660 --> 00:13:41,220
so we're going to open up the web config

389
00:13:41,220 --> 00:13:43,500
we're going to turn on the metadata here

390
00:13:43,500 --> 00:13:45,480
and see it's highlighted we do it for

391
00:13:45,480 --> 00:13:48,240
both HTTP HPS it's enabled now we're

392
00:13:48,240 --> 00:13:50,779
going to see what happens

393
00:13:51,540 --> 00:13:54,300
all right so if we go back now we get

394
00:13:54,300 --> 00:13:57,360
this new thing okay so it's changed

395
00:13:57,360 --> 00:13:59,519
still not super interesting I don't know

396
00:13:59,519 --> 00:14:01,440
what a whizzle is I don't know how to

397
00:14:01,440 --> 00:14:03,660
get a request out of this but

398
00:14:03,660 --> 00:14:05,880
Something's Happened something's changed

399
00:14:05,880 --> 00:14:07,860
and hopefully you can start getting more

400
00:14:07,860 --> 00:14:11,480
information on our next step

401
00:14:13,079 --> 00:14:16,139
so if you click on that link it shows a

402
00:14:16,139 --> 00:14:18,540
wisdle you'll see here we have some kind

403
00:14:18,540 --> 00:14:21,060
of protocol specification kind of shows

404
00:14:21,060 --> 00:14:23,160
okay these are all the things that this

405
00:14:23,160 --> 00:14:26,279
particular service exposes and all the

406
00:14:26,279 --> 00:14:27,300
different ways that you can interact

407
00:14:27,300 --> 00:14:30,240
with it it's all on XML most of us can't

408
00:14:30,240 --> 00:14:31,800
read this I don't know what this means

409
00:14:31,800 --> 00:14:33,660
so I mean we want to figure out how can

410
00:14:33,660 --> 00:14:35,639
I convert this into something useful

411
00:14:35,639 --> 00:14:37,320
because I want to start creating web

412
00:14:37,320 --> 00:14:39,300
requests I want to actually send

413
00:14:39,300 --> 00:14:41,100
something to these endpoints I want to

414
00:14:41,100 --> 00:14:43,880
see if I can read a file

415
00:14:44,880 --> 00:14:48,959
luckily burp has a nice big plug in here

416
00:14:48,959 --> 00:14:50,459
called Whistler

417
00:14:50,459 --> 00:14:53,399
you download this through extender

418
00:14:53,399 --> 00:14:55,440
you can pass over any of these XML

419
00:14:55,440 --> 00:14:57,420
whistles and they'll actually parse it

420
00:14:57,420 --> 00:14:59,660
for us

421
00:15:01,740 --> 00:15:03,839
just like so

422
00:15:03,839 --> 00:15:06,480
and it'll start showing okay so we

423
00:15:06,480 --> 00:15:08,399
we go to that page it's gonna show it

424
00:15:08,399 --> 00:15:09,959
here in our history and then if we

425
00:15:09,959 --> 00:15:11,760
parcel it over to Wizard and say parse

426
00:15:11,760 --> 00:15:14,300
wisdle

427
00:15:14,660 --> 00:15:17,160
then it's going to bring up this other

428
00:15:17,160 --> 00:15:19,199
page under the extension it's going to

429
00:15:19,199 --> 00:15:20,639
show us all the different operations

430
00:15:20,639 --> 00:15:23,100
here that we can use and then very

431
00:15:23,100 --> 00:15:25,019
conveniently below it it actually gives

432
00:15:25,019 --> 00:15:27,000
us a template here a little example

433
00:15:27,000 --> 00:15:28,980
request on how to actually get to it so

434
00:15:28,980 --> 00:15:31,019
super nice

435
00:15:31,019 --> 00:15:33,060
you'll see here we have one highlighted

436
00:15:33,060 --> 00:15:35,639
here that download patch update now I

437
00:15:35,639 --> 00:15:36,839
have a really simple way of actually

438
00:15:36,839 --> 00:15:38,639
just going in here and I can pass this

439
00:15:38,639 --> 00:15:40,320
straight to repeater and I have an

440
00:15:40,320 --> 00:15:42,180
example for how to

441
00:15:42,180 --> 00:15:44,880
send this request

442
00:15:44,880 --> 00:15:47,180
foreign

443
00:15:52,100 --> 00:15:54,740
you're actually seeing the name of our

444
00:15:54,740 --> 00:15:57,600
function there uh it looks very similar

445
00:15:57,600 --> 00:15:59,339
kind of the contract that we were

446
00:15:59,339 --> 00:16:01,380
looking at earlier it takes this update

447
00:16:01,380 --> 00:16:03,420
ID it takes the file name

448
00:16:03,420 --> 00:16:04,980
and that's it

449
00:16:04,980 --> 00:16:07,680
so super straightforward it's got

450
00:16:07,680 --> 00:16:09,839
everything done for us so let's just go

451
00:16:09,839 --> 00:16:11,339
straight straight to it and actually

452
00:16:11,339 --> 00:16:13,740
just pass in a full path and see if what

453
00:16:13,740 --> 00:16:15,540
we want actually works

454
00:16:15,540 --> 00:16:16,980
so sure enough

455
00:16:16,980 --> 00:16:18,600
let's see over here on the right I

456
00:16:18,600 --> 00:16:20,760
passed the path to Nancy host on Windows

457
00:16:20,760 --> 00:16:22,740
and we actually get

458
00:16:22,740 --> 00:16:23,880
Etsy host

459
00:16:23,880 --> 00:16:26,160
super interesting this seems like a big

460
00:16:26,160 --> 00:16:28,339
deal

461
00:16:30,380 --> 00:16:32,160
all right

462
00:16:32,160 --> 00:16:34,800
so a lot of times at this point you know

463
00:16:34,800 --> 00:16:36,540
we've actually you know done something

464
00:16:36,540 --> 00:16:38,699
interesting but I also kind of want to

465
00:16:38,699 --> 00:16:40,019
get to the point where let's say it

466
00:16:40,019 --> 00:16:41,820
didn't work first time or we actually

467
00:16:41,820 --> 00:16:43,680
get to these other functions that we

468
00:16:43,680 --> 00:16:45,120
actually want to start digging into

469
00:16:45,120 --> 00:16:47,399
right or let's say I didn't know what

470
00:16:47,399 --> 00:16:49,500
that first argument was and if you know

471
00:16:49,500 --> 00:16:52,019
I needed something specific to it you

472
00:16:52,019 --> 00:16:53,880
know I actually want to figure that out

473
00:16:53,880 --> 00:16:55,440
so at this point I'm kind of going to

474
00:16:55,440 --> 00:16:57,720
dive into the next piece of let's say we

475
00:16:57,720 --> 00:16:59,880
actually needed to debug it right so it

476
00:16:59,880 --> 00:17:01,440
didn't work the first time I actually

477
00:17:01,440 --> 00:17:03,779
need to see in code why it broke and how

478
00:17:03,779 --> 00:17:05,339
to go further

479
00:17:05,339 --> 00:17:07,500
so we're actually going to start trying

480
00:17:07,500 --> 00:17:10,579
to figure out how to debug

481
00:17:12,839 --> 00:17:14,579
all right so now if we switch over to

482
00:17:14,579 --> 00:17:17,880
the inspy we've got jetbrains you know

483
00:17:17,880 --> 00:17:19,619
dot peak's big brother or little brother

484
00:17:19,619 --> 00:17:23,339
it's a brother whatever right

485
00:17:23,339 --> 00:17:26,520
you go they have a debug menu here uh

486
00:17:26,520 --> 00:17:28,020
inside it actually has the ability to

487
00:17:28,020 --> 00:17:29,880
attach to a process

488
00:17:29,880 --> 00:17:31,620
so if we bring that up

489
00:17:31,620 --> 00:17:33,540
you can see listed here any of the IAS

490
00:17:33,540 --> 00:17:36,660
processes uh that are running currently

491
00:17:36,660 --> 00:17:38,460
if you don't see one you can send a

492
00:17:38,460 --> 00:17:40,740
request and it'll pop up

493
00:17:40,740 --> 00:17:42,480
one of the interesting things to point

494
00:17:42,480 --> 00:17:44,520
out here at the bottom here it kind of

495
00:17:44,520 --> 00:17:45,960
gives you a little hint if you don't see

496
00:17:45,960 --> 00:17:48,900
anything after you sent that request it

497
00:17:48,900 --> 00:17:50,220
wants to remind you there is a chance

498
00:17:50,220 --> 00:17:51,960
that you could have architecture issues

499
00:17:51,960 --> 00:17:55,740
right so like if you have inside IIs you

500
00:17:55,740 --> 00:17:57,539
know this is a 32-bit application and

501
00:17:57,539 --> 00:17:59,640
you're running 64-bit D and spy you're

502
00:17:59,640 --> 00:18:01,919
not going to see anything and so you

503
00:18:01,919 --> 00:18:03,299
have to make sure that you know exactly

504
00:18:03,299 --> 00:18:08,580
what architecture your is running at

505
00:18:08,580 --> 00:18:10,080
so kind of give you a little help there

506
00:18:10,080 --> 00:18:11,580
if you ever end up there because I did

507
00:18:11,580 --> 00:18:14,880
in this particular uh scenario

508
00:18:14,880 --> 00:18:17,280
you can go to your application pools uh

509
00:18:17,280 --> 00:18:19,799
configuration for IAS you click through

510
00:18:19,799 --> 00:18:21,660
advanced settings here and you'll have

511
00:18:21,660 --> 00:18:23,460
this nice little figuration Point

512
00:18:23,460 --> 00:18:24,660
they'll tell you whether or not you want

513
00:18:24,660 --> 00:18:27,120
to enable 32-bit or not if you do you

514
00:18:27,120 --> 00:18:29,400
can click on that uh and kind of Define

515
00:18:29,400 --> 00:18:31,320
how that particular application is

516
00:18:31,320 --> 00:18:33,480
running and then run it with the

517
00:18:33,480 --> 00:18:36,380
appropriate architecture

518
00:18:39,360 --> 00:18:41,640
all right so now we've got debugger

519
00:18:41,640 --> 00:18:43,500
running and so you're like all right so

520
00:18:43,500 --> 00:18:45,059
I'm about to start seeing some you know

521
00:18:45,059 --> 00:18:48,360
ability to step through my code and uh

522
00:18:48,360 --> 00:18:50,580
unfortunately you see this error so

523
00:18:50,580 --> 00:18:52,140
typically when you have a debugger

524
00:18:52,140 --> 00:18:53,880
running and you put a break point in the

525
00:18:53,880 --> 00:18:55,740
far left there that'll turn into a

526
00:18:55,740 --> 00:18:58,020
little solid red dot if it doesn't and

527
00:18:58,020 --> 00:19:00,000
it gives you that little you know sign

528
00:19:00,000 --> 00:19:02,400
that says there's a problem you load

529
00:19:02,400 --> 00:19:04,260
over it basically it's telling you hey

530
00:19:04,260 --> 00:19:06,000
yeah I'd love to debug for you but I

531
00:19:06,000 --> 00:19:07,620
don't have any symbols

532
00:19:07,620 --> 00:19:09,780
so this is where we were talking about

533
00:19:09,780 --> 00:19:11,700
earlier the differences between the

534
00:19:11,700 --> 00:19:15,360
Inspire and uh dot Peak so luckily with

535
00:19:15,360 --> 00:19:17,460
DOT Peak you can then go and generate

536
00:19:17,460 --> 00:19:20,039
those those symbols it'll create a pdb

537
00:19:20,039 --> 00:19:22,080
and then you can actually take that file

538
00:19:22,080 --> 00:19:24,179
and you can drop it in to wherever your

539
00:19:24,179 --> 00:19:26,039
service is and then it'll have its

540
00:19:26,039 --> 00:19:29,539
symbols and you actually start debugging

541
00:19:30,240 --> 00:19:33,059
here's a slide that kind of uh goes

542
00:19:33,059 --> 00:19:35,700
through that process so open up dot Peak

543
00:19:35,700 --> 00:19:37,440
go to the top of your project here

544
00:19:37,440 --> 00:19:39,419
generate your pdb drop it in and you

545
00:19:39,419 --> 00:19:42,080
should be good to go

546
00:19:43,440 --> 00:19:44,880
all right

547
00:19:44,880 --> 00:19:46,860
so now we were to step through the exact

548
00:19:46,860 --> 00:19:48,600
same function as before and we're trying

549
00:19:48,600 --> 00:19:51,840
to debug through it you'll see here

550
00:19:51,840 --> 00:19:53,760
we're actually stopped here at our

551
00:19:53,760 --> 00:19:56,280
particular line where it's taking in our

552
00:19:56,280 --> 00:19:57,900
path combined it's taking in the

553
00:19:57,900 --> 00:19:59,520
parameter we control along with what

554
00:19:59,520 --> 00:20:02,039
should be the right directory and we can

555
00:20:02,039 --> 00:20:04,860
verify right now down here the line is

556
00:20:04,860 --> 00:20:05,940
following it it's going to check whether

557
00:20:05,940 --> 00:20:07,860
or not my file exists but we can see in

558
00:20:07,860 --> 00:20:10,440
our debugger it is actually our full

559
00:20:10,440 --> 00:20:12,660
path rather than the right one

560
00:20:12,660 --> 00:20:14,220
so this kind of gives us more

561
00:20:14,220 --> 00:20:16,140
granularity again so like if we really

562
00:20:16,140 --> 00:20:18,299
want to dig into something else being

563
00:20:18,299 --> 00:20:20,280
able to have the debugger handy on an

564
00:20:20,280 --> 00:20:21,840
application that's already running that

565
00:20:21,840 --> 00:20:24,660
we don't have source code for uh these

566
00:20:24,660 --> 00:20:26,160
tools make it very simple to make it

567
00:20:26,160 --> 00:20:27,660
seem like we do and we're actually the

568
00:20:27,660 --> 00:20:30,059
developer even though we're not

569
00:20:30,059 --> 00:20:32,580
for fun here I've kind of highlighted

570
00:20:32,580 --> 00:20:34,799
the little bud there for you know both

571
00:20:34,799 --> 00:20:36,480
of the examples here where it's taking a

572
00:20:36,480 --> 00:20:39,299
path combined and using that in a way it

573
00:20:39,299 --> 00:20:41,539
shouldn't

574
00:20:43,380 --> 00:20:47,220
all right so we've verified our bug we

575
00:20:47,220 --> 00:20:49,140
stepped through our bug what's kind of

576
00:20:49,140 --> 00:20:50,520
the next steps here you know when you're

577
00:20:50,520 --> 00:20:52,380
doing some kind of source code audit and

578
00:20:52,380 --> 00:20:54,179
you're like okay I got something

579
00:20:54,179 --> 00:20:55,440
interesting

580
00:20:55,440 --> 00:20:57,960
is this just a one-time thing or they do

581
00:20:57,960 --> 00:20:59,580
this all over the place because they

582
00:20:59,580 --> 00:21:00,960
don't know about this

583
00:21:00,960 --> 00:21:02,760
so

584
00:21:02,760 --> 00:21:05,100
if you're in Linux you know you'd

585
00:21:05,100 --> 00:21:06,480
probably just start grabbing stuff right

586
00:21:06,480 --> 00:21:09,240
well in IIs in Windows environments they

587
00:21:09,240 --> 00:21:11,820
have a similar tool grip win and so one

588
00:21:11,820 --> 00:21:13,080
of the things I like to do is just say

589
00:21:13,080 --> 00:21:15,360
okay let's dump that source code because

590
00:21:15,360 --> 00:21:17,760
we already know that both the Inspire

591
00:21:17,760 --> 00:21:19,860
dot P can do that so we'll dump all the

592
00:21:19,860 --> 00:21:21,660
source code and then we'll just bring up

593
00:21:21,660 --> 00:21:23,760
the equivalent of rep on Windows and

594
00:21:23,760 --> 00:21:26,460
we'll just pop in path.conbind right

595
00:21:26,460 --> 00:21:27,539
we're going to look through the whole

596
00:21:27,539 --> 00:21:29,220
source code base here and see all right

597
00:21:29,220 --> 00:21:31,020
how many times does it use it uh is

598
00:21:31,020 --> 00:21:32,580
there a chance that it's doing similar

599
00:21:32,580 --> 00:21:34,559
things on other endpoints that we can

600
00:21:34,559 --> 00:21:37,140
also get to so this is kind of quick and

601
00:21:37,140 --> 00:21:39,120
dirty easy way of doing it not super

602
00:21:39,120 --> 00:21:40,320
efficient because we still have to go

603
00:21:40,320 --> 00:21:42,840
through 50 some odd you know examples of

604
00:21:42,840 --> 00:21:44,400
this

605
00:21:44,400 --> 00:21:45,900
but as you can see in the bottom here

606
00:21:45,900 --> 00:21:48,120
there's a lot of examples so there's

607
00:21:48,120 --> 00:21:49,320
there's a good chance that they're doing

608
00:21:49,320 --> 00:21:51,918
it more than once

609
00:21:52,679 --> 00:21:54,059
or

610
00:21:54,059 --> 00:21:57,000
say you want to get smart so nowadays

611
00:21:57,000 --> 00:21:58,559
you know there's other tools out there

612
00:21:58,559 --> 00:22:01,559
sim grip's a good example right Sim grab

613
00:22:01,559 --> 00:22:04,620
it's think of it as the same ideas grip

614
00:22:04,620 --> 00:22:06,559
but it starts adding a lot more kind of

615
00:22:06,559 --> 00:22:10,620
programmatic kind of analysis to the

616
00:22:10,620 --> 00:22:12,720
code that's in the background when

617
00:22:12,720 --> 00:22:14,940
you're gripping so say I want to you

618
00:22:14,940 --> 00:22:16,559
know look for this thing but only when

619
00:22:16,559 --> 00:22:18,539
this happens and it has this has to

620
00:22:18,539 --> 00:22:20,159
either be in a class or a function or

621
00:22:20,159 --> 00:22:21,900
asked to return this particular thing

622
00:22:21,900 --> 00:22:24,120
allows you to add a lot of logic to it

623
00:22:24,120 --> 00:22:25,679
to actually find more specific things

624
00:22:25,679 --> 00:22:27,900
and kind of parse out the stuff you

625
00:22:27,900 --> 00:22:30,260
don't care about

626
00:22:30,780 --> 00:22:34,200
so here's an example of you know if you

627
00:22:34,200 --> 00:22:36,600
were using a Sim rep rule uh to do what

628
00:22:36,600 --> 00:22:39,299
we want to do uh so this in this

629
00:22:39,299 --> 00:22:41,220
particular example I'm looking for path

630
00:22:41,220 --> 00:22:43,919
combined but the interesting thing is I

631
00:22:43,919 --> 00:22:46,380
want to make sure that the argument that

632
00:22:46,380 --> 00:22:49,740
it's taking comes in directly from the

633
00:22:49,740 --> 00:22:51,600
function so let's say okay we have our

634
00:22:51,600 --> 00:22:53,820
function has an argument and that gets

635
00:22:53,820 --> 00:22:55,500
passed straight in a path to mind so

636
00:22:55,500 --> 00:22:57,960
super simple like not a hard thing it

637
00:22:57,960 --> 00:23:00,840
should be able to find that right

638
00:23:00,840 --> 00:23:01,860
foreign

639
00:23:01,860 --> 00:23:05,340
ly for me this didn't work

640
00:23:05,340 --> 00:23:07,620
and so this took a little while figuring

641
00:23:07,620 --> 00:23:09,360
out okay why doesn't simgrap work this

642
00:23:09,360 --> 00:23:12,000
should be super basic okay it

643
00:23:12,000 --> 00:23:13,919
supports.net but I'm only getting two

644
00:23:13,919 --> 00:23:16,440
findings where grep is getting like 40.

645
00:23:16,440 --> 00:23:18,240
and I went manually checked and sure

646
00:23:18,240 --> 00:23:19,440
enough you should have found more things

647
00:23:19,440 --> 00:23:21,299
so why why is this not working for this

648
00:23:21,299 --> 00:23:22,740
particular example

649
00:23:22,740 --> 00:23:24,120
well

650
00:23:24,120 --> 00:23:26,580
for me I mean some regret's pretty new

651
00:23:26,580 --> 00:23:28,919
and so still has some limitations uh

652
00:23:28,919 --> 00:23:30,480
this is just more of a fun thing to

653
00:23:30,480 --> 00:23:33,000
throw in here uh if your your function

654
00:23:33,000 --> 00:23:34,200
happens to use these things called

655
00:23:34,200 --> 00:23:36,419
lambdas in.net which I also learned

656
00:23:36,419 --> 00:23:39,120
about for the first time uh it doesn't

657
00:23:39,120 --> 00:23:41,400
work in taint mode so if we were to go

658
00:23:41,400 --> 00:23:42,720
back and actually look at some of our

659
00:23:42,720 --> 00:23:43,919
code here

660
00:23:43,919 --> 00:23:47,360
we'll show you this one example

661
00:23:48,659 --> 00:23:50,100
right now yeah I know you all really

662
00:23:50,100 --> 00:23:51,780
care too much but right here it's on

663
00:23:51,780 --> 00:23:53,340
every one of their functions they have

664
00:23:53,340 --> 00:23:55,440
these weird lambdas which is basically

665
00:23:55,440 --> 00:23:57,360
for longing purposes but the gist of it

666
00:23:57,360 --> 00:23:58,860
is they have their function they call

667
00:23:58,860 --> 00:24:00,179
another function and then it has a

668
00:24:00,179 --> 00:24:01,740
callback that actually has a foldable

669
00:24:01,740 --> 00:24:03,539
code in it so unfortunately with Sim

670
00:24:03,539 --> 00:24:05,820
grip they are blind to everything that's

671
00:24:05,820 --> 00:24:07,380
happening inside this Lambda so

672
00:24:07,380 --> 00:24:08,700
unfortunately for us we couldn't use

673
00:24:08,700 --> 00:24:13,880
simgrad so back to the boring stuff

674
00:24:13,980 --> 00:24:16,860
all right so moving forward we have grep

675
00:24:16,860 --> 00:24:18,120
wind we have all these examples of

676
00:24:18,120 --> 00:24:19,740
things we want to look at let's start

677
00:24:19,740 --> 00:24:21,120
looking at some of the other things that

678
00:24:21,120 --> 00:24:22,799
they could be doing with path dot

679
00:24:22,799 --> 00:24:25,799
combined then we might care about

680
00:24:25,799 --> 00:24:27,780
um up until this point we have the one

681
00:24:27,780 --> 00:24:30,419
it's a file read is there anything else

682
00:24:30,419 --> 00:24:31,799
so we're looking at a different one here

683
00:24:31,799 --> 00:24:34,320
it's called Write preferences uh it

684
00:24:34,320 --> 00:24:36,120
takes our path to bind and instead of

685
00:24:36,120 --> 00:24:38,039
reading this one does it right

686
00:24:38,039 --> 00:24:39,659
so that seems important

687
00:24:39,659 --> 00:24:42,000
uh if I can control a path to wherever I

688
00:24:42,000 --> 00:24:43,380
want seems like I might be able to write

689
00:24:43,380 --> 00:24:45,539
file anywhere I want

690
00:24:45,539 --> 00:24:49,440
sounds like fun what can we do with that

691
00:24:49,440 --> 00:24:51,240
so we go through the same process we

692
00:24:51,240 --> 00:24:54,179
went to before uh we go Whistler we

693
00:24:54,179 --> 00:24:57,600
create a request uh we pick you know a

694
00:24:57,600 --> 00:24:59,880
nice fun place to write to we're just

695
00:24:59,880 --> 00:25:02,400
gonna go windows 10. uh we get a

696
00:25:02,400 --> 00:25:03,659
response it looks like it might have

697
00:25:03,659 --> 00:25:04,919
actually worked and if we go in there

698
00:25:04,919 --> 00:25:07,200
and look sure enough our files there

699
00:25:07,200 --> 00:25:10,320
along with the content and so arbitrary

700
00:25:10,320 --> 00:25:12,780
uh place to write arbitrary content

701
00:25:12,780 --> 00:25:17,539
right so this seems fun and very bad

702
00:25:18,539 --> 00:25:20,159
what else

703
00:25:20,159 --> 00:25:22,679
all right so here's another one uh very

704
00:25:22,679 --> 00:25:24,539
similar to the other one except instead

705
00:25:24,539 --> 00:25:26,580
uh when it takes our file path in it

706
00:25:26,580 --> 00:25:28,140
tries to read it as a connect smell

707
00:25:28,140 --> 00:25:31,980
document so not as useful similar uh but

708
00:25:31,980 --> 00:25:34,080
what can we do with something like this

709
00:25:34,080 --> 00:25:37,020
this is still bad

710
00:25:37,020 --> 00:25:39,980
so it turns out you can actually put in

711
00:25:39,980 --> 00:25:43,740
SMB pass here so even though it doesn't

712
00:25:43,740 --> 00:25:45,000
matter if you can actually read it

713
00:25:45,000 --> 00:25:46,440
doesn't matter if it's you know

714
00:25:46,440 --> 00:25:47,520
something useful that's going to come

715
00:25:47,520 --> 00:25:49,440
back to us we can actually point it

716
00:25:49,440 --> 00:25:51,779
wherever we want which

717
00:25:51,779 --> 00:25:53,640
you can actually point it like I said to

718
00:25:53,640 --> 00:25:55,679
uh an IP address that's anywhere else

719
00:25:55,679 --> 00:25:58,500
think of this kind of like a ssrf

720
00:25:58,500 --> 00:26:00,000
vulnerability so we're going to say hey

721
00:26:00,000 --> 00:26:01,440
I'm going to give you a place that's

722
00:26:01,440 --> 00:26:03,720
some other network and I'm going to say

723
00:26:03,720 --> 00:26:04,860
all right go out there and look for this

724
00:26:04,860 --> 00:26:07,440
file and it's going to go out and it's

725
00:26:07,440 --> 00:26:08,760
going to try and the interesting thing

726
00:26:08,760 --> 00:26:10,679
about it with SMB is it's also going to

727
00:26:10,679 --> 00:26:12,600
try to authenticate

728
00:26:12,600 --> 00:26:14,279
um which is fun because it's going to

729
00:26:14,279 --> 00:26:16,500
say hey since I'm authenticating I'm

730
00:26:16,500 --> 00:26:18,659
going to give you my ntlm hash and you

731
00:26:18,659 --> 00:26:22,159
can capture that so also back

732
00:26:25,380 --> 00:26:26,520
all right

733
00:26:26,520 --> 00:26:28,679
so we use a few different examples of

734
00:26:28,679 --> 00:26:31,140
the different types of bugs that we've

735
00:26:31,140 --> 00:26:33,059
all found just with this one path dot

736
00:26:33,059 --> 00:26:35,460
combined and we kind of alluded to some

737
00:26:35,460 --> 00:26:38,400
of the interesting things you can do so

738
00:26:38,400 --> 00:26:39,779
now it's like okay well let's take this

739
00:26:39,779 --> 00:26:41,880
a little further right you know our

740
00:26:41,880 --> 00:26:42,960
customer is going to want to see actual

741
00:26:42,960 --> 00:26:44,640
impact so we need to actually write up

742
00:26:44,640 --> 00:26:46,320
some exploits and say okay what's the

743
00:26:46,320 --> 00:26:48,360
cool things we can do with an arbitrary

744
00:26:48,360 --> 00:26:50,580
file read an arbitrary file right and

745
00:26:50,580 --> 00:26:53,418
this ssrf

746
00:26:56,700 --> 00:26:57,840
all right

747
00:26:57,840 --> 00:27:00,539
so since this is a website uh one of the

748
00:27:00,539 --> 00:27:01,799
things that we like to try to read

749
00:27:01,799 --> 00:27:04,559
that's interesting to us uh is you can

750
00:27:04,559 --> 00:27:06,480
actually get to the web config file for

751
00:27:06,480 --> 00:27:08,700
the particular web service

752
00:27:08,700 --> 00:27:10,620
so the reason this is interesting is

753
00:27:10,620 --> 00:27:12,600
because if you read that web to Big File

754
00:27:12,600 --> 00:27:14,580
a lot of times they use these decryption

755
00:27:14,580 --> 00:27:16,980
keys and these validation keys uh the

756
00:27:16,980 --> 00:27:18,299
interesting thing about a decryption key

757
00:27:18,299 --> 00:27:21,299
and a validation key is is uses these to

758
00:27:21,299 --> 00:27:24,960
do encryption for a lot of uh

759
00:27:24,960 --> 00:27:26,640
interesting variables that get passed

760
00:27:26,640 --> 00:27:29,039
back and forth uh with IAS one of the

761
00:27:29,039 --> 00:27:30,779
most interesting ones that we care about

762
00:27:30,779 --> 00:27:32,400
is if it uses things called view state

763
00:27:32,400 --> 00:27:34,860
so if the particular application uses

764
00:27:34,860 --> 00:27:37,740
the view state it encrypts it on the

765
00:27:37,740 --> 00:27:39,419
back end it's actually decrypting that

766
00:27:39,419 --> 00:27:42,299
using common serialization libraries

767
00:27:42,299 --> 00:27:44,159
that can then be manipulated to get code

768
00:27:44,159 --> 00:27:46,340
execution

769
00:27:46,340 --> 00:27:48,600
so basically if you get the decryption

770
00:27:48,600 --> 00:27:51,900
key the validation key very bad uh

771
00:27:51,900 --> 00:27:53,700
common tool here that's used for this

772
00:27:53,700 --> 00:27:56,880
type of thing is called yso serial.net

773
00:27:56,880 --> 00:27:58,980
um super simple you download it

774
00:27:58,980 --> 00:28:00,419
if you have all the right parameters

775
00:28:00,419 --> 00:28:02,159
here that we just pointed at so you've

776
00:28:02,159 --> 00:28:03,960
got our decryption Keys validation Keys

777
00:28:03,960 --> 00:28:06,600
uh you put in the you know the uh

778
00:28:06,600 --> 00:28:08,039
location of where this is going to

779
00:28:08,039 --> 00:28:10,740
happen uh the URL it'll generate a nice

780
00:28:10,740 --> 00:28:13,140
little payload for you and then all you

781
00:28:13,140 --> 00:28:16,200
have to do at this point is find a uh

782
00:28:16,200 --> 00:28:18,299
endpoint that takes view State you plug

783
00:28:18,299 --> 00:28:21,299
this in and uh pretty much whatever you

784
00:28:21,299 --> 00:28:23,640
have here under our Command it's going

785
00:28:23,640 --> 00:28:25,559
to run on the back end so you get code

786
00:28:25,559 --> 00:28:29,539
execution right away very bad

787
00:28:30,799 --> 00:28:33,059
so here's an example of what that would

788
00:28:33,059 --> 00:28:34,620
look like if you were looking in burp

789
00:28:34,620 --> 00:28:35,880
and you're actually looking at your

790
00:28:35,880 --> 00:28:37,799
request uh you would find your view

791
00:28:37,799 --> 00:28:39,360
State you just copy in that payload

792
00:28:39,360 --> 00:28:44,059
straight State there and fire it off

793
00:28:46,440 --> 00:28:48,659
all right so moving on to our arbitrary

794
00:28:48,659 --> 00:28:50,100
file right

795
00:28:50,100 --> 00:28:51,419
so probably one of the most common

796
00:28:51,419 --> 00:28:52,919
things that people do when they can

797
00:28:52,919 --> 00:28:55,500
write to a web you know application

798
00:28:55,500 --> 00:28:57,240
directory is they start putting up

799
00:28:57,240 --> 00:28:59,940
things like web shells so for those that

800
00:28:59,940 --> 00:29:02,279
aren't familiar a web shell is pretty

801
00:29:02,279 --> 00:29:04,559
much just a web page that has code in it

802
00:29:04,559 --> 00:29:06,720
that allows you to execute arbitrary

803
00:29:06,720 --> 00:29:08,400
code

804
00:29:08,400 --> 00:29:10,260
um so you would use some kind of

805
00:29:10,260 --> 00:29:12,360
vulnerability some kind of something to

806
00:29:12,360 --> 00:29:15,240
be able to upload that to the website

807
00:29:15,240 --> 00:29:16,679
um then at that point whenever you make

808
00:29:16,679 --> 00:29:19,559
additional requests to that particular

809
00:29:19,559 --> 00:29:21,779
website endpoint that you just uploaded

810
00:29:21,779 --> 00:29:23,640
now you can run whatever commands you

811
00:29:23,640 --> 00:29:25,760
want

812
00:29:28,260 --> 00:29:30,419
so if we take our file right

813
00:29:30,419 --> 00:29:32,340
vulnerability that we just talked about

814
00:29:32,340 --> 00:29:34,500
uh we can tell okay I want you to go to

815
00:29:34,500 --> 00:29:36,899
our W root I want you to put it in this

816
00:29:36,899 --> 00:29:39,539
aspx endpoint and then this particular

817
00:29:39,539 --> 00:29:41,580
one takes base64 which is even easier

818
00:29:41,580 --> 00:29:43,320
for us because that way we could send

819
00:29:43,320 --> 00:29:45,120
binary if we really wanted to it's going

820
00:29:45,120 --> 00:29:46,980
to make sure that's all sent nicely

821
00:29:46,980 --> 00:29:50,100
packaged up decoded and then decoded on

822
00:29:50,100 --> 00:29:50,880
the outside

823
00:29:50,880 --> 00:29:53,720
or decoded

824
00:29:55,260 --> 00:29:57,120
here we go so now if we were to navigate

825
00:29:57,120 --> 00:29:58,520
to our

826
00:29:58,520 --> 00:30:01,559
aa.aspx it has our nice little code over

827
00:30:01,559 --> 00:30:02,520
there that's going to take whatever

828
00:30:02,520 --> 00:30:04,740
command we put in and we're going to

829
00:30:04,740 --> 00:30:06,720
execute it

830
00:30:06,720 --> 00:30:08,760
and we'll see that this particular one's

831
00:30:08,760 --> 00:30:10,559
running as a service account that

832
00:30:10,559 --> 00:30:11,880
actually comes pre-packaged with this

833
00:30:11,880 --> 00:30:13,860
web service

834
00:30:13,860 --> 00:30:15,979
thank you

835
00:30:16,880 --> 00:30:19,200
all right moving on to the last thing

836
00:30:19,200 --> 00:30:21,840
here so let's say again that we didn't

837
00:30:21,840 --> 00:30:24,179
have the more extreme reads and writes

838
00:30:24,179 --> 00:30:25,740
all we have this ability to pass it a

839
00:30:25,740 --> 00:30:27,720
pass and it's going to go look for it

840
00:30:27,720 --> 00:30:29,940
um so we have our ssrf

841
00:30:29,940 --> 00:30:31,260
um

842
00:30:31,260 --> 00:30:33,059
the tool here that

843
00:30:33,059 --> 00:30:34,500
I didn't I don't think I explained it

844
00:30:34,500 --> 00:30:36,000
originally to catch these things full

845
00:30:36,000 --> 00:30:38,100
responder so let's say that you have

846
00:30:38,100 --> 00:30:39,419
responder it's listening out in the

847
00:30:39,419 --> 00:30:41,340
cloud it's going to catch that you know

848
00:30:41,340 --> 00:30:43,559
SMB connection that's coming in you see

849
00:30:43,559 --> 00:30:45,480
our hash here okay so now what would I

850
00:30:45,480 --> 00:30:48,720
do with that okay so that brings in

851
00:30:48,720 --> 00:30:50,880
hashtags so hashcat most people know is

852
00:30:50,880 --> 00:30:52,500
kind of the successor the John the

853
00:30:52,500 --> 00:30:55,080
Ripper whatnot does a lot of cracking of

854
00:30:55,080 --> 00:30:58,320
hashes uh using you know gpus rather

855
00:30:58,320 --> 00:31:00,360
than CPUs but I I assume it does both

856
00:31:00,360 --> 00:31:03,000
but just dividends we've taken our ntlm

857
00:31:03,000 --> 00:31:04,980
hash they have a nice little chart here

858
00:31:04,980 --> 00:31:06,779
that says okay

859
00:31:06,779 --> 00:31:09,480
here's the hash type you have you can

860
00:31:09,480 --> 00:31:11,279
have the particular ID you have so that

861
00:31:11,279 --> 00:31:12,600
you can actually put that into your

862
00:31:12,600 --> 00:31:15,179
command here to run you go download it

863
00:31:15,179 --> 00:31:17,520
you put your hash in a file you say okay

864
00:31:17,520 --> 00:31:20,760
it's this particular hashtag Kick It Off

865
00:31:20,760 --> 00:31:22,620
and hopefully you have you know a really

866
00:31:22,620 --> 00:31:25,740
big file of passwords or dictionary that

867
00:31:25,740 --> 00:31:26,940
you're going to run this again and hope

868
00:31:26,940 --> 00:31:28,620
that they did a really poor job with

869
00:31:28,620 --> 00:31:31,760
their password complexity

870
00:31:33,360 --> 00:31:36,059
yay so lucky for us

871
00:31:36,059 --> 00:31:38,820
I'm guessing so they just did a keyboard

872
00:31:38,820 --> 00:31:42,059
walk which we see a lot of these

873
00:31:42,059 --> 00:31:43,980
um so using hashcap we were able to

874
00:31:43,980 --> 00:31:45,899
actually get that password out and so

875
00:31:45,899 --> 00:31:47,580
okay well now we have a password what

876
00:31:47,580 --> 00:31:50,279
can we do with that not super easy right

877
00:31:50,279 --> 00:31:51,960
so this is a web service it's gonna have

878
00:31:51,960 --> 00:31:54,419
RDP open we already know the user that

879
00:31:54,419 --> 00:31:56,520
came in offer hash or off of our

880
00:31:56,520 --> 00:31:58,620
collection of the hash now have the

881
00:31:58,620 --> 00:32:02,959
password login also rce

882
00:32:05,580 --> 00:32:08,399
all right so that kind of wraps that the

883
00:32:08,399 --> 00:32:10,799
whole Discovery the process the

884
00:32:10,799 --> 00:32:13,020
exploitation now you're the point where

885
00:32:13,020 --> 00:32:15,600
okay I told someone about this I freaked

886
00:32:15,600 --> 00:32:18,360
out what do I do right they're like I

887
00:32:18,360 --> 00:32:20,039
don't know how to talk to this vendor

888
00:32:20,039 --> 00:32:21,899
about how to get these fixed like they

889
00:32:21,899 --> 00:32:23,399
just gave us the software they said it's

890
00:32:23,399 --> 00:32:26,460
great and wonderful what do we do we say

891
00:32:26,460 --> 00:32:28,440
okay well we've done this before we can

892
00:32:28,440 --> 00:32:30,000
reach out to them we can disclose this

893
00:32:30,000 --> 00:32:32,299
to them so

894
00:32:32,299 --> 00:32:34,380
a lot of times this doesn't work out

895
00:32:34,380 --> 00:32:36,059
that great but sometimes the better

896
00:32:36,059 --> 00:32:38,520
bigger companies that it does so what's

897
00:32:38,520 --> 00:32:40,020
that look like so if you're the

898
00:32:40,020 --> 00:32:41,279
researcher and you're trying to figure

899
00:32:41,279 --> 00:32:43,380
out the steps to take these are kind of

900
00:32:43,380 --> 00:32:46,260
our first things to look for right

901
00:32:46,260 --> 00:32:48,299
go see if that particular company has a

902
00:32:48,299 --> 00:32:50,700
disclosure program right so okay look

903
00:32:50,700 --> 00:32:53,700
around search about hopefully it's not

904
00:32:53,700 --> 00:32:54,960
that hard to find if they're actually

905
00:32:54,960 --> 00:32:56,580
doing things right it'll be super easy

906
00:32:56,580 --> 00:32:58,559
to fight right so you can say okay is

907
00:32:58,559 --> 00:33:00,240
there an disclosure program are the

908
00:33:00,240 --> 00:33:02,520
contacts available and then you just

909
00:33:02,520 --> 00:33:04,200
follow through the process super easy

910
00:33:04,200 --> 00:33:07,080
luckily in our case for this one that

911
00:33:07,080 --> 00:33:09,600
was the case can't find that look around

912
00:33:09,600 --> 00:33:11,460
try to find contacts for their security

913
00:33:11,460 --> 00:33:13,380
people right anything to do with

914
00:33:13,380 --> 00:33:16,620
security or technical people

915
00:33:16,620 --> 00:33:18,179
if you can't do that

916
00:33:18,179 --> 00:33:19,980
last thing we've done is go straight to

917
00:33:19,980 --> 00:33:21,960
the social media right it's like I've

918
00:33:21,960 --> 00:33:24,539
surprisingly get more replies from

919
00:33:24,539 --> 00:33:27,120
Twitter than I do anything else like you

920
00:33:27,120 --> 00:33:28,440
can blast your emails all day but

921
00:33:28,440 --> 00:33:31,519
they'll reply to their Twitter account

922
00:33:33,960 --> 00:33:35,519
all right so once you get a hold of them

923
00:33:35,519 --> 00:33:37,679
okay you start this process you say hey

924
00:33:37,679 --> 00:33:39,360
I've got these bugs I want to talk to

925
00:33:39,360 --> 00:33:40,380
you about them I want to figure out how

926
00:33:40,380 --> 00:33:42,299
to walk through this and actually get to

927
00:33:42,299 --> 00:33:43,980
fix for my customer

928
00:33:43,980 --> 00:33:46,440
what's you know this look like typically

929
00:33:46,440 --> 00:33:48,720
for us so usually we'll put together all

930
00:33:48,720 --> 00:33:50,760
the details we can as much as possible

931
00:33:50,760 --> 00:33:53,159
you know if you have the ability to show

932
00:33:53,159 --> 00:33:54,659
them code and actually point out exactly

933
00:33:54,659 --> 00:33:56,519
where the bug is do it it's going to

934
00:33:56,519 --> 00:33:57,840
make it a whole lot easier in the end

935
00:33:57,840 --> 00:33:59,820
sometimes they're going to want possible

936
00:33:59,820 --> 00:34:01,260
solutions

937
00:34:01,260 --> 00:34:02,760
they might not listen to you but that's

938
00:34:02,760 --> 00:34:05,340
fine you can give those if you want and

939
00:34:05,340 --> 00:34:06,659
then a lot of times we'll actually start

940
00:34:06,659 --> 00:34:09,000
putting in disclosure timelines so

941
00:34:09,000 --> 00:34:12,239
places like you know uh Google and

942
00:34:12,239 --> 00:34:14,159
others have kind of set a standard okay

943
00:34:14,159 --> 00:34:15,719
this 90 day disclosure we're going to

944
00:34:15,719 --> 00:34:17,219
try to fit you know that into your

945
00:34:17,219 --> 00:34:19,260
schedule so we usually kind of put that

946
00:34:19,260 --> 00:34:20,820
out there and say hey this is what we'd

947
00:34:20,820 --> 00:34:23,460
like to see because in the past we've

948
00:34:23,460 --> 00:34:25,260
had companies where you put it out there

949
00:34:25,260 --> 00:34:26,940
and they just say thanks and then you

950
00:34:26,940 --> 00:34:28,199
never hear from them again they never

951
00:34:28,199 --> 00:34:31,440
patch it and be in right so we can't

952
00:34:31,440 --> 00:34:33,060
have that because we're doing this for a

953
00:34:33,060 --> 00:34:34,260
customer and our customers want to get

954
00:34:34,260 --> 00:34:36,060
it fixed too

955
00:34:36,060 --> 00:34:38,219
um and then the last thing here

956
00:34:38,219 --> 00:34:40,139
um if the people don't actually have a

957
00:34:40,139 --> 00:34:41,760
program they don't have a disclosure

958
00:34:41,760 --> 00:34:43,080
process a lot of times they say okay

959
00:34:43,080 --> 00:34:44,520
yeah we'll fix these but how do we

960
00:34:44,520 --> 00:34:45,560
actually get these out to everybody

961
00:34:45,560 --> 00:34:48,359
these you know and so what we found is

962
00:34:48,359 --> 00:34:52,020
if there isn't if they aren't a cve you

963
00:34:52,020 --> 00:34:53,339
know uh

964
00:34:53,339 --> 00:34:55,260
registering Authority you can actually

965
00:34:55,260 --> 00:34:56,940
go to miter directly and say hey look

966
00:34:56,940 --> 00:34:59,400
all right we found these bugs uh these

967
00:34:59,400 --> 00:35:00,960
guys don't know how to do anything with

968
00:35:00,960 --> 00:35:03,300
it so can you give us some cbes and they

969
00:35:03,300 --> 00:35:04,859
will and then you basically just work

970
00:35:04,859 --> 00:35:06,480
the process when they're ready to

971
00:35:06,480 --> 00:35:07,980
disclose them you just tell them they

972
00:35:07,980 --> 00:35:09,660
put them on the internet and it's taken

973
00:35:09,660 --> 00:35:10,859
care of

974
00:35:10,859 --> 00:35:13,098
foreign

975
00:35:15,420 --> 00:35:16,920
bringing it back to this particular

976
00:35:16,920 --> 00:35:19,859
instance uh this was for Siemens uh

977
00:35:19,859 --> 00:35:21,300
luckily you know the whole process

978
00:35:21,300 --> 00:35:23,940
within was super great like they're very

979
00:35:23,940 --> 00:35:26,760
professional timely receptive uh went

980
00:35:26,760 --> 00:35:28,200
through the whole process with them they

981
00:35:28,200 --> 00:35:30,000
patched everything up uh they actually

982
00:35:30,000 --> 00:35:33,300
just put out a release last week or so

983
00:35:33,300 --> 00:35:35,160
they actually had a patch for these

984
00:35:35,160 --> 00:35:37,800
issued seven cves for it

985
00:35:37,800 --> 00:35:39,300
um so we were super happy to work with

986
00:35:39,300 --> 00:35:41,640
them uh looking forward to it again

987
00:35:41,640 --> 00:35:44,339
hopefully for us hopefully not for them

988
00:35:44,339 --> 00:35:47,099
um but yeah so that's kind of the end of

989
00:35:47,099 --> 00:35:49,619
the story and it was a a good one to end

990
00:35:49,619 --> 00:35:51,859
with

991
00:35:53,099 --> 00:35:55,980
all right so that kind of sums it up uh

992
00:35:55,980 --> 00:35:57,660
if y'all have any questions I'll field

993
00:35:57,660 --> 00:36:00,500
whatever you've got

