1
00:00:02,480 --> 00:00:04,720
hello and welcome to overlooked

2
00:00:04,720 --> 00:00:07,040
artifacts enhancing windows forensic

3
00:00:07,040 --> 00:00:09,519
analysis my name is fernando tomlinson

4
00:00:09,519 --> 00:00:11,599
and i'll be going through this topic

5
00:00:11,599 --> 00:00:13,920
today a little bit about myself i'm with

6
00:00:13,920 --> 00:00:15,759
the united states army i've been in the

7
00:00:15,759 --> 00:00:18,160
army for 20 years now where i'm a cyber

8
00:00:18,160 --> 00:00:20,160
security professional focused on

9
00:00:20,160 --> 00:00:22,320
defensive and offensive tactics and

10
00:00:22,320 --> 00:00:25,119
techniques i'm a adjunct cyber security

11
00:00:25,119 --> 00:00:27,760
professor where i teach cyber security

12
00:00:27,760 --> 00:00:30,320
related topics as well as programming

13
00:00:30,320 --> 00:00:31,840
topics as well

14
00:00:31,840 --> 00:00:34,559
i'm a developer of various blue and red

15
00:00:34,559 --> 00:00:37,120
team tools and where i can pry it out of

16
00:00:37,120 --> 00:00:39,200
the government's hand if you will i like

17
00:00:39,200 --> 00:00:41,840
to post those on my github so i can

18
00:00:41,840 --> 00:00:43,840
share them with the community there's a

19
00:00:43,840 --> 00:00:46,079
number of other educational cyber

20
00:00:46,079 --> 00:00:46,960
security

21
00:00:46,960 --> 00:00:49,120
related platforms that i'm the author of

22
00:00:49,120 --> 00:00:50,960
or co-author and i'll talk about those a

23
00:00:50,960 --> 00:00:52,960
little bit later near the end of our

24
00:00:52,960 --> 00:00:54,800
presentation but if you're looking to

25
00:00:54,800 --> 00:00:56,559
connect with me here's my presence on

26
00:00:56,559 --> 00:00:59,039
the internet if you will all right so

27
00:00:59,039 --> 00:01:01,120
enough about me let's get into really

28
00:01:01,120 --> 00:01:03,120
why you're here and this really sets the

29
00:01:03,120 --> 00:01:06,159
stage for that um that calling if you

30
00:01:06,159 --> 00:01:08,159
will okay so we're gonna go through a

31
00:01:08,159 --> 00:01:10,880
number of aspects really looking at an

32
00:01:10,880 --> 00:01:13,600
artifact that while it exists

33
00:01:13,600 --> 00:01:15,360
uh in my opinion it's certainly

34
00:01:15,360 --> 00:01:18,560
overlooked and not talked about enough

35
00:01:18,560 --> 00:01:20,960
okay so that brings us to this this

36
00:01:20,960 --> 00:01:22,720
picture of this dog and you may be

37
00:01:22,720 --> 00:01:25,360
asking okay what's this about right well

38
00:01:25,360 --> 00:01:28,320
it's really setting the stage for when

39
00:01:28,320 --> 00:01:31,439
someone or something is doing wrong and

40
00:01:31,439 --> 00:01:33,680
in this case we have a dog trying to

41
00:01:33,680 --> 00:01:35,600
take some cookies off the counter

42
00:01:35,600 --> 00:01:38,000
they're fresh out the oven and the aroma

43
00:01:38,000 --> 00:01:40,880
is uh you know it's such where the dog

44
00:01:40,880 --> 00:01:43,520
is willing to risk it all the dog at the

45
00:01:43,520 --> 00:01:46,560
core may realize and certainly i'll say

46
00:01:46,560 --> 00:01:49,280
does realize that he or she should not

47
00:01:49,280 --> 00:01:51,759
be grabbing those cookies right but

48
00:01:51,759 --> 00:01:54,320
instead they decide to do so anyway and

49
00:01:54,320 --> 00:01:56,880
this is largely because the dog may feel

50
00:01:56,880 --> 00:01:59,119
like he or she can get away with it we

51
00:01:59,119 --> 00:02:01,040
we can you know go deeper if we want to

52
00:02:01,040 --> 00:02:03,119
talk about the way a dog thinks and

53
00:02:03,119 --> 00:02:04,640
everything else but but work with me

54
00:02:04,640 --> 00:02:05,439
here

55
00:02:05,439 --> 00:02:08,000
now the same could be said for malicious

56
00:02:08,000 --> 00:02:10,479
actors these actors are consistently

57
00:02:10,479 --> 00:02:12,480
trying to gain access to a network on a

58
00:02:12,480 --> 00:02:14,879
daily basis every second of the day and

59
00:02:14,879 --> 00:02:16,640
when they gain said access they're

60
00:02:16,640 --> 00:02:19,040
looking to set a foothold for follow-on

61
00:02:19,040 --> 00:02:20,239
actions

62
00:02:20,239 --> 00:02:22,000
do they know what they're doing is wrong

63
00:02:22,000 --> 00:02:24,879
absolutely do they care absolutely not

64
00:02:24,879 --> 00:02:27,599
so they're looking at the prize as

65
00:02:27,599 --> 00:02:29,680
opposed to the

66
00:02:29,680 --> 00:02:30,640
uh

67
00:02:30,640 --> 00:02:31,680
uh

68
00:02:31,680 --> 00:02:33,920
what's gonna happen um should they get

69
00:02:33,920 --> 00:02:36,720
caught which brings us to the next part

70
00:02:36,720 --> 00:02:37,519
right

71
00:02:37,519 --> 00:02:40,480
inevitably when a malicious actor is

72
00:02:40,480 --> 00:02:43,040
doing anything on a system much like uri

73
00:02:43,040 --> 00:02:45,599
who has an innocent tone in working on a

74
00:02:45,599 --> 00:02:48,560
computer there's artifacts that are

75
00:02:48,560 --> 00:02:51,360
being left that are being developed on a

76
00:02:51,360 --> 00:02:53,680
machine and where a malicious cyber

77
00:02:53,680 --> 00:02:55,840
actor can see them

78
00:02:55,840 --> 00:02:58,800
they may seek to wipe or clean up those

79
00:02:58,800 --> 00:03:00,879
artifacts now in some cases they may not

80
00:03:00,879 --> 00:03:02,720
wipe or clean up those artifacts and you

81
00:03:02,720 --> 00:03:05,519
know for them it's like who cares but uh

82
00:03:05,519 --> 00:03:07,040
when they do

83
00:03:07,040 --> 00:03:09,360
it makes it a little bit difficult for

84
00:03:09,360 --> 00:03:11,760
us the defender to be able to illuminate

85
00:03:11,760 --> 00:03:14,879
and highlight such activity and then

86
00:03:14,879 --> 00:03:18,480
what steps that they actually take now

87
00:03:18,480 --> 00:03:20,800
i bring that point up as we talk about

88
00:03:20,800 --> 00:03:23,280
this picture because in my fictitious

89
00:03:23,280 --> 00:03:25,599
world the dog would have snatched the

90
00:03:25,599 --> 00:03:27,680
whole plate of cookies in the cookies

91
00:03:27,680 --> 00:03:29,360
and the plate would have smashed on the

92
00:03:29,360 --> 00:03:32,400
floor the dog would be trying to clean

93
00:03:32,400 --> 00:03:35,599
up right and inevitably no matter how

94
00:03:35,599 --> 00:03:37,680
well he or she thinks they did they're

95
00:03:37,680 --> 00:03:40,239
gonna leave you know crumbs uh on the

96
00:03:40,239 --> 00:03:42,319
floor there might be parts of the plate

97
00:03:42,319 --> 00:03:45,440
although broken up under the cupboard or

98
00:03:45,440 --> 00:03:47,440
when the plate splattered it went to a

99
00:03:47,440 --> 00:03:49,519
different part of the kitchen that one

100
00:03:49,519 --> 00:03:51,680
may not think to clean up

101
00:03:51,680 --> 00:03:55,120
around or you know with uh afterwards

102
00:03:55,120 --> 00:03:57,360
but nonetheless they have cleaned up and

103
00:03:57,360 --> 00:04:00,159
they feel pretty good about it or they

104
00:04:00,159 --> 00:04:02,879
feel whatever is left their uh their

105
00:04:02,879 --> 00:04:04,560
owner is not going to be able to see

106
00:04:04,560 --> 00:04:06,640
that brings us to again the malicious

107
00:04:06,640 --> 00:04:09,280
cyber actors right um no matter what

108
00:04:09,280 --> 00:04:11,439
they clean up there's always an artifact

109
00:04:11,439 --> 00:04:13,280
that we can find unless we just straight

110
00:04:13,280 --> 00:04:16,399
up destroy the machine the real thing is

111
00:04:16,399 --> 00:04:18,320
us as cyber security professionals we

112
00:04:18,320 --> 00:04:20,959
need to be illuminated or made known

113
00:04:20,959 --> 00:04:23,759
that an event or incident took place for

114
00:04:23,759 --> 00:04:26,000
us to then want to go deeper to do such

115
00:04:26,000 --> 00:04:28,240
analysis when and when we get to that

116
00:04:28,240 --> 00:04:29,919
point of analysis well what is it that

117
00:04:29,919 --> 00:04:31,360
we're talking about we're talking about

118
00:04:31,360 --> 00:04:33,919
actually doing forensics right and in

119
00:04:33,919 --> 00:04:36,320
this forensics when you look at a number

120
00:04:36,320 --> 00:04:39,280
of organizations or entities in this

121
00:04:39,280 --> 00:04:42,320
space they all define forensics

122
00:04:42,320 --> 00:04:44,479
differently when i look at words on a

123
00:04:44,479 --> 00:04:47,919
screen but largely when i look at the

124
00:04:47,919 --> 00:04:52,080
the the meaning or the output um of how

125
00:04:52,080 --> 00:04:54,080
they define forensics they're all saying

126
00:04:54,080 --> 00:04:56,240
the same right and when we think of

127
00:04:56,240 --> 00:04:58,400
forensics we're essentially thinking of

128
00:04:58,400 --> 00:05:00,960
how are we going to collect do analysis

129
00:05:00,960 --> 00:05:02,400
and present

130
00:05:02,400 --> 00:05:06,160
our findings in such a way that paints a

131
00:05:06,160 --> 00:05:09,280
story or a sequence of events and that

132
00:05:09,280 --> 00:05:12,720
brings us to well the forensics process

133
00:05:12,720 --> 00:05:14,800
and when we think about the forensics

134
00:05:14,800 --> 00:05:17,440
process well there's a number of them

135
00:05:17,440 --> 00:05:19,280
out there but i like to look to

136
00:05:19,280 --> 00:05:21,120
something objective in this case we'll

137
00:05:21,120 --> 00:05:22,800
use the national institute of standard

138
00:05:22,800 --> 00:05:24,479
technology nist

139
00:05:24,479 --> 00:05:26,880
namely 800-86

140
00:05:26,880 --> 00:05:29,840
and this breaks it down into four

141
00:05:29,840 --> 00:05:31,360
categories

142
00:05:31,360 --> 00:05:32,479
collection

143
00:05:32,479 --> 00:05:35,280
examination analysis and reporting well

144
00:05:35,280 --> 00:05:37,120
from the collection standpoint we're

145
00:05:37,120 --> 00:05:39,199
gonna look to identify any potential

146
00:05:39,199 --> 00:05:43,120
source of data and acquire data from

147
00:05:43,120 --> 00:05:46,000
these data sources this method was gonna

148
00:05:46,000 --> 00:05:47,680
is gonna be done in such a way that is

149
00:05:47,680 --> 00:05:49,840
forensically sound so if we're called

150
00:05:49,840 --> 00:05:52,479
upon to defend our analysis

151
00:05:52,479 --> 00:05:56,080
um then we can certainly ensure that

152
00:05:56,080 --> 00:05:58,400
there's no holes in what we did for

153
00:05:58,400 --> 00:06:01,600
somebody to uh to call us out on it that

154
00:06:01,600 --> 00:06:03,840
that brings us to the examination aspect

155
00:06:03,840 --> 00:06:06,000
well this is where we look to not only

156
00:06:06,000 --> 00:06:08,639
assess but also extract the relevant

157
00:06:08,639 --> 00:06:11,360
pieces of information from our collected

158
00:06:11,360 --> 00:06:15,520
data this data may involve by us or the

159
00:06:15,520 --> 00:06:18,160
data that we do analysis on may involve

160
00:06:18,160 --> 00:06:20,560
us trying to bypass mitigate operating

161
00:06:20,560 --> 00:06:22,880
system or application features that

162
00:06:22,880 --> 00:06:24,080
obscure

163
00:06:24,080 --> 00:06:26,400
data or code from us right we don't want

164
00:06:26,400 --> 00:06:29,039
that such things like data compression

165
00:06:29,039 --> 00:06:32,319
encryption or access control mechanisms

166
00:06:32,319 --> 00:06:34,960
from an analysis standpoint well this is

167
00:06:34,960 --> 00:06:37,039
where and and really at the point that

168
00:06:37,039 --> 00:06:39,039
we've already extracted that relevant

169
00:06:39,039 --> 00:06:41,520
data and this is where we are actually

170
00:06:41,520 --> 00:06:43,520
doing our true analysis go figure the

171
00:06:43,520 --> 00:06:45,680
analysis stage contains the analysis

172
00:06:45,680 --> 00:06:48,160
right and this is where we're studying

173
00:06:48,160 --> 00:06:50,240
we're analyzing the data to draw

174
00:06:50,240 --> 00:06:52,319
conclusions from it right and we want to

175
00:06:52,319 --> 00:06:53,520
make sure we're doing this in a

176
00:06:53,520 --> 00:06:56,319
methodical way so we reach an

177
00:06:56,319 --> 00:06:59,440
appropriate conclusion without skipping

178
00:06:59,440 --> 00:07:02,400
over information this analysis

179
00:07:02,400 --> 00:07:04,560
should help to identify the relevant

180
00:07:04,560 --> 00:07:07,599
aspects of what we're charged with doing

181
00:07:07,599 --> 00:07:09,599
and what we're charged with either

182
00:07:09,599 --> 00:07:12,000
answering right so our analysis should

183
00:07:12,000 --> 00:07:15,360
seek to answer specific uh questions

184
00:07:15,360 --> 00:07:18,160
often we'll be able to correlate data

185
00:07:18,160 --> 00:07:20,639
amongst multiple sources that we would

186
00:07:20,639 --> 00:07:22,800
have collected finally that brings us to

187
00:07:22,800 --> 00:07:24,800
the reporting aspect this is where we

188
00:07:24,800 --> 00:07:27,440
get to um not only report if you will

189
00:07:27,440 --> 00:07:29,840
but this is where we get to present our

190
00:07:29,840 --> 00:07:32,880
findings of our analysis we're going to

191
00:07:32,880 --> 00:07:35,280
present this in such a way where it's

192
00:07:35,280 --> 00:07:38,160
easily digestible for the techies but

193
00:07:38,160 --> 00:07:41,199
also speaks in terms that leadership can

194
00:07:41,199 --> 00:07:44,319
understand now with all that being said

195
00:07:44,319 --> 00:07:46,560
we're not going to focus on all of them

196
00:07:46,560 --> 00:07:48,319
for the purpose of this talk we're only

197
00:07:48,319 --> 00:07:51,039
going to focus on those three collection

198
00:07:51,039 --> 00:07:53,039
examination and analysis and the

199
00:07:53,039 --> 00:07:55,199
artifact that i'm speaking of is going

200
00:07:55,199 --> 00:07:56,560
to span

201
00:07:56,560 --> 00:07:59,440
all three so let's really paint the

202
00:07:59,440 --> 00:08:02,160
situation here right um we find

203
00:08:02,160 --> 00:08:04,639
ourselves in a suspected intrusion has

204
00:08:04,639 --> 00:08:07,039
occurred um the customer when we're

205
00:08:07,039 --> 00:08:09,680
called upon lacks the event firewall

206
00:08:09,680 --> 00:08:12,479
application logs heck any logs at large

207
00:08:12,479 --> 00:08:15,280
the ids isn't working and packet

208
00:08:15,280 --> 00:08:18,319
captures uh what's a packet capture now

209
00:08:18,319 --> 00:08:20,240
from that perspective what have the

210
00:08:20,240 --> 00:08:22,160
malicious actors done well they've not

211
00:08:22,160 --> 00:08:24,160
only removed their malware but they

212
00:08:24,160 --> 00:08:27,199
cleaned or wiped any tracks that they um

213
00:08:27,199 --> 00:08:28,960
are aware of

214
00:08:28,960 --> 00:08:31,199
that would be indicative of something or

215
00:08:31,199 --> 00:08:32,799
someone being there

216
00:08:32,799 --> 00:08:34,880
now where does that leave us well that

217
00:08:34,880 --> 00:08:36,799
leaves us with the only clues that we

218
00:08:36,799 --> 00:08:39,519
have or whatever is not um stomped on by

219
00:08:39,519 --> 00:08:41,200
the customer because as you know when

220
00:08:41,200 --> 00:08:43,039
things are deleted they're not actually

221
00:08:43,039 --> 00:08:45,120
deleted from disk uh right out the gate

222
00:08:45,120 --> 00:08:47,120
the pointer associated with where that

223
00:08:47,120 --> 00:08:49,680
data is at is on this is actually uh

224
00:08:49,680 --> 00:08:52,320
removed so as things are continuously

225
00:08:52,320 --> 00:08:54,959
being done on the disk uh that

226
00:08:54,959 --> 00:08:57,760
information could be um overwritten

227
00:08:57,760 --> 00:09:00,000
right so this is where time is of

228
00:09:00,000 --> 00:09:01,920
essence now

229
00:09:01,920 --> 00:09:05,279
we understand at that point we feel like

230
00:09:05,279 --> 00:09:07,680
okay well this is gonna be a long day

231
00:09:07,680 --> 00:09:11,120
week what have you and our mood well

232
00:09:11,120 --> 00:09:14,000
not so good okay but as true

233
00:09:14,000 --> 00:09:15,360
professionals cyber security

234
00:09:15,360 --> 00:09:17,920
professionals we are constantly thinking

235
00:09:17,920 --> 00:09:20,000
about how can we

236
00:09:20,000 --> 00:09:23,440
prove this prove or or do something

237
00:09:23,440 --> 00:09:26,080
outside the box and as we understand

238
00:09:26,080 --> 00:09:29,279
what our goal is we find other ways to

239
00:09:29,279 --> 00:09:31,920
achieve it and this brings us to the

240
00:09:31,920 --> 00:09:33,920
actual artifact itself that we're going

241
00:09:33,920 --> 00:09:35,760
to talk about this is the system

242
00:09:35,760 --> 00:09:38,160
resource utilization monitor

243
00:09:38,160 --> 00:09:40,640
and you may be asking well what's this

244
00:09:40,640 --> 00:09:43,040
this system resource utilization monitor

245
00:09:43,040 --> 00:09:46,320
that i'll refer to as a shrum from from

246
00:09:46,320 --> 00:09:49,360
this point forward well essentially it

247
00:09:49,360 --> 00:09:52,399
is uh an artifact first seen in windows

248
00:09:52,399 --> 00:09:55,440
eight yogis qatar actually is the one

249
00:09:55,440 --> 00:09:57,040
who um

250
00:09:57,040 --> 00:09:59,760
first found it brought it to light so we

251
00:09:59,760 --> 00:10:02,640
thank him for that his analysis his

252
00:10:02,640 --> 00:10:04,800
research has really set the stage for a

253
00:10:04,800 --> 00:10:08,160
lot of this uh the actual shrub

254
00:10:08,160 --> 00:10:10,480
survey or database rather is part of the

255
00:10:10,480 --> 00:10:13,279
diagnostic policy service so if we want

256
00:10:13,279 --> 00:10:15,120
to stop um

257
00:10:15,120 --> 00:10:18,240
writing to the database we can actually

258
00:10:18,240 --> 00:10:20,720
affect the service which then precludes

259
00:10:20,720 --> 00:10:23,279
the writing to actually take place

260
00:10:23,279 --> 00:10:26,000
now this whole thing collects statistics

261
00:10:26,000 --> 00:10:28,160
on network connections windows

262
00:10:28,160 --> 00:10:31,360
applications services and applications

263
00:10:31,360 --> 00:10:34,560
as a whole this is great because when we

264
00:10:34,560 --> 00:10:37,360
think about an actor being on a system

265
00:10:37,360 --> 00:10:40,000
we understand that on disk

266
00:10:40,000 --> 00:10:42,079
binaries are going to be executed

267
00:10:42,079 --> 00:10:44,480
processes are going to be created and

268
00:10:44,480 --> 00:10:46,880
terminated at some point we also

269
00:10:46,880 --> 00:10:48,399
recognize that

270
00:10:48,399 --> 00:10:51,200
an actor is generally or may not in some

271
00:10:51,200 --> 00:10:54,240
cases most cases be interactively on the

272
00:10:54,240 --> 00:10:56,160
system um so they're gonna have to

273
00:10:56,160 --> 00:10:59,120
traverse some form of network connection

274
00:10:59,120 --> 00:11:01,360
and this is where the strum database

275
00:11:01,360 --> 00:11:04,320
actually helps us as well now this whole

276
00:11:04,320 --> 00:11:05,760
thing is going to be stored in an

277
00:11:05,760 --> 00:11:09,200
extensible storage engine sitting in a

278
00:11:09,200 --> 00:11:12,160
system 32 and historically speaking we

279
00:11:12,160 --> 00:11:15,200
can go back roughly 30 to 60 days within

280
00:11:15,200 --> 00:11:17,519
this database there's a number of tables

281
00:11:17,519 --> 00:11:19,920
in the tables with how much data they

282
00:11:19,920 --> 00:11:23,839
contain uh certainly varies okay so on

283
00:11:23,839 --> 00:11:26,560
our system um we're gonna be in system

284
00:11:26,560 --> 00:11:29,760
root and we'll see within system 32 sru

285
00:11:29,760 --> 00:11:32,000
we'll see the shrew data or shrump

286
00:11:32,000 --> 00:11:35,440
database um listed as srudb.dat

287
00:11:35,440 --> 00:11:37,440
now looking at the screenshot we see a

288
00:11:37,440 --> 00:11:38,800
number of other

289
00:11:38,800 --> 00:11:40,560
items there as well those are

290
00:11:40,560 --> 00:11:43,440
transaction logs um that are associated

291
00:11:43,440 --> 00:11:45,680
with the database if we want to get a

292
00:11:45,680 --> 00:11:48,079
copy of it well on a live system we're

293
00:11:48,079 --> 00:11:50,320
not going to be able to because the

294
00:11:50,320 --> 00:11:53,200
system is or that database is actually

295
00:11:53,200 --> 00:11:55,360
locked by the operating system think of

296
00:11:55,360 --> 00:11:58,240
it kind of like registering hives

297
00:11:58,240 --> 00:12:01,839
right on disk they sit in system 32

298
00:12:01,839 --> 00:12:04,399
config however when that system boots

299
00:12:04,399 --> 00:12:06,560
those hives on this get loaded into

300
00:12:06,560 --> 00:12:11,560
memory same kind of principle here

301
00:12:12,000 --> 00:12:13,920
all right so when we're looking at it

302
00:12:13,920 --> 00:12:15,839
from a gui perspective well when we're

303
00:12:15,839 --> 00:12:18,160
in task manager and we go to the app

304
00:12:18,160 --> 00:12:19,519
history tab

305
00:12:19,519 --> 00:12:22,240
we're seeing information that is being

306
00:12:22,240 --> 00:12:24,959
fed from the strum database okay we're

307
00:12:24,959 --> 00:12:27,279
showing the statistics on applications

308
00:12:27,279 --> 00:12:29,360
this does it for apps and desktop

309
00:12:29,360 --> 00:12:31,920
applications but by default we only see

310
00:12:31,920 --> 00:12:34,079
the apps if we want to change that we'll

311
00:12:34,079 --> 00:12:36,079
be able to go option show history for

312
00:12:36,079 --> 00:12:38,720
all processes what can we do with this

313
00:12:38,720 --> 00:12:41,360
well we not only see the binary that's

314
00:12:41,360 --> 00:12:44,240
executing we see how much time it's had

315
00:12:44,240 --> 00:12:47,040
uh as far as processing time we see the

316
00:12:47,040 --> 00:12:48,079
network

317
00:12:48,079 --> 00:12:51,040
traffic associated with it as a whole um

318
00:12:51,040 --> 00:12:52,800
if we see

319
00:12:52,800 --> 00:12:56,000
uh where the binary is on disk not from

320
00:12:56,000 --> 00:12:58,399
this view however if we were to right

321
00:12:58,399 --> 00:13:00,880
click any of them and select properties

322
00:13:00,880 --> 00:13:03,680
we would be able to see that now in a

323
00:13:03,680 --> 00:13:06,639
case where you see uninstalled processes

324
00:13:06,639 --> 00:13:09,440
well that just insinuates that the

325
00:13:09,440 --> 00:13:12,240
process itself or excuse me the binary

326
00:13:12,240 --> 00:13:15,440
itself no longer exists in the place in

327
00:13:15,440 --> 00:13:19,680
which it executed or it may not exist on

328
00:13:19,680 --> 00:13:21,839
disk right so that's just what it tells

329
00:13:21,839 --> 00:13:22,560
us

330
00:13:22,560 --> 00:13:25,519
now moving from that perspective well we

331
00:13:25,519 --> 00:13:28,639
start to look at um how the data is

332
00:13:28,639 --> 00:13:31,440
collected and while there's dlls

333
00:13:31,440 --> 00:13:35,120
associated with the service the dlls

334
00:13:35,120 --> 00:13:37,040
when they catch and write this data

335
00:13:37,040 --> 00:13:38,959
they're gonna it's gonna be stored in

336
00:13:38,959 --> 00:13:41,040
the registry and it gets written to the

337
00:13:41,040 --> 00:13:44,720
actual database once every hour or on

338
00:13:44,720 --> 00:13:47,680
system shutdown once every hour or upon

339
00:13:47,680 --> 00:13:49,760
system shutdown now from that

340
00:13:49,760 --> 00:13:51,680
perspective where in the registry is

341
00:13:51,680 --> 00:13:53,279
going to be stored well we see that

342
00:13:53,279 --> 00:13:55,120
location there as well and we can

343
00:13:55,120 --> 00:13:56,720
navigate out there and see that

344
00:13:56,720 --> 00:13:59,279
information

345
00:13:59,600 --> 00:14:02,000
all right so this little chart helps to

346
00:14:02,000 --> 00:14:04,320
tie together a couple of things when we

347
00:14:04,320 --> 00:14:06,480
go look at that registry location that

348
00:14:06,480 --> 00:14:08,639
was on the previous slide we'll see the

349
00:14:08,639 --> 00:14:10,959
strum extension and under there we'll

350
00:14:10,959 --> 00:14:15,360
see keys these keys will be named um

351
00:14:15,360 --> 00:14:18,000
what we see there the app timeline

352
00:14:18,000 --> 00:14:20,959
provider uh windows network data usage

353
00:14:20,959 --> 00:14:23,279
all that good stuff and for each one

354
00:14:23,279 --> 00:14:26,320
we'll have a dll that is associated with

355
00:14:26,320 --> 00:14:30,399
it that is being loaded and doing the

356
00:14:30,399 --> 00:14:32,320
capturing for each one of those

357
00:14:32,320 --> 00:14:35,760
extensions when we look at the database

358
00:14:35,760 --> 00:14:38,240
the database doesn't have these

359
00:14:38,240 --> 00:14:40,399
extensions in a nomenclature that we

360
00:14:40,399 --> 00:14:43,760
understand instead it has the gui so i

361
00:14:43,760 --> 00:14:46,079
took the guide listed in the database

362
00:14:46,079 --> 00:14:47,680
and married it up with the extension

363
00:14:47,680 --> 00:14:49,839
listed in the registry and then the last

364
00:14:49,839 --> 00:14:51,199
column all the way to the right i tried

365
00:14:51,199 --> 00:14:54,880
to put a a nomenclature that was easily

366
00:14:54,880 --> 00:14:58,160
digestible readable under understood by

367
00:14:58,160 --> 00:15:00,240
most now you'll see some that are

368
00:15:00,240 --> 00:15:03,120
unknown and this is largely because i

369
00:15:03,120 --> 00:15:06,240
don't know and documentation about this

370
00:15:06,240 --> 00:15:08,720
database and how it really works is

371
00:15:08,720 --> 00:15:12,079
scarce so it's a continuous thing to

372
00:15:12,079 --> 00:15:15,839
understand and learn more about it

373
00:15:15,839 --> 00:15:17,279
the other big thing i want to highlight

374
00:15:17,279 --> 00:15:21,839
here is the last one the srudb id map

375
00:15:21,839 --> 00:15:22,720
table

376
00:15:22,720 --> 00:15:25,680
well there's certain data in these

377
00:15:25,680 --> 00:15:28,000
tables that are

378
00:15:28,000 --> 00:15:30,800
essentially blobs blobs of data not

379
00:15:30,800 --> 00:15:32,160
human readable

380
00:15:32,160 --> 00:15:34,880
and within the id map table you can

381
00:15:34,880 --> 00:15:36,959
think of it as a lookup table

382
00:15:36,959 --> 00:15:39,519
okay so the lookup table is going to

383
00:15:39,519 --> 00:15:43,040
have a subset of information that we'll

384
00:15:43,040 --> 00:15:46,079
then be able to make sense of and then

385
00:15:46,079 --> 00:15:49,120
translate it and replace the blob with

386
00:15:49,120 --> 00:15:51,199
that normal data we're going to have to

387
00:15:51,199 --> 00:15:53,120
do that ourself and i'll talk about a

388
00:15:53,120 --> 00:15:55,279
couple of ways that we can do that but

389
00:15:55,279 --> 00:15:57,519
for the purpose of this talk these are

390
00:15:57,519 --> 00:16:01,120
the five tables excuse me uh yeah tables

391
00:16:01,120 --> 00:16:03,680
that we're gonna focus on right four of

392
00:16:03,680 --> 00:16:05,680
them are focused on data that we can

393
00:16:05,680 --> 00:16:07,759
glean and then the fifth one is kind of

394
00:16:07,759 --> 00:16:10,000
that lookup table that we need to be

395
00:16:10,000 --> 00:16:11,839
able to make sense of some of that

396
00:16:11,839 --> 00:16:13,759
documentation or some of that data that

397
00:16:13,759 --> 00:16:16,000
we find in the database all right so

398
00:16:16,000 --> 00:16:18,720
that id map table again we're going to

399
00:16:18,720 --> 00:16:22,399
find a blob and that map table contains

400
00:16:22,399 --> 00:16:24,959
three columns so three properties an id

401
00:16:24,959 --> 00:16:28,240
type id index and id blob i'll focus on

402
00:16:28,240 --> 00:16:31,839
the id type if the type is going to be

403
00:16:31,839 --> 00:16:35,440
um one well that insinuates that the

404
00:16:35,440 --> 00:16:37,600
data that's in the blob

405
00:16:37,600 --> 00:16:38,639
column

406
00:16:38,639 --> 00:16:40,399
is an actual

407
00:16:40,399 --> 00:16:45,600
uh base64 encoded string so we can um uh

408
00:16:45,600 --> 00:16:47,920
make sense of it by decoding it right

409
00:16:47,920 --> 00:16:49,279
and that's going to be the same thing if

410
00:16:49,279 --> 00:16:54,160
it's 0 1 or 2. now if this value of 3

411
00:16:54,160 --> 00:16:57,279
for id type then the blob on that same

412
00:16:57,279 --> 00:17:00,160
row is going to be a sid and we'll be

413
00:17:00,160 --> 00:17:02,079
able to reverse that process to

414
00:17:02,079 --> 00:17:04,959
illuminate that set but this is where

415
00:17:04,959 --> 00:17:08,000
the id map table is hugely important or

416
00:17:08,000 --> 00:17:09,839
else we're just going to have data that

417
00:17:09,839 --> 00:17:12,799
we can't do anything with

418
00:17:12,799 --> 00:17:15,280
okay so to get after this developed a

419
00:17:15,280 --> 00:17:17,599
powershell script to to really make

420
00:17:17,599 --> 00:17:20,000
sense of this information for me so

421
00:17:20,000 --> 00:17:22,640
highlighted or circled in orange this is

422
00:17:22,640 --> 00:17:25,199
where i'm checking to see if the data

423
00:17:25,199 --> 00:17:27,760
equals three and if so i'm going to

424
00:17:27,760 --> 00:17:30,880
start my conversion process to bring it

425
00:17:30,880 --> 00:17:33,919
back to an actual sid all right and

426
00:17:33,919 --> 00:17:36,240
you'll see in red this is where i'm

427
00:17:36,240 --> 00:17:39,360
converting the blob where it was three

428
00:17:39,360 --> 00:17:42,880
from hex to bytes and then in green then

429
00:17:42,880 --> 00:17:45,039
i'm actually converting the bytes to the

430
00:17:45,039 --> 00:17:48,559
raw set now i i've said before that if

431
00:17:48,559 --> 00:17:51,520
it's 0 1 or 2 then it's going to be a

432
00:17:51,520 --> 00:17:55,039
base 64 encoded um string if you will

433
00:17:55,039 --> 00:17:57,200
and all we got to do is decode that so

434
00:17:57,200 --> 00:18:00,400
if it's not a 3 for id type well it's

435
00:18:00,400 --> 00:18:03,280
gonna be zero one or two and then in the

436
00:18:03,280 --> 00:18:05,600
blue this is where i'm just decoding

437
00:18:05,600 --> 00:18:07,360
that base64

438
00:18:07,360 --> 00:18:10,399
encoded shrink

439
00:18:10,720 --> 00:18:12,320
all right now

440
00:18:12,320 --> 00:18:14,799
looking at those four tables one of them

441
00:18:14,799 --> 00:18:17,679
is network connectivity this is where we

442
00:18:17,679 --> 00:18:20,400
we start to dive into what does that do

443
00:18:20,400 --> 00:18:21,520
for me

444
00:18:21,520 --> 00:18:23,360
well some of the available information

445
00:18:23,360 --> 00:18:25,760
in there is the application that was

446
00:18:25,760 --> 00:18:29,120
executed the user id network interface

447
00:18:29,120 --> 00:18:31,679
type wireless profile holy crap yeah if

448
00:18:31,679 --> 00:18:34,000
it was hooked up to wireless we can get

449
00:18:34,000 --> 00:18:36,720
the ssid and it will be in there as well

450
00:18:36,720 --> 00:18:40,000
now we'll have to use the software hide

451
00:18:40,000 --> 00:18:43,200
from the registry to be able to um

452
00:18:43,200 --> 00:18:45,200
translate that but yes we can get it we

453
00:18:45,200 --> 00:18:47,120
can get the connection time and the

454
00:18:47,120 --> 00:18:49,760
total connected time for that connection

455
00:18:49,760 --> 00:18:52,240
forensically speaking i now have the

456
00:18:52,240 --> 00:18:54,000
time frame associated with an

457
00:18:54,000 --> 00:18:55,520
application i won't be able to get the

458
00:18:55,520 --> 00:18:58,160
the true time but i have a time frame

459
00:18:58,160 --> 00:18:59,520
i'll be able to get the user who

460
00:18:59,520 --> 00:19:02,000
executed it a potential location of the

461
00:19:02,000 --> 00:19:04,080
device specifically if i know where

462
00:19:04,080 --> 00:19:06,880
specific ssids are right i'm in an

463
00:19:06,880 --> 00:19:09,120
organization and we for some reason have

464
00:19:09,120 --> 00:19:11,280
wireless in our organization and each

465
00:19:11,280 --> 00:19:14,400
floor has its own ssid or it says

466
00:19:14,400 --> 00:19:16,880
starbucks or something like that um off

467
00:19:16,880 --> 00:19:19,679
of you know a particular area all right

468
00:19:19,679 --> 00:19:21,600
that just kind of helps us or we might

469
00:19:21,600 --> 00:19:23,440
be able to look to something like wiggle

470
00:19:23,440 --> 00:19:25,679
to be able to help pinpoint that the

471
00:19:25,679 --> 00:19:27,679
connection duration was it short was it

472
00:19:27,679 --> 00:19:30,400
a short burst what was it and are these

473
00:19:30,400 --> 00:19:32,960
connections unusual or not is this

474
00:19:32,960 --> 00:19:35,360
indicative of something that uh other

475
00:19:35,360 --> 00:19:37,360
people in our organization uses or is

476
00:19:37,360 --> 00:19:39,280
this a one-off is this something

477
00:19:39,280 --> 00:19:42,160
indicative that this user that persona

478
00:19:42,160 --> 00:19:44,480
or this workstation uses or is that a

479
00:19:44,480 --> 00:19:47,280
one-off that brings us to network data

480
00:19:47,280 --> 00:19:49,919
usage from a gui perspective again in

481
00:19:49,919 --> 00:19:51,600
task manager we'd be able to look at

482
00:19:51,600 --> 00:19:53,919
this from performance the big difference

483
00:19:53,919 --> 00:19:56,160
here is this doesn't have connection

484
00:19:56,160 --> 00:19:58,880
start time or the total connect time but

485
00:19:58,880 --> 00:20:00,880
it starts to give us a lot of the same

486
00:20:00,880 --> 00:20:03,360
data from the previous one a big

487
00:20:03,360 --> 00:20:06,559
difference here is we get the bytes sent

488
00:20:06,559 --> 00:20:10,400
and the bytes received holy cow so

489
00:20:10,400 --> 00:20:13,240
i may have a process we'll call it

490
00:20:13,240 --> 00:20:16,159
nando.exe and i'm thinking that that is

491
00:20:16,159 --> 00:20:18,799
malware no longer exist on this and when

492
00:20:18,799 --> 00:20:20,799
i look at the byte set and bytes

493
00:20:20,799 --> 00:20:23,840
received i'm seeing a substantial amount

494
00:20:23,840 --> 00:20:26,400
of bytes being sent out that could be

495
00:20:26,400 --> 00:20:29,120
indicative or x fill right

496
00:20:29,120 --> 00:20:31,600
that's a game changer for us we get

497
00:20:31,600 --> 00:20:33,520
things like the timeline or the time

498
00:20:33,520 --> 00:20:35,440
frame the application executed just like

499
00:20:35,440 --> 00:20:37,600
the other one uh we get potential of

500
00:20:37,600 --> 00:20:39,360
indication of the x-fil like i just

501
00:20:39,360 --> 00:20:41,679
talked about that's a big game-changer

502
00:20:41,679 --> 00:20:44,480
we also get the location or being able

503
00:20:44,480 --> 00:20:47,520
to kind of figure out if it's unusual in

504
00:20:47,520 --> 00:20:48,400
perspective

505
00:20:48,400 --> 00:20:51,039
but looking at both of those

506
00:20:51,039 --> 00:20:53,120
this is data that's already being

507
00:20:53,120 --> 00:20:56,880
collected and it's on by default

508
00:20:56,880 --> 00:20:58,000
whoa

509
00:20:58,000 --> 00:20:59,440
all right so that brings us to

510
00:20:59,440 --> 00:21:02,480
application resource usage this starts

511
00:21:02,480 --> 00:21:05,360
to get to the application so we see

512
00:21:05,360 --> 00:21:07,520
application the user said

513
00:21:07,520 --> 00:21:09,200
how much it's in the foreground or

514
00:21:09,200 --> 00:21:11,919
background for cycle time network bytes

515
00:21:11,919 --> 00:21:15,200
read and write context switches that

516
00:21:15,200 --> 00:21:16,880
helps us with the time frame of the

517
00:21:16,880 --> 00:21:19,840
application the user that executed it

518
00:21:19,840 --> 00:21:21,600
right at least the sid and then we'll be

519
00:21:21,600 --> 00:21:23,760
able to take that and translate it uh we

520
00:21:23,760 --> 00:21:25,360
could do that in the registry if it's

521
00:21:25,360 --> 00:21:27,679
local or we could do that uh within ad

522
00:21:27,679 --> 00:21:30,000
if we need to go um within the domain

523
00:21:30,000 --> 00:21:32,000
and we start to highlight again

524
00:21:32,000 --> 00:21:34,880
potential x fill of data based upon um

525
00:21:34,880 --> 00:21:38,720
how much data is uh being uh written or

526
00:21:38,720 --> 00:21:40,240
being

527
00:21:40,240 --> 00:21:42,960
sent in and out now this also

528
00:21:42,960 --> 00:21:45,360
corresponds to task manager

529
00:21:45,360 --> 00:21:48,960
within app history as well

530
00:21:48,960 --> 00:21:50,880
and then lastly we have the application

531
00:21:50,880 --> 00:21:54,159
timeline this is going to focus on a lot

532
00:21:54,159 --> 00:21:56,240
of stuff that the previous one for

533
00:21:56,240 --> 00:21:59,760
application of resource usage focused on

534
00:21:59,760 --> 00:22:03,760
but we also get um duration in the span

535
00:22:03,760 --> 00:22:06,080
we also get the total bytes associated

536
00:22:06,080 --> 00:22:08,640
with the connection right um however

537
00:22:08,640 --> 00:22:11,120
it's not broken down by read and write

538
00:22:11,120 --> 00:22:12,640
like the other one

539
00:22:12,640 --> 00:22:14,960
this may be able to help us find things

540
00:22:14,960 --> 00:22:17,679
like i don't know crypto miners actually

541
00:22:17,679 --> 00:22:20,159
executing on our system and like the

542
00:22:20,159 --> 00:22:22,240
other one we'll find this in um

543
00:22:22,240 --> 00:22:24,159
application history right so we see a

544
00:22:24,159 --> 00:22:26,480
hodgepodge of that information

545
00:22:26,480 --> 00:22:28,480
shown there for us

546
00:22:28,480 --> 00:22:29,200
so

547
00:22:29,200 --> 00:22:32,559
now we start to see this well what are

548
00:22:32,559 --> 00:22:34,960
the tools that we can use to parse this

549
00:22:34,960 --> 00:22:36,159
data

550
00:22:36,159 --> 00:22:39,200
well you have an in-script parser that

551
00:22:39,200 --> 00:22:41,679
yogishi the person who did the initial

552
00:22:41,679 --> 00:22:44,240
research and found majority of this um

553
00:22:44,240 --> 00:22:46,559
created and he's got links out there

554
00:22:46,559 --> 00:22:48,320
however the links are dead and if you

555
00:22:48,320 --> 00:22:50,159
want to get that in square parser you

556
00:22:50,159 --> 00:22:53,360
need to go back to the way back machine

557
00:22:53,360 --> 00:22:55,120
and to be able to retrieve it if we're

558
00:22:55,120 --> 00:22:57,440
using an n-script parser you guessed it

559
00:22:57,440 --> 00:22:59,840
we need to be using in case this is

560
00:22:59,840 --> 00:23:03,120
going to work off an offline uh system

561
00:23:03,120 --> 00:23:05,840
offline analysis now we also have

562
00:23:05,840 --> 00:23:09,760
velociraptors esc parser this is a

563
00:23:09,760 --> 00:23:12,480
endpoint cyber security solution open

564
00:23:12,480 --> 00:23:15,039
source free in nature there's

565
00:23:15,039 --> 00:23:17,200
that's going to allow us to do online

566
00:23:17,200 --> 00:23:19,200
analysis of

567
00:23:19,200 --> 00:23:21,520
of this database now this is going to

568
00:23:21,520 --> 00:23:23,840
require that you're using the endpoint

569
00:23:23,840 --> 00:23:25,919
cyber security solution so if your

570
00:23:25,919 --> 00:23:28,240
organization is not using it well i

571
00:23:28,240 --> 00:23:30,240
wouldn't say go get this just for that

572
00:23:30,240 --> 00:23:32,320
but if you are using it it's your lucky

573
00:23:32,320 --> 00:23:33,120
day

574
00:23:33,120 --> 00:23:35,760
you also have shrum dump which requires

575
00:23:35,760 --> 00:23:38,960
an external binary it works off of live

576
00:23:38,960 --> 00:23:43,600
and offline um databases so that's good

577
00:23:43,600 --> 00:23:45,520
but if you're in an organization that

578
00:23:45,520 --> 00:23:46,720
you have to jump through all kinds of

579
00:23:46,720 --> 00:23:48,960
hoops to be able to use

580
00:23:48,960 --> 00:23:51,279
binaries that aren't approved order some

581
00:23:51,279 --> 00:23:53,520
type of accreditation process that may

582
00:23:53,520 --> 00:23:55,760
not work for your organization

583
00:23:55,760 --> 00:23:58,880
we also have shrum e command that's

584
00:23:58,880 --> 00:24:00,960
going to require an external binary as

585
00:24:00,960 --> 00:24:04,640
well and it works for offline analysis

586
00:24:04,640 --> 00:24:07,440
we have esc database viewer and that's

587
00:24:07,440 --> 00:24:09,120
going to be a portable executable

588
00:24:09,120 --> 00:24:12,159
requiring yet another external binary

589
00:24:12,159 --> 00:24:14,640
and it's going to be offline in nature

590
00:24:14,640 --> 00:24:17,039
now the five that i've talked about thus

591
00:24:17,039 --> 00:24:19,600
are they're great tools and they do

592
00:24:19,600 --> 00:24:22,320
exactly what's needed your environment

593
00:24:22,320 --> 00:24:25,120
would dictate which of the five if any

594
00:24:25,120 --> 00:24:27,520
you'll use which brings me to my last

595
00:24:27,520 --> 00:24:30,480
one invoke shrum dump now invoke shrum

596
00:24:30,480 --> 00:24:33,039
dump is something that i created and it

597
00:24:33,039 --> 00:24:36,159
works on pure powershell i say pure this

598
00:24:36,159 --> 00:24:38,080
one.net in the background but really

599
00:24:38,080 --> 00:24:39,760
what i'm trying to highlight is you

600
00:24:39,760 --> 00:24:42,320
don't need anything additional aside

601
00:24:42,320 --> 00:24:45,360
from a windows machine where shrum uh

602
00:24:45,360 --> 00:24:47,360
the trump database would actually be

603
00:24:47,360 --> 00:24:49,919
that's gonna be windows specific this

604
00:24:49,919 --> 00:24:52,400
allows us to dump the contents of this

605
00:24:52,400 --> 00:24:56,320
to excel sheets or workbooks so that way

606
00:24:56,320 --> 00:24:59,440
we can do our analysis from that we

607
00:24:59,440 --> 00:25:01,440
could do it off a live or an offline

608
00:25:01,440 --> 00:25:03,440
machine if we're doing it off a live

609
00:25:03,440 --> 00:25:05,440
machine we're going to need admin rights

610
00:25:05,440 --> 00:25:07,279
that's no different than the other tools

611
00:25:07,279 --> 00:25:09,360
that i talked about they also need admin

612
00:25:09,360 --> 00:25:11,200
rights if we're doing it off a live

613
00:25:11,200 --> 00:25:12,400
machine

614
00:25:12,400 --> 00:25:14,720
this is going to help us normalize and

615
00:25:14,720 --> 00:25:17,279
translate fields within the database

616
00:25:17,279 --> 00:25:20,159
with other tables specifically that id

617
00:25:20,159 --> 00:25:22,000
map table that i talked about where i

618
00:25:22,000 --> 00:25:24,400
can i certainly translate that

619
00:25:24,400 --> 00:25:26,320
and guess what if you feed it the

620
00:25:26,320 --> 00:25:28,720
software hive it will also pull up that

621
00:25:28,720 --> 00:25:32,000
ssid i mentioned and put that in your

622
00:25:32,000 --> 00:25:34,799
output making this a one-stop shop for

623
00:25:34,799 --> 00:25:37,200
you to be able to really do your

624
00:25:37,200 --> 00:25:40,200
analysis

625
00:25:44,159 --> 00:25:46,240
sorry gotta get ahead of myself here all

626
00:25:46,240 --> 00:25:49,600
right so with that that brings us to our

627
00:25:49,600 --> 00:25:53,279
data uh translation interpretation right

628
00:25:53,279 --> 00:25:56,480
these timestamps are gonna be in utc

629
00:25:56,480 --> 00:25:59,679
utc we're talking 64-bit file time only

630
00:25:59,679 --> 00:26:01,360
format and

631
00:26:01,360 --> 00:26:02,480
that's one of the things that we're

632
00:26:02,480 --> 00:26:05,360
going to have to translate so here's a

633
00:26:05,360 --> 00:26:07,360
couple of line of code where we can

634
00:26:07,360 --> 00:26:09,360
translate that using powershell and

635
00:26:09,360 --> 00:26:11,200
that's what's being done in our code

636
00:26:11,200 --> 00:26:14,240
there the network interfaces aspect well

637
00:26:14,240 --> 00:26:16,880
that's going to be in such a format that

638
00:26:16,880 --> 00:26:18,960
we'll need to translate as well there's

639
00:26:18,960 --> 00:26:21,360
some bit shifting some ending that we'll

640
00:26:21,360 --> 00:26:24,480
have to do to make that useful

641
00:26:24,480 --> 00:26:26,480
and then guess what the sids i talked

642
00:26:26,480 --> 00:26:29,360
about that i also have to translate that

643
00:26:29,360 --> 00:26:32,080
as well so those are the big things that

644
00:26:32,080 --> 00:26:34,480
have to be translated interpreted within

645
00:26:34,480 --> 00:26:37,279
the database for us to be able to make

646
00:26:37,279 --> 00:26:39,760
sense of it

647
00:26:39,760 --> 00:26:42,640
now if we want to copy the database well

648
00:26:42,640 --> 00:26:44,400
we have a couple of options if we're

649
00:26:44,400 --> 00:26:46,799
doing offline analysis we don't need any

650
00:26:46,799 --> 00:26:48,880
special tools we mount it using whatever

651
00:26:48,880 --> 00:26:50,480
our forensics

652
00:26:50,480 --> 00:26:53,520
tool set of choices that gives us access

653
00:26:53,520 --> 00:26:56,000
to that disk if we're talking about

654
00:26:56,000 --> 00:26:58,799
online and we want to copy it well we

655
00:26:58,799 --> 00:27:00,960
could use something like ftk imager we

656
00:27:00,960 --> 00:27:03,120
can do volume shadow copies to get it we

657
00:27:03,120 --> 00:27:04,559
can download

658
00:27:04,559 --> 00:27:06,559
hobo copy to our machine we can use

659
00:27:06,559 --> 00:27:08,880
robocopy or you could do the method that

660
00:27:08,880 --> 00:27:13,679
i did where i utilize uh powershell now

661
00:27:13,679 --> 00:27:16,400
when you're running invoke strongdump

662
00:27:16,400 --> 00:27:19,039
it's going to not only regardless if

663
00:27:19,039 --> 00:27:20,960
you're doing live or offline but for the

664
00:27:20,960 --> 00:27:23,440
purpose of this i'll say i did live it's

665
00:27:23,440 --> 00:27:27,440
going to copy uh that trump database and

666
00:27:27,440 --> 00:27:30,000
create a folder on the user's desktop

667
00:27:30,000 --> 00:27:33,360
called shrum and the date that's fully

668
00:27:33,360 --> 00:27:35,760
customizable you can create you can have

669
00:27:35,760 --> 00:27:37,600
it point to a different directory if you

670
00:27:37,600 --> 00:27:38,880
want to but if you don't feed it a

671
00:27:38,880 --> 00:27:40,960
directory by default that's where it

672
00:27:40,960 --> 00:27:43,200
goes and it copies it there and then as

673
00:27:43,200 --> 00:27:46,960
it parses the data in the database these

674
00:27:46,960 --> 00:27:49,919
excel documents are then stored in that

675
00:27:49,919 --> 00:27:53,440
same directory so as i go through this

676
00:27:53,440 --> 00:27:55,520
well what does that look like for us i

677
00:27:55,520 --> 00:27:57,919
have an example here where that data is

678
00:27:57,919 --> 00:28:00,559
parsed and i have a time frame

679
00:28:00,559 --> 00:28:02,399
associated with my analysis

680
00:28:02,399 --> 00:28:04,880
and specifically i'm looking for one

681
00:28:04,880 --> 00:28:08,159
september one september i see netcat

682
00:28:08,159 --> 00:28:10,880
being executed as we see um covered in

683
00:28:10,880 --> 00:28:13,039
red there and then the next column we

684
00:28:13,039 --> 00:28:15,200
see the sid okay

685
00:28:15,200 --> 00:28:18,000
again we don't have the actual user we

686
00:28:18,000 --> 00:28:19,840
can get that information but now we have

687
00:28:19,840 --> 00:28:22,799
the sid um that previously was a blob of

688
00:28:22,799 --> 00:28:24,720
data it's translated into something that

689
00:28:24,720 --> 00:28:27,200
we can uh read from a human perspective

690
00:28:27,200 --> 00:28:30,399
and we can um look within the registry

691
00:28:30,399 --> 00:28:34,399
or in ad to uh understand um what the

692
00:28:34,399 --> 00:28:37,200
what user that is we see a couple of

693
00:28:37,200 --> 00:28:39,279
other things such as the duration the

694
00:28:39,279 --> 00:28:42,000
span so that's great but

695
00:28:42,000 --> 00:28:44,399
right after that i start to see stuff

696
00:28:44,399 --> 00:28:49,120
like who am i task list command ipconfig

697
00:28:49,120 --> 00:28:52,799
net sh um arp reg now i'm not saying all

698
00:28:52,799 --> 00:28:55,440
these commands are malicious right they

699
00:28:55,440 --> 00:28:57,279
have a legitimate use they're part of

700
00:28:57,279 --> 00:29:00,399
the operating system but it almost seems

701
00:29:00,399 --> 00:29:03,200
like netcat happened um i want to see

702
00:29:03,200 --> 00:29:06,320
what type of how much data was uh

703
00:29:06,320 --> 00:29:07,840
was sent and received i'll get to that

704
00:29:07,840 --> 00:29:10,399
in a second and then we see a series of

705
00:29:10,399 --> 00:29:13,279
commands that could be indicative of an

706
00:29:13,279 --> 00:29:15,760
actual survey taking place on the

707
00:29:15,760 --> 00:29:16,720
machine

708
00:29:16,720 --> 00:29:19,039
okay that's interesting that brings us

709
00:29:19,039 --> 00:29:21,360
to actual network connectivity and when

710
00:29:21,360 --> 00:29:23,600
i look at network connectivity in this

711
00:29:23,600 --> 00:29:26,000
instance i was unable to get the actual

712
00:29:26,000 --> 00:29:28,240
application in the user sid but because

713
00:29:28,240 --> 00:29:31,120
i have the time frame associated with it

714
00:29:31,120 --> 00:29:33,200
well i can look in that perspective and

715
00:29:33,200 --> 00:29:36,559
i see that the machine was connected to

716
00:29:36,559 --> 00:29:39,600
a ssid called fbi surveillance now i

717
00:29:39,600 --> 00:29:40,960
think somebody's trolling me here but

718
00:29:40,960 --> 00:29:44,320
nonetheless i have the actual um ssid

719
00:29:44,320 --> 00:29:47,120
also in the next column after that i see

720
00:29:47,120 --> 00:29:49,039
the connected time how long it's been

721
00:29:49,039 --> 00:29:51,279
connected and i see

722
00:29:51,279 --> 00:29:54,080
the connected start time okay well

723
00:29:54,080 --> 00:29:56,080
that's super helpful because then i get

724
00:29:56,080 --> 00:29:57,679
to a point where i look at the actual

725
00:29:57,679 --> 00:30:01,520
network data and i see netcat actually

726
00:30:01,520 --> 00:30:05,279
was sending bytes over the wire

727
00:30:05,279 --> 00:30:07,679
i then see the sid associated with it

728
00:30:07,679 --> 00:30:09,760
again that time frame this is being

729
00:30:09,760 --> 00:30:11,919
written once an hour again

730
00:30:11,919 --> 00:30:14,320
i see that it was off of the fbi

731
00:30:14,320 --> 00:30:16,320
surveillance and although i've cut some

732
00:30:16,320 --> 00:30:19,520
of the the properties off the columns i

733
00:30:19,520 --> 00:30:22,399
at least captured the byte sent and the

734
00:30:22,399 --> 00:30:25,200
bytes received so uh not a whole lot

735
00:30:25,200 --> 00:30:27,360
sent um not necessarily a whole lot

736
00:30:27,360 --> 00:30:29,840
received but certainly it did

737
00:30:29,840 --> 00:30:32,080
communicate over the wire and i am

738
00:30:32,080 --> 00:30:34,720
concerned with that so now i've taken

739
00:30:34,720 --> 00:30:37,840
essentially data that didn't really

740
00:30:37,840 --> 00:30:39,919
prove anything to me i didn't even have

741
00:30:39,919 --> 00:30:42,720
a good a place to do analysis and i at

742
00:30:42,720 --> 00:30:44,480
least have this

743
00:30:44,480 --> 00:30:48,080
this is immutable at the moment so um an

744
00:30:48,080 --> 00:30:50,799
attacker step on this is not going to be

745
00:30:50,799 --> 00:30:52,000
so easy

746
00:30:52,000 --> 00:30:52,799
but

747
00:30:52,799 --> 00:30:55,039
given this and really what we can glean

748
00:30:55,039 --> 00:30:56,799
from it at large

749
00:30:56,799 --> 00:30:58,640
you may be thinking well this is the

750
00:30:58,640 --> 00:31:00,640
answer to all my problems and i'm here

751
00:31:00,640 --> 00:31:01,840
to tell you

752
00:31:01,840 --> 00:31:02,720
yes

753
00:31:02,720 --> 00:31:06,000
but no it's not right and i recall being

754
00:31:06,000 --> 00:31:08,480
um on a ransomware case where we caught

755
00:31:08,480 --> 00:31:11,120
it left of the boom if you will where

756
00:31:11,120 --> 00:31:14,159
the attacker gained access they

757
00:31:14,159 --> 00:31:15,840
moved laterally all over the network

758
00:31:15,840 --> 00:31:18,399
brute forcing their way around and they

759
00:31:18,399 --> 00:31:21,600
laid down so many or not so many a

760
00:31:21,600 --> 00:31:25,279
number of implants right and the av

761
00:31:25,279 --> 00:31:28,159
products that was in this network it was

762
00:31:28,159 --> 00:31:31,440
capturing when their implant was beaking

763
00:31:31,440 --> 00:31:33,519
out and bringing down a different stage

764
00:31:33,519 --> 00:31:35,760
and writing it to disk that av product

765
00:31:35,760 --> 00:31:39,519
was misconfigured so although it was

766
00:31:39,519 --> 00:31:42,159
captured and taken off of this we didn't

767
00:31:42,159 --> 00:31:44,480
have artifacts in the av product to see

768
00:31:44,480 --> 00:31:47,120
what it is and i didn't know that what

769
00:31:47,120 --> 00:31:49,279
was going on at the time however when i

770
00:31:49,279 --> 00:31:51,279
looked in the strong database i was able

771
00:31:51,279 --> 00:31:54,720
to see holy crap this guy downloaded a

772
00:31:54,720 --> 00:31:57,200
million of these things right and then

773
00:31:57,200 --> 00:31:59,279
we were able to then dig a little bit

774
00:31:59,279 --> 00:32:01,120
deeper to understand av product had

775
00:32:01,120 --> 00:32:03,840
actually done its job and it was poorly

776
00:32:03,840 --> 00:32:06,000
um configured so that way we couldn't

777
00:32:06,000 --> 00:32:08,960
actually see it however we seen

778
00:32:08,960 --> 00:32:10,960
everything that touched

779
00:32:10,960 --> 00:32:14,000
disk and this guy was just trying his

780
00:32:14,000 --> 00:32:16,720
poor heart out now i don't know we would

781
00:32:16,720 --> 00:32:19,679
have seen it elsewhere because of our

782
00:32:19,679 --> 00:32:22,559
position and when we had get called in

783
00:32:22,559 --> 00:32:24,960
to this incident

784
00:32:24,960 --> 00:32:27,200
all right so if

785
00:32:27,200 --> 00:32:30,000
you think this is the holy grail if you

786
00:32:30,000 --> 00:32:31,919
will and i'm telling you it's certainly

787
00:32:31,919 --> 00:32:34,559
nice but not everything well what's the

788
00:32:34,559 --> 00:32:36,080
bad part here's some limitations and

789
00:32:36,080 --> 00:32:38,720
concerns the database stores up to 30 to

790
00:32:38,720 --> 00:32:42,080
60 days this isn't gonna get you years

791
00:32:42,080 --> 00:32:44,159
back right if you think about something

792
00:32:44,159 --> 00:32:47,679
like solar winds well you know 30 to 60

793
00:32:47,679 --> 00:32:49,840
days didn't do you good right because

794
00:32:49,840 --> 00:32:53,600
we're talking um a large scale of months

795
00:32:53,600 --> 00:32:54,320
right

796
00:32:54,320 --> 00:32:56,000
the data is written to the database

797
00:32:56,000 --> 00:32:58,399
every 60 minutes or when the system is

798
00:32:58,399 --> 00:33:00,399
shut down so that's a limitation and

799
00:33:00,399 --> 00:33:03,840
documentation is certainly scarce right

800
00:33:03,840 --> 00:33:05,600
you have some research by a couple of

801
00:33:05,600 --> 00:33:07,200
individuals that are out there but

802
00:33:07,200 --> 00:33:09,440
largely you're not going to find a whole

803
00:33:09,440 --> 00:33:11,840
lot about it

804
00:33:11,840 --> 00:33:14,159
all right so if you're on the other side

805
00:33:14,159 --> 00:33:16,799
of the fence and you're like well hey

806
00:33:16,799 --> 00:33:19,679
how do i how do i circumvent this well i

807
00:33:19,679 --> 00:33:22,240
like to use the pyramid of pain from an

808
00:33:22,240 --> 00:33:24,399
opposite perspective and kind of point

809
00:33:24,399 --> 00:33:26,320
it like this well we've already said

810
00:33:26,320 --> 00:33:29,120
that there's a service associated with

811
00:33:29,120 --> 00:33:31,600
this so if we disable the service that's

812
00:33:31,600 --> 00:33:33,840
going to be certainly easy right off the

813
00:33:33,840 --> 00:33:35,360
gate for us to

814
00:33:35,360 --> 00:33:37,760
mitigate this and then going up the

815
00:33:37,760 --> 00:33:40,399
pyramid here we can delete the stage

816
00:33:40,399 --> 00:33:42,960
data in the registry now

817
00:33:42,960 --> 00:33:44,960
we might have an edr that's going to

818
00:33:44,960 --> 00:33:46,320
illuminate that

819
00:33:46,320 --> 00:33:47,760
and to be able to delete within the

820
00:33:47,760 --> 00:33:49,440
registry we need to have a certain level

821
00:33:49,440 --> 00:33:51,200
of right same thing about stopping that

822
00:33:51,200 --> 00:33:54,480
service so our access and really what we

823
00:33:54,480 --> 00:33:57,600
have available to us may vary and shape

824
00:33:57,600 --> 00:33:59,679
what we're going to be able to do

825
00:33:59,679 --> 00:34:02,000
we could terminate the threads

826
00:34:02,000 --> 00:34:04,640
associated with this service

827
00:34:04,640 --> 00:34:07,360
that's running in the context of of

828
00:34:07,360 --> 00:34:10,159
these of a process right that allows us

829
00:34:10,159 --> 00:34:13,520
to still have the process and everything

830
00:34:13,520 --> 00:34:15,839
running with the service but the actual

831
00:34:15,839 --> 00:34:18,320
threats or handles within it would be

832
00:34:18,320 --> 00:34:20,480
terminated and those were the ones that

833
00:34:20,480 --> 00:34:23,280
are really doing the work so now we

834
00:34:23,280 --> 00:34:26,639
start to invade any edr that may be

835
00:34:26,639 --> 00:34:29,119
running in this organization and then

836
00:34:29,119 --> 00:34:31,359
lastly if we're lucky enough and

837
00:34:31,359 --> 00:34:33,839
position ourselves in such a space we

838
00:34:33,839 --> 00:34:36,719
can operate solely in memory which kind

839
00:34:36,719 --> 00:34:40,239
of precludes this from being a thing at

840
00:34:40,239 --> 00:34:42,399
all

841
00:34:42,480 --> 00:34:44,480
all right so where does that leave me

842
00:34:44,480 --> 00:34:47,918
now that leads me to future work well

843
00:34:47,918 --> 00:34:49,359
what is it that i want to do i really

844
00:34:49,359 --> 00:34:51,199
want to get after parsing the rest of

845
00:34:51,199 --> 00:34:53,760
the tables and turning those unknowns to

846
00:34:53,760 --> 00:34:56,079
gnomes i want to add a sid look up

847
00:34:56,079 --> 00:34:57,920
capability in there so i'm not just

848
00:34:57,920 --> 00:34:59,839
providing you the sid instead i'm

849
00:34:59,839 --> 00:35:03,440
providing you the actual user as well

850
00:35:03,440 --> 00:35:06,320
and there's so many other tables and

851
00:35:06,320 --> 00:35:08,000
information that can be gleaned i want

852
00:35:08,000 --> 00:35:10,400
to be able to translate other aspects of

853
00:35:10,400 --> 00:35:14,079
the database to make this a

854
00:35:14,079 --> 00:35:16,880
a thing that you look to first as

855
00:35:16,880 --> 00:35:19,599
opposed to a thing that you think of

856
00:35:19,599 --> 00:35:22,560
when nothing else is available

857
00:35:22,560 --> 00:35:23,920
all right so

858
00:35:23,920 --> 00:35:25,440
that brings me kind of to the end

859
00:35:25,440 --> 00:35:28,000
however you may have noticed that i used

860
00:35:28,000 --> 00:35:30,400
some powershell magic to get after this

861
00:35:30,400 --> 00:35:32,640
and as you know powershell is built in

862
00:35:32,640 --> 00:35:34,800
to all windows machines and is now

863
00:35:34,800 --> 00:35:36,800
cross-platform and available on mac and

864
00:35:36,800 --> 00:35:38,480
linux so

865
00:35:38,480 --> 00:35:40,320
this is a good time for you to learn

866
00:35:40,320 --> 00:35:41,839
powershell because you were able to see

867
00:35:41,839 --> 00:35:43,920
kind of what i was able to do with it

868
00:35:43,920 --> 00:35:45,520
all right and a couple of ways that you

869
00:35:45,520 --> 00:35:47,520
can do that well you can look to a site

870
00:35:47,520 --> 00:35:49,119
that me and some friends put together

871
00:35:49,119 --> 00:35:51,119
called under the wire it was first

872
00:35:51,119 --> 00:35:54,079
developed in 2015 we have 75 interactive

873
00:35:54,079 --> 00:35:56,320
challenges they're linear in nature so

874
00:35:56,320 --> 00:35:58,560
you're going to do one after the other

875
00:35:58,560 --> 00:36:02,240
to date over 190 000 unique people have

876
00:36:02,240 --> 00:36:05,040
played under the wire from 78 countries

877
00:36:05,040 --> 00:36:08,560
it's this platform really focuses on the

878
00:36:08,560 --> 00:36:10,960
core aspects of learning the language

879
00:36:10,960 --> 00:36:12,400
and when you think you've honed your

880
00:36:12,400 --> 00:36:15,839
skills there well then i challenge you

881
00:36:15,839 --> 00:36:18,400
to do posh hunter pashtun or something i

882
00:36:18,400 --> 00:36:21,440
developed back in 2017 this contains 90

883
00:36:21,440 --> 00:36:24,400
challenges all interactive as well

884
00:36:24,400 --> 00:36:27,119
defense and offensive focus again blue

885
00:36:27,119 --> 00:36:28,800
and red team focus and they're

886
00:36:28,800 --> 00:36:31,280
non-linear so you can jump around i'm

887
00:36:31,280 --> 00:36:33,680
gonna give you a virtual machine and

888
00:36:33,680 --> 00:36:36,240
some tasks you'll complete those tasks

889
00:36:36,240 --> 00:36:38,480
you'll then submit those answers and

890
00:36:38,480 --> 00:36:41,680
you'll get points this gives you the

891
00:36:41,680 --> 00:36:43,440
perspective or really puts you in the

892
00:36:43,440 --> 00:36:46,160
perspective of somebody who's utilizing

893
00:36:46,160 --> 00:36:48,560
powershell offensively or somebody who's

894
00:36:48,560 --> 00:36:50,960
going to utilize powershell defensively

895
00:36:50,960 --> 00:36:53,359
at any rate you're going to walk away a

896
00:36:53,359 --> 00:36:56,320
better position individual

897
00:36:56,320 --> 00:36:58,320
with all that being said that brings me

898
00:36:58,320 --> 00:37:01,119
to the end now if you're interested in

899
00:37:01,119 --> 00:37:03,359
the copy of this presentation it'll be

900
00:37:03,359 --> 00:37:05,040
hanging out there on my website as you

901
00:37:05,040 --> 00:37:05,839
see

902
00:37:05,839 --> 00:37:07,920
before you if you want to get a hold of

903
00:37:07,920 --> 00:37:10,000
invoke trump dump well

904
00:37:10,000 --> 00:37:11,599
luckily the government didn't tie his

905
00:37:11,599 --> 00:37:13,839
hand on that so i have that out there on

906
00:37:13,839 --> 00:37:15,680
my github where you can go and download

907
00:37:15,680 --> 00:37:18,000
it and use it to your heart's content if

908
00:37:18,000 --> 00:37:20,079
you want to connect because maybe you

909
00:37:20,079 --> 00:37:22,240
and i speak the same language well let's

910
00:37:22,240 --> 00:37:24,400
do that let's do that on twitter and you

911
00:37:24,400 --> 00:37:26,160
see my handle there

912
00:37:26,160 --> 00:37:28,640
and with that i appreciate everything

913
00:37:28,640 --> 00:37:30,800
the b-side charlotte folks have done to

914
00:37:30,800 --> 00:37:33,040
put this on this year this isn't my

915
00:37:33,040 --> 00:37:35,359
first year certainly won't be my last

916
00:37:35,359 --> 00:37:37,200
this is such a great conference and i

917
00:37:37,200 --> 00:37:39,040
hope you're enjoying yourself

918
00:37:39,040 --> 00:37:42,279
thank you

