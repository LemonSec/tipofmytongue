1
00:00:02,320 --> 00:00:04,960
okay um hello everybody and welcome to

2
00:00:04,960 --> 00:00:06,960
beside childhood this is ali khabib and

3
00:00:06,960 --> 00:00:09,040
today we will be presenting breaking the

4
00:00:09,040 --> 00:00:11,200
joints with application level denial of

5
00:00:11,200 --> 00:00:13,679
service attacks so before we start let's

6
00:00:13,679 --> 00:00:16,400
uh look at some who am i i'm a computer

7
00:00:16,400 --> 00:00:17,840
science and engineering student at the

8
00:00:17,840 --> 00:00:19,840
german university in cairo i have been a

9
00:00:19,840 --> 00:00:21,520
bank hunter and a security researcher

10
00:00:21,520 --> 00:00:23,199
since 2014.

11
00:00:23,199 --> 00:00:24,800
my research interests mainly revolve

12
00:00:24,800 --> 00:00:27,039
around privacy web application security

13
00:00:27,039 --> 00:00:29,279
and network security

14
00:00:29,279 --> 00:00:31,359
i'm especially interested in business

15
00:00:31,359 --> 00:00:33,040
logic vulnerabilities and logic-based

16
00:00:33,040 --> 00:00:34,960
vulnerabilities in general

17
00:00:34,960 --> 00:00:37,520
um i have been speaker besides las vegas

18
00:00:37,520 --> 00:00:40,480
this year as well as i triple e lcm um

19
00:00:40,480 --> 00:00:42,160
you can find me on the social media at

20
00:00:42,160 --> 00:00:45,520
logicbreaker on twitter and kabil online

21
00:00:45,520 --> 00:00:48,160
so let's kick in with some motivation

22
00:00:48,160 --> 00:00:50,399
regarding our topic so our topic is

23
00:00:50,399 --> 00:00:52,320
breaking the giants with application

24
00:00:52,320 --> 00:00:54,320
level denial of service attack so let's

25
00:00:54,320 --> 00:00:56,960
break this cycle up into smaller pieces

26
00:00:56,960 --> 00:00:59,039
just to get a hold of it so the first

27
00:00:59,039 --> 00:01:00,800
thing is breaking the joints and by the

28
00:01:00,800 --> 00:01:02,879
giants here we refer to gigantic

29
00:01:02,879 --> 00:01:04,959
companies examples like facebook google

30
00:01:04,959 --> 00:01:06,080
snapchat

31
00:01:06,080 --> 00:01:09,280
and those um big companies

32
00:01:09,280 --> 00:01:11,600
with huge infrastructures and so on and

33
00:01:11,600 --> 00:01:13,360
let's then go to the second part which

34
00:01:13,360 --> 00:01:15,119
is application level reliable service

35
00:01:15,119 --> 00:01:16,320
attack so

36
00:01:16,320 --> 00:01:17,840
before we dive into the application

37
00:01:17,840 --> 00:01:19,600
level denial of service attack it's

38
00:01:19,600 --> 00:01:21,040
important to make sure that everybody

39
00:01:21,040 --> 00:01:23,360
here would understand what a ci atrial

40
00:01:23,360 --> 00:01:25,840
is so the cia triad is like the golden

41
00:01:25,840 --> 00:01:27,759
standard set by information security

42
00:01:27,759 --> 00:01:29,360
professionals

43
00:01:29,360 --> 00:01:31,759
they are like the goals that any system

44
00:01:31,759 --> 00:01:33,759
should aim to achieve

45
00:01:33,759 --> 00:01:36,000
just to be called secure

46
00:01:36,000 --> 00:01:37,680
and actually it consists of

47
00:01:37,680 --> 00:01:39,200
three main parts

48
00:01:39,200 --> 00:01:41,600
the first part which is the c in the cia

49
00:01:41,600 --> 00:01:43,600
which is confidentiality so what we mean

50
00:01:43,600 --> 00:01:45,600
by confidentiality confidentiality means

51
00:01:45,600 --> 00:01:47,119
that whichever information which is

52
00:01:47,119 --> 00:01:49,200
considered secret stays within the

53
00:01:49,200 --> 00:01:52,000
system it doesn't go to any um

54
00:01:52,000 --> 00:01:54,399
unintentional malicious uh or

55
00:01:54,399 --> 00:01:56,240
adversaries it doesn't go outside in

56
00:01:56,240 --> 00:01:57,360
general it doesn't have to be a

57
00:01:57,360 --> 00:01:59,759
malicious person um an information

58
00:01:59,759 --> 00:02:01,360
that's meant to stay within the system

59
00:02:01,360 --> 00:02:03,280
should stay within the to be called

60
00:02:03,280 --> 00:02:04,560
confidential otherwise the

61
00:02:04,560 --> 00:02:06,320
confidentiality of the data is not

62
00:02:06,320 --> 00:02:08,080
guaranteed

63
00:02:08,080 --> 00:02:09,758
the other part which is the eye in the

64
00:02:09,758 --> 00:02:12,160
cia refers to integrity and what we mean

65
00:02:12,160 --> 00:02:13,840
by integrity is that the data is

66
00:02:13,840 --> 00:02:16,480
unaltered and it's not changed or

67
00:02:16,480 --> 00:02:18,400
manipulated with so

68
00:02:18,400 --> 00:02:20,239
what's an example of that so for

69
00:02:20,239 --> 00:02:21,599
instance if you have an account like an

70
00:02:21,599 --> 00:02:22,959
account on facebook for instance imagine

71
00:02:22,959 --> 00:02:24,560
that you are logging in and you say that

72
00:02:24,560 --> 00:02:26,480
your name is changed for instance

73
00:02:26,480 --> 00:02:28,160
your data integrity have been affected

74
00:02:28,160 --> 00:02:29,440
somebody

75
00:02:29,440 --> 00:02:31,680
maliciously altered your data your data

76
00:02:31,680 --> 00:02:33,599
is not authentic it's not the data that

77
00:02:33,599 --> 00:02:36,080
you save that is meant to be in the

78
00:02:36,080 --> 00:02:38,879
service or the system

79
00:02:38,879 --> 00:02:40,160
so here we know that there is an

80
00:02:40,160 --> 00:02:41,519
integrity problem so we say that the

81
00:02:41,519 --> 00:02:44,080
data is integral if nobody altered this

82
00:02:44,080 --> 00:02:46,080
and it's cost hampered and finally we go

83
00:02:46,080 --> 00:02:47,920
to our target the target of denial of

84
00:02:47,920 --> 00:02:50,480
service attack which is availability or

85
00:02:50,480 --> 00:02:52,640
va in the spi atria so what do we mean

86
00:02:52,640 --> 00:02:54,640
by availability the service or the

87
00:02:54,640 --> 00:02:55,840
server

88
00:02:55,840 --> 00:02:57,360
or with the system

89
00:02:57,360 --> 00:03:00,239
um is set to be available it's able to

90
00:03:00,239 --> 00:03:02,800
serve its customers to service users

91
00:03:02,800 --> 00:03:04,800
users are able to utilize this system so

92
00:03:04,800 --> 00:03:06,400
imagine that you go to

93
00:03:06,400 --> 00:03:08,560
our site and then you are trying to log

94
00:03:08,560 --> 00:03:10,080
in and whenever you are trying to use

95
00:03:10,080 --> 00:03:11,920
the website is giving you an error or

96
00:03:11,920 --> 00:03:13,840
it's timing out it's not working the

97
00:03:13,840 --> 00:03:15,519
system is not available and maybe the

98
00:03:15,519 --> 00:03:17,280
system is under attack or it is in

99
00:03:17,280 --> 00:03:18,879
maintenance mode or something but it's

100
00:03:18,879 --> 00:03:20,239
not available and the system that's not

101
00:03:20,239 --> 00:03:21,920
available is actually system that's

102
00:03:21,920 --> 00:03:24,000
useful imagine that the website is not

103
00:03:24,000 --> 00:03:26,720
available for you so even if it is the

104
00:03:26,720 --> 00:03:29,120
most confidential and the best integral

105
00:03:29,120 --> 00:03:31,040
outside that ever existed

106
00:03:31,040 --> 00:03:34,400
if you can't use it it's more useful

107
00:03:34,400 --> 00:03:36,560
um so before we go into application

108
00:03:36,560 --> 00:03:38,560
level denial of service effects let's go

109
00:03:38,560 --> 00:03:40,799
into the more conventional way of design

110
00:03:40,799 --> 00:03:42,640
of service effects and talk more about

111
00:03:42,640 --> 00:03:44,159
developer service effects so design

112
00:03:44,159 --> 00:03:46,080
service effects refer to the attacks

113
00:03:46,080 --> 00:03:48,959
that aim to disrupt the availability of

114
00:03:48,959 --> 00:03:50,319
the system whenever we talk about the

115
00:03:50,319 --> 00:03:52,159
line of service attacks we talked about

116
00:03:52,159 --> 00:03:54,239
the attacks that make this intimate

117
00:03:54,239 --> 00:03:56,319
system unavailable maybe it makes

118
00:03:56,319 --> 00:03:58,480
it may aim to make the system completely

119
00:03:58,480 --> 00:04:01,040
unavailable or it may aim to make the

120
00:04:01,040 --> 00:04:04,959
system uh partially unavailable or

121
00:04:04,959 --> 00:04:07,360
make the customers incur huge penalties

122
00:04:07,360 --> 00:04:09,120
so imagine you are visiting your website

123
00:04:09,120 --> 00:04:10,319
and it takes like

124
00:04:10,319 --> 00:04:12,080
three to four minutes to load so you

125
00:04:12,080 --> 00:04:13,840
just close the website because it's not

126
00:04:13,840 --> 00:04:15,599
useful to you anymore it's not that

127
00:04:15,599 --> 00:04:17,358
responsive that you use

128
00:04:17,358 --> 00:04:19,600
um this website may be under the line of

129
00:04:19,600 --> 00:04:22,160
service attacks aiming to make the users

130
00:04:22,160 --> 00:04:24,639
or the benign and legit users not be

131
00:04:24,639 --> 00:04:26,720
able to use the

132
00:04:26,720 --> 00:04:29,040
system so how was this done in the past

133
00:04:29,040 --> 00:04:32,080
so in the past people used um

134
00:04:32,080 --> 00:04:33,600
brute force to do that they used what

135
00:04:33,600 --> 00:04:35,919
would we call a high volume denial of

136
00:04:35,919 --> 00:04:37,360
service effects high volume attacks

137
00:04:37,360 --> 00:04:39,520
mainly aimed to send a huge amount of

138
00:04:39,520 --> 00:04:41,680
requests to the target server or to the

139
00:04:41,680 --> 00:04:44,000
target system um so the server and

140
00:04:44,000 --> 00:04:45,600
system will be very busy handling those

141
00:04:45,600 --> 00:04:48,320
requests and it won't have enough time

142
00:04:48,320 --> 00:04:50,320
um to handle the design users requests

143
00:04:50,320 --> 00:04:52,560
so when the nine users request or by

144
00:04:52,560 --> 00:04:54,880
meaning here legit uh

145
00:04:54,880 --> 00:04:56,960
will not be able to be handled promptly

146
00:04:56,960 --> 00:04:57,919
so

147
00:04:57,919 --> 00:05:00,320
uh for instance if a server is made to

148
00:05:00,320 --> 00:05:02,639
handle like 100 requests we are sending

149
00:05:02,639 --> 00:05:04,720
like 1000 requests so now the server

150
00:05:04,720 --> 00:05:07,280
can't withstand this amount so some of

151
00:05:07,280 --> 00:05:09,360
the requests will timeout and the others

152
00:05:09,360 --> 00:05:11,680
will just incur huge delays making the

153
00:05:11,680 --> 00:05:15,199
system unavailable to the legislators

154
00:05:15,199 --> 00:05:17,680
um actually this was uh usually done

155
00:05:17,680 --> 00:05:19,360
using what we call the distributed

156
00:05:19,360 --> 00:05:21,199
denial of service attack so a malicious

157
00:05:21,199 --> 00:05:23,520
user or the malicious attacker will just

158
00:05:23,520 --> 00:05:26,080
um get control of a huge amount of

159
00:05:26,080 --> 00:05:27,759
computers either using malware or

160
00:05:27,759 --> 00:05:29,680
otherwise and use them to launch the

161
00:05:29,680 --> 00:05:31,600
attack it's not just a single computer

162
00:05:31,600 --> 00:05:34,000
it's more of a distributed network of

163
00:05:34,000 --> 00:05:35,919
computers or distributed network of

164
00:05:35,919 --> 00:05:37,600
devices

165
00:05:37,600 --> 00:05:40,560
and actually this still exists and it

166
00:05:40,560 --> 00:05:42,880
was proven to cost companies billions of

167
00:05:42,880 --> 00:05:44,720
dollars because one day

168
00:05:44,720 --> 00:05:48,360
um if foreign

169
00:05:49,600 --> 00:05:52,960
but this begin to change the question is

170
00:05:52,960 --> 00:05:54,720
why did they change

171
00:05:54,720 --> 00:05:56,400
wasn't it effective no it was effective

172
00:05:56,400 --> 00:05:57,919
but the idea is

173
00:05:57,919 --> 00:05:59,840
the rise of intrusion detection systems

174
00:05:59,840 --> 00:06:01,680
and solutions like cloud fair for

175
00:06:01,680 --> 00:06:04,160
instance um made denial of service

176
00:06:04,160 --> 00:06:06,800
attacks less harmful so

177
00:06:06,800 --> 00:06:08,080
you need to be

178
00:06:08,080 --> 00:06:09,919
extremely brutal when you conduct the

179
00:06:09,919 --> 00:06:12,560
nanoserious attack to a staggered system

180
00:06:12,560 --> 00:06:13,919
also

181
00:06:13,919 --> 00:06:16,160
attacking something like for instance as

182
00:06:16,160 --> 00:06:18,560
big as facebook you won't be able to

183
00:06:18,560 --> 00:06:20,400
send enough requests to get facebook

184
00:06:20,400 --> 00:06:22,479
servers down because at the end of the

185
00:06:22,479 --> 00:06:24,720
day you won't be having

186
00:06:24,720 --> 00:06:26,639
enough computational capacity to do so a

187
00:06:26,639 --> 00:06:29,039
huge amount of servers a huge

188
00:06:29,039 --> 00:06:30,960
elastic databases

189
00:06:30,960 --> 00:06:33,360
that will not easily get taken down so

190
00:06:33,360 --> 00:06:35,360
brute force is not useful in both

191
00:06:35,360 --> 00:06:37,039
situations and we are beginning to

192
00:06:37,039 --> 00:06:39,759
change to the modern uh application

193
00:06:39,759 --> 00:06:41,280
level attack that we will be tackling in

194
00:06:41,280 --> 00:06:42,400
a second

195
00:06:42,400 --> 00:06:44,560
um so before we move to the application

196
00:06:44,560 --> 00:06:46,720
level of text let's take two examples

197
00:06:46,720 --> 00:06:49,120
for the high volume uh conventional

198
00:06:49,120 --> 00:06:51,680
access so we have the send flood attack

199
00:06:51,680 --> 00:06:53,280
and the payment flow effect so the same

200
00:06:53,280 --> 00:06:54,720
cloud attack

201
00:06:54,720 --> 00:06:56,560
refers to a vulnerability that existed

202
00:06:56,560 --> 00:06:59,120
in the tcp protocol so whenever you are

203
00:06:59,120 --> 00:07:01,360
attempting to connect

204
00:07:01,360 --> 00:07:04,080
to a computer using the tcp protocol you

205
00:07:04,080 --> 00:07:06,720
send a send packet the server will reply

206
00:07:06,720 --> 00:07:08,800
with a send act packet and then the

207
00:07:08,800 --> 00:07:10,160
connection will be established once you

208
00:07:10,160 --> 00:07:12,880
reply with an acknowledgement

209
00:07:12,880 --> 00:07:15,440
so it's called a three-way handshake

210
00:07:15,440 --> 00:07:17,599
you send the thing you get a sync and

211
00:07:17,599 --> 00:07:19,759
then you send an app so if i'm an

212
00:07:19,759 --> 00:07:22,479
attacker what i will do i will just send

213
00:07:22,479 --> 00:07:24,639
things requests there are server reply

214
00:07:24,639 --> 00:07:26,960
with simac and will wait for

215
00:07:26,960 --> 00:07:28,319
acknowledgement packets but they will

216
00:07:28,319 --> 00:07:29,919
never get them because i will never send

217
00:07:29,919 --> 00:07:31,919
that management packet so what happen is

218
00:07:31,919 --> 00:07:34,000
the server has a connection capacity an

219
00:07:34,000 --> 00:07:35,759
amount of connection that the server can

220
00:07:35,759 --> 00:07:38,000
maintain or can withstand without

221
00:07:38,000 --> 00:07:39,759
actually going down

222
00:07:39,759 --> 00:07:41,680
what i'm doing is i'm consuming this

223
00:07:41,680 --> 00:07:44,400
capacity i'm sending send requests the

224
00:07:44,400 --> 00:07:46,400
server open the connection and he's

225
00:07:46,400 --> 00:07:48,560
waiting uh for me after sending a sale

226
00:07:48,560 --> 00:07:50,479
actually just send him an act but i'm

227
00:07:50,479 --> 00:07:53,440
never doing that so i'm ultimately using

228
00:07:53,440 --> 00:07:55,120
the connection capacity of the server

229
00:07:55,120 --> 00:07:56,960
and this will not allow the nine users

230
00:07:56,960 --> 00:08:01,039
to connect if i ultimately manage to

231
00:08:01,039 --> 00:08:02,960
just fill all the connection capacity on

232
00:08:02,960 --> 00:08:05,280
the server the other thing is the ping

233
00:08:05,280 --> 00:08:07,039
slot attack and the claim cloud attack

234
00:08:07,039 --> 00:08:09,120
is

235
00:08:09,199 --> 00:08:12,319
an icmp protocol attack simply whenever

236
00:08:12,319 --> 00:08:14,080
you send the thing attack

237
00:08:14,080 --> 00:08:14,960
the

238
00:08:14,960 --> 00:08:17,120
server receives this so this actually

239
00:08:17,120 --> 00:08:18,720
consume the incoming bandwidth from the

240
00:08:18,720 --> 00:08:20,560
server because i'm sending a request the

241
00:08:20,560 --> 00:08:23,360
incoming that which is being consumed

242
00:08:23,360 --> 00:08:26,000
but there is something that's even worse

243
00:08:26,000 --> 00:08:28,960
um you send the paying packet and then

244
00:08:28,960 --> 00:08:30,479
the server will have to reply with what

245
00:08:30,479 --> 00:08:32,880
we call an echo paying packet so you are

246
00:08:32,880 --> 00:08:34,479
not only continuing the incoming

247
00:08:34,479 --> 00:08:36,000
bandwidth but also the outgoing

248
00:08:36,000 --> 00:08:37,760
bandwidth because the server will have

249
00:08:37,760 --> 00:08:39,839
to be busy serving

250
00:08:39,839 --> 00:08:42,159
your echo paying packets so you are

251
00:08:42,159 --> 00:08:43,599
consuming both the incoming of the

252
00:08:43,599 --> 00:08:45,920
outgoing this will ultimately

253
00:08:45,920 --> 00:08:47,760
cause a system to not be

254
00:08:47,760 --> 00:08:50,320
having enough time or resources to serve

255
00:08:50,320 --> 00:08:52,640
benign users and will

256
00:08:52,640 --> 00:08:54,000
make the system unavailable to them

257
00:08:54,000 --> 00:08:56,720
causing the line of service

258
00:08:56,720 --> 00:08:59,440
um so let's go into our topic

259
00:08:59,440 --> 00:09:00,720
application level denial of service

260
00:09:00,720 --> 00:09:02,959
attacks and that starts by health theory

261
00:09:02,959 --> 00:09:05,600
from our friends at west and port sweger

262
00:09:05,600 --> 00:09:07,360
so what application level do not observe

263
00:09:07,360 --> 00:09:09,040
that has so what we have been covering

264
00:09:09,040 --> 00:09:11,120
so far is related to the network layer

265
00:09:11,120 --> 00:09:12,959
usually we are targeting the network

266
00:09:12,959 --> 00:09:15,839
part of the application either using uh

267
00:09:15,839 --> 00:09:17,519
something like a thin attack or a bank

268
00:09:17,519 --> 00:09:19,519
slot or otherwise but we are targeting

269
00:09:19,519 --> 00:09:21,519
the network layer the application level

270
00:09:21,519 --> 00:09:24,000
level united services that refer to a

271
00:09:24,000 --> 00:09:25,839
class of vulnerability that exists in

272
00:09:25,839 --> 00:09:27,440
the application the attacker are

273
00:09:27,440 --> 00:09:28,800
targeting vulnerabilities in the

274
00:09:28,800 --> 00:09:32,000
application layer of um

275
00:09:32,000 --> 00:09:34,560
the service it is the application itself

276
00:09:34,560 --> 00:09:36,720
so whenever the attacker found a

277
00:09:36,720 --> 00:09:38,080
vulnerability in the application that

278
00:09:38,080 --> 00:09:40,080
may cause the server to go unavailable

279
00:09:40,080 --> 00:09:41,519
to user this is an application level

280
00:09:41,519 --> 00:09:43,519
behind certain attacks it is something

281
00:09:43,519 --> 00:09:45,360
related to the application itself and

282
00:09:45,360 --> 00:09:46,800
it's very unique that it can be served

283
00:09:46,800 --> 00:09:48,399
from application to an application it is

284
00:09:48,399 --> 00:09:51,120
not just like a semi-flood attack which

285
00:09:51,120 --> 00:09:53,120
can happen anywhere using tcp

286
00:09:53,120 --> 00:09:55,760
application level require users uh or

287
00:09:55,760 --> 00:09:58,160
require uh security researchers to dig

288
00:09:58,160 --> 00:10:00,399
very deep to find those vulnerabilities

289
00:10:00,399 --> 00:10:02,399
to exploit them or even to patch them so

290
00:10:02,399 --> 00:10:04,720
they are not easy to find and not easy

291
00:10:04,720 --> 00:10:06,079
to patch

292
00:10:06,079 --> 00:10:07,519
because they vary from one place to

293
00:10:07,519 --> 00:10:09,680
another and a very famous example is

294
00:10:09,680 --> 00:10:11,600
what they call the resource blocking

295
00:10:11,600 --> 00:10:12,959
non-failure so what is the resource

296
00:10:12,959 --> 00:10:14,480
talking on failure so the resource

297
00:10:14,480 --> 00:10:15,920
stopping on failure is a vulnerability

298
00:10:15,920 --> 00:10:18,160
that may occur because whenever a server

299
00:10:18,160 --> 00:10:20,079
hit an error instead of just releasing

300
00:10:20,079 --> 00:10:22,640
the resources that were used

301
00:10:22,640 --> 00:10:24,800
by the user to cause the failure the

302
00:10:24,800 --> 00:10:27,120
server will lock those resources so

303
00:10:27,120 --> 00:10:29,279
let's clarify this point imagine that

304
00:10:29,279 --> 00:10:30,880
you are doing some calculations on any

305
00:10:30,880 --> 00:10:32,399
server and then

306
00:10:32,399 --> 00:10:34,720
for instance you cause some failure by

307
00:10:34,720 --> 00:10:37,200
dividing by zero for instance

308
00:10:37,200 --> 00:10:39,279
so the silver has a failure but you were

309
00:10:39,279 --> 00:10:42,240
using some parts of the server uh

310
00:10:42,240 --> 00:10:44,720
to do some calculations so the logical

311
00:10:44,720 --> 00:10:46,640
thing that can happen is that okay we

312
00:10:46,640 --> 00:10:48,000
will just

313
00:10:48,000 --> 00:10:50,000
go on and release those resources so

314
00:10:50,000 --> 00:10:51,839
that they can be used by other people

315
00:10:51,839 --> 00:10:53,760
and so on but this doesn't happen the

316
00:10:53,760 --> 00:10:55,600
service will say okay failure happen so

317
00:10:55,600 --> 00:10:57,279
this part of the server will not be

318
00:10:57,279 --> 00:11:00,480
utilized and people cannot use it so

319
00:11:00,480 --> 00:11:02,320
what happened here is an application

320
00:11:02,320 --> 00:11:03,920
vulnerability which is something like

321
00:11:03,920 --> 00:11:04,959
dividing by zero it's not a

322
00:11:04,959 --> 00:11:06,640
vulnerability it's just a failure

323
00:11:06,640 --> 00:11:09,200
dividing by zero caused the server to

324
00:11:09,200 --> 00:11:11,519
make some part of it unavailable it's

325
00:11:11,519 --> 00:11:13,279
locked in the failure nothing can happen

326
00:11:13,279 --> 00:11:15,920
nobody can use this so if i'm malicious

327
00:11:15,920 --> 00:11:19,200
i may induce the failure that will cause

328
00:11:19,200 --> 00:11:21,360
the system to ultimately lock all of its

329
00:11:21,360 --> 00:11:23,200
resources into failures so the system

330
00:11:23,200 --> 00:11:24,720
resources will be logged into failures

331
00:11:24,720 --> 00:11:26,320
nobody can use them the service is

332
00:11:26,320 --> 00:11:29,040
ultimately unavailable for anybody

333
00:11:29,040 --> 00:11:31,120
um a nice class of

334
00:11:31,120 --> 00:11:32,720
application level united service attacks

335
00:11:32,720 --> 00:11:35,040
and one of the known ones is called the

336
00:11:35,040 --> 00:11:37,519
second order service attack so what is

337
00:11:37,519 --> 00:11:39,519
the second order of service attack

338
00:11:39,519 --> 00:11:41,040
before we answer this question let's

339
00:11:41,040 --> 00:11:42,959
take a step back and look at something

340
00:11:42,959 --> 00:11:45,680
like a second order crosstalk scripting

341
00:11:45,680 --> 00:11:49,040
attack or second order exercise

342
00:11:49,040 --> 00:11:51,120
second order here refers to the fact

343
00:11:51,120 --> 00:11:53,440
that it is stored second order crosstalk

344
00:11:53,440 --> 00:11:55,680
scripting payloads are usually stored in

345
00:11:55,680 --> 00:11:57,200
databases or something and whenever a

346
00:11:57,200 --> 00:11:59,760
user visits a certain page in which the

347
00:11:59,760 --> 00:12:01,519
information is rendered

348
00:12:01,519 --> 00:12:03,360
uh this information gets ran uh

349
00:12:03,360 --> 00:12:05,040
retrieved from the database and the

350
00:12:05,040 --> 00:12:07,200
payloads fire so the idea here is that

351
00:12:07,200 --> 00:12:09,600
the data using the attack is stored

352
00:12:09,600 --> 00:12:10,959
inside a database or inside the

353
00:12:10,959 --> 00:12:13,200
application itself and denial of service

354
00:12:13,200 --> 00:12:14,800
attacks or second order director's

355
00:12:14,800 --> 00:12:16,399
effects are no different

356
00:12:16,399 --> 00:12:18,240
we appear here through the fact that the

357
00:12:18,240 --> 00:12:20,160
data used to launch the microservice

358
00:12:20,160 --> 00:12:22,639
effect will be on the server

359
00:12:22,639 --> 00:12:24,320
it will be a part of the database stored

360
00:12:24,320 --> 00:12:25,920
in a database it will not cause the

361
00:12:25,920 --> 00:12:27,440
denial of service attack until we do

362
00:12:27,440 --> 00:12:29,519
some action that triggers the denial of

363
00:12:29,519 --> 00:12:32,000
cell phone behavior so let's take an

364
00:12:32,000 --> 00:12:33,839
example to understand what we need here

365
00:12:33,839 --> 00:12:35,920
imagine having something like space then

366
00:12:35,920 --> 00:12:38,720
where you can create random pace

367
00:12:38,720 --> 00:12:40,639
imagine that placement has no

368
00:12:40,639 --> 00:12:42,480
methodology that limits the amount of

369
00:12:42,480 --> 00:12:44,480
space that you can create so you just

370
00:12:44,480 --> 00:12:46,399
create unlimited amount of space you

371
00:12:46,399 --> 00:12:47,680
create

372
00:12:47,680 --> 00:12:49,040
10 000

373
00:12:49,040 --> 00:12:51,120
10 million or whatever amount you want

374
00:12:51,120 --> 00:12:52,959
to space and then they are stored in the

375
00:12:52,959 --> 00:12:54,959
database first of all you are selling

376
00:12:54,959 --> 00:12:57,360
the database with garbage because simply

377
00:12:57,360 --> 00:12:58,320
you have

378
00:12:58,320 --> 00:13:00,000
you have automated the process it's not

379
00:13:00,000 --> 00:13:01,920
real pace nobody is using those space

380
00:13:01,920 --> 00:13:03,839
they are just garbage so are you are

381
00:13:03,839 --> 00:13:05,519
consuming the database maybe it's a

382
00:13:05,519 --> 00:13:07,120
cloud database and then you are

383
00:13:07,120 --> 00:13:09,440
consuming money

384
00:13:09,440 --> 00:13:11,519
um but there is another problem here

385
00:13:11,519 --> 00:13:13,360
imagine that now you go into account and

386
00:13:13,360 --> 00:13:16,079
then you go to the face tab and you want

387
00:13:16,079 --> 00:13:17,920
to see your face what happens is the

388
00:13:17,920 --> 00:13:19,440
server will go to the database and ask

389
00:13:19,440 --> 00:13:22,160
it to retrieve all details that this

390
00:13:22,160 --> 00:13:24,959
user has and this user has 10 million

391
00:13:24,959 --> 00:13:27,120
pays for instance so what happened is

392
00:13:27,120 --> 00:13:28,639
the server attempts to retrieve 10

393
00:13:28,639 --> 00:13:30,399
million records from the database this

394
00:13:30,399 --> 00:13:32,880
is the huge amount of resources required

395
00:13:32,880 --> 00:13:35,440
it retrieves this amount of information

396
00:13:35,440 --> 00:13:37,360
it's also a huge amount of time so

397
00:13:37,360 --> 00:13:39,519
imagine receiving 10 000 records that's

398
00:13:39,519 --> 00:13:42,160
insanely big um what happened is one of

399
00:13:42,160 --> 00:13:44,880
two things will happen the first is

400
00:13:44,880 --> 00:13:47,040
the server will limit the amount of data

401
00:13:47,040 --> 00:13:48,639
retrieved so for instance i will only

402
00:13:48,639 --> 00:13:50,720
receive you the first 100 and this is

403
00:13:50,720 --> 00:13:52,800
the correct way to do things because if

404
00:13:52,800 --> 00:13:55,760
the server doesn't bound it here we have

405
00:13:55,760 --> 00:13:57,600
what we call a linear time operation on

406
00:13:57,600 --> 00:14:00,240
the data so we have 10 million records

407
00:14:00,240 --> 00:14:02,639
and we are retrieving them it's expected

408
00:14:02,639 --> 00:14:04,320
that if we have 20 million records the

409
00:14:04,320 --> 00:14:07,040
time will double because let's say that

410
00:14:07,040 --> 00:14:08,959
the record will be retrieved in

411
00:14:08,959 --> 00:14:11,519
approximately constant time

412
00:14:11,519 --> 00:14:14,160
so the idea here is we should never

413
00:14:14,160 --> 00:14:17,199
allow the user to induce some kind of

414
00:14:17,199 --> 00:14:19,279
linear time operation or

415
00:14:19,279 --> 00:14:20,959
complex time operation in general

416
00:14:20,959 --> 00:14:22,480
something that's not

417
00:14:22,480 --> 00:14:25,920
off one or not constant time on the data

418
00:14:25,920 --> 00:14:28,000
otherwise whenever the user will attempt

419
00:14:28,000 --> 00:14:30,639
to retrieve this data simply the user

420
00:14:30,639 --> 00:14:32,720
will render the server unavailable due

421
00:14:32,720 --> 00:14:35,199
to the huge amount of resources consumed

422
00:14:35,199 --> 00:14:37,680
to serve the user reference

423
00:14:37,680 --> 00:14:40,880
um taking it from here let's

424
00:14:40,880 --> 00:14:42,480
take a little bit on some of the case

425
00:14:42,480 --> 00:14:44,160
studies one of them will be about the

426
00:14:44,160 --> 00:14:46,000
second-order genealogy attack that we

427
00:14:46,000 --> 00:14:48,399
just discussed and using snapchat

428
00:14:48,399 --> 00:14:50,320
developer portal and the other will be

429
00:14:50,320 --> 00:14:52,480
about fooling snapchat api to achieve

430
00:14:52,480 --> 00:14:53,760
targeted demand of service it's not

431
00:14:53,760 --> 00:14:55,360
related to second order denial of

432
00:14:55,360 --> 00:14:57,360
service attack but it's related to

433
00:14:57,360 --> 00:14:59,279
application level united stands attack

434
00:14:59,279 --> 00:15:01,360
that we discussed before

435
00:15:01,360 --> 00:15:03,199
so let's go into the second order design

436
00:15:03,199 --> 00:15:04,639
of service attack on snapchat so

437
00:15:04,639 --> 00:15:06,959
snapchat had developer portal you have

438
00:15:06,959 --> 00:15:09,120
an organization you can add developers

439
00:15:09,120 --> 00:15:10,839
and so on and so forth

440
00:15:10,839 --> 00:15:14,639
um and the idea here is that

441
00:15:14,639 --> 00:15:16,000
you can add

442
00:15:16,000 --> 00:15:18,079
applications into this organization so

443
00:15:18,079 --> 00:15:19,680
you can simply create an application

444
00:15:19,680 --> 00:15:21,839
within the organization and there was no

445
00:15:21,839 --> 00:15:23,279
limit

446
00:15:23,279 --> 00:15:24,480
on the number of applications that you

447
00:15:24,480 --> 00:15:25,920
can create you can create 7000

448
00:15:25,920 --> 00:15:27,360
applications a million applications

449
00:15:27,360 --> 00:15:30,000
whichever number you see

450
00:15:30,000 --> 00:15:31,839
in addition you can add anybody to your

451
00:15:31,839 --> 00:15:34,639
organization without any kind of

452
00:15:34,639 --> 00:15:36,240
authorization they won't authorize you

453
00:15:36,240 --> 00:15:37,759
you just type in their email they

454
00:15:37,759 --> 00:15:40,800
already added into your organization and

455
00:15:40,800 --> 00:15:42,560
there is no way that they can

456
00:15:42,560 --> 00:15:43,839
get out of the organization actually

457
00:15:43,839 --> 00:15:47,040
there was no leave organization button

458
00:15:47,040 --> 00:15:48,959
so this is insult to vulnerability you

459
00:15:48,959 --> 00:15:51,759
are being able to ask people

460
00:15:51,759 --> 00:15:53,839
forcibly to your organization which may

461
00:15:53,839 --> 00:15:56,560
be offensive to them but this is just a

462
00:15:56,560 --> 00:15:58,959
part of our problem the other part is

463
00:15:58,959 --> 00:16:00,240
actually the unbounded amount of

464
00:16:00,240 --> 00:16:01,680
applications

465
00:16:01,680 --> 00:16:03,440
let's say that i created 10 000

466
00:16:03,440 --> 00:16:05,199
applications

467
00:16:05,199 --> 00:16:07,440
and added my victim to the organization

468
00:16:07,440 --> 00:16:09,040
what will happen when the user is logged

469
00:16:09,040 --> 00:16:10,639
into the developer portal once the user

470
00:16:10,639 --> 00:16:12,240
logs into the developer portal the

471
00:16:12,240 --> 00:16:14,800
server will attempt to retrieve all the

472
00:16:14,800 --> 00:16:16,480
organizations of the user and all the

473
00:16:16,480 --> 00:16:18,399
applications to load them just to make

474
00:16:18,399 --> 00:16:20,079
his life easier never navigating their

475
00:16:20,079 --> 00:16:21,759
site so what will happen is the server

476
00:16:21,759 --> 00:16:23,839
will go and tell the database okay load

477
00:16:23,839 --> 00:16:26,000
all the applications and there is ten

478
00:16:26,000 --> 00:16:28,399
thousand applications so what snapchat

479
00:16:28,399 --> 00:16:31,040
did to avoid that unbounded linear time

480
00:16:31,040 --> 00:16:33,600
operation is that they cause a timeout

481
00:16:33,600 --> 00:16:35,920
so whenever the data is huge instead of

482
00:16:35,920 --> 00:16:37,680
just retrieving the first 100 for

483
00:16:37,680 --> 00:16:40,399
instance they will just climb out

484
00:16:40,399 --> 00:16:41,920
of course they have a timeout of like 15

485
00:16:41,920 --> 00:16:44,160
seconds and 10 000 application would not

486
00:16:44,160 --> 00:16:46,639
be loaded in 15 seconds so whenever the

487
00:16:46,639 --> 00:16:48,880
user log into his developer account it

488
00:16:48,880 --> 00:16:50,639
will just tell him that

489
00:16:50,639 --> 00:16:52,399
the server is not available simply

490
00:16:52,399 --> 00:16:55,440
because the server can't load his data

491
00:16:55,440 --> 00:16:57,600
and this will not only deny him from

492
00:16:57,600 --> 00:16:59,360
accessing our organization he never

493
00:16:59,360 --> 00:17:01,279
meant to ask our organization

494
00:17:01,279 --> 00:17:02,959
it will deny him from accessing his wall

495
00:17:02,959 --> 00:17:04,480
account he can't navigate his account he

496
00:17:04,480 --> 00:17:06,400
can't use it at all the developer's

497
00:17:06,400 --> 00:17:08,559
account is

498
00:17:08,559 --> 00:17:11,119
useless for him whenever he uses 500

499
00:17:11,119 --> 00:17:13,359
server is not available i'm sorry

500
00:17:13,359 --> 00:17:15,919
and the victim account is now useless he

501
00:17:15,919 --> 00:17:18,319
will have to contact for instance the

502
00:17:18,319 --> 00:17:20,079
support or something and tell him his

503
00:17:20,079 --> 00:17:22,000
problem maybe it gets sold and maybe not

504
00:17:22,000 --> 00:17:23,839
and once it gets sold we can just re-add

505
00:17:23,839 --> 00:17:25,199
him and

506
00:17:25,199 --> 00:17:27,119
again his account will be closed so just

507
00:17:27,119 --> 00:17:29,280
by knowing the victim email we can do

508
00:17:29,280 --> 00:17:31,520
this attack we can even automate it on

509
00:17:31,520 --> 00:17:33,679
many number of users by just using

510
00:17:33,679 --> 00:17:35,840
random emails for instance

511
00:17:35,840 --> 00:17:37,840
or if we have a way to enumerate emails

512
00:17:37,840 --> 00:17:40,320
that will even

513
00:17:40,320 --> 00:17:42,320
boost the effects of the

514
00:17:42,320 --> 00:17:43,280
attacks

515
00:17:43,280 --> 00:17:45,840
so this is the first attack and how we

516
00:17:45,840 --> 00:17:47,600
were able to deny people from exiting

517
00:17:47,600 --> 00:17:49,600
their development account

518
00:17:49,600 --> 00:17:52,000
let's move on to the

519
00:17:52,000 --> 00:17:53,760
other interesting attack which is how

520
00:17:53,760 --> 00:17:55,280
you're able to deny people from actually

521
00:17:55,280 --> 00:17:57,679
their business accounts on special

522
00:17:57,679 --> 00:17:59,840
so the business account which is

523
00:17:59,840 --> 00:18:00,960
actually linked with the developer

524
00:18:00,960 --> 00:18:02,400
account but they are two separate

525
00:18:02,400 --> 00:18:05,200
accounts and then today um it has a nice

526
00:18:05,200 --> 00:18:07,200
feature to invite people and now

527
00:18:07,200 --> 00:18:09,120
snapchats were

528
00:18:09,120 --> 00:18:12,240
a bit smarter and they allow people to

529
00:18:12,240 --> 00:18:15,280
accept or reject invitations so

530
00:18:15,280 --> 00:18:17,440
whenever you send an invitation

531
00:18:17,440 --> 00:18:19,039
they can accept and reject they will not

532
00:18:19,039 --> 00:18:20,880
be added automatically

533
00:18:20,880 --> 00:18:23,039
so what happened is you can send

534
00:18:23,039 --> 00:18:24,960
somebody an invitation and whenever you

535
00:18:24,960 --> 00:18:27,200
send him an invitation if you are using

536
00:18:27,200 --> 00:18:28,960
something like a proxy like verb suite

537
00:18:28,960 --> 00:18:30,320
or something whenever you send the

538
00:18:30,320 --> 00:18:32,000
invitation the request coming up for the

539
00:18:32,000 --> 00:18:34,960
invitation aim to assign a role to the

540
00:18:34,960 --> 00:18:36,400
user

541
00:18:36,400 --> 00:18:38,640
so it aims to just make the user have a

542
00:18:38,640 --> 00:18:40,080
new role or something in the

543
00:18:40,080 --> 00:18:41,600
organization maybe you assign him a

544
00:18:41,600 --> 00:18:43,280
developer an organization admin or

545
00:18:43,280 --> 00:18:44,320
whatever

546
00:18:44,320 --> 00:18:45,679
but what i thought about what will

547
00:18:45,679 --> 00:18:48,400
happen if the user has no

548
00:18:48,400 --> 00:18:50,720
role at all we just drop the request

549
00:18:50,720 --> 00:18:52,640
what's happened is whenever the user

550
00:18:52,640 --> 00:18:54,240
logged in

551
00:18:54,240 --> 00:18:56,960
you see our invitation but then whenever

552
00:18:56,960 --> 00:18:59,919
he clicks on that invitation

553
00:18:59,919 --> 00:19:02,160
and attempt to join our organization he

554
00:19:02,160 --> 00:19:04,400
won't be able to join us and his

555
00:19:04,400 --> 00:19:06,240
accounts will be locked forever why

556
00:19:06,240 --> 00:19:08,320
because this is how the api functions

557
00:19:08,320 --> 00:19:10,400
the api will look into the user account

558
00:19:10,400 --> 00:19:12,480
are you a part of this organization

559
00:19:12,480 --> 00:19:14,480
which is the attacker's organization or

560
00:19:14,480 --> 00:19:16,080
my organization in this case and the

561
00:19:16,080 --> 00:19:17,600
answer is yes i'm a part of this

562
00:19:17,600 --> 00:19:18,720
organization they accepted our

563
00:19:18,720 --> 00:19:20,559
invitation

564
00:19:20,559 --> 00:19:22,880
but then the second question is do you

565
00:19:22,880 --> 00:19:24,559
have any role in that organization are

566
00:19:24,559 --> 00:19:26,320
you a developer or organization admin or

567
00:19:26,320 --> 00:19:27,840
something and the answer is no you don't

568
00:19:27,840 --> 00:19:30,160
have any roles so what will api do

569
00:19:30,160 --> 00:19:31,679
instead of just denying him from acting

570
00:19:31,679 --> 00:19:33,600
our organization which makes sense the

571
00:19:33,600 --> 00:19:36,480
api closed the whole account it say okay

572
00:19:36,480 --> 00:19:38,160
i'm sorry this is not allowed you are

573
00:19:38,160 --> 00:19:40,559
not right to get into your account so

574
00:19:40,559 --> 00:19:41,760
all the functionality is within the

575
00:19:41,760 --> 00:19:43,679
account where rendered not available you

576
00:19:43,679 --> 00:19:45,600
will just see a stream telling you i'm

577
00:19:45,600 --> 00:19:47,600
sorry you are not a surprise even his

578
00:19:47,600 --> 00:19:48,400
own

579
00:19:48,400 --> 00:19:50,480
organization he will not be able to

580
00:19:50,480 --> 00:19:52,559
access them this is because the api was

581
00:19:52,559 --> 00:19:54,480
not functioning incorrectly and that's

582
00:19:54,480 --> 00:19:56,720
how we denied the users

583
00:19:56,720 --> 00:19:59,440
somebody would say okay i see you but

584
00:19:59,440 --> 00:20:01,200
um you have said that the user needs to

585
00:20:01,200 --> 00:20:02,960
accept the invitation this is not a real

586
00:20:02,960 --> 00:20:05,440
click attack okay you are right um but

587
00:20:05,440 --> 00:20:07,520
if we move the step back i told you at

588
00:20:07,520 --> 00:20:08,960
the beginning of the story that the

589
00:20:08,960 --> 00:20:10,799
developers account was linked with the

590
00:20:10,799 --> 00:20:12,640
business account luckily whenever

591
00:20:12,640 --> 00:20:14,480
somebody is added as a developer they

592
00:20:14,480 --> 00:20:16,000
are added automatically to our business

593
00:20:16,000 --> 00:20:18,080
account without any kind of acceptance

594
00:20:18,080 --> 00:20:21,280
so how did i just escalated that further

595
00:20:21,280 --> 00:20:23,039
you go to the developers account add

596
00:20:23,039 --> 00:20:24,640
somebody to your organization as a

597
00:20:24,640 --> 00:20:26,799
developer and then you navigate to the

598
00:20:26,799 --> 00:20:27,760
business account they are added

599
00:20:27,760 --> 00:20:29,280
automatically there is no need for the

600
00:20:29,280 --> 00:20:31,440
invitation no need to accept it and now

601
00:20:31,440 --> 00:20:33,360
whenever he logs in he can't access

602
00:20:33,360 --> 00:20:35,440
accounts without touching the invitation

603
00:20:35,440 --> 00:20:36,960
or accepting this so this is how we

604
00:20:36,960 --> 00:20:38,720
escalated it from something that needs

605
00:20:38,720 --> 00:20:40,400
the user to accept our invitation to

606
00:20:40,400 --> 00:20:42,640
something that needs absolutely no user

607
00:20:42,640 --> 00:20:44,320
interaction

608
00:20:44,320 --> 00:20:46,559
um so this summarize the api pulling and

609
00:20:46,559 --> 00:20:48,640
how we were able to deny the users from

610
00:20:48,640 --> 00:20:51,120
accessing their business accounts

611
00:20:51,120 --> 00:20:53,440
finally i would like to share some final

612
00:20:53,440 --> 00:20:54,880
thoughts regarding the topic about how

613
00:20:54,880 --> 00:20:56,480
to find and exploit

614
00:20:56,480 --> 00:20:57,840
application level denier services on

615
00:20:57,840 --> 00:21:00,000
their bases and the main way to find

616
00:21:00,000 --> 00:21:01,919
those is to actually look at previous

617
00:21:01,919 --> 00:21:03,440
vulnerabilities those are just like

618
00:21:03,440 --> 00:21:05,760
business logic they are not easy to find

619
00:21:05,760 --> 00:21:06,960
but um

620
00:21:06,960 --> 00:21:08,720
they happen to be similar between

621
00:21:08,720 --> 00:21:10,240
applications having similar businesses

622
00:21:10,240 --> 00:21:12,400
so for instance if you find a way to do

623
00:21:12,400 --> 00:21:15,039
that in social media applications and

624
00:21:15,039 --> 00:21:16,960
just look the same way in other social

625
00:21:16,960 --> 00:21:18,880
media applications because maybe you'll

626
00:21:18,880 --> 00:21:21,120
find them also there are some clusters

627
00:21:21,120 --> 00:21:22,880
or classes of application level denial

628
00:21:22,880 --> 00:21:25,360
service effects like the second order

629
00:21:25,360 --> 00:21:26,880
service attack

630
00:21:26,880 --> 00:21:29,200
and then you can just

631
00:21:29,200 --> 00:21:30,720
look for it the same way you look for

632
00:21:30,720 --> 00:21:32,720
second order derivatives as for a second

633
00:21:32,720 --> 00:21:34,720
order crosstalk scripting and so on so

634
00:21:34,720 --> 00:21:37,679
it's not really that hard but uh the

635
00:21:37,679 --> 00:21:39,280
main thing i will tell you you will have

636
00:21:39,280 --> 00:21:41,120
to understand the application to

637
00:21:41,120 --> 00:21:42,720
understand the application technology

638
00:21:42,720 --> 00:21:44,799
how is it functioning and how can you

639
00:21:44,799 --> 00:21:47,120
render exceptionally long delays in it

640
00:21:47,120 --> 00:21:49,039
this is your way

641
00:21:49,039 --> 00:21:50,960
to find and exploit those

642
00:21:50,960 --> 00:21:52,080
vulnerabilities

643
00:21:52,080 --> 00:21:53,840
um about my future work actually i'm now

644
00:21:53,840 --> 00:21:56,320
working on

645
00:21:56,320 --> 00:21:57,679
studying the attacks regarding

646
00:21:57,679 --> 00:21:59,840
microservice networks which is an

647
00:21:59,840 --> 00:22:01,039
emerging

648
00:22:01,039 --> 00:22:02,960
system architecture

649
00:22:02,960 --> 00:22:04,960
i'm working on understanding

650
00:22:04,960 --> 00:22:06,799
the architecture more and looking into

651
00:22:06,799 --> 00:22:08,720
how to

652
00:22:08,720 --> 00:22:10,960
find unique delight of service attacks

653
00:22:10,960 --> 00:22:14,159
within that architecture

654
00:22:14,240 --> 00:22:15,440
and i'm working on doing that in the

655
00:22:15,440 --> 00:22:16,320
moment

656
00:22:16,320 --> 00:22:18,320
um so finally i would like to thank

657
00:22:18,320 --> 00:22:20,720
y'all chambok chambox was my mentor uh

658
00:22:20,720 --> 00:22:22,960
in my first ever talk and

659
00:22:22,960 --> 00:22:25,200
without him i wouldn't have do it here

660
00:22:25,200 --> 00:22:27,120
uh i would also like to thank simbian

661
00:22:27,120 --> 00:22:29,440
timo and ligo and that fear matrix and

662
00:22:29,440 --> 00:22:31,679
those people mentored me at my start and

663
00:22:31,679 --> 00:22:33,360
actually without them

664
00:22:33,360 --> 00:22:36,480
um i wouldn't have gone that far

665
00:22:36,480 --> 00:22:38,080
so i'd like to thank him and i would

666
00:22:38,080 --> 00:22:39,520
like to urge you to follow those people

667
00:22:39,520 --> 00:22:41,039
on twitter because they usually share

668
00:22:41,039 --> 00:22:42,960
things about security and you are

669
00:22:42,960 --> 00:22:45,280
probably going to learn a lot from them

670
00:22:45,280 --> 00:22:47,600
um i would like to finally thank you all

671
00:22:47,600 --> 00:22:49,520
for attending and i'll be happy if you

672
00:22:49,520 --> 00:22:51,440
have any questions to answer them

673
00:22:51,440 --> 00:22:54,840
thank you everybody

