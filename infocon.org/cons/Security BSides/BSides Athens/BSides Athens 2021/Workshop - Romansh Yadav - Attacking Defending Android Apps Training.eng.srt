1
00:00:04,319 --> 00:00:06,240
hello and welcome to security

2
00:00:06,240 --> 00:00:09,280
beside athens my name is oman syadav

3
00:00:09,280 --> 00:00:10,960
i will be the instructor for this

4
00:00:10,960 --> 00:00:12,960
workshop

5
00:00:12,960 --> 00:00:16,320
this is our content we will cover

6
00:00:16,320 --> 00:00:18,800
android introduction basic we will set

7
00:00:18,800 --> 00:00:20,880
up android pen testing involvement

8
00:00:20,880 --> 00:00:23,439
lab and we will do some reverse

9
00:00:23,439 --> 00:00:24,800
engineering practical

10
00:00:24,800 --> 00:00:26,960
and some basic practical as well we will

11
00:00:26,960 --> 00:00:27,920
do

12
00:00:27,920 --> 00:00:30,160
and the last we will see application

13
00:00:30,160 --> 00:00:32,159
component and security issues

14
00:00:32,159 --> 00:00:35,200
and we will also do

15
00:00:35,200 --> 00:00:38,320
some android static pen testing

16
00:00:38,320 --> 00:00:42,719
by using the tools like mob sf

17
00:00:43,120 --> 00:00:46,559
so this is the android architecture

18
00:00:46,559 --> 00:00:48,640
we have five layer in android

19
00:00:48,640 --> 00:00:49,840
architecture

20
00:00:49,840 --> 00:00:52,480
application application framework

21
00:00:52,480 --> 00:00:53,600
liability

22
00:00:53,600 --> 00:00:57,680
android runtime and linux kernel each

23
00:00:57,680 --> 00:01:00,399
app each layer is responsible for doing

24
00:01:00,399 --> 00:01:03,199
the different different operation

25
00:01:03,199 --> 00:01:06,720
at the end these all layers support

26
00:01:06,720 --> 00:01:10,320
a application for doing their

27
00:01:10,320 --> 00:01:12,720
work for operation like a mobile banking

28
00:01:12,720 --> 00:01:13,680
application

29
00:01:13,680 --> 00:01:16,799
or browser-based application like chrome

30
00:01:16,799 --> 00:01:21,680
so uh every application

31
00:01:21,680 --> 00:01:23,920
which we install inside the mobile

32
00:01:23,920 --> 00:01:25,600
device

33
00:01:25,600 --> 00:01:27,680
got different different support from a

34
00:01:27,680 --> 00:01:28,799
different different

35
00:01:28,799 --> 00:01:32,079
application layer like suppose library

36
00:01:32,079 --> 00:01:35,200
so we have web browser

37
00:01:35,200 --> 00:01:38,560
like chrome mozilla installed in our app

38
00:01:38,560 --> 00:01:41,280
mobile device so we have library like

39
00:01:41,280 --> 00:01:43,840
webkit so webkit library support

40
00:01:43,840 --> 00:01:47,759
the chrome browser so

41
00:01:47,759 --> 00:01:50,799
we have like power management in linux

42
00:01:50,799 --> 00:01:51,520
kernel

43
00:01:51,520 --> 00:01:53,280
so basically linux kernel is very

44
00:01:53,280 --> 00:01:55,360
important it is like

45
00:01:55,360 --> 00:01:58,719
the heart of the android architecture

46
00:01:58,719 --> 00:02:01,520
and it's provide process isolation power

47
00:02:01,520 --> 00:02:02,399
management

48
00:02:02,399 --> 00:02:05,840
flash driver memory camera driver

49
00:02:05,840 --> 00:02:09,119
display driver usb driver

50
00:02:09,119 --> 00:02:12,000
so a linux kernel is very important and

51
00:02:12,000 --> 00:02:12,959
then it's come

52
00:02:12,959 --> 00:02:14,720
with and there is a application

53
00:02:14,720 --> 00:02:16,319
framework so we get

54
00:02:16,319 --> 00:02:18,480
activity manager window manager content

55
00:02:18,480 --> 00:02:20,319
provider inside the application

56
00:02:20,319 --> 00:02:21,200
framework

57
00:02:21,200 --> 00:02:23,040
and at last where we install our

58
00:02:23,040 --> 00:02:25,360
application like contact home phone

59
00:02:25,360 --> 00:02:27,360
browser

60
00:02:27,360 --> 00:02:31,280
banking application chatting application

61
00:02:31,280 --> 00:02:34,319
extract structure

62
00:02:34,480 --> 00:02:37,519
so uh this is uh android application

63
00:02:37,519 --> 00:02:38,560
fundamental

64
00:02:38,560 --> 00:02:40,800
so basically we know all the android

65
00:02:40,800 --> 00:02:42,239
apps that is in java programming

66
00:02:42,239 --> 00:02:43,440
language

67
00:02:43,440 --> 00:02:46,160
and android sdk is responsible for

68
00:02:46,160 --> 00:02:48,400
compiling your code suppose we

69
00:02:48,400 --> 00:02:52,000
write a code in in any

70
00:02:52,000 --> 00:02:55,599
ide like android studio in java

71
00:02:55,599 --> 00:02:58,159
programming language right and so

72
00:02:58,159 --> 00:03:01,519
basically ide comes with the android sdk

73
00:03:01,519 --> 00:03:04,000
so it is the android software

74
00:03:04,000 --> 00:03:04,959
development kit that

75
00:03:04,959 --> 00:03:08,480
is that compile your code into the apk

76
00:03:08,480 --> 00:03:11,360
and then apk we install into our mobile

77
00:03:11,360 --> 00:03:12,319
device

78
00:03:12,319 --> 00:03:15,440
so we will have a quick look at the

79
00:03:15,440 --> 00:03:16,840
android

80
00:03:16,840 --> 00:03:19,840
studio

81
00:03:28,159 --> 00:03:32,159
so this is android studio

82
00:03:32,159 --> 00:03:34,400
and we will close it and i will start a

83
00:03:34,400 --> 00:03:37,040
new project

84
00:03:40,080 --> 00:03:43,599
i will start a new project

85
00:03:43,840 --> 00:03:46,159
so this is the templates we can select

86
00:03:46,159 --> 00:03:47,280
any template like

87
00:03:47,280 --> 00:03:49,920
bottom navigation we will select it it

88
00:03:49,920 --> 00:03:51,280
will come with

89
00:03:51,280 --> 00:04:00,000
the activities

90
00:04:00,000 --> 00:04:05,120
i will you can name it anything right

91
00:04:05,120 --> 00:04:07,439
so our project is loading so this is our

92
00:04:07,439 --> 00:04:09,360
android studio

93
00:04:09,360 --> 00:04:12,720
this it's these are the

94
00:04:12,720 --> 00:04:16,399
file structure of our application

95
00:04:16,399 --> 00:04:19,918
we can see there are different different

96
00:04:19,918 --> 00:04:23,840
files like library source code all the

97
00:04:23,840 --> 00:04:26,160
source code is here main

98
00:04:26,160 --> 00:04:29,520
this is the xml file this is the central

99
00:04:29,520 --> 00:04:31,520
file of any application

100
00:04:31,520 --> 00:04:35,199
in android and we can say here main

101
00:04:35,199 --> 00:04:38,400
java and this is the main activity

102
00:04:38,400 --> 00:04:40,080
so basically what is main active

103
00:04:40,080 --> 00:04:44,240
activity main activity is something

104
00:04:44,240 --> 00:04:48,320
when whenever we open any application

105
00:04:48,320 --> 00:04:50,000
the first activity will be the main

106
00:04:50,000 --> 00:04:51,759
activity

107
00:04:51,759 --> 00:04:56,639
so we can open it here so this is main

108
00:04:56,639 --> 00:04:58,240
activity

109
00:04:58,240 --> 00:05:01,440
we can add any dot java file we can add

110
00:05:01,440 --> 00:05:04,800
any activities right so

111
00:05:04,800 --> 00:05:07,919
i will try to run it

112
00:05:07,919 --> 00:05:11,840
it will build up automatically and

113
00:05:15,520 --> 00:05:17,840
yes

114
00:05:19,039 --> 00:05:22,080
it will build automatically and then

115
00:05:22,080 --> 00:05:25,759
it will start the emulator

116
00:05:25,759 --> 00:05:28,639
and it will install automatically inside

117
00:05:28,639 --> 00:05:31,360
the emulator

118
00:05:31,360 --> 00:05:34,320
this is how it looks like it's already

119
00:05:34,320 --> 00:05:36,080
installed actually okay

120
00:05:36,080 --> 00:05:39,280
uh let me go

121
00:05:39,280 --> 00:05:41,758
this one

122
00:05:43,199 --> 00:05:45,600
this is

123
00:05:51,360 --> 00:05:54,639
okay both are same

124
00:05:54,639 --> 00:05:57,759
we can say this is dashboard segment

125
00:05:57,759 --> 00:06:00,240
fragment sorry this is notification

126
00:06:00,240 --> 00:06:02,080
fragment

127
00:06:02,080 --> 00:06:07,759
this is about emulator

128
00:06:07,759 --> 00:06:12,080
here so so basically

129
00:06:12,080 --> 00:06:15,520
android studio is something it is

130
00:06:15,520 --> 00:06:17,919
it is id intricate development

131
00:06:17,919 --> 00:06:18,880
environment

132
00:06:18,880 --> 00:06:21,919
where we develop our android apps we can

133
00:06:21,919 --> 00:06:22,560
develop

134
00:06:22,560 --> 00:06:24,560
we can go we can write our own

135
00:06:24,560 --> 00:06:25,919
activities

136
00:06:25,919 --> 00:06:30,479
we can modify any activities code

137
00:06:30,479 --> 00:06:33,199
right so whatever like you want to

138
00:06:33,199 --> 00:06:34,880
develop a chatting app you want to

139
00:06:34,880 --> 00:06:36,479
develop a banking app

140
00:06:36,479 --> 00:06:38,560
whatever you want to develop you can use

141
00:06:38,560 --> 00:06:40,160
android studio

142
00:06:40,160 --> 00:06:42,479
and it will automatically come with the

143
00:06:42,479 --> 00:06:45,039
android sdk

144
00:06:45,039 --> 00:06:49,759
all right

145
00:06:49,759 --> 00:06:51,840
so this is the android file system

146
00:06:51,840 --> 00:06:53,840
structure i'm talking here i am talking

147
00:06:53,840 --> 00:06:54,479
about the

148
00:06:54,479 --> 00:06:57,919
uh the android operating system file

149
00:06:57,919 --> 00:07:01,120
structure this is and this is this file

150
00:07:01,120 --> 00:07:01,680
system

151
00:07:01,680 --> 00:07:04,720
this is file system is and this is for

152
00:07:04,720 --> 00:07:05,120
the

153
00:07:05,120 --> 00:07:08,319
apps android apps but this file system

154
00:07:08,319 --> 00:07:11,360
structure is for the operating system

155
00:07:11,360 --> 00:07:15,919
so it is pretty much similar to linux

156
00:07:15,919 --> 00:07:17,360
there is a single loop here

157
00:07:17,360 --> 00:07:20,400
and we have sd card folder and

158
00:07:20,400 --> 00:07:22,560
external sd card folder so if you if you

159
00:07:22,560 --> 00:07:25,039
put any external sd card it will

160
00:07:25,039 --> 00:07:28,960
appear in android file system structure

161
00:07:28,960 --> 00:07:31,039
and this is the main important things

162
00:07:31,039 --> 00:07:32,160
that

163
00:07:32,160 --> 00:07:36,000
android do because android manage

164
00:07:36,000 --> 00:07:38,319
sandboxing and permission model is a

165
00:07:38,319 --> 00:07:39,440
very

166
00:07:39,440 --> 00:07:42,800
very unique way so whenever we install a

167
00:07:42,800 --> 00:07:43,680
app

168
00:07:43,680 --> 00:07:47,120
suppose we install two app f1 and app2

169
00:07:47,120 --> 00:07:50,240
so when we open or when we start our app

170
00:07:50,240 --> 00:07:50,639
one

171
00:07:50,639 --> 00:07:54,240
f1 will get a unique process id and app2

172
00:07:54,240 --> 00:07:56,479
will get a unique process id so

173
00:07:56,479 --> 00:07:59,280
basically f1 will get a unique user

174
00:07:59,280 --> 00:08:02,800
like a uid and app 2 will be treated

175
00:08:02,800 --> 00:08:06,479
as a unique user from the links linux

176
00:08:06,479 --> 00:08:07,599
kernel

177
00:08:07,599 --> 00:08:10,800
so linux kernel give a unique id to f1

178
00:08:10,800 --> 00:08:13,919
it will treat f1 as a user

179
00:08:13,919 --> 00:08:16,960
and it will treat app 2 as a user

180
00:08:16,960 --> 00:08:20,639
so f1 cannot use the resource of app 2

181
00:08:20,639 --> 00:08:24,000
and app 2 cannot use the resource of f1

182
00:08:24,000 --> 00:08:28,400
and inside the data folder data folder

183
00:08:28,400 --> 00:08:31,360
f1 can store their or their whatever

184
00:08:31,360 --> 00:08:33,039
data they want to install

185
00:08:33,039 --> 00:08:35,120
and app 2 can install their own data

186
00:08:35,120 --> 00:08:37,919
inside their own folders so they cannot

187
00:08:37,919 --> 00:08:41,200
access the files and the data of

188
00:08:41,200 --> 00:08:43,279
each others without the permission

189
00:08:43,279 --> 00:08:46,000
without the use of intent

190
00:08:46,000 --> 00:08:50,160
right so this is how android manage

191
00:08:50,160 --> 00:08:54,160
permission model and sandboxing

192
00:08:54,160 --> 00:08:57,440
and this is the process of creating apk

193
00:08:57,440 --> 00:08:58,800
basically

194
00:08:58,800 --> 00:09:02,000
as i show you in android studio

195
00:09:02,000 --> 00:09:05,519
we write java programming

196
00:09:05,519 --> 00:09:08,880
and we develop android app

197
00:09:08,880 --> 00:09:11,920
and then we compile the

198
00:09:11,920 --> 00:09:14,720
the code and by using the java compiler

199
00:09:14,720 --> 00:09:16,320
and we get the byte code

200
00:09:16,320 --> 00:09:20,160
and then again we compile byte code

201
00:09:20,160 --> 00:09:23,040
with the help of dex compiler and with

202
00:09:23,040 --> 00:09:25,040
resources all the resources and data and

203
00:09:25,040 --> 00:09:25,920
then we

204
00:09:25,920 --> 00:09:29,040
got the apk file so this is the diagram

205
00:09:29,040 --> 00:09:29,519
for

206
00:09:29,519 --> 00:09:34,480
creating a apk from the java files

207
00:09:34,480 --> 00:09:36,800
this is a android component architecture

208
00:09:36,800 --> 00:09:37,760
sorry

209
00:09:37,760 --> 00:09:40,640
a diagram so we have different different

210
00:09:40,640 --> 00:09:42,240
component in android like

211
00:09:42,240 --> 00:09:45,680
activity like so activity is a screen

212
00:09:45,680 --> 00:09:47,839
like single screen we can call it as

213
00:09:47,839 --> 00:09:50,959
activity like i

214
00:09:50,959 --> 00:09:53,200
so this is home fragment this is a

215
00:09:53,200 --> 00:09:54,720
activity

216
00:09:54,720 --> 00:09:58,399
now this is dashboard segment

217
00:09:58,399 --> 00:10:00,880
this is notification segment so

218
00:10:00,880 --> 00:10:01,680
notification

219
00:10:01,680 --> 00:10:04,320
dashboard these are the button but this

220
00:10:04,320 --> 00:10:05,040
is the

221
00:10:05,040 --> 00:10:07,839
this is notification segment is activity

222
00:10:07,839 --> 00:10:08,480
so

223
00:10:08,480 --> 00:10:11,519
activity is a screen and these are the

224
00:10:11,519 --> 00:10:14,000
buttons

225
00:10:14,800 --> 00:10:18,160
and services like suppose we are doing

226
00:10:18,160 --> 00:10:19,200
some chatting and

227
00:10:19,200 --> 00:10:20,880
in the background we are listening some

228
00:10:20,880 --> 00:10:22,399
music so that

229
00:10:22,399 --> 00:10:26,160
music will be a services thought card

230
00:10:26,160 --> 00:10:29,279
receiver is like when our phone battery

231
00:10:29,279 --> 00:10:31,440
is going to down and with the seaway

232
00:10:31,440 --> 00:10:34,959
alerts that your battery is going to be

233
00:10:34,959 --> 00:10:36,959
down five percent below two percent load

234
00:10:36,959 --> 00:10:38,800
this is a broadcast message or when we

235
00:10:38,800 --> 00:10:40,000
apply dnd

236
00:10:40,000 --> 00:10:42,079
so at the time of 10 pm it will

237
00:10:42,079 --> 00:10:43,360
automatically appear that

238
00:10:43,360 --> 00:10:45,360
do not disturb mode it is enabled

239
00:10:45,360 --> 00:10:46,640
automatically so

240
00:10:46,640 --> 00:10:49,440
it is a broadcast message basically

241
00:10:49,440 --> 00:10:51,680
content provider

242
00:10:51,680 --> 00:10:54,160
basically com contains provider

243
00:10:54,160 --> 00:10:55,920
components supply data from one

244
00:10:55,920 --> 00:10:57,920
application to

245
00:10:57,920 --> 00:11:00,000
other on the request so when you request

246
00:11:00,000 --> 00:11:02,160
from data from one application

247
00:11:02,160 --> 00:11:05,120
to other so it will be it will be done

248
00:11:05,120 --> 00:11:06,240
by the using the

249
00:11:06,240 --> 00:11:09,440
content provider and we have additional

250
00:11:09,440 --> 00:11:10,399
component like

251
00:11:10,399 --> 00:11:13,600
intent so intent is also

252
00:11:13,600 --> 00:11:18,320
very important so intent is like when

253
00:11:18,480 --> 00:11:21,440
intent is like a messenger suppose we

254
00:11:21,440 --> 00:11:21,839
need

255
00:11:21,839 --> 00:11:25,040
a data from from app2

256
00:11:25,040 --> 00:11:27,040
suppose app one needed the data from

257
00:11:27,040 --> 00:11:28,399
app2 so

258
00:11:28,399 --> 00:11:30,640
in with the help of intent will send a

259
00:11:30,640 --> 00:11:31,519
request

260
00:11:31,519 --> 00:11:34,800
to app2 and app2 will transfer

261
00:11:34,800 --> 00:11:36,560
the data with the help of content

262
00:11:36,560 --> 00:11:38,240
provider to everyone

263
00:11:38,240 --> 00:11:43,440
this is something how they work together

264
00:11:43,440 --> 00:11:46,480
now let's create

265
00:11:46,480 --> 00:11:50,959
the pen testing environment lab so

266
00:11:51,440 --> 00:11:53,279
for creating the pen testing environment

267
00:11:53,279 --> 00:11:55,120
lab we need a emulator

268
00:11:55,120 --> 00:11:58,160
so we can use this this emulator android

269
00:11:58,160 --> 00:11:59,200
studio emulator

270
00:11:59,200 --> 00:12:01,839
or we we can use the journey motion

271
00:12:01,839 --> 00:12:03,920
emulator so i will use

272
00:12:03,920 --> 00:12:07,680
jenny motion i will show you how to

273
00:12:07,680 --> 00:12:11,920
install the image of any

274
00:12:11,920 --> 00:12:14,959
android operating system so i am going

275
00:12:14,959 --> 00:12:16,399
to open my jenny motion

276
00:12:16,399 --> 00:12:20,480
so generation you can download from here

277
00:12:21,839 --> 00:12:24,240
this is the website jenny motion you can

278
00:12:24,240 --> 00:12:25,120
download

279
00:12:25,120 --> 00:12:28,959
and you can install it for linux

280
00:12:28,959 --> 00:12:31,279
mac and windows so basically jenny

281
00:12:31,279 --> 00:12:32,160
motion work

282
00:12:32,160 --> 00:12:35,519
with virtualbox so you need to install

283
00:12:35,519 --> 00:12:37,040
the virtualbox

284
00:12:37,040 --> 00:12:39,920
in order to run the journey motion i

285
00:12:39,920 --> 00:12:40,639
already have

286
00:12:40,639 --> 00:12:44,399
the virtual box

287
00:12:44,959 --> 00:12:48,480
so these are the images so whenever you

288
00:12:48,480 --> 00:12:51,360
when you install the journey motion you

289
00:12:51,360 --> 00:12:52,560
open it up

290
00:12:52,560 --> 00:12:56,160
and you login inside the genymotion

291
00:12:56,160 --> 00:12:58,000
and you will find there are so many

292
00:12:58,000 --> 00:12:59,760
images

293
00:12:59,760 --> 00:13:02,560
these are the custom devices so you can

294
00:13:02,560 --> 00:13:04,240
install any image

295
00:13:04,240 --> 00:13:07,200
make sure it should be like api 23

296
00:13:07,200 --> 00:13:08,480
android 7

297
00:13:08,480 --> 00:13:14,240
8 you know it is it should be something

298
00:13:14,240 --> 00:13:18,079
not too much latest or not outdated

299
00:13:18,079 --> 00:13:21,519
so we will do so here if i want to show

300
00:13:21,519 --> 00:13:23,200
you how to install it just click on this

301
00:13:23,200 --> 00:13:24,320
button

302
00:13:24,320 --> 00:13:27,760
so i will show you on

303
00:13:29,200 --> 00:13:34,560
on some latest one it

304
00:13:34,560 --> 00:13:38,000
right custom phone it this one

305
00:13:38,000 --> 00:13:41,760
this is you you install it here net

306
00:13:41,760 --> 00:13:45,199
default is that custom phone two

307
00:13:45,199 --> 00:13:49,440
and it's start downloading it will

308
00:13:49,440 --> 00:13:53,040
when this when it will complete it

309
00:13:53,040 --> 00:13:55,760
automatically

310
00:13:57,680 --> 00:13:59,920
so we can create it so when it will be

311
00:13:59,920 --> 00:14:01,279
completed so

312
00:14:01,279 --> 00:14:03,920
in the meantime i will start this one it

313
00:14:03,920 --> 00:14:04,560
already

314
00:14:04,560 --> 00:14:07,119
installed

315
00:14:09,199 --> 00:14:12,880
so it is starting virtual devices

316
00:14:12,880 --> 00:14:16,639
and you can see here custom phone one

317
00:14:16,639 --> 00:14:18,160
it's running

318
00:14:18,160 --> 00:14:22,639
in the virtual box right

319
00:14:24,399 --> 00:14:27,440
this is the image it is

320
00:14:27,440 --> 00:14:30,880
booting up

321
00:14:30,880 --> 00:14:33,120
and this is our ip address you can see

322
00:14:33,120 --> 00:14:35,360
here

323
00:14:35,519 --> 00:14:39,040
and we also get the message to

324
00:14:39,040 --> 00:14:40,639
that device install device has been

325
00:14:40,639 --> 00:14:42,800
installed we can start this as well

326
00:14:42,800 --> 00:14:45,760
if you want right because i want to show

327
00:14:45,760 --> 00:14:47,680
you how to install it

328
00:14:47,680 --> 00:14:50,399
that's why i

329
00:14:50,800 --> 00:14:54,000
install it and now

330
00:14:54,000 --> 00:14:59,839
okay now it's already started right

331
00:15:00,000 --> 00:15:04,560
so now first we need a app

332
00:15:04,560 --> 00:15:07,360
we are going to do a pen testing right

333
00:15:07,360 --> 00:15:09,600
so we need a app where we can do it

334
00:15:09,600 --> 00:15:11,839
our pen testing practice right so we

335
00:15:11,839 --> 00:15:14,399
will do our fantastic texture on a very

336
00:15:14,399 --> 00:15:15,040
good app

337
00:15:15,040 --> 00:15:17,439
piva

338
00:15:18,399 --> 00:15:20,639
viva can we find here it is a very good

339
00:15:20,639 --> 00:15:22,959
app and it is developed by st bridge

340
00:15:22,959 --> 00:15:26,079
so because why i am choosing it because

341
00:15:26,079 --> 00:15:28,560
it's covered so many vulnerabilities you

342
00:15:28,560 --> 00:15:30,959
can see here vulnerability cover

343
00:15:30,959 --> 00:15:33,040
these are the vulnerabilities that it's

344
00:15:33,040 --> 00:15:34,720
covered and

345
00:15:34,720 --> 00:15:36,959
it's help us to explore more

346
00:15:36,959 --> 00:15:38,240
vulnerabilities

347
00:15:38,240 --> 00:15:39,920
so that we can learn about the more

348
00:15:39,920 --> 00:15:42,639
vulnerabilities the more

349
00:15:42,639 --> 00:15:45,360
name we know about the vulnerabilities

350
00:15:45,360 --> 00:15:46,320
the more we'll

351
00:15:46,320 --> 00:15:50,320
learn right so we will use this app

352
00:15:50,320 --> 00:15:55,839
you can download it here apk

353
00:15:56,000 --> 00:15:59,920
and this is the apg

354
00:16:01,040 --> 00:16:04,079
i already have it

355
00:16:06,079 --> 00:16:08,079
click on download i have five file

356
00:16:08,079 --> 00:16:09,440
actually

357
00:16:09,440 --> 00:16:12,639
so i downloaded it

358
00:16:12,639 --> 00:16:16,000
and now i will try to install it

359
00:16:16,000 --> 00:16:19,440
inside this emulator

360
00:16:20,959 --> 00:16:24,880
before we going ahead we need

361
00:16:24,880 --> 00:16:30,880
one more tool called adb and what is adb

362
00:16:34,839 --> 00:16:37,680
basically

363
00:16:37,680 --> 00:16:40,399
you can run you can learn about the adb

364
00:16:40,399 --> 00:16:41,120
here

365
00:16:41,120 --> 00:16:44,320
adb is a bridge that will help us to

366
00:16:44,320 --> 00:16:46,000
communicate

367
00:16:46,000 --> 00:16:48,560
with the device or with the emulator so

368
00:16:48,560 --> 00:16:50,000
with the help of adb we can

369
00:16:50,000 --> 00:16:53,040
easily communicate with

370
00:16:53,040 --> 00:16:56,639
the emulator right so you can

371
00:16:56,639 --> 00:16:59,199
learn about it how what is the adp how

372
00:16:59,199 --> 00:17:00,399
we connect

373
00:17:00,399 --> 00:17:03,839
and what are the command that adb

374
00:17:03,839 --> 00:17:05,520
provided to us

375
00:17:05,520 --> 00:17:08,480
adba is actually very good tool or it

376
00:17:08,480 --> 00:17:09,039
will

377
00:17:09,039 --> 00:17:11,119
automatically come with platform tool if

378
00:17:11,119 --> 00:17:19,839
you download the android platform tool

379
00:17:26,319 --> 00:17:29,600
is if you download the platform tools it

380
00:17:29,600 --> 00:17:30,080
will come

381
00:17:30,080 --> 00:17:33,840
automatically with

382
00:17:33,840 --> 00:17:37,360
adb fastboot systec so

383
00:17:37,360 --> 00:17:39,760
these here they have platform tool

384
00:17:39,760 --> 00:17:41,360
already

385
00:17:41,360 --> 00:17:44,160
window mac linux you can download it i

386
00:17:44,160 --> 00:17:45,440
already downloaded

387
00:17:45,440 --> 00:17:48,960
and installed the adb in my system

388
00:17:48,960 --> 00:17:52,720
so now i will try to

389
00:17:54,160 --> 00:17:57,120
run adb sorry adb and you can see there

390
00:17:57,120 --> 00:17:58,080
are so many

391
00:17:58,080 --> 00:18:01,840
commands now

392
00:18:01,919 --> 00:18:04,480
we will go up and we will start seeing

393
00:18:04,480 --> 00:18:06,400
the different different command

394
00:18:06,400 --> 00:18:09,840
right so first is like devices

395
00:18:09,840 --> 00:18:11,919
so devices command will list all the

396
00:18:11,919 --> 00:18:12,960
devices

397
00:18:12,960 --> 00:18:15,840
right adb

398
00:18:16,000 --> 00:18:19,520
devices so now you can see we have two

399
00:18:19,520 --> 00:18:20,559
emulator

400
00:18:20,559 --> 00:18:24,080
this one and this one so this emulator

401
00:18:24,080 --> 00:18:27,280
belongs to android studio you know we

402
00:18:27,280 --> 00:18:32,240
already in this this emulator this one

403
00:18:32,240 --> 00:18:36,799
right and both are connected right

404
00:18:41,760 --> 00:18:43,840
now i will try to install the pivo

405
00:18:43,840 --> 00:18:47,678
application in both emulator

406
00:18:48,000 --> 00:18:51,200
right so now i will

407
00:18:51,200 --> 00:18:54,320
go into

408
00:18:54,320 --> 00:18:57,840
my directory

409
00:19:14,559 --> 00:19:25,600
this is

410
00:19:25,600 --> 00:19:29,280
so now i am going to copy that piva file

411
00:19:29,280 --> 00:19:39,840
inside this directory

412
00:19:50,840 --> 00:19:53,840
download

413
00:19:55,760 --> 00:19:59,280
which one i should

414
00:19:59,440 --> 00:20:01,840
copy

415
00:20:02,880 --> 00:20:07,840
you can copy anyone

416
00:20:11,600 --> 00:20:21,840
let's try to keep

417
00:20:32,840 --> 00:20:35,840
okay

418
00:20:36,159 --> 00:20:40,960
okay now we get the piva file

419
00:20:44,400 --> 00:20:48,960
ready devices

420
00:20:48,960 --> 00:20:52,400
right now i am going to install

421
00:20:52,400 --> 00:20:57,840
this file let me change the name of this

422
00:21:00,840 --> 00:21:02,480
file

423
00:21:02,480 --> 00:21:05,600
now it looks fine

424
00:21:05,840 --> 00:21:11,840
all right now i'm going to install it

425
00:21:12,799 --> 00:21:16,080
and we can install it in an emulator

426
00:21:16,080 --> 00:21:18,879
okay let me

427
00:21:22,400 --> 00:21:25,440
we don't need to install the file

428
00:21:25,440 --> 00:21:30,080
in this emulator android one

429
00:21:30,080 --> 00:21:32,158
will

430
00:21:40,559 --> 00:21:43,039
so you can see that emulator has gone

431
00:21:43,039 --> 00:21:45,440
disappear

432
00:21:45,440 --> 00:21:48,000
it is

433
00:21:49,280 --> 00:21:52,400
here so this is the command that will

434
00:21:52,400 --> 00:21:53,039
install

435
00:21:53,039 --> 00:21:56,880
the piva application inside this

436
00:21:56,880 --> 00:21:59,840
genymotion emulator

437
00:22:01,039 --> 00:22:03,679
now we can see install has been

438
00:22:03,679 --> 00:22:06,320
successful

439
00:22:06,799 --> 00:22:11,679
okay let's go to the device and check

440
00:22:11,679 --> 00:22:15,679
here we can see and we can open this

441
00:22:15,679 --> 00:22:16,960
application

442
00:22:16,960 --> 00:22:20,720
this is the main screen

443
00:22:20,720 --> 00:22:23,919
main activity of this pw application

444
00:22:23,919 --> 00:22:27,120
so why i use piva for the demonstration

445
00:22:27,120 --> 00:22:28,880
purpose because it's contained so many

446
00:22:28,880 --> 00:22:29,760
vulnerability

447
00:22:29,760 --> 00:22:32,480
now you can see here there are so many

448
00:22:32,480 --> 00:22:33,440
vulnerability

449
00:22:33,440 --> 00:22:37,360
login encryption so it will give you an

450
00:22:37,360 --> 00:22:38,480
idea actually

451
00:22:38,480 --> 00:22:40,080
that what kind of vulnerability you can

452
00:22:40,080 --> 00:22:42,640
find inside a application of

453
00:22:42,640 --> 00:22:44,640
you are the beginner then you don't need

454
00:22:44,640 --> 00:22:46,400
to go into the reverse engineering you

455
00:22:46,400 --> 00:22:47,440
don't need to go

456
00:22:47,440 --> 00:22:50,400
to start frida as a beginner so as a

457
00:22:50,400 --> 00:22:51,039
beginner

458
00:22:51,039 --> 00:22:54,559
it will help you to understand the how

459
00:22:54,559 --> 00:22:57,039
how what kind of vulnerability can be

460
00:22:57,039 --> 00:22:58,640
found inside the

461
00:22:58,640 --> 00:23:03,039
mobile app assessment right

462
00:23:03,039 --> 00:23:09,840
dynamic code of loads here you can see

463
00:23:11,360 --> 00:23:15,120
services adv shall am start you know

464
00:23:15,120 --> 00:23:17,360
am is activity manager so adb cell give

465
00:23:17,360 --> 00:23:19,280
a command to activity manager to start

466
00:23:19,280 --> 00:23:21,440
the particular services like this they

467
00:23:21,440 --> 00:23:23,280
have written here

468
00:23:23,280 --> 00:23:26,960
right so these are the vulnerabilities

469
00:23:26,960 --> 00:23:27,440
that

470
00:23:27,440 --> 00:23:30,720
we can easily

471
00:23:31,679 --> 00:23:35,679
learn and we can easily try to find out

472
00:23:35,679 --> 00:23:39,200
inside any assessment

473
00:23:40,080 --> 00:23:42,720
and if we see the about the project we

474
00:23:42,720 --> 00:23:44,159
see

475
00:23:44,159 --> 00:23:47,200
as we see this in pivo website

476
00:23:47,200 --> 00:23:50,559
so these are the

477
00:23:50,559 --> 00:23:53,520
detail of the vulnerability that cover

478
00:23:53,520 --> 00:23:54,720
in this application

479
00:23:54,720 --> 00:23:56,880
we will not cover all the vulnerability

480
00:23:56,880 --> 00:23:59,200
we will cover a very few vulnerability

481
00:23:59,200 --> 00:24:01,679
but it will helpful for your learning

482
00:24:01,679 --> 00:24:03,200
purpose

483
00:24:03,200 --> 00:24:05,760
so this is why i choose i always choose

484
00:24:05,760 --> 00:24:08,159
this application

485
00:24:08,159 --> 00:24:11,600
for demonstration so

486
00:24:11,600 --> 00:24:13,760
almost we are all set with our pen

487
00:24:13,760 --> 00:24:15,360
testing lab

488
00:24:15,360 --> 00:24:18,880
one thing i also want to

489
00:24:18,880 --> 00:24:22,320
highlight there is a

490
00:24:23,679 --> 00:24:26,799
there is a vm mobile accent

491
00:24:26,799 --> 00:24:30,240
so this vm is very good it is very good

492
00:24:30,240 --> 00:24:30,640
for

493
00:24:30,640 --> 00:24:34,000
both android and ios so basically

494
00:24:34,000 --> 00:24:36,400
if you do not want to set up or install

495
00:24:36,400 --> 00:24:37,200
the adb

496
00:24:37,200 --> 00:24:40,159
your android platform tool gennymotion

497
00:24:40,159 --> 00:24:41,120
and all these

498
00:24:41,120 --> 00:24:43,360
stuff you do don't want to install it so

499
00:24:43,360 --> 00:24:45,279
you can what you can do you can

500
00:24:45,279 --> 00:24:48,480
you can download this mobile excel vm

501
00:24:48,480 --> 00:24:51,120
and then you can start your pen testing

502
00:24:51,120 --> 00:24:52,799
process

503
00:24:52,799 --> 00:24:54,320
you can create your lab and you can

504
00:24:54,320 --> 00:24:56,240
start all your pen testing

505
00:24:56,240 --> 00:24:58,720
so but in that also you need to install

506
00:24:58,720 --> 00:25:00,480
jenny genymotion in a different

507
00:25:00,480 --> 00:25:03,520
environment because it is not come with

508
00:25:03,520 --> 00:25:04,400
jenny motion

509
00:25:04,400 --> 00:25:06,880
it comes with the ns studio so you can

510
00:25:06,880 --> 00:25:07,520
use that

511
00:25:07,520 --> 00:25:09,600
emulator if you want to use the android

512
00:25:09,600 --> 00:25:10,559
studio emulator

513
00:25:10,559 --> 00:25:13,039
you can that use that so this is the

514
00:25:13,039 --> 00:25:14,080
mobile access you can

515
00:25:14,080 --> 00:25:29,600
find it on its website

516
00:25:29,600 --> 00:25:32,639
you can find it here

517
00:25:33,200 --> 00:25:35,679
computer

518
00:25:40,840 --> 00:25:43,840
image

519
00:25:55,520 --> 00:25:58,480
this is the website

520
00:26:00,640 --> 00:26:02,320
it will give you all the detail about

521
00:26:02,320 --> 00:26:05,760
the mobile access

522
00:26:05,760 --> 00:26:08,840
and it's very good actually it's very

523
00:26:08,840 --> 00:26:11,840
good

524
00:26:14,159 --> 00:26:15,840
download this is download form this is

525
00:26:15,840 --> 00:26:17,200
download feature

526
00:26:17,200 --> 00:26:20,799
and this is the home page of the website

527
00:26:20,799 --> 00:26:24,880
android john ios zone so i will show you

528
00:26:24,880 --> 00:26:28,000
this is when you log in download and

529
00:26:28,000 --> 00:26:30,640
install in virtualbox and you log in so

530
00:26:30,640 --> 00:26:31,440
you will get

531
00:26:31,440 --> 00:26:35,200
these stuff sag zone io zone

532
00:26:35,200 --> 00:26:38,080
android zone so you will get almost all

533
00:26:38,080 --> 00:26:39,279
this file like

534
00:26:39,279 --> 00:26:41,760
jd gui it's very good too sometimes it's

535
00:26:41,760 --> 00:26:42,880
great problem

536
00:26:42,880 --> 00:26:46,799
while working on mac

537
00:26:46,799 --> 00:26:49,600
so you can work on this fashion fluid is

538
00:26:49,600 --> 00:26:52,000
very good framework

539
00:26:52,000 --> 00:26:56,080
for ios and you can start more fs

540
00:26:56,080 --> 00:26:58,799
is very good tool for aesthetic

541
00:26:58,799 --> 00:27:01,520
fantastic it will give you the overview

542
00:27:01,520 --> 00:27:03,039
about the application how many

543
00:27:03,039 --> 00:27:04,559
activities are there how many content

544
00:27:04,559 --> 00:27:06,480
providers how many broadcasters even are

545
00:27:06,480 --> 00:27:07,200
there

546
00:27:07,200 --> 00:27:10,320
so more sf we will see it more of a

547
00:27:10,320 --> 00:27:12,240
browser you can find this is a very good

548
00:27:12,240 --> 00:27:15,840
framework browser

549
00:27:15,840 --> 00:27:21,200
and you will get a lot of tool in this

550
00:27:21,200 --> 00:27:24,880
vm you will get

551
00:27:24,880 --> 00:27:27,919
verb suit as well

552
00:27:28,240 --> 00:27:32,640
so many it's good to use it

553
00:27:32,640 --> 00:27:35,600
recently use suppose i want to use more

554
00:27:35,600 --> 00:27:38,000
sf

555
00:27:38,240 --> 00:27:41,520
one two three four five is password so

556
00:27:41,520 --> 00:27:44,960
it will start mob sf

557
00:27:44,960 --> 00:27:49,840
and i can

558
00:27:50,080 --> 00:27:52,640
it will start the mob stuff it's a very

559
00:27:52,640 --> 00:27:53,440
good tool

560
00:27:53,440 --> 00:27:55,120
i i will show you i will so i just

561
00:27:55,120 --> 00:27:56,799
started

562
00:27:56,799 --> 00:27:59,360
for the demonstration i will not do any

563
00:27:59,360 --> 00:28:00,080
assessment

564
00:28:00,080 --> 00:28:02,480
right now i will do later end of the

565
00:28:02,480 --> 00:28:04,080
workshop

566
00:28:04,080 --> 00:28:07,679
it is starting let's just start right

567
00:28:07,679 --> 00:28:12,080
so now what uh we we almost set up the

568
00:28:12,080 --> 00:28:15,200
our involvement pen testing involvement

569
00:28:15,200 --> 00:28:18,480
and we almost to install the application

570
00:28:18,480 --> 00:28:22,240
right now we have the apk suppose we are

571
00:28:22,240 --> 00:28:22,799
working

572
00:28:22,799 --> 00:28:26,240
in any company and industry we receive

573
00:28:26,240 --> 00:28:27,120
the apk

574
00:28:27,120 --> 00:28:29,840
and our setup is already ready so what

575
00:28:29,840 --> 00:28:30,559
will be next

576
00:28:30,559 --> 00:28:34,480
next step so next step will be

577
00:28:34,480 --> 00:28:37,200
the approach

578
00:28:38,640 --> 00:28:42,240
this is done this is the next

579
00:28:42,240 --> 00:28:45,520
step so we know there are

580
00:28:45,520 --> 00:28:48,559
two testing approach

581
00:28:48,559 --> 00:28:51,679
one is a static pen testing and other is

582
00:28:51,679 --> 00:28:55,200
dynamic so what is the static main

583
00:28:55,200 --> 00:28:56,399
testing is

584
00:28:56,399 --> 00:28:59,919
static pen testing is when we do

585
00:28:59,919 --> 00:29:02,640
pen testing when code is not running

586
00:29:02,640 --> 00:29:03,120
code

587
00:29:03,120 --> 00:29:06,720
we have only code we have on only apk

588
00:29:06,720 --> 00:29:08,880
and we are not going to install it and

589
00:29:08,880 --> 00:29:10,640
we are not running the apk inside the

590
00:29:10,640 --> 00:29:12,240
mobile device and

591
00:29:12,240 --> 00:29:14,159
we are doing the pen testing or we are

592
00:29:14,159 --> 00:29:16,000
doing the source code analysis

593
00:29:16,000 --> 00:29:19,039
on just the apk file that's come inside

594
00:29:19,039 --> 00:29:20,720
the static pen testing

595
00:29:20,720 --> 00:29:23,120
and dynamic is something when we install

596
00:29:23,120 --> 00:29:24,559
the application we run

597
00:29:24,559 --> 00:29:27,200
we start intercepting the traffic ins

598
00:29:27,200 --> 00:29:28,960
into a burp suit we start hooking the

599
00:29:28,960 --> 00:29:29,919
application

600
00:29:29,919 --> 00:29:33,200
by using feeder tool so and we try to

601
00:29:33,200 --> 00:29:34,240
bypass some

602
00:29:34,240 --> 00:29:37,039
restriction like assaulting or like root

603
00:29:37,039 --> 00:29:38,000
detection

604
00:29:38,000 --> 00:29:39,919
so all these activity come into the

605
00:29:39,919 --> 00:29:41,840
dynamic pen testing

606
00:29:41,840 --> 00:29:45,279
right so now let's start with

607
00:29:45,279 --> 00:29:48,320
static pen testing

608
00:29:52,720 --> 00:29:56,720
let's start with a study pen test so

609
00:29:56,720 --> 00:30:00,159
first of all i will start with

610
00:30:00,159 --> 00:30:04,159
this tool mob sf it already started here

611
00:30:04,159 --> 00:30:05,039
you can click

612
00:30:05,039 --> 00:30:09,600
on it it will here

613
00:30:17,760 --> 00:30:23,840
and you can see it's already there

614
00:30:31,279 --> 00:30:34,720
so when we when we open the mob sf

615
00:30:34,720 --> 00:30:36,720
it's a very good it's a very good tool

616
00:30:36,720 --> 00:30:37,760
for

617
00:30:37,760 --> 00:30:39,679
basically static dynamic we can do

618
00:30:39,679 --> 00:30:41,600
dynamic as well but dynamic will not

619
00:30:41,600 --> 00:30:42,159
give you

620
00:30:42,159 --> 00:30:46,240
the proper uh very quality

621
00:30:46,240 --> 00:30:49,360
result so what we need to do just we

622
00:30:49,360 --> 00:30:50,640
need to just

623
00:30:50,640 --> 00:30:54,159
drag and drop the application so this is

624
00:30:54,159 --> 00:30:55,200
the piva

625
00:30:55,200 --> 00:30:58,240
we will i will upload it

626
00:30:58,240 --> 00:31:01,200
and we will get the result in a very few

627
00:31:01,200 --> 00:31:02,880
minute

628
00:31:02,880 --> 00:31:05,039
right when we get the result it is not

629
00:31:05,039 --> 00:31:07,360
uh it is not perfect

630
00:31:07,360 --> 00:31:10,399
so what we will get the idea we will get

631
00:31:10,399 --> 00:31:11,519
the idea

632
00:31:11,519 --> 00:31:15,360
how how many we will get a overview

633
00:31:15,360 --> 00:31:17,840
right we will get over the of the

634
00:31:17,840 --> 00:31:19,519
application

635
00:31:19,519 --> 00:31:22,000
so let's see it is analyzing the

636
00:31:22,000 --> 00:31:23,200
application

637
00:31:23,200 --> 00:31:26,240
and it will give us an idea about the

638
00:31:26,240 --> 00:31:28,399
application

639
00:31:28,399 --> 00:31:31,760
because the more we will dig

640
00:31:31,760 --> 00:31:35,039
the application the more we will

641
00:31:35,039 --> 00:31:37,760
try to find out the loopholes it is kind

642
00:31:37,760 --> 00:31:38,399
of recon

643
00:31:38,399 --> 00:31:40,480
so for the recon purpose you can use

644
00:31:40,480 --> 00:31:41,519
this tool

645
00:31:41,519 --> 00:31:44,799
and now we get a very good screen

646
00:31:44,799 --> 00:31:48,320
a very formatted output

647
00:31:48,320 --> 00:31:51,440
we can see that it

648
00:31:51,440 --> 00:31:54,559
gives the output as well that what can

649
00:31:54,559 --> 00:31:56,720
be the vulnerability

650
00:31:56,720 --> 00:32:00,159
but till the end you can see this

651
00:32:00,159 --> 00:32:04,399
application till the end

652
00:32:04,399 --> 00:32:07,600
you can all also download a report for

653
00:32:07,600 --> 00:32:11,440
from this small fs but see if you click

654
00:32:11,440 --> 00:32:12,159
on report

655
00:32:12,159 --> 00:32:15,840
it will come like this

656
00:32:17,360 --> 00:32:18,880
uh it will also mention the

657
00:32:18,880 --> 00:32:20,559
vulnerability either

658
00:32:20,559 --> 00:32:22,799
these are not vulnerability but it's

659
00:32:22,799 --> 00:32:26,799
fine i mean for the purpose of

660
00:32:26,840 --> 00:32:29,840
understanding

661
00:32:30,559 --> 00:32:33,600
so we will go one by one

662
00:32:33,600 --> 00:32:36,720
so now we

663
00:32:36,720 --> 00:32:39,200
almost

664
00:32:40,320 --> 00:32:43,840
get the result of the mob sf now see

665
00:32:43,840 --> 00:32:47,039
so this is the application name and

666
00:32:47,039 --> 00:32:50,960
this is the package name com.html

667
00:32:50,960 --> 00:32:52,720
this is dot viva this is the package

668
00:32:52,720 --> 00:32:54,640
name this is the main activity name

669
00:32:54,640 --> 00:32:58,399
we can see here sdk target sdk26

670
00:32:58,399 --> 00:33:01,600
we can see here android version is 1.0

671
00:33:01,600 --> 00:33:04,240
right security score we can see here 10

672
00:33:04,240 --> 00:33:05,440
out of 100

673
00:33:05,440 --> 00:33:06,960
because it's a vernal application of

674
00:33:06,960 --> 00:33:09,679
course now

675
00:33:09,679 --> 00:33:13,039
as i told you that we will receive

676
00:33:13,039 --> 00:33:15,919
a overview result so we can see here

677
00:33:15,919 --> 00:33:17,440
there are 10 activity in this

678
00:33:17,440 --> 00:33:18,720
application

679
00:33:18,720 --> 00:33:20,080
there are 10 activity in this

680
00:33:20,080 --> 00:33:22,000
application so we get to know now

681
00:33:22,000 --> 00:33:23,760
that there are 10 activities so we can

682
00:33:23,760 --> 00:33:25,360
go to the activity

683
00:33:25,360 --> 00:33:27,360
and we can see okay these are the

684
00:33:27,360 --> 00:33:29,519
activity here main activity encrypted

685
00:33:29,519 --> 00:33:31,919
activity webview activity database cloud

686
00:33:31,919 --> 00:33:32,960
load activity

687
00:33:32,960 --> 00:33:36,399
so these are the activity we can

688
00:33:36,399 --> 00:33:39,919
we can try to get into further right but

689
00:33:39,919 --> 00:33:40,399
for

690
00:33:40,399 --> 00:33:42,000
right now we know okay there are 10

691
00:33:42,000 --> 00:33:45,840
activities now again we will go to

692
00:33:45,840 --> 00:33:48,799
now we see there is there is one

693
00:33:48,799 --> 00:33:49,519
services

694
00:33:49,519 --> 00:33:52,000
okay and that service is exported that

695
00:33:52,000 --> 00:33:53,200
means it is

696
00:33:53,200 --> 00:33:55,360
it can be used by other app if it is

697
00:33:55,360 --> 00:33:58,000
exported

698
00:33:58,640 --> 00:34:01,360
so we will go to services so this is the

699
00:34:01,360 --> 00:34:02,640
services

700
00:34:02,640 --> 00:34:04,840
handlers vulnerable service this is the

701
00:34:04,840 --> 00:34:07,120
services this is receiver this is

702
00:34:07,120 --> 00:34:09,040
content provider we can see here this is

703
00:34:09,040 --> 00:34:11,918
the content provider

704
00:34:12,079 --> 00:34:15,520
right content provider receiver

705
00:34:15,520 --> 00:34:18,399
broadcast receiver

706
00:34:18,480 --> 00:34:22,000
now here we can see if we can set we

707
00:34:22,000 --> 00:34:23,440
need to set up a dynamic plan

708
00:34:23,440 --> 00:34:27,280
in if we want to start dynamic analysis

709
00:34:27,280 --> 00:34:29,440
we have to set up the dynamic

710
00:34:29,440 --> 00:34:31,760
so in that case we need an emulator for

711
00:34:31,760 --> 00:34:34,879
this particular mode sf

712
00:34:34,879 --> 00:34:36,639
now we can download java code we can

713
00:34:36,639 --> 00:34:38,639
download this mali code we can download

714
00:34:38,639 --> 00:34:40,399
apk apks will already have

715
00:34:40,399 --> 00:34:43,040
so now we can view android manifest file

716
00:34:43,040 --> 00:34:44,000
here

717
00:34:44,000 --> 00:34:48,159
we can click on that and we can so

718
00:34:48,159 --> 00:34:51,280
what is android manifest file

719
00:34:51,280 --> 00:34:53,839
android manifest file is is a central

720
00:34:53,839 --> 00:34:55,040
file that

721
00:34:55,040 --> 00:34:57,760
contain each and every information about

722
00:34:57,760 --> 00:34:59,280
the app

723
00:34:59,280 --> 00:35:02,240
suppose what is the permission what

724
00:35:02,240 --> 00:35:03,359
permission need

725
00:35:03,359 --> 00:35:05,359
when we install the application inside

726
00:35:05,359 --> 00:35:08,960
our mobile device that contain

727
00:35:09,040 --> 00:35:11,440
that all are written in android men's

728
00:35:11,440 --> 00:35:12,400
first file suppose

729
00:35:12,400 --> 00:35:16,480
nfc write external write permission

730
00:35:16,480 --> 00:35:19,119
read external lead permission so these

731
00:35:19,119 --> 00:35:20,079
are the

732
00:35:20,079 --> 00:35:23,280
permission that required in this

733
00:35:23,280 --> 00:35:26,400
application when we install it so you

734
00:35:26,400 --> 00:35:28,160
can check it if suppose it is not a

735
00:35:28,160 --> 00:35:30,160
banking application there is no need for

736
00:35:30,160 --> 00:35:34,640
nfc permission right nearby protocol

737
00:35:34,640 --> 00:35:39,200
if near frequency protocol if this is

738
00:35:39,760 --> 00:35:42,880
this if it is required or not

739
00:35:42,880 --> 00:35:46,160
the profile read contacts so um based on

740
00:35:46,160 --> 00:35:47,040
the

741
00:35:47,040 --> 00:35:49,680
property of application we can decide

742
00:35:49,680 --> 00:35:50,160
how

743
00:35:50,160 --> 00:35:53,119
how much permission is required and now

744
00:35:53,119 --> 00:35:55,040
we can see

745
00:35:55,040 --> 00:35:59,839
activity this is the intent filter here

746
00:36:00,320 --> 00:36:02,400
right as we know that there is a main

747
00:36:02,400 --> 00:36:03,920
activity that is exported

748
00:36:03,920 --> 00:36:07,839
right so if a activity is exported that

749
00:36:07,839 --> 00:36:08,720
means they have

750
00:36:08,720 --> 00:36:12,160
defined the intent filter also and these

751
00:36:12,160 --> 00:36:12,720
are

752
00:36:12,720 --> 00:36:16,240
the more activities here

753
00:36:16,240 --> 00:36:18,880
exported is true as well so you will

754
00:36:18,880 --> 00:36:19,280
find

755
00:36:19,280 --> 00:36:27,200
intent yes

756
00:36:27,200 --> 00:36:30,480
right so okay this is done

757
00:36:30,480 --> 00:36:32,960
this is that's it this is the small

758
00:36:32,960 --> 00:36:34,400
android menses file

759
00:36:34,400 --> 00:36:37,839
but it is very important to go

760
00:36:37,839 --> 00:36:40,800
and learn about the android menses file

761
00:36:40,800 --> 00:36:42,160
as it will give

762
00:36:42,160 --> 00:36:45,279
us too much knowledge

763
00:36:45,359 --> 00:36:49,119
about the application right now let's

764
00:36:49,119 --> 00:36:51,839
try to decompile the application by

765
00:36:51,839 --> 00:36:54,400
using other tools

766
00:36:54,400 --> 00:36:56,640
right

767
00:36:57,440 --> 00:37:01,520
there is a tool called d2j

768
00:37:01,520 --> 00:37:04,240
text to jar

769
00:37:05,839 --> 00:37:09,839
and this is

770
00:37:10,079 --> 00:37:14,400
a java decompiler d2j

771
00:37:14,400 --> 00:37:17,200
text to jar it will decompile the

772
00:37:17,200 --> 00:37:19,200
application

773
00:37:19,200 --> 00:37:21,920
into a jar format the file is already

774
00:37:21,920 --> 00:37:23,280
there

775
00:37:23,280 --> 00:37:27,520
so let me remove the first one

776
00:37:32,720 --> 00:37:34,960
now it is decompiling and we are getting

777
00:37:34,960 --> 00:37:37,839
the jar file

778
00:37:41,280 --> 00:37:43,680
and okay i will open it into the java

779
00:37:43,680 --> 00:37:46,400
decompiler

780
00:37:46,400 --> 00:37:51,760
jd gui this is the javade compiler

781
00:37:51,760 --> 00:37:54,079
and

782
00:37:55,280 --> 00:38:00,160
now i can see

783
00:38:00,480 --> 00:38:04,480
the source code of the application

784
00:38:04,480 --> 00:38:07,200
now here you can see you can open about

785
00:38:07,200 --> 00:38:08,880
activity you can open broadcast

786
00:38:08,880 --> 00:38:10,800
activity.class file

787
00:38:10,800 --> 00:38:13,359
build config.class file it is g work or

788
00:38:13,359 --> 00:38:14,720
not

789
00:38:14,720 --> 00:38:18,560
yes it is debug

790
00:38:18,560 --> 00:38:21,280
configuration file you can see you can

791
00:38:21,280 --> 00:38:23,040
my vulnerable

792
00:38:23,040 --> 00:38:24,720
you can very complicate password you can

793
00:38:24,720 --> 00:38:27,839
see the password here

794
00:38:28,079 --> 00:38:32,000
sorry webview link you can see here

795
00:38:32,000 --> 00:38:35,599
using them is test you can see here

796
00:38:35,599 --> 00:38:38,400
so uh you will find you will find out

797
00:38:38,400 --> 00:38:40,079
the hard coded

798
00:38:40,079 --> 00:38:42,160
sensitive data if something is hard

799
00:38:42,160 --> 00:38:43,280
coded inside the

800
00:38:43,280 --> 00:38:46,000
mobile device and you will surprise that

801
00:38:46,000 --> 00:38:46,640
still

802
00:38:46,640 --> 00:38:48,880
still we find this vulnerability in the

803
00:38:48,880 --> 00:38:50,400
modern application still

804
00:38:50,400 --> 00:38:53,280
we found some sometimes the the key the

805
00:38:53,280 --> 00:38:55,119
token the api keys

806
00:38:55,119 --> 00:38:57,920
or sometime the username itself inside

807
00:38:57,920 --> 00:38:58,640
the

808
00:38:58,640 --> 00:39:00,800
inside the hard coded inside the

809
00:39:00,800 --> 00:39:02,240
application

810
00:39:02,240 --> 00:39:04,800
so this is how you can decompile the

811
00:39:04,800 --> 00:39:07,359
application by using the

812
00:39:07,359 --> 00:39:11,280
j j two desktop

813
00:39:11,280 --> 00:39:14,560
and jdg ui

814
00:39:14,560 --> 00:39:17,200
right and suppose we are not able to

815
00:39:17,200 --> 00:39:19,599
identify anything we go to search

816
00:39:19,599 --> 00:39:23,280
we start searching the will click on we

817
00:39:23,280 --> 00:39:25,680
want to search in everywhere java module

818
00:39:25,680 --> 00:39:28,800
method constructor everywhere

819
00:39:28,800 --> 00:39:32,240
username so it will come like this

820
00:39:32,240 --> 00:39:36,480
okay and we see username got highlighted

821
00:39:36,480 --> 00:39:39,599
right and we got the username test

822
00:39:39,599 --> 00:39:42,160
suppose you want to search password you

823
00:39:42,160 --> 00:39:43,200
can search here

824
00:39:43,200 --> 00:39:45,760
password it will highlight all these

825
00:39:45,760 --> 00:39:48,240
password

826
00:39:51,520 --> 00:39:55,119
here password password so you will find

827
00:39:55,119 --> 00:39:56,640
the password

828
00:39:56,640 --> 00:40:01,759
if you want to search the token

829
00:40:02,640 --> 00:40:05,680
you can see here

830
00:40:05,680 --> 00:40:09,359
it will highlight token is not a valid

831
00:40:09,359 --> 00:40:12,560
session token object

832
00:40:14,720 --> 00:40:18,240
right if you want to search

833
00:40:18,240 --> 00:40:24,160
the key so it will be appear here so

834
00:40:24,160 --> 00:40:27,440
this is how you can search

835
00:40:34,000 --> 00:40:39,839
search is very good actually

836
00:40:44,720 --> 00:40:49,680
yeah so this is how you search

837
00:40:50,839 --> 00:40:53,839
api

838
00:40:53,839 --> 00:40:59,440
api and so on and so on so many thing

839
00:40:59,440 --> 00:41:02,880
right so we can find easily if something

840
00:41:02,880 --> 00:41:04,480
is hard coded if something

841
00:41:04,480 --> 00:41:06,800
some sensitive information is hardcoded

842
00:41:06,800 --> 00:41:08,560
we can easily find if we want to find

843
00:41:08,560 --> 00:41:09,040
some

844
00:41:09,040 --> 00:41:12,240
username admin

845
00:41:12,240 --> 00:41:15,040
administrator

846
00:41:16,160 --> 00:41:20,960
right local

847
00:41:20,960 --> 00:41:24,400
test test we can find guess

848
00:41:24,400 --> 00:41:27,280
yes we can find

849
00:41:28,240 --> 00:41:35,839
so this is that's it about it

850
00:41:36,160 --> 00:41:39,359
so uh so still what we are doing is

851
00:41:39,359 --> 00:41:42,400
is still a static pen testing we we did

852
00:41:42,400 --> 00:41:43,200
not

853
00:41:43,200 --> 00:41:45,119
start our application and start doing a

854
00:41:45,119 --> 00:41:46,880
dynamic pen testing this is the static

855
00:41:46,880 --> 00:41:48,560
pen testing

856
00:41:48,560 --> 00:41:55,040
right now i want to go into further

857
00:42:01,440 --> 00:42:04,560
and now let's do reverse sensoring let's

858
00:42:04,560 --> 00:42:05,839
try to

859
00:42:05,839 --> 00:42:08,319
reverse engineering the application and

860
00:42:08,319 --> 00:42:09,119
then

861
00:42:09,119 --> 00:42:12,079
try to see what we can do or we can

862
00:42:12,079 --> 00:42:14,400
tamper the application or not we can

863
00:42:14,400 --> 00:42:16,560
we can sign the application again with

864
00:42:16,560 --> 00:42:18,640
by using javascience or not

865
00:42:18,640 --> 00:42:20,640
right so basically there are two things

866
00:42:20,640 --> 00:42:22,079
one is tampering and

867
00:42:22,079 --> 00:42:24,079
one is reverse engineering tampering is

868
00:42:24,079 --> 00:42:26,000
a process where we do reverse

869
00:42:26,000 --> 00:42:28,079
engineering the code

870
00:42:28,079 --> 00:42:31,520
so what we have apk file we try to

871
00:42:31,520 --> 00:42:33,680
decompile it and get the source code and

872
00:42:33,680 --> 00:42:35,920
then we try to modify it

873
00:42:35,920 --> 00:42:38,480
with the we try to modify it we try to

874
00:42:38,480 --> 00:42:39,920
inject our code

875
00:42:39,920 --> 00:42:42,240
we basically it's called tampered we

876
00:42:42,240 --> 00:42:44,640
tempered the apk and then we rebuild

877
00:42:44,640 --> 00:42:47,520
the design and then we installed that

878
00:42:47,520 --> 00:42:48,960
tampered application

879
00:42:48,960 --> 00:42:51,119
but in this simple neighbor sensing we

880
00:42:51,119 --> 00:42:52,880
reverse engineering we decompile and

881
00:42:52,880 --> 00:42:55,200
they recompile and resign it

882
00:42:55,200 --> 00:42:58,160
so if we want to recompile and we want

883
00:42:58,160 --> 00:42:58,560
to

884
00:42:58,560 --> 00:43:02,000
tamper also so we have to we have to

885
00:43:02,000 --> 00:43:03,119
inject our code

886
00:43:03,119 --> 00:43:05,280
in somewhere so that we can easily

887
00:43:05,280 --> 00:43:06,880
compile design and

888
00:43:06,880 --> 00:43:09,359
th that application can be useful for

889
00:43:09,359 --> 00:43:10,960
the malicious purpose or it can

890
00:43:10,960 --> 00:43:15,599
affect any victim right

891
00:43:15,680 --> 00:43:17,599
so there are many tools for

892
00:43:17,599 --> 00:43:19,040
decompilation

893
00:43:19,040 --> 00:43:22,160
as we as i show you java d compiler and

894
00:43:22,160 --> 00:43:22,560
this

895
00:43:22,560 --> 00:43:25,760
apk tool it is very good so while using

896
00:43:25,760 --> 00:43:28,400
apk tool we can decompile or even we can

897
00:43:28,400 --> 00:43:30,160
build

898
00:43:30,160 --> 00:43:34,960
the application so let's do

899
00:43:34,960 --> 00:43:37,680
let's decompile the application by using

900
00:43:37,680 --> 00:43:40,240
the apk2

901
00:43:40,240 --> 00:43:44,560
so we have already this pivot.apk file

902
00:43:44,560 --> 00:43:48,079
apk2 this is the command for

903
00:43:48,079 --> 00:43:52,160
use decompile you can see the apk tool

904
00:43:52,160 --> 00:43:56,240
these are the commands in apk tool

905
00:43:56,240 --> 00:43:58,959
so let's

906
00:44:02,319 --> 00:44:06,640
now we are we now our application is

907
00:44:06,839 --> 00:44:09,119
decompiling

908
00:44:09,119 --> 00:44:14,640
and as we can see we got a new folder

909
00:44:14,640 --> 00:44:17,760
right and we can see the resources

910
00:44:17,760 --> 00:44:21,839
as we seen in this android studio

911
00:44:21,839 --> 00:44:22,960
project right

912
00:44:22,960 --> 00:44:25,359
so not all the resources we will find

913
00:44:25,359 --> 00:44:26,400
here but

914
00:44:26,400 --> 00:44:28,560
similar to that resources like this

915
00:44:28,560 --> 00:44:31,040
shows

916
00:44:31,440 --> 00:44:34,720
value string we can find a string here

917
00:44:34,720 --> 00:44:36,560
sometime there are so many important

918
00:44:36,560 --> 00:44:37,839
information

919
00:44:37,839 --> 00:44:41,279
stored inside this string

920
00:44:48,839 --> 00:44:51,119
right

921
00:44:51,119 --> 00:44:54,720
and here we get the

922
00:44:54,720 --> 00:44:57,359
android manifest file as we have seen in

923
00:44:57,359 --> 00:44:57,839
mob

924
00:44:57,839 --> 00:45:00,240
sf so suppose we want to tamper

925
00:45:00,240 --> 00:45:01,119
something right

926
00:45:01,119 --> 00:45:05,839
okay let's temper the manifest files

927
00:45:05,839 --> 00:45:09,599
we can what we can do we can

928
00:45:10,000 --> 00:45:12,800
camera phone recorder we can remove this

929
00:45:12,800 --> 00:45:14,079
permission

930
00:45:14,079 --> 00:45:18,480
or we can make the backup false

931
00:45:18,480 --> 00:45:20,800
okay

932
00:45:24,160 --> 00:45:28,000
we have tempered the application now

933
00:45:28,000 --> 00:45:33,839
now go back and again recompile it

934
00:45:34,079 --> 00:45:36,400
sorry

935
00:45:37,920 --> 00:45:41,520
we have to give the same folder name

936
00:45:41,520 --> 00:45:44,800
now it is checking whether

937
00:45:44,800 --> 00:45:47,839
source has changed

938
00:45:48,640 --> 00:45:51,200
i don't know if they have any filter

939
00:45:51,200 --> 00:45:52,160
they can

940
00:45:52,160 --> 00:45:55,359
verify it is the application is dampered

941
00:45:55,359 --> 00:45:56,319
or not

942
00:45:56,319 --> 00:45:58,400
but you will get a new folder called

943
00:45:58,400 --> 00:46:01,359
destination and you will get a new

944
00:46:01,359 --> 00:46:04,319
tampered application right so this is

945
00:46:04,319 --> 00:46:05,520
the tampered application

946
00:46:05,520 --> 00:46:08,880
right now we cannot install it

947
00:46:08,880 --> 00:46:10,480
until we have to sign it by using

948
00:46:10,480 --> 00:46:12,000
javascience we have

949
00:46:12,000 --> 00:46:15,280
we have designer already so

950
00:46:15,280 --> 00:46:19,440
i will go into my sign up

951
00:46:24,800 --> 00:46:30,079
this is done this is also done

952
00:46:30,800 --> 00:46:34,000
ah this is right

953
00:46:34,160 --> 00:46:36,560
the complete sign now i'm going to

954
00:46:36,560 --> 00:46:43,839
resign it

955
00:47:05,040 --> 00:47:10,000
i was having a jar signup somewhere

956
00:47:10,000 --> 00:47:25,839
i don't know i forget i guess

957
00:47:49,200 --> 00:47:53,839
where is my jaw signal

958
00:47:56,720 --> 00:48:07,839
sorry guys

959
00:48:11,200 --> 00:48:21,440
okay here

960
00:48:21,440 --> 00:48:23,760
right

961
00:48:26,559 --> 00:48:30,800
right this is we have jason okay

962
00:48:32,640 --> 00:48:35,920
so i can use it

963
00:48:35,920 --> 00:48:39,040
i can copy this part

964
00:48:41,520 --> 00:48:45,599
java hyphen jar

965
00:48:46,839 --> 00:48:49,839
this

966
00:48:52,240 --> 00:48:56,160
and i can give the ap

967
00:48:58,880 --> 00:49:02,000
now we will we will receive

968
00:49:02,000 --> 00:49:05,599
a signed one right i will

969
00:49:05,599 --> 00:49:08,319
change its name

970
00:49:12,880 --> 00:49:16,640
that's right

971
00:49:16,640 --> 00:49:19,200
now we will try to install this the

972
00:49:19,200 --> 00:49:21,359
temple one

973
00:49:21,359 --> 00:49:24,480
so what i will do i will uninstall

974
00:49:24,480 --> 00:49:31,839
the previous apk this one

975
00:49:35,359 --> 00:49:39,119
i uninstall it and

976
00:49:39,119 --> 00:49:42,559
uninstall complete finish no application

977
00:49:42,559 --> 00:49:46,480
no now we will do

978
00:49:48,160 --> 00:49:59,839
solution ready

979
00:49:59,920 --> 00:50:03,200
we will install the tamper

980
00:50:03,200 --> 00:50:07,520
it is gear it has been installed

981
00:50:07,520 --> 00:50:10,640
now you can see here right

982
00:50:10,640 --> 00:50:14,640
we have seen the password right in this

983
00:50:16,480 --> 00:50:18,960
this one

984
00:50:20,480 --> 00:50:22,800
here test and very complicated password

985
00:50:22,800 --> 00:50:24,839
now let's try to login with that

986
00:50:24,839 --> 00:50:26,000
password

987
00:50:26,000 --> 00:50:28,480
test

988
00:50:30,880 --> 00:50:36,160
very complete now here

989
00:50:36,480 --> 00:50:38,839
we can see we logged in inside the

990
00:50:38,839 --> 00:50:41,040
application we can

991
00:50:41,040 --> 00:50:45,200
find out the different different links

992
00:50:45,760 --> 00:50:48,480
okay it is opening there browser these

993
00:50:48,480 --> 00:50:50,079
are the different different tactical

994
00:50:50,079 --> 00:50:51,760
actually

995
00:50:51,760 --> 00:50:55,920
here right so we have done with

996
00:50:55,920 --> 00:50:59,040
our this practical

997
00:50:59,040 --> 00:51:01,119
and we i guess we don't need this

998
00:51:01,119 --> 00:51:02,400
mobilizer now

999
00:51:02,400 --> 00:51:05,200
in the future

1000
00:51:06,839 --> 00:51:09,839
right

1001
00:51:11,839 --> 00:51:14,480
now we have seen the the securities

1002
00:51:14,480 --> 00:51:15,599
issue like hardcore

1003
00:51:15,599 --> 00:51:19,520
password already because guys i was

1004
00:51:19,520 --> 00:51:22,480
going into a very

1005
00:51:22,559 --> 00:51:25,680
in a flow so i didn't care about the ppt

1006
00:51:25,680 --> 00:51:27,839
if i am going step by step or i am

1007
00:51:27,839 --> 00:51:29,280
jumping

1008
00:51:29,280 --> 00:51:32,559
that's fine just the purpose of to

1009
00:51:32,559 --> 00:51:34,880
execute the practical is to demonstrate

1010
00:51:34,880 --> 00:51:37,359
the vulnerability

1011
00:51:37,359 --> 00:51:39,359
now this there is one more vulnerability

1012
00:51:39,359 --> 00:51:41,040
called insecure data storage and

1013
00:51:41,040 --> 00:51:44,240
this vulnerability is still fine

1014
00:51:44,240 --> 00:51:48,000
so what happened in this vulnerability

1015
00:51:48,000 --> 00:51:51,119
we found some sensitive information

1016
00:51:51,119 --> 00:51:52,000
inside the

1017
00:51:52,000 --> 00:51:55,119
mobile device itself okay let's try to

1018
00:51:55,119 --> 00:51:57,760
get this

1019
00:52:01,119 --> 00:52:03,520
vulnerability now in for this we have to

1020
00:52:03,520 --> 00:52:04,640
go to inside

1021
00:52:04,640 --> 00:52:07,520
shell radius shell we are now inside the

1022
00:52:07,520 --> 00:52:09,040
device we can check the

1023
00:52:09,040 --> 00:52:12,480
ip address you know this is our ip

1024
00:52:12,480 --> 00:52:14,079
address and now we have to go

1025
00:52:14,079 --> 00:52:19,839
to data data

1026
00:52:20,240 --> 00:52:23,280
now you see we can see

1027
00:52:23,280 --> 00:52:25,359
all the packages so these are the

1028
00:52:25,359 --> 00:52:28,160
folders as i described

1029
00:52:28,160 --> 00:52:31,599
by it is managed by linux kernel for

1030
00:52:31,599 --> 00:52:33,599
it is like for linux permission and

1031
00:52:33,599 --> 00:52:36,480
sandboxing so these are all

1032
00:52:36,480 --> 00:52:38,079
different different folders belong to

1033
00:52:38,079 --> 00:52:39,920
different different apps

1034
00:52:39,920 --> 00:52:43,520
so this is our folder here we will go

1035
00:52:43,520 --> 00:52:48,400
in this package

1036
00:52:49,440 --> 00:52:53,520
and we will see but right now

1037
00:52:53,520 --> 00:52:58,000
these are the folders inside this

1038
00:52:58,000 --> 00:53:02,000
file right like shared folder

1039
00:53:02,000 --> 00:53:04,640
we can check if there is anything in

1040
00:53:04,640 --> 00:53:06,400
this folder

1041
00:53:06,400 --> 00:53:10,079
no we can check if

1042
00:53:10,079 --> 00:53:15,839
this has something

1043
00:53:16,720 --> 00:53:20,079
nothing right and sometimes there is a

1044
00:53:20,079 --> 00:53:23,119
folder called files

1045
00:53:23,119 --> 00:53:24,880
it is not appearing right now because i

1046
00:53:24,880 --> 00:53:26,880
guess we didn't execute anything

1047
00:53:26,880 --> 00:53:31,680
that's why it is not coming right if

1048
00:53:31,680 --> 00:53:35,599
we execute then it might

1049
00:53:35,599 --> 00:53:38,079
appear

1050
00:53:41,359 --> 00:53:44,000
you can see

1051
00:53:44,640 --> 00:53:47,520
app texture

1052
00:53:50,960 --> 00:53:53,200
this is the directory we can try to get

1053
00:53:53,200 --> 00:53:57,839
into the directory

1054
00:54:00,480 --> 00:54:03,520
and there is nothing in this so okay

1055
00:54:03,520 --> 00:54:05,920
let's try to uninstall this tempered one

1056
00:54:05,920 --> 00:54:11,839
and check

1057
00:54:13,119 --> 00:54:15,280
let's try to install this damper one and

1058
00:54:15,280 --> 00:54:16,640
see

1059
00:54:16,640 --> 00:54:25,839
if it should not change anything

1060
00:54:37,040 --> 00:54:40,799
ah okay this is you know

1061
00:54:40,799 --> 00:54:43,280
okay i want now i tried to install this

1062
00:54:43,280 --> 00:54:44,799
apk this is

1063
00:54:44,799 --> 00:54:48,000
not signed one right so that's why it is

1064
00:54:48,000 --> 00:54:49,839
failed to collect certificate from this

1065
00:54:49,839 --> 00:54:51,680
one nice

1066
00:54:51,680 --> 00:54:53,359
so we're gonna install the unsigned

1067
00:54:53,359 --> 00:54:55,040
application

1068
00:54:55,040 --> 00:54:58,480
so we have to go back so we'll install

1069
00:54:58,480 --> 00:55:06,160
this one

1070
00:55:06,160 --> 00:55:10,000
now it will install this right

1071
00:55:12,720 --> 00:55:21,839
here you can find it and

1072
00:55:24,880 --> 00:55:28,400
you can try to login

1073
00:55:28,480 --> 00:55:32,240
okay uh this is the

1074
00:55:32,240 --> 00:55:35,440
cross side scripting vulnerability so

1075
00:55:35,440 --> 00:55:39,040
whenever whenever the application enable

1076
00:55:39,040 --> 00:55:42,960
the javascript if you found like

1077
00:55:42,960 --> 00:55:45,440
the application has javascript enable

1078
00:55:45,440 --> 00:55:47,359
and it is loading a remote

1079
00:55:47,359 --> 00:55:49,920
ul then you can do it remote then you

1080
00:55:49,920 --> 00:55:51,520
can do a cross side scripting

1081
00:55:51,520 --> 00:55:55,440
so you put you put your

1082
00:55:55,599 --> 00:55:58,799
like this is here we have put our script

1083
00:55:58,799 --> 00:56:01,680
and we put the urls up there and now we

1084
00:56:01,680 --> 00:56:02,559
go

1085
00:56:02,559 --> 00:56:04,480
it will execute the profile description

1086
00:56:04,480 --> 00:56:05,760
here

1087
00:56:05,760 --> 00:56:08,880
so this is how we

1088
00:56:08,880 --> 00:56:11,680
we find the closer description in mobile

1089
00:56:11,680 --> 00:56:14,240
application

1090
00:56:15,119 --> 00:56:19,599
right now we go to our practical

1091
00:56:19,839 --> 00:56:22,240
reading

1092
00:56:24,240 --> 00:56:27,760
data data

1093
00:56:27,760 --> 00:56:31,839
form dot

1094
00:56:33,359 --> 00:56:45,839
all the package

1095
00:56:50,720 --> 00:56:55,118
data data

1096
00:56:56,839 --> 00:56:58,960
right

1097
00:56:58,960 --> 00:57:01,280
right

1098
00:57:02,160 --> 00:57:05,680
uh still there is a folder

1099
00:57:05,680 --> 00:57:07,680
it's always up here here files it is not

1100
00:57:07,680 --> 00:57:10,079
coming i don't know

1101
00:57:10,079 --> 00:57:13,119
but you will find you will find some

1102
00:57:13,119 --> 00:57:16,319
so you can check this this folder inside

1103
00:57:16,319 --> 00:57:17,920
the package folder you can check if they

1104
00:57:17,920 --> 00:57:19,119
are storing

1105
00:57:19,119 --> 00:57:20,960
any kind of sensitive data or sometimes

1106
00:57:20,960 --> 00:57:23,040
they also install inside

1107
00:57:23,040 --> 00:57:26,799
the actual sd card

1108
00:57:26,799 --> 00:57:29,440
inside the xd card so you can also check

1109
00:57:29,440 --> 00:57:32,559
an sd card as well

1110
00:57:33,280 --> 00:57:36,160
you will find it

1111
00:57:37,680 --> 00:57:41,839
this is root

1112
00:57:42,000 --> 00:57:45,359
and here as g

1113
00:57:45,359 --> 00:57:48,400
car and you can

1114
00:57:48,400 --> 00:57:55,839
check now this is not down

1115
00:57:56,000 --> 00:58:00,000
right now there is nothing but

1116
00:58:00,079 --> 00:58:02,720
you can check handle if something is

1117
00:58:02,720 --> 00:58:05,040
there

1118
00:58:06,400 --> 00:58:09,839
and you can see here

1119
00:58:13,520 --> 00:58:16,799
uh you can find here files

1120
00:58:16,799 --> 00:58:19,680
so this is you know credential.that file

1121
00:58:19,680 --> 00:58:21,040
so

1122
00:58:21,040 --> 00:58:24,160
sometimes they store some

1123
00:58:24,160 --> 00:58:28,319
sensitive data inside

1124
00:58:28,319 --> 00:58:30,960
the local device and you can find test

1125
00:58:30,960 --> 00:58:33,119
and

1126
00:58:33,119 --> 00:58:36,559
password so this is how sometimes you

1127
00:58:36,559 --> 00:58:37,040
find

1128
00:58:37,040 --> 00:58:41,839
and token api keys jwt token

1129
00:58:41,839 --> 00:58:45,280
or sometimes encrypted token

1130
00:58:45,280 --> 00:58:49,520
and sometimes md5 hashes so

1131
00:58:49,520 --> 00:58:51,920
so always try to check what they are

1132
00:58:51,920 --> 00:58:55,760
showing inside the local device

1133
00:58:55,839 --> 00:58:59,359
this is for this spectacle and now

1134
00:58:59,359 --> 00:59:03,359
more as if i already explained

1135
00:59:03,359 --> 00:59:05,839
other work we can find either attack api

1136
00:59:05,839 --> 00:59:06,720
vulnerability

1137
00:59:06,720 --> 00:59:09,920
access control issue auth related issue

1138
00:59:09,920 --> 00:59:13,359
jw token issue so just for finding the

1139
00:59:13,359 --> 00:59:14,160
idle

1140
00:59:14,160 --> 00:59:15,760
api vulnerability access control

1141
00:59:15,760 --> 00:59:17,200
instrument we have to intercept the

1142
00:59:17,200 --> 00:59:19,040
traffic we have to

1143
00:59:19,040 --> 00:59:20,559
open the application we have to

1144
00:59:20,559 --> 00:59:22,400
intercept the traffic

1145
00:59:22,400 --> 00:59:26,079
so for doing this we need to set up the

1146
00:59:26,079 --> 00:59:28,559
proxy

1147
00:59:30,839 --> 00:59:32,240
right

1148
00:59:32,240 --> 00:59:36,480
okay now let's set up the burp proxy

1149
00:59:36,480 --> 00:59:41,119
and for doing the proxy

1150
00:59:41,119 --> 00:59:43,040
just also we also need to install the

1151
00:59:43,040 --> 00:59:47,839
certificate of above

1152
00:59:50,079 --> 00:59:54,240
custom phone if we have anything nothing

1153
00:59:54,240 --> 00:59:57,520
i guess we already

1154
00:59:57,520 --> 01:00:01,520
reset it previously i install it

1155
01:00:01,520 --> 01:00:04,240
but yes certificate is not there because

1156
01:00:04,240 --> 01:00:05,119
the

1157
01:00:05,119 --> 01:00:08,960
lock is not there if we if we have to

1158
01:00:08,960 --> 01:00:10,400
install the certificate we have to also

1159
01:00:10,400 --> 01:00:11,200
set up

1160
01:00:11,200 --> 01:00:13,440
the screen lock okay it will

1161
01:00:13,440 --> 01:00:14,319
automatically

1162
01:00:14,319 --> 01:00:17,040
tell us it will force us to set up this

1163
01:00:17,040 --> 01:00:18,240
thing lock when we will install

1164
01:00:18,240 --> 01:00:19,839
certificate

1165
01:00:19,839 --> 01:00:23,040
so again we have to install the

1166
01:00:23,040 --> 01:00:24,480
certificate now

1167
01:00:24,480 --> 01:00:28,799
what i will do is

1168
01:00:28,799 --> 01:00:33,040
i will push the certificate i will use

1169
01:00:33,040 --> 01:00:36,480
the feature adb push and push the

1170
01:00:36,480 --> 01:00:37,839
certificate

1171
01:00:37,839 --> 01:00:42,720
inside into the mobile device

1172
01:00:42,720 --> 01:00:47,680
right so i will exit from

1173
01:00:47,680 --> 01:00:52,640
here and

1174
01:00:53,599 --> 01:00:57,839
i will go

1175
01:01:00,960 --> 01:01:04,640
i already have the certificate

1176
01:01:04,960 --> 01:01:08,000
i will push adb

1177
01:01:08,000 --> 01:01:11,839
this is the command

1178
01:01:13,440 --> 01:01:15,680
push

1179
01:01:20,720 --> 01:01:25,839
you can see

1180
01:01:29,040 --> 01:01:31,359
these are the certificate you can easily

1181
01:01:31,359 --> 01:01:32,960
push

1182
01:01:32,960 --> 01:01:36,839
but where we want to push we can check

1183
01:01:36,839 --> 01:01:38,799
here

1184
01:01:38,799 --> 01:01:41,520
shall we go

1185
01:01:43,760 --> 01:01:47,040
ah we are sorry we are already in inside

1186
01:01:47,040 --> 01:01:49,599
the device

1187
01:01:50,839 --> 01:01:54,160
right so we can put

1188
01:01:54,160 --> 01:01:57,359
certificate here as well

1189
01:01:58,799 --> 01:02:01,760
if you want to put here in download sd

1190
01:02:01,760 --> 01:02:04,319
card download we can put here as well

1191
01:02:04,319 --> 01:02:08,960
so just write this path

1192
01:02:09,359 --> 01:02:11,839
copy

1193
01:02:13,599 --> 01:02:17,440
and paste

1194
01:02:18,559 --> 01:02:22,319
one file pushed now we go here

1195
01:02:22,319 --> 01:02:24,319
right we are inside already inside the

1196
01:02:24,319 --> 01:02:26,240
file because we are inside a device

1197
01:02:26,240 --> 01:02:29,520
by using this command adb shell so now

1198
01:02:29,520 --> 01:02:32,559
if we ls we get a certificate

1199
01:02:32,559 --> 01:02:34,319
right now we can install this

1200
01:02:34,319 --> 01:02:37,440
certificate just go into device

1201
01:02:37,440 --> 01:02:40,640
in settings and

1202
01:02:40,640 --> 01:02:43,598
when we search

1203
01:02:43,680 --> 01:02:46,079
install certificates we go to install

1204
01:02:46,079 --> 01:02:48,640
certificate we go to downloads

1205
01:02:48,640 --> 01:02:50,799
it is not here because we have to go

1206
01:02:50,799 --> 01:02:52,319
here

1207
01:02:52,319 --> 01:02:55,520
and this is the certificate

1208
01:02:55,520 --> 01:02:59,440
we can name it bob now it will ask for

1209
01:02:59,440 --> 01:03:02,880
screen lock pin

1210
01:03:02,880 --> 01:03:08,559
one two three four one two three four

1211
01:03:08,640 --> 01:03:11,839
don't show notification at all

1212
01:03:11,839 --> 01:03:14,960
now bob is in store bob's

1213
01:03:14,960 --> 01:03:18,319
certificate installed right now

1214
01:03:18,319 --> 01:03:23,359
time comes for applying proxy

1215
01:03:26,960 --> 01:03:32,400
where is the wifi this is the wi-fi

1216
01:03:32,400 --> 01:03:36,400
go there modify proxy

1217
01:03:36,400 --> 01:03:40,640
manual and put the ip address here

1218
01:03:40,640 --> 01:03:44,400
ip address for what for

1219
01:03:44,400 --> 01:03:47,280
our primary os where we want the traffic

1220
01:03:47,280 --> 01:03:48,960
to go through

1221
01:03:48,960 --> 01:03:50,960
right so we can check the ip address

1222
01:03:50,960 --> 01:03:53,200
here

1223
01:03:53,200 --> 01:03:56,559
iep sorry

1224
01:03:56,559 --> 01:03:59,119
but this is the ipad of the device right

1225
01:03:59,119 --> 01:03:59,760
this is the

1226
01:03:59,760 --> 01:04:02,960
ipads of device and

1227
01:04:02,960 --> 01:04:06,960
this is the ip address of our os

1228
01:04:07,760 --> 01:04:10,480
it will come

1229
01:04:12,480 --> 01:04:15,920
0 this one

1230
01:04:15,920 --> 01:04:21,200
0 186 right so we can put it

1231
01:04:23,760 --> 01:04:25,680
i already start the buff so we can put

1232
01:04:25,680 --> 01:04:31,039
it here 192.168.0.1

1233
01:04:31,039 --> 01:04:34,319
186 code we can give added

1234
01:04:34,319 --> 01:04:37,359
at eight now we have

1235
01:04:37,359 --> 01:04:40,400
set up the proxy here now we have to

1236
01:04:40,400 --> 01:04:41,680
start the verb

1237
01:04:41,680 --> 01:04:45,118
for listener the proxy

1238
01:04:45,520 --> 01:04:49,038
so what we can do

1239
01:04:50,720 --> 01:04:54,160
all interface edit

1240
01:04:54,160 --> 01:04:58,960
edit that's it it will start

1241
01:04:58,960 --> 01:05:02,000
intercept all the interface

1242
01:05:02,000 --> 01:05:07,039
allow now just go to

1243
01:05:07,039 --> 01:05:10,480
intercept intercept is on off

1244
01:05:10,480 --> 01:05:14,079
now let's try to open something

1245
01:05:14,079 --> 01:05:16,960
let's try to open

1246
01:05:18,400 --> 01:05:21,359
google.com

1247
01:05:21,440 --> 01:05:23,839
now we can see the traffic is coming

1248
01:05:23,839 --> 01:05:26,000
into a burp suit

1249
01:05:26,000 --> 01:05:28,319
and here we go we already we said we

1250
01:05:28,319 --> 01:05:29,839
installed this web certificate now we

1251
01:05:29,839 --> 01:05:30,799
can

1252
01:05:30,799 --> 01:05:34,559
intercept the https traffic

1253
01:05:34,839 --> 01:05:39,520
forward we see the result

1254
01:05:40,960 --> 01:05:44,559
it will come it will take time so we can

1255
01:05:44,559 --> 01:05:47,359
insert off

1256
01:05:47,680 --> 01:05:49,599
see this result it will come actually

1257
01:05:49,599 --> 01:05:50,799
this browser is

1258
01:05:50,799 --> 01:05:54,640
not good that's why now we open our

1259
01:05:54,640 --> 01:05:59,038
application this is our application

1260
01:05:59,520 --> 01:06:05,839
check if we will go here click on go

1261
01:06:10,480 --> 01:06:13,359
ah this one

1262
01:06:15,280 --> 01:06:19,839
what happened

1263
01:06:21,119 --> 01:06:23,520
okay

1264
01:06:30,839 --> 01:06:33,839
okay

1265
01:06:44,839 --> 01:06:47,839
hmm

1266
01:06:49,200 --> 01:06:51,439
fine

1267
01:06:52,799 --> 01:06:56,160
to request for the

1268
01:06:56,160 --> 01:07:01,839
intercept is on

1269
01:07:02,319 --> 01:07:04,960
do not come

1270
01:07:06,240 --> 01:07:15,839
now let's try this

1271
01:07:23,760 --> 01:07:29,839
let's say this one it's come

1272
01:07:34,720 --> 01:07:43,839
uh what is the error

1273
01:07:46,400 --> 01:07:48,799
there's no need to worry about handset

1274
01:07:48,799 --> 01:07:49,920
because

1275
01:07:49,920 --> 01:07:52,400
the application do not have any

1276
01:07:52,400 --> 01:07:54,240
certificate

1277
01:07:54,240 --> 01:07:57,839
hassle claims

1278
01:08:02,240 --> 01:08:05,440
okay let's set up again no problem close

1279
01:08:05,440 --> 01:08:07,920
this up

1280
01:08:22,839 --> 01:08:25,279
this

1281
01:08:25,279 --> 01:08:38,158
let's keep it

1282
01:08:38,158 --> 01:08:42,080
this ip is for villager yes yes

1283
01:08:42,719 --> 01:08:46,719
but fine because sometimes this

1284
01:08:46,719 --> 01:08:51,759
great problem bridge and that

1285
01:08:51,759 --> 01:08:53,600
if it will not work then we will set up

1286
01:08:53,600 --> 01:08:56,319
with this one

1287
01:08:58,640 --> 01:09:02,560
what happened okay it is opening

1288
01:09:03,759 --> 01:09:06,560
so this is the last practical actually

1289
01:09:06,560 --> 01:09:07,040
we have

1290
01:09:07,040 --> 01:09:08,560
installed the web certificate for

1291
01:09:08,560 --> 01:09:10,640
intercepting your traffic

1292
01:09:10,640 --> 01:09:13,359
it got installed and it was okay fine

1293
01:09:13,359 --> 01:09:16,158
suddenly something happened

1294
01:09:16,158 --> 01:09:20,319
and i we should also

1295
01:09:20,319 --> 01:09:23,839
specify the address

1296
01:09:31,198 --> 01:09:33,678
this one

1297
01:09:42,080 --> 01:09:49,839
will come

1298
01:09:56,640 --> 01:10:00,159
traffic was coming before

1299
01:10:00,640 --> 01:10:17,840
it is not coming this time

1300
01:10:21,679 --> 01:10:23,760
sorry guys it is taking a little bit

1301
01:10:23,760 --> 01:10:26,000
time but i want

1302
01:10:26,000 --> 01:10:27,679
to show you because sometimes it creates

1303
01:10:27,679 --> 01:10:29,440
problem

1304
01:10:29,440 --> 01:10:32,400
but it's fine

1305
01:10:32,480 --> 01:10:36,879
so now i will start intercept on this

1306
01:10:43,280 --> 01:10:44,960
i think we will get a different i played

1307
01:10:44,960 --> 01:10:47,679
this as well

1308
01:10:54,960 --> 01:10:59,040
our emulator will get a different idea

1309
01:10:59,040 --> 01:11:04,800
this is okay fine this is starting

1310
01:11:07,040 --> 01:11:09,920
this taking a little bit time it should

1311
01:11:09,920 --> 01:11:10,239
not

1312
01:11:10,239 --> 01:11:14,320
take it i don't know why it is taking a

1313
01:11:14,320 --> 01:11:16,639
time

1314
01:11:21,120 --> 01:11:24,320
okay and sometimes like

1315
01:11:24,320 --> 01:11:26,880
we want to we need some google play

1316
01:11:26,880 --> 01:11:27,920
stuff so there is

1317
01:11:27,920 --> 01:11:31,120
here open gaps we can install it

1318
01:11:31,120 --> 01:11:33,679
from here itself you have to install

1319
01:11:33,679 --> 01:11:35,280
open gaps on your virtual device so when

1320
01:11:35,280 --> 01:11:37,040
you install the open gaps you will find

1321
01:11:37,040 --> 01:11:38,640
google play store

1322
01:11:38,640 --> 01:11:41,199
and you will find the google apps by

1323
01:11:41,199 --> 01:11:43,199
default

1324
01:11:43,199 --> 01:11:46,400
right now it is not opening it is

1325
01:11:46,400 --> 01:11:55,120
its open now

1326
01:11:55,120 --> 01:11:58,080
if we see

1327
01:12:03,199 --> 01:12:07,040
jdb shall

1328
01:12:07,040 --> 01:12:10,239
see the ip address

1329
01:12:11,600 --> 01:12:15,400
0 183 and

1330
01:12:15,400 --> 01:12:19,120
57.102 okay

1331
01:12:19,120 --> 01:12:23,840
and if

1332
01:12:34,840 --> 01:12:37,840
our

1333
01:12:46,480 --> 01:12:51,839
yes this is fine

1334
01:12:55,840 --> 01:13:05,840
did you okay

1335
01:13:17,360 --> 01:13:21,519
that's what he does sometimes it's

1336
01:13:30,840 --> 01:13:33,840
happening

1337
01:13:42,560 --> 01:13:45,679
i don't know what is happening here i

1338
01:13:45,679 --> 01:13:46,400
will

1339
01:13:46,400 --> 01:13:51,280
just modify it on that and try to

1340
01:13:51,280 --> 01:13:54,320
this is the last practical actually so

1341
01:13:54,320 --> 01:13:57,360
after that so basically we can find

1342
01:13:57,360 --> 01:13:59,120
these vulnerability by using when we

1343
01:13:59,120 --> 01:14:00,800
intercept the request

1344
01:14:00,800 --> 01:14:04,080
and when when we set up and

1345
01:14:04,080 --> 01:14:06,400
insert the request when suppose i do we

1346
01:14:06,400 --> 01:14:07,280
want to

1347
01:14:07,280 --> 01:14:10,320
delete other user commands so we try to

1348
01:14:10,320 --> 01:14:12,400
change the command id we try to change

1349
01:14:12,400 --> 01:14:13,600
the user id

1350
01:14:13,600 --> 01:14:16,320
if you want to delete some user profile

1351
01:14:16,320 --> 01:14:17,280
data

1352
01:14:17,280 --> 01:14:19,679
and here like some api vulnerability

1353
01:14:19,679 --> 01:14:21,120
like access control issue

1354
01:14:21,120 --> 01:14:25,040
authorization issue and jw token issues

1355
01:14:25,040 --> 01:14:27,199
and so this is the source code review

1356
01:14:27,199 --> 01:14:28,800
here

1357
01:14:28,800 --> 01:14:32,320
we can do because issue review is always

1358
01:14:32,320 --> 01:14:35,280
good to find out the low hanging fluid

1359
01:14:35,280 --> 01:14:37,120
of to find out the

1360
01:14:37,120 --> 01:14:40,840
vulnerability before it's go to a

1361
01:14:40,840 --> 01:14:43,280
production so these are some benefit for

1362
01:14:43,280 --> 01:14:44,800
source code review detection

1363
01:14:44,800 --> 01:14:47,840
inflation like we can deduct easily we

1364
01:14:47,840 --> 01:14:48,560
can

1365
01:14:48,560 --> 01:14:50,560
detect some hard coded password secret

1366
01:14:50,560 --> 01:14:52,320
key is there

1367
01:14:52,320 --> 01:14:55,600
before it goes to production and we can

1368
01:14:55,600 --> 01:14:56,000
detect

1369
01:14:56,000 --> 01:14:58,159
some deductible definition as well we

1370
01:14:58,159 --> 01:15:00,880
can detect some weak algorithm uses

1371
01:15:00,880 --> 01:15:03,520
as well so these are the benefit for

1372
01:15:03,520 --> 01:15:06,800
mobile application source code review

1373
01:15:06,800 --> 01:15:11,440
these are some reference i took it and

1374
01:15:11,440 --> 01:15:13,679
that's all guys for this thank you very

1375
01:15:13,679 --> 01:15:14,719
much

1376
01:15:14,719 --> 01:15:18,960
for your patience and thank you for

1377
01:15:18,960 --> 01:15:20,640
joining me today

1378
01:15:20,640 --> 01:15:25,120
thank you guys

