1
00:00:06,399 --> 00:00:09,760
hello everyone welcome with my talk

2
00:00:09,760 --> 00:00:12,400
i'm glad for be here for you all

3
00:00:12,400 --> 00:00:15,280
my talk is called through a c8 variety

4
00:00:15,280 --> 00:00:18,960
of egg hunter to get a shell

5
00:00:22,240 --> 00:00:24,240
my name is

6
00:00:24,240 --> 00:00:27,920
but you can call by my nicki named hodox

7
00:00:27,920 --> 00:00:30,880
i'm i did about me i have penetration

8
00:00:30,880 --> 00:00:34,000
tester instructor oit

9
00:00:34,000 --> 00:00:36,800
constantine of information throughout 30

10
00:00:36,800 --> 00:00:37,920
years

11
00:00:37,920 --> 00:00:41,360
mr financial hacker basically

12
00:00:41,360 --> 00:00:44,640
give me talks at conference

13
00:00:44,640 --> 00:00:47,440
as hacking the box occupy qubit

14
00:00:47,440 --> 00:00:49,680
conference arab security conference

15
00:00:49,680 --> 00:00:51,840
materials

16
00:00:51,840 --> 00:00:56,800
managing village besides calgary's etc

17
00:00:57,120 --> 00:00:58,559
magazine

18
00:00:58,559 --> 00:01:00,399
about stack of the flowing princess

19
00:01:00,399 --> 00:01:03,520
magazine about cover channel for further

20
00:01:03,520 --> 00:01:05,600
to get a shell through a c8 of a right

21
00:01:05,600 --> 00:01:08,000
to let the show

22
00:01:08,000 --> 00:01:11,360
i leave here my linkedin profile by my

23
00:01:11,360 --> 00:01:12,560
email

24
00:01:12,560 --> 00:01:14,320
for words

25
00:01:14,320 --> 00:01:17,680
take outs and doubts you can write me

26
00:01:17,680 --> 00:01:20,400
at my linkedin or my

27
00:01:20,400 --> 00:01:21,090
email

28
00:01:21,090 --> 00:01:23,600
[Music]

29
00:01:23,600 --> 00:01:25,280
our agenda

30
00:01:25,280 --> 00:01:29,759
you learn what is sc8 is 30 700

31
00:01:29,759 --> 00:01:31,280
buff overflow

32
00:01:31,280 --> 00:01:34,079
we have a park impact we learn the sc8

33
00:01:34,079 --> 00:01:37,920
override short jump aggie hunter many

34
00:01:37,920 --> 00:01:41,119
characters reverse shell and we have a

35
00:01:41,119 --> 00:01:43,680
questions

36
00:01:45,119 --> 00:01:47,360
exception 100

37
00:01:47,360 --> 00:01:50,000
exception 100 is a chunk of recording

38
00:01:50,000 --> 00:01:52,079
from inside of an application which you

39
00:01:52,079 --> 00:01:54,399
have in the objective to handle an

40
00:01:54,399 --> 00:01:58,159
exception that can occur during

41
00:01:58,159 --> 00:02:00,320
the creation of the software

42
00:02:00,320 --> 00:02:03,119
reception look like with

43
00:02:03,119 --> 00:02:06,159
here we have try and catch

44
00:02:06,159 --> 00:02:09,199
and try execute some code you should

45
00:02:09,199 --> 00:02:11,200
call some exception

46
00:02:11,200 --> 00:02:14,000
should jump into catch

47
00:02:14,000 --> 00:02:15,200
it catch

48
00:02:15,200 --> 00:02:17,440
execute some specific code where

49
00:02:17,440 --> 00:02:18,800
inception core

50
00:02:18,800 --> 00:02:21,760
so a flow of execution of the software

51
00:02:21,760 --> 00:02:24,000
we will pass for the try

52
00:02:24,000 --> 00:02:27,280
execute some code if required some

53
00:02:27,280 --> 00:02:30,400
exception will jump to catch in the

54
00:02:30,400 --> 00:02:34,720
cache it will execute some specific code

55
00:02:34,720 --> 00:02:37,840
reception core

56
00:02:44,879 --> 00:02:46,480
the sc8

57
00:02:46,480 --> 00:02:47,519
works

58
00:02:47,519 --> 00:02:51,120
in chain and the hierarchies in end of

59
00:02:51,120 --> 00:02:52,560
stack

60
00:02:52,560 --> 00:02:55,599
in the classic buffer version of vanilla

61
00:02:55,599 --> 00:02:59,280
the exploit of writes the return address

62
00:02:59,280 --> 00:03:01,440
without worrying about writing more

63
00:03:01,440 --> 00:03:03,120
bytes in stack

64
00:03:03,120 --> 00:03:06,400
but with the sc8 of the right technique

65
00:03:06,400 --> 00:03:08,640
it is possible to obtain my space and

66
00:03:08,640 --> 00:03:11,280
final shell code in order to have

67
00:03:11,280 --> 00:03:14,239
exploit more stable

68
00:03:14,239 --> 00:03:16,400
so we have here

69
00:03:16,400 --> 00:03:18,720
in our stack

70
00:03:18,720 --> 00:03:22,879
remember that the se80

71
00:03:23,120 --> 00:03:26,000
is localized in the end of stack

72
00:03:26,000 --> 00:03:28,959
and here we have necessitated recorded

73
00:03:28,959 --> 00:03:32,760
se hundred

74
00:03:35,120 --> 00:03:40,239
these sc8 work in as a chain

75
00:03:45,040 --> 00:03:48,480
exception is an aspect event an error

76
00:03:48,480 --> 00:03:51,840
that occurs in your early ccr program

77
00:03:51,840 --> 00:03:53,840
where exceptional chorus the problems

78
00:03:53,840 --> 00:03:57,760
normal flow of execution is terribility

79
00:03:57,760 --> 00:04:00,480
it is important that the application can

80
00:04:00,480 --> 00:04:01,439
handle

81
00:04:01,439 --> 00:04:04,400
the services or errors to continue

82
00:04:04,400 --> 00:04:07,200
running normally

83
00:04:07,200 --> 00:04:09,760
the address of the exception hundreds

84
00:04:09,760 --> 00:04:12,640
are started on the stack

85
00:04:12,640 --> 00:04:16,560
the separation system has a default

86
00:04:16,560 --> 00:04:20,320
handler that gets any exception that is

87
00:04:20,320 --> 00:04:22,639
not handled by the program

88
00:04:22,639 --> 00:04:25,280
when windows handles an acceptor in

89
00:04:25,280 --> 00:04:29,600
application we usually see the message

90
00:04:29,600 --> 00:04:32,160
program has encoded a problem it needs

91
00:04:32,160 --> 00:04:33,440
to close

92
00:04:33,440 --> 00:04:37,360
so we learn here that each program has

93
00:04:37,360 --> 00:04:39,919
your own exception handler but the

94
00:04:39,919 --> 00:04:41,199
windows

95
00:04:41,199 --> 00:04:45,120
has two your own 700

96
00:04:45,120 --> 00:04:46,240
when

97
00:04:46,240 --> 00:04:50,960
the 700 of the software don't work

98
00:04:50,960 --> 00:04:56,280
the except 100 of the windows work

99
00:04:56,320 --> 00:04:58,639
in the world where we see the message

100
00:04:58,639 --> 00:05:01,360
problem has encountered a problem needs

101
00:05:01,360 --> 00:05:03,919
to close

102
00:05:08,639 --> 00:05:12,000
buff overflow buff overflow is anomaly

103
00:05:12,000 --> 00:05:14,080
where a problem while writing data to

104
00:05:14,080 --> 00:05:16,320
our buffer overalls the buffers

105
00:05:16,320 --> 00:05:18,479
boundaries and the price said memory

106
00:05:18,479 --> 00:05:19,840
locations

107
00:05:19,840 --> 00:05:23,280
might be repeat based on stack based

108
00:05:23,280 --> 00:05:24,960
be based

109
00:05:24,960 --> 00:05:27,120
placing the memory which allocates a lot

110
00:05:27,120 --> 00:05:29,680
amount of data and dynamically

111
00:05:29,680 --> 00:05:32,639
stack based locate a limited or fixed

112
00:05:32,639 --> 00:05:34,880
size of data which is data from account

113
00:05:34,880 --> 00:05:38,919
variables or functions

114
00:05:40,160 --> 00:05:41,840
so we have

115
00:05:41,840 --> 00:05:43,520
two class of

116
00:05:43,520 --> 00:05:45,919
buffer flows repeat based and stack

117
00:05:45,919 --> 00:05:48,240
based

118
00:05:48,960 --> 00:05:52,160
here we have animation of the buffalo

119
00:05:52,160 --> 00:05:53,120
flow

120
00:05:53,120 --> 00:05:56,240
we have in left image

121
00:05:56,240 --> 00:05:59,039
variable 4 with level 8 right image

122
00:05:59,039 --> 00:06:01,919
variable 468

123
00:06:01,919 --> 00:06:05,799
yes we can see

124
00:06:06,479 --> 00:06:08,560
this turkey

125
00:06:08,560 --> 00:06:12,639
is over a variety is taking the variety

126
00:06:12,639 --> 00:06:15,520
if you are what amount of character is

127
00:06:15,520 --> 00:06:18,000
we saw variety

128
00:06:18,000 --> 00:06:22,560
the resistance abp earth sc8 as we can

129
00:06:22,560 --> 00:06:23,759
see here

130
00:06:23,759 --> 00:06:26,880
sc8 is localized in the end of stack

131
00:06:26,880 --> 00:06:29,120
so

132
00:06:30,000 --> 00:06:33,199
the s8 is a

133
00:06:33,199 --> 00:06:36,800
resource of windows to handle

134
00:06:36,800 --> 00:06:39,600
the 700

135
00:06:39,600 --> 00:06:41,440
and the sc80

136
00:06:41,440 --> 00:06:44,639
of windows is localized in any of the

137
00:06:44,639 --> 00:06:47,639
stack

138
00:06:48,880 --> 00:06:50,479
now we have a park

139
00:06:50,479 --> 00:06:52,639
the attacker machine will use the color

140
00:06:52,639 --> 00:06:54,560
linux

141
00:06:54,560 --> 00:06:55,960
20

142
00:06:55,960 --> 00:06:58,800
20.3 and the vulnerable source that we

143
00:06:58,800 --> 00:06:59,680
use

144
00:06:59,680 --> 00:07:04,240
is the easy fire shell web 7.2

145
00:07:04,240 --> 00:07:06,400
it's running windows xp and service

146
00:07:06,400 --> 00:07:09,120
packet 3

147
00:07:09,199 --> 00:07:10,800
here we have

148
00:07:10,800 --> 00:07:14,880
a link for the load of enable software

149
00:07:14,880 --> 00:07:17,199
i'll become available on my linkedin

150
00:07:17,199 --> 00:07:20,639
profile the link for this slides

151
00:07:20,639 --> 00:07:25,680
for after the stalking won't see

152
00:07:25,680 --> 00:07:27,210
this slides again

153
00:07:27,210 --> 00:07:28,639
[Music]

154
00:07:28,639 --> 00:07:31,919
and download the vulnerable software

155
00:07:31,919 --> 00:07:33,280
you can

156
00:07:33,280 --> 00:07:35,840
we can find these

157
00:07:35,840 --> 00:07:40,560
this is rides on my linkedin profile

158
00:07:40,560 --> 00:07:42,800
so now now let's see

159
00:07:42,800 --> 00:07:45,840
the video park

160
00:07:52,000 --> 00:07:54,000
let's see the video park

161
00:07:54,000 --> 00:07:58,360
let's open the vulnerable software

162
00:07:59,120 --> 00:08:01,520
easy file sharing web server is running

163
00:08:01,520 --> 00:08:04,400
on part 80

164
00:08:04,400 --> 00:08:07,440
let's open the debugger remove file

165
00:08:07,440 --> 00:08:08,560
attach

166
00:08:08,560 --> 00:08:12,960
let's attach the vulnerable software

167
00:08:12,960 --> 00:08:14,400
choose

168
00:08:14,400 --> 00:08:19,318
enable software and clicking attach

169
00:08:26,720 --> 00:08:30,160
clicking button run to running run the

170
00:08:30,160 --> 00:08:34,479
enable software in the debugger

171
00:08:34,479 --> 00:08:38,760
if enable software is running

172
00:08:40,240 --> 00:08:41,760
let's open

173
00:08:41,760 --> 00:08:45,039
the exploit code

174
00:08:46,720 --> 00:08:49,360
vi

175
00:08:49,440 --> 00:08:51,839
here we have a

176
00:08:51,839 --> 00:08:55,519
title exploit code is exploit code

177
00:08:55,519 --> 00:08:58,399
in python variable crash world for what

178
00:08:58,399 --> 00:09:00,560
amount of its characters

179
00:09:00,560 --> 00:09:03,839
this about amount of characters will say

180
00:09:03,839 --> 00:09:06,399
against the entirety with objective or

181
00:09:06,399 --> 00:09:10,399
because crash vulnerable software

182
00:09:11,360 --> 00:09:15,040
will send a method get get plus crash

183
00:09:15,040 --> 00:09:17,200
world

184
00:09:17,200 --> 00:09:20,000
below we have

185
00:09:20,320 --> 00:09:23,120
attacked ib

186
00:09:23,120 --> 00:09:28,240
tracked ip impart 80

187
00:09:28,240 --> 00:09:31,360
this a lot amount of characters

188
00:09:31,360 --> 00:09:33,040
was generated

189
00:09:33,040 --> 00:09:37,160
by two pion create

190
00:09:37,519 --> 00:09:38,399
let's

191
00:09:38,399 --> 00:09:39,600
get in

192
00:09:39,600 --> 00:09:43,440
in folder usr sharemx sprite framework

193
00:09:43,440 --> 00:09:46,800
tools exploit

194
00:09:47,279 --> 00:09:49,760
and let's execute

195
00:09:49,760 --> 00:09:52,080
the two panel create

196
00:09:52,080 --> 00:09:56,399
with panel create dash and rank

197
00:09:56,399 --> 00:09:59,279
five thousand

198
00:09:59,279 --> 00:10:01,279
and we have here a lot amount of

199
00:10:01,279 --> 00:10:03,839
characters we will copy the seventh

200
00:10:03,839 --> 00:10:05,920
amount of characters any place in our

201
00:10:05,920 --> 00:10:08,240
exploited code

202
00:10:08,240 --> 00:10:10,800
for after sending this out amount of

203
00:10:10,800 --> 00:10:13,519
characters against the entirety with a

204
00:10:13,519 --> 00:10:15,920
predictable cause crashing vulnerable

205
00:10:15,920 --> 00:10:18,640
software

206
00:10:18,640 --> 00:10:21,600
copy paste

207
00:10:31,040 --> 00:10:35,560
let's save the exploit code

208
00:10:50,320 --> 00:10:52,240
let's send

209
00:10:52,240 --> 00:10:55,440
with title x correct on two

210
00:10:55,440 --> 00:10:57,440
send execute

211
00:10:57,440 --> 00:11:00,959
the python sprite code

212
00:11:00,959 --> 00:11:03,279
and in vulnerable software we have the

213
00:11:03,279 --> 00:11:08,000
flow of execution powered acts violation

214
00:11:08,000 --> 00:11:09,600
click menu view

215
00:11:09,600 --> 00:11:15,320
sch8 chain and we have a very available

216
00:11:15,839 --> 00:11:16,720
now

217
00:11:16,720 --> 00:11:19,440
we learned we need

218
00:11:19,440 --> 00:11:22,480
we need to find it what's the offset of

219
00:11:22,480 --> 00:11:24,720
se e8

220
00:11:24,720 --> 00:11:29,160
what's officer c8

221
00:11:29,600 --> 00:11:33,920
for finding the offset of se8

222
00:11:33,920 --> 00:11:36,800
we use a two pattern of set

223
00:11:36,800 --> 00:11:39,440
we should type which we must type

224
00:11:39,440 --> 00:11:42,560
pineapple set dash and link

225
00:11:42,560 --> 00:11:47,439
5000 is a link basically

226
00:11:48,640 --> 00:11:50,079
and we

227
00:11:50,079 --> 00:11:54,560
must type the value of sc 100

228
00:11:54,560 --> 00:11:57,839
46 35

229
00:12:00,959 --> 00:12:05,119
66 46

230
00:12:06,320 --> 00:12:10,160
this is a value

231
00:12:10,160 --> 00:12:14,600
obviously of s800

232
00:12:14,880 --> 00:12:16,720
and we found the

233
00:12:16,720 --> 00:12:19,320
office 30

234
00:12:19,320 --> 00:12:21,880
4065

235
00:12:21,880 --> 00:12:25,120
4065 is offset for our

236
00:12:25,120 --> 00:12:26,800
sc 100

237
00:12:26,800 --> 00:12:30,719
let's open the exploit code

238
00:12:31,360 --> 00:12:33,680
open the exploit code

239
00:12:33,680 --> 00:12:35,839
and then we have here variable crash

240
00:12:35,839 --> 00:12:39,839
world character a multiplied by

241
00:12:40,600 --> 00:12:42,160
461

242
00:12:42,160 --> 00:12:45,040
plus b multiplied by four plus c

243
00:12:45,040 --> 00:12:46,880
multiplied by four

244
00:12:46,880 --> 00:12:49,760
we will overwrite

245
00:12:49,760 --> 00:12:53,040
we will overwrite the

246
00:12:58,240 --> 00:13:00,720
operations because these are functions

247
00:13:00,720 --> 00:13:03,680
that do nothing

248
00:13:03,680 --> 00:13:05,680
night is an open

249
00:13:05,680 --> 00:13:10,638
do nothing function let's do nothing

250
00:13:13,360 --> 00:13:14,959
so

251
00:13:14,959 --> 00:13:19,479
let's restart the debugger

252
00:13:22,240 --> 00:13:24,160
click button world to run the mundane

253
00:13:24,160 --> 00:13:27,160
debugger

254
00:13:36,480 --> 00:13:38,720
let's execute

255
00:13:38,720 --> 00:13:43,000
the pytech sprite code

256
00:13:49,760 --> 00:13:53,040
we have here axe violation again click

257
00:13:53,040 --> 00:13:54,880
menu view

258
00:13:54,880 --> 00:13:55,920
sc

259
00:13:55,920 --> 00:13:57,519
chain

260
00:13:57,519 --> 00:14:00,959
and here we have the sc handler

261
00:14:00,959 --> 00:14:03,680
a variety

262
00:14:03,680 --> 00:14:08,079
by 43 43 43 and the address override by

263
00:14:08,079 --> 00:14:11,120
42 42 42

264
00:14:11,120 --> 00:14:13,920
real variety

265
00:14:13,920 --> 00:14:16,800
real variety

266
00:14:16,800 --> 00:14:20,240
the 300 clicky write both to follow

267
00:14:20,240 --> 00:14:23,199
address in stack follow addressing stack

268
00:14:23,199 --> 00:14:27,839
and as we can see we override the 300 we

269
00:14:27,839 --> 00:14:31,360
have here pointed to next sce

270
00:14:31,360 --> 00:14:34,800
recording with bbb

271
00:14:34,800 --> 00:14:38,720
and the sc holder if you see ccc

272
00:14:38,720 --> 00:14:41,519
we overwrite it

273
00:14:41,519 --> 00:14:44,639
the sc 100

274
00:14:44,639 --> 00:14:46,880
so

275
00:14:48,320 --> 00:14:51,839
now we get a control we get a quarter of

276
00:14:51,839 --> 00:14:54,920
a 300

277
00:14:58,240 --> 00:15:01,360
we get a code of s800

278
00:15:01,360 --> 00:15:03,680
because we overwrite as he heard with

279
00:15:03,680 --> 00:15:07,638
bbb ccc

280
00:15:12,000 --> 00:15:16,079
let's open the exploit code

281
00:15:18,560 --> 00:15:21,920
now we need to find it

282
00:15:21,920 --> 00:15:25,519
an instruction pop-up return

283
00:15:25,519 --> 00:15:27,920
for this illusion

284
00:15:27,920 --> 00:15:29,600
we must type

285
00:15:29,600 --> 00:15:32,639
in command by exclamation mark

286
00:15:32,639 --> 00:15:37,959
sc8 exclamation mark sc8

287
00:15:42,320 --> 00:15:44,480
clicking menu view

288
00:15:44,480 --> 00:15:46,800
log

289
00:15:46,800 --> 00:15:50,480
and as we can see here only the first 20

290
00:15:50,480 --> 00:15:53,839
pointers i show here for my point is

291
00:15:53,839 --> 00:15:56,480
open se8

292
00:15:56,480 --> 00:15:58,720
point text

293
00:15:58,720 --> 00:16:03,839
so let's open the sc8 file

294
00:16:04,160 --> 00:16:06,160
local disk c

295
00:16:06,160 --> 00:16:10,480
programs file immunity immunity debugger

296
00:16:10,480 --> 00:16:14,240
let's open the file sc8

297
00:16:14,240 --> 00:16:17,839
s80 point text

298
00:16:17,839 --> 00:16:22,480
and then we have a lot amount of address

299
00:16:22,480 --> 00:16:25,279
we need to find some address

300
00:16:25,279 --> 00:16:28,560
that make pop-up return

301
00:16:28,560 --> 00:16:30,399
and we

302
00:16:30,399 --> 00:16:34,480
secure mechanisms as files

303
00:16:35,680 --> 00:16:38,279
we use iris

304
00:16:38,279 --> 00:16:40,720
1003 fe

305
00:16:40,720 --> 00:16:42,079
we use

306
00:16:42,079 --> 00:16:44,199
address

307
00:16:44,199 --> 00:16:46,320
1003 fe

308
00:16:46,320 --> 00:16:48,240
this errors

309
00:16:48,240 --> 00:16:51,759
is a pop eci poppy di return

310
00:16:51,759 --> 00:16:55,600
if secure mechanisms asadi is files

311
00:16:55,600 --> 00:17:00,000
rebates as false safe sc8 as files or

312
00:17:00,000 --> 00:17:02,480
spouse

313
00:17:02,480 --> 00:17:05,839
we could use the other address but i'll

314
00:17:05,839 --> 00:17:07,280
choose

315
00:17:07,280 --> 00:17:09,520
this address then there are the

316
00:17:09,520 --> 00:17:11,280
automatically

317
00:17:11,280 --> 00:17:16,000
this important that is pci pdi returning

318
00:17:16,000 --> 00:17:18,959
with secure mechanisms

319
00:17:18,959 --> 00:17:21,760
pci pdi return if it's equipment can

320
00:17:21,760 --> 00:17:24,240
easily sndr is files with maintenance

321
00:17:24,240 --> 00:17:25,280
files

322
00:17:25,280 --> 00:17:29,120
save sc8 as fast for us as files

323
00:17:29,120 --> 00:17:30,960
this important that it

324
00:17:30,960 --> 00:17:34,080
has secure mechanisms false

325
00:17:34,080 --> 00:17:36,480
in the er expert equality

326
00:17:36,480 --> 00:17:40,480
we type here we create a variable se8

327
00:17:40,480 --> 00:17:44,400
if you value feed your 3-0 world then

328
00:17:44,400 --> 00:17:48,480
this address is for pop-pop return then

329
00:17:48,480 --> 00:17:51,440
there are three fe

330
00:17:51,440 --> 00:17:54,240
and we type here when i can do

331
00:17:54,240 --> 00:17:57,960
architecture 8x86

332
00:17:58,880 --> 00:18:02,240
is uh address fv0300

333
00:18:02,240 --> 00:18:04,880
well there is a address for pop-up

334
00:18:04,880 --> 00:18:06,960
return

335
00:18:06,960 --> 00:18:08,559
now we need to

336
00:18:08,559 --> 00:18:11,760
find the eins up code for instruction

337
00:18:11,760 --> 00:18:14,480
jump shot shorty jump

338
00:18:14,480 --> 00:18:18,160
for this we use a two nas michelle

339
00:18:18,160 --> 00:18:22,320
we use a tunas michelle for finding ice

340
00:18:22,320 --> 00:18:25,600
up code for instruction pop up for

341
00:18:25,600 --> 00:18:26,799
instruction

342
00:18:26,799 --> 00:18:29,440
charity

343
00:18:35,039 --> 00:18:36,480
of destruction

344
00:18:36,480 --> 00:18:39,280
shorty jump

345
00:18:39,280 --> 00:18:42,480
now we create a variable

346
00:18:42,480 --> 00:18:45,679
in sc8

347
00:18:52,960 --> 00:18:58,480
now let's type in asthma jump shark

348
00:18:58,480 --> 00:19:01,120
eight jump shot eight we

349
00:19:01,120 --> 00:19:04,559
found the apocalypse eb06

350
00:19:04,559 --> 00:19:09,039
if b06 is code five jump shorty eight

351
00:19:09,039 --> 00:19:15,280
again b06 is our code for short jumpy 8

352
00:19:15,600 --> 00:19:17,918
we

353
00:19:18,080 --> 00:19:19,440
must

354
00:19:19,440 --> 00:19:23,760
we must create a valuable any sc8 for

355
00:19:23,760 --> 00:19:25,440
short jump

356
00:19:25,440 --> 00:19:26,960
we type

357
00:19:26,960 --> 00:19:31,600
x 9 90 x 90 loop in oop

358
00:19:31,600 --> 00:19:36,080
and the view execute xb 0 6 is a short

359
00:19:36,080 --> 00:19:37,679
jumpy 8

360
00:19:37,679 --> 00:19:38,640
so

361
00:19:38,640 --> 00:19:41,200
we put available questions

362
00:19:41,200 --> 00:19:44,720
character a multiplied by officer

363
00:19:44,720 --> 00:19:46,559
for the in

364
00:19:46,559 --> 00:19:49,240
for the se8

365
00:19:49,240 --> 00:19:52,320
51 it's officiated

366
00:19:52,320 --> 00:19:54,480
for se80

367
00:19:54,480 --> 00:19:55,679
plus

368
00:19:55,679 --> 00:19:59,040
any se80 plus se80 plus

369
00:19:59,040 --> 00:20:00,160
[Music]

370
00:20:00,160 --> 00:20:01,280
noobs

371
00:20:01,280 --> 00:20:03,360
that is 90.

372
00:20:03,360 --> 00:20:05,280
so we execute

373
00:20:05,280 --> 00:20:07,520
pop up returning

374
00:20:07,520 --> 00:20:10,640
and it will return for the short jump

375
00:20:10,640 --> 00:20:12,559
and we will security

376
00:20:12,559 --> 00:20:17,360
new penup eb06 eb06 is a shorty jumpy

377
00:20:17,360 --> 00:20:18,880
aid

378
00:20:18,880 --> 00:20:22,000
so let's save this exploit code and

379
00:20:22,000 --> 00:20:25,520
execute the exploited code

380
00:20:25,520 --> 00:20:29,720
to see vulnerable software

381
00:20:41,200 --> 00:20:43,919
we have valuable questions for

382
00:20:43,919 --> 00:20:46,240
character aim multiplied by officer of

383
00:20:46,240 --> 00:20:47,440
the c8

384
00:20:47,440 --> 00:20:50,880
plus nsc80 plus s80 plus

385
00:20:50,880 --> 00:20:54,080
90 that's a loop

386
00:20:54,880 --> 00:20:59,720
let's save the exploit code

387
00:21:08,159 --> 00:21:12,400
let's restart the debugger

388
00:21:15,200 --> 00:21:17,919
restart him with a burger run them under

389
00:21:17,919 --> 00:21:19,760
the burger

390
00:21:19,760 --> 00:21:21,440
run the vanilla soft moon of the

391
00:21:21,440 --> 00:21:24,080
debugger

392
00:21:27,440 --> 00:21:31,080
software is running

393
00:21:31,600 --> 00:21:35,600
execute the exploited code

394
00:21:40,640 --> 00:21:42,960
the flow of the question stopped click

395
00:21:42,960 --> 00:21:47,039
menu view sc80 chain

396
00:21:47,039 --> 00:21:50,799
now we have a very re sc 100 writing

397
00:21:50,799 --> 00:21:52,080
button

398
00:21:52,080 --> 00:21:54,799
follow address in stacking

399
00:21:54,799 --> 00:21:58,240
and as we can see we have it sc se80

400
00:21:58,240 --> 00:22:02,000
recording of variety with

401
00:22:02,000 --> 00:22:03,760
charity jumping

402
00:22:03,760 --> 00:22:08,880
0 6 eb 1990 and the s800

403
00:22:08,880 --> 00:22:10,320
a variety of

404
00:22:10,320 --> 00:22:13,200
address of the pop-pop return understand

405
00:22:13,200 --> 00:22:15,360
the world through sc

406
00:22:15,360 --> 00:22:17,600
10-0

407
00:22:17,600 --> 00:22:20,640
you know three fe is a address for

408
00:22:20,640 --> 00:22:22,720
pop-up return

409
00:22:22,720 --> 00:22:25,120
and he pointed to next as he

410
00:22:25,120 --> 00:22:26,960
recording we have

411
00:22:26,960 --> 00:22:27,840
a

412
00:22:27,840 --> 00:22:29,679
short jump

413
00:22:29,679 --> 00:22:32,880
0-6 it be 1990

414
00:22:32,880 --> 00:22:36,000
so now we get a quarter of a ce

415
00:22:36,000 --> 00:22:37,760
recording

416
00:22:37,760 --> 00:22:41,919
again we get a culture of se recording

417
00:22:41,919 --> 00:22:44,720
and now we override the series required

418
00:22:44,720 --> 00:22:47,760
with shorty jump in the sc holder if we

419
00:22:47,760 --> 00:22:51,320
pop up return

420
00:23:19,679 --> 00:23:20,840
let's

421
00:23:20,840 --> 00:23:24,000
click if we write the bottom go to

422
00:23:24,000 --> 00:23:25,360
expression

423
00:23:25,360 --> 00:23:27,840
and let's find the address 10 year old

424
00:23:27,840 --> 00:23:30,080
rotary fee

425
00:23:30,080 --> 00:23:33,679
and then we found the interest 1003 fe

426
00:23:33,679 --> 00:23:36,400
it's a public property returning poppy

427
00:23:36,400 --> 00:23:40,480
ci popping the iron the returning

428
00:23:40,799 --> 00:23:42,480
crease right at the bottom breaking

429
00:23:42,480 --> 00:23:44,480
points toggle put your bracket pointy

430
00:23:44,480 --> 00:23:45,919
poppy ci

431
00:23:45,919 --> 00:23:50,919
we put your bracket pointy poppy ci

432
00:23:56,000 --> 00:23:58,799
let's pass 4 of execution 2 with shift

433
00:23:58,799 --> 00:24:02,480
f7 click button 1

434
00:24:02,480 --> 00:24:05,200
and here we stopped

435
00:24:05,200 --> 00:24:06,960
in pop ci

436
00:24:06,960 --> 00:24:09,200
we stopped the flow of execution

437
00:24:09,200 --> 00:24:12,080
embedded party pci

438
00:24:12,080 --> 00:24:15,760
for so let's click f7 for

439
00:24:15,760 --> 00:24:20,400
press pci f7 to best pop the eye

440
00:24:20,400 --> 00:24:21,679
here we

441
00:24:21,679 --> 00:24:23,200
is

442
00:24:23,200 --> 00:24:26,000
we are in return

443
00:24:26,000 --> 00:24:28,320
we are in return

444
00:24:28,320 --> 00:24:30,840
press f7 in

445
00:24:30,840 --> 00:24:34,960
return f7 in return and we follow out

446
00:24:34,960 --> 00:24:36,159
inuke

447
00:24:36,159 --> 00:24:39,880
here we have new penup jump shot

448
00:24:39,880 --> 00:24:45,360
ib06 as we can see a b06 means jump shot

449
00:24:45,360 --> 00:24:48,960
let's pair the loops with f7 f7

450
00:24:48,960 --> 00:24:53,039
and the f7 you'll be short and we

451
00:24:53,039 --> 00:24:55,840
we are in oops

452
00:24:55,840 --> 00:24:58,320
we are in loops

453
00:24:58,320 --> 00:25:01,440
as we can see we have a lot amount of

454
00:25:01,440 --> 00:25:02,480
noobs

455
00:25:02,480 --> 00:25:05,440
but yet this isn't

456
00:25:05,440 --> 00:25:09,279
enough space if i put our show code

457
00:25:09,279 --> 00:25:12,320
we should now put our shell code

458
00:25:12,320 --> 00:25:16,559
but i already know that this is isn't

459
00:25:16,559 --> 00:25:19,919
enough space to put our shell code

460
00:25:19,919 --> 00:25:20,799
so

461
00:25:20,799 --> 00:25:24,000
well we don't have enough space to put

462
00:25:24,000 --> 00:25:25,600
our shell code

463
00:25:25,600 --> 00:25:31,039
we use a technique called eddie hunter

464
00:25:35,760 --> 00:25:38,880
in our case we don't have enough space

465
00:25:38,880 --> 00:25:42,080
to put our shell code here

466
00:25:42,080 --> 00:25:46,559
for this we use a technique called

467
00:25:46,559 --> 00:25:49,440
aggie hunter

468
00:25:53,279 --> 00:25:56,880
let's find let's learn

469
00:25:58,000 --> 00:26:01,000
hunter

470
00:26:10,799 --> 00:26:13,840
as we can see

471
00:26:15,919 --> 00:26:19,840
about the pop-up returning

472
00:26:20,559 --> 00:26:22,159
now we need to find the moodle

473
00:26:22,159 --> 00:26:24,080
instruction pop-up return this

474
00:26:24,080 --> 00:26:25,360
instruction

475
00:26:25,360 --> 00:26:28,480
will as shown image below make a return

476
00:26:28,480 --> 00:26:32,159
to departure to the next sc8 recording

477
00:26:32,159 --> 00:26:34,640
the pointer to necessary to record will

478
00:26:34,640 --> 00:26:38,080
variety with a jump to our shell code to

479
00:26:38,080 --> 00:26:40,000
get a reverse shell

480
00:26:40,000 --> 00:26:42,880
here in flow of execution we have asked

481
00:26:42,880 --> 00:26:44,320
variation

482
00:26:44,320 --> 00:26:47,360
activation credit sc handler

483
00:26:47,360 --> 00:26:51,279
so in korean the c100 will execute pogba

484
00:26:51,279 --> 00:26:52,559
return

485
00:26:52,559 --> 00:26:54,880
and you will make a return for pointer

486
00:26:54,880 --> 00:26:57,679
to next se8 recording

487
00:26:57,679 --> 00:27:00,880
imported to necessitate record we make a

488
00:27:00,880 --> 00:27:04,159
short jump to our show code

489
00:27:04,159 --> 00:27:07,679
point it to next city was a variety with

490
00:27:07,679 --> 00:27:09,600
jump to shell code

491
00:27:09,600 --> 00:27:11,039
so again

492
00:27:11,039 --> 00:27:14,400
the flow of the execution is running

493
00:27:14,400 --> 00:27:17,440
vulnerable software so

494
00:27:17,440 --> 00:27:19,840
cause acts

495
00:27:19,840 --> 00:27:21,679
next variation

496
00:27:21,679 --> 00:27:25,279
in current sc 100 we execute the pop pop

497
00:27:25,279 --> 00:27:26,640
and return

498
00:27:26,640 --> 00:27:29,200
return for short jump

499
00:27:29,200 --> 00:27:32,080
so we'll execute short jump for our

500
00:27:32,080 --> 00:27:34,159
shell code

501
00:27:34,159 --> 00:27:37,200
here shall code real executor shall call

502
00:27:37,200 --> 00:27:39,360
to get every shell

503
00:27:39,360 --> 00:27:40,960
but

504
00:27:40,960 --> 00:27:45,840
as already say already said

505
00:27:46,399 --> 00:27:49,360
we don't have enough space to our shell

506
00:27:49,360 --> 00:27:50,399
code

507
00:27:50,399 --> 00:27:53,120
we don't have enough space for our shell

508
00:27:53,120 --> 00:27:54,000
code

509
00:27:54,000 --> 00:27:56,640
in this case we need to use a technique

510
00:27:56,640 --> 00:27:58,399
called the

511
00:27:58,399 --> 00:28:01,799
aggie hunter

512
00:28:09,840 --> 00:28:12,559
so we know that we have a little space

513
00:28:12,559 --> 00:28:14,320
to our shell code

514
00:28:14,320 --> 00:28:17,039
for this we use a technique called egg

515
00:28:17,039 --> 00:28:18,159
hunter

516
00:28:18,159 --> 00:28:21,600
egg hunter is a small piece of shell cod

517
00:28:21,600 --> 00:28:24,880
which search for 12 bigger shell code

518
00:28:24,880 --> 00:28:27,200
which the attacker was not able to

519
00:28:27,200 --> 00:28:30,399
feeding the available buffer space

520
00:28:30,399 --> 00:28:33,440
for this make use of this little piece

521
00:28:33,440 --> 00:28:36,240
of shell called aggie hunter to have

522
00:28:36,240 --> 00:28:39,120
directed the crucial flow to show called

523
00:28:39,120 --> 00:28:40,480
it bigger

524
00:28:40,480 --> 00:28:42,799
so

525
00:28:43,279 --> 00:28:45,760
saying better

526
00:28:45,760 --> 00:28:48,960
the egg hunter is small piece of shell

527
00:28:48,960 --> 00:28:51,600
code that will make directors for a

528
00:28:51,600 --> 00:28:53,120
bigger space

529
00:28:53,120 --> 00:28:56,399
in this bigger space

530
00:28:56,399 --> 00:28:58,799
we are secure put our show called

531
00:28:58,799 --> 00:29:02,158
together racist show

532
00:29:02,640 --> 00:29:04,799
so

533
00:29:05,279 --> 00:29:07,279
remember again

534
00:29:07,279 --> 00:29:10,480
we override s800 we operate to see

535
00:29:10,480 --> 00:29:11,679
hundreds with

536
00:29:11,679 --> 00:29:14,240
pop-pop return in the

537
00:29:14,240 --> 00:29:16,880
short jump

538
00:29:16,880 --> 00:29:20,480
will execute pop-pop return and return

539
00:29:20,480 --> 00:29:22,720
for short jump

540
00:29:22,720 --> 00:29:26,320
short jump execute short jump shark

541
00:29:26,320 --> 00:29:28,799
and the fellow out in our loops

542
00:29:28,799 --> 00:29:31,919
in place of it is loops we should put

543
00:29:31,919 --> 00:29:35,279
our shell cold together shell

544
00:29:35,279 --> 00:29:37,200
but in our case

545
00:29:37,200 --> 00:29:39,600
we don't have enough space

546
00:29:39,600 --> 00:29:41,919
we don't have enough space to put our

547
00:29:41,919 --> 00:29:44,159
shell code here

548
00:29:44,159 --> 00:29:47,039
for this we use a technique called ali

549
00:29:47,039 --> 00:29:49,200
hunter

550
00:29:49,200 --> 00:29:52,320
any hunter is a techniques

551
00:29:52,320 --> 00:29:53,279
where

552
00:29:53,279 --> 00:29:57,919
in place of this noobs we will put him a

553
00:29:57,919 --> 00:30:00,159
small piece of shell code

554
00:30:00,159 --> 00:30:02,559
we will put small piece of shell code

555
00:30:02,559 --> 00:30:04,320
called egg hunter

556
00:30:04,320 --> 00:30:06,559
that will have directors for a bigger

557
00:30:06,559 --> 00:30:08,240
space

558
00:30:08,240 --> 00:30:10,480
where in this bigger space we can put

559
00:30:10,480 --> 00:30:12,000
our shell code

560
00:30:12,000 --> 00:30:15,440
to get a voice shell

561
00:30:15,840 --> 00:30:20,760
let's see it in the video part

562
00:30:26,399 --> 00:30:29,120
in place of this loops we put our egg

563
00:30:29,120 --> 00:30:31,840
hunter we must type

564
00:30:31,840 --> 00:30:36,320
in commanded by exclamation mark

565
00:30:40,640 --> 00:30:42,399
and do we have here

566
00:30:42,399 --> 00:30:45,600
command again the comments of eggy

567
00:30:45,600 --> 00:30:48,399
we have the full value is root we use it

568
00:30:48,399 --> 00:30:51,399
afterwards

569
00:30:52,880 --> 00:30:56,960
after we learn what means this root

570
00:30:56,960 --> 00:30:57,919
and you

571
00:30:57,919 --> 00:31:01,360
we must type extremely shamona egg

572
00:31:01,360 --> 00:31:04,640
for find the eggy hunter shellcode

573
00:31:04,640 --> 00:31:09,600
and we have here eddie hunter shellcode

574
00:31:11,200 --> 00:31:14,320
let's copy write a button copy to

575
00:31:14,320 --> 00:31:16,720
clipboard whole line

576
00:31:16,720 --> 00:31:17,840
copy

577
00:31:17,840 --> 00:31:18,799
this

578
00:31:18,799 --> 00:31:21,840
edith shell code and paste in our shell

579
00:31:21,840 --> 00:31:23,440
code

580
00:31:23,440 --> 00:31:28,519
and paste in our exploit code

581
00:31:32,080 --> 00:31:34,960
copy this small piece of shell code of

582
00:31:34,960 --> 00:31:37,200
aggie hunter and the page in our express

583
00:31:37,200 --> 00:31:39,039
code

584
00:31:39,039 --> 00:31:44,279
let's open our exploit code

585
00:31:48,159 --> 00:31:50,880
we have here

586
00:31:50,880 --> 00:31:53,440
already basically i heard the right

587
00:31:53,440 --> 00:31:55,440
bottom page selection

588
00:31:55,440 --> 00:31:58,399
we have here a shell called a small

589
00:31:58,399 --> 00:32:01,200
piece of the shell called the egg hunter

590
00:32:01,200 --> 00:32:03,519
we put in variable crusher

591
00:32:03,519 --> 00:32:06,480
crusher character a multiplied above set

592
00:32:06,480 --> 00:32:09,799
of a c80

593
00:32:11,400 --> 00:32:14,669
[Music]

594
00:32:19,200 --> 00:32:20,080
press

595
00:32:20,080 --> 00:32:23,840
in sc8 process e8 plus 90 moves

596
00:32:23,840 --> 00:32:27,879
multiplied by five

597
00:32:32,320 --> 00:32:35,440
first egg hunter plus

598
00:32:35,440 --> 00:32:38,760
knight noobs

599
00:32:46,960 --> 00:32:49,960
oh

600
00:32:57,039 --> 00:33:00,159
and we have here payroll 2 equals bad

601
00:33:00,159 --> 00:33:01,519
shards

602
00:33:01,519 --> 00:33:04,080
we have here bad shards

603
00:33:04,080 --> 00:33:06,880
we will send against the target this

604
00:33:06,880 --> 00:33:09,360
better size this value is since zero

605
00:33:09,360 --> 00:33:12,080
world op f f

606
00:33:12,080 --> 00:33:15,840
c c zero up f

607
00:33:15,840 --> 00:33:18,480
let's learn more

608
00:33:18,480 --> 00:33:23,559
what the functions of this better size

609
00:33:32,399 --> 00:33:35,519
now we need to search for bad characters

610
00:33:35,519 --> 00:33:37,440
depending on the application type of

611
00:33:37,440 --> 00:33:40,399
vulnerability any protocols you use

612
00:33:40,399 --> 00:33:42,640
may be set in characters which are

613
00:33:42,640 --> 00:33:45,440
considered embedded and should not be

614
00:33:45,440 --> 00:33:49,600
used in our your buffer or shell code

615
00:33:49,600 --> 00:33:52,159
one example of very characteristics is a

616
00:33:52,159 --> 00:33:53,679
zero zero

617
00:33:53,679 --> 00:33:56,480
this character is considered badly

618
00:33:56,480 --> 00:33:58,960
because a nubrite is also used to

619
00:33:58,960 --> 00:34:01,600
terminate a single copy operation

620
00:34:01,600 --> 00:34:04,399
which will introduce our buffer whenever

621
00:34:04,399 --> 00:34:07,279
we see a number japanese

622
00:34:07,279 --> 00:34:08,879
so

623
00:34:08,879 --> 00:34:11,280
has some values

624
00:34:11,280 --> 00:34:12,960
that for

625
00:34:12,960 --> 00:34:15,520
our vulnerable software are considered

626
00:34:15,520 --> 00:34:16,960
bad

627
00:34:16,960 --> 00:34:20,280
for this

628
00:34:26,000 --> 00:34:28,960
for this we will send against the target

629
00:34:28,960 --> 00:34:32,399
this value is since zero up f

630
00:34:32,399 --> 00:34:35,679
to see if you cause some error

631
00:34:35,679 --> 00:34:37,760
in our target

632
00:34:37,760 --> 00:34:40,399
we want to change zero zero because i

633
00:34:40,399 --> 00:34:42,639
already know that zero zero is a very

634
00:34:42,639 --> 00:34:44,320
characteristic

635
00:34:44,320 --> 00:34:45,918
but already

636
00:34:45,918 --> 00:34:48,879
we we needed to know if he existed

637
00:34:48,879 --> 00:34:52,319
others bad characters

638
00:34:52,480 --> 00:34:57,040
for this we will send the scenes 0 up ff

639
00:34:57,040 --> 00:34:58,640
against the target

640
00:34:58,640 --> 00:35:03,640
for seeing focus others errors

641
00:35:06,880 --> 00:35:09,839
if of course others errors mean that it

642
00:35:09,839 --> 00:35:14,079
exists others made characters

643
00:35:14,079 --> 00:35:16,240
we need to find the medicare test

644
00:35:16,240 --> 00:35:19,279
because after

645
00:35:20,079 --> 00:35:22,880
after we

646
00:35:24,480 --> 00:35:28,000
after we generate a shell code without

647
00:35:28,000 --> 00:35:30,880
belly characters we need to generate our

648
00:35:30,880 --> 00:35:33,839
show called together shell without the

649
00:35:33,839 --> 00:35:36,960
better characters

650
00:35:37,760 --> 00:35:40,880
here we have other agency which you

651
00:35:40,880 --> 00:35:41,760
would

652
00:35:41,760 --> 00:35:43,760
press payout to

653
00:35:43,760 --> 00:35:45,920
this means that afterwards rule to

654
00:35:45,920 --> 00:35:48,720
become our shell code

655
00:35:48,720 --> 00:35:51,200
after which would you come out pay all

656
00:35:51,200 --> 00:35:53,040
the two percent two equals many

657
00:35:53,040 --> 00:35:54,560
characters

658
00:35:54,560 --> 00:35:57,200
now we put bad characters but after we

659
00:35:57,200 --> 00:35:59,680
put our shell code

660
00:35:59,680 --> 00:36:03,879
save the expired code

661
00:36:13,440 --> 00:36:17,599
let's restart the debugger

662
00:36:36,079 --> 00:36:38,480
go to expression put a bracket point

663
00:36:38,480 --> 00:36:40,720
epoxy

664
00:36:40,720 --> 00:36:43,359
 pointy puppy ci

665
00:36:43,359 --> 00:36:46,480
right button puppy ci break point toggle

666
00:36:46,480 --> 00:36:50,760
put your blackie puppy poppy

667
00:36:54,000 --> 00:36:57,839
put a bucket party puppy ci

668
00:37:03,599 --> 00:37:06,240
now let's

669
00:37:06,240 --> 00:37:09,520
execute our exploit code title x connect

670
00:37:09,520 --> 00:37:11,680
on 5

671
00:37:11,680 --> 00:37:15,839
execute our exploit code

672
00:37:21,760 --> 00:37:23,839
we have access relation press

673
00:37:23,839 --> 00:37:26,880
acceleration shift f7

674
00:37:26,880 --> 00:37:31,560
shift f7 to pass acceleration

675
00:37:36,320 --> 00:37:41,160
and the press f9 or

676
00:37:51,280 --> 00:37:52,880
press f9

677
00:37:52,880 --> 00:37:55,440
we follow out in pci

678
00:37:55,440 --> 00:37:59,520
press breaking point of f7 f7

679
00:37:59,520 --> 00:38:02,880
f7 f7

680
00:38:03,680 --> 00:38:08,480
press poppy syphopdi return f7 f7

681
00:38:08,480 --> 00:38:10,880
execute the pop pop return it throw out

682
00:38:10,880 --> 00:38:13,520
in oops press loops and enjoy

683
00:38:13,520 --> 00:38:17,119
jump shot of f7

684
00:38:17,359 --> 00:38:20,560
pass our loops loops and jump short of

685
00:38:20,560 --> 00:38:22,240
f7

686
00:38:22,240 --> 00:38:27,040
here we have a small piece of shell code

687
00:38:27,119 --> 00:38:30,160
this small piece of shell called is our

688
00:38:30,160 --> 00:38:31,680
eggy hunter

689
00:38:31,680 --> 00:38:34,640
again this small piece of shell code is

690
00:38:34,640 --> 00:38:37,440
our egg hunter that we will have

691
00:38:37,440 --> 00:38:39,760
directors for a bigger space

692
00:38:39,760 --> 00:38:42,240
where in this bigger space we put our

693
00:38:42,240 --> 00:38:44,720
shell code together shell

694
00:38:44,720 --> 00:38:47,280
right button scans bracket point toggle

695
00:38:47,280 --> 00:38:50,480
let's put a back point in scans

696
00:38:50,480 --> 00:38:53,040
put your breakpoint in scans to see what

697
00:38:53,040 --> 00:38:54,000
is

698
00:38:54,000 --> 00:38:56,640
in scans

699
00:38:56,640 --> 00:38:58,839
click button

700
00:38:58,839 --> 00:39:01,680
run clicking button run

701
00:39:01,680 --> 00:39:05,040
to running the vulnerable software

702
00:39:05,040 --> 00:39:07,839
the flow of execution with stopping is

703
00:39:07,839 --> 00:39:09,040
scans

704
00:39:09,040 --> 00:39:13,119
flow of execution will stop and scans

705
00:39:13,119 --> 00:39:16,560
write the button in edx

706
00:39:16,560 --> 00:39:19,680
write the button in the x4c what is in

707
00:39:19,680 --> 00:39:22,480
the x following them

708
00:39:22,480 --> 00:39:27,119
and as we can see we have here root

709
00:39:27,119 --> 00:39:29,760
we have a value here altitude

710
00:39:29,760 --> 00:39:31,920
this indicates that after

711
00:39:31,920 --> 00:39:36,720
this would will come our shell code

712
00:39:36,720 --> 00:39:39,520
after root would come our shell code

713
00:39:39,520 --> 00:39:40,720
will

714
00:39:40,720 --> 00:39:43,280
execute jump pdi

715
00:39:43,280 --> 00:39:45,920
will execute jump pdi

716
00:39:45,920 --> 00:39:47,839
and follow out in our banished

717
00:39:47,839 --> 00:39:49,119
characters

718
00:39:49,119 --> 00:39:51,280
we have here zero one zero two zero

719
00:39:51,280 --> 00:39:53,440
three zero five zero five zero zero

720
00:39:53,440 --> 00:39:56,480
seven eight nine

721
00:40:09,520 --> 00:40:11,040
since 01

722
00:40:11,040 --> 00:40:12,720
up f

723
00:40:12,720 --> 00:40:16,480
c 01 up f

724
00:40:16,480 --> 00:40:19,440
for c if requires some error informable

725
00:40:19,440 --> 00:40:20,880
software

726
00:40:20,880 --> 00:40:24,079
as we can see we have a

727
00:40:24,079 --> 00:40:25,760
all these values

728
00:40:25,760 --> 00:40:27,359
since 01

729
00:40:27,359 --> 00:40:28,960
up f

730
00:40:28,960 --> 00:40:30,240
we have

731
00:40:30,240 --> 00:40:35,119
all this value since 01 up f

732
00:40:35,119 --> 00:40:37,200
this means that we don't have a more

733
00:40:37,200 --> 00:40:38,560
error

734
00:40:38,560 --> 00:40:41,280
so this means that the unique

735
00:40:41,280 --> 00:40:44,560
better characters is a zero zero

736
00:40:44,560 --> 00:40:46,800
as we can see we have here

737
00:40:46,800 --> 00:40:50,000
all these characters since zero

738
00:40:50,000 --> 00:40:51,839
f

739
00:40:51,839 --> 00:40:55,200
that means that we don't have others

740
00:40:55,200 --> 00:40:57,359
betty characters

741
00:40:57,359 --> 00:40:58,960
build the

742
00:40:58,960 --> 00:41:00,560
zero zero

743
00:41:00,560 --> 00:41:04,240
so let's we need to generate our shall

744
00:41:04,240 --> 00:41:07,839
cody we need to generate our shell code

745
00:41:07,839 --> 00:41:11,839
just without zero zero

746
00:41:11,839 --> 00:41:16,078
so let's restart the monarch debugger

747
00:41:19,359 --> 00:41:23,279
let's restart the middle of the burger

748
00:41:26,400 --> 00:41:28,560
run the vanilla soft mother debugger

749
00:41:28,560 --> 00:41:31,560
again

750
00:41:38,319 --> 00:41:41,040
write the button go to expression

751
00:41:41,040 --> 00:41:44,400
let's find a poppy ci poppy guy return

752
00:41:44,400 --> 00:41:47,200
let's write both in puppy ci

753
00:41:47,200 --> 00:41:49,200
bracket point

754
00:41:49,200 --> 00:41:51,680
toggle

755
00:41:52,720 --> 00:41:57,000
put a bracket point to pop pci

756
00:42:02,319 --> 00:42:06,400
let's open the sprite code

757
00:42:09,040 --> 00:42:11,760
now let's edit the shell code let's

758
00:42:11,760 --> 00:42:14,160
select this old shell code

759
00:42:14,160 --> 00:42:17,280
to put in this place our new shell code

760
00:42:17,280 --> 00:42:21,839
for generator if i generate our

761
00:42:22,319 --> 00:42:28,520
neutral code we use a two msf vino

762
00:42:30,560 --> 00:42:33,060
you use a 2msf venom

763
00:42:33,060 --> 00:42:35,920
[Music]

764
00:42:35,920 --> 00:42:38,880
for generate

765
00:42:42,319 --> 00:42:45,839
our new shell code

766
00:43:00,240 --> 00:43:06,240
let's use a 2msf window to generate our

767
00:43:06,240 --> 00:43:07,760
new shell code

768
00:43:07,760 --> 00:43:10,960
you must type messagevino

769
00:43:10,960 --> 00:43:15,760
a octet x86 dash dash platform windows

770
00:43:15,760 --> 00:43:19,200
lcp payload window shelly versus tcp

771
00:43:19,200 --> 00:43:22,240
eddy horse lock ip party for lithium

772
00:43:22,240 --> 00:43:24,720
part five five five five

773
00:43:24,720 --> 00:43:27,720
dashes

774
00:43:39,200 --> 00:43:41,599
there should be avoiding body character

775
00:43:41,599 --> 00:43:42,960
0 0

776
00:43:42,960 --> 00:43:44,319
so

777
00:43:44,319 --> 00:43:45,920
here we put

778
00:43:45,920 --> 00:43:47,119
dash b

779
00:43:47,119 --> 00:43:50,000
body characters avoided by the character

780
00:43:50,000 --> 00:43:52,079
0 0

781
00:43:52,079 --> 00:43:55,119
we will generate our shell coil we will

782
00:43:55,119 --> 00:43:57,200
generate our shell code

783
00:43:57,200 --> 00:44:00,960
avoiding by the character zero zero

784
00:44:00,960 --> 00:44:03,359
because this unique very characteristic

785
00:44:03,359 --> 00:44:06,319
for our vulnerable software is a zero

786
00:44:06,319 --> 00:44:07,599
zero

787
00:44:07,599 --> 00:44:10,480
so we generated

788
00:44:10,480 --> 00:44:12,960
our shell code avoiding by the

789
00:44:12,960 --> 00:44:14,319
characters

790
00:44:14,319 --> 00:44:17,720
zero zero

791
00:44:46,720 --> 00:44:49,119
we have variable crusher

792
00:44:49,119 --> 00:44:51,359
character a multiplied by

793
00:44:51,359 --> 00:44:53,119
officer

794
00:44:53,119 --> 00:44:58,160
plus nsc 8 plus 68 plus 9 loops plus 800

795
00:44:58,160 --> 00:44:59,839
plus loops

796
00:44:59,839 --> 00:45:04,799
in the below we have a variable period 2

797
00:45:05,630 --> 00:45:08,719
[Music]

798
00:45:16,079 --> 00:45:20,160
we have nsc8 our jump charge

799
00:45:20,160 --> 00:45:24,400
the b06 is our jump shot

800
00:45:24,400 --> 00:45:29,200
sc8 our new canopy our pop-up return

801
00:45:29,200 --> 00:45:33,839
sc8 our pop-up return

802
00:45:38,160 --> 00:45:41,760
sc8 our pop-up return

803
00:45:41,760 --> 00:45:44,880
we have our egg hunter remember that

804
00:45:44,880 --> 00:45:47,440
aggie hunter is small piece of shell

805
00:45:47,440 --> 00:45:49,280
cody that will have directors for a

806
00:45:49,280 --> 00:45:50,800
bigger space

807
00:45:50,800 --> 00:45:52,720
where in this bigger space we put our

808
00:45:52,720 --> 00:45:55,439
shell code

809
00:45:59,040 --> 00:46:02,480
so let's copy let's copy our new shell

810
00:46:02,480 --> 00:46:06,640
code in the paste in our exploit code

811
00:46:10,720 --> 00:46:14,040
copy selection

812
00:46:16,400 --> 00:46:21,040
and write a button paste selection

813
00:46:21,520 --> 00:46:26,000
paste our new shell code

814
00:46:26,800 --> 00:46:30,839
in know exploit the code

815
00:46:42,079 --> 00:46:43,440
have here

816
00:46:43,440 --> 00:46:46,880
payload 2 equals both our shall code

817
00:46:46,880 --> 00:46:50,000
below we have period equals other hd

818
00:46:50,000 --> 00:46:51,599
ultimate

819
00:46:51,599 --> 00:46:55,040
after all to come out period 2

820
00:46:55,040 --> 00:46:58,960
two equals birth buffs as our shell code

821
00:46:58,960 --> 00:47:01,839
so after

822
00:47:02,400 --> 00:47:05,760
we the root will execute our payload two

823
00:47:05,760 --> 00:47:09,280
period two is because birth but fee is

824
00:47:09,280 --> 00:47:13,520
our show called together versus shell

825
00:47:19,040 --> 00:47:21,920
so now let's execute our meta sprite

826
00:47:21,920 --> 00:47:23,359
framework

827
00:47:23,359 --> 00:47:26,000
to listen point five five five five wait

828
00:47:26,000 --> 00:47:28,160
for connected back

829
00:47:28,160 --> 00:47:31,680
execute msf console

830
00:47:31,680 --> 00:47:34,640
let's configure

831
00:47:35,040 --> 00:47:39,079
our meta sprite framework

832
00:47:49,119 --> 00:47:51,200
let's configure our metasplaster

833
00:47:51,200 --> 00:47:52,559
framework

834
00:47:52,559 --> 00:47:56,240
use multi-handler

835
00:47:57,040 --> 00:48:00,559
setup multiplied framework set payload

836
00:48:00,559 --> 00:48:02,880
windows shell

837
00:48:02,880 --> 00:48:06,359
reverse tcp

838
00:48:17,760 --> 00:48:20,760
localhost

839
00:48:23,200 --> 00:48:26,000
our ip

840
00:48:28,160 --> 00:48:31,119
we configure our metasploit framework to

841
00:48:31,119 --> 00:48:34,880
listing on part five five five five

842
00:48:34,880 --> 00:48:37,359
for our lock ib

843
00:48:37,359 --> 00:48:39,040
using a payroll the windows share

844
00:48:39,040 --> 00:48:40,800
reverse tcp

845
00:48:40,800 --> 00:48:43,520
tell any part

846
00:48:43,520 --> 00:48:48,839
of local part five five five five

847
00:48:50,000 --> 00:48:54,000
and the security exploit

848
00:48:59,119 --> 00:49:01,200
execute exploit so

849
00:49:01,200 --> 00:49:04,160
now let's execute our exploit code if

850
00:49:04,160 --> 00:49:06,880
title x collector 6

851
00:49:06,880 --> 00:49:08,880
execute our

852
00:49:08,880 --> 00:49:11,920
exploit code

853
00:49:13,920 --> 00:49:17,040
we have the axe violation pass access

854
00:49:17,040 --> 00:49:19,680
violation shift f7

855
00:49:19,680 --> 00:49:22,160
the flow of execute is positive

856
00:49:22,160 --> 00:49:24,480
we have acceleration passed actually

857
00:49:24,480 --> 00:49:27,760
with 57

858
00:49:29,760 --> 00:49:31,920
shift f7 and it

859
00:49:31,920 --> 00:49:35,280
press f9

860
00:49:35,280 --> 00:49:38,079
or clicking button run

861
00:49:38,079 --> 00:49:40,559
flow of execution

862
00:49:40,559 --> 00:49:42,960
now is stopped

863
00:49:42,960 --> 00:49:44,960
in public ci

864
00:49:44,960 --> 00:49:48,160
we have stopped in bracket point pop ci

865
00:49:48,160 --> 00:49:51,599
pass for pci the i in the return if f7

866
00:49:51,599 --> 00:49:52,800
f7

867
00:49:52,800 --> 00:49:56,960
f7 to execute pop pop returning

868
00:49:56,960 --> 00:50:00,640
we follow out in groups we will pass

869
00:50:00,640 --> 00:50:04,000
looping p with f7 f7

870
00:50:04,000 --> 00:50:04,720
and

871
00:50:04,720 --> 00:50:11,720
jump charge if b06 will pass with f7

872
00:50:12,160 --> 00:50:16,240
f7 f7 f7 pass jump short

873
00:50:16,240 --> 00:50:19,440
we'll follow out in our aggie hunter we

874
00:50:19,440 --> 00:50:21,440
have a small piece of shell called the

875
00:50:21,440 --> 00:50:24,160
aggie hunter we put right button in

876
00:50:24,160 --> 00:50:25,760
scans

877
00:50:25,760 --> 00:50:28,079
back punch toggle

878
00:50:28,079 --> 00:50:28,880
to

879
00:50:28,880 --> 00:50:32,160
stop the flow of execution scans

880
00:50:32,160 --> 00:50:35,200
clicking button run

881
00:50:36,400 --> 00:50:38,480
button run

882
00:50:38,480 --> 00:50:41,920
to continually flow of execution

883
00:50:41,920 --> 00:50:43,680
stopped in scans

884
00:50:43,680 --> 00:50:47,040
right about in the x

885
00:50:49,200 --> 00:50:52,240
right but in the x following them

886
00:50:52,240 --> 00:50:55,520
here we have our root

887
00:50:55,520 --> 00:50:58,000
this indicates that after

888
00:50:58,000 --> 00:51:00,240
after this watch

889
00:51:00,240 --> 00:51:02,160
will execute

890
00:51:02,160 --> 00:51:04,160
our shell code

891
00:51:04,160 --> 00:51:06,960
this means that after our

892
00:51:06,960 --> 00:51:08,640
root

893
00:51:08,640 --> 00:51:12,240
will execute our shell code because

894
00:51:12,240 --> 00:51:14,800
any aggie hunter is a small piece of

895
00:51:14,800 --> 00:51:17,520
shell code that will have directors

896
00:51:17,520 --> 00:51:19,200
for a bigger space

897
00:51:19,200 --> 00:51:21,359
where in this bigger space here

898
00:51:21,359 --> 00:51:24,319
in this bigger spaces will execute our

899
00:51:24,319 --> 00:51:27,040
shell code

900
00:51:27,760 --> 00:51:33,680
press f7 f7 jump pdi with f7

901
00:51:33,680 --> 00:51:37,799
jump the i with f7

902
00:51:38,480 --> 00:51:40,559
and now we have

903
00:51:40,559 --> 00:51:43,079
d8dc

904
00:51:43,079 --> 00:51:47,599
d975 this is our shell code

905
00:51:47,599 --> 00:51:50,720
our shell code as we can see in our

906
00:51:50,720 --> 00:51:53,919
exploit code

907
00:51:54,880 --> 00:51:58,480
as we can see in our exploited code

908
00:51:58,480 --> 00:52:05,240
we have here our shell code da dc d974

909
00:52:06,720 --> 00:52:09,520
and we can see in our

910
00:52:09,520 --> 00:52:12,960
flow of execution of enable software the

911
00:52:12,960 --> 00:52:15,680
adcd974

912
00:52:15,680 --> 00:52:19,119
is our shell code click button run

913
00:52:19,119 --> 00:52:22,160
to execute the flow of execution to pass

914
00:52:22,160 --> 00:52:26,720
flow of execution clicking button run

915
00:52:27,359 --> 00:52:31,960
and do we have a meta sprite

916
00:52:33,280 --> 00:52:36,160
we have a metasploiter versus shell

917
00:52:36,160 --> 00:52:39,200
we got a shell

918
00:52:40,319 --> 00:52:41,200
so

919
00:52:41,200 --> 00:52:44,319
we can type net user to see the user of

920
00:52:44,319 --> 00:52:48,160
victim user hotdogs and administrator

921
00:52:48,160 --> 00:52:50,720
user of the victim

922
00:52:50,720 --> 00:52:52,200
you can type

923
00:52:52,200 --> 00:52:53,839
ipconfig

924
00:52:53,839 --> 00:52:57,759
for a cd ip of the victim

925
00:52:58,559 --> 00:53:01,839
is it

926
00:53:03,119 --> 00:53:06,240
so as we can see we have here in this

927
00:53:06,240 --> 00:53:08,000
slides

928
00:53:08,000 --> 00:53:10,079
step by step

929
00:53:10,079 --> 00:53:12,640
of how you can write the wrong spot code

930
00:53:12,640 --> 00:53:15,440
using

931
00:53:15,440 --> 00:53:18,640
i see e8 of variety with egg hunter

932
00:53:18,640 --> 00:53:20,640
technique

933
00:53:20,640 --> 00:53:22,079
remember

934
00:53:22,079 --> 00:53:26,160
that this egg hunter is small piece

935
00:53:26,160 --> 00:53:28,400
of the shell called that the wheel head

936
00:53:28,400 --> 00:53:31,200
directors for a bigger space

937
00:53:31,200 --> 00:53:33,839
where in this bigger space we can put

938
00:53:33,839 --> 00:53:36,800
our shell point to get the voice shell

939
00:53:36,800 --> 00:53:40,240
and the body characters should be fined

940
00:53:40,240 --> 00:53:43,280
should be

941
00:53:43,280 --> 00:53:45,920
we must change against the target

942
00:53:45,920 --> 00:53:49,599
this character sees the role of ffs

943
00:53:49,599 --> 00:53:51,040
to find it

944
00:53:51,040 --> 00:53:53,920
what is this bad characters for this

945
00:53:53,920 --> 00:53:55,839
vulnerable software

946
00:53:55,839 --> 00:53:58,160
because we need to avoid debate

947
00:53:58,160 --> 00:54:01,599
characters when we generate our shell

948
00:54:01,599 --> 00:54:02,559
code

949
00:54:02,559 --> 00:54:05,599
so we need to generate our shell code

950
00:54:05,599 --> 00:54:08,720
without the body characters

951
00:54:08,720 --> 00:54:10,879
for

952
00:54:23,119 --> 00:54:26,559
link for foreign slide for who won't

953
00:54:26,559 --> 00:54:28,720
reproduce

954
00:54:28,720 --> 00:54:31,280
this pokey you can

955
00:54:31,280 --> 00:54:33,599
download this slides

956
00:54:33,599 --> 00:54:37,119
on my linkedin profile

957
00:54:37,119 --> 00:54:40,319
and the executive the step by step of

958
00:54:40,319 --> 00:54:43,200
how can write a works party called using

959
00:54:43,200 --> 00:54:48,160
ic8 or variety with any hunter technique

960
00:54:48,160 --> 00:54:50,720
now i all prefer the questions

961
00:54:50,720 --> 00:54:53,839
thank you very much

