1
00:00:00,030 --> 00:00:03,300
hi guys yeah so I'm saying design I work

2
00:00:03,300 --> 00:00:07,020
for BSI part of the security team

3
00:00:07,020 --> 00:00:10,170
so before I start this up I'd like to

4
00:00:10,170 --> 00:00:15,240
thank you three or four senior

5
00:00:15,240 --> 00:00:17,400
consultants and one of them it's ham joy

6
00:00:17,400 --> 00:00:19,590
you're probably on them from spec tops

7
00:00:19,590 --> 00:00:24,060
and Ben Campbell from MWR as well as

8
00:00:24,060 --> 00:00:26,519
impact group for kicking off this

9
00:00:26,519 --> 00:00:28,949
project and the idea behind this project

10
00:00:28,949 --> 00:00:32,610
is to actually demonstrate what could be

11
00:00:32,610 --> 00:00:34,950
achieved through the curve US delegation

12
00:00:34,950 --> 00:00:38,370
attack if there's any questions that you

13
00:00:38,370 --> 00:00:40,230
have during the during the going through

14
00:00:40,230 --> 00:00:42,180
the slides you can obviously stop me I'm

15
00:00:42,180 --> 00:00:45,180
cool we can maybe discuss at the end in

16
00:00:45,180 --> 00:00:50,750
any case you can start many time so

17
00:00:50,750 --> 00:00:53,460
what's the agenda today we're gonna be

18
00:00:53,460 --> 00:00:56,090
talking about the current state of the

19
00:00:56,090 --> 00:01:00,469
sorry current state of Active Directory

20
00:01:00,680 --> 00:01:03,539
we briefly discuss what's Kerberos

21
00:01:03,539 --> 00:01:07,590
authentication how it works then we

22
00:01:07,590 --> 00:01:11,990
talked about the type of Kerberos

23
00:01:11,990 --> 00:01:14,729
delegations so resource base and

24
00:01:14,729 --> 00:01:16,259
strength and constraint delegation so

25
00:01:16,259 --> 00:01:18,060
you talked about each of them and how we

26
00:01:18,060 --> 00:01:23,549
can abuse then we talked about two

27
00:01:23,549 --> 00:01:27,150
interesting concept which is the S for

28
00:01:27,150 --> 00:01:30,900
yourself and SS for you to proxy some of

29
00:01:30,900 --> 00:01:32,280
you probably are pen testers already

30
00:01:32,280 --> 00:01:35,070
done this too many times and then we

31
00:01:35,070 --> 00:01:38,159
talked about the IP version 6 minor

32
00:01:38,159 --> 00:01:41,100
element middle attack I know the focus

33
00:01:41,100 --> 00:01:45,720
is now it's mostly only ipv4 but ipv6 is

34
00:01:45,720 --> 00:01:48,090
interesting area where more research is

35
00:01:48,090 --> 00:01:53,810
actually required then we'll discuss the

36
00:01:53,810 --> 00:01:57,060
how to abuse a computer account and use

37
00:01:57,060 --> 00:01:59,729
that as a impersonating another account

38
00:01:59,729 --> 00:02:01,079
within the Windows Active Directory

39
00:02:01,079 --> 00:02:04,829
environment we use once we've kind of

40
00:02:04,829 --> 00:02:07,020
gone through that we talked about ways

41
00:02:07,020 --> 00:02:13,500
of using impacts and key tab as well as

42
00:02:13,500 --> 00:02:15,810
necks and windows demonstrates the

43
00:02:15,810 --> 00:02:18,540
attack how the attack actually work what

44
00:02:18,540 --> 00:02:19,260
we could do with it

45
00:02:19,260 --> 00:02:22,530
should we compromised a account with a

46
00:02:22,530 --> 00:02:26,490
delegation privilege and then further

47
00:02:26,490 --> 00:02:29,209
than that so we'll do the same with a

48
00:02:29,209 --> 00:02:33,300
rebus which is passive part of the gust

49
00:02:33,300 --> 00:02:39,690
back from spec tops using that to do a

50
00:02:39,690 --> 00:02:42,810
post exploitation and then finally we'll

51
00:02:42,810 --> 00:02:45,560
find out whether we can from the

52
00:02:45,560 --> 00:02:49,250
compromising and abuse account to pass

53
00:02:49,250 --> 00:02:53,130
to RDP which essentially using Purvis to

54
00:02:53,130 --> 00:02:56,580
authenticate to the target server using

55
00:02:56,580 --> 00:02:59,010
keys as opposed to actually username and

56
00:02:59,010 --> 00:03:04,560
password so current state of Active

57
00:03:04,560 --> 00:03:07,200
Directory things are getting better

58
00:03:07,200 --> 00:03:10,470
obviously in terms of the awareness of

59
00:03:10,470 --> 00:03:12,690
the importance of Active Directory why

60
00:03:12,690 --> 00:03:14,430
it's important to have in a secure

61
00:03:14,430 --> 00:03:17,730
Active Directory and there's been a lot

62
00:03:17,730 --> 00:03:21,269
of research around half the sku Active

63
00:03:21,269 --> 00:03:24,480
Directory there's a lot of now pentoses

64
00:03:24,480 --> 00:03:27,299
red teamers admins actually know how to

65
00:03:27,299 --> 00:03:30,480
go about looking up the resource and and

66
00:03:30,480 --> 00:03:34,130
applying the best practices having aged

67
00:03:34,130 --> 00:03:37,530
better Active Directory security as well

68
00:03:37,530 --> 00:03:40,010
as in from the testing perspective

69
00:03:40,010 --> 00:03:42,390
there's a list of checklist now you can

70
00:03:42,390 --> 00:03:44,459
go through and then ensure that so at

71
00:03:44,459 --> 00:03:45,989
least Active Directory in a good state

72
00:03:45,989 --> 00:03:51,180
of practice things are changed in the

73
00:03:51,180 --> 00:03:52,790
industry there's we see a lot of

74
00:03:52,790 --> 00:03:57,060
principle based privilege so near week

75
00:03:57,060 --> 00:04:00,329
we see less admins generally depending

76
00:04:00,329 --> 00:04:01,980
where you are testing and which

77
00:04:01,980 --> 00:04:03,900
environment you in but generally

78
00:04:03,900 --> 00:04:06,150
speaking that there's less admins if

79
00:04:06,150 --> 00:04:09,739
security best practices being applied

80
00:04:10,370 --> 00:04:15,989
lucky that we see less llm on our so way

81
00:04:15,989 --> 00:04:19,769
of relating credentials to compromise a

82
00:04:19,769 --> 00:04:26,010
box or at least obtain ntlm network

83
00:04:26,010 --> 00:04:27,270
level ntlm authentication

84
00:04:27,270 --> 00:04:28,919
then you can decrypt that we see that

85
00:04:28,919 --> 00:04:31,229
less I'm not going to detail so Helen

86
00:04:31,229 --> 00:04:35,030
Eman ours very old there's more

87
00:04:35,030 --> 00:04:37,590
implementation of labs which is the

88
00:04:37,590 --> 00:04:41,370
local administration password so

89
00:04:41,370 --> 00:04:44,009
essentially back in the days well at

90
00:04:44,009 --> 00:04:47,250
least in some places a workstation all

91
00:04:47,250 --> 00:04:49,229
have the same username and password so

92
00:04:49,229 --> 00:04:51,780
you can capture one of the passwords and

93
00:04:51,780 --> 00:04:54,000
then do lateral movement with that lapse

94
00:04:54,000 --> 00:04:57,000
we see now it's more deployed within the

95
00:04:57,000 --> 00:05:00,240
environments that's each workstation has

96
00:05:00,240 --> 00:05:04,319
a random password so even if you

97
00:05:04,319 --> 00:05:05,729
compromised a box through fishing

98
00:05:05,729 --> 00:05:08,520
through whatever we find in we actually

99
00:05:08,520 --> 00:05:10,979
compromised them you'll be more more

100
00:05:10,979 --> 00:05:13,080
than likely controlled in would consider

101
00:05:13,080 --> 00:05:14,970
constraint within one environment one

102
00:05:14,970 --> 00:05:20,940
within one workstation we see PowerShell

103
00:05:20,940 --> 00:05:23,280
it's being the focus we all know that

104
00:05:23,280 --> 00:05:26,039
fashion is dead in terms of attack

105
00:05:26,039 --> 00:05:28,289
vectors and for red teamers and it's not

106
00:05:28,289 --> 00:05:30,599
see sharpens focuses back back to the

107
00:05:30,599 --> 00:05:33,750
native language there's a lot of logging

108
00:05:33,750 --> 00:05:38,669
with PowerShell vv5 and we see that you

109
00:05:38,669 --> 00:05:40,770
know often that this technical controls

110
00:05:40,770 --> 00:05:42,840
are in place now you can just actually

111
00:05:42,840 --> 00:05:46,380
run our view and then expect to be you

112
00:05:46,380 --> 00:05:48,990
know getting data back well you do some

113
00:05:48,990 --> 00:05:53,699
time and we go and we have a mess I just

114
00:05:53,699 --> 00:05:56,400
part of the defender you know scripts

115
00:05:56,400 --> 00:06:00,569
are decrypted before runtime so you get

116
00:06:00,569 --> 00:06:03,240
you know blocks all the science we have

117
00:06:03,240 --> 00:06:06,240
to but there's a way around it but you

118
00:06:06,240 --> 00:06:07,889
know if you're lucky if you are

119
00:06:07,889 --> 00:06:09,300
compromised with PowerShell because you

120
00:06:09,300 --> 00:06:12,870
know what happens and there's better

121
00:06:12,870 --> 00:06:14,610
kind of monitoring employees security

122
00:06:14,610 --> 00:06:18,509
operations generally speaking the things

123
00:06:18,509 --> 00:06:21,210
actually moves fast and things that are

124
00:06:21,210 --> 00:06:24,090
getting better so that leaves us as a

125
00:06:24,090 --> 00:06:26,090
security test suspense assess readiness

126
00:06:26,090 --> 00:06:27,750
you know how could we actually

127
00:06:27,750 --> 00:06:30,449
compromise a domain controller and have

128
00:06:30,449 --> 00:06:36,110
da doesn't have to be da but yeah so

129
00:06:36,110 --> 00:06:38,159
briefly talking about Kerberos

130
00:06:38,159 --> 00:06:41,190
authentication there's this

131
00:06:41,190 --> 00:06:43,020
her boss is actually authorization

132
00:06:43,020 --> 00:06:46,340
protocol it's not sent occation protocol

133
00:06:46,340 --> 00:06:50,100
it allows you know identify each user

134
00:06:50,100 --> 00:06:53,250
based on their secret or username

135
00:06:53,250 --> 00:06:56,820
it doesn't care about authorization at

136
00:06:56,820 --> 00:06:59,270
hope that's not care versus

137
00:06:59,270 --> 00:07:00,450
responsibility

138
00:07:00,450 --> 00:07:04,710
Kerberos has an agent which is based

139
00:07:04,710 --> 00:07:08,760
could be the client that could be a your

140
00:07:08,760 --> 00:07:10,560
workstations like speak to the kerbals

141
00:07:10,560 --> 00:07:13,020
or it could be your user you type in a

142
00:07:13,020 --> 00:07:14,580
username and password but that could be

143
00:07:14,580 --> 00:07:16,920
a client there's another parts of care

144
00:07:16,920 --> 00:07:19,950
versus application which offers the

145
00:07:19,950 --> 00:07:23,370
service that you access to the service

146
00:07:23,370 --> 00:07:27,360
could be a file share CI a-- CIFS

147
00:07:27,360 --> 00:07:31,470
similar to SMB the the main core of

148
00:07:31,470 --> 00:07:34,980
Kerberos authentication is KDC key

149
00:07:34,980 --> 00:07:37,380
distribution center which essentially

150
00:07:37,380 --> 00:07:42,060
you know provides tickets and validates

151
00:07:42,060 --> 00:07:45,480
tickets as well the main structure of

152
00:07:45,480 --> 00:07:48,000
the Kerberos authentication when it

153
00:07:48,000 --> 00:07:52,290
comes to tickets there's a TGT TGS take

154
00:07:52,290 --> 00:07:54,240
the granting tickets which is

155
00:07:54,240 --> 00:07:58,740
essentially a proof the proof of a

156
00:07:58,740 --> 00:08:04,320
client identity and the TGS is once you

157
00:08:04,320 --> 00:08:06,450
have it PGT then you cannot obviously

158
00:08:06,450 --> 00:08:09,419
ask for TGS which is ticket granting

159
00:08:09,419 --> 00:08:13,620
service access in a service so that's

160
00:08:13,620 --> 00:08:15,930
you know services more than that you all

161
00:08:15,930 --> 00:08:20,040
know that but just a slight curve with

162
00:08:20,040 --> 00:08:22,590
an action what happens when we for

163
00:08:22,590 --> 00:08:24,980
example I log into my workstation today

164
00:08:24,980 --> 00:08:31,860
I said my the krb is rack which contains

165
00:08:31,860 --> 00:08:33,900
my passwords with the timestamp

166
00:08:33,900 --> 00:08:40,559
encrypted to the KDC the KDC KDC has the

167
00:08:40,559 --> 00:08:44,219
something known as they are krbtgt which

168
00:08:44,219 --> 00:08:46,860
is Kerberos ticket granting ticket as a

169
00:08:46,860 --> 00:08:47,580
master key

170
00:08:47,580 --> 00:08:51,300
having that then the it can actually

171
00:08:51,300 --> 00:08:53,700
validate that ticket by decrypting that

172
00:08:53,700 --> 00:08:55,100
ticket whether that ticket is valid

173
00:08:55,100 --> 00:08:57,440
if it's valid then it sends back the krb

174
00:08:57,440 --> 00:09:02,899
is a a threat so at that point GGG

175
00:09:02,899 --> 00:09:05,630
actually he's been so taken grounded

176
00:09:05,630 --> 00:09:08,329
tickets there uses identities been

177
00:09:08,329 --> 00:09:16,069
proved having access in a PGs accessing

178
00:09:16,069 --> 00:09:19,670
a service then you need a TGT so once

179
00:09:19,670 --> 00:09:24,079
you have a TGT then you can request a kr

180
00:09:24,079 --> 00:09:25,069
be here underscore

181
00:09:25,069 --> 00:09:31,160
TG s rep and that way it's the KDC again

182
00:09:31,160 --> 00:09:35,980
validates whether that you have a

183
00:09:36,370 --> 00:09:39,350
privileges within basically within the

184
00:09:39,350 --> 00:09:42,319
KR b TG request there's a pack within

185
00:09:42,319 --> 00:09:43,690
that park there is a privilege

186
00:09:43,690 --> 00:09:46,040
attributes what rights you have on the

187
00:09:46,040 --> 00:09:49,790
service that you like to access having

188
00:09:49,790 --> 00:09:53,329
that and that's KDC actually validates

189
00:09:53,329 --> 00:09:55,430
whether you have that right or not and

190
00:09:55,430 --> 00:09:59,269
it sends back the KR k r ba ap request

191
00:09:59,269 --> 00:10:04,190
rec which is essentially it's this is

192
00:10:04,190 --> 00:10:07,180
where you're where you get your TGS

193
00:10:07,180 --> 00:10:12,829
validated and after that this I kind of

194
00:10:12,829 --> 00:10:15,260
two more steps which is from the axe

195
00:10:15,260 --> 00:10:19,490
like from the application point of view

196
00:10:19,490 --> 00:10:21,980
that you access in that makes a request

197
00:10:21,980 --> 00:10:25,370
back to the KDC asking for whether this

198
00:10:25,370 --> 00:10:27,350
pack is valid if it's valid then it's

199
00:10:27,350 --> 00:10:29,899
verifies it and you'll have access to a

200
00:10:29,899 --> 00:10:32,540
service the service could be a CR so I

201
00:10:32,540 --> 00:10:34,490
have first you could be RDP II could be

202
00:10:34,490 --> 00:10:37,250
MS sequel it's essentially what it is is

203
00:10:37,250 --> 00:10:40,040
that you need to be able to have TGT and

204
00:10:40,040 --> 00:10:42,800
the right privileges for you to access

205
00:10:42,800 --> 00:10:44,480
to access a service and a mystical

206
00:10:44,480 --> 00:10:47,240
three-decade KDC however the last step

207
00:10:47,240 --> 00:10:49,660
once you've been validated you can

208
00:10:49,660 --> 00:10:53,389
access the application server without

209
00:10:53,389 --> 00:10:54,980
going back to the KDC there were some

210
00:10:54,980 --> 00:10:56,569
issues around that but now I think it's

211
00:10:56,569 --> 00:10:58,759
been fixed so that's just generally

212
00:10:58,759 --> 00:11:06,339
Kerris in a nutshell okay

213
00:11:06,350 --> 00:11:20,430
nice okay it works and works it's fine

214
00:11:20,430 --> 00:11:23,010
it's all good no what

215
00:11:23,010 --> 00:11:26,670
so we talked about delegation what what

216
00:11:26,670 --> 00:11:28,880
is it delegation what secures delegation

217
00:11:28,880 --> 00:11:32,750
it basically it's a future that allows

218
00:11:32,750 --> 00:11:35,460
this is pretty much for Microsoft I'm

219
00:11:35,460 --> 00:11:38,820
not kind of you know this is from

220
00:11:38,820 --> 00:11:40,680
Microsoft it's it's a feature that

221
00:11:40,680 --> 00:11:42,960
allows the application to reuse and

222
00:11:42,960 --> 00:11:45,030
usage credential to access a resource

223
00:11:45,030 --> 00:11:48,510
hosted on a different server so

224
00:11:48,510 --> 00:11:50,730
essentially it's it's a way to access in

225
00:11:50,730 --> 00:11:57,830
a service having attribute of delegation

226
00:11:57,980 --> 00:12:00,120
there's been an increasing amount of

227
00:12:00,120 --> 00:12:02,490
research around kind of terrible

228
00:12:02,490 --> 00:12:04,050
security particularly around the

229
00:12:04,050 --> 00:12:06,090
delegations and the whole entire of this

230
00:12:06,090 --> 00:12:08,430
actually research started from I was

231
00:12:08,430 --> 00:12:14,250
reading a he a article about trust from

232
00:12:14,250 --> 00:12:19,170
the mmm the NW our trust that years fear

233
00:12:19,170 --> 00:12:21,600
and second to break the whole project

234
00:12:21,600 --> 00:12:23,670
actually started off okay this is

235
00:12:23,670 --> 00:12:24,210
interesting

236
00:12:24,210 --> 00:12:26,550
let's just find out what can we do with

237
00:12:26,550 --> 00:12:31,070
this constraint mm constraint allocation

238
00:12:31,070 --> 00:12:35,430
and constraint delegations very old

239
00:12:35,430 --> 00:12:40,880
protocol like you know it's pretty bad

240
00:12:40,880 --> 00:12:44,310
it's essentially Uncas trade delegations

241
00:12:44,310 --> 00:12:46,110
applied for user objects and computer

242
00:12:46,110 --> 00:12:51,810
objects this can be configured and in me

243
00:12:51,810 --> 00:12:53,850
Logan into Active Directory and that

244
00:12:53,850 --> 00:12:55,800
they use a tap or on the computer tab

245
00:12:55,800 --> 00:12:57,420
you say like I want to have and

246
00:12:57,420 --> 00:12:58,980
constraint delegation so I'll have a

247
00:12:58,980 --> 00:13:02,250
screen short 10 minutes essentially you

248
00:13:02,250 --> 00:13:04,560
are trusting this computer to to to

249
00:13:04,560 --> 00:13:10,560
delegate to delegate to any service I'll

250
00:13:10,560 --> 00:13:14,420
discuss that and risk around it as well

251
00:13:15,440 --> 00:13:18,620
there's a very interest

252
00:13:18,620 --> 00:13:21,709
kind of article actually details how I'm

253
00:13:21,709 --> 00:13:24,260
constrained delegation its how bad it is

254
00:13:24,260 --> 00:13:26,360
from shimla takeoff from the ad security

255
00:13:26,360 --> 00:13:28,459
so not going to so much details on that

256
00:13:28,459 --> 00:13:30,860
but if you you know we can discuss that

257
00:13:30,860 --> 00:13:32,630
afterward if you want to further read on

258
00:13:32,630 --> 00:13:35,060
this so essentially the risk around them

259
00:13:35,060 --> 00:13:40,430
and can strike delegation its anytime

260
00:13:40,430 --> 00:13:43,250
that you compromise a box that has

261
00:13:43,250 --> 00:13:46,100
unconstrained delegation off so imagine

262
00:13:46,100 --> 00:13:49,699
that you compromise it at a a box that

263
00:13:49,699 --> 00:13:52,180
and constrained delegation is enabled

264
00:13:52,180 --> 00:13:55,010
and you have a local administrator on

265
00:13:55,010 --> 00:13:58,040
that workstation on that server what

266
00:13:58,040 --> 00:14:01,730
happens is is that you somehow say that

267
00:14:01,730 --> 00:14:04,730
you managed to lure the admin to log in

268
00:14:04,730 --> 00:14:05,449
to that box

269
00:14:05,449 --> 00:14:07,910
it could be accessed in a flash a file

270
00:14:07,910 --> 00:14:10,820
share on that server what happens is

271
00:14:10,820 --> 00:14:12,350
when then constraint delegation if it's

272
00:14:12,350 --> 00:14:15,170
enabled on the server you're not only

273
00:14:15,170 --> 00:14:18,079
the TGS is actually stored inside the

274
00:14:18,079 --> 00:14:20,870
memory but also the TGT so we're just

275
00:14:20,870 --> 00:14:23,949
going back to the the first slice TGT

276
00:14:23,949 --> 00:14:25,610
essentially it's a ticket granting

277
00:14:25,610 --> 00:14:27,430
ticket and it's a proof of your identity

278
00:14:27,430 --> 00:14:30,550
so having a local administrator and

279
00:14:30,550 --> 00:14:34,610
compromising having a local industry on

280
00:14:34,610 --> 00:14:37,959
a server and you somehow find a way to

281
00:14:37,959 --> 00:14:41,089
make the admin or domain admin to access

282
00:14:41,089 --> 00:14:44,810
to that server service CI CIFS file

283
00:14:44,810 --> 00:14:47,149
share you can essentially actually dump

284
00:14:47,149 --> 00:14:51,470
their TGT tickets so they're essentially

285
00:14:51,470 --> 00:14:53,600
passwords their tickets and then you

286
00:14:53,600 --> 00:14:56,660
reuse that ticket to do your lateral

287
00:14:56,660 --> 00:15:01,880
movement so the the the issue with that

288
00:15:01,880 --> 00:15:05,930
is that if if you have a unconstraint

289
00:15:05,930 --> 00:15:07,640
delegation enabled and you've got

290
00:15:07,640 --> 00:15:10,370
somehow local admin on this box not only

291
00:15:10,370 --> 00:15:12,680
you can have the TGS but you can have

292
00:15:12,680 --> 00:15:15,500
the passwords or TTT tickets of

293
00:15:15,500 --> 00:15:17,600
whoever's actually logging into that box

294
00:15:17,600 --> 00:15:20,420
it's bad and marcus that's that's pre

295
00:15:20,420 --> 00:15:23,930
that's a real protocol so Microsoft came

296
00:15:23,930 --> 00:15:25,910
up with this idea of okay one constraint

297
00:15:25,910 --> 00:15:27,769
delegation is that let's do something

298
00:15:27,769 --> 00:15:31,400
about it let's go to something called

299
00:15:31,400 --> 00:15:32,750
[Music]

300
00:15:32,750 --> 00:15:35,060
so before jump into this this is an

301
00:15:35,060 --> 00:15:37,070
constraint delegation and this is how

302
00:15:37,070 --> 00:15:39,140
you enable it trust this computer to

303
00:15:39,140 --> 00:15:40,790
delegate to any service so he's saying

304
00:15:40,790 --> 00:15:42,560
hey this computer could delegate

305
00:15:42,560 --> 00:15:44,210
anything they want any service that's

306
00:15:44,210 --> 00:15:50,000
pretty bad yeah

307
00:15:50,000 --> 00:15:52,130
and I am obviously showing this bj

308
00:15:52,130 --> 00:15:53,900
account it's going to be used part of

309
00:15:53,900 --> 00:15:56,390
the entire attack as we go through

310
00:15:56,390 --> 00:16:00,710
slides so we know that the straight

311
00:16:00,710 --> 00:16:02,450
delegation is bad so Microsoft came up

312
00:16:02,450 --> 00:16:03,500
with this idea of a constraint

313
00:16:03,500 --> 00:16:05,660
delegation or the constraint delegations

314
00:16:05,660 --> 00:16:14,000
before Windows 2012 the would the

315
00:16:14,000 --> 00:16:17,620
constraint delegation the the hosting

316
00:16:17,620 --> 00:16:21,080
the delegation happens and this Espeon

317
00:16:21,080 --> 00:16:25,150
of the hosting server so what happened

318
00:16:25,150 --> 00:16:29,080
the with the constraint delegations they

319
00:16:29,080 --> 00:16:32,690
the service needs to have the an

320
00:16:32,690 --> 00:16:35,540
attribute which is ms allowed to

321
00:16:35,540 --> 00:16:39,070
delegate for it to actually delegate a

322
00:16:39,070 --> 00:16:42,370
any any privileges and having that

323
00:16:42,370 --> 00:16:45,890
particular attributes you need to have

324
00:16:45,890 --> 00:16:49,580
set enabled delegations or kind of

325
00:16:49,580 --> 00:16:52,820
privilege or domain admin in in most

326
00:16:52,820 --> 00:16:56,000
cases so with the constrained delegation

327
00:16:56,000 --> 00:16:59,120
is that you are limited what you could

328
00:16:59,120 --> 00:17:02,209
do so if your your access to if you

329
00:17:02,209 --> 00:17:04,130
compromised a box with delegations

330
00:17:04,130 --> 00:17:05,480
actually enabled constrained delegation

331
00:17:05,480 --> 00:17:07,730
you attack you will not be able to

332
00:17:07,730 --> 00:17:11,059
actually harvest TGT tickets that's

333
00:17:11,059 --> 00:17:13,130
maybe end of its for constraint

334
00:17:13,130 --> 00:17:20,089
delegation this is the interesting one

335
00:17:20,089 --> 00:17:21,380
that we're going to be discussing which

336
00:17:21,380 --> 00:17:23,959
is the latest resource based constrained

337
00:17:23,959 --> 00:17:28,550
delegation starting from 2012 and

338
00:17:28,550 --> 00:17:32,230
Windows 2008 started from 2012 and

339
00:17:32,230 --> 00:17:35,690
Windows 8 Microsoft introduced

340
00:17:35,690 --> 00:17:38,070
Rousseau's waste

341
00:17:38,070 --> 00:17:42,450
a constraint delegation and this is from

342
00:17:42,450 --> 00:17:45,810
from that particular delegation

343
00:17:45,810 --> 00:17:49,860
it's the targets results that delegates

344
00:17:49,860 --> 00:17:53,250
that that decides which competed

345
00:17:53,250 --> 00:17:57,840
actually can delegate essentially this

346
00:17:57,840 --> 00:18:00,510
delegation it's with a resource based

347
00:18:00,510 --> 00:18:04,260
you make the computer the computer

348
00:18:04,260 --> 00:18:06,450
itself you can actually have it having

349
00:18:06,450 --> 00:18:15,030
the essentially that that the the target

350
00:18:15,030 --> 00:18:17,690
resource can act behalf on the computer

351
00:18:17,690 --> 00:18:21,390
so and this instant is that what

352
00:18:21,390 --> 00:18:23,460
Microsoft introduced is something known

353
00:18:23,460 --> 00:18:28,290
as MS MSDS allowed to act on behalf of

354
00:18:28,290 --> 00:18:30,900
another identity so what happens here is

355
00:18:30,900 --> 00:18:38,480
that on on the primary domain controller

356
00:18:38,480 --> 00:18:42,570
we are this this cannot be done by the

357
00:18:42,570 --> 00:18:44,460
GUI by the way this is it needs to be on

358
00:18:44,460 --> 00:18:48,690
PowerShell only so essentially this is

359
00:18:48,690 --> 00:18:51,630
you on the primary domain controller

360
00:18:51,630 --> 00:18:54,600
what i'm doing here i'm enabling the SRV

361
00:18:54,600 --> 00:18:56,850
one which is i don't think you can see

362
00:18:56,850 --> 00:19:00,260
it probably set ad computer SRV one

363
00:19:00,260 --> 00:19:10,110
principle to delegate to access yeah so

364
00:19:10,110 --> 00:19:12,630
what's happening I'm setting the SRB one

365
00:19:12,630 --> 00:19:15,990
server which is actually a concern and

366
00:19:15,990 --> 00:19:18,720
go straight delegation I'm saying that s

367
00:19:18,720 --> 00:19:23,310
avi one should be J BJ account should be

368
00:19:23,310 --> 00:19:25,830
able to delegate on SRV one account on a

369
00:19:25,830 --> 00:19:28,170
server and server and we are also

370
00:19:28,170 --> 00:19:31,200
specifying here that using on logging

371
00:19:31,200 --> 00:19:34,500
into the ad control are we saying yet ad

372
00:19:34,500 --> 00:19:36,120
computer-savvy one who can actually

373
00:19:36,120 --> 00:19:39,240
delegate on a savvy one having with this

374
00:19:39,240 --> 00:19:41,310
particular attribute and we can see that

375
00:19:41,310 --> 00:19:43,710
the identity reference comes back with a

376
00:19:43,710 --> 00:19:45,510
bj u xx

377
00:19:45,510 --> 00:19:48,330
so this accounts could delegate only SRV

378
00:19:48,330 --> 00:19:51,630
one works

379
00:19:51,630 --> 00:19:54,299
server some I'm basically creating this

380
00:19:54,299 --> 00:19:55,559
a good straight delegation before

381
00:19:55,559 --> 00:19:58,140
actually demonstrating the attack so

382
00:19:58,140 --> 00:20:04,440
just to recap on this is that the BJ BJ

383
00:20:04,440 --> 00:20:07,559
UX account can delegate on the server s

384
00:20:07,559 --> 00:20:10,380
a v1 so we're gonna see how it what

385
00:20:10,380 --> 00:20:14,330
happens abusing resource based

386
00:20:14,330 --> 00:20:17,100
constrained delegation you could

387
00:20:17,100 --> 00:20:19,100
basically with that you can have a

388
00:20:19,100 --> 00:20:21,179
remote code execution on the domain

389
00:20:21,179 --> 00:20:24,600
service project escalation should be

390
00:20:24,600 --> 00:20:26,100
compromised and constraint delegation

391
00:20:26,100 --> 00:20:30,030
and also you can use the account to do

392
00:20:30,030 --> 00:20:32,400
your post exploitation with it

393
00:20:32,400 --> 00:20:36,120
attack requirements you need to have a

394
00:20:36,120 --> 00:20:39,450
access to a Linux or Windows service

395
00:20:39,450 --> 00:20:42,870
within the network with what a Windows

396
00:20:42,870 --> 00:20:44,370
box you don't necessarily have to

397
00:20:44,370 --> 00:20:46,500
actually eat it need to be administrator

398
00:20:46,500 --> 00:20:48,539
and a will in Linux box you should

399
00:20:48,539 --> 00:20:50,130
surely have you should be able to

400
00:20:50,130 --> 00:20:51,900
actually create tickets and stuff so

401
00:20:51,900 --> 00:20:57,120
root would be the requirement so the

402
00:20:57,120 --> 00:20:58,559
domain that you're compromising the

403
00:20:58,559 --> 00:21:00,690
domain you're attacking the user should

404
00:21:00,690 --> 00:21:01,919
be able to actually create machine

405
00:21:01,919 --> 00:21:04,770
accounts by default you can create up to

406
00:21:04,770 --> 00:21:06,840
ten machine accounts which is something

407
00:21:06,840 --> 00:21:09,510
else than no you could also plug if all

408
00:21:09,510 --> 00:21:13,230
you can create you can join computers to

409
00:21:13,230 --> 00:21:17,150
domains which is a ten accounts as well

410
00:21:17,150 --> 00:21:19,919
part of the attack requirements LDAP

411
00:21:19,919 --> 00:21:21,600
path should be running on the Active

412
00:21:21,600 --> 00:21:26,760
Directory and an IP version 6 must be

413
00:21:26,760 --> 00:21:32,820
enabled only on the domain that we are

414
00:21:32,820 --> 00:21:36,690
tacking ipv6 is actually enabled by

415
00:21:36,690 --> 00:21:40,770
default since Windows 2007 actually from

416
00:21:40,770 --> 00:21:48,390
Vista onward so it's a v6 actually does

417
00:21:48,390 --> 00:21:51,630
take precedence over v4 even though it's

418
00:21:51,630 --> 00:21:53,460
actually not used but by default it's

419
00:21:53,460 --> 00:21:55,880
enabled

420
00:21:55,920 --> 00:21:57,990
how does this attack work what it does

421
00:21:57,990 --> 00:22:03,450
what we do is that we are doing a man

422
00:22:03,450 --> 00:22:06,809
elemental attack within that that

423
00:22:06,809 --> 00:22:09,720
compromised domain so we we're using a

424
00:22:09,720 --> 00:22:15,090
previous version six configurations we

425
00:22:15,090 --> 00:22:19,380
make the target user essentially we we

426
00:22:19,380 --> 00:22:23,730
prompt w pad to the type to the target

427
00:22:23,730 --> 00:22:25,770
where we attacking and essentially

428
00:22:25,770 --> 00:22:27,480
asking them for the authentication for

429
00:22:27,480 --> 00:22:31,230
seven we capture and relate encrypted

430
00:22:31,230 --> 00:22:34,520
LDAP s to create new accounts on the

431
00:22:34,520 --> 00:22:37,830
primary domain controller so what

432
00:22:37,830 --> 00:22:40,260
happens is here it it needs to the

433
00:22:40,260 --> 00:22:41,910
reason that LDAP s should be running is

434
00:22:41,910 --> 00:22:44,010
that you can actually create a machine

435
00:22:44,010 --> 00:22:48,390
account over LDAP on the clear-text

436
00:22:48,390 --> 00:22:50,370
you need to have a lab that's running on

437
00:22:50,370 --> 00:22:55,860
this on the Active Directory we asked

438
00:22:55,860 --> 00:22:59,330
the BC to configure resource based

439
00:22:59,330 --> 00:23:02,340
delegation for that compromise for the

440
00:23:02,340 --> 00:23:04,470
account what we are creating so in this

441
00:23:04,470 --> 00:23:08,100
sense this is that we say s are v1 which

442
00:23:08,100 --> 00:23:12,120
is the which is the computer machines of

443
00:23:12,120 --> 00:23:15,320
the targets we use in that account and

444
00:23:15,320 --> 00:23:17,760
to create an account to a machine

445
00:23:17,760 --> 00:23:21,720
account with this bjv and we set allowed

446
00:23:21,720 --> 00:23:23,850
to act on behalf of another identity

447
00:23:23,850 --> 00:23:26,670
so having compromised the SRV one

448
00:23:26,670 --> 00:23:28,980
machine account we create at this

449
00:23:28,980 --> 00:23:31,980
account and we set this and constrained

450
00:23:31,980 --> 00:23:34,260
delegation on this account so the idea

451
00:23:34,260 --> 00:23:37,290
is that once we did that we can we can

452
00:23:37,290 --> 00:23:41,670
generate TGS tickets and impersonate in

453
00:23:41,670 --> 00:23:45,690
any account within the actual a domain

454
00:23:45,690 --> 00:23:48,090
controller what it means is that if you

455
00:23:48,090 --> 00:23:51,510
have this attribute on the machine

456
00:23:51,510 --> 00:23:55,350
account you can pick a any user within

457
00:23:55,350 --> 00:23:59,330
that domain environment and say look

458
00:23:59,330 --> 00:24:02,220
obviously I'm gonna pick on the local

459
00:24:02,220 --> 00:24:03,630
administrator because with the local

460
00:24:03,630 --> 00:24:05,570
administrator you can access pretty much

461
00:24:05,570 --> 00:24:08,520
everything

462
00:24:08,520 --> 00:24:12,679
so we impersonate local admin and and

463
00:24:12,679 --> 00:24:15,210
then that way we can actually access the

464
00:24:15,210 --> 00:24:18,809
target service oh and I will demonstrate

465
00:24:18,809 --> 00:24:22,380
the house how this is done so going

466
00:24:22,380 --> 00:24:26,429
through this I mean to do that it's on a

467
00:24:26,429 --> 00:24:28,950
background there's a to interesting

468
00:24:28,950 --> 00:24:32,309
concept which is the s for you cell

469
00:24:32,309 --> 00:24:34,710
phone s for you proxy which are which

470
00:24:34,710 --> 00:24:36,480
are a very interesting concept in

471
00:24:36,480 --> 00:24:41,220
Kerberos authentication I think I was

472
00:24:41,220 --> 00:24:44,550
jumping ahead of my attention so but how

473
00:24:44,550 --> 00:24:48,120
how how do you go about doing this how

474
00:24:48,120 --> 00:24:53,790
this impersonation happened again their

475
00:24:53,790 --> 00:24:57,050
service for you to self and a service

476
00:24:57,050 --> 00:24:59,580
for you to proxy are the two concepts

477
00:24:59,580 --> 00:25:01,620
are introduced by Microsoft as a part of

478
00:25:01,620 --> 00:25:03,090
the Kerberos authentication so they

479
00:25:03,090 --> 00:25:04,350
actually have future of the kerbals

480
00:25:04,350 --> 00:25:06,980
within the Microsoft Ed's

481
00:25:06,980 --> 00:25:11,490
sorry essentially it allows the service

482
00:25:11,490 --> 00:25:13,050
to request a token on behalf of other

483
00:25:13,050 --> 00:25:15,630
users supplying their lesbian so with

484
00:25:15,630 --> 00:25:20,700
the SV or s for yourself you can you can

485
00:25:20,700 --> 00:25:26,360
access and in a nutshell basically it's

486
00:25:26,690 --> 00:25:30,150
it it's Microsoft implemented this to

487
00:25:30,150 --> 00:25:34,620
allow service to request a token on for

488
00:25:34,620 --> 00:25:38,160
another user without actually specifying

489
00:25:38,160 --> 00:25:41,660
there couldn't specify the credentials

490
00:25:41,660 --> 00:25:45,690
there's also elements of the to 4ad flag

491
00:25:45,690 --> 00:25:48,630
which is the protocol transitions once

492
00:25:48,630 --> 00:25:51,710
you once we have a account that has

493
00:25:51,710 --> 00:25:55,290
angry straight delegations and you

494
00:25:55,290 --> 00:25:58,620
technically could impersonate a user by

495
00:25:58,620 --> 00:26:03,000
applying the user to self as well as the

496
00:26:03,000 --> 00:26:06,570
user to proc yeah it use itself and then

497
00:26:06,570 --> 00:26:10,950
the the final proxy concept which is the

498
00:26:10,950 --> 00:26:14,330
s for you to proxy and that particular

499
00:26:14,330 --> 00:26:18,090
concept it's it ensures that token that

500
00:26:18,090 --> 00:26:21,929
you're requesting is actually kind of in

501
00:26:21,929 --> 00:26:22,320
store

502
00:26:22,320 --> 00:26:26,060
to Pacific cells as opposed to having

503
00:26:26,060 --> 00:26:28,530
access to a lot of services just like

504
00:26:28,530 --> 00:26:30,510
anything in them constrained delegations

505
00:26:30,510 --> 00:26:34,140
that you could request a ticket and you

506
00:26:34,140 --> 00:26:36,450
can access to any services that you want

507
00:26:36,450 --> 00:26:39,870
with this with the introduction to the

508
00:26:39,870 --> 00:26:42,240
SOE to proxy you constrained what

509
00:26:42,240 --> 00:26:44,010
service you can actually access and

510
00:26:44,010 --> 00:26:46,290
that's the job of the as for you to

511
00:26:46,290 --> 00:26:47,910
proxy but we're gonna demonstrate if

512
00:26:47,910 --> 00:26:52,890
that's actually the case so to go

513
00:26:52,890 --> 00:26:54,870
through all this actually demonstrating

514
00:26:54,870 --> 00:27:00,090
the attack how it really work so in my

515
00:27:00,090 --> 00:27:06,450
home lab I have domain 212 known as

516
00:27:06,450 --> 00:27:09,030
primary domain controller which is

517
00:27:09,030 --> 00:27:12,030
already active directory and then I have

518
00:27:12,030 --> 00:27:16,350
a server which is a SRV server this is

519
00:27:16,350 --> 00:27:20,010
the file server and and then I have a

520
00:27:20,010 --> 00:27:22,620
Linux machines and the the target

521
00:27:22,620 --> 00:27:25,370
accounts are I'm targeting this account

522
00:27:25,370 --> 00:27:28,920
SRV one to impersonate actually a user

523
00:27:28,920 --> 00:27:31,170
admin which is a domain administrator

524
00:27:31,170 --> 00:27:33,780
within the environment so the target is

525
00:27:33,780 --> 00:27:38,580
here it's the the server SRV one and

526
00:27:38,580 --> 00:27:40,980
we're gonna be attacking admin user to

527
00:27:40,980 --> 00:27:42,630
impersonate and accessing the server one

528
00:27:42,630 --> 00:27:44,520
as a local administrator which we have

529
00:27:44,520 --> 00:27:49,680
no access so the attack the way as I

530
00:27:49,680 --> 00:27:51,870
mentioned area you have to be internal

531
00:27:51,870 --> 00:27:52,980
to that network yet you're attacking

532
00:27:52,980 --> 00:27:57,360
what happened here is that in here you

533
00:27:57,360 --> 00:28:01,140
specify in ntlm relay X part of the

534
00:28:01,140 --> 00:28:05,640
impact package I'm specifying the LDAP s

535
00:28:05,640 --> 00:28:07,950
on my primary domain controller that I

536
00:28:07,950 --> 00:28:10,260
am attacking and I'm saying that

537
00:28:10,260 --> 00:28:13,830
delegate access whatever that the the

538
00:28:13,830 --> 00:28:17,310
capture relay and here in the other

539
00:28:17,310 --> 00:28:21,390
hands we're saying we're attacking on IP

540
00:28:21,390 --> 00:28:22,080
version 6

541
00:28:22,080 --> 00:28:26,070
so using Milton 6 we specify our target

542
00:28:26,070 --> 00:28:28,830
which is s our v1 crypto lab the local

543
00:28:28,830 --> 00:28:32,130
and we say if you capture request from

544
00:28:32,130 --> 00:28:35,860
this server then ntlm anti

545
00:28:35,860 --> 00:28:38,919
should kick in and push the ticket from

546
00:28:38,919 --> 00:28:41,620
here to the primary domain controller

547
00:28:41,620 --> 00:28:46,179
and create the Machine account and I

548
00:28:46,179 --> 00:28:47,830
mentioned that creating machine account

549
00:28:47,830 --> 00:28:54,880
has to be over LDAP s so once the attack

550
00:28:54,880 --> 00:28:56,529
actually kick off there's there's

551
00:28:56,529 --> 00:28:58,330
different way of you know making this

552
00:28:58,330 --> 00:29:04,360
effective trigger is that so IP version

553
00:29:04,360 --> 00:29:09,159
6 man-in-the-middle attack is it's

554
00:29:09,159 --> 00:29:12,159
basically doing a man in the middle for

555
00:29:12,159 --> 00:29:13,659
the against the s rv1

556
00:29:13,659 --> 00:29:17,610
crypto lab which is our target to attack

557
00:29:17,610 --> 00:29:21,669
we use ntlm relay and we specify i've

558
00:29:21,669 --> 00:29:24,669
actually and i mentioned already that we

559
00:29:24,669 --> 00:29:27,250
specify the primary domain controllers

560
00:29:27,250 --> 00:29:29,980
that are attacking kind of a domain

561
00:29:29,980 --> 00:29:32,889
controller and what happens here as soon

562
00:29:32,889 --> 00:29:38,350
as the SRV one makes a request there's

563
00:29:38,350 --> 00:29:39,669
different ways you can trigger this

564
00:29:39,669 --> 00:29:41,500
attack one of them it could be a network

565
00:29:41,500 --> 00:29:43,120
connectivity issue within that domain

566
00:29:43,120 --> 00:29:45,220
controller so if that s our view for

567
00:29:45,220 --> 00:29:47,799
whatever reason rebooted is the server

568
00:29:47,799 --> 00:29:50,919
and what happens is that when it

569
00:29:50,919 --> 00:29:53,649
requested the DHCP request it tends to

570
00:29:53,649 --> 00:29:55,960
be actually over a IP version 6 are

571
00:29:55,960 --> 00:29:58,630
supposed to be over for the first time

572
00:29:58,630 --> 00:30:00,519
on the DHCP request is made from the

573
00:30:00,519 --> 00:30:03,279
server one my observation is actually to

574
00:30:03,279 --> 00:30:07,029
know that over ipv6 as opposed to ipv4

575
00:30:07,029 --> 00:30:09,850
and that's why I think it's the ipv6

576
00:30:09,850 --> 00:30:13,539
taking takes the precedence over IP 4 so

577
00:30:13,539 --> 00:30:15,340
what happens here is that when it when

578
00:30:15,340 --> 00:30:19,360
it started sending I when it when the

579
00:30:19,360 --> 00:30:22,659
box has rebooted or if if in another way

580
00:30:22,659 --> 00:30:24,340
to actually trigger this attack is for

581
00:30:24,340 --> 00:30:26,830
user to log in and restart the Machine

582
00:30:26,830 --> 00:30:28,690
and log in with their credentials so

583
00:30:28,690 --> 00:30:32,830
happen is we're here we won one that

584
00:30:32,830 --> 00:30:38,260
when the targets SR v1 reboots we we

585
00:30:38,260 --> 00:30:39,940
capture there we do a man in the middle

586
00:30:39,940 --> 00:30:46,400
on the SR v1 and we had kind of

587
00:30:46,400 --> 00:30:50,030
prompt the SRV one machine account with

588
00:30:50,030 --> 00:30:53,840
the W pad from the ntlm relay X and we

589
00:30:53,840 --> 00:30:59,150
say hey we are actually the this is what

590
00:30:59,150 --> 00:31:00,830
you actually looking for this is we we

591
00:31:00,830 --> 00:31:02,870
basically response to the request that

592
00:31:02,870 --> 00:31:06,020
it's coming from s everyone and that way

593
00:31:06,020 --> 00:31:09,680
we creating an account a new account on

594
00:31:09,680 --> 00:31:16,309
the crypto lab which is the DC using the

595
00:31:16,309 --> 00:31:18,050
SRV account and we create in this

596
00:31:18,050 --> 00:31:21,410
account which is a bj u X so essentially

597
00:31:21,410 --> 00:31:26,480
on this one we have to trigger that

598
00:31:26,480 --> 00:31:32,300
attack again it's you user logs in after

599
00:31:32,300 --> 00:31:35,510
reboot that computer basically makes a a

600
00:31:35,510 --> 00:31:41,090
name resolution proxy over ipv6 we don't

601
00:31:41,090 --> 00:31:43,370
pretend to be the we we pretend to be

602
00:31:43,370 --> 00:31:46,790
the proxy and we actually produce the W

603
00:31:46,790 --> 00:31:49,640
Pat proxy to the to the target we

604
00:31:49,640 --> 00:31:53,990
capture the the encrypted credentials

605
00:31:53,990 --> 00:31:59,360
and then push it to the the DC which is

606
00:31:59,360 --> 00:32:02,570
the primary domain controller and then

607
00:32:02,570 --> 00:32:04,970
that way we actually create an account

608
00:32:04,970 --> 00:32:10,300
with BJP UX and machine account on the

609
00:32:10,300 --> 00:32:13,970
target but the key with this machine

610
00:32:13,970 --> 00:32:15,320
account is that now this machine

611
00:32:15,320 --> 00:32:17,660
accounts actually has a full delegation

612
00:32:17,660 --> 00:32:20,960
right so it can actually impersonate

613
00:32:20,960 --> 00:32:26,000
other users so as you can see that

614
00:32:26,000 --> 00:32:32,000
account is actually created so the tech

615
00:32:32,000 --> 00:32:33,890
is performed on the primary domain

616
00:32:33,890 --> 00:32:36,610
controller and we've created an account

617
00:32:36,610 --> 00:32:40,580
BJP X which has full delegation rights

618
00:32:40,580 --> 00:32:46,730
for personation attacks so for me to

619
00:32:46,730 --> 00:32:49,670
actually just to demonstrate where this

620
00:32:49,670 --> 00:32:52,880
occurrence came from is that as you can

621
00:32:52,880 --> 00:32:56,000
see I am saying that on my domain

622
00:32:56,000 --> 00:32:58,970
controller saying get Ad competed SRV

623
00:32:58,970 --> 00:33:02,270
won and properties principals are

624
00:33:02,270 --> 00:33:04,429
allowed to delegate so that principal

625
00:33:04,429 --> 00:33:07,100
can delegate on this SR v1 is this

626
00:33:07,100 --> 00:33:09,950
account and it's specified here and I'm

627
00:33:09,950 --> 00:33:11,720
also using the power mat PowerShell

628
00:33:11,720 --> 00:33:15,860
module and saying tell me that any any

629
00:33:15,860 --> 00:33:20,390
domain at any any accounts with the with

630
00:33:20,390 --> 00:33:22,760
it principals allowed to delegate in

631
00:33:22,760 --> 00:33:25,730
this case bj account has delegation

632
00:33:25,730 --> 00:33:29,390
rights on this on the SRP one target

633
00:33:29,390 --> 00:33:29,810
machine

634
00:33:29,810 --> 00:33:31,850
so having delegation accounts what can

635
00:33:31,850 --> 00:33:33,560
we do with it I mean it's nice to have

636
00:33:33,560 --> 00:33:36,530
it but can we refuse this can we get

637
00:33:36,530 --> 00:33:39,679
actually local administrative access on

638
00:33:39,679 --> 00:33:42,640
that target server

639
00:33:43,600 --> 00:33:49,190
yes we can what happens is now we using

640
00:33:49,190 --> 00:33:53,200
yet st the PI from the impact we can

641
00:33:53,200 --> 00:33:59,090
essentially request a CIF CIFS which is

642
00:33:59,090 --> 00:34:03,410
the common a file a common Internet file

643
00:34:03,410 --> 00:34:07,659
system within Windows we request in a a

644
00:34:07,659 --> 00:34:12,800
CF CIFS tickets using the accounts that

645
00:34:12,800 --> 00:34:15,050
we created that has a delegation right

646
00:34:15,050 --> 00:34:17,750
and we impersonate the user admin here

647
00:34:17,750 --> 00:34:22,550
so having the we have we have the

648
00:34:22,550 --> 00:34:26,030
passwords for this account already so

649
00:34:26,030 --> 00:34:29,120
what we do is we generate in a initially

650
00:34:29,120 --> 00:34:33,379
TGT and as we discussed the s4 you and

651
00:34:33,379 --> 00:34:35,389
s3 proxy is already actually implemented

652
00:34:35,389 --> 00:34:38,359
by the impact team so that in this case

653
00:34:38,359 --> 00:34:41,600
we'll create a admin dot C cache which

654
00:34:41,600 --> 00:34:45,310
has which is essentially essentially a

655
00:34:45,310 --> 00:34:48,199
CIFS TGS tickets that you can access

656
00:34:48,199 --> 00:34:53,300
that SRV one server so now we have the

657
00:34:53,300 --> 00:34:57,380
admin dos see cache kind of tickets with

658
00:34:57,380 --> 00:34:59,270
a normal Linux machine can we actually

659
00:34:59,270 --> 00:35:05,150
access the SRV one server with admin

660
00:35:05,150 --> 00:35:10,230
rights I mean what

661
00:35:10,230 --> 00:35:12,660
would do here and my next step on this

662
00:35:12,660 --> 00:35:16,830
is that specifying the the krb C name on

663
00:35:16,830 --> 00:35:18,930
my Linux machines that I've got the

664
00:35:18,930 --> 00:35:21,690
ticket on and I'm exporting I'm

665
00:35:21,690 --> 00:35:23,880
specifying that I want to use admin dot

666
00:35:23,880 --> 00:35:26,250
cash as my actually tickets to

667
00:35:26,250 --> 00:35:29,940
authenticate to the SRV server and then

668
00:35:29,940 --> 00:35:32,730
we I'm using the SMB client to

669
00:35:32,730 --> 00:35:35,190
demonstrate that actually I have access

670
00:35:35,190 --> 00:35:39,210
to the SRV c c drive which for you to

671
00:35:39,210 --> 00:35:41,280
actually access the c drive

672
00:35:41,280 --> 00:35:44,100
it's you have to be he administrator

673
00:35:44,100 --> 00:35:46,619
that's just the chief corroboration here

674
00:35:46,619 --> 00:35:50,550
is that the that i have already kind of

675
00:35:50,550 --> 00:35:53,190
compromised the SRV one with the admin

676
00:35:53,190 --> 00:35:56,060
privilege using the the admin cache and

677
00:35:56,060 --> 00:35:59,790
doing the impersonation and the k flag

678
00:35:59,790 --> 00:36:02,520
is that i'm just saying okay don't use

679
00:36:02,520 --> 00:36:04,920
password use Kerberos authentication as

680
00:36:04,920 --> 00:36:07,410
opposed to prompt me full for the

681
00:36:07,410 --> 00:36:09,210
username and password just use the key

682
00:36:09,210 --> 00:36:13,040
that I've got which is the admin dope -

683
00:36:13,040 --> 00:36:16,590
what else could we do we can use the

684
00:36:16,590 --> 00:36:22,020
same tickets basically using PS xxxx for

685
00:36:22,020 --> 00:36:24,420
instance probably very very bad idea

686
00:36:24,420 --> 00:36:27,900
using PS xxxx as you probably know that

687
00:36:27,900 --> 00:36:30,810
using peers exact with this what it does

688
00:36:30,810 --> 00:36:32,910
it creates a service on this on the

689
00:36:32,910 --> 00:36:35,460
targets they will get flagged bad idea

690
00:36:35,460 --> 00:36:38,130
nobody uses PS xxxx anymore my

691
00:36:38,130 --> 00:36:41,609
preferences would be wwm I using W my

692
00:36:41,609 --> 00:36:44,940
exec on XD feeding peloton actually SRV

693
00:36:44,940 --> 00:36:46,320
one using the tickets that we

694
00:36:46,320 --> 00:36:49,260
compromised we can also use secret dump

695
00:36:49,260 --> 00:36:53,570
pie which is part of the impact to the

696
00:36:53,570 --> 00:36:58,400
credentials on the on the SIV one server

697
00:36:58,400 --> 00:37:01,710
but the question is is that we've

698
00:37:01,710 --> 00:37:06,270
requested CI CI a ifs ticket how can we

699
00:37:06,270 --> 00:37:09,119
actually execute them am I on the box

700
00:37:09,119 --> 00:37:13,190
that we don't have the correct service

701
00:37:13,190 --> 00:37:20,460
so we request the CIFS but now here we

702
00:37:20,460 --> 00:37:21,060
can actually

703
00:37:21,060 --> 00:37:25,200
access the Machine execute code using

704
00:37:25,200 --> 00:37:32,690
WMI closer look what we see is that the

705
00:37:32,690 --> 00:37:38,550
CIFS on the we request the CFS but now

706
00:37:38,550 --> 00:37:44,760
we can execute code it turns out within

707
00:37:44,760 --> 00:37:45,480
the kerbals

708
00:37:45,480 --> 00:37:49,880
s name which is the service name is

709
00:37:49,880 --> 00:37:54,780
actually not protected by during the at

710
00:37:54,780 --> 00:37:59,460
the Kerberos authentication so anytime

711
00:37:59,460 --> 00:38:05,790
that you're requesting the TGS you don't

712
00:38:05,790 --> 00:38:08,130
necessarily but what happens anytime you

713
00:38:08,130 --> 00:38:09,690
actually requesting a a ticket granting

714
00:38:09,690 --> 00:38:11,490
service which is accessing the service

715
00:38:11,490 --> 00:38:14,130
the s name within it which is a

716
00:38:14,130 --> 00:38:16,100
specified what service you are

717
00:38:16,100 --> 00:38:19,980
requesting it's not protected so you can

718
00:38:19,980 --> 00:38:24,060
simply change that SPM to any Espeon

719
00:38:24,060 --> 00:38:26,910
that you want and get code execution on

720
00:38:26,910 --> 00:38:30,750
that on the box so here I have basically

721
00:38:30,750 --> 00:38:35,580
changed the CIFS service to host to get

722
00:38:35,580 --> 00:38:43,920
a valid SPN for using WM i so my

723
00:38:43,920 --> 00:38:45,960
understanding was that the you know if

724
00:38:45,960 --> 00:38:48,750
you request a CIFS then you should only

725
00:38:48,750 --> 00:38:51,510
be constrained to access in a file share

726
00:38:51,510 --> 00:38:55,110
but can you actually change the SNS name

727
00:38:55,110 --> 00:39:00,360
within the her bus ticket and replacing

728
00:39:00,360 --> 00:39:04,530
the s name with whole host which is you

729
00:39:04,530 --> 00:39:06,210
can actually cut excuse with the service

730
00:39:06,210 --> 00:39:10,590
I guess you can actually it's

731
00:39:10,590 --> 00:39:12,480
essentially the SM it's not protected by

732
00:39:12,480 --> 00:39:17,310
the Kerberos and clear you can just

733
00:39:17,310 --> 00:39:20,250
capture replace the s name from the CIFS

734
00:39:20,250 --> 00:39:25,740
toast and and you don't even have to

735
00:39:25,740 --> 00:39:27,930
actually request a new ticket you just

736
00:39:27,930 --> 00:39:31,080
need to change the s name from CFS to

737
00:39:31,080 --> 00:39:34,779
host as simple as that to get correct

738
00:39:34,779 --> 00:39:37,179
fusion so if you I'm not sure whether

739
00:39:37,179 --> 00:39:38,589
you can see it here or not

740
00:39:38,589 --> 00:39:43,269
so here so if you can look at it it says

741
00:39:43,269 --> 00:39:47,859
n es PN is true so so you could specify

742
00:39:47,859 --> 00:39:50,019
any n es PN site of your choice

743
00:39:50,019 --> 00:39:53,499
thanks Italy so hence we can actually go

744
00:39:53,499 --> 00:39:56,229
to execute using WM I supposed to be

745
00:39:56,229 --> 00:40:01,630
constraint to - only one service but

746
00:40:01,630 --> 00:40:03,400
what if you actually were in in

747
00:40:03,400 --> 00:40:05,829
environments that she doesn't

748
00:40:05,829 --> 00:40:09,309
necessarily have the Nellie your your

749
00:40:09,309 --> 00:40:11,499
box wasn't part of the domain so your

750
00:40:11,499 --> 00:40:13,209
compromise book wasn't your Linux box

751
00:40:13,209 --> 00:40:14,949
wasn't part of the domain can we

752
00:40:14,949 --> 00:40:17,619
actually make this Linux to communicate

753
00:40:17,619 --> 00:40:22,179
the da doing the same attack using AG

754
00:40:22,179 --> 00:40:26,619
tab I was interested to see whether this

755
00:40:26,619 --> 00:40:29,049
could be done or not actually having

756
00:40:29,049 --> 00:40:31,959
having that delegation you can use ski

757
00:40:31,959 --> 00:40:36,669
tab which is fun with the limit Linux

758
00:40:36,669 --> 00:40:38,529
you can use the key tab to accept the

759
00:40:38,529 --> 00:40:44,739
same attack what's key tap in for you to

760
00:40:44,739 --> 00:40:46,089
have a key tab it's essentially it's

761
00:40:46,089 --> 00:40:49,779
like your system doesn't support sure

762
00:40:49,779 --> 00:40:50,169
boss

763
00:40:50,169 --> 00:40:52,509
so you want to make your Linux box that

764
00:40:52,509 --> 00:40:54,579
you compromised communicate to your

765
00:40:54,579 --> 00:40:57,219
domain controller oh your service that

766
00:40:57,219 --> 00:41:01,539
you're attacking using kita again free

767
00:41:01,539 --> 00:41:05,140
tab is essentially used in Linux to

768
00:41:05,140 --> 00:41:06,519
authenticate to a service without

769
00:41:06,519 --> 00:41:11,739
entering your password for seven six

770
00:41:11,739 --> 00:41:13,239
eight from the monitoring perspective on

771
00:41:13,239 --> 00:41:15,279
four seven seven one there are the

772
00:41:15,279 --> 00:41:16,779
failure types of key taps whenever

773
00:41:16,779 --> 00:41:19,049
you're said kind of fail authentication

774
00:41:19,049 --> 00:41:25,689
he's in heat up so I thought let's

775
00:41:25,689 --> 00:41:27,640
investigate a bit further so whether we

776
00:41:27,640 --> 00:41:30,039
can actually do that do this attack

777
00:41:30,039 --> 00:41:33,099
these in kita before actually jump into

778
00:41:33,099 --> 00:41:34,469
the attack itself

779
00:41:34,469 --> 00:41:37,539
you know Linux by default has the K util

780
00:41:37,539 --> 00:41:39,309
quenette's and K destroy part of the

781
00:41:39,309 --> 00:41:42,729
purpose utility that you can use those

782
00:41:42,729 --> 00:41:48,220
two to create a service tickets

783
00:41:48,220 --> 00:41:51,849
to authenticate against ad and carry on

784
00:41:51,849 --> 00:41:55,650
your attack so here essentially I am

785
00:41:55,650 --> 00:41:59,740
specifying the the variable name where

786
00:41:59,740 --> 00:42:02,530
to use my Kerberos tickets which I

787
00:42:02,530 --> 00:42:03,550
specifies

788
00:42:03,550 --> 00:42:09,300
temp folder and I am writing it to some

789
00:42:09,300 --> 00:42:12,390
working directed to the alleged cheetah

790
00:42:12,390 --> 00:42:15,670
I'm using am using the RC for H Mac for

791
00:42:15,670 --> 00:42:20,589
backward compatibility so I am I am

792
00:42:20,589 --> 00:42:22,750
trick I'm creating this principle using

793
00:42:22,750 --> 00:42:25,089
the that cat the machine account that

794
00:42:25,089 --> 00:42:26,619
I've compromised that the machine icon

795
00:42:26,619 --> 00:42:28,839
of I've created using the SRV accounts

796
00:42:28,839 --> 00:42:31,450
with the delegation rights and I'm

797
00:42:31,450 --> 00:42:34,780
writing it to their legit to tree tab so

798
00:42:34,780 --> 00:42:37,420
next step is that we essentially

799
00:42:37,420 --> 00:42:39,880
retrieve ticket granting ticket for

800
00:42:39,880 --> 00:42:44,859
legit cheetah for us to demonstrate this

801
00:42:44,859 --> 00:42:45,400
attack

802
00:42:45,400 --> 00:42:49,390
it's we use that that that legit speed

803
00:42:49,390 --> 00:42:52,630
tab that has the principles for the

804
00:42:52,630 --> 00:42:59,530
Machine accounts that we created and so

805
00:42:59,530 --> 00:43:01,630
this is where we retrieve that ezd

806
00:43:01,630 --> 00:43:03,369
tickets this is what we prove that we

807
00:43:03,369 --> 00:43:06,190
have the right credentials for pressing

808
00:43:06,190 --> 00:43:13,150
TGS and then we use in kV no.2 to

809
00:43:13,150 --> 00:43:19,900
request a CIA CIFS service tickets using

810
00:43:19,900 --> 00:43:23,140
the widget ticket here so they keep key

811
00:43:23,140 --> 00:43:27,460
entry is valid essentially with a key

812
00:43:27,460 --> 00:43:31,180
tab you can do exact the same attack and

813
00:43:31,180 --> 00:43:33,310
be part of the domain controller and

814
00:43:33,310 --> 00:43:37,420
kind of move laterally the key takeaway

815
00:43:37,420 --> 00:43:40,000
is this and is that basically you you

816
00:43:40,000 --> 00:43:43,240
not your delegating credential not the

817
00:43:43,240 --> 00:43:48,720
service data so if you're compromised a

818
00:43:48,720 --> 00:43:52,690
machine with a delegated rights that you

819
00:43:52,690 --> 00:43:55,869
can essentially request any service

820
00:43:55,869 --> 00:43:57,750
tickets that you want as opposed to be

821
00:43:57,750 --> 00:44:01,530
restricted to one so when one

822
00:44:01,530 --> 00:44:05,070
service tickets so as the s name is not

823
00:44:05,070 --> 00:44:07,650
protected we can change this name from

824
00:44:07,650 --> 00:44:12,560
CFS to term server to HTTP - MS equal to

825
00:44:12,560 --> 00:44:14,580
whatever that service that you are

826
00:44:14,580 --> 00:44:16,530
Walter access as long as you have the

827
00:44:16,530 --> 00:44:19,350
credential that particular s name it

828
00:44:19,350 --> 00:44:22,830
doesn't get validated my Microsoft bug

829
00:44:22,830 --> 00:44:30,330
or feature who knows but we could also

830
00:44:30,330 --> 00:44:31,560
actually demonstrate this attack from

831
00:44:31,560 --> 00:44:35,160
Windows that you no harm go from Specter

832
00:44:35,160 --> 00:44:38,400
ops release the fantastic kind of

833
00:44:38,400 --> 00:44:43,740
Kerberos attack package my attacking

834
00:44:43,740 --> 00:44:45,900
machine is it's not the main joint

835
00:44:45,900 --> 00:44:50,910
Windows 10 and we are using rebus and I

836
00:44:50,910 --> 00:44:52,560
have this service accounts password that

837
00:44:52,560 --> 00:44:55,160
we created previously

838
00:44:55,800 --> 00:44:59,040
we essentially chose the clear text back

839
00:44:59,040 --> 00:45:02,670
to the ntlm hash so that we can use that

840
00:45:02,670 --> 00:45:09,650
and then we the previous again

841
00:45:09,650 --> 00:45:14,720
implements the s for you and s for proxy

842
00:45:14,720 --> 00:45:19,910
concepts and using rivers again we

843
00:45:19,910 --> 00:45:22,260
specify the impersonated user that we

844
00:45:22,260 --> 00:45:24,780
use it's a new Windows machine so we we

845
00:45:24,780 --> 00:45:26,520
want we're saying that okay we want to

846
00:45:26,520 --> 00:45:31,050
actually impersonate admin which is a

847
00:45:31,050 --> 00:45:32,940
local administrator within the domain

848
00:45:32,940 --> 00:45:38,160
and then we specify the rc4 that we

849
00:45:38,160 --> 00:45:40,110
converted the clear text to our C for

850
00:45:40,110 --> 00:45:44,880
the ntlm we use build rack so a

851
00:45:44,880 --> 00:45:48,990
presentation to Kerberos we use the TGT

852
00:45:48,990 --> 00:45:52,130
to do s for you to self s for each proxy

853
00:45:52,130 --> 00:45:55,920
and then we demonstrate to the ID that

854
00:45:55,920 --> 00:45:58,650
we actually we have the tickets that we

855
00:45:58,650 --> 00:46:02,190
are the machine account and then we

856
00:46:02,190 --> 00:46:07,080
execute the s for you to proxy to

857
00:46:07,080 --> 00:46:10,110
impersonate admin that who to make the

858
00:46:10,110 --> 00:46:13,710
admin actually access CFS CIFS on the

859
00:46:13,710 --> 00:46:15,410
target

860
00:46:15,410 --> 00:46:19,519
and then again with within that windows

861
00:46:19,519 --> 00:46:21,369
now that we have the tickets within the

862
00:46:21,369 --> 00:46:26,000
Alsace so we have received a tip TGS

863
00:46:26,000 --> 00:46:29,690
ticket to our windows not part of the

864
00:46:29,690 --> 00:46:33,349
domain controller and I'm just doing a a

865
00:46:33,349 --> 00:46:37,160
list on the remote server that's I have

866
00:46:37,160 --> 00:46:41,450
impersonated admin user on SRV one yes I

867
00:46:41,450 --> 00:46:44,809
have access again as you know that it

868
00:46:44,809 --> 00:46:51,470
look white admin privilege so another

869
00:46:51,470 --> 00:46:52,910
way to actually attack it's further

870
00:46:52,910 --> 00:46:55,549
research and this is to whether you can

871
00:46:55,549 --> 00:46:58,579
use the win RM as we said that SNM is

872
00:46:58,579 --> 00:47:01,009
not put SS name is not protected you can

873
00:47:01,009 --> 00:47:04,339
replace the service name to any service

874
00:47:04,339 --> 00:47:07,329
that you want but in this instance that

875
00:47:07,329 --> 00:47:11,779
win RM require two HTTP the service so

876
00:47:11,779 --> 00:47:15,230
instead of you know requesting CIFS you

877
00:47:15,230 --> 00:47:18,319
can just say look we want HTTP service

878
00:47:18,319 --> 00:47:21,680
by specifying the alternative service

879
00:47:21,680 --> 00:47:26,029
which supported by which supported by

880
00:47:26,029 --> 00:47:28,490
which rebirths luckily in the specter

881
00:47:28,490 --> 00:47:30,619
ops team actually added this feature so

882
00:47:30,619 --> 00:47:32,930
you can just say look I want HTTP

883
00:47:32,930 --> 00:47:37,670
service now you can use because you've

884
00:47:37,670 --> 00:47:42,109
changed the s name from CFS through HTTP

885
00:47:42,109 --> 00:47:46,849
you can yes you can use win RM in to

886
00:47:46,849 --> 00:47:48,950
interrupt PS sessions on the remote

887
00:47:48,950 --> 00:47:54,470
server and maybe go there so v1 and then

888
00:47:54,470 --> 00:47:57,319
we can say Who am I I'm a crypto lab

889
00:47:57,319 --> 00:48:01,549
admin so we can use other services

890
00:48:01,549 --> 00:48:05,839
structures at that target server further

891
00:48:05,839 --> 00:48:11,359
research actually RDP is giving me what

892
00:48:11,359 --> 00:48:16,250
if the when I REM or WMI see other CFS s

893
00:48:16,250 --> 00:48:17,960
actually it's been blocked or monitored

894
00:48:17,960 --> 00:48:21,140
by the environment look what else could

895
00:48:21,140 --> 00:48:26,379
you do can you can you use our db2

896
00:48:26,480 --> 00:48:31,100
get that I can use the the same attack

897
00:48:31,100 --> 00:48:37,820
to request to push the tickets that you

898
00:48:37,820 --> 00:48:41,960
have to the remote server using RTP

899
00:48:41,960 --> 00:48:45,560
without actually given the username and

900
00:48:45,560 --> 00:48:48,950
password so pushing the the the ticket

901
00:48:48,950 --> 00:48:54,560
as opposed to so the point the point is

902
00:48:54,560 --> 00:48:58,730
is that you can request term server as

903
00:48:58,730 --> 00:49:02,090
as as my previous slides I mentioned

904
00:49:02,090 --> 00:49:05,000
that s name is not protected it's just

905
00:49:05,000 --> 00:49:06,580
the case of actually changing the

906
00:49:06,580 --> 00:49:09,200
alternative server to temp server and

907
00:49:09,200 --> 00:49:13,100
using a restricted admin future which is

908
00:49:13,100 --> 00:49:17,510
supported by our DP clients with that

909
00:49:17,510 --> 00:49:19,960
restricted admin which is that future

910
00:49:19,960 --> 00:49:25,310
it's in Microsoft it's used to if a comp

911
00:49:25,310 --> 00:49:27,680
if a box is compromised and you don't

912
00:49:27,680 --> 00:49:29,900
want to log into that box by RDP because

913
00:49:29,900 --> 00:49:31,970
you know that if you log into that box

914
00:49:31,970 --> 00:49:35,000
and if this box is compromised someone

915
00:49:35,000 --> 00:49:37,460
could its able to actually harvest your

916
00:49:37,460 --> 00:49:40,430
credential or a restricted admin future

917
00:49:40,430 --> 00:49:44,480
supported from 2008 onward it allows you

918
00:49:44,480 --> 00:49:47,030
can use that future to log into the

919
00:49:47,030 --> 00:49:49,310
compromised box without having your

920
00:49:49,310 --> 00:49:53,240
Prudential stored inside the local

921
00:49:53,240 --> 00:49:54,860
security authentication protocol which

922
00:49:54,860 --> 00:49:57,400
is the authentication package within the

923
00:49:57,400 --> 00:50:04,250
server that you accessing so here again

924
00:50:04,250 --> 00:50:07,310
we're using reboots and we specified the

925
00:50:07,310 --> 00:50:09,320
Machine account that we compromised and

926
00:50:09,320 --> 00:50:12,670
we impersonating the admin account and

927
00:50:12,670 --> 00:50:16,730
we instead of having the CFS or HTTP or

928
00:50:16,730 --> 00:50:20,180
win RM kind of service we just say would

929
00:50:20,180 --> 00:50:23,690
like to have temp set temp service

930
00:50:23,690 --> 00:50:29,570
Espeon tight and I didn't figure out how

931
00:50:29,570 --> 00:50:32,450
else is actually passing this tickets to

932
00:50:32,450 --> 00:50:37,160
the to the remote server and I I didn't

933
00:50:37,160 --> 00:50:38,870
know what me know what tools or what

934
00:50:38,870 --> 00:50:40,280
ways of actually doing that

935
00:50:40,280 --> 00:50:42,170
so I came across a very interesting

936
00:50:42,170 --> 00:50:46,460
article from the founder of the creator

937
00:50:46,460 --> 00:50:50,710
of a mini cats Kiwi and it seems that

938
00:50:50,710 --> 00:50:53,990
Linda cats it's possible with mini cats

939
00:50:53,990 --> 00:50:56,660
using the RDP sake it's that you've

940
00:50:56,660 --> 00:51:00,860
compromised the impersonated admin and

941
00:51:00,860 --> 00:51:04,640
Kerberos ticket and inject that within

942
00:51:04,640 --> 00:51:07,730
the Alsace and actually gain access to

943
00:51:07,730 --> 00:51:12,160
the SRV machine over layered RTP so in

944
00:51:12,160 --> 00:51:14,900
here that I am what I'm doing I'm

945
00:51:14,900 --> 00:51:17,030
listing the on my Windows machine I'm

946
00:51:17,030 --> 00:51:20,890
listing what tickets do I have so I have

947
00:51:20,890 --> 00:51:24,830
term server so Terminal Server tickets

948
00:51:24,830 --> 00:51:32,780
on SRV one crypto lab and it's I mean

949
00:51:32,780 --> 00:51:35,120
with Mema cats um most of people

950
00:51:35,120 --> 00:51:36,800
actually do use it for dubbing

951
00:51:36,800 --> 00:51:38,450
credentials to clear text that you could

952
00:51:38,450 --> 00:51:41,120
do more than more than that I've just

953
00:51:41,120 --> 00:51:42,860
I've been researching on the memory cat

954
00:51:42,860 --> 00:51:47,500
so I came across of that as well and

955
00:51:47,500 --> 00:51:51,050
having specified the restricted admin

956
00:51:51,050 --> 00:51:55,790
future you can within the mimic apps you

957
00:51:55,790 --> 00:51:59,300
can process start with a restricted

958
00:51:59,300 --> 00:52:02,810
admin and you specify your the server

959
00:52:02,810 --> 00:52:05,930
that you attack in and because you've

960
00:52:05,930 --> 00:52:08,540
got the Kerberos ticket here already

961
00:52:08,540 --> 00:52:12,010
turned server you impersonated account

962
00:52:12,010 --> 00:52:15,500
once you injected that you can have RDP

963
00:52:15,500 --> 00:52:23,660
access to your SRV target server so the

964
00:52:23,660 --> 00:52:29,080
entire train of attack is it's it's the

965
00:52:29,200 --> 00:52:31,940
having a good straight delegation if

966
00:52:31,940 --> 00:52:33,590
your cat if you have if you have a

967
00:52:33,590 --> 00:52:35,000
straight delegations within your

968
00:52:35,000 --> 00:52:36,710
environment I mean your unconstraint

969
00:52:36,710 --> 00:52:39,110
Ella Gatien is compromised that you can

970
00:52:39,110 --> 00:52:41,420
impersonate and use it within your

971
00:52:41,420 --> 00:52:43,940
environment and get any service tickets

972
00:52:43,940 --> 00:52:46,160
that you want and essentially in a

973
00:52:46,160 --> 00:52:49,070
compromised domain admin but for this

974
00:52:49,070 --> 00:52:51,860
example I which is able to demonstrate

975
00:52:51,860 --> 00:52:54,200
it to one of the service

976
00:52:54,200 --> 00:52:57,349
within my environment I think that's all

977
00:52:57,349 --> 00:53:00,789
as much as ours all over the place

978
00:53:02,109 --> 00:53:05,109
question

979
00:53:30,380 --> 00:53:33,470
thank you

