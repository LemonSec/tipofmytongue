1
00:00:00,060 --> 00:00:03,959
okay so uh hello everyone and welcome to

2
00:00:03,959 --> 00:00:07,080
battle Power by Windows 11 no code I'm

3
00:00:07,080 --> 00:00:09,540
very happy to to be here with uh with

4
00:00:09,540 --> 00:00:11,820
that with all of you so uh let's get

5
00:00:11,820 --> 00:00:13,920
started

6
00:00:13,920 --> 00:00:17,279
a brief introduction about myself uh I'm

7
00:00:17,279 --> 00:00:20,820
an engineer a hacker I've been so uh for

8
00:00:20,820 --> 00:00:22,859
a long many years now

9
00:00:22,859 --> 00:00:25,920
um I've been working on security for low

10
00:00:25,920 --> 00:00:29,039
code no code for many years now so uh

11
00:00:29,039 --> 00:00:31,679
something like four years I invested in

12
00:00:31,679 --> 00:00:33,059
this topic and you'll see some of the

13
00:00:33,059 --> 00:00:36,540
foods of This research uh today I am the

14
00:00:36,540 --> 00:00:38,460
CTO and co-founder at zenity which is a

15
00:00:38,460 --> 00:00:41,219
company that helps secure those local no

16
00:00:41,219 --> 00:00:43,140
code environments I've been I've spent

17
00:00:43,140 --> 00:00:46,020
several years at Microsoft as part of

18
00:00:46,020 --> 00:00:48,239
the cloud security division working on

19
00:00:48,239 --> 00:00:51,420
iot security and apis and application

20
00:00:51,420 --> 00:00:54,660
security and crypto

21
00:00:54,660 --> 00:00:58,140
um I lead the OAS group for uh for the

22
00:00:58,140 --> 00:01:00,719
top 10 risks so low code no code this is

23
00:01:00,719 --> 00:01:02,640
really unrelated to this stock but it's

24
00:01:02,640 --> 00:01:05,099
kind of in the same area and also uh

25
00:01:05,099 --> 00:01:06,960
writes about these Topics in dark

26
00:01:06,960 --> 00:01:08,580
reading so if you're interested in

27
00:01:08,580 --> 00:01:11,220
learning more uh please reach out to me

28
00:01:11,220 --> 00:01:14,280
I'm happy to discuss any of these things

29
00:01:14,280 --> 00:01:17,119
that we see here today

30
00:01:17,580 --> 00:01:20,280
before we get started it's important to

31
00:01:20,280 --> 00:01:23,159
to know that even though this talk is

32
00:01:23,159 --> 00:01:25,439
given from an attacker's perspective of

33
00:01:25,439 --> 00:01:27,540
course the idea here is to make sure

34
00:01:27,540 --> 00:01:30,299
that we as security teams of uh as

35
00:01:30,299 --> 00:01:33,180
Defenders can make can basically

36
00:01:33,180 --> 00:01:36,720
understand how to use no code in in a

37
00:01:36,720 --> 00:01:38,640
good way in a in a way that is governed

38
00:01:38,640 --> 00:01:41,159
that is maintained uh and understand its

39
00:01:41,159 --> 00:01:43,680
risks we uh we love no code we think

40
00:01:43,680 --> 00:01:45,960
it's it's awesome uh but it's really

41
00:01:45,960 --> 00:01:49,320
important to do it in a responsible way

42
00:01:49,320 --> 00:01:53,579
so what we're going to show you today is

43
00:01:53,579 --> 00:01:55,979
how do you take an initial access

44
00:01:55,979 --> 00:01:58,380
initial access to a machine and turn it

45
00:01:58,380 --> 00:02:01,680
into entire uh malware operation now let

46
00:02:01,680 --> 00:02:05,340
me start by starting by clarifying what

47
00:02:05,340 --> 00:02:08,459
do I mean by a model operation so you

48
00:02:08,459 --> 00:02:10,318
start off let's say that you got into

49
00:02:10,318 --> 00:02:12,599
some some machine where you have initial

50
00:02:12,599 --> 00:02:14,360
access you're running there

51
00:02:14,360 --> 00:02:17,520
this is just the beginning of your

52
00:02:17,520 --> 00:02:20,280
journey as a as an attacker to try and

53
00:02:20,280 --> 00:02:23,400
capture everything to try and basically

54
00:02:23,400 --> 00:02:28,140
uh do kind of achieve your goals using

55
00:02:28,140 --> 00:02:30,959
that machine you need to go through

56
00:02:30,959 --> 00:02:32,700
typically you need to go through a

57
00:02:32,700 --> 00:02:34,620
firewall because this machine is uh is

58
00:02:34,620 --> 00:02:36,420
typically inside of a corporate Network

59
00:02:36,420 --> 00:02:38,340
you need to be able to actually run

60
00:02:38,340 --> 00:02:40,260
malware on the machine or just have the

61
00:02:40,260 --> 00:02:43,560
initial access and be able to execute to

62
00:02:43,560 --> 00:02:45,480
execute something on that machine you

63
00:02:45,480 --> 00:02:47,160
need to be able to communicate through

64
00:02:47,160 --> 00:02:49,019
the firewall with your command and

65
00:02:49,019 --> 00:02:49,860
control

66
00:02:49,860 --> 00:02:52,500
you need to explain data back uh without

67
00:02:52,500 --> 00:02:55,340
being detected

68
00:02:57,480 --> 00:03:00,720
you also need to uh to to avoid that to

69
00:03:00,720 --> 00:03:03,239
avoid detection either by the EDR on the

70
00:03:03,239 --> 00:03:05,580
machine side or on the network or not

71
00:03:05,580 --> 00:03:07,440
many other kind of different places

72
00:03:07,440 --> 00:03:09,480
where Defenders might be looking for you

73
00:03:09,480 --> 00:03:11,760
and of course you want to remain

74
00:03:11,760 --> 00:03:14,159
persistent so even if they try to kick

75
00:03:14,159 --> 00:03:15,840
you off or somebody Boots the machine

76
00:03:15,840 --> 00:03:17,940
you still want to be there and that's

77
00:03:17,940 --> 00:03:21,360
the uh that's the main issue that all of

78
00:03:21,360 --> 00:03:24,599
these things there's so much there's so

79
00:03:24,599 --> 00:03:26,819
much to do other than just the initial

80
00:03:26,819 --> 00:03:30,000
initial access so and and all of these

81
00:03:30,000 --> 00:03:33,000
things that we see here on the list most

82
00:03:33,000 --> 00:03:34,860
of them are actually just grant work

83
00:03:34,860 --> 00:03:38,159
they're just Ops so I'm showing you a

84
00:03:38,159 --> 00:03:40,200
list where this the first thing is

85
00:03:40,200 --> 00:03:41,700
initial access and the last thing is

86
00:03:41,700 --> 00:03:44,040
profit and that's where uh hackers want

87
00:03:44,040 --> 00:03:46,920
to uh want to focus on but there's this

88
00:03:46,920 --> 00:03:49,580
whole bunch of work that you need to do

89
00:03:49,580 --> 00:03:51,599
deploying the malware command and

90
00:03:51,599 --> 00:03:53,519
control everything that we just saw

91
00:03:53,519 --> 00:03:57,720
that you still need to accomplish so the

92
00:03:57,720 --> 00:03:59,519
main question for this talk is can we

93
00:03:59,519 --> 00:04:02,280
find somebody else to do this for us can

94
00:04:02,280 --> 00:04:05,040
we find a SAS Vendo somebody to just

95
00:04:05,040 --> 00:04:08,400
take care of these problems for us

96
00:04:08,400 --> 00:04:09,659
and

97
00:04:09,659 --> 00:04:12,120
um so now that's uh that's a perfect

98
00:04:12,120 --> 00:04:15,180
segue to introduce RPA robotic process

99
00:04:15,180 --> 00:04:17,040
automation I'm not sure how many of you

100
00:04:17,040 --> 00:04:19,620
uh are familiar with it but I will share

101
00:04:19,620 --> 00:04:21,600
enough about it today so you can

102
00:04:21,600 --> 00:04:24,000
understand the exploit but basically

103
00:04:24,000 --> 00:04:26,040
robotic process automation is a what is

104
00:04:26,040 --> 00:04:28,440
a is a new type of product released in

105
00:04:28,440 --> 00:04:31,680
the few in the last few years well the

106
00:04:31,680 --> 00:04:34,199
the valuable position is helping users

107
00:04:34,199 --> 00:04:36,900
automate my mundane tasks so things like

108
00:04:36,900 --> 00:04:39,840
uh onboarding and off-boarding users or

109
00:04:39,840 --> 00:04:43,080
copying and pasting receipts all of

110
00:04:43,080 --> 00:04:44,520
those things that people are doing

111
00:04:44,520 --> 00:04:45,780
manually

112
00:04:45,780 --> 00:04:48,540
LPA can do automatically and RPI is

113
00:04:48,540 --> 00:04:50,639
comprised of three separate uh

114
00:04:50,639 --> 00:04:52,560
components the first one is an agent

115
00:04:52,560 --> 00:04:55,259
that sits on the on the user's VM or the

116
00:04:55,259 --> 00:04:56,759
user's laptop so this is actually

117
00:04:56,759 --> 00:04:58,860
running in the user context with the

118
00:04:58,860 --> 00:05:00,840
inside of the laptop the second is the

119
00:05:00,840 --> 00:05:02,820
robot controller this is the basically

120
00:05:02,820 --> 00:05:05,040
the the uh the service that is able to

121
00:05:05,040 --> 00:05:08,520
uh Connect into the user's laptop and

122
00:05:08,520 --> 00:05:11,160
then send out commands and fetch the uh

123
00:05:11,160 --> 00:05:13,199
the results of those commands and the

124
00:05:13,199 --> 00:05:14,940
third piece is the management portal

125
00:05:14,940 --> 00:05:16,680
where you're able to see all of your

126
00:05:16,680 --> 00:05:19,680
payloads you're able to uh or of your

127
00:05:19,680 --> 00:05:21,180
tasks you're able to distribute those

128
00:05:21,180 --> 00:05:23,820
tasks through the robot controller to

129
00:05:23,820 --> 00:05:26,880
each one of the of those laptops so uh

130
00:05:26,880 --> 00:05:29,100
and then so you understand that robotic

131
00:05:29,100 --> 00:05:31,680
process automation is about being able

132
00:05:31,680 --> 00:05:34,139
to run things across multiple machines

133
00:05:34,139 --> 00:05:36,780
on the user's laptops with the users own

134
00:05:36,780 --> 00:05:38,100
context

135
00:05:38,100 --> 00:05:40,560
and the and the most important piece to

136
00:05:40,560 --> 00:05:44,160
to get about RPA is that it is uh

137
00:05:44,160 --> 00:05:46,680
utterly and totally trusted so the the

138
00:05:46,680 --> 00:05:49,199
agents that sit on people's laptops they

139
00:05:49,199 --> 00:05:51,120
are trusted they run on trusted

140
00:05:51,120 --> 00:05:53,100
executables and we'll see in a moment

141
00:05:53,100 --> 00:05:55,320
that they also use trusted services and

142
00:05:55,320 --> 00:05:57,120
by trusted I mean they are whitelisted

143
00:05:57,120 --> 00:06:00,060
by the uh by the edrs and by any

144
00:06:00,060 --> 00:06:01,440
endpoint protection that you'll find

145
00:06:01,440 --> 00:06:04,080
there are also uh the communication is

146
00:06:04,080 --> 00:06:06,600
trusted as well so the services that are

147
00:06:06,600 --> 00:06:08,880
being used in order to send out those

148
00:06:08,880 --> 00:06:10,860
payloads and to receive the data back

149
00:06:10,860 --> 00:06:13,320
are also trusted by network security

150
00:06:13,320 --> 00:06:16,620
appliances or by uh uh by by stock teams

151
00:06:16,620 --> 00:06:19,199
and so those won't be flagged as well

152
00:06:19,199 --> 00:06:20,699
and of course the cloud services the

153
00:06:20,699 --> 00:06:22,440
Management Services that is trusted as

154
00:06:22,440 --> 00:06:24,000
well

155
00:06:24,000 --> 00:06:27,660
now RPA is really everywhere within the

156
00:06:27,660 --> 00:06:29,759
Enterprise and you see here the kind of

157
00:06:29,759 --> 00:06:33,000
the the major names there are others uh

158
00:06:33,000 --> 00:06:36,300
but actually all of these things have uh

159
00:06:36,300 --> 00:06:39,240
all of these things are are really found

160
00:06:39,240 --> 00:06:41,039
their way uh strongly into the

161
00:06:41,039 --> 00:06:43,139
Enterprise and if you work at a large

162
00:06:43,139 --> 00:06:45,900
Enterprise chances are you already have

163
00:06:45,900 --> 00:06:47,580
one of those agents running on your

164
00:06:47,580 --> 00:06:50,580
machine uh and and this is the main

165
00:06:50,580 --> 00:06:52,080
reason why this is interesting because

166
00:06:52,080 --> 00:06:55,319
if we can find a way to leverage RPA to

167
00:06:55,319 --> 00:06:57,539
our advantage uh there's a lot to

168
00:06:57,539 --> 00:06:59,940
benefit from it especially in an

169
00:06:59,940 --> 00:07:02,280
Enterprise environment

170
00:07:02,280 --> 00:07:06,660
so RPA can actually solve all of the Ops

171
00:07:06,660 --> 00:07:09,600
Ops problem problems for us so command

172
00:07:09,600 --> 00:07:11,940
and control exfiltration defense evasion

173
00:07:11,940 --> 00:07:14,039
we will see all of that how we can use

174
00:07:14,039 --> 00:07:18,600
RPA to basically uh uh do what it's

175
00:07:18,600 --> 00:07:20,280
supposed to do so you're sending out

176
00:07:20,280 --> 00:07:21,780
payloads you're getting the request

177
00:07:21,780 --> 00:07:23,819
you're getting the results but you're

178
00:07:23,819 --> 00:07:26,400
doing it as a hacker rather than the it

179
00:07:26,400 --> 00:07:30,599
the IIT Administration but actually RPA

180
00:07:30,599 --> 00:07:33,180
would give us much more it will give us

181
00:07:33,180 --> 00:07:34,979
the ability to

182
00:07:34,979 --> 00:07:36,560
um to basically

183
00:07:36,560 --> 00:07:39,360
handle our support different OS versions

184
00:07:39,360 --> 00:07:41,280
which means engineering so everything

185
00:07:41,280 --> 00:07:43,319
that we need around building those

186
00:07:43,319 --> 00:07:45,300
payloads and on making sure that those

187
00:07:45,300 --> 00:07:47,819
payloads are operating properly making

188
00:07:47,819 --> 00:07:49,800
sure that we support each and every type

189
00:07:49,800 --> 00:07:52,979
of OS version out there RPA will do all

190
00:07:52,979 --> 00:07:55,380
of that for us so you see where this is

191
00:07:55,380 --> 00:07:58,860
going and this leads me to uh to uh to

192
00:07:58,860 --> 00:08:00,720
show us the to so let's let's try and

193
00:08:00,720 --> 00:08:04,139
figure out how today what is the next

194
00:08:04,139 --> 00:08:07,080
step we're going to do today so here's

195
00:08:07,080 --> 00:08:08,580
the outline I'm going to take a quick

196
00:08:08,580 --> 00:08:11,240
water break

197
00:08:13,080 --> 00:08:16,080
so here's the outline for this talk we

198
00:08:16,080 --> 00:08:18,599
saw why malware operations is important

199
00:08:18,599 --> 00:08:20,520
the next step for us we're going to

200
00:08:20,520 --> 00:08:23,400
understand what RPA is so don't worry we

201
00:08:23,400 --> 00:08:25,259
want we won't dive really into the

202
00:08:25,259 --> 00:08:26,819
details but you'll figure out just

203
00:08:26,819 --> 00:08:28,379
enough in order to understand how to

204
00:08:28,379 --> 00:08:31,680
exploit it so the part after that we see

205
00:08:31,680 --> 00:08:35,279
a really a technical depth of how RPA

206
00:08:35,279 --> 00:08:38,399
works and how does it how exactly an LPI

207
00:08:38,399 --> 00:08:40,620
service is able to uh to connect with

208
00:08:40,620 --> 00:08:42,120
somebody's laptop inside a co-port

209
00:08:42,120 --> 00:08:45,480
network later we'll see how to abuse LPA

210
00:08:45,480 --> 00:08:47,519
and finally you will show we will share

211
00:08:47,519 --> 00:08:49,080
a tool that allows you to do everything

212
00:08:49,080 --> 00:08:51,240
that you'll see during this talk so you

213
00:08:51,240 --> 00:08:54,959
can go go home and try it for yourself

214
00:08:54,959 --> 00:08:57,360
so next up we're going to try and figure

215
00:08:57,360 --> 00:08:59,880
out what RPA is and in order to do that

216
00:08:59,880 --> 00:09:02,519
let me start with uh with a brief kind

217
00:09:02,519 --> 00:09:04,800
of personal story so when I was a

218
00:09:04,800 --> 00:09:07,140
teenager my friends and I were obsessed

219
00:09:07,140 --> 00:09:10,140
with a game called uh tibia tibia was an

220
00:09:10,140 --> 00:09:12,839
mrpg game uh where you basically you

221
00:09:12,839 --> 00:09:14,459
level up your characters you improve

222
00:09:14,459 --> 00:09:16,080
your skills you collaborate with other

223
00:09:16,080 --> 00:09:19,500
with other users to uh to do quests and

224
00:09:19,500 --> 00:09:21,600
and kind of gain influence

225
00:09:21,600 --> 00:09:24,899
um actually a lot of my time at tibia

226
00:09:24,899 --> 00:09:28,080
was spent doing something like this

227
00:09:28,080 --> 00:09:30,000
um which is actually kind of a in-game

228
00:09:30,000 --> 00:09:32,760
fishing so buying game fishing I mean

229
00:09:32,760 --> 00:09:34,860
you click on the uh you need to click on

230
00:09:34,860 --> 00:09:37,560
on on on the road and then you click on

231
00:09:37,560 --> 00:09:39,959
the C and then sometimes you get you get

232
00:09:39,959 --> 00:09:43,620
fish and this was about 90 of my time

233
00:09:43,620 --> 00:09:46,320
spent in this game as a kid

234
00:09:46,320 --> 00:09:48,720
um was was this grant one was this

235
00:09:48,720 --> 00:09:50,940
clickwork so you click and you get some

236
00:09:50,940 --> 00:09:52,560
fish and you click and you get some fish

237
00:09:52,560 --> 00:09:54,600
and you click and you get some fish and

238
00:09:54,600 --> 00:09:56,519
eventually really you understand that

239
00:09:56,519 --> 00:09:59,519
this is kind of uh this this is the

240
00:09:59,519 --> 00:10:01,560
equation that you're following basically

241
00:10:01,560 --> 00:10:04,200
you tell them you turn clicks and and

242
00:10:04,200 --> 00:10:06,540
virtual worms into Virtual Fish which is

243
00:10:06,540 --> 00:10:08,580
really really boring

244
00:10:08,580 --> 00:10:10,500
but it was important for the game and it

245
00:10:10,500 --> 00:10:12,839
was important for us as kind of for my

246
00:10:12,839 --> 00:10:15,600
friends so I wanted to I want to look

247
00:10:15,600 --> 00:10:17,100
good in front of my friend I wanted to

248
00:10:17,100 --> 00:10:20,100
find a creative solution to get to get

249
00:10:20,100 --> 00:10:23,640
an advantage so the first attempt uh at

250
00:10:23,640 --> 00:10:26,220
trying to solve this was

251
00:10:26,220 --> 00:10:28,680
um physical automation so essentially I

252
00:10:28,680 --> 00:10:30,779
put a bunch of books on on the on the

253
00:10:30,779 --> 00:10:34,140
mouse uh and then it was it stayed

254
00:10:34,140 --> 00:10:35,820
clicked through during during the night

255
00:10:35,820 --> 00:10:37,560
I would set up everything just the right

256
00:10:37,560 --> 00:10:39,540
way and then I would go to sleep I would

257
00:10:39,540 --> 00:10:41,279
wake up in the morning and one of two

258
00:10:41,279 --> 00:10:43,860
things happened either I leveled up and

259
00:10:43,860 --> 00:10:46,380
everything was good all uh the book fell

260
00:10:46,380 --> 00:10:50,040
over uh something happened uh the game

261
00:10:50,040 --> 00:10:54,360
was stuck and so this didn't really work

262
00:10:54,360 --> 00:10:57,899
as uh the right way that I expected and

263
00:10:57,899 --> 00:11:00,360
so uh as a young kid I started kind of

264
00:11:00,360 --> 00:11:02,459
looking around and I figured out that

265
00:11:02,459 --> 00:11:04,560
probably there's uh there's a better way

266
00:11:04,560 --> 00:11:06,180
than physical automation

267
00:11:06,180 --> 00:11:08,760
and I wanted to actually automation so I

268
00:11:08,760 --> 00:11:11,820
found uh uh a software that allowed me

269
00:11:11,820 --> 00:11:14,940
to record my screen and my mouse so I I

270
00:11:14,940 --> 00:11:19,140
do a kind of a routine of uh of fishing

271
00:11:19,140 --> 00:11:22,860
and then it reiterated those recorded

272
00:11:22,860 --> 00:11:26,160
actions on top of the uh on top of the

273
00:11:26,160 --> 00:11:28,620
game again and again so uh let's see how

274
00:11:28,620 --> 00:11:30,000
this looks like

275
00:11:30,000 --> 00:11:33,480
so as you can see basically this covers

276
00:11:33,480 --> 00:11:36,240
everything needed in order to uh in

277
00:11:36,240 --> 00:11:39,000
order to fish so I move around I I can

278
00:11:39,000 --> 00:11:42,060
click different parts of the sea so once

279
00:11:42,060 --> 00:11:44,640
this was uh once while once I had this

280
00:11:44,640 --> 00:11:46,560
real automation of course I could also

281
00:11:46,560 --> 00:11:48,600
share it with other people so I kind of

282
00:11:48,600 --> 00:11:51,180
became uh this gave me kind of a became

283
00:11:51,180 --> 00:11:53,640
a shortly for a kind of a hero of my

284
00:11:53,640 --> 00:11:55,680
friends which was which was fun

285
00:11:55,680 --> 00:11:57,959
um and of course this is a silly example

286
00:11:57,959 --> 00:12:02,640
but uh it's also the basis of RPA RPA

287
00:12:02,640 --> 00:12:05,700
works by automating and reiterating The

288
00:12:05,700 --> 00:12:08,519
Mouse and the keyboard or basically

289
00:12:08,519 --> 00:12:11,279
in person I think the user and being

290
00:12:11,279 --> 00:12:15,120
able to run automations uh when uh well

291
00:12:15,120 --> 00:12:18,060
as an as you impersonate a user and of

292
00:12:18,060 --> 00:12:19,980
course it evolved it evolved from there

293
00:12:19,980 --> 00:12:22,260
and we see it in a moment but the main

294
00:12:22,260 --> 00:12:25,200
idea is that RPI can be used in order to

295
00:12:25,200 --> 00:12:27,720
integrate with Legacy systems systems

296
00:12:27,720 --> 00:12:29,459
that don't have an API that only have a

297
00:12:29,459 --> 00:12:32,160
UI and so in order to interact with them

298
00:12:32,160 --> 00:12:33,540
you need to use the mouse and the

299
00:12:33,540 --> 00:12:37,500
keyboard so a quick kind of uh a few

300
00:12:37,500 --> 00:12:40,500
things to note about LPA so uh we

301
00:12:40,500 --> 00:12:42,300
already saw that this is kind of the

302
00:12:42,300 --> 00:12:44,880
idea here that this emulates user

303
00:12:44,880 --> 00:12:47,880
actions we saw the uh we will see that

304
00:12:47,880 --> 00:12:50,399
LPA is essentially was essentially

305
00:12:50,399 --> 00:12:51,899
considered something that will replace

306
00:12:51,899 --> 00:12:53,880
copy and paste integration so you copy

307
00:12:53,880 --> 00:12:56,220
things from one system and you uh and

308
00:12:56,220 --> 00:12:57,839
you move them to the other and the way

309
00:12:57,839 --> 00:13:00,480
that you build RPA is really with the

310
00:13:00,480 --> 00:13:02,220
with no code so you drag and drop things

311
00:13:02,220 --> 00:13:04,620
so you record some sort of a session and

312
00:13:04,620 --> 00:13:06,899
then it will it will uh reiterate and

313
00:13:06,899 --> 00:13:08,700
the use cases we have already covered

314
00:13:08,700 --> 00:13:10,680
some of them but you can see that they

315
00:13:10,680 --> 00:13:12,660
are very strong

316
00:13:12,660 --> 00:13:14,880
business use cases and specifically

317
00:13:14,880 --> 00:13:17,760
Enterprise use cases to use LPA and this

318
00:13:17,760 --> 00:13:19,380
is things this is something that people

319
00:13:19,380 --> 00:13:21,000
are are building within the Enterprise

320
00:13:21,000 --> 00:13:22,320
today

321
00:13:22,320 --> 00:13:25,380
so the next step in order to understand

322
00:13:25,380 --> 00:13:28,139
in order to progress in our story is to

323
00:13:28,139 --> 00:13:31,320
figure out how our API works and before

324
00:13:31,320 --> 00:13:33,720
we uh and this is this is what we're

325
00:13:33,720 --> 00:13:36,060
going to do today uh you know before we

326
00:13:36,060 --> 00:13:38,940
understand how we can leverage RPA for

327
00:13:38,940 --> 00:13:40,740
malware operations we need to figure out

328
00:13:40,740 --> 00:13:44,220
what RPA is uh in a technical level

329
00:13:44,220 --> 00:13:48,120
um and we're going to focus on Windows

330
00:13:48,120 --> 00:13:50,880
11 and on Windows 11 RPA capabilities

331
00:13:50,880 --> 00:13:52,980
and the reason of course is that the

332
00:13:52,980 --> 00:13:56,399
agent the RPA agent for uh for Microsoft

333
00:13:56,399 --> 00:13:59,220
is actually baked into windows 11. so if

334
00:13:59,220 --> 00:14:00,899
you're using a Windows 11 machine I

335
00:14:00,899 --> 00:14:03,800
encourage you search for Power automate

336
00:14:03,800 --> 00:14:06,060
within your laptop you'll find this

337
00:14:06,060 --> 00:14:07,980
agent they're all already there and

338
00:14:07,980 --> 00:14:09,300
that's the reason why we're focusing

339
00:14:09,300 --> 00:14:11,459
here of course any of the exploits that

340
00:14:11,459 --> 00:14:13,920
I will show today are not really tied

341
00:14:13,920 --> 00:14:16,260
only to Windows 11. this is an inherent

342
00:14:16,260 --> 00:14:17,880
problem with RPA

343
00:14:17,880 --> 00:14:19,440
so

344
00:14:19,440 --> 00:14:22,200
um let's start from the user perspective

345
00:14:22,200 --> 00:14:24,240
here's how it looks like if you have a

346
00:14:24,240 --> 00:14:27,420
fresh Windows 11 machine you open up the

347
00:14:27,420 --> 00:14:28,980
start menu and you search for Power

348
00:14:28,980 --> 00:14:31,800
automate you'll find that agent so you

349
00:14:31,800 --> 00:14:33,899
see it it's already kind of baked in

350
00:14:33,899 --> 00:14:36,779
baked in there into windows 11.

351
00:14:36,779 --> 00:14:42,839
the setup side looks something like this

352
00:14:42,839 --> 00:14:46,320
so this is very simple I opened this RPA

353
00:14:46,320 --> 00:14:48,300
agent for the first time I'm going to

354
00:14:48,300 --> 00:14:50,519
need to enter credentials those are

355
00:14:50,519 --> 00:14:52,139
credentials to Microsoft because this is

356
00:14:52,139 --> 00:14:55,199
authenticating to Microsoft services

357
00:14:55,199 --> 00:14:57,420
once I plug in my credentials you can

358
00:14:57,420 --> 00:14:59,279
see that I have a list of things already

359
00:14:59,279 --> 00:15:01,139
available there we'll talk about them in

360
00:15:01,139 --> 00:15:03,899
a moment and now just kind of so you get

361
00:15:03,899 --> 00:15:06,060
a feeling of how things look like this

362
00:15:06,060 --> 00:15:08,279
is the editor that allows you to build

363
00:15:08,279 --> 00:15:09,720
things with power to my desktop

364
00:15:09,720 --> 00:15:12,060
Microsoft LPA you can see that I I'm

365
00:15:12,060 --> 00:15:13,980
picking and two I'm choosing specific

366
00:15:13,980 --> 00:15:16,139
action that writes information to file

367
00:15:16,139 --> 00:15:18,480
I'm going to give a path to that file

368
00:15:18,480 --> 00:15:20,639
and in a moment I'm going to say what I

369
00:15:20,639 --> 00:15:22,380
want to write in that file but you

370
00:15:22,380 --> 00:15:24,300
considered a whole bunch of actions I

371
00:15:24,300 --> 00:15:26,940
could I could take uh so one era when I

372
00:15:26,940 --> 00:15:29,100
run action when I click on action this

373
00:15:29,100 --> 00:15:32,639
thing operates again with my user and

374
00:15:32,639 --> 00:15:34,860
the file is created and there's no real

375
00:15:34,860 --> 00:15:37,139
way to distinguish whether this was done

376
00:15:37,139 --> 00:15:40,440
by that RPA agent on mobile myself now

377
00:15:40,440 --> 00:15:43,440
the crucial piece to note here is the

378
00:15:43,440 --> 00:15:45,959
fact that this is already connected to

379
00:15:45,959 --> 00:15:47,699
this is somewhere connected to the cloud

380
00:15:47,699 --> 00:15:50,459
right because the first thing that I got

381
00:15:50,459 --> 00:15:53,459
when I started this uh when I connected

382
00:15:53,459 --> 00:15:56,820
my my uh uh with my user is actually the

383
00:15:56,820 --> 00:15:59,100
list of payloads here the list of the

384
00:15:59,100 --> 00:16:01,019
different things that this agent is able

385
00:16:01,019 --> 00:16:03,480
to perform now how does that work

386
00:16:03,480 --> 00:16:06,420
imagine that this machine is inside the

387
00:16:06,420 --> 00:16:08,339
corporate Network deep within the

388
00:16:08,339 --> 00:16:10,320
network nobody has talked with the

389
00:16:10,320 --> 00:16:12,959
network security team to open up ports

390
00:16:12,959 --> 00:16:15,360
nobody's talked with the edl teams to

391
00:16:15,360 --> 00:16:18,300
allow certain applications how exactly

392
00:16:18,300 --> 00:16:20,820
does that work

393
00:16:20,820 --> 00:16:23,820
so this is this is what we saw let's see

394
00:16:23,820 --> 00:16:26,940
from an architectural perspective so on

395
00:16:26,940 --> 00:16:28,920
the on this on the left hand we have

396
00:16:28,920 --> 00:16:30,839
power automate which I assume for now

397
00:16:30,839 --> 00:16:33,000
sits in an on-prem environment very

398
00:16:33,000 --> 00:16:35,639
segregated difficult to get outside and

399
00:16:35,639 --> 00:16:36,899
for on the right side you have office

400
00:16:36,899 --> 00:16:39,000
cloud services which are on the public

401
00:16:39,000 --> 00:16:40,800
internet how exactly is the

402
00:16:40,800 --> 00:16:43,440
communication uh being performed here

403
00:16:43,440 --> 00:16:45,959
so first of all power automate is not

404
00:16:45,959 --> 00:16:47,820
actually uh we'll start off with it with

405
00:16:47,820 --> 00:16:49,560
the left side and power automate is not

406
00:16:49,560 --> 00:16:52,500
actually one executable uh but uh there

407
00:16:52,500 --> 00:16:53,699
are a Fields there are several

408
00:16:53,699 --> 00:16:55,800
executables there but also separate

409
00:16:55,800 --> 00:16:58,380
services so as you can see Power

410
00:16:58,380 --> 00:17:00,839
automate itself which is the agent that

411
00:17:00,839 --> 00:17:02,940
actually performs the operation it runs

412
00:17:02,940 --> 00:17:04,740
on the user side within the machine so

413
00:17:04,740 --> 00:17:06,660
we write the trines runs in the context

414
00:17:06,660 --> 00:17:09,540
of a user but it also spawns another

415
00:17:09,540 --> 00:17:12,660
service inside of a new service account

416
00:17:12,660 --> 00:17:15,839
created locally which is this UI flow

417
00:17:15,839 --> 00:17:18,419
service which runs the machine runtime

418
00:17:18,419 --> 00:17:21,299
executable and this executable doesn't

419
00:17:21,299 --> 00:17:24,059
run in the user context and it is the

420
00:17:24,059 --> 00:17:25,919
one that is in charge of of getting

421
00:17:25,919 --> 00:17:28,079
those payloads from the from the cloud

422
00:17:28,079 --> 00:17:30,000
and sending out the results and we'll

423
00:17:30,000 --> 00:17:34,400
see that again in a in just a moment

424
00:17:35,240 --> 00:17:38,640
the uh the capability the one of the

425
00:17:38,640 --> 00:17:40,799
capabilities that uh that power automate

426
00:17:40,799 --> 00:17:43,620
has is also to plug into your browser so

427
00:17:43,620 --> 00:17:45,780
to automate your browser and you can see

428
00:17:45,780 --> 00:17:47,760
that in order to install this and this

429
00:17:47,760 --> 00:17:49,860
is available for all major browsers you

430
00:17:49,860 --> 00:17:52,740
basically need to have uh uh you need to

431
00:17:52,740 --> 00:17:55,860
give this plugin full uh full-on guard

432
00:17:55,860 --> 00:17:59,280
mode on your on your browser and then it

433
00:17:59,280 --> 00:18:00,480
is able to communicate with power

434
00:18:00,480 --> 00:18:03,120
automate to do things like uh change the

435
00:18:03,120 --> 00:18:06,120
behavior of the websites that your

436
00:18:06,120 --> 00:18:08,160
um that you're viewing but also kind of

437
00:18:08,160 --> 00:18:11,580
uh go go to those websites and automate

438
00:18:11,580 --> 00:18:13,020
them on your behalf

439
00:18:13,020 --> 00:18:16,200
so in order to uh to communicate with

440
00:18:16,200 --> 00:18:18,120
the browser there's the extension on the

441
00:18:18,120 --> 00:18:19,559
browser side of course there are also

442
00:18:19,559 --> 00:18:22,320
executables uh on the power automate

443
00:18:22,320 --> 00:18:25,380
side on the desktop side

444
00:18:25,380 --> 00:18:28,440
this is where we typically see the agent

445
00:18:28,440 --> 00:18:30,720
uh this is where it comes off uh

446
00:18:30,720 --> 00:18:33,419
installed pre-installed and you can see

447
00:18:33,419 --> 00:18:36,240
uh that I've I'm showing here the

448
00:18:36,240 --> 00:18:38,280
specific executables that I've discussed

449
00:18:38,280 --> 00:18:40,919
but actually there are a whole bunch of

450
00:18:40,919 --> 00:18:43,080
executables there some of them run on

451
00:18:43,080 --> 00:18:45,660
the user context and others on the on

452
00:18:45,660 --> 00:18:49,559
the service context this is a very uh

453
00:18:49,559 --> 00:18:52,260
these are all pretty new in terms of

454
00:18:52,260 --> 00:18:54,480
their uh putting them into Windows 11

455
00:18:54,480 --> 00:18:56,340
which means that there's a lot of room

456
00:18:56,340 --> 00:18:58,140
for future research here so if you're

457
00:18:58,140 --> 00:18:59,940
interested in checking things around for

458
00:18:59,940 --> 00:19:02,160
yourself I I really recommend checking

459
00:19:02,160 --> 00:19:06,419
us checking out these executables so we

460
00:19:06,419 --> 00:19:09,000
understand uh the left side we

461
00:19:09,000 --> 00:19:11,160
understand how the machine side operates

462
00:19:11,160 --> 00:19:14,640
and when we stop and think about how can

463
00:19:14,640 --> 00:19:16,380
this be how can all of these Services

464
00:19:16,380 --> 00:19:19,140
operate on on your laptop without

465
00:19:19,140 --> 00:19:21,600
everybody without anybody needing to do

466
00:19:21,600 --> 00:19:23,640
a pre-installation because again this

467
00:19:23,640 --> 00:19:26,340
comes built in we realize that this must

468
00:19:26,340 --> 00:19:29,880
be allowed by uh by the edrs especially

469
00:19:29,880 --> 00:19:32,100
Microsoft TDR but also other other ideas

470
00:19:32,100 --> 00:19:34,799
as well so all of these Services all of

471
00:19:34,799 --> 00:19:36,419
these executables

472
00:19:36,419 --> 00:19:38,640
and the and the plugin for the browser

473
00:19:38,640 --> 00:19:42,600
those are all allowed listed inside of

474
00:19:42,600 --> 00:19:44,700
the uh of the VM and the and the things

475
00:19:44,700 --> 00:19:46,799
that are outside of the uh the laptop

476
00:19:46,799 --> 00:19:48,179
and the things that are protecting that

477
00:19:48,179 --> 00:19:50,480
laptop

478
00:19:52,260 --> 00:19:54,840
let's look at the network side so of

479
00:19:54,840 --> 00:19:57,360
course there's a corporate network uh we

480
00:19:57,360 --> 00:19:58,620
assume that there's a corporate Network

481
00:19:58,620 --> 00:20:00,360
here and then there's a question of how

482
00:20:00,360 --> 00:20:02,039
do you go through that corporate Network

483
00:20:02,039 --> 00:20:05,039
how how can you do it without having to

484
00:20:05,039 --> 00:20:06,780
go to Every organization in the world

485
00:20:06,780 --> 00:20:09,240
and ask them to uh to change their

486
00:20:09,240 --> 00:20:10,679
firewall configuration right because

487
00:20:10,679 --> 00:20:12,299
this is what Microsoft has have done

488
00:20:12,299 --> 00:20:13,860
here they have shipped something to

489
00:20:13,860 --> 00:20:16,440
everyone but they didn't have to they

490
00:20:16,440 --> 00:20:18,360
didn't kind of worried out gradually

491
00:20:18,360 --> 00:20:20,940
they just uh put it out there so how

492
00:20:20,940 --> 00:20:22,500
does this work

493
00:20:22,500 --> 00:20:24,480
actually they're using a neat trick here

494
00:20:24,480 --> 00:20:27,419
called using a service called Azure

495
00:20:27,419 --> 00:20:29,220
service bus it used to be called Azure

496
00:20:29,220 --> 00:20:31,620
wheelie which basically creates two-way

497
00:20:31,620 --> 00:20:33,960
communication with when both sides are

498
00:20:33,960 --> 00:20:36,539
using outbound connections and so with

499
00:20:36,539 --> 00:20:38,520
those outbound connections you're able

500
00:20:38,520 --> 00:20:41,160
to bypass the power the firewall and uh

501
00:20:41,160 --> 00:20:42,720
what actually happens is the machine

502
00:20:42,720 --> 00:20:45,179
runtime periodically goes out to this

503
00:20:45,179 --> 00:20:47,700
runtime service bus and basically asked

504
00:20:47,700 --> 00:20:49,740
for uh whether or not there is anything

505
00:20:49,740 --> 00:20:52,559
waiting for it uh in order to uh to

506
00:20:52,559 --> 00:20:54,960
execute it

507
00:20:54,960 --> 00:20:58,919
so uh we understand the connection and

508
00:20:58,919 --> 00:21:00,539
we understand we've seen this the local

509
00:21:00,539 --> 00:21:03,120
side and we've seen that every part of

510
00:21:03,120 --> 00:21:05,820
this connection is actually trusted so

511
00:21:05,820 --> 00:21:07,320
how does this look like from the office

512
00:21:07,320 --> 00:21:09,299
side when you plug in that machine to

513
00:21:09,299 --> 00:21:11,100
the to office what do you see from the

514
00:21:11,100 --> 00:21:13,980
office side so uh it's very cool you get

515
00:21:13,980 --> 00:21:15,840
you basically get all of the management

516
00:21:15,840 --> 00:21:18,660
uh UI that you would require there's a

517
00:21:18,660 --> 00:21:20,940
list of the machines that you have uh uh

518
00:21:20,940 --> 00:21:22,440
that we have imported into your service

519
00:21:22,440 --> 00:21:24,240
I'll show you in a moment how to do that

520
00:21:24,240 --> 00:21:26,100
you can see the status for each one of

521
00:21:26,100 --> 00:21:29,039
those machines you can run payloads from

522
00:21:29,039 --> 00:21:32,100
the cloud to each one of those uh of

523
00:21:32,100 --> 00:21:35,039
those desktops each one of those uh of

524
00:21:35,039 --> 00:21:36,780
those agents that you that you have

525
00:21:36,780 --> 00:21:37,980
infected

526
00:21:37,980 --> 00:21:40,500
um you can also see the status of those

527
00:21:40,500 --> 00:21:42,960
pay of those tasks so each one of those

528
00:21:42,960 --> 00:21:45,240
tasks you'll be able to actually debug

529
00:21:45,240 --> 00:21:47,400
things you understand whether there are

530
00:21:47,400 --> 00:21:48,440
errors

531
00:21:48,440 --> 00:21:50,820
all of those things that would help us

532
00:21:50,820 --> 00:21:53,700
uh make this uh make this very easy or

533
00:21:53,700 --> 00:21:56,280
that would help us basically really run

534
00:21:56,280 --> 00:21:58,020
this malware operation

535
00:21:58,020 --> 00:22:01,980
and so this is what we have what we have

536
00:22:01,980 --> 00:22:05,880
seen so far we understand how uh how RPA

537
00:22:05,880 --> 00:22:07,559
works we understand how it operates with

538
00:22:07,559 --> 00:22:10,620
office and now we are ready for the

539
00:22:10,620 --> 00:22:13,260
juice of the stock which is uh figuring

540
00:22:13,260 --> 00:22:15,780
out how can we use it as hackers to our

541
00:22:15,780 --> 00:22:17,340
own advantage

542
00:22:17,340 --> 00:22:19,140
so this is what we're going to do now

543
00:22:19,140 --> 00:22:21,600
we're going to shift the gear right now

544
00:22:21,600 --> 00:22:23,640
apparently now I've basically given you

545
00:22:23,640 --> 00:22:25,200
all of the uh all of the information

546
00:22:25,200 --> 00:22:26,940
that you need in order to really

547
00:22:26,940 --> 00:22:29,820
understand the exploit so what we're

548
00:22:29,820 --> 00:22:31,679
going to do now is we're going to shift

549
00:22:31,679 --> 00:22:34,080
gear to a practical guide how do you

550
00:22:34,080 --> 00:22:36,299
take all of this information and you

551
00:22:36,299 --> 00:22:39,799
turn it into your own marijuana

552
00:22:39,960 --> 00:22:42,000
and we're going to show all of those

553
00:22:42,000 --> 00:22:43,919
things that we initially started the

554
00:22:43,919 --> 00:22:47,780
talk with calling them our operations

555
00:22:48,659 --> 00:22:51,299
uh and so this is a reminder of the list

556
00:22:51,299 --> 00:22:52,620
of things that we would like to achieve

557
00:22:52,620 --> 00:22:54,539
this is our goal list and now we will

558
00:22:54,539 --> 00:22:55,980
show how we can achieve each one of

559
00:22:55,980 --> 00:22:59,280
those so first of all a bit of setup in

560
00:22:59,280 --> 00:23:01,620
order to use this exploit we are

561
00:23:01,620 --> 00:23:04,320
creating a new tenant a new Microsoft

562
00:23:04,320 --> 00:23:06,539
tenant which is a malicious tenant and

563
00:23:06,539 --> 00:23:08,220
of course this is very easy you can get

564
00:23:08,220 --> 00:23:10,020
a trial you don't have to plug in your

565
00:23:10,020 --> 00:23:12,720
credit card when you start by creating

566
00:23:12,720 --> 00:23:14,820
this tenant you will get a screen

567
00:23:14,820 --> 00:23:17,580
inviting you to add machines into that

568
00:23:17,580 --> 00:23:19,980
tenant basically onboard your users into

569
00:23:19,980 --> 00:23:21,780
that tenant

570
00:23:21,780 --> 00:23:24,600
so in order to onboard our users which

571
00:23:24,600 --> 00:23:26,340
are not really our users but the people

572
00:23:26,340 --> 00:23:29,220
will uh but are victims so the ones that

573
00:23:29,220 --> 00:23:30,960
we would like to plug into our malware

574
00:23:30,960 --> 00:23:32,760
operation after we have an initial

575
00:23:32,760 --> 00:23:33,900
access

576
00:23:33,900 --> 00:23:36,480
um first of all uh we saw that you can

577
00:23:36,480 --> 00:23:39,419
do this registration through the UI

578
00:23:39,419 --> 00:23:42,840
right so I I plugged in my own email and

579
00:23:42,840 --> 00:23:45,240
then uh there was kind of an ORF pop-up

580
00:23:45,240 --> 00:23:47,400
for office and then I was in but of

581
00:23:47,400 --> 00:23:49,140
course we don't really want to do this

582
00:23:49,140 --> 00:23:52,140
on a vector machine because uh well it

583
00:23:52,140 --> 00:23:53,640
would be very suspicious and it's also

584
00:23:53,640 --> 00:23:57,059
not automatable so can we avoid using

585
00:23:57,059 --> 00:23:58,380
the UI

586
00:23:58,380 --> 00:24:02,039
uh yes so fortunately Microsoft has a

587
00:24:02,039 --> 00:24:04,679
neat little script that again is it

588
00:24:04,679 --> 00:24:07,140
comes built in with windows that allows

589
00:24:07,140 --> 00:24:08,940
you either with command line or with

590
00:24:08,940 --> 00:24:11,159
Powershell to register those machines

591
00:24:11,159 --> 00:24:13,740
and the uh the script is is conveniently

592
00:24:13,740 --> 00:24:16,200
called machine registration silent and

593
00:24:16,200 --> 00:24:18,360
so you can see that I I'm simply running

594
00:24:18,360 --> 00:24:20,880
this executable on the victim machine

595
00:24:20,880 --> 00:24:24,000
with and I'm connecting it to my own

596
00:24:24,000 --> 00:24:27,179
malicious malicious Microsoft tenant and

597
00:24:27,179 --> 00:24:29,520
uh the cool thing about this again is

598
00:24:29,520 --> 00:24:32,100
that this uh this command line is the

599
00:24:32,100 --> 00:24:34,320
only thing that you need in order to

600
00:24:34,320 --> 00:24:36,360
onboard your victim your victim into

601
00:24:36,360 --> 00:24:39,059
into the into your manual operation and

602
00:24:39,059 --> 00:24:42,360
you're using as a assigned executable uh

603
00:24:42,360 --> 00:24:44,820
so once once we do that and this is this

604
00:24:44,820 --> 00:24:46,740
is again this is the piece well this is

605
00:24:46,740 --> 00:24:49,799
how you infect uh user machines and so

606
00:24:49,799 --> 00:24:51,360
once we do that

607
00:24:51,360 --> 00:24:53,880
you will see the machine pop up on your

608
00:24:53,880 --> 00:24:55,740
on your power automate office basically

609
00:24:55,740 --> 00:24:57,840
on your management portal

610
00:24:57,840 --> 00:25:00,299
um one thing that I'm not sure if you've

611
00:25:00,299 --> 00:25:02,100
seen if you've uh if you were able to

612
00:25:02,100 --> 00:25:05,159
spot it before uh but the one problem

613
00:25:05,159 --> 00:25:07,860
here is that the script requires admin

614
00:25:07,860 --> 00:25:09,539
permissions which is kind of annoying

615
00:25:09,539 --> 00:25:12,299
and so we try to poke around and see

616
00:25:12,299 --> 00:25:14,159
whether or not we can make it whether we

617
00:25:14,159 --> 00:25:16,500
can make it to run as a single as a

618
00:25:16,500 --> 00:25:19,260
simple user and actually uh it just

619
00:25:19,260 --> 00:25:20,700
worked so we didn't do anything special

620
00:25:20,700 --> 00:25:23,460
here we simply use the Powershell script

621
00:25:23,460 --> 00:25:26,520
and it worked and so you can register a

622
00:25:26,520 --> 00:25:28,260
machine to your malware operation

623
00:25:28,260 --> 00:25:32,700
without having to be uh to be an admin

624
00:25:32,700 --> 00:25:35,279
in terms of the cloud setup once the

625
00:25:35,279 --> 00:25:37,200
machine is registered here's what you

626
00:25:37,200 --> 00:25:39,059
need to do in order to run payloads of

627
00:25:39,059 --> 00:25:40,919
that machine so first of all you create

628
00:25:40,919 --> 00:25:43,140
a trigger from the cloud you plug in the

629
00:25:43,140 --> 00:25:44,820
information related to that machine

630
00:25:44,820 --> 00:25:46,919
because we are starting with initial

631
00:25:46,919 --> 00:25:48,419
access so you should have those

632
00:25:48,419 --> 00:25:51,960
available and then you you choose each

633
00:25:51,960 --> 00:25:53,880
other each one of the payloads that has

634
00:25:53,880 --> 00:25:56,820
already been be created so you have you

635
00:25:56,820 --> 00:25:58,440
can create them or you can create a new

636
00:25:58,440 --> 00:26:00,960
one and then you run those on the on the

637
00:26:00,960 --> 00:26:04,080
machine but this is where we encounter a

638
00:26:04,080 --> 00:26:07,500
small problem what if this user rxg is

639
00:26:07,500 --> 00:26:09,840
already logged into the machine what

640
00:26:09,840 --> 00:26:11,460
will happen

641
00:26:11,460 --> 00:26:15,720
so essentially two things RPA already

642
00:26:15,720 --> 00:26:18,059
handles this this problem

643
00:26:18,059 --> 00:26:22,380
um there are two types of RPA tasks one

644
00:26:22,380 --> 00:26:25,679
is that if Alex is already logged in we

645
00:26:25,679 --> 00:26:28,620
will simply join his session and run

646
00:26:28,620 --> 00:26:31,620
things alongside you know alongside RX

647
00:26:31,620 --> 00:26:34,799
and so uh this this would not be

648
00:26:34,799 --> 00:26:37,320
something that uh that we that they uh

649
00:26:37,320 --> 00:26:40,200
that the 100 will notice we will see how

650
00:26:40,200 --> 00:26:42,360
this looks like in a moment a bit but we

651
00:26:42,360 --> 00:26:44,580
are basically uh taking over their

652
00:26:44,580 --> 00:26:46,440
session and allowing them to continue to

653
00:26:46,440 --> 00:26:49,799
operate uh on their own if Alex is not

654
00:26:49,799 --> 00:26:52,679
uh currently authenticated we will it

655
00:26:52,679 --> 00:26:54,720
will automatically create a new session

656
00:26:54,720 --> 00:26:57,240
for us and then a discount of that

657
00:26:57,240 --> 00:26:58,799
session when we're done

658
00:26:58,799 --> 00:27:02,760
so this is already covered by by LPA

659
00:27:02,760 --> 00:27:05,880
so just from the basics

660
00:27:05,880 --> 00:27:08,580
we've already covered three of the main

661
00:27:08,580 --> 00:27:10,380
things that we wanted to cover the first

662
00:27:10,380 --> 00:27:11,940
thing is deploying malware we understand

663
00:27:11,940 --> 00:27:13,679
how this looks like is simply that

664
00:27:13,679 --> 00:27:15,840
command line defensive version is pretty

665
00:27:15,840 --> 00:27:17,820
obvious after we've seen the

666
00:27:17,820 --> 00:27:19,919
architecture because again these are all

667
00:27:19,919 --> 00:27:22,039
trusted executables trusted Services

668
00:27:22,039 --> 00:27:26,220
trusted uh cloud services and so uh the

669
00:27:26,220 --> 00:27:27,840
only malicious thing here is a malicious

670
00:27:27,840 --> 00:27:29,279
office account but there's no one to

671
00:27:29,279 --> 00:27:31,500
know that it's malicious and in terms of

672
00:27:31,500 --> 00:27:34,860
persistency this again comes built in

673
00:27:34,860 --> 00:27:37,080
because even if somebody kicks us off

674
00:27:37,080 --> 00:27:39,539
that machine Microsoft will will go back

675
00:27:39,539 --> 00:27:41,220
the next time that we're sending a

676
00:27:41,220 --> 00:27:43,620
payload to that machine and and run us

677
00:27:43,620 --> 00:27:46,380
again and so we don't need to be uh we

678
00:27:46,380 --> 00:27:48,779
don't we all we're already covered in

679
00:27:48,779 --> 00:27:50,700
terms of persistency on the machine

680
00:27:50,700 --> 00:27:52,500
itself

681
00:27:52,500 --> 00:27:55,260
now let's see some payloads so let's uh

682
00:27:55,260 --> 00:27:57,360
we're going to see the three things that

683
00:27:57,360 --> 00:27:59,760
are uh that we uh that are still on on

684
00:27:59,760 --> 00:28:01,460
our list which is command and control

685
00:28:01,460 --> 00:28:03,779
exfiltration and cleanup

686
00:28:03,779 --> 00:28:06,720
let's start with a data exfiltration so

687
00:28:06,720 --> 00:28:09,120
this is a very simple payload you can

688
00:28:09,120 --> 00:28:11,279
see that I'm I'm simply I'm I'm giving

689
00:28:11,279 --> 00:28:15,000
in as input uh a file a specific file

690
00:28:15,000 --> 00:28:16,679
that I would like to explain from the

691
00:28:16,679 --> 00:28:18,539
machine and

692
00:28:18,539 --> 00:28:21,360
the output variables contain the actual

693
00:28:21,360 --> 00:28:23,940
file content so and the flow is very

694
00:28:23,940 --> 00:28:27,600
simple I am going I'm uh I do have kind

695
00:28:27,600 --> 00:28:29,760
of error handling there but actually I'm

696
00:28:29,760 --> 00:28:32,640
just reading a file into a variable and

697
00:28:32,640 --> 00:28:35,460
then uh setting out setting it out as an

698
00:28:35,460 --> 00:28:37,799
output now uh one interesting question

699
00:28:37,799 --> 00:28:40,320
is where does this output go

700
00:28:40,320 --> 00:28:42,240
so it goes to the cloud side when you

701
00:28:42,240 --> 00:28:44,940
run this machine from the cloud side the

702
00:28:44,940 --> 00:28:47,039
outputs will uh the input comes from the

703
00:28:47,039 --> 00:28:49,679
cloud to the machine and then the output

704
00:28:49,679 --> 00:28:52,200
gets routed back to your cloud and now

705
00:28:52,200 --> 00:28:54,960
it is let's make sure we understand how

706
00:28:54,960 --> 00:28:56,880
exactly does this work how exactly does

707
00:28:56,880 --> 00:29:00,059
the file content on the laptop reach the

708
00:29:00,059 --> 00:29:03,360
cloud without anybody finding out in the

709
00:29:03,360 --> 00:29:06,419
way so this is the uh architecture that

710
00:29:06,419 --> 00:29:08,760
we've already seen and here's that

711
00:29:08,760 --> 00:29:11,880
architecture with the data data leakage

712
00:29:11,880 --> 00:29:15,539
payload overlay so the first step we go

713
00:29:15,539 --> 00:29:18,000
into office we set up the instructions

714
00:29:18,000 --> 00:29:21,419
the second step we send the payload and

715
00:29:21,419 --> 00:29:24,000
this payload goes out on the Azure

716
00:29:24,000 --> 00:29:25,640
service bus connection

717
00:29:25,640 --> 00:29:27,840
basically the machine runtime will reach

718
00:29:27,840 --> 00:29:29,880
out to other service bus ask for a new

719
00:29:29,880 --> 00:29:32,700
payload and it will get the exfiltrate

720
00:29:32,700 --> 00:29:36,179
data payload from us with the Target and

721
00:29:36,179 --> 00:29:39,659
then the output would also be forwarded

722
00:29:39,659 --> 00:29:43,140
on that on that channel and so

723
00:29:43,140 --> 00:29:46,559
that's why nobody will see inside of the

724
00:29:46,559 --> 00:29:48,539
Enterprise the fact that there's a data

725
00:29:48,539 --> 00:29:50,580
expectation here because again this is

726
00:29:50,580 --> 00:29:53,220
this uses that trusted communication to

727
00:29:53,220 --> 00:29:54,179
office

728
00:29:54,179 --> 00:29:57,720
so uh we saw that acceleration next

729
00:29:57,720 --> 00:30:00,960
let's try and uh let's try and tackle a

730
00:30:00,960 --> 00:30:03,419
command and control so and by commanding

731
00:30:03,419 --> 00:30:05,460
controller I mean I don't want to be

732
00:30:05,460 --> 00:30:08,340
stuck only with things that are uh I

733
00:30:08,340 --> 00:30:09,960
don't want to see that to to be stuck

734
00:30:09,960 --> 00:30:11,820
with only specific payloads I would like

735
00:30:11,820 --> 00:30:13,559
to be able to do everything that I would

736
00:30:13,559 --> 00:30:15,419
have wanted or that I would want in the

737
00:30:15,419 --> 00:30:19,440
future on inside of the victims machine

738
00:30:19,440 --> 00:30:23,700
so here's a a first attempt and a very

739
00:30:23,700 --> 00:30:25,260
quick attempt so you can see that

740
00:30:25,260 --> 00:30:27,659
actually power automate comes built in

741
00:30:27,659 --> 00:30:30,360
with a way for you to run scripts so you

742
00:30:30,360 --> 00:30:32,220
can run a shell script you can run the

743
00:30:32,220 --> 00:30:34,799
command line script and so this is a

744
00:30:34,799 --> 00:30:37,320
payload that basically gets uh asks you

745
00:30:37,320 --> 00:30:38,880
which interpreter you would like to use

746
00:30:38,880 --> 00:30:41,279
and then for the command itself and then

747
00:30:41,279 --> 00:30:43,260
it will run that command on the machine

748
00:30:43,260 --> 00:30:45,960
and send out the script output and arrow

749
00:30:45,960 --> 00:30:49,080
STD out the studio let's see how it

750
00:30:49,080 --> 00:30:51,120
works

751
00:30:51,120 --> 00:30:54,960
oh so the so when we try to actually run

752
00:30:54,960 --> 00:30:57,419
this we encounter the problem because

753
00:30:57,419 --> 00:30:59,940
once this is this runs and the command

754
00:30:59,940 --> 00:31:02,460
line runs uh the edl catches us because

755
00:31:02,460 --> 00:31:04,559
of course uh we are running a command

756
00:31:04,559 --> 00:31:06,840
line we are running uh something uh kind

757
00:31:06,840 --> 00:31:09,840
of a malicious uh a malicious command uh

758
00:31:09,840 --> 00:31:12,140
in one of those uh

759
00:31:12,140 --> 00:31:15,480
interfaces that that uh Power automate

760
00:31:15,480 --> 00:31:19,200
uh uh supports and so this is how it

761
00:31:19,200 --> 00:31:20,940
looks like this is what we get why we

762
00:31:20,940 --> 00:31:23,940
get caught on one side we have the RPA

763
00:31:23,940 --> 00:31:26,820
engine and the drag and drop interface

764
00:31:26,820 --> 00:31:28,740
that is all trusted

765
00:31:28,740 --> 00:31:31,140
so nobody would catch you on the things

766
00:31:31,140 --> 00:31:32,880
that you're doing over on the things

767
00:31:32,880 --> 00:31:34,380
that you're accomplishing with the agent

768
00:31:34,380 --> 00:31:37,620
itself but once you spawn a command line

769
00:31:37,620 --> 00:31:40,020
of course the idea will will look at it

770
00:31:40,020 --> 00:31:41,700
because this is the main thing that it

771
00:31:41,700 --> 00:31:44,220
looks at so anything that you would

772
00:31:44,220 --> 00:31:46,679
write here if you would try to run some

773
00:31:46,679 --> 00:31:48,779
sort of a road kit of course it's

774
00:31:48,779 --> 00:31:51,240
untrusted so it will be caught and so

775
00:31:51,240 --> 00:31:54,659
the question becomes what can we achieve

776
00:31:54,659 --> 00:31:57,419
from the just by staying in The Trusted

777
00:31:57,419 --> 00:31:59,640
part because as you can see there there

778
00:31:59,640 --> 00:32:01,380
is some program in there right because I

779
00:32:01,380 --> 00:32:04,200
I have I have a I need to handle the

780
00:32:04,200 --> 00:32:05,760
inputs I need to handle the outputs

781
00:32:05,760 --> 00:32:08,820
there are things that are happening uh

782
00:32:08,820 --> 00:32:10,980
within that agent itself within the uh

783
00:32:10,980 --> 00:32:14,000
The Trusted part is

784
00:32:14,580 --> 00:32:17,820
and so what can we do only with those

785
00:32:17,820 --> 00:32:20,960
drag and drop derivatives

786
00:32:21,960 --> 00:32:25,020
actually we can do quite a lot so these

787
00:32:25,020 --> 00:32:28,200
are this is a a non-comprehensive list

788
00:32:28,200 --> 00:32:30,600
of the kind of things that you can do so

789
00:32:30,600 --> 00:32:32,940
you can uh you can use a crypto to

790
00:32:32,940 --> 00:32:35,520
encrypt file you can trigger HTTP you

791
00:32:35,520 --> 00:32:37,200
can communicate with that active

792
00:32:37,200 --> 00:32:39,299
directory with Windows Windows processes

793
00:32:39,299 --> 00:32:41,279
and windows Services you can look at

794
00:32:41,279 --> 00:32:44,039
files and folders uh you can you can use

795
00:32:44,039 --> 00:32:46,980
the browser you can take screenshots you

796
00:32:46,980 --> 00:32:48,480
can automate The Mouse and the keyboard

797
00:32:48,480 --> 00:32:51,240
you can go into the clipboard so I'm

798
00:32:51,240 --> 00:32:53,640
sure your mind is racing right now with

799
00:32:53,640 --> 00:32:55,740
the amount of things that are that are

800
00:32:55,740 --> 00:32:57,720
possible with these low code Primitives

801
00:32:57,720 --> 00:33:00,360
and we'll start with a very quick

802
00:33:00,360 --> 00:33:03,360
example uh showing off how do we build a

803
00:33:03,360 --> 00:33:05,640
no code run somewhere only with these

804
00:33:05,640 --> 00:33:08,059
Primitives

805
00:33:08,399 --> 00:33:12,000
so here it is uh basically I'm going uh

806
00:33:12,000 --> 00:33:14,039
I'm getting as an input three parameters

807
00:33:14,039 --> 00:33:16,440
uh director a directory that I would

808
00:33:16,440 --> 00:33:18,720
like to encrypt the encryption key and

809
00:33:18,720 --> 00:33:21,299
the call depth so how many steps do I

810
00:33:21,299 --> 00:33:23,340
take inside of the subdirectories there

811
00:33:23,340 --> 00:33:25,380
and then

812
00:33:25,380 --> 00:33:27,720
um and then what what is what the script

813
00:33:27,720 --> 00:33:30,059
actually does it goes and iterates all

814
00:33:30,059 --> 00:33:31,919
of the directories that subdirectories

815
00:33:31,919 --> 00:33:34,260
it reads out the files it encrypts them

816
00:33:34,260 --> 00:33:37,620
with the very helpful uh encrypt a file

817
00:33:37,620 --> 00:33:40,620
action that is baked into Power automate

818
00:33:40,620 --> 00:33:43,440
and then I override that file

819
00:33:43,440 --> 00:33:47,539
um so let's see a demo of how this works

820
00:33:48,659 --> 00:33:50,940
so I started off at the cloud I'm

821
00:33:50,940 --> 00:33:53,039
entering the parameters that I need in

822
00:33:53,039 --> 00:33:55,860
order to run this uh to to run this

823
00:33:55,860 --> 00:33:57,600
ransomware or send the encryption key

824
00:33:57,600 --> 00:34:00,000
the directory uh and it is already

825
00:34:00,000 --> 00:34:02,880
plugged into the user's machine now the

826
00:34:02,880 --> 00:34:05,039
payload is being sent through the secure

827
00:34:05,039 --> 00:34:08,339
channel into the user's machine and uh

828
00:34:08,339 --> 00:34:10,199
it's back and I'm getting the results

829
00:34:10,199 --> 00:34:12,719
back so you can see that this is very

830
00:34:12,719 --> 00:34:15,418
very easy uh to actually do it you can

831
00:34:15,418 --> 00:34:19,139
see it from the uh from the uh victim

832
00:34:19,139 --> 00:34:23,000
side the files are encrypted

833
00:34:23,040 --> 00:34:26,879
next up uh we actually know that there

834
00:34:26,879 --> 00:34:28,619
are a whole bunch of there's a whole

835
00:34:28,619 --> 00:34:30,540
bunch of telemetry that is being created

836
00:34:30,540 --> 00:34:33,179
by this agent uh when when things are

837
00:34:33,179 --> 00:34:34,619
running so of course we would like to

838
00:34:34,619 --> 00:34:36,659
clean that up uh and this is a simple

839
00:34:36,659 --> 00:34:39,179
flow that cleans up after ourselves so

840
00:34:39,179 --> 00:34:40,918
again we understand we know exactly when

841
00:34:40,918 --> 00:34:43,139
those where those logs are saved so why

842
00:34:43,139 --> 00:34:44,879
not just go ahead and delete them and

843
00:34:44,879 --> 00:34:46,560
this is exactly what this flow does so

844
00:34:46,560 --> 00:34:49,320
it goes out to those uh to those places

845
00:34:49,320 --> 00:34:51,599
where the agent is Towing slugs and

846
00:34:51,599 --> 00:34:53,339
simply deletes them that it's those

847
00:34:53,339 --> 00:34:55,759
loops

848
00:34:56,639 --> 00:35:00,780
so we saw data exploration we saw

849
00:35:00,780 --> 00:35:03,599
cleanup uh and we also saw a way for you

850
00:35:03,599 --> 00:35:06,359
to build any any automation that you'd

851
00:35:06,359 --> 00:35:08,040
like or any payload that you would like

852
00:35:08,040 --> 00:35:09,900
using those no code Primitives and

853
00:35:09,900 --> 00:35:11,880
specifically we saw one so no code to

854
00:35:11,880 --> 00:35:14,040
answer well one more thing I want to

855
00:35:14,040 --> 00:35:15,839
show you which was actually not on our

856
00:35:15,839 --> 00:35:19,020
list but it's a uh it's a nice bonus is

857
00:35:19,020 --> 00:35:21,660
actually what can we do with the browser

858
00:35:21,660 --> 00:35:24,359
because remember that power automate the

859
00:35:24,359 --> 00:35:25,859
power automate desktop is able to

860
00:35:25,859 --> 00:35:28,560
operate the browser on the user's behalf

861
00:35:28,560 --> 00:35:31,020
so here's the idea uh we would like to

862
00:35:31,020 --> 00:35:33,839
basically steal tokens for for other

863
00:35:33,839 --> 00:35:35,820
services the user is already logged into

864
00:35:35,820 --> 00:35:37,680
so in this case I'm going to State the

865
00:35:37,680 --> 00:35:41,099
token of uh of power automate uh Cloud

866
00:35:41,099 --> 00:35:43,859
so the cloud part of that same which is

867
00:35:43,859 --> 00:35:46,260
part of the office suite and so the idea

868
00:35:46,260 --> 00:35:48,839
is pretty simple I go to this uh I open

869
00:35:48,839 --> 00:35:51,300
a browser in a minimized session I

870
00:35:51,300 --> 00:35:54,599
opened it uh that URL that that service

871
00:35:54,599 --> 00:35:56,280
that I would like to steal the cookie of

872
00:35:56,280 --> 00:35:58,260
and then I simply extract the cookie or

873
00:35:58,260 --> 00:36:02,660
the token from that website

874
00:36:04,740 --> 00:36:07,200
so here's how it looks like from inside

875
00:36:07,200 --> 00:36:10,380
of the machine this is the payload I'm

876
00:36:10,380 --> 00:36:12,420
running I'm launching I'm launching

877
00:36:12,420 --> 00:36:15,180
Chrome I'm sending out on a specific

878
00:36:15,180 --> 00:36:18,240
address I'm using the uh I'm I'm

879
00:36:18,240 --> 00:36:21,420
actually sending out the control uh so

880
00:36:21,420 --> 00:36:23,400
going out to see the source and then I

881
00:36:23,400 --> 00:36:25,320
will fetch some things from the header

882
00:36:25,320 --> 00:36:28,380
you can see that when I ran this this

883
00:36:28,380 --> 00:36:30,480
automation what actually happened was

884
00:36:30,480 --> 00:36:32,640
the the browser popped up there which is

885
00:36:32,640 --> 00:36:34,619
kind of not really good but I did get

886
00:36:34,619 --> 00:36:37,079
the token so in order to make sure that

887
00:36:37,079 --> 00:36:39,420
the browser doesn't pop up like that I

888
00:36:39,420 --> 00:36:42,060
can simply change the windows status for

889
00:36:42,060 --> 00:36:44,940
maximize to minimize and that and that

890
00:36:44,940 --> 00:36:46,320
would prevent it from happening again

891
00:36:46,320 --> 00:36:49,619
and so you can see uh that all of these

892
00:36:49,619 --> 00:36:52,520
things are actually covered uh by by

893
00:36:52,520 --> 00:36:54,960
windows and powered for power automate

894
00:36:54,960 --> 00:36:57,420
for us so this is pretty easy and

895
00:36:57,420 --> 00:37:01,500
actually uh after uh and actually we've

896
00:37:01,500 --> 00:37:05,040
actually been able to generalize this

897
00:37:05,040 --> 00:37:07,079
and create a payload that basically you

898
00:37:07,079 --> 00:37:09,660
give it a host name and in return it

899
00:37:09,660 --> 00:37:11,579
will give you the cookies for for that

900
00:37:11,579 --> 00:37:13,200
hosting

901
00:37:13,200 --> 00:37:15,720
here's how it looks like uh from the

902
00:37:15,720 --> 00:37:18,000
Victor machine side so after I go first

903
00:37:18,000 --> 00:37:19,859
of all uh here's how it looks like from

904
00:37:19,859 --> 00:37:22,079
the uh from the attackers perspective

905
00:37:22,079 --> 00:37:24,119
I'm sending out the pla the payload to

906
00:37:24,119 --> 00:37:26,940
to steal the token and again the payload

907
00:37:26,940 --> 00:37:29,760
is being sent to a victim machine and

908
00:37:29,760 --> 00:37:32,640
then on the victim machine uh where

909
00:37:32,640 --> 00:37:34,980
nothing happens right

910
00:37:34,980 --> 00:37:36,839
um so that's that's the main point here

911
00:37:36,839 --> 00:37:39,240
uh users won't really be able to notice

912
00:37:39,240 --> 00:37:41,820
that anything is happening uh because

913
00:37:41,820 --> 00:37:44,579
all of this because the agent is baked

914
00:37:44,579 --> 00:37:47,640
in and we don't have to open up a new uh

915
00:37:47,640 --> 00:37:50,220
new browser or Windows for them

916
00:37:50,220 --> 00:37:53,160
so a quick recap into what have you seen

917
00:37:53,160 --> 00:37:55,500
so far we've seen how to deploy malware

918
00:37:55,500 --> 00:37:57,780
by simply using a building command line

919
00:37:57,780 --> 00:38:00,480
we see now to avoid this we think that

920
00:38:00,480 --> 00:38:03,540
this method inherently avoids detection

921
00:38:03,540 --> 00:38:06,960
and also uh remain remains persistent

922
00:38:06,960 --> 00:38:09,180
because Microsoft will just put you

923
00:38:09,180 --> 00:38:12,359
again and we saw how to do command and

924
00:38:12,359 --> 00:38:14,900
Control Data exploration we also saw

925
00:38:14,900 --> 00:38:18,000
ransomware and cleanup operations and as

926
00:38:18,000 --> 00:38:19,920
a bonus we saw how to fetch credentials

927
00:38:19,920 --> 00:38:21,480
from the browser

928
00:38:21,480 --> 00:38:23,760
everything that you saw up at the Lao

929
00:38:23,760 --> 00:38:26,460
had to use that interface the drag and

930
00:38:26,460 --> 00:38:28,619
drop interface that Microsoft provides

931
00:38:28,619 --> 00:38:31,200
and so in order to make life easier for

932
00:38:31,200 --> 00:38:33,720
us but also easier for you so you can

933
00:38:33,720 --> 00:38:36,180
use everything that you learned today as

934
00:38:36,180 --> 00:38:39,119
part of your retina Arsenal I'm very

935
00:38:39,119 --> 00:38:42,660
happy to introduce to you uh PowerPoint

936
00:38:42,660 --> 00:38:45,839
PowerPoint is a tool that we've built in

937
00:38:45,839 --> 00:38:48,540
order to uh to automate all of those

938
00:38:48,540 --> 00:38:50,760
things so you can basically use it as

939
00:38:50,760 --> 00:38:54,599
part of your uh as part as part of your

940
00:38:54,599 --> 00:38:56,339
scenario and plug it with other tools

941
00:38:56,339 --> 00:38:58,880
that you're using uh Power automate

942
00:38:58,880 --> 00:39:02,099
PowerPoint actually does much more than

943
00:39:02,099 --> 00:39:04,320
just what you saw here so uh it allows

944
00:39:04,320 --> 00:39:07,440
you to uh basically trigger all of the

945
00:39:07,440 --> 00:39:09,720
operations that you saw here today and

946
00:39:09,720 --> 00:39:12,960
others using an HTTP endpoint and then

947
00:39:12,960 --> 00:39:16,619
uh it does it l it it handles arrows for

948
00:39:16,619 --> 00:39:18,780
you it then there's retries for you and

949
00:39:18,780 --> 00:39:21,480
some edge cases where we need to uh

950
00:39:21,480 --> 00:39:23,339
where we hand it for you so you don't

951
00:39:23,339 --> 00:39:25,140
have to think about it

952
00:39:25,140 --> 00:39:27,540
here's what this ends up looking like

953
00:39:27,540 --> 00:39:31,800
you once you install this tool you get a

954
00:39:31,800 --> 00:39:34,500
single endpoint and when you post to

955
00:39:34,500 --> 00:39:35,880
that endpoint and of course it is

956
00:39:35,880 --> 00:39:37,920
protected by a secret but you can run it

957
00:39:37,920 --> 00:39:39,660
without being authenticated so you can

958
00:39:39,660 --> 00:39:42,599
avoid uh kind of attribution

959
00:39:42,599 --> 00:39:46,859
um you basically post a something a

960
00:39:46,859 --> 00:39:49,980
payload or a request for a payload on a

961
00:39:49,980 --> 00:39:52,859
specific machine uh to that to that HTTP

962
00:39:52,859 --> 00:39:56,460
endpoint uh and the tool will run that

963
00:39:56,460 --> 00:39:58,859
payload for you on the 10 points and

964
00:39:58,859 --> 00:40:01,578
return the results

965
00:40:02,579 --> 00:40:05,280
and of course in order to make sure that

966
00:40:05,280 --> 00:40:07,500
is there is much that is even more

967
00:40:07,500 --> 00:40:09,960
easier for you uh there's a there's a

968
00:40:09,960 --> 00:40:12,119
python python convenience layer around

969
00:40:12,119 --> 00:40:13,079
it

970
00:40:13,079 --> 00:40:14,940
um and and you can find all of the

971
00:40:14,940 --> 00:40:16,980
details here in the GitHub in the GitHub

972
00:40:16,980 --> 00:40:20,280
link uh let me click let me uh make it

973
00:40:20,280 --> 00:40:23,400
easy to understand or to give a quick

974
00:40:23,400 --> 00:40:25,380
recap into what you need to do to use

975
00:40:25,380 --> 00:40:27,900
this tool first of all

976
00:40:27,900 --> 00:40:31,020
um you register your a free RPA account

977
00:40:31,020 --> 00:40:33,060
and there's a tutorial there on how to

978
00:40:33,060 --> 00:40:35,339
do it you register each one of those

979
00:40:35,339 --> 00:40:37,440
machines that you your victim machines

980
00:40:37,440 --> 00:40:39,540
with the command line and then you can

981
00:40:39,540 --> 00:40:41,760
just use the convenience layer or the

982
00:40:41,760 --> 00:40:44,579
API itself in order to run the payloads

983
00:40:44,579 --> 00:40:47,220
and the reason for uh raising this this

984
00:40:47,220 --> 00:40:49,680
tool is of course in order to help to to

985
00:40:49,680 --> 00:40:51,960
help you learn to help you teach people

986
00:40:51,960 --> 00:40:54,780
around you about the risks of of no code

987
00:40:54,780 --> 00:40:57,000
and particularly RPA and to be defenses

988
00:40:57,000 --> 00:41:00,240
that defenses around it and so

989
00:41:00,240 --> 00:41:02,880
with that with the tool

990
00:41:02,880 --> 00:41:05,460
um let's let's see a quick summary into

991
00:41:05,460 --> 00:41:08,760
what we have done uh today we saw what

992
00:41:08,760 --> 00:41:10,740
RPA is we thought it's available in

993
00:41:10,740 --> 00:41:12,420
every major Enterprise and we took a

994
00:41:12,420 --> 00:41:14,880
very deep dive into how RPA operates and

995
00:41:14,880 --> 00:41:18,240
how it was able to and how Microsoft was

996
00:41:18,240 --> 00:41:20,160
able to basically turn it on by default

997
00:41:20,160 --> 00:41:22,320
in every Windows 11 machine in the world

998
00:41:22,320 --> 00:41:25,440
without talking to any I.T Department in

999
00:41:25,440 --> 00:41:27,800
any organization this is already there

1000
00:41:27,800 --> 00:41:30,480
the second fix that we saw is how do you

1001
00:41:30,480 --> 00:41:33,180
abuse LPA how to use LPA to basically

1002
00:41:33,180 --> 00:41:35,700
send out those payloads and receive the

1003
00:41:35,700 --> 00:41:38,520
uh the uh the outputs of those payloads

1004
00:41:38,520 --> 00:41:40,619
and we saw those no code Primitives and

1005
00:41:40,619 --> 00:41:42,300
I really called you try and play around

1006
00:41:42,300 --> 00:41:44,700
with them yourself uh you you'll see

1007
00:41:44,700 --> 00:41:46,500
you'll see it

1008
00:41:46,500 --> 00:41:49,140
um we saw PowerPoint and we and the next

1009
00:41:49,140 --> 00:41:51,119
thing the only thing that I have left is

1010
00:41:51,119 --> 00:41:52,920
to show you uh concrete thing that you

1011
00:41:52,920 --> 00:41:56,119
can do to reduce your risk

1012
00:42:00,240 --> 00:42:02,700
okay so let me go quickly through that

1013
00:42:02,700 --> 00:42:07,040
uh here are here are four uh suggestions

1014
00:42:07,040 --> 00:42:09,660
concrete suggestions that you can take

1015
00:42:09,660 --> 00:42:12,599
in order to protect yourself the first

1016
00:42:12,599 --> 00:42:14,460
thing is you need to monitor for those

1017
00:42:14,460 --> 00:42:17,460
registration scripts by Microsoft I put

1018
00:42:17,460 --> 00:42:19,500
them both here you also find information

1019
00:42:19,500 --> 00:42:21,960
inside of the documentation that I that

1020
00:42:21,960 --> 00:42:23,400
I've linked here

1021
00:42:23,400 --> 00:42:25,619
um that would really help reduce your

1022
00:42:25,619 --> 00:42:28,740
risk you need to find usage of those

1023
00:42:28,740 --> 00:42:30,540
executables across your organization

1024
00:42:30,540 --> 00:42:32,040
everything that is not that doesn't

1025
00:42:32,040 --> 00:42:34,020
belong to your organization that when

1026
00:42:34,020 --> 00:42:35,280
these executables are talking with

1027
00:42:35,280 --> 00:42:38,460
another tenant is extremely important to

1028
00:42:38,460 --> 00:42:41,160
monitor but you should also monitor your

1029
00:42:41,160 --> 00:42:43,079
own tenants so if you're a Microsoft

1030
00:42:43,079 --> 00:42:45,960
user if you use office or use Windows

1031
00:42:45,960 --> 00:42:48,300
this is part of what you your users are

1032
00:42:48,300 --> 00:42:50,280
probably already using it for their own

1033
00:42:50,280 --> 00:42:52,680
automations and this can also lead to a

1034
00:42:52,680 --> 00:42:54,839
whole bunch of security issues

1035
00:42:54,839 --> 00:42:57,660
um and and but this is a kind of a topic

1036
00:42:57,660 --> 00:43:00,240
for Ronaldo there are I mean many links

1037
00:43:00,240 --> 00:43:02,640
here for you to to be able to actually

1038
00:43:02,640 --> 00:43:05,700
to learn more and everything that I've

1039
00:43:05,700 --> 00:43:07,800
shared here today the links the source

1040
00:43:07,800 --> 00:43:10,200
code uh the demos everything is

1041
00:43:10,200 --> 00:43:12,359
available in the link right here thank

1042
00:43:12,359 --> 00:43:15,020
you very much everyone

