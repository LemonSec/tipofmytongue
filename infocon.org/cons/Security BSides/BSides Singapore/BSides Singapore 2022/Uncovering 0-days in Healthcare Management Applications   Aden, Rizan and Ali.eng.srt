1
00:00:00,000 --> 00:00:01,860
so good morning everyone

2
00:00:01,860 --> 00:00:03,899
um reason here from Kuala Lumpur

3
00:00:03,899 --> 00:00:06,600
representing BAE Systems

4
00:00:06,600 --> 00:00:09,120
um thank you for this opportunity this

5
00:00:09,120 --> 00:00:11,400
is our second time

6
00:00:11,400 --> 00:00:14,460
um delivering our research on besides

7
00:00:14,460 --> 00:00:15,540
Singapore

8
00:00:15,540 --> 00:00:17,220
um the last presentation was done last

9
00:00:17,220 --> 00:00:18,600
year

10
00:00:18,600 --> 00:00:21,119
um let's not waste time and let's start

11
00:00:21,119 --> 00:00:23,580
with our presentation the topic today

12
00:00:23,580 --> 00:00:25,500
we'd like to speak about is about

13
00:00:25,500 --> 00:00:27,599
uncovering zero days in Healthcare

14
00:00:27,599 --> 00:00:29,640
Management applications

15
00:00:29,640 --> 00:00:31,980
um three one of the researchers involved

16
00:00:31,980 --> 00:00:35,100
is Aiden Ali and myself

17
00:00:35,100 --> 00:00:38,180
next slide please

18
00:00:38,280 --> 00:00:41,520
the agenda for this uh short talk would

19
00:00:41,520 --> 00:00:45,420
include some background on the the VR

20
00:00:45,420 --> 00:00:47,219
um some past statistics that we have

21
00:00:47,219 --> 00:00:49,559
gathered and then we move on to the

22
00:00:49,559 --> 00:00:52,079
technical findings this disclosure

23
00:00:52,079 --> 00:00:54,360
timeline and last but not least the

24
00:00:54,360 --> 00:00:56,699
conclusion and what we have learned from

25
00:00:56,699 --> 00:00:58,920
this VR

26
00:00:58,920 --> 00:01:01,399
next

27
00:01:01,920 --> 00:01:05,700
slide please thank you all right so we

28
00:01:05,700 --> 00:01:09,060
chose open EMR it's an open source

29
00:01:09,060 --> 00:01:12,060
system it's used in about 5 000

30
00:01:12,060 --> 00:01:14,040
installations according to the website

31
00:01:14,040 --> 00:01:17,240
and because it's fully open source

32
00:01:17,240 --> 00:01:21,540
they are there's a flexibility of us of

33
00:01:21,540 --> 00:01:24,540
using the source code to do a white box

34
00:01:24,540 --> 00:01:27,659
analysis now we we chose this method and

35
00:01:27,659 --> 00:01:29,820
we also chose this particular software

36
00:01:29,820 --> 00:01:34,740
in in in particular because we also did

37
00:01:34,740 --> 00:01:36,900
some background checks on on the

38
00:01:36,900 --> 00:01:37,979
software

39
00:01:37,979 --> 00:01:40,140
um one mainly is that it's widely used

40
00:01:40,140 --> 00:01:43,200
secondly most importantly it has been

41
00:01:43,200 --> 00:01:47,060
receiving and Publishing uh cves

42
00:01:47,060 --> 00:01:50,399
for the few years in the past

43
00:01:50,399 --> 00:01:52,979
um if you see the next slide

44
00:01:52,979 --> 00:01:57,299
over here since 20 2012 this this um cve

45
00:01:57,299 --> 00:02:00,840
history was taken from the uh my trail

46
00:02:00,840 --> 00:02:03,780
website and as you can see there have

47
00:02:03,780 --> 00:02:06,060
been accepting

48
00:02:06,060 --> 00:02:08,580
um security bugs from researchers since

49
00:02:08,580 --> 00:02:10,318
2012.

50
00:02:10,318 --> 00:02:13,680
and this is what led us to choose open

51
00:02:13,680 --> 00:02:15,900
EMR as

52
00:02:15,900 --> 00:02:19,620
um the source of our uh VR project yeah

53
00:02:19,620 --> 00:02:22,500
and as you can see uh um in in the past

54
00:02:22,500 --> 00:02:24,959
there were a couple of critical and high

55
00:02:24,959 --> 00:02:27,180
vulnerabilities reported and the last

56
00:02:27,180 --> 00:02:30,599
one uh was reported in 2021 and in fact

57
00:02:30,599 --> 00:02:34,500
in 2022 we contributed um some of it

58
00:02:34,500 --> 00:02:36,480
next slide please

59
00:02:36,480 --> 00:02:40,379
now the the VR project I mean the VR

60
00:02:40,379 --> 00:02:42,599
analysis is not rocket science but

61
00:02:42,599 --> 00:02:45,540
before we dwelve into the um

62
00:02:45,540 --> 00:02:47,940
um the the project we had to First

63
00:02:47,940 --> 00:02:49,800
analyze and find out what

64
00:02:49,800 --> 00:02:51,540
vulnerabilities were discovered in the

65
00:02:51,540 --> 00:02:55,019
past by other researchers now um we when

66
00:02:55,019 --> 00:02:56,580
we googled we found that project

67
00:02:56,580 --> 00:02:57,959
insecurity

68
00:02:57,959 --> 00:02:59,099
um another

69
00:02:59,099 --> 00:03:02,599
um VR group out there had already

70
00:03:02,599 --> 00:03:04,280
published

71
00:03:04,280 --> 00:03:09,000
dozens of SQL injections rce's since um

72
00:03:09,000 --> 00:03:12,239
when was it in in the last last year or

73
00:03:12,239 --> 00:03:15,959
so right in 2021 in particular so with

74
00:03:15,959 --> 00:03:18,720
this discovery we we knew that there was

75
00:03:18,720 --> 00:03:21,120
a challenge because if the code base did

76
00:03:21,120 --> 00:03:22,860
not change much

77
00:03:22,860 --> 00:03:26,280
um it might mean that we might not find

78
00:03:26,280 --> 00:03:28,319
um the the high severity vulnerabilities

79
00:03:28,319 --> 00:03:33,239
like SQL and rce but any anyway we we

80
00:03:33,239 --> 00:03:35,459
still decided to to pursue this project

81
00:03:35,459 --> 00:03:37,200
open near

82
00:03:37,200 --> 00:03:39,900
um as as our VR project because we felt

83
00:03:39,900 --> 00:03:41,700
that it's a challenge but at the same

84
00:03:41,700 --> 00:03:42,659
time

85
00:03:42,659 --> 00:03:45,959
um we know that the project is open to

86
00:03:45,959 --> 00:03:49,640
receiving security bugs

87
00:03:49,640 --> 00:03:53,700
now a bit more of um research before we

88
00:03:53,700 --> 00:03:55,440
actually start the project

89
00:03:55,440 --> 00:03:57,360
um there was a website sonar blog that

90
00:03:57,360 --> 00:03:59,879
reported in 2020

91
00:03:59,879 --> 00:04:02,159
um a couple of high severity

92
00:04:02,159 --> 00:04:04,019
vulnerabilities were published as you

93
00:04:04,019 --> 00:04:06,420
can see the cves are here this was for

94
00:04:06,420 --> 00:04:11,579
version open EMR 5.0.21

95
00:04:11,640 --> 00:04:14,879
right and this posed a challenge to us

96
00:04:14,879 --> 00:04:17,279
but nevertheless uh it did not deter us

97
00:04:17,279 --> 00:04:21,238
from uh pursuing the the VR um uh

98
00:04:21,238 --> 00:04:23,659
research

99
00:04:24,600 --> 00:04:27,840
now we'll move on to the

100
00:04:27,840 --> 00:04:30,060
um how how do I say the process of

101
00:04:30,060 --> 00:04:33,479
researching uh finding this box now the

102
00:04:33,479 --> 00:04:35,639
box that we found are not rocket science

103
00:04:35,639 --> 00:04:37,740
yeah um we are not full-time security

104
00:04:37,740 --> 00:04:40,560
researchers um we we are a bunch of pen

105
00:04:40,560 --> 00:04:42,419
testers and great teamers

106
00:04:42,419 --> 00:04:44,460
um our job is is not really to do

107
00:04:44,460 --> 00:04:46,680
security research but we take on this

108
00:04:46,680 --> 00:04:49,380
opportunity uh in between projects when

109
00:04:49,380 --> 00:04:51,300
when we when we don't have uh anything

110
00:04:51,300 --> 00:04:54,780
else to do uh we delve into VR so we

111
00:04:54,780 --> 00:04:57,960
have about maybe a month uh in in a year

112
00:04:57,960 --> 00:04:59,880
to to share that time among the three of

113
00:04:59,880 --> 00:05:02,100
us to just have a look and and see what

114
00:05:02,100 --> 00:05:03,960
we can find using the same methodology

115
00:05:03,960 --> 00:05:07,380
that we used uh in in a typical pen test

116
00:05:07,380 --> 00:05:09,600
now firstly on on the left hand side

117
00:05:09,600 --> 00:05:11,759
here you see there there is a manual

118
00:05:11,759 --> 00:05:13,680
source code analysis and black box

119
00:05:13,680 --> 00:05:16,020
testing so we combine these two method

120
00:05:16,020 --> 00:05:18,180
by downloading the the source code and

121
00:05:18,180 --> 00:05:19,440
analyzing it

122
00:05:19,440 --> 00:05:22,080
um manually by our eye and and also

123
00:05:22,080 --> 00:05:24,240
using Black Box testing meaning uh we

124
00:05:24,240 --> 00:05:26,400
use uh burp suite for example to just

125
00:05:26,400 --> 00:05:29,520
fuss the endpoints now what we found um

126
00:05:29,520 --> 00:05:31,620
were two very very common bugs that we

127
00:05:31,620 --> 00:05:34,320
we mainly find in a typical uh pen test

128
00:05:34,320 --> 00:05:35,340
project

129
00:05:35,340 --> 00:05:36,840
um the first one is the insufficient

130
00:05:36,840 --> 00:05:39,180
authorization checks or Idols some

131
00:05:39,180 --> 00:05:41,400
people call it authorization issue and

132
00:05:41,400 --> 00:05:43,139
secondly we found a lot of cross-site

133
00:05:43,139 --> 00:05:45,720
scripting errors so with a combination

134
00:05:45,720 --> 00:05:48,660
of of these two we produce the pocs and

135
00:05:48,660 --> 00:05:50,759
and uh we we just put together a report

136
00:05:50,759 --> 00:05:53,880
and we notified the open EMR project uh

137
00:05:53,880 --> 00:05:55,320
we're pretty sure that they are active

138
00:05:55,320 --> 00:05:57,660
and and they were receiving

139
00:05:57,660 --> 00:06:00,060
um bug reports from us and they they

140
00:06:00,060 --> 00:06:03,000
immediately acknowledged it and um so

141
00:06:03,000 --> 00:06:05,160
after we submitted the POC and the

142
00:06:05,160 --> 00:06:07,259
reports uh it took them a while to fix

143
00:06:07,259 --> 00:06:09,539
it uh we'll go through the timeline and

144
00:06:09,539 --> 00:06:12,240
after they have fully uh rectified the

145
00:06:12,240 --> 00:06:15,360
bugs and published the um the fixes uh

146
00:06:15,360 --> 00:06:18,240
we decided to um how do you say I

147
00:06:18,240 --> 00:06:20,520
registered this this box uh in in my

148
00:06:20,520 --> 00:06:23,599
track for for cves

149
00:06:24,240 --> 00:06:27,419
now this this is the uh overall uh

150
00:06:27,419 --> 00:06:29,520
status of of the project that we took on

151
00:06:29,520 --> 00:06:32,780
so it's a open EMR um open source uh

152
00:06:32,780 --> 00:06:35,819
electronic medical record system

153
00:06:35,819 --> 00:06:37,680
um the version that we we researched was

154
00:06:37,680 --> 00:06:40,680
version 6.0 the latest release version

155
00:06:40,680 --> 00:06:43,199
was January 5th 2021 this might have

156
00:06:43,199 --> 00:06:44,699
already changed

157
00:06:44,699 --> 00:06:46,380
um and mentioned here the security

158
00:06:46,380 --> 00:06:48,539
researchers involved and the type of

159
00:06:48,539 --> 00:06:50,880
bugs that we found in total we found

160
00:06:50,880 --> 00:06:52,979
eight vulnerabilities however is more

161
00:06:52,979 --> 00:06:54,960
than that we didn't want to bloated too

162
00:06:54,960 --> 00:06:57,539
much one particular vulnerability in

163
00:06:57,539 --> 00:07:00,900
respect to the idols we had over 60 of

164
00:07:00,900 --> 00:07:03,840
them and my colleague Aiden will walk

165
00:07:03,840 --> 00:07:05,880
will walk through some of it

166
00:07:05,880 --> 00:07:08,039
but we we categorize most of the

167
00:07:08,039 --> 00:07:10,020
vulnerabilities into just eight of them

168
00:07:10,020 --> 00:07:12,180
and as you can see here this this are

169
00:07:12,180 --> 00:07:13,919
the breakdown of each vulnerability that

170
00:07:13,919 --> 00:07:15,120
we found

171
00:07:15,120 --> 00:07:17,759
um mainly uh two highs

172
00:07:17,759 --> 00:07:20,280
um one two three four five five lows and

173
00:07:20,280 --> 00:07:23,400
uh and one sorry six lows and one sorry

174
00:07:23,400 --> 00:07:26,780
six medium and one low

175
00:07:28,860 --> 00:07:31,680
now let's start with the first one uh I

176
00:07:31,680 --> 00:07:33,599
mentioned about the idol the typical uh

177
00:07:33,599 --> 00:07:36,060
authorization issue this this is a very

178
00:07:36,060 --> 00:07:38,160
typical uh common vulnerability that we

179
00:07:38,160 --> 00:07:41,639
find uh where a non-privileged user uh

180
00:07:41,639 --> 00:07:43,680
such as an accountant or a front office

181
00:07:43,680 --> 00:07:46,199
person can actually view patient records

182
00:07:46,199 --> 00:07:48,060
so the patient records are mainly

183
00:07:48,060 --> 00:07:49,919
reserved for privileged users such as

184
00:07:49,919 --> 00:07:52,259
the medical staff and what we found was

185
00:07:52,259 --> 00:07:55,979
by logging in into a lower privileged uh

186
00:07:55,979 --> 00:07:58,620
user account we were able to see uh

187
00:07:58,620 --> 00:08:00,479
patient medical records that contain a

188
00:08:00,479 --> 00:08:03,479
pii such as their name their their date

189
00:08:03,479 --> 00:08:06,539
of birth the type of medical ailments

190
00:08:06,539 --> 00:08:08,039
that and the treatment that they are

191
00:08:08,039 --> 00:08:08,940
receiving

192
00:08:08,940 --> 00:08:12,300
and um basically this issue is very

193
00:08:12,300 --> 00:08:13,979
easily rectified

194
00:08:13,979 --> 00:08:16,740
um it's the the authorization cookie

195
00:08:16,740 --> 00:08:18,840
um that was not checked there was no um

196
00:08:18,840 --> 00:08:20,099
ACL

197
00:08:20,099 --> 00:08:22,919
um authorization uh check on the the

198
00:08:22,919 --> 00:08:24,360
corresponding page on the vulnerable

199
00:08:24,360 --> 00:08:28,259
pages to to validate whether the user is

200
00:08:28,259 --> 00:08:29,819
allowed to view that particular record

201
00:08:29,819 --> 00:08:33,000
or not so if you look at the bottom here

202
00:08:33,000 --> 00:08:34,679
the affected URL we mentioned

203
00:08:34,679 --> 00:08:37,260
specifically the endpoint the open EMR

204
00:08:37,260 --> 00:08:39,779
interface patient file summary record

205
00:08:39,779 --> 00:08:43,320
disclosure and now this particular URL

206
00:08:43,320 --> 00:08:45,959
is is submitted in the get request it's

207
00:08:45,959 --> 00:08:48,180
it requires authentication meaning you

208
00:08:48,180 --> 00:08:50,459
have to have at least

209
00:08:50,459 --> 00:08:53,760
um a low privileged user account

210
00:08:53,760 --> 00:08:56,100
um and if you know the particular uh if

211
00:08:56,100 --> 00:08:57,300
you know this particular endpoint the

212
00:08:57,300 --> 00:08:58,920
factor endpoint all you got to do is

213
00:08:58,920 --> 00:09:00,480
just plug this into your into your

214
00:09:00,480 --> 00:09:02,519
browser and you should be able to view

215
00:09:02,519 --> 00:09:04,680
the patient record at the end here there

216
00:09:04,680 --> 00:09:06,839
is a parameter

217
00:09:06,839 --> 00:09:09,480
you edit lit which I can't see because

218
00:09:09,480 --> 00:09:11,940
my avatar is blocking um can we go to

219
00:09:11,940 --> 00:09:14,580
the next slide please

220
00:09:14,580 --> 00:09:17,700
okay so this is how the records look

221
00:09:17,700 --> 00:09:20,160
like if you are locked on as um

222
00:09:20,160 --> 00:09:23,339
administrator now these are the a sample

223
00:09:23,339 --> 00:09:24,959
patient record that we just created just

224
00:09:24,959 --> 00:09:27,600
some test records uh as you know um we

225
00:09:27,600 --> 00:09:29,580
downloaded the source code we we load

226
00:09:29,580 --> 00:09:32,760
them into a VM running Apache Linux and

227
00:09:32,760 --> 00:09:35,399
and yeah we just created um some tests

228
00:09:35,399 --> 00:09:37,980
test user accounts we test data and now

229
00:09:37,980 --> 00:09:40,680
as logging in as an administrator you

230
00:09:40,680 --> 00:09:42,899
should be able to see this record that's

231
00:09:42,899 --> 00:09:47,540
normal now what we did was second page

232
00:09:48,240 --> 00:09:51,420
by tempering the the the endpoint the

233
00:09:51,420 --> 00:09:53,940
URL I mentioned just now uh using the

234
00:09:53,940 --> 00:09:57,060
accounting one user we can still view

235
00:09:57,060 --> 00:09:59,220
the patient record

236
00:09:59,220 --> 00:10:00,779
as you can see over here the like the

237
00:10:00,779 --> 00:10:02,519
the demographics the documents the

238
00:10:02,519 --> 00:10:05,339
transactions the medical record panel is

239
00:10:05,339 --> 00:10:08,100
still visible right and it's very very

240
00:10:08,100 --> 00:10:10,500
simple I mentioned it it is a get

241
00:10:10,500 --> 00:10:12,660
statement which we will see in the next

242
00:10:12,660 --> 00:10:14,160
page

243
00:10:14,160 --> 00:10:16,380
so this this is the the vulnerable

244
00:10:16,380 --> 00:10:18,420
endpoint where I mentioned the edit lit

245
00:10:18,420 --> 00:10:20,880
equals to three now just by changing

246
00:10:20,880 --> 00:10:23,880
this this number uh incrementing it um

247
00:10:23,880 --> 00:10:25,620
three four five six and so forth you'll

248
00:10:25,620 --> 00:10:27,660
be able to view other users record now

249
00:10:27,660 --> 00:10:29,519
the only thing is that um the cookie

250
00:10:29,519 --> 00:10:30,300
here

251
00:10:30,300 --> 00:10:32,519
um highlighted in red this is the

252
00:10:32,519 --> 00:10:36,240
accountant user cookie now

253
00:10:36,240 --> 00:10:39,300
by right he should not be able to access

254
00:10:39,300 --> 00:10:42,420
that endpoint using this cookie

255
00:10:42,420 --> 00:10:46,079
so it's as simple as just knowing which

256
00:10:46,079 --> 00:10:48,720
endpoint to browse to in your in in your

257
00:10:48,720 --> 00:10:51,060
web browser and you will be able to view

258
00:10:51,060 --> 00:10:52,620
the patient record it's that

259
00:10:52,620 --> 00:10:54,360
straightforward so moving to the next

260
00:10:54,360 --> 00:10:55,560
slide please

261
00:10:55,560 --> 00:10:57,300
and this is how it looks like if you

262
00:10:57,300 --> 00:10:59,579
don't use book so for example

263
00:10:59,579 --> 00:11:01,079
um if you just open up your browser

264
00:11:01,079 --> 00:11:03,839
login as a accountant one which is a low

265
00:11:03,839 --> 00:11:06,240
privileged user and it just so happened

266
00:11:06,240 --> 00:11:09,360
that you know the the endpoint that

267
00:11:09,360 --> 00:11:11,640
points to the medical record just plug

268
00:11:11,640 --> 00:11:14,820
it into the browser change the parameter

269
00:11:14,820 --> 00:11:17,279
um at the end there the edit equals to

270
00:11:17,279 --> 00:11:20,160
three incremented by by one and you will

271
00:11:20,160 --> 00:11:22,079
be able to see other patient records

272
00:11:22,079 --> 00:11:24,300
which you should not so this is a

273
00:11:24,300 --> 00:11:27,240
typical classic Idol case and uh not

274
00:11:27,240 --> 00:11:28,980
very difficult to discover

275
00:11:28,980 --> 00:11:30,720
um I guess the the last security

276
00:11:30,720 --> 00:11:33,180
researchers were very focused on the SQL

277
00:11:33,180 --> 00:11:35,160
injections and the rce

278
00:11:35,160 --> 00:11:36,660
um perhaps it could be that or perhaps

279
00:11:36,660 --> 00:11:38,640
maybe the the code base was was changed

280
00:11:38,640 --> 00:11:41,339
after uh the research

281
00:11:41,339 --> 00:11:44,100
now in in the next slide here

282
00:11:44,100 --> 00:11:46,500
uh what I did was I went I wanted to

283
00:11:46,500 --> 00:11:49,019
find out uh what was the issue

284
00:11:49,019 --> 00:11:51,420
um we know it's an idol issue so I I

285
00:11:51,420 --> 00:11:54,899
traced back to to the PHP page that was

286
00:11:54,899 --> 00:11:58,140
responsible for displaying this data and

287
00:11:58,140 --> 00:12:00,019
it boiled down to the record

288
00:12:00,019 --> 00:12:03,240
disclosure.php now when I looked at it I

289
00:12:03,240 --> 00:12:05,940
just looked at the at the top uh first

290
00:12:05,940 --> 00:12:08,339
uh 30 lines uh I noticed there are no

291
00:12:08,339 --> 00:12:10,860
ACL checks there so this page is open

292
00:12:10,860 --> 00:12:13,920
for for anyone uh that has a valid

293
00:12:13,920 --> 00:12:16,260
session ID a session cookie for example

294
00:12:16,260 --> 00:12:19,079
now after we have submitted this box

295
00:12:19,079 --> 00:12:20,880
this this box was discovered in version

296
00:12:20,880 --> 00:12:23,160
six uh after we have discovered it we

297
00:12:23,160 --> 00:12:25,200
submitted it took them a while to fix it

298
00:12:25,200 --> 00:12:28,620
and in version 6.1 what I noticed was

299
00:12:28,620 --> 00:12:32,760
from line number 23 to 27 they added the

300
00:12:32,760 --> 00:12:34,440
ACL check

301
00:12:34,440 --> 00:12:37,140
and at the same time line 31 onwards

302
00:12:37,140 --> 00:12:39,120
also they added another ACL check there

303
00:12:39,120 --> 00:12:41,880
and if you press enter Eden

304
00:12:41,880 --> 00:12:44,339
there you go so this these were the two

305
00:12:44,339 --> 00:12:46,980
checks they added after the uh I mean to

306
00:12:46,980 --> 00:12:49,560
fix the bug after version six so it's

307
00:12:49,560 --> 00:12:51,240
quite it's quite straightforward um it

308
00:12:51,240 --> 00:12:53,220
just do uh that's a check

309
00:12:53,220 --> 00:12:56,579
um whether the the records uh uh should

310
00:12:56,579 --> 00:12:58,680
be displayed to this particular user if

311
00:12:58,680 --> 00:13:00,600
the user does not have the authorization

312
00:13:00,600 --> 00:13:03,540
it will just uh spill uh not authorize

313
00:13:03,540 --> 00:13:05,700
uh error message and then exit that

314
00:13:05,700 --> 00:13:08,279
function so that's how that's how we we

315
00:13:08,279 --> 00:13:11,160
found out uh how they fixed the issue

316
00:13:11,160 --> 00:13:14,100
and um next slide please so now I'm

317
00:13:14,100 --> 00:13:16,440
going to pass this to my colleague so I

318
00:13:16,440 --> 00:13:18,899
mentioned that uh we we recorded only

319
00:13:18,899 --> 00:13:21,000
eight vulnerabilities yeah but in one in

320
00:13:21,000 --> 00:13:22,920
this particular vulnerability the idol

321
00:13:22,920 --> 00:13:25,740
there's actually 62 of them but we are

322
00:13:25,740 --> 00:13:29,459
not out to to amass um 62 cves yeah we

323
00:13:29,459 --> 00:13:31,860
just want to make our point so we we

324
00:13:31,860 --> 00:13:35,040
just um open up another uh finding and

325
00:13:35,040 --> 00:13:37,860
I'll pass it to to Aiden to um give his

326
00:13:37,860 --> 00:13:40,019
explanation on uh the further analysis

327
00:13:40,019 --> 00:13:41,940
of the idols found on on the other Pages

328
00:13:41,940 --> 00:13:45,120
go ahead okay cool can you hear me right

329
00:13:45,120 --> 00:13:47,940
uh okay uh good morning everyone my name

330
00:13:47,940 --> 00:13:53,000
is Eden I'm going to talk about the cve

331
00:13:53,000 --> 00:13:56,279
2022-2493 is a missing uh function level

332
00:13:56,279 --> 00:14:00,060
access control issue in this uh open EMR

333
00:14:00,060 --> 00:14:03,540
they are total five user rules that one

334
00:14:03,540 --> 00:14:05,160
is the super admin which have the access

335
00:14:05,160 --> 00:14:06,899
to all the modules

336
00:14:06,899 --> 00:14:08,880
and another four user rule are

337
00:14:08,880 --> 00:14:10,740
considered as a standard user but they

338
00:14:10,740 --> 00:14:12,560
have their own modules and permission

339
00:14:12,560 --> 00:14:15,660
based on my findings this four standard

340
00:14:15,660 --> 00:14:20,040
user Rose were able to access to server

341
00:14:20,040 --> 00:14:22,200
admin modules none other than that I

342
00:14:22,200 --> 00:14:25,079
found that the four standard user rules

343
00:14:25,079 --> 00:14:27,000
have a promiscuous previous issue

344
00:14:27,000 --> 00:14:30,180
meaning that for example accounting

345
00:14:30,180 --> 00:14:32,639
users supposed to view the building and

346
00:14:32,639 --> 00:14:35,639
payment info but in this case the front

347
00:14:35,639 --> 00:14:38,700
office visitation and creation can view

348
00:14:38,700 --> 00:14:40,680
the billing and payment

349
00:14:40,680 --> 00:14:44,220
also this concludes that this is a

350
00:14:44,220 --> 00:14:46,680
access control issue usually this type

351
00:14:46,680 --> 00:14:48,720
of vulnerability can't be picked up by

352
00:14:48,720 --> 00:14:51,360
automator 2 as you require a manual

353
00:14:51,360 --> 00:14:54,959
testing to identify it in total we found

354
00:14:54,959 --> 00:14:57,240
62 vulnerable endpoint in this

355
00:14:57,240 --> 00:14:59,519
application with the last number

356
00:14:59,519 --> 00:15:02,880
instance so we consolidate them into one

357
00:15:02,880 --> 00:15:05,339
CV one issue because they are in the

358
00:15:05,339 --> 00:15:06,600
same category

359
00:15:06,600 --> 00:15:09,000
and I don't think they will issue us a

360
00:15:09,000 --> 00:15:13,199
62 cve for us and the recommendation for

361
00:15:13,199 --> 00:15:16,560
this issue is don't relying on the UI to

362
00:15:16,560 --> 00:15:18,540
implement the access control

363
00:15:18,540 --> 00:15:22,519
and require a server-side validation

364
00:15:23,220 --> 00:15:25,980
and this is the list of the vulnerable

365
00:15:25,980 --> 00:15:27,240
endpoints

366
00:15:27,240 --> 00:15:29,100
I only show part of it here because

367
00:15:29,100 --> 00:15:30,660
there are too many

368
00:15:30,660 --> 00:15:34,139
uh red red color Bots you see here

369
00:15:34,139 --> 00:15:36,360
meaning that the user is unauthorized to

370
00:15:36,360 --> 00:15:38,639
access to the modules green you see here

371
00:15:38,639 --> 00:15:40,740
is the user is authorized to access to

372
00:15:40,740 --> 00:15:42,959
the audience what I would like to

373
00:15:42,959 --> 00:15:45,360
highlight here is that there are several

374
00:15:45,360 --> 00:15:48,360
admin modules can be accessible by any

375
00:15:48,360 --> 00:15:52,040
standard user rules

376
00:15:52,920 --> 00:15:55,380
and also we can see that the front

377
00:15:55,380 --> 00:15:58,800
office visitation creation can be

378
00:15:58,800 --> 00:16:02,160
assessed by any of the uh can access to

379
00:16:02,160 --> 00:16:04,560
the billing and the payment info

380
00:16:04,560 --> 00:16:08,100
which only can access by the accounting

381
00:16:08,100 --> 00:16:10,260
I will show some example in the

382
00:16:10,260 --> 00:16:12,839
following slide

383
00:16:12,839 --> 00:16:17,760
the first POC is any user to admin

384
00:16:17,760 --> 00:16:20,220
modules any user can access to the me

385
00:16:20,220 --> 00:16:22,260
modules in order to export this

386
00:16:22,260 --> 00:16:24,180
vulnerability we need to identify the

387
00:16:24,180 --> 00:16:27,120
employees of the modules this is how the

388
00:16:27,120 --> 00:16:30,420
open EMR mean that spot looks like so

389
00:16:30,420 --> 00:16:31,940
when I try to browse through the effect

390
00:16:31,940 --> 00:16:36,180
module score form Administration

391
00:16:36,180 --> 00:16:38,519
um as we can see the far path is

392
00:16:38,519 --> 00:16:40,399
remaining the same

393
00:16:40,399 --> 00:16:42,899
stratman.php it will be the same if we

394
00:16:42,899 --> 00:16:45,420
browse to another modules as well there

395
00:16:45,420 --> 00:16:46,860
are some process on the back that we

396
00:16:46,860 --> 00:16:50,100
cannot see by our Naked Eyes

397
00:16:50,100 --> 00:16:52,860
in all in order for us to discover the

398
00:16:52,860 --> 00:16:55,560
real path we can use the inspect element

399
00:16:55,560 --> 00:16:57,120
in the browser

400
00:16:57,120 --> 00:17:00,300
and release it but this is not very user

401
00:17:00,300 --> 00:17:01,560
friendly

402
00:17:01,560 --> 00:17:04,079
therefore we can use a POS C2 called

403
00:17:04,079 --> 00:17:06,599
bird Suite

404
00:17:06,599 --> 00:17:09,419
uh this is one of the essential tool for

405
00:17:09,419 --> 00:17:11,339
the web security testing I believe maybe

406
00:17:11,339 --> 00:17:14,400
some of you may use or seen before in

407
00:17:14,400 --> 00:17:17,040
the bird Suite policy we can capture all

408
00:17:17,040 --> 00:17:19,679
the HTTP requests before sending to the

409
00:17:19,679 --> 00:17:22,859
server as we can see that I can capture

410
00:17:22,859 --> 00:17:24,299
the multiple endpoint from the

411
00:17:24,299 --> 00:17:26,459
application but the key finding here is

412
00:17:26,459 --> 00:17:28,740
the form and mean endpoint that I

413
00:17:28,740 --> 00:17:31,160
highlighted

414
00:17:34,380 --> 00:17:37,440
um now we have the effected URL the next

415
00:17:37,440 --> 00:17:39,360
thing we need to do is to log into the

416
00:17:39,360 --> 00:17:42,600
lowest Prius user in the application in

417
00:17:42,600 --> 00:17:45,120
this case I use Frank office what we can

418
00:17:45,120 --> 00:17:45,960
see

419
00:17:45,960 --> 00:17:47,700
from the front of this dashboard is

420
00:17:47,700 --> 00:17:50,640
there is no administrator header meaning

421
00:17:50,640 --> 00:17:53,059
that there is no way for us to go to the

422
00:17:53,059 --> 00:17:56,340
navigate to the admin modules if we

423
00:17:56,340 --> 00:17:59,178
don't know the endpoint

424
00:18:00,299 --> 00:18:03,840
we can browse to the effected URL that

425
00:18:03,840 --> 00:18:06,240
we captured earlier to unauthorize

426
00:18:06,240 --> 00:18:08,280
access to the admin modules with the

427
00:18:08,280 --> 00:18:11,460
access to these modules that are the

428
00:18:11,460 --> 00:18:13,799
unauthorized user is allowed to modify

429
00:18:13,799 --> 00:18:16,200
the phone access control

430
00:18:16,200 --> 00:18:18,539
within the application meaning that this

431
00:18:18,539 --> 00:18:20,580
module is allowed attacker to gain more

432
00:18:20,580 --> 00:18:23,899
access to another modules

433
00:18:25,200 --> 00:18:28,980
Sams go to the this example the front

434
00:18:28,980 --> 00:18:30,059
office

435
00:18:30,059 --> 00:18:31,919
don't have the right to access to a

436
00:18:31,919 --> 00:18:34,380
building manager

437
00:18:34,380 --> 00:18:37,039
as we can see there is no

438
00:18:37,039 --> 00:18:41,039
fees header in this uh uh front office

439
00:18:41,039 --> 00:18:42,299
dashboard

440
00:18:42,299 --> 00:18:43,740
menu

441
00:18:43,740 --> 00:18:47,400
on the bot but this is not this but in

442
00:18:47,400 --> 00:18:50,520
this case we can access the bill manager

443
00:18:50,520 --> 00:18:52,440
on the bottom of the picture we can see

444
00:18:52,440 --> 00:18:56,720
there is a patient uh building record

445
00:18:57,480 --> 00:19:00,000
and we click and go further on the

446
00:19:00,000 --> 00:19:02,700
record we can we can see the patient

447
00:19:02,700 --> 00:19:05,460
payment and we also can issue the

448
00:19:05,460 --> 00:19:08,760
billing without paying any fee that's it

449
00:19:08,760 --> 00:19:11,220
for the PLC for of this cve actually

450
00:19:11,220 --> 00:19:12,840
they are more instant but due to the

451
00:19:12,840 --> 00:19:14,700
timing of this presentation we only

452
00:19:14,700 --> 00:19:18,000
selected these two that I think is the

453
00:19:18,000 --> 00:19:20,100
most impactful example

454
00:19:20,100 --> 00:19:23,520
I will pass it to Lee to present his

455
00:19:23,520 --> 00:19:27,660
next uh findings yeah thank you Eden

456
00:19:27,660 --> 00:19:30,120
um morning everyone my name is Mohammad

457
00:19:30,120 --> 00:19:31,500
Ali

458
00:19:31,500 --> 00:19:33,960
um I will present the vulnerability that

459
00:19:33,960 --> 00:19:36,539
I found which I'm privileged user can

460
00:19:36,539 --> 00:19:39,299
create a new rule and lead to stored

461
00:19:39,299 --> 00:19:41,820
crosstalk scripting

462
00:19:41,820 --> 00:19:45,780
um so this issue is that that

463
00:19:45,780 --> 00:19:49,080
unpublished using that that include

464
00:19:49,080 --> 00:19:52,380
accounting and also front office they

465
00:19:52,380 --> 00:19:54,299
can create a

466
00:19:54,299 --> 00:19:57,600
a new rule and inject a web script on

467
00:19:57,600 --> 00:20:00,539
the vulnerable endpoint and with the

468
00:20:00,539 --> 00:20:02,220
vulnerable parameter

469
00:20:02,220 --> 00:20:05,220
so the payload could triggered a stored

470
00:20:05,220 --> 00:20:08,460
SSS in the plane rules and that can only

471
00:20:08,460 --> 00:20:11,220
be accessible by privileged user or

472
00:20:11,220 --> 00:20:12,539
admin using

473
00:20:12,539 --> 00:20:15,840
our recommendation is quite simple do

474
00:20:15,840 --> 00:20:18,240
not trust any control user input

475
00:20:18,240 --> 00:20:21,780
parameter that sent to the server and

476
00:20:21,780 --> 00:20:23,760
ensure it to sanitize it before

477
00:20:23,760 --> 00:20:26,160
displaying or reflecting it on the

478
00:20:26,160 --> 00:20:27,059
website

479
00:20:27,059 --> 00:20:31,080
and overall we found four store SSS in

480
00:20:31,080 --> 00:20:33,720
one reflected SSS and all of these

481
00:20:33,720 --> 00:20:35,820
vulnerabilities need to be authenticated

482
00:20:35,820 --> 00:20:39,379
to reproduce the issue

483
00:20:39,840 --> 00:20:41,640
so before I jump to the issue

484
00:20:41,640 --> 00:20:46,140
reproduction of the cve 2020 to 1179 I

485
00:20:46,140 --> 00:20:49,320
will show you what is inside openmrcms

486
00:20:49,320 --> 00:20:51,960
so inside this application there are a

487
00:20:51,960 --> 00:20:54,960
lot of forms modules and subcategory

488
00:20:54,960 --> 00:20:59,880
inside the openmsms for me as a beginner

489
00:20:59,880 --> 00:21:01,799
in variety research

490
00:21:01,799 --> 00:21:04,559
you might face overwhelmed and struggle

491
00:21:04,559 --> 00:21:07,080
you can press enter and then they might

492
00:21:07,080 --> 00:21:10,500
be two more yep and with these things

493
00:21:10,500 --> 00:21:13,140
you might want to find what is the best

494
00:21:13,140 --> 00:21:15,179
methodology that you want to use while

495
00:21:15,179 --> 00:21:19,620
switching so I focus more into SSS and

496
00:21:19,620 --> 00:21:21,679
found one simple that need to be used

497
00:21:21,679 --> 00:21:25,380
but also efficient and I will explain it

498
00:21:25,380 --> 00:21:28,340
on the next slide

499
00:21:30,240 --> 00:21:31,620
so

500
00:21:31,620 --> 00:21:34,080
um imagine that when we try to browse

501
00:21:34,080 --> 00:21:37,080
into some pages in the applications

502
00:21:37,080 --> 00:21:40,860
um we might encounter a lot of inputs so

503
00:21:40,860 --> 00:21:43,500
what we can do is we just use a simple

504
00:21:43,500 --> 00:21:46,919
payload like script and alert and

505
00:21:46,919 --> 00:21:49,620
utilize Ctrl C and Ctrl V

506
00:21:49,620 --> 00:21:52,919
so what I did is I take note of the

507
00:21:52,919 --> 00:21:55,679
endpoints that I found and set a range

508
00:21:55,679 --> 00:21:57,539
for that endpoints only

509
00:21:57,539 --> 00:22:00,360
for example on this input that you can

510
00:22:00,360 --> 00:22:04,740
see I put a range 1 until 9

511
00:22:04,740 --> 00:22:07,260
um and take note of that endpoints so

512
00:22:07,260 --> 00:22:10,860
when we browse again to different pages

513
00:22:10,860 --> 00:22:15,199
and found new forms

514
00:22:15,240 --> 00:22:17,820
yeah you can press enter then yeah thank

515
00:22:17,820 --> 00:22:20,400
you and we can see that we set a

516
00:22:20,400 --> 00:22:23,100
different range for example 10 until 11

517
00:22:23,100 --> 00:22:26,580
and again take note of that endpoints so

518
00:22:26,580 --> 00:22:29,039
keep doing this and always take note of

519
00:22:29,039 --> 00:22:31,500
the range of numbers that we did and

520
00:22:31,500 --> 00:22:34,620
that endpoints so by doing this when we

521
00:22:34,620 --> 00:22:37,380
try to browse into different pages we

522
00:22:37,380 --> 00:22:39,480
might see a pop-up with different

523
00:22:39,480 --> 00:22:40,620
numbers

524
00:22:40,620 --> 00:22:43,440
so why we're doing this is to ensure

525
00:22:43,440 --> 00:22:45,900
that we identify where is the payload

526
00:22:45,900 --> 00:22:48,299
coming from and since we are going to

527
00:22:48,299 --> 00:22:50,520
browse into different endpoints and we

528
00:22:50,520 --> 00:22:53,400
might not see the SSS reflected on the

529
00:22:53,400 --> 00:22:56,580
same pages but it might be reflected on

530
00:22:56,580 --> 00:22:58,799
different pages inside the application

531
00:22:58,799 --> 00:23:02,280
and that how how we could get the CVS

532
00:23:02,280 --> 00:23:06,200
that related to the SSS

533
00:23:07,020 --> 00:23:10,020
and now I'm going to explain the issue

534
00:23:10,020 --> 00:23:14,280
reproduction for this cve 2020 20179

535
00:23:14,280 --> 00:23:17,520
as you can see uh in the image the

536
00:23:17,520 --> 00:23:19,980
administrator page will have a sub

537
00:23:19,980 --> 00:23:22,679
category of rules in the UI

538
00:23:22,679 --> 00:23:25,919
but not in the case of accounting user

539
00:23:25,919 --> 00:23:29,100
they do not have any access of the

540
00:23:29,100 --> 00:23:32,039
subcategory of rules in the UI

541
00:23:32,039 --> 00:23:34,140
so what we did is

542
00:23:34,140 --> 00:23:37,320
um we intercept the request of an admin

543
00:23:37,320 --> 00:23:41,039
and trying to create a new rule and we

544
00:23:41,039 --> 00:23:44,700
can change the cookie to continue or non

545
00:23:44,700 --> 00:23:48,120
unprivileged user and we also identified

546
00:23:48,120 --> 00:23:50,940
that one of the parameters is vulnerable

547
00:23:50,940 --> 00:23:55,140
to SSS so we can inject it with SSS

548
00:23:55,140 --> 00:23:57,059
cookie still payload

549
00:23:57,059 --> 00:24:00,000
and using Fetch and by using fetch it

550
00:24:00,000 --> 00:24:02,100
will not redirect but it will just make

551
00:24:02,100 --> 00:24:04,799
a request to the targeted server or

552
00:24:04,799 --> 00:24:07,679
attack the server and we pass the

553
00:24:07,679 --> 00:24:10,440
document cookie in the URL parameter of

554
00:24:10,440 --> 00:24:12,860
C

555
00:24:13,020 --> 00:24:17,460
so for example if an admin trying to go

556
00:24:17,460 --> 00:24:20,760
or browse into the page of rules and

557
00:24:20,760 --> 00:24:23,159
view any rules eventually

558
00:24:23,159 --> 00:24:26,400
if you send a request to

559
00:24:26,400 --> 00:24:29,220
um the attacker as you can see in here

560
00:24:29,220 --> 00:24:32,280
we have the admin cookie in the URL

561
00:24:32,280 --> 00:24:33,840
parameter of C

562
00:24:33,840 --> 00:24:37,320
so with this cookie the attacker could

563
00:24:37,320 --> 00:24:40,200
use it and utilize it to further their

564
00:24:40,200 --> 00:24:42,720
malicious intent so what we can what

565
00:24:42,720 --> 00:24:45,120
they can do is they can update in their

566
00:24:45,120 --> 00:24:48,000
browser of their admin cookie or if they

567
00:24:48,000 --> 00:24:50,460
have the endpoints that they want they

568
00:24:50,460 --> 00:24:52,159
might change it in the book Suite

569
00:24:52,159 --> 00:24:55,340
requests and the cookie headers

570
00:24:55,340 --> 00:24:56,940
and

571
00:24:56,940 --> 00:24:59,340
um if you press enter again all right

572
00:24:59,340 --> 00:25:02,100
thank you you can see that if the

573
00:25:02,100 --> 00:25:04,500
attacker browse into any endpoints even

574
00:25:04,500 --> 00:25:06,299
though that we are Accounting in the

575
00:25:06,299 --> 00:25:08,820
browser but the endpoints will still see

576
00:25:08,820 --> 00:25:12,720
us as administrator and they might do a

577
00:25:12,720 --> 00:25:15,059
lot of things into you and that's how we

578
00:25:15,059 --> 00:25:17,220
can reproduce this issue and I will hand

579
00:25:17,220 --> 00:25:19,440
over to reason for the next slide thank

580
00:25:19,440 --> 00:25:20,340
you

581
00:25:20,340 --> 00:25:22,380
thanks Ali

582
00:25:22,380 --> 00:25:24,840
all right so let's go through the

583
00:25:24,840 --> 00:25:27,480
disclosure timeline

584
00:25:27,480 --> 00:25:30,240
now we initially reported the findings

585
00:25:30,240 --> 00:25:34,620
in December sorry September 2021 uh we

586
00:25:34,620 --> 00:25:36,600
received a couple of back and forth

587
00:25:36,600 --> 00:25:39,659
emails um from the open EMR

588
00:25:39,659 --> 00:25:42,720
from the open EMR security team up to at

589
00:25:42,720 --> 00:25:46,799
least uh 4th of October 2021 after which

590
00:25:46,799 --> 00:25:49,559
they said that the release of the

591
00:25:49,559 --> 00:25:53,400
patches will come in batches and it was

592
00:25:53,400 --> 00:25:59,340
only in April 24th 2022 that all the

593
00:25:59,340 --> 00:26:03,240
bugs all all 60 plus the ones the plus

594
00:26:03,240 --> 00:26:06,720
eight cves were fully touched and only

595
00:26:06,720 --> 00:26:09,179
then we started

596
00:26:09,179 --> 00:26:13,200
um triaging it to my tray to get the

597
00:26:13,200 --> 00:26:16,020
cves issued now this was a challenge

598
00:26:16,020 --> 00:26:19,440
um but nevertheless we made it and the

599
00:26:19,440 --> 00:26:23,279
full disclosure timeline and information

600
00:26:23,279 --> 00:26:27,140
details everything were published

601
00:26:29,880 --> 00:26:32,340
now um these are some of the learning

602
00:26:32,340 --> 00:26:33,360
curves

603
00:26:33,360 --> 00:26:35,880
um learning nuggets that we we learned

604
00:26:35,880 --> 00:26:37,140
yeah

605
00:26:37,140 --> 00:26:40,020
um firstly we focus on bugs with

606
00:26:40,020 --> 00:26:41,820
business impact

607
00:26:41,820 --> 00:26:44,580
um we we skip all the sillies things

608
00:26:44,580 --> 00:26:46,260
like missing security haters weak

609
00:26:46,260 --> 00:26:48,419
ciphers stuff like that

610
00:26:48,419 --> 00:26:50,039
um we use the source code for for

611
00:26:50,039 --> 00:26:51,659
analysis

612
00:26:51,659 --> 00:26:53,820
um and I think the most important is the

613
00:26:53,820 --> 00:26:55,860
third item choosing your VDP targets

614
00:26:55,860 --> 00:26:57,779
wisely this was a tactical move rather

615
00:26:57,779 --> 00:27:00,059
than the technical move because we

616
00:27:00,059 --> 00:27:04,340
didn't want to choose a VDP or a project

617
00:27:04,340 --> 00:27:07,980
where they they did not um how they say

618
00:27:07,980 --> 00:27:09,900
that they don't respond to you or they

619
00:27:09,900 --> 00:27:11,820
say you you are not allowed to fully

620
00:27:11,820 --> 00:27:14,039
disclose your findings

621
00:27:14,039 --> 00:27:16,380
um the worst case scenario is that they

622
00:27:16,380 --> 00:27:20,340
might not even acknowledge the work that

623
00:27:20,340 --> 00:27:23,340
you have given so that's why I at the

624
00:27:23,340 --> 00:27:25,440
first few slides I mentioned that uh we

625
00:27:25,440 --> 00:27:28,080
analyze our our VDP programs pretty

626
00:27:28,080 --> 00:27:30,600
carefully before we decide to actually

627
00:27:30,600 --> 00:27:32,880
move in on it but at the same time we

628
00:27:32,880 --> 00:27:35,039
know that um a lot of the high severity

629
00:27:35,039 --> 00:27:37,980
bugs the the SQL injections the rces

630
00:27:37,980 --> 00:27:40,260
were already discovered but we felt that

631
00:27:40,260 --> 00:27:43,320
they if we dig a bit deeper we should be

632
00:27:43,320 --> 00:27:45,720
able to find and we were right about it

633
00:27:45,720 --> 00:27:48,419
so um don't don't be discouraged if you

634
00:27:48,419 --> 00:27:50,820
see programs where they were previously

635
00:27:50,820 --> 00:27:53,460
a lot of uh Hunters that have already

636
00:27:53,460 --> 00:27:55,440
reported bugs they might still be some

637
00:27:55,440 --> 00:27:56,760
insight there

638
00:27:56,760 --> 00:27:59,039
um I I mentioned about triaging

639
00:27:59,039 --> 00:28:01,500
um going through my trade was um I

640
00:28:01,500 --> 00:28:03,480
wouldn't say difficult but it was a bit

641
00:28:03,480 --> 00:28:06,779
time consuming um so we we used

642
00:28:06,779 --> 00:28:09,779
um uh hunter.dev hunter.dev I really

643
00:28:09,779 --> 00:28:12,419
shout out to them they helped us a lot

644
00:28:12,419 --> 00:28:15,360
um they they triage all

645
00:28:15,360 --> 00:28:18,179
um security bugs reported to them um in

646
00:28:18,179 --> 00:28:21,419
GitHub so go ahead and check them out

647
00:28:21,419 --> 00:28:23,460
um if you have any uh bucks that you

648
00:28:23,460 --> 00:28:26,940
find in in GitHub uh repositories you

649
00:28:26,940 --> 00:28:28,919
can triage it through Hunter and and

650
00:28:28,919 --> 00:28:31,140
they they help you to uh they even give

651
00:28:31,140 --> 00:28:34,200
uh uh cash bounties but unfortunately we

652
00:28:34,200 --> 00:28:36,600
couldn't accept them because we were

653
00:28:36,600 --> 00:28:39,059
doing this on behalf of our organization

654
00:28:39,059 --> 00:28:41,340
and um the money was was not never

655
00:28:41,340 --> 00:28:42,840
claimed

656
00:28:42,840 --> 00:28:45,000
um but um they they helped us to issue

657
00:28:45,000 --> 00:28:48,419
the cve in a timely fashion another

658
00:28:48,419 --> 00:28:50,940
point to to state is that we are

659
00:28:50,940 --> 00:28:53,220
depending on the the kind of targets

660
00:28:53,220 --> 00:28:55,980
that that you um experiment or research

661
00:28:55,980 --> 00:28:58,380
in it's not it doesn't mean it has to be

662
00:28:58,380 --> 00:29:00,900
difficult uh it is suitable for for

663
00:29:00,900 --> 00:29:03,480
beginners too uh in fact we we are not

664
00:29:03,480 --> 00:29:05,039
full-time security researchers we are

665
00:29:05,039 --> 00:29:07,380
full-time pen testers and red teamers

666
00:29:07,380 --> 00:29:09,120
um so doing VR is is more like a

667
00:29:09,120 --> 00:29:11,760
tactical uh move uh rather than a

668
00:29:11,760 --> 00:29:13,200
technical one

669
00:29:13,200 --> 00:29:15,000
um the the vulnerabilities that we found

670
00:29:15,000 --> 00:29:17,640
are common OAS vulnerabilities

671
00:29:17,640 --> 00:29:20,700
and uh I think last but not least is uh

672
00:29:20,700 --> 00:29:22,080
working as a team and sharing your

673
00:29:22,080 --> 00:29:23,760
knowledge so learning learning from my

674
00:29:23,760 --> 00:29:26,220
colleagues and um and also learning from

675
00:29:26,220 --> 00:29:28,440
what's what's out there um it really

676
00:29:28,440 --> 00:29:30,600
helped us uh to sharpen our skills in in

677
00:29:30,600 --> 00:29:32,700
VR and also at the same time sharpen our

678
00:29:32,700 --> 00:29:35,039
skills in in regular pen testing that we

679
00:29:35,039 --> 00:29:38,000
do on a daily basis

680
00:29:40,380 --> 00:29:42,179
um that's all for our presentation uh

681
00:29:42,179 --> 00:29:43,500
thank you for your time uh we'll be

682
00:29:43,500 --> 00:29:46,559
taking questions in uh in Discord or

683
00:29:46,559 --> 00:29:49,399
over here I guess

