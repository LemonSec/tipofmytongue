1
00:00:00,030 --> 00:00:06,060
the besides DC<font color="#E5E5E5"> 2017 videos are brought</font>

2
00:00:03,210 --> 00:00:07,740
<font color="#E5E5E5">to you by threat quotient introducing</font>

3
00:00:06,060 --> 00:00:10,019
<font color="#E5E5E5">the industry's first threat intelligence</font>

4
00:00:07,740 --> 00:00:13,139
platform designed to<font color="#E5E5E5"> enable threat</font>

5
00:00:10,019 --> 00:00:15,960
operations and management<font color="#E5E5E5"> and data tribe</font>

6
00:00:13,139 --> 00:00:17,910
<font color="#CCCCCC">a new kind of</font><font color="#E5E5E5"> startup studio</font><font color="#CCCCCC"> Co building</font>

7
00:00:15,960 --> 00:00:21,090
the next<font color="#CCCCCC"> generation of commercial</font><font color="#E5E5E5"> cyber</font>

8
00:00:17,910 --> 00:00:23,698
<font color="#E5E5E5">security analytics and big data product</font>

9
00:00:21,090 --> 00:00:25,380
companies so good afternoon my name<font color="#CCCCCC"> is</font>

10
00:00:23,699 --> 00:00:27,300
<font color="#E5E5E5">Daniel Bohannon and today we'll</font><font color="#CCCCCC"> be</font>

11
00:00:25,380 --> 00:00:28,859
<font color="#E5E5E5">talking about Revo coffee station I'm</font>

12
00:00:27,300 --> 00:00:30,390
kind of<font color="#E5E5E5"> looking at</font><font color="#CCCCCC"> some of the depths of</font>

13
00:00:28,859 --> 00:00:34,320
<font color="#E5E5E5">powershell obfuscation and how we can</font>

14
00:00:30,390 --> 00:00:36,899
use science to detect it<font color="#CCCCCC"> a quick blurb</font>

15
00:00:34,320 --> 00:00:39,300
about<font color="#E5E5E5"> me again</font><font color="#CCCCCC"> my name is Daniel</font><font color="#E5E5E5"> I work</font>

16
00:00:36,899 --> 00:00:41,070
for<font color="#CCCCCC"> Mandy</font><font color="#E5E5E5"> and I'm here in DC</font><font color="#CCCCCC"> so it's</font>

17
00:00:39,300 --> 00:00:44,430
nice<font color="#CCCCCC"> to be at a local conference here</font>

18
00:00:41,070 --> 00:00:45,360
the commute was awesome<font color="#CCCCCC"> mmm</font><font color="#E5E5E5"> I've been</font>

19
00:00:44,430 --> 00:00:47,460
with me in<font color="#E5E5E5"> the it for about</font><font color="#CCCCCC"> two and a</font>

20
00:00:45,360 --> 00:00:49,019
half<font color="#E5E5E5"> years started out doing IR</font>

21
00:00:47,460 --> 00:00:50,640
consulting for almost two years<font color="#CCCCCC"> and have</font>

22
00:00:49,020 --> 00:00:52,770
<font color="#CCCCCC">recently switched to an applied security</font>

23
00:00:50,640 --> 00:00:55,289
research position so I really focus

24
00:00:52,770 --> 00:00:56,850
heavily on<font color="#E5E5E5"> office</font><font color="#CCCCCC"> Gatien evasion and</font>

25
00:00:55,289 --> 00:00:59,460
really<font color="#E5E5E5"> applying detection at scale to</font>

26
00:00:56,850 --> 00:01:01,379
<font color="#CCCCCC">all of our</font><font color="#E5E5E5"> clients</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> customers</font><font color="#CCCCCC"> at fire</font>

27
00:00:59,460 --> 00:01:04,170
I'm<font color="#CCCCCC"> India</font><font color="#E5E5E5"> and there's my</font><font color="#CCCCCC"> Twitter handle</font>

28
00:01:01,379 --> 00:01:06,060
there<font color="#E5E5E5"> I want to give a huge huge out to</font>

29
00:01:04,170 --> 00:01:08,670
<font color="#E5E5E5">Li Holmes he's not here</font><font color="#CCCCCC"> today but</font><font color="#E5E5E5"> we</font>

30
00:01:06,060 --> 00:01:10,770
both<font color="#E5E5E5"> did this research</font><font color="#CCCCCC"> together and</font><font color="#E5E5E5"> Lee</font>

31
00:01:08,670 --> 00:01:12,720
is just an awesome<font color="#E5E5E5"> awesome guy he's</font><font color="#CCCCCC"> the</font>

32
00:01:10,770 --> 00:01:13,920
<font color="#E5E5E5">lead security architect for Azure over</font>

33
00:01:12,720 --> 00:01:16,320
at Microsoft and he was actually<font color="#E5E5E5"> one of</font>

34
00:01:13,920 --> 00:01:17,790
the original PowerShell developers<font color="#E5E5E5"> so</font>

35
00:01:16,320 --> 00:01:19,439
it's pretty<font color="#E5E5E5"> cool to be talking</font><font color="#CCCCCC"> about</font>

36
00:01:17,790 --> 00:01:20,520
PowerShell and<font color="#E5E5E5"> writing PowerShell tools</font>

37
00:01:19,439 --> 00:01:22,289
with<font color="#E5E5E5"> a guy who literally wrote</font><font color="#CCCCCC"> the</font>

38
00:01:20,520 --> 00:01:24,240
language<font color="#CCCCCC"> it also</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> humbling to</font><font color="#CCCCCC"> us</font>

39
00:01:22,290 --> 00:01:25,860
how<font color="#E5E5E5"> little I know about PowerShell but</font>

40
00:01:24,240 --> 00:01:27,929
fortunately he's a really humble guy so

41
00:01:25,860 --> 00:01:29,520
he<font color="#CCCCCC"> he let</font><font color="#E5E5E5"> me know gently the things I</font>

42
00:01:27,930 --> 00:01:32,939
didn't know and I'm a<font color="#E5E5E5"> better person for</font>

43
00:01:29,520 --> 00:01:34,920
<font color="#E5E5E5">it so we're gonna talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> today it's</font>

44
00:01:32,939 --> 00:01:37,740
kind<font color="#CCCCCC"> of looking at a treatise on</font><font color="#E5E5E5"> blue</font>

45
00:01:34,920 --> 00:01:39,420
<font color="#E5E5E5">team</font><font color="#CCCCCC"> Follies as a blue team er</font><font color="#E5E5E5"> I've made</font>

46
00:01:37,740 --> 00:01:40,860
all these mistakes<font color="#E5E5E5"> and I hope to share</font>

47
00:01:39,420 --> 00:01:43,049
them with<font color="#E5E5E5"> you in such a way</font><font color="#CCCCCC"> that you can</font>

48
00:01:40,860 --> 00:01:45,240
take it and<font color="#E5E5E5"> learn from it and then some</font>

49
00:01:43,049 --> 00:01:47,579
of the cool<font color="#CCCCCC"> new stuff that Lee and I</font>

50
00:01:45,240 --> 00:01:48,869
spent several months<font color="#E5E5E5"> on this year to try</font>

51
00:01:47,579 --> 00:01:53,729
to<font color="#CCCCCC"> tackle</font><font color="#E5E5E5"> this problem</font><font color="#CCCCCC"> of detecting</font>

52
00:01:48,869 --> 00:01:55,649
<font color="#E5E5E5">office gated PowerShell so like at a</font>

53
00:01:53,729 --> 00:01:57,030
very high<font color="#E5E5E5"> level when</font><font color="#CCCCCC"> it comes to</font>

54
00:01:55,649 --> 00:01:59,189
actually investigating attacks or

55
00:01:57,030 --> 00:02:00,270
PowerShell is used which PowerShell is

56
00:01:59,189 --> 00:02:01,829
<font color="#E5E5E5">used in almost every</font><font color="#CCCCCC"> single</font>

57
00:02:00,270 --> 00:02:03,539
<font color="#E5E5E5">investigation I've ever been a part</font><font color="#CCCCCC"> of</font>

58
00:02:01,829 --> 00:02:05,939
<font color="#E5E5E5">because it's native on Windows 7</font><font color="#CCCCCC"> and</font>

59
00:02:03,540 --> 00:02:07,619
later attackers<font color="#CCCCCC"> love it copy and paste</font>

60
00:02:05,939 --> 00:02:09,739
<font color="#CCCCCC">it's easy there's tons of PowerShell</font>

61
00:02:07,619 --> 00:02:11,819
from offensive<font color="#E5E5E5"> PowerShell frameworks out</font>

62
00:02:09,739 --> 00:02:13,740
<font color="#CCCCCC">there and so attackers are using it a</font>

63
00:02:11,819 --> 00:02:15,420
lot<font color="#CCCCCC"> also to be noted there's a ton</font>

64
00:02:13,740 --> 00:02:17,190
of<font color="#CCCCCC"> Blue Team</font><font color="#E5E5E5"> PowerShell frameworks out</font>

65
00:02:15,420 --> 00:02:18,570
<font color="#CCCCCC">there that</font><font color="#E5E5E5"> defenders are starting to</font>

66
00:02:17,190 --> 00:02:19,859
pick up<font color="#E5E5E5"> on so a lot</font><font color="#CCCCCC"> of really</font><font color="#E5E5E5"> good</font>

67
00:02:18,570 --> 00:02:21,150
things<font color="#E5E5E5"> on both sides of the fence</font>

68
00:02:19,860 --> 00:02:22,800
<font color="#E5E5E5">but when it comes to actually</font>

69
00:02:21,150 --> 00:02:24,570
investigating attacks<font color="#E5E5E5"> where PowerShell</font>

70
00:02:22,800 --> 00:02:25,980
is<font color="#CCCCCC"> leveraged</font><font color="#E5E5E5"> at the very least you want</font>

71
00:02:24,570 --> 00:02:27,390
at least<font color="#E5E5E5"> command-line argument</font>

72
00:02:25,980 --> 00:02:29,369
information so you can<font color="#CCCCCC"> get that from</font>

73
00:02:27,390 --> 00:02:32,519
<font color="#E5E5E5">your security log</font><font color="#CCCCCC"> forty six eighty eight</font>

74
00:02:29,370 --> 00:02:33,990
<font color="#E5E5E5">or system on Eid one</font><font color="#CCCCCC"> the the</font><font color="#E5E5E5"> really</font>

75
00:02:32,520 --> 00:02:36,150
juicy<font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> you want those at the bottom</font>

76
00:02:33,990 --> 00:02:38,880
which<font color="#CCCCCC"> is power shells specific logging</font>

77
00:02:36,150 --> 00:02:41,010
particularly PowerShell<font color="#E5E5E5"> five and this</font><font color="#CCCCCC"> is</font>

78
00:02:38,880 --> 00:02:42,480
<font color="#CCCCCC">a blog post</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> a Microsoft</font><font color="#E5E5E5"> and one at</font>

79
00:02:41,010 --> 00:02:44,730
the<font color="#E5E5E5"> bottom</font><font color="#CCCCCC"> for one of my colleagues at</font>

80
00:02:42,480 --> 00:02:46,109
fire I basically looking at<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font>

81
00:02:44,730 --> 00:02:48,030
<font color="#CCCCCC">where</font><font color="#E5E5E5"> the benefits you actually get with</font>

82
00:02:46,110 --> 00:02:49,230
PowerShell five and how<font color="#CCCCCC"> does it actually</font>

83
00:02:48,030 --> 00:02:52,520
<font color="#E5E5E5">stack up against this kind of</font>

84
00:02:49,230 --> 00:02:52,519
obfuscation that we'll be talking about

85
00:02:52,610 --> 00:02:58,290
so how<font color="#E5E5E5"> am</font><font color="#CCCCCC"> I an attacker break our</font>

86
00:02:56,280 --> 00:02:59,940
assumptions<font color="#E5E5E5"> when it comes to</font><font color="#CCCCCC"> detecting</font>

87
00:02:58,290 --> 00:03:01,290
PowerShell<font color="#E5E5E5"> well let's say</font><font color="#CCCCCC"> that we're</font>

88
00:02:59,940 --> 00:03:02,940
<font color="#CCCCCC">going this route</font><font color="#E5E5E5"> of looking at</font>

89
00:03:01,290 --> 00:03:04,230
PowerShell<font color="#CCCCCC"> Dec see when it runs I'm</font>

90
00:03:02,940 --> 00:03:06,840
looking at its arguments and looking for

91
00:03:04,230 --> 00:03:08,190
malicious things now obviously<font color="#E5E5E5"> echoing</font>

92
00:03:06,840 --> 00:03:09,600
out the word<font color="#CCCCCC"> success is not</font><font color="#E5E5E5"> malicious</font>

93
00:03:08,190 --> 00:03:10,980
<font color="#E5E5E5">but</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> kind of showing in a really</font>

94
00:03:09,600 --> 00:03:13,140
small example how you<font color="#E5E5E5"> can get code to</font>

95
00:03:10,980 --> 00:03:14,640
execute<font color="#CCCCCC"> and maybe undermine some</font><font color="#E5E5E5"> of our</font>

96
00:03:13,140 --> 00:03:16,950
<font color="#CCCCCC">assumptions about</font><font color="#E5E5E5"> it appearing in</font>

97
00:03:14,640 --> 00:03:18,209
argument logs so in this case typically

98
00:03:16,950 --> 00:03:19,769
will see command or<font color="#E5E5E5"> something else</font>

99
00:03:18,210 --> 00:03:21,630
launching PowerShell and<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have your</font>

100
00:03:19,770 --> 00:03:24,480
command that follows<font color="#E5E5E5"> you see it runs</font>

101
00:03:21,630 --> 00:03:26,160
perfectly fine here<font color="#CCCCCC"> however you don't</font>

102
00:03:24,480 --> 00:03:28,019
<font color="#CCCCCC">have</font><font color="#E5E5E5"> to actually specify the PowerShell</font>

103
00:03:26,160 --> 00:03:29,010
command<font color="#CCCCCC"> in its arguments if you just</font>

104
00:03:28,020 --> 00:03:30,860
<font color="#E5E5E5">look at Power Cells help you can</font>

105
00:03:29,010 --> 00:03:32,910
<font color="#E5E5E5">actually push stuff in a standard input</font>

106
00:03:30,860 --> 00:03:34,530
so you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> do something like</font><font color="#E5E5E5"> this and</font>

107
00:03:32,910 --> 00:03:37,079
<font color="#CCCCCC">have command echo your command your</font>

108
00:03:34,530 --> 00:03:39,060
PowerShell<font color="#CCCCCC"> right host</font><font color="#E5E5E5"> and then pipe it</font>

109
00:03:37,080 --> 00:03:41,370
into PowerShell<font color="#E5E5E5"> - or PowerShell</font><font color="#CCCCCC"> ie X</font>

110
00:03:39,060 --> 00:03:44,340
input<font color="#E5E5E5"> and PowerShell runs it just fine</font>

111
00:03:41,370 --> 00:03:45,960
now why might<font color="#CCCCCC"> this matter well you can</font>

112
00:03:44,340 --> 00:03:49,110
see<font color="#CCCCCC"> the</font><font color="#E5E5E5"> top</font><font color="#CCCCCC"> power sells arguments only</font>

113
00:03:45,960 --> 00:03:50,730
<font color="#E5E5E5">contain that - or that ie X input but</font>

114
00:03:49,110 --> 00:03:52,500
the<font color="#E5E5E5"> actual command itself if</font><font color="#CCCCCC"> we're</font>

115
00:03:50,730 --> 00:03:54,899
looking<font color="#CCCCCC"> for right host success</font><font color="#E5E5E5"> for</font>

116
00:03:52,500 --> 00:03:57,060
<font color="#E5E5E5">ground green then that's actually in the</font>

117
00:03:54,900 --> 00:03:58,680
<font color="#E5E5E5">parent process</font><font color="#CCCCCC"> so we've just shifted</font>

118
00:03:57,060 --> 00:03:59,940
arguments into the parent process<font color="#E5E5E5"> so as</font>

119
00:03:58,680 --> 00:04:01,890
a defender if all your<font color="#CCCCCC"> rules are</font><font color="#E5E5E5"> based</font>

120
00:03:59,940 --> 00:04:05,100
on<font color="#CCCCCC"> Power Cells arguments then this might</font>

121
00:04:01,890 --> 00:04:07,079
<font color="#E5E5E5">get by you</font><font color="#CCCCCC"> so maybe we start to look</font><font color="#E5E5E5"> for</font>

122
00:04:05,100 --> 00:04:08,850
any processes that have pipe<font color="#E5E5E5"> followed by</font>

123
00:04:07,080 --> 00:04:10,170
PowerShell well the problem<font color="#CCCCCC"> there is</font>

124
00:04:08,850 --> 00:04:11,100
<font color="#CCCCCC">that</font><font color="#E5E5E5"> depending</font><font color="#CCCCCC"> on whatever process</font>

125
00:04:10,170 --> 00:04:13,019
you're<font color="#CCCCCC"> launching it from</font><font color="#E5E5E5"> you can</font>

126
00:04:11,100 --> 00:04:14,190
obfuscate in that<font color="#E5E5E5"> process as language</font>

127
00:04:13,020 --> 00:04:16,350
and<font color="#CCCCCC"> kind of started stacking</font><font color="#E5E5E5"> different</font>

128
00:04:14,190 --> 00:04:17,790
languages of<font color="#E5E5E5"> obfuscation</font><font color="#CCCCCC"> so the example</font>

129
00:04:16,350 --> 00:04:20,100
at the<font color="#E5E5E5"> bottom I'm basically chopping up</font>

130
00:04:17,790 --> 00:04:21,930
power and<font color="#E5E5E5"> shell and the</font><font color="#CCCCCC"> two command</font>

131
00:04:20,100 --> 00:04:23,700
variables which are<font color="#E5E5E5"> a</font><font color="#CCCCCC"> process level</font>

132
00:04:21,930 --> 00:04:25,980
<font color="#E5E5E5">environment variables and then echoing</font>

133
00:04:23,700 --> 00:04:27,360
it into<font color="#CCCCCC"> p1 and</font><font color="#E5E5E5"> p2 such that you can see</font>

134
00:04:25,980 --> 00:04:30,330
the parent process<font color="#E5E5E5"> has</font>

135
00:04:27,360 --> 00:04:32,370
pipe<font color="#CCCCCC"> p1p2 and</font><font color="#E5E5E5"> not pipe powershell so</font>

136
00:04:30,330 --> 00:04:34,280
that rule wouldn't<font color="#E5E5E5"> really work if we're</font>

137
00:04:32,370 --> 00:04:36,659
looking<font color="#CCCCCC"> for piping than</font><font color="#E5E5E5"> powershell and</font>

138
00:04:34,280 --> 00:04:38,099
<font color="#CCCCCC">we actually see attackers is doing this</font>

139
00:04:36,659 --> 00:04:41,159
in the<font color="#E5E5E5"> wild this</font><font color="#CCCCCC"> is from mid-february</font>

140
00:04:38,099 --> 00:04:43,080
<font color="#E5E5E5">this</font><font color="#CCCCCC"> year</font><font color="#E5E5E5"> this is from financial threat</font>

141
00:04:41,159 --> 00:04:44,520
actor known as fin<font color="#CCCCCC"> eight where they're</font>

142
00:04:43,080 --> 00:04:45,840
<font color="#E5E5E5">basically at the very bottom you can</font><font color="#CCCCCC"> see</font>

143
00:04:44,520 --> 00:04:47,159
they had this<font color="#CCCCCC"> PowerShell command they</font>

144
00:04:45,840 --> 00:04:49,169
were putting<font color="#E5E5E5"> in one environment variable</font>

145
00:04:47,159 --> 00:04:51,719
called Microsoft<font color="#E5E5E5"> Update</font><font color="#CCCCCC"> Catalog the</font>

146
00:04:49,169 --> 00:04:53,659
second environment variable shell - and

147
00:04:51,719 --> 00:04:55,919
then they were<font color="#E5E5E5"> echoing var1 and devar -</font>

148
00:04:53,659 --> 00:04:57,389
which looks<font color="#E5E5E5"> really really</font><font color="#CCCCCC"> familiar</font><font color="#E5E5E5"> to</font>

149
00:04:55,919 --> 00:04:58,590
what<font color="#E5E5E5"> we were just talking</font><font color="#CCCCCC"> about and they</font>

150
00:04:57,389 --> 00:05:00,810
<font color="#E5E5E5">were launching all this from a</font><font color="#CCCCCC"> windward</font>

151
00:04:58,590 --> 00:05:02,039
<font color="#E5E5E5">are from from a word macro so you</font>

152
00:05:00,810 --> 00:05:03,240
actually<font color="#E5E5E5"> didn't see a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> on the</font>

153
00:05:02,039 --> 00:05:06,120
command<font color="#E5E5E5"> lines which was really really</font>

154
00:05:03,240 --> 00:05:09,030
interesting another way that<font color="#E5E5E5"> we can</font>

155
00:05:06,120 --> 00:05:10,500
basically<font color="#E5E5E5"> kind of move pieces of</font>

156
00:05:09,030 --> 00:05:11,849
<font color="#CCCCCC">information around</font><font color="#E5E5E5"> and keep it off the</font>

157
00:05:10,500 --> 00:05:13,139
command lines is through just

158
00:05:11,849 --> 00:05:14,819
straight-up process level<font color="#CCCCCC"> environment</font>

159
00:05:13,139 --> 00:05:16,349
variables<font color="#CCCCCC"> cope doors are</font><font color="#E5E5E5"> really popular</font>

160
00:05:14,819 --> 00:05:17,879
<font color="#E5E5E5">piece of</font><font color="#CCCCCC"> malware that</font><font color="#E5E5E5"> does this</font>

161
00:05:16,349 --> 00:05:20,099
<font color="#E5E5E5">typically</font><font color="#CCCCCC"> launched</font><font color="#E5E5E5"> from office gated</font>

162
00:05:17,879 --> 00:05:21,360
<font color="#E5E5E5">MSHDA and run keys and stuff like that</font>

163
00:05:20,099 --> 00:05:24,270
but<font color="#CCCCCC"> basically you'll see</font><font color="#E5E5E5"> PowerShell</font>

164
00:05:21,360 --> 00:05:25,979
invoking with<font color="#CCCCCC"> IE X the environment</font>

165
00:05:24,270 --> 00:05:27,810
<font color="#E5E5E5">variables some you know random name var</font>

166
00:05:25,979 --> 00:05:29,849
environment variable<font color="#E5E5E5"> now typically</font><font color="#CCCCCC"> we'll</font>

167
00:05:27,810 --> 00:05:31,379
see<font color="#E5E5E5"> dollar sign</font><font color="#CCCCCC"> EMV colon</font><font color="#E5E5E5"> to reference</font>

168
00:05:29,849 --> 00:05:33,419
<font color="#CCCCCC">environment variables but</font><font color="#E5E5E5"> there's tons</font>

169
00:05:31,379 --> 00:05:35,129
of ways that the bottom is<font color="#CCCCCC"> just some</font><font color="#E5E5E5"> of</font>

170
00:05:33,419 --> 00:05:36,479
the some of<font color="#E5E5E5"> the few ways</font><font color="#CCCCCC"> that are</font><font color="#E5E5E5"> really</font>

171
00:05:35,129 --> 00:05:40,129
<font color="#E5E5E5">uncommon but that you can actually</font>

172
00:05:36,479 --> 00:05:41,940
extract<font color="#E5E5E5"> environment variable values out</font>

173
00:05:40,129 --> 00:05:43,560
another way<font color="#CCCCCC"> that we could do this is we</font>

174
00:05:41,940 --> 00:05:44,909
<font color="#E5E5E5">could basically pipe our arguments into</font>

175
00:05:43,560 --> 00:05:49,229
clip and then just pull them<font color="#E5E5E5"> off</font><font color="#CCCCCC"> the</font>

176
00:05:44,909 --> 00:05:50,699
clipboard<font color="#E5E5E5"> so maybe we're thinking why</font>

177
00:05:49,229 --> 00:05:52,289
<font color="#E5E5E5">don't we just look for these</font><font color="#CCCCCC"> arguments</font>

178
00:05:50,699 --> 00:05:58,009
in PowerShell<font color="#CCCCCC"> about XE</font><font color="#E5E5E5"> than in its</font>

179
00:05:52,289 --> 00:06:01,289
<font color="#E5E5E5">parent</font><font color="#CCCCCC"> process so the problem there is</font>

180
00:05:58,009 --> 00:06:02,610
what if we introduced a<font color="#CCCCCC"> third process in</font>

181
00:06:01,289 --> 00:06:04,589
the mix so instead of command spawning

182
00:06:02,610 --> 00:06:07,500
<font color="#E5E5E5">PowerShell what if we said command</font>

183
00:06:04,589 --> 00:06:08,849
setting the the arguments<font color="#CCCCCC"> into</font>

184
00:06:07,500 --> 00:06:10,020
environment variables<font color="#E5E5E5"> and then a second</font>

185
00:06:08,849 --> 00:06:11,669
command echoing does environment

186
00:06:10,020 --> 00:06:13,500
variables into<font color="#E5E5E5"> PowerShell and then power</font>

187
00:06:11,669 --> 00:06:15,690
shell launches it well so technically

188
00:06:13,500 --> 00:06:17,190
this works<font color="#E5E5E5"> but we don't get any</font><font color="#CCCCCC"> we don't</font>

189
00:06:15,690 --> 00:06:19,680
<font color="#CCCCCC">get any benefit</font><font color="#E5E5E5"> out of this because as</font>

190
00:06:17,190 --> 00:06:22,050
we<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see we still see the full command</font>

191
00:06:19,680 --> 00:06:24,659
in the parent process<font color="#E5E5E5"> however if we take</font>

192
00:06:22,050 --> 00:06:26,279
<font color="#E5E5E5">notice of this pipe if we</font><font color="#CCCCCC"> escape</font><font color="#E5E5E5"> it one</font>

193
00:06:24,659 --> 00:06:28,050
layer<font color="#E5E5E5"> and</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is this isn't PowerShell</font>

194
00:06:26,279 --> 00:06:29,400
we're doing command level<font color="#E5E5E5"> escaping so</font>

195
00:06:28,050 --> 00:06:31,319
<font color="#CCCCCC">when I escaped it for the first command</font>

196
00:06:29,400 --> 00:06:33,299
but<font color="#E5E5E5"> not for the second one and if we do</font>

197
00:06:31,319 --> 00:06:35,430
<font color="#CCCCCC">that then we're golden</font>

198
00:06:33,300 --> 00:06:36,779
PowerShell runs with nothing<font color="#E5E5E5"> and it's</font>

199
00:06:35,430 --> 00:06:39,160
arguments<font color="#CCCCCC"> about what happened</font><font color="#E5E5E5"> and the</font>

200
00:06:36,779 --> 00:06:40,840
parent process<font color="#E5E5E5"> only has the name of the</font>

201
00:06:39,160 --> 00:06:42,760
process level<font color="#E5E5E5"> environment variable and</font>

202
00:06:40,840 --> 00:06:43,719
<font color="#E5E5E5">not the contents itself</font><font color="#CCCCCC"> so we'd actually</font>

203
00:06:42,760 --> 00:06:45,460
<font color="#E5E5E5">have</font><font color="#CCCCCC"> to go all the way up to the</font>

204
00:06:43,720 --> 00:06:47,080
grandparent process to get this<font color="#E5E5E5"> and</font><font color="#CCCCCC"> this</font>

205
00:06:45,460 --> 00:06:48,070
is kind of a tree structure<font color="#CCCCCC"> they're a</font>

206
00:06:47,080 --> 00:06:49,780
<font color="#E5E5E5">little outline of what this looks like</font>

207
00:06:48,070 --> 00:06:51,880
<font color="#CCCCCC">so maybe we can say okay well why</font><font color="#E5E5E5"> don't</font>

208
00:06:49,780 --> 00:06:53,799
we<font color="#E5E5E5"> just take any process that</font><font color="#CCCCCC"> any</font>

209
00:06:51,880 --> 00:06:55,630
<font color="#CCCCCC">powershell</font><font color="#E5E5E5"> process and recursively go up</font>

210
00:06:53,800 --> 00:06:57,100
the stack<font color="#CCCCCC"> all the way to see all the</font>

211
00:06:55,630 --> 00:06:58,900
arguments<font color="#E5E5E5"> to see if any of them contain</font>

212
00:06:57,100 --> 00:07:00,040
these malicious arguments<font color="#E5E5E5"> well the only</font>

213
00:06:58,900 --> 00:07:01,359
problem<font color="#CCCCCC"> there is that there's</font><font color="#E5E5E5"> tons of</font>

214
00:07:00,040 --> 00:07:03,160
ways<font color="#E5E5E5"> where you can pass information back</font>

215
00:07:01,360 --> 00:07:05,200
and forth<font color="#E5E5E5"> with no actual relationship</font>

216
00:07:03,160 --> 00:07:07,240
between the processes<font color="#CCCCCC"> themselves or no</font>

217
00:07:05,200 --> 00:07:08,760
recursive relationship up<font color="#E5E5E5"> and this is</font>

218
00:07:07,240 --> 00:07:11,770
one<font color="#E5E5E5"> example of basically spawning</font>

219
00:07:08,760 --> 00:07:13,330
<font color="#CCCCCC">command where pieces</font><font color="#E5E5E5"> of code are stored</font>

220
00:07:11,770 --> 00:07:15,010
in the title of each command window<font color="#CCCCCC"> and</font>

221
00:07:13,330 --> 00:07:16,240
then<font color="#CCCCCC"> WMI is used to query them out and</font>

222
00:07:15,010 --> 00:07:19,570
reassemble<font color="#CCCCCC"> them back together and</font><font color="#E5E5E5"> then</font>

223
00:07:16,240 --> 00:07:20,560
invoke them clipboard<font color="#CCCCCC"> is another</font><font color="#E5E5E5"> example</font>

224
00:07:19,570 --> 00:07:21,730
you could use<font color="#E5E5E5"> user level environment</font>

225
00:07:20,560 --> 00:07:23,440
<font color="#E5E5E5">variables you could pass information</font>

226
00:07:21,730 --> 00:07:24,520
back through a file or registry there's

227
00:07:23,440 --> 00:07:26,590
tons of<font color="#E5E5E5"> ways you can pass</font><font color="#CCCCCC"> information</font>

228
00:07:24,520 --> 00:07:28,560
<font color="#E5E5E5">back and forth such that it won't show</font>

229
00:07:26,590 --> 00:07:31,599
<font color="#CCCCCC">up</font><font color="#E5E5E5"> on the command line</font><font color="#CCCCCC"> as you'd expect</font>

230
00:07:28,560 --> 00:07:33,970
so the good<font color="#CCCCCC"> news in</font><font color="#E5E5E5"> all of this is that</font>

231
00:07:31,600 --> 00:07:36,010
<font color="#CCCCCC">PowerShell script block logging catches</font>

232
00:07:33,970 --> 00:07:37,540
all this no matter<font color="#E5E5E5"> how it's run no</font>

233
00:07:36,010 --> 00:07:40,120
matter<font color="#E5E5E5"> how it's passed in</font><font color="#CCCCCC"> PowerShell 5</font>

234
00:07:37,540 --> 00:07:43,120
is just insanely awesome<font color="#E5E5E5"> in terms of the</font>

235
00:07:40,120 --> 00:07:44,080
<font color="#CCCCCC">preventative and detective</font><font color="#E5E5E5"> security</font>

236
00:07:43,120 --> 00:07:45,700
controls that<font color="#E5E5E5"> are in place for a</font>

237
00:07:44,080 --> 00:07:47,260
scripting language<font color="#E5E5E5"> it's is stupid</font>

238
00:07:45,700 --> 00:07:48,610
awesome<font color="#CCCCCC"> the bad news is is</font><font color="#E5E5E5"> that there's</font>

239
00:07:47,260 --> 00:07:49,900
token layer<font color="#E5E5E5"> off the</font><font color="#CCCCCC"> station that</font>

240
00:07:48,610 --> 00:07:51,640
persists<font color="#CCCCCC"> even in of</font><font color="#E5E5E5"> these script block</font>

241
00:07:49,900 --> 00:07:53,799
logs<font color="#E5E5E5"> and that's one</font><font color="#CCCCCC"> notice as we go this</font>

242
00:07:51,640 --> 00:07:55,510
<font color="#CCCCCC">PowerShell shield</font><font color="#E5E5E5"> in the top right each</font>

243
00:07:53,800 --> 00:07:56,950
office<font color="#CCCCCC"> keishon techniques we talk about</font>

244
00:07:55,510 --> 00:07:58,780
<font color="#E5E5E5">when that shield shows up that's saying</font>

245
00:07:56,950 --> 00:07:59,710
hey<font color="#E5E5E5"> no matter what else may have missed</font>

246
00:07:58,780 --> 00:08:01,630
it this is going to show up in

247
00:07:59,710 --> 00:08:02,739
PowerShell logs<font color="#CCCCCC"> now it may look</font><font color="#E5E5E5"> slightly</font>

248
00:08:01,630 --> 00:08:04,659
differently than you'd think and I'll

249
00:08:02,740 --> 00:08:06,850
try to basically<font color="#E5E5E5"> touch on those</font><font color="#CCCCCC"> cases</font>

250
00:08:04,660 --> 00:08:09,010
but it's really<font color="#E5E5E5"> really awesome to have</font>

251
00:08:06,850 --> 00:08:10,780
<font color="#E5E5E5">that kind of data</font><font color="#CCCCCC"> available so let's</font>

252
00:08:09,010 --> 00:08:12,130
look at an example<font color="#E5E5E5"> of office gating a</font>

253
00:08:10,780 --> 00:08:13,900
<font color="#E5E5E5">PowerShell command in some really crazy</font>

254
00:08:12,130 --> 00:08:15,490
ways<font color="#E5E5E5"> so we're gonna start with the</font>

255
00:08:13,900 --> 00:08:17,169
cradle or the remote download cradle

256
00:08:15,490 --> 00:08:19,150
which is basically this one-liner

257
00:08:17,169 --> 00:08:21,299
command which<font color="#CCCCCC"> is in memory execution of</font>

258
00:08:19,150 --> 00:08:23,140
some remotely hosted<font color="#E5E5E5"> PowerShell script</font>

259
00:08:21,300 --> 00:08:24,730
<font color="#CCCCCC">attackers use</font><font color="#E5E5E5"> this all the time because</font>

260
00:08:23,140 --> 00:08:26,289
frameworks use this all the<font color="#E5E5E5"> time and we</font>

261
00:08:24,730 --> 00:08:27,550
all like<font color="#CCCCCC"> to use frameworks</font><font color="#E5E5E5"> and copy and</font>

262
00:08:26,290 --> 00:08:29,980
paste code from<font color="#E5E5E5"> one another so</font><font color="#CCCCCC"> veil</font>

263
00:08:27,550 --> 00:08:31,450
<font color="#CCCCCC">power sploit Metasploit you name it we</font>

264
00:08:29,980 --> 00:08:33,610
see<font color="#CCCCCC"> this all the</font><font color="#E5E5E5"> time</font>

265
00:08:31,450 --> 00:08:35,020
<font color="#E5E5E5">so let's kind</font><font color="#CCCCCC"> of plate red team blue</font>

266
00:08:33,610 --> 00:08:37,539
<font color="#CCCCCC">team which is kind of how</font><font color="#E5E5E5"> I define my</font>

267
00:08:35,020 --> 00:08:39,039
<font color="#CCCCCC">life basically basically breaking my</font>

268
00:08:37,539 --> 00:08:40,419
assumptions as a defender and<font color="#CCCCCC"> then how</font>

269
00:08:39,039 --> 00:08:41,799
<font color="#E5E5E5">can I bolster those</font><font color="#CCCCCC"> assumptions so at</font>

270
00:08:40,419 --> 00:08:43,240
the top<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have an attacker command</font>

271
00:08:41,799 --> 00:08:44,620
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> this remote download cradle</font>

272
00:08:43,240 --> 00:08:47,500
with this bitly link which is totally

273
00:08:44,620 --> 00:08:48,850
legit<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> let's say as a defender</font>

274
00:08:47,500 --> 00:08:51,130
if we want<font color="#E5E5E5"> to catch this on the command</font>

275
00:08:48,850 --> 00:08:52,540
<font color="#CCCCCC">line how could we do that well we can</font>

276
00:08:51,130 --> 00:08:52,750
<font color="#E5E5E5">start to build out a list of terms of</font>

277
00:08:52,540 --> 00:08:54,939
<font color="#E5E5E5">the</font>

278
00:08:52,750 --> 00:08:57,220
<font color="#E5E5E5">where if we see invoke expression new</font>

279
00:08:54,939 --> 00:08:59,019
object system<font color="#CCCCCC"> net-net</font><font color="#E5E5E5"> web client and</font>

280
00:08:57,220 --> 00:09:01,899
then download string HTTP this would

281
00:08:59,019 --> 00:09:04,000
catch this exact command<font color="#CCCCCC"> so now let's go</font>

282
00:09:01,899 --> 00:09:05,560
<font color="#CCCCCC">through and see</font><font color="#E5E5E5"> how we can obfuscate the</font>

283
00:09:04,000 --> 00:09:07,870
command at the top and adjust our

284
00:09:05,560 --> 00:09:09,638
defender<font color="#E5E5E5"> terms at the bottom to kind of</font>

285
00:09:07,870 --> 00:09:12,399
you know<font color="#E5E5E5"> stay head to head with</font><font color="#CCCCCC"> all the</font>

286
00:09:09,639 --> 00:09:14,019
attackers doing so first of all system

287
00:09:12,399 --> 00:09:15,850
dot is not<font color="#CCCCCC"> necessary almost anywhere you</font>

288
00:09:14,019 --> 00:09:17,139
see it in<font color="#E5E5E5"> PowerShell PowerShell is gonna</font>

289
00:09:15,850 --> 00:09:19,089
automatically pre pin that underneath

290
00:09:17,139 --> 00:09:20,980
the hood<font color="#CCCCCC"> so an attacker</font><font color="#E5E5E5"> doesn't have to</font>

291
00:09:19,089 --> 00:09:22,389
put system dot so if an attacker<font color="#E5E5E5"> doesn't</font>

292
00:09:20,980 --> 00:09:23,620
absolutely<font color="#E5E5E5"> have to</font><font color="#CCCCCC"> have this</font><font color="#E5E5E5"> in their</font>

293
00:09:22,389 --> 00:09:25,180
command<font color="#E5E5E5"> then I don't want to</font><font color="#CCCCCC"> make that</font>

294
00:09:23,620 --> 00:09:28,720
assumption as a defender<font color="#CCCCCC"> so I'm</font><font color="#E5E5E5"> gonna</font>

295
00:09:25,180 --> 00:09:30,430
pull it out<font color="#CCCCCC"> of both the URL in</font><font color="#E5E5E5"> this case</font>

296
00:09:28,720 --> 00:09:31,899
is<font color="#CCCCCC"> just a string</font><font color="#E5E5E5"> and it's a string token</font>

297
00:09:30,430 --> 00:09:34,779
we can do things like concatenate it<font color="#E5E5E5"> in</font>

298
00:09:31,899 --> 00:09:36,310
line<font color="#CCCCCC"> we're also not really</font><font color="#E5E5E5"> limited to</font>

299
00:09:34,779 --> 00:09:38,050
double quotes we can use<font color="#E5E5E5"> single</font><font color="#CCCCCC"> quotes</font>

300
00:09:36,310 --> 00:09:40,180
whitespace push it around stuff like

301
00:09:38,050 --> 00:09:41,500
that we can also set<font color="#CCCCCC"> it as a variable so</font>

302
00:09:40,180 --> 00:09:43,779
let's<font color="#CCCCCC"> go ahead</font><font color="#E5E5E5"> and move that HTTP from</font>

303
00:09:41,500 --> 00:09:46,110
the download string portion download

304
00:09:43,779 --> 00:09:48,250
string<font color="#E5E5E5"> now this is the most common</font>

305
00:09:46,110 --> 00:09:51,009
method that we see so download string

306
00:09:48,250 --> 00:09:52,149
<font color="#E5E5E5">lets it take a step back new object net</font>

307
00:09:51,009 --> 00:09:54,189
that web client is creating a dotnet

308
00:09:52,149 --> 00:09:55,810
<font color="#E5E5E5">class for the</font><font color="#CCCCCC"> net-net</font><font color="#E5E5E5"> web client class</font>

309
00:09:54,189 --> 00:09:57,579
which has<font color="#E5E5E5"> many methods download string</font>

310
00:09:55,810 --> 00:09:59,410
is<font color="#CCCCCC"> just one of them</font><font color="#E5E5E5"> but there's quite</font><font color="#CCCCCC"> a</font>

311
00:09:57,579 --> 00:10:00,519
few<font color="#CCCCCC"> downloads string download file and</font>

312
00:09:59,410 --> 00:10:02,769
download<font color="#E5E5E5"> data are some of the most</font>

313
00:10:00,519 --> 00:10:04,629
common ones that<font color="#E5E5E5"> we see download file</font>

314
00:10:02,769 --> 00:10:06,610
will hit disk so it's more<font color="#E5E5E5"> of using</font>

315
00:10:04,629 --> 00:10:08,079
commodity but download string and

316
00:10:06,610 --> 00:10:09,699
download data<font color="#E5E5E5"> data will be a byte array</font>

317
00:10:08,079 --> 00:10:10,809
<font color="#CCCCCC">as opposed to an</font><font color="#E5E5E5"> expression itself but</font>

318
00:10:09,699 --> 00:10:12,279
maybe we<font color="#E5E5E5"> can just say okay</font>

319
00:10:10,809 --> 00:10:14,110
why<font color="#E5E5E5"> don't we just say that download and</font>

320
00:10:12,279 --> 00:10:18,189
we'll catch all of these so<font color="#E5E5E5"> let's do</font>

321
00:10:14,110 --> 00:10:20,439
that<font color="#E5E5E5"> so now for this dot download how</font>

322
00:10:18,189 --> 00:10:21,550
might<font color="#E5E5E5"> this little</font><font color="#CCCCCC"> parentheses</font><font color="#E5E5E5"> bite us if</font>

323
00:10:20,439 --> 00:10:23,199
we have this<font color="#E5E5E5"> as</font><font color="#CCCCCC"> part of our detection</font>

324
00:10:21,550 --> 00:10:24,639
<font color="#E5E5E5">well you can actually take a new object</font>

325
00:10:23,199 --> 00:10:26,290
net<font color="#E5E5E5"> that web client and you can set it</font>

326
00:10:24,639 --> 00:10:27,730
<font color="#E5E5E5">in a variable and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> have variable dot</font>

327
00:10:26,290 --> 00:10:29,110
download string typically you'll see

328
00:10:27,730 --> 00:10:30,910
<font color="#E5E5E5">some frameworks you know calling that</font>

329
00:10:29,110 --> 00:10:32,410
variable<font color="#CCCCCC"> WCC</font><font color="#E5E5E5"> have variable name dot</font>

330
00:10:30,910 --> 00:10:34,059
download strength there's no<font color="#CCCCCC"> parenthesis</font>

331
00:10:32,410 --> 00:10:37,149
<font color="#E5E5E5">so let's go</font><font color="#CCCCCC"> ahead and remove that from</font>

332
00:10:34,059 --> 00:10:39,939
<font color="#CCCCCC">the arguments at the bottom</font><font color="#E5E5E5"> now that dot</font>

333
00:10:37,149 --> 00:10:41,290
how could what could<font color="#E5E5E5"> an attacker do to</font>

334
00:10:39,939 --> 00:10:43,870
make this dot really problematic<font color="#E5E5E5"> for</font><font color="#CCCCCC"> us</font>

335
00:10:41,290 --> 00:10:45,839
<font color="#E5E5E5">as a defenders</font><font color="#CCCCCC"> well they could put</font>

336
00:10:43,870 --> 00:10:48,759
single<font color="#CCCCCC"> quotes around download string</font>

337
00:10:45,839 --> 00:10:49,990
<font color="#E5E5E5">doesn't</font><font color="#CCCCCC"> make it a string</font><font color="#E5E5E5"> but it it still</font>

338
00:10:48,759 --> 00:10:52,059
breaks that dot but<font color="#CCCCCC"> then we can put</font>

339
00:10:49,990 --> 00:10:53,470
double<font color="#CCCCCC"> quotes around it</font><font color="#E5E5E5"> and what I found</font>

340
00:10:52,059 --> 00:10:54,759
is<font color="#CCCCCC"> that if you have double quotes if you</font>

341
00:10:53,470 --> 00:10:57,160
look at download string you can<font color="#CCCCCC"> actually</font>

342
00:10:54,759 --> 00:10:59,620
do is then put a tick mark in download

343
00:10:57,160 --> 00:11:00,969
string and it still runs<font color="#E5E5E5"> crazy right now</font>

344
00:10:59,620 --> 00:11:02,620
<font color="#E5E5E5">why does this work well the tick mark is</font>

345
00:11:00,970 --> 00:11:04,870
the<font color="#E5E5E5"> escape</font><font color="#CCCCCC"> character for powershell</font>

346
00:11:02,620 --> 00:11:06,339
<font color="#E5E5E5">and it has meaning behind these</font>

347
00:11:04,870 --> 00:11:07,930
escapable characters

348
00:11:06,339 --> 00:11:09,249
<font color="#E5E5E5">you're from</font><font color="#CCCCCC"> know you know beef or</font>

349
00:11:07,930 --> 00:11:10,599
<font color="#CCCCCC">backspace'</font><font color="#E5E5E5"> new line all this kind</font><font color="#CCCCCC"> of</font>

350
00:11:09,249 --> 00:11:12,519
<font color="#E5E5E5">stuff but if you escape something that</font>

351
00:11:10,600 --> 00:11:14,379
has no escapable meaning it just runs

352
00:11:12,519 --> 00:11:15,430
<font color="#CCCCCC">and this is not this is not just</font><font color="#E5E5E5"> true of</font>

353
00:11:14,379 --> 00:11:16,689
<font color="#CCCCCC">powershell if you do the same with</font>

354
00:11:15,430 --> 00:11:17,859
command with a carrot if you escape

355
00:11:16,689 --> 00:11:19,389
<font color="#E5E5E5">something that doesn't have any meaning</font>

356
00:11:17,860 --> 00:11:20,649
<font color="#E5E5E5">to be</font><font color="#CCCCCC"> escaped</font><font color="#E5E5E5"> it just doesn't do</font>

357
00:11:19,389 --> 00:11:23,529
<font color="#CCCCCC">anything</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> goes ahead</font><font color="#E5E5E5"> and keeps on</font>

358
00:11:20,649 --> 00:11:24,910
running so you can put a lot of tech

359
00:11:23,529 --> 00:11:26,110
characters and a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> tick marks there</font>

360
00:11:24,910 --> 00:11:27,969
as<font color="#E5E5E5"> long as you stay</font><font color="#CCCCCC"> away from</font><font color="#E5E5E5"> those</font>

361
00:11:26,110 --> 00:11:29,800
special<font color="#CCCCCC"> eight characters that have the</font>

362
00:11:27,970 --> 00:11:31,329
<font color="#CCCCCC">special escapable meaning but if</font><font color="#E5E5E5"> you're</font>

363
00:11:29,800 --> 00:11:32,529
like me you<font color="#CCCCCC"> really want to put tick</font>

364
00:11:31,329 --> 00:11:33,399
marks in front<font color="#CCCCCC"> of those characters so</font>

365
00:11:32,529 --> 00:11:34,990
all you have<font color="#E5E5E5"> to do then it just</font>

366
00:11:33,399 --> 00:11:35,439
<font color="#CCCCCC">uppercase them and then you're good to</font>

367
00:11:34,990 --> 00:11:37,389
<font color="#CCCCCC">go</font>

368
00:11:35,439 --> 00:11:38,559
so<font color="#E5E5E5"> now any method we can put double</font>

369
00:11:37,389 --> 00:11:39,819
quotes<font color="#CCCCCC"> around it put ticks in front of</font>

370
00:11:38,559 --> 00:11:41,439
any character<font color="#CCCCCC"> that we want as long</font><font color="#E5E5E5"> as</font>

371
00:11:39,819 --> 00:11:43,660
<font color="#E5E5E5">it's not a zero because</font><font color="#CCCCCC"> unfortunately</font>

372
00:11:41,439 --> 00:11:45,759
there's no<font color="#E5E5E5"> uppercase to zero so you know</font>

373
00:11:43,660 --> 00:11:47,139
how to lock on that<font color="#E5E5E5"> one but the</font>

374
00:11:45,759 --> 00:11:49,420
<font color="#E5E5E5">problematic thing from an offensive</font>

375
00:11:47,139 --> 00:11:51,339
perspective is<font color="#E5E5E5"> that this persists on</font>

376
00:11:49,420 --> 00:11:53,019
command line arguments as well<font color="#CCCCCC"> as all</font>

377
00:11:51,339 --> 00:11:55,089
the<font color="#CCCCCC"> way</font><font color="#E5E5E5"> into the script lock logs which</font>

378
00:11:53,019 --> 00:11:57,790
is PowerShell<font color="#E5E5E5"> is the latest and</font><font color="#CCCCCC"> greatest</font>

379
00:11:55,089 --> 00:11:59,439
4104<font color="#CCCCCC"> eid really really awesome really</font>

380
00:11:57,790 --> 00:12:00,759
sexy logs<font color="#E5E5E5"> but these tick marks</font><font color="#CCCCCC"> are still</font>

381
00:11:59,439 --> 00:12:02,349
<font color="#CCCCCC">there and</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> you'll take a closer look</font>

382
00:12:00,759 --> 00:12:04,329
you'll see<font color="#E5E5E5"> the concatenation is still</font>

383
00:12:02,350 --> 00:12:05,949
there<font color="#E5E5E5"> so at the end of the day script</font>

384
00:12:04,329 --> 00:12:07,508
lock logging will basically log every

385
00:12:05,949 --> 00:12:09,248
kind<font color="#E5E5E5"> of layer of the onion if you have</font>

386
00:12:07,509 --> 00:12:11,819
this command encrypted<font color="#E5E5E5"> and encoded like</font>

387
00:12:09,249 --> 00:12:14,110
100<font color="#E5E5E5"> times every layer gets its own</font>

388
00:12:11,819 --> 00:12:15,729
script lock logging<font color="#CCCCCC"> even if you're</font>

389
00:12:14,110 --> 00:12:16,720
<font color="#E5E5E5">running something</font><font color="#CCCCCC"> remotely</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> though</font>

390
00:12:15,730 --> 00:12:18,189
you'll never<font color="#E5E5E5"> see that in the command</font>

391
00:12:16,720 --> 00:12:20,319
line<font color="#E5E5E5"> arguments it'll all show up in</font>

392
00:12:18,189 --> 00:12:22,059
PowerShell<font color="#E5E5E5"> script block logging but this</font>

393
00:12:20,319 --> 00:12:24,819
token layer office keishon will still

394
00:12:22,059 --> 00:12:27,730
<font color="#E5E5E5">persist so how do we deal with this as</font>

395
00:12:24,819 --> 00:12:29,319
defenders well we're not done<font color="#CCCCCC"> yet</font><font color="#E5E5E5"> we</font>

396
00:12:27,730 --> 00:12:30,910
could try<font color="#E5E5E5"> to</font><font color="#CCCCCC"> regex</font><font color="#E5E5E5"> all the things right</font>

397
00:12:29,319 --> 00:12:32,889
<font color="#E5E5E5">and basically take into account any tick</font>

398
00:12:30,910 --> 00:12:35,350
marks if we go<font color="#E5E5E5"> that route I would</font>

399
00:12:32,889 --> 00:12:36,970
recommend<font color="#E5E5E5"> also adding open read because</font>

400
00:12:35,350 --> 00:12:38,350
we looked at download string file data

401
00:12:36,970 --> 00:12:40,149
open reads another one<font color="#E5E5E5"> that returns a</font>

402
00:12:38,350 --> 00:12:41,290
byte stream instead<font color="#E5E5E5"> of a byte</font><font color="#CCCCCC"> array and</font>

403
00:12:40,149 --> 00:12:44,709
we've seen attackers use it a couple

404
00:12:41,290 --> 00:12:45,819
<font color="#E5E5E5">times but it's not too common</font><font color="#CCCCCC"> so if you</font>

405
00:12:44,709 --> 00:12:48,069
want<font color="#E5E5E5"> to go that route make sure you have</font>

406
00:12:45,819 --> 00:12:50,498
dot download and open<font color="#E5E5E5"> read but I would</font>

407
00:12:48,069 --> 00:12:52,479
advise against it<font color="#CCCCCC"> because if you put</font>

408
00:12:50,499 --> 00:12:53,620
<font color="#CCCCCC">parentheses around</font><font color="#E5E5E5"> any method then you</font>

409
00:12:52,480 --> 00:12:55,329
<font color="#E5E5E5">can actually treat it as a full-blown</font>

410
00:12:53,620 --> 00:12:57,160
spring so<font color="#E5E5E5"> you know as string so you can</font>

411
00:12:55,329 --> 00:13:00,370
basically concatenate or<font color="#E5E5E5"> reorder it do a</font>

412
00:12:57,160 --> 00:13:01,990
ton of<font color="#E5E5E5"> crazy stuff</font><font color="#CCCCCC"> and in this case</font>

413
00:13:00,370 --> 00:13:03,910
you'll also see there's this dot invoke

414
00:13:01,990 --> 00:13:06,189
after that method that's<font color="#E5E5E5"> only required</font>

415
00:13:03,910 --> 00:13:07,389
in<font color="#CCCCCC"> PowerShell</font><font color="#E5E5E5"> to PowerShell</font><font color="#CCCCCC"> 3 and later</font>

416
00:13:06,189 --> 00:13:08,860
<font color="#E5E5E5">is smart enough where you don't need</font>

417
00:13:07,389 --> 00:13:10,870
that<font color="#E5E5E5"> dot invoke</font><font color="#CCCCCC"> so a lot of the</font>

418
00:13:08,860 --> 00:13:12,339
obfuscation<font color="#E5E5E5"> frameworks that I've worked</font>

419
00:13:10,870 --> 00:13:13,779
<font color="#E5E5E5">on</font><font color="#CCCCCC"> I make</font><font color="#E5E5E5"> sure to include</font><font color="#CCCCCC"> that dot</font>

420
00:13:12,339 --> 00:13:15,819
<font color="#E5E5E5">invoke by default so it works on any</font>

421
00:13:13,779 --> 00:13:16,750
<font color="#E5E5E5">version of PowerShell but as a defender</font>

422
00:13:15,819 --> 00:13:18,199
<font color="#E5E5E5">I want to make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that we're not</font>

423
00:13:16,750 --> 00:13:20,090
focusing on<font color="#E5E5E5"> that dot</font><font color="#CCCCCC"> invivo</font>

424
00:13:18,200 --> 00:13:22,340
<font color="#E5E5E5">for for detection because it's not</font>

425
00:13:20,090 --> 00:13:23,990
necessary in later versions<font color="#E5E5E5"> so let's</font>

426
00:13:22,340 --> 00:13:27,530
just remove download string from our

427
00:13:23,990 --> 00:13:29,120
defensive kind of list<font color="#CCCCCC"> alright net at</font>

428
00:13:27,530 --> 00:13:31,069
<font color="#CCCCCC">webb plant for this</font><font color="#E5E5E5"> we can put double</font>

429
00:13:29,120 --> 00:13:32,510
quotes<font color="#CCCCCC"> and ticks we can put print season</font>

430
00:13:31,070 --> 00:13:34,220
again treat<font color="#E5E5E5"> it like a string concatenate</font>

431
00:13:32,510 --> 00:13:35,660
it<font color="#E5E5E5"> reorder it chunk it up into small</font>

432
00:13:34,220 --> 00:13:37,370
<font color="#CCCCCC">pieces whatever</font><font color="#E5E5E5"> we want so let</font><font color="#CCCCCC"> us go</font><font color="#E5E5E5"> to</font>

433
00:13:35,660 --> 00:13:38,329
the<font color="#E5E5E5"> first option and say yeah let's just</font>

434
00:13:37,370 --> 00:13:39,680
go ahead<font color="#E5E5E5"> and get rid</font><font color="#CCCCCC"> of net dot web</font>

435
00:13:38,330 --> 00:13:42,410
client from defensive perspective and

436
00:13:39,680 --> 00:13:43,729
keep<font color="#E5E5E5"> going now new object so we're left</font>

437
00:13:42,410 --> 00:13:45,050
with the two pieces were left with our

438
00:13:43,730 --> 00:13:46,100
<font color="#E5E5E5">invoke expression and new object and</font>

439
00:13:45,050 --> 00:13:48,319
<font color="#E5E5E5">these are both commandlets</font>

440
00:13:46,100 --> 00:13:49,880
now PowerShell is super super friendly

441
00:13:48,320 --> 00:13:51,650
<font color="#CCCCCC">and inviting</font><font color="#E5E5E5"> to people who have never</font>

442
00:13:49,880 --> 00:13:53,950
written PowerShell before but it has

443
00:13:51,650 --> 00:13:55,850
tons of aliases<font color="#CCCCCC"> which basically means</font>

444
00:13:53,950 --> 00:13:57,410
PowerShell has a commandment called get

445
00:13:55,850 --> 00:13:58,670
child item and if you want to list

446
00:13:57,410 --> 00:14:00,800
<font color="#E5E5E5">everything in a directory you just say</font>

447
00:13:58,670 --> 00:14:02,180
get child item on it but if you have no

448
00:14:00,800 --> 00:14:04,189
<font color="#E5E5E5">clue what PowerShell is then you might</font>

449
00:14:02,180 --> 00:14:05,689
just<font color="#CCCCCC"> type Durer</font><font color="#E5E5E5"> and it will also work</font>

450
00:14:04,190 --> 00:14:06,980
<font color="#E5E5E5">because that's an alias for get child</font>

451
00:14:05,690 --> 00:14:08,570
item if you<font color="#E5E5E5"> come from the</font><font color="#CCCCCC"> linux</font><font color="#E5E5E5"> world</font>

452
00:14:06,980 --> 00:14:09,950
you can<font color="#CCCCCC"> just type LS and</font><font color="#E5E5E5"> that works</font>

453
00:14:08,570 --> 00:14:11,240
because<font color="#E5E5E5"> they have all these aliases that</font>

454
00:14:09,950 --> 00:14:13,280
translate<font color="#CCCCCC"> into the thing you actually</font>

455
00:14:11,240 --> 00:14:14,540
<font color="#CCCCCC">mean and there's shortened forms of that</font>

456
00:14:13,280 --> 00:14:16,610
<font color="#E5E5E5">and so power Shelby's you a lot of</font>

457
00:14:14,540 --> 00:14:18,469
<font color="#CCCCCC">options that's great from usability</font>

458
00:14:16,610 --> 00:14:19,730
perspective but it's terrifying from a

459
00:14:18,470 --> 00:14:21,380
defensive perspective because<font color="#E5E5E5"> now we</font>

460
00:14:19,730 --> 00:14:22,490
have<font color="#E5E5E5"> to find all these different</font><font color="#CCCCCC"> options</font>

461
00:14:21,380 --> 00:14:24,560
<font color="#E5E5E5">and make sure we have coverage</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> all</font>

462
00:14:22,490 --> 00:14:26,000
of them the<font color="#E5E5E5"> good news here is</font><font color="#CCCCCC"> that new</font>

463
00:14:24,560 --> 00:14:28,040
object<font color="#E5E5E5"> doesn't have</font><font color="#CCCCCC"> any of</font><font color="#E5E5E5"> those there's</font>

464
00:14:26,000 --> 00:14:29,720
no there's no alias<font color="#E5E5E5"> systems</font><font color="#CCCCCC"> there's</font>

465
00:14:28,040 --> 00:14:31,310
shortened forms of it so I was really

466
00:14:29,720 --> 00:14:32,330
<font color="#CCCCCC">excited when I came across this</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> Roz</font>

467
00:14:31,310 --> 00:14:34,790
<font color="#E5E5E5">this is gonna be a really solid</font>

468
00:14:32,330 --> 00:14:37,490
detection the only problem is<font color="#CCCCCC"> that</font>

469
00:14:34,790 --> 00:14:39,020
PowerShell is too<font color="#E5E5E5"> helpful sometimes so</font>

470
00:14:37,490 --> 00:14:40,790
there's so many functions<font color="#CCCCCC"> in command</font>

471
00:14:39,020 --> 00:14:42,050
<font color="#E5E5E5">what sometimes</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> kind of forget you</font>

472
00:14:40,790 --> 00:14:43,310
forget<font color="#CCCCCC"> which one you</font><font color="#E5E5E5"> that you're looking</font>

473
00:14:42,050 --> 00:14:45,530
for and so you can<font color="#E5E5E5"> basically use</font><font color="#CCCCCC"> get</font>

474
00:14:43,310 --> 00:14:46,939
command<font color="#E5E5E5"> and say get command show me all</font>

475
00:14:45,530 --> 00:14:49,130
the<font color="#E5E5E5"> commands or functions to start with</font>

476
00:14:46,940 --> 00:14:50,570
a new<font color="#CCCCCC"> dash</font><font color="#E5E5E5"> P and just put a wild card at</font>

477
00:14:49,130 --> 00:14:52,250
the end<font color="#E5E5E5"> it'll list all this information</font>

478
00:14:50,570 --> 00:14:53,630
<font color="#E5E5E5">now the cool part here is that this is</font>

479
00:14:52,250 --> 00:14:55,490
not text<font color="#E5E5E5"> that's being returned as</font>

480
00:14:53,630 --> 00:14:57,800
<font color="#CCCCCC">PowerShell objects</font><font color="#E5E5E5"> now why does that</font>

481
00:14:55,490 --> 00:14:59,600
matter<font color="#E5E5E5"> well we can basically take the</font>

482
00:14:57,800 --> 00:15:01,670
result of<font color="#E5E5E5"> a single if we basically have</font>

483
00:14:59,600 --> 00:15:03,230
it<font color="#CCCCCC"> return</font><font color="#E5E5E5"> just a single command</font><font color="#CCCCCC"> let we</font>

484
00:15:01,670 --> 00:15:04,670
<font color="#E5E5E5">can then pass it in to invoke expression</font>

485
00:15:03,230 --> 00:15:07,370
which<font color="#E5E5E5"> will automatically</font><font color="#CCCCCC"> convert that</font>

486
00:15:04,670 --> 00:15:08,990
object into<font color="#CCCCCC"> the string</font><font color="#E5E5E5"> of new object and</font>

487
00:15:07,370 --> 00:15:09,920
then invoke it but we can<font color="#CCCCCC"> actually be</font>

488
00:15:08,990 --> 00:15:11,180
<font color="#E5E5E5">more creative</font>

489
00:15:09,920 --> 00:15:12,800
since we're dealing<font color="#CCCCCC"> with objects instead</font>

490
00:15:11,180 --> 00:15:14,300
<font color="#E5E5E5">of</font><font color="#CCCCCC"> invoke expression we can use the dot</font>

491
00:15:12,800 --> 00:15:16,099
<font color="#E5E5E5">or an ampersand which are invocation</font>

492
00:15:14,300 --> 00:15:18,020
operators<font color="#E5E5E5"> now here's our list it's</font>

493
00:15:16,100 --> 00:15:19,550
really fun<font color="#CCCCCC"> let's move those wild cards</font>

494
00:15:18,020 --> 00:15:21,620
as long<font color="#CCCCCC"> as we're returning a single</font>

495
00:15:19,550 --> 00:15:23,240
<font color="#CCCCCC">object this works and</font><font color="#E5E5E5"> this is new object</font>

496
00:15:21,620 --> 00:15:24,500
<font color="#E5E5E5">so instead of specifying a new object</font><font color="#CCCCCC"> on</font>

497
00:15:23,240 --> 00:15:27,170
the command<font color="#CCCCCC"> line we could</font><font color="#E5E5E5"> actually</font>

498
00:15:24,500 --> 00:15:28,610
replace that<font color="#E5E5E5"> T with a wild card or keep</font>

499
00:15:27,170 --> 00:15:30,050
replacing<font color="#CCCCCC"> a lot of characters</font><font color="#E5E5E5"> and as</font>

500
00:15:28,610 --> 00:15:31,690
long<font color="#E5E5E5"> as we have a query that will return</font>

501
00:15:30,050 --> 00:15:33,790
<font color="#E5E5E5">only a new object that's</font>

502
00:15:31,690 --> 00:15:35,650
now new object and that<font color="#E5E5E5"> doesn't appear</font>

503
00:15:33,790 --> 00:15:37,030
<font color="#CCCCCC">you will not see new object appearing</font><font color="#E5E5E5"> on</font>

504
00:15:35,650 --> 00:15:38,590
the command line<font color="#E5E5E5"> arguments or in script</font>

505
00:15:37,030 --> 00:15:41,079
block logs the one place you will see it

506
00:15:38,590 --> 00:15:43,180
though is in<font color="#E5E5E5"> the 4103 Eid which is</font>

507
00:15:41,080 --> 00:15:44,770
module logs<font color="#CCCCCC"> so</font><font color="#E5E5E5"> basically think about any</font>

508
00:15:43,180 --> 00:15:46,150
kind<font color="#CCCCCC"> of huge screen module logs are the</font>

509
00:15:44,770 --> 00:15:47,949
<font color="#E5E5E5">ones that I've not found really</font><font color="#CCCCCC"> good</font>

510
00:15:46,150 --> 00:15:49,870
ways to<font color="#CCCCCC"> obfuscate it</font><font color="#E5E5E5"> but the problem is</font>

511
00:15:47,950 --> 00:15:51,400
is that<font color="#E5E5E5"> if you have a huge script you</font>

512
00:15:49,870 --> 00:15:54,190
would have hundreds or<font color="#CCCCCC"> even thousands of</font>

513
00:15:51,400 --> 00:15:55,209
module logs for just a single<font color="#E5E5E5"> execution</font>

514
00:15:54,190 --> 00:15:57,100
of a script because<font color="#E5E5E5"> it's looking at</font>

515
00:15:55,210 --> 00:15:59,020
every every<font color="#CCCCCC"> command</font><font color="#E5E5E5"> line every parameter</font>

516
00:15:57,100 --> 00:16:01,930
binding all this stuff so really<font color="#E5E5E5"> really</font>

517
00:15:59,020 --> 00:16:03,310
helpful<font color="#E5E5E5"> really robust but a lot of logs</font>

518
00:16:01,930 --> 00:16:04,780
<font color="#CCCCCC">so how do we</font><font color="#E5E5E5"> actually meaningfully piece</font>

519
00:16:03,310 --> 00:16:06,880
that back together<font color="#E5E5E5"> to the tech this kind</font>

520
00:16:04,780 --> 00:16:09,069
of stuff we're<font color="#E5E5E5"> not done</font><font color="#CCCCCC"> here yet</font><font color="#E5E5E5"> command</font>

521
00:16:06,880 --> 00:16:11,439
also<font color="#E5E5E5"> has an alias of GCM and there's</font>

522
00:16:09,070 --> 00:16:12,940
actually an undocumented<font color="#CCCCCC"> alien called</font>

523
00:16:11,440 --> 00:16:14,830
command<font color="#E5E5E5"> because PowerShell will</font>

524
00:16:12,940 --> 00:16:16,570
automatically basically take get - and

525
00:16:14,830 --> 00:16:18,250
<font color="#CCCCCC">prepend it to</font><font color="#E5E5E5"> anything you do</font><font color="#CCCCCC"> to say I</font>

526
00:16:16,570 --> 00:16:19,540
didn't find when you type the word

527
00:16:18,250 --> 00:16:20,830
command I didn't<font color="#E5E5E5"> find a function</font><font color="#CCCCCC"> I</font>

528
00:16:19,540 --> 00:16:22,930
didn't find a<font color="#E5E5E5"> commandment maybe you may</font>

529
00:16:20,830 --> 00:16:23,590
get - command<font color="#CCCCCC"> oh you did</font><font color="#E5E5E5"> that's what</font>

530
00:16:22,930 --> 00:16:25,479
we're gonna do

531
00:16:23,590 --> 00:16:26,710
so again rewind<font color="#E5E5E5"> every detection that</font>

532
00:16:25,480 --> 00:16:28,660
we've ever built<font color="#E5E5E5"> as a defender for</font>

533
00:16:26,710 --> 00:16:30,940
powershell commandlets that included get

534
00:16:28,660 --> 00:16:33,069
- we totally<font color="#CCCCCC"> don't need to get - so we</font>

535
00:16:30,940 --> 00:16:34,750
want to make sure that<font color="#E5E5E5"> we don't define</font>

536
00:16:33,070 --> 00:16:37,090
<font color="#E5E5E5">that in our detection otherwise we can</font>

537
00:16:34,750 --> 00:16:38,350
get burned on this another<font color="#E5E5E5"> thing we can</font>

538
00:16:37,090 --> 00:16:40,540
do if we<font color="#CCCCCC"> don't want to</font><font color="#E5E5E5"> use wildcards we</font>

539
00:16:38,350 --> 00:16:41,770
can always just<font color="#E5E5E5"> say basically take our</font>

540
00:16:40,540 --> 00:16:43,480
command let name and chop it up<font color="#E5E5E5"> in the</font>

541
00:16:41,770 --> 00:16:46,090
sub strings whatever we want and then

542
00:16:43,480 --> 00:16:47,680
specify<font color="#E5E5E5"> it there with</font><font color="#CCCCCC"> get command these</font>

543
00:16:46,090 --> 00:16:49,870
are<font color="#E5E5E5"> several different</font><font color="#CCCCCC"> powershell one</font>

544
00:16:47,680 --> 00:16:52,449
<font color="#E5E5E5">gato syntaxes for doing this exact same</font>

545
00:16:49,870 --> 00:16:55,570
<font color="#E5E5E5">thing if you ever look at posh code org</font>

546
00:16:52,450 --> 00:16:58,630
it's one of the first<font color="#E5E5E5"> powershell gallery</font>

547
00:16:55,570 --> 00:17:00,280
like<font color="#E5E5E5"> distribution kind of sharing</font>

548
00:16:58,630 --> 00:17:01,390
platforms and it's been<font color="#E5E5E5"> around for a</font>

549
00:17:00,280 --> 00:17:03,189
while<font color="#E5E5E5"> which is awesome because there's a</font>

550
00:17:01,390 --> 00:17:05,619
lot of<font color="#CCCCCC"> PowerShell</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> dunno syntax which</font>

551
00:17:03,190 --> 00:17:06,850
still<font color="#CCCCCC"> works today but no one really</font><font color="#E5E5E5"> is</font>

552
00:17:05,619 --> 00:17:08,260
using it<font color="#CCCCCC"> because it's really verbose</font>

553
00:17:06,849 --> 00:17:09,969
like this well if you're an attacker

554
00:17:08,260 --> 00:17:11,319
<font color="#E5E5E5">it'd be great if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> could find some</font>

555
00:17:09,970 --> 00:17:13,420
things that<font color="#E5E5E5"> no one is</font><font color="#CCCCCC"> familiar with and</font>

556
00:17:11,319 --> 00:17:14,619
<font color="#E5E5E5">no one's looking for because this might</font>

557
00:17:13,420 --> 00:17:15,699
do exactly what<font color="#E5E5E5"> you need but no</font>

558
00:17:14,619 --> 00:17:17,229
<font color="#CCCCCC">defenders looking for</font><font color="#E5E5E5"> us so if you</font>

559
00:17:15,699 --> 00:17:18,910
notice this<font color="#E5E5E5"> execution context that's an</font>

560
00:17:17,230 --> 00:17:20,260
automatic variable within<font color="#CCCCCC"> PowerShell and</font>

561
00:17:18,910 --> 00:17:21,220
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> going to see this coming</font><font color="#CCCCCC"> up again</font>

562
00:17:20,260 --> 00:17:23,709
and<font color="#CCCCCC"> again</font><font color="#E5E5E5"> so you want to make sure</font>

563
00:17:21,220 --> 00:17:24,970
you're<font color="#E5E5E5"> looking for that for all</font><font color="#CCCCCC"> this</font>

564
00:17:23,709 --> 00:17:26,740
<font color="#E5E5E5">stuff with git command we</font><font color="#CCCCCC"> can do the</font>

565
00:17:24,970 --> 00:17:27,730
exact<font color="#CCCCCC"> same thing with</font><font color="#E5E5E5"> git alias but</font>

566
00:17:26,740 --> 00:17:28,960
instead<font color="#E5E5E5"> of dealing with a full</font>

567
00:17:27,730 --> 00:17:30,970
<font color="#CCCCCC">Commandment name we're dealing with the</font>

568
00:17:28,960 --> 00:17:32,920
alias<font color="#CCCCCC"> name itself</font><font color="#E5E5E5"> so we have get alias</font>

569
00:17:30,970 --> 00:17:34,840
it has an alias<font color="#E5E5E5"> of</font><font color="#CCCCCC"> gal and</font><font color="#E5E5E5"> then then get</font>

570
00:17:32,920 --> 00:17:37,300
aliases<font color="#E5E5E5"> alias is called alias because of</font>

571
00:17:34,840 --> 00:17:38,590
the<font color="#CCCCCC"> git - beforehand makes sense all</font>

572
00:17:37,300 --> 00:17:40,810
good<font color="#CCCCCC"> all right</font><font color="#E5E5E5"> let's keep going</font>

573
00:17:38,590 --> 00:17:42,129
so never<font color="#E5E5E5"> we add all these things</font><font color="#CCCCCC"> let me</font>

574
00:17:40,810 --> 00:17:44,050
say<font color="#CCCCCC"> ok I'm</font><font color="#E5E5E5"> going to look for new object</font>

575
00:17:42,130 --> 00:17:46,010
I'm gonna<font color="#CCCCCC"> forget</font><font color="#E5E5E5"> command command TCM get</font>

576
00:17:44,050 --> 00:17:48,590
alias all<font color="#E5E5E5"> this kind of stuff</font>

577
00:17:46,010 --> 00:17:50,059
and at the end<font color="#E5E5E5"> of the day it's not</font>

578
00:17:48,590 --> 00:17:51,649
really<font color="#CCCCCC"> gonna be feasible</font><font color="#E5E5E5"> to find all</font>

579
00:17:50,059 --> 00:17:53,690
this because<font color="#E5E5E5"> whenever you can get any</font>

580
00:17:51,650 --> 00:17:55,010
piece of a command into a string then

581
00:17:53,690 --> 00:17:57,289
you're golden<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> manipulate it in</font>

582
00:17:55,010 --> 00:17:58,280
all kinds<font color="#CCCCCC"> of crazy</font><font color="#E5E5E5"> ways but if we did</font>

583
00:17:57,289 --> 00:17:59,480
<font color="#E5E5E5">want to go down this</font><font color="#CCCCCC"> route we have</font><font color="#E5E5E5"> to</font>

584
00:17:58,280 --> 00:18:02,120
keep<font color="#E5E5E5"> in mind</font><font color="#CCCCCC"> you put tick marks in front</font>

585
00:17:59,480 --> 00:18:03,950
<font color="#CCCCCC">of</font><font color="#E5E5E5"> all these things you can also use the</font>

586
00:18:02,120 --> 00:18:05,209
you can just<font color="#CCCCCC"> instead</font><font color="#E5E5E5"> of using get</font>

587
00:18:03,950 --> 00:18:07,039
<font color="#E5E5E5">command you can use those invocation</font>

588
00:18:05,210 --> 00:18:09,350
operators again and to start to treat

589
00:18:07,039 --> 00:18:11,120
the<font color="#CCCCCC"> Commandant name as a</font><font color="#E5E5E5"> string and so</font>

590
00:18:09,350 --> 00:18:12,500
<font color="#CCCCCC">on the Left</font><font color="#E5E5E5"> we have concatenation on the</font>

591
00:18:11,120 --> 00:18:13,820
right we have reordering<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then</font>

592
00:18:12,500 --> 00:18:15,530
reordering is really really<font color="#E5E5E5"> awesome</font>

593
00:18:13,820 --> 00:18:16,939
<font color="#E5E5E5">because some people will say okay well</font>

594
00:18:15,530 --> 00:18:18,799
concatenation I don't care about<font color="#E5E5E5"> because</font>

595
00:18:16,940 --> 00:18:20,390
whenever<font color="#E5E5E5"> I look at logs</font><font color="#CCCCCC"> I remove all</font><font color="#E5E5E5"> the</font>

596
00:18:18,799 --> 00:18:21,830
<font color="#E5E5E5">whitespace and special characters</font><font color="#CCCCCC"> such</font>

597
00:18:20,390 --> 00:18:24,289
that new<font color="#CCCCCC"> object will come back together</font>

598
00:18:21,830 --> 00:18:26,120
and then I evaluate at that point well

599
00:18:24,289 --> 00:18:28,190
new things like using<font color="#E5E5E5"> the</font><font color="#CCCCCC"> dash element</font>

600
00:18:26,120 --> 00:18:30,110
<font color="#E5E5E5">operators start to reorder commands new</font>

601
00:18:28,190 --> 00:18:31,520
object will never come back<font color="#CCCCCC"> together</font><font color="#E5E5E5"> no</font>

602
00:18:30,110 --> 00:18:32,689
matter<font color="#E5E5E5"> how many special characters and</font>

603
00:18:31,520 --> 00:18:35,179
<font color="#CCCCCC">whitespace you remove because</font><font color="#E5E5E5"> it's</font>

604
00:18:32,690 --> 00:18:37,669
absolutely<font color="#CCCCCC"> reordered</font><font color="#E5E5E5"> and this is where</font>

605
00:18:35,179 --> 00:18:39,919
it gets really really<font color="#CCCCCC"> challenging so</font>

606
00:18:37,669 --> 00:18:41,150
let's just give up on<font color="#E5E5E5"> this be a real</font>

607
00:18:39,919 --> 00:18:43,190
<font color="#E5E5E5">list here so</font><font color="#CCCCCC"> we're left with invoke</font>

608
00:18:41,150 --> 00:18:43,940
expression now as a defender if you

609
00:18:43,190 --> 00:18:45,380
don't know where to<font color="#E5E5E5"> start with</font>

610
00:18:43,940 --> 00:18:48,230
<font color="#E5E5E5">PowerShell</font><font color="#CCCCCC"> and you have</font><font color="#E5E5E5"> command line</font>

611
00:18:45,380 --> 00:18:51,169
logs<font color="#E5E5E5"> look for IEX and invoke expression</font>

612
00:18:48,230 --> 00:18:53,710
<font color="#CCCCCC">pays crazy dividends if</font><font color="#E5E5E5"> you're it's like</font>

613
00:18:51,169 --> 00:18:56,059
the best<font color="#E5E5E5"> place to start</font><font color="#CCCCCC"> just start</font><font color="#E5E5E5"> there</font>

614
00:18:53,710 --> 00:18:58,039
so what's problematic<font color="#E5E5E5"> about invoke</font>

615
00:18:56,059 --> 00:18:59,870
expression well you have the alias of<font color="#CCCCCC"> IX</font>

616
00:18:58,039 --> 00:19:00,799
the ordering doesn't matter you can<font color="#E5E5E5"> have</font>

617
00:18:59,870 --> 00:19:03,530
at<font color="#E5E5E5"> the beginning</font><font color="#CCCCCC"> at the end of an</font>

618
00:19:00,799 --> 00:19:04,610
expression<font color="#CCCCCC"> you also can put</font><font color="#E5E5E5"> tick marks</font>

619
00:19:03,530 --> 00:19:06,440
in it<font color="#E5E5E5"> because</font><font color="#CCCCCC"> it's a command</font><font color="#E5E5E5"> lot like</font>

620
00:19:04,610 --> 00:19:07,729
anything else in<font color="#E5E5E5"> PowerShell</font><font color="#CCCCCC"> you can use</font>

621
00:19:06,440 --> 00:19:09,409
invocation operators and start

622
00:19:07,730 --> 00:19:10,490
concatenate or reorder<font color="#E5E5E5"> ie X and invoke</font>

623
00:19:09,409 --> 00:19:13,400
it with the<font color="#CCCCCC"> Dobbs the ampersand</font>

624
00:19:10,490 --> 00:19:15,650
invocation operators then let's step

625
00:19:13,400 --> 00:19:17,210
back<font color="#E5E5E5"> and say okay well what why why all</font>

626
00:19:15,650 --> 00:19:19,280
<font color="#E5E5E5">these ways to execute code in PowerShell</font>

627
00:19:17,210 --> 00:19:20,500
<font color="#CCCCCC">this seems really</font><font color="#E5E5E5"> problematic right</font><font color="#CCCCCC"> and</font>

628
00:19:19,280 --> 00:19:22,399
<font color="#CCCCCC">what we'll talk</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> in a second is</font>

629
00:19:20,500 --> 00:19:24,020
oh-lee and I basically assemble<font color="#E5E5E5"> this</font>

630
00:19:22,400 --> 00:19:25,490
huge<font color="#E5E5E5"> PowerShell corpus of scripts to</font>

631
00:19:24,020 --> 00:19:27,379
kind of study<font color="#E5E5E5"> what's normal what's not</font>

632
00:19:25,490 --> 00:19:29,480
in terms<font color="#E5E5E5"> of finding evil which we'll</font>

633
00:19:27,380 --> 00:19:30,830
talk about<font color="#CCCCCC"> in just a</font><font color="#E5E5E5"> couple slides but</font>

634
00:19:29,480 --> 00:19:32,179
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> percent of scripts in</font>

635
00:19:30,830 --> 00:19:33,918
<font color="#E5E5E5">the wild use invoke expression in the</font>

636
00:19:32,179 --> 00:19:35,480
script<font color="#E5E5E5"> itself which sounds</font><font color="#CCCCCC"> like a</font><font color="#E5E5E5"> small</font>

637
00:19:33,919 --> 00:19:36,710
percentage<font color="#CCCCCC"> but it's actually a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of</font>

638
00:19:35,480 --> 00:19:38,600
scripts out there so<font color="#E5E5E5"> you can't even</font>

639
00:19:36,710 --> 00:19:40,909
feasibly say<font color="#E5E5E5"> I don't want to let invoke</font>

640
00:19:38,600 --> 00:19:42,020
expression run in the script context<font color="#E5E5E5"> but</font>

641
00:19:40,909 --> 00:19:44,059
again<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the command line it's pretty</font>

642
00:19:42,020 --> 00:19:46,220
uncommon but<font color="#E5E5E5"> then you have its cousin</font>

643
00:19:44,059 --> 00:19:48,049
invoke command<font color="#E5E5E5"> now invoke command is</font>

644
00:19:46,220 --> 00:19:50,480
typically used<font color="#E5E5E5"> to run a command on a</font>

645
00:19:48,049 --> 00:19:51,679
remote system<font color="#E5E5E5"> and it's it's expecting a</font>

646
00:19:50,480 --> 00:19:53,090
script block<font color="#E5E5E5"> whereas</font><font color="#CCCCCC"> a invoke</font>

647
00:19:51,679 --> 00:19:55,220
expressions is expecting an expression

648
00:19:53,090 --> 00:19:56,809
but if you don't specify a remote system

649
00:19:55,220 --> 00:19:58,580
<font color="#E5E5E5">it runs locally</font><font color="#CCCCCC"> so you have invoked</font>

650
00:19:56,809 --> 00:19:59,450
command<font color="#E5E5E5"> ICM</font><font color="#CCCCCC"> that invoke or invocation</font>

651
00:19:58,580 --> 00:20:01,158
operators

652
00:19:59,450 --> 00:20:03,620
<font color="#E5E5E5">you also have</font><font color="#CCCCCC"> invoke returns</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> invoke</font>

653
00:20:01,159 --> 00:20:05,240
with context<font color="#E5E5E5"> tons of things out there so</font>

654
00:20:03,620 --> 00:20:07,389
<font color="#CCCCCC">okay let's say we're adding this to</font><font color="#E5E5E5"> the</font>

655
00:20:05,240 --> 00:20:10,100
<font color="#E5E5E5">list of like invocation options right</font>

656
00:20:07,389 --> 00:20:11,899
well we also have<font color="#CCCCCC"> powershell</font><font color="#E5E5E5"> wonder</font>

657
00:20:10,100 --> 00:20:15,049
whether there's that<font color="#CCCCCC"> execution</font><font color="#E5E5E5"> context</font>

658
00:20:11,899 --> 00:20:16,580
again we have invoke script<font color="#E5E5E5"> but really</font>

659
00:20:15,049 --> 00:20:18,649
what I'm worried about<font color="#E5E5E5"> is how do we deal</font>

660
00:20:16,580 --> 00:20:20,840
how do we deal with this ampersand<font color="#E5E5E5"> in</font>

661
00:20:18,649 --> 00:20:22,279
this dot how could we feasibly<font color="#E5E5E5"> look for</font>

662
00:20:20,840 --> 00:20:24,139
this on<font color="#E5E5E5"> the command line without getting</font>

663
00:20:22,279 --> 00:20:25,610
insane false positives<font color="#E5E5E5"> well in this case</font>

664
00:20:24,139 --> 00:20:27,439
we're<font color="#CCCCCC"> dealing with script</font><font color="#E5E5E5"> box and</font><font color="#CCCCCC"> maybe</font>

665
00:20:25,610 --> 00:20:30,649
<font color="#E5E5E5">we say if I see a combination</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> an</font>

666
00:20:27,440 --> 00:20:32,630
ampersand<font color="#E5E5E5"> or dot and I see the left and</font>

667
00:20:30,649 --> 00:20:34,158
right<font color="#E5E5E5"> braces which is what you have to</font>

668
00:20:32,630 --> 00:20:36,529
<font color="#CCCCCC">have to denote script locks then maybe</font>

669
00:20:34,159 --> 00:20:37,730
we're good<font color="#E5E5E5"> uh it would help with false</font>

670
00:20:36,529 --> 00:20:38,990
positives<font color="#E5E5E5"> but at the</font><font color="#CCCCCC"> end of the day you</font>

671
00:20:37,730 --> 00:20:40,490
don't<font color="#E5E5E5"> have to have curly braces to</font>

672
00:20:38,990 --> 00:20:42,200
define script locks<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> actually</font>

673
00:20:40,490 --> 00:20:44,450
<font color="#E5E5E5">convert expressions to script locks</font>

674
00:20:42,200 --> 00:20:46,309
<font color="#E5E5E5">using these are two options here using</font>

675
00:20:44,450 --> 00:20:47,990
the script<font color="#CCCCCC"> lock</font><font color="#E5E5E5"> dot in that class of the</font>

676
00:20:46,309 --> 00:20:49,549
create method or<font color="#CCCCCC"> PowerShell one that has</font>

677
00:20:47,990 --> 00:20:51,110
<font color="#CCCCCC">some text again</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then for</font><font color="#E5E5E5"> each</font><font color="#CCCCCC"> of</font>

678
00:20:49,549 --> 00:20:52,309
these<font color="#E5E5E5"> you can apply all the office</font>

679
00:20:51,110 --> 00:20:54,500
keishon we just talked about<font color="#E5E5E5"> and get</font>

680
00:20:52,309 --> 00:20:56,690
crazy<font color="#CCCCCC"> results there so there's</font><font color="#E5E5E5"> still no</font>

681
00:20:54,500 --> 00:20:59,029
silver bullet at this point kind<font color="#CCCCCC"> of</font>

682
00:20:56,690 --> 00:21:01,700
sucks<font color="#CCCCCC"> invoke cradle crafter is a tool</font>

683
00:20:59,029 --> 00:21:03,889
that<font color="#E5E5E5"> I released earlier this</font><font color="#CCCCCC"> year and it</font>

684
00:21:01,700 --> 00:21:05,840
has<font color="#E5E5E5"> over these are all the memory</font>

685
00:21:03,889 --> 00:21:08,178
invocation options but has over 10

686
00:21:05,840 --> 00:21:09,649
different<font color="#E5E5E5"> invocation options</font><font color="#CCCCCC"> that no</font>

687
00:21:08,179 --> 00:21:10,789
<font color="#CCCCCC">random</font><font color="#E5E5E5"> we go and generate including some</font>

688
00:21:09,649 --> 00:21:12,918
ones we<font color="#E5E5E5"> looked at and then some other</font>

689
00:21:10,789 --> 00:21:14,450
crazier ones so if you want an idea<font color="#CCCCCC"> of</font>

690
00:21:12,919 --> 00:21:16,700
some<font color="#E5E5E5"> of the crazy things</font><font color="#CCCCCC"> you can do to</font>

691
00:21:14,450 --> 00:21:18,919
basically form<font color="#E5E5E5"> invoke expression or</font><font color="#CCCCCC"> IEX</font>

692
00:21:16,700 --> 00:21:20,269
to invoke PowerShell code then this is a

693
00:21:18,919 --> 00:21:23,570
tool that<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> just to randomly</font>

694
00:21:20,269 --> 00:21:26,389
generate<font color="#E5E5E5"> that</font><font color="#CCCCCC"> kind of syntax</font><font color="#E5E5E5"> all right</font>

695
00:21:23,570 --> 00:21:28,279
take a breath<font color="#E5E5E5"> that was a lot</font><font color="#CCCCCC"> i've been</font>

696
00:21:26,389 --> 00:21:29,299
joining<font color="#E5E5E5"> up here for a while the good</font>

697
00:21:28,279 --> 00:21:30,710
news is<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that this</font><font color="#E5E5E5"> is really</font><font color="#CCCCCC"> the</font>

698
00:21:29,299 --> 00:21:32,929
extent<font color="#E5E5E5"> of how you can off you skate</font>

699
00:21:30,710 --> 00:21:34,159
<font color="#E5E5E5">powershell the bad news is that I'm</font>

700
00:21:32,929 --> 00:21:37,370
totally<font color="#E5E5E5"> kidding there's a lot more you</font>

701
00:21:34,159 --> 00:21:39,019
can<font color="#E5E5E5"> do so we have our</font><font color="#CCCCCC"> commands</font><font color="#E5E5E5"> we just</font>

702
00:21:37,370 --> 00:21:40,668
did<font color="#E5E5E5"> all that</font><font color="#CCCCCC"> write all this crazy</font><font color="#E5E5E5"> tick</font>

703
00:21:39,019 --> 00:21:41,779
marks and<font color="#CCCCCC"> wildcards</font><font color="#E5E5E5"> and all this</font><font color="#CCCCCC"> stuff</font>

704
00:21:40,669 --> 00:21:43,730
well what if we just<font color="#E5E5E5"> said let me treat</font>

705
00:21:41,779 --> 00:21:46,730
the entire command as a single string

706
00:21:43,730 --> 00:21:48,470
<font color="#E5E5E5">and then invoke it that means I've got</font>

707
00:21:46,730 --> 00:21:49,850
the entire<font color="#CCCCCC"> command as a string so I can</font>

708
00:21:48,470 --> 00:21:51,559
do crazy string manipulation on the

709
00:21:49,850 --> 00:21:53,240
whole thing like<font color="#E5E5E5"> maybe we'll just</font>

710
00:21:51,559 --> 00:21:54,529
reverse the entire<font color="#E5E5E5"> command and on the</font>

711
00:21:53,240 --> 00:21:56,059
command<font color="#E5E5E5"> line it's in</font><font color="#CCCCCC"> Reverse but</font><font color="#E5E5E5"> then</font>

712
00:21:54,529 --> 00:21:57,799
<font color="#E5E5E5">the memory it riri</font><font color="#CCCCCC"> verses it and we</font>

713
00:21:56,059 --> 00:21:59,299
invoke it<font color="#E5E5E5"> you can also put garbage</font>

714
00:21:57,799 --> 00:22:00,860
delimiters just all<font color="#E5E5E5"> throughout the</font>

715
00:21:59,299 --> 00:22:02,210
command and use the<font color="#E5E5E5"> split</font><font color="#CCCCCC"> command to</font>

716
00:22:00,860 --> 00:22:03,590
basically pull out those delimiter so

717
00:22:02,210 --> 00:22:05,450
you can use replace operations to

718
00:22:03,590 --> 00:22:06,799
replace the delimiter<font color="#CCCCCC"> zuv nothing you</font>

719
00:22:05,450 --> 00:22:08,269
can then just<font color="#E5E5E5"> do</font><font color="#CCCCCC"> sheriff concatenation</font>

720
00:22:06,799 --> 00:22:10,429
<font color="#E5E5E5">to basically chop up and reorder</font><font color="#CCCCCC"> your</font>

721
00:22:08,269 --> 00:22:11,809
command into a lot of<font color="#E5E5E5"> pieces</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> these</font>

722
00:22:10,429 --> 00:22:12,860
are some options<font color="#CCCCCC"> that</font><font color="#E5E5E5"> again are</font><font color="#CCCCCC"> gonna</font>

723
00:22:11,809 --> 00:22:15,320
<font color="#CCCCCC">evade the command line stuff</font>

724
00:22:12,860 --> 00:22:16,909
<font color="#E5E5E5">but it's going to be reassembled for for</font>

725
00:22:15,320 --> 00:22:18,169
everything<font color="#CCCCCC"> in script block</font><font color="#E5E5E5"> log so script</font>

726
00:22:16,910 --> 00:22:19,520
block<font color="#E5E5E5"> logs</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> gonna have it all put</font>

727
00:22:18,170 --> 00:22:23,120
back<font color="#E5E5E5"> together which is really really</font>

728
00:22:19,520 --> 00:22:24,679
<font color="#E5E5E5">nice</font><font color="#CCCCCC"> so would</font><font color="#E5E5E5"> it suck if someone wrote a</font>

729
00:22:23,120 --> 00:22:26,209
tool it did all the stuff<font color="#E5E5E5"> automatically</font>

730
00:22:24,679 --> 00:22:30,020
as defenders we probably<font color="#E5E5E5"> hate the person</font>

731
00:22:26,210 --> 00:22:31,940
<font color="#CCCCCC">who did</font><font color="#E5E5E5"> that right so unfortunately this</font>

732
00:22:30,020 --> 00:22:32,960
is what I got myself into last year<font color="#E5E5E5"> and</font>

733
00:22:31,940 --> 00:22:34,760
<font color="#E5E5E5">our releases tool called invoke</font>

734
00:22:32,960 --> 00:22:36,980
obfuscation<font color="#CCCCCC"> that basically</font><font color="#E5E5E5"> took all this</font>

735
00:22:34,760 --> 00:22:38,570
research<font color="#CCCCCC"> that I did and automated the</font>

736
00:22:36,980 --> 00:22:40,190
<font color="#E5E5E5">office</font><font color="#CCCCCC"> Gatien of PowerShell code</font><font color="#E5E5E5"> any</font>

737
00:22:38,570 --> 00:22:41,689
arbitrary<font color="#E5E5E5"> command or script you feed in</font>

738
00:22:40,190 --> 00:22:42,799
it'll basically<font color="#E5E5E5"> give you the whole slew</font>

739
00:22:41,690 --> 00:22:44,929
of options<font color="#E5E5E5"> of what you want to office</font>

740
00:22:42,799 --> 00:22:47,360
<font color="#E5E5E5">gate so in this case</font><font color="#CCCCCC"> we take the exact</font>

741
00:22:44,929 --> 00:22:49,100
<font color="#CCCCCC">same one-liner</font><font color="#E5E5E5"> download cradle that we</font>

742
00:22:47,360 --> 00:22:50,240
just<font color="#CCCCCC"> walk</font><font color="#E5E5E5"> through then at a push of a</font>

743
00:22:49,100 --> 00:22:51,918
button we<font color="#E5E5E5"> can have it for do something</font>

744
00:22:50,240 --> 00:22:53,330
<font color="#E5E5E5">like this which is going through</font><font color="#CCCCCC"> and</font>

745
00:22:51,919 --> 00:22:54,110
reordering all the components and

746
00:22:53,330 --> 00:22:55,790
invoking it<font color="#E5E5E5"> with the invocation</font>

747
00:22:54,110 --> 00:22:57,500
<font color="#E5E5E5">operators and stuff like that but then</font>

748
00:22:55,790 --> 00:22:59,149
we can<font color="#E5E5E5"> take that and say let me treat</font>

749
00:22:57,500 --> 00:23:01,370
the whole thing as a string<font color="#E5E5E5"> and do</font>

750
00:22:59,150 --> 00:23:03,200
something crazier<font color="#E5E5E5"> like this and just</font>

751
00:23:01,370 --> 00:23:05,360
reorder the whole command as a string

752
00:23:03,200 --> 00:23:07,910
now I put this flag up here<font color="#E5E5E5"> because a</font>

753
00:23:05,360 --> 00:23:11,030
<font color="#E5E5E5">couple</font><font color="#CCCCCC"> months ago we saw a</font><font color="#E5E5E5"> PT 32 which</font>

754
00:23:07,910 --> 00:23:13,130
is<font color="#E5E5E5"> a Vietnamese</font><font color="#CCCCCC"> threat group</font><font color="#E5E5E5"> using using</font>

755
00:23:11,030 --> 00:23:15,020
my tool to<font color="#CCCCCC"> do their nefarious</font><font color="#E5E5E5"> activity</font>

756
00:23:13,130 --> 00:23:16,520
and they actually<font color="#CCCCCC"> wrapped their commands</font>

757
00:23:15,020 --> 00:23:17,929
<font color="#E5E5E5">in like</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of layers like at</font><font color="#CCCCCC"> least</font>

758
00:23:16,520 --> 00:23:19,549
<font color="#E5E5E5">five or six layers of this like string</font>

759
00:23:17,929 --> 00:23:20,540
manipulation<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> so I get a lot</font><font color="#E5E5E5"> of</font>

760
00:23:19,549 --> 00:23:21,559
dirty<font color="#E5E5E5"> looks in the office when those</font>

761
00:23:20,540 --> 00:23:23,659
samples come in and<font color="#E5E5E5"> they just</font><font color="#CCCCCC"> kind of</font>

762
00:23:21,559 --> 00:23:25,610
slide that over<font color="#CCCCCC"> my way for me to go and</font>

763
00:23:23,660 --> 00:23:27,559
decode so people say you should eat<font color="#CCCCCC"> your</font>

764
00:23:25,610 --> 00:23:31,340
own dog<font color="#E5E5E5"> food</font><font color="#CCCCCC"> I do a lot and the dog food</font>

765
00:23:27,559 --> 00:23:35,030
doesn't taste<font color="#E5E5E5"> that</font><font color="#CCCCCC"> good anymore so hold</font>

766
00:23:31,340 --> 00:23:37,100
the tomatoes<font color="#E5E5E5"> then earlier this year a</font>

767
00:23:35,030 --> 00:23:39,020
released<font color="#E5E5E5"> in</font><font color="#CCCCCC"> vote Cradle crafter which is</font>

768
00:23:37,100 --> 00:23:40,699
not taking any arbitrary code in<font color="#E5E5E5"> it's</font>

769
00:23:39,020 --> 00:23:42,860
<font color="#E5E5E5">basically saying feed me or remote URI</font>

770
00:23:40,700 --> 00:23:44,179
and any post kind of cradle commands you

771
00:23:42,860 --> 00:23:46,520
want to run and then let me show<font color="#CCCCCC"> you</font>

772
00:23:44,179 --> 00:23:47,780
some really weird<font color="#CCCCCC"> cradle</font><font color="#E5E5E5"> syntaxes you</font>

773
00:23:46,520 --> 00:23:49,940
can use<font color="#E5E5E5"> that</font><font color="#CCCCCC"> maybe the defenders aren't</font>

774
00:23:47,780 --> 00:23:52,040
looking<font color="#CCCCCC"> for and that</font><font color="#E5E5E5"> hopefully defenders</font>

775
00:23:49,940 --> 00:23:53,690
will use to start looking for them and

776
00:23:52,040 --> 00:23:54,830
so anyways we take that same URI<font color="#CCCCCC"> if it</font>

777
00:23:53,690 --> 00:23:56,840
legit and we<font color="#E5E5E5"> can produce something like</font>

778
00:23:54,830 --> 00:23:58,668
<font color="#E5E5E5">this looks totally</font><font color="#CCCCCC"> different than in BO</font>

779
00:23:56,840 --> 00:24:00,980
<font color="#E5E5E5">coffee station there's no tick marks</font>

780
00:23:58,669 --> 00:24:02,570
<font color="#E5E5E5">it's basically doing like method and</font>

781
00:24:00,980 --> 00:24:04,190
member and command<font color="#CCCCCC"> let enumeration to</font>

782
00:24:02,570 --> 00:24:06,409
basically produce<font color="#E5E5E5"> strings like download</font>

783
00:24:04,190 --> 00:24:11,360
string out of<font color="#E5E5E5"> this like crazy</font><font color="#CCCCCC"> just long</font>

784
00:24:06,410 --> 00:24:12,919
<font color="#CCCCCC">and nasty nasty command so then you do</font>

785
00:24:11,360 --> 00:24:14,870
something<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> and just say well</font>

786
00:24:12,919 --> 00:24:17,600
who needs alphanumeric so I'll just use

787
00:24:14,870 --> 00:24:19,340
special<font color="#CCCCCC"> characters</font><font color="#E5E5E5"> now I got to say the</font>

788
00:24:17,600 --> 00:24:22,100
the<font color="#CCCCCC"> guy who</font><font color="#E5E5E5"> came from with this concept</font>

789
00:24:19,340 --> 00:24:24,199
is a<font color="#E5E5E5"> Japanese researcher who in 2010</font>

790
00:24:22,100 --> 00:24:26,029
wrote hello world and<font color="#E5E5E5"> PowerShell with</font>

791
00:24:24,200 --> 00:24:28,190
nothing but special characters

792
00:24:26,029 --> 00:24:30,440
the twitter<font color="#E5E5E5"> handle is muda muda</font><font color="#CCCCCC"> Gucci</font>

793
00:24:28,190 --> 00:24:32,149
and it's just a fascinating<font color="#CCCCCC"> blog</font><font color="#E5E5E5"> post</font>

794
00:24:30,440 --> 00:24:34,159
<font color="#E5E5E5">google translate it if you don't speak</font>

795
00:24:32,149 --> 00:24:35,718
<font color="#CCCCCC">Japanese because</font><font color="#E5E5E5"> I don't but basically</font>

796
00:24:34,159 --> 00:24:36,799
took three steps<font color="#E5E5E5"> into taking special</font>

797
00:24:35,719 --> 00:24:38,419
characters and<font color="#E5E5E5"> coming up with any</font>

798
00:24:36,799 --> 00:24:40,879
<font color="#E5E5E5">arbitrary PowerShell code it's a really</font>

799
00:24:38,419 --> 00:24:42,889
beautiful idea and this produces not

800
00:24:40,879 --> 00:24:44,299
beautiful code<font color="#CCCCCC"> but at the end of the day</font>

801
00:24:42,889 --> 00:24:46,279
it's a ton of variables that<font color="#E5E5E5"> are all</font>

802
00:24:44,299 --> 00:24:47,599
stored in dollar sign curly braces

803
00:24:46,279 --> 00:24:48,889
<font color="#E5E5E5">because when you put curly braces you</font>

804
00:24:47,599 --> 00:24:51,079
can put special characters as variable

805
00:24:48,889 --> 00:24:52,998
names<font color="#E5E5E5"> so you could also put whitespace</font>

806
00:24:51,079 --> 00:24:54,678
as the character names<font color="#E5E5E5"> and get something</font>

807
00:24:52,999 --> 00:24:56,690
like<font color="#E5E5E5"> this and I was talking</font><font color="#CCCCCC"> with Casey</font>

808
00:24:54,679 --> 00:24:58,339
Smith or<font color="#E5E5E5"> subti early this year</font><font color="#CCCCCC"> and he</font>

809
00:24:56,690 --> 00:25:00,709
said oh<font color="#CCCCCC"> that reminds me</font><font color="#E5E5E5"> of whitespace</font>

810
00:24:58,339 --> 00:25:02,089
encoding<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I said I don't</font><font color="#E5E5E5"> know what</font>

811
00:25:00,709 --> 00:25:03,049
that is<font color="#E5E5E5"> and you got to tell me about it</font>

812
00:25:02,089 --> 00:25:04,759
<font color="#E5E5E5">and so he said oh yeah you just take</font>

813
00:25:03,049 --> 00:25:06,408
<font color="#CCCCCC">whitespace and</font><font color="#E5E5E5"> tabs and basically do</font>

814
00:25:04,759 --> 00:25:08,929
that for the encoding and<font color="#E5E5E5"> stuff like oh</font>

815
00:25:06,409 --> 00:25:11,059
sweet<font color="#E5E5E5"> and so I wrote this and so this is</font>

816
00:25:08,929 --> 00:25:12,349
that<font color="#E5E5E5"> same command where the whole</font>

817
00:25:11,059 --> 00:25:14,479
command is either in white spaces

818
00:25:12,349 --> 00:25:15,649
delimited by tabs or tabs delimited by

819
00:25:14,479 --> 00:25:19,459
white spaces do you have the stub

820
00:25:15,649 --> 00:25:21,349
decoder at the end now for both of these

821
00:25:19,459 --> 00:25:23,690
<font color="#CCCCCC">options</font><font color="#E5E5E5"> again it is completely</font>

822
00:25:21,349 --> 00:25:25,279
reassembled in script<font color="#E5E5E5"> lock logs</font><font color="#CCCCCC"> you</font>

823
00:25:23,690 --> 00:25:26,719
don't<font color="#E5E5E5"> need anything</font><font color="#CCCCCC"> fancy to detect this</font>

824
00:25:25,279 --> 00:25:28,759
<font color="#E5E5E5">in script lock</font><font color="#CCCCCC"> logs</font><font color="#E5E5E5"> because it all comes</font>

825
00:25:26,719 --> 00:25:30,440
back<font color="#E5E5E5"> together</font><font color="#CCCCCC"> magically it's a really</font>

826
00:25:28,759 --> 00:25:32,479
beautiful example<font color="#E5E5E5"> of the power of script</font>

827
00:25:30,440 --> 00:25:34,159
block logs<font color="#E5E5E5"> but let's say you don't have</font>

828
00:25:32,479 --> 00:25:36,259
<font color="#E5E5E5">to get block logs then maybe you're</font>

829
00:25:34,159 --> 00:25:38,599
<font color="#CCCCCC">looking</font><font color="#E5E5E5"> at me and saying wow I really</font>

830
00:25:36,259 --> 00:25:41,239
feel like there's no hope<font color="#CCCCCC"> here</font><font color="#E5E5E5"> what</font>

831
00:25:38,599 --> 00:25:42,678
could<font color="#E5E5E5"> we possibly do so this is kind of</font>

832
00:25:41,239 --> 00:25:44,629
the turning<font color="#CCCCCC"> of the tides of this talk</font>

833
00:25:42,679 --> 00:25:46,459
hopefully hopefully<font color="#E5E5E5"> all the depressing</font>

834
00:25:44,629 --> 00:25:48,978
stuff is out and<font color="#E5E5E5"> like let's talk</font><font color="#CCCCCC"> about</font>

835
00:25:46,459 --> 00:25:52,609
some<font color="#E5E5E5"> good</font><font color="#CCCCCC"> news for defenders right so</font>

836
00:25:48,979 --> 00:25:55,099
let's try to<font color="#E5E5E5"> do a little science now I'm</font>

837
00:25:52,609 --> 00:25:58,639
not a data scientist<font color="#CCCCCC"> and nor do I try</font><font color="#E5E5E5"> to</font>

838
00:25:55,099 --> 00:26:00,259
pretend<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> but there's some</font>

839
00:25:58,639 --> 00:26:01,728
simple<font color="#E5E5E5"> statistical analysis techniques</font>

840
00:26:00,259 --> 00:26:03,829
that we<font color="#E5E5E5"> can perhaps apply to this</font>

841
00:26:01,729 --> 00:26:06,169
problem area<font color="#E5E5E5"> and get some good results</font>

842
00:26:03,829 --> 00:26:09,320
out<font color="#E5E5E5"> of so as a human</font><font color="#CCCCCC"> if we look at</font><font color="#E5E5E5"> this</font>

843
00:26:06,169 --> 00:26:10,969
code no one in there no one<font color="#E5E5E5"> here would</font>

844
00:26:09,320 --> 00:26:12,589
look<font color="#E5E5E5"> at this code</font><font color="#CCCCCC"> and say yep let's let</font>

845
00:26:10,969 --> 00:26:15,139
that<font color="#E5E5E5"> right on through my</font><font color="#CCCCCC"> environment</font>

846
00:26:12,589 --> 00:26:16,609
like totally<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> to run that as humans</font>

847
00:26:15,139 --> 00:26:20,359
<font color="#CCCCCC">we can</font><font color="#E5E5E5"> look at this and say this code is</font>

848
00:26:16,609 --> 00:26:23,839
<font color="#E5E5E5">not well so how might we tell a computer</font>

849
00:26:20,359 --> 00:26:26,718
to figure<font color="#E5E5E5"> that out</font><font color="#CCCCCC"> so one of the first</font>

850
00:26:23,839 --> 00:26:28,339
things last year<font color="#E5E5E5"> almost exactly a year</font>

851
00:26:26,719 --> 00:26:30,829
ago<font color="#CCCCCC"> it was a</font><font color="#E5E5E5"> couple</font><font color="#CCCCCC"> weeks after</font><font color="#E5E5E5"> our</font>

852
00:26:28,339 --> 00:26:31,908
<font color="#E5E5E5">released invocation at Derby con</font><font color="#CCCCCC"> Lee</font>

853
00:26:30,829 --> 00:26:33,649
Holmes wrote a blog<font color="#CCCCCC"> post called</font>

854
00:26:31,909 --> 00:26:35,929
detecting more office<font color="#CCCCCC"> gated PowerShell</font>

855
00:26:33,649 --> 00:26:37,758
<font color="#CCCCCC">and he actually</font><font color="#E5E5E5"> referenced this these</font>

856
00:26:35,929 --> 00:26:39,860
examples<font color="#E5E5E5"> in the blog post</font><font color="#CCCCCC"> and he did</font>

857
00:26:37,759 --> 00:26:42,169
something<font color="#CCCCCC"> really really cool</font>

858
00:26:39,860 --> 00:26:43,459
which actually<font color="#E5E5E5"> started this this</font><font color="#CCCCCC"> entire</font>

859
00:26:42,169 --> 00:26:45,470
conversation with me and<font color="#CCCCCC"> Lee Holmes</font>

860
00:26:43,460 --> 00:26:47,000
<font color="#E5E5E5">about what other</font><font color="#CCCCCC"> ideas could</font><font color="#E5E5E5"> we apply to</font>

861
00:26:45,470 --> 00:26:48,290
detect this<font color="#CCCCCC"> kind of stuff and led to</font>

862
00:26:47,000 --> 00:26:51,350
<font color="#CCCCCC">this collaboration which is</font><font color="#E5E5E5"> kind of</font>

863
00:26:48,290 --> 00:26:53,600
funny looking<font color="#E5E5E5"> back on</font><font color="#CCCCCC"> so anyways</font><font color="#E5E5E5"> he took</font>

864
00:26:51,350 --> 00:26:56,629
all the<font color="#CCCCCC"> powershell scripts</font><font color="#E5E5E5"> off of posh</font>

865
00:26:53,600 --> 00:26:58,340
code org which is<font color="#CCCCCC"> 3400 scripts at the</font>

866
00:26:56,630 --> 00:27:00,950
time and he basically did character

867
00:26:58,340 --> 00:27:02,899
frequency analysis on all of them<font color="#E5E5E5"> and so</font>

868
00:27:00,950 --> 00:27:06,559
<font color="#CCCCCC">on the right is the average</font><font color="#E5E5E5"> of all</font><font color="#CCCCCC"> the</font>

869
00:27:02,900 --> 00:27:08,240
posh code<font color="#E5E5E5"> scripts which as you'd expect</font>

870
00:27:06,559 --> 00:27:10,370
<font color="#CCCCCC">powershell</font><font color="#E5E5E5"> the language itself</font><font color="#CCCCCC"> is</font>

871
00:27:08,240 --> 00:27:13,400
<font color="#CCCCCC">English and</font><font color="#E5E5E5"> so you'd expect</font><font color="#CCCCCC"> the English</font>

872
00:27:10,370 --> 00:27:16,850
characters<font color="#E5E5E5"> to kind of match like English</font>

873
00:27:13,400 --> 00:27:18,620
<font color="#E5E5E5">you know like grammar instruction or</font>

874
00:27:16,850 --> 00:27:21,439
<font color="#CCCCCC">like on stuff so</font><font color="#E5E5E5"> we see ETA this is the</font>

875
00:27:18,620 --> 00:27:22,699
most common that makes up you know<font color="#CCCCCC"> 20%</font>

876
00:27:21,440 --> 00:27:23,960
<font color="#E5E5E5">of all</font><font color="#CCCCCC"> the PowerShell scripts the first</font>

877
00:27:22,700 --> 00:27:27,230
special character we<font color="#CCCCCC"> see is the</font><font color="#E5E5E5"> dollar</font>

878
00:27:23,960 --> 00:27:29,900
sign at<font color="#CCCCCC"> 3% on average the 3% of any</font>

879
00:27:27,230 --> 00:27:32,110
powershell script<font color="#E5E5E5"> on this site is a</font>

880
00:27:29,900 --> 00:27:36,380
dollar sign<font color="#E5E5E5"> now you look on the left</font>

881
00:27:32,110 --> 00:27:38,270
there it's insane<font color="#E5E5E5"> 20% is is tick marks</font>

882
00:27:36,380 --> 00:27:39,530
<font color="#E5E5E5">8% from all this stuff and then over</font>

883
00:27:38,270 --> 00:27:40,668
here<font color="#E5E5E5"> I always say it's all special</font>

884
00:27:39,530 --> 00:27:42,889
<font color="#E5E5E5">characters it looks really really</font>

885
00:27:40,669 --> 00:27:44,179
<font color="#CCCCCC">different</font><font color="#E5E5E5"> so again we can</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> at that</font>

886
00:27:42,890 --> 00:27:45,440
and<font color="#CCCCCC"> say okay yeah these are</font><font color="#E5E5E5"> really</font>

887
00:27:44,179 --> 00:27:48,350
different but<font color="#E5E5E5"> how do we tell computer to</font>

888
00:27:45,440 --> 00:27:49,610
do that so this<font color="#E5E5E5"> is where we get a little</font>

889
00:27:48,350 --> 00:27:52,370
<font color="#E5E5E5">nerdy here for a second</font>

890
00:27:49,610 --> 00:27:54,110
<font color="#CCCCCC">talk</font><font color="#E5E5E5"> about cosine similarity now I'm not</font>

891
00:27:52,370 --> 00:27:55,250
this<font color="#E5E5E5"> math whiz person so if you're not</font>

892
00:27:54,110 --> 00:27:56,479
please don't check out<font color="#CCCCCC"> when should I</font>

893
00:27:55,250 --> 00:27:59,900
<font color="#E5E5E5">make this fun and</font><font color="#CCCCCC"> really exciting but</font>

894
00:27:56,480 --> 00:28:01,520
basically the concept is if you have two

895
00:27:59,900 --> 00:28:03,290
points<font color="#CCCCCC"> two coordinates to make a line</font>

896
00:28:01,520 --> 00:28:05,750
<font color="#E5E5E5">right you have line a and</font><font color="#CCCCCC"> you have line</font>

897
00:28:03,290 --> 00:28:07,159
B<font color="#E5E5E5"> and they have angles right and so</font>

898
00:28:05,750 --> 00:28:09,110
cosine<font color="#CCCCCC"> similarly basically saying what</font>

899
00:28:07,160 --> 00:28:11,540
these lines to be very<font color="#E5E5E5"> similar because</font>

900
00:28:09,110 --> 00:28:13,010
the angles between<font color="#CCCCCC"> them are zero but if</font>

901
00:28:11,540 --> 00:28:14,840
you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> 90 degrees that's like dead</font>

902
00:28:13,010 --> 00:28:17,570
different right so we can<font color="#CCCCCC"> actually</font>

903
00:28:14,840 --> 00:28:19,820
<font color="#E5E5E5">extend this idea beyond two coordinate</font>

904
00:28:17,570 --> 00:28:22,370
lines<font color="#E5E5E5"> to three coordinate lines</font><font color="#CCCCCC"> four</font>

905
00:28:19,820 --> 00:28:25,010
coordinate lines<font color="#E5E5E5"> maybe 26 coordinate</font>

906
00:28:22,370 --> 00:28:26,629
<font color="#E5E5E5">lines for all the Alpha characters so</font>

907
00:28:25,010 --> 00:28:28,790
that's<font color="#E5E5E5"> that's what Lee did in this blog</font>

908
00:28:26,630 --> 00:28:31,309
post<font color="#E5E5E5"> he basically said okay why don't I</font>

909
00:28:28,790 --> 00:28:33,530
apply<font color="#CCCCCC"> this cosine similarity to</font>

910
00:28:31,309 --> 00:28:35,059
technique and then apply that<font color="#E5E5E5"> to</font><font color="#CCCCCC"> all the</font>

911
00:28:33,530 --> 00:28:36,950
<font color="#E5E5E5">scripts in posh code and what you'll see</font>

912
00:28:35,059 --> 00:28:38,928
<font color="#CCCCCC">is that almost</font><font color="#E5E5E5"> all the scripts are</font>

913
00:28:36,950 --> 00:28:41,690
really really<font color="#E5E5E5"> close to</font><font color="#CCCCCC"> the value</font><font color="#E5E5E5"> of one</font>

914
00:28:38,929 --> 00:28:42,679
so<font color="#CCCCCC"> I 95</font><font color="#E5E5E5"> percent symbol or 97 percent</font>

915
00:28:41,690 --> 00:28:45,200
similar but then we have our two samples

916
00:28:42,679 --> 00:28:48,500
<font color="#E5E5E5">at the bottom which are 37% similar and</font>

917
00:28:45,200 --> 00:28:50,090
<font color="#E5E5E5">15% similar now if we took all the codes</font>

918
00:28:48,500 --> 00:28:51,710
on posh code<font color="#E5E5E5"> and do the scatter chart</font>

919
00:28:50,090 --> 00:28:52,530
we'll see most<font color="#E5E5E5"> of them are right up</font>

920
00:28:51,710 --> 00:28:53,700
there<font color="#CCCCCC"> at</font><font color="#E5E5E5"> one</font>

921
00:28:52,530 --> 00:28:55,200
really really<font color="#CCCCCC"> similar to each other</font><font color="#E5E5E5"> but</font>

922
00:28:53,700 --> 00:28:57,450
<font color="#CCCCCC">then you have all these really randos</font>

923
00:28:55,200 --> 00:29:00,150
just falling<font color="#CCCCCC"> out at the bottom and so we</font>

924
00:28:57,450 --> 00:29:01,380
can do is take<font color="#E5E5E5"> 3400 scripts and</font>

925
00:29:00,150 --> 00:29:03,870
<font color="#E5E5E5">immediately just say let's look at</font>

926
00:29:01,380 --> 00:29:09,750
everything<font color="#E5E5E5"> below</font><font color="#CCCCCC"> 80% and that's like 30</font>

927
00:29:03,870 --> 00:29:11,610
scripts so this is great on on just you

928
00:29:09,750 --> 00:29:13,170
know<font color="#E5E5E5"> 3400 scripts but as</font><font color="#CCCCCC"> Lee and I start</font>

929
00:29:11,610 --> 00:29:15,360
<font color="#CCCCCC">through this</font><font color="#E5E5E5"> research we said we need a</font>

930
00:29:13,170 --> 00:29:17,970
lot of<font color="#CCCCCC"> data</font><font color="#E5E5E5"> we need as much data as we</font>

931
00:29:15,360 --> 00:29:20,129
possibly get our hands on<font color="#E5E5E5"> so a year and</font>

932
00:29:17,970 --> 00:29:21,900
a half ago Microsoft<font color="#E5E5E5"> put out this</font>

933
00:29:20,130 --> 00:29:23,340
contest called underhanded PowerShell

934
00:29:21,900 --> 00:29:25,110
basically inviting people<font color="#E5E5E5"> from the</font>

935
00:29:23,340 --> 00:29:26,730
community to<font color="#E5E5E5"> basically submit obtuse and</font>

936
00:29:25,110 --> 00:29:29,129
often skated PowerShell to<font color="#E5E5E5"> evade certain</font>

937
00:29:26,730 --> 00:29:31,560
checks so<font color="#E5E5E5"> that was a little bit of data</font>

938
00:29:29,130 --> 00:29:33,930
<font color="#E5E5E5">but then we we really wanted a huge</font>

939
00:29:31,560 --> 00:29:36,210
corpus of data<font color="#E5E5E5"> so we start with</font>

940
00:29:33,930 --> 00:29:37,440
underhand<font color="#CCCCCC"> PowerShell data github posh</font>

941
00:29:36,210 --> 00:29:39,570
<font color="#E5E5E5">got all this stuff</font><font color="#CCCCCC"> but the important</font>

942
00:29:37,440 --> 00:29:41,700
<font color="#CCCCCC">thing to</font><font color="#E5E5E5"> keep in mind for</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> is that Lee</font>

943
00:29:39,570 --> 00:29:43,560
<font color="#CCCCCC">and I felt</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> was really important to</font>

944
00:29:41,700 --> 00:29:45,600
<font color="#CCCCCC">highlight</font><font color="#E5E5E5"> that you can actually gather</font>

945
00:29:43,560 --> 00:29:47,040
all this data<font color="#E5E5E5"> and be really polite in</font>

946
00:29:45,600 --> 00:29:48,600
the process and<font color="#E5E5E5"> what do I mean by that</font>

947
00:29:47,040 --> 00:29:51,060
well Lee wrote the script to basically

948
00:29:48,600 --> 00:29:52,500
scrape github and all the blue portions

949
00:29:51,060 --> 00:29:53,820
are the<font color="#CCCCCC"> actual pieces</font><font color="#E5E5E5"> of code that are</font>

950
00:29:52,500 --> 00:29:55,260
<font color="#CCCCCC">scraped and github and all the red</font>

951
00:29:53,820 --> 00:29:57,120
portions are a hundred<font color="#CCCCCC"> percent Canadian</font>

952
00:29:55,260 --> 00:29:58,440
because Lee<font color="#CCCCCC"> Holmes is Canadian and he's</font>

953
00:29:57,120 --> 00:29:59,939
the nicest<font color="#CCCCCC"> person you've ever met and</font>

954
00:29:58,440 --> 00:30:02,010
it's just like throttling and<font color="#E5E5E5"> all this</font>

955
00:29:59,940 --> 00:30:03,510
great<font color="#CCCCCC"> stuff so he</font><font color="#E5E5E5"> basically was he was</font>

956
00:30:02,010 --> 00:30:05,040
basically scraping for<font color="#E5E5E5"> like a month he</font>

957
00:30:03,510 --> 00:30:06,840
looked at the crater<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get hub ID and</font>

958
00:30:05,040 --> 00:30:08,399
said<font color="#E5E5E5"> I there's 10 million IDs this</font>

959
00:30:06,840 --> 00:30:09,480
should take<font color="#CCCCCC"> us a</font><font color="#E5E5E5"> month or something</font><font color="#CCCCCC"> like</font>

960
00:30:08,400 --> 00:30:11,550
that<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> anyway it's getting close to</font>

961
00:30:09,480 --> 00:30:15,480
<font color="#CCCCCC">a month his uh</font><font color="#E5E5E5"> his</font><font color="#CCCCCC"> scripts are still</font>

962
00:30:11,550 --> 00:30:17,310
running<font color="#CCCCCC"> and he sees</font><font color="#E5E5E5"> 10 million ID 11</font>

963
00:30:15,480 --> 00:30:18,750
million<font color="#CCCCCC"> 12 million he's like wait a</font>

964
00:30:17,310 --> 00:30:20,370
second and<font color="#E5E5E5"> went back and</font><font color="#CCCCCC"> double-checked</font>

965
00:30:18,750 --> 00:30:22,470
it<font color="#E5E5E5"> was a hundred million in github</font><font color="#CCCCCC"> he's</font>

966
00:30:20,370 --> 00:30:24,149
like oh my gosh the<font color="#CCCCCC"> clocks a-tickin like</font>

967
00:30:22,470 --> 00:30:25,860
how are we<font color="#E5E5E5"> gonna get this data and so</font>

968
00:30:24,150 --> 00:30:28,080
<font color="#E5E5E5">apparently the most polite thing you can</font>

969
00:30:25,860 --> 00:30:29,879
do is just ask the great folks at github

970
00:30:28,080 --> 00:30:31,470
<font color="#CCCCCC">hey would</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> mind telling us what all</font>

971
00:30:29,880 --> 00:30:33,240
the<font color="#E5E5E5"> PowerShell projects are and zipping</font>

972
00:30:31,470 --> 00:30:34,740
<font color="#E5E5E5">those up for us and a lunch break</font><font color="#CCCCCC"> they</font>

973
00:30:33,240 --> 00:30:38,010
went and<font color="#CCCCCC"> did just that so kudos to</font>

974
00:30:34,740 --> 00:30:40,740
<font color="#E5E5E5">github for getting us that data this is</font>

975
00:30:38,010 --> 00:30:42,300
every single<font color="#CCCCCC"> contributor in github that</font>

976
00:30:40,740 --> 00:30:44,070
has ever submitted<font color="#E5E5E5"> a</font><font color="#CCCCCC"> PowerShell script</font>

977
00:30:42,300 --> 00:30:45,780
<font color="#CCCCCC">as of a couple months ago I</font><font color="#E5E5E5"> just want to</font>

978
00:30:44,070 --> 00:30:47,460
ask is<font color="#CCCCCC"> anyone in here</font><font color="#E5E5E5"> ever submitted a</font>

979
00:30:45,780 --> 00:30:48,570
<font color="#E5E5E5">PowerShell script to github or TechNet</font>

980
00:30:47,460 --> 00:30:51,540
or any these<font color="#CCCCCC"> places can</font><font color="#E5E5E5"> you just raise</font>

981
00:30:48,570 --> 00:30:52,919
your hand real<font color="#CCCCCC"> quick</font><font color="#E5E5E5"> awesome thank you</font>

982
00:30:51,540 --> 00:30:54,090
<font color="#E5E5E5">very much because</font><font color="#CCCCCC"> like you actually are</font>

983
00:30:52,920 --> 00:30:55,320
part<font color="#CCCCCC"> of this research your name is on</font>

984
00:30:54,090 --> 00:30:56,879
the slide your name is buried in the

985
00:30:55,320 --> 00:30:58,439
code<font color="#CCCCCC"> in</font><font color="#E5E5E5"> some interesting</font><font color="#CCCCCC"> places</font><font color="#E5E5E5"> but this</font>

986
00:30:56,880 --> 00:30:59,640
wouldn't<font color="#E5E5E5"> be possible without all the</font>

987
00:30:58,440 --> 00:31:00,930
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> PowerShell scripts</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font>

988
00:30:59,640 --> 00:31:03,150
out<font color="#CCCCCC"> there so seriously</font><font color="#E5E5E5"> thank</font><font color="#CCCCCC"> you very</font>

989
00:31:00,930 --> 00:31:04,020
much I don't read these right<font color="#E5E5E5"> now if we</font>

990
00:31:03,150 --> 00:31:06,720
have time<font color="#E5E5E5"> at the end we'll go through</font>

991
00:31:04,020 --> 00:31:07,950
<font color="#CCCCCC">that so we got a lot of scripts right</font>

992
00:31:06,720 --> 00:31:09,480
now<font color="#E5E5E5"> when we have a lot of scripts we</font>

993
00:31:07,950 --> 00:31:11,880
have to do something with<font color="#CCCCCC"> it</font><font color="#E5E5E5"> cuz it'd be</font>

994
00:31:09,480 --> 00:31:13,080
<font color="#E5E5E5">irresponsible not</font><font color="#CCCCCC"> to right so now if you</font>

995
00:31:11,880 --> 00:31:14,220
<font color="#E5E5E5">start looking</font><font color="#CCCCCC"> through all these scripts</font>

996
00:31:13,080 --> 00:31:17,100
<font color="#E5E5E5">you're gonna find some weird shenanigans</font>

997
00:31:14,220 --> 00:31:18,680
out there and one<font color="#E5E5E5"> of the ones</font><font color="#CCCCCC"> I'd like</font>

998
00:31:17,100 --> 00:31:21,870
to<font color="#E5E5E5"> highlight was just a really sad one</font>

999
00:31:18,680 --> 00:31:24,150
remove games<font color="#E5E5E5"> that</font><font color="#CCCCCC"> ps1 someone wrote this</font>

1000
00:31:21,870 --> 00:31:26,489
to go through<font color="#CCCCCC"> and kill games</font><font color="#E5E5E5"> running</font>

1001
00:31:24,150 --> 00:31:29,580
process even<font color="#E5E5E5"> nuke the directory</font><font color="#CCCCCC"> noise</font>

1002
00:31:26,490 --> 00:31:31,740
<font color="#CCCCCC">sad major buzzkill</font><font color="#E5E5E5"> but in all</font>

1003
00:31:29,580 --> 00:31:33,629
<font color="#E5E5E5">seriousness we got a lot</font><font color="#CCCCCC"> of scripts</font><font color="#E5E5E5"> how</font>

1004
00:31:31,740 --> 00:31:38,370
many four<font color="#E5E5E5"> hundred</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> eight thousand</font>

1005
00:31:33,630 --> 00:31:40,770
scripts<font color="#CCCCCC"> over 28,000 authors and the fun</font>

1006
00:31:38,370 --> 00:31:42,300
thing that<font color="#E5E5E5"> we did people like to think</font>

1007
00:31:40,770 --> 00:31:44,700
<font color="#CCCCCC">that hacking is like really</font><font color="#E5E5E5"> cool mr.</font>

1008
00:31:42,300 --> 00:31:46,590
robot yeah it's really fun like wear a

1009
00:31:44,700 --> 00:31:48,690
hoodie<font color="#E5E5E5"> at the end of the day what we had</font>

1010
00:31:46,590 --> 00:31:51,570
to do was we had to manually label<font color="#E5E5E5"> 7,000</font>

1011
00:31:48,690 --> 00:31:53,400
scripts which meant that<font color="#E5E5E5"> on the weekends</font>

1012
00:31:51,570 --> 00:31:55,590
<font color="#CCCCCC">you</font><font color="#E5E5E5"> know sit in front of the computer</font>

1013
00:31:53,400 --> 00:31:57,900
<font color="#E5E5E5">and notepad would pop up</font><font color="#CCCCCC"> and you scroll</font>

1014
00:31:55,590 --> 00:31:59,429
<font color="#CCCCCC">through the script and</font><font color="#E5E5E5"> be like yep that</font>

1015
00:31:57,900 --> 00:32:01,560
one looks<font color="#E5E5E5"> pretty office</font><font color="#CCCCCC"> gated let's mark</font>

1016
00:31:59,430 --> 00:32:03,690
those<font color="#E5E5E5"> off you skated next please and go</font>

1017
00:32:01,560 --> 00:32:05,490
through and do<font color="#CCCCCC"> that 7,000 times that's</font>

1018
00:32:03,690 --> 00:32:07,650
not<font color="#E5E5E5"> fun now why in the</font><font color="#CCCCCC"> world would we do</font>

1019
00:32:05,490 --> 00:32:09,090
<font color="#CCCCCC">that</font><font color="#E5E5E5"> one reason they said that someone</font>

1020
00:32:07,650 --> 00:32:11,010
<font color="#E5E5E5">else wouldn't have to so they could</font><font color="#CCCCCC"> just</font>

1021
00:32:09,090 --> 00:32:13,169
<font color="#E5E5E5">use the label and we did but if you</font>

1022
00:32:11,010 --> 00:32:15,030
think<font color="#E5E5E5"> back here on this approach of</font>

1023
00:32:13,170 --> 00:32:17,250
<font color="#E5E5E5">character frequency if we looked at</font>

1024
00:32:15,030 --> 00:32:19,379
<font color="#E5E5E5">everything under</font><font color="#CCCCCC"> 80% then we could say</font>

1025
00:32:17,250 --> 00:32:21,000
okay this<font color="#E5E5E5"> was pretty good most of what</font>

1026
00:32:19,380 --> 00:32:23,310
it was under 80%<font color="#CCCCCC"> was office gated right</font>

1027
00:32:21,000 --> 00:32:24,810
<font color="#E5E5E5">what we don't know is what about</font><font color="#CCCCCC"> are</font>

1028
00:32:23,310 --> 00:32:27,120
there any<font color="#E5E5E5"> office gated scripts above</font>

1029
00:32:24,810 --> 00:32:29,310
that<font color="#CCCCCC"> 80%</font><font color="#E5E5E5"> mark and short of looking at</font>

1030
00:32:27,120 --> 00:32:30,479
all<font color="#E5E5E5"> 3400 options when it</font><font color="#CCCCCC"> comes to</font>

1031
00:32:29,310 --> 00:32:32,220
actually trying<font color="#E5E5E5"> to think differently</font>

1032
00:32:30,480 --> 00:32:33,630
<font color="#CCCCCC">about this and applying some different</font>

1033
00:32:32,220 --> 00:32:36,450
techniques<font color="#CCCCCC"> we need to actually</font><font color="#E5E5E5"> have</font>

1034
00:32:33,630 --> 00:32:38,280
<font color="#E5E5E5">labeled data so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we know at the</font><font color="#CCCCCC"> end</font>

1035
00:32:36,450 --> 00:32:42,930
of the day did we detect all<font color="#E5E5E5"> the</font><font color="#CCCCCC"> things</font>

1036
00:32:38,280 --> 00:32:46,590
that<font color="#E5E5E5"> we labeled as bad I'm going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> keep</font>

1037
00:32:42,930 --> 00:32:48,450
you<font color="#E5E5E5"> on Ryan Cobb</font><font color="#CCCCCC"> put out a blog post</font>

1038
00:32:46,590 --> 00:32:50,310
<font color="#E5E5E5">basically taking taking some of these</font>

1039
00:32:48,450 --> 00:32:51,840
<font color="#E5E5E5">ideas</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> applying it and basically</font>

1040
00:32:50,310 --> 00:32:53,070
<font color="#E5E5E5">showing</font><font color="#CCCCCC"> that as you as you start to</font>

1041
00:32:51,840 --> 00:32:54,449
creep up and<font color="#E5E5E5"> look at higher and higher</font>

1042
00:32:53,070 --> 00:32:55,710
<font color="#E5E5E5">percentages you're gonna deal with more</font>

1043
00:32:54,450 --> 00:32:57,420
false<font color="#CCCCCC"> positives but that's where you're</font>

1044
00:32:55,710 --> 00:32:58,620
gonna<font color="#CCCCCC"> find some more</font><font color="#E5E5E5"> of the wins some</font>

1045
00:32:57,420 --> 00:33:01,770
more<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> obviously hated scripts that</font>

1046
00:32:58,620 --> 00:33:03,469
<font color="#CCCCCC">are more</font><font color="#E5E5E5"> similar</font><font color="#CCCCCC"> than not</font><font color="#E5E5E5"> so how does</font>

1047
00:33:01,770 --> 00:33:05,400
this character frequency analysis<font color="#E5E5E5"> scored</font>

1048
00:33:03,470 --> 00:33:07,950
<font color="#E5E5E5">the two things to look at here</font><font color="#CCCCCC"> are</font>

1049
00:33:05,400 --> 00:33:09,630
<font color="#E5E5E5">precision and recall and it's</font><font color="#CCCCCC"> 89</font><font color="#E5E5E5"> percent</font>

1050
00:33:07,950 --> 00:33:10,620
and<font color="#E5E5E5"> 37 percent</font><font color="#CCCCCC"> so precision means let's</font>

1051
00:33:09,630 --> 00:33:12,780
<font color="#E5E5E5">say we have a hundred thousand</font>

1052
00:33:10,620 --> 00:33:14,729
<font color="#CCCCCC">PowerShell scripts right</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> percent</font>

1053
00:33:12,780 --> 00:33:17,070
<font color="#CCCCCC">10</font><font color="#E5E5E5"> thousand of those are bad</font><font color="#CCCCCC"> their</font>

1054
00:33:14,730 --> 00:33:19,630
<font color="#CCCCCC">office gated</font><font color="#E5E5E5"> now if we ran if we run</font>

1055
00:33:17,070 --> 00:33:20,710
this tool<font color="#E5E5E5"> and it says</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> these are the</font>

1056
00:33:19,630 --> 00:33:22,030
thousand scripts<font color="#E5E5E5"> out of the whole</font>

1057
00:33:20,710 --> 00:33:24,520
<font color="#E5E5E5">hundred thousand</font><font color="#CCCCCC"> that are office gated</font>

1058
00:33:22,030 --> 00:33:26,680
<font color="#E5E5E5">let's say every single</font><font color="#CCCCCC"> one at return it</font>

1059
00:33:24,520 --> 00:33:28,570
was correct<font color="#CCCCCC"> its precision would be a</font>

1060
00:33:26,680 --> 00:33:31,480
<font color="#E5E5E5">hundred percent</font><font color="#CCCCCC"> so basically</font><font color="#E5E5E5"> every</font><font color="#CCCCCC"> time</font>

1061
00:33:28,570 --> 00:33:33,550
this model says it's bad it's<font color="#CCCCCC"> bad</font><font color="#E5E5E5"> but it</font>

1062
00:33:31,480 --> 00:33:35,770
missed<font color="#CCCCCC"> 90% of them out there that would</font>

1063
00:33:33,550 --> 00:33:37,899
be<font color="#CCCCCC"> a</font><font color="#E5E5E5"> really low recall score it'd be a</font>

1064
00:33:35,770 --> 00:33:39,370
<font color="#E5E5E5">ten percent recall score so in this case</font>

1065
00:33:37,900 --> 00:33:42,130
<font color="#E5E5E5">ninety percent precision is pretty good</font>

1066
00:33:39,370 --> 00:33:43,419
but 37<font color="#E5E5E5"> percent recall means it barely</font>

1067
00:33:42,130 --> 00:33:44,860
got over<font color="#CCCCCC"> a third of</font><font color="#E5E5E5"> the office</font><font color="#CCCCCC"> SCADA</font>

1068
00:33:43,420 --> 00:33:48,910
scripts<font color="#E5E5E5"> out there so we need something</font>

1069
00:33:44,860 --> 00:33:49,750
better so<font color="#E5E5E5"> surely</font><font color="#CCCCCC"> we can do better so how</font>

1070
00:33:48,910 --> 00:33:52,570
<font color="#E5E5E5">might we do better</font>

1071
00:33:49,750 --> 00:33:54,370
well<font color="#E5E5E5"> PowerShell there's a lot</font><font color="#CCCCCC"> more</font>

1072
00:33:52,570 --> 00:33:55,600
features<font color="#E5E5E5"> in the data science community</font>

1073
00:33:54,370 --> 00:33:57,189
<font color="#E5E5E5">information retrieval community they</font>

1074
00:33:55,600 --> 00:34:00,040
would<font color="#E5E5E5"> say these characters counts and</font>

1075
00:33:57,190 --> 00:34:01,690
frequencies are features so PowerShell

1076
00:34:00,040 --> 00:34:03,790
when it looks at itself<font color="#CCCCCC"> it basically</font>

1077
00:34:01,690 --> 00:34:05,200
sees I know that<font color="#CCCCCC"> this is this command</font>

1078
00:34:03,790 --> 00:34:06,070
line<font color="#E5E5E5"> I'm calling a generic I know that</font>

1079
00:34:05,200 --> 00:34:07,840
these<font color="#E5E5E5"> are</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> left</font><font color="#CCCCCC"> parenthesis right</font>

1080
00:34:06,070 --> 00:34:09,969
<font color="#E5E5E5">parenthesis</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this is an object all</font>

1081
00:34:07,840 --> 00:34:11,739
this kind of<font color="#E5E5E5"> stuff but in PowerShell 3</font>

1082
00:34:09,969 --> 00:34:14,080
and later<font color="#E5E5E5"> what became exposed to anyone</font>

1083
00:34:11,739 --> 00:34:16,089
<font color="#E5E5E5">is what's called</font><font color="#CCCCCC"> an AST or the</font><font color="#E5E5E5"> abstract</font>

1084
00:34:14,080 --> 00:34:18,668
<font color="#E5E5E5">syntax tree</font><font color="#CCCCCC"> which basically</font><font color="#E5E5E5"> looks like</font>

1085
00:34:16,090 --> 00:34:19,960
<font color="#E5E5E5">this</font><font color="#CCCCCC"> so not</font><font color="#E5E5E5"> only does PowerShell is able</font>

1086
00:34:18,668 --> 00:34:21,279
to tokenize each piece<font color="#E5E5E5"> of the command</font>

1087
00:34:19,960 --> 00:34:23,980
but it<font color="#E5E5E5"> actually knows the relationship</font>

1088
00:34:21,280 --> 00:34:26,350
of those<font color="#E5E5E5"> commands now why is this matter</font>

1089
00:34:23,980 --> 00:34:28,449
for<font color="#E5E5E5"> us this allows us had to get insane</font>

1090
00:34:26,350 --> 00:34:30,310
features and<font color="#E5E5E5"> really focus in because you</font>

1091
00:34:28,449 --> 00:34:31,779
could say<font color="#CCCCCC"> ok character frequency makes</font>

1092
00:34:30,310 --> 00:34:32,980
sense you can have really obfuscated

1093
00:34:31,780 --> 00:34:34,480
stuff<font color="#CCCCCC"> of</font><font color="#E5E5E5"> always</font><font color="#CCCCCC"> tic marks and have your</font>

1094
00:34:32,980 --> 00:34:36,040
<font color="#CCCCCC">evil code and then you can literally</font>

1095
00:34:34,480 --> 00:34:37,750
<font color="#E5E5E5">just copy and paste the entire</font><font color="#CCCCCC"> work of</font>

1096
00:34:36,040 --> 00:34:39,489
Shakespeare<font color="#CCCCCC"> and then that's going</font><font color="#E5E5E5"> to</font>

1097
00:34:37,750 --> 00:34:41,110
really throw off<font color="#E5E5E5"> your overall you know</font>

1098
00:34:39,489 --> 00:34:42,459
character frequency analysis because

1099
00:34:41,110 --> 00:34:43,899
it's<font color="#CCCCCC"> going to look like</font><font color="#E5E5E5"> normal</font><font color="#CCCCCC"> English</font>

1100
00:34:42,460 --> 00:34:45,490
right<font color="#E5E5E5"> well that's the whole point</font><font color="#CCCCCC"> why</font>

1101
00:34:43,899 --> 00:34:47,620
don't we drill<font color="#CCCCCC"> down and start to piece</font>

1102
00:34:45,489 --> 00:34:50,199
and start<font color="#CCCCCC"> to gather features from each</font>

1103
00:34:47,620 --> 00:34:52,719
<font color="#E5E5E5">kind of command</font><font color="#CCCCCC"> letour each kind</font><font color="#E5E5E5"> of</font>

1104
00:34:50,199 --> 00:34:55,149
<font color="#E5E5E5">token so that we have to force someone</font>

1105
00:34:52,719 --> 00:34:58,330
to basically put in bad data in<font color="#E5E5E5"> every</font>

1106
00:34:55,149 --> 00:35:00,370
<font color="#E5E5E5">single place that we're looking there's</font>

1107
00:34:58,330 --> 00:35:02,350
a great tool<font color="#CCCCCC"> there called a ast</font><font color="#E5E5E5"> Explorer</font>

1108
00:35:00,370 --> 00:35:03,640
which<font color="#E5E5E5"> is just a little GUI or you can</font>

1109
00:35:02,350 --> 00:35:05,920
basically paste in any kind of<font color="#E5E5E5"> code you</font>

1110
00:35:03,640 --> 00:35:08,799
want<font color="#E5E5E5"> and</font><font color="#CCCCCC"> explore kind of how the ast</font>

1111
00:35:05,920 --> 00:35:10,750
structure is so with this we were<font color="#E5E5E5"> able</font>

1112
00:35:08,800 --> 00:35:12,400
<font color="#E5E5E5">to extract things like distribution of</font>

1113
00:35:10,750 --> 00:35:14,530
<font color="#CCCCCC">ast types so again out of the</font><font color="#E5E5E5"> whole</font>

1114
00:35:12,400 --> 00:35:15,850
script<font color="#E5E5E5"> let's say 90% of this entire</font>

1115
00:35:14,530 --> 00:35:18,850
script is nothing but commandlets<font color="#CCCCCC"> or</font>

1116
00:35:15,850 --> 00:35:20,529
strings or<font color="#E5E5E5"> arrays or stuff like that</font><font color="#CCCCCC"> so</font>

1117
00:35:18,850 --> 00:35:22,839
we<font color="#CCCCCC"> did just</font><font color="#E5E5E5"> a straight-up distribution</font>

1118
00:35:20,530 --> 00:35:24,370
of those types assignment binary

1119
00:35:22,840 --> 00:35:26,230
invocation operators we did an array

1120
00:35:24,370 --> 00:35:27,279
size<font color="#E5E5E5"> range again a lot of arrays aren't</font>

1121
00:35:26,230 --> 00:35:29,140
<font color="#E5E5E5">that big but if you have</font><font color="#CCCCCC"> rays of like</font>

1122
00:35:27,280 --> 00:35:31,150
thousands of characters<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> that shell</font>

1123
00:35:29,140 --> 00:35:33,160
<font color="#E5E5E5">code that's kind of odd right and then</font>

1124
00:35:31,150 --> 00:35:35,200
for<font color="#E5E5E5"> every kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> AST type again</font>

1125
00:35:33,160 --> 00:35:37,899
<font color="#CCCCCC">commandlets</font><font color="#E5E5E5"> string method all</font><font color="#CCCCCC"> the stuff</font>

1126
00:35:35,200 --> 00:35:39,700
function<font color="#E5E5E5"> comments we basically did</font>

1127
00:35:37,900 --> 00:35:41,349
character frequency on each of those

1128
00:35:39,700 --> 00:35:43,450
individually as well<font color="#E5E5E5"> as</font><font color="#CCCCCC"> the entire</font>

1129
00:35:41,349 --> 00:35:44,710
script<font color="#E5E5E5"> itself so we did character</font>

1130
00:35:43,450 --> 00:35:47,649
frequency we also did<font color="#E5E5E5"> things like</font>

1131
00:35:44,710 --> 00:35:49,690
entropy<font color="#CCCCCC"> we did the length maximum medium</font>

1132
00:35:47,650 --> 00:35:51,640
mode range average<font color="#E5E5E5"> white space density</font>

1133
00:35:49,690 --> 00:35:53,619
character<font color="#E5E5E5"> casing again randomized casing</font>

1134
00:35:51,640 --> 00:35:55,029
and<font color="#E5E5E5"> a lot of</font><font color="#CCCCCC"> frameworks if you see 50 50</font>

1135
00:35:53,619 --> 00:35:56,200
<font color="#CCCCCC">uppercase lowercase</font><font color="#E5E5E5"> that's randomized</font>

1136
00:35:55,030 --> 00:35:58,240
casing<font color="#E5E5E5"> because typically it's gonna be</font>

1137
00:35:56,200 --> 00:36:00,129
like 12 or<font color="#CCCCCC"> something</font><font color="#E5E5E5"> all these different</font>

1138
00:35:58,240 --> 00:36:01,299
things<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> basically push them all</font>

1139
00:36:00,130 --> 00:36:03,670
together<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that for any input</font>

1140
00:36:01,299 --> 00:36:06,190
<font color="#CCCCCC">PowerShell command</font><font color="#E5E5E5"> or script we get</font>

1141
00:36:03,670 --> 00:36:07,450
almost<font color="#CCCCCC"> 5000 features</font><font color="#E5E5E5"> there's a lot more</font>

1142
00:36:06,190 --> 00:36:08,799
than just<font color="#E5E5E5"> the alpha numerics right and</font>

1143
00:36:07,450 --> 00:36:10,270
so we were really<font color="#CCCCCC"> excited about this</font>

1144
00:36:08,799 --> 00:36:12,220
spend a lot of<font color="#E5E5E5"> time</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> getting as many</font>

1145
00:36:10,270 --> 00:36:13,990
features<font color="#CCCCCC"> and possibly could</font><font color="#E5E5E5"> never once</font>

1146
00:36:12,220 --> 00:36:15,339
<font color="#E5E5E5">did we say this feature is bad or this</font>

1147
00:36:13,990 --> 00:36:17,500
feature isn't<font color="#E5E5E5"> we just said I just</font><font color="#CCCCCC"> want</font>

1148
00:36:15,339 --> 00:36:18,849
the data<font color="#E5E5E5"> blue</font><font color="#CCCCCC"> neurons crap what we're</font>

1149
00:36:17,500 --> 00:36:20,950
gonna do with<font color="#CCCCCC"> 5,000 features</font><font color="#E5E5E5"> all right</font>

1150
00:36:18,849 --> 00:36:23,770
like how do we<font color="#E5E5E5"> actually you know make</font>

1151
00:36:20,950 --> 00:36:26,200
<font color="#CCCCCC">meaningful use of this data</font><font color="#E5E5E5"> so basically</font>

1152
00:36:23,770 --> 00:36:27,400
we have here is that of<font color="#E5E5E5"> these</font><font color="#CCCCCC"> 5000</font>

1153
00:36:26,200 --> 00:36:29,529
features some of<font color="#CCCCCC"> these features matter a</font>

1154
00:36:27,400 --> 00:36:30,940
lot<font color="#E5E5E5"> more than others and instead of us</font>

1155
00:36:29,530 --> 00:36:33,970
<font color="#E5E5E5">going through and figuring out which one</font>

1156
00:36:30,940 --> 00:36:35,730
matters more than<font color="#E5E5E5"> the other we used a</font>

1157
00:36:33,970 --> 00:36:39,910
little<font color="#E5E5E5"> thing called logistic regression</font>

1158
00:36:35,730 --> 00:36:41,140
<font color="#E5E5E5">so basically you have the coloring is a</font>

1159
00:36:39,910 --> 00:36:43,210
little bit<font color="#E5E5E5"> unfortunate but basically you</font>

1160
00:36:41,140 --> 00:36:44,319
have<font color="#CCCCCC"> a logit function to say like again</font>

1161
00:36:43,210 --> 00:36:47,109
if you have like thousands of

1162
00:36:44,319 --> 00:36:49,029
<font color="#E5E5E5">Commandments in in in one script but</font>

1163
00:36:47,109 --> 00:36:50,230
only like<font color="#CCCCCC"> ten comments</font><font color="#E5E5E5"> like you can't</font>

1164
00:36:49,029 --> 00:36:51,309
deal<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> range like that so we use</font>

1165
00:36:50,230 --> 00:36:53,109
something called a<font color="#E5E5E5"> logit function to</font>

1166
00:36:51,309 --> 00:36:54,760
<font color="#E5E5E5">basically bring all the values between 0</font>

1167
00:36:53,109 --> 00:36:58,348
<font color="#E5E5E5">and</font><font color="#CCCCCC"> 1 and kind of smush it down on this</font>

1168
00:36:54,760 --> 00:37:02,799
<font color="#E5E5E5">plot</font><font color="#CCCCCC"> and then we use linear regression</font>

1169
00:36:58,349 --> 00:37:04,599
<font color="#E5E5E5">so what does that look like basically we</font>

1170
00:37:02,799 --> 00:37:06,880
go through and<font color="#E5E5E5"> we take all</font><font color="#CCCCCC"> 5,000</font>

1171
00:37:04,599 --> 00:37:08,589
features and we have a weight that

1172
00:37:06,880 --> 00:37:10,630
weight is basically saying feature<font color="#CCCCCC"> 1 is</font>

1173
00:37:08,589 --> 00:37:12,609
this important<font color="#E5E5E5"> or feature 2 is this not</font>

1174
00:37:10,630 --> 00:37:14,740
important or feature 558 is this

1175
00:37:12,609 --> 00:37:17,710
important<font color="#E5E5E5"> and so for every</font><font color="#CCCCCC"> single</font><font color="#E5E5E5"> input</font>

1176
00:37:14,740 --> 00:37:19,058
script<font color="#E5E5E5"> or command we extract all 5,000</font>

1177
00:37:17,710 --> 00:37:20,589
features and then for each<font color="#E5E5E5"> feature we</font>

1178
00:37:19,059 --> 00:37:22,480
multiply it<font color="#E5E5E5"> by</font><font color="#CCCCCC"> its weight to</font><font color="#E5E5E5"> say how</font>

1179
00:37:20,589 --> 00:37:24,759
important are you<font color="#E5E5E5"> we then add up all</font>

1180
00:37:22,480 --> 00:37:26,440
<font color="#E5E5E5">those results and then if it's over a</font>

1181
00:37:24,760 --> 00:37:27,730
certain<font color="#E5E5E5"> point then it's</font><font color="#CCCCCC"> octave skated if</font>

1182
00:37:26,440 --> 00:37:29,859
it's below<font color="#CCCCCC"> a certain point it's not</font>

1183
00:37:27,730 --> 00:37:31,630
obfuscated<font color="#CCCCCC"> so now</font><font color="#E5E5E5"> again it comes back to</font>

1184
00:37:29,859 --> 00:37:33,190
<font color="#E5E5E5">well how do we decide the values of the</font>

1185
00:37:31,630 --> 00:37:36,520
weights<font color="#E5E5E5"> how important is one feature</font>

1186
00:37:33,190 --> 00:37:38,049
over the other we let the model tell us

1187
00:37:36,520 --> 00:37:40,599
that I<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to mean by that is we take</font>

1188
00:37:38,049 --> 00:37:43,450
that<font color="#CCCCCC"> labeled data</font><font color="#E5E5E5"> you know</font><font color="#CCCCCC"> 7,000 scripts</font>

1189
00:37:40,599 --> 00:37:45,220
<font color="#E5E5E5">and</font><font color="#CCCCCC"> we basically through thousands of</font>

1190
00:37:43,450 --> 00:37:46,930
iterations send it<font color="#E5E5E5"> through and say</font><font color="#CCCCCC"> ok</font>

1191
00:37:45,220 --> 00:37:48,490
<font color="#E5E5E5">pull all the features and we start with</font>

1192
00:37:46,930 --> 00:37:50,078
<font color="#E5E5E5">all the weights being exactly the same</font>

1193
00:37:48,490 --> 00:37:51,520
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> on a level</font><font color="#E5E5E5"> playing</font><font color="#CCCCCC"> field</font><font color="#E5E5E5"> and</font>

1194
00:37:50,079 --> 00:37:52,990
it goes through and<font color="#CCCCCC"> it pulls</font><font color="#E5E5E5"> out all</font><font color="#CCCCCC"> the</font>

1195
00:37:51,520 --> 00:37:54,670
<font color="#E5E5E5">features does</font><font color="#CCCCCC"> although</font><font color="#E5E5E5"> multiplications</font>

1196
00:37:52,990 --> 00:37:56,049
and it says are<font color="#CCCCCC"> you over</font><font color="#E5E5E5"> one or are you</font>

1197
00:37:54,670 --> 00:37:57,970
less<font color="#CCCCCC"> than one are you off you</font><font color="#E5E5E5"> skated or</font>

1198
00:37:56,050 --> 00:37:59,470
not it makes<font color="#E5E5E5"> that decision and then it</font>

1199
00:37:57,970 --> 00:38:00,819
says<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so that this is labeled data I</font>

1200
00:37:59,470 --> 00:38:02,740
happen to know<font color="#E5E5E5"> whether I was right or</font>

1201
00:38:00,819 --> 00:38:05,079
not<font color="#CCCCCC"> now whenever</font><font color="#E5E5E5"> it was right it's all</font>

1202
00:38:02,740 --> 00:38:06,729
<font color="#E5E5E5">good</font><font color="#CCCCCC"> but whenever</font><font color="#E5E5E5"> it was wrong</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> looks</font>

1203
00:38:05,079 --> 00:38:08,470
and says<font color="#E5E5E5"> okay what weights contributed</font>

1204
00:38:06,730 --> 00:38:10,660
the most to<font color="#CCCCCC"> me</font><font color="#E5E5E5"> being wrong about this</font>

1205
00:38:08,470 --> 00:38:12,129
<font color="#E5E5E5">and then adjust those the most either up</font>

1206
00:38:10,660 --> 00:38:14,140
<font color="#E5E5E5">or</font><font color="#CCCCCC"> down and</font><font color="#E5E5E5"> then the weights that were</font>

1207
00:38:12,130 --> 00:38:15,190
<font color="#CCCCCC">released</font><font color="#E5E5E5"> it adjusts those the least and</font>

1208
00:38:14,140 --> 00:38:17,140
<font color="#E5E5E5">so it keeps kind of tuning and tweaking</font>

1209
00:38:15,190 --> 00:38:18,609
<font color="#E5E5E5">each thing through thousands and</font>

1210
00:38:17,140 --> 00:38:19,868
thousands<font color="#CCCCCC"> of thousands</font><font color="#E5E5E5"> of iterations and</font>

1211
00:38:18,609 --> 00:38:21,308
as you can<font color="#E5E5E5"> kind of see in this</font>

1212
00:38:19,869 --> 00:38:23,380
concentric circle what<font color="#CCCCCC"> kinda gets closer</font>

1213
00:38:21,309 --> 00:38:26,230
and closer<font color="#E5E5E5"> to the truth as</font><font color="#CCCCCC"> it moves all</font>

1214
00:38:23,380 --> 00:38:27,490
these<font color="#E5E5E5"> weights up and down so how does</font>

1215
00:38:26,230 --> 00:38:29,079
this<font color="#E5E5E5"> actually work at the end of the day</font>

1216
00:38:27,490 --> 00:38:31,299
<font color="#CCCCCC">we'll gain remember our cosine</font>

1217
00:38:29,079 --> 00:38:34,660
similarity we had<font color="#CCCCCC"> 89%</font><font color="#E5E5E5"> precision and</font>

1218
00:38:31,300 --> 00:38:36,040
recall is<font color="#CCCCCC"> 37%</font><font color="#E5E5E5"> now for</font><font color="#CCCCCC"> anyone who's not a</font>

1219
00:38:34,660 --> 00:38:39,430
blue team<font color="#CCCCCC"> err in the house this next</font>

1220
00:38:36,040 --> 00:38:40,569
slide<font color="#E5E5E5"> is</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> equivalent of getting da so</font>

1221
00:38:39,430 --> 00:38:42,250
we're gonna get really excited<font color="#E5E5E5"> about</font>

1222
00:38:40,569 --> 00:38:45,520
this<font color="#E5E5E5"> so just let you</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> on this our</font>

1223
00:38:42,250 --> 00:38:48,730
model performed at 96<font color="#E5E5E5"> percent</font><font color="#CCCCCC"> precision</font>

1224
00:38:45,520 --> 00:38:51,190
in 94 percent recall which we were

1225
00:38:48,730 --> 00:38:55,510
really<font color="#CCCCCC"> excited about</font><font color="#E5E5E5"> and false positives</font>

1226
00:38:51,190 --> 00:38:57,190
were 0.01<font color="#E5E5E5"> so this model is literally</font><font color="#CCCCCC"> ten</font>

1227
00:38:55,510 --> 00:38:59,170
<font color="#CCCCCC">times better at finding off</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> ciated</font>

1228
00:38:57,190 --> 00:39:02,160
code<font color="#E5E5E5"> with half the false positives</font><font color="#CCCCCC"> so</font>

1229
00:38:59,170 --> 00:39:04,540
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> really really excited</font><font color="#CCCCCC"> about this</font>

1230
00:39:02,160 --> 00:39:07,058
now you may<font color="#E5E5E5"> step back and say okay</font><font color="#CCCCCC"> what</font>

1231
00:39:04,540 --> 00:39:09,190
about<font color="#E5E5E5"> what about sketchy stuff right</font>

1232
00:39:07,059 --> 00:39:10,299
like<font color="#CCCCCC"> occupation there's kind of a</font>

1233
00:39:09,190 --> 00:39:11,619
spectrum<font color="#CCCCCC"> right like something to be</font>

1234
00:39:10,299 --> 00:39:13,270
really<font color="#CCCCCC"> really off the</font><font color="#E5E5E5"> skated</font><font color="#CCCCCC"> like the</font>

1235
00:39:11,619 --> 00:39:14,440
thing on the<font color="#CCCCCC"> left whether it's just all</font>

1236
00:39:13,270 --> 00:39:15,549
special characters<font color="#E5E5E5"> but then there can be</font>

1237
00:39:14,440 --> 00:39:17,559
some<font color="#CCCCCC"> other things where it's like</font><font color="#E5E5E5"> I</font>

1238
00:39:15,549 --> 00:39:19,599
don't<font color="#CCCCCC"> think that's bad</font><font color="#E5E5E5"> but can't want a</font>

1239
00:39:17,559 --> 00:39:21,099
second look so we<font color="#E5E5E5"> actually went back</font><font color="#CCCCCC"> and</font>

1240
00:39:19,599 --> 00:39:22,210
kind of<font color="#E5E5E5"> labeled</font><font color="#CCCCCC"> things as like sketchy</font>

1241
00:39:21,099 --> 00:39:24,369
and if you think about<font color="#E5E5E5"> from this way</font>

1242
00:39:22,210 --> 00:39:26,650
it's<font color="#E5E5E5"> like if you had the world's best</font><font color="#CCCCCC"> in</font>

1243
00:39:24,369 --> 00:39:28,809
<font color="#CCCCCC">turn this</font><font color="#E5E5E5"> in turn would be the one to go</font>

1244
00:39:26,650 --> 00:39:30,520
around and<font color="#E5E5E5"> say hey I don't think</font><font color="#CCCCCC"> this is</font>

1245
00:39:28,809 --> 00:39:32,470
bad<font color="#E5E5E5"> but I'd appreciate</font><font color="#CCCCCC"> it if</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> took a</font>

1246
00:39:30,520 --> 00:39:34,990
second look<font color="#CCCCCC"> that's kind of</font><font color="#E5E5E5"> the approach</font>

1247
00:39:32,470 --> 00:39:36,848
<font color="#E5E5E5">that we took and so if we start labeling</font>

1248
00:39:34,990 --> 00:39:39,490
sketchy stuff<font color="#E5E5E5"> and we'll actually see</font>

1249
00:39:36,849 --> 00:39:41,470
<font color="#E5E5E5">here is that overall it performed at 88</font>

1250
00:39:39,490 --> 00:39:44,200
and 89 percent<font color="#CCCCCC"> so basically it was wrong</font>

1251
00:39:41,470 --> 00:39:46,209
a lot but it<font color="#CCCCCC"> actually captured 97</font>

1252
00:39:44,200 --> 00:39:47,919
<font color="#CCCCCC">percent of the evil that</font><font color="#E5E5E5"> was out</font><font color="#CCCCCC"> there</font>

1253
00:39:46,210 --> 00:39:49,839
as opposed to<font color="#E5E5E5"> the 94 so what that means</font>

1254
00:39:47,920 --> 00:39:52,690
is that if you want like the super high

1255
00:39:49,839 --> 00:39:54,640
confidence of the stuff that<font color="#CCCCCC"> was</font><font color="#E5E5E5"> labeled</font>

1256
00:39:52,690 --> 00:39:56,500
<font color="#CCCCCC">is really really obfuscated then you're</font>

1257
00:39:54,640 --> 00:39:57,490
gonna get<font color="#E5E5E5"> that 94 percent 95</font><font color="#CCCCCC"> percent and</font>

1258
00:39:56,500 --> 00:39:58,970
<font color="#E5E5E5">then the tool that's basically the</font>

1259
00:39:57,490 --> 00:40:00,529
default<font color="#E5E5E5"> it</font><font color="#CCCCCC"> goes for high</font><font color="#E5E5E5"> confidence</font>

1260
00:39:58,970 --> 00:40:02,060
first but then if you<font color="#E5E5E5"> want to cast a</font>

1261
00:40:00,530 --> 00:40:03,860
wider net and say yeah I'm okay to get

1262
00:40:02,060 --> 00:40:05,360
<font color="#E5E5E5">some sketchy</font><font color="#CCCCCC"> stuff as well</font><font color="#E5E5E5"> I'm willing</font>

1263
00:40:03,860 --> 00:40:06,620
<font color="#CCCCCC">to weed through</font><font color="#E5E5E5"> some false</font><font color="#CCCCCC"> positives and</font>

1264
00:40:05,360 --> 00:40:08,090
find some<font color="#E5E5E5"> more stuff</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> maybe I'm</font>

1265
00:40:06,620 --> 00:40:12,170
missing in the other model then<font color="#E5E5E5"> you can</font>

1266
00:40:08,090 --> 00:40:14,720
kind of do<font color="#E5E5E5"> that wider net approach so</font>

1267
00:40:12,170 --> 00:40:17,000
what about other algorithms so again not

1268
00:40:14,720 --> 00:40:18,770
being<font color="#CCCCCC"> a data science person</font><font color="#E5E5E5"> with this</font>

1269
00:40:17,000 --> 00:40:20,270
<font color="#CCCCCC">labeled</font><font color="#E5E5E5"> data set you can take this and</font>

1270
00:40:18,770 --> 00:40:22,160
<font color="#E5E5E5">plug</font><font color="#CCCCCC"> it into any kind of like machine</font>

1271
00:40:20,270 --> 00:40:23,240
learning studio that<font color="#CCCCCC"> you want</font><font color="#E5E5E5"> so Lee Hom</font>

1272
00:40:22,160 --> 00:40:24,890
spent a<font color="#CCCCCC"> little bit</font><font color="#E5E5E5"> of time doing this</font>

1273
00:40:23,240 --> 00:40:26,930
and<font color="#E5E5E5"> testing out tons of other algorithms</font>

1274
00:40:24,890 --> 00:40:29,930
to say like did our approach actually

1275
00:40:26,930 --> 00:40:31,669
fare well against all the others<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it</font>

1276
00:40:29,930 --> 00:40:33,290
<font color="#CCCCCC">actually did it was ended up being</font>

1277
00:40:31,670 --> 00:40:36,220
almost<font color="#E5E5E5"> tied with one of the other ones</font>

1278
00:40:33,290 --> 00:40:38,330
<font color="#CCCCCC">but just a little bit</font><font color="#E5E5E5"> better</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so</font>

1279
00:40:36,220 --> 00:40:40,490
again<font color="#E5E5E5"> you don't</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to have some fancy</font>

1280
00:40:38,330 --> 00:40:43,009
<font color="#E5E5E5">studio like</font><font color="#CCCCCC"> this to do</font><font color="#E5E5E5"> what we're</font><font color="#CCCCCC"> doing</font>

1281
00:40:40,490 --> 00:40:45,649
<font color="#CCCCCC">we actually did all this by hand</font><font color="#E5E5E5"> and</font>

1282
00:40:43,010 --> 00:40:47,000
it's all out there<font color="#E5E5E5"> open source on github</font>

1283
00:40:45,650 --> 00:40:51,010
<font color="#E5E5E5">for anyone to be able to take that</font><font color="#CCCCCC"> same</font>

1284
00:40:47,000 --> 00:40:54,740
data<font color="#E5E5E5"> and do cool</font><font color="#CCCCCC"> stuff with</font><font color="#E5E5E5"> it so a</font>

1285
00:40:51,010 --> 00:40:55,910
quick demo of the tool<font color="#E5E5E5"> so there's three</font>

1286
00:40:54,740 --> 00:40:57,589
parts<font color="#E5E5E5"> of the tool this first one</font>

1287
00:40:55,910 --> 00:40:59,180
<font color="#E5E5E5">literally has nothing</font><font color="#CCCCCC"> to do with</font><font color="#E5E5E5"> finding</font>

1288
00:40:57,590 --> 00:41:01,070
evil<font color="#E5E5E5"> it's just all about ASCII art</font>

1289
00:40:59,180 --> 00:41:02,779
<font color="#E5E5E5">because he doesn't like ASCII art so</font>

1290
00:41:01,070 --> 00:41:04,010
it's colored ASCII art it's just<font color="#CCCCCC"> doing</font>

1291
00:41:02,780 --> 00:41:05,180
like<font color="#E5E5E5"> a quick little demo</font><font color="#CCCCCC"> of like here's</font>

1292
00:41:04,010 --> 00:41:06,920
the command here's some of the kind<font color="#E5E5E5"> of</font>

1293
00:41:05,180 --> 00:41:09,529
extractions of feature extractions that

1294
00:41:06,920 --> 00:41:11,480
<font color="#E5E5E5">we do over 5,000 features less than 300</font>

1295
00:41:09,530 --> 00:41:12,890
milliseconds for much<font color="#E5E5E5"> powershell scripts</font>

1296
00:41:11,480 --> 00:41:15,980
blah blah blah

1297
00:41:12,890 --> 00:41:17,330
and here's the interactive<font color="#E5E5E5"> menu here so</font>

1298
00:41:15,980 --> 00:41:19,190
basically<font color="#E5E5E5"> the things to keep in mind are</font>

1299
00:41:17,330 --> 00:41:21,770
<font color="#E5E5E5">you have some options here one</font><font color="#CCCCCC"> is</font>

1300
00:41:19,190 --> 00:41:23,330
<font color="#E5E5E5">tutorial which is a glorified colored</font>

1301
00:41:21,770 --> 00:41:24,530
readme<font color="#CCCCCC"> well she doesn't like colored</font>

1302
00:41:23,330 --> 00:41:25,370
<font color="#CCCCCC">read Me's right so if you</font><font color="#E5E5E5"> don't really</font>

1303
00:41:24,530 --> 00:41:27,500
<font color="#E5E5E5">read me on github</font>

1304
00:41:25,370 --> 00:41:29,150
you just do tutorial fun facts again we

1305
00:41:27,500 --> 00:41:31,580
spent a ton<font color="#CCCCCC"> of time going through a ton</font>

1306
00:41:29,150 --> 00:41:33,590
of data<font color="#E5E5E5"> like</font><font color="#CCCCCC"> 4 gigs</font><font color="#E5E5E5"> uncompressed</font>

1307
00:41:31,580 --> 00:41:35,900
PowerShell scripts like<font color="#E5E5E5"> it is a lot of</font>

1308
00:41:33,590 --> 00:41:37,160
data<font color="#CCCCCC"> and there's a lot</font><font color="#E5E5E5"> of fun things</font>

1309
00:41:35,900 --> 00:41:38,300
that<font color="#E5E5E5"> you'll learn</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> that data and so</font>

1310
00:41:37,160 --> 00:41:40,580
there's some fun facts in there some

1311
00:41:38,300 --> 00:41:41,660
random<font color="#CCCCCC"> phone backs ASCII art</font><font color="#E5E5E5"> and you go</font>

1312
00:41:40,580 --> 00:41:43,069
<font color="#E5E5E5">through that much data there's some</font>

1313
00:41:41,660 --> 00:41:45,049
really creative<font color="#E5E5E5"> people</font><font color="#CCCCCC"> out there who are</font>

1314
00:41:43,070 --> 00:41:46,460
way more artistic than<font color="#E5E5E5"> me so we just</font>

1315
00:41:45,050 --> 00:41:48,020
went<font color="#E5E5E5"> and kind</font><font color="#CCCCCC"> of you know wrote some</font>

1316
00:41:46,460 --> 00:41:50,330
URLs to<font color="#E5E5E5"> go through and find</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> ASCII</font><font color="#CCCCCC"> art</font>

1317
00:41:48,020 --> 00:41:52,520
stuff<font color="#CCCCCC"> I spent an entire weekend</font><font color="#E5E5E5"> doing</font>

1318
00:41:50,330 --> 00:41:54,170
nothing like like on my exercise bike at

1319
00:41:52,520 --> 00:41:55,759
my gym like going through ASCII art like

1320
00:41:54,170 --> 00:41:57,470
<font color="#CCCCCC">I</font><font color="#E5E5E5"> feels like you're such a nerd</font>

1321
00:41:55,760 --> 00:41:58,760
so anyways there's random<font color="#CCCCCC"> samplings I</font>

1322
00:41:57,470 --> 00:42:00,890
<font color="#CCCCCC">asked you Arthur you can check out you</font>

1323
00:41:58,760 --> 00:42:02,810
can also do a fun set of quotes<font color="#CCCCCC"> and then</font>

1324
00:42:00,890 --> 00:42:04,640
<font color="#E5E5E5">also credit so again every</font><font color="#CCCCCC"> single of</font>

1325
00:42:02,810 --> 00:42:06,560
github contributor for any<font color="#CCCCCC"> PowerShell</font>

1326
00:42:04,640 --> 00:42:07,850
project<font color="#E5E5E5"> as of a couple</font><font color="#CCCCCC"> months ago your</font>

1327
00:42:06,560 --> 00:42:09,259
<font color="#E5E5E5">name is in here</font><font color="#CCCCCC"> and I'll go</font><font color="#E5E5E5"> and randomly</font>

1328
00:42:07,850 --> 00:42:11,150
<font color="#E5E5E5">come display hey thanks to these 10</font>

1329
00:42:09,260 --> 00:42:12,980
contributors<font color="#E5E5E5"> and there's also a sub list</font>

1330
00:42:11,150 --> 00:42:14,090
in there of<font color="#E5E5E5"> like our favorite like</font>

1331
00:42:12,980 --> 00:42:15,410
<font color="#CCCCCC">to contributor names because there's</font>

1332
00:42:14,090 --> 00:42:18,109
some really<font color="#E5E5E5"> creative contributor names</font>

1333
00:42:15,410 --> 00:42:20,000
<font color="#E5E5E5">so some fun stuff in there so now if you</font>

1334
00:42:18,109 --> 00:42:21,319
<font color="#E5E5E5">actually want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> find evil just throw</font>

1335
00:42:20,000 --> 00:42:22,700
<font color="#E5E5E5">that out the</font><font color="#CCCCCC"> window and then get to the</font>

1336
00:42:21,320 --> 00:42:26,390
really<font color="#CCCCCC"> good stuff which there's two</font>

1337
00:42:22,700 --> 00:42:27,529
components<font color="#CCCCCC"> here</font><font color="#E5E5E5"> one is reassembling</font>

1338
00:42:26,390 --> 00:42:29,118
scripts out<font color="#E5E5E5"> of script block logs</font>

1339
00:42:27,530 --> 00:42:30,500
<font color="#CCCCCC">somewhere I'll talk about how PowerShell</font>

1340
00:42:29,119 --> 00:42:33,260
<font color="#E5E5E5">5 is really</font><font color="#CCCCCC"> awesome and you have these</font>

1341
00:42:30,500 --> 00:42:34,970
<font color="#E5E5E5">CID 4104</font><font color="#CCCCCC"> vents well they're</font><font color="#E5E5E5"> really</font>

1342
00:42:33,260 --> 00:42:36,320
verbose right and so if you enabled<font color="#E5E5E5"> it</font>

1343
00:42:34,970 --> 00:42:38,270
some environments<font color="#CCCCCC"> people are saying well</font>

1344
00:42:36,320 --> 00:42:39,650
we<font color="#CCCCCC"> can't possibly index all this</font><font color="#E5E5E5"> data</font>

1345
00:42:38,270 --> 00:42:41,180
into<font color="#CCCCCC"> our sim</font><font color="#E5E5E5"> and it's like</font><font color="#CCCCCC"> that's</font>

1346
00:42:39,650 --> 00:42:42,920
<font color="#E5E5E5">understandable it's a lot of data so</font><font color="#CCCCCC"> how</font>

1347
00:42:41,180 --> 00:42:44,899
can<font color="#CCCCCC"> we</font><font color="#E5E5E5"> meaning meaningful use of</font><font color="#CCCCCC"> it</font>

1348
00:42:42,920 --> 00:42:46,940
<font color="#E5E5E5">today well if you enable</font><font color="#CCCCCC"> that logging</font>

1349
00:42:44,900 --> 00:42:48,950
you can<font color="#E5E5E5"> either acquire the raw EVT</font><font color="#CCCCCC"> X</font>

1350
00:42:46,940 --> 00:42:50,510
<font color="#CCCCCC">files or if you</font><font color="#E5E5E5"> get one event we include</font>

1351
00:42:48,950 --> 00:42:53,060
<font color="#E5E5E5">a lot of ingestion options so basically</font>

1352
00:42:50,510 --> 00:42:54,320
<font color="#E5E5E5">we'll take the full event</font><font color="#CCCCCC"> log</font><font color="#E5E5E5"> and pipe</font>

1353
00:42:53,060 --> 00:42:56,180
it<font color="#CCCCCC"> into this function</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> it'll</font>

1354
00:42:54,320 --> 00:42:57,470
basically go and<font color="#E5E5E5"> reassemble the script</font>

1355
00:42:56,180 --> 00:42:58,970
out of the script block<font color="#E5E5E5"> log says if you</font>

1356
00:42:57,470 --> 00:43:00,319
have a really long script<font color="#E5E5E5"> then it can be</font>

1357
00:42:58,970 --> 00:43:01,879
spread across hundreds of script block

1358
00:43:00,320 --> 00:43:04,580
logs and<font color="#E5E5E5"> this will reassemble that for</font>

1359
00:43:01,880 --> 00:43:10,160
you<font color="#CCCCCC"> and it</font><font color="#E5E5E5"> turns it all in PowerShell</font>

1360
00:43:04,580 --> 00:43:11,869
<font color="#E5E5E5">objects which is nice so</font><font color="#CCCCCC"> you have</font>

1361
00:43:10,160 --> 00:43:13,520
<font color="#E5E5E5">PowerShell scripts now either command</font>

1362
00:43:11,869 --> 00:43:15,200
line from whatever sources you<font color="#CCCCCC"> have</font>

1363
00:43:13,520 --> 00:43:16,730
<font color="#E5E5E5">maybe you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> a directory</font><font color="#CCCCCC"> of scripts</font>

1364
00:43:15,200 --> 00:43:18,710
you've pulled out you know off the<font color="#CCCCCC"> wire</font>

1365
00:43:16,730 --> 00:43:20,510
<font color="#CCCCCC">other things or you go</font><font color="#E5E5E5"> out and you query</font>

1366
00:43:18,710 --> 00:43:21,650
your event logs and<font color="#E5E5E5"> you reassemble all</font>

1367
00:43:20,510 --> 00:43:24,619
the scripts<font color="#E5E5E5"> and now you have it in</font>

1368
00:43:21,650 --> 00:43:27,830
memory<font color="#E5E5E5"> so the last piece is pushing it</font>

1369
00:43:24,619 --> 00:43:30,200
through<font color="#E5E5E5"> the magic which is measure</font><font color="#CCCCCC"> rvo</font>

1370
00:43:27,830 --> 00:43:32,020
obfuscation<font color="#CCCCCC"> and here we are chewing</font>

1371
00:43:30,200 --> 00:43:34,189
through 39 scripts right here<font color="#CCCCCC"> in</font>

1372
00:43:32,020 --> 00:43:36,740
labeling<font color="#E5E5E5"> it as off the skated or not</font>

1373
00:43:34,190 --> 00:43:38,450
obfuscated<font color="#E5E5E5"> and</font><font color="#CCCCCC"> again this is basically</font>

1374
00:43:36,740 --> 00:43:40,399
taking<font color="#CCCCCC"> all the scripts its extracting</font>

1375
00:43:38,450 --> 00:43:42,589
<font color="#CCCCCC">5000 features multiplying multiplying</font>

1376
00:43:40,400 --> 00:43:43,940
the 5000 against the<font color="#E5E5E5"> weights adding them</font>

1377
00:43:42,590 --> 00:43:45,109
up saying are you office gated or not

1378
00:43:43,940 --> 00:43:47,150
and then coming back<font color="#E5E5E5"> with the full</font>

1379
00:43:45,109 --> 00:43:48,410
results of the script<font color="#E5E5E5"> saying true</font><font color="#CCCCCC"> or</font>

1380
00:43:47,150 --> 00:43:49,640
false is this off<font color="#E5E5E5"> you skated it gives</font>

1381
00:43:48,410 --> 00:43:50,839
the full time of how much it took<font color="#E5E5E5"> to</font>

1382
00:43:49,640 --> 00:43:52,850
extract the features measure the

1383
00:43:50,840 --> 00:43:54,530
features all this stuff and then also

1384
00:43:52,850 --> 00:43:56,089
all<font color="#E5E5E5"> 5,000 features are listed in that</font>

1385
00:43:54,530 --> 00:43:57,470
<font color="#E5E5E5">object for every single</font><font color="#CCCCCC"> core soul</font><font color="#E5E5E5"> so you</font>

1386
00:43:56,090 --> 00:43:58,640
<font color="#E5E5E5">have everything at your</font><font color="#CCCCCC"> disposal do you</font>

1387
00:43:57,470 --> 00:44:01,009
want to dump<font color="#CCCCCC"> at the disk or do whatever</font>

1388
00:43:58,640 --> 00:44:02,839
else<font color="#CCCCCC"> you want to start finding off the</font>

1389
00:44:01,010 --> 00:44:06,380
<font color="#CCCCCC">skated code</font><font color="#E5E5E5"> immediately now keep in mind</font>

1390
00:44:02,840 --> 00:44:07,910
<font color="#E5E5E5">this</font><font color="#CCCCCC"> does not find bad code for say this</font>

1391
00:44:06,380 --> 00:44:10,430
is office<font color="#E5E5E5"> caddy code there is still a</font>

1392
00:44:07,910 --> 00:44:12,680
<font color="#E5E5E5">very really important role for looking</font>

1393
00:44:10,430 --> 00:44:14,509
for<font color="#E5E5E5"> indicators of compromise in whatever</font>

1394
00:44:12,680 --> 00:44:16,700
<font color="#E5E5E5">frameworks</font><font color="#CCCCCC"> that you're seeing out there</font>

1395
00:44:14,510 --> 00:44:18,560
so I think<font color="#E5E5E5"> it's important to add this as</font>

1396
00:44:16,700 --> 00:44:20,689
a supplement<font color="#CCCCCC"> so we're</font><font color="#E5E5E5"> looking for</font><font color="#CCCCCC"> these</font>

1397
00:44:18,560 --> 00:44:21,680
known bad<font color="#E5E5E5"> syntaxes or module logs or</font>

1398
00:44:20,690 --> 00:44:22,760
other things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and then for</font>

1399
00:44:21,680 --> 00:44:24,799
everything else<font color="#CCCCCC"> that we're possibly</font>

1400
00:44:22,760 --> 00:44:27,490
missing<font color="#E5E5E5"> just run this against it and see</font>

1401
00:44:24,800 --> 00:44:27,490
what it comes<font color="#E5E5E5"> up with</font>

1402
00:44:30,920 --> 00:44:34,440
this is the very last thing<font color="#E5E5E5"> I'll say</font><font color="#CCCCCC"> is</font>

1403
00:44:33,029 --> 00:44:37,349
that<font color="#CCCCCC"> Lee and I we</font><font color="#E5E5E5"> really wanted this</font>

1404
00:44:34,440 --> 00:44:39,420
tool to be used<font color="#E5E5E5"> by anyone we want anyone</font>

1405
00:44:37,349 --> 00:44:40,859
to after the<font color="#E5E5E5"> whole really discouraging</font>

1406
00:44:39,420 --> 00:44:42,299
first part of this talk from defensive

1407
00:44:40,859 --> 00:44:43,558
perspective<font color="#CCCCCC"> they'll say</font><font color="#E5E5E5"> yes like there's</font>

1408
00:44:42,299 --> 00:44:45,390
a tool we can<font color="#CCCCCC"> actually start using today</font>

1409
00:44:43,559 --> 00:44:47,010
<font color="#CCCCCC">and to be able to</font><font color="#E5E5E5"> go back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> your</font>

1410
00:44:45,390 --> 00:44:48,750
<font color="#E5E5E5">organization's and say to your manager</font>

1411
00:44:47,010 --> 00:44:50,490
hey<font color="#E5E5E5"> we really</font><font color="#CCCCCC"> need to get</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> powershell</font>

1412
00:44:48,750 --> 00:44:51,869
<font color="#E5E5E5">5 and they say why and say well there's</font>

1413
00:44:50,490 --> 00:44:52,979
crazy<font color="#E5E5E5"> off you station you can do write</font>

1414
00:44:51,869 --> 00:44:54,359
and say<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> would we do with all</font>

1415
00:44:52,980 --> 00:44:56,339
<font color="#CCCCCC">that data we can't index it we don't</font>

1416
00:44:54,359 --> 00:44:57,808
<font color="#E5E5E5">have to like if you have a syslog server</font>

1417
00:44:56,339 --> 00:44:59,730
just<font color="#CCCCCC"> anything</font><font color="#E5E5E5"> you can just</font><font color="#CCCCCC"> dump this</font>

1418
00:44:57,809 --> 00:45:01,410
<font color="#E5E5E5">data</font><font color="#CCCCCC"> to and then point</font><font color="#E5E5E5"> this tool to it</font>

1419
00:44:59,730 --> 00:45:03,240
<font color="#E5E5E5">then you can actually start detecting</font>

1420
00:45:01,410 --> 00:45:05,910
this for<font color="#E5E5E5"> zero dollars out of your pocket</font>

1421
00:45:03,240 --> 00:45:08,339
<font color="#CCCCCC">and with that</font><font color="#E5E5E5"> being said we want this to</font>

1422
00:45:05,910 --> 00:45:10,379
<font color="#E5E5E5">be as user friendly as</font><font color="#CCCCCC"> possible from an</font>

1423
00:45:08,339 --> 00:45:12,900
operational perspective not<font color="#CCCCCC"> just for the</font>

1424
00:45:10,380 --> 00:45:14,970
research<font color="#CCCCCC"> community or anything like</font><font color="#E5E5E5"> that</font>

1425
00:45:12,900 --> 00:45:16,799
because we are operational security

1426
00:45:14,970 --> 00:45:18,149
practitioners so that means is that if

1427
00:45:16,799 --> 00:45:20,038
you're using<font color="#E5E5E5"> this in</font><font color="#CCCCCC"> your organization</font>

1428
00:45:18,150 --> 00:45:21,390
<font color="#E5E5E5">and as stuff comes back and it gets</font>

1429
00:45:20,039 --> 00:45:23,309
<font color="#E5E5E5">flagged it's off to</font><font color="#CCCCCC"> skate</font><font color="#E5E5E5"> it you can say</font>

1430
00:45:21,390 --> 00:45:24,960
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> actually this isn't obfuscated</font>

1431
00:45:23,309 --> 00:45:26,789
this is good<font color="#CCCCCC"> I</font><font color="#E5E5E5"> never want to see this</font>

1432
00:45:24,960 --> 00:45:28,109
<font color="#CCCCCC">again and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can basically whitelist</font>

1433
00:45:26,789 --> 00:45:29,309
that and so we have a couple<font color="#CCCCCC"> options</font><font color="#E5E5E5"> you</font>

1434
00:45:28,109 --> 00:45:31,769
can<font color="#CCCCCC"> basically drop scripts into a</font>

1435
00:45:29,309 --> 00:45:33,690
whitelist directory<font color="#E5E5E5"> it'll hash those and</font>

1436
00:45:31,769 --> 00:45:35,490
then never<font color="#CCCCCC"> alert</font><font color="#E5E5E5"> on this exact hashes</font>

1437
00:45:33,690 --> 00:45:37,200
again<font color="#E5E5E5"> you can also</font><font color="#CCCCCC"> write less based on</font>

1438
00:45:35,490 --> 00:45:38,339
strings or<font color="#E5E5E5"> regex matching which you want</font>

1439
00:45:37,200 --> 00:45:40,558
to<font color="#E5E5E5"> be a little careful with so you're</font>

1440
00:45:38,339 --> 00:45:42,569
<font color="#E5E5E5">not</font><font color="#CCCCCC"> too open</font><font color="#E5E5E5"> with it but again we wanted</font>

1441
00:45:40,559 --> 00:45:43,769
<font color="#E5E5E5">it</font><font color="#CCCCCC"> to be really</font><font color="#E5E5E5"> user friendly but kind</font>

1442
00:45:42,569 --> 00:45:46,558
<font color="#E5E5E5">of operationalize this in your</font>

1443
00:45:43,769 --> 00:45:49,169
environment<font color="#CCCCCC"> so with that being said</font><font color="#E5E5E5"> you</font>

1444
00:45:46,559 --> 00:45:50,730
<font color="#CCCCCC">can get the code</font><font color="#E5E5E5"> it's on my github you</font>

1445
00:45:49,170 --> 00:45:52,259
<font color="#E5E5E5">can also it's also hosted in</font><font color="#CCCCCC"> the</font>

1446
00:45:50,730 --> 00:45:53,640
<font color="#E5E5E5">PowerShell gallery</font><font color="#CCCCCC"> which means on any</font>

1447
00:45:52,259 --> 00:45:56,579
power shell prompt<font color="#E5E5E5"> you can just type</font>

1448
00:45:53,640 --> 00:45:58,740
install - module revoke -<font color="#E5E5E5"> office keishon</font>

1449
00:45:56,579 --> 00:46:00,660
and have it up and<font color="#CCCCCC"> running</font><font color="#E5E5E5"> within 30</font>

1450
00:45:58,740 --> 00:46:04,078
seconds finding office<font color="#E5E5E5"> gated PowerShell</font>

1451
00:46:00,660 --> 00:46:05,490
<font color="#CCCCCC">and in the tutorial if you</font><font color="#E5E5E5"> if you</font><font color="#CCCCCC"> follow</font>

1452
00:46:04,079 --> 00:46:07,319
on github<font color="#CCCCCC"> it will take you to</font><font color="#E5E5E5"> tutorial I</font>

1453
00:46:05,490 --> 00:46:08,939
actually<font color="#E5E5E5"> included some EVT</font><font color="#CCCCCC"> X Files</font><font color="#E5E5E5"> and</font>

1454
00:46:07,319 --> 00:46:10,259
<font color="#E5E5E5">some other files on there so actually</font>

1455
00:46:08,940 --> 00:46:11,759
<font color="#CCCCCC">all</font><font color="#E5E5E5"> the sample commands in this tutorial</font>

1456
00:46:10,259 --> 00:46:14,700
<font color="#E5E5E5">are actually running against like real</font>

1457
00:46:11,759 --> 00:46:16,230
data<font color="#E5E5E5"> that we produced</font><font color="#CCCCCC"> and it's not it's</font>

1458
00:46:14,700 --> 00:46:18,118
not actually malicious but actual office

1459
00:46:16,230 --> 00:46:20,640
gated data so you<font color="#E5E5E5"> can actually see</font><font color="#CCCCCC"> right</font>

1460
00:46:18,119 --> 00:46:22,259
away<font color="#E5E5E5"> how</font><font color="#CCCCCC"> it works</font><font color="#E5E5E5"> and kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the speed</font>

1461
00:46:20,640 --> 00:46:24,960
at<font color="#CCCCCC"> which it works in conjunction with</font>

1462
00:46:22,259 --> 00:46:26,609
<font color="#E5E5E5">this research Lee and I at at black hat</font>

1463
00:46:24,960 --> 00:46:28,440
<font color="#CCCCCC">and DEF CON released this white paper</font>

1464
00:46:26,609 --> 00:46:30,598
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is hosted on</font><font color="#E5E5E5"> the fire I've logged</font>

1465
00:46:28,440 --> 00:46:32,069
<font color="#E5E5E5">there which is everything I just said</font>

1466
00:46:30,599 --> 00:46:34,380
<font color="#E5E5E5">but without having to hear me say it</font>

1467
00:46:32,069 --> 00:46:36,990
it's all<font color="#E5E5E5"> written there's less jokes</font>

1468
00:46:34,380 --> 00:46:38,400
let's<font color="#E5E5E5"> be honest so</font><font color="#CCCCCC"> so you can take</font><font color="#E5E5E5"> your</font>

1469
00:46:36,990 --> 00:46:39,720
<font color="#CCCCCC">pick there and then</font><font color="#E5E5E5"> a couple</font><font color="#CCCCCC"> references</font>

1470
00:46:38,400 --> 00:46:41,490
like<font color="#CCCCCC"> into some</font><font color="#E5E5E5"> of the previous tools of</font>

1471
00:46:39,720 --> 00:46:42,339
power<font color="#E5E5E5"> shut</font><font color="#CCCCCC"> off the station</font><font color="#E5E5E5"> some of the</font>

1472
00:46:41,490 --> 00:46:44,890
vlogs

1473
00:46:42,340 --> 00:46:46,540
about detecting it<font color="#E5E5E5"> and then again the</font>

1474
00:46:44,890 --> 00:46:47,890
last<font color="#E5E5E5"> last</font><font color="#CCCCCC"> one here</font><font color="#E5E5E5"> PowerShell</font><font color="#CCCCCC"> hearts the</font>

1475
00:46:46,540 --> 00:46:50,320
blue team by Microsoft is you've not

1476
00:46:47,890 --> 00:46:51,810
heard that<font color="#CCCCCC"> blog it's a blog post</font><font color="#E5E5E5"> in</font>

1477
00:46:50,320 --> 00:46:55,110
white paper that<font color="#E5E5E5"> is just a phenomenal</font>

1478
00:46:51,810 --> 00:46:57,670
<font color="#CCCCCC">overview of all the insanely awesome</font>

1479
00:46:55,110 --> 00:46:59,530
<font color="#CCCCCC">preventive and</font><font color="#E5E5E5"> detection based the</font>

1480
00:46:57,670 --> 00:47:00,850
capabilities that<font color="#E5E5E5"> Microsoft has put in</font>

1481
00:46:59,530 --> 00:47:02,380
the PowerShell over the past several

1482
00:47:00,850 --> 00:47:06,009
years<font color="#E5E5E5"> and it's just really</font><font color="#CCCCCC"> really cool</font>

1483
00:47:02,380 --> 00:47:07,450
so that being said<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is my in the end</font>

1484
00:47:06,010 --> 00:47:09,900
of my talk so<font color="#E5E5E5"> thank you very very</font><font color="#CCCCCC"> much</font>

1485
00:47:07,450 --> 00:47:09,899
for<font color="#CCCCCC"> listening</font>

1486
00:47:15,170 --> 00:47:28,950
so I think we have five<font color="#E5E5E5"> minutes or so</font>

1487
00:47:17,520 --> 00:47:30,630
for<font color="#E5E5E5"> questions so yes so if</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> say of all</font>

1488
00:47:28,950 --> 00:47:32,279
<font color="#CCCCCC">the</font><font color="#E5E5E5"> things</font><font color="#CCCCCC"> that flag is office skated</font>

1489
00:47:30,630 --> 00:47:36,090
<font color="#CCCCCC">from our corpus and</font><font color="#E5E5E5"> what was almost</font><font color="#CCCCCC"> yep</font>

1490
00:47:32,280 --> 00:47:37,350
<font color="#CCCCCC">Oh</font><font color="#E5E5E5"> most of it actually</font><font color="#CCCCCC"> wasn't a lot</font><font color="#E5E5E5"> of</font>

1491
00:47:36,090 --> 00:47:39,270
the stuff was<font color="#E5E5E5"> off</font><font color="#CCCCCC"> he skated</font><font color="#E5E5E5"> was like</font>

1492
00:47:37,350 --> 00:47:42,330
code golf competitions and stuff<font color="#CCCCCC"> like</font>

1493
00:47:39,270 --> 00:47:43,590
that<font color="#E5E5E5"> there's a lot of there's a lot of</font>

1494
00:47:42,330 --> 00:47:44,819
the same stuff like if you<font color="#E5E5E5"> just like</font>

1495
00:47:43,590 --> 00:47:46,530
search through the corpus which the

1496
00:47:44,820 --> 00:47:47,820
corpus is available also<font color="#E5E5E5"> we we made that</font>

1497
00:47:46,530 --> 00:47:49,230
public<font color="#E5E5E5"> if you just search for things</font>

1498
00:47:47,820 --> 00:47:51,060
<font color="#E5E5E5">like invoke</font><font color="#CCCCCC"> mimikatz just the way that</font>

1499
00:47:49,230 --> 00:47:52,800
github starts to fork repos and<font color="#CCCCCC"> there's</font>

1500
00:47:51,060 --> 00:47:54,150
like everyone has their own<font color="#E5E5E5"> copy of it</font>

1501
00:47:52,800 --> 00:47:57,870
and<font color="#CCCCCC"> so some stuff</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> off you skated</font>

1502
00:47:54,150 --> 00:47:59,940
that way<font color="#E5E5E5"> we did see some PowerShell ISE</font>

1503
00:47:57,870 --> 00:48:01,680
steroids<font color="#E5E5E5"> which is probably one of the</font>

1504
00:47:59,940 --> 00:48:03,180
original PowerShell office caters which

1505
00:48:01,680 --> 00:48:05,339
they weren't<font color="#E5E5E5"> that they were doing it</font>

1506
00:48:03,180 --> 00:48:09,390
more for<font color="#E5E5E5"> like IP protection but we do</font>

1507
00:48:05,340 --> 00:48:10,590
see<font color="#CCCCCC"> some of that data</font><font color="#E5E5E5"> but but in in</font><font color="#CCCCCC"> the</font>

1508
00:48:09,390 --> 00:48:14,670
end this<font color="#E5E5E5"> is looking at data</font><font color="#CCCCCC"> that people</font>

1509
00:48:10,590 --> 00:48:16,200
<font color="#E5E5E5">have uploaded to public sources</font><font color="#CCCCCC"> so not</font>

1510
00:48:14,670 --> 00:48:18,510
<font color="#E5E5E5">we didn't find anything it was like</font>

1511
00:48:16,200 --> 00:48:20,580
groundbreaking this is really really bad

1512
00:48:18,510 --> 00:48:22,440
<font color="#E5E5E5">but I've definitely used it</font><font color="#CCCCCC"> on several</font>

1513
00:48:20,580 --> 00:48:24,509
<font color="#CCCCCC">engagements</font><font color="#E5E5E5"> at man dia and it's been</font>

1514
00:48:22,440 --> 00:48:26,760
really cool<font color="#CCCCCC"> to see it find some stuff</font>

1515
00:48:24,510 --> 00:48:27,960
that that<font color="#E5E5E5"> we had some of</font><font color="#CCCCCC"> the stuff we'd</font>

1516
00:48:26,760 --> 00:48:29,970
<font color="#E5E5E5">found through other means but it was</font>

1517
00:48:27,960 --> 00:48:32,850
cool to<font color="#CCCCCC"> see this model</font><font color="#E5E5E5"> at work against</font>

1518
00:48:29,970 --> 00:48:36,200
<font color="#E5E5E5">just like massive</font><font color="#CCCCCC"> datasets</font><font color="#E5E5E5"> so really</font>

1519
00:48:32,850 --> 00:48:36,200
<font color="#E5E5E5">good question yes</font>

1520
00:48:40,970 --> 00:48:45,740
character<font color="#CCCCCC"> talent by just attaching like</font>

1521
00:48:43,190 --> 00:48:47,600
<font color="#E5E5E5">Shakespeare to it hmm</font><font color="#CCCCCC"> so what happens if</font>

1522
00:48:45,740 --> 00:48:50,120
you attach a sufficient amount<font color="#CCCCCC"> of</font>

1523
00:48:47,600 --> 00:48:55,180
<font color="#CCCCCC">well-structured well you know</font><font color="#E5E5E5"> PowerShell</font>

1524
00:48:50,120 --> 00:49:02,089
code and you have a small<font color="#E5E5E5"> amount</font><font color="#CCCCCC"> inside</font>

1525
00:48:55,180 --> 00:49:04,129
you know<font color="#E5E5E5"> yeah something yeah yeah really</font>

1526
00:49:02,090 --> 00:49:05,450
<font color="#E5E5E5">good question</font><font color="#CCCCCC"> so the question was in</font><font color="#E5E5E5"> in</font>

1527
00:49:04,130 --> 00:49:06,590
<font color="#E5E5E5">the character frequency analysis if you</font>

1528
00:49:05,450 --> 00:49:08,270
have evil code<font color="#CCCCCC"> and have all</font>

1529
00:49:06,590 --> 00:49:09,980
Shakespeare's works and could you could

1530
00:49:08,270 --> 00:49:11,900
<font color="#CCCCCC">actually kind of counter that and it</font>

1531
00:49:09,980 --> 00:49:13,550
would all holistically look good

1532
00:49:11,900 --> 00:49:15,380
well could you basically take with<font color="#E5E5E5"> this</font>

1533
00:49:13,550 --> 00:49:16,520
model take a really small piece of evil

1534
00:49:15,380 --> 00:49:18,800
off you skated<font color="#CCCCCC"> code</font><font color="#E5E5E5"> and have just</font>

1535
00:49:16,520 --> 00:49:21,650
massive amounts of full code that's not

1536
00:49:18,800 --> 00:49:25,550
<font color="#E5E5E5">evil</font><font color="#CCCCCC"> yeah that would be</font><font color="#E5E5E5"> that would be</font>

1537
00:49:21,650 --> 00:49:27,770
<font color="#E5E5E5">about the best approach to breaking it</font>

1538
00:49:25,550 --> 00:49:29,570
other than the other concept is why

1539
00:49:27,770 --> 00:49:31,190
don't<font color="#CCCCCC"> I minimally obfuscate it</font><font color="#E5E5E5"> and you</font>

1540
00:49:29,570 --> 00:49:33,040
<font color="#E5E5E5">don't need a thousand tick marks like if</font>

1541
00:49:31,190 --> 00:49:35,150
you know<font color="#CCCCCC"> exactly what defenders are</font>

1542
00:49:33,040 --> 00:49:36,410
keying off of you don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to put tick</font>

1543
00:49:35,150 --> 00:49:39,080
marks or obviously<font color="#CCCCCC"> ate those small</font>

1544
00:49:36,410 --> 00:49:41,270
pieces<font color="#E5E5E5"> a really good</font><font color="#CCCCCC"> project that was</font>

1545
00:49:39,080 --> 00:49:44,060
just<font color="#E5E5E5"> released two weeks ago at Derby con</font>

1546
00:49:41,270 --> 00:49:45,920
by Ryan Cobb<font color="#CCCCCC"> he's the guy who basically</font>

1547
00:49:44,060 --> 00:49:48,350
put together<font color="#E5E5E5"> obfuscated Empire and he</font>

1548
00:49:45,920 --> 00:49:50,180
really still called PS<font color="#CCCCCC"> am Z which uses a</font>

1549
00:49:48,350 --> 00:49:52,549
<font color="#E5E5E5">MSI or the anti-malware scan interface</font>

1550
00:49:50,180 --> 00:49:54,529
to basically identify AV vendors that

1551
00:49:52,550 --> 00:49:56,120
<font color="#CCCCCC">are using a</font><font color="#E5E5E5"> MSI to inspect PowerShell</font>

1552
00:49:54,530 --> 00:49:57,470
<font color="#E5E5E5">and actually see</font><font color="#CCCCCC"> what portions of the</font>

1553
00:49:56,120 --> 00:49:58,819
script of keying off of so<font color="#E5E5E5"> that you can</font>

1554
00:49:57,470 --> 00:50:00,439
basically<font color="#E5E5E5"> drill down and find of this</font>

1555
00:49:58,820 --> 00:50:02,030
huge script here are the five pieces

1556
00:50:00,440 --> 00:50:03,440
<font color="#E5E5E5">that are part</font><font color="#CCCCCC"> of the signature that this</font>

1557
00:50:02,030 --> 00:50:04,820
AV vendor has and<font color="#CCCCCC"> those just off you</font>

1558
00:50:03,440 --> 00:50:06,740
skate those and he<font color="#CCCCCC"> actually uses invoke</font>

1559
00:50:04,820 --> 00:50:08,450
obfuscation to do just that<font color="#E5E5E5"> is there</font>

1560
00:50:06,740 --> 00:50:10,549
it's a really<font color="#CCCCCC"> really</font><font color="#E5E5E5"> cool</font><font color="#CCCCCC"> idea super</font>

1561
00:50:08,450 --> 00:50:12,169
smart dude<font color="#CCCCCC"> so definitely a talk worth</font>

1562
00:50:10,550 --> 00:50:13,850
checking out in<font color="#E5E5E5"> terms of like evading</font>

1563
00:50:12,170 --> 00:50:15,560
<font color="#E5E5E5">the detection now at the end of the day</font>

1564
00:50:13,850 --> 00:50:16,640
you might<font color="#E5E5E5"> think well</font><font color="#CCCCCC"> that's kind of</font>

1565
00:50:15,560 --> 00:50:18,259
stupid for you to<font color="#E5E5E5"> say like here's</font>

1566
00:50:16,640 --> 00:50:20,600
exactly<font color="#E5E5E5"> how to evade this thing well</font><font color="#CCCCCC"> I</font>

1567
00:50:18,260 --> 00:50:22,400
<font color="#CCCCCC">have some amount</font><font color="#E5E5E5"> of humility and realize</font>

1568
00:50:20,600 --> 00:50:23,930
that<font color="#CCCCCC"> like this</font><font color="#E5E5E5"> is only so much and we're</font>

1569
00:50:22,400 --> 00:50:25,010
really impressed<font color="#CCCCCC"> by the results but at</font>

1570
00:50:23,930 --> 00:50:27,890
the end<font color="#E5E5E5"> of the day all it means is</font><font color="#CCCCCC"> that</font>

1571
00:50:25,010 --> 00:50:29,900
as we find in the<font color="#CCCCCC"> wild</font><font color="#E5E5E5"> or come</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> with</font>

1572
00:50:27,890 --> 00:50:31,490
<font color="#E5E5E5">our own examples that bypass this</font>

1573
00:50:29,900 --> 00:50:33,560
literally the<font color="#CCCCCC"> only thing we have</font><font color="#E5E5E5"> to do</font>

1574
00:50:31,490 --> 00:50:35,149
is just label those is<font color="#E5E5E5"> off you</font><font color="#CCCCCC"> skated or</font>

1575
00:50:33,560 --> 00:50:36,860
not<font color="#E5E5E5"> add it into the</font><font color="#CCCCCC"> back into</font><font color="#E5E5E5"> the data</font>

1576
00:50:35,150 --> 00:50:38,300
set<font color="#E5E5E5"> and literally hit a button to</font>

1577
00:50:36,860 --> 00:50:40,130
retrain the model go get a cup of<font color="#E5E5E5"> coffee</font>

1578
00:50:38,300 --> 00:50:43,130
<font color="#CCCCCC">in five minutes there's a new weighted</font>

1579
00:50:40,130 --> 00:50:44,300
vector<font color="#E5E5E5"> that we can plug</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> so yeah yeah</font>

1580
00:50:43,130 --> 00:50:46,010
but but the exciting<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that</font>

1581
00:50:44,300 --> 00:50:47,720
anyone in the community can<font color="#CCCCCC"> do that</font><font color="#E5E5E5"> so</font>

1582
00:50:46,010 --> 00:50:49,130
<font color="#CCCCCC">it is people</font><font color="#E5E5E5"> find different models or</font>

1583
00:50:47,720 --> 00:50:51,259
different vectors that make more<font color="#E5E5E5"> sense</font>

1584
00:50:49,130 --> 00:50:52,130
<font color="#CCCCCC">like hopefully</font><font color="#E5E5E5"> they show that back out</font>

1585
00:50:51,260 --> 00:50:53,690
with<font color="#E5E5E5"> the community say hey this actually</font>

1586
00:50:52,130 --> 00:50:55,670
<font color="#CCCCCC">works better</font><font color="#E5E5E5"> than what these guys</font>

1587
00:50:53,690 --> 00:50:56,869
<font color="#E5E5E5">with so that's our hope that real data</font>

1588
00:50:55,670 --> 00:50:58,339
scientists will go and do some cool

1589
00:50:56,869 --> 00:50:59,630
<font color="#CCCCCC">stuff with our</font><font color="#E5E5E5"> people who aren't data</font>

1590
00:50:58,339 --> 00:51:01,640
scientists<font color="#CCCCCC"> and</font><font color="#E5E5E5"> started to take this data</font>

1591
00:50:59,630 --> 00:51:03,470
and<font color="#E5E5E5"> play around with it and not scrape</font>

1592
00:51:01,640 --> 00:51:13,279
github<font color="#E5E5E5"> for like a month and a half so</font>

1593
00:51:03,470 --> 00:51:15,828
but<font color="#E5E5E5"> really good question yes</font><font color="#CCCCCC"> it was</font>

1594
00:51:13,280 --> 00:51:17,960
definitely<font color="#CCCCCC"> my code yeah yeah kind of</font><font color="#E5E5E5"> a</font>

1595
00:51:15,829 --> 00:51:21,020
<font color="#CCCCCC">PG 32</font><font color="#E5E5E5"> using off you see a</font><font color="#CCCCCC"> PowerShell</font>

1596
00:51:17,960 --> 00:51:22,640
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> it was pretty pretty evident to me</font>

1597
00:51:21,020 --> 00:51:24,500
<font color="#E5E5E5">pretty quickly that it</font><font color="#CCCCCC"> was my code so</font>

1598
00:51:22,640 --> 00:51:26,450
it's kind<font color="#CCCCCC"> of a that was</font><font color="#E5E5E5"> the first time</font>

1599
00:51:24,500 --> 00:51:29,150
I'd<font color="#CCCCCC"> seen an apt group using my tool</font>

1600
00:51:26,450 --> 00:51:31,430
which is kind of<font color="#E5E5E5"> a happy sad moment but</font>

1601
00:51:29,150 --> 00:51:32,839
I don't know unfortunately<font color="#CCCCCC"> there's no</font>

1602
00:51:31,430 --> 00:51:36,020
way to give this<font color="#E5E5E5"> stuff out to</font><font color="#CCCCCC"> only the</font>

1603
00:51:32,839 --> 00:51:37,520
<font color="#CCCCCC">good guys but</font><font color="#E5E5E5"> uh but yeah that I think</font>

1604
00:51:36,020 --> 00:51:39,829
the most<font color="#E5E5E5"> responsible</font><font color="#CCCCCC"> thing is</font><font color="#E5E5E5"> sharing as</font>

1605
00:51:37,520 --> 00:51:42,410
openly<font color="#E5E5E5"> as we can of the community and</font>

1606
00:51:39,829 --> 00:51:43,849
saying<font color="#E5E5E5"> like be aware this is</font><font color="#CCCCCC"> a thing how</font>

1607
00:51:42,410 --> 00:51:45,980
do we come together to detect it<font color="#CCCCCC"> and</font>

1608
00:51:43,849 --> 00:51:47,839
<font color="#E5E5E5">this was really my</font><font color="#CCCCCC"> best attempt at an</font>

1609
00:51:45,980 --> 00:51:49,700
answer<font color="#E5E5E5"> to say like open source what can</font>

1610
00:51:47,839 --> 00:51:51,170
<font color="#E5E5E5">people take how can people take hundreds</font>

1611
00:51:49,700 --> 00:51:52,788
<font color="#E5E5E5">of hours</font><font color="#CCCCCC"> of mine lee's research built</font>

1612
00:51:51,170 --> 00:51:54,200
<font color="#E5E5E5">other people's research and use it</font>

1613
00:51:52,789 --> 00:51:58,270
<font color="#E5E5E5">immediately to help better protect</font>

1614
00:51:54,200 --> 00:52:01,089
<font color="#E5E5E5">themselves</font><font color="#CCCCCC"> but be a really</font><font color="#E5E5E5"> good question</font>

1615
00:51:58,270 --> 00:52:03,860
any<font color="#E5E5E5"> other questions</font>

1616
00:52:01,089 --> 00:52:06,939
awesome thank you again very<font color="#CCCCCC"> very much</font>

1617
00:52:03,860 --> 00:52:06,939
[Applause]

