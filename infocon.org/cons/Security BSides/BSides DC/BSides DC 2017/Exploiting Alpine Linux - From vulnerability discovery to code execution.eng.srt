1
00:00:00,030 --> 00:00:06,060
the besides DC 2017 videos are<font color="#E5E5E5"> brought</font>

2
00:00:03,270 --> 00:00:07,740
to you by threat quotient introducing

3
00:00:06,060 --> 00:00:10,019
<font color="#E5E5E5">the industry's</font><font color="#CCCCCC"> first threat intelligence</font>

4
00:00:07,740 --> 00:00:13,139
platform designed<font color="#E5E5E5"> to enable threat</font>

5
00:00:10,019 --> 00:00:15,960
operations and management and data tribe

6
00:00:13,139 --> 00:00:17,910
<font color="#CCCCCC">a new</font><font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> startup studio co</font><font color="#E5E5E5"> building</font>

7
00:00:15,960 --> 00:00:21,090
the next<font color="#CCCCCC"> generation of commercial cyber</font>

8
00:00:17,910 --> 00:00:23,970
<font color="#CCCCCC">security analytics and big data product</font>

9
00:00:21,090 --> 00:00:26,970
companies hello everyone my name is

10
00:00:23,970 --> 00:00:30,509
<font color="#E5E5E5">ariel nevelsky</font><font color="#CCCCCC"> I'm a</font><font color="#E5E5E5"> security researcher</font>

11
00:00:26,970 --> 00:00:33,629
<font color="#E5E5E5">a twist look we do security for</font>

12
00:00:30,510 --> 00:00:37,820
containers as a part of<font color="#E5E5E5"> my research</font><font color="#CCCCCC"> I</font>

13
00:00:33,630 --> 00:00:42,239
<font color="#E5E5E5">started looking to</font><font color="#CCCCCC"> alpine</font><font color="#E5E5E5"> Linux oops so</font>

14
00:00:37,820 --> 00:00:45,510
how many of<font color="#E5E5E5"> you do know</font><font color="#CCCCCC"> Alpine</font><font color="#E5E5E5"> Linux OS</font>

15
00:00:42,239 --> 00:00:48,570
<font color="#E5E5E5">that's a few hands so</font><font color="#CCCCCC"> alpine in essence</font>

16
00:00:45,510 --> 00:00:51,360
is a very small distro that's used

17
00:00:48,570 --> 00:00:54,989
mostly in containers but for embedded

18
00:00:51,360 --> 00:01:01,890
things<font color="#CCCCCC"> - the model is</font><font color="#E5E5E5"> being like small</font>

19
00:00:54,989 --> 00:01:04,339
secure and and very simple so but<font color="#CCCCCC"> the</font>

20
00:01:01,890 --> 00:01:08,430
<font color="#CCCCCC">actual</font><font color="#E5E5E5"> leave up that the image itself is</font>

21
00:01:04,339 --> 00:01:11,400
about five megabytes in size they put a

22
00:01:08,430 --> 00:01:12,990
lot of effort in the security they<font color="#E5E5E5"> pass</font>

23
00:01:11,400 --> 00:01:14,280
the kernel with<font color="#E5E5E5"> JIRA security in packs</font>

24
00:01:12,990 --> 00:01:16,729
that's a bit less<font color="#E5E5E5"> relevant with</font>

25
00:01:14,280 --> 00:01:19,110
<font color="#E5E5E5">containers but it's good to have that</font>

26
00:01:16,729 --> 00:01:22,560
all<font color="#E5E5E5"> your space</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> name is a</font><font color="#CCCCCC"> compiled</font>

27
00:01:19,110 --> 00:01:24,659
with<font color="#CCCCCC"> by no executes</font><font color="#E5E5E5"> full level stack</font>

28
00:01:22,560 --> 00:01:26,909
smashing that's like a stack enemy and

29
00:01:24,659 --> 00:01:29,280
all<font color="#CCCCCC"> these kind of things these</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> all</font>

30
00:01:26,909 --> 00:01:32,310
the features<font color="#CCCCCC"> you could compile you could</font>

31
00:01:29,280 --> 00:01:36,350
put<font color="#E5E5E5"> on</font><font color="#CCCCCC"> compilation time to protect your</font>

32
00:01:32,310 --> 00:01:42,299
binaries<font color="#E5E5E5"> so that's that's pretty useful</font>

33
00:01:36,350 --> 00:01:45,539
<font color="#CCCCCC">alright so why is a plan relevant it's</font>

34
00:01:42,299 --> 00:01:47,700
become very<font color="#E5E5E5"> popular for containers on</font>

35
00:01:45,540 --> 00:01:49,170
<font color="#E5E5E5">the official hub you can have you can</font>

36
00:01:47,700 --> 00:01:53,009
<font color="#CCCCCC">see like it has more than 10 million</font>

37
00:01:49,170 --> 00:01:55,079
poles<font color="#E5E5E5"> you have tons of</font><font color="#CCCCCC"> images based on</font>

38
00:01:53,009 --> 00:01:56,939
<font color="#E5E5E5">our plane so that's that one is from</font>

39
00:01:55,079 --> 00:01:59,520
hacker news

40
00:01:56,939 --> 00:02:02,490
the<font color="#E5E5E5"> dock</font><font color="#CCCCCC"> companies</font><font color="#E5E5E5"> hiring nano copper</font>

41
00:01:59,520 --> 00:02:05,070
the developer of<font color="#E5E5E5"> Alpine to migrate all</font>

42
00:02:02,490 --> 00:02:06,390
<font color="#E5E5E5">images of official images to</font><font color="#CCCCCC"> our plan</font>

43
00:02:05,070 --> 00:02:09,269
for mobile tour<font color="#CCCCCC"> Debian</font>

44
00:02:06,390 --> 00:02:10,619
so essentially you got like<font color="#E5E5E5"> everyone is</font>

45
00:02:09,270 --> 00:02:12,360
going to<font color="#E5E5E5"> be using Alpine sooner or later</font>

46
00:02:10,619 --> 00:02:14,220
because<font color="#CCCCCC"> it's so small and secure</font><font color="#E5E5E5"> and</font>

47
00:02:12,360 --> 00:02:16,410
it's very efficient

48
00:02:14,220 --> 00:02:20,640
so that's that's<font color="#CCCCCC"> gonna be an</font><font color="#E5E5E5"> attack</font>

49
00:02:16,410 --> 00:02:21,990
though for<font color="#CCCCCC"> people to look into so I was</font>

50
00:02:20,640 --> 00:02:23,670
looking<font color="#CCCCCC"> into it</font>

51
00:02:21,990 --> 00:02:26,820
<font color="#CCCCCC">the file finds on</font><font color="#E5E5E5"> the abilities inside</font>

52
00:02:23,670 --> 00:02:29,839
it right<font color="#CCCCCC"> so to do that I would</font><font color="#E5E5E5"> have to</font>

53
00:02:26,820 --> 00:02:35,160
take<font color="#E5E5E5"> any imagine see what it consists of</font>

54
00:02:29,840 --> 00:02:37,890
<font color="#E5E5E5">so the most basic</font><font color="#CCCCCC"> thing is lip see</font><font color="#E5E5E5"> you</font>

55
00:02:35,160 --> 00:02:40,560
<font color="#E5E5E5">probably know know Lipsy that's like the</font>

56
00:02:37,890 --> 00:02:45,000
the regular<font color="#CCCCCC"> see library</font><font color="#E5E5E5"> that you use</font>

57
00:02:40,560 --> 00:02:45,990
like<font color="#CCCCCC"> when you just do normal GCC</font><font color="#E5E5E5"> but</font>

58
00:02:45,000 --> 00:02:48,960
muscle<font color="#E5E5E5"> is just</font><font color="#CCCCCC"> a different</font>

59
00:02:45,990 --> 00:02:53,310
implementation<font color="#CCCCCC"> of that</font><font color="#E5E5E5"> you have busybox</font>

60
00:02:48,960 --> 00:02:55,980
which is like it's it's a package that

61
00:02:53,310 --> 00:02:58,770
<font color="#E5E5E5">has</font><font color="#CCCCCC"> all the basic Linux tool that you</font>

62
00:02:55,980 --> 00:03:01,049
know like grape or LS or all the basic

63
00:02:58,770 --> 00:03:03,900
things<font color="#CCCCCC"> they</font><font color="#E5E5E5"> just put it in one one</font>

64
00:03:01,050 --> 00:03:06,890
package and<font color="#E5E5E5"> it's very small</font><font color="#CCCCCC"> that's the</font>

65
00:03:03,900 --> 00:03:10,680
thing<font color="#E5E5E5"> so so</font><font color="#CCCCCC"> alpine knew that that and</font>

66
00:03:06,890 --> 00:03:12,299
then you<font color="#E5E5E5"> have</font><font color="#CCCCCC"> apical tools</font><font color="#E5E5E5"> that's the</font>

67
00:03:10,680 --> 00:03:15,630
the<font color="#E5E5E5"> package manager it's just like</font>

68
00:03:12,300 --> 00:03:18,300
apt-get you have on a bun to a<font color="#CCCCCC"> demon</font>

69
00:03:15,630 --> 00:03:23,489
you'd use<font color="#E5E5E5"> it to get other packages from</font>

70
00:03:18,300 --> 00:03:25,770
<font color="#E5E5E5">the official repository</font><font color="#CCCCCC"> alpine so I</font>

71
00:03:23,489 --> 00:03:28,170
wanted<font color="#CCCCCC"> to see what what do people do</font>

72
00:03:25,770 --> 00:03:31,020
with<font color="#CCCCCC"> Alpine right they when you</font><font color="#E5E5E5"> use</font>

73
00:03:28,170 --> 00:03:33,269
<font color="#E5E5E5">containers you're gonna you're gonna</font>

74
00:03:31,020 --> 00:03:35,959
like take Alpine as your base<font color="#CCCCCC"> and then</font>

75
00:03:33,270 --> 00:03:38,070
you're gonna do something<font color="#CCCCCC"> on ponent</font><font color="#E5E5E5"> so</font>

76
00:03:35,959 --> 00:03:40,920
one of the first thing is get more

77
00:03:38,070 --> 00:03:43,620
programs<font color="#CCCCCC"> you'd do foam outline and then</font>

78
00:03:40,920 --> 00:03:47,250
<font color="#E5E5E5">the next line you'd run a PK get to</font>

79
00:03:43,620 --> 00:03:52,800
download something<font color="#E5E5E5"> okay so that's why I</font>

80
00:03:47,250 --> 00:03:55,110
wanted<font color="#CCCCCC"> to look into</font><font color="#E5E5E5"> a PK now a PK was</font>

81
00:03:52,800 --> 00:03:58,110
originally willing<font color="#CCCCCC"> as a shell script</font>

82
00:03:55,110 --> 00:04:02,070
<font color="#E5E5E5">about 2008 they we were doing everything</font>

83
00:03:58,110 --> 00:04:04,410
<font color="#E5E5E5">to see so</font><font color="#CCCCCC"> that was that was good for</font><font color="#E5E5E5"> me</font>

84
00:04:02,070 --> 00:04:07,560
as a researcher<font color="#CCCCCC"> because I like sick</font><font color="#E5E5E5"> old</font>

85
00:04:04,410 --> 00:04:09,120
means more bugs more<font color="#E5E5E5"> many memory bugs</font>

86
00:04:07,560 --> 00:04:14,040
all<font color="#E5E5E5"> kinds of</font><font color="#CCCCCC"> thing that I</font><font color="#E5E5E5"> might be able</font>

87
00:04:09,120 --> 00:04:16,769
<font color="#CCCCCC">to</font><font color="#E5E5E5"> explore in the</font><font color="#CCCCCC"> future so to</font><font color="#E5E5E5"> use a PK</font>

88
00:04:14,040 --> 00:04:18,390
you'd go a<font color="#E5E5E5"> PK update and I pick a ad for</font>

89
00:04:16,769 --> 00:04:21,918
the package you want to do just<font color="#CCCCCC"> the</font><font color="#E5E5E5"> same</font>

90
00:04:18,390 --> 00:04:21,918
as you do with<font color="#CCCCCC"> any package manager</font>

91
00:04:22,680 --> 00:04:30,810
and like my my thoughts were can<font color="#E5E5E5"> I</font>

92
00:04:25,200 --> 00:04:32,280
somehow like<font color="#E5E5E5"> damage the packages</font><font color="#CCCCCC"> that it</font>

93
00:04:30,810 --> 00:04:34,620
<font color="#E5E5E5">download</font><font color="#CCCCCC"> it's can I put my</font><font color="#E5E5E5"> coat on the</font>

94
00:04:32,280 --> 00:04:36,510
packages the<font color="#CCCCCC"> Downloads can i maybe</font>

95
00:04:34,620 --> 00:04:40,140
download<font color="#E5E5E5"> packages and use some</font>

96
00:04:36,510 --> 00:04:41,909
vulnerabilities that<font color="#CCCCCC"> would that would</font><font color="#E5E5E5"> be</font>

97
00:04:40,140 --> 00:04:47,039
<font color="#E5E5E5">like an attack</font><font color="#CCCCCC"> tractor if I couldn't</font>

98
00:04:41,910 --> 00:04:49,440
<font color="#E5E5E5">make it somehow</font><font color="#CCCCCC"> download bad packages or</font>

99
00:04:47,040 --> 00:04:54,300
<font color="#CCCCCC">old packages</font><font color="#E5E5E5"> then the</font><font color="#CCCCCC"> hell point</font><font color="#E5E5E5"> would</font>

100
00:04:49,440 --> 00:04:56,640
<font color="#E5E5E5">be vulnerable so to start I went to wiki</font>

101
00:04:54,300 --> 00:05:01,080
<font color="#E5E5E5">they have a pretty nice wiki with lots</font>

102
00:04:56,640 --> 00:05:03,930
of details on how they build an image so

103
00:05:01,080 --> 00:05:05,490
I became looks at EDC<font color="#CCCCCC"> apk repository for</font>

104
00:05:03,930 --> 00:05:07,640
all<font color="#E5E5E5"> the list of the positives</font><font color="#CCCCCC"> you can</font>

105
00:05:05,490 --> 00:05:11,490
have local<font color="#E5E5E5"> ones you can have remote ones</font>

106
00:05:07,640 --> 00:05:15,900
<font color="#E5E5E5">and when you start on docker image by</font>

107
00:05:11,490 --> 00:05:19,170
default it uses HTTP<font color="#CCCCCC"> okay so that was</font>

108
00:05:15,900 --> 00:05:20,700
the<font color="#E5E5E5"> first bad sign because even uses</font>

109
00:05:19,170 --> 00:05:22,710
HTTP<font color="#E5E5E5"> a man-in-the-middle attack</font><font color="#CCCCCC"> err</font>

110
00:05:20,700 --> 00:05:25,710
could just interfere with with whatever

111
00:05:22,710 --> 00:05:28,169
<font color="#E5E5E5">they think path and and put something</font>

112
00:05:25,710 --> 00:05:30,450
<font color="#E5E5E5">else</font><font color="#CCCCCC"> no it doesn't mean it's vulnerable</font>

113
00:05:28,170 --> 00:05:33,450
<font color="#CCCCCC">because they</font><font color="#E5E5E5"> can still sign whatever</font>

114
00:05:30,450 --> 00:05:36,390
<font color="#E5E5E5">they pass on HTTP it just means someone</font>

115
00:05:33,450 --> 00:05:40,440
<font color="#E5E5E5">could interfere with it and indeed they</font>

116
00:05:36,390 --> 00:05:43,590
do<font color="#E5E5E5"> sign all packages you have</font><font color="#CCCCCC"> EDC</font><font color="#E5E5E5"> apk</font>

117
00:05:40,440 --> 00:05:47,340
<font color="#CCCCCC">keys which has all the other side keys</font>

118
00:05:43,590 --> 00:05:50,010
of the developers<font color="#E5E5E5"> so so it's not as</font>

119
00:05:47,340 --> 00:05:52,710
<font color="#CCCCCC">simple as</font><font color="#E5E5E5"> just you know changing</font><font color="#CCCCCC"> the</font>

120
00:05:50,010 --> 00:05:55,710
packages over HTTP but we might still

121
00:05:52,710 --> 00:05:57,719
<font color="#CCCCCC">have an attack vector here so I looked</font>

122
00:05:55,710 --> 00:06:00,390
into apk update when you only<font color="#E5E5E5"> one I</font>

123
00:05:57,720 --> 00:06:03,030
<font color="#CCCCCC">together</font><font color="#E5E5E5"> it what happens so from the</font>

124
00:06:00,390 --> 00:06:07,340
wiki again<font color="#CCCCCC"> you download this</font><font color="#E5E5E5"> effect a</font>

125
00:06:03,030 --> 00:06:10,229
file called<font color="#E5E5E5"> apk index dot a dot GZ now</font>

126
00:06:07,340 --> 00:06:12,030
from that file<font color="#CCCCCC"> it takes all the</font><font color="#E5E5E5"> list of</font>

127
00:06:10,230 --> 00:06:14,580
the repositories or<font color="#E5E5E5"> the packages it</font>

128
00:06:12,030 --> 00:06:17,549
wants and it just like posted that and

129
00:06:14,580 --> 00:06:21,120
and takes<font color="#E5E5E5"> only laid out so I wanted to</font>

130
00:06:17,550 --> 00:06:25,350
see what that<font color="#E5E5E5"> file is made of and again</font>

131
00:06:21,120 --> 00:06:29,040
the wiki was pretty helpful<font color="#CCCCCC"> Wow in times</font>

132
00:06:25,350 --> 00:06:31,860
like<font color="#E5E5E5"> that's a bad</font><font color="#CCCCCC"> 3-inch shot but</font><font color="#E5E5E5"> it's</font>

133
00:06:29,040 --> 00:06:33,930
just like<font color="#E5E5E5"> essentially to</font><font color="#CCCCCC"> make an</font><font color="#E5E5E5"> apk</font>

134
00:06:31,860 --> 00:06:36,150
index file what they do is concatenate

135
00:06:33,930 --> 00:06:38,610
two<font color="#E5E5E5"> files to touch it</font>

136
00:06:36,150 --> 00:06:41,520
files<font color="#CCCCCC"> the first</font><font color="#E5E5E5"> one is a signature and</font>

137
00:06:38,610 --> 00:06:43,380
the second one is like<font color="#E5E5E5"> the will text</font>

138
00:06:41,520 --> 00:06:47,760
data<font color="#E5E5E5"> with all the</font><font color="#CCCCCC"> least of the packages</font>

139
00:06:43,380 --> 00:06:49,380
so<font color="#CCCCCC"> that wiki was pretty useful because</font>

140
00:06:47,760 --> 00:06:51,570
otherwise I<font color="#E5E5E5"> would</font><font color="#CCCCCC"> just like go</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> want</font>

141
00:06:49,380 --> 00:06:53,760
file on this and try and see like what

142
00:06:51,570 --> 00:06:55,650
it's made of and<font color="#E5E5E5"> I would enter it and</font>

143
00:06:53,760 --> 00:06:59,969
you know this<font color="#E5E5E5"> just gave me</font><font color="#CCCCCC"> alright it's</font>

144
00:06:55,650 --> 00:07:03,239
to concatenate files<font color="#E5E5E5"> now having</font><font color="#CCCCCC"> that</font>

145
00:06:59,970 --> 00:07:05,340
signature<font color="#E5E5E5"> as a</font><font color="#CCCCCC"> third</font><font color="#E5E5E5"> jersey meant that</font>

146
00:07:03,240 --> 00:07:08,640
the package<font color="#E5E5E5"> mentioned we have to take</font>

147
00:07:05,340 --> 00:07:11,070
<font color="#CCCCCC">that file and and like lantau it would</font>

148
00:07:08,640 --> 00:07:13,469
have to<font color="#E5E5E5"> G and</font><font color="#CCCCCC"> V paid and</font><font color="#E5E5E5"> enter it and</font>

149
00:07:11,070 --> 00:07:14,940
then with a signature right so that's<font color="#CCCCCC"> a</font>

150
00:07:13,470 --> 00:07:16,650
whole<font color="#E5E5E5"> bunch of codes that's gonna run</font>

151
00:07:14,940 --> 00:07:19,500
before<font color="#E5E5E5"> they even look at the signature</font>

152
00:07:16,650 --> 00:07:22,200
<font color="#E5E5E5">and since</font><font color="#CCCCCC"> it's it's passed on HTTP I</font>

153
00:07:19,500 --> 00:07:27,060
could just put whatever<font color="#E5E5E5"> there I want on</font>

154
00:07:22,200 --> 00:07:30,840
that<font color="#E5E5E5"> piece of code</font><font color="#CCCCCC"> alright so that</font><font color="#E5E5E5"> was</font>

155
00:07:27,060 --> 00:07:32,850
for my<font color="#E5E5E5"> next step which was fuzzing</font><font color="#CCCCCC"> how</font>

156
00:07:30,840 --> 00:07:35,820
many of you heard<font color="#CCCCCC"> of fast fuzzing</font><font color="#E5E5E5"> for</font>

157
00:07:32,850 --> 00:07:41,790
<font color="#E5E5E5">security purposes okay so I'll just</font><font color="#CCCCCC"> go</font>

158
00:07:35,820 --> 00:07:44,550
it pretty shortly fuzzing means giving a

159
00:07:41,790 --> 00:07:47,550
lot<font color="#E5E5E5"> of data to some code to make</font><font color="#CCCCCC"> it</font>

160
00:07:44,550 --> 00:07:49,530
crash<font color="#CCCCCC"> all right let's say you have some</font>

161
00:07:47,550 --> 00:07:52,380
piece<font color="#CCCCCC"> of</font><font color="#E5E5E5"> code that</font><font color="#CCCCCC"> passes JPEG images</font>

162
00:07:49,530 --> 00:07:55,080
you<font color="#E5E5E5"> just fill it with tons of binary</font>

163
00:07:52,380 --> 00:07:58,200
data until<font color="#E5E5E5"> it crashes okay and you check</font>

164
00:07:55,080 --> 00:08:02,270
like which data made it crash hmm<font color="#E5E5E5"> now</font>

165
00:07:58,200 --> 00:08:05,039
you have<font color="#E5E5E5"> dump fuzzing which means like</font>

166
00:08:02,270 --> 00:08:06,810
trying all random bytes<font color="#E5E5E5"> until it crashes</font>

167
00:08:05,040 --> 00:08:09,240
like just<font color="#E5E5E5"> modifying the bites all the</font>

168
00:08:06,810 --> 00:08:12,570
time<font color="#E5E5E5"> the</font><font color="#CCCCCC"> earth crashes and then</font><font color="#E5E5E5"> you have</font>

169
00:08:09,240 --> 00:08:15,840
like real fighting is instrumented

170
00:08:12,570 --> 00:08:17,760
<font color="#E5E5E5">following so you have some program</font><font color="#CCCCCC"> that</font>

171
00:08:15,840 --> 00:08:21,869
takes<font color="#E5E5E5"> your code your C code or whatever</font>

172
00:08:17,760 --> 00:08:24,599
<font color="#E5E5E5">and and</font><font color="#CCCCCC"> when on compilation time when it</font>

173
00:08:21,870 --> 00:08:27,840
translates that assembly<font color="#CCCCCC"> it puts all it</font>

174
00:08:24,600 --> 00:08:31,410
it's it's its own code to<font color="#E5E5E5"> look at which</font>

175
00:08:27,840 --> 00:08:33,990
branches you take so in essence you want

176
00:08:31,410 --> 00:08:36,660
to feed that<font color="#E5E5E5"> data to the</font><font color="#CCCCCC"> defer to the</font>

177
00:08:33,990 --> 00:08:39,360
<font color="#E5E5E5">binary you want it knows which branches</font>

178
00:08:36,659 --> 00:08:43,350
takes every time like<font color="#CCCCCC"> an IFO execution</font>

179
00:08:39,360 --> 00:08:45,630
<font color="#CCCCCC">okay so I'm not saying example of a JPEG</font>

180
00:08:43,350 --> 00:08:45,930
you<font color="#E5E5E5"> have some magic on the header</font><font color="#CCCCCC"> all</font>

181
00:08:45,630 --> 00:08:47,640
<font color="#E5E5E5">right</font>

182
00:08:45,930 --> 00:08:50,069
so you'd fill it all kinds<font color="#CCCCCC"> of random</font>

183
00:08:47,640 --> 00:08:52,530
random bytes and<font color="#E5E5E5"> it would just stop</font>

184
00:08:50,070 --> 00:08:55,800
because the head of<font color="#E5E5E5"> his bad and then</font>

185
00:08:52,530 --> 00:08:57,720
once it gets<font color="#CCCCCC"> a magic it knows he</font><font color="#E5E5E5"> takes a</font>

186
00:08:55,800 --> 00:08:59,849
different<font color="#E5E5E5"> branch and then it thinks</font><font color="#CCCCCC"> like</font>

187
00:08:57,720 --> 00:09:02,700
oh I can<font color="#E5E5E5"> just do that magic and get to</font>

188
00:08:59,850 --> 00:09:04,170
that branch every time and and if you<font color="#E5E5E5"> do</font>

189
00:09:02,700 --> 00:09:07,020
that and<font color="#E5E5E5"> um finding you would just like</font>

190
00:09:04,170 --> 00:09:08,430
have hit that magic once and that's it

191
00:09:07,020 --> 00:09:10,439
and you'd never<font color="#CCCCCC"> use that</font><font color="#E5E5E5"> again and it's</font>

192
00:09:08,430 --> 00:09:12,709
not<font color="#CCCCCC"> funny and</font><font color="#E5E5E5"> you keep using</font><font color="#CCCCCC"> that magic</font>

193
00:09:10,440 --> 00:09:16,410
because it takes a different<font color="#E5E5E5"> branch so</font>

194
00:09:12,710 --> 00:09:18,210
what<font color="#CCCCCC"> that means you can get like a lot</font>

195
00:09:16,410 --> 00:09:21,089
<font color="#CCCCCC">of code coverage with with smart</font>

196
00:09:18,210 --> 00:09:25,140
<font color="#CCCCCC">fighting and you can find crashes pretty</font>

197
00:09:21,090 --> 00:09:27,530
quick<font color="#CCCCCC"> now AFL American fuzzy loop is a</font>

198
00:09:25,140 --> 00:09:30,360
very popular father that's open sourced

199
00:09:27,530 --> 00:09:31,890
it's it's found lots of bugs in<font color="#CCCCCC"> open</font>

200
00:09:30,360 --> 00:09:35,250
<font color="#E5E5E5">source projects if you should look that</font>

201
00:09:31,890 --> 00:09:38,340
<font color="#E5E5E5">up</font><font color="#CCCCCC"> and I've</font><font color="#E5E5E5"> used that before and I've</font><font color="#CCCCCC"> do</font>

202
00:09:35,250 --> 00:09:40,110
<font color="#E5E5E5">that again for for apk to see if I can't</font>

203
00:09:38,340 --> 00:09:43,680
find crashes in the<font color="#CCCCCC"> code that part of</font>

204
00:09:40,110 --> 00:09:47,730
the<font color="#E5E5E5"> apk index file so I went and got the</font>

205
00:09:43,680 --> 00:09:49,170
source code and and like I had one more

206
00:09:47,730 --> 00:09:51,240
step to do before<font color="#E5E5E5"> fighting because I</font>

207
00:09:49,170 --> 00:09:54,209
couldn't<font color="#E5E5E5"> just take a PK and give that to</font>

208
00:09:51,240 --> 00:09:56,840
<font color="#CCCCCC">a film tenet alright</font><font color="#E5E5E5"> fast that because a</font>

209
00:09:54,210 --> 00:09:59,730
<font color="#E5E5E5">PK has lots of features</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> of them is</font>

210
00:09:56,840 --> 00:10:02,760
downloading packages and updating but<font color="#E5E5E5"> it</font>

211
00:09:59,730 --> 00:10:05,060
can do all kinds of stuff<font color="#CCCCCC"> so I</font><font color="#E5E5E5"> just had</font>

212
00:10:02,760 --> 00:10:08,480
to to find the piece<font color="#CCCCCC"> of code that would</font>

213
00:10:05,060 --> 00:10:12,349
<font color="#E5E5E5">download the packages and and feed</font><font color="#CCCCCC"> that</font>

214
00:10:08,480 --> 00:10:15,660
like feed<font color="#CCCCCC"> fill the data form FL to that</font>

215
00:10:12,350 --> 00:10:18,210
so I found out they'd say it sounded

216
00:10:15,660 --> 00:10:20,959
like<font color="#E5E5E5"> was gonna be</font><font color="#CCCCCC"> be the</font><font color="#E5E5E5"> relevant file</font>

217
00:10:18,210 --> 00:10:23,460
but it had nothing inside<font color="#CCCCCC"> it</font>

218
00:10:20,960 --> 00:10:25,710
the main was in apk that<font color="#CCCCCC"> said that</font><font color="#E5E5E5"> was</font>

219
00:10:23,460 --> 00:10:29,310
another file and although in<font color="#CCCCCC"> India bit</font>

220
00:10:25,710 --> 00:10:30,950
dot<font color="#E5E5E5"> C at the end add this this piece of</font>

221
00:10:29,310 --> 00:10:34,319
<font color="#E5E5E5">code that said</font><font color="#CCCCCC"> alright that's an update</font>

222
00:10:30,950 --> 00:10:37,470
applet<font color="#CCCCCC"> they're the only definition of</font>

223
00:10:34,320 --> 00:10:38,580
applet and inside it I<font color="#CCCCCC"> found that they</font>

224
00:10:37,470 --> 00:10:42,390
did that

225
00:10:38,580 --> 00:10:45,320
<font color="#CCCCCC">apk update cache flag</font><font color="#E5E5E5"> okay so I just</font>

226
00:10:42,390 --> 00:10:48,810
grabbed that<font color="#CCCCCC"> in all the source files and</font>

227
00:10:45,320 --> 00:10:50,640
I found<font color="#CCCCCC"> in a file called database dot</font><font color="#E5E5E5"> C</font>

228
00:10:48,810 --> 00:10:53,250
which has<font color="#CCCCCC"> a function</font><font color="#E5E5E5"> that's called from</font>

229
00:10:50,640 --> 00:10:56,220
the main function and what it does in

230
00:10:53,250 --> 00:10:58,860
essence is<font color="#CCCCCC"> just update</font><font color="#E5E5E5"> the cache</font><font color="#CCCCCC"> update</font>

231
00:10:56,220 --> 00:11:00,870
<font color="#E5E5E5">the repository cache like go to to the</font>

232
00:10:58,860 --> 00:11:02,310
<font color="#E5E5E5">remote</font><font color="#CCCCCC"> repository download the epic</font>

233
00:11:00,870 --> 00:11:04,020
<font color="#CCCCCC">annex and</font><font color="#E5E5E5"> parse it and do everything</font>

234
00:11:02,310 --> 00:11:07,469
<font color="#CCCCCC">that</font><font color="#E5E5E5"> I'm looking for</font>

235
00:11:04,020 --> 00:11:09,720
so I just like<font color="#E5E5E5"> I like the concept</font><font color="#CCCCCC"> of an</font>

236
00:11:07,470 --> 00:11:13,290
applet and<font color="#E5E5E5"> I wrote my own applet for</font><font color="#CCCCCC"> apk</font>

237
00:11:09,720 --> 00:11:15,720
<font color="#E5E5E5">just so I can fuzz it easily so I made</font>

238
00:11:13,290 --> 00:11:17,160
this<font color="#E5E5E5"> after the main function and this</font>

239
00:11:15,720 --> 00:11:21,930
<font color="#E5E5E5">was the function that's</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> get all</font>

240
00:11:17,160 --> 00:11:24,719
the data<font color="#CCCCCC"> from the father</font><font color="#E5E5E5"> and and I used</font>

241
00:11:21,930 --> 00:11:27,209
their own<font color="#E5E5E5"> internal function to like get</font>

242
00:11:24,720 --> 00:11:30,090
data from<font color="#E5E5E5"> a file which was a PK base to</font>

243
00:11:27,210 --> 00:11:36,420
inform file and I fed that to<font color="#CCCCCC"> I pick a</font>

244
00:11:30,090 --> 00:11:38,250
<font color="#E5E5E5">DB index we'd compiled it and I put</font><font color="#CCCCCC"> AFL</font>

245
00:11:36,420 --> 00:11:40,229
inside a container<font color="#E5E5E5"> just so I can want it</font>

246
00:11:38,250 --> 00:11:43,430
quickly and<font color="#E5E5E5"> you know whenever I change</font>

247
00:11:40,230 --> 00:11:46,440
<font color="#E5E5E5">the setup I</font><font color="#CCCCCC"> can just we money easily</font>

248
00:11:43,430 --> 00:11:48,569
laughter<font color="#E5E5E5"> well the father did nothing if</font>

249
00:11:46,440 --> 00:11:50,490
it<font color="#CCCCCC"> actually tells you that you know I'm</font>

250
00:11:48,570 --> 00:11:53,250
<font color="#CCCCCC">not</font><font color="#E5E5E5"> I'm not finding anything it's all</font>

251
00:11:50,490 --> 00:11:57,360
stuck and it did have<font color="#CCCCCC"> that line that</font>

252
00:11:53,250 --> 00:11:59,130
said they start<font color="#CCCCCC"> making progress so I was</font>

253
00:11:57,360 --> 00:12:02,550
stuck and I try<font color="#CCCCCC"> fuzzing some other</font>

254
00:11:59,130 --> 00:12:04,170
functions and like I kept looking into

255
00:12:02,550 --> 00:12:06,240
the code and<font color="#CCCCCC"> find find</font><font color="#E5E5E5"> like that</font>

256
00:12:04,170 --> 00:12:08,520
function that's relevant<font color="#CCCCCC"> for me</font><font color="#E5E5E5"> because</font>

257
00:12:06,240 --> 00:12:11,010
it does a lot<font color="#CCCCCC"> of stuff</font><font color="#E5E5E5"> before reaching</font>

258
00:12:08,520 --> 00:12:12,780
that<font color="#E5E5E5"> that tough</font><font color="#CCCCCC"> without</font><font color="#E5E5E5"> passing so I</font>

259
00:12:11,010 --> 00:12:17,430
found<font color="#E5E5E5"> a PK top pass which were the</font>

260
00:12:12,780 --> 00:12:19,230
function that<font color="#E5E5E5"> passes doubles but the</font>

261
00:12:17,430 --> 00:12:21,689
fuzzing was still first low a PK gives

262
00:12:19,230 --> 00:12:26,040
you the speed that it<font color="#E5E5E5"> takes for every</font>

263
00:12:21,690 --> 00:12:28,080
execution<font color="#CCCCCC"> and it was like a few tens</font><font color="#E5E5E5"> of</font>

264
00:12:26,040 --> 00:12:30,180
seconds which<font color="#CCCCCC"> is way too much for a</font>

265
00:12:28,080 --> 00:12:34,200
father you want it to be milliseconds<font color="#E5E5E5"> to</font>

266
00:12:30,180 --> 00:12:35,939
actually make real results with<font color="#E5E5E5"> it so I</font>

267
00:12:34,200 --> 00:12:38,810
had<font color="#E5E5E5"> to find what's the bottleneck</font><font color="#CCCCCC"> what's</font>

268
00:12:35,940 --> 00:12:43,410
<font color="#E5E5E5">making it very slow and then kill that</font>

269
00:12:38,810 --> 00:12:46,050
so<font color="#E5E5E5"> I found it does emit open SSL and it</font>

270
00:12:43,410 --> 00:12:48,209
does<font color="#CCCCCC"> a</font><font color="#E5E5E5"> PK DB</font><font color="#CCCCCC"> II need an apk to be open</font>

271
00:12:46,050 --> 00:12:50,819
well the most important one thing is in

272
00:12:48,210 --> 00:12:53,010
it open SSL because<font color="#E5E5E5"> like on every</font>

273
00:12:50,820 --> 00:12:56,220
<font color="#E5E5E5">execution it starts with in an open SSL</font>

274
00:12:53,010 --> 00:12:59,100
<font color="#E5E5E5">and this function relies on entropy</font><font color="#CCCCCC"> and</font>

275
00:12:56,220 --> 00:13:00,690
that means the the Linux<font color="#E5E5E5"> term will help</font>

276
00:12:59,100 --> 00:13:02,580
to generate randomness<font color="#E5E5E5"> every execution</font>

277
00:13:00,690 --> 00:13:05,280
<font color="#CCCCCC">and at one point it would run out of</font>

278
00:13:02,580 --> 00:13:07,170
randomness<font color="#E5E5E5"> and it would take like few</font>

279
00:13:05,280 --> 00:13:10,709
seconds to generate<font color="#E5E5E5"> enough randomness to</font>

280
00:13:07,170 --> 00:13:13,550
<font color="#CCCCCC">fit in an open SSL so since I didn't</font>

281
00:13:10,710 --> 00:13:16,170
like I didn't need the signature<font color="#E5E5E5"> parts</font><font color="#CCCCCC"> I</font>

282
00:13:13,550 --> 00:13:18,780
just<font color="#CCCCCC"> commented</font><font color="#E5E5E5"> that out and</font>

283
00:13:16,170 --> 00:13:21,360
I went without that and the execution

284
00:13:18,780 --> 00:13:23,730
was pretty quick after<font color="#E5E5E5"> that like in</font>

285
00:13:21,360 --> 00:13:25,980
milliseconds he wouldn't post every<font color="#CCCCCC"> a</font>

286
00:13:23,730 --> 00:13:29,850
<font color="#CCCCCC">tough file alright so I went</font><font color="#E5E5E5"> in first</font>

287
00:13:25,980 --> 00:13:32,880
again and I got<font color="#CCCCCC"> crushes I finally got</font>

288
00:13:29,850 --> 00:13:35,760
like<font color="#CCCCCC"> crashes that I can deal with</font>

289
00:13:32,880 --> 00:13:37,370
now when<font color="#CCCCCC"> FL gives you crashes it's just</font>

290
00:13:35,760 --> 00:13:42,840
like a bunch<font color="#E5E5E5"> of files in a directory</font>

291
00:13:37,370 --> 00:13:46,200
<font color="#CCCCCC">that called</font><font color="#E5E5E5"> a crash in the in the</font><font color="#CCCCCC"> binary</font>

292
00:13:42,840 --> 00:13:50,730
and you can get hundreds<font color="#E5E5E5"> you can get</font>

293
00:13:46,200 --> 00:13:52,500
like a lot<font color="#E5E5E5"> of files to look at and what</font>

294
00:13:50,730 --> 00:13:55,710
I first<font color="#E5E5E5"> did was manually go for each</font>

295
00:13:52,500 --> 00:13:59,610
file<font color="#E5E5E5"> with gdb and try and see like why</font>

296
00:13:55,710 --> 00:14:01,890
is<font color="#E5E5E5"> it crashing but that was</font><font color="#CCCCCC"> inefficient</font>

297
00:13:59,610 --> 00:14:04,620
because<font color="#E5E5E5"> I had again lots of files so I</font>

298
00:14:01,890 --> 00:14:07,740
use crash work it's a nice tool<font color="#CCCCCC"> it's</font>

299
00:14:04,620 --> 00:14:09,630
also<font color="#E5E5E5"> open source what it does is</font><font color="#CCCCCC"> it's</font>

300
00:14:07,740 --> 00:14:13,110
<font color="#E5E5E5">dude</font><font color="#CCCCCC"> jelly what I did just</font><font color="#E5E5E5"> automatically</font>

301
00:14:09,630 --> 00:14:15,210
it<font color="#CCCCCC"> ones every clash with gdb</font><font color="#E5E5E5"> and it</font>

302
00:14:13,110 --> 00:14:18,060
checks<font color="#E5E5E5"> like</font><font color="#CCCCCC"> on the memory to see what</font>

303
00:14:15,210 --> 00:14:18,990
why<font color="#E5E5E5"> why did it crash and and even goes</font>

304
00:14:18,060 --> 00:14:21,329
as far as telling you if<font color="#E5E5E5"> it's</font>

305
00:14:18,990 --> 00:14:25,290
exploitable or not and what<font color="#E5E5E5"> the owner</font>

306
00:14:21,330 --> 00:14:28,980
ability if it is like in this<font color="#E5E5E5"> one it</font>

307
00:14:25,290 --> 00:14:32,130
says that the memory access relation

308
00:14:28,980 --> 00:14:34,920
thing<font color="#CCCCCC"> which was which is nice because I</font>

309
00:14:32,130 --> 00:14:38,160
could<font color="#E5E5E5"> know know exactly which crashes</font>

310
00:14:34,920 --> 00:14:41,339
<font color="#E5E5E5">were relevant to which which bug so I</font>

311
00:14:38,160 --> 00:14:45,360
had<font color="#E5E5E5"> six crashes that seemed to be from</font>

312
00:14:41,340 --> 00:14:49,700
<font color="#E5E5E5">different sources eventually I found two</font>

313
00:14:45,360 --> 00:14:52,440
lines that<font color="#E5E5E5"> these crashes originated form</font>

314
00:14:49,700 --> 00:14:55,410
<font color="#CCCCCC">but before I</font><font color="#E5E5E5"> could have done anything</font>

315
00:14:52,440 --> 00:14:56,610
<font color="#E5E5E5">with it</font><font color="#CCCCCC"> I had to to reproduce it with</font>

316
00:14:55,410 --> 00:14:58,980
the<font color="#CCCCCC"> original code right because I</font>

317
00:14:56,610 --> 00:15:00,240
changed the code I put out a lot<font color="#E5E5E5"> of</font>

318
00:14:58,980 --> 00:15:03,390
functions<font color="#CCCCCC"> there coming and a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of</font>

319
00:15:00,240 --> 00:15:04,830
<font color="#E5E5E5">stuff so I wanted to see that</font><font color="#CCCCCC"> the</font>

320
00:15:03,390 --> 00:15:06,210
crashes<font color="#CCCCCC"> were not originating from the</font>

321
00:15:04,830 --> 00:15:10,050
fact that<font color="#E5E5E5"> I've changed the code and</font>

322
00:15:06,210 --> 00:15:12,900
removed functions so I took the bad

323
00:15:10,050 --> 00:15:16,650
crash file<font color="#CCCCCC"> I Jessop tit and put it</font>

324
00:15:12,900 --> 00:15:17,340
inside<font color="#CCCCCC"> an apk attach a file on my nginx</font>

325
00:15:16,650 --> 00:15:21,709
server

326
00:15:17,340 --> 00:15:24,030
I used the<font color="#E5E5E5"> add</font><font color="#CCCCCC"> oast</font><font color="#E5E5E5"> flag for</font><font color="#CCCCCC"> docket to</font>

327
00:15:21,710 --> 00:15:26,400
what it does is<font color="#CCCCCC"> changed the hosts file</font>

328
00:15:24,030 --> 00:15:28,920
on the<font color="#CCCCCC"> docket when it sets it up</font><font color="#E5E5E5"> so</font>

329
00:15:26,400 --> 00:15:29,550
anytime the container<font color="#E5E5E5"> would find which</font>

330
00:15:28,920 --> 00:15:32,069
city

331
00:15:29,550 --> 00:15:34,349
and<font color="#E5E5E5"> alpine</font><font color="#CCCCCC"> linux dog it would go to</font><font color="#E5E5E5"> my</font>

332
00:15:32,070 --> 00:15:37,920
server<font color="#E5E5E5"> so that's a very simple</font><font color="#CCCCCC"> man in</font>

333
00:15:34,350 --> 00:15:41,990
the middle attack and<font color="#CCCCCC"> i when i PK update</font>

334
00:15:37,920 --> 00:15:46,380
and as you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see I</font><font color="#E5E5E5"> get a segfault</font><font color="#CCCCCC"> a</font>

335
00:15:41,990 --> 00:15:50,670
segfault<font color="#E5E5E5"> means crash means I might have</font>

336
00:15:46,380 --> 00:15:53,519
a vulnerability<font color="#CCCCCC"> here so this</font><font color="#E5E5E5"> time I</font><font color="#CCCCCC"> open</font>

337
00:15:50,670 --> 00:15:57,209
<font color="#E5E5E5">gdb with the original source and I found</font>

338
00:15:53,519 --> 00:15:59,550
the region of the crash<font color="#CCCCCC"> and I'd like</font><font color="#E5E5E5"> to</font>

339
00:15:57,209 --> 00:16:06,359
<font color="#E5E5E5">explain what was the line causing that</font>

340
00:15:59,550 --> 00:16:08,760
<font color="#E5E5E5">that crash so inside a cave dot C with</font>

341
00:16:06,360 --> 00:16:12,269
the<font color="#CCCCCC"> apk pass function</font><font color="#E5E5E5"> that is signature</font>

342
00:16:08,760 --> 00:16:13,829
that the one I used now to<font color="#E5E5E5"> actually make</font>

343
00:16:12,269 --> 00:16:16,019
<font color="#E5E5E5">sense with why it's crashing I had to</font>

344
00:16:13,829 --> 00:16:19,349
understand<font color="#E5E5E5"> how do I go</font><font color="#CCCCCC"> and pass the</font><font color="#E5E5E5"> tar</font>

345
00:16:16,019 --> 00:16:21,300
file<font color="#CCCCCC"> yeah because I'm reading</font><font color="#E5E5E5"> that's the</font>

346
00:16:19,350 --> 00:16:23,160
source of<font color="#CCCCCC"> passing the tougher I never to</font>

347
00:16:21,300 --> 00:16:26,670
understand what what<font color="#E5E5E5"> that is before</font><font color="#CCCCCC"> I</font>

348
00:16:23,160 --> 00:16:30,839
<font color="#CCCCCC">can actually do</font><font color="#E5E5E5"> anything with</font><font color="#CCCCCC"> it so tar</font>

349
00:16:26,670 --> 00:16:34,110
is a very old format<font color="#E5E5E5"> everything it goes</font>

350
00:16:30,839 --> 00:16:37,860
for for tape archive<font color="#CCCCCC"> yeah it's very</font>

351
00:16:34,110 --> 00:16:40,170
Stoica and it goes in blocks of 512

352
00:16:37,860 --> 00:16:42,480
<font color="#CCCCCC">bytes right</font><font color="#E5E5E5"> the first</font><font color="#CCCCCC"> lock</font><font color="#E5E5E5"> is the</font><font color="#CCCCCC"> header</font>

353
00:16:40,170 --> 00:16:44,310
file the header block and then you<font color="#CCCCCC"> get</font>

354
00:16:42,480 --> 00:16:47,100
<font color="#CCCCCC">like data blocks and then</font><font color="#E5E5E5"> the head</font><font color="#CCCCCC"> of</font>

355
00:16:44,310 --> 00:16:48,869
again and then data so the first one

356
00:16:47,100 --> 00:16:50,790
would<font color="#CCCCCC"> be like telling</font><font color="#E5E5E5"> you right the next</font>

357
00:16:48,870 --> 00:16:53,430
<font color="#E5E5E5">dog is the file and that's his name and</font>

358
00:16:50,790 --> 00:16:57,719
<font color="#E5E5E5">that's that it's left and then it get</font>

359
00:16:53,430 --> 00:17:00,420
the data so one<font color="#CCCCCC"> of the fields of that</font>

360
00:16:57,720 --> 00:17:02,370
header was a type flag that's like we

361
00:17:00,420 --> 00:17:05,849
tell you what the type of the<font color="#E5E5E5"> next file</font>

362
00:17:02,370 --> 00:17:09,540
is one<font color="#E5E5E5"> example is a normal file with the</font>

363
00:17:05,849 --> 00:17:11,639
file and<font color="#E5E5E5"> another one is a link and then</font>

364
00:17:09,540 --> 00:17:14,938
you have all kind of special special

365
00:17:11,640 --> 00:17:16,770
flags one of them is the long name

366
00:17:14,939 --> 00:17:18,990
extension now why do<font color="#E5E5E5"> I need that</font>

367
00:17:16,770 --> 00:17:21,059
<font color="#E5E5E5">yeah that's an</font><font color="#CCCCCC"> extension to Talon</font><font color="#E5E5E5"> and</font>

368
00:17:18,990 --> 00:17:24,390
they made that<font color="#CCCCCC"> because you can</font><font color="#E5E5E5"> only have</font>

369
00:17:21,059 --> 00:17:26,490
files with with names of only<font color="#CCCCCC"> a hundred</font>

370
00:17:24,390 --> 00:17:29,880
bytes<font color="#E5E5E5"> because in the header the part</font>

371
00:17:26,490 --> 00:17:31,620
that<font color="#CCCCCC"> that has the</font><font color="#E5E5E5"> file name is only a</font>

372
00:17:29,880 --> 00:17:32,820
hundred<font color="#CCCCCC"> bytes</font><font color="#E5E5E5"> so if you have anything</font>

373
00:17:31,620 --> 00:17:35,340
bigger<font color="#CCCCCC"> than</font><font color="#E5E5E5"> that you're gonna need to</font>

374
00:17:32,820 --> 00:17:38,850
tell it<font color="#CCCCCC"> all right</font><font color="#E5E5E5"> the next</font><font color="#CCCCCC"> block is</font>

375
00:17:35,340 --> 00:17:42,459
going<font color="#E5E5E5"> to have the like the side of the</font>

376
00:17:38,850 --> 00:17:44,980
of the file name yeah so

377
00:17:42,460 --> 00:17:47,920
<font color="#CCCCCC">to that what this extension was full</font><font color="#E5E5E5"> and</font>

378
00:17:44,980 --> 00:17:49,750
I learned that because because of<font color="#CCCCCC"> the</font>

379
00:17:47,920 --> 00:17:50,650
<font color="#E5E5E5">bug</font><font color="#CCCCCC"> had no</font><font color="#E5E5E5"> idea like</font><font color="#CCCCCC"> I didn't look into</font>

380
00:17:49,750 --> 00:17:55,810
it

381
00:17:50,650 --> 00:17:58,480
so that's<font color="#CCCCCC"> found the apk sauce what it</font>

382
00:17:55,810 --> 00:18:00,850
does is check for<font color="#E5E5E5"> the type flag if it's</font>

383
00:17:58,480 --> 00:18:04,480
<font color="#E5E5E5">L then that's</font><font color="#CCCCCC"> AG</font><font color="#E5E5E5"> no long name extension</font>

384
00:18:00,850 --> 00:18:07,179
<font color="#E5E5E5">and it does it does something</font><font color="#CCCCCC"> pretty</font>

385
00:18:04,480 --> 00:18:10,270
<font color="#E5E5E5">simple it take the long name buffer and</font>

386
00:18:07,180 --> 00:18:11,740
it allocates it<font color="#E5E5E5"> with entry dot size</font>

387
00:18:10,270 --> 00:18:14,290
bytes<font color="#CCCCCC"> okay</font>

388
00:18:11,740 --> 00:18:16,510
so that like NV dot size is taken from

389
00:18:14,290 --> 00:18:21,070
the header and it's just the side that's

390
00:18:16,510 --> 00:18:23,020
<font color="#E5E5E5">going to be of the</font><font color="#CCCCCC"> filename that looks</font>

391
00:18:21,070 --> 00:18:27,340
over<font color="#CCCCCC"> I would implement</font><font color="#E5E5E5"> it like that too</font>

392
00:18:23,020 --> 00:18:29,440
and then I noticed a used blob reality

393
00:18:27,340 --> 00:18:31,240
they<font color="#E5E5E5"> don't use</font><font color="#CCCCCC"> real I can use something</font>

394
00:18:29,440 --> 00:18:32,920
<font color="#E5E5E5">internal that they've ridden for</font>

395
00:18:31,240 --> 00:18:35,680
themselves so<font color="#E5E5E5"> I look into it and then</font>

396
00:18:32,920 --> 00:18:39,430
<font color="#CCCCCC">you'd st. blob relic it takes a peek a</font>

397
00:18:35,680 --> 00:18:42,460
blob T and and the new size and then<font color="#E5E5E5"> it</font>

398
00:18:39,430 --> 00:18:45,700
just calls via<font color="#E5E5E5"> a lock or on that buffer</font>

399
00:18:42,460 --> 00:18:50,440
with with the new size<font color="#E5E5E5"> but they did add</font>

400
00:18:45,700 --> 00:18:52,150
this check they do<font color="#E5E5E5"> if be at land which</font>

401
00:18:50,440 --> 00:18:55,180
were the old side<font color="#CCCCCC"> of that buffer</font><font color="#E5E5E5"> is</font>

402
00:18:52,150 --> 00:18:58,210
bigger or equal to<font color="#CCCCCC"> the new size than do</font>

403
00:18:55,180 --> 00:18:59,940
<font color="#CCCCCC">nothing</font><font color="#E5E5E5"> well why would they do that</font><font color="#CCCCCC"> what</font>

404
00:18:58,210 --> 00:19:04,990
they probably want<font color="#E5E5E5"> to achieve with that</font>

405
00:18:59,940 --> 00:19:06,970
<font color="#E5E5E5">if you have if you want a smaller buffer</font>

406
00:19:04,990 --> 00:19:09,430
than what you already have<font color="#E5E5E5"> there like</font>

407
00:19:06,970 --> 00:19:11,620
I've been shrinking it just don't shrink

408
00:19:09,430 --> 00:19:14,650
it okay<font color="#CCCCCC"> the just if you need</font><font color="#E5E5E5"> more bite</font>

409
00:19:11,620 --> 00:19:17,979
<font color="#E5E5E5">then</font><font color="#CCCCCC"> they expand it</font><font color="#E5E5E5"> they call the other</font>

410
00:19:14,650 --> 00:19:20,020
and if you're<font color="#E5E5E5"> gonna use</font><font color="#CCCCCC"> less but then</font>

411
00:19:17,980 --> 00:19:22,720
what's<font color="#E5E5E5"> already in</font><font color="#CCCCCC"> that buffer</font><font color="#E5E5E5"> then it's</font>

412
00:19:20,020 --> 00:19:24,480
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> right it can</font><font color="#E5E5E5"> be bigger and</font><font color="#CCCCCC"> you just</font>

413
00:19:22,720 --> 00:19:26,890
use part<font color="#E5E5E5"> of it</font>

414
00:19:24,480 --> 00:19:31,210
so that<font color="#E5E5E5"> that would probably the idea</font>

415
00:19:26,890 --> 00:19:36,520
behind this but they<font color="#E5E5E5"> did have a sound</font>

416
00:19:31,210 --> 00:19:41,080
flow in<font color="#E5E5E5"> here</font><font color="#CCCCCC"> which was that well new</font>

417
00:19:36,520 --> 00:19:44,889
size is int and<font color="#E5E5E5"> B and land is long</font>

418
00:19:41,080 --> 00:19:48,010
<font color="#E5E5E5">they're both signed now that makes that</font>

419
00:19:44,890 --> 00:19:51,070
<font color="#CCCCCC">comprehend</font><font color="#E5E5E5"> sign so let's say if new size</font>

420
00:19:48,010 --> 00:19:51,520
is anything<font color="#E5E5E5"> bigger than</font><font color="#CCCCCC"> eight</font><font color="#E5E5E5"> thousand</font>

421
00:19:51,070 --> 00:19:53,889
<font color="#CCCCCC">bytes</font>

422
00:19:51,520 --> 00:19:55,870
hex<font color="#CCCCCC"> now</font><font color="#E5E5E5"> it would be negative right</font>

423
00:19:53,890 --> 00:19:59,470
because the<font color="#E5E5E5"> most significant by means</font>

424
00:19:55,870 --> 00:20:01,570
the sign and anything we<font color="#E5E5E5"> can max max</font><font color="#CCCCCC"> and</font>

425
00:19:59,470 --> 00:20:08,309
int is gonna be a negative its<font color="#E5E5E5"> negative</font>

426
00:20:01,570 --> 00:20:10,689
integer<font color="#CCCCCC"> so like it could</font><font color="#E5E5E5"> be minus</font><font color="#CCCCCC"> one</font>

427
00:20:08,309 --> 00:20:13,360
<font color="#CCCCCC">new</font><font color="#E5E5E5"> size could</font><font color="#CCCCCC"> be minus one and then it</font>

428
00:20:10,690 --> 00:20:20,440
would<font color="#E5E5E5"> be smaller than B</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> land if it</font>

429
00:20:13,360 --> 00:20:24,820
was anything like than that so in that

430
00:20:20,440 --> 00:20:27,700
case I could<font color="#E5E5E5"> just okay so that</font><font color="#CCCCCC"> that</font>

431
00:20:24,820 --> 00:20:30,490
would<font color="#E5E5E5"> be okay</font><font color="#CCCCCC"> as long as</font><font color="#E5E5E5"> is a twig would</font>

432
00:20:27,700 --> 00:20:33,160
treat entry dot size as sign - okay

433
00:20:30,490 --> 00:20:35,170
<font color="#E5E5E5">because</font><font color="#CCCCCC"> if it if it was</font><font color="#E5E5E5"> like minus one</font>

434
00:20:33,160 --> 00:20:36,550
then<font color="#CCCCCC"> and like</font><font color="#E5E5E5"> I said</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> would say all</font>

435
00:20:35,170 --> 00:20:38,470
<font color="#CCCCCC">right that minus one so I'm</font><font color="#E5E5E5"> not copying</font>

436
00:20:36,550 --> 00:20:42,879
anything<font color="#E5E5E5"> because it's negative it makes</font>

437
00:20:38,470 --> 00:20:45,070
no sense<font color="#E5E5E5"> but what happened is I assert</font>

438
00:20:42,880 --> 00:20:47,950
<font color="#CCCCCC">we'd went to</font><font color="#E5E5E5"> GZ I read which were the</font>

439
00:20:45,070 --> 00:20:51,520
function<font color="#CCCCCC"> that</font><font color="#E5E5E5"> treated size as size T</font>

440
00:20:47,950 --> 00:20:53,620
which is unsigned<font color="#E5E5E5"> so if it would be a</font>

441
00:20:51,520 --> 00:20:56,679
negative<font color="#E5E5E5"> side it would just</font><font color="#CCCCCC"> treat it as</font>

442
00:20:53,620 --> 00:21:02,379
<font color="#E5E5E5">a huge size okay so like minus one would</font>

443
00:20:56,679 --> 00:21:05,650
<font color="#E5E5E5">be just</font><font color="#CCCCCC"> a very huge number</font><font color="#E5E5E5"> and and</font>

444
00:21:02,380 --> 00:21:08,950
that's that's the<font color="#CCCCCC"> origin of the</font><font color="#E5E5E5"> craft</font>

445
00:21:05,650 --> 00:21:11,800
<font color="#CCCCCC">and</font><font color="#E5E5E5"> I had now</font><font color="#CCCCCC"> you think to fake that you</font>

446
00:21:08,950 --> 00:21:15,070
<font color="#CCCCCC">could</font><font color="#E5E5E5"> just put size T</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> blob you look</font>

447
00:21:11,800 --> 00:21:16,720
and then I would<font color="#CCCCCC"> just you know be</font><font color="#E5E5E5"> beyond</font>

448
00:21:15,070 --> 00:21:18,669
<font color="#E5E5E5">sorry it would be okay</font><font color="#CCCCCC"> but then you have</font>

449
00:21:16,720 --> 00:21:21,640
the plus one so you should like make

450
00:21:18,670 --> 00:21:23,950
<font color="#E5E5E5">sure we doesn't overflow the max oxide</font>

451
00:21:21,640 --> 00:21:27,670
<font color="#E5E5E5">that you can get and the second one</font>

452
00:21:23,950 --> 00:21:29,710
<font color="#E5E5E5">ability I had was with with there's just</font>

453
00:21:27,670 --> 00:21:32,080
like the same thing that I ate here just

454
00:21:29,710 --> 00:21:34,450
with<font color="#CCCCCC"> a</font><font color="#E5E5E5"> different type flag which</font><font color="#CCCCCC"> was a</font>

455
00:21:32,080 --> 00:21:38,889
<font color="#CCCCCC">box header it doesn't really matter so</font>

456
00:21:34,450 --> 00:21:40,870
much<font color="#CCCCCC"> so</font><font color="#E5E5E5"> so yeah so I was just gonna</font>

457
00:21:38,890 --> 00:21:44,440
develop an exploit<font color="#CCCCCC"> for that I was gonna</font>

458
00:21:40,870 --> 00:21:48,850
<font color="#E5E5E5">try</font><font color="#CCCCCC"> and reproduce everything</font><font color="#E5E5E5"> myself so I</font>

459
00:21:44,440 --> 00:21:50,559
started and build small<font color="#CCCCCC"> tough file</font><font color="#E5E5E5"> that</font>

460
00:21:48,850 --> 00:21:53,590
that's the one<font color="#CCCCCC"> I used on my hex editor</font>

461
00:21:50,559 --> 00:21:54,639
<font color="#E5E5E5">and I had that you can see a small L</font>

462
00:21:53,590 --> 00:21:56,139
over there I<font color="#E5E5E5"> know if you can do that</font>

463
00:21:54,640 --> 00:21:59,679
from<font color="#E5E5E5"> here but that</font><font color="#CCCCCC"> a small L which is</font>

464
00:21:56,140 --> 00:22:03,850
<font color="#E5E5E5">for the new long name extension and the</font>

465
00:21:59,679 --> 00:22:07,210
size<font color="#CCCCCC"> is the size for</font><font color="#E5E5E5"> a tar file is like</font>

466
00:22:03,850 --> 00:22:09,490
in octal in ASCII<font color="#E5E5E5"> okay so that that</font>

467
00:22:07,210 --> 00:22:11,490
<font color="#CCCCCC">shows how its TOEIC on</font><font color="#E5E5E5"> that formally so</font>

468
00:22:09,490 --> 00:22:13,720
just one of<font color="#E5E5E5"> seven 777 which is</font>

469
00:22:11,490 --> 00:22:18,160
essentially minus<font color="#CCCCCC"> one and if</font><font color="#E5E5E5"> you located</font>

470
00:22:13,720 --> 00:22:20,440
<font color="#E5E5E5">as a sign and the sign in jail and and I</font>

471
00:22:18,160 --> 00:22:23,770
took that file<font color="#E5E5E5"> and I packed</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> again</font>

472
00:22:20,440 --> 00:22:26,500
<font color="#CCCCCC">just as I</font><font color="#E5E5E5"> did before the crash</font><font color="#CCCCCC"> and I got</font>

473
00:22:23,770 --> 00:22:29,320
a crash on<font color="#E5E5E5"> the execution now what's</font>

474
00:22:26,500 --> 00:22:32,020
happened here that I<font color="#E5E5E5"> just I went in</font>

475
00:22:29,320 --> 00:22:34,870
started with the long name vulnerability

476
00:22:32,020 --> 00:22:37,300
<font color="#CCCCCC">straightaway without</font><font color="#E5E5E5"> having that buffer</font>

477
00:22:34,870 --> 00:22:38,199
allocated<font color="#CCCCCC"> before</font><font color="#E5E5E5"> so it starts with now</font>

478
00:22:37,300 --> 00:22:39,970
<font color="#E5E5E5">Wow</font>

479
00:22:38,200 --> 00:22:42,010
if you don't allocate anything<font color="#E5E5E5"> to it</font>

480
00:22:39,970 --> 00:22:45,040
it's<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to be zero at first so</font><font color="#E5E5E5"> entry</font>

481
00:22:42,010 --> 00:22:48,610
<font color="#E5E5E5">at name with zero and it just tried to</font>

482
00:22:45,040 --> 00:22:51,129
<font color="#E5E5E5">copy you know all that all that</font><font color="#CCCCCC"> minus</font>

483
00:22:48,610 --> 00:22:54,939
one bites into zero and it crashed

484
00:22:51,130 --> 00:22:57,460
<font color="#E5E5E5">because it can't copy to</font><font color="#CCCCCC"> now so</font><font color="#E5E5E5"> that was</font>

485
00:22:54,940 --> 00:23:01,660
all<font color="#E5E5E5"> right I just</font><font color="#CCCCCC"> had to do</font><font color="#E5E5E5"> the same as I</font>

486
00:22:57,460 --> 00:23:04,960
did here<font color="#E5E5E5"> but put put one block before</font>

487
00:23:01,660 --> 00:23:06,490
that that would allocate a normal<font color="#E5E5E5"> size I</font>

488
00:23:04,960 --> 00:23:08,290
<font color="#E5E5E5">don't know just a</font><font color="#CCCCCC"> field like a few</font>

489
00:23:06,490 --> 00:23:12,580
hundred<font color="#CCCCCC"> bytes</font><font color="#E5E5E5"> just to have</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> long</font>

490
00:23:08,290 --> 00:23:14,440
name<font color="#E5E5E5"> not zero so</font><font color="#CCCCCC"> I did</font><font color="#E5E5E5"> that I had one</font>

491
00:23:12,580 --> 00:23:15,760
block that<font color="#E5E5E5"> would allocate the long name</font>

492
00:23:14,440 --> 00:23:20,640
buffer and the second one would<font color="#E5E5E5"> just</font>

493
00:23:15,760 --> 00:23:23,860
<font color="#CCCCCC">crash it and I managed to to actually</font>

494
00:23:20,640 --> 00:23:26,230
<font color="#E5E5E5">make it make it crash and I put like I</font>

495
00:23:23,860 --> 00:23:27,939
use<font color="#CCCCCC"> gdb and I saw</font><font color="#E5E5E5"> that it's it's</font>

496
00:23:26,230 --> 00:23:30,760
overflowing<font color="#E5E5E5"> the ice at weight was</font>

497
00:23:27,940 --> 00:23:35,440
copying all the bytes from the minus 1

498
00:23:30,760 --> 00:23:42,220
whatever<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the to the long name buffer</font>

499
00:23:35,440 --> 00:23:43,450
and and I had an overflow<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so one</font>

500
00:23:42,220 --> 00:23:43,780
thing<font color="#CCCCCC"> that</font><font color="#E5E5E5"> really helped me here with</font>

501
00:23:43,450 --> 00:23:46,750
that

502
00:23:43,780 --> 00:23:50,260
gzip read<font color="#E5E5E5"> which would the function</font><font color="#CCCCCC"> that</font>

503
00:23:46,750 --> 00:23:52,390
was called<font color="#CCCCCC"> for my slave it would it</font>

504
00:23:50,260 --> 00:23:55,360
would stop once it sauce runs out right

505
00:23:52,390 --> 00:23:57,160
so if I give it<font color="#E5E5E5"> - 1 bytes to read it</font>

506
00:23:55,360 --> 00:23:59,199
wouldn't expect to read the amount of

507
00:23:57,160 --> 00:24:01,809
bytes from<font color="#E5E5E5"> the file so I could just put</font>

508
00:23:59,200 --> 00:24:04,540
whatever<font color="#CCCCCC"> I want in the file</font><font color="#E5E5E5"> and would</font>

509
00:24:01,809 --> 00:24:05,678
stop when the file ends and not when it

510
00:24:04,540 --> 00:24:08,440
wouldn't keep reading from the file

511
00:24:05,679 --> 00:24:11,790
non-existent but so what that was pretty

512
00:24:08,440 --> 00:24:11,790
<font color="#E5E5E5">helpful for developing on exploit</font>

513
00:24:12,320 --> 00:24:19,280
and and I had to do something<font color="#CCCCCC"> who's that</font>

514
00:24:16,160 --> 00:24:21,410
<font color="#CCCCCC">EEP</font><font color="#E5E5E5"> overflow now I don't know how many</font>

515
00:24:19,280 --> 00:24:24,800
<font color="#E5E5E5">of</font><font color="#CCCCCC"> you have story</font><font color="#E5E5E5"> the hippo flows before</font>

516
00:24:21,410 --> 00:24:27,500
but there's<font color="#CCCCCC"> traditional ways you can you</font>

517
00:24:24,800 --> 00:24:31,220
can<font color="#CCCCCC"> exploit a nipple flow with with lip</font>

518
00:24:27,500 --> 00:24:34,750
<font color="#CCCCCC">see with normal lips like old male look</font>

519
00:24:31,220 --> 00:24:38,930
at some unlink<font color="#E5E5E5"> vulnerability</font><font color="#CCCCCC"> there was</font>

520
00:24:34,750 --> 00:24:41,740
there were lots of<font color="#CCCCCC"> of</font><font color="#E5E5E5"> problems with the</font>

521
00:24:38,930 --> 00:24:44,450
way<font color="#E5E5E5"> lips he allocated the</font><font color="#CCCCCC"> memory itself</font>

522
00:24:41,740 --> 00:24:47,510
<font color="#CCCCCC">he could just like over white struts of</font>

523
00:24:44,450 --> 00:24:49,220
lip see<font color="#E5E5E5"> but I didn't have no lips in</font>

524
00:24:47,510 --> 00:24:50,810
here I had muscle and I didn't want to

525
00:24:49,220 --> 00:24:54,200
<font color="#E5E5E5">look into muscle and to understand</font><font color="#CCCCCC"> how I</font>

526
00:24:50,810 --> 00:24:56,179
would lay out<font color="#E5E5E5"> the memory so so I just</font>

527
00:24:54,200 --> 00:24:57,920
<font color="#E5E5E5">decided I'd go with something simpler</font><font color="#CCCCCC"> I</font>

528
00:24:56,180 --> 00:24:59,480
just look into the<font color="#E5E5E5"> hip and see if</font>

529
00:24:57,920 --> 00:25:02,660
there's anything I can<font color="#CCCCCC"> overwrite over</font>

530
00:24:59,480 --> 00:25:04,430
there and<font color="#CCCCCC"> no</font><font color="#E5E5E5"> make sense with it for</font>

531
00:25:02,660 --> 00:25:07,100
instance<font color="#CCCCCC"> I thought I really wanted that</font>

532
00:25:04,430 --> 00:25:09,680
<font color="#E5E5E5">to happen but it did not to have a flag</font>

533
00:25:07,100 --> 00:25:11,719
<font color="#CCCCCC">on</font><font color="#E5E5E5"> the hip that would tell it to to</font>

534
00:25:09,680 --> 00:25:13,850
<font color="#E5E5E5">ignore the signature</font><font color="#CCCCCC"> alright maybe</font><font color="#E5E5E5"> they</font>

535
00:25:11,720 --> 00:25:15,410
have a flag that says<font color="#E5E5E5"> your signature</font>

536
00:25:13,850 --> 00:25:16,699
<font color="#CCCCCC">when</font><font color="#E5E5E5"> I would put</font><font color="#CCCCCC"> table</font><font color="#E5E5E5"> on there and they</font>

537
00:25:15,410 --> 00:25:17,930
would not<font color="#CCCCCC"> use a signature and I could</font>

538
00:25:16,700 --> 00:25:21,140
put whatever color I want in the

539
00:25:17,930 --> 00:25:22,580
packages<font color="#E5E5E5"> but I didn't have it and the</font>

540
00:25:21,140 --> 00:25:26,360
second idea<font color="#CCCCCC"> I had was to go with</font>

541
00:25:22,580 --> 00:25:29,330
<font color="#CCCCCC">callbacks I thought they might have them</font>

542
00:25:26,360 --> 00:25:31,669
<font color="#E5E5E5">callbacks on the hip that</font><font color="#CCCCCC"> I can just</font>

543
00:25:29,330 --> 00:25:34,010
call<font color="#CCCCCC"> back says in function addresses</font>

544
00:25:31,670 --> 00:25:37,310
that I could put any address that I want

545
00:25:34,010 --> 00:25:41,000
on there and<font color="#CCCCCC"> any of them called</font>

546
00:25:37,310 --> 00:25:44,210
<font color="#CCCCCC">had that idea because</font><font color="#E5E5E5"> I know they use is</font>

547
00:25:41,000 --> 00:25:46,700
<font color="#CCCCCC">a tweed which means if if is is going</font><font color="#E5E5E5"> to</font>

548
00:25:44,210 --> 00:25:48,380
<font color="#CCCCCC">be</font><font color="#E5E5E5"> on the hip then it's gonna have all</font>

549
00:25:46,700 --> 00:25:51,470
<font color="#E5E5E5">the callbacks on the hip</font><font color="#CCCCCC"> too and I might</font>

550
00:25:48,380 --> 00:25:53,030
<font color="#E5E5E5">be able to</font><font color="#CCCCCC"> override them now</font><font color="#E5E5E5"> that</font>

551
00:25:51,470 --> 00:25:56,090
solution will<font color="#E5E5E5"> work as long as we don't</font>

552
00:25:53,030 --> 00:25:59,300
<font color="#E5E5E5">have a SLR which is</font><font color="#CCCCCC"> address space demo</font>

553
00:25:56,090 --> 00:26:02,659
<font color="#E5E5E5">and immunization it's one like</font>

554
00:25:59,300 --> 00:26:05,030
difference method<font color="#E5E5E5"> that mean on every</font>

555
00:26:02,660 --> 00:26:06,680
execution<font color="#CCCCCC"> you have of an elf file</font><font color="#E5E5E5"> all</font>

556
00:26:05,030 --> 00:26:11,000
the<font color="#CCCCCC"> addresses piece is going</font><font color="#E5E5E5"> to be</font>

557
00:26:06,680 --> 00:26:13,100
randomized<font color="#E5E5E5"> okay so you can't you can't</font>

558
00:26:11,000 --> 00:26:15,440
know beforehand<font color="#CCCCCC"> like which section is</font>

559
00:26:13,100 --> 00:26:17,270
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be at which address</font><font color="#E5E5E5"> so if I</font>

560
00:26:15,440 --> 00:26:18,980
want<font color="#E5E5E5"> to call an address I want instead</font>

561
00:26:17,270 --> 00:26:22,340
<font color="#E5E5E5">of one of their callbacks I'd have to</font>

562
00:26:18,980 --> 00:26:24,800
know it's a dress and we realized<font color="#E5E5E5"> that's</font>

563
00:26:22,340 --> 00:26:25,909
<font color="#CCCCCC">not going to be possible</font><font color="#E5E5E5"> but there are</font>

564
00:26:24,800 --> 00:26:28,879
ways to<font color="#E5E5E5"> bypass</font>

565
00:26:25,910 --> 00:26:30,860
today I<font color="#E5E5E5"> think most people</font><font color="#CCCCCC"> do use like</font>

566
00:26:28,880 --> 00:26:32,810
they find other memory leaks and then

567
00:26:30,860 --> 00:26:35,030
<font color="#E5E5E5">they know the address space and and then</font>

568
00:26:32,810 --> 00:26:37,340
they they like they would calculate

569
00:26:35,030 --> 00:26:39,889
<font color="#E5E5E5">everything on the spot but I just wanted</font>

570
00:26:37,340 --> 00:26:42,770
the small exploit like a small<font color="#E5E5E5"> proof of</font>

571
00:26:39,890 --> 00:26:44,140
concept so I just<font color="#CCCCCC"> disable this a lot</font><font color="#E5E5E5"> for</font>

572
00:26:42,770 --> 00:26:48,530
<font color="#E5E5E5">this</font>

573
00:26:44,140 --> 00:26:52,160
looking to the hip<font color="#E5E5E5"> and I found I assert</font>

574
00:26:48,530 --> 00:26:54,139
<font color="#E5E5E5">width on the heap as I thought and</font><font color="#CCCCCC"> its</font>

575
00:26:52,160 --> 00:26:56,840
<font color="#E5E5E5">definition was just like that it has</font>

576
00:26:54,140 --> 00:26:59,270
three functions<font color="#E5E5E5"> one is get</font><font color="#CCCCCC"> mera there's</font>

577
00:26:56,840 --> 00:27:00,679
<font color="#E5E5E5">read and there was closed now I don't I</font>

578
00:26:59,270 --> 00:27:02,270
don't know what get<font color="#CCCCCC"> married</font><font color="#E5E5E5"> for but it</font>

579
00:27:00,680 --> 00:27:04,640
was never called<font color="#CCCCCC"> so I didn't look into</font>

580
00:27:02,270 --> 00:27:08,540
<font color="#E5E5E5">it and with was the one that actually</font>

581
00:27:04,640 --> 00:27:11,450
made<font color="#CCCCCC"> the copy and I just I put a</font>

582
00:27:08,540 --> 00:27:15,639
breakpoint<font color="#E5E5E5"> on it to see its address and</font>

583
00:27:11,450 --> 00:27:18,740
<font color="#E5E5E5">I found it</font><font color="#CCCCCC"> serviced</font><font color="#E5E5E5"> and luckily it was</font>

584
00:27:15,640 --> 00:27:20,930
<font color="#E5E5E5">ahead the buffer</font><font color="#CCCCCC"> that I am overflowing</font>

585
00:27:18,740 --> 00:27:23,720
<font color="#E5E5E5">right so you can see the difference</font>

586
00:27:20,930 --> 00:27:27,050
<font color="#E5E5E5">between the long name the entry that</font>

587
00:27:23,720 --> 00:27:33,110
<font color="#E5E5E5">name buffer to</font><font color="#CCCCCC"> the highest</font><font color="#E5E5E5"> rock is</font>

588
00:27:27,050 --> 00:27:37,159
something<font color="#E5E5E5"> like it's 0x</font><font color="#CCCCCC"> 1538 zero bytes</font>

589
00:27:33,110 --> 00:27:39,320
<font color="#E5E5E5">so on the hip</font><font color="#CCCCCC"> I'd have the the one I'm</font>

590
00:27:37,160 --> 00:27:41,480
overflowing then all kinds of data<font color="#E5E5E5"> that</font>

591
00:27:39,320 --> 00:27:47,659
<font color="#CCCCCC">I don't know what's made of and after</font>

592
00:27:41,480 --> 00:27:49,370
<font color="#E5E5E5">that the is buffer so I opened my top</font>

593
00:27:47,660 --> 00:27:53,450
file that we don't want that I did

594
00:27:49,370 --> 00:27:55,280
override in and I put different<font color="#E5E5E5"> mount of</font>

595
00:27:53,450 --> 00:27:57,680
bytes with with<font color="#CCCCCC"> DeRose or whatever</font>

596
00:27:55,280 --> 00:28:00,260
random<font color="#CCCCCC"> bytes</font><font color="#E5E5E5"> and after that I put just</font>

597
00:27:57,680 --> 00:28:04,540
<font color="#E5E5E5">zeros now that was pretty risky</font><font color="#CCCCCC"> because</font>

598
00:28:00,260 --> 00:28:07,340
<font color="#E5E5E5">if there was anything useful on that</font>

599
00:28:04,540 --> 00:28:11,810
<font color="#CCCCCC">15:3 a they were</font><font color="#E5E5E5"> bytes that</font><font color="#CCCCCC"> i overridden</font>

600
00:28:07,340 --> 00:28:14,840
<font color="#CCCCCC">i would crash it but it just walked</font><font color="#E5E5E5"> and</font>

601
00:28:11,810 --> 00:28:17,149
<font color="#E5E5E5">it crashed on</font><font color="#CCCCCC"> 0 and the crash</font><font color="#E5E5E5"> was</font>

602
00:28:14,840 --> 00:28:20,000
<font color="#E5E5E5">originating form from that call to</font><font color="#CCCCCC"> iose</font>

603
00:28:17,150 --> 00:28:22,610
<font color="#CCCCCC">a trade so it would just</font><font color="#E5E5E5"> essentially</font>

604
00:28:20,000 --> 00:28:25,790
<font color="#E5E5E5">call the the devil address that</font><font color="#CCCCCC"> i put</font>

605
00:28:22,610 --> 00:28:27,709
instead<font color="#E5E5E5"> of that</font><font color="#CCCCCC"> i said wave so</font><font color="#E5E5E5"> that</font>

606
00:28:25,790 --> 00:28:30,170
meant<font color="#E5E5E5"> that</font><font color="#CCCCCC"> i can put whatever adwords</font><font color="#E5E5E5"> I</font>

607
00:28:27,710 --> 00:28:34,270
want on that<font color="#E5E5E5"> and that</font><font color="#CCCCCC"> callback</font><font color="#E5E5E5"> and it</font>

608
00:28:30,170 --> 00:28:34,270
would be called with my<font color="#E5E5E5"> parameters</font>

609
00:28:34,570 --> 00:28:39,710
yeah but parameters<font color="#CCCCCC"> how</font><font color="#E5E5E5"> would I pass</font>

610
00:28:37,420 --> 00:28:42,860
<font color="#E5E5E5">parameter to the function that I'm</font><font color="#CCCCCC"> going</font>

611
00:28:39,710 --> 00:28:45,770
but it's gonna bring whatever<font color="#CCCCCC"> is a tweed</font>

612
00:28:42,860 --> 00:28:48,800
was was<font color="#E5E5E5"> getting to my to</font><font color="#CCCCCC"> my call</font>

613
00:28:45,770 --> 00:28:53,750
so the first<font color="#E5E5E5"> parameter it gets is is</font>

614
00:28:48,800 --> 00:28:56,389
itself now let's look at<font color="#CCCCCC"> ice again it</font>

615
00:28:53,750 --> 00:28:58,580
starts with get<font color="#CCCCCC"> Mara</font><font color="#E5E5E5"> so that's</font><font color="#CCCCCC"> eight</font>

616
00:28:56,390 --> 00:29:00,170
bytes of data that I could put whatever

617
00:28:58,580 --> 00:29:05,480
I want in<font color="#E5E5E5"> and</font><font color="#CCCCCC"> would be the first</font>

618
00:29:00,170 --> 00:29:07,040
parameters<font color="#CCCCCC"> and I use that so the</font>

619
00:29:05,480 --> 00:29:11,060
function<font color="#CCCCCC"> that I</font><font color="#E5E5E5"> wanted to call with</font>

620
00:29:07,040 --> 00:29:13,909
system system is a<font color="#CCCCCC"> cisco that that takes</font>

621
00:29:11,060 --> 00:29:16,730
a<font color="#CCCCCC"> string a shell string and just execute</font>

622
00:29:13,910 --> 00:29:19,160
it<font color="#CCCCCC"> so that's pretty simple</font><font color="#E5E5E5"> for proof of</font>

623
00:29:16,730 --> 00:29:21,920
<font color="#E5E5E5">concept let's say I just write echo</font><font color="#CCCCCC"> one</font>

624
00:29:19,160 --> 00:29:24,920
in in it and it would just echo one<font color="#E5E5E5"> on</font>

625
00:29:21,920 --> 00:29:27,140
<font color="#CCCCCC">like wound one that so I</font><font color="#E5E5E5"> put like one</font>

626
00:29:24,920 --> 00:29:31,310
instead<font color="#E5E5E5"> of the eight bytes of</font><font color="#CCCCCC"> the get</font>

627
00:29:27,140 --> 00:29:34,070
meta<font color="#E5E5E5"> and I just ran that and I put</font>

628
00:29:31,310 --> 00:29:36,470
system in the read<font color="#E5E5E5"> address and I got it</font>

629
00:29:34,070 --> 00:29:40,820
<font color="#CCCCCC">running I got one</font><font color="#E5E5E5"> point into the screen</font>

630
00:29:36,470 --> 00:29:43,040
<font color="#CCCCCC">and then a sec for now</font><font color="#E5E5E5"> I found</font><font color="#CCCCCC"> that was</font>

631
00:29:40,820 --> 00:29:45,110
good<font color="#E5E5E5"> and that's why we're producing it</font>

632
00:29:43,040 --> 00:29:45,590
on a<font color="#CCCCCC"> different</font><font color="#E5E5E5"> camera version and it</font>

633
00:29:45,110 --> 00:29:47,990
didn't work

634
00:29:45,590 --> 00:29:51,379
now<font color="#CCCCCC"> try and figure out what happened</font>

635
00:29:47,990 --> 00:29:53,450
<font color="#CCCCCC">there and it would just like since I</font>

636
00:29:51,380 --> 00:29:55,880
said<font color="#CCCCCC"> we would copy in chunks it would</font>

637
00:29:53,450 --> 00:29:57,500
<font color="#E5E5E5">just copy at one like at one time it</font>

638
00:29:55,880 --> 00:30:01,040
just copied<font color="#CCCCCC"> for</font><font color="#E5E5E5"> bytes instead of eight</font>

639
00:29:57,500 --> 00:30:03,560
<font color="#E5E5E5">and and then call I assert read again</font>

640
00:30:01,040 --> 00:30:05,330
but the new address<font color="#E5E5E5"> of I said</font><font color="#CCCCCC"> weight</font>

641
00:30:03,560 --> 00:30:07,580
would be four bytes of<font color="#CCCCCC"> the original</font>

642
00:30:05,330 --> 00:30:11,179
<font color="#E5E5E5">address and four bytes of my overridden</font>

643
00:30:07,580 --> 00:30:13,129
address<font color="#E5E5E5"> and it would crash so I had to</font>

644
00:30:11,180 --> 00:30:17,750
find something else<font color="#E5E5E5"> on the heap I could</font>

645
00:30:13,130 --> 00:30:20,120
do and and I<font color="#E5E5E5"> just looked in the hip</font>

646
00:30:17,750 --> 00:30:23,120
again I put<font color="#E5E5E5"> all kind of random bytes in</font>

647
00:30:20,120 --> 00:30:26,600
that I put tons of<font color="#CCCCCC"> eyes in there</font><font color="#E5E5E5"> and I</font>

648
00:30:23,120 --> 00:30:29,270
found<font color="#CCCCCC"> GIS PS which was an internal</font>

649
00:30:26,600 --> 00:30:32,320
pointer for the gun zip function<font color="#CCCCCC"> it</font>

650
00:30:29,270 --> 00:30:36,260
worked just the<font color="#E5E5E5"> same with the is one</font>

651
00:30:32,320 --> 00:30:39,980
only it had<font color="#E5E5E5"> flags</font><font color="#CCCCCC"> the flags parameter to</font>

652
00:30:36,260 --> 00:30:43,340
and struck<font color="#E5E5E5"> so instead of eight bytes to</font>

653
00:30:39,980 --> 00:30:47,210
to overflow<font color="#CCCCCC"> it</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> had</font><font color="#E5E5E5"> 16 ones</font><font color="#CCCCCC"> I could</font>

654
00:30:43,340 --> 00:30:48,230
<font color="#CCCCCC">use for</font><font color="#E5E5E5"> my payload string right because</font>

655
00:30:47,210 --> 00:30:55,040
I<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> really care about the</font>

656
00:30:48,230 --> 00:30:58,010
flag that it gets so so that was that

657
00:30:55,040 --> 00:31:02,059
was<font color="#CCCCCC"> a screenshot from</font><font color="#E5E5E5"> my hex editor</font>

658
00:30:58,010 --> 00:31:06,410
<font color="#E5E5E5">making that exploit I put</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> code twist</font>

659
00:31:02,059 --> 00:31:09,020
<font color="#E5E5E5">look inside the first 16 bytes</font><font color="#CCCCCC"> the first</font>

660
00:31:06,410 --> 00:31:11,480
date<font color="#E5E5E5"> you can see is</font><font color="#CCCCCC"> gonna be the flag</font>

661
00:31:09,020 --> 00:31:14,900
<font color="#CCCCCC">the second is going</font><font color="#E5E5E5"> to be the</font><font color="#CCCCCC"> weed</font>

662
00:31:11,480 --> 00:31:16,610
not with the get meta function and after

663
00:31:14,900 --> 00:31:19,250
that it's<font color="#E5E5E5"> going to be the weed function</font>

664
00:31:16,610 --> 00:31:21,699
which which I put<font color="#E5E5E5"> the system address</font>

665
00:31:19,250 --> 00:31:23,720
that<font color="#E5E5E5"> I checked</font><font color="#CCCCCC"> for instead and</font>

666
00:31:21,700 --> 00:31:26,360
everything after<font color="#CCCCCC"> that is irrelevant</font>

667
00:31:23,720 --> 00:31:28,010
because I didn't care<font color="#CCCCCC"> about recovering</font>

668
00:31:26,360 --> 00:31:33,139
the execution I just wanted my code<font color="#CCCCCC"> to</font>

669
00:31:28,010 --> 00:31:35,090
<font color="#CCCCCC">run my my pedal to do its work so I ran</font>

670
00:31:33,140 --> 00:31:37,070
it and I got waistlock<font color="#E5E5E5"> printhead</font><font color="#CCCCCC"> and</font>

671
00:31:35,090 --> 00:31:38,689
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> I home and that</font><font color="#E5E5E5"> essentially meant</font>

672
00:31:37,070 --> 00:31:40,790
that I could run whatever<font color="#E5E5E5"> code when I</font>

673
00:31:38,690 --> 00:31:47,000
was<font color="#E5E5E5"> 16 bytes off of</font><font color="#CCCCCC"> Shels doing that I</font>

674
00:31:40,790 --> 00:31:48,830
<font color="#CCCCCC">went</font><font color="#E5E5E5"> on on that</font><font color="#CCCCCC"> Alpine and and I just</font>

675
00:31:47,000 --> 00:31:51,710
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right so I went and what a different</font>

676
00:31:48,830 --> 00:31:53,480
exploit<font color="#CCCCCC"> instead of putting the equity</font>

677
00:31:51,710 --> 00:31:54,020
stock frame which is<font color="#E5E5E5"> pretty useless in</font>

678
00:31:53,480 --> 00:31:56,450
<font color="#E5E5E5">itself</font>

679
00:31:54,020 --> 00:31:59,210
I just put like net<font color="#E5E5E5"> cut on there which</font>

680
00:31:56,450 --> 00:32:01,429
which listens for from from a port<font color="#E5E5E5"> and</font>

681
00:31:59,210 --> 00:32:03,440
then I just I popped up a<font color="#E5E5E5"> shelf</font><font color="#CCCCCC"> home</font>

682
00:32:01,429 --> 00:32:04,970
from a<font color="#CCCCCC"> different system</font><font color="#E5E5E5"> and I had it</font>

683
00:32:03,440 --> 00:32:08,000
<font color="#E5E5E5">working and I just could run whatever</font>

684
00:32:04,970 --> 00:32:11,169
whatever like<font color="#E5E5E5"> I want from the shell and</font>

685
00:32:08,000 --> 00:32:13,400
then when I<font color="#CCCCCC"> closed it it would crash but</font>

686
00:32:11,169 --> 00:32:16,070
sophisticated attacker could just take

687
00:32:13,400 --> 00:32:20,960
<font color="#CCCCCC">that and</font><font color="#E5E5E5"> actually recover the execution</font>

688
00:32:16,070 --> 00:32:24,159
and that<font color="#E5E5E5"> meant</font><font color="#CCCCCC"> that if you don't</font><font color="#E5E5E5"> man in</font>

689
00:32:20,960 --> 00:32:27,640
the<font color="#E5E5E5"> middle or</font><font color="#CCCCCC"> the image is pretty</font>

690
00:32:24,160 --> 00:32:29,890
<font color="#E5E5E5">blurred but what it showed is that a</font>

691
00:32:27,640 --> 00:32:33,679
<font color="#CCCCCC">man-in-the-middle attack er could just</font>

692
00:32:29,890 --> 00:32:36,200
take<font color="#CCCCCC"> there's one you want</font><font color="#E5E5E5"> apk update it</font>

693
00:32:33,679 --> 00:32:39,200
could put<font color="#E5E5E5"> his his own payload just like</font>

694
00:32:36,200 --> 00:32:41,630
I did there and recover<font color="#CCCCCC"> the execution so</font>

695
00:32:39,200 --> 00:32:43,130
you never know<font color="#CCCCCC"> that happened</font><font color="#E5E5E5"> and you'd</font>

696
00:32:41,630 --> 00:32:46,160
<font color="#E5E5E5">think everything is</font><font color="#CCCCCC"> okay when</font><font color="#E5E5E5"> you want</font>

697
00:32:43,130 --> 00:32:49,190
update and it get<font color="#E5E5E5"> its payload running</font>

698
00:32:46,160 --> 00:32:52,010
there<font color="#E5E5E5"> and and that would happen anytime</font>

699
00:32:49,190 --> 00:32:53,720
<font color="#E5E5E5">you would you build docker image based</font>

700
00:32:52,010 --> 00:32:57,770
on Alpine or you update your current

701
00:32:53,720 --> 00:33:00,580
<font color="#CCCCCC">Alpine</font><font color="#E5E5E5"> Linux says and and that's pretty</font>

702
00:32:57,770 --> 00:33:04,030
nasty so

703
00:33:00,580 --> 00:33:05,230
I<font color="#E5E5E5"> promise to talk a bit</font><font color="#CCCCCC"> about what</font><font color="#E5E5E5"> do</font>

704
00:33:04,030 --> 00:33:06,670
<font color="#CCCCCC">you do when you get that</font><font color="#E5E5E5"> kind of</font>

705
00:33:05,230 --> 00:33:08,470
vulnerability<font color="#E5E5E5"> I might have found this</font>

706
00:33:06,670 --> 00:33:10,960
I've<font color="#CCCCCC"> exploited this</font>

707
00:33:08,470 --> 00:33:13,450
that's like effective now it could

708
00:33:10,960 --> 00:33:16,810
affect people right now<font color="#E5E5E5"> so how do you go</font>

709
00:33:13,450 --> 00:33:17,290
about sharing<font color="#E5E5E5"> that with people</font><font color="#CCCCCC"> closing</font>

710
00:33:16,810 --> 00:33:21,190
it

711
00:33:17,290 --> 00:33:26,230
what<font color="#E5E5E5"> do you do so in general you have</font>

712
00:33:21,190 --> 00:33:28,480
three ways<font color="#CCCCCC"> to to disclose like free</font><font color="#E5E5E5"> way</font>

713
00:33:26,230 --> 00:33:30,670
of<font color="#CCCCCC"> disclosure of a new vulnerability</font>

714
00:33:28,480 --> 00:33:32,860
the first one is non-disclosure<font color="#CCCCCC"> which</font>

715
00:33:30,670 --> 00:33:34,090
means you found something<font color="#E5E5E5"> and you're</font>

716
00:33:32,860 --> 00:33:36,129
keeping<font color="#E5E5E5"> it for</font><font color="#CCCCCC"> yourself you're</font><font color="#E5E5E5"> not</font>

717
00:33:34,090 --> 00:33:40,209
sharing<font color="#E5E5E5"> it with</font><font color="#CCCCCC"> anyone or worst case</font>

718
00:33:36,130 --> 00:33:42,640
<font color="#E5E5E5">you're selling it to people</font><font color="#CCCCCC"> you might be</font>

719
00:33:40,210 --> 00:33:46,270
using<font color="#CCCCCC"> it</font><font color="#E5E5E5"> maliciously that's like the the</font>

720
00:33:42,640 --> 00:33:47,650
<font color="#E5E5E5">blackhat side of disclosure now on the</font>

721
00:33:46,270 --> 00:33:49,750
<font color="#E5E5E5">other</font><font color="#CCCCCC"> hand</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have full disclosure</font>

722
00:33:47,650 --> 00:33:51,910
<font color="#CCCCCC">which means taking</font><font color="#E5E5E5"> everything</font><font color="#CCCCCC"> you've</font>

723
00:33:49,750 --> 00:33:54,730
found and just<font color="#E5E5E5"> putting it out there</font><font color="#CCCCCC"> all</font>

724
00:33:51,910 --> 00:33:56,560
<font color="#E5E5E5">right just like sharing everything</font>

725
00:33:54,730 --> 00:33:59,350
including<font color="#E5E5E5"> your proof of concept online</font>

726
00:33:56,560 --> 00:34:01,929
and<font color="#E5E5E5"> having people do that and I know</font>

727
00:33:59,350 --> 00:34:03,610
<font color="#E5E5E5">some we should think that once we do</font>

728
00:34:01,930 --> 00:34:07,090
full disclosure<font color="#E5E5E5"> it puts a lot of effort</font>

729
00:34:03,610 --> 00:34:09,790
on the<font color="#CCCCCC"> vendors to fix the bugs and well</font>

730
00:34:07,090 --> 00:34:12,009
<font color="#E5E5E5">that's true</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> does put a lot of effort</font>

731
00:34:09,790 --> 00:34:16,418
<font color="#E5E5E5">on them but it also creates a</font><font color="#CCCCCC"> lot of</font>

732
00:34:12,010 --> 00:34:18,160
chaos<font color="#CCCCCC"> okay so what you should do is</font>

733
00:34:16,418 --> 00:34:20,109
follow responsible disclosure<font color="#E5E5E5"> or</font>

734
00:34:18,159 --> 00:34:23,080
<font color="#CCCCCC">coordinated disclosure which is the</font>

735
00:34:20,110 --> 00:34:25,660
process<font color="#E5E5E5"> of contacting the vendor</font>

736
00:34:23,080 --> 00:34:28,389
<font color="#CCCCCC">privately let me know if the</font><font color="#E5E5E5"> problem and</font>

737
00:34:25,659 --> 00:34:32,370
asking them to<font color="#E5E5E5"> fix it now there's no</font>

738
00:34:28,389 --> 00:34:35,259
exact definition of how you do that<font color="#E5E5E5"> but</font>

739
00:34:32,370 --> 00:34:38,259
but like what I like to<font color="#E5E5E5"> think of that</font>

740
00:34:35,260 --> 00:34:39,400
first<font color="#E5E5E5"> you estimate the impact you</font><font color="#CCCCCC"> would</font>

741
00:34:38,260 --> 00:34:42,669
have proof<font color="#CCCCCC"> of concept if you have enough</font>

742
00:34:39,400 --> 00:34:46,030
<font color="#E5E5E5">time for</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and then you send it to</font>

743
00:34:42,668 --> 00:34:47,799
them<font color="#E5E5E5"> because some some researchers just</font>

744
00:34:46,030 --> 00:34:49,540
send the crash<font color="#CCCCCC"> report to the vendor and</font>

745
00:34:47,800 --> 00:34:51,070
they think<font color="#CCCCCC"> they'd fix</font><font color="#E5E5E5"> it but just</font>

746
00:34:49,540 --> 00:34:53,139
sending a crash<font color="#CCCCCC"> report is not</font><font color="#E5E5E5"> enough at</font>

747
00:34:51,070 --> 00:34:55,120
all<font color="#E5E5E5"> you'd have to explain what the bug</font>

748
00:34:53,139 --> 00:34:57,670
is and then try<font color="#E5E5E5"> and get them to fix it</font>

749
00:34:55,120 --> 00:35:00,759
actually so just write a short paragraph

750
00:34:57,670 --> 00:35:02,680
<font color="#E5E5E5">explain what happened there and and let</font>

751
00:35:00,760 --> 00:35:05,380
them give them a few<font color="#E5E5E5"> days to look</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and</font>

752
00:35:02,680 --> 00:35:08,500
<font color="#E5E5E5">fix it now</font><font color="#CCCCCC"> you'd</font><font color="#E5E5E5"> expect the response</font>

753
00:35:05,380 --> 00:35:12,340
<font color="#E5E5E5">back certainly now I think most vendors</font>

754
00:35:08,500 --> 00:35:13,930
do to have like emails especially<font color="#E5E5E5"> meant</font>

755
00:35:12,340 --> 00:35:16,720
<font color="#CCCCCC">for that right you</font><font color="#E5E5E5"> have</font>

756
00:35:13,930 --> 00:35:20,649
<font color="#CCCCCC">a security</font><font color="#E5E5E5"> team that meant just for for</font>

757
00:35:16,720 --> 00:35:22,419
<font color="#E5E5E5">clothing such vulnerable</font><font color="#CCCCCC"> T's</font><font color="#E5E5E5"> so you</font>

758
00:35:20,650 --> 00:35:25,210
would<font color="#CCCCCC"> expect to get</font><font color="#E5E5E5"> contact</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> few days</font>

759
00:35:22,420 --> 00:35:26,680
and and know when a fix is gonna is

760
00:35:25,210 --> 00:35:30,220
going to be like you<font color="#E5E5E5"> and</font><font color="#CCCCCC"> ask for an</font>

761
00:35:26,680 --> 00:35:32,799
estimate<font color="#E5E5E5"> and and and that's it it will</font>

762
00:35:30,220 --> 00:35:37,240
be closed<font color="#CCCCCC"> and at the same time you'd</font>

763
00:35:32,800 --> 00:35:40,450
want to<font color="#E5E5E5"> sign a CV ID now a CV is how</font>

764
00:35:37,240 --> 00:35:41,919
many people if you do<font color="#E5E5E5"> know CV right so</font>

765
00:35:40,450 --> 00:35:43,689
that's<font color="#E5E5E5"> most of</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> it's certainly a</font>

766
00:35:41,920 --> 00:35:47,200
number<font color="#E5E5E5"> that assigned for each</font>

767
00:35:43,690 --> 00:35:49,270
vulnerability<font color="#E5E5E5"> so so you can</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> it up</font>

768
00:35:47,200 --> 00:35:51,279
online and<font color="#E5E5E5"> you that number whenever you</font>

769
00:35:49,270 --> 00:35:54,160
talk about<font color="#E5E5E5"> the vulnerability and</font><font color="#CCCCCC"> that</font>

770
00:35:51,280 --> 00:35:57,119
way everybody<font color="#CCCCCC"> knows everybody can refer</font>

771
00:35:54,160 --> 00:35:59,470
to<font color="#CCCCCC"> that specific bug at the same time</font>

772
00:35:57,119 --> 00:36:01,510
and so to get<font color="#CCCCCC"> CVE</font>

773
00:35:59,470 --> 00:36:03,669
<font color="#E5E5E5">you'd have</font><font color="#CCCCCC"> to contact meet with thats</font>

774
00:36:01,510 --> 00:36:06,670
<font color="#E5E5E5">organization it's a non-profit</font><font color="#CCCCCC"> american</font>

775
00:36:03,670 --> 00:36:08,859
<font color="#CCCCCC">organization that's that's one of the</font>

776
00:36:06,670 --> 00:36:14,109
things they do<font color="#E5E5E5"> is</font><font color="#CCCCCC"> sign civvies</font><font color="#E5E5E5"> and</font>

777
00:36:08,859 --> 00:36:16,058
organize<font color="#CCCCCC"> a whole TV thing and and they</font>

778
00:36:14,109 --> 00:36:20,828
first asked you<font color="#E5E5E5"> to search for</font><font color="#CCCCCC"> a vendor</font>

779
00:36:16,059 --> 00:36:22,270
<font color="#CCCCCC">that that's responsible for that for</font>

780
00:36:20,829 --> 00:36:23,829
<font color="#CCCCCC">that product</font><font color="#E5E5E5"> that you found</font><font color="#CCCCCC"> the bargain</font>

781
00:36:22,270 --> 00:36:27,220
so let's say you found a vulnerability

782
00:36:23,829 --> 00:36:29,410
in iOS you would<font color="#E5E5E5"> contact</font><font color="#CCCCCC"> Apple alright</font>

783
00:36:27,220 --> 00:36:31,149
and<font color="#E5E5E5"> Apple would give you a CV but as</font>

784
00:36:29,410 --> 00:36:32,950
long as<font color="#E5E5E5"> it's an</font><font color="#CCCCCC"> open-source project</font><font color="#E5E5E5"> and</font>

785
00:36:31,150 --> 00:36:35,380
there's no one specific<font color="#E5E5E5"> responsible for</font>

786
00:36:32,950 --> 00:36:40,180
that the<font color="#CCCCCC"> mitra</font><font color="#E5E5E5"> is going to give you the</font>

787
00:36:35,380 --> 00:36:42,849
CV ID and once it's fixed once it's all

788
00:36:40,180 --> 00:36:44,618
done you'd go and you you'd write about

789
00:36:42,849 --> 00:36:46,900
it online<font color="#CCCCCC"> you would make blog post about</font>

790
00:36:44,619 --> 00:36:48,280
<font color="#E5E5E5">it you make an adverse away there's</font>

791
00:36:46,900 --> 00:36:51,430
always social security for<font color="#E5E5E5"> open</font><font color="#CCCCCC"> source</font>

792
00:36:48,280 --> 00:36:53,290
<font color="#E5E5E5">projects and then you'd get people</font>

793
00:36:51,430 --> 00:36:56,078
knowing<font color="#E5E5E5"> about the vulnerability and</font>

794
00:36:53,290 --> 00:36:59,200
<font color="#CCCCCC">fixing</font><font color="#E5E5E5"> it and issuing updates and then</font>

795
00:36:56,079 --> 00:37:05,290
the whole process<font color="#CCCCCC"> of of patching bugs</font>

796
00:36:59,200 --> 00:37:08,649
will go for and well what I did was go

797
00:37:05,290 --> 00:37:10,480
on IRC because hackers like<font color="#CCCCCC"> Stassi and</font>

798
00:37:08,650 --> 00:37:12,849
the developers<font color="#E5E5E5"> were</font><font color="#CCCCCC"> gonna say so I</font><font color="#E5E5E5"> just</font>

799
00:37:10,480 --> 00:37:16,960
went<font color="#CCCCCC"> there and I told them I found</font><font color="#E5E5E5"> the</font>

800
00:37:12,849 --> 00:37:19,690
<font color="#E5E5E5">bug in Alpine what I do and I got talked</font>

801
00:37:16,960 --> 00:37:21,970
to Timothy Bosch which was the one

802
00:37:19,690 --> 00:37:25,960
either the person<font color="#E5E5E5"> responsible for</font><font color="#CCCCCC"> apk in</font>

803
00:37:21,970 --> 00:37:27,430
itself<font color="#E5E5E5"> and he took him</font><font color="#CCCCCC"> just a day of you</font>

804
00:37:25,960 --> 00:37:28,720
to fake that<font color="#E5E5E5"> and</font>

805
00:37:27,430 --> 00:37:31,950
asked<font color="#E5E5E5"> me a</font><font color="#CCCCCC"> lot of questions and</font><font color="#E5E5E5"> how I</font>

806
00:37:28,720 --> 00:37:34,808
found<font color="#E5E5E5"> it and now</font><font color="#CCCCCC"> I exploited it and</font>

807
00:37:31,950 --> 00:37:37,689
instead of<font color="#CCCCCC"> just</font><font color="#E5E5E5"> fixing this specific bug</font>

808
00:37:34,809 --> 00:37:39,520
<font color="#CCCCCC">he</font><font color="#E5E5E5"> actually went and and removed all</font>

809
00:37:37,690 --> 00:37:41,710
callbacks<font color="#E5E5E5"> from the heap</font><font color="#CCCCCC"> so my specific</font>

810
00:37:39,520 --> 00:37:42,730
exploit wouldn't<font color="#CCCCCC"> walk again</font><font color="#E5E5E5"> that was</font>

811
00:37:41,710 --> 00:37:45,010
nice

812
00:37:42,730 --> 00:37:46,900
most<font color="#E5E5E5"> developers just closed the bug but</font>

813
00:37:45,010 --> 00:37:51,160
they went all the way through<font color="#E5E5E5"> and closed</font>

814
00:37:46,900 --> 00:37:52,630
the<font color="#E5E5E5"> next toy</font><font color="#CCCCCC"> too and and I went in more</font>

815
00:37:51,160 --> 00:37:56,200
than adverse story like I said and I

816
00:37:52,630 --> 00:37:57,760
made log post about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> and that</font><font color="#E5E5E5"> was</font>

817
00:37:56,200 --> 00:38:01,089
pretty much the<font color="#CCCCCC"> end of this specific</font>

818
00:37:57,760 --> 00:38:03,910
<font color="#CCCCCC">research</font><font color="#E5E5E5"> but it's not really the end</font>

819
00:38:01,089 --> 00:38:06,819
<font color="#E5E5E5">because there's so much still left to do</font>

820
00:38:03,910 --> 00:38:08,859
well<font color="#CCCCCC"> I fast</font><font color="#E5E5E5"> only the top posting</font>

821
00:38:06,819 --> 00:38:12,160
function but there's so many functions

822
00:38:08,859 --> 00:38:15,578
<font color="#CCCCCC">and like data</font><font color="#E5E5E5"> posting parts of apk that</font>

823
00:38:12,160 --> 00:38:18,700
<font color="#E5E5E5">that I might</font><font color="#CCCCCC"> fuzz and you might as well</font>

824
00:38:15,579 --> 00:38:22,900
find fuzz<font color="#CCCCCC"> alpine and alpine stores if</font>

825
00:38:18,700 --> 00:38:25,058
<font color="#CCCCCC">you do have that in alpine</font><font color="#E5E5E5"> apk relies on</font>

826
00:38:22,900 --> 00:38:29,710
<font color="#E5E5E5">lib fetch which is a base D library for</font>

827
00:38:25,059 --> 00:38:32,829
for networking and and like HTTP<font color="#CCCCCC"> or</font>

828
00:38:29,710 --> 00:38:34,720
HTTPS and I don't<font color="#CCCCCC"> think it's maintained</font>

829
00:38:32,829 --> 00:38:36,880
I'm not sure so I might as<font color="#CCCCCC"> well</font><font color="#E5E5E5"> check</font>

830
00:38:34,720 --> 00:38:39,279
that and try<font color="#CCCCCC"> and</font><font color="#E5E5E5"> find that because you</font>

831
00:38:36,880 --> 00:38:45,250
know<font color="#E5E5E5"> network protocols it sounds like</font>

832
00:38:39,279 --> 00:38:49,029
good vector for vulnerabilities and I'll

833
00:38:45,250 --> 00:38:50,890
go for demonstration now demo usually

834
00:38:49,029 --> 00:38:54,339
don't work at current so I just

835
00:38:50,890 --> 00:38:57,359
preferred something<font color="#E5E5E5"> beforehand and I'll</font>

836
00:38:54,339 --> 00:38:57,359
just open<font color="#E5E5E5"> it</font>

837
00:38:59,339 --> 00:39:07,240
nice so that's that's me on<font color="#CCCCCC"> the first</font>

838
00:39:03,359 --> 00:39:09,369
machine<font color="#CCCCCC"> that I made</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> second one</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font>

839
00:39:07,240 --> 00:39:14,970
vulnerable machine<font color="#CCCCCC"> all right so here I</font>

840
00:39:09,369 --> 00:39:18,420
<font color="#E5E5E5">go and I just</font><font color="#CCCCCC"> put my payload</font><font color="#E5E5E5"> inside the</font>

841
00:39:14,970 --> 00:39:18,419
<font color="#E5E5E5">engine server</font>

842
00:39:21,950 --> 00:39:30,328
the edges a bit<font color="#E5E5E5"> just</font><font color="#CCCCCC"> like a success I</font>

843
00:39:24,930 --> 00:39:31,759
did before<font color="#E5E5E5"> all right and then I just</font>

844
00:39:30,329 --> 00:39:37,200
<font color="#E5E5E5">like I</font><font color="#CCCCCC"> checked there's</font><font color="#E5E5E5"> a connection</font>

845
00:39:31,760 --> 00:39:40,200
yeah<font color="#E5E5E5"> all right so</font><font color="#CCCCCC"> what I do</font><font color="#E5E5E5"> here is one</font>

846
00:39:37,200 --> 00:39:42,629
a<font color="#CCCCCC"> docker which</font><font color="#E5E5E5"> are these men in the</font>

847
00:39:40,200 --> 00:39:44,700
<font color="#E5E5E5">middle</font><font color="#CCCCCC"> okay because it whenever</font><font color="#E5E5E5"> it will</font>

848
00:39:42,630 --> 00:39:46,950
get to<font color="#CCCCCC"> that city</font><font color="#E5E5E5"> and the Alpine</font><font color="#CCCCCC"> City</font>

849
00:39:44,700 --> 00:39:49,799
answer would go to my my several dots

850
00:39:46,950 --> 00:39:52,919
below and then I when I became update

851
00:39:49,800 --> 00:39:54,960
<font color="#E5E5E5">and it it stopped</font><font color="#CCCCCC"> running fetch and it</font>

852
00:39:52,920 --> 00:39:57,690
stopped here now<font color="#CCCCCC"> why did it stop because</font>

853
00:39:54,960 --> 00:40:01,349
<font color="#CCCCCC">I put the payload there with the net cut</font>

854
00:39:57,690 --> 00:40:04,230
listening and then on the second server

855
00:40:01,349 --> 00:40:04,650
I just<font color="#E5E5E5"> when that cut and then I get a</font>

856
00:40:04,230 --> 00:40:06,599
<font color="#CCCCCC">shell</font>

857
00:40:04,650 --> 00:40:08,579
I'm<font color="#E5E5E5"> would I'm running a list doing</font>

858
00:40:06,599 --> 00:40:09,960
whatever I<font color="#CCCCCC"> want when I end</font><font color="#E5E5E5"> it gets a sec</font>

859
00:40:08,579 --> 00:40:20,849
fault but I really did whatever<font color="#E5E5E5"> I want</font>

860
00:40:09,960 --> 00:40:22,020
so<font color="#CCCCCC"> that was it alright so if you have</font>

861
00:40:20,849 --> 00:40:23,460
any questions I'm<font color="#E5E5E5"> going to be</font><font color="#CCCCCC"> here you</font>

862
00:40:22,020 --> 00:40:25,020
<font color="#CCCCCC">can come and ask</font>

863
00:40:23,460 --> 00:40:27,480
check out our<font color="#E5E5E5"> Twitter we just started a</font>

864
00:40:25,020 --> 00:40:30,900
new Twitter for a research team with a

865
00:40:27,480 --> 00:40:35,380
blog that's<font color="#E5E5E5"> it thank</font><font color="#CCCCCC"> you</font>

866
00:40:30,900 --> 00:40:35,380
[Applause]

