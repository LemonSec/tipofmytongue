1
00:00:00,030 --> 00:00:05,069
besides DC would like to thank all of

2
00:00:02,280 --> 00:00:07,500
our sponsors<font color="#E5E5E5"> and a special thank you to</font>

3
00:00:05,069 --> 00:00:10,710
all of<font color="#CCCCCC"> our speakers volunteers and</font>

4
00:00:07,500 --> 00:00:12,750
organizers for making 2018 a success

5
00:00:10,710 --> 00:00:16,260
thank you<font color="#E5E5E5"> for being here my name is</font>

6
00:00:12,750 --> 00:00:17,670
<font color="#E5E5E5">Bella Fortuna</font><font color="#CCCCCC"> actually this is</font><font color="#E5E5E5"> my third</font>

7
00:00:16,260 --> 00:00:20,640
of four

8
00:00:17,670 --> 00:00:24,029
besides<font color="#CCCCCC"> talks this</font><font color="#E5E5E5"> year</font><font color="#CCCCCC"> and it's my</font>

9
00:00:20,640 --> 00:00:29,490
first<font color="#E5E5E5"> time</font><font color="#CCCCCC"> at besides DC I'm very</font>

10
00:00:24,029 --> 00:00:30,990
excited<font color="#E5E5E5"> thank you for being here I'll</font>

11
00:00:29,490 --> 00:00:33,140
give you<font color="#CCCCCC"> a</font><font color="#E5E5E5"> couple</font><font color="#CCCCCC"> of seconds</font><font color="#E5E5E5"> to read</font>

12
00:00:30,990 --> 00:00:33,140
that

13
00:00:38,440 --> 00:00:46,809
so we see this every<font color="#CCCCCC"> day</font><font color="#E5E5E5"> on the internet</font>

14
00:00:42,310 --> 00:00:51,400
and social<font color="#CCCCCC"> media and most of the time it</font>

15
00:00:46,809 --> 00:00:55,870
gets our attention<font color="#E5E5E5"> for humans we are</font>

16
00:00:51,400 --> 00:01:01,960
<font color="#E5E5E5">drawn upon things that went very bad or</font>

17
00:00:55,870 --> 00:01:05,679
stories<font color="#CCCCCC"> the hit the fan</font><font color="#E5E5E5"> and there's</font>

18
00:01:01,960 --> 00:01:08,470
<font color="#E5E5E5">nothing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> can do about it</font><font color="#E5E5E5"> so if</font>

19
00:01:05,680 --> 00:01:14,080
you think<font color="#E5E5E5"> about it it's a bit like when</font>

20
00:01:08,470 --> 00:01:16,810
you see IT security<font color="#CCCCCC"> related is right and</font>

21
00:01:14,080 --> 00:01:19,420
that's precisely the<font color="#E5E5E5"> first part of our</font>

22
00:01:16,810 --> 00:01:24,580
talk<font color="#CCCCCC"> today we're</font><font color="#E5E5E5"> looking into</font><font color="#CCCCCC"> client</font>

23
00:01:19,420 --> 00:01:27,430
<font color="#CCCCCC">side integrity</font><font color="#E5E5E5"> or stories then we'll see</font>

24
00:01:24,580 --> 00:01:29,830
a<font color="#E5E5E5"> couple of recent attacks of malicious</font>

25
00:01:27,430 --> 00:01:31,899
injections on the client side<font color="#E5E5E5"> then we'll</font>

26
00:01:29,830 --> 00:01:33,670
move to<font color="#E5E5E5"> the main theme of this talk</font>

27
00:01:31,899 --> 00:01:36,009
which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> application real-time</font>

28
00:01:33,670 --> 00:01:37,930
monitoring a new approach<font color="#CCCCCC"> that we have</font>

29
00:01:36,009 --> 00:01:40,619
<font color="#CCCCCC">been working on in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> last few years</font>

30
00:01:37,930 --> 00:01:45,280
and<font color="#E5E5E5"> then I'll do a live demo and</font>

31
00:01:40,619 --> 00:01:47,500
conclusions now at the end<font color="#E5E5E5"> I</font><font color="#CCCCCC"> will tell</font>

32
00:01:45,280 --> 00:01:52,119
you whether or<font color="#E5E5E5"> not I caught my web app</font>

33
00:01:47,500 --> 00:01:55,899
cheering this is<font color="#E5E5E5"> our talk</font><font color="#CCCCCC"> cliffhanger</font>

34
00:01:52,119 --> 00:01:58,090
<font color="#E5E5E5">a little bit about me</font><font color="#CCCCCC"> so I'm a</font>

35
00:01:55,899 --> 00:02:00,459
co-founder<font color="#CCCCCC"> and CTO at J</font><font color="#E5E5E5"> scrambler</font><font color="#CCCCCC"> I</font>

36
00:01:58,090 --> 00:02:04,170
mostly<font color="#E5E5E5"> work with client-side application</font>

37
00:02:00,459 --> 00:02:07,119
security<font color="#E5E5E5"> and mostly focused in</font>

38
00:02:04,170 --> 00:02:09,729
JavaScript code protection but before

39
00:02:07,119 --> 00:02:12,069
I've worked a<font color="#CCCCCC"> lot with</font><font color="#E5E5E5"> bot detection</font>

40
00:02:09,729 --> 00:02:16,720
behavior analysis on the browser side

41
00:02:12,069 --> 00:02:18,790
<font color="#E5E5E5">and anything that's related to many in</font>

42
00:02:16,720 --> 00:02:22,170
<font color="#E5E5E5">the browser or malicious extensions</font>

43
00:02:18,790 --> 00:02:22,170
basically gets my attention

44
00:02:23,750 --> 00:02:34,370
in late 2014 jQuery CDN was breached<font color="#CCCCCC"> and</font>

45
00:02:29,930 --> 00:02:37,310
for a<font color="#E5E5E5"> number</font><font color="#CCCCCC"> of hours</font><font color="#E5E5E5"> any website that</font>

46
00:02:34,370 --> 00:02:40,870
<font color="#CCCCCC">was loading jQuery directly from their</font>

47
00:02:37,310 --> 00:02:44,300
CDN was basically serving and exploits

48
00:02:40,870 --> 00:02:48,380
the the<font color="#E5E5E5"> reek exploit</font><font color="#CCCCCC"> kits to every user</font>

49
00:02:44,300 --> 00:02:52,600
<font color="#E5E5E5">that was visiting those web sites so</font>

50
00:02:48,380 --> 00:02:55,820
this meant a massive dissemination of

51
00:02:52,600 --> 00:02:58,220
malware<font color="#E5E5E5"> to everyone and probably a lot</font>

52
00:02:55,820 --> 00:03:02,090
<font color="#CCCCCC">of</font><font color="#E5E5E5"> people got compromised that day so</font>

53
00:02:58,220 --> 00:03:04,460
this only lasted a<font color="#CCCCCC"> few hours but it was</font>

54
00:03:02,090 --> 00:03:07,390
<font color="#E5E5E5">probably the</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> incident I can</font>

55
00:03:04,460 --> 00:03:10,880
remember that<font color="#E5E5E5"> it was so bad</font>

56
00:03:07,390 --> 00:03:12,619
and back then I<font color="#E5E5E5"> mentioned that probably</font>

57
00:03:10,880 --> 00:03:14,030
<font color="#E5E5E5">are going</font><font color="#CCCCCC"> to see more</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> of this</font>

58
00:03:12,620 --> 00:03:20,690
<font color="#E5E5E5">attacks because they are far too</font>

59
00:03:14,030 --> 00:03:24,260
<font color="#E5E5E5">appealing in 2015</font><font color="#CCCCCC"> drydek strain</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> mainly</font>

60
00:03:20,690 --> 00:03:26,420
<font color="#CCCCCC">the browser trojan</font><font color="#E5E5E5"> managed to or work</font>

61
00:03:24,260 --> 00:03:31,700
was targeting hundreds of different

62
00:03:26,420 --> 00:03:33,920
banking websites<font color="#E5E5E5"> and basically it</font>

63
00:03:31,700 --> 00:03:37,700
managed<font color="#E5E5E5"> to the attackers managed to get</font>

64
00:03:33,920 --> 00:03:39,640
out with<font color="#E5E5E5"> 50 million u.s. dollars and the</font>

65
00:03:37,700 --> 00:03:44,589
worst thing<font color="#E5E5E5"> is that it lasted two months</font>

66
00:03:39,640 --> 00:03:47,500
<font color="#E5E5E5">before</font><font color="#CCCCCC"> anyone</font><font color="#E5E5E5"> took notice so even though</font>

67
00:03:44,590 --> 00:03:51,890
many<font color="#E5E5E5"> of the browser</font><font color="#CCCCCC"> trojans exist since</font>

68
00:03:47,500 --> 00:03:55,220
2007 2008<font color="#E5E5E5"> in 2015</font>

69
00:03:51,890 --> 00:03:56,809
most of these<font color="#E5E5E5"> banks are not ready yet</font><font color="#CCCCCC"> so</font>

70
00:03:55,220 --> 00:04:02,800
they are not targeting this type of

71
00:03:56,810 --> 00:04:07,400
<font color="#E5E5E5">threat last year we have a server bridge</font>

72
00:04:02,800 --> 00:04:11,720
<font color="#CCCCCC">-</font><font color="#E5E5E5"> - a dependency and some companies like</font>

73
00:04:07,400 --> 00:04:14,840
<font color="#E5E5E5">Equifax TransUnion</font><font color="#CCCCCC"> they were serving and</font>

74
00:04:11,720 --> 00:04:17,690
<font color="#E5E5E5">I quote a carousel of madness to all the</font>

75
00:04:14,840 --> 00:04:20,090
users<font color="#CCCCCC"> so they were serving</font><font color="#E5E5E5"> a survey to</font>

76
00:04:17,690 --> 00:04:24,760
collect sensitive user data they were

77
00:04:20,089 --> 00:04:27,799
serving a fake<font color="#CCCCCC"> flash</font><font color="#E5E5E5"> plugin to everyone</font>

78
00:04:24,760 --> 00:04:30,260
and they were<font color="#E5E5E5"> using</font><font color="#CCCCCC"> that to</font><font color="#E5E5E5"> basically</font>

79
00:04:27,800 --> 00:04:32,630
infect the end users device and from

80
00:04:30,260 --> 00:04:36,569
their own just<font color="#E5E5E5"> collect sensitive data</font>

81
00:04:32,630 --> 00:04:41,889
<font color="#E5E5E5">credit card data and and so on</font>

82
00:04:36,569 --> 00:04:44,469
this year in February<font color="#CCCCCC"> a library a</font>

83
00:04:41,889 --> 00:04:49,719
<font color="#E5E5E5">JavaScript library called browsealoud</font>

84
00:04:44,469 --> 00:04:53,349
<font color="#CCCCCC">which is basically a library</font><font color="#E5E5E5"> as the name</font>

85
00:04:49,719 --> 00:04:56,169
suggests is used by<font color="#CCCCCC"> websites</font><font color="#E5E5E5"> to read out</font>

86
00:04:53,349 --> 00:04:59,469
loud<font color="#E5E5E5"> the</font><font color="#CCCCCC"> text in the website</font><font color="#E5E5E5"> so it was</font>

87
00:04:56,169 --> 00:05:02,799
compromised<font color="#CCCCCC"> and more than</font><font color="#E5E5E5"> four thousand</font>

88
00:04:59,469 --> 00:05:06,300
websites<font color="#E5E5E5"> that were using this library at</font>

89
00:05:02,800 --> 00:05:09,580
the<font color="#E5E5E5"> time they got infected with this</font>

90
00:05:06,300 --> 00:05:11,499
extra code that was<font color="#CCCCCC"> coin Heinz library</font>

91
00:05:09,580 --> 00:05:14,589
<font color="#E5E5E5">for those who are familiar</font>

92
00:05:11,499 --> 00:05:17,439
it's a cryptocurrency<font color="#E5E5E5"> library that was</font>

93
00:05:14,589 --> 00:05:21,639
<font color="#E5E5E5">using the end users computers to mine</font>

94
00:05:17,439 --> 00:05:23,800
<font color="#CCCCCC">Manero for for the attackers</font><font color="#E5E5E5"> so one of</font>

95
00:05:21,639 --> 00:05:25,419
the<font color="#CCCCCC"> websites so this gotten into the</font>

96
00:05:23,800 --> 00:05:28,240
news it<font color="#E5E5E5"> was kind of controversial</font>

97
00:05:25,419 --> 00:05:31,869
<font color="#E5E5E5">because one of the websites is UK's ICO</font>

98
00:05:28,240 --> 00:05:35,289
which is an<font color="#E5E5E5"> institution that is meant to</font>

99
00:05:31,869 --> 00:05:38,769
protect the individuals privacy<font color="#CCCCCC"> so and</font>

100
00:05:35,289 --> 00:05:43,929
they they got their users<font color="#CCCCCC"> to be crypto</font>

101
00:05:38,769 --> 00:05:47,019
mining for the<font color="#E5E5E5"> attackers this year in I</font>

102
00:05:43,929 --> 00:05:51,399
<font color="#CCCCCC">think in March</font><font color="#E5E5E5"> there was a man in the</font>

103
00:05:47,019 --> 00:05:54,729
browser attack<font color="#CCCCCC"> I think it was Zeus Panda</font>

104
00:05:51,399 --> 00:05:57,639
<font color="#E5E5E5">strain and it was like always targeting</font>

105
00:05:54,729 --> 00:06:00,969
a lot<font color="#CCCCCC"> of financial institutions</font><font color="#E5E5E5"> but what</font>

106
00:05:57,639 --> 00:06:03,879
caught our attention<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that it was</font>

107
00:06:00,969 --> 00:06:06,939
targeting<font color="#E5E5E5"> coinbase and blockchain dot</font>

108
00:06:03,879 --> 00:06:08,979
info as well so probably it<font color="#E5E5E5"> wasn't the</font>

109
00:06:06,939 --> 00:06:13,509
first<font color="#E5E5E5"> time that many</font><font color="#CCCCCC"> of the browser</font>

110
00:06:08,979 --> 00:06:15,748
<font color="#CCCCCC">trojan is targeting</font><font color="#E5E5E5"> crypto exchange but</font>

111
00:06:13,509 --> 00:06:19,569
probably it was<font color="#E5E5E5"> the first time</font><font color="#CCCCCC"> that</font>

112
00:06:15,749 --> 00:06:23,079
<font color="#E5E5E5">really caught my</font><font color="#CCCCCC"> attention and we have</font>

113
00:06:19,569 --> 00:06:25,449
been seeing this<font color="#E5E5E5"> for a while so it was</font>

114
00:06:23,079 --> 00:06:28,119
<font color="#E5E5E5">discovered</font><font color="#CCCCCC"> by a couple</font><font color="#E5E5E5"> of researchers</font>

115
00:06:25,449 --> 00:06:34,479
from<font color="#CCCCCC"> security scorecard</font><font color="#E5E5E5"> a research</font>

116
00:06:28,119 --> 00:06:38,229
company and we we we got<font color="#CCCCCC"> ahold</font><font color="#E5E5E5"> of their</font>

117
00:06:34,479 --> 00:06:40,719
<font color="#E5E5E5">contacts and we collaborated and one of</font>

118
00:06:38,229 --> 00:06:44,498
the<font color="#E5E5E5"> outcomes of that collaboration was a</font>

119
00:06:40,719 --> 00:06:47,289
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> that we did at Wallace</font><font color="#E5E5E5"> ship at Def</font>

120
00:06:44,499 --> 00:06:49,479
Con this year<font color="#E5E5E5"> where we showed basically</font>

121
00:06:47,289 --> 00:06:52,349
how the attack works and all the very

122
00:06:49,479 --> 00:06:52,349
<font color="#CCCCCC">little</font><font color="#E5E5E5"> detail</font>

123
00:06:53,719 --> 00:07:02,808
so a<font color="#E5E5E5"> month ago roughly an extension mega</font>

124
00:06:59,029 --> 00:07:04,699
<font color="#E5E5E5">and Z</font><font color="#CCCCCC"> is a quite popular so the</font>

125
00:07:02,809 --> 00:07:08,240
attackers managed to get developer

126
00:07:04,699 --> 00:07:11,569
credentials<font color="#CCCCCC"> and to just commit a</font>

127
00:07:08,240 --> 00:07:13,189
modified<font color="#CCCCCC"> version of the extension so if</font>

128
00:07:11,569 --> 00:07:15,559
you know<font color="#E5E5E5"> how it works</font><font color="#CCCCCC"> its kind of</font>

129
00:07:13,189 --> 00:07:18,289
automatically<font color="#E5E5E5"> is rolled out to every</font>

130
00:07:15,559 --> 00:07:21,379
user<font color="#E5E5E5"> so you don't have to explicitly</font>

131
00:07:18,289 --> 00:07:26,529
<font color="#E5E5E5">approve the the update of the extension</font>

132
00:07:21,379 --> 00:07:29,659
and and it was basically<font color="#E5E5E5"> collecting</font>

133
00:07:26,529 --> 00:07:33,439
credentials from<font color="#E5E5E5"> websites like Gmail or</font>

134
00:07:29,659 --> 00:07:37,039
<font color="#E5E5E5">Yahoo and also collecting private keys</font>

135
00:07:33,439 --> 00:07:41,810
from crypto exchanges<font color="#E5E5E5"> so he</font><font color="#CCCCCC"> only lasted</font>

136
00:07:37,039 --> 00:07:45,830
<font color="#E5E5E5">a few</font><font color="#CCCCCC"> hours</font><font color="#E5E5E5"> but this extension has 1.7</font>

137
00:07:41,810 --> 00:07:48,559
<font color="#E5E5E5">million users so if you do the math even</font>

138
00:07:45,830 --> 00:07:50,479
if it<font color="#CCCCCC"> only lasted for a few hours it was</font>

139
00:07:48,559 --> 00:07:55,849
enough to<font color="#E5E5E5"> compromise a lot of users and</font>

140
00:07:50,479 --> 00:07:59,710
a lot of<font color="#E5E5E5"> credentials got captured and</font>

141
00:07:55,849 --> 00:08:03,498
this keeps going<font color="#E5E5E5"> on</font><font color="#CCCCCC"> and on every day</font>

142
00:07:59,710 --> 00:08:07,128
more recently in the<font color="#CCCCCC"> last three or four</font>

143
00:08:03,499 --> 00:08:09,139
<font color="#CCCCCC">weeks we have</font><font color="#E5E5E5"> seen</font><font color="#CCCCCC"> a rise in the attacks</font>

144
00:08:07,129 --> 00:08:12,860
against ticketing companies and

145
00:08:09,139 --> 00:08:17,479
e-commerce companies from<font color="#E5E5E5"> a group called</font>

146
00:08:12,860 --> 00:08:20,659
mage cards so they basically<font color="#E5E5E5"> they</font><font color="#CCCCCC"> in</font>

147
00:08:17,479 --> 00:08:23,449
fact<font color="#E5E5E5"> they breach</font><font color="#CCCCCC"> servers they modify</font>

148
00:08:20,659 --> 00:08:26,089
<font color="#CCCCCC">codes</font><font color="#E5E5E5"> and they were they were</font><font color="#CCCCCC"> able to</font>

149
00:08:23,449 --> 00:08:29,509
<font color="#CCCCCC">steal around</font><font color="#E5E5E5"> 40,000</font><font color="#CCCCCC"> reddit card</font>

150
00:08:26,089 --> 00:08:31,939
information<font color="#E5E5E5"> a Ticketmaster and at</font>

151
00:08:29,509 --> 00:08:36,800
British<font color="#CCCCCC"> airlines it was even worse they</font>

152
00:08:31,939 --> 00:08:40,639
got away with<font color="#CCCCCC"> 380,000 user details and</font>

153
00:08:36,799 --> 00:08:42,198
credit card data so we are certainly

154
00:08:40,639 --> 00:08:46,069
<font color="#E5E5E5">seeing an increase</font><font color="#CCCCCC"> in this type</font><font color="#E5E5E5"> of</font>

155
00:08:42,198 --> 00:08:48,979
<font color="#CCCCCC">incidents</font><font color="#E5E5E5"> and we have been paying a lot</font>

156
00:08:46,069 --> 00:08:51,829
<font color="#CCCCCC">of attention</font><font color="#E5E5E5"> to all</font><font color="#CCCCCC"> of this so last</font><font color="#E5E5E5"> year</font>

157
00:08:48,980 --> 00:08:53,720
<font color="#E5E5E5">we developed what we call the</font>

158
00:08:51,829 --> 00:08:55,160
<font color="#CCCCCC">next-generation man-in-the-browser</font>

159
00:08:53,720 --> 00:08:57,949
<font color="#E5E5E5">Trojan</font>

160
00:08:55,160 --> 00:09:00,949
where we showed people that<font color="#E5E5E5"> using an</font>

161
00:08:57,949 --> 00:09:02,540
extension any extension and the normal

162
00:09:00,949 --> 00:09:05,329
capabilities<font color="#E5E5E5"> that you get with an</font>

163
00:09:02,540 --> 00:09:08,510
extension<font color="#CCCCCC"> you are able to</font><font color="#E5E5E5"> fully capture</font>

164
00:09:05,329 --> 00:09:11,060
<font color="#E5E5E5">any information from the user you can</font>

165
00:09:08,510 --> 00:09:13,279
take screenshots<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> accelerate all</font>

166
00:09:11,060 --> 00:09:16,969
the information<font color="#E5E5E5"> so it's very easy</font><font color="#CCCCCC"> and</font>

167
00:09:13,279 --> 00:09:19,790
there's a double<font color="#CCCCCC"> standard</font><font color="#E5E5E5"> in regards to</font>

168
00:09:16,970 --> 00:09:22,519
browser code<font color="#E5E5E5"> basically all the code in</font>

169
00:09:19,790 --> 00:09:25,189
the browser<font color="#E5E5E5"> is thoroughly screened by a</font>

170
00:09:22,519 --> 00:09:29,060
lot<font color="#E5E5E5"> of researchers is considered to be</font>

171
00:09:25,189 --> 00:09:32,510
quite<font color="#CCCCCC"> secure</font><font color="#E5E5E5"> even though we discover a</font>

172
00:09:29,060 --> 00:09:35,420
few vulnerabilities now and then but if

173
00:09:32,510 --> 00:09:37,699
you<font color="#E5E5E5"> think about it the extensions aren't</font>

174
00:09:35,420 --> 00:09:40,189
most<font color="#CCCCCC"> of the time they are</font><font color="#E5E5E5"> not screened</font>

175
00:09:37,699 --> 00:09:42,859
at all<font color="#E5E5E5"> no one checks the code in these</font>

176
00:09:40,189 --> 00:09:45,290
extensions<font color="#E5E5E5"> and the users just</font><font color="#CCCCCC"> like</font>

177
00:09:42,860 --> 00:09:49,699
almost finally install these extensions

178
00:09:45,290 --> 00:09:52,430
<font color="#E5E5E5">and provide them a great power to to</font>

179
00:09:49,699 --> 00:09:55,130
<font color="#E5E5E5">capture user</font><font color="#CCCCCC"> information what</font><font color="#E5E5E5"> it's worse</font>

180
00:09:52,430 --> 00:09:58,969
is that extensions<font color="#E5E5E5"> can remove security</font>

181
00:09:55,130 --> 00:10:01,600
headers so if you are relying in CSP<font color="#E5E5E5"> or</font>

182
00:09:58,970 --> 00:10:06,709
things<font color="#E5E5E5"> that use security headers</font>

183
00:10:01,600 --> 00:10:09,350
extensions can<font color="#E5E5E5"> remove them as well so</font>

184
00:10:06,709 --> 00:10:11,500
here you can see a summary<font color="#CCCCCC"> of things</font>

185
00:10:09,350 --> 00:10:13,760
that compromised client-side integrity

186
00:10:11,500 --> 00:10:16,430
so first you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> malicious or</font>

187
00:10:13,760 --> 00:10:18,560
compromised<font color="#E5E5E5"> third-party libraries you</font>

188
00:10:16,430 --> 00:10:20,060
can<font color="#CCCCCC"> use vulnerability tracking to check</font>

189
00:10:18,560 --> 00:10:22,189
whether<font color="#E5E5E5"> you or not</font><font color="#CCCCCC"> you are</font><font color="#E5E5E5"> using</font>

190
00:10:20,060 --> 00:10:25,819
<font color="#CCCCCC">something that has known vulnerabilities</font>

191
00:10:22,189 --> 00:10:29,060
<font color="#E5E5E5">but</font><font color="#CCCCCC"> has you know</font><font color="#E5E5E5"> that can fail we are</font>

192
00:10:25,819 --> 00:10:31,069
not sure we are<font color="#E5E5E5"> catching everything</font><font color="#CCCCCC"> you</font>

193
00:10:29,060 --> 00:10:33,410
can use sub resource integrity<font color="#CCCCCC"> where you</font>

194
00:10:31,069 --> 00:10:37,640
can add attributes<font color="#CCCCCC"> to your script tags</font>

195
00:10:33,410 --> 00:10:40,069
or to other tags<font color="#CCCCCC"> that enforced tell the</font>

196
00:10:37,640 --> 00:10:43,790
browser to<font color="#E5E5E5"> enforce a checksum before</font>

197
00:10:40,069 --> 00:10:45,469
<font color="#E5E5E5">loading a certain</font><font color="#CCCCCC"> resource but keep in</font>

198
00:10:43,790 --> 00:10:47,660
<font color="#CCCCCC">mind that</font><font color="#E5E5E5"> many in the browser</font><font color="#CCCCCC"> Trojans</font>

199
00:10:45,470 --> 00:10:50,389
can remove this<font color="#E5E5E5"> they can basically alter</font>

200
00:10:47,660 --> 00:10:52,819
<font color="#CCCCCC">anything any part even headers of the</font>

201
00:10:50,389 --> 00:10:56,829
website before the browser gets<font color="#E5E5E5"> to load</font>

202
00:10:52,819 --> 00:10:59,899
them you can use CSP and<font color="#E5E5E5"> you should it's</font>

203
00:10:56,829 --> 00:11:02,420
it's<font color="#E5E5E5"> well developed and has evolved a</font>

204
00:10:59,899 --> 00:11:05,180
<font color="#E5E5E5">lot but keep in</font><font color="#CCCCCC"> mind that both men in</font>

205
00:11:02,420 --> 00:11:07,719
<font color="#CCCCCC">the browser</font><font color="#E5E5E5"> and malicious extensions can</font>

206
00:11:05,180 --> 00:11:07,719
<font color="#E5E5E5">remove them</font>

207
00:11:08,190 --> 00:11:15,160
malicious browser extensions you can<font color="#CCCCCC"> eat</font>

208
00:11:10,540 --> 00:11:17,969
you<font color="#CCCCCC"> can you can and you should rely in</font>

209
00:11:15,160 --> 00:11:21,430
browsers<font color="#CCCCCC"> towards screening and</font>

210
00:11:17,970 --> 00:11:26,220
<font color="#CCCCCC">blacklisting but that doesn't work very</font>

211
00:11:21,430 --> 00:11:29,500
<font color="#CCCCCC">well and usually is reactive</font><font color="#E5E5E5"> so it gives</font>

212
00:11:26,220 --> 00:11:31,660
usually some some hours or days<font color="#CCCCCC"> to the</font>

213
00:11:29,500 --> 00:11:35,860
attackers<font color="#CCCCCC"> to do what they are</font><font color="#E5E5E5"> in wanting</font>

214
00:11:31,660 --> 00:11:38,649
to<font color="#CCCCCC"> do you can rely on the antivirus but</font>

215
00:11:35,860 --> 00:11:41,010
most of<font color="#E5E5E5"> the time it fails</font><font color="#CCCCCC"> to detect</font>

216
00:11:38,649 --> 00:11:45,640
malicious code on the<font color="#CCCCCC"> client side</font><font color="#E5E5E5"> and</font>

217
00:11:41,010 --> 00:11:49,420
<font color="#CCCCCC">basically you end</font><font color="#E5E5E5"> up only relying in the</font>

218
00:11:45,640 --> 00:11:51,220
end user not to<font color="#E5E5E5"> basically do the wrong</font>

219
00:11:49,420 --> 00:11:54,939
thing<font color="#E5E5E5"> and install something that is</font>

220
00:11:51,220 --> 00:11:57,220
malicious<font color="#CCCCCC"> but as we</font><font color="#E5E5E5"> all know most of the</font>

221
00:11:54,940 --> 00:12:00,970
time that fails<font color="#E5E5E5"> to because users</font><font color="#CCCCCC"> are not</font>

222
00:11:57,220 --> 00:12:03,490
security savvy<font color="#E5E5E5"> and be let's be honest</font>

223
00:12:00,970 --> 00:12:06,880
<font color="#E5E5E5">even security guys get infected once in</font>

224
00:12:03,490 --> 00:12:08,950
<font color="#E5E5E5">a while so it's it's hard unless</font><font color="#CCCCCC"> you are</font>

225
00:12:06,880 --> 00:12:11,920
checking all the code from<font color="#E5E5E5"> every</font><font color="#CCCCCC"> website</font>

226
00:12:08,950 --> 00:12:16,990
<font color="#CCCCCC">that you're loading you cannot be sure</font>

227
00:12:11,920 --> 00:12:19,329
to be 100%<font color="#CCCCCC"> that the website has not been</font>

228
00:12:16,990 --> 00:12:21,940
tampered<font color="#E5E5E5"> with and there's no malicious</font>

229
00:12:19,330 --> 00:12:25,810
code running in there<font color="#E5E5E5"> so then you have</font>

230
00:12:21,940 --> 00:12:28,660
the men<font color="#CCCCCC"> in the browser web injects well</font>

231
00:12:25,810 --> 00:12:32,349
there's really not a good<font color="#E5E5E5"> solution yet</font>

232
00:12:28,660 --> 00:12:34,689
for this<font color="#CCCCCC"> I always</font><font color="#E5E5E5"> say</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you better</font>

233
00:12:32,350 --> 00:12:36,550
assume that some of<font color="#E5E5E5"> your users will</font><font color="#CCCCCC"> be</font>

234
00:12:34,690 --> 00:12:39,160
compromised will will have their

235
00:12:36,550 --> 00:12:41,920
browsers compromised and<font color="#E5E5E5"> that the</font><font color="#CCCCCC"> codes</font>

236
00:12:39,160 --> 00:12:45,339
<font color="#E5E5E5">that he is seeing might might</font><font color="#CCCCCC"> be</font>

237
00:12:41,920 --> 00:12:47,920
<font color="#E5E5E5">temporary then you have things like</font>

238
00:12:45,339 --> 00:12:50,050
server breaches or exploitation of

239
00:12:47,920 --> 00:12:54,130
common vulnerabilities I exercise<font color="#CCCCCC"> quick</font>

240
00:12:50,050 --> 00:12:55,810
<font color="#E5E5E5">tracking well you should do the whole</font>

241
00:12:54,130 --> 00:12:58,390
array<font color="#CCCCCC"> of things</font><font color="#E5E5E5"> like vulnerability</font>

242
00:12:55,810 --> 00:13:01,380
scanning<font color="#E5E5E5"> pen testing run your boning</font>

243
00:12:58,390 --> 00:13:05,199
programs<font color="#E5E5E5"> roll out your security headers</font>

244
00:13:01,380 --> 00:13:08,410
and<font color="#CCCCCC"> you should do all of that in a</font>

245
00:13:05,200 --> 00:13:11,080
defense in depth<font color="#CCCCCC"> strategy</font><font color="#E5E5E5"> but that</font>

246
00:13:08,410 --> 00:13:14,350
doesn't assure<font color="#E5E5E5"> you that you are</font>

247
00:13:11,080 --> 00:13:18,610
<font color="#E5E5E5">just filling all the holes in</font><font color="#CCCCCC"> your web</font>

248
00:13:14,350 --> 00:13:22,060
<font color="#CCCCCC">application so what's the main takeaway</font>

249
00:13:18,610 --> 00:13:25,120
here<font color="#E5E5E5"> first we are relying too much on</font>

250
00:13:22,060 --> 00:13:27,280
third parties so<font color="#E5E5E5"> we are relying on</font>

251
00:13:25,120 --> 00:13:30,130
vulnerability tracking to do its job<font color="#E5E5E5"> to</font>

252
00:13:27,280 --> 00:13:33,490
discover very fast<font color="#CCCCCC"> whether</font><font color="#E5E5E5"> or not the</font>

253
00:13:30,130 --> 00:13:36,250
dependencies have problems we are

254
00:13:33,490 --> 00:13:38,500
<font color="#CCCCCC">relying in third parties</font><font color="#E5E5E5"> from which we</font>

255
00:13:36,250 --> 00:13:40,810
load<font color="#E5E5E5"> third party JavaScript not to</font>

256
00:13:38,500 --> 00:13:42,610
infect us<font color="#E5E5E5"> obviously they are not doing</font>

257
00:13:40,810 --> 00:13:44,949
<font color="#CCCCCC">it on</font><font color="#E5E5E5"> purpose but they they get breach</font>

258
00:13:42,610 --> 00:13:47,440
as well and and most<font color="#E5E5E5"> of the time it's</font>

259
00:13:44,950 --> 00:13:49,930
easier to breach a third party than<font color="#CCCCCC"> to</font>

260
00:13:47,440 --> 00:13:53,800
breach like<font color="#E5E5E5"> a very large company with</font>

261
00:13:49,930 --> 00:13:56,800
<font color="#E5E5E5">lots of InfoSec people working on it</font><font color="#CCCCCC"> we</font>

262
00:13:53,800 --> 00:13:59,770
are<font color="#E5E5E5"> trusting browser extension stores</font><font color="#CCCCCC"> to</font>

263
00:13:56,800 --> 00:14:02,469
<font color="#E5E5E5">filter out any malicious extension and</font>

264
00:13:59,770 --> 00:14:05,710
we<font color="#CCCCCC"> quickly catch those that are</font><font color="#E5E5E5"> tempered</font>

265
00:14:02,470 --> 00:14:08,320
maliciously<font color="#E5E5E5"> we are trusting antivirus to</font>

266
00:14:05,710 --> 00:14:11,290
be efficient but they are not even<font color="#E5E5E5"> even</font>

267
00:14:08,320 --> 00:14:13,810
they say that they are<font color="#CCCCCC"> only efficient 40</font>

268
00:14:11,290 --> 00:14:16,839
<font color="#E5E5E5">percent of the time which which</font><font color="#CCCCCC"> is</font>

269
00:14:13,810 --> 00:14:19,599
probably<font color="#E5E5E5"> even lower and we are trusting</font>

270
00:14:16,840 --> 00:14:22,750
<font color="#CCCCCC">end-users not</font><font color="#E5E5E5"> to get infected and as you</font>

271
00:14:19,600 --> 00:14:24,310
know<font color="#E5E5E5"> that doesn't work so all</font><font color="#CCCCCC"> the</font>

272
00:14:22,750 --> 00:14:28,570
solutions<font color="#E5E5E5"> I've mentioned they have</font>

273
00:14:24,310 --> 00:14:31,390
<font color="#E5E5E5">limitations</font><font color="#CCCCCC"> I encourage</font><font color="#E5E5E5"> you to</font><font color="#CCCCCC"> use them</font>

274
00:14:28,570 --> 00:14:34,330
but they<font color="#CCCCCC"> have</font><font color="#E5E5E5"> their flaws and</font>

275
00:14:31,390 --> 00:14:37,840
limitations<font color="#E5E5E5"> for instance sub resource</font>

276
00:14:34,330 --> 00:14:40,420
integrity<font color="#E5E5E5"> as I mentioned before</font><font color="#CCCCCC"> can be</font>

277
00:14:37,840 --> 00:14:43,570
removed security headers can be stripped

278
00:14:40,420 --> 00:14:46,290
<font color="#E5E5E5">and any vulnerability</font><font color="#CCCCCC"> assessments</font><font color="#E5E5E5"> can</font>

279
00:14:43,570 --> 00:14:53,200
let a few vulnerabilities slide through

280
00:14:46,290 --> 00:14:54,520
so the<font color="#E5E5E5"> last idea and is that this this</font>

281
00:14:53,200 --> 00:15:00,970
type of attacks they are far too

282
00:14:54,520 --> 00:15:02,500
appealing<font color="#CCCCCC"> I mean you can</font><font color="#E5E5E5"> always like we</font>

283
00:15:00,970 --> 00:15:04,960
always<font color="#E5E5E5"> say</font><font color="#CCCCCC"> that you shouldn't store</font>

284
00:15:02,500 --> 00:15:07,960
things in<font color="#E5E5E5"> the clear on on the server</font>

285
00:15:04,960 --> 00:15:10,960
side<font color="#E5E5E5"> like credit card data and all of</font>

286
00:15:07,960 --> 00:15:13,330
that<font color="#E5E5E5"> of</font><font color="#CCCCCC"> course and</font><font color="#E5E5E5"> even if you store</font>

287
00:15:10,960 --> 00:15:16,090
sensitive<font color="#E5E5E5"> data you should use strong</font>

288
00:15:13,330 --> 00:15:17,770
encryption and<font color="#E5E5E5"> all of</font><font color="#CCCCCC"> that but</font><font color="#E5E5E5"> you have</font>

289
00:15:16,090 --> 00:15:20,230
<font color="#CCCCCC">to understand that some</font><font color="#E5E5E5"> of these attacks</font>

290
00:15:17,770 --> 00:15:22,600
<font color="#E5E5E5">they don't even target the end</font><font color="#CCCCCC"> web sites</font>

291
00:15:20,230 --> 00:15:24,790
they only target like

292
00:15:22,600 --> 00:15:26,980
and third parties<font color="#E5E5E5"> so they don't have</font>

293
00:15:24,790 --> 00:15:28,900
<font color="#E5E5E5">access</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> even if they breach</font><font color="#CCCCCC"> the server</font>

294
00:15:26,980 --> 00:15:31,870
<font color="#E5E5E5">it's not going to be the server of the</font>

295
00:15:28,900 --> 00:15:35,410
<font color="#CCCCCC">end</font><font color="#E5E5E5"> website it's only like the middle</font>

296
00:15:31,870 --> 00:15:38,440
third party library and even<font color="#E5E5E5"> if they</font>

297
00:15:35,410 --> 00:15:41,730
<font color="#E5E5E5">manage</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get into</font><font color="#CCCCCC"> the server</font><font color="#E5E5E5"> of the end</font>

298
00:15:38,440 --> 00:15:44,530
<font color="#CCCCCC">website</font><font color="#E5E5E5"> if they use strong encryption</font>

299
00:15:41,730 --> 00:15:46,600
<font color="#E5E5E5">they cannot have</font><font color="#CCCCCC"> access to the</font>

300
00:15:44,530 --> 00:15:49,959
<font color="#E5E5E5">information but by tampering with the</font>

301
00:15:46,600 --> 00:15:53,050
client side they are seeing<font color="#CCCCCC"> information</font>

302
00:15:49,960 --> 00:15:55,180
flowing<font color="#E5E5E5"> as the user inserts that so</font>

303
00:15:53,050 --> 00:15:57,670
<font color="#E5E5E5">certainly is not encrypted at that point</font>

304
00:15:55,180 --> 00:15:59,949
and they can exit rate that very easily

305
00:15:57,670 --> 00:16:03,370
<font color="#E5E5E5">because it's hard for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> server side</font>

306
00:15:59,950 --> 00:16:04,870
<font color="#E5E5E5">guys to have a reach into the client</font>

307
00:16:03,370 --> 00:16:12,310
side<font color="#E5E5E5"> and just stop that from happening</font>

308
00:16:04,870 --> 00:16:13,990
<font color="#CCCCCC">so basically a few years ago like a</font>

309
00:16:12,310 --> 00:16:15,910
<font color="#E5E5E5">couple or three years ago we</font><font color="#CCCCCC"> were</font>

310
00:16:13,990 --> 00:16:19,690
thinking about<font color="#E5E5E5"> this problem and thinking</font>

311
00:16:15,910 --> 00:16:22,300
how<font color="#CCCCCC"> to solve this and basically we just</font>

312
00:16:19,690 --> 00:16:25,690
for a while<font color="#E5E5E5"> we</font><font color="#CCCCCC"> just quit we just let's</font>

313
00:16:22,300 --> 00:16:28,000
well injections will occur<font color="#CCCCCC"> tampering</font>

314
00:16:25,690 --> 00:16:29,280
will occur so how can we solve<font color="#E5E5E5"> this</font>

315
00:16:28,000 --> 00:16:33,070
problem

316
00:16:29,280 --> 00:16:37,030
<font color="#E5E5E5">maybe we can detect the problems and and</font>

317
00:16:33,070 --> 00:16:41,020
deal with<font color="#E5E5E5"> that later so when when</font>

318
00:16:37,030 --> 00:16:44,699
thinking about<font color="#CCCCCC"> how can we detect this</font><font color="#E5E5E5"> we</font>

319
00:16:41,020 --> 00:16:46,660
kind of<font color="#CCCCCC"> were like bouncing off ideas</font><font color="#E5E5E5"> and</font>

320
00:16:44,700 --> 00:16:48,790
<font color="#E5E5E5">at first we thought</font>

321
00:16:46,660 --> 00:16:51,310
<font color="#CCCCCC">where should we detect the tampering</font>

322
00:16:48,790 --> 00:16:54,480
<font color="#E5E5E5">should we do it at</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> network level or</font>

323
00:16:51,310 --> 00:16:56,530
at<font color="#E5E5E5"> the Dom</font><font color="#CCCCCC"> level</font><font color="#E5E5E5"> so at the the network</font>

324
00:16:54,480 --> 00:17:00,580
<font color="#E5E5E5">wouldn't work because some tampering</font>

325
00:16:56,530 --> 00:17:02,800
<font color="#E5E5E5">only only are done later when the page</font>

326
00:17:00,580 --> 00:17:06,189
<font color="#E5E5E5">is loading so definitely we need to do</font>

327
00:17:02,800 --> 00:17:09,609
it at the Dom<font color="#E5E5E5"> level then we must do it</font>

328
00:17:06,189 --> 00:17:11,740
<font color="#E5E5E5">in real time</font><font color="#CCCCCC"> because after the injection</font>

329
00:17:09,609 --> 00:17:14,409
occurs<font color="#E5E5E5"> maybe we have this short window</font>

330
00:17:11,740 --> 00:17:17,859
the<font color="#E5E5E5"> time where we</font><font color="#CCCCCC"> can react to what is</font>

331
00:17:14,410 --> 00:17:19,839
happening<font color="#CCCCCC"> maybe we</font><font color="#E5E5E5"> are if we trigger</font>

332
00:17:17,859 --> 00:17:23,229
some reaction on our side we can do

333
00:17:19,839 --> 00:17:25,060
something<font color="#E5E5E5"> it must be transparent so</font><font color="#CCCCCC"> it</font>

334
00:17:23,230 --> 00:17:28,720
mustn't must not require an<font color="#CCCCCC"> end-user</font>

335
00:17:25,060 --> 00:17:31,690
installation of any<font color="#CCCCCC"> plug-in</font><font color="#E5E5E5"> or any</font>

336
00:17:28,720 --> 00:17:33,399
and user software<font color="#E5E5E5"> and it must be</font>

337
00:17:31,690 --> 00:17:36,239
<font color="#E5E5E5">scalable because</font><font color="#CCCCCC"> we are</font><font color="#E5E5E5"> talking about</font>

338
00:17:33,399 --> 00:17:39,248
<font color="#E5E5E5">screening</font><font color="#CCCCCC"> and monitoring the</font><font color="#E5E5E5"> Dom of</font>

339
00:17:36,239 --> 00:17:42,729
thousands<font color="#E5E5E5"> of millions of sessions across</font>

340
00:17:39,249 --> 00:17:46,330
<font color="#E5E5E5">many</font><font color="#CCCCCC"> websites</font><font color="#E5E5E5"> and it must be precise</font><font color="#CCCCCC"> it</font>

341
00:17:42,729 --> 00:17:48,220
must not<font color="#E5E5E5"> be too noisy</font><font color="#CCCCCC"> because as if you</font>

342
00:17:46,330 --> 00:17:50,259
are if you have<font color="#CCCCCC"> developed a web</font>

343
00:17:48,220 --> 00:17:52,570
application recently you know<font color="#E5E5E5"> that once</font>

344
00:17:50,259 --> 00:17:55,179
the page loads<font color="#E5E5E5"> there's lots of things</font>

345
00:17:52,570 --> 00:17:58,109
<font color="#E5E5E5">happening on the on the client side that</font>

346
00:17:55,179 --> 00:18:00,999
the Dom keeps shifting and shaping<font color="#E5E5E5"> as</font>

347
00:17:58,109 --> 00:18:05,739
things occur<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> new approach</font>

348
00:18:00,999 --> 00:18:08,739
<font color="#E5E5E5">basically checks for Dom modifications</font>

349
00:18:05,739 --> 00:18:11,139
<font color="#CCCCCC">as they occur it</font><font color="#E5E5E5"> checks for any</font>

350
00:18:08,739 --> 00:18:13,989
tampering<font color="#E5E5E5"> to event handlers code</font><font color="#CCCCCC"> like</font>

351
00:18:11,139 --> 00:18:16,238
when you submit the<font color="#CCCCCC"> form it checks if</font>

352
00:18:13,989 --> 00:18:18,729
<font color="#CCCCCC">the code running is</font><font color="#E5E5E5"> the code that</font><font color="#CCCCCC"> it's</font>

353
00:18:16,239 --> 00:18:21,399
supposed to<font color="#E5E5E5"> be there and it protects</font>

354
00:18:18,729 --> 00:18:26,859
native<font color="#E5E5E5"> API functions from poisoning like</font>

355
00:18:21,399 --> 00:18:29,518
<font color="#E5E5E5">XML HTTP requests and when things are</font>

356
00:18:26,859 --> 00:18:32,830
detected it sends out<font color="#E5E5E5"> real-time alerts</font>

357
00:18:29,519 --> 00:18:35,080
to a<font color="#E5E5E5"> back-end</font><font color="#CCCCCC"> component</font><font color="#E5E5E5"> and from there</font>

358
00:18:32,830 --> 00:18:38,428
to<font color="#CCCCCC"> a web hook on the web application I</font>

359
00:18:35,080 --> 00:18:41,168
will<font color="#E5E5E5"> explain in more</font><font color="#CCCCCC"> detail in a second</font>

360
00:18:38,429 --> 00:18:44,470
and this allows the application<font color="#CCCCCC"> to</font>

361
00:18:41,169 --> 00:18:48,489
trigger automated<font color="#E5E5E5"> reactions or preset</font>

362
00:18:44,470 --> 00:18:50,349
policies so this is the architecture<font color="#CCCCCC"> so</font>

363
00:18:48,489 --> 00:18:51,340
on the client side we have<font color="#CCCCCC"> real-time</font>

364
00:18:50,349 --> 00:18:54,428
monitoring agent

365
00:18:51,340 --> 00:18:57,789
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> playing</font><font color="#E5E5E5"> JavaScript that you need</font>

366
00:18:54,429 --> 00:19:01,509
to embed<font color="#E5E5E5"> into the web application and it</font>

367
00:18:57,789 --> 00:19:04,658
keeps monitoring the Dom<font color="#E5E5E5"> for the things</font>

368
00:19:01,509 --> 00:19:07,479
that<font color="#CCCCCC"> I've mentioned</font><font color="#E5E5E5"> and for that you use</font>

369
00:19:04,659 --> 00:19:10,599
<font color="#E5E5E5">this mutation of servers</font><font color="#CCCCCC"> if you are not</font>

370
00:19:07,479 --> 00:19:13,029
familiar<font color="#E5E5E5"> it's a browser API where you</font>

371
00:19:10,599 --> 00:19:15,249
<font color="#CCCCCC">listen to modifications to the</font><font color="#E5E5E5"> Dom like</font>

372
00:19:13,029 --> 00:19:18,369
new elements coming<font color="#E5E5E5"> in elements being</font>

373
00:19:15,249 --> 00:19:21,369
removed we also use checksums for

374
00:19:18,369 --> 00:19:24,459
certain<font color="#E5E5E5"> parts of the website</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font>

375
00:19:21,369 --> 00:19:27,928
not expected<font color="#CCCCCC"> to</font><font color="#E5E5E5"> change that</font><font color="#CCCCCC"> often like</font>

376
00:19:24,460 --> 00:19:31,179
<font color="#CCCCCC">login forms and we are using</font><font color="#E5E5E5"> just plain</font>

377
00:19:27,929 --> 00:19:34,269
<font color="#E5E5E5">old techniques for detecting poisoning</font>

378
00:19:31,179 --> 00:19:37,330
of<font color="#E5E5E5"> JavaScript native functions so when</font>

379
00:19:34,269 --> 00:19:40,149
things are detected<font color="#CCCCCC"> information gets</font>

380
00:19:37,330 --> 00:19:40,730
sent<font color="#E5E5E5"> out to server components</font><font color="#CCCCCC"> real-time</font>

381
00:19:40,149 --> 00:19:45,760
monitoring

382
00:19:40,730 --> 00:19:49,280
<font color="#E5E5E5">back end where things are</font><font color="#CCCCCC"> processed</font><font color="#E5E5E5"> and</font>

383
00:19:45,760 --> 00:19:51,590
we basically need to<font color="#CCCCCC"> know if it's a</font>

384
00:19:49,280 --> 00:19:54,559
false<font color="#CCCCCC"> positive if it's</font><font color="#E5E5E5"> normal if it's</font>

385
00:19:51,590 --> 00:19:58,100
not we use<font color="#CCCCCC"> machine learning and then if</font>

386
00:19:54,559 --> 00:20:00,379
we decide<font color="#E5E5E5"> this is an alert you get sent</font>

387
00:19:58,100 --> 00:20:03,889
to<font color="#E5E5E5"> the backend of the application</font><font color="#CCCCCC"> using</font>

388
00:20:00,380 --> 00:20:07,510
a web hook<font color="#E5E5E5"> so based on that</font><font color="#CCCCCC"> information</font>

389
00:20:03,890 --> 00:20:10,669
flow<font color="#E5E5E5"> that the application can</font><font color="#CCCCCC"> decide if</font>

390
00:20:07,510 --> 00:20:12,980
adjustments need to<font color="#CCCCCC"> be done</font><font color="#E5E5E5"> for instance</font>

391
00:20:10,669 --> 00:20:16,460
<font color="#E5E5E5">should we kick the user out</font><font color="#CCCCCC"> of the</font>

392
00:20:12,980 --> 00:20:19,309
session<font color="#CCCCCC"> should</font><font color="#E5E5E5"> we present a message to</font>

393
00:20:16,460 --> 00:20:22,970
the user<font color="#CCCCCC"> saying</font><font color="#E5E5E5"> that probably his device</font>

394
00:20:19,309 --> 00:20:25,340
is infected<font color="#CCCCCC"> or should we just send a</font>

395
00:20:22,970 --> 00:20:28,010
notification to<font color="#CCCCCC"> our fraud Department for</font>

396
00:20:25,340 --> 00:20:29,959
<font color="#E5E5E5">them to check this out</font><font color="#CCCCCC"> anything is</font>

397
00:20:28,010 --> 00:20:32,480
possible<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's up to</font><font color="#CCCCCC"> the web</font>

398
00:20:29,960 --> 00:20:36,530
application<font color="#CCCCCC"> to</font><font color="#E5E5E5"> decide what to do in each</font>

399
00:20:32,480 --> 00:20:40,160
situation so it<font color="#CCCCCC"> follows an whitelisting</font>

400
00:20:36,530 --> 00:20:42,950
approach<font color="#CCCCCC"> so any previously</font><font color="#E5E5E5"> unseen</font>

401
00:20:40,160 --> 00:20:46,190
injection can be detected<font color="#E5E5E5"> using this</font>

402
00:20:42,950 --> 00:20:48,740
approach has different<font color="#CCCCCC"> levels of the</font>

403
00:20:46,190 --> 00:20:52,130
sensitivity<font color="#E5E5E5"> meaning that if it's</font>

404
00:20:48,740 --> 00:20:56,120
something<font color="#CCCCCC"> very</font><font color="#E5E5E5"> minor that happened some</font>

405
00:20:52,130 --> 00:20:57,740
UI<font color="#E5E5E5"> modification probably</font><font color="#CCCCCC"> were just going</font>

406
00:20:56,120 --> 00:20:59,989
<font color="#CCCCCC">to dismiss that off we're not</font><font color="#E5E5E5"> doing</font>

407
00:20:57,740 --> 00:21:03,790
anything about<font color="#E5E5E5"> it use machine learning</font>

408
00:20:59,990 --> 00:21:06,380
to<font color="#E5E5E5"> distinguish between things that</font><font color="#CCCCCC"> are</font>

409
00:21:03,790 --> 00:21:09,020
<font color="#E5E5E5">normal and not normal and things</font><font color="#CCCCCC"> that</font>

410
00:21:06,380 --> 00:21:12,049
are probably<font color="#CCCCCC"> dangerous or not</font><font color="#E5E5E5"> and it</font>

411
00:21:09,020 --> 00:21:14,929
also<font color="#E5E5E5"> supports signatures so we can we</font>

412
00:21:12,049 --> 00:21:17,660
<font color="#CCCCCC">can this</font><font color="#E5E5E5"> is totally optional</font><font color="#CCCCCC"> but we can</font>

413
00:21:14,929 --> 00:21:22,669
add signatures for<font color="#E5E5E5"> a better recognition</font>

414
00:21:17,660 --> 00:21:24,710
<font color="#E5E5E5">of</font><font color="#CCCCCC"> specific threats like men in the</font>

415
00:21:22,669 --> 00:21:27,580
browser injection we want to know which

416
00:21:24,710 --> 00:21:31,370
which men in the<font color="#CCCCCC"> browsers frame this</font><font color="#E5E5E5"> is</font>

417
00:21:27,580 --> 00:21:34,668
this is<font color="#E5E5E5"> just an example the client-side</font>

418
00:21:31,370 --> 00:21:37,610
countermeasures<font color="#CCCCCC"> that we can do and we</font>

419
00:21:34,669 --> 00:21:40,910
<font color="#E5E5E5">can do Dom healing so if a certain block</font>

420
00:21:37,610 --> 00:21:43,879
is injected we can remove it but it

421
00:21:40,910 --> 00:21:46,490
requires<font color="#CCCCCC"> the signature</font><font color="#E5E5E5"> for that and we</font>

422
00:21:43,880 --> 00:21:49,490
can also do things<font color="#E5E5E5"> like redirect to a</font>

423
00:21:46,490 --> 00:21:52,740
certain URL<font color="#E5E5E5"> delete cookies</font><font color="#CCCCCC"> or executed</font>

424
00:21:49,490 --> 00:21:57,910
custom JavaScript callback on the client

425
00:21:52,740 --> 00:22:00,940
so the real-time alerts<font color="#E5E5E5"> other examples</font>

426
00:21:57,910 --> 00:22:02,470
<font color="#CCCCCC">that we could be</font><font color="#E5E5E5"> talking about</font><font color="#CCCCCC"> actually</font>

427
00:22:00,940 --> 00:22:07,750
I already<font color="#E5E5E5"> mentioned those so I'm</font>

428
00:22:02,470 --> 00:22:10,900
skipping so as a<font color="#E5E5E5"> caveat</font><font color="#CCCCCC"> to be effective</font>

429
00:22:07,750 --> 00:22:13,000
<font color="#E5E5E5">the the real-time embedded agent running</font>

430
00:22:10,900 --> 00:22:15,550
<font color="#E5E5E5">on the browser side it needs to be</font>

431
00:22:13,000 --> 00:22:18,040
<font color="#CCCCCC">delivered with protection</font><font color="#E5E5E5"> otherwise it</font>

432
00:22:15,550 --> 00:22:21,550
can<font color="#CCCCCC"> be a target of the injections can</font><font color="#E5E5E5"> be</font>

433
00:22:18,040 --> 00:22:23,860
<font color="#E5E5E5">removed can be modified so in in our</font>

434
00:22:21,550 --> 00:22:26,050
case we<font color="#CCCCCC"> are using polymorphic</font><font color="#E5E5E5"> JavaScript</font>

435
00:22:23,860 --> 00:22:30,550
confiscation<font color="#E5E5E5"> which means that we have</font>

436
00:22:26,050 --> 00:22:33,040
<font color="#E5E5E5">the capability of every hour or even</font>

437
00:22:30,550 --> 00:22:35,500
<font color="#CCCCCC">every request can have a completely</font>

438
00:22:33,040 --> 00:22:39,520
different agents in the in the page

439
00:22:35,500 --> 00:22:42,820
<font color="#E5E5E5">which means</font><font color="#CCCCCC"> it will not be easy to</font><font color="#E5E5E5"> tell</font>

440
00:22:39,520 --> 00:22:45,940
which names we<font color="#CCCCCC"> are using</font><font color="#E5E5E5"> how is it</font>

441
00:22:42,820 --> 00:22:48,879
working<font color="#E5E5E5"> and to make it harder</font><font color="#CCCCCC"> to</font>

442
00:22:45,940 --> 00:22:52,420
automate something against the agent<font color="#E5E5E5"> its</font>

443
00:22:48,880 --> 00:22:55,990
tamper resistant meaning<font color="#CCCCCC"> that if some</font>

444
00:22:52,420 --> 00:22:58,060
poisoning is attempted<font color="#E5E5E5"> the code will</font>

445
00:22:55,990 --> 00:23:01,840
react<font color="#CCCCCC"> to that will break</font><font color="#E5E5E5"> the code and</font>

446
00:22:58,060 --> 00:23:04,659
has<font color="#CCCCCC"> debugger detection and to make it</font>

447
00:23:01,840 --> 00:23:06,879
<font color="#E5E5E5">harder</font><font color="#CCCCCC"> to tell what what's the agent</font>

448
00:23:04,660 --> 00:23:09,400
code it<font color="#E5E5E5"> can be mixed together</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> the</font>

449
00:23:06,880 --> 00:23:13,480
code<font color="#CCCCCC"> of the existing website so using</font>

450
00:23:09,400 --> 00:23:18,960
<font color="#E5E5E5">recompilation of the</font><font color="#CCCCCC"> javascript</font><font color="#E5E5E5"> so now</font>

451
00:23:13,480 --> 00:23:18,960
time<font color="#E5E5E5"> for our demo sorry</font>

452
00:23:19,810 --> 00:23:27,510
and for the demo<font color="#CCCCCC"> I'm running a website</font><font color="#E5E5E5"> a</font>

453
00:23:23,230 --> 00:23:27,510
dummy website from my own laptop

454
00:23:28,970 --> 00:23:38,690
okay don't<font color="#E5E5E5"> worry if you are not reading</font>

455
00:23:31,610 --> 00:23:43,790
that<font color="#E5E5E5"> it's not important okay</font><font color="#CCCCCC"> and now let</font>

456
00:23:38,690 --> 00:23:46,610
me load the<font color="#E5E5E5"> website so</font><font color="#CCCCCC"> here this is the</font>

457
00:23:43,790 --> 00:23:47,780
virtual<font color="#CCCCCC"> bank</font><font color="#E5E5E5"> application and things are</font>

458
00:23:46,610 --> 00:23:50,990
already going wrong with<font color="#E5E5E5"> this</font>

459
00:23:47,780 --> 00:23:54,620
application<font color="#E5E5E5"> and to prove you</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> let</font><font color="#CCCCCC"> me</font>

460
00:23:50,990 --> 00:24:01,460
load the<font color="#E5E5E5"> same application in a blank</font>

461
00:23:54,620 --> 00:24:03,949
profile so if you compare both you can

462
00:24:01,460 --> 00:24:06,590
see that the banner<font color="#E5E5E5"> in the middle is</font><font color="#CCCCCC"> not</font>

463
00:24:03,950 --> 00:24:07,820
present on<font color="#E5E5E5"> the right-side version so</font>

464
00:24:06,590 --> 00:24:10,220
we're<font color="#CCCCCC"> talking</font><font color="#E5E5E5"> about two different</font>

465
00:24:07,820 --> 00:24:14,360
profiles<font color="#E5E5E5"> the the right one is not</font>

466
00:24:10,220 --> 00:24:16,640
infected<font color="#CCCCCC"> the left one is infected</font><font color="#E5E5E5"> so</font>

467
00:24:14,360 --> 00:24:18,889
what's going on here<font color="#E5E5E5"> is this banner</font>

468
00:24:16,640 --> 00:24:22,070
<font color="#CCCCCC">that's in inviting</font><font color="#E5E5E5"> the user to download</font>

469
00:24:18,890 --> 00:24:25,220
<font color="#CCCCCC">mobile application which is fake</font><font color="#E5E5E5"> has</font>

470
00:24:22,070 --> 00:24:29,300
this Google Play buttons we can<font color="#E5E5E5"> click on</font>

471
00:24:25,220 --> 00:24:33,370
<font color="#E5E5E5">those and we are taking to a copycat</font><font color="#CCCCCC"> of</font>

472
00:24:29,300 --> 00:24:36,110
Google Play Store<font color="#E5E5E5"> but if you look closer</font>

473
00:24:33,370 --> 00:24:41,989
you<font color="#CCCCCC"> can see that's</font><font color="#E5E5E5"> actually played</font>

474
00:24:36,110 --> 00:24:44,270
<font color="#CCCCCC">Google</font><font color="#E5E5E5"> not Google all right this is kind</font>

475
00:24:41,990 --> 00:24:47,840
of stupid<font color="#CCCCCC"> because actually it would be</font>

476
00:24:44,270 --> 00:24:52,190
<font color="#E5E5E5">easier easy for the attacker</font><font color="#CCCCCC"> just to get</font>

477
00:24:47,840 --> 00:24:55,459
certificates<font color="#E5E5E5"> and and avoid the not</font>

478
00:24:52,190 --> 00:24:59,050
<font color="#E5E5E5">secure alert here so it could</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> even</font>

479
00:24:55,460 --> 00:25:01,400
stealthier than this and this version

480
00:24:59,050 --> 00:25:03,440
<font color="#CCCCCC">contrary</font><font color="#E5E5E5"> to the normal version doesn't</font>

481
00:25:01,400 --> 00:25:06,350
<font color="#E5E5E5">have an install button but rather a</font>

482
00:25:03,440 --> 00:25:09,110
download button<font color="#E5E5E5"> so if we are running</font>

483
00:25:06,350 --> 00:25:13,510
<font color="#E5E5E5">this application</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> mobile phone</font>

484
00:25:09,110 --> 00:25:17,899
and if we have installing from<font color="#E5E5E5"> unknown</font>

485
00:25:13,510 --> 00:25:20,810
sources<font color="#CCCCCC"> probably if you click that you</font>

486
00:25:17,900 --> 00:25:22,700
<font color="#CCCCCC">will</font><font color="#E5E5E5"> get an</font><font color="#CCCCCC"> APK and if you click</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> that</font>

487
00:25:20,810 --> 00:25:25,159
you will<font color="#E5E5E5"> install the malicious</font>

488
00:25:22,700 --> 00:25:27,500
application on your<font color="#CCCCCC"> device and from</font><font color="#E5E5E5"> this</font>

489
00:25:25,160 --> 00:25:31,460
<font color="#CCCCCC">moment after your mobile device</font><font color="#E5E5E5"> is</font>

490
00:25:27,500 --> 00:25:35,540
compromised so this is the story and now

491
00:25:31,460 --> 00:25:38,210
<font color="#E5E5E5">I'm basically redoing the same thing but</font>

492
00:25:35,540 --> 00:25:39,370
now enabling the application<font color="#E5E5E5"> real-time</font>

493
00:25:38,210 --> 00:25:45,170
monitoring

494
00:25:39,370 --> 00:25:48,110
because this is the demo<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is very</font>

495
00:25:45,170 --> 00:25:51,770
simple so it's just a script tag<font color="#E5E5E5"> in the</font>

496
00:25:48,110 --> 00:25:55,100
<font color="#CCCCCC">webpage that I am uncommenting so I'm</font>

497
00:25:51,770 --> 00:26:00,129
going<font color="#CCCCCC"> to enable the agent</font><font color="#E5E5E5"> manually so</font>

498
00:25:55,100 --> 00:26:00,129
usually it's not installed like this

499
00:26:02,370 --> 00:26:05,610
<font color="#E5E5E5">all right</font>

500
00:26:08,110 --> 00:26:15,189
so this is the dashboard<font color="#E5E5E5"> usually this</font><font color="#CCCCCC"> is</font>

501
00:26:12,519 --> 00:26:17,049
only available<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the owner of the web</font>

502
00:26:15,190 --> 00:26:23,049
application<font color="#E5E5E5"> not to the end-user</font><font color="#CCCCCC"> of</font>

503
00:26:17,049 --> 00:26:25,120
course and now I'm going<font color="#E5E5E5"> to load the</font>

504
00:26:23,049 --> 00:26:33,639
virtual<font color="#CCCCCC"> bank application again</font><font color="#E5E5E5"> and</font>

505
00:26:25,120 --> 00:26:36,428
please pay attention<font color="#E5E5E5"> to the banner so</font>

506
00:26:33,640 --> 00:26:39,039
after a second<font color="#E5E5E5"> it's removed from the web</font>

507
00:26:36,429 --> 00:26:43,600
<font color="#E5E5E5">page</font><font color="#CCCCCC"> and as you can see in</font><font color="#E5E5E5"> real</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> we</font>

508
00:26:39,039 --> 00:26:46,990
get an alert here<font color="#E5E5E5"> if you look closer</font>

509
00:26:43,600 --> 00:26:50,769
<font color="#E5E5E5">it's a blacklisted fake mobile</font><font color="#CCCCCC"> half an</font>

510
00:26:46,990 --> 00:26:53,860
<font color="#CCCCCC">hour signature that has been removed</font><font color="#E5E5E5"> so</font>

511
00:26:50,769 --> 00:26:57,309
like I mentioned<font color="#CCCCCC"> a while ago we can only</font>

512
00:26:53,860 --> 00:26:59,199
remove things that have been injected<font color="#CCCCCC"> if</font>

513
00:26:57,309 --> 00:27:02,460
we have a signature<font color="#E5E5E5"> so in this case we</font>

514
00:26:59,200 --> 00:27:06,730
did have a signature<font color="#CCCCCC"> that's why the</font>

515
00:27:02,460 --> 00:27:09,010
description is so complete<font color="#E5E5E5"> let's see</font>

516
00:27:06,730 --> 00:27:13,779
what what sort of information<font color="#CCCCCC"> we can</font>

517
00:27:09,010 --> 00:27:17,760
<font color="#E5E5E5">check so we can check the</font><font color="#CCCCCC"> client's</font><font color="#E5E5E5"> IP we</font>

518
00:27:13,779 --> 00:27:21,159
can check the URL<font color="#E5E5E5"> the user agent and</font>

519
00:27:17,760 --> 00:27:23,649
this is the most interesting part<font color="#E5E5E5"> where</font>

520
00:27:21,159 --> 00:27:27,700
you can see the actual markup<font color="#CCCCCC"> that the</font>

521
00:27:23,649 --> 00:27:30,610
user was seeing so everything<font color="#E5E5E5"> from this</font>

522
00:27:27,700 --> 00:27:34,299
<font color="#E5E5E5">point to this</font><font color="#CCCCCC"> point was</font><font color="#E5E5E5"> the injection so</font>

523
00:27:30,610 --> 00:27:36,459
this whole<font color="#E5E5E5"> diff element was injected and</font>

524
00:27:34,299 --> 00:27:40,240
we can see<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the dirty details so you</font>

525
00:27:36,460 --> 00:27:44,409
can<font color="#E5E5E5"> see that there's a link to play that</font>

526
00:27:40,240 --> 00:27:49,870
goggle we have data URI<font color="#E5E5E5"> we can see</font>

527
00:27:44,409 --> 00:27:53,500
<font color="#E5E5E5">everything right and now usually from a</font>

528
00:27:49,870 --> 00:27:56,379
back-end perspective from the InfoSec

529
00:27:53,500 --> 00:27:59,919
team perspective<font color="#CCCCCC"> if you want we cannot</font>

530
00:27:56,380 --> 00:28:02,320
see anything<font color="#E5E5E5"> so you just assume that</font>

531
00:27:59,919 --> 00:28:05,260
whatever leaves the server is what the

532
00:28:02,320 --> 00:28:07,539
user is seeing but but we know that<font color="#E5E5E5"> does</font>

533
00:28:05,260 --> 00:28:10,690
<font color="#E5E5E5">that doesn't</font><font color="#CCCCCC"> happen all the</font><font color="#E5E5E5"> time so how</font>

534
00:28:07,539 --> 00:28:13,658
can<font color="#E5E5E5"> we see what the user has saw we</font>

535
00:28:10,690 --> 00:28:16,149
<font color="#E5E5E5">depend</font><font color="#CCCCCC"> upon the user to report this</font><font color="#E5E5E5"> and</font>

536
00:28:13,659 --> 00:28:18,370
usually<font color="#E5E5E5"> it only happens</font><font color="#CCCCCC"> like a month</font>

537
00:28:16,149 --> 00:28:21,270
later<font color="#E5E5E5"> when he checks the credit card</font>

538
00:28:18,370 --> 00:28:25,169
balance and maybe he will recall the

539
00:28:21,270 --> 00:28:27,450
something was off about<font color="#E5E5E5"> his session in</font>

540
00:28:25,170 --> 00:28:29,190
<font color="#CCCCCC">online</font><font color="#E5E5E5"> bank but most of the time it</font>

541
00:28:27,450 --> 00:28:31,380
doesn't<font color="#E5E5E5"> need to there's no visual</font>

542
00:28:29,190 --> 00:28:34,590
indicators<font color="#E5E5E5"> that something is</font><font color="#CCCCCC"> different</font>

543
00:28:31,380 --> 00:28:42,120
<font color="#E5E5E5">about</font><font color="#CCCCCC"> that website we'll see the</font><font color="#E5E5E5"> rest of</font>

544
00:28:34,590 --> 00:28:44,209
<font color="#E5E5E5">the examples so let's proceed just keep</font>

545
00:28:42,120 --> 00:28:47,219
in mind<font color="#E5E5E5"> that at this point the the</font>

546
00:28:44,210 --> 00:28:50,580
<font color="#CCCCCC">application knows that</font><font color="#E5E5E5"> this session is</font>

547
00:28:47,220 --> 00:28:52,890
probably tainted<font color="#E5E5E5"> or compromised so he</font>

548
00:28:50,580 --> 00:28:55,230
could the application could be already

549
00:28:52,890 --> 00:28:57,630
reacting<font color="#E5E5E5"> and actually preventing me from</font>

550
00:28:55,230 --> 00:29:00,030
<font color="#E5E5E5">logging in into the application</font><font color="#CCCCCC"> that's</font>

551
00:28:57,630 --> 00:29:03,180
<font color="#E5E5E5">not the case in this demo but</font><font color="#CCCCCC"> it would</font>

552
00:29:00,030 --> 00:29:07,290
be possible<font color="#E5E5E5"> and easy to do so I'm just</font>

553
00:29:03,180 --> 00:29:10,170
<font color="#E5E5E5">logging in and even before our</font><font color="#CCCCCC"> login</font><font color="#E5E5E5"> I'm</font>

554
00:29:07,290 --> 00:29:12,659
seeing new<font color="#CCCCCC"> threads coming</font><font color="#E5E5E5"> in and this</font>

555
00:29:10,170 --> 00:29:15,930
one is a little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> more generic</font><font color="#CCCCCC"> so this</font>

556
00:29:12,660 --> 00:29:18,060
is a<font color="#E5E5E5"> well you can call it a zero day if</font>

557
00:29:15,930 --> 00:29:23,970
you want<font color="#E5E5E5"> it's not actually a</font>

558
00:29:18,060 --> 00:29:26,070
vulnerability<font color="#CCCCCC"> so I'm not totally</font><font color="#E5E5E5"> it's</font>

559
00:29:23,970 --> 00:29:28,830
it's not<font color="#E5E5E5"> really a zero day in that sense</font>

560
00:29:26,070 --> 00:29:32,189
<font color="#E5E5E5">so the in this case</font><font color="#CCCCCC"> is called poisoning</font>

561
00:29:28,830 --> 00:29:36,139
<font color="#E5E5E5">on</font><font color="#CCCCCC"> submit poisoning</font><font color="#E5E5E5"> on the form instance</font>

562
00:29:32,190 --> 00:29:36,140
let's check this out

563
00:29:36,930 --> 00:29:42,780
and here you can see<font color="#E5E5E5"> that the login form</font>

564
00:29:39,510 --> 00:29:45,690
<font color="#E5E5E5">in this case the</font><font color="#CCCCCC"> the form wasn't</font>

565
00:29:42,780 --> 00:29:49,379
modified but the attacker modified the

566
00:29:45,690 --> 00:29:52,680
on submits<font color="#E5E5E5"> codes that gets executed when</font>

567
00:29:49,380 --> 00:29:55,290
you click the<font color="#E5E5E5"> login so this is a very</font>

568
00:29:52,680 --> 00:29:58,620
simple<font color="#E5E5E5"> code all it's doing is</font><font color="#CCCCCC"> just</font>

569
00:29:55,290 --> 00:30:04,980
<font color="#E5E5E5">exfiltrating the users credentials after</font>

570
00:29:58,620 --> 00:30:07,320
<font color="#CCCCCC">a HELOC</font><font color="#E5E5E5"> it logs in so we are not doing</font>

571
00:30:04,980 --> 00:30:09,360
anything<font color="#E5E5E5"> at this</font><font color="#CCCCCC"> moment let me just</font>

572
00:30:07,320 --> 00:30:14,120
proceed knowing that my<font color="#E5E5E5"> credentials were</font>

573
00:30:09,360 --> 00:30:18,360
<font color="#E5E5E5">captured and now let me do a transaction</font>

574
00:30:14,120 --> 00:30:22,979
so here<font color="#E5E5E5"> I have few accounts</font><font color="#CCCCCC"> okay</font>

575
00:30:18,360 --> 00:30:26,850
new things are<font color="#E5E5E5"> happening</font><font color="#CCCCCC"> here another</font>

576
00:30:22,980 --> 00:30:29,280
<font color="#CCCCCC">code poisoning actually</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> very</font>

577
00:30:26,850 --> 00:30:32,040
<font color="#CCCCCC">similar to the previous one</font><font color="#E5E5E5"> because the</font>

578
00:30:29,280 --> 00:30:36,030
on submit function<font color="#E5E5E5"> has been replaced but</font>

579
00:30:32,040 --> 00:30:39,300
in<font color="#E5E5E5"> this case it has more details so you</font>

580
00:30:36,030 --> 00:30:41,160
<font color="#E5E5E5">can see that the attacker is collecting</font>

581
00:30:39,300 --> 00:30:44,550
the original name the original

582
00:30:41,160 --> 00:30:47,059
<font color="#CCCCCC">destination bank accounts</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> his</font>

583
00:30:44,550 --> 00:30:50,129
<font color="#E5E5E5">storing everything in session storage</font>

584
00:30:47,059 --> 00:30:54,300
probably because he needs to<font color="#CCCCCC"> use this</font>

585
00:30:50,130 --> 00:30:57,140
information<font color="#E5E5E5"> later and we'll see and his</font>

586
00:30:54,300 --> 00:31:00,720
<font color="#E5E5E5">pending his own destination</font><font color="#CCCCCC"> account</font>

587
00:30:57,140 --> 00:31:04,020
<font color="#CCCCCC">which is probably a mule</font><font color="#E5E5E5"> so the the</font>

588
00:31:00,720 --> 00:31:07,980
<font color="#E5E5E5">transaction will be</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> done to his</font>

589
00:31:04,020 --> 00:31:14,760
mule account<font color="#E5E5E5"> and then it's like regular</font>

590
00:31:07,980 --> 00:31:17,090
<font color="#E5E5E5">online banking fraud alright so again we</font>

591
00:31:14,760 --> 00:31:19,860
<font color="#E5E5E5">are not doing anything at this moment</font>

592
00:31:17,090 --> 00:31:22,280
<font color="#CCCCCC">just</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> show you what happens in a</font>

593
00:31:19,860 --> 00:31:26,129
normal attack<font color="#CCCCCC"> that's that's successful</font>

594
00:31:22,280 --> 00:31:31,020
<font color="#E5E5E5">so here we can see that more things are</font>

595
00:31:26,130 --> 00:31:33,240
happening<font color="#CCCCCC"> in our text poisoning if we go</font>

596
00:31:31,020 --> 00:31:35,490
to the details we can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> that this is</font>

597
00:31:33,240 --> 00:31:40,590
actually<font color="#CCCCCC"> the destination bank accounts</font>

598
00:31:35,490 --> 00:31:44,220
<font color="#E5E5E5">that</font><font color="#CCCCCC"> the user intends to transfer</font><font color="#E5E5E5"> to so</font>

599
00:31:40,590 --> 00:31:47,879
what's happening is that the<font color="#CCCCCC"> MIL account</font>

600
00:31:44,220 --> 00:31:51,270
was sent to<font color="#E5E5E5"> the bank and the bank just</font>

601
00:31:47,880 --> 00:31:54,419
serves normal transaction validation pay

602
00:31:51,270 --> 00:31:57,360
where you would see the<font color="#CCCCCC"> mill account the</font>

603
00:31:54,419 --> 00:32:00,510
number<font color="#E5E5E5"> but to prevent the</font><font color="#CCCCCC"> user from</font>

604
00:31:57,360 --> 00:32:03,479
<font color="#E5E5E5">suspecting anything</font><font color="#CCCCCC"> the attacker</font><font color="#E5E5E5"> is</font>

605
00:32:00,510 --> 00:32:06,059
fetching<font color="#CCCCCC"> what he stored in session</font>

606
00:32:03,480 --> 00:32:10,020
storage<font color="#E5E5E5"> and just poisoning the text</font>

607
00:32:06,059 --> 00:32:16,950
elements in order<font color="#E5E5E5"> for the user not to</font>

608
00:32:10,020 --> 00:32:20,610
<font color="#E5E5E5">suspect and this is it basically okay</font>

609
00:32:16,950 --> 00:32:25,580
<font color="#CCCCCC">and this</font><font color="#E5E5E5"> is the final summary and again</font>

610
00:32:20,610 --> 00:32:25,580
<font color="#CCCCCC">the attacker needed to tamper with this</font>

611
00:32:26,480 --> 00:32:33,480
so<font color="#E5E5E5"> he has a summary what sort of</font><font color="#CCCCCC"> attack</font>

612
00:32:31,500 --> 00:32:35,880
<font color="#E5E5E5">vectors because</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> just saw one use case</font>

613
00:32:33,480 --> 00:32:37,770
<font color="#CCCCCC">what sort of attack vectors are we</font>

614
00:32:35,880 --> 00:32:39,870
catching with this approach<font color="#CCCCCC"> we are</font>

615
00:32:37,770 --> 00:32:42,240
<font color="#E5E5E5">catching</font><font color="#CCCCCC"> man-in-the-browser injections</font>

616
00:32:39,870 --> 00:32:44,879
<font color="#CCCCCC">of course malicious and compromised</font>

617
00:32:42,240 --> 00:32:49,890
extensions malicious<font color="#E5E5E5"> and compromised</font>

618
00:32:44,880 --> 00:32:53,070
third party lives or<font color="#CCCCCC"> CBN's XSS require</font>

619
00:32:49,890 --> 00:32:55,260
requests that<font color="#CCCCCC"> are made out</font><font color="#E5E5E5"> to third</font>

620
00:32:53,070 --> 00:32:58,049
parties<font color="#E5E5E5"> that weren't</font><font color="#CCCCCC"> supposed to</font><font color="#E5E5E5"> be made</font>

621
00:32:55,260 --> 00:33:00,590
like exfiltration of data and user base

622
00:32:58,049 --> 00:33:03,299
tampering so if the<font color="#E5E5E5"> user just like</font>

623
00:33:00,590 --> 00:33:05,730
poking around just opening the debugger

624
00:33:03,299 --> 00:33:10,250
<font color="#CCCCCC">and changing things</font><font color="#E5E5E5"> we can detect that</font>

625
00:33:05,730 --> 00:33:14,130
as well<font color="#E5E5E5"> so there's footnotes</font>

626
00:33:10,250 --> 00:33:16,740
provided that<font color="#E5E5E5"> these injections manifest</font>

627
00:33:14,130 --> 00:33:20,190
themselves in the Dom so the Dom needs

628
00:33:16,740 --> 00:33:22,429
to be changed in<font color="#CCCCCC"> any way native library</font>

629
00:33:20,190 --> 00:33:24,900
needs to be modified<font color="#CCCCCC"> or poisoned</font>

630
00:33:22,429 --> 00:33:28,530
otherwise if we don't see anything

631
00:33:24,900 --> 00:33:31,260
we cannot catch the this type<font color="#E5E5E5"> of attacks</font>

632
00:33:28,530 --> 00:33:33,720
<font color="#E5E5E5">and what sorts</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> things are these</font>

633
00:33:31,260 --> 00:33:36,629
attacks doing<font color="#E5E5E5"> really so they are</font>

634
00:33:33,720 --> 00:33:38,669
treating the user<font color="#CCCCCC"> into like doing</font>

635
00:33:36,630 --> 00:33:41,130
something<font color="#E5E5E5"> that against his one own</font>

636
00:33:38,669 --> 00:33:44,580
interests like requesting a<font color="#E5E5E5"> two-factor</font>

637
00:33:41,130 --> 00:33:47,490
authentication token<font color="#E5E5E5"> actually remember</font>

638
00:33:44,580 --> 00:33:50,250
the coinbase<font color="#E5E5E5"> man-in-the-browser attack</font>

639
00:33:47,490 --> 00:33:54,750
that<font color="#CCCCCC"> i mentioned</font><font color="#E5E5E5"> before what they were</font>

640
00:33:50,250 --> 00:33:58,230
<font color="#E5E5E5">doing is like serving</font><font color="#CCCCCC"> an a fake message</font>

641
00:33:54,750 --> 00:34:02,580
to the user<font color="#E5E5E5"> saying that hey we detected</font>

642
00:33:58,230 --> 00:34:04,340
and recognized<font color="#E5E5E5"> an array and recognized</font>

643
00:34:02,580 --> 00:34:07,039
device using

644
00:34:04,340 --> 00:34:09,199
this session<font color="#CCCCCC"> so</font><font color="#E5E5E5"> pleased to</font><font color="#CCCCCC"> confirm that</font>

645
00:34:07,039 --> 00:34:10,790
everything<font color="#E5E5E5"> is</font><font color="#CCCCCC"> okay just</font><font color="#E5E5E5"> provide</font><font color="#CCCCCC"> me a</font>

646
00:34:09,199 --> 00:34:13,699
<font color="#E5E5E5">two-factor authentication token</font>

647
00:34:10,790 --> 00:34:16,330
so this two-factor authentication token

648
00:34:13,699 --> 00:34:19,250
was never requested from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> website and</font>

649
00:34:16,330 --> 00:34:21,500
what the script does is uses<font color="#E5E5E5"> that</font>

650
00:34:19,250 --> 00:34:23,929
two-factor authentication token to

651
00:34:21,500 --> 00:34:28,969
<font color="#CCCCCC">downgrade the security settings in coin</font>

652
00:34:23,929 --> 00:34:31,909
basis<font color="#E5E5E5"> settings</font><font color="#CCCCCC"> so after doing that</font><font color="#E5E5E5"> they</font>

653
00:34:28,969 --> 00:34:35,810
can<font color="#CCCCCC"> initiate transactions</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> the user</font>

654
00:34:31,909 --> 00:34:39,379
<font color="#CCCCCC">account without</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> the need to</font>

655
00:34:35,810 --> 00:34:42,649
<font color="#CCCCCC">give a two-factor</font><font color="#E5E5E5"> authentication</font><font color="#CCCCCC"> so in</font>

656
00:34:39,379 --> 00:34:45,279
<font color="#E5E5E5">summary to factory</font><font color="#CCCCCC"> education doesn't</font>

657
00:34:42,649 --> 00:34:48,049
protect you from this type<font color="#CCCCCC"> of attacks</font>

658
00:34:45,280 --> 00:34:50,810
<font color="#E5E5E5">they are serving exploit kids they are</font>

659
00:34:48,050 --> 00:34:55,040
collecting<font color="#CCCCCC"> an actual trading</font><font color="#E5E5E5"> credentials</font>

660
00:34:50,810 --> 00:34:57,410
keys<font color="#E5E5E5"> they are doing form jacking data</font>

661
00:34:55,040 --> 00:34:59,599
exfiltration<font color="#CCCCCC"> you are doing customer</font>

662
00:34:57,410 --> 00:35:04,310
journey<font color="#CCCCCC"> I</font><font color="#E5E5E5"> jacking which is things</font><font color="#CCCCCC"> like</font>

663
00:34:59,599 --> 00:35:08,030
and in ecommerce website<font color="#E5E5E5"> they might put</font>

664
00:35:04,310 --> 00:35:10,849
an ad<font color="#E5E5E5"> next to a product saying that hey</font>

665
00:35:08,030 --> 00:35:12,859
you<font color="#E5E5E5"> can get this product cheaper in a</font>

666
00:35:10,849 --> 00:35:17,180
different website<font color="#CCCCCC"> just click here and</font>

667
00:35:12,859 --> 00:35:19,520
and that drives the way the users supply

668
00:35:17,180 --> 00:35:21,859
chain attacks<font color="#CCCCCC"> this is what we call when</font>

669
00:35:19,520 --> 00:35:24,770
a<font color="#E5E5E5"> third</font><font color="#CCCCCC"> party library</font><font color="#E5E5E5"> is compromised or</font>

670
00:35:21,859 --> 00:35:27,380
a third<font color="#E5E5E5"> party server is breached and the</font>

671
00:35:24,770 --> 00:35:30,050
<font color="#E5E5E5">code</font><font color="#CCCCCC"> is modified</font><font color="#E5E5E5"> usually it's easier</font>

672
00:35:27,380 --> 00:35:32,869
<font color="#E5E5E5">because they they have fewer InfoSec</font>

673
00:35:30,050 --> 00:35:35,210
resources<font color="#E5E5E5"> they do less to protect</font>

674
00:35:32,869 --> 00:35:37,130
themselves then actually the the

675
00:35:35,210 --> 00:35:40,339
companies that<font color="#CCCCCC"> use their their library</font>

676
00:35:37,130 --> 00:35:45,530
they are injecting ads injecting forms

677
00:35:40,339 --> 00:35:49,099
and doing crypto jacking and this is the

678
00:35:45,530 --> 00:35:53,060
cliffhanger so<font color="#CCCCCC"> if you are still</font>

679
00:35:49,099 --> 00:35:56,359
interests<font color="#E5E5E5"> so did we really cut our web</font>

680
00:35:53,060 --> 00:35:58,339
app cheating<font color="#E5E5E5"> and the answer is yes</font><font color="#CCCCCC"> so</font>

681
00:35:56,359 --> 00:36:01,400
when we started using application<font color="#CCCCCC"> real</font>

682
00:35:58,339 --> 00:36:04,400
<font color="#CCCCCC">time monitoring we just use this on our</font>

683
00:36:01,400 --> 00:36:06,770
own website<font color="#E5E5E5"> and we use Braintree to</font>

684
00:36:04,400 --> 00:36:09,920
collect<font color="#E5E5E5"> credit card payments</font><font color="#CCCCCC"> and back</font>

685
00:36:06,770 --> 00:36:14,810
then<font color="#E5E5E5"> we were using their version one of</font>

686
00:36:09,920 --> 00:36:18,599
the API<font color="#E5E5E5"> and because it was based in</font>

687
00:36:14,810 --> 00:36:21,328
<font color="#CCCCCC">JSONP it was basically</font><font color="#E5E5E5"> when when</font>

688
00:36:18,599 --> 00:36:24,479
purchased a plan<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the website</font>

689
00:36:21,329 --> 00:36:27,779
it basically prints<font color="#E5E5E5"> this script tag</font><font color="#CCCCCC"> for</font>

690
00:36:24,479 --> 00:36:30,390
a split second<font color="#E5E5E5"> into the DOM and for that</font>

691
00:36:27,779 --> 00:36:33,809
split second<font color="#E5E5E5"> you can see</font><font color="#CCCCCC"> all the credit</font>

692
00:36:30,390 --> 00:36:37,499
card details<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is available to us</font>

693
00:36:33,809 --> 00:36:39,299
<font color="#E5E5E5">that shouldn't be looking at this that's</font>

694
00:36:37,499 --> 00:36:42,209
why we use a<font color="#E5E5E5"> third party</font><font color="#CCCCCC"> to collect</font><font color="#E5E5E5"> this</font>

695
00:36:39,299 --> 00:36:44,939
<font color="#CCCCCC">kind of information</font><font color="#E5E5E5"> and it's also</font>

696
00:36:42,209 --> 00:36:50,160
<font color="#E5E5E5">available to any third party that we are</font>

697
00:36:44,939 --> 00:36:53,489
using in our own website<font color="#E5E5E5"> so if you use a</font>

698
00:36:50,160 --> 00:36:56,399
third<font color="#CCCCCC"> party is a good rule of thumb</font><font color="#E5E5E5"> is</font>

699
00:36:53,489 --> 00:36:58,829
<font color="#CCCCCC">just put it put that third party in an</font>

700
00:36:56,400 --> 00:37:02,160
iframe in the sandbox<font color="#E5E5E5"> iframe if you can</font>

701
00:36:58,829 --> 00:37:05,209
you should<font color="#E5E5E5"> do that</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> still this is bad</font>

702
00:37:02,160 --> 00:37:08,428
<font color="#CCCCCC">and</font><font color="#E5E5E5"> this is something</font><font color="#CCCCCC"> that we only</font>

703
00:37:05,209 --> 00:37:11,189
caught by using<font color="#E5E5E5"> application</font><font color="#CCCCCC"> real time</font>

704
00:37:08,429 --> 00:37:14,339
monitoring and of course we detected

705
00:37:11,189 --> 00:37:16,759
<font color="#E5E5E5">many other things but this is</font><font color="#CCCCCC"> very</font>

706
00:37:14,339 --> 00:37:20,719
compelling example because you<font color="#CCCCCC"> can see</font>

707
00:37:16,759 --> 00:37:26,369
the the credit card details of our

708
00:37:20,719 --> 00:37:29,369
clients so in<font color="#E5E5E5"> conclusion the client side</font>

709
00:37:26,369 --> 00:37:31,469
is the danger<font color="#E5E5E5"> zone danger zone</font><font color="#CCCCCC"> it's too</font>

710
00:37:29,369 --> 00:37:34,949
many ways that someone<font color="#E5E5E5"> can tamper</font><font color="#CCCCCC"> and</font>

711
00:37:31,469 --> 00:37:37,319
<font color="#E5E5E5">modify the</font><font color="#CCCCCC"> application which which you</font>

712
00:37:34,949 --> 00:37:39,049
should<font color="#CCCCCC"> use</font><font color="#E5E5E5"> defense in death use all that</font>

713
00:37:37,319 --> 00:37:40,949
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can't owner ability tracking tools</font>

714
00:37:39,049 --> 00:37:48,929
<font color="#CCCCCC">sr</font><font color="#E5E5E5"> ICSP</font>

715
00:37:40,949 --> 00:37:53,670
etc security headers but<font color="#CCCCCC"> Heather based</font>

716
00:37:48,929 --> 00:37:55,349
defenses are weak<font color="#E5E5E5"> are still weak and if</font>

717
00:37:53,670 --> 00:38:00,119
you look at<font color="#E5E5E5"> everything that's being done</font>

718
00:37:55,349 --> 00:38:02,549
<font color="#E5E5E5">in the w3c institution we are mostly</font>

719
00:38:00,119 --> 00:38:05,670
relying in security<font color="#CCCCCC"> headers to</font><font color="#E5E5E5"> enforce</font>

720
00:38:02,549 --> 00:38:08,670
<font color="#E5E5E5">things in the browser but unless we</font>

721
00:38:05,670 --> 00:38:10,650
<font color="#E5E5E5">solve the malicious extensions or</font>

722
00:38:08,670 --> 00:38:13,589
extensions they have too much<font color="#CCCCCC"> power than</font>

723
00:38:10,650 --> 00:38:15,779
they can<font color="#CCCCCC"> tamper with with with the</font>

724
00:38:13,589 --> 00:38:17,369
security headers unless we have a<font color="#E5E5E5"> good</font>

725
00:38:15,779 --> 00:38:22,529
solution<font color="#E5E5E5"> to solve the men in the browser</font>

726
00:38:17,369 --> 00:38:24,719
this<font color="#E5E5E5"> is not going to hold application</font>

727
00:38:22,529 --> 00:38:27,479
real-time monitoring just assumes that

728
00:38:24,719 --> 00:38:29,819
injections will occur and tries<font color="#CCCCCC"> to do</font>

729
00:38:27,479 --> 00:38:31,620
something<font color="#CCCCCC"> with it</font><font color="#E5E5E5"> it tries to notify the</font>

730
00:38:29,819 --> 00:38:33,690
application in real<font color="#CCCCCC"> time</font>

731
00:38:31,620 --> 00:38:37,759
and even though it cannot stop the

732
00:38:33,690 --> 00:38:41,280
modification or the injection<font color="#E5E5E5"> it's the</font>

733
00:38:37,760 --> 00:38:43,590
the best next thing because<font color="#CCCCCC"> you can kick</font>

734
00:38:41,280 --> 00:38:46,710
the user<font color="#E5E5E5"> out</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> session</font><font color="#CCCCCC"> and stop</font>

735
00:38:43,590 --> 00:38:50,190
things before<font color="#E5E5E5"> real problems occur like</font>

736
00:38:46,710 --> 00:38:53,400
transactions going<font color="#E5E5E5"> out but sometimes</font>

737
00:38:50,190 --> 00:38:56,970
that may not<font color="#E5E5E5"> be enough if sensitive user</font>

738
00:38:53,400 --> 00:38:59,490
data is<font color="#CCCCCC"> exit rated but</font><font color="#E5E5E5"> at least you know</font>

739
00:38:56,970 --> 00:39:05,790
about it<font color="#E5E5E5"> immediately</font><font color="#CCCCCC"> not two</font><font color="#E5E5E5"> months is</font>

740
00:38:59,490 --> 00:39:08,250
later<font color="#CCCCCC"> when it gets in the</font><font color="#E5E5E5"> news right so</font>

741
00:39:05,790 --> 00:39:09,960
you can it's also useful<font color="#CCCCCC"> for security</font>

742
00:39:08,250 --> 00:39:11,700
<font color="#CCCCCC">professionals because you can see what</font>

743
00:39:09,960 --> 00:39:14,940
the user is seeing you can investigate

744
00:39:11,700 --> 00:39:16,799
<font color="#E5E5E5">you can see what sort of JavaScript was</font>

745
00:39:14,940 --> 00:39:20,970
being run<font color="#CCCCCC"> you can see if they try to</font>

746
00:39:16,800 --> 00:39:23,340
exit rate<font color="#E5E5E5"> to a third party server</font><font color="#CCCCCC"> you</font>

747
00:39:20,970 --> 00:39:27,390
can<font color="#E5E5E5"> try to follow the lid and and see</font>

748
00:39:23,340 --> 00:39:30,690
what you can do<font color="#CCCCCC"> about it and like</font>

749
00:39:27,390 --> 00:39:34,290
<font color="#E5E5E5">everything in security</font><font color="#CCCCCC"> if you put in</font>

750
00:39:30,690 --> 00:39:36,690
enough<font color="#E5E5E5"> barrier probably the attackers</font>

751
00:39:34,290 --> 00:39:40,200
<font color="#E5E5E5">unless they are really</font><font color="#CCCCCC"> motivated unless</font>

752
00:39:36,690 --> 00:39:41,850
<font color="#CCCCCC">their only target is you probably they</font>

753
00:39:40,200 --> 00:39:44,790
will just<font color="#E5E5E5"> move to the</font><font color="#CCCCCC"> next target</font>

754
00:39:41,850 --> 00:39:49,770
<font color="#E5E5E5">because it's easier and attackers are</font>

755
00:39:44,790 --> 00:39:53,480
usually lazy and this is all<font color="#E5E5E5"> I have for</font>

756
00:39:49,770 --> 00:39:53,480
today<font color="#CCCCCC"> I think</font>

757
00:39:59,319 --> 00:40:06,190
thank you<font color="#CCCCCC"> I think we have</font><font color="#E5E5E5"> around nine</font>

758
00:40:03,230 --> 00:40:06,190
minutes<font color="#CCCCCC"> for questions</font>

759
00:40:11,440 --> 00:40:18,530
yeah this is a commercial<font color="#E5E5E5"> solution</font><font color="#CCCCCC"> my</font>

760
00:40:16,310 --> 00:40:20,690
interest here was not<font color="#E5E5E5"> to pitch it but</font>

761
00:40:18,530 --> 00:40:23,510
rather<font color="#E5E5E5"> to talk about how it works and</font>

762
00:40:20,690 --> 00:40:30,880
the benefits because you if you want you

763
00:40:23,510 --> 00:40:30,880
can roll out<font color="#E5E5E5"> your own solution yeah</font>

764
00:40:34,140 --> 00:40:39,810
sorry maybe<font color="#E5E5E5"> you can speak a</font><font color="#CCCCCC"> bit louder</font>

765
00:40:46,520 --> 00:40:53,009
now the signatures are for the malicious

766
00:40:49,530 --> 00:40:54,990
things so it does really it does<font color="#E5E5E5"> follow</font>

767
00:40:53,010 --> 00:40:57,450
a<font color="#CCCCCC"> whitelisting approach so it detects</font>

768
00:40:54,990 --> 00:40:59,970
<font color="#E5E5E5">any modification so you're not required</font>

769
00:40:57,450 --> 00:41:03,870
to<font color="#CCCCCC"> have signatures but if you have like</font>

770
00:40:59,970 --> 00:41:06,330
<font color="#E5E5E5">if you want to just add more detailed</font>

771
00:41:03,870 --> 00:41:09,859
<font color="#CCCCCC">information on the threat if it's a</font>

772
00:41:06,330 --> 00:41:09,860
known<font color="#E5E5E5"> threat you can</font><font color="#CCCCCC"> use signatures</font>

