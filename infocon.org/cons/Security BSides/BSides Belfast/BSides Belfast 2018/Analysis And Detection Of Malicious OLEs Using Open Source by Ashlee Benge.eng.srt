1
00:00:02,720 --> 00:00:08,519
<font color="#E5E5E5">okay hi so like Warren just said I'm</font>

2
00:00:06,839 --> 00:00:10,740
gonna<font color="#E5E5E5"> talk to</font><font color="#CCCCCC"> you about analysis and</font>

3
00:00:08,519 --> 00:00:12,690
<font color="#E5E5E5">detection of malicious</font><font color="#CCCCCC"> oles</font><font color="#E5E5E5"> I using open</font>

4
00:00:10,740 --> 00:00:14,460
source tools<font color="#E5E5E5"> but when I say open source</font>

5
00:00:12,690 --> 00:00:16,169
tools what I actually really mean is

6
00:00:14,460 --> 00:00:18,539
<font color="#E5E5E5">that we are going</font><font color="#CCCCCC"> to play with them</font>

7
00:00:16,170 --> 00:00:23,609
<font color="#CCCCCC">using snort</font><font color="#E5E5E5"> specifically for detection</font>

8
00:00:18,539 --> 00:00:26,189
<font color="#E5E5E5">of them so Who am I I am a threat</font>

9
00:00:23,609 --> 00:00:28,230
<font color="#CCCCCC">research engineer for</font><font color="#E5E5E5"> Cisco Talos I work</font>

10
00:00:26,189 --> 00:00:30,900
for the outreach team which means<font color="#CCCCCC"> I</font>

11
00:00:28,230 --> 00:00:32,430
spend my time divided between hunting

12
00:00:30,900 --> 00:00:34,019
novel threats trying to find new<font color="#CCCCCC"> and</font>

13
00:00:32,430 --> 00:00:36,960
<font color="#E5E5E5">exciting moer that we haven't seen</font>

14
00:00:34,020 --> 00:00:38,760
<font color="#CCCCCC">before and traveling</font><font color="#E5E5E5"> to talk at</font>

15
00:00:36,960 --> 00:00:41,160
conferences<font color="#E5E5E5"> and</font><font color="#CCCCCC"> also speak to</font><font color="#E5E5E5"> customers</font>

16
00:00:38,760 --> 00:00:43,440
<font color="#CCCCCC">a prior to</font><font color="#E5E5E5"> working for the</font><font color="#CCCCCC"> outreach team</font>

17
00:00:41,160 --> 00:00:46,160
<font color="#CCCCCC">I worked in detection response</font><font color="#E5E5E5"> which</font>

18
00:00:43,440 --> 00:00:48,750
<font color="#E5E5E5">means that I did vulnerability research</font>

19
00:00:46,160 --> 00:00:49,980
<font color="#CCCCCC">malware analysis things along along</font>

20
00:00:48,750 --> 00:00:52,219
<font color="#E5E5E5">those lines with the goal</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> developing</font>

21
00:00:49,980 --> 00:00:54,629
<font color="#E5E5E5">detection for Cisco security products</font>

22
00:00:52,219 --> 00:00:56,969
which is a fancy<font color="#CCCCCC"> way of saying</font><font color="#E5E5E5"> that I</font>

23
00:00:54,629 --> 00:00:59,070
wrote snort<font color="#E5E5E5"> rules and</font><font color="#CCCCCC"> clamavi signatures</font>

24
00:00:56,969 --> 00:01:00,600
for<font color="#E5E5E5"> a living and</font><font color="#CCCCCC"> that is what makes</font><font color="#E5E5E5"> me</font>

25
00:00:59,070 --> 00:01:03,180
<font color="#E5E5E5">qualified to talk to you about this</font>

26
00:01:00,600 --> 00:01:05,159
today<font color="#E5E5E5"> prior</font><font color="#CCCCCC"> to working</font><font color="#E5E5E5"> in InfoSec my</font>

27
00:01:03,180 --> 00:01:07,890
academic<font color="#CCCCCC"> background is in computational</font>

28
00:01:05,159 --> 00:01:11,310
astrophysics<font color="#CCCCCC"> which is why I have this</font>

29
00:01:07,890 --> 00:01:12,930
picture<font color="#E5E5E5"> of this galaxy here and if you</font>

30
00:01:11,310 --> 00:01:14,549
<font color="#E5E5E5">haven't heard of Cisco Talos we are the</font>

31
00:01:12,930 --> 00:01:16,680
threat intelligence<font color="#CCCCCC"> division of Cisco</font>

32
00:01:14,549 --> 00:01:19,500
<font color="#E5E5E5">security this means we do a huge range</font>

33
00:01:16,680 --> 00:01:21,000
of threat research on<font color="#E5E5E5"> everything from</font>

34
00:01:19,500 --> 00:01:24,119
finding<font color="#CCCCCC"> vulnerabilities and third-party</font>

35
00:01:21,000 --> 00:01:26,340
<font color="#CCCCCC">software to</font><font color="#E5E5E5"> doing signature development</font>

36
00:01:24,119 --> 00:01:31,950
for security products - speaking of

37
00:01:26,340 --> 00:01:35,009
conferences like this<font color="#E5E5E5"> to give you a</font>

38
00:01:31,950 --> 00:01:36,810
brief outline<font color="#CCCCCC"> of my talk first</font><font color="#E5E5E5"> I'm gonna</font>

39
00:01:35,009 --> 00:01:38,579
intro you to snore<font color="#CCCCCC"> into the rule</font>

40
00:01:36,810 --> 00:01:40,079
language<font color="#CCCCCC"> we're gonna talk a little bit</font>

41
00:01:38,579 --> 00:01:41,639
<font color="#CCCCCC">about the differences in</font><font color="#E5E5E5"> writing good</font>

42
00:01:40,079 --> 00:01:43,710
rules versus just generally being able

43
00:01:41,640 --> 00:01:46,170
to write a snort<font color="#CCCCCC"> rule because to write a</font>

44
00:01:43,710 --> 00:01:47,939
snort rule<font color="#E5E5E5"> is actually very easy to</font>

45
00:01:46,170 --> 00:01:49,320
write a good snort rule<font color="#CCCCCC"> is an entirely</font>

46
00:01:47,939 --> 00:01:51,148
different<font color="#E5E5E5"> matter and that's why we</font>

47
00:01:49,320 --> 00:01:51,529
employ so many people that do this<font color="#E5E5E5"> for a</font>

48
00:01:51,149 --> 00:01:54,270
living

49
00:01:51,530 --> 00:01:57,689
<font color="#E5E5E5">we're then going to do a super brief</font>

50
00:01:54,270 --> 00:02:00,210
intro to Ilyas<font color="#E5E5E5"> and to these file formats</font>

51
00:01:57,689 --> 00:02:01,860
<font color="#CCCCCC">and then</font><font color="#E5E5E5"> we're going to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> two case</font>

52
00:02:00,210 --> 00:02:04,869
<font color="#CCCCCC">studies to</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about the ways that</font>

53
00:02:01,860 --> 00:02:06,970
Talos detects these malicious

54
00:02:04,870 --> 00:02:09,340
these are both<font color="#E5E5E5"> Oh days from the last</font>

55
00:02:06,970 --> 00:02:11,859
roughly year or two that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> still</font>

56
00:02:09,340 --> 00:02:15,340
actively<font color="#E5E5E5"> being</font><font color="#CCCCCC"> used today</font><font color="#E5E5E5"> which is</font><font color="#CCCCCC"> why</font>

57
00:02:11,860 --> 00:02:16,390
I've picked them for<font color="#E5E5E5"> my case study so</font>

58
00:02:15,340 --> 00:02:18,760
like I said<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> gonna give you a real</font>

59
00:02:16,390 --> 00:02:19,708
<font color="#E5E5E5">brief bare-bones introduction to start</font>

60
00:02:18,760 --> 00:02:21,850
right now

61
00:02:19,709 --> 00:02:24,520
<font color="#CCCCCC">snore if you haven't heard</font><font color="#E5E5E5"> of it is a</font>

62
00:02:21,850 --> 00:02:28,060
network<font color="#E5E5E5"> ideas that was first</font><font color="#CCCCCC"> created</font><font color="#E5E5E5"> in</font>

63
00:02:24,520 --> 00:02:29,860
1998 by Marty Roche<font color="#E5E5E5"> amongst many many</font>

64
00:02:28,060 --> 00:02:32,260
other things<font color="#E5E5E5"> it does</font><font color="#CCCCCC"> real-time</font><font color="#E5E5E5"> packet</font>

65
00:02:29,860 --> 00:02:34,390
analysis<font color="#E5E5E5"> it's also free</font><font color="#CCCCCC"> and open</font><font color="#E5E5E5"> source</font>

66
00:02:32,260 --> 00:02:36,220
and<font color="#CCCCCC"> available online</font><font color="#E5E5E5"> and the rules</font>

67
00:02:34,390 --> 00:02:40,570
format is actually text-based and very

68
00:02:36,220 --> 00:02:42,100
easy to<font color="#CCCCCC"> learn so</font><font color="#E5E5E5"> you can probably read a</font>

69
00:02:40,570 --> 00:02:43,810
snort<font color="#E5E5E5"> roll straight off even if you've</font>

70
00:02:42,100 --> 00:02:45,220
<font color="#CCCCCC">never seen</font><font color="#E5E5E5"> one before and I'll show you</font>

71
00:02:43,810 --> 00:02:47,620
one in just<font color="#E5E5E5"> a second and you'll see what</font>

72
00:02:45,220 --> 00:02:49,660
I'm<font color="#CCCCCC"> talking about but</font><font color="#E5E5E5"> actually being</font>

73
00:02:47,620 --> 00:02:52,780
<font color="#E5E5E5">able to write a rule well takes a little</font>

74
00:02:49,660 --> 00:02:54,400
bit<font color="#CCCCCC"> of practice</font><font color="#E5E5E5"> unfortunately I can't</font>

75
00:02:52,780 --> 00:02:55,810
<font color="#CCCCCC">really talk to</font><font color="#E5E5E5"> you about all</font><font color="#CCCCCC"> of the cool</font>

76
00:02:54,400 --> 00:02:57,400
things that<font color="#CCCCCC"> Stewart does because I only</font>

77
00:02:55,810 --> 00:02:59,200
have 45<font color="#CCCCCC"> minutes for</font><font color="#E5E5E5"> this talk and I</font>

78
00:02:57,400 --> 00:03:01,720
could<font color="#E5E5E5"> probably spend a few days talking</font>

79
00:02:59,200 --> 00:03:03,609
you<font color="#CCCCCC"> about snort so this is like I said a</font>

80
00:03:01,720 --> 00:03:09,130
<font color="#CCCCCC">really brief bare-bones introduction to</font>

81
00:03:03,610 --> 00:03:11,709
it so first<font color="#E5E5E5"> I'm gonna give you a a snort</font>

82
00:03:09,130 --> 00:03:13,510
rule<font color="#E5E5E5"> just to look at this is a little</font>

83
00:03:11,709 --> 00:03:16,269
bit of a complicated<font color="#E5E5E5"> one just because we</font>

84
00:03:13,510 --> 00:03:17,798
have<font color="#E5E5E5"> so many rural options here</font><font color="#CCCCCC"> I'm not</font>

85
00:03:16,269 --> 00:03:19,390
<font color="#E5E5E5">actually going to explain what this is</font>

86
00:03:17,799 --> 00:03:20,860
detecting because this is<font color="#E5E5E5"> just a simple</font>

87
00:03:19,390 --> 00:03:22,450
<font color="#E5E5E5">malware rule and we're looking for a</font>

88
00:03:20,860 --> 00:03:24,820
<font color="#E5E5E5">number of the parameters that the Mauer</font>

89
00:03:22,450 --> 00:03:26,890
is<font color="#E5E5E5"> using in its request but if you've</font>

90
00:03:24,820 --> 00:03:28,329
<font color="#E5E5E5">never seen a snort rule</font><font color="#CCCCCC"> before this is</font>

91
00:03:26,890 --> 00:03:30,970
what they look like<font color="#E5E5E5"> so like I</font><font color="#CCCCCC"> said it's</font>

92
00:03:28,330 --> 00:03:32,920
a text-based rule format and it's maybe

93
00:03:30,970 --> 00:03:34,660
<font color="#E5E5E5">not the simplest thing in this case to</font>

94
00:03:32,920 --> 00:03:39,160
read but it's at least English<font color="#CCCCCC"> which is</font>

95
00:03:34,660 --> 00:03:42,820
nice and now I'm gonna get<font color="#E5E5E5"> into the</font>

96
00:03:39,160 --> 00:03:44,859
snort rule syntax<font color="#E5E5E5"> so the first line of</font>

97
00:03:42,820 --> 00:03:46,510
the snort<font color="#CCCCCC"> rule in any case will be our</font>

98
00:03:44,860 --> 00:03:49,180
rule header<font color="#E5E5E5"> so we have a couple of</font>

99
00:03:46,510 --> 00:03:51,880
<font color="#E5E5E5">different</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> going on here our first</font>

100
00:03:49,180 --> 00:03:54,820
<font color="#E5E5E5">word of our header is the</font><font color="#CCCCCC"> rural action</font>

101
00:03:51,880 --> 00:03:57,670
so in this case it's<font color="#E5E5E5"> going to work this</font>

102
00:03:54,820 --> 00:03:59,920
is what the rule will be<font color="#E5E5E5"> doing if</font><font color="#CCCCCC"> we do</font>

103
00:03:57,670 --> 00:04:03,309
hit in all of our<font color="#E5E5E5"> content</font><font color="#CCCCCC"> matches</font><font color="#E5E5E5"> are</font>

104
00:03:59,920 --> 00:04:05,920
within whatever<font color="#E5E5E5"> we're inspecting you may</font>

105
00:04:03,310 --> 00:04:08,650
also see this<font color="#E5E5E5"> be drop but in general</font>

106
00:04:05,920 --> 00:04:10,809
this<font color="#E5E5E5"> will just be alert</font><font color="#CCCCCC"> I then we have</font>

107
00:04:08,650 --> 00:04:12,849
the rule protocol in general probably

108
00:04:10,810 --> 00:04:14,530
<font color="#E5E5E5">TCP maybe UDP we do have other</font><font color="#CCCCCC"> options</font>

109
00:04:12,849 --> 00:04:17,589
<font color="#CCCCCC">as well but these are the most common</font>

110
00:04:14,530 --> 00:04:20,649
<font color="#E5E5E5">ones then we have our source and pour</font>

111
00:04:17,589 --> 00:04:22,810
<font color="#CCCCCC">address excuse me source address and</font>

112
00:04:20,649 --> 00:04:24,370
source port<font color="#E5E5E5"> and</font><font color="#CCCCCC"> in this</font><font color="#E5E5E5"> case there any</font>

113
00:04:22,810 --> 00:04:26,890
so we<font color="#E5E5E5"> don't particularly care what they</font>

114
00:04:24,370 --> 00:04:28,900
are<font color="#CCCCCC"> we then have an arrow that shows</font><font color="#E5E5E5"> us</font>

115
00:04:26,890 --> 00:04:30,280
the<font color="#CCCCCC"> direction of traffic and this goes</font>

116
00:04:28,900 --> 00:04:32,890
to<font color="#E5E5E5"> the destination address</font><font color="#CCCCCC"> and port</font>

117
00:04:30,280 --> 00:04:34,479
<font color="#E5E5E5">which</font><font color="#CCCCCC"> can be a specific value or any as</font>

118
00:04:32,890 --> 00:04:36,580
we have on the left<font color="#E5E5E5"> side of the rule you</font>

119
00:04:34,480 --> 00:04:37,870
can actually<font color="#E5E5E5"> make this arrow go in</font>

120
00:04:36,580 --> 00:04:38,859
either<font color="#E5E5E5"> direction but</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> should probably</font>

121
00:04:37,870 --> 00:04:41,110
<font color="#E5E5E5">never do that</font>

122
00:04:38,860 --> 00:04:43,450
it's confusing to<font color="#E5E5E5"> whoever's reading the</font>

123
00:04:41,110 --> 00:04:48,280
rule and it's also<font color="#E5E5E5"> just not really</font>

124
00:04:43,450 --> 00:04:52,539
<font color="#E5E5E5">convention and a cool thing we can do</font>

125
00:04:48,280 --> 00:04:54,909
with these<font color="#E5E5E5"> header variables is use them</font>

126
00:04:52,540 --> 00:04:56,890
to group values<font color="#E5E5E5"> rather than having to</font>

127
00:04:54,910 --> 00:04:58,180
list out a huge number<font color="#E5E5E5"> of addresses or</font>

128
00:04:56,890 --> 00:05:00,669
ports we can just put them<font color="#CCCCCC"> in a</font>

129
00:04:58,180 --> 00:05:02,440
configuration<font color="#E5E5E5"> file somewhere</font><font color="#CCCCCC"> rather</font><font color="#E5E5E5"> than</font>

130
00:05:00,670 --> 00:05:04,570
having to<font color="#E5E5E5"> change them in every rule</font>

131
00:05:02,440 --> 00:05:06,610
<font color="#E5E5E5">every time that</font><font color="#CCCCCC"> something on our network</font>

132
00:05:04,570 --> 00:05:09,700
changes<font color="#E5E5E5"> we can just use them in a</font>

133
00:05:06,610 --> 00:05:11,860
configuration<font color="#E5E5E5"> format and specify them in</font>

134
00:05:09,700 --> 00:05:14,380
some other<font color="#CCCCCC"> file</font><font color="#E5E5E5"> somewhere one that comes</font>

135
00:05:11,860 --> 00:05:17,800
up<font color="#E5E5E5"> a lot maybe I would</font><font color="#CCCCCC"> be the HTTP</font>

136
00:05:14,380 --> 00:05:20,469
servers in HTTP ports<font color="#CCCCCC"> we also commonly</font>

137
00:05:17,800 --> 00:05:22,150
see file data ports being<font color="#E5E5E5"> used and</font>

138
00:05:20,470 --> 00:05:23,650
something that<font color="#E5E5E5"> you will</font><font color="#CCCCCC"> probably see</font><font color="#E5E5E5"> in</font>

139
00:05:22,150 --> 00:05:26,650
<font color="#E5E5E5">just about every rule that</font><font color="#CCCCCC"> the Talos</font>

140
00:05:23,650 --> 00:05:28,320
rule set contains<font color="#CCCCCC"> is home and external</font>

141
00:05:26,650 --> 00:05:30,969
net so these are what<font color="#CCCCCC"> you</font><font color="#E5E5E5"> would expect</font>

142
00:05:28,320 --> 00:05:35,099
<font color="#E5E5E5">IPS that are related to</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> network and</font>

143
00:05:30,970 --> 00:05:35,100
IPS<font color="#CCCCCC"> that</font><font color="#E5E5E5"> are not related to your network</font>

144
00:05:35,160 --> 00:05:38,740
<font color="#E5E5E5">every other thing</font><font color="#CCCCCC"> that I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> talk</font>

145
00:05:37,720 --> 00:05:41,200
about<font color="#CCCCCC"> from now on</font><font color="#E5E5E5"> is called</font><font color="#CCCCCC"> the rule</font>

146
00:05:38,740 --> 00:05:42,490
option<font color="#E5E5E5"> so on the left in this case we</font>

147
00:05:41,200 --> 00:05:45,190
have a rule option<font color="#E5E5E5"> which would be the</font>

148
00:05:42,490 --> 00:05:47,200
message in<font color="#E5E5E5"> this case on the right we</font>

149
00:05:45,190 --> 00:05:52,060
have<font color="#CCCCCC"> our argument which is literally</font>

150
00:05:47,200 --> 00:05:53,710
rule message<font color="#E5E5E5"> and the most important rule</font>

151
00:05:52,060 --> 00:05:56,169
<font color="#E5E5E5">option of all of them would be our</font>

152
00:05:53,710 --> 00:05:58,239
content match<font color="#E5E5E5"> so static strings are the</font>

153
00:05:56,169 --> 00:05:59,799
bread and<font color="#CCCCCC"> butter</font><font color="#E5E5E5"> for snort in order to</font>

154
00:05:58,240 --> 00:06:01,390
have a good snort<font color="#CCCCCC"> rule to have any snort</font>

155
00:05:59,800 --> 00:06:02,890
rule<font color="#E5E5E5"> all actually you need to</font><font color="#CCCCCC"> have some</font>

156
00:06:01,390 --> 00:06:06,669
kind<font color="#CCCCCC"> of static string</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> if it's just</font>

157
00:06:02,890 --> 00:06:09,400
<font color="#E5E5E5">one byte the longer and</font><font color="#CCCCCC"> more unique the</font>

158
00:06:06,669 --> 00:06:11,950
string the better<font color="#CCCCCC"> obviously for the case</font>

159
00:06:09,400 --> 00:06:13,929
<font color="#E5E5E5">of being able to refine vulnerability</font>

160
00:06:11,950 --> 00:06:15,550
traffic versus not malicious traffic<font color="#E5E5E5"> I'm</font>

161
00:06:13,930 --> 00:06:17,560
and also<font color="#CCCCCC"> for the sake of</font><font color="#E5E5E5"> role</font>

162
00:06:15,550 --> 00:06:20,260
performance<font color="#CCCCCC"> so in this case this rule is</font>

163
00:06:17,560 --> 00:06:22,330
looking for<font color="#E5E5E5"> just a string ABCD and you</font>

164
00:06:20,260 --> 00:06:26,430
can specify this<font color="#CCCCCC"> as the actual</font><font color="#E5E5E5"> string or</font>

165
00:06:22,330 --> 00:06:28,289
as hex values and like

166
00:06:26,430 --> 00:06:29,430
this just<font color="#E5E5E5"> finds a static pattern and</font>

167
00:06:28,290 --> 00:06:32,640
your<font color="#E5E5E5"> network data whatever you're</font>

168
00:06:29,430 --> 00:06:34,410
looking<font color="#E5E5E5"> at we can also modify our</font>

169
00:06:32,640 --> 00:06:36,150
content match<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> make a case</font>

170
00:06:34,410 --> 00:06:37,260
insensitive which is kind of<font color="#E5E5E5"> nice if you</font>

171
00:06:36,150 --> 00:06:38,669
don't know the way that it's<font color="#E5E5E5"> going to</font>

172
00:06:37,260 --> 00:06:44,099
<font color="#E5E5E5">appear in your</font><font color="#CCCCCC"> traffic or</font><font color="#E5E5E5"> maybe this</font>

173
00:06:38,670 --> 00:06:45,870
could<font color="#E5E5E5"> be used</font><font color="#CCCCCC"> to evade your rule by</font>

174
00:06:44,100 --> 00:06:47,190
<font color="#E5E5E5">default our content</font><font color="#CCCCCC"> matches are</font><font color="#E5E5E5"> case</font>

175
00:06:45,870 --> 00:06:51,420
<font color="#E5E5E5">sensitive so</font><font color="#CCCCCC"> that's something</font><font color="#E5E5E5"> to keep in</font>

176
00:06:47,190 --> 00:06:54,270
<font color="#CCCCCC">mind we can also</font><font color="#E5E5E5"> specify where in our</font>

177
00:06:51,420 --> 00:06:56,430
<font color="#E5E5E5">packet we want to look so if we use a</font>

178
00:06:54,270 --> 00:06:58,919
Content modifier called<font color="#E5E5E5"> the</font><font color="#CCCCCC"> offset</font><font color="#E5E5E5"> we</font>

179
00:06:56,430 --> 00:07:00,720
want to specifically skip<font color="#CCCCCC"> two bytes of</font>

180
00:06:58,920 --> 00:07:02,880
our packet before<font color="#E5E5E5"> we start to look for</font>

181
00:07:00,720 --> 00:07:04,320
<font color="#E5E5E5">our content match which is ABCD</font><font color="#CCCCCC"> so you</font>

182
00:07:02,880 --> 00:07:05,460
can<font color="#E5E5E5"> think of this</font><font color="#CCCCCC"> as the beginning of</font>

183
00:07:04,320 --> 00:07:10,040
<font color="#E5E5E5">the window that you're going to be</font>

184
00:07:05,460 --> 00:07:12,390
<font color="#CCCCCC">searching for your</font><font color="#E5E5E5"> content match and</font>

185
00:07:10,040 --> 00:07:16,410
this is the absolute<font color="#CCCCCC"> position</font><font color="#E5E5E5"> in the</font>

186
00:07:12,390 --> 00:07:18,390
file<font color="#E5E5E5"> the corollary to our offset is</font>

187
00:07:16,410 --> 00:07:19,650
depth so depth<font color="#E5E5E5"> is kind of the</font><font color="#CCCCCC"> terminator</font>

188
00:07:18,390 --> 00:07:22,409
<font color="#E5E5E5">of that window that we're searching</font>

189
00:07:19,650 --> 00:07:24,450
within in this case we have a depth of

190
00:07:22,410 --> 00:07:25,950
<font color="#CCCCCC">four for our content match and we want</font>

191
00:07:24,450 --> 00:07:30,990
to find<font color="#E5E5E5"> these four bytes within the</font>

192
00:07:25,950 --> 00:07:33,599
first<font color="#E5E5E5"> four bytes of our packet as I said</font>

193
00:07:30,990 --> 00:07:35,870
are these<font color="#E5E5E5"> these</font><font color="#CCCCCC"> role modifiers offset</font>

194
00:07:33,600 --> 00:07:37,650
<font color="#CCCCCC">and depth are absolute in the packet the</font>

195
00:07:35,870 --> 00:07:39,600
<font color="#CCCCCC">next I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to talk about our</font>

196
00:07:37,650 --> 00:07:41,640
<font color="#E5E5E5">relative to previous content matches so</font>

197
00:07:39,600 --> 00:07:43,080
you can use<font color="#CCCCCC"> offset and depth if you only</font>

198
00:07:41,640 --> 00:07:44,820
have one content match but in order to

199
00:07:43,080 --> 00:07:48,479
<font color="#E5E5E5">use the next two you have to have at</font>

200
00:07:44,820 --> 00:07:50,640
least<font color="#E5E5E5"> two because they're relative so in</font>

201
00:07:48,480 --> 00:07:53,640
this rule the first content match we see

202
00:07:50,640 --> 00:07:55,620
is ABC we skip one byte because we're

203
00:07:53,640 --> 00:07:57,479
specifying<font color="#E5E5E5"> that our distance is</font><font color="#CCCCCC"> one and</font>

204
00:07:55,620 --> 00:07:59,700
then we look<font color="#CCCCCC"> for de F anywhere else</font>

205
00:07:57,480 --> 00:08:01,230
appearing in the packet<font color="#E5E5E5"> like I said this</font>

206
00:07:59,700 --> 00:08:07,650
is relative so<font color="#CCCCCC"> you have to have at least</font>

207
00:08:01,230 --> 00:08:09,780
<font color="#E5E5E5">two content</font><font color="#CCCCCC"> matches and we can also use</font>

208
00:08:07,650 --> 00:08:11,520
the<font color="#CCCCCC"> within modifier to specify where we</font>

209
00:08:09,780 --> 00:08:13,469
should stop<font color="#E5E5E5"> looking for</font><font color="#CCCCCC"> a second content</font>

210
00:08:11,520 --> 00:08:16,169
match so in<font color="#E5E5E5"> this case we want to match</font>

211
00:08:13,470 --> 00:08:23,970
on ABC before checking<font color="#E5E5E5"> the next</font><font color="#CCCCCC"> ten</font>

212
00:08:16,170 --> 00:08:25,980
bytes following ABC<font color="#E5E5E5"> for</font><font color="#CCCCCC"> efg you can also</font>

213
00:08:23,970 --> 00:08:28,380
negate<font color="#E5E5E5"> a content match so in this case</font>

214
00:08:25,980 --> 00:08:30,330
we<font color="#E5E5E5"> would want to find ABC in our packet</font>

215
00:08:28,380 --> 00:08:31,830
and then check<font color="#E5E5E5"> the next</font><font color="#CCCCCC"> ten bytes</font>

216
00:08:30,330 --> 00:08:35,340
following our first match to make<font color="#CCCCCC"> sure</font>

217
00:08:31,830 --> 00:08:36,750
that you've G does<font color="#CCCCCC"> not appear you cannot</font>

218
00:08:35,340 --> 00:08:38,340
have a rule that<font color="#CCCCCC"> only contains a</font>

219
00:08:36,750 --> 00:08:39,110
negative<font color="#E5E5E5"> content match so if you are</font>

220
00:08:38,340 --> 00:08:40,339
trying<font color="#E5E5E5"> to</font>

221
00:08:39,110 --> 00:08:42,079
you check<font color="#CCCCCC"> that</font><font color="#E5E5E5"> something is not there</font>

222
00:08:40,339 --> 00:08:47,149
you do<font color="#CCCCCC"> have to</font><font color="#E5E5E5"> have something</font><font color="#CCCCCC"> positive</font>

223
00:08:42,078 --> 00:08:48,319
in your<font color="#CCCCCC"> role the next thing</font><font color="#E5E5E5"> I'm going to</font>

224
00:08:47,149 --> 00:08:49,910
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> is a little bit complicated</font>

225
00:08:48,320 --> 00:08:51,290
because<font color="#CCCCCC"> I don't have a whole lot of time</font>

226
00:08:49,910 --> 00:08:52,969
to<font color="#CCCCCC"> actually talk to</font><font color="#E5E5E5"> you about the</font>

227
00:08:51,290 --> 00:08:55,130
processing work that snort does when it

228
00:08:52,970 --> 00:08:56,810
looks<font color="#E5E5E5"> at a packet so smart is pretty</font>

229
00:08:55,130 --> 00:08:59,240
smart and<font color="#E5E5E5"> is able to tell what</font><font color="#CCCCCC"> kind of</font>

230
00:08:56,810 --> 00:09:01,279
<font color="#CCCCCC">traffic it's looking at so in this case</font>

231
00:08:59,240 --> 00:09:03,470
for this specific content match ABC we

232
00:09:01,279 --> 00:09:05,750
only want to<font color="#E5E5E5"> check the HTTP URI and</font>

233
00:09:03,470 --> 00:09:08,329
snort is able to<font color="#E5E5E5"> look at a packet and</font>

234
00:09:05,750 --> 00:09:09,740
decide what is<font color="#E5E5E5"> the URI and we can check</font>

235
00:09:08,329 --> 00:09:11,779
<font color="#CCCCCC">only that window that snort has</font>

236
00:09:09,740 --> 00:09:13,160
identified<font color="#E5E5E5"> for this content match which</font>

237
00:09:11,779 --> 00:09:14,810
is nice if you're trying to<font color="#E5E5E5"> speed up</font><font color="#CCCCCC"> a</font>

238
00:09:13,160 --> 00:09:19,550
rule<font color="#CCCCCC"> because you're looking at a large</font>

239
00:09:14,810 --> 00:09:23,089
amount of traffic<font color="#CCCCCC"> to give you a better</font>

240
00:09:19,550 --> 00:09:25,519
<font color="#E5E5E5">idea of all of</font><font color="#CCCCCC"> the ways you can use this</font>

241
00:09:23,089 --> 00:09:27,410
if<font color="#E5E5E5"> you take a look at everything in all</font>

242
00:09:25,519 --> 00:09:29,510
the<font color="#E5E5E5"> different colors here snort is able</font>

243
00:09:27,410 --> 00:09:31,790
to identify our HTTP method we can look

244
00:09:29,510 --> 00:09:34,160
at the URI<font color="#CCCCCC"> we can also check any</font><font color="#E5E5E5"> of the</font>

245
00:09:31,790 --> 00:09:36,589
<font color="#E5E5E5">headers we can check</font><font color="#CCCCCC"> just the value</font><font color="#E5E5E5"> of</font>

246
00:09:34,160 --> 00:09:38,180
<font color="#E5E5E5">the cookie we can also just</font><font color="#CCCCCC"> check the</font>

247
00:09:36,589 --> 00:09:39,800
HTTP client body and this saves you a

248
00:09:38,180 --> 00:09:41,689
lot<font color="#CCCCCC"> of processing time because you</font><font color="#E5E5E5"> don't</font>

249
00:09:39,800 --> 00:09:44,359
necessarily<font color="#E5E5E5"> want to</font><font color="#CCCCCC"> check every single</font>

250
00:09:41,690 --> 00:09:48,949
<font color="#CCCCCC">thing in every</font><font color="#E5E5E5"> single packet if you only</font>

251
00:09:44,360 --> 00:09:50,329
have a simple content match something

252
00:09:48,949 --> 00:09:52,519
I'd<font color="#E5E5E5"> like to point out here</font><font color="#CCCCCC"> that we see a</font>

253
00:09:50,329 --> 00:09:55,640
lot when<font color="#E5E5E5"> people</font><font color="#CCCCCC"> submit to our</font><font color="#E5E5E5"> community</font>

254
00:09:52,519 --> 00:09:58,699
<font color="#E5E5E5">rules set is that you</font><font color="#CCCCCC"> should never ever</font>

255
00:09:55,640 --> 00:10:00,680
<font color="#E5E5E5">ever match on the HTTP method</font><font color="#CCCCCC"> that would</font>

256
00:09:58,699 --> 00:10:01,880
be in this case this post here<font color="#E5E5E5"> and the</font>

257
00:10:00,680 --> 00:10:03,829
<font color="#E5E5E5">reason for that is</font><font color="#CCCCCC"> that you're not</font>

258
00:10:01,880 --> 00:10:05,600
actually doing<font color="#E5E5E5"> anything to help limit</font>

259
00:10:03,829 --> 00:10:07,729
<font color="#CCCCCC">inspections so our goal when</font><font color="#E5E5E5"> we write a</font>

260
00:10:05,600 --> 00:10:09,410
snort rule<font color="#E5E5E5"> is to limit the amount of</font>

261
00:10:07,730 --> 00:10:11,060
traffic that<font color="#E5E5E5"> we're inspecting because</font>

262
00:10:09,410 --> 00:10:12,920
this is computationally intensive and

263
00:10:11,060 --> 00:10:15,709
slow so the more<font color="#E5E5E5"> content matches you</font>

264
00:10:12,920 --> 00:10:17,599
have<font color="#E5E5E5"> the more time snort has to spend</font>

265
00:10:15,709 --> 00:10:19,489
deciding if something is going to match

266
00:10:17,600 --> 00:10:22,970
on your<font color="#E5E5E5"> rule so when you use something</font>

267
00:10:19,490 --> 00:10:24,529
like post or get the HTTP<font color="#CCCCCC"> method in your</font>

268
00:10:22,970 --> 00:10:26,180
rule you're really not<font color="#CCCCCC"> doing anything</font>

269
00:10:24,529 --> 00:10:28,220
<font color="#E5E5E5">for the sake of limiting what we're</font>

270
00:10:26,180 --> 00:10:30,469
actually looking<font color="#E5E5E5"> at there are some</font>

271
00:10:28,220 --> 00:10:31,910
exceptions<font color="#CCCCCC"> to</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> rule</font><font color="#E5E5E5"> but it's pretty</font>

272
00:10:30,470 --> 00:10:34,010
<font color="#E5E5E5">doubtful that you're actually</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to</font>

273
00:10:31,910 --> 00:10:36,110
need them<font color="#E5E5E5"> so in general this</font><font color="#CCCCCC"> is just not</font>

274
00:10:34,010 --> 00:10:40,670
<font color="#CCCCCC">something that you should</font><font color="#E5E5E5"> use if you're</font>

275
00:10:36,110 --> 00:10:42,110
trying<font color="#CCCCCC"> to write your own rules another</font>

276
00:10:40,670 --> 00:10:43,880
content buffer that's going to come up<font color="#CCCCCC"> a</font>

277
00:10:42,110 --> 00:10:46,970
<font color="#E5E5E5">lot when</font><font color="#CCCCCC"> we talk about our</font><font color="#E5E5E5"> malicious</font>

278
00:10:43,880 --> 00:10:48,800
<font color="#CCCCCC">oles is the file data content buffer</font><font color="#E5E5E5"> so</font>

279
00:10:46,970 --> 00:10:51,310
this restricts<font color="#CCCCCC"> a Content match to just</font>

280
00:10:48,800 --> 00:10:51,310
the file data

281
00:10:51,430 --> 00:10:57,849
<font color="#CCCCCC">ah</font><font color="#E5E5E5"> and whereas we have to repeatedly</font>

282
00:10:56,170 --> 00:10:59,229
define for our other content buffers

283
00:10:57,850 --> 00:11:01,360
which one we<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> look</font><font color="#CCCCCC"> at for</font><font color="#E5E5E5"> each</font>

284
00:10:59,230 --> 00:11:08,320
content much but file data we<font color="#CCCCCC"> actually</font>

285
00:11:01,360 --> 00:11:10,839
only have<font color="#CCCCCC"> to include it once that's</font>

286
00:11:08,320 --> 00:11:13,630
pretty useful<font color="#CCCCCC"> because a lot of times we</font>

287
00:11:10,839 --> 00:11:16,000
<font color="#E5E5E5">want to identify a lot of things and our</font>

288
00:11:13,630 --> 00:11:17,230
file data buffer and it<font color="#E5E5E5"> just makes it</font>

289
00:11:16,000 --> 00:11:27,580
quicker if you're an analyst writing

290
00:11:17,230 --> 00:11:29,260
this rule<font color="#E5E5E5"> so in this case we have we</font>

291
00:11:27,580 --> 00:11:34,839
have<font color="#E5E5E5"> three content matches</font><font color="#CCCCCC"> and they're</font>

292
00:11:29,260 --> 00:11:36,279
all within<font color="#E5E5E5"> the file data buffer another</font>

293
00:11:34,839 --> 00:11:38,050
thing I'm going<font color="#E5E5E5"> to point out that's a</font>

294
00:11:36,279 --> 00:11:40,540
bit of a more advanced rule<font color="#E5E5E5"> option is</font>

295
00:11:38,050 --> 00:11:45,420
our flow bits option<font color="#E5E5E5"> so this allows</font>

296
00:11:40,540 --> 00:11:45,420
rules to track<font color="#E5E5E5"> States during</font><font color="#CCCCCC"> a session</font>

297
00:11:46,020 --> 00:11:49,750
and this would be used<font color="#E5E5E5"> in conjunction</font>

298
00:11:48,339 --> 00:11:52,959
<font color="#E5E5E5">with the rule that contains actual</font>

299
00:11:49,750 --> 00:11:54,310
detection so this is kind of a<font color="#CCCCCC"> fancy way</font>

300
00:11:52,959 --> 00:11:56,260
of saying<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we're going</font><font color="#E5E5E5"> to use this</font>

301
00:11:54,310 --> 00:11:57,609
to identify file types<font color="#E5E5E5"> and this will</font>

302
00:11:56,260 --> 00:12:02,110
<font color="#E5E5E5">make more</font><font color="#CCCCCC"> sense when</font><font color="#E5E5E5"> this comes up later</font>

303
00:11:57,610 --> 00:12:03,400
<font color="#CCCCCC">on</font><font color="#E5E5E5"> and probably the most important</font><font color="#CCCCCC"> thing</font>

304
00:12:02,110 --> 00:12:05,080
that<font color="#E5E5E5"> I'm going to talk to you about in</font>

305
00:12:03,400 --> 00:12:08,110
terms<font color="#E5E5E5"> of snort rules is our fast pattern</font>

306
00:12:05,080 --> 00:12:09,670
so this is our entrance condition if<font color="#E5E5E5"> we</font>

307
00:12:08,110 --> 00:12:11,830
match on our<font color="#E5E5E5"> fast pattern we're</font><font color="#CCCCCC"> going to</font>

308
00:12:09,670 --> 00:12:14,380
<font color="#CCCCCC">evaluate all of our other options until</font>

309
00:12:11,830 --> 00:12:17,800
we<font color="#CCCCCC"> reach the end of the rule</font><font color="#E5E5E5"> and or we</font>

310
00:12:14,380 --> 00:12:20,170
miss on a rule option<font color="#E5E5E5"> so we want to keep</font>

311
00:12:17,800 --> 00:12:21,760
as much traffic out<font color="#CCCCCC"> of the detection</font>

312
00:12:20,170 --> 00:12:23,500
<font color="#E5E5E5">engine as we can because like I said</font>

313
00:12:21,760 --> 00:12:26,050
<font color="#CCCCCC">it's slow and</font><font color="#E5E5E5"> the more traffic we have</font>

314
00:12:23,500 --> 00:12:28,930
<font color="#E5E5E5">being evaluated by a rule with slower</font>

315
00:12:26,050 --> 00:12:30,699
snort is going to be so we want to<font color="#E5E5E5"> pick</font>

316
00:12:28,930 --> 00:12:33,790
the most unique content match that we

317
00:12:30,700 --> 00:12:37,870
can<font color="#E5E5E5"> so here and this</font><font color="#CCCCCC"> role we've set ABC</font>

318
00:12:33,790 --> 00:12:41,279
<font color="#E5E5E5">is our fast pattern and you can</font><font color="#CCCCCC"> think of</font>

319
00:12:37,870 --> 00:12:43,480
this as<font color="#CCCCCC"> the entrance condition</font>

320
00:12:41,279 --> 00:12:46,029
additionally we have a fast pattern<font color="#E5E5E5"> only</font>

321
00:12:43,480 --> 00:12:48,250
option<font color="#CCCCCC"> so in this case</font><font color="#E5E5E5"> that means that</font>

322
00:12:46,029 --> 00:12:50,709
we would evaluate<font color="#E5E5E5"> ABC and then we would</font>

323
00:12:48,250 --> 00:12:53,110
drop out<font color="#CCCCCC"> of the rule because</font><font color="#E5E5E5"> we only had</font>

324
00:12:50,709 --> 00:12:54,880
<font color="#CCCCCC">the one content much when we specify a</font>

325
00:12:53,110 --> 00:12:56,320
fast pattern you evaluate at once in the

326
00:12:54,880 --> 00:12:58,750
fast pattern engine and then you would

327
00:12:56,320 --> 00:13:01,089
evaluate<font color="#E5E5E5"> a second time as we evaluate</font>

328
00:12:58,750 --> 00:13:02,440
the<font color="#E5E5E5"> rest of the rule options which maybe</font>

329
00:13:01,089 --> 00:13:04,400
doesn't make sense<font color="#E5E5E5"> right now but</font><font color="#CCCCCC"> will</font>

330
00:13:02,440 --> 00:13:07,100
make sense<font color="#E5E5E5"> when we have content matches</font>

331
00:13:04,400 --> 00:13:09,020
<font color="#CCCCCC">to our fast pattern</font><font color="#E5E5E5"> because we're not</font>

332
00:13:07,100 --> 00:13:13,360
able to use any kind<font color="#E5E5E5"> of distance</font>

333
00:13:09,020 --> 00:13:13,360
modifier<font color="#E5E5E5"> if we specify fast pattern only</font>

334
00:13:14,710 --> 00:13:19,010
we're also able to use<font color="#CCCCCC"> Perl compatible</font>

335
00:13:17,390 --> 00:13:20,870
regular expressions which is quite nice

336
00:13:19,010 --> 00:13:24,670
if you have something<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> maybe more</font>

337
00:13:20,870 --> 00:13:24,670
complicated<font color="#E5E5E5"> than just a static string</font>

338
00:13:24,910 --> 00:13:31,100
and I pointed this out a few<font color="#E5E5E5"> times but</font>

339
00:13:28,760 --> 00:13:32,540
<font color="#E5E5E5">one of the most important things when we</font>

340
00:13:31,100 --> 00:13:35,120
write a snort rule<font color="#E5E5E5"> is that we minimize</font>

341
00:13:32,540 --> 00:13:37,579
<font color="#E5E5E5">what we're inspecting so we do this</font>

342
00:13:35,120 --> 00:13:40,100
first with the fast pattern we want<font color="#E5E5E5"> our</font>

343
00:13:37,580 --> 00:13:41,720
fast pattern to kind<font color="#E5E5E5"> of decide for</font><font color="#CCCCCC"> us if</font>

344
00:13:40,100 --> 00:13:43,400
we're looking<font color="#E5E5E5"> at</font><font color="#CCCCCC"> traffic that might</font>

345
00:13:41,720 --> 00:13:46,520
actually be interesting<font color="#E5E5E5"> and relevant to</font>

346
00:13:43,400 --> 00:13:48,709
our rule<font color="#CCCCCC"> we then have things like</font>

347
00:13:46,520 --> 00:13:51,500
content<font color="#CCCCCC"> matches the more general ones</font>

348
00:13:48,710 --> 00:13:53,780
that we can use to<font color="#CCCCCC"> isolate just the</font>

349
00:13:51,500 --> 00:13:57,790
<font color="#E5E5E5">vulnerable application</font><font color="#CCCCCC"> traffic and then</font>

350
00:13:53,780 --> 00:14:00,140
we can use the more<font color="#E5E5E5"> complicated or</font><font color="#CCCCCC"> more</font>

351
00:13:57,790 --> 00:14:02,060
general content matches<font color="#CCCCCC"> after our more</font>

352
00:14:00,140 --> 00:14:03,920
<font color="#CCCCCC">unique ones to identify just things</font>

353
00:14:02,060 --> 00:14:05,890
relevant<font color="#E5E5E5"> to whatever vulnerability</font>

354
00:14:03,920 --> 00:14:08,209
condition<font color="#E5E5E5"> we're trying to identify and</font>

355
00:14:05,890 --> 00:14:10,640
finally we would<font color="#E5E5E5"> go into computationally</font>

356
00:14:08,210 --> 00:14:12,290
intensive things like the pcre or the

357
00:14:10,640 --> 00:14:14,150
bite tests<font color="#E5E5E5"> other things that I haven't</font>

358
00:14:12,290 --> 00:14:16,219
mentioned in this talk because<font color="#E5E5E5"> they're a</font>

359
00:14:14,150 --> 00:14:19,760
bit more<font color="#E5E5E5"> complicated and hard to</font><font color="#CCCCCC"> explain</font>

360
00:14:16,220 --> 00:14:21,770
<font color="#E5E5E5">when I only have limited</font><font color="#CCCCCC"> time but the</font>

361
00:14:19,760 --> 00:14:24,260
goal of<font color="#E5E5E5"> this again is</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> just isolate</font>

362
00:14:21,770 --> 00:14:26,090
traffic that is<font color="#CCCCCC"> relevant to our</font>

363
00:14:24,260 --> 00:14:28,189
vulnerability<font color="#E5E5E5"> whatever we're trying to</font>

364
00:14:26,090 --> 00:14:37,070
<font color="#E5E5E5">identify or if you're just</font><font color="#CCCCCC"> trying to</font>

365
00:14:28,190 --> 00:14:38,510
<font color="#CCCCCC">identify malware traffic so now I'm</font>

366
00:14:37,070 --> 00:14:44,540
<font color="#E5E5E5">going to give you a very brief intro to</font>

367
00:14:38,510 --> 00:14:46,819
<font color="#E5E5E5">office file formats so for the first</font>

368
00:14:44,540 --> 00:14:48,770
<font color="#E5E5E5">file type we have an RTF we have a file</font>

369
00:14:46,820 --> 00:14:51,500
magic consisting of what is in green

370
00:14:48,770 --> 00:14:52,760
here and in an RTF you'll see a<font color="#CCCCCC"> number</font>

371
00:14:51,500 --> 00:14:55,430
<font color="#E5E5E5">of control words that are</font><font color="#CCCCCC"> Dillon</font>

372
00:14:52,760 --> 00:14:56,630
delineated by<font color="#E5E5E5"> a backslash on each of</font>

373
00:14:55,430 --> 00:14:58,969
<font color="#E5E5E5">these control words has a different</font>

374
00:14:56,630 --> 00:15:00,140
action<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> the slash</font><font color="#E5E5E5"> par would</font>

375
00:14:58,970 --> 00:15:02,170
indicate that<font color="#E5E5E5"> you're looking at a new</font>

376
00:15:00,140 --> 00:15:05,420
<font color="#E5E5E5">paragraph in the file</font>

377
00:15:02,170 --> 00:15:08,030
<font color="#CCCCCC">RTF SAR relatively simple</font><font color="#E5E5E5"> so there's not</font>

378
00:15:05,420 --> 00:15:09,620
<font color="#E5E5E5">a whole</font><font color="#CCCCCC"> lot for</font><font color="#E5E5E5"> me to say about this on</font>

379
00:15:08,030 --> 00:15:11,689
the more interesting file format<font color="#E5E5E5"> our</font>

380
00:15:09,620 --> 00:15:14,450
dock and docx files which you<font color="#E5E5E5"> see more</font>

381
00:15:11,690 --> 00:15:15,630
<font color="#E5E5E5">often so</font><font color="#CCCCCC"> dock is a</font><font color="#E5E5E5"> legacy</font><font color="#CCCCCC"> office file</font>

382
00:15:14,450 --> 00:15:19,800
format<font color="#E5E5E5"> whereas dock</font>

383
00:15:15,630 --> 00:15:22,170
is the newer one since 2007 docx is

384
00:15:19,800 --> 00:15:24,449
actually just<font color="#E5E5E5"> a zip archive of XML files</font>

385
00:15:22,170 --> 00:15:26,099
that has a particular<font color="#CCCCCC"> structure and the</font>

386
00:15:24,450 --> 00:15:29,340
one that<font color="#E5E5E5"> we really</font><font color="#CCCCCC"> care about in this</font>

387
00:15:26,100 --> 00:15:31,800
case is<font color="#E5E5E5"> word slash document XML that's</font>

388
00:15:29,340 --> 00:15:33,840
<font color="#E5E5E5">usually where</font><font color="#CCCCCC"> you would see at least in</font>

389
00:15:31,800 --> 00:15:37,020
<font color="#E5E5E5">what I'm going to talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> something</font>

390
00:15:33,840 --> 00:15:38,400
<font color="#E5E5E5">that would be relevant</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> an exploit and</font>

391
00:15:37,020 --> 00:15:40,530
now I'm gonna get to the actually

392
00:15:38,400 --> 00:15:43,319
exciting part of<font color="#E5E5E5"> this talk which</font><font color="#CCCCCC"> is the</font>

393
00:15:40,530 --> 00:15:44,699
<font color="#E5E5E5">section about malicious</font><font color="#CCCCCC"> oles</font><font color="#E5E5E5"> so for this</font>

394
00:15:43,320 --> 00:15:47,010
portion<font color="#CCCCCC"> I'm gonna talk about two</font>

395
00:15:44,700 --> 00:15:49,560
specific<font color="#CCCCCC"> O'Day's that we see relatively</font>

396
00:15:47,010 --> 00:15:53,670
often on the strategies<font color="#CCCCCC"> that we use at</font>

397
00:15:49,560 --> 00:15:54,959
<font color="#CCCCCC">Talos to actually detect these files the</font>

398
00:15:53,670 --> 00:15:58,199
first<font color="#E5E5E5"> one I'm going to talk about</font><font color="#CCCCCC"> is CVE</font>

399
00:15:54,960 --> 00:15:59,910
2017<font color="#CCCCCC"> o 199</font><font color="#E5E5E5"> you may have heard</font><font color="#CCCCCC"> about this</font>

400
00:15:58,200 --> 00:16:02,070
<font color="#E5E5E5">because it's so commonly used as a</font>

401
00:15:59,910 --> 00:16:05,010
dropper<font color="#E5E5E5"> even today we still see this</font>

402
00:16:02,070 --> 00:16:06,480
being<font color="#CCCCCC"> used quite actively</font><font color="#E5E5E5"> and generally</font>

403
00:16:05,010 --> 00:16:07,800
this<font color="#E5E5E5"> would be used to go and grab other</font>

404
00:16:06,480 --> 00:16:09,030
malware<font color="#E5E5E5"> that would then infect your</font>

405
00:16:07,800 --> 00:16:10,319
system so you would see something

406
00:16:09,030 --> 00:16:12,180
exploiting<font color="#CCCCCC"> this cve</font>

407
00:16:10,320 --> 00:16:13,680
<font color="#E5E5E5">maybe being used in like a phishing</font>

408
00:16:12,180 --> 00:16:14,939
campaign and then someone would<font color="#E5E5E5"> have to</font>

409
00:16:13,680 --> 00:16:16,670
<font color="#E5E5E5">download it</font><font color="#CCCCCC"> and open</font><font color="#E5E5E5"> it and</font>

410
00:16:14,940 --> 00:16:21,860
unfortunately<font color="#CCCCCC"> that happens quite often</font>

411
00:16:16,670 --> 00:16:21,860
<font color="#E5E5E5">so this is successfully used quite a bit</font>

412
00:16:22,070 --> 00:16:27,390
and<font color="#E5E5E5"> again like I said these are</font>

413
00:16:24,330 --> 00:16:29,160
malicious RTF documents and they contain

414
00:16:27,390 --> 00:16:31,260
<font color="#E5E5E5">an embedded</font><font color="#CCCCCC"> Oly which is kind of unique</font>

415
00:16:29,160 --> 00:16:34,980
<font color="#CCCCCC">that you would see that</font><font color="#E5E5E5"> embedded in an</font>

416
00:16:31,260 --> 00:16:37,140
RTF<font color="#CCCCCC"> and these</font><font color="#E5E5E5"> oles are abusing the URL</font>

417
00:16:34,980 --> 00:16:39,150
moniker in order to make outbound HTTP

418
00:16:37,140 --> 00:16:40,710
requests which are then used<font color="#CCCCCC"> to grab and</font>

419
00:16:39,150 --> 00:16:45,420
drop other malware<font color="#CCCCCC"> onto your victim</font>

420
00:16:40,710 --> 00:16:46,710
machine if you've never heard<font color="#E5E5E5"> of it Oh</font>

421
00:16:45,420 --> 00:16:48,540
<font color="#E5E5E5">Ally moniker</font>

422
00:16:46,710 --> 00:16:51,030
according to Microsoft<font color="#CCCCCC"> they're used to</font>

423
00:16:48,540 --> 00:16:53,610
<font color="#E5E5E5">identify connect to and run</font><font color="#CCCCCC"> oily</font>

424
00:16:51,030 --> 00:16:55,680
compound<font color="#E5E5E5"> document link objects which is</font>

425
00:16:53,610 --> 00:16:57,990
a complicated way to say that it's used

426
00:16:55,680 --> 00:17:02,280
to make that HTTP request<font color="#CCCCCC"> to the</font>

427
00:16:57,990 --> 00:17:04,319
attacker<font color="#E5E5E5"> controlled domain so the</font>

428
00:17:02,280 --> 00:17:06,810
important part that<font color="#CCCCCC"> actually matters for</font>

429
00:17:04,319 --> 00:17:08,938
<font color="#CCCCCC">us</font><font color="#E5E5E5"> as this value right here in green and</font>

430
00:17:06,810 --> 00:17:10,530
<font color="#CCCCCC">I've thrown</font><font color="#E5E5E5"> that up there just so in the</font>

431
00:17:08,939 --> 00:17:12,750
<font color="#E5E5E5">next slide you</font><font color="#CCCCCC"> can kind of</font><font color="#E5E5E5"> look for what</font>

432
00:17:10,530 --> 00:17:14,459
I'm talking about<font color="#CCCCCC"> the way that</font><font color="#E5E5E5"> I've set</font>

433
00:17:12,750 --> 00:17:16,560
up these slides is so kind<font color="#E5E5E5"> of one</font>

434
00:17:14,459 --> 00:17:18,329
<font color="#E5E5E5">explain the</font><font color="#CCCCCC"> mechanics of what</font><font color="#E5E5E5"> is going</font>

435
00:17:16,560 --> 00:17:20,760
<font color="#E5E5E5">on and then to give you guys an example</font>

436
00:17:18,329 --> 00:17:22,198
<font color="#E5E5E5">of the way this</font><font color="#CCCCCC"> actually looks when</font>

437
00:17:20,760 --> 00:17:25,260
you're<font color="#CCCCCC"> hunting through things I was an</font>

438
00:17:22,199 --> 00:17:27,290
analyst<font color="#E5E5E5"> I put in</font><font color="#CCCCCC"> pcaps of</font><font color="#E5E5E5"> the malicious</font>

439
00:17:25,260 --> 00:17:28,610
files as well as chunks of the

440
00:17:27,290 --> 00:17:32,330
the files<font color="#CCCCCC"> themselves that are</font><font color="#E5E5E5"> relevant</font>

441
00:17:28,610 --> 00:17:34,639
to<font color="#E5E5E5"> these exploits so what makes this</font>

442
00:17:32,330 --> 00:17:36,439
malicious if you have a sample<font color="#E5E5E5"> and you</font>

443
00:17:34,640 --> 00:17:38,809
are working<font color="#CCCCCC"> in something like detection</font>

444
00:17:36,440 --> 00:17:40,850
response<font color="#CCCCCC"> you may get</font><font color="#E5E5E5"> something you have</font>

445
00:17:38,809 --> 00:17:43,100
no<font color="#E5E5E5"> idea if it's good</font><font color="#CCCCCC"> or bad</font><font color="#E5E5E5"> or what it's</font>

446
00:17:40,850 --> 00:17:44,840
doing<font color="#E5E5E5"> maybe a customer has just said</font>

447
00:17:43,100 --> 00:17:46,490
that<font color="#CCCCCC"> oh this is this is bad we think</font>

448
00:17:44,840 --> 00:17:49,699
it's doing something<font color="#E5E5E5"> or maybe you have</font>

449
00:17:46,490 --> 00:17:51,679
no idea at all<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> maybe in order to</font>

450
00:17:49,700 --> 00:17:52,070
get an idea<font color="#CCCCCC"> of</font><font color="#E5E5E5"> what you what you're</font>

451
00:17:51,679 --> 00:17:54,380
seeing

452
00:17:52,070 --> 00:17:57,799
you'd pop it<font color="#CCCCCC"> into a</font><font color="#E5E5E5"> sandbox or open it</font>

453
00:17:54,380 --> 00:17:59,360
<font color="#E5E5E5">on isolated system and see if you can</font>

454
00:17:57,799 --> 00:18:00,860
get any network traffic if it's malware

455
00:17:59,360 --> 00:18:03,080
it probably has some kind of network

456
00:18:00,860 --> 00:18:05,799
<font color="#E5E5E5">functionality</font><font color="#CCCCCC"> at least for the type that</font>

457
00:18:03,080 --> 00:18:08,389
<font color="#CCCCCC">I'm concerned with which is mal Docs</font><font color="#E5E5E5"> and</font>

458
00:18:05,799 --> 00:18:10,760
so in this<font color="#CCCCCC"> case I threw this sample in a</font>

459
00:18:08,390 --> 00:18:12,950
sandbox<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it made an outbound</font><font color="#E5E5E5"> HTTP</font>

460
00:18:10,760 --> 00:18:16,879
request<font color="#E5E5E5"> in this case for something</font>

461
00:18:12,950 --> 00:18:18,919
called template<font color="#E5E5E5"> doc and if you further</font>

462
00:18:16,880 --> 00:18:21,559
inspect this requests it maybe looks a

463
00:18:18,919 --> 00:18:23,929
bit<font color="#E5E5E5"> normal template doc isn't it like</font>

464
00:18:21,559 --> 00:18:25,639
particularly alarming necessarily<font color="#E5E5E5"> the</font>

465
00:18:23,929 --> 00:18:27,740
headers seem normal but if you take a

466
00:18:25,640 --> 00:18:29,750
look at<font color="#E5E5E5"> this host we have this long</font>

467
00:18:27,740 --> 00:18:32,419
randomized<font color="#E5E5E5"> hostname and that's probably</font>

468
00:18:29,750 --> 00:18:35,540
<font color="#CCCCCC">not anything normal</font><font color="#E5E5E5"> normal people don't</font>

469
00:18:32,419 --> 00:18:36,440
<font color="#E5E5E5">really go out</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> register domains that</font>

470
00:18:35,540 --> 00:18:38,210
look like this

471
00:18:36,440 --> 00:18:39,620
so that's kind of sketchy and indicates

472
00:18:38,210 --> 00:18:42,260
to me that<font color="#E5E5E5"> yeah this is probably</font><font color="#CCCCCC"> bad</font>

473
00:18:39,620 --> 00:18:43,729
<font color="#CCCCCC">traffic even though we got a 403 and</font><font color="#E5E5E5"> I</font>

474
00:18:42,260 --> 00:18:47,179
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> actually have the file that this</font>

475
00:18:43,730 --> 00:18:49,340
is requesting there were of course<font color="#CCCCCC"> other</font>

476
00:18:47,179 --> 00:18:51,260
files<font color="#E5E5E5"> that did grab actual malware so</font>

477
00:18:49,340 --> 00:18:54,230
that's<font color="#CCCCCC"> also a pretty</font><font color="#E5E5E5"> good indication</font>

478
00:18:51,260 --> 00:18:57,110
<font color="#CCCCCC">that this</font><font color="#E5E5E5"> is bad but 403 with a sketchy</font>

479
00:18:54,230 --> 00:18:59,750
domain is<font color="#E5E5E5"> also a pretty good sign so now</font>

480
00:18:57,110 --> 00:19:00,889
I know<font color="#E5E5E5"> that this file</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> malicious and I</font>

481
00:18:59,750 --> 00:19:02,840
am gonna<font color="#E5E5E5"> go</font><font color="#CCCCCC"> ahead</font><font color="#E5E5E5"> and start hunting</font>

482
00:19:00,890 --> 00:19:04,970
<font color="#E5E5E5">through this because I'm an analyst and</font>

483
00:19:02,840 --> 00:19:07,459
<font color="#E5E5E5">it's my job</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> try</font><font color="#CCCCCC"> and write a rule to</font>

484
00:19:04,970 --> 00:19:10,280
detect this<font color="#CCCCCC"> so I go through this RTF and</font>

485
00:19:07,460 --> 00:19:12,890
<font color="#E5E5E5">this is a very small chunk</font><font color="#CCCCCC"> at some point</font>

486
00:19:10,280 --> 00:19:14,960
there is<font color="#E5E5E5"> an embedded</font><font color="#CCCCCC"> holy</font><font color="#E5E5E5"> like I</font>

487
00:19:12,890 --> 00:19:16,850
mentioned before<font color="#E5E5E5"> and then if we</font><font color="#CCCCCC"> look at</font>

488
00:19:14,960 --> 00:19:19,400
the contents of this<font color="#CCCCCC"> Oly it's kind of a</font>

489
00:19:16,850 --> 00:19:21,620
bit boring to<font color="#E5E5E5"> look at but like I</font>

490
00:19:19,400 --> 00:19:23,630
mentioned<font color="#CCCCCC"> previously</font><font color="#E5E5E5"> we end up seeing</font>

491
00:19:21,620 --> 00:19:26,330
and it's<font color="#E5E5E5"> highlighted here on the slide</font><font color="#CCCCCC"> I</font>

492
00:19:23,630 --> 00:19:29,059
<font color="#CCCCCC">don't know if I have a laser</font><font color="#E5E5E5"> here maybe</font>

493
00:19:26,330 --> 00:19:31,850
right here<font color="#E5E5E5"> that string that I threw up</font>

494
00:19:29,059 --> 00:19:35,270
earlier is now in the file<font color="#E5E5E5"> so there you</font>

495
00:19:31,850 --> 00:19:40,169
go that seems kind of unusual<font color="#E5E5E5"> and if you</font>

496
00:19:35,270 --> 00:19:43,080
take a look<font color="#CCCCCC"> just after we see</font>

497
00:19:40,170 --> 00:19:44,790
<font color="#CCCCCC">bites</font><font color="#E5E5E5"> and then we see another set of</font>

498
00:19:43,080 --> 00:19:47,730
<font color="#CCCCCC">bites</font><font color="#E5E5E5"> and because I look at this all the</font>

499
00:19:44,790 --> 00:19:49,920
<font color="#E5E5E5">time</font><font color="#CCCCCC"> I see some ASCII readable</font>

500
00:19:47,730 --> 00:19:52,170
characters<font color="#E5E5E5"> in here not that</font><font color="#CCCCCC"> I have the</font>

501
00:19:49,920 --> 00:19:53,940
<font color="#E5E5E5">hex table memorize at the top my</font><font color="#CCCCCC"> head</font>

502
00:19:52,170 --> 00:19:55,890
but in<font color="#E5E5E5"> that case I know those bytes</font><font color="#CCCCCC"> and</font>

503
00:19:53,940 --> 00:20:00,200
they're followed by<font color="#CCCCCC"> nulls</font><font color="#E5E5E5"> which makes me</font>

504
00:19:55,890 --> 00:20:03,660
think<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this is a Unicode string and</font>

505
00:20:00,200 --> 00:20:07,400
if<font color="#E5E5E5"> you translate this to actual readable</font>

506
00:20:03,660 --> 00:20:10,230
bytes<font color="#CCCCCC"> all we see this this requests URL</font>

507
00:20:07,400 --> 00:20:11,940
which is<font color="#E5E5E5"> what we saw in our</font><font color="#CCCCCC"> pcap</font><font color="#E5E5E5"> earlier</font>

508
00:20:10,230 --> 00:20:13,740
so<font color="#CCCCCC"> now we saw the</font><font color="#E5E5E5"> request for template</font>

509
00:20:11,940 --> 00:20:15,600
<font color="#E5E5E5">doc and the P cap we see it within the</font>

510
00:20:13,740 --> 00:20:16,950
file<font color="#E5E5E5"> so that's</font><font color="#CCCCCC"> a good indication to me</font>

511
00:20:15,600 --> 00:20:19,679
<font color="#E5E5E5">that</font><font color="#CCCCCC"> yes this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> what is actually</font>

512
00:20:16,950 --> 00:20:23,160
<font color="#CCCCCC">causing this bad traffic</font><font color="#E5E5E5"> which indicates</font>

513
00:20:19,680 --> 00:20:26,820
that<font color="#E5E5E5"> we found our exploit so now</font><font color="#CCCCCC"> our</font>

514
00:20:23,160 --> 00:20:29,160
<font color="#CCCCCC">goal is to detect this and our strategy</font>

515
00:20:26,820 --> 00:20:31,560
here<font color="#CCCCCC"> is</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to be to identify an RTF</font>

516
00:20:29,160 --> 00:20:33,480
document we<font color="#E5E5E5"> want to identify</font><font color="#CCCCCC"> abuse of</font>

517
00:20:31,560 --> 00:20:35,730
that<font color="#E5E5E5"> URL moniker and we also want to</font>

518
00:20:33,480 --> 00:20:41,700
<font color="#CCCCCC">identify a potentially malicious</font><font color="#E5E5E5"> HTTP</font>

519
00:20:35,730 --> 00:20:43,410
request so this is<font color="#CCCCCC"> a Talos rule</font><font color="#E5E5E5"> for for</font>

520
00:20:41,700 --> 00:20:45,750
<font color="#E5E5E5">this</font><font color="#CCCCCC"> CVE or one of them because there</font>

521
00:20:43,410 --> 00:20:47,430
<font color="#CCCCCC">are quite a few</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> gonna highlight</font>

522
00:20:45,750 --> 00:20:49,110
for you the<font color="#CCCCCC"> chunk that actually matters</font>

523
00:20:47,430 --> 00:20:51,090
because like I<font color="#CCCCCC"> said</font><font color="#E5E5E5"> earlier we</font><font color="#CCCCCC"> have a</font>

524
00:20:49,110 --> 00:20:52,620
header we have a rule message<font color="#E5E5E5"> there's</font>

525
00:20:51,090 --> 00:20:55,409
some other stuff<font color="#E5E5E5"> down here that isn't</font>

526
00:20:52,620 --> 00:20:57,300
<font color="#E5E5E5">necessarily important to the rule but it</font>

527
00:20:55,410 --> 00:21:00,750
does matter<font color="#CCCCCC"> for the sake of snort being</font>

528
00:20:57,300 --> 00:21:02,310
able to<font color="#E5E5E5"> organize the rules</font><font color="#CCCCCC"> and also</font><font color="#E5E5E5"> just</font>

529
00:21:00,750 --> 00:21:05,600
<font color="#E5E5E5">for customers reading this to be able to</font>

530
00:21:02,310 --> 00:21:08,070
<font color="#E5E5E5">see that this is associated with us CDE</font>

531
00:21:05,600 --> 00:21:10,590
<font color="#E5E5E5">so if we break down the chunk of the</font>

532
00:21:08,070 --> 00:21:13,230
detection<font color="#E5E5E5"> that actually matters</font><font color="#CCCCCC"> we first</font>

533
00:21:10,590 --> 00:21:15,949
see that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> only want to inspect RTF</font>

534
00:21:13,230 --> 00:21:19,470
files because we have our flow bits

535
00:21:15,950 --> 00:21:21,390
specified here and you'll always see

536
00:21:19,470 --> 00:21:23,970
flow bits being used with either is set

537
00:21:21,390 --> 00:21:25,680
or set<font color="#E5E5E5"> depending on if it's of a rule</font>

538
00:21:23,970 --> 00:21:27,510
that's<font color="#CCCCCC"> going to identify a file type</font><font color="#E5E5E5"> or</font>

539
00:21:25,680 --> 00:21:29,280
some other type of traffic<font color="#CCCCCC"> or if it's a</font>

540
00:21:27,510 --> 00:21:31,770
rule that's using some other<font color="#E5E5E5"> flow bits</font>

541
00:21:29,280 --> 00:21:33,450
rule<font color="#E5E5E5"> so in this case we're</font><font color="#CCCCCC"> using some</font>

542
00:21:31,770 --> 00:21:36,560
other flow bits rule to identify<font color="#E5E5E5"> that we</font>

543
00:21:33,450 --> 00:21:39,330
are<font color="#E5E5E5"> looking at in RTF we then have our</font>

544
00:21:36,560 --> 00:21:41,270
file data buffer because we only want<font color="#CCCCCC"> to</font>

545
00:21:39,330 --> 00:21:44,189
look at<font color="#E5E5E5"> things within the file itself</font>

546
00:21:41,270 --> 00:21:48,330
and then we look for<font color="#CCCCCC"> a</font><font color="#E5E5E5"> ul URL moniker</font>

547
00:21:44,190 --> 00:21:50,400
<font color="#E5E5E5">and finally relative to that URL moniker</font>

548
00:21:48,330 --> 00:21:52,050
within the next<font color="#E5E5E5"> 50 bytes of</font><font color="#CCCCCC"> the URL</font>

549
00:21:50,400 --> 00:21:54,130
moniker we want to look<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> Unicode</font>

550
00:21:52,050 --> 00:21:56,470
string HTTP colon slash

551
00:21:54,130 --> 00:21:58,060
and why you might<font color="#CCCCCC"> ask are we including</font>

552
00:21:56,470 --> 00:22:00,070
<font color="#CCCCCC">this if we just want to</font><font color="#E5E5E5"> look for abuse</font>

553
00:21:58,060 --> 00:22:01,899
<font color="#E5E5E5">of this moniker</font><font color="#CCCCCC"> because unfortunately</font>

554
00:22:00,070 --> 00:22:04,870
<font color="#E5E5E5">there</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> people out there that</font><font color="#CCCCCC"> are</font>

555
00:22:01,900 --> 00:22:07,630
<font color="#CCCCCC">using this for non malicious traffic and</font>

556
00:22:04,870 --> 00:22:09,610
this seems strange<font color="#CCCCCC"> to me that</font><font color="#E5E5E5"> you would</font>

557
00:22:07,630 --> 00:22:10,930
need<font color="#E5E5E5"> to do so but people use things in</font>

558
00:22:09,610 --> 00:22:12,429
strange ways<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the time and so we</font>

559
00:22:10,930 --> 00:22:15,160
<font color="#E5E5E5">unfortunately can't block their files</font>

560
00:22:12,430 --> 00:22:17,140
<font color="#E5E5E5">and we need to add this in to make sure</font>

561
00:22:15,160 --> 00:22:19,990
that we're<font color="#CCCCCC"> not falsely alerting on</font>

562
00:22:17,140 --> 00:22:21,430
things<font color="#E5E5E5"> that aren't malicious you may</font>

563
00:22:19,990 --> 00:22:22,780
also know that<font color="#E5E5E5"> even though I just told</font>

564
00:22:21,430 --> 00:22:24,940
you it's really important<font color="#E5E5E5"> we're not</font>

565
00:22:22,780 --> 00:22:27,670
specifying a fast pattern<font color="#E5E5E5"> and this is</font>

566
00:22:24,940 --> 00:22:30,430
because if<font color="#E5E5E5"> we don't specify snort will</font>

567
00:22:27,670 --> 00:22:32,710
<font color="#E5E5E5">actually decide that the first most the</font>

568
00:22:30,430 --> 00:22:35,920
<font color="#E5E5E5">first longest content match in</font><font color="#CCCCCC"> our rule</font>

569
00:22:32,710 --> 00:22:38,170
<font color="#E5E5E5">will become the fast pattern snort</font>

570
00:22:35,920 --> 00:22:41,710
<font color="#E5E5E5">defaults to fast</font><font color="#CCCCCC"> patter not fast pattern</font>

571
00:22:38,170 --> 00:22:44,290
only<font color="#E5E5E5"> which means that we would evaluate</font>

572
00:22:41,710 --> 00:22:45,790
this as a fast pattern and then we would

573
00:22:44,290 --> 00:22:48,040
<font color="#CCCCCC">re-enter the rule and</font><font color="#E5E5E5"> we would evaluate</font>

574
00:22:45,790 --> 00:22:50,620
a second time<font color="#E5E5E5"> and be</font><font color="#CCCCCC"> able to use a</font>

575
00:22:48,040 --> 00:22:56,830
relative<font color="#E5E5E5"> content match after</font><font color="#CCCCCC"> this match</font>

576
00:22:50,620 --> 00:22:58,810
<font color="#CCCCCC">for the moniker now I'm</font><font color="#E5E5E5"> going to talk to</font>

577
00:22:56,830 --> 00:23:00,159
you about<font color="#CCCCCC"> dde code execution</font><font color="#E5E5E5"> which</font>

578
00:22:58,810 --> 00:23:02,770
doesn't actually<font color="#E5E5E5"> have a</font><font color="#CCCCCC"> CVE</font>

579
00:23:00,160 --> 00:23:05,520
<font color="#E5E5E5">you may have heard about this because</font>

580
00:23:02,770 --> 00:23:07,900
<font color="#E5E5E5">this keeps coming</font><font color="#CCCCCC"> up so this is a way to</font>

581
00:23:05,520 --> 00:23:10,690
execute code in Microsoft<font color="#CCCCCC"> Office</font>

582
00:23:07,900 --> 00:23:12,640
products<font color="#CCCCCC"> without using macros this</font>

583
00:23:10,690 --> 00:23:14,260
always appears at least<font color="#CCCCCC"> in the cases I'm</font>

584
00:23:12,640 --> 00:23:16,450
<font color="#CCCCCC">going to talk to you about in a doc or</font>

585
00:23:14,260 --> 00:23:18,250
docx file and<font color="#E5E5E5"> this actually</font><font color="#CCCCCC"> just</font>

586
00:23:16,450 --> 00:23:19,990
<font color="#CCCCCC">recently came up again because</font><font color="#E5E5E5"> we have a</font>

587
00:23:18,250 --> 00:23:22,240
blog post<font color="#CCCCCC"> with</font><font color="#E5E5E5"> some research that poll</font>

588
00:23:19,990 --> 00:23:24,160
in the<font color="#E5E5E5"> audience said where this was used</font>

589
00:23:22,240 --> 00:23:28,300
as a dropper<font color="#E5E5E5"> which is the way that we</font>

590
00:23:24,160 --> 00:23:30,310
usually<font color="#E5E5E5"> see it so what makes this</font>

591
00:23:28,300 --> 00:23:32,169
malicious<font color="#CCCCCC"> this</font><font color="#E5E5E5"> actually gets you</font>

592
00:23:30,310 --> 00:23:33,100
arbitrary code execution which is kind

593
00:23:32,170 --> 00:23:34,870
of cool

594
00:23:33,100 --> 00:23:39,669
and we're also<font color="#E5E5E5"> doing it without macros</font>

595
00:23:34,870 --> 00:23:42,300
<font color="#CCCCCC">so there is no this</font><font color="#E5E5E5"> is kind of novel and</font>

596
00:23:39,670 --> 00:23:46,150
that<font color="#E5E5E5"> it's very different from the usual</font>

597
00:23:42,300 --> 00:23:48,250
<font color="#E5E5E5">and if we were to pop open a malicious</font>

598
00:23:46,150 --> 00:23:49,660
file<font color="#E5E5E5"> we would actually see this plain</font>

599
00:23:48,250 --> 00:23:52,510
text the way it is here

600
00:23:49,660 --> 00:23:55,420
so this is one example of a command<font color="#CCCCCC"> that</font>

601
00:23:52,510 --> 00:23:59,890
<font color="#CCCCCC">was</font><font color="#E5E5E5"> in an actual malicious sample that</font>

602
00:23:55,420 --> 00:24:02,680
we saw so in this case it's pretty

603
00:23:59,890 --> 00:24:03,149
obvious<font color="#CCCCCC"> to</font><font color="#E5E5E5"> see why this</font><font color="#CCCCCC"> is bad we're</font>

604
00:24:02,680 --> 00:24:05,669
using

605
00:24:03,149 --> 00:24:07,139
this<font color="#E5E5E5"> to open PowerShell and</font><font color="#CCCCCC"> execute</font><font color="#E5E5E5"> a</font>

606
00:24:05,669 --> 00:24:08,580
PowerShell<font color="#CCCCCC"> commands something you should</font>

607
00:24:07,139 --> 00:24:09,629
probably<font color="#E5E5E5"> not ever be doing with some</font>

608
00:24:08,580 --> 00:24:12,330
random file that you just downloaded

609
00:24:09,629 --> 00:24:16,769
from the internet<font color="#E5E5E5"> and we're using it</font><font color="#CCCCCC"> to</font>

610
00:24:12,330 --> 00:24:18,269
go grab<font color="#E5E5E5"> some Citibank</font><font color="#CCCCCC"> Exe file from some</font>

611
00:24:16,769 --> 00:24:19,710
kind<font color="#E5E5E5"> of sketchy looking domain so</font>

612
00:24:18,269 --> 00:24:23,729
probably a good<font color="#E5E5E5"> indicator that we're</font>

613
00:24:19,710 --> 00:24:25,979
using this<font color="#CCCCCC"> to go grab our if we were to</font>

614
00:24:23,729 --> 00:24:29,999
pop up in a<font color="#CCCCCC"> pcap of the file</font><font color="#E5E5E5"> we would</font>

615
00:24:25,979 --> 00:24:33,089
see another<font color="#E5E5E5"> command like this we again</font>

616
00:24:29,999 --> 00:24:34,919
are seeing a PowerShell being used to go

617
00:24:33,089 --> 00:24:38,519
grab a file<font color="#E5E5E5"> from some kind of sketchy</font>

618
00:24:34,919 --> 00:24:41,070
looking domain<font color="#CCCCCC"> and if you look prior</font><font color="#E5E5E5"> to</font>

619
00:24:38,519 --> 00:24:42,869
<font color="#E5E5E5">DDT</font><font color="#CCCCCC"> auto this little dot is indicating</font>

620
00:24:41,070 --> 00:24:46,080
to<font color="#CCCCCC"> us that</font><font color="#E5E5E5"> that's a non readable byte</font>

621
00:24:42,869 --> 00:24:50,158
which is important later<font color="#E5E5E5"> on when</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> look</font>

622
00:24:46,080 --> 00:24:51,689
at our rule<font color="#CCCCCC"> the</font><font color="#E5E5E5"> byte is hex 13 which is</font>

623
00:24:50,159 --> 00:24:56,070
a carriage return which is<font color="#E5E5E5"> why we don't</font>

624
00:24:51,690 --> 00:24:58,259
<font color="#CCCCCC">see it in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> peek app so now that</font><font color="#E5E5E5"> we've</font>

625
00:24:56,070 --> 00:25:00,749
seen<font color="#E5E5E5"> this exploited</font><font color="#CCCCCC"> in a doc file</font><font color="#E5E5E5"> one of</font>

626
00:24:58,259 --> 00:25:02,669
<font color="#CCCCCC">our goals is</font><font color="#E5E5E5"> and our rule</font><font color="#CCCCCC"> is going to</font><font color="#E5E5E5"> be</font>

627
00:25:00,749 --> 00:25:05,190
to<font color="#CCCCCC"> identify again specifically doc files</font>

628
00:25:02,669 --> 00:25:06,629
that are you abusing<font color="#CCCCCC"> this</font><font color="#E5E5E5"> I mentioned it</font>

629
00:25:05,190 --> 00:25:09,599
briefly<font color="#CCCCCC"> earlier and all the examples</font>

630
00:25:06,629 --> 00:25:10,978
<font color="#E5E5E5">I've shown have used</font><font color="#CCCCCC"> dde</font><font color="#E5E5E5"> Auto but it's</font>

631
00:25:09,599 --> 00:25:13,799
also possible<font color="#E5E5E5"> to use something called</font>

632
00:25:10,979 --> 00:25:15,359
<font color="#CCCCCC">dde which the only difference there is</font>

633
00:25:13,799 --> 00:25:16,979
that<font color="#CCCCCC"> dde</font><font color="#E5E5E5"> I believe asks for user</font>

634
00:25:15,359 --> 00:25:21,869
permission prior to executing the

635
00:25:16,979 --> 00:25:24,599
command so this is a Talos rule for this

636
00:25:21,869 --> 00:25:26,609
exploit and again this is<font color="#E5E5E5"> kind of long</font>

637
00:25:24,599 --> 00:25:28,559
<font color="#CCCCCC">but the the chunk that actually matters</font>

638
00:25:26,609 --> 00:25:30,389
to us is highlighted<font color="#CCCCCC"> here in blue</font><font color="#E5E5E5"> and</font>

639
00:25:28,559 --> 00:25:33,359
I'll go ahead<font color="#E5E5E5"> and break it</font><font color="#CCCCCC"> down in the</font>

640
00:25:30,389 --> 00:25:37,799
<font color="#CCCCCC">next slide so again we're using flow</font>

641
00:25:33,359 --> 00:25:39,779
bits you inspect just our doc files we

642
00:25:37,799 --> 00:25:41,129
only want<font color="#E5E5E5"> to inspect the file data</font>

643
00:25:39,779 --> 00:25:44,940
buffer because we only care<font color="#CCCCCC"> about the</font>

644
00:25:41,129 --> 00:25:47,459
contents<font color="#E5E5E5"> of the file</font><font color="#CCCCCC"> we then want</font><font color="#E5E5E5"> to</font>

645
00:25:44,940 --> 00:25:49,289
identify our exploit and we want

646
00:25:47,460 --> 00:25:51,599
something<font color="#CCCCCC"> that makes for a</font><font color="#E5E5E5"> decent fast</font>

647
00:25:49,289 --> 00:25:54,419
pattern<font color="#E5E5E5"> so we're gonna use that hex</font><font color="#CCCCCC"> 13</font>

648
00:25:51,599 --> 00:25:58,439
followed by<font color="#CCCCCC"> dde and</font><font color="#E5E5E5"> I'll explain why</font>

649
00:25:54,419 --> 00:26:00,839
we've chosen<font color="#E5E5E5"> DD in just a minute we then</font>

650
00:25:58,440 --> 00:26:04,289
<font color="#E5E5E5">want to look for exe appearing within</font>

651
00:26:00,839 --> 00:26:06,839
<font color="#E5E5E5">250 bytes and the no case makes this</font>

652
00:26:04,289 --> 00:26:08,940
case insensitive<font color="#CCCCCC"> and why are</font><font color="#E5E5E5"> we adding</font>

653
00:26:06,839 --> 00:26:10,678
this content match when maybe it would

654
00:26:08,940 --> 00:26:13,700
be<font color="#CCCCCC"> possible to use</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> in a way that</font>

655
00:26:10,679 --> 00:26:16,070
we're not calling<font color="#E5E5E5"> PowerShell because</font>

656
00:26:13,700 --> 00:26:18,889
fortunately again this is used in non

657
00:26:16,070 --> 00:26:20,928
malicious ways<font color="#CCCCCC"> not for calling</font>

658
00:26:18,889 --> 00:26:23,689
<font color="#CCCCCC">PowerShell but we did find files when we</font>

659
00:26:20,929 --> 00:26:25,250
tested<font color="#E5E5E5"> this role originally that we're</font>

660
00:26:23,690 --> 00:26:27,289
using this<font color="#CCCCCC"> in a way that we probably</font>

661
00:26:25,250 --> 00:26:29,480
shouldn't<font color="#E5E5E5"> be alerting on so we have to</font>

662
00:26:27,289 --> 00:26:33,590
<font color="#CCCCCC">add the second content match in order to</font>

663
00:26:29,480 --> 00:26:36,260
limit our false positives<font color="#CCCCCC"> if you look at</font>

664
00:26:33,590 --> 00:26:39,740
the first content match this<font color="#CCCCCC"> hex</font><font color="#E5E5E5"> 13</font><font color="#CCCCCC"> dde</font>

665
00:26:36,260 --> 00:26:41,990
here we have opted to go with<font color="#CCCCCC"> ddee</font>

666
00:26:39,740 --> 00:26:43,639
because if we we could write two rules

667
00:26:41,990 --> 00:26:46,130
<font color="#CCCCCC">we could</font><font color="#E5E5E5"> have one looking for DDE and</font>

668
00:26:43,639 --> 00:26:48,529
DDD<font color="#CCCCCC"> order but why would I bother to have</font>

669
00:26:46,130 --> 00:26:50,870
<font color="#E5E5E5">two rules if I could just have one it's</font>

670
00:26:48,529 --> 00:26:53,000
we want to have as few<font color="#E5E5E5"> rules as possible</font>

671
00:26:50,870 --> 00:26:55,100
in the rule set because it's<font color="#E5E5E5"> expensive</font>

672
00:26:53,000 --> 00:26:58,010
computationally to evaluate more rules

673
00:26:55,100 --> 00:27:03,740
<font color="#E5E5E5">so anytime</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can condense is is</font>

674
00:26:58,010 --> 00:27:06,408
desirable we're also able<font color="#CCCCCC"> to exploit</font>

675
00:27:03,740 --> 00:27:10,880
this<font color="#E5E5E5"> in a docx file so what</font><font color="#CCCCCC"> I have here</font>

676
00:27:06,409 --> 00:27:13,909
is a chunk of the just<font color="#E5E5E5"> the malicious XML</font>

677
00:27:10,880 --> 00:27:16,639
file unzipped from the zip archive<font color="#E5E5E5"> and</font>

678
00:27:13,909 --> 00:27:17,899
<font color="#E5E5E5">if you read through this</font><font color="#CCCCCC"> you see a bunch</font>

679
00:27:16,639 --> 00:27:19,490
of crap that<font color="#CCCCCC"> we don't really care about</font>

680
00:27:17,899 --> 00:27:21,889
<font color="#E5E5E5">this appears</font><font color="#CCCCCC"> and a</font><font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> these files</font>

681
00:27:19,490 --> 00:27:24,289
<font color="#E5E5E5">and then finally we see an interesting</font>

682
00:27:21,889 --> 00:27:26,479
chunk which is this instruction<font color="#CCCCCC"> text tag</font>

683
00:27:24,289 --> 00:27:28,100
followed by DD<font color="#CCCCCC"> Auto and if we</font><font color="#E5E5E5"> keep</font>

684
00:27:26,480 --> 00:27:30,769
reading<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is actually a file</font><font color="#CCCCCC"> I've</font>

685
00:27:28,100 --> 00:27:32,418
neutered for my own testing but we<font color="#CCCCCC"> see</font>

686
00:27:30,769 --> 00:27:36,049
again this<font color="#CCCCCC"> PowerShell command being</font>

687
00:27:32,419 --> 00:27:37,399
executed<font color="#E5E5E5"> and then we have a URI going to</font>

688
00:27:36,049 --> 00:27:40,399
some<font color="#E5E5E5"> kind of executable that's being</font>

689
00:27:37,399 --> 00:27:41,899
grabbed from the<font color="#CCCCCC"> internet so this</font><font color="#E5E5E5"> looks</font>

690
00:27:40,399 --> 00:27:47,059
pretty<font color="#E5E5E5"> similar</font><font color="#CCCCCC"> to the way this is</font><font color="#E5E5E5"> being</font>

691
00:27:41,899 --> 00:27:50,689
exploited<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> doc file as well so now</font>

692
00:27:47,059 --> 00:27:53,779
we want to detect<font color="#E5E5E5"> just</font><font color="#CCCCCC"> i just xml files</font>

693
00:27:50,690 --> 00:27:56,659
from a decomp<font color="#E5E5E5"> rekt</font><font color="#CCCCCC"> decompress docx file</font>

694
00:27:53,779 --> 00:28:00,529
that<font color="#E5E5E5"> abuse these fields similarly to the</font>

695
00:27:56,659 --> 00:28:03,950
way<font color="#E5E5E5"> they're abused in doc files and so</font>

696
00:28:00,529 --> 00:28:05,419
the again the content of<font color="#E5E5E5"> this</font><font color="#CCCCCC"> role that</font>

697
00:28:03,950 --> 00:28:07,210
<font color="#E5E5E5">we really care about is highlighted in</font>

698
00:28:05,419 --> 00:28:11,149
blue

699
00:28:07,210 --> 00:28:14,419
and we're using<font color="#E5E5E5"> flow bits to identify</font>

700
00:28:11,149 --> 00:28:16,580
just an XML file we then specify we want

701
00:28:14,419 --> 00:28:19,010
to only<font color="#E5E5E5"> look and file data and then</font>

702
00:28:16,580 --> 00:28:21,470
we use our instruction<font color="#E5E5E5"> text tag which</font>

703
00:28:19,010 --> 00:28:23,690
actually is required for this exploit

704
00:28:21,470 --> 00:28:25,159
<font color="#CCCCCC">the reason</font><font color="#E5E5E5"> that I know that</font><font color="#CCCCCC"> this is</font>

705
00:28:23,690 --> 00:28:27,049
<font color="#E5E5E5">required is because I spent a lot of</font>

706
00:28:25,159 --> 00:28:28,820
time<font color="#E5E5E5"> playing with these files getting</font>

707
00:28:27,049 --> 00:28:30,470
<font color="#E5E5E5">rid</font><font color="#CCCCCC"> of things that probably didn't</font>

708
00:28:28,820 --> 00:28:34,700
matter<font color="#E5E5E5"> and seeing if I</font><font color="#CCCCCC"> could still</font><font color="#E5E5E5"> get</font>

709
00:28:30,470 --> 00:28:38,210
it to execute<font color="#E5E5E5"> code we then look for</font><font color="#CCCCCC"> dde</font>

710
00:28:34,700 --> 00:28:40,039
<font color="#E5E5E5">appearing after this tag the reason that</font>

711
00:28:38,210 --> 00:28:42,110
<font color="#E5E5E5">I have</font><font color="#CCCCCC"> distant zero specified here is</font>

712
00:28:40,039 --> 00:28:44,330
because<font color="#E5E5E5"> it</font><font color="#CCCCCC"> just indicates</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> sort</font><font color="#E5E5E5"> that</font>

713
00:28:42,110 --> 00:28:46,399
<font color="#E5E5E5">at the end of this tag we want to start</font>

714
00:28:44,330 --> 00:28:47,750
<font color="#E5E5E5">looking</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> our second content match if</font>

715
00:28:46,399 --> 00:28:50,029
you just want to<font color="#E5E5E5"> look for things</font>

716
00:28:47,750 --> 00:28:51,440
<font color="#E5E5E5">appearing after each other or in a</font>

717
00:28:50,029 --> 00:28:55,250
specific order you'll probably end up

718
00:28:51,440 --> 00:28:56,570
using<font color="#E5E5E5"> distance</font><font color="#CCCCCC"> zero quite a bit and then</font>

719
00:28:55,250 --> 00:28:57,769
something that<font color="#E5E5E5"> we haven't seen before is</font>

720
00:28:56,570 --> 00:28:59,899
the use<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this piece</font><font color="#CCCCCC"> Erie</font>

721
00:28:57,769 --> 00:29:02,299
so this enforces that<font color="#E5E5E5"> these two matches</font>

722
00:28:59,899 --> 00:29:04,039
are within the same<font color="#E5E5E5"> XML tag and the way</font>

723
00:29:02,299 --> 00:29:05,990
we do that is<font color="#E5E5E5"> by looking</font><font color="#CCCCCC"> for our</font>

724
00:29:04,039 --> 00:29:07,580
malicious tag and then we check that<font color="#CCCCCC"> we</font>

725
00:29:05,990 --> 00:29:12,799
don't see the<font color="#E5E5E5"> opening of</font><font color="#CCCCCC"> another tag</font>

726
00:29:07,580 --> 00:29:15,199
<font color="#E5E5E5">prior</font><font color="#CCCCCC"> to DD e appearing so this is a</font>

727
00:29:12,799 --> 00:29:18,139
real<font color="#E5E5E5"> quick run-through of the way that</font>

728
00:29:15,200 --> 00:29:19,970
<font color="#E5E5E5">we use snort to detect these malicious</font>

729
00:29:18,139 --> 00:29:23,199
<font color="#E5E5E5">Oh Alize these come up quite a bit</font>

730
00:29:19,970 --> 00:29:26,510
because they tend to be<font color="#CCCCCC"> used as droppers</font>

731
00:29:23,200 --> 00:29:30,080
<font color="#E5E5E5">it becomes increasingly expensive for</font>

732
00:29:26,510 --> 00:29:32,299
adversaries to write exploits<font color="#E5E5E5"> or try and</font>

733
00:29:30,080 --> 00:29:34,490
<font color="#E5E5E5">gain code execution on your machine by</font>

734
00:29:32,299 --> 00:29:35,240
chaining<font color="#E5E5E5"> together multiple</font><font color="#CCCCCC"> CVS or</font>

735
00:29:34,490 --> 00:29:38,929
anything<font color="#E5E5E5"> like that</font>

736
00:29:35,240 --> 00:29:40,490
so this has become<font color="#E5E5E5"> a trend that</font><font color="#CCCCCC"> we're</font>

737
00:29:38,929 --> 00:29:43,299
using things like phishing attacks to

738
00:29:40,490 --> 00:29:45,740
get a user to download<font color="#E5E5E5"> a file run it</font>

739
00:29:43,299 --> 00:29:48,200
<font color="#E5E5E5">maybe click that box that says you want</font>

740
00:29:45,740 --> 00:29:50,090
<font color="#E5E5E5">to enable macros in this case you don't</font>

741
00:29:48,200 --> 00:29:53,720
<font color="#CCCCCC">have</font><font color="#E5E5E5"> to do that for either of the the</font>

742
00:29:50,090 --> 00:29:55,730
<font color="#E5E5E5">CVS I've mentioned</font><font color="#CCCCCC"> but as we see</font><font color="#E5E5E5"> more</font>

743
00:29:53,720 --> 00:29:57,860
and<font color="#CCCCCC"> more user based attacks this becomes</font>

744
00:29:55,730 --> 00:30:00,320
more important<font color="#E5E5E5"> for us to be able</font><font color="#CCCCCC"> to</font>

745
00:29:57,860 --> 00:30:01,760
detect these things and so it's kind of

746
00:30:00,320 --> 00:30:04,700
cool<font color="#E5E5E5"> at least</font><font color="#CCCCCC"> in my opinion that we're</font>

747
00:30:01,760 --> 00:30:06,860
able<font color="#E5E5E5"> to use a network IDs in order to</font>

748
00:30:04,700 --> 00:30:10,039
<font color="#E5E5E5">detect things like that RTS and</font><font color="#CCCCCC"> Doc</font>

749
00:30:06,860 --> 00:30:11,959
files<font color="#CCCCCC"> I hope that you've maybe come with</font>

750
00:30:10,039 --> 00:30:15,169
some kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> understanding of snort that</font>

751
00:30:11,960 --> 00:30:17,269
<font color="#E5E5E5">has been improved a bit on how you can</font>

752
00:30:15,169 --> 00:30:18,980
differentiate just<font color="#CCCCCC"> writing</font><font color="#E5E5E5"> a snort</font><font color="#CCCCCC"> role</font>

753
00:30:17,269 --> 00:30:22,370
versus writing<font color="#E5E5E5"> a good snort</font><font color="#CCCCCC"> role it's</font>

754
00:30:18,980 --> 00:30:23,960
actually useful<font color="#E5E5E5"> and something cool that</font>

755
00:30:22,370 --> 00:30:26,000
I didn't mention<font color="#E5E5E5"> earlier maybe I did</font>

756
00:30:23,960 --> 00:30:27,289
<font color="#CCCCCC">briefly</font><font color="#E5E5E5"> um is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this is actually free</font>

757
00:30:26,000 --> 00:30:29,120
<font color="#CCCCCC">and</font><font color="#E5E5E5"> open source so even if you don't</font>

758
00:30:27,289 --> 00:30:31,309
<font color="#E5E5E5">spend millions of dollars</font><font color="#CCCCCC"> on our</font>

759
00:30:29,120 --> 00:30:33,889
<font color="#E5E5E5">security products you can actually go</font>

760
00:30:31,309 --> 00:30:35,990
grab snort<font color="#CCCCCC"> for your own personal</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> and</font>

761
00:30:33,889 --> 00:30:38,899
<font color="#CCCCCC">we</font><font color="#E5E5E5"> have a free community rule set a lot</font>

762
00:30:35,990 --> 00:30:40,340
of people submit rules to us<font color="#E5E5E5"> someone on</font>

763
00:30:38,899 --> 00:30:41,750
our detection<font color="#E5E5E5"> response team will</font>

764
00:30:40,340 --> 00:30:43,220
<font color="#CCCCCC">evaluate them and</font><font color="#E5E5E5"> clean them</font><font color="#CCCCCC"> up a bit</font>

765
00:30:41,750 --> 00:30:45,409
<font color="#E5E5E5">and then</font><font color="#CCCCCC"> they'll be added to</font><font color="#E5E5E5"> our rule</font>

766
00:30:43,220 --> 00:30:48,830
set which is then also<font color="#CCCCCC"> actually released</font>

767
00:30:45,409 --> 00:30:50,389
to our customers<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you - if you are</font>

768
00:30:48,830 --> 00:30:54,470
submitting<font color="#CCCCCC"> to our community</font><font color="#E5E5E5"> rule set or</font>

769
00:30:50,389 --> 00:30:56,809
helping<font color="#E5E5E5"> to improve the internet a bit so</font>

770
00:30:54,470 --> 00:30:58,309
if you have any questions for me<font color="#E5E5E5"> I'll go</font>

771
00:30:56,809 --> 00:30:59,840
ahead and take<font color="#E5E5E5"> them now otherwise thank</font>

772
00:30:58,309 --> 00:31:01,580
you and you can go ahead<font color="#E5E5E5"> and if you feel</font>

773
00:30:59,840 --> 00:31:05,168
so<font color="#CCCCCC"> inclined and follow me on</font><font color="#E5E5E5"> Twitter or</font>

774
00:31:01,580 --> 00:31:05,168
the<font color="#E5E5E5"> Talos</font>

775
00:31:05,750 --> 00:31:09,750
[Music]

