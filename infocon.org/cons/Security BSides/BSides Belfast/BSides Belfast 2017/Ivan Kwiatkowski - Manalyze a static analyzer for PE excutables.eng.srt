1
00:00:04,600 --> 00:00:09,340
thank you very<font color="#CCCCCC"> much for</font><font color="#E5E5E5"> being here and</font>

2
00:00:06,970 --> 00:00:12,550
coming to see my talk<font color="#CCCCCC"> about a program</font>

3
00:00:09,340 --> 00:00:16,000
<font color="#CCCCCC">that I calm</font><font color="#E5E5E5"> analyzed so it's a static</font>

4
00:00:12,550 --> 00:00:17,920
analyzer<font color="#CCCCCC"> 4p executables so first I'd</font>

5
00:00:16,000 --> 00:00:20,349
<font color="#CCCCCC">like to</font><font color="#E5E5E5"> say a few</font><font color="#CCCCCC"> words about Who I am</font>

6
00:00:17,920 --> 00:00:22,329
<font color="#CCCCCC">so I work for</font><font color="#E5E5E5"> Paris based company called</font>

7
00:00:20,349 --> 00:00:25,149
<font color="#E5E5E5">a CMS</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> national and I'm really not</font>

8
00:00:22,329 --> 00:00:27,160
going<font color="#E5E5E5"> to go on too long</font><font color="#CCCCCC"> about what we do</font>

9
00:00:25,149 --> 00:00:30,130
<font color="#E5E5E5">basically just run up the mail security</font>

10
00:00:27,160 --> 00:00:32,558
stuff services etc<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are two two-man</font>

11
00:00:30,130 --> 00:00:36,129
team I work with<font color="#E5E5E5"> attic</font><font color="#CCCCCC"> doors which you</font>

12
00:00:32,558 --> 00:00:37,660
probably<font color="#E5E5E5"> already follow on Twitter since</font>

13
00:00:36,130 --> 00:00:39,100
we're a very small company<font color="#E5E5E5"> we do get a</font>

14
00:00:37,660 --> 00:00:41,500
lot of<font color="#E5E5E5"> lead weights you work on some</font>

15
00:00:39,100 --> 00:00:44,740
open<font color="#CCCCCC"> source</font><font color="#E5E5E5"> projects and we releases a</font>

16
00:00:41,500 --> 00:00:47,650
lot<font color="#E5E5E5"> of code on github so other projects</font>

17
00:00:44,740 --> 00:00:50,520
that<font color="#CCCCCC"> worked on our apk</font><font color="#E5E5E5"> track which is an</font>

18
00:00:47,650 --> 00:00:53,949
<font color="#E5E5E5">Android app to</font><font color="#CCCCCC"> trap to track your</font>

19
00:00:50,520 --> 00:00:55,150
updates for<font color="#E5E5E5"> Android software for people</font>

20
00:00:53,950 --> 00:00:56,800
who don't<font color="#CCCCCC"> have the Play Store do not</font>

21
00:00:55,150 --> 00:00:57,160
want to use any Google services<font color="#CCCCCC"> like I</font>

22
00:00:56,800 --> 00:00:58,720
do

23
00:00:57,160 --> 00:00:59,919
there is<font color="#E5E5E5"> also maybe something that's</font>

24
00:00:58,720 --> 00:01:01,360
going to be more relevant<font color="#E5E5E5"> to</font><font color="#CCCCCC"> your</font>

25
00:00:59,920 --> 00:01:02,649
interests which is called which is<font color="#CCCCCC"> what</font>

26
00:01:01,360 --> 00:01:05,319
I<font color="#E5E5E5"> call freedom fighting it's a</font>

27
00:01:02,649 --> 00:01:08,470
representative for<font color="#CCCCCC"> pentesting scripts it</font>

28
00:01:05,319 --> 00:01:10,630
contains something like a stealthy lot

29
00:01:08,470 --> 00:01:14,890
cleaner<font color="#E5E5E5"> reverse encrypted Python shell</font>

30
00:01:10,630 --> 00:01:17,440
that<font color="#E5E5E5"> also supports TTY so stuff geared</font>

31
00:01:14,890 --> 00:01:21,340
towards a red teaming apart from<font color="#E5E5E5"> that I</font>

32
00:01:17,440 --> 00:01:23,350
do I do operate<font color="#CCCCCC"> a tour</font><font color="#E5E5E5"> exit node it's</font>

33
00:01:21,340 --> 00:01:24,820
located in France and I've learned

34
00:01:23,350 --> 00:01:27,520
yesterday that<font color="#CCCCCC"> a French exit not</font>

35
00:01:24,820 --> 00:01:28,479
operator has just been not arrested but

36
00:01:27,520 --> 00:01:32,520
<font color="#CCCCCC">she's been questioned by the police</font>

37
00:01:28,479 --> 00:01:34,929
because<font color="#CCCCCC"> he his</font><font color="#E5E5E5"> note had</font><font color="#CCCCCC"> been used to</font>

38
00:01:32,520 --> 00:01:37,360
<font color="#E5E5E5">access some kind of child pornography</font>

39
00:01:34,930 --> 00:01:39,190
<font color="#CCCCCC">case I don't know so this might be my</font>

40
00:01:37,360 --> 00:01:40,799
last talk ever before I go to<font color="#E5E5E5"> jail as</font>

41
00:01:39,190 --> 00:01:43,899
well<font color="#E5E5E5"> hopefully</font><font color="#CCCCCC"> not</font>

42
00:01:40,799 --> 00:01:45,909
and finally<font color="#CCCCCC"> I'm not</font><font color="#E5E5E5"> CISSP which is a</font>

43
00:01:43,900 --> 00:01:47,500
<font color="#E5E5E5">thoroughly</font><font color="#CCCCCC"> or some kind of running joke</font>

44
00:01:45,909 --> 00:01:50,920
on<font color="#E5E5E5"> Twitter so I thought I'd just mention</font>

45
00:01:47,500 --> 00:01:53,590
it so a few<font color="#E5E5E5"> words about the project</font>

46
00:01:50,920 --> 00:01:57,220
origin so manualized stands<font color="#E5E5E5"> for malware</font>

47
00:01:53,590 --> 00:01:58,960
<font color="#E5E5E5">and</font><font color="#CCCCCC"> analyze I learned at later date</font>

48
00:01:57,220 --> 00:02:00,158
<font color="#E5E5E5">that's in English it has</font><font color="#CCCCCC"> also a whole</font>

49
00:01:58,960 --> 00:02:02,048
different meaning which I didn't know

50
00:02:00,159 --> 00:02:03,549
<font color="#E5E5E5">about but the project was</font><font color="#CCCCCC"> always named</font>

51
00:02:02,049 --> 00:02:06,400
this way so I didn't want to change it

52
00:02:03,549 --> 00:02:08,920
<font color="#CCCCCC">again I started working on this in</font>

53
00:02:06,400 --> 00:02:11,830
February 2014 when I was working at a

54
00:02:08,919 --> 00:02:14,649
Security Operations Center<font color="#E5E5E5"> there were</font>

55
00:02:11,830 --> 00:02:17,950
mainly<font color="#E5E5E5"> two reasons</font><font color="#CCCCCC"> for my starting this</font>

56
00:02:14,650 --> 00:02:21,040
project<font color="#E5E5E5"> first was my personal annoyance</font>

57
00:02:17,950 --> 00:02:24,690
<font color="#CCCCCC">raishin @a antivirus software</font><font color="#E5E5E5"> Oh packet</font>

58
00:02:21,040 --> 00:02:26,890
decisions<font color="#E5E5E5"> what I mean by</font><font color="#CCCCCC"> that is that I</font>

59
00:02:24,690 --> 00:02:29,079
used to have hard drives<font color="#CCCCCC"> full with</font>

60
00:02:26,890 --> 00:02:32,190
malware samples that<font color="#E5E5E5"> I</font><font color="#CCCCCC"> downloaded here</font>

61
00:02:29,080 --> 00:02:34,569
<font color="#E5E5E5">and there the whole wide web and</font>

62
00:02:32,190 --> 00:02:37,510
regularly that<font color="#E5E5E5"> every time I would plug</font>

63
00:02:34,569 --> 00:02:39,280
the<font color="#CCCCCC"> disk I would be</font><font color="#E5E5E5"> very fearful that</font>

64
00:02:37,510 --> 00:02:41,620
the antivirus software would try to

65
00:02:39,280 --> 00:02:43,720
delete everything on it<font color="#E5E5E5"> and I was</font><font color="#CCCCCC"> very</font>

66
00:02:41,620 --> 00:02:44,830
annoying<font color="#CCCCCC"> at the same time every time</font><font color="#E5E5E5"> I</font>

67
00:02:43,720 --> 00:02:47,470
would download<font color="#CCCCCC"> the program from</font><font color="#E5E5E5"> the</font>

68
00:02:44,830 --> 00:02:49,360
<font color="#CCCCCC">internet sometime it would it would get</font>

69
00:02:47,470 --> 00:02:51,819
deleted<font color="#E5E5E5"> and I wouldn't have any</font>

70
00:02:49,360 --> 00:02:53,860
explanation<font color="#CCCCCC"> as to why</font><font color="#E5E5E5"> the program was</font>

71
00:02:51,819 --> 00:02:55,390
flagged as being suspicious<font color="#E5E5E5"> and it was</font>

72
00:02:53,860 --> 00:02:57,040
kind of<font color="#E5E5E5"> frustrating so imagine you're</font>

73
00:02:55,390 --> 00:03:00,069
downloading a<font color="#CCCCCC"> keychain for</font><font color="#E5E5E5"> something</font>

74
00:02:57,040 --> 00:03:02,200
<font color="#CCCCCC">four</font><font color="#E5E5E5"> dollar</font><font color="#CCCCCC"> application</font><font color="#E5E5E5"> that region that</font>

75
00:03:00,069 --> 00:03:03,369
<font color="#E5E5E5">you've tracked for maybe an hour of your</font>

76
00:03:02,200 --> 00:03:05,078
<font color="#CCCCCC">life that</font><font color="#E5E5E5"> you're never getting back and</font>

77
00:03:03,370 --> 00:03:07,870
as soon<font color="#CCCCCC"> as you've gotten</font><font color="#E5E5E5"> your hands on</font>

78
00:03:05,079 --> 00:03:09,940
it<font color="#CCCCCC"> it's just</font><font color="#E5E5E5"> get deleted with no</font><font color="#CCCCCC"> form of</font>

79
00:03:07,870 --> 00:03:12,220
<font color="#E5E5E5">explanation I just wanted to know what</font>

80
00:03:09,940 --> 00:03:15,760
were<font color="#CCCCCC"> the reasons behind my</font><font color="#E5E5E5"> antivirus</font>

81
00:03:12,220 --> 00:03:18,459
software decisions so there was also

82
00:03:15,760 --> 00:03:21,519
another<font color="#E5E5E5"> concern</font><font color="#CCCCCC"> that I had in my</font><font color="#E5E5E5"> job was</font>

83
00:03:18,459 --> 00:03:24,880
that a lot<font color="#CCCCCC"> of the tasks that I had to do</font>

84
00:03:21,519 --> 00:03:26,889
were increasingly growing repetitive<font color="#E5E5E5"> so</font>

85
00:03:24,880 --> 00:03:29,889
every time<font color="#E5E5E5"> I would receive a malware</font>

86
00:03:26,889 --> 00:03:32,410
sample<font color="#CCCCCC"> I would first drag the sample</font>

87
00:03:29,889 --> 00:03:35,079
<font color="#E5E5E5">into PID to see if there was</font><font color="#CCCCCC"> a unknown</font>

88
00:03:32,410 --> 00:03:35,799
<font color="#CCCCCC">Packer I would then upload the file to</font>

89
00:03:35,079 --> 00:03:39,430
virustotal

90
00:03:35,799 --> 00:03:41,350
<font color="#E5E5E5">etc etc so I was wondering why can't</font>

91
00:03:39,430 --> 00:03:43,600
there be a single tool that<font color="#E5E5E5"> does all</font>

92
00:03:41,350 --> 00:03:46,810
this and<font color="#CCCCCC"> as I</font><font color="#E5E5E5"> couldn't find any I just</font>

93
00:03:43,600 --> 00:03:48,489
<font color="#CCCCCC">decided to write one so just to give you</font>

94
00:03:46,810 --> 00:03:50,889
<font color="#CCCCCC">a quick overview</font><font color="#E5E5E5"> of the project</font><font color="#CCCCCC"> it's a</font>

95
00:03:48,489 --> 00:03:53,260
free open source<font color="#CCCCCC"> software so</font><font color="#E5E5E5"> it's reason</font>

96
00:03:50,889 --> 00:03:54,880
<font color="#E5E5E5">that the terms of the GPL v3</font><font color="#CCCCCC"> it's a tool</font>

97
00:03:53,260 --> 00:03:58,600
that<font color="#CCCCCC"> was written in C++ and it's</font>

98
00:03:54,880 --> 00:04:00,730
available on<font color="#E5E5E5"> both Windows Linux and I</font>

99
00:03:58,600 --> 00:04:02,079
think it probably<font color="#E5E5E5"> works on Mac OS as</font>

100
00:04:00,730 --> 00:04:05,319
well even<font color="#CCCCCC"> though I've</font><font color="#E5E5E5"> never</font><font color="#CCCCCC"> tested it</font>

101
00:04:02,079 --> 00:04:07,660
what it's used for<font color="#CCCCCC"> is to</font><font color="#E5E5E5"> perform initial</font>

102
00:04:05,319 --> 00:04:09,388
assessment of<font color="#E5E5E5"> PE files so the objective</font>

103
00:04:07,660 --> 00:04:12,579
<font color="#CCCCCC">is to be able to</font><font color="#E5E5E5"> quickly figure out</font>

104
00:04:09,389 --> 00:04:14,829
whether one sample<font color="#E5E5E5"> is worth</font>

105
00:04:12,579 --> 00:04:16,329
<font color="#E5E5E5">investigating closer or whether it's</font>

106
00:04:14,829 --> 00:04:21,220
like a known quantity that you can

107
00:04:16,329 --> 00:04:23,229
discard it almost immediately<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> way</font>

108
00:04:21,220 --> 00:04:26,080
it works<font color="#CCCCCC"> is it's going to generate</font><font color="#E5E5E5"> a</font>

109
00:04:23,229 --> 00:04:27,849
report<font color="#E5E5E5"> containing weak signals that hint</font>

110
00:04:26,080 --> 00:04:30,250
at the final behavior and I would like

111
00:04:27,849 --> 00:04:31,180
to<font color="#CCCCCC"> point out immediately that's the</font><font color="#E5E5E5"> way</font>

112
00:04:30,250 --> 00:04:33,190
it works is

113
00:04:31,180 --> 00:04:34,480
it's not a drop in<font color="#CCCCCC"> av replacement it's</font>

114
00:04:33,190 --> 00:04:35,950
definitely<font color="#E5E5E5"> not some program</font><font color="#CCCCCC"> that you're</font>

115
00:04:34,480 --> 00:04:37,690
going to<font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to give to</font><font color="#E5E5E5"> your end</font>

116
00:04:35,950 --> 00:04:39,430
<font color="#CCCCCC">users and expect them to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> able to take</font>

117
00:04:37,690 --> 00:04:42,430
decisions<font color="#E5E5E5"> based on what the</font><font color="#CCCCCC"> program</font>

118
00:04:39,430 --> 00:04:44,740
outputs<font color="#E5E5E5"> it's developed for InfoSec</font>

119
00:04:42,430 --> 00:04:45,910
professionals and it's not a replacement

120
00:04:44,740 --> 00:04:47,950
for human intelligence<font color="#CCCCCC"> right</font>

121
00:04:45,910 --> 00:04:50,080
<font color="#E5E5E5">intelligence</font><font color="#CCCCCC"> either it so what it</font><font color="#E5E5E5"> does</font>

122
00:04:47,950 --> 00:04:52,479
is it gathers as much information<font color="#CCCCCC"> as it</font>

123
00:04:50,080 --> 00:04:54,130
can<font color="#E5E5E5"> on a particular file and</font><font color="#CCCCCC"> presents</font>

124
00:04:52,480 --> 00:04:57,570
that<font color="#CCCCCC"> information</font><font color="#E5E5E5"> to you and it expects</font>

125
00:04:54,130 --> 00:04:59,440
the<font color="#CCCCCC"> user</font><font color="#E5E5E5"> the experts user to be able to</font>

126
00:04:57,570 --> 00:05:02,800
understand<font color="#E5E5E5"> this</font><font color="#CCCCCC"> information and be able</font>

127
00:04:59,440 --> 00:05:06,010
<font color="#CCCCCC">to take a decision based on whatever was</font>

128
00:05:02,800 --> 00:05:07,780
collected so it shows you a<font color="#E5E5E5"> lot of</font>

129
00:05:06,010 --> 00:05:10,090
<font color="#E5E5E5">information</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you figure</font><font color="#CCCCCC"> out whether</font>

130
00:05:07,780 --> 00:05:13,450
you want<font color="#E5E5E5"> to open</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> find an Ida or drag</font>

131
00:05:10,090 --> 00:05:14,739
it<font color="#E5E5E5"> into the queue sandbox etc this</font>

132
00:05:13,450 --> 00:05:19,300
<font color="#E5E5E5">morning we've</font><font color="#CCCCCC"> had a very</font><font color="#E5E5E5"> interesting</font>

133
00:05:14,740 --> 00:05:20,890
talk<font color="#E5E5E5"> from</font><font color="#CCCCCC"> IDI</font><font color="#E5E5E5"> about dynamic analysis</font><font color="#CCCCCC"> I</font>

134
00:05:19,300 --> 00:05:22,840
don't want to go<font color="#E5E5E5"> into too much detail</font>

135
00:05:20,890 --> 00:05:24,909
<font color="#E5E5E5">details about the differences between</font>

136
00:05:22,840 --> 00:05:27,310
static<font color="#E5E5E5"> and</font><font color="#CCCCCC"> dynamic analysis I'm sure</font>

137
00:05:24,910 --> 00:05:29,380
most of you have<font color="#CCCCCC"> already</font><font color="#E5E5E5"> used some</font>

138
00:05:27,310 --> 00:05:31,090
experience in the field<font color="#CCCCCC"> so the only</font>

139
00:05:29,380 --> 00:05:34,000
thing I'm going to<font color="#E5E5E5"> say is</font><font color="#CCCCCC"> that static</font>

140
00:05:31,090 --> 00:05:36,159
and Isis has its<font color="#E5E5E5"> shortcomings but it</font>

141
00:05:34,000 --> 00:05:38,290
also yields<font color="#E5E5E5"> very</font><font color="#CCCCCC"> quick wins</font><font color="#E5E5E5"> from time to</font>

142
00:05:36,160 --> 00:05:40,660
time<font color="#E5E5E5"> so I think it would be a shame</font><font color="#CCCCCC"> not</font>

143
00:05:38,290 --> 00:05:43,150
to take 20 seconds to<font color="#E5E5E5"> look at the</font>

144
00:05:40,660 --> 00:05:45,280
outside<font color="#E5E5E5"> correct characteristics of a</font>

145
00:05:43,150 --> 00:05:48,640
program and see if we can already infer

146
00:05:45,280 --> 00:05:50,679
its behavior<font color="#E5E5E5"> just from there</font><font color="#CCCCCC"> so the tool</font>

147
00:05:48,640 --> 00:05:52,840
only<font color="#E5E5E5"> performs setting and Isis and does</font>

148
00:05:50,680 --> 00:05:55,150
not<font color="#E5E5E5"> do any sort of dynamic</font><font color="#CCCCCC"> execution</font><font color="#E5E5E5"> or</font>

149
00:05:52,840 --> 00:05:56,619
not even<font color="#E5E5E5"> symbolic in the execution it's</font>

150
00:05:55,150 --> 00:05:58,179
just looking at the way the<font color="#CCCCCC"> file</font>

151
00:05:56,620 --> 00:06:01,990
structure and trying to guess<font color="#E5E5E5"> what it</font>

152
00:05:58,180 --> 00:06:04,000
does from<font color="#E5E5E5"> there but the architecture of</font>

153
00:06:01,990 --> 00:06:06,880
the program so the idea<font color="#E5E5E5"> is simple you</font>

154
00:06:04,000 --> 00:06:09,220
get a lot<font color="#CCCCCC"> of input files maybe thousands</font>

155
00:06:06,880 --> 00:06:10,840
or hundreds of thousands of different

156
00:06:09,220 --> 00:06:15,130
<font color="#E5E5E5">files that you know nothing about and</font>

157
00:06:10,840 --> 00:06:17,650
you feed<font color="#E5E5E5"> them into a parser the</font><font color="#CCCCCC"> P parser</font>

158
00:06:15,130 --> 00:06:20,320
is going to dissect the file and offer

159
00:06:17,650 --> 00:06:22,929
<font color="#E5E5E5">all the information about the file to a</font>

160
00:06:20,320 --> 00:06:25,630
whole set of plugins now<font color="#E5E5E5"> I'd like to go</font>

161
00:06:22,930 --> 00:06:27,190
into much more<font color="#E5E5E5"> details later</font><font color="#CCCCCC"> and each</font><font color="#E5E5E5"> of</font>

162
00:06:25,630 --> 00:06:29,500
the this plugins<font color="#E5E5E5"> going to generate some</font>

163
00:06:27,190 --> 00:06:35,200
individual output that populates a

164
00:06:29,500 --> 00:06:37,270
report in the end<font color="#E5E5E5"> I also embedded the</font>

165
00:06:35,200 --> 00:06:39,400
yarra engine which I think most<font color="#E5E5E5"> of you</font>

166
00:06:37,270 --> 00:06:41,740
<font color="#E5E5E5">know as well that</font><font color="#CCCCCC"> can be</font><font color="#E5E5E5"> used by the</font>

167
00:06:39,400 --> 00:06:43,539
plugins to perform<font color="#CCCCCC"> additional tasks and</font>

168
00:06:41,740 --> 00:06:44,590
finally<font color="#E5E5E5"> after the report has been</font>

169
00:06:43,540 --> 00:06:46,540
generated<font color="#CCCCCC"> it goes</font>

170
00:06:44,590 --> 00:06:48,369
<font color="#E5E5E5">you know outside in</font><font color="#CCCCCC"> an output form a</font>

171
00:06:46,540 --> 00:06:51,220
<font color="#CCCCCC">line which</font><font color="#E5E5E5"> is going to format the text</font>

172
00:06:48,370 --> 00:06:53,410
<font color="#E5E5E5">into either plain text or human readable</font>

173
00:06:51,220 --> 00:06:56,260
output or JSON for other tools<font color="#E5E5E5"> if you</font>

174
00:06:53,410 --> 00:06:58,870
need to use them<font color="#E5E5E5"> so the way this talk is</font>

175
00:06:56,260 --> 00:07:00,969
structured is I'm going<font color="#E5E5E5"> to go</font><font color="#CCCCCC"> over each</font>

176
00:06:58,870 --> 00:07:04,060
different<font color="#E5E5E5"> parts of the this architecture</font>

177
00:07:00,970 --> 00:07:06,190
to talk<font color="#E5E5E5"> about the different reasons and</font>

178
00:07:04,060 --> 00:07:10,450
technical technological choices that

179
00:07:06,190 --> 00:07:13,510
made developing this tool so the first

180
00:07:10,450 --> 00:07:18,159
and core part of<font color="#E5E5E5"> this program is the</font><font color="#CCCCCC"> PD</font>

181
00:07:13,510 --> 00:07:19,900
parser<font color="#CCCCCC"> so I before</font><font color="#E5E5E5"> before starting to</font>

182
00:07:18,160 --> 00:07:23,110
work<font color="#CCCCCC"> on</font><font color="#E5E5E5"> this project I looked at the</font>

183
00:07:19,900 --> 00:07:25,419
<font color="#E5E5E5">different parts that were already</font>

184
00:07:23,110 --> 00:07:27,250
<font color="#E5E5E5">developed and that I could</font><font color="#CCCCCC"> reuse so I</font>

185
00:07:25,420 --> 00:07:29,350
looked<font color="#E5E5E5"> particularly into a PE file in</font>

186
00:07:27,250 --> 00:07:31,540
Python and there were also a couple<font color="#E5E5E5"> of</font>

187
00:07:29,350 --> 00:07:33,280
<font color="#CCCCCC">C++ libraries but all of those were</font>

188
00:07:31,540 --> 00:07:35,440
ultimately<font color="#E5E5E5"> rejected</font><font color="#CCCCCC"> PD</font><font color="#E5E5E5"> file was I</font>

189
00:07:33,280 --> 00:07:37,929
thought a bit too slow<font color="#E5E5E5"> and I wanted to</font>

190
00:07:35,440 --> 00:07:39,610
be able to<font color="#CCCCCC"> scale a lot and handle</font>

191
00:07:37,930 --> 00:07:41,440
thousands<font color="#E5E5E5"> of files in a matter of</font>

192
00:07:39,610 --> 00:07:43,870
minutes so<font color="#E5E5E5"> this is why I didn't want to</font>

193
00:07:41,440 --> 00:07:47,350
go to the<font color="#E5E5E5"> Python way and the C++</font><font color="#CCCCCC"> level I</font>

194
00:07:43,870 --> 00:07:49,000
found looked like they were very and

195
00:07:47,350 --> 00:07:51,490
safely written and I didn't want to<font color="#E5E5E5"> risk</font>

196
00:07:49,000 --> 00:07:54,550
<font color="#CCCCCC">using them so I decided to write my own</font>

197
00:07:51,490 --> 00:07:55,600
<font color="#E5E5E5">which might be a bad idea</font><font color="#CCCCCC"> you let</font><font color="#E5E5E5"> me</font>

198
00:07:54,550 --> 00:07:57,520
know

199
00:07:55,600 --> 00:08:00,070
the problem is<font color="#E5E5E5"> that PE files are</font>

200
00:07:57,520 --> 00:08:03,010
extremely complex<font color="#E5E5E5"> so there is an</font>

201
00:08:00,070 --> 00:08:04,450
official specifications for<font color="#CCCCCC"> PE files you</font>

202
00:08:03,010 --> 00:08:06,870
can<font color="#CCCCCC"> download it from Microsoft's</font><font color="#E5E5E5"> website</font>

203
00:08:04,450 --> 00:08:08,920
but the thing<font color="#CCCCCC"> is this</font><font color="#E5E5E5"> specification is</font>

204
00:08:06,870 --> 00:08:12,190
sometimes quite cryptic it's not very

205
00:08:08,920 --> 00:08:14,800
clear<font color="#E5E5E5"> and moreover the windows as loader</font>

206
00:08:12,190 --> 00:08:18,610
<font color="#E5E5E5">that actually parses the PE files for</font>

207
00:08:14,800 --> 00:08:20,920
the OS<font color="#E5E5E5"> is quite</font><font color="#CCCCCC"> liked so it's</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

208
00:08:18,610 --> 00:08:22,450
accept a lot<font color="#E5E5E5"> of files that</font><font color="#CCCCCC"> are not that</font>

209
00:08:20,920 --> 00:08:25,000
did<font color="#E5E5E5"> not adhere strictly to the</font>

210
00:08:22,450 --> 00:08:27,520
<font color="#E5E5E5">specification and writing a parser</font>

211
00:08:25,000 --> 00:08:30,010
that's that's<font color="#CCCCCC"> that performs tricks</font>

212
00:08:27,520 --> 00:08:32,559
parsing is going to reject<font color="#CCCCCC"> a lot of</font>

213
00:08:30,010 --> 00:08:36,990
malware<font color="#E5E5E5"> that would actually be able to</font>

214
00:08:32,559 --> 00:08:39,429
execute<font color="#E5E5E5"> on a normal system so</font><font color="#CCCCCC"> there also</font>

215
00:08:36,990 --> 00:08:41,770
there's another difficulty is that<font color="#E5E5E5"> since</font>

216
00:08:39,429 --> 00:08:43,870
we<font color="#E5E5E5"> are going to be handling malware</font>

217
00:08:41,770 --> 00:08:46,720
which is by definition<font color="#E5E5E5"> very interested</font>

218
00:08:43,870 --> 00:08:48,820
in put we know that there is<font color="#CCCCCC"> a</font>

219
00:08:46,720 --> 00:08:49,990
significant chance that the input<font color="#CCCCCC"> that</font>

220
00:08:48,820 --> 00:08:51,730
we're going<font color="#E5E5E5"> to use is going to try to</font>

221
00:08:49,990 --> 00:08:53,740
actively<font color="#E5E5E5"> attack the parser so</font><font color="#CCCCCC"> there have</font>

222
00:08:51,730 --> 00:08:57,280
been<font color="#CCCCCC"> a couple of bugs in either Pro in</font>

223
00:08:53,740 --> 00:08:57,800
the past and<font color="#CCCCCC"> other analysis tools that</font>

224
00:08:57,280 --> 00:08:59,329
<font color="#E5E5E5">were</font>

225
00:08:57,800 --> 00:09:02,329
attacked by<font color="#CCCCCC"> the malware in order to</font>

226
00:08:59,330 --> 00:09:05,540
prevent<font color="#E5E5E5"> analysts for from reversing the</font>

227
00:09:02,330 --> 00:09:07,820
programs and<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> into it</font><font color="#CCCCCC"> so there is</font>

228
00:09:05,540 --> 00:09:10,310
<font color="#CCCCCC">a very nice presentation</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> black</font>

229
00:09:07,820 --> 00:09:13,040
<font color="#E5E5E5">hat us 2011 where people</font><font color="#CCCCCC"> from reversing</font>

230
00:09:10,310 --> 00:09:15,369
<font color="#E5E5E5">labs discussed all the different</font>

231
00:09:13,040 --> 00:09:18,620
pitfalls that they had<font color="#CCCCCC"> identified while</font>

232
00:09:15,370 --> 00:09:23,170
looking at the<font color="#CCCCCC"> P specification</font><font color="#E5E5E5"> and the</font>

233
00:09:18,620 --> 00:09:27,380
way they<font color="#E5E5E5"> could maybe crash</font><font color="#CCCCCC"> an Isis tools</font>

234
00:09:23,170 --> 00:09:30,530
so yeah<font color="#E5E5E5"> the idea</font><font color="#CCCCCC"> is that I wrote my own</font>

235
00:09:27,380 --> 00:09:32,240
<font color="#E5E5E5">P parser</font><font color="#CCCCCC"> I did</font><font color="#E5E5E5"> in C++ as well so you're</font>

236
00:09:30,530 --> 00:09:34,939
probably<font color="#E5E5E5"> thinking that is this is a very</font>

237
00:09:32,240 --> 00:09:37,760
stupid<font color="#CCCCCC"> idea because</font><font color="#E5E5E5"> never</font><font color="#CCCCCC"> a C++ is a</font>

238
00:09:34,940 --> 00:09:39,830
memory<font color="#E5E5E5"> and safe language</font><font color="#CCCCCC"> all I</font><font color="#E5E5E5"> can say</font>

239
00:09:37,760 --> 00:09:43,970
is that C++ is fast and I did my<font color="#E5E5E5"> best to</font>

240
00:09:39,830 --> 00:09:46,400
program very defensively<font color="#E5E5E5"> I also tried</font>

241
00:09:43,970 --> 00:09:48,020
fuzzing the<font color="#E5E5E5"> programs for maybe something</font>

242
00:09:46,400 --> 00:09:50,360
like to mount<font color="#E5E5E5"> with</font><font color="#CCCCCC"> AFL and</font><font color="#E5E5E5"> well-known</font>

243
00:09:48,020 --> 00:09:50,840
<font color="#E5E5E5">fuzzing tool from Google</font><font color="#CCCCCC"> didn't</font><font color="#E5E5E5"> find any</font>

244
00:09:50,360 --> 00:09:54,470
crashes

245
00:09:50,840 --> 00:09:56,630
<font color="#CCCCCC">I used gel West Indies handcrafted PE</font>

246
00:09:54,470 --> 00:09:59,300
file so you<font color="#E5E5E5"> wrote minimize take</font><font color="#CCCCCC"> PE</font>

247
00:09:56,630 --> 00:10:03,740
samples that<font color="#CCCCCC"> are that do work on Windows</font>

248
00:09:59,300 --> 00:10:06,170
but<font color="#E5E5E5"> not exactly valid as well all I can</font>

249
00:10:03,740 --> 00:10:07,430
<font color="#E5E5E5">say is I couldn't find a lot of crashes</font>

250
00:10:06,170 --> 00:10:09,020
well<font color="#CCCCCC"> I couldn't</font><font color="#E5E5E5"> find</font><font color="#CCCCCC"> the questions</font><font color="#E5E5E5"> that</font>

251
00:10:07,430 --> 00:10:12,500
<font color="#E5E5E5">are in the</font><font color="#CCCCCC"> program</font><font color="#E5E5E5"> I open the bug bounty</font>

252
00:10:09,020 --> 00:10:14,240
so if anyone can<font color="#E5E5E5"> you find a PE</font>

253
00:10:12,500 --> 00:10:15,890
executable that triggers a crash in my

254
00:10:14,240 --> 00:10:17,480
parser feel free to<font color="#E5E5E5"> send it to</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> and</font>

255
00:10:15,890 --> 00:10:19,069
there's a bug bounty on it it's not<font color="#CCCCCC"> a</font>

256
00:10:17,480 --> 00:10:22,190
lot<font color="#CCCCCC"> but just</font><font color="#E5E5E5"> come out</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> my personal</font>

257
00:10:19,070 --> 00:10:27,320
<font color="#E5E5E5">pocket money so please be understanding</font>

258
00:10:22,190 --> 00:10:31,420
<font color="#CCCCCC">oh nice there's a PowerPoint crash I'll</font>

259
00:10:27,320 --> 00:10:36,140
have to investigate<font color="#CCCCCC"> that later probably</font>

260
00:10:31,420 --> 00:10:41,439
or the VM is shutting off that's nice

261
00:10:36,140 --> 00:10:41,439
<font color="#CCCCCC">ok please bear with</font><font color="#E5E5E5"> me for a second</font>

262
00:10:51,060 --> 00:10:57,439
yeah and of course<font color="#CCCCCC"> that windows updates</font>

263
00:10:53,010 --> 00:10:59,910
as well<font color="#E5E5E5"> it's just been triggered</font><font color="#CCCCCC"> okay</font>

264
00:10:57,440 --> 00:11:05,090
<font color="#CCCCCC">I'll</font><font color="#E5E5E5"> do my</font><font color="#CCCCCC"> best to continue with other</font>

265
00:10:59,910 --> 00:11:08,370
<font color="#E5E5E5">slides</font><font color="#CCCCCC"> while</font><font color="#E5E5E5"> everything is rebooting so</font>

266
00:11:05,090 --> 00:11:09,840
there has<font color="#CCCCCC"> been a Chinese researcher</font>

267
00:11:08,370 --> 00:11:11,370
who's been<font color="#CCCCCC"> posing</font><font color="#E5E5E5"> the application as</font>

268
00:11:09,840 --> 00:11:14,750
well he's<font color="#E5E5E5"> found two crashes in</font><font color="#CCCCCC"> the past</font>

269
00:11:11,370 --> 00:11:17,670
so it's<font color="#E5E5E5"> definitely not a</font><font color="#CCCCCC"> foolproof</font><font color="#E5E5E5"> but</font>

270
00:11:14,750 --> 00:11:19,560
<font color="#CCCCCC">yeah</font><font color="#E5E5E5"> please please try to find the</font><font color="#CCCCCC"> blogs</font>

271
00:11:17,670 --> 00:11:23,280
in the application maybe you'll get<font color="#E5E5E5"> a</font>

272
00:11:19,560 --> 00:11:32,930
the rewards<font color="#CCCCCC"> well hopefully it won't be</font>

273
00:11:23,280 --> 00:11:32,930
too<font color="#E5E5E5"> easy I'm so</font><font color="#CCCCCC"> sorry about this</font>

274
00:11:51,790 --> 00:11:55,560
yeah so we're back

275
00:11:59,790 --> 00:12:06,329
yeah so finally I talked about<font color="#E5E5E5"> the speed</font>

276
00:12:03,960 --> 00:12:08,850
<font color="#CCCCCC">I was able</font><font color="#E5E5E5"> to go through a whole virus</font>

277
00:12:06,330 --> 00:12:10,710
<font color="#E5E5E5">share release with the tool</font><font color="#CCCCCC"> and was able</font>

278
00:12:08,850 --> 00:12:12,780
<font color="#CCCCCC">to go</font><font color="#E5E5E5"> through it in about 10 minutes</font>

279
00:12:10,710 --> 00:12:14,790
so parsing about<font color="#CCCCCC"> sixty eight gigs of</font>

280
00:12:12,780 --> 00:12:18,780
<font color="#E5E5E5">eatables</font><font color="#CCCCCC"> in a</font><font color="#E5E5E5"> few minutes</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think it's</font>

281
00:12:14,790 --> 00:12:20,670
quite nice<font color="#E5E5E5"> the</font><font color="#CCCCCC"> keys is that</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of the</font>

282
00:12:18,780 --> 00:12:22,620
files in the virus share archives are

283
00:12:20,670 --> 00:12:24,689
<font color="#E5E5E5">and actually</font><font color="#CCCCCC"> not be executables so they</font>

284
00:12:22,620 --> 00:12:27,120
just get<font color="#E5E5E5"> rejected</font><font color="#CCCCCC"> as soon as the</font>

285
00:12:24,690 --> 00:12:28,890
<font color="#CCCCCC">analysis starts</font><font color="#E5E5E5"> another thing is</font><font color="#CCCCCC"> that</font>

286
00:12:27,120 --> 00:12:31,260
<font color="#CCCCCC">all the analysis plugins were turned off</font>

287
00:12:28,890 --> 00:12:35,640
so obviously this<font color="#E5E5E5"> speeds up</font><font color="#CCCCCC"> analysis a</font>

288
00:12:31,260 --> 00:12:37,380
bit<font color="#E5E5E5"> so a few words about</font><font color="#CCCCCC"> Yarra</font><font color="#E5E5E5"> which is</font>

289
00:12:35,640 --> 00:12:41,430
a parent searching tool written by

290
00:12:37,380 --> 00:12:43,470
Victor Alvarez from virus tool you all

291
00:12:41,430 --> 00:12:45,689
know about<font color="#CCCCCC"> Jaros</font><font color="#E5E5E5"> oh I'm going to say is</font>

292
00:12:43,470 --> 00:12:49,230
<font color="#E5E5E5">it's I use a slightly</font><font color="#CCCCCC"> modified version</font>

293
00:12:45,690 --> 00:12:51,000
in man lies<font color="#E5E5E5"> the reason I do this is that</font>

294
00:12:49,230 --> 00:12:52,920
<font color="#E5E5E5">they had their own PE parts</font><font color="#CCCCCC"> for to do</font>

295
00:12:51,000 --> 00:12:54,630
stuff like looking<font color="#E5E5E5"> for patterns at</font><font color="#CCCCCC"> the</font>

296
00:12:52,920 --> 00:12:56,699
entry point<font color="#CCCCCC"> or looking</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> patterns at</font>

297
00:12:54,630 --> 00:12:58,350
<font color="#E5E5E5">the specific section and it felt really</font>

298
00:12:56,700 --> 00:13:00,300
bad having two different beauty parlors

299
00:12:58,350 --> 00:13:03,780
in<font color="#CCCCCC"> the same project even having one</font><font color="#E5E5E5"> is</font>

300
00:13:00,300 --> 00:13:06,120
already quite shaky<font color="#E5E5E5"> to me so</font><font color="#CCCCCC"> I removed</font>

301
00:13:03,780 --> 00:13:11,010
the the<font color="#E5E5E5"> processor entirely and put mine</font>

302
00:13:06,120 --> 00:13:12,960
in<font color="#CCCCCC"> that place I</font><font color="#E5E5E5"> I did C++ wrappers as</font>

303
00:13:11,010 --> 00:13:16,770
well and removed all the<font color="#E5E5E5"> non library</font>

304
00:13:12,960 --> 00:13:18,210
code<font color="#CCCCCC"> now I'm going</font><font color="#E5E5E5"> to talk a</font><font color="#CCCCCC"> bit about</font>

305
00:13:16,770 --> 00:13:20,550
all the different plugins that are

306
00:13:18,210 --> 00:13:22,620
implemented inside<font color="#E5E5E5"> this tool so the</font>

307
00:13:20,550 --> 00:13:24,680
first one<font color="#CCCCCC"> is the tranny this what I do</font>

308
00:13:22,620 --> 00:13:27,300
is I simply apply<font color="#CCCCCC"> Clannad</font><font color="#E5E5E5"> e-signatures</font>

309
00:13:24,680 --> 00:13:29,010
<font color="#CCCCCC">clan</font><font color="#E5E5E5"> ID doesn't</font><font color="#CCCCCC"> need to be</font><font color="#E5E5E5"> installed on</font>

310
00:13:27,300 --> 00:13:30,930
the<font color="#E5E5E5"> machine</font><font color="#CCCCCC"> all you have</font><font color="#E5E5E5"> to do is</font>

311
00:13:29,010 --> 00:13:32,700
<font color="#E5E5E5">download signature files run a Python</font>

312
00:13:30,930 --> 00:13:34,459
<font color="#CCCCCC">script that converts them into yarra</font>

313
00:13:32,700 --> 00:13:36,930
rules and then apply those<font color="#E5E5E5"> rules</font>

314
00:13:34,460 --> 00:13:38,430
<font color="#E5E5E5">automatically with</font><font color="#CCCCCC"> the program so the</font>

315
00:13:36,930 --> 00:13:40,290
signatures are not distributed<font color="#CCCCCC"> with the</font>

316
00:13:38,430 --> 00:13:42,959
<font color="#E5E5E5">with manual eyes because obviously they</font>

317
00:13:40,290 --> 00:13:44,099
change every<font color="#CCCCCC"> day but there's</font><font color="#E5E5E5"> a Python</font>

318
00:13:42,960 --> 00:13:46,740
script<font color="#E5E5E5"> that just allows you to download</font>

319
00:13:44,100 --> 00:13:49,590
them and use<font color="#E5E5E5"> them immediately</font><font color="#CCCCCC"> they also</font>

320
00:13:46,740 --> 00:13:51,870
have the<font color="#E5E5E5"> family uses other kinds of</font>

321
00:13:49,590 --> 00:13:55,020
databases<font color="#CCCCCC"> that are</font><font color="#E5E5E5"> HDTV and</font><font color="#CCCCCC"> NDB files</font>

322
00:13:51,870 --> 00:13:56,640
are just no big list of<font color="#E5E5E5"> hashes of known</font>

323
00:13:55,020 --> 00:13:59,240
executables and sections that<font color="#CCCCCC"> I don't</font>

324
00:13:56,640 --> 00:14:02,910
use but maybe I<font color="#CCCCCC"> will at some point I</font>

325
00:13:59,240 --> 00:14:06,060
also have a resource nicest<font color="#E5E5E5"> plugin which</font>

326
00:14:02,910 --> 00:14:08,219
looks at all resources<font color="#CCCCCC"> our mechanisms</font>

327
00:14:06,060 --> 00:14:11,569
<font color="#E5E5E5">that I used to buy</font><font color="#CCCCCC"> PD files to embark</font>

328
00:14:08,220 --> 00:14:14,220
arbitrary contents so looking at those

329
00:14:11,570 --> 00:14:16,730
those resources usually<font color="#E5E5E5"> leads useful</font>

330
00:14:14,220 --> 00:14:20,640
information<font color="#CCCCCC"> its</font><font color="#E5E5E5"> magazine mechanisms that</font>

331
00:14:16,730 --> 00:14:23,490
<font color="#CCCCCC">malware is liable to use to drop other</font>

332
00:14:20,640 --> 00:14:25,290
executables<font color="#E5E5E5"> or files that they might be</font>

333
00:14:23,490 --> 00:14:28,920
needing to<font color="#CCCCCC"> use like</font><font color="#E5E5E5"> your configuration</font>

334
00:14:25,290 --> 00:14:30,890
files etc so<font color="#E5E5E5"> just by looking</font><font color="#CCCCCC"> at the</font>

335
00:14:28,920 --> 00:14:33,990
<font color="#E5E5E5">resources of a</font><font color="#CCCCCC"> PE file like are they</font>

336
00:14:30,890 --> 00:14:36,420
<font color="#E5E5E5">impossibly encrypted or compressed is</font>

337
00:14:33,990 --> 00:14:38,820
the<font color="#E5E5E5"> P file composed of more than</font><font color="#CCCCCC"> 75%</font>

338
00:14:36,420 --> 00:14:41,160
<font color="#E5E5E5">resources etc in which case we might</font>

339
00:14:38,820 --> 00:14:42,780
infer that this is maybe a dropper we

340
00:14:41,160 --> 00:14:44,939
can get some interesting<font color="#CCCCCC"> information</font>

341
00:14:42,780 --> 00:14:47,310
about<font color="#E5E5E5"> what the P might be doing</font><font color="#CCCCCC"> on the</font>

342
00:14:44,940 --> 00:14:48,900
machine<font color="#CCCCCC"> so of</font><font color="#E5E5E5"> course if you use the</font>

343
00:14:47,310 --> 00:14:51,060
program called a resource hacker that

344
00:14:48,900 --> 00:14:53,010
<font color="#E5E5E5">works only</font><font color="#CCCCCC"> on Windows</font><font color="#E5E5E5"> as far as I know</font>

345
00:14:51,060 --> 00:14:58,500
you<font color="#E5E5E5"> can use my</font><font color="#CCCCCC"> eyes to extract resources</font>

346
00:14:53,010 --> 00:15:03,569
<font color="#E5E5E5">on any OS</font><font color="#CCCCCC"> I also have a PE</font><font color="#E5E5E5"> plug-in which</font>

347
00:14:58,500 --> 00:15:05,130
just applies PID signatures yeah I've

348
00:15:03,570 --> 00:15:06,810
decided<font color="#E5E5E5"> to spread them into two</font>

349
00:15:05,130 --> 00:15:08,820
different<font color="#E5E5E5"> plugins one that's dedicated</font>

350
00:15:06,810 --> 00:15:10,319
to compiler detection and the other one

351
00:15:08,820 --> 00:15:11,700
to Packer detection<font color="#CCCCCC"> but accurate</font>

352
00:15:10,320 --> 00:15:15,120
detection plugins also<font color="#E5E5E5"> looks for</font>

353
00:15:11,700 --> 00:15:16,830
<font color="#E5E5E5">well-known section names so if it's a if</font>

354
00:15:15,120 --> 00:15:19,410
there is a section called<font color="#CCCCCC"> dot</font><font color="#E5E5E5"> VN pro</font>

355
00:15:16,830 --> 00:15:20,970
<font color="#E5E5E5">tect we know that the Packer is possibly</font>

356
00:15:19,410 --> 00:15:23,189
<font color="#E5E5E5">the</font><font color="#CCCCCC"> unprotected cetera so it's useful</font>

357
00:15:20,970 --> 00:15:25,920
information the ID hasn't been

358
00:15:23,190 --> 00:15:28,710
maintained for<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> a few</font><font color="#CCCCCC"> years so</font>

359
00:15:25,920 --> 00:15:30,780
I'm<font color="#E5E5E5"> not sure</font><font color="#CCCCCC"> how relevant this there are</font>

360
00:15:28,710 --> 00:15:32,520
<font color="#CCCCCC">signatures still are</font><font color="#E5E5E5"> but maybe I'll just</font>

361
00:15:30,780 --> 00:15:35,069
remove<font color="#E5E5E5"> them at some points so far I</font>

362
00:15:32,520 --> 00:15:37,740
haven't<font color="#E5E5E5"> had any</font><font color="#CCCCCC"> complaints I have a</font>

363
00:15:35,070 --> 00:15:39,320
<font color="#CCCCCC">strings plug-in which does a very</font>

364
00:15:37,740 --> 00:15:41,850
<font color="#E5E5E5">straightforward thing of looking for</font>

365
00:15:39,320 --> 00:15:43,500
<font color="#CCCCCC">well-known strings that indicates and</font>

366
00:15:41,850 --> 00:15:45,090
possible malicious behavior like

367
00:15:43,500 --> 00:15:45,540
reference to system tools<font color="#E5E5E5"> like Reggie</font>

368
00:15:45,090 --> 00:15:49,200
did

369
00:15:45,540 --> 00:15:51,120
task<font color="#E5E5E5"> manager etc etc debugger process</font>

370
00:15:49,200 --> 00:15:52,890
names references<font color="#CCCCCC"> to address icky</font>

371
00:15:51,120 --> 00:15:55,410
registry<font color="#E5E5E5"> keys the WMI</font>

372
00:15:52,890 --> 00:15:57,689
there are also a lot of<font color="#E5E5E5"> virtual machine</font>

373
00:15:55,410 --> 00:16:00,120
detection techniques<font color="#CCCCCC"> that rely on</font>

374
00:15:57,690 --> 00:16:01,710
<font color="#E5E5E5">looking for specific strings in the OS</font>

375
00:16:00,120 --> 00:16:02,880
<font color="#E5E5E5">so if you look</font><font color="#CCCCCC"> for those strings in the</font>

376
00:16:01,710 --> 00:16:03,930
malware<font color="#CCCCCC"> as well if the strings are not</font>

377
00:16:02,880 --> 00:16:05,520
obfuscated you're going to know

378
00:16:03,930 --> 00:16:07,890
immediately that<font color="#E5E5E5"> it's trying to be</font>

379
00:16:05,520 --> 00:16:10,350
<font color="#CCCCCC">something fishy basically every time</font>

380
00:16:07,890 --> 00:16:12,540
<font color="#E5E5E5">there is</font><font color="#CCCCCC"> a new apt report that comes out</font>

381
00:16:10,350 --> 00:16:14,880
<font color="#CCCCCC">I'd</font><font color="#E5E5E5"> brush through it look for</font>

382
00:16:12,540 --> 00:16:16,290
groundbreaking<font color="#CCCCCC"> new invasion</font><font color="#E5E5E5"> techniques</font>

383
00:16:14,880 --> 00:16:18,449
and add a<font color="#E5E5E5"> few lines to</font>

384
00:16:16,290 --> 00:16:22,740
<font color="#CCCCCC">- this plugin to possibly detects</font><font color="#E5E5E5"> and</font>

385
00:16:18,449 --> 00:16:24,420
you know<font color="#CCCCCC"> newer implementations I also</font>

386
00:16:22,740 --> 00:16:26,490
have a<font color="#E5E5E5"> cryptography detection plug-in</font>

387
00:16:24,420 --> 00:16:28,829
that is directly inspired<font color="#CCCCCC"> from the</font>

388
00:16:26,490 --> 00:16:31,139
<font color="#E5E5E5">either</font><font color="#CCCCCC"> Pro plug-in</font><font color="#E5E5E5"> of fine crypt I think</font>

389
00:16:28,829 --> 00:16:33,420
so what it does is it<font color="#E5E5E5"> looks for the</font>

390
00:16:31,139 --> 00:16:35,730
<font color="#E5E5E5">particular cryptographic constants you</font>

391
00:16:33,420 --> 00:16:37,649
used in<font color="#E5E5E5"> particular algorithms</font><font color="#CCCCCC"> I also</font>

392
00:16:35,730 --> 00:16:39,690
look for the oids that<font color="#E5E5E5"> I used to</font>

393
00:16:37,649 --> 00:16:42,180
reference<font color="#E5E5E5"> other algorithms in</font>

394
00:16:39,690 --> 00:16:45,500
<font color="#E5E5E5">third-party IP is the way I did this was</font>

395
00:16:42,180 --> 00:16:48,300
simply to download<font color="#E5E5E5"> you know some random</font>

396
00:16:45,500 --> 00:16:51,240
crypto library<font color="#E5E5E5"> on the Internet</font>

397
00:16:48,300 --> 00:16:52,800
I looked for all arrays of<font color="#E5E5E5"> integral</font>

398
00:16:51,240 --> 00:16:54,720
integers like this I'm<font color="#E5E5E5"> not sure you can</font>

399
00:16:52,800 --> 00:16:58,680
<font color="#E5E5E5">if you can read it properly from where</font>

400
00:16:54,720 --> 00:17:01,110
you stand<font color="#CCCCCC"> but the idea is</font><font color="#E5E5E5"> I built some</font>

401
00:16:58,680 --> 00:17:04,379
big error rules that look for all those

402
00:17:01,110 --> 00:17:06,360
constants and now I'm able to<font color="#E5E5E5"> detect md4</font>

403
00:17:04,380 --> 00:17:09,870
md5 sha-1<font color="#E5E5E5"> cetera et cetera</font>

404
00:17:06,359 --> 00:17:12,750
AES inside<font color="#E5E5E5"> binary so knowing that a</font>

405
00:17:09,869 --> 00:17:14,339
binary<font color="#E5E5E5"> is using cryptography is always</font>

406
00:17:12,750 --> 00:17:15,780
<font color="#E5E5E5">something interesting because it can</font>

407
00:17:14,339 --> 00:17:17,879
either<font color="#E5E5E5"> mean that there is some of</font>

408
00:17:15,780 --> 00:17:20,069
obfuscation going on<font color="#E5E5E5"> or even</font><font color="#CCCCCC"> that the</font>

409
00:17:17,880 --> 00:17:22,079
programs are<font color="#CCCCCC"> run somewhere we'll see</font>

410
00:17:20,069 --> 00:17:23,428
<font color="#E5E5E5">some</font><font color="#CCCCCC"> examples they</font><font color="#E5E5E5"> also have a backward</font>

411
00:17:22,079 --> 00:17:25,168
detection<font color="#CCCCCC"> plug-in which I mentioned a</font>

412
00:17:23,429 --> 00:17:27,390
<font color="#CCCCCC">bit earlier</font><font color="#E5E5E5"> there is</font><font color="#CCCCCC"> a whitelist of</font>

413
00:17:25,169 --> 00:17:29,880
section names<font color="#CCCCCC"> I look for</font><font color="#E5E5E5"> possibly</font>

414
00:17:27,390 --> 00:17:32,460
encrypted or write alone<font color="#E5E5E5"> executable</font>

415
00:17:29,880 --> 00:17:34,620
sections<font color="#CCCCCC"> I</font><font color="#E5E5E5"> look that the number of</font>

416
00:17:32,460 --> 00:17:37,140
imports is reasonable so PE files that

417
00:17:34,620 --> 00:17:39,299
have less<font color="#E5E5E5"> than 10 imports are usually a</font>

418
00:17:37,140 --> 00:17:41,880
little<font color="#E5E5E5"> bit suspicious and require</font>

419
00:17:39,299 --> 00:17:44,429
<font color="#E5E5E5">further inspection apart from that there</font>

420
00:17:41,880 --> 00:17:46,799
are also<font color="#E5E5E5"> funny in custom senses that are</font>

421
00:17:44,429 --> 00:17:48,600
caused by some<font color="#E5E5E5"> Packer so this is a funny</font>

422
00:17:46,799 --> 00:17:50,940
one that I<font color="#E5E5E5"> discovered a while ago was</font>

423
00:17:48,600 --> 00:17:52,770
there was this Packer<font color="#E5E5E5"> that would</font>

424
00:17:50,940 --> 00:17:55,350
compress<font color="#E5E5E5"> every resource in the program</font>

425
00:17:52,770 --> 00:17:57,299
but<font color="#E5E5E5"> it wouldn't update the size of the</font>

426
00:17:55,350 --> 00:18:00,209
resources inside the PE headers so if

427
00:17:57,299 --> 00:18:01,500
you were to sum up<font color="#E5E5E5"> to sum all the sizes</font>

428
00:18:00,210 --> 00:18:03,540
of all<font color="#CCCCCC"> the</font><font color="#E5E5E5"> different resources you would</font>

429
00:18:01,500 --> 00:18:04,950
end up<font color="#E5E5E5"> with a size bigger than</font><font color="#CCCCCC"> the size</font>

430
00:18:03,540 --> 00:18:07,168
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the PE itself so you would</font>

431
00:18:04,950 --> 00:18:12,240
<font color="#E5E5E5">immediately know</font><font color="#CCCCCC"> that the file</font><font color="#E5E5E5"> has</font>

432
00:18:07,169 --> 00:18:14,040
<font color="#CCCCCC">impact something</font><font color="#E5E5E5"> not groundbreaking but</font>

433
00:18:12,240 --> 00:18:16,610
it's always<font color="#E5E5E5"> nice</font><font color="#CCCCCC"> to have is important</font>

434
00:18:14,040 --> 00:18:20,070
<font color="#E5E5E5">Isis</font><font color="#CCCCCC"> plugin so I'm going</font><font color="#E5E5E5"> to look for</font>

435
00:18:16,610 --> 00:18:21,840
combinations<font color="#E5E5E5"> of imports that would hint</font>

436
00:18:20,070 --> 00:18:23,760
at the program's behavior<font color="#E5E5E5"> so for</font>

437
00:18:21,840 --> 00:18:25,290
<font color="#E5E5E5">instance everyone knows about the</font>

438
00:18:23,760 --> 00:18:27,000
virtual log<font color="#CCCCCC"> by process memory</font><font color="#E5E5E5"> and</font>

439
00:18:25,290 --> 00:18:27,820
craveable thread that's used to inject

440
00:18:27,000 --> 00:18:29,890
code

441
00:18:27,820 --> 00:18:33,399
processes<font color="#CCCCCC"> I look for</font><font color="#E5E5E5"> networking</font>

442
00:18:29,890 --> 00:18:36,880
functions<font color="#E5E5E5"> process service and registry</font>

443
00:18:33,400 --> 00:18:39,340
manipulation<font color="#E5E5E5"> api's and also cutting</font>

444
00:18:36,880 --> 00:18:41,140
process imports that<font color="#E5E5E5"> can be used for</font>

445
00:18:39,340 --> 00:18:42,970
code injection<font color="#CCCCCC"> in</font><font color="#E5E5E5"> particular process</font>

446
00:18:41,140 --> 00:18:45,250
<font color="#E5E5E5">Halloween power loader and item bonding</font>

447
00:18:42,970 --> 00:18:47,350
which are<font color="#E5E5E5"> well</font><font color="#CCCCCC"> known techniques to</font>

448
00:18:45,250 --> 00:18:50,710
perform code injection<font color="#CCCCCC"> but</font><font color="#E5E5E5"> all rely</font><font color="#CCCCCC"> on</font>

449
00:18:47,350 --> 00:18:53,439
<font color="#E5E5E5">very specific assets of api's</font><font color="#CCCCCC"> there is a</font>

450
00:18:50,710 --> 00:18:55,840
small<font color="#CCCCCC"> example given here at the end of</font>

451
00:18:53,440 --> 00:18:57,340
this slide<font color="#CCCCCC"> again I'm</font><font color="#E5E5E5"> not sure if you can</font>

452
00:18:55,840 --> 00:19:00,580
read<font color="#E5E5E5"> but basically this is a program</font>

453
00:18:57,340 --> 00:19:02,800
<font color="#CCCCCC">that imports crate process</font><font color="#E5E5E5"> shall execute</font>

454
00:19:00,580 --> 00:19:04,929
and also create a<font color="#CCCCCC"> trade file and get</font><font color="#E5E5E5"> ten</font>

455
00:19:02,800 --> 00:19:07,720
<font color="#E5E5E5">paths so it doesn't require a</font><font color="#CCCCCC"> lot of</font>

456
00:19:04,930 --> 00:19:09,820
thinking<font color="#E5E5E5"> to figure out that this is a</font>

457
00:19:07,720 --> 00:19:11,830
program<font color="#CCCCCC"> that</font><font color="#E5E5E5"> probably creates a file in</font>

458
00:19:09,820 --> 00:19:15,610
the<font color="#E5E5E5"> temp</font><font color="#CCCCCC"> folder and tries to execute it</font>

459
00:19:11,830 --> 00:19:18,340
<font color="#E5E5E5">so most likely dropper behavior one of</font>

460
00:19:15,610 --> 00:19:20,590
<font color="#CCCCCC">the future works I'd like to</font><font color="#E5E5E5"> work on is</font>

461
00:19:18,340 --> 00:19:22,750
<font color="#CCCCCC">be able</font><font color="#E5E5E5"> being able to resolve imports</font>

462
00:19:20,590 --> 00:19:25,030
that<font color="#E5E5E5"> are loaded dynamically with get</font>

463
00:19:22,750 --> 00:19:26,590
<font color="#E5E5E5">proc get truck address and load</font><font color="#CCCCCC"> library</font>

464
00:19:25,030 --> 00:19:28,149
with<font color="#E5E5E5"> the capstone engine and I don't</font>

465
00:19:26,590 --> 00:19:31,570
<font color="#CCCCCC">know if that's possible but</font><font color="#E5E5E5"> I'd like to</font>

466
00:19:28,150 --> 00:19:34,030
try<font color="#CCCCCC"> one of</font><font color="#E5E5E5"> the most recent additions is</font>

467
00:19:31,570 --> 00:19:37,240
a Bitcoin<font color="#CCCCCC"> plugin so it just looks for</font>

468
00:19:34,030 --> 00:19:39,370
Bitcoin addresses in<font color="#E5E5E5"> a binary so what it</font>

469
00:19:37,240 --> 00:19:41,860
does is go through<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> possible</font>

470
00:19:39,370 --> 00:19:43,629
addresses<font color="#E5E5E5"> and then tries to validate the</font>

471
00:19:41,860 --> 00:19:45,790
Bitcoin addresses have a very<font color="#CCCCCC"> specific</font>

472
00:19:43,630 --> 00:19:49,630
structure<font color="#E5E5E5"> the first four bytes</font><font color="#CCCCCC"> I think</font>

473
00:19:45,790 --> 00:19:51,550
from<font color="#CCCCCC"> memory the</font><font color="#E5E5E5"> sha-256 of the rest of</font>

474
00:19:49,630 --> 00:19:53,260
the address so it's quite<font color="#CCCCCC"> easy</font><font color="#E5E5E5"> to figure</font>

475
00:19:51,550 --> 00:19:55,570
<font color="#E5E5E5">out whether the address</font><font color="#CCCCCC"> is actually</font><font color="#E5E5E5"> a</font>

476
00:19:53,260 --> 00:19:57,310
<font color="#CCCCCC">very</font><font color="#E5E5E5"> Bitcoin address or not so this is</font>

477
00:19:55,570 --> 00:19:59,230
the output<font color="#E5E5E5"> of the tool for the wanna cry</font>

478
00:19:57,310 --> 00:20:01,510
ransomware<font color="#E5E5E5"> so you can see</font><font color="#CCCCCC"> immediately</font>

479
00:19:59,230 --> 00:20:03,100
that even though it pretends<font color="#CCCCCC"> to come</font>

480
00:20:01,510 --> 00:20:05,110
<font color="#CCCCCC">from my crystal</font><font color="#E5E5E5"> corporation it contains</font>

481
00:20:03,100 --> 00:20:06,250
three different Bitcoin<font color="#E5E5E5"> addresses and if</font>

482
00:20:05,110 --> 00:20:08,800
you were to<font color="#CCCCCC"> google those</font><font color="#E5E5E5"> Bitcoin</font>

483
00:20:06,250 --> 00:20:10,870
<font color="#E5E5E5">addresses you would find reports for a</font>

484
00:20:08,800 --> 00:20:15,070
link to<font color="#CCCCCC"> the wanna cry attacks in</font>

485
00:20:10,870 --> 00:20:17,739
anything so this is a quite<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a</font>

486
00:20:15,070 --> 00:20:19,950
way to you<font color="#E5E5E5"> to to gain time</font><font color="#CCCCCC"> and perform</font>

487
00:20:17,740 --> 00:20:23,080
the analysis very very quickly

488
00:20:19,950 --> 00:20:25,180
finally I have this<font color="#CCCCCC"> authentical plug-in</font>

489
00:20:23,080 --> 00:20:29,560
that checks whether the digital

490
00:20:25,180 --> 00:20:31,930
signatures of the<font color="#E5E5E5"> PE is valid if I ever</font>

491
00:20:29,560 --> 00:20:35,260
find a<font color="#CCCCCC"> binary</font><font color="#E5E5E5"> that's claiming to come</font>

492
00:20:31,930 --> 00:20:36,820
from Adobe<font color="#E5E5E5"> or Oracle or Google and if</font>

493
00:20:35,260 --> 00:20:39,360
it's not signed<font color="#CCCCCC"> then immediately</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> can</font>

494
00:20:36,820 --> 00:20:41,129
raise an alert<font color="#E5E5E5"> and say that okay wait</font>

495
00:20:39,360 --> 00:20:42,840
second this<font color="#E5E5E5"> is supposed to come from a</font>

496
00:20:41,130 --> 00:20:44,340
<font color="#CCCCCC">well-known publisher but there was no</font>

497
00:20:42,840 --> 00:20:44,820
digital snake<font color="#CCCCCC"> sir</font><font color="#E5E5E5"> signature what's up</font>

498
00:20:44,340 --> 00:20:47,820
with that

499
00:20:44,820 --> 00:20:49,799
so far the the<font color="#CCCCCC"> plug-in</font><font color="#E5E5E5"> is mostly only</font>

500
00:20:47,820 --> 00:20:51,299
<font color="#E5E5E5">available in Windows</font><font color="#CCCCCC"> I have a UNIX</font>

501
00:20:49,799 --> 00:20:53,790
version that works but it<font color="#E5E5E5"> relies on open</font>

502
00:20:51,299 --> 00:20:58,679
<font color="#E5E5E5">SSL</font><font color="#CCCCCC"> which is a you know and horrible</font><font color="#E5E5E5"> to</font>

503
00:20:53,790 --> 00:21:00,330
<font color="#E5E5E5">work with on Linux so I can look at I</font>

504
00:20:58,679 --> 00:21:01,590
can<font color="#E5E5E5"> display the certificate issue but I</font>

505
00:21:00,330 --> 00:21:04,590
cannot<font color="#E5E5E5"> check the digital signature at</font>

506
00:21:01,590 --> 00:21:07,379
<font color="#CCCCCC">the moment</font><font color="#E5E5E5"> so there</font><font color="#CCCCCC"> are other problems</font>

507
00:21:04,590 --> 00:21:09,659
<font color="#E5E5E5">so how do we check the digital the</font>

508
00:21:07,380 --> 00:21:11,309
<font color="#CCCCCC">digital signature of program on</font><font color="#E5E5E5"> Linux</font>

509
00:21:09,660 --> 00:21:13,190
<font color="#E5E5E5">when you don't have Windows at rest so</font>

510
00:21:11,309 --> 00:21:16,020
there is another issue which is

511
00:21:13,190 --> 00:21:18,450
<font color="#E5E5E5">Microsoft executive hours often known by</font>

512
00:21:16,020 --> 00:21:20,760
hash in the security<font color="#CCCCCC"> catalog of the</font><font color="#E5E5E5"> OS</font>

513
00:21:18,450 --> 00:21:23,549
and they are not even signed themselves

514
00:21:20,760 --> 00:21:26,970
<font color="#E5E5E5">so is</font><font color="#CCCCCC"> there a</font><font color="#E5E5E5"> way I can export that and</font>

515
00:21:23,549 --> 00:21:28,590
into the tool<font color="#E5E5E5"> I have no idea finally</font>

516
00:21:26,970 --> 00:21:31,370
there's a<font color="#E5E5E5"> virustotal</font><font color="#CCCCCC"> plugin that</font><font color="#E5E5E5"> just</font>

517
00:21:28,590 --> 00:21:34,260
submits the hash to virustotal<font color="#E5E5E5"> and</font>

518
00:21:31,370 --> 00:21:36,659
returns<font color="#CCCCCC"> the new result</font><font color="#E5E5E5"> so all I can</font><font color="#CCCCCC"> say</font>

519
00:21:34,260 --> 00:21:38,750
<font color="#CCCCCC">is only the file hashes submitted if</font>

520
00:21:36,660 --> 00:21:41,970
some of you<font color="#E5E5E5"> are very privacy conscious</font>

521
00:21:38,750 --> 00:21:44,429
<font color="#E5E5E5">and you</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> need to register on</font>

522
00:21:41,970 --> 00:21:45,929
virustotal<font color="#CCCCCC"> account if you want to use</font>

523
00:21:44,429 --> 00:21:48,809
this<font color="#CCCCCC"> plugin because</font><font color="#E5E5E5"> they won't let you</font>

524
00:21:45,929 --> 00:21:50,540
<font color="#CCCCCC">use their api without a key by the</font><font color="#E5E5E5"> way</font>

525
00:21:48,809 --> 00:21:52,799
each plug-in<font color="#E5E5E5"> that I present it is</font>

526
00:21:50,540 --> 00:21:54,600
absolutely optional<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you don't have to</font>

527
00:21:52,799 --> 00:21:56,460
use<font color="#E5E5E5"> one of them if you don't like it</font>

528
00:21:54,600 --> 00:21:57,418
<font color="#E5E5E5">especially</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> don't want to send</font>

529
00:21:56,460 --> 00:21:59,630
<font color="#E5E5E5">queries</font><font color="#CCCCCC"> to virus although you really</font>

530
00:21:57,419 --> 00:22:03,030
<font color="#CCCCCC">don't have</font><font color="#E5E5E5"> to</font>

531
00:21:59,630 --> 00:22:04,530
finally I created a portal which is<font color="#CCCCCC"> a an</font>

532
00:22:03,030 --> 00:22:06,480
online portal<font color="#E5E5E5"> for people who want to try</font>

533
00:22:04,530 --> 00:22:10,830
out<font color="#CCCCCC"> the tool so</font><font color="#E5E5E5"> you can just submit</font>

534
00:22:06,480 --> 00:22:12,690
executables online or either the<font color="#CCCCCC"> P file</font>

535
00:22:10,830 --> 00:22:15,629
directly<font color="#E5E5E5"> or a link to it and you will</font>

536
00:22:12,690 --> 00:22:16,830
get the<font color="#CCCCCC"> report immediately</font><font color="#E5E5E5"> the samples</font>

537
00:22:15,630 --> 00:22:18,000
are not shared with<font color="#CCCCCC"> anyone and the only</font>

538
00:22:16,830 --> 00:22:19,830
<font color="#E5E5E5">one with access to the server but</font>

539
00:22:18,000 --> 00:22:21,090
basically you we<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to trust me</font>

540
00:22:19,830 --> 00:22:22,590
if you<font color="#E5E5E5"> don't want</font><font color="#CCCCCC"> to you can</font><font color="#E5E5E5"> just</font>

541
00:22:21,090 --> 00:22:26,220
download the source<font color="#CCCCCC"> code from github</font><font color="#E5E5E5"> and</font>

542
00:22:22,590 --> 00:22:29,850
<font color="#CCCCCC">run it locally so I'm just going</font><font color="#E5E5E5"> to give</font>

543
00:22:26,220 --> 00:22:32,130
you a quick look at how this<font color="#CCCCCC"> looks</font><font color="#E5E5E5"> like</font>

544
00:22:29,850 --> 00:22:34,590
so here you've got<font color="#CCCCCC"> a summary the pony</font>

545
00:22:32,130 --> 00:22:36,090
<font color="#CCCCCC">output this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> I still wanna cry or rent</font>

546
00:22:34,590 --> 00:22:40,500
somewhere so there are strings<font color="#CCCCCC"> related</font>

547
00:22:36,090 --> 00:22:43,520
<font color="#E5E5E5">to yes just 32 Bitcoin addresses in is a</font>

548
00:22:40,500 --> 00:22:46,679
few imports<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are quite suspicious</font>

549
00:22:43,520 --> 00:22:49,650
<font color="#E5E5E5">etc it's a trial also you know the virus</font>

550
00:22:46,679 --> 00:22:51,750
<font color="#CCCCCC">total score</font><font color="#E5E5E5"> which is</font><font color="#CCCCCC"> a 58 out of 62</font>

551
00:22:49,650 --> 00:22:53,010
which is a lot there's a tab for

552
00:22:51,750 --> 00:22:55,380
discussions if you

553
00:22:53,010 --> 00:22:56,640
share your findings<font color="#E5E5E5"> and then the</font><font color="#CCCCCC"> hopi</font>

554
00:22:55,380 --> 00:23:00,169
structure but<font color="#CCCCCC"> I'm not going</font><font color="#E5E5E5"> to go</font><font color="#CCCCCC"> over</font>

555
00:22:56,640 --> 00:23:02,700
that because<font color="#E5E5E5"> it's more specialized</font>

556
00:23:00,169 --> 00:23:04,230
one thing<font color="#CCCCCC"> that I'm quite proud</font><font color="#E5E5E5"> of with</font>

557
00:23:02,700 --> 00:23:07,169
this tool is<font color="#CCCCCC"> that it's quite easy</font><font color="#E5E5E5"> to use</font>

558
00:23:04,230 --> 00:23:09,029
<font color="#E5E5E5">and reuse</font><font color="#CCCCCC"> there's one thing I hate more</font>

559
00:23:07,169 --> 00:23:12,630
than<font color="#E5E5E5"> anything is when I try to use an</font>

560
00:23:09,029 --> 00:23:14,340
<font color="#CCCCCC">open-source tool</font><font color="#E5E5E5"> and see that it's it's</font>

561
00:23:12,630 --> 00:23:17,039
a<font color="#E5E5E5"> mess to compile I can't get it to</font><font color="#CCCCCC"> work</font>

562
00:23:14,340 --> 00:23:20,399
that<font color="#E5E5E5"> dependencies are missing so I</font>

563
00:23:17,039 --> 00:23:22,980
really did my best<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> Menai very</font>

564
00:23:20,399 --> 00:23:25,770
easy to install in<font color="#CCCCCC"> just</font><font color="#E5E5E5"> apt-get install</font>

565
00:23:22,980 --> 00:23:28,080
the dependencies<font color="#CCCCCC"> git clone the code from</font>

566
00:23:25,770 --> 00:23:31,110
github<font color="#CCCCCC"> see make make and that's it it</font>

567
00:23:28,080 --> 00:23:32,340
works you don't<font color="#E5E5E5"> have if you want extend</font>

568
00:23:31,110 --> 00:23:34,379
<font color="#E5E5E5">the tool you don't need to understand</font>

569
00:23:32,340 --> 00:23:36,289
the core you<font color="#E5E5E5"> can just use the API which</font>

570
00:23:34,380 --> 00:23:39,179
is I<font color="#CCCCCC"> think quite well documented and</font>

571
00:23:36,289 --> 00:23:40,470
just interact with<font color="#CCCCCC"> the people</font><font color="#E5E5E5"> without</font>

572
00:23:39,179 --> 00:23:43,230
<font color="#CCCCCC">having to understand the structure</font><font color="#E5E5E5"> being</font>

573
00:23:40,470 --> 00:23:44,940
beneath it<font color="#CCCCCC"> you can also use the pea</font>

574
00:23:43,230 --> 00:23:47,039
parser<font color="#E5E5E5"> and take it out</font><font color="#CCCCCC"> of the project</font>

575
00:23:44,940 --> 00:23:49,350
<font color="#E5E5E5">and use it</font><font color="#CCCCCC"> in your</font><font color="#E5E5E5"> own one of</font><font color="#CCCCCC"> the</font>

576
00:23:47,039 --> 00:23:51,629
examples I made available online is

577
00:23:49,350 --> 00:23:54,149
using this<font color="#E5E5E5"> P parser to write your own</font>

578
00:23:51,630 --> 00:23:58,080
process<font color="#CCCCCC"> hollowing code</font><font color="#E5E5E5"> so you</font><font color="#CCCCCC"> can find</font>

579
00:23:54,149 --> 00:24:00,570
<font color="#E5E5E5">all the resources</font><font color="#CCCCCC"> on my</font><font color="#E5E5E5"> blog</font><font color="#CCCCCC"> a few words</font>

580
00:23:58,080 --> 00:24:03,418
about the future<font color="#E5E5E5"> works so</font><font color="#CCCCCC"> one the most</font>

581
00:24:00,570 --> 00:24:05,908
the<font color="#CCCCCC"> most the things I</font><font color="#E5E5E5"> would like to do</font>

582
00:24:03,419 --> 00:24:09,210
most<font color="#E5E5E5"> is getting that authentical plug-in</font>

583
00:24:05,909 --> 00:24:11,159
to work on Linux<font color="#CCCCCC"> I would like</font><font color="#E5E5E5"> to work on</font>

584
00:24:09,210 --> 00:24:14,220
icon recognition for so<font color="#E5E5E5"> if for instance</font>

585
00:24:11,159 --> 00:24:16,110
<font color="#CCCCCC">in executable files has a PDF document</font>

586
00:24:14,220 --> 00:24:18,210
<font color="#E5E5E5">icon</font><font color="#CCCCCC"> I think this is something</font><font color="#E5E5E5"> we can</font>

587
00:24:16,110 --> 00:24:21,330
detect automatically and raise alerts

588
00:24:18,210 --> 00:24:23,340
for very quickly<font color="#CCCCCC"> I mentioned wanting to</font>

589
00:24:21,330 --> 00:24:26,010
use capstone engine to resolve imports

590
00:24:23,340 --> 00:24:29,370
and for as for the web portal<font color="#CCCCCC"> I would</font>

591
00:24:26,010 --> 00:24:31,799
love<font color="#E5E5E5"> to be able</font><font color="#CCCCCC"> to work a bit on some</font>

592
00:24:29,370 --> 00:24:33,570
more bigger data capabilities<font color="#CCCCCC"> like</font>

593
00:24:31,799 --> 00:24:35,730
having a search engine<font color="#E5E5E5"> within people of</font>

594
00:24:33,570 --> 00:24:38,490
search for malware based on<font color="#E5E5E5"> section</font>

595
00:24:35,730 --> 00:24:41,610
names or any characteristics you<font color="#E5E5E5"> want</font>

596
00:24:38,490 --> 00:24:43,350
and finally possibly<font color="#CCCCCC"> Python bindings</font><font color="#E5E5E5"> in</font>

597
00:24:41,610 --> 00:24:46,229
<font color="#E5E5E5">the future I've started</font><font color="#CCCCCC"> working on</font><font color="#E5E5E5"> this</font>

598
00:24:43,350 --> 00:24:48,928
<font color="#E5E5E5">but it's far from ready yet</font>

599
00:24:46,230 --> 00:24:51,000
then I'm<font color="#E5E5E5"> just going to do a short</font>

600
00:24:48,929 --> 00:24:53,490
demonstration<font color="#E5E5E5"> of the tool to illustrate</font>

601
00:24:51,000 --> 00:24:58,080
how<font color="#E5E5E5"> it can help people during their</font>

602
00:24:53,490 --> 00:25:00,750
<font color="#E5E5E5">analyzes so this is a sample coming from</font>

603
00:24:58,080 --> 00:25:03,029
the apt one CSI campaign from<font color="#E5E5E5"> 2014 it's</font>

604
00:25:00,750 --> 00:25:05,250
quite<font color="#CCCCCC"> all</font><font color="#E5E5E5"> but I really like this example</font>

605
00:25:03,029 --> 00:25:06,279
<font color="#CCCCCC">because it</font><font color="#E5E5E5"> just works perfectly</font><font color="#CCCCCC"> it's not</font>

606
00:25:05,250 --> 00:25:08,320
<font color="#CCCCCC">always the case</font>

607
00:25:06,279 --> 00:25:11,950
<font color="#E5E5E5">to be honest</font><font color="#CCCCCC"> about this but when it</font>

608
00:25:08,320 --> 00:25:13,989
works<font color="#CCCCCC"> it's really really</font><font color="#E5E5E5"> nice</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> let me</font>

609
00:25:11,950 --> 00:25:16,889
launch<font color="#E5E5E5"> just colonize this of this</font>

610
00:25:13,989 --> 00:25:16,889
program

611
00:25:32,350 --> 00:25:36,449
and<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to launch all the</font>

612
00:25:34,120 --> 00:25:36,449
<font color="#E5E5E5">plugins</font>

613
00:25:41,830 --> 00:25:47,949
<font color="#E5E5E5">I hope</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> then we go so I have to go</font>

614
00:25:44,769 --> 00:25:51,759
up a<font color="#CCCCCC"> bit so here we see the compilation</font>

615
00:25:47,950 --> 00:25:54,970
days<font color="#E5E5E5"> which was when we received the file</font>

616
00:25:51,759 --> 00:25:58,360
in the Sun I worked at<font color="#E5E5E5"> it was somewhere</font>

617
00:25:54,970 --> 00:26:02,470
around January 17th<font color="#CCCCCC"> so we knew it was a</font>

618
00:25:58,360 --> 00:26:04,269
<font color="#E5E5E5">very fresh</font><font color="#CCCCCC"> train there was reference</font>

619
00:26:02,470 --> 00:26:06,909
system Chinese<font color="#E5E5E5"> language inside the PE</font>

620
00:26:04,269 --> 00:26:08,169
file<font color="#E5E5E5"> at the time there were</font><font color="#CCCCCC"> there</font>

621
00:26:06,909 --> 00:26:12,100
<font color="#CCCCCC">weren't any clan Meili signatures</font><font color="#E5E5E5"> but</font>

622
00:26:08,169 --> 00:26:14,169
<font color="#CCCCCC">there is now so we see here that</font><font color="#E5E5E5"> it's</font>

623
00:26:12,100 --> 00:26:17,889
creating<font color="#E5E5E5"> processes and creating files in</font>

624
00:26:14,169 --> 00:26:19,359
the temporary<font color="#E5E5E5"> folder yeah this is</font>

625
00:26:17,889 --> 00:26:21,279
possibly a dropper because when you look

626
00:26:19,359 --> 00:26:22,899
<font color="#E5E5E5">at the resources then one of the</font>

627
00:26:21,279 --> 00:26:25,720
resources<font color="#E5E5E5"> is a PDF document</font><font color="#CCCCCC"> which is</font>

628
00:26:22,899 --> 00:26:28,299
<font color="#CCCCCC">weird</font><font color="#E5E5E5"> why would the P file and embark in</font>

629
00:26:25,720 --> 00:26:30,460
a PDF file<font color="#CCCCCC"> who knows there is</font><font color="#E5E5E5"> also</font>

630
00:26:28,299 --> 00:26:34,359
another<font color="#E5E5E5"> P executable embarked inside the</font>

631
00:26:30,460 --> 00:26:37,029
<font color="#CCCCCC">file and all you know the resource is a</font>

632
00:26:34,359 --> 00:26:40,059
month<font color="#E5E5E5"> for 93% of the executive also</font>

633
00:26:37,029 --> 00:26:45,639
<font color="#E5E5E5">mostly this is</font><font color="#CCCCCC"> a file whose only role is</font>

634
00:26:40,059 --> 00:26:47,109
<font color="#CCCCCC">to drop</font><font color="#E5E5E5"> all the files</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> constants</font>

635
00:26:45,639 --> 00:26:49,168
related to this as well<font color="#E5E5E5"> so there was a</font>

636
00:26:47,109 --> 00:26:52,590
strange obfuscation being performed and

637
00:26:49,169 --> 00:26:55,450
now there<font color="#E5E5E5"> are lots of lots of different</font>

638
00:26:52,590 --> 00:26:57,789
signatures for<font color="#CCCCCC"> an entire software</font><font color="#E5E5E5"> so</font>

639
00:26:55,450 --> 00:27:00,369
what we can<font color="#E5E5E5"> do from there is extract all</font>

640
00:26:57,789 --> 00:27:06,090
<font color="#CCCCCC">the resources so</font><font color="#E5E5E5"> you look at them</font><font color="#CCCCCC"> very</font>

641
00:27:00,369 --> 00:27:06,090
closer<font color="#E5E5E5"> you I create a folder</font><font color="#CCCCCC"> called out</font>

642
00:27:08,609 --> 00:27:14,129
I'm going<font color="#E5E5E5"> to go to the bracele folder</font>

643
00:27:11,139 --> 00:27:14,129
and<font color="#E5E5E5"> look at what's inside it</font>

644
00:27:17,060 --> 00:27:23,480
<font color="#CCCCCC">absolutely</font><font color="#E5E5E5"> there's alcohol or so what's</font>

645
00:27:20,030 --> 00:27:26,170
in there is a PDF documents<font color="#E5E5E5"> the icon of</font>

646
00:27:23,480 --> 00:27:29,270
the<font color="#CCCCCC"> of the pin file which</font><font color="#E5E5E5"> is a PDF icon</font>

647
00:27:26,170 --> 00:27:32,030
<font color="#CCCCCC">this PDF</font><font color="#E5E5E5"> was simply decoy document that</font>

648
00:27:29,270 --> 00:27:33,200
<font color="#E5E5E5">would be opened when the user clicked on</font>

649
00:27:32,030 --> 00:27:35,870
the file didn't<font color="#E5E5E5"> make them believe that</font>

650
00:27:33,200 --> 00:27:38,060
<font color="#CCCCCC">it had you know</font><font color="#E5E5E5"> open the an actual PDF</font>

651
00:27:35,870 --> 00:27:41,719
<font color="#CCCCCC">document I</font><font color="#E5E5E5"> didn't work</font><font color="#CCCCCC"> and here there</font>

652
00:27:38,060 --> 00:27:43,760
was a second<font color="#CCCCCC"> executive which was dropped</font>

653
00:27:41,720 --> 00:27:45,740
on<font color="#E5E5E5"> the system and we</font><font color="#CCCCCC"> seemed executed so</font>

654
00:27:43,760 --> 00:27:50,710
I'm going<font color="#CCCCCC"> to perform</font><font color="#E5E5E5"> the analysis on</font>

655
00:27:45,740 --> 00:27:50,710
<font color="#E5E5E5">this section</font><font color="#CCCCCC"> in the second program</font>

656
00:28:02,640 --> 00:28:05,420
now go

657
00:28:08,360 --> 00:28:14,850
see here we<font color="#CCCCCC"> see so they're the refers to</font>

658
00:28:13,590 --> 00:28:16,050
the Chinese language are not present

659
00:28:14,850 --> 00:28:17,520
anymore

660
00:28:16,050 --> 00:28:20,580
there are still constants related to

661
00:28:17,520 --> 00:28:22,980
this<font color="#E5E5E5"> and now the interesting import of</font>

662
00:28:20,580 --> 00:28:25,710
this program<font color="#E5E5E5"> or create process</font>

663
00:28:22,980 --> 00:28:27,930
<font color="#CCCCCC">Internet's open</font><font color="#E5E5E5"> Internet open URL etc so</font>

664
00:28:25,710 --> 00:28:29,460
we can easily infer that the first<font color="#CCCCCC"> part</font>

665
00:28:27,930 --> 00:28:31,200
was the dropper<font color="#E5E5E5"> and the second part is</font>

666
00:28:29,460 --> 00:28:33,320
actually the<font color="#E5E5E5"> implant is going to perform</font>

667
00:28:31,200 --> 00:28:36,360
<font color="#CCCCCC">a download and</font><font color="#E5E5E5"> execute</font>

668
00:28:33,320 --> 00:28:38,310
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> going to be looking for commands</font>

669
00:28:36,360 --> 00:28:43,050
<font color="#E5E5E5">on a remote server</font><font color="#CCCCCC"> and just</font><font color="#E5E5E5"> executing</font>

670
00:28:38,310 --> 00:28:45,450
them and going and also a lot<font color="#CCCCCC"> of</font>

671
00:28:43,050 --> 00:28:47,040
signature<font color="#E5E5E5"> so that's it for the example</font>

672
00:28:45,450 --> 00:28:48,510
one last thing I<font color="#E5E5E5"> would</font><font color="#CCCCCC"> like to mention</font>

673
00:28:47,040 --> 00:28:50,700
<font color="#E5E5E5">is</font><font color="#CCCCCC"> if you want to look at the pea</font>

674
00:28:48,510 --> 00:28:54,240
structure in more details<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> just</font>

675
00:28:50,700 --> 00:28:56,940
dump any any part<font color="#E5E5E5"> of the structure you</font>

676
00:28:54,240 --> 00:29:00,900
<font color="#E5E5E5">want so there you go you have all the</font>

677
00:28:56,940 --> 00:29:02,670
imports the different sections<font color="#E5E5E5"> etc etc</font>

678
00:29:00,900 --> 00:29:04,470
and if there is any part of<font color="#E5E5E5"> this that</font>

679
00:29:02,670 --> 00:29:10,610
you want<font color="#E5E5E5"> to reuse in another tool you</font>

680
00:29:04,470 --> 00:29:10,610
<font color="#CCCCCC">can just</font><font color="#E5E5E5"> use the JSON output formats</font>

681
00:29:14,530 --> 00:29:20,020
and there and you can feed<font color="#CCCCCC"> it to another</font>

682
00:29:17,170 --> 00:29:22,060
<font color="#CCCCCC">to like so I</font><font color="#E5E5E5"> think that's</font><font color="#CCCCCC"> it and</font><font color="#E5E5E5"> be</font>

683
00:29:20,020 --> 00:29:23,680
happy<font color="#CCCCCC"> to answer any questions otherwise</font>

684
00:29:22,060 --> 00:29:25,510
<font color="#CCCCCC">the project</font><font color="#E5E5E5"> is available on github and</font>

685
00:29:23,680 --> 00:29:28,060
feel free to download it<font color="#E5E5E5"> tweak it and</font>

686
00:29:25,510 --> 00:29:31,280
send me<font color="#E5E5E5"> back reports thank you</font><font color="#CCCCCC"> very much</font>

687
00:29:28,060 --> 00:29:31,280
[Applause]

688
00:29:41,369 --> 00:29:47,649
<font color="#CCCCCC">I haven't counted them</font><font color="#E5E5E5"> I think</font><font color="#CCCCCC"> it's</font>

689
00:29:44,499 --> 00:29:49,720
something<font color="#E5E5E5"> like two or</font><font color="#CCCCCC"> three gigs</font><font color="#E5E5E5"> files</font>

690
00:29:47,649 --> 00:29:52,559
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> not much but I only keep</font>

691
00:29:49,720 --> 00:29:55,360
executables<font color="#CCCCCC"> I rejected everything</font><font color="#E5E5E5"> else I</font>

692
00:29:52,559 --> 00:29:56,860
think<font color="#CCCCCC"> most people</font><font color="#E5E5E5"> are not very</font>

693
00:29:55,360 --> 00:29:58,449
interested in using<font color="#E5E5E5"> the portal for</font>

694
00:29:56,860 --> 00:30:01,059
anything<font color="#E5E5E5"> else that just testing the tool</font>

695
00:29:58,450 --> 00:30:02,409
<font color="#E5E5E5">so people will upload one or two files</font>

696
00:30:01,059 --> 00:30:03,879
to see how it works and<font color="#E5E5E5"> whether it's</font>

697
00:30:02,409 --> 00:30:05,139
<font color="#CCCCCC">interesting and then if they are</font>

698
00:30:03,879 --> 00:30:06,189
<font color="#E5E5E5">satisfied with it I assume</font><font color="#CCCCCC"> that you</font>

699
00:30:05,139 --> 00:30:08,019
download the code and<font color="#CCCCCC"> run it locally</font>

700
00:30:06,190 --> 00:30:09,850
<font color="#CCCCCC">because they don't have to send</font><font color="#E5E5E5"> me</font>

701
00:30:08,019 --> 00:30:18,570
anything<font color="#CCCCCC"> which</font><font color="#E5E5E5"> is perfectly okay</font>

702
00:30:09,850 --> 00:30:18,570
as far<font color="#E5E5E5"> as I'm concerned anyone else yep</font>

703
00:30:20,150 --> 00:30:24,800
yeah it's<font color="#E5E5E5"> quite easy in the</font><font color="#CCCCCC"> sense that</font>

704
00:30:22,760 --> 00:30:27,590
I've written a lot<font color="#E5E5E5"> of documentation</font>

705
00:30:24,800 --> 00:30:29,419
<font color="#CCCCCC">there are lots well maybe not a lot</font><font color="#E5E5E5"> of</font>

706
00:30:27,590 --> 00:30:31,520
<font color="#CCCCCC">sample</font><font color="#E5E5E5"> plugins that all the code of the</font>

707
00:30:29,420 --> 00:30:33,380
other plugins<font color="#CCCCCC"> is I think</font><font color="#E5E5E5"> mostly clear</font>

708
00:30:31,520 --> 00:30:34,700
<font color="#E5E5E5">I've had there is one example and then</font>

709
00:30:33,380 --> 00:30:36,680
<font color="#E5E5E5">you can use the other</font><font color="#CCCCCC"> plug-in as a</font>

710
00:30:34,700 --> 00:30:38,180
reference<font color="#E5E5E5"> so you hopefully it should be</font>

711
00:30:36,680 --> 00:30:40,310
quite easy<font color="#CCCCCC"> for you but if you ever</font>

712
00:30:38,180 --> 00:30:41,540
<font color="#CCCCCC">encounter any problems then it means I</font>

713
00:30:40,310 --> 00:30:43,940
have done my job

714
00:30:41,540 --> 00:30:49,159
wrong and the<font color="#CCCCCC"> documentation is not good</font>

715
00:30:43,940 --> 00:30:51,890
enough<font color="#CCCCCC"> so</font><font color="#E5E5E5"> be sure to let me know is you</font>

716
00:30:49,160 --> 00:30:54,050
<font color="#E5E5E5">have to subclass a class and then</font>

717
00:30:51,890 --> 00:30:55,700
implement a<font color="#CCCCCC"> single method</font><font color="#E5E5E5"> and then you</font>

718
00:30:54,050 --> 00:30:58,580
can interact<font color="#E5E5E5"> with the people through the</font>

719
00:30:55,700 --> 00:31:00,470
API but that's it<font color="#CCCCCC"> you just have to</font>

720
00:30:58,580 --> 00:31:01,370
<font color="#CCCCCC">implement a single</font><font color="#E5E5E5"> method well maybe two</font>

721
00:31:00,470 --> 00:31:03,500
or three methods because you have to

722
00:31:01,370 --> 00:31:06,080
provide the plug-in name<font color="#E5E5E5"> apart from this</font>

723
00:31:03,500 --> 00:31:08,000
you<font color="#E5E5E5"> just drop in your</font><font color="#CCCCCC"> plugin inside the</font>

724
00:31:06,080 --> 00:31:09,740
default<font color="#E5E5E5"> program folder just</font><font color="#CCCCCC"> drop the</font>

725
00:31:08,000 --> 00:31:11,120
<font color="#CCCCCC">Esso or the</font><font color="#E5E5E5"> other file inside the same</font>

726
00:31:09,740 --> 00:31:19,040
<font color="#CCCCCC">folder as</font><font color="#E5E5E5"> memorize and it's just going</font>

727
00:31:11,120 --> 00:31:20,000
<font color="#E5E5E5">to be detected in automatically okay</font>

728
00:31:19,040 --> 00:31:22,210
well thank you<font color="#CCCCCC"> very much for</font><font color="#E5E5E5"> your</font>

729
00:31:20,000 --> 00:31:22,210
attention

