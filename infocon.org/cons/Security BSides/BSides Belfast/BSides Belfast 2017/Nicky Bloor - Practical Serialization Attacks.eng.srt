1
00:00:03,820 --> 00:00:10,719
I'm a managing<font color="#E5E5E5"> security consultant at</font>

2
00:00:06,399 --> 00:00:12,090
<font color="#E5E5E5">NCC group X software developer I used to</font>

3
00:00:10,719 --> 00:00:15,489
develop all<font color="#CCCCCC"> kinds</font><font color="#E5E5E5"> of software from</font>

4
00:00:12,090 --> 00:00:19,390
desktop software to<font color="#CCCCCC"> web so games and</font>

5
00:00:15,490 --> 00:00:22,210
even some<font color="#CCCCCC"> factoring machines and</font><font color="#E5E5E5"> I think</font>

6
00:00:19,390 --> 00:00:25,270
<font color="#CCCCCC">myself as a as a hacker</font><font color="#E5E5E5"> breaker I like</font>

7
00:00:22,210 --> 00:00:28,300
to<font color="#E5E5E5"> I like to bake stuff bad stuff to</font>

8
00:00:25,270 --> 00:00:30,099
break stuff so problems outside<font color="#CCCCCC"> of work</font>

9
00:00:28,300 --> 00:00:33,460
and<font color="#E5E5E5"> technology and I was kind of stuff</font>

10
00:00:30,099 --> 00:00:36,100
I'm a hiker<font color="#E5E5E5"> and what grandma and I mixed</font>

11
00:00:33,460 --> 00:00:37,340
to be be on the<font color="#E5E5E5"> Internet Twitter and</font>

12
00:00:36,100 --> 00:00:41,540
<font color="#CCCCCC">what-have-you</font>

13
00:00:37,340 --> 00:00:44,240
so first thing thumbs up if you<font color="#E5E5E5"> would</font>

14
00:00:41,540 --> 00:00:47,680
know what<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> if you saw this packet</font>

15
00:00:44,240 --> 00:00:47,680
<font color="#E5E5E5">during a pen</font><font color="#CCCCCC"> test</font>

16
00:00:48,930 --> 00:00:55,449
<font color="#CCCCCC">that's right</font><font color="#E5E5E5"> welcome</font>

17
00:00:51,289 --> 00:00:58,820
cool<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> start off with a story</font><font color="#E5E5E5"> I</font>

18
00:00:55,449 --> 00:01:02,030
went to a customer<font color="#E5E5E5"> site to assess a web</font>

19
00:00:58,820 --> 00:01:04,040
application<font color="#E5E5E5"> except when I got there they</font>

20
00:01:02,030 --> 00:01:06,140
told me I needed<font color="#CCCCCC"> a specific</font><font color="#E5E5E5"> old version</font>

21
00:01:04,040 --> 00:01:09,409
<font color="#E5E5E5">of Java that's</font><font color="#CCCCCC"> a bit</font><font color="#E5E5E5"> strange is a web</font>

22
00:01:06,140 --> 00:01:13,039
<font color="#E5E5E5">app sure I would buy the only but so I</font>

23
00:01:09,409 --> 00:01:15,170
<font color="#E5E5E5">thought maybe it's a job a client</font>

24
00:01:13,039 --> 00:01:19,880
application that communicates<font color="#E5E5E5"> over HTTP</font>

25
00:01:15,170 --> 00:01:22,729
<font color="#CCCCCC">so I started to build a VM and asset to</font>

26
00:01:19,880 --> 00:01:24,408
poke around<font color="#E5E5E5"> with this application and I</font>

27
00:01:22,729 --> 00:01:27,530
know it's the<font color="#E5E5E5"> application eventually</font>

28
00:01:24,409 --> 00:01:31,550
responded so just our test<font color="#E5E5E5"> logging</font>

29
00:01:27,530 --> 00:01:33,679
request with<font color="#CCCCCC"> something saying that the</font>

30
00:01:31,550 --> 00:01:35,810
account was<font color="#CCCCCC"> locked</font><font color="#E5E5E5"> out there are strange</font>

31
00:01:33,679 --> 00:01:38,400
because I haven't seen any requests go

32
00:01:35,810 --> 00:01:41,830
through web<font color="#CCCCCC"> suite</font>

33
00:01:38,400 --> 00:01:47,020
so fried up wireshark<font color="#CCCCCC"> see what was going</font>

34
00:01:41,830 --> 00:01:49,390
on and and it<font color="#CCCCCC"> turns</font><font color="#E5E5E5"> out that it was just</font>

35
00:01:47,020 --> 00:01:52,270
<font color="#CCCCCC">a job</font><font color="#E5E5E5"> application</font>

36
00:01:49,390 --> 00:01:53,680
served by HTTP page so it was it was<font color="#CCCCCC"> a</font>

37
00:01:52,270 --> 00:01:55,539
<font color="#CCCCCC">Java Web Start</font><font color="#E5E5E5"> application so it was</font>

38
00:01:53,680 --> 00:02:01,380
actually<font color="#CCCCCC"> just</font><font color="#E5E5E5"> that okay I think client</font>

39
00:01:55,540 --> 00:02:04,180
application<font color="#E5E5E5"> and with Wireshark running</font><font color="#CCCCCC"> I</font>

40
00:02:01,380 --> 00:02:06,820
<font color="#CCCCCC">generate some logging requests and I saw</font>

41
00:02:04,180 --> 00:02:08,140
a packet like<font color="#CCCCCC"> freeze drug login request</font>

42
00:02:06,820 --> 00:02:13,870
<font color="#CCCCCC">a packet like</font><font color="#E5E5E5"> the one that I just</font><font color="#CCCCCC"> showed</font>

43
00:02:08,139 --> 00:02:18,250
you<font color="#CCCCCC"> so it was a a</font><font color="#E5E5E5"> login pocket like I</font>

44
00:02:13,870 --> 00:02:21,340
say<font color="#E5E5E5"> not let's see the discovery of a</font>

45
00:02:18,250 --> 00:02:24,160
vulnerability<font color="#CCCCCC"> that</font><font color="#E5E5E5"> survived multiple</font>

46
00:02:21,340 --> 00:02:25,330
previous pen tests every time the new

47
00:02:24,160 --> 00:02:26,829
version<font color="#E5E5E5"> in this application was rolled</font>

48
00:02:25,330 --> 00:02:29,010
<font color="#E5E5E5">out and on the network they had it been</font>

49
00:02:26,830 --> 00:02:29,010
tested

50
00:02:29,430 --> 00:02:35,840
<font color="#E5E5E5">a fold on</font><font color="#CCCCCC"> a server that had a hard</font>

51
00:02:32,819 --> 00:02:39,390
exterior<font color="#E5E5E5"> but there was</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> inside</font>

52
00:02:35,840 --> 00:02:41,280
<font color="#E5E5E5">but</font><font color="#CCCCCC"> on that server and</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> I was able</font>

53
00:02:39,390 --> 00:02:44,790
to jump around the entire environment

54
00:02:41,280 --> 00:02:46,230
and from<font color="#CCCCCC"> pre-production to production I</font>

55
00:02:44,790 --> 00:02:48,679
was in at least three different<font color="#E5E5E5"> data</font>

56
00:02:46,230 --> 00:02:48,679
<font color="#CCCCCC">centers</font>

57
00:02:51,410 --> 00:02:57,790
so I would have<font color="#E5E5E5"> missed up one</font><font color="#CCCCCC"> ability as</font>

58
00:02:54,350 --> 00:02:59,840
<font color="#CCCCCC">well as all of</font><font color="#E5E5E5"> the previous pen</font><font color="#CCCCCC"> testers</font>

59
00:02:57,790 --> 00:03:04,579
<font color="#CCCCCC">but I've done</font><font color="#E5E5E5"> a lot of research into</font>

60
00:02:59,840 --> 00:03:06,620
that<font color="#CCCCCC"> and Java D</font><font color="#E5E5E5"> civilization stuff</font><font color="#CCCCCC"> so as</font>

61
00:03:04,580 --> 00:03:07,430
soon as<font color="#E5E5E5"> I saw a packet I recognized that</font>

62
00:03:06,620 --> 00:03:09,760
I knew<font color="#E5E5E5"> what</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do</font>

63
00:03:07,430 --> 00:03:11,720
I've been talking<font color="#CCCCCC"> about it</font><font color="#E5E5E5"> today</font>

64
00:03:09,760 --> 00:03:13,760
<font color="#E5E5E5">everyone in this industry</font><font color="#CCCCCC"> needs to</font><font color="#E5E5E5"> be</font>

65
00:03:11,720 --> 00:03:18,560
learning constantly<font color="#E5E5E5"> so the private</font>

66
00:03:13,760 --> 00:03:20,390
starkest so look at these kind<font color="#CCCCCC"> of look</font>

67
00:03:18,560 --> 00:03:22,130
how we<font color="#E5E5E5"> can</font><font color="#CCCCCC"> identify these kind of</font>

68
00:03:20,390 --> 00:03:23,989
vulnerabilities<font color="#E5E5E5"> or potential entry</font>

69
00:03:22,130 --> 00:03:27,880
points and<font color="#E5E5E5"> how we can then attack them</font>

70
00:03:23,990 --> 00:03:27,880
<font color="#E5E5E5">using existing tools</font>

71
00:03:30,030 --> 00:03:36,800
so the first thing to<font color="#CCCCCC"> point out is that</font>

72
00:03:33,710 --> 00:03:38,670
<font color="#CCCCCC">that</font><font color="#E5E5E5"> score doesn't mean point-and-click</font>

73
00:03:36,800 --> 00:03:42,230
<font color="#E5E5E5">generally these kind of attacks are a</font>

74
00:03:38,670 --> 00:03:45,239
bit more involved<font color="#E5E5E5"> but I would put that I</font>

75
00:03:42,230 --> 00:03:48,239
<font color="#E5E5E5">would put</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> in line with of many or</font>

76
00:03:45,240 --> 00:03:50,490
<font color="#E5E5E5">SQL injection about to poke</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> a bit</font>

77
00:03:48,240 --> 00:03:53,069
<font color="#E5E5E5">more to</font><font color="#CCCCCC"> it equerry a bit more dry and</font>

78
00:03:50,490 --> 00:03:55,680
bypass<font color="#E5E5E5"> and fillers</font>

79
00:03:53,069 --> 00:03:58,399
but they are<font color="#E5E5E5"> rewarding these kind of</font>

80
00:03:55,680 --> 00:04:01,739
vulnerabilities generally get you

81
00:03:58,400 --> 00:04:04,010
command execution<font color="#E5E5E5"> on a box so it's worth</font>

82
00:04:01,739 --> 00:04:04,010
<font color="#E5E5E5">doing</font>

83
00:04:06,590 --> 00:04:12,560
so we need to understand how serious<font color="#E5E5E5"> a</font>

84
00:04:10,190 --> 00:04:17,089
<font color="#CCCCCC">ssin works and how these kind of</font>

85
00:04:12,560 --> 00:04:19,160
<font color="#E5E5E5">volleyball is can be can be identified</font>

86
00:04:17,089 --> 00:04:20,899
and attacked in order to<font color="#CCCCCC"> sudhir it</font>

87
00:04:19,160 --> 00:04:25,190
effectively so<font color="#E5E5E5"> start with some</font>

88
00:04:20,899 --> 00:04:28,460
background<font color="#CCCCCC"> the serialization the process</font>

89
00:04:25,190 --> 00:04:30,950
is the process<font color="#CCCCCC"> of converting one-time</font>

90
00:04:28,460 --> 00:04:33,500
variables and program objects that are

91
00:04:30,950 --> 00:04:35,750
<font color="#CCCCCC">in memory in so form</font><font color="#E5E5E5"> that can be stored</font>

92
00:04:33,500 --> 00:04:38,590
<font color="#E5E5E5">on the desk or in a database or</font>

93
00:04:35,750 --> 00:04:38,590
<font color="#E5E5E5">transferred over the network</font>

94
00:04:39,080 --> 00:04:44,659
the<font color="#CCCCCC"> best</font><font color="#E5E5E5"> process be civilization</font><font color="#CCCCCC"> takes</font>

95
00:04:42,319 --> 00:04:48,460
that data and turns it back<font color="#E5E5E5"> into</font>

96
00:04:44,660 --> 00:04:48,460
<font color="#CCCCCC">one-time objects and variables</font>

97
00:04:49,900 --> 00:04:54,280
the more complex<font color="#E5E5E5"> the</font><font color="#CCCCCC"> one-time data</font>

98
00:04:52,720 --> 00:04:57,040
structures<font color="#E5E5E5"> are so</font><font color="#CCCCCC"> object oriented</font>

99
00:04:54,280 --> 00:04:59,260
programming languages have<font color="#E5E5E5"> objects</font>

100
00:04:57,040 --> 00:05:02,260
embedded<font color="#CCCCCC"> within objects</font><font color="#E5E5E5"> the more complex</font>

101
00:04:59,260 --> 00:05:05,490
<font color="#CCCCCC">a civilization than format and process</font>

102
00:05:02,260 --> 00:05:09,340
has to<font color="#CCCCCC"> be and the more</font><font color="#E5E5E5"> complex that but</font>

103
00:05:05,490 --> 00:05:13,390
<font color="#CCCCCC">family is not processes the more</font><font color="#E5E5E5"> scope</font>

104
00:05:09,340 --> 00:05:16,270
the risk<font color="#E5E5E5"> for vulnerabilities there is no</font>

105
00:05:13,390 --> 00:05:19,210
<font color="#E5E5E5">fixed format for serialized data can be</font>

106
00:05:16,270 --> 00:05:22,090
<font color="#E5E5E5">a custom format it can be a</font><font color="#CCCCCC"> built-in</font>

107
00:05:19,210 --> 00:05:23,680
<font color="#E5E5E5">farm up that this provided is part of</font>

108
00:05:22,090 --> 00:05:30,390
the programming<font color="#CCCCCC"> language our API</font><font color="#E5E5E5"> is</font>

109
00:05:23,680 --> 00:05:30,390
standard<font color="#E5E5E5"> API use Jason XML and</font>

110
00:05:32,309 --> 00:05:37,769
similarly<font color="#E5E5E5"> built informants are easier to</font>

111
00:05:35,459 --> 00:05:42,979
<font color="#CCCCCC">use you don't</font><font color="#E5E5E5"> have to do anything to use</font>

112
00:05:37,769 --> 00:05:45,749
them<font color="#CCCCCC"> so focusing on</font><font color="#E5E5E5"> Java for the stock</font>

113
00:05:42,979 --> 00:05:47,459
<font color="#CCCCCC">but so</font><font color="#E5E5E5"> high level concepts they apply it</font>

114
00:05:45,749 --> 00:05:51,179
said so other languages in technologies

115
00:05:47,459 --> 00:05:54,059
for example<font color="#CCCCCC"> PHP and let's say the built</font>

116
00:05:51,179 --> 00:05:59,719
in civilization is easy to<font color="#E5E5E5"> use so in</font>

117
00:05:54,059 --> 00:06:02,309
Java<font color="#E5E5E5"> we have in order to make Java cross</font>

118
00:05:59,719 --> 00:06:04,610
serializable<font color="#E5E5E5"> we just implement the</font>

119
00:06:02,309 --> 00:06:08,279
interface<font color="#CCCCCC"> Java</font><font color="#E5E5E5"> dot</font><font color="#CCCCCC"> IO dot serializable</font>

120
00:06:04,610 --> 00:06:12,089
once we've done that we can<font color="#E5E5E5"> pass an</font>

121
00:06:08,279 --> 00:06:14,549
instance of<font color="#E5E5E5"> that object in time object</font>

122
00:06:12,089 --> 00:06:17,939
to an object output stream<font color="#E5E5E5"> and we can</font>

123
00:06:14,549 --> 00:06:20,818
<font color="#E5E5E5">write it to a file to a network can over</font>

124
00:06:17,939 --> 00:06:23,099
a network<font color="#E5E5E5"> connection so on to read that</font>

125
00:06:20,819 --> 00:06:25,469
back we use an object input stream<font color="#CCCCCC"> and</font>

126
00:06:23,099 --> 00:06:26,489
<font color="#CCCCCC">we can move that there a</font><font color="#E5E5E5"> buck is that's</font>

127
00:06:25,469 --> 00:06:28,950
all there is to it

128
00:06:26,489 --> 00:06:32,159
<font color="#E5E5E5">really easy to use</font>

129
00:06:28,950 --> 00:06:34,130
and the<font color="#E5E5E5"> actual dates of</font><font color="#CCCCCC"> Roma can be</font>

130
00:06:32,160 --> 00:06:38,070
described as a simple stream<font color="#E5E5E5"> farmer</font>

131
00:06:34,130 --> 00:06:40,880
so each stream starts with<font color="#CCCCCC"> I see by</font>

132
00:06:38,070 --> 00:06:40,880
magic<font color="#CCCCCC"> number</font>

133
00:06:41,240 --> 00:06:48,289
<font color="#CCCCCC">let's fill it</font><font color="#E5E5E5"> by a teapot version number</font>

134
00:06:43,370 --> 00:06:50,240
I've only ever<font color="#E5E5E5"> seen version 5</font><font color="#CCCCCC"> draw this</font>

135
00:06:48,289 --> 00:06:53,530
<font color="#E5E5E5">there's older versions that exist and in</font>

136
00:06:50,240 --> 00:06:53,530
<font color="#E5E5E5">future newer versions could exist</font>

137
00:06:54,290 --> 00:06:58,670
and that header is followed by<font color="#E5E5E5"> at least</font>

138
00:06:57,260 --> 00:07:00,380
one concern<font color="#E5E5E5"> element</font>

139
00:06:58,670 --> 00:07:02,960
the reason it's a stream format<font color="#E5E5E5"> is a</font>

140
00:07:00,380 --> 00:07:04,460
<font color="#CCCCCC">there can be multiple concert elements</font>

141
00:07:02,960 --> 00:07:05,810
and you just<font color="#E5E5E5"> read and read and read</font>

142
00:07:04,460 --> 00:07:09,469
<font color="#E5E5E5">until the end of the stream</font><font color="#CCCCCC"> so there's</font>

143
00:07:05,810 --> 00:07:14,270
no more data<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that content</font><font color="#E5E5E5"> element</font>

144
00:07:09,470 --> 00:07:16,690
<font color="#E5E5E5">will begin with by in the range X 7 0 X</font>

145
00:07:14,270 --> 00:07:16,690
70

146
00:07:17,550 --> 00:07:25,759
and so for<font color="#E5E5E5"> example</font>

147
00:07:20,719 --> 00:07:28,659
Zarek's<font color="#E5E5E5"> 7-0 is no an object is 73</font><font color="#CCCCCC"> arrays</font>

148
00:07:25,759 --> 00:07:28,659
<font color="#CCCCCC">7 5</font><font color="#E5E5E5"> and so on</font>

149
00:07:30,660 --> 00:07:36,390
the actual specification can be found

150
00:07:32,880 --> 00:07:39,810
online<font color="#E5E5E5"> on the Oracle website and it's a</font>

151
00:07:36,390 --> 00:07:41,580
bet on clearing places<font color="#E5E5E5"> so some examples</font>

152
00:07:39,810 --> 00:07:42,810
just to<font color="#CCCCCC"> show you what civilization</font><font color="#E5E5E5"> data</font>

153
00:07:41,580 --> 00:07:45,390
looks like<font color="#E5E5E5"> I'll see</font><font color="#CCCCCC"> guys</font><font color="#E5E5E5"> date it looked</font>

154
00:07:42,810 --> 00:07:48,150
like<font color="#E5E5E5"> so a minimal stream I could say</font>

155
00:07:45,390 --> 00:07:51,390
you've got the<font color="#E5E5E5"> to base a</font><font color="#CCCCCC"> CED</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> header</font>

156
00:07:48,150 --> 00:07:53,250
<font color="#E5E5E5">magic number</font><font color="#CCCCCC"> the version number zero</font>

157
00:07:51,390 --> 00:07:59,729
zero zero<font color="#E5E5E5"> five and then seven zero which</font>

158
00:07:53,250 --> 00:08:01,230
is a null element<font color="#CCCCCC"> string for A's again</font>

159
00:07:59,730 --> 00:08:03,600
you've got the header<font color="#CCCCCC"> you've got seven</font>

160
00:08:01,230 --> 00:08:06,510
four which is<font color="#CCCCCC"> a string zero zero zero</font>

161
00:08:03,600 --> 00:08:07,890
<font color="#E5E5E5">four</font><font color="#CCCCCC"> is it's a</font><font color="#E5E5E5"> by length field which</font>

162
00:08:06,510 --> 00:08:09,270
cells as hold on the string is and then

163
00:08:07,890 --> 00:08:13,080
we've<font color="#E5E5E5"> got the actual bytes of the string</font>

164
00:08:09,270 --> 00:08:15,150
and<font color="#E5E5E5"> then this is a basic objects</font><font color="#CCCCCC"> a</font>

165
00:08:13,080 --> 00:08:18,450
<font color="#CCCCCC">better caliber should</font><font color="#E5E5E5"> actually implement</font>

166
00:08:15,150 --> 00:08:20,599
so as a robot that's<font color="#E5E5E5"> a simple object so</font>

167
00:08:18,450 --> 00:08:23,599
we've got seven three

168
00:08:20,600 --> 00:08:26,150
but I've set for<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> sellers this</font><font color="#E5E5E5"> is</font>

169
00:08:23,600 --> 00:08:28,490
an<font color="#E5E5E5"> object</font><font color="#CCCCCC"> 7c this is across description</font>

170
00:08:26,150 --> 00:08:30,500
<font color="#E5E5E5">and then we've got the rest of the data</font>

171
00:08:28,490 --> 00:08:32,930
for<font color="#CCCCCC"> that class so the length of the</font>

172
00:08:30,500 --> 00:08:35,080
class name<font color="#E5E5E5"> the actual class name and so</font>

173
00:08:32,929 --> 00:08:35,079
<font color="#E5E5E5">on</font>

174
00:08:36,020 --> 00:08:44,370
<font color="#E5E5E5">the</font><font color="#CCCCCC"> serialization</font><font color="#E5E5E5"> in Java is done using</font>

175
00:08:39,049 --> 00:08:46,650
<font color="#E5E5E5">the objects input stream but</font>

176
00:08:44,370 --> 00:08:49,320
<font color="#E5E5E5">parsa's</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> sequentially so it reads</font>

177
00:08:46,650 --> 00:08:51,900
<font color="#E5E5E5">free stream tries to instantiate some</font>

178
00:08:49,320 --> 00:08:55,590
element from<font color="#CCCCCC"> constant element gets</font><font color="#E5E5E5"> the</font>

179
00:08:51,900 --> 00:08:57,990
<font color="#E5E5E5">next one after</font><font color="#CCCCCC"> la</font><font color="#E5E5E5"> and so on</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> didn't</font>

180
00:08:55,590 --> 00:08:59,430
<font color="#CCCCCC">sake</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> they're a go with thoughts</font><font color="#E5E5E5"> the</font>

181
00:08:57,990 --> 00:09:01,620
first<font color="#CCCCCC"> byte of</font><font color="#E5E5E5"> a Content element that</font>

182
00:08:59,430 --> 00:09:04,199
tells us a type whether<font color="#E5E5E5"> it's no string</font>

183
00:09:01,620 --> 00:09:06,150
so on but<font color="#E5E5E5"> also tells us the format of</font>

184
00:09:04,200 --> 00:09:07,770
the<font color="#E5E5E5"> data that follows for our elements</font>

185
00:09:06,150 --> 00:09:08,760
or like I said in a string<font color="#CCCCCC"> you've got a</font>

186
00:09:07,770 --> 00:09:10,199
<font color="#E5E5E5">length field and then you've got the</font>

187
00:09:08,760 --> 00:09:13,490
<font color="#CCCCCC">actual string then</font><font color="#E5E5E5"> you can have</font>

188
00:09:10,200 --> 00:09:13,490
additional content elements

189
00:09:13,529 --> 00:09:19,470
<font color="#CCCCCC">data is</font><font color="#E5E5E5"> instantiated as it is read it's</font>

190
00:09:17,190 --> 00:09:23,310
instantly<font color="#CCCCCC"> sunshade</font><font color="#E5E5E5"> so this I'm not I'm</font>

191
00:09:19,470 --> 00:09:25,440
<font color="#CCCCCC">not an object</font><font color="#E5E5E5"> in the stream</font>

192
00:09:23,310 --> 00:09:28,469
<font color="#E5E5E5">data for objects is red insert memory</font>

193
00:09:25,440 --> 00:09:31,130
send it to an object<font color="#CCCCCC"> and then Java or</font>

194
00:09:28,470 --> 00:09:34,040
carry on reading from the stream<font color="#E5E5E5"> I've</font>

195
00:09:31,130 --> 00:09:37,380
requested

196
00:09:34,040 --> 00:09:43,319
there isn't much validation performed if

197
00:09:37,380 --> 00:09:45,630
any<font color="#E5E5E5"> really so for example here we're</font>

198
00:09:43,320 --> 00:09:47,460
<font color="#CCCCCC">reading recalling objects input stream</font>

199
00:09:45,630 --> 00:09:50,400
<font color="#CCCCCC">that read objects to read</font><font color="#E5E5E5"> an object from</font>

200
00:09:47,460 --> 00:09:52,870
a<font color="#E5E5E5"> serialization stream we then cast it</font>

201
00:09:50,400 --> 00:09:55,240
to a string

202
00:09:52,870 --> 00:09:56,700
and assign<font color="#CCCCCC"> that string to the available</font>

203
00:09:55,240 --> 00:09:59,340
s

204
00:09:56,700 --> 00:10:01,110
the<font color="#E5E5E5"> validation kind of happens there if</font>

205
00:09:59,340 --> 00:10:03,870
the object<font color="#CCCCCC"> that we read</font><font color="#E5E5E5"> from the stream</font>

206
00:10:01,110 --> 00:10:05,940
isn't compatible type compatible with

207
00:10:03,870 --> 00:10:09,020
string<font color="#E5E5E5"> then an exception will be thrown</font>

208
00:10:05,940 --> 00:10:12,540
and that's kind of<font color="#CCCCCC"> you your validation</font>

209
00:10:09,020 --> 00:10:14,160
so you a<font color="#E5E5E5"> program should handle that</font>

210
00:10:12,540 --> 00:10:17,099
exception you're right that<font color="#E5E5E5"> there's not</font>

211
00:10:14,160 --> 00:10:19,850
how<font color="#E5E5E5"> we expected it to be and took it</font>

212
00:10:17,100 --> 00:10:19,850
away<font color="#E5E5E5"> whatever</font>

213
00:10:21,570 --> 00:10:26,130
<font color="#CCCCCC">while the</font><font color="#E5E5E5"> several Ice Age</font><font color="#CCCCCC"> civilizations</font>

214
00:10:23,730 --> 00:10:28,680
<font color="#E5E5E5">happening look</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> the destabilization</font>

215
00:10:26,130 --> 00:10:29,579
<font color="#CCCCCC">say Java doesn't care I was</font><font color="#E5E5E5"> going to</font>

216
00:10:28,680 --> 00:10:32,099
read an object from<font color="#E5E5E5"> the stream</font>

217
00:10:29,579 --> 00:10:36,779
instantiate and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> return</font><font color="#E5E5E5"> it about</font>

218
00:10:32,100 --> 00:10:38,810
brain it's too late and<font color="#E5E5E5"> we'll get to</font>

219
00:10:36,779 --> 00:10:38,810
that

220
00:10:39,410 --> 00:10:47,100
so in a<font color="#E5E5E5"> class implements</font><font color="#CCCCCC"> civilized world</font>

221
00:10:44,459 --> 00:10:49,699
<font color="#CCCCCC">interface</font><font color="#E5E5E5"> it can also implement a read</font>

222
00:10:47,100 --> 00:10:49,699
object method

223
00:10:50,920 --> 00:10:58,589
the method can<font color="#CCCCCC"> be used in place of</font><font color="#E5E5E5"> or in</font>

224
00:10:55,569 --> 00:11:00,549
conjunction with<font color="#CCCCCC"> Javas</font><font color="#E5E5E5"> d4</font><font color="#CCCCCC"> Reid objects</font>

225
00:10:58,589 --> 00:11:03,910
<font color="#CCCCCC">javis</font><font color="#E5E5E5"> different method of reading</font>

226
00:11:00,549 --> 00:11:06,129
objects so<font color="#E5E5E5"> you can read custom date so</font>

227
00:11:03,910 --> 00:11:08,529
it can have<font color="#E5E5E5"> shared version and bring the</font>

228
00:11:06,129 --> 00:11:09,639
stream so<font color="#E5E5E5"> that you can parable</font><font color="#CCCCCC"> weave you</font>

229
00:11:08,529 --> 00:11:12,689
can<font color="#CCCCCC"> have a newer version you software</font>

230
00:11:09,639 --> 00:11:15,009
<font color="#E5E5E5">compatible with older</font><font color="#CCCCCC"> versions</font><font color="#E5E5E5"> of data</font>

231
00:11:12,689 --> 00:11:18,129
<font color="#CCCCCC">but we can also</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> that read object</font>

232
00:11:15,009 --> 00:11:20,080
methods to sort of<font color="#E5E5E5"> handle the event that</font>

233
00:11:18,129 --> 00:11:23,510
<font color="#E5E5E5">an object is loaded</font>

234
00:11:20,080 --> 00:11:26,750
so a<font color="#CCCCCC"> deft example of that there's</font>

235
00:11:23,510 --> 00:11:29,689
neither across the<font color="#CCCCCC"> manager database</font>

236
00:11:26,750 --> 00:11:32,090
<font color="#E5E5E5">connection when you see realize that</font>

237
00:11:29,690 --> 00:11:34,490
glass in my<font color="#CCCCCC"> write the database</font>

238
00:11:32,090 --> 00:11:37,640
<font color="#E5E5E5">connection parameters to a file using</font>

239
00:11:34,490 --> 00:11:38,480
<font color="#E5E5E5">solarization and then when you read</font>

240
00:11:37,640 --> 00:11:40,370
those back

241
00:11:38,480 --> 00:11:42,320
it might automatically reconnect to a

242
00:11:40,370 --> 00:11:46,600
database<font color="#CCCCCC"> so that's how we might handle</font>

243
00:11:42,320 --> 00:11:46,600
and<font color="#E5E5E5"> this object loaded event</font>

244
00:11:48,420 --> 00:11:53,420
so this civilization<font color="#E5E5E5"> vulnerability</font>

245
00:11:54,060 --> 00:11:59,010
these occur when we as an attacker<font color="#E5E5E5"> have</font>

246
00:11:57,360 --> 00:12:01,640
control<font color="#CCCCCC"> of the data that's being</font>

247
00:11:59,010 --> 00:12:01,640
deserialized

248
00:12:02,750 --> 00:12:08,070
by<font color="#E5E5E5"> controlling that data</font><font color="#CCCCCC"> we control the</font>

249
00:12:05,310 --> 00:12:12,180
properties of objects<font color="#E5E5E5"> but are being</font>

250
00:12:08,070 --> 00:12:14,580
instantiated in memory<font color="#E5E5E5"> including</font><font color="#CCCCCC"> the</font>

251
00:12:12,180 --> 00:12:16,650
type of the objects so our<font color="#E5E5E5"> example where</font>

252
00:12:14,580 --> 00:12:19,320
we<font color="#E5E5E5"> custom pincer a string we don't have</font>

253
00:12:16,650 --> 00:12:20,579
to have a string in the stream there an

254
00:12:19,320 --> 00:12:21,750
exception will perform but by that<font color="#E5E5E5"> point</font>

255
00:12:20,580 --> 00:12:25,560
<font color="#CCCCCC">and</font><font color="#E5E5E5"> objects has already been</font>

256
00:12:21,750 --> 00:12:27,720
instantiated<font color="#CCCCCC"> by</font><font color="#E5E5E5"> controlling</font><font color="#CCCCCC"> bait</font><font color="#E5E5E5"> so we</font>

257
00:12:25,560 --> 00:12:34,890
can<font color="#E5E5E5"> control code flow that depends on</font>

258
00:12:27,720 --> 00:12:38,760
<font color="#E5E5E5">that data and that includes any code</font>

259
00:12:34,890 --> 00:12:41,220
<font color="#E5E5E5">that's in a serializable classes read</font>

260
00:12:38,760 --> 00:12:45,060
object method<font color="#CCCCCC"> that handles they object</font>

261
00:12:41,220 --> 00:12:46,680
loaded<font color="#CCCCCC"> event and any interaction with an</font>

262
00:12:45,060 --> 00:12:48,780
<font color="#E5E5E5">object that's been</font><font color="#CCCCCC"> loaded</font><font color="#E5E5E5"> I've been read</font>

263
00:12:46,680 --> 00:12:50,430
from<font color="#E5E5E5"> a serialization stream so if cold</font>

264
00:12:48,780 --> 00:12:52,240
calls read objects and then interacts

265
00:12:50,430 --> 00:12:54,640
with the result

266
00:12:52,240 --> 00:12:57,600
again we can manipulate<font color="#CCCCCC"> the code</font><font color="#E5E5E5"> using</font>

267
00:12:54,640 --> 00:12:57,600
the properties of the objects

268
00:12:58,320 --> 00:13:04,540
[Music]

269
00:13:00,070 --> 00:13:04,540
solicit<font color="#E5E5E5"> co-op the</font><font color="#CCCCCC"> or it's a programming</font>

270
00:13:06,150 --> 00:13:11,029
we<font color="#E5E5E5"> control</font><font color="#CCCCCC"> properties of objects</font><font color="#E5E5E5"> to</font>

271
00:13:07,800 --> 00:13:16,500
<font color="#E5E5E5">implements the flow of current execution</font>

272
00:13:11,029 --> 00:13:18,510
<font color="#E5E5E5">payload like safe controls</font><font color="#CCCCCC"> so code</font><font color="#E5E5E5"> that</font>

273
00:13:16,500 --> 00:13:21,000
we control through<font color="#CCCCCC"> controlling</font>

274
00:13:18,510 --> 00:13:24,660
<font color="#E5E5E5">properties</font><font color="#CCCCCC"> and objects is it's got a</font>

275
00:13:21,000 --> 00:13:29,670
<font color="#CCCCCC">cadet we can think</font><font color="#E5E5E5"> about as</font><font color="#CCCCCC"> high level</font>

276
00:13:24,660 --> 00:13:33,029
<font color="#CCCCCC">rock gadget accepts a rock gadget</font><font color="#E5E5E5"> mat</font>

277
00:13:29,670 --> 00:13:36,990
just push<font color="#E5E5E5"> a value on to a stack a pop</font>

278
00:13:33,029 --> 00:13:40,880
gadget my<font color="#CCCCCC"> rights and dates or</font><font color="#E5E5E5"> fail</font><font color="#CCCCCC"> for</font>

279
00:13:36,990 --> 00:13:40,880
example so<font color="#CCCCCC"> it is much much higher level</font>

280
00:13:42,660 --> 00:13:47,000
and generally exploitation relies on

281
00:13:47,160 --> 00:13:51,150
<font color="#E5E5E5">exploitation relies on knowledge</font><font color="#CCCCCC"> and</font>

282
00:13:48,540 --> 00:13:53,760
<font color="#E5E5E5">source code</font><font color="#CCCCCC"> so we need to know what code</font>

283
00:13:51,150 --> 00:13:55,230
<font color="#CCCCCC">is executing when our object is</font>

284
00:13:53,760 --> 00:13:58,500
<font color="#E5E5E5">instantiated in order to be able</font><font color="#CCCCCC"> to</font>

285
00:13:55,230 --> 00:14:00,300
manipulate it this<font color="#E5E5E5"> seems</font><font color="#CCCCCC"> to be a</font><font color="#E5E5E5"> point</font>

286
00:13:58,500 --> 00:14:05,340
of<font color="#E5E5E5"> confusion when it comes to this kind</font>

287
00:14:00,300 --> 00:14:07,349
<font color="#CCCCCC">of stuff</font><font color="#E5E5E5"> a memory corruption expert you</font>

288
00:14:05,340 --> 00:14:09,030
kind<font color="#E5E5E5"> of it sounds be sending some kind</font>

289
00:14:07,350 --> 00:14:12,200
of code<font color="#CCCCCC"> city application and it's going</font>

290
00:14:09,030 --> 00:14:13,970
<font color="#E5E5E5">to eventually execute that code</font>

291
00:14:12,200 --> 00:14:16,190
the civilization<font color="#CCCCCC"> expert where it's</font>

292
00:14:13,970 --> 00:14:19,510
<font color="#CCCCCC">sending properties and were manipulating</font>

293
00:14:16,190 --> 00:14:19,510
<font color="#E5E5E5">code that already exists</font>

294
00:14:19,750 --> 00:14:27,140
it's not always<font color="#CCCCCC"> possible to</font><font color="#E5E5E5"> acquire an</font>

295
00:14:23,090 --> 00:14:29,330
application source code<font color="#E5E5E5"> so how do we</font>

296
00:14:27,140 --> 00:14:31,569
<font color="#E5E5E5">attack an application without source</font>

297
00:14:29,330 --> 00:14:31,570
code

298
00:14:35,270 --> 00:14:39,350
<font color="#E5E5E5">now anyone that's done any this kind of</font>

299
00:14:37,820 --> 00:14:41,300
stuff<font color="#E5E5E5"> before already anything about this</font>

300
00:14:39,350 --> 00:14:47,510
kind of stuff<font color="#CCCCCC"> should have heard of white</font>

301
00:14:41,300 --> 00:14:50,020
<font color="#CCCCCC">sauce</font><font color="#E5E5E5"> area and so I saw cereal it's</font>

302
00:14:47,510 --> 00:14:53,720
actually these that various researchers

303
00:14:50,020 --> 00:14:55,130
when looks at all<font color="#E5E5E5"> of these libraries</font><font color="#CCCCCC"> and</font>

304
00:14:53,720 --> 00:14:57,590
<font color="#E5E5E5">some more and basically</font><font color="#CCCCCC"> said</font><font color="#E5E5E5"> write</font><font color="#CCCCCC"> what</font>

305
00:14:55,130 --> 00:15:00,710
<font color="#CCCCCC">code is</font><font color="#E5E5E5"> there that we can manipulate</font><font color="#CCCCCC"> to</font>

306
00:14:57,590 --> 00:15:02,200
do something useful<font color="#CCCCCC"> to an attacker</font>

307
00:15:00,710 --> 00:15:04,870
[Music]

308
00:15:02,200 --> 00:15:07,810
but a lot<font color="#E5E5E5"> of pop</font><font color="#CCCCCC"> gadget chains and</font>

309
00:15:04,870 --> 00:15:09,910
publish them in<font color="#E5E5E5"> a tall glass</font><font color="#CCCCCC"> of cereal</font>

310
00:15:07,810 --> 00:15:12,810
which<font color="#E5E5E5"> regenerates these chains and</font>

311
00:15:09,910 --> 00:15:12,810
generates these<font color="#E5E5E5"> payloads</font>

312
00:15:13,200 --> 00:15:19,019
most of these<font color="#E5E5E5"> payloads enable us to</font>

313
00:15:15,720 --> 00:15:20,430
execute months<font color="#E5E5E5"> blindly so we don't get</font>

314
00:15:19,019 --> 00:15:22,680
<font color="#E5E5E5">anything back from those commands unless</font>

315
00:15:20,430 --> 00:15:24,180
the command<font color="#CCCCCC"> addition so like we</font><font color="#E5E5E5"> can</font>

316
00:15:22,680 --> 00:15:27,319
pinch ourselves but<font color="#E5E5E5"> we'll get output</font>

317
00:15:24,180 --> 00:15:27,319
from the ping<font color="#CCCCCC"> command</font>

318
00:15:31,089 --> 00:15:35,459
so how do we<font color="#E5E5E5"> suck</font><font color="#CCCCCC"> Java</font><font color="#E5E5E5"> deserialization</font>

319
00:15:36,790 --> 00:15:41,469
there's three key parts<font color="#CCCCCC"> to a</font>

320
00:15:38,770 --> 00:15:43,220
civilization attack<font color="#E5E5E5"> first part is an</font>

321
00:15:41,470 --> 00:15:46,760
entry<font color="#CCCCCC"> point</font>

322
00:15:43,220 --> 00:15:48,500
<font color="#CCCCCC">sex Empire</font><font color="#E5E5E5"> is some gadgets so right so</font>

323
00:15:46,760 --> 00:15:51,710
surreal

324
00:15:48,500 --> 00:15:53,870
and then actual commands to execute

325
00:15:51,710 --> 00:15:57,160
against<font color="#E5E5E5"> the target environment and I'll</font>

326
00:15:53,870 --> 00:15:57,160
get through<font color="#CCCCCC"> today's</font>

327
00:15:57,309 --> 00:16:00,540
so

328
00:15:59,010 --> 00:16:02,010
an inch brain is any part of the

329
00:16:00,540 --> 00:16:06,040
application<font color="#E5E5E5"> that</font>

330
00:16:02,010 --> 00:16:08,290
DC arises data<font color="#E5E5E5"> so</font><font color="#CCCCCC"> if we're looking at</font>

331
00:16:06,040 --> 00:16:13,150
network traffic or we're<font color="#CCCCCC"> looking at</font>

332
00:16:08,290 --> 00:16:16,599
files that an application reads<font color="#E5E5E5"> you can</font>

333
00:16:13,150 --> 00:16:19,150
identify<font color="#CCCCCC"> civilise</font><font color="#E5E5E5"> data by the magic</font>

334
00:16:16,600 --> 00:16:21,040
number in the<font color="#E5E5E5"> version number you want</font>

335
00:16:19,150 --> 00:16:25,240
ideally<font color="#CCCCCC"> you want</font><font color="#E5E5E5"> five bytes so</font>

336
00:16:21,040 --> 00:16:27,759
identified a<font color="#CCCCCC"> sterilized</font><font color="#E5E5E5"> stream excuse me</font>

337
00:16:25,240 --> 00:16:31,600
let's say the header<font color="#E5E5E5"> on a bright in the</font>

338
00:16:27,759 --> 00:16:34,670
range<font color="#CCCCCC"> 7 0 to 70</font><font color="#E5E5E5"> because that's a valid</font>

339
00:16:31,600 --> 00:16:37,910
say<font color="#E5E5E5"> realizations dream so</font>

340
00:16:34,670 --> 00:16:41,269
got some paella that's<font color="#CCCCCC"> corley not</font><font color="#E5E5E5"> plain</font>

341
00:16:37,910 --> 00:16:43,880
<font color="#E5E5E5">text</font><font color="#CCCCCC"> in burp suite</font><font color="#E5E5E5"> we click on the hex</font>

342
00:16:41,269 --> 00:16:47,589
<font color="#E5E5E5">view and you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> see that a CED zero</font>

343
00:16:43,880 --> 00:16:47,589
<font color="#E5E5E5">zeros in</font><font color="#CCCCCC"> five seven three</font>

344
00:16:47,650 --> 00:16:53,459
again<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> thing Wireshark startup</font>

345
00:16:50,800 --> 00:16:53,459
packet

346
00:16:56,980 --> 00:17:03,770
basics for<font color="#E5E5E5"> recoded serialization data so</font>

347
00:17:01,300 --> 00:17:05,569
in for example<font color="#CCCCCC"> a web application where</font>

348
00:17:03,770 --> 00:17:09,800
we're<font color="#E5E5E5"> working with a text-based</font><font color="#CCCCCC"> broad</font>

349
00:17:05,569 --> 00:17:12,589
scope<font color="#E5E5E5"> and binary</font><font color="#CCCCCC"> data is no it's not</font>

350
00:17:09,800 --> 00:17:15,560
<font color="#E5E5E5">it's not</font><font color="#CCCCCC"> very nice</font><font color="#E5E5E5"> to use nobody</font><font color="#CCCCCC"> isn't</font>

351
00:17:12,589 --> 00:17:18,079
really<font color="#E5E5E5"> comparable with a text-based</font>

352
00:17:15,560 --> 00:17:21,079
bolts code<font color="#E5E5E5"> so we might basics for encode</font>

353
00:17:18,079 --> 00:17:24,139
the data which produces a recognizable

354
00:17:21,079 --> 00:17:28,580
pattern and so if you see if<font color="#E5E5E5"> you see a</font>

355
00:17:24,140 --> 00:17:32,690
cookie or an HTTP header that<font color="#E5E5E5"> starts off</font>

356
00:17:28,580 --> 00:17:35,899
with lowercase<font color="#E5E5E5"> R capital o 0 and own</font>

357
00:17:32,690 --> 00:17:38,230
capital<font color="#CCCCCC"> ABX</font><font color="#E5E5E5"> then that's the civilization</font>

358
00:17:35,900 --> 00:17:38,230
hello

359
00:17:39,050 --> 00:17:45,470
so<font color="#E5E5E5"> when we're looking at some sales data</font>

360
00:17:42,890 --> 00:17:48,440
<font color="#CCCCCC">a Java</font><font color="#E5E5E5"> centralized data and there were</font>

361
00:17:45,470 --> 00:17:50,210
another a handful<font color="#E5E5E5"> of other indicators</font>

362
00:17:48,440 --> 00:17:53,690
<font color="#CCCCCC">that</font><font color="#E5E5E5"> I was that this</font><font color="#CCCCCC"> is definitely</font>

363
00:17:50,210 --> 00:17:55,370
<font color="#E5E5E5">civilized data first thing is Java class</font>

364
00:17:53,690 --> 00:17:57,380
names you'll see this stuff<font color="#E5E5E5"> here the</font>

365
00:17:55,370 --> 00:17:59,149
<font color="#E5E5E5">dates are so soon that</font><font color="#CCCCCC"> reflects that</font>

366
00:17:57,380 --> 00:18:02,890
<font color="#CCCCCC">annotation but annotation invocation</font>

367
00:17:59,150 --> 00:18:06,500
handler comes up for you to a so on

368
00:18:02,890 --> 00:18:07,640
there's also not<font color="#CCCCCC"> a net format format for</font>

369
00:18:06,500 --> 00:18:11,120
that<font color="#E5E5E5"> and that's don't</font><font color="#CCCCCC"> see the</font>

370
00:18:07,640 --> 00:18:14,150
serialization<font color="#E5E5E5"> and data format it's just</font>

371
00:18:11,120 --> 00:18:16,189
I don't know the exact<font color="#E5E5E5"> reason</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> it but</font>

372
00:18:14,150 --> 00:18:17,960
these<font color="#E5E5E5"> certain places the class name will</font>

373
00:18:16,190 --> 00:18:20,300
be in a<font color="#E5E5E5"> slightly different format so</font>

374
00:18:17,960 --> 00:18:22,220
it'll begin with a capital L<font color="#CCCCCC"> end with a</font>

375
00:18:20,300 --> 00:18:24,800
semicolon<font color="#E5E5E5"> and then instead of dots in</font>

376
00:18:22,220 --> 00:18:27,950
<font color="#E5E5E5">between and the parcel names based in</font>

377
00:18:24,800 --> 00:18:30,190
the actual class name<font color="#E5E5E5"> it's false lashes</font>

378
00:18:27,950 --> 00:18:31,830
and then

379
00:18:30,190 --> 00:18:35,230
<font color="#CCCCCC">know about that</font>

380
00:18:31,830 --> 00:18:37,178
<font color="#E5E5E5">stands out again from the format of the</font>

381
00:18:35,230 --> 00:18:39,220
<font color="#E5E5E5">but from the screen format you'll see</font>

382
00:18:37,179 --> 00:18:39,600
strings like<font color="#CCCCCC"> SiO</font><font color="#E5E5E5"> and XP throw it throw</font>

383
00:18:39,220 --> 00:18:43,090
<font color="#E5E5E5">it</font>

384
00:18:39,600 --> 00:18:46,689
so<font color="#E5E5E5"> si are tells us this is an</font><font color="#CCCCCC"> object and</font>

385
00:18:43,090 --> 00:18:53,379
<font color="#E5E5E5">this is across different description</font><font color="#CCCCCC"> 7 X</font>

386
00:18:46,690 --> 00:18:56,950
<font color="#E5E5E5">7 3x 72 XP is seen as the end of a cross</font>

387
00:18:53,380 --> 00:18:59,500
description it<font color="#E5E5E5"> sells as that this is the</font>

388
00:18:56,950 --> 00:19:02,910
end of the<font color="#E5E5E5"> class annotations unless this</font>

389
00:18:59,500 --> 00:19:07,200
<font color="#E5E5E5">cross has no has</font>

390
00:19:02,910 --> 00:19:09,720
<font color="#CCCCCC">your parent class and so that's</font><font color="#E5E5E5"> CC and</font>

391
00:19:07,200 --> 00:19:12,650
what dates<font color="#E5E5E5"> last as the content type is</font>

392
00:19:09,720 --> 00:19:16,910
<font color="#E5E5E5">and what data and then constants I know</font>

393
00:19:12,650 --> 00:19:19,390
<font color="#E5E5E5">flows and so looking back at that</font><font color="#CCCCCC"> login</font>

394
00:19:16,910 --> 00:19:19,390
<font color="#E5E5E5">pocket</font>

395
00:19:19,950 --> 00:19:23,240
we<font color="#CCCCCC"> could say all these indicators</font>

396
00:19:23,250 --> 00:19:31,000
so we've got si

397
00:19:25,930 --> 00:19:34,890
<font color="#E5E5E5">Java class names XP</font>

398
00:19:31,000 --> 00:19:38,850
but there's no<font color="#E5E5E5"> a CED zero zero zero five</font>

399
00:19:34,890 --> 00:19:40,350
and the reason<font color="#CCCCCC"> for that is so this is</font>

400
00:19:38,850 --> 00:19:42,000
<font color="#E5E5E5">this was the first of the login packets</font>

401
00:19:40,350 --> 00:19:43,159
that I actually saw in Wireshark when I

402
00:19:42,000 --> 00:19:46,490
was testing<font color="#CCCCCC"> an application</font>

403
00:19:43,160 --> 00:19:49,650
and the reason for<font color="#E5E5E5"> there being no a</font><font color="#CCCCCC"> ced</font>

404
00:19:46,490 --> 00:19:51,150
0:05<font color="#E5E5E5"> is that that's a stream header that</font>

405
00:19:49,650 --> 00:19:52,830
only appears<font color="#E5E5E5"> right there they start of a</font>

406
00:19:51,150 --> 00:19:55,020
<font color="#CCCCCC">sterilization stream so what this</font>

407
00:19:52,830 --> 00:19:58,110
<font color="#CCCCCC">application did was it when you</font><font color="#E5E5E5"> started</font>

408
00:19:55,020 --> 00:19:59,700
up connected to a server<font color="#CCCCCC"> and use the</font>

409
00:19:58,110 --> 00:20:01,290
objects input stream object<font color="#CCCCCC"> output</font>

410
00:19:59,700 --> 00:20:03,780
stream so to read and write over that

411
00:20:01,290 --> 00:20:06,180
<font color="#E5E5E5">connection</font><font color="#CCCCCC"> a batplane</font>

412
00:20:03,780 --> 00:20:08,660
the<font color="#E5E5E5"> serialization had a goes in each</font>

413
00:20:06,180 --> 00:20:11,370
direction<font color="#CCCCCC"> and then subsequent packets</font>

414
00:20:08,660 --> 00:20:12,540
<font color="#E5E5E5">can say don't contain the</font><font color="#CCCCCC"> header because</font>

415
00:20:11,370 --> 00:20:15,540
<font color="#E5E5E5">we've already open the stream have</font>

416
00:20:12,540 --> 00:20:20,070
already<font color="#E5E5E5"> started the stream an</font>

417
00:20:15,540 --> 00:20:24,509
interesting point<font color="#E5E5E5"> here this client had</font>

418
00:20:20,070 --> 00:20:26,850
and<font color="#CCCCCC"> IDs in place which had rules to</font>

419
00:20:24,509 --> 00:20:28,140
<font color="#CCCCCC">decide these kinds of attacks</font><font color="#E5E5E5"> but it</font>

420
00:20:26,850 --> 00:20:31,080
looks for

421
00:20:28,140 --> 00:20:34,200
those boats<font color="#CCCCCC"> and some additional bytes in</font>

422
00:20:31,080 --> 00:20:36,419
the<font color="#E5E5E5"> packet in the same packet because my</font>

423
00:20:34,200 --> 00:20:38,280
payload went over the<font color="#CCCCCC"> network layer pone</font>

424
00:20:36,420 --> 00:20:40,650
<font color="#E5E5E5">my attacks went</font><font color="#CCCCCC"> completely</font><font color="#E5E5E5"> on it</font>

425
00:20:38,280 --> 00:20:43,680
<font color="#E5E5E5">undetected</font>

426
00:20:40,650 --> 00:20:45,300
so don't<font color="#E5E5E5"> rely</font><font color="#CCCCCC"> on seeing the header</font>

427
00:20:43,680 --> 00:20:47,820
it should be there<font color="#E5E5E5"> it's not over the</font>

428
00:20:45,300 --> 00:20:49,139
stream<font color="#E5E5E5"> but if you see</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> that's bit</font>

429
00:20:47,820 --> 00:20:51,919
over into the stream<font color="#CCCCCC"> then</font><font color="#E5E5E5"> you're not</font>

430
00:20:49,140 --> 00:20:51,920
<font color="#E5E5E5">going to see it straight away</font>

431
00:20:53,510 --> 00:20:57,200
so once we've we've identified an<font color="#CCCCCC"> entry</font>

432
00:20:55,700 --> 00:21:00,760
<font color="#CCCCCC">point</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> needs to work out where to</font>

433
00:20:57,200 --> 00:21:00,760
<font color="#E5E5E5">actually inject our payload</font>

434
00:21:02,330 --> 00:21:08,658
so the simple case is that we will see

435
00:21:05,870 --> 00:21:10,459
the serialization stream header and it

436
00:21:08,659 --> 00:21:12,110
<font color="#CCCCCC">will be</font><font color="#E5E5E5"> followed by a</font><font color="#CCCCCC"> bright any very</font>

437
00:21:10,460 --> 00:21:16,429
these<font color="#CCCCCC"> three ranges so seven zeros to</font>

438
00:21:12,110 --> 00:21:19,459
<font color="#CCCCCC">seventy six or seven</font><font color="#E5E5E5"> basis of any each</font>

439
00:21:16,429 --> 00:21:21,230
of those all of<font color="#CCCCCC"> the breaks in</font><font color="#E5E5E5"> those two</font>

440
00:21:19,460 --> 00:21:23,870
ranges

441
00:21:21,230 --> 00:21:26,240
constant elements civilization<font color="#E5E5E5"> stream</font>

442
00:21:23,870 --> 00:21:28,310
constant elements that can<font color="#E5E5E5"> be read as an</font>

443
00:21:26,240 --> 00:21:30,290
<font color="#CCCCCC">object so if you call objects input</font>

444
00:21:28,310 --> 00:21:31,940
stream<font color="#CCCCCC"> dot read objects</font><font color="#E5E5E5"> you can read any</font>

445
00:21:30,290 --> 00:21:34,790
<font color="#CCCCCC">of</font><font color="#E5E5E5"> those content types the ones that I'm</font>

446
00:21:31,940 --> 00:21:39,290
in those ranges<font color="#CCCCCC"> they won't read them</font><font color="#E5E5E5"> so</font>

447
00:21:34,790 --> 00:21:42,860
<font color="#E5E5E5">there is some validation going on so we</font>

448
00:21:39,290 --> 00:21:47,800
see<font color="#E5E5E5"> that pattern in a solarization</font>

449
00:21:42,860 --> 00:21:50,860
stream then we can replace

450
00:21:47,800 --> 00:21:53,770
<font color="#CCCCCC">the fifth</font><font color="#E5E5E5"> by an</font><font color="#CCCCCC"> woods with a payload</font><font color="#E5E5E5"> an</font>

451
00:21:50,860 --> 00:21:56,860
arbitrary<font color="#E5E5E5"> object when that stream gets</font>

452
00:21:53,770 --> 00:21:59,170
passed to<font color="#E5E5E5"> the target it will read</font><font color="#CCCCCC"> the</font>

453
00:21:56,860 --> 00:22:00,879
header and it<font color="#E5E5E5"> will</font><font color="#CCCCCC"> start to</font><font color="#E5E5E5"> instantiate</font>

454
00:21:59,170 --> 00:22:03,670
an object which<font color="#CCCCCC"> is the object we put in</font>

455
00:22:00,880 --> 00:22:05,500
the stream once<font color="#CCCCCC"> our objects instantiated</font>

456
00:22:03,670 --> 00:22:08,080
<font color="#E5E5E5">and returned from objects in equestrian</font>

457
00:22:05,500 --> 00:22:09,790
<font color="#E5E5E5">but read objects there might be an</font>

458
00:22:08,080 --> 00:22:12,100
exception from<font color="#E5E5E5"> something there might be</font>

459
00:22:09,790 --> 00:22:13,780
an error somewhere<font color="#E5E5E5"> where that point our</font>

460
00:22:12,100 --> 00:22:15,879
objects<font color="#E5E5E5"> aside have been</font><font color="#CCCCCC"> associated in</font>

461
00:22:13,780 --> 00:22:18,250
memory and we potentially<font color="#E5E5E5"> already</font><font color="#CCCCCC"> to</font>

462
00:22:15,880 --> 00:22:22,080
<font color="#CCCCCC">control</font><font color="#E5E5E5"> some code and exploit the</font>

463
00:22:18,250 --> 00:22:22,080
application<font color="#CCCCCC"> just too late</font>

464
00:22:24,730 --> 00:22:30,730
<font color="#CCCCCC">becoming alternatives that is the stream</font>

465
00:22:28,360 --> 00:22:35,590
might start with a block data<font color="#CCCCCC"> about data</font>

466
00:22:30,730 --> 00:22:38,049
<font color="#CCCCCC">long element the so again we'll up</font><font color="#E5E5E5"> the</font>

467
00:22:35,590 --> 00:22:41,159
stream<font color="#E5E5E5"> header and then</font><font color="#CCCCCC"> we'll have either</font>

468
00:22:38,049 --> 00:22:43,389
<font color="#CCCCCC">7 7 or 7 8</font>

469
00:22:41,160 --> 00:22:45,850
7/7 is followed by<font color="#E5E5E5"> a single bite which</font>

470
00:22:43,390 --> 00:22:48,100
is the lymph excuse me

471
00:22:45,850 --> 00:22:49,860
followed by that many<font color="#E5E5E5"> bites which to the</font>

472
00:22:48,100 --> 00:22:54,459
<font color="#E5E5E5">actual</font><font color="#CCCCCC"> blood data</font>

473
00:22:49,860 --> 00:22:59,070
<font color="#CCCCCC">7a has</font><font color="#E5E5E5"> four bytes for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> lung field and</font>

474
00:22:54,460 --> 00:23:02,040
I'm not many boats after<font color="#E5E5E5"> that if we see</font>

475
00:22:59,070 --> 00:23:06,490
about in that range<font color="#CCCCCC"> if it all</font><font color="#E5E5E5"> C ranges</font>

476
00:23:02,040 --> 00:23:08,740
then we can replace that<font color="#CCCCCC"> by and then</font>

477
00:23:06,490 --> 00:23:11,830
words with a payload and we can inject

478
00:23:08,740 --> 00:23:13,150
there so got an<font color="#E5E5E5"> example where we've got</font>

479
00:23:11,830 --> 00:23:14,889
the header<font color="#E5E5E5"> we've got the version number</font>

480
00:23:13,150 --> 00:23:18,730
<font color="#E5E5E5">at the magic number the version number</font>

481
00:23:14,890 --> 00:23:21,550
<font color="#E5E5E5">seven seven so we've got blog data 0 8 8</font>

482
00:23:18,730 --> 00:23:24,610
bytes long<font color="#E5E5E5"> 8 bytes and block</font><font color="#CCCCCC"> beta</font><font color="#E5E5E5"> and</font>

483
00:23:21,550 --> 00:23:26,770
I'm at 7 3 is in those one of<font color="#E5E5E5"> those two</font>

484
00:23:24,610 --> 00:23:29,110
ranges so we can actually replace<font color="#E5E5E5"> that</font>

485
00:23:26,770 --> 00:23:31,150
something<font color="#E5E5E5"> 3 onwards with any object we</font>

486
00:23:29,110 --> 00:23:32,870
want and<font color="#CCCCCC"> plus the states it's in the</font>

487
00:23:31,150 --> 00:23:38,080
target application<font color="#CCCCCC"> and it</font>

488
00:23:32,870 --> 00:23:38,080
<font color="#E5E5E5">instantiate our object or something</font>

489
00:23:39,310 --> 00:23:48,429
so more complex situations cases then

490
00:23:43,630 --> 00:23:50,400
those and<font color="#CCCCCC"> all</font><font color="#E5E5E5"> tool for this because</font><font color="#CCCCCC"> I've</font>

491
00:23:48,430 --> 00:23:53,500
spent ridiculous amounts<font color="#E5E5E5"> of time</font>

492
00:23:50,400 --> 00:23:55,420
manually decoding sterilized streams of

493
00:23:53,500 --> 00:23:57,010
data and<font color="#E5E5E5"> working out what all the</font>

494
00:23:55,420 --> 00:23:59,560
<font color="#CCCCCC">different things are where exactly I can</font>

495
00:23:57,010 --> 00:24:04,120
inject<font color="#E5E5E5"> a payload so sterilization didn't</font>

496
00:23:59,560 --> 00:24:07,810
put that<font color="#E5E5E5"> gotcha we win it and just press</font>

497
00:24:04,120 --> 00:24:11,219
about<font color="#E5E5E5"> Bible civilization</font><font color="#CCCCCC"> scream</font>

498
00:24:07,810 --> 00:24:11,220
or we can import<font color="#CCCCCC"> a file</font>

499
00:24:11,480 --> 00:24:16,640
and it will attempt to<font color="#E5E5E5"> pass that in</font>

500
00:24:13,909 --> 00:24:17,960
<font color="#CCCCCC">Xalapa</font><font color="#E5E5E5"> human human readable form</font>

501
00:24:16,640 --> 00:24:20,720
and what we're looking<font color="#CCCCCC"> for in</font><font color="#E5E5E5"> air is</font>

502
00:24:17,960 --> 00:24:23,990
again<font color="#E5E5E5"> those those</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> bright rage back</font>

503
00:24:20,720 --> 00:24:26,600
ranges so seven<font color="#E5E5E5"> zero two seven six I</font>

504
00:24:23,990 --> 00:24:30,260
think<font color="#CCCCCC"> and then seven beats they're 70</font>

505
00:24:26,600 --> 00:24:33,169
<font color="#CCCCCC">and as we can</font><font color="#E5E5E5"> see in the contents</font><font color="#CCCCCC"> the</font>

506
00:24:30,260 --> 00:24:35,270
first one is a string element<font color="#CCCCCC"> seven four</font>

507
00:24:33,170 --> 00:24:38,240
<font color="#E5E5E5">so we can actually replace from the</font>

508
00:24:35,270 --> 00:24:42,530
<font color="#CCCCCC">start within</font><font color="#E5E5E5"> objects of our</font><font color="#CCCCCC"> twos and it</font>

509
00:24:38,240 --> 00:24:43,309
will be instantiated<font color="#CCCCCC"> but all</font><font color="#E5E5E5"> is on</font>

510
00:24:42,530 --> 00:24:46,399
github

511
00:24:43,309 --> 00:24:49,340
I've got details<font color="#E5E5E5"> of that bit later on</font>

512
00:24:46,400 --> 00:24:53,000
essentially<font color="#CCCCCC"> we're looking for</font><font color="#E5E5E5"> a Content</font>

513
00:24:49,340 --> 00:24:55,040
element<font color="#E5E5E5"> that's got that</font><font color="#CCCCCC"> the type</font><font color="#E5E5E5"> seven</font>

514
00:24:53,000 --> 00:24:56,480
zero two seven six or seven be<font color="#E5E5E5"> 270 we</font>

515
00:24:55,040 --> 00:24:59,809
can replace<font color="#E5E5E5"> that</font><font color="#CCCCCC"> with any object we</font><font color="#E5E5E5"> want</font>

516
00:24:56,480 --> 00:25:01,190
them so we've got an entry point<font color="#E5E5E5"> we need</font>

517
00:24:59,809 --> 00:25:07,700
<font color="#E5E5E5">to find some pop gadgets that we can use</font>

518
00:25:01,190 --> 00:25:11,690
<font color="#CCCCCC">I</font><font color="#E5E5E5"> could say we need source</font><font color="#CCCCCC"> go</font><font color="#E5E5E5"> where to</font>

519
00:25:07,700 --> 00:25:13,880
find pop gadgets<font color="#CCCCCC"> you're looking for</font><font color="#E5E5E5"> read</font>

520
00:25:11,690 --> 00:25:15,530
object methods and you're looking for

521
00:25:13,880 --> 00:25:16,880
the code in those methods<font color="#E5E5E5"> how you can</font>

522
00:25:15,530 --> 00:25:18,110
manipulate<font color="#E5E5E5"> that based on the day there's</font>

523
00:25:16,880 --> 00:25:20,750
been<font color="#CCCCCC"> read from</font><font color="#E5E5E5"> the stream the properties</font>

524
00:25:18,110 --> 00:25:22,250
of<font color="#E5E5E5"> the objects that going across and</font>

525
00:25:20,750 --> 00:25:23,690
we're looking for<font color="#E5E5E5"> objects input stream</font>

526
00:25:22,250 --> 00:25:26,600
<font color="#CCCCCC">got read objects'</font><font color="#E5E5E5"> and code that</font>

527
00:25:23,690 --> 00:25:28,580
<font color="#E5E5E5">instructs with the return value any of</font>

528
00:25:26,600 --> 00:25:31,550
that code we can manipulate<font color="#E5E5E5"> using the</font>

529
00:25:28,580 --> 00:25:33,260
properties<font color="#CCCCCC"> of that object</font><font color="#E5E5E5"> well that's</font>

530
00:25:31,550 --> 00:25:35,960
<font color="#E5E5E5">not very practical</font><font color="#CCCCCC"> we don't always have</font>

531
00:25:33,260 --> 00:25:38,560
source code and I'm talking about

532
00:25:35,960 --> 00:25:42,610
<font color="#E5E5E5">practical attacks so</font>

533
00:25:38,560 --> 00:25:45,100
like I said Russell cereal if if there

534
00:25:42,610 --> 00:25:48,550
were<font color="#CCCCCC"> these little common libraries that</font>

535
00:25:45,100 --> 00:25:50,580
<font color="#E5E5E5">are used by lots of applications Commons</font>

536
00:25:48,550 --> 00:25:55,030
collections<font color="#E5E5E5"> is is one of the most</font>

537
00:25:50,580 --> 00:25:57,070
commonly known<font color="#CCCCCC"> and loads of applications</font>

538
00:25:55,030 --> 00:26:01,030
are still<font color="#E5E5E5"> using it</font><font color="#CCCCCC"> still I would say the</font>

539
00:25:57,070 --> 00:26:05,439
most<font color="#E5E5E5"> common vulnerable library for this</font>

540
00:26:01,030 --> 00:26:06,970
<font color="#E5E5E5">kind of stuff</font><font color="#CCCCCC"> so ideally</font><font color="#E5E5E5"> we'll have some</font>

541
00:26:05,440 --> 00:26:09,190
<font color="#CCCCCC">background information on the</font>

542
00:26:06,970 --> 00:26:10,540
application<font color="#CCCCCC"> or</font><font color="#E5E5E5"> we'll have an information</font>

543
00:26:09,190 --> 00:26:12,790
disclosure<font color="#E5E5E5"> that will give us some idea</font>

544
00:26:10,540 --> 00:26:14,860
<font color="#CCCCCC">of what libraries are in use and we can</font>

545
00:26:12,790 --> 00:26:17,260
<font color="#CCCCCC">just go right</font><font color="#E5E5E5"> that's a little</font><font color="#CCCCCC"> Burleigh</font>

546
00:26:14,860 --> 00:26:22,860
<font color="#CCCCCC">berry</font><font color="#E5E5E5"> rather that correct payload on it</font>

547
00:26:17,260 --> 00:26:22,860
and we went hopefully and

548
00:26:23,000 --> 00:26:25,810
if we<font color="#E5E5E5"> don't have that information</font>

549
00:26:26,040 --> 00:26:32,430
we can<font color="#CCCCCC"> kitchen sink it which is throw</font>

550
00:26:30,840 --> 00:26:33,659
everything but the kitchen sink<font color="#E5E5E5"> area so</font>

551
00:26:32,430 --> 00:26:34,740
we've got<font color="#E5E5E5"> my</font><font color="#CCCCCC"> sauce cereal it generates</font>

552
00:26:33,660 --> 00:26:38,840
all these different<font color="#CCCCCC"> bowls for</font><font color="#E5E5E5"> all these</font>

553
00:26:34,740 --> 00:26:38,840
different libraries brought them all

554
00:26:40,450 --> 00:26:43,049
so

555
00:26:43,250 --> 00:26:48,799
like<font color="#CCCCCC"> Russell sales got load of pillows</font>

556
00:26:46,220 --> 00:26:51,230
for<font color="#E5E5E5"> different libraries us just an</font>

557
00:26:48,799 --> 00:26:54,289
example<font color="#E5E5E5"> if we know</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> any of these</font>

558
00:26:51,230 --> 00:26:56,480
libraries<font color="#CCCCCC"> are in</font><font color="#E5E5E5"> use they the jar files</font>

559
00:26:54,289 --> 00:26:58,760
on the left<font color="#CCCCCC"> then we can use the payload</font>

560
00:26:56,480 --> 00:27:02,600
on the right<font color="#CCCCCC"> somebody's over</font><font color="#E5E5E5"> up so I</font>

561
00:26:58,760 --> 00:27:04,789
think this accumbens be<font color="#CCCCCC"> initials</font><font color="#E5E5E5"> payload</font>

562
00:27:02,600 --> 00:27:08,949
that<font color="#CCCCCC"> we relies on Commons collections</font>

563
00:27:04,789 --> 00:27:08,950
being<font color="#E5E5E5"> present and so</font>

564
00:27:09,440 --> 00:27:13,629
that might not<font color="#CCCCCC"> be so so useful</font><font color="#E5E5E5"> but</font>

565
00:27:13,670 --> 00:27:18,920
so<font color="#E5E5E5"> access that kitchen sink in any way</font>

566
00:27:16,180 --> 00:27:21,440
there I've<font color="#E5E5E5"> got a Python script which</font>

567
00:27:18,920 --> 00:27:24,500
I've used quite a few times<font color="#E5E5E5"> it's a pop</font>

568
00:27:21,440 --> 00:27:28,250
this kind of<font color="#E5E5E5"> stuff just got a list of</font>

569
00:27:24,500 --> 00:27:33,500
<font color="#CCCCCC">Wessel sailor payload types loop through</font>

570
00:27:28,250 --> 00:27:35,420
them<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> record</font><font color="#E5E5E5"> by source or to</font>

571
00:27:33,500 --> 00:27:38,570
<font color="#E5E5E5">generate a payload that</font><font color="#CCCCCC"> generates</font><font color="#E5E5E5"> the</font>

572
00:27:35,420 --> 00:27:42,230
<font color="#E5E5E5">serialized object that will execute a</font>

573
00:27:38,570 --> 00:27:44,149
given command using one of these pop

574
00:27:42,230 --> 00:27:46,340
gadget chains so<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Commons collections</font>

575
00:27:44,150 --> 00:27:47,930
<font color="#CCCCCC">one for example we don't call fire</font>

576
00:27:46,340 --> 00:27:51,230
payload we pass all<font color="#E5E5E5"> spikes see that</font>

577
00:27:47,930 --> 00:27:52,850
method<font color="#E5E5E5"> fire payload will be whatever it</font>

578
00:27:51,230 --> 00:27:56,690
needs to do<font color="#CCCCCC"> to deliver</font><font color="#E5E5E5"> that payload</font><font color="#CCCCCC"> said</font>

579
00:27:52,850 --> 00:27:57,919
<font color="#E5E5E5">application so</font><font color="#CCCCCC"> not sir Freyja</font><font color="#E5E5E5"> a certain</font>

580
00:27:56,690 --> 00:28:00,290
sequence<font color="#CCCCCC"> and packets over</font><font color="#E5E5E5"> the network</font>

581
00:27:57,920 --> 00:28:03,820
and then inject the payload into the

582
00:28:00,290 --> 00:28:03,820
stream insert over the network

583
00:28:05,400 --> 00:28:09,600
that's potentially risky

584
00:28:10,410 --> 00:28:14,160
<font color="#CCCCCC">where</font>

585
00:28:11,820 --> 00:28:17,840
<font color="#CCCCCC">Ferenc a lot of random data and objects</font>

586
00:28:14,160 --> 00:28:22,420
an application we could crush it

587
00:28:17,840 --> 00:28:22,419
I've never seen this<font color="#E5E5E5"> happen</font>

588
00:28:23,110 --> 00:28:28,959
the application<font color="#E5E5E5"> would likely fall over</font>

589
00:28:25,149 --> 00:28:31,149
if you just<font color="#E5E5E5"> am upset</font><font color="#CCCCCC"> if it was going</font><font color="#E5E5E5"> to</font>

590
00:28:28,960 --> 00:28:34,149
fall<font color="#CCCCCC"> over because of</font><font color="#E5E5E5"> this so it's</font>

591
00:28:31,149 --> 00:28:36,189
probably not<font color="#E5E5E5"> that bad because any any</font>

592
00:28:34,149 --> 00:28:37,600
strange<font color="#E5E5E5"> data</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> over the network hit</font>

593
00:28:36,190 --> 00:28:39,730
in<font color="#E5E5E5"> this boat were probably because it's</font>

594
00:28:37,600 --> 00:28:41,230
a<font color="#CCCCCC"> crutch of</font><font color="#E5E5E5"> its if it's not it was hand</font>

595
00:28:39,730 --> 00:28:45,120
or less

596
00:28:41,230 --> 00:28:47,399
it's definitely noisy doing<font color="#E5E5E5"> that</font>

597
00:28:45,120 --> 00:28:50,580
because we're going<font color="#E5E5E5"> to generate</font>

598
00:28:47,399 --> 00:28:52,998
<font color="#CCCCCC">move buckets different payloads</font><font color="#E5E5E5"> from all</font>

599
00:28:50,580 --> 00:28:52,999
over the network

600
00:28:53,400 --> 00:28:59,970
the issue is that it's we're doing<font color="#E5E5E5"> brand</font>

601
00:28:56,310 --> 00:29:01,530
<font color="#E5E5E5">command execution</font><font color="#CCCCCC"> when these</font><font color="#E5E5E5"> payloads we</font>

602
00:28:59,970 --> 00:29:04,770
don't know<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the pop gadget chains</font>

603
00:29:01,530 --> 00:29:06,060
and the<font color="#E5E5E5"> libraries are present which ones</font>

604
00:29:04,770 --> 00:29:09,270
<font color="#E5E5E5">if we're going to just fire all the</font>

605
00:29:06,060 --> 00:29:10,830
different payloads<font color="#E5E5E5"> so we might fire 10</font>

606
00:29:09,270 --> 00:29:14,520
different payloads<font color="#E5E5E5"> at an application and</font>

607
00:29:10,830 --> 00:29:15,870
we<font color="#CCCCCC"> might see that</font><font color="#E5E5E5"> replicate</font><font color="#CCCCCC"> that the</font>

608
00:29:14,520 --> 00:29:18,330
<font color="#E5E5E5">server starts opinions or something</font>

609
00:29:15,870 --> 00:29:23,239
<font color="#E5E5E5">about</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> payload that we use in which</font>

610
00:29:18,330 --> 00:29:23,240
one actually<font color="#CCCCCC"> cause</font><font color="#E5E5E5"> that to happen</font>

611
00:29:23,340 --> 00:29:28,889
and<font color="#E5E5E5"> another thing is we might find</font>

612
00:29:26,970 --> 00:29:32,280
nothing's happening nothing seems to be

613
00:29:28,890 --> 00:29:33,480
happening<font color="#CCCCCC"> is the pelo</font><font color="#E5E5E5"> command that we're</font>

614
00:29:32,280 --> 00:29:36,039
trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use actually available on</font>

615
00:29:33,480 --> 00:29:37,749
server is a server

616
00:29:36,039 --> 00:29:39,970
<font color="#E5E5E5">is there actually actually some good</font>

617
00:29:37,749 --> 00:29:41,200
firewall and in<font color="#CCCCCC"> places step in</font><font color="#E5E5E5"> traffic</font>

618
00:29:39,970 --> 00:29:45,389
<font color="#E5E5E5">from reaching us when we've we've</font>

619
00:29:41,200 --> 00:29:47,470
executed<font color="#E5E5E5"> a</font><font color="#CCCCCC"> command</font><font color="#E5E5E5"> we don't know so</font>

620
00:29:45,389 --> 00:29:49,620
ideally we want some<font color="#CCCCCC"> feedback from the</font>

621
00:29:47,470 --> 00:29:52,500
application

622
00:29:49,620 --> 00:29:55,379
<font color="#CCCCCC">I said you might pin yourself farewell</font>

623
00:29:52,500 --> 00:29:57,620
<font color="#CCCCCC">Matt stop</font><font color="#E5E5E5"> that if you do</font><font color="#CCCCCC"> try</font><font color="#E5E5E5"> that make</font>

624
00:29:55,380 --> 00:30:00,080
sure that<font color="#CCCCCC"> you limit the pink</font><font color="#E5E5E5"> um</font>

625
00:29:57,620 --> 00:30:03,860
when I did this I got a bit excited<font color="#CCCCCC"> and</font>

626
00:30:00,080 --> 00:30:05,870
<font color="#E5E5E5">I forgot to do</font><font color="#CCCCCC"> that so I made</font><font color="#E5E5E5"> some</font>

627
00:30:03,860 --> 00:30:07,370
<font color="#CCCCCC">processes constantly pinging my box</font><font color="#E5E5E5"> and</font>

628
00:30:05,870 --> 00:30:11,689
so I managed<font color="#CCCCCC"> to get on the sovereign and</font>

629
00:30:07,370 --> 00:30:15,309
kill<font color="#E5E5E5"> them off but actually a better</font>

630
00:30:11,690 --> 00:30:15,309
option<font color="#E5E5E5"> is to try an invalid command</font>

631
00:30:15,940 --> 00:30:21,380
generally when you when you

632
00:30:19,130 --> 00:30:24,559
<font color="#CCCCCC">sucking</font><font color="#E5E5E5"> these kind of issues you'll at</font>

633
00:30:21,380 --> 00:30:26,870
least get exceptions back over<font color="#CCCCCC"> there</font>

634
00:30:24,559 --> 00:30:30,700
<font color="#CCCCCC">network I don't</font><font color="#E5E5E5"> think I've seen a</font><font color="#CCCCCC"> saga</font>

635
00:30:26,870 --> 00:30:30,699
<font color="#E5E5E5">yet that didn't some an exception back</font>

636
00:30:31,360 --> 00:30:36,080
now<font color="#E5E5E5"> reuse an invalid</font><font color="#CCCCCC"> command</font>

637
00:30:35,530 --> 00:30:37,190
and

638
00:30:36,080 --> 00:30:40,220
[Music]

639
00:30:37,190 --> 00:30:44,570
then we'll<font color="#E5E5E5"> get an exception IO exception</font>

640
00:30:40,220 --> 00:30:46,190
<font color="#CCCCCC">says cannot one program so everyone X Y</font>

641
00:30:44,570 --> 00:30:49,700
Z X<font color="#CCCCCC"> Y Zed and</font><font color="#E5E5E5"> that's not</font><font color="#CCCCCC"> present on</font><font color="#E5E5E5"> the</font>

642
00:30:46,190 --> 00:30:51,739
server<font color="#E5E5E5"> will get that so we can confirm</font>

643
00:30:49,700 --> 00:30:54,710
that<font color="#E5E5E5"> the payload chain the pop gadget</font>

644
00:30:51,739 --> 00:30:58,399
chain<font color="#E5E5E5"> that actually triggered that is is</font>

645
00:30:54,710 --> 00:30:59,720
available<font color="#CCCCCC"> to the server if the pop</font>

646
00:30:58,399 --> 00:31:01,678
gadget chain isn't<font color="#CCCCCC"> available</font>

647
00:30:59,720 --> 00:31:04,109
[Music]

648
00:31:01,679 --> 00:31:07,200
across not<font color="#E5E5E5"> found exception because we've</font>

649
00:31:04,109 --> 00:31:08,908
sent our objects of a cross<font color="#E5E5E5"> sort of</font>

650
00:31:07,200 --> 00:31:10,440
server<font color="#E5E5E5"> the Soviets attempted to</font>

651
00:31:08,909 --> 00:31:11,580
<font color="#E5E5E5">instantiate an object of</font><font color="#CCCCCC"> that grass and</font>

652
00:31:10,440 --> 00:31:12,059
<font color="#E5E5E5">it doesn't know what the cross</font><font color="#CCCCCC"> is so</font>

653
00:31:11,580 --> 00:31:14,369
it's gone

654
00:31:12,059 --> 00:31:19,940
I don't know cosmic farm there you go

655
00:31:14,369 --> 00:31:22,168
and so we can fire a single payload<font color="#E5E5E5"> with</font>

656
00:31:19,940 --> 00:31:24,179
anybody command<font color="#E5E5E5"> and we can find out</font>

657
00:31:22,169 --> 00:31:30,389
<font color="#E5E5E5">whether the pop</font><font color="#CCCCCC"> graduate chain is usable</font>

658
00:31:24,179 --> 00:31:31,559
<font color="#E5E5E5">and also well</font><font color="#CCCCCC"> we using the sense that</font>

659
00:31:30,389 --> 00:31:34,189
now we<font color="#CCCCCC"> can find out the commanders</font>

660
00:31:31,559 --> 00:31:34,190
<font color="#CCCCCC">available sorry</font>

661
00:31:35,400 --> 00:31:42,320
so<font color="#CCCCCC"> that's saying</font><font color="#E5E5E5"> pelo commands there's a</font>

662
00:31:39,540 --> 00:31:42,320
few quirks<font color="#CCCCCC"> with</font><font color="#E5E5E5"> this</font>

663
00:31:42,440 --> 00:31:48,420
like<font color="#E5E5E5"> I said we've got</font><font color="#CCCCCC"> blanked command</font>

664
00:31:45,630 --> 00:31:50,980
execution<font color="#CCCCCC"> if we've got an entrant and</font>

665
00:31:48,420 --> 00:31:52,779
we've got some<font color="#E5E5E5"> pub gadgets at work</font>

666
00:31:50,980 --> 00:31:54,429
usually we want<font color="#E5E5E5"> the sunlight so shall we</font>

667
00:31:52,779 --> 00:31:56,590
want more actresses so we want a nicer

668
00:31:54,429 --> 00:32:00,570
way to interrupt with server and then

669
00:31:56,590 --> 00:32:03,199
<font color="#E5E5E5">pivot</font><font color="#CCCCCC"> sir</font><font color="#E5E5E5"> to other systems</font>

670
00:32:00,570 --> 00:32:03,200
so

671
00:32:04,500 --> 00:32:10,080
<font color="#CCCCCC">lesson that we might do is try and</font>

672
00:32:07,320 --> 00:32:12,280
enumerate<font color="#CCCCCC"> Commons</font><font color="#E5E5E5"> available a target</font>

673
00:32:10,080 --> 00:32:14,199
environment

674
00:32:12,280 --> 00:32:16,720
same technique<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I just</font><font color="#CCCCCC"> mentioned if</font>

675
00:32:14,200 --> 00:32:21,159
we get a IO exception saying cannot run

676
00:32:16,720 --> 00:32:23,200
program then<font color="#E5E5E5"> we know</font><font color="#CCCCCC"> that the pop gadget</font>

677
00:32:21,159 --> 00:32:26,429
chain is available but we also know

678
00:32:23,200 --> 00:32:26,429
<font color="#CCCCCC">there that command isn't available</font>

679
00:32:27,190 --> 00:32:33,640
and there are some<font color="#E5E5E5"> limitations</font><font color="#CCCCCC"> to</font>

680
00:32:31,300 --> 00:32:35,180
the payload commands that we can use and

681
00:32:33,640 --> 00:32:37,160
so

682
00:32:35,180 --> 00:32:40,670
these these pop gadget chains in my

683
00:32:37,160 --> 00:32:42,260
<font color="#CCCCCC">source aerial use</font><font color="#E5E5E5"> Java</font><font color="#CCCCCC"> dot lined up one</font>

684
00:32:40,670 --> 00:32:44,510
time to<font color="#CCCCCC"> exec with a single string</font>

685
00:32:42,260 --> 00:32:46,820
parameter<font color="#CCCCCC"> and well that does is it</font><font color="#E5E5E5"> takes</font>

686
00:32:44,510 --> 00:32:49,850
up string splits it<font color="#E5E5E5"> on the space</font>

687
00:32:46,820 --> 00:32:51,620
character<font color="#CCCCCC"> and then the first is the the</font>

688
00:32:49,850 --> 00:32:53,990
first item in<font color="#CCCCCC"> that array</font><font color="#E5E5E5"> and the result</font>

689
00:32:51,620 --> 00:32:56,919
<font color="#E5E5E5">is the command to</font><font color="#CCCCCC"> execute and the rest</font>

690
00:32:53,990 --> 00:32:59,570
of the<font color="#CCCCCC"> parameters to that command that</font>

691
00:32:56,920 --> 00:33:02,280
<font color="#CCCCCC">means that we can't use whitespace in</font>

692
00:32:59,570 --> 00:33:05,280
<font color="#E5E5E5">parameters through that command</font>

693
00:33:02,280 --> 00:33:08,520
so for<font color="#CCCCCC"> example we</font><font color="#E5E5E5"> can run this command</font>

694
00:33:05,280 --> 00:33:12,090
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can see that parameters</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> Amanda</font>

695
00:33:08,520 --> 00:33:13,530
different<font color="#E5E5E5"> colors and we can't use this</font>

696
00:33:12,090 --> 00:33:15,540
command<font color="#E5E5E5"> because we've got spaces in</font>

697
00:33:13,530 --> 00:33:17,760
between<font color="#CCCCCC"> meant that the parameters get</font>

698
00:33:15,540 --> 00:33:21,420
split up<font color="#E5E5E5"> as shown</font><font color="#CCCCCC"> there with the</font>

699
00:33:17,760 --> 00:33:23,640
different colors<font color="#CCCCCC"> we also can't use</font><font color="#E5E5E5"> shell</font>

700
00:33:21,420 --> 00:33:27,720
operators so<font color="#E5E5E5"> piping and output</font>

701
00:33:23,640 --> 00:33:30,900
redirection<font color="#CCCCCC"> and now I'm going</font><font color="#E5E5E5"> to skip</font>

702
00:33:27,720 --> 00:33:34,050
over<font color="#E5E5E5"> these some examples of payload</font>

703
00:33:30,900 --> 00:33:37,200
commands<font color="#E5E5E5"> that we can use and windows as</font>

704
00:33:34,050 --> 00:33:39,810
well<font color="#E5E5E5"> but came across this after the</font>

705
00:33:37,200 --> 00:33:44,940
first summer<font color="#CCCCCC"> deliver this talk payload</font>

706
00:33:39,810 --> 00:33:48,139
command<font color="#E5E5E5"> X encoder</font><font color="#CCCCCC"> a type in arbitrary</font>

707
00:33:44,940 --> 00:33:50,370
brush commands<font color="#E5E5E5"> PowerShell - perl and</font>

708
00:33:48,140 --> 00:33:53,820
<font color="#CCCCCC">encode</font><font color="#E5E5E5"> source commands so that</font><font color="#CCCCCC"> you can</font>

709
00:33:50,370 --> 00:33:55,199
use them with one time<font color="#CCCCCC"> book Jack so we</font>

710
00:33:53,820 --> 00:33:57,790
just take out the button and we<font color="#CCCCCC"> can</font>

711
00:33:55,200 --> 00:34:00,580
execute whatever<font color="#CCCCCC"> commands one</font>

712
00:33:57,790 --> 00:34:02,409
hopefully windows where<font color="#E5E5E5"> powershell is</font>

713
00:34:00,580 --> 00:34:06,340
obviously a bit more difficult<font color="#CCCCCC"> but we we</font>

714
00:34:02,410 --> 00:34:09,930
<font color="#E5E5E5">can probably Dave</font><font color="#CCCCCC"> thought so we've got</font>

715
00:34:06,340 --> 00:34:09,929
<font color="#E5E5E5">all these things now for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> sock</font>

716
00:34:10,668 --> 00:34:14,138
<font color="#E5E5E5">couple of case studies</font>

717
00:34:14,210 --> 00:34:19,470
so the first one

718
00:34:16,460 --> 00:34:22,679
and<font color="#CCCCCC"> Spring Framework</font>

719
00:34:19,469 --> 00:34:24,750
and as if has a feature called<font color="#CCCCCC"> hayseeds</font>

720
00:34:22,679 --> 00:34:26,819
people<font color="#E5E5E5"> will take what remoting generally</font>

721
00:34:24,750 --> 00:34:28,889
but this<font color="#CCCCCC"> is HTTP version razorba</font>

722
00:34:26,819 --> 00:34:31,800
versions of it and what this<font color="#E5E5E5"> allows us</font>

723
00:34:28,889 --> 00:34:34,700
<font color="#CCCCCC">to do is expose a bunch</font><font color="#E5E5E5"> of Java classes</font>

724
00:34:31,800 --> 00:34:34,700
<font color="#E5E5E5">over HTTP</font>

725
00:34:36,080 --> 00:34:42,069
that's<font color="#E5E5E5"> facilitated by the spring remote</font>

726
00:34:39,320 --> 00:34:42,070
invocation class

727
00:34:43,940 --> 00:34:50,159
so essentially

728
00:34:47,129 --> 00:34:51,239
that we do is we we do some

729
00:34:50,159 --> 00:34:52,829
<font color="#CCCCCC">configuration stuff with Spring</font>

730
00:34:51,239 --> 00:34:54,359
<font color="#CCCCCC">Framework</font><font color="#E5E5E5"> and we say right this class is</font>

731
00:34:52,829 --> 00:34:57,269
going to<font color="#E5E5E5"> be exposed</font><font color="#CCCCCC"> over-hasty to people</font>

732
00:34:54,359 --> 00:34:59,578
moving on<font color="#CCCCCC"> the client side we can learn</font>

733
00:34:57,269 --> 00:35:02,609
we do<font color="#E5E5E5"> a similar configuration</font><font color="#CCCCCC"> we say</font>

734
00:34:59,579 --> 00:35:05,309
right<font color="#E5E5E5"> I want an</font><font color="#CCCCCC"> object</font><font color="#E5E5E5"> I want this</font>

735
00:35:02,609 --> 00:35:07,170
object<font color="#CCCCCC"> and sprinkle some</font><font color="#E5E5E5"> logic in the</font>

736
00:35:05,309 --> 00:35:09,690
background then it goes<font color="#E5E5E5"> it recall the</font>

737
00:35:07,170 --> 00:35:11,460
method on<font color="#E5E5E5"> the object</font><font color="#CCCCCC"> spring</font><font color="#E5E5E5"> will further</font>

738
00:35:09,690 --> 00:35:14,039
off<font color="#CCCCCC"> over-hasty</font><font color="#E5E5E5"> to page to the server</font><font color="#CCCCCC"> way</font>

739
00:35:11,460 --> 00:35:16,559
or decode<font color="#CCCCCC"> or you know invocation objects</font>

740
00:35:14,039 --> 00:35:18,980
and<font color="#E5E5E5"> column method</font><font color="#CCCCCC"> got the result and</font>

741
00:35:16,559 --> 00:35:18,980
send it<font color="#E5E5E5"> back</font>

742
00:35:19,880 --> 00:35:26,140
that's done<font color="#CCCCCC"> and in</font><font color="#E5E5E5"> a body ever hasty to</font>

743
00:35:23,360 --> 00:35:26,140
be post<font color="#CCCCCC"> request</font>

744
00:35:26,490 --> 00:35:32,149
and it looks like<font color="#E5E5E5"> this</font>

745
00:35:29,550 --> 00:35:32,150
this

746
00:35:32,640 --> 00:35:38,020
so that's our entry<font color="#CCCCCC"> point</font>

747
00:35:36,460 --> 00:35:39,790
literally just<font color="#E5E5E5"> the body of a post</font>

748
00:35:38,020 --> 00:35:42,790
request<font color="#CCCCCC"> before any civilized objects in</font>

749
00:35:39,790 --> 00:35:45,330
there and the server<font color="#E5E5E5"> spring Hasty's be</font>

750
00:35:42,790 --> 00:35:48,360
remote and will be sterilized it

751
00:35:45,330 --> 00:35:49,680
and so<font color="#E5E5E5"> this is an extension</font><font color="#CCCCCC"> to the</font>

752
00:35:48,360 --> 00:35:52,530
script<font color="#E5E5E5"> I showed earlier where we're</font>

753
00:35:49,680 --> 00:35:55,740
looping through different payload types

754
00:35:52,530 --> 00:36:00,900
<font color="#CCCCCC">fire payload just does a post request</font>

755
00:35:55,740 --> 00:36:02,879
using<font color="#E5E5E5"> the piping request library</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> also</font>

756
00:36:00,900 --> 00:36:05,700
<font color="#E5E5E5">checks for the cross not</font><font color="#CCCCCC"> phone</font>

757
00:36:02,880 --> 00:36:08,720
exceptional tells us if<font color="#CCCCCC"> that</font><font color="#E5E5E5"> pop gadget</font>

758
00:36:05,700 --> 00:36:08,720
chain is supported on up

759
00:36:11,310 --> 00:36:17,540
yeah so using that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> could pop</font><font color="#E5E5E5"> Spring</font>

760
00:36:14,760 --> 00:36:22,470
<font color="#E5E5E5">Framework spring</font><font color="#CCCCCC"> hayseeds</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> mine</font>

761
00:36:17,540 --> 00:36:24,930
doesn't<font color="#E5E5E5"> happen though and the problem</font>

762
00:36:22,470 --> 00:36:28,368
<font color="#E5E5E5">here is</font><font color="#CCCCCC"> that</font>

763
00:36:24,930 --> 00:36:28,368
I'm<font color="#E5E5E5"> sending a</font>

764
00:36:29,600 --> 00:36:35,270
<font color="#CCCCCC">hushed set objects to spoon framework in</font>

765
00:36:32,390 --> 00:36:38,089
the body<font color="#CCCCCC"> is</font><font color="#E5E5E5"> post</font><font color="#CCCCCC"> request</font>

766
00:36:35,270 --> 00:36:40,759
the spring framework is deserializing<font color="#CCCCCC"> a</font>

767
00:36:38,090 --> 00:36:43,190
<font color="#CCCCCC">hush sled but it wanted a remote</font>

768
00:36:40,760 --> 00:36:45,380
invocation<font color="#CCCCCC"> I should have sent a remote</font>

769
00:36:43,190 --> 00:36:51,080
<font color="#E5E5E5">invocation objects but just</font><font color="#CCCCCC"> Ysera rise</font>

770
00:36:45,380 --> 00:36:54,320
to<font color="#E5E5E5"> anyway the hash set object that I</font>

771
00:36:51,080 --> 00:36:58,220
sent isn't compatible<font color="#CCCCCC"> with the remote</font>

772
00:36:54,320 --> 00:37:00,310
invocation<font color="#E5E5E5"> it's not compatible</font><font color="#CCCCCC"> and so an</font>

773
00:36:58,220 --> 00:37:02,549
exception<font color="#E5E5E5"> gets thrown</font>

774
00:37:00,310 --> 00:37:05,890
and the object that<font color="#CCCCCC"> I send to the server</font>

775
00:37:02,550 --> 00:37:09,150
<font color="#E5E5E5">never reaches the application that's</font>

776
00:37:05,890 --> 00:37:11,500
using<font color="#E5E5E5"> spring</font><font color="#CCCCCC"> Hastie to be remoting and</font>

777
00:37:09,150 --> 00:37:14,730
<font color="#E5E5E5">because</font><font color="#CCCCCC"> Spring Framework</font><font color="#E5E5E5"> itself can't</font>

778
00:37:11,500 --> 00:37:14,730
cast it's a remote invocation

779
00:37:15,380 --> 00:37:19,040
but card<font color="#E5E5E5"> it's pivotal who make Spring</font>

780
00:37:17,360 --> 00:37:20,710
Framework<font color="#E5E5E5"> that's not an issue with</font>

781
00:37:19,040 --> 00:37:23,460
Spring Framework

782
00:37:20,710 --> 00:37:23,460
go figure

783
00:37:24,040 --> 00:37:28,090
the<font color="#CCCCCC"> Garland's</font><font color="#E5E5E5"> been secured the pivotal</font>

784
00:37:26,109 --> 00:37:30,730
security team<font color="#CCCCCC"> that reported</font><font color="#E5E5E5"> this issue</font><font color="#CCCCCC"> -</font>

785
00:37:28,090 --> 00:37:34,960
<font color="#CCCCCC">has a CV number for report on</font><font color="#E5E5E5"> a very</font>

786
00:37:30,730 --> 00:37:36,730
similar issue and I think<font color="#CCCCCC"> J boss and he</font>

787
00:37:34,960 --> 00:37:38,590
still<font color="#CCCCCC"> thinks that</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is an</font><font color="#E5E5E5"> issue with</font>

788
00:37:36,730 --> 00:37:40,030
Spring Framework<font color="#E5E5E5"> as an application</font>

789
00:37:38,590 --> 00:37:42,840
developer you<font color="#CCCCCC"> can't you</font><font color="#E5E5E5"> won't</font><font color="#CCCCCC"> ever see</font>

790
00:37:40,030 --> 00:37:42,840
<font color="#E5E5E5">that payload</font>

791
00:37:43,700 --> 00:37:49,279
second case<font color="#CCCCCC"> study</font><font color="#E5E5E5"> Acme money obviously</font>

792
00:37:47,000 --> 00:37:50,470
<font color="#E5E5E5">that's not what it's called</font><font color="#CCCCCC"> can't reveal</font>

793
00:37:49,280 --> 00:37:53,150
the name in a minute

794
00:37:50,470 --> 00:37:55,299
but it's where that band<font color="#E5E5E5"> login packet</font>

795
00:37:53,150 --> 00:37:55,300
was

796
00:37:55,990 --> 00:38:01,470
so exploitation was<font color="#E5E5E5"> a little bit more</font>

797
00:37:59,650 --> 00:38:04,510
involved<font color="#E5E5E5"> this time still easily done and</font>

798
00:38:01,470 --> 00:38:08,140
but scripts can still do it<font color="#E5E5E5"> quite easily</font>

799
00:38:04,510 --> 00:38:11,170
<font color="#CCCCCC">so that's probably civilisation</font><font color="#E5E5E5"> day or</font>

800
00:38:08,140 --> 00:38:15,730
in the<font color="#E5E5E5"> stream can say that quite clearly</font>

801
00:38:11,170 --> 00:38:18,580
<font color="#E5E5E5">though so like I said I didn't see a</font><font color="#CCCCCC"> CEB</font>

802
00:38:15,730 --> 00:38:21,220
<font color="#CCCCCC">zero zero zero five so we started</font>

803
00:38:18,580 --> 00:38:23,710
application<font color="#CCCCCC"> fright up wireshark I know</font>

804
00:38:21,220 --> 00:38:25,390
that sorry<font color="#CCCCCC"> closed application down</font>

805
00:38:23,710 --> 00:38:27,780
<font color="#CCCCCC">alfredo by shot restarted application</font>

806
00:38:25,390 --> 00:38:31,450
and I captured the full

807
00:38:27,780 --> 00:38:33,580
communication and actually it was quite

808
00:38:31,450 --> 00:38:35,529
<font color="#CCCCCC">simple that was just an initial pocket</font>

809
00:38:33,580 --> 00:38:37,990
went out to the server response came

810
00:38:35,530 --> 00:38:40,450
back<font color="#E5E5E5"> another response came back</font><font color="#CCCCCC"> and then</font>

811
00:38:37,990 --> 00:38:42,279
like sled before<font color="#E5E5E5"> you're looking for a</font>

812
00:38:40,450 --> 00:38:44,250
bite<font color="#E5E5E5"> in what do you see ranges so</font><font color="#CCCCCC"> seven</font>

813
00:38:42,280 --> 00:38:48,510
<font color="#CCCCCC">three and</font><font color="#E5E5E5"> that second out</font><font color="#CCCCCC"> brown packet</font>

814
00:38:44,250 --> 00:38:48,510
that's<font color="#E5E5E5"> the injection point</font>

815
00:38:51,990 --> 00:38:56,160
<font color="#CCCCCC">oh sorry soap yeah</font>

816
00:38:54,540 --> 00:38:57,830
highlight the<font color="#E5E5E5"> stuff</font>

817
00:38:56,160 --> 00:39:00,410
so

818
00:38:57,830 --> 00:39:02,299
<font color="#CCCCCC">some prints point out here this very</font>

819
00:39:00,410 --> 00:39:04,149
first<font color="#E5E5E5"> packet the following bytes there</font>

820
00:39:02,300 --> 00:39:06,650
is static every single time I did this

821
00:39:04,150 --> 00:39:08,600
so I knew that<font color="#CCCCCC"> I could</font><font color="#E5E5E5"> just send</font><font color="#CCCCCC"> that</font>

822
00:39:06,650 --> 00:39:11,360
same packet replay<font color="#E5E5E5"> that same packet to</font>

823
00:39:08,600 --> 00:39:12,740
the server so<font color="#E5E5E5"> as</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> see we've got</font>

824
00:39:11,360 --> 00:39:14,630
<font color="#E5E5E5">fire payload method from that same</font>

825
00:39:12,740 --> 00:39:20,600
Python<font color="#CCCCCC"> script are similar you</font><font color="#E5E5E5"> know a</font>

826
00:39:14,630 --> 00:39:23,360
copy of it we<font color="#E5E5E5"> connected a target we</font>

827
00:39:20,600 --> 00:39:26,000
send that first pocket the static every

828
00:39:23,360 --> 00:39:27,590
single time<font color="#E5E5E5"> we received</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> packets from</font>

829
00:39:26,000 --> 00:39:30,650
<font color="#E5E5E5">the</font><font color="#CCCCCC"> server</font><font color="#E5E5E5"> don't care what</font><font color="#CCCCCC"> they are just</font>

830
00:39:27,590 --> 00:39:33,590
<font color="#E5E5E5">trucking away and then we send the</font>

831
00:39:30,650 --> 00:39:37,640
payload<font color="#CCCCCC"> and the reason for the square</font>

832
00:39:33,590 --> 00:39:41,960
brackets<font color="#E5E5E5"> for : is the stream header was</font>

833
00:39:37,640 --> 00:39:43,700
already<font color="#E5E5E5"> sent there a CED</font><font color="#CCCCCC"> so on so</font><font color="#E5E5E5"> that</font>

834
00:39:41,960 --> 00:39:44,930
payload contains the stream header so we

835
00:39:43,700 --> 00:39:46,640
just trim<font color="#CCCCCC"> that off and we</font><font color="#E5E5E5"> summon the</font>

836
00:39:44,930 --> 00:39:49,730
rest<font color="#E5E5E5"> of it the objects the payload</font>

837
00:39:46,640 --> 00:39:53,600
objects so through<font color="#E5E5E5"> this script together</font>

838
00:39:49,730 --> 00:39:55,310
<font color="#E5E5E5">based on the packet capture I fried it</font>

839
00:39:53,600 --> 00:39:57,200
at a server<font color="#E5E5E5"> found out that it was</font>

840
00:39:55,310 --> 00:40:02,930
<font color="#CCCCCC">running it</font><font color="#E5E5E5"> was using</font><font color="#CCCCCC"> Commons collections</font>

841
00:39:57,200 --> 00:40:06,399
<font color="#CCCCCC">3 t1 and got command execution got quite</font>

842
00:40:02,930 --> 00:40:06,399
a lot<font color="#CCCCCC"> of command executions actually</font>

843
00:40:07,230 --> 00:40:11,339
so this point<font color="#E5E5E5"> I've proved</font><font color="#CCCCCC"> that I'm</font>

844
00:40:09,480 --> 00:40:15,780
executing commands on the<font color="#E5E5E5"> server and you</font>

845
00:40:11,339 --> 00:40:17,820
<font color="#E5E5E5">could say that's you one and well then</font>

846
00:40:15,780 --> 00:40:19,589
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is a good</font><font color="#E5E5E5"> example of what you can</font>

847
00:40:17,820 --> 00:40:22,500
do with this<font color="#E5E5E5"> kind of issue</font><font color="#CCCCCC"> and this</font>

848
00:40:19,589 --> 00:40:24,060
there's<font color="#CCCCCC"> it's there's loads of big</font>

849
00:40:22,500 --> 00:40:26,820
enterprise applications that have this

850
00:40:24,060 --> 00:40:31,160
<font color="#E5E5E5">kind of issue so I've got to carry on</font>

851
00:40:26,820 --> 00:40:33,030
<font color="#E5E5E5">obviously I wanted a show so I used</font>

852
00:40:31,160 --> 00:40:35,399
technique that I've talked about

853
00:40:33,030 --> 00:40:39,960
so find valid commands<font color="#E5E5E5"> on the server I</font>

854
00:40:35,400 --> 00:40:40,920
tried<font color="#CCCCCC"> net cut to beget curl getting the</font>

855
00:40:39,960 --> 00:40:45,839
command didn't exist

856
00:40:40,920 --> 00:40:48,450
I<font color="#E5E5E5"> found that pearl was on the server at</font>

857
00:40:45,839 --> 00:40:52,630
the time<font color="#CCCCCC"> I wasn't aware of</font><font color="#E5E5E5"> the payload</font>

858
00:40:48,450 --> 00:40:54,910
encoder<font color="#E5E5E5"> I mentioned so this Brian ever</font>

859
00:40:52,630 --> 00:40:57,670
I can't<font color="#E5E5E5"> easily write a file</font><font color="#CCCCCC"> because I</font>

860
00:40:54,910 --> 00:41:00,710
can't<font color="#CCCCCC"> Ocoee direct</font><font color="#E5E5E5"> outputs or file for</font>

861
00:40:57,670 --> 00:41:04,099
example<font color="#E5E5E5"> every one of they were</font><font color="#CCCCCC"> purl</font>

862
00:41:00,710 --> 00:41:06,170
<font color="#CCCCCC">she'll one-liner</font><font color="#E5E5E5"> I've got to use socket</font>

863
00:41:04,099 --> 00:41:06,680
so I need a space and the parameter to

864
00:41:06,170 --> 00:41:09,290
<font color="#E5E5E5">purl</font>

865
00:41:06,680 --> 00:41:11,118
so it's I could probably<font color="#E5E5E5"> use it some</font>

866
00:41:09,290 --> 00:41:13,730
<font color="#E5E5E5">help</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we'll see what else there is</font>

867
00:41:11,119 --> 00:41:15,500
<font color="#E5E5E5">solve it</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> eventually found that</font>

868
00:41:13,730 --> 00:41:19,760
the server had the<font color="#CCCCCC"> TFTP command</font>

869
00:41:15,500 --> 00:41:21,470
available<font color="#CCCCCC"> quick Python script</font><font color="#E5E5E5"> so it set</font>

870
00:41:19,760 --> 00:41:23,869
up a directory<font color="#E5E5E5"> as a</font><font color="#CCCCCC"> TFTP server and</font><font color="#E5E5E5"> our</font>

871
00:41:21,470 --> 00:41:25,910
books<font color="#E5E5E5"> I had access</font><font color="#CCCCCC"> to the file system</font>

872
00:41:23,869 --> 00:41:27,380
then I could download stuff<font color="#E5E5E5"> from my box</font>

873
00:41:25,910 --> 00:41:33,049
<font color="#E5E5E5">I</font><font color="#CCCCCC"> could have all sorts a bit to the</font>

874
00:41:27,380 --> 00:41:35,390
server<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> she'll on server and well</font>

875
00:41:33,050 --> 00:41:38,450
as well firstly this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the first the</font>

876
00:41:35,390 --> 00:41:41,150
<font color="#E5E5E5">first</font><font color="#CCCCCC"> every time I found I come across</font>

877
00:41:38,450 --> 00:41:43,279
<font color="#E5E5E5">an air box</font>

878
00:41:41,150 --> 00:41:45,020
I do mostly application testing and code

879
00:41:43,280 --> 00:41:46,940
review<font color="#E5E5E5"> first</font><font color="#CCCCCC"> sampling</font><font color="#E5E5E5"> across one of</font>

880
00:41:45,020 --> 00:41:49,550
<font color="#E5E5E5">these and that's probably</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> a bit</font>

881
00:41:46,940 --> 00:41:52,190
of fun<font color="#E5E5E5"> kid with commands but it was also</font>

882
00:41:49,550 --> 00:41:56,240
outdated<font color="#CCCCCC"> because obviously</font><font color="#E5E5E5"> operating</font>

883
00:41:52,190 --> 00:41:58,910
system patches don't know and

884
00:41:56,240 --> 00:42:01,290
and so<font color="#E5E5E5"> from the privileged escalation</font>

885
00:41:58,910 --> 00:42:04,080
<font color="#E5E5E5">expert</font>

886
00:42:01,290 --> 00:42:08,000
<font color="#E5E5E5">I thought awesome</font><font color="#CCCCCC"> I'm done</font><font color="#E5E5E5"> I've got</font><font color="#CCCCCC"> me</font>

887
00:42:04,080 --> 00:42:08,000
on this box but the

888
00:42:08,070 --> 00:42:14,730
exploit was read<font color="#E5E5E5"> in</font><font color="#CCCCCC"> C and I</font><font color="#E5E5E5"> didn't have</font>

889
00:42:12,150 --> 00:42:15,450
<font color="#CCCCCC">build tools available on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> box brooded</font>

890
00:42:14,730 --> 00:42:18,090
up<font color="#CCCCCC"> peril</font>

891
00:42:15,450 --> 00:42:20,939
so I rewrote my exploit in Perth<font color="#CCCCCC"> it was</font>

892
00:42:18,090 --> 00:42:24,270
<font color="#E5E5E5">painful but it was worth it because I</font>

893
00:42:20,940 --> 00:42:26,160
got<font color="#E5E5E5"> root on that box</font><font color="#CCCCCC"> and I'm like I said</font>

894
00:42:24,270 --> 00:42:28,440
from<font color="#E5E5E5"> there I jumps around the entire</font>

895
00:42:26,160 --> 00:42:30,330
network I had<font color="#E5E5E5"> units up millions running</font>

896
00:42:28,440 --> 00:42:31,530
<font color="#E5E5E5">out from when they got alerts that's</font>

897
00:42:30,330 --> 00:42:35,330
<font color="#E5E5E5">what I logged</font><font color="#CCCCCC"> onto</font><font color="#E5E5E5"> the production</font>

898
00:42:31,530 --> 00:42:35,330
<font color="#E5E5E5">servers like it wasn't me</font>

899
00:42:37,539 --> 00:42:41,849
so

900
00:42:39,599 --> 00:42:43,589
like I said this I'm<font color="#E5E5E5"> talking about</font>

901
00:42:41,849 --> 00:42:45,390
<font color="#E5E5E5">practical civilization</font><font color="#CCCCCC"> attack sees</font><font color="#E5E5E5"> I'm</font>

902
00:42:43,589 --> 00:42:47,849
as practical as although attacks other

903
00:42:45,390 --> 00:42:50,729
<font color="#E5E5E5">than as easy to do but</font><font color="#CCCCCC"> I want some tools</font>

904
00:42:47,849 --> 00:42:53,729
that hopefully make<font color="#CCCCCC"> it a bit more</font>

905
00:42:50,729 --> 00:42:58,649
<font color="#CCCCCC">practical so the first one serial brute</font>

906
00:42:53,729 --> 00:43:04,348
<font color="#CCCCCC">this is basically what scripts and Sarah</font>

907
00:42:58,650 --> 00:43:06,619
blue top I will replay HTTP HTTP<font color="#E5E5E5"> request</font>

908
00:43:04,349 --> 00:43:06,619
<font color="#CCCCCC">r/a</font>

909
00:43:06,800 --> 00:43:12,730
<font color="#CCCCCC">a</font><font color="#E5E5E5"> TCP conversation and</font><font color="#CCCCCC"> we'll then jet to</font>

910
00:43:10,640 --> 00:43:14,078
payload at some<font color="#CCCCCC"> prime</font>

911
00:43:12,730 --> 00:43:16,270
and it will<font color="#CCCCCC"> bring folks through the</font>

912
00:43:14,079 --> 00:43:18,849
payloads<font color="#CCCCCC"> analog it will stop at each one</font>

913
00:43:16,270 --> 00:43:20,230
<font color="#E5E5E5">site</font><font color="#CCCCCC"> was it</font><font color="#E5E5E5"> successful because ideally</font>

914
00:43:18,849 --> 00:43:22,119
you don't<font color="#E5E5E5"> want to be spamming all these</font>

915
00:43:20,230 --> 00:43:24,609
different payloads<font color="#CCCCCC"> they'll</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> try and</font>

916
00:43:22,119 --> 00:43:26,859
detect<font color="#E5E5E5"> the exceptions coming back and</font>

917
00:43:24,609 --> 00:43:28,720
<font color="#E5E5E5">I'll tell</font><font color="#CCCCCC"> ya this payloads no good this</font>

918
00:43:26,859 --> 00:43:32,140
<font color="#E5E5E5">one's no good that</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> might be useful</font>

919
00:43:28,720 --> 00:43:33,439
and it's not meant to be<font color="#CCCCCC"> a robust</font>

920
00:43:32,140 --> 00:43:36,259
<font color="#CCCCCC">attacks all</font>

921
00:43:33,440 --> 00:43:39,170
it works for most<font color="#E5E5E5"> cases if you have to</font>

922
00:43:36,260 --> 00:43:40,880
do<font color="#E5E5E5"> something like get such an ID from</font>

923
00:43:39,170 --> 00:43:41,690
<font color="#E5E5E5">the server and then replay that info in</font>

924
00:43:40,880 --> 00:43:44,030
a<font color="#CCCCCC"> packet</font>

925
00:43:41,690 --> 00:43:49,040
it's not going<font color="#E5E5E5"> to do it but</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> that</font>

926
00:43:44,030 --> 00:43:50,870
<font color="#E5E5E5">there's another version srl</font><font color="#CCCCCC"> BRT</font><font color="#E5E5E5"> that by</font>

927
00:43:49,040 --> 00:43:53,240
which you basically implement you

928
00:43:50,870 --> 00:43:54,950
dispatch payload method<font color="#E5E5E5"> do whatever you</font>

929
00:43:53,240 --> 00:43:57,109
want to do that<font color="#CCCCCC"> I so like</font><font color="#E5E5E5"> it's look at</font>

930
00:43:54,950 --> 00:43:58,939
it before<font color="#CCCCCC"> replay</font><font color="#E5E5E5"> the first pocket me</font><font color="#CCCCCC"> two</font>

931
00:43:57,110 --> 00:44:01,380
<font color="#CCCCCC">pockets back and play the replay payload</font>

932
00:43:58,940 --> 00:44:03,820
<font color="#CCCCCC">or send up a Lord</font>

933
00:44:01,380 --> 00:44:06,190
civilization<font color="#CCCCCC"> dump it up Jarrah released</font>

934
00:44:03,820 --> 00:44:07,840
that as well<font color="#E5E5E5"> so if we've</font><font color="#CCCCCC"> got some</font>

935
00:44:06,190 --> 00:44:09,670
theorize date<font color="#E5E5E5"> set we can just pass it</font>

936
00:44:07,840 --> 00:44:12,160
through this<font color="#CCCCCC"> it would empower in a more</font>

937
00:44:09,670 --> 00:44:14,110
human readable<font color="#E5E5E5"> form and we can find a</font>

938
00:44:12,160 --> 00:44:19,259
point<font color="#CCCCCC"> in that stream where we can inject</font>

939
00:44:14,110 --> 00:44:19,260
a payload and yeah

940
00:44:20,180 --> 00:44:24,500
<font color="#CCCCCC">decel up</font><font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> you wanna call</font><font color="#E5E5E5"> it</font>

941
00:44:22,580 --> 00:44:27,230
however you want<font color="#CCCCCC"> to pronounce it it's</font>

942
00:44:24,500 --> 00:44:29,720
it's<font color="#E5E5E5"> just a demo application client and</font>

943
00:44:27,230 --> 00:44:31,570
server<font color="#CCCCCC"> it does</font><font color="#E5E5E5"> something similar</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> this</font>

944
00:44:29,720 --> 00:44:34,069
application<font color="#CCCCCC"> this me money application</font>

945
00:44:31,570 --> 00:44:35,810
but<font color="#E5E5E5"> you can use up</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> actually just try</font>

946
00:44:34,070 --> 00:44:40,330
the tools out and<font color="#CCCCCC"> see how it works and</font>

947
00:44:35,810 --> 00:44:42,770
see if we can exploit<font color="#E5E5E5"> something nice and</font>

948
00:44:40,330 --> 00:44:44,900
so<font color="#E5E5E5"> I was going</font><font color="#CCCCCC"> to do a demo</font><font color="#E5E5E5"> but I think</font>

949
00:44:42,770 --> 00:44:50,990
I'm out of time<font color="#CCCCCC"> so I also didn't</font>

950
00:44:44,900 --> 00:44:53,500
sacrifice to go any conclusion and<font color="#E5E5E5"> any</font>

951
00:44:50,990 --> 00:44:53,500
questions

952
00:45:07,260 --> 00:45:10,710
it's built<font color="#E5E5E5"> into Java it's just</font><font color="#CCCCCC"> easy to</font>

953
00:45:09,600 --> 00:45:12,210
<font color="#E5E5E5">use you don't have to do you don't have</font>

954
00:45:10,710 --> 00:45:13,740
<font color="#E5E5E5">to have an extra library and there's no</font>

955
00:45:12,210 --> 00:45:15,990
you know<font color="#E5E5E5"> no dependencies you just</font>

956
00:45:13,740 --> 00:45:19,259
implement<font color="#CCCCCC"> this interface</font><font color="#E5E5E5"> and you go so</font>

957
00:45:15,990 --> 00:45:21,529
that's it's easy<font color="#CCCCCC"> that's that's it</font>

958
00:45:19,260 --> 00:45:21,530
basically

959
00:45:22,330 --> 00:45:27,960
possible to build a gadget<font color="#E5E5E5"> ideally from</font>

960
00:45:25,060 --> 00:45:29,370
with glasses<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> JJ</font>

961
00:45:27,960 --> 00:45:31,280
yes<font color="#CCCCCC"> weather glasses rather than the</font>

962
00:45:29,370 --> 00:45:35,839
<font color="#E5E5E5">classical home</font>

963
00:45:31,280 --> 00:45:40,610
and so I know<font color="#CCCCCC"> that there are</font><font color="#E5E5E5"> ngenikis</font>

964
00:45:35,840 --> 00:45:45,160
JDK<font color="#E5E5E5"> 7 and JDK 8 pure Java gadgets</font><font color="#CCCCCC"> but</font>

965
00:45:40,610 --> 00:45:45,160
<font color="#E5E5E5">for very</font><font color="#CCCCCC"> very old versions of the JDK</font>

966
00:45:47,900 --> 00:45:53,250
it's you<font color="#E5E5E5"> have to really think</font><font color="#CCCCCC"> in silico</font>

967
00:45:51,360 --> 00:45:55,470
this<font color="#E5E5E5"> medical research is the loads of</font>

968
00:45:53,250 --> 00:45:57,270
work in this area<font color="#E5E5E5"> and it could be quite</font>

969
00:45:55,470 --> 00:46:00,480
time-consuming some people<font color="#E5E5E5"> built tools</font>

970
00:45:57,270 --> 00:46:02,910
that help to find gadgets and the<font color="#CCCCCC"> Hat</font>

971
00:46:00,480 --> 00:46:06,320
being gadgets<font color="#CCCCCC"> that work just purely</font>

972
00:46:02,910 --> 00:46:06,319
using<font color="#CCCCCC"> jelly cake</font><font color="#E5E5E5"> jelly</font>

973
00:46:12,320 --> 00:46:14,380
<font color="#E5E5E5">you</font>

