1
00:00:02,630 --> 00:00:08,790
hi everyone I just want to confirm can

2
00:00:05,370 --> 00:00:11,340
you see my slide it should be chilly now

3
00:00:08,790 --> 00:00:13,288
it's great to be here I'm calling in

4
00:00:11,340 --> 00:00:14,639
from the west coast so it's a little on

5
00:00:13,289 --> 00:00:17,550
the early side for me so that's why I'm

6
00:00:14,639 --> 00:00:20,119
not sharing video my name is Eddie Glen

7
00:00:17,550 --> 00:00:22,200
I work for a company called vinify and

8
00:00:20,120 --> 00:00:24,480
just a little bit about me before I get

9
00:00:22,200 --> 00:00:26,970
started I started off my career as a

10
00:00:24,480 --> 00:00:30,140
software developer developing avionics

11
00:00:26,970 --> 00:00:32,729
software so I spent many many years

12
00:00:30,140 --> 00:00:35,220
concerned about software that controls

13
00:00:32,729 --> 00:00:38,370
aircraft and making sure that it's safe

14
00:00:35,220 --> 00:00:41,040
and secure and over time my career just

15
00:00:38,370 --> 00:00:43,769
kind of led me towards being more

16
00:00:41,040 --> 00:00:46,170
security focused so I'm very happy to be

17
00:00:43,770 --> 00:00:50,040
here today to talk about software supply

18
00:00:46,170 --> 00:00:53,820
chains before I get started I wanted to

19
00:00:50,040 --> 00:00:56,129
tell a story and there's this company in

20
00:00:53,820 --> 00:00:57,540
Europe called Maersk they're the world's

21
00:00:56,130 --> 00:01:01,649
largest shipping conglomerate

22
00:00:57,540 --> 00:01:03,210
and they're responsible for a fifth of

23
00:01:01,649 --> 00:01:05,820
the world shipping capacity it's a huge

24
00:01:03,210 --> 00:01:07,289
company lots of employees lots of

25
00:01:05,820 --> 00:01:11,520
different offices spread around the

26
00:01:07,289 --> 00:01:14,310
world and they had a really bad day on

27
00:01:11,520 --> 00:01:16,850
June 27 2000 17 and I don't know if that

28
00:01:14,310 --> 00:01:19,439
date rings a bell for any of you but uh

29
00:01:16,850 --> 00:01:22,439
something really bad happened at Maersk

30
00:01:19,439 --> 00:01:24,119
that that impacted a lot of people

31
00:01:22,439 --> 00:01:26,669
around the world and basically what

32
00:01:24,119 --> 00:01:28,170
happened is their employees started

33
00:01:26,670 --> 00:01:30,719
seeing screens that look like this on

34
00:01:28,170 --> 00:01:33,840
their computers and what had happened is

35
00:01:30,719 --> 00:01:38,428
that they had been hit by the not petia

36
00:01:33,840 --> 00:01:41,310
malware and 4,000 of their servers got

37
00:01:38,429 --> 00:01:43,109
infected 45,000 pcs got infected it

38
00:01:41,310 --> 00:01:45,539
basically wiped out all the data on all

39
00:01:43,109 --> 00:01:48,749
their computers their voice over IP

40
00:01:45,539 --> 00:01:50,609
phones stop working their ships stopped

41
00:01:48,749 --> 00:01:52,199
moving that port terminal gates stopped

42
00:01:50,609 --> 00:01:54,539
moving up and down so their their

43
00:01:52,200 --> 00:01:59,520
customers couldn't get product through

44
00:01:54,539 --> 00:02:01,229
the port and this ended up affecting not

45
00:01:59,520 --> 00:02:03,209
just mayor split obviously all of the

46
00:02:01,229 --> 00:02:06,380
customers that depended on them for

47
00:02:03,209 --> 00:02:10,229
their worldwide shipping activities and

48
00:02:06,380 --> 00:02:11,790
it took them about 10 days to to get

49
00:02:10,229 --> 00:02:13,800
everything reboot it to where they were

50
00:02:11,790 --> 00:02:16,350
operational again and their internal

51
00:02:13,800 --> 00:02:19,410
accountants said that it had cost

52
00:02:16,350 --> 00:02:21,060
them 300 million dollars but some

53
00:02:19,410 --> 00:02:23,280
external experts thought that it was

54
00:02:21,060 --> 00:02:25,230
probably maybe double or triple that for

55
00:02:23,280 --> 00:02:28,110
them based on the number of days that

56
00:02:25,230 --> 00:02:30,720
they had downtime so extremely serious

57
00:02:28,110 --> 00:02:33,780
incident for Maersk and I'm sure that

58
00:02:30,720 --> 00:02:36,930
their leadership will always remember

59
00:02:33,780 --> 00:02:38,940
that that particular day but it didn't

60
00:02:36,930 --> 00:02:41,300
affect just them it affected other

61
00:02:38,940 --> 00:02:44,700
global companies Merck pharmaceuticals

62
00:02:41,300 --> 00:02:47,820
was in the news in the US my brother

63
00:02:44,700 --> 00:02:49,290
works for fur Merck and he he wasn't

64
00:02:47,820 --> 00:02:50,880
able to work for about two weeks because

65
00:02:49,290 --> 00:02:53,130
they were experiencing similar things

66
00:02:50,880 --> 00:02:55,980
and and this happened with the

67
00:02:53,130 --> 00:02:57,570
subsidiary of FedEx in Europe and the

68
00:02:55,980 --> 00:02:59,600
list goes on with with other companies

69
00:02:57,570 --> 00:03:02,190
that work that were impacted by it and

70
00:02:59,600 --> 00:03:04,320
the estimate for the number of damage

71
00:03:02,190 --> 00:03:06,270
has done worldwide by this one piece of

72
00:03:04,320 --> 00:03:10,019
malware was ten billion dollars so

73
00:03:06,270 --> 00:03:12,600
extremely significant amount of amount

74
00:03:10,020 --> 00:03:16,350
of money and impact on companies and

75
00:03:12,600 --> 00:03:18,989
companies workers so how did it happen

76
00:03:16,350 --> 00:03:21,329
and this is what I wanted really to

77
00:03:18,990 --> 00:03:24,270
focus on today is is the how it happened

78
00:03:21,330 --> 00:03:25,890
and how what steps we can take to keep

79
00:03:24,270 --> 00:03:28,650
this from happening to businesses like

80
00:03:25,890 --> 00:03:31,170
yours so it turns out that there is a

81
00:03:28,650 --> 00:03:33,480
small family-run Ukrainian software

82
00:03:31,170 --> 00:03:35,730
business called link OS and they

83
00:03:33,480 --> 00:03:38,369
produced a piece of software called me

84
00:03:35,730 --> 00:03:41,160
doc that's basically used by all

85
00:03:38,370 --> 00:03:43,560
businesses that do business with Ukraine

86
00:03:41,160 --> 00:03:45,510
so all these global companies did

87
00:03:43,560 --> 00:03:49,350
business with Ukraine so they had this

88
00:03:45,510 --> 00:03:50,880
piece of software and we all know what

89
00:03:49,350 --> 00:03:53,640
was going on and has been going on

90
00:03:50,880 --> 00:03:58,200
between Russia and Ukraine for a number

91
00:03:53,640 --> 00:04:01,559
of years and hackers within the Russian

92
00:03:58,200 --> 00:04:05,040
military infected this piece of software

93
00:04:01,560 --> 00:04:09,840
with no Petya malware and that ended up

94
00:04:05,040 --> 00:04:13,170
infecting everyone that used it

95
00:04:09,840 --> 00:04:14,879
and this is really you know an important

96
00:04:13,170 --> 00:04:17,219
question that so far I've not been able

97
00:04:14,879 --> 00:04:20,099
to find the answer to but if if link OS

98
00:04:17,220 --> 00:04:22,290
was doing proper code signing practices

99
00:04:20,100 --> 00:04:24,660
that shouldn't have been possible but it

100
00:04:22,290 --> 00:04:26,250
was so obviously there was some problem

101
00:04:24,660 --> 00:04:27,600
with code signing and that's what I

102
00:04:26,250 --> 00:04:29,610
really want to talk to you guys about

103
00:04:27,600 --> 00:04:32,130
today to help educate you on the

104
00:04:29,610 --> 00:04:36,240
importance of how to do proper code

105
00:04:32,130 --> 00:04:38,430
signing within your organization so when

106
00:04:36,240 --> 00:04:40,169
we think about the risk that we have

107
00:04:38,430 --> 00:04:42,630
from a security perspective there there

108
00:04:40,169 --> 00:04:44,849
are two risks that are almost different

109
00:04:42,630 --> 00:04:46,590
sides of the same coin first you have

110
00:04:44,850 --> 00:04:50,070
the company the Ukrainian company

111
00:04:46,590 --> 00:04:52,830
company linka linka and their risk was

112
00:04:50,070 --> 00:04:54,120
around do they protect the software that

113
00:04:52,830 --> 00:04:56,669
they deliver to their customers

114
00:04:54,120 --> 00:04:58,560
adequately and did they infect their

115
00:04:56,669 --> 00:04:59,969
customers which they did so that you

116
00:04:58,560 --> 00:05:01,200
know that's a huge risk for especially

117
00:04:59,970 --> 00:05:02,760
for those of you that work for

118
00:05:01,200 --> 00:05:04,800
businesses where software is your

119
00:05:02,760 --> 00:05:06,150
primary product but then there's also

120
00:05:04,800 --> 00:05:09,419
the risk that you have to think about

121
00:05:06,150 --> 00:05:12,030
from Maersk where if they got infected

122
00:05:09,419 --> 00:05:14,310
with with malware it's going to disrupt

123
00:05:12,030 --> 00:05:16,200
their business operations and you know

124
00:05:14,310 --> 00:05:18,270
when I talk to our customers I

125
00:05:16,200 --> 00:05:20,130
frequently say well which of these risk

126
00:05:18,270 --> 00:05:22,440
is more palatable to your business which

127
00:05:20,130 --> 00:05:24,840
are you you're willing to to bear and

128
00:05:22,440 --> 00:05:28,830
most companies say well neither they're

129
00:05:24,840 --> 00:05:33,210
both both extremely important and things

130
00:05:28,830 --> 00:05:35,520
that I want to avoid so this kind of

131
00:05:33,210 --> 00:05:37,049
leads us to the question about software

132
00:05:35,520 --> 00:05:39,599
chain software supply chains they're

133
00:05:37,050 --> 00:05:41,250
more vulnerable than ever and there are

134
00:05:39,599 --> 00:05:43,139
a number of reasons for that first is

135
00:05:41,250 --> 00:05:44,400
that our businesses rely on software

136
00:05:43,139 --> 00:05:47,760
more than they've ever relied on

137
00:05:44,400 --> 00:05:49,380
software before you know if you go back

138
00:05:47,760 --> 00:05:52,050
to merican and think about you know

139
00:05:49,380 --> 00:05:53,669
they're their port gates going up and

140
00:05:52,050 --> 00:05:55,139
down I mean they stopped working because

141
00:05:53,669 --> 00:05:56,760
they were controlled by software their

142
00:05:55,139 --> 00:05:57,720
voice over IP phones stopped working

143
00:05:56,760 --> 00:06:00,810
because they're controlled by software

144
00:05:57,720 --> 00:06:01,310
so businesses rely on software more than

145
00:06:00,810 --> 00:06:04,020
ever

146
00:06:01,310 --> 00:06:05,280
the other important aspect is that the

147
00:06:04,020 --> 00:06:09,060
software comes from many different

148
00:06:05,280 --> 00:06:11,429
suppliers so if I'm part of the InfoSec

149
00:06:09,060 --> 00:06:14,280
team I you know look at the inventory of

150
00:06:11,430 --> 00:06:17,310
software that my a my company uses and I

151
00:06:14,280 --> 00:06:18,690
would I would guess that maybe a hundred

152
00:06:17,310 --> 00:06:21,000
to two hundred maybe five hundred

153
00:06:18,690 --> 00:06:23,700
different vendors provide your company

154
00:06:21,000 --> 00:06:25,380
software and how do you know that all

155
00:06:23,700 --> 00:06:26,909
software's trustworthy and that it comes

156
00:06:25,380 --> 00:06:29,909
from the source that it says it comes

157
00:06:26,910 --> 00:06:31,470
from another aspect is that we're

158
00:06:29,910 --> 00:06:34,050
downloading software from the internet

159
00:06:31,470 --> 00:06:35,100
every day and your employees are

160
00:06:34,050 --> 00:06:38,130
downloading software from the internet

161
00:06:35,100 --> 00:06:39,780
every day so how do you trust that

162
00:06:38,130 --> 00:06:42,420
software that's being downloaded and

163
00:06:39,780 --> 00:06:44,880
then finally but and it's not lie and

164
00:06:42,420 --> 00:06:46,560
certainly not least here cyber criminals

165
00:06:44,880 --> 00:06:50,100
are more active and creative than ever

166
00:06:46,560 --> 00:06:54,090
before and we'll see that later on in my

167
00:06:50,100 --> 00:06:58,590
talk here so there are other examples

168
00:06:54,090 --> 00:07:00,960
where malware has infected of very

169
00:06:58,590 --> 00:07:03,530
critical pieces of software based on

170
00:07:00,960 --> 00:07:06,270
poor code signing practices and policies

171
00:07:03,530 --> 00:07:08,940
just a year ago

172
00:07:06,270 --> 00:07:13,349
the Taiwanese computer manufacturer Asus

173
00:07:08,940 --> 00:07:15,360
had a very severe issue around hackers

174
00:07:13,350 --> 00:07:16,800
adi malware to their software update so

175
00:07:15,360 --> 00:07:18,960
i'm gonna dive into that in a little bit

176
00:07:16,800 --> 00:07:20,460
more detail just a few minutes and then

177
00:07:18,960 --> 00:07:24,870
if we go back a few years before that

178
00:07:20,460 --> 00:07:28,560
you had the issue of Stuxnet that was

179
00:07:24,870 --> 00:07:30,960
was causing quite a few problems and

180
00:07:28,560 --> 00:07:32,250
then here's the thing that if I were you

181
00:07:30,960 --> 00:07:35,450
I would really be concerned about is

182
00:07:32,250 --> 00:07:38,490
that code signing is an effective way to

183
00:07:35,450 --> 00:07:41,430
stop this malware for being inserted

184
00:07:38,490 --> 00:07:43,320
into legitimate software hackers know

185
00:07:41,430 --> 00:07:45,300
that so what are they doing now they're

186
00:07:43,320 --> 00:07:48,210
focusing their attention on how do they

187
00:07:45,300 --> 00:07:50,760
steal code signing certificates from

188
00:07:48,210 --> 00:07:53,460
legitimate companies so if you work for

189
00:07:50,760 --> 00:07:55,280
company XYZ and you aren't protecting

190
00:07:53,460 --> 00:07:57,960
your code signing private keys

191
00:07:55,280 --> 00:08:00,030
sufficiently and a hacker stills those

192
00:07:57,960 --> 00:08:05,820
keys they're gonna be able to sign

193
00:08:00,030 --> 00:08:06,210
malware in your company's name in my

194
00:08:05,820 --> 00:08:09,150
case

195
00:08:06,210 --> 00:08:11,930
research study about two years ago and

196
00:08:09,150 --> 00:08:14,818
they'd found that 22 and a half million

197
00:08:11,930 --> 00:08:16,530
insistence of malware were signed with

198
00:08:14,819 --> 00:08:18,960
either stolen or forged code signing

199
00:08:16,530 --> 00:08:21,388
certificates so again think about this

200
00:08:18,960 --> 00:08:22,948
if there's a piece of malware floating

201
00:08:21,389 --> 00:08:24,599
around the internet and it's signed with

202
00:08:22,949 --> 00:08:26,039
your company's code signing credentials

203
00:08:24,599 --> 00:08:28,289
what's that going to mean to your

204
00:08:26,039 --> 00:08:31,020
company which your CEO going to think

205
00:08:28,289 --> 00:08:33,059
about that so you know keep this in mind

206
00:08:31,020 --> 00:08:34,860
that that if your company is doing code

207
00:08:33,059 --> 00:08:39,689
signing that you really need to focus on

208
00:08:34,860 --> 00:08:40,919
how do you protect those keys so and the

209
00:08:39,690 --> 00:08:42,300
rest of the time that I have I just

210
00:08:40,919 --> 00:08:43,649
wanted to do a couple of couple of

211
00:08:42,299 --> 00:08:47,370
things I'm gonna go through a quick code

212
00:08:43,649 --> 00:08:49,200
signing refresher I do find many many of

213
00:08:47,370 --> 00:08:50,279
the people that I talked to they they

214
00:08:49,200 --> 00:08:52,440
are aware of code signing but they

215
00:08:50,279 --> 00:08:54,120
aren't really aware of the details of it

216
00:08:52,440 --> 00:08:56,520
I'm going to talk about the challenges

217
00:08:54,120 --> 00:08:58,200
that likely your organization is having

218
00:08:56,520 --> 00:08:59,880
and then I'm going to finally give you

219
00:08:58,200 --> 00:09:02,750
some best practices on how you can

220
00:08:59,880 --> 00:09:02,750
improve things

221
00:09:06,720 --> 00:09:11,320
so first what is code signing it's

222
00:09:09,250 --> 00:09:14,350
really just a technique that allows

223
00:09:11,320 --> 00:09:16,480
someone to add a digital signature to

224
00:09:14,350 --> 00:09:18,370
computer executables and when we talk

225
00:09:16,480 --> 00:09:21,070
about computer executables we mean

226
00:09:18,370 --> 00:09:24,270
anything from the software applications

227
00:09:21,070 --> 00:09:30,100
that that your employees install OS

228
00:09:24,270 --> 00:09:32,230
images disk images containers firmware

229
00:09:30,100 --> 00:09:34,210
drivers you name it if it's a piece of

230
00:09:32,230 --> 00:09:36,100
code and execute on something then

231
00:09:34,210 --> 00:09:38,670
that's a piece of code that potentially

232
00:09:36,100 --> 00:09:40,540
can be signed digitally signed and that

233
00:09:38,670 --> 00:09:42,310
signature is going to show you two

234
00:09:40,540 --> 00:09:45,010
things it's going to show your consumers

235
00:09:42,310 --> 00:09:47,500
two things one is it verifies your your

236
00:09:45,010 --> 00:09:49,840
identity your company's identity and two

237
00:09:47,500 --> 00:09:54,460
it verifies and ensures that no one has

238
00:09:49,840 --> 00:09:56,170
modified your software since you signed

239
00:09:54,460 --> 00:09:59,260
it so you know let's say you put out a

240
00:09:56,170 --> 00:10:02,040
software update a hacker if it's been

241
00:09:59,260 --> 00:10:05,350
properly signed a hacker can't install

242
00:10:02,040 --> 00:10:06,939
malware or attach malware to it because

243
00:10:05,350 --> 00:10:09,130
then the digital signature will no

244
00:10:06,940 --> 00:10:10,230
longer match and the operating system

245
00:10:09,130 --> 00:10:12,610
will reject it

246
00:10:10,230 --> 00:10:14,920
so think about co-signing as a birth

247
00:10:12,610 --> 00:10:16,720
certificate for the software so just

248
00:10:14,920 --> 00:10:19,810
like with with our human birth

249
00:10:16,720 --> 00:10:22,420
certificates code signing certificate in

250
00:10:19,810 --> 00:10:24,160
key is extremely vital to protecting the

251
00:10:22,420 --> 00:10:28,750
identity of the software that your

252
00:10:24,160 --> 00:10:31,060
business consumes as well as creates so

253
00:10:28,750 --> 00:10:32,770
when we think about who signs code and

254
00:10:31,060 --> 00:10:34,989
this is part of the problem that the

255
00:10:32,770 --> 00:10:38,650
businesses have it's kind of across the

256
00:10:34,990 --> 00:10:40,000
board if you think about who's actually

257
00:10:38,650 --> 00:10:42,100
writing the code it's going to be the

258
00:10:40,000 --> 00:10:43,840
software developers and if you're like

259
00:10:42,100 --> 00:10:46,090
most of the businesses that I talked to

260
00:10:43,840 --> 00:10:47,560
they they have hundreds or thousands of

261
00:10:46,090 --> 00:10:49,690
software developers spread around the

262
00:10:47,560 --> 00:10:52,510
world so you have lots of development

263
00:10:49,690 --> 00:10:55,180
going on where they're they're the ones

264
00:10:52,510 --> 00:10:57,310
responsible for signing signing their

265
00:10:55,180 --> 00:10:59,410
software you have build engineers you

266
00:10:57,310 --> 00:11:02,890
maybe people don't even do it it's done

267
00:10:59,410 --> 00:11:04,449
by automated scripts that's being driven

268
00:11:02,890 --> 00:11:08,080
by is something like Jenkins or in

269
00:11:04,450 --> 00:11:10,930
another DevOps kind of platform but code

270
00:11:08,080 --> 00:11:12,880
signing you know could be done by the

271
00:11:10,930 --> 00:11:14,829
developers or the people associated with

272
00:11:12,880 --> 00:11:16,170
the software development there are other

273
00:11:14,830 --> 00:11:17,640
companies that recognize the

274
00:11:16,170 --> 00:11:19,599
[Music]

275
00:11:17,640 --> 00:11:22,000
significance of the risk around

276
00:11:19,600 --> 00:11:24,070
code-signing and therefore they restrict

277
00:11:22,000 --> 00:11:28,120
code-signing to just the PKI team or the

278
00:11:24,070 --> 00:11:30,520
InfoSec team so I know one company where

279
00:11:28,120 --> 00:11:34,300
they have a literally it's a locked room

280
00:11:30,520 --> 00:11:36,520
with one key that one or two people have

281
00:11:34,300 --> 00:11:39,640
access to and when they need to have

282
00:11:36,520 --> 00:11:41,590
signed a piece of code they take they

283
00:11:39,640 --> 00:11:43,120
unlock that room they take a USB in with

284
00:11:41,590 --> 00:11:44,770
the code on it that's where their

285
00:11:43,120 --> 00:11:47,080
private keys are and then they they

286
00:11:44,770 --> 00:11:52,300
perform the code signing operation and

287
00:11:47,080 --> 00:11:53,500
that's how it gets done and when we have

288
00:11:52,300 --> 00:11:54,969
to ask a question where does it get

289
00:11:53,500 --> 00:11:56,320
signed and again this is going to be

290
00:11:54,970 --> 00:11:58,360
part of the problem one of the

291
00:11:56,320 --> 00:12:00,520
challenges that that that you likely are

292
00:11:58,360 --> 00:12:02,470
experiencing is that if your software

293
00:12:00,520 --> 00:12:04,930
developers are doing it it's gonna be

294
00:12:02,470 --> 00:12:06,850
signed on their laptops or their build

295
00:12:04,930 --> 00:12:09,430
servers or maybe it's a web service that

296
00:12:06,850 --> 00:12:12,940
they're using to build their software or

297
00:12:09,430 --> 00:12:15,520
it's done in the cloud and if the PKI

298
00:12:12,940 --> 00:12:18,280
teams doing it it's like likely to be in

299
00:12:15,520 --> 00:12:21,610
some secure lab or on a secured computer

300
00:12:18,280 --> 00:12:23,380
with very limited people access and so

301
00:12:21,610 --> 00:12:26,800
we've got to think about this from terms

302
00:12:23,380 --> 00:12:28,330
of pros and cons obviously the pro for

303
00:12:26,800 --> 00:12:30,910
when the developers do it is that it's

304
00:12:28,330 --> 00:12:33,310
extremely fast and I don't know if you

305
00:12:30,910 --> 00:12:35,709
hear this from your developers if you

306
00:12:33,310 --> 00:12:38,530
talk to them but that's what drives them

307
00:12:35,710 --> 00:12:40,960
they they're being pressured to get out

308
00:12:38,530 --> 00:12:42,430
new software updates more quickly than

309
00:12:40,960 --> 00:12:43,770
they've ever been done before you know

310
00:12:42,430 --> 00:12:46,120
used to be that we would measure

311
00:12:43,770 --> 00:12:48,579
software updates by once per year and

312
00:12:46,120 --> 00:12:50,590
then it got down to once per quarter and

313
00:12:48,580 --> 00:12:52,840
then once per month and now it's not

314
00:12:50,590 --> 00:12:55,090
uncommon that software developers are

315
00:12:52,840 --> 00:12:57,700
being asked that push out releases once

316
00:12:55,090 --> 00:13:00,400
a day or several times a day so if you

317
00:12:57,700 --> 00:13:03,100
have to if they have to rely on a single

318
00:13:00,400 --> 00:13:04,900
point a PKI team it's going to be very

319
00:13:03,100 --> 00:13:06,310
slow for them and it's going to cause

320
00:13:04,900 --> 00:13:09,430
problems so that's why they want to do

321
00:13:06,310 --> 00:13:11,469
it themselves but the problem with this

322
00:13:09,430 --> 00:13:13,540
approach is that the keys aren't secure

323
00:13:11,470 --> 00:13:16,120
if you have keys that are being stored

324
00:13:13,540 --> 00:13:20,260
on a developer's laptop or a server or

325
00:13:16,120 --> 00:13:23,020
in the cloud they're gonna be very

326
00:13:20,260 --> 00:13:25,150
unsafe and accessible by potential

327
00:13:23,020 --> 00:13:28,030
hackers then if you look on the other

328
00:13:25,150 --> 00:13:30,550
side obviously if you have a single

329
00:13:28,030 --> 00:13:31,420
point of signing it's going to be

330
00:13:30,550 --> 00:13:34,089
extremely

331
00:13:31,420 --> 00:13:36,520
but it's gonna be also very slow and

332
00:13:34,090 --> 00:13:40,540
that that often doesn't work for today's

333
00:13:36,520 --> 00:13:44,370
business so let's talk about some of the

334
00:13:40,540 --> 00:13:44,370
risks and challenges around code signing

335
00:13:44,430 --> 00:13:49,180
this is a great read so if you wanted to

336
00:13:47,260 --> 00:13:50,980
find out more about code signing in the

337
00:13:49,180 --> 00:13:54,699
risk around it I would suggest that you

338
00:13:50,980 --> 00:13:57,670
read this very short report from sands

339
00:13:54,700 --> 00:14:00,160
Institute and basically it's all about

340
00:13:57,670 --> 00:14:01,780
how hackers have now pivoted in their

341
00:14:00,160 --> 00:14:03,610
attack vectors to where they're now

342
00:14:01,780 --> 00:14:05,890
attacking the code signing system itself

343
00:14:03,610 --> 00:14:07,870
so if you have developers with code

344
00:14:05,890 --> 00:14:09,250
signing keys on their laptops hackers

345
00:14:07,870 --> 00:14:10,900
are going to be searching around your

346
00:14:09,250 --> 00:14:15,460
network trying to find those private

347
00:14:10,900 --> 00:14:17,199
keys on laptops if there is a lack of

348
00:14:15,460 --> 00:14:18,370
process within your organization the

349
00:14:17,200 --> 00:14:22,480
hackers going to try to exploit that

350
00:14:18,370 --> 00:14:24,640
lack of process and one of the the great

351
00:14:22,480 --> 00:14:27,250
quotes from this article is that it's

352
00:14:24,640 --> 00:14:28,720
this one that just showed popped up it

353
00:14:27,250 --> 00:14:30,610
is not an exaggeration to consider

354
00:14:28,720 --> 00:14:33,370
private code signing keys as the keys to

355
00:14:30,610 --> 00:14:34,300
the business's kingdom so let's think

356
00:14:33,370 --> 00:14:37,570
about this for a minute

357
00:14:34,300 --> 00:14:39,370
if you have a TLS certificate that's

358
00:14:37,570 --> 00:14:40,720
going to have a limited lifetime and

359
00:14:39,370 --> 00:14:45,070
it's going to be assigned to a

360
00:14:40,720 --> 00:14:47,800
particular IP so it's if it's stolen and

361
00:14:45,070 --> 00:14:50,640
it can do limited damage but with a code

362
00:14:47,800 --> 00:14:54,189
signing certificate in key if the key is

363
00:14:50,640 --> 00:14:55,689
released that can be used to sign any

364
00:14:54,190 --> 00:14:57,700
kind of software and it's going to look

365
00:14:55,690 --> 00:14:59,680
like it comes from your business and if

366
00:14:57,700 --> 00:15:01,750
your business is in the business of

367
00:14:59,680 --> 00:15:03,400
producing software that's going to be a

368
00:15:01,750 --> 00:15:04,930
direct hit on your reputation that now

369
00:15:03,400 --> 00:15:07,780
people are thinking that your business

370
00:15:04,930 --> 00:15:10,959
is producing malware the other thing

371
00:15:07,780 --> 00:15:12,900
about code signing keys is that when you

372
00:15:10,960 --> 00:15:15,670
sign a piece of software if it's

373
00:15:12,900 --> 00:15:17,610
time-stamped that piece of software is

374
00:15:15,670 --> 00:15:20,319
going to be valid the the code signing

375
00:15:17,610 --> 00:15:21,130
signature is going to be valid pretty

376
00:15:20,320 --> 00:15:23,230
much indefinitely

377
00:15:21,130 --> 00:15:25,870
as long as that timestamp is still valid

378
00:15:23,230 --> 00:15:28,540
so that means that even if you have a

379
00:15:25,870 --> 00:15:30,640
breach and hackers have stolen your

380
00:15:28,540 --> 00:15:33,329
private code signing keys and you've

381
00:15:30,640 --> 00:15:35,530
tried to revoke those those certificates

382
00:15:33,330 --> 00:15:36,520
if they've already signed the software

383
00:15:35,530 --> 00:15:38,079
it's not going to matter because that

384
00:15:36,520 --> 00:15:40,870
software is out there on the internet

385
00:15:38,080 --> 00:15:42,940
forever effectively and it's going to

386
00:15:40,870 --> 00:15:45,630
have your company's name associated with

387
00:15:42,940 --> 00:15:49,500
it so very very

388
00:15:45,630 --> 00:15:52,490
from a security standpoint to not really

389
00:15:49,500 --> 00:15:56,130
guard those private codes hunting keys

390
00:15:52,490 --> 00:15:58,470
with everything that you have so

391
00:15:56,130 --> 00:15:59,910
particular talents first one is around

392
00:15:58,470 --> 00:16:03,029
private key sprawl and unprotected

393
00:15:59,910 --> 00:16:04,740
private keys and this is really you know

394
00:16:03,029 --> 00:16:06,450
the issue where error we have to think

395
00:16:04,740 --> 00:16:08,520
about where those keys actually bein

396
00:16:06,450 --> 00:16:10,620
stored you know is it on some developers

397
00:16:08,520 --> 00:16:12,870
laptop is it on a build server it's on a

398
00:16:10,620 --> 00:16:15,570
web server and there's a great example

399
00:16:12,870 --> 00:16:17,490
of what bad can happen if you don't

400
00:16:15,570 --> 00:16:22,020
store these things properly and I'll go

401
00:16:17,490 --> 00:16:24,990
back to that Zeus example basically this

402
00:16:22,020 --> 00:16:26,640
is what happened to them they had a web

403
00:16:24,990 --> 00:16:28,110
update server that pushed out their

404
00:16:26,640 --> 00:16:31,290
driver updates to all their customers

405
00:16:28,110 --> 00:16:33,420
and was done automatically those updates

406
00:16:31,290 --> 00:16:38,010
were signed with a Zeus's code signing

407
00:16:33,420 --> 00:16:39,270
keys and all the operating systems you

408
00:16:38,010 --> 00:16:41,580
know assume that you know if they were

409
00:16:39,270 --> 00:16:43,860
being pushed out with a valid digitally

410
00:16:41,580 --> 00:16:45,240
signed update that that would just go

411
00:16:43,860 --> 00:16:46,830
ahead and get installed and we see this

412
00:16:45,240 --> 00:16:50,850
all the time with their computers and

413
00:16:46,830 --> 00:16:54,540
laptops what happened is that for

414
00:16:50,850 --> 00:16:57,120
whatever reason Azusa decided to keep

415
00:16:54,540 --> 00:16:58,949
private code signing keys on this update

416
00:16:57,120 --> 00:17:00,720
server and it was probably for

417
00:16:58,950 --> 00:17:02,550
convenience you know that they were

418
00:17:00,720 --> 00:17:04,770
rushing to get some update out and and

419
00:17:02,550 --> 00:17:06,270
some developer just assumed that hey

420
00:17:04,770 --> 00:17:08,010
let's just put the key here and then I

421
00:17:06,270 --> 00:17:09,660
don't have to be moving software back

422
00:17:08,010 --> 00:17:12,089
and forth between my build environment

423
00:17:09,660 --> 00:17:13,829
and in the update server so they they

424
00:17:12,089 --> 00:17:16,800
stored at least two private code signing

425
00:17:13,829 --> 00:17:18,899
keys on this server and some hackers

426
00:17:16,800 --> 00:17:20,849
were had broken in because the server is

427
00:17:18,900 --> 00:17:22,650
connected to the Internet and they were

428
00:17:20,849 --> 00:17:26,730
looking around and they found those

429
00:17:22,650 --> 00:17:29,460
private code signing keys and they also

430
00:17:26,730 --> 00:17:31,230
found the updates that asus had put

431
00:17:29,460 --> 00:17:32,850
together and so what they did is they

432
00:17:31,230 --> 00:17:35,610
just added the malware to the Aces

433
00:17:32,850 --> 00:17:37,889
update they rescind it with the valid

434
00:17:35,610 --> 00:17:41,669
legitimate key from aces and then what

435
00:17:37,890 --> 00:17:44,790
happens that got pushed out to their

436
00:17:41,670 --> 00:17:46,410
customers computers who thought that it

437
00:17:44,790 --> 00:17:49,290
was a valid update because it was signed

438
00:17:46,410 --> 00:17:51,990
with a valid key and it impacted about a

439
00:17:49,290 --> 00:17:54,090
million computers worldwide so again you

440
00:17:51,990 --> 00:17:58,350
can see that by not protecting these

441
00:17:54,090 --> 00:17:58,860
keys you really open up a extreme risk

442
00:17:58,350 --> 00:18:02,260
for

443
00:17:58,860 --> 00:18:05,570
hackers dealing with your software

444
00:18:02,260 --> 00:18:06,890
so the impact to Asus was lost revenue

445
00:18:05,570 --> 00:18:09,679
you can see it in their stock price when

446
00:18:06,890 --> 00:18:10,910
this came out they lost market share it

447
00:18:09,680 --> 00:18:12,560
was a hit on their reputation because

448
00:18:10,910 --> 00:18:14,840
now there their customers were saying

449
00:18:12,560 --> 00:18:17,240
can we really trust what Asus puts out

450
00:18:14,840 --> 00:18:18,949
and depending on you know who they serve

451
00:18:17,240 --> 00:18:22,730
what what industries there might have

452
00:18:18,950 --> 00:18:23,660
been some regulatory fines as well so

453
00:18:22,730 --> 00:18:26,090
what are some of the other challenges

454
00:18:23,660 --> 00:18:28,700
around code signing the next one is lack

455
00:18:26,090 --> 00:18:30,530
of policy enforcement and I see this a

456
00:18:28,700 --> 00:18:31,940
lot you know that I'll be talking to an

457
00:18:30,530 --> 00:18:33,470
info SEC team and I'll ask them about

458
00:18:31,940 --> 00:18:35,960
their codes on your policies and they'll

459
00:18:33,470 --> 00:18:39,050
say oh we have a you know we we've got

460
00:18:35,960 --> 00:18:40,430
very strict policies and you know we

461
00:18:39,050 --> 00:18:42,800
don't women will have any concerns and

462
00:18:40,430 --> 00:18:44,510
they'll show me a 30 page document that

463
00:18:42,800 --> 00:18:46,550
describes that and then I'll ask the

464
00:18:44,510 --> 00:18:48,410
question well how do you enforce it and

465
00:18:46,550 --> 00:18:49,790
that's where things break down if they

466
00:18:48,410 --> 00:18:52,970
don't have a way to enforce that with

467
00:18:49,790 --> 00:18:54,320
the development teams then they don't

468
00:18:52,970 --> 00:18:57,920
really have a policy they just have a

469
00:18:54,320 --> 00:18:59,659
written document then there's also the

470
00:18:57,920 --> 00:19:01,700
problem around global visibility you

471
00:18:59,660 --> 00:19:03,200
know that if you're on an fo SEC team

472
00:19:01,700 --> 00:19:05,030
that's responsible for the security of

473
00:19:03,200 --> 00:19:07,280
your company and you have developers

474
00:19:05,030 --> 00:19:09,590
spread around the world how do you know

475
00:19:07,280 --> 00:19:11,360
what they're actually doing you know are

476
00:19:09,590 --> 00:19:13,790
they following the policies that you put

477
00:19:11,360 --> 00:19:16,459
in place are they using the right kinds

478
00:19:13,790 --> 00:19:18,230
of code signing keys are they following

479
00:19:16,460 --> 00:19:20,540
the right kinds of code signing policies

480
00:19:18,230 --> 00:19:22,010
and practices you really need to have

481
00:19:20,540 --> 00:19:24,050
that visibility if you don't that's

482
00:19:22,010 --> 00:19:26,330
gonna mean that your company is at risk

483
00:19:24,050 --> 00:19:30,440
for an incident happening like it did

484
00:19:26,330 --> 00:19:34,129
was with the Ukrainian company or or

485
00:19:30,440 --> 00:19:36,770
aces and then finally you have rogue

486
00:19:34,130 --> 00:19:41,240
software development teams and I put

487
00:19:36,770 --> 00:19:43,100
rogue here in in quotes but their focus

488
00:19:41,240 --> 00:19:44,720
is not on security and their focus is on

489
00:19:43,100 --> 00:19:46,730
getting updates out as quickly as

490
00:19:44,720 --> 00:19:48,020
possible security is just something they

491
00:19:46,730 --> 00:19:50,390
have to do and I know that you've

492
00:19:48,020 --> 00:19:52,190
probably have heard this before so if

493
00:19:50,390 --> 00:19:54,320
you have a policy in place that that

494
00:19:52,190 --> 00:19:55,940
slows them down or it's inconvenient or

495
00:19:54,320 --> 00:19:57,830
makes them do different things that they

496
00:19:55,940 --> 00:19:59,330
aren't normally used to doing they're

497
00:19:57,830 --> 00:20:00,949
gonna try to find ways to work around

498
00:19:59,330 --> 00:20:02,780
this and we see this happening all the

499
00:20:00,950 --> 00:20:05,020
time with with the companies that we

500
00:20:02,780 --> 00:20:05,020
talk to

501
00:20:05,140 --> 00:20:09,580
so what are the things that you can do

502
00:20:06,730 --> 00:20:11,050
so I you know this sounds kind of sounds

503
00:20:09,580 --> 00:20:12,370
kind of bleak but but there are some

504
00:20:11,050 --> 00:20:13,090
some steps that you can take to make

505
00:20:12,370 --> 00:20:15,070
this better

506
00:20:13,090 --> 00:20:17,320
the first thing that you need to do is

507
00:20:15,070 --> 00:20:20,919
think about co-signing as a process and

508
00:20:17,320 --> 00:20:23,530
it's different from a TLS certificate or

509
00:20:20,920 --> 00:20:25,330
another kind of PKI in that it's a

510
00:20:23,530 --> 00:20:28,720
process that involves people so it's the

511
00:20:25,330 --> 00:20:30,010
people that use it it involves things so

512
00:20:28,720 --> 00:20:31,900
it's the certificate code signing

513
00:20:30,010 --> 00:20:34,450
certificates the code Society in private

514
00:20:31,900 --> 00:20:36,250
keys and it's the activities so it's

515
00:20:34,450 --> 00:20:38,800
it's the build process it's the signing

516
00:20:36,250 --> 00:20:41,560
process and if any one of these things

517
00:20:38,800 --> 00:20:43,149
has has a failure or weakness then your

518
00:20:41,560 --> 00:20:45,040
entire codes on your process is going to

519
00:20:43,150 --> 00:20:48,340
be weak so think about trying to solve

520
00:20:45,040 --> 00:20:50,050
this from a process perspective and it

521
00:20:48,340 --> 00:20:52,810
needs to be a secure process so how can

522
00:20:50,050 --> 00:20:55,510
you secure that process first and

523
00:20:52,810 --> 00:20:58,120
foremost you need to have secure storage

524
00:20:55,510 --> 00:20:59,890
so you know it is not acceptable to have

525
00:20:58,120 --> 00:21:02,709
a private code signing key on someone's

526
00:20:59,890 --> 00:21:05,380
laptop desktop machine a build server a

527
00:21:02,710 --> 00:21:08,080
web server that's just going to cause

528
00:21:05,380 --> 00:21:10,120
problems so those keys have to be stored

529
00:21:08,080 --> 00:21:11,860
in a central location and that that

530
00:21:10,120 --> 00:21:14,050
sounds obvious but the reason that it

531
00:21:11,860 --> 00:21:15,909
doesn't happen is that when when we do

532
00:21:14,050 --> 00:21:17,680
move those in to a central location then

533
00:21:15,910 --> 00:21:19,810
it becomes inconvenient for developers

534
00:21:17,680 --> 00:21:22,750
and then they go rogue and and they find

535
00:21:19,810 --> 00:21:24,610
ways to get around it you next you need

536
00:21:22,750 --> 00:21:25,750
to have the enterprise visibility so

537
00:21:24,610 --> 00:21:27,330
even if you have development teams

538
00:21:25,750 --> 00:21:30,040
around the world you really need to know

539
00:21:27,330 --> 00:21:31,840
exactly who's signing code what

540
00:21:30,040 --> 00:21:35,320
certificates were used where the private

541
00:21:31,840 --> 00:21:37,120
keys at who did the signing who approved

542
00:21:35,320 --> 00:21:40,090
the signing and that leads us to number

543
00:21:37,120 --> 00:21:41,949
three here process control and and it's

544
00:21:40,090 --> 00:21:43,240
really important especially for for code

545
00:21:41,950 --> 00:21:45,520
signing credentials that are used to

546
00:21:43,240 --> 00:21:47,560
sign very highly critical software that

547
00:21:45,520 --> 00:21:49,930
your company produces or even software

548
00:21:47,560 --> 00:21:52,000
that your company relies on is to know

549
00:21:49,930 --> 00:21:53,980
who actually has access to use that key

550
00:21:52,000 --> 00:21:56,320
under what circumstances can they use

551
00:21:53,980 --> 00:21:58,720
that key who needs to approve the use of

552
00:21:56,320 --> 00:22:01,510
that key if your process doesn't have a

553
00:21:58,720 --> 00:22:03,400
couple of approvers that are required to

554
00:22:01,510 --> 00:22:05,770
the approve the usage of code signing

555
00:22:03,400 --> 00:22:08,740
key you got a broken process that's

556
00:22:05,770 --> 00:22:12,100
that's gonna eventually lead to some

557
00:22:08,740 --> 00:22:14,170
some pretty significant damage and then

558
00:22:12,100 --> 00:22:16,270
when we talk about process we have to

559
00:22:14,170 --> 00:22:17,270
think about automation has to be easy to

560
00:22:16,270 --> 00:22:20,000
do

561
00:22:17,270 --> 00:22:22,670
so if you require you know two approvers

562
00:22:20,000 --> 00:22:24,350
to use every code signing key that needs

563
00:22:22,670 --> 00:22:26,630
to be automated there needs to be a way

564
00:22:24,350 --> 00:22:29,540
that people can actually follow your

565
00:22:26,630 --> 00:22:31,220
policies through an automated fashion if

566
00:22:29,540 --> 00:22:33,830
you require that every piece of internal

567
00:22:31,220 --> 00:22:36,410
code that use gets code sign you have to

568
00:22:33,830 --> 00:22:37,550
provide a very automated way of making

569
00:22:36,410 --> 00:22:39,110
sure those kites code signing

570
00:22:37,550 --> 00:22:41,480
certificates to get issued and and

571
00:22:39,110 --> 00:22:43,370
eventually rotated and revoked and

572
00:22:41,480 --> 00:22:44,750
finally you have to have intelligence

573
00:22:43,370 --> 00:22:45,949
around what's going on in your company

574
00:22:44,750 --> 00:22:47,810
you need to be able to show compliance

575
00:22:45,950 --> 00:22:50,090
if you do have these code signing

576
00:22:47,810 --> 00:22:52,429
policies that you know that everyone's

577
00:22:50,090 --> 00:22:54,439
following them you need to have this

578
00:22:52,430 --> 00:22:56,630
ability to be able to detect risky

579
00:22:54,440 --> 00:22:58,100
trends let's go back to you know a

580
00:22:56,630 --> 00:23:00,950
development team that uses an automated

581
00:22:58,100 --> 00:23:04,639
build server and that build server signs

582
00:23:00,950 --> 00:23:07,610
code once every day at 2 p.m. but if you

583
00:23:04,640 --> 00:23:10,280
start noticing that certificate being

584
00:23:07,610 --> 00:23:11,750
used at 2 a.m. that's a trend that then

585
00:23:10,280 --> 00:23:16,190
indicates some risk it's out of the

586
00:23:11,750 --> 00:23:17,510
ordinary and this all has to be done to

587
00:23:16,190 --> 00:23:19,160
where it's developer friendly I just go

588
00:23:17,510 --> 00:23:20,570
back to you know rogue software

589
00:23:19,160 --> 00:23:22,400
development teams there if there's a way

590
00:23:20,570 --> 00:23:23,929
for them to work around what what you

591
00:23:22,400 --> 00:23:26,180
need to have done they will if it's not

592
00:23:23,930 --> 00:23:27,830
easy for them so and when we talk about

593
00:23:26,180 --> 00:23:29,420
it being easy for them and he needs to

594
00:23:27,830 --> 00:23:31,760
not slow them down it needs to work with

595
00:23:29,420 --> 00:23:33,290
their existing tools and processes and

596
00:23:31,760 --> 00:23:35,360
it doesn't require for them to have PKI

597
00:23:33,290 --> 00:23:38,990
experience because they they often do

598
00:23:35,360 --> 00:23:40,850
not have that and the last thing I just

599
00:23:38,990 --> 00:23:42,560
want to leave you with is if you wanted

600
00:23:40,850 --> 00:23:45,050
to read more about best practices there

601
00:23:42,560 --> 00:23:47,570
is this great piece from NIST

602
00:23:45,050 --> 00:23:50,149
that's a security consideration it's for

603
00:23:47,570 --> 00:23:53,929
code signing so if you wanted to look at

604
00:23:50,150 --> 00:23:57,080
how you can improve the the code signing

605
00:23:53,930 --> 00:23:58,670
situation at your company this this

606
00:23:57,080 --> 00:24:01,310
article would definitely be helpful

607
00:23:58,670 --> 00:24:04,670
there and I just want to thank you all

608
00:24:01,310 --> 00:24:06,320
for your time this has been really nice

609
00:24:04,670 --> 00:24:09,910
to be able to participate in this and

610
00:24:06,320 --> 00:24:09,909
I'm happy to answer any questions

611
00:24:10,030 --> 00:24:18,560
hey so this is about um if you want to

612
00:24:14,450 --> 00:24:21,080
go into slack and go and connect there's

613
00:24:18,560 --> 00:24:23,720
been some questions popping up if you

614
00:24:21,080 --> 00:24:27,020
want to go and glance at those and maybe

615
00:24:23,720 --> 00:24:29,060
have some conversations I'm going to

616
00:24:27,020 --> 00:24:30,200
keep us on schedule or try to keep us on

617
00:24:29,060 --> 00:24:32,780
schedule I know

618
00:24:30,200 --> 00:24:34,160
I was I ran over a little bit and you

619
00:24:32,780 --> 00:24:36,290
got started a little bit late so I was

620
00:24:34,160 --> 00:24:38,570
trying to cut you off and let you have

621
00:24:36,290 --> 00:24:41,780
all the time that you needed for your

622
00:24:38,570 --> 00:24:44,120
presentation but I know it's important

623
00:24:41,780 --> 00:24:47,000
to keep us on schedule so if you want to

624
00:24:44,120 --> 00:24:49,879
go into slack and ask any some questions

625
00:24:47,000 --> 00:24:52,220
and maybe give them some comments about

626
00:24:49,880 --> 00:24:54,680
his presentation we really appreciate

627
00:24:52,220 --> 00:24:58,610
you showing up today and getting up

628
00:24:54,680 --> 00:25:01,820
early I'm presenting at besides Atlanta

629
00:24:58,610 --> 00:25:04,490
it's very helpful and important to us

630
00:25:01,820 --> 00:25:08,210
and we appreciate your time ok great

631
00:25:04,490 --> 00:25:09,910
thank you you're right the first comment

632
00:25:08,210 --> 00:25:11,990
here from Franco Sonia is not a panacea

633
00:25:09,910 --> 00:25:14,690
particularly in the supply chain is

634
00:25:11,990 --> 00:25:16,760
predominantly open source but this is

635
00:25:14,690 --> 00:25:18,230
this is what you can use code signing

636
00:25:16,760 --> 00:25:21,440
for it and in that particular situation

637
00:25:18,230 --> 00:25:22,550
is that presumably your development

638
00:25:21,440 --> 00:25:24,350
organization working with your

639
00:25:22,550 --> 00:25:26,270
organization when they start to use open

640
00:25:24,350 --> 00:25:29,959
source software they run it through

641
00:25:26,270 --> 00:25:31,970
whatever tests and security tests that

642
00:25:29,960 --> 00:25:32,510
that youth you deem is necessary and

643
00:25:31,970 --> 00:25:35,540
required

644
00:25:32,510 --> 00:25:37,160
and once you've deemed this particular

645
00:25:35,540 --> 00:25:40,490
piece of open source software and it's

646
00:25:37,160 --> 00:25:42,020
you know source code then sign it so

647
00:25:40,490 --> 00:25:44,360
that you know that no one on your team

648
00:25:42,020 --> 00:25:46,220
or in your organization can actually

649
00:25:44,360 --> 00:25:48,770
modify that if they aren't supposed to

650
00:25:46,220 --> 00:25:51,830
and so we have customers that are

651
00:25:48,770 --> 00:25:54,530
signing you know multiple aspects you

652
00:25:51,830 --> 00:25:56,240
know they're if they're getting source

653
00:25:54,530 --> 00:25:57,649
code in from a third party they sign

654
00:25:56,240 --> 00:25:58,700
that when they receive it after they run

655
00:25:57,650 --> 00:26:00,800
it through their tests if they're using

656
00:25:58,700 --> 00:26:02,480
libraries for third party after they run

657
00:26:00,800 --> 00:26:06,950
their tests they sign it so that they

658
00:26:02,480 --> 00:26:08,450
know it at no point does that get get

659
00:26:06,950 --> 00:26:10,910
changed or modified by either a

660
00:26:08,450 --> 00:26:12,980
malicious employee or a third party

661
00:26:10,910 --> 00:26:14,810
that's broken into your network but yes

662
00:26:12,980 --> 00:26:17,840
I agree it's it's not a not a solve all

663
00:26:14,810 --> 00:26:20,179
but but definitely it can go a long way

664
00:26:17,840 --> 00:26:23,419
to helping prevent the problem that

665
00:26:20,180 --> 00:26:24,890
Maersk had and even a Zeus I mean a Zeus

666
00:26:23,420 --> 00:26:27,880
is a great example where they just

667
00:26:24,890 --> 00:26:31,010
literally did not protect their keys and

668
00:26:27,880 --> 00:26:34,430
can I get the name of the article that

669
00:26:31,010 --> 00:26:38,150
you recommend again it's I mentioned two

670
00:26:34,430 --> 00:26:41,510
one was a NIST article on security

671
00:26:38,150 --> 00:26:45,300
considerations then the other article

672
00:26:41,510 --> 00:26:50,520
was from the SANS Institute about

673
00:26:45,300 --> 00:26:53,220
code-signing security concerns but thank

674
00:26:50,520 --> 00:26:55,020
you very much I know I am over now so if

675
00:26:53,220 --> 00:26:57,300
you have other questions feel free to

676
00:26:55,020 --> 00:27:00,690
reach out to me either through slack or

677
00:26:57,300 --> 00:27:04,220
Twitter or or my email address okay

678
00:27:00,690 --> 00:27:04,220
we appreciate it thank you

