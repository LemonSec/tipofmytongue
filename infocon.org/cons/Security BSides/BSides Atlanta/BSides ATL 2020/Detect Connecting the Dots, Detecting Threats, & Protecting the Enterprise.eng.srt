1
00:00:02,710 --> 00:00:07,549
I've said it before and you're gonna

2
00:00:05,240 --> 00:00:09,980
hear me say it every time that that

3
00:00:07,549 --> 00:00:12,889
we're in the nest track we could not

4
00:00:09,980 --> 00:00:14,750
have done what we're doing today without

5
00:00:12,889 --> 00:00:16,849
the incredible support of our sponsors

6
00:00:14,750 --> 00:00:19,279
and so want to walk through them yet

7
00:00:16,849 --> 00:00:20,899
again at the diamond level Warner Media

8
00:00:19,279 --> 00:00:23,180
at the gold level

9
00:00:20,899 --> 00:00:25,369
Kennesaw State University Cole's College

10
00:00:23,180 --> 00:00:28,849
of Business my my home college where I

11
00:00:25,369 --> 00:00:30,950
do my day job the KSU Department of

12
00:00:28,849 --> 00:00:33,500
Information Systems my home department

13
00:00:30,950 --> 00:00:34,790
where allegedly I do some teaching every

14
00:00:33,500 --> 00:00:37,910
once in a while

15
00:00:34,790 --> 00:00:42,070
Bishop Fox coal fire genuine parts

16
00:00:37,910 --> 00:00:46,129
company and NCR at the crystal level

17
00:00:42,070 --> 00:00:48,890
synopsis and after Kelly and critical

18
00:00:46,130 --> 00:00:51,260
path his video you just saw at the

19
00:00:48,890 --> 00:00:53,900
Silver level Aaron's binary defense

20
00:00:51,260 --> 00:00:56,320
Black Hills information security core

21
00:00:53,900 --> 00:00:58,850
light and guidepost security

22
00:00:56,320 --> 00:01:03,200
additionally at the bronze level the NCC

23
00:00:58,850 --> 00:01:05,930
group wanna also thank some in-kind

24
00:01:03,200 --> 00:01:08,240
sponsors ec-council came through

25
00:01:05,930 --> 00:01:11,210
yesterday with some online paid training

26
00:01:08,240 --> 00:01:13,970
for some of you I think might have taken

27
00:01:11,210 --> 00:01:18,259
advantage of that and also secured code

28
00:01:13,970 --> 00:01:21,620
warrior today for copying or for setting

29
00:01:18,260 --> 00:01:25,990
up and staging the CTF that is actually

30
00:01:21,620 --> 00:01:25,990
happening right now in another channel

31
00:01:26,350 --> 00:01:31,369
we would also like to thank the

32
00:01:29,540 --> 00:01:33,080
following individuals and organizations

33
00:01:31,369 --> 00:01:36,080
for contributing to our raffle prize

34
00:01:33,080 --> 00:01:38,530
effort Mike Kosta and crosshair

35
00:01:36,080 --> 00:01:41,600
Information Technology Joe gray

36
00:01:38,530 --> 00:01:43,430
information security and pentester lab

37
00:01:41,600 --> 00:01:45,860
and so now I'm going to reach over here

38
00:01:43,430 --> 00:01:48,320
and grab my piece of paper and so that

39
00:01:45,860 --> 00:01:51,320
brings us to our next speaker today to

40
00:01:48,320 --> 00:01:54,320
next talk for the next 55 minutes is Wes

41
00:01:51,320 --> 00:01:56,509
Lambert and Wes's talk is entitled

42
00:01:54,320 --> 00:01:59,179
connecting the dots detecting threats

43
00:01:56,510 --> 00:02:01,400
and protecting the enterprise with

44
00:01:59,180 --> 00:02:07,989
security so I'm gonna stop sharing my

45
00:02:01,400 --> 00:02:11,450
screen here okay Wes are you ready to go

46
00:02:07,989 --> 00:02:13,430
yeah yeah in just a second here alright

47
00:02:11,450 --> 00:02:15,290
so welcome to connecting the dots

48
00:02:13,430 --> 00:02:17,060
detecting threats and

49
00:02:15,290 --> 00:02:20,569
thing the enterprise with security onion

50
00:02:17,060 --> 00:02:23,299
I'm Wes Lambert here to talk to you

51
00:02:20,569 --> 00:02:27,319
today about really how organizations can

52
00:02:23,299 --> 00:02:29,659
leverage security onion with facing some

53
00:02:27,319 --> 00:02:32,450
of the common problems that that they

54
00:02:29,659 --> 00:02:35,540
see in in their environments to give you

55
00:02:32,450 --> 00:02:37,159
a brief overview about myself I am a

56
00:02:35,540 --> 00:02:39,140
senior engineer at security and in

57
00:02:37,159 --> 00:02:42,290
solutions where we develop and maintain

58
00:02:39,140 --> 00:02:45,200
security onion I'm also a husband and

59
00:02:42,290 --> 00:02:47,900
father of four awesome kids and wife and

60
00:02:45,200 --> 00:02:49,819
I also enjoy long walks on the keyboard

61
00:02:47,900 --> 00:02:51,920
breakfast tacos and of course ed

62
00:02:49,819 --> 00:02:57,138
Bassmaster I mean who wouldn't right I

63
00:02:51,920 --> 00:02:59,418
mean look at this so really what are

64
00:02:57,139 --> 00:03:01,069
some common challenges that that

65
00:02:59,419 --> 00:03:02,599
organizations are facing today with

66
00:03:01,069 --> 00:03:04,310
regard to security and monitoring in

67
00:03:02,599 --> 00:03:07,250
their environments I'm going to talk

68
00:03:04,310 --> 00:03:09,230
about a couple of these and not really

69
00:03:07,250 --> 00:03:11,239
dive a whole lot into every single one

70
00:03:09,230 --> 00:03:12,768
but you know just giving an overview of

71
00:03:11,239 --> 00:03:17,090
each one and how we might be able to

72
00:03:12,769 --> 00:03:19,940
address that with security in it so one

73
00:03:17,090 --> 00:03:22,790
of the main things is limited visibility

74
00:03:19,940 --> 00:03:24,978
a lot of organizations maybe don't have

75
00:03:22,790 --> 00:03:28,728
the budget or just don't have the

76
00:03:24,979 --> 00:03:31,220
expertise or just by whatever reason

77
00:03:28,729 --> 00:03:32,919
don't have great visibility into either

78
00:03:31,220 --> 00:03:35,629
their endpoints their network traffic

79
00:03:32,919 --> 00:03:38,720
they might run stuff like Microsoft

80
00:03:35,629 --> 00:03:40,940
Defender right and and get those alerts

81
00:03:38,720 --> 00:03:42,978
as AV alerts but a lot of times whenever

82
00:03:40,940 --> 00:03:44,750
we get these alerts and it says

83
00:03:42,979 --> 00:03:47,359
something bad is happening on our

84
00:03:44,750 --> 00:03:50,299
workstation how do we confirm that it's

85
00:03:47,359 --> 00:03:52,340
really bad right or if it is bad is it

86
00:03:50,299 --> 00:03:55,010
really the only bad thing on the

87
00:03:52,340 --> 00:03:56,900
workstation has that workstation that is

88
00:03:55,010 --> 00:03:58,698
potentially infected could I have

89
00:03:56,900 --> 00:04:02,090
communicated with other workstations or

90
00:03:58,699 --> 00:04:03,500
other servers could you know could that

91
00:04:02,090 --> 00:04:06,680
bad thing have moved from one place to

92
00:04:03,500 --> 00:04:09,739
another and this really becomes a bad

93
00:04:06,680 --> 00:04:11,720
situation overall for analysts right

94
00:04:09,739 --> 00:04:14,060
security analysts or IT administrators

95
00:04:11,720 --> 00:04:15,500
when they're not sure what is really

96
00:04:14,060 --> 00:04:17,539
going on in their networks when they

97
00:04:15,500 --> 00:04:18,798
don't have a clear picture when the

98
00:04:17,539 --> 00:04:20,870
lights are off and they can't see a

99
00:04:18,798 --> 00:04:24,849
thing it's really difficult to make

100
00:04:20,870 --> 00:04:24,849
these decisions in a timely manner

101
00:04:26,460 --> 00:04:30,609
again I mentioned the budget and this

102
00:04:29,110 --> 00:04:32,020
isn't a dig on commercial tools at all

103
00:04:30,610 --> 00:04:35,110
there are some great commercial tools

104
00:04:32,020 --> 00:04:37,030
right like of course you know Splunk is

105
00:04:35,110 --> 00:04:40,450
as free to a certain degree and it's

106
00:04:37,030 --> 00:04:42,039
very capable at the enterprise level but

107
00:04:40,450 --> 00:04:43,960
unfortunately a lot of info SEC

108
00:04:42,040 --> 00:04:46,090
departments or smaller companies with

109
00:04:43,960 --> 00:04:48,549
maybe one-man shops or a couple man

110
00:04:46,090 --> 00:04:50,609
shops or even with larger teams and that

111
00:04:48,550 --> 00:04:53,860
just simply can't afford these tools

112
00:04:50,610 --> 00:04:56,200
right organizations are forced to pick

113
00:04:53,860 --> 00:04:57,070
and choose between which capabilities

114
00:04:56,200 --> 00:04:59,740
they want to implement in their

115
00:04:57,070 --> 00:05:03,340
environment and I can still lead to gaps

116
00:04:59,740 --> 00:05:05,380
in visibility and now when we're able to

117
00:05:03,340 --> 00:05:09,270
address that as much as we can with open

118
00:05:05,380 --> 00:05:09,270
source tools we'll try to do that

119
00:05:11,650 --> 00:05:16,698
another thing that that we run into and

120
00:05:14,449 --> 00:05:19,300
that we commonly see is the fact that

121
00:05:16,699 --> 00:05:22,130
companies have these disparate data sets

122
00:05:19,300 --> 00:05:23,630
they have all these systems that are

123
00:05:22,130 --> 00:05:25,909
their own system of record for this

124
00:05:23,630 --> 00:05:27,469
thing and you have to jump from this

125
00:05:25,910 --> 00:05:29,539
system to this system to see a

126
00:05:27,470 --> 00:05:32,600
particular bit of data when you're

127
00:05:29,539 --> 00:05:34,729
investigating it's very disjointed it's

128
00:05:32,600 --> 00:05:37,880
really easy to miss critical data and

129
00:05:34,729 --> 00:05:40,099
it's not really easily easy to connect

130
00:05:37,880 --> 00:05:41,659
the dots between what's going on right

131
00:05:40,100 --> 00:05:43,370
you have all these disparate systems and

132
00:05:41,660 --> 00:05:45,289
another thing is if they're in a

133
00:05:43,370 --> 00:05:48,340
separate time zone right or if you're

134
00:05:45,289 --> 00:05:50,840
not using UTC it makes it even worse and

135
00:05:48,340 --> 00:05:52,219
even further a lot of the setup for

136
00:05:50,840 --> 00:05:54,080
these various tools whenever you have

137
00:05:52,220 --> 00:05:55,970
these disparate data sets you have to

138
00:05:54,080 --> 00:05:58,490
have that's that's specialized expertise

139
00:05:55,970 --> 00:06:00,440
right it can be time-consuming and it

140
00:05:58,490 --> 00:06:02,800
just it doesn't fit well to the overall

141
00:06:00,440 --> 00:06:05,180
overall scheme and integration

142
00:06:02,800 --> 00:06:11,240
organizationally for that security

143
00:06:05,180 --> 00:06:13,610
monitoring so what would in an ideal

144
00:06:11,240 --> 00:06:16,220
scenario be right we think about the

145
00:06:13,610 --> 00:06:17,930
things that we'd really like to have and

146
00:06:16,220 --> 00:06:20,449
and maybe you know we can make this

147
00:06:17,930 --> 00:06:22,639
available so one of the things might be

148
00:06:20,449 --> 00:06:23,810
network traffic right collect all the

149
00:06:22,639 --> 00:06:26,349
network traffic and has occurs on the

150
00:06:23,810 --> 00:06:29,510
wires so we get that full conversation

151
00:06:26,349 --> 00:06:31,550
another thing network metadata right the

152
00:06:29,510 --> 00:06:35,780
metadata about the traffic like bytes

153
00:06:31,550 --> 00:06:38,270
right you know file sizes or you know

154
00:06:35,780 --> 00:06:39,710
summary data right like like how many

155
00:06:38,270 --> 00:06:41,719
times does this host connect to this

156
00:06:39,710 --> 00:06:44,359
host and just lots of other stuff and

157
00:06:41,720 --> 00:06:46,340
then also host base telemetry adds to

158
00:06:44,360 --> 00:06:48,289
that right from Linux Mac Windows and

159
00:06:46,340 --> 00:06:50,659
Points and really being able to

160
00:06:48,289 --> 00:06:53,610
correlate that between all this traffic

161
00:06:50,659 --> 00:06:55,650
would be awesome

162
00:06:53,610 --> 00:06:57,569
going further being able to perform

163
00:06:55,650 --> 00:07:00,150
analysis on files extracted from Network

164
00:06:57,569 --> 00:07:02,129
streams that would be pretty cool right

165
00:07:00,150 --> 00:07:04,229
if we can enrich data as we feed it into

166
00:07:02,129 --> 00:07:05,669
a log management pipeline helping us

167
00:07:04,229 --> 00:07:07,949
further enrich that and provide that

168
00:07:05,669 --> 00:07:10,438
context giving us a better overall

169
00:07:07,949 --> 00:07:13,860
perception of our network that would be

170
00:07:10,439 --> 00:07:15,060
great or what if we generated alerts you

171
00:07:13,860 --> 00:07:16,800
know we want to generate alerts for

172
00:07:15,060 --> 00:07:19,139
noteworthy events we want to develop

173
00:07:16,800 --> 00:07:21,270
custom policies and detection rules that

174
00:07:19,139 --> 00:07:24,030
go further beyond maybe static news

175
00:07:21,270 --> 00:07:25,650
rules or similar things and what if we

176
00:07:24,030 --> 00:07:27,448
want to be able to perform the tree out

177
00:07:25,650 --> 00:07:29,729
of those alerts right have all that

178
00:07:27,449 --> 00:07:31,229
context right there tied together and

179
00:07:29,729 --> 00:07:34,650
perform that threat hunting when we go

180
00:07:31,229 --> 00:07:38,099
in and look for anomalies and what if we

181
00:07:34,650 --> 00:07:40,169
want to be able to be extensible and be

182
00:07:38,099 --> 00:07:41,759
able to integrate with different

183
00:07:40,169 --> 00:07:42,900
commercial and open source tools what if

184
00:07:41,759 --> 00:07:46,099
we want to do that be able to do that

185
00:07:42,900 --> 00:07:53,489
easily right without proprietary

186
00:07:46,099 --> 00:07:57,060
intermediaries well the truth is pretty

187
00:07:53,490 --> 00:08:01,080
close to ideal is real and the way that

188
00:07:57,060 --> 00:08:03,719
happens is with security onion so with

189
00:08:01,080 --> 00:08:06,990
security onion we can take the this

190
00:08:03,719 --> 00:08:11,190
ideal scenario and for the most part we

191
00:08:06,990 --> 00:08:13,759
can put it to play for free right we can

192
00:08:11,190 --> 00:08:16,050
peel back the layers of our network

193
00:08:13,759 --> 00:08:18,300
security and in itself was founded in

194
00:08:16,050 --> 00:08:21,029
2008 by Doug Burks again it's completely

195
00:08:18,300 --> 00:08:22,800
free and open-source we use it for

196
00:08:21,029 --> 00:08:25,009
enterprise security monitoring intrusion

197
00:08:22,800 --> 00:08:30,629
detection log management threat hunting

198
00:08:25,009 --> 00:08:33,149
lots of different stuff and it's super

199
00:08:30,629 --> 00:08:35,130
easy to set up if you're doing it in

200
00:08:33,149 --> 00:08:37,229
your home lab or in your enterprise

201
00:08:35,130 --> 00:08:41,130
network you simply install the security

202
00:08:37,229 --> 00:08:42,539
in an ISO we also have it one two PPA so

203
00:08:41,130 --> 00:08:46,110
you can install the packages on your

204
00:08:42,539 --> 00:08:48,689
flavor of Ubuntu and we take that data

205
00:08:46,110 --> 00:08:51,060
from the network from a network tap or

206
00:08:48,690 --> 00:08:52,529
span port and we feed it in the security

207
00:08:51,060 --> 00:08:54,899
and then we run through that setup and

208
00:08:52,529 --> 00:08:57,120
your monitoring in minutes just pulling

209
00:08:54,899 --> 00:08:59,570
back turning the lights on data from

210
00:08:57,120 --> 00:08:59,570
your network

211
00:09:01,620 --> 00:09:07,000
but really what are the tools and but in

212
00:09:04,389 --> 00:09:12,310
data behind security in him that allow

213
00:09:07,000 --> 00:09:14,740
us to be able to do that one of them is

214
00:09:12,310 --> 00:09:17,170
going to be Zeke also known as bro they

215
00:09:14,740 --> 00:09:19,660
recently changed their name and Zeke is

216
00:09:17,170 --> 00:09:22,449
a policy neutral network-based intrusion

217
00:09:19,660 --> 00:09:24,370
detection system or nits and some of the

218
00:09:22,449 --> 00:09:25,389
data can provide is that extracted

219
00:09:24,370 --> 00:09:27,699
content they did when we're talking

220
00:09:25,389 --> 00:09:29,860
about files images or media extracted

221
00:09:27,699 --> 00:09:32,019
from network streams session data

222
00:09:29,860 --> 00:09:33,730
there's high-level communication details

223
00:09:32,019 --> 00:09:36,339
and we were talking about before and

224
00:09:33,730 --> 00:09:37,600
getting an idea the the types of traffic

225
00:09:36,339 --> 00:09:39,819
going on in our network at a high level

226
00:09:37,600 --> 00:09:42,459
and also a little deeper in the

227
00:09:39,819 --> 00:09:45,399
transaction data so for example HTTP

228
00:09:42,459 --> 00:09:47,109
traffic FTP traffic we can drill into

229
00:09:45,399 --> 00:09:48,870
the details of those rather than just

230
00:09:47,110 --> 00:09:51,130
the summary details

231
00:09:48,870 --> 00:09:53,829
additionally the asset data provided by

232
00:09:51,130 --> 00:09:55,149
Zeke can be very helpful good so we can

233
00:09:53,829 --> 00:09:57,420
grab things like device software

234
00:09:55,149 --> 00:09:59,860
versions right if somebody is running

235
00:09:57,420 --> 00:10:02,250
some particular they've got some

236
00:09:59,860 --> 00:10:05,050
particular version of Adobe or Java

237
00:10:02,250 --> 00:10:06,699
installed we can see that like

238
00:10:05,050 --> 00:10:08,050
ColdFusion if they're devs running

239
00:10:06,699 --> 00:10:10,439
development servers and their

240
00:10:08,050 --> 00:10:12,399
environment you don't want them to write

241
00:10:10,439 --> 00:10:16,719
lots of different things that we can see

242
00:10:12,399 --> 00:10:18,850
there then we pair that with another

243
00:10:16,720 --> 00:10:21,310
network based intrusion detection system

244
00:10:18,850 --> 00:10:24,279
your choice of either snort or sericata

245
00:10:21,310 --> 00:10:25,989
and these these tools provide that alert

246
00:10:24,279 --> 00:10:27,550
data that we talked about where we're

247
00:10:25,990 --> 00:10:30,850
generating IDs alerts it's going to

248
00:10:27,550 --> 00:10:33,310
alert you when a predefined rule or you

249
00:10:30,850 --> 00:10:35,110
know set up conditions has been matched

250
00:10:33,310 --> 00:10:40,750
again in this network traffic that's

251
00:10:35,110 --> 00:10:44,319
going to alert us to that we also

252
00:10:40,750 --> 00:10:46,540
include wazoo so wazoo is a fork of a

253
00:10:44,319 --> 00:10:49,060
sec if anybody's used a sec before it's

254
00:10:46,540 --> 00:10:51,519
a host-based intrusion detection system

255
00:10:49,060 --> 00:10:53,920
and we get a lot of great hosts

256
00:10:51,519 --> 00:10:56,589
telemetry data or can get that with

257
00:10:53,920 --> 00:10:58,240
wazoo so we can we can ship windows logs

258
00:10:56,589 --> 00:11:01,630
right with sis Mon we can do that using

259
00:10:58,240 --> 00:11:03,459
wazoo and we can also have wazoo analyze

260
00:11:01,630 --> 00:11:06,069
those logs and generate alerts based on

261
00:11:03,459 --> 00:11:08,859
that data aside from that there's some

262
00:11:06,069 --> 00:11:12,219
great plugins or capabilities with open

263
00:11:08,860 --> 00:11:13,270
SCAP and also active response and we can

264
00:11:12,220 --> 00:11:15,070
also

265
00:11:13,270 --> 00:11:16,959
file integrity monitoring on the systems

266
00:11:15,070 --> 00:11:19,510
that that y-z agent is installed on and

267
00:11:16,959 --> 00:11:22,239
each security onion note itself already

268
00:11:19,510 --> 00:11:23,740
one runs wazoo so it already performs

269
00:11:22,240 --> 00:11:25,000
the active response if you got people

270
00:11:23,740 --> 00:11:27,940
trying to hit your box they're not

271
00:11:25,000 --> 00:11:29,620
supposed to be right or it's already

272
00:11:27,940 --> 00:11:30,910
logging that file integrity monitoring

273
00:11:29,620 --> 00:11:33,010
they're performing that file integrity

274
00:11:30,910 --> 00:11:35,260
monitoring to alert you if anything

275
00:11:33,010 --> 00:11:39,790
strange is going on in the box that's

276
00:11:35,260 --> 00:11:42,010
another great feature and then net

277
00:11:39,790 --> 00:11:44,260
sniffing G again we talked about that

278
00:11:42,010 --> 00:11:46,480
full packet capture or capturing all

279
00:11:44,260 --> 00:11:48,130
that traffic off the wire we get that

280
00:11:46,480 --> 00:11:50,890
full content data and we can see the

281
00:11:48,130 --> 00:11:52,689
entire conversation and then when we're

282
00:11:50,890 --> 00:11:55,390
ready when we're looking through logs in

283
00:11:52,690 --> 00:11:57,880
Cabana or going through squirt or squeal

284
00:11:55,390 --> 00:12:00,160
we can view that transcript via cat me

285
00:11:57,880 --> 00:12:02,020
and it's really helpful to be able to

286
00:12:00,160 --> 00:12:04,000
view that you know that conversation

287
00:12:02,020 --> 00:12:05,709
right there as you're investigating logs

288
00:12:04,000 --> 00:12:08,620
and not having to go to a separate

289
00:12:05,709 --> 00:12:10,420
system and then also with the pcap we

290
00:12:08,620 --> 00:12:12,399
can export to various tools or perform

291
00:12:10,420 --> 00:12:14,649
further analysis with other tools that

292
00:12:12,399 --> 00:12:17,459
either we provide or that you may have

293
00:12:14,649 --> 00:12:17,459
yourself in your environment

294
00:12:18,930 --> 00:12:23,128
also the elastic stack we run

295
00:12:21,209 --> 00:12:25,349
elasticsearch logstash and Cabana to

296
00:12:23,129 --> 00:12:26,790
perform the data enrichment the indexing

297
00:12:25,350 --> 00:12:30,959
and the visualization for all the data

298
00:12:26,790 --> 00:12:32,790
that security onion throws in - into the

299
00:12:30,959 --> 00:12:35,099
pipeline so we're able to take that

300
00:12:32,790 --> 00:12:37,259
metadata aside from the raw data on the

301
00:12:35,100 --> 00:12:39,179
network sensors themselves and that way

302
00:12:37,259 --> 00:12:40,949
you still retain that raw data on the

303
00:12:39,179 --> 00:12:43,980
sensors right if you want to go back and

304
00:12:40,949 --> 00:12:45,569
perform retrospective analysis and then

305
00:12:43,980 --> 00:12:47,069
you've got that metadata that's enriched

306
00:12:45,569 --> 00:12:48,779
right you've got other stuff that you

307
00:12:47,069 --> 00:12:51,929
can go do with either log stash or

308
00:12:48,779 --> 00:12:54,569
elastic search to make that data speak

309
00:12:51,929 --> 00:12:57,889
to you more or provide more context so

310
00:12:54,569 --> 00:12:57,889
we have a lot of flexibility they're

311
00:12:59,119 --> 00:13:05,399
also using a last alert we can query

312
00:13:02,550 --> 00:13:08,849
elastic search if we want to send alerts

313
00:13:05,399 --> 00:13:10,139
to an email slack or the hives maybe I'm

314
00:13:08,850 --> 00:13:12,420
sure a lot of you folks have either

315
00:13:10,139 --> 00:13:16,139
heard of the hive or use the hive very

316
00:13:12,420 --> 00:13:18,689
cool tool we can you know we can query

317
00:13:16,139 --> 00:13:21,360
on windows of NIDS pretty much anything

318
00:13:18,689 --> 00:13:23,939
you can query on in Cabana itself and

319
00:13:21,360 --> 00:13:25,980
you can alert on certain frequency of

320
00:13:23,939 --> 00:13:27,420
events whitelist blacklist events there

321
00:13:25,980 --> 00:13:29,970
are lots of different rule types for you

322
00:13:27,420 --> 00:13:31,979
to be able to utilize and it's all in

323
00:13:29,970 --> 00:13:34,379
the mo syntax so if you're familiar with

324
00:13:31,980 --> 00:13:39,030
gamal then it should be very familiar to

325
00:13:34,379 --> 00:13:40,260
you and then aside

326
00:13:39,030 --> 00:13:42,630
from those tools and those data that

327
00:13:40,260 --> 00:13:44,310
that secure Denton provides there are

328
00:13:42,630 --> 00:13:46,590
several different use cases where it can

329
00:13:44,310 --> 00:13:48,390
use security and ends to help us either

330
00:13:46,590 --> 00:13:53,430
investigate something or protect our

331
00:13:48,390 --> 00:13:56,520
environment one example would be an

332
00:13:53,430 --> 00:13:58,800
evaluation mode we provided an

333
00:13:56,520 --> 00:14:02,430
evaluation mode for maybe businesses who

334
00:13:58,800 --> 00:14:04,800
wants to set up a PSC to prove intent or

335
00:14:02,430 --> 00:14:07,319
to prove that they can go forward with

336
00:14:04,800 --> 00:14:10,349
the project maybe for academic

337
00:14:07,320 --> 00:14:12,900
instruction we had a lot of a lot of

338
00:14:10,350 --> 00:14:14,580
universities that have cyber ranges and

339
00:14:12,900 --> 00:14:16,230
a lot of them love to use security onion

340
00:14:14,580 --> 00:14:18,480
for that academic instruction because

341
00:14:16,230 --> 00:14:20,190
it's very easy to set up and it's very

342
00:14:18,480 --> 00:14:22,100
easy to walk through an attacker

343
00:14:20,190 --> 00:14:24,330
scenario

344
00:14:22,100 --> 00:14:25,860
additionally home lab testing a lot of

345
00:14:24,330 --> 00:14:28,080
folks like SCI have their own home lab

346
00:14:25,860 --> 00:14:30,420
it's very useful you know even aside

347
00:14:28,080 --> 00:14:32,910
from really the lab perspective but some

348
00:14:30,420 --> 00:14:34,530
monitor your own home network and be

349
00:14:32,910 --> 00:14:37,260
able to see the traffic and it would be

350
00:14:34,530 --> 00:14:38,579
very very interested in some of the

351
00:14:37,260 --> 00:14:40,439
traffic that comes from those IOT

352
00:14:38,580 --> 00:14:44,220
devices and and how crazy some of it

353
00:14:40,440 --> 00:14:47,340
looks I'm sure and then as part of that

354
00:14:44,220 --> 00:14:50,040
evaluation mode or you know that kind of

355
00:14:47,340 --> 00:14:52,650
line of thinking we also have a SS set

356
00:14:50,040 --> 00:14:55,380
up minimal script that runs and it's a

357
00:14:52,650 --> 00:14:57,360
modified version of the native setup

358
00:14:55,380 --> 00:14:59,250
script and allows you to run security

359
00:14:57,360 --> 00:15:01,200
onion with only two cores

360
00:14:59,250 --> 00:15:03,090
and four gigs of ram so if you have

361
00:15:01,200 --> 00:15:05,280
students or yourself you have limited

362
00:15:03,090 --> 00:15:07,380
resources it really helps to allow you

363
00:15:05,280 --> 00:15:09,060
to set it up quickly and start

364
00:15:07,380 --> 00:15:10,800
experimenting and start getting the data

365
00:15:09,060 --> 00:15:13,939
and it really losing yourself in all the

366
00:15:10,800 --> 00:15:13,939
all the cool stuff

367
00:15:16,490 --> 00:15:21,449
additionally other use cases might

368
00:15:18,899 --> 00:15:23,040
include a production deployment there

369
00:15:21,449 --> 00:15:25,649
are a couple different models that we

370
00:15:23,040 --> 00:15:27,120
utilize with security and in one of them

371
00:15:25,649 --> 00:15:28,709
and really the most popular and

372
00:15:27,120 --> 00:15:30,389
recommended model would be that of a

373
00:15:28,709 --> 00:15:32,790
distributed model where you have a

374
00:15:30,389 --> 00:15:35,970
master server which really acts as the

375
00:15:32,790 --> 00:15:37,889
master of or really the I'm sorry the

376
00:15:35,970 --> 00:15:39,899
manager of the grid right you perform

377
00:15:37,889 --> 00:15:42,540
that grid management you can distribute

378
00:15:39,899 --> 00:15:45,870
rules you can push files

379
00:15:42,540 --> 00:15:48,120
you know orchestrate actions and then

380
00:15:45,870 --> 00:15:50,670
it's also a relay for the data that

381
00:15:48,120 --> 00:15:52,800
comes through from the four nodes so

382
00:15:50,670 --> 00:15:54,389
those four nodes are gonna be picking up

383
00:15:52,800 --> 00:15:56,040
that network data they're gonna be

384
00:15:54,389 --> 00:15:58,199
performing those sensor processes is

385
00:15:56,040 --> 00:15:59,550
that sniffing that collection and then

386
00:15:58,199 --> 00:16:02,160
that's gonna be sent off to that master

387
00:15:59,550 --> 00:16:03,779
server and then each storage node is

388
00:16:02,160 --> 00:16:06,029
going to pick out of the queue on the

389
00:16:03,779 --> 00:16:07,680
master server and then you can snap in

390
00:16:06,029 --> 00:16:09,360
as many storage nodes as you want as

391
00:16:07,680 --> 00:16:11,519
your business grows it allows you to

392
00:16:09,360 --> 00:16:13,829
scale very well and they be able to

393
00:16:11,519 --> 00:16:16,380
store data for longer and perform

394
00:16:13,829 --> 00:16:19,170
searches more quickly and that kind of

395
00:16:16,380 --> 00:16:21,180
thing additionally that standalone is

396
00:16:19,170 --> 00:16:23,339
the all-in-one we don't necessarily

397
00:16:21,180 --> 00:16:25,680
recommend using a standalone unless

398
00:16:23,339 --> 00:16:27,569
you're doing it for testing or unless

399
00:16:25,680 --> 00:16:29,459
you are have a very low throughput

400
00:16:27,569 --> 00:16:31,500
environment but that's another option as

401
00:16:29,459 --> 00:16:33,719
well as the heavy node which is just a

402
00:16:31,500 --> 00:16:35,550
four node in a storage node that you can

403
00:16:33,720 --> 00:16:37,410
kind of take one box out of the equation

404
00:16:35,550 --> 00:16:40,529
you just have that master and heavy node

405
00:16:37,410 --> 00:16:42,750
communicating again we don't necessarily

406
00:16:40,529 --> 00:16:44,910
recommend it just because we'd like to

407
00:16:42,750 --> 00:16:47,880
separate the sniffing processes from the

408
00:16:44,910 --> 00:16:50,339
indexing processes just from the i/o and

409
00:16:47,880 --> 00:16:55,860
and resource perspective but that is

410
00:16:50,339 --> 00:16:59,490
another option and yet another one an

411
00:16:55,860 --> 00:17:01,860
analyst VM so say you want to install

412
00:16:59,490 --> 00:17:03,750
the security onion I so you can install

413
00:17:01,860 --> 00:17:05,909
that in a VM and you can have your own

414
00:17:03,750 --> 00:17:07,589
self-contained analysis platform this

415
00:17:05,909 --> 00:17:08,010
way whenever you're going and looking in

416
00:17:07,589 --> 00:17:09,750
kappanna

417
00:17:08,010 --> 00:17:10,829
and you're pulling down pcaps and you're

418
00:17:09,750 --> 00:17:12,990
looking in network miner and you're

419
00:17:10,829 --> 00:17:14,579
looking in Wireshark you can carve out

420
00:17:12,990 --> 00:17:16,740
files without risk of accidentally

421
00:17:14,579 --> 00:17:17,938
running those files or adding a V pick

422
00:17:16,740 --> 00:17:19,679
up those files and do something with

423
00:17:17,939 --> 00:17:21,480
those files and it contains and

424
00:17:19,679 --> 00:17:23,850
necessary tools for us to be able to

425
00:17:21,480 --> 00:17:25,980
still in an enterprise triage those

426
00:17:23,849 --> 00:17:28,870
alerts right with either squeal squirt

427
00:17:25,980 --> 00:17:31,390
or Cabana dissect the packets and

428
00:17:28,870 --> 00:17:33,070
whatever you need soon as an analyst and

429
00:17:31,390 --> 00:17:35,920
this is what we typically recommend for

430
00:17:33,070 --> 00:17:37,899
those you know whenever they can to use

431
00:17:35,920 --> 00:17:43,480
an analyst VM to access their core

432
00:17:37,900 --> 00:17:46,510
infrastructure and then another use case

433
00:17:43,480 --> 00:17:48,430
would be that of the event conduit so

434
00:17:46,510 --> 00:17:49,960
with security onion and really the

435
00:17:48,430 --> 00:17:53,050
elastic stack helps us to leverage this

436
00:17:49,960 --> 00:17:55,059
a lot is the ability to send logs to

437
00:17:53,050 --> 00:17:58,780
Splunk we can symbols to another elastic

438
00:17:55,059 --> 00:18:01,928
stack or sim s3 anything with an HTTP

439
00:17:58,780 --> 00:18:04,090
endpoint HTTP endpoint really it's kind

440
00:18:01,929 --> 00:18:05,650
of up to your imagination there's just a

441
00:18:04,090 --> 00:18:06,970
lot of ways that that we can still

442
00:18:05,650 --> 00:18:09,250
collect that data and if you have

443
00:18:06,970 --> 00:18:11,200
another sim or data link that you want

444
00:18:09,250 --> 00:18:12,450
to throw that into we can help with that

445
00:18:11,200 --> 00:18:16,000
as well

446
00:18:12,450 --> 00:18:18,309
and then I mentioned the analyst VM that

447
00:18:16,000 --> 00:18:20,080
kind of ties in with forensics if you

448
00:18:18,309 --> 00:18:21,910
want to analyze a specific pcap or

449
00:18:20,080 --> 00:18:24,428
multiple pcaps we can use the Esso

450
00:18:21,910 --> 00:18:26,290
import pcap command and what that's

451
00:18:24,429 --> 00:18:28,030
going to do it's going to allow us to

452
00:18:26,290 --> 00:18:31,300
take that peek app and read it in with

453
00:18:28,030 --> 00:18:33,070
the native timestamp as opposed to TCP

454
00:18:31,300 --> 00:18:36,309
replay if you were to replay the packet

455
00:18:33,070 --> 00:18:40,210
it would not for preserve the original

456
00:18:36,309 --> 00:18:41,620
timestamps so if we had a peek at that

457
00:18:40,210 --> 00:18:43,330
somebody wanted us to look at we can go

458
00:18:41,620 --> 00:18:45,760
back and retroactively Lee import that

459
00:18:43,330 --> 00:18:49,290
and we can do that you know from the

460
00:18:45,760 --> 00:18:49,290
correct timestamps and whatnot

461
00:18:51,420 --> 00:18:57,190
so I know it socks a whole lot about you

462
00:18:54,880 --> 00:18:59,260
know what security and and can do right

463
00:18:57,190 --> 00:19:00,940
and and how we can leverage that in the

464
00:18:59,260 --> 00:19:03,940
different use cases and the tools and

465
00:19:00,940 --> 00:19:06,070
data but really I think the value comes

466
00:19:03,940 --> 00:19:09,160
whenever you're able to see the

467
00:19:06,070 --> 00:19:11,110
components work together you know have

468
00:19:09,160 --> 00:19:14,440
that context and be able to have that

469
00:19:11,110 --> 00:19:16,060
visibility into your environment and so

470
00:19:14,440 --> 00:19:18,850
with that I'd like to start off with a

471
00:19:16,060 --> 00:19:21,310
little bit of Investigation I am going

472
00:19:18,850 --> 00:19:23,350
to disconnect this particular screen

473
00:19:21,310 --> 00:19:27,000
real quick and pull something up unless

474
00:19:23,350 --> 00:19:31,449
I can pull that over let me see

475
00:19:27,000 --> 00:19:37,210
mm-hmm see isn't it all right give me

476
00:19:31,450 --> 00:19:39,690
just a second here okay so so this right

477
00:19:37,210 --> 00:19:43,660
here what I'm showing on the screen is

478
00:19:39,690 --> 00:19:45,310
after running som port pcap and what we

479
00:19:43,660 --> 00:19:48,220
have right here is a security onion

480
00:19:45,310 --> 00:19:52,030
analyst vm or just a dedicated VM for

481
00:19:48,220 --> 00:19:54,340
analysis that stood up with the security

482
00:19:52,030 --> 00:19:57,250
and an ISO and once I've stood that up I

483
00:19:54,340 --> 00:19:59,830
ran Esso import pcap to prepare the box

484
00:19:57,250 --> 00:20:03,150
so that's I can then import whatever

485
00:19:59,830 --> 00:20:06,129
pcaps that I want to look through and

486
00:20:03,150 --> 00:20:08,980
after that I've really only imported one

487
00:20:06,130 --> 00:20:12,670
pcap because the situation here in the

488
00:20:08,980 --> 00:20:14,560
story was this is is my boss gave me

489
00:20:12,670 --> 00:20:18,130
this pcap and and just wanted me to look

490
00:20:14,560 --> 00:20:19,810
at this because he had some folks that

491
00:20:18,130 --> 00:20:21,880
weren't really really sure about the

492
00:20:19,810 --> 00:20:23,830
situation and really just wanted to get

493
00:20:21,880 --> 00:20:25,750
my thoughts on it without without really

494
00:20:23,830 --> 00:20:28,540
putting too much into perspective for me

495
00:20:25,750 --> 00:20:31,930
so what I've got right here is after

496
00:20:28,540 --> 00:20:33,550
running SSO import pcap kibana the

497
00:20:31,930 --> 00:20:36,310
overview dashboard and security onion

498
00:20:33,550 --> 00:20:37,930
you'll notice it's not super populated

499
00:20:36,310 --> 00:20:39,820
right now that's because I've only

500
00:20:37,930 --> 00:20:42,220
imported that one pcap and it only

501
00:20:39,820 --> 00:20:44,470
happened it's one point in time so will

502
00:20:42,220 --> 00:20:46,450
only see those logs relevant to this but

503
00:20:44,470 --> 00:20:47,950
if you were monitoring your your network

504
00:20:46,450 --> 00:20:49,750
of course you would see that steady flow

505
00:20:47,950 --> 00:20:51,190
of data and you'd see a lot more mixed

506
00:20:49,750 --> 00:20:54,040
in here so this is more of an academic

507
00:20:51,190 --> 00:20:56,940
use case but should still be applicable

508
00:20:54,040 --> 00:20:59,050
to give you an idea of how it performs

509
00:20:56,940 --> 00:21:00,160
right so we've got this overview

510
00:20:59,050 --> 00:21:02,770
dashboard and we've got these different

511
00:21:00,160 --> 00:21:05,050
long types here we'll break these out

512
00:21:02,770 --> 00:21:06,460
you can see different Zeke types we

513
00:21:05,050 --> 00:21:08,590
still name them with a bro extension on

514
00:21:06,460 --> 00:21:09,580
the backend so you'll still see that but

515
00:21:08,590 --> 00:21:12,580
we can see that we've got some files

516
00:21:09,580 --> 00:21:15,460
logs some connection logs some HTTP

517
00:21:12,580 --> 00:21:16,780
records and some DNS records and we can

518
00:21:15,460 --> 00:21:17,830
also see on the left hand side that

519
00:21:16,780 --> 00:21:20,560
we've got a lot of links that we can

520
00:21:17,830 --> 00:21:23,139
click here and these are really example

521
00:21:20,560 --> 00:21:25,090
dashboards we encourage a lot of folks

522
00:21:23,140 --> 00:21:27,150
whenever they use security I didn't set

523
00:21:25,090 --> 00:21:28,889
it up and their enterprise to expand

524
00:21:27,150 --> 00:21:30,930
experiments with these dashboards

525
00:21:28,890 --> 00:21:33,520
because they aren't necessarily

526
00:21:30,930 --> 00:21:35,770
one-size-fits-all right

527
00:21:33,520 --> 00:21:38,620
they do have some useful visualizations

528
00:21:35,770 --> 00:21:41,230
on each dashboard but really we want

529
00:21:38,620 --> 00:21:42,520
folks to get accustomed to building

530
00:21:41,230 --> 00:21:45,310
their own dashboards and really doing

531
00:21:42,520 --> 00:21:46,660
what works for them but as you can see

532
00:21:45,310 --> 00:21:49,480
we've got different details in these

533
00:21:46,660 --> 00:21:49,920
files and then on these HTTP records in

534
00:21:49,480 --> 00:21:52,510
here

535
00:21:49,920 --> 00:21:58,120
let's take just a second here this VM

536
00:21:52,510 --> 00:22:00,370
it's not the quickest writes and so we

537
00:21:58,120 --> 00:22:02,770
can see some different details source IP

538
00:22:00,370 --> 00:22:04,659
address destination IP address all in

539
00:22:02,770 --> 00:22:06,100
these different dashboards but really

540
00:22:04,660 --> 00:22:07,810
right now I just want to take it back

541
00:22:06,100 --> 00:22:09,969
over to that overview dashboard real

542
00:22:07,810 --> 00:22:12,879
quick and zoom in on something that I

543
00:22:09,970 --> 00:22:22,200
noticed right off the bat so let's click

544
00:22:12,880 --> 00:22:22,200
home real quick take just a second here

545
00:22:24,510 --> 00:22:30,580
all right so you can see that we have

546
00:22:28,510 --> 00:22:32,710
some snorers here and really this is

547
00:22:30,580 --> 00:22:35,379
just an identifier for snort or sericata

548
00:22:32,710 --> 00:22:37,720
needs alerts so we see that we have a

549
00:22:35,380 --> 00:22:39,250
few of those there and just because it's

550
00:22:37,720 --> 00:22:41,170
kind of easy pickins i'm gonna take a

551
00:22:39,250 --> 00:22:43,240
look at those first real quick and see

552
00:22:41,170 --> 00:22:45,340
what's up with those and we present

553
00:22:43,240 --> 00:22:46,900
those actually down here in addition

554
00:22:45,340 --> 00:22:49,209
this other some of the other summary

555
00:22:46,900 --> 00:22:51,430
data and I can see right here that

556
00:22:49,210 --> 00:22:53,560
that's source IP again it's the same

557
00:22:51,430 --> 00:22:55,600
that's really the only source IP for the

558
00:22:53,560 --> 00:22:58,330
most part that I see in all of this

559
00:22:55,600 --> 00:23:01,360
communication that we were looking at so

560
00:22:58,330 --> 00:23:03,129
with this right here this source IP

561
00:23:01,360 --> 00:23:05,490
address it's hyperlinked so we can sync

562
00:23:03,130 --> 00:23:08,490
that to the indicator dashboard right

563
00:23:05,490 --> 00:23:08,490
and

564
00:23:08,590 --> 00:23:11,949
fault that indicator dashboard is going

565
00:23:10,270 --> 00:23:15,250
to show the last 24 hours but we can

566
00:23:11,950 --> 00:23:17,440
quickly and easily change that and it's

567
00:23:15,250 --> 00:23:20,590
gonna take just a second here just in

568
00:23:17,440 --> 00:23:24,400
case that takes a second because again

569
00:23:20,590 --> 00:23:26,110
this VM is slow I'm gonna go over here

570
00:23:24,400 --> 00:23:28,210
so this is where I've pivoted before

571
00:23:26,110 --> 00:23:29,620
over to this indicator dashboard right

572
00:23:28,210 --> 00:23:32,080
and we can see again some different

573
00:23:29,620 --> 00:23:35,260
details some more summary data we can

574
00:23:32,080 --> 00:23:38,020
see some different types of services we

575
00:23:35,260 --> 00:23:40,000
can see again the alerts but what I'm

576
00:23:38,020 --> 00:23:42,520
interested here and this is again

577
00:23:40,000 --> 00:23:44,890
showing the source IP really just this

578
00:23:42,520 --> 00:23:47,559
host that we're interested in it's kind

579
00:23:44,890 --> 00:23:50,200
of building a time line write a time

580
00:23:47,559 --> 00:23:54,940
line of activity and to do that I really

581
00:23:50,200 --> 00:23:56,740
like to scroll down and and really you

582
00:23:54,940 --> 00:24:00,820
know in discover as well you can do this

583
00:23:56,740 --> 00:24:02,529
but I like to specify you know toggle

584
00:24:00,820 --> 00:24:04,689
some specific fields that I want to look

585
00:24:02,529 --> 00:24:08,020
for in this traffic so I can get a

586
00:24:04,690 --> 00:24:09,640
better idea and as this is incrementing

587
00:24:08,020 --> 00:24:11,679
the time stamp I can see kind of what

588
00:24:09,640 --> 00:24:15,220
happened at what time and correlate that

589
00:24:11,679 --> 00:24:17,740
with the other traffic right so right

590
00:24:15,220 --> 00:24:19,149
now let me put this back in here doesn't

591
00:24:17,740 --> 00:24:21,700
look like I have the query in here so

592
00:24:19,149 --> 00:24:24,750
I'd probably want to see a query for DNS

593
00:24:21,700 --> 00:24:24,750
so I'm going to toggle that

594
00:24:25,840 --> 00:24:30,439
right and now I'm gonna pull that over

595
00:24:28,850 --> 00:24:37,149
here just to make it a little easier to

596
00:24:30,440 --> 00:24:43,610
read here all right comma once again

597
00:24:37,150 --> 00:24:46,960
over here so rolling all right I'm just

598
00:24:43,610 --> 00:24:50,750
gonna prop this over here and one more

599
00:24:46,960 --> 00:24:52,910
all right so right now I'm gonna

600
00:24:50,750 --> 00:24:54,800
collapse this and we can get a little

601
00:24:52,910 --> 00:24:58,610
bit of an idea of what's going on here

602
00:24:54,800 --> 00:25:00,139
right without anything else any other

603
00:24:58,610 --> 00:25:01,939
knowledge just starting from the

604
00:25:00,140 --> 00:25:05,450
beginning we can see that a query has

605
00:25:01,940 --> 00:25:08,420
gone out to or for free to speak that

606
00:25:05,450 --> 00:25:11,470
enemy okay that's kind of strange but

607
00:25:08,420 --> 00:25:13,520
you know I mean what else happened right

608
00:25:11,470 --> 00:25:15,860
so we've got these other connection

609
00:25:13,520 --> 00:25:17,570
records on these connection records are

610
00:25:15,860 --> 00:25:19,639
really going to be associated with each

611
00:25:17,570 --> 00:25:21,169
of these transactional records so

612
00:25:19,640 --> 00:25:23,210
there's not gonna be a lot at this time

613
00:25:21,170 --> 00:25:26,900
that I really want to look at unless I

614
00:25:23,210 --> 00:25:28,700
want to dig into more summary details so

615
00:25:26,900 --> 00:25:31,210
I'm just going to negate this value on

616
00:25:28,700 --> 00:25:31,210
the event side

617
00:25:36,460 --> 00:25:42,110
all right now it's a little bit clearer

618
00:25:40,430 --> 00:25:44,300
right so we've got some DNS and some

619
00:25:42,110 --> 00:25:46,760
HTTP traffic and we see that query for

620
00:25:44,300 --> 00:25:49,730
free to speak that me all right and then

621
00:25:46,760 --> 00:25:53,180
we see a get to free to speak that me

622
00:25:49,730 --> 00:25:57,560
right to this URI this 0 8 4 3

623
00:25:53,180 --> 00:26:01,240
underscore 4 3 dot PHP okay I mean

624
00:25:57,560 --> 00:26:03,470
that's nothing too crazy so far right

625
00:26:01,240 --> 00:26:06,140
but you know if we want to get a little

626
00:26:03,470 --> 00:26:08,450
bit more detail into that as I mentioned

627
00:26:06,140 --> 00:26:11,450
before we do have that full packet

628
00:26:08,450 --> 00:26:13,640
capture available so if I want to go

629
00:26:11,450 --> 00:26:15,950
over to cap me and pull the TCPS

630
00:26:13,640 --> 00:26:18,550
transcript for that and get a little bit

631
00:26:15,950 --> 00:26:22,280
better idea of what's going on there

632
00:26:18,550 --> 00:26:23,720
okay so we see that get to the zero

633
00:26:22,280 --> 00:26:28,570
eight four three underscore four three

634
00:26:23,720 --> 00:26:33,110
dot PHP and then we see a return right

635
00:26:28,570 --> 00:26:34,939
it looks like a binary or I'm sorry not

636
00:26:33,110 --> 00:26:37,429
a binary is it okay so we have a pique

637
00:26:34,940 --> 00:26:40,700
here and then we had this if extension

638
00:26:37,430 --> 00:26:45,020
here okay so maybe somebody downloaded a

639
00:26:40,700 --> 00:26:47,240
zip file alright so let's go back it's a

640
00:26:45,020 --> 00:26:51,160
little you know people download zip

641
00:26:47,240 --> 00:26:53,870
files all the time so let's go back

642
00:26:51,160 --> 00:26:56,270
alright so they got that they went there

643
00:26:53,870 --> 00:27:01,139
the file is downloaded we can see our

644
00:26:56,270 --> 00:27:03,450
bro files record here but following that

645
00:27:01,140 --> 00:27:08,790
just after that event we also see a call

646
00:27:03,450 --> 00:27:10,410
to IP defi dot org okay or I'm sorry not

647
00:27:08,790 --> 00:27:13,740
a call but a DNS query right here and

648
00:27:10,410 --> 00:27:19,620
then further down we see the actual get

649
00:27:13,740 --> 00:27:21,330
to IP I if I dot org okay you know there

650
00:27:19,620 --> 00:27:24,389
are a lot of services that use external

651
00:27:21,330 --> 00:27:26,040
IP ease right then in businesses but

652
00:27:24,390 --> 00:27:27,720
given that you know we kind of had this

653
00:27:26,040 --> 00:27:32,060
isolated pcap maybe we should just take

654
00:27:27,720 --> 00:27:32,060
a look and see what's going on there

655
00:27:32,360 --> 00:27:39,750
okay so we do see that get for the API

656
00:27:36,420 --> 00:27:42,480
dot IP I find out of work then we do see

657
00:27:39,750 --> 00:27:43,770
an address returned okay

658
00:27:42,480 --> 00:27:48,300
so there's an external address returned

659
00:27:43,770 --> 00:27:51,600
not a big deal but let's see let's walk

660
00:27:48,300 --> 00:27:52,980
it a little more okay so we see some

661
00:27:51,600 --> 00:27:56,010
profiles that's really going to be that

662
00:27:52,980 --> 00:27:59,880
that plain text that was returned by the

663
00:27:56,010 --> 00:28:03,480
IP fi dot org and then we also see it

664
00:27:59,880 --> 00:28:06,570
looks like a DNS query for some eks calm

665
00:28:03,480 --> 00:28:10,760
okay all right I don't know what that is

666
00:28:06,570 --> 00:28:12,810
but seems okay so far but if we go oh

667
00:28:10,760 --> 00:28:15,060
you know what I'm gonna back up real

668
00:28:12,810 --> 00:28:17,970
quick so one of the snort alerts that we

669
00:28:15,060 --> 00:28:22,639
saw previously this did trigger after

670
00:28:17,970 --> 00:28:26,400
the IP lookup I was that IP lookup API

671
00:28:22,640 --> 00:28:27,840
IP if I that org so just thrown it out

672
00:28:26,400 --> 00:28:31,170
there that kind of correlates with what

673
00:28:27,840 --> 00:28:34,850
we saw earlier right and again that some

674
00:28:31,170 --> 00:28:38,370
eks calm we see a post to that okay well

675
00:28:34,850 --> 00:28:40,050
it was all cool and so we kind of saw

676
00:28:38,370 --> 00:28:42,449
this post right it seems a little

677
00:28:40,050 --> 00:28:44,520
strange seems like it could be

678
00:28:42,450 --> 00:28:45,780
reasonable but you know let's let's go

679
00:28:44,520 --> 00:28:48,050
ahead and check it out and see what that

680
00:28:45,780 --> 00:28:48,050
looks like

681
00:28:49,889 --> 00:28:57,629
okay well well that's a little different

682
00:28:52,350 --> 00:29:01,859
right hmm looks like an actual gooood

683
00:28:57,629 --> 00:29:08,219
who's being posted to this server and

684
00:29:01,859 --> 00:29:12,369
then base64 encoded string is returned

685
00:29:08,220 --> 00:29:14,190
okay well can we look at this I mean

686
00:29:12,369 --> 00:29:17,259
does this make any sense to us if we

687
00:29:14,190 --> 00:29:20,979
maybe we want to go over to cyber chef

688
00:29:17,259 --> 00:29:22,809
so we host a local instance of cyber

689
00:29:20,979 --> 00:29:25,119
chef with security engine maybe we can

690
00:29:22,809 --> 00:29:27,418
pop that in see if it gives us anything

691
00:29:25,119 --> 00:29:27,418
good

692
00:29:27,660 --> 00:29:32,150
mm really I mean I'm not really sure

693
00:29:31,380 --> 00:29:36,980
about that

694
00:29:32,150 --> 00:29:42,530
so let's go back run one

695
00:29:36,980 --> 00:29:42,530
all right so exit over there

696
00:29:43,710 --> 00:29:50,789
oh okay so it's taking a second here so

697
00:29:47,880 --> 00:29:54,559
it's loading up but some will go back

698
00:29:50,789 --> 00:29:54,559
there and let me refresh this

699
00:29:57,590 --> 00:30:09,990
pray to the demo gods but again you know

700
00:30:07,710 --> 00:30:11,550
it's kind of strange with was that basic

701
00:30:09,990 --> 00:30:13,350
ste 4 encoded string and that posting of

702
00:30:11,550 --> 00:30:16,379
that gooood it's it's certainly not

703
00:30:13,350 --> 00:30:19,350
typical behavior at least I wouldn't

704
00:30:16,380 --> 00:30:23,070
assume so so let's see let's give it a

705
00:30:19,350 --> 00:30:25,770
second here my my poor my poor

706
00:30:23,070 --> 00:30:27,830
undersized VM here

707
00:30:25,770 --> 00:30:27,830
you

708
00:30:28,780 --> 00:30:36,230
all right just to do a let's go back

709
00:30:32,870 --> 00:30:38,179
down and continue start off Oh

710
00:30:36,230 --> 00:30:48,650
so we have to switch back let me switch

711
00:30:38,180 --> 00:30:50,570
back over to this nope yeah make sure we

712
00:30:48,650 --> 00:30:52,750
specify the correct date for these

713
00:30:50,570 --> 00:30:52,750
records

714
00:30:55,000 --> 00:31:02,620
all right we're back in business okay so

715
00:30:58,600 --> 00:31:02,620
I'm gonna scroll back down to the bottom

716
00:31:03,820 --> 00:31:17,360
mm-hmm and do we filter let's see we

717
00:31:07,520 --> 00:31:17,870
filtered on yeah yeah all right sorry

718
00:31:17,360 --> 00:31:20,149
for that

719
00:31:17,870 --> 00:31:22,879
all right well regardless so it looks

720
00:31:20,150 --> 00:31:25,220
like our filters have been since removed

721
00:31:22,880 --> 00:31:29,270
but there's oh here we go

722
00:31:25,220 --> 00:31:32,750
so I run sad so we'll go over here back

723
00:31:29,270 --> 00:31:35,330
over to the some EPS post to the four

724
00:31:32,750 --> 00:31:37,520
four and PHP okay now that's definitely

725
00:31:35,330 --> 00:31:39,590
really strange we definitely want to

726
00:31:37,520 --> 00:31:42,470
follow up on this activity and see what

727
00:31:39,590 --> 00:31:48,260
else might have happened so we see a DNS

728
00:31:42,470 --> 00:31:50,020
query for shop our de infinity calm and

729
00:31:48,260 --> 00:31:53,360
we see this get requests right here

730
00:31:50,020 --> 00:31:57,860
right for shop art affinity calm and

731
00:31:53,360 --> 00:31:59,629
this sodium can Pat one so all right

732
00:31:57,860 --> 00:32:03,860
let's get this straight so it posted

733
00:31:59,630 --> 00:32:06,320
this goo it to this URI right here and

734
00:32:03,860 --> 00:32:11,110
now it's calling out this you are right

735
00:32:06,320 --> 00:32:11,110
here let's see what happened

736
00:32:16,280 --> 00:32:23,399
interesting okay so it looks like we're

737
00:32:19,890 --> 00:32:27,510
getting a file called a 1 and it's a

738
00:32:23,400 --> 00:32:31,100
binary so returns okay so that file is

739
00:32:27,510 --> 00:32:31,100
transferred over to the client

740
00:32:32,840 --> 00:32:47,129
and then what do we see the DNS query

741
00:32:41,250 --> 00:32:51,690
again for some eks a post to thumb eks

742
00:32:47,130 --> 00:33:00,410
at a different URI see what happened

743
00:32:51,690 --> 00:33:04,410
here interesting so now we're posting

744
00:33:00,410 --> 00:33:05,580
binary data to another endpoint I'm not

745
00:33:04,410 --> 00:33:08,430
sure if this is beginning to look

746
00:33:05,580 --> 00:33:10,980
familiar for for anybody but we'll keep

747
00:33:08,430 --> 00:33:13,980
going here well we'll keep kind of

748
00:33:10,980 --> 00:33:19,950
following the the trail here go ahead

749
00:33:13,980 --> 00:33:23,070
and close out of this all right so we've

750
00:33:19,950 --> 00:33:25,710
seen it then post binary data to this

751
00:33:23,070 --> 00:33:27,990
URI after getting a binary from the

752
00:33:25,710 --> 00:33:30,300
other URI and now we're seeing it

753
00:33:27,990 --> 00:33:34,230
getting it seems like another file

754
00:33:30,300 --> 00:33:37,669
possibly from that same URI all right

755
00:33:34,230 --> 00:33:37,670
from the root URI

756
00:33:38,320 --> 00:33:49,240
okay that's interesting let's close that

757
00:33:42,370 --> 00:33:51,520
out let me keep going down of course we

758
00:33:49,240 --> 00:33:54,220
see the profiles associated with that

759
00:33:51,520 --> 00:33:55,720
bro files is going to if there are any

760
00:33:54,220 --> 00:33:57,010
file names associated with that it's

761
00:33:55,720 --> 00:33:58,450
going to populate them here and it's

762
00:33:57,010 --> 00:34:00,250
also going to show you that source IP

763
00:33:58,450 --> 00:34:03,790
from which the file came and we can see

764
00:34:00,250 --> 00:34:07,660
that there and then we also see after

765
00:34:03,790 --> 00:34:13,230
that previous get we see another post to

766
00:34:07,660 --> 00:34:13,230
d2 about that PHP now what is that

767
00:34:16,440 --> 00:34:22,330
another binary post okay interesting so

768
00:34:20,500 --> 00:34:25,630
as you can see it with the data

769
00:34:22,330 --> 00:34:28,270
collected from not only Z cancer ikata

770
00:34:25,630 --> 00:34:30,190
but also net sniffing G we're able to

771
00:34:28,270 --> 00:34:31,960
tie this together and start to connect

772
00:34:30,190 --> 00:34:34,389
the dots about what is going on here

773
00:34:31,960 --> 00:34:36,668
we're already building our trail of

774
00:34:34,389 --> 00:34:38,699
evidence here and kind of our timeline

775
00:34:36,668 --> 00:34:42,790
to see what's going on

776
00:34:38,699 --> 00:34:47,350
okay so we see that post there and then

777
00:34:42,790 --> 00:34:54,310
immediately after there we see three

778
00:34:47,350 --> 00:34:59,730
more posts to the same server and the

779
00:34:54,310 --> 00:34:59,730
same URI let's take a look at each one

780
00:35:04,400 --> 00:35:10,520
okay another post of the gooood and a

781
00:35:07,520 --> 00:35:13,640
base64 encoded string returned okay

782
00:35:10,520 --> 00:35:15,440
interesting if we see if we pop that in

783
00:35:13,640 --> 00:35:17,950
cyber shark we are not second sharks

784
00:35:15,440 --> 00:35:21,830
ever chef goodness making up tools

785
00:35:17,950 --> 00:35:23,540
forget anything useful and not really

786
00:35:21,830 --> 00:35:25,490
not a whole lot there for us to go off

787
00:35:23,540 --> 00:35:27,680
of unless we already have some

788
00:35:25,490 --> 00:35:34,540
familiarity with it something that that

789
00:35:27,680 --> 00:35:34,540
might be related so let's go off and

790
00:35:35,440 --> 00:35:42,280
look at this

791
00:35:37,570 --> 00:35:45,410
Thank You cat me and chromium alright

792
00:35:42,280 --> 00:35:47,510
okay and then we see the same thing here

793
00:35:45,410 --> 00:35:50,540
another gooood posted it looks like the

794
00:35:47,510 --> 00:35:53,090
same good and a different string I don't

795
00:35:50,540 --> 00:35:55,790
know about you but son this is kind of

796
00:35:53,090 --> 00:35:59,920
starting to look like like situ right

797
00:35:55,790 --> 00:36:02,570
even so a few few interactions before

798
00:35:59,920 --> 00:36:05,660
but you can see that these strings are

799
00:36:02,570 --> 00:36:10,610
different you know maybe different

800
00:36:05,660 --> 00:36:13,690
commands why not right and then let's

801
00:36:10,610 --> 00:36:13,690
look at this last one here

802
00:36:14,140 --> 00:36:25,640
and if we compare that it is also

803
00:36:20,120 --> 00:36:28,370
different so that's interesting

804
00:36:25,640 --> 00:36:31,040
so we've got all these series of events

805
00:36:28,370 --> 00:36:33,890
right this you first we've got this file

806
00:36:31,040 --> 00:36:35,240
and then we posted this data to this

807
00:36:33,890 --> 00:36:37,339
endpoint and then you've got all these

808
00:36:35,240 --> 00:36:39,560
other series of events occurring right

809
00:36:37,340 --> 00:36:43,760
and we're kind of building our our trail

810
00:36:39,560 --> 00:36:45,290
here and well we've got some interesting

811
00:36:43,760 --> 00:36:48,440
items here we don't really have anything

812
00:36:45,290 --> 00:36:51,170
that's super conclusive so maybe we want

813
00:36:48,440 --> 00:36:53,150
to dig a little bit more into the pcap

814
00:36:51,170 --> 00:36:55,910
that we had and and look at the files

815
00:36:53,150 --> 00:37:01,400
contained within it you can do that on

816
00:36:55,910 --> 00:37:03,710
our security I mean analyst VM and let

817
00:37:01,400 --> 00:37:05,480
me just pull up and do that using

818
00:37:03,710 --> 00:37:07,010
various tools you can use Wireshark

819
00:37:05,480 --> 00:37:09,740
or if you want to use network miner that

820
00:37:07,010 --> 00:37:12,800
is one option so right now I'm gonna use

821
00:37:09,740 --> 00:37:14,779
the network miner to load in my peak app

822
00:37:12,800 --> 00:37:16,850
and then it's going to present me with

823
00:37:14,780 --> 00:37:19,010
some files that I extracts out of there

824
00:37:16,850 --> 00:37:22,250
now if you're already performing Zeke

825
00:37:19,010 --> 00:37:24,080
file extraction or you're you know

826
00:37:22,250 --> 00:37:25,640
you're doing some other method of file

827
00:37:24,080 --> 00:37:27,890
extraction then of course you would

828
00:37:25,640 --> 00:37:29,210
already have this extracted but for this

829
00:37:27,890 --> 00:37:35,180
academic use case we're going to use a

830
00:37:29,210 --> 00:37:37,160
network miner so we can see also some

831
00:37:35,180 --> 00:37:39,080
different communication details for

832
00:37:37,160 --> 00:37:41,390
these hosts and then some of files that

833
00:37:39,080 --> 00:37:43,520
were extracted out we've got the zip

834
00:37:41,390 --> 00:37:45,589
file that we saw before now we've got a

835
00:37:43,520 --> 00:37:47,990
couple of different PHP and HTML files

836
00:37:45,590 --> 00:37:49,610
we've got a couple binaries at one

837
00:37:47,990 --> 00:37:51,649
binary and that two binary that we

838
00:37:49,610 --> 00:37:55,000
talked about and then from here if we

839
00:37:51,650 --> 00:37:57,800
want we can go into here into the folder

840
00:37:55,000 --> 00:38:00,710
and we can actually see if we can

841
00:37:57,800 --> 00:38:02,930
extract that here right and we can make

842
00:38:00,710 --> 00:38:04,870
you know we can certainly hash these and

843
00:38:02,930 --> 00:38:07,640
check these with virus it along the way

844
00:38:04,870 --> 00:38:09,350
certain files to to see if there's any

845
00:38:07,640 --> 00:38:12,230
inkling of information that can lead us

846
00:38:09,350 --> 00:38:14,480
along that path but it looks like

847
00:38:12,230 --> 00:38:17,150
extracting that zip file there's a VBS

848
00:38:14,480 --> 00:38:19,010
file here which is kind of interesting I

849
00:38:17,150 --> 00:38:20,630
wouldn't normally expect that with

850
00:38:19,010 --> 00:38:23,150
normal traffic and certainly given these

851
00:38:20,630 --> 00:38:25,910
series of events it definitely falls in

852
00:38:23,150 --> 00:38:28,450
line with the weirdness factor so we can

853
00:38:25,910 --> 00:38:31,098
open that with them

854
00:38:28,450 --> 00:38:33,288
all right and right now we see a bunch

855
00:38:31,099 --> 00:38:36,170
of different stuff it's really hard to

856
00:38:33,289 --> 00:38:39,710
read right a split function variable

857
00:38:36,170 --> 00:38:42,710
that's gonna be potentially read in

858
00:38:39,710 --> 00:38:46,579
later but if we scroll down and see if

859
00:38:42,710 --> 00:38:48,799
we can get some logic okay okay we got

860
00:38:46,579 --> 00:38:51,140
some logic here so it looks like some

861
00:38:48,799 --> 00:38:54,099
you know just some VB here VB scripting

862
00:38:51,140 --> 00:38:58,249
and we got a couple of function here

863
00:38:54,099 --> 00:39:02,210
including a seed in a loop creating an

864
00:38:58,249 --> 00:39:05,660
object here okay that's interesting

865
00:39:02,210 --> 00:39:08,680
opening a stream we're writing text and

866
00:39:05,660 --> 00:39:10,999
we're saving it to a file okay

867
00:39:08,680 --> 00:39:12,499
interesting and of course you can see

868
00:39:10,999 --> 00:39:14,988
all the windows control characters here

869
00:39:12,499 --> 00:39:18,649
you're gonna see that in in this

870
00:39:14,989 --> 00:39:30,230
platform our in Linux in general but we

871
00:39:18,650 --> 00:39:32,599
also see blips back up I'll go back that

872
00:39:30,230 --> 00:39:34,430
got went too far we also see a process

873
00:39:32,599 --> 00:39:37,730
where it actually creates the process

874
00:39:34,430 --> 00:39:40,669
there with reg server 32 so one thing we

875
00:39:37,730 --> 00:39:43,400
could do is take this out if we wanted

876
00:39:40,670 --> 00:39:45,980
to try to extract the file we can

877
00:39:43,400 --> 00:39:50,150
actually take that out maybe and then

878
00:39:45,980 --> 00:39:51,859
try running the VB script to create the

879
00:39:50,150 --> 00:39:55,339
file the resultant file that then gets

880
00:39:51,859 --> 00:39:57,558
run or processed okay

881
00:39:55,339 --> 00:39:59,210
don't really have the the capability

882
00:39:57,559 --> 00:40:01,489
natively to do that here but if I were

883
00:39:59,210 --> 00:40:03,980
to transfer that to another host you

884
00:40:01,489 --> 00:40:06,619
know that could certainly be possible so

885
00:40:03,980 --> 00:40:08,390
I'm not gonna demonstrate that here I'm

886
00:40:06,619 --> 00:40:10,700
kind of gonna leave it at that as far as

887
00:40:08,390 --> 00:40:13,098
as the file analysis portion again you

888
00:40:10,700 --> 00:40:15,710
could take difference you know take

889
00:40:13,099 --> 00:40:17,239
different hash values and whatnot from

890
00:40:15,710 --> 00:40:19,460
these separate these different files and

891
00:40:17,239 --> 00:40:21,650
then use those for later indicators

892
00:40:19,460 --> 00:40:23,359
maybe if it's something of interest but

893
00:40:21,650 --> 00:40:27,289
that's gonna be it as far as these

894
00:40:23,359 --> 00:40:29,029
security onion demonstration here but I

895
00:40:27,289 --> 00:40:32,630
will put it over here to the slides and

896
00:40:29,029 --> 00:40:35,950
clarify on this a little bit more so let

897
00:40:32,630 --> 00:40:35,950
me switch this screen real quick

898
00:40:36,610 --> 00:40:46,070
Shh all right so get back over here and

899
00:40:44,330 --> 00:40:48,110
I'm just gonna go through these this is

900
00:40:46,070 --> 00:40:50,330
really for the folks that are not going

901
00:40:48,110 --> 00:40:51,770
to be able to watch the video I figured

902
00:40:50,330 --> 00:40:53,330
I'd include some stuff here for them to

903
00:40:51,770 --> 00:40:56,180
be able to go over and for folks that go

904
00:40:53,330 --> 00:41:03,670
over after their presentation so it just

905
00:40:56,180 --> 00:41:07,669
walks through what we just spoke and

906
00:41:03,670 --> 00:41:09,200
real quick just a recap so that sequence

907
00:41:07,670 --> 00:41:10,640
of events we see that get requests

908
00:41:09,200 --> 00:41:15,439
initially all the way down to those

909
00:41:10,640 --> 00:41:16,910
three posts right to the semi KS and we

910
00:41:15,440 --> 00:41:18,470
didn't know before about the files

911
00:41:16,910 --> 00:41:22,670
delivered a drop but now we do know

912
00:41:18,470 --> 00:41:24,759
there is a VBS file and using network

913
00:41:22,670 --> 00:41:28,700
miner we were able to extract that out

914
00:41:24,760 --> 00:41:33,190
that's it file we're able to go down and

915
00:41:28,700 --> 00:41:35,899
look through the the function there and

916
00:41:33,190 --> 00:41:39,190
this is really what I was mentioning we

917
00:41:35,900 --> 00:41:39,190
want to end up with right

918
00:41:41,200 --> 00:41:46,790
and so after modifying the BBS and

919
00:41:43,970 --> 00:41:48,980
running it on a test Windows host we can

920
00:41:46,790 --> 00:41:52,640
run C scripts and we can actually have

921
00:41:48,980 --> 00:41:56,900
it perform that action right and so what

922
00:41:52,640 --> 00:42:00,230
happens is that this file whenever I ran

923
00:41:56,900 --> 00:42:02,900
C scripts the name of the VBS file it

924
00:42:00,230 --> 00:42:05,270
explored itself into users bassmaster

925
00:42:02,900 --> 00:42:08,480
great name by the way app data local

926
00:42:05,270 --> 00:42:12,740
temp right and it was a file called

927
00:42:08,480 --> 00:42:17,780
Adobe txt so I got that file hash at

928
00:42:12,740 --> 00:42:21,680
sha-256 own virus

929
00:42:17,780 --> 00:42:23,420
this hand sitter okay so now I've got

930
00:42:21,680 --> 00:42:24,830
some more work to do you know going and

931
00:42:23,420 --> 00:42:26,540
investigating on the host and and

932
00:42:24,830 --> 00:42:29,870
performing some cleanup and maybe some

933
00:42:26,540 --> 00:42:32,029
remediation but definitely a lot of you

934
00:42:29,870 --> 00:42:33,890
know a lot of direction where to go now

935
00:42:32,030 --> 00:42:36,110
and a lot more visibility than maybe I

936
00:42:33,890 --> 00:42:40,250
wouldn't have had you know not using

937
00:42:36,110 --> 00:42:43,160
something like secure Union and really

938
00:42:40,250 --> 00:42:44,270
it all started here it was from a mouse

939
00:42:43,160 --> 00:42:46,580
BAM

940
00:42:44,270 --> 00:42:50,330
so an email purporting to be related to

941
00:42:46,580 --> 00:42:52,580
of course our arc Ovid crisis right now

942
00:42:50,330 --> 00:42:56,450
which is of course not very favorable

943
00:42:52,580 --> 00:42:57,529
but it is working for some folks and so

944
00:42:56,450 --> 00:43:03,049
that's that's kind of how this all

945
00:42:57,530 --> 00:43:04,430
started and then we've got some other

946
00:43:03,050 --> 00:43:07,420
indicators that if you review in the

947
00:43:04,430 --> 00:43:07,419
slide you can go through

948
00:43:09,950 --> 00:43:14,279
and then what can we do with these

949
00:43:12,990 --> 00:43:17,879
indicators right I mean they're great

950
00:43:14,279 --> 00:43:18,269
you know what I mean sometimes they're

951
00:43:17,880 --> 00:43:19,710
worth

952
00:43:18,269 --> 00:43:21,149
they're worth something and sometimes of

953
00:43:19,710 --> 00:43:23,759
worthless right it just really depends

954
00:43:21,150 --> 00:43:26,990
but what you can do you can use a Zeke

955
00:43:23,759 --> 00:43:29,549
Intel framework to generate Zeke notices

956
00:43:26,990 --> 00:43:31,799
if you use miss but you can load them to

957
00:43:29,549 --> 00:43:34,559
miss and you can still get you know

958
00:43:31,799 --> 00:43:36,210
Cercado signatures and Zeke Intel from

959
00:43:34,559 --> 00:43:38,640
Miss p-- so if you're already doing that

960
00:43:36,210 --> 00:43:40,500
myth that's great we can do that you can

961
00:43:38,640 --> 00:43:42,210
write knids rules right alas alert rules

962
00:43:40,500 --> 00:43:43,950
or write signal rules and you can even

963
00:43:42,210 --> 00:43:46,349
convert those Sigma rules to last alert

964
00:43:43,950 --> 00:43:50,038
rules and then use those insecurities in

965
00:43:46,349 --> 00:43:53,819
it and I just want to give a shout out

966
00:43:50,039 --> 00:43:54,509
to Andy peas Destin Lee Brad Duncan and

967
00:43:53,819 --> 00:43:57,630
Mason Matz

968
00:43:54,509 --> 00:43:59,720
there is a write-up on sans about this

969
00:43:57,630 --> 00:44:03,210
very thing that you can also go through

970
00:43:59,720 --> 00:44:05,519
it was very nice to be able to to refer

971
00:44:03,210 --> 00:44:07,710
to and compare as I was going through

972
00:44:05,519 --> 00:44:09,750
this and then also Andy has one on hun

973
00:44:07,710 --> 00:44:12,180
ops that blue so just want to say thanks

974
00:44:09,750 --> 00:44:13,980
for those guys so what's next

975
00:44:12,180 --> 00:44:15,390
I'm gonna try to get through this fairly

976
00:44:13,980 --> 00:44:16,190
quickly because I know I'm running a

977
00:44:15,390 --> 00:44:19,230
little short on time

978
00:44:16,190 --> 00:44:20,759
what's security onion hybrid hunter this

979
00:44:19,230 --> 00:44:22,470
is our next big thing that we've been

980
00:44:20,759 --> 00:44:24,509
working on and we've been developing it

981
00:44:22,470 --> 00:44:26,759
a ton and putting a lot of a lot of

982
00:44:24,509 --> 00:44:29,369
man-hours into its gonna support CentOS

983
00:44:26,759 --> 00:44:31,079
an Ubuntu alright packages are gonna be

984
00:44:29,369 --> 00:44:32,460
replaced with docker containers salt

985
00:44:31,079 --> 00:44:33,990
stack is going to be used for that

986
00:44:32,460 --> 00:44:35,490
automation and orchestration of the

987
00:44:33,990 --> 00:44:37,979
stack it's going to make the sensor grid

988
00:44:35,490 --> 00:44:39,598
so much easier to manage it's gonna make

989
00:44:37,980 --> 00:44:42,599
grid statistics being able to gain

990
00:44:39,599 --> 00:44:44,130
statistics about your servers and for

991
00:44:42,599 --> 00:44:46,200
nodes and whatnot it's gonna make it

992
00:44:44,130 --> 00:44:49,109
awesome and then of course there are

993
00:44:46,200 --> 00:44:52,950
plans to even have a more unified

994
00:44:49,109 --> 00:44:54,089
interface there in Harvard hunter so

995
00:44:52,950 --> 00:44:55,399
Harvard hunter includes the hive and

996
00:44:54,089 --> 00:44:57,299
cortex if you've heard of them before

997
00:44:55,400 --> 00:44:59,069
then you'll know that they're great for

998
00:44:57,299 --> 00:45:00,839
alert triage incident management's if

999
00:44:59,069 --> 00:45:03,089
you want to enrich observables using

1000
00:45:00,839 --> 00:45:05,160
their analyzers or perform response

1001
00:45:03,089 --> 00:45:07,109
actions based on certain data that you

1002
00:45:05,160 --> 00:45:11,460
bring in or cases you can do that with

1003
00:45:07,109 --> 00:45:13,799
responders and thence octopus so sock to

1004
00:45:11,460 --> 00:45:16,079
puss is a flask API that we present in

1005
00:45:13,799 --> 00:45:18,150
hybrid hunter and you can push an event

1006
00:45:16,079 --> 00:45:20,160
from cabana to the hive if you want to

1007
00:45:18,150 --> 00:45:22,170
investigate that further you can push an

1008
00:45:20,160 --> 00:45:23,190
event from cabana to miss

1009
00:45:22,170 --> 00:45:24,600
I mean there's there's a lot of

1010
00:45:23,190 --> 00:45:26,310
different ways that you can tie in and

1011
00:45:24,600 --> 00:45:27,750
do different things and there's a lot of

1012
00:45:26,310 --> 00:45:30,230
automation going on behind the scenes

1013
00:45:27,750 --> 00:45:32,490
with that as well

1014
00:45:30,230 --> 00:45:34,650
playbook it's another huge one Josh

1015
00:45:32,490 --> 00:45:37,290
Bowers done an awesome job on playbook

1016
00:45:34,650 --> 00:45:39,000
and helping us implement detection

1017
00:45:37,290 --> 00:45:41,630
orchestration with Sigma and there's a

1018
00:45:39,000 --> 00:45:44,580
last alert rules that I spoke of also

1019
00:45:41,630 --> 00:45:46,320
automating the importing or the

1020
00:45:44,580 --> 00:45:48,600
insertion that's the hive case templates

1021
00:45:46,320 --> 00:45:51,000
into the hive so that whenever we have

1022
00:45:48,600 --> 00:45:52,980
an alert that's maybe generated from a

1023
00:45:51,000 --> 00:45:56,040
sigma rule we already have the steps

1024
00:45:52,980 --> 00:45:59,550
defined that we want to go take on those

1025
00:45:56,040 --> 00:46:01,830
alerts so at lower lower level analyst

1026
00:45:59,550 --> 00:46:04,740
can go off and do those quickly and then

1027
00:46:01,830 --> 00:46:06,330
even remind a hiring a tier hire to your

1028
00:46:04,740 --> 00:46:08,459
analyst of this stuff to take as well

1029
00:46:06,330 --> 00:46:10,140
and then we can check that attack

1030
00:46:08,460 --> 00:46:12,300
coverage we can check it with a tech

1031
00:46:10,140 --> 00:46:14,250
navigator it's okay so look at the the

1032
00:46:12,300 --> 00:46:15,750
layers of coverage there right based on

1033
00:46:14,250 --> 00:46:20,670
our detection logic that we have

1034
00:46:15,750 --> 00:46:22,560
deployed another huge one Josh has been

1035
00:46:20,670 --> 00:46:25,620
working on is OS query in fleet

1036
00:46:22,560 --> 00:46:28,799
integration as I mentioned Linux Mac and

1037
00:46:25,620 --> 00:46:30,330
Windows host telemetry data is awesome

1038
00:46:28,800 --> 00:46:32,250
to have and tie in with our network data

1039
00:46:30,330 --> 00:46:34,500
and we can also perform live and

1040
00:46:32,250 --> 00:46:36,150
scheduled queries with that and it

1041
00:46:34,500 --> 00:46:40,080
really helps with that centralized agent

1042
00:46:36,150 --> 00:46:43,260
management their stroke oh if you've

1043
00:46:40,080 --> 00:46:45,000
heard of SF f F F SF or file scanning

1044
00:46:43,260 --> 00:46:47,790
framework stroke is a similar concept

1045
00:46:45,000 --> 00:46:50,430
it's automated file analysis scale

1046
00:46:47,790 --> 00:46:52,740
written go and it allows us to take

1047
00:46:50,430 --> 00:46:54,419
those extracted files those files

1048
00:46:52,740 --> 00:46:55,799
extracted by Zeke or other files that

1049
00:46:54,420 --> 00:46:58,440
you have on your network that you want

1050
00:46:55,800 --> 00:47:00,960
to analyze and perform analysis get

1051
00:46:58,440 --> 00:47:03,420
additional metadata you can even use

1052
00:47:00,960 --> 00:47:07,840
yara or integrate it with cuckoo it's

1053
00:47:03,420 --> 00:47:10,150
super awesome in that regard and

1054
00:47:07,840 --> 00:47:12,820
pcap google stenographer will be

1055
00:47:10,150 --> 00:47:14,410
replacing net sniff ng we're going to

1056
00:47:12,820 --> 00:47:16,750
get a great performance improvement was

1057
00:47:14,410 --> 00:47:20,230
that I think and also the ability to

1058
00:47:16,750 --> 00:47:22,210
index that pcap right so index no pkf

1059
00:47:20,230 --> 00:47:25,120
may mean faster retrieval and whatnot

1060
00:47:22,210 --> 00:47:27,760
and just you know easier search and that

1061
00:47:25,120 --> 00:47:30,670
sort of thing and then also sensor Oni

1062
00:47:27,760 --> 00:47:32,800
Jason Errol is just joined us recently

1063
00:47:30,670 --> 00:47:34,810
before then he'd helped us to develop

1064
00:47:32,800 --> 00:47:36,220
since aroni and this will be the Katmai

1065
00:47:34,810 --> 00:47:39,220
replacement cut knee what you just saw a

1066
00:47:36,220 --> 00:47:42,009
few minutes ago since her Roni is

1067
00:47:39,220 --> 00:47:43,930
written in go and it also supports that

1068
00:47:42,010 --> 00:47:47,140
same peak at retrieval and transcript

1069
00:47:43,930 --> 00:47:49,210
transcript rendering and will likely

1070
00:47:47,140 --> 00:47:55,690
evolve to something a bit more in the

1071
00:47:49,210 --> 00:47:58,750
near future another thing that I want to

1072
00:47:55,690 --> 00:48:00,700
focus on real quick is cloud all right

1073
00:47:58,750 --> 00:48:03,040
we just had a brief discussion about

1074
00:48:00,700 --> 00:48:06,330
cloud here before me well it's you know

1075
00:48:03,040 --> 00:48:09,970
in that same vein AWS we now have a

1076
00:48:06,330 --> 00:48:11,259
community ami in AWS that's currently in

1077
00:48:09,970 --> 00:48:13,450
testing and we would love for you guys

1078
00:48:11,260 --> 00:48:16,030
to help us test it out and try it in

1079
00:48:13,450 --> 00:48:19,149
your environments we have a guide on

1080
00:48:16,030 --> 00:48:21,700
read the docs which I negligently left

1081
00:48:19,150 --> 00:48:23,680
out of this slide which I once I post

1082
00:48:21,700 --> 00:48:26,589
the slides I will add that in there but

1083
00:48:23,680 --> 00:48:28,419
we also have the ability to spin it up

1084
00:48:26,590 --> 00:48:30,730
quickly and easily using terraform so if

1085
00:48:28,420 --> 00:48:31,960
you have an AWS account or if you don't

1086
00:48:30,730 --> 00:48:33,370
have one and you want to set one up real

1087
00:48:31,960 --> 00:48:35,410
quick and you don't know how to set up

1088
00:48:33,370 --> 00:48:37,750
at VPC you know that it will

1089
00:48:35,410 --> 00:48:41,500
automatically create a VPC security

1090
00:48:37,750 --> 00:48:43,510
groups mirroring config and then you can

1091
00:48:41,500 --> 00:48:45,130
have that instant spun up and testing

1092
00:48:43,510 --> 00:48:47,290
with it and playing with it super

1093
00:48:45,130 --> 00:48:49,560
quickly and easily and I just want to

1094
00:48:47,290 --> 00:48:53,110
give a shout out to decimally again

1095
00:48:49,560 --> 00:48:55,590
Johnny AJ man cyberwar dog Roberto

1096
00:48:53,110 --> 00:48:58,450
Rodriguez and Chris long Centurion

1097
00:48:55,590 --> 00:49:00,760
because they did a lot of work we as in

1098
00:48:58,450 --> 00:49:02,259
a detection lab and also they did some

1099
00:49:00,760 --> 00:49:03,430
great stuff with a Hulk and then Dustin

1100
00:49:02,260 --> 00:49:05,980
of course with some security and in

1101
00:49:03,430 --> 00:49:08,740
additions for this terraform stuff so I

1102
00:49:05,980 --> 00:49:10,390
just want to say thanks and with that

1103
00:49:08,740 --> 00:49:12,600
it's trying to speed through those last

1104
00:49:10,390 --> 00:49:16,750
slides to make sure I made it through I

1105
00:49:12,600 --> 00:49:18,910
think I am done so I will open it up for

1106
00:49:16,750 --> 00:49:21,069
questions if anybody has any questions

1107
00:49:18,910 --> 00:49:24,640
and

1108
00:49:21,069 --> 00:49:26,939
yeah that's about it all right let me

1109
00:49:24,640 --> 00:49:26,939
see

1110
00:49:37,110 --> 00:49:49,680
to unmute the attracted tech channel all

1111
00:49:44,400 --> 00:49:51,240
right let me scroll up just a bit trip

1112
00:49:49,680 --> 00:49:52,680
the looks while wes is scrolling through

1113
00:49:51,240 --> 00:49:56,879
and reading things I saw that you raised

1114
00:49:52,680 --> 00:49:58,049
your hand in in the zoom webinar all of

1115
00:49:56,880 --> 00:49:59,460
our interactions are being driven

1116
00:49:58,050 --> 00:50:03,210
through the slack Channel so if you just

1117
00:49:59,460 --> 00:50:05,190
want to bounce over there and post and

1118
00:50:03,210 --> 00:50:08,220
post your question there was we'll take

1119
00:50:05,190 --> 00:50:10,710
care of it for you there okay okay so I

1120
00:50:08,220 --> 00:50:13,830
see ethical InfoSec is there a way to

1121
00:50:10,710 --> 00:50:15,540
integrate a CT I feed it depends

1122
00:50:13,830 --> 00:50:18,840
specifically on I guess what you're

1123
00:50:15,540 --> 00:50:22,250
referring to but pretty much anywhere

1124
00:50:18,840 --> 00:50:25,530
where where we can grab that data from

1125
00:50:22,250 --> 00:50:27,630
you know from an API or whatnot if you

1126
00:50:25,530 --> 00:50:30,450
had the data in the file if we need to

1127
00:50:27,630 --> 00:50:32,280
massage that we can do that I think it

1128
00:50:30,450 --> 00:50:37,529
just really depends on on specific ones

1129
00:50:32,280 --> 00:50:42,480
that we already support out of the box I

1130
00:50:37,530 --> 00:50:44,100
see one for I see Matt Carruthers are

1131
00:50:42,480 --> 00:50:46,290
there plans to integrate security onion

1132
00:50:44,100 --> 00:50:48,480
with Moloch it seemed very complementary

1133
00:50:46,290 --> 00:50:50,250
we've had a few questions about that we

1134
00:50:48,480 --> 00:50:54,650
don't necessarily have any intentions of

1135
00:50:50,250 --> 00:50:54,650
doing that at least not at this time

1136
00:50:56,180 --> 00:51:05,089
if there's anyone anyone it's time to

1137
00:51:02,070 --> 00:51:05,090
scroll and hate through here

1138
00:51:05,500 --> 00:51:08,910
you

1139
00:51:07,260 --> 00:51:11,210
you

1140
00:51:08,910 --> 00:51:11,210
right

1141
00:51:16,890 --> 00:51:23,549
yeah I don't see any other questions so

1142
00:51:19,140 --> 00:51:24,839
I appreciate the feedback guys and you

1143
00:51:23,549 --> 00:51:26,579
know I'll be here for the next minute so

1144
00:51:24,839 --> 00:51:30,200
if you still need one last question but

1145
00:51:26,579 --> 00:51:30,200
other than that that's all I have

