1
00:00:02,570 --> 00:00:07,939
you know y'all have been here before in

2
00:00:05,930 --> 00:00:09,440
this track you've heard me say this but

3
00:00:07,939 --> 00:00:13,400
I'm going to continue to say the rest of

4
00:00:09,440 --> 00:00:18,350
the day we literally could not do what

5
00:00:13,400 --> 00:00:21,260
we do here today without without the the

6
00:00:18,350 --> 00:00:23,900
sponsorship and support of these

7
00:00:21,260 --> 00:00:26,240
organizations they didn't leave us they

8
00:00:23,900 --> 00:00:29,509
could have they could have said we'll

9
00:00:26,240 --> 00:00:31,130
pull and we'll see you next year but

10
00:00:29,509 --> 00:00:32,900
they have not done that they have all

11
00:00:31,130 --> 00:00:35,000
stood with us 100 percent of our

12
00:00:32,900 --> 00:00:36,980
sponsors have stayed with us the entire

13
00:00:35,000 --> 00:00:39,170
time and so we're very grateful for that

14
00:00:36,980 --> 00:00:41,089
and so I want to acknowledge them once

15
00:00:39,170 --> 00:00:44,989
again at the diamond level Warner Media

16
00:00:41,090 --> 00:00:46,280
at the Gold level my home college in my

17
00:00:44,989 --> 00:00:48,230
home department at Kennesaw State

18
00:00:46,280 --> 00:00:50,629
University Cole's College of Business

19
00:00:48,230 --> 00:00:53,059
that is the college that my department

20
00:00:50,629 --> 00:00:55,190
is located in my department is the

21
00:00:53,059 --> 00:00:58,430
department of information systems at

22
00:00:55,190 --> 00:01:02,059
Kennesaw State University in addition to

23
00:00:58,430 --> 00:01:03,769
that we have I'm sorry trying to read

24
00:01:02,059 --> 00:01:07,340
from my scripture that I wrote Bishop

25
00:01:03,769 --> 00:01:12,408
Fox we also have coal fire genuine parts

26
00:01:07,340 --> 00:01:15,080
and NCR all of those fine organizations

27
00:01:12,409 --> 00:01:19,579
or sponsors at the gold level at the

28
00:01:15,080 --> 00:01:21,920
Silver level we I'm sorry at the at the

29
00:01:19,579 --> 00:01:23,809
crystal level sorry some days it's tough

30
00:01:21,920 --> 00:01:26,570
to read after a long day at the crystal

31
00:01:23,810 --> 00:01:28,759
level we have a critical path and

32
00:01:26,570 --> 00:01:31,729
synopsis and we thank them for their

33
00:01:28,759 --> 00:01:34,970
sponsorship today at the Silver level we

34
00:01:31,729 --> 00:01:37,250
have Aaron's binary defense we also have

35
00:01:34,970 --> 00:01:40,179
Black Hills information security as well

36
00:01:37,250 --> 00:01:43,579
as core light and guide point security

37
00:01:40,180 --> 00:01:46,369
coming in at the Bronze level and his

38
00:01:43,579 --> 00:01:48,048
nice group the NCC group and Rory once

39
00:01:46,369 --> 00:01:50,149
again thank you for for that

40
00:01:48,049 --> 00:01:52,189
presentation because everybody knows

41
00:01:50,149 --> 00:01:53,450
containers are scary stuff and we need

42
00:01:52,189 --> 00:01:59,119
to think about how we lock this thing

43
00:01:53,450 --> 00:02:02,270
down moving on a couple of in in-kind

44
00:01:59,119 --> 00:02:04,939
sponsors one was EC counsel who provided

45
00:02:02,270 --> 00:02:07,399
some great training opportunities

46
00:02:04,939 --> 00:02:11,480
yesterday with their reverse engineering

47
00:02:07,399 --> 00:02:12,100
a malware course as well as secure code

48
00:02:11,480 --> 00:02:14,649
warrior

49
00:02:12,100 --> 00:02:17,560
has been running a CTF like gangbusters

50
00:02:14,650 --> 00:02:20,920
over there in the CTF channel all day

51
00:02:17,560 --> 00:02:23,800
long and they've been running that CTF

52
00:02:20,920 --> 00:02:25,450
for us virtually and we thank them for

53
00:02:23,800 --> 00:02:27,460
for that opportunity and their

54
00:02:25,450 --> 00:02:31,179
sponsorship and their offering of the

55
00:02:27,460 --> 00:02:33,160
CTF we would also like to thank a group

56
00:02:31,180 --> 00:02:36,880
of individuals and some organizations

57
00:02:33,160 --> 00:02:40,870
for contributing to our really nice pile

58
00:02:36,880 --> 00:02:42,609
of stuff to give away in addition to the

59
00:02:40,870 --> 00:02:44,680
sponsors that we've already talked about

60
00:02:42,610 --> 00:02:46,950
here previously who have given us some

61
00:02:44,680 --> 00:02:49,240
items get some other organizations and

62
00:02:46,950 --> 00:02:52,589
individuals who contributed raffle

63
00:02:49,240 --> 00:02:55,210
prizes so I want to thank Mike Kosta and

64
00:02:52,590 --> 00:02:57,730
crosshair Information Technology for

65
00:02:55,210 --> 00:03:01,540
their contributions Joe gray for his

66
00:02:57,730 --> 00:03:04,540
gifts to give away offensive security as

67
00:03:01,540 --> 00:03:07,000
well as the pen tester lab all of them

68
00:03:04,540 --> 00:03:08,200
contributed nice items to give away that

69
00:03:07,000 --> 00:03:11,680
we've been giving away throughout the

70
00:03:08,200 --> 00:03:14,470
day and then will continue to do so I'm

71
00:03:11,680 --> 00:03:16,270
going to make yet another pitch we are

72
00:03:14,470 --> 00:03:18,070
global this year and we want to know

73
00:03:16,270 --> 00:03:22,000
where you're where you're coming to us

74
00:03:18,070 --> 00:03:26,530
from and so we have created a map that

75
00:03:22,000 --> 00:03:30,130
will allow you to drop a pin and tell us

76
00:03:26,530 --> 00:03:33,580
where you are and I am posting that link

77
00:03:30,130 --> 00:03:35,560
in the track discussion channel please

78
00:03:33,580 --> 00:03:38,380
take a minute and drop a pin in that map

79
00:03:35,560 --> 00:03:40,120
if you have not done so already and take

80
00:03:38,380 --> 00:03:43,570
a look at the map and see where people

81
00:03:40,120 --> 00:03:45,990
are coming from today it really truly is

82
00:03:43,570 --> 00:03:48,760
if that information on the map is

83
00:03:45,990 --> 00:03:50,830
accurate we really are a global

84
00:03:48,760 --> 00:03:54,850
conference and it is it has been

85
00:03:50,830 --> 00:03:56,980
something to see happen today also a

86
00:03:54,850 --> 00:03:59,200
reminder that as I mentioned previously

87
00:03:56,980 --> 00:04:02,590
we do have raffles and giveaways

88
00:03:59,200 --> 00:04:04,839
happening all day long there is a

89
00:04:02,590 --> 00:04:08,380
channel in the slack work space

90
00:04:04,840 --> 00:04:14,050
specifically devoted to that and I'm

91
00:04:08,380 --> 00:04:16,480
going to drop that channel in the in the

92
00:04:14,050 --> 00:04:18,220
track channel there so it's there please

93
00:04:16,480 --> 00:04:22,270
if you haven't done so already go hit

94
00:04:18,220 --> 00:04:24,970
that channel and and make sure that your

95
00:04:22,270 --> 00:04:25,930
name is in the mix for one of these

96
00:04:24,970 --> 00:04:27,250
wonderful prize

97
00:04:25,930 --> 00:04:30,759
that we've been giving out throughout

98
00:04:27,250 --> 00:04:32,860
the day additionally we have a speaker's

99
00:04:30,759 --> 00:04:36,520
channel I'm sorry a speaker they

100
00:04:32,860 --> 00:04:38,500
sponsors channel where the sponsors are

101
00:04:36,520 --> 00:04:41,258
out there and we would like for you to

102
00:04:38,500 --> 00:04:44,410
stop by and interact with them and I'm

103
00:04:41,259 --> 00:04:47,770
typing that in now in the track space

104
00:04:44,410 --> 00:04:49,840
there so that you can maybe take a few

105
00:04:47,770 --> 00:04:52,270
minutes and just drop by interact with

106
00:04:49,840 --> 00:04:54,789
them say thank you because literally we

107
00:04:52,270 --> 00:04:57,909
could not have afforded to do what we've

108
00:04:54,789 --> 00:05:00,099
done today virtually without their

109
00:04:57,910 --> 00:05:04,449
support so we want to thank them for

110
00:05:00,099 --> 00:05:07,000
that trying to think I think that that

111
00:05:04,449 --> 00:05:08,139
is about it hiring and giving I mean

112
00:05:07,000 --> 00:05:09,340
we've got a lot of channels out there

113
00:05:08,139 --> 00:05:10,720
I'm not going to bore you with all of

114
00:05:09,340 --> 00:05:12,190
them but we've got a lot of different

115
00:05:10,720 --> 00:05:14,320
channels out there if you're looking for

116
00:05:12,190 --> 00:05:16,870
a job if you're offering looking to fill

117
00:05:14,320 --> 00:05:18,039
a job we've got a channel out there for

118
00:05:16,870 --> 00:05:20,080
that we've got all kinds of chat

119
00:05:18,039 --> 00:05:22,180
channels out there people are posting

120
00:05:20,080 --> 00:05:25,240
pictures of their dogs today I even on

121
00:05:22,180 --> 00:05:30,729
it on it so that's all been happening

122
00:05:25,240 --> 00:05:33,010
and without that without that that's one

123
00:05:30,729 --> 00:05:35,680
of the big things about virtual events

124
00:05:33,010 --> 00:05:38,949
like like what we're doing today is that

125
00:05:35,680 --> 00:05:40,990
no we're not having Lobby con today so

126
00:05:38,949 --> 00:05:42,729
we try and simulate that as best we can

127
00:05:40,990 --> 00:05:47,199
through these different channels in the

128
00:05:42,729 --> 00:05:49,360
slack workspace so if you if you are

129
00:05:47,199 --> 00:05:52,750
over mine please go interact and help

130
00:05:49,360 --> 00:05:56,349
folks with you know whatever it is need

131
00:05:52,750 --> 00:05:57,849
help with you know I'll let you go

132
00:05:56,349 --> 00:06:00,669
figure that out you can you can sort all

133
00:05:57,849 --> 00:06:02,289
that out I am getting some questions

134
00:06:00,669 --> 00:06:05,250
here bear with me just a minute let me

135
00:06:02,289 --> 00:06:05,250
see what's going on here

136
00:06:06,449 --> 00:06:09,820
yeah thank you I will absolutely do my

137
00:06:09,280 --> 00:06:14,320
best

138
00:06:09,820 --> 00:06:19,000
I appreciate the guidance so what I will

139
00:06:14,320 --> 00:06:21,070
say at this point in time is that we

140
00:06:19,000 --> 00:06:24,310
hope that you have enjoyed the talk so

141
00:06:21,070 --> 00:06:27,610
far we hope that they will continue to

142
00:06:24,310 --> 00:06:32,380
keep you to keep you entertained and

143
00:06:27,610 --> 00:06:37,810
informed and with that let me stop

144
00:06:32,380 --> 00:06:39,639
sharing my screen and I believe Elden

145
00:06:37,810 --> 00:06:42,009
have I moved you over to

146
00:06:39,639 --> 00:06:45,610
to the panelists position yes Eldon is

147
00:06:42,009 --> 00:06:48,400
there and so without further ado we're

148
00:06:45,610 --> 00:06:52,389
gonna bring on our next speaker Eldon

149
00:06:48,400 --> 00:06:55,780
steagle we'll be talking about Manuel

150
00:06:52,389 --> 00:06:58,629
Manuel promoting quality of three free

151
00:06:55,780 --> 00:07:00,789
tools through security security Eldon

152
00:06:58,629 --> 00:07:07,180
take away the other way Hey do you hear

153
00:07:00,789 --> 00:07:14,080
me coming through good yes all right

154
00:07:07,180 --> 00:07:18,490
you can see my screen so I guess start

155
00:07:14,080 --> 00:07:22,378
out with a little bit about me I've been

156
00:07:18,490 --> 00:07:26,020
kicking around the Atlanta security

157
00:07:22,379 --> 00:07:31,979
adjacent startup scene for about fifteen

158
00:07:26,020 --> 00:07:36,599
years doing things as diverse as Voight

159
00:07:31,979 --> 00:07:39,360
disaster recovery sometimes you know

160
00:07:36,599 --> 00:07:44,529
threat feeds and things like that just

161
00:07:39,360 --> 00:07:46,089
depends you know I worked in a lot of

162
00:07:44,529 --> 00:07:49,449
different places in a relatively short

163
00:07:46,089 --> 00:07:53,050
time which which I think has given me

164
00:07:49,449 --> 00:07:55,479
some some unusual perspective about some

165
00:07:53,050 --> 00:07:58,779
of some of these topics that we're

166
00:07:55,479 --> 00:08:00,159
discussing so I've been security at

167
00:07:58,779 --> 00:08:03,099
Jason I would say for about 12 years

168
00:08:00,159 --> 00:08:03,819
then 10 years approximately working in

169
00:08:03,099 --> 00:08:06,849
the cloud

170
00:08:03,819 --> 00:08:08,889
I mean in AWS making API calls just

171
00:08:06,849 --> 00:08:11,889
about every working day and some

172
00:08:08,889 --> 00:08:15,789
non-working days for sure and typically

173
00:08:11,889 --> 00:08:18,669
smaller companies so five people to 500

174
00:08:15,789 --> 00:08:21,759
people is kind of you know where I

175
00:08:18,669 --> 00:08:23,620
prefer to be I find that you can really

176
00:08:21,759 --> 00:08:27,310
make an impact at a company that size

177
00:08:23,620 --> 00:08:31,229
and but there are trade-offs in terms of

178
00:08:27,310 --> 00:08:34,289
budget and staffing so why am I here

179
00:08:31,229 --> 00:08:39,698
like I said I've spent a lot of time in

180
00:08:34,289 --> 00:08:41,319
in AWS you know handled working at a

181
00:08:39,698 --> 00:08:44,680
five-person company you kind of end up

182
00:08:41,320 --> 00:08:48,399
handling Incident Response you know just

183
00:08:44,680 --> 00:08:50,079
just with a normal sort of being in a

184
00:08:48,399 --> 00:08:52,980
normal engineering rule you end up

185
00:08:50,079 --> 00:08:55,849
handling Incident Response and you

186
00:08:52,980 --> 00:08:59,850
sometimes that doesn't have a lot of

187
00:08:55,850 --> 00:09:02,990
training or context around it so you

188
00:08:59,850 --> 00:09:06,720
know this this presentation is really

189
00:09:02,990 --> 00:09:09,690
it's kind of aimed at introducing people

190
00:09:06,720 --> 00:09:12,839
who might not be super familiar with the

191
00:09:09,690 --> 00:09:14,250
clouds to the cloud talking about sort

192
00:09:12,839 --> 00:09:17,399
of the personal journey that I've been

193
00:09:14,250 --> 00:09:22,019
engaged in at the current my current

194
00:09:17,399 --> 00:09:24,269
role discussing some specific components

195
00:09:22,019 --> 00:09:28,110
of the cloud that are really hot spots

196
00:09:24,269 --> 00:09:31,490
for problems that organizations face and

197
00:09:28,110 --> 00:09:36,600
then hopefully if if the demo gods are

198
00:09:31,490 --> 00:09:40,649
kind we can actually bring up some some

199
00:09:36,600 --> 00:09:43,110
tooling that we use and also just some

200
00:09:40,649 --> 00:09:46,350
some red flags that we can look for to

201
00:09:43,110 --> 00:09:51,000
be ready you know for for these

202
00:09:46,350 --> 00:09:52,529
incidents so without further ado what is

203
00:09:51,000 --> 00:09:56,430
a public cloud if you've been in the

204
00:09:52,529 --> 00:09:58,339
bathroom for the past year or so almost

205
00:09:56,430 --> 00:10:01,500
any business hosting on-demand

206
00:09:58,339 --> 00:10:03,810
provisioned infrastructure if you can

207
00:10:01,500 --> 00:10:06,360
log in and give them a credit card and

208
00:10:03,810 --> 00:10:08,399
rent a virtual machine from them then

209
00:10:06,360 --> 00:10:13,500
that would be considered a public cloud

210
00:10:08,399 --> 00:10:17,490
so AWS Amazon Google has GCP Microsoft

211
00:10:13,500 --> 00:10:20,430
has asher also packet digitalocean

212
00:10:17,490 --> 00:10:25,889
Oracle cloud Rackspace are kind of the

213
00:10:20,430 --> 00:10:31,229
primary players in in the area one of

214
00:10:25,889 --> 00:10:34,170
the challenges that the cloud ecosystem

215
00:10:31,230 --> 00:10:37,440
has really encountered in the past few

216
00:10:34,170 --> 00:10:39,630
years is this exponential growth in the

217
00:10:37,440 --> 00:10:42,839
number of services that a given cloud

218
00:10:39,630 --> 00:10:45,750
will offer so kind of started out where

219
00:10:42,839 --> 00:10:48,660
it was just compute and object so you

220
00:10:45,750 --> 00:10:51,329
think compute you think AWS ec2

221
00:10:48,660 --> 00:10:55,910
instances an object you would think AWS

222
00:10:51,329 --> 00:11:00,959
s3 Google has cloud storage buckets and

223
00:10:55,910 --> 00:11:05,100
GCP instances databases so Postgres

224
00:11:00,959 --> 00:11:06,479
Redis my sequel and network one of the

225
00:11:05,100 --> 00:11:09,829
biggest challenges with Network

226
00:11:06,480 --> 00:11:13,889
is that that most public cloud providers

227
00:11:09,829 --> 00:11:17,069
have somewhat bespoke api's to handle

228
00:11:13,889 --> 00:11:20,220
the network you know it I've looked for

229
00:11:17,070 --> 00:11:23,579
four years for kind of an IP tables to

230
00:11:20,220 --> 00:11:24,420
AWS security groups translator and it's

231
00:11:23,579 --> 00:11:26,969
just not there

232
00:11:24,420 --> 00:11:30,209
but in addition to these four kind of

233
00:11:26,970 --> 00:11:33,029
basic components as we can see on this

234
00:11:30,209 --> 00:11:35,430
on this on the AWS services offering

235
00:11:33,029 --> 00:11:37,889
there are you know hundreds if not

236
00:11:35,430 --> 00:11:40,109
thousands of additional services that

237
00:11:37,889 --> 00:11:42,529
you could potentially subscribe to

238
00:11:40,110 --> 00:11:43,709
depending on how you want to slice it so

239
00:11:42,529 --> 00:11:46,560
and

240
00:11:43,709 --> 00:11:48,779
if you'll notice there on the right my

241
00:11:46,560 --> 00:11:50,339
favorite part is is the scroll bar you

242
00:11:48,779 --> 00:11:52,470
not have to scroll several pages

243
00:11:50,339 --> 00:11:55,889
potentially so they have a search at the

244
00:11:52,470 --> 00:12:00,060
top this really kind of belies the

245
00:11:55,889 --> 00:12:01,949
complexity of the cloud providers and

246
00:12:00,060 --> 00:12:06,329
the services they offer and it's very

247
00:12:01,949 --> 00:12:09,260
easy for a small organization my current

248
00:12:06,329 --> 00:12:14,010
team is three people is very easy to

249
00:12:09,260 --> 00:12:19,350
sort of lose yourself in this variety of

250
00:12:14,010 --> 00:12:23,040
offerings okay some of the differences

251
00:12:19,350 --> 00:12:25,880
now you know before cloud it wasn't

252
00:12:23,040 --> 00:12:28,649
uncommon for small organizations to have

253
00:12:25,880 --> 00:12:30,899
specific infrastructure and by

254
00:12:28,649 --> 00:12:33,630
infrastructure I mean drop specific

255
00:12:30,899 --> 00:12:36,389
machines for specific tasks you might be

256
00:12:33,630 --> 00:12:39,089
able to point at a server in a cabinet

257
00:12:36,389 --> 00:12:43,079
and say oh this is hosting the website

258
00:12:39,089 --> 00:12:46,709
or this is hosting the database on the

259
00:12:43,079 --> 00:12:49,050
other hand if you had compromised you

260
00:12:46,709 --> 00:12:50,729
could turn something off you could turn

261
00:12:49,050 --> 00:12:53,790
off the switch at the top of the rack to

262
00:12:50,730 --> 00:12:56,399
prevent that was that was a primitive

263
00:12:53,790 --> 00:12:58,709
form of data loss prevention you know

264
00:12:56,399 --> 00:13:01,260
you could unplug a specific machine that

265
00:12:58,709 --> 00:13:03,959
you identified was compromised and

266
00:13:01,260 --> 00:13:07,910
tricky part is if someone was ddossing

267
00:13:03,959 --> 00:13:10,500
you you probably noticed it and you

268
00:13:07,910 --> 00:13:16,230
there were other challenges related to

269
00:13:10,500 --> 00:13:17,970
that so now today we have the cloud in

270
00:13:16,230 --> 00:13:21,750
the cloud

271
00:13:17,970 --> 00:13:24,600
specializes in segmenting different

272
00:13:21,750 --> 00:13:28,220
components of the business so if

273
00:13:24,600 --> 00:13:34,410
previously everyone was on you know a

274
00:13:28,220 --> 00:13:38,069
VMware cluster or a small set of hosts

275
00:13:34,410 --> 00:13:40,800
now you know almost every business unit

276
00:13:38,069 --> 00:13:44,670
seems to have the capability to deploy

277
00:13:40,800 --> 00:13:47,099
additional infrastructure deploy maybe

278
00:13:44,670 --> 00:13:51,170
infrastructure that that you might not

279
00:13:47,100 --> 00:13:53,550
have a security story around yet and

280
00:13:51,170 --> 00:13:57,509
that infrastructure can be hard to

281
00:13:53,550 --> 00:14:00,319
discover you know AWS is an interesting

282
00:13:57,509 --> 00:14:02,670
example for example because they allow

283
00:14:00,319 --> 00:14:03,899
different accounts in an organization

284
00:14:02,670 --> 00:14:06,389
and we'll look at that a little later

285
00:14:03,899 --> 00:14:09,420
but the challenge of different accounts

286
00:14:06,389 --> 00:14:13,050
and organization is it's not necessarily

287
00:14:09,420 --> 00:14:15,930
true that the master account the bill

288
00:14:13,050 --> 00:14:19,699
paying account will be able to reach in

289
00:14:15,930 --> 00:14:23,128
to the child accounts in order to

290
00:14:19,699 --> 00:14:25,769
identify what's going on in them so a

291
00:14:23,129 --> 00:14:31,319
lot of interesting complexity comes with

292
00:14:25,769 --> 00:14:33,480
that so coming from a software

293
00:14:31,319 --> 00:14:35,219
development background and kind of

294
00:14:33,480 --> 00:14:39,920
joining this security engineering team

295
00:14:35,220 --> 00:14:39,920
due to my my cloud experience

296
00:14:42,360 --> 00:14:47,779
I you know we were asked we're a small

297
00:14:45,779 --> 00:14:50,040
team we have a small budget and

298
00:14:47,779 --> 00:14:53,490
initially we were monitoring about

299
00:14:50,040 --> 00:14:56,219
approximately five to six AWS accounts

300
00:14:53,490 --> 00:14:58,440
and and frequently you'll find the AWS

301
00:14:56,220 --> 00:15:01,050
accounts laid out you know such that

302
00:14:58,440 --> 00:15:03,630
there's a development account a staging

303
00:15:01,050 --> 00:15:05,729
account production account sometimes at

304
00:15:03,630 --> 00:15:08,040
different types of organizations you'll

305
00:15:05,730 --> 00:15:10,320
see each individual developer with their

306
00:15:08,040 --> 00:15:15,089
own account it really depends on how the

307
00:15:10,320 --> 00:15:17,630
organization is laid out and so forth at

308
00:15:15,089 --> 00:15:21,380
ABS specifically has developed

309
00:15:17,630 --> 00:15:25,829
organizations GCP has a similar

310
00:15:21,380 --> 00:15:29,130
abstraction which is project folders and

311
00:15:25,829 --> 00:15:32,219
Azure also has the concept of a resource

312
00:15:29,130 --> 00:15:35,939
group so we'll look at the the AWS

313
00:15:32,220 --> 00:15:38,550
version in a little while today we we

314
00:15:35,940 --> 00:15:40,680
monitor over a thousand AWS accounts

315
00:15:38,550 --> 00:15:42,569
with the strategy I'm going to talk

316
00:15:40,680 --> 00:15:47,099
about at the end we're constantly

317
00:15:42,570 --> 00:15:48,480
revising our security posture so one of

318
00:15:47,100 --> 00:15:52,380
the challenges with with all these

319
00:15:48,480 --> 00:15:55,709
release services is the services are

320
00:15:52,380 --> 00:15:58,949
changing as fast as as Amazon or Google

321
00:15:55,709 --> 00:16:01,979
can write new code and and some of those

322
00:15:58,949 --> 00:16:04,260
changes are easy to incorporate into a

323
00:16:01,980 --> 00:16:08,190
security posture but many are very very

324
00:16:04,260 --> 00:16:11,399
challenging the other is we've seen in

325
00:16:08,190 --> 00:16:12,959
our organization and also from customers

326
00:16:11,399 --> 00:16:15,690
we've seen this rapid movement

327
00:16:12,959 --> 00:16:20,489
kubernetes which you know was was

328
00:16:15,690 --> 00:16:23,820
discussed previously and i'm going to

329
00:16:20,490 --> 00:16:25,829
try to give a quick highlight of some of

330
00:16:23,820 --> 00:16:29,250
the tooling that you can use from the

331
00:16:25,829 --> 00:16:37,699
other side to to detect and potentially

332
00:16:29,250 --> 00:16:40,529
remediate some of the findings there so

333
00:16:37,699 --> 00:16:43,709
the first choice you need to make is

334
00:16:40,529 --> 00:16:46,680
choosing how to monitor monitor needs to

335
00:16:43,709 --> 00:16:51,540
be familiar to the industry the our

336
00:16:46,680 --> 00:16:53,550
product is a product that's sold to many

337
00:16:51,540 --> 00:16:56,250
enterprises and so we needed something

338
00:16:53,550 --> 00:16:58,609
that would fit in

339
00:16:56,250 --> 00:17:04,020
with those enterprises that they could

340
00:16:58,610 --> 00:17:06,060
sort of pick up and you know choose to

341
00:17:04,020 --> 00:17:11,819
inform themselves or not inform

342
00:17:06,060 --> 00:17:13,829
themselves on so you kind of thought

343
00:17:11,819 --> 00:17:16,159
about our different strategies bespoke

344
00:17:13,829 --> 00:17:18,930
security strategies we consider doing

345
00:17:16,160 --> 00:17:21,600
the problem is they take time to

346
00:17:18,930 --> 00:17:24,360
document and when you're working closely

347
00:17:21,599 --> 00:17:28,169
with customer security teams that

348
00:17:24,359 --> 00:17:31,020
documentation you're gonna land on your

349
00:17:28,170 --> 00:17:32,580
feet much much more readily if you can

350
00:17:31,020 --> 00:17:35,730
point to something that's on the public

351
00:17:32,580 --> 00:17:37,649
internet and something that their

352
00:17:35,730 --> 00:17:40,470
security team may already have some

353
00:17:37,650 --> 00:17:44,250
familiarity with vendors are kind of an

354
00:17:40,470 --> 00:17:45,810
easy choice but I'll talk a little bit

355
00:17:44,250 --> 00:17:50,460
about some of the challenges that we

356
00:17:45,810 --> 00:17:55,320
reached with our vendors you know that

357
00:17:50,460 --> 00:17:57,590
they always seem to sell a full package

358
00:17:55,320 --> 00:18:00,570
and then you install the package and and

359
00:17:57,590 --> 00:18:03,120
very rarely does it work for you without

360
00:18:00,570 --> 00:18:05,070
additional investment of course as a

361
00:18:03,120 --> 00:18:07,620
small security team the reason you're

362
00:18:05,070 --> 00:18:11,149
paying the money is to avoid having to

363
00:18:07,620 --> 00:18:13,620
invest too much so it's it's really a

364
00:18:11,150 --> 00:18:18,330
rock and a hard place kind of scenario

365
00:18:13,620 --> 00:18:20,159
in some cases also we really wanted

366
00:18:18,330 --> 00:18:23,419
uniform monitoring adopt across

367
00:18:20,160 --> 00:18:26,130
different public clouds so we have been

368
00:18:23,420 --> 00:18:29,340
integrating with other with customer

369
00:18:26,130 --> 00:18:32,970
clouds for three to four years now

370
00:18:29,340 --> 00:18:37,199
pretty closely and in that time we've

371
00:18:32,970 --> 00:18:40,770
seen you know all of the top public

372
00:18:37,200 --> 00:18:43,950
clouds that customers were very

373
00:18:40,770 --> 00:18:48,090
insistent upon running in and we've seen

374
00:18:43,950 --> 00:18:50,880
a variety of smaller clouds as well and

375
00:18:48,090 --> 00:18:57,179
so deciding how to manage that both from

376
00:18:50,880 --> 00:18:59,160
a perspective of a security team and the

377
00:18:57,180 --> 00:19:00,810
support ability of an individual cloud

378
00:18:59,160 --> 00:19:03,270
because all of these clouds operate

379
00:19:00,810 --> 00:19:06,300
differently so that is one of the big

380
00:19:03,270 --> 00:19:08,400
drivers towards kubernetes because all

381
00:19:06,300 --> 00:19:10,029
of these providers have kubernetes

382
00:19:08,400 --> 00:19:11,590
offerings

383
00:19:10,029 --> 00:19:13,419
I'm gonna talk a little bit about the

384
00:19:11,590 --> 00:19:15,728
vendor candidates and some of the

385
00:19:13,419 --> 00:19:18,940
challenges that we experience with them

386
00:19:15,729 --> 00:19:24,669
and then I'm gonna sort of jump right

387
00:19:18,940 --> 00:19:28,450
into what we settled on so vendor names

388
00:19:24,669 --> 00:19:30,940
redacted clearly but um you know and and

389
00:19:28,450 --> 00:19:34,269
these are sort of amorphous vendors in

390
00:19:30,940 --> 00:19:36,849
that they we clearly interviewed more

391
00:19:34,269 --> 00:19:39,940
than three vendors for some of these

392
00:19:36,849 --> 00:19:44,849
needs and these were kind of pretty

393
00:19:39,940 --> 00:19:48,700
consistent themes that we saw across our

394
00:19:44,849 --> 00:19:51,908
investigation so some vendors can be

395
00:19:48,700 --> 00:19:54,129
acquired by larger companies and the

396
00:19:51,909 --> 00:19:55,719
product capabilities can stagnate they

397
00:19:54,129 --> 00:19:58,658
kind of give the directive from the top

398
00:19:55,719 --> 00:20:01,899
to you've built it we bought it now go

399
00:19:58,659 --> 00:20:04,719
out and sell it so in that we

400
00:20:01,899 --> 00:20:08,439
experienced frequent high-touch meetings

401
00:20:04,719 --> 00:20:10,749
you know people specifically sales and

402
00:20:08,440 --> 00:20:13,749
support folks that wanted to get a lot

403
00:20:10,749 --> 00:20:17,519
of feedback but then unfortunately that

404
00:20:13,749 --> 00:20:22,239
feedback very rarely flowed quickly into

405
00:20:17,519 --> 00:20:24,940
useful capabilities in the tooling we

406
00:20:22,239 --> 00:20:27,519
had other vendors that were slow to spot

407
00:20:24,940 --> 00:20:31,059
respond to support requests and that can

408
00:20:27,519 --> 00:20:33,190
be a real issue if if you have a support

409
00:20:31,059 --> 00:20:36,070
request that may be related to a finding

410
00:20:33,190 --> 00:20:38,830
where you're unsure what the necessary

411
00:20:36,070 --> 00:20:40,330
remediation is or if you don't know how

412
00:20:38,830 --> 00:20:42,369
to turn it off if you don't know how to

413
00:20:40,330 --> 00:20:44,408
mute it one of the things that's very

414
00:20:42,369 --> 00:20:47,228
common at smaller organizations is

415
00:20:44,409 --> 00:20:50,080
something called alert fatigue so if you

416
00:20:47,229 --> 00:20:53,619
work on a small team and you have any

417
00:20:50,080 --> 00:20:56,589
kind of paging system make sure to think

418
00:20:53,619 --> 00:20:59,019
about that so with with some vendors

419
00:20:56,589 --> 00:21:01,989
they would generate alerts we couldn't

420
00:20:59,019 --> 00:21:05,499
effectively shut them off and that just

421
00:21:01,989 --> 00:21:08,049
proved to be unwieldy for us often

422
00:21:05,499 --> 00:21:10,899
vendors have very complicated user

423
00:21:08,049 --> 00:21:15,039
interfaces so much so that they expect

424
00:21:10,899 --> 00:21:18,158
you to attend many trainings in order to

425
00:21:15,039 --> 00:21:21,519
kind of leverage their tooling and then

426
00:21:18,159 --> 00:21:24,580
some of it is also AI based which meant

427
00:21:21,519 --> 00:21:26,710
that it wasn't really explainable

428
00:21:24,580 --> 00:21:29,889
you know we would ask in a support case

429
00:21:26,710 --> 00:21:32,230
why did this happen and they would say I

430
00:21:29,890 --> 00:21:35,640
don't know we've had our a I look at all

431
00:21:32,230 --> 00:21:40,779
of your data and we don't know

432
00:21:35,640 --> 00:21:46,840
so after a lot of time invested in in

433
00:21:40,779 --> 00:21:48,789
looking at vendors we kind of went with

434
00:21:46,840 --> 00:21:52,149
none of them and and I think that's been

435
00:21:48,789 --> 00:21:56,169
the best for us but it was useful in

436
00:21:52,149 --> 00:22:00,129
that we got an overview of what the

437
00:21:56,169 --> 00:22:02,260
industry is looking like so through

438
00:22:00,130 --> 00:22:04,090
talking with our vendors and seeing the

439
00:22:02,260 --> 00:22:08,889
features that they did in ER introduced

440
00:22:04,090 --> 00:22:11,168
we often identified strategies that

441
00:22:08,889 --> 00:22:13,178
other companies were interested in

442
00:22:11,169 --> 00:22:15,039
because we knew that those vendors were

443
00:22:13,179 --> 00:22:17,169
talking to their customers and those

444
00:22:15,039 --> 00:22:19,889
other companies were making a request to

445
00:22:17,169 --> 00:22:22,630
the vendor so that really helped us to

446
00:22:19,889 --> 00:22:25,539
plan our path forward insofar as

447
00:22:22,630 --> 00:22:30,130
implementing our internal solutions to

448
00:22:25,539 --> 00:22:32,110
these monitoring strategies so one of

449
00:22:30,130 --> 00:22:34,539
the big ones and I think it was just

450
00:22:32,110 --> 00:22:36,219
mentioned and the kubernetes talk and

451
00:22:34,539 --> 00:22:39,870
may have also been mentioned earlier is

452
00:22:36,220 --> 00:22:44,260
the CIS benchmarks CIS has been

453
00:22:39,870 --> 00:22:46,260
releasing benchmarks for years I believe

454
00:22:44,260 --> 00:22:49,510
they're they're a nonprofit organization

455
00:22:46,260 --> 00:22:53,590
don't quote me on that but but all of

456
00:22:49,510 --> 00:22:55,360
their benchmarks are available or many

457
00:22:53,590 --> 00:22:57,730
many are available for free on their

458
00:22:55,360 --> 00:23:01,510
website so you go you register you

459
00:22:57,730 --> 00:23:03,669
download and and you can do this and

460
00:23:01,510 --> 00:23:06,360
it's also it gives a lot of third-party

461
00:23:03,669 --> 00:23:09,730
credence so you can say to a customer

462
00:23:06,360 --> 00:23:11,860
security team you know we're running

463
00:23:09,730 --> 00:23:13,149
these CIS benchmarks and they can go

464
00:23:11,860 --> 00:23:15,820
read the benchmarks for themselves

465
00:23:13,149 --> 00:23:18,580
without you having to generate any

466
00:23:15,820 --> 00:23:22,149
additional documentation so CIS

467
00:23:18,580 --> 00:23:26,408
in recent years after Windows and Linux

468
00:23:22,149 --> 00:23:28,629
and Printers all of which they have

469
00:23:26,409 --> 00:23:34,000
benchmarks for they now have benchmarks

470
00:23:28,630 --> 00:23:35,710
for Amazon GCB adjure and very recently

471
00:23:34,000 --> 00:23:37,240
I think within the last year they were

472
00:23:35,710 --> 00:23:41,620
released a

473
00:23:37,240 --> 00:23:43,270
Nettie's benchmarks so the we found

474
00:23:41,620 --> 00:23:47,409
these benchmarks to give really good

475
00:23:43,270 --> 00:23:52,889
guidance on how to ensure that your

476
00:23:47,410 --> 00:23:56,950
system is following best practices and

477
00:23:52,890 --> 00:23:59,650
isn't going to be as likely to fall

478
00:23:56,950 --> 00:24:04,840
victim to to some of the attacks that

479
00:23:59,650 --> 00:24:08,200
are common in a cloud scenario so after

480
00:24:04,840 --> 00:24:10,659
a lot of evaluation we we've sort of

481
00:24:08,200 --> 00:24:13,840
settled on open source you know it's

482
00:24:10,660 --> 00:24:16,480
it's it's scratched software in a lot of

483
00:24:13,840 --> 00:24:19,060
ways so it's implemented by people that

484
00:24:16,480 --> 00:24:24,180
need to generate these findings and need

485
00:24:19,060 --> 00:24:27,040
to remediate them it's released by

486
00:24:24,180 --> 00:24:29,320
practitioners who have sort of public

487
00:24:27,040 --> 00:24:32,550
personas and are real people that you

488
00:24:29,320 --> 00:24:36,610
can talk to at conferences like these

489
00:24:32,550 --> 00:24:39,760
they're really important components are

490
00:24:36,610 --> 00:24:43,300
that the these assessment tools are

491
00:24:39,760 --> 00:24:47,950
debuggable by users so a good example is

492
00:24:43,300 --> 00:24:50,260
Prowler so I think Prowler may have been

493
00:24:47,950 --> 00:24:52,000
mentioned earlier but it's a tool that

494
00:24:50,260 --> 00:24:56,440
you can use to assess the security

495
00:24:52,000 --> 00:24:58,540
posture of an AWS account and you can

496
00:24:56,440 --> 00:25:03,160
just kind of locally run it on your

497
00:24:58,540 --> 00:25:05,530
machine and it does a great job and it's

498
00:25:03,160 --> 00:25:09,120
geared towards specifically the CIS

499
00:25:05,530 --> 00:25:11,889
benchmarks for AWS we found using

500
00:25:09,120 --> 00:25:15,219
Prowler that it was actually targeting

501
00:25:11,890 --> 00:25:19,480
more recent benchmarks so CIS benchmarks

502
00:25:15,220 --> 00:25:21,540
are updated with some regularity and we

503
00:25:19,480 --> 00:25:25,870
had several vendors that were targeting

504
00:25:21,540 --> 00:25:29,129
AWS 1.1 benchmarks which were about four

505
00:25:25,870 --> 00:25:31,479
years old at the rate that cloud

506
00:25:29,130 --> 00:25:32,560
technologies are advancing if you're

507
00:25:31,480 --> 00:25:34,570
four years out of date

508
00:25:32,560 --> 00:25:37,090
that's like being that's like running

509
00:25:34,570 --> 00:25:39,520
you know a Linux version that's two

510
00:25:37,090 --> 00:25:42,970
major releases behind you know it's it's

511
00:25:39,520 --> 00:25:45,400
it's like running you know 3.2 or

512
00:25:42,970 --> 00:25:47,790
something of the Linux kernel it's it's

513
00:25:45,400 --> 00:25:50,560
a can be a big problem

514
00:25:47,790 --> 00:25:50,770
so these open-source tools you know of

515
00:25:50,560 --> 00:25:53,200
course

516
00:25:50,770 --> 00:25:55,060
we could identify bugs and we could even

517
00:25:53,200 --> 00:25:58,030
contribute enhancements if we wanted to

518
00:25:55,060 --> 00:26:01,030
and I actually identified a bug and in

519
00:25:58,030 --> 00:26:02,950
prowler and then put it on my to-do list

520
00:26:01,030 --> 00:26:06,670
and two weeks later I went to see that

521
00:26:02,950 --> 00:26:08,920
it was already fixed by someone you know

522
00:26:06,670 --> 00:26:12,130
completely unrelated and you know that's

523
00:26:08,920 --> 00:26:14,890
a huge win where you know we would

524
00:26:12,130 --> 00:26:17,560
sometimes see weeks or months of

525
00:26:14,890 --> 00:26:19,720
turnaround time to even identify an

526
00:26:17,560 --> 00:26:23,950
issue or confirm that it actually was an

527
00:26:19,720 --> 00:26:25,900
issue for some of our vendors so with

528
00:26:23,950 --> 00:26:28,180
our strategy we sort of started

529
00:26:25,900 --> 00:26:32,710
gathering the different bits that we

530
00:26:28,180 --> 00:26:34,350
would use so these are just links to a

531
00:26:32,710 --> 00:26:39,450
couple of different Suites of tools

532
00:26:34,350 --> 00:26:44,709
Prowler is a common one for assessing

533
00:26:39,450 --> 00:26:45,970
AWS so the Python and it's typically run

534
00:26:44,710 --> 00:26:48,640
from the command line but I'll talk a

535
00:26:45,970 --> 00:26:53,050
little bit about how we modified that

536
00:26:48,640 --> 00:26:55,630
approach for our purposes cloud

537
00:26:53,050 --> 00:26:59,590
custodian is one that's primarily driven

538
00:26:55,630 --> 00:27:01,810
by Capital One and it's a very

539
00:26:59,590 --> 00:27:05,409
comprehensive toolset it's also written

540
00:27:01,810 --> 00:27:11,500
in Python and you know all of these are

541
00:27:05,410 --> 00:27:15,130
just links to github pages so you can

542
00:27:11,500 --> 00:27:17,200
just go in and see the the code and

543
00:27:15,130 --> 00:27:19,690
commit to it you can see how recently it

544
00:27:17,200 --> 00:27:23,500
was updated so you know all of these

545
00:27:19,690 --> 00:27:26,170
tools are very actively maintained which

546
00:27:23,500 --> 00:27:29,080
really gave us a lot of warm fuzzies

547
00:27:26,170 --> 00:27:30,700
when we were trying to select what our

548
00:27:29,080 --> 00:27:34,350
tooling was going to look like as we

549
00:27:30,700 --> 00:27:34,350
approach this task

550
00:27:34,680 --> 00:27:40,540
like I said Prowler there's a lot of

551
00:27:37,930 --> 00:27:44,290
shell there's some Python Cloud

552
00:27:40,540 --> 00:27:48,370
custodian is primarily Python because

553
00:27:44,290 --> 00:27:51,250
our organization is adopting kubernetes

554
00:27:48,370 --> 00:27:54,610
pretty aggressively we decided to try

555
00:27:51,250 --> 00:27:58,810
out coop bench as well and this was one

556
00:27:54,610 --> 00:28:02,709
of the places where you know we really

557
00:27:58,810 --> 00:28:04,419
also saw that benefit of transparency

558
00:28:02,710 --> 00:28:07,150
and and commune

559
00:28:04,420 --> 00:28:10,210
involvement we had several vendors that

560
00:28:07,150 --> 00:28:12,550
were running the CIS kubernetes

561
00:28:10,210 --> 00:28:14,680
benchmarks an interesting change

562
00:28:12,550 --> 00:28:17,620
happened when you were deploying the

563
00:28:14,680 --> 00:28:19,440
couplet which is I think it was just

564
00:28:17,620 --> 00:28:22,300
previously discussed but a lot of

565
00:28:19,440 --> 00:28:25,660
configuration elements that switched

566
00:28:22,300 --> 00:28:28,540
from command line parameters to a config

567
00:28:25,660 --> 00:28:31,560
file it was very challenging because our

568
00:28:28,540 --> 00:28:35,230
vendor would Alert on all of these

569
00:28:31,560 --> 00:28:36,490
missing command line parameters because

570
00:28:35,230 --> 00:28:41,260
of the way that they were doing the

571
00:28:36,490 --> 00:28:42,670
evaluation and similar alarms were going

572
00:28:41,260 --> 00:28:45,660
off everywhere saying that our

573
00:28:42,670 --> 00:28:48,430
kubernetes was insecure when in fact

574
00:28:45,660 --> 00:28:50,200
rather than looking at the command line

575
00:28:48,430 --> 00:28:54,100
parameters you just needed to look at

576
00:28:50,200 --> 00:28:57,820
the config file so you know that was a

577
00:28:54,100 --> 00:29:00,699
place where really a vendor solution

578
00:28:57,820 --> 00:29:02,530
became unworkable for us because there

579
00:29:00,700 --> 00:29:04,450
were so many alerts that that we knew

580
00:29:02,530 --> 00:29:07,389
were false positives and we didn't have

581
00:29:04,450 --> 00:29:10,990
a good way to filter those out at that

582
00:29:07,390 --> 00:29:16,240
time without doing substantial work on

583
00:29:10,990 --> 00:29:18,730
our side ncc group so sort of apropos of

584
00:29:16,240 --> 00:29:22,810
the previous speaker I believe

585
00:29:18,730 --> 00:29:25,870
released scout suite it's a multi cloud

586
00:29:22,810 --> 00:29:28,810
auditing tool and I'm very excited to

587
00:29:25,870 --> 00:29:33,870
see the development of it it's it's

588
00:29:28,810 --> 00:29:39,820
relatively it's evolving a little

589
00:29:33,870 --> 00:29:44,229
differently from you can see that it's

590
00:29:39,820 --> 00:29:46,600
it's been changing periodically as far

591
00:29:44,230 --> 00:29:51,850
as which which products and which repos

592
00:29:46,600 --> 00:29:54,459
are actually active but I'm very excited

593
00:29:51,850 --> 00:29:57,070
about it because it will hopefully have

594
00:29:54,460 --> 00:29:58,690
a much broader purview as far as the

595
00:29:57,070 --> 00:30:01,929
number of clouds you know Prowler is

596
00:29:58,690 --> 00:30:05,200
kind of primarily AWS based and we

597
00:30:01,930 --> 00:30:07,779
definitely are interested in a solution

598
00:30:05,200 --> 00:30:10,690
that

599
00:30:07,779 --> 00:30:14,849
is a single platform that covers all

600
00:30:10,690 --> 00:30:14,849
three of these service providers

601
00:30:17,500 --> 00:30:24,080
so once we had kind of gathered this set

602
00:30:21,830 --> 00:30:28,129
of tooling we had to decide how to run

603
00:30:24,080 --> 00:30:30,199
it so for the size and number of our AWS

604
00:30:28,130 --> 00:30:33,590
accounts we thought about lambda the

605
00:30:30,200 --> 00:30:36,830
problem with lambda lambda is an AWS

606
00:30:33,590 --> 00:30:41,149
service which lets you run effectively

607
00:30:36,830 --> 00:30:44,659
little short short-lived snippets of

608
00:30:41,150 --> 00:30:47,090
code and so what we discovered was that

609
00:30:44,660 --> 00:30:49,820
many of the processes we were running

610
00:30:47,090 --> 00:30:54,139
here Prowler vowed custodian Ku bench

611
00:30:49,820 --> 00:31:00,080
they could all take much longer on our

612
00:30:54,140 --> 00:31:04,039
suite of accounts then lambda really was

613
00:31:00,080 --> 00:31:05,539
economical to run could run it locally

614
00:31:04,039 --> 00:31:08,539
and at the beginning we did run it

615
00:31:05,539 --> 00:31:09,919
locally to kind of get our baselines for

616
00:31:08,539 --> 00:31:14,450
what what what our immediate

617
00:31:09,919 --> 00:31:17,120
remediations were for these tools we

618
00:31:14,450 --> 00:31:20,830
could set it up on ec2 instances but as

619
00:31:17,120 --> 00:31:25,939
I said from our as our number of

620
00:31:20,830 --> 00:31:27,620
accounts grew scaling up that set of ec2

621
00:31:25,940 --> 00:31:31,760
instances and distributing the work

622
00:31:27,620 --> 00:31:35,360
between them was really - too

623
00:31:31,760 --> 00:31:40,220
challenging so finally we decided to get

624
00:31:35,360 --> 00:31:44,408
our feet wet in kubernetes KS KS is a

625
00:31:40,220 --> 00:31:47,720
common abbreviation for kubernetes so

626
00:31:44,409 --> 00:31:49,780
several other organizations primarily

627
00:31:47,720 --> 00:31:53,150
development organizations within our

628
00:31:49,780 --> 00:31:56,149
company had started trying different

629
00:31:53,150 --> 00:31:58,520
aspects of kubernetes and there were a

630
00:31:56,150 --> 00:31:58,940
lot of things that we really liked about

631
00:31:58,520 --> 00:32:03,110
it

632
00:31:58,940 --> 00:32:06,289
kubernetes is very specifically eks on

633
00:32:03,110 --> 00:32:09,918
amazon it's very straightforward to get

634
00:32:06,289 --> 00:32:13,400
logs out of it so for Prowler for

635
00:32:09,919 --> 00:32:17,179
example it's just a command line

636
00:32:13,400 --> 00:32:20,809
parameter to get JSON output from

637
00:32:17,179 --> 00:32:25,250
Prowler so we decided to leverage that

638
00:32:20,809 --> 00:32:27,350
along with cloud watch logs and cloud

639
00:32:25,250 --> 00:32:30,370
watch logs really almost built-in

640
00:32:27,350 --> 00:32:33,699
strategy to connect to elastics

641
00:32:30,370 --> 00:32:37,729
we decided to leverage that in order to

642
00:32:33,700 --> 00:32:40,030
really get a dashboard of what what our

643
00:32:37,730 --> 00:32:43,250
data was looking like it again in time

644
00:32:40,030 --> 00:32:46,280
elasticsearch can also serve as a synch

645
00:32:43,250 --> 00:32:48,620
for additional data so you know it was a

646
00:32:46,280 --> 00:32:51,350
very I think elasticsearch is a very

647
00:32:48,620 --> 00:32:56,120
common component of sort of these

648
00:32:51,350 --> 00:32:59,000
bespoke and open-source seems so you

649
00:32:56,120 --> 00:33:01,580
know I believe there's oak hunter and

650
00:32:59,000 --> 00:33:07,610
and Mozilla released an elastic search

651
00:33:01,580 --> 00:33:09,470
based security tool as well we looked at

652
00:33:07,610 --> 00:33:13,040
a number of those tools and decided that

653
00:33:09,470 --> 00:33:16,490
our team was too small to manage

654
00:33:13,040 --> 00:33:18,970
something on the scale of elk hunter for

655
00:33:16,490 --> 00:33:18,970
example

656
00:33:19,350 --> 00:33:24,510
so we we decided to just go with a

657
00:33:22,470 --> 00:33:29,190
straightforward elasticsearch service

658
00:33:24,510 --> 00:33:32,789
and then leverage lamda for alerts and

659
00:33:29,190 --> 00:33:35,520
remediation so I can give a quick

660
00:33:32,789 --> 00:33:39,110
example so so our final kubernetes

661
00:33:35,520 --> 00:33:41,610
strategy was to set up a cron job

662
00:33:39,110 --> 00:33:45,809
kubernetes has the concepts of cron jobs

663
00:33:41,610 --> 00:33:48,510
cron job it sounds like it's you know a

664
00:33:45,809 --> 00:33:51,059
system and strategy from from the 90s

665
00:33:48,510 --> 00:33:52,289
and in many ways it's if it's not broke

666
00:33:51,059 --> 00:33:55,139
don't fix it

667
00:33:52,289 --> 00:33:58,200
so kubernetes cron jobs are configured

668
00:33:55,140 --> 00:34:01,350
for each AWS account in our organization

669
00:33:58,200 --> 00:34:05,730
and what that means is that the for a

670
00:34:01,350 --> 00:34:08,580
given AWS account Prowler cloud

671
00:34:05,730 --> 00:34:11,310
custodian goo bench can all be run on

672
00:34:08,580 --> 00:34:13,889
the resources in that account to give us

673
00:34:11,310 --> 00:34:18,659
a baseline for an account on a given day

674
00:34:13,889 --> 00:34:21,690
and this really lets us get a historical

675
00:34:18,659 --> 00:34:26,100
perspective which we can provide in the

676
00:34:21,690 --> 00:34:28,889
case of audits so you might provide this

677
00:34:26,100 --> 00:34:33,569
in the context of a sock audit for

678
00:34:28,889 --> 00:34:37,530
certain compliance certain controls you

679
00:34:33,570 --> 00:34:39,929
might have in place and then one of the

680
00:34:37,530 --> 00:34:44,310
other nice elements of using CloudWatch

681
00:34:39,929 --> 00:34:48,389
logs is you can subscribe lambdas to the

682
00:34:44,310 --> 00:34:50,520
logs and then the lambdas can also be

683
00:34:48,389 --> 00:34:53,129
the code that in the in case of

684
00:34:50,520 --> 00:34:55,889
automatic remediation can remediate

685
00:34:53,129 --> 00:35:00,569
directly so you can imagine someone

686
00:34:55,889 --> 00:35:04,070
creates an s3 bucket now if you create

687
00:35:00,570 --> 00:35:07,740
an s3 bucket it's very easy to set it to

688
00:35:04,070 --> 00:35:11,730
the public or to be configured and

689
00:35:07,740 --> 00:35:13,319
inappropriately one of the controls that

690
00:35:11,730 --> 00:35:16,590
we try to have in place for our

691
00:35:13,320 --> 00:35:17,940
customers is encryption so s3 bucket

692
00:35:16,590 --> 00:35:20,130
encryption is something that we enable

693
00:35:17,940 --> 00:35:22,560
by default and when someone creates an

694
00:35:20,130 --> 00:35:24,270
s3 bucket that's not encrypted we can

695
00:35:22,560 --> 00:35:28,529
remediate that very straightforwardly

696
00:35:24,270 --> 00:35:32,190
Prowler scans the account generates the

697
00:35:28,530 --> 00:35:33,090
JSON log files we are listening for the

698
00:35:32,190 --> 00:35:35,790
JSON log file

699
00:35:33,090 --> 00:35:40,440
in cloud watch and lambda can identify

700
00:35:35,790 --> 00:35:43,710
that create account bucket can go check

701
00:35:40,440 --> 00:35:45,630
to see if create account event can go

702
00:35:43,710 --> 00:35:48,950
check and see if that bucket is

703
00:35:45,630 --> 00:35:51,270
encrypted and encrypted if necessary

704
00:35:48,950 --> 00:35:56,129
it's kind of a high level overview of

705
00:35:51,270 --> 00:35:58,020
how this all works for us so before I

706
00:35:56,130 --> 00:36:00,690
get down into the demos I'd like to

707
00:35:58,020 --> 00:36:03,690
serve as a kind of I'd like to tell a

708
00:36:00,690 --> 00:36:06,120
cautionary tale about cloud spend cloud

709
00:36:03,690 --> 00:36:11,010
spend can get very expensive very

710
00:36:06,120 --> 00:36:13,890
quickly and a good example is something

711
00:36:11,010 --> 00:36:17,310
as simple as s3 bucket replication if

712
00:36:13,890 --> 00:36:19,950
you are replicating an s3 bucket from

713
00:36:17,310 --> 00:36:24,600
one region to another region which is a

714
00:36:19,950 --> 00:36:27,330
best practice by the way then that

715
00:36:24,600 --> 00:36:30,060
transfer can get expensive those API

716
00:36:27,330 --> 00:36:32,520
calls can get expensive every time a new

717
00:36:30,060 --> 00:36:35,520
object ends up in a bucket in US East

718
00:36:32,520 --> 00:36:38,040
one and is replicated to another bucket

719
00:36:35,520 --> 00:36:40,560
in u.s. West two there's a cost

720
00:36:38,040 --> 00:36:45,600
associated with that with the API calls

721
00:36:40,560 --> 00:36:49,230
with the with the data transfer and so

722
00:36:45,600 --> 00:36:52,140
you know if you haven't heard of Cori

723
00:36:49,230 --> 00:36:53,970
Quinn cloud economist I would really

724
00:36:52,140 --> 00:36:57,089
recommend checking out and if you're

725
00:36:53,970 --> 00:36:59,430
involved in cloud monitoring at all I

726
00:36:57,090 --> 00:37:04,170
would really recommend checking out his

727
00:36:59,430 --> 00:37:06,839
his blog he also has a podcast and it

728
00:37:04,170 --> 00:37:11,130
really can can give some great tips on

729
00:37:06,840 --> 00:37:14,760
how to mitigate some of that hidden cost

730
00:37:11,130 --> 00:37:16,860
so the easiest thing to do is really to

731
00:37:14,760 --> 00:37:19,050
set up cost monitoring we can do it in

732
00:37:16,860 --> 00:37:20,940
about ten minutes and and it's very

733
00:37:19,050 --> 00:37:23,910
straightforward I'll actually demo that

734
00:37:20,940 --> 00:37:27,150
here in a moment if the demo gods are

735
00:37:23,910 --> 00:37:29,190
kind and the best part is we can use

736
00:37:27,150 --> 00:37:33,360
cost monitoring to find potential

737
00:37:29,190 --> 00:37:37,050
security issues so a good example sort

738
00:37:33,360 --> 00:37:39,510
of springboarding off of the previous

739
00:37:37,050 --> 00:37:45,140
presentation if you saw it it was about

740
00:37:39,510 --> 00:37:45,140
kubernetes and using distributed

741
00:37:46,270 --> 00:37:52,750
remote code execution as a service to

742
00:37:48,250 --> 00:37:54,760
for example my Mineiro so as a company

743
00:37:52,750 --> 00:37:57,790
you can get into a very challenging

744
00:37:54,760 --> 00:38:01,150
situation where you have an auto scaling

745
00:37:57,790 --> 00:38:06,100
group and when the kubernetes cluster is

746
00:38:01,150 --> 00:38:09,100
bit busy it adds more workers to address

747
00:38:06,100 --> 00:38:11,470
that additional load so if you have auto

748
00:38:09,100 --> 00:38:16,779
scaling set up in a very permissive way

749
00:38:11,470 --> 00:38:19,060
and someone decides to deploy some kind

750
00:38:16,780 --> 00:38:22,180
of crypto minor on that you could end up

751
00:38:19,060 --> 00:38:24,250
with a cloud bill that's enormous

752
00:38:22,180 --> 00:38:27,250
because your auto scaling group is

753
00:38:24,250 --> 00:38:29,940
scaled all the way up actually adding

754
00:38:27,250 --> 00:38:31,660
more instances to mine more crypto for

755
00:38:29,940 --> 00:38:37,420
an attacker

756
00:38:31,660 --> 00:38:40,990
so cost monitoring which can also sort

757
00:38:37,420 --> 00:38:43,360
of give you an insight into data egress

758
00:38:40,990 --> 00:38:46,959
because you paid for every cent that you

759
00:38:43,360 --> 00:38:52,170
send out of AWS data egress can really

760
00:38:46,960 --> 00:38:55,119
get give you a very deep insight into

761
00:38:52,170 --> 00:39:00,730
what kind of activities are happening in

762
00:38:55,119 --> 00:39:02,500
your system all right so I'm going to

763
00:39:00,730 --> 00:39:06,820
sacrifice a coffee bean and a mechanical

764
00:39:02,500 --> 00:39:09,700
keyboard here and try to do some just

765
00:39:06,820 --> 00:39:14,760
quick walkthrough and a demonstration of

766
00:39:09,700 --> 00:39:14,759
some of the tooling that we're using so

767
00:39:16,980 --> 00:39:21,990
switch windows a timeshare

768
00:39:36,770 --> 00:39:38,830
you

769
00:39:44,369 --> 00:39:46,430
you

770
00:39:49,170 --> 00:39:56,200
so this is actually an AWS account this

771
00:39:53,320 --> 00:40:04,710
is not my company's eight of us okay oh

772
00:39:56,200 --> 00:40:06,490
this is this is my AWS account is that

773
00:40:04,710 --> 00:40:11,050
is that coming through

774
00:40:06,490 --> 00:40:14,890
yeah and so you can see how how easy it

775
00:40:11,050 --> 00:40:18,450
is to actually run into foul of some of

776
00:40:14,890 --> 00:40:18,450
these recommendations so

777
00:40:25,200 --> 00:40:29,169
you

778
00:40:27,109 --> 00:40:29,170
you

779
00:40:32,650 --> 00:40:34,710
you

780
00:40:38,440 --> 00:40:48,190
did we lose it all those Elden know I'm

781
00:40:42,500 --> 00:40:53,260
still here I'm just sorry I'm doing some

782
00:40:48,190 --> 00:40:53,260
window reworking

783
00:41:04,079 --> 00:41:13,850
you

784
00:41:05,510 --> 00:41:16,910
here we go so this is an example of what

785
00:41:13,850 --> 00:41:21,500
you get kind of out of the box with that

786
00:41:16,910 --> 00:41:24,049
workflow that I discussed earlier so we

787
00:41:21,500 --> 00:41:30,290
have this is cabana which is the default

788
00:41:24,050 --> 00:41:33,680
front end of elasticsearch and these are

789
00:41:30,290 --> 00:41:37,250
actually guard duty Lin events that are

790
00:41:33,680 --> 00:41:41,029
coming in so guard duty is a it's a

791
00:41:37,250 --> 00:41:43,070
useful service that AWS offers it's one

792
00:41:41,030 --> 00:41:47,180
of those places where you have to be a

793
00:41:43,070 --> 00:41:52,960
little careful about spin as with other

794
00:41:47,180 --> 00:41:56,690
other AWS sort of focused components but

795
00:41:52,960 --> 00:41:59,180
just you know with literally about 15

796
00:41:56,690 --> 00:42:05,560
clicks you can have guard duty going

797
00:41:59,180 --> 00:42:08,270
into an AWS cloud trail which goes into

798
00:42:05,560 --> 00:42:11,650
Cubana here and we can get these great

799
00:42:08,270 --> 00:42:16,700
dashboards which tell us things about

800
00:42:11,650 --> 00:42:20,300
the number the location and and we can

801
00:42:16,700 --> 00:42:23,629
really dig way far down in here if we

802
00:42:20,300 --> 00:42:27,410
want to to identify what exactly is

803
00:42:23,630 --> 00:42:34,300
going on and this is really out of the

804
00:42:27,410 --> 00:42:34,299
box let's switch over to

805
00:42:38,150 --> 00:42:43,350
this screen so these are the kinds of

806
00:42:41,250 --> 00:42:47,460
alerts that you might find and they're

807
00:42:43,350 --> 00:42:51,779
visible here if you can see the access

808
00:42:47,460 --> 00:42:55,110
key age there you know these are old and

809
00:42:51,780 --> 00:42:56,880
what what this an access key and AWS for

810
00:42:55,110 --> 00:42:59,340
those folks that don't know is kind of

811
00:42:56,880 --> 00:43:05,300
the equivalent of a username and

812
00:42:59,340 --> 00:43:08,160
password so you have an access key ID

813
00:43:05,300 --> 00:43:11,010
you have a date it was created a date it

814
00:43:08,160 --> 00:43:13,379
was last used and this is very useful

815
00:43:11,010 --> 00:43:16,650
because it shows us that we're really

816
00:43:13,380 --> 00:43:19,730
not using this credential so to make it

817
00:43:16,650 --> 00:43:21,990
inactive is as simple as a click and

818
00:43:19,730 --> 00:43:27,450
this is also something that you could

819
00:43:21,990 --> 00:43:29,520
automatically do with a lambda yeah now

820
00:43:27,450 --> 00:43:31,350
lambdas are not free but if you are

821
00:43:29,520 --> 00:43:33,960
already running a kubernetes cluster

822
00:43:31,350 --> 00:43:35,970
you could also integrate a script into

823
00:43:33,960 --> 00:43:39,150
your kubernetes cluster that just takes

824
00:43:35,970 --> 00:43:41,209
the Prowler output and does something

825
00:43:39,150 --> 00:43:43,910
very similar

826
00:43:41,210 --> 00:43:46,580
also what I've got here are AWS

827
00:43:43,910 --> 00:43:50,290
organizations so this is kind of how you

828
00:43:46,580 --> 00:43:55,549
end up organizing AWS accounts you have

829
00:43:50,290 --> 00:43:59,540
an email account named account ID status

830
00:43:55,550 --> 00:44:03,440
and you can actually organize these into

831
00:43:59,540 --> 00:44:07,160
groupings called organizational units

832
00:44:03,440 --> 00:44:09,310
and then you can apply restrictions

833
00:44:07,160 --> 00:44:11,299
based on those organizational units

834
00:44:09,310 --> 00:44:13,370
unfortunately one of the challenges is

835
00:44:11,300 --> 00:44:16,210
when you would apply a restriction based

836
00:44:13,370 --> 00:44:19,279
on an organizational unit you end up

837
00:44:16,210 --> 00:44:21,590
limiting the activities inside an

838
00:44:19,280 --> 00:44:24,260
account and it's very common for a

839
00:44:21,590 --> 00:44:26,540
development organization to say we can't

840
00:44:24,260 --> 00:44:30,010
have any of our activities limited we're

841
00:44:26,540 --> 00:44:30,009
trying to move too fast here

842
00:44:30,380 --> 00:44:38,070
so that's kind of content now many

843
00:44:33,960 --> 00:44:40,740
people will use AWS users really there's

844
00:44:38,070 --> 00:44:44,270
a much better way which is to use AWS

845
00:44:40,740 --> 00:44:47,390
rules so frequently what will happen is

846
00:44:44,270 --> 00:44:53,880
you want to do some kind of activity

847
00:44:47,390 --> 00:44:56,970
based on and you want to change some

848
00:44:53,880 --> 00:44:59,940
other AWS service and you want that code

849
00:44:56,970 --> 00:45:04,890
to be running in a lambda or on an ec2

850
00:44:59,940 --> 00:45:07,560
instance so as you can see there's this

851
00:45:04,890 --> 00:45:13,650
concept of AWS rules which you can apply

852
00:45:07,560 --> 00:45:17,310
to a lambda to spot spot cleat to an ec2

853
00:45:13,650 --> 00:45:20,820
instance and this AWS rule is like a

854
00:45:17,310 --> 00:45:23,730
user in that you can give it permissions

855
00:45:20,820 --> 00:45:25,410
but though those credentials that we

856
00:45:23,730 --> 00:45:27,420
looked at under the users those are

857
00:45:25,410 --> 00:45:31,950
automatically provided to the ec2

858
00:45:27,420 --> 00:45:34,790
instances or to the lambda code and it

859
00:45:31,950 --> 00:45:37,830
means that you really aren't at risk

860
00:45:34,790 --> 00:45:41,550
when you have users that have variable

861
00:45:37,830 --> 00:45:44,690
passwords or very long access key ages

862
00:45:41,550 --> 00:45:48,180
then there's always the risk that those

863
00:45:44,690 --> 00:45:49,920
access Keys can walk out the door

864
00:45:48,180 --> 00:45:54,359
one of the worst scenarios that I

865
00:45:49,920 --> 00:45:56,670
observed was we actually had at one

866
00:45:54,359 --> 00:46:00,060
company I worked at we had a Solutions

867
00:45:56,670 --> 00:46:03,660
Architect which had who had access keys

868
00:46:00,060 --> 00:46:06,660
which he mistook into a customer account

869
00:46:03,660 --> 00:46:09,060
he mistook those access keys for access

870
00:46:06,660 --> 00:46:13,200
keys to his personal development account

871
00:46:09,060 --> 00:46:18,270
and basically went in and deleted a

872
00:46:13,200 --> 00:46:20,790
number of the the resources in that

873
00:46:18,270 --> 00:46:24,109
customer account fortunately we were

874
00:46:20,790 --> 00:46:29,150
able to recover a hundred percent but

875
00:46:24,109 --> 00:46:31,830
you know it's just a sort of you know

876
00:46:29,150 --> 00:46:35,310
the moral of the story is that these

877
00:46:31,830 --> 00:46:38,340
have danger and it's very easy for them

878
00:46:35,310 --> 00:46:40,049
to get created circumvented and forgot

879
00:46:38,340 --> 00:46:42,599
forgotten about if you don't have this

880
00:46:40,050 --> 00:46:44,830
kind of monitoring in place

881
00:46:42,599 --> 00:46:53,740
the other thing that I wanted to show

882
00:46:44,830 --> 00:46:57,310
briefly going slightly off script here

883
00:46:53,740 --> 00:46:59,348
so you know guys behind cloud watch logs

884
00:46:57,310 --> 00:47:04,029
so this is this is a simple billing

885
00:46:59,349 --> 00:47:08,349
alarm that I've set up so it's in alarm

886
00:47:04,030 --> 00:47:13,000
right now and it shows that this account

887
00:47:08,349 --> 00:47:13,630
has sent 140 bucks this month in a row

888
00:47:13,000 --> 00:47:17,830
yes

889
00:47:13,630 --> 00:47:19,750
so not cheap but if you need to learn

890
00:47:17,830 --> 00:47:21,759
something it might be worth doing it

891
00:47:19,750 --> 00:47:25,300
that said if you are very budget

892
00:47:21,760 --> 00:47:27,339
sensitive set up an alarm like this you

893
00:47:25,300 --> 00:47:29,890
know early if you're using an account if

894
00:47:27,339 --> 00:47:31,750
you're using the AWS feeds free tier and

895
00:47:29,890 --> 00:47:34,960
you don't expect to be spending money go

896
00:47:31,750 --> 00:47:36,790
ahead and set this alert up initially

897
00:47:34,960 --> 00:47:38,980
and there are guides just that this

898
00:47:36,790 --> 00:47:41,020
alert up so that you know when you're

899
00:47:38,980 --> 00:47:43,540
spending money

900
00:47:41,020 --> 00:47:51,759
the other very powerful thing is cloud

901
00:47:43,540 --> 00:47:53,890
watch logs many many services will send

902
00:47:51,760 --> 00:47:57,790
things to cloud watch logs automatically

903
00:47:53,890 --> 00:48:00,868
so this is for example a flow log if you

904
00:47:57,790 --> 00:48:03,160
are looking for something that you might

905
00:48:00,869 --> 00:48:06,880
traditionally get from a network

906
00:48:03,160 --> 00:48:09,399
appliance as far as Network flows Animas

907
00:48:06,880 --> 00:48:10,960
on has the same thing and this is a

908
00:48:09,400 --> 00:48:14,310
really good example because enabling

909
00:48:10,960 --> 00:48:17,200
Network flows is a part of the CSI

910
00:48:14,310 --> 00:48:20,109
recommendation suite so Prowler will

911
00:48:17,200 --> 00:48:23,040
iterate through all of your V pcs of V

912
00:48:20,109 --> 00:48:27,009
PC in AWS is kind of like a virtual

913
00:48:23,040 --> 00:48:30,339
compute network right so you could think

914
00:48:27,010 --> 00:48:33,970
of it as almost like a VLAN and it and

915
00:48:30,339 --> 00:48:36,540
so you can turn on logging for every

916
00:48:33,970 --> 00:48:39,970
network connection in a given VLAN so

917
00:48:36,540 --> 00:48:42,250
here we can see this network interface

918
00:48:39,970 --> 00:48:45,430
which is connected to a specific virtual

919
00:48:42,250 --> 00:48:49,630
machine contacted these network

920
00:48:45,430 --> 00:48:51,310
addresses during this time period and in

921
00:48:49,630 --> 00:48:53,080
this case that connection was rejected

922
00:48:51,310 --> 00:48:54,910
here that connection this connection was

923
00:48:53,080 --> 00:48:57,339
accepted

924
00:48:54,910 --> 00:48:59,589
but this is something that is one of the

925
00:48:57,339 --> 00:49:03,490
specific recommendations and I've used

926
00:48:59,589 --> 00:49:06,130
these logs you know during multiple you

927
00:49:03,490 --> 00:49:09,819
know investigations to identify the

928
00:49:06,130 --> 00:49:12,400
specific machines that were involved in

929
00:49:09,819 --> 00:49:14,380
the potential breach and actually it's

930
00:49:12,400 --> 00:49:16,720
it's it's not uncommon that you can do a

931
00:49:14,380 --> 00:49:19,599
lot of narrowing down in this kind of

932
00:49:16,720 --> 00:49:23,200
scenario only one of these fields is

933
00:49:19,599 --> 00:49:27,549
bytes sent and you know if you see only

934
00:49:23,200 --> 00:49:31,089
you know 123 bytes were sent okay

935
00:49:27,549 --> 00:49:32,710
there's no way that 123 bytes no way you

936
00:49:31,089 --> 00:49:35,650
know this is a strong statement but

937
00:49:32,710 --> 00:49:37,599
there's no way that 123 bytes could

938
00:49:35,650 --> 00:49:42,789
trigger the problem that we're expecting

939
00:49:37,599 --> 00:49:45,849
to be to be investigating for so that's

940
00:49:42,789 --> 00:49:48,579
kind of a high level overview of cloud

941
00:49:45,849 --> 00:49:52,180
wash logs flow logs these are

942
00:49:48,579 --> 00:49:56,140
tremendously useful in in my day to day

943
00:49:52,180 --> 00:49:59,009
operations or AWS organizations also

944
00:49:56,140 --> 00:49:59,009
very useful

945
00:50:00,630 --> 00:50:06,520
and it's credits of course these slides

946
00:50:03,819 --> 00:50:15,210
will be available try

947
00:50:06,520 --> 00:50:15,210
answer me switch over to slack and I can

948
00:50:21,670 --> 00:50:28,480
yeah well L don't know why elders down

949
00:50:24,140 --> 00:50:32,150
there like ethics like any question or

950
00:50:28,480 --> 00:50:37,250
Eldon all the walls on Dean Wallace I

951
00:50:32,150 --> 00:50:37,850
see you Lebanon please please watch

952
00:50:37,250 --> 00:50:39,740
tonight

953
00:50:37,850 --> 00:50:41,299
it's like everybody can take a look at

954
00:50:39,740 --> 00:50:43,509
this everybody can take a look at it

955
00:50:41,300 --> 00:50:43,510
there

956
00:50:43,829 --> 00:50:48,059
yes I'm not here whatever what

957
00:50:53,750 --> 00:50:55,810
you

958
00:51:02,080 --> 00:51:09,160
is there anything that that folks would

959
00:51:06,080 --> 00:51:12,580
be interested in seeing specifically

960
00:51:09,160 --> 00:51:12,580
while I'm here

961
00:51:12,670 --> 00:51:17,770
I can walk through actually creating a V

962
00:51:15,309 --> 00:51:19,720
PC and setting up those flow logs really

963
00:51:17,770 --> 00:51:21,040
quick from the command line if that's

964
00:51:19,720 --> 00:51:23,200
something that would be interested in

965
00:51:21,040 --> 00:51:26,250
nobody has anything else then that's

966
00:51:23,200 --> 00:51:26,250
that's what I'll do

967
00:51:31,589 --> 00:51:35,590
you

968
00:51:33,530 --> 00:51:35,590
you

969
00:51:39,450 --> 00:51:42,529
sure okay

970
00:51:53,160 --> 00:51:55,220
you

971
00:52:05,800 --> 00:52:13,849
so every almost every AWS object lives

972
00:52:10,730 --> 00:52:18,050
inside of a V PC like I said you can

973
00:52:13,849 --> 00:52:21,680
think of a V PC as a sort of a VLAN for

974
00:52:18,050 --> 00:52:27,680
AWS so when you create a V PC you're

975
00:52:21,680 --> 00:52:36,200
going to give it a name I'll walk

976
00:52:27,680 --> 00:52:42,440
through V PC where logs for example we

977
00:52:36,200 --> 00:52:45,710
can just pick one now it's very

978
00:52:42,440 --> 00:52:48,349
important to to choose something and

979
00:52:45,710 --> 00:52:52,609
really in your organization to have a

980
00:52:48,349 --> 00:52:55,190
network plan in place because there's

981
00:52:52,609 --> 00:52:57,920
something called V PC hearing V PC

982
00:52:55,190 --> 00:53:00,920
peering is a part of the CIA's

983
00:52:57,920 --> 00:53:02,300
recommendations but it's you know you

984
00:53:00,920 --> 00:53:05,560
don't really think about it often but

985
00:53:02,300 --> 00:53:08,270
it's not hard it's actually very easy to

986
00:53:05,560 --> 00:53:11,450
setup the PCs in such a way that they do

987
00:53:08,270 --> 00:53:14,300
have overlapping cider internal ciders

988
00:53:11,450 --> 00:53:18,080
and in that kind of scenario you may

989
00:53:14,300 --> 00:53:20,500
have trouble hearing to beat meeseeks

990
00:53:18,080 --> 00:53:20,500
together

991
00:53:22,310 --> 00:53:29,720
right we created a V PC it's worth

992
00:53:24,860 --> 00:53:33,140
noting the B PCs are free flow logs are

993
00:53:29,720 --> 00:53:36,620
not so if you expect to have a lot of a

994
00:53:33,140 --> 00:53:38,600
lot of traffic you may you may want to

995
00:53:36,620 --> 00:53:42,560
think about what what destination you're

996
00:53:38,600 --> 00:53:45,370
using for flow logs so accept/reject

997
00:53:42,560 --> 00:53:49,450
all we can we can try any of these

998
00:53:45,370 --> 00:53:51,650
accept and reject or based on

999
00:53:49,450 --> 00:53:54,140
potentially other factors but they're

1000
00:53:51,650 --> 00:53:57,130
primarily based on the security groups

1001
00:53:54,140 --> 00:53:59,890
that you assign to a network interface

1002
00:53:57,130 --> 00:54:02,900
so in this case we'll just do accept

1003
00:53:59,890 --> 00:54:04,970
this is the maximum aggregation interval

1004
00:54:02,900 --> 00:54:07,430
so that's kind of the the maximum amount

1005
00:54:04,970 --> 00:54:10,129
of time you might wait to get alerted on

1006
00:54:07,430 --> 00:54:17,290
an event we're gonna send them to cattle

1007
00:54:10,130 --> 00:54:19,400
watch logs we use the flow logs and and

1008
00:54:17,290 --> 00:54:21,770
so this is an example where we're

1009
00:54:19,400 --> 00:54:24,380
assigning an I am wall the thing that

1010
00:54:21,770 --> 00:54:26,990
we're assigning this I am role for is

1011
00:54:24,380 --> 00:54:30,770
for the flow log service on Amazon's

1012
00:54:26,990 --> 00:54:36,970
part to be able to deliver the logs to

1013
00:54:30,770 --> 00:54:43,490
s3 so Amazon has a number of built-in I

1014
00:54:36,970 --> 00:54:45,919
am roles you can see cloud trail flow

1015
00:54:43,490 --> 00:54:47,750
logs role is one that I created the

1016
00:54:45,920 --> 00:54:50,060
challenge with the built-in ones you

1017
00:54:47,750 --> 00:54:51,650
have to be really careful because AWS

1018
00:54:50,060 --> 00:54:55,220
makes it easy

1019
00:54:51,650 --> 00:54:58,460
they don't make it specific so you can

1020
00:54:55,220 --> 00:55:02,689
use one of these roles granted to a

1021
00:54:58,460 --> 00:55:06,590
system or a lambda and that lambda could

1022
00:55:02,690 --> 00:55:09,590
have much broader permissions than what

1023
00:55:06,590 --> 00:55:11,000
you expect there's actually a blog post

1024
00:55:09,590 --> 00:55:13,840
that I would recommend anybody who's

1025
00:55:11,000 --> 00:55:17,300
involved with this reading called I

1026
00:55:13,840 --> 00:55:23,660
think it's AWS his most dangerous API

1027
00:55:17,300 --> 00:55:28,600
and it's about I am rural creation so

1028
00:55:23,660 --> 00:55:32,319
flow log and then we can add tags here

1029
00:55:28,600 --> 00:55:35,930
to the flow log I'm not going to do that

1030
00:55:32,320 --> 00:55:41,570
and that flow log is has been created

1031
00:55:35,930 --> 00:55:47,390
so we should be able to go to this

1032
00:55:41,570 --> 00:55:50,150
destination and these flow logs will be

1033
00:55:47,390 --> 00:55:55,040
will be streaming in now we would need

1034
00:55:50,150 --> 00:55:59,500
to actually have a an instance in that V

1035
00:55:55,040 --> 00:56:01,560
PC so we could create an instance

1036
00:55:59,500 --> 00:56:01,560
you

1037
00:56:02,800 --> 00:56:04,860
you

1038
00:56:12,360 --> 00:56:21,870
and you know I'm I think Amazon's most

1039
00:56:17,790 --> 00:56:25,460
dangerous capability is really the user

1040
00:56:21,870 --> 00:56:25,460
and face here because

1041
00:56:26,509 --> 00:56:32,160
when you're running one of these Wizards

1042
00:56:29,069 --> 00:56:36,538
there is so much going on under the hood

1043
00:56:32,160 --> 00:56:40,049
so much going on that it's very hard to

1044
00:56:36,539 --> 00:56:41,970
replicate all of those steps that this

1045
00:56:40,049 --> 00:56:43,440
wizard is doing and unless you have

1046
00:56:41,970 --> 00:56:46,399
somebody sitting there doing like a

1047
00:56:43,440 --> 00:56:50,940
screen recording of what they're doing

1048
00:56:46,400 --> 00:56:53,580
so here we can pick our new BBC we need

1049
00:56:50,940 --> 00:56:55,110
to create a new subnet

1050
00:56:53,580 --> 00:56:57,450
and this is what I was talking about

1051
00:56:55,110 --> 00:57:00,930
like kind of what's what's going on

1052
00:56:57,450 --> 00:57:05,759
under the hood so availability zone will

1053
00:57:00,930 --> 00:57:11,850
just you know pick anyone give it a

1054
00:57:05,760 --> 00:57:14,790
cider blog so I highly recommend and I

1055
00:57:11,850 --> 00:57:19,520
think other speakers have discussed

1056
00:57:14,790 --> 00:57:24,470
previously terraform is a capability to

1057
00:57:19,520 --> 00:57:24,470
avoid unless it should

1058
00:57:26,550 --> 00:57:32,760
okay so now we have a subnet and a bunch

1059
00:57:30,600 --> 00:57:35,850
of the defaults this is where we could

1060
00:57:32,760 --> 00:57:38,730
assign an IMO so we can and I sign and I

1061
00:57:35,850 --> 00:57:43,440
am all here and this ec2 instance will

1062
00:57:38,730 --> 00:57:48,900
actually get me the permissions that are

1063
00:57:43,440 --> 00:57:52,280
granted to this IMO so if we went to our

1064
00:57:48,900 --> 00:57:52,280
I am console

1065
00:57:53,910 --> 00:58:01,149
we would be able to identify that I am

1066
00:57:57,730 --> 00:58:03,640
role and then it's going to have a

1067
00:58:01,150 --> 00:58:06,490
number of policies associated into it

1068
00:58:03,640 --> 00:58:10,930
and we can actually look at those

1069
00:58:06,490 --> 00:58:14,020
policies here this one allows you to put

1070
00:58:10,930 --> 00:58:17,200
a message on a queue so this was

1071
00:58:14,020 --> 00:58:19,750
actually a project to get some

1072
00:58:17,200 --> 00:58:22,540
information on spot pricing which is

1073
00:58:19,750 --> 00:58:27,250
Amazon's kind of discount pricing for

1074
00:58:22,540 --> 00:58:34,240
AWS and and then once we've done this we

1075
00:58:27,250 --> 00:58:35,650
can basically launch it one of the

1076
00:58:34,240 --> 00:58:39,549
things that you'll find the see is

1077
00:58:35,650 --> 00:58:41,829
benchmark for is key pairs making sure

1078
00:58:39,550 --> 00:58:43,859
that your key pairs are excessively out

1079
00:58:41,829 --> 00:58:47,890
of date is an important thing because

1080
00:58:43,859 --> 00:58:50,140
you know if some employee creates a key

1081
00:58:47,890 --> 00:58:52,618
pair uses it to launch a bunch of

1082
00:58:50,140 --> 00:58:56,200
instances walks away

1083
00:58:52,619 --> 00:58:57,520
it's a double-sided sort of challenge

1084
00:58:56,200 --> 00:58:59,649
because that key pair is on that

1085
00:58:57,520 --> 00:59:01,720
instance and you don't know if that key

1086
00:58:59,650 --> 00:59:03,670
has walked out the door also you don't

1087
00:59:01,720 --> 00:59:05,828
know if that employee who created the

1088
00:59:03,670 --> 00:59:08,470
instances necessarily shared that key

1089
00:59:05,829 --> 00:59:11,020
pair out this is one of the reasons that

1090
00:59:08,470 --> 00:59:13,868
we've been aggressively adopting

1091
00:59:11,020 --> 00:59:19,270
kubernetes is because you you have the

1092
00:59:13,869 --> 00:59:21,040
potential to avoid this specific okay I

1093
00:59:19,270 --> 00:59:28,030
think I am running I think that is

1094
00:59:21,040 --> 00:59:29,770
pretty much the end of my time yep I'm

1095
00:59:28,030 --> 00:59:32,200
happy to check any more about this on

1096
00:59:29,770 --> 00:59:35,230
slack or questions later

1097
00:59:32,200 --> 00:59:40,540
I'm also almost always at the 2600 and

1098
00:59:35,230 --> 00:59:43,950
DC 404 meetings so yeah feel free to hit

1099
00:59:40,540 --> 00:59:43,950
me up anywhere Thanks

