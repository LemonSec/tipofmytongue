1
00:00:02,530 --> 00:00:07,930
it is one o'clock on the eastern time

2
00:00:05,649 --> 00:00:11,440
zone and welcome back to the afternoon

3
00:00:07,930 --> 00:00:14,410
tracks here at besides Atlanta 2020 my

4
00:00:11,440 --> 00:00:15,849
name is Andy green a faculty member at

5
00:00:14,410 --> 00:00:16,450
Kennesaw State University outside of

6
00:00:15,849 --> 00:00:18,070
Atlanta

7
00:00:16,450 --> 00:00:22,270
where I teach information security

8
00:00:18,070 --> 00:00:24,190
courses and I'm also I'm also in charge

9
00:00:22,270 --> 00:00:26,200
of they screwed up and put me in charge

10
00:00:24,190 --> 00:00:30,180
of the degree program and information

11
00:00:26,200 --> 00:00:32,920
security and assurance so there's that

12
00:00:30,180 --> 00:00:34,149
what I want to do now is just kind of go

13
00:00:32,920 --> 00:00:37,329
through everything that I've been doing

14
00:00:34,149 --> 00:00:38,710
all day long and then remind you about a

15
00:00:37,329 --> 00:00:42,370
few things and then we will start with

16
00:00:38,710 --> 00:00:43,780
our one o'clock talk so once again I'm

17
00:00:42,370 --> 00:00:44,919
gonna put this slide up and for those of

18
00:00:43,780 --> 00:00:47,769
you who have been here for a while you

19
00:00:44,920 --> 00:00:51,059
know how this goes but we literally

20
00:00:47,769 --> 00:00:54,280
would not be able to do this without our

21
00:00:51,059 --> 00:00:55,718
without our our wonderful sponsors and

22
00:00:54,280 --> 00:00:58,510
so I'm going to put this slide deck up

23
00:00:55,719 --> 00:01:01,690
once again and just to remind you that

24
00:00:58,510 --> 00:01:04,809
these folks all stayed with us even as

25
00:01:01,690 --> 00:01:06,670
we made the switch from virtual or from

26
00:01:04,809 --> 00:01:07,929
physical to virtual and so we'll start

27
00:01:06,670 --> 00:01:11,110
that we'll start at the top at the

28
00:01:07,930 --> 00:01:15,700
diamond level Warner Media thank you so

29
00:01:11,110 --> 00:01:17,229
much my bosses Kennesaw State University

30
00:01:15,700 --> 00:01:20,259
and écoles college of business where my

31
00:01:17,229 --> 00:01:22,090
Dean and her and her staff of folks have

32
00:01:20,259 --> 00:01:23,350
been really good to work with and my my

33
00:01:22,090 --> 00:01:24,640
individual department that I teach out

34
00:01:23,350 --> 00:01:26,908
of the Kennesaw State University

35
00:01:24,640 --> 00:01:30,189
Department of Information Systems

36
00:01:26,909 --> 00:01:32,680
furthermore we've got Bishop Fox

37
00:01:30,189 --> 00:01:35,219
we've got coal fire genuine parts and

38
00:01:32,680 --> 00:01:38,170
NCR all at the all at the gold level

39
00:01:35,219 --> 00:01:41,350
moving down to the crystal level we have

40
00:01:38,170 --> 00:01:42,250
a critical path and synopsis coming into

41
00:01:41,350 --> 00:01:45,788
the Silver level

42
00:01:42,250 --> 00:01:48,219
Aran's we also have binary defense Black

43
00:01:45,789 --> 00:01:50,890
Hills information security core light

44
00:01:48,219 --> 00:01:53,919
and guide point security coming in at

45
00:01:50,890 --> 00:01:56,859
bronze we have the NCC group which we

46
00:01:53,920 --> 00:01:59,229
just heard a bit about and Rory is with

47
00:01:56,859 --> 00:02:02,408
the NCC group and so we thank them for

48
00:01:59,229 --> 00:02:04,240
their sponsorship of today's event also

49
00:02:02,409 --> 00:02:06,159
a big thank you to our in-kind sponsors

50
00:02:04,240 --> 00:02:08,199
yesterday E Council came through with

51
00:02:06,159 --> 00:02:09,729
some with a pace training opportunity

52
00:02:08,199 --> 00:02:11,530
that I think most of you or some of you

53
00:02:09,729 --> 00:02:15,280
were able to take advantage of hopefully

54
00:02:11,530 --> 00:02:16,180
you found that beneficial also secure

55
00:02:15,280 --> 00:02:18,940
code warrior

56
00:02:16,180 --> 00:02:20,620
has been running an online CTF for us

57
00:02:18,940 --> 00:02:25,000
all day long and it's still over there

58
00:02:20,620 --> 00:02:27,340
ongoing right now as far as I know next

59
00:02:25,000 --> 00:02:29,410
we'd like to thank a few individuals and

60
00:02:27,340 --> 00:02:32,319
organizations for contributing to our

61
00:02:29,410 --> 00:02:34,120
raffle prize effort might cost a

62
00:02:32,319 --> 00:02:38,380
crosshair information-technology

63
00:02:34,120 --> 00:02:40,599
Joe gray offensive security and the pen

64
00:02:38,380 --> 00:02:43,390
tester lab also I want to mention that

65
00:02:40,599 --> 00:02:45,670
if you have not yet done so this is a

66
00:02:43,390 --> 00:02:47,380
virtual global conference and we are

67
00:02:45,670 --> 00:02:50,559
curious as to where you are coming from

68
00:02:47,380 --> 00:02:53,290
so I'm going to paste this link in the

69
00:02:50,560 --> 00:02:55,810
channel and I want you if you haven't

70
00:02:53,290 --> 00:02:57,880
visited it already I would like for you

71
00:02:55,810 --> 00:02:59,200
to go drop a pin and let us know where

72
00:02:57,880 --> 00:03:01,180
you're from and take a look at the map

73
00:02:59,200 --> 00:03:03,160
and see where folks are checking in from

74
00:03:01,180 --> 00:03:04,410
assuming that everybody is being honest

75
00:03:03,160 --> 00:03:07,900
we've got folks in from Australia

76
00:03:04,410 --> 00:03:09,400
Germany the EU and of course a ton of

77
00:03:07,900 --> 00:03:10,660
folks here in the United States so if

78
00:03:09,400 --> 00:03:12,790
you haven't dropped a pin yet please go

79
00:03:10,660 --> 00:03:14,799
do that so that we can kind of get an

80
00:03:12,790 --> 00:03:18,579
idea about just how global our reach is

81
00:03:14,799 --> 00:03:21,310
at over 1,100 attendees today it's it's

82
00:03:18,580 --> 00:03:24,730
it's a sight to see I also want to

83
00:03:21,310 --> 00:03:26,890
remind you about the raffle prize

84
00:03:24,730 --> 00:03:28,988
giveaway that's going on if you have not

85
00:03:26,890 --> 00:03:30,510
jumped in to this channel that I'm about

86
00:03:28,989 --> 00:03:32,920
to drop

87
00:03:30,510 --> 00:03:34,720
[Music]

88
00:03:32,920 --> 00:03:35,950
right there in the channel if you have

89
00:03:34,720 --> 00:03:38,830
not jumped in the raffles and giveaways

90
00:03:35,950 --> 00:03:40,420
channel to get an opportunity to win

91
00:03:38,830 --> 00:03:42,850
some of the cool stuff that sponsors

92
00:03:40,420 --> 00:03:46,390
have given us to give away go ahead and

93
00:03:42,850 --> 00:03:49,090
jump in there now I have done enough

94
00:03:46,390 --> 00:03:51,640
talking and so now I'm gonna ask you to

95
00:03:49,090 --> 00:03:54,040
please give a warm welcome to Rory

96
00:03:51,640 --> 00:03:55,809
Mattoon with NCC group who will be

97
00:03:54,040 --> 00:03:57,730
talking with us about compromising

98
00:03:55,810 --> 00:04:00,580
containers and clusters and I will stop

99
00:03:57,730 --> 00:04:05,280
sharing my screen now Rory so you can go

100
00:04:00,580 --> 00:04:09,250
to or so um the goal of the talk today

101
00:04:05,280 --> 00:04:11,350
is to talk about compromising containers

102
00:04:09,250 --> 00:04:14,140
and clusters water warriors talk a bit

103
00:04:11,350 --> 00:04:16,510
about it was looking at some common

104
00:04:14,140 --> 00:04:17,680
container solutions I'm guessing more

105
00:04:16,510 --> 00:04:20,380
and more people will be coming across

106
00:04:17,680 --> 00:04:23,740
the taking care of an attackers eye view

107
00:04:20,380 --> 00:04:26,260
point and looking at how an attacker

108
00:04:23,740 --> 00:04:29,140
might try and compromise maybe docker

109
00:04:26,260 --> 00:04:31,120
systems or kubernetes systems and this

110
00:04:29,140 --> 00:04:33,310
is something that you know we do or I do

111
00:04:31,120 --> 00:04:36,760
quite a bit hopefully got some useful

112
00:04:33,310 --> 00:04:40,750
information in there for you before I

113
00:04:36,760 --> 00:04:42,820
get started on the top a little bit of

114
00:04:40,750 --> 00:04:45,669
an about me I've been in information and

115
00:04:42,820 --> 00:04:47,620
IT security for about 19 years before

116
00:04:45,669 --> 00:04:50,500
that I was in ite as a network

117
00:04:47,620 --> 00:04:52,930
consultant who remembers that I'm a

118
00:04:50,500 --> 00:04:56,110
principal consultant with NCC Brook in

119
00:04:52,930 --> 00:04:58,419
the UK these days I spend most of my

120
00:04:56,110 --> 00:04:59,979
time working on containerization that

121
00:04:58,419 --> 00:05:03,490
have web app stuff from but cloud but

122
00:04:59,979 --> 00:05:05,500
mostly containers I'm a career up Rory

123
00:05:03,490 --> 00:05:06,940
I'm sorry to interrupt just I just

124
00:05:05,500 --> 00:05:08,740
thought about this tell folks where

125
00:05:06,940 --> 00:05:12,330
you're from and what time it is and and

126
00:05:08,740 --> 00:05:15,970
how you came to be here today so yeah I

127
00:05:12,330 --> 00:05:17,469
was doing this talk on Wednesday because

128
00:05:15,970 --> 00:05:19,090
unfortunately one of our other

129
00:05:17,470 --> 00:05:21,160
consultants who have lined up I was

130
00:05:19,090 --> 00:05:24,520
unable to to make it they had anything

131
00:05:21,160 --> 00:05:26,350
here to do so I stepped in and as I like

132
00:05:24,520 --> 00:05:27,849
talking about containers this was just

133
00:05:26,350 --> 00:05:29,770
another opportunity for me to do that so

134
00:05:27,850 --> 00:05:31,660
I'm as you can tell from the accent and

135
00:05:29,770 --> 00:05:32,830
I'll show you a picture in a second I'm

136
00:05:31,660 --> 00:05:34,720
in the Highlands of Scotland at the

137
00:05:32,830 --> 00:05:37,419
moment in a little village called loss

138
00:05:34,720 --> 00:05:38,680
coil head so if there's any audio it may

139
00:05:37,419 --> 00:05:41,799
be either it's traveling a long way

140
00:05:38,680 --> 00:05:44,140
which might be wise that up so yeah

141
00:05:41,800 --> 00:05:47,630
Alison I'm a contributor at security

142
00:05:44,140 --> 00:05:48,890
Stack Exchange which I always mention in

143
00:05:47,630 --> 00:05:51,380
because people may not have heard of it

144
00:05:48,890 --> 00:05:54,469
it's like a smaller I'm friendly or a

145
00:05:51,380 --> 00:05:56,060
person all stackoverflow with a focus on

146
00:05:54,470 --> 00:05:58,010
security so if you have any security

147
00:05:56,060 --> 00:05:59,630
questions then it's a cool place to go

148
00:05:58,010 --> 00:06:02,240
and ask them or indeed if you want to

149
00:05:59,630 --> 00:06:04,040
answer a few questions and the last one

150
00:06:02,240 --> 00:06:06,380
which is kind of relevant to this talk

151
00:06:04,040 --> 00:06:07,430
is what I got into containers here do

152
00:06:06,380 --> 00:06:10,150
you like sort of three or four years ago

153
00:06:07,430 --> 00:06:12,770
now there wasn't a lot of documentation

154
00:06:10,150 --> 00:06:15,200
so I kind of helped I'm on the CIA's

155
00:06:12,770 --> 00:06:16,549
benchmark for doctrine curiosities so if

156
00:06:15,200 --> 00:06:19,430
you're looking for information about

157
00:06:16,550 --> 00:06:21,230
that then

158
00:06:19,430 --> 00:06:23,690
hope you'll get it the picture is just

159
00:06:21,230 --> 00:06:25,010
coming hopefully see the picture man I

160
00:06:23,690 --> 00:06:26,300
just didn't think was in there wasn't a

161
00:06:25,010 --> 00:06:27,860
picture there's about to be a picture

162
00:06:26,300 --> 00:06:30,320
there's the picture I took this this

163
00:06:27,860 --> 00:06:32,210
week this is just the village I stand I

164
00:06:30,320 --> 00:06:37,370
just went Bob the village so hopefully

165
00:06:32,210 --> 00:06:39,409
everyone can see that here let me let me

166
00:06:37,370 --> 00:06:43,070
let me poke in here I am not seeing your

167
00:06:39,410 --> 00:06:46,240
screen right now yeah I know just the

168
00:06:43,070 --> 00:06:46,240
green box went away

169
00:06:46,390 --> 00:07:00,380
sorry I had to take over - yeah yeah we

170
00:06:58,790 --> 00:07:03,410
can see it now I'll ship you a beer I

171
00:07:00,380 --> 00:07:06,950
owe you my bad awesome

172
00:07:03,410 --> 00:07:08,870
so yeah that's the picture and that coil

173
00:07:06,950 --> 00:07:13,190
here in this house hopefully you can

174
00:07:08,870 --> 00:07:15,500
just see the one spirit easy bill yeah

175
00:07:13,190 --> 00:07:17,660
cool so that's where I know and that's

176
00:07:15,500 --> 00:07:19,940
just above my just above where I kind of

177
00:07:17,660 --> 00:07:21,500
go for a walk a bit of a morning so

178
00:07:19,940 --> 00:07:23,840
anyway Oh what are we going to talk

179
00:07:21,500 --> 00:07:26,030
about today we're going to talk about is

180
00:07:23,840 --> 00:07:28,909
we're going to talk a bit about what is

181
00:07:26,030 --> 00:07:30,950
docker right before you look at securing

182
00:07:28,910 --> 00:07:32,300
or hacking into or whatever you're doing

183
00:07:30,950 --> 00:07:34,039
with the technology it's a good idea

184
00:07:32,300 --> 00:07:36,980
understand how it works so we're to

185
00:07:34,040 --> 00:07:39,680
start there then we're going to talk

186
00:07:36,980 --> 00:07:42,290
about attacking docker locally so say

187
00:07:39,680 --> 00:07:43,970
I'm a pen tester and I've got local

188
00:07:42,290 --> 00:07:46,280
actors to the hosts but I'm a North Lee

189
00:07:43,970 --> 00:07:47,990
user and I'd like to privilege escalate

190
00:07:46,280 --> 00:07:50,419
right that's a standard kind of pen test

191
00:07:47,990 --> 00:07:53,780
attack something to do if I get access

192
00:07:50,420 --> 00:07:56,030
to docker how do I do that attacking

193
00:07:53,780 --> 00:07:57,349
docker remotely sometimes people will

194
00:07:56,030 --> 00:08:00,020
make docker available over the network

195
00:07:57,350 --> 00:08:02,300
and that can be bad so we can look at

196
00:08:00,020 --> 00:08:04,219
how that works then we'll talk a little

197
00:08:02,300 --> 00:08:06,350
bit about what Canaries is if you've

198
00:08:04,220 --> 00:08:08,960
been involved in containerization a lot

199
00:08:06,350 --> 00:08:10,580
over the last couple of years you will

200
00:08:08,960 --> 00:08:13,340
probably have come across communities

201
00:08:10,580 --> 00:08:14,510
these days is pretty much everywhere and

202
00:08:13,340 --> 00:08:17,630
it's worth talking a little bit about

203
00:08:14,510 --> 00:08:19,460
how it works and what it does again

204
00:08:17,630 --> 00:08:21,200
understanding these things helps us when

205
00:08:19,460 --> 00:08:24,140
we want to secure the more we want to

206
00:08:21,200 --> 00:08:26,270
break into them I'm being talked about

207
00:08:24,140 --> 00:08:28,310
attacking your Bernanke's remotely so we

208
00:08:26,270 --> 00:08:30,109
can talk about how we do this if you

209
00:08:28,310 --> 00:08:32,929
find this of a network pen test and we

210
00:08:30,110 --> 00:08:34,640
see like whatever it is cluster what can

211
00:08:32,929 --> 00:08:35,959
we maybe do to actually kind of break

212
00:08:34,640 --> 00:08:39,860
into that cluster and actually connect

213
00:08:35,960 --> 00:08:41,150
compromised bits of it and then what

214
00:08:39,860 --> 00:08:44,210
we'll do after that is talk a bit about

215
00:08:41,150 --> 00:08:46,730
attacking kubernetes locally so Cuba

216
00:08:44,210 --> 00:08:47,870
Nettie's is a multi-user system you know

217
00:08:46,730 --> 00:08:49,280
when I'm reviewing a cluster for

218
00:08:47,870 --> 00:08:51,710
somebody I might see a cluster with

219
00:08:49,280 --> 00:08:53,569
maybe 50 or 60 applications deployed

220
00:08:51,710 --> 00:08:55,340
onto it so the groups of developers

221
00:08:53,570 --> 00:08:57,440
you've got access to that cluster and

222
00:08:55,340 --> 00:09:00,320
obviously we don't want to give every

223
00:08:57,440 --> 00:09:02,600
developer full control of the cluster so

224
00:09:00,320 --> 00:09:04,130
we want to try and say okay if I was an

225
00:09:02,600 --> 00:09:05,690
attack prep say I'm a pen tester I've

226
00:09:04,130 --> 00:09:07,790
got access as a single developer

227
00:09:05,690 --> 00:09:09,770
can I escalate that access and can I

228
00:09:07,790 --> 00:09:11,300
essentially control the entire cluster

229
00:09:09,770 --> 00:09:14,569
we'll talk about how you can do that as

230
00:09:11,300 --> 00:09:17,240
well so first off is to talk about

231
00:09:14,570 --> 00:09:19,400
docker and a little bit about where it

232
00:09:17,240 --> 00:09:21,110
came from and how it works which i think

233
00:09:19,400 --> 00:09:22,189
is kind of useful for understanding what

234
00:09:21,110 --> 00:09:26,120
we'll kind of talk through the rest of

235
00:09:22,190 --> 00:09:28,910
it of the fee of the talk so talkers

236
00:09:26,120 --> 00:09:30,320
bit of an overloaded term and there's a

237
00:09:28,910 --> 00:09:31,430
number of different ways it gets used

238
00:09:30,320 --> 00:09:32,930
like everything in technology a lot

239
00:09:31,430 --> 00:09:35,449
seems to be like a number of different

240
00:09:32,930 --> 00:09:37,339
you know things that are referring to

241
00:09:35,450 --> 00:09:39,080
the same term there is docker the

242
00:09:37,339 --> 00:09:41,570
company right so darker ink is that

243
00:09:39,080 --> 00:09:43,400
company and then they there is a product

244
00:09:41,570 --> 00:09:45,350
called docker right so they have a

245
00:09:43,400 --> 00:09:47,810
product which is called docker there is

246
00:09:45,350 --> 00:09:49,550
also the open source project which was

247
00:09:47,810 --> 00:09:51,890
called docker book isn't there called

248
00:09:49,550 --> 00:09:53,240
movie which i think is for trademark

249
00:09:51,890 --> 00:09:54,740
reasons or something like that they

250
00:09:53,240 --> 00:09:56,540
renamed it so if you go to github and

251
00:09:54,740 --> 00:09:59,870
try to look for docker you just get me

252
00:09:56,540 --> 00:10:01,880
directed to mobi there are two products

253
00:09:59,870 --> 00:10:04,250
there's docker C which is the community

254
00:10:01,880 --> 00:10:05,270
edition this is the vast majority of

255
00:10:04,250 --> 00:10:07,220
what you'll see if you're actually

256
00:10:05,270 --> 00:10:09,470
installing or using docker this is the

257
00:10:07,220 --> 00:10:11,900
open source version of ever they can

258
00:10:09,470 --> 00:10:13,820
freakin own commercial version there's

259
00:10:11,900 --> 00:10:15,680
also docker ee which is enterprise

260
00:10:13,820 --> 00:10:18,050
edition which has better support and

261
00:10:15,680 --> 00:10:21,290
some additional features to confuse

262
00:10:18,050 --> 00:10:23,060
things slightly dr ee and the enterprise

263
00:10:21,290 --> 00:10:25,459
version got sold to another company

264
00:10:23,060 --> 00:10:30,020
called mer antis in november last year

265
00:10:25,460 --> 00:10:31,910
so i just even more more confusingly but

266
00:10:30,020 --> 00:10:33,560
for the purposes of this talk water

267
00:10:31,910 --> 00:10:34,790
table is dr. Steve so we're just gonna

268
00:10:33,560 --> 00:10:35,869
talk about the open source project we're

269
00:10:34,790 --> 00:10:40,520
not going to talk about the commercial

270
00:10:35,870 --> 00:10:42,380
stuff really at all so when we're

271
00:10:40,520 --> 00:10:44,569
talking about containers first thing to

272
00:10:42,380 --> 00:10:46,760
understand is that they're not virtual

273
00:10:44,570 --> 00:10:48,560
machines and they're all really like

274
00:10:46,760 --> 00:10:50,689
virtual machines what you'll see later

275
00:10:48,560 --> 00:10:52,779
on is when we do the demos they came to

276
00:10:50,690 --> 00:10:54,920
look a lot like virtual machines so

277
00:10:52,779 --> 00:10:57,589
let's just talk a little bit about that

278
00:10:54,920 --> 00:10:59,449
typically when you run a virtual machine

279
00:10:57,589 --> 00:11:01,400
and you are an application on it maybe

280
00:10:59,450 --> 00:11:03,170
an ec2 or on-prem and vSphere or

281
00:11:01,400 --> 00:11:05,420
something about you have an innocence to

282
00:11:03,170 --> 00:11:07,729
the Linux kernel and you have a single

283
00:11:05,420 --> 00:11:10,370
application which runs on top of that

284
00:11:07,730 --> 00:11:12,920
Linux kernel matter of vm there with

285
00:11:10,370 --> 00:11:15,050
containers what you do is you say okay I

286
00:11:12,920 --> 00:11:17,569
got this VM I've got a single instance

287
00:11:15,050 --> 00:11:18,979
of the Linux kernel and then on top of

288
00:11:17,570 --> 00:11:20,959
that I'm gonna put a number of

289
00:11:18,980 --> 00:11:22,370
containers and each one of those

290
00:11:20,959 --> 00:11:24,709
containers is going to have an

291
00:11:22,370 --> 00:11:27,140
application running in it now this

292
00:11:24,709 --> 00:11:28,729
probably is why a lot of companies let's

293
00:11:27,140 --> 00:11:30,500
definitely what I see from companies

294
00:11:28,730 --> 00:11:33,410
we've talked to a lot of companies like

295
00:11:30,500 --> 00:11:36,320
containers because if I'm running easy

296
00:11:33,410 --> 00:11:38,300
to for example I pay per hour that my

297
00:11:36,320 --> 00:11:39,980
ec2 instance is running if it's 1% of

298
00:11:38,300 --> 00:11:43,089
your flies i peter semi-matte money

299
00:11:39,980 --> 00:11:45,680
it is 100% utilized so if I can put more

300
00:11:43,090 --> 00:11:47,630
applications onto my ec2 instance I'm

301
00:11:45,680 --> 00:11:49,099
saving myself money this is why I think

302
00:11:47,630 --> 00:11:50,600
a lot of companies like containers

303
00:11:49,100 --> 00:11:53,300
because they give you a way of doing

304
00:11:50,600 --> 00:11:54,830
that kind of good easy reasonably

305
00:11:53,300 --> 00:11:56,390
successful way of doing that you can be

306
00:11:54,830 --> 00:11:59,030
run several applications where you run

307
00:11:56,390 --> 00:12:01,040
one so you can cut your ec2 builder so

308
00:11:59,030 --> 00:12:04,579
that's kind of an important point to

309
00:12:01,040 --> 00:12:06,920
note so what is a container well it's

310
00:12:04,580 --> 00:12:09,740
not a virtual machine that's a lot like

311
00:12:06,920 --> 00:12:11,540
one but it isn't one literally what a

312
00:12:09,740 --> 00:12:13,220
container is this is an important point

313
00:12:11,540 --> 00:12:15,319
or is danica tiers is just the Linux

314
00:12:13,220 --> 00:12:17,210
process right it's literally just a

315
00:12:15,320 --> 00:12:19,490
process like any other process on a

316
00:12:17,210 --> 00:12:22,550
Linux host except it's isolated and

317
00:12:19,490 --> 00:12:23,870
darker layers various existing limits

318
00:12:22,550 --> 00:12:26,300
technologies things have been around

319
00:12:23,870 --> 00:12:28,460
sometimes for in well over 10 years now

320
00:12:26,300 --> 00:12:29,719
and to create this kind of isolated

321
00:12:28,460 --> 00:12:32,060
environment for each one of our

322
00:12:29,720 --> 00:12:34,270
processes so they can't mess with the

323
00:12:32,060 --> 00:12:36,589
other processes or the underlying host

324
00:12:34,270 --> 00:12:38,569
dogma containerization started with

325
00:12:36,590 --> 00:12:40,790
Linux so it was originally a Linux

326
00:12:38,570 --> 00:12:42,230
taking but you can now get doc or

327
00:12:40,790 --> 00:12:43,640
Windows and we're starting to see some

328
00:12:42,230 --> 00:12:46,100
of our customers on the tests I've done

329
00:12:43,640 --> 00:12:48,860
over this year last year our doctor on

330
00:12:46,100 --> 00:12:50,320
Windows Microsoft could be very large

331
00:12:48,860 --> 00:12:52,370
amount of work into making

332
00:12:50,320 --> 00:12:54,860
containerization docker style

333
00:12:52,370 --> 00:12:56,570
containerization work with Windows so

334
00:12:54,860 --> 00:12:59,210
that's available now if you're using wet

335
00:12:56,570 --> 00:13:01,760
women is Sarah 2019 or above you can get

336
00:12:59,210 --> 00:13:04,190
windows containers and again it's a

337
00:13:01,760 --> 00:13:06,290
single kernel per host I put a little

338
00:13:04,190 --> 00:13:07,790
star next to that because there are some

339
00:13:06,290 --> 00:13:09,530
ways of running containers that actually

340
00:13:07,790 --> 00:13:10,849
although it looks like a container it's

341
00:13:09,530 --> 00:13:12,470
actually a virtual machine which that's

342
00:13:10,850 --> 00:13:14,630
can like go yeah it's a bit confusing

343
00:13:12,470 --> 00:13:16,850
but for the purposes of this talk we'll

344
00:13:14,630 --> 00:13:18,980
stick to two standard Linux containers

345
00:13:16,850 --> 00:13:20,780
and that Carol is shared between each

346
00:13:18,980 --> 00:13:24,920
one of the container running on that

347
00:13:20,780 --> 00:13:26,209
host another thing to mention about this

348
00:13:24,920 --> 00:13:27,500
feeling is kind of important I

349
00:13:26,210 --> 00:13:29,270
definitely annoys a lot of kind of

350
00:13:27,500 --> 00:13:31,010
people who've been in the UNIX world for

351
00:13:29,270 --> 00:13:32,270
a long time it's opera has all this

352
00:13:31,010 --> 00:13:32,870
attention now and they say well this

353
00:13:32,270 --> 00:13:34,510
isn't you

354
00:13:32,870 --> 00:13:36,890
and they're completely correct

355
00:13:34,510 --> 00:13:38,720
containerization started in about 1979

356
00:13:36,890 --> 00:13:41,420
and with the children system calling

357
00:13:38,720 --> 00:13:45,530
unix so very much on you then around

358
00:13:41,420 --> 00:13:47,750
between like 2000 and 2004 freebsd linux

359
00:13:45,530 --> 00:13:51,319
and solaris some level of

360
00:13:47,750 --> 00:13:53,600
containerization if 2008 a protocol

361
00:13:51,320 --> 00:13:55,250
Alexi came along which is still very

362
00:13:53,600 --> 00:13:58,850
active project in the container space

363
00:13:55,250 --> 00:14:00,860
and then 2013 doctor came along which

364
00:13:58,850 --> 00:14:03,440
was based originally or LHC but then and

365
00:14:00,860 --> 00:14:06,170
then did went over to his own kind of

366
00:14:03,440 --> 00:14:08,180
technology stack so this isn't new but

367
00:14:06,170 --> 00:14:09,319
I'm guessing probably people have

368
00:14:08,180 --> 00:14:10,638
realized that they were hearing a lot

369
00:14:09,319 --> 00:14:13,509
more about it in the last couple of

370
00:14:10,639 --> 00:14:16,130
years and that's because of dr. central

371
00:14:13,509 --> 00:14:18,949
and the reason for that is it's easy

372
00:14:16,130 --> 00:14:20,750
it's convenient it works well developers

373
00:14:18,949 --> 00:14:22,819
like it because they can get their

374
00:14:20,750 --> 00:14:24,980
applications they can package them up

375
00:14:22,819 --> 00:14:26,360
and say the docker container and they

376
00:14:24,980 --> 00:14:28,790
can have the same container running on

377
00:14:26,360 --> 00:14:30,800
their laptop and then put it into a CSV

378
00:14:28,790 --> 00:14:32,149
pipeline and take it into a test

379
00:14:30,800 --> 00:14:33,740
environment and run the exact same

380
00:14:32,149 --> 00:14:35,750
container there and it generally works

381
00:14:33,740 --> 00:14:37,670
and then take that exact same container

382
00:14:35,750 --> 00:14:40,790
and put it in production and it works

383
00:14:37,670 --> 00:14:41,870
there too right this is very very handy

384
00:14:40,790 --> 00:14:43,519
this is something that I think that's

385
00:14:41,870 --> 00:14:46,069
why developers attracted to businesses

386
00:14:43,519 --> 00:14:47,810
sips of money developers it's a nice

387
00:14:46,069 --> 00:14:50,420
easy way of doing things typically

388
00:14:47,810 --> 00:14:52,699
whenever we CC ICD environments so

389
00:14:50,420 --> 00:14:54,139
things like Jenkins setups will see

390
00:14:52,699 --> 00:14:57,500
containers because it works very well

391
00:14:54,139 --> 00:14:59,300
with that kind of automation doctors

392
00:14:57,500 --> 00:15:01,189
providing isolation for our processes

393
00:14:59,300 --> 00:15:03,349
and then obviously you could just want

394
00:15:01,189 --> 00:15:05,660
all your Linux processes together on a

395
00:15:03,350 --> 00:15:07,069
single host but they tend to get in the

396
00:15:05,660 --> 00:15:09,560
way of each other things like library

397
00:15:07,069 --> 00:15:11,599
version flashes happen packages have

398
00:15:09,560 --> 00:15:13,430
conflicting versions and doctrine gets

399
00:15:11,600 --> 00:15:15,740
rid of all of that kind of problem so

400
00:15:13,430 --> 00:15:17,750
they provide a level of isolation both

401
00:15:15,740 --> 00:15:20,870
for kind of practical purposes also for

402
00:15:17,750 --> 00:15:22,670
security in doing so though they provide

403
00:15:20,870 --> 00:15:25,610
a lot better and resource utilization

404
00:15:22,670 --> 00:15:27,319
than VMs so a virtual machine image

405
00:15:25,610 --> 00:15:30,139
might be hundreds of megabytes in size

406
00:15:27,319 --> 00:15:31,910
you can get a valid container image in

407
00:15:30,139 --> 00:15:34,160
like five to ten megabytes so you're

408
00:15:31,910 --> 00:15:36,260
talking much smaller and much better

409
00:15:34,160 --> 00:15:39,140
resource utilization

410
00:15:36,260 --> 00:15:41,689
so that's the killer VIP view right

411
00:15:39,140 --> 00:15:42,830
that's the IT view of what this is let's

412
00:15:41,690 --> 00:15:45,200
talk about the pen test review the

413
00:15:42,830 --> 00:15:47,720
attacker view docker is command

414
00:15:45,200 --> 00:15:50,360
execution as a service that's what it

415
00:15:47,720 --> 00:15:52,160
does right so when you run docker what

416
00:15:50,360 --> 00:15:53,260
you're doing is executing commands on a

417
00:15:52,160 --> 00:15:56,719
host

418
00:15:53,260 --> 00:15:58,970
come on diffusion as a service if you

419
00:15:56,720 --> 00:16:00,950
put docker on the network and you make

420
00:15:58,970 --> 00:16:02,720
it available over the network its remote

421
00:16:00,950 --> 00:16:03,740
command execution as a service that was

422
00:16:02,720 --> 00:16:06,140
a pen test without something really

423
00:16:03,740 --> 00:16:08,120
effective I got a thing that if I can

424
00:16:06,140 --> 00:16:10,160
access it will allow me to execute

425
00:16:08,120 --> 00:16:13,400
commands on a host that's exactly what I

426
00:16:10,160 --> 00:16:14,780
pentester I tend to want and one of the

427
00:16:13,400 --> 00:16:17,360
good things from an attackers

428
00:16:14,780 --> 00:16:19,730
perspective is docker has a flexible

429
00:16:17,360 --> 00:16:22,220
security model it's defaults aren't

430
00:16:19,730 --> 00:16:23,810
terrible but it's designed to have a

431
00:16:22,220 --> 00:16:26,120
very flexible so you can add and remove

432
00:16:23,810 --> 00:16:27,800
parts of the security model and that

433
00:16:26,120 --> 00:16:30,050
flexibility in the hands of an attacker

434
00:16:27,800 --> 00:16:32,449
can make it very useful with emulation

435
00:16:30,050 --> 00:16:33,770
run containers and maybe break out to

436
00:16:32,450 --> 00:16:35,510
the underlying system and a way there

437
00:16:33,770 --> 00:16:38,030
that you wouldn't necessarily expect as

438
00:16:35,510 --> 00:16:42,410
possible so Dockers flexibility is kind

439
00:16:38,030 --> 00:16:44,839
of useful for attackers so let's talk

440
00:16:42,410 --> 00:16:46,250
about and make this a bit more practical

441
00:16:44,840 --> 00:16:49,030
so we talked a bit about the theory

442
00:16:46,250 --> 00:16:51,170
there's docker wax of how it's set up

443
00:16:49,030 --> 00:16:52,640
let's talk about how we would actually

444
00:16:51,170 --> 00:16:54,770
attack it let's talk about some local

445
00:16:52,640 --> 00:16:56,720
attacks so for these attacks we're

446
00:16:54,770 --> 00:16:58,850
talking about people who got access I

447
00:16:56,720 --> 00:17:00,140
neither to a host running docker but

448
00:16:58,850 --> 00:17:02,360
maybe they're not pushed and only an

449
00:17:00,140 --> 00:17:04,310
ordinary user or maybe they're gonna

450
00:17:02,360 --> 00:17:05,540
access to a running container and what

451
00:17:04,310 --> 00:17:07,339
they're trying to do is break out of

452
00:17:05,540 --> 00:17:09,409
that container and get current leaf

453
00:17:07,339 --> 00:17:12,109
access on the underlying host who'd we

454
00:17:09,410 --> 00:17:14,150
go around doing that first point to note

455
00:17:12,109 --> 00:17:17,780
in a very important point for security

456
00:17:14,150 --> 00:17:19,130
is the dr. Damon runs as root right so

457
00:17:17,780 --> 00:17:19,670
the dr. Damon because it does a lot of

458
00:17:19,130 --> 00:17:21,380
low-level

459
00:17:19,670 --> 00:17:22,850
things like modifying formal rules

460
00:17:21,380 --> 00:17:24,890
inventing file systems and all that sort

461
00:17:22,849 --> 00:17:27,020
of stuff it runs as route and as a

462
00:17:24,890 --> 00:17:28,340
result it tends to be you know if you

463
00:17:27,020 --> 00:17:31,340
can do something banner that you can get

464
00:17:28,339 --> 00:17:34,040
to you root if you can run docker

465
00:17:31,340 --> 00:17:36,050
commands it's likely you can get rid and

466
00:17:34,040 --> 00:17:37,670
we'll demonstrate how that works it's

467
00:17:36,050 --> 00:17:39,830
possible to configure there so that

468
00:17:37,670 --> 00:17:41,900
that's not an issue but I honestly have

469
00:17:39,830 --> 00:17:44,060
hardly ever seen a client configured

470
00:17:41,900 --> 00:17:45,620
opera in that way so usually if I can

471
00:17:44,060 --> 00:17:47,750
run docker commands I'd be real the host

472
00:17:45,620 --> 00:17:49,790
is just a question of which command do

473
00:17:47,750 --> 00:17:51,470
we want to run and

474
00:17:49,790 --> 00:17:52,879
important point to know from security

475
00:17:51,470 --> 00:17:56,210
architecture standpoint is this is by

476
00:17:52,880 --> 00:17:57,710
designing docker do not regard they

477
00:17:56,210 --> 00:17:59,780
don't have an authorization model just

478
00:17:57,710 --> 00:18:01,580
with docker itself it's designed to be

479
00:17:59,780 --> 00:18:03,470
AI if you can run it you have access to

480
00:18:01,580 --> 00:18:05,389
access to the hosts so whenever I'm

481
00:18:03,470 --> 00:18:06,680
talking to a customer and I say how are

482
00:18:05,390 --> 00:18:07,790
they configuring who's your the access

483
00:18:06,680 --> 00:18:09,470
to it I say

484
00:18:07,790 --> 00:18:11,360
assume that anyone you were going to

485
00:18:09,470 --> 00:18:13,550
give docker command access to is root

486
00:18:11,360 --> 00:18:14,959
just like design your system with that

487
00:18:13,550 --> 00:18:16,820
assumption in mind because that is how

488
00:18:14,960 --> 00:18:18,920
it works that's that it's by design it's

489
00:18:16,820 --> 00:18:22,429
not like some super-secret concept this

490
00:18:18,920 --> 00:18:28,220
is how it's meant to work so let's do a

491
00:18:22,430 --> 00:18:34,880
demo looks can people see my console

492
00:18:28,220 --> 00:18:41,830
okay if that's working yeah awesome

493
00:18:34,880 --> 00:18:46,010
thank you so I am Rory I'm I'm not root

494
00:18:41,830 --> 00:18:48,530
access to your foot and it'll say here

495
00:18:46,010 --> 00:18:50,480
gig here at your daughter y'all good so

496
00:18:48,530 --> 00:18:52,460
I have got a level of access to the

497
00:18:50,480 --> 00:18:54,380
source but I'm not rude if I'm a pen

498
00:18:52,460 --> 00:19:04,400
tester at this point what I want to be

499
00:18:54,380 --> 00:19:05,990
is root what do I do this I'll explain

500
00:19:04,400 --> 00:19:07,720
how this command works in a second but

501
00:19:05,990 --> 00:19:14,060
let's see what happens if I enter oh

502
00:19:07,720 --> 00:19:16,490
look I'm rude there we go and the root

503
00:19:14,060 --> 00:19:19,460
user I'm the real root user that's it

504
00:19:16,490 --> 00:19:20,720
right so that's kind of when I say if

505
00:19:19,460 --> 00:19:23,030
someone has access to run docker

506
00:19:20,720 --> 00:19:24,680
commands their route it's because of

507
00:19:23,030 --> 00:19:27,800
that you've just rude

508
00:19:24,680 --> 00:19:33,380
so let's exit back here we'll go back I

509
00:19:27,800 --> 00:19:35,510
think I just did stop what that was the

510
00:19:33,380 --> 00:19:37,100
command I just ran there is what was

511
00:19:35,510 --> 00:19:40,010
originally called the most pointless

512
00:19:37,100 --> 00:19:43,040
daughter command ever and this was

513
00:19:40,010 --> 00:19:45,560
written in a blog post I'm at 2015 by a

514
00:19:43,040 --> 00:19:47,899
chap called in meal and I call it the

515
00:19:45,560 --> 00:19:49,550
most useful command ever because I use

516
00:19:47,900 --> 00:19:52,640
this on tests all the time

517
00:19:49,550 --> 00:19:55,190
well this basically does is it says okay

518
00:19:52,640 --> 00:19:57,380
I wonder on top come on so then I run so

519
00:19:55,190 --> 00:19:59,750
docker run this just says give me an

520
00:19:57,380 --> 00:20:02,210
interactive shell insight that the

521
00:19:59,750 --> 00:20:03,559
docker container I'm going to run this

522
00:20:02,210 --> 00:20:05,870
bit here which we'll talk about

523
00:20:03,559 --> 00:20:06,710
about more later on this is take away

524
00:20:05,870 --> 00:20:09,320
all the security

525
00:20:06,710 --> 00:20:11,269
so you remember I talked about - -

526
00:20:09,320 --> 00:20:13,158
privilege I talk about privileged and

527
00:20:11,269 --> 00:20:14,509
doctor having a flexible model this

528
00:20:13,159 --> 00:20:16,159
essentially is that flexibility in

529
00:20:14,509 --> 00:20:16,789
action so this is a take away all the

530
00:20:16,159 --> 00:20:19,730
security

531
00:20:16,789 --> 00:20:21,200
usually in docker you don't get you get

532
00:20:19,730 --> 00:20:22,549
your own private networking stack so

533
00:20:21,200 --> 00:20:24,080
this is now I don't want that I'd like

534
00:20:22,549 --> 00:20:26,690
the hosts networking

535
00:20:24,080 --> 00:20:29,149
I'd like the hosts process list and then

536
00:20:26,690 --> 00:20:31,340
I'd like to meddle entire fastest turn

537
00:20:29,149 --> 00:20:34,518
from the host insider directory and

538
00:20:31,340 --> 00:20:36,439
share it to that directory effective

539
00:20:34,519 --> 00:20:37,399
alike is basically give me a root shell

540
00:20:36,440 --> 00:20:40,100
on the machine

541
00:20:37,399 --> 00:20:41,748
that's literally Matt that's yeah so

542
00:20:40,100 --> 00:20:43,428
that if you ever ever ever says to you

543
00:20:41,749 --> 00:20:44,929
you know I've got dog praxis does not

544
00:20:43,429 --> 00:20:49,429
mean up but root the answer is yes just

545
00:20:44,929 --> 00:20:50,539
learn that what really will so that's

546
00:20:49,429 --> 00:20:52,340
the first thing if you have to or

547
00:20:50,539 --> 00:20:55,249
accessing your fan tester from that you

548
00:20:52,340 --> 00:20:58,158
get to be really the second thing to

549
00:20:55,249 --> 00:21:00,559
note is that the way that docker works

550
00:20:58,159 --> 00:21:02,360
is the command line claim you're running

551
00:21:00,559 --> 00:21:04,039
there talks to the docker demon over a

552
00:21:02,360 --> 00:21:05,449
socket pal

553
00:21:04,039 --> 00:21:07,669
so there's actually there is a docker

554
00:21:05,450 --> 00:21:09,379
socket and a socket if you haven't come

555
00:21:07,669 --> 00:21:11,389
across there's just a special linux file

556
00:21:09,379 --> 00:21:13,519
that lets you talk to a server without

557
00:21:11,389 --> 00:21:16,820
opening a network port so as you talk to

558
00:21:13,519 --> 00:21:18,860
a file you saved it commands the reason

559
00:21:16,820 --> 00:21:21,649
I mentioned this is a lot of docker

560
00:21:18,860 --> 00:21:26,269
images will suggest mounting the docker

561
00:21:21,649 --> 00:21:28,008
socket inside the container and that's a

562
00:21:26,269 --> 00:21:29,929
dangerous thing to do I've seen this

563
00:21:28,009 --> 00:21:31,399
quite a lot in monitoring tools in it

564
00:21:29,929 --> 00:21:32,749
management tools so anything that says

565
00:21:31,399 --> 00:21:35,090
it wants to like monitor docker or

566
00:21:32,749 --> 00:21:37,759
manage docker will say he just made the

567
00:21:35,090 --> 00:21:40,369
the darker socket inside inside the

568
00:21:37,759 --> 00:21:41,960
container and not be great this is

569
00:21:40,369 --> 00:21:44,178
effectively giving my third party

570
00:21:41,960 --> 00:21:45,409
software root on the host so if you get

571
00:21:44,179 --> 00:21:47,600
one or two tool when you do that make

572
00:21:45,409 --> 00:21:49,850
very sure you trust someone during tool

573
00:21:47,600 --> 00:22:00,379
because it will give them real on the

574
00:21:49,850 --> 00:22:02,209
hosts so we can demonstrate that what

575
00:22:00,379 --> 00:22:04,100
I'm gonna do here I'm gonna run another

576
00:22:02,210 --> 00:22:05,090
dollar command but I'm not running any

577
00:22:04,100 --> 00:22:06,619
of that stuff I did before with

578
00:22:05,090 --> 00:22:09,289
privilege right so there's no - -

579
00:22:06,619 --> 00:22:10,610
privileged here there is no and removing

580
00:22:09,289 --> 00:22:12,919
the layers of isolation the docker

581
00:22:10,610 --> 00:22:14,959
proper provides all I'm doing in this

582
00:22:12,919 --> 00:22:17,360
command here is I'm saying move the

583
00:22:14,960 --> 00:22:19,040
docker socket so this special socket pal

584
00:22:17,360 --> 00:22:21,949
inside the container at the same

585
00:22:19,040 --> 00:22:23,809
location so mount a foreign dollars off

586
00:22:21,950 --> 00:22:25,220
and then we're gonna run this container

587
00:22:23,809 --> 00:22:27,260
image it's just just one I have a lot of

588
00:22:25,220 --> 00:22:30,740
tools loaded into and we'll run a bash

589
00:22:27,260 --> 00:22:33,410
shell so when we do that we get dropped

590
00:22:30,740 --> 00:22:35,059
into a car shell notably I do I'm

591
00:22:33,410 --> 00:22:36,410
isolated here right this is why docker

592
00:22:35,059 --> 00:22:38,299
containers look a bit like virtual

593
00:22:36,410 --> 00:22:40,580
machines right cuz I've got my own IP

594
00:22:38,299 --> 00:22:43,490
address I've got my own process list and

595
00:22:40,580 --> 00:22:45,860
I've got my own file system but I've

596
00:22:43,490 --> 00:22:47,990
also got access to the docker socket

597
00:22:45,860 --> 00:22:50,990
because it was meant to didn't set the

598
00:22:47,990 --> 00:22:57,140
container so once that's happened we

599
00:22:50,990 --> 00:22:59,720
just okay our most useful front ever run

600
00:22:57,140 --> 00:23:02,020
it and ruin the host again right so here

601
00:22:59,720 --> 00:23:04,730
I am I'm back on the host and I'm gonna

602
00:23:02,020 --> 00:23:06,710
and the full root user so if I do yes

603
00:23:04,730 --> 00:23:10,669
yeah for something and the full root

604
00:23:06,710 --> 00:23:12,380
user so that again if you give software

605
00:23:10,669 --> 00:23:14,840
access to the docker socket or if you're

606
00:23:12,380 --> 00:23:16,100
a pen tester you're doing a test and you

607
00:23:14,840 --> 00:23:17,840
encounter you got yourself into a

608
00:23:16,100 --> 00:23:20,030
container and you have dropper sock

609
00:23:17,840 --> 00:23:20,540
access then you get to root that's how

610
00:23:20,030 --> 00:23:22,970
it works

611
00:23:20,540 --> 00:23:25,370
um this is also kind of useful for CTF

612
00:23:22,970 --> 00:23:27,470
sometimes CTF people will go to the dock

613
00:23:25,370 --> 00:23:28,610
or socket in as a kind of a trip so you

614
00:23:27,470 --> 00:23:29,960
land in a container and it's how you

615
00:23:28,610 --> 00:23:32,719
pray okay and that's how you break it

616
00:23:29,960 --> 00:23:37,490
you just run that come on so I'll get

617
00:23:32,720 --> 00:23:41,330
back to my host again so so that's

618
00:23:37,490 --> 00:23:43,010
doctor socket I'd say the other one to

619
00:23:41,330 --> 00:23:46,668
mention the other one to talk about with

620
00:23:43,010 --> 00:23:48,830
docker containers is this - - privileged

621
00:23:46,669 --> 00:23:50,900
flag this is something which doctor came

622
00:23:48,830 --> 00:23:52,790
up with and I don't really I wish it

623
00:23:50,900 --> 00:23:55,309
wasn't there as a security person but as

624
00:23:52,790 --> 00:23:58,520
a fan tester it's kind of cool a lot of

625
00:23:55,309 --> 00:24:00,559
container images will suggest giving

626
00:23:58,520 --> 00:24:02,629
their programs they what run as I

627
00:24:00,559 --> 00:24:03,440
container - one is privileged it's a

628
00:24:02,630 --> 00:24:05,780
really bad idea

629
00:24:03,440 --> 00:24:08,090
essentially this is remove all of docker

630
00:24:05,780 --> 00:24:09,530
security isolation if you do that you're

631
00:24:08,090 --> 00:24:11,600
saying she's saying give whatever is

632
00:24:09,530 --> 00:24:13,970
running inside this container access to

633
00:24:11,600 --> 00:24:16,730
the underlying host generally as route

634
00:24:13,970 --> 00:24:19,370
so don't do that but it's something we

635
00:24:16,730 --> 00:24:22,220
do see and there are the odd occasion

636
00:24:19,370 --> 00:24:24,860
where it's justified but the majority of

637
00:24:22,220 --> 00:24:26,330
time I I think if it kind of like in a

638
00:24:24,860 --> 00:24:27,500
Windows domain giving someone to me an

639
00:24:26,330 --> 00:24:29,090
admin because they need some extra

640
00:24:27,500 --> 00:24:30,710
rights you say oh I don't know exactly

641
00:24:29,090 --> 00:24:33,350
what you need I was given to me that

642
00:24:30,710 --> 00:24:34,970
kinda like that it's it's it's a bit of

643
00:24:33,350 --> 00:24:38,300
a lazy way of doing it so it's not a

644
00:24:34,970 --> 00:24:40,070
great idea well it's uh it's definitely

645
00:24:38,300 --> 00:24:42,290
something which we see sometimes on

646
00:24:40,070 --> 00:24:44,750
tests so if we've got privileged

647
00:24:42,290 --> 00:24:47,420
container we can break out of it using

648
00:24:44,750 --> 00:24:49,700
this which is cool because I like

649
00:24:47,420 --> 00:24:51,350
exploits that fit inside tweets and this

650
00:24:49,700 --> 00:24:54,070
exploit fit it inside a tweet from a

651
00:24:51,350 --> 00:24:54,070
chap called Felix

652
00:24:58,220 --> 00:25:02,930
which our Linux feature to allow you

653
00:25:00,170 --> 00:25:05,540
from inside a polish container to

654
00:25:02,930 --> 00:25:07,250
execute commands on the underlying host

655
00:25:05,540 --> 00:25:09,320
so if I'm in a container and it's

656
00:25:07,250 --> 00:25:11,420
privileged to have a pen tester you get

657
00:25:09,320 --> 00:25:13,909
a copy of this script get it inside the

658
00:25:11,420 --> 00:25:18,160
container and you can go from there so

659
00:25:13,910 --> 00:25:29,300
we can demonstrate that to demonstrate

660
00:25:18,160 --> 00:25:32,630
so another Noah run container is we're

661
00:25:29,300 --> 00:25:36,649
doing - mine is privileged but I'm not

662
00:25:32,630 --> 00:25:37,820
doing the docker sake and I am NOT I'm

663
00:25:36,650 --> 00:25:59,030
not meant to give any other file systems

664
00:25:37,820 --> 00:26:00,889
I'm just going to do - - privileged yeah

665
00:25:59,030 --> 00:26:08,030
you're you're chirping in and out a

666
00:26:00,890 --> 00:26:14,330
little bit on your audio roars push on

667
00:26:08,030 --> 00:26:15,560
and all hopefully it's been fine for the

668
00:26:14,330 --> 00:26:17,389
most part that I just got a little chirp

669
00:26:15,560 --> 00:26:21,320
yeah less about your back you later I

670
00:26:17,390 --> 00:26:23,300
mean I've learned a lot nice monster it

671
00:26:21,320 --> 00:26:24,320
shouldn't be bad with I will say that

672
00:26:23,300 --> 00:26:25,639
you'll avoid live in the middle of

673
00:26:24,320 --> 00:26:28,520
nowhere I actually have decent internet

674
00:26:25,640 --> 00:26:30,500
I have full fiber so I'm gonna be really

675
00:26:28,520 --> 00:26:32,540
disappointed it is that so anyway let's

676
00:26:30,500 --> 00:26:37,640
let's let's hopefully it'll stay happy

677
00:26:32,540 --> 00:26:41,290
and it'll do its stuff so we're now

678
00:26:37,640 --> 00:26:41,290
inside a container again

679
00:26:42,220 --> 00:26:47,330
we only have the process list for inside

680
00:26:44,480 --> 00:26:49,250
the container and we only have the IP

681
00:26:47,330 --> 00:26:51,050
address right so we're a restricted

682
00:26:49,250 --> 00:26:53,510
we're inside a container but we've got

683
00:26:51,050 --> 00:26:55,370
this - manners privileged so we can use

684
00:26:53,510 --> 00:27:00,490
our fancy script to actually try and

685
00:26:55,370 --> 00:27:03,439
break out so I thought the script meant

686
00:27:00,490 --> 00:27:04,670
and I'm one if I were on that's the

687
00:27:03,440 --> 00:27:06,680
script essentially that's the script

688
00:27:04,670 --> 00:27:09,800
page or the slide and we're gonna run

689
00:27:06,680 --> 00:27:11,780
this convict now we're on that what we

690
00:27:09,800 --> 00:27:13,639
see is the information the underlying

691
00:27:11,780 --> 00:27:15,410
host so that's my underlying host IP

692
00:27:13,640 --> 00:27:17,180
address and everything else so if you

693
00:27:15,410 --> 00:27:19,040
ever land that a privilege container you

694
00:27:17,180 --> 00:27:22,670
just run this escape shred script and

695
00:27:19,040 --> 00:27:28,520
then where you go we can also do

696
00:27:22,670 --> 00:27:30,950
something like on your blog post and the

697
00:27:28,520 --> 00:27:32,060
answer is ever so privileged containers

698
00:27:30,950 --> 00:27:34,580
are a super bad idea

699
00:27:32,060 --> 00:27:36,620
super dangerous and if you're a pen test

700
00:27:34,580 --> 00:27:38,090
are fairly easy to break out off you

701
00:27:36,620 --> 00:27:40,280
essentially just get that the scripture

702
00:27:38,090 --> 00:27:45,169
of the tweet and and you can run

703
00:27:40,280 --> 00:27:47,840
commands quite happily as route I let's

704
00:27:45,170 --> 00:27:50,240
keep a sure it's just this look at that

705
00:27:47,840 --> 00:27:55,040
I just I just put that into a into a

706
00:27:50,240 --> 00:28:05,210
file so that's just all this escape of

707
00:27:55,040 --> 00:28:07,280
shows I can actually show you it yeah so

708
00:28:05,210 --> 00:28:10,340
it's literally just the justice cryptic

709
00:28:07,280 --> 00:28:11,840
erratic this is our lexer I mean this

710
00:28:10,340 --> 00:28:15,889
container image here this is just one of

711
00:28:11,840 --> 00:28:17,810
my doctor hot beverages and on docker

712
00:28:15,890 --> 00:28:20,030
hub you can just get that which is mine

713
00:28:17,810 --> 00:28:21,350
obviously one of the important things I

714
00:28:20,030 --> 00:28:23,450
don't we talk about too much on this

715
00:28:21,350 --> 00:28:25,280
talk is don't pull random images from

716
00:28:23,450 --> 00:28:26,800
dog or hub you don't trust because they

717
00:28:25,280 --> 00:28:29,210
could have literally anything in them

718
00:28:26,800 --> 00:28:33,070
but if you want that's on github as well

719
00:28:29,210 --> 00:28:33,070
so you can seal the toolbar installed

720
00:28:35,540 --> 00:28:43,190
so or a pre-release containers so other

721
00:28:40,400 --> 00:28:44,890
attacks as well yeah there it is it's a

722
00:28:43,190 --> 00:28:47,990
really cool tree it's a really cool hack

723
00:28:44,890 --> 00:28:49,730
other ways we typically see with docker

724
00:28:47,990 --> 00:28:52,010
containers on their own people breaking

725
00:28:49,730 --> 00:28:53,960
out in appropriate volume mounts

726
00:28:52,010 --> 00:28:55,970
so maybe not mounting the entire post

727
00:28:53,960 --> 00:28:58,550
file system but the mounting something

728
00:28:55,970 --> 00:29:00,170
like etc' inside a container is not

729
00:28:58,550 --> 00:29:03,470
totally unheard of

730
00:29:00,170 --> 00:29:05,600
that's an avenue to look for and kernel

731
00:29:03,470 --> 00:29:07,460
vulnerabilities so this shared kernel is

732
00:29:05,600 --> 00:29:09,469
probably the major difference between a

733
00:29:07,460 --> 00:29:11,750
docker container and its default setup a

734
00:29:09,470 --> 00:29:13,430
virtual machine if people are running

735
00:29:11,750 --> 00:29:14,780
out of date kernels and I think one of

736
00:29:13,430 --> 00:29:16,970
the speakers before was saying that let

737
00:29:14,780 --> 00:29:18,080
him this morning was saying that there

738
00:29:16,970 --> 00:29:18,890
one of the things they noticed was the

739
00:29:18,080 --> 00:29:20,389
container host

740
00:29:18,890 --> 00:29:23,210
don't get me booted or don't get patched

741
00:29:20,390 --> 00:29:25,550
very often that's that's true we see

742
00:29:23,210 --> 00:29:27,290
that I have seen things like your

743
00:29:25,550 --> 00:29:29,360
vanities clusters where they have an

744
00:29:27,290 --> 00:29:30,800
uptime of over a year which he tested me

745
00:29:29,360 --> 00:29:32,179
you're not touching the kernel of this

746
00:29:30,800 --> 00:29:33,980
host otherwise it wouldn't have the

747
00:29:32,180 --> 00:29:36,470
uptime of over a year so kernel

748
00:29:33,980 --> 00:29:38,000
vulnerabilities as well are another one

749
00:29:36,470 --> 00:29:40,100
for making outdoor containers although

750
00:29:38,000 --> 00:29:42,260
if you keep your kernel up today then

751
00:29:40,100 --> 00:29:43,969
unless your attackers are packing

752
00:29:42,260 --> 00:29:47,570
O'Day's you probably don't have too much

753
00:29:43,970 --> 00:29:52,490
to worry about there so don't promote

754
00:29:47,570 --> 00:29:54,379
attacks if you are actually do

755
00:29:52,490 --> 00:29:56,300
over the network so by default docker

756
00:29:54,380 --> 00:29:58,160
doesn't listen remotely so by default

757
00:29:56,300 --> 00:30:00,080
docker is actually quite good it doesn't

758
00:29:58,160 --> 00:30:02,360
have an attack surface on the network it

759
00:30:00,080 --> 00:30:04,939
only listens on the socket file which is

760
00:30:02,360 --> 00:30:06,979
var run docker dot sock however it is

761
00:30:04,940 --> 00:30:11,210
possible to configure it to listen

762
00:30:06,980 --> 00:30:15,440
remotely the two ports to watch for 2375

763
00:30:11,210 --> 00:30:18,380
TCP is the default unencrypted port and

764
00:30:15,440 --> 00:30:20,420
at this port has no authentication and

765
00:30:18,380 --> 00:30:22,400
authorization by default it's

766
00:30:20,420 --> 00:30:25,540
theoretically possible to add it but I

767
00:30:22,400 --> 00:30:28,100
any time I see that port it's not it's

768
00:30:25,540 --> 00:30:30,260
it's this is literally remote code

769
00:30:28,100 --> 00:30:32,059
execution as a service if you see that

770
00:30:30,260 --> 00:30:36,679
poor you probably gonna be able to

771
00:30:32,059 --> 00:30:38,990
basically execute code of the host 2376

772
00:30:36,679 --> 00:30:40,640
is the default encrypted port that

773
00:30:38,990 --> 00:30:41,990
generally has client certificate

774
00:30:40,640 --> 00:30:44,960
authentication so it's typically

775
00:30:41,990 --> 00:30:47,480
authenticated but but this is the one

776
00:30:44,960 --> 00:30:51,080
that there is a of serious concern if

777
00:30:47,480 --> 00:30:53,270
you see it and we do see it this isn't

778
00:30:51,080 --> 00:30:57,770
like a theoretical thing we see this on

779
00:30:53,270 --> 00:30:59,000
assessments reasonably regularly so the

780
00:30:57,770 --> 00:31:01,280
way the doctor works the way that the

781
00:30:59,000 --> 00:31:02,720
docker demon works is it's a REST API

782
00:31:01,280 --> 00:31:05,570
alright so the docker daemon is

783
00:31:02,720 --> 00:31:09,620
literally just a an HTTP web service

784
00:31:05,570 --> 00:31:12,470
style REST API you send it any valid

785
00:31:09,620 --> 00:31:13,459
HTTP command and it will act on it it's

786
00:31:12,470 --> 00:31:16,070
generally on earth educated under

787
00:31:13,460 --> 00:31:19,880
cryptid as I said because it's a REST

788
00:31:16,070 --> 00:31:21,740
API it's literally just you know a HTTP

789
00:31:19,880 --> 00:31:24,140
thing we don't need any fancy tools you

790
00:31:21,740 --> 00:31:26,720
leaked hacking tools we can use curl so

791
00:31:24,140 --> 00:31:28,760
we can become hack systems with curl so

792
00:31:26,720 --> 00:31:33,070
let's let's let's see if we can do that

793
00:31:28,760 --> 00:31:37,610
so what I'm going to do is on our host

794
00:31:33,070 --> 00:31:40,639
so on this host I have got the daughter

795
00:31:37,610 --> 00:31:42,979
daemon listening remotely one thing

796
00:31:40,640 --> 00:31:44,900
actually to know is even even cycling

797
00:31:42,980 --> 00:31:46,130
servers where they will configure it

798
00:31:44,900 --> 00:31:48,650
list and remotely indeed there was one

799
00:31:46,130 --> 00:31:49,820
on a job recently I think last week

800
00:31:48,650 --> 00:31:52,520
I've also seen a lot of development

801
00:31:49,820 --> 00:31:56,210
tools will recommend that developers

802
00:31:52,520 --> 00:31:58,580
make doctor listen on localhost to 375

803
00:31:56,210 --> 00:32:00,830
which isn't obviously as dangerous but

804
00:31:58,580 --> 00:32:02,120
still isn't a great idea so it's worth

805
00:32:00,830 --> 00:32:05,090
noting couple of ways that could happen

806
00:32:02,120 --> 00:32:05,989
so how would we hack this with pearl

807
00:32:05,090 --> 00:32:07,730
right

808
00:32:05,990 --> 00:32:09,289
we're gonna try practicing this thing

809
00:32:07,730 --> 00:32:10,970
and actually hack mr. dinner and

810
00:32:09,289 --> 00:32:14,029
actually hack the host with just curl

811
00:32:10,970 --> 00:32:17,929
and SSH the first thing we need to do is

812
00:32:14,029 --> 00:32:20,179
we need to create a an image make sure

813
00:32:17,929 --> 00:32:22,580
the image is on the docker setup on a

814
00:32:20,179 --> 00:32:23,539
given host and the so we've got a curl

815
00:32:22,580 --> 00:32:25,549
command that looks a bit like this

816
00:32:23,539 --> 00:32:27,890
here's our 2375 port

817
00:32:25,549 --> 00:32:30,500
we're going to see images create so

818
00:32:27,890 --> 00:32:32,659
create me a new image from the dropper

819
00:32:30,500 --> 00:32:33,799
hub image our pint container tools so

820
00:32:32,659 --> 00:32:39,909
let's just play the image that used

821
00:32:33,799 --> 00:32:39,908
before and when we do that it says sure

822
00:32:53,330 --> 00:33:06,210
okay lovely what we can do is we can say

823
00:33:01,919 --> 00:33:08,729
okay I want to create a container from

824
00:33:06,210 --> 00:33:10,379
that image so you see here this is just

825
00:33:08,729 --> 00:33:12,330
again it's quite kind of standard resti

826
00:33:10,379 --> 00:33:13,918
yeah the end point is just containers

827
00:33:12,330 --> 00:33:15,529
create which makes sense right so we've

828
00:33:13,919 --> 00:33:18,389
gotta we want to start a new container

829
00:33:15,529 --> 00:33:19,679
based on that image but notably what

830
00:33:18,389 --> 00:33:21,869
we're gonna see here is give me a

831
00:33:19,679 --> 00:33:23,070
privileged container so from remote we

832
00:33:21,869 --> 00:33:24,988
can just say hey give me a privileged

833
00:33:23,070 --> 00:33:26,489
container just like we did before when

834
00:33:24,989 --> 00:33:28,109
you find out that privileged essentially

835
00:33:26,489 --> 00:33:29,359
gives you a route on the host you can do

836
00:33:28,109 --> 00:33:32,339
it remotely

837
00:33:29,359 --> 00:33:34,649
so it says yep sure and it comes back

838
00:33:32,339 --> 00:33:37,070
with this in the response what we're

839
00:33:34,649 --> 00:33:39,869
seeing here is we get a sha-256 hash

840
00:33:37,070 --> 00:33:43,320
docker everything doctor does images

841
00:33:39,869 --> 00:33:45,149
networks containers it identifies them

842
00:33:43,320 --> 00:33:47,369
with sha hashes i generally give you a

843
00:33:45,149 --> 00:33:49,349
friendly named work with as well but but

844
00:33:47,369 --> 00:33:50,549
the shark hash is the real name so we

845
00:33:49,349 --> 00:33:52,259
need this because this is now our

846
00:33:50,549 --> 00:33:54,119
containers name and we want to do

847
00:33:52,259 --> 00:33:57,719
anything with it we have to we have to

848
00:33:54,119 --> 00:33:59,039
use this so for the next thing what we

849
00:33:57,719 --> 00:34:03,359
need to do is we need to actually start

850
00:33:59,039 --> 00:34:09,929
that kikuna so we've got it on them to

851
00:34:03,359 --> 00:34:11,879
start up so ii command the command me

852
00:34:09,929 --> 00:34:14,460
issue so just looks a bit like this we

853
00:34:11,879 --> 00:34:15,659
say get the container called this which

854
00:34:14,460 --> 00:34:18,409
is just the name of the container and

855
00:34:15,659 --> 00:34:18,409
start it

856
00:34:18,889 --> 00:34:22,399
and this shirt so we've moved got a

857
00:34:20,449 --> 00:34:23,808
running container so we've created a

858
00:34:22,399 --> 00:34:25,339
privileged container and a host remotely

859
00:34:23,809 --> 00:34:28,129
this could be our other Network anything

860
00:34:25,339 --> 00:34:30,168
you can get to on to 375 and we can

861
00:34:28,129 --> 00:34:32,409
create a privileged container privilege

862
00:34:30,168 --> 00:34:36,828
frost essentially running on that host

863
00:34:32,409 --> 00:34:39,019
and this is because to Iran SSH inside

864
00:34:36,829 --> 00:34:41,149
it so there's an SSH daemon running

865
00:34:39,018 --> 00:34:42,768
inside my container important point to

866
00:34:41,149 --> 00:34:44,359
know about containers is usually whilst

867
00:34:42,768 --> 00:34:45,739
they might run one process there's

868
00:34:44,359 --> 00:34:47,569
nothing to stop you running as many

869
00:34:45,739 --> 00:34:49,729
processes are you like inside the

870
00:34:47,569 --> 00:34:51,199
container so you can run SSH inside the

871
00:34:49,730 --> 00:34:53,199
container it's not generally considered

872
00:34:51,199 --> 00:34:58,250
a good idea but it's good for fantastic

873
00:34:53,199 --> 00:35:00,439
so once I've got her I can do this which

874
00:34:58,250 --> 00:35:04,010
is a look at the logs of my kid so my

875
00:35:00,440 --> 00:35:15,410
container is set up I need to actually

876
00:35:04,010 --> 00:35:19,490
give it the idea what this container

877
00:35:15,410 --> 00:35:20,779
does is it actually sets up a new root

878
00:35:19,490 --> 00:35:22,279
password so obviously I don't want to

879
00:35:20,779 --> 00:35:23,720
put my root password inside my docker

880
00:35:22,279 --> 00:35:24,710
image because if you hard could root

881
00:35:23,720 --> 00:35:27,890
password and your program and just

882
00:35:24,710 --> 00:35:29,210
people both steal them from you so what

883
00:35:27,890 --> 00:35:31,549
I've done is I've got I know got a host

884
00:35:29,210 --> 00:35:33,200
I continue the running on that host with

885
00:35:31,549 --> 00:35:35,599
the IP address and with that root

886
00:35:33,200 --> 00:35:37,819
password and I can SSH to it so I do if

887
00:35:35,599 --> 00:35:46,430
I'm running a stage or a high port so it

888
00:35:37,819 --> 00:35:59,119
doesn't reflect well when it'll say

889
00:35:46,430 --> 00:36:01,839
you've got my hosts so let me know so I

890
00:35:59,119 --> 00:36:06,079
can connect to that give it my password

891
00:36:01,839 --> 00:36:08,058
and I mean the container on the hood I

892
00:36:06,079 --> 00:36:09,829
can be done over any network all right

893
00:36:08,059 --> 00:36:11,660
so you can do this remotely and now I'm

894
00:36:09,829 --> 00:36:17,470
in a privileged container and so now

895
00:36:11,660 --> 00:36:17,470
I've got my escape route

896
00:36:21,810 --> 00:36:28,060
and number so I'm Groot on the

897
00:36:25,420 --> 00:36:30,760
underlying host so if you get darker as

898
00:36:28,060 --> 00:36:33,609
your pentester and you get four 2375

899
00:36:30,760 --> 00:36:35,380
even if you only have pearl you can

900
00:36:33,609 --> 00:36:37,299
basically get the point of compromising

901
00:36:35,380 --> 00:36:39,339
the host because docker is remote

902
00:36:37,300 --> 00:36:40,750
command execution is a service which is

903
00:36:39,339 --> 00:36:45,700
exactly as a pen tester what we like to

904
00:36:40,750 --> 00:36:48,250
see so obviously no one would do that

905
00:36:45,700 --> 00:36:49,899
right this would never happen normally

906
00:36:48,250 --> 00:36:51,910
they ever do this in the real world this

907
00:36:49,900 --> 00:36:53,800
is a showdown search I did two days ago

908
00:36:51,910 --> 00:36:55,420
when I was put together the slides for

909
00:36:53,800 --> 00:36:57,010
this at the moment there are five

910
00:36:55,420 --> 00:36:59,440
thousand seven hundred and seventy

911
00:36:57,010 --> 00:37:02,710
instances of what is pretty definitely

912
00:36:59,440 --> 00:37:05,830
docker running unencrypted RCE as a

913
00:37:02,710 --> 00:37:08,050
service these are pretty much awkward to

914
00:37:05,830 --> 00:37:10,720
be running cryptic way meaning people

915
00:37:08,050 --> 00:37:13,150
who like cryptic remaining have worked

916
00:37:10,720 --> 00:37:15,399
out that docker is remote code execution

917
00:37:13,150 --> 00:37:17,890
as a service and you can download manila

918
00:37:15,400 --> 00:37:20,530
miners on to hosts and use all people

919
00:37:17,890 --> 00:37:23,440
CPU to made wherever coin you're

920
00:37:20,530 --> 00:37:25,060
currently mining this number goes up and

921
00:37:23,440 --> 00:37:25,900
down actually five cents it's quite a

922
00:37:25,060 --> 00:37:27,520
lot higher that used to be used for

923
00:37:25,900 --> 00:37:28,990
three days more people doing this people

924
00:37:27,520 --> 00:37:34,210
do make this mistake it definitely

925
00:37:28,990 --> 00:37:36,160
happens so that was docker and I was a

926
00:37:34,210 --> 00:37:38,530
kind of reasonably quick went through so

927
00:37:36,160 --> 00:37:41,170
the doc Griselda is a fairly simple

928
00:37:38,530 --> 00:37:42,670
product it doesn't have you if you get

929
00:37:41,170 --> 00:37:44,680
access to your right that's just the way

930
00:37:42,670 --> 00:37:45,280
it is it's not really designed for

931
00:37:44,680 --> 00:37:47,109
anything else

932
00:37:45,280 --> 00:37:49,570
however docker is designed to run

933
00:37:47,109 --> 00:37:50,440
containers on one host so where you're

934
00:37:49,570 --> 00:37:53,050
doing dog where you're running

935
00:37:50,440 --> 00:37:54,849
containers of a single machine however

936
00:37:53,050 --> 00:37:56,890
if I'm a business I want to run

937
00:37:54,849 --> 00:37:59,890
containers on lots of machines so I want

938
00:37:56,890 --> 00:38:02,348
to run clusters of ten one hundred you

939
00:37:59,890 --> 00:38:05,020
know thousand VMs and I want to move

940
00:38:02,349 --> 00:38:06,790
containers around those easily and I

941
00:38:05,020 --> 00:38:08,859
want to deploy sets of containers onto

942
00:38:06,790 --> 00:38:10,930
those hosts easily and that's where

943
00:38:08,859 --> 00:38:13,770
accurate ease comes in it's designed for

944
00:38:10,930 --> 00:38:13,770
that kind of scenario

945
00:38:15,320 --> 00:38:20,180
Nettie's is container clustering and

946
00:38:18,080 --> 00:38:23,200
orchestration so it's literally taking

947
00:38:20,180 --> 00:38:25,850
these processes these containers and

948
00:38:23,200 --> 00:38:28,580
having sex of them deployed across the

949
00:38:25,850 --> 00:38:31,450
set of VMs it was started by some people

950
00:38:28,580 --> 00:38:33,890
within Google it was more of an internal

951
00:38:31,450 --> 00:38:36,410
product the Google have got called board

952
00:38:33,890 --> 00:38:39,770
and it's visibly implementation of those

953
00:38:36,410 --> 00:38:41,720
ideas these days is open source or

954
00:38:39,770 --> 00:38:44,090
unmanaged or I the cloud native

955
00:38:41,720 --> 00:38:45,709
computing foundation so CN CF if you

956
00:38:44,090 --> 00:38:48,320
haven't come across them they are a

957
00:38:45,710 --> 00:38:50,210
subset of the Linux Foundation and they

958
00:38:48,320 --> 00:38:51,770
manage and cloud native projects they've

959
00:38:50,210 --> 00:38:53,780
got like a wide range of projects that

960
00:38:51,770 --> 00:38:55,730
they essentially kind of help to foster

961
00:38:53,780 --> 00:38:58,100
adoption of an unmarked and all that

962
00:38:55,730 --> 00:38:59,720
good stuff one important thing that we

963
00:38:58,100 --> 00:39:01,759
find that trips companies up when

964
00:38:59,720 --> 00:39:03,500
they're deploying kubernetes is that

965
00:39:01,760 --> 00:39:05,630
it's still quite rapidly developing

966
00:39:03,500 --> 00:39:08,120
there's one release every three months

967
00:39:05,630 --> 00:39:11,960
or so the last release was I think three

968
00:39:08,120 --> 00:39:14,450
days ago and the only support the latest

969
00:39:11,960 --> 00:39:16,400
three releases what that means in

970
00:39:14,450 --> 00:39:18,799
practice is if you're running humanities

971
00:39:16,400 --> 00:39:20,420
you have to upgrade your clusters every

972
00:39:18,800 --> 00:39:22,940
one of you nodes in your clusters at

973
00:39:20,420 --> 00:39:24,260
least every nine months so otherwise

974
00:39:22,940 --> 00:39:25,910
you're at support and if there's a

975
00:39:24,260 --> 00:39:27,260
security vulnerability which like

976
00:39:25,910 --> 00:39:28,970
anything there are always security

977
00:39:27,260 --> 00:39:31,790
vulnerabilities your app support and you

978
00:39:28,970 --> 00:39:33,649
won't get patches there are no long-term

979
00:39:31,790 --> 00:39:35,270
support releases really of cuber

980
00:39:33,650 --> 00:39:38,510
Nettie's and there's one or two options

981
00:39:35,270 --> 00:39:41,259
but not many so what no did not my test

982
00:39:38,510 --> 00:39:41,260
trippy blob of it

983
00:39:43,120 --> 00:39:48,440
one thing with kubernetes and it takes a

984
00:39:46,550 --> 00:39:50,090
beginning used to is there's lots and

985
00:39:48,440 --> 00:39:52,730
lots of different ways of deploying it

986
00:39:50,090 --> 00:39:55,070
there are is a spreadsheet contains

987
00:39:52,730 --> 00:39:57,740
about 100 plus different ways of

988
00:39:55,070 --> 00:39:59,540
deploying kubernetes there's managed

989
00:39:57,740 --> 00:40:00,770
options so any of your cloud providers

990
00:39:59,540 --> 00:40:03,440
which are a cloud for any of you with

991
00:40:00,770 --> 00:40:05,690
will have a managed cuban at ease so

992
00:40:03,440 --> 00:40:07,700
google containers and gke is google's

993
00:40:05,690 --> 00:40:11,330
then there's all complaining if you're

994
00:40:07,700 --> 00:40:12,890
in the Red Hat world IKS and dks so

995
00:40:11,330 --> 00:40:14,900
basically whatever cloud you have will

996
00:40:12,890 --> 00:40:18,170
probably have a managed German at ease

997
00:40:14,900 --> 00:40:19,460
with these products they tends to you

998
00:40:18,170 --> 00:40:22,010
have less to worry about you don't have

999
00:40:19,460 --> 00:40:23,690
as many things to to manage they do

1000
00:40:22,010 --> 00:40:24,970
better for you on the other hand you

1001
00:40:23,690 --> 00:40:27,980
have less control over your environment

1002
00:40:24,970 --> 00:40:28,640
you then get like an on-site platform as

1003
00:40:27,980 --> 00:40:30,200
a service

1004
00:40:28,640 --> 00:40:32,810
something like open chef container

1005
00:40:30,200 --> 00:40:35,149
platform gke on-prem they'll provide

1006
00:40:32,810 --> 00:40:37,340
things like management gooeys and also

1007
00:40:35,150 --> 00:40:39,560
kind of tooling for you or you can

1008
00:40:37,340 --> 00:40:42,260
install urban eighties with just

1009
00:40:39,560 --> 00:40:44,150
terraform this products like put is like

1010
00:40:42,260 --> 00:40:45,560
corpse QB the m because if there's

1011
00:40:44,150 --> 00:40:46,880
literally one of the problems of

1012
00:40:45,560 --> 00:40:49,009
curiosity securities if someone says

1013
00:40:46,880 --> 00:40:50,630
we'll what's this you know if this is a

1014
00:40:49,010 --> 00:40:52,160
good value or a bad value and it depends

1015
00:40:50,630 --> 00:40:54,050
on the deployer i depends on which one

1016
00:40:52,160 --> 00:40:57,140
of these different platforms you're

1017
00:40:54,050 --> 00:41:00,320
using how does it work

1018
00:40:57,140 --> 00:41:03,140
what this is kind of a this is the most

1019
00:41:00,320 --> 00:41:05,060
basic humanities cluster set up the weak

1020
00:41:03,140 --> 00:41:06,799
humanities works is it's already

1021
00:41:05,060 --> 00:41:08,770
container prices all around these

1022
00:41:06,800 --> 00:41:11,540
daughter containers and deploying them

1023
00:41:08,770 --> 00:41:14,000
kubernetes has in the middle here we've

1024
00:41:11,540 --> 00:41:16,940
got this api server and the api server

1025
00:41:14,000 --> 00:41:21,230
is just a rest api so it's a essentially

1026
00:41:16,940 --> 00:41:23,630
an HTTP api that you send commands to to

1027
00:41:21,230 --> 00:41:26,270
create and manage containers which are

1028
00:41:23,630 --> 00:41:28,220
just processes the EPI server in the

1029
00:41:26,270 --> 00:41:30,259
kubernetes cluster is absolutely the

1030
00:41:28,220 --> 00:41:31,839
heart of it like all the other component

1031
00:41:30,260 --> 00:41:34,550
you see if the way the diagram flows

1032
00:41:31,840 --> 00:41:35,480
everything talks to the api server and

1033
00:41:34,550 --> 00:41:37,460
all the other components it'll talk

1034
00:41:35,480 --> 00:41:40,190
directly to each other they talk to api

1035
00:41:37,460 --> 00:41:43,010
server so this is why it's encoded in

1036
00:41:40,190 --> 00:41:45,260
red because if i can attack her this is

1037
00:41:43,010 --> 00:41:47,270
my obviously my number one target if i

1038
00:41:45,260 --> 00:41:50,030
compromise the api server i can

1039
00:41:47,270 --> 00:41:52,340
compromise the whole cluster at the top

1040
00:41:50,030 --> 00:41:54,530
we have a thing called a CD so

1041
00:41:52,340 --> 00:41:57,500
kubernetes is stateless by default the

1042
00:41:54,530 --> 00:41:59,540
api server doesn't store any state it

1043
00:41:57,500 --> 00:42:01,220
handles it all to this as if he is a key

1044
00:41:59,540 --> 00:42:02,840
value store so a kind of a simple

1045
00:42:01,220 --> 00:42:05,118
database it's not like a complex thing

1046
00:42:02,840 --> 00:42:06,680
like oracle it's a fairly basic key

1047
00:42:05,119 --> 00:42:07,820
value store but that's where all the

1048
00:42:06,680 --> 00:42:09,649
state of my cluster

1049
00:42:07,820 --> 00:42:11,720
stores all the information about what

1050
00:42:09,650 --> 00:42:14,090
workloads are here what things have been

1051
00:42:11,720 --> 00:42:16,040
deployed to it as we'll see later on any

1052
00:42:14,090 --> 00:42:18,140
secrets that are stored in the cluster

1053
00:42:16,040 --> 00:42:20,000
they'll live in here so again as an

1054
00:42:18,140 --> 00:42:21,500
attacker as a pen tester I want to

1055
00:42:20,000 --> 00:42:25,250
target this because this is all the cool

1056
00:42:21,500 --> 00:42:26,420
information and then in addition to

1057
00:42:25,250 --> 00:42:27,920
these master nodes which is in if they

1058
00:42:26,420 --> 00:42:29,660
have become a via the control plane

1059
00:42:27,920 --> 00:42:32,150
there's a lot of worker nodes and these

1060
00:42:29,660 --> 00:42:33,589
were my containers actually go and then

1061
00:42:32,150 --> 00:42:36,859
here we have this thing called the

1062
00:42:33,590 --> 00:42:39,320
cubelet and the cubelet essentially is a

1063
00:42:36,859 --> 00:42:41,990
thing that sits between the api server

1064
00:42:39,320 --> 00:42:43,700
and dark this

1065
00:42:41,990 --> 00:42:45,410
boxes container engine doesn't have to

1066
00:42:43,700 --> 00:42:47,598
be docker but every question I ever

1067
00:42:45,410 --> 00:42:50,509
review is docker so all of what this

1068
00:42:47,599 --> 00:42:52,580
does this sits on top of watercress so

1069
00:42:50,510 --> 00:42:54,740
doctor says here in this corner doing

1070
00:42:52,580 --> 00:42:57,650
what we just showed it running processes

1071
00:42:54,740 --> 00:43:00,470
and the qubit tells doctor what to do so

1072
00:42:57,650 --> 00:43:05,240
if I say give me a new web server

1073
00:43:00,470 --> 00:43:07,339
give me five of them I see that today if

1074
00:43:05,240 --> 00:43:09,830
five went out first it then says okay

1075
00:43:07,339 --> 00:43:11,390
cubelet give me one of those web servers

1076
00:43:09,830 --> 00:43:13,759
and the culet sister docker

1077
00:43:11,390 --> 00:43:15,618
give me one of those web servers and dr.

1078
00:43:13,760 --> 00:43:18,020
justice docker run all right docker run

1079
00:43:15,619 --> 00:43:20,599
just like come on to round before so

1080
00:43:18,020 --> 00:43:22,430
obviously if I can control humor then I

1081
00:43:20,599 --> 00:43:25,190
can control docker and I'm ruling the

1082
00:43:22,430 --> 00:43:27,319
hosts if I can control the API server I

1083
00:43:25,190 --> 00:43:28,970
can control the Kibler which controls

1084
00:43:27,320 --> 00:43:31,760
docker which makes me a rule on the host

1085
00:43:28,970 --> 00:43:36,919
and xcp will see has some interesting

1086
00:43:31,760 --> 00:43:39,050
information for that as well so from an

1087
00:43:36,920 --> 00:43:41,810
attackers perspective as a pen tester if

1088
00:43:39,050 --> 00:43:44,540
docker is RCE as a service kubernetes is

1089
00:43:41,810 --> 00:43:46,609
distributed RCE as a service literally

1090
00:43:44,540 --> 00:43:48,560
for the thousand nodes in a cluster if I

1091
00:43:46,609 --> 00:43:50,390
could control the cluster I can execute

1092
00:43:48,560 --> 00:43:53,359
commands on every single one those nodes

1093
00:43:50,390 --> 00:43:56,420
as root so it's distributed RCE

1094
00:43:53,359 --> 00:43:59,420
which is very nice it has a lot of

1095
00:43:56,420 --> 00:44:00,950
network attack surface so docker as we

1096
00:43:59,420 --> 00:44:03,050
saw earlier on doesn't have a lot of

1097
00:44:00,950 --> 00:44:06,049
network attack surface there's not a lot

1098
00:44:03,050 --> 00:44:07,040
to get to with kubernetes there is and

1099
00:44:06,050 --> 00:44:09,170
there's a lot of complexity of

1100
00:44:07,040 --> 00:44:10,609
securities unlike docker which is

1101
00:44:09,170 --> 00:44:11,060
reasonably straightforward once you get

1102
00:44:10,609 --> 00:44:13,009
used to it

1103
00:44:11,060 --> 00:44:16,849
Trinity's ain't gonna lie to you it's

1104
00:44:13,010 --> 00:44:18,500
just a bit complicated so network attack

1105
00:44:16,849 --> 00:44:20,960
surface if you're a pen tester the first

1106
00:44:18,500 --> 00:44:22,700
thing you ever do is look for ports

1107
00:44:20,960 --> 00:44:24,080
right you're a network pen test your

1108
00:44:22,700 --> 00:44:26,348
scanning host you're looking for all the

1109
00:44:24,080 --> 00:44:31,848
services this is with kubernetes

1110
00:44:26,349 --> 00:44:33,320
api server is the eating it can be on a

1111
00:44:31,849 --> 00:44:34,970
number of ports these are the ones

1112
00:44:33,320 --> 00:44:37,220
usually you've c64 for fleas believe

1113
00:44:34,970 --> 00:44:42,259
most common 443 is pretty common as well

1114
00:44:37,220 --> 00:44:45,520
the cubelet as a 410 250 which is which

1115
00:44:42,260 --> 00:44:49,250
is its port forwarding on and sed 2379

1116
00:44:45,520 --> 00:44:52,820
does the other couple is also tend to be

1117
00:44:49,250 --> 00:44:53,750
a little port like metrics and stuff so

1118
00:44:52,820 --> 00:44:54,490
typically I wouldn't worry too much

1119
00:44:53,750 --> 00:44:56,920
about these

1120
00:44:54,490 --> 00:44:58,419
they're useful because if you see those

1121
00:44:56,920 --> 00:45:00,550
that tell you hey this is this is a

1122
00:44:58,420 --> 00:45:02,560
cluster right I see ten to five six and

1123
00:45:00,550 --> 00:45:04,780
ten to five - it's pretty much going to

1124
00:45:02,560 --> 00:45:06,009
be accurate he's prosper but these are

1125
00:45:04,780 --> 00:45:09,730
the ones were going to focus on because

1126
00:45:06,010 --> 00:45:11,050
they're the most interesting so let's

1127
00:45:09,730 --> 00:45:13,780
talk about attacking how would I attack

1128
00:45:11,050 --> 00:45:14,859
this right I want to actually attack

1129
00:45:13,780 --> 00:45:16,210
these clusters I want to see that

1130
00:45:14,859 --> 00:45:19,930
compromised them we'll talk about the

1131
00:45:16,210 --> 00:45:20,650
three main components so the thoughts

1132
00:45:19,930 --> 00:45:22,299
places to go

1133
00:45:20,650 --> 00:45:24,880
unlike docker there's lots of things we

1134
00:45:22,300 --> 00:45:29,260
can try the key words to consider a PR

1135
00:45:24,880 --> 00:45:33,849
server Etsy D and Q so let's look at

1136
00:45:29,260 --> 00:45:35,380
this what to do let's do some demos cuz

1137
00:45:33,849 --> 00:45:37,480
they're working so far okay which I'm

1138
00:45:35,380 --> 00:45:40,060
with my audio the demos seem to be going

1139
00:45:37,480 --> 00:45:45,609
okay how is the audio whether is it

1140
00:45:40,060 --> 00:45:47,230
still working we're still with us audio

1141
00:45:45,609 --> 00:45:48,790
has been good for the most part just a

1142
00:45:47,230 --> 00:45:52,869
little bit of random clipping here and

1143
00:45:48,790 --> 00:45:55,000
there awesome cool so what we'll do for

1144
00:45:52,869 --> 00:45:57,520
this at Dell I'm gonna get a little

1145
00:45:55,000 --> 00:45:59,349
client machine so this is a just a sage

1146
00:45:57,520 --> 00:46:01,530
little client that's got access to our

1147
00:45:59,349 --> 00:46:03,520
cluster we've got a couple of Q&A T's

1148
00:46:01,530 --> 00:46:06,099
clusters running here that we can access

1149
00:46:03,520 --> 00:46:09,759
so the first thing to do is if I get the

1150
00:46:06,099 --> 00:46:11,680
EPI server then and if there's been a

1151
00:46:09,760 --> 00:46:13,810
mistake made and authentication has been

1152
00:46:11,680 --> 00:46:23,140
turned off then I can just execute

1153
00:46:13,810 --> 00:46:25,599
commands so this command here uses a

1154
00:46:23,140 --> 00:46:27,490
tool called cue cuddle our cue cuddle or

1155
00:46:25,599 --> 00:46:28,810
cube CTL no one really knows how you

1156
00:46:27,490 --> 00:46:30,490
pronounce it

1157
00:46:28,810 --> 00:46:31,869
and this a sense is what you use to

1158
00:46:30,490 --> 00:46:33,129
manage given at these clusters it's just

1159
00:46:31,869 --> 00:46:34,570
like it's gonna come online kinda like

1160
00:46:33,130 --> 00:46:37,089
that don't go come on Blaine you use it

1161
00:46:34,570 --> 00:46:38,950
to manage clusters we can tell it to

1162
00:46:37,089 --> 00:46:40,240
connect to our cluster so I'm a pen

1163
00:46:38,950 --> 00:46:41,830
tester I can just point this at any

1164
00:46:40,240 --> 00:46:44,379
machine that's got this port open and

1165
00:46:41,830 --> 00:46:47,730
try some commands and then this came out

1166
00:46:44,380 --> 00:46:50,440
here essentially is going to execute a

1167
00:46:47,730 --> 00:46:53,170
Linux command inside a container in this

1168
00:46:50,440 --> 00:46:55,359
case it's an API server container so the

1169
00:46:53,170 --> 00:46:58,180
candy API server itself actually runs as

1170
00:46:55,359 --> 00:47:00,310
a container in the system I want to do

1171
00:46:58,180 --> 00:47:06,940
is we're going to ask it to to give us

1172
00:47:00,310 --> 00:47:08,470
the contents of a while so if we run it

1173
00:47:06,940 --> 00:47:12,069
we get that back which is an RSA private

1174
00:47:08,470 --> 00:47:13,660
key now you see whether that war well if

1175
00:47:12,069 --> 00:47:15,040
something is mistaken allowing you to

1176
00:47:13,660 --> 00:47:17,379
hit the API server without

1177
00:47:15,040 --> 00:47:19,180
authentication and this again this is

1178
00:47:17,380 --> 00:47:20,470
not known we have definitely seen their

1179
00:47:19,180 --> 00:47:21,970
self-interests people do make this

1180
00:47:20,470 --> 00:47:24,129
mistake and people make the mistake on

1181
00:47:21,970 --> 00:47:25,660
the Internet as well I think Tesla had

1182
00:47:24,130 --> 00:47:27,880
at least one issue where they had to

1183
00:47:25,660 --> 00:47:31,690
work their clusters online that was come

1184
00:47:27,880 --> 00:47:33,550
from us this way um he serves his

1185
00:47:31,690 --> 00:47:35,290
command execution as a service right so

1186
00:47:33,550 --> 00:47:37,660
it allows me to execute any command

1187
00:47:35,290 --> 00:47:39,550
inside any container running in that

1188
00:47:37,660 --> 00:47:41,410
cluster now the reason I did this

1189
00:47:39,550 --> 00:47:44,260
particular command is if you're a pen

1190
00:47:41,410 --> 00:47:45,700
tester this is the golden key this is

1191
00:47:44,260 --> 00:47:48,460
like you know you cannot get an active

1192
00:47:45,700 --> 00:47:50,589
directory you get that kind of a attacks

1193
00:47:48,460 --> 00:47:52,030
little looper system access this is

1194
00:47:50,589 --> 00:47:54,759
essentially the kubernetes equivalent

1195
00:47:52,030 --> 00:47:56,920
the way that kubernetes works is it has

1196
00:47:54,760 --> 00:47:59,740
client certificate authentication turned

1197
00:47:56,920 --> 00:48:01,119
on by default on every cluster and

1198
00:47:59,740 --> 00:48:03,009
there's no real good way of turning it

1199
00:48:01,119 --> 00:48:05,410
off as part of the functionality of the

1200
00:48:03,010 --> 00:48:06,640
product and the important point about

1201
00:48:05,410 --> 00:48:09,879
the client certificate authentication

1202
00:48:06,640 --> 00:48:12,460
that kubernetes does is you can't revoke

1203
00:48:09,880 --> 00:48:13,960
client certificates so if someone gets a

1204
00:48:12,460 --> 00:48:16,810
client certificate which gives them

1205
00:48:13,960 --> 00:48:18,609
access to the cluster there is no way to

1206
00:48:16,810 --> 00:48:20,230
revoke that certificate short of

1207
00:48:18,609 --> 00:48:23,020
invalidating the entire certificate

1208
00:48:20,230 --> 00:48:25,810
authority so as an attacker the thing I

1209
00:48:23,020 --> 00:48:28,509
want is this client miss CA key file

1210
00:48:25,810 --> 00:48:31,960
because if I get the CA key file I can

1211
00:48:28,510 --> 00:48:33,490
create new users users that will last as

1212
00:48:31,960 --> 00:48:35,740
long as that certificate authority is

1213
00:48:33,490 --> 00:48:38,618
valid which is generally measured in

1214
00:48:35,740 --> 00:48:40,209
years so as a pen tester if you're

1215
00:48:38,619 --> 00:48:42,160
looking at your registers that's the

1216
00:48:40,210 --> 00:48:44,980
thing you want to get to on most

1217
00:48:42,160 --> 00:48:46,509
clusters it's in that directory what

1218
00:48:44,980 --> 00:48:47,890
work on every cluster as I said there's

1219
00:48:46,510 --> 00:48:50,260
many different ways of installing this

1220
00:48:47,890 --> 00:48:51,700
so this won't always work but if it does

1221
00:48:50,260 --> 00:48:54,369
work that's the follow you're looking

1222
00:48:51,700 --> 00:48:56,319
for so here all I've done is I've said

1223
00:48:54,369 --> 00:48:57,970
hey go to my cluster

1224
00:48:56,319 --> 00:49:00,270
execute the command and get this done

1225
00:48:57,970 --> 00:49:06,750
and I thought works that's what you get

1226
00:49:00,270 --> 00:49:08,940
so that's the API server we've

1227
00:49:06,750 --> 00:49:10,470
got the cute look so this Kuebler as I

1228
00:49:08,940 --> 00:49:14,010
said the pupil it controls dock around

1229
00:49:10,470 --> 00:49:16,100
so anything like the doctor can do if I

1230
00:49:14,010 --> 00:49:20,760
can control the Kuebler I can do as well

1231
00:49:16,100 --> 00:49:26,460
the qubit is on just let just let the

1232
00:49:20,760 --> 00:49:30,840
API Center so you can connect to port 10

1233
00:49:26,460 --> 00:49:33,990
to 50 and we can also get to this pod

1234
00:49:30,840 --> 00:49:35,730
endpoint here and if you're ever doing

1235
00:49:33,990 --> 00:49:37,560
stuff with JSON everything in a nice

1236
00:49:35,730 --> 00:49:39,120
line is JSON JQ is a really cool tool

1237
00:49:37,560 --> 00:49:41,370
you pipe your output through it and it

1238
00:49:39,120 --> 00:49:45,029
makes it look nice so I can do this and

1239
00:49:41,370 --> 00:49:47,100
this gives me in a run another host so

1240
00:49:45,030 --> 00:49:49,110
like I said the cubelet manages the

1241
00:49:47,100 --> 00:49:51,509
containers on the host so you can get

1242
00:49:49,110 --> 00:49:54,630
everything you need out of it and the

1243
00:49:51,510 --> 00:49:56,520
cool thing you can do is shoot it with a

1244
00:49:54,630 --> 00:49:58,380
giblet the interesting thing about

1245
00:49:56,520 --> 00:50:00,450
termination is this this was this

1246
00:49:58,380 --> 00:50:02,130
vulnerability by default in older

1247
00:50:00,450 --> 00:50:03,629
versions of humanities there was no

1248
00:50:02,130 --> 00:50:05,220
authentication on this board and took

1249
00:50:03,630 --> 00:50:07,590
about nine months to fix the problem

1250
00:50:05,220 --> 00:50:09,000
which wasn't great so for awhile this

1251
00:50:07,590 --> 00:50:11,070
was like the most reliable way of

1252
00:50:09,000 --> 00:50:13,020
compromising clutters you can hit the

1253
00:50:11,070 --> 00:50:15,600
cube look and say hey I want you to run

1254
00:50:13,020 --> 00:50:17,940
a command and I want you to run it in a

1255
00:50:15,600 --> 00:50:20,279
specific container this is our API

1256
00:50:17,940 --> 00:50:21,900
server container again and then you can

1257
00:50:20,280 --> 00:50:24,650
just give it any Linux command here you

1258
00:50:21,900 --> 00:50:28,380
want so again I'm just gonna say hey

1259
00:50:24,650 --> 00:50:29,310
count it without clown and it says yeah

1260
00:50:28,380 --> 00:50:31,320
sure there we go

1261
00:50:29,310 --> 00:50:33,630
so again I'm a pen tester you can access

1262
00:50:31,320 --> 00:50:35,700
the port ten to fifty if you can get to

1263
00:50:33,630 --> 00:50:37,260
the API server you just carry that far

1264
00:50:35,700 --> 00:50:38,759
and then you've got persistent access to

1265
00:50:37,260 --> 00:50:39,690
the cluster because you can just create

1266
00:50:38,760 --> 00:50:40,980
your users

1267
00:50:39,690 --> 00:50:42,630
I mean just to carry their mystery

1268
00:50:40,980 --> 00:50:47,100
that's not so come on that does that I

1269
00:50:42,630 --> 00:50:48,540
could do something like ya know this is

1270
00:50:47,100 --> 00:50:51,000
literally just literally command

1271
00:50:48,540 --> 00:50:53,880
executions of service if you get the

1272
00:50:51,000 --> 00:50:56,540
couplet this isn't as common to see oh

1273
00:50:53,880 --> 00:50:56,540
it complained

1274
00:51:02,829 --> 00:51:06,999
PSSs although happy well if it does have

1275
00:51:05,559 --> 00:51:10,150
to have to climb in there otherwise it

1276
00:51:06,999 --> 00:51:11,890
won't work anyway I can do in this case

1277
00:51:10,150 --> 00:51:16,650
the one you really want is just that

1278
00:51:11,890 --> 00:51:31,029
because it gives you the CIA key so

1279
00:51:16,650 --> 00:51:34,769
masculine is the database a CD is this

1280
00:51:31,029 --> 00:51:39,420
key value store and it essentially has

1281
00:51:34,769 --> 00:51:39,419
everything about the cluster this again

1282
00:51:41,189 --> 00:51:48,368
others indicated if you're connecting to

1283
00:51:45,189 --> 00:51:51,428
it you can't use curl so unlike lots of

1284
00:51:48,369 --> 00:51:54,160
other things with just HTTP api's HCD

1285
00:51:51,429 --> 00:51:57,699
uses a thing called G RPC which is a

1286
00:51:54,160 --> 00:51:59,259
binary protocol from Google so you do

1287
00:51:57,699 --> 00:52:01,329
have to use again it's called XE d

1288
00:51:59,259 --> 00:52:03,519
couple select cube couple there's a tool

1289
00:52:01,329 --> 00:52:06,849
called XE teakettle and it essentially

1290
00:52:03,519 --> 00:52:08,890
lets you query xyg databases so we can

1291
00:52:06,849 --> 00:52:10,089
do that we can say hey give me all the

1292
00:52:08,890 --> 00:52:14,939
keys give me everything in the database

1293
00:52:10,089 --> 00:52:14,939
and I just unauthenticated let you do

1294
00:52:28,920 --> 00:52:31,979
[Music]

1295
00:52:44,750 --> 00:52:52,310
we can exit on the right let me let me

1296
00:52:49,620 --> 00:53:07,170
actually see how we do that with a CD

1297
00:52:52,310 --> 00:53:09,240
what do you seek Romeo here yeah Rory

1298
00:53:07,170 --> 00:53:10,710
yeah we're your your audios clipping in

1299
00:53:09,240 --> 00:53:12,959
and out again I'm not sure if it's au

1300
00:53:10,710 --> 00:53:15,900
issue or zoom issue or an inter webs

1301
00:53:12,960 --> 00:53:20,760
issue in general yeah something being

1302
00:53:15,900 --> 00:53:23,910
funny yeah we've got just a couple

1303
00:53:20,760 --> 00:53:26,150
minutes left how do you how do you want

1304
00:53:23,910 --> 00:53:26,149
to proceed

1305
00:53:30,140 --> 00:53:37,529
resume excusing CPN but everything else

1306
00:53:32,850 --> 00:53:46,710
is fine yeah as you say exploded okay

1307
00:53:37,530 --> 00:53:47,730
how we do for time let me just a couple

1308
00:53:46,710 --> 00:53:51,120
of minutes left

1309
00:53:47,730 --> 00:53:53,400
Rory before we have to move on cool so

1310
00:53:51,120 --> 00:53:55,950
very quickly say you can dump her pool

1311
00:53:53,400 --> 00:53:58,080
tokens with sed it looks like that

1312
00:53:55,950 --> 00:54:00,470
so again sed another place to make sure

1313
00:53:58,080 --> 00:54:02,850
you keep on on it and keep it secure so

1314
00:54:00,470 --> 00:54:04,200
let's rip past that because they weren't

1315
00:54:02,850 --> 00:54:05,759
that interested oh good so I'll call the

1316
00:54:04,200 --> 00:54:08,879
slides up and I'll put some demos up as

1317
00:54:05,760 --> 00:54:11,550
well the important thing to remember of

1318
00:54:08,880 --> 00:54:13,860
activities and docker is this docker is

1319
00:54:11,550 --> 00:54:16,080
remote command execution as a service by

1320
00:54:13,860 --> 00:54:17,550
design if someone gets access to docker

1321
00:54:16,080 --> 00:54:19,290
if you're a pen tester and you get

1322
00:54:17,550 --> 00:54:21,960
access to daughter you probably may

1323
00:54:19,290 --> 00:54:24,060
drill on the host it's not designed to

1324
00:54:21,960 --> 00:54:28,500
have a kind of granular system is our

1325
00:54:24,060 --> 00:54:30,650
CEO service cube Annette is distributed

1326
00:54:28,500 --> 00:54:32,850
command education as a service so

1327
00:54:30,650 --> 00:54:34,030
humanities for a pen tester standpoint

1328
00:54:32,850 --> 00:54:36,120
is like

1329
00:54:34,030 --> 00:54:39,520
getting something which designed to RCE

1330
00:54:36,120 --> 00:54:40,690
and lets you do it remotely and as you

1331
00:54:39,520 --> 00:54:43,030
can see if you give access to those

1332
00:54:40,690 --> 00:54:46,150
api's you can generally do some fairly

1333
00:54:43,030 --> 00:54:48,310
bad stuff fairly quickly if you want

1334
00:54:46,150 --> 00:54:49,750
more information a couple places to go I

1335
00:54:48,310 --> 00:54:52,240
look with the slides up into the slides

1336
00:54:49,750 --> 00:54:54,370
channel there's some cool people to post

1337
00:54:52,240 --> 00:54:56,020
lots of cool people to follow on Twitter

1338
00:54:54,370 --> 00:54:59,470
I had to pick ones that would fit on

1339
00:54:56,020 --> 00:55:02,680
this slide these are members of cig honk

1340
00:54:59,470 --> 00:55:03,040
in cold water particularly and Brad

1341
00:55:02,680 --> 00:55:05,529
Guzan

1342
00:55:03,040 --> 00:55:09,190
and that's my handle so feel free to

1343
00:55:05,530 --> 00:55:11,020
follow any of us on Twitter there's a

1344
00:55:09,190 --> 00:55:13,180
playlist there's a lot of good videos a

1345
00:55:11,020 --> 00:55:14,620
good content which goes into more about

1346
00:55:13,180 --> 00:55:17,770
container security if it's something

1347
00:55:14,620 --> 00:55:22,420
you're interested in and also there are

1348
00:55:17,770 --> 00:55:25,480
slang age from before and hopefully yeah

1349
00:55:22,420 --> 00:55:28,600
yeah I'm just about to time mark so Wes

1350
00:55:25,480 --> 00:55:31,410
let's wrap that up there I don't think

1351
00:55:28,600 --> 00:55:34,360
there's any questions do let me know

1352
00:55:31,410 --> 00:55:38,339
that's excellent thank you very much

1353
00:55:34,360 --> 00:55:38,340
Rory for the presentation

