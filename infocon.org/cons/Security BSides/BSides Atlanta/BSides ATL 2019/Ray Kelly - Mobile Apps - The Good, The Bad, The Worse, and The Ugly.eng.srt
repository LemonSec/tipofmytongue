1
00:00:02,520 --> 00:00:11,580
all right welcome everybody I'm Davis

2
00:00:07,620 --> 00:00:14,360
I'm a KSU student here we have a quick

3
00:00:11,580 --> 00:00:17,910
thank you to our sponsors Kennesaw State

4
00:00:14,360 --> 00:00:24,269
Department of Information Systems the NS

5
00:00:17,910 --> 00:00:29,150
a coal fire and ku now ski security so

6
00:00:24,269 --> 00:00:29,150
pregnant reduce our speaker Ray Kelly

7
00:00:41,210 --> 00:00:46,980
great job Davis yeah so welcome to B

8
00:00:45,180 --> 00:00:48,390
sides and thanks for coming to see my

9
00:00:46,980 --> 00:00:49,949
talk hopefully we want to see some

10
00:00:48,390 --> 00:00:51,990
really bad mobile vulnerabilities that

11
00:00:49,950 --> 00:00:53,790
are out there so we'll definitely have

12
00:00:51,990 --> 00:00:58,440
some real examples of those we'll take a

13
00:00:53,790 --> 00:01:01,019
look at this a little about me so I've

14
00:00:58,440 --> 00:01:02,339
been developing for over 20 years than

15
00:01:01,020 --> 00:01:04,559
just normal developer so I've written

16
00:01:02,340 --> 00:01:06,570
plenty of honoring felonies but in

17
00:01:04,559 --> 00:01:08,219
internet security for about 15 years and

18
00:01:06,570 --> 00:01:09,898
I got my start of the company called spy

19
00:01:08,219 --> 00:01:15,899
dynamics that was founded here in

20
00:01:09,899 --> 00:01:17,399
Atlanta and and my mother I was the lead

21
00:01:15,899 --> 00:01:19,079
developer of weapon spec so I was like

22
00:01:17,399 --> 00:01:20,880
one of the early developers of the web

23
00:01:19,079 --> 00:01:23,130
espheni wonderful web inspector fiddle

24
00:01:20,880 --> 00:01:24,929
hmm so I wrote most of that product and

25
00:01:23,130 --> 00:01:26,640
they into the early days and kind of

26
00:01:24,929 --> 00:01:29,270
went through a whole ton of acquisitions

27
00:01:26,640 --> 00:01:32,939
from HP HP enterprise now to micro focus

28
00:01:29,270 --> 00:01:35,789
along that route and along that route

29
00:01:32,939 --> 00:01:37,710
also let our mobile pen test team our

30
00:01:35,789 --> 00:01:40,710
fortify on demand areas we're going to

31
00:01:37,710 --> 00:01:42,839
do cloud-based services pen testing so

32
00:01:40,710 --> 00:01:44,100
we test mobile apps and so some of the

33
00:01:42,840 --> 00:01:46,799
examples we'll see here are some of the

34
00:01:44,100 --> 00:01:52,798
horrible things that we see that we saw

35
00:01:46,799 --> 00:01:54,869
coming through our testing process just

36
00:01:52,799 --> 00:01:56,399
couple of considerations so everything

37
00:01:54,869 --> 00:01:59,219
we're in it I'm going to show you today

38
00:01:56,399 --> 00:02:01,380
is already publicly known or it's been

39
00:01:59,219 --> 00:02:05,559
anonymizer scrub so no zero days for you

40
00:02:01,380 --> 00:02:08,949
guys today the other takeaway

41
00:02:05,560 --> 00:02:10,149
here is that these vulnerabilities that

42
00:02:08,949 --> 00:02:12,369
we're going to look at they weren't

43
00:02:10,149 --> 00:02:14,950
intentional these are malicious actors

44
00:02:12,370 --> 00:02:16,180
that are trying to hack us right these

45
00:02:14,950 --> 00:02:17,950
are actually developers that are just

46
00:02:16,180 --> 00:02:19,630
writing code and not giving a lot of

47
00:02:17,950 --> 00:02:24,819
thought to security and we'll go into

48
00:02:19,630 --> 00:02:26,049
some reasons why as well for that so yes

49
00:02:24,819 --> 00:02:27,579
so these developers have the best of

50
00:02:26,050 --> 00:02:30,720
intentions they're not trying to harm us

51
00:02:27,580 --> 00:02:30,720
but we have these vulnerabilities

52
00:02:32,099 --> 00:02:35,709
talking about just insecure devices this

53
00:02:34,599 --> 00:02:37,510
really has nothing to do with anything

54
00:02:35,709 --> 00:02:39,250
but love telling the story I was

55
00:02:37,510 --> 00:02:40,929
watching The History Channel a long time

56
00:02:39,250 --> 00:02:45,760
ago and actually have stories on history

57
00:02:40,930 --> 00:02:47,950
and they had a story about this paper

58
00:02:45,760 --> 00:02:52,899
shredder and it was back during the Cold

59
00:02:47,950 --> 00:02:54,790
War era and what they did was they there

60
00:02:52,900 --> 00:02:56,140
was a hotel in Washington DC where an

61
00:02:54,790 --> 00:02:58,390
important dignitaries would stay so

62
00:02:56,140 --> 00:02:59,679
presidents kings what-have-you they'd

63
00:02:58,390 --> 00:03:03,250
stay there when they were visiting the

64
00:02:59,680 --> 00:03:04,870
the president and in each of the hotel

65
00:03:03,250 --> 00:03:06,790
rooms there were kind enough to provide

66
00:03:04,870 --> 00:03:08,230
them with a paper shredder right you

67
00:03:06,790 --> 00:03:10,209
have to shred your important documents

68
00:03:08,230 --> 00:03:11,828
while you're traveling so the

69
00:03:10,209 --> 00:03:13,510
interesting thing about this though is

70
00:03:11,829 --> 00:03:15,220
this paper shredder was made by some

71
00:03:13,510 --> 00:03:17,709
three-letter acronym of our government

72
00:03:15,220 --> 00:03:20,350
and what they actually had done was

73
00:03:17,709 --> 00:03:22,359
built in a pace painting device at the

74
00:03:20,350 --> 00:03:24,670
top of the shredder so as you're reading

75
00:03:22,359 --> 00:03:26,560
it and scanning the document and

76
00:03:24,670 --> 00:03:28,600
actually sending it over the electrical

77
00:03:26,560 --> 00:03:30,370
line through like old school pulses like

78
00:03:28,600 --> 00:03:32,290
the electrical pulses like a modem of

79
00:03:30,370 --> 00:03:34,780
dude and then reconstructing the

80
00:03:32,290 --> 00:03:38,519
document in another room and then in the

81
00:03:34,780 --> 00:03:38,519
hotel and I was like that is awesome

82
00:03:41,489 --> 00:03:46,420
so the mobile landscape I imagine most

83
00:03:44,019 --> 00:03:49,840
of you have mobile devices at your

84
00:03:46,420 --> 00:03:52,179
company our mobile apps yes and I'm just

85
00:03:49,840 --> 00:03:57,489
curious how many pen testers we have in

86
00:03:52,180 --> 00:03:58,959
here how about QA folks d QA man I want

87
00:03:57,489 --> 00:04:00,970
to see QA people these security

88
00:03:58,959 --> 00:04:05,440
conferences how about developers

89
00:04:00,970 --> 00:04:07,629
straight-up developers great so as most

90
00:04:05,440 --> 00:04:09,160
of you know Mobile's hot everyone every

91
00:04:07,629 --> 00:04:12,910
company wants their mobile app they want

92
00:04:09,160 --> 00:04:14,620
it out there now right instantly if

93
00:04:12,910 --> 00:04:17,529
anyone's going to put features over

94
00:04:14,620 --> 00:04:19,239
security it's unfortunately mobile

95
00:04:17,529 --> 00:04:20,260
developers where it comes to and there's

96
00:04:19,238 --> 00:04:22,780
a couple reasons for that

97
00:04:20,260 --> 00:04:24,909
one is they're not trained in security

98
00:04:22,780 --> 00:04:26,559
typically and the reason is because

99
00:04:24,910 --> 00:04:28,270
sometimes mobile apps are so easy to

100
00:04:26,560 --> 00:04:29,740
make look at Cordova and all these like

101
00:04:28,270 --> 00:04:31,299
drag-and-drop apps right you're just

102
00:04:29,740 --> 00:04:32,440
thrown together mobile apps me and this

103
00:04:31,300 --> 00:04:35,139
is great I'm putting this thing together

104
00:04:32,440 --> 00:04:38,490
and it's done and they ship it out

105
00:04:35,139 --> 00:04:40,600
without really any regard to security so

106
00:04:38,490 --> 00:04:43,600
training and security for mobile

107
00:04:40,600 --> 00:04:45,490
developers doesn't happen that much so

108
00:04:43,600 --> 00:04:50,650
those are some of the challenges that we

109
00:04:45,490 --> 00:04:53,850
have with mobile the mobile landscape

110
00:04:50,650 --> 00:04:56,620
are looking at devices they are growing

111
00:04:53,850 --> 00:05:00,190
just insanely write read like five

112
00:04:56,620 --> 00:05:02,139
billion mobile devices in 2019 and

113
00:05:00,190 --> 00:05:03,700
that's just going to keep growing so the

114
00:05:02,139 --> 00:05:06,310
number of apps are out there think of

115
00:05:03,700 --> 00:05:09,990
that threat service on all those devices

116
00:05:06,310 --> 00:05:09,990
that you have your apps installed on

117
00:05:11,570 --> 00:05:17,790
we did a case study where we took 120

118
00:05:14,820 --> 00:05:20,790
mobile apps and we analyze them for

119
00:05:17,790 --> 00:05:22,410
vulnerabilities and we found that 66% of

120
00:05:20,790 --> 00:05:25,980
them contained a critical or high

121
00:05:22,410 --> 00:05:27,600
vulnerability and and when we say high

122
00:05:25,980 --> 00:05:29,910
we're saying it either disclosed some

123
00:05:27,600 --> 00:05:31,500
PII that we found personal information

124
00:05:29,910 --> 00:05:33,810
so for instance if you use your mobile

125
00:05:31,500 --> 00:05:34,950
app elog know if you use named password

126
00:05:33,810 --> 00:05:37,500
or filled out personal information

127
00:05:34,950 --> 00:05:39,330
within the app we were able to get that

128
00:05:37,500 --> 00:05:42,270
from the device and pull it off because

129
00:05:39,330 --> 00:05:45,780
it was normally not encrypted so clear

130
00:05:42,270 --> 00:05:47,940
text storage or we were able to

131
00:05:45,780 --> 00:05:50,159
compromise the back-end system and

132
00:05:47,940 --> 00:05:51,930
that's sort of like the where I have the

133
00:05:50,160 --> 00:05:54,150
most fun is on the back-end systems

134
00:05:51,930 --> 00:05:56,280
because another thing when you're making

135
00:05:54,150 --> 00:05:57,630
a mobile app the developers are put it

136
00:05:56,280 --> 00:05:59,700
together and they create some back-end

137
00:05:57,630 --> 00:06:03,719
endpoint right so your mobile device is

138
00:05:59,700 --> 00:06:05,820
going to talk to an endpoint and people

139
00:06:03,720 --> 00:06:07,980
think that well this isn't this is just

140
00:06:05,820 --> 00:06:10,770
a a restful service it's not going to be

141
00:06:07,980 --> 00:06:12,570
indexed by Google no one's going to know

142
00:06:10,770 --> 00:06:13,770
about it or I guarantee you the bad guys

143
00:06:12,570 --> 00:06:15,810
are going to know about it they're gonna

144
00:06:13,770 --> 00:06:17,250
find that mobile backend and test from

145
00:06:15,810 --> 00:06:21,660
things like sequel injection cross-site

146
00:06:17,250 --> 00:06:24,210
scripting as a open web server good

147
00:06:21,660 --> 00:06:26,100
thinking use to upload anything you want

148
00:06:24,210 --> 00:06:33,960
and I'll have an example that to that we

149
00:06:26,100 --> 00:06:35,910
actually saw there's a so when you talk

150
00:06:33,960 --> 00:06:38,669
about normal like application security

151
00:06:35,910 --> 00:06:42,300
and mobile specific security there's two

152
00:06:38,670 --> 00:06:44,970
important differences one is you have a

153
00:06:42,300 --> 00:06:47,010
magnified Network vulnerability or

154
00:06:44,970 --> 00:06:49,770
threat service and what I mean by that

155
00:06:47,010 --> 00:06:51,390
is I mean you think about your mobile

156
00:06:49,770 --> 00:06:52,590
device you're in the airport right or

157
00:06:51,390 --> 00:06:54,840
you're in a hotel you're traveling now

158
00:06:52,590 --> 00:06:56,190
and you find some Wi-Fi right and you go

159
00:06:54,840 --> 00:06:58,409
find there's something they cache ad

160
00:06:56,190 --> 00:06:58,759
free Wi-Fi click here to join right and

161
00:06:58,410 --> 00:07:01,309
you know

162
00:06:58,759 --> 00:07:03,559
and you do you have no idea what's

163
00:07:01,309 --> 00:07:05,599
happening after your data leaves your

164
00:07:03,559 --> 00:07:07,039
device you get on to it and then you saw

165
00:07:05,599 --> 00:07:08,779
the talk just before this one right

166
00:07:07,039 --> 00:07:10,039
someone's got the pineapple running if

167
00:07:08,779 --> 00:07:11,629
they're doing man-in-the-middle so you

168
00:07:10,039 --> 00:07:12,860
join that Wi-Fi and all sudden they're

169
00:07:11,629 --> 00:07:14,960
sniffing all your cookies your

170
00:07:12,860 --> 00:07:18,499
credentials everything you're sending

171
00:07:14,960 --> 00:07:20,330
over that network so the idea of how

172
00:07:18,499 --> 00:07:23,569
easy it is to connect your mobile device

173
00:07:20,330 --> 00:07:26,659
to any network makes it all that more

174
00:07:23,569 --> 00:07:29,059
important the other one is the physical

175
00:07:26,659 --> 00:07:30,770
vulnerability so and this one's pretty

176
00:07:29,059 --> 00:07:33,169
easy you leave your device somewhere

177
00:07:30,770 --> 00:07:35,599
right I left it somewhere you forget it

178
00:07:33,169 --> 00:07:36,740
well then if the nefarious person finds

179
00:07:35,599 --> 00:07:38,360
your device and they actually know what

180
00:07:36,740 --> 00:07:40,039
they're doing who knows what they could

181
00:07:38,360 --> 00:07:41,870
get off your device if those app

182
00:07:40,039 --> 00:07:45,860
developers didn't do things properly and

183
00:07:41,870 --> 00:07:47,629
again I'll have examples of that and so

184
00:07:45,860 --> 00:07:50,210
this is kind of embarrassing for all

185
00:07:47,629 --> 00:07:52,069
friends here right so I can't I gave

186
00:07:50,210 --> 00:07:53,719
this talk to a user group for a company

187
00:07:52,069 --> 00:07:56,180
and I got to this part

188
00:07:53,719 --> 00:07:57,589
I said magnified physical vulnerability

189
00:07:56,180 --> 00:08:01,939
and I go to pull out my phone and it's

190
00:07:57,589 --> 00:08:04,399
not there looking around and it's

191
00:08:01,939 --> 00:08:06,499
playback in the room and I'm where I was

192
00:08:04,399 --> 00:08:08,539
sitting to watch a talk before this one

193
00:08:06,499 --> 00:08:10,969
and I had left my phone back there on

194
00:08:08,539 --> 00:08:12,620
the table nothing yeah you know that's

195
00:08:10,969 --> 00:08:15,199
an example there guys of how that could

196
00:08:12,620 --> 00:08:23,149
happen and they decided he either good

197
00:08:15,199 --> 00:08:25,639
then so when we assess a to do a proper

198
00:08:23,149 --> 00:08:27,589
assessment of a mobile app there's three

199
00:08:25,639 --> 00:08:29,089
areas that we're looking at we're

200
00:08:27,589 --> 00:08:31,639
looking at the client what we mean by

201
00:08:29,089 --> 00:08:33,349
that is the mobile device what are we

202
00:08:31,639 --> 00:08:35,899
looking for there so if you have an app

203
00:08:33,349 --> 00:08:37,880
installed the biggest one that we're

204
00:08:35,899 --> 00:08:39,620
looking for is unencrypted data so when

205
00:08:37,880 --> 00:08:42,110
you type into username a password and

206
00:08:39,620 --> 00:08:44,089
you hit go is that app properly

207
00:08:42,110 --> 00:08:47,980
encrypting or protecting that data on

208
00:08:44,089 --> 00:08:50,870
the device poor certificate management

209
00:08:47,980 --> 00:08:51,889
what type of data is being stored so

210
00:08:50,870 --> 00:08:55,910
those are some of the things that we

211
00:08:51,889 --> 00:08:56,460
look for on the device the next one is

212
00:08:55,910 --> 00:08:58,589
the net

213
00:08:56,460 --> 00:09:01,170
player so the things we're looking for

214
00:08:58,590 --> 00:09:03,450
their simple ones are they using SSL

215
00:09:01,170 --> 00:09:06,089
right are they encrypting the data to

216
00:09:03,450 --> 00:09:08,730
and from the endpoint we're looking for

217
00:09:06,090 --> 00:09:12,480
backdoor data leakage you know so say

218
00:09:08,730 --> 00:09:14,460
like you install a in your application

219
00:09:12,480 --> 00:09:17,190
you want analytics right well if you

220
00:09:14,460 --> 00:09:20,000
install some app analytics library say

221
00:09:17,190 --> 00:09:22,350
crashlytics or what-have-you

222
00:09:20,000 --> 00:09:23,910
where's that data going and is that

223
00:09:22,350 --> 00:09:25,620
encrypted and what does it include

224
00:09:23,910 --> 00:09:27,030
you know because you don't always know

225
00:09:25,620 --> 00:09:29,370
right you just need analytics it's easy

226
00:09:27,030 --> 00:09:31,439
enough to throw in a firebase or what

227
00:09:29,370 --> 00:09:33,150
have you but what data is that actually

228
00:09:31,440 --> 00:09:35,180
grabbing from your device and sending to

229
00:09:33,150 --> 00:09:39,030
the back-end server are you leaking PII

230
00:09:35,180 --> 00:09:41,790
from the user so that's an example there

231
00:09:39,030 --> 00:09:43,170
and then we look at the server side and

232
00:09:41,790 --> 00:09:45,589
I talked about that just a few minutes

233
00:09:43,170 --> 00:09:47,670
ago we're looking for injection flaws

234
00:09:45,590 --> 00:09:50,310
authentication privilege escalation

235
00:09:47,670 --> 00:09:52,349
sequel injection all the normal web at

236
00:09:50,310 --> 00:09:54,719
the type owner abilities that everyone's

237
00:09:52,350 --> 00:09:57,210
familiar with all of those apply to

238
00:09:54,720 --> 00:10:01,200
mobile backends as well nothing changes

239
00:09:57,210 --> 00:10:03,030
there so when to do a proper test you

240
00:10:01,200 --> 00:10:05,730
want to look at all of these layers to

241
00:10:03,030 --> 00:10:10,370
really ensure that your the entire app

242
00:10:05,730 --> 00:10:13,370
is safe any questions so far

243
00:10:10,370 --> 00:10:13,370
good

244
00:10:15,470 --> 00:10:21,030
so let's start digging into

245
00:10:17,340 --> 00:10:22,290
vulnerabilities now this is an example

246
00:10:21,030 --> 00:10:25,140
here so again we're talking about

247
00:10:22,290 --> 00:10:27,180
server-side vulnerabilities and we did a

248
00:10:25,140 --> 00:10:28,650
test of a mobile application and they

249
00:10:27,180 --> 00:10:30,329
had a back-end API just like I was

250
00:10:28,650 --> 00:10:31,050
saying it's not it was just a restful

251
00:10:30,330 --> 00:10:33,090
endpoint

252
00:10:31,050 --> 00:10:36,300
there was no content there it was just

253
00:10:33,090 --> 00:10:39,060
API endpoints and what they have found

254
00:10:36,300 --> 00:10:41,310
is they had enabled WebDAV on there so

255
00:10:39,060 --> 00:10:43,290
they allowed the put method and so

256
00:10:41,310 --> 00:10:45,780
basically it turned their server into a

257
00:10:43,290 --> 00:10:48,870
open file share we can put anything that

258
00:10:45,780 --> 00:10:51,329
we wanted there and upload anything so

259
00:10:48,870 --> 00:10:54,420
the example here is we actually did this

260
00:10:51,330 --> 00:10:57,180
as a real screenshot where we uploaded

261
00:10:54,420 --> 00:10:59,400
an HTML page that had a hyperlink to

262
00:10:57,180 --> 00:11:01,589
evil link which would contain most

263
00:10:59,400 --> 00:11:03,870
likely now let's say that if you click

264
00:11:01,590 --> 00:11:06,810
on it so what we would do is open this

265
00:11:03,870 --> 00:11:09,090
upload that file copy the URL because

266
00:11:06,810 --> 00:11:11,640
actually has the company's names right

267
00:11:09,090 --> 00:11:13,620
company.com slash our page that we

268
00:11:11,640 --> 00:11:15,960
uploaded and then what we're going to do

269
00:11:13,620 --> 00:11:18,270
is take that and then span that out via

270
00:11:15,960 --> 00:11:20,550
email to you know it's a million people

271
00:11:18,270 --> 00:11:23,130
through whatever service and it looks

272
00:11:20,550 --> 00:11:26,069
like a legit link now in the email but

273
00:11:23,130 --> 00:11:27,960
yet it's our page that we uploaded so

274
00:11:26,070 --> 00:11:30,120
you get an email you go click on it oh

275
00:11:27,960 --> 00:11:31,770
look here free tickets absolutely click

276
00:11:30,120 --> 00:11:35,280
on that now you just got infected on

277
00:11:31,770 --> 00:11:36,510
your device or on your computer and so

278
00:11:35,280 --> 00:11:38,819
the important thing though again this

279
00:11:36,510 --> 00:11:40,500
was specifically for a mobile API had

280
00:11:38,820 --> 00:11:43,260
nothing to do with anything else but we

281
00:11:40,500 --> 00:11:45,710
were able to utilize it to exploit other

282
00:11:43,260 --> 00:11:45,710
users

283
00:11:50,140 --> 00:11:54,470
and we hear about the British Airways

284
00:11:52,070 --> 00:11:54,860
hack happened last year that was a big

285
00:11:54,470 --> 00:11:58,250
one

286
00:11:54,860 --> 00:12:01,100
so from a quarter about a quarter

287
00:11:58,250 --> 00:12:02,780
million accounts were compromised and

288
00:12:01,100 --> 00:12:05,090
will be being compromised if this was a

289
00:12:02,780 --> 00:12:07,550
bad one they got billing addresses

290
00:12:05,090 --> 00:12:10,460
emails credit card numbers the CVV code

291
00:12:07,550 --> 00:12:13,790
your secret code then you type in when

292
00:12:10,460 --> 00:12:15,080
you purchase something and this one was

293
00:12:13,790 --> 00:12:18,199
really interesting this one was pretty

294
00:12:15,080 --> 00:12:21,170
fascinating because it was originally an

295
00:12:18,200 --> 00:12:22,370
app for their website okay so their

296
00:12:21,170 --> 00:12:25,189
website where you want to go buy a

297
00:12:22,370 --> 00:12:28,820
ticket for British Airways you'd fill

298
00:12:25,190 --> 00:12:32,510
out this information well they were

299
00:12:28,820 --> 00:12:34,910
compromised and the page that collected

300
00:12:32,510 --> 00:12:36,800
that information had a mage card skimmer

301
00:12:34,910 --> 00:12:39,500
stripped and stolen so nothing anyone

302
00:12:36,800 --> 00:12:42,290
heard of mage part it's a script that

303
00:12:39,500 --> 00:12:43,820
basically when you fill out that

304
00:12:42,290 --> 00:12:45,800
information there's some JavaScript that

305
00:12:43,820 --> 00:12:47,240
parses well what it would do is it would

306
00:12:45,800 --> 00:12:49,579
take that information and send it over

307
00:12:47,240 --> 00:12:52,250
here to your server and to British

308
00:12:49,580 --> 00:12:53,780
Airways server so the bad guys were

309
00:12:52,250 --> 00:12:56,960
getting copies of every single credit

310
00:12:53,780 --> 00:12:58,670
card transaction that was happening so I

311
00:12:56,960 --> 00:13:01,340
don't know if the people that did this

312
00:12:58,670 --> 00:13:02,810
knew how much how effective this was

313
00:13:01,340 --> 00:13:05,000
going to be because the mobile app

314
00:13:02,810 --> 00:13:07,160
developers said oh I'm going to use

315
00:13:05,000 --> 00:13:08,840
Cordova or some cross-platform thing and

316
00:13:07,160 --> 00:13:10,459
I'm just going to drag and drop hey

317
00:13:08,840 --> 00:13:12,440
there's that script that does credit

318
00:13:10,460 --> 00:13:14,390
card transactions already on our server

319
00:13:12,440 --> 00:13:17,030
so I'm going to just pull that same

320
00:13:14,390 --> 00:13:18,410
script down into the mobile app and I'm

321
00:13:17,030 --> 00:13:20,510
going to use that a piece of cake well

322
00:13:18,410 --> 00:13:23,000
that pull down the same mage cart script

323
00:13:20,510 --> 00:13:25,490
the credit card skimmer into the mobile

324
00:13:23,000 --> 00:13:27,620
apps now you went from one endpoint

325
00:13:25,490 --> 00:13:29,180
that's been compromised to hundreds of

326
00:13:27,620 --> 00:13:31,400
thousands everybody that had the British

327
00:13:29,180 --> 00:13:32,709
Airways app and bought a ticket had

328
00:13:31,400 --> 00:13:34,699
their credit card information stolen

329
00:13:32,710 --> 00:13:36,770
that Hoth are taken through there

330
00:13:34,700 --> 00:13:40,010
because they were sharing code from the

331
00:13:36,770 --> 00:13:42,989
server room so that one was kind of neat

332
00:13:40,010 --> 00:13:45,489
how that could happen

333
00:13:42,989 --> 00:13:49,119
another interesting thing too is this is

334
00:13:45,489 --> 00:13:51,609
one of the first instances of gdpr

335
00:13:49,119 --> 00:13:55,629
that was this was like two months after

336
00:13:51,609 --> 00:13:57,549
GDP armours enacted in Europe and I just

337
00:13:55,629 --> 00:13:59,199
googled before this talk to see what the

338
00:13:57,549 --> 00:14:00,669
find was they were still they were kind

339
00:13:59,199 --> 00:14:03,969
of blown away by oh my god this has

340
00:14:00,669 --> 00:14:07,239
already hit us I still have not seen a

341
00:14:03,970 --> 00:14:09,159
fine or what they got hit with but if

342
00:14:07,239 --> 00:14:11,799
you look at the rules and how many you

343
00:14:09,159 --> 00:14:14,470
know they charge per defined as per how

344
00:14:11,799 --> 00:14:17,019
many affected users were there this

345
00:14:14,470 --> 00:14:19,899
would be staggering and everybody that

346
00:14:17,019 --> 00:14:21,789
had the mobile app so I still haven't

347
00:14:19,899 --> 00:14:29,949
seen any info on what the penalties were

348
00:14:21,789 --> 00:14:33,579
about here's another one this is a

349
00:14:29,949 --> 00:14:37,389
simple account enumeration okay so this

350
00:14:33,579 --> 00:14:39,399
app was called bright city and it was

351
00:14:37,389 --> 00:14:41,559
apparently a popular app for local

352
00:14:39,399 --> 00:14:43,269
governments so let's say I live in the

353
00:14:41,559 --> 00:14:45,069
loganville it's where I live so the city

354
00:14:43,269 --> 00:14:46,600
would say hey you know we're helping you

355
00:14:45,069 --> 00:14:48,128
protect your property you know there's

356
00:14:46,600 --> 00:14:50,169
been a lot of break-ins what you can do

357
00:14:48,129 --> 00:14:54,970
is use this app to catalogue everything

358
00:14:50,169 --> 00:14:56,350
in your house and it sounds crazy but in

359
00:14:54,970 --> 00:14:57,819
a way you know if your house ever burns

360
00:14:56,350 --> 00:14:59,109
down I've kind of heard these before you

361
00:14:57,819 --> 00:15:00,579
know you want a catalog you want

362
00:14:59,109 --> 00:15:01,989
pictures of what you had so you have a

363
00:15:00,579 --> 00:15:02,978
record of what's important in your house

364
00:15:01,989 --> 00:15:05,499
that's worth money

365
00:15:02,979 --> 00:15:07,059
so these governments were pushing this

366
00:15:05,499 --> 00:15:08,439
app onto everybody saying hey there's

367
00:15:07,059 --> 00:15:09,999
really helpful for these cases we get

368
00:15:08,439 --> 00:15:11,769
robbed or if your house burns down you

369
00:15:09,999 --> 00:15:12,669
have this evidence now what's in your

370
00:15:11,769 --> 00:15:13,409
house you can go to your insurance

371
00:15:12,669 --> 00:15:17,049
company

372
00:15:13,409 --> 00:15:19,629
well they had their back-end API for the

373
00:15:17,049 --> 00:15:21,459
mobile app didn't actually validate when

374
00:15:19,629 --> 00:15:23,439
you make calls that you're the actual

375
00:15:21,459 --> 00:15:26,289
user that logged in to make those calls

376
00:15:23,439 --> 00:15:28,868
and it's kind of hard to see but here's

377
00:15:26,289 --> 00:15:31,569
a call here to their API that says get

378
00:15:28,869 --> 00:15:34,019
user and you put in your ID let's say

379
00:15:31,569 --> 00:15:37,118
it's one and it comes back and it says

380
00:15:34,019 --> 00:15:39,399
well that's Ray even though you're Joe

381
00:15:37,119 --> 00:15:41,370
or your Davis it would say well you're

382
00:15:39,399 --> 00:15:43,290
Ray and here's everything that came

383
00:15:41,370 --> 00:15:45,240
back which included your phone number

384
00:15:43,290 --> 00:15:47,640
your username and your password to your

385
00:15:45,240 --> 00:15:48,960
account to write city now I'm going to

386
00:15:47,640 --> 00:15:52,140
go get number two number three number

387
00:15:48,960 --> 00:15:55,460
four I can own everybody's account

388
00:15:52,140 --> 00:15:57,510
through this do this mobile API back-end

389
00:15:55,460 --> 00:15:59,339
and so I thought it's kind of fun it's

390
00:15:57,510 --> 00:16:01,410
kind of Amazon for criminals right man I

391
00:15:59,339 --> 00:16:02,910
need to look for a flat screen TV fifty

392
00:16:01,410 --> 00:16:06,300
too much I'm gonna log into here and see

393
00:16:02,910 --> 00:16:08,010
one house and then I'm gonna go and try

394
00:16:06,300 --> 00:16:18,150
to break into their house and go get

395
00:16:08,010 --> 00:16:19,319
into silence oh and something else to

396
00:16:18,150 --> 00:16:23,069
notice too

397
00:16:19,320 --> 00:16:27,240
this is using SSL itch

398
00:16:23,070 --> 00:16:28,710
so it's HTTP so the problem is that

399
00:16:27,240 --> 00:16:30,360
doesn't protect you from accounting

400
00:16:28,710 --> 00:16:32,520
numeration right if I'm on the back end

401
00:16:30,360 --> 00:16:34,920
if I'm the one hacking you going thing

402
00:16:32,520 --> 00:16:37,560
SSL do is doing is helping hight me

403
00:16:34,920 --> 00:16:40,050
actually from the company that that I'm

404
00:16:37,560 --> 00:16:41,550
attacking you know because it's going

405
00:16:40,050 --> 00:16:44,219
through the web a firewall it's still

406
00:16:41,550 --> 00:16:46,439
encrypted so that's a sell actually

407
00:16:44,220 --> 00:16:54,540
didn't happen it doesn't help in this

408
00:16:46,440 --> 00:16:56,400
case so now won't work a move our way

409
00:16:54,540 --> 00:16:59,969
now into the network layer so now we're

410
00:16:56,400 --> 00:17:03,150
on to the next one this was an example

411
00:16:59,970 --> 00:17:05,699
here that we had in this mobile app was

412
00:17:03,150 --> 00:17:07,439
for a big time boy damn know so think of

413
00:17:05,699 --> 00:17:09,959
like New Kids on the Block any new kids

414
00:17:07,439 --> 00:17:16,110
fans in here I know we got one up there

415
00:17:09,959 --> 00:17:18,630
my wife so if you think by this the

416
00:17:16,109 --> 00:17:21,178
target demographic for this app is like

417
00:17:18,630 --> 00:17:23,490
12 to 16 year old girls probably for

418
00:17:21,179 --> 00:17:25,170
this boy Dan and we're testing the app

419
00:17:23,490 --> 00:17:27,120
and our testers so a part of our testing

420
00:17:25,170 --> 00:17:28,940
process is watch Lee install the app on

421
00:17:27,119 --> 00:17:31,020
a device and run it through a proxy and

422
00:17:28,940 --> 00:17:32,460
watch what you know we're looking for

423
00:17:31,020 --> 00:17:35,820
data leakage what's what's happening

424
00:17:32,460 --> 00:17:38,970
we're stuff going to and stuff flying by

425
00:17:35,820 --> 00:17:40,570
and all of a sudden the tester notices a

426
00:17:38,970 --> 00:17:43,059
request go by

427
00:17:40,570 --> 00:17:45,070
it has his home address in there down to

428
00:17:43,059 --> 00:17:47,110
the street number one two three here

429
00:17:45,070 --> 00:17:49,720
Street I mean it was dead on and he

430
00:17:47,110 --> 00:17:52,149
never typed it into the app never even

431
00:17:49,720 --> 00:17:54,100
put it in there and so what we were

432
00:17:52,149 --> 00:17:55,989
thinking is they're just using GPS or

433
00:17:54,100 --> 00:17:58,629
Wi-Fi location you know just to figure

434
00:17:55,990 --> 00:18:00,429
out what address in my app but the this

435
00:17:58,630 --> 00:18:01,990
company that made the mobile app or the

436
00:18:00,429 --> 00:18:04,210
boy Dan thought it was a great idea just

437
00:18:01,990 --> 00:18:07,690
to take that from you and send that to

438
00:18:04,210 --> 00:18:14,200
their servers so that one was pretty

439
00:18:07,690 --> 00:18:16,480
scary is that a vulnerability maybe not

440
00:18:14,200 --> 00:18:18,549
certainly a privacy issue as if the user

441
00:18:16,480 --> 00:18:26,710
never agreed you know to give that sort

442
00:18:18,549 --> 00:18:30,730
of information by using the app another

443
00:18:26,710 --> 00:18:32,470
example so I had written a tool I was

444
00:18:30,730 --> 00:18:34,659
trying to make something for our testers

445
00:18:32,470 --> 00:18:36,009
make testing mobile apps is painful

446
00:18:34,659 --> 00:18:37,809
right there's a lot of setup involved

447
00:18:36,009 --> 00:18:41,679
you have to you know try to get in the

448
00:18:37,809 --> 00:18:43,450
middle you know if if your developers

449
00:18:41,679 --> 00:18:45,370
doing things properly actually pinning

450
00:18:43,450 --> 00:18:46,720
the certificate and everything's done

451
00:18:45,370 --> 00:18:47,949
properly just makes a little more

452
00:18:46,720 --> 00:18:50,200
difficult so it's painful so I was

453
00:18:47,950 --> 00:18:52,779
trying to find ways to make this easier

454
00:18:50,200 --> 00:18:53,620
and I had taken the Android operating

455
00:18:52,779 --> 00:18:55,029
system

456
00:18:53,620 --> 00:18:56,320
maybe I'll just make my own Android

457
00:18:55,029 --> 00:18:58,629
operating system right that we can

458
00:18:56,320 --> 00:19:00,279
install the app on so I took the source

459
00:18:58,629 --> 00:19:02,350
code and made some modifications where I

460
00:19:00,279 --> 00:19:04,029
would intercept things from it like any

461
00:19:02,350 --> 00:19:06,549
time a network request is left for the

462
00:19:04,029 --> 00:19:09,519
device I'm gonna grab it before SSL

463
00:19:06,549 --> 00:19:10,809
encryption occurs and login so that way

464
00:19:09,519 --> 00:19:13,059
we can install the app and just see

465
00:19:10,809 --> 00:19:16,000
what's happening as far as the network

466
00:19:13,059 --> 00:19:18,428
traffic goes so I install a popular

467
00:19:16,000 --> 00:19:19,980
social networking app I'll say which one

468
00:19:18,429 --> 00:19:23,529
it is but it was social networking

469
00:19:19,980 --> 00:19:25,059
related and I'm testing it I just

470
00:19:23,529 --> 00:19:26,590
started testing as like cool man there's

471
00:19:25,059 --> 00:19:29,830
some stuff going also and I see this

472
00:19:26,590 --> 00:19:31,059
chunk of data go out I was like oh my

473
00:19:29,830 --> 00:19:31,629
god something just happened something

474
00:19:31,059 --> 00:19:33,999
blue

475
00:19:31,629 --> 00:19:35,379
something must have gone wrong and I

476
00:19:33,999 --> 00:19:37,119
started looking through this chunk of

477
00:19:35,379 --> 00:19:38,830
data and I know you guys can't read it

478
00:19:37,119 --> 00:19:40,029
but to read some of the things I got

479
00:19:38,830 --> 00:19:44,168
highlighted in red

480
00:19:40,029 --> 00:19:45,369
Wi-Fi info home screen mode is your

481
00:19:44,169 --> 00:19:48,729
Wi-Fi enabled

482
00:19:45,369 --> 00:19:51,220
screen brightness key card type for

483
00:19:48,729 --> 00:19:53,289
instance is your are you using what kind

484
00:19:51,220 --> 00:19:56,259
of security using to get in right you

485
00:19:53,289 --> 00:20:00,220
are you using a pin code how much free

486
00:19:56,259 --> 00:20:02,320
space is on my SD card let's see what

487
00:20:00,220 --> 00:20:05,409
else is in here what kind of camera

488
00:20:02,320 --> 00:20:08,259
configurations are on the device so by

489
00:20:05,409 --> 00:20:09,789
using this app they just pilfered all of

490
00:20:08,259 --> 00:20:12,940
this information about my device and

491
00:20:09,789 --> 00:20:16,899
someone to set up and just took that you

492
00:20:12,940 --> 00:20:18,220
know without my knowledge so again that

493
00:20:16,899 --> 00:20:20,258
was kind of an example where they're

494
00:20:18,220 --> 00:20:21,609
just taking information developers

495
00:20:20,259 --> 00:20:23,799
thought that would be a good idea and

496
00:20:21,609 --> 00:20:26,019
maybe their Terms of Service allows it

497
00:20:23,799 --> 00:20:29,369
but I certainly didn't care for it care

498
00:20:26,019 --> 00:20:29,369
for that to see that happen

499
00:20:34,950 --> 00:20:40,140
Bose headphones so this one came out and

500
00:20:37,730 --> 00:20:42,150
what they were doing is so all these

501
00:20:40,140 --> 00:20:44,430
newfangled your headphones right they

502
00:20:42,150 --> 00:20:46,650
have mobile app so you can do the EQ you

503
00:20:44,430 --> 00:20:48,030
figure things well apparently the other

504
00:20:46,650 --> 00:20:49,740
thing to do is steal your listening

505
00:20:48,030 --> 00:20:51,450
habits and what songs you're listening

506
00:20:49,740 --> 00:20:54,150
to and take that information and send

507
00:20:51,450 --> 00:20:56,340
them up to their server also so again

508
00:20:54,150 --> 00:20:58,410
you don't it clearly doesn't show that

509
00:20:56,340 --> 00:21:02,149
in the app but yet they are doing that

510
00:20:58,410 --> 00:21:02,150
in the background yes

511
00:21:13,100 --> 00:21:17,928
I they certainly could my first thought

512
00:21:16,279 --> 00:21:19,970
though for the last note for the social

513
00:21:17,929 --> 00:21:21,289
networking one my first thought though

514
00:21:19,970 --> 00:21:24,259
was marketing you know selling

515
00:21:21,289 --> 00:21:26,929
information you know or even think of

516
00:21:24,259 --> 00:21:31,340
advertising right so it sent up how much

517
00:21:26,929 --> 00:21:33,980
free disk disk space i had on my device

518
00:21:31,340 --> 00:21:36,110
you know i'm scrolling through my my

519
00:21:33,980 --> 00:21:38,630
profile you know post also here's an ad

520
00:21:36,110 --> 00:21:40,189
for hey you need a new SD card here's

521
00:21:38,630 --> 00:21:42,919
you know blah blah so they can actually

522
00:21:40,190 --> 00:21:44,929
target me directly from that kind of

523
00:21:42,919 --> 00:21:46,730
data you know or tell that i'm at an

524
00:21:44,929 --> 00:21:49,279
older device and all of a sudden I start

525
00:21:46,730 --> 00:21:51,470
seeing ads for new phones that are

526
00:21:49,279 --> 00:21:53,750
coming out so or just selling that

527
00:21:51,470 --> 00:21:55,850
information to other marketing firms or

528
00:21:53,750 --> 00:21:57,769
even device me factors how many people

529
00:21:55,850 --> 00:21:59,959
you know what user base is using Android

530
00:21:57,769 --> 00:22:02,419
versus iOS I could sell it's just money

531
00:21:59,960 --> 00:22:03,440
you know all that information that was

532
00:22:02,419 --> 00:22:05,139
kind of my first thought I could

533
00:22:03,440 --> 00:22:08,139
certainly see finger printing as well

534
00:22:05,139 --> 00:22:08,139
easily

535
00:22:17,179 --> 00:22:21,179
ok so now we're going to move on to the

536
00:22:19,380 --> 00:22:23,010
client side so now we're talking about

537
00:22:21,179 --> 00:22:26,580
the device itself

538
00:22:23,010 --> 00:22:28,860
Starbucks mobile app users so this one's

539
00:22:26,580 --> 00:22:30,960
quite a few years ago but it was kind of

540
00:22:28,860 --> 00:22:32,639
a big one that maybe it was crazy

541
00:22:30,960 --> 00:22:35,700
there's like four big mobile horner

542
00:22:32,640 --> 00:22:37,049
abilities that came out in a row and

543
00:22:35,700 --> 00:22:39,240
this was one of them does anyone

544
00:22:37,049 --> 00:22:41,100
remember this that they the announcement

545
00:22:39,240 --> 00:22:44,960
about us the Starbucks mobile app had

546
00:22:41,100 --> 00:22:49,490
some issues well say Starbucks coffee

547
00:22:44,960 --> 00:22:53,269
I'm a Dunkin Donuts coffee man myself so

548
00:22:49,490 --> 00:22:56,610
the crux of this issue was that the

549
00:22:53,269 --> 00:22:58,080
developers used crashlytics most people

550
00:22:56,610 --> 00:23:01,129
do that right so they add that so they

551
00:22:58,080 --> 00:23:04,320
can into their into their project and

552
00:23:01,130 --> 00:23:05,970
but what they chose to do so crashlytics

553
00:23:04,320 --> 00:23:07,980
you can log anything you want you can

554
00:23:05,970 --> 00:23:10,710
you know it's there to track issues and

555
00:23:07,980 --> 00:23:13,080
such so they were recording the screen

556
00:23:10,710 --> 00:23:14,850
where you log in so when you would hit

557
00:23:13,080 --> 00:23:17,279
login after you type your username

558
00:23:14,850 --> 00:23:19,918
password it would log what that HTML

559
00:23:17,279 --> 00:23:22,559
page looked like at that time so

560
00:23:19,919 --> 00:23:24,840
unfortunately it included the account

561
00:23:22,559 --> 00:23:26,100
news mate and the account password and

562
00:23:24,840 --> 00:23:28,918
that was actually being sent to

563
00:23:26,100 --> 00:23:29,939
crashlytics you know unintentionally I

564
00:23:28,919 --> 00:23:33,419
mean they probably never even thought

565
00:23:29,940 --> 00:23:34,889
that that was really gonna happen they

566
00:23:33,419 --> 00:23:36,480
were probably trying to log stuff and

567
00:23:34,889 --> 00:23:38,580
they unintentionally

568
00:23:36,480 --> 00:23:40,110
grabbed usernames and passwords and

569
00:23:38,580 --> 00:23:42,600
started sending that to a third party

570
00:23:40,110 --> 00:23:44,340
now I'm sure no one there was looking at

571
00:23:42,600 --> 00:23:48,059
it but just the idea that that got me

572
00:23:44,340 --> 00:23:52,799
down so it was kind of funny so the

573
00:23:48,059 --> 00:23:54,149
press whoever put this out issued a

574
00:23:52,799 --> 00:23:55,918
release you know when reached Wednesday

575
00:23:54,149 --> 00:23:57,600
crashlytics a boston-based firm that

576
00:23:55,919 --> 00:23:59,789
specialized in crash reporting solutions

577
00:23:57,600 --> 00:24:01,980
couldn't comment on the specific

578
00:23:59,789 --> 00:24:03,779
customers but did reiterate that the

579
00:24:01,980 --> 00:24:07,049
firm doesn't recommend developers log

580
00:24:03,779 --> 00:24:11,779
sensitive information so that's not our

581
00:24:07,049 --> 00:24:11,779
problem the solution is don't do that

582
00:24:15,620 --> 00:24:19,969
logging so this is a great one our test

583
00:24:17,810 --> 00:24:21,770
reviews we always see all kinds of stuff

584
00:24:19,970 --> 00:24:23,870
so if you're doing a debug logging

585
00:24:21,770 --> 00:24:25,910
console right that sort of thing in your

586
00:24:23,870 --> 00:24:27,949
mobile apps a lot of the times

587
00:24:25,910 --> 00:24:29,300
developers don't take those messages out

588
00:24:27,950 --> 00:24:31,730
before they ship them up to the App

589
00:24:29,300 --> 00:24:34,159
Store and so you can find lots of good

590
00:24:31,730 --> 00:24:35,870
information there and this is an example

591
00:24:34,160 --> 00:24:38,060
of one here where we actually saw a user

592
00:24:35,870 --> 00:24:41,870
name and passwords being written out to

593
00:24:38,060 --> 00:24:43,730
the device to the console also so it's

594
00:24:41,870 --> 00:24:46,610
sort of a developer stuff that they just

595
00:24:43,730 --> 00:24:56,240
don't think to take out so that's an

596
00:24:46,610 --> 00:24:58,100
easy target there so this was a good one

597
00:24:56,240 --> 00:25:00,020
this this issue's been pretty much

598
00:24:58,100 --> 00:25:02,300
eradicated in that with sandboxing and

599
00:25:00,020 --> 00:25:04,100
some some things that have been done

600
00:25:02,300 --> 00:25:05,659
over the past couple years but we used

601
00:25:04,100 --> 00:25:07,580
to get a lot of banks right back when

602
00:25:05,660 --> 00:25:09,740
mobile apps were just coming out for

603
00:25:07,580 --> 00:25:11,480
banking for banks and they had that

604
00:25:09,740 --> 00:25:14,360
feature where you can take a picture of

605
00:25:11,480 --> 00:25:16,070
your check right in the positive well we

606
00:25:14,360 --> 00:25:18,290
tested the app and we may sent it to

607
00:25:16,070 --> 00:25:20,600
said hey hurry up man we're putting this

608
00:25:18,290 --> 00:25:22,100
thing in the App Store let us know you

609
00:25:20,600 --> 00:25:25,879
know we're gonna hopefully do this today

610
00:25:22,100 --> 00:25:27,530
okay we gotta test it so we end up

611
00:25:25,880 --> 00:25:28,790
testing it what we found is when you

612
00:25:27,530 --> 00:25:31,490
take a picture that's checked it was

613
00:25:28,790 --> 00:25:33,470
story it to the global camera roll not

614
00:25:31,490 --> 00:25:36,110
the sandbox or the the applications

615
00:25:33,470 --> 00:25:38,840
directory so any app had access to these

616
00:25:36,110 --> 00:25:42,709
checks and things that were being for

617
00:25:38,840 --> 00:25:44,899
the pictures that were being taken so we

618
00:25:42,710 --> 00:25:47,800
sent it back and said well you guys have

619
00:25:44,900 --> 00:25:50,540
a vulnerability don't don't do that

620
00:25:47,800 --> 00:25:52,129
and so like oh yeah okay we got that so

621
00:25:50,540 --> 00:25:53,690
they sent it back the next things that

622
00:25:52,130 --> 00:25:56,600
we fixed it by the way we're submitting

623
00:25:53,690 --> 00:25:58,100
this to the App Store right now tested

624
00:25:56,600 --> 00:25:59,449
you know cuz we're in a hurry and again

625
00:25:58,100 --> 00:26:00,889
that goes back to that pressure that

626
00:25:59,450 --> 00:26:04,790
developers were under to get their

627
00:26:00,890 --> 00:26:06,650
mobile apps out you know so I said okay

628
00:26:04,790 --> 00:26:09,050
so we tested again did it show and they

629
00:26:06,650 --> 00:26:10,490
did they fixed that issue but what we

630
00:26:09,050 --> 00:26:12,470
have found is when went into another

631
00:26:10,490 --> 00:26:14,360
feature you can actually go into an area

632
00:26:12,470 --> 00:26:16,760
where you could see what's been what has

633
00:26:14,360 --> 00:26:18,800
gone through your your bank account and

634
00:26:16,760 --> 00:26:20,210
you can swipe through deposits and such

635
00:26:18,800 --> 00:26:21,950
that have been in there so you just keep

636
00:26:20,210 --> 00:26:23,840
swiping and as you're swiping it

637
00:26:21,950 --> 00:26:26,390
each one back to the global camera roll

638
00:26:23,840 --> 00:26:31,250
again so it was storing everything back

639
00:26:26,390 --> 00:26:32,750
there so you're like no don't so we sent

640
00:26:31,250 --> 00:26:35,780
that back again but the kind of an

641
00:26:32,750 --> 00:26:37,490
example the again the pressures that

642
00:26:35,780 --> 00:26:38,870
they're under this is pretty hard to

643
00:26:37,490 --> 00:26:40,640
come by now it's actually kind of hard

644
00:26:38,870 --> 00:26:42,679
to get out of your sandbox these days

645
00:26:40,640 --> 00:26:52,130
when you're storing data for your

646
00:26:42,680 --> 00:26:54,700
application so much more rare client

647
00:26:52,130 --> 00:26:56,720
debug screens so this one's interesting

648
00:26:54,700 --> 00:26:59,450
you know with different tools there's

649
00:26:56,720 --> 00:27:02,540
one called flex for iOS where it'll let

650
00:26:59,450 --> 00:27:05,150
you wrap the any application basically

651
00:27:02,540 --> 00:27:06,649
and get into certain aspects of it it'll

652
00:27:05,150 --> 00:27:08,840
it'll tear apart the memory

653
00:27:06,650 --> 00:27:11,630
it'll look let you look at variables or

654
00:27:08,840 --> 00:27:12,709
stored within the application and one of

655
00:27:11,630 --> 00:27:16,160
those is you can actually trigger

656
00:27:12,710 --> 00:27:18,020
activities or storyboards or screens

657
00:27:16,160 --> 00:27:20,420
within the app that aren't visible

658
00:27:18,020 --> 00:27:21,920
always so a lot of the times for to be

659
00:27:20,420 --> 00:27:23,870
helpful the developers will put in a

660
00:27:21,920 --> 00:27:26,210
secret so if I log in this admin in the

661
00:27:23,870 --> 00:27:28,399
app there'll be an extra menu item let's

662
00:27:26,210 --> 00:27:29,930
say that says debug where I can get in

663
00:27:28,400 --> 00:27:32,510
there and look at look at certain things

664
00:27:29,930 --> 00:27:34,850
and some of the ones that we were able

665
00:27:32,510 --> 00:27:42,980
to find it had come through it's like

666
00:27:34,850 --> 00:27:43,550
you know disabled sir pinning it for

667
00:27:42,980 --> 00:27:47,780
this one

668
00:27:43,550 --> 00:27:49,430
upload log file incentive and what we

669
00:27:47,780 --> 00:27:51,530
found on that particular one for this

670
00:27:49,430 --> 00:27:53,270
application is the back end didn't

671
00:27:51,530 --> 00:27:55,550
validate at all what was being up

672
00:27:53,270 --> 00:27:57,650
limited so we we sniffed that we

673
00:27:55,550 --> 00:28:00,919
uploaded a log file we say okay here's

674
00:27:57,650 --> 00:28:03,050
the end point and we uploaded a JPEG

675
00:28:00,920 --> 00:28:04,940
anything and it accepted it so kind of

676
00:28:03,050 --> 00:28:08,090
like earlier it became it became an open

677
00:28:04,940 --> 00:28:12,530
onedrive for us or Dropbox because of

678
00:28:08,090 --> 00:28:16,639
this feature so and we had another one

679
00:28:12,530 --> 00:28:18,740
over here with this one had this one

680
00:28:16,640 --> 00:28:21,880
here it allows you to change between

681
00:28:18,740 --> 00:28:24,680
production staging or canary or like QA

682
00:28:21,880 --> 00:28:26,870
well that just tripled my threat surface

683
00:28:24,680 --> 00:28:27,490
for this application now I got three

684
00:28:26,870 --> 00:28:29,830
servers

685
00:28:27,490 --> 00:28:33,100
go attack and find vulnerabilities or

686
00:28:29,830 --> 00:28:36,340
not so being able to find information in

687
00:28:33,100 --> 00:28:38,500
these debug screens is a big one and one

688
00:28:36,340 --> 00:28:40,389
of the big ones that we do help me tell

689
00:28:38,500 --> 00:28:42,370
people is you know don't ship those and

690
00:28:40,390 --> 00:28:44,950
these are in the App Store versions of

691
00:28:42,370 --> 00:28:47,379
these apps or they were at the time that

692
00:28:44,950 --> 00:28:49,929
you know the food before you build for

693
00:28:47,380 --> 00:28:51,730
the App Store take those screens out or

694
00:28:49,929 --> 00:28:54,580
make it a conditional compile statement

695
00:28:51,730 --> 00:29:02,500
that removes that activity so they don't

696
00:28:54,580 --> 00:29:05,050
get a shift with the application so this

697
00:29:02,500 --> 00:29:06,040
one's one of my favorites that we didn't

698
00:29:05,050 --> 00:29:08,409
run across

699
00:29:06,040 --> 00:29:10,950
I saw a talk this morning and it was

700
00:29:08,410 --> 00:29:13,870
mentioned where they were talking about

701
00:29:10,950 --> 00:29:16,150
Alexa's and voice recognition and such

702
00:29:13,870 --> 00:29:18,070
and so he kind of touched on this

703
00:29:16,150 --> 00:29:20,650
vulnerability as well so we had an app

704
00:29:18,070 --> 00:29:23,350
and this app was so secure use voice

705
00:29:20,650 --> 00:29:25,210
recognition to login it and so you would

706
00:29:23,350 --> 00:29:27,760
go in and say login and say hi my name

707
00:29:25,210 --> 00:29:29,290
is Ray because I had recorded that and

708
00:29:27,760 --> 00:29:29,650
it would let me into the app it actually

709
00:29:29,290 --> 00:29:31,360
worked

710
00:29:29,650 --> 00:29:32,770
other people would try it you know we

711
00:29:31,360 --> 00:29:36,639
couldn't get around it seemed pretty

712
00:29:32,770 --> 00:29:39,190
legit that it was working so one of our

713
00:29:36,640 --> 00:29:40,929
testing procedures that we do is when we

714
00:29:39,190 --> 00:29:42,940
use an app we'll take a snapshot of the

715
00:29:40,929 --> 00:29:44,500
apps directory on the device ok here's

716
00:29:42,940 --> 00:29:47,290
what it looks like there's let's say 20

717
00:29:44,500 --> 00:29:49,300
files in there and then we'll use the

718
00:29:47,290 --> 00:29:51,070
app for awhile I'll record my login I'm

719
00:29:49,300 --> 00:29:53,080
going to use it ok now I'm going to take

720
00:29:51,070 --> 00:29:54,340
another snapshot oh look there's 25

721
00:29:53,080 --> 00:29:57,428
files that exist

722
00:29:54,340 --> 00:29:58,720
well those 5 files interesting now so

723
00:29:57,429 --> 00:30:01,809
I'm gonna go look at each one of those

724
00:29:58,720 --> 00:30:04,750
and we ran across one file that made no

725
00:30:01,809 --> 00:30:06,160
sense it was like zebra XY see the file

726
00:30:04,750 --> 00:30:08,590
name the extension none of it makes

727
00:30:06,160 --> 00:30:10,720
sense and so we open it up into a hex

728
00:30:08,590 --> 00:30:13,360
editor or just some notepad just to see

729
00:30:10,720 --> 00:30:15,340
what's in it and it's all garbage it's

730
00:30:13,360 --> 00:30:18,070
just completely binary mess I thought

731
00:30:15,340 --> 00:30:20,290
okay well either it's encrypted which is

732
00:30:18,070 --> 00:30:21,939
great or you know there's some other

733
00:30:20,290 --> 00:30:23,340
uses for it but it doesn't look and then

734
00:30:21,940 --> 00:30:24,840
wait a minute let me see

735
00:30:23,340 --> 00:30:27,240
here at the near the top of this file

736
00:30:24,840 --> 00:30:33,870
and we start seeing clear text words

737
00:30:27,240 --> 00:30:35,790
like genre you're made title anyone mp3

738
00:30:33,870 --> 00:30:38,189
files so movie thing so what the tester

739
00:30:35,790 --> 00:30:40,139
did is he took the file copied it off on

740
00:30:38,190 --> 00:30:42,480
this computer renamed mp3 hold the phone

741
00:30:40,140 --> 00:30:47,370
I hit play hi my name is Ray got into

742
00:30:42,480 --> 00:30:53,910
the application just like that so an

743
00:30:47,370 --> 00:30:55,320
example of where security to obfuscation

744
00:30:53,910 --> 00:30:57,150
right I'm gonna rename it to something

745
00:30:55,320 --> 00:31:07,800
that doesn't make sense and no hacker

746
00:30:57,150 --> 00:31:10,470
will ever find that vulnerability so I

747
00:31:07,800 --> 00:31:12,210
just couple of resources so oh so what

748
00:31:10,470 --> 00:31:13,290
this is all related to application

749
00:31:12,210 --> 00:31:17,280
security you know we're talking about

750
00:31:13,290 --> 00:31:18,899
social networking networking security my

751
00:31:17,280 --> 00:31:22,680
favorite of course cuz a web inspect and

752
00:31:18,900 --> 00:31:24,780
is app security so this falls right in

753
00:31:22,680 --> 00:31:26,970
line with that so oh waswas a great

754
00:31:24,780 --> 00:31:29,790
resource for that they have an oval

755
00:31:26,970 --> 00:31:31,110
top-10 for mobile apps specifically so

756
00:31:29,790 --> 00:31:32,879
if you want to go see what's the hottest

757
00:31:31,110 --> 00:31:34,620
you know what are the top corner

758
00:31:32,880 --> 00:31:37,400
abilities right now you can check out

759
00:31:34,620 --> 00:31:37,399
it'll us for that

760
00:31:42,689 --> 00:31:45,989
this one here actually so this one's

761
00:31:44,399 --> 00:31:48,299
kind of out of date but I think it still

762
00:31:45,989 --> 00:31:52,019
works is called goat droid so penguins

763
00:31:48,299 --> 00:31:53,849
heard of web goat for testing web

764
00:31:52,019 --> 00:31:56,009
applications they have goat droid

765
00:31:53,849 --> 00:31:58,139
which is actually a vulnerable Android

766
00:31:56,009 --> 00:31:59,399
app and so you can install it and

767
00:31:58,139 --> 00:32:01,319
there's a course where you go through

768
00:31:59,399 --> 00:32:02,908
and actually hack the application and go

769
00:32:01,319 --> 00:32:05,519
through the different steps to identify

770
00:32:02,909 --> 00:32:12,599
things so that's a that's a good

771
00:32:05,519 --> 00:32:14,879
resource on that and I had mentioned the

772
00:32:12,599 --> 00:32:16,918
OS mobile security project which has the

773
00:32:14,879 --> 00:32:18,958
top ten listed on it and a whole bunch

774
00:32:16,919 --> 00:32:26,759
of resources and tools as well for

775
00:32:18,959 --> 00:32:28,349
testing mobile apps and that is the end

776
00:32:26,759 --> 00:32:30,269
of the presentation you can follow me on

777
00:32:28,349 --> 00:32:33,119
Twitter its BB is best there goes the

778
00:32:30,269 --> 00:32:36,299
rest of my credibility of the window but

779
00:32:33,119 --> 00:32:39,168
I'll be there and I'm open for questions

780
00:32:36,299 --> 00:32:45,959
since we have plenty of time I think

781
00:32:39,169 --> 00:32:47,819
anyone yes that's a I get that question

782
00:32:45,959 --> 00:32:49,439
all the time and that's that's tricky

783
00:32:47,819 --> 00:32:52,139
so these vulnerabilities that we're

784
00:32:49,439 --> 00:32:53,609
talking about here today it doesn't

785
00:32:52,139 --> 00:32:56,069
matter if the developer is not

786
00:32:53,609 --> 00:32:57,448
encrypting your information on the

787
00:32:56,069 --> 00:32:59,479
device it doesn't matter what device

788
00:32:57,449 --> 00:33:02,759
you're using

789
00:32:59,479 --> 00:33:05,459
so these developer mistake issues isn't

790
00:33:02,759 --> 00:33:07,079
really specific to any one platform what

791
00:33:05,459 --> 00:33:08,719
it what I do find different though is

792
00:33:07,079 --> 00:33:11,668
malicious actors people that in

793
00:33:08,719 --> 00:33:14,309
uploading Angry Birds of Melissa's

794
00:33:11,669 --> 00:33:15,569
malicious version of it I think you'll

795
00:33:14,309 --> 00:33:17,939
find plenty of research that says

796
00:33:15,569 --> 00:33:19,678
Android is definitely worse in that case

797
00:33:17,939 --> 00:33:23,549
that there's much more malicious apps

798
00:33:19,679 --> 00:33:26,519
out there it just seems that Apple's

799
00:33:23,549 --> 00:33:30,179
review processes to be more thorough so

800
00:33:26,519 --> 00:33:32,729
I would say in that case you know iOS

801
00:33:30,179 --> 00:33:34,619
for malicious activity is a little bit

802
00:33:32,729 --> 00:33:38,159
safer but for these type of developer

803
00:33:34,619 --> 00:33:39,220
mistakes it doesn't really fit that put

804
00:33:38,159 --> 00:33:41,470
that whole

805
00:33:39,220 --> 00:33:44,520
let me there's there's what there's some

806
00:33:41,470 --> 00:33:48,490
libraries that would be a little more

807
00:33:44,520 --> 00:33:51,910
into making it easier for people who

808
00:33:48,490 --> 00:33:53,460
develop secure applications either

809
00:33:51,910 --> 00:33:57,640
Android or on iOS

810
00:33:53,460 --> 00:33:58,870
we're not yeah I know you kind of grab

811
00:33:57,640 --> 00:34:01,360
what you get I'm not familiar with any

812
00:33:58,870 --> 00:34:03,070
libraries that make your app secure off

813
00:34:01,360 --> 00:34:04,959
the top of my head you know you're just

814
00:34:03,070 --> 00:34:06,700
using java eclipse render interviews in

815
00:34:04,960 --> 00:34:10,090
Xcode you're you're writing your app

816
00:34:06,700 --> 00:34:11,230
yeah and there you go right and and by

817
00:34:10,090 --> 00:34:12,910
the way you're including a whole ton of

818
00:34:11,230 --> 00:34:34,929
open source probably which has its own

819
00:34:12,909 --> 00:34:36,520
right a set of issues as well yeah they

820
00:34:34,929 --> 00:34:38,679
don't catch those I believe they do

821
00:34:36,520 --> 00:34:40,360
catch things like blacklisted websites

822
00:34:38,679 --> 00:34:41,980
and anything they can find in that case

823
00:34:40,360 --> 00:34:43,929
but again if a developer makes a bad

824
00:34:41,980 --> 00:34:46,240
decision and stores an image to the

825
00:34:43,929 --> 00:34:48,639
global camera roll or your you know your

826
00:34:46,239 --> 00:34:49,928
your camera roll in general they're not

827
00:34:48,639 --> 00:34:52,569
going to fly it they don't know what the

828
00:34:49,929 --> 00:34:54,250
users storing right it's sort of it's

829
00:34:52,570 --> 00:34:56,800
unknown at that point so these are much

830
00:34:54,250 --> 00:34:59,140
harder but for malicious apps that they

831
00:34:56,800 --> 00:35:01,090
can scan and look for you know

832
00:34:59,140 --> 00:35:04,000
fingerprints or signatures of now where

833
00:35:01,090 --> 00:35:07,000
they will flag those and remove those

834
00:35:04,000 --> 00:35:11,350
but not for developer bad decisions I'd

835
00:35:07,000 --> 00:35:13,180
say or for instance the crashlytics

836
00:35:11,350 --> 00:35:14,740
example where Starbucks was sending the

837
00:35:13,180 --> 00:35:16,270
username password you know apples not

838
00:35:14,740 --> 00:35:18,750
going to see that or care about you know

839
00:35:16,270 --> 00:35:21,700
they don't want they're using the app

840
00:35:18,750 --> 00:35:23,720
example

841
00:35:21,700 --> 00:35:25,970
right yeah they will not apply that

842
00:35:23,720 --> 00:35:28,098
because that's legit it's not a great

843
00:35:25,970 --> 00:35:30,348
idea that you certainly couldn't do that

844
00:35:28,099 --> 00:35:33,859
so they wouldn't remove that flag a

845
00:35:30,349 --> 00:35:35,750
pretty reason yeah how can you test

846
00:35:33,859 --> 00:35:37,880
these for these vulnerabilities for

847
00:35:35,750 --> 00:35:40,910
example the SAS tools or anything like

848
00:35:37,880 --> 00:35:44,480
fall if I cannot test for these like for

849
00:35:40,910 --> 00:35:46,460
example your app sending data to several

850
00:35:44,480 --> 00:35:48,650
rack you shouldn't

851
00:35:46,460 --> 00:35:50,450
to test the backend server that one's

852
00:35:48,650 --> 00:35:52,690
pretty easy actually so basically you

853
00:35:50,450 --> 00:35:55,038
can use anything Berg web inspection

854
00:35:52,690 --> 00:35:58,099
take your choice right weapon of choice

855
00:35:55,039 --> 00:36:00,049
for for web application testing and

856
00:35:58,099 --> 00:36:02,750
basically just proxy your app through

857
00:36:00,049 --> 00:36:04,190
that tool now awed it right and it's

858
00:36:02,750 --> 00:36:06,890
gonna go find sequel Junction process

859
00:36:04,190 --> 00:36:08,660
parameter injection what have you for

860
00:36:06,890 --> 00:36:10,490
the device itself those molds that

861
00:36:08,660 --> 00:36:13,009
you're right that is tougher and that's

862
00:36:10,490 --> 00:36:14,750
a much more of an annual process and it

863
00:36:13,010 --> 00:36:16,849
is for us to we've written some tools to

864
00:36:14,750 --> 00:36:19,250
make that easier so we all we work on

865
00:36:16,849 --> 00:36:21,680
all jailbroken or rooted devices that we

866
00:36:19,250 --> 00:36:22,940
install the apps on and we have tools so

867
00:36:21,680 --> 00:36:24,910
as we're using it we're capturing

868
00:36:22,940 --> 00:36:27,349
information things that are interesting

869
00:36:24,910 --> 00:36:31,819
to make it easier but yeah there's no

870
00:36:27,349 --> 00:36:34,880
like so those tools you sense all your

871
00:36:31,819 --> 00:36:38,150
company custom tools you have correct on

872
00:36:34,880 --> 00:36:40,490
the cell device the gathers nothing you

873
00:36:38,150 --> 00:36:43,520
son right and you will see the network

874
00:36:40,490 --> 00:36:45,319
portion as well with on your own that

875
00:36:43,520 --> 00:36:47,809
you can do again if using Berber web

876
00:36:45,319 --> 00:36:50,270
inspect or app scan or whatever you'll

877
00:36:47,809 --> 00:36:52,069
be intercepting that traffic you can see

878
00:36:50,270 --> 00:36:54,288
data going to crash legs or to the

879
00:36:52,069 --> 00:36:56,210
target end server and see sensitive

880
00:36:54,289 --> 00:36:59,920
information there so those sort of

881
00:36:56,210 --> 00:36:59,920
things you can do yourself pretty easily

882
00:37:00,069 --> 00:37:04,730
yeah I think we're worried about mostly

883
00:37:02,599 --> 00:37:06,619
on the logic flaws right not the

884
00:37:04,730 --> 00:37:08,630
security security flaws are easy some of

885
00:37:06,619 --> 00:37:09,440
the SAS tools can find what any of these

886
00:37:08,630 --> 00:37:10,940
logic flaws

887
00:37:09,440 --> 00:37:13,160
somebody manually has to look at it

888
00:37:10,940 --> 00:37:17,589
that's correct that is right a hard part

889
00:37:13,160 --> 00:37:17,589
yeah there's no easy solution right

890
00:37:28,619 --> 00:37:34,030
there was they would build different

891
00:37:31,240 --> 00:37:37,299
vulnerabilities in each they all came

892
00:37:34,030 --> 00:37:45,030
together I have not heard of that one

893
00:37:37,300 --> 00:37:45,030
sounds legit though right I do not oh

894
00:37:45,390 --> 00:37:48,460
goodness

895
00:37:46,540 --> 00:37:57,730
okay go across yep you're capturing

896
00:37:48,460 --> 00:38:00,340
network traffic they will install a root

897
00:37:57,730 --> 00:38:01,600
certificate for you on the device and I

898
00:38:00,340 --> 00:38:03,490
know when the spectra do so when you

899
00:38:01,600 --> 00:38:05,680
start a mobile scan for instance a

900
00:38:03,490 --> 00:38:07,629
mobile backend scan you just hit a QR

901
00:38:05,680 --> 00:38:11,259
code that we show and it will download

902
00:38:07,630 --> 00:38:11,680
our certificate and then we can man in

903
00:38:11,260 --> 00:38:13,180
the middle

904
00:38:11,680 --> 00:38:15,450
in that case and Burke has the same

905
00:38:13,180 --> 00:38:18,430
thing I believe that you can install a

906
00:38:15,450 --> 00:38:20,700
root certificate on the device to get in

907
00:38:18,430 --> 00:38:20,700
the middle

908
00:38:21,390 --> 00:38:28,420
writings beginning this one is happening

909
00:38:26,770 --> 00:38:30,610
that still works because when you

910
00:38:28,420 --> 00:38:35,430
install the rooster to different bones

911
00:38:30,610 --> 00:38:35,430
for instance middle go through that

912
00:38:35,850 --> 00:38:49,960
correct yeah and the fingerprint right

913
00:38:38,560 --> 00:38:53,799
it could be the finger one correct and

914
00:38:49,960 --> 00:38:54,880
then that is tougher there's yeah and

915
00:38:53,800 --> 00:38:57,040
that's a good trend

916
00:38:54,880 --> 00:38:58,870
it makes our job harder right when you

917
00:38:57,040 --> 00:39:00,279
actually pin the host for instance that

918
00:38:58,870 --> 00:39:02,410
is validating that you're talking to the

919
00:39:00,280 --> 00:39:04,450
right host there's a couple of things

920
00:39:02,410 --> 00:39:06,370
about that one is you can disable it

921
00:39:04,450 --> 00:39:07,870
from the device if you have a ruiner

922
00:39:06,370 --> 00:39:10,089
jailbroken device there's tools out

923
00:39:07,870 --> 00:39:12,700
there to disable certain pinning for

924
00:39:10,090 --> 00:39:14,860
apps but yet that will read it or

925
00:39:12,700 --> 00:39:16,540
jailbroken device for that and the other

926
00:39:14,860 --> 00:39:18,670
one is that's really rare that we see

927
00:39:16,540 --> 00:39:21,040
that and it's interesting that they

928
00:39:18,670 --> 00:39:22,840
actually pin the cert and the reason for

929
00:39:21,040 --> 00:39:24,700
that is because they're QA teams it's a

930
00:39:22,840 --> 00:39:25,990
pain in the ass right because for every

931
00:39:24,700 --> 00:39:27,609
QA server you have to have another

932
00:39:25,990 --> 00:39:28,990
ticket and others don't get developer

933
00:39:27,610 --> 00:39:31,870
goes let me help you out

934
00:39:28,990 --> 00:39:33,790
I'll just allow any cert and and then

935
00:39:31,870 --> 00:39:36,029
they don't put pinning back before they

936
00:39:33,790 --> 00:39:38,380
put it in the App Store and so that is a

937
00:39:36,030 --> 00:39:43,750
rare case for us that we do see

938
00:39:38,380 --> 00:39:45,960
certificates being properly in coming

939
00:39:43,750 --> 00:39:45,960
across

940
00:39:48,210 --> 00:39:54,300
that you find correct kind of momentum

941
00:39:51,100 --> 00:39:56,380
with that all in the application code or

942
00:39:54,300 --> 00:39:59,110
configuration itself or with some of

943
00:39:56,380 --> 00:40:01,810
that and like failure cupcake when new

944
00:39:59,110 --> 00:40:03,820
third-party software is available like

945
00:40:01,810 --> 00:40:06,070
open SSL or something like that so it

946
00:40:03,820 --> 00:40:08,440
was actually calling coming in through I

947
00:40:06,070 --> 00:40:11,740
don't think we separated based on that

948
00:40:08,440 --> 00:40:13,660
that's a good question though so yeah

949
00:40:11,740 --> 00:40:16,930
open source will get you for sure I

950
00:40:13,660 --> 00:40:19,359
don't think we just parse that out in

951
00:40:16,930 --> 00:40:22,390
that in that research just one source

952
00:40:19,360 --> 00:40:35,140
and yeah that's it that's a great

953
00:40:22,390 --> 00:40:36,730
question well I I would say well it's

954
00:40:35,140 --> 00:40:38,170
kind of weird we need you say encryption

955
00:40:36,730 --> 00:40:39,460
I mean with our mobile apps were just

956
00:40:38,170 --> 00:40:42,880
want like SSL if you're talk about

957
00:40:39,460 --> 00:40:45,310
encryption is but I don't know is data

958
00:40:42,880 --> 00:40:48,070
storage received it most people don't do

959
00:40:45,310 --> 00:40:50,049
anything on top of what the device

960
00:40:48,070 --> 00:40:51,400
provides you know so Apple and actually

961
00:40:50,050 --> 00:40:53,710
that's pretty good right especially on

962
00:40:51,400 --> 00:40:55,120
Apple where it's actually secured to

963
00:40:53,710 --> 00:40:57,910
your user it's encrypted

964
00:40:55,120 --> 00:41:00,520
for your user on a device so we don't

965
00:40:57,910 --> 00:41:02,290
see too much where people go out of the

966
00:41:00,520 --> 00:41:04,509
way to put their own encryption on top

967
00:41:02,290 --> 00:41:09,779
of that because that's sort of by

968
00:41:04,510 --> 00:41:09,780
default I need that for free so yes

969
00:41:13,680 --> 00:41:20,589
we haven't done any research on that

970
00:41:18,390 --> 00:41:22,450
yeah we haven't done research on that

971
00:41:20,589 --> 00:41:24,730
but I don't know if I would see a big

972
00:41:22,450 --> 00:41:26,740
difference in that other than just once

973
00:41:24,730 --> 00:41:28,750
easier to make mistakes you probably

974
00:41:26,740 --> 00:41:33,180
believe that if you're working in Xcode

975
00:41:28,750 --> 00:41:33,180
and you know objective-c writing that

976
00:41:34,349 --> 00:41:41,260
yes so I was doing a research

977
00:41:37,900 --> 00:41:43,000
I got a application which was saving its

978
00:41:41,260 --> 00:41:46,000
username and password in an encrypted

979
00:41:43,000 --> 00:41:48,910
form in the device so what I did is I

980
00:41:46,000 --> 00:41:51,039
booked for a vacation and when I was

981
00:41:48,910 --> 00:41:53,828
seeing for the logs the application was

982
00:41:51,039 --> 00:41:56,650
decrypting that username and password at

983
00:41:53,829 --> 00:41:58,720
the run time when we were entering

984
00:41:56,650 --> 00:42:00,789
performing any of the transactions in

985
00:41:58,720 --> 00:42:03,970
the application so I just wanted to know

986
00:42:00,789 --> 00:42:06,279
about them what scheme they do be added

987
00:42:03,970 --> 00:42:08,769
as to be unique high low or medium

988
00:42:06,279 --> 00:42:12,940
because the data is properly encrypted

989
00:42:08,769 --> 00:42:14,618
and stored and I'd be only able to get

990
00:42:12,940 --> 00:42:16,420
when I'm looking down like a choice

991
00:42:14,619 --> 00:42:20,099
you're doing like a memory dump of the

992
00:42:16,420 --> 00:42:23,319
application together how are you getting

993
00:42:20,099 --> 00:42:25,329
the device yes so I just connected it

994
00:42:23,319 --> 00:42:27,609
with my laptop I'm doing the rewards

995
00:42:25,329 --> 00:42:30,309
injury and checking for the locks any of

996
00:42:27,609 --> 00:42:31,029
the runtime screen locks and all what it

997
00:42:30,309 --> 00:42:33,759
is doing

998
00:42:31,029 --> 00:42:35,799
yeah looking of the function like they

999
00:42:33,759 --> 00:42:38,500
weren't a function which was decrypting

1000
00:42:35,799 --> 00:42:40,990
it at the runtime right like to string

1001
00:42:38,500 --> 00:42:42,670
and all from other encrypted value to

1002
00:42:40,990 --> 00:42:44,979
the constraint value and they were

1003
00:42:42,670 --> 00:42:46,900
writing it unencrypted to the device

1004
00:42:44,980 --> 00:42:48,640
after they not to the device but via I

1005
00:42:46,900 --> 00:42:52,150
was able to hook the function and the

1006
00:42:48,640 --> 00:42:54,490
function was giving me that yeah

1007
00:42:52,150 --> 00:42:56,290
if it's just the body should've him yeah

1008
00:42:54,490 --> 00:42:58,330
it has to be decrypted at some point for

1009
00:42:56,290 --> 00:43:00,460
the app to use it and that that sounds

1010
00:42:58,330 --> 00:43:03,400
legit to me I don't I wouldn't see that

1011
00:43:00,460 --> 00:43:04,660
as a vulnerability I mean I mean look at

1012
00:43:03,400 --> 00:43:05,770
how would you exploit that right you'd

1013
00:43:04,660 --> 00:43:07,359
actually have to lose your device

1014
00:43:05,770 --> 00:43:10,270
somebody have to get into it

1015
00:43:07,360 --> 00:43:11,950
hook up the tools to inject the

1016
00:43:10,270 --> 00:43:16,780
functions or to wrap the functions and

1017
00:43:11,950 --> 00:43:18,520
then use it so you know as far as

1018
00:43:16,780 --> 00:43:21,100
exploiting that would be really tough I

1019
00:43:18,520 --> 00:43:24,610
think but again it has to be decrypted

1020
00:43:21,100 --> 00:43:27,430
at some point we are stored in the

1021
00:43:24,610 --> 00:43:29,440
decryption taking the user name will be

1022
00:43:27,430 --> 00:43:31,750
username and the password in is stored

1023
00:43:29,440 --> 00:43:33,820
in the device yes and we are decrypting

1024
00:43:31,750 --> 00:43:36,940
there there is a function which is

1025
00:43:33,820 --> 00:43:39,610
decrypting that in the device so if I

1026
00:43:36,940 --> 00:43:44,080
get any of the files where it is being

1027
00:43:39,610 --> 00:43:46,030
stored like for your I can say like your

1028
00:43:44,080 --> 00:43:48,040
username and password I get that file

1029
00:43:46,030 --> 00:43:50,490
from your device I know what algorithm

1030
00:43:48,040 --> 00:43:52,300
can't I decrypted to the other users I

1031
00:43:50,490 --> 00:43:54,850
don't think so

1032
00:43:52,300 --> 00:43:59,140
if you grab it out of the apps sandbox

1033
00:43:54,850 --> 00:44:01,420
yeah I mean I that should be encrypted

1034
00:43:59,140 --> 00:44:02,740
if not they're doing something there's

1035
00:44:01,420 --> 00:44:05,830
an exception and boy if I'm in the

1036
00:44:02,740 --> 00:44:08,500
application itself right so I can just

1037
00:44:05,830 --> 00:44:10,720
provide them your username encrypted it

1038
00:44:08,500 --> 00:44:12,580
down and try can try to decrypt I don't

1039
00:44:10,720 --> 00:44:15,149
think I'd have to know more about that

1040
00:44:12,580 --> 00:44:15,150
scenario

1041
00:44:20,029 --> 00:44:25,739
we're hiring by the way we've got like

1042
00:44:22,380 --> 00:44:27,119
30 open auditions unreal so we're

1043
00:44:25,739 --> 00:44:30,749
looking for sales engineers we're

1044
00:44:27,119 --> 00:44:32,459
looking for developers so also if you

1045
00:44:30,749 --> 00:44:36,680
guys are looking for something hit me up

1046
00:44:32,459 --> 00:44:36,680
because so yes that's it

1047
00:44:38,050 --> 00:44:41,559
[Applause]

