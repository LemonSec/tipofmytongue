1
00:00:02,960 --> 00:00:04,799
thank you

2
00:00:04,799 --> 00:00:07,279
hello everybody and welcome i hope that

3
00:00:07,279 --> 00:00:09,040
you have enjoyed your lunch break and

4
00:00:09,040 --> 00:00:11,200
that you're having an interesting and

5
00:00:11,200 --> 00:00:13,200
educational day so far

6
00:00:13,200 --> 00:00:15,120
i'm really glad and delighted to be here

7
00:00:15,120 --> 00:00:17,279
with you today at besides munich where

8
00:00:17,279 --> 00:00:19,439
we're gonna have the chance to explore

9
00:00:19,439 --> 00:00:21,119
one of the places where the finest

10
00:00:21,119 --> 00:00:23,439
concepts of data science and cyber

11
00:00:23,439 --> 00:00:25,920
security meet

12
00:00:25,920 --> 00:00:27,519
before doing so i'd like to really

13
00:00:27,519 --> 00:00:29,760
quickly introduce myself to you my name

14
00:00:29,760 --> 00:00:31,920
is dimitris prasakis and i'm currently

15
00:00:31,920 --> 00:00:34,640
pursuing my masters in cybersecurity at

16
00:00:34,640 --> 00:00:36,640
georgia institute of technology georgia

17
00:00:36,640 --> 00:00:38,160
tech in the us

18
00:00:38,160 --> 00:00:40,000
i'm also working as a security engineer

19
00:00:40,000 --> 00:00:42,320
at trade republic in berlin where i

20
00:00:42,320 --> 00:00:44,239
specialize in cloud security and

21
00:00:44,239 --> 00:00:46,480
infrastructure security my interests

22
00:00:46,480 --> 00:00:48,399
also lie in ai and privacy and

23
00:00:48,399 --> 00:00:49,840
especially where all these worlds

24
00:00:49,840 --> 00:00:52,399
intersect with each other

25
00:00:52,399 --> 00:00:54,160
and one of those intersections is what

26
00:00:54,160 --> 00:00:55,199
we're gonna

27
00:00:55,199 --> 00:00:57,680
see here today together

28
00:00:57,680 --> 00:00:59,600
our agenda is made out of four parts the

29
00:00:59,600 --> 00:01:02,320
first two of them are introductory we're

30
00:01:02,320 --> 00:01:05,199
gonna talk about malware analysis and

31
00:01:05,199 --> 00:01:08,000
about sandboxes and we are also gonna

32
00:01:08,000 --> 00:01:09,680
talk about machine learning and

33
00:01:09,680 --> 00:01:11,520
introduce the concept the tasks

34
00:01:11,520 --> 00:01:14,080
classification and clustering the third

35
00:01:14,080 --> 00:01:15,520
part of the talk is the heart of the

36
00:01:15,520 --> 00:01:17,759
talk my your framework it's a malware

37
00:01:17,759 --> 00:01:19,520
analysis framework

38
00:01:19,520 --> 00:01:21,600
with ai and we're gonna explain how it

39
00:01:21,600 --> 00:01:23,439
works step by step and we're also gonna

40
00:01:23,439 --> 00:01:25,360
have a decision for

41
00:01:25,360 --> 00:01:27,920
questions and discussion

42
00:01:27,920 --> 00:01:30,479
so without further ado let's start

43
00:01:30,479 --> 00:01:33,600
and let's talk about malware analysis

44
00:01:33,600 --> 00:01:35,680
in cyber security there is a job title

45
00:01:35,680 --> 00:01:37,920
malware analysts and these people their

46
00:01:37,920 --> 00:01:41,040
day-to-day job is to analyze malware and

47
00:01:41,040 --> 00:01:43,439
they do this with the help of certain

48
00:01:43,439 --> 00:01:45,600
tools called sandboxes

49
00:01:45,600 --> 00:01:47,840
a sandbox in short is an isolated

50
00:01:47,840 --> 00:01:49,759
environment in the context that

51
00:01:49,759 --> 00:01:51,920
everything that happens in the sandbox

52
00:01:51,920 --> 00:01:54,720
can't escape it if we execute a program

53
00:01:54,720 --> 00:01:57,759
in that sandbox it can't infect the host

54
00:01:57,759 --> 00:02:00,079
right so that's the first thing it does

55
00:02:00,079 --> 00:02:02,079
and the second thing it does it is that

56
00:02:02,079 --> 00:02:04,240
it has the ability to study and monitor

57
00:02:04,240 --> 00:02:06,320
the behavior of what is being executed

58
00:02:06,320 --> 00:02:09,038
inside of it so instead it takes a

59
00:02:09,038 --> 00:02:11,520
binary malwarebinary as an input it

60
00:02:11,520 --> 00:02:14,319
executes it studies it and then produces

61
00:02:14,319 --> 00:02:16,640
a text report and this report will

62
00:02:16,640 --> 00:02:18,560
contain things like

63
00:02:18,560 --> 00:02:21,360
network requests made or metadata about

64
00:02:21,360 --> 00:02:22,560
the malware

65
00:02:22,560 --> 00:02:25,120
but today we care in particular about

66
00:02:25,120 --> 00:02:27,760
commands this malware tried to execute

67
00:02:27,760 --> 00:02:29,920
and we're going to talk about windows

68
00:02:29,920 --> 00:02:32,480
malware specifically and windows api

69
00:02:32,480 --> 00:02:33,840
calls

70
00:02:33,840 --> 00:02:35,519
apart from sandboxes the second

71
00:02:35,519 --> 00:02:37,599
introductory point

72
00:02:37,599 --> 00:02:39,440
is the task of classification

73
00:02:39,440 --> 00:02:42,319
classification is a machine learning

74
00:02:42,319 --> 00:02:44,239
concept

75
00:02:44,239 --> 00:02:45,519
is the task of

76
00:02:45,519 --> 00:02:47,280
taking an observation

77
00:02:47,280 --> 00:02:48,800
something about we don't know the

78
00:02:48,800 --> 00:02:51,440
category it belongs to right and putting

79
00:02:51,440 --> 00:02:53,440
it into some

80
00:02:53,440 --> 00:02:56,239
pre-known category into some class to be

81
00:02:56,239 --> 00:02:57,599
more formal

82
00:02:57,599 --> 00:02:58,879
so let's say that we download an

83
00:02:58,879 --> 00:03:01,040
executable from the internet right

84
00:03:01,040 --> 00:03:03,360
the task of classifying this executable

85
00:03:03,360 --> 00:03:06,239
to benign or malicious to

86
00:03:06,239 --> 00:03:09,040
good or bad is called classification

87
00:03:09,040 --> 00:03:10,720
and in machine learning we classify

88
00:03:10,720 --> 00:03:13,200
objects with the help of

89
00:03:13,200 --> 00:03:14,560
classification machine learning

90
00:03:14,560 --> 00:03:16,400
algorithms and one of the most known

91
00:03:16,400 --> 00:03:19,200
ones is k n and k nearest neighbors and

92
00:03:19,200 --> 00:03:21,840
it operates based on the folks saying

93
00:03:21,840 --> 00:03:23,440
show me your friends and i'm gonna tell

94
00:03:23,440 --> 00:03:24,720
you who you are

95
00:03:24,720 --> 00:03:26,959
or in other words show me your nearest

96
00:03:26,959 --> 00:03:29,280
neighbors in the vector space

97
00:03:29,280 --> 00:03:31,599
and based on their class i'm gonna

98
00:03:31,599 --> 00:03:33,920
predict your category and we see here

99
00:03:33,920 --> 00:03:35,360
the example where

100
00:03:35,360 --> 00:03:38,159
this observation up there

101
00:03:38,159 --> 00:03:40,080
gets classified as a benign program

102
00:03:40,080 --> 00:03:42,799
because the nearest neighbors are benign

103
00:03:42,799 --> 00:03:44,720
apart from classification we have other

104
00:03:44,720 --> 00:03:46,239
tasks in machine learning and one of

105
00:03:46,239 --> 00:03:47,760
them is clustering

106
00:03:47,760 --> 00:03:49,599
and unlike classification which is a

107
00:03:49,599 --> 00:03:51,280
supervised kind of learning because we

108
00:03:51,280 --> 00:03:54,319
feed our algorithms with labeled data so

109
00:03:54,319 --> 00:03:56,879
we fit the algorithm with data that have

110
00:03:56,879 --> 00:03:58,400
labels

111
00:03:58,400 --> 00:04:00,640
clustering is a task of

112
00:04:00,640 --> 00:04:03,200
is a kind of unsupervised learning we

113
00:04:03,200 --> 00:04:05,760
feed our algorithm with unlabeled data

114
00:04:05,760 --> 00:04:07,599
and the clustering algorithm tries to

115
00:04:07,599 --> 00:04:08,560
create

116
00:04:08,560 --> 00:04:11,680
groups of those unlabeled data clusters

117
00:04:11,680 --> 00:04:13,599
which we are going to equate today with

118
00:04:13,599 --> 00:04:16,478
the concept of classes

119
00:04:16,478 --> 00:04:18,238
let's see how all these three concepts

120
00:04:18,238 --> 00:04:20,079
sandboxes classification and clustering

121
00:04:20,079 --> 00:04:22,560
bond together under a framework for

122
00:04:22,560 --> 00:04:25,120
malware analysis called my year

123
00:04:25,120 --> 00:04:26,880
but before doing so i would like to talk

124
00:04:26,880 --> 00:04:29,440
about a very interesting statistic

125
00:04:29,440 --> 00:04:30,880
every day

126
00:04:30,880 --> 00:04:32,720
almost half a million new malicious

127
00:04:32,720 --> 00:04:34,800
software and potentially unwanted

128
00:04:34,800 --> 00:04:38,560
applications are registered

129
00:04:38,560 --> 00:04:40,160
i would like you to think about the

130
00:04:40,160 --> 00:04:41,199
volume

131
00:04:41,199 --> 00:04:43,360
how much volume of malware this is we

132
00:04:43,360 --> 00:04:44,960
need to understand this malware we need

133
00:04:44,960 --> 00:04:46,320
to study it

134
00:04:46,320 --> 00:04:49,199
so that we can attack it right before it

135
00:04:49,199 --> 00:04:51,759
attacks us

136
00:04:51,759 --> 00:04:53,759
we can't do that manually we don't have

137
00:04:53,759 --> 00:04:55,759
enough manpower we don't have enough

138
00:04:55,759 --> 00:04:58,479
bandwidth right malware analysis is a

139
00:04:58,479 --> 00:05:00,479
very energy-consuming process and it

140
00:05:00,479 --> 00:05:01,680
takes time

141
00:05:01,680 --> 00:05:04,000
there is therefore an imperative need to

142
00:05:04,000 --> 00:05:05,440
automate this process as much as

143
00:05:05,440 --> 00:05:06,880
possible

144
00:05:06,880 --> 00:05:08,080
excuse me

145
00:05:08,080 --> 00:05:09,360
and this is where my year framework

146
00:05:09,360 --> 00:05:10,720
comes into play

147
00:05:10,720 --> 00:05:12,560
my year framework is an open source

148
00:05:12,560 --> 00:05:14,400
framework for malware analysis with

149
00:05:14,400 --> 00:05:15,840
machine learning

150
00:05:15,840 --> 00:05:18,720
and it is used to do mainly two things

151
00:05:18,720 --> 00:05:21,440
to discover new clusters of malware in

152
00:05:21,440 --> 00:05:23,600
other words to take all these half a

153
00:05:23,600 --> 00:05:24,720
million

154
00:05:24,720 --> 00:05:26,800
malicious software every day and try to

155
00:05:26,800 --> 00:05:29,120
group them into clusters

156
00:05:29,120 --> 00:05:31,039
that contain malware with identical

157
00:05:31,039 --> 00:05:32,240
behavior

158
00:05:32,240 --> 00:05:34,400
and to also classify unknown malware

159
00:05:34,400 --> 00:05:36,840
observations into clusters that it

160
00:05:36,840 --> 00:05:39,360
created and we're gonna see how this

161
00:05:39,360 --> 00:05:41,280
happens in a bit

162
00:05:41,280 --> 00:05:43,039
my ear framework looks like this a

163
00:05:43,039 --> 00:05:45,280
simplified version of it we talked about

164
00:05:45,280 --> 00:05:47,039
the first concepts right

165
00:05:47,039 --> 00:05:49,039
so we take all marvel binaries we pass

166
00:05:49,039 --> 00:05:50,560
them through sandbox produce some text

167
00:05:50,560 --> 00:05:52,880
report and we talked about clustering

168
00:05:52,880 --> 00:05:54,479
classifications

169
00:05:54,479 --> 00:05:56,880
we want to cluster and classify classify

170
00:05:56,880 --> 00:05:58,960
those malware reports

171
00:05:58,960 --> 00:06:00,560
but in essence clustering and

172
00:06:00,560 --> 00:06:02,720
classification are statistical

173
00:06:02,720 --> 00:06:04,960
algorithms right they don't understand

174
00:06:04,960 --> 00:06:06,400
text files

175
00:06:06,400 --> 00:06:08,800
so this is where the second step

176
00:06:08,800 --> 00:06:11,360
embedding of behavior comes into play

177
00:06:11,360 --> 00:06:13,520
we take those text files and we

178
00:06:13,520 --> 00:06:15,680
transpose them into mathematical objects

179
00:06:15,680 --> 00:06:17,680
into vectors

180
00:06:17,680 --> 00:06:19,680
so that we can later classify them and

181
00:06:19,680 --> 00:06:20,960
cluster them

182
00:06:20,960 --> 00:06:22,720
there is also a step in the middle the

183
00:06:22,720 --> 00:06:24,639
step of prototype extraction is a very

184
00:06:24,639 --> 00:06:26,160
beautiful idea which we are going to

185
00:06:26,160 --> 00:06:28,479
talk about in a bit

186
00:06:28,479 --> 00:06:32,080
so without further ado here what you see

187
00:06:32,080 --> 00:06:35,280
is an xml encoded malware report and i

188
00:06:35,280 --> 00:06:36,880
modified a little bit for the sake of

189
00:06:36,880 --> 00:06:39,199
the presentation and for understanding

190
00:06:39,199 --> 00:06:41,039
better what's going on

191
00:06:41,039 --> 00:06:42,880
we see three snippets of instructions

192
00:06:42,880 --> 00:06:44,240
the first one

193
00:06:44,240 --> 00:06:45,520
is something you're going to see many

194
00:06:45,520 --> 00:06:47,039
programs do

195
00:06:47,039 --> 00:06:48,960
the program tries to load the

196
00:06:48,960 --> 00:06:51,599
windows kernel into the process memory

197
00:06:51,599 --> 00:06:53,680
and also it reads the time nothing

198
00:06:53,680 --> 00:06:55,680
malicious about this snippet of commands

199
00:06:55,680 --> 00:06:56,720
right

200
00:06:56,720 --> 00:06:59,759
but if we scroll a little bit more down

201
00:06:59,759 --> 00:07:00,800
and we

202
00:07:00,800 --> 00:07:02,880
study the next snippet the next sequence

203
00:07:02,880 --> 00:07:05,120
of instructions we're gonna notice

204
00:07:05,120 --> 00:07:07,840
something at least suspicious

205
00:07:07,840 --> 00:07:11,120
the malware tries to copy itself

206
00:07:11,120 --> 00:07:13,039
from the location it is

207
00:07:13,039 --> 00:07:15,120
to a windows protected area called

208
00:07:15,120 --> 00:07:16,479
system32

209
00:07:16,479 --> 00:07:18,479
and while doing so it also renames

210
00:07:18,479 --> 00:07:20,319
itself to a windows well-known process

211
00:07:20,319 --> 00:07:23,199
cscs rss.exa

212
00:07:23,199 --> 00:07:24,800
and after doing this

213
00:07:24,800 --> 00:07:26,960
it also modifies the windows registry

214
00:07:26,960 --> 00:07:29,680
keys so that it runs every time window

215
00:07:29,680 --> 00:07:32,080
windows start up

216
00:07:32,080 --> 00:07:34,240
so that's

217
00:07:34,240 --> 00:07:35,919
not something a benign program would do

218
00:07:35,919 --> 00:07:38,080
right why would you copy yourself into a

219
00:07:38,080 --> 00:07:40,080
protected area and then put yourself to

220
00:07:40,080 --> 00:07:42,319
startup you may do the latter but

221
00:07:42,319 --> 00:07:43,360
especially

222
00:07:43,360 --> 00:07:45,520
those commands in combination show some

223
00:07:45,520 --> 00:07:47,199
malicious behavior

224
00:07:47,199 --> 00:07:48,720
and we see another example another

225
00:07:48,720 --> 00:07:49,919
snippet

226
00:07:49,919 --> 00:07:51,520
where the malware just

227
00:07:51,520 --> 00:07:53,360
tries to check if it's being debugged

228
00:07:53,360 --> 00:07:56,800
and malicious programs usually do that

229
00:07:56,800 --> 00:07:59,520
excuse me to

230
00:07:59,520 --> 00:08:01,280
understand if they are being analyzed

231
00:08:01,280 --> 00:08:03,280
and in this case

232
00:08:03,280 --> 00:08:05,120
they try to shut down their malicious

233
00:08:05,120 --> 00:08:07,440
behavior and conceal themselves they try

234
00:08:07,440 --> 00:08:09,039
to hide themselves from the malware

235
00:08:09,039 --> 00:08:10,479
analysts

236
00:08:10,479 --> 00:08:12,000
there is an important observation to

237
00:08:12,000 --> 00:08:15,280
make to be made here from this example

238
00:08:15,280 --> 00:08:17,919
that behavior is often manifested as a

239
00:08:17,919 --> 00:08:20,240
sequence of instructions

240
00:08:20,240 --> 00:08:23,120
which we formally call as q grams

241
00:08:23,120 --> 00:08:25,039
so a q gram is a synonym for a

242
00:08:25,039 --> 00:08:27,680
behavioral pattern let's say

243
00:08:27,680 --> 00:08:30,160
and we saw two examples of two grams

244
00:08:30,160 --> 00:08:31,440
because they are made out of two

245
00:08:31,440 --> 00:08:32,880
instructions

246
00:08:32,880 --> 00:08:35,200
and this concept of q grams is important

247
00:08:35,200 --> 00:08:38,479
because it's what enables us to

248
00:08:38,479 --> 00:08:40,880
embed the text files into the vector

249
00:08:40,880 --> 00:08:43,039
space

250
00:08:43,039 --> 00:08:44,959
we want to do that first of all so that

251
00:08:44,959 --> 00:08:48,000
they can be read by the clustering

252
00:08:48,000 --> 00:08:50,399
classification elements but also because

253
00:08:50,399 --> 00:08:52,480
embedding the reports into vectors will

254
00:08:52,480 --> 00:08:54,399
enable us to

255
00:08:54,399 --> 00:08:57,519
express their behavior in a geometrical

256
00:08:57,519 --> 00:08:58,399
way

257
00:08:58,399 --> 00:08:59,920
right

258
00:08:59,920 --> 00:09:02,399
similar reports similar malware are

259
00:09:02,399 --> 00:09:04,640
going to be closer in the vector space

260
00:09:04,640 --> 00:09:06,320
and vice versa

261
00:09:06,320 --> 00:09:07,600
we embed the behavior using a

262
00:09:07,600 --> 00:09:09,680
mathematical function called embedding

263
00:09:09,680 --> 00:09:10,800
function

264
00:09:10,800 --> 00:09:13,040
which looks like this

265
00:09:13,040 --> 00:09:15,040
we're going to explain in an intuitive

266
00:09:15,040 --> 00:09:18,080
level what this does simply

267
00:09:18,080 --> 00:09:20,080
it gets an input which is a malware

268
00:09:20,080 --> 00:09:22,560
report a sequence of instructions right

269
00:09:22,560 --> 00:09:25,760
and produces an output an n-dimensional

270
00:09:25,760 --> 00:09:28,560
binary-valued vector where its dimension

271
00:09:28,560 --> 00:09:31,519
represents a q gram it represents a

272
00:09:31,519 --> 00:09:33,120
behavior

273
00:09:33,120 --> 00:09:35,040
for example imagine that we have the

274
00:09:35,040 --> 00:09:37,920
dimensional space right the x dimension

275
00:09:37,920 --> 00:09:40,640
z dimension the x dimension and the y

276
00:09:40,640 --> 00:09:41,920
dimension

277
00:09:41,920 --> 00:09:43,839
we may embed

278
00:09:43,839 --> 00:09:46,240
this behavior this q ground

279
00:09:46,240 --> 00:09:48,160
in the x diamond in the z dimension

280
00:09:48,160 --> 00:09:50,800
excuse me and say for example that the

281
00:09:50,800 --> 00:09:52,800
malware tries to copy itself into the

282
00:09:52,800 --> 00:09:55,600
windows protected area rename itself and

283
00:09:55,600 --> 00:09:57,440
put itself on startup

284
00:09:57,440 --> 00:09:59,760
if the value here is one

285
00:09:59,760 --> 00:10:03,279
or otherwise if it's zero the malware

286
00:10:03,279 --> 00:10:04,880
doesn't try to do it

287
00:10:04,880 --> 00:10:07,279
and we may embed this behavior

288
00:10:07,279 --> 00:10:09,440
the model we're taking for debugger on

289
00:10:09,440 --> 00:10:12,480
let's say the x axis right if it's one

290
00:10:12,480 --> 00:10:14,640
the malware tries to do it if it's zero

291
00:10:14,640 --> 00:10:17,040
the malware doesn't try to do it

292
00:10:17,040 --> 00:10:19,360
imagine this for n dimensions in the

293
00:10:19,360 --> 00:10:21,200
n-dimensional space

294
00:10:21,200 --> 00:10:22,320
right

295
00:10:22,320 --> 00:10:23,680
something really

296
00:10:23,680 --> 00:10:25,040
interesting happens when we embed

297
00:10:25,040 --> 00:10:27,920
malware in the vector space like that

298
00:10:27,920 --> 00:10:30,079
because each dimension represents a

299
00:10:30,079 --> 00:10:33,839
behavior right similar reports

300
00:10:33,839 --> 00:10:35,360
will be closed with each other as we

301
00:10:35,360 --> 00:10:38,000
said and they will form dense clouds

302
00:10:38,000 --> 00:10:39,760
into the vector space if we look at the

303
00:10:39,760 --> 00:10:42,399
sp this space from far away we're gonna

304
00:10:42,399 --> 00:10:45,200
see clouds clusters of malware and each

305
00:10:45,200 --> 00:10:48,000
cluster has malware that

306
00:10:48,000 --> 00:10:51,040
behave in similar ways and this exact

307
00:10:51,040 --> 00:10:54,160
distribution is what we are gonna attack

308
00:10:54,160 --> 00:10:56,720
in order to exploit the malware before

309
00:10:56,720 --> 00:10:59,680
it does that to us

310
00:10:59,680 --> 00:11:01,680
before talking about that however let's

311
00:11:01,680 --> 00:11:04,000
dive into a very interesting topic of

312
00:11:04,000 --> 00:11:05,440
computer science computational

313
00:11:05,440 --> 00:11:06,800
complexity

314
00:11:06,800 --> 00:11:09,600
algorithms take time to be executed

315
00:11:09,600 --> 00:11:10,959
correct

316
00:11:10,959 --> 00:11:12,320
and especially machine learning

317
00:11:12,320 --> 00:11:15,600
algorithms scale in a super linear way

318
00:11:15,600 --> 00:11:18,160
let's say in polynomial time

319
00:11:18,160 --> 00:11:20,800
depending on how much data we give them

320
00:11:20,800 --> 00:11:22,800
that means that they are quite slow and

321
00:11:22,800 --> 00:11:24,880
we want to execute this framework

322
00:11:24,880 --> 00:11:27,040
every day so there is an imperative need

323
00:11:27,040 --> 00:11:29,920
to reduce the time of the framework as

324
00:11:29,920 --> 00:11:31,920
much as possible there are three things

325
00:11:31,920 --> 00:11:33,360
that we can do

326
00:11:33,360 --> 00:11:36,560
either buy more memory and more cpu

327
00:11:36,560 --> 00:11:38,399
but this is limited right

328
00:11:38,399 --> 00:11:40,880
and by default we have some physical

329
00:11:40,880 --> 00:11:42,320
limits as well we don't have quantum

330
00:11:42,320 --> 00:11:44,800
computers for example so that's that

331
00:11:44,800 --> 00:11:46,240
option is out

332
00:11:46,240 --> 00:11:48,079
the second thing we can do is

333
00:11:48,079 --> 00:11:50,720
use faster algorithms but again

334
00:11:50,720 --> 00:11:53,040
machine learning algorithms are refined

335
00:11:53,040 --> 00:11:56,000
like they are as good as they may get we

336
00:11:56,000 --> 00:11:58,560
we may be able to modify them slightly

337
00:11:58,560 --> 00:12:01,519
depending on the program problem but

338
00:12:01,519 --> 00:12:04,160
mostly we can't really reduce how much

339
00:12:04,160 --> 00:12:05,600
time they take

340
00:12:05,600 --> 00:12:07,360
the last thing we can do and that we are

341
00:12:07,360 --> 00:12:08,639
going to do

342
00:12:08,639 --> 00:12:11,200
is reduce the data that we fit the

343
00:12:11,200 --> 00:12:12,480
framework

344
00:12:12,480 --> 00:12:14,240
so what if

345
00:12:14,240 --> 00:12:16,560
instead of feeding the framework with

346
00:12:16,560 --> 00:12:18,720
half a million reports every day

347
00:12:18,720 --> 00:12:21,360
we fit the framework with

348
00:12:21,360 --> 00:12:23,279
let's say compress them with a ratio one

349
00:12:23,279 --> 00:12:25,440
to ten and we feed it with

350
00:12:25,440 --> 00:12:27,519
fifty thousand reports

351
00:12:27,519 --> 00:12:28,880
this is where very interesting and

352
00:12:28,880 --> 00:12:31,519
beautiful idea from 1989

353
00:12:31,519 --> 00:12:33,839
the idea of prototype extraction comes

354
00:12:33,839 --> 00:12:35,760
into play

355
00:12:35,760 --> 00:12:37,760
instead of analyzing all these initial

356
00:12:37,760 --> 00:12:40,560
model reports all these data points what

357
00:12:40,560 --> 00:12:41,519
if

358
00:12:41,519 --> 00:12:42,880
we could

359
00:12:42,880 --> 00:12:45,600
extract representatives what if we could

360
00:12:45,600 --> 00:12:47,680
choose certain data points that would

361
00:12:47,680 --> 00:12:49,680
represent all the others

362
00:12:49,680 --> 00:12:52,800
we call these data points prototypes

363
00:12:52,800 --> 00:12:54,880
and luckily enough there is a prototype

364
00:12:54,880 --> 00:12:56,880
extraction not the optimal one but a

365
00:12:56,880 --> 00:13:00,639
good enough one that runs in linear time

366
00:13:00,639 --> 00:13:03,680
so we take our reports and we try to

367
00:13:03,680 --> 00:13:07,040
compress them into small

368
00:13:07,040 --> 00:13:10,240
set of reports which we call prototypes

369
00:13:10,240 --> 00:13:11,519
and instead of feeding our

370
00:13:11,519 --> 00:13:13,600
classification and clustering algorithms

371
00:13:13,600 --> 00:13:15,279
with the initial reports

372
00:13:15,279 --> 00:13:17,200
we're gonna cluster the prototypes

373
00:13:17,200 --> 00:13:19,440
themselves and propagate the results of

374
00:13:19,440 --> 00:13:21,040
the algorithm back to the initial data

375
00:13:21,040 --> 00:13:23,519
points and see we see

376
00:13:23,519 --> 00:13:26,240
here we see the five reports right

377
00:13:26,240 --> 00:13:27,839
that we extracted before the five

378
00:13:27,839 --> 00:13:29,839
prototypes excuse me

379
00:13:29,839 --> 00:13:31,440
and they are being clustered into three

380
00:13:31,440 --> 00:13:33,440
clusters one on the top right one on the

381
00:13:33,440 --> 00:13:37,279
bottom left and one on the top left

382
00:13:37,600 --> 00:13:39,519
one would say

383
00:13:39,519 --> 00:13:42,320
it doesn't really match makes much sense

384
00:13:42,320 --> 00:13:45,440
to create a cluster of one person right

385
00:13:45,440 --> 00:13:47,360
like we do on the top left why would we

386
00:13:47,360 --> 00:13:49,519
do that why would we create a group of

387
00:13:49,519 --> 00:13:50,480
one

388
00:13:50,480 --> 00:13:53,040
and we would agree with it with whoever

389
00:13:53,040 --> 00:13:55,519
claimed that right and this is why the

390
00:13:55,519 --> 00:13:57,839
algorithm takes a parameter and we say

391
00:13:57,839 --> 00:14:00,839
that if a cluster has less than m

392
00:14:00,839 --> 00:14:03,199
members if our clustering algorithm

393
00:14:03,199 --> 00:14:05,040
creates a cluster with less let's say

394
00:14:05,040 --> 00:14:06,639
than two members

395
00:14:06,639 --> 00:14:08,399
we are gonna reject this cluster we are

396
00:14:08,399 --> 00:14:10,720
gonna put it on the site

397
00:14:10,720 --> 00:14:12,399
and we are gonna keep these data points

398
00:14:12,399 --> 00:14:14,959
for future reference maybe tomorrow

399
00:14:14,959 --> 00:14:16,480
where we're gonna have new malware

400
00:14:16,480 --> 00:14:17,519
reports

401
00:14:17,519 --> 00:14:19,519
some new prototype is gonna be extracted

402
00:14:19,519 --> 00:14:21,199
on the top left

403
00:14:21,199 --> 00:14:23,680
and as a result maybe a new cluster will

404
00:14:23,680 --> 00:14:25,279
be formed because it's gonna have more

405
00:14:25,279 --> 00:14:27,199
than m members

406
00:14:27,199 --> 00:14:30,160
and the same exact idea applies to

407
00:14:30,160 --> 00:14:31,839
classification

408
00:14:31,839 --> 00:14:34,079
we draw our decision boundary and we may

409
00:14:34,079 --> 00:14:37,040
say that if a new observation falls here

410
00:14:37,040 --> 00:14:39,040
for example the closest prototype is

411
00:14:39,040 --> 00:14:40,480
this one as a result we are going to

412
00:14:40,480 --> 00:14:41,839
classify our

413
00:14:41,839 --> 00:14:44,720
new observation into this cluster but if

414
00:14:44,720 --> 00:14:46,240
it falls

415
00:14:46,240 --> 00:14:48,800
more than dr distance away let's say

416
00:14:48,800 --> 00:14:50,399
here

417
00:14:50,399 --> 00:14:52,959
we reject it and we keep it for future

418
00:14:52,959 --> 00:14:55,440
reference

419
00:14:55,440 --> 00:14:57,360
we described the simplified version of

420
00:14:57,360 --> 00:14:58,480
malia

421
00:14:58,480 --> 00:15:00,639
we described how we embed malware into

422
00:15:00,639 --> 00:15:02,560
the vector space how we extract

423
00:15:02,560 --> 00:15:04,320
prototypes out of them and how we can

424
00:15:04,320 --> 00:15:06,720
use these prototypes to classify and

425
00:15:06,720 --> 00:15:07,839
cluster

426
00:15:07,839 --> 00:15:10,079
faster the malware

427
00:15:10,079 --> 00:15:12,160
what we didn't talk about however is how

428
00:15:12,160 --> 00:15:14,959
we can make this framework recurrent

429
00:15:14,959 --> 00:15:16,800
we said that it's gonna be executed

430
00:15:16,800 --> 00:15:18,560
every day let's say and

431
00:15:18,560 --> 00:15:21,519
analyze half a million malware right

432
00:15:21,519 --> 00:15:23,279
this is where our last concept comes

433
00:15:23,279 --> 00:15:24,399
into play

434
00:15:24,399 --> 00:15:26,959
the idea of prototype incremental

435
00:15:26,959 --> 00:15:28,240
analysis

436
00:15:28,240 --> 00:15:30,720
excuse me and the framework looks like

437
00:15:30,720 --> 00:15:32,880
this

438
00:15:32,880 --> 00:15:34,800
so the first steps are the same we take

439
00:15:34,800 --> 00:15:36,399
the molar binaries we monitor the

440
00:15:36,399 --> 00:15:38,959
behavior we embed the behavior

441
00:15:38,959 --> 00:15:40,720
and then instead of classifying the

442
00:15:40,720 --> 00:15:42,240
initial data points we classify the

443
00:15:42,240 --> 00:15:44,320
prototypes

444
00:15:44,320 --> 00:15:46,720
on the rejected

445
00:15:46,720 --> 00:15:49,120
prototypes from the classification

446
00:15:49,120 --> 00:15:50,800
we run the algorithms of prototype

447
00:15:50,800 --> 00:15:52,320
extraction

448
00:15:52,320 --> 00:15:54,399
and we extract prototypes out of them

449
00:15:54,399 --> 00:15:56,240
and then we feed these prototypes into

450
00:15:56,240 --> 00:15:57,920
the clustering algorithm

451
00:15:57,920 --> 00:16:00,240
and these new prototypes maybe will

452
00:16:00,240 --> 00:16:02,320
create new clusters with the yesterday's

453
00:16:02,320 --> 00:16:03,920
prototypes

454
00:16:03,920 --> 00:16:05,279
and so on

455
00:16:05,279 --> 00:16:07,040
what we described basically is this

456
00:16:07,040 --> 00:16:08,800
algorithm this is the heart of my ear

457
00:16:08,800 --> 00:16:10,959
this is the entry point the main

458
00:16:10,959 --> 00:16:12,480
function of it

459
00:16:12,480 --> 00:16:13,279
and

460
00:16:13,279 --> 00:16:14,800
it invokes all the other three

461
00:16:14,800 --> 00:16:18,079
algorithms that we talked about

462
00:16:18,079 --> 00:16:19,600
and this way

463
00:16:19,600 --> 00:16:21,519
our model gets stronger and stronger

464
00:16:21,519 --> 00:16:22,800
every day

465
00:16:22,800 --> 00:16:25,279
our framework can

466
00:16:25,279 --> 00:16:27,440
create new clusters of malware and as a

467
00:16:27,440 --> 00:16:30,560
result it can identify

468
00:16:30,560 --> 00:16:32,320
new malware and

469
00:16:32,320 --> 00:16:33,680
in this way

470
00:16:33,680 --> 00:16:36,160
we can attack the malware before it

471
00:16:36,160 --> 00:16:38,800
attacks us

472
00:16:38,880 --> 00:16:40,480
the talk is based on a paper called

473
00:16:40,480 --> 00:16:42,480
automatic analysis of malware behavior

474
00:16:42,480 --> 00:16:45,120
using machine learning it's written

475
00:16:45,120 --> 00:16:47,519
i believe by two german professors and

476
00:16:47,519 --> 00:16:49,279
one austrian professor

477
00:16:49,279 --> 00:16:51,360
about 10 years ago but it's still

478
00:16:51,360 --> 00:16:53,440
relevant

479
00:16:53,440 --> 00:16:55,680
and it's very interesting if you enjoyed

480
00:16:55,680 --> 00:16:57,680
the talk i urge you to

481
00:16:57,680 --> 00:16:59,680
give it a read because it also has some

482
00:16:59,680 --> 00:17:02,240
concepts that we did not have the time

483
00:17:02,240 --> 00:17:03,920
to

484
00:17:03,920 --> 00:17:05,439
talk about today

485
00:17:05,439 --> 00:17:08,720
i want to thank sneha for guiding me and

486
00:17:08,720 --> 00:17:11,679
helping me prepare for this talk today

487
00:17:11,679 --> 00:17:14,319
thank you sneha i really appreciate it

488
00:17:14,319 --> 00:17:16,959
and i also want to thank besides munich

489
00:17:16,959 --> 00:17:18,799
for giving me the chance to be here with

490
00:17:18,799 --> 00:17:20,079
you today

491
00:17:20,079 --> 00:17:22,079
and explore one of the places where the

492
00:17:22,079 --> 00:17:24,160
finest concepts of data science and

493
00:17:24,160 --> 00:17:26,319
malware analysis meet

494
00:17:26,319 --> 00:17:27,919
i would love to connect with you i have

495
00:17:27,919 --> 00:17:30,400
a qr code down here i hope it works it's

496
00:17:30,400 --> 00:17:33,840
not the malware i promise

497
00:17:33,840 --> 00:17:35,280
you don't have to believe me though

498
00:17:35,280 --> 00:17:36,880
right so

499
00:17:36,880 --> 00:17:40,320
you can search me by sorry

500
00:17:40,880 --> 00:17:42,080
right

501
00:17:42,080 --> 00:17:43,600
correct

502
00:17:43,600 --> 00:17:44,960
so

503
00:17:44,960 --> 00:17:48,240
yeah you can also search me by my name

504
00:17:48,240 --> 00:17:50,880
and i would love to hear your questions

505
00:17:50,880 --> 00:17:53,280
and discuss with you

506
00:17:53,280 --> 00:17:57,960
about what we presented thank you

507
00:18:02,559 --> 00:18:04,320
awesome thank you very much any

508
00:18:04,320 --> 00:18:06,640
questions just come in front here please

509
00:18:06,640 --> 00:18:09,280
and ask your

510
00:18:12,840 --> 00:18:15,840
questions just come in front

511
00:18:15,840 --> 00:18:16,960
thanks

512
00:18:16,960 --> 00:18:19,919
so we can hear you online as well

513
00:18:19,919 --> 00:18:22,240
hello hi hello first of all thank you

514
00:18:22,240 --> 00:18:24,160
very much for the very impressive

515
00:18:24,160 --> 00:18:26,240
introduction of your system i have just

516
00:18:26,240 --> 00:18:28,480
one quick question about it where do you

517
00:18:28,480 --> 00:18:30,559
get all that information related to the

518
00:18:30,559 --> 00:18:32,400
malware from because i mean it's a huge

519
00:18:32,400 --> 00:18:34,160
amount of data you need to

520
00:18:34,160 --> 00:18:35,760
put into the system

521
00:18:35,760 --> 00:18:37,840
and are you do we have any sources or

522
00:18:37,840 --> 00:18:39,360
where do you get

523
00:18:39,360 --> 00:18:41,760
so from usually we get those that's a

524
00:18:41,760 --> 00:18:43,679
very nice question actually we get those

525
00:18:43,679 --> 00:18:45,520
from honeypots right

526
00:18:45,520 --> 00:18:47,120
we

527
00:18:47,120 --> 00:18:48,960
a honeypot is

528
00:18:48,960 --> 00:18:50,400
something like a sandbox we could say

529
00:18:50,400 --> 00:18:52,880
that we exposed the internet right and

530
00:18:52,880 --> 00:18:54,320
it has some vulnerabilities and

531
00:18:54,320 --> 00:18:56,720
attackers may get

532
00:18:56,720 --> 00:18:58,559
access to this honeypot and try to

533
00:18:58,559 --> 00:19:00,240
install some malware

534
00:19:00,240 --> 00:19:02,240
but they failed to do it because this is

535
00:19:02,240 --> 00:19:04,000
how handbots work so we take this

536
00:19:04,000 --> 00:19:05,520
malware symbol

537
00:19:05,520 --> 00:19:06,640
and we

538
00:19:06,640 --> 00:19:09,039
throw it into my ear so honeypots

539
00:19:09,039 --> 00:19:11,280
usually is the way how we gather those

540
00:19:11,280 --> 00:19:13,679
apart from that also self-reported

541
00:19:13,679 --> 00:19:16,320
malware from people or things that

542
00:19:16,320 --> 00:19:19,039
either viruses already detected let's

543
00:19:19,039 --> 00:19:20,960
say okay perfect

544
00:19:20,960 --> 00:19:25,799
[Music]

545
00:19:26,160 --> 00:19:29,120
any more questions

546
00:19:33,200 --> 00:19:36,080
i will suppose it was clear then

547
00:19:36,080 --> 00:19:37,440
awesome thank you very much i'm sure you

548
00:19:37,440 --> 00:19:39,280
are available for q a later on yeah i

549
00:19:39,280 --> 00:19:40,480
would love to talk with you thank you

550
00:19:40,480 --> 00:19:43,640
very much

