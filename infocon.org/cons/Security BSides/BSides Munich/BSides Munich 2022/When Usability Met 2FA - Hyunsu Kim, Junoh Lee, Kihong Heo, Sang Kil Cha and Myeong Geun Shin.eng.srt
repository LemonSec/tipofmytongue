1
00:00:00,320 --> 00:00:02,399
just a simple password system

2
00:00:02,399 --> 00:00:03,679
but you have to think about all of the

3
00:00:03,679 --> 00:00:04,640
different ways that you can do

4
00:00:04,640 --> 00:00:07,279
multi-factor right you have hardware

5
00:00:07,279 --> 00:00:09,519
tokens you have apps on your phones you

6
00:00:09,519 --> 00:00:11,440
have actual sms

7
00:00:11,440 --> 00:00:13,519
but there are problems with that

8
00:00:13,519 --> 00:00:15,759
there's a definite usability issue and

9
00:00:15,759 --> 00:00:19,199
so today you're going to hear a story of

10
00:00:19,199 --> 00:00:20,560
how

11
00:00:20,560 --> 00:00:22,720
when usability met

12
00:00:22,720 --> 00:00:25,039
to fa and i'm going to have to read the

13
00:00:25,039 --> 00:00:26,480
list of the authors for this because it

14
00:00:26,480 --> 00:00:28,480
was a team effort for this

15
00:00:28,480 --> 00:00:31,439
so it's going to be hyun tsukim juno lee

16
00:00:31,439 --> 00:00:32,880
ki hong hao

17
00:00:32,880 --> 00:00:35,920
sanki ocha and gyonshin

18
00:00:35,920 --> 00:00:38,079
uh this is a group from kais which is

19
00:00:38,079 --> 00:00:40,320
the korean advanced institute of science

20
00:00:40,320 --> 00:00:43,440
and technology so sit back relax and

21
00:00:43,440 --> 00:00:45,839
hear the story

22
00:00:47,760 --> 00:00:48,719
hey

23
00:00:48,719 --> 00:00:50,580
thanks for the great introductions

24
00:00:50,580 --> 00:00:52,480
[Applause]

25
00:00:52,480 --> 00:00:55,120
can you hear me

26
00:00:57,120 --> 00:00:58,399
can you hear me

27
00:00:58,399 --> 00:01:00,960
i see great thanks

28
00:01:00,960 --> 00:01:03,600
so again thanks for the introductions

29
00:01:03,600 --> 00:01:04,400
and

30
00:01:04,400 --> 00:01:06,479
this is sensu kim from christ

31
00:01:06,479 --> 00:01:08,960
in this talk i'll present about

32
00:01:08,960 --> 00:01:10,720
how hard it is to strike a balance

33
00:01:10,720 --> 00:01:13,280
between usability and security

34
00:01:13,280 --> 00:01:16,080
mainly in two-factor authentication

35
00:01:16,080 --> 00:01:18,720
the title is when usability meant to fa

36
00:01:18,720 --> 00:01:21,680
and this is a joint work with a group of

37
00:01:21,680 --> 00:01:23,680
our team

38
00:01:23,680 --> 00:01:25,840
and we are all from kaist and if you

39
00:01:25,840 --> 00:01:29,759
heard of kaist that's great otherwise

40
00:01:29,759 --> 00:01:31,600
let us begin with

41
00:01:31,600 --> 00:01:33,840
introducing ourselves

42
00:01:33,840 --> 00:01:36,799
so we're currently in korea far away

43
00:01:36,799 --> 00:01:39,520
from munich as shown on the map

44
00:01:39,520 --> 00:01:41,920
in korea and munich are about 13 hours

45
00:01:41,920 --> 00:01:44,560
far away in a single hub flight

46
00:01:44,560 --> 00:01:46,479
so considering ourselves as a physically

47
00:01:46,479 --> 00:01:47,840
distant party

48
00:01:47,840 --> 00:01:49,600
we really appreciate having a chance to

49
00:01:49,600 --> 00:01:52,320
present in the event online

50
00:01:52,320 --> 00:01:54,079
and the picture is an overview of our

51
00:01:54,079 --> 00:01:56,479
campus where you can see many buildings

52
00:01:56,479 --> 00:01:58,320
and grasses

53
00:01:58,320 --> 00:02:00,320
and this is a picture of blossoms in

54
00:02:00,320 --> 00:02:02,479
full bloom in the campus

55
00:02:02,479 --> 00:02:03,840
last spring

56
00:02:03,840 --> 00:02:05,280
and this is the building that we are

57
00:02:05,280 --> 00:02:06,370
currently in with

58
00:02:06,370 --> 00:02:07,759
[Music]

59
00:02:07,759 --> 00:02:10,160
greenland

60
00:02:10,160 --> 00:02:12,400
yeah and caist is one of the leading

61
00:02:12,400 --> 00:02:14,720
research institute in korea

62
00:02:14,720 --> 00:02:17,520
so the name stands for korea advanced

63
00:02:17,520 --> 00:02:20,319
institute of science and technology

64
00:02:20,319 --> 00:02:23,440
the qs world ranking of kais is 41 which

65
00:02:23,440 --> 00:02:25,360
is moderately high

66
00:02:25,360 --> 00:02:27,840
and especially in computer security

67
00:02:27,840 --> 00:02:30,640
kaiser marks the fourth in asia and 35th

68
00:02:30,640 --> 00:02:32,319
in the world

69
00:02:32,319 --> 00:02:34,400
so that being said one may imagine how

70
00:02:34,400 --> 00:02:36,879
tempting it is to launch a cyber attacks

71
00:02:36,879 --> 00:02:39,440
towards kaist as there are bunch of

72
00:02:39,440 --> 00:02:41,599
classified experimental results and

73
00:02:41,599 --> 00:02:44,319
leading as research in progress

74
00:02:44,319 --> 00:02:46,080
indeed there has been and still

75
00:02:46,080 --> 00:02:48,239
happening attempts to exploit the id

76
00:02:48,239 --> 00:02:51,360
service of cheist

77
00:02:51,360 --> 00:02:53,920
and some black hats hackers managed to

78
00:02:53,920 --> 00:02:55,840
leak the privacy information from

79
00:02:55,840 --> 00:02:57,840
libraries electronic research note

80
00:02:57,840 --> 00:02:59,440
system

81
00:02:59,440 --> 00:03:00,879
from the attack

82
00:03:00,879 --> 00:03:03,280
more than 30 000 members personal

83
00:03:03,280 --> 00:03:06,080
information were put in jeopardy

84
00:03:06,080 --> 00:03:07,760
the incident was considered to be

85
00:03:07,760 --> 00:03:09,760
serious security bridge and the kaiser

86
00:03:09,760 --> 00:03:11,760
administration decided to enhance the

87
00:03:11,760 --> 00:03:14,959
security overall

88
00:03:15,280 --> 00:03:17,440
through through the postmodern kai's

89
00:03:17,440 --> 00:03:19,200
decided to adopt two-factor

90
00:03:19,200 --> 00:03:21,680
authentication that is the well-known

91
00:03:21,680 --> 00:03:24,080
authentication mechanism that requires

92
00:03:24,080 --> 00:03:27,120
two proofs to identify a single user

93
00:03:27,120 --> 00:03:28,879
i'm pretty sure that most of you have

94
00:03:28,879 --> 00:03:31,760
may have seen and already experienced

95
00:03:31,760 --> 00:03:33,920
how it works when you're using service

96
00:03:33,920 --> 00:03:34,640
from

97
00:03:34,640 --> 00:03:37,440
maybe google or github

98
00:03:37,440 --> 00:03:39,200
the authentication mechanism basically

99
00:03:39,200 --> 00:03:41,519
requires two distinct proofs where one

100
00:03:41,519 --> 00:03:44,000
is what the user knows such as password

101
00:03:44,000 --> 00:03:47,040
or pen number and the other proof shall

102
00:03:47,040 --> 00:03:49,760
be what the user physically possesses

103
00:03:49,760 --> 00:03:52,959
for example your mobile device bank card

104
00:03:52,959 --> 00:03:56,400
or even a usb stick

105
00:03:56,720 --> 00:03:58,959
while it seems quite trivial to adopt

106
00:03:58,959 --> 00:04:02,239
2fa mechanism throughout the institute

107
00:04:02,239 --> 00:04:03,680
the problem was to consider the

108
00:04:03,680 --> 00:04:06,799
usability of 2fa at the same time

109
00:04:06,799 --> 00:04:08,799
since cast members include aged

110
00:04:08,799 --> 00:04:11,040
professors who usually are not familiar

111
00:04:11,040 --> 00:04:13,200
with complicated procedures

112
00:04:13,200 --> 00:04:16,478
to log into a certain simple service

113
00:04:16,478 --> 00:04:19,040
the fact is that they think toyfa comes

114
00:04:19,040 --> 00:04:20,959
with no good and merely harms the

115
00:04:20,959 --> 00:04:23,520
usability

116
00:04:23,520 --> 00:04:25,840
the security team in kaist had to come

117
00:04:25,840 --> 00:04:28,400
up with a secure 2fa that is also

118
00:04:28,400 --> 00:04:32,159
convenient to use at the same time

119
00:04:32,639 --> 00:04:35,600
so here's how it works

120
00:04:35,600 --> 00:04:37,360
so

121
00:04:37,360 --> 00:04:39,360
here we demonstrate how the invented 2fa

122
00:04:39,360 --> 00:04:41,440
system works and they call it easy

123
00:04:41,440 --> 00:04:44,639
authentication as marked with red box

124
00:04:44,639 --> 00:04:46,639
and all you need to do

125
00:04:46,639 --> 00:04:47,440
is

126
00:04:47,440 --> 00:04:48,320
type

127
00:04:48,320 --> 00:04:50,000
your id

128
00:04:50,000 --> 00:04:52,479
which is for example b-side munich works

129
00:04:52,479 --> 00:04:54,960
with rocks which is obvious then click

130
00:04:54,960 --> 00:04:56,800
the button

131
00:04:56,800 --> 00:04:59,280
so the pop-up window shows up saying the

132
00:04:59,280 --> 00:05:01,199
authentication is in

133
00:05:01,199 --> 00:05:03,680
progress

134
00:05:03,840 --> 00:05:06,320
then a push alarm arrives to the user's

135
00:05:06,320 --> 00:05:08,720
mobile device saying attempt for the

136
00:05:08,720 --> 00:05:12,880
easy authentication is being detected

137
00:05:12,880 --> 00:05:15,039
if you click on the push alarm the

138
00:05:15,039 --> 00:05:17,759
custom app is launched and asked for the

139
00:05:17,759 --> 00:05:20,880
face id or touch id immediately

140
00:05:20,880 --> 00:05:22,840
if success the user is

141
00:05:22,840 --> 00:05:25,199
authenticated and yeah that that is all

142
00:05:25,199 --> 00:05:27,280
for demonstrating how the system works

143
00:05:27,280 --> 00:05:29,199
and i'm pretty sure most of you may have

144
00:05:29,199 --> 00:05:31,280
already found out how sloppy the system

145
00:05:31,280 --> 00:05:34,239
is being designed

146
00:05:35,039 --> 00:05:36,800
then about several months after the

147
00:05:36,800 --> 00:05:39,840
suspicious 2fa was launched in kaist

148
00:05:39,840 --> 00:05:42,560
graduate school of information security

149
00:05:42,560 --> 00:05:44,240
there was an exciting course going on

150
00:05:44,240 --> 00:05:46,800
called binary code analysis and secure

151
00:05:46,800 --> 00:05:48,960
software systems

152
00:05:48,960 --> 00:05:51,440
as the name of the course indicates

153
00:05:51,440 --> 00:05:53,440
students were expected to learn binary

154
00:05:53,440 --> 00:05:55,759
level program analysis techniques to

155
00:05:55,759 --> 00:05:58,240
achieve the end goal which is secure

156
00:05:58,240 --> 00:06:00,560
software system

157
00:06:00,560 --> 00:06:02,560
and those pro hackers around the campus

158
00:06:02,560 --> 00:06:05,120
who usually solve hard ctf problems as a

159
00:06:05,120 --> 00:06:09,280
hobby gathered to take the course

160
00:06:09,280 --> 00:06:11,759
and one day the instructor of the course

161
00:06:11,759 --> 00:06:14,960
professor cha sankocha announced to meet

162
00:06:14,960 --> 00:06:17,199
her midterm

163
00:06:17,199 --> 00:06:19,120
which was not simply testing one's

164
00:06:19,120 --> 00:06:20,560
knowledge

165
00:06:20,560 --> 00:06:22,319
and the students were asked to find the

166
00:06:22,319 --> 00:06:24,240
vulnerabilities in christ's easy

167
00:06:24,240 --> 00:06:27,199
authentication service

168
00:06:27,199 --> 00:06:30,160
at the same time he explicitly mentioned

169
00:06:30,160 --> 00:06:32,000
not to actually exploit the system at

170
00:06:32,000 --> 00:06:33,759
all

171
00:06:33,759 --> 00:06:36,319
for the midterm 24 hours were given to

172
00:06:36,319 --> 00:06:38,639
demonstrate the proof of concept and

173
00:06:38,639 --> 00:06:42,160
write a short report about it

174
00:06:42,160 --> 00:06:44,080
and one of the pro hacker who was taking

175
00:06:44,080 --> 00:06:45,600
the course

176
00:06:45,600 --> 00:06:47,919
managed to hacked hacking to professor's

177
00:06:47,919 --> 00:06:50,160
account and submitted a screenshot

178
00:06:50,160 --> 00:06:52,400
showing oneself successfully got into

179
00:06:52,400 --> 00:06:54,639
the keist academic system as part of the

180
00:06:54,639 --> 00:06:55,919
report

181
00:06:55,919 --> 00:06:56,720
and

182
00:06:56,720 --> 00:06:57,919
if he

183
00:06:57,919 --> 00:06:59,919
if he

184
00:06:59,919 --> 00:07:02,960
if he managed to do that to to do so he

185
00:07:02,960 --> 00:07:05,919
could have manipulated the grades

186
00:07:05,919 --> 00:07:07,919
and so on

187
00:07:07,919 --> 00:07:09,919
so the professor got embarrassed by the

188
00:07:09,919 --> 00:07:10,880
student

189
00:07:10,880 --> 00:07:13,440
yet he was fairly satisfied with the

190
00:07:13,440 --> 00:07:15,520
performance of the students that they

191
00:07:15,520 --> 00:07:17,680
found many serious security threats of

192
00:07:17,680 --> 00:07:21,680
the system much more than he thought

193
00:07:21,680 --> 00:07:23,680
and here's the analysis of such

194
00:07:23,680 --> 00:07:26,400
vulnerabilities

195
00:07:26,400 --> 00:07:28,240
so first of all

196
00:07:28,240 --> 00:07:31,039
it is not even a proper 2fa it's a

197
00:07:31,039 --> 00:07:33,199
single factor authentication

198
00:07:33,199 --> 00:07:35,440
because it only requires the proof of

199
00:07:35,440 --> 00:07:37,199
having a device

200
00:07:37,199 --> 00:07:40,720
and the id itself cannot be a proof for

201
00:07:40,720 --> 00:07:43,360
the authentication

202
00:07:43,360 --> 00:07:45,199
and it's uh

203
00:07:45,199 --> 00:07:48,160
as you as you show as we have shown in

204
00:07:48,160 --> 00:07:49,599
the demonstration

205
00:07:49,599 --> 00:07:52,080
it's very vulnerable to human error

206
00:07:52,080 --> 00:07:54,000
one can accidentally authenticate

207
00:07:54,000 --> 00:07:56,639
unknown requests by mistake

208
00:07:56,639 --> 00:07:58,479
and it is impossible to review or

209
00:07:58,479 --> 00:07:59,520
retrieve

210
00:07:59,520 --> 00:08:02,719
the given sessions

211
00:08:03,120 --> 00:08:04,400
and the other

212
00:08:04,400 --> 00:08:05,199
uh

213
00:08:05,199 --> 00:08:07,759
vulnerability that we found was

214
00:08:07,759 --> 00:08:09,440
the authentication the whole

215
00:08:09,440 --> 00:08:11,840
authentication procedure could be

216
00:08:11,840 --> 00:08:13,599
bypassed

217
00:08:13,599 --> 00:08:16,479
by circumventing entire

218
00:08:16,479 --> 00:08:18,319
authentication process

219
00:08:18,319 --> 00:08:20,319
and we found it

220
00:08:20,319 --> 00:08:23,199
being the most powerful attack

221
00:08:23,199 --> 00:08:24,840
and the reason why they had this

222
00:08:24,840 --> 00:08:27,360
vulnerability is they had

223
00:08:27,360 --> 00:08:31,120
to implement a new 2fa system over the

224
00:08:31,120 --> 00:08:32,559
deprecated

225
00:08:32,559 --> 00:08:34,159
authentication

226
00:08:34,159 --> 00:08:36,799
design and there was a misalignment

227
00:08:36,799 --> 00:08:38,479
between the two

228
00:08:38,479 --> 00:08:39,519
and

229
00:08:39,519 --> 00:08:40,479
this

230
00:08:40,479 --> 00:08:43,279
this huge and serious vulnerability was

231
00:08:43,279 --> 00:08:45,120
there

232
00:08:45,120 --> 00:08:47,680
and we can uh in later

233
00:08:47,680 --> 00:08:50,160
later uh this talk we will

234
00:08:50,160 --> 00:08:52,800
uh shortly demonstrate how this attack

235
00:08:52,800 --> 00:08:55,519
works

236
00:08:55,519 --> 00:08:58,640
and not only those two we were able to

237
00:08:58,640 --> 00:08:59,680
find

238
00:08:59,680 --> 00:09:01,120
other more

239
00:09:01,120 --> 00:09:03,120
serious vulnerabilities for example id

240
00:09:03,120 --> 00:09:05,200
leakage ddos

241
00:09:05,200 --> 00:09:07,200
which is distributed denial of service

242
00:09:07,200 --> 00:09:08,640
and idol

243
00:09:08,640 --> 00:09:10,640
that stands for insecure direct object

244
00:09:10,640 --> 00:09:12,720
reference

245
00:09:12,720 --> 00:09:15,600
an id leakage is

246
00:09:15,600 --> 00:09:16,560
the

247
00:09:16,560 --> 00:09:18,720
use of the vulnerability that user id

248
00:09:18,720 --> 00:09:23,360
validity check api was public so that

249
00:09:23,360 --> 00:09:25,680
it can be abused as an oracle for valid

250
00:09:25,680 --> 00:09:27,920
ids by an attacker

251
00:09:27,920 --> 00:09:32,319
and by numer enumerating valid ids

252
00:09:32,640 --> 00:09:34,640
hackers can

253
00:09:34,640 --> 00:09:36,399
not arbitrarily

254
00:09:36,399 --> 00:09:39,519
select uh their target for

255
00:09:39,519 --> 00:09:42,320
target victim

256
00:09:42,320 --> 00:09:44,640
and that denial of service using botnet

257
00:09:44,640 --> 00:09:45,839
could be

258
00:09:45,839 --> 00:09:47,839
also be done by

259
00:09:47,839 --> 00:09:50,800
with ip spoofing that makes the tracking

260
00:09:50,800 --> 00:09:53,519
nearly impossible

261
00:09:53,519 --> 00:09:54,560
and also

262
00:09:54,560 --> 00:09:56,160
lastly idor

263
00:09:56,160 --> 00:10:00,160
is an access to an unauthorized resource

264
00:10:00,160 --> 00:10:02,399
and again this was

265
00:10:02,399 --> 00:10:04,560
the other vulnerability that comes with

266
00:10:04,560 --> 00:10:08,560
misalignment with i mean between the

267
00:10:08,560 --> 00:10:09,680
legacy

268
00:10:09,680 --> 00:10:11,760
system and the new newly implemented

269
00:10:11,760 --> 00:10:13,839
system

270
00:10:13,839 --> 00:10:14,959
so basically

271
00:10:14,959 --> 00:10:16,160
there were

272
00:10:16,160 --> 00:10:18,160
other vulnerabilities due to poorly

273
00:10:18,160 --> 00:10:21,839
designed architecture of apis

274
00:10:22,160 --> 00:10:23,839
so here's a short demo

275
00:10:23,839 --> 00:10:25,200
that

276
00:10:25,200 --> 00:10:27,760
demonstrates the authentication bypass

277
00:10:27,760 --> 00:10:29,839
attack

278
00:10:29,839 --> 00:10:31,200
first you

279
00:10:31,200 --> 00:10:33,680
the attacker can enumerate enumerate

280
00:10:33,680 --> 00:10:34,959
user ids

281
00:10:34,959 --> 00:10:37,120
by going into the cast

282
00:10:37,120 --> 00:10:38,480
mail service

283
00:10:38,480 --> 00:10:41,440
where you type in some string there and

284
00:10:41,440 --> 00:10:43,680
it com it shows you

285
00:10:43,680 --> 00:10:44,720
the

286
00:10:44,720 --> 00:10:48,880
match of that string to certain kissed

287
00:10:48,880 --> 00:10:50,320
members

288
00:10:50,320 --> 00:10:51,440
for example

289
00:10:51,440 --> 00:10:54,560
here we find jungen's

290
00:10:54,560 --> 00:10:55,839
id

291
00:10:55,839 --> 00:10:58,640
basically email email address

292
00:10:58,640 --> 00:11:00,800
and the finding is that

293
00:11:00,800 --> 00:11:02,560
most users have

294
00:11:02,560 --> 00:11:05,279
the same id with the header head of the

295
00:11:05,279 --> 00:11:06,720
email address

296
00:11:06,720 --> 00:11:09,920
so you we just use the

297
00:11:09,920 --> 00:11:12,240
head of the email address as an id

298
00:11:12,240 --> 00:11:15,120
for the attack

299
00:11:15,120 --> 00:11:16,399
and then

300
00:11:16,399 --> 00:11:18,640
we try to authenticate

301
00:11:18,640 --> 00:11:21,200
the user in the in the browser

302
00:11:21,200 --> 00:11:24,880
and with proxy for example fiddler

303
00:11:24,880 --> 00:11:27,600
we intercept the login packet

304
00:11:27,600 --> 00:11:29,040
and then

305
00:11:29,040 --> 00:11:32,240
replace the login packet with

306
00:11:32,240 --> 00:11:33,040
the

307
00:11:33,040 --> 00:11:35,360
custom string that we find

308
00:11:35,360 --> 00:11:38,000
that we manually find out

309
00:11:38,000 --> 00:11:40,399
and by replacing it

310
00:11:40,399 --> 00:11:43,279
we can we were one would successfully

311
00:11:43,279 --> 00:11:46,399
log in with um

312
00:11:46,399 --> 00:11:49,200
victims user

313
00:11:49,200 --> 00:11:51,519
victims uh

314
00:11:51,519 --> 00:11:54,000
authentication without any without

315
00:11:54,000 --> 00:11:58,800
knowing the password or having a device

316
00:12:00,160 --> 00:12:02,000
so here's our

317
00:12:02,000 --> 00:12:06,320
suggested solutions to the institute

318
00:12:06,320 --> 00:12:07,440
first

319
00:12:07,440 --> 00:12:09,440
we strongly

320
00:12:09,440 --> 00:12:12,160
mentioned that roll backing the password

321
00:12:12,160 --> 00:12:14,639
off would be the

322
00:12:14,639 --> 00:12:16,240
trivial and most

323
00:12:16,240 --> 00:12:19,120
definite solution

324
00:12:19,279 --> 00:12:20,480
and

325
00:12:20,480 --> 00:12:22,079
after that

326
00:12:22,079 --> 00:12:24,560
although it needs the further

327
00:12:24,560 --> 00:12:26,160
uh

328
00:12:26,160 --> 00:12:27,839
backup solutions

329
00:12:27,839 --> 00:12:29,120
but we

330
00:12:29,120 --> 00:12:32,240
highly we are strongly

331
00:12:32,240 --> 00:12:33,600
uh

332
00:12:33,600 --> 00:12:36,880
we were very clear to say that this must

333
00:12:36,880 --> 00:12:38,639
be done right away

334
00:12:38,639 --> 00:12:41,040
but they didn't but they rejected

335
00:12:41,040 --> 00:12:43,200
because of

336
00:12:43,200 --> 00:12:46,880
uh institute issue

337
00:12:47,360 --> 00:12:49,040
and then

338
00:12:49,040 --> 00:12:53,120
we tried to suggest i mean we

339
00:12:53,120 --> 00:12:55,839
we also said the sys the

340
00:12:55,839 --> 00:12:58,880
original system itself is not a 2fa

341
00:12:58,880 --> 00:13:02,000
and we have to go with proper 2fa

342
00:13:02,000 --> 00:13:04,320
that has to come with

343
00:13:04,320 --> 00:13:09,040
a password and device check all together

344
00:13:09,040 --> 00:13:11,440
and it was funny that there were there

345
00:13:11,440 --> 00:13:13,440
there was already another service in

346
00:13:13,440 --> 00:13:14,959
kais

347
00:13:14,959 --> 00:13:18,560
which is vpn service that already comes

348
00:13:18,560 --> 00:13:20,720
with 2fa

349
00:13:20,720 --> 00:13:21,680
and

350
00:13:21,680 --> 00:13:25,040
it you it requires you to enter password

351
00:13:25,040 --> 00:13:27,839
and one-time password via device

352
00:13:27,839 --> 00:13:29,519
together to get

353
00:13:29,519 --> 00:13:32,000
yourself

354
00:13:32,839 --> 00:13:36,000
authenticated and then we also

355
00:13:36,000 --> 00:13:37,839
suggested to

356
00:13:37,839 --> 00:13:38,959
uh have

357
00:13:38,959 --> 00:13:40,880
sustained review and retrieval

358
00:13:40,880 --> 00:13:42,240
functionality

359
00:13:42,240 --> 00:13:44,800
in the system

360
00:13:44,800 --> 00:13:45,519
so

361
00:13:45,519 --> 00:13:47,600
if you have

362
00:13:47,600 --> 00:13:49,199
you i mean you may have seen this

363
00:13:49,199 --> 00:13:51,760
functionality in github or google

364
00:13:51,760 --> 00:13:53,839
so that you can review the currently

365
00:13:53,839 --> 00:13:56,399
activated sessions

366
00:13:56,399 --> 00:13:59,760
so so that you can list up all the

367
00:13:59,760 --> 00:14:01,360
current sessions that is going on and

368
00:14:01,360 --> 00:14:05,120
then you can selectively retrieve

369
00:14:05,120 --> 00:14:06,720
those sessions

370
00:14:06,720 --> 00:14:08,639
which seems to be

371
00:14:08,639 --> 00:14:09,680
superior

372
00:14:09,680 --> 00:14:10,880
for example

373
00:14:10,880 --> 00:14:12,399
if you're in

374
00:14:12,399 --> 00:14:14,560
if you're in germany

375
00:14:14,560 --> 00:14:17,680
but you somehow find found that

376
00:14:17,680 --> 00:14:20,000
some sessions were in

377
00:14:20,000 --> 00:14:22,880
i mean said to be in korea

378
00:14:22,880 --> 00:14:26,800
you may think that it's very

379
00:14:27,040 --> 00:14:29,519
spurious right so that you can achieve

380
00:14:29,519 --> 00:14:32,160
that session

381
00:14:32,320 --> 00:14:35,920
and then we had several iterations

382
00:14:35,920 --> 00:14:38,079
iterated meetings with kaiser

383
00:14:38,079 --> 00:14:39,519
administration

384
00:14:39,519 --> 00:14:41,120
to get

385
00:14:41,120 --> 00:14:43,279
the system fixed

386
00:14:43,279 --> 00:14:44,720
but they

387
00:14:44,720 --> 00:14:46,720
uh strongly

388
00:14:46,720 --> 00:14:48,000
they were

389
00:14:48,000 --> 00:14:49,839
they rejected the

390
00:14:49,839 --> 00:14:52,480
they i mean they were not they were

391
00:14:52,480 --> 00:14:54,639
pretty against with our suggestions

392
00:14:54,639 --> 00:14:56,240
because

393
00:14:56,240 --> 00:14:59,360
the issue was usability

394
00:14:59,360 --> 00:15:00,240
i mean

395
00:15:00,240 --> 00:15:04,000
they agree with security issue but

396
00:15:04,000 --> 00:15:06,720
as we go with proper 2fa

397
00:15:06,720 --> 00:15:10,160
it kind of harms the entire usability so

398
00:15:10,160 --> 00:15:13,839
that they cannot go for it

399
00:15:14,480 --> 00:15:16,639
so

400
00:15:16,800 --> 00:15:19,920
with the suggestions i mean with the

401
00:15:19,920 --> 00:15:23,120
we we kept on suggesting other

402
00:15:23,120 --> 00:15:27,839
measures to make it secure

403
00:15:28,160 --> 00:15:29,440
through the several meetings with the

404
00:15:29,440 --> 00:15:30,399
security

405
00:15:30,399 --> 00:15:33,120
administrations

406
00:15:33,120 --> 00:15:35,279
the only change they made was to pop the

407
00:15:35,279 --> 00:15:37,600
number up on the screen on both the

408
00:15:37,600 --> 00:15:38,720
browser

409
00:15:38,720 --> 00:15:40,720
and the mobile app

410
00:15:40,720 --> 00:15:43,279
and before so that the user before

411
00:15:43,279 --> 00:15:45,680
granting access with fade face id or

412
00:15:45,680 --> 00:15:47,759
touch id in the mobile app

413
00:15:47,759 --> 00:15:50,000
the user would hopefully check if the

414
00:15:50,000 --> 00:15:52,079
number shown on the app matches with

415
00:15:52,079 --> 00:15:56,000
that of a browser so that the user won't

416
00:15:56,000 --> 00:15:57,440
uh

417
00:15:57,440 --> 00:15:58,800
mess up with

418
00:15:58,800 --> 00:16:01,440
i mean mistakenly authenticate other

419
00:16:01,440 --> 00:16:03,519
requests or

420
00:16:03,519 --> 00:16:04,480
attack

421
00:16:04,480 --> 00:16:08,560
by a certain use certain hacker

422
00:16:08,560 --> 00:16:10,160
by mistake

423
00:16:10,160 --> 00:16:11,600
and it partially mitigates the

424
00:16:11,600 --> 00:16:13,920
vulnerability as it helps to confirm

425
00:16:13,920 --> 00:16:16,000
which access is likely to be malicious

426
00:16:16,000 --> 00:16:18,320
or not

427
00:16:18,639 --> 00:16:19,360
and

428
00:16:19,360 --> 00:16:23,680
some may ask if is

429
00:16:23,680 --> 00:16:25,839
can can this be uh

430
00:16:25,839 --> 00:16:28,480
can this to be i mean understood to be

431
00:16:28,480 --> 00:16:30,399
fixed solution

432
00:16:30,399 --> 00:16:34,079
and definitely it's no

433
00:16:35,040 --> 00:16:37,360
so in conclusion our takeaway message is

434
00:16:37,360 --> 00:16:38,560
as follows

435
00:16:38,560 --> 00:16:41,440
first implementing easy to use 2fa

436
00:16:41,440 --> 00:16:43,680
without weakening the security is very

437
00:16:43,680 --> 00:16:45,600
tricky

438
00:16:45,600 --> 00:16:47,040
so

439
00:16:47,040 --> 00:16:48,880
as we have seen in the last slide the

440
00:16:48,880 --> 00:16:51,279
improved version is still not a proper

441
00:16:51,279 --> 00:16:53,680
2fa

442
00:16:53,680 --> 00:16:54,800
and second

443
00:16:54,800 --> 00:16:56,399
software testing and informal

444
00:16:56,399 --> 00:16:58,720
verification should help in its proper

445
00:16:58,720 --> 00:17:00,959
design and the two methods are

446
00:17:00,959 --> 00:17:03,279
traditional yet effective ways to find

447
00:17:03,279 --> 00:17:05,359
bugs and guarantee desired

448
00:17:05,359 --> 00:17:07,359
software guarantee the desired software

449
00:17:07,359 --> 00:17:09,839
property

450
00:17:10,880 --> 00:17:12,720
and here's the references

451
00:17:12,720 --> 00:17:14,240
for our work

452
00:17:14,240 --> 00:17:15,359
and

453
00:17:15,359 --> 00:17:16,799
thank you for listening

454
00:17:16,799 --> 00:17:18,559
if you have any questions please feel

455
00:17:18,559 --> 00:17:20,770
free to ask

456
00:17:20,770 --> 00:17:27,679
[Applause]

457
00:17:27,679 --> 00:17:29,760
so do we have any questions for our

458
00:17:29,760 --> 00:17:32,559
speaker today

459
00:17:32,559 --> 00:17:34,480
one in the back

460
00:17:34,480 --> 00:17:38,080
morton is going he's going

461
00:17:39,520 --> 00:17:41,919
testing testing seems to be working hi

462
00:17:41,919 --> 00:17:43,120
um

463
00:17:43,120 --> 00:17:46,880
on the the issue of usability versus

464
00:17:46,880 --> 00:17:49,520
security versus usability

465
00:17:49,520 --> 00:17:51,039
there's

466
00:17:51,039 --> 00:17:53,840
several systems that don't require user

467
00:17:53,840 --> 00:17:55,919
input but you just talked about just

468
00:17:55,919 --> 00:17:59,360
having proof of a usb stick you put in

469
00:17:59,360 --> 00:18:01,760
um what's your stance on fido 2 tokens

470
00:18:01,760 --> 00:18:03,039
and stuff like that where you don't have

471
00:18:03,039 --> 00:18:05,280
to input anything but it's

472
00:18:05,280 --> 00:18:07,120
just there and you just have to attach

473
00:18:07,120 --> 00:18:09,199
it

474
00:18:13,360 --> 00:18:15,440
i sorry i cannot understand

475
00:18:15,440 --> 00:18:18,480
should i repeat i'll try um

476
00:18:18,480 --> 00:18:21,280
what's your opinion on

477
00:18:21,280 --> 00:18:23,679
passwordless login procedures through

478
00:18:23,679 --> 00:18:26,080
hardware tokens uh in the security

479
00:18:26,080 --> 00:18:27,679
versus usability

480
00:18:27,679 --> 00:18:29,120
issue

481
00:18:29,120 --> 00:18:32,080
security token

482
00:18:33,200 --> 00:18:34,320
i mean

483
00:18:34,320 --> 00:18:36,720
password itself is

484
00:18:36,720 --> 00:18:38,400
not a

485
00:18:38,400 --> 00:18:41,760
i mean it it it is a traditional way to

486
00:18:41,760 --> 00:18:43,600
authenticate but

487
00:18:43,600 --> 00:18:46,160
it is also traditionally known to be

488
00:18:46,160 --> 00:18:47,919
unsafe

489
00:18:47,919 --> 00:18:50,000
right because

490
00:18:50,000 --> 00:18:52,880
password only is

491
00:18:52,880 --> 00:18:55,520
is very error prone to humans human

492
00:18:55,520 --> 00:18:57,919
human errors

493
00:18:57,919 --> 00:19:00,240
and

494
00:19:01,440 --> 00:19:07,039
using usb stick is i mean together with

495
00:19:08,559 --> 00:19:11,520
your specific you you can achieve better

496
00:19:11,520 --> 00:19:13,520
security i guess

497
00:19:13,520 --> 00:19:16,639
i mean that for sure

498
00:19:17,919 --> 00:19:19,760
am i getting your question right

499
00:19:19,760 --> 00:19:21,679
or am i missing

500
00:19:21,679 --> 00:19:24,799
i think part of the question is

501
00:19:24,799 --> 00:19:27,280
so when you have a security token on a

502
00:19:27,280 --> 00:19:29,520
usb for example

503
00:19:29,520 --> 00:19:30,400
um

504
00:19:30,400 --> 00:19:33,520
what role does usability play there is

505
00:19:33,520 --> 00:19:35,679
it easier is it

506
00:19:35,679 --> 00:19:37,520
less easy does it make it better for

507
00:19:37,520 --> 00:19:39,679
users if they just have to use

508
00:19:39,679 --> 00:19:43,039
one of these security tokens

509
00:19:43,039 --> 00:19:44,240
or

510
00:19:44,240 --> 00:19:45,440
is

511
00:19:45,440 --> 00:19:48,000
security token you mean the number shown

512
00:19:48,000 --> 00:19:49,360
on

513
00:19:49,360 --> 00:19:50,559
the screen

514
00:19:50,559 --> 00:19:53,120
nope we're talking about um

515
00:19:53,120 --> 00:19:55,520
there are usb devices that have

516
00:19:55,520 --> 00:19:56,960
basically

517
00:19:56,960 --> 00:19:58,400
set it up so that

518
00:19:58,400 --> 00:20:00,480
using cryptography you can plug it in

519
00:20:00,480 --> 00:20:03,120
and basically identify as yourself

520
00:20:03,120 --> 00:20:05,760
and so that's commonly used

521
00:20:05,760 --> 00:20:08,400
as a form of authentication

522
00:20:08,400 --> 00:20:10,960
and so um

523
00:20:10,960 --> 00:20:13,120
so in that case a person only has to

524
00:20:13,120 --> 00:20:15,520
have this hardware authentication and

525
00:20:15,520 --> 00:20:19,039
then their login and password of course

526
00:20:19,039 --> 00:20:21,600
oh i see and how does that come with

527
00:20:21,600 --> 00:20:24,399
usability

528
00:20:25,360 --> 00:20:28,000
oh and i think that's a good question

529
00:20:28,000 --> 00:20:29,840
but

530
00:20:29,840 --> 00:20:32,960
i think if you have

531
00:20:32,960 --> 00:20:35,840
usb stick you you may not

532
00:20:35,840 --> 00:20:39,039
you may have hard time

533
00:20:39,039 --> 00:20:41,360
uh using

534
00:20:41,360 --> 00:20:42,640
uh

535
00:20:42,640 --> 00:20:45,520
logging into the cut the certain service

536
00:20:45,520 --> 00:20:48,320
to your mobile device where you cannot

537
00:20:48,320 --> 00:20:49,440
easily

538
00:20:49,440 --> 00:20:52,559
plug in the usb stick right

539
00:20:52,559 --> 00:20:55,280
so i think that

540
00:20:55,280 --> 00:20:57,520
kind of

541
00:20:57,520 --> 00:21:00,880
harms to use usability still if we go

542
00:21:00,880 --> 00:21:03,840
for usb stick

543
00:21:03,919 --> 00:21:05,760
will that answer your question

544
00:21:05,760 --> 00:21:07,360
yep did that answer

545
00:21:07,360 --> 00:21:10,480
okay we got a thumbs up very good

546
00:21:10,480 --> 00:21:11,360
so

547
00:21:11,360 --> 00:21:16,360
any other questions for our speaker

548
00:21:16,880 --> 00:21:19,840
i'm checking the time um i actually have

549
00:21:19,840 --> 00:21:21,919
a question for you and that was bad

550
00:21:21,919 --> 00:21:24,640
feedback so um

551
00:21:24,640 --> 00:21:26,240
you said that there was an entire team

552
00:21:26,240 --> 00:21:28,159
or an entire group of people looking at

553
00:21:28,159 --> 00:21:31,039
this in a class and i'm wondering what

554
00:21:31,039 --> 00:21:32,960
kinds of tools did you use to

555
00:21:32,960 --> 00:21:36,159
investigate the implementation of

556
00:21:36,159 --> 00:21:37,220
multi-factor

557
00:21:37,220 --> 00:21:38,880
[Music]

558
00:21:38,880 --> 00:21:41,120
oh

559
00:21:41,760 --> 00:21:43,280
you mentioned

560
00:21:43,280 --> 00:21:45,120
yeah go ahead sorry yeah

561
00:21:45,120 --> 00:21:48,400
fiddler was what's the option

562
00:21:48,400 --> 00:21:50,640
and

563
00:21:52,500 --> 00:21:55,609
[Music]

564
00:21:57,039 --> 00:21:59,360
i i only used fiddler i have to ask

565
00:21:59,360 --> 00:22:01,080
other you know other team

566
00:22:01,080 --> 00:22:03,200
[Music]

567
00:22:03,200 --> 00:22:04,960
and

568
00:22:04,960 --> 00:22:05,919
basically

569
00:22:05,919 --> 00:22:07,919
uh

570
00:22:07,919 --> 00:22:10,400
python

571
00:22:10,840 --> 00:22:15,200
okay um and then my final

572
00:22:15,200 --> 00:22:16,480
um

573
00:22:16,480 --> 00:22:18,240
yep so you

574
00:22:18,240 --> 00:22:19,760
you're the class that you were taking

575
00:22:19,760 --> 00:22:22,159
though focused on um

576
00:22:22,159 --> 00:22:23,600
basically

577
00:22:23,600 --> 00:22:26,400
finding vulnerabilities in code

578
00:22:26,400 --> 00:22:29,120
so what kind of tooling do you do you do

579
00:22:29,120 --> 00:22:30,960
or do you use in that course to actually

580
00:22:30,960 --> 00:22:33,840
find vulnerabilities in code

581
00:22:33,840 --> 00:22:36,880
oh yeah uh we use

582
00:22:36,880 --> 00:22:39,760
ida pro for sure

583
00:22:39,760 --> 00:22:41,840
you

584
00:22:43,679 --> 00:22:46,080
of course

585
00:22:46,080 --> 00:22:49,440
yeah i think that's all

586
00:22:49,440 --> 00:22:51,039
and

587
00:22:51,039 --> 00:22:53,760
yeah and we use we write our exploit

588
00:22:53,760 --> 00:22:55,440
with

589
00:22:55,440 --> 00:22:57,120
python

590
00:22:57,120 --> 00:22:58,480
and

591
00:22:58,480 --> 00:23:00,799
using pawn

592
00:23:00,799 --> 00:23:02,400
i cannot recall the

593
00:23:02,400 --> 00:23:04,720
name of the library right now

594
00:23:04,720 --> 00:23:06,240
okay

595
00:23:06,240 --> 00:23:09,039
and then uh for the solution that you

596
00:23:09,039 --> 00:23:11,200
analyzed was it i didn't get at the

597
00:23:11,200 --> 00:23:15,600
beginning was it a homegrown solution

598
00:23:17,039 --> 00:23:19,200
yeah yeah right yeah okay

599
00:23:19,200 --> 00:23:21,919
would you ever recommend to build your

600
00:23:21,919 --> 00:23:24,880
own multi-factor solution or should you

601
00:23:24,880 --> 00:23:28,240
just buy it off the shelf

602
00:23:28,720 --> 00:23:29,520
uh

603
00:23:29,520 --> 00:23:32,320
i think it's

604
00:23:32,400 --> 00:23:34,840
i would buy a buy it off the shelf

605
00:23:34,840 --> 00:23:39,200
because i mean it's very trivial to

606
00:23:39,200 --> 00:23:43,200
to satisfy the 2fa property so that

607
00:23:43,200 --> 00:23:48,640
you won't get any additional benefit

608
00:23:48,799 --> 00:23:49,679
by

609
00:23:49,679 --> 00:23:52,720
having it yourself unless you have

610
00:23:52,720 --> 00:23:54,559
a very clear idea that

611
00:23:54,559 --> 00:23:55,760
can

612
00:23:55,760 --> 00:23:56,640
uh

613
00:23:56,640 --> 00:23:58,159
you know balance

614
00:23:58,159 --> 00:23:59,520
i mean

615
00:23:59,520 --> 00:24:01,600
uh guarantee other

616
00:24:01,600 --> 00:24:04,960
properties such as usability here

617
00:24:04,960 --> 00:24:07,279
and

618
00:24:07,279 --> 00:24:08,240
yeah

619
00:24:08,240 --> 00:24:09,600
i if

620
00:24:09,600 --> 00:24:11,679
if the purpose is just for security i

621
00:24:11,679 --> 00:24:14,799
would bite off the shelf but if you

622
00:24:14,799 --> 00:24:18,918
do it something more fun

623
00:24:19,120 --> 00:24:21,200
definitely

624
00:24:21,200 --> 00:24:22,960
[Music]

625
00:24:22,960 --> 00:24:24,960
all right does anyone have any other

626
00:24:24,960 --> 00:24:27,600
questions

627
00:24:27,679 --> 00:24:28,640
okay

628
00:24:28,640 --> 00:24:30,159
then thank you so much for your time

629
00:24:30,159 --> 00:24:33,760
today um it was great to hear about your

630
00:24:33,760 --> 00:24:37,600
story and have a great rest of your day

631
00:24:37,600 --> 00:24:39,570
thank you

632
00:24:39,570 --> 00:24:42,790
[Applause]

