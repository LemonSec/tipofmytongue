1
00:00:03,280 --> 00:00:05,440
yeah welcome everybody to my talk about

2
00:00:05,440 --> 00:00:08,080
uh how to measure iot security uh by

3
00:00:08,080 --> 00:00:11,280
using mitre attack

4
00:00:11,759 --> 00:00:12,639
ah

5
00:00:12,639 --> 00:00:14,799
yeah some words additional words about

6
00:00:14,799 --> 00:00:16,320
miss

7
00:00:16,320 --> 00:00:17,440
myself

8
00:00:17,440 --> 00:00:19,520
i have a master's degree from the world

9
00:00:19,520 --> 00:00:22,080
university book on iit security

10
00:00:22,080 --> 00:00:24,160
and i'm pretty into like jen already

11
00:00:24,160 --> 00:00:25,279
told you

12
00:00:25,279 --> 00:00:27,279
into the offensive part

13
00:00:27,279 --> 00:00:29,679
and used my knowledge to currently

14
00:00:29,679 --> 00:00:32,159
building up socks and blue teams so they

15
00:00:32,159 --> 00:00:35,520
get from the attack perspective a better

16
00:00:35,520 --> 00:00:36,559
um

17
00:00:36,559 --> 00:00:38,800
a better

18
00:00:38,800 --> 00:00:43,040
view on the on the defense in general

19
00:00:43,040 --> 00:00:46,800
yeah so why should we measure security

20
00:00:46,800 --> 00:00:49,280
so let's talk about the motivation

21
00:00:49,280 --> 00:00:50,800
imagine

22
00:00:50,800 --> 00:00:54,079
you have a bigger it environment let's

23
00:00:54,079 --> 00:00:56,160
say in a company

24
00:00:56,160 --> 00:00:58,239
and in this idea environment you have

25
00:00:58,239 --> 00:01:00,960
distributed responsibilities like you

26
00:01:00,960 --> 00:01:02,719
have some guys that are managing the

27
00:01:02,719 --> 00:01:04,159
clients you have some guys that are

28
00:01:04,159 --> 00:01:06,479
managing the service web applications

29
00:01:06,479 --> 00:01:08,640
and so on and so forth

30
00:01:08,640 --> 00:01:12,720
and um yeah those guys are also doing

31
00:01:12,720 --> 00:01:15,200
some changes in their environment

32
00:01:15,200 --> 00:01:17,920
and as a security team i'm not directly

33
00:01:17,920 --> 00:01:21,119
into control of this so i can only see

34
00:01:21,119 --> 00:01:23,680
the results of those changes

35
00:01:23,680 --> 00:01:25,600
or by talking to the people

36
00:01:25,600 --> 00:01:27,920
and get the informations

37
00:01:27,920 --> 00:01:29,119
so

38
00:01:29,119 --> 00:01:31,759
it would be great for me as a security

39
00:01:31,759 --> 00:01:34,479
practitioner practitioner to get

40
00:01:34,479 --> 00:01:36,479
these changes directly on a regular

41
00:01:36,479 --> 00:01:38,560
basis so i can

42
00:01:38,560 --> 00:01:41,920
state for instance assumptions about my

43
00:01:41,920 --> 00:01:44,399
environment and say hey i need for

44
00:01:44,399 --> 00:01:46,399
instance this very important firewall

45
00:01:46,399 --> 00:01:49,680
rule and say um that my environment my

46
00:01:49,680 --> 00:01:52,720
environment must be like this and or for

47
00:01:52,720 --> 00:01:54,960
the security operations center if you

48
00:01:54,960 --> 00:01:57,920
have a use case for instance and you

49
00:01:57,920 --> 00:02:00,079
want to uh check if this use case is

50
00:02:00,079 --> 00:02:01,840
still working all the time because

51
00:02:01,840 --> 00:02:03,280
you're getting the right logs and

52
00:02:03,280 --> 00:02:05,360
there's nothing missing

53
00:02:05,360 --> 00:02:06,719
so um

54
00:02:06,719 --> 00:02:08,720
would be great uh to have something to

55
00:02:08,720 --> 00:02:11,280
measure this and to verify this so that

56
00:02:11,280 --> 00:02:13,440
we can build security on confidence from

57
00:02:13,440 --> 00:02:16,959
our security perspective

58
00:02:16,959 --> 00:02:19,599
so um for this let's talk about mitral

59
00:02:19,599 --> 00:02:22,319
attack first um so what is mitral attack

60
00:02:22,319 --> 00:02:25,599
in general mitral attack is a framework

61
00:02:25,599 --> 00:02:28,319
with generic attacks in it those generic

62
00:02:28,319 --> 00:02:30,879
attacks are categorized in different

63
00:02:30,879 --> 00:02:33,200
tactics the so-called tactics here this

64
00:02:33,200 --> 00:02:35,280
is the upper line here

65
00:02:35,280 --> 00:02:36,879
where i can say i have something like

66
00:02:36,879 --> 00:02:39,120
initial access so how to do i get into

67
00:02:39,120 --> 00:02:41,760
the company execution so i get my code

68
00:02:41,760 --> 00:02:44,480
executed and so forth so on and so forth

69
00:02:44,480 --> 00:02:46,560
and then we have the generalized uh

70
00:02:46,560 --> 00:02:47,680
attacks

71
00:02:47,680 --> 00:02:48,800
that were

72
00:02:48,800 --> 00:02:51,440
on a described on a very generic way

73
00:02:51,440 --> 00:02:52,319
here

74
00:02:52,319 --> 00:02:54,480
and so what can you do with it because

75
00:02:54,480 --> 00:02:55,840
it looks

76
00:02:55,840 --> 00:02:58,560
at the first glance like a boring table

77
00:02:58,560 --> 00:03:02,319
okay it is sometimes but um

78
00:03:02,319 --> 00:03:05,280
you can do with mata uh attack modeling

79
00:03:05,280 --> 00:03:08,400
so much was all also doing this for you

80
00:03:08,400 --> 00:03:10,720
so uh it is modeling some attacker

81
00:03:10,720 --> 00:03:13,280
groups or attackers in general

82
00:03:13,280 --> 00:03:16,000
and um let's see how it works so for

83
00:03:16,000 --> 00:03:17,840
instance it used for the initial access

84
00:03:17,840 --> 00:03:20,720
for a company i use the phishing tactics

85
00:03:20,720 --> 00:03:23,760
techniques and then i get execution via

86
00:03:23,760 --> 00:03:27,200
the native api for instance then

87
00:03:27,200 --> 00:03:29,360
for persistence purposes because i get a

88
00:03:29,360 --> 00:03:31,120
foot into the door and i want to keep it

89
00:03:31,120 --> 00:03:33,360
there i create an account for me so i

90
00:03:33,360 --> 00:03:35,440
can come back because the system is

91
00:03:35,440 --> 00:03:38,400
reachable about over the internet

92
00:03:38,400 --> 00:03:39,440
then i

93
00:03:39,440 --> 00:03:43,200
can probably set up um

94
00:03:43,519 --> 00:03:46,000
do a privilege escalation to get system

95
00:03:46,000 --> 00:03:48,879
rights on the system uh by doing um a

96
00:03:48,879 --> 00:03:51,200
dll injection and then i can get my

97
00:03:51,200 --> 00:03:53,680
credentials uh during the credential

98
00:03:53,680 --> 00:03:55,200
dumping phase

99
00:03:55,200 --> 00:03:57,040
so like this you can

100
00:03:57,040 --> 00:04:01,920
general model your your infrastructure

101
00:04:01,920 --> 00:04:03,120
but

102
00:04:03,120 --> 00:04:04,480
oftentimes

103
00:04:04,480 --> 00:04:07,120
in compliance driven companies i see

104
00:04:07,120 --> 00:04:07,920
that

105
00:04:07,920 --> 00:04:10,400
my metro is a bit misused because this

106
00:04:10,400 --> 00:04:12,000
is not a checklist

107
00:04:12,000 --> 00:04:15,280
because each and every technique here

108
00:04:15,280 --> 00:04:18,079
can be is only a generalized attack

109
00:04:18,079 --> 00:04:20,959
description you have um

110
00:04:20,959 --> 00:04:22,800
multiple layers under under it for

111
00:04:22,800 --> 00:04:25,360
instance you can do the native api

112
00:04:25,360 --> 00:04:27,680
execution by using powershell or by

113
00:04:27,680 --> 00:04:29,440
using

114
00:04:29,440 --> 00:04:32,560
a c-sharp or something else that you can

115
00:04:32,560 --> 00:04:35,759
imagine so you have many many multiple

116
00:04:35,759 --> 00:04:38,000
multiple ways in general to to do your

117
00:04:38,000 --> 00:04:40,720
actual attack

118
00:04:41,199 --> 00:04:45,199
so um because we can also use mitral by

119
00:04:45,199 --> 00:04:47,919
uh adopting it on a on our company for

120
00:04:47,919 --> 00:04:49,199
instance i

121
00:04:49,199 --> 00:04:51,840
made an abstract picture of that so we

122
00:04:51,840 --> 00:04:54,320
can um play through some scenarios for

123
00:04:54,320 --> 00:04:57,199
us and say hey come on i take the the

124
00:04:57,199 --> 00:04:58,560
tactics

125
00:04:58,560 --> 00:05:01,280
and uh derive techniques from that and

126
00:05:01,280 --> 00:05:04,880
to to to model um a scenario for me

127
00:05:04,880 --> 00:05:07,120
um yeah let's say an attacker is doing

128
00:05:07,120 --> 00:05:08,720
some reconnaissance

129
00:05:08,720 --> 00:05:11,199
previously then he is setting up an

130
00:05:11,199 --> 00:05:14,240
email and say hey i will do the initial

131
00:05:14,240 --> 00:05:17,759
access by uh doing a phishing attempt

132
00:05:17,759 --> 00:05:21,840
doing adding an attachment to have

133
00:05:21,840 --> 00:05:24,800
execution probabilities so that i for

134
00:05:24,800 --> 00:05:27,520
instance execute the command line and uh

135
00:05:27,520 --> 00:05:30,400
dump dropping my code on on the machine

136
00:05:30,400 --> 00:05:32,720
then on the machine itself uh it come

137
00:05:32,720 --> 00:05:36,400
out calls back via for instance https

138
00:05:36,400 --> 00:05:38,240
thanks to let's encrypt uh fully

139
00:05:38,240 --> 00:05:40,479
encrypted uh to our common control

140
00:05:40,479 --> 00:05:43,120
server and then gets uh the next attack

141
00:05:43,120 --> 00:05:44,240
steps

142
00:05:44,240 --> 00:05:47,120
okay now we're on the machine we can say

143
00:05:47,120 --> 00:05:49,520
hey come on uh we want to ke we want to

144
00:05:49,520 --> 00:05:53,039
stay there and doing some persistence um

145
00:05:53,039 --> 00:05:55,520
for instance like i said before we just

146
00:05:55,520 --> 00:05:56,960
use a um

147
00:05:56,960 --> 00:05:59,360
dll injection because we found a program

148
00:05:59,360 --> 00:06:01,360
or a service that is searching for a

149
00:06:01,360 --> 00:06:04,479
specific dll and we know to notice that

150
00:06:04,479 --> 00:06:06,960
okay so now we're system on a windows

151
00:06:06,960 --> 00:06:08,479
client for instance

152
00:06:08,479 --> 00:06:12,000
and um the next step is for us um

153
00:06:12,000 --> 00:06:14,160
uh for privilege escalation purposes

154
00:06:14,160 --> 00:06:16,400
after that the next step is uh do uh

155
00:06:16,400 --> 00:06:18,560
moving laterally so when we assist them

156
00:06:18,560 --> 00:06:21,440
we can simply dump

157
00:06:21,440 --> 00:06:24,240
elsa's if we do the right steps before

158
00:06:24,240 --> 00:06:25,440
and

159
00:06:25,440 --> 00:06:28,560
jump to the next box and here we found

160
00:06:28,560 --> 00:06:30,880
for instance some text files for the

161
00:06:30,880 --> 00:06:33,440
next machine and doing some collection

162
00:06:33,440 --> 00:06:34,240
and

163
00:06:34,240 --> 00:06:36,240
exfiltrate the information

164
00:06:36,240 --> 00:06:38,319
um to to a different server in the

165
00:06:38,319 --> 00:06:39,440
internet

166
00:06:39,440 --> 00:06:41,840
and so you can adopt all the

167
00:06:41,840 --> 00:06:44,960
tactics with derived techniques and play

168
00:06:44,960 --> 00:06:47,199
with micro attack in general to get to

169
00:06:47,199 --> 00:06:49,520
get a feeling and the

170
00:06:49,520 --> 00:06:52,000
overview of your attack landscape uh and

171
00:06:52,000 --> 00:06:54,639
play something through

172
00:06:54,639 --> 00:06:55,440
so

173
00:06:55,440 --> 00:06:58,800
um okay we saw now uh mitral attack and

174
00:06:58,800 --> 00:07:01,759
but how do we measure

175
00:07:01,759 --> 00:07:04,639
uh in the past we um

176
00:07:04,639 --> 00:07:08,000
we did uh security testing for instance

177
00:07:08,000 --> 00:07:10,000
like something like uh red teaming where

178
00:07:10,000 --> 00:07:10,720
we

179
00:07:10,720 --> 00:07:13,039
hired external red team

180
00:07:13,039 --> 00:07:15,280
and said hey come on guys hack my

181
00:07:15,280 --> 00:07:18,080
company and give me a report about that

182
00:07:18,080 --> 00:07:20,880
and tell me how do i um how i can

183
00:07:20,880 --> 00:07:22,240
improve that

184
00:07:22,240 --> 00:07:23,360
um

185
00:07:23,360 --> 00:07:26,000
and then um yeah this is good this is

186
00:07:26,000 --> 00:07:28,479
very important but it's most of the time

187
00:07:28,479 --> 00:07:31,280
is doing only annually so you have a

188
00:07:31,280 --> 00:07:34,400
snapshot of one time in the in the year

189
00:07:34,400 --> 00:07:36,960
about your current security state

190
00:07:36,960 --> 00:07:39,759
um and only one or two

191
00:07:39,759 --> 00:07:40,960
different

192
00:07:40,960 --> 00:07:44,000
ways into your company so the next uh

193
00:07:44,000 --> 00:07:46,960
candidate might be penetration testing

194
00:07:46,960 --> 00:07:48,319
which is a more

195
00:07:48,319 --> 00:07:50,639
focused approach where you can say i

196
00:07:50,639 --> 00:07:52,879
want to uh test this machine or that

197
00:07:52,879 --> 00:07:54,879
machine or the entire network this web

198
00:07:54,879 --> 00:07:58,720
application and so on it's also good but

199
00:07:58,720 --> 00:08:00,319
imagine you have five pen testers and

200
00:08:00,319 --> 00:08:03,759
800 machines that doesn't scale

201
00:08:03,759 --> 00:08:04,560
so

202
00:08:04,560 --> 00:08:05,360
then

203
00:08:05,360 --> 00:08:07,120
also a candidate is vulnerability

204
00:08:07,120 --> 00:08:09,199
scanning which is also great because

205
00:08:09,199 --> 00:08:10,960
it's a broader approach

206
00:08:10,960 --> 00:08:12,639
but vulnerability scanning is more

207
00:08:12,639 --> 00:08:16,080
focused on the cves and in general so

208
00:08:16,080 --> 00:08:17,199
you can just

209
00:08:17,199 --> 00:08:19,599
patch the system and you're fine you can

210
00:08:19,599 --> 00:08:23,360
measure it with that which is good so um

211
00:08:23,360 --> 00:08:26,080
it's might be a part in the general

212
00:08:26,080 --> 00:08:28,240
security program here

213
00:08:28,240 --> 00:08:30,400
but you can't just

214
00:08:30,400 --> 00:08:32,799
test with it some architecture problems

215
00:08:32,799 --> 00:08:34,080
for instance

216
00:08:34,080 --> 00:08:35,839
then there are different

217
00:08:35,839 --> 00:08:38,479
offenses or defensive tools

218
00:08:38,479 --> 00:08:40,640
that are mostly working like black boxes

219
00:08:40,640 --> 00:08:43,200
where you automate your test behavior

220
00:08:43,200 --> 00:08:45,360
but um what i

221
00:08:45,360 --> 00:08:47,600
would um

222
00:08:47,600 --> 00:08:49,760
say to use or what what might be

223
00:08:49,760 --> 00:08:51,760
interesting to use is that we as

224
00:08:51,760 --> 00:08:53,920
security practitioner practitioners

225
00:08:53,920 --> 00:08:55,200
model our

226
00:08:55,200 --> 00:08:57,440
expectations about the environment and

227
00:08:57,440 --> 00:09:00,240
say hey guys we want for instance this

228
00:09:00,240 --> 00:09:02,800
firewall must be there or uh the web

229
00:09:02,800 --> 00:09:04,480
application must be authenticated like

230
00:09:04,480 --> 00:09:05,279
this

231
00:09:05,279 --> 00:09:08,240
and uh or this theme rule must be

232
00:09:08,240 --> 00:09:10,720
triggered under this conditions

233
00:09:10,720 --> 00:09:14,000
so it's more like the mindset of the um

234
00:09:14,000 --> 00:09:16,320
of the software development life cycle

235
00:09:16,320 --> 00:09:19,279
where when you use the test driven

236
00:09:19,279 --> 00:09:21,519
approach and say hey

237
00:09:21,519 --> 00:09:23,760
i'd write a test for it and check if

238
00:09:23,760 --> 00:09:26,480
it's if my condition that i want to have

239
00:09:26,480 --> 00:09:28,959
is there

240
00:09:28,959 --> 00:09:31,360
so how can we measure that with mitra so

241
00:09:31,360 --> 00:09:35,120
we simply use mitra and put it into for

242
00:09:35,120 --> 00:09:38,560
instance atomic red team

243
00:09:38,560 --> 00:09:41,680
this is one one way to do this

244
00:09:41,680 --> 00:09:44,320
so let's dive into it

245
00:09:44,320 --> 00:09:46,320
so what is atomic threat team atomic red

246
00:09:46,320 --> 00:09:48,959
team is actually a major use case that

247
00:09:48,959 --> 00:09:51,440
you can model within a

248
00:09:51,440 --> 00:09:55,600
simple yaml file and run it uh like in a

249
00:09:55,600 --> 00:09:58,800
it's actually attack in general so

250
00:09:58,800 --> 00:10:00,880
you have different sections here in

251
00:10:00,880 --> 00:10:02,000
a

252
00:10:02,000 --> 00:10:04,959
atomic red team case uh the first one is

253
00:10:04,959 --> 00:10:07,200
the input arguments imagine this like

254
00:10:07,200 --> 00:10:10,160
variables for a function

255
00:10:10,160 --> 00:10:12,640
then you have to check the prerequisites

256
00:10:12,640 --> 00:10:14,640
then you run the attack itself and

257
00:10:14,640 --> 00:10:16,640
you're cleaning up the system to become

258
00:10:16,640 --> 00:10:20,000
the previous state again to be clean

259
00:10:20,000 --> 00:10:22,160
so okay

260
00:10:22,160 --> 00:10:23,519
let's

261
00:10:23,519 --> 00:10:25,360
show this on a

262
00:10:25,360 --> 00:10:27,440
small example

263
00:10:27,440 --> 00:10:29,920
let's say we have some source files here

264
00:10:29,920 --> 00:10:33,519
because we want to run a stager which is

265
00:10:33,519 --> 00:10:35,040
written in c-sharp

266
00:10:35,040 --> 00:10:36,959
and have an output file somewhere in

267
00:10:36,959 --> 00:10:38,079
temp

268
00:10:38,079 --> 00:10:40,240
then we have a prerequisite that we need

269
00:10:40,240 --> 00:10:42,880
a special compiler and also the access

270
00:10:42,880 --> 00:10:44,959
to this compiler

271
00:10:44,959 --> 00:10:47,200
so and then the next step is to compile

272
00:10:47,200 --> 00:10:49,760
the code and run the attack and after

273
00:10:49,760 --> 00:10:50,720
that

274
00:10:50,720 --> 00:10:53,040
remove all the files that we generated

275
00:10:53,040 --> 00:10:54,399
like this

276
00:10:54,399 --> 00:10:55,680
okay

277
00:10:55,680 --> 00:10:59,279
this is a atomic test which is great

278
00:10:59,279 --> 00:11:01,680
but for measuring it's not enough

279
00:11:01,680 --> 00:11:02,959
because

280
00:11:02,959 --> 00:11:05,760
we need criterias without criterias we

281
00:11:05,760 --> 00:11:07,760
can't measure anything and we can also

282
00:11:07,760 --> 00:11:10,079
validate anything so we need at least

283
00:11:10,079 --> 00:11:13,279
success or failure criterias to say um

284
00:11:13,279 --> 00:11:15,680
this is a successful test or the it's a

285
00:11:15,680 --> 00:11:16,959
failed test

286
00:11:16,959 --> 00:11:19,519
so when the atom when the attack goes

287
00:11:19,519 --> 00:11:22,880
through uh the test is successful itself

288
00:11:22,880 --> 00:11:24,800
but it's a failure for us because the

289
00:11:24,800 --> 00:11:26,399
attack is working

290
00:11:26,399 --> 00:11:27,519
so

291
00:11:27,519 --> 00:11:30,000
let's look at the example here again

292
00:11:30,000 --> 00:11:34,399
we have at least three different um

293
00:11:34,399 --> 00:11:35,920
criterias here

294
00:11:35,920 --> 00:11:39,839
so we need to uh get

295
00:11:39,839 --> 00:11:41,279
the the

296
00:11:41,279 --> 00:11:43,760
compiler must be existing and we need

297
00:11:43,760 --> 00:11:46,160
access to this compiler because i can't

298
00:11:46,160 --> 00:11:48,480
block it by for instance applocker and

299
00:11:48,480 --> 00:11:51,440
then attacker is not able to use it

300
00:11:51,440 --> 00:11:54,639
potentially and then i want the stager

301
00:11:54,639 --> 00:11:57,040
to do what the stager is doing

302
00:11:57,040 --> 00:11:59,040
connect to the command and control

303
00:11:59,040 --> 00:12:01,200
server and

304
00:12:01,200 --> 00:12:02,560
load the next

305
00:12:02,560 --> 00:12:03,519
stage

306
00:12:03,519 --> 00:12:06,160
and then we have a successful attack

307
00:12:06,160 --> 00:12:07,600
in general

308
00:12:07,600 --> 00:12:08,480
so

309
00:12:08,480 --> 00:12:12,079
this is also nice um let's zoom

310
00:12:12,079 --> 00:12:13,839
zoom out a bit more

311
00:12:13,839 --> 00:12:17,120
uh because yeah atomic tests are good

312
00:12:17,120 --> 00:12:20,639
and great um to have a test scenario but

313
00:12:20,639 --> 00:12:23,519
it's very very limited on one point so

314
00:12:23,519 --> 00:12:27,680
if you want to run um a chain of attacks

315
00:12:27,680 --> 00:12:30,000
with a bigger scenario like we showed

316
00:12:30,000 --> 00:12:32,959
before that you can definitely model

317
00:12:32,959 --> 00:12:35,760
um you need chains and each and every

318
00:12:35,760 --> 00:12:36,880
chain has

319
00:12:36,880 --> 00:12:39,200
the success criteria and a validation

320
00:12:39,200 --> 00:12:41,600
step so when the chain fails somewhere

321
00:12:41,600 --> 00:12:43,839
you know why

322
00:12:43,839 --> 00:12:46,800
uh another thing is that some mitral

323
00:12:46,800 --> 00:12:48,959
attacks are not really possible to

324
00:12:48,959 --> 00:12:51,519
uh to get modeled like this so imagine

325
00:12:51,519 --> 00:12:53,040
you modeling

326
00:12:53,040 --> 00:12:55,680
create a count like an attack it might

327
00:12:55,680 --> 00:12:56,399
be

328
00:12:56,399 --> 00:12:58,720
interesting on different systems

329
00:12:58,720 --> 00:13:01,440
but it's pretty limited so you can model

330
00:13:01,440 --> 00:13:04,240
it like for a zoom use case to test it

331
00:13:04,240 --> 00:13:06,240
that i create an account uh doing

332
00:13:06,240 --> 00:13:07,680
something in between and delete their

333
00:13:07,680 --> 00:13:10,399
card again otherwise i would just mimic

334
00:13:10,399 --> 00:13:12,320
administrative behavior which is not

335
00:13:12,320 --> 00:13:15,040
intentional then

336
00:13:15,040 --> 00:13:18,639
so how can we use this methodology in

337
00:13:18,639 --> 00:13:21,680
general um you must choose your must

338
00:13:21,680 --> 00:13:24,320
conditions so you have to be focused on

339
00:13:24,320 --> 00:13:26,480
that you gather them and then you

340
00:13:26,480 --> 00:13:29,839
prioritize them so the most important

341
00:13:29,839 --> 00:13:33,040
you will implement other because we have

342
00:13:33,040 --> 00:13:35,519
all everyone has only eight hours a day

343
00:13:35,519 --> 00:13:37,600
so

344
00:13:37,600 --> 00:13:39,760
we have to model it like this and focus

345
00:13:39,760 --> 00:13:41,839
and to start with a bunch of

346
00:13:41,839 --> 00:13:44,480
of the of those cases for instance then

347
00:13:44,480 --> 00:13:46,880
we create the cases uh so write our

348
00:13:46,880 --> 00:13:49,120
expectations to our environment and say

349
00:13:49,120 --> 00:13:51,920
hey it must be like this

350
00:13:51,920 --> 00:13:54,560
then we run the test we validate the

351
00:13:54,560 --> 00:13:55,519
test

352
00:13:55,519 --> 00:13:57,680
and then we improve our environment and

353
00:13:57,680 --> 00:13:59,440
then we can go on and on and on and

354
00:13:59,440 --> 00:14:01,760
create even more of those tests and then

355
00:14:01,760 --> 00:14:03,519
we can measure in the end our

356
00:14:03,519 --> 00:14:06,480
environment like this

357
00:14:06,480 --> 00:14:09,760
so how to express this

358
00:14:09,760 --> 00:14:12,560
in in numbers for instance

359
00:14:12,560 --> 00:14:15,199
we can use it with mitra with metrics

360
00:14:15,199 --> 00:14:16,959
and say we have a

361
00:14:16,959 --> 00:14:18,320
technique here

362
00:14:18,320 --> 00:14:19,680
we have model

363
00:14:19,680 --> 00:14:20,800
in general

364
00:14:20,800 --> 00:14:22,320
five

365
00:14:22,320 --> 00:14:23,680
tests like this

366
00:14:23,680 --> 00:14:26,160
we are mitigating four of them and

367
00:14:26,160 --> 00:14:28,639
alerting only two of them the goal

368
00:14:28,639 --> 00:14:31,600
should be to to mitigate and alert every

369
00:14:31,600 --> 00:14:34,000
five of them but sometimes it's simply

370
00:14:34,000 --> 00:14:35,760
not possible because you have

371
00:14:35,760 --> 00:14:37,199
way too much um

372
00:14:37,199 --> 00:14:39,440
way too much way

373
00:14:39,440 --> 00:14:42,240
way too much false positives um

374
00:14:42,240 --> 00:14:45,600
and another a very um important aspect

375
00:14:45,600 --> 00:14:47,600
is that you focus on your uh

376
00:14:47,600 --> 00:14:49,920
environments so we're for instance the

377
00:14:49,920 --> 00:14:51,600
windows environment then we have the

378
00:14:51,600 --> 00:14:53,600
clients for it and we want to model

379
00:14:53,600 --> 00:14:56,160
those tests there and see if they are

380
00:14:56,160 --> 00:14:59,600
improving or changing and

381
00:14:59,600 --> 00:15:02,399
how the current security posture is over

382
00:15:02,399 --> 00:15:03,839
there

383
00:15:03,839 --> 00:15:05,920
so then we also can measure this over

384
00:15:05,920 --> 00:15:07,120
time

385
00:15:07,120 --> 00:15:08,240
making

386
00:15:08,240 --> 00:15:11,040
a regular iteration about this so the

387
00:15:11,040 --> 00:15:12,959
time intervals is up to you so you can

388
00:15:12,959 --> 00:15:15,519
run it daily you can weekly monthly but

389
00:15:15,519 --> 00:15:17,760
not dearly

390
00:15:17,760 --> 00:15:19,600
and you have different

391
00:15:19,600 --> 00:15:21,519
categories here

392
00:15:21,519 --> 00:15:22,959
the red ones are the attackers

393
00:15:22,959 --> 00:15:25,199
successful so i have to do something

394
00:15:25,199 --> 00:15:27,600
then the attack is mitigated i have

395
00:15:27,600 --> 00:15:30,079
counter measures for this in place

396
00:15:30,079 --> 00:15:32,720
like hardening stuff here

397
00:15:32,720 --> 00:15:35,680
then we have monitoring so we at least

398
00:15:35,680 --> 00:15:38,160
getting the logs and it can

399
00:15:38,160 --> 00:15:39,440
read the locks

400
00:15:39,440 --> 00:15:41,519
after the successful attack

401
00:15:41,519 --> 00:15:43,680
uh but this is a prerequisite for the

402
00:15:43,680 --> 00:15:46,720
get alerted thing so um that we have a

403
00:15:46,720 --> 00:15:49,199
vm alert for instance and say hey now we

404
00:15:49,199 --> 00:15:50,880
are also getting uh

405
00:15:50,880 --> 00:15:52,880
a notification when this happens even

406
00:15:52,880 --> 00:15:56,320
when when it's mitigated

407
00:15:56,399 --> 00:15:59,199
so we can also go a bit deeper into this

408
00:15:59,199 --> 00:16:01,680
that we can um

409
00:16:01,680 --> 00:16:04,240
write down some cases

410
00:16:04,240 --> 00:16:07,440
uh pretty briefly so um

411
00:16:07,440 --> 00:16:09,920
let's uh take for instance the elvis as

412
00:16:09,920 --> 00:16:11,519
us dumping via

413
00:16:11,519 --> 00:16:13,040
run dll

414
00:16:13,040 --> 00:16:14,639
here the attack is successful we

415
00:16:14,639 --> 00:16:16,880
categorized it in mitra and we defined

416
00:16:16,880 --> 00:16:20,079
counter measures we have a risk scoring

417
00:16:20,079 --> 00:16:22,160
within it so how important is it how

418
00:16:22,160 --> 00:16:24,639
fast and do i need to act here

419
00:16:24,639 --> 00:16:27,680
and uh we have the scope for me a system

420
00:16:27,680 --> 00:16:29,680
here is the whole system like the

421
00:16:29,680 --> 00:16:32,399
environment of the company and local is

422
00:16:32,399 --> 00:16:34,880
more the the local machine it's only

423
00:16:34,880 --> 00:16:37,279
affected there and you have some

424
00:16:37,279 --> 00:16:40,399
guide that is responsible to meeting it

425
00:16:40,399 --> 00:16:43,279
or to do the stuff behind the successful

426
00:16:43,279 --> 00:16:45,519
task

427
00:16:45,759 --> 00:16:47,360
okay so

428
00:16:47,360 --> 00:16:49,199
we are coming finally to the end of my

429
00:16:49,199 --> 00:16:52,560
talk so what are the advantages of this

430
00:16:52,560 --> 00:16:55,360
strategy so we have a reproducible

431
00:16:55,360 --> 00:16:57,360
methodology to measure our security

432
00:16:57,360 --> 00:16:59,600
posture in general

433
00:16:59,600 --> 00:17:00,720
so

434
00:17:00,720 --> 00:17:03,600
also we can recognize changes there

435
00:17:03,600 --> 00:17:06,480
so if one of the divisions is maybe not

436
00:17:06,480 --> 00:17:09,039
intentional at all and changes some

437
00:17:09,039 --> 00:17:11,760
security um

438
00:17:11,760 --> 00:17:12,959
settings

439
00:17:12,959 --> 00:17:15,119
then um yeah we want to recognize this

440
00:17:15,119 --> 00:17:19,280
and we want uh to get notified here and

441
00:17:19,280 --> 00:17:22,160
we also um in general um

442
00:17:22,160 --> 00:17:24,640
uh getting the monitoring gaps because

443
00:17:24,640 --> 00:17:26,880
we ca with this approach we can also

444
00:17:26,880 --> 00:17:29,520
test our theme use cases on a regular

445
00:17:29,520 --> 00:17:32,799
basis and we have not only isolated the

446
00:17:32,799 --> 00:17:36,960
text and we can um yeah model more uh

447
00:17:36,960 --> 00:17:39,039
sophisticated scenarios for us or to

448
00:17:39,039 --> 00:17:40,240
test those

449
00:17:40,240 --> 00:17:42,080
and the most important thing things are

450
00:17:42,080 --> 00:17:43,840
still then you become your security

451
00:17:43,840 --> 00:17:46,799
posture gets verifiable

452
00:17:46,799 --> 00:17:48,799
so thanks for your attention now i'm

453
00:17:48,799 --> 00:17:50,510
open for questions

454
00:17:50,510 --> 00:18:00,129
[Applause]

455
00:18:04,080 --> 00:18:06,399
okay

456
00:18:07,760 --> 00:18:08,960
hello

457
00:18:08,960 --> 00:18:11,840
hello thank you for a nice talk uh one

458
00:18:11,840 --> 00:18:13,280
question about

459
00:18:13,280 --> 00:18:15,120
in case of you using

460
00:18:15,120 --> 00:18:18,640
the atomic red team framework to

461
00:18:18,640 --> 00:18:20,559
measure detection in the area of er

462
00:18:20,559 --> 00:18:22,160
products

463
00:18:22,160 --> 00:18:22,960
where

464
00:18:22,960 --> 00:18:25,039
set you the line or split the line in

465
00:18:25,039 --> 00:18:27,600
case of i would say in case if you dump

466
00:18:27,600 --> 00:18:30,400
credentials from the elsa's process

467
00:18:30,400 --> 00:18:34,080
you can execute your atomic

468
00:18:34,320 --> 00:18:35,440
i would say

469
00:18:35,440 --> 00:18:36,880
artifact

470
00:18:36,880 --> 00:18:39,840
and is more or less the idle case but

471
00:18:39,840 --> 00:18:41,600
compared to when i use the same

472
00:18:41,600 --> 00:18:44,400
technique with from a framework like

473
00:18:44,400 --> 00:18:46,960
cobble strike or brute rachel where can

474
00:18:46,960 --> 00:18:49,360
i set the line that i say okay yeah it's

475
00:18:49,360 --> 00:18:52,320
okay we see this but compared when i do

476
00:18:52,320 --> 00:18:54,960
the same technique based on in-memory

477
00:18:54,960 --> 00:18:57,440
encryption other things i do not longer

478
00:18:57,440 --> 00:19:00,240
see this technique where can i say okay

479
00:19:00,240 --> 00:19:04,880
it makes sense it makes sense to do it

480
00:19:04,880 --> 00:19:08,960
in this way or to say

481
00:19:08,960 --> 00:19:11,840
we we see it at this point but not uh

482
00:19:11,840 --> 00:19:15,120
longer after we use cobalt swag or

483
00:19:15,120 --> 00:19:17,760
other tools

484
00:19:17,760 --> 00:19:18,640
yeah

485
00:19:18,640 --> 00:19:20,559
in general you have to prioritize first

486
00:19:20,559 --> 00:19:22,720
that you can say um these are the texts

487
00:19:22,720 --> 00:19:24,400
that are um

488
00:19:24,400 --> 00:19:27,200
more probably for my environment um you

489
00:19:27,200 --> 00:19:30,000
can use the the tactics from um a cobalt

490
00:19:30,000 --> 00:19:31,840
strike and you um implement it first

491
00:19:31,840 --> 00:19:34,640
when you say this might be an attack

492
00:19:34,640 --> 00:19:36,000
that is

493
00:19:36,000 --> 00:19:38,080
that takes place in my environment and

494
00:19:38,080 --> 00:19:40,799
then you have to model this um yeah when

495
00:19:40,799 --> 00:19:43,039
you have a deeper memory stuff uh that

496
00:19:43,039 --> 00:19:45,760
you have to model okay you need to more

497
00:19:45,760 --> 00:19:47,600
uh a bit more work to

498
00:19:47,600 --> 00:19:49,120
do to do

499
00:19:49,120 --> 00:19:52,320
yeah or to to work on this case but then

500
00:19:52,320 --> 00:19:55,120
you you use the framework to get to to

501
00:19:55,120 --> 00:19:56,720
prove the visibility to prove the

502
00:19:56,720 --> 00:19:58,160
detection so

503
00:19:58,160 --> 00:20:00,799
um when i execute the artifact from

504
00:20:00,799 --> 00:20:02,720
atomic rectum i will

505
00:20:02,720 --> 00:20:06,080
maybe uh the the products we see this

506
00:20:06,080 --> 00:20:07,679
but

507
00:20:07,679 --> 00:20:09,840
especially in case of elsa's there are

508
00:20:09,840 --> 00:20:11,360
now of

509
00:20:11,360 --> 00:20:13,840
many ways to dump it in a different way

510
00:20:13,840 --> 00:20:16,000
so for example you open

511
00:20:16,000 --> 00:20:18,960
or you search for

512
00:20:18,960 --> 00:20:21,440
and an open handle which is already open

513
00:20:21,440 --> 00:20:23,440
in case of service those process and

514
00:20:23,440 --> 00:20:25,440
then i do not longer see it but wow what

515
00:20:25,440 --> 00:20:27,039
can i say then um

516
00:20:27,039 --> 00:20:30,000
is it enough or should i say okay

517
00:20:30,000 --> 00:20:32,080
i know there always be a way to bypass

518
00:20:32,080 --> 00:20:35,360
or do it but um from my own experience

519
00:20:35,360 --> 00:20:37,200
it's always hard to find

520
00:20:37,200 --> 00:20:38,320
um

521
00:20:38,320 --> 00:20:41,280
the line so okay until this we see

522
00:20:41,280 --> 00:20:43,360
everything but then and it's made makes

523
00:20:43,360 --> 00:20:45,039
no longer sense or

524
00:20:45,039 --> 00:20:46,000
yeah

525
00:20:46,000 --> 00:20:49,520
yeah it depends on yeah the the one

526
00:20:49,520 --> 00:20:51,840
thing is that you have what you already

527
00:20:51,840 --> 00:20:54,080
stated is that you have uh different

528
00:20:54,080 --> 00:20:56,240
perspective and angles that you must

529
00:20:56,240 --> 00:20:58,960
implement that that you want to see

530
00:20:58,960 --> 00:21:01,039
and then you can trigger those and then

531
00:21:01,039 --> 00:21:02,960
you can detect this but when you also

532
00:21:02,960 --> 00:21:05,440
detect this then you have some kind of

533
00:21:05,440 --> 00:21:07,200
zoom use case let's say

534
00:21:07,200 --> 00:21:10,000
and um you build it and then with

535
00:21:10,000 --> 00:21:11,919
atomic red team for instance you can

536
00:21:11,919 --> 00:21:14,960
trigger this uh use case and that's

537
00:21:14,960 --> 00:21:18,400
more than in this scenario more uh or

538
00:21:18,400 --> 00:21:21,200
the better idea actually okay

539
00:21:21,200 --> 00:21:22,799
because you don't have

540
00:21:22,799 --> 00:21:24,960
all the time there in the world so

541
00:21:24,960 --> 00:21:26,000
okay

542
00:21:26,000 --> 00:21:29,159
thank you

543
00:21:30,799 --> 00:21:32,960
hi question regarding the

544
00:21:32,960 --> 00:21:35,200
test case input files basically

545
00:21:35,200 --> 00:21:36,799
so you define it and then you just run

546
00:21:36,799 --> 00:21:39,280
it has anyone already provided a large

547
00:21:39,280 --> 00:21:41,360
library of predefined desk cases that

548
00:21:41,360 --> 00:21:43,280
you can just use yeah

549
00:21:43,280 --> 00:21:45,679
atomic red team is a

550
00:21:45,679 --> 00:21:47,919
repository on github where you exactly

551
00:21:47,919 --> 00:21:48,960
have this

552
00:21:48,960 --> 00:21:51,520
many predefined use cases that you can

553
00:21:51,520 --> 00:21:54,240
use and build up

554
00:21:54,720 --> 00:21:57,280
how many use cases do you have

555
00:21:57,280 --> 00:21:59,360
a rough question i did

556
00:21:59,360 --> 00:22:01,840
several hundreds i would i could say

557
00:22:01,840 --> 00:22:03,280
question two the example you should was

558
00:22:03,280 --> 00:22:04,880
about windows right summer deck on

559
00:22:04,880 --> 00:22:07,520
windows so this is executing on one host

560
00:22:07,520 --> 00:22:09,600
machine how well does this work on a

561
00:22:09,600 --> 00:22:10,640
network

562
00:22:10,640 --> 00:22:12,720
centric perspective something that spans

563
00:22:12,720 --> 00:22:14,480
multiple machines

564
00:22:14,480 --> 00:22:17,200
um that you just set up a test machine

565
00:22:17,200 --> 00:22:19,600
for that and then you um penetrate the

566
00:22:19,600 --> 00:22:22,799
the uh your environment like the network

567
00:22:22,799 --> 00:22:25,760
i would set it up like this

568
00:22:25,760 --> 00:22:27,600
okay thanks

569
00:22:27,600 --> 00:22:30,158
you're welcome

570
00:22:35,600 --> 00:22:39,639
any other questions for marcos

571
00:22:40,960 --> 00:22:42,640
all right then please give marcos a hand

572
00:22:42,640 --> 00:22:46,200
thank you very much

