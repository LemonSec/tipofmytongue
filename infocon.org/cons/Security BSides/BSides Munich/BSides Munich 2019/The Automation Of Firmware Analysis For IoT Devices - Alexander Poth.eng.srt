1
00:00:02,540 --> 00:00:08,059
okay okay good afternoon everybody

2
00:00:05,930 --> 00:00:11,120
my name is Alex I'm a poet and today I

3
00:00:08,058 --> 00:00:14,149
like to talk about the automation of FEM

4
00:00:11,120 --> 00:00:17,419
analysis for IOT Linux devices and the

5
00:00:14,150 --> 00:00:19,789
reason is timbre analyzers contains a

6
00:00:17,420 --> 00:00:24,410
lot of basic simple steps are mostly a

7
00:00:19,789 --> 00:00:27,080
lot of basic simple steps and we can try

8
00:00:24,410 --> 00:00:29,630
to autumn eyes that Rives and I wrote

9
00:00:27,080 --> 00:00:33,079
two simple Python scripts which I'll

10
00:00:29,630 --> 00:00:37,010
show you later which can automate this

11
00:00:33,079 --> 00:00:38,690
process but at first who am i i'm a

12
00:00:37,010 --> 00:00:39,678
junior pen tester at europe in

13
00:00:38,690 --> 00:00:42,229
cybersecurity

14
00:00:39,679 --> 00:00:44,809
i have a degree in industrial

15
00:00:42,229 --> 00:00:46,550
engineering which is very uncommon

16
00:00:44,809 --> 00:00:48,678
because i think most people in the

17
00:00:46,550 --> 00:00:52,459
InfoSec have studied something like

18
00:00:48,679 --> 00:00:55,159
computer science but i was always

19
00:00:52,460 --> 00:00:57,709
interested in capture the flags for

20
00:00:55,159 --> 00:01:01,339
example or computer science in general

21
00:00:57,709 --> 00:01:05,299
so i decided to get a job in and InfoSec

22
00:01:01,339 --> 00:01:07,070
and yeah i wrote my thesis about linux

23
00:01:05,299 --> 00:01:15,710
for my security which is also a part in

24
00:01:07,070 --> 00:01:17,419
my talk here so our film analyzes can be

25
00:01:15,710 --> 00:01:20,179
very very complex right but you have

26
00:01:17,420 --> 00:01:22,520
always some basic simple steps steps

27
00:01:20,180 --> 00:01:25,190
which you can do for example a check if

28
00:01:22,520 --> 00:01:28,490
the film is encrypted try to get the

29
00:01:25,190 --> 00:01:30,410
filesystem all of our binary and search

30
00:01:28,490 --> 00:01:35,839
for interesting files inside our binary

31
00:01:30,410 --> 00:01:37,880
and I did everything for Linux for Linux

32
00:01:35,840 --> 00:01:45,860
pyramids because many IOT devices are

33
00:01:37,880 --> 00:01:48,140
running on Linux and yes so we can

34
00:01:45,860 --> 00:01:50,960
divide the whole process of film

35
00:01:48,140 --> 00:01:53,240
analyzed into two steps first one is

36
00:01:50,960 --> 00:01:56,449
these static analyzers the second one to

37
00:01:53,240 --> 00:01:59,020
eat a mannequin arises and in the static

38
00:01:56,450 --> 00:02:01,400
analysis we have no execution of the

39
00:01:59,020 --> 00:02:04,250
thermal right we just look inside our

40
00:02:01,400 --> 00:02:08,209
image and try to search for any

41
00:02:04,250 --> 00:02:10,719
interesting files like any encryption

42
00:02:08,209 --> 00:02:13,370
algorithms weak encryption algorithms

43
00:02:10,719 --> 00:02:16,340
store credentials something like that

44
00:02:13,370 --> 00:02:19,910
and in the dynamic and

45
00:02:16,340 --> 00:02:22,569
Isis we are analyzing during operating

46
00:02:19,910 --> 00:02:27,799
time so we're trying to execute our

47
00:02:22,569 --> 00:02:34,250
firmer and look how is our firmer

48
00:02:27,800 --> 00:02:36,230
responding okay so at first I'd like to

49
00:02:34,250 --> 00:02:39,620
talk a little bit about these static

50
00:02:36,230 --> 00:02:43,250
analyzers and what we are trying to do

51
00:02:39,620 --> 00:02:44,959
here at first we'd like to check if this

52
00:02:43,250 --> 00:02:48,200
our firm that encrypted or is it not

53
00:02:44,959 --> 00:02:50,150
because if the firm is acquitted it will

54
00:02:48,200 --> 00:02:53,089
be very hard will be very hard to get

55
00:02:50,150 --> 00:02:55,489
any information out of it right so of

56
00:02:53,090 --> 00:02:57,829
course we can check and our the

57
00:02:55,489 --> 00:03:00,170
encryption algorithms we implement it or

58
00:02:57,829 --> 00:03:03,140
something like that but mostly we can't

59
00:03:00,170 --> 00:03:05,629
get any useful information others okay

60
00:03:03,140 --> 00:03:07,849
that if the film is not encrypted we can

61
00:03:05,629 --> 00:03:10,280
try to reverse the whole face vise of

62
00:03:07,849 --> 00:03:12,950
symbol of the binary and in our case so

63
00:03:10,280 --> 00:03:14,930
that's our Linux file system and if we

64
00:03:12,950 --> 00:03:18,369
did that we can search for any

65
00:03:14,930 --> 00:03:18,370
interesting files find vulnerabilities

66
00:03:30,760 --> 00:03:36,138
so I'd like to start with the check for

67
00:03:33,769 --> 00:03:38,150
encryption what we can say is when a

68
00:03:36,139 --> 00:03:40,900
binary is encrypted the entropy of the

69
00:03:38,150 --> 00:03:44,120
data is high and in our case we just say

70
00:03:40,900 --> 00:03:46,819
entropy equals to the randomness of data

71
00:03:44,120 --> 00:03:48,859
which is not 400 percent right but in

72
00:03:46,819 --> 00:03:51,679
our case we just say that and to

73
00:03:48,859 --> 00:03:56,030
demonstrate that I created two different

74
00:03:51,680 --> 00:03:58,639
strings the left one is a a b b b c CC

75
00:03:56,030 --> 00:04:01,609
and this string is ordered in some way

76
00:03:58,639 --> 00:04:04,489
white right so we can say this string

77
00:04:01,609 --> 00:04:09,709
has low entropy and on the right we have

78
00:04:04,489 --> 00:04:12,919
a string like CVAG CIA BAC this string

79
00:04:09,709 --> 00:04:15,579
looks like chaos okay so we can say in

80
00:04:12,919 --> 00:04:18,530
this example we have a high entropy I

81
00:04:15,579 --> 00:04:20,209
also created some to check the clients

82
00:04:18,529 --> 00:04:23,780
on the left you can see on original set

83
00:04:20,209 --> 00:04:25,849
back in the original set like the

84
00:04:23,780 --> 00:04:29,849
entropy is falling and rising poverty

85
00:04:25,849 --> 00:04:32,010
hold and data and on the right

86
00:04:29,850 --> 00:04:35,610
I encrypted the same jet pack and as you

87
00:04:32,010 --> 00:04:41,610
can see the entropy is continuously at

88
00:04:35,610 --> 00:04:43,560
the maximum which is one so to check if

89
00:04:41,610 --> 00:04:48,720
our binaries encrypted we can check the

90
00:04:43,560 --> 00:04:50,280
entropy with somewhere known to its so I

91
00:04:48,720 --> 00:04:52,350
picked up two tools which can easily be

92
00:04:50,280 --> 00:04:54,869
used for an entropy analyzers very easy

93
00:04:52,350 --> 00:04:57,270
the first one is dent which is a comment

94
00:04:54,870 --> 00:05:00,780
line to it I used that for my little

95
00:04:57,270 --> 00:05:03,000
scripts which I show you later so it

96
00:05:00,780 --> 00:05:07,679
comes with a few options in this very

97
00:05:03,000 --> 00:05:09,570
easy to use and on the other side what I

98
00:05:07,680 --> 00:05:12,210
can recommend a spin with pin the stop

99
00:05:09,570 --> 00:05:14,909
ion which is a web service you can just

100
00:05:12,210 --> 00:05:19,680
upload your film image and then based of

101
00:05:14,910 --> 00:05:21,780
Io creates view and great visualization

102
00:05:19,680 --> 00:05:23,610
of your finger here on the right you

103
00:05:21,780 --> 00:05:32,369
have an unencrypted image for example on

104
00:05:23,610 --> 00:05:35,010
the left this one is encrypted so after

105
00:05:32,370 --> 00:05:36,960
we collect our binary point Krypton and

106
00:05:35,010 --> 00:05:40,289
we found out it's not encrypted we can

107
00:05:36,960 --> 00:05:44,609
try to reverse any files all of our

108
00:05:40,290 --> 00:05:47,370
binary okay so it just for definition

109
00:05:44,610 --> 00:05:49,440
the revers engineering this the reversal

110
00:05:47,370 --> 00:05:52,020
of the development or production process

111
00:05:49,440 --> 00:05:55,080
from the product to the design or the

112
00:05:52,020 --> 00:05:57,510
source code but in our case we just try

113
00:05:55,080 --> 00:06:00,930
to reverse Linux directories and Linux

114
00:05:57,510 --> 00:06:02,789
file by its power of our message and

115
00:06:00,930 --> 00:06:06,240
like you can see here we have a film a

116
00:06:02,790 --> 00:06:09,810
bit and then a binary and we try to get

117
00:06:06,240 --> 00:06:13,650
our Linux directories such as eg C bar

118
00:06:09,810 --> 00:06:15,750
plot of cetera and maybe we can find any

119
00:06:13,650 --> 00:06:19,140
interesting files and set there for

120
00:06:15,750 --> 00:06:22,200
example and credential players PHP web

121
00:06:19,140 --> 00:06:25,620
files in general for our config files

122
00:06:22,200 --> 00:06:27,539
and of course you can do this process

123
00:06:25,620 --> 00:06:30,000
manually by yourself you can just look

124
00:06:27,540 --> 00:06:33,420
inside the binary and extract everything

125
00:06:30,000 --> 00:06:38,419
manually or you can use tools for that

126
00:06:33,420 --> 00:06:40,830
and one really cool - it is pin lock and

127
00:06:38,419 --> 00:06:42,200
pin what is a tool which is able to

128
00:06:40,830 --> 00:06:45,950
search for non signatures

129
00:06:42,200 --> 00:06:48,289
in satified and to demonstrate that I

130
00:06:45,950 --> 00:06:51,110
downloaded some random pictures here for

131
00:06:48,290 --> 00:06:55,790
example I can't picture PNG

132
00:06:51,110 --> 00:06:58,400
I also creates a zip file with some

133
00:06:55,790 --> 00:07:01,430
random content in it and what I did was

134
00:06:58,400 --> 00:07:05,030
i just wrote everything inside our cell

135
00:07:01,430 --> 00:07:09,980
mates custom right I just did that with

136
00:07:05,030 --> 00:07:12,590
cat and and if you know the one big 60

137
00:07:09,980 --> 00:07:15,470
on a hex dump on that you can see the

138
00:07:12,590 --> 00:07:18,049
whole heck state of our size my thyroid

139
00:07:15,470 --> 00:07:20,090
and what pin what does it it goes

140
00:07:18,050 --> 00:07:24,470
through the hex code and searches for

141
00:07:20,090 --> 00:07:26,659
add any well-known signatures for

142
00:07:24,470 --> 00:07:31,250
example of JPEG has its own signature

143
00:07:26,660 --> 00:07:52,490
signature at FDA at fbb Fuji has its own

144
00:07:31,250 --> 00:07:54,590
header its own signature and so does so

145
00:07:52,490 --> 00:07:56,750
pin work is not just able to search for

146
00:07:54,590 --> 00:08:01,849
these signatures it is also able to

147
00:07:56,750 --> 00:08:04,910
extract any data out of it so what I did

148
00:08:01,850 --> 00:08:08,630
here I am data bin bought on that pile B

149
00:08:04,910 --> 00:08:11,600
and which we created with the extraction

150
00:08:08,630 --> 00:08:13,520
parameters and as you can see Ben was

151
00:08:11,600 --> 00:08:17,330
able to find our giant like signature

152
00:08:13,520 --> 00:08:20,090
power PNG and I was at 5 and it could

153
00:08:17,330 --> 00:08:23,930
easy extract everything hours of our

154
00:08:20,090 --> 00:08:27,049
image we have our cap image our set by

155
00:08:23,930 --> 00:08:36,590
our PNG and it was able to extract the

156
00:08:27,050 --> 00:08:39,020
content of be supplied as well so in

157
00:08:36,590 --> 00:08:42,440
this example I did a pin walk on a real

158
00:08:39,020 --> 00:08:44,930
Road I film and I think this was such a

159
00:08:42,440 --> 00:08:46,970
feeling roll up in there and as you can

160
00:08:44,930 --> 00:08:51,319
see pin was able to find our you boot

161
00:08:46,970 --> 00:08:53,780
loader and it was able to found find our

162
00:08:51,320 --> 00:08:55,400
you image which is our Linux kernel and

163
00:08:53,780 --> 00:08:57,410
it found some

164
00:08:55,400 --> 00:08:58,760
as um a compressed data which is our

165
00:08:57,410 --> 00:09:03,110
Linux file system

166
00:08:58,760 --> 00:09:04,910
okay and it was also able to reverse our

167
00:09:03,110 --> 00:09:11,720
file system our little status and all of

168
00:09:04,910 --> 00:09:14,029
the image and of course to analyze and

169
00:09:11,720 --> 00:09:16,700
the you boot loader the the kernel image

170
00:09:14,029 --> 00:09:19,550
also very important but in my talk and

171
00:09:16,700 --> 00:09:28,430
in my tool I am just focusing on the

172
00:09:19,550 --> 00:09:29,930
root filesystem so we checked our binary

173
00:09:28,430 --> 00:09:33,829
file crimson we found out it's not

174
00:09:29,930 --> 00:09:36,439
encrypted we were able to get any data

175
00:09:33,830 --> 00:09:43,580
out of it our root filesystem and now we

176
00:09:36,440 --> 00:09:46,610
can search for any interesting files so

177
00:09:43,580 --> 00:09:47,960
one step of this analysis could be to

178
00:09:46,610 --> 00:09:50,570
search for stored keys inside the

179
00:09:47,960 --> 00:09:54,170
filesystem very often developments are

180
00:09:50,570 --> 00:09:57,620
storing for example private keys inside

181
00:09:54,170 --> 00:09:59,779
the image and if we can extract these

182
00:09:57,620 --> 00:10:03,529
keys we can authenticate to their

183
00:09:59,779 --> 00:10:07,000
services right for any cloud services or

184
00:10:03,529 --> 00:10:09,860
web servers whatever so it is also

185
00:10:07,000 --> 00:10:13,940
always very important to look for these

186
00:10:09,860 --> 00:10:16,490
fights um you can for example search for

187
00:10:13,940 --> 00:10:19,610
any known finance like house keys of

188
00:10:16,490 --> 00:10:21,620
right gives ideas a and so on but

189
00:10:19,610 --> 00:10:25,220
sometimes you don't have any find a

190
00:10:21,620 --> 00:10:35,390
means you have to do it with another way

191
00:10:25,220 --> 00:10:38,870
but I will explain the data so similar

192
00:10:35,390 --> 00:10:40,730
to the search for sort keys the search

193
00:10:38,870 --> 00:10:46,279
for install at web service is also very

194
00:10:40,730 --> 00:10:48,470
important I'm a lot of MIT devices have

195
00:10:46,279 --> 00:10:52,790
web service running and concerta binary

196
00:10:48,470 --> 00:10:55,480
and example I use so that a user can

197
00:10:52,790 --> 00:10:59,630
lock in to some configurations watch

198
00:10:55,480 --> 00:11:02,690
camera stream etc and if we can extract

199
00:10:59,630 --> 00:11:05,360
these web service you can look what

200
00:11:02,690 --> 00:11:07,250
version is it right and if you know the

201
00:11:05,360 --> 00:11:09,020
version we can look online okay are

202
00:11:07,250 --> 00:11:20,360
there any known vulnerability

203
00:11:09,020 --> 00:11:22,490
so maybe even exploits and then so it is

204
00:11:20,360 --> 00:11:25,880
also always very important to look for

205
00:11:22,490 --> 00:11:28,970
these web service and what is even more

206
00:11:25,880 --> 00:11:36,380
important is what is running on the web

207
00:11:28,970 --> 00:11:40,570
server right so we should always check

208
00:11:36,380 --> 00:11:43,430
other any web files inside our binary

209
00:11:40,570 --> 00:11:45,950
and because custom-made web applications

210
00:11:43,430 --> 00:11:48,859
are often a famous target target for I

211
00:11:45,950 --> 00:11:51,500
check us because and developers have

212
00:11:48,860 --> 00:11:55,640
often no clue about how to implement a

213
00:11:51,500 --> 00:11:57,620
real secure web application so we should

214
00:11:55,640 --> 00:12:01,220
always search for any web files like PHP

215
00:11:57,620 --> 00:12:05,240
ASP CDI and have a closer look inside

216
00:12:01,220 --> 00:12:09,560
these files maybe we can find any for

217
00:12:05,240 --> 00:12:12,950
example come out and command injections

218
00:12:09,560 --> 00:12:15,290
inside the source code we can do this

219
00:12:12,950 --> 00:12:18,380
process manually or we can just use any

220
00:12:15,290 --> 00:12:21,949
well-known tools for example soma cube

221
00:12:18,380 --> 00:12:25,390
whips what these are very well known

222
00:12:21,950 --> 00:12:40,910
very good tools to scan our source code

223
00:12:25,390 --> 00:12:44,150
automatically and similar to the search

224
00:12:40,910 --> 00:12:47,480
for web service we should also search

225
00:12:44,150 --> 00:12:51,590
for any other binaries and for example

226
00:12:47,480 --> 00:12:57,230
what you see see very often is busybox

227
00:12:51,590 --> 00:12:59,360
the busybox binary and spam these

228
00:12:57,230 --> 00:13:02,180
binaries are very often outdated for

229
00:12:59,360 --> 00:13:05,690
maybe even self-made and if we found

230
00:13:02,180 --> 00:13:08,569
some out tail and wineries we can always

231
00:13:05,690 --> 00:13:10,640
check like like the web service we can

232
00:13:08,570 --> 00:13:13,400
check for any vulnerabilities or

233
00:13:10,640 --> 00:13:16,730
exploits and if the binary is our

234
00:13:13,400 --> 00:13:20,959
segment we can always try to reverse

235
00:13:16,730 --> 00:13:22,190
them right and whatever radar Detra

236
00:13:20,960 --> 00:13:28,570
either

237
00:13:22,190 --> 00:13:31,610
[Music]

238
00:13:28,570 --> 00:13:33,320
so what could also be very important is

239
00:13:31,610 --> 00:13:37,130
to look for any configuration files in

240
00:13:33,320 --> 00:13:39,640
the binary why is that because insecure

241
00:13:37,130 --> 00:13:44,120
configurations are one of the most seen

242
00:13:39,640 --> 00:13:46,610
vulnerabilities and this could be miss

243
00:13:44,120 --> 00:13:50,090
configuration this configuration that

244
00:13:46,610 --> 00:13:51,740
permits directory listings I think some

245
00:13:50,090 --> 00:13:54,590
of you guys have already seen that you

246
00:13:51,740 --> 00:13:57,110
can try to access any web page and

247
00:13:54,590 --> 00:14:00,370
suddenly you have a complete complete

248
00:13:57,110 --> 00:14:04,270
directory listing directly listening

249
00:14:00,370 --> 00:14:07,040
this is a very common misconception and

250
00:14:04,270 --> 00:14:08,750
what is all the very often seen is the

251
00:14:07,040 --> 00:14:10,760
use of default credentials like admin

252
00:14:08,750 --> 00:14:12,680
admin so you should always check your

253
00:14:10,760 --> 00:14:15,830
camp configuration files inside your

254
00:14:12,680 --> 00:14:30,920
binary so examples can search for

255
00:14:15,830 --> 00:14:32,780
dot-com dot C CPC so I talked about

256
00:14:30,920 --> 00:14:35,030
searching for config files wet files

257
00:14:32,780 --> 00:14:36,400
Keys etc but very often the developers

258
00:14:35,030 --> 00:14:40,610
also using

259
00:14:36,400 --> 00:14:43,100
self-made files right and we don't know

260
00:14:40,610 --> 00:14:46,010
the name of the files so what we can try

261
00:14:43,100 --> 00:14:48,590
to do is we just look in every file in

262
00:14:46,010 --> 00:14:50,150
our binary and search for any strings

263
00:14:48,590 --> 00:14:56,150
for example admin root password

264
00:14:50,150 --> 00:14:57,949
privately secret and so on and maybe

265
00:14:56,150 --> 00:15:00,170
sometimes we find hardcore adventurous

266
00:14:57,950 --> 00:15:02,750
or for example

267
00:15:00,170 --> 00:15:09,130
pool Ian's implemented token create our

268
00:15:02,750 --> 00:15:09,130
whatever and they should always be done

269
00:15:11,020 --> 00:15:15,410
okay I have shown you some basic steps

270
00:15:13,580 --> 00:15:18,770
for which kind of files and strings we

271
00:15:15,410 --> 00:15:21,170
can defer and now we'll show a small

272
00:15:18,770 --> 00:15:23,920
safe may tool which can automate this

273
00:15:21,170 --> 00:15:23,920
simple process

274
00:15:29,670 --> 00:16:08,219
you see anything okay here we are very

275
00:16:05,529 --> 00:16:08,220
small isn't it

276
00:16:34,340 --> 00:16:42,690
okay so the tool is asking me for any

277
00:16:39,000 --> 00:16:45,680
image file so I already prepared some

278
00:16:42,690 --> 00:16:50,370
images here and set that for don't be

279
00:16:45,680 --> 00:16:53,219
have some is it here image which has

280
00:16:50,370 --> 00:17:00,330
caught this add up them I just take that

281
00:16:53,220 --> 00:17:01,950
image just type here it is add up in and

282
00:17:00,330 --> 00:17:06,060
now the whole process is starting it

283
00:17:01,950 --> 00:17:07,710
just does the entropy analyzes it

284
00:17:06,060 --> 00:17:09,889
creates some output I will show that

285
00:17:07,710 --> 00:17:09,890
later

286
00:17:11,030 --> 00:17:18,869
now it's reversing the whole binary and

287
00:17:14,990 --> 00:17:21,420
it said whoa I found on e TC and bin

288
00:17:18,869 --> 00:17:26,030
directory about directory and this is

289
00:17:21,420 --> 00:17:29,790
probably Linux file system than what and

290
00:17:26,030 --> 00:17:32,899
here search for any interesting fights

291
00:17:29,790 --> 00:17:36,659
it looks for Linux potentials SFI it's

292
00:17:32,900 --> 00:17:39,900
config files databases and so on and in

293
00:17:36,660 --> 00:17:43,040
this section it looks on every file and

294
00:17:39,900 --> 00:18:02,280
search for any interesting strings I

295
00:17:43,040 --> 00:18:04,590
think it finished ok wrote any output

296
00:18:02,280 --> 00:18:07,230
and set my output folder here just

297
00:18:04,590 --> 00:18:13,189
before that is added in which was what

298
00:18:07,230 --> 00:18:17,880
power image and here we have some

299
00:18:13,190 --> 00:18:21,030
outputs for entropy analyzer so it

300
00:18:17,880 --> 00:18:23,550
creates some output or entropy analyzers

301
00:18:21,030 --> 00:18:27,540
but what is even even more interesting

302
00:18:23,550 --> 00:18:30,930
is our reverse file system so it was

303
00:18:27,540 --> 00:18:33,800
able to reverse our whole Linux file

304
00:18:30,930 --> 00:18:33,800
system all of you

305
00:18:39,300 --> 00:18:51,220
and here it shows what interesting files

306
00:18:44,530 --> 00:18:54,700
could be aunt so it creates an HD HTML

307
00:18:51,220 --> 00:18:58,600
file was some hyperlinks here for

308
00:18:54,700 --> 00:19:00,460
example it found some config files other

309
00:18:58,600 --> 00:19:05,830
binaries you can access them through

310
00:19:00,460 --> 00:19:08,170
right here and there for example it

311
00:19:05,830 --> 00:19:11,340
found password string and some files you

312
00:19:08,170 --> 00:19:17,760
can just click here what it found okay

313
00:19:11,340 --> 00:19:20,709
phantoms standard credentials here so

314
00:19:17,760 --> 00:19:54,760
this tool is no rocket science right but

315
00:19:20,710 --> 00:19:56,500
it can save a lot of time so what I have

316
00:19:54,760 --> 00:19:58,990
shown you by some basic steps to search

317
00:19:56,500 --> 00:20:02,020
for interesting files in the binary it

318
00:19:58,990 --> 00:20:04,000
said and which was a part of the static

319
00:20:02,020 --> 00:20:07,629
analysis now I will talk a little bit of

320
00:20:04,000 --> 00:20:10,450
party dynamic analysis and we can do the

321
00:20:07,630 --> 00:20:13,870
dynamic analysis in two ways we can run

322
00:20:10,450 --> 00:20:15,670
our friend RAM on a device but very

323
00:20:13,870 --> 00:20:19,870
often we have no device so we have to

324
00:20:15,670 --> 00:20:21,550
remove light you film the right had to

325
00:20:19,870 --> 00:20:24,330
emulate the architecture where our

326
00:20:21,550 --> 00:20:26,399
firmware is running data source and

327
00:20:24,330 --> 00:20:29,110
[Music]

328
00:20:26,400 --> 00:20:33,370
there are some cool tools out there to

329
00:20:29,110 --> 00:20:35,260
emulate the images and the most known

330
00:20:33,370 --> 00:20:38,500
emulator for any architecture out

331
00:20:35,260 --> 00:20:40,780
there's probably QE QE Mo's very mighty

332
00:20:38,500 --> 00:20:43,360
very powerful it knows for almost every

333
00:20:40,780 --> 00:20:45,190
non architecture it comes with many

334
00:20:43,360 --> 00:20:49,090
pre-made conflicts for different ships

335
00:20:45,190 --> 00:20:49,840
etc but in my opinion it's very complex

336
00:20:49,090 --> 00:20:54,010
and if you

337
00:20:49,840 --> 00:20:56,310
never done anything with with chemo can

338
00:20:54,010 --> 00:21:00,070
I'll take a lot of time and salon

339
00:20:56,310 --> 00:21:02,020
simulation is running so but what the

340
00:21:00,070 --> 00:21:04,169
cool thing is is I'm on top of tumor

341
00:21:02,020 --> 00:21:08,560
there's even an alliance trinket and

342
00:21:04,170 --> 00:21:10,960
what it does it it looks inside the

343
00:21:08,560 --> 00:21:14,290
binary itself and searches for any

344
00:21:10,960 --> 00:21:18,100
informations about the architecture CPU

345
00:21:14,290 --> 00:21:21,010
chipset etc and loads the fading few

346
00:21:18,100 --> 00:21:24,730
email configurations so it's that's all

347
00:21:21,010 --> 00:21:28,900
the the complex part parts plate so it's

348
00:21:24,730 --> 00:21:33,520
very easy to use but sadly it was not

349
00:21:28,900 --> 00:21:38,020
working with every binary I think 8090

350
00:21:33,520 --> 00:21:41,860
percent just very sad but because it's

351
00:21:38,020 --> 00:21:52,870
very easy and I decided to use this tool

352
00:21:41,860 --> 00:21:55,719
for my little script and this is how we

353
00:21:52,870 --> 00:22:00,280
do use FET to emulate our image so we

354
00:21:55,720 --> 00:22:04,540
must execute fat and type in path 12 a

355
00:22:00,280 --> 00:22:07,360
permit image it will be more late on

356
00:22:04,540 --> 00:22:12,460
network interface so much yeah and it

357
00:22:07,360 --> 00:22:15,550
will give us an IP address and if we now

358
00:22:12,460 --> 00:22:18,250
execute our firmware we can just access

359
00:22:15,550 --> 00:22:22,500
our running Thunder via browser or run

360
00:22:18,250 --> 00:22:22,500
our well-known fantastic to its butt and

361
00:22:25,380 --> 00:22:30,130
if our firmware is Ronnie we can on as I

362
00:22:28,510 --> 00:22:33,100
mentioned before we can run our standard

363
00:22:30,130 --> 00:22:36,730
fantastic tools you can run a map on

364
00:22:33,100 --> 00:22:39,399
that port scan via pass the directory

365
00:22:36,730 --> 00:22:43,890
person dick to whether scanner which is

366
00:22:39,400 --> 00:22:48,220
also very popular for web applications

367
00:22:43,890 --> 00:22:55,360
but these tools mostly except of reverb

368
00:22:48,220 --> 00:22:57,780
can very easy be automated and I will

369
00:22:55,360 --> 00:22:57,780
show you that

370
00:23:28,059 --> 00:23:34,399
so I just prepared the fat because it

371
00:23:31,130 --> 00:23:37,820
takes a little bit time to set every

372
00:23:34,399 --> 00:23:40,250
configurations etc so I just typed here

373
00:23:37,820 --> 00:23:43,309
the path to a thermal image which is

374
00:23:40,250 --> 00:23:46,820
also throat affirmative and it was able

375
00:23:43,309 --> 00:23:50,200
to image to create a network interface

376
00:23:46,820 --> 00:23:54,769
with an IP address now I'm just

377
00:23:50,200 --> 00:23:59,679
executing the film there and I think

378
00:23:54,769 --> 00:23:59,679
this would take about 20-30 seconds

379
00:24:22,809 --> 00:24:30,049
great so our film is running and we can

380
00:24:26,299 --> 00:24:33,789
access it so now I can show you my

381
00:24:30,049 --> 00:24:33,789
letter tool what I created

382
00:25:09,150 --> 00:25:16,900
okay I caught this one lazy daddy and

383
00:25:13,110 --> 00:25:19,240
it's I executed it and it asked me for

384
00:25:16,900 --> 00:25:22,840
our project name this is our directive

385
00:25:19,240 --> 00:25:24,790
directory where our output files are

386
00:25:22,840 --> 00:25:29,080
written in okay so I just typed for

387
00:25:24,790 --> 00:25:31,928
example b-sides and now it's asking me

388
00:25:29,080 --> 00:25:33,879
for the module we want to use and I just

389
00:25:31,929 --> 00:25:45,370
prepare some modules here I will show

390
00:25:33,880 --> 00:25:48,490
you that here besides folder okay we

391
00:25:45,370 --> 00:25:52,330
have five sub modules inside here I

392
00:25:48,490 --> 00:25:54,250
think you can see more so every name has

393
00:25:52,330 --> 00:25:58,149
a small number in front of it and this

394
00:25:54,250 --> 00:26:02,340
is our water okay so it will hear in

395
00:25:58,150 --> 00:26:08,470
this pirate - renamed we have the name

396
00:26:02,340 --> 00:26:10,510
the number 20 after that 25 30 50 60 so

397
00:26:08,470 --> 00:26:12,070
it will run every module in this order

398
00:26:10,510 --> 00:26:19,690
and if we change the order we can just

399
00:26:12,070 --> 00:26:25,960
change the number okay so I'm just

400
00:26:19,690 --> 00:26:31,030
loading the p-sets module and now it's

401
00:26:25,960 --> 00:26:33,460
asking me if everything is right it just

402
00:26:31,030 --> 00:26:36,780
shows the order again at first it will

403
00:26:33,460 --> 00:26:43,590
do it tlbuster nikto and nmap scan and

404
00:26:36,780 --> 00:26:47,350
it will then join all files together and

405
00:26:43,590 --> 00:26:55,389
now it's running so it runs through the

406
00:26:47,350 --> 00:27:02,290
whole modules and yes and what is really

407
00:26:55,390 --> 00:27:06,670
cool um you can put in any IP address

408
00:27:02,290 --> 00:27:08,678
and set that fire saw imagine you are

409
00:27:06,670 --> 00:27:12,059
Pentastar customer comes and says hey i

410
00:27:08,679 --> 00:27:15,700
have 10 service or 10 IP addresses to

411
00:27:12,059 --> 00:27:18,910
just type in every IP address then let

412
00:27:15,700 --> 00:27:22,120
it run overnight so you can save a lot

413
00:27:18,910 --> 00:27:22,690
of time for the basic steps parts kind

414
00:27:22,120 --> 00:27:30,090
of directly

415
00:27:22,690 --> 00:27:33,430
handsome okay that's you know yet

416
00:27:30,090 --> 00:27:35,889
is it possible that I'm doing a safe

417
00:27:33,430 --> 00:27:53,790
with you guys because this was my first

418
00:27:35,890 --> 00:27:53,790
talk any problems generator

419
00:27:58,440 --> 00:28:14,820
great so thank you very much are there

420
00:28:12,520 --> 00:28:14,820
any questions

421
00:28:21,600 --> 00:28:33,429
you mean in the program itself well well

422
00:28:31,300 --> 00:28:34,960
sometimes you will you get the firmware

423
00:28:33,430 --> 00:28:36,970
but you cannot for example download

424
00:28:34,960 --> 00:28:39,070
afirma if you have an eye roll it or IP

425
00:28:36,970 --> 00:28:40,960
come arrive from typically lasers or a

426
00:28:39,070 --> 00:28:43,689
satellite you can just download it okay

427
00:28:40,960 --> 00:28:43,990
if you want to get the familiar to dump

428
00:28:43,690 --> 00:28:59,050
it

429
00:28:43,990 --> 00:29:02,050
yeah but that's okay so mostly or

430
00:28:59,050 --> 00:29:07,360
sometimes you can just download the film

431
00:29:02,050 --> 00:29:09,820
breath for example if you have you are

432
00:29:07,360 --> 00:29:13,000
developer of any marketer any device you

433
00:29:09,820 --> 00:29:15,760
can just put your firm the online so

434
00:29:13,000 --> 00:29:17,860
everyone can download it so I just did

435
00:29:15,760 --> 00:29:22,870
not dump any firmware or something like

436
00:29:17,860 --> 00:29:26,139
that so I did all test on existing

437
00:29:22,870 --> 00:29:27,250
existing some images with which everyone

438
00:29:26,140 --> 00:29:28,770
can download

439
00:29:27,250 --> 00:29:53,700
[Music]

440
00:29:28,770 --> 00:29:55,800
Harvard Minnesota mobile application 3

441
00:29:53,700 --> 00:30:01,350
how many tools were partially encrypted

442
00:29:55,800 --> 00:30:03,149
like her more images some parties when

443
00:30:01,350 --> 00:30:07,919
takes some parties encrypted

444
00:30:03,150 --> 00:30:10,020
I'm g13 at some point so you know let's

445
00:30:07,920 --> 00:30:12,930
say that you downloaded something on the

446
00:30:10,020 --> 00:30:17,760
blood a part of that is encrypted at a

447
00:30:12,930 --> 00:30:27,470
part of that you probably have a really

448
00:30:17,760 --> 00:30:31,020
hard time you had that entropy diagram

449
00:30:27,470 --> 00:30:34,160
this and it showed high entropy almost

450
00:30:31,020 --> 00:30:37,350
almost everywhere a piece of is at each

451
00:30:34,160 --> 00:30:41,480
Angie's you could extract file system

452
00:30:37,350 --> 00:30:44,459
out to it wasn't it is very difficult to

453
00:30:41,480 --> 00:30:46,950
sometimes your you have compressed data

454
00:30:44,460 --> 00:30:51,630
and sometimes you have encrypted data so

455
00:30:46,950 --> 00:30:54,690
it's very hard to automate the the

456
00:30:51,630 --> 00:30:56,280
difference so that the program says okay

457
00:30:54,690 --> 00:30:59,010
this is encrypted paint this is

458
00:30:56,280 --> 00:31:01,680
compressed so if you've got a compressed

459
00:30:59,010 --> 00:31:03,360
image the entropy is also very high

460
00:31:01,680 --> 00:31:22,530
enough so in this case it was compressed

461
00:31:03,360 --> 00:31:28,500
it was Jim in the German analysis

462
00:31:22,530 --> 00:31:30,389
toolkit yeah to get to that's very easy

463
00:31:28,500 --> 00:31:34,320
you just honor that to some pre

464
00:31:30,390 --> 00:31:37,140
configurations takes about 10 minutes 10

465
00:31:34,320 --> 00:31:39,919
minutes we just have to free install

466
00:31:37,140 --> 00:31:39,920
some juice

467
00:31:42,500 --> 00:31:51,440
no but as I mention before it's not very

468
00:31:46,580 --> 00:31:57,699
stable so I would say in my cases I was

469
00:31:51,440 --> 00:31:57,700
able to run maybe 80% of performance so

470
00:32:03,760 --> 00:32:08,330
if you want to really get sure to

471
00:32:06,530 --> 00:32:11,658
emulate images should probably do that

472
00:32:08,330 --> 00:32:13,399
with Huey mo but as I mention before

473
00:32:11,659 --> 00:32:15,559
this is very complex we need some time

474
00:32:13,400 --> 00:32:20,980
to do that but with you email you can

475
00:32:15,559 --> 00:32:20,980
almost emulate any architect

476
00:32:29,080 --> 00:32:32,359
[Music]

