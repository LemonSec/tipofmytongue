1
00:00:00,030 --> 00:00:05,609
third time's the<font color="#CCCCCC"> charm</font><font color="#E5E5E5"> solutions</font>

2
00:00:02,399 --> 00:00:07,259
exploitation is not<font color="#E5E5E5"> encryption would you</font>

3
00:00:05,609 --> 00:00:09,510
please put your<font color="#E5E5E5"> hands together and give</font>

4
00:00:07,259 --> 00:00:19,560
a big<font color="#CCCCCC"> b-side strano welcome to Vincent</font>

5
00:00:09,510 --> 00:00:21,840
Lee<font color="#CCCCCC"> welcome to third time's the charm</font>

6
00:00:19,560 --> 00:00:25,320
solution to exploitation<font color="#E5E5E5"> it's not</font>

7
00:00:21,840 --> 00:00:28,039
encryption before<font color="#CCCCCC"> I begin who here works</font>

8
00:00:25,320 --> 00:00:30,960
for<font color="#CCCCCC"> HPE please raise your hand</font>

9
00:00:28,039 --> 00:00:34,739
perfect<font color="#E5E5E5"> nobody works for HP so I can</font>

10
00:00:30,960 --> 00:00:38,160
<font color="#E5E5E5">speak</font><font color="#CCCCCC"> chesa whatever I want okay so this</font>

11
00:00:34,739 --> 00:00:40,680
talk is<font color="#CCCCCC"> about</font><font color="#E5E5E5"> how HPE tried and failed</font>

12
00:00:38,160 --> 00:00:43,559
to patch some<font color="#CCCCCC"> bugs in their product and</font>

13
00:00:40,680 --> 00:00:47,309
and at<font color="#E5E5E5"> the end they decide not</font><font color="#CCCCCC"> to patch</font>

14
00:00:43,559 --> 00:00:49,110
that bug so we have a title change<font color="#CCCCCC"> this</font>

15
00:00:47,309 --> 00:00:52,289
<font color="#E5E5E5">is a condensed version</font><font color="#CCCCCC"> of a talk that</font>

16
00:00:49,110 --> 00:00:55,469
I'll be<font color="#E5E5E5"> giving in Mexico next month</font><font color="#CCCCCC"> so</font>

17
00:00:52,289 --> 00:00:57,960
<font color="#E5E5E5">will be a little bit tight on time my</font>

18
00:00:55,469 --> 00:01:01,530
<font color="#E5E5E5">name is Vincent Lee I am a vulnerability</font>

19
00:00:57,960 --> 00:01:04,159
researcher at zdi at CDI I do root<font color="#E5E5E5"> cost</font>

20
00:01:01,530 --> 00:01:07,189
analysis and<font color="#CCCCCC"> Varion hunting</font><font color="#E5E5E5"> I also</font>

21
00:01:04,159 --> 00:01:11,130
provide detection guidance for our

22
00:01:07,189 --> 00:01:15,539
<font color="#E5E5E5">product team you can find me on Twitter</font>

23
00:01:11,130 --> 00:01:18,210
<font color="#CCCCCC">so what's ZD izd is the largest vendor</font>

24
00:01:15,540 --> 00:01:20,939
agnostic bounty program in the world<font color="#CCCCCC"> if</font>

25
00:01:18,210 --> 00:01:24,539
you<font color="#CCCCCC"> have zero days we buy them and if</font>

26
00:01:20,939 --> 00:01:26,039
you want to monetize<font color="#E5E5E5"> your research</font><font color="#CCCCCC"> but</font>

27
00:01:24,540 --> 00:01:28,549
don't want to<font color="#E5E5E5"> sell in gray market or</font>

28
00:01:26,040 --> 00:01:33,119
black market consider us as your

29
00:01:28,549 --> 00:01:35,009
research outlet will buy bucks<font color="#CCCCCC"> we are</font>

30
00:01:33,119 --> 00:01:37,680
also<font color="#E5E5E5"> the organizer</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> pond to own and</font>

31
00:01:35,009 --> 00:01:43,380
mobile phone to own<font color="#E5E5E5"> our next event is in</font>

32
00:01:37,680 --> 00:01:47,340
Tokyo<font color="#E5E5E5"> in November we we have IOT devices</font>

33
00:01:43,380 --> 00:01:51,210
like Google home and<font color="#E5E5E5"> a Amazon echo and</font>

34
00:01:47,340 --> 00:01:54,270
whatnot and handsets as targets in the

35
00:01:51,210 --> 00:01:57,139
Tokyo event<font color="#E5E5E5"> so if you have some</font><font color="#CCCCCC"> full-on</font>

36
00:01:54,270 --> 00:01:59,548
<font color="#CCCCCC">are full exploit chain in</font><font color="#E5E5E5"> those devices</font>

37
00:01:57,140 --> 00:02:02,280
<font color="#E5E5E5">consider joining this</font><font color="#CCCCCC"> competition and</font>

38
00:01:59,549 --> 00:02:04,290
win some bounty<font color="#E5E5E5"> here's a picture of my</font>

39
00:02:02,280 --> 00:02:07,069
hand clicking on a link<font color="#E5E5E5"> that will</font>

40
00:02:04,290 --> 00:02:09,989
jailbreak this<font color="#E5E5E5"> iPhone in a Faraday cage</font>

41
00:02:07,069 --> 00:02:15,159
<font color="#CCCCCC">in Tokyo</font><font color="#E5E5E5"> last year and that's the end of</font>

42
00:02:09,989 --> 00:02:17,830
my plug this is today's agenda

43
00:02:15,159 --> 00:02:20,920
so a little<font color="#E5E5E5"> bit background</font><font color="#CCCCCC"> back in</font>

44
00:02:17,830 --> 00:02:23,709
<font color="#E5E5E5">November 2016 our program received a</font>

45
00:02:20,920 --> 00:02:26,439
collection of<font color="#CCCCCC"> bucks in HP</font><font color="#E5E5E5"> intelligent</font>

46
00:02:23,709 --> 00:02:29,829
management<font color="#CCCCCC"> Center</font><font color="#E5E5E5"> eight of which were</font>

47
00:02:26,439 --> 00:02:31,900
command injection vulnerabilities<font color="#CCCCCC"> to my</font>

48
00:02:29,829 --> 00:02:34,750
knowledge<font color="#E5E5E5"> HP s attempted to patch</font><font color="#CCCCCC"> them</font>

49
00:02:31,900 --> 00:02:37,709
twice and decide<font color="#CCCCCC"> to give up on the third</font>

50
00:02:34,750 --> 00:02:40,540
time<font color="#E5E5E5"> and a little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> more on the target</font>

51
00:02:37,709 --> 00:02:42,519
<font color="#CCCCCC">according to their</font><font color="#E5E5E5"> website HP</font>

52
00:02:40,540 --> 00:02:44,890
intelligent<font color="#CCCCCC"> management center enterprise</font>

53
00:02:42,519 --> 00:02:47,230
software platform is a comprehensive

54
00:02:44,890 --> 00:02:49,629
<font color="#E5E5E5">wired and wireless network management</font>

55
00:02:47,230 --> 00:02:51,608
tool supporting the<font color="#E5E5E5"> F</font><font color="#CCCCCC"> Capps model</font>

56
00:02:49,629 --> 00:02:53,768
provides end-to-end<font color="#E5E5E5"> business management</font>

57
00:02:51,609 --> 00:02:58,090
of IT<font color="#CCCCCC"> blah blah blah blah blah</font><font color="#E5E5E5"> blah</font><font color="#CCCCCC"> okay</font>

58
00:02:53,769 --> 00:03:02,109
<font color="#CCCCCC">so some</font><font color="#E5E5E5"> management network network</font>

59
00:02:58,090 --> 00:03:08,319
management software<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> has this</font>

60
00:03:02,109 --> 00:03:11,440
<font color="#E5E5E5">product has a modular design</font><font color="#CCCCCC"> King so</font>

61
00:03:08,319 --> 00:03:16,599
these are the list of components<font color="#CCCCCC"> that</font>

62
00:03:11,440 --> 00:03:18,819
come installed by default<font color="#CCCCCC"> it has</font><font color="#E5E5E5"> lots of</font>

63
00:03:16,599 --> 00:03:21,238
components lots of moving<font color="#E5E5E5"> parts</font><font color="#CCCCCC"> lots of</font>

64
00:03:18,819 --> 00:03:25,629
<font color="#CCCCCC">services</font><font color="#E5E5E5"> that are installed by</font><font color="#CCCCCC"> default</font>

65
00:03:21,239 --> 00:03:29,889
<font color="#CCCCCC">our vulnerable</font><font color="#E5E5E5"> are our command injection</font>

66
00:03:25,629 --> 00:03:32,709
<font color="#CCCCCC">Bucks are located within the DB mangies</font>

67
00:03:29,889 --> 00:03:37,150
exe surface which is<font color="#E5E5E5"> the one highlighted</font>

68
00:03:32,709 --> 00:03:39,639
<font color="#E5E5E5">in blue</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is a control pain that</font>

69
00:03:37,150 --> 00:03:44,079
shows a list of processes<font color="#E5E5E5"> spawned by</font>

70
00:03:39,639 --> 00:03:46,750
this product when installed in a default

71
00:03:44,079 --> 00:03:50,139
<font color="#E5E5E5">setting again command injection bugs are</font>

72
00:03:46,750 --> 00:03:54,370
<font color="#E5E5E5">in the DB man surface this thing runs</font>

73
00:03:50,139 --> 00:03:58,989
<font color="#E5E5E5">multiple surfaces</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> DB</font><font color="#CCCCCC"> man surfaces</font>

74
00:03:54,370 --> 00:04:02,430
listens on TCP port 28<font color="#E5E5E5"> 8 10 and then</font>

75
00:03:58,989 --> 00:04:06,190
there's<font color="#CCCCCC"> TFTP server</font><font color="#E5E5E5"> which stands</font><font color="#CCCCCC"> for</font>

76
00:04:02,430 --> 00:04:09,549
<font color="#CCCCCC">travel</font><font color="#E5E5E5"> File Transfer Protocol</font><font color="#CCCCCC"> that</font>

77
00:04:06,190 --> 00:04:12,728
listens on UDP<font color="#E5E5E5"> port 69 for some reason</font>

78
00:04:09,549 --> 00:04:16,180
HP decide to write their own<font color="#CCCCCC"> TFTP server</font>

79
00:04:12,729 --> 00:04:18,130
from scratch<font color="#CCCCCC"> so it's really buggy and</font>

80
00:04:16,180 --> 00:04:24,219
<font color="#E5E5E5">then there's also a</font><font color="#CCCCCC"> Java</font><font color="#E5E5E5"> web server or</font>

81
00:04:18,130 --> 00:04:26,710
<font color="#CCCCCC">ec administration there is also IMG</font><font color="#E5E5E5"> exe</font>

82
00:04:24,219 --> 00:04:27,790
which is super interesting<font color="#E5E5E5"> it listens on</font>

83
00:04:26,710 --> 00:04:30,640
port

84
00:04:27,790 --> 00:04:33,070
<font color="#CCCCCC">800 TCP listens for</font><font color="#E5E5E5"> remote connections</font>

85
00:04:30,640 --> 00:04:35,680
and dispatch messages to other

86
00:04:33,070 --> 00:04:37,900
<font color="#CCCCCC">components</font><font color="#E5E5E5"> what that means is it will</font>

87
00:04:35,680 --> 00:04:42,720
grab some<font color="#E5E5E5"> message and send to one of</font>

88
00:04:37,900 --> 00:04:46,150
<font color="#E5E5E5">these exe s</font><font color="#CCCCCC"> in this list so even though</font>

89
00:04:42,720 --> 00:04:47,740
the process does<font color="#CCCCCC"> not or</font><font color="#E5E5E5"> even though one</font>

90
00:04:46,150 --> 00:04:50,109
<font color="#CCCCCC">of the process does not listen</font><font color="#E5E5E5"> or</font>

91
00:04:47,740 --> 00:04:53,410
<font color="#CCCCCC">actively listen for remote connection</font>

92
00:04:50,110 --> 00:04:59,170
<font color="#E5E5E5">you can still reach it through IMG exe</font>

93
00:04:53,410 --> 00:05:02,200
<font color="#E5E5E5">by giving it the</font><font color="#CCCCCC"> appropriate message so</font>

94
00:04:59,170 --> 00:05:04,600
overall this thing<font color="#E5E5E5"> is</font><font color="#CCCCCC"> very buggy this</font>

95
00:05:02,200 --> 00:05:06,820
thing has a super large<font color="#E5E5E5"> attack surface</font>

96
00:05:04,600 --> 00:05:08,980
<font color="#E5E5E5">different types of bugs are in</font><font color="#CCCCCC"> it some</font>

97
00:05:06,820 --> 00:05:12,130
are<font color="#E5E5E5"> classic some are more than some are</font>

98
00:05:08,980 --> 00:05:16,780
esoteric<font color="#E5E5E5"> and by buggy I mean very buggy</font>

99
00:05:12,130 --> 00:05:20,200
<font color="#E5E5E5">since 2017 we've bought this many bugs</font>

100
00:05:16,780 --> 00:05:22,059
that is<font color="#E5E5E5"> located in this product</font><font color="#CCCCCC"> and if</font>

101
00:05:20,200 --> 00:05:26,710
you want to learn<font color="#E5E5E5"> more</font><font color="#CCCCCC"> about these bugs</font>

102
00:05:22,060 --> 00:05:30,550
<font color="#E5E5E5">you can read two</font><font color="#CCCCCC"> of my blocks on on zero</font>

103
00:05:26,710 --> 00:05:33,070
day initiative<font color="#CCCCCC"> comm</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> word one</font><font color="#CCCCCC"> of</font>

104
00:05:30,550 --> 00:05:35,830
them is about<font color="#CCCCCC"> addy serialization bug in</font>

105
00:05:33,070 --> 00:05:37,900
the web interface<font color="#CCCCCC"> and then the other one</font>

106
00:05:35,830 --> 00:05:40,060
is yet<font color="#E5E5E5"> another story of a failed patch</font>

107
00:05:37,900 --> 00:05:44,679
which<font color="#E5E5E5"> is super interesting</font><font color="#CCCCCC"> highly</font>

108
00:05:40,060 --> 00:05:46,780
recommend you reading<font color="#E5E5E5"> it</font><font color="#CCCCCC"> so all eight of</font>

109
00:05:44,680 --> 00:05:49,090
<font color="#CCCCCC">these command injection vulnerabilities</font>

110
00:05:46,780 --> 00:05:55,500
are very<font color="#E5E5E5"> similar so I just pick one</font>

111
00:05:49,090 --> 00:05:59,250
this is<font color="#CCCCCC"> Zvi 17 33 3</font><font color="#E5E5E5"> 3 9</font><font color="#CCCCCC"> this</font>

112
00:05:55,500 --> 00:06:03,550
vulnerability is located in opcode<font color="#CCCCCC"> 1</font>

113
00:05:59,250 --> 00:06:06,150
<font color="#E5E5E5">10006 it uses a custom communication</font>

114
00:06:03,550 --> 00:06:11,020
protocol that leverages<font color="#E5E5E5"> the asn.1</font>

115
00:06:06,150 --> 00:06:13,659
technology it's a classic<font color="#E5E5E5"> command</font>

116
00:06:11,020 --> 00:06:16,240
injection vulnerability so it's super

117
00:06:13,660 --> 00:06:18,610
boring for those who know<font color="#E5E5E5"> what command</font>

118
00:06:16,240 --> 00:06:20,560
injection vulnerability is but that's

119
00:06:18,610 --> 00:06:22,960
<font color="#E5E5E5">not the point the</font><font color="#CCCCCC"> interesting part</font><font color="#E5E5E5"> is in</font>

120
00:06:20,560 --> 00:06:26,740
<font color="#E5E5E5">the patch tipping part so uh</font>

121
00:06:22,960 --> 00:06:29,260
in short the attacker sends a<font color="#E5E5E5"> control</font>

122
00:06:26,740 --> 00:06:32,440
data to the surface surface uses it to

123
00:06:29,260 --> 00:06:34,240
<font color="#E5E5E5">construct a command and then run system</font>

124
00:06:32,440 --> 00:06:37,930
on the command and then you get code

125
00:06:34,240 --> 00:06:40,930
exact so the vulnerability is in restore

126
00:06:37,930 --> 00:06:41,350
<font color="#E5E5E5">one local zip file</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> one very important</font>

127
00:06:40,930 --> 00:06:44,530
point

128
00:06:41,350 --> 00:06:47,470
this entire presentation is pretty much

129
00:06:44,530 --> 00:06:49,900
based<font color="#E5E5E5"> on the work done by</font><font color="#CCCCCC"> Suzy</font><font color="#E5E5E5"> back in</font>

130
00:06:47,470 --> 00:06:55,720
who submitted this collection<font color="#E5E5E5"> of boxes</font>

131
00:06:49,900 --> 00:06:59,320
<font color="#E5E5E5">in November 2016 16 so big thumbs up or</font>

132
00:06:55,720 --> 00:07:02,320
shout out to him<font color="#CCCCCC"> where was I</font>

133
00:06:59,320 --> 00:07:03,630
yes restore one local zip file<font color="#CCCCCC"> that's</font>

134
00:07:02,320 --> 00:07:12,250
where the command injection

135
00:07:03,630 --> 00:07:18,700
vulnerability is<font color="#E5E5E5"> so okay so this bucket</font>

136
00:07:12,250 --> 00:07:21,400
was tested in<font color="#E5E5E5"> IMC</font><font color="#CCCCCC"> 7.2 patch</font><font color="#E5E5E5"> 10 and for</font>

137
00:07:18,700 --> 00:07:24,099
those who are not super<font color="#E5E5E5"> familiar with</font>

138
00:07:21,400 --> 00:07:24,760
asn.1<font color="#CCCCCC"> I have a</font><font color="#E5E5E5"> three minute crash course</font>

139
00:07:24,100 --> 00:07:28,960
for you

140
00:07:24,760 --> 00:07:31,480
so according<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Wikipedia asn.1 is a</font>

141
00:07:28,960 --> 00:07:34,719
standard interface description language

142
00:07:31,480 --> 00:07:36,790
for defining<font color="#E5E5E5"> data structure that can be</font>

143
00:07:34,720 --> 00:07:39,220
<font color="#E5E5E5">serialized and deserialized</font>

144
00:07:36,790 --> 00:07:43,030
in a cross-platform<font color="#E5E5E5"> way</font><font color="#CCCCCC"> this technology</font>

145
00:07:39,220 --> 00:07:47,290
<font color="#CCCCCC">is used</font><font color="#E5E5E5"> in many things such as X dot 509</font>

146
00:07:43,030 --> 00:07:50,349
Kerberos<font color="#CCCCCC"> and LDAP the idea is that if a</font>

147
00:07:47,290 --> 00:07:53,470
speaks JSON B speaks XML see speaks

148
00:07:50,350 --> 00:07:56,410
binary these speaks foo and<font color="#CCCCCC"> espeak spar</font>

149
00:07:53,470 --> 00:07:58,030
<font color="#E5E5E5">and they want to talk to each other then</font>

150
00:07:56,410 --> 00:08:02,230
<font color="#E5E5E5">you need to have 20 different</font>

151
00:07:58,030 --> 00:08:05,109
translators<font color="#E5E5E5"> but what if they all speak</font>

152
00:08:02,230 --> 00:08:08,470
<font color="#CCCCCC">ASN dot one wouldn't it be wonderful</font>

153
00:08:05,110 --> 00:08:11,320
<font color="#CCCCCC">you just need ten translators and this</font>

154
00:08:08,470 --> 00:08:18,460
is the time when we when I give a<font color="#CCCCCC"> host</font>

155
00:08:11,320 --> 00:08:20,460
the obligatory<font color="#E5E5E5"> xkcd comics so here isn't</font>

156
00:08:18,460 --> 00:08:25,479
on the left

157
00:08:20,460 --> 00:08:29,260
that's the an example<font color="#CCCCCC"> a SN dot one</font>

158
00:08:25,480 --> 00:08:32,610
scheme for rocket data structure<font color="#CCCCCC"> in this</font>

159
00:08:29,260 --> 00:08:36,030
data scheme or a definition<font color="#CCCCCC"> a rocket</font>

160
00:08:32,610 --> 00:08:39,789
<font color="#E5E5E5">consists of a sequence of fields and</font>

161
00:08:36,030 --> 00:08:44,470
first it there is a name<font color="#CCCCCC"> property which</font>

162
00:08:39,789 --> 00:08:47,650
is defined as<font color="#E5E5E5"> 1 to 16 as utf-8</font>

163
00:08:44,470 --> 00:08:50,470
characters there is a message view and

164
00:08:47,650 --> 00:08:53,980
then there is a few property that can be

165
00:08:50,470 --> 00:08:54,790
<font color="#CCCCCC">those three</font><font color="#E5E5E5"> types only and then there is</font>

166
00:08:53,980 --> 00:08:57,160
a speed

167
00:08:54,790 --> 00:08:59,500
property that<font color="#E5E5E5"> are defined in two</font>

168
00:08:57,160 --> 00:09:02,110
<font color="#CCCCCC">different units and there's another</font>

169
00:08:59,500 --> 00:09:04,810
payload which is a sequence<font color="#E5E5E5"> of</font><font color="#CCCCCC"> different</font>

170
00:09:02,110 --> 00:09:07,330
strings and on the right that's<font color="#E5E5E5"> a rocket</font>

171
00:09:04,810 --> 00:09:10,050
instance and the values that<font color="#E5E5E5"> are</font>

172
00:09:07,330 --> 00:09:15,010
associated with<font color="#E5E5E5"> it</font><font color="#CCCCCC"> so what</font><font color="#E5E5E5"> if all those</font>

173
00:09:10,050 --> 00:09:18,400
ABCDE<font color="#E5E5E5"> speaks this underlying schema then</font>

174
00:09:15,010 --> 00:09:21,189
they could all translate into this

175
00:09:18,400 --> 00:09:24,069
abstract type and then talk<font color="#CCCCCC"> to each</font>

176
00:09:21,190 --> 00:09:26,950
other that way<font color="#E5E5E5"> so uh there is one schema</font>

177
00:09:24,070 --> 00:09:29,620
<font color="#E5E5E5">and multiple encoding rules</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is one</font>

178
00:09:26,950 --> 00:09:32,920
example of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> encoding rules XML so</font>

179
00:09:29,620 --> 00:09:36,160
this may<font color="#E5E5E5"> be translated into this XML</font>

180
00:09:32,920 --> 00:09:39,130
format<font color="#CCCCCC"> this same</font><font color="#E5E5E5"> thing may also be</font>

181
00:09:36,160 --> 00:09:41,680
translated<font color="#CCCCCC"> into a binary</font><font color="#E5E5E5"> format and for</font>

182
00:09:39,130 --> 00:09:44,140
<font color="#E5E5E5">those who speak ASCII you can kind</font><font color="#CCCCCC"> of</font>

183
00:09:41,680 --> 00:09:46,750
<font color="#E5E5E5">work out there is</font><font color="#CCCCCC"> falcone right there</font>

184
00:09:44,140 --> 00:09:54,370
<font color="#E5E5E5">six</font><font color="#CCCCCC"> four sixty four sixty one and then</font>

185
00:09:46,750 --> 00:09:57,310
there is car and then<font color="#E5E5E5"> GPS</font><font color="#CCCCCC"> a little bit</font>

186
00:09:54,370 --> 00:10:01,180
more on the bird encoding<font color="#E5E5E5"> it utilizes</font>

187
00:09:57,310 --> 00:10:05,319
<font color="#CCCCCC">tag links value data structure where</font>

188
00:10:01,180 --> 00:10:07,479
during<font color="#E5E5E5"> the encoding the the values they</font>

189
00:10:05,320 --> 00:10:13,960
could be nested<font color="#E5E5E5"> hence the diagram on the</font>

190
00:10:07,480 --> 00:10:17,140
right in here<font color="#CCCCCC"> thirty is the tag</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> b is</font>

191
00:10:13,960 --> 00:10:21,460
the link<font color="#E5E5E5"> of that entire the rest of of</font>

192
00:10:17,140 --> 00:10:24,130
<font color="#CCCCCC">the binary</font><font color="#E5E5E5"> stream and then value is the</font>

193
00:10:21,460 --> 00:10:26,760
rocket sequence in the beginning and

194
00:10:24,130 --> 00:10:30,520
then<font color="#CCCCCC"> you can I can see 80 it's</font><font color="#E5E5E5"> the</font>

195
00:10:26,760 --> 00:10:33,280
string<font color="#CCCCCC"> name that is six</font><font color="#E5E5E5"> ASCII character</font>

196
00:10:30,520 --> 00:10:37,390
long and then Falcon and then that's few

197
00:10:33,280 --> 00:10:39,520
type and then that's the speed and<font color="#E5E5E5"> then</font>

198
00:10:37,390 --> 00:10:43,480
you<font color="#E5E5E5"> can see there's the gray box there</font>

199
00:10:39,520 --> 00:10:46,720
is a sequence<font color="#E5E5E5"> that encloses the payload</font>

200
00:10:43,480 --> 00:10:51,670
which says car and GPS and<font color="#CCCCCC"> they have</font>

201
00:10:46,720 --> 00:10:54,310
their respective<font color="#CCCCCC"> tags</font><font color="#E5E5E5"> and length so</font>

202
00:10:51,670 --> 00:10:58,360
that's a<font color="#E5E5E5"> super quick crash course on</font><font color="#CCCCCC"> a</font>

203
00:10:54,310 --> 00:11:02,199
<font color="#CCCCCC">SN dot one</font><font color="#E5E5E5"> and to trigger this bug we</font>

204
00:10:58,360 --> 00:11:04,120
<font color="#CCCCCC">need to speak DB man exe and it utilizes</font>

205
00:11:02,200 --> 00:11:09,070
a custom protocol<font color="#E5E5E5"> as I said and this is</font>

206
00:11:04,120 --> 00:11:12,710
<font color="#E5E5E5">the custom protocol you on the wire you</font>

207
00:11:09,070 --> 00:11:16,460
<font color="#CCCCCC">10006 and then the length of the pelo</font>

208
00:11:12,710 --> 00:11:18,380
and then<font color="#CCCCCC"> SN dot one encoded payload and</font>

209
00:11:16,460 --> 00:11:23,110
then that's<font color="#E5E5E5"> how you talk</font><font color="#CCCCCC"> to you</font>

210
00:11:18,380 --> 00:11:28,970
<font color="#CCCCCC">DB man</font><font color="#E5E5E5"> exe this is the schema</font><font color="#CCCCCC"> for the</font>

211
00:11:23,110 --> 00:11:32,390
<font color="#CCCCCC">10006 packet</font><font color="#E5E5E5"> so you need to create such</font>

212
00:11:28,970 --> 00:11:35,990
a data structure<font color="#E5E5E5"> and then plop it into</font>

213
00:11:32,390 --> 00:11:38,870
that data field to<font color="#E5E5E5"> talk to a TV man exe</font>

214
00:11:35,990 --> 00:11:40,970
<font color="#E5E5E5">and then the fields highlighted</font><font color="#CCCCCC"> in blue</font>

215
00:11:38,870 --> 00:11:43,940
are used in the<font color="#E5E5E5"> construction of a</font>

216
00:11:40,970 --> 00:11:49,000
command line<font color="#CCCCCC"> that means</font><font color="#E5E5E5"> any one of those</font>

217
00:11:43,940 --> 00:11:49,000
fields<font color="#E5E5E5"> could let you get</font><font color="#CCCCCC"> codecs second</font>

218
00:11:50,260 --> 00:11:57,410
this is this is the disassembly<font color="#E5E5E5"> for</font>

219
00:11:54,550 --> 00:12:01,390
restore one local<font color="#E5E5E5"> zip file this is where</font>

220
00:11:57,410 --> 00:12:04,040
the command injection buck is located

221
00:12:01,390 --> 00:12:07,130
closer to<font color="#CCCCCC"> the bottom Barry's run command</font>

222
00:12:04,040 --> 00:12:12,920
<font color="#E5E5E5">it run commands</font><font color="#CCCCCC"> takes in a command and</font>

223
00:12:07,130 --> 00:12:16,490
runs it the function calls about<font color="#E5E5E5"> our C++</font>

224
00:12:12,920 --> 00:12:19,520
call to constructing a command string

225
00:12:16,490 --> 00:12:23,380
and here's the<font color="#E5E5E5"> the compiler output you</font>

226
00:12:19,520 --> 00:12:25,640
can see there is the operator<font color="#E5E5E5"> plus that</font>

227
00:12:23,380 --> 00:12:28,280
concatenates the commands together<font color="#E5E5E5"> and</font>

228
00:12:25,640 --> 00:12:31,189
then it runs<font color="#E5E5E5"> command closer to the</font>

229
00:12:28,280 --> 00:12:40,550
bottom<font color="#E5E5E5"> and run command runs command</font>

230
00:12:31,190 --> 00:12:44,330
without runs command so so we back one

231
00:12:40,550 --> 00:12:47,510
slide<font color="#E5E5E5"> about we can see that in this</font>

232
00:12:44,330 --> 00:12:50,210
function it takes the payload from the

233
00:12:47,510 --> 00:12:53,630
<font color="#E5E5E5">ASN dot one data structure</font><font color="#CCCCCC"> and then puts</font>

234
00:12:50,210 --> 00:12:56,000
<font color="#E5E5E5">it directly into the operator plus so it</font>

235
00:12:53,630 --> 00:12:58,220
<font color="#CCCCCC">it construct the command string without</font>

236
00:12:56,000 --> 00:13:02,270
any sanitization<font color="#CCCCCC"> and that's where the</font>

237
00:12:58,220 --> 00:13:06,620
bug is<font color="#E5E5E5"> so this is how it looks when you</font>

238
00:13:02,270 --> 00:13:09,949
run it in<font color="#E5E5E5"> win debug at the moment when</font>

239
00:13:06,620 --> 00:13:12,740
this this call is run command this<font color="#CCCCCC"> is</font>

240
00:13:09,950 --> 00:13:15,500
the<font color="#CCCCCC"> injected command so as you can</font><font color="#E5E5E5"> see</font>

241
00:13:12,740 --> 00:13:18,650
<font color="#E5E5E5">our researcher has decided to write</font><font color="#CCCCCC"> ok</font>

242
00:13:15,500 --> 00:13:21,410
<font color="#CCCCCC">Google restore one local zip file</font><font color="#E5E5E5"> into</font>

243
00:13:18,650 --> 00:13:29,509
file and<font color="#E5E5E5"> C Drive</font>

244
00:13:21,410 --> 00:13:31,699
and this is how it looks<font color="#E5E5E5"> so HP has</font>

245
00:13:29,509 --> 00:13:33,379
attempted to patch this exact<font color="#CCCCCC"> bug or</font>

246
00:13:31,699 --> 00:13:37,519
this collection<font color="#E5E5E5"> of command injection</font>

247
00:13:33,379 --> 00:13:41,119
<font color="#E5E5E5">buck twice and this is</font><font color="#CCCCCC"> their patch once</font>

248
00:13:37,519 --> 00:13:46,009
<font color="#E5E5E5">once they've released the patch our</font>

249
00:13:41,119 --> 00:13:49,970
researcher actually submitted<font color="#CCCCCC"> in Suffolk</font>

250
00:13:46,009 --> 00:13:52,879
<font color="#CCCCCC">a failed patch</font><font color="#E5E5E5"> but so resubmitted the</font>

251
00:13:49,970 --> 00:13:56,239
bug again and I put in a<font color="#E5E5E5"> pin dipping</font>

252
00:13:52,879 --> 00:14:00,909
pool<font color="#CCCCCC"> and this is the vulnerable function</font>

253
00:13:56,239 --> 00:14:10,819
and it says exactly<font color="#E5E5E5"> nothing was changed</font>

254
00:14:00,909 --> 00:14:14,809
<font color="#CCCCCC">so that's what it is so</font><font color="#E5E5E5"> uh</font><font color="#CCCCCC"> yeah so what</font>

255
00:14:10,819 --> 00:14:17,149
did they do<font color="#CCCCCC"> when performing been dipping</font>

256
00:14:14,809 --> 00:14:20,238
it's very important to know what<font color="#CCCCCC"> to look</font>

257
00:14:17,149 --> 00:14:22,989
for and think like a programmer<font color="#CCCCCC"> so say</font>

258
00:14:20,239 --> 00:14:26,299
if your programmer that<font color="#E5E5E5"> rut writes this</font>

259
00:14:22,989 --> 00:14:28,429
<font color="#E5E5E5">product and you</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> you have a service</font>

260
00:14:26,299 --> 00:14:31,220
that handles different<font color="#E5E5E5"> op codes</font><font color="#CCCCCC"> how</font>

261
00:14:28,429 --> 00:14:34,339
<font color="#CCCCCC">would you write it</font><font color="#E5E5E5"> you probably will</font>

262
00:14:31,220 --> 00:14:36,939
<font color="#CCCCCC">have a</font><font color="#E5E5E5"> receive lip and then have a</font>

263
00:14:34,339 --> 00:14:40,399
switch statement<font color="#CCCCCC"> inside and each case</font>

264
00:14:36,939 --> 00:14:43,118
handles<font color="#CCCCCC"> it handles one opcode and that</font>

265
00:14:40,399 --> 00:14:48,679
is exactly<font color="#E5E5E5"> what they did</font>

266
00:14:43,119 --> 00:14:51,949
this<font color="#E5E5E5"> diagram is the gigantic switch deal</font>

267
00:14:48,679 --> 00:14:55,009
message<font color="#E5E5E5"> it's what they've named it</font><font color="#CCCCCC"> the</font>

268
00:14:51,949 --> 00:14:57,889
turquoise block on the right<font color="#CCCCCC"> there is</font>

269
00:14:55,009 --> 00:15:01,339
where they hand out<font color="#E5E5E5"> opcode one zero</font><font color="#CCCCCC"> is</font>

270
00:14:57,889 --> 00:15:06,889
<font color="#CCCCCC">zero</font><font color="#E5E5E5"> six the orange the two orange boxes</font>

271
00:15:01,339 --> 00:15:09,889
are two other vulnerabilities<font color="#CCCCCC"> so in here</font>

272
00:15:06,889 --> 00:15:14,809
we know from switch from the big switch

273
00:15:09,889 --> 00:15:17,779
to the vulnerable function<font color="#E5E5E5"> they</font><font color="#CCCCCC"> have one</font>

274
00:15:14,809 --> 00:15:20,179
more function<font color="#E5E5E5"> in between and they have</font>

275
00:15:17,779 --> 00:15:23,119
not touched restore one localized<font color="#E5E5E5"> zip</font>

276
00:15:20,179 --> 00:15:27,439
file and so the patch must be in<font color="#CCCCCC"> that</font>

277
00:15:23,119 --> 00:15:31,869
<font color="#E5E5E5">unnamed function and it is it is</font><font color="#CCCCCC"> in</font>

278
00:15:27,439 --> 00:15:34,740
there this<font color="#E5E5E5"> is another view this is the</font>

279
00:15:31,869 --> 00:15:36,600
binary<font color="#E5E5E5"> different view</font><font color="#CCCCCC"> of the</font>

280
00:15:34,740 --> 00:15:39,750
the middle function it's called restore

281
00:15:36,600 --> 00:15:41,580
zip file<font color="#E5E5E5"> as you can see on the left</font>

282
00:15:39,750 --> 00:15:44,160
that's<font color="#E5E5E5"> the unpatched version on the</font>

283
00:15:41,580 --> 00:15:47,279
right<font color="#E5E5E5"> it's the patched version you can</font>

284
00:15:44,160 --> 00:15:52,760
<font color="#E5E5E5">see they've put a lot</font><font color="#CCCCCC"> of stuff in the</font>

285
00:15:47,279 --> 00:15:57,209
<font color="#CCCCCC">middle so we're</font><font color="#E5E5E5"> interested in the</font><font color="#CCCCCC"> area</font>

286
00:15:52,760 --> 00:16:00,750
highlighted in red boxes<font color="#E5E5E5"> so here's this</font>

287
00:15:57,209 --> 00:16:03,750
enhanced view<font color="#E5E5E5"> on the left the unpatched</font>

288
00:16:00,750 --> 00:16:06,600
version<font color="#E5E5E5"> you can see</font><font color="#CCCCCC"> that's the function</font>

289
00:16:03,750 --> 00:16:16,550
prologue<font color="#E5E5E5"> it enters the function and then</font>

290
00:16:06,600 --> 00:16:16,550
calls the<font color="#E5E5E5"> vulnerable while they were no</font>

291
00:16:20,870 --> 00:16:26,130
<font color="#E5E5E5">good okay cool</font>

292
00:16:22,920 --> 00:16:28,199
so on the<font color="#E5E5E5"> left the vulnerable function</font>

293
00:16:26,130 --> 00:16:29,580
is called very quickly<font color="#CCCCCC"> or on the right</font>

294
00:16:28,200 --> 00:16:31,290
you<font color="#E5E5E5"> can see they've</font><font color="#CCCCCC"> done a bunch of</font>

295
00:16:29,580 --> 00:16:32,910
stuff and<font color="#E5E5E5"> then cause the vulnerable</font>

296
00:16:31,290 --> 00:16:34,949
function on the right<font color="#E5E5E5"> and in</font><font color="#CCCCCC"> fact the</font>

297
00:16:32,910 --> 00:16:37,199
function<font color="#CCCCCC"> prologue</font><font color="#E5E5E5"> is not even in in the</font>

298
00:16:34,950 --> 00:16:42,570
view it's like<font color="#E5E5E5"> the function prologue is</font>

299
00:16:37,200 --> 00:16:45,089
somewhere in the above so in the red box

300
00:16:42,570 --> 00:16:51,329
highlighted<font color="#E5E5E5"> there they've called an</font>

301
00:16:45,089 --> 00:16:55,260
extra<font color="#CCCCCC"> function called</font><font color="#E5E5E5"> DB man BB man</font>

302
00:16:51,329 --> 00:16:58,770
<font color="#CCCCCC">decode</font><font color="#E5E5E5"> link</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> pseudo code of</font>

303
00:16:55,260 --> 00:17:01,470
what they've<font color="#E5E5E5"> done in a patch do</font>

304
00:16:58,770 --> 00:17:03,720
something in DB<font color="#CCCCCC"> Mandy coat</font><font color="#E5E5E5"> link and then</font>

305
00:17:01,470 --> 00:17:06,270
<font color="#CCCCCC">it's success</font><font color="#E5E5E5"> called a vulnerable</font>

306
00:17:03,720 --> 00:17:07,949
function and then you die or<font color="#E5E5E5"> you get</font>

307
00:17:06,270 --> 00:17:12,270
code<font color="#E5E5E5"> exec there</font>

308
00:17:07,949 --> 00:17:16,709
this is a call graph that<font color="#CCCCCC"> the coat</font>

309
00:17:12,270 --> 00:17:19,379
length has you can see<font color="#E5E5E5"> besides the</font>

310
00:17:16,709 --> 00:17:22,500
<font color="#E5E5E5">obvious function</font><font color="#CCCCCC"> name decrypt message we</font>

311
00:17:19,380 --> 00:17:26,100
can see that it calls EVP decrypt final

312
00:17:22,500 --> 00:17:29,490
which is an open SSL API so we know it

313
00:17:26,099 --> 00:17:33,959
does some sort of crypto in this

314
00:17:29,490 --> 00:17:36,030
function and in<font color="#E5E5E5"> fact this</font><font color="#CCCCCC"> is what it</font>

315
00:17:33,960 --> 00:17:39,840
<font color="#E5E5E5">does it generates a key from some</font>

316
00:17:36,030 --> 00:17:43,080
hardware configuration<font color="#E5E5E5"> stored in IM c HW</font>

317
00:17:39,840 --> 00:17:45,659
<font color="#CCCCCC">Kampf and then generate a key you</font>

318
00:17:43,080 --> 00:17:47,550
decrypt<font color="#E5E5E5"> another key sort on file named</font>

319
00:17:45,660 --> 00:17:50,040
KS stop that

320
00:17:47,550 --> 00:17:52,139
<font color="#CCCCCC">and once they've decrypt the secondary</font>

321
00:17:50,040 --> 00:17:54,840
key they used that<font color="#E5E5E5"> secondary key to</font>

322
00:17:52,140 --> 00:17:57,870
encrypt the message on on the wire<font color="#CCCCCC"> so</font>

323
00:17:54,840 --> 00:18:04,879
<font color="#CCCCCC">this is how the custom protocol looks</font><font color="#E5E5E5"> in</font>

324
00:17:57,870 --> 00:18:11,610
the new in the patch surface<font color="#E5E5E5"> you can see</font>

325
00:18:04,880 --> 00:18:14,640
the<font color="#E5E5E5"> payload is just encrypted so this is</font>

326
00:18:11,610 --> 00:18:17,310
how I<font color="#E5E5E5"> imagine</font><font color="#CCCCCC"> the HP developers fix</font>

327
00:18:14,640 --> 00:18:21,390
their code they run the POC<font color="#CCCCCC"> surf getting</font>

328
00:18:17,310 --> 00:18:24,149
crashed<font color="#E5E5E5"> and then do something breaks</font><font color="#CCCCCC"> the</font>

329
00:18:21,390 --> 00:18:28,410
POC<font color="#E5E5E5"> runs the POC again hey it doesn't</font>

330
00:18:24,150 --> 00:18:34,260
<font color="#E5E5E5">work great we fix it let's push it but</font>

331
00:18:28,410 --> 00:18:40,340
oh well<font color="#E5E5E5"> so the heart of the</font><font color="#CCCCCC"> problem here</font>

332
00:18:34,260 --> 00:18:42,530
is that<font color="#E5E5E5"> HP used cryptography to</font><font color="#CCCCCC"> -</font>

333
00:18:40,340 --> 00:18:45,600
they're trying<font color="#CCCCCC"> to solve an</font>

334
00:18:42,530 --> 00:18:48,950
authentication<font color="#E5E5E5"> problem with</font><font color="#CCCCCC"> encryption</font>

335
00:18:45,600 --> 00:18:51,629
and encryption is great it provides

336
00:18:48,950 --> 00:18:53,780
confidentiality but that's not what the

337
00:18:51,630 --> 00:18:57,180
vulnerability<font color="#E5E5E5"> is the vulnerability</font><font color="#CCCCCC"> is</font>

338
00:18:53,780 --> 00:19:00,570
about authentication<font color="#E5E5E5"> like anyone can</font>

339
00:18:57,180 --> 00:19:03,120
send whatever<font color="#E5E5E5"> spoofed message to DB man</font>

340
00:19:00,570 --> 00:19:07,220
it will just run whatever<font color="#CCCCCC"> so that's</font>

341
00:19:03,120 --> 00:19:11,689
that's<font color="#E5E5E5"> a problem there</font><font color="#CCCCCC"> so the story is</font>

342
00:19:07,220 --> 00:19:16,310
<font color="#CCCCCC">please just fix</font><font color="#E5E5E5"> the underlying</font><font color="#CCCCCC"> code and</font>

343
00:19:11,690 --> 00:19:20,850
they hence the talk like solution<font color="#E5E5E5"> to</font>

344
00:19:16,310 --> 00:19:26,730
exploitation it's not encryption so

345
00:19:20,850 --> 00:19:28,100
patch<font color="#E5E5E5"> bypass how do we bypass that since</font>

346
00:19:26,730 --> 00:19:31,920
the<font color="#E5E5E5"> underlying command injection</font>

347
00:19:28,100 --> 00:19:35,580
vulnerability was not patched<font color="#CCCCCC"> it still</font>

348
00:19:31,920 --> 00:19:38,040
is<font color="#E5E5E5"> not patched</font><font color="#CCCCCC"> we can bypass</font><font color="#E5E5E5"> that we can</font>

349
00:19:35,580 --> 00:19:40,980
do that in two approaches<font color="#E5E5E5"> one way is to</font>

350
00:19:38,040 --> 00:19:43,200
<font color="#CCCCCC">figure out what store in the those two</font>

351
00:19:40,980 --> 00:19:48,600
<font color="#CCCCCC">files the other way is to overwrite them</font>

352
00:19:43,200 --> 00:19:50,960
<font color="#E5E5E5">and in fact</font><font color="#CCCCCC"> that's what CDC did he found</font>

353
00:19:48,600 --> 00:19:53,250
<font color="#E5E5E5">two more</font><font color="#CCCCCC"> bugs in the product and</font>

354
00:19:50,960 --> 00:19:57,080
overwritten those two files<font color="#E5E5E5"> with known</font>

355
00:19:53,250 --> 00:19:59,670
values<font color="#E5E5E5"> now he can generate</font><font color="#CCCCCC"> a proper</font>

356
00:19:57,080 --> 00:20:01,020
<font color="#E5E5E5">message that the product will</font><font color="#CCCCCC"> will</font>

357
00:19:59,670 --> 00:20:03,480
understand

358
00:20:01,020 --> 00:20:08,399
and happily execute whatever payload

359
00:20:03,480 --> 00:20:09,899
<font color="#CCCCCC">he's given and</font><font color="#E5E5E5"> uh</font><font color="#CCCCCC"> everyone gets a no</font>

360
00:20:08,399 --> 00:20:13,529
date this command injection

361
00:20:09,899 --> 00:20:16,260
vulnerability<font color="#E5E5E5"> or remains unpatched we</font>

362
00:20:13,529 --> 00:20:20,490
have released an zero day advisory about

363
00:20:16,260 --> 00:20:21,990
this<font color="#CCCCCC"> 20 days ago they were giving given</font>

364
00:20:20,490 --> 00:20:26,750
chances<font color="#E5E5E5"> to patch them but they've</font>

365
00:20:21,990 --> 00:20:30,990
<font color="#E5E5E5">decided not to patch them so that's</font>

366
00:20:26,750 --> 00:20:33,240
where we're<font color="#CCCCCC"> at today so a conclusion</font>

367
00:20:30,990 --> 00:20:35,270
<font color="#E5E5E5">when you're doing patch</font><font color="#CCCCCC"> tipping know</font>

368
00:20:33,240 --> 00:20:40,529
what to<font color="#E5E5E5"> look for</font><font color="#CCCCCC"> think like a programmer</font>

369
00:20:35,270 --> 00:20:43,559
<font color="#CCCCCC">you open</font><font color="#E5E5E5"> bend</font><font color="#CCCCCC"> it and</font><font color="#E5E5E5"> then no it won't</font>

370
00:20:40,529 --> 00:20:46,380
<font color="#E5E5E5">just pop out like he's the bug</font><font color="#CCCCCC"> you've</font>

371
00:20:43,559 --> 00:20:51,330
got a look<font color="#E5E5E5"> for it</font><font color="#CCCCCC"> so that's my tip for</font>

372
00:20:46,380 --> 00:20:54,120
<font color="#E5E5E5">you</font><font color="#CCCCCC"> everyone</font><font color="#E5E5E5"> gets in</font><font color="#CCCCCC"> O'Day</font><font color="#E5E5E5"> the moral of</font>

373
00:20:51,330 --> 00:20:59,039
<font color="#CCCCCC">the story is attacker is one info bug</font>

374
00:20:54,120 --> 00:21:01,289
info leak bug<font color="#E5E5E5"> away from system for those</font>

375
00:20:59,039 --> 00:21:04,379
who are developers<font color="#E5E5E5"> please fix underlying</font>

376
00:21:01,289 --> 00:21:07,799
issue<font color="#E5E5E5"> instead of just putting a band-aid</font>

377
00:21:04,380 --> 00:21:09,690
<font color="#CCCCCC">and then another shout out to CDC who</font>

378
00:21:07,799 --> 00:21:14,750
did an amazing job finding<font color="#E5E5E5"> these bugs</font>

379
00:21:09,690 --> 00:21:14,750
<font color="#E5E5E5">and yeah that's all I have</font>

380
00:21:21,150 --> 00:21:24,150
questions

381
00:21:27,630 --> 00:21:32,730
<font color="#CCCCCC">perfectly thank you</font>

382
00:21:30,780 --> 00:21:38,359
thank<font color="#E5E5E5"> you</font>

383
00:21:32,730 --> 00:21:38,359
[Applause]

