1
00:00:10,860 --> 00:00:14,940
all right how's everyone doing

2
00:00:14,940 --> 00:00:17,160
yeah you guys enjoying the conference so

3
00:00:17,160 --> 00:00:18,660
far

4
00:00:18,660 --> 00:00:21,060
thank you for making it this far uh you

5
00:00:21,060 --> 00:00:22,980
know Save The Best For Last right you

6
00:00:22,980 --> 00:00:25,859
hope uh my name is Evan Curtis I have a

7
00:00:25,859 --> 00:00:27,420
bachelor's of Science and physics from

8
00:00:27,420 --> 00:00:28,740
the University of North Carolina at

9
00:00:28,740 --> 00:00:29,939
Chapel Hill

10
00:00:29,939 --> 00:00:31,800
I have a master's degree in computer

11
00:00:31,800 --> 00:00:34,020
science from the Alan Paulson

12
00:00:34,020 --> 00:00:35,880
you know it's just it's actually an

13
00:00:35,880 --> 00:00:38,520
example right as Security Professionals

14
00:00:38,520 --> 00:00:41,760
we have to plan for the worst but

15
00:00:41,760 --> 00:00:43,140
um you know we have to have we have to

16
00:00:43,140 --> 00:00:45,480
have a backup plan but I digress uh just

17
00:00:45,480 --> 00:00:46,079
to give you a little more information

18
00:00:46,079 --> 00:00:48,480
about my background here right so I'm a

19
00:00:48,480 --> 00:00:49,559
Security Plus certified information

20
00:00:49,559 --> 00:00:52,620
security professional I also hold a

21
00:00:52,620 --> 00:00:54,899
certificate in terraform as well I'm a

22
00:00:54,899 --> 00:00:56,340
certified terraform associate developer

23
00:00:56,340 --> 00:00:57,480
and I'm a certified computer and

24
00:00:57,480 --> 00:00:58,620
electrical engineer in the state of

25
00:00:58,620 --> 00:01:00,420
Georgia today I'm going to talk to you

26
00:01:00,420 --> 00:01:02,160
about how to implement a developer

27
00:01:02,160 --> 00:01:04,860
security operations program

28
00:01:04,860 --> 00:01:07,640
the right way

29
00:01:09,420 --> 00:01:11,280
why didn't the IT team set up their

30
00:01:11,280 --> 00:01:14,360
infrastructure on the beach

31
00:01:15,780 --> 00:01:17,939
it was cloudy

32
00:01:17,939 --> 00:01:19,680
so

33
00:01:19,680 --> 00:01:21,119
ask yourself

34
00:01:21,119 --> 00:01:24,200
why are you here

35
00:01:25,200 --> 00:01:28,040
another mic change

36
00:01:30,060 --> 00:01:31,380
you know good things come in threes

37
00:01:31,380 --> 00:01:33,119
anyways so

38
00:01:33,119 --> 00:01:34,560
all right

39
00:01:34,560 --> 00:01:36,299
ask yourself though

40
00:01:36,299 --> 00:01:37,680
why

41
00:01:37,680 --> 00:01:40,640
are you here

42
00:01:44,520 --> 00:01:46,619
prepare yourself

43
00:01:46,619 --> 00:01:49,200
for a paradigm shift

44
00:01:49,200 --> 00:01:50,579
you think about developer security

45
00:01:50,579 --> 00:01:52,500
operations

46
00:01:52,500 --> 00:01:54,960
it's a mindset

47
00:01:54,960 --> 00:01:56,759
this is a way for you to think about

48
00:01:56,759 --> 00:01:58,799
things differently

49
00:01:58,799 --> 00:02:01,740
consider it a renewal of your mind

50
00:02:01,740 --> 00:02:04,500
there are five key things that I want

51
00:02:04,500 --> 00:02:06,600
you to walk away from after this talk

52
00:02:06,600 --> 00:02:08,699
number one

53
00:02:08,699 --> 00:02:12,720
automated scanning removes manual labor

54
00:02:12,720 --> 00:02:15,780
number two application Security reviews

55
00:02:15,780 --> 00:02:19,319
require a security champion

56
00:02:19,319 --> 00:02:21,060
number three

57
00:02:21,060 --> 00:02:23,220
strong vulnerability reports

58
00:02:23,220 --> 00:02:25,080
are most easily articulated to upper

59
00:02:25,080 --> 00:02:27,120
management when you can support them

60
00:02:27,120 --> 00:02:29,300
with the proper information from

61
00:02:29,300 --> 00:02:33,060
platforms like Vera code and x-ray

62
00:02:33,060 --> 00:02:35,660
we can use penetration tests to support

63
00:02:35,660 --> 00:02:37,980
these findings and we can also use

64
00:02:37,980 --> 00:02:39,480
penetration tests to find the

65
00:02:39,480 --> 00:02:41,160
vulnerabilities that sassed and dast

66
00:02:41,160 --> 00:02:43,440
miss

67
00:02:43,440 --> 00:02:44,940
these results combined with the

68
00:02:44,940 --> 00:02:47,340
penetration test can be supported by a

69
00:02:47,340 --> 00:02:50,599
very sophisticated logging system

70
00:02:53,160 --> 00:02:54,980
okay

71
00:02:54,980 --> 00:02:57,360
how you do anything

72
00:02:57,360 --> 00:03:00,620
is how you do everything

73
00:03:01,980 --> 00:03:05,280
our process doesn't get people to it

74
00:03:05,280 --> 00:03:07,980
doesn't force them to do their job

75
00:03:07,980 --> 00:03:11,280
what it does is it actually gets them to

76
00:03:11,280 --> 00:03:14,099
want to do their job

77
00:03:14,099 --> 00:03:15,780
how many of you have sat in a meeting

78
00:03:15,780 --> 00:03:18,239
with a liar

79
00:03:18,239 --> 00:03:20,580
how many of you have dealt with a toxic

80
00:03:20,580 --> 00:03:23,580
micromanager

81
00:03:24,420 --> 00:03:27,120
Johannes

82
00:03:27,120 --> 00:03:29,879
yeah we all have right

83
00:03:29,879 --> 00:03:33,079
have you ever heard of Schiff left

84
00:03:33,900 --> 00:03:36,500
anyone

85
00:03:36,959 --> 00:03:38,400
so how do you do shift left the right

86
00:03:38,400 --> 00:03:40,580
way

87
00:03:40,860 --> 00:03:43,500
we Inspire accountability

88
00:03:43,500 --> 00:03:46,440
in our process uses the right questions

89
00:03:46,440 --> 00:03:49,080
to get the right people to take action

90
00:03:49,080 --> 00:03:51,480
our process is based on Research from

91
00:03:51,480 --> 00:03:53,940
the two most referenced papers that

92
00:03:53,940 --> 00:03:56,580
describe the challenges by devsecops

93
00:03:56,580 --> 00:03:59,659
from connected papers

94
00:04:01,500 --> 00:04:02,879
now

95
00:04:02,879 --> 00:04:04,260
we all know that configuration

96
00:04:04,260 --> 00:04:06,900
management is a security engineer's

97
00:04:06,900 --> 00:04:08,519
worst nightmare

98
00:04:08,519 --> 00:04:10,140
it's a very difficult thing to have to

99
00:04:10,140 --> 00:04:12,500
work through

100
00:04:12,840 --> 00:04:16,199
so there's no standardization for

101
00:04:16,199 --> 00:04:17,760
developer security operations at this

102
00:04:17,760 --> 00:04:18,839
point

103
00:04:18,839 --> 00:04:20,639
we need to find a way to be able to move

104
00:04:20,639 --> 00:04:23,100
through this

105
00:04:23,100 --> 00:04:25,560
when we don't accept standards then

106
00:04:25,560 --> 00:04:27,660
Shadow I.T becomes the norm in most

107
00:04:27,660 --> 00:04:30,259
organizations

108
00:04:30,300 --> 00:04:33,740
so how do we address these issues

109
00:04:34,320 --> 00:04:38,419
you have to make fire walkers

110
00:04:39,680 --> 00:04:43,620
[Laughter]

111
00:04:43,620 --> 00:04:47,699
okay so processes really don't care

112
00:04:47,699 --> 00:04:50,699
about your feelings

113
00:04:50,699 --> 00:04:53,940
we convert your security team into fire

114
00:04:53,940 --> 00:04:55,020
walkers

115
00:04:55,020 --> 00:04:57,360
to give your business a Competitive Edge

116
00:04:57,360 --> 00:05:01,580
so that you can land and expand

117
00:05:04,620 --> 00:05:06,360
in other words we take your company from

118
00:05:06,360 --> 00:05:09,360
being interested to a mature Dev secops

119
00:05:09,360 --> 00:05:11,400
capability

120
00:05:11,400 --> 00:05:15,020
our process cares about your feelings

121
00:05:15,600 --> 00:05:19,199
these challenges that we're facing here

122
00:05:19,199 --> 00:05:21,300
are very important

123
00:05:21,300 --> 00:05:23,340
and at the end of this talk I'd love to

124
00:05:23,340 --> 00:05:25,560
give you a more detailed overview of the

125
00:05:25,560 --> 00:05:27,419
training presented here I want you all

126
00:05:27,419 --> 00:05:28,560
to walk away from this talk with

127
00:05:28,560 --> 00:05:30,120
understanding of the five key points

128
00:05:30,120 --> 00:05:31,380
that we covered at the beginning of the

129
00:05:31,380 --> 00:05:32,759
presentation

130
00:05:32,759 --> 00:05:34,259
if you want help if you want help

131
00:05:34,259 --> 00:05:35,639
implementing this this is where I come

132
00:05:35,639 --> 00:05:36,780
in

133
00:05:36,780 --> 00:05:39,780
as you can see the weakest link

134
00:05:39,780 --> 00:05:43,400
in any chain is the human being

135
00:05:47,340 --> 00:05:49,320
this is one of the papers that I'm

136
00:05:49,320 --> 00:05:52,620
referencing here from connected papers

137
00:05:52,620 --> 00:05:54,180
what we have found is that we need to

138
00:05:54,180 --> 00:05:55,800
provide situational awareness there has

139
00:05:55,800 --> 00:05:57,419
to be a bridge between the security team

140
00:05:57,419 --> 00:05:59,460
and the development team there has to be

141
00:05:59,460 --> 00:06:01,139
someone that can actually handle this

142
00:06:01,139 --> 00:06:02,580
role

143
00:06:02,580 --> 00:06:04,080
we need to get the right people set up

144
00:06:04,080 --> 00:06:05,580
with the right tools so we can get the

145
00:06:05,580 --> 00:06:07,020
right things done at the right times to

146
00:06:07,020 --> 00:06:08,880
get the right outcomes

147
00:06:08,880 --> 00:06:11,039
and this process was developed by

148
00:06:11,039 --> 00:06:13,139
analyzing these two papers which

149
00:06:13,139 --> 00:06:16,280
describe these challenges

150
00:06:17,400 --> 00:06:19,199
and these things need to be done at the

151
00:06:19,199 --> 00:06:21,360
beginning of the process they can't be

152
00:06:21,360 --> 00:06:24,180
done afterwards so for example we can't

153
00:06:24,180 --> 00:06:26,340
push production code out with the

154
00:06:26,340 --> 00:06:30,440
vulnerabilities so how do you do it

155
00:06:32,220 --> 00:06:34,220
the papers that we're describing here

156
00:06:34,220 --> 00:06:37,319
are very new they're very important and

157
00:06:37,319 --> 00:06:38,340
they're the only ones that talk about

158
00:06:38,340 --> 00:06:40,620
the humanistic element of a management

159
00:06:40,620 --> 00:06:42,300
process

160
00:06:42,300 --> 00:06:43,800
I'm happy to share these with you after

161
00:06:43,800 --> 00:06:46,940
the talk please just ask

162
00:06:46,979 --> 00:06:49,440
so we need a process it's about having a

163
00:06:49,440 --> 00:06:51,780
process right we have to have some way

164
00:06:51,780 --> 00:06:55,400
of moving forward and making progress

165
00:06:56,460 --> 00:06:58,020
so ask yourself how would you like to be

166
00:06:58,020 --> 00:07:01,940
80 more efficient

167
00:07:05,460 --> 00:07:08,000
thank you

168
00:07:08,759 --> 00:07:11,160
our process ensures that management sees

169
00:07:11,160 --> 00:07:12,900
the progress of achieving specific

170
00:07:12,900 --> 00:07:15,120
outcomes and this will help you allocate

171
00:07:15,120 --> 00:07:17,220
the financial resources to support your

172
00:07:17,220 --> 00:07:19,280
project the key is to build security

173
00:07:19,280 --> 00:07:21,780
Champions and these Champions have to be

174
00:07:21,780 --> 00:07:23,759
supported with the right tools to be

175
00:07:23,759 --> 00:07:26,099
able to show management to articulate in

176
00:07:26,099 --> 00:07:28,919
the language of upper management that

177
00:07:28,919 --> 00:07:31,740
we're making progress

178
00:07:31,740 --> 00:07:34,800
so the keys to making a good team

179
00:07:34,800 --> 00:07:37,380
passion accountability clear

180
00:07:37,380 --> 00:07:41,000
communication and execution

181
00:07:41,340 --> 00:07:42,539
so we have the security we have the

182
00:07:42,539 --> 00:07:45,840
Neosporin peer security needs

183
00:07:45,840 --> 00:07:48,479
this is an outline of the suite of tools

184
00:07:48,479 --> 00:07:50,220
that you can use to achieve these

185
00:07:50,220 --> 00:07:51,419
results

186
00:07:51,419 --> 00:07:53,039
first we start with Vera code and we

187
00:07:53,039 --> 00:07:54,060
Supply

188
00:07:54,060 --> 00:07:56,460
Security application testing with

189
00:07:56,460 --> 00:07:58,139
Dynamic application security testing and

190
00:07:58,139 --> 00:07:59,460
container scanning supported by

191
00:07:59,460 --> 00:08:02,759
executive dashboards

192
00:08:02,759 --> 00:08:04,440
we use a custom penetration testing

193
00:08:04,440 --> 00:08:06,599
workflow using burp Suite

194
00:08:06,599 --> 00:08:08,340
all supported by a free compliance

195
00:08:08,340 --> 00:08:10,560
policy framework that can be implemented

196
00:08:10,560 --> 00:08:12,960
with infrastructure as code

197
00:08:12,960 --> 00:08:14,940
and then the results of these

198
00:08:14,940 --> 00:08:16,560
penetration tests can be traced through

199
00:08:16,560 --> 00:08:18,240
elastic Sim which provides a whole other

200
00:08:18,240 --> 00:08:20,099
Suite of benefits for an organization

201
00:08:20,099 --> 00:08:23,220
such as heartbeat alerting monitoring

202
00:08:23,220 --> 00:08:26,039
and traceability

203
00:08:26,039 --> 00:08:29,639
then communicating the vulnerability

204
00:08:29,639 --> 00:08:31,800
reports associated with the specific

205
00:08:31,800 --> 00:08:34,140
binaries in application can be shown in

206
00:08:34,140 --> 00:08:35,820
x-ray reports

207
00:08:35,820 --> 00:08:38,159
then we finally conclude everything with

208
00:08:38,159 --> 00:08:39,839
a custom application Security review

209
00:08:39,839 --> 00:08:42,719
that features a very specific humanistic

210
00:08:42,719 --> 00:08:44,580
management process that gets people to

211
00:08:44,580 --> 00:08:46,500
take accountability for their work and

212
00:08:46,500 --> 00:08:50,180
move forward with positive momentum

213
00:08:50,940 --> 00:08:52,080
so

214
00:08:52,080 --> 00:08:55,220
we'll go into very good

215
00:08:59,040 --> 00:09:00,540
adversity

216
00:09:00,540 --> 00:09:03,000
is the foundation of strength

217
00:09:03,000 --> 00:09:05,580
I implemented this entire thing by

218
00:09:05,580 --> 00:09:06,540
myself

219
00:09:06,540 --> 00:09:09,180
and I made it look easy

220
00:09:09,180 --> 00:09:10,560
you have to find a way to take an

221
00:09:10,560 --> 00:09:13,019
organization from chaos to Clarity no

222
00:09:13,019 --> 00:09:15,720
one wants to lead

223
00:09:15,720 --> 00:09:17,339
but you have to do something at some

224
00:09:17,339 --> 00:09:19,519
point

225
00:09:19,800 --> 00:09:21,720
we all know that success breeds success

226
00:09:21,720 --> 00:09:24,779
and if you aren't first you're last

227
00:09:24,779 --> 00:09:27,000
verico provides an all-inclusive

228
00:09:27,000 --> 00:09:29,640
platform for managing an organization's

229
00:09:29,640 --> 00:09:32,600
security program

230
00:09:33,480 --> 00:09:36,019
this organization allowed 254

231
00:09:36,019 --> 00:09:37,920
vulnerabilities associated with Jackson

232
00:09:37,920 --> 00:09:40,320
databind to sit into sit in their app

233
00:09:40,320 --> 00:09:44,660
sit in their application for years

234
00:09:45,000 --> 00:09:46,380
how long do you think it took me to pull

235
00:09:46,380 --> 00:09:47,459
this one off

236
00:09:47,459 --> 00:09:48,720
how long do you think it took me to

237
00:09:48,720 --> 00:09:51,860
exploit Jackson databind

238
00:09:55,260 --> 00:09:57,920
30 minutes

239
00:09:58,140 --> 00:09:59,399
foreign

240
00:09:59,399 --> 00:10:01,440
as you can see this process after six

241
00:10:01,440 --> 00:10:04,140
months completely removes all those

242
00:10:04,140 --> 00:10:06,959
vulnerabilities everything's gone and

243
00:10:06,959 --> 00:10:09,240
we're back at a steady state

244
00:10:09,240 --> 00:10:12,060
now I implemented all of this

245
00:10:12,060 --> 00:10:14,700
but do you think I went through and

246
00:10:14,700 --> 00:10:16,620
fixed all this code and updated all

247
00:10:16,620 --> 00:10:17,760
these third party

248
00:10:17,760 --> 00:10:20,480
problems

249
00:10:23,720 --> 00:10:27,000
so as I said

250
00:10:27,000 --> 00:10:29,339
we have to build Champions that's the

251
00:10:29,339 --> 00:10:31,440
first step

252
00:10:31,440 --> 00:10:34,320
and a champion has to take ownership and

253
00:10:34,320 --> 00:10:36,480
they have to lead by example but we have

254
00:10:36,480 --> 00:10:38,220
to give them the right tools in the

255
00:10:38,220 --> 00:10:39,600
support structure for them to make

256
00:10:39,600 --> 00:10:41,640
progress when they have the right tools

257
00:10:41,640 --> 00:10:44,519
and they can show not tell

258
00:10:44,519 --> 00:10:46,140
because nobody wants to hear someone

259
00:10:46,140 --> 00:10:49,079
tell them something they need to see it

260
00:10:49,079 --> 00:10:51,240
nobody trusts anyone anymore let's face

261
00:10:51,240 --> 00:10:54,000
it ever since covet nobody trusts anyone

262
00:10:54,000 --> 00:10:56,100
it just doesn't happen

263
00:10:56,100 --> 00:11:00,480
right so you don't have to be an expert

264
00:11:00,480 --> 00:11:02,100
in the field but you need to be able to

265
00:11:02,100 --> 00:11:03,959
articulate what you're doing to upper

266
00:11:03,959 --> 00:11:06,000
management the first step is to Define

267
00:11:06,000 --> 00:11:08,700
that champion right

268
00:11:08,700 --> 00:11:10,620
the state of the security software

269
00:11:10,620 --> 00:11:12,959
report found that when you provide

270
00:11:12,959 --> 00:11:15,480
developers with the proper training they

271
00:11:15,480 --> 00:11:16,680
actually want to take accountability for

272
00:11:16,680 --> 00:11:18,060
the work they enjoy what they're doing

273
00:11:18,060 --> 00:11:20,640
right don't we like learning isn't that

274
00:11:20,640 --> 00:11:21,600
fun

275
00:11:21,600 --> 00:11:24,000
so the first step is finding that

276
00:11:24,000 --> 00:11:25,440
champion and then giving them the right

277
00:11:25,440 --> 00:11:28,680
tools that they can be successful

278
00:11:28,680 --> 00:11:32,239
now we get to the implementation

279
00:11:33,420 --> 00:11:35,160
so

280
00:11:35,160 --> 00:11:37,500
the first step is using static

281
00:11:37,500 --> 00:11:39,899
application security testing to capture

282
00:11:39,899 --> 00:11:41,700
all the vulnerabilities associated with

283
00:11:41,700 --> 00:11:44,279
an application

284
00:11:44,279 --> 00:11:48,660
SAS gives you the static view of the

285
00:11:48,660 --> 00:11:50,339
code it gives you all the specific lines

286
00:11:50,339 --> 00:11:52,079
with the vulnerabilities associated with

287
00:11:52,079 --> 00:11:53,339
an application so you can go back

288
00:11:53,339 --> 00:11:54,420
through the application you can trace

289
00:11:54,420 --> 00:11:57,740
your steps all the way up to the top

290
00:11:58,560 --> 00:12:01,079
it's very simple

291
00:12:01,079 --> 00:12:03,300
the varico platform select scans

292
00:12:03,300 --> 00:12:04,680
analysis

293
00:12:04,680 --> 00:12:06,959
static analysis

294
00:12:06,959 --> 00:12:09,920
just get started

295
00:12:10,380 --> 00:12:11,820
then we use a combined approach with

296
00:12:11,820 --> 00:12:13,440
Dynamic analysis

297
00:12:13,440 --> 00:12:15,720
now Dynamic analysis allows us to look

298
00:12:15,720 --> 00:12:19,200
at the API so we have the static side

299
00:12:19,200 --> 00:12:21,060
which is all of the code now we can look

300
00:12:21,060 --> 00:12:23,040
at the API with Dynamic analysis

301
00:12:23,040 --> 00:12:25,079
who wants to sit there and do a

302
00:12:25,079 --> 00:12:27,180
penetration test and repeat the same

303
00:12:27,180 --> 00:12:29,339
penetration test over and over and over

304
00:12:29,339 --> 00:12:30,120
again

305
00:12:30,120 --> 00:12:31,920
the dynamic analysis allows us to save a

306
00:12:31,920 --> 00:12:33,060
lot of time because we can just look at

307
00:12:33,060 --> 00:12:34,740
the API and we can say oh okay here's

308
00:12:34,740 --> 00:12:36,660
where the boner abilities are this is

309
00:12:36,660 --> 00:12:39,860
the next step that we need to take here

310
00:12:42,860 --> 00:12:45,060
all right

311
00:12:45,060 --> 00:12:48,240
here's an example of a walkthrough of

312
00:12:48,240 --> 00:12:49,680
dynamic analysis

313
00:12:49,680 --> 00:12:51,240
again if anyone has any questions please

314
00:12:51,240 --> 00:12:52,440
stop me at any point in the presentation

315
00:12:52,440 --> 00:12:54,600
what I want to show you is that

316
00:12:54,600 --> 00:12:56,760
we're looking at the API here where the

317
00:12:56,760 --> 00:12:59,100
static scan actually looks at the code

318
00:12:59,100 --> 00:13:00,420
and so what this does is it goes through

319
00:13:00,420 --> 00:13:02,100
and it runs a scan

320
00:13:02,100 --> 00:13:04,019
and then it publishes the results and

321
00:13:04,019 --> 00:13:05,459
then you can see the results in the

322
00:13:05,459 --> 00:13:07,440
platform and you're able to articulate

323
00:13:07,440 --> 00:13:10,399
what you're doing to upper management

324
00:13:10,680 --> 00:13:12,660
it's very simple

325
00:13:12,660 --> 00:13:15,180
let's go to scansa analysis

326
00:13:15,180 --> 00:13:16,920
and click Dynamic scans

327
00:13:16,920 --> 00:13:20,000
that's how you get started

328
00:13:20,220 --> 00:13:22,019
the next step is implementing container

329
00:13:22,019 --> 00:13:23,519
scanning

330
00:13:23,519 --> 00:13:26,040
so container scanning can be combined

331
00:13:26,040 --> 00:13:27,779
with the static application security

332
00:13:27,779 --> 00:13:29,220
test and the dynamic application

333
00:13:29,220 --> 00:13:33,120
security test to provide a comprehensive

334
00:13:33,120 --> 00:13:36,360
security overview for your application

335
00:13:36,360 --> 00:13:38,279
the container is now one of the most

336
00:13:38,279 --> 00:13:40,260
important assets to secure right

337
00:13:40,260 --> 00:13:42,360
basically if I want to hack your

338
00:13:42,360 --> 00:13:43,680
application I'm going to find a

339
00:13:43,680 --> 00:13:44,940
third-party vulnerability in the

340
00:13:44,940 --> 00:13:47,100
container bake it into your image and

341
00:13:47,100 --> 00:13:50,459
then yeah you get hacked is very simple

342
00:13:50,459 --> 00:13:52,019
to implement container scanning and bear

343
00:13:52,019 --> 00:13:53,639
code here's an example

344
00:13:53,639 --> 00:13:55,620
you just use this Source Clear download

345
00:13:55,620 --> 00:13:57,779
which contains an all-in-one bash script

346
00:13:57,779 --> 00:13:59,100
and once you launch this bash script

347
00:13:59,100 --> 00:14:00,300
it'll give you all the vulnerabilities

348
00:14:00,300 --> 00:14:03,779
associated with the application in the

349
00:14:03,779 --> 00:14:05,399
container and then in the verico

350
00:14:05,399 --> 00:14:08,100
platform you can actually see these

351
00:14:08,100 --> 00:14:10,820
vulnerabilities

352
00:14:11,940 --> 00:14:13,560
the next step is supporting all this

353
00:14:13,560 --> 00:14:16,079
with executive dashboards as I said

354
00:14:16,079 --> 00:14:18,600
nobody believes anyone anymore and

355
00:14:18,600 --> 00:14:20,519
Executives aren't going to want to see a

356
00:14:20,519 --> 00:14:22,320
giant wordy report what they want to

357
00:14:22,320 --> 00:14:25,200
actually see are numbers statistics and

358
00:14:25,200 --> 00:14:26,399
graphs that show that you're making

359
00:14:26,399 --> 00:14:28,860
progress in what you're doing

360
00:14:28,860 --> 00:14:30,360
it's very simple

361
00:14:30,360 --> 00:14:32,700
you go to analytics in the platform and

362
00:14:32,700 --> 00:14:34,560
then verico dashboards

363
00:14:34,560 --> 00:14:36,600
then you can start building out the

364
00:14:36,600 --> 00:14:38,519
pre-configured dashboards the next step

365
00:14:38,519 --> 00:14:40,320
is actually building out your own custom

366
00:14:40,320 --> 00:14:42,600
dashboards to refine what you're

367
00:14:42,600 --> 00:14:45,620
actually showing up in management

368
00:14:46,019 --> 00:14:47,519
so

369
00:14:47,519 --> 00:14:49,019
this is important because it ensures

370
00:14:49,019 --> 00:14:51,180
team accountability and using this

371
00:14:51,180 --> 00:14:53,160
process we can show progress again real

372
00:14:53,160 --> 00:14:56,959
leaders show they do not tell

373
00:14:57,480 --> 00:15:00,120
burp Suite is a sword for security

374
00:15:00,120 --> 00:15:02,720
engineers

375
00:15:02,820 --> 00:15:04,500
the only things you really need to know

376
00:15:04,500 --> 00:15:07,620
about burp suite are the burp proxy the

377
00:15:07,620 --> 00:15:10,560
scanner repeater and intruder

378
00:15:10,560 --> 00:15:12,899
we can use this custom penetration

379
00:15:12,899 --> 00:15:15,540
custom penetration testing workflow to

380
00:15:15,540 --> 00:15:16,800
find the vulnerabilities in this

381
00:15:16,800 --> 00:15:18,860
application that the SAS and Das Miss

382
00:15:18,860 --> 00:15:21,839
once we have this we can hit the

383
00:15:21,839 --> 00:15:24,420
application going from line by line all

384
00:15:24,420 --> 00:15:26,639
the way up through the report from SAS

385
00:15:26,639 --> 00:15:28,199
to find these vulnerabilities to get

386
00:15:28,199 --> 00:15:29,579
developers to take accountability for

387
00:15:29,579 --> 00:15:31,939
their work

388
00:15:32,699 --> 00:15:34,920
first up here is configuring the proxy

389
00:15:34,920 --> 00:15:36,959
when you set up your proxy you have a

390
00:15:36,959 --> 00:15:39,120
way of seeing what you're sending to the

391
00:15:39,120 --> 00:15:40,500
application and you can start to design

392
00:15:40,500 --> 00:15:42,959
a payload so you can actually attack the

393
00:15:42,959 --> 00:15:44,519
application but the first step is

394
00:15:44,519 --> 00:15:45,839
getting this proxy set up so that you

395
00:15:45,839 --> 00:15:49,699
can actually use burp the right way

396
00:15:49,800 --> 00:15:51,540
well you gotta learn how to crawl before

397
00:15:51,540 --> 00:15:54,959
you ball so the scanner is a powerful

398
00:15:54,959 --> 00:15:56,339
tool that allows you to find the scope

399
00:15:56,339 --> 00:15:57,899
of your penetration test this gives you

400
00:15:57,899 --> 00:15:59,519
all the endpoints associated with the

401
00:15:59,519 --> 00:16:02,220
application once you've defined your

402
00:16:02,220 --> 00:16:04,500
scope you can start to make a plan this

403
00:16:04,500 --> 00:16:05,459
is the first step you get the

404
00:16:05,459 --> 00:16:07,079
reconnaissance down you're able to

405
00:16:07,079 --> 00:16:08,519
actually see what's in the application

406
00:16:08,519 --> 00:16:10,380
and we can use this to look at the web

407
00:16:10,380 --> 00:16:13,079
traffic and yeah get ready for it you

408
00:16:13,079 --> 00:16:15,720
can use this to generate a PDF report in

409
00:16:15,720 --> 00:16:18,360
HTML format as well

410
00:16:18,360 --> 00:16:21,180
then you can actually send this to upper

411
00:16:21,180 --> 00:16:22,560
management so they can see the results

412
00:16:22,560 --> 00:16:24,779
of this penetration test

413
00:16:24,779 --> 00:16:26,880
then you want to use the repeater this

414
00:16:26,880 --> 00:16:28,380
repeater will allow you to use a custom

415
00:16:28,380 --> 00:16:30,000
payload that you can launch in the

416
00:16:30,000 --> 00:16:33,779
application and you can start to attack

417
00:16:33,779 --> 00:16:37,019
thentruder will launch the actual attack

418
00:16:37,019 --> 00:16:38,639
here's an example of a SQL injection

419
00:16:38,639 --> 00:16:39,660
attack

420
00:16:39,660 --> 00:16:41,639
as you can see this type of screenshot

421
00:16:41,639 --> 00:16:43,459
is what you include in the vulnerability

422
00:16:43,459 --> 00:16:45,720
this is what you include in your report

423
00:16:45,720 --> 00:16:47,820
as a security engineer

424
00:16:47,820 --> 00:16:50,100
and then you rinse and repeat you just

425
00:16:50,100 --> 00:16:51,540
keep doing this over and over again and

426
00:16:51,540 --> 00:16:53,880
you save time in your penetration test

427
00:16:53,880 --> 00:16:55,320
so it's important because we can show

428
00:16:55,320 --> 00:16:57,120
team accountability

429
00:16:57,120 --> 00:16:59,040
and this process shows progress really

430
00:16:59,040 --> 00:17:01,380
to show they don't tell

431
00:17:01,380 --> 00:17:04,079
now we'll go into compliance

432
00:17:04,079 --> 00:17:07,799
so you can build a river in a desert

433
00:17:07,799 --> 00:17:09,419
essentially you can use the CIS

434
00:17:09,419 --> 00:17:11,099
foundation's Benchmark as a free

435
00:17:11,099 --> 00:17:13,020
compliance framework to get started with

436
00:17:13,020 --> 00:17:16,199
this this dashboard here just uses the

437
00:17:16,199 --> 00:17:17,640
guidelines set forth in the CIS

438
00:17:17,640 --> 00:17:19,380
foundation's Benchmark combined with

439
00:17:19,380 --> 00:17:21,720
terraform to implement these guidelines

440
00:17:21,720 --> 00:17:23,459
and allows you to monitor all of your

441
00:17:23,459 --> 00:17:26,040
Cloud resources in one location

442
00:17:26,040 --> 00:17:28,679
as you can see this also provides you

443
00:17:28,679 --> 00:17:30,540
with the logs so you can trace those

444
00:17:30,540 --> 00:17:33,179
steps from that custom penetration test

445
00:17:33,179 --> 00:17:34,440
right here you can see that I'm actually

446
00:17:34,440 --> 00:17:37,679
exploiting the SQL injection in this log

447
00:17:37,679 --> 00:17:39,840
so

448
00:17:39,840 --> 00:17:41,340
the first step here is selecting that

449
00:17:41,340 --> 00:17:43,200
compliance framework in the center for

450
00:17:43,200 --> 00:17:44,280
internet Securities foundations

451
00:17:44,280 --> 00:17:45,900
Benchmark is one of the best because

452
00:17:45,900 --> 00:17:47,400
it's free it's great for new security

453
00:17:47,400 --> 00:17:49,679
Engineers to get started it has easy to

454
00:17:49,679 --> 00:17:52,020
read instructions and once it's read it

455
00:17:52,020 --> 00:17:53,100
just needs to be implemented with

456
00:17:53,100 --> 00:17:55,200
terraform

457
00:17:55,200 --> 00:17:57,720
now the things that you'll need you have

458
00:17:57,720 --> 00:18:00,480
to control access to these resources so

459
00:18:00,480 --> 00:18:02,460
you want to use AWS IM and terraform

460
00:18:02,460 --> 00:18:06,660
provides a provider which has access to

461
00:18:06,660 --> 00:18:08,880
which allows you to use AWS resources

462
00:18:08,880 --> 00:18:11,400
such as IM rules so you can restrict

463
00:18:11,400 --> 00:18:13,559
access to these resources

464
00:18:13,559 --> 00:18:14,820
then you need to set up storage

465
00:18:14,820 --> 00:18:17,100
management once you have your S3 buckets

466
00:18:17,100 --> 00:18:18,840
configured you can link them to

467
00:18:18,840 --> 00:18:21,059
cloudtrail once these are linked to

468
00:18:21,059 --> 00:18:23,400
cloudtrail

469
00:18:23,400 --> 00:18:27,120
you can use AWS filebeat the AWS

470
00:18:27,120 --> 00:18:30,419
following module from elastic to build

471
00:18:30,419 --> 00:18:32,340
all these pre-configured dashboards and

472
00:18:32,340 --> 00:18:33,539
then essentially you just have to flip a

473
00:18:33,539 --> 00:18:35,460
switch it's a simple yaml file and once

474
00:18:35,460 --> 00:18:38,280
you configure it you're done

475
00:18:38,280 --> 00:18:41,280
now go into elastic Sim

476
00:18:41,280 --> 00:18:42,960
so not only does this allow you to trace

477
00:18:42,960 --> 00:18:44,340
those steps from that custom penetration

478
00:18:44,340 --> 00:18:46,020
testing workflow you can use this to set

479
00:18:46,020 --> 00:18:47,520
up alerting you can monitor all those

480
00:18:47,520 --> 00:18:49,080
Cloud resources in that dashboard that

481
00:18:49,080 --> 00:18:50,039
you saw

482
00:18:50,039 --> 00:18:51,900
it allows you to combine multiple tools

483
00:18:51,900 --> 00:18:53,880
all in one interface that your

484
00:18:53,880 --> 00:18:55,020
organization can see everything that's

485
00:18:55,020 --> 00:18:58,080
going on inside of their application

486
00:18:58,080 --> 00:19:00,000
so this is important because it ensures

487
00:19:00,000 --> 00:19:02,100
team accountability and again using this

488
00:19:02,100 --> 00:19:03,660
process we can show progress real

489
00:19:03,660 --> 00:19:06,600
leaders show they don't tell

490
00:19:06,600 --> 00:19:09,360
now we'll go over x-ray

491
00:19:09,360 --> 00:19:12,539
again you can build a river in a desert

492
00:19:12,539 --> 00:19:14,520
this is an example of a devsecops

493
00:19:14,520 --> 00:19:15,480
pipeline

494
00:19:15,480 --> 00:19:18,299
why is it a devsecops pipeline we push

495
00:19:18,299 --> 00:19:20,880
the pain forward pain is a good thing in

496
00:19:20,880 --> 00:19:23,160
security it makes us fix things quicker

497
00:19:23,160 --> 00:19:24,660
and faster

498
00:19:24,660 --> 00:19:26,580
most companies allow their production

499
00:19:26,580 --> 00:19:28,380
code to go out with any without any

500
00:19:28,380 --> 00:19:31,620
security ahead of time so the steps here

501
00:19:31,620 --> 00:19:33,240
are initializing configuring the build

502
00:19:33,240 --> 00:19:35,700
info publishing the info to X-ray and

503
00:19:35,700 --> 00:19:37,440
then running the scan

504
00:19:37,440 --> 00:19:39,720
here is an example of a policy that's

505
00:19:39,720 --> 00:19:41,160
set up an x-ray

506
00:19:41,160 --> 00:19:42,660
this is visible for everyone in the

507
00:19:42,660 --> 00:19:45,299
organization here's an example of a PDF

508
00:19:45,299 --> 00:19:46,679
report that shows all of the

509
00:19:46,679 --> 00:19:47,820
vulnerabilities associated with

510
00:19:47,820 --> 00:19:49,980
application the steps that they need to

511
00:19:49,980 --> 00:19:51,900
take to fix it

512
00:19:51,900 --> 00:19:53,400
so these numbers are going to be talk

513
00:19:53,400 --> 00:19:55,740
and if you have a good report I'll give

514
00:19:55,740 --> 00:19:57,539
you a promotion

515
00:19:57,539 --> 00:19:59,400
so no one wants to do these things the

516
00:19:59,400 --> 00:20:01,140
hard way if your numbers aren't right

517
00:20:01,140 --> 00:20:03,120
you've gone too far and the numbers are

518
00:20:03,120 --> 00:20:04,260
easy to read

519
00:20:04,260 --> 00:20:05,760
how do you do it

520
00:20:05,760 --> 00:20:08,220
my friend Aseem at jfrog provides

521
00:20:08,220 --> 00:20:10,140
amazing technical support

522
00:20:10,140 --> 00:20:12,120
simply just get the documentation write

523
00:20:12,120 --> 00:20:13,980
the code go back to your boss and ask if

524
00:20:13,980 --> 00:20:17,039
it's correct and then do it again

525
00:20:17,039 --> 00:20:18,780
so here's a step for initializing x-ray

526
00:20:18,780 --> 00:20:21,660
you want to use the RT build info plugin

527
00:20:21,660 --> 00:20:24,360
from x-ray this takes the server ID the

528
00:20:24,360 --> 00:20:26,400
username and the password and the URL to

529
00:20:26,400 --> 00:20:28,080
the server and once you connect to it

530
00:20:28,080 --> 00:20:30,299
you're able to initialize x-ray

531
00:20:30,299 --> 00:20:32,280
again this plugin allows you to

532
00:20:32,280 --> 00:20:35,700
configure your build and launch it

533
00:20:35,700 --> 00:20:37,799
you want to use this report in x-ray to

534
00:20:37,799 --> 00:20:39,660
communicate to upper management that

535
00:20:39,660 --> 00:20:41,280
there are severe vulnerabilities in your

536
00:20:41,280 --> 00:20:43,140
application and you want to make sure

537
00:20:43,140 --> 00:20:44,039
the developers are going through and

538
00:20:44,039 --> 00:20:45,720
actually fixing them those results are

539
00:20:45,720 --> 00:20:48,559
shown in the PDF

540
00:20:49,440 --> 00:20:51,600
so again it comes back to accountability

541
00:20:51,600 --> 00:20:54,240
and showing now I'll go over the

542
00:20:54,240 --> 00:20:56,580
application Security review

543
00:20:56,580 --> 00:20:58,980
again you can build a river in a desert

544
00:20:58,980 --> 00:21:01,080
here are the results from one of our

545
00:21:01,080 --> 00:21:03,419
application Security reviews right we've

546
00:21:03,419 --> 00:21:05,100
identified a champion we've moved into a

547
00:21:05,100 --> 00:21:06,539
new certification level we are

548
00:21:06,539 --> 00:21:08,340
consistently scanning and we implemented

549
00:21:08,340 --> 00:21:10,140
Docker container scanning and as you can

550
00:21:10,140 --> 00:21:11,820
see here at the end we're moving forward

551
00:21:11,820 --> 00:21:13,559
we're actually going to fix things and

552
00:21:13,559 --> 00:21:14,880
we're going to provide guidance on the

553
00:21:14,880 --> 00:21:16,200
third party vulnerabilities that need to

554
00:21:16,200 --> 00:21:17,700
be fixed and we're going to prevent

555
00:21:17,700 --> 00:21:18,840
those new vulnerabilities from being

556
00:21:18,840 --> 00:21:20,100
introduced and again this comes back to

557
00:21:20,100 --> 00:21:23,460
five key specific questions

558
00:21:23,460 --> 00:21:26,940
how much time do you spend in meetings

559
00:21:26,940 --> 00:21:29,340
nobody wants to waste time you can

560
00:21:29,340 --> 00:21:32,159
actually automate this entire process we

561
00:21:32,159 --> 00:21:34,380
can automate all of these we can

562
00:21:34,380 --> 00:21:35,820
automate the vulnerabilities that we

563
00:21:35,820 --> 00:21:38,340
find in varicode and actually assign

564
00:21:38,340 --> 00:21:39,840
them to individuals so they can take

565
00:21:39,840 --> 00:21:41,520
accountability for their work

566
00:21:41,520 --> 00:21:43,620
right and the ticketing system that I

567
00:21:43,620 --> 00:21:45,720
would recommend is atlassian jira but

568
00:21:45,720 --> 00:21:48,480
you could also use Trello

569
00:21:48,480 --> 00:21:50,820
so for the reviews you can use Google

570
00:21:50,820 --> 00:21:53,640
Calendar Microsoft teams or Zoom any

571
00:21:53,640 --> 00:21:55,440
platform of your choice the important

572
00:21:55,440 --> 00:21:56,580
thing here

573
00:21:56,580 --> 00:21:59,220
is that these are recorded using Zoom

574
00:21:59,220 --> 00:22:01,320
recordings or manavi screen recorder

575
00:22:01,320 --> 00:22:05,100
manavi is about 99 bucks

576
00:22:05,100 --> 00:22:07,500
so we can automate the ticketing to save

577
00:22:07,500 --> 00:22:09,900
time and this gets individuals to

578
00:22:09,900 --> 00:22:10,980
accountability for their Works they

579
00:22:10,980 --> 00:22:12,059
don't have to waste time in these

580
00:22:12,059 --> 00:22:13,559
meetings because they have their name

581
00:22:13,559 --> 00:22:15,840
assigned to these tickets it comes back

582
00:22:15,840 --> 00:22:18,179
to

583
00:22:18,179 --> 00:22:20,460
leadership

584
00:22:20,460 --> 00:22:23,960
how many of you have lost a good leader

585
00:22:25,740 --> 00:22:29,100
you have to ask the right questions and

586
00:22:29,100 --> 00:22:30,960
there are five specific questions that

587
00:22:30,960 --> 00:22:32,820
you have to ask yourself before you ask

588
00:22:32,820 --> 00:22:34,860
your team and when you ask your team you

589
00:22:34,860 --> 00:22:36,600
ask them in an open environment you

590
00:22:36,600 --> 00:22:38,280
record the meeting you distribute the

591
00:22:38,280 --> 00:22:40,020
meeting minutes before the meeting and

592
00:22:40,020 --> 00:22:41,640
after the meeting and you start the

593
00:22:41,640 --> 00:22:44,520
meeting with the question why

594
00:22:44,520 --> 00:22:46,020
you make sure they read the meeting

595
00:22:46,020 --> 00:22:47,760
minutes before they came in

596
00:22:47,760 --> 00:22:51,120
so this proves that you can move forward

597
00:22:51,120 --> 00:22:56,899
but you have to ask the right questions

598
00:22:58,200 --> 00:22:59,460
let me know if you want these questions

599
00:22:59,460 --> 00:23:02,100
I'm happy to share the details

600
00:23:02,100 --> 00:23:03,600
this is important because it comes back

601
00:23:03,600 --> 00:23:05,700
to accountability and using this process

602
00:23:05,700 --> 00:23:07,440
we can show progress

603
00:23:07,440 --> 00:23:10,140
you don't show we tell

604
00:23:10,140 --> 00:23:13,200
so let's just do a Victory lap here

605
00:23:13,200 --> 00:23:15,179
here we have varicode software

606
00:23:15,179 --> 00:23:16,559
composition analysis setup you can see

607
00:23:16,559 --> 00:23:17,760
all the vulnerabilities in the platform

608
00:23:17,760 --> 00:23:19,440
here's the developer security operations

609
00:23:19,440 --> 00:23:21,360
pipeline shift left push all the pain

610
00:23:21,360 --> 00:23:23,520
forward here's the automated ticketing

611
00:23:23,520 --> 00:23:24,780
the automated ticketing saves you a

612
00:23:24,780 --> 00:23:25,740
bunch of time so you have to sit in

613
00:23:25,740 --> 00:23:28,080
meetings wasting a bunch of time here's

614
00:23:28,080 --> 00:23:29,520
an example of a ticket that actually

615
00:23:29,520 --> 00:23:30,720
shows all the details from a

616
00:23:30,720 --> 00:23:32,460
vulnerability making sure that it gets

617
00:23:32,460 --> 00:23:33,720
fixed you can see it's unassigned here

618
00:23:33,720 --> 00:23:35,340
because typically in my situation I'm

619
00:23:35,340 --> 00:23:36,720
gonna go fix this first then come back

620
00:23:36,720 --> 00:23:38,580
the other guy I'm going to say hey I

621
00:23:38,580 --> 00:23:40,320
fixed it what are you doing

622
00:23:40,320 --> 00:23:42,380
here's an example of a varicode

623
00:23:42,380 --> 00:23:44,220
certification you can see that this

624
00:23:44,220 --> 00:23:45,539
organization was at a horrible State

625
00:23:45,539 --> 00:23:50,299
before it was at 58 moved it up to 93.

626
00:23:53,340 --> 00:23:54,960
here's an example of an e-learning

627
00:23:54,960 --> 00:23:56,039
curriculum that you can set up in the

628
00:23:56,039 --> 00:23:57,799
varico platform

629
00:23:57,799 --> 00:24:00,360
teaches developers how to implement

630
00:24:00,360 --> 00:24:01,980
secure coding and a ton of other great

631
00:24:01,980 --> 00:24:03,539
things

632
00:24:03,539 --> 00:24:04,740
you got to get it set up in the right

633
00:24:04,740 --> 00:24:05,940
way you got to make sure that you start

634
00:24:05,940 --> 00:24:07,200
them out simple and then moves them

635
00:24:07,200 --> 00:24:09,059
through more difficult Concepts

636
00:24:09,059 --> 00:24:12,240
again here's the AWS filebeat module you

637
00:24:12,240 --> 00:24:14,100
can see we have all the API calls we can

638
00:24:14,100 --> 00:24:15,600
see the instances across the globe

639
00:24:15,600 --> 00:24:18,000
here's an example of me popping SQL

640
00:24:18,000 --> 00:24:20,580
injection or some other sort of hack

641
00:24:20,580 --> 00:24:22,980
design again this is the beauty of it

642
00:24:22,980 --> 00:24:26,100
this guy actually put in here he put SQL

643
00:24:26,100 --> 00:24:28,320
injection and you can show him

644
00:24:28,320 --> 00:24:31,340
and then when you go and you say

645
00:24:31,740 --> 00:24:34,580
what are you doing here

646
00:24:36,780 --> 00:24:38,580
all right and then here's another

647
00:24:38,580 --> 00:24:40,679
example of the application uh the

648
00:24:40,679 --> 00:24:42,240
software composition analysis right you

649
00:24:42,240 --> 00:24:43,740
can see that this has gone down a bit

650
00:24:43,740 --> 00:24:46,559
further here's an example continue

651
00:24:46,559 --> 00:24:49,940
this is the automated system

652
00:24:51,960 --> 00:24:54,620
raising examples

653
00:24:55,140 --> 00:24:57,179
over and over again with the shows based

654
00:24:57,179 --> 00:24:58,200
on the results of the certification

655
00:24:58,200 --> 00:25:00,539
level going up you gained better results

656
00:25:00,539 --> 00:25:02,280
the more Sandy run better results you

657
00:25:02,280 --> 00:25:03,000
get

658
00:25:03,000 --> 00:25:06,919
here's 20 microservices that you

659
00:25:13,020 --> 00:25:15,360
really like

660
00:25:15,360 --> 00:25:17,580
here's an example

661
00:25:17,580 --> 00:25:20,780
store in a calendar and have to happen

662
00:25:21,539 --> 00:25:22,919
and here's an example of an executive

663
00:25:22,919 --> 00:25:25,260
dashboard as you can see using this

664
00:25:25,260 --> 00:25:27,659
process over 1500 vulnerabilities were

665
00:25:27,659 --> 00:25:30,799
closed however 6

666
00:25:34,740 --> 00:25:37,340
now

667
00:25:37,500 --> 00:25:41,360
here we go this is the last step here

668
00:25:42,360 --> 00:25:44,279
why is it important you can take this

669
00:25:44,279 --> 00:25:47,159
entire pipeline and you can secure it

670
00:25:47,159 --> 00:25:48,900
with zero trust you don't see the

671
00:25:48,900 --> 00:25:50,340
pipeline

672
00:25:50,340 --> 00:25:52,500
now you do

673
00:25:52,500 --> 00:25:54,860
so

674
00:25:54,900 --> 00:25:56,700
if you want more information please let

675
00:25:56,700 --> 00:25:59,340
me know please take a picture of this uh

676
00:25:59,340 --> 00:26:01,260
this is all my contact information so if

677
00:26:01,260 --> 00:26:03,360
you want to reach out

678
00:26:03,360 --> 00:26:05,360
um

679
00:26:06,360 --> 00:26:11,178
here's a QR code of media wallowing

680
00:26:11,460 --> 00:26:14,100
so please uh tweet at me you know thank

681
00:26:14,100 --> 00:26:18,379
you besides for posting this and have

682
00:26:19,620 --> 00:26:24,059
and uh YouTube channel so this channel

683
00:26:24,059 --> 00:26:26,279
thank you here are the references

684
00:26:26,279 --> 00:26:29,299
associated with this

685
00:26:34,860 --> 00:26:36,659
here are the resources I'm happy to

686
00:26:36,659 --> 00:26:37,740
share this slide with you at the end of

687
00:26:37,740 --> 00:26:40,260
the presentation if you like

688
00:26:40,260 --> 00:26:43,260
applications

689
00:26:44,340 --> 00:26:47,059
any questions

690
00:26:47,100 --> 00:26:49,699
yes

691
00:26:55,080 --> 00:26:57,779
uh yeah there are there are quite a few

692
00:26:57,779 --> 00:26:59,460
the primary reason behind using America

693
00:26:59,460 --> 00:27:01,500
is that it's all music

694
00:27:01,500 --> 00:27:04,760
that's the whole point behind it

695
00:27:05,700 --> 00:27:08,419
any other questions

696
00:27:08,820 --> 00:27:11,240
that's why

697
00:27:11,400 --> 00:27:14,880
yeah so

698
00:27:14,880 --> 00:27:16,860
I think uh that question deserves a

699
00:27:16,860 --> 00:27:19,520
prize here

700
00:27:19,980 --> 00:27:23,600
let's go to the next one

