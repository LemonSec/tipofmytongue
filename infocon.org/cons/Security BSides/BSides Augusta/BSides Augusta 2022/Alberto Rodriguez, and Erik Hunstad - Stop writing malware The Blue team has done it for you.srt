1
00:00:10,800 --> 00:00:14,099
guys welcome to track two

2
00:00:14,099 --> 00:00:17,000
uh this morning

3
00:00:21,900 --> 00:00:26,060
led by Alberto Rodriguez

4
00:00:31,380 --> 00:00:33,300
thanks this is stop writing malware the

5
00:00:33,300 --> 00:00:35,579
blue team has done it for you

6
00:00:35,579 --> 00:00:37,739
by the time I finish this sentence over

7
00:00:37,739 --> 00:00:41,040
200 unique binary samples will have been

8
00:00:41,040 --> 00:00:42,660
submitted to virustotal

9
00:00:42,660 --> 00:00:44,340
this is your real enemy if you're an

10
00:00:44,340 --> 00:00:46,620
offensive security practitioner

11
00:00:46,620 --> 00:00:49,020
it's warehouses full of servers running

12
00:00:49,020 --> 00:00:50,940
machine learning algorithms

13
00:00:50,940 --> 00:00:53,039
doing all these detections against your

14
00:00:53,039 --> 00:00:54,960
binary trying to determine is it

15
00:00:54,960 --> 00:00:56,699
malicious or not

16
00:00:56,699 --> 00:00:58,680
but what if I told you that there was a

17
00:00:58,680 --> 00:01:00,300
way that you could bypass all of this

18
00:01:00,300 --> 00:01:02,340
instead of getting your code run through

19
00:01:02,340 --> 00:01:04,379
these warehouses of machines you could

20
00:01:04,379 --> 00:01:06,960
get a green stamp a check mark a lock

21
00:01:06,960 --> 00:01:09,600
icon that says this is trusted we don't

22
00:01:09,600 --> 00:01:11,640
need to do any more analysis

23
00:01:11,640 --> 00:01:12,780
that's what we're going to talk about

24
00:01:12,780 --> 00:01:15,799
today in this talk

25
00:01:15,840 --> 00:01:17,460
so my name is Eric hunstad I'm the CTO

26
00:01:17,460 --> 00:01:19,920
at 6th gen a cyber security uh

27
00:01:19,920 --> 00:01:21,180
consulting firm out of Annapolis

28
00:01:21,180 --> 00:01:22,979
Maryland I'm also the adversary

29
00:01:22,979 --> 00:01:25,560
simulation leader on that team I'm on

30
00:01:25,560 --> 00:01:27,119
Twitter as bad sector labs and I run a

31
00:01:27,119 --> 00:01:28,380
weekly blog where I scroll through

32
00:01:28,380 --> 00:01:29,759
Twitter and find the interesting things

33
00:01:29,759 --> 00:01:32,460
so that you don't have to

34
00:01:32,460 --> 00:01:33,960
hey good morning everyone Alberto

35
00:01:33,960 --> 00:01:36,240
Rodriguez I work at PayPal doing cybery

36
00:01:36,240 --> 00:01:39,060
things and you can find me on Twitter as

37
00:01:39,060 --> 00:01:41,100
well and uh yeah I hope you guys enjoy

38
00:01:41,100 --> 00:01:43,740
this talk it'll be great

39
00:01:43,740 --> 00:01:45,000
all right so today we're going to go

40
00:01:45,000 --> 00:01:46,439
through the state of offensive security

41
00:01:46,439 --> 00:01:48,119
tooling this is everything from remote

42
00:01:48,119 --> 00:01:50,159
access tools to actions on objective

43
00:01:50,159 --> 00:01:52,200
tools your memory dumpers things like

44
00:01:52,200 --> 00:01:53,759
that we're going to talk about how these

45
00:01:53,759 --> 00:01:55,860
tools are getting detected we'll talk

46
00:01:55,860 --> 00:01:57,299
about how people are starting to write

47
00:01:57,299 --> 00:01:59,280
their own c2s and what that entails

48
00:01:59,280 --> 00:02:01,259
we'll introduce a concept called Trader

49
00:02:01,259 --> 00:02:02,880
wear and then we'll round it out with

50
00:02:02,880 --> 00:02:04,380
some detection ideas to help The Blue

51
00:02:04,380 --> 00:02:06,798
Team out

52
00:02:07,200 --> 00:02:09,239
all right so offensive security tools a

53
00:02:09,239 --> 00:02:11,099
lot of you guys know these everything

54
00:02:11,099 --> 00:02:12,780
from your Cobalt strike probably the

55
00:02:12,780 --> 00:02:14,640
most popular but there are a bunch of

56
00:02:14,640 --> 00:02:16,379
commercial tools that you can go out and

57
00:02:16,379 --> 00:02:18,959
buy that will give you remote access to

58
00:02:18,959 --> 00:02:21,060
systems as long as you run a binary or

59
00:02:21,060 --> 00:02:23,819
load something in memory those are the

60
00:02:23,819 --> 00:02:25,379
commercial offensive security tools a

61
00:02:25,379 --> 00:02:27,239
lot of names up here and then they're

62
00:02:27,239 --> 00:02:28,739
open source versions of these same

63
00:02:28,739 --> 00:02:30,900
things they accomplish the same goals

64
00:02:30,900 --> 00:02:32,520
and there's so many of these Frameworks

65
00:02:32,520 --> 00:02:34,680
too many to list on a slide we've got

66
00:02:34,680 --> 00:02:37,020
some logos up of some of our favorites

67
00:02:37,020 --> 00:02:38,940
but this is kind of the space that we're

68
00:02:38,940 --> 00:02:40,140
talking about with offensive security

69
00:02:40,140 --> 00:02:42,679
tools

70
00:02:44,940 --> 00:02:46,680
these are becoming more and more

71
00:02:46,680 --> 00:02:48,660
detected every day they're known

72
00:02:48,660 --> 00:02:50,879
signatures if you just download the

73
00:02:50,879 --> 00:02:53,400
latest open source uh C2 framework off

74
00:02:53,400 --> 00:02:55,500
of GitHub it's going to get detected as

75
00:02:55,500 --> 00:02:57,420
soon as it hits disk from defender or

76
00:02:57,420 --> 00:02:58,860
whatever EDR that you're running and

77
00:02:58,860 --> 00:03:00,480
that's a good thing it should be

78
00:03:00,480 --> 00:03:03,480
they're also Advanced uh signaturing and

79
00:03:03,480 --> 00:03:05,640
fingerprinting techniques like jarm and

80
00:03:05,640 --> 00:03:09,000
jaw 3 jaw 3s these will actually scan a

81
00:03:09,000 --> 00:03:11,040
server determine its TLS stack and then

82
00:03:11,040 --> 00:03:13,099
see if that matches a known fingerprint

83
00:03:13,099 --> 00:03:16,379
of a offensive security tool or a team

84
00:03:16,379 --> 00:03:18,540
server or something like that

85
00:03:18,540 --> 00:03:20,040
then people have written these rules

86
00:03:20,040 --> 00:03:21,540
like you see in the pictures here where

87
00:03:21,540 --> 00:03:23,280
they're looking specifically for those

88
00:03:23,280 --> 00:03:25,379
names you saw in the keynote uh Travis

89
00:03:25,379 --> 00:03:27,720
ormandy's name is is now a signature for

90
00:03:27,720 --> 00:03:29,819
malware and likewise some of these

91
00:03:29,819 --> 00:03:32,280
authors are also being detected

92
00:03:32,280 --> 00:03:33,840
and then on the right side I just did a

93
00:03:33,840 --> 00:03:36,599
code ql search for Cobalt strike Yar

94
00:03:36,599 --> 00:03:38,760
rules on GitHub and had thousands of

95
00:03:38,760 --> 00:03:41,400
hits so there are specific Yar rules

96
00:03:41,400 --> 00:03:43,140
looking just for specific commercial

97
00:03:43,140 --> 00:03:45,840
open source security tools

98
00:03:45,840 --> 00:03:48,959
and commercial security tools

99
00:03:48,959 --> 00:03:51,360
and this is only getting more and more

100
00:03:51,360 --> 00:03:52,980
intense so you can see this graph is

101
00:03:52,980 --> 00:03:55,379
going to the Moon everyone is scanning

102
00:03:55,379 --> 00:03:57,120
for Cobalt strike and these offensive

103
00:03:57,120 --> 00:03:58,680
security tools so if you're using one of

104
00:03:58,680 --> 00:04:00,599
these know that you are becoming kind of

105
00:04:00,599 --> 00:04:02,519
a target for the blue team and the uh

106
00:04:02,519 --> 00:04:05,900
you know offensive blue teams

107
00:04:07,019 --> 00:04:09,299
and cyber threat intelligence is

108
00:04:09,299 --> 00:04:11,580
confirming this uh Cobalt strike by by

109
00:04:11,580 --> 00:04:13,620
almost 10 times more than any other tool

110
00:04:13,620 --> 00:04:17,040
is being used by actual adversaries so

111
00:04:17,040 --> 00:04:19,320
the adversary simulation tool is now

112
00:04:19,320 --> 00:04:21,238
becoming the actual adversary tool

113
00:04:21,238 --> 00:04:23,639
having become a self-fulfilling prophecy

114
00:04:23,639 --> 00:04:24,960
perhaps

115
00:04:24,960 --> 00:04:27,060
there's also other open source tools

116
00:04:27,060 --> 00:04:29,820
Mythic Covenant and sliver were used in

117
00:04:29,820 --> 00:04:34,139
2021 for actual adversary attacks on on

118
00:04:34,139 --> 00:04:36,479
companies to deploy ransomware so you

119
00:04:36,479 --> 00:04:38,100
can see the table on the bottom shows

120
00:04:38,100 --> 00:04:40,020
how many attacks where we're using those

121
00:04:40,020 --> 00:04:42,360
tools and basically if you can stop

122
00:04:42,360 --> 00:04:45,060
using Cobalt strike or those tools maybe

123
00:04:45,060 --> 00:04:46,139
you'll get around some of those

124
00:04:46,139 --> 00:04:47,580
detections

125
00:04:47,580 --> 00:04:49,740
so naturally what does everyone think

126
00:04:49,740 --> 00:04:51,840
well fine if those are getting detected

127
00:04:51,840 --> 00:04:54,419
I'll just write my own how hard could it

128
00:04:54,419 --> 00:04:55,139
be

129
00:04:55,139 --> 00:04:56,940
there are tons of Open Source E2

130
00:04:56,940 --> 00:04:59,040
Frameworks the last time I checked there

131
00:04:59,040 --> 00:05:01,259
were 97 on this website called the C2

132
00:05:01,259 --> 00:05:02,940
Matrix that attempts to track them all

133
00:05:02,940 --> 00:05:05,100
but there was even One released called

134
00:05:05,100 --> 00:05:07,259
Havoc framework just yesterday so

135
00:05:07,259 --> 00:05:08,880
they're constantly coming out everyone

136
00:05:08,880 --> 00:05:11,100
thinks that well easy I'll just write my

137
00:05:11,100 --> 00:05:12,419
own C2

138
00:05:12,419 --> 00:05:15,000
they don't take into consideration how

139
00:05:15,000 --> 00:05:16,440
difficult it's going to be to maintain

140
00:05:16,440 --> 00:05:19,560
these things Dominic shell here is uh

141
00:05:19,560 --> 00:05:22,139
with MD SEC who released the Nighthawk

142
00:05:22,139 --> 00:05:24,240
commercial OST

143
00:05:24,240 --> 00:05:26,400
and he said it was a full-time job just

144
00:05:26,400 --> 00:05:28,740
to do the QA testing so imagine you've

145
00:05:28,740 --> 00:05:31,500
got to make your C2 framework work not

146
00:05:31,500 --> 00:05:34,259
only on your test box but also on every

147
00:05:34,259 --> 00:05:35,639
box that you could encounter in a

148
00:05:35,639 --> 00:05:37,500
customer environment so your old Windows

149
00:05:37,500 --> 00:05:39,180
7 machines maybe even a Windows XP

150
00:05:39,180 --> 00:05:41,160
machine is it going to cause problems on

151
00:05:41,160 --> 00:05:43,620
that it was a full-time job for a year

152
00:05:43,620 --> 00:05:45,300
and a half for two people working

153
00:05:45,300 --> 00:05:48,860
full-time for for Dominic

154
00:05:48,900 --> 00:05:50,639
So today we're going to say that's maybe

155
00:05:50,639 --> 00:05:52,259
not the way to go what about this thing

156
00:05:52,259 --> 00:05:53,699
called Trader wear

157
00:05:53,699 --> 00:05:55,259
so what if we take software that's

158
00:05:55,259 --> 00:05:57,020
already developed to be stable

159
00:05:57,020 --> 00:06:00,000
cross-platform work on everything it's

160
00:06:00,000 --> 00:06:01,860
already trusted in the environment and

161
00:06:01,860 --> 00:06:03,360
what if we turn that and use that for

162
00:06:03,360 --> 00:06:05,460
red team goals so Trader wear is

163
00:06:05,460 --> 00:06:07,139
software that betrays the trust place in

164
00:06:07,139 --> 00:06:09,000
it to perform these malicious actions

165
00:06:09,000 --> 00:06:11,160
and it's going to allow you to do your

166
00:06:11,160 --> 00:06:15,080
red teams without those detections

167
00:06:15,600 --> 00:06:18,120
this isn't a New Concept we're not uh

168
00:06:18,120 --> 00:06:19,800
we're not that novel it's been around

169
00:06:19,800 --> 00:06:21,479
for a while this is one of my favorite

170
00:06:21,479 --> 00:06:22,919
tweets that says the only difference

171
00:06:22,919 --> 00:06:25,199
between an antivirus and a root kit is a

172
00:06:25,199 --> 00:06:27,060
malicious intent and today I think we're

173
00:06:27,060 --> 00:06:29,639
going to show that that is very true but

174
00:06:29,639 --> 00:06:32,340
first to get a feel of what the blue

175
00:06:32,340 --> 00:06:34,080
team is working with I'll hand it off to

176
00:06:34,080 --> 00:06:37,340
Alberto to talk through that

177
00:06:37,740 --> 00:06:39,660
all right all right you guys hear me

178
00:06:39,660 --> 00:06:41,880
okay in the back thumbs up

179
00:06:41,880 --> 00:06:44,039
cool I'm Gonna Keep My Water just

180
00:06:44,039 --> 00:06:46,259
because my throat's a little itchy

181
00:06:46,259 --> 00:06:48,360
um I'm from Florida and in case you

182
00:06:48,360 --> 00:06:49,620
didn't know it's been raining there a

183
00:06:49,620 --> 00:06:52,380
little bit so yeah fun times all right

184
00:06:52,380 --> 00:06:54,539
cool so defensive primer right you know

185
00:06:54,539 --> 00:06:56,460
we're familiar with these tools like Sim

186
00:06:56,460 --> 00:07:00,060
EDR xdr whatever right we have these

187
00:07:00,060 --> 00:07:02,819
Telemetry enhancers such as sysmon Etc

188
00:07:02,819 --> 00:07:05,340
that can collect better data for us to

189
00:07:05,340 --> 00:07:07,319
enable our security operations right

190
00:07:07,319 --> 00:07:09,840
we're all familiar with these tools and

191
00:07:09,840 --> 00:07:11,400
usually we deploy them in our

192
00:07:11,400 --> 00:07:12,840
environment to get better visibility

193
00:07:12,840 --> 00:07:15,419
better actions on the the defensive

194
00:07:15,419 --> 00:07:17,220
posture that we're trying to get at

195
00:07:17,220 --> 00:07:20,160
so we've all seen this life cycle from

196
00:07:20,160 --> 00:07:22,380
an attacker perspective this is yet

197
00:07:22,380 --> 00:07:24,479
another one of those uh we just wanted

198
00:07:24,479 --> 00:07:27,240
to map what sort of software Solutions

199
00:07:27,240 --> 00:07:30,660
are uh and

200
00:07:30,660 --> 00:07:34,020
what's the term English is evading me

201
00:07:34,020 --> 00:07:36,900
involved there we go thank you involved

202
00:07:36,900 --> 00:07:38,520
in each of the faces right so you have

203
00:07:38,520 --> 00:07:39,840
you know the reconnaissance phase

204
00:07:39,840 --> 00:07:42,780
previous escalation Etc I'm not going to

205
00:07:42,780 --> 00:07:44,220
sit here and talk through all of these

206
00:07:44,220 --> 00:07:46,080
vendors but the point we're trying to

207
00:07:46,080 --> 00:07:48,720
make with this slide is there's a way to

208
00:07:48,720 --> 00:07:51,120
do a phase of the operation with known

209
00:07:51,120 --> 00:07:54,960
trusted software vendors Etc okay and I

210
00:07:54,960 --> 00:07:56,759
just want to quickly focus on the end

211
00:07:56,759 --> 00:07:59,880
there exfiltration and complete mission

212
00:07:59,880 --> 00:08:01,860
um you know the the concept of

213
00:08:01,860 --> 00:08:03,780
exfiltrating data and getting your

214
00:08:03,780 --> 00:08:06,599
objectives out of the environment from I

215
00:08:06,599 --> 00:08:09,060
don't know OneDrive as an example is

216
00:08:09,060 --> 00:08:11,460
becoming more and more of of de facto to

217
00:08:11,460 --> 00:08:13,080
be successful right so keep that in mind

218
00:08:13,080 --> 00:08:15,120
if you're a security analyst monitoring

219
00:08:15,120 --> 00:08:16,440
your network when you see a lot of

220
00:08:16,440 --> 00:08:18,539
OneDrive traffic coming in it might not

221
00:08:18,539 --> 00:08:21,000
necessarily be what you think it is

222
00:08:21,000 --> 00:08:23,879
so for Recon right I love that Meme it's

223
00:08:23,879 --> 00:08:26,699
great okay anyone familiar with rocket

224
00:08:26,699 --> 00:08:29,039
reach sales people raise your hand boom

225
00:08:29,039 --> 00:08:31,259
it's great unfortunately though the free

226
00:08:31,259 --> 00:08:33,000
tier sucks I think you get like five

227
00:08:33,000 --> 00:08:34,979
only so test that out if you're a red

228
00:08:34,979 --> 00:08:37,140
teamer but you can get quite a bit of

229
00:08:37,140 --> 00:08:38,820
information if you target an individual

230
00:08:38,820 --> 00:08:41,700
from rocket reach excellent platform

231
00:08:41,700 --> 00:08:44,399
we have chart Lube this was not modified

232
00:08:44,399 --> 00:08:46,920
whatsoever

233
00:08:46,920 --> 00:08:50,220
your targets yes all right you can map

234
00:08:50,220 --> 00:08:52,320
your targets out with these this type of

235
00:08:52,320 --> 00:08:54,660
software again we have a lot to go

236
00:08:54,660 --> 00:08:56,940
through so I'm not gonna discuss every

237
00:08:56,940 --> 00:08:58,800
detail of the software itself but

238
00:08:58,800 --> 00:09:00,720
definitely check it out finding assets

239
00:09:00,720 --> 00:09:01,920
we're all familiar with things like

240
00:09:01,920 --> 00:09:05,160
Showdown Zoom I Etc there's a million

241
00:09:05,160 --> 00:09:06,660
one tools out there that you can perform

242
00:09:06,660 --> 00:09:08,820
your recon without you having to again

243
00:09:08,820 --> 00:09:10,860
build your own which is the whole intent

244
00:09:10,860 --> 00:09:13,080
of this conversation attack surface

245
00:09:13,080 --> 00:09:15,720
mapping uh software spider foot's been

246
00:09:15,720 --> 00:09:17,700
around for a long time it's open source

247
00:09:17,700 --> 00:09:20,880
you plug in one domain you click go you

248
00:09:20,880 --> 00:09:22,320
go get coffee and then you get

249
00:09:22,320 --> 00:09:23,760
sidetracked because your kids you know

250
00:09:23,760 --> 00:09:25,860
on top of the room all of a sudden

251
00:09:25,860 --> 00:09:28,140
and you come back and you have a

252
00:09:28,140 --> 00:09:29,880
plethora of data around your target

253
00:09:29,880 --> 00:09:31,860
infrastructure you didn't have to code

254
00:09:31,860 --> 00:09:33,779
this yourself it's readily accessible

255
00:09:33,779 --> 00:09:35,519
for you

256
00:09:35,519 --> 00:09:37,620
I'm going to turn things over to Eric so

257
00:09:37,620 --> 00:09:39,839
we can discuss initial access

258
00:09:39,839 --> 00:09:41,519
all right so once you find your targets

259
00:09:41,519 --> 00:09:43,019
you got them on Rocket reach you send

260
00:09:43,019 --> 00:09:44,459
them some emails how are you going to

261
00:09:44,459 --> 00:09:46,080
get initial access into that machine

262
00:09:46,080 --> 00:09:48,060
this is normally where you'd write a

263
00:09:48,060 --> 00:09:49,740
custom loader trying to get around the

264
00:09:49,740 --> 00:09:52,500
EDR that's maybe on that desktop or

265
00:09:52,500 --> 00:09:54,120
you've got to convince them to install

266
00:09:54,120 --> 00:09:56,279
some app that you wrote again trying to

267
00:09:56,279 --> 00:09:58,980
bypass EDR what if you just gave them a

268
00:09:58,980 --> 00:10:00,779
link to Chrome remote desktop and said

269
00:10:00,779 --> 00:10:03,300
hey I'm from it and I need to install

270
00:10:03,300 --> 00:10:05,940
something it's a priority click here and

271
00:10:05,940 --> 00:10:08,339
give me access Chrome remote desktop is

272
00:10:08,339 --> 00:10:10,560
already a trusted piece of software 0

273
00:10:10,560 --> 00:10:13,019
out of 72 on virus total why are you

274
00:10:13,019 --> 00:10:14,880
trying so hard to evade EDR if you can

275
00:10:14,880 --> 00:10:16,980
just use what's already out there or

276
00:10:16,980 --> 00:10:18,720
Chrome extensions this one's a little

277
00:10:18,720 --> 00:10:20,940
trickier if you can get them onto disk

278
00:10:20,940 --> 00:10:22,560
there's a way that you can load them

279
00:10:22,560 --> 00:10:24,899
with the dash dash load Dash extensions

280
00:10:24,899 --> 00:10:28,140
flag where it will load a unpacked

281
00:10:28,140 --> 00:10:29,760
extension and won't even tell the user

282
00:10:29,760 --> 00:10:31,500
so you won't get a prompt you won't get

283
00:10:31,500 --> 00:10:33,240
developer mode or anything like that and

284
00:10:33,240 --> 00:10:34,920
all of a sudden you now have a hook into

285
00:10:34,920 --> 00:10:37,200
that user's browser and as Things become

286
00:10:37,200 --> 00:10:39,000
more SAS heavy everyone's doing

287
00:10:39,000 --> 00:10:40,860
everything through a web app maybe you

288
00:10:40,860 --> 00:10:42,720
only need access to their browser to

289
00:10:42,720 --> 00:10:44,339
accomplish your mission it's not always

290
00:10:44,339 --> 00:10:46,440
about trying to get domain admin if

291
00:10:46,440 --> 00:10:48,120
their valuable information is in their

292
00:10:48,120 --> 00:10:51,560
browser that's where you want to be

293
00:10:51,959 --> 00:10:53,940
another thing if you've ever run an

294
00:10:53,940 --> 00:10:56,640
installer 50 of the time it's going to

295
00:10:56,640 --> 00:10:58,740
be made by this open source uh tool

296
00:10:58,740 --> 00:11:00,779
called Inno setup and this is what

297
00:11:00,779 --> 00:11:02,459
creates that dialog box that you have to

298
00:11:02,459 --> 00:11:03,600
click through you know do you want to

299
00:11:03,600 --> 00:11:05,519
install it in program files and all that

300
00:11:05,519 --> 00:11:08,399
kind of menu there was a POC that came

301
00:11:08,399 --> 00:11:10,320
out where a gentleman figured out how to

302
00:11:10,320 --> 00:11:12,420
run Shell Code inside of this setup

303
00:11:12,420 --> 00:11:14,519
window so you can just put your payload

304
00:11:14,519 --> 00:11:16,740
directly into your Setup Wizard and the

305
00:11:16,740 --> 00:11:18,240
edrs aren't looking at what's happening

306
00:11:18,240 --> 00:11:19,560
in the setup wizard because they do all

307
00:11:19,560 --> 00:11:21,660
kinds of crazy things so you get very

308
00:11:21,660 --> 00:11:24,420
low detection rates and the user is

309
00:11:24,420 --> 00:11:25,800
familiar with clicking through this and

310
00:11:25,800 --> 00:11:27,120
has already been trained to click

311
00:11:27,120 --> 00:11:29,100
through these dialogues and give you

312
00:11:29,100 --> 00:11:32,000
access basically

313
00:11:32,040 --> 00:11:34,320
so once you have access to a machine you

314
00:11:34,320 --> 00:11:35,820
want to stay there right you've earned

315
00:11:35,820 --> 00:11:37,140
your access we'll come back to

316
00:11:37,140 --> 00:11:38,519
persistence this is going to be the the

317
00:11:38,519 --> 00:11:41,399
heavy point of this talk

318
00:11:41,399 --> 00:11:44,220
once you're persisted on a machine it's

319
00:11:44,220 --> 00:11:46,140
time to to look around and see what else

320
00:11:46,140 --> 00:11:48,060
is around and how you can move to those

321
00:11:48,060 --> 00:11:50,220
other machines the the default for this

322
00:11:50,220 --> 00:11:52,140
one is Bloodhound I'm sure any offensive

323
00:11:52,140 --> 00:11:53,940
person in the room who's been in an

324
00:11:53,940 --> 00:11:55,560
internal network has used Bloodhound to

325
00:11:55,560 --> 00:11:57,540
map out the network it's a great tool

326
00:11:57,540 --> 00:12:00,600
but what if it was signed what if it was

327
00:12:00,600 --> 00:12:03,120
trusted what if the organization saw

328
00:12:03,120 --> 00:12:04,980
something running instead of sharp Hound

329
00:12:04,980 --> 00:12:07,620
as malware sharp pound as oh we know

330
00:12:07,620 --> 00:12:09,839
that that's a good defensive tool

331
00:12:09,839 --> 00:12:12,360
well there's Bloodhound Enterprise the

332
00:12:12,360 --> 00:12:14,459
uh the new product from Specter Ops and

333
00:12:14,459 --> 00:12:16,320
it comes with a Enterprise version of

334
00:12:16,320 --> 00:12:18,360
sharphound The Collector that gathers

335
00:12:18,360 --> 00:12:20,880
all this data so if you can get yourself

336
00:12:20,880 --> 00:12:23,040
a copy of Bloodhound Enterprise perhaps

337
00:12:23,040 --> 00:12:25,079
that trusted version of sharphound we'll

338
00:12:25,079 --> 00:12:29,000
get you your data without any detections

339
00:12:29,339 --> 00:12:30,720
there's also a product called ping

340
00:12:30,720 --> 00:12:31,519
Castle

341
00:12:31,519 --> 00:12:34,800
mapping ad for attack paths is not just

342
00:12:34,800 --> 00:12:37,019
an offensive thing the Defenders want to

343
00:12:37,019 --> 00:12:39,720
do it too so let's use their tools to do

344
00:12:39,720 --> 00:12:42,180
that pincastle is another product that

345
00:12:42,180 --> 00:12:43,260
will do that for you will give you a

346
00:12:43,260 --> 00:12:45,600
nice attack map again these binaries

347
00:12:45,600 --> 00:12:47,160
might be trusted in the environment that

348
00:12:47,160 --> 00:12:49,680
you're targeting

349
00:12:49,680 --> 00:12:51,899
and then of course all the big vendors

350
00:12:51,899 --> 00:12:54,959
had to join in ad managed plus tenable

351
00:12:54,959 --> 00:12:56,760
has their own

352
00:12:56,760 --> 00:12:58,860
Etc if you get access especially if the

353
00:12:58,860 --> 00:13:00,180
blue team is already running these

354
00:13:00,180 --> 00:13:01,860
products if you get access and just log

355
00:13:01,860 --> 00:13:05,100
into their big database of all their

356
00:13:05,100 --> 00:13:07,800
machines you already have that data and

357
00:13:07,800 --> 00:13:09,240
you don't need to collect it yourself in

358
00:13:09,240 --> 00:13:12,500
a way that could be detected

359
00:13:13,260 --> 00:13:15,120
this is one of my favorite products it's

360
00:13:15,120 --> 00:13:16,740
called run zero used to be called Rumble

361
00:13:16,740 --> 00:13:19,019
run it's made by the guy that wrote

362
00:13:19,019 --> 00:13:21,839
Metasploit excellent tool for finding

363
00:13:21,839 --> 00:13:24,000
Shadow I.T and what shadow it is that

364
00:13:24,000 --> 00:13:27,000
that Windows 2012 box that you set up 10

365
00:13:27,000 --> 00:13:29,399
years ago to test out that one web app

366
00:13:29,399 --> 00:13:30,720
or something and then you forgot about

367
00:13:30,720 --> 00:13:32,459
and it's still running off in the side

368
00:13:32,459 --> 00:13:34,500
and not being patched and could be

369
00:13:34,500 --> 00:13:36,660
vulnerable to who knows what so this is

370
00:13:36,660 --> 00:13:38,100
a great scanner that you can run once

371
00:13:38,100 --> 00:13:39,300
you're inside a network or even outside

372
00:13:39,300 --> 00:13:41,579
a network to try and find just all the

373
00:13:41,579 --> 00:13:44,459
assets fingerprint everything basically

374
00:13:44,459 --> 00:13:46,380
tell me what's on this network and where

375
00:13:46,380 --> 00:13:50,480
could I possibly go this is a great tool

376
00:13:50,760 --> 00:13:53,160
once you get to a Target that you need

377
00:13:53,160 --> 00:13:54,779
to do something more on you got to do

378
00:13:54,779 --> 00:13:57,620
some actions On Target

379
00:14:02,700 --> 00:14:04,680
you know Microsoft Visual Studio has

380
00:14:04,680 --> 00:14:06,180
these Nifty and I had to double check

381
00:14:06,180 --> 00:14:09,200
with Eric I asked them like five times

382
00:14:09,200 --> 00:14:13,700
is it really called Ajax

383
00:14:14,760 --> 00:14:18,319
being used by a Microsoft

384
00:14:18,540 --> 00:14:20,880
and in fact it is right so you can

385
00:14:20,880 --> 00:14:23,399
actually a Jack the dll using a

386
00:14:23,399 --> 00:14:25,320
Microsoft sign binder binder that is

387
00:14:25,320 --> 00:14:28,440
called inject dll I mean that just blew

388
00:14:28,440 --> 00:14:31,019
my mind right uh driver abuse again

389
00:14:31,019 --> 00:14:34,880
process Explorer Explorer there's

390
00:14:34,980 --> 00:14:37,519
a drive

391
00:14:39,240 --> 00:14:41,880
kill EDR or 80 products in the

392
00:14:41,880 --> 00:14:43,800
environment so now you can tamper with

393
00:14:43,800 --> 00:14:45,839
security products leveraging again

394
00:14:45,839 --> 00:14:47,940
Microsoft signed binaries and I'm sure

395
00:14:47,940 --> 00:14:49,320
if you go hunting for these there's

396
00:14:49,320 --> 00:14:51,660
going to be more here's another one

397
00:14:51,660 --> 00:14:53,339
process hacker everyone here use

398
00:14:53,339 --> 00:14:55,920
processor fill in yeah great tool again

399
00:14:55,920 --> 00:14:59,519
driver abuse uh signed binary Runners uh

400
00:14:59,519 --> 00:15:01,980
we use red JSM as red tumors for a long

401
00:15:01,980 --> 00:15:04,620
time right everyone use red JSM and then

402
00:15:04,620 --> 00:15:06,360
Ms build all these things were getting

403
00:15:06,360 --> 00:15:08,839
costs

404
00:15:08,839 --> 00:15:12,120
exe you can execute code using parts or

405
00:15:12,120 --> 00:15:14,220
executables which are again signed as

406
00:15:14,220 --> 00:15:16,019
well they're at the bottom default

407
00:15:16,019 --> 00:15:18,180
pack.nic there's tons of these living

408
00:15:18,180 --> 00:15:20,339
off the land binaries which you can

409
00:15:20,339 --> 00:15:22,380
leverage their sign you can leverage to

410
00:15:22,380 --> 00:15:24,120
execute your malicious code that you

411
00:15:24,120 --> 00:15:28,279
need sign memory numbers right

412
00:15:29,519 --> 00:15:32,940
Etc instead of dumping you know memory

413
00:15:32,940 --> 00:15:35,220
process from memory using mini cats why

414
00:15:35,220 --> 00:15:37,800
don't we use steam miners when you're a

415
00:15:37,800 --> 00:15:39,240
gamer

416
00:15:39,240 --> 00:15:41,579
yeah there's there's a little you can't

417
00:15:41,579 --> 00:15:43,680
really tell but there's a binary in the

418
00:15:43,680 --> 00:15:45,540
steam installation which allows you to

419
00:15:45,540 --> 00:15:48,480
dump a kid's memory Wicked you can use

420
00:15:48,480 --> 00:15:50,100
your gaming race to do some hacking now

421
00:15:50,100 --> 00:15:54,360
as well obviously a bass I think that's

422
00:15:54,360 --> 00:15:55,740
that's the memory definitely

423
00:15:55,740 --> 00:15:59,100
well guess what not only if you land in

424
00:15:59,100 --> 00:16:00,899
an environment that has a bass and you

425
00:16:00,899 --> 00:16:03,000
leverage that capability or you can just

426
00:16:03,000 --> 00:16:06,300
bring it along right you can just

427
00:16:06,300 --> 00:16:08,160
yourself it's already signed it's

428
00:16:08,160 --> 00:16:09,959
probably not going to get caught this is

429
00:16:09,959 --> 00:16:11,820
very similar to the tactic

430
00:16:11,820 --> 00:16:13,320
attack the folks who did the solarwinds

431
00:16:13,320 --> 00:16:15,480
hack leverage you know they brought like

432
00:16:15,480 --> 00:16:18,300
their own version of a Windows

433
00:16:18,300 --> 00:16:19,380
that's vulnerable and then they

434
00:16:19,380 --> 00:16:21,540
leveraged it and their operations so

435
00:16:21,540 --> 00:16:23,699
again attackers are leveraging these

436
00:16:23,699 --> 00:16:26,040
you know I'm good

437
00:16:26,040 --> 00:16:28,260
for data exploration you're gonna talk

438
00:16:28,260 --> 00:16:30,000
about in the beginning please if you

439
00:16:30,000 --> 00:16:31,199
have your notepad write this down

440
00:16:31,199 --> 00:16:32,639
there's this site called living on the

441
00:16:32,639 --> 00:16:34,560
land trust it inside

442
00:16:34,560 --> 00:16:39,420
we have LOL Biz LOL bass LOL everything

443
00:16:39,420 --> 00:16:42,180
buying for my daughter but now we have a

444
00:16:42,180 --> 00:16:44,699
lot okay which is all these awesome

445
00:16:44,699 --> 00:16:47,279
sites that will allow you to exfiltrate

446
00:16:47,279 --> 00:16:49,680
data you know legitimately quote unquote

447
00:16:49,680 --> 00:16:52,079
right I'm talking one drive cloudflare

448
00:16:52,079 --> 00:16:56,359
uh Google Drive uh Google

449
00:16:58,079 --> 00:17:00,060
that's great people think you're doing

450
00:17:00,060 --> 00:17:03,600
work but I mean technically you are

451
00:17:03,600 --> 00:17:05,339
people think that employers will work

452
00:17:05,339 --> 00:17:08,160
damn they're all over Google drive today

453
00:17:08,160 --> 00:17:10,919
for excellent traded data so that that's

454
00:17:10,919 --> 00:17:13,020
a method of you know getting rid of your

455
00:17:13,020 --> 00:17:15,359
data Network without essentially tipping

456
00:17:15,359 --> 00:17:17,719
your hand off

457
00:17:19,919 --> 00:17:21,480
so now

458
00:17:21,480 --> 00:17:23,459
here's kind of a big chunk of the top

459
00:17:23,459 --> 00:17:25,679
I'm going to turn thing over to Eric so

460
00:17:25,679 --> 00:17:28,380
we can talk about persistence

461
00:17:28,380 --> 00:17:30,419
right so we're focused on persistence

462
00:17:30,419 --> 00:17:31,799
today and we're going to introduce what

463
00:17:31,799 --> 00:17:34,020
we call the Iscariot Suite so this is

464
00:17:34,020 --> 00:17:36,960
how we use blue team or CIS admin tools

465
00:17:36,960 --> 00:17:39,480
to perform our Command and control we're

466
00:17:39,480 --> 00:17:41,039
going to reduce your development efforts

467
00:17:41,039 --> 00:17:43,080
so instead of you doing all the QA and

468
00:17:43,080 --> 00:17:45,539
testing to get your software to work on

469
00:17:45,539 --> 00:17:48,000
every version of Windows plus Linux plus

470
00:17:48,000 --> 00:17:50,580
Mac OS make it stable every update

471
00:17:50,580 --> 00:17:52,260
you've got to have some crazy CI

472
00:17:52,260 --> 00:17:54,360
pipeline instead we're going to use

473
00:17:54,360 --> 00:17:56,280
tools that are already doing that for us

474
00:17:56,280 --> 00:17:58,380
so we're using these trusted and signed

475
00:17:58,380 --> 00:18:00,539
binaries Within These tools to execute

476
00:18:00,539 --> 00:18:02,220
our code and this is going to minimize

477
00:18:02,220 --> 00:18:04,140
your detections and make it even easier

478
00:18:04,140 --> 00:18:05,940
to start off with we'll talk about

479
00:18:05,940 --> 00:18:07,200
Splunk

480
00:18:07,200 --> 00:18:10,740
all right show hands who's you Splunk

481
00:18:10,740 --> 00:18:12,720
or at least know what Splunk is right

482
00:18:12,720 --> 00:18:15,480
it's a pretty popular Sim you know it's

483
00:18:15,480 --> 00:18:17,400
like super cheap you can get it you know

484
00:18:17,400 --> 00:18:20,460
for the low low it's great

485
00:18:20,460 --> 00:18:22,679
um so Splunk right in case you didn't

486
00:18:22,679 --> 00:18:24,780
know what Splunk was you have an agent

487
00:18:24,780 --> 00:18:26,400
component and then you have like a

488
00:18:26,400 --> 00:18:28,799
plethora of server components so to

489
00:18:28,799 --> 00:18:30,840
speak and that server components that

490
00:18:30,840 --> 00:18:33,360
can be search head indexers deployment

491
00:18:33,360 --> 00:18:34,860
servers which we're going to talk about

492
00:18:34,860 --> 00:18:37,799
right uh as a deployment server that

493
00:18:37,799 --> 00:18:40,140
allows you to centrally manage what you

494
00:18:40,140 --> 00:18:43,020
get the agents to do okay then you have

495
00:18:43,020 --> 00:18:44,520
your deployment client which is really

496
00:18:44,520 --> 00:18:46,380
the agent side of things so okay we got

497
00:18:46,380 --> 00:18:48,539
this deployment server over here we got

498
00:18:48,539 --> 00:18:50,220
this client over here they kind of talk

499
00:18:50,220 --> 00:18:52,080
to each other this one sends commands to

500
00:18:52,080 --> 00:18:53,220
the other you can see where I'm going

501
00:18:53,220 --> 00:18:54,539
with those and then you have a

502
00:18:54,539 --> 00:18:56,580
deployment app that app is kind of like

503
00:18:56,580 --> 00:18:58,860
the package deal where the deployment

504
00:18:58,860 --> 00:19:01,500
server right tells the client hey buddy

505
00:19:01,500 --> 00:19:03,059
you're gonna get this app and that app

506
00:19:03,059 --> 00:19:05,000
is going to contain things for you to do

507
00:19:05,000 --> 00:19:07,860
execute scripts load some stuff right

508
00:19:07,860 --> 00:19:10,380
you see where I'm going with this

509
00:19:10,380 --> 00:19:13,860
Splunk as a C2 why not right why do I

510
00:19:13,860 --> 00:19:16,320
have to go build a custom loader you

511
00:19:16,320 --> 00:19:18,299
know pay some exploit Dev to do some

512
00:19:18,299 --> 00:19:19,799
fancy stuff just kidding keep doing that

513
00:19:19,799 --> 00:19:21,059
it's great

514
00:19:21,059 --> 00:19:23,400
um you know a lot of technical work

515
00:19:23,400 --> 00:19:26,220
which is hard let's be real if if you're

516
00:19:26,220 --> 00:19:27,960
out here trying to evade you know the

517
00:19:27,960 --> 00:19:30,120
Sentinel ones crowdstrikes Etc of the

518
00:19:30,120 --> 00:19:32,520
world it's it's not like it used to be

519
00:19:32,520 --> 00:19:34,200
right you can't just roll up and change

520
00:19:34,200 --> 00:19:36,000
a string and call it a day most of the

521
00:19:36,000 --> 00:19:37,679
times nowadays you have to understand

522
00:19:37,679 --> 00:19:40,320
those win32 API calls and really

523
00:19:40,320 --> 00:19:42,720
understand the EDR to evade them so

524
00:19:42,720 --> 00:19:45,360
let's use Splunk as your C2 right we're

525
00:19:45,360 --> 00:19:47,400
going to use obviously the server as our

526
00:19:47,400 --> 00:19:49,380
server side which comes with a great UI

527
00:19:49,380 --> 00:19:51,240
by the way has dark mode for those that

528
00:19:51,240 --> 00:19:53,340
like that and it comes with an agent

529
00:19:53,340 --> 00:19:55,440
side which is the official Splunk

530
00:19:55,440 --> 00:19:57,660
Universal forwarder for for the Splunk

531
00:19:57,660 --> 00:19:59,640
folks in the room uh there has been some

532
00:19:59,640 --> 00:20:01,320
prior research done by this in the past

533
00:20:01,320 --> 00:20:03,539
so I'll link some of those in our get

534
00:20:03,539 --> 00:20:05,760
lab when we release the project which I

535
00:20:05,760 --> 00:20:07,020
think it's already out

536
00:20:07,020 --> 00:20:09,419
so on the server side easy enough I'm

537
00:20:09,419 --> 00:20:11,039
not a Splunk engineer so if you're a

538
00:20:11,039 --> 00:20:12,600
Splunk engineer you're like oh this is

539
00:20:12,600 --> 00:20:15,059
so manual I hear you just bear with me

540
00:20:15,059 --> 00:20:16,740
all right you're going to configure it

541
00:20:16,740 --> 00:20:18,059
to receive data and then you're going to

542
00:20:18,059 --> 00:20:19,740
set it up as a deployment server boom

543
00:20:19,740 --> 00:20:22,500
done awesome on the agent side this is

544
00:20:22,500 --> 00:20:25,020
my implant right awesome

545
00:20:25,020 --> 00:20:26,940
we're going to install the agent we're

546
00:20:26,940 --> 00:20:28,679
going to set it up to be a deployment

547
00:20:28,679 --> 00:20:30,900
client you know this these are Splunk

548
00:20:30,900 --> 00:20:33,240
terms we're going to change the service

549
00:20:33,240 --> 00:20:35,280
name which you can do in Splunk that's

550
00:20:35,280 --> 00:20:36,600
awesome right a little upset

551
00:20:36,600 --> 00:20:39,000
consideration built in nice touch so we

552
00:20:39,000 --> 00:20:40,919
can change the service the service name

553
00:20:40,919 --> 00:20:43,380
we can enable it on reboot there's that

554
00:20:43,380 --> 00:20:45,299
persist side of things and then do the

555
00:20:45,299 --> 00:20:48,780
TLs change supports etc etc okay this is

556
00:20:48,780 --> 00:20:50,100
kind of how it looks the command line

557
00:20:50,100 --> 00:20:52,380
side of things again you can modify that

558
00:20:52,380 --> 00:20:54,360
server's name to make it opsec friendly

559
00:20:54,360 --> 00:20:55,679
which is great

560
00:20:55,679 --> 00:20:57,480
and at the end of the day we're going to

561
00:20:57,480 --> 00:21:00,440
have a C2 framework over https

562
00:21:00,440 --> 00:21:02,400
cross-platform it's going to support all

563
00:21:02,400 --> 00:21:03,840
your different operating systems that

564
00:21:03,840 --> 00:21:06,120
you might you know need to have access

565
00:21:06,120 --> 00:21:09,360
to you can task it remotely and it's all

566
00:21:09,360 --> 00:21:11,820
signed binaries right and then you may

567
00:21:11,820 --> 00:21:13,620
say hey okay sign binary is like what

568
00:21:13,620 --> 00:21:15,480
else well virus total things are pretty

569
00:21:15,480 --> 00:21:17,880
cool as well right no detections

570
00:21:17,880 --> 00:21:20,340
whatsoever I'm talking splunk.exe Splunk

571
00:21:20,340 --> 00:21:24,660
d.exe Splunk Dash wmi.exe more on that

572
00:21:24,660 --> 00:21:26,780
later and then Splunk Dash

573
00:21:26,780 --> 00:21:29,580
powershell.exe again all signed by

574
00:21:29,580 --> 00:21:32,700
Splunk all our Gucci per buyers total

575
00:21:32,700 --> 00:21:34,020
awesome

576
00:21:34,020 --> 00:21:35,700
what does Cisco have to say about this

577
00:21:35,700 --> 00:21:37,200
and I'm not picking on Cisco if you

578
00:21:37,200 --> 00:21:38,580
worked for Cisco or Cisco if you're

579
00:21:38,580 --> 00:21:40,760
listening I'm poor uh

580
00:21:40,760 --> 00:21:42,720
Cisco

581
00:21:42,720 --> 00:21:44,820
you know they have these exclusion lists

582
00:21:44,820 --> 00:21:46,980
on on their on their EDR I think it's

583
00:21:46,980 --> 00:21:48,000
called

584
00:21:48,000 --> 00:21:50,460
um amp right something like that Cisco

585
00:21:50,460 --> 00:21:53,520
amp so they exclude

586
00:21:53,520 --> 00:21:55,980
flunk binaries from triggering their

587
00:21:55,980 --> 00:21:57,840
alerts right like you need Splunk to

588
00:21:57,840 --> 00:22:00,600
work in most environments so sorry Cisco

589
00:22:00,600 --> 00:22:02,159
but thanks for proving the point a

590
00:22:02,159 --> 00:22:04,080
little bit

591
00:22:04,080 --> 00:22:08,580
worth mentioning uh about June of this

592
00:22:08,580 --> 00:22:10,919
year there was a cve that came out that

593
00:22:10,919 --> 00:22:12,299
was like I think it was a nine point

594
00:22:12,299 --> 00:22:15,000
something on the criticality scale it

595
00:22:15,000 --> 00:22:16,500
was two days after this talk got

596
00:22:16,500 --> 00:22:18,600
rejected by Defcon by the way no no you

597
00:22:18,600 --> 00:22:20,580
know I'm just saying so two days after

598
00:22:20,580 --> 00:22:22,799
we receive our rejection this cve came

599
00:22:22,799 --> 00:22:24,960
out and the CV was super interesting

600
00:22:24,960 --> 00:22:27,600
because essentially if a user

601
00:22:27,600 --> 00:22:30,480
compromised a deployment client one

602
00:22:30,480 --> 00:22:32,820
universal forwarder there was a way to

603
00:22:32,820 --> 00:22:35,159
compromise every single deployment

604
00:22:35,159 --> 00:22:37,620
client that married with that deployment

605
00:22:37,620 --> 00:22:41,159
server through Splunk apps so again I

606
00:22:41,159 --> 00:22:42,539
don't know if there's like a coincidence

607
00:22:42,539 --> 00:22:45,000
or anything like that but this came out

608
00:22:45,000 --> 00:22:46,919
shortly after it just goes to show that

609
00:22:46,919 --> 00:22:50,400
the trust that we give to these security

610
00:22:50,400 --> 00:22:52,679
products are something to keep in mind

611
00:22:52,679 --> 00:22:54,960
when you're doing your don't kill me for

612
00:22:54,960 --> 00:22:57,059
this you're threat modeling I I know

613
00:22:57,059 --> 00:22:59,940
buzzword but when you're threat modeling

614
00:22:59,940 --> 00:23:02,340
in your environment you should now be

615
00:23:02,340 --> 00:23:04,260
bringing this sort of Trader wear into

616
00:23:04,260 --> 00:23:06,480
the conversations and into the tabletop

617
00:23:06,480 --> 00:23:09,299
exercises so have a little demo for you

618
00:23:09,299 --> 00:23:13,740
uh let me go ahead and stand behind

619
00:23:13,740 --> 00:23:16,740
cool on the top we have Splunk sorry no

620
00:23:16,740 --> 00:23:18,960
dark mode on the bottom I have the

621
00:23:18,960 --> 00:23:22,380
Splunk server so that's the CLI okay

622
00:23:22,380 --> 00:23:25,320
so I have an agent installed

623
00:23:25,320 --> 00:23:28,260
and there's the version I pulled it up

624
00:23:28,260 --> 00:23:30,539
pretty new I did this like a week ago um

625
00:23:30,539 --> 00:23:31,980
even though the talk you know we've been

626
00:23:31,980 --> 00:23:34,080
working on it for a little bit I go on

627
00:23:34,080 --> 00:23:35,580
interact mode

628
00:23:35,580 --> 00:23:37,320
all this code will be available for you

629
00:23:37,320 --> 00:23:40,380
so there's a quick ipconfig

630
00:23:40,380 --> 00:23:42,240
now at the same time you see the Splunk

631
00:23:42,240 --> 00:23:45,059
app is being sent to the client there it

632
00:23:45,059 --> 00:23:47,340
is Splunk C2 app obviously pick a upsec

633
00:23:47,340 --> 00:23:50,100
friendly name that is written a bunch of

634
00:23:50,100 --> 00:23:51,600
things will happen there at the top a

635
00:23:51,600 --> 00:23:53,520
little Splunk exe action going on

636
00:23:53,520 --> 00:23:55,200
awesome cool and then you can come back

637
00:23:55,200 --> 00:23:57,059
to the UI and then you have your output

638
00:23:57,059 --> 00:23:58,980
that's a pretty nice C2 framework right

639
00:23:58,980 --> 00:24:00,659
just like the standard stuff I mean

640
00:24:00,659 --> 00:24:03,720
we're not hating you can determine what

641
00:24:03,720 --> 00:24:06,480
source type you know you have you can

642
00:24:06,480 --> 00:24:08,340
organize it by the source as well so if

643
00:24:08,340 --> 00:24:10,080
you want to do fancy dashboarding you

644
00:24:10,080 --> 00:24:11,600
can as well

645
00:24:11,600 --> 00:24:15,419
there's my quick you know mandatory Echo

646
00:24:15,419 --> 00:24:17,280
statement into the desktop just so you

647
00:24:17,280 --> 00:24:18,900
know obviously there's code executioning

648
00:24:18,900 --> 00:24:21,179
taking place so I'm writing splunking

649
00:24:21,179 --> 00:24:23,700
and there here I'm getting ready to show

650
00:24:23,700 --> 00:24:26,520
you so it comes with a full same

651
00:24:26,520 --> 00:24:28,799
capability right I can you know put a

652
00:24:28,799 --> 00:24:30,480
whole bunch of deployment clients in one

653
00:24:30,480 --> 00:24:32,640
server class so I can essentially

654
00:24:32,640 --> 00:24:35,220
execute code in the masses I can group

655
00:24:35,220 --> 00:24:37,220
them together maybe I want to Target the

656
00:24:37,220 --> 00:24:39,059
workstations differently than the

657
00:24:39,059 --> 00:24:42,960
servers for lateral movement and here in

658
00:24:42,960 --> 00:24:44,580
the last piece

659
00:24:44,580 --> 00:24:47,820
the wmipoc so for the wmi I'm going to

660
00:24:47,820 --> 00:24:51,320
pause it here for a second this is a

661
00:24:51,320 --> 00:24:53,760
splunk-wmi.exe it's an executable signed

662
00:24:53,760 --> 00:24:57,059
by Splunk Etc that will execute

663
00:24:57,059 --> 00:25:00,900
wmi query language uh syntax okay which

664
00:25:00,900 --> 00:25:02,460
is great I mean you can do a lot with W

665
00:25:02,460 --> 00:25:04,799
I want to hear mess around with wmi yeah

666
00:25:04,799 --> 00:25:08,880
so full wmi stuff I'm I'm game for it

667
00:25:08,880 --> 00:25:11,100
and let me just fast forward it here as

668
00:25:11,100 --> 00:25:13,340
well

669
00:25:13,740 --> 00:25:15,419
foreign

670
00:25:15,419 --> 00:25:18,080
and I have the syntax there you can see

671
00:25:18,080 --> 00:25:20,580
wmi.exe is going to pop up on the top

672
00:25:20,580 --> 00:25:23,520
here boom signed again virus total has

673
00:25:23,520 --> 00:25:25,260
nothing to say about this this is great

674
00:25:25,260 --> 00:25:27,120
I don't think your edrs are going to

675
00:25:27,120 --> 00:25:28,919
scream too much at Splunk because uh

676
00:25:28,919 --> 00:25:30,600
then there'd be like trouble in Paradise

677
00:25:30,600 --> 00:25:32,159
on the vendor Department

678
00:25:32,159 --> 00:25:34,140
and I'll pause it here again there you

679
00:25:34,140 --> 00:25:35,700
can see the queries

680
00:25:35,700 --> 00:25:37,559
everyone here familiar with like women

681
00:25:37,559 --> 00:25:42,120
get object Dash WQ or yeah wql

682
00:25:42,120 --> 00:25:46,679
select star from win32 process or user

683
00:25:46,679 --> 00:25:49,500
account or computer system Etc so you

684
00:25:49,500 --> 00:25:51,179
can perform your entire enumeration

685
00:25:51,179 --> 00:25:53,460
through wmi which again that's pretty

686
00:25:53,460 --> 00:25:55,440
awesome and it's going to be performed

687
00:25:55,440 --> 00:25:57,779
by a signed executable from Splunk

688
00:25:57,779 --> 00:25:59,640
so I mean

689
00:25:59,640 --> 00:26:01,740
and and hey I'm not a Splunk you know

690
00:26:01,740 --> 00:26:02,700
wizard

691
00:26:02,700 --> 00:26:04,799
but I'm pretty sure I can do some fancy

692
00:26:04,799 --> 00:26:07,380
dashboarding too right and make it look

693
00:26:07,380 --> 00:26:09,659
really nice so I didn't play around with

694
00:26:09,659 --> 00:26:12,059
that capability of the Sim but a gut

695
00:26:12,059 --> 00:26:14,580
tells me that you know it'll be good for

696
00:26:14,580 --> 00:26:16,260
your Ops if you do some dashboarding as

697
00:26:16,260 --> 00:26:16,919
well

698
00:26:16,919 --> 00:26:19,760
so

699
00:26:19,980 --> 00:26:23,220
that was Splunk okay again the co the

700
00:26:23,220 --> 00:26:25,620
code that we used is going to be readily

701
00:26:25,620 --> 00:26:27,360
accessible I think you can Google it now

702
00:26:27,360 --> 00:26:29,820
there will be a QR code at the end

703
00:26:29,820 --> 00:26:32,279
you can trust us all right

704
00:26:32,279 --> 00:26:34,260
um just the final piece I want to hit on

705
00:26:34,260 --> 00:26:36,419
uh before I turn things over to the next

706
00:26:36,419 --> 00:26:39,840
product we weaponize edrs xdrs you know

707
00:26:39,840 --> 00:26:42,360
that whole shebang right that could be a

708
00:26:42,360 --> 00:26:43,860
whole talk on its own I'm talking The

709
00:26:43,860 --> 00:26:45,720
Sentinel ones the crowd strikes all

710
00:26:45,720 --> 00:26:47,880
those folks that have rce on your

711
00:26:47,880 --> 00:26:50,220
endpoints right we all know about it and

712
00:26:50,220 --> 00:26:52,620
you know it kind of like we openly joke

713
00:26:52,620 --> 00:26:55,260
about it at work but really you know

714
00:26:55,260 --> 00:26:56,820
hold the vendors accountable to

715
00:26:56,820 --> 00:26:59,059
providing those artifacts to understand

716
00:26:59,059 --> 00:27:01,740
what's good and what's not good you know

717
00:27:01,740 --> 00:27:03,299
within the realm of possibility from

718
00:27:03,299 --> 00:27:04,500
their products right what is the

719
00:27:04,500 --> 00:27:06,360
Baseline what is the parent to child

720
00:27:06,360 --> 00:27:08,340
relationships what's really supposed to

721
00:27:08,340 --> 00:27:11,279
happen a lot of these EDR xdr tools I

722
00:27:11,279 --> 00:27:14,520
mean full-fledged software suite right

723
00:27:14,520 --> 00:27:16,740
excuse me you have our back right you

724
00:27:16,740 --> 00:27:18,299
have all the dashboarding all the

725
00:27:18,299 --> 00:27:19,260
reporting

726
00:27:19,260 --> 00:27:21,720
uh the code execution obviously you know

727
00:27:21,720 --> 00:27:24,299
it'll be a plus and a lot of the times

728
00:27:24,299 --> 00:27:26,700
when you have multiple adrs it used to

729
00:27:26,700 --> 00:27:28,080
be back in the days they like fought

730
00:27:28,080 --> 00:27:30,120
each other right anyone here like you

731
00:27:30,120 --> 00:27:31,500
installed one EDR and they started

732
00:27:31,500 --> 00:27:32,820
fighting each other I think nowadays

733
00:27:32,820 --> 00:27:34,679
they don't really fight too much I don't

734
00:27:34,679 --> 00:27:36,240
know I like my experience especially

735
00:27:36,240 --> 00:27:38,159
when I was a consultant I would install

736
00:27:38,159 --> 00:27:39,720
things on top of each other and I didn't

737
00:27:39,720 --> 00:27:41,460
have too many issues like I used to back

738
00:27:41,460 --> 00:27:44,340
in the days right so keep that in mind

739
00:27:44,340 --> 00:27:46,500
because an attacker can bring in some of

740
00:27:46,500 --> 00:27:49,320
these software tools like an EDR anyone

741
00:27:49,320 --> 00:27:51,120
here familiar with like the ateras of

742
00:27:51,120 --> 00:27:54,840
the world right rmms uh zabix all these

743
00:27:54,840 --> 00:27:56,880
Jokers well they can bring them into the

744
00:27:56,880 --> 00:27:58,200
environment and it can really cause

745
00:27:58,200 --> 00:28:00,419
Havoc into your infrastructure there's

746
00:28:00,419 --> 00:28:02,760
uh you know obligatory Twitter posts

747
00:28:02,760 --> 00:28:06,059
from rastamouse himself elastic recently

748
00:28:06,059 --> 00:28:07,620
announced that you know they have like

749
00:28:07,620 --> 00:28:10,380
an EDR capability that allows you to

750
00:28:10,380 --> 00:28:12,480
Modern you know code execution et cetera

751
00:28:12,480 --> 00:28:14,700
et cetera so obviously red teamers on

752
00:28:14,700 --> 00:28:16,559
Twitter are like cool another rce tool

753
00:28:16,559 --> 00:28:19,260
right another C2 framework so

754
00:28:19,260 --> 00:28:23,039
turn things over for some always query

755
00:28:23,039 --> 00:28:24,900
all right so we got this Splunk we got

756
00:28:24,900 --> 00:28:26,520
we talked about edrs there's another

757
00:28:26,520 --> 00:28:28,679
tool called OS query you might not have

758
00:28:28,679 --> 00:28:30,120
heard about this one it started at

759
00:28:30,120 --> 00:28:32,520
Facebook which is now meta they turn it

760
00:28:32,520 --> 00:28:34,080
over to the Linux Foundation but what it

761
00:28:34,080 --> 00:28:38,100
lets you do is write SQL like uh queries

762
00:28:38,100 --> 00:28:40,620
against any computer that has an OS

763
00:28:40,620 --> 00:28:42,960
query agent installed on it so if you're

764
00:28:42,960 --> 00:28:44,820
familiar with SQL syntax you can do your

765
00:28:44,820 --> 00:28:47,159
selects you can do joins where Clauses

766
00:28:47,159 --> 00:28:49,140
all that kind of stuff to look at

767
00:28:49,140 --> 00:28:50,820
information about your endpoints

768
00:28:50,820 --> 00:28:53,880
Facebook used it to just monitor their

769
00:28:53,880 --> 00:28:55,740
entire fleet of servers as well as their

770
00:28:55,740 --> 00:28:57,179
workstation endpoints and it's really

771
00:28:57,179 --> 00:28:59,700
powerful it's a great tool but it's also

772
00:28:59,700 --> 00:29:01,559
signed and it comes from a trusted

773
00:29:01,559 --> 00:29:03,960
source and it's whitelisted on virus

774
00:29:03,960 --> 00:29:05,820
total so obviously we're going to see

775
00:29:05,820 --> 00:29:08,340
what can we do with it on the left side

776
00:29:08,340 --> 00:29:10,380
you'll see that's an example query where

777
00:29:10,380 --> 00:29:12,480
it's just looking for show me all the

778
00:29:12,480 --> 00:29:14,640
processes that are listening globally on

779
00:29:14,640 --> 00:29:16,559
an endpoint and give me their name the

780
00:29:16,559 --> 00:29:17,940
port in the pit so that's kind of an

781
00:29:17,940 --> 00:29:20,940
example of what you can do with OS query

782
00:29:20,940 --> 00:29:22,679
on the right side you'll see there are

783
00:29:22,679 --> 00:29:24,500
many open source as well as commercial

784
00:29:24,500 --> 00:29:27,539
dashboards this one's called Fleet and

785
00:29:27,539 --> 00:29:29,640
you can get a web interface as well as a

786
00:29:29,640 --> 00:29:31,440
command line interface to query your

787
00:29:31,440 --> 00:29:34,039
endpoints from

788
00:29:34,380 --> 00:29:35,760
all right so on the left side I've

789
00:29:35,760 --> 00:29:37,260
installed Fleet and I'm connected to one

790
00:29:37,260 --> 00:29:39,480
of my test endpoints you'll see it has a

791
00:29:39,480 --> 00:29:41,399
lot of things like disk space the status

792
00:29:41,399 --> 00:29:43,700
the last check-in the first check-in

793
00:29:43,700 --> 00:29:47,580
your agent options how how long it takes

794
00:29:47,580 --> 00:29:50,520
to call in the TLs options

795
00:29:50,520 --> 00:29:52,500
sounds a lot like a C2 if you ask me

796
00:29:52,500 --> 00:29:54,840
there's no difference here between an

797
00:29:54,840 --> 00:29:56,700
offensive tool and what we're seeing

798
00:29:56,700 --> 00:29:58,559
with OS query on the right side there's

799
00:29:58,559 --> 00:30:01,200
an example query that I did in the web

800
00:30:01,200 --> 00:30:02,820
interface and it just shows you the

801
00:30:02,820 --> 00:30:05,100
power it's tying the process and the PID

802
00:30:05,100 --> 00:30:07,080
and the process name to the listening

803
00:30:07,080 --> 00:30:09,059
Port so you can combine all that data so

804
00:30:09,059 --> 00:30:12,059
that's how you would use it normally

805
00:30:12,059 --> 00:30:14,700
so to recap OS query it has no

806
00:30:14,700 --> 00:30:16,380
noticeable artifacts and installs as a

807
00:30:16,380 --> 00:30:18,000
service so if you put it on a machine

808
00:30:18,000 --> 00:30:20,159
the user isn't going to get a tray icon

809
00:30:20,159 --> 00:30:21,899
or a pop-up or anything like that it

810
00:30:21,899 --> 00:30:23,460
installs in the background it

811
00:30:23,460 --> 00:30:25,320
communicates over https so everything's

812
00:30:25,320 --> 00:30:27,779
encrypted it's cross-platform across all

813
00:30:27,779 --> 00:30:29,940
three major os's you can task it

814
00:30:29,940 --> 00:30:31,320
remotely either through the command line

815
00:30:31,320 --> 00:30:33,720
or the web interface the binary signed

816
00:30:33,720 --> 00:30:36,299
by senior software engineer at meta and

817
00:30:36,299 --> 00:30:38,100
it does signed automatic updates so you

818
00:30:38,100 --> 00:30:39,539
can keep your agent up to date with the

819
00:30:39,539 --> 00:30:41,580
latest features it also supports this

820
00:30:41,580 --> 00:30:44,039
thing called extensions and so that is

821
00:30:44,039 --> 00:30:45,120
very interesting and we're going to get

822
00:30:45,120 --> 00:30:47,700
into that today with Iscariot OS query

823
00:30:47,700 --> 00:30:50,100
and that's our extension for OS query

824
00:30:50,100 --> 00:30:52,679
that we wrote it's written in go and it

825
00:30:52,679 --> 00:30:55,020
allows you to execute binaries directly

826
00:30:55,020 --> 00:30:57,299
execute shell commands with a full shell

827
00:30:57,299 --> 00:30:58,380
environment

828
00:30:58,380 --> 00:31:00,600
it can run unmodified Cobalt strike

829
00:31:00,600 --> 00:31:02,100
Buffs if you've used Cobalt strike

830
00:31:02,100 --> 00:31:05,039
there's a module structure called a

831
00:31:05,039 --> 00:31:07,380
beacon object file or both that allows

832
00:31:07,380 --> 00:31:09,899
you to directly access the windows API

833
00:31:09,899 --> 00:31:11,279
through your process so you're not

834
00:31:11,279 --> 00:31:12,960
spawning or forking or doing anything

835
00:31:12,960 --> 00:31:15,179
like that it also runs c-sharp

836
00:31:15,179 --> 00:31:17,220
assemblies directly in memory in your

837
00:31:17,220 --> 00:31:19,740
same process space so we'll load the CLR

838
00:31:19,740 --> 00:31:21,539
and actually run those binaries for you

839
00:31:21,539 --> 00:31:24,720
and it patches etw and amsy so you won't

840
00:31:24,720 --> 00:31:26,340
get caught

841
00:31:26,340 --> 00:31:29,100
so here's an example query of us

842
00:31:29,100 --> 00:31:32,580
querying who am I slash priv with u

843
00:31:32,580 --> 00:31:34,200
shell equals zero so that means we're

844
00:31:34,200 --> 00:31:36,419
just going to run the Who Am i.exe

845
00:31:36,419 --> 00:31:38,880
binary directly give us that output and

846
00:31:38,880 --> 00:31:41,399
put it in a a SQL table

847
00:31:41,399 --> 00:31:44,700
it's a little uh user unfriendly with

848
00:31:44,700 --> 00:31:46,799
output because you have to return an

849
00:31:46,799 --> 00:31:49,980
element for each row in the column so

850
00:31:49,980 --> 00:31:51,600
that's why you see a lot of repeats but

851
00:31:51,600 --> 00:31:53,340
don't worry we've cleaned this up into a

852
00:31:53,340 --> 00:31:55,020
nice shell for you

853
00:31:55,020 --> 00:31:56,700
can also execute shell commands with

854
00:31:56,700 --> 00:31:58,200
full shell environment so this is going

855
00:31:58,200 --> 00:32:00,779
to actually spawn cmd.exe and allow you

856
00:32:00,779 --> 00:32:02,940
to you know go into environment

857
00:32:02,940 --> 00:32:05,279
variables you can pipe commands together

858
00:32:05,279 --> 00:32:07,020
all the things that you would normally

859
00:32:07,020 --> 00:32:09,000
do in a shell you can now do through OS

860
00:32:09,000 --> 00:32:10,140
query

861
00:32:10,140 --> 00:32:12,659
and these shell processes are going to

862
00:32:12,659 --> 00:32:15,120
be child processes of your signed binary

863
00:32:15,120 --> 00:32:19,559
from meta which is great

864
00:32:19,559 --> 00:32:21,480
Cobalt strike Buffs so if you want to

865
00:32:21,480 --> 00:32:22,919
get a little more advanced with your

866
00:32:22,919 --> 00:32:25,320
tradecraft and you want to do some uh

867
00:32:25,320 --> 00:32:28,320
low-level win32 API calls now you don't

868
00:32:28,320 --> 00:32:30,899
have to write your own uh you know low

869
00:32:30,899 --> 00:32:32,940
level C code for Windows you can take

870
00:32:32,940 --> 00:32:34,740
what's off of GitHub people have already

871
00:32:34,740 --> 00:32:36,539
pre-compiled these Cobalt strike Buffs

872
00:32:36,539 --> 00:32:39,059
and you can run them through OS query

873
00:32:39,059 --> 00:32:40,679
and so this is an example of just a

874
00:32:40,679 --> 00:32:42,360
simple one that's getting the ARP table

875
00:32:42,360 --> 00:32:44,520
from a Windows machine and again this is

876
00:32:44,520 --> 00:32:46,320
not forking or running any processes

877
00:32:46,320 --> 00:32:48,240
it's directly inside that process space

878
00:32:48,240 --> 00:32:52,100
calling those windows apis

879
00:32:52,260 --> 00:32:54,419
you can even pass arguments to these

880
00:32:54,419 --> 00:32:56,520
Buffs it's a little bit dirty right now

881
00:32:56,520 --> 00:32:59,460
especially in the query syntax you have

882
00:32:59,460 --> 00:33:01,140
to know the type of the argument and

883
00:33:01,140 --> 00:33:02,760
pass it in that way but it is possible

884
00:33:02,760 --> 00:33:06,320
to give arguments to the boss

885
00:33:06,779 --> 00:33:10,100
all right let's see a demo

886
00:33:12,419 --> 00:33:14,220
all right there's no tricks up my sleeve

887
00:33:14,220 --> 00:33:16,500
antivirus is on so the latest Windows

888
00:33:16,500 --> 00:33:18,840
Defender on Windows 11 Enterprise I did

889
00:33:18,840 --> 00:33:20,940
turn off Cloud delivery and automatic

890
00:33:20,940 --> 00:33:22,320
sample submissions so that Microsoft

891
00:33:22,320 --> 00:33:25,200
doesn't get all my stuff right away on

892
00:33:25,200 --> 00:33:27,299
the left side you'll see the iscaria

893
00:33:27,299 --> 00:33:30,059
process is running as a child of os

894
00:33:30,059 --> 00:33:32,460
query D and so that's our sign process

895
00:33:32,460 --> 00:33:34,080
OS query D and then our extension is

896
00:33:34,080 --> 00:33:37,260
running as a child of that I'm ssh in to

897
00:33:37,260 --> 00:33:39,779
the fleet server so this is the control

898
00:33:39,779 --> 00:33:42,419
server for all my OS query agents and

899
00:33:42,419 --> 00:33:43,860
I'm going to run our client that we

900
00:33:43,860 --> 00:33:45,240
wrote

901
00:33:45,240 --> 00:33:47,100
first it's going to give us the hosts

902
00:33:47,100 --> 00:33:48,179
that are currently connected to this

903
00:33:48,179 --> 00:33:50,039
system right now we've only got one our

904
00:33:50,039 --> 00:33:51,840
window Windows 11 test machine that's

905
00:33:51,840 --> 00:33:53,340
the one you can see in the background on

906
00:33:53,340 --> 00:33:55,200
the left it's going to ask us what we

907
00:33:55,200 --> 00:33:56,940
want to operate on and then give us four

908
00:33:56,940 --> 00:33:58,500
options of how we want to do it that's

909
00:33:58,500 --> 00:34:00,600
the four options I just went through so

910
00:34:00,600 --> 00:34:03,000
to start off with we'll execute a shell

911
00:34:03,000 --> 00:34:04,919
command and to demonstrate the full

912
00:34:04,919 --> 00:34:07,200
power of the shell I will pipe a task

913
00:34:07,200 --> 00:34:09,480
list into a fine stir so you can chain

914
00:34:09,480 --> 00:34:11,520
multiple commands together and we'll see

915
00:34:11,520 --> 00:34:14,159
who's running a CMD on this box

916
00:34:14,159 --> 00:34:16,260
after a little bit it comes back and we

917
00:34:16,260 --> 00:34:18,659
see the user that's already peed in has

918
00:34:18,659 --> 00:34:20,399
a couple shells open and then there's us

919
00:34:20,399 --> 00:34:23,219
at the bottom running as services and we

920
00:34:23,219 --> 00:34:27,359
have a CMD to run this command chain

921
00:34:27,359 --> 00:34:30,179
if we go back we can execute exes

922
00:34:30,179 --> 00:34:33,359
directly without spawning a CMD and so

923
00:34:33,359 --> 00:34:34,679
this time I'm going to do that same who

924
00:34:34,679 --> 00:34:37,500
am I slash priv and this will task the

925
00:34:37,500 --> 00:34:40,020
agent to just run that exe directly and

926
00:34:40,020 --> 00:34:42,839
then give us the outpat output back in a

927
00:34:42,839 --> 00:34:45,060
nice format

928
00:34:45,060 --> 00:34:46,500
it was a little too quick to see on the

929
00:34:46,500 --> 00:34:48,300
left side but it did actually spawn that

930
00:34:48,300 --> 00:34:51,300
exe and give us the output

931
00:34:51,300 --> 00:34:53,699
next we'll run a boss in this case I'm

932
00:34:53,699 --> 00:34:55,020
going to run the art buff the same one

933
00:34:55,020 --> 00:34:57,359
that we did in the in the slides this

934
00:34:57,359 --> 00:34:59,339
won't spawn any processes it's going to

935
00:34:59,339 --> 00:35:01,980
directly call those apis within our

936
00:35:01,980 --> 00:35:04,260
process context and give us the output

937
00:35:04,260 --> 00:35:05,520
back

938
00:35:05,520 --> 00:35:07,980
and these will you can run any Cobalt

939
00:35:07,980 --> 00:35:10,440
strike buff without modification they

940
00:35:10,440 --> 00:35:12,540
work out of the box

941
00:35:12,540 --> 00:35:15,420
same thing with c-sharp assemblies so

942
00:35:15,420 --> 00:35:16,980
here I'm going to run seat belt with

943
00:35:16,980 --> 00:35:19,740
just the anti-virus function of that to

944
00:35:19,740 --> 00:35:21,119
display the antivirus on this machine

945
00:35:21,119 --> 00:35:23,280
this is going to patch event tracing for

946
00:35:23,280 --> 00:35:26,880
Windows as well as the anti-malware scan

947
00:35:26,880 --> 00:35:28,740
interface so you're not going to get

948
00:35:28,740 --> 00:35:31,859
detected by amsi or any product that's

949
00:35:31,859 --> 00:35:34,859
using etw this is a stock seat belt

950
00:35:34,859 --> 00:35:37,380
directly off of GitHub no modifications

951
00:35:37,380 --> 00:35:38,940
so you don't need to change anything

952
00:35:38,940 --> 00:35:41,460
about your existing c-sharp tooling to

953
00:35:41,460 --> 00:35:46,339
use it in OS query with this carrier

954
00:35:47,940 --> 00:35:50,339
all right as we start to wrap up what

955
00:35:50,339 --> 00:35:51,960
can we do about this and and what does

956
00:35:51,960 --> 00:35:53,820
it do to help us

957
00:35:53,820 --> 00:35:56,700
so we talked about how people have gone

958
00:35:56,700 --> 00:35:59,339
to creating their own c2s to try and get

959
00:35:59,339 --> 00:36:01,320
around the massive amounts of detections

960
00:36:01,320 --> 00:36:02,820
there are for Cobalt strike and other

961
00:36:02,820 --> 00:36:05,000
similar commercial and open source c2s

962
00:36:05,000 --> 00:36:07,380
unfortunately if you're a red teamer

963
00:36:07,380 --> 00:36:09,240
it's hard to find time to do this that

964
00:36:09,240 --> 00:36:12,240
you can justify as a billable hour for a

965
00:36:12,240 --> 00:36:14,099
client if you're on an engagement when

966
00:36:14,099 --> 00:36:15,660
you go to an engagement they expect you

967
00:36:15,660 --> 00:36:17,099
to have a tool set that's going to be

968
00:36:17,099 --> 00:36:19,260
able to perform the objectives and help

969
00:36:19,260 --> 00:36:21,119
them get better at security so

970
00:36:21,119 --> 00:36:22,560
oftentimes people are doing this after

971
00:36:22,560 --> 00:36:25,680
hours or it's it's on overhead time and

972
00:36:25,680 --> 00:36:27,420
it's tough to find a way to cover these

973
00:36:27,420 --> 00:36:29,700
costs so if you're not a boutiquing red

974
00:36:29,700 --> 00:36:32,880
a boutique red team shop it could be

975
00:36:32,880 --> 00:36:35,880
difficult to get a high quality C2 that

976
00:36:35,880 --> 00:36:37,500
you know Works across versions and

977
00:36:37,500 --> 00:36:38,820
things like that

978
00:36:38,820 --> 00:36:40,500
also the barrier to entry to writing

979
00:36:40,500 --> 00:36:42,660
your own C2 these days is very high back

980
00:36:42,660 --> 00:36:45,240
in the day you could take command run it

981
00:36:45,240 --> 00:36:47,640
through base64 and then decode It On

982
00:36:47,640 --> 00:36:49,260
Target and run it in memory and you'd be

983
00:36:49,260 --> 00:36:52,320
okay it doesn't fly anymore the edrs

984
00:36:52,320 --> 00:36:54,960
have gotten very good and the AI ml

985
00:36:54,960 --> 00:36:57,119
blockchain whatever Voodoo plus some big

986
00:36:57,119 --> 00:36:59,820
data it's actually pretty good so it

987
00:36:59,820 --> 00:37:01,320
takes a lot of low level knowledge

988
00:37:01,320 --> 00:37:02,760
you're going to be writing assembly

989
00:37:02,760 --> 00:37:05,280
you've got to know the win32 API in

990
00:37:05,280 --> 00:37:07,260
order to get around these edrs

991
00:37:07,260 --> 00:37:09,960
so our dream with the Iscariot Suite is

992
00:37:09,960 --> 00:37:11,579
we want to shift some power back to the

993
00:37:11,579 --> 00:37:14,160
red teams and say you should be focusing

994
00:37:14,160 --> 00:37:15,780
on making meaningful change to your

995
00:37:15,780 --> 00:37:18,060
customers instead of how do I bypass

996
00:37:18,060 --> 00:37:21,000
this one EDR for this assessment so

997
00:37:21,000 --> 00:37:23,940
let's focus on the bigger more impactful

998
00:37:23,940 --> 00:37:26,099
changes instead of the cat and mouse

999
00:37:26,099 --> 00:37:29,660
game of get around an EDR

1000
00:37:33,839 --> 00:37:36,060
all right

1001
00:37:36,060 --> 00:37:38,520
so again this is kind of a message to

1002
00:37:38,520 --> 00:37:40,320
vendors right if you're a vendor out

1003
00:37:40,320 --> 00:37:43,200
there uh you know we just want to say

1004
00:37:43,200 --> 00:37:45,720
do your best we understand hours of

1005
00:37:45,720 --> 00:37:48,060
limited Etc do your best to provide your

1006
00:37:48,060 --> 00:37:50,160
customers with that deep technical

1007
00:37:50,160 --> 00:37:52,200
knowledge of what your product does and

1008
00:37:52,200 --> 00:37:54,180
what it can and cannot do right I'm

1009
00:37:54,180 --> 00:37:56,400
talking parent to child process

1010
00:37:56,400 --> 00:37:58,680
relationships how you're writing the

1011
00:37:58,680 --> 00:38:00,359
service you know on that operating

1012
00:38:00,359 --> 00:38:03,119
system higher you know persisting on

1013
00:38:03,119 --> 00:38:05,040
that system whether it's a register key

1014
00:38:05,040 --> 00:38:08,520
or a scheduled task Etc provide your

1015
00:38:08,520 --> 00:38:10,140
customer with all this technical

1016
00:38:10,140 --> 00:38:12,540
information so they can build detections

1017
00:38:12,540 --> 00:38:15,900
around those specific products okay if

1018
00:38:15,900 --> 00:38:18,960
you are a customer that doesn't use any

1019
00:38:18,960 --> 00:38:21,300
of these then you should be you know

1020
00:38:21,300 --> 00:38:23,220
hopefully your vendor can help you you

1021
00:38:23,220 --> 00:38:24,900
know your existing products can help you

1022
00:38:24,900 --> 00:38:26,760
with some of this but if you don't have

1023
00:38:26,760 --> 00:38:28,200
that from your vendors and your security

1024
00:38:28,200 --> 00:38:30,300
products you should also be building out

1025
00:38:30,300 --> 00:38:32,339
detections and preventions against

1026
00:38:32,339 --> 00:38:34,260
Splunk right if you don't have Splunk

1027
00:38:34,260 --> 00:38:36,359
then look for it right if you don't have

1028
00:38:36,359 --> 00:38:39,359
always query go and look for it okay we

1029
00:38:39,359 --> 00:38:41,040
want to ensure that everyone you know

1030
00:38:41,040 --> 00:38:42,839
from today on in case you didn't know

1031
00:38:42,839 --> 00:38:45,720
I'm sure many of you did know that

1032
00:38:45,720 --> 00:38:48,060
you're tracking all the capabilities of

1033
00:38:48,060 --> 00:38:50,040
the many many security products that are

1034
00:38:50,040 --> 00:38:52,440
out there and you find a way to prevent

1035
00:38:52,440 --> 00:38:53,960
or detect them in your environment

1036
00:38:53,960 --> 00:38:56,160
especially if you're not using them

1037
00:38:56,160 --> 00:38:57,780
right because we've all had this

1038
00:38:57,780 --> 00:38:59,820
connotation and security especially on

1039
00:38:59,820 --> 00:39:02,220
the blue team side and I I remember when

1040
00:39:02,220 --> 00:39:04,980
I was a blue teamer as well that oh you

1041
00:39:04,980 --> 00:39:06,540
know it'd be it'd be horrible if

1042
00:39:06,540 --> 00:39:08,579
somebody gained access or Splunk cluster

1043
00:39:08,579 --> 00:39:10,980
okay yes that makes sense but what if

1044
00:39:10,980 --> 00:39:13,440
that's not your Splunk cluster they're

1045
00:39:13,440 --> 00:39:15,839
just hosting it on AWS your attacker is

1046
00:39:15,839 --> 00:39:17,700
and they're using Splunk to do their

1047
00:39:17,700 --> 00:39:20,460
entire operation right it's a different

1048
00:39:20,460 --> 00:39:22,500
bit you know it's a bit of a Twist as

1049
00:39:22,500 --> 00:39:25,320
our conversation before whether it goes

1050
00:39:25,320 --> 00:39:27,480
from we need to defend our defensive

1051
00:39:27,480 --> 00:39:29,579
posture yes you still need to do that

1052
00:39:29,579 --> 00:39:31,079
because if they pone that then you're

1053
00:39:31,079 --> 00:39:33,180
you're still done but now we're also

1054
00:39:33,180 --> 00:39:35,040
going to have to detect and prevent

1055
00:39:35,040 --> 00:39:37,380
against these security products that are

1056
00:39:37,380 --> 00:39:39,060
not in our environment okay and that's

1057
00:39:39,060 --> 00:39:41,099
kind of the messaging with this specific

1058
00:39:41,099 --> 00:39:43,800
talk is try to alert for or try to

1059
00:39:43,800 --> 00:39:45,839
prepare for Trader wear there might be

1060
00:39:45,839 --> 00:39:47,520
an official term for it we think Trader

1061
00:39:47,520 --> 00:39:49,260
aware makes sense

1062
00:39:49,260 --> 00:39:51,839
and yeah just made sense so we've got

1063
00:39:51,839 --> 00:39:54,180
many references for this talk this talk

1064
00:39:54,180 --> 00:39:56,160
started as like a conversation between

1065
00:39:56,160 --> 00:39:58,920
Eric and I probably

1066
00:39:58,920 --> 00:40:01,260
two years two years right where we were

1067
00:40:01,260 --> 00:40:04,020
just like yeah like Sentinel one rce

1068
00:40:04,020 --> 00:40:06,240
cool and you know we just kept bickering

1069
00:40:06,240 --> 00:40:07,320
about it and then we're like you know

1070
00:40:07,320 --> 00:40:09,420
what we're gonna make a talk about how

1071
00:40:09,420 --> 00:40:10,980
Trader work can really be a security

1072
00:40:10,980 --> 00:40:12,720
implication to the industry as a whole

1073
00:40:12,720 --> 00:40:14,880
so there's a ton of references that'll

1074
00:40:14,880 --> 00:40:17,339
be on the gitlab repo uh previous

1075
00:40:17,339 --> 00:40:20,280
conferences previous white papers Etc

1076
00:40:20,280 --> 00:40:22,800
you can find them all here there's a lot

1077
00:40:22,800 --> 00:40:24,240
of people to thank for as well because

1078
00:40:24,240 --> 00:40:25,920
we obviously pulled some code from the

1079
00:40:25,920 --> 00:40:27,420
internet we're not in the business of

1080
00:40:27,420 --> 00:40:29,280
writing and Reinventing the wheel in

1081
00:40:29,280 --> 00:40:31,500
case you didn't notice so you know we

1082
00:40:31,500 --> 00:40:32,760
definitely want to give a shout out to

1083
00:40:32,760 --> 00:40:34,380
those folks there at the bottom

1084
00:40:34,380 --> 00:40:36,240
definitely check out that Lots project

1085
00:40:36,240 --> 00:40:38,280
uh personally speaking I think that's

1086
00:40:38,280 --> 00:40:39,720
going to be pretty big coming up

1087
00:40:39,720 --> 00:40:41,880
especially your detection engineering

1088
00:40:41,880 --> 00:40:43,940
efforts where you have pretty much

1089
00:40:43,940 --> 00:40:46,560
legitimate traffic always leaving your

1090
00:40:46,560 --> 00:40:48,300
environment and you're not going to know

1091
00:40:48,300 --> 00:40:50,880
which one's which and especially when

1092
00:40:50,880 --> 00:40:53,640
TLS 1.3 is like widely adopted and they

1093
00:40:53,640 --> 00:40:55,500
do some you know Security hinding on

1094
00:40:55,500 --> 00:40:57,960
that effort as well so here's our

1095
00:40:57,960 --> 00:40:59,160
contact information

1096
00:40:59,160 --> 00:41:02,220
Eric over there a right over here QR

1097
00:41:02,220 --> 00:41:04,140
code to the get lab link so you can

1098
00:41:04,140 --> 00:41:06,359
check out the code you can check out

1099
00:41:06,359 --> 00:41:07,980
these slides which I think are up as

1100
00:41:07,980 --> 00:41:09,420
well if not we'll get them up there as a

1101
00:41:09,420 --> 00:41:10,619
PDF for you

1102
00:41:10,619 --> 00:41:12,359
uh so you can you know maybe dish it out

1103
00:41:12,359 --> 00:41:14,820
to your to your co-workers Etc and uh

1104
00:41:14,820 --> 00:41:16,920
you can follow us on the socials

1105
00:41:16,920 --> 00:41:19,260
um there's Twitter LinkedIn Etc thank

1106
00:41:19,260 --> 00:41:20,520
you guys for your attention and your

1107
00:41:20,520 --> 00:41:22,020
dedication thank you guys for being here

1108
00:41:22,020 --> 00:41:23,339
and I hope you have a great rest of your

1109
00:41:23,339 --> 00:41:25,520
day

1110
00:41:27,180 --> 00:41:29,880
oh we uh

1111
00:41:29,880 --> 00:41:34,099
before I forget I was probably gonna get

