1
00:00:14,490 --> 00:00:17,970
ladies and gentlemen please join me and

2
00:00:17,970 --> 00:00:21,270
welcoming the co-founder of trusted

3
00:00:21,270 --> 00:00:24,060
security the co-founder of binary

4
00:00:24,060 --> 00:00:27,500
defense and the co-founder of Derby con

5
00:00:27,500 --> 00:00:31,400
mr. Dave Kennedy

6
00:00:35,130 --> 00:00:38,950
nobody hear me okay good great well

7
00:00:38,950 --> 00:00:40,450
thank you everybody for for besets

8
00:00:40,450 --> 00:00:41,950
Augusta coming up super early in the

9
00:00:41,950 --> 00:00:43,540
morning I got an email last night saying

10
00:00:43,540 --> 00:00:44,860
hey can you be here by 8:00 a.m. I'm

11
00:00:44,860 --> 00:00:47,170
like oh man like I like to sleep in and

12
00:00:47,170 --> 00:00:48,240
all that good stuff so I see people

13
00:00:48,240 --> 00:00:50,380
drinking coffee and everything else I'm

14
00:00:50,380 --> 00:00:52,720
two coffee cups in so I should be okay

15
00:00:52,720 --> 00:00:54,400
for the rest of the presentation after

16
00:00:54,400 --> 00:00:56,500
that I plan on sleeping but I really

17
00:00:56,500 --> 00:00:58,000
appreciate everybody coming out today to

18
00:00:58,000 --> 00:01:00,040
hear me talk and I really like this talk

19
00:01:00,040 --> 00:01:01,840
because it's it's talking about a lot of

20
00:01:01,840 --> 00:01:03,850
things that we struggle with today and

21
00:01:03,850 --> 00:01:05,770
I'm gonna dive down into a lot of the

22
00:01:05,770 --> 00:01:06,910
different types of technologies that are

23
00:01:06,910 --> 00:01:08,979
out there that stop attackers and really

24
00:01:08,979 --> 00:01:10,410
how effective they are and what they do

25
00:01:10,410 --> 00:01:12,940
but really today's talk is is looking at

26
00:01:12,940 --> 00:01:14,560
how do we get better with with

27
00:01:14,560 --> 00:01:16,390
identifying attacks and in the earlier

28
00:01:16,390 --> 00:01:17,830
stages and there's a lot of Technology

29
00:01:17,830 --> 00:01:19,570
out there like artificial intelligence

30
00:01:19,570 --> 00:01:20,860
and machine learning that we hear out

31
00:01:20,860 --> 00:01:22,630
there today that tell us a lot of

32
00:01:22,630 --> 00:01:24,280
success rates when it comes to what's

33
00:01:24,280 --> 00:01:25,960
actually happening out there so I wanted

34
00:01:25,960 --> 00:01:26,950
to dive down into some of those

35
00:01:26,950 --> 00:01:28,420
technologies and take a look at how

36
00:01:28,420 --> 00:01:29,830
affect that they are what they really do

37
00:01:29,830 --> 00:01:31,330
and really we can do to get a little bit

38
00:01:31,330 --> 00:01:33,580
better with with what we're doing but

39
00:01:33,580 --> 00:01:34,509
first I'm gonna says give a round

40
00:01:34,509 --> 00:01:35,590
applause again for everybody that makes

41
00:01:35,590 --> 00:01:38,790
besides Augusta possible

42
00:01:40,680 --> 00:01:42,690
it's amazing what they're able to do

43
00:01:42,690 --> 00:01:45,510
after using the funds to fund stem and

44
00:01:45,510 --> 00:01:47,430
be able to help kids learn and get more

45
00:01:47,430 --> 00:01:49,620
folks into technology in general and

46
00:01:49,620 --> 00:01:51,480
that's so so so important with what

47
00:01:51,480 --> 00:01:52,620
we're dealing with in the shortage that

48
00:01:52,620 --> 00:01:55,140
we have in information security just a

49
00:01:55,140 --> 00:01:58,020
brief background of myself as I got

50
00:01:58,020 --> 00:02:00,150
introduced earlier a co-founder of Derby

51
00:02:00,150 --> 00:02:01,770
con started trusted second binary

52
00:02:01,770 --> 00:02:03,960
offense I'm the author of the social

53
00:02:03,960 --> 00:02:06,270
engineer toolkit unicorn artillery

54
00:02:06,270 --> 00:02:08,430
number of other open source frameworks

55
00:02:08,430 --> 00:02:10,680
the pentesters framework like writing

56
00:02:10,680 --> 00:02:12,840
code when I when I have spare time so

57
00:02:12,840 --> 00:02:14,160
it's been been a lot of fun on the

58
00:02:14,160 --> 00:02:16,230
information security space funny enough

59
00:02:16,230 --> 00:02:18,390
I was doing a presentation in Chile for

60
00:02:18,390 --> 00:02:21,450
four is C squared and and I started

61
00:02:21,450 --> 00:02:23,100
playing a lot of my videos like it was

62
00:02:23,100 --> 00:02:24,150
more of a higher-level talk and I

63
00:02:24,150 --> 00:02:25,560
started playing all my videos and I

64
00:02:25,560 --> 00:02:28,170
realized that every video that I'm in I

65
00:02:28,170 --> 00:02:29,790
had the same suit on because I only own

66
00:02:29,790 --> 00:02:34,260
one suit and and so like everyone that I

67
00:02:34,260 --> 00:02:42,840
was in I was like oh no I need to change

68
00:02:42,840 --> 00:02:44,250
that how cuz like I don't like suicide

69
00:02:44,250 --> 00:02:45,540
just like you know when I fly and I'm

70
00:02:45,540 --> 00:02:47,430
like a sweats type of person and you

71
00:02:47,430 --> 00:02:49,050
know I'm that type of person and

72
00:02:49,050 --> 00:02:50,940
suddenly really own one soon I really

73
00:02:50,940 --> 00:02:51,570
like that tie

74
00:02:51,570 --> 00:02:53,400
but even big day when I was heavyset had

75
00:02:53,400 --> 00:02:57,840
the same tie that was interesting also

76
00:02:57,840 --> 00:03:00,360
I've been in a rap video I thought that

77
00:03:00,360 --> 00:03:02,489
was pretty cool as well in a Chris Brown

78
00:03:02,489 --> 00:03:04,680
rap video which never thought I'd be in

79
00:03:04,680 --> 00:03:06,120
a rap video before more of like a 90s

80
00:03:06,120 --> 00:03:07,650
grunge alternative but it's all cool

81
00:03:07,650 --> 00:03:09,570
like it was kind of neat I flew out to

82
00:03:09,570 --> 00:03:12,780
LA and they wanted to do like a real

83
00:03:12,780 --> 00:03:15,510
live skit on a hacking video and so I'm

84
00:03:15,510 --> 00:03:17,700
like okay so I created a head an Android

85
00:03:17,700 --> 00:03:19,230
device and the whole purpose of the the

86
00:03:19,230 --> 00:03:22,680
video was basically Chris Brown and

87
00:03:22,680 --> 00:03:24,540
another rapper Zoe dollars wanted to

88
00:03:24,540 --> 00:03:27,060
hack into their their ex-girlfriends

89
00:03:27,060 --> 00:03:28,320
phone and delete all the pictures of

90
00:03:28,320 --> 00:03:29,610
them it's called post and delete it's

91
00:03:29,610 --> 00:03:31,530
not safe for work by the way so don't

92
00:03:31,530 --> 00:03:35,550
watch it when you're at work and so the

93
00:03:35,550 --> 00:03:36,870
whole premise was is that you know they

94
00:03:36,870 --> 00:03:38,160
wanted to lead all the Facebook posts

95
00:03:38,160 --> 00:03:39,239
and things of them together so they

96
00:03:39,239 --> 00:03:41,280
hired their best friend hacker Dave to

97
00:03:41,280 --> 00:03:43,170
come in and so I actually created all

98
00:03:43,170 --> 00:03:44,519
the the code in the background and you

99
00:03:44,519 --> 00:03:46,170
stage-fright to trigger an exploit on

100
00:03:46,170 --> 00:03:47,250
the Android device and then delete all

101
00:03:47,250 --> 00:03:48,690
the phone delete all the stuff of its

102
00:03:48,690 --> 00:03:49,650
they really wanted like an acro

103
00:03:49,650 --> 00:03:51,299
portrayal that's been really cool steam

104
00:03:51,299 --> 00:03:52,890
thing for like for mr. Roboto I've

105
00:03:52,890 --> 00:03:53,910
gotten helped out a little bit with that

106
00:03:53,910 --> 00:03:54,370
TV

107
00:03:54,370 --> 00:03:55,450
Joe and a few other things so it's been

108
00:03:55,450 --> 00:03:57,730
really neat to do a lot of the cool

109
00:03:57,730 --> 00:03:59,890
stuff out there and and being a rap

110
00:03:59,890 --> 00:04:01,420
video which is like I said the only

111
00:04:01,420 --> 00:04:02,950
prerequisite of me helping out the rap

112
00:04:02,950 --> 00:04:04,599
video is is I have to be in the rap

113
00:04:04,599 --> 00:04:07,420
video and I like will figure that out so

114
00:04:07,420 --> 00:04:11,230
that's me for like a half a second in a

115
00:04:11,230 --> 00:04:12,970
background like bobbing my head as I'm

116
00:04:12,970 --> 00:04:14,920
hacking into computer systems as people

117
00:04:14,920 --> 00:04:16,690
are dancing behind me but it was really

118
00:04:16,690 --> 00:04:17,889
weird it's awkward like it's like

119
00:04:17,889 --> 00:04:20,620
picture of me on a computer and there's

120
00:04:20,620 --> 00:04:22,600
like 15 dancers behind me like doing

121
00:04:22,600 --> 00:04:23,949
flips and stuff and I'm like literally

122
00:04:23,949 --> 00:04:26,710
just typing on a keyboard it was the

123
00:04:26,710 --> 00:04:28,060
weirdest thing ever but it's fun that's

124
00:04:28,060 --> 00:04:32,410
fun so a balance to the force the reason

125
00:04:32,410 --> 00:04:35,050
why I started this that this talk is we

126
00:04:35,050 --> 00:04:37,300
have a lot of problems when it comes to

127
00:04:37,300 --> 00:04:40,260
being able to respond effectively to

128
00:04:40,260 --> 00:04:41,889
specific threats against our

129
00:04:41,889 --> 00:04:44,560
organization and the reason I bring this

130
00:04:44,560 --> 00:04:47,080
up is that protection versus detection

131
00:04:47,080 --> 00:04:48,910
protection and most organizations takes

132
00:04:48,910 --> 00:04:50,320
a long time doesn't it

133
00:04:50,320 --> 00:04:52,240
to implement application whitelisting is

134
00:04:52,240 --> 00:04:53,590
anybody successfully implemented an

135
00:04:53,590 --> 00:04:54,850
application whitelisting and high

136
00:04:54,850 --> 00:04:55,990
integrity mode with very little

137
00:04:55,990 --> 00:04:59,320
exceptions right right has anybody

138
00:04:59,320 --> 00:05:01,510
gotten rid of macros so there might be a

139
00:05:01,510 --> 00:05:02,889
couple in here anybody got rid of macros

140
00:05:02,889 --> 00:05:05,500
in their environment nope not one right

141
00:05:05,500 --> 00:05:07,510
so we have a lot of things that it takes

142
00:05:07,510 --> 00:05:09,550
us time to get towards to really build

143
00:05:09,550 --> 00:05:10,539
out our infrastructure network

144
00:05:10,539 --> 00:05:11,590
segmentation do we do network

145
00:05:11,590 --> 00:05:14,020
segmentation extremely well do we do DLP

146
00:05:14,020 --> 00:05:16,389
very well all of these programs that

147
00:05:16,389 --> 00:05:18,310
take a lot of effort in time for us to

148
00:05:18,310 --> 00:05:19,780
implement and we're always striving to

149
00:05:19,780 --> 00:05:20,740
get better at it right it's so

150
00:05:20,740 --> 00:05:22,750
protection is something that takes a

151
00:05:22,750 --> 00:05:25,240
long time right a good example let's

152
00:05:25,240 --> 00:05:26,740
just say a new attack vector comes out

153
00:05:26,740 --> 00:05:29,500
today and you can fix it with a registry

154
00:05:29,500 --> 00:05:32,050
key change can you make a registry key

155
00:05:32,050 --> 00:05:33,190
change across your entire enterprise

156
00:05:33,190 --> 00:05:37,539
within the first day comes out maybe

157
00:05:37,539 --> 00:05:38,979
maybe not depending on its impact

158
00:05:38,979 --> 00:05:40,630
testing everything else that's happening

159
00:05:40,630 --> 00:05:43,240
out there without a patch you get that

160
00:05:43,240 --> 00:05:44,470
patch out the same day across your

161
00:05:44,470 --> 00:05:48,550
entire enterprise probably not right so

162
00:05:48,550 --> 00:05:50,050
we have a little bit of work to do when

163
00:05:50,050 --> 00:05:51,460
it comes to the time it takes for an

164
00:05:51,460 --> 00:05:52,630
attack to come out to when we can

165
00:05:52,630 --> 00:05:54,400
actually protect against that and the

166
00:05:54,400 --> 00:05:56,260
same thing goes for our strategic type

167
00:05:56,260 --> 00:05:58,030
of protections right network access

168
00:05:58,030 --> 00:06:00,130
control or network segmentation or DLP

169
00:06:00,130 --> 00:06:02,139
or application whitelisting

170
00:06:02,139 --> 00:06:04,510
or rolling out an old antivirus with the

171
00:06:04,510 --> 00:06:06,070
new antivirus right that takes a lot of

172
00:06:06,070 --> 00:06:07,780
time for us to go and effectively do

173
00:06:07,780 --> 00:06:09,790
so what we try to do in the security

174
00:06:09,790 --> 00:06:11,650
industry now is augment that protection

175
00:06:11,650 --> 00:06:14,200
piece with the ability to to have

176
00:06:14,200 --> 00:06:15,430
detection in place so that we can

177
00:06:15,430 --> 00:06:17,170
minimize the damage to our organization

178
00:06:17,170 --> 00:06:19,540
and hopefully respond we don't care

179
00:06:19,540 --> 00:06:20,890
robbing sales gets compromised I mean we

180
00:06:20,890 --> 00:06:22,720
do but we don't really care right it's

181
00:06:22,720 --> 00:06:24,250
better than our entire IT infrastructure

182
00:06:24,250 --> 00:06:25,660
being owned and then having access to

183
00:06:25,660 --> 00:06:27,610
all the data so can we minimize the time

184
00:06:27,610 --> 00:06:29,410
it takes to detect those attacks and

185
00:06:29,410 --> 00:06:32,320
then respond effectively and so for us

186
00:06:32,320 --> 00:06:33,310
the major concern right now is

187
00:06:33,310 --> 00:06:36,010
protection equals timing and in most

188
00:06:36,010 --> 00:06:37,780
enterprises it takes a substantial

189
00:06:37,780 --> 00:06:39,400
amount of time we're not Andamanese this

190
00:06:39,400 --> 00:06:41,080
word sorry but we're not agile the same

191
00:06:41,080 --> 00:06:43,000
way we do in development to be able to

192
00:06:43,000 --> 00:06:44,530
implement sweeping changes across your

193
00:06:44,530 --> 00:06:47,710
enterprise to be able to do things and

194
00:06:47,710 --> 00:06:49,330
so then we focused on the tactics

195
00:06:49,330 --> 00:06:51,340
techniques and procedures of attackers

196
00:06:51,340 --> 00:06:52,510
and that's the big buzzword right now

197
00:06:52,510 --> 00:06:54,550
right TTP's TTP HTTP so here at about

198
00:06:54,550 --> 00:06:56,320
400 times in this talk and I'm doing it

199
00:06:56,320 --> 00:06:59,140
intentionally the tactics techniques and

200
00:06:59,140 --> 00:07:01,300
procedures of attackers are what

201
00:07:01,300 --> 00:07:02,530
attackers leverage in order to

202
00:07:02,530 --> 00:07:03,940
compromise an organization or and the

203
00:07:03,940 --> 00:07:05,290
methods that they used to do it and the

204
00:07:05,290 --> 00:07:06,970
ways that they operate so everything

205
00:07:06,970 --> 00:07:08,350
from standing up or operational

206
00:07:08,350 --> 00:07:10,870
infrastructure or using a high

207
00:07:10,870 --> 00:07:12,820
reputation sites using domain fronting

208
00:07:12,820 --> 00:07:14,410
doing a specific type of code injection

209
00:07:14,410 --> 00:07:15,910
attack to get code execution on the

210
00:07:15,910 --> 00:07:17,380
system these are the methods that

211
00:07:17,380 --> 00:07:19,390
attackers operate by in order to

212
00:07:19,390 --> 00:07:20,710
compromise their infrastructure and the

213
00:07:20,710 --> 00:07:22,930
big big thing that's focus focusing on

214
00:07:22,930 --> 00:07:24,700
right now are what are the techniques

215
00:07:24,700 --> 00:07:26,080
that attackers use that we can build

216
00:07:26,080 --> 00:07:27,970
detection criteria off of it ie the

217
00:07:27,970 --> 00:07:29,350
mitre attack framework and a lot of

218
00:07:29,350 --> 00:07:30,400
other things that we see out there today

219
00:07:30,400 --> 00:07:31,870
right so trying to get an understanding

220
00:07:31,870 --> 00:07:34,210
around what attackers are doing so we

221
00:07:34,210 --> 00:07:36,100
can build defenses against it now I

222
00:07:36,100 --> 00:07:37,600
thought a really good comment from Jeff

223
00:07:37,600 --> 00:07:39,340
Moss at the opening comments around

224
00:07:39,340 --> 00:07:41,919
blackhat with hit home with me which was

225
00:07:41,919 --> 00:07:45,160
we as an industry don't focus on the

226
00:07:45,160 --> 00:07:46,840
tactics or the procedures of attackers

227
00:07:46,840 --> 00:07:48,669
were only seldomly focusing or only

228
00:07:48,669 --> 00:07:51,190
focusing on the techniques and that's

229
00:07:51,190 --> 00:07:52,540
really where the industry is at today

230
00:07:52,540 --> 00:07:55,780
we're focusing very very myopically

231
00:07:55,780 --> 00:07:57,580
on the techniques in an attacker uses

232
00:07:57,580 --> 00:07:58,720
what's the command that they use for

233
00:07:58,720 --> 00:07:59,320
wmic

234
00:07:59,320 --> 00:08:01,180
what does MSHDA look like when it's

235
00:08:01,180 --> 00:08:02,320
beaconing out to the Internet let's

236
00:08:02,320 --> 00:08:03,669
focus on the technique and let's build

237
00:08:03,669 --> 00:08:05,320
detection criteria off of it and we

238
00:08:05,320 --> 00:08:06,669
don't necessarily focus on what the

239
00:08:06,669 --> 00:08:08,200
patterns of behavior look like or the

240
00:08:08,200 --> 00:08:10,090
procedures that attackers use in order

241
00:08:10,090 --> 00:08:12,160
to compromise an infrastructure so today

242
00:08:12,160 --> 00:08:14,110
what we're really looking at is that

243
00:08:14,110 --> 00:08:15,910
we're using signature based detection on

244
00:08:15,910 --> 00:08:17,650
techniques so we're basically the

245
00:08:17,650 --> 00:08:19,780
antivirus of the 90s and that's where

246
00:08:19,780 --> 00:08:21,470
our security programs are today

247
00:08:21,470 --> 00:08:22,940
so we're essentially writing signatures

248
00:08:22,940 --> 00:08:25,220
for commands that look malicious but if

249
00:08:25,220 --> 00:08:26,660
we modify them in some way shape or form

250
00:08:26,660 --> 00:08:27,830
or we use a method that hasn't been

251
00:08:27,830 --> 00:08:29,060
discovered we're fine

252
00:08:29,060 --> 00:08:31,160
no problems as an attack goes so we're

253
00:08:31,160 --> 00:08:33,229
still really back in the 90s which is a

254
00:08:33,229 --> 00:08:34,789
good year at good years I love the 90s

255
00:08:34,789 --> 00:08:36,590
is my favorite time got arcade games

256
00:08:36,590 --> 00:08:39,320
Super Nintendo and he had 90s grunge you

257
00:08:39,320 --> 00:08:41,330
know I was friends came out the 90s

258
00:08:41,330 --> 00:08:43,159
right friends was a good show Seinfeld

259
00:08:43,159 --> 00:08:48,170
nineties are the best so we can learn a

260
00:08:48,170 --> 00:08:50,780
lot from from the techniques of attacks

261
00:08:50,780 --> 00:08:52,880
we can say okay well if we trigger a

262
00:08:52,880 --> 00:08:54,770
specific type of attack vector can we

263
00:08:54,770 --> 00:08:57,200
detect it great that's fantastic now you

264
00:08:57,200 --> 00:08:59,600
have maybe 50% of the coverage out there

265
00:08:59,600 --> 00:09:02,180
but do you really know how effective

266
00:09:02,180 --> 00:09:03,740
those detection criterias are unless

267
00:09:03,740 --> 00:09:05,030
you're doing something like simulations

268
00:09:05,030 --> 00:09:06,950
like red teaming or very specific

269
00:09:06,950 --> 00:09:09,590
attacks that are very applicable and

270
00:09:09,590 --> 00:09:11,030
practical to your environment as you're

271
00:09:11,030 --> 00:09:13,090
actively going in and testing them and

272
00:09:13,090 --> 00:09:15,380
so the current state of detection and I

273
00:09:15,380 --> 00:09:18,170
love this an example I wrote I wrote

274
00:09:18,170 --> 00:09:22,040
this tool in 2012 so six years ago right

275
00:09:22,040 --> 00:09:24,770
six years ago I wrote a binary dropper

276
00:09:24,770 --> 00:09:27,050
so it's a binary non code signed

277
00:09:27,050 --> 00:09:29,870
executable and it was just a basic

278
00:09:29,870 --> 00:09:32,060
native HTTP shell and it incorporated

279
00:09:32,060 --> 00:09:33,800
AES for the command control so basically

280
00:09:33,800 --> 00:09:35,390
you know you you you trigger an

281
00:09:35,390 --> 00:09:37,340
executable on a machine it beacons out

282
00:09:37,340 --> 00:09:40,130
via HTTP or HTTPS to the epoch attacker

283
00:09:40,130 --> 00:09:41,810
sites and then it communicates with

284
00:09:41,810 --> 00:09:42,800
command controls like a basically

285
00:09:42,800 --> 00:09:44,390
command Sheldrake do IP config you do

286
00:09:44,390 --> 00:09:46,160
things like that but it leveraged it

287
00:09:46,160 --> 00:09:48,830
over AES so I released a source code and

288
00:09:48,830 --> 00:09:51,590
I published the binaries okay and since

289
00:09:51,590 --> 00:09:53,900
I since 2012 I've had 3.4 million

290
00:09:53,900 --> 00:09:56,240
downloads of this specific binary okay

291
00:09:56,240 --> 00:09:58,280
so really good download rate I would say

292
00:09:58,280 --> 00:09:59,510
all right 3.4 million seems pretty

293
00:09:59,510 --> 00:10:01,670
pretty sweet and so I decided to upload

294
00:10:01,670 --> 00:10:03,500
it to virustotal to see how well it was

295
00:10:03,500 --> 00:10:05,240
detected on code signed binary out in

296
00:10:05,240 --> 00:10:07,460
the wild public code six out of six out

297
00:10:07,460 --> 00:10:09,560
of sixty found it and guess how many of

298
00:10:09,560 --> 00:10:10,670
those were by the way were the next

299
00:10:10,670 --> 00:10:16,640
generation product lines zero zero zero

300
00:10:16,640 --> 00:10:19,070
zero point zero like McAfee found it I

301
00:10:19,070 --> 00:10:20,570
think claim maybe did which I was really

302
00:10:20,570 --> 00:10:21,650
surprised that I didn't know that was

303
00:10:21,650 --> 00:10:24,050
still around I was like shoot claim he

304
00:10:24,050 --> 00:10:27,710
found it whoa semantic a couple other

305
00:10:27,710 --> 00:10:28,970
ones great but six out of sixty found

306
00:10:28,970 --> 00:10:30,350
enough funny enough I tweeted this out

307
00:10:30,350 --> 00:10:32,770
and guess somebody found it after that

308
00:10:32,770 --> 00:10:35,070
37 out of 60

309
00:10:35,070 --> 00:10:38,100
magic right it's amazing what you can do

310
00:10:38,100 --> 00:10:40,110
by a tweets that's exactly what

311
00:10:40,110 --> 00:10:41,370
attackers are doing by the way when they

312
00:10:41,370 --> 00:10:43,050
when they write some custom code that

313
00:10:43,050 --> 00:10:44,160
isn't getting getting detected they

314
00:10:44,160 --> 00:10:45,300
tweet it out to all the antivirus

315
00:10:45,300 --> 00:10:46,890
vendors as a challenge that's exactly

316
00:10:46,890 --> 00:10:48,200
what they do

317
00:10:48,200 --> 00:10:52,170
shrubs see - I wrote Trevor see - which

318
00:10:52,170 --> 00:10:54,740
was a command control structure for

319
00:10:54,740 --> 00:10:57,030
basically it's it you can use it you can

320
00:10:57,030 --> 00:10:58,620
bet it in documents from macro injection

321
00:10:58,620 --> 00:11:01,020
you could use it as a PowerShell stager

322
00:11:01,020 --> 00:11:03,480
I also has a c-sharp stager and what

323
00:11:03,480 --> 00:11:04,950
Trevor c2 is and you can go and download

324
00:11:04,950 --> 00:11:06,840
today is it's a command and control

325
00:11:06,840 --> 00:11:08,070
infrastructure and exploitation

326
00:11:08,070 --> 00:11:10,230
framework for command and control and

327
00:11:10,230 --> 00:11:12,300
basically with Trevor c2 what it does is

328
00:11:12,300 --> 00:11:16,170
it beacons out via HTTP and you can use

329
00:11:16,170 --> 00:11:18,060
the PowerShell stager there's a Python

330
00:11:18,060 --> 00:11:20,460
stager and there's a c-sharp stager and

331
00:11:20,460 --> 00:11:23,460
what happens is is that it the the back

332
00:11:23,460 --> 00:11:24,960
end you can clone any website you want

333
00:11:24,960 --> 00:11:27,120
to so let's just say you clone Google

334
00:11:27,120 --> 00:11:28,770
it'll have Google there and I'll show

335
00:11:28,770 --> 00:11:30,660
Google being there and when you go to

336
00:11:30,660 --> 00:11:32,250
the site or OB Google but embedded and

337
00:11:32,250 --> 00:11:33,690
spread throughout the whole HTML source

338
00:11:33,690 --> 00:11:34,770
code is its command and control

339
00:11:34,770 --> 00:11:36,150
infrastructure and it's all randomized

340
00:11:36,150 --> 00:11:37,560
author out there and so what will happen

341
00:11:37,560 --> 00:11:39,060
is the beacon will go out it'll look

342
00:11:39,060 --> 00:11:40,680
like it's browsing as a regular user and

343
00:11:40,680 --> 00:11:42,510
loading the site but it's reassembling

344
00:11:42,510 --> 00:11:44,310
the command control instructions that it

345
00:11:44,310 --> 00:11:45,780
needs to do and then it sends it off and

346
00:11:45,780 --> 00:11:47,850
then executes so good luck detecting

347
00:11:47,850 --> 00:11:49,170
that right and this was two years ago I

348
00:11:49,170 --> 00:11:51,870
released a gherkin last year and still

349
00:11:51,870 --> 00:11:53,220
have 0 out of 60 detection ratio out

350
00:11:53,220 --> 00:11:55,010
there good stuff

351
00:11:55,010 --> 00:11:58,830
Nick Carr did a blog post there was that

352
00:11:58,830 --> 00:12:00,120
every remember remember the setting

353
00:12:00,120 --> 00:12:03,210
contest - MS extension type this is a

354
00:12:03,210 --> 00:12:05,010
extension type that a guy named in nigma

355
00:12:05,010 --> 00:12:07,260
0x3 or Matt Nelson came out with from

356
00:12:07,260 --> 00:12:09,300
Specter ops and he found that this this

357
00:12:09,300 --> 00:12:11,190
specific file type setting content - s

358
00:12:11,190 --> 00:12:13,530
the extension type itself gave code

359
00:12:13,530 --> 00:12:15,330
execution function yet specifically in

360
00:12:15,330 --> 00:12:16,890
what we call deep links parameter and

361
00:12:16,890 --> 00:12:18,630
instead the deep links you could have it

362
00:12:18,630 --> 00:12:20,700
call an executable or execute code you

363
00:12:20,700 --> 00:12:22,170
could have a new powershell whatever you

364
00:12:22,170 --> 00:12:24,330
wanted to after this was released it was

365
00:12:24,330 --> 00:12:25,470
weaponized within about three hours

366
00:12:25,470 --> 00:12:27,720
there's a lot of different attackers

367
00:12:27,720 --> 00:12:28,890
that were leveraging this in a while to

368
00:12:28,890 --> 00:12:30,960
use it for commanding command and

369
00:12:30,960 --> 00:12:32,850
control or for code execution because it

370
00:12:32,850 --> 00:12:33,420
was something that hadn't been

371
00:12:33,420 --> 00:12:34,110
discovered yet

372
00:12:34,110 --> 00:12:36,660
two weeks later zero out of 60 detection

373
00:12:36,660 --> 00:12:39,480
criteria so again when we look at

374
00:12:39,480 --> 00:12:42,240
detection today we're focusing very much

375
00:12:42,240 --> 00:12:44,160
on that pattern piece and what's awesome

376
00:12:44,160 --> 00:12:46,440
and cool but yet we still don't get a

377
00:12:46,440 --> 00:12:48,660
lot of value from our tools

378
00:12:48,660 --> 00:12:50,220
that we're leveraging and especially the

379
00:12:50,220 --> 00:12:51,389
next-generation stuff that's out there

380
00:12:51,389 --> 00:12:55,860
and really the focus on today not be on

381
00:12:55,860 --> 00:12:58,019
the pattern the pattern can be good for

382
00:12:58,019 --> 00:13:00,149
low-hanging fruits but we need to be

383
00:13:00,149 --> 00:13:02,069
looking at the behavior of specific

384
00:13:02,069 --> 00:13:03,209
attacks on what they exhibit a good

385
00:13:03,209 --> 00:13:04,589
example would be like application

386
00:13:04,589 --> 00:13:06,120
control bypass techniques which we'll

387
00:13:06,120 --> 00:13:08,699
talk a little about so instead of

388
00:13:08,699 --> 00:13:10,439
looking for G's Power Cells the simple

389
00:13:10,439 --> 00:13:11,370
example before explaining this so

390
00:13:11,370 --> 00:13:13,470
powershell for power show do you look

391
00:13:13,470 --> 00:13:15,720
for in Bocca expression do you look for

392
00:13:15,720 --> 00:13:16,860
encoded command she noticed twelve

393
00:13:16,860 --> 00:13:18,269
different variations of encoder command

394
00:13:18,269 --> 00:13:19,410
think it's more than I think sixteen so

395
00:13:19,410 --> 00:13:21,000
you can do - you can do - you see you

396
00:13:21,000 --> 00:13:23,730
can do - en and Co different variations

397
00:13:23,730 --> 00:13:24,689
of the coca manage you know if you throw

398
00:13:24,689 --> 00:13:26,279
double quotes in there it's still a

399
00:13:26,279 --> 00:13:28,920
valuable string are still a little bit

400
00:13:28,920 --> 00:13:30,509
string or you throw carrots in there

401
00:13:30,509 --> 00:13:32,939
same thing so are you looking for all

402
00:13:32,939 --> 00:13:34,560
the variations of all these different

403
00:13:34,560 --> 00:13:35,610
techniques from a full-fledged

404
00:13:35,610 --> 00:13:37,470
programming language or can you look at

405
00:13:37,470 --> 00:13:39,540
the behavior of PowerShell and say well

406
00:13:39,540 --> 00:13:40,949
hey maybe we'll get some false positive

407
00:13:40,949 --> 00:13:42,149
out of this but if we can bubbled up to

408
00:13:42,149 --> 00:13:44,069
human to look at maybe we have a better

409
00:13:44,069 --> 00:13:45,269
stance at detecting this like a good

410
00:13:45,269 --> 00:13:46,800
example be why is PowerShell beaconing

411
00:13:46,800 --> 00:13:48,959
onto the internet we're gonna get some

412
00:13:48,959 --> 00:13:50,399
false positives exchanged it's gonna be

413
00:13:50,399 --> 00:13:52,139
came out to the internet we do certain

414
00:13:52,139 --> 00:13:53,189
updates it's gonna be came out to the

415
00:13:53,189 --> 00:13:54,660
internet but can we baseline that

416
00:13:54,660 --> 00:13:55,889
environment and say okay well now

417
00:13:55,889 --> 00:13:57,120
PowerShell speaking out to the internet

418
00:13:57,120 --> 00:13:58,439
let's look at that command that was

419
00:13:58,439 --> 00:14:00,240
executed and take a look length of

420
00:14:00,240 --> 00:14:01,589
command is also a good indication right

421
00:14:01,589 --> 00:14:03,300
so there's a lot of things that we can

422
00:14:03,300 --> 00:14:05,009
say okay instead of looking at a very

423
00:14:05,009 --> 00:14:06,750
specific string that we're looking for

424
00:14:06,750 --> 00:14:08,790
why not move to something that's more

425
00:14:08,790 --> 00:14:11,160
behavior centric and say okay bikini

426
00:14:11,160 --> 00:14:12,360
that's the Internet in PowerShell I want

427
00:14:12,360 --> 00:14:13,380
to look at that from an analyst

428
00:14:13,380 --> 00:14:14,610
perspective I want to see what that

429
00:14:14,610 --> 00:14:15,839
looks like to see whether or not it's

430
00:14:15,839 --> 00:14:16,980
malicious and there's a lot of good

431
00:14:16,980 --> 00:14:19,649
examples of this so let's do a

432
00:14:19,649 --> 00:14:21,470
demonstration I want to show a demo of

433
00:14:21,470 --> 00:14:24,000
Windows Defender and I've had a

434
00:14:24,000 --> 00:14:25,319
love-hate relationship with Windows

435
00:14:25,319 --> 00:14:26,579
Defender for the past like months I

436
00:14:26,579 --> 00:14:28,889
think I started to war with them so I

437
00:14:28,889 --> 00:14:31,350
called them on on on on on Twitter

438
00:14:31,350 --> 00:14:33,029
because I wrote this tool called magic

439
00:14:33,029 --> 00:14:35,309
unicorn about I don't like four or five

440
00:14:35,309 --> 00:14:37,680
years ago okay and when I wrote the

441
00:14:37,680 --> 00:14:39,750
unicorn what it is is it's a PowerShell

442
00:14:39,750 --> 00:14:42,059
office keishon tool and you know for

443
00:14:42,059 --> 00:14:43,410
things like encoded command like if you

444
00:14:43,410 --> 00:14:46,350
have - en - nee & Co etc etc what I did

445
00:14:46,350 --> 00:14:48,990
is I'm able to use - value into string

446
00:14:48,990 --> 00:14:50,879
convert an encoded command back so that

447
00:14:50,879 --> 00:14:52,829
it doesn't get detected by most EDRs and

448
00:14:52,829 --> 00:14:54,240
things like that that's out there and

449
00:14:54,240 --> 00:14:55,740
what it does it takes shellcode whatever

450
00:14:55,740 --> 00:14:57,660
you want it can be Metasploit also I

451
00:14:57,660 --> 00:14:58,949
could be your own custom shellcode and

452
00:14:58,949 --> 00:15:00,899
it uses PowerShell to inject it directly

453
00:15:00,899 --> 00:15:02,640
into memory without touching disk

454
00:15:02,640 --> 00:15:03,899
you know why that's important is that

455
00:15:03,899 --> 00:15:05,700
PowerShell today is starting to become

456
00:15:05,700 --> 00:15:07,320
more of a dying breed when it comes to

457
00:15:07,320 --> 00:15:09,360
us as attackers because with PowerShell

458
00:15:09,360 --> 00:15:11,550
version 5 and version 6 integration into

459
00:15:11,550 --> 00:15:13,380
the anti-malware scan interface script

460
00:15:13,380 --> 00:15:14,760
lock logging things that nobody is using

461
00:15:14,760 --> 00:15:16,950
right now anyway those are all great

462
00:15:16,950 --> 00:15:18,329
things that eventually companies will

463
00:15:18,329 --> 00:15:20,040
use now it's funny about script lock

464
00:15:20,040 --> 00:15:21,360
logging is it's like one of the best

465
00:15:21,360 --> 00:15:22,589
things out there not from the script

466
00:15:22,589 --> 00:15:23,820
lock logging it's basically getting like

467
00:15:23,820 --> 00:15:25,550
the raw syntax as it's about to be

468
00:15:25,550 --> 00:15:27,510
executed by the PowerShell interpreter

469
00:15:27,510 --> 00:15:29,430
it's a good visibility piece but no one

470
00:15:29,430 --> 00:15:31,019
enables it cuz the amount of volume of

471
00:15:31,019 --> 00:15:32,399
logs that you get it increases your

472
00:15:32,399 --> 00:15:33,690
Splunk license by like five hundred

473
00:15:33,690 --> 00:15:35,399
thousand right and we don't wanna pay

474
00:15:35,399 --> 00:15:38,100
that so so screw detection on that we

475
00:15:38,100 --> 00:15:40,470
that's too much right and so a script

476
00:15:40,470 --> 00:15:41,820
lock logging won't be there we don't use

477
00:15:41,820 --> 00:15:43,230
constrained language Bo no one uses that

478
00:15:43,230 --> 00:15:44,279
because it's gonna break all of our

479
00:15:44,279 --> 00:15:45,779
developer standing over doing out there

480
00:15:45,779 --> 00:15:47,670
but we are seeing more prominence of

481
00:15:47,670 --> 00:15:49,310
PowerShell version 5 and version 6 which

482
00:15:49,310 --> 00:15:51,600
ultimately increases to two additional

483
00:15:51,600 --> 00:15:53,490
logging now I did I did the very first

484
00:15:53,490 --> 00:15:55,950
ever PowerShell security talk it was

485
00:15:55,950 --> 00:15:57,870
when PowerShell beta first came out and

486
00:15:57,870 --> 00:16:00,899
it was at Def Con I think Def Con 14

487
00:16:00,899 --> 00:16:04,170
maybe what's that I do it there die

488
00:16:04,170 --> 00:16:05,760
deliver beforehand I think I did I think

489
00:16:05,760 --> 00:16:07,529
it's a Def Con first and I did besides

490
00:16:07,529 --> 00:16:09,810
after but as one of the first-ever

491
00:16:09,810 --> 00:16:12,870
PowerShell tops ever and I basically

492
00:16:12,870 --> 00:16:14,880
talked about how power show was gonna be

493
00:16:14,880 --> 00:16:16,860
the new new way of attacking this is

494
00:16:16,860 --> 00:16:18,660
back in 2008-2009

495
00:16:18,660 --> 00:16:20,579
and what was funny about as I called a

496
00:16:20,579 --> 00:16:22,470
PowerShell oMFG and we leased a bunch of

497
00:16:22,470 --> 00:16:25,350
cool that we can use in PowerShell

498
00:16:25,350 --> 00:16:26,970
wasn't embedded into Microsoft at that

499
00:16:26,970 --> 00:16:29,699
point and and I said hey Mike this is

500
00:16:29,699 --> 00:16:31,019
gonna be the number one way of going it

501
00:16:31,019 --> 00:16:32,910
but PowerShell with what Jeff Snover

502
00:16:32,910 --> 00:16:34,589
with the creator of PowerShell me homes

503
00:16:34,589 --> 00:16:35,970
from a security perspective have done

504
00:16:35,970 --> 00:16:37,829
have really made PowerShell probably one

505
00:16:37,829 --> 00:16:39,779
the most secure programming languages at

506
00:16:39,779 --> 00:16:41,699
least from an identification perspective

507
00:16:41,699 --> 00:16:43,589
logging and monitoring on PowerShell

508
00:16:43,589 --> 00:16:45,870
you don't get that with dotnet you don't

509
00:16:45,870 --> 00:16:47,730
get that with Python you don't get that

510
00:16:47,730 --> 00:16:49,980
with bash the amount of logging that

511
00:16:49,980 --> 00:16:51,510
goes into Power Stone what you can do to

512
00:16:51,510 --> 00:16:53,160
lock it down with constrained language

513
00:16:53,160 --> 00:16:54,269
mode and everything else makes it a

514
00:16:54,269 --> 00:16:55,500
substantially better programming

515
00:16:55,500 --> 00:16:57,630
language out there than anything else so

516
00:16:57,630 --> 00:16:59,610
we as attackers know that our window for

517
00:16:59,610 --> 00:17:02,279
PowerShell is extremely lower but with

518
00:17:02,279 --> 00:17:04,500
Windows Defender specifically and I'll

519
00:17:04,500 --> 00:17:06,000
talk about the antivirus and a skin

520
00:17:06,000 --> 00:17:07,770
interface the detection that we're using

521
00:17:07,770 --> 00:17:09,419
right now are still signature based

522
00:17:09,419 --> 00:17:11,819
there's no machine learning or behavior

523
00:17:11,819 --> 00:17:12,990
going on and these things even though

524
00:17:12,990 --> 00:17:14,240
that they tout it it's it's absolutely

525
00:17:14,240 --> 00:17:16,740
ridiculous what is happening

526
00:17:16,740 --> 00:17:18,569
is you have a PowerShell command that

527
00:17:18,569 --> 00:17:20,970
gets executed in prior to execution it

528
00:17:20,970 --> 00:17:22,199
goes into the anti-malware scan

529
00:17:22,199 --> 00:17:24,059
interface a MSI okay again it gets

530
00:17:24,059 --> 00:17:26,189
inspected by a mess sign that says hey

531
00:17:26,189 --> 00:17:28,319
it's basically in its Ross its clearest

532
00:17:28,319 --> 00:17:30,360
form so after after encoded command

533
00:17:30,360 --> 00:17:32,280
after it's decoded and basically right

534
00:17:32,280 --> 00:17:33,390
before it's about to hit the PowerShell

535
00:17:33,390 --> 00:17:35,250
interpreter it'll scan it with a net

536
00:17:35,250 --> 00:17:37,650
with the antivirus engine and say hey do

537
00:17:37,650 --> 00:17:39,300
any of these meet our signature criteria

538
00:17:39,300 --> 00:17:41,670
in a MSI and so so what happens is that

539
00:17:41,670 --> 00:17:43,410
they'll take unicorn which is a public

540
00:17:43,410 --> 00:17:44,370
tool and I called them out on it because

541
00:17:44,370 --> 00:17:46,500
I wrote unicorn like five years ago and

542
00:17:46,500 --> 00:17:48,000
it still wasn't being detected by

543
00:17:48,000 --> 00:17:49,830
antivirus and I'm like listen can we

544
00:17:49,830 --> 00:17:51,090
just start to get better on the

545
00:17:51,090 --> 00:17:53,490
technique that that unicorn is using a

546
00:17:53,490 --> 00:17:55,559
wrap injecting shell code directly into

547
00:17:55,559 --> 00:17:56,820
memory through PowerShell is probably

548
00:17:56,820 --> 00:17:58,440
not a great idea like why do you need

549
00:17:58,440 --> 00:17:59,970
create thread why do you need a virtual

550
00:17:59,970 --> 00:18:01,230
a like what do you need all these things

551
00:18:01,230 --> 00:18:03,690
in PowerShell kill the technique not the

552
00:18:03,690 --> 00:18:05,520
specific signature because an attacker

553
00:18:05,520 --> 00:18:08,100
isn't going to upload unicorn to github

554
00:18:08,100 --> 00:18:10,200
and talk talk crap to to a bunch of

555
00:18:10,200 --> 00:18:12,120
antivirus vendors right that's not what

556
00:18:12,120 --> 00:18:12,420
they do

557
00:18:12,420 --> 00:18:15,150
so when I wrote unicorn five years ago I

558
00:18:15,150 --> 00:18:16,650
wrote two versions one was kind of like

559
00:18:16,650 --> 00:18:18,210
a buggy version but it worked fine but

560
00:18:18,210 --> 00:18:19,830
then I'd like gala but better on the

561
00:18:19,830 --> 00:18:21,450
coding stuff and I released the what

562
00:18:21,450 --> 00:18:23,520
became unicorn today interesting enough

563
00:18:23,520 --> 00:18:25,050
does anybody know what my detection

564
00:18:25,050 --> 00:18:26,429
criteria is on that one that I wrote

565
00:18:26,429 --> 00:18:28,850
five years ago that I haven't published

566
00:18:28,850 --> 00:18:32,910
zero the one today it released new

567
00:18:32,910 --> 00:18:34,410
signatures every week because they think

568
00:18:34,410 --> 00:18:35,820
it's fun because they just basically

569
00:18:35,820 --> 00:18:37,290
write static signatures on different

570
00:18:37,290 --> 00:18:38,400
things my codes actually got so much

571
00:18:38,400 --> 00:18:40,590
better like it's it's great works a heck

572
00:18:40,590 --> 00:18:41,610
of a lot better so I'll show you a demo

573
00:18:41,610 --> 00:18:44,520
of that right now I'm gonna show you an

574
00:18:44,520 --> 00:18:48,660
example of what what defender will

575
00:18:48,660 --> 00:18:52,530
typically look for now in in show code

576
00:18:52,530 --> 00:18:54,780
specifically with Metasploit they really

577
00:18:54,780 --> 00:18:55,980
really like writing signatures for

578
00:18:55,980 --> 00:18:58,230
Metasploit that's their their big number

579
00:18:58,230 --> 00:18:59,460
one thing and it's awesome right we're

580
00:18:59,460 --> 00:19:00,510
gonna write signatures for Metasploit

581
00:19:00,510 --> 00:19:01,920
we're gonna tech Metasploit well with

582
00:19:01,920 --> 00:19:03,240
Metasploit version 5 that's coming out

583
00:19:03,240 --> 00:19:04,920
you can get get it from the github repos

584
00:19:04,920 --> 00:19:07,320
right now they've incorporated rc4

585
00:19:07,320 --> 00:19:09,929
encryption to d6 AES and a couple other

586
00:19:09,929 --> 00:19:12,120
ciphers or a couple of encryption

587
00:19:12,120 --> 00:19:14,100
standards for for the shell code itself

588
00:19:14,100 --> 00:19:15,360
so you can actually encrypt all of your

589
00:19:15,360 --> 00:19:16,679
shell code completely which completely

590
00:19:16,679 --> 00:19:19,140
circumvents its inspection criteria now

591
00:19:19,140 --> 00:19:20,460
interesting enough if you just generate

592
00:19:20,460 --> 00:19:23,100
a medicine meterpreter shell with no

593
00:19:23,100 --> 00:19:25,800
encoding like like no shikata guy Nate

594
00:19:25,800 --> 00:19:26,520
or nothing like that

595
00:19:26,520 --> 00:19:29,130
there will be static portions of op

596
00:19:29,130 --> 00:19:30,540
codes that'll be inside of your show

597
00:19:30,540 --> 00:19:32,520
code that Windows Defender will look for

598
00:19:32,520 --> 00:19:33,780
they'll take they'll generate Metasploit

599
00:19:33,780 --> 00:19:35,850
they'll take a secondary snapshot of it

600
00:19:35,850 --> 00:19:37,260
and they'll see what our static patterns

601
00:19:37,260 --> 00:19:38,400
and then start to write signatures for

602
00:19:38,400 --> 00:19:40,680
those and so all you have to do as an

603
00:19:40,680 --> 00:19:42,120
attacker is when they decide to write

604
00:19:42,120 --> 00:19:44,160
specific instruction sets that are

605
00:19:44,160 --> 00:19:46,620
common across the board is just chunk

606
00:19:46,620 --> 00:19:48,900
them up into different variables so if

607
00:19:48,900 --> 00:19:49,860
you notice here where it's highlighted

608
00:19:49,860 --> 00:19:52,170
it says you know is your X 3 3 and then

609
00:19:52,170 --> 00:19:53,430
it has a new variable and then it just

610
00:19:53,430 --> 00:19:54,720
chunks it up that was a specific

611
00:19:54,720 --> 00:19:56,490
signature that windows defender was

612
00:19:56,490 --> 00:19:57,750
looking for and if you chunk it up it's

613
00:19:57,750 --> 00:19:59,160
no problem you don't have any issue

614
00:19:59,160 --> 00:20:04,110
getting detected by antivirus and this

615
00:20:04,110 --> 00:20:05,820
is what it looks like when you get

616
00:20:05,820 --> 00:20:09,120
snagged by a mess I specifically it'll

617
00:20:09,120 --> 00:20:10,380
say the content of this has been blocked

618
00:20:10,380 --> 00:20:13,800
by your antivirus software etc etc and a

619
00:20:13,800 --> 00:20:14,910
lot of times about logs will be

620
00:20:14,910 --> 00:20:16,260
generated now what I love about this is

621
00:20:16,260 --> 00:20:18,090
that it says category suspicious

622
00:20:18,090 --> 00:20:20,940
behavior there is zero behavior going on

623
00:20:20,940 --> 00:20:23,250
here it is not behavior at all it's

624
00:20:23,250 --> 00:20:25,470
literally compare this string to this

625
00:20:25,470 --> 00:20:27,390
string here and if it matches then

626
00:20:27,390 --> 00:20:30,150
trigger a virus alarm ok there's zero

627
00:20:30,150 --> 00:20:31,980
behaviors when you see behavior alarms I

628
00:20:31,980 --> 00:20:33,600
used to get scared by I'm like oh man

629
00:20:33,600 --> 00:20:34,860
people are really going into like this

630
00:20:34,860 --> 00:20:36,690
behavior stuff but think about it and

631
00:20:36,690 --> 00:20:38,010
from an enterprise perspective at

632
00:20:38,010 --> 00:20:40,410
Microsoft can you really build in the

633
00:20:40,410 --> 00:20:42,360
mass fleet of billions and billions and

634
00:20:42,360 --> 00:20:44,100
billions of computers build good

635
00:20:44,100 --> 00:20:46,050
behavior based stuffin out there that

636
00:20:46,050 --> 00:20:48,870
100% block absolutely not

637
00:20:48,870 --> 00:20:51,060
there's no way you can't scale that you

638
00:20:51,060 --> 00:20:53,160
can't say hey if a parent-child process

639
00:20:53,160 --> 00:20:54,930
of Outlook that Exe spawns community AC

640
00:20:54,930 --> 00:20:56,700
and Power Cell that exe we're gonna

641
00:20:56,700 --> 00:20:58,800
block that because it is militia 99% of

642
00:20:58,800 --> 00:21:00,810
time it probably is but in an

643
00:21:00,810 --> 00:21:02,370
environment as fast as there's there's

644
00:21:02,370 --> 00:21:03,690
no way you're blocking that based off of

645
00:21:03,690 --> 00:21:05,940
Markov chain so let's take a look let's

646
00:21:05,940 --> 00:21:10,080
actually do a demo here of what Windows

647
00:21:10,080 --> 00:21:12,620
is looking for

648
00:21:16,090 --> 00:21:18,610
and we see that and then we got our

649
00:21:18,610 --> 00:21:20,830
Windows machine here and so this is

650
00:21:20,830 --> 00:21:22,840
Windows 10 fully patched with the latest

651
00:21:22,840 --> 00:21:25,240
signatures up there and what we're gonna

652
00:21:25,240 --> 00:21:28,000
do is take a look at what what

653
00:21:28,000 --> 00:21:29,380
specifically to be be flagged on so let

654
00:21:29,380 --> 00:21:34,360
me generate a quick shell a second me my

655
00:21:34,360 --> 00:21:43,120
IP address I could type today I cannot

656
00:21:43,120 --> 00:21:45,330
type

657
00:21:49,410 --> 00:21:51,210
now this is unicorn what's gonna do is

658
00:21:51,210 --> 00:21:54,170
it can generate a partial encoded

659
00:21:54,170 --> 00:21:56,490
command that we can just copy and paste

660
00:21:56,490 --> 00:21:58,410
somewhere for code execution okay now

661
00:21:58,410 --> 00:22:01,700
I'm gonna copy this over real quick

662
00:22:02,600 --> 00:22:07,860
anybody can read this right good so what

663
00:22:07,860 --> 00:22:09,420
we have here if you look at the very top

664
00:22:09,420 --> 00:22:12,080
let me just blow this up a little bit

665
00:22:12,080 --> 00:22:14,550
and notice here some of the funny ones

666
00:22:14,550 --> 00:22:16,080
with EDR is like carbon black for

667
00:22:16,080 --> 00:22:18,780
example looks for Parrish W dash T but

668
00:22:18,780 --> 00:22:25,170
doesn't look for /w /c okay but notice

669
00:22:25,170 --> 00:22:27,840
here that we're using a two string to

670
00:22:27,840 --> 00:22:29,160
basically convert an encoded command

671
00:22:29,160 --> 00:22:30,840
back now you may be like what this well

672
00:22:30,840 --> 00:22:33,150
down here is is our base64 encoded

673
00:22:33,150 --> 00:22:34,590
strings that have all of our code in it

674
00:22:34,590 --> 00:22:36,930
now what else to do inside of unicorn as

675
00:22:36,930 --> 00:22:39,300
I chunk up the code because a lot of

676
00:22:39,300 --> 00:22:41,700
places will look for base64 encoded

677
00:22:41,700 --> 00:22:43,110
strings and while this is a valid

678
00:22:43,110 --> 00:22:45,270
powershell syntax and most interpreters

679
00:22:45,270 --> 00:22:46,410
that are going like EDRs and stuff they

680
00:22:46,410 --> 00:22:49,410
don't recognize concatenated strings

681
00:22:49,410 --> 00:22:52,680
when it comes to encoded command now

682
00:22:52,680 --> 00:22:53,640
what I'm gonna do here is I'm just going

683
00:22:53,640 --> 00:22:57,510
to decode this really fast and I want to

684
00:22:57,510 --> 00:22:58,770
show you what's actually hat well first

685
00:22:58,770 --> 00:23:00,090
let me let me actually execute this I'm

686
00:23:00,090 --> 00:23:02,550
gonna take away the /w so you can see

687
00:23:02,550 --> 00:23:04,350
the command actually being executed let

688
00:23:04,350 --> 00:23:07,399
me run this from the command line I

689
00:23:08,570 --> 00:23:11,490
notice here we get malicious content

690
00:23:11,490 --> 00:23:13,050
right it has been blocked by your and

691
00:23:13,050 --> 00:23:14,580
about suffered hey they released another

692
00:23:14,580 --> 00:23:15,870
signature it's another signature week

693
00:23:15,870 --> 00:23:18,120
with Windows Defender folks oh it takes

694
00:23:18,120 --> 00:23:21,030
me a lot less time to rewrite certain

695
00:23:21,030 --> 00:23:22,470
portions on my code then it takes those

696
00:23:22,470 --> 00:23:23,970
folks to build these signatures so it's

697
00:23:23,970 --> 00:23:26,670
been a fun game with them it takes me

698
00:23:26,670 --> 00:23:28,680
about 20 minutes probably takes them a

699
00:23:28,680 --> 00:23:30,330
lot more resources so it's a resource

700
00:23:30,330 --> 00:23:32,840
game at this point

701
00:23:33,170 --> 00:23:35,670
so let me decode this real quick and I

702
00:23:35,670 --> 00:23:37,290
want to show you what's actually

703
00:23:37,290 --> 00:23:38,430
happening here and what's actually

704
00:23:38,430 --> 00:23:42,900
getting flagged so let me just make some

705
00:23:42,900 --> 00:23:46,250
quick changes here

706
00:23:52,130 --> 00:23:54,530
alright here's the code that's happening

707
00:23:54,530 --> 00:24:00,020
here just move over here so you can see

708
00:24:00,020 --> 00:24:02,720
it here's our code okay now you can

709
00:24:02,720 --> 00:24:03,830
notice here some of these things have

710
00:24:03,830 --> 00:24:05,299
changed over time like hey they're

711
00:24:05,299 --> 00:24:07,400
flagging on on very specific strings

712
00:24:07,400 --> 00:24:10,250
like kernel32.dll well if you put double

713
00:24:10,250 --> 00:24:11,809
quotes in there and no longer it gets

714
00:24:11,809 --> 00:24:13,610
detected it's this simple

715
00:24:13,610 --> 00:24:15,500
this simple that we're dealing with at

716
00:24:15,500 --> 00:24:17,600
this point in this case here I wrote a

717
00:24:17,600 --> 00:24:19,190
tool now this is why it takes me about

718
00:24:19,190 --> 00:24:20,030
20 minutes to do it

719
00:24:20,030 --> 00:24:22,220
is I wrote a tool that natively

720
00:24:22,220 --> 00:24:24,020
understands the PowerShell language I

721
00:24:24,020 --> 00:24:25,669
wrote it wrote in Python and it looks at

722
00:24:25,669 --> 00:24:28,000
my code and it basically submits it to

723
00:24:28,000 --> 00:24:30,440
Microsoft's defender and then it finds

724
00:24:30,440 --> 00:24:32,210
the chunk part that of the actual code

725
00:24:32,210 --> 00:24:34,070
that is being flagged by NRS or if

726
00:24:34,070 --> 00:24:36,020
there's multiple flags that are being

727
00:24:36,020 --> 00:24:36,950
flagged by universe I'm going to run

728
00:24:36,950 --> 00:24:38,240
this really quick let me just regenerate

729
00:24:38,240 --> 00:24:42,549
my code real fast so we can see it and

730
00:24:42,549 --> 00:24:46,070
then I'm gonna run my tool that will go

731
00:24:46,070 --> 00:24:47,539
through and find out what part and and

732
00:24:47,539 --> 00:24:48,530
you can just by trial-and-error if you

733
00:24:48,530 --> 00:24:54,559
want it to you and what it's gonna do is

734
00:24:54,559 --> 00:24:55,970
it's gonna chunk up on my code submit it

735
00:24:55,970 --> 00:24:57,230
to defender to see what's actually

736
00:24:57,230 --> 00:25:00,830
happening and what gets detected it

737
00:25:00,830 --> 00:25:03,340
takes a sec

738
00:25:07,730 --> 00:25:09,620
it takes like 30 seconds if that

739
00:25:09,620 --> 00:25:12,950
depending on how long it takes so I

740
00:25:12,950 --> 00:25:15,020
found one string so it's flat Windows

741
00:25:15,020 --> 00:25:16,250
Defender is flagging off a very specific

742
00:25:16,250 --> 00:25:17,960
unicorn command called four which is

743
00:25:17,960 --> 00:25:22,490
basically a four loop and it's going

744
00:25:22,490 --> 00:25:23,690
through all the opcodes and it found

745
00:25:23,690 --> 00:25:24,950
that that specific string right there

746
00:25:24,950 --> 00:25:29,810
triggers on a B detection okay so if we

747
00:25:29,810 --> 00:25:33,500
change you look at the four instead of

748
00:25:33,500 --> 00:25:39,370
doing four why not just do while true

749
00:25:39,970 --> 00:25:41,450
all right

750
00:25:41,450 --> 00:25:45,980
and it also said and let's let's let's

751
00:25:45,980 --> 00:25:47,030
submit this I want to show you real

752
00:25:47,030 --> 00:25:49,370
quick submitting this into the

753
00:25:49,370 --> 00:25:50,420
interpreters well so you can see it's

754
00:25:50,420 --> 00:25:52,460
still the same thing so if I hit if I

755
00:25:52,460 --> 00:25:54,260
hit play notice it's saying getting

756
00:25:54,260 --> 00:25:56,060
blocked by the the at the bottom so

757
00:25:56,060 --> 00:25:57,640
we're looking at the same same code here

758
00:25:57,640 --> 00:26:01,760
so we also found that this string here 0

759
00:26:01,760 --> 00:26:05,450
0 X 8 D start these op codes here we're

760
00:26:05,450 --> 00:26:07,850
gonna what we're gonna do let's take a

761
00:26:07,850 --> 00:26:10,550
look at this and I'll just break this up

762
00:26:10,550 --> 00:26:15,550
real quick I also call Camus like house

763
00:26:15,550 --> 00:26:21,200
and I'll do mu two real complex real

764
00:26:21,200 --> 00:26:24,380
hard let me see where and then so I need

765
00:26:24,380 --> 00:26:30,560
to add this here and what I'm gonna do

766
00:26:30,560 --> 00:26:35,120
just to make sure I'm just gonna create

767
00:26:35,120 --> 00:26:42,260
my listener see if it works better

768
00:26:42,260 --> 00:26:45,530
handler I'm gonna copy and paste this

769
00:26:45,530 --> 00:26:53,270
into here and we got our show real

770
00:26:53,270 --> 00:26:57,790
difficult right machine-learning ha

771
00:26:59,039 --> 00:27:04,210
behavior yes right so if you look at

772
00:27:04,210 --> 00:27:06,340
some resources you look at all blocks at

773
00:27:06,340 --> 00:27:07,779
Microsoft comm this came out recently

774
00:27:07,779 --> 00:27:09,730
and they've been touting a Massiah

775
00:27:09,730 --> 00:27:11,350
sharpshooter now one thing that

776
00:27:11,350 --> 00:27:13,210
Microsoft did that was awesome

777
00:27:13,210 --> 00:27:15,129
with sharpshooter and sharpshooter is a

778
00:27:15,129 --> 00:27:17,019
very specific technique for DC ization

779
00:27:17,019 --> 00:27:19,179
acts is that they actually blocked a

780
00:27:19,179 --> 00:27:21,340
specific type of attack on called

781
00:27:21,340 --> 00:27:23,499
dynamic invoke and that wasn't commonly

782
00:27:23,499 --> 00:27:25,029
used across the board and dynamic Evoque

783
00:27:25,029 --> 00:27:27,399
once that's blocked it's very difficult

784
00:27:27,399 --> 00:27:28,840
to do DC realization attacks and if you

785
00:27:28,840 --> 00:27:30,549
obviously did enough that's great but

786
00:27:30,549 --> 00:27:31,840
here's some of the benefits of a msi

787
00:27:31,840 --> 00:27:33,999
notice on top that's the obvious gated

788
00:27:33,999 --> 00:27:36,190
code on top on the below we can actually

789
00:27:36,190 --> 00:27:38,139
see the div skated code directly through

790
00:27:38,139 --> 00:27:39,639
a messiah there are benefits from an

791
00:27:39,639 --> 00:27:41,499
analyst perspective in integrating the

792
00:27:41,499 --> 00:27:43,659
MSI but it's still static signature

793
00:27:43,659 --> 00:27:45,639
based detection isn't it it's not

794
00:27:45,639 --> 00:27:47,139
behavior it's not machine learning but

795
00:27:47,139 --> 00:27:48,820
you have the data at least available to

796
00:27:48,820 --> 00:27:52,149
you to be able to look for I just wanted

797
00:27:52,149 --> 00:27:53,499
to throw a quick dig on the machine

798
00:27:53,499 --> 00:27:54,489
learning thing I'm on their comments

799
00:27:54,489 --> 00:27:56,940
they're not happening

800
00:27:56,940 --> 00:28:00,129
most EDRs pretty trivial to bypass as

801
00:28:00,129 --> 00:28:02,379
well this is a good example for for

802
00:28:02,379 --> 00:28:05,139
carbon black command a DX e / c / q

803
00:28:05,139 --> 00:28:07,559
equals will get caught command ID XE /

804
00:28:07,559 --> 00:28:16,359
parent c /kr q does not get caught so

805
00:28:16,359 --> 00:28:18,100
we're still a signature driven industry

806
00:28:18,100 --> 00:28:19,539
watch list in carbon black are

807
00:28:19,539 --> 00:28:21,789
significant a lot of the tools out there

808
00:28:21,789 --> 00:28:24,129
that tout ninety-nine percent protection

809
00:28:24,129 --> 00:28:28,119
100% detection I love that comment you

810
00:28:28,119 --> 00:28:29,320
know what the hundred percent detection

811
00:28:29,320 --> 00:28:31,539
is 100 percent detection on what they're

812
00:28:31,539 --> 00:28:34,299
looking for if you change it in any way

813
00:28:34,299 --> 00:28:36,549
shape or form you're fine you're 100

814
00:28:36,549 --> 00:28:38,590
percent fine absolutely fine no issues

815
00:28:38,590 --> 00:28:42,190
whatsoever and so how detect today is

816
00:28:42,190 --> 00:28:43,450
this machine learning stuff is really

817
00:28:43,450 --> 00:28:45,700
based on telemetry and telemetry if

818
00:28:45,700 --> 00:28:47,470
you're not familiar that term is data

819
00:28:47,470 --> 00:28:48,730
that they're harvesting off of your

820
00:28:48,730 --> 00:28:50,830
endpoints and using that it's a massive

821
00:28:50,830 --> 00:28:52,419
big Splunk instance to be able to query

822
00:28:52,419 --> 00:28:54,070
and write signatures off of and the same

823
00:28:54,070 --> 00:28:55,929
thing goes for virustotal when that debt

824
00:28:55,929 --> 00:28:58,090
control settings - MS came out our

825
00:28:58,090 --> 00:29:00,070
settings content SMS came out what I did

826
00:29:00,070 --> 00:29:04,470
is as I took that and I named it apt 28

827
00:29:04,470 --> 00:29:09,669
dot settings control - MS and in the

828
00:29:09,669 --> 00:29:11,230
deep links I had like a pretty op

829
00:29:11,230 --> 00:29:12,669
skated PowerShell command and in there I

830
00:29:12,669 --> 00:29:14,590
put a shout-out to one of my friends and

831
00:29:14,590 --> 00:29:16,660
I uploaded the virustotal within about

832
00:29:16,660 --> 00:29:18,280
14 minutes I had somebody reaching out

833
00:29:18,280 --> 00:29:19,299
to me saying hey it was a funny joke

834
00:29:19,299 --> 00:29:21,610
they literally have massive armies of

835
00:29:21,610 --> 00:29:23,650
people farming through virustotal data

836
00:29:23,650 --> 00:29:26,049
to write signatures they literally have

837
00:29:26,049 --> 00:29:27,820
telemetry coming out of Windows Defender

838
00:29:27,820 --> 00:29:30,100
and they have a team of people writing

839
00:29:30,100 --> 00:29:32,320
signatures that is our artificial

840
00:29:32,320 --> 00:29:33,490
intelligence and machine learning of

841
00:29:33,490 --> 00:29:37,630
today human beings going through massive

842
00:29:37,630 --> 00:29:39,610
amounts of data writing signatures and

843
00:29:39,610 --> 00:29:41,740
again if you change that in some way

844
00:29:41,740 --> 00:29:42,549
shape or form

845
00:29:42,549 --> 00:29:45,600
you're usually fine when it comes to it

846
00:29:45,600 --> 00:29:48,820
code execution this is from what we see

847
00:29:48,820 --> 00:29:50,980
a binary defense but today about 84% of

848
00:29:50,980 --> 00:29:52,240
what we see are still binary Dropper

849
00:29:52,240 --> 00:29:53,890
dropping an executable usually unco

850
00:29:53,890 --> 00:29:56,020
non-code signed on to an environment to

851
00:29:56,020 --> 00:29:57,910
get code execution still about 84%

852
00:29:57,910 --> 00:29:59,740
that's the massive amount of that's the

853
00:29:59,740 --> 00:30:01,419
most prevalent amount of attacks that

854
00:30:01,419 --> 00:30:03,220
are out there 13% is PowerShell

855
00:30:03,220 --> 00:30:05,350
injection okay definitely an increase

856
00:30:05,350 --> 00:30:06,400
from last year it was like 8 percent

857
00:30:06,400 --> 00:30:07,840
last year so Power Cells definitely

858
00:30:07,840 --> 00:30:10,240
prevalence in environments now what

859
00:30:10,240 --> 00:30:11,290
we're starting to see is the change to

860
00:30:11,290 --> 00:30:13,720
to application control bypass these what

861
00:30:13,720 --> 00:30:15,940
we call wall bez binaries and scripts

862
00:30:15,940 --> 00:30:17,650
and I'll talk a little about this but

863
00:30:17,650 --> 00:30:19,120
most companies today are still focused

864
00:30:19,120 --> 00:30:20,380
on executables in PowerShell which is

865
00:30:20,380 --> 00:30:21,580
where you should be that's your highest

866
00:30:21,580 --> 00:30:23,470
percentage of attack surface when it

867
00:30:23,470 --> 00:30:25,270
comes to be prominent predominant amount

868
00:30:25,270 --> 00:30:26,950
of out there but we still need to be

869
00:30:26,950 --> 00:30:30,040
looking out for these Lal Baz if there's

870
00:30:30,040 --> 00:30:32,230
a good good source from odof our mo o

871
00:30:32,230 --> 00:30:34,990
d'Ivoire has a great site that lists all

872
00:30:34,990 --> 00:30:36,460
of the different application control

873
00:30:36,460 --> 00:30:37,809
bypass techniques and scripts that you

874
00:30:37,809 --> 00:30:39,640
can use and what these are if you're not

875
00:30:39,640 --> 00:30:41,830
familiar is that Windows come shipped

876
00:30:41,830 --> 00:30:43,299
with all these different binaries rights

877
00:30:43,299 --> 00:30:44,919
you have to run an operating system

878
00:30:44,919 --> 00:30:46,150
right you have to have PE files you have

879
00:30:46,150 --> 00:30:48,070
to have executables and so when that

880
00:30:48,070 --> 00:30:49,840
when the operating system starts you

881
00:30:49,840 --> 00:30:51,610
have what explored ID XE you have all

882
00:30:51,610 --> 00:30:53,169
these different executables in your

883
00:30:53,169 --> 00:30:54,820
operating system right well a lot of

884
00:30:54,820 --> 00:30:56,590
these have code execution functionality

885
00:30:56,590 --> 00:30:58,630
with zero logging whatsoever so a good

886
00:30:58,630 --> 00:31:01,000
example of like MSHDA wmic register here

887
00:31:01,000 --> 00:31:04,360
are 32 CBD DHCC stic even BG info and

888
00:31:04,360 --> 00:31:05,470
other things that the background info

889
00:31:05,470 --> 00:31:07,600
has remote code execution functionality

890
00:31:07,600 --> 00:31:09,850
with VB script so these are code signed

891
00:31:09,850 --> 00:31:11,590
binaries from Microsoft that have

892
00:31:11,590 --> 00:31:12,940
additional functionality to go and

893
00:31:12,940 --> 00:31:14,230
download code from the internet and

894
00:31:14,230 --> 00:31:16,299
execute it either in memory directly or

895
00:31:16,299 --> 00:31:18,520
download a file and execute it and so

896
00:31:18,520 --> 00:31:19,960
these these things are great for us from

897
00:31:19,960 --> 00:31:21,549
an application whitelisting perspective

898
00:31:21,549 --> 00:31:25,120
why because you whitelist Microsoft

899
00:31:25,120 --> 00:31:27,760
signing certificates don't you and so

900
00:31:27,760 --> 00:31:28,990
this is where a lot of the research is

901
00:31:28,990 --> 00:31:31,390
going into today is finding these in

902
00:31:31,390 --> 00:31:33,040
either publishing them Casey Smith from

903
00:31:33,040 --> 00:31:34,720
sub T is one of the best resources when

904
00:31:34,720 --> 00:31:36,190
it comes to finding these you have a lot

905
00:31:36,190 --> 00:31:38,200
of other folks too that are that are

906
00:31:38,200 --> 00:31:39,730
doing research into this in this area

907
00:31:39,730 --> 00:31:41,860
here but what's interesting as less time

908
00:31:41,860 --> 00:31:43,300
I checked there are 68 total binaries

909
00:31:43,300 --> 00:31:45,760
just binaries alone that have additional

910
00:31:45,760 --> 00:31:47,470
code execution functionality in them

911
00:31:47,470 --> 00:31:48,610
that allow you to execute code on the

912
00:31:48,610 --> 00:31:50,770
system without detection and that's

913
00:31:50,770 --> 00:31:52,480
where a lot of the research at axe are

914
00:31:52,480 --> 00:31:54,700
going into right now so my personal

915
00:31:54,700 --> 00:31:58,090
favorites this is my favorite meme I've

916
00:31:58,090 --> 00:31:59,470
literally put this in every one of my

917
00:31:59,470 --> 00:32:00,880
presentations for like the past five

918
00:32:00,880 --> 00:32:02,710
years and it just gets better as you

919
00:32:02,710 --> 00:32:04,870
watch it so like you know and I usually

920
00:32:04,870 --> 00:32:06,309
use this for ones I'm gonna talk for a

921
00:32:06,309 --> 00:32:07,480
little bit because it entertains the

922
00:32:07,480 --> 00:32:08,559
audience and it just gets better like

923
00:32:08,559 --> 00:32:09,580
people are looking like it's gonna get

924
00:32:09,580 --> 00:32:12,300
better it is getting better right sorry

925
00:32:12,300 --> 00:32:15,100
awesome whoever created that is like the

926
00:32:15,100 --> 00:32:16,570
most genius person I've ever seen in my

927
00:32:16,570 --> 00:32:20,800
life it's like the perfect skinny one

928
00:32:20,800 --> 00:32:23,260
second one second all right all right

929
00:32:23,260 --> 00:32:25,870
good so some of my favorite ones like

930
00:32:25,870 --> 00:32:28,150
WIC for example you can use the slash

931
00:32:28,150 --> 00:32:30,730
formats which will look for HTTP bad

932
00:32:30,730 --> 00:32:33,100
sitcom and you can download XSL an

933
00:32:33,100 --> 00:32:35,350
execute code cert utils you know certain

934
00:32:35,350 --> 00:32:36,340
you still has the ability to download

935
00:32:36,340 --> 00:32:37,809
code directly from the internet one of

936
00:32:37,809 --> 00:32:38,860
the cool ones we saw in the wild that

937
00:32:38,860 --> 00:32:41,110
Daniel Bohannon did a tweet on recently

938
00:32:41,110 --> 00:32:42,670
no sorry about prior a few months ago

939
00:32:42,670 --> 00:32:45,040
but as using cert util to download power

940
00:32:45,040 --> 00:32:46,420
show code and then execute the

941
00:32:46,420 --> 00:32:47,530
PowerShell code and it went with in

942
00:32:47,530 --> 00:32:48,850
PowerShell what is that that that

943
00:32:48,850 --> 00:32:51,280
specific chain do they may know so if

944
00:32:51,280 --> 00:32:52,600
we're looking for PowerShell baking out

945
00:32:52,600 --> 00:32:54,370
the internet but instead they use cert

946
00:32:54,370 --> 00:32:55,990
util to go and download the PowerShell

947
00:32:55,990 --> 00:32:57,190
code and then execute the PowerShell

948
00:32:57,190 --> 00:32:58,360
code that doesn't use the internet what

949
00:32:58,360 --> 00:33:00,940
happens boom there goes our detection

950
00:33:00,940 --> 00:33:03,610
criteria right what happens if you write

951
00:33:03,610 --> 00:33:05,020
certain things in EDRs

952
00:33:05,020 --> 00:33:07,860
what happens when you rename PowerShell

953
00:33:07,860 --> 00:33:10,270
yeah right it's usually that easy by the

954
00:33:10,270 --> 00:33:12,940
way and so a lot of these have the

955
00:33:12,940 --> 00:33:14,470
ability for code execution em sh t is

956
00:33:14,470 --> 00:33:16,179
another good example um you can actually

957
00:33:16,179 --> 00:33:17,980
you don't have to the extension types at

958
00:33:17,980 --> 00:33:18,970
the end of them you can have it be a dot

959
00:33:18,970 --> 00:33:21,220
txt what happens if you see em SH if you

960
00:33:21,220 --> 00:33:24,490
see Internet Explorer user agent or user

961
00:33:24,490 --> 00:33:26,770
agent from from MSHDA go out to github

962
00:33:26,770 --> 00:33:28,990
and download something like only

963
00:33:28,990 --> 00:33:31,150
github.com slash awesome tool slash

964
00:33:31,150 --> 00:33:34,200
license that's suspicious to you

965
00:33:34,200 --> 00:33:37,450
probably not depends on if it's em sh t

966
00:33:37,450 --> 00:33:38,530
going out but a lot of

967
00:33:38,530 --> 00:33:40,030
have the ability to download code and

968
00:33:40,030 --> 00:33:41,260
execute and that's what's important now

969
00:33:41,260 --> 00:33:43,210
let's talk about behavior for a second

970
00:33:43,210 --> 00:33:47,320
so I saw when when the wmic portion came

971
00:33:47,320 --> 00:33:49,630
out most almost all the EDRs

972
00:33:49,630 --> 00:33:51,400
all the signatures they come out looks

973
00:33:51,400 --> 00:33:54,580
4/4 Matt what happens if you change

974
00:33:54,580 --> 00:33:56,170
slash format is something a little bit

975
00:33:56,170 --> 00:33:59,890
different well they're 100% detecting on

976
00:33:59,890 --> 00:34:02,890
slash format but they're not 100%

977
00:34:02,890 --> 00:34:04,600
detecting on anything that you modify or

978
00:34:04,600 --> 00:34:06,370
change in any way shape or form again

979
00:34:06,370 --> 00:34:08,080
very easy for circumvention a good way

980
00:34:08,080 --> 00:34:09,880
to detect something like this would be

981
00:34:09,880 --> 00:34:12,400
why would wmic tidy XC and ever in the

982
00:34:12,400 --> 00:34:13,870
first place beacon out to the Internet

983
00:34:13,870 --> 00:34:15,489
why would it ever got to the intern in

984
00:34:15,489 --> 00:34:16,960
the first place WIC doesn't go out to

985
00:34:16,960 --> 00:34:19,780
the internet MSHDA typically does not go

986
00:34:19,780 --> 00:34:20,650
out to dinner the only time I've ever

987
00:34:20,650 --> 00:34:23,020
seen MSHDA go out to the internet is

988
00:34:23,020 --> 00:34:24,250
that when they're to use like an

989
00:34:24,250 --> 00:34:26,560
ancillary method for AWS management

990
00:34:26,560 --> 00:34:29,350
services which uses HTA's but it's like

991
00:34:29,350 --> 00:34:30,610
a fallback method that they couldn't use

992
00:34:30,610 --> 00:34:31,840
the first one to go into so you

993
00:34:31,840 --> 00:34:33,159
typically don't see em sh t in

994
00:34:33,159 --> 00:34:33,820
environments

995
00:34:33,820 --> 00:34:36,340
register you're at 32 sometimes can go

996
00:34:36,340 --> 00:34:38,230
out to local IP addresses but never

997
00:34:38,230 --> 00:34:39,610
beacons out to the Internet in most

998
00:34:39,610 --> 00:34:41,199
cases so again a lot of things that we

999
00:34:41,199 --> 00:34:44,199
can look for and so the balance that we

1000
00:34:44,199 --> 00:34:46,060
have to figure out is that most

1001
00:34:46,060 --> 00:34:48,610
companies don't have the people inside

1002
00:34:48,610 --> 00:34:51,699
to research all of these techniques and

1003
00:34:51,699 --> 00:34:54,130
to understand what they are and we'll

1004
00:34:54,130 --> 00:34:56,440
talk about automation testing here in a

1005
00:34:56,440 --> 00:34:58,600
few but you might have the data but you

1006
00:34:58,600 --> 00:35:00,070
don't know what to do with it hey we're

1007
00:35:00,070 --> 00:35:02,020
getting em point locs awesome but you

1008
00:35:02,020 --> 00:35:03,430
have to have em point locs today there's

1009
00:35:03,430 --> 00:35:04,360
no if ands or buts

1010
00:35:04,360 --> 00:35:05,980
I know increases your Splunk licensing I

1011
00:35:05,980 --> 00:35:08,380
am NOT a spokesperson for Splunk but it

1012
00:35:08,380 --> 00:35:09,580
increases just your licensing is

1013
00:35:09,580 --> 00:35:10,960
substantially you have to have endpoint

1014
00:35:10,960 --> 00:35:12,700
logs and point logs are like number one

1015
00:35:12,700 --> 00:35:14,440
when it comes to attack surface does it

1016
00:35:14,440 --> 00:35:15,730
mean you shouldn't do server decimation

1017
00:35:15,730 --> 00:35:16,960
do dns does it mean you should do

1018
00:35:16,960 --> 00:35:18,730
firewall logs but it means that the

1019
00:35:18,730 --> 00:35:20,170
importance of endpoint logs at this

1020
00:35:20,170 --> 00:35:21,730
point time is substantially higher and

1021
00:35:21,730 --> 00:35:24,280
so doing that and implementing a

1022
00:35:24,280 --> 00:35:26,050
protection again takes that long time

1023
00:35:26,050 --> 00:35:28,350
and investment and so what do you do

1024
00:35:28,350 --> 00:35:31,570
when you don't have the people because

1025
00:35:31,570 --> 00:35:32,920
we would we would solve security right

1026
00:35:32,920 --> 00:35:35,050
like I'm here to solve security today in

1027
00:35:35,050 --> 00:35:36,580
today's presentation right so we can

1028
00:35:36,580 --> 00:35:39,520
solve security today period 100% like I

1029
00:35:39,520 --> 00:35:40,450
would say that we could solve secured

1030
00:35:40,450 --> 00:35:42,160
99% if we had one dedicated security

1031
00:35:42,160 --> 00:35:44,290
person to every single person employee

1032
00:35:44,290 --> 00:35:45,460
that you had in your organization

1033
00:35:45,460 --> 00:35:46,480
because then you can sit behind the

1034
00:35:46,480 --> 00:35:47,760
person like hey don't click that stuff

1035
00:35:47,760 --> 00:35:50,830
that's ridiculous right your response

1036
00:35:50,830 --> 00:35:51,940
time would be awesome all you

1037
00:35:51,940 --> 00:35:53,830
anyway well me me take the laptop they

1038
00:35:53,830 --> 00:35:55,510
passed over to Bob Bob pass that Mary

1039
00:35:55,510 --> 00:35:57,280
and Mary pass to Jojo reimage it you

1040
00:35:57,280 --> 00:35:58,630
send it back it's a little loop be

1041
00:35:58,630 --> 00:36:00,210
awesome it'd be so efficient

1042
00:36:00,210 --> 00:36:01,900
unfortunately we don't have that ability

1043
00:36:01,900 --> 00:36:04,870
do we and so we have to say okay well we

1044
00:36:04,870 --> 00:36:07,050
don't have the people to do this stuff

1045
00:36:07,050 --> 00:36:10,630
how do we get to a model where we can

1046
00:36:10,630 --> 00:36:11,980
see these types of attacks in our

1047
00:36:11,980 --> 00:36:14,100
environments and keep up the date and

1048
00:36:14,100 --> 00:36:16,950
that really comes to leveraging read and

1049
00:36:16,950 --> 00:36:19,150
you'll hear this concept a lot around

1050
00:36:19,150 --> 00:36:20,710
purple to me I'm sure it's it's me a lot

1051
00:36:20,710 --> 00:36:21,940
everybody knows the concept of

1052
00:36:21,940 --> 00:36:23,050
probability I mean blue team's

1053
00:36:23,050 --> 00:36:24,550
and red team's working together to

1054
00:36:24,550 --> 00:36:26,920
figure out things but in most cases the

1055
00:36:26,920 --> 00:36:28,360
blue team even if it's a hunting that's

1056
00:36:28,360 --> 00:36:30,010
supposed to understand a lot of the

1057
00:36:30,010 --> 00:36:31,960
TTP's that are out there or gets threat

1058
00:36:31,960 --> 00:36:33,370
intelligence that shows them specific

1059
00:36:33,370 --> 00:36:35,140
indicators doesn't understand in most

1060
00:36:35,140 --> 00:36:37,270
cases how those techniques work you

1061
00:36:37,270 --> 00:36:38,560
don't understand when you execute the

1062
00:36:38,560 --> 00:36:39,640
specific command this is what's

1063
00:36:39,640 --> 00:36:41,650
happening behind the scene or this is a

1064
00:36:41,650 --> 00:36:42,970
new attack vector that came out that

1065
00:36:42,970 --> 00:36:44,440
applies to you know in our environment

1066
00:36:44,440 --> 00:36:46,270
because of this and if you don't

1067
00:36:46,270 --> 00:36:49,030
leverage red then you don't understand

1068
00:36:49,030 --> 00:36:50,170
the attacks that are happening out there

1069
00:36:50,170 --> 00:36:52,420
today it's really important that's the

1070
00:36:52,420 --> 00:36:52,900
solution

1071
00:36:52,900 --> 00:36:54,670
today it's often referred to as purple

1072
00:36:54,670 --> 00:36:56,650
teaming and it's collaboration between

1073
00:36:56,650 --> 00:36:58,360
red and blue working together to

1074
00:36:58,360 --> 00:37:00,250
simulate an actual attack and what I

1075
00:37:00,250 --> 00:37:01,570
mean by that it's a lot different than a

1076
00:37:01,570 --> 00:37:03,280
penetration test right a penetration

1077
00:37:03,280 --> 00:37:04,810
test we try to find as many exposures as

1078
00:37:04,810 --> 00:37:06,760
possible during a given time purple team

1079
00:37:06,760 --> 00:37:08,170
engagements aren't supposed to be

1080
00:37:08,170 --> 00:37:10,780
something where you are trying to fish

1081
00:37:10,780 --> 00:37:12,340
individual users and you're trying to

1082
00:37:12,340 --> 00:37:14,800
find different ways or avenues in you're

1083
00:37:14,800 --> 00:37:16,810
simulating very specific attack patterns

1084
00:37:16,810 --> 00:37:19,030
and you're working with the blue team to

1085
00:37:19,030 --> 00:37:20,410
build detection cards here that works

1086
00:37:20,410 --> 00:37:22,360
let me ask a question if a threat hunter

1087
00:37:22,360 --> 00:37:23,680
and this is not no offense of threat

1088
00:37:23,680 --> 00:37:24,970
hunters are absolutely brilliant

1089
00:37:24,970 --> 00:37:26,860
fantastic and needed and also our stuff

1090
00:37:26,860 --> 00:37:28,750
but if a threat hunter is building a

1091
00:37:28,750 --> 00:37:30,370
detection hole off of a specific attack

1092
00:37:30,370 --> 00:37:33,490
what happens you get wmic

1093
00:37:33,490 --> 00:37:35,860
slash format in those directions if you

1094
00:37:35,860 --> 00:37:37,240
get a red teamer that's helping build

1095
00:37:37,240 --> 00:37:38,320
those out what do they do

1096
00:37:38,320 --> 00:37:40,590
oh hell I can bypass that with this

1097
00:37:40,590 --> 00:37:43,000
right and now your detection criteria

1098
00:37:43,000 --> 00:37:44,860
becomes much better doesn't it so

1099
00:37:44,860 --> 00:37:46,450
simulating actual attacks in your

1100
00:37:46,450 --> 00:37:48,220
environment and working with the blue to

1101
00:37:48,220 --> 00:37:49,990
collaborate work together mix makes a

1102
00:37:49,990 --> 00:37:51,850
huge difference when it comes to those

1103
00:37:51,850 --> 00:37:53,290
those simulations and it's got to be

1104
00:37:53,290 --> 00:37:55,600
continual ongoing exercise it's not

1105
00:37:55,600 --> 00:37:57,460
something that's like hey I'm gonna do

1106
00:37:57,460 --> 00:37:59,620
once a quarter or once a year and then

1107
00:37:59,620 --> 00:38:01,240
from there we're gonna walk away this is

1108
00:38:01,240 --> 00:38:02,680
something that needs to be built into

1109
00:38:02,680 --> 00:38:04,150
our programs that we do today we don't

1110
00:38:04,150 --> 00:38:05,509
do that right now

1111
00:38:05,509 --> 00:38:07,489
use these as exercises as in conjunction

1112
00:38:07,489 --> 00:38:09,199
with our penetration test you should

1113
00:38:09,199 --> 00:38:11,089
have an internal dedicated red team you

1114
00:38:11,089 --> 00:38:13,069
should have an internal dedicated blue

1115
00:38:13,069 --> 00:38:14,599
team and they should be working together

1116
00:38:14,599 --> 00:38:16,849
to do this corrective them yeah and the

1117
00:38:16,849 --> 00:38:18,739
reason I say this is that what's your

1118
00:38:18,739 --> 00:38:21,109
biggest return when it comes to being

1119
00:38:21,109 --> 00:38:23,049
able to stop attacks

1120
00:38:23,049 --> 00:38:25,789
protection is one right detection is

1121
00:38:25,789 --> 00:38:28,639
there if your detection sucks you have a

1122
00:38:28,639 --> 00:38:29,869
big problem on your hands when it comes

1123
00:38:29,869 --> 00:38:31,789
to responding to those incidents these

1124
00:38:31,789 --> 00:38:33,709
simulations really help with that it

1125
00:38:33,709 --> 00:38:35,089
also goes into building threat models

1126
00:38:35,089 --> 00:38:36,919
everybody hates it hates talking about

1127
00:38:36,919 --> 00:38:37,969
threat modeling because no one

1128
00:38:37,969 --> 00:38:40,039
understands threat modeling but really

1129
00:38:40,039 --> 00:38:42,049
understanding what you're trying to

1130
00:38:42,049 --> 00:38:44,479
protect the adversaries groups that are

1131
00:38:44,479 --> 00:38:45,619
in play and then building out your

1132
00:38:45,619 --> 00:38:47,839
capabilities to simulate those attacks

1133
00:38:47,839 --> 00:38:49,279
in your environment and and what should

1134
00:38:49,279 --> 00:38:50,539
really be happening is the red team

1135
00:38:50,539 --> 00:38:53,179
should be up here a little bit right and

1136
00:38:53,179 --> 00:38:54,619
your blue team should want to get to

1137
00:38:54,619 --> 00:38:56,479
here and then your red team goes here

1138
00:38:56,479 --> 00:38:58,609
and you go like this right and it's

1139
00:38:58,609 --> 00:38:59,929
about going through and it doesn't mean

1140
00:38:59,929 --> 00:39:01,729
you have to detect everything that's out

1141
00:39:01,729 --> 00:39:03,619
there but a good example like lateral

1142
00:39:03,619 --> 00:39:07,519
movements people focus on decom lateral

1143
00:39:07,519 --> 00:39:10,549
movements pass the hash other methods

1144
00:39:10,549 --> 00:39:12,889
for 4wi exact to get to understand

1145
00:39:12,889 --> 00:39:14,299
letter movement you know many different

1146
00:39:14,299 --> 00:39:15,619
types of lateral movement there is in

1147
00:39:15,619 --> 00:39:18,979
your environment lots however if you

1148
00:39:18,979 --> 00:39:19,849
look for something something something

1149
00:39:19,849 --> 00:39:21,799
simple like here we're gonna get all

1150
00:39:21,799 --> 00:39:23,599
local logs and we're gonna do forty

1151
00:39:23,599 --> 00:39:25,969
seventh log ID 46 24 we're gonna look

1152
00:39:25,969 --> 00:39:28,130
for login type 3 and we're gonna see

1153
00:39:28,130 --> 00:39:29,719
what workstation or workstation lateral

1154
00:39:29,719 --> 00:39:30,609
movement that we have in our environment

1155
00:39:30,609 --> 00:39:33,679
that is a very specific behavior in our

1156
00:39:33,679 --> 00:39:35,059
environment instead of looking for a

1157
00:39:35,059 --> 00:39:36,229
very specific pattern in our

1158
00:39:36,229 --> 00:39:37,819
environments and based on your

1159
00:39:37,819 --> 00:39:38,809
environment saying hey well maybe we

1160
00:39:38,809 --> 00:39:40,009
have a few service accounts coming from

1161
00:39:40,009 --> 00:39:41,749
this source IP address let's say put

1162
00:39:41,749 --> 00:39:43,579
exceptions into those but let's look at

1163
00:39:43,579 --> 00:39:45,019
lateral movement as a whole and what

1164
00:39:45,019 --> 00:39:46,279
we're seeing do you want to see Bob and

1165
00:39:46,279 --> 00:39:49,429
sales moving laterally to Mary Ann I t's

1166
00:39:49,429 --> 00:39:52,069
computer that's probably not a good

1167
00:39:52,069 --> 00:39:53,359
indication that something's right there

1168
00:39:53,359 --> 00:39:57,319
again behavior versus pattern the red

1169
00:39:57,319 --> 00:39:58,880
seem responsibilities in a big portion

1170
00:39:58,880 --> 00:40:01,489
of this comes down to research research

1171
00:40:01,489 --> 00:40:03,499
has to be the foundation of what makes

1172
00:40:03,499 --> 00:40:05,569
up that red team building out you might

1173
00:40:05,569 --> 00:40:06,709
start up here we're gonna do Metasploit

1174
00:40:06,709 --> 00:40:08,089
meterpreter with no encoding and we're

1175
00:40:08,089 --> 00:40:09,319
gonna do encoding here we're gonna do

1176
00:40:09,319 --> 00:40:10,669
cobalt strike okay now we need to use

1177
00:40:10,669 --> 00:40:13,339
our own custom c2 infrastructure to

1178
00:40:13,339 --> 00:40:15,829
build out and use a undocumented method

1179
00:40:15,829 --> 00:40:17,449
for code execution because our team is

1180
00:40:17,449 --> 00:40:18,830
so good at this point

1181
00:40:18,830 --> 00:40:21,770
um we uh stood in a sales pitch there's

1182
00:40:21,770 --> 00:40:23,330
a lot of great companies out there a

1183
00:40:23,330 --> 00:40:25,370
trusted SEC we found a couple customers

1184
00:40:25,370 --> 00:40:27,320
only a couple like to that the

1185
00:40:27,320 --> 00:40:29,510
sophistication level was so high that it

1186
00:40:29,510 --> 00:40:30,910
made us look like a bunch of children

1187
00:40:30,910 --> 00:40:33,890
and so we ended up dedicating our entire

1188
00:40:33,890 --> 00:40:35,510
team a year and a half ago to building

1189
00:40:35,510 --> 00:40:37,490
an entire research team for doing

1190
00:40:37,490 --> 00:40:38,690
methods and techniques that haven't been

1191
00:40:38,690 --> 00:40:39,950
discovered before so that we can get

1192
00:40:39,950 --> 00:40:41,330
access to those environments and do it

1193
00:40:41,330 --> 00:40:44,060
and we do very well at that now but

1194
00:40:44,060 --> 00:40:45,620
during those periods of time like there

1195
00:40:45,620 --> 00:40:47,270
are only a few companies that have hit a

1196
00:40:47,270 --> 00:40:49,340
level based on what they're doing to get

1197
00:40:49,340 --> 00:40:50,900
to that specific type of level out there

1198
00:40:50,900 --> 00:40:52,370
and that big that's because the

1199
00:40:52,370 --> 00:40:53,690
continuous needs being a lot of a lot of

1200
00:40:53,690 --> 00:40:56,570
testing and really your red team output

1201
00:40:56,570 --> 00:40:58,490
directly equates into what you're doing

1202
00:40:58,490 --> 00:41:01,850
for your defensive capabilities now

1203
00:41:01,850 --> 00:41:03,980
really quick talking on on

1204
00:41:03,980 --> 00:41:05,870
automation testing I'm a huge fan of

1205
00:41:05,870 --> 00:41:07,760
automation testing if you're familiar

1206
00:41:07,760 --> 00:41:09,440
with the miter attack framework you know

1207
00:41:09,440 --> 00:41:10,820
you have Caldera you have the atomic red

1208
00:41:10,820 --> 00:41:11,630
team you have a lot of commercial

1209
00:41:11,630 --> 00:41:13,640
platforms that out there there's a lot

1210
00:41:13,640 --> 00:41:14,900
of great things that those tools can do

1211
00:41:14,900 --> 00:41:16,070
if you're not remote them you can run a

1212
00:41:16,070 --> 00:41:18,380
tool on and endpoints and it generates a

1213
00:41:18,380 --> 00:41:20,720
bunch of alarms for you now that's great

1214
00:41:20,720 --> 00:41:23,780
but do you know what to do with those so

1215
00:41:23,780 --> 00:41:25,310
if you see MSHDA what do you do you

1216
00:41:25,310 --> 00:41:26,750
write a signature for MSHDA

1217
00:41:26,750 --> 00:41:28,100
going to this and we see if we see in

1218
00:41:28,100 --> 00:41:29,630
our logs let me write a detection it

1219
00:41:29,630 --> 00:41:30,590
can't help with a lot of the

1220
00:41:30,590 --> 00:41:31,760
commoditized stuff that's out there but

1221
00:41:31,760 --> 00:41:33,590
to be honest with you and most companies

1222
00:41:33,590 --> 00:41:35,780
that are running these tools still have

1223
00:41:35,780 --> 00:41:37,100
password one as their administrator

1224
00:41:37,100 --> 00:41:40,190
password for their domain admin you

1225
00:41:40,190 --> 00:41:41,660
don't have to worry about this type of

1226
00:41:41,660 --> 00:41:43,550
stuff yet unless your programs actually

1227
00:41:43,550 --> 00:41:46,640
functioning appropriately I can't

1228
00:41:46,640 --> 00:41:49,880
emphasize the the amount of time it

1229
00:41:49,880 --> 00:41:52,910
takes for research in our industry both

1230
00:41:52,910 --> 00:41:54,950
offense and defense requires a

1231
00:41:54,950 --> 00:41:56,300
substantial amount of research and if

1232
00:41:56,300 --> 00:41:58,580
you aren't dedicating your team's to

1233
00:41:58,580 --> 00:42:00,590
having that research time you're losing

1234
00:42:00,590 --> 00:42:02,270
out and what you what the possibilities

1235
00:42:02,270 --> 00:42:03,560
are for understanding what's occurring

1236
00:42:03,560 --> 00:42:05,390
and research should literally be at

1237
00:42:05,390 --> 00:42:08,750
least 25% of the time that a red teamer

1238
00:42:08,750 --> 00:42:10,010
has in their environment to be able to

1239
00:42:10,010 --> 00:42:12,290
develop code or develop capabilities to

1240
00:42:12,290 --> 00:42:13,550
be able to do certain pieces there it's

1241
00:42:13,550 --> 00:42:15,710
it's really important to understand that

1242
00:42:15,710 --> 00:42:17,120
what it takes out there I mean just

1243
00:42:17,120 --> 00:42:20,210
looking at delegation tokens in Kerberos

1244
00:42:20,210 --> 00:42:22,430
and to figure out what's happening for

1245
00:42:22,430 --> 00:42:24,230
for Active Directory it's you understand

1246
00:42:24,230 --> 00:42:25,790
the ins and outs of that to build tools

1247
00:42:25,790 --> 00:42:27,380
around that to understand what how it

1248
00:42:27,380 --> 00:42:29,360
applies to our environment that takes a

1249
00:42:29,360 --> 00:42:31,460
lot of time if you're not developing

1250
00:42:31,460 --> 00:42:32,670
research

1251
00:42:32,670 --> 00:42:34,980
as part of your overall security program

1252
00:42:34,980 --> 00:42:37,349
you're behind the times research is an

1253
00:42:37,349 --> 00:42:40,079
absolute necessity when it comes to what

1254
00:42:40,079 --> 00:42:40,829
we're dealing with today

1255
00:42:40,829 --> 00:42:42,900
you had Edie ours out there right and

1256
00:42:42,900 --> 00:42:44,280
endpoint detection response tools I

1257
00:42:44,280 --> 00:42:45,720
approached this too the acronym first

1258
00:42:45,720 --> 00:42:47,940
and point detect and response tools are

1259
00:42:47,940 --> 00:42:49,559
supposed to be that augmentation wing

1260
00:42:49,559 --> 00:42:51,180
for you to be able to have a lot of the

1261
00:42:51,180 --> 00:42:54,210
advanced attacks into your tools so that

1262
00:42:54,210 --> 00:42:55,349
you don't have to have a research team

1263
00:42:55,349 --> 00:42:57,990
dedicated to it in most cases they can

1264
00:42:57,990 --> 00:42:59,190
find a lot of the low-hanging fruit

1265
00:42:59,190 --> 00:43:00,839
that's out there and a lot of other good

1266
00:43:00,839 --> 00:43:03,510
things out there so as an attacker we

1267
00:43:03,510 --> 00:43:04,950
need to understand how to get around

1268
00:43:04,950 --> 00:43:07,470
those specific tools and how to use our

1269
00:43:07,470 --> 00:43:08,700
techniques to get around them to see

1270
00:43:08,700 --> 00:43:10,770
what an actual attacker can do and if

1271
00:43:10,770 --> 00:43:11,940
you're not dedicating research to those

1272
00:43:11,940 --> 00:43:13,920
again you have a lot of a lot of major

1273
00:43:13,920 --> 00:43:19,349
problems so closing up when it comes if

1274
00:43:19,349 --> 00:43:21,690
you take one thing away from this it's

1275
00:43:21,690 --> 00:43:24,569
that a Windows Defender is awesome right

1276
00:43:24,569 --> 00:43:26,970
machine learning is awesome artificial

1277
00:43:26,970 --> 00:43:28,920
intelligence is awesome the EDRs are

1278
00:43:28,920 --> 00:43:30,059
doing a great job because they detect

1279
00:43:30,059 --> 00:43:32,690
100% of everything that's out there

1280
00:43:32,690 --> 00:43:35,579
derbycon is far less appear than BC at

1281
00:43:35,579 --> 00:43:39,150
Augusta there's a lot of things that you

1282
00:43:39,150 --> 00:43:40,380
can take away in it anybody's watching

1283
00:43:40,380 --> 00:43:42,240
just this talk there was a whole joke we

1284
00:43:42,240 --> 00:43:43,950
have before this I don't want to you

1285
00:43:43,950 --> 00:43:46,440
know throw anything out there but the

1286
00:43:46,440 --> 00:43:49,020
biggest piece around any of this is that

1287
00:43:49,020 --> 00:43:50,940
as an industry we are still very much

1288
00:43:50,940 --> 00:43:52,740
signature driven no matter what anybody

1289
00:43:52,740 --> 00:43:54,990
is telling you out there whether it's in

1290
00:43:54,990 --> 00:43:56,849
IPs and it's using behavior that it's a

1291
00:43:56,849 --> 00:43:58,700
baseline there are things that can be

1292
00:43:58,700 --> 00:44:02,040
behavior based but it still requires a

1293
00:44:02,040 --> 00:44:03,960
human being to interpret whether or not

1294
00:44:03,960 --> 00:44:05,880
the DES malicious and that's the part

1295
00:44:05,880 --> 00:44:07,680
that we miss in this industry we're

1296
00:44:07,680 --> 00:44:09,540
trying to still rely off of the tools

1297
00:44:09,540 --> 00:44:12,000
and while the tools may provide us

1298
00:44:12,000 --> 00:44:13,859
better visibility or may meant us in a

1299
00:44:13,859 --> 00:44:15,780
way if we don't have the people to

1300
00:44:15,780 --> 00:44:17,369
support that then your program is

1301
00:44:17,369 --> 00:44:18,119
non-existent

1302
00:44:18,119 --> 00:44:21,599
you cannot sidestep people period people

1303
00:44:21,599 --> 00:44:23,579
have to be invested upon people have to

1304
00:44:23,579 --> 00:44:25,349
have that time to look people have photo

1305
00:44:25,349 --> 00:44:26,549
training you have to have a team

1306
00:44:26,549 --> 00:44:28,140
dedicated to this type of stuff and if

1307
00:44:28,140 --> 00:44:30,089
you want to do detection today you have

1308
00:44:30,089 --> 00:44:32,130
to have people there isn't a tool out

1309
00:44:32,130 --> 00:44:34,140
there that I know of today that doesn't

1310
00:44:34,140 --> 00:44:36,000
require people to actively through them

1311
00:44:36,000 --> 00:44:38,579
a good example would be some of the best

1312
00:44:38,579 --> 00:44:40,410
prevention that I see out there today

1313
00:44:40,410 --> 00:44:42,210
some of the best prevention is

1314
00:44:42,210 --> 00:44:44,790
application away this thing can you run

1315
00:44:44,790 --> 00:44:46,480
an application where this ting program

1316
00:44:46,480 --> 00:44:51,400
people right we laugh right is everybody

1317
00:44:51,400 --> 00:44:53,020
here have a standardized laptop where

1318
00:44:53,020 --> 00:44:54,640
everything is exactly the same on every

1319
00:44:54,640 --> 00:44:58,630
machine no you have to have people for

1320
00:44:58,630 --> 00:45:01,450
that good example process chains if you

1321
00:45:01,450 --> 00:45:02,859
look at a parent-child process that's

1322
00:45:02,859 --> 00:45:05,140
one of the most valuable things that you

1323
00:45:05,140 --> 00:45:06,960
can use in an environment for detection

1324
00:45:06,960 --> 00:45:10,450
so you have a parent process of windward

1325
00:45:10,450 --> 00:45:13,119
dot exe spawning a child process of

1326
00:45:13,119 --> 00:45:15,340
PowerShell or command at exe or W script

1327
00:45:15,340 --> 00:45:16,560
or C script what does that mean

1328
00:45:16,560 --> 00:45:20,260
something bad happen right but if you

1329
00:45:20,260 --> 00:45:21,550
don't have that visibility to look at

1330
00:45:21,550 --> 00:45:23,470
that and say well maybe there are

1331
00:45:23,470 --> 00:45:25,119
certain business processes that leverage

1332
00:45:25,119 --> 00:45:27,070
that maybe we have a couple macros in

1333
00:45:27,070 --> 00:45:28,540
our environment that uses a business

1334
00:45:28,540 --> 00:45:30,250
process as powershell or committed exe

1335
00:45:30,250 --> 00:45:32,440
but if you did investigate that with the

1336
00:45:32,440 --> 00:45:33,880
person would you know that can you just

1337
00:45:33,880 --> 00:45:35,170
straight-up block that across your

1338
00:45:35,170 --> 00:45:37,930
entire environment probably not you

1339
00:45:37,930 --> 00:45:39,280
probably have deviations to those a good

1340
00:45:39,280 --> 00:45:42,760
example I was doing a breach assessment

1341
00:45:42,760 --> 00:45:44,320
for a company and I thought I found

1342
00:45:44,320 --> 00:45:45,580
something amazing I'm like oh I just

1343
00:45:45,580 --> 00:45:47,710
just paid for my whole consulting you

1344
00:45:47,710 --> 00:45:49,180
know experience here because I found

1345
00:45:49,180 --> 00:45:50,830
this one thing and it was an exchange

1346
00:45:50,830 --> 00:45:53,760
server and it was a domain admin account

1347
00:45:53,760 --> 00:45:56,680
running as a PowerShell command that was

1348
00:45:56,680 --> 00:45:58,359
going out to a Chinese IP address and

1349
00:45:58,359 --> 00:46:00,369
downloading and non signed codes not an

1350
00:46:00,369 --> 00:46:01,510
on coats and executable

1351
00:46:01,510 --> 00:46:04,420
and it was like a randomized name is

1352
00:46:04,420 --> 00:46:08,109
that bad yeah right I'm like I just I

1353
00:46:08,109 --> 00:46:11,500
just made my money domain admin go don't

1354
00:46:11,500 --> 00:46:12,940
going and downloading an unsigned a

1355
00:46:12,940 --> 00:46:15,430
binary from the internet from China I

1356
00:46:15,430 --> 00:46:17,950
made my money so now I can just like

1357
00:46:17,950 --> 00:46:18,910
chill and write some code for the rest

1358
00:46:18,910 --> 00:46:19,900
that we know just getting on in there

1359
00:46:19,900 --> 00:46:24,280
they did what we do right so as funny as

1360
00:46:24,280 --> 00:46:26,290
is is I went to the customer Mike found

1361
00:46:26,290 --> 00:46:28,390
some stuff like this is critical urgent

1362
00:46:28,390 --> 00:46:29,800
we got it got to shut down the exchange

1363
00:46:29,800 --> 00:46:30,910
server we got to change the password

1364
00:46:30,910 --> 00:46:33,220
like oh no that's we have a third party

1365
00:46:33,220 --> 00:46:35,440
development company in China and it's a

1366
00:46:35,440 --> 00:46:36,760
reporting tool for our exchange service

1367
00:46:36,760 --> 00:46:40,500
it's it's legit I'm like oh

1368
00:46:40,780 --> 00:46:43,540
I got a couple suggestions this is here

1369
00:46:43,540 --> 00:46:48,670
for improvement there however is that

1370
00:46:48,670 --> 00:46:50,860
malicious is it it's a business process

1371
00:46:50,860 --> 00:46:52,060
that they're using in their environment

1372
00:46:52,060 --> 00:46:53,620
but if I didn't look at that and

1373
00:46:53,620 --> 00:46:55,720
investigate that I wouldn't know when I

1374
00:46:55,720 --> 00:46:57,550
look at em sh TI b XE beaking it's an

1375
00:46:57,550 --> 00:46:58,810
internet maybe we have a business

1376
00:46:58,810 --> 00:46:59,890
process that does it but if you don't

1377
00:46:59,890 --> 00:47:01,510
give that to a human are they gonna are

1378
00:47:01,510 --> 00:47:04,720
they are you gonna know so detection

1379
00:47:04,720 --> 00:47:07,630
really focuses on the people and one

1380
00:47:07,630 --> 00:47:09,250
thing I want to close with is that there

1381
00:47:09,250 --> 00:47:11,830
has to be a innocent I notice a big term

1382
00:47:11,830 --> 00:47:14,140
but there has to be a whole process for

1383
00:47:14,140 --> 00:47:15,730
how you continuously mature a good

1384
00:47:15,730 --> 00:47:20,110
example would be hey is every the D de

1385
00:47:20,110 --> 00:47:21,970
Otto stuff that happened about a year

1386
00:47:21,970 --> 00:47:23,380
and a half ago right so if you're not

1387
00:47:23,380 --> 00:47:25,960
familiar like DD Otto most most code

1388
00:47:25,960 --> 00:47:27,460
execution through office documents comes

1389
00:47:27,460 --> 00:47:29,080
through macros right that's the the

1390
00:47:29,080 --> 00:47:30,760
primary method well a security

1391
00:47:30,760 --> 00:47:32,140
researcher have found a way to do code

1392
00:47:32,140 --> 00:47:33,730
execution without macros so it's called

1393
00:47:33,730 --> 00:47:35,260
DD ATO as a method that you can use to

1394
00:47:35,260 --> 00:47:37,330
then get code execution on a system does

1395
00:47:37,330 --> 00:47:39,040
anybody know how long it took to be

1396
00:47:39,040 --> 00:47:43,630
weaponized by locky 24 hours does it

1397
00:47:43,630 --> 00:47:45,340
mean know how long it was how long it

1398
00:47:45,340 --> 00:47:46,720
took to get weaponized and used an

1399
00:47:46,720 --> 00:47:51,550
exploit in the wild for hours so our

1400
00:47:51,550 --> 00:47:53,560
time window for that is is very small

1401
00:47:53,560 --> 00:47:55,750
right how do something like that in your

1402
00:47:55,750 --> 00:47:57,100
environment where DD odd is being

1403
00:47:57,100 --> 00:47:57,700
released

1404
00:47:57,700 --> 00:47:59,740
get to your Security Operations Center

1405
00:47:59,740 --> 00:48:01,120
from an analyst to be able to detect it

1406
00:48:01,120 --> 00:48:03,280
and that's the gap alright how do you

1407
00:48:03,280 --> 00:48:05,650
continuously make MSHDA when it beacons

1408
00:48:05,650 --> 00:48:07,660
out the internet a known issue for your

1409
00:48:07,660 --> 00:48:09,670
analyst and how do you train them on

1410
00:48:09,670 --> 00:48:11,470
that and that process that it takes in

1411
00:48:11,470 --> 00:48:13,180
order to do that if the red team

1412
00:48:13,180 --> 00:48:15,370
discovers new methods for bypassing your

1413
00:48:15,370 --> 00:48:17,710
detection there should be direct ways of

1414
00:48:17,710 --> 00:48:19,180
building detection into there and

1415
00:48:19,180 --> 00:48:20,980
training your sake analysts or

1416
00:48:20,980 --> 00:48:22,180
individuals that are going on the hunt

1417
00:48:22,180 --> 00:48:23,800
looking for those as a way to

1418
00:48:23,800 --> 00:48:25,480
proactively identify those in the future

1419
00:48:25,480 --> 00:48:27,220
one of the biggest things and I run a

1420
00:48:27,220 --> 00:48:29,740
24/7 security operations center one of

1421
00:48:29,740 --> 00:48:31,600
the biggest things I have with humans as

1422
00:48:31,600 --> 00:48:32,710
humans looking for something that is

1423
00:48:32,710 --> 00:48:34,600
legit like not legit like me asana as it

1424
00:48:34,600 --> 00:48:38,350
is a attacker we had recently that that

1425
00:48:38,350 --> 00:48:41,320
our team missed and the really we caught

1426
00:48:41,320 --> 00:48:42,580
him on the Power Cell execution so we

1427
00:48:42,580 --> 00:48:43,660
got on that but we didn't get him on the

1428
00:48:43,660 --> 00:48:45,790
MS HTTPS so there was a thing that was

1429
00:48:45,790 --> 00:48:48,790
like user awareness training HTA is

1430
00:48:48,790 --> 00:48:50,170
there ever going to be a user awareness

1431
00:48:50,170 --> 00:48:53,460
training that HTA if you're an attacker

1432
00:48:53,460 --> 00:48:55,859
you know that that's not legit right you

1433
00:48:55,859 --> 00:48:56,910
know that there's never a user we're

1434
00:48:56,910 --> 00:48:58,260
gonna stray today HTA out there there's

1435
00:48:58,260 --> 00:49:00,930
not a company uses each tas so our stock

1436
00:49:00,930 --> 00:49:03,240
analyst looked at it and said oh it must

1437
00:49:03,240 --> 00:49:04,920
be user awareness training and you

1438
00:49:04,920 --> 00:49:07,260
closed the ticket didn't know that that

1439
00:49:07,260 --> 00:49:08,520
was a method that's our bad for not

1440
00:49:08,520 --> 00:49:10,800
being able to train them in a way to get

1441
00:49:10,800 --> 00:49:12,210
better than now luckily our other

1442
00:49:12,210 --> 00:49:13,530
detection is like power shell injection

1443
00:49:13,530 --> 00:49:15,359
everything else you know quickly hit

1444
00:49:15,359 --> 00:49:17,970
that which is fantastic we caught it but

1445
00:49:17,970 --> 00:49:19,500
in those specific cases do you have a

1446
00:49:19,500 --> 00:49:21,270
mechanism to train your stock analyst of

1447
00:49:21,270 --> 00:49:22,890
what looks malicious and what is unusual

1448
00:49:22,890 --> 00:49:25,140
behavior those are all big pieces that

1449
00:49:25,140 --> 00:49:27,420
we don't focus on today and that process

1450
00:49:27,420 --> 00:49:28,740
where you're looking at from the

1451
00:49:28,740 --> 00:49:30,869
beginning of when we discover or when we

1452
00:49:30,869 --> 00:49:32,820
actually do a simulation or test in our

1453
00:49:32,820 --> 00:49:34,619
environment what does that mean to get

1454
00:49:34,619 --> 00:49:37,080
that into a format to where we can use

1455
00:49:37,080 --> 00:49:38,369
it intelligible in our environment and

1456
00:49:38,369 --> 00:49:39,690
those are the things that we have to

1457
00:49:39,690 --> 00:49:41,730
answer in security today

1458
00:49:41,730 --> 00:49:44,640
I want to thank besides Augusta for for

1459
00:49:44,640 --> 00:49:46,950
having me out here really appreciate

1460
00:49:46,950 --> 00:49:48,089
everybody's time is they made many

1461
00:49:48,089 --> 00:49:50,790
questions open up for like like two

1462
00:49:50,790 --> 00:49:52,320
questions or no questions you don't feel

1463
00:49:52,320 --> 00:49:57,230
shy I don't bite yeah

1464
00:50:25,700 --> 00:50:28,560
good question and just for clarification

1465
00:50:28,560 --> 00:50:29,990
- I wasn't ripping on any of those tools

1466
00:50:29,990 --> 00:50:32,250
the tools are great for visibility

1467
00:50:32,250 --> 00:50:34,590
carbon black is great for visibility we

1468
00:50:34,590 --> 00:50:36,120
can get from process chains what you can

1469
00:50:36,120 --> 00:50:37,350
get for what's being executed on the

1470
00:50:37,350 --> 00:50:39,780
system itself they're great for

1471
00:50:39,780 --> 00:50:41,070
visibility but if you don't have the

1472
00:50:41,070 --> 00:50:43,080
people to build them up and to manage

1473
00:50:43,080 --> 00:50:44,610
and maintain them then they start to

1474
00:50:44,610 --> 00:50:46,560
become a problem and so the question was

1475
00:50:46,560 --> 00:50:48,360
is there any tools out there that have

1476
00:50:48,360 --> 00:50:50,130
given us a headache and honestly the

1477
00:50:50,130 --> 00:50:51,510
answer to that is is there's not a

1478
00:50:51,510 --> 00:50:53,310
product there that it's giving us that

1479
00:50:53,310 --> 00:50:54,390
it's getting us a headache it's been the

1480
00:50:54,390 --> 00:50:55,440
teams that have given us a headache

1481
00:50:55,440 --> 00:50:57,570
there was a company that was leveraging

1482
00:50:57,570 --> 00:51:00,000
a specific tool and I won't name the the

1483
00:51:00,000 --> 00:51:02,970
vendor and this one the the product

1484
00:51:02,970 --> 00:51:06,360
itself out of the box is is not gonna be

1485
00:51:06,360 --> 00:51:08,730
good for detecting us right but they've

1486
00:51:08,730 --> 00:51:10,470
had a team there built in and doing the

1487
00:51:10,470 --> 00:51:11,850
testing back and forth purple team

1488
00:51:11,850 --> 00:51:14,010
exercises having a hunt team and they

1489
00:51:14,010 --> 00:51:16,050
built the tool over time to where once

1490
00:51:16,050 --> 00:51:17,310
we got code execution we did something

1491
00:51:17,310 --> 00:51:18,660
that we thought was super stealthy like

1492
00:51:18,660 --> 00:51:20,160
we're like oh yeah we got a show or I'll

1493
00:51:20,160 --> 00:51:21,810
high-five all of a sudden two seconds

1494
00:51:21,810 --> 00:51:22,890
later the machine goes in can team and

1495
00:51:22,890 --> 00:51:24,000
we no longer have communication with our

1496
00:51:24,000 --> 00:51:25,650
command control infrastructure like how

1497
00:51:25,650 --> 00:51:26,730
the heck did they attack that so we used

1498
00:51:26,730 --> 00:51:28,680
somewhere else so that the people have

1499
00:51:28,680 --> 00:51:30,090
really been that been the big aspects

1500
00:51:30,090 --> 00:51:32,790
there really hasn't been a tool that has

1501
00:51:32,790 --> 00:51:35,460
has been a major problem for us that to

1502
00:51:35,460 --> 00:51:37,740
get around as an attacker I would say

1503
00:51:37,740 --> 00:51:39,480
that things are definitely up ticking

1504
00:51:39,480 --> 00:51:42,060
getting better it can get harder for us

1505
00:51:42,060 --> 00:51:43,380
depending on how much they lock the

1506
00:51:43,380 --> 00:51:44,970
machines down like a good example would

1507
00:51:44,970 --> 00:51:48,120
be silence silences AI components aren't

1508
00:51:48,120 --> 00:51:50,130
hard for us to get around right but

1509
00:51:50,130 --> 00:51:51,630
their application control functionality

1510
00:51:51,630 --> 00:51:53,700
Devon there's actually a really solid so

1511
00:51:53,700 --> 00:51:55,410
if they implement application control

1512
00:51:55,410 --> 00:51:56,910
very effectively then we have to figure

1513
00:51:56,910 --> 00:51:58,410
out ways to circumvent and get around

1514
00:51:58,410 --> 00:52:00,930
those to be able to do it so I would say

1515
00:52:00,930 --> 00:52:02,700
that again it's not necessarily the tool

1516
00:52:02,700 --> 00:52:04,800
it's how its implemented and how the

1517
00:52:04,800 --> 00:52:06,600
people are using it in order to make it

1518
00:52:06,600 --> 00:52:07,890
better and understand those attack

1519
00:52:07,890 --> 00:52:10,890
vectors so it's not every doesn't matter

1520
00:52:10,890 --> 00:52:12,300
fusing carbon black using science using

1521
00:52:12,300 --> 00:52:14,190
CrowdStrike using whatever you whatever

1522
00:52:14,190 --> 00:52:16,710
you want is fine as long as you can

1523
00:52:16,710 --> 00:52:18,210
build those tools to be better than what

1524
00:52:18,210 --> 00:52:19,350
they are out of the box is out of the

1525
00:52:19,350 --> 00:52:20,760
box they think about it from an

1526
00:52:20,760 --> 00:52:23,520
organization perspective if a company

1527
00:52:23,520 --> 00:52:25,200
releases protection that actually works

1528
00:52:25,200 --> 00:52:27,270
is that going to work across every

1529
00:52:27,270 --> 00:52:29,660
single enterprise most likely not the

1530
00:52:29,660 --> 00:52:31,650
variations and differentials that you

1531
00:52:31,650 --> 00:52:31,890
have to

1532
00:52:31,890 --> 00:52:33,990
do in most environments is substantially

1533
00:52:33,990 --> 00:52:36,000
large so they have to deal with a lot of

1534
00:52:36,000 --> 00:52:37,079
these things and while they can mock

1535
00:52:37,079 --> 00:52:39,059
things down to stop things it requires

1536
00:52:39,059 --> 00:52:40,829
the people to customize and to use those

1537
00:52:40,829 --> 00:52:42,059
tools in a way that makes it makes it

1538
00:52:42,059 --> 00:52:44,190
different so they answer your question

1539
00:52:44,190 --> 00:52:46,349
no not not really any tools that have

1540
00:52:46,349 --> 00:52:47,819
caused us a lot of headache hurt issues

1541
00:52:47,819 --> 00:52:50,400
good question any other questions one

1542
00:52:50,400 --> 00:52:53,160
less one or well thank you all very much

1543
00:52:53,160 --> 00:52:54,240
for having me on I appreciate it

1544
00:52:54,240 --> 00:53:00,319
[Applause]

