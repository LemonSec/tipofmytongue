1
00:00:14,809 --> 00:00:17,390
all right

2
00:00:17,390 --> 00:00:21,140
thank you are you all doing today doing

3
00:00:21,140 --> 00:00:22,960
good let's hear it you guys doing

4
00:00:22,960 --> 00:00:27,050
alright alright thank you to all of the

5
00:00:27,050 --> 00:00:29,119
volunteers and the staff and the team

6
00:00:29,119 --> 00:00:31,310
that have put together besides Augusta

7
00:00:31,310 --> 00:00:33,650
this is definitely one of the events

8
00:00:33,650 --> 00:00:35,809
that I looked forward to every year so

9
00:00:35,809 --> 00:00:38,180
thanks again to all of you have put work

10
00:00:38,180 --> 00:00:41,089
into this my name is Josh Brower I've

11
00:00:41,089 --> 00:00:43,280
been when IT since my teens been

12
00:00:43,280 --> 00:00:44,930
involved in InfoSec the last ten years

13
00:00:44,930 --> 00:00:48,079
and endpoint and network detection as a

14
00:00:48,079 --> 00:00:50,359
focus of that as well today we're going

15
00:00:50,359 --> 00:00:52,579
to be talking about an app called OS

16
00:00:52,579 --> 00:00:55,570
query is anybody heard of OHS query

17
00:00:55,570 --> 00:00:59,000
before this talker before yesterday at

18
00:00:59,000 --> 00:01:00,500
the Security Allen conference okay a

19
00:01:00,500 --> 00:01:02,899
couple maybe half the room is anybody

20
00:01:02,899 --> 00:01:05,059
using OS query on a regular basis

21
00:01:05,059 --> 00:01:07,100
especially in your professional work we

22
00:01:07,100 --> 00:01:09,470
have a couple great yes

23
00:01:09,470 --> 00:01:12,410
the guy with OS pretty shirt thank you

24
00:01:12,410 --> 00:01:15,710
all right good so OS query we're gonna

25
00:01:15,710 --> 00:01:18,080
be talking in this very short talk we're

26
00:01:18,080 --> 00:01:20,300
gonna talk a little bit about what Oscar

27
00:01:20,300 --> 00:01:23,060
is in induction to its those of you at

28
00:01:23,060 --> 00:01:24,890
the Esso talk we'll just have a little

29
00:01:24,890 --> 00:01:27,259
bit of redundancy there but we're gonna

30
00:01:27,259 --> 00:01:29,630
talk about how to use O's query the

31
00:01:29,630 --> 00:01:31,970
interactive shell to interrogate a

32
00:01:31,970 --> 00:01:33,770
Windows 10 system and it will look at

33
00:01:33,770 --> 00:01:35,509
how to do that with a demo that

34
00:01:35,509 --> 00:01:37,189
hopefully should work today all right

35
00:01:37,189 --> 00:01:38,810
let's get started

36
00:01:38,810 --> 00:01:42,680
a lot of interrogation with OS query we

37
00:01:42,680 --> 00:01:45,049
can do this we can we have the

38
00:01:45,049 --> 00:01:47,840
technology there we go

39
00:01:47,840 --> 00:01:50,630
and over here so s query is an open

40
00:01:50,630 --> 00:01:53,689
source application it was released by

41
00:01:53,689 --> 00:01:57,469
the Facebook team back in 2014 it allows

42
00:01:57,469 --> 00:01:59,390
you once you install it on your system

43
00:01:59,390 --> 00:02:01,789
it allows you to query your system as if

44
00:02:01,789 --> 00:02:04,549
it's a relational database ok for

45
00:02:04,549 --> 00:02:06,350
instance if you want to look at all of

46
00:02:06,350 --> 00:02:09,110
the users the local users on your system

47
00:02:09,110 --> 00:02:11,209
once you install it you can say select

48
00:02:11,209 --> 00:02:14,600
star from users semicolon and it gives

49
00:02:14,600 --> 00:02:16,280
you all of the users on the system as

50
00:02:16,280 --> 00:02:19,040
well as metadata about it ok so it's

51
00:02:19,040 --> 00:02:21,829
open source it allows you to use sequel

52
00:02:21,829 --> 00:02:24,590
syntax with it and finally is

53
00:02:24,590 --> 00:02:27,410
cross-platform I has a wide range of

54
00:02:27,410 --> 00:02:29,900
support for most of the Linux is out

55
00:02:29,900 --> 00:02:30,920
there as

56
00:02:30,920 --> 00:02:34,790
vsts mac OS and windows lots and lots of

57
00:02:34,790 --> 00:02:36,200
support across all the different

58
00:02:36,200 --> 00:02:39,530
platforms and let's see how we can use

59
00:02:39,530 --> 00:02:42,020
this practically in a recent issue i

60
00:02:42,020 --> 00:02:44,650
think it happened about six weeks ago i

61
00:02:44,650 --> 00:02:47,330
just come over here and manually tap it

62
00:02:47,330 --> 00:02:49,130
there we go anybody familiar with this

63
00:02:49,130 --> 00:02:52,190
the mega chrome extension that got

64
00:02:52,190 --> 00:02:54,920
compromised about six weeks ago okay

65
00:02:54,920 --> 00:02:56,930
the mega chrome extension had about has

66
00:02:56,930 --> 00:02:59,420
about two million users and what

67
00:02:59,420 --> 00:03:01,010
happened is the latest version was

68
00:03:01,010 --> 00:03:04,070
sending credentials for Amazon I think

69
00:03:04,070 --> 00:03:06,350
it was github Google and Microsoft okay

70
00:03:06,350 --> 00:03:08,959
now if you're in this situation and you

71
00:03:08,959 --> 00:03:10,519
want to know if any of your users on

72
00:03:10,519 --> 00:03:12,680
your network on your systems has this

73
00:03:12,680 --> 00:03:15,050
compromised extension installed here's

74
00:03:15,050 --> 00:03:18,920
what we can do with OS query we can we

75
00:03:18,920 --> 00:03:21,200
can look at the different tables that OS

76
00:03:21,200 --> 00:03:22,910
query has if you go to the oath query

77
00:03:22,910 --> 00:03:26,180
web site query dot IO flash schema there

78
00:03:26,180 --> 00:03:28,550
are over two hundred and twenty tables

79
00:03:28,550 --> 00:03:30,220
that are available each of these tables

80
00:03:30,220 --> 00:03:33,350
allow you to look at a certain part of

81
00:03:33,350 --> 00:03:35,540
the system I already mentioned the users

82
00:03:35,540 --> 00:03:37,579
table there's also there's a couple of

83
00:03:37,579 --> 00:03:39,079
quite a few up there that you can see

84
00:03:39,079 --> 00:03:42,110
you can look at under Mac OS X protect

85
00:03:42,110 --> 00:03:44,709
you can see the logs related X protect

86
00:03:44,709 --> 00:03:47,000
cron jobs lots and lots of different

87
00:03:47,000 --> 00:03:49,760
tables fortunately for us there is a

88
00:03:49,760 --> 00:03:52,850
Chrome extensions table it is Chrome

89
00:03:52,850 --> 00:03:55,280
others to underscore extensions and you

90
00:03:55,280 --> 00:03:57,370
can see the different columns up here

91
00:03:57,370 --> 00:03:59,660
these are and there's quite a few others

92
00:03:59,660 --> 00:04:02,030
that aren't actually listed although in

93
00:04:02,030 --> 00:04:03,920
the upper right hand corner we also have

94
00:04:03,920 --> 00:04:05,900
what are the different platforms that

95
00:04:05,900 --> 00:04:07,549
are supported for this table and in this

96
00:04:07,549 --> 00:04:11,030
case it's all of the major platforms so

97
00:04:11,030 --> 00:04:13,250
the build is simple query we're gonna

98
00:04:13,250 --> 00:04:16,700
say select the user ID column the name

99
00:04:16,700 --> 00:04:19,310
column and the identifier column from

100
00:04:19,310 --> 00:04:22,820
the Chrome extensions table now each

101
00:04:22,820 --> 00:04:25,660
Chrome extension has a unique identifier

102
00:04:25,660 --> 00:04:28,190
if you go to the Chrome extension store

103
00:04:28,190 --> 00:04:30,590
look up the Chrome extension the

104
00:04:30,590 --> 00:04:32,690
identifier will be within the URL so

105
00:04:32,690 --> 00:04:34,070
you'll be able to easily identify a

106
00:04:34,070 --> 00:04:37,250
chrome extension by this identifier okay

107
00:04:37,250 --> 00:04:40,160
so when we run this we will get things

108
00:04:40,160 --> 00:04:43,400
like this may not be very readable we

109
00:04:43,400 --> 00:04:44,750
have to use their ID five

110
00:04:44,750 --> 00:04:47,540
on the left hand side the name of the

111
00:04:47,540 --> 00:04:49,430
extension version number and the

112
00:04:49,430 --> 00:04:52,250
identifier that I just mentioned this is

113
00:04:52,250 --> 00:04:54,380
great we got all of our extensions right

114
00:04:54,380 --> 00:04:57,410
but if we have lots of users and

115
00:04:57,410 --> 00:04:58,850
hundreds of extensions to go through

116
00:04:58,850 --> 00:05:00,710
that's not very practical for us to try

117
00:05:00,710 --> 00:05:03,080
to manually extract out is a mega

118
00:05:03,080 --> 00:05:05,690
extension in there so next we're going

119
00:05:05,690 --> 00:05:08,210
to edit our query we're gonna add a

120
00:05:08,210 --> 00:05:11,030
filter cloths we're gonna say select the

121
00:05:11,030 --> 00:05:13,430
user ID name identifier from the Chrome

122
00:05:13,430 --> 00:05:15,740
extensions table we're gonna say where

123
00:05:15,740 --> 00:05:18,830
the identifier is the mega extension

124
00:05:18,830 --> 00:05:21,740
identifier and the version number is the

125
00:05:21,740 --> 00:05:24,730
compromised version number version three

126
00:05:24,730 --> 00:05:28,670
39.4 okay now I also have that last

127
00:05:28,670 --> 00:05:31,340
filter crossed out because when you're

128
00:05:31,340 --> 00:05:33,140
in this kind of a scenario you'll also

129
00:05:33,140 --> 00:05:35,630
want to run this query from the

130
00:05:35,630 --> 00:05:37,310
perspective of okay is there anybody

131
00:05:37,310 --> 00:05:39,440
that currently has the compromised

132
00:05:39,440 --> 00:05:41,450
version installed but is there anybody

133
00:05:41,450 --> 00:05:43,910
that has the extension installed period

134
00:05:43,910 --> 00:05:47,180
in case it updates to the compromised

135
00:05:47,180 --> 00:05:48,770
version we want to know if anybody has

136
00:05:48,770 --> 00:05:51,710
it installed period right so there's two

137
00:05:51,710 --> 00:05:54,530
different options there so what we'll do

138
00:05:54,530 --> 00:05:56,960
the results we get back would you see a

139
00:05:56,960 --> 00:05:59,810
user that has this Chrome extension

140
00:05:59,810 --> 00:06:02,210
installed okay this is good we know

141
00:06:02,210 --> 00:06:04,340
somebody has it but we don't know the

142
00:06:04,340 --> 00:06:06,500
user name we just have a user ID which

143
00:06:06,500 --> 00:06:09,110
is not very helpful for us humans we

144
00:06:09,110 --> 00:06:11,600
need to be able to identify this user

145
00:06:11,600 --> 00:06:14,780
somehow and this query only gets the

146
00:06:14,780 --> 00:06:16,790
Chrome extensions for the current user

147
00:06:16,790 --> 00:06:19,640
so we want to get if we're let's say

148
00:06:19,640 --> 00:06:23,030
looking at a Windows Terminal Server we

149
00:06:23,030 --> 00:06:24,380
want to look at all the different users

150
00:06:24,380 --> 00:06:27,080
that are on the box and to do that we're

151
00:06:27,080 --> 00:06:29,570
gonna join the Chrome extensions table

152
00:06:29,570 --> 00:06:33,410
with the users table this is our final

153
00:06:33,410 --> 00:06:35,930
query here we're gonna say select the

154
00:06:35,930 --> 00:06:38,240
users that username Chrome extensions

155
00:06:38,240 --> 00:06:40,210
named Chrome extensions that version

156
00:06:40,210 --> 00:06:43,040
from the users table we're gonna cross

157
00:06:43,040 --> 00:06:45,229
join that with the Chrome extensions

158
00:06:45,229 --> 00:06:48,229
table using the common column user ID

159
00:06:48,229 --> 00:06:51,260
all right now to those of you who don't

160
00:06:51,260 --> 00:06:53,240
have a background in sequel this

161
00:06:53,240 --> 00:06:54,890
probably looks like gobbly and

162
00:06:54,890 --> 00:06:57,630
doesn't mean much to you and that's okay

163
00:06:57,630 --> 00:06:59,250
this actually one of the major benefits

164
00:06:59,250 --> 00:07:01,590
of OS query if you want to use those

165
00:07:01,590 --> 00:07:02,880
query you don't need to learn an

166
00:07:02,880 --> 00:07:05,550
esoteric proprietary query language you

167
00:07:05,550 --> 00:07:07,500
can go out and find free low-cost

168
00:07:07,500 --> 00:07:11,010
quality training for sequel and you can

169
00:07:11,010 --> 00:07:12,870
take what you learned and implement it

170
00:07:12,870 --> 00:07:15,420
right there with OS query now those of

171
00:07:15,420 --> 00:07:18,270
you who are familiar with with sequel

172
00:07:18,270 --> 00:07:19,860
you may be wondering why we're using a

173
00:07:19,860 --> 00:07:21,960
cross join in this particular instance

174
00:07:21,960 --> 00:07:23,580
it just works more consistently with

175
00:07:23,580 --> 00:07:25,170
this table this is why we're using the

176
00:07:25,170 --> 00:07:28,170
cross join alright so this gives us the

177
00:07:28,170 --> 00:07:34,170
results of we have Dresden and Everett

178
00:07:34,170 --> 00:07:36,840
so that converted the user IDs to the

179
00:07:36,840 --> 00:07:39,030
user names and then we do see that we

180
00:07:39,030 --> 00:07:41,550
have two mega extensions installed and

181
00:07:41,550 --> 00:07:43,740
they're both the compromised version

182
00:07:43,740 --> 00:07:46,410
okay is that making sense so far a

183
00:07:46,410 --> 00:07:48,360
little bit I'm seeing some I'm seeing

184
00:07:48,360 --> 00:07:50,550
quite a few okay good this is good

185
00:07:50,550 --> 00:07:54,420
all right so here just before we're

186
00:07:54,420 --> 00:07:57,080
gonna go ahead and look at our um our

187
00:07:57,080 --> 00:08:00,090
demo let's talk about OS query I know

188
00:08:00,090 --> 00:08:02,880
Square D there are two components to OS

189
00:08:02,880 --> 00:08:05,310
query the interactive shell and the

190
00:08:05,310 --> 00:08:09,810
daemon which do you think is which the

191
00:08:09,810 --> 00:08:15,840
only answer come on yes you got it which

192
00:08:15,840 --> 00:08:19,470
one is that the interactive shell yes

193
00:08:19,470 --> 00:08:21,330
good job and we need to give this guy

194
00:08:21,330 --> 00:08:25,370
prize do we have any prizes okay

195
00:08:26,060 --> 00:08:30,390
does he just get to pick okay come on up

196
00:08:30,390 --> 00:08:32,039
and once you grab yourself a prize we

197
00:08:32,039 --> 00:08:33,240
have three different prizes all right

198
00:08:33,240 --> 00:08:35,219
thank you for being the one that

199
00:08:35,219 --> 00:08:36,990
answered the question I appreciate it

200
00:08:36,990 --> 00:08:39,150
you can just come on right on back and

201
00:08:39,150 --> 00:08:41,070
grab yourself something all right so

202
00:08:41,070 --> 00:08:42,990
there's two components query I know

203
00:08:42,990 --> 00:08:45,330
Square D Oh Square D the Dayman version

204
00:08:45,330 --> 00:08:47,330
you run in the background on your

205
00:08:47,330 --> 00:08:49,530
endpoints and we'll talk about a little

206
00:08:49,530 --> 00:08:51,270
bit later if we have time we can

207
00:08:51,270 --> 00:08:53,310
schedule queries against it and send

208
00:08:53,310 --> 00:08:54,690
those logs elsewhere

209
00:08:54,690 --> 00:08:57,090
os query the interactive shell we'll see

210
00:08:57,090 --> 00:08:59,670
in just a minute we drop it on a system

211
00:08:59,670 --> 00:09:02,340
we can interactively use os query to

212
00:09:02,340 --> 00:09:04,440
query the system I just need to make a

213
00:09:04,440 --> 00:09:06,210
note there because when we talk about os

214
00:09:06,210 --> 00:09:08,070
query people talk about one or the other

215
00:09:08,070 --> 00:09:10,710
and so I'm always clear what we're doing

216
00:09:10,710 --> 00:09:12,510
so right now we're gonna drop into OS

217
00:09:12,510 --> 00:09:17,850
query I what do you end up getting that

218
00:09:17,850 --> 00:09:18,360
looks pretty good

219
00:09:18,360 --> 00:09:20,280
a wireless staff there okay I think I

220
00:09:20,280 --> 00:09:22,020
got that one a couple years ago it's

221
00:09:22,020 --> 00:09:24,570
good I'm sure it's a new one right a new

222
00:09:24,570 --> 00:09:27,600
version all right so let's jump to the

223
00:09:27,600 --> 00:09:33,150
demo here's a scenario you are a tech

224
00:09:33,150 --> 00:09:36,330
for a local company and you've been you

225
00:09:36,330 --> 00:09:39,020
got a call from a user who says that

226
00:09:39,020 --> 00:09:42,060
they go to office 365 in their browser

227
00:09:42,060 --> 00:09:44,580
and they're getting a weird error okay

228
00:09:44,580 --> 00:09:47,460
so you go to the Windows 10 system you

229
00:09:47,460 --> 00:09:50,070
can see you have some apps installed you

230
00:09:50,070 --> 00:09:52,800
bring up their browser you can see that

231
00:09:52,800 --> 00:09:56,130
if we go to portal office comm which is

232
00:09:56,130 --> 00:09:58,950
the entry point to office 365 we get

233
00:09:58,950 --> 00:10:01,470
this odd for for website not found error

234
00:10:01,470 --> 00:10:05,250
okay so from here we can open up a

235
00:10:05,250 --> 00:10:08,790
elevated powershell session we can run

236
00:10:08,790 --> 00:10:12,390
query i and this is the interactive

237
00:10:12,390 --> 00:10:15,360
shell now before we start just from like

238
00:10:15,360 --> 00:10:17,370
the ten seconds of context i gave you

239
00:10:17,370 --> 00:10:21,000
about office portal a portal office comm

240
00:10:21,000 --> 00:10:24,350
any ideas on what it could be

241
00:10:24,350 --> 00:10:27,360
just want to take some ideas any ideas

242
00:10:27,360 --> 00:10:29,700
on you're going to portal office comm

243
00:10:29,700 --> 00:10:31,380
we're getting this weird like for for

244
00:10:31,380 --> 00:10:33,960
error it's working on other people's

245
00:10:33,960 --> 00:10:36,390
machines any ideas on what could be

246
00:10:36,390 --> 00:10:38,220
wrong with the system just from that

247
00:10:38,220 --> 00:10:41,600
little information yes

248
00:10:41,660 --> 00:10:45,240
okay so DNS so dns resolution okay so

249
00:10:45,240 --> 00:10:46,770
it's definitely an interesting one to

250
00:10:46,770 --> 00:10:50,810
look yes back here I'm sorry

251
00:10:50,810 --> 00:10:53,280
okay host file great another one so we

252
00:10:53,280 --> 00:11:00,780
have DNS host file yes browser jens okay

253
00:11:00,780 --> 00:11:05,330
good good so three any others back there

254
00:11:05,330 --> 00:11:08,760
no network access yeah well okay let's

255
00:11:08,760 --> 00:11:10,770
pretend that we have network access but

256
00:11:10,770 --> 00:11:13,770
good call okay alright so those are some

257
00:11:13,770 --> 00:11:15,990
good ideas right so what we could do we

258
00:11:15,990 --> 00:11:18,570
could just go ahead and start looking at

259
00:11:18,570 --> 00:11:21,390
those specific areas or the way that I

260
00:11:21,390 --> 00:11:23,500
typically like to start is look at what

261
00:11:23,500 --> 00:11:25,780
a running process what processes are

262
00:11:25,780 --> 00:11:27,910
running on the system so let's start

263
00:11:27,910 --> 00:11:29,560
looking at what processes are running

264
00:11:29,560 --> 00:11:32,260
and then we'll go from there now if I'm

265
00:11:32,260 --> 00:11:34,330
in the interactive shell I can say dot

266
00:11:34,330 --> 00:11:37,450
version I can type right I'm always

267
00:11:37,450 --> 00:11:40,540
horrible typing I'm going to take an

268
00:11:40,540 --> 00:11:41,890
extra five minutes just because of that

269
00:11:41,890 --> 00:11:43,810
all right that version so you can see

270
00:11:43,810 --> 00:11:47,550
we're running OS query version 3.3

271
00:11:47,550 --> 00:11:50,560
so we're going to query the processes

272
00:11:50,560 --> 00:11:53,470
table and if you use a query and you can

273
00:11:53,470 --> 00:11:55,810
remember what columns are available in a

274
00:11:55,810 --> 00:11:58,600
particular table you can use this handy

275
00:11:58,600 --> 00:12:00,630
little command it says dot schema and

276
00:12:00,630 --> 00:12:04,030
the process is table and that will show

277
00:12:04,030 --> 00:12:06,400
you the schema for the processes table

278
00:12:06,400 --> 00:12:08,500
you can get the column as well as the

279
00:12:08,500 --> 00:12:10,900
column type all right so in this case

280
00:12:10,900 --> 00:12:14,050
there's a process ID there's a name the

281
00:12:14,050 --> 00:12:15,970
path the command line we're going to

282
00:12:15,970 --> 00:12:17,910
start with a couple of those we'll say

283
00:12:17,910 --> 00:12:22,650
select the process ID and the path from

284
00:12:22,650 --> 00:12:26,290
processes typically I would start with

285
00:12:26,290 --> 00:12:29,320
process ID path and command line but

286
00:12:29,320 --> 00:12:30,880
because we have a lack of space we'll

287
00:12:30,880 --> 00:12:32,380
just start with those two and go from

288
00:12:32,380 --> 00:12:37,630
there so we run that we can see that

289
00:12:37,630 --> 00:12:39,430
there are quite a few process that

290
00:12:39,430 --> 00:12:41,290
process excuse me that are running and

291
00:12:41,290 --> 00:12:43,240
it's not really even formatted that

292
00:12:43,240 --> 00:12:44,770
great and it's kind of hard to look

293
00:12:44,770 --> 00:12:47,980
through right so we should go ahead and

294
00:12:47,980 --> 00:12:49,540
filter this down a little bit so we can

295
00:12:49,540 --> 00:12:51,070
look at the processes make a little bit

296
00:12:51,070 --> 00:12:54,670
easier so we'll say select the process

297
00:12:54,670 --> 00:12:57,760
ID path from processes where the path is

298
00:12:57,760 --> 00:13:04,990
not like and say anything outside of C

299
00:13:04,990 --> 00:13:10,540
windows so this is pretty arbitrary but

300
00:13:10,540 --> 00:13:13,360
what I like to do is split when I'm when

301
00:13:13,360 --> 00:13:15,520
I'm looking at processes split it in an

302
00:13:15,520 --> 00:13:17,320
arbitrary ways so that you can make it

303
00:13:17,320 --> 00:13:19,060
easier to filter out and look at the

304
00:13:19,060 --> 00:13:21,070
different processes so right now we're

305
00:13:21,070 --> 00:13:23,800
filtering out all the processes that are

306
00:13:23,800 --> 00:13:27,580
inside C windows and then we can flip

307
00:13:27,580 --> 00:13:29,320
that around and filter for everything

308
00:13:29,320 --> 00:13:31,990
that's inside C windows so when we run

309
00:13:31,990 --> 00:13:36,040
that we'll see that there are a lot less

310
00:13:36,040 --> 00:13:39,820
two chrome processes you know there's a

311
00:13:39,820 --> 00:13:42,190
lot less I will say that in my in my

312
00:13:42,190 --> 00:13:44,290
preview excuse me in the when I was

313
00:13:44,290 --> 00:13:47,560
working on this demo previously I didn't

314
00:13:47,560 --> 00:13:50,410
have quite the issue with the screen so

315
00:13:50,410 --> 00:13:51,699
it's a little bit harder to read right

316
00:13:51,699 --> 00:13:53,769
now because I have it so big but let's

317
00:13:53,769 --> 00:13:54,550
just deal with it

318
00:13:54,550 --> 00:13:56,620
is there anything right now that we

319
00:13:56,620 --> 00:14:00,339
should look at a little closer just from

320
00:14:00,339 --> 00:14:03,240
that screen right there

321
00:14:04,380 --> 00:14:07,899
okay who said that go ahead and give

322
00:14:07,899 --> 00:14:10,389
this man a prize all right that was

323
00:14:10,389 --> 00:14:12,100
something running so we have two books

324
00:14:12,100 --> 00:14:15,069
it looks like they we have something

325
00:14:15,069 --> 00:14:18,100
running out of C downloads right here

326
00:14:18,100 --> 00:14:21,339
okay and of course it's Dresden right so

327
00:14:21,339 --> 00:14:23,529
it's our user Dresden and it's running

328
00:14:23,529 --> 00:14:26,199
out of C downloads and it's LastPass -

329
00:14:26,199 --> 00:14:28,000
installed a fixie now that's not

330
00:14:28,000 --> 00:14:30,910
necessarily abnormal it's just maybe an

331
00:14:30,910 --> 00:14:32,709
empire here okay it's running out the

332
00:14:32,709 --> 00:14:34,870
Downloads you don't see the installer

333
00:14:34,870 --> 00:14:36,190
typically when someone installs

334
00:14:36,190 --> 00:14:38,050
something there's something that you can

335
00:14:38,050 --> 00:14:39,610
see right but you don't see anything on

336
00:14:39,610 --> 00:14:41,649
screen it's something it's not nicely

337
00:14:41,649 --> 00:14:43,620
suspicious but let's take a look at it

338
00:14:43,620 --> 00:14:46,540
so we'll say let's select all the

339
00:14:46,540 --> 00:14:49,889
columns select star from the processes

340
00:14:49,889 --> 00:14:57,839
where the process ID equals 5908 5908

341
00:14:57,839 --> 00:15:02,050
and that's going to give us a whole

342
00:15:02,050 --> 00:15:04,029
bunch of data that's hard to read so we

343
00:15:04,029 --> 00:15:06,610
can switch output modes host query I has

344
00:15:06,610 --> 00:15:07,899
a couple different output modes we'll

345
00:15:07,899 --> 00:15:11,290
say dot mode line and rerun that query

346
00:15:11,290 --> 00:15:13,449
it makes it a bit easier to read we have

347
00:15:13,449 --> 00:15:15,220
one result we can read that a little bit

348
00:15:15,220 --> 00:15:17,290
easier now this doesn't give us a whole

349
00:15:17,290 --> 00:15:20,139
ton of extra information we can see that

350
00:15:20,139 --> 00:15:23,050
the path the command line the command

351
00:15:23,050 --> 00:15:24,959
line doesn't give us anything really

352
00:15:24,959 --> 00:15:27,339
current working directory we do have the

353
00:15:27,339 --> 00:15:30,100
user ID which I assume is Dresden

354
00:15:30,100 --> 00:15:31,449
because it's running out of The Dresden

355
00:15:31,449 --> 00:15:35,100
Downloads folder but we also do have the

356
00:15:35,100 --> 00:15:39,699
have to scroll a little bit do you have

357
00:15:39,699 --> 00:15:41,110
the parent there it is right there we

358
00:15:41,110 --> 00:15:43,269
have the parent process ID so let's go

359
00:15:43,269 --> 00:15:45,160
ahead and walk the stack up a little bit

360
00:15:45,160 --> 00:15:49,779
excuse me walk the walk it up just one

361
00:15:49,779 --> 00:15:50,290
more well

362
00:15:50,290 --> 00:15:54,639
say let's look at the process ID

363
00:15:54,639 --> 00:15:59,940
where was that parent is a 3088

364
00:15:59,940 --> 00:16:03,370
okay so when we look at this started

365
00:16:03,370 --> 00:16:06,819
that LastPass installer okay and that's

366
00:16:06,819 --> 00:16:08,800
explorers so that means more than likely

367
00:16:08,800 --> 00:16:13,000
the user opened up Windows Explorer went

368
00:16:13,000 --> 00:16:14,800
to downloads and double-click the file

369
00:16:14,800 --> 00:16:16,180
and that does tell us something that

370
00:16:16,180 --> 00:16:18,730
tells us that it wasn't running from a

371
00:16:18,730 --> 00:16:21,040
services or it wasn't being started from

372
00:16:21,040 --> 00:16:22,690
a scheduled task or something like that

373
00:16:22,690 --> 00:16:24,550
so that's valuable information but it

374
00:16:24,550 --> 00:16:26,170
doesn't really give us at this point

375
00:16:26,170 --> 00:16:29,709
anything else if we go back and let's

376
00:16:29,709 --> 00:16:34,870
wreck weary our LastPass let's see if

377
00:16:34,870 --> 00:16:36,940
LastPass stashed install started

378
00:16:36,940 --> 00:16:38,620
anything so we check to see what the

379
00:16:38,620 --> 00:16:40,959
parent process is let's see if it

380
00:16:40,959 --> 00:16:44,350
started any processes we can do that by

381
00:16:44,350 --> 00:16:46,509
going to select star from processes

382
00:16:46,509 --> 00:16:51,690
where the parent process is the LastPass

383
00:16:51,690 --> 00:16:56,050
have we run that we see that it started

384
00:16:56,050 --> 00:16:59,970
a PowerShell session ok and it's running

385
00:16:59,970 --> 00:17:02,980
so PowerShell execution policies bypass

386
00:17:02,980 --> 00:17:06,189
and it's running this PowerShell script

387
00:17:06,189 --> 00:17:09,669
which is little odd alright so let's

388
00:17:09,669 --> 00:17:12,880
copy this let's take a look at what this

389
00:17:12,880 --> 00:17:20,260
is well quit out of us query little cat

390
00:17:20,260 --> 00:17:24,780
and paste that guy

391
00:17:28,870 --> 00:17:33,380
okay if you guys can see that what do

392
00:17:33,380 --> 00:17:34,130
you think that's looking pretty

393
00:17:34,130 --> 00:17:37,250
suspicious isn't it anybody raise your

394
00:17:37,250 --> 00:17:40,540
hand and tell me what's going on there

395
00:17:40,540 --> 00:17:50,900
yes sir okay so it's writing to the SC

396
00:17:50,900 --> 00:17:53,900
host file what's it doing what's this

397
00:17:53,900 --> 00:18:05,150
doing over here so there's a loop it's

398
00:18:05,150 --> 00:18:07,100
checking to see get content it's

399
00:18:07,100 --> 00:18:09,710
checking to see if this portal office

400
00:18:09,710 --> 00:18:11,900
comm is in the 8c host file if it isn't

401
00:18:11,900 --> 00:18:14,360
it adds it or appends it and then it

402
00:18:14,360 --> 00:18:16,720
sleeps for 300 seconds okay definitely

403
00:18:16,720 --> 00:18:21,020
malicious right so we found something

404
00:18:21,020 --> 00:18:23,300
malicious in summary we found this

405
00:18:23,300 --> 00:18:25,040
installer that apparently spawned

406
00:18:25,040 --> 00:18:28,100
powershell session and is sitting in the

407
00:18:28,100 --> 00:18:32,150
background looking to see if portal dot

408
00:18:32,150 --> 00:18:35,000
alphas comm is in Etsy host now we can

409
00:18:35,000 --> 00:18:39,470
actually confirm let's go back let's go

410
00:18:39,470 --> 00:18:43,420
back and see is there Etsy host table in

411
00:18:43,420 --> 00:18:46,910
OS query so we can confirm this now if

412
00:18:46,910 --> 00:18:48,080
you're not sure what tables you

413
00:18:48,080 --> 00:18:49,760
currently have access to you can say dot

414
00:18:49,760 --> 00:18:53,240
tables and you could do a search on Etsy

415
00:18:53,240 --> 00:18:55,520
and that shows you that we have a few

416
00:18:55,520 --> 00:18:58,100
different tables with Etsy in it and

417
00:18:58,100 --> 00:18:59,600
there is an Etsy host so if we say

418
00:18:59,600 --> 00:19:06,560
select star from Etsy host again if I

419
00:19:06,560 --> 00:19:11,540
can spell run that and we can confirm

420
00:19:11,540 --> 00:19:13,790
that there is an entry and Etsy host

421
00:19:13,790 --> 00:19:17,480
okay so that is what's going on when

422
00:19:17,480 --> 00:19:19,820
when this user is going to portal office

423
00:19:19,820 --> 00:19:23,510
com um this is overriding this is

424
00:19:23,510 --> 00:19:26,330
overriding the regular DNS entry and

425
00:19:26,330 --> 00:19:28,280
it's directing them to something else

426
00:19:28,280 --> 00:19:29,000
all right

427
00:19:29,000 --> 00:19:31,850
now keep in mind I think that one of the

428
00:19:31,850 --> 00:19:35,000
big powers of a query is that all the

429
00:19:35,000 --> 00:19:37,580
commands I just typed are consistent

430
00:19:37,580 --> 00:19:39,890
across all of the platforms that you're

431
00:19:39,890 --> 00:19:41,830
running on so all

432
00:19:41,830 --> 00:19:43,600
if I just typed select star from Etsy

433
00:19:43,600 --> 00:19:45,640
host all the processes stuff it's the

434
00:19:45,640 --> 00:19:47,500
same whether you're not you're on a Mac

435
00:19:47,500 --> 00:19:50,470
OS Linux or Windows which is great

436
00:19:50,470 --> 00:19:52,960
because we can't always you can never

437
00:19:52,960 --> 00:19:54,789
remember right if I'm on this platform

438
00:19:54,789 --> 00:19:57,970
what do I use to access this and so that

439
00:19:57,970 --> 00:19:59,470
I think is one of the one of the very

440
00:19:59,470 --> 00:20:02,799
powerful functions of OS query now I

441
00:20:02,799 --> 00:20:04,450
think we're just about done how many

442
00:20:04,450 --> 00:20:06,220
more minutes do I have five five minutes

443
00:20:06,220 --> 00:20:11,519
thank you perfect flip back real quick

444
00:20:12,000 --> 00:20:15,220
we have a cheat sheet that I put

445
00:20:15,220 --> 00:20:17,980
together it's available up here you

446
00:20:17,980 --> 00:20:19,389
notice that there are two hundred plus

447
00:20:19,389 --> 00:20:21,820
tables inside os query right and so it

448
00:20:21,820 --> 00:20:23,529
can be very overwhelming to unearth to

449
00:20:23,529 --> 00:20:26,380
think through what's what should I be

450
00:20:26,380 --> 00:20:28,630
looking for how should I use it so we

451
00:20:28,630 --> 00:20:31,870
have a cheat sheet on the on the part on

452
00:20:31,870 --> 00:20:33,519
the this page right here it's process

453
00:20:33,519 --> 00:20:36,730
interrogation we have different

454
00:20:36,730 --> 00:20:39,429
techniques as well as queries to run to

455
00:20:39,429 --> 00:20:41,559
look at the different processes on your

456
00:20:41,559 --> 00:20:43,539
system on the flip side we have

457
00:20:43,539 --> 00:20:45,880
uncovering persistence with Oh squaring

458
00:20:45,880 --> 00:20:48,010
and again it is different tables that

459
00:20:48,010 --> 00:20:50,200
you can use to uncover common

460
00:20:50,200 --> 00:20:52,210
persistence techniques and it's mapped

461
00:20:52,210 --> 00:20:54,370
to the attack framework and the

462
00:20:54,370 --> 00:20:56,950
different techniques that are there okay

463
00:20:56,950 --> 00:20:58,840
so those are available up here they're

464
00:20:58,840 --> 00:21:02,110
also available at the applied network

465
00:21:02,110 --> 00:21:04,240
defense booth

466
00:21:04,240 --> 00:21:06,340
I just recently last week released a

467
00:21:06,340 --> 00:21:08,769
query class under Chris Andrews applied

468
00:21:08,769 --> 00:21:10,750
network defense at learn Oh square calm

469
00:21:10,750 --> 00:21:12,669
you can swing by and get more

470
00:21:12,669 --> 00:21:16,059
information as well as pick up the cheat

471
00:21:16,059 --> 00:21:19,330
sheet right here okay I think that is it

472
00:21:19,330 --> 00:21:22,510
any questions comments or snide remarks

473
00:21:22,510 --> 00:21:25,769
unusual yes

474
00:21:26,909 --> 00:21:29,590
what's the daemon use for yes great

475
00:21:29,590 --> 00:21:31,210
question so what's the daemon used for

476
00:21:31,210 --> 00:21:33,759
so you just saw I did interactive stuff

477
00:21:33,759 --> 00:21:36,249
right now imagine doing those same exact

478
00:21:36,249 --> 00:21:37,659
type queries across your entire

479
00:21:37,659 --> 00:21:40,029
infrastructure so the daemon is used for

480
00:21:40,029 --> 00:21:42,279
you deploy to all of your hosts it

481
00:21:42,279 --> 00:21:44,379
connects back to a management server

482
00:21:44,379 --> 00:21:46,450
there's both commercial and open source

483
00:21:46,450 --> 00:21:48,999
management servers you schedule queries

484
00:21:48,999 --> 00:21:50,860
to run every so often you can do ad-hoc

485
00:21:50,860 --> 00:21:52,509
or you could do scheduled queries you

486
00:21:52,509 --> 00:21:55,389
could say select star from users and you

487
00:21:55,389 --> 00:21:57,759
can run that every 60 seconds once that

488
00:21:57,759 --> 00:22:00,369
initial data is sent all users on the

489
00:22:00,369 --> 00:22:02,950
system every time a new user is added to

490
00:22:02,950 --> 00:22:05,200
the system it sends a differential log

491
00:22:05,200 --> 00:22:07,119
so you only get what was added a new

492
00:22:07,119 --> 00:22:09,309
user was added to the system so though

493
00:22:09,309 --> 00:22:11,049
that's what the daemon is used for is to

494
00:22:11,049 --> 00:22:12,999
be able to schedule queries and get the

495
00:22:12,999 --> 00:22:14,769
logs sent back to your manager and

496
00:22:14,769 --> 00:22:16,869
that's what I presented on yesterday at

497
00:22:16,869 --> 00:22:18,759
the security unconference is integrating

498
00:22:18,759 --> 00:22:21,399
that data into the network data that we

499
00:22:21,399 --> 00:22:29,590
get from security onion yes yes log

500
00:22:29,590 --> 00:22:32,679
format by default is JSON and it's very

501
00:22:32,679 --> 00:22:36,090
very easy to work through yep

502
00:22:41,590 --> 00:22:44,170
yeah that's a great question I haven't

503
00:22:44,170 --> 00:22:45,580
seen anything I've deployed it in

504
00:22:45,580 --> 00:22:48,640
production a long side are we have a

505
00:22:48,640 --> 00:22:50,890
couple different AV solutions and I

506
00:22:50,890 --> 00:22:51,670
haven't seen anything

507
00:22:51,670 --> 00:22:53,650
it certainly could happen at some point

508
00:22:53,650 --> 00:22:56,920
but I haven't seen anything yet we'll go

509
00:22:56,920 --> 00:22:59,430
right here yes

510
00:23:10,610 --> 00:23:12,350
yeah so you have to be careful the

511
00:23:12,350 --> 00:23:14,059
question was do you get differentials

512
00:23:14,059 --> 00:23:16,279
life for unique kids every time a

513
00:23:16,279 --> 00:23:17,630
process that started or something like

514
00:23:17,630 --> 00:23:19,039
that that's where you have to be

515
00:23:19,039 --> 00:23:20,450
cautious on how you're writing your

516
00:23:20,450 --> 00:23:22,190
query so that you don't get overwhelmed

517
00:23:22,190 --> 00:23:24,919
if you want that kind of data then you

518
00:23:24,919 --> 00:23:26,870
then you can select those columns and

519
00:23:26,870 --> 00:23:28,820
get so for instance there's a listening

520
00:23:28,820 --> 00:23:32,779
ports table okay so I go ahead and

521
00:23:32,779 --> 00:23:34,789
select from listening ports every five

522
00:23:34,789 --> 00:23:36,649
minutes on these servers if there's a

523
00:23:36,649 --> 00:23:38,240
new process that starts I'm certainly

524
00:23:38,240 --> 00:23:39,799
going to see that if there's a new

525
00:23:39,799 --> 00:23:41,779
process depending on how I write the

526
00:23:41,779 --> 00:23:45,019
query I could get a bunch of data or it

527
00:23:45,019 --> 00:23:46,279
could be a little more limited in scope

528
00:23:46,279 --> 00:23:48,590
just depends on what you how you want to

529
00:23:48,590 --> 00:23:55,820
look at it yes it is when I'm deploying

530
00:23:55,820 --> 00:23:59,539
it so it is encrypted through TLS all of

531
00:23:59,539 --> 00:24:01,370
the communication is done through TLS

532
00:24:01,370 --> 00:24:03,049
and I believe it's mutually

533
00:24:03,049 --> 00:24:05,779
authenticated remember correctly with

534
00:24:05,779 --> 00:24:08,539
how you can set it up how am i doing on

535
00:24:08,539 --> 00:24:12,169
time oh I have yes thank you one minute

536
00:24:12,169 --> 00:24:15,169
let me do let me do a I already gave

537
00:24:15,169 --> 00:24:17,210
away my my answer to one of my questions

538
00:24:17,210 --> 00:24:22,909
um okay who said who said the Etsy host

539
00:24:22,909 --> 00:24:25,639
file there you go your pick come on down

540
00:24:25,639 --> 00:24:28,639
pick one of these and then next question

541
00:24:28,639 --> 00:24:33,320
we'll get the other one I'm sorry that's

542
00:24:33,320 --> 00:24:35,980
horrible yes

543
00:24:40,419 --> 00:24:42,970
it is yeah the question is what kind of

544
00:24:42,970 --> 00:24:45,460
impact from a performance perspective

545
00:24:45,460 --> 00:24:47,919
does it doesn't have an on the end

546
00:24:47,919 --> 00:24:49,720
points I didn't mention this at the very

547
00:24:49,720 --> 00:24:52,749
beginning but Oh square was built from

548
00:24:52,749 --> 00:24:54,639
the ground up to be high-performance

549
00:24:54,639 --> 00:24:56,799
it's built to be able to run on your

550
00:24:56,799 --> 00:24:58,869
critical production systems it's also

551
00:24:58,869 --> 00:25:00,909
built to be read-only it does not make

552
00:25:00,909 --> 00:25:03,970
state changes to your endpoints in core

553
00:25:03,970 --> 00:25:06,070
you can have extensions that changes the

554
00:25:06,070 --> 00:25:08,409
systems but not in core and so my

555
00:25:08,409 --> 00:25:10,539
understanding is Facebook runs this on

556
00:25:10,539 --> 00:25:13,090
millions of hosts from them is what they

557
00:25:13,090 --> 00:25:15,369
say they run this on large amounts of

558
00:25:15,369 --> 00:25:18,220
hosts so we run it again on our critical

559
00:25:18,220 --> 00:25:20,739
systems it is very dependent on the

560
00:25:20,739 --> 00:25:22,600
queries you implement and how much data

561
00:25:22,600 --> 00:25:25,059
is turning back how you're doing joins

562
00:25:25,059 --> 00:25:26,739
obviously can imagine if you're doing

563
00:25:26,739 --> 00:25:29,019
some pretty complex sub queries or joins

564
00:25:29,019 --> 00:25:31,330
you're going to get performance issues

565
00:25:31,330 --> 00:25:34,149
and so it's very dependent on that OS

566
00:25:34,149 --> 00:25:35,830
query does have a very very active slap

567
00:25:35,830 --> 00:25:37,929
community and so you can certainly ask

568
00:25:37,929 --> 00:25:39,460
those types of questions within there

569
00:25:39,460 --> 00:25:41,710
all right I think you're right the time

570
00:25:41,710 --> 00:25:45,299
thank you all so much appreciate it

