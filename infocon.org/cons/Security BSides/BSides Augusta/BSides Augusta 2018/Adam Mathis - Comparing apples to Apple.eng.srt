1
00:00:14,520 --> 00:00:17,640
right here me okay I didn't lower the

2
00:00:17,640 --> 00:00:20,880
mics so that they didn't run my beard so

3
00:00:20,880 --> 00:00:23,310
today's talk is comparing apples to

4
00:00:23,310 --> 00:00:27,060
apples are apples to apple Jake in the

5
00:00:27,060 --> 00:00:28,529
last talk was nice enough to say about

6
00:00:28,529 --> 00:00:30,000
five hundred times which is cool it's

7
00:00:30,000 --> 00:00:34,230
like he was prepping for me so my name

8
00:00:34,230 --> 00:00:36,600
is Adam Mathis little background so I

9
00:00:36,600 --> 00:00:38,790
came from doing a lot of work in a lot

10
00:00:38,790 --> 00:00:40,140
of different security domains and IT

11
00:00:40,140 --> 00:00:42,390
domains vulnerability management

12
00:00:42,390 --> 00:00:44,550
security engineering penetration testing

13
00:00:44,550 --> 00:00:47,460
all this fun stuff but I worked in an

14
00:00:47,460 --> 00:00:49,140
environment where there wasn't a lot of

15
00:00:49,140 --> 00:00:52,199
Apple systems and then I switch

16
00:00:52,199 --> 00:00:54,120
companies and started working with a lot

17
00:00:54,120 --> 00:00:56,670
of it you know companies all over the

18
00:00:56,670 --> 00:00:59,399
the various spectrum and a lot of them

19
00:00:59,399 --> 00:01:01,499
were very Apple focused and I started

20
00:01:01,499 --> 00:01:02,730
trying to figure out well how do it

21
00:01:02,730 --> 00:01:05,610
how's the best way to like defend these

22
00:01:05,610 --> 00:01:08,310
systems and what I found is there's now

23
00:01:08,310 --> 00:01:10,170
there wasn't a lot of you know research

24
00:01:10,170 --> 00:01:13,650
being put into into Apple Systems not a

25
00:01:13,650 --> 00:01:15,930
lot of tooling and so I said well let's

26
00:01:15,930 --> 00:01:18,150
let's start looking at how we can get in

27
00:01:18,150 --> 00:01:21,000
this space so the idea of this talk kind

28
00:01:21,000 --> 00:01:22,500
of like the way it's going to work is

29
00:01:22,500 --> 00:01:24,570
we're going to look at certain tactics

30
00:01:24,570 --> 00:01:26,729
and techniques on the window side and

31
00:01:26,729 --> 00:01:28,920
then give you the corollary on the on

32
00:01:28,920 --> 00:01:30,960
the Mac OS side so kind of giving you a

33
00:01:30,960 --> 00:01:34,799
baseline foundation of how to find enemy

34
00:01:34,799 --> 00:01:37,560
tradecraft on Mac systems and I work for

35
00:01:37,560 --> 00:01:40,530
red canary down the bottom so we're

36
00:01:40,530 --> 00:01:42,689
gonna go over kind of the the pillars of

37
00:01:42,689 --> 00:01:46,229
the Mac security ecosystem and then

38
00:01:46,229 --> 00:01:48,060
we're will talk about some individual

39
00:01:48,060 --> 00:01:49,380
pieces of tradecraft and how to catch it

40
00:01:49,380 --> 00:01:52,079
some detection ideas and then we'll go

41
00:01:52,079 --> 00:01:54,780
into some tooling and a little project

42
00:01:54,780 --> 00:02:01,109
that I'm working on so we look at the

43
00:02:01,109 --> 00:02:03,359
Apple ecosystem and and that kind of

44
00:02:03,359 --> 00:02:06,990
income that encompasses iOS watch OS TV

45
00:02:06,990 --> 00:02:09,570
OS all these things are starting to kind

46
00:02:09,570 --> 00:02:11,700
of converge although Apple will say

47
00:02:11,700 --> 00:02:14,550
they're not you're starting to see more

48
00:02:14,550 --> 00:02:17,070
and more things come from iOS into the

49
00:02:17,070 --> 00:02:19,860
Mac OS world and and a lot of these

50
00:02:19,860 --> 00:02:21,570
things are kind of playing out across

51
00:02:21,570 --> 00:02:23,250
all of these different products so

52
00:02:23,250 --> 00:02:25,440
really Apple focuses on three main

53
00:02:25,440 --> 00:02:27,840
pillars for their security and all

54
00:02:27,840 --> 00:02:29,640
of their subsystems kind of interlaced

55
00:02:29,640 --> 00:02:31,739
together to enforce these things so this

56
00:02:31,739 --> 00:02:33,780
code signing so verifying that something

57
00:02:33,780 --> 00:02:36,620
has a legitimate code signature

58
00:02:36,620 --> 00:02:40,800
entitlements so even if something is if

59
00:02:40,800 --> 00:02:42,150
something is signed and it's running

60
00:02:42,150 --> 00:02:44,099
under a privileged user such as root

61
00:02:44,099 --> 00:02:46,530
there are certain things that you cannot

62
00:02:46,530 --> 00:02:50,370
do in an apple system such as query a an

63
00:02:50,370 --> 00:02:52,830
individual process by it's paid or it's

64
00:02:52,830 --> 00:02:56,250
process ID or you know various other

65
00:02:56,250 --> 00:02:58,769
like modifications to protected system

66
00:02:58,769 --> 00:03:00,420
files unless you have very specific

67
00:03:00,420 --> 00:03:02,730
entitlements given to you by Apple at

68
00:03:02,730 --> 00:03:04,110
the time of the compilation of the

69
00:03:04,110 --> 00:03:06,180
binary you're not going to be able to

70
00:03:06,180 --> 00:03:08,489
perform some of these activities and a

71
00:03:08,489 --> 00:03:09,750
lot of those sins they have to go

72
00:03:09,750 --> 00:03:11,370
through like an apple pipeline where

73
00:03:11,370 --> 00:03:12,989
they have to sign everything for you and

74
00:03:12,989 --> 00:03:14,519
validate the entitlements you're

75
00:03:14,519 --> 00:03:17,640
requesting it's very difficult to to get

76
00:03:17,640 --> 00:03:20,310
a binary on a system with privileged

77
00:03:20,310 --> 00:03:23,940
entitlements without you know subverting

78
00:03:23,940 --> 00:03:26,190
some some of these security system and

79
00:03:26,190 --> 00:03:28,799
then sandboxing so the disallowance of

80
00:03:28,799 --> 00:03:30,480
one process for talking to another

81
00:03:30,480 --> 00:03:31,920
everything has its own little happy

82
00:03:31,920 --> 00:03:33,600
place most of that stuff is coming

83
00:03:33,600 --> 00:03:36,420
through a pipeline of the Apple Store so

84
00:03:36,420 --> 00:03:39,239
all of these things together makes it

85
00:03:39,239 --> 00:03:42,239
really really toxic for adversaries that

86
00:03:42,239 --> 00:03:44,579
want to bring their own binaries to the

87
00:03:44,579 --> 00:03:47,670
table which is why it's fun to talk

88
00:03:47,670 --> 00:03:49,260
about living off the land most of the

89
00:03:49,260 --> 00:03:50,819
tech tactics and techniques we're gonna

90
00:03:50,819 --> 00:03:51,989
talk about here are things you can do

91
00:03:51,989 --> 00:03:54,930
with native Apple binaries but just to

92
00:03:54,930 --> 00:03:56,370
start off with just to kind of give you

93
00:03:56,370 --> 00:03:58,079
a little taste of what this will look

94
00:03:58,079 --> 00:04:00,180
like so on the window side a powershell

95
00:04:00,180 --> 00:04:01,620
and you've probably seen some talks

96
00:04:01,620 --> 00:04:03,389
today where they go into depth about how

97
00:04:03,389 --> 00:04:05,849
powershell is used for evil and in a lot

98
00:04:05,849 --> 00:04:08,310
of environments on the apple side the

99
00:04:08,310 --> 00:04:10,709
corollary for PowerShell is apple script

100
00:04:10,709 --> 00:04:13,609
so apple script is you know apple's

101
00:04:13,609 --> 00:04:15,959
scripting language that allows you to

102
00:04:15,959 --> 00:04:19,079
not only run things in terminals it

103
00:04:19,079 --> 00:04:21,418
allows you to interact with applications

104
00:04:21,418 --> 00:04:24,150
both behind the scenes and graphically

105
00:04:24,150 --> 00:04:25,860
you can click buttons you can enter text

106
00:04:25,860 --> 00:04:28,080
into text box so if you're thinking from

107
00:04:28,080 --> 00:04:29,849
an attacker standpoint you can do like

108
00:04:29,849 --> 00:04:31,710
massive amounts of evil with this thing

109
00:04:31,710 --> 00:04:34,530
and it's a lot of fun and we'll go into

110
00:04:34,530 --> 00:04:36,599
some demos of how you can do some Apple

111
00:04:36,599 --> 00:04:41,129
script evil but also there's bash on App

112
00:04:41,129 --> 00:04:46,619
systems Python Ruby Perl PHP and then

113
00:04:46,619 --> 00:04:50,039
also optionally PowerShell so Apple

114
00:04:50,039 --> 00:04:51,959
basically sets us up and says hey like

115
00:04:51,959 --> 00:04:53,639
any framework that anyone would ever

116
00:04:53,639 --> 00:04:55,499
want to bring to the table let's just

117
00:04:55,499 --> 00:04:57,360
let them run it natively now all these

118
00:04:57,360 --> 00:05:00,959
all these these things live on the Apple

119
00:05:00,959 --> 00:05:03,869
system by default the if you remove them

120
00:05:03,869 --> 00:05:05,279
you will probably break some apple

121
00:05:05,279 --> 00:05:08,639
subsystems so so it's it's just just to

122
00:05:08,639 --> 00:05:10,739
keep in mind that if someone wants to

123
00:05:10,739 --> 00:05:12,479
bring a ruby framework or some Python

124
00:05:12,479 --> 00:05:13,919
script they're probably just gonna run

125
00:05:13,919 --> 00:05:15,869
it on your system without any hindrance

126
00:05:15,869 --> 00:05:21,779
so just a little bit about taxonomy and

127
00:05:21,779 --> 00:05:23,459
kind of how we're going to focus on this

128
00:05:23,459 --> 00:05:25,949
so at the top of kind of the miter

129
00:05:25,949 --> 00:05:28,259
attack framework reference if you're

130
00:05:28,259 --> 00:05:29,490
familiar with minor attack or if you're

131
00:05:29,490 --> 00:05:31,679
not familiar with minor attack it's a

132
00:05:31,679 --> 00:05:35,149
it's a it's a nice open free

133
00:05:35,149 --> 00:05:37,189
vendor-neutral

134
00:05:37,189 --> 00:05:40,979
document or our wiki rather of adversary

135
00:05:40,979 --> 00:05:44,069
tactics and tradecraft techniques the

136
00:05:44,069 --> 00:05:46,409
tools they use it's a great way to kind

137
00:05:46,409 --> 00:05:47,759
of figure out like who are the evil

138
00:05:47,759 --> 00:05:48,959
people and what are the things they're

139
00:05:48,959 --> 00:05:51,089
doing when they get on systems so if you

140
00:05:51,089 --> 00:05:53,129
haven't heard of it it's a great way

141
00:05:53,129 --> 00:05:56,550
both as an attacker and/or a defender to

142
00:05:56,550 --> 00:05:59,249
to use this as a foundation for what are

143
00:05:59,249 --> 00:06:00,449
the things I need to hunt for whether

144
00:06:00,449 --> 00:06:01,889
things I need to be detecting what are

145
00:06:01,889 --> 00:06:03,679
the things I need to be using for attack

146
00:06:03,679 --> 00:06:06,479
and then at the bottom we have the the

147
00:06:06,479 --> 00:06:09,269
mandiant attack lifecycle this is just

148
00:06:09,269 --> 00:06:11,159
kind of another another way to describe

149
00:06:11,159 --> 00:06:12,629
what adversaries do when they get on

150
00:06:12,629 --> 00:06:14,069
your network we're going to focus

151
00:06:14,069 --> 00:06:15,809
primarily in that loop there because

152
00:06:15,809 --> 00:06:17,159
that's where the the bad guys are going

153
00:06:17,159 --> 00:06:20,339
to spend the most time there's obviously

154
00:06:20,339 --> 00:06:23,459
you know there's there's growing ways

155
00:06:23,459 --> 00:06:25,499
every single day to compromise a system

156
00:06:25,499 --> 00:06:27,599
initially to get access to it but what

157
00:06:27,599 --> 00:06:30,179
we've seen is that most bad guys when

158
00:06:30,179 --> 00:06:31,529
they get on a system they do the same

159
00:06:31,529 --> 00:06:32,969
things they're lazy just like everyone

160
00:06:32,969 --> 00:06:34,949
else so they want to use the same tools

161
00:06:34,949 --> 00:06:36,360
that they use it everywhere else they

162
00:06:36,360 --> 00:06:39,179
want to persist the same way so that's

163
00:06:39,179 --> 00:06:40,469
kind of where we're gonna focus on this

164
00:06:40,469 --> 00:06:44,249
talk so to start off with let's look at

165
00:06:44,249 --> 00:06:46,709
discovery tactics so on the window side

166
00:06:46,709 --> 00:06:49,289
we have Who am I you see on the Apple

167
00:06:49,289 --> 00:06:51,269
side we have Who am I very

168
00:06:51,269 --> 00:06:54,839
straightforward for the window side we

169
00:06:54,839 --> 00:06:55,410
have

170
00:06:55,410 --> 00:06:57,870
which is a great tool for admins as well

171
00:06:57,870 --> 00:07:00,660
as bad guys to look and see okay what

172
00:07:00,660 --> 00:07:01,590
what is this

173
00:07:01,590 --> 00:07:04,020
you know what user is you know am i

174
00:07:04,020 --> 00:07:05,550
looking at what kind of groups are they

175
00:07:05,550 --> 00:07:08,700
in information on like domain groups

176
00:07:08,700 --> 00:07:11,280
it's very useful on the Apple side you

177
00:07:11,280 --> 00:07:13,470
can perform the same type of queries

178
00:07:13,470 --> 00:07:16,560
against users and groups using D SEL and

179
00:07:16,560 --> 00:07:22,050
D S cash retail on the windows there on

180
00:07:22,050 --> 00:07:23,850
window side there's a utility called MS

181
00:07:23,850 --> 00:07:27,270
info on the Apple side there's a neat

182
00:07:27,270 --> 00:07:28,590
utility called system profiler and

183
00:07:28,590 --> 00:07:30,390
what's this Fowler does is it collects

184
00:07:30,390 --> 00:07:32,550
just a boatload of information so it

185
00:07:32,550 --> 00:07:34,920
gives you not only installed software

186
00:07:34,920 --> 00:07:37,380
gives you like firewall rules that are

187
00:07:37,380 --> 00:07:39,420
enabled all this kind of information on

188
00:07:39,420 --> 00:07:42,180
groups lots of information hardware on

189
00:07:42,180 --> 00:07:45,020
your kernel there's just like a ton of

190
00:07:45,020 --> 00:07:47,160
discovery information that you can get

191
00:07:47,160 --> 00:07:48,810
just by running this one simple command

192
00:07:48,810 --> 00:07:50,520
and as you can you can see if you can

193
00:07:50,520 --> 00:07:52,350
see on that that diagram there this is a

194
00:07:52,350 --> 00:07:55,590
an actual example of an exploited system

195
00:07:55,590 --> 00:08:00,270
where one had embedded a macro in an

196
00:08:00,270 --> 00:08:02,730
Excel document and executed it and so

197
00:08:02,730 --> 00:08:04,590
what it did is run a bunch of scripts to

198
00:08:04,590 --> 00:08:06,720
collect information on the system and

199
00:08:06,720 --> 00:08:08,610
the one there is using system profiler

200
00:08:08,610 --> 00:08:10,950
and specifically querying for us like

201
00:08:10,950 --> 00:08:13,500
one section of the system profiler data

202
00:08:13,500 --> 00:08:16,260
so lots and lots of information if you

203
00:08:16,260 --> 00:08:18,090
just run that by itself without any kind

204
00:08:18,090 --> 00:08:20,940
of command line syntax you'll get crazy

205
00:08:20,940 --> 00:08:24,150
amount of data and so if you're familiar

206
00:08:24,150 --> 00:08:26,490
with in map in map is obviously not a

207
00:08:26,490 --> 00:08:29,550
Windows exclusive but it's obviously

208
00:08:29,550 --> 00:08:32,219
it's kind of one of the de-facto port

209
00:08:32,219 --> 00:08:35,070
scanners so Apple has a little known

210
00:08:35,070 --> 00:08:37,380
port scan utility baked right into the

211
00:08:37,380 --> 00:08:40,620
operating system called stroke it is a

212
00:08:40,620 --> 00:08:44,280
substance by the the network utility app

213
00:08:44,280 --> 00:08:46,710
which is kind of a little-known built-in

214
00:08:46,710 --> 00:08:48,390
app by Apple but what it allows you to

215
00:08:48,390 --> 00:08:50,880
do is normally if you go into network

216
00:08:50,880 --> 00:08:53,340
the network utility app you can go and

217
00:08:53,340 --> 00:08:55,260
say hey there's an IP I'm gonna look at

218
00:08:55,260 --> 00:08:57,540
its the you know the ports I want to

219
00:08:57,540 --> 00:08:59,550
scan between but you can also run it

220
00:08:59,550 --> 00:09:01,530
directly from the command line so this

221
00:09:01,530 --> 00:09:03,600
is a great one to look for in any

222
00:09:03,600 --> 00:09:05,580
environment just because most people

223
00:09:05,580 --> 00:09:06,839
don't know it's there to start out with

224
00:09:06,839 --> 00:09:09,100
and there's almost

225
00:09:09,100 --> 00:09:11,140
legitimate uses to calling it directly

226
00:09:11,140 --> 00:09:14,980
from the command line like this alright

227
00:09:14,980 --> 00:09:16,090
let's get into something a little more

228
00:09:16,090 --> 00:09:16,900
exciting

229
00:09:16,900 --> 00:09:18,510
so credential access and privilege

230
00:09:18,510 --> 00:09:21,430
escalation so I want to win on the

231
00:09:21,430 --> 00:09:22,960
window side if you use the Doss key

232
00:09:22,960 --> 00:09:25,570
command or you know in a terminal you

233
00:09:25,570 --> 00:09:28,210
can I think it's f7 is the is the hotkey

234
00:09:28,210 --> 00:09:31,200
you can kind of see the history of a DOS

235
00:09:31,200 --> 00:09:34,930
command window and on the the Mac side

236
00:09:34,930 --> 00:09:36,760
because they use bash you can query the

237
00:09:36,760 --> 00:09:39,730
the bash history file which allows you

238
00:09:39,730 --> 00:09:41,110
to see all of the commands that have

239
00:09:41,110 --> 00:09:42,640
been executed by the user that you're

240
00:09:42,640 --> 00:09:45,100
running on the context now of course you

241
00:09:45,100 --> 00:09:46,810
can look at the bash history of any user

242
00:09:46,810 --> 00:09:48,730
on the box provided you have the correct

243
00:09:48,730 --> 00:09:50,500
privileges each user has their own

244
00:09:50,500 --> 00:09:53,290
history file but in there you can find

245
00:09:53,290 --> 00:09:55,600
things like you know what are the

246
00:09:55,600 --> 00:09:57,940
systems that this you know this this

247
00:09:57,940 --> 00:10:01,000
user is talking to and that might help

248
00:10:01,000 --> 00:10:02,620
you if you're an attacker figure out

249
00:10:02,620 --> 00:10:04,960
what other systems do I already have

250
00:10:04,960 --> 00:10:07,120
access to either by virtue of the fact

251
00:10:07,120 --> 00:10:09,340
that they're using some identity file

252
00:10:09,340 --> 00:10:11,380
which is that second line there if

253
00:10:11,380 --> 00:10:12,280
they're if they're pointing to an

254
00:10:12,280 --> 00:10:13,780
identity file they has a username and

255
00:10:13,780 --> 00:10:17,920
password to pass along to the server or

256
00:10:17,920 --> 00:10:19,540
is it just something there's already

257
00:10:19,540 --> 00:10:21,970
keys set up for so SSH keys so I can

258
00:10:21,970 --> 00:10:26,040
just immediately pivot to the next box

259
00:10:26,040 --> 00:10:28,480
there's other ways that you can kind of

260
00:10:28,480 --> 00:10:29,710
escalate your privilege like on the

261
00:10:29,710 --> 00:10:31,930
window side you have the concept of DLL

262
00:10:31,930 --> 00:10:34,870
hijacking so that's if you have a piece

263
00:10:34,870 --> 00:10:36,580
of software that's going to look for a

264
00:10:36,580 --> 00:10:40,000
specific dynamic library you can

265
00:10:40,000 --> 00:10:42,610
sometimes take a maliciously crafted

266
00:10:42,610 --> 00:10:45,190
library and drop it directly in the same

267
00:10:45,190 --> 00:10:47,620
folder and if the if the application is

268
00:10:47,620 --> 00:10:50,800
not coded very well they may just take

269
00:10:50,800 --> 00:10:52,420
whatever library they see first so like

270
00:10:52,420 --> 00:10:53,950
oh I have my DLL right here I don't have

271
00:10:53,950 --> 00:10:55,600
to go look anywhere else and now all of

272
00:10:55,600 --> 00:10:57,250
a sudden they're running terrible code

273
00:10:57,250 --> 00:11:00,460
in a signed app in this case the same

274
00:11:00,460 --> 00:11:03,250
exact principle exists on on the Mac

275
00:11:03,250 --> 00:11:05,590
side this is actually utility called I

276
00:11:05,590 --> 00:11:09,040
think it's just called Die Lib hijack

277
00:11:09,040 --> 00:11:11,650
search and this is something written by

278
00:11:11,650 --> 00:11:14,200
Patrick Wartell at Objective C it's a

279
00:11:14,200 --> 00:11:17,700
great tool actually objective-c sce.com

280
00:11:17,700 --> 00:11:20,740
is a it's a great place to find all

281
00:11:20,740 --> 00:11:21,560
kinds of

282
00:11:21,560 --> 00:11:24,380
Mack utilities so definitely check that

283
00:11:24,380 --> 00:11:28,520
one out too and then another way to kind

284
00:11:28,520 --> 00:11:30,620
of escalate your privilege inning adds

285
00:11:30,620 --> 00:11:33,380
the access to credentials is to just ask

286
00:11:33,380 --> 00:11:35,630
the user to give them you know their

287
00:11:35,630 --> 00:11:38,060
password so in this case this is

288
00:11:38,060 --> 00:11:40,820
actually an Apple script command you can

289
00:11:40,820 --> 00:11:42,920
see here that we're telling the system

290
00:11:42,920 --> 00:11:46,190
preferences app application to pop up a

291
00:11:46,190 --> 00:11:47,960
box and say hey I need your password to

292
00:11:47,960 --> 00:11:50,240
install system updates and then that's

293
00:11:50,240 --> 00:11:52,640
going to pass that back to your shell

294
00:11:52,640 --> 00:11:59,420
and it looks like this paste this in

295
00:11:59,420 --> 00:12:02,270
here we execute it that's legitimate

296
00:12:02,270 --> 00:12:05,210
system preferences user types in their

297
00:12:05,210 --> 00:12:08,900
password and they hit OK and that passes

298
00:12:08,900 --> 00:12:11,779
along to the shell so in most cases the

299
00:12:11,779 --> 00:12:13,850
the actor is going to have you know kind

300
00:12:13,850 --> 00:12:16,640
of a hidden shell from the user either

301
00:12:16,640 --> 00:12:18,140
like through a reverse shell or

302
00:12:18,140 --> 00:12:20,180
something like that so it wouldn't be

303
00:12:20,180 --> 00:12:24,550
quite as visible to them in this case

304
00:12:24,550 --> 00:12:27,770
jump to the next there so there's a

305
00:12:27,770 --> 00:12:30,080
there's a utility called egg shell or

306
00:12:30,080 --> 00:12:32,210
it's a post exploit framework written in

307
00:12:32,210 --> 00:12:34,970
Python specifically for Mac it's a

308
00:12:34,970 --> 00:12:38,660
surveillance based framework so there's

309
00:12:38,660 --> 00:12:40,580
there's a little bit of execution but

310
00:12:40,580 --> 00:12:42,910
mostly it's there to collect

311
00:12:42,910 --> 00:12:46,820
audio-visual file type information on on

312
00:12:46,820 --> 00:12:48,950
the victim and so this is kind of what

313
00:12:48,950 --> 00:12:50,780
that looks like there so they prompt the

314
00:12:50,780 --> 00:12:52,970
Box you the user types in there it goes

315
00:12:52,970 --> 00:12:54,710
back along the reverse shell and then

316
00:12:54,710 --> 00:12:57,230
immediately you can escalate to root for

317
00:12:57,230 --> 00:12:58,610
the most part if you have an apple

318
00:12:58,610 --> 00:13:01,070
system and you have one user on it that

319
00:13:01,070 --> 00:13:04,880
person is an admin by default so in a

320
00:13:04,880 --> 00:13:06,320
lot of places a lot of organizations

321
00:13:06,320 --> 00:13:08,330
they don't necessarily think to change

322
00:13:08,330 --> 00:13:11,390
that so you can turn a normal user into

323
00:13:11,390 --> 00:13:13,280
root which is kind of like the god of

324
00:13:13,280 --> 00:13:17,270
the computer very very quickly so down

325
00:13:17,270 --> 00:13:20,540
here the just a quick detection win so

326
00:13:20,540 --> 00:13:22,100
look for OSA script if you just look for

327
00:13:22,100 --> 00:13:24,500
OSA script in general you he'll if you

328
00:13:24,500 --> 00:13:26,300
have a lot of Macan in your environment

329
00:13:26,300 --> 00:13:28,370
you might see this a lot because apple

330
00:13:28,370 --> 00:13:30,080
script is used by a lot of legitimate

331
00:13:30,080 --> 00:13:32,000
utilities to perform actions in the

332
00:13:32,000 --> 00:13:34,280
background but it's one of those

333
00:13:34,280 --> 00:13:35,450
situations where if you

334
00:13:35,450 --> 00:13:37,670
if you're looking for command lines that

335
00:13:37,670 --> 00:13:40,100
include the like System Preferences app

336
00:13:40,100 --> 00:13:42,140
or the like the word password

337
00:13:42,140 --> 00:13:43,550
anything like that is going to be highly

338
00:13:43,550 --> 00:13:48,530
suspect so another one so if you're

339
00:13:48,530 --> 00:13:50,510
familiar with mini cats or cane or all

340
00:13:50,510 --> 00:13:52,130
these other ways you can kind of extract

341
00:13:52,130 --> 00:13:54,350
clear passwords or even sometimes

342
00:13:54,350 --> 00:13:56,750
encrypted passwords there's there's a

343
00:13:56,750 --> 00:13:58,550
kind of a corollary on the maximum in

344
00:13:58,550 --> 00:14:00,110
the way of keychain access so the

345
00:14:00,110 --> 00:14:02,810
keychain in the Mac world is kind of a

346
00:14:02,810 --> 00:14:04,640
it's a database full of all of your

347
00:14:04,640 --> 00:14:06,830
secrets and not just your passwords can

348
00:14:06,830 --> 00:14:09,410
be certificates it can be all kinds of

349
00:14:09,410 --> 00:14:12,200
different identity information basically

350
00:14:12,200 --> 00:14:14,000
Apple will be very helpful if you say

351
00:14:14,000 --> 00:14:15,200
hey I'm starting to type in a password

352
00:14:15,200 --> 00:14:16,790
to a system it's like you want me to

353
00:14:16,790 --> 00:14:18,650
soar that in keychain for you and you

354
00:14:18,650 --> 00:14:20,930
say yes and and now it's in this this

355
00:14:20,930 --> 00:14:25,160
database which is secure so how do you

356
00:14:25,160 --> 00:14:27,890
access the security base there's you can

357
00:14:27,890 --> 00:14:29,210
access it directly from the command line

358
00:14:29,210 --> 00:14:32,420
with the security the security app and

359
00:14:32,420 --> 00:14:34,880
basically there's a bunch of different a

360
00:14:34,880 --> 00:14:36,590
bunch of different switches you can use

361
00:14:36,590 --> 00:14:39,080
with security this one is fine internet

362
00:14:39,080 --> 00:14:40,970
password which does what you think it

363
00:14:40,970 --> 00:14:43,790
does so if you have saved passwords for

364
00:14:43,790 --> 00:14:45,410
any sites like your banking information

365
00:14:45,410 --> 00:14:47,630
or any internal web apps that you might

366
00:14:47,630 --> 00:14:52,490
be using you can query those directly so

367
00:14:52,490 --> 00:14:54,290
one of the other thing down here the

368
00:14:54,290 --> 00:14:56,510
second one is dump the keychain so you

369
00:14:56,510 --> 00:14:58,100
can dump everything out of the keychain

370
00:14:58,100 --> 00:15:01,010
into just the text file so both of these

371
00:15:01,010 --> 00:15:02,960
can be called from the command a command

372
00:15:02,960 --> 00:15:06,770
line apple did add some they did add

373
00:15:06,770 --> 00:15:08,420
some security around this so when you

374
00:15:08,420 --> 00:15:09,920
run these commands there will be a

375
00:15:09,920 --> 00:15:12,350
physical box that pops up that you have

376
00:15:12,350 --> 00:15:14,780
to type your password into to say okay

377
00:15:14,780 --> 00:15:16,880
yes I agree that I wanted this password

378
00:15:16,880 --> 00:15:21,290
to be removed or collected by this

379
00:15:21,290 --> 00:15:23,810
process but there are there are some

380
00:15:23,810 --> 00:15:25,460
other ways that you can subvert this so

381
00:15:25,460 --> 00:15:27,560
patrick portal from objective-c he wrote

382
00:15:27,560 --> 00:15:30,050
a great blog post on using mouse keys

383
00:15:30,050 --> 00:15:32,660
which are basically synthetic ways to

384
00:15:32,660 --> 00:15:34,460
move the mouse and click buttons just

385
00:15:34,460 --> 00:15:36,770
using keyboard input so there are

386
00:15:36,770 --> 00:15:38,180
definitely ways to get around some of

387
00:15:38,180 --> 00:15:40,970
these things so just looking for the the

388
00:15:40,970 --> 00:15:43,520
process of security will probably give

389
00:15:43,520 --> 00:15:44,930
you a lot of false positives because

390
00:15:44,930 --> 00:15:47,030
access to the keychain is used by a lot

391
00:15:47,030 --> 00:15:49,670
of different processes in the Apple

392
00:15:49,670 --> 00:15:52,460
but looking for anything that's trying

393
00:15:52,460 --> 00:15:53,930
to find a password or dump the keychain

394
00:15:53,930 --> 00:15:56,030
there's almost no legitimate apps I

395
00:15:56,030 --> 00:15:57,380
actually have never seen a legitimate

396
00:15:57,380 --> 00:15:58,940
app that would do either one of these so

397
00:15:58,940 --> 00:16:01,130
those are great switches to look for to

398
00:16:01,130 --> 00:16:05,030
find evil the other way to get access to

399
00:16:05,030 --> 00:16:06,950
the keychain is just to steal it it is

400
00:16:06,950 --> 00:16:08,930
just a file that exists on your your

401
00:16:08,930 --> 00:16:11,090
endpoint so you can just copy that thing

402
00:16:11,090 --> 00:16:13,850
live over to another system and then

403
00:16:13,850 --> 00:16:16,130
when you move it to a second Mac if you

404
00:16:16,130 --> 00:16:17,900
already have that password and you go to

405
00:16:17,900 --> 00:16:19,670
open it up it's just going to say hey

406
00:16:19,670 --> 00:16:21,530
what's the password to this keychain you

407
00:16:21,530 --> 00:16:23,030
give them the user's password you have

408
00:16:23,030 --> 00:16:25,460
all of their passwords it's very quiet

409
00:16:25,460 --> 00:16:27,230
well it's much quieter than the first

410
00:16:27,230 --> 00:16:30,680
method so just looking for any way to to

411
00:16:30,680 --> 00:16:33,470
any process at all it's not security

412
00:16:33,470 --> 00:16:36,050
that's looking at any of those keychain

413
00:16:36,050 --> 00:16:38,120
database files or any kind of file

414
00:16:38,120 --> 00:16:39,440
modification involving one of those

415
00:16:39,440 --> 00:16:42,170
database files so those are good ones it

416
00:16:42,170 --> 00:16:43,670
is also possible as a preventative

417
00:16:43,670 --> 00:16:45,200
measure you can actually change the

418
00:16:45,200 --> 00:16:47,630
password to your keychain to be

419
00:16:47,630 --> 00:16:49,370
different than your login password which

420
00:16:49,370 --> 00:16:50,750
is definitely recommended in almost

421
00:16:50,750 --> 00:16:52,580
every case just because that gives them

422
00:16:52,580 --> 00:16:54,560
another level that they have to bypass

423
00:16:54,560 --> 00:16:59,180
to get access to those secrets alright

424
00:16:59,180 --> 00:17:02,930
so for lateral movement so a lot of you

425
00:17:02,930 --> 00:17:04,670
might be familiar with PS exec there are

426
00:17:04,670 --> 00:17:06,650
obviously a lot of other ways to move

427
00:17:06,650 --> 00:17:08,599
laterally in a Windows System Windows

428
00:17:08,599 --> 00:17:10,099
environment but that's one of the more

429
00:17:10,099 --> 00:17:11,960
popular ones because it just you just

430
00:17:11,960 --> 00:17:13,490
pointed a system and say go do this

431
00:17:13,490 --> 00:17:17,599
thing and we can do this again with

432
00:17:17,599 --> 00:17:19,700
Apple script which is cool so in this

433
00:17:19,700 --> 00:17:22,069
case Apple script is telling the

434
00:17:22,069 --> 00:17:23,660
application terminal so it's opening up

435
00:17:23,660 --> 00:17:25,339
a terminal window and then it's saying

436
00:17:25,339 --> 00:17:28,490
run this script and and so with this

437
00:17:28,490 --> 00:17:30,530
case you can imagine you can pretty much

438
00:17:30,530 --> 00:17:32,330
run any kind of script you want any kind

439
00:17:32,330 --> 00:17:34,670
of bash script any kind of Python script

440
00:17:34,670 --> 00:17:37,070
you can run that directly from Apple

441
00:17:37,070 --> 00:17:39,170
script so in this case we're going to

442
00:17:39,170 --> 00:17:41,630
tell it to open an SSH session to a

443
00:17:41,630 --> 00:17:44,180
remote system wait a couple of seconds

444
00:17:44,180 --> 00:17:45,680
so we can authenticate and then run a

445
00:17:45,680 --> 00:17:47,860
second script which is going to open

446
00:17:47,860 --> 00:17:51,699
calculator in the current tab

447
00:17:54,690 --> 00:17:57,010
we're gonna run this it's going to open

448
00:17:57,010 --> 00:18:09,340
that second one into the password so you

449
00:18:09,340 --> 00:18:11,049
can run whatever you want you can run

450
00:18:11,049 --> 00:18:12,160
any kind of script any kind of

451
00:18:12,160 --> 00:18:15,220
application behind the scenes it's a and

452
00:18:15,220 --> 00:18:18,400
that's a neat little way just to move on

453
00:18:18,400 --> 00:18:21,190
to another system but you can also do

454
00:18:21,190 --> 00:18:26,950
that with like more directly with Apple

455
00:18:26,950 --> 00:18:28,929
script so if you'll see here at the

456
00:18:28,929 --> 00:18:30,460
bottom this little picture this remote

457
00:18:30,460 --> 00:18:32,650
Apple events is disabled by default but

458
00:18:32,650 --> 00:18:34,960
using AppleScript you can turn it on so

459
00:18:34,960 --> 00:18:37,120
if you reach out to a system like we

460
00:18:37,120 --> 00:18:39,250
just did in our last demo and say hey go

461
00:18:39,250 --> 00:18:40,720
and open this up and start clicking this

462
00:18:40,720 --> 00:18:43,659
button in turn this thing on now you can

463
00:18:43,659 --> 00:18:45,580
use Apple script to just reach out and

464
00:18:45,580 --> 00:18:48,159
directly touch that machine so in this

465
00:18:48,159 --> 00:18:49,929
case you can see Apple script says tell

466
00:18:49,929 --> 00:18:52,450
this application on this remote system

467
00:18:52,450 --> 00:18:55,750
to open this this application which is

468
00:18:55,750 --> 00:18:58,120
you know obviously way easier from an

469
00:18:58,120 --> 00:19:02,980
attacker standpoint so other ways to

470
00:19:02,980 --> 00:19:05,380
detect AppleScript especially the remote

471
00:19:05,380 --> 00:19:07,240
commands any kind of Apple script with a

472
00:19:07,240 --> 00:19:08,830
network connection it's not a very

473
00:19:08,830 --> 00:19:11,110
common function that you'll ever see and

474
00:19:11,110 --> 00:19:14,080
anything an any kind of Oso script

475
00:19:14,080 --> 00:19:16,240
execution with a command line of do

476
00:19:16,240 --> 00:19:18,760
shell script or do script both of those

477
00:19:18,760 --> 00:19:20,320
are indicative of trying to run some

478
00:19:20,320 --> 00:19:22,150
other kind of scripting language which

479
00:19:22,150 --> 00:19:25,169
is uncommon

480
00:19:25,169 --> 00:19:28,690
so persistence there's a there's a lot

481
00:19:28,690 --> 00:19:30,309
of different ways people can persist in

482
00:19:30,309 --> 00:19:33,820
an apple and so the startup folder on

483
00:19:33,820 --> 00:19:35,230
Windows there there used to be a

484
00:19:35,230 --> 00:19:37,090
corollary on the on the Apple side

485
00:19:37,090 --> 00:19:39,580
called library startup items it's

486
00:19:39,580 --> 00:19:42,700
deprecated but it still is honored so if

487
00:19:42,700 --> 00:19:44,650
you put something in that folder on a

488
00:19:44,650 --> 00:19:46,419
system even if it doesn't exist and you

489
00:19:46,419 --> 00:19:48,400
create it you put something there it

490
00:19:48,400 --> 00:19:51,100
will still be honored so any kind of

491
00:19:51,100 --> 00:19:53,020
file modification to that folder is

492
00:19:53,020 --> 00:19:54,940
highly suspect because that's going to

493
00:19:54,940 --> 00:19:57,970
either be someone who is someone who is

494
00:19:57,970 --> 00:19:59,500
trying to do something evil or an

495
00:19:59,500 --> 00:20:02,429
incredibly old piece of software

496
00:20:02,429 --> 00:20:04,990
services are kind of like launch demons

497
00:20:04,990 --> 00:20:07,500
so in the fact that they

498
00:20:07,500 --> 00:20:09,270
execute without the presence of a user

499
00:20:09,270 --> 00:20:10,470
so they don't really they don't

500
00:20:10,470 --> 00:20:12,300
necessarily need a user whereas

501
00:20:12,300 --> 00:20:13,950
something like your run Keys on the

502
00:20:13,950 --> 00:20:15,870
window side the run Keys the run wants

503
00:20:15,870 --> 00:20:18,480
the things that are specific to a user

504
00:20:18,480 --> 00:20:20,730
are specific to a user logging in that's

505
00:20:20,730 --> 00:20:22,800
going to be the launch agents and both

506
00:20:22,800 --> 00:20:24,960
of those exist you know in different

507
00:20:24,960 --> 00:20:26,880
places on the on the Apple system

508
00:20:26,880 --> 00:20:28,320
there's actually many different

509
00:20:28,320 --> 00:20:30,570
locations those can live in but there

510
00:20:30,570 --> 00:20:32,430
are also some really good tools so

511
00:20:32,430 --> 00:20:34,320
objective-c Patrick Worrell he has a

512
00:20:34,320 --> 00:20:36,390
tool called knock knock that will look

513
00:20:36,390 --> 00:20:39,840
at you know these and all other a lot of

514
00:20:39,840 --> 00:20:41,760
other persistence mechanisms on Mac and

515
00:20:41,760 --> 00:20:45,300
then schedule tasks we have cron jobs if

516
00:20:45,300 --> 00:20:46,920
you're familiar with the Linux world

517
00:20:46,920 --> 00:20:48,900
cron jobs are just a way to run a task

518
00:20:48,900 --> 00:20:52,740
on a schedule and then launch CTL is one

519
00:20:52,740 --> 00:20:54,330
that's kind of apple specific and it's

520
00:20:54,330 --> 00:20:56,400
kind of interesting it's um it's one

521
00:20:56,400 --> 00:20:58,290
where you can execute code and it will

522
00:20:58,290 --> 00:21:00,390
run as a job and it will continue to run

523
00:21:00,390 --> 00:21:03,150
until that job is killed or the system

524
00:21:03,150 --> 00:21:05,010
is rebooted so it's kind of a nice way

525
00:21:05,010 --> 00:21:08,040
to run something and ensure it runs and

526
00:21:08,040 --> 00:21:09,540
then as soon as the system's rebooted

527
00:21:09,540 --> 00:21:12,270
cleans up after itself and that looks

528
00:21:12,270 --> 00:21:15,360
kind of like this so we're going to run

529
00:21:15,360 --> 00:21:17,850
launch CTL we're going to open up a

530
00:21:17,850 --> 00:21:20,340
Python script you notice that popped up

531
00:21:20,340 --> 00:21:22,050
a box that's just kind of a visual it

532
00:21:22,050 --> 00:21:23,820
doesn't necessarily pop up a box on its

533
00:21:23,820 --> 00:21:26,460
own but right there moving my mouse

534
00:21:26,460 --> 00:21:28,830
frantically it comes back and so no

535
00:21:28,830 --> 00:21:30,450
matter how many times I click that okay

536
00:21:30,450 --> 00:21:32,250
button to make it go away it's going to

537
00:21:32,250 --> 00:21:34,770
continue to run so imagine a Python

538
00:21:34,770 --> 00:21:36,600
script like most of them that does not

539
00:21:36,600 --> 00:21:38,640
have a pop-up box it's just running in

540
00:21:38,640 --> 00:21:40,350
the background and even if someone does

541
00:21:40,350 --> 00:21:41,640
you know they look and see what are my

542
00:21:41,640 --> 00:21:43,230
writing processes oh there's some Python

543
00:21:43,230 --> 00:21:45,090
let's kill it you kill it it's gonna

544
00:21:45,090 --> 00:21:47,790
come right back so it's a fun to look

545
00:21:47,790 --> 00:21:50,940
for in any kind of launch CTL especially

546
00:21:50,940 --> 00:21:54,330
with a submit as a command line that's a

547
00:21:54,330 --> 00:21:57,120
that's a that's definitely something

548
00:21:57,120 --> 00:22:00,180
that's some looking at so how do you

549
00:22:00,180 --> 00:22:04,940
gain visibility to your Mac systems so

550
00:22:04,940 --> 00:22:07,260
there was a gentleman that had a talk

551
00:22:07,260 --> 00:22:09,570
earlier today about OS query it was

552
00:22:09,570 --> 00:22:11,190
excellent definitely should go back and

553
00:22:11,190 --> 00:22:13,590
watch that recording just kind of the

554
00:22:13,590 --> 00:22:15,900
ins and outs of how to start using OS

555
00:22:15,900 --> 00:22:17,880
query for hunting for evil in your

556
00:22:17,880 --> 00:22:20,790
environment it is retroactive so

557
00:22:20,790 --> 00:22:23,010
you can you can run queries against your

558
00:22:23,010 --> 00:22:24,780
systems over and over again to get kind

559
00:22:24,780 --> 00:22:26,370
of up-to-date information but it's not

560
00:22:26,370 --> 00:22:28,050
really a real-time monitoring tools that

561
00:22:28,050 --> 00:22:30,030
really meant to be one but it's a great

562
00:22:30,030 --> 00:22:31,500
way to find persistence and all other

563
00:22:31,500 --> 00:22:35,870
kinds of things on your on your network

564
00:22:35,870 --> 00:22:38,520
super odda is one I really like written

565
00:22:38,520 --> 00:22:40,820
by Jonathan Levin

566
00:22:40,820 --> 00:22:43,890
this is it's more this is a real time

567
00:22:43,890 --> 00:22:48,540
Tool he basically reversed PR audit from

568
00:22:48,540 --> 00:22:52,140
from you know old unix fame and came up

569
00:22:52,140 --> 00:22:53,940
with a better implementation for mac and

570
00:22:53,940 --> 00:22:57,300
so it can it can either output in this

571
00:22:57,300 --> 00:22:59,190
format that you see down here or in JSON

572
00:22:59,190 --> 00:23:01,500
and it has native syslog so you can pipe

573
00:23:01,500 --> 00:23:03,060
that up to unique on that system that

574
00:23:03,060 --> 00:23:05,430
you want so that's definitely worth

575
00:23:05,430 --> 00:23:08,400
looking at and thence Nouman is is one

576
00:23:08,400 --> 00:23:12,900
of the the more recent systems that came

577
00:23:12,900 --> 00:23:15,840
to the table this year this is an open

578
00:23:15,840 --> 00:23:19,380
source so totally open source it's it's

579
00:23:19,380 --> 00:23:21,600
another real-time monitoring it was very

580
00:23:21,600 --> 00:23:22,890
processed focus to start out with

581
00:23:22,890 --> 00:23:24,660
they've recently added some some network

582
00:23:24,660 --> 00:23:27,180
visibility there's definitely one to to

583
00:23:27,180 --> 00:23:28,610
look out for in the future

584
00:23:28,610 --> 00:23:31,080
and then some other useful tools if

585
00:23:31,080 --> 00:23:31,950
you're trying to protect your mac

586
00:23:31,950 --> 00:23:34,350
systems so little cinch in micro snitch

587
00:23:34,350 --> 00:23:36,660
those are firewalls you know there's a

588
00:23:36,660 --> 00:23:38,220
process-oriented firewall and little

589
00:23:38,220 --> 00:23:40,050
snitch micro snitch tells you if your

590
00:23:40,050 --> 00:23:43,080
microphone or your video go hot which is

591
00:23:43,080 --> 00:23:45,270
very useful if you're not expecting that

592
00:23:45,270 --> 00:23:47,730
stuff to happen someone is trying to spy

593
00:23:47,730 --> 00:23:49,500
on you you will see these little eyes

594
00:23:49,500 --> 00:23:51,690
and ears go live and lets you know that

595
00:23:51,690 --> 00:23:54,480
something bad is happening and then I

596
00:23:54,480 --> 00:23:56,520
mentioned Objective C a couple of times

597
00:23:56,520 --> 00:24:00,330
lots of great tools out there so I wrote

598
00:24:00,330 --> 00:24:00,990
a little script

599
00:24:00,990 --> 00:24:03,480
the idea being this it's never going to

600
00:24:03,480 --> 00:24:05,700
replace it's never going to play so this

601
00:24:05,700 --> 00:24:07,740
query or it's not really meant to but if

602
00:24:07,740 --> 00:24:08,730
you're in an environment where you have

603
00:24:08,730 --> 00:24:10,650
a handful of Mac's and you don't

604
00:24:10,650 --> 00:24:12,090
necessarily to go through all the

605
00:24:12,090 --> 00:24:14,010
trouble of getting a new vendor product

606
00:24:14,010 --> 00:24:15,420
approved or not vendor product but

607
00:24:15,420 --> 00:24:16,860
another product to prove to install on

608
00:24:16,860 --> 00:24:18,810
them this is just a bash script so you

609
00:24:18,810 --> 00:24:22,230
can deploy this with SSH and it

610
00:24:22,230 --> 00:24:23,580
basically what it will do is just give

611
00:24:23,580 --> 00:24:26,730
you information on users groups known

612
00:24:26,730 --> 00:24:29,790
persistence mechanisms just a lot of

613
00:24:29,790 --> 00:24:31,080
information so you can kind of get a

614
00:24:31,080 --> 00:24:33,480
baseline of your systems it's still very

615
00:24:33,480 --> 00:24:34,260
alpha

616
00:24:34,260 --> 00:24:35,669
if you go in looking you're look at it

617
00:24:35,669 --> 00:24:38,370
please don't judge me it's okay please

618
00:24:38,370 --> 00:24:39,690
feel free to add whatever you want I'm

619
00:24:39,690 --> 00:24:42,390
not very good at code but I do I do make

620
00:24:42,390 --> 00:24:45,630
stuff that works occasionally so go

621
00:24:45,630 --> 00:24:47,460
check that out if you would like and

622
00:24:47,460 --> 00:24:50,549
that is that's that's me so any

623
00:24:50,549 --> 00:24:55,940
questions yes sir

624
00:24:57,260 --> 00:24:59,100
I'm sure yeah they'll be out there

625
00:24:59,100 --> 00:25:01,679
somewhere for sure absolutely and you

626
00:25:01,679 --> 00:25:03,270
can come get a prize since you asked a

627
00:25:03,270 --> 00:25:11,070
question yeah absolutely

628
00:25:11,070 --> 00:25:12,960
any other questions hint hint guy with

629
00:25:12,960 --> 00:25:30,270
the glasses so there probably are iOS is

630
00:25:30,270 --> 00:25:34,169
not really my forte specifically I know

631
00:25:34,169 --> 00:25:36,419
that so when I mentioned eggshell as

632
00:25:36,419 --> 00:25:38,340
like an attackers tool that absolutely

633
00:25:38,340 --> 00:25:41,910
works for both Mac OS and iOS so from

634
00:25:41,910 --> 00:25:45,330
from a defender standpoint I sure

635
00:25:45,330 --> 00:25:46,590
there's more stuff out there that I'm

636
00:25:46,590 --> 00:25:48,540
aware of but eggshell eggshell can do a

637
00:25:48,540 --> 00:25:52,590
lot of damage on iOS and you also sir

638
00:25:52,590 --> 00:26:00,799
get a price yes ma'am

639
00:26:09,159 --> 00:26:12,999
geeky NASA over time

640
00:26:26,600 --> 00:26:28,789
it's a very it's a very different

641
00:26:28,789 --> 00:26:32,210
environment just the down to the most

642
00:26:32,210 --> 00:26:34,850
basic levels Mac shares a lot with BSD

643
00:26:34,850 --> 00:26:36,200
so if you come from a Linux environment

644
00:26:36,200 --> 00:26:39,110
there's a lot more coarsely but there's

645
00:26:39,110 --> 00:26:40,970
a lot of a lot of newness that you have

646
00:26:40,970 --> 00:26:43,570
to learn with Mac so it was really just

647
00:26:43,570 --> 00:26:46,850
luckily I had a lot of Linux so it it

648
00:26:46,850 --> 00:26:48,529
would I just thought of it like a Linux

649
00:26:48,529 --> 00:26:49,759
system with better support

650
00:26:49,759 --> 00:26:53,630
so yeah so it's OK in that in that

651
00:26:53,630 --> 00:27:01,279
respect yes yeah so some more than

652
00:27:01,279 --> 00:27:03,200
others so the discovery ones are the

653
00:27:03,200 --> 00:27:06,009
ones we see most commonly

