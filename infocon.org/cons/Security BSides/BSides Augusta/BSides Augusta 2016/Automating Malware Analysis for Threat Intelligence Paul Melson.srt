1
00:00:00,000 --> 00:00:11,429
sewer / provider perspective he was
after her by really good to really make

2
00:00:11,429 --> 00:00:15,960
it sound like just you know complicated
my wife really really

3
00:00:15,960 --> 00:00:25,740
it also has a distinction of having an
alter ego will take on figured out ways

4
00:00:25,740 --> 00:00:34,500
from where that security has an older
you know that was presented with that

5
00:00:34,500 --> 00:00:39,120
day but i can tell you that from that
it's probably the worst kept secret in

6
00:00:39,120 --> 00:00:53,160
four seconds maybe you're going to let
you in on the joke always always awesome

7
00:00:53,160 --> 00:00:58,858
to be back here in Augusta besides I
guess that is definitely a go-to so if

8
00:00:58,859 --> 00:01:03,809
you're watching this at home on youtube
next year 2017 you need to be here

9
00:01:04,769 --> 00:01:10,860
I still can't believe they let me speak
quite frankly I'm so yeah I'm Allison I

10
00:01:10,860 --> 00:01:11,820
do

11
00:01:11,820 --> 00:01:19,439
cyber stuff for for target been there
about 18 months and I have pretty high

12
00:01:19,439 --> 00:01:26,460
five for hobbies kind of in order my
kids we foster dogs for assistance

13
00:01:26,460 --> 00:01:31,020
program i collect very and I collect
matter

14
00:01:31,020 --> 00:01:36,869
unfortunately for you i'm only going to
talk about the last so this is a little

15
00:01:36,869 --> 00:01:41,939
bit about automating Miller analysis for
threat intelligence before we really get

16
00:01:41,939 --> 00:01:44,970
into how that all works and

17
00:01:45,620 --> 00:01:49,190
before we tempt fate with some demos
want to talk about why it is that we

18
00:01:49,190 --> 00:01:53,120
analyze malware in the first place i
think it's an important thing to kind of

19
00:01:53,120 --> 00:01:59,420
baseline from right so Mallory analysis
if we go back to like the antivirus days

20
00:01:59,420 --> 00:02:04,340
is actually one of the oldest practices
in information security chances are

21
00:02:04,340 --> 00:02:08,750
pretty good that most of you in the room
were somewhere where they had antivirus

22
00:02:08,750 --> 00:02:13,760
long before they had internet
connectivity and firewall but what's

23
00:02:13,760 --> 00:02:18,590
interesting is that viruses started out
as kind of self-replicating destructive

24
00:02:18,590 --> 00:02:26,120
everything pointless tools but now they
are monetized they are just that tools

25
00:02:26,120 --> 00:02:32,870
for the commission of crimes various
types so when we're doing our analysis

26
00:02:32,870 --> 00:02:36,650
what we're really doing alright
fundamentally is we're going back and

27
00:02:36,650 --> 00:02:42,080
we're trying to understand the
capabilities of the binaries the running

28
00:02:42,080 --> 00:02:46,220
into and by understanding those specific
capabilities

29
00:02:46,220 --> 00:02:50,900
we're hoping that perhaps we can infer
the intent of the adversary right at the

30
00:02:50,900 --> 00:02:55,640
end of the day there's an attacker who's
trying to do something almost always

31
00:02:55,640 --> 00:02:59,630
monetize something in some way or gain
some sort of an advantage whether that's

32
00:02:59,630 --> 00:03:03,890
direct compensation for what they've
done or whether it is some sort of

33
00:03:03,890 --> 00:03:10,670
tactical or intelligence advantage the
malware is just a means to an end and

34
00:03:10,670 --> 00:03:16,820
understanding the malware maybe let us
understand what that end is and so that

35
00:03:16,820 --> 00:03:22,340
lets me keep it very nicely into the
lockheed martin kill chain so we had a

36
00:03:22,340 --> 00:03:26,870
spirited conversation over drinks last
night so with some of the other industry

37
00:03:26,870 --> 00:03:32,959
luminaries that are here at this
conference and so so whether you're a

38
00:03:32,959 --> 00:03:39,680
fan of minor or Lockheed or or the
median attack lifecycle they're all

39
00:03:39,680 --> 00:03:40,610
valid

40
00:03:40,610 --> 00:03:45,380
but my point in bringing this up as I
you at the end of the day every attack

41
00:03:45,380 --> 00:03:50,840
has to go through phases in order for
the adversary to get to the edge and so

42
00:03:50,840 --> 00:03:54,980
by looking at malware analysis right we
get to interact or we have the

43
00:03:54,980 --> 00:03:58,760
opportunity to interact we don't we see
it we are always there and present in

44
00:03:58,760 --> 00:04:03,380
the IR cycle but we have that
opportunity to interact starting at

45
00:04:03,380 --> 00:04:07,579
delivery but we're analyzing malware and
one of the reasons that we want to

46
00:04:07,580 --> 00:04:11,360
automate analyzing malware the state
faster this because the point of the

47
00:04:11,360 --> 00:04:16,040
malware is it will almost always tell us
something about the installation

48
00:04:16,040 --> 00:04:19,850
community control right that initial
payload that dropper whether it's a

49
00:04:19,850 --> 00:04:25,850
macro in a document whether it is a
primary stage 1 loader that delivers a

50
00:04:25,850 --> 00:04:30,020
secondary mission payload or whether
it's a handoff pot right there's an

51
00:04:30,020 --> 00:04:34,520
entire industry in the in the crimeware
family where they're dropping rats

52
00:04:34,520 --> 00:04:38,359
specifically for the purpose of selling
access to your network to someone else

53
00:04:38,360 --> 00:04:42,110
somebody else buys in these there at
$TIME to drop the new malware and then

54
00:04:42,110 --> 00:04:47,000
they as they exit the scene and the new
adversaries in your environment without

55
00:04:47,000 --> 00:04:51,860
ever having to figure out how to hack
you in the first place and the thing

56
00:04:51,860 --> 00:04:57,229
about this is if we can quickly move
from delivery stage to understanding

57
00:04:57,229 --> 00:05:01,550
installation and command-and-control
because those are things that come with

58
00:05:01,550 --> 00:05:06,979
the delivery of the payload right by
working through there then we had the

59
00:05:06,979 --> 00:05:12,860
opportunity to disrupt the actions and
objectives of the adversary so the speed

60
00:05:12,860 --> 00:05:17,450
at which we move many give us the
opportunity to get ahead in the

61
00:05:17,450 --> 00:05:23,390
adversary really ultimately this is the
value of operating with you pick your

62
00:05:23,390 --> 00:05:26,390
model but with some level of attack
model and model

63
00:05:26,920 --> 00:05:33,430
so a little bit about my research I
collected data using virustotal

64
00:05:33,430 --> 00:05:34,780
intelligence

65
00:05:34,780 --> 00:05:40,599
I like PTI because it has an API I got
did some reverse engineering on a couple

66
00:05:40,600 --> 00:05:45,460
families of malware I picked up a new
pls things and neutrino so this is

67
00:05:45,460 --> 00:05:49,930
neutrino with a 3 not neutrinos the
exploit kit also called Casa debt by

68
00:05:49,930 --> 00:05:55,660
some of the vendors and the reason that
I picked these is that they're widely

69
00:05:55,660 --> 00:06:01,360
prevalent and they have a kind of an
understood end right one of the

70
00:06:01,360 --> 00:06:06,790
functions of neutrino is a neutrino does
a few things it can act as a leadoff

71
00:06:06,790 --> 00:06:08,260
spot and some other stuff

72
00:06:08,260 --> 00:06:13,210
it also has a credit card ram scraping
capability which of course is a new POS

73
00:06:13,210 --> 00:06:17,770
things bread and butter so I definitely
have an interest in malware that does

74
00:06:17,770 --> 00:06:25,359
these things so we tried a lot of that
went the goal was to do some reversing

75
00:06:25,360 --> 00:06:29,770
on these understand the building yard
signatures deploy those your solution

76
00:06:29,770 --> 00:06:35,289
virustotal for hunting and then when
virustotal file- samples automate the

77
00:06:35,290 --> 00:06:41,350
pulldown of those and triage into the
Viper above framework so far if you're

78
00:06:41,350 --> 00:06:44,830
not familiar as a static analysis
framework particular my necks and can't

79
00:06:44,830 --> 00:06:49,210
breathe and it's a community or brought
to you

80
00:06:49,210 --> 00:06:53,500
mostly by folks that have worked also on
cool sandbox

81
00:06:53,500 --> 00:06:59,530
so this is the static analysis cousin to
cruise dynamic analysis and actually

82
00:06:59,530 --> 00:07:02,500
they have a pretty slick integration so
i'm gonna be showing you this because

83
00:07:02,500 --> 00:07:08,260
this is just kind of my favorite tool
set to to do reversing with and it also

84
00:07:08,260 --> 00:07:13,000
it's handy because it has an API so it
makes automation really really easy for

85
00:07:13,000 --> 00:07:19,180
people who are not natural and
developers like myself so let's dig in

86
00:07:19,180 --> 00:07:25,120
on nutrino some of the stuff that
neutrino does so here's these are

87
00:07:25,120 --> 00:07:26,320
snippets from

88
00:07:26,320 --> 00:07:31,090
that some screenshots just to prove to
you that that I I know what I'm talking

89
00:07:31,090 --> 00:07:33,400
about when I write that you are rules

90
00:07:33,400 --> 00:07:39,099
so here we've got dozen some strange
that you created of these are variables

91
00:07:39,100 --> 00:07:42,430
that are designed to capture track one
track too familiar at all with mac

92
00:07:42,430 --> 00:07:46,060
stripes and credit cards in the way that
those work track one track to you are

93
00:07:46,060 --> 00:07:51,760
written data structures on traditional
magstripe reader connected to a pc will

94
00:07:51,760 --> 00:07:56,320
just pull those into an import about for
usually the keyboard buffer and simply

95
00:07:56,320 --> 00:07:59,920
make those it's essentially like
somebody typed them in and those will be

96
00:07:59,920 --> 00:08:06,820
just sitting resonates in not in one of
the input registers for the process that

97
00:08:06,820 --> 00:08:11,500
has hooked that device so track one
track to or you

98
00:08:11,500 --> 00:08:16,540
I mean it kind of calls out exactly with
malware is getting ready to do this is

99
00:08:16,540 --> 00:08:19,960
some interesting stuff about neutrinos
well so if you look at all the little

100
00:08:19,960 --> 00:08:25,570
red bubbles there you'll see things like
mal test tequila boom sandbox virus

101
00:08:25,570 --> 00:08:33,460
malware sample virus sandbox and so
first giveaway of the talk is who can

102
00:08:33,460 --> 00:08:50,350
tell me what to kill boom is correct so
much killing mood is right with our mark

103
00:08:50,350 --> 00:08:58,630
easy binaries anything remove their
thinking about home part about that is

104
00:08:58,630 --> 00:09:04,240
you can totally do that again right
attention binaries usually assigned a

105
00:09:04,240 --> 00:09:12,280
bad stuff and one final thing about
neutrino is that it statically builds

106
00:09:12,280 --> 00:09:18,370
command-and-control in command control
can be flipped by the panel but in a lot

107
00:09:18,370 --> 00:09:21,100
of cases in fact in most cases a

108
00:09:21,100 --> 00:09:27,550
we're we're talking about crime where
the the builder will simply import the

109
00:09:27,550 --> 00:09:30,760
command and control structure directly
into the file itself right so if you

110
00:09:30,760 --> 00:09:34,210
have the PE binder you have that can
command and control data in front of you

111
00:09:34,210 --> 00:09:39,310
just have to know where to look and a
neutrino it actually stores in a base64

112
00:09:39,310 --> 00:09:44,260
encoded string that's just extractable
by strings so it's some really really

113
00:09:44,260 --> 00:09:48,490
basic there's no fancy obfuscation here
it's just enough so that you don't

114
00:09:48,490 --> 00:09:49,630
immediately go

115
00:09:49,630 --> 00:09:54,700
hey that's a funny-looking URL when you
look at it so but sure enough with you

116
00:09:54,700 --> 00:09:59,560
decode that you get the URL panel the
panel can move the botnets two new

117
00:09:59,560 --> 00:10:03,430
panels but they have to be talking to it
at the time and all the scenes to for

118
00:10:03,430 --> 00:10:11,140
neutrinos over HTTP so when completed
reversing hear some yard rules one

119
00:10:11,140 --> 00:10:16,960
that's the one on your right is
strengths-based so leverage tequila boom

120
00:10:16,960 --> 00:10:22,480
along with some of the other BOTS
commands in the c2 along with some of

121
00:10:22,480 --> 00:10:28,240
the URL parameters that we know that
different versions of neutrino to use on

122
00:10:28,240 --> 00:10:34,990
the on my right your left you can see
the same box of asian opcodes are broken

123
00:10:34,990 --> 00:10:38,770
out there that's not exactly human
readable but trust me that's a that's

124
00:10:38,770 --> 00:10:47,980
not a bad rule in either so I don't have
network this is one of this is perhaps

125
00:10:47,980 --> 00:10:49,330
my soul

126
00:10:49,330 --> 00:10:53,020
besides I guess that is why you're going
to have to take my word for it that the

127
00:10:53,020 --> 00:10:56,650
hunting script runs just fine in my
sandbox every five minutes so there's my

128
00:10:56,650 --> 00:11:01,329
crontab and then at the bottom you can
see the bti notification script which

129
00:11:01,330 --> 00:11:03,610
will show you the code in a little bit

130
00:11:03,610 --> 00:11:09,760
be gentle not a developer you can see it
reaching out talking to virustotal and

131
00:11:09,760 --> 00:11:11,110
say hey when you have for me

132
00:11:11,110 --> 00:11:12,540
hey I have these two

133
00:11:12,540 --> 00:11:17,189
you know these to Google hits for you
and then what the code does is it checks

134
00:11:17,190 --> 00:11:21,360
in with with the Viper repo and says hey
do you have this hash and in this case

135
00:11:21,360 --> 00:11:26,130
it's saying yes i have that hash so we
do additional steps the vital repo says

136
00:11:26,130 --> 00:11:30,300
no I don't have that hash then we pull
the file down from buyers total inserted

137
00:11:30,300 --> 00:11:36,030
into viper and then have VIPRE triology
using the same you are rules again and I

138
00:11:36,030 --> 00:11:40,319
have to do a few other things like tag
it with import hash and is there any

139
00:11:40,320 --> 00:11:45,900
packers that are identified in the file
and a few other interesting tricks that

140
00:11:45,900 --> 00:11:53,490
you can do with with Yara and store
dashti in like so and then here's proves

141
00:11:53,490 --> 00:11:57,660
that died in fact adjust this file into
into my kuriboh

142
00:11:57,660 --> 00:12:03,689
so what you'll see the hash matches and
it is in fact tag and ready for me to go

143
00:12:03,690 --> 00:12:11,400
ahead and analyze it at money and my
Legion so let's do this

144
00:12:17,790 --> 00:12:24,990
ok so this is the aforementioned
terrible Python code that makes up the

145
00:12:24,990 --> 00:12:32,310
virus total hunting script so it's
primarily based on requests and JSON and

146
00:12:32,310 --> 00:12:36,839
a little bit of regex because not
everything this JSON as well as json

147
00:12:36,840 --> 00:12:45,480
should be done so here we build a list
of rules and so this is this is the list

148
00:12:45,480 --> 00:12:48,240
of rules corresponds to the hunting
rules i have to apply deployed

149
00:12:48,240 --> 00:12:54,840
virustotal i have a substring subroutine
here that just generates the port hash

150
00:12:54,840 --> 00:13:02,730
value using using the Viper API reach
out pull notifications if we have any

151
00:13:02,730 --> 00:13:07,290
notifications we kind of come through
and extract the ID the hashes the

152
00:13:07,290 --> 00:13:11,069
ruleset name the type check and make
sure that what we're looking at is in

153
00:13:11,070 --> 00:13:14,490
the X your dll this is a lesson
hard-learned if you're going to use

154
00:13:14,490 --> 00:13:18,240
automated hunting functions to pull
binaries from weather

155
00:13:18,240 --> 00:13:22,500
you regardless of whose source you use
not this applies whether using

156
00:13:22,500 --> 00:13:28,200
virustotal mal share or any of the other
available repose out there to to pull

157
00:13:28,200 --> 00:13:33,240
samples you definitely want to make sure
that you're pulling down balance Windows

158
00:13:33,240 --> 00:13:35,760
executable files if that's what you're
looking for

159
00:13:35,760 --> 00:13:39,899
otherwise you will just end up with a
filesystem full of other detection

160
00:13:39,899 --> 00:13:50,520
companies detector so so yes she does so
of the pack if you if you're so inclined

161
00:13:50,520 --> 00:13:56,490
if you need mcafee signature updates you
can get them off our stuff and everybody

162
00:13:56,490 --> 00:13:57,600
else's stuff too

163
00:13:57,600 --> 00:14:01,830
frankly ok i'm too so then we check make
sure it's a file that we actually want

164
00:14:01,830 --> 00:14:08,459
we check in with the repo and say a you
already have this hash if it has the it

165
00:14:08,459 --> 00:14:12,420
has the hash then we just skip it if it
doesn't have the hash that we go ahead

166
00:14:12,420 --> 00:14:17,459
and pull the file down from virustotal
and then store it and then come back

167
00:14:17,459 --> 00:14:25,109
here and upload the file via the the
Viper API and so this is sitting got a

168
00:14:25,110 --> 00:14:28,829
little teaching micro incident sitting
out name is an easy-to-use it does

169
00:14:29,660 --> 00:14:41,030
hi folks out here unfortunately had a
little video freeze up so we lose the

170
00:14:41,030 --> 00:14:46,189
speaker's motion and audio until about
the 15 minute 52 second block

171
00:15:57,300 --> 00:16:06,359
so so i have written a few things here
some of the stuff actually calls back

172
00:16:06,360 --> 00:16:09,450
out of hours total pick up some
additional information i will be able to

173
00:16:09,450 --> 00:16:12,330
do that but have this guy here

174
00:16:12,330 --> 00:16:19,470
oh so one thing you can one thing i've
done right so this is the corpus of ruby

175
00:16:19,470 --> 00:16:28,290
is things their 85 samples in my rebo
and this is all based on using tags i

176
00:16:28,290 --> 00:16:32,069
have a little bit more neutrino that I
have new people new POS things but

177
00:16:32,070 --> 00:16:45,209
they're all kind of useful and just
showing off again another module or so

178
00:16:45,209 --> 00:16:50,069
so new POS things should you go see to
basically four strings are just little

179
00:16:50,070 --> 00:16:55,890
string search that will explore basics
before screen patterns using a basic

180
00:16:55,890 --> 00:17:00,060
projects if find it takes that spring
tries to be coded as the decoding

181
00:17:00,060 --> 00:17:04,948
successful against value but that is
like super helpful when you're trying to

182
00:17:04,949 --> 00:17:09,900
get into a whole bunch of samples so
let's do that

183
00:17:10,619 --> 00:17:16,409
so this screen down here this is the
Viper API console just show you that I'm

184
00:17:16,410 --> 00:17:22,650
not cheating and this is the demo
version of the report and so what i can

185
00:17:22,650 --> 00:17:29,940
do is just telling a I want everything
that's tagged a particular way so in

186
00:17:29,940 --> 00:17:33,360
this case i want everything that's
academies neutrino and it's just going

187
00:17:33,360 --> 00:17:38,610
to go in there as they're generating
this big ugly pipe delimited mess of

188
00:17:38,610 --> 00:17:41,610
stuff that i can then do later analysis

189
00:17:42,240 --> 00:17:48,390
so you can see we're ripping out all
kinds of stuff user-agent strings import

190
00:17:48,390 --> 00:17:52,559
hashes compiled x file size

191
00:17:53,260 --> 00:17:57,280
all different kinds of things to just
sort of get here is the set of

192
00:17:57,280 --> 00:18:01,120
indicators that i think i might walk
about this and then take a minute to

193
00:18:01,120 --> 00:18:05,229
talk about this approach versus metadata
collection in a big data environment

194
00:18:05,230 --> 00:18:10,060
right because it is also a viable
approach to take and rip all this

195
00:18:10,060 --> 00:18:14,320
metadata as you collect the same bowls
right off of your source and put it into

196
00:18:14,320 --> 00:18:17,350
an elastic search environment and that
will give you lots of things because

197
00:18:17,350 --> 00:18:21,639
something like Viper keeps all of the
malware samples in what I would call a

198
00:18:21,640 --> 00:18:27,160
zoo live on disk that lets me write new
code and go back and reanalyze those

199
00:18:27,160 --> 00:18:29,770
over know the number as I learn new
things

200
00:18:29,770 --> 00:18:34,720
the problem is scale on that end but the
challenge you but you give up the

201
00:18:34,720 --> 00:18:39,580
ability to continually reanalyze samples
if you remove the metadata collection

202
00:18:39,580 --> 00:18:45,280
and a big data environment so i guess in
sure what I'm saying people

203
00:18:45,280 --> 00:18:58,300
alright so now that you've watched this
grind for a minute let me show you

204
00:18:59,290 --> 00:19:13,389
so I did does some kind of discrete ones
for some specific use cases because some

205
00:19:13,390 --> 00:19:17,320
each one kind of you had to know i know
i had to know a little bit about how to

206
00:19:17,320 --> 00:19:21,399
do the extraction right so either you
most of these in some variation on

207
00:19:21,400 --> 00:19:26,290
strings and decoding to give the
community control out there are a couple

208
00:19:26,290 --> 00:19:31,210
that i'm not going to show off here that
are you know were reliably on codes

209
00:19:31,210 --> 00:19:36,400
which they're super slow because you
have to have I have yet to find an

210
00:19:36,400 --> 00:19:40,660
elegant way tonight just iterate over a
bunch of a bunch of different address

211
00:19:40,660 --> 00:19:49,000
spaces inside of the sample to actually
get to see two out but this one should

212
00:19:49,000 --> 00:19:54,790
work there we go so you can see it's
starting to rip things out and all the

213
00:19:54,790 --> 00:19:57,850
way to the right there you'll see it
start to parse out the

214
00:19:57,850 --> 00:20:00,929
command-and-control this is all so
caveat right

215
00:20:00,930 --> 00:20:04,620
this is all I've Oh nobody's trying to
browse to any of these sites most of

216
00:20:04,620 --> 00:20:09,689
this is old and down but as we get to
the bottom there's stuff that is up as

217
00:20:09,690 --> 00:20:16,110
of this past weekend so you know I'm
doing this all on a closed network on a

218
00:20:16,110 --> 00:20:21,959
machine that i'm going to reimage when i
get back to Minnesota but you know any

219
00:20:21,960 --> 00:20:26,160
time you're playing with like malware do
so at your own risk and don't just

220
00:20:26,160 --> 00:20:31,320
consider the safety of the machine or
the network with Iran i mentioned

221
00:20:31,320 --> 00:20:35,580
earlier i run all this stuff on amazon i
do not do any of this on the work

222
00:20:35,580 --> 00:20:46,230
network that's how you get your laptop
contained by blue team so so but if you

223
00:20:46,230 --> 00:20:49,590
want if you will look up here with me
you will see that there are some really

224
00:20:49,590 --> 00:20:55,199
good reasons not to just automatically
deploy all the indicators that you

225
00:20:55,200 --> 00:21:01,080
extract from Ali so that is legit of a
sample of neutrino that somebody has

226
00:21:01,080 --> 00:21:07,949
actually configured the the email spam
relay functionality in the config so I

227
00:21:07,950 --> 00:21:12,360
found that it they have yahoo account
are using me on your account to deliver

228
00:21:12,360 --> 00:21:18,570
you spam for this for this bot net the
neutrino by the way it's kind of like

229
00:21:18,570 --> 00:21:23,700
this scumbag starter kit it's all the
documentation is rushing it is it is

230
00:21:23,700 --> 00:21:28,680
total skinny land if you if you get into
looking into this particular family of

231
00:21:28,680 --> 00:21:31,950
malware it it's kind of hilarious some
of the stuff that ends up happening

232
00:21:31,950 --> 00:21:39,420
somewhere up here i think if we look
hard enough you'll see what I had a

233
00:21:39,420 --> 00:21:47,460
stable bit so there we go 192 168 71
that too so for those of you working on

234
00:21:47,460 --> 00:21:51,270
thread until feeds this is from the
special insider threat version of the

235
00:21:51,270 --> 00:21:56,370
Intel fee so this is why we don't
automatically deploy indicators this is

236
00:21:56,370 --> 00:21:57,689
the part of the problem i haven't think

237
00:21:57,690 --> 00:22:03,149
not how to solve . yet frankly perhaps
there's a you're blacklisting or

238
00:22:03,149 --> 00:22:06,570
protecting thing that you want to do and
you're willing to kind of take the risk

239
00:22:06,570 --> 00:22:11,399
of the grey space in between to say you
know here are the the top 500 or so

240
00:22:11,399 --> 00:22:14,100
domains that we know we just have to
wait list and we would never want to

241
00:22:14,100 --> 00:22:19,439
deploy an indicator against just because
it will just be too noisy and these are

242
00:22:19,440 --> 00:22:22,679
the IP ranges that we would never want
to . indicator against because again it

243
00:22:22,679 --> 00:22:27,090
will be too are noisy but short of that
I really don't have a better approach

244
00:22:27,090 --> 00:22:31,289
other than i would say this is exactly
the kind of stuff that when we pull it

245
00:22:31,289 --> 00:22:34,529
all together we want to send it right
over to team of Intel analysts who can

246
00:22:34,529 --> 00:22:40,769
one help us do bit out of out of their
indicator repo and to determine you

247
00:22:40,769 --> 00:22:46,350
which of these indicators are actually
valuable indicators and being able to

248
00:22:46,350 --> 00:22:50,189
pass that to them with the whole context
of things like an extracted network

249
00:22:50,190 --> 00:22:53,190
config is a huge help

250
00:22:54,360 --> 00:23:03,269
registration so the question is what if
i added the registration date those

251
00:23:03,269 --> 00:23:10,620
domains and use that as a as a piece of
data so you have all screaming okay so a

252
00:23:10,620 --> 00:23:17,820
funny story about well here let me let
me let me pause on your question and

253
00:23:17,820 --> 00:23:22,168
come back to it because I've got a slide
that will kind of talk two pieces of

254
00:23:22,169 --> 00:23:26,340
that right so because part of this is
absolutely about that one mask

255
00:23:26,340 --> 00:23:32,129
bad guys so so this is this is output of
it slightly different run of the script

256
00:23:32,130 --> 00:23:33,750
i literally just showed you

257
00:23:33,750 --> 00:23:39,090
um and so what you can see here is so I
i just pulled out that's the sha-256

258
00:23:39,090 --> 00:23:45,090
hash value of the file the compile time
from the PE header so if you're not if

259
00:23:45,090 --> 00:23:47,939
you're not familiar with windows PE
headers they capture a bunch of

260
00:23:47,940 --> 00:23:53,460
information like the import table
whether or not it's a USA x64 x86

261
00:23:53,460 --> 00:24:01,289
architecture instruction set and then
they also include a UTC or an epic time

262
00:24:01,289 --> 00:24:06,090
timestamp for the compile time of the
file itself and so what's interesting

263
00:24:06,090 --> 00:24:11,760
about that is that when I I started
collecting compile-time specifically

264
00:24:11,760 --> 00:24:16,590
because what I wanted to do is build a
campaign timeline to say hey this was

265
00:24:16,590 --> 00:24:23,610
built at this time and deploy now it is
trivial to upset that and rewrite that

266
00:24:23,610 --> 00:24:31,408
data but I'm completely failed to
predict how comment I'm stomping on PE

267
00:24:31,409 --> 00:24:36,240
compile-time is but that's not bad news

268
00:24:36,240 --> 00:24:39,779
turns out so in this case then let's
let's take a look

269
00:24:39,779 --> 00:24:49,860
so now here is the 1992-93 that was in
fact not compiled on da store . on one I

270
00:24:49,860 --> 00:24:54,330
don't even think the PE standard had
been ratified at this point in time so

271
00:24:54,330 --> 00:25:03,059
that's clearly a garden today and that
is is that CTU has others you see you

272
00:25:03,059 --> 00:25:11,639
love it oh but that is literally to the
second the city that is able there we

273
00:25:11,640 --> 00:25:18,390
just had to do and back to those and
what's really interesting is if you look

274
00:25:18,390 --> 00:25:22,950
at the compile time stamps on those two
others those are only a few minutes

275
00:25:22,950 --> 00:25:31,470
apart and i propose to you that this is
a pattern a behavioral pattern of a

276
00:25:31,470 --> 00:25:33,639
human being who

277
00:25:33,639 --> 00:25:41,738
does a couple of test runs with visual
studio and upload those two virustotal

278
00:25:41,739 --> 00:25:48,159
and then shortly thereafter uploads a
time-stamped version of their malware

279
00:25:48,159 --> 00:25:55,779
virus total for checking and then
deploys the timestop version because we

280
00:25:55,779 --> 00:25:59,079
can find the timestop version uploaded a
whole lot more times

281
00:25:59,079 --> 00:26:04,690
moreover what i suggest to you is that
because that pattern repeat I have the

282
00:26:04,690 --> 00:26:13,329
ability to connect that into and that
c22 a single operator does everybody

283
00:26:13,329 --> 00:26:20,678
wanna argue with me or disagree with me
on that so so and even if even if that's

284
00:26:20,679 --> 00:26:24,549
not correct that's a really interesting
coincidence of coincidences are great

285
00:26:24,549 --> 00:26:27,879
because coincidences happen a lot

286
00:26:27,879 --> 00:26:34,149
turns out with ppl automated so this is
a across that neutrino dataset I just

287
00:26:34,149 --> 00:26:40,599
showed you and so so I knew right like
to hang on the left . 1971 national one

288
00:26:40,599 --> 00:26:46,029
maybe a midnight in january $MONTH first
nineteen seventy which is also 0 za next

289
00:26:46,029 --> 00:26:49,690
time do so like that's like the laziest
time stopping you can do it just I just

290
00:26:49,690 --> 00:26:55,329
smoked like it's just go on now I can't
be the only person who's mad that

291
00:26:55,329 --> 00:27:00,789
windows will run something with this is
a compile-time times to him but you can

292
00:27:00,789 --> 00:27:07,269
see we've got these two from ancient
times down here on the on your far right

293
00:27:07,269 --> 00:27:19,179
but as we move down on what chances on
july july $YEAR 9 2015 10 9 and 31

294
00:27:19,179 --> 00:27:24,460
seconds 62 different Russian scumbags
compiled this

295
00:27:24,460 --> 00:27:29,350
same kid and deployed it what it's the
electorate so this is a statistical

296
00:27:29,350 --> 00:27:30,159
anomaly

297
00:27:30,160 --> 00:27:35,080
there's no way that that religion
timestamp right now I'm looking at a

298
00:27:35,080 --> 00:27:41,290
single atomic a sample of this malware
and I see that timestamp I probably

299
00:27:41,290 --> 00:27:42,430
going to skip right over

300
00:27:42,430 --> 00:27:49,300
july 2015 this is totally a highly
usable very much viable very active a

301
00:27:49,300 --> 00:27:56,710
piece of our but 62 times and i'm still
pulling samples with that time to them

302
00:27:56,710 --> 00:28:05,800
so it seems really really unlikely that
that that this is a coincidence so that

303
00:28:05,800 --> 00:28:11,440
it so what that means though is I think
i have 62 samples are roughly a third of

304
00:28:11,440 --> 00:28:15,820
the samples of neutrino that I've been
able to capture from virustotal all

305
00:28:15,820 --> 00:28:20,020
attributable to one person you and I
don't know what that is maybe it's like

306
00:28:20,020 --> 00:28:25,750
his kids birthday or you the day bought
is Porsche Cayenne or whatever whatever

307
00:28:25,750 --> 00:28:31,690
whatever Russian cyber gangsters drive
so um so I took this a step further

308
00:28:31,690 --> 00:28:36,580
though and I said there have to be yeah
it's cool to be able to do this but not

309
00:28:36,580 --> 00:28:39,939
everything not everything punches you in
the face quite as bad as this one does

310
00:28:39,940 --> 00:28:45,610
so what other one of the patterns can we
identify and so I started taking

311
00:28:45,610 --> 00:28:57,310
multiple so if you're familiar with the
graphs or force relationship or social

312
00:28:57,310 --> 00:29:02,139
social network analysis sna so this is
not technically a social network but the

313
00:29:02,140 --> 00:29:05,170
same algorithms totally apply right so
what we do is we create a couple of

314
00:29:05,170 --> 00:29:11,140
connection types in this in this case
from compile-time values and c 2 values

315
00:29:11,140 --> 00:29:16,780
and then look for all the connections
between so the blue dots are binaries

316
00:29:16,780 --> 00:29:22,450
and the lines making up all those pretty
little constellations are the different

317
00:29:22,450 --> 00:29:25,600
relationships so few lines are

318
00:29:25,600 --> 00:29:31,480
compile-time and the green lines rc2 and
so right off the bat you notice there

319
00:29:31,480 --> 00:29:36,580
are two really big clusters you don't
have to be you don't have to be Martin

320
00:29:36,580 --> 00:29:39,580
host need to be able to figure out those
are probably related

321
00:29:40,600 --> 00:29:45,039
um but there's some pretty stuff that
gets strong in here to like this

322
00:29:45,039 --> 00:29:49,870
constellation here is really kind of an
interesting one because you remember

323
00:29:49,870 --> 00:29:57,639
this green here that is an expanded you
of that and what we what we find falls

324
00:29:57,640 --> 00:30:02,200
out when we overlay this again is that
there's actually a third campaign is

325
00:30:02,200 --> 00:30:06,159
tied into this same pattern now I did
nothing to prep this data is literally

326
00:30:06,159 --> 00:30:10,720
just they have the same values show me
all the relationships with the values

327
00:30:10,720 --> 00:30:23,620
are connected and this fall's write-up
see data analytics so this is new pls

328
00:30:23,620 --> 00:30:28,209
things and I wanted to use two different
variants but I didn't want to do was

329
00:30:28,210 --> 00:30:33,549
just assume that this tactic could work
and then if I got lucky

330
00:30:33,549 --> 00:30:37,418
it would work and then I had never
applied to anything else ever again but

331
00:30:37,419 --> 00:30:43,990
and it turns out that this board through
over here as well so this one is

332
00:30:43,990 --> 00:30:48,250
compiled time and impact so I'm dropping
see to completely from the new POS

333
00:30:48,250 --> 00:30:55,840
things conversation and it's then we're
just learning important and import a

334
00:30:55,840 --> 00:30:59,620
shit right is a representation of the
the portable call the function calls

335
00:30:59,620 --> 00:31:06,850
that the builder loads when the the
binary first execute it will resume in

336
00:31:06,850 --> 00:31:15,549
this one that's down here a bottom left
we zoom in on that what you can see is a

337
00:31:15,549 --> 00:31:24,970
whole bunch of different compile times
in line for the outside but all of Ash's

338
00:31:24,970 --> 00:31:27,039
the same as always

339
00:31:27,039 --> 00:31:31,330
samples ladies open the closer

340
00:31:31,330 --> 00:31:35,169
you is Earth right

341
00:31:35,800 --> 00:31:41,440
oh thats same port hatch same
compile-time well again you so now

342
00:31:41,440 --> 00:31:46,330
you've got time stopping so this is
these are all this thing I i I'm going

343
00:31:46,330 --> 00:31:53,110
to my hypothesis is what I'm looking at
is that is a single builder for new POS

344
00:31:53,110 --> 00:31:59,620
things and the upper right quadrant is a
single actor likes that timestamp alot

345
00:31:59,620 --> 00:32:08,560
so neutrino again compile-time into
clusters you see right off the bat

346
00:32:08,560 --> 00:32:12,370
there's a couple that that are very very
tight and combined but there's some

347
00:32:12,370 --> 00:32:16,570
interesting stuff too if we kind of look
out to the periphery of this graph you

348
00:32:16,570 --> 00:32:19,780
know so i took that the wrong extracts
that i showed you i generated earlier I

349
00:32:19,780 --> 00:32:24,910
through these include with basic social
network analysis algorithm and and i'll

350
00:32:24,910 --> 00:32:31,870
put in these pretty measures and so when
you really drilling on these so this

351
00:32:31,870 --> 00:32:37,810
time you're looking kinda upper right on
the graph out along the edge you'll see

352
00:32:37,810 --> 00:32:43,270
there's four kind of group together and
this is them and we found the affinity

353
00:32:43,270 --> 00:32:50,050
across two different SI toos all using
the same time stopping but what's really

354
00:32:50,050 --> 00:32:57,730
cool is we picked up this outlier to we
i posit so he did he not be the actor he

355
00:32:57,730 --> 00:33:03,160
or she finds stop this to all zeroes
right some basic stuff but I posit that

356
00:33:03,160 --> 00:33:06,700
they screwed up and let one get away
that they hadn't cleaned up the PE

357
00:33:06,700 --> 00:33:10,420
header from to their own satisfaction
and in fact we are now able to date

358
00:33:10,420 --> 00:33:20,200
these two campaigns 2 jun 2015 alright
because the bad guys screw up so now I'm

359
00:33:20,200 --> 00:33:25,270
going to give it back to John's question
about that we ever looked at all of the

360
00:33:25,270 --> 00:33:32,050
who is data behind them so on if you if
you are in the if you are in ir

361
00:33:32,050 --> 00:33:33,330
detection

362
00:33:33,330 --> 00:33:39,510
a or threat Intel I gotta put a plug in
for the main tools or at least the

363
00:33:39,510 --> 00:33:45,270
capability in the domain tools provides
to do domain history because the ability

364
00:33:45,270 --> 00:33:48,870
to take a domain and see you all of the
eye peas and the original registering

365
00:33:48,870 --> 00:33:55,649
data because a lot of stuff gets kind of
picked up and swept away and cleaned up

366
00:33:55,650 --> 00:33:59,670
and and that's fantastic there's a
there's a whole group of you miscreant

367
00:33:59,670 --> 00:34:03,300
punchers out there who find bad stuff
and get it taken offline and that's

368
00:34:03,300 --> 00:34:07,530
fantastic because we're most of the
organizations out there they can use all

369
00:34:07,530 --> 00:34:12,540
the help they can get for but for those
of us that are interested in unmasking

370
00:34:12,540 --> 00:34:16,620
the bad guys it's really cool to have
the original registration data to and so

371
00:34:16,620 --> 00:34:24,060
to sew a long story short yet and it's
very interesting because just like they

372
00:34:24,060 --> 00:34:27,989
make these mistakes from time to time
they make registration mistake so lots

373
00:34:27,989 --> 00:34:32,580
of this stuff gets registered through
you go daddy or I forget the forget the

374
00:34:32,580 --> 00:34:38,489
one you or whatever the one is that
scene not thank you have the the one

375
00:34:38,489 --> 00:34:48,299
that's one this in South America anyway
or Central America panama panama and so

376
00:34:48,300 --> 00:34:52,440
you and all their stuff gets blind and
every once in awhile they scrub and

377
00:34:52,440 --> 00:34:56,730
they're real details come thru there's a
there's a neutrino actor i'm fairly

378
00:34:56,730 --> 00:35:02,730
certain i have his apartment address in
Vietnam I don't wanna I don't wanna put

379
00:35:02,730 --> 00:35:06,030
it up on slides and put it out on the
internet and case I'm wrong because i

380
00:35:06,030 --> 00:35:10,920
might be wrong but but it it but it
kinda looks like this if you look

381
00:35:10,920 --> 00:35:13,890
through the data right you have all this
stuff that's just over written an

382
00:35:13,890 --> 00:35:17,940
anonymized but they make but they do
this so much some of these folks iterate

383
00:35:17,940 --> 00:35:22,770
through clearly so often right that you
know they put out a campaign campaign

384
00:35:22,770 --> 00:35:29,370
gets burned put out a new campaign right
just redeploy the toolkit so so in every

385
00:35:29,370 --> 00:35:33,150
once in a while they're going to screw
and when you catch him screwing up you

386
00:35:33,150 --> 00:35:37,260
try that data back to all of the other
commonalities that you have about the

387
00:35:37,260 --> 00:35:40,050
rest of the campaign that they're
running and now all the sudden we

388
00:35:40,050 --> 00:35:41,560
started to build a picture

389
00:35:41,560 --> 00:35:51,279
who's actually behind the stuff in del
sol and then again just a few more more

390
00:35:51,280 --> 00:35:56,140
stupid human tricks this time in passion
sighs clusters and you see we keep

391
00:35:56,140 --> 00:36:02,560
basically the same shapes from here to
here so so the thing the thing you can

392
00:36:02,560 --> 00:36:08,049
to duck team on these those two are
competing versions of the builder kit

393
00:36:08,050 --> 00:36:11,590
for neutrino almost nothing the neutrino
that you see out there has been highly

394
00:36:11,590 --> 00:36:14,860
customized by anybody that can go their
way out of a wet paper bag

395
00:36:14,860 --> 00:36:19,540
most of these kids just run the Builder
script change them you literally have a

396
00:36:19,540 --> 00:36:26,080
nice little visual basic GUI then you
can set up the config run it and

397
00:36:26,080 --> 00:36:33,819
compiler and deployed so and then the
panel's all PHP and my single and I'm

398
00:36:33,820 --> 00:36:38,230
sure probably also not the best handling
inputs but I don't know anything about

399
00:36:38,230 --> 00:36:39,640
that

400
00:36:39,640 --> 00:36:44,589
so other TTP's as we look through this
right to so I pulled all the these

401
00:36:44,590 --> 00:36:50,560
domains and I ps4 for the c2 piece but
the thing about URL based to resist the

402
00:36:50,560 --> 00:36:53,170
domains and I pieces only part of it

403
00:36:53,170 --> 00:36:59,200
so this is a bit of a chart apologize
for that but you'll see I pull this out

404
00:36:59,200 --> 00:37:05,890
into you relax and through this up and
highlighted and stop working and right

405
00:37:05,890 --> 00:37:12,549
so the top you'll see those same three
domains with flash pots has / images

406
00:37:12,550 --> 00:37:19,870
past his last day has passed a pattern
that also blue and we want you to orange

407
00:37:19,870 --> 00:37:28,359
one where we I think we are forward
pressure is fine we will CI does anybody

408
00:37:28,360 --> 00:37:32,980
else see it though right so now we can
tie those three domains together does

409
00:37:32,980 --> 00:37:35,980
anybody see the four it's right there

410
00:37:38,290 --> 00:37:44,290
the matter doesn't repeat for that I
don't have lost / tasks that PAP occurs

411
00:37:44,290 --> 00:37:45,520
in all three and the other one

412
00:37:45,520 --> 00:37:49,870
so now just by looking at the naming
convention that this person seems to

413
00:37:49,870 --> 00:37:54,970
prefer because people are creatures of
habit we can't I all for these campaigns

414
00:37:54,970 --> 00:37:58,000
back to probably the same person sitting
in the same room in the same city

415
00:37:58,000 --> 00:38:08,110
possibly somewhere Vietnam so just for
fun this is fun i decided to take all of

416
00:38:08,110 --> 00:38:14,290
my days and throw it and to move and
after it stopped whining I got this

417
00:38:14,290 --> 00:38:22,810
picture and so you totally can read that
but but what this shows right to your

418
00:38:22,810 --> 00:38:28,870
your upper left and lower right so
upper-left new new POS things lower

419
00:38:28,870 --> 00:38:35,230
right is a neutrino I think anybody able
to guess that's right and in the middle

420
00:38:35,230 --> 00:38:38,740
1992 06 19 wait what

421
00:38:39,430 --> 00:38:47,710
so I was super excited for like five
minutes when i went holy crab I found

422
00:38:47,710 --> 00:38:51,460
somebody changing malware families just
by luck

423
00:38:51,460 --> 00:38:57,040
actually I didn't super excited and I do
show you this to show that it is

424
00:38:57,040 --> 00:39:01,509
possible then if that is what i had
snagged that it would be possible to

425
00:39:01,510 --> 00:39:06,580
draw some of those conclusions but
thanks to blog post the hexa cornrowed

426
00:39:06,580 --> 00:39:14,170
2014 my hopes were dashed it turns out
that 1992 06 19 compile-time date

427
00:39:14,170 --> 00:39:18,130
because i thought to myself i really
need to run this to ground it turns out

428
00:39:18,130 --> 00:39:24,850
that this is a delphi compiler bug but
initially i was like that sucks and it

429
00:39:24,850 --> 00:39:30,640
does mean that i probably can't tie a
single actor 222 variants of this thing

430
00:39:30,640 --> 00:39:35,440
but that is still a useful piece of
intelligence to understand that that

431
00:39:35,440 --> 00:39:40,330
isn't delphi compiler bug because what
it tells me is 1i have somebody using

432
00:39:40,330 --> 00:39:41,740
both variants of this malware

433
00:39:41,740 --> 00:39:46,540
or multiple actors potentially using the
same variant in multiple areas now we're

434
00:39:46,540 --> 00:39:52,840
using this bold version of Delphi to
compile code on windows

435
00:39:53,950 --> 00:39:58,060
additionally i did some research and
discovered that that's a thing that

436
00:39:58,060 --> 00:40:02,529
malware authors like to do because it
screws up some other stuff and makes it

437
00:40:02,530 --> 00:40:07,570
a little bit harder for any bars engines
to detect when it's built with delphi so

438
00:40:07,570 --> 00:40:14,080
now all of a sudden I have a compiled
time signature that if let's say I've

439
00:40:14,080 --> 00:40:20,500
got some you know profiles running in my
network scraping PE file data out and

440
00:40:20,500 --> 00:40:24,970
putting it into into a dataset I might
be able to find something that was

441
00:40:24,970 --> 00:40:28,509
compiled with delphi which is probably
not a lot of the commercial software

442
00:40:28,510 --> 00:40:32,320
that runs certainly not a lot of the new
software that my dad's and team are

443
00:40:32,320 --> 00:40:39,580
downloading on your network but might be
now so interesting data nonetheless

444
00:40:39,580 --> 00:40:43,330
though not as cool as I initially
thought so

445
00:40:44,440 --> 00:40:50,619
closing thoughts so one automating both
the the hunting of particular threat

446
00:40:50,619 --> 00:40:57,040
tools and analysis of the data they
contain is absolutely plausible using

447
00:40:57,040 --> 00:41:02,170
clustering static indicators to find
relationships can definitely reveal the

448
00:41:02,170 --> 00:41:09,010
presence of an individual because their
habits patterns and mistakes fallout in

449
00:41:09,010 --> 00:41:13,510
that data but and finally there are
seemingly endless possibilities for

450
00:41:13,510 --> 00:41:17,890
pivoting right i just picked kind of
four things but we could have gone on

451
00:41:17,890 --> 00:41:23,589
user agent string we could have gone on
you could have gone on different packer

452
00:41:23,590 --> 00:41:27,820
types there's all sorts of different
things that we couldn't pivoted on

453
00:41:28,610 --> 00:41:33,740
as we were looking at this data and
potentially found more interesting

454
00:41:33,740 --> 00:41:37,819
relationships between the actors right
so this is I feel like I'm just kind of

455
00:41:37,820 --> 00:41:43,550
scratch the surface on this approach to
working from binaries all the way back

456
00:41:43,550 --> 00:41:45,740
to actual bad guys

457
00:41:45,740 --> 00:41:53,569
so with that I want to take it a quick
second to you know so I like like anyone

458
00:41:53,570 --> 00:42:01,130
in the fields you blessed 2222 stand on
the shoulders of giants and leverage

459
00:42:01,130 --> 00:42:05,390
work those that have come before me so
they probably don't even know how much

460
00:42:05,390 --> 00:42:11,390
they help me with this but Alan Wyatt
and nick offerman all contributed

461
00:42:11,390 --> 00:42:16,100
significantly to to my work and I want
to make sure that they get credit for

462
00:42:16,100 --> 00:42:19,130
sale but bring some of this into
existence

463
00:42:19,130 --> 00:42:25,310
thank you you guys alright and I don't
know if I've got time for questions or

464
00:42:25,310 --> 00:42:28,670
if I just getting into the giveaways
they have a question

465
00:42:28,670 --> 00:42:55,460
ok any questions important as challenges
based on the Builder up to

466
00:42:55,970 --> 00:43:01,879
I totally agree with you . net using
identical import hash makes it not a

467
00:43:01,880 --> 00:43:07,550
great individual indicator so again
right indicator indicator selection when

468
00:43:07,550 --> 00:43:10,910
you're doing this kind of analysis is
sort of important if I were working with

469
00:43:10,910 --> 00:43:12,848
a family that was primarily done that

470
00:43:12,849 --> 00:43:16,599
drop that because it just wouldn't have
been a differentiator in this case there

471
00:43:16,599 --> 00:43:22,660
they were . net so so that it was had
some value with yeah it's done

472
00:43:22,660 --> 00:43:26,979
that's absolutely a piece of it is you I
go back to the earlier part of the

473
00:43:26,979 --> 00:43:30,249
presentation was talking about really
getting to know the malware you're

474
00:43:30,249 --> 00:43:34,118
hunting by doing some reverse
engineering and understanding that you

475
00:43:34,119 --> 00:43:37,029
do you definitely want to bring that
context and those learnings all the way

476
00:43:37,029 --> 00:43:54,339
with you into staging your analysis
right that giveaways alright okay okay

477
00:43:54,339 --> 00:44:03,430
um what language is the neutrino
documentation room that's correct

478
00:44:03,430 --> 00:44:21,848
rushing all right partner

479
00:44:21,849 --> 00:44:33,099
Oh gets the 1992 compiler bug what
compiler has a body shut up for my god

480
00:44:33,099 --> 00:44:43,630
okay okay all right thank you very much
breaking ball

