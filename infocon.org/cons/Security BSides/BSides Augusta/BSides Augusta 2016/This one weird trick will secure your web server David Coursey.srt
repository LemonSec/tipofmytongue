1
00:00:00,000 --> 00:00:07,319
you're good for video journal your mic
not working no problem hear anything

2
00:00:08,550 --> 00:00:17,070
testing ok was working fun for Chris
video mute another laptop

3
00:00:20,950 --> 00:00:24,220
fight there we go

4
00:00:24,220 --> 00:00:37,629
alright so great shop area saucers shall
thank you

5
00:00:39,580 --> 00:00:47,739
alright so our next day or so you have
David earlier today and something cool

6
00:00:47,739 --> 00:01:01,209
in this hat is not a raspberry pi into
that right so a coordinated off my hat

7
00:01:01,210 --> 00:01:17,170
and shine and now should is so great and
very excited guys will be your course

8
00:01:22,810 --> 00:01:26,020
well thanks everybody for coming out to
check this out

9
00:01:26,020 --> 00:01:31,990
I know everybody's excited to learn what
my one weird trick is but first a little

10
00:01:31,990 --> 00:01:37,479
bit about me I am a pen tester everyday
for a small company called envision my

11
00:01:37,479 --> 00:01:42,160
work specifically on applications and
application security and so I see a huge

12
00:01:42,160 --> 00:01:47,560
variety of applications every week the
range anywhere from you know modern

13
00:01:47,560 --> 00:01:52,479
JavaScript stacks all the way back to
like access written in two thousand and

14
00:01:52,479 --> 00:01:58,569
struts version 1 i'm a dad a little
programming I like rugby and whiskey and

15
00:01:58,569 --> 00:02:04,599
I shaved off my beard so I know my wife
made me do it

16
00:02:04,599 --> 00:02:10,959
so my disclaimer right now is that this
is more of an entry-level talk so if you

17
00:02:10,959 --> 00:02:15,130
do any pen testing yourself right now
you're going to be bored to death and i

18
00:02:15,130 --> 00:02:18,760
will be offended if you get up and leave
but if somebody slashed your tires it

19
00:02:18,760 --> 00:02:21,019
was chris sanders

20
00:02:21,020 --> 00:02:27,860
so there are no weird tricks involved in
this sadly but this is something that I

21
00:02:27,860 --> 00:02:31,580
want everybody to be able to take back
and have the the Monday morning value as

22
00:02:31,580 --> 00:02:36,740
they say so everyone can take back what
you learn in here and and improve your

23
00:02:36,740 --> 00:02:44,330
situation and trying you know just make
your life a little bit easier this one

24
00:02:44,330 --> 00:02:48,530
all of these vulnerabilities are are
extremely dangerous

25
00:02:49,400 --> 00:02:55,100
notnot the systems that they're on and
not two lives but to me personally my

26
00:02:55,100 --> 00:02:59,540
body because they are killing me slowly
every time I have to write a report on

27
00:02:59,540 --> 00:03:05,060
clickjacking and which is basically
every assessment i do if you do anytime

28
00:03:05,060 --> 00:03:08,240
on bug bounties or anything like that

29
00:03:08,240 --> 00:03:12,290
everybody submits the clickjacking
pounding because it's on every single

30
00:03:12,290 --> 00:03:17,000
application in the world and I don't
know why at this point when I was

31
00:03:17,000 --> 00:03:21,440
looking for demos for this i just did a
search for clickjacking demo in YouTube

32
00:03:21,440 --> 00:03:26,480
and the first result result i got was
from 2009 and I just have cried for a

33
00:03:26,480 --> 00:03:35,750
while so click jacking is a very simple
attack and it's a layers problem and the

34
00:03:35,750 --> 00:03:42,410
attacker is going to put a layer over
usable functionality that says I'm gonna

35
00:03:42,410 --> 00:03:49,100
change the way the functionality works
so this is all based around the iframe

36
00:03:49,100 --> 00:03:54,799
tag in HTML now hands up if you've
written an application in the last

37
00:03:54,800 --> 00:04:08,780
decade that used iframes I got one leave
now so not very common now I don't even

38
00:04:08,780 --> 00:04:12,770
understand why these protections are not
built into the web servers that we use

39
00:04:12,770 --> 00:04:16,820
because this is literally a one line
configuration for everything except for

40
00:04:16,820 --> 00:04:19,969
is where nothing is one line

41
00:04:19,970 --> 00:04:24,530
but it is just a couple of clicks and
then you can use it for you can protect

42
00:04:24,530 --> 00:04:27,679
yourself with it was in JavaScript to
which is actually recommended because

43
00:04:27,680 --> 00:04:31,880
depending on browsers and the
applications you doing you should have

44
00:04:31,880 --> 00:04:35,840
both the application of the web server
configuration and the JavaScript to

45
00:04:35,840 --> 00:04:41,989
protect yourself from this so I'm gonna
try and flip over here i made my

46
00:04:41,990 --> 00:04:53,600
sacrifice to the demo gods arm and i'm
gonna show you nothing apparently going

47
00:04:53,600 --> 00:04:56,060
i made this little application

48
00:04:56,060 --> 00:04:59,180
I've been practicing going a lot so i
made this little application just to

49
00:04:59,180 --> 00:05:09,260
test this and it functions on it does
what it's supposed to do so what a click

50
00:05:09,260 --> 00:05:17,659
jacking attack does is it utilizes HTML
just to capture this website in an

51
00:05:17,660 --> 00:05:20,660
iframe and

52
00:05:36,180 --> 00:05:44,310
I should've set this up already there's
my demo fail so you're gonna put this

53
00:05:44,310 --> 00:05:48,360
iframe with the application this is this
is literally code that is taking the

54
00:05:48,360 --> 00:05:51,810
application that i just showed you and
putting it into an iframe and putting a

55
00:05:51,810 --> 00:05:56,699
layer control by the attacker over the
real functionality and there's lots of

56
00:05:56,699 --> 00:05:59,009
different ways to do this and there's
lots of functionality you can do with

57
00:05:59,009 --> 00:06:08,100
this but for my my first giveaway for a
USB rubber ducky my question is who is

58
00:06:08,100 --> 00:06:15,599
the target of the attack in this
scenario the user of the website so

59
00:06:15,599 --> 00:06:20,969
every time I submit this on a report
management doesn't care because you're

60
00:06:20,970 --> 00:06:24,360
not hacking their servers right you're
covering up to you

61
00:06:25,650 --> 00:06:30,780
it's the users but I've always been told
that you know we need to kind of protect

62
00:06:30,780 --> 00:06:33,508
these people because they're the ones
that have all the data that were using

63
00:06:33,509 --> 00:06:39,389
any way a little bit better example of
how something like this would work

64
00:06:39,990 --> 00:06:45,990
this is the exact same code but with all
of the functionality turned off all of

65
00:06:45,990 --> 00:06:49,919
the red functionality turned off
literally the exact same code so you go

66
00:06:49,919 --> 00:06:56,430
to you know just put your credentials in
and it takes you somewhere that you're

67
00:06:56,430 --> 00:06:59,039
not expecting to go now to get this
pulled off you have to have some

68
00:06:59,039 --> 00:07:02,250
interaction with the user like a
phishing email but I think we can all

69
00:07:02,250 --> 00:07:06,750
agree at this point that fishing is
almost one hundred percent successful to

70
00:07:06,750 --> 00:07:07,979
the general population

71
00:07:07,979 --> 00:07:12,120
maybe not to you guys so we're still
seeing this on literally every

72
00:07:12,120 --> 00:07:15,510
engagement

73
00:07:15,510 --> 00:07:18,510
let's go back

74
00:07:20,100 --> 00:07:23,100
there we go

75
00:07:23,100 --> 00:07:29,910
so moving on to the next one and this is
another one that's killing you slowly

76
00:07:29,910 --> 00:07:31,890
inside his cookies

77
00:07:31,890 --> 00:07:35,070
hands up if you like pumpkin spice get
out

78
00:07:39,180 --> 00:07:44,310
yeah this is this is again literally
just a one line configuration in your

79
00:07:44,310 --> 00:07:47,529
web server

80
00:07:47,529 --> 00:07:50,070
yeah

81
00:07:50,070 --> 00:07:53,280
yeah

82
00:07:53,280 --> 00:08:00,000
die i'm not going to switch back and
forth

83
00:08:02,720 --> 00:08:07,010
yeah

84
00:08:12,820 --> 00:08:17,409
here we go so it's a one line
configuration your web server or in your

85
00:08:17,410 --> 00:08:20,530
application see if you have specific
cookies on specific portions your

86
00:08:20,530 --> 00:08:23,799
application that you want to protect you
can have lines in the controllers in the

87
00:08:23,800 --> 00:08:28,720
code to make it do whatever you want to
do now the demo I was going to show here

88
00:08:28,720 --> 00:08:31,300
with a cross-site scripting demo but I'm
not gonna flip back and forth anymore

89
00:08:31,300 --> 00:08:38,770
and what it does is a lot of times we're
looking for XSS demos that don't require

90
00:08:38,770 --> 00:08:42,848
a lot of strange quoting and stuff like
that and what people typically do is

91
00:08:42,849 --> 00:08:46,420
like alert one but i like to do alert
document.cookie because that brings up

92
00:08:46,420 --> 00:08:48,910
something that I can actually show to
management

93
00:08:48,910 --> 00:08:53,890
this is looking i'm capturing your your
jsessionid with my cross-site scripting

94
00:08:53,890 --> 00:09:00,040
attack because you guys didn't put one
tiny little bit of code in your

95
00:09:00,040 --> 00:09:00,849
application

96
00:09:00,850 --> 00:09:06,520
I mean HTTP only insecure is like 20
characters so this is literally every

97
00:09:06,520 --> 00:09:13,780
assessment i do the next big one is
cashing it's another HTTP header that

98
00:09:13,780 --> 00:09:17,439
you can control yourself and this is
actually really useful

99
00:09:18,010 --> 00:09:21,910
this is one of two in here that are
really useful its speed everything up in

100
00:09:21,910 --> 00:09:25,719
the web reduces download times reduces
network traffic and improve your overall

101
00:09:25,720 --> 00:09:26,920
experience

102
00:09:26,920 --> 00:09:32,140
so when developers here that naturally
they're just the cash all the things but

103
00:09:32,140 --> 00:09:37,090
what happens when you do that eventually
six months later on pastebin you realize

104
00:09:37,090 --> 00:09:41,290
that you literally did cash all the
things and someone figured that out so

105
00:09:41,290 --> 00:09:47,890
it's very simple to take advantage of
this as an attacker in large

106
00:09:47,890 --> 00:09:50,980
applications you know maybe shared
computers things like that because you

107
00:09:50,980 --> 00:09:56,500
can pull all of that out of any browser
cache that the normal users use

108
00:09:57,340 --> 00:10:01,300
so this one can be a little bit
confusing for developers because some of

109
00:10:01,300 --> 00:10:05,949
the terms don't really make sense like
one of the pragma I still don't know and

110
00:10:05,950 --> 00:10:10,030
i wrote this talk I'm the only thing I
could find out was a short for pragmatic

111
00:10:10,030 --> 00:10:16,449
which really means a lot for caption and
it's heavily browser dependent so you

112
00:10:16,450 --> 00:10:19,480
know organizations have to go back and
do some kind of analysis to say well

113
00:10:19,480 --> 00:10:23,020
what kind of browsers do we see hitting
our application are we internal only is

114
00:10:23,020 --> 00:10:27,310
internet-facing what do we what browsers
do we want our users to be hitting the

115
00:10:27,310 --> 00:10:32,920
application with so it requires a little
bit of forethought but it's pretty

116
00:10:32,920 --> 00:10:36,280
simple to implement you know it's just
one more header in your ad here in the

117
00:10:36,280 --> 00:10:45,490
next ISS is config so moving along
quickly the next one is a the HST s

118
00:10:45,490 --> 00:10:51,280
header this is HTTP strict Transport
Security and I always have problems

119
00:10:51,280 --> 00:10:56,740
saying that also known better as SL
stripping my had a really good image for

120
00:10:56,740 --> 00:11:02,170
this one but chris sanders maybe take it
out and these tools are widely available

121
00:11:02,170 --> 00:11:07,870
so SL screws on kali linux and burp
suite is the primary tool that I use it

122
00:11:07,870 --> 00:11:10,480
every single day for testing web
applications

123
00:11:10,480 --> 00:11:13,660
it's literally two check boxes and i can
tell your website

124
00:11:13,660 --> 00:11:18,579
I don't want you to be https anymore so
if I'm saying that starbucks and I fire

125
00:11:18,580 --> 00:11:22,330
up you know what I'm at
man-in-the-middle attacks i can a Cell

126
00:11:22,330 --> 00:11:28,360
strip everything that is getting sent
across that Wi-Fi network and get all of

127
00:11:28,360 --> 00:11:31,360
your super-secret sensitive data

128
00:11:33,180 --> 00:11:39,569
so for my second giveaway which is this
this has to be someone that's local to

129
00:11:39,570 --> 00:11:42,870
the augusta area or can come back here
on a regular basis

130
00:11:42,870 --> 00:11:46,050
this is a gift certificate for the
clubhouse

131
00:11:46,050 --> 00:11:48,630
they've got some pretty cool robot
except on outside if you haven't checked

132
00:11:48,630 --> 00:11:58,140
me out i recommend it and the question
is for the H sts header what is preload

133
00:11:58,140 --> 00:12:01,500
what does that do

134
00:12:01,500 --> 00:12:05,940
takers

135
00:12:08,220 --> 00:12:11,220
No

136
00:12:15,440 --> 00:12:20,270
oh I'll find a different one to give it
away

137
00:12:20,870 --> 00:12:26,630
so what preload does is this is a this
is basically a contract with the browser

138
00:12:26,630 --> 00:12:33,470
vendors so you can get your hsps
pre-loaded in the browser list so that

139
00:12:33,470 --> 00:12:39,350
your users will always have this header
because it's really important that the

140
00:12:39,350 --> 00:12:45,800
first response in that section comes
back with hsps header because if it's

141
00:12:45,800 --> 00:12:46,699
not there

142
00:12:46,700 --> 00:12:50,270
SL strip will strip it off and it
doesn't matter

143
00:12:50,270 --> 00:12:53,840
so the first response always has to have
that on their pre-loaded the contract

144
00:12:53,840 --> 00:13:00,290
with the browser vendors to go ahead and
get that on the list always the next one

145
00:13:00,290 --> 00:13:05,930
is 1i I just include kinda fun because a
lot of people don't take this seriously

146
00:13:07,010 --> 00:13:11,960
but as I was doing this talk I mean it
occurred to me that these are all things

147
00:13:11,960 --> 00:13:17,210
that everyone talks about being used for
troubleshooting every assessment i do

148
00:13:17,210 --> 00:13:22,430
has has these troubleshooting HTTP
headers and I thought who is this for

149
00:13:22,940 --> 00:13:27,350
have you ever been troubleshooting an
application and said what version of asp

150
00:13:27,350 --> 00:13:35,480
net asp.net we use I don't know check
the HTTP headers anyone hands up now so

151
00:13:35,480 --> 00:13:40,130
the only one that I can fathom that this
is for now granted there are cases where

152
00:13:40,130 --> 00:13:44,870
you're going to use really specific
custom headers in really large

153
00:13:44,870 --> 00:13:49,100
applications that really do
troubleshooting but it's not server and

154
00:13:49,100 --> 00:13:55,430
it's not powered by right so who is this
really for the people who like CDs okay

155
00:13:55,430 --> 00:14:00,079
so if you can find that version you can
go out and figure out exactly what type

156
00:14:00,080 --> 00:14:03,980
of software people are running I mean
that only aides attackers I literally

157
00:14:03,980 --> 00:14:06,980
could not come up with another reason
for those so your rhythm

158
00:14:09,620 --> 00:14:14,480
this next one is it's really fun it gets
kind of a kind of a bad reputation as

159
00:14:14,480 --> 00:14:20,839
being being difficult to work with
content security policy and it can be

160
00:14:20,839 --> 00:14:24,260
extremely difficult to work with if you
have a very large complex web two point

161
00:14:24,260 --> 00:14:29,390
oh fancy application that calls in
resources and left pads from everywhere

162
00:14:29,390 --> 00:14:32,900
but if you start building applications
from the beginning with this enabled

163
00:14:32,900 --> 00:14:36,050
it's probably the greatest thing ever
for protecting your application

164
00:14:36,740 --> 00:14:39,980
it's a white list which we all know is
good

165
00:14:39,980 --> 00:14:43,730
it ends up with these hairy
configurations like this which really

166
00:14:43,730 --> 00:14:49,370
clean the only comes down to a list of
what the resources and where it's

167
00:14:49,370 --> 00:14:56,180
allowed to come from and including CSP
headers is one of the best things you

168
00:14:56,180 --> 00:14:59,989
can do as far as protecting from
injection attacks on on a dynamic

169
00:14:59,990 --> 00:15:06,410
application and thankfully there's
websites you can go to and if you're

170
00:15:06,410 --> 00:15:10,550
just getting into it and just kind of
testing out your own applications put on

171
00:15:10,550 --> 00:15:14,449
the report women mode and it will tell
you everything that it would have

172
00:15:14,450 --> 00:15:19,430
blocked as you went through application
without actually blocking it so you're

173
00:15:19,430 --> 00:15:20,270
good to go

174
00:15:20,270 --> 00:15:27,650
so this brings me to this little guys
after I developed the title for this and

175
00:15:27,650 --> 00:15:30,920
I was building this i realized that i
was going to do was stand up here and

176
00:15:30,920 --> 00:15:34,849
complain about things and I wanted to be
able to give people something to take

177
00:15:34,850 --> 00:15:38,990
back with them to help them out so I was
looking for a product project to start

178
00:15:38,990 --> 00:15:44,120
learning going and so I developed a
little too like all Skinner because it

179
00:15:44,120 --> 00:15:46,130
analyzes your head

180
00:15:46,130 --> 00:15:49,580
I kind of regret that now

181
00:15:50,510 --> 00:15:56,540
so what this does is it's a little tool
and go so it's super fast on and its

182
00:15:56,540 --> 00:16:01,400
internal network friendly there are
websites already out there that will

183
00:16:01,400 --> 00:16:04,760
test your security headers and tell you
all your your letter grades and stuff

184
00:16:04,760 --> 00:16:09,380
like that but i can't take that into my
customers network and tell them that I'm

185
00:16:09,380 --> 00:16:14,000
just going to open up the firewall real
quick to do this test so it's completely

186
00:16:14,000 --> 00:16:18,530
private doesn't put you on like the top
10 worst of $MONTH 2015 list

187
00:16:20,019 --> 00:16:23,949
you can feed in a single host or you can
feed in just a list of URLs and it will

188
00:16:23,949 --> 00:16:27,699
scan and score everything for you and
you know find all the little things that

189
00:16:27,699 --> 00:16:34,118
may be missed in your configuration just
text reporting right now i'm working on

190
00:16:34,119 --> 00:16:39,639
HTML recording for the the managers and
the next thing I'm working on his way to

191
00:16:39,639 --> 00:16:42,970
randomize your user agent strings
because we bump into applications all

192
00:16:42,970 --> 00:16:50,049
the time like mobile apps that expect a
certain you a so it's it's super simple

193
00:16:50,049 --> 00:16:55,629
to use and i'll i am going to switch
back over the demo for this one maybe

194
00:17:02,200 --> 00:17:04,040
so

195
00:17:04,040 --> 00:17:06,290
yeah

196
00:17:06,290 --> 00:17:10,849
it's all tech space right now but the
beauty of going is that you can compile

197
00:17:10,849 --> 00:17:15,379
a cross-platform if you have a mess with
go yet you install the compiler and then

198
00:17:15,380 --> 00:17:19,220
you just say go get and pass it this URL
and pull down all the dependencies in

199
00:17:19,220 --> 00:17:20,270
this work

200
00:17:20,270 --> 00:17:27,650
so this is probably the best public
server that I've seen right now I mean

201
00:17:27,650 --> 00:17:31,490
and that's it that was how fast the test
takes so it goes through and the scoring

202
00:17:31,490 --> 00:17:36,050
is largely arbitrary at this point based
upon how annoyed I was at the specific

203
00:17:36,050 --> 00:17:39,980
header that I'm scoring but over time
it'll get more mature and well you know

204
00:17:39,980 --> 00:17:44,660
a little more functionality but so you
can pass in a list of of URLs and it

205
00:17:44,660 --> 00:17:48,170
will score them all for you and you can
run again and again and that's kind of

206
00:17:48,170 --> 00:17:52,040
where I got the the Skinner box idea was
because you're running it again try to

207
00:17:52,040 --> 00:17:58,100
get your score up and that's about it
will tell you all the information they

208
00:17:58,100 --> 00:18:02,270
get headers that you see up there and
you kind of have to decide because i

209
00:18:02,270 --> 00:18:08,510
can't make the decision on what your p3p
header is supposed to look like but

210
00:18:08,510 --> 00:18:13,520
hopefully you guys will go check it out
and take it back and find some value out

211
00:18:13,520 --> 00:18:16,520
of it

212
00:18:24,540 --> 00:18:28,020
and that is all i have for you today

213
00:18:36,840 --> 00:18:41,189
oh there's the URL to the to get repo
and my twitter handle so if you have any

214
00:18:41,190 --> 00:18:45,060
questions I think we're just about out
of time but I'm always around always

215
00:18:45,060 --> 00:18:46,919
willing to talk about this stuff

216
00:18:46,920 --> 00:19:01,980
I'm so hit me up and he did it off this

