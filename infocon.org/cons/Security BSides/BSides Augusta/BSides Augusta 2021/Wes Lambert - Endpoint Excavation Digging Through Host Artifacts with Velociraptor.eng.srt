1
00:00:10,870 --> 00:00:12,240
[Applause]

2
00:00:12,240 --> 00:00:13,679
all right everybody thanks for coming

3
00:00:13,679 --> 00:00:15,679
out to the presentation hopefully you

4
00:00:15,679 --> 00:00:18,400
had some good lunch enjoyed it and won't

5
00:00:18,400 --> 00:00:21,520
be too tired while i present to you

6
00:00:21,520 --> 00:00:23,279
today i'm going to be talking about how

7
00:00:23,279 --> 00:00:25,199
you can leverage velociraptor in your

8
00:00:25,199 --> 00:00:27,359
enterprise if you're

9
00:00:27,359 --> 00:00:29,039
if you're a traditional enterprise you

10
00:00:29,039 --> 00:00:31,279
know with an infosec department or

11
00:00:31,279 --> 00:00:33,440
maybe an mssp type

12
00:00:33,440 --> 00:00:35,440
organization or

13
00:00:35,440 --> 00:00:38,160
just kind of an incident responder

14
00:00:38,160 --> 00:00:40,640
just basically what velociraptor is and

15
00:00:40,640 --> 00:00:42,800
how you can apply it

16
00:00:42,800 --> 00:00:46,559
in your usage in your daily life

17
00:00:47,039 --> 00:00:49,440
now velociraptor is an open source

18
00:00:49,440 --> 00:00:51,120
completely free

19
00:00:51,120 --> 00:00:52,399
enterprise

20
00:00:52,399 --> 00:00:54,719
forensics and monitoring platform and

21
00:00:54,719 --> 00:00:56,079
also a little bit of response in there

22
00:00:56,079 --> 00:00:57,120
as well

23
00:00:57,120 --> 00:00:59,359
it's completely written in go it's

24
00:00:59,359 --> 00:01:00,719
compatible with

25
00:01:00,719 --> 00:01:03,600
linux windows and mac os so you can

26
00:01:03,600 --> 00:01:05,680
deploy it on pretty much you know any

27
00:01:05,680 --> 00:01:07,680
type of endpoint that you have in your

28
00:01:07,680 --> 00:01:08,880
environment

29
00:01:08,880 --> 00:01:11,680
it's very lightweight very scalable it's

30
00:01:11,680 --> 00:01:13,680
really flexible because of the query

31
00:01:13,680 --> 00:01:16,240
language behind it and it's super fast

32
00:01:16,240 --> 00:01:18,240
uh you know being written in go a lot of

33
00:01:18,240 --> 00:01:20,640
that you know lends itself to being a

34
00:01:20,640 --> 00:01:22,479
little bit more a little bit quicker

35
00:01:22,479 --> 00:01:25,119
from that perspective so

36
00:01:25,119 --> 00:01:26,880
continuing the architecture for

37
00:01:26,880 --> 00:01:28,560
velociraptor is going to be something

38
00:01:28,560 --> 00:01:30,159
that a lot of folks are probably

39
00:01:30,159 --> 00:01:31,600
familiar with

40
00:01:31,600 --> 00:01:33,759
the typical kind of client server

41
00:01:33,759 --> 00:01:36,000
architecture the client will check in

42
00:01:36,000 --> 00:01:37,200
with the server and see if there's

43
00:01:37,200 --> 00:01:39,119
anything that it needs to do any tasks

44
00:01:39,119 --> 00:01:41,680
that it needs to perform or any data

45
00:01:41,680 --> 00:01:43,520
that it needs to collect

46
00:01:43,520 --> 00:01:45,360
then we have this nice administrative

47
00:01:45,360 --> 00:01:47,040
interface that connects to the server

48
00:01:47,040 --> 00:01:48,399
and we can review all of that data

49
00:01:48,399 --> 00:01:49,759
that's collected

50
00:01:49,759 --> 00:01:51,280
from the server

51
00:01:51,280 --> 00:01:53,119
and then you know review what we've

52
00:01:53,119 --> 00:01:55,360
collected from the client and then go on

53
00:01:55,360 --> 00:01:57,840
from there

54
00:01:58,799 --> 00:02:00,399
now there are various deployment modes

55
00:02:00,399 --> 00:02:03,439
in which you can set up velociraptor one

56
00:02:03,439 --> 00:02:05,520
of them being the standalone option

57
00:02:05,520 --> 00:02:07,680
where if you're inside of an enterprise

58
00:02:07,680 --> 00:02:09,520
and you just want to stand up a single

59
00:02:09,520 --> 00:02:11,840
velociraptor server in your internal

60
00:02:11,840 --> 00:02:13,760
environment you can do that and then

61
00:02:13,760 --> 00:02:15,280
point clients to it within your

62
00:02:15,280 --> 00:02:16,640
environment

63
00:02:16,640 --> 00:02:19,040
you can also have multiple front ends to

64
00:02:19,040 --> 00:02:21,280
velociraptors so if there's something

65
00:02:21,280 --> 00:02:22,800
where you're having a high number of

66
00:02:22,800 --> 00:02:23,840
clients

67
00:02:23,840 --> 00:02:25,440
or maybe there's a different way in

68
00:02:25,440 --> 00:02:26,720
which they're going to have to access

69
00:02:26,720 --> 00:02:28,080
the manager maybe if there's some

70
00:02:28,080 --> 00:02:30,239
segmentation going on or whatnot

71
00:02:30,239 --> 00:02:31,519
there's some load balancing you can do

72
00:02:31,519 --> 00:02:33,760
there with multiple front ends

73
00:02:33,760 --> 00:02:36,080
and as far as having road warrior or you

74
00:02:36,080 --> 00:02:38,800
know a lot of us work from home today

75
00:02:38,800 --> 00:02:40,400
having endpoints that aren't inside of

76
00:02:40,400 --> 00:02:42,720
the office or inside the office network

77
00:02:42,720 --> 00:02:45,599
we can deploy velociraptor in the cloud

78
00:02:45,599 --> 00:02:48,000
so we can set an instance up in aws or

79
00:02:48,000 --> 00:02:50,400
gcp and then we can have clients connect

80
00:02:50,400 --> 00:02:52,720
back to that

81
00:02:52,720 --> 00:02:55,040
additionally you can build a triage

82
00:02:55,040 --> 00:02:57,120
package a single binary that you can

83
00:02:57,120 --> 00:02:59,040
deploy if you're going

84
00:02:59,040 --> 00:03:01,599
into an incident response scenario or if

85
00:03:01,599 --> 00:03:03,760
you have a host that is not able to

86
00:03:03,760 --> 00:03:05,599
reach that server for example maybe it's

87
00:03:05,599 --> 00:03:07,360
an air gap environment you can drop

88
00:03:07,360 --> 00:03:09,519
velociraptor on that host you can have

89
00:03:09,519 --> 00:03:11,200
it packaged with some other tools and

90
00:03:11,200 --> 00:03:12,480
other dependencies that you want to

91
00:03:12,480 --> 00:03:14,800
deploy on that host then you can go off

92
00:03:14,800 --> 00:03:16,800
and collect that data and perform those

93
00:03:16,800 --> 00:03:18,239
actions doing

94
00:03:18,239 --> 00:03:20,319
doing so in that fashion

95
00:03:20,319 --> 00:03:23,120
and then also we have a mode where uh

96
00:03:23,120 --> 00:03:25,680
it's very simple uh velociraptor gui

97
00:03:25,680 --> 00:03:27,360
command just a single liner where you

98
00:03:27,360 --> 00:03:30,159
can stand up a velociraptor server and a

99
00:03:30,159 --> 00:03:32,000
client on the same box and this is

100
00:03:32,000 --> 00:03:34,799
really useful for performing development

101
00:03:34,799 --> 00:03:36,400
of artifacts and we'll get more into

102
00:03:36,400 --> 00:03:38,239
artifacts in a little bit and really

103
00:03:38,239 --> 00:03:41,760
just a general evaluation

104
00:03:44,840 --> 00:03:48,959
mode and behind velociraptor is a core

105
00:03:48,959 --> 00:03:50,640
language i know some of you may be

106
00:03:50,640 --> 00:03:53,120
thinking oh another language but this

107
00:03:53,120 --> 00:03:55,040
language is very flexible and very

108
00:03:55,040 --> 00:03:56,239
powerful

109
00:03:56,239 --> 00:03:59,360
this language is used from you know use

110
00:03:59,360 --> 00:04:01,200
for everything in velociraptor basically

111
00:04:01,200 --> 00:04:03,760
for collecting data from endpoints

112
00:04:03,760 --> 00:04:06,000
performing monitoring and response and

113
00:04:06,000 --> 00:04:07,519
really just managing the server in

114
00:04:07,519 --> 00:04:09,280
general you'll see that as you go

115
00:04:09,280 --> 00:04:11,439
through velociraptor and you start

116
00:04:11,439 --> 00:04:13,680
collecting some of these artifacts this

117
00:04:13,680 --> 00:04:16,720
vehicle or vql is going to be used for

118
00:04:16,720 --> 00:04:18,798
those operations for example listing

119
00:04:18,798 --> 00:04:21,440
files or you know performing you know

120
00:04:21,440 --> 00:04:22,880
managing disk space and that sort of

121
00:04:22,880 --> 00:04:24,720
thing as well as collecting data from

122
00:04:24,720 --> 00:04:26,560
endpoints so you'll you'll see that as

123
00:04:26,560 --> 00:04:29,840
you go through it

124
00:04:31,280 --> 00:04:33,360
now what artifacts are i mentioned

125
00:04:33,360 --> 00:04:36,479
artifacts and these are essentially

126
00:04:36,479 --> 00:04:38,560
queries packaged into a neat little

127
00:04:38,560 --> 00:04:40,800
container that encapsulate that expert

128
00:04:40,800 --> 00:04:43,280
knowledge of d for practitioners

129
00:04:43,280 --> 00:04:45,759
for example if you have this individual

130
00:04:45,759 --> 00:04:47,280
that knows how to collect this data from

131
00:04:47,280 --> 00:04:49,440
the end point and knows how to do so

132
00:04:49,440 --> 00:04:50,800
from a set of queries inside a

133
00:04:50,800 --> 00:04:53,759
velociraptor these can be packaged into

134
00:04:53,759 --> 00:04:55,600
a reusable form

135
00:04:55,600 --> 00:04:57,840
right and we can use these artifacts so

136
00:04:57,840 --> 00:04:59,120
you know

137
00:04:59,120 --> 00:05:00,000
joe

138
00:05:00,000 --> 00:05:01,759
joe can go and use these artifacts he

139
00:05:01,759 --> 00:05:03,440
can go take this artifact that this

140
00:05:03,440 --> 00:05:04,800
other person wrote and go and

141
00:05:04,800 --> 00:05:06,560
immediately use it in his environment

142
00:05:06,560 --> 00:05:08,479
and collect that data he doesn't need to

143
00:05:08,479 --> 00:05:10,720
know anything about how it's retrieved

144
00:05:10,720 --> 00:05:12,240
he doesn't need to know anything like

145
00:05:12,240 --> 00:05:14,080
that he can just go run the artifact

146
00:05:14,080 --> 00:05:15,440
collect the data

147
00:05:15,440 --> 00:05:17,120
and go from there

148
00:05:17,120 --> 00:05:18,320
and you'll see there are different few

149
00:05:18,320 --> 00:05:20,000
different types of artifacts that i'll

150
00:05:20,000 --> 00:05:23,880
discuss in just a second

151
00:05:24,639 --> 00:05:26,960
but i want to kind of get to some of the

152
00:05:26,960 --> 00:05:28,479
most common things that we might do

153
00:05:28,479 --> 00:05:29,840
whenever we're performing incident

154
00:05:29,840 --> 00:05:32,880
response or investigating a host

155
00:05:32,880 --> 00:05:34,800
right we may want to search for certain

156
00:05:34,800 --> 00:05:37,199
files of interest or we may just want to

157
00:05:37,199 --> 00:05:39,440
see what files are on the box

158
00:05:39,440 --> 00:05:41,600
the core plugin that velociraptor uses

159
00:05:41,600 --> 00:05:44,320
for this is going to be the glob plugin

160
00:05:44,320 --> 00:05:46,160
it allows us to search by file name and

161
00:05:46,160 --> 00:05:47,759
search by file size or some other

162
00:05:47,759 --> 00:05:49,520
properties of files but it's a really

163
00:05:49,520 --> 00:05:50,479
basic

164
00:05:50,479 --> 00:05:52,560
construct and really

165
00:05:52,560 --> 00:05:54,000
kind of one of those core plugins that

166
00:05:54,000 --> 00:05:55,919
we use throughout the artifacts you'll

167
00:05:55,919 --> 00:05:58,080
see it used in conjunction with other

168
00:05:58,080 --> 00:06:00,319
plugins and other functions

169
00:06:00,319 --> 00:06:01,919
but this is one of the most popular

170
00:06:01,919 --> 00:06:05,120
plugins that you will see

171
00:06:05,600 --> 00:06:09,280
in addition to searching for content

172
00:06:09,280 --> 00:06:11,039
some of you might be familiar with yara

173
00:06:11,039 --> 00:06:14,319
rules anybody used the rules before

174
00:06:14,319 --> 00:06:15,840
all right awesome so

175
00:06:15,840 --> 00:06:18,000
typically when we're looking for a or

176
00:06:18,000 --> 00:06:20,000
trying to get a content match uh based

177
00:06:20,000 --> 00:06:22,160
on the content of a file or

178
00:06:22,160 --> 00:06:24,880
even a memory we can use yara

179
00:06:24,880 --> 00:06:27,039
right and the yara plugin allows us to

180
00:06:27,039 --> 00:06:28,960
do that we can search for urls and

181
00:06:28,960 --> 00:06:31,919
process memory maybe you know some files

182
00:06:31,919 --> 00:06:33,360
malware or something

183
00:06:33,360 --> 00:06:35,199
we can search for binaries right we can

184
00:06:35,199 --> 00:06:36,639
look for different malware signatures

185
00:06:36,639 --> 00:06:38,639
based on the content of those files

186
00:06:38,639 --> 00:06:40,960
and there's no need to parse these files

187
00:06:40,960 --> 00:06:43,919
unless they actually match the content

188
00:06:43,919 --> 00:06:45,840
if our yara rule if you know for

189
00:06:45,840 --> 00:06:48,560
searching and it doesn't match our rules

190
00:06:48,560 --> 00:06:50,880
and there's no need to you know parse

191
00:06:50,880 --> 00:06:53,680
all the data and go through that so

192
00:06:53,680 --> 00:06:55,120
it saves us from those expensive

193
00:06:55,120 --> 00:06:56,720
operations of going through and parsing

194
00:06:56,720 --> 00:06:58,160
every file and then trying to find out

195
00:06:58,160 --> 00:06:59,759
what we want

196
00:06:59,759 --> 00:07:03,319
so it's very efficient

197
00:07:05,280 --> 00:07:08,560
now for ntfs analysis there is a lot of

198
00:07:08,560 --> 00:07:10,479
good stuff that velociraptor has to

199
00:07:10,479 --> 00:07:11,599
offer

200
00:07:11,599 --> 00:07:14,319
for example mft you know one of the

201
00:07:14,319 --> 00:07:17,120
things that we might check on a box is

202
00:07:17,120 --> 00:07:19,360
mft and check you know when files might

203
00:07:19,360 --> 00:07:21,599
have dropped on disk uh see if a file

204
00:07:21,599 --> 00:07:23,759
dropped on disk i30

205
00:07:23,759 --> 00:07:26,400
right we want to carve that slack space

206
00:07:26,400 --> 00:07:28,080
in the index stream

207
00:07:28,080 --> 00:07:28,880
so

208
00:07:28,880 --> 00:07:30,400
i mean there's a lot of good stuff like

209
00:07:30,400 --> 00:07:33,280
that uh usn right again kind of tracking

210
00:07:33,280 --> 00:07:35,039
to see what files have

211
00:07:35,039 --> 00:07:37,280
been dropped to disk uh usm will

212
00:07:37,280 --> 00:07:39,039
typically rotate right so it's something

213
00:07:39,039 --> 00:07:40,639
that we would constantly be watching as

214
00:07:40,639 --> 00:07:42,880
opposed to something that's static

215
00:07:42,880 --> 00:07:45,919
and then vss right we can even search

216
00:07:45,919 --> 00:07:48,240
volume shadow service copies

217
00:07:48,240 --> 00:07:50,160
to see if that file was present or to

218
00:07:50,160 --> 00:07:51,680
see if something we're looking for is

219
00:07:51,680 --> 00:07:53,599
present so it's very powerful when we're

220
00:07:53,599 --> 00:07:55,599
performing that ntfs analysis with

221
00:07:55,599 --> 00:07:58,599
velociraptor

222
00:08:00,800 --> 00:08:03,440
drink of water

223
00:08:04,000 --> 00:08:06,319
all right

224
00:08:06,479 --> 00:08:08,800
continuing

225
00:08:08,800 --> 00:08:10,560
another thing we might look for is

226
00:08:10,560 --> 00:08:12,960
evidence of execution

227
00:08:12,960 --> 00:08:14,720
things like prefetch

228
00:08:14,720 --> 00:08:17,599
background activity monitor shim cache

229
00:08:17,599 --> 00:08:19,840
am cache and srum

230
00:08:19,840 --> 00:08:22,560
i know you know sram

231
00:08:22,560 --> 00:08:24,560
yes sir so

232
00:08:24,560 --> 00:08:26,720
so yeah i mean all of these things these

233
00:08:26,720 --> 00:08:28,000
are you know things that we would look

234
00:08:28,000 --> 00:08:30,720
for commonly and these are things that

235
00:08:30,720 --> 00:08:32,399
we can you know artifacts that we can

236
00:08:32,399 --> 00:08:34,320
leverage in velociraptor and i'll give

237
00:08:34,320 --> 00:08:37,760
some examples of those in just a minute

238
00:08:38,719 --> 00:08:41,679
another one is windows event logs

239
00:08:41,679 --> 00:08:43,599
anybody ship windows event logs look at

240
00:08:43,599 --> 00:08:45,040
windows event logs when performing

241
00:08:45,040 --> 00:08:47,839
incident response

242
00:08:48,800 --> 00:08:50,240
okay

243
00:08:50,240 --> 00:08:52,000
right so we can do parsing on the

244
00:08:52,000 --> 00:08:54,480
endpoint we can pre-filter before we

245
00:08:54,480 --> 00:08:56,000
forward logs or before we forward

246
00:08:56,000 --> 00:08:57,440
relevant events

247
00:08:57,440 --> 00:08:59,600
this prevents us from consuming a ton of

248
00:08:59,600 --> 00:09:00,800
data that

249
00:09:00,800 --> 00:09:02,399
ultimately breaks our log management

250
00:09:02,399 --> 00:09:04,240
solution and then

251
00:09:04,240 --> 00:09:06,000
causes problems for us instead of being

252
00:09:06,000 --> 00:09:07,360
able to get at the

253
00:09:07,360 --> 00:09:08,560
thing that we're looking for in the

254
00:09:08,560 --> 00:09:10,560
first place sometimes

255
00:09:10,560 --> 00:09:13,040
and then even etw event tracing for

256
00:09:13,040 --> 00:09:15,680
windows we can hook into the etw

257
00:09:15,680 --> 00:09:17,360
providers the things that are ultimately

258
00:09:17,360 --> 00:09:19,200
feeding these windows event logs

259
00:09:19,200 --> 00:09:20,720
we can hook into that and see if there's

260
00:09:20,720 --> 00:09:23,200
any foul play going on

261
00:09:23,200 --> 00:09:25,120
right maybe windows event logs aren't

262
00:09:25,120 --> 00:09:28,000
always as they seem

263
00:09:31,360 --> 00:09:33,200
another thing that we tend to look at is

264
00:09:33,200 --> 00:09:35,040
volatile state

265
00:09:35,040 --> 00:09:36,800
so wmi

266
00:09:36,800 --> 00:09:39,120
you know things like mutants

267
00:09:39,120 --> 00:09:40,640
mapped memory

268
00:09:40,640 --> 00:09:41,839
we can look at all this stuff with

269
00:09:41,839 --> 00:09:43,760
velociraptor there are default artifacts

270
00:09:43,760 --> 00:09:45,360
for us to be able to access in here and

271
00:09:45,360 --> 00:09:46,640
i can't i don't have the time to go

272
00:09:46,640 --> 00:09:48,000
through every single one but just trying

273
00:09:48,000 --> 00:09:51,839
to give you an idea of what's possible

274
00:09:54,959 --> 00:09:56,080
now

275
00:09:56,080 --> 00:09:57,279
there are different ways that we can

276
00:09:57,279 --> 00:09:59,200
collect this data and perform these

277
00:09:59,200 --> 00:10:00,240
actions

278
00:10:00,240 --> 00:10:01,760
one of them is going to be targeted

279
00:10:01,760 --> 00:10:03,200
collection

280
00:10:03,200 --> 00:10:05,120
so when we're performing targeted

281
00:10:05,120 --> 00:10:07,440
collection we're typically focusing on

282
00:10:07,440 --> 00:10:09,200
you know maybe a single host

283
00:10:09,200 --> 00:10:10,800
single client

284
00:10:10,800 --> 00:10:12,640
we can specify multiple artifacts that

285
00:10:12,640 --> 00:10:15,200
we want to collect when we do this

286
00:10:15,200 --> 00:10:17,760
and then if we want to we can select for

287
00:10:17,760 --> 00:10:19,279
a lot of these artifacts to have these

288
00:10:19,279 --> 00:10:21,519
files uploaded so we can perform further

289
00:10:21,519 --> 00:10:23,600
analysis later maybe we want to take

290
00:10:23,600 --> 00:10:25,600
those files and and you know do our own

291
00:10:25,600 --> 00:10:28,399
static analysis

292
00:10:30,880 --> 00:10:34,320
also hunting right this is a big one

293
00:10:34,320 --> 00:10:36,560
we can take these artifacts

294
00:10:36,560 --> 00:10:39,360
and we can apply them to a whole fleet

295
00:10:39,360 --> 00:10:41,360
of endpoints

296
00:10:41,360 --> 00:10:43,360
clients will enroll in a hunt when we

297
00:10:43,360 --> 00:10:45,440
initiate it as they come online so you

298
00:10:45,440 --> 00:10:47,600
may have some clients that are

299
00:10:47,600 --> 00:10:49,839
disconnected at first maybe their the

300
00:10:49,839 --> 00:10:51,120
laptop is

301
00:10:51,120 --> 00:10:53,120
offline maybe they're just you know not

302
00:10:53,120 --> 00:10:54,480
able to connect to the server at that

303
00:10:54,480 --> 00:10:55,920
time

304
00:10:55,920 --> 00:10:58,640
but whenever they do have a connectivity

305
00:10:58,640 --> 00:11:00,000
back to the server they will connect

306
00:11:00,000 --> 00:11:02,240
back and engage in that hunt they'll go

307
00:11:02,240 --> 00:11:03,839
start processing those artifacts that

308
00:11:03,839 --> 00:11:05,600
you told them to collect

309
00:11:05,600 --> 00:11:07,120
and then we can stack results from those

310
00:11:07,120 --> 00:11:08,880
hunts to identify outliers or

311
00:11:08,880 --> 00:11:12,920
commonalities in that data

312
00:11:17,360 --> 00:11:19,600
another concept that velociraptor

313
00:11:19,600 --> 00:11:22,000
leverages is notebooks

314
00:11:22,000 --> 00:11:23,360
if you're familiar with jupiter

315
00:11:23,360 --> 00:11:25,920
notebooks and being able to post-process

316
00:11:25,920 --> 00:11:27,120
data

317
00:11:27,120 --> 00:11:28,959
from that perspective it's very similar

318
00:11:28,959 --> 00:11:31,120
to that a notebook is a way where you

319
00:11:31,120 --> 00:11:32,560
can take your queries that you're

320
00:11:32,560 --> 00:11:33,600
developing

321
00:11:33,600 --> 00:11:35,680
try them out before you try to run the

322
00:11:35,680 --> 00:11:37,920
artifact against a client or run the

323
00:11:37,920 --> 00:11:39,760
artifact against a whole fleet of

324
00:11:39,760 --> 00:11:41,120
clients

325
00:11:41,120 --> 00:11:43,360
it's a great way to be able to test that

326
00:11:43,360 --> 00:11:46,000
stuff and to post process even you can

327
00:11:46,000 --> 00:11:47,920
take the results from a hunt

328
00:11:47,920 --> 00:11:49,839
and post process those results in a

329
00:11:49,839 --> 00:11:52,720
notebook right there in the hunt results

330
00:11:52,720 --> 00:11:54,320
it's very powerful way to be able to

331
00:11:54,320 --> 00:11:56,160
filter stuff out and again stack that

332
00:11:56,160 --> 00:11:58,480
data and see what's not quite so normal

333
00:11:58,480 --> 00:12:02,320
or see what's common across these hosts

334
00:12:04,320 --> 00:12:05,600
now i mentioned the different types of

335
00:12:05,600 --> 00:12:08,639
artifacts that we have with velociraptor

336
00:12:08,639 --> 00:12:10,320
from the point of detection there are

337
00:12:10,320 --> 00:12:12,320
client event artifacts

338
00:12:12,320 --> 00:12:13,839
and these are going to detect when

339
00:12:13,839 --> 00:12:16,639
something happens on a client

340
00:12:16,639 --> 00:12:18,800
right for example

341
00:12:18,800 --> 00:12:21,360
you know i saw this executable or i saw

342
00:12:21,360 --> 00:12:24,800
this file or i saw some user log in

343
00:12:24,800 --> 00:12:26,480
maybe sometime that they weren't

344
00:12:26,480 --> 00:12:28,160
supposed to or they should never log in

345
00:12:28,160 --> 00:12:30,240
it's a honey right it's honey creds or

346
00:12:30,240 --> 00:12:31,839
something like that

347
00:12:31,839 --> 00:12:33,279
it's a fake user

348
00:12:33,279 --> 00:12:35,600
so we can detect when things happen

349
00:12:35,600 --> 00:12:37,120
on the client and then feed those

350
00:12:37,120 --> 00:12:39,279
results back to the server

351
00:12:39,279 --> 00:12:41,279
and because of vql

352
00:12:41,279 --> 00:12:43,040
we can actually act on that data once it

353
00:12:43,040 --> 00:12:45,200
gets back to the server through a server

354
00:12:45,200 --> 00:12:46,959
monitoring artifact

355
00:12:46,959 --> 00:12:49,360
and this basically turns velociraptor

356
00:12:49,360 --> 00:12:51,040
into

357
00:12:51,040 --> 00:12:52,320
and really you should be thinking of it

358
00:12:52,320 --> 00:12:55,279
as an engine because of this vehicle

359
00:12:55,279 --> 00:12:56,800
we can act on those results that are

360
00:12:56,800 --> 00:12:58,399
sent back from the client so we got

361
00:12:58,399 --> 00:12:59,600
client hits

362
00:12:59,600 --> 00:13:01,680
we can then act on that and then if we

363
00:13:01,680 --> 00:13:04,000
want to send an alert to something like

364
00:13:04,000 --> 00:13:04,880
slack

365
00:13:04,880 --> 00:13:07,600
we can do that if we want to perform

366
00:13:07,600 --> 00:13:09,360
additional collections or additional

367
00:13:09,360 --> 00:13:12,160
hunts we can do that

368
00:13:12,160 --> 00:13:14,720
there's i mean the possibilities are

369
00:13:14,720 --> 00:13:17,360
essentially endless right so you can

370
00:13:17,360 --> 00:13:19,040
it's just a way for you to perform that

371
00:13:19,040 --> 00:13:22,880
detection and then respond to that

372
00:13:24,639 --> 00:13:26,399
another thing that we can do is perform

373
00:13:26,399 --> 00:13:29,040
remediation

374
00:13:29,040 --> 00:13:32,720
right here we have a couple examples of

375
00:13:32,720 --> 00:13:34,480
a quarantine right here so if we want to

376
00:13:34,480 --> 00:13:36,560
quarantine a host we can do that if we

377
00:13:36,560 --> 00:13:38,160
want to remove certain malicious

378
00:13:38,160 --> 00:13:40,720
scheduled tasks we can do that

379
00:13:40,720 --> 00:13:42,959
obviously in some organizations or in

380
00:13:42,959 --> 00:13:45,360
some instances you will not want to do

381
00:13:45,360 --> 00:13:47,040
certain things like this but

382
00:13:47,040 --> 00:13:49,199
the capability is there if you would

383
00:13:49,199 --> 00:13:51,199
like to do that and again

384
00:13:51,199 --> 00:13:53,279
you can apply somewhat of a workflow to

385
00:13:53,279 --> 00:13:54,720
have something that's automated from the

386
00:13:54,720 --> 00:13:57,760
vql perspective

387
00:13:59,839 --> 00:14:02,320
i mentioned that single binary that we

388
00:14:02,320 --> 00:14:04,000
can take velociraptor and we can package

389
00:14:04,000 --> 00:14:06,000
it up and deploy it as a single binary

390
00:14:06,000 --> 00:14:07,600
on a host and perform that targeted

391
00:14:07,600 --> 00:14:09,360
collection

392
00:14:09,360 --> 00:14:11,279
so we can use external tools if we want

393
00:14:11,279 --> 00:14:13,199
to deploy sysmon on a host we can

394
00:14:13,199 --> 00:14:15,360
package it with sysmon and have it you

395
00:14:15,360 --> 00:14:17,519
know all out to all of our endpoints

396
00:14:17,519 --> 00:14:19,600
we want to deploy bloodhound and you

397
00:14:19,600 --> 00:14:22,560
know test some attack paths we can do

398
00:14:22,560 --> 00:14:23,839
that

399
00:14:23,839 --> 00:14:27,360
if we want to deploy

400
00:14:28,000 --> 00:14:30,639
it with you know cape files targets or

401
00:14:30,639 --> 00:14:33,040
you know other binaries that help with

402
00:14:33,040 --> 00:14:35,440
a triage collection

403
00:14:35,440 --> 00:14:37,279
we can do that

404
00:14:37,279 --> 00:14:38,639
so we can take all of these external

405
00:14:38,639 --> 00:14:40,880
tools all these external dependencies

406
00:14:40,880 --> 00:14:42,639
and wrap them in there

407
00:14:42,639 --> 00:14:44,880
and then velociraptor will manage those

408
00:14:44,880 --> 00:14:46,399
and then we can go off and get that data

409
00:14:46,399 --> 00:14:48,240
back and you know it's it's much more

410
00:14:48,240 --> 00:14:49,440
quick you know it's much quicker than

411
00:14:49,440 --> 00:14:50,720
having to go off and use this individual

412
00:14:50,720 --> 00:14:53,199
tool go get go get the results at

413
00:14:53,199 --> 00:14:55,040
you have that all available to you then

414
00:14:55,040 --> 00:14:58,599
in one single package

415
00:14:59,120 --> 00:15:01,440
as far as automation there is even

416
00:15:01,440 --> 00:15:04,240
though vehicle can do a lot of the

417
00:15:04,240 --> 00:15:06,800
automation that we're referring to

418
00:15:06,800 --> 00:15:08,959
there is a grpc

419
00:15:08,959 --> 00:15:11,199
based api that's available

420
00:15:11,199 --> 00:15:14,160
so you can hook into velociraptor and

421
00:15:14,160 --> 00:15:16,160
you know start a workflow essentially

422
00:15:16,160 --> 00:15:18,240
start a hunt or a collection from that

423
00:15:18,240 --> 00:15:20,880
api you can also get results back you

424
00:15:20,880 --> 00:15:23,040
can do anything that you can do in a

425
00:15:23,040 --> 00:15:26,320
vehicle query so it's anonymous to just

426
00:15:26,320 --> 00:15:30,160
sitting there and doing it from the box

427
00:15:30,160 --> 00:15:32,399
that's another way that we can help to

428
00:15:32,399 --> 00:15:34,720
automate some of these actions or

429
00:15:34,720 --> 00:15:37,839
you know really gain some

430
00:15:38,839 --> 00:15:42,000
efficiencies mentioned automation um we

431
00:15:42,000 --> 00:15:43,839
can also send the results to

432
00:15:43,839 --> 00:15:46,079
elasticstack or splunk there's an

433
00:15:46,079 --> 00:15:48,480
artifact for each of those i do this

434
00:15:48,480 --> 00:15:50,240
with security onion

435
00:15:50,240 --> 00:15:51,600
you might have seen

436
00:15:51,600 --> 00:15:52,839
maybe a few

437
00:15:52,839 --> 00:15:55,600
attended a sock 21 then you might have

438
00:15:55,600 --> 00:15:58,240
seen where i was demonstrated sore lab

439
00:15:58,240 --> 00:16:00,240
and that essentially is going to hook in

440
00:16:00,240 --> 00:16:02,800
with n8n and velociraptor from security

441
00:16:02,800 --> 00:16:04,320
onion but there's

442
00:16:04,320 --> 00:16:05,680
a lot of different ways in which you can

443
00:16:05,680 --> 00:16:07,680
integrate this stuff so it's amazing to

444
00:16:07,680 --> 00:16:09,920
see exactly what we can do with it

445
00:16:09,920 --> 00:16:12,240
because the possibilities again

446
00:16:12,240 --> 00:16:15,120
are pretty much endless

447
00:16:16,880 --> 00:16:18,639
now if we want to start digging we can

448
00:16:18,639 --> 00:16:20,800
grab the latest binary from this url

449
00:16:20,800 --> 00:16:22,160
right here it should always have the

450
00:16:22,160 --> 00:16:23,519
latest one there

451
00:16:23,519 --> 00:16:25,040
and if you want to test it out you can

452
00:16:25,040 --> 00:16:27,360
run velociraptor gui and what that's

453
00:16:27,360 --> 00:16:29,040
going to do is it's going to set up that

454
00:16:29,040 --> 00:16:32,320
server it's going to set up a client

455
00:16:32,320 --> 00:16:33,680
and then from there you can go off and

456
00:16:33,680 --> 00:16:35,279
test your queries you can test those

457
00:16:35,279 --> 00:16:37,279
artifacts and play around with it get

458
00:16:37,279 --> 00:16:39,759
comfortable with it get your feet wet

459
00:16:39,759 --> 00:16:41,199
and then maybe consider standing up the

460
00:16:41,199 --> 00:16:44,000
deployment from there

461
00:16:46,399 --> 00:16:48,000
all right and so

462
00:16:48,000 --> 00:16:49,279
just going to walk through a couple

463
00:16:49,279 --> 00:16:52,160
things here um just talking through some

464
00:16:52,160 --> 00:16:54,000
ways in which we can identify if a file

465
00:16:54,000 --> 00:16:55,680
existed

466
00:16:55,680 --> 00:16:57,759
right we may find ourselves asking

467
00:16:57,759 --> 00:16:59,839
did this file ever exist on the system

468
00:16:59,839 --> 00:17:01,120
and i mentioned before there are some

469
00:17:01,120 --> 00:17:05,399
different ways that we can do that

470
00:17:05,839 --> 00:17:09,359
now the windows ntfs mft artifact can

471
00:17:09,359 --> 00:17:11,599
parse the mft and search for file names

472
00:17:11,599 --> 00:17:13,439
if you'd like to do that

473
00:17:13,439 --> 00:17:17,839
the yara ntfs artifact can utilize yara

474
00:17:17,839 --> 00:17:19,919
and we can search the mft essentially so

475
00:17:19,919 --> 00:17:22,079
it's much quicker than parsing the mft

476
00:17:22,079 --> 00:17:24,000
right we're searching with it we're

477
00:17:24,000 --> 00:17:25,599
searching with the aura first and then

478
00:17:25,599 --> 00:17:28,160
we're extracting what we want

479
00:17:28,160 --> 00:17:30,559
and then i mentioned earlier the usn can

480
00:17:30,559 --> 00:17:32,880
also be used the artifact can be used to

481
00:17:32,880 --> 00:17:34,559
parse the usn journal

482
00:17:34,559 --> 00:17:36,400
the usn journal is constantly tracking

483
00:17:36,400 --> 00:17:38,240
that you know constantly rotating and we

484
00:17:38,240 --> 00:17:40,640
can watch that and store

485
00:17:40,640 --> 00:17:43,039
those hashes essentially

486
00:17:43,039 --> 00:17:45,200
into a sqlite database and then we can

487
00:17:45,200 --> 00:17:46,799
search for those later that is

488
00:17:46,799 --> 00:17:48,640
maintained and we can then have a record

489
00:17:48,640 --> 00:17:50,559
of all the hashes that ever exist on

490
00:17:50,559 --> 00:17:53,120
this host

491
00:17:53,840 --> 00:17:56,320
and that's what this local hash is usn

492
00:17:56,320 --> 00:17:58,000
right here will do

493
00:17:58,000 --> 00:18:00,240
then i mentioned the i30 and the vss as

494
00:18:00,240 --> 00:18:02,400
well

495
00:18:02,400 --> 00:18:04,400
but aside from that i want to go into a

496
00:18:04,400 --> 00:18:06,160
little bit of a demo

497
00:18:06,160 --> 00:18:08,880
about scanning process memory

498
00:18:08,880 --> 00:18:11,280
i mentioned that we can do this with

499
00:18:11,280 --> 00:18:12,559
yara

500
00:18:12,559 --> 00:18:14,160
and that this is quite common right with

501
00:18:14,160 --> 00:18:16,320
fileless malware for them to reside in

502
00:18:16,320 --> 00:18:19,200
memory and not draw files to disk

503
00:18:19,200 --> 00:18:21,840
and this is a very trivial demonstration

504
00:18:21,840 --> 00:18:25,439
but just to get the point across

505
00:18:26,880 --> 00:18:28,080
i want to pop over here and the

506
00:18:28,080 --> 00:18:31,840
resolution will probably change a bit

507
00:18:31,840 --> 00:18:34,000
okay

508
00:18:34,000 --> 00:18:36,240
so what we have here this is just a

509
00:18:36,240 --> 00:18:38,799
windows 10 vm and i've run the

510
00:18:38,799 --> 00:18:41,360
velociraptor gui command on this box

511
00:18:41,360 --> 00:18:43,840
and now it's set up the server and

512
00:18:43,840 --> 00:18:45,760
clients i can see the server here and

513
00:18:45,760 --> 00:18:47,440
again i apologize for the resolution

514
00:18:47,440 --> 00:18:49,440
some things may be cut off

515
00:18:49,440 --> 00:18:51,520
but we can see the server here and what

516
00:18:51,520 --> 00:18:53,679
we'll have here is just some some status

517
00:18:53,679 --> 00:18:54,880
information

518
00:18:54,880 --> 00:18:56,640
and you know currently connected clients

519
00:18:56,640 --> 00:18:59,360
some disk space information

520
00:18:59,360 --> 00:19:01,280
and then we can also go over here to

521
00:19:01,280 --> 00:19:04,160
this little icon

522
00:19:04,559 --> 00:19:06,799
it's going to play nicely

523
00:19:06,799 --> 00:19:08,960
okay oh that's a hunt okay and this is

524
00:19:08,960 --> 00:19:10,799
where we would kick off a hunt if we

525
00:19:10,799 --> 00:19:13,280
wanted to do so we're not going to do so

526
00:19:13,280 --> 00:19:14,640
do this right at the moment but just

527
00:19:14,640 --> 00:19:17,440
wanted to kind of navigate towards that

528
00:19:17,440 --> 00:19:18,799
here's where we have all of the

529
00:19:18,799 --> 00:19:20,000
artifacts

530
00:19:20,000 --> 00:19:23,360
for example i mentioned the yara there's

531
00:19:23,360 --> 00:19:26,240
a detection yara glob artifact

532
00:19:26,240 --> 00:19:28,559
and it's going to essentially return a

533
00:19:28,559 --> 00:19:31,520
list of files right and then run yara

534
00:19:31,520 --> 00:19:34,160
over that list

535
00:19:34,160 --> 00:19:37,200
i mean as you can see we can scroll down

536
00:19:37,200 --> 00:19:38,799
you'll see a ton of different artifacts

537
00:19:38,799 --> 00:19:41,840
for linux mac os windows all that kind

538
00:19:41,840 --> 00:19:43,760
of stuff but i don't want to derail from

539
00:19:43,760 --> 00:19:46,080
this other discussion too much

540
00:19:46,080 --> 00:19:48,400
i'm going to go over to a notebook

541
00:19:48,400 --> 00:19:49,840
and we're going to work with this

542
00:19:49,840 --> 00:19:51,600
process memory real quick we're going to

543
00:19:51,600 --> 00:19:54,480
do this demonstration

544
00:19:54,960 --> 00:19:56,720
okay so i've got you can't really see

545
00:19:56,720 --> 00:19:58,400
anything right here there aren't any

546
00:19:58,400 --> 00:19:59,919
results right now so you won't see

547
00:19:59,919 --> 00:20:02,159
anything any data available

548
00:20:02,159 --> 00:20:03,440
but i'm going to click to edit the cell

549
00:20:03,440 --> 00:20:05,120
and try to drag this up so you can see

550
00:20:05,120 --> 00:20:07,840
it

551
00:20:08,320 --> 00:20:09,120
but

552
00:20:09,120 --> 00:20:10,880
essentially what we're going to do here

553
00:20:10,880 --> 00:20:13,440
is we're going to do a ps list

554
00:20:13,440 --> 00:20:15,120
and we're going to look for any

555
00:20:15,120 --> 00:20:18,320
processes with the name of notepad

556
00:20:18,320 --> 00:20:19,440
right and

557
00:20:19,440 --> 00:20:21,039
then

558
00:20:21,039 --> 00:20:22,880
this is just really to narrow it down

559
00:20:22,880 --> 00:20:24,559
this is probably not a realistic demo

560
00:20:24,559 --> 00:20:26,480
case because you wouldn't necessarily be

561
00:20:26,480 --> 00:20:28,400
looking for notepad obviously

562
00:20:28,400 --> 00:20:30,000
but uh to demonstrate the point we're

563
00:20:30,000 --> 00:20:31,760
going to look for any processes with the

564
00:20:31,760 --> 00:20:33,919
name of notepad or with notepad in the

565
00:20:33,919 --> 00:20:34,799
name

566
00:20:34,799 --> 00:20:36,240
and then we're going to apply the

567
00:20:36,240 --> 00:20:38,559
process accessor to those

568
00:20:38,559 --> 00:20:40,159
and we're going to apply a yara rule and

569
00:20:40,159 --> 00:20:42,480
this yara rule is typically is you can't

570
00:20:42,480 --> 00:20:44,400
see me a very simple rule you know just

571
00:20:44,400 --> 00:20:46,640
text

572
00:20:46,640 --> 00:20:48,240
so we're going to go over here and we're

573
00:20:48,240 --> 00:20:50,960
actually going to

574
00:20:51,679 --> 00:20:54,000
launch

575
00:20:56,880 --> 00:20:58,080
notepad

576
00:20:58,080 --> 00:20:59,760
we just type you can't see me in there

577
00:20:59,760 --> 00:21:01,360
we're not going to save it right so this

578
00:21:01,360 --> 00:21:02,960
is all about seeing if we can find

579
00:21:02,960 --> 00:21:04,799
something that's in memory

580
00:21:04,799 --> 00:21:07,919
right and while this may be benign

581
00:21:07,919 --> 00:21:10,240
there are lots of great use cases and

582
00:21:10,240 --> 00:21:11,679
reasons why you want to do this in the

583
00:21:11,679 --> 00:21:13,600
real world

584
00:21:13,600 --> 00:21:15,600
so we're going to go off and run our

585
00:21:15,600 --> 00:21:18,320
query here

586
00:21:20,640 --> 00:21:22,480
when we run that

587
00:21:22,480 --> 00:21:25,679
we're applying again that process

588
00:21:25,679 --> 00:21:28,480
accessor so it's taking the process

589
00:21:28,480 --> 00:21:30,960
memory

590
00:21:30,960 --> 00:21:33,360
it's treating it as if it were a file

591
00:21:33,360 --> 00:21:35,840
and then it's applying the yara rule to

592
00:21:35,840 --> 00:21:38,080
that

593
00:21:39,280 --> 00:21:40,640
and so we can see

594
00:21:40,640 --> 00:21:44,240
in this somewhat academic example

595
00:21:44,240 --> 00:21:46,799
we have

596
00:21:46,799 --> 00:21:49,919
the droid we were looking for right

597
00:21:49,919 --> 00:21:52,080
we can see you

598
00:21:52,080 --> 00:21:54,320
so we can do this with real malware

599
00:21:54,320 --> 00:21:55,919
right we don't have to do it with

600
00:21:55,919 --> 00:21:57,200
notepad

601
00:21:57,200 --> 00:21:59,039
but this is a capability that we have at

602
00:21:59,039 --> 00:22:00,799
our disposal

603
00:22:00,799 --> 00:22:02,159
just one way that we can leverage

604
00:22:02,159 --> 00:22:04,000
velociraptor for scanning that process

605
00:22:04,000 --> 00:22:06,240
memory

606
00:22:06,240 --> 00:22:09,280
now let's go with another example

607
00:22:09,280 --> 00:22:11,200
let's see what do we have here play from

608
00:22:11,200 --> 00:22:13,840
current slide

609
00:22:16,799 --> 00:22:19,120
all right and this is just an example

610
00:22:19,120 --> 00:22:21,760
of the query here and please do try this

611
00:22:21,760 --> 00:22:26,000
out at home if you get a chance to

612
00:22:26,000 --> 00:22:27,679
and we can see here that we were able to

613
00:22:27,679 --> 00:22:29,840
scan that process memory and if we were

614
00:22:29,840 --> 00:22:31,679
to use the windows detection process

615
00:22:31,679 --> 00:22:33,200
memory artifact that's already built

616
00:22:33,200 --> 00:22:35,600
into velociraptor we can do this from a

617
00:22:35,600 --> 00:22:37,520
detection perspective

618
00:22:37,520 --> 00:22:39,760
we can be looking in non-standard

619
00:22:39,760 --> 00:22:41,840
locations or in certain locations for

620
00:22:41,840 --> 00:22:44,559
these binaries or for these executions

621
00:22:44,559 --> 00:22:46,080
and

622
00:22:46,080 --> 00:22:49,280
identify that in memory

623
00:22:51,360 --> 00:22:53,360
now another thing

624
00:22:53,360 --> 00:22:56,080
that's pretty tricky and and a lot of

625
00:22:56,080 --> 00:22:58,240
love tools can't get this right windows

626
00:22:58,240 --> 00:23:00,799
can't get this right natively

627
00:23:00,799 --> 00:23:04,080
process spoofing parent process moving

628
00:23:04,080 --> 00:23:06,400
right a lot of platforms rely on process

629
00:23:06,400 --> 00:23:08,720
creation logs from things like sysmon

630
00:23:08,720 --> 00:23:10,320
and how they track those parent-child

631
00:23:10,320 --> 00:23:12,559
relationships

632
00:23:12,559 --> 00:23:14,400
now a lot of times i'm not going to say

633
00:23:14,400 --> 00:23:15,840
a lot of times but these relationships

634
00:23:15,840 --> 00:23:17,600
can be spoofed right

635
00:23:17,600 --> 00:23:19,120
this means that no matter what you're

636
00:23:19,120 --> 00:23:20,720
sending to your sim you're collecting

637
00:23:20,720 --> 00:23:22,000
all of the sysmon data and you're

638
00:23:22,000 --> 00:23:23,280
sending it to your sim or your log

639
00:23:23,280 --> 00:23:24,559
management platform and you're killing

640
00:23:24,559 --> 00:23:26,320
it with logs

641
00:23:26,320 --> 00:23:28,159
you're never going to see this

642
00:23:28,159 --> 00:23:30,559
because you're going to see what

643
00:23:30,559 --> 00:23:33,200
they want you to see

644
00:23:33,200 --> 00:23:35,039
right and this is all because of the

645
00:23:35,039 --> 00:23:38,240
windows create process api also

646
00:23:38,240 --> 00:23:40,080
it doesn't really help because it allows

647
00:23:40,080 --> 00:23:42,480
non-admin users to do this so as a

648
00:23:42,480 --> 00:23:44,320
non-admin user you can spoof the parent

649
00:23:44,320 --> 00:23:45,919
process

650
00:23:45,919 --> 00:23:47,840
of your process

651
00:23:47,840 --> 00:23:51,639
we're going to demonstrate that

652
00:23:53,360 --> 00:23:55,600
select my parent was written by dda

653
00:23:55,600 --> 00:23:57,200
stevens who's very active in the

654
00:23:57,200 --> 00:23:58,400
community

655
00:23:58,400 --> 00:24:00,640
and it allows you to spoof the parent

656
00:24:00,640 --> 00:24:01,600
process

657
00:24:01,600 --> 00:24:05,279
id or the parent process of a process

658
00:24:05,279 --> 00:24:06,960
right so we're going to try this out

659
00:24:06,960 --> 00:24:09,760
with onedrive.exe

660
00:24:09,760 --> 00:24:13,640
i'm going to flip over here

661
00:24:22,080 --> 00:24:24,640
that's not what i want

662
00:24:24,640 --> 00:24:26,400
okay so let me get over here into a

663
00:24:26,400 --> 00:24:27,840
blank terminal and make sure everybody

664
00:24:27,840 --> 00:24:29,600
can see that yep

665
00:24:29,600 --> 00:24:31,039
okay so

666
00:24:31,039 --> 00:24:34,879
what i'm going to do first is

667
00:24:37,039 --> 00:24:39,200
go to task manager

668
00:24:39,200 --> 00:24:41,840
i'm just going to get the pid process id

669
00:24:41,840 --> 00:24:43,760
of onedrive right here i've just opened

670
00:24:43,760 --> 00:24:46,480
task manager click to the details here

671
00:24:46,480 --> 00:24:49,200
i'm going to get 4760 is the one that i

672
00:24:49,200 --> 00:24:50,640
want to emulate

673
00:24:50,640 --> 00:24:53,039
so i want it to look like onedrive.exe

674
00:24:53,039 --> 00:24:56,720
spawn this process as the attacker

675
00:24:56,720 --> 00:25:01,080
so i'm going to use selectmyparent.exe

676
00:25:01,120 --> 00:25:02,559
and the

677
00:25:02,559 --> 00:25:04,960
process or the executable that i want to

678
00:25:04,960 --> 00:25:06,400
execute is notepad and i want to make it

679
00:25:06,400 --> 00:25:08,720
look like it was spawned by one

680
00:25:08,720 --> 00:25:10,720
so let me double check once before i

681
00:25:10,720 --> 00:25:13,279
screw up this demo

682
00:25:13,279 --> 00:25:16,279
47.60

683
00:25:18,960 --> 00:25:21,279
all right so that quickly

684
00:25:21,279 --> 00:25:23,520
uh we've launched notepad

685
00:25:23,520 --> 00:25:25,679
and its process id is

686
00:25:25,679 --> 00:25:28,480
5356.

687
00:25:28,480 --> 00:25:30,400
okay

688
00:25:30,400 --> 00:25:32,240
now let's go over

689
00:25:32,240 --> 00:25:33,520
to the

690
00:25:33,520 --> 00:25:35,360
sysmon logs here

691
00:25:35,360 --> 00:25:37,440
and again i know this might be painful

692
00:25:37,440 --> 00:25:40,159
so please bear with me

693
00:25:40,159 --> 00:25:42,400
trying to adjust this here

694
00:25:42,400 --> 00:25:46,000
and let me actually just find

695
00:25:46,880 --> 00:25:48,799
notepad

696
00:25:48,799 --> 00:25:51,039
okay

697
00:25:52,640 --> 00:25:56,440
so we're gonna move this up

698
00:25:58,640 --> 00:26:00,320
okay we'll just get the details make it

699
00:26:00,320 --> 00:26:02,480
a little easier

700
00:26:02,480 --> 00:26:03,679
okay

701
00:26:03,679 --> 00:26:05,919
so now

702
00:26:05,919 --> 00:26:08,000
if we go

703
00:26:08,000 --> 00:26:09,400
here it is

704
00:26:09,400 --> 00:26:11,840
notepad.exe sysmon reports this right

705
00:26:11,840 --> 00:26:13,919
the image we were working with notepad

706
00:26:13,919 --> 00:26:16,480
we were spawning notepad

707
00:26:16,480 --> 00:26:19,120
but if we look at the parent process id

708
00:26:19,120 --> 00:26:21,760
it's 4760

709
00:26:21,760 --> 00:26:23,919
and it shows the parent process as one

710
00:26:23,919 --> 00:26:25,840
drive

711
00:26:25,840 --> 00:26:29,279
which we know is not the case

712
00:26:30,240 --> 00:26:32,480
that's pretty scary

713
00:26:32,480 --> 00:26:34,799
pretty scary that even cismond that we

714
00:26:34,799 --> 00:26:37,039
all rely on

715
00:26:37,039 --> 00:26:39,039
to have you know that ground truth and

716
00:26:39,039 --> 00:26:40,720
to ship to our sims and our log

717
00:26:40,720 --> 00:26:42,720
management platforms

718
00:26:42,720 --> 00:26:45,279
even sysmon thinks the parent process is

719
00:26:45,279 --> 00:26:47,760
one drive

720
00:26:49,120 --> 00:26:53,840
so how do we get at the ground truth

721
00:27:05,200 --> 00:27:06,720
what we can do here

722
00:27:06,720 --> 00:27:08,880
is leverage etw

723
00:27:08,880 --> 00:27:11,360
i mentioned etw before event tracing for

724
00:27:11,360 --> 00:27:13,679
windows

725
00:27:13,679 --> 00:27:15,919
and we can use this query right here to

726
00:27:15,919 --> 00:27:18,240
actually watch etw and this is the

727
00:27:18,240 --> 00:27:20,799
specific grid right here

728
00:27:20,799 --> 00:27:22,240
that we're looking for

729
00:27:22,240 --> 00:27:24,559
and we can look for anything where

730
00:27:24,559 --> 00:27:26,720
notepad is in those event details

731
00:27:26,720 --> 00:27:28,320
and we can get an idea of where there's

732
00:27:28,320 --> 00:27:30,159
some outliers there

733
00:27:30,159 --> 00:27:32,240
so we're going to do that real quick

734
00:27:32,240 --> 00:27:35,840
pop back over here

735
00:27:40,320 --> 00:27:42,480
all right and so i'm just going to

736
00:27:42,480 --> 00:27:45,600
refresh this real quick

737
00:27:46,720 --> 00:27:48,480
okay so

738
00:27:48,480 --> 00:27:51,120
let me stop this

739
00:27:51,120 --> 00:27:52,880
i've got this notebook here this is for

740
00:27:52,880 --> 00:27:54,880
parent process id spoofing this is the

741
00:27:54,880 --> 00:27:56,960
query that i mentioned just a second ago

742
00:27:56,960 --> 00:27:58,799
and we're watching that etw provider and

743
00:27:58,799 --> 00:28:00,720
we're looking for anything with notepad

744
00:28:00,720 --> 00:28:02,880
in the event data so we're going to save

745
00:28:02,880 --> 00:28:04,480
that and we're going to execute select

746
00:28:04,480 --> 00:28:05,919
my parent again

747
00:28:05,919 --> 00:28:07,600
so we can drag this up a little bit or

748
00:28:07,600 --> 00:28:10,158
scroll down

749
00:28:12,240 --> 00:28:13,440
okay so we're just going to do it for a

750
00:28:13,440 --> 00:28:16,080
different process let me actually kill

751
00:28:16,080 --> 00:28:18,799
this other one so there's no confusion

752
00:28:18,799 --> 00:28:20,799
wait let me get this out of the way

753
00:28:20,799 --> 00:28:22,720
cover that

754
00:28:22,720 --> 00:28:24,559
okay

755
00:28:24,559 --> 00:28:27,360
wait that one's open

756
00:28:27,840 --> 00:28:32,720
i'm jumping all around somebody stop me

757
00:28:32,720 --> 00:28:34,799
all right

758
00:28:34,799 --> 00:28:36,960
yes clear that

759
00:28:36,960 --> 00:28:39,440
okay so i just want to demonstrate here

760
00:28:39,440 --> 00:28:41,360
how again with select my parent we're

761
00:28:41,360 --> 00:28:43,520
going to run it with notepad and

762
00:28:43,520 --> 00:28:46,320
assume the apparent process of onedrive

763
00:28:46,320 --> 00:28:48,640
right so sysmon knows no better

764
00:28:48,640 --> 00:28:50,039
and that process

765
00:28:50,039 --> 00:28:54,080
8208 or 8208

766
00:28:55,440 --> 00:28:58,399
looks like we just got a result here and

767
00:28:58,399 --> 00:29:01,279
look down here

768
00:29:01,279 --> 00:29:02,720
just the one

769
00:29:02,720 --> 00:29:05,919
no we will see a result here

770
00:29:05,919 --> 00:29:08,320
right okay so

771
00:29:08,320 --> 00:29:10,399
here is where we see

772
00:29:10,399 --> 00:29:11,279
the

773
00:29:11,279 --> 00:29:12,640
where is it sorry i'm jumping around

774
00:29:12,640 --> 00:29:13,600
again

775
00:29:13,600 --> 00:29:15,679
process id 8208

776
00:29:15,679 --> 00:29:18,559
right notepad.exe and the event data

777
00:29:18,559 --> 00:29:20,640
and then the onedrive parent process id

778
00:29:20,640 --> 00:29:22,880
of 4760. but if we actually look in the

779
00:29:22,880 --> 00:29:24,720
system data

780
00:29:24,720 --> 00:29:28,279
it's going to be 1696.

781
00:29:28,640 --> 00:29:30,640
so it's completely different

782
00:29:30,640 --> 00:29:33,679
right but how would we identify that

783
00:29:33,679 --> 00:29:36,159
uh you know we can identify

784
00:29:36,159 --> 00:29:40,000
the process that actually executed that

785
00:29:40,000 --> 00:29:40,720
in

786
00:29:40,720 --> 00:29:43,120
a different way we can use the

787
00:29:43,120 --> 00:29:46,000
there's an artifact the etw detect

788
00:29:46,000 --> 00:29:48,000
process spoofing artifact

789
00:29:48,000 --> 00:29:49,840
and we can run this as a client

790
00:29:49,840 --> 00:29:51,440
monitoring artifact and this is going to

791
00:29:51,440 --> 00:29:53,679
watch for inconsistencies

792
00:29:53,679 --> 00:29:55,360
between those parent process ids and

793
00:29:55,360 --> 00:29:56,960
what's reported in the event data and

794
00:29:56,960 --> 00:29:58,720
the system data

795
00:29:58,720 --> 00:30:00,960
okay so i've actually already got this

796
00:30:00,960 --> 00:30:02,000
running

797
00:30:02,000 --> 00:30:05,799
if i go over here

798
00:30:08,000 --> 00:30:11,440
and i click on the results here

799
00:30:12,399 --> 00:30:15,600
i'll scroll down a little bit

800
00:30:17,760 --> 00:30:20,159
and it does take some time that'll take

801
00:30:20,159 --> 00:30:23,120
a minute to buffer on the side until you

802
00:30:23,120 --> 00:30:24,880
get the result back

803
00:30:24,880 --> 00:30:27,440
but we can see here

804
00:30:27,440 --> 00:30:29,279
essentially this is a different result

805
00:30:29,279 --> 00:30:31,440
set but essentially what we will find is

806
00:30:31,440 --> 00:30:32,720
that

807
00:30:32,720 --> 00:30:34,960
the real parent and again i apologize

808
00:30:34,960 --> 00:30:36,720
because of the resolution the real

809
00:30:36,720 --> 00:30:38,399
parent right here

810
00:30:38,399 --> 00:30:42,000
and the suspicious process right here

811
00:30:42,320 --> 00:30:44,640
we have select my parent

812
00:30:44,640 --> 00:30:46,799
as the real parent the suspicious

813
00:30:46,799 --> 00:30:48,640
process of notepad

814
00:30:48,640 --> 00:30:51,600
and then if we see if i can scroll over

815
00:30:51,600 --> 00:30:54,480
take it down the bottom

816
00:30:56,640 --> 00:30:58,080
let me scroll

817
00:30:58,080 --> 00:31:00,480
come on

818
00:31:02,080 --> 00:31:04,640
yeah let me control minus maybe

819
00:31:04,640 --> 00:31:07,600
oh it's too small

820
00:31:08,399 --> 00:31:10,880
oh things down here okay

821
00:31:10,880 --> 00:31:14,880
all right so let me go in a little bit

822
00:31:15,519 --> 00:31:18,640
okay so anyway we have the real parent

823
00:31:18,640 --> 00:31:21,519
over here selectmyparent.exe

824
00:31:21,519 --> 00:31:23,679
then we have the purported parent right

825
00:31:23,679 --> 00:31:24,840
here

826
00:31:24,840 --> 00:31:26,720
onedrive.exe

827
00:31:26,720 --> 00:31:29,720
right

828
00:31:36,000 --> 00:31:38,240
so

829
00:31:38,240 --> 00:31:40,559
again

830
00:31:40,960 --> 00:31:43,440
we can see the actual parent process id

831
00:31:43,440 --> 00:31:45,039
and the system data

832
00:31:45,039 --> 00:31:46,399
and in the event data we're going to

833
00:31:46,399 --> 00:31:50,239
notice the spoofed parent process id

834
00:31:50,720 --> 00:31:52,080
and then we took that query and

835
00:31:52,080 --> 00:31:53,600
implemented that client monitoring

836
00:31:53,600 --> 00:31:55,279
artifact

837
00:31:55,279 --> 00:31:57,039
and now we can see the suspicious

838
00:31:57,039 --> 00:31:59,200
process of notepad.exe

839
00:31:59,200 --> 00:32:02,399
the real parent of selectmyparent.exe

840
00:32:02,399 --> 00:32:04,159
and then the claimed parent the one that

841
00:32:04,159 --> 00:32:06,799
was purported to be the parent process

842
00:32:06,799 --> 00:32:09,679
which is one drive

843
00:32:10,159 --> 00:32:12,399
now there's another thing that you could

844
00:32:12,399 --> 00:32:13,679
do i'm not going to necessarily

845
00:32:13,679 --> 00:32:15,279
demonstrate it today

846
00:32:15,279 --> 00:32:18,240
but uh there was adam chester from xp

847
00:32:18,240 --> 00:32:20,559
insect did have a blog that he wrote

848
00:32:20,559 --> 00:32:24,000
about uh subverting etw so there's some

849
00:32:24,000 --> 00:32:25,600
very good research about that and

850
00:32:25,600 --> 00:32:28,080
essentially the i believe it was the com

851
00:32:28,080 --> 00:32:31,200
plus atw enabled variable

852
00:32:31,200 --> 00:32:33,039
if you set that then you can actually

853
00:32:33,039 --> 00:32:36,480
even subvert etw zone hoax right or the

854
00:32:36,480 --> 00:32:38,399
process is hooks in atw it won't be

855
00:32:38,399 --> 00:32:40,080
registered

856
00:32:40,080 --> 00:32:41,840
so even in this case we might not even

857
00:32:41,840 --> 00:32:44,159
see it from the etw perspective

858
00:32:44,159 --> 00:32:45,679
i'm not going to go into all that but

859
00:32:45,679 --> 00:32:47,679
just something to consider that you know

860
00:32:47,679 --> 00:32:50,159
even with sysmon and even with etw

861
00:32:50,159 --> 00:32:52,480
you always have to be careful about

862
00:32:52,480 --> 00:32:54,159
you know how you're looking at things

863
00:32:54,159 --> 00:32:56,799
and you know and have those different

864
00:32:56,799 --> 00:32:59,440
layers and and be able to

865
00:32:59,440 --> 00:33:02,559
look at that in different ways

866
00:33:04,960 --> 00:33:08,559
now that is all i have at the moment

867
00:33:08,559 --> 00:33:10,960
if you would like to

868
00:33:10,960 --> 00:33:12,320
hear more about velociraptor you can

869
00:33:12,320 --> 00:33:14,399
follow velocidex on twitter i'm also up

870
00:33:14,399 --> 00:33:16,240
there and mike cohen

871
00:33:16,240 --> 00:33:18,720
uh there's a github repository for

872
00:33:18,720 --> 00:33:20,799
velociraptor right here also these

873
00:33:20,799 --> 00:33:23,200
articles and these docs over here

874
00:33:23,200 --> 00:33:26,399
medium.com velociraptor ir it's a really

875
00:33:26,399 --> 00:33:27,919
great resource

876
00:33:27,919 --> 00:33:30,480
to be able to test out velociraptor and

877
00:33:30,480 --> 00:33:32,720
apply some of these use cases similar to

878
00:33:32,720 --> 00:33:34,080
what i've discussed

879
00:33:34,080 --> 00:33:35,679
there's also a discord if you have

880
00:33:35,679 --> 00:33:38,880
issues or questions or feature requests

881
00:33:38,880 --> 00:33:40,880
mike and others are very active on there

882
00:33:40,880 --> 00:33:43,200
answering questions

883
00:33:43,200 --> 00:33:45,760
uh that is about all i have unless you

884
00:33:45,760 --> 00:33:47,279
guys have any questions and i would be

885
00:33:47,279 --> 00:33:49,360
glad to answer them unless would you

886
00:33:49,360 --> 00:33:51,200
rather me do the uh

887
00:33:51,200 --> 00:33:54,640
the other first which way

888
00:33:55,679 --> 00:33:56,559
yeah

889
00:33:56,559 --> 00:33:58,240
yep okay so

890
00:33:58,240 --> 00:34:00,320
again what is we're gonna do the

891
00:34:00,320 --> 00:34:03,440
giveaways first uh what

892
00:34:03,440 --> 00:34:05,760
is gonna be that container

893
00:34:05,760 --> 00:34:07,760
for the velociraptor query language

894
00:34:07,760 --> 00:34:09,280
there's various queries and that expert

895
00:34:09,280 --> 00:34:11,440
knowledge to be encapsulated in the

896
00:34:11,440 --> 00:34:13,599
first one yep

897
00:34:13,599 --> 00:34:14,879
yes

898
00:34:14,879 --> 00:34:16,320
all right and i didn't even tell you

899
00:34:16,320 --> 00:34:17,679
what you won because that's how awesome

900
00:34:17,679 --> 00:34:19,359
i am it's a mystery but you won this

901
00:34:19,359 --> 00:34:20,800
alpha networks

902
00:34:20,800 --> 00:34:24,159
usb wireless adapter

903
00:34:27,599 --> 00:34:28,420
yes sir

904
00:34:28,420 --> 00:34:31,579
[Applause]

905
00:34:33,440 --> 00:34:36,239
all right now

906
00:34:36,239 --> 00:34:37,918
let me do this right

907
00:34:37,918 --> 00:34:39,040
so

908
00:34:39,040 --> 00:34:42,000
linux basics for hackers

909
00:34:42,000 --> 00:34:44,320
up for grabs

910
00:34:44,320 --> 00:34:48,520
all right so

911
00:34:50,719 --> 00:34:51,918
i don't think a good question i can

912
00:34:51,918 --> 00:34:53,280
never think of these

913
00:34:53,280 --> 00:34:55,359
um

914
00:34:55,359 --> 00:35:01,000
what is one way that we can

915
00:35:03,359 --> 00:35:06,320
how do we test our queries or

916
00:35:06,320 --> 00:35:08,320
uh okay yep

917
00:35:08,320 --> 00:35:10,960
notebooks okay very good

918
00:35:10,960 --> 00:35:12,280
thanks sir

919
00:35:12,280 --> 00:35:16,480
[Applause]

920
00:35:16,480 --> 00:35:17,760
yes sir

921
00:35:17,760 --> 00:35:19,119
all right any other questions about the

922
00:35:19,119 --> 00:35:21,119
presentation

923
00:35:21,119 --> 00:35:24,119
yes

924
00:35:37,760 --> 00:35:39,839
right yeah so so in that instance you

925
00:35:39,839 --> 00:35:42,320
would see uh the system would report the

926
00:35:42,320 --> 00:35:45,359
same as the event data right so

927
00:35:45,359 --> 00:35:46,800
um yeah because we saw that that

928
00:35:46,800 --> 00:35:48,160
difference between like the actual

929
00:35:48,160 --> 00:35:50,640
system data and the event data um it's

930
00:35:50,640 --> 00:35:52,240
you know it's kind of where the the

931
00:35:52,240 --> 00:35:54,800
difference comes in and and where etw is

932
00:35:54,800 --> 00:35:56,240
seeing it and then

933
00:35:56,240 --> 00:35:57,599
sysmond is seeing it because it's

934
00:35:57,599 --> 00:36:01,359
subscribing to that event data right

935
00:36:01,599 --> 00:36:02,560
awesome

936
00:36:02,560 --> 00:36:04,640
anybody else have any questions

937
00:36:04,640 --> 00:36:08,920
concerns or snide remarks yep

938
00:36:23,119 --> 00:36:25,200
yeah so that um

939
00:36:25,200 --> 00:36:27,520
it will it's right so it it takes an

940
00:36:27,520 --> 00:36:29,440
argument right like the path right or a

941
00:36:29,440 --> 00:36:31,760
path so you can filter it down right and

942
00:36:31,760 --> 00:36:34,320
you can modify the artifact itself

943
00:36:34,320 --> 00:36:35,200
so

944
00:36:35,200 --> 00:36:37,599
it's essentially what you want to be

945
00:36:37,599 --> 00:36:39,280
looking for or watching for right so you

946
00:36:39,280 --> 00:36:40,720
may not you may watch everything you may

947
00:36:40,720 --> 00:36:42,320
not watch everything you may watch

948
00:36:42,320 --> 00:36:44,640
specific things right specific

949
00:36:44,640 --> 00:36:47,680
um named processes or or whatnot that

950
00:36:47,680 --> 00:36:50,640
are likely to have that happen right

951
00:36:50,640 --> 00:36:51,520
yep

952
00:36:51,520 --> 00:36:54,759
yes ma'am

953
00:36:58,560 --> 00:37:00,799
yep

954
00:37:06,160 --> 00:37:09,119
right so um

955
00:37:09,119 --> 00:37:11,280
a little bit of feedback but uh

956
00:37:11,280 --> 00:37:12,400
yeah so

957
00:37:12,400 --> 00:37:14,160
so essentially you know there's the kind

958
00:37:14,160 --> 00:37:16,800
of the sysmon level subversion right

959
00:37:16,800 --> 00:37:18,400
where you're it's actually it's only

960
00:37:18,400 --> 00:37:20,640
hooking into the event data from etw

961
00:37:20,640 --> 00:37:22,880
right and then there's the etw

962
00:37:22,880 --> 00:37:24,880
subversion where uh you're basically

963
00:37:24,880 --> 00:37:28,079
telling the process not to have its net

964
00:37:28,079 --> 00:37:29,599
assemblies inspected

965
00:37:29,599 --> 00:37:32,640
and there's no hooking into etw for that

966
00:37:32,640 --> 00:37:35,040
process from that perspective

967
00:37:35,040 --> 00:37:37,839
right

968
00:37:42,480 --> 00:37:44,800
yep

969
00:37:45,760 --> 00:37:48,720
so like what evidence of velociraptor's

970
00:37:48,720 --> 00:37:50,400
usage itself

971
00:37:50,400 --> 00:37:51,920
right so there there's certain you know

972
00:37:51,920 --> 00:37:54,480
like directory structure and everything

973
00:37:54,480 --> 00:37:56,240
um so you do have that and obviously you

974
00:37:56,240 --> 00:38:00,400
have the agent and server communication

975
00:38:00,400 --> 00:38:02,480
but

976
00:38:02,480 --> 00:38:04,079
but that's that's essentially you know

977
00:38:04,079 --> 00:38:06,240
it's kind of a trade-off right so um as

978
00:38:06,240 --> 00:38:08,079
far as the evidence itself

979
00:38:08,079 --> 00:38:10,320
um anything that you collect right is

980
00:38:10,320 --> 00:38:12,560
not necessarily stored on the the server

981
00:38:12,560 --> 00:38:14,000
the results of the query are on the

982
00:38:14,000 --> 00:38:16,160
endpoint the results of the queries are

983
00:38:16,160 --> 00:38:18,240
sometimes right some and then like

984
00:38:18,240 --> 00:38:20,320
they're also sent back to the server

985
00:38:20,320 --> 00:38:21,920
right so there's certain data that's

986
00:38:21,920 --> 00:38:23,280
kept i won't say all the queries are

987
00:38:23,280 --> 00:38:24,640
stored on the on the endpoint or

988
00:38:24,640 --> 00:38:25,920
anything like that or all the data that

989
00:38:25,920 --> 00:38:28,079
you collect is it just you know depends

990
00:38:28,079 --> 00:38:29,680
on if you're sending that data up to the

991
00:38:29,680 --> 00:38:31,040
server and then the results of the

992
00:38:31,040 --> 00:38:32,640
queries are sent up to the server

993
00:38:32,640 --> 00:38:34,480
essentially but there could be things

994
00:38:34,480 --> 00:38:36,240
like um you know if you're maintaining a

995
00:38:36,240 --> 00:38:38,240
client-side file hash database if you're

996
00:38:38,240 --> 00:38:39,920
watching things like usn journal and

997
00:38:39,920 --> 00:38:41,599
you're tracking all the hashes that are

998
00:38:41,599 --> 00:38:43,760
on there then that will reside on the

999
00:38:43,760 --> 00:38:45,359
client because that's how we keep track

1000
00:38:45,359 --> 00:38:47,359
of that but you know just it's those

1001
00:38:47,359 --> 00:38:49,680
particular cases

1002
00:38:49,680 --> 00:38:51,919
yep

1003
00:38:56,079 --> 00:38:57,760
yeah so actually that's something i've

1004
00:38:57,760 --> 00:39:00,000
actually started to look into is you

1005
00:39:00,000 --> 00:39:02,079
know tampering right so as far as with

1006
00:39:02,079 --> 00:39:05,040
velociraptor and kind of disablement so

1007
00:39:05,040 --> 00:39:07,040
um right so

1008
00:39:07,040 --> 00:39:08,640
i think with anything like any edr or

1009
00:39:08,640 --> 00:39:10,560
any any kind of platform like that um

1010
00:39:10,560 --> 00:39:12,240
it's important to have some some ways to

1011
00:39:12,240 --> 00:39:14,560
identify that so

1012
00:39:14,560 --> 00:39:16,079
i mean you can absolutely write an

1013
00:39:16,079 --> 00:39:18,160
artifact right now for it right the

1014
00:39:18,160 --> 00:39:20,000
power of equal is that you can do

1015
00:39:20,000 --> 00:39:23,839
anything you want with it right now so

1016
00:39:24,560 --> 00:39:28,240
anybody else have any questions

1017
00:39:28,240 --> 00:39:30,560
yes

1018
00:39:35,119 --> 00:39:37,280
i can't speak to that i can say that i

1019
00:39:37,280 --> 00:39:39,920
know mike is very adamant about you know

1020
00:39:39,920 --> 00:39:41,920
open source and has developed you know

1021
00:39:41,920 --> 00:39:43,440
quite a few and worked on a few open

1022
00:39:43,440 --> 00:39:45,040
source projects so

1023
00:39:45,040 --> 00:39:47,440
um i don't foresee it going to any

1024
00:39:47,440 --> 00:39:49,119
licensed version but you know obviously

1025
00:39:49,119 --> 00:39:51,440
i have no control over that but um but

1026
00:39:51,440 --> 00:39:53,200
yeah i foresee a bright future as far as

1027
00:39:53,200 --> 00:39:56,560
maintaining an os or an open source

1028
00:39:56,560 --> 00:39:58,960
you know long term

1029
00:39:58,960 --> 00:40:01,440
initiative

1030
00:40:01,440 --> 00:40:04,079
yeah oh okay awesome

1031
00:40:04,079 --> 00:40:07,079
yeah

1032
00:40:15,760 --> 00:40:18,000
right

1033
00:40:21,359 --> 00:40:23,359
right right i've heard maybe like inside

1034
00:40:23,359 --> 00:40:26,720
rdr yep so okay

1035
00:40:26,720 --> 00:40:29,359
all right well cool

1036
00:40:29,359 --> 00:40:33,119
anyone else have any questions

1037
00:40:34,960 --> 00:40:38,839
all right well thank you guys

