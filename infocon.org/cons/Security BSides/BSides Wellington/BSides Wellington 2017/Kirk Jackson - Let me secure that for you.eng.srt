1
00:00:04,180 --> 00:00:09,430
good afternoon my name is Kirk welcome

2
00:00:06,970 --> 00:00:12,879
to my talk thanks for coming

3
00:00:09,430 --> 00:00:14,709
so this talk it's called let me secure

4
00:00:12,879 --> 00:00:20,619
that for you because it has a really

5
00:00:14,709 --> 00:00:22,509
good acronym I thought and how much do I

6
00:00:20,619 --> 00:00:24,939
want to say now not much and what I want

7
00:00:22,509 --> 00:00:26,919
to just point out and this is because I

8
00:00:24,939 --> 00:00:28,750
did a dry run at work and they like

9
00:00:26,919 --> 00:00:30,429
people might think this is actually what

10
00:00:28,750 --> 00:00:31,539
we do at red shield so I just want to

11
00:00:30,429 --> 00:00:32,140
point out this is not what we do at

12
00:00:31,539 --> 00:00:35,140
Ridgefield

13
00:00:32,140 --> 00:00:37,570
we don't use mod security or nodejs

14
00:00:35,140 --> 00:00:40,740
although we do provide a service that

15
00:00:37,570 --> 00:00:43,390
provides like website shielding and

16
00:00:40,740 --> 00:00:45,100
virtual patching with a whole bunch of

17
00:00:43,390 --> 00:00:47,950
other services around the outside of it

18
00:00:45,100 --> 00:00:48,970
so yeah let's talk it's not an ad for

19
00:00:47,950 --> 00:00:51,190
what I do at work

20
00:00:48,970 --> 00:00:53,800
and you shouldn't go away from this talk

21
00:00:51,190 --> 00:00:56,110
thinking man those guys run red shield

22
00:00:53,800 --> 00:00:59,709
on like a couple of docker instances

23
00:00:56,110 --> 00:01:01,840
that's not how we do it so today we're

24
00:00:59,710 --> 00:01:04,150
going to talk about how does virtual

25
00:01:01,840 --> 00:01:08,920
patching work and can you do it DIY

26
00:01:04,150 --> 00:01:12,520
style but first off let's start talking

27
00:01:08,920 --> 00:01:15,280
about building an app so you've got this

28
00:01:12,520 --> 00:01:17,110
great idea I don't know you want to

29
00:01:15,280 --> 00:01:20,409
river wash revolutionize the world of

30
00:01:17,110 --> 00:01:24,100
to-do lists or I don't know have a

31
00:01:20,409 --> 00:01:25,780
flappy app flying game thing or

32
00:01:24,100 --> 00:01:27,940
something like that and you're like I

33
00:01:25,780 --> 00:01:29,110
need to spin up a dev team to build this

34
00:01:27,940 --> 00:01:31,240
and I'm going to have a software

35
00:01:29,110 --> 00:01:34,450
development lifecycle and we're going to

36
00:01:31,240 --> 00:01:35,649
like code the heck out of this and then

37
00:01:34,450 --> 00:01:38,140
we're going to chuck it on a web server

38
00:01:35,650 --> 00:01:40,900
and you stick the app on the web server

39
00:01:38,140 --> 00:01:42,729
and you're like man my friend said

40
00:01:40,900 --> 00:01:44,350
something about firewalls so I guess I

41
00:01:42,729 --> 00:01:46,150
probably need to like have a production

42
00:01:44,350 --> 00:01:48,940
environment and put firewalls in it

43
00:01:46,150 --> 00:01:52,390
because otherwise bad guys might get in

44
00:01:48,940 --> 00:01:55,509
and then you know like oh we need to

45
00:01:52,390 --> 00:01:57,549
take payment for it so lemon PCI so we

46
00:01:55,510 --> 00:02:00,130
need to install AV on all these servers

47
00:01:57,549 --> 00:02:01,780
that no human ever goes on anyway and we

48
00:02:00,130 --> 00:02:05,110
need to have a web application firewall

49
00:02:01,780 --> 00:02:07,780
and a proxy for outbound egress and

50
00:02:05,110 --> 00:02:10,110
you're kind of like okay now we're

51
00:02:07,780 --> 00:02:12,909
secure right we've got all this stuff

52
00:02:10,110 --> 00:02:14,739
but then like well we need to have an

53
00:02:12,909 --> 00:02:16,599
intrusion detection system to find out

54
00:02:14,739 --> 00:02:17,410
someone hacks our environment we need to

55
00:02:16,599 --> 00:02:19,440
down

56
00:02:17,410 --> 00:02:22,270
loss protection we need to manage

57
00:02:19,440 --> 00:02:24,370
identity of our people admin in these

58
00:02:22,270 --> 00:02:25,930
servers and we need to make sure all our

59
00:02:24,370 --> 00:02:28,000
servers are the same so we need to run

60
00:02:25,930 --> 00:02:30,010
like an agent on all the servers make

61
00:02:28,000 --> 00:02:31,690
sure they're up to date and then we need

62
00:02:30,010 --> 00:02:34,570
to read those logs so we better pump

63
00:02:31,690 --> 00:02:37,180
them out to a seem to be ignored and

64
00:02:34,570 --> 00:02:40,209
then all right now we're secure because

65
00:02:37,180 --> 00:02:42,220
we've got this pipeline like the the

66
00:02:40,210 --> 00:02:44,380
stuff we're putting code in there and

67
00:02:42,220 --> 00:02:46,240
it's in a secure hosting environment but

68
00:02:44,380 --> 00:02:48,370
what if the codes not actually secure to

69
00:02:46,240 --> 00:02:50,650
start with so maybe we need to go back

70
00:02:48,370 --> 00:02:53,290
to our sdlc and do some training for the

71
00:02:50,650 --> 00:02:55,960
developers and you know have security

72
00:02:53,290 --> 00:02:58,870
reviews of designs and you know part of

73
00:02:55,960 --> 00:03:01,840
the BA phases of our apps do some threat

74
00:02:58,870 --> 00:03:04,000
modeling maybe run some static analysis

75
00:03:01,840 --> 00:03:07,030
of our code or some dynamic analysis of

76
00:03:04,000 --> 00:03:10,330
our code or maybe some eye analysis of

77
00:03:07,030 --> 00:03:12,550
our code and then like get security

78
00:03:10,330 --> 00:03:14,710
testing done maybe part of the process

79
00:03:12,550 --> 00:03:16,870
make sure that we're not introducing

80
00:03:14,710 --> 00:03:19,360
bugs into our environment so you know

81
00:03:16,870 --> 00:03:21,370
good good quality software n it's a

82
00:03:19,360 --> 00:03:24,160
hardened environment we're reading the

83
00:03:21,370 --> 00:03:28,270
logs we're secure how to do it as a

84
00:03:24,160 --> 00:03:29,770
secure Stewart in the world o rest I

85
00:03:28,270 --> 00:03:33,940
forgot to mention that because I don't

86
00:03:29,770 --> 00:03:36,220
really know what it is but then you like

87
00:03:33,940 --> 00:03:38,890
well we need to have processes to make

88
00:03:36,220 --> 00:03:40,810
sure that we do things properly right we

89
00:03:38,890 --> 00:03:43,529
can't just put the stuff here and walk

90
00:03:40,810 --> 00:03:46,180
away because you know the average like

91
00:03:43,530 --> 00:03:48,040
lifetime of an employee and an IT

92
00:03:46,180 --> 00:03:49,450
company is I don't know two years and

93
00:03:48,040 --> 00:03:52,090
the government departments like three

94
00:03:49,450 --> 00:03:53,769
weeks so you need to make sure that you

95
00:03:52,090 --> 00:03:55,330
know you have processes to ensure these

96
00:03:53,770 --> 00:03:58,180
things keep happening so you need to

97
00:03:55,330 --> 00:03:59,530
like an OS hardening system you need to

98
00:03:58,180 --> 00:04:01,600
manage patches going into the

99
00:03:59,530 --> 00:04:04,480
environment you need to make sure that

100
00:04:01,600 --> 00:04:06,489
you know files have changing randomly

101
00:04:04,480 --> 00:04:08,859
and that you know you've got all these

102
00:04:06,489 --> 00:04:10,180
people using the environment but you

103
00:04:08,860 --> 00:04:12,910
need to make sure that you know when

104
00:04:10,180 --> 00:04:15,430
they quit after two weeks you remove

105
00:04:12,910 --> 00:04:17,409
their access and when they change roles

106
00:04:15,430 --> 00:04:19,630
you need to have like an overall

107
00:04:17,410 --> 00:04:21,669
configuration management strategy and

108
00:04:19,630 --> 00:04:23,409
you need to have like cloud protection

109
00:04:21,668 --> 00:04:27,280
workflow agents and stored on your

110
00:04:23,410 --> 00:04:30,570
servers we're kind of secured now yeah

111
00:04:27,280 --> 00:04:32,729
yeah I think we're secure ah

112
00:04:30,570 --> 00:04:33,780
got another one at police automation

113
00:04:32,730 --> 00:04:38,070
because you know we want to make sure

114
00:04:33,780 --> 00:04:39,690
that the app that's in production gets

115
00:04:38,070 --> 00:04:41,250
there as smoothly as possible and as

116
00:04:39,690 --> 00:04:43,230
close to actually what the developers

117
00:04:41,250 --> 00:04:45,240
intended as possible remember we need to

118
00:04:43,230 --> 00:04:48,090
monitor some stuff because you know the

119
00:04:45,240 --> 00:04:50,130
seam is like outputting logs but you

120
00:04:48,090 --> 00:04:52,169
know we need to like feed stuff into it

121
00:04:50,130 --> 00:04:53,640
make sure things are up and then we need

122
00:04:52,170 --> 00:04:57,480
something to monitor the same in case

123
00:04:53,640 --> 00:05:00,150
the seam goes down we need policies just

124
00:04:57,480 --> 00:05:02,190
to keep John happy and we need standard

125
00:05:00,150 --> 00:05:04,349
operating procedures there's a little

126
00:05:02,190 --> 00:05:07,440
Richfield joke standard operating

127
00:05:04,350 --> 00:05:09,720
procedures and you know now we're secure

128
00:05:07,440 --> 00:05:10,380
and you go to talk to the board of your

129
00:05:09,720 --> 00:05:12,920
todoist

130
00:05:10,380 --> 00:05:16,620
application and you're like we've got

131
00:05:12,920 --> 00:05:21,780
the biggest most secure application ever

132
00:05:16,620 --> 00:05:24,090
and no way prove it so you run some

133
00:05:21,780 --> 00:05:25,140
vulnerability scans you have someone

134
00:05:24,090 --> 00:05:27,750
come in and do a third-party

135
00:05:25,140 --> 00:05:30,300
configuration review you pay like

136
00:05:27,750 --> 00:05:33,630
squillions of dollars for or information

137
00:05:30,300 --> 00:05:36,720
security do penetration testing and they

138
00:05:33,630 --> 00:05:37,940
like just walk in with a swipe card no

139
00:05:36,720 --> 00:05:40,610
just kidding

140
00:05:37,940 --> 00:05:43,710
there was a callback to a previous talk

141
00:05:40,610 --> 00:05:46,200
and and then plus you actually have real

142
00:05:43,710 --> 00:05:48,229
attacks and now your management can be

143
00:05:46,200 --> 00:05:52,229
like confident we're totally secure

144
00:05:48,230 --> 00:05:53,340
you're doing all these things and you

145
00:05:52,230 --> 00:05:55,590
know you're falling industry best

146
00:05:53,340 --> 00:05:58,080
practices your app is secure I mean it's

147
00:05:55,590 --> 00:06:01,409
only a to-do list app but you're doing

148
00:05:58,080 --> 00:06:03,390
everything right now so we're building

149
00:06:01,410 --> 00:06:05,880
our app securely we're hosting it

150
00:06:03,390 --> 00:06:08,580
securely and we're verifying that it's

151
00:06:05,880 --> 00:06:13,710
secure now this is a pretty cheap

152
00:06:08,580 --> 00:06:16,409
process and hopefully you're all doing

153
00:06:13,710 --> 00:06:18,960
it and if not I'm pretty sure there's

154
00:06:16,410 --> 00:06:21,090
some vendors who are probably present or

155
00:06:18,960 --> 00:06:22,370
at least in the market that can help you

156
00:06:21,090 --> 00:06:25,799
out with that

157
00:06:22,370 --> 00:06:28,190
so we're built a secure web app so this

158
00:06:25,800 --> 00:06:31,290
is the end of the talk thanks for coming

159
00:06:28,190 --> 00:06:35,030
no I'm not quite what if there's bugs in

160
00:06:31,290 --> 00:06:37,200
our app so the normal process is yeah

161
00:06:35,030 --> 00:06:38,940
well the normal process is you don't

162
00:06:37,200 --> 00:06:41,130
know but pretending you do know there's

163
00:06:38,940 --> 00:06:43,050
a bug and that's a security issue you

164
00:06:41,130 --> 00:06:44,940
like ring the red bell and

165
00:06:43,050 --> 00:06:48,180
gather everyone around and say you know

166
00:06:44,940 --> 00:06:50,610
we need to we need to fix this if you're

167
00:06:48,180 --> 00:06:53,330
lucky your wife might block some simple

168
00:06:50,610 --> 00:06:57,599
attacks like sequel injection or

169
00:06:53,330 --> 00:06:59,310
cross-site scripting but but you know

170
00:06:57,599 --> 00:07:01,440
there might be more complicated bugs

171
00:06:59,310 --> 00:07:04,199
that the developers need to recompile

172
00:07:01,440 --> 00:07:06,180
and deploy a new version or a few are

173
00:07:04,199 --> 00:07:07,830
like a dynamic language they need to

174
00:07:06,180 --> 00:07:10,889
write new code and cross their fingers

175
00:07:07,830 --> 00:07:13,289
you know like that sort of thing and so

176
00:07:10,889 --> 00:07:15,240
you really need a really fast release

177
00:07:13,289 --> 00:07:17,969
process so that the developers can make

178
00:07:15,240 --> 00:07:21,150
the change in yellow deploy it and

179
00:07:17,970 --> 00:07:23,880
you're sweet but this is really

180
00:07:21,150 --> 00:07:25,289
expensive so I've worked in companies

181
00:07:23,880 --> 00:07:27,300
that have you know priorities and

182
00:07:25,289 --> 00:07:29,219
objectives and annual plans and stuff

183
00:07:27,300 --> 00:07:31,020
like that and none of it see it drop

184
00:07:29,220 --> 00:07:34,229
everything and fix security issues in

185
00:07:31,020 --> 00:07:36,270
our app and you know you've got the

186
00:07:34,229 --> 00:07:38,008
overhead of branching and merging which

187
00:07:36,270 --> 00:07:40,250
developers will tell you is like the

188
00:07:38,009 --> 00:07:42,509
worst thing that could possibly happen

189
00:07:40,250 --> 00:07:44,430
you got you know like Change review

190
00:07:42,509 --> 00:07:46,919
board probably depending on where you

191
00:07:44,430 --> 00:07:48,630
work you've got to actually release the

192
00:07:46,919 --> 00:07:50,940
software which means someone has to wake

193
00:07:48,630 --> 00:07:53,310
up in the middle of the night and you

194
00:07:50,940 --> 00:07:55,560
know this takes time and it can take a

195
00:07:53,310 --> 00:07:57,030
while from when the problems discovered

196
00:07:55,560 --> 00:07:57,419
to when you release it and the clock's

197
00:07:57,030 --> 00:07:59,520
ticking

198
00:07:57,419 --> 00:08:01,139
like if it's an externally reported

199
00:07:59,520 --> 00:08:03,630
vulnerability you know there's a blog

200
00:08:01,139 --> 00:08:05,009
post waiting or a tweet really for you

201
00:08:03,630 --> 00:08:07,319
to fix it and you know they're going to

202
00:08:05,009 --> 00:08:08,699
talk about how it takes you ages to do

203
00:08:07,319 --> 00:08:11,880
it and all you gave them was a lousy

204
00:08:08,699 --> 00:08:13,289
yahoo t-shirt which is probably a

205
00:08:11,880 --> 00:08:17,580
collector's item right now anyway

206
00:08:13,289 --> 00:08:19,289
because and I like often you don't even

207
00:08:17,580 --> 00:08:21,180
have the source code like it's you know

208
00:08:19,289 --> 00:08:23,610
it's SharePoint that's got a security

209
00:08:21,180 --> 00:08:25,680
issue or it's you know like Jon's

210
00:08:23,610 --> 00:08:28,050
financial system sorry John not you

211
00:08:25,680 --> 00:08:30,810
different John John's financial system

212
00:08:28,050 --> 00:08:33,180
that you know was running in 1998 and

213
00:08:30,810 --> 00:08:35,279
you know the source code was in you know

214
00:08:33,179 --> 00:08:37,348
visual sourcesafe and you know that was

215
00:08:35,279 --> 00:08:39,419
on Bob's laptop and Bob left ages ago

216
00:08:37,349 --> 00:08:42,599
and you know you can't even fix this

217
00:08:39,419 --> 00:08:43,770
yourself and even if you do need to to

218
00:08:42,599 --> 00:08:45,450
do this like how are you going to

219
00:08:43,770 --> 00:08:47,730
release quickly you're going to

220
00:08:45,450 --> 00:08:49,620
circumvent all your regular processes so

221
00:08:47,730 --> 00:08:51,089
that you can get a change out in which

222
00:08:49,620 --> 00:08:53,250
case like what was the point in the

223
00:08:51,089 --> 00:08:56,730
regular processes and you know and blah

224
00:08:53,250 --> 00:09:00,860
blah blah DevOps or you know I

225
00:08:56,730 --> 00:09:04,380
this sucks so what I was interested in

226
00:09:00,860 --> 00:09:06,720
and previous I guess when I was kind of

227
00:09:04,380 --> 00:09:09,510
responsible for getting security issues

228
00:09:06,720 --> 00:09:11,760
fixed through the pipeline is how can we

229
00:09:09,510 --> 00:09:14,610
patch the issues without touching the

230
00:09:11,760 --> 00:09:16,350
underlying website so you ring the alarm

231
00:09:14,610 --> 00:09:18,930
bell and you say dev team your stuff

232
00:09:16,350 --> 00:09:21,870
needs to be fixed as urgent while

233
00:09:18,930 --> 00:09:24,229
they're doing that can we fix it and the

234
00:09:21,870 --> 00:09:29,329
security team can we patch these issues

235
00:09:24,230 --> 00:09:32,579
without waiting like as fast as possible

236
00:09:29,329 --> 00:09:34,560
and so what we're doing here and this is

237
00:09:32,579 --> 00:09:35,609
kind of the foundation for Ridgefield as

238
00:09:34,560 --> 00:09:37,649
well but this is not an advertisement

239
00:09:35,610 --> 00:09:40,769
because this is actually a thing it's

240
00:09:37,649 --> 00:09:43,230
called virtual patching and what we're

241
00:09:40,769 --> 00:09:47,190
doing is replacing the waffe were

242
00:09:43,230 --> 00:09:48,870
they're more capable layer and I've

243
00:09:47,190 --> 00:09:50,370
called this let me secure that for you

244
00:09:48,870 --> 00:09:53,970
because like you know we're securing it

245
00:09:50,370 --> 00:09:55,949
for other people and the acronym was

246
00:09:53,970 --> 00:09:59,040
good which was mainly the reason why I

247
00:09:55,949 --> 00:10:00,540
chose that so here's a table with some

248
00:09:59,040 --> 00:10:04,500
kind of vulnerabilities that you might

249
00:10:00,540 --> 00:10:06,899
need to fix and you know some of them

250
00:10:04,500 --> 00:10:09,569
you can do just with a regular proxy so

251
00:10:06,899 --> 00:10:11,610
you know like we had an application

252
00:10:09,569 --> 00:10:14,969
where there was a particular URL that

253
00:10:11,610 --> 00:10:16,620
was kind of insecure had an issue owner

254
00:10:14,970 --> 00:10:20,040
but have they anyone used it so we just

255
00:10:16,620 --> 00:10:22,800
block that on the proxy but some things

256
00:10:20,040 --> 00:10:24,120
you need a way for like detecting sequel

257
00:10:22,800 --> 00:10:27,089
injection attacks or cross-site

258
00:10:24,120 --> 00:10:30,180
scripting attacks you know that's kind

259
00:10:27,089 --> 00:10:33,089
of specialized that where´s can do but

260
00:10:30,180 --> 00:10:35,130
West can't do everything like they can

261
00:10:33,089 --> 00:10:39,569
replace HTML but it's normally a pretty

262
00:10:35,130 --> 00:10:42,209
janky maybe they can't like modify the

263
00:10:39,569 --> 00:10:43,979
request due to performance reasons you

264
00:10:42,209 --> 00:10:46,920
don't have States so you can't fix

265
00:10:43,980 --> 00:10:48,889
business logic issues and they don't

266
00:10:46,920 --> 00:10:52,079
understand your users and their roles

267
00:10:48,889 --> 00:10:53,699
and the way that you might need to do so

268
00:10:52,079 --> 00:10:55,949
I guess what I'm advocating is another

269
00:10:53,699 --> 00:10:59,069
layer which is the code layer which is

270
00:10:55,949 --> 00:11:02,420
it's not the developers code as the the

271
00:10:59,069 --> 00:11:05,149
security teams code or whoever US code

272
00:11:02,420 --> 00:11:07,260
that you stick in front of your app

273
00:11:05,149 --> 00:11:10,510
where you can do those things that other

274
00:11:07,260 --> 00:11:13,540
layers can't do so that iOS definition

275
00:11:10,510 --> 00:11:16,540
virtual patching is preventing the

276
00:11:13,540 --> 00:11:19,469
exploitation of an on vulnerability and

277
00:11:16,540 --> 00:11:21,550
it's actually it's not anything new

278
00:11:19,470 --> 00:11:24,490
firewall vendors have been talking about

279
00:11:21,550 --> 00:11:26,829
this for ages for sort of OS and network

280
00:11:24,490 --> 00:11:28,090
level attacks and things like there it's

281
00:11:26,830 --> 00:11:32,530
basically just you know having

282
00:11:28,090 --> 00:11:34,360
signatures and blocking attacks I would

283
00:11:32,530 --> 00:11:37,030
say it's an agile security approach

284
00:11:34,360 --> 00:11:40,210
because if you put agile people will

285
00:11:37,030 --> 00:11:42,850
like believe you but what I actually

286
00:11:40,210 --> 00:11:44,680
mean is it's a fast approach and that

287
00:11:42,850 --> 00:11:47,100
you don't have to recompile applications

288
00:11:44,680 --> 00:11:52,000
and deploy them and stuff like that and

289
00:11:47,100 --> 00:11:53,590
you know you can react quickly so this

290
00:11:52,000 --> 00:11:55,390
is our approach for doing virtual

291
00:11:53,590 --> 00:11:58,570
patching so the first thing you need to

292
00:11:55,390 --> 00:12:00,939
do is understand how to actually exploit

293
00:11:58,570 --> 00:12:02,650
the vulnerability because if you can't

294
00:12:00,940 --> 00:12:03,850
exploit it then you can't fix it and you

295
00:12:02,650 --> 00:12:07,209
can't prove you fixed it

296
00:12:03,850 --> 00:12:10,780
then only patch things that are actually

297
00:12:07,210 --> 00:12:12,070
known don't just like oh man it's

298
00:12:10,780 --> 00:12:13,839
probably unsecure let's just turn

299
00:12:12,070 --> 00:12:15,550
everything on and patch everything

300
00:12:13,840 --> 00:12:17,080
because you're probably going to break

301
00:12:15,550 --> 00:12:19,839
stuff and I'll talk about that in a

302
00:12:17,080 --> 00:12:21,400
minute and avoid I actually I don't talk

303
00:12:19,840 --> 00:12:24,070
about it right now

304
00:12:21,400 --> 00:12:27,850
avoid over patching or doing things that

305
00:12:24,070 --> 00:12:29,110
will cause issues so the reason a lot of

306
00:12:27,850 --> 00:12:31,660
people I should have seen how many

307
00:12:29,110 --> 00:12:34,060
people hate wefts would that be fun how

308
00:12:31,660 --> 00:12:36,969
many people hate wefts oh man all you

309
00:12:34,060 --> 00:12:38,829
liars you've never used a with a lot of

310
00:12:36,970 --> 00:12:41,800
people hate West because when you try

311
00:12:38,830 --> 00:12:44,700
and turn the security on the application

312
00:12:41,800 --> 00:12:49,030
turns off and it's kind of like this

313
00:12:44,700 --> 00:12:50,740
there's a continuum and and people find

314
00:12:49,030 --> 00:12:53,829
it really hard to find that sweet spot

315
00:12:50,740 --> 00:12:55,450
where the application is protected so

316
00:12:53,830 --> 00:12:57,280
we're going to focus only on the

317
00:12:55,450 --> 00:12:59,470
individual thing that we know is broken

318
00:12:57,280 --> 00:13:01,360
so this works really well like if you've

319
00:12:59,470 --> 00:13:04,660
got a pin test that says you've got

320
00:13:01,360 --> 00:13:06,100
seven things wrong or you've got a like

321
00:13:04,660 --> 00:13:07,930
a vulnerability report come through

322
00:13:06,100 --> 00:13:09,550
hacker one or whatever that says you

323
00:13:07,930 --> 00:13:11,949
know the specific thing is wrong because

324
00:13:09,550 --> 00:13:13,449
you can fix exactly that thing and not

325
00:13:11,950 --> 00:13:16,570
be worried about breaking the wrist of

326
00:13:13,450 --> 00:13:21,070
your side yeah through the use of eff

327
00:13:16,570 --> 00:13:22,810
statements cool just a little yeah I've

328
00:13:21,070 --> 00:13:23,830
got to ask you as a developer I'm sure

329
00:13:22,810 --> 00:13:24,310
there's a bunch of different things you

330
00:13:23,830 --> 00:13:25,810
can do

331
00:13:24,310 --> 00:13:27,670
affects security issues you could just

332
00:13:25,810 --> 00:13:30,089
block the user like we did with that URL

333
00:13:27,670 --> 00:13:32,650
you can redirect them to an error page

334
00:13:30,090 --> 00:13:35,170
you could transform the request or

335
00:13:32,650 --> 00:13:36,850
response to make it safe so maybe if

336
00:13:35,170 --> 00:13:38,349
there's some input your application

337
00:13:36,850 --> 00:13:40,210
can't handle you could strip those

338
00:13:38,350 --> 00:13:41,950
characters out or maybe there's

339
00:13:40,210 --> 00:13:45,160
something the apps displaying you don't

340
00:13:41,950 --> 00:13:47,589
want people to see strip them out you

341
00:13:45,160 --> 00:13:49,569
can do validation like insert error

342
00:13:47,589 --> 00:13:52,870
messages to say your passwords too weak

343
00:13:49,570 --> 00:13:55,450
or you know like insert that into the

344
00:13:52,870 --> 00:13:57,040
stream of HTML and then of course you

345
00:13:55,450 --> 00:13:58,690
need to alert so you actually know

346
00:13:57,040 --> 00:14:00,520
you're under attack because you know you

347
00:13:58,690 --> 00:14:03,100
just paid 4.2 million dollars for a

348
00:14:00,520 --> 00:14:05,260
scene so you need to use it

349
00:14:03,100 --> 00:14:09,100
so here's the here's the architecture so

350
00:14:05,260 --> 00:14:12,520
I guess you could say this isn't this

351
00:14:09,100 --> 00:14:15,190
isn't like a software project that I'm

352
00:14:12,520 --> 00:14:16,779
presenting it's more like assembling a

353
00:14:15,190 --> 00:14:20,680
couple of different components with some

354
00:14:16,779 --> 00:14:24,460
config files and there's a web page you

355
00:14:20,680 --> 00:14:28,420
can go to which is let me secure that

356
00:14:24,460 --> 00:14:31,210
for you LM STFU com where you can like

357
00:14:28,420 --> 00:14:33,490
github these things and I wrote

358
00:14:31,210 --> 00:14:34,750
documentation and it's like this is the

359
00:14:33,490 --> 00:14:36,430
first time I've actually actually

360
00:14:34,750 --> 00:14:38,350
released source code when I said I was

361
00:14:36,430 --> 00:14:39,760
going to release source code and the

362
00:14:38,350 --> 00:14:42,070
trick is there's not actually that much

363
00:14:39,760 --> 00:14:45,700
source code but there's mostly

364
00:14:42,070 --> 00:14:49,510
documentation cool so what we do is we

365
00:14:45,700 --> 00:14:53,830
stick a web modsecurity in front of a

366
00:14:49,510 --> 00:14:57,850
node app that's custom and and have that

367
00:14:53,830 --> 00:15:00,250
sitting in front of our web server so

368
00:14:57,850 --> 00:15:04,150
like seven people in the audience just

369
00:15:00,250 --> 00:15:06,700
frog freaked out and oh my god he used

370
00:15:04,150 --> 00:15:09,030
the word wife and here's some legitimate

371
00:15:06,700 --> 00:15:11,110
quotes that I made up from real people

372
00:15:09,030 --> 00:15:14,110
with their issues that they have with

373
00:15:11,110 --> 00:15:19,570
wife's and and it's kind of true like

374
00:15:14,110 --> 00:15:22,240
everyone finds it really stressful but

375
00:15:19,570 --> 00:15:24,040
just to recap to go back all the way

376
00:15:22,240 --> 00:15:25,660
back to the slide three slides ago we're

377
00:15:24,040 --> 00:15:27,670
only patching known vulnerabilities

378
00:15:25,660 --> 00:15:29,589
we're not just putting a wife in front

379
00:15:27,670 --> 00:15:33,219
of our app and turning it on so don't

380
00:15:29,589 --> 00:15:34,870
freak out so first let's demo a

381
00:15:33,220 --> 00:15:38,350
vulnerable website so here's one I

382
00:15:34,870 --> 00:15:40,540
prepared earlier so

383
00:15:38,350 --> 00:15:42,190
this applications running on localhost

384
00:15:40,540 --> 00:15:44,319
due to a weird browser quirk that I

385
00:15:42,190 --> 00:15:46,690
discovered right before my laptop ran

386
00:15:44,320 --> 00:15:47,890
out of battery last night and then

387
00:15:46,690 --> 00:15:48,970
couldn't sleep very well because I

388
00:15:47,890 --> 00:15:51,430
thought my demo wasn't going to work

389
00:15:48,970 --> 00:15:53,529
today and then when I came back into the

390
00:15:51,430 --> 00:15:55,410
office and charged my laptop

391
00:15:53,529 --> 00:16:00,130
it was just a browser quirk anyway

392
00:15:55,410 --> 00:16:02,380
enough about my sleep patterns so this

393
00:16:00,130 --> 00:16:05,470
is a site called zero days it has a logo

394
00:16:02,380 --> 00:16:06,339
that a guy called Jeff made for us which

395
00:16:05,470 --> 00:16:08,620
is pretty cool

396
00:16:06,339 --> 00:16:10,690
you can use fonts and stuff and

397
00:16:08,620 --> 00:16:13,360
basically on this site you can go and

398
00:16:10,690 --> 00:16:15,399
buy zero days let's just ignore the fact

399
00:16:13,360 --> 00:16:17,890
that yeah anyway let's pretend this is a

400
00:16:15,399 --> 00:16:22,060
real thing so it's a daily deal site for

401
00:16:17,890 --> 00:16:24,730
0 days and basically what you can do is

402
00:16:22,060 --> 00:16:27,329
you can like register and log in you

403
00:16:24,730 --> 00:16:29,980
probably need to turn docker or on

404
00:16:27,329 --> 00:16:33,910
that's like a really good time to do

405
00:16:29,980 --> 00:16:36,310
that I thought I'd turn it all off so

406
00:16:33,910 --> 00:16:38,949
like everything is clean and back to

407
00:16:36,310 --> 00:16:42,339
pristine so you can register an account

408
00:16:38,950 --> 00:16:47,290
on the site people can go and look at

409
00:16:42,339 --> 00:16:52,209
products and make comments on them so

410
00:16:47,290 --> 00:16:54,310
just cool good password so this is on

411
00:16:52,209 --> 00:16:58,329
localhost so yeah just browse to this if

412
00:16:54,310 --> 00:17:01,599
you want to look at my site cool yeah so

413
00:16:58,329 --> 00:17:03,760
i registered i'm logged in I can add

414
00:17:01,600 --> 00:17:07,270
products you know I can buy ten of them

415
00:17:03,760 --> 00:17:09,280
I can go ship them somewhere and here's

416
00:17:07,270 --> 00:17:13,809
some autocompletes I completed

417
00:17:09,280 --> 00:17:20,439
automatically cool give me a call

418
00:17:13,809 --> 00:17:22,030
anytime you want hey hey hey automatic

419
00:17:20,439 --> 00:17:24,329
credit card filling is to sit well thank

420
00:17:22,030 --> 00:17:24,329
God

421
00:17:29,310 --> 00:17:35,889
that's a real 21 okay you know and then

422
00:17:33,910 --> 00:17:37,840
it authorizes your credit card and then

423
00:17:35,890 --> 00:17:39,910
you know here's your order in your place

424
00:17:37,840 --> 00:17:44,889
in order so this is called internet

425
00:17:39,910 --> 00:17:46,750
shopping so so and then you can go look

426
00:17:44,890 --> 00:17:48,640
at your order and you know you can

427
00:17:46,750 --> 00:17:50,650
search for things like you could search

428
00:17:48,640 --> 00:17:53,920
for all the vulnerabilities that are for

429
00:17:50,650 --> 00:17:57,670
sale for ghost script and you could put

430
00:17:53,920 --> 00:18:00,340
a comment on this is old or something

431
00:17:57,670 --> 00:18:05,080
like that and you know social can happen

432
00:18:00,340 --> 00:18:06,699
cool so that was the app technically how

433
00:18:05,080 --> 00:18:08,710
it's built doesn't really matter

434
00:18:06,700 --> 00:18:10,720
I'm not going to open up the code but

435
00:18:08,710 --> 00:18:13,210
but just because I like to brag that I

436
00:18:10,720 --> 00:18:16,900
can still write code as a dotnet core

437
00:18:13,210 --> 00:18:22,990
app well it's for three apps running and

438
00:18:16,900 --> 00:18:24,250
docker on Linux with what so called

439
00:18:22,990 --> 00:18:29,010
sequel like there's a database

440
00:18:24,250 --> 00:18:33,340
cool so yeah enterprise-grade yep cool

441
00:18:29,010 --> 00:18:34,990
so so that's our app so so we've

442
00:18:33,340 --> 00:18:35,590
released this app and you know it was

443
00:18:34,990 --> 00:18:38,290
great

444
00:18:35,590 --> 00:18:40,780
and somewhere in the c-suite they said

445
00:18:38,290 --> 00:18:42,940
prove that it's great and so then they

446
00:18:40,780 --> 00:18:45,760
gave like three times more than we get

447
00:18:42,940 --> 00:18:49,800
paid to security consultants who send us

448
00:18:45,760 --> 00:18:52,600
this quality is a number one dream where

449
00:18:49,800 --> 00:18:56,440
yeah and you're like oh look at this

450
00:18:52,600 --> 00:19:01,270
table of contents good and it turns out

451
00:18:56,440 --> 00:19:03,700
that this app has some vulnerabilities

452
00:19:01,270 --> 00:19:06,310
in it hands up if you've ever had one of

453
00:19:03,700 --> 00:19:10,140
these reports land across your desk man

454
00:19:06,310 --> 00:19:10,139
opposite guys don't put your hands up

455
00:19:10,669 --> 00:19:15,960
yeah so so we've got some

456
00:19:13,679 --> 00:19:19,590
vulnerabilities so let's look at some of

457
00:19:15,960 --> 00:19:21,570
them so I'm not sharing the source for

458
00:19:19,590 --> 00:19:25,678
this app because it did it on company

459
00:19:21,570 --> 00:19:26,309
time but you know hopefully these things

460
00:19:25,679 --> 00:19:30,240
ring a bell

461
00:19:26,309 --> 00:19:33,770
so vulnerability number one turns out

462
00:19:30,240 --> 00:19:33,770
there's an admin section to the site

463
00:19:34,220 --> 00:19:40,770
where you can go and look at you know

464
00:19:37,049 --> 00:19:42,750
everyone's shopping carts and eat at

465
00:19:40,770 --> 00:19:45,720
products and stuff like that

466
00:19:42,750 --> 00:19:49,710
and so ideally that wouldn't be exposed

467
00:19:45,720 --> 00:19:52,530
to random people from test comm another

468
00:19:49,710 --> 00:19:54,480
nice little vulnerability which is kind

469
00:19:52,530 --> 00:19:58,200
of like a real-world one is that you can

470
00:19:54,480 --> 00:20:01,620
like buy a negative quantities of stuff

471
00:19:58,200 --> 00:20:06,530
so how many do I need nine I think

472
00:20:01,620 --> 00:20:09,330
that's heaps cheaper cool what else oh

473
00:20:06,530 --> 00:20:11,309
yeah there's a shopping cart thing that

474
00:20:09,330 --> 00:20:17,159
you go through I'll just clear it

475
00:20:11,309 --> 00:20:22,590
because that makes the demo work wasn't

476
00:20:17,160 --> 00:20:23,970
that clear and buggy code um there's a

477
00:20:22,590 --> 00:20:25,860
shopping cart you can go through and you

478
00:20:23,970 --> 00:20:31,950
know how I we just did it that you could

479
00:20:25,860 --> 00:20:36,360
type some stuff and to pay wow this was

480
00:20:31,950 --> 00:20:37,740
way faster in my head payment details

481
00:20:36,360 --> 00:20:40,110
screen where it's authorizing your

482
00:20:37,740 --> 00:20:41,850
credit card you can't see the URL

483
00:20:40,110 --> 00:20:44,820
because the resolution but that's slash

484
00:20:41,850 --> 00:20:48,270
step three let's just skip that step oh

485
00:20:44,820 --> 00:20:53,210
yeah payment by credit card empty okay

486
00:20:48,270 --> 00:20:53,210
place order cool that orders now shipped

487
00:20:53,850 --> 00:21:01,469
what else oh yeah anytime you see a

488
00:20:57,570 --> 00:21:05,159
search box what do you do single quote

489
00:21:01,470 --> 00:21:09,690
Oh is an error what a surprise

490
00:21:05,160 --> 00:21:11,520
it's almost like it's contrived so you

491
00:21:09,690 --> 00:21:14,100
know if I search for ghosts I see one

492
00:21:11,520 --> 00:21:17,850
item but I can Union with random other

493
00:21:14,100 --> 00:21:23,459
tables in the database this is called

494
00:21:17,850 --> 00:21:25,260
sequel injection and doesn't work but

495
00:21:23,460 --> 00:21:26,850
when it works you can get stuff from

496
00:21:25,260 --> 00:21:30,360
other tables in the database oh yeah I

497
00:21:26,850 --> 00:21:33,929
forgot a quote Thanks thank you to the

498
00:21:30,360 --> 00:21:35,129
professionals in the audience it's like

499
00:21:33,930 --> 00:21:36,840
it's cool don't you love it that you

500
00:21:35,130 --> 00:21:40,590
just paid to attend a talk by an amateur

501
00:21:36,840 --> 00:21:44,850
although I think it was it $70 for the

502
00:21:40,590 --> 00:21:46,439
conference 50 and there's like 40 talk

503
00:21:44,850 --> 00:21:54,810
oh this is a dollar you paid a dollar to

504
00:21:46,440 --> 00:21:57,930
be here don't complain I was cross-site

505
00:21:54,810 --> 00:22:01,350
scripting you've probably seen this

506
00:21:57,930 --> 00:22:04,070
little baby before it's really common

507
00:22:01,350 --> 00:22:06,810
and every application somewhere around

508
00:22:04,070 --> 00:22:08,669
and so you know I guess I can't explain

509
00:22:06,810 --> 00:22:11,190
what cross-site scripting does but it's

510
00:22:08,670 --> 00:22:12,230
normally a bad sign and when I'm looking

511
00:22:11,190 --> 00:22:15,870
at my orders

512
00:22:12,230 --> 00:22:18,270
I noticed hey there's a number on the

513
00:22:15,870 --> 00:22:20,850
URL what if I changed that number oh I

514
00:22:18,270 --> 00:22:25,200
see Joe Bloggs his order cool okay so

515
00:22:20,850 --> 00:22:26,730
our web app is screwed and this has

516
00:22:25,200 --> 00:22:28,320
nothing to do with all those fancy

517
00:22:26,730 --> 00:22:31,110
things we put in our environment okay

518
00:22:28,320 --> 00:22:34,110
like the seams not going to fix this the

519
00:22:31,110 --> 00:22:36,000
wefts might fix some of it but like some

520
00:22:34,110 --> 00:22:39,270
of these are business logic issues you

521
00:22:36,000 --> 00:22:40,470
know like who can see whose order or do

522
00:22:39,270 --> 00:22:42,240
you really need to go to the credit card

523
00:22:40,470 --> 00:22:45,710
screen before you go to the place order

524
00:22:42,240 --> 00:22:47,910
screen so how we're going to fix these

525
00:22:45,710 --> 00:22:49,700
let's go back to slides because they

526
00:22:47,910 --> 00:22:53,130
will tell me what to say next

527
00:22:49,700 --> 00:22:54,180
yes so we saw all those things I think I

528
00:22:53,130 --> 00:22:58,790
might have missed out a couple of them

529
00:22:54,180 --> 00:23:01,290
but needless to say the website is hosed

530
00:22:58,790 --> 00:23:05,550
so the first layer we're going to stick

531
00:23:01,290 --> 00:23:07,100
in as modsecurity so contrary to popular

532
00:23:05,550 --> 00:23:09,530
belief

533
00:23:07,100 --> 00:23:14,059
modsecurity is not a dead project it's

534
00:23:09,530 --> 00:23:18,289
just a dying then resurrected project so

535
00:23:14,059 --> 00:23:19,879
modsecurity is a open source web

536
00:23:18,289 --> 00:23:22,160
application firewall that you can

537
00:23:19,880 --> 00:23:24,919
install on your web server

538
00:23:22,160 --> 00:23:28,520
what really makes it good is the OS core

539
00:23:24,919 --> 00:23:30,169
ruleset so hey look there's a picture

540
00:23:28,520 --> 00:23:33,320
um the bit that I like about this

541
00:23:30,169 --> 00:23:35,690
picture is that I'm running like three

542
00:23:33,320 --> 00:23:38,918
different versions of Linux in a vm

543
00:23:35,690 --> 00:23:43,970
thing on my macbook in order to like

544
00:23:38,919 --> 00:23:50,360
serve 50 lines of code it's crazy so uh

545
00:23:43,970 --> 00:23:55,179
yeah docker so that's talker so mud

546
00:23:50,360 --> 00:24:01,280
security is it's originally built for

547
00:23:55,179 --> 00:24:05,240
Apache and sort of released bridge to

548
00:24:01,280 --> 00:24:06,799
get it working an IAS and nginx but it

549
00:24:05,240 --> 00:24:10,280
didn't really work that well and those

550
00:24:06,799 --> 00:24:12,620
web servers so they're rewriting it in

551
00:24:10,280 --> 00:24:15,590
version 3 and it's going to be much

552
00:24:12,620 --> 00:24:17,239
better but unfortunately a lot of the

553
00:24:15,590 --> 00:24:19,100
features are supported and the version 3

554
00:24:17,240 --> 00:24:21,200
yet because they've been finished up um

555
00:24:19,100 --> 00:24:22,639
the nice thing about mod security is it

556
00:24:21,200 --> 00:24:24,230
doesn't really do much out of the box

557
00:24:22,640 --> 00:24:26,240
you can just like and they will the

558
00:24:24,230 --> 00:24:30,710
module nothing changes on your web

559
00:24:26,240 --> 00:24:33,919
server until you like configure it bad

560
00:24:30,710 --> 00:24:35,600
betters you have to configure it the

561
00:24:33,919 --> 00:24:37,490
reason I went over and got this book is

562
00:24:35,600 --> 00:24:39,129
because there's a modern book with

563
00:24:37,490 --> 00:24:42,220
examples that are actually correct

564
00:24:39,130 --> 00:24:44,990
unlike most of the stuff on the internet

565
00:24:42,220 --> 00:24:49,280
about mod security which applies to old

566
00:24:44,990 --> 00:24:51,470
versions so I've got some links to stuff

567
00:24:49,280 --> 00:24:55,340
that I think is relevant and that's

568
00:24:51,470 --> 00:25:00,110
actually quite a good book cool so how

569
00:24:55,340 --> 00:25:02,658
you configure mod security is you go to

570
00:25:00,110 --> 00:25:04,760
this eleven hundred and seventy-six line

571
00:25:02,659 --> 00:25:08,510
file that you get in the default install

572
00:25:04,760 --> 00:25:14,750
and you start uncommenting lines until

573
00:25:08,510 --> 00:25:18,200
it works and the mod security core rule

574
00:25:14,750 --> 00:25:20,990
set as this project it's kind of an OS

575
00:25:18,200 --> 00:25:23,029
project I'm not sure what its history is

576
00:25:20,990 --> 00:25:25,880
and how it got to be a part of OS but

577
00:25:23,029 --> 00:25:28,130
it's a bunch of rules for common web

578
00:25:25,880 --> 00:25:30,200
security issues and the idea is that

579
00:25:28,130 --> 00:25:32,450
these rules are tuned to avoid false

580
00:25:30,200 --> 00:25:34,640
positives so your app almost shouldn't

581
00:25:32,450 --> 00:25:36,860
almost always shouldn't break by turning

582
00:25:34,640 --> 00:25:41,090
these rules on and the kind of default

583
00:25:36,860 --> 00:25:43,908
setting like they they block like really

584
00:25:41,090 --> 00:25:47,990
blatantly bad stuff as sort of a

585
00:25:43,909 --> 00:25:49,940
baseline and how the core rule sets it

586
00:25:47,990 --> 00:25:53,390
up is there's basically a whole bunch of

587
00:25:49,940 --> 00:25:55,419
conf configuration files and they're

588
00:25:53,390 --> 00:25:58,429
grouped into different types of attacks

589
00:25:55,419 --> 00:26:00,169
and they look at the requests they look

590
00:25:58,429 --> 00:26:03,380
at the responses coming back from your

591
00:26:00,169 --> 00:26:05,090
web server and then they evaluate you

592
00:26:03,380 --> 00:26:07,940
know after looking at all there was this

593
00:26:05,090 --> 00:26:10,070
really an attack I'll just quickly show

594
00:26:07,940 --> 00:26:12,409
you how mod security works if you're

595
00:26:10,070 --> 00:26:14,418
thinking of using mod security to do

596
00:26:12,409 --> 00:26:15,799
virtual patching it's probably best if

597
00:26:14,419 --> 00:26:20,510
you cover your eyes and block your ears

598
00:26:15,799 --> 00:26:22,340
or you might change your mind no it's

599
00:26:20,510 --> 00:26:24,529
not that bad once you get the hang of it

600
00:26:22,340 --> 00:26:26,980
but the thing that's quick about mod

601
00:26:24,529 --> 00:26:29,440
security is that it uses a patchi's

602
00:26:26,980 --> 00:26:34,130
configuration syntax which is basically

603
00:26:29,440 --> 00:26:39,860
like action variable variable kind of

604
00:26:34,130 --> 00:26:42,950
thing so it's quite Foglia so so you

605
00:26:39,860 --> 00:26:46,010
have a security rule the first parameter

606
00:26:42,950 --> 00:26:47,960
is the thing that you want to test so

607
00:26:46,010 --> 00:26:50,960
here it is in the file name of the

608
00:26:47,960 --> 00:26:52,340
request coming through the proxy and you

609
00:26:50,960 --> 00:26:54,950
can test those other things as well

610
00:26:52,340 --> 00:26:56,120
cookies whatever then you have an

611
00:26:54,950 --> 00:26:58,520
expression that you're testing it

612
00:26:56,120 --> 00:27:01,760
against they call an operator so this is

613
00:26:58,520 --> 00:27:04,220
a regular expression test against that

614
00:27:01,760 --> 00:27:08,029
string with slash inert to see if the

615
00:27:04,220 --> 00:27:11,120
phone name matches that path then you

616
00:27:08,029 --> 00:27:12,799
have the third parameter which is going

617
00:27:11,120 --> 00:27:14,149
to span over several lines because it's

618
00:27:12,799 --> 00:27:16,429
just where everything else gets chucked

619
00:27:14,149 --> 00:27:19,789
in montt security and you're put things

620
00:27:16,429 --> 00:27:22,730
like the ID so each rule has a different

621
00:27:19,789 --> 00:27:25,580
ID that shows up in your logs what phase

622
00:27:22,730 --> 00:27:27,710
of request processing what action to

623
00:27:25,580 --> 00:27:31,100
take so to deny the request to block it

624
00:27:27,710 --> 00:27:32,450
to pass it and that sort of thing any

625
00:27:31,100 --> 00:27:33,570
transformations you want to do on the

626
00:27:32,450 --> 00:27:36,410
input which I'm going to skip

627
00:27:33,570 --> 00:27:40,530
/ and then a message to put in your logs

628
00:27:36,410 --> 00:27:43,170
and modsecurity supports ending rules so

629
00:27:40,530 --> 00:27:45,660
using the chain keyword so you can say

630
00:27:43,170 --> 00:27:48,210
if they're on this page and this

631
00:27:45,660 --> 00:27:50,010
parameter has sequel injection then do

632
00:27:48,210 --> 00:27:52,340
this if they're on that page and that

633
00:27:50,010 --> 00:27:56,600
parameter has freed it and that do that

634
00:27:52,340 --> 00:28:00,240
and you can also do ours using this

635
00:27:56,600 --> 00:28:02,760
really ugly programming kind of style

636
00:28:00,240 --> 00:28:04,860
where you you put markers in your code

637
00:28:02,760 --> 00:28:07,320
and then kind of go to statements to

638
00:28:04,860 --> 00:28:08,699
jump to them but yeah like I said if you

639
00:28:07,320 --> 00:28:11,330
think you've using modsecurity try and

640
00:28:08,700 --> 00:28:16,310
look past that and think of the price oh

641
00:28:11,330 --> 00:28:21,120
cool so so just to demo modsecurity so

642
00:28:16,310 --> 00:28:22,830
so what I'm doing in this demo is the

643
00:28:21,120 --> 00:28:24,899
exact same web application running in

644
00:28:22,830 --> 00:28:26,730
the same docker container but with

645
00:28:24,900 --> 00:28:28,620
modsecurity in front of it and the way

646
00:28:26,730 --> 00:28:30,720
you can tell the difference is the

647
00:28:28,620 --> 00:28:33,350
original app has a logo with fonts and

648
00:28:30,720 --> 00:28:36,500
the new app has a logo without fonts

649
00:28:33,350 --> 00:28:40,260
because I don't know how to do the art

650
00:28:36,500 --> 00:28:42,360
so that's basically as the request goes

651
00:28:40,260 --> 00:28:44,730
through I'm just rewriting the logo to

652
00:28:42,360 --> 00:28:48,360
make it obvious we're on the site cool

653
00:28:44,730 --> 00:28:50,630
so the first vulnerability which one

654
00:28:48,360 --> 00:28:53,820
should we do yes simple one so accessing

655
00:28:50,630 --> 00:28:58,920
admin users basically we just want to

656
00:28:53,820 --> 00:29:01,590
block requests with a certain URL so the

657
00:28:58,920 --> 00:29:04,920
way there I've brought up my mod

658
00:29:01,590 --> 00:29:06,750
security configuration is for every

659
00:29:04,920 --> 00:29:08,910
vulnerability I've made a separate file

660
00:29:06,750 --> 00:29:10,470
with the number of the vulnerability and

661
00:29:08,910 --> 00:29:14,280
then you know that gets tracked and

662
00:29:10,470 --> 00:29:17,190
source control and or rolled out or you

663
00:29:14,280 --> 00:29:21,570
know have a cowboy thing you do and so

664
00:29:17,190 --> 00:29:26,760
all the issues like our sort of fixed

665
00:29:21,570 --> 00:29:29,580
and individual files so I think issue 9

666
00:29:26,760 --> 00:29:33,450
was the admin URL thing and basically

667
00:29:29,580 --> 00:29:36,840
what we're doing in here as as chick if

668
00:29:33,450 --> 00:29:40,530
the URL begins with slash admin and then

669
00:29:36,840 --> 00:29:42,419
if the user if the user has logged in

670
00:29:40,530 --> 00:29:44,879
and they're not admin a tradeshow

671
00:29:42,420 --> 00:29:45,710
co-op's advertisement sorry

672
00:29:44,880 --> 00:29:47,510
the

673
00:29:45,710 --> 00:29:50,570
if they're not the admin user then you

674
00:29:47,510 --> 00:29:54,830
block access to that URL so going back

675
00:29:50,570 --> 00:29:57,639
to our app log back in there's that test

676
00:29:54,830 --> 00:30:02,689
user doesn't even remember the password

677
00:29:57,640 --> 00:30:06,590
no lucky I do yes so now if I go to

678
00:30:02,690 --> 00:30:09,380
slash admin for Merlin okay cool

679
00:30:06,590 --> 00:30:10,520
so I mean you know you can just copy

680
00:30:09,380 --> 00:30:15,470
paste something like that it's pretty

681
00:30:10,520 --> 00:30:17,360
easy and your logs you end up with you

682
00:30:15,470 --> 00:30:19,400
know like an access denied error and

683
00:30:17,360 --> 00:30:21,439
somewhere in there is the error message

684
00:30:19,400 --> 00:30:22,970
that I put and if you had a seam you'd

685
00:30:21,440 --> 00:30:25,220
probably pluck butts out of that log

686
00:30:22,970 --> 00:30:29,390
file and have a dashboard and then no

687
00:30:25,220 --> 00:30:34,520
one would look at it cool so similarly

688
00:30:29,390 --> 00:30:38,240
with negative quantities so we block

689
00:30:34,520 --> 00:30:40,400
that issue so now if I go to update

690
00:30:38,240 --> 00:30:43,240
quantities it's for bidding and that's

691
00:30:40,400 --> 00:30:50,060
basically just a regular expression

692
00:30:43,240 --> 00:30:54,400
wrong editor so it's saying look at all

693
00:30:50,060 --> 00:30:57,530
the incoming request parameters F and

694
00:30:54,400 --> 00:30:59,240
with a wild card in the middle and if

695
00:30:57,530 --> 00:31:02,270
any of them don't match the regular

696
00:30:59,240 --> 00:31:04,940
expression of all digits then raise an

697
00:31:02,270 --> 00:31:07,220
error so how many more should I demo of

698
00:31:04,940 --> 00:31:08,950
these cross-site scripting here I'll

699
00:31:07,220 --> 00:31:12,890
show you this because this one's hideous

700
00:31:08,950 --> 00:31:15,290
so we don't want people to enter XSS

701
00:31:12,890 --> 00:31:17,180
dammit they already have oh it's good a

702
00:31:15,290 --> 00:31:19,399
different product we don't want people

703
00:31:17,180 --> 00:31:23,300
to enter Exorcist so we want to block it

704
00:31:19,400 --> 00:31:25,400
when they do just excuse me while I do

705
00:31:23,300 --> 00:31:28,310
my elite hacker

706
00:31:25,400 --> 00:31:31,910
so what we want to do is like have kind

707
00:31:28,310 --> 00:31:35,149
of a set of strings or common cross-site

708
00:31:31,910 --> 00:31:38,420
scripting that we want to block and to

709
00:31:35,150 --> 00:31:40,670
block that unfortunately the core rule

710
00:31:38,420 --> 00:31:42,950
see it which is this a wasp project that

711
00:31:40,670 --> 00:31:45,590
has a whole lot of XSS and sequel

712
00:31:42,950 --> 00:31:48,200
injection signatures doesn't have a nice

713
00:31:45,590 --> 00:31:50,300
way of just blocking XSS on one part of

714
00:31:48,200 --> 00:31:53,300
your site so you have to do this

715
00:31:50,300 --> 00:31:55,129
and this see told you what's head yes

716
00:31:53,300 --> 00:31:58,700
didn't want to spend too much time on

717
00:31:55,130 --> 00:31:59,280
that oh and I've running that up on lmst

718
00:31:58,700 --> 00:32:03,540
if

719
00:31:59,280 --> 00:32:07,129
EUCOM Adam so you can have a look cool

720
00:32:03,540 --> 00:32:09,930
and the same with sequel injections so

721
00:32:07,130 --> 00:32:10,980
that gets blocked so I mean you could do

722
00:32:09,930 --> 00:32:13,770
it a little bit more gracefully than

723
00:32:10,980 --> 00:32:16,220
just forbidden but you know basically

724
00:32:13,770 --> 00:32:20,610
the idea as modsecurity lets you do this

725
00:32:16,220 --> 00:32:22,320
so let's find the slides here's some

726
00:32:20,610 --> 00:32:24,659
slides that kind of show what we're

727
00:32:22,320 --> 00:32:26,669
doing so we've decided that we need to

728
00:32:24,660 --> 00:32:27,810
check the URL and then reject that

729
00:32:26,670 --> 00:32:30,840
efforts wrong

730
00:32:27,810 --> 00:32:32,879
we've decided for validating a parameter

731
00:32:30,840 --> 00:32:36,870
we test if it's a positive number so we

732
00:32:32,880 --> 00:32:40,160
use a regular expression if there's XSS

733
00:32:36,870 --> 00:32:44,790
and the input we're rejecting the Empire

734
00:32:40,160 --> 00:32:47,790
so this is if you want to test for

735
00:32:44,790 --> 00:32:51,480
Exorcist this is one way to do it and

736
00:32:47,790 --> 00:32:53,760
this is why I advocate using our f-22

737
00:32:51,480 --> 00:32:57,900
for XSS rather than building it yourself

738
00:32:53,760 --> 00:33:02,550
because the people that came up with us

739
00:32:57,900 --> 00:33:06,270
don't actually know what it does and and

740
00:33:02,550 --> 00:33:08,639
it's hard to block XSS so these are the

741
00:33:06,270 --> 00:33:11,040
26 regular expressions and that coral

742
00:33:08,640 --> 00:33:13,740
set project and the reason they don't

743
00:33:11,040 --> 00:33:15,960
know what it does is because they used a

744
00:33:13,740 --> 00:33:17,610
pull regular expression compiler to

745
00:33:15,960 --> 00:33:19,740
compile regular expressions and to new

746
00:33:17,610 --> 00:33:20,939
regular expressions and so then they put

747
00:33:19,740 --> 00:33:22,440
the regular expression of the regular

748
00:33:20,940 --> 00:33:25,530
expression and to the regular expression

749
00:33:22,440 --> 00:33:27,900
and then but yeah I mean that's what

750
00:33:25,530 --> 00:33:29,760
they did but it's actually been formally

751
00:33:27,900 --> 00:33:35,730
proven that for any regular expression

752
00:33:29,760 --> 00:33:38,970
you can invade it with input and so damn

753
00:33:35,730 --> 00:33:40,980
remember his name handsome pettersen nor

754
00:33:38,970 --> 00:33:42,960
didn't put it on there the lib injection

755
00:33:40,980 --> 00:33:46,170
project has been done by someone very

756
00:33:42,960 --> 00:33:49,380
smart which is instead of using regular

757
00:33:46,170 --> 00:33:51,840
expressions it tokenize --is the input

758
00:33:49,380 --> 00:33:54,890
to block to figure out if something

759
00:33:51,840 --> 00:33:57,449
looks like JavaScript and then block oh

760
00:33:54,890 --> 00:33:59,760
they do the same with seat connection

761
00:33:57,450 --> 00:34:02,820
you can block cross-site request forgery

762
00:33:59,760 --> 00:34:03,840
using mod security but it's it's kind of

763
00:34:02,820 --> 00:34:05,909
horrible because you have to create

764
00:34:03,840 --> 00:34:08,520
cookies and then encrypt them then

765
00:34:05,910 --> 00:34:10,418
compare them but you know it's possible

766
00:34:08,520 --> 00:34:13,359
and I've got a sample that I've

767
00:34:10,418 --> 00:34:14,489
loaded you can add hitters if they're

768
00:34:13,359 --> 00:34:16,509
missing this is normally like

769
00:34:14,489 --> 00:34:18,399
vulnerability number one and your pen

770
00:34:16,510 --> 00:34:21,970
test report you forgot to set your

771
00:34:18,399 --> 00:34:24,609
cookie to secure so why do we use mod

772
00:34:21,969 --> 00:34:28,299
security well because the core rule set

773
00:34:24,609 --> 00:34:31,598
gives us like a low false positive set

774
00:34:28,299 --> 00:34:34,960
of rules most security is reasonably

775
00:34:31,599 --> 00:34:37,690
efficient at least you do simple things

776
00:34:34,960 --> 00:34:40,569
relatively easy where relatively is

777
00:34:37,690 --> 00:34:42,250
about that thick and it can be extended

778
00:34:40,569 --> 00:34:44,980
to do complicated things but it gets

779
00:34:42,250 --> 00:34:47,168
complicated really quickly the

780
00:34:44,980 --> 00:34:49,480
limitations are it doesn't understand

781
00:34:47,168 --> 00:34:51,158
your application so it can't fix those

782
00:34:49,480 --> 00:34:53,559
things where you need to know about the

783
00:34:51,159 --> 00:34:55,990
user and what they're trying to do it's

784
00:34:53,559 --> 00:34:59,290
not very good at like changing content

785
00:34:55,989 --> 00:35:01,390
of pages they're daunting syntax its

786
00:34:59,290 --> 00:35:04,630
extendable lower but no one knows how to

787
00:35:01,390 --> 00:35:07,569
do that and if they do they haven't

788
00:35:04,630 --> 00:35:10,000
posted on the internet so business logic

789
00:35:07,569 --> 00:35:11,680
this is the interesting bit this is

790
00:35:10,000 --> 00:35:14,109
where you write code because you need to

791
00:35:11,680 --> 00:35:16,180
fix issues but how do you keep track of

792
00:35:14,109 --> 00:35:18,220
like what users are doing and what this

793
00:35:16,180 --> 00:35:20,799
state is and stuff where they're your

794
00:35:18,220 --> 00:35:23,680
web app does it by putting stuff on the

795
00:35:20,799 --> 00:35:25,450
URL or using cookies or storing stuff on

796
00:35:23,680 --> 00:35:28,089
disk or in a database to keep track of

797
00:35:25,450 --> 00:35:30,160
which user is an admin at the moment and

798
00:35:28,089 --> 00:35:33,339
you know what orders are they allowed to

799
00:35:30,160 --> 00:35:36,368
see so we need to invent our own state

800
00:35:33,339 --> 00:35:37,808
storage just set in front and so that's

801
00:35:36,369 --> 00:35:43,030
where I just checked Renison because

802
00:35:37,809 --> 00:35:46,690
it's a really easy and memory cache to

803
00:35:43,030 --> 00:35:51,640
like store data so this this next layer

804
00:35:46,690 --> 00:35:54,309
is a node proxy so node has libraries

805
00:35:51,640 --> 00:35:57,190
you might have heard about them there's

806
00:35:54,309 --> 00:36:00,549
lots of them this only uses 160

807
00:35:57,190 --> 00:36:01,809
libraries from node but the reason it's

808
00:36:00,549 --> 00:36:05,170
such a small number is because it

809
00:36:01,809 --> 00:36:08,020
doesn't do a lot so basically I'm using

810
00:36:05,170 --> 00:36:10,089
red bird which reps the HTTP proxy and

811
00:36:08,020 --> 00:36:15,579
then Haman which I'll let you manipulate

812
00:36:10,089 --> 00:36:17,190
HTML so this is how a proxy works we

813
00:36:15,579 --> 00:36:21,040
should have done this earlier oh well

814
00:36:17,190 --> 00:36:22,480
you probably know anyway instead of your

815
00:36:21,040 --> 00:36:23,558
browser talking directly to the web

816
00:36:22,480 --> 00:36:26,769
server

817
00:36:23,559 --> 00:36:28,930
it connects to a proxy the proxy like

818
00:36:26,769 --> 00:36:31,180
copies the request and then sends it on

819
00:36:28,930 --> 00:36:33,399
to the real web server gets the response

820
00:36:31,180 --> 00:36:37,930
back copies it and sends it back to the

821
00:36:33,400 --> 00:36:41,680
user what we want to do is like

822
00:36:37,930 --> 00:36:43,779
intercept these the request and the

823
00:36:41,680 --> 00:36:47,049
response and do our own custom logic in

824
00:36:43,779 --> 00:36:49,359
there so we've got an on request Handler

825
00:36:47,049 --> 00:36:51,069
and a non response handler so before

826
00:36:49,359 --> 00:36:52,328
sending the request to the web server we

827
00:36:51,069 --> 00:36:55,029
run it through our handler

828
00:36:52,329 --> 00:36:56,949
it can change stuff then we forward it

829
00:36:55,029 --> 00:36:58,239
on to the server and when we get the

830
00:36:56,949 --> 00:37:00,489
response back we run it through our

831
00:36:58,239 --> 00:37:02,170
handler it can change stuff and then

832
00:37:00,489 --> 00:37:04,390
we've seen the response back to the user

833
00:37:02,170 --> 00:37:06,099
so in this way we can pretty much do

834
00:37:04,390 --> 00:37:07,689
anything that the real web app could do

835
00:37:06,099 --> 00:37:11,140
we could write our entire application

836
00:37:07,689 --> 00:37:14,499
this way if we were insane

837
00:37:11,140 --> 00:37:16,479
so did I show you more complicated

838
00:37:14,499 --> 00:37:19,868
vulnerabilities yeah I did I showed how

839
00:37:16,479 --> 00:37:22,479
you could see other people's orders so

840
00:37:19,869 --> 00:37:25,180
what we need to do here is keep track of

841
00:37:22,479 --> 00:37:27,218
which orders people have and so in order

842
00:37:25,180 --> 00:37:29,469
to do this I'm gonna use a hacker tool

843
00:37:27,219 --> 00:37:34,299
called telnet no I'm not because it's

844
00:37:29,469 --> 00:37:41,890
not there does anyone know the default

845
00:37:34,299 --> 00:37:43,890
port for Reedus ok you guys not helping

846
00:37:41,890 --> 00:37:48,308
here

847
00:37:43,890 --> 00:37:50,679
it's like docker or something whereas

848
00:37:48,309 --> 00:37:54,119
I'm docker do this for me which has been

849
00:37:50,679 --> 00:37:55,929
a docker or it uh someone told me ok no

850
00:37:54,119 --> 00:37:57,519
somewhere in here it's gonna say the

851
00:37:55,929 --> 00:37:59,410
port ok I'm not going to show you the

852
00:37:57,519 --> 00:38:00,939
port but basically what I was going to

853
00:37:59,410 --> 00:38:05,410
show you was rid us hey rid us you put

854
00:38:00,939 --> 00:38:09,359
data and you take it out ok so let's

855
00:38:05,410 --> 00:38:12,069
look at our app so what we want to do is

856
00:38:09,359 --> 00:38:15,719
when the user looks at their order

857
00:38:12,069 --> 00:38:18,519
screen the web server is sending back a

858
00:38:15,719 --> 00:38:22,390
link of HTML with the orders that users

859
00:38:18,519 --> 00:38:25,198
allowed to see to see order 607 in an

860
00:38:22,390 --> 00:38:28,029
order 8 and so we store that in Redis

861
00:38:25,199 --> 00:38:30,699
and then when the user tries to view an

862
00:38:28,029 --> 00:38:32,170
order with chicken read us and see are

863
00:38:30,699 --> 00:38:34,059
they allowed to view that I mean that's

864
00:38:32,170 --> 00:38:36,640
kind of what your app would do is that

865
00:38:34,059 --> 00:38:41,680
we're doing it in the proxy layer

866
00:38:36,640 --> 00:38:45,089
oh yeah should be in my docker compose

867
00:38:41,680 --> 00:38:45,089
okay cool

868
00:38:50,540 --> 00:39:00,960
let's come my kingdom for a port cool so

869
00:38:57,570 --> 00:39:05,220
I don't know how you're supposed to use

870
00:39:00,960 --> 00:39:08,330
Redis but this is how I use it so so

871
00:39:05,220 --> 00:39:12,390
when I go to their view all orders page

872
00:39:08,330 --> 00:39:14,970
you can see that it's sending to read us

873
00:39:12,390 --> 00:39:17,160
like this user is allowed to see or

874
00:39:14,970 --> 00:39:20,450
order seven and eight

875
00:39:17,160 --> 00:39:22,920
and then when I actually go to an order

876
00:39:20,450 --> 00:39:24,509
it's looking that back up again and

877
00:39:22,920 --> 00:39:24,990
checking that there that I'm allowed to

878
00:39:24,510 --> 00:39:27,570
see it

879
00:39:24,990 --> 00:39:28,109
and now if I change the order number to

880
00:39:27,570 --> 00:39:30,930
six

881
00:39:28,110 --> 00:39:33,150
it's blocking me and there's a little

882
00:39:30,930 --> 00:39:35,129
like security violation thing in the URL

883
00:39:33,150 --> 00:39:38,100
that you know you'd make that nice um

884
00:39:35,130 --> 00:39:39,690
how does it actually look in code I

885
00:39:38,100 --> 00:39:43,190
don't know how many of your developers

886
00:39:39,690 --> 00:39:45,450
but hey I'm going to show you anyway so

887
00:39:43,190 --> 00:39:47,160
JavaScript I don't really understand

888
00:39:45,450 --> 00:39:48,930
that this is probably not idiomatic

889
00:39:47,160 --> 00:39:50,759
everything's asynchronous and you have

890
00:39:48,930 --> 00:39:52,980
handlers and handlers and like functions

891
00:39:50,760 --> 00:39:58,530
all the way to the bottom but pretty

892
00:39:52,980 --> 00:40:02,070
much what I'm doing is on their response

893
00:39:58,530 --> 00:40:05,490
to the order page when it's displaying a

894
00:40:02,070 --> 00:40:08,730
list of orders I go through the HTML by

895
00:40:05,490 --> 00:40:11,609
using a selector thingy

896
00:40:08,730 --> 00:40:16,980
and look at the URLs and grab the IDS

897
00:40:11,610 --> 00:40:19,560
out and then shove Ehrman Rudess and

898
00:40:16,980 --> 00:40:21,240
that Redis code I don't know how to do

899
00:40:19,560 --> 00:40:22,830
it properly but it's got like all these

900
00:40:21,240 --> 00:40:25,049
functions and you just Chuck stuff and

901
00:40:22,830 --> 00:40:27,870
rid us and then when someone comes back

902
00:40:25,050 --> 00:40:30,750
to look at an order we check if the

903
00:40:27,870 --> 00:40:33,920
allowed order ID matches the one that

904
00:40:30,750 --> 00:40:33,920
they are supposed to be allowed to see

905
00:40:34,820 --> 00:40:40,380
yeah I'm skipping the payment step I'll

906
00:40:38,400 --> 00:40:42,360
skip through how this works but you can

907
00:40:40,380 --> 00:40:44,700
look it up pretty much we do the same

908
00:40:42,360 --> 00:40:46,610
thing so we're like which steps of the

909
00:40:44,700 --> 00:40:48,899
payment process has the user been to

910
00:40:46,610 --> 00:40:50,510
don't let them go to step forward till

911
00:40:48,900 --> 00:40:53,040
they finish step 3

912
00:40:50,510 --> 00:40:56,820
hey well good animation on an arrow

913
00:40:53,040 --> 00:40:58,440
there mmm okay cool didn't see that and

914
00:40:56,820 --> 00:40:59,890
we can do other things as well that I

915
00:40:58,440 --> 00:41:02,560
had to do and

916
00:40:59,890 --> 00:41:05,140
and modsecurity and laughs like we can

917
00:41:02,560 --> 00:41:09,130
just use a CSS style selector across the

918
00:41:05,140 --> 00:41:12,310
HTML stream and as the HTML pipes

919
00:41:09,130 --> 00:41:14,590
through node we can run a function on it

920
00:41:12,310 --> 00:41:20,860
and you know turn off the autocomplete

921
00:41:14,590 --> 00:41:23,410
flag of HTML or PCI compliance here I'm

922
00:41:20,860 --> 00:41:25,360
getting the credit card number div tag

923
00:41:23,410 --> 00:41:31,359
and replacing the value with a bunch of

924
00:41:25,360 --> 00:41:33,130
asterisks as asterisk because stars and

925
00:41:31,360 --> 00:41:36,220
you can do other kind of business logic

926
00:41:33,130 --> 00:41:37,810
things like you know check how strong

927
00:41:36,220 --> 00:41:40,060
people's passwords are like the app

928
00:41:37,810 --> 00:41:42,670
might allow weak passwords but you know

929
00:41:40,060 --> 00:41:44,830
your your code could check against have

930
00:41:42,670 --> 00:41:49,450
I been poned for the youth email address

931
00:41:44,830 --> 00:41:51,310
and this is something in a yes to check

932
00:41:49,450 --> 00:41:54,910
if the password strong enough that was

933
00:41:51,310 --> 00:41:56,770
jeans talk you know encrypt values that

934
00:41:54,910 --> 00:41:59,410
are in hidden fields that shouldn't be

935
00:41:56,770 --> 00:42:01,450
in fine text or put tamper protection to

936
00:41:59,410 --> 00:42:02,529
stop people modifying stuff I mean

937
00:42:01,450 --> 00:42:04,060
basically the world is your oyster

938
00:42:02,530 --> 00:42:06,580
because you're writing code now write

939
00:42:04,060 --> 00:42:10,060
anything you can write in code you can

940
00:42:06,580 --> 00:42:12,069
write and your proxy layer why should

941
00:42:10,060 --> 00:42:13,299
you use node because javascript is the

942
00:42:12,070 --> 00:42:17,860
language of the Internet

943
00:42:13,300 --> 00:42:21,580
TM I haven't tested whether it's fast

944
00:42:17,860 --> 00:42:25,000
scale scalable but people use this node

945
00:42:21,580 --> 00:42:27,940
proxy library to front their node EPS so

946
00:42:25,000 --> 00:42:30,520
it must be pretty fast and because it's

947
00:42:27,940 --> 00:42:32,650
manipulating HTML in a streaming fashion

948
00:42:30,520 --> 00:42:35,350
you don't have to like buffer up the

949
00:42:32,650 --> 00:42:39,130
response edit the HTML as a giant string

950
00:42:35,350 --> 00:42:42,880
and then send the response through bad

951
00:42:39,130 --> 00:42:45,160
things how programming is so hard but I

952
00:42:42,880 --> 00:42:47,740
mean this is this I guess is a proof of

953
00:42:45,160 --> 00:42:49,870
concept example of how you could do it

954
00:42:47,740 --> 00:42:52,479
but you could rep the stuff up into

955
00:42:49,870 --> 00:42:54,220
libraries to make it easier so you could

956
00:42:52,480 --> 00:42:56,590
be basically saying you know replace

957
00:42:54,220 --> 00:42:57,879
this with this store this with that and

958
00:42:56,590 --> 00:43:00,730
not have to write their readers code

959
00:42:57,880 --> 00:43:02,170
every time etc and we still need mod

960
00:43:00,730 --> 00:43:04,030
security because I don't want to write

961
00:43:02,170 --> 00:43:07,240
regular expressions in JavaScript to

962
00:43:04,030 --> 00:43:10,360
test for sequel injection and so like

963
00:43:07,240 --> 00:43:12,700
which tool is the right one for this as

964
00:43:10,360 --> 00:43:13,690
it is like a question so some of the

965
00:43:12,700 --> 00:43:15,640
vulnerabilities are

966
00:43:13,690 --> 00:43:19,470
thing did in both tools and then pick

967
00:43:15,640 --> 00:43:24,970
the nicest virtual patch out of the two

968
00:43:19,470 --> 00:43:28,330
so virtual patching is a thing people

969
00:43:24,970 --> 00:43:30,910
now know about it in this room you can

970
00:43:28,330 --> 00:43:32,590
fix applications without having access

971
00:43:30,910 --> 00:43:35,230
to the source code or without waiting

972
00:43:32,590 --> 00:43:36,940
for a release and you can do basic

973
00:43:35,230 --> 00:43:38,380
things like blocking your rolls or you

974
00:43:36,940 --> 00:43:41,320
can do more complex things like

975
00:43:38,380 --> 00:43:43,870
basically writing application logic in a

976
00:43:41,320 --> 00:43:46,110
different layer now this gives you

977
00:43:43,870 --> 00:43:48,700
another tool to add to your tool belt

978
00:43:46,110 --> 00:43:50,800
and you know as security professionals

979
00:43:48,700 --> 00:43:54,339
the more tools we have the better or

980
00:43:50,800 --> 00:43:56,650
something and if you prepare this

981
00:43:54,340 --> 00:43:59,590
infrastructure in advance you can be

982
00:43:56,650 --> 00:44:02,710
ready to respond to an attack so putting

983
00:43:59,590 --> 00:44:04,420
modsecurity in front of your application

984
00:44:02,710 --> 00:44:06,570
as as simple as changing your Apache

985
00:44:04,420 --> 00:44:08,620
config if you're using Apache already

986
00:44:06,570 --> 00:44:10,510
and it's not going to add any

987
00:44:08,620 --> 00:44:13,359
performance impact until you start

988
00:44:10,510 --> 00:44:15,550
turning stuff on so you know it's really

989
00:44:13,360 --> 00:44:18,820
easy to be ready to have that module

990
00:44:15,550 --> 00:44:20,410
installed so that you can use it or you

991
00:44:18,820 --> 00:44:25,450
could have this as a separate layer in

992
00:44:20,410 --> 00:44:27,460
front of your app that cool diagram of

993
00:44:25,450 --> 00:44:29,980
the animation that took me way too long

994
00:44:27,460 --> 00:44:33,160
most procrastinating content we're doing

995
00:44:29,980 --> 00:44:34,990
animation now we can react quickly and

996
00:44:33,160 --> 00:44:38,440
that's what all those things didn't give

997
00:44:34,990 --> 00:44:41,799
us the ability to do so you know that's

998
00:44:38,440 --> 00:44:43,930
kind of I guess that take away just to

999
00:44:41,800 --> 00:44:45,850
recap we're only patching like actual

1000
00:44:43,930 --> 00:44:48,580
vulnerabilities we're not just turning

1001
00:44:45,850 --> 00:44:51,610
modsecurity on for a whole site we're

1002
00:44:48,580 --> 00:44:56,529
not doing anything crazy so there should

1003
00:44:51,610 --> 00:45:00,400
be very low risk all this talk is not an

1004
00:44:56,530 --> 00:45:04,060
advertisement advertisement and before I

1005
00:45:00,400 --> 00:45:06,100
finish I have one second left I'd like

1006
00:45:04,060 --> 00:45:08,650
to tell you about a wast de New Zealand

1007
00:45:06,100 --> 00:45:11,049
so Kim myself and a couple of other

1008
00:45:08,650 --> 00:45:13,780
people who might be here organize this

1009
00:45:11,050 --> 00:45:16,870
free conference the next one is in

1010
00:45:13,780 --> 00:45:19,300
February it's an Auckland did I say that

1011
00:45:16,870 --> 00:45:21,460
was free and it's a web security

1012
00:45:19,300 --> 00:45:24,130
conference and it would be really great

1013
00:45:21,460 --> 00:45:27,210
for you all to come did I mention it was

1014
00:45:24,130 --> 00:45:29,610
free but

1015
00:45:27,210 --> 00:45:31,290
I guess $50 is in a barrier anyway so we

1016
00:45:29,610 --> 00:45:34,020
should just charge 50 bucks but then we

1017
00:45:31,290 --> 00:45:36,060
have to do paperwork so yeah it's free

1018
00:45:34,020 --> 00:45:39,600
we're really looking for people to speak

1019
00:45:36,060 --> 00:45:42,180
share their stories now because this

1020
00:45:39,600 --> 00:45:44,819
conference is about web developers

1021
00:45:42,180 --> 00:45:46,799
learning about security as well as

1022
00:45:44,820 --> 00:45:49,170
security professionals honing their

1023
00:45:46,800 --> 00:45:50,850
skills they have two streams so if

1024
00:45:49,170 --> 00:45:52,770
you're a developer and you have a story

1025
00:45:50,850 --> 00:45:54,720
this year about how you've done security

1026
00:45:52,770 --> 00:45:56,640
and your organization things you have

1027
00:45:54,720 --> 00:45:59,370
learned how you do your JavaScript or

1028
00:45:56,640 --> 00:46:00,930
dotnet or Java or Ruby or whatever we'd

1029
00:45:59,370 --> 00:46:03,180
love to have talks like that submitted

1030
00:46:00,930 --> 00:46:04,710
or if you're a security Pro and you want

1031
00:46:03,180 --> 00:46:06,629
to like talk about hardcore hacking

1032
00:46:04,710 --> 00:46:11,070
stuff you know we have a room for you as

1033
00:46:06,630 --> 00:46:13,500
well cool yeah that was supposed to be

1034
00:46:11,070 --> 00:46:15,330
positive the other thing I would like to

1035
00:46:13,500 --> 00:46:17,340
point out is that if you are a

1036
00:46:15,330 --> 00:46:19,799
Wellingtonians there's an eyewash

1037
00:46:17,340 --> 00:46:22,890
chapter if you're a Christchurch own Ian

1038
00:46:19,800 --> 00:46:24,000
there's a there's a OS chapter and if

1039
00:46:22,890 --> 00:46:25,560
you're an Auckland oh there's a chapter

1040
00:46:24,000 --> 00:46:29,040
that doesn't have any meetings but we'll

1041
00:46:25,560 --> 00:46:30,390
soon we say that hopefully but there's

1042
00:46:29,040 --> 00:46:32,400
also other meetups that go on on

1043
00:46:30,390 --> 00:46:34,740
Wellington so if you've got interested

1044
00:46:32,400 --> 00:46:38,820
in this security thing from this

1045
00:46:34,740 --> 00:46:40,680
conference I bought a URL because the

1046
00:46:38,820 --> 00:46:42,660
meetup URL was too long to put on my

1047
00:46:40,680 --> 00:46:44,490
slide so just go to security meetups

1048
00:46:42,660 --> 00:46:46,740
comment a list the Wellington meetup so

1049
00:46:44,490 --> 00:46:48,959
you can go to some of them are closed

1050
00:46:46,740 --> 00:46:51,270
most of them are open access and they

1051
00:46:48,960 --> 00:46:56,400
have different focuses so go there and

1052
00:46:51,270 --> 00:46:58,620
have a look cool sorry for going three

1053
00:46:56,400 --> 00:47:00,960
minutes overtime oh no one minute and

1054
00:46:58,620 --> 00:47:03,299
fifty three how do you use clocks um

1055
00:47:00,960 --> 00:47:04,500
thank you very much for attending this

1056
00:47:03,300 --> 00:47:05,590
session I hope you had a great

1057
00:47:04,500 --> 00:47:10,499
conference thank you

1058
00:47:05,590 --> 00:47:10,499
[Applause]

