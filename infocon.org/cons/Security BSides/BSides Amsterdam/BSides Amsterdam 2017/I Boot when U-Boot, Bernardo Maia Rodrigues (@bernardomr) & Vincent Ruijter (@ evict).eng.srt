1
00:00:04,510 --> 00:00:09,799
hello everyone

2
00:00:07,389 --> 00:00:12,379
so Bernardo and<font color="#CCCCCC"> I we will</font><font color="#E5E5E5"> be talking</font>

3
00:00:09,799 --> 00:00:14,928
about hacking<font color="#E5E5E5"> bootloaders are creating a</font>

4
00:00:12,380 --> 00:00:18,050
boot kit and our talk is called<font color="#E5E5E5"> high</font>

5
00:00:14,929 --> 00:00:21,169
boot when you boot<font color="#E5E5E5"> so yeah</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> I get to</font>

6
00:00:18,050 --> 00:00:23,810
get<font color="#E5E5E5"> the pun</font><font color="#CCCCCC"> so we first of all</font><font color="#E5E5E5"> begin</font>

7
00:00:21,169 --> 00:00:25,820
<font color="#E5E5E5">with</font><font color="#CCCCCC"> the introduction</font><font color="#E5E5E5"> what we do who</font><font color="#CCCCCC"> you</font>

8
00:00:23,810 --> 00:00:27,410
<font color="#E5E5E5">are</font><font color="#CCCCCC"> then we're gonna talk about</font><font color="#E5E5E5"> malware</font>

9
00:00:25,820 --> 00:00:30,020
that already exists it runs on embedded

10
00:00:27,410 --> 00:00:32,210
<font color="#CCCCCC">devices</font><font color="#E5E5E5"> we're gonna see how embedded</font>

11
00:00:30,020 --> 00:00:34,040
device<font color="#E5E5E5"> boots then we're</font><font color="#CCCCCC"> gonna have a</font>

12
00:00:32,210 --> 00:00:35,540
<font color="#E5E5E5">look at gaining persistence on embedded</font>

13
00:00:34,040 --> 00:00:37,070
<font color="#CCCCCC">devices</font><font color="#E5E5E5"> then we're going to talk about</font>

14
00:00:35,540 --> 00:00:40,150
<font color="#E5E5E5">riding a boot kit and then how you can</font>

15
00:00:37,070 --> 00:00:43,130
<font color="#CCCCCC">detect the boot kid and I can mitigate</font>

16
00:00:40,150 --> 00:00:45,620
involved here<font color="#CCCCCC"> so my name is Vincent I</font>

17
00:00:43,130 --> 00:00:47,480
work at the Cape Ian<font color="#E5E5E5"> Red Team I'm a</font>

18
00:00:45,620 --> 00:00:49,459
motivator<font color="#CCCCCC"> for New Amsterdam so you know</font>

19
00:00:47,480 --> 00:00:49,819
if you want<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> someday just let us</font>

20
00:00:49,460 --> 00:00:51,350
know

21
00:00:49,820 --> 00:00:53,030
I think beeping<font color="#E5E5E5"> is around here as well</font>

22
00:00:51,350 --> 00:00:55,040
it's right there<font color="#CCCCCC"> you can you know ping</font>

23
00:00:53,030 --> 00:00:57,500
us send<font color="#E5E5E5"> some slides you can do a talk</font>

24
00:00:55,040 --> 00:00:58,820
I like Linux I like low level stuff and

25
00:00:57,500 --> 00:01:00,950
since we're giving a talk<font color="#E5E5E5"> about boot</font>

26
00:00:58,820 --> 00:01:05,600
<font color="#CCCCCC">kits</font><font color="#E5E5E5"> I might not go to us anytime</font><font color="#CCCCCC"> soon</font>

27
00:01:00,950 --> 00:01:07,970
and<font color="#E5E5E5"> yeah I live in</font><font color="#CCCCCC"> Amsterdam so my name</font>

28
00:01:05,600 --> 00:01:10,610
is Bernardo I'm Brazilian<font color="#CCCCCC"> I'm also</font>

29
00:01:07,970 --> 00:01:12,820
working at<font color="#E5E5E5"> the Cape Ian Red Team I place</font>

30
00:01:10,610 --> 00:01:15,890
it<font color="#CCCCCC"> here F of</font><font color="#E5E5E5"> the Goonies it's a</font>

31
00:01:12,820 --> 00:01:20,240
Brazilian CTF team and I'm very good at

32
00:01:15,890 --> 00:01:23,060
breaking routers so let's start so<font color="#E5E5E5"> mower</font>

33
00:01:20,240 --> 00:01:23,839
or<font color="#E5E5E5"> targeting embedded devices</font><font color="#CCCCCC"> spoiler</font>

34
00:01:23,060 --> 00:01:25,370
<font color="#E5E5E5">alert</font>

35
00:01:23,840 --> 00:01:27,350
this is not something<font color="#CCCCCC"> new so</font><font color="#E5E5E5"> there are</font>

36
00:01:25,370 --> 00:01:30,979
like lots of mower<font color="#E5E5E5"> already targeting</font>

37
00:01:27,350 --> 00:01:34,520
embedded devices so the CIA<font color="#CCCCCC"> cherry</font>

38
00:01:30,979 --> 00:01:36,710
blossom on<font color="#E5E5E5"> the likud documents from</font>

39
00:01:34,520 --> 00:01:38,690
WikiLeaks<font color="#CCCCCC"> they all describe it how they</font>

40
00:01:36,710 --> 00:01:41,240
are creating backdoor dreamers and that

41
00:01:38,690 --> 00:01:44,330
we can like flash on home routers but

42
00:01:41,240 --> 00:01:48,470
<font color="#E5E5E5">there's also known botnets like</font><font color="#CCCCCC"> me right</font>

43
00:01:44,330 --> 00:01:50,900
so targeting embedded devices using weak

44
00:01:48,470 --> 00:01:56,270
passwords but also you know<font color="#E5E5E5"> flasher dot</font>

45
00:01:50,900 --> 00:01:58,790
a<font color="#E5E5E5"> witchy it was basically a dd-wrt</font>

46
00:01:56,270 --> 00:02:00,949
modified femur<font color="#E5E5E5"> so there are like lots of</font>

47
00:01:58,790 --> 00:02:02,570
kinds of<font color="#E5E5E5"> our targeting embedded devices</font>

48
00:02:00,950 --> 00:02:04,939
<font color="#CCCCCC">some of them</font><font color="#E5E5E5"> don't care about</font>

49
00:02:02,570 --> 00:02:07,639
persistence<font color="#E5E5E5"> for example Mira Mira is</font>

50
00:02:04,939 --> 00:02:09,739
<font color="#E5E5E5">just in like infecting a device and just</font>

51
00:02:07,640 --> 00:02:12,769
start scanning the<font color="#E5E5E5"> internet</font><font color="#CCCCCC"> and some</font>

52
00:02:09,739 --> 00:02:15,200
some like<font color="#E5E5E5"> more like</font><font color="#CCCCCC"> the CI</font><font color="#E5E5E5"> they want</font>

53
00:02:12,769 --> 00:02:16,330
from<font color="#CCCCCC"> CI a is like</font><font color="#E5E5E5"> the flash of a they</font>

54
00:02:15,200 --> 00:02:18,190
have like<font color="#E5E5E5"> some</font><font color="#CCCCCC"> kind of</font>

55
00:02:16,330 --> 00:02:22,830
but they don't<font color="#CCCCCC"> care about the bootloader</font>

56
00:02:18,190 --> 00:02:25,390
they just like flashing a new femur<font color="#E5E5E5"> so</font>

57
00:02:22,830 --> 00:02:26,800
so<font color="#E5E5E5"> yeah boot process of on a meta device</font>

58
00:02:25,390 --> 00:02:31,690
is like slightly derivative<font color="#E5E5E5"> here</font>

59
00:02:26,800 --> 00:02:33,310
<font color="#CCCCCC">everyday</font><font color="#E5E5E5"> x86 device so the</font><font color="#CCCCCC"> none or the</font>

60
00:02:31,690 --> 00:02:36,160
<font color="#CCCCCC">nord in this case in nor</font><font color="#E5E5E5"> flash</font><font color="#CCCCCC"> it's a</font>

61
00:02:33,310 --> 00:02:38,500
<font color="#CCCCCC">hard-coded</font><font color="#E5E5E5"> inside the</font><font color="#CCCCCC"> cpu boot code so</font>

62
00:02:36,160 --> 00:02:40,120
the<font color="#CCCCCC"> moment</font><font color="#E5E5E5"> you turn on the</font><font color="#CCCCCC"> CPU it boots</font>

63
00:02:38,500 --> 00:02:41,890
to the flash<font color="#E5E5E5"> and on the flash it like</font>

64
00:02:40,120 --> 00:02:43,690
goes through<font color="#E5E5E5"> bootloader the bootloader</font>

65
00:02:41,890 --> 00:02:45,670
<font color="#CCCCCC">initializes the</font><font color="#E5E5E5"> hardware and then it</font>

66
00:02:43,690 --> 00:02:47,710
like jumps to the firmware<font color="#E5E5E5"> that's gonna</font>

67
00:02:45,670 --> 00:02:49,179
decompress the lzma because the kernel

68
00:02:47,710 --> 00:02:52,450
is usually compressed because<font color="#CCCCCC"> it saves</font>

69
00:02:49,180 --> 00:02:54,580
space<font color="#E5E5E5"> so it like</font><font color="#CCCCCC"> on lzma is the kernel</font>

70
00:02:52,450 --> 00:02:57,310
into rum and then<font color="#CCCCCC"> it you know jumps to</font>

71
00:02:54,580 --> 00:02:58,930
the jumps to on jumps to the first

72
00:02:57,310 --> 00:03:00,400
<font color="#E5E5E5">instruction of the kernel and then from</font>

73
00:02:58,930 --> 00:03:02,770
there on the kernel<font color="#E5E5E5"> mounts a file system</font>

74
00:03:00,400 --> 00:03:04,720
and then kicks off in it<font color="#E5E5E5"> and there</font><font color="#CCCCCC"> you</font>

75
00:03:02,770 --> 00:03:06,130
go<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> in better devices booted you</font>

76
00:03:04,720 --> 00:03:08,920
can see the typical boot process over

77
00:03:06,130 --> 00:03:12,690
there<font color="#E5E5E5"> boot loader firmware on</font><font color="#CCCCCC"> LC</font><font color="#E5E5E5"> mains</font>

78
00:03:08,920 --> 00:03:15,429
<font color="#CCCCCC">rom and</font><font color="#E5E5E5"> then you're basically</font><font color="#CCCCCC"> done so</font>

79
00:03:12,690 --> 00:03:16,630
<font color="#E5E5E5">persistence why having a persistence at</font>

80
00:03:15,430 --> 00:03:18,880
<font color="#CCCCCC">a boot loader level why is it</font>

81
00:03:16,630 --> 00:03:20,500
interesting<font color="#E5E5E5"> it's because when you have</font>

82
00:03:18,880 --> 00:03:22,570
like a few<font color="#E5E5E5"> more upgrade you know you</font>

83
00:03:20,500 --> 00:03:24,070
don't<font color="#E5E5E5"> you go to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> d-link website you</font>

84
00:03:22,570 --> 00:03:25,810
download the femur<font color="#E5E5E5"> when you flash your</font>

85
00:03:24,070 --> 00:03:27,910
femur it's not<font color="#E5E5E5"> changing the bootloader</font>

86
00:03:25,810 --> 00:03:30,340
partition<font color="#E5E5E5"> it's just changing like the</font>

87
00:03:27,910 --> 00:03:31,900
femur<font color="#CCCCCC"> and all the other partitions</font><font color="#E5E5E5"> but</font>

88
00:03:30,340 --> 00:03:33,670
<font color="#E5E5E5">it doesn't care about boot loaders</font>

89
00:03:31,900 --> 00:03:35,650
because reflashing boot loaders is a

90
00:03:33,670 --> 00:03:38,019
sensitive operation if you do<font color="#E5E5E5"> something</font>

91
00:03:35,650 --> 00:03:40,480
wrong you<font color="#E5E5E5"> will be</font><font color="#CCCCCC"> weaker device and you</font>

92
00:03:38,020 --> 00:03:42,820
need like to open and manually<font color="#CCCCCC"> reflash</font>

93
00:03:40,480 --> 00:03:44,829
the<font color="#CCCCCC"> spi chip we had to do</font><font color="#E5E5E5"> this a lot yes</font>

94
00:03:42,820 --> 00:03:47,380
<font color="#E5E5E5">even we were preparing our demos like</font>

95
00:03:44,830 --> 00:03:48,970
yesterday<font color="#E5E5E5"> I</font><font color="#CCCCCC"> picked the virus and it's</font>

96
00:03:47,380 --> 00:03:51,070
also<font color="#E5E5E5"> very</font><font color="#CCCCCC"> interesting because you</font><font color="#E5E5E5"> bypass</font>

97
00:03:48,970 --> 00:03:53,770
lots of<font color="#E5E5E5"> security features from the</font>

98
00:03:51,070 --> 00:03:55,959
<font color="#E5E5E5">operating</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> so all those UEFI boot</font>

99
00:03:53,770 --> 00:03:57,700
<font color="#E5E5E5">kits on Windows and all those sort of</font>

100
00:03:55,959 --> 00:04:02,950
thing<font color="#E5E5E5"> and it's</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> difficult for you to</font>

101
00:03:57,700 --> 00:04:05,350
detect but so just<font color="#CCCCCC"> like</font><font color="#E5E5E5"> NSA I'm also</font>

102
00:04:02,950 --> 00:04:09,429
really good<font color="#E5E5E5"> at like breaking routers so</font>

103
00:04:05,350 --> 00:04:12,549
there's this document<font color="#E5E5E5"> from on the</font>

104
00:04:09,430 --> 00:04:14,980
Snowden documents so<font color="#E5E5E5"> that's a</font><font color="#CCCCCC"> soldering</font>

105
00:04:12,550 --> 00:04:17,079
basically said<font color="#CCCCCC"> that NSA tried to like</font>

106
00:04:14,980 --> 00:04:19,899
<font color="#CCCCCC">reflash a</font><font color="#E5E5E5"> femur from like a</font><font color="#CCCCCC"> syrian</font>

107
00:04:17,079 --> 00:04:22,060
router<font color="#E5E5E5"> and it kind of broke the internet</font>

108
00:04:19,899 --> 00:04:25,150
for the whole<font color="#E5E5E5"> country for a couple of</font>

109
00:04:22,060 --> 00:04:27,280
like hours so it's a very sensitive

110
00:04:25,150 --> 00:04:30,150
operation<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> very easy for</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> to mess</font>

111
00:04:27,280 --> 00:04:32,400
up<font color="#CCCCCC"> and it's not like if you</font>

112
00:04:30,150 --> 00:04:35,429
create like a boot kit<font color="#E5E5E5"> or a boot boot</font>

113
00:04:32,400 --> 00:04:37,289
boot kit for one device<font color="#E5E5E5"> it doesn't mean</font>

114
00:04:35,430 --> 00:04:39,390
it's gonna<font color="#E5E5E5"> work</font><font color="#CCCCCC"> for other devices other</font>

115
00:04:37,290 --> 00:04:40,740
<font color="#E5E5E5">similar</font><font color="#CCCCCC"> devices</font><font color="#E5E5E5"> so it's very like</font>

116
00:04:39,390 --> 00:04:42,599
<font color="#CCCCCC">particular to socks</font>

117
00:04:40,740 --> 00:04:44,580
it's very pretty it's quite<font color="#E5E5E5"> something</font>

118
00:04:42,600 --> 00:04:53,100
like that you need<font color="#CCCCCC"> to work a lot and</font>

119
00:04:44,580 --> 00:04:55,349
yeah so yeah persistence can be gained

120
00:04:53,100 --> 00:04:56,910
in like various ways<font color="#CCCCCC"> one</font><font color="#E5E5E5"> of them is by</font>

121
00:04:55,350 --> 00:04:58,980
modifying<font color="#CCCCCC"> the in it or the in it Rd</font>

122
00:04:56,910 --> 00:05:00,810
<font color="#E5E5E5">scripts you can also make a loadable</font>

123
00:04:58,980 --> 00:05:02,790
kernel module that loads<font color="#E5E5E5"> like after the</font>

124
00:05:00,810 --> 00:05:05,610
kernel loads the file system modules you

125
00:05:02,790 --> 00:05:08,780
<font color="#CCCCCC">can modify ufi or BIOS code</font><font color="#E5E5E5"> you can also</font>

126
00:05:05,610 --> 00:05:12,720
modify the code in the MBR and<font color="#CCCCCC"> the</font><font color="#E5E5E5"> VBR</font>

127
00:05:08,780 --> 00:05:14,580
and also again spoiler let boot<font color="#CCCCCC"> kits</font>

128
00:05:12,720 --> 00:05:16,920
they are not new so<font color="#E5E5E5"> nowadays</font><font color="#CCCCCC"> there are</font>

129
00:05:14,580 --> 00:05:18,990
like handsome wares<font color="#E5E5E5"> like targeting MBR</font>

130
00:05:16,920 --> 00:05:20,820
so they're just putting like something

131
00:05:18,990 --> 00:05:24,060
<font color="#E5E5E5">it's a message there and they were only</font>

132
00:05:20,820 --> 00:05:26,250
unlock after<font color="#E5E5E5"> you</font><font color="#CCCCCC"> pay stuff but so -</font>

133
00:05:24,060 --> 00:05:29,010
introducing<font color="#CCCCCC"> boot kits here is like the</font>

134
00:05:26,250 --> 00:05:31,110
old boot Android boot kit so some<font color="#E5E5E5"> people</font>

135
00:05:29,010 --> 00:05:33,659
said<font color="#CCCCCC"> that was either like</font>

136
00:05:31,110 --> 00:05:35,760
compromising devices physically or

137
00:05:33,660 --> 00:05:37,950
something like<font color="#CCCCCC"> firmware update they</font>

138
00:05:35,760 --> 00:05:40,740
don't know<font color="#E5E5E5"> exactly but it's a boot key</font>

139
00:05:37,950 --> 00:05:44,159
targeting<font color="#E5E5E5"> Android devices</font><font color="#CCCCCC"> so if you just</font>

140
00:05:40,740 --> 00:05:45,810
like reflash or femur<font color="#E5E5E5"> it's also like</font><font color="#CCCCCC"> not</font>

141
00:05:44,160 --> 00:05:47,580
changing the bootloader partition so

142
00:05:45,810 --> 00:05:48,210
it's<font color="#E5E5E5"> something like very difficult for</font>

143
00:05:47,580 --> 00:05:51,690
you to<font color="#CCCCCC"> fix</font>

144
00:05:48,210 --> 00:05:55,260
and also the hacking team<font color="#E5E5E5"> they had like</font>

145
00:05:51,690 --> 00:05:58,460
a<font color="#E5E5E5"> commercial you</font><font color="#CCCCCC"> ufi boot kit but</font>

146
00:05:55,260 --> 00:06:00,780
they're more like an implant<font color="#E5E5E5"> so if some</font>

147
00:05:58,460 --> 00:06:03,330
some motherboards like some notebooks

148
00:06:00,780 --> 00:06:06,900
<font color="#E5E5E5">they had like they wouldn't protect that</font>

149
00:06:03,330 --> 00:06:09,630
you you have UEFI area<font color="#E5E5E5"> so sometimes you</font>

150
00:06:06,900 --> 00:06:12,750
could exploit that to<font color="#E5E5E5"> rewrite that</font><font color="#CCCCCC"> but</font>

151
00:06:09,630 --> 00:06:15,719
most of the time it's by opening the

152
00:06:12,750 --> 00:06:19,890
device physically and reflashing<font color="#E5E5E5"> the</font><font color="#CCCCCC"> spi</font>

153
00:06:15,720 --> 00:06:22,410
<font color="#E5E5E5">the</font><font color="#CCCCCC"> bios or the UEFI</font><font color="#E5E5E5"> so there's like no</font>

154
00:06:19,890 --> 00:06:24,469
<font color="#E5E5E5">more and they just like infect your</font>

155
00:06:22,410 --> 00:06:27,720
computer<font color="#E5E5E5"> the normal way just like</font>

156
00:06:24,470 --> 00:06:29,310
fishing<font color="#E5E5E5"> drive-by downloads and they they</font>

157
00:06:27,720 --> 00:06:34,800
use<font color="#E5E5E5"> a boot kit for maintaining</font>

158
00:06:29,310 --> 00:06:37,650
persistence so the boot kit we created

159
00:06:34,800 --> 00:06:40,140
it's based on you boot<font color="#E5E5E5"> which is like a</font>

160
00:06:37,650 --> 00:06:42,510
<font color="#CCCCCC">bootloader for embedded devices</font><font color="#E5E5E5"> it works</font>

161
00:06:40,140 --> 00:06:43,680
for lots<font color="#E5E5E5"> of arm devices also</font><font color="#CCCCCC"> MIPS</font>

162
00:06:42,510 --> 00:06:46,259
devices<font color="#E5E5E5"> it's</font>

163
00:06:43,680 --> 00:06:50,100
<font color="#E5E5E5">open-source</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> will explain in a bit but</font>

164
00:06:46,259 --> 00:06:51,509
in<font color="#E5E5E5"> order for</font><font color="#CCCCCC"> us to change the device we</font>

165
00:06:50,100 --> 00:06:53,610
don't need<font color="#CCCCCC"> the physical</font><font color="#E5E5E5"> access</font>

166
00:06:51,509 --> 00:06:56,100
we just need<font color="#E5E5E5"> root access on the device</font>

167
00:06:53,610 --> 00:06:56,550
and we<font color="#E5E5E5"> we're going to explain how it</font>

168
00:06:56,100 --> 00:07:00,960
works

169
00:06:56,550 --> 00:07:03,120
so Linux devices they<font color="#CCCCCC"> 3d part the flash</font>

170
00:07:00,960 --> 00:07:07,919
partition as a memory technology device

171
00:07:03,120 --> 00:07:10,710
<font color="#CCCCCC">MTD and it's it's not</font><font color="#E5E5E5"> exactly like char</font>

172
00:07:07,919 --> 00:07:12,530
blocks or you know blocks block<font color="#E5E5E5"> file</font>

173
00:07:10,710 --> 00:07:15,979
systems that<font color="#CCCCCC"> you're used to</font><font color="#E5E5E5"> on Linux</font>

174
00:07:12,530 --> 00:07:19,109
<font color="#CCCCCC">they just like a raw</font><font color="#E5E5E5"> flash memory and</font>

175
00:07:15,979 --> 00:07:22,710
you there's not like<font color="#CCCCCC"> a partition is not</font>

176
00:07:19,110 --> 00:07:24,150
stored on the like each partition<font color="#E5E5E5"> before</font>

177
00:07:22,710 --> 00:07:25,979
starting each partition that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not like</font>

178
00:07:24,150 --> 00:07:28,138
nothing like<font color="#CCCCCC"> a partition table so the</font>

179
00:07:25,979 --> 00:07:29,849
kernel<font color="#E5E5E5"> it's listed on the kernel where</font>

180
00:07:28,139 --> 00:07:32,009
the partition begin and where the

181
00:07:29,849 --> 00:07:33,870
partition ends so on<font color="#E5E5E5"> this case you can</font>

182
00:07:32,009 --> 00:07:36,300
see like the<font color="#E5E5E5"> you boot partition</font><font color="#CCCCCC"> I also</font>

183
00:07:33,870 --> 00:07:39,930
like the actual<font color="#CCCCCC"> film where like an AR</font>

184
00:07:36,300 --> 00:07:42,780
TIFF partition<font color="#E5E5E5"> and the bad thing for us</font>

185
00:07:39,930 --> 00:07:44,849
when we were like<font color="#CCCCCC"> started testing this</font>

186
00:07:42,780 --> 00:07:47,219
it's like the bootloader partition is

187
00:07:44,849 --> 00:07:49,949
always mounted as read-only<font color="#CCCCCC"> like not</font>

188
00:07:47,220 --> 00:07:52,620
always but<font color="#CCCCCC"> most of the time so if we get</font>

189
00:07:49,949 --> 00:07:55,110
a root<font color="#CCCCCC"> shell on the device we need</font><font color="#E5E5E5"> to DD</font>

190
00:07:52,620 --> 00:07:57,780
<font color="#CCCCCC">our boot get into the device but</font><font color="#E5E5E5"> that</font>

191
00:07:55,110 --> 00:08:00,030
that like partition is read-only so how

192
00:07:57,780 --> 00:08:04,500
can we do how can we fix that<font color="#CCCCCC"> there's</font>

193
00:08:00,030 --> 00:08:07,138
like<font color="#CCCCCC"> this -</font><font color="#E5E5E5"> kernel model called MTD RW</font>

194
00:08:04,500 --> 00:08:09,930
<font color="#E5E5E5">so which is basically a</font><font color="#CCCCCC"> linux</font><font color="#E5E5E5"> kernel</font>

195
00:08:07,139 --> 00:08:11,970
module<font color="#E5E5E5"> so I can just</font><font color="#CCCCCC"> install load that</font>

196
00:08:09,930 --> 00:08:14,009
Linux kernel module<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that would</font>

197
00:08:11,970 --> 00:08:16,710
change<font color="#CCCCCC"> the partition flags from</font>

198
00:08:14,009 --> 00:08:18,870
<font color="#E5E5E5">read-only to read and write so this is</font>

199
00:08:16,710 --> 00:08:21,659
good<font color="#E5E5E5"> for us</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> now from a root</font>

200
00:08:18,870 --> 00:08:25,139
<font color="#CCCCCC">shell</font><font color="#E5E5E5"> we can change that partition to</font>

201
00:08:21,659 --> 00:08:27,479
something else<font color="#E5E5E5"> so it this is</font><font color="#CCCCCC"> like the</font>

202
00:08:25,139 --> 00:08:29,759
code of the Linux<font color="#E5E5E5"> kernel module but it's</font>

203
00:08:27,479 --> 00:08:31,440
<font color="#E5E5E5">just simply changing</font><font color="#CCCCCC"> the flags</font><font color="#E5E5E5"> and this</font>

204
00:08:29,759 --> 00:08:35,010
is<font color="#E5E5E5"> really good because now we</font><font color="#CCCCCC"> don't need</font>

205
00:08:31,440 --> 00:08:37,289
<font color="#E5E5E5">a shell we don't need physical access we</font>

206
00:08:35,010 --> 00:08:39,599
just need the shell and<font color="#CCCCCC"> we can just like</font>

207
00:08:37,289 --> 00:08:41,968
the<font color="#E5E5E5"> D and one thing that's important to</font>

208
00:08:39,599 --> 00:08:44,370
<font color="#CCCCCC">mention like if I have wanted two</font>

209
00:08:41,969 --> 00:08:46,380
similar devices<font color="#E5E5E5"> the</font><font color="#CCCCCC"> bootloader the</font>

210
00:08:44,370 --> 00:08:48,450
u-boat<font color="#CCCCCC"> you boot partition is not going</font>

211
00:08:46,380 --> 00:08:51,959
to be exactly<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same because there are</font>

212
00:08:48,450 --> 00:08:53,850
like variable areas like<font color="#E5E5E5"> serial like mac</font>

213
00:08:51,959 --> 00:08:57,180
address<font color="#CCCCCC"> they're kind of</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> so</font>

214
00:08:53,850 --> 00:09:00,210
<font color="#CCCCCC">what we can do is</font><font color="#E5E5E5"> just we can just DD</font>

215
00:08:57,180 --> 00:09:02,219
but like the offsets will related to the

216
00:09:00,210 --> 00:09:05,310
u-boot bootloader<font color="#E5E5E5"> and we can just ignore</font>

217
00:09:02,220 --> 00:09:09,750
this<font color="#E5E5E5"> zero like and just copy and</font><font color="#CCCCCC"> that</font>

218
00:09:05,310 --> 00:09:14,040
and<font color="#E5E5E5"> just you</font><font color="#CCCCCC"> know like</font><font color="#E5E5E5"> skip it so yeah</font>

219
00:09:09,750 --> 00:09:15,600
yeah you<font color="#E5E5E5"> boot</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> open source yeah</font>

220
00:09:14,040 --> 00:09:17,040
<font color="#E5E5E5">boot loader so you could</font><font color="#CCCCCC"> just like</font>

221
00:09:15,600 --> 00:09:19,800
<font color="#E5E5E5">download it from the internet</font>

222
00:09:17,040 --> 00:09:21,630
<font color="#E5E5E5">it's GPL source code so</font><font color="#CCCCCC"> GPL v2 license</font>

223
00:09:19,800 --> 00:09:23,040
which means<font color="#CCCCCC"> that any vendor using you</font>

224
00:09:21,630 --> 00:09:24,660
boot has to provide you with<font color="#CCCCCC"> the source</font>

225
00:09:23,040 --> 00:09:26,550
<font color="#E5E5E5">code so writing a boot kit like this</font>

226
00:09:24,660 --> 00:09:28,829
becomes a lot<font color="#CCCCCC"> easier than</font><font color="#E5E5E5"> you know</font>

227
00:09:26,550 --> 00:09:30,569
writing<font color="#CCCCCC"> your custom boot kit</font><font color="#E5E5E5"> and we use</font>

228
00:09:28,830 --> 00:09:32,790
in this<font color="#E5E5E5"> case you would</font><font color="#CCCCCC"> not just an</font><font color="#E5E5E5"> open</font>

229
00:09:30,570 --> 00:09:37,200
<font color="#E5E5E5">source project from pepper</font><font color="#CCCCCC"> 2000 which is</font>

230
00:09:32,790 --> 00:09:39,599
awesome program<font color="#E5E5E5"> so why you put we there</font>

231
00:09:37,200 --> 00:09:41,550
<font color="#CCCCCC">is this</font><font color="#E5E5E5"> web website called wiki Devi it</font>

232
00:09:39,600 --> 00:09:44,190
describes lots of information about

233
00:09:41,550 --> 00:09:48,060
routers and better<font color="#CCCCCC"> devices cameras and</font>

234
00:09:44,190 --> 00:09:50,160
<font color="#E5E5E5">other stuff so you boot is the most used</font>

235
00:09:48,060 --> 00:09:52,650
bootloader on<font color="#E5E5E5"> the website so the second</font>

236
00:09:50,160 --> 00:09:55,620
most<font color="#CCCCCC"> used is CF e which stands for</font>

237
00:09:52,650 --> 00:09:59,340
<font color="#E5E5E5">common</font><font color="#CCCCCC"> femur environment</font><font color="#E5E5E5"> its proprietor</font>

238
00:09:55,620 --> 00:10:01,710
is from<font color="#CCCCCC"> Broadcom so it's also like open</font>

239
00:09:59,340 --> 00:10:05,850
<font color="#E5E5E5">source but it's not as easy to modify as</font>

240
00:10:01,710 --> 00:10:09,150
you boot and it's not as<font color="#E5E5E5"> used as much as</font>

241
00:10:05,850 --> 00:10:10,410
<font color="#E5E5E5">you boot so that's why we chose</font><font color="#CCCCCC"> it so</font>

242
00:10:09,150 --> 00:10:12,840
because<font color="#CCCCCC"> we were planning on breaking the</font>

243
00:10:10,410 --> 00:10:14,910
device like a lot we had to make<font color="#CCCCCC"> some</font>

244
00:10:12,840 --> 00:10:16,410
preparations<font color="#CCCCCC"> we have a great guy in</font><font color="#E5E5E5"> our</font>

245
00:10:14,910 --> 00:10:18,150
team's<font color="#E5E5E5"> name's Frank and he can solar</font>

246
00:10:16,410 --> 00:10:20,730
everything like<font color="#E5E5E5"> literally everything</font>

247
00:10:18,150 --> 00:10:22,530
so we diesel<font color="#CCCCCC"> the</font><font color="#E5E5E5"> SPI flash where the</font>

248
00:10:20,730 --> 00:10:24,780
firmware and<font color="#E5E5E5"> a</font><font color="#CCCCCC"> bootloader is</font><font color="#E5E5E5"> on and he</font>

249
00:10:22,530 --> 00:10:26,370
connected like the small pins that<font color="#CCCCCC"> are</font>

250
00:10:24,780 --> 00:10:28,860
connected to the<font color="#E5E5E5"> SPI</font><font color="#CCCCCC"> he hooked him up to</font>

251
00:10:26,370 --> 00:10:30,540
some<font color="#E5E5E5"> wires</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then we use our yeah the</font>

252
00:10:28,860 --> 00:10:32,220
<font color="#CCCCCC">two we use for flashing SPI chips we</font>

253
00:10:30,540 --> 00:10:33,719
just hooked it up directly<font color="#E5E5E5"> so when you</font>

254
00:10:32,220 --> 00:10:35,490
wanted<font color="#CCCCCC"> to boot the firmware</font><font color="#E5E5E5"> we just put</font>

255
00:10:33,720 --> 00:10:36,990
it in the thing<font color="#E5E5E5"> and the moment we picked</font>

256
00:10:35,490 --> 00:10:38,670
<font color="#E5E5E5">it we just put</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> thing in our</font>

257
00:10:36,990 --> 00:10:40,310
<font color="#CCCCCC">Hardware flasher</font><font color="#E5E5E5"> and restored it</font><font color="#CCCCCC"> back to</font>

258
00:10:38,670 --> 00:10:43,500
how it was

259
00:10:40,310 --> 00:10:45,209
<font color="#CCCCCC">they saved</font><font color="#E5E5E5"> us a lot of time so you would</font>

260
00:10:43,500 --> 00:10:47,400
have<font color="#E5E5E5"> some interesting functions</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> one</font>

261
00:10:45,210 --> 00:10:49,500
<font color="#E5E5E5">is</font><font color="#CCCCCC"> print n print</font><font color="#E5E5E5"> environment variables</font>

262
00:10:47,400 --> 00:10:52,650
it has<font color="#E5E5E5"> TVP boot which allows you to</font><font color="#CCCCCC"> boot</font>

263
00:10:49,500 --> 00:10:54,660
<font color="#E5E5E5">images from</font><font color="#CCCCCC"> TFTP</font><font color="#E5E5E5"> it has an f-stop string</font>

264
00:10:52,650 --> 00:10:56,699
which can be used to protect the

265
00:10:54,660 --> 00:10:58,380
bootloader menu from people who don't

266
00:10:56,700 --> 00:11:00,390
<font color="#CCCCCC">know the stop string it's not a</font><font color="#E5E5E5"> password</font>

267
00:10:58,380 --> 00:11:02,280
<font color="#E5E5E5">it's a stop string</font><font color="#CCCCCC"> and there's also a</font>

268
00:11:00,390 --> 00:11:03,660
<font color="#E5E5E5">boot CMD and a boot</font><font color="#CCCCCC"> CD</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the command</font>

269
00:11:02,280 --> 00:11:07,380
<font color="#E5E5E5">the bootloader will execute once the</font>

270
00:11:03,660 --> 00:11:09,270
device has<font color="#E5E5E5"> booted and</font><font color="#CCCCCC"> ping is like ICMP</font>

271
00:11:07,380 --> 00:11:10,920
pink so you can see if<font color="#E5E5E5"> hos</font><font color="#CCCCCC"> are alive and</font>

272
00:11:09,270 --> 00:11:13,980
<font color="#E5E5E5">do some things when that word</font>

273
00:11:10,920 --> 00:11:15,149
so you can also<font color="#E5E5E5"> have scripts and the</font>

274
00:11:13,980 --> 00:11:17,160
scripts look a lot like the bash

275
00:11:15,149 --> 00:11:19,019
scripting language here's like<font color="#CCCCCC"> doogal</font>

276
00:11:17,160 --> 00:11:20,670
example we will ping a<font color="#E5E5E5"> hard-coded server</font>

277
00:11:19,019 --> 00:11:22,679
IP which is in the<font color="#E5E5E5"> environment variables</font>

278
00:11:20,670 --> 00:11:24,660
and then if it's alive<font color="#CCCCCC"> with you a</font><font color="#E5E5E5"> tcp</font>

279
00:11:22,679 --> 00:11:27,238
boot to load<font color="#CCCCCC"> address of a backdoor image</font>

280
00:11:24,660 --> 00:11:29,399
and yeah once it's done we<font color="#CCCCCC"> will</font><font color="#E5E5E5"> yeah</font>

281
00:11:27,239 --> 00:11:30,299
<font color="#E5E5E5">booted and otherwise we will put a</font>

282
00:11:29,399 --> 00:11:33,169
<font color="#E5E5E5">hard-coded</font>

283
00:11:30,299 --> 00:11:35,910
address<font color="#CCCCCC"> that is from the normal firmware</font>

284
00:11:33,169 --> 00:11:37,019
so<font color="#CCCCCC"> their</font><font color="#E5E5E5"> dependent function prints</font>

285
00:11:35,910 --> 00:11:38,488
environment variables<font color="#CCCCCC"> and the</font>

286
00:11:37,019 --> 00:11:40,319
environment variables are all stored in

287
00:11:38,489 --> 00:11:42,029
<font color="#CCCCCC">a null byte separated list so it's like</font>

288
00:11:40,319 --> 00:11:44,009
two loops<font color="#E5E5E5"> going over the nobod and</font>

289
00:11:42,029 --> 00:11:45,329
reading<font color="#E5E5E5"> environment variables and the</font>

290
00:11:44,009 --> 00:11:46,829
function<font color="#CCCCCC"> that prints the environment</font>

291
00:11:45,329 --> 00:11:48,748
variables is inside

292
00:11:46,829 --> 00:11:50,638
yeah the<font color="#E5E5E5"> env edit puts you</font><font color="#CCCCCC"> command and</font>

293
00:11:48,749 --> 00:11:53,970
we made some<font color="#CCCCCC"> changes to it we basically</font>

294
00:11:50,639 --> 00:11:55,589
made two functions like one function is

295
00:11:53,970 --> 00:11:57,689
called get match in the other one finds

296
00:11:55,589 --> 00:11:59,220
<font color="#CCCCCC">the</font><font color="#E5E5E5"> variables so we made a list also of</font>

297
00:11:57,689 --> 00:12:00,988
<font color="#CCCCCC">MIL separated environment variables that</font>

298
00:11:59,220 --> 00:12:01,980
we<font color="#E5E5E5"> want to backdoor and in the moment</font>

299
00:12:00,989 --> 00:12:03,600
you<font color="#E5E5E5"> want to print an environment</font>

300
00:12:01,980 --> 00:12:04,980
<font color="#CCCCCC">variable it's like iterates through our</font>

301
00:12:03,600 --> 00:12:06,839
list and<font color="#E5E5E5"> if it</font><font color="#CCCCCC"> sees like yeah I'm not</font>

302
00:12:04,980 --> 00:12:08,850
<font color="#CCCCCC">gonna print boot CMD which is gonna</font>

303
00:12:06,839 --> 00:12:12,269
print our<font color="#CCCCCC"> own custom boot ox or our own</font>

304
00:12:08,850 --> 00:12:13,769
custom boot<font color="#CCCCCC"> Sidney another interesting</font>

305
00:12:12,269 --> 00:12:15,959
<font color="#CCCCCC">function is the</font><font color="#E5E5E5"> boots in the function</font>

306
00:12:13,769 --> 00:12:18,089
like the first command executed by<font color="#E5E5E5"> it</font>

307
00:12:15,959 --> 00:12:19,439
boot loader is<font color="#E5E5E5"> boots in D so</font><font color="#CCCCCC"> once</font>

308
00:12:18,089 --> 00:12:21,419
everything<font color="#E5E5E5"> is initialized it will just</font>

309
00:12:19,439 --> 00:12:23,429
<font color="#E5E5E5">execute boots</font><font color="#CCCCCC"> Indian boots a specific</font>

310
00:12:21,419 --> 00:12:25,470
memory address and we over out<font color="#CCCCCC"> there in</font>

311
00:12:23,429 --> 00:12:27,329
source as<font color="#E5E5E5"> you can see here it's usually</font>

312
00:12:25,470 --> 00:12:28,980
an environment variable<font color="#CCCCCC"> but</font><font color="#E5E5E5"> we decided</font>

313
00:12:27,329 --> 00:12:30,329
<font color="#E5E5E5">to like yeah skip that part</font><font color="#CCCCCC"> is</font>

314
00:12:28,980 --> 00:12:34,470
<font color="#CCCCCC">hard-coded in the source so we'll always</font>

315
00:12:30,329 --> 00:12:38,329
<font color="#E5E5E5">use this as a boots</font><font color="#CCCCCC"> boot CMD now we have</font>

316
00:12:34,470 --> 00:12:38,329
a demo where we are do booting

317
00:13:12,340 --> 00:13:18,830
like<font color="#CCCCCC"> my first oh yeah</font><font color="#E5E5E5"> so now it's like</font>

318
00:13:16,730 --> 00:13:21,200
<font color="#E5E5E5">not alive because this is our</font><font color="#CCCCCC"> TV</font><font color="#E5E5E5"> server</font>

319
00:13:18,830 --> 00:13:23,930
it's not on yet so you can't<font color="#E5E5E5"> reach our</font>

320
00:13:21,200 --> 00:13:25,490
<font color="#CCCCCC">hardcore</font><font color="#E5E5E5"> server IP so the ping</font><font color="#CCCCCC"> field and</font>

321
00:13:23,930 --> 00:13:29,959
it's not currently booting the normal

322
00:13:25,490 --> 00:13:31,820
<font color="#E5E5E5">program it's interesting</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> because</font>

323
00:13:29,960 --> 00:13:33,920
<font color="#E5E5E5">this function we created like we ping</font>

324
00:13:31,820 --> 00:13:36,290
our server<font color="#E5E5E5"> if your server is not alive</font>

325
00:13:33,920 --> 00:13:38,870
we just put the regular femur<font color="#CCCCCC"> so it's</font>

326
00:13:36,290 --> 00:13:41,360
like a<font color="#E5E5E5"> cue switch so if our server is</font>

327
00:13:38,870 --> 00:13:42,890
<font color="#E5E5E5">alive we can do stuff</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> this is like</font>

328
00:13:41,360 --> 00:13:45,500
he's checking the<font color="#E5E5E5"> version of the kernel</font>

329
00:13:42,890 --> 00:13:47,930
which is<font color="#CCCCCC"> like the regular</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> and now in</font>

330
00:13:45,500 --> 00:13:49,610
<font color="#CCCCCC">able the server</font><font color="#E5E5E5"> in a moment we can ping</font>

331
00:13:47,930 --> 00:13:51,770
<font color="#CCCCCC">serve</font><font color="#E5E5E5"> it means that the bootloader can</font>

332
00:13:49,610 --> 00:13:54,320
ping<font color="#CCCCCC"> the server and it will start</font>

333
00:13:51,770 --> 00:13:57,680
downloading<font color="#E5E5E5"> the boot</font><font color="#CCCCCC"> our customized</font>

334
00:13:54,320 --> 00:13:59,090
kernel<font color="#CCCCCC"> from our server you can do this</font>

335
00:13:57,680 --> 00:14:01,180
<font color="#CCCCCC">interior over the Internet</font><font color="#E5E5E5"> we haven't</font>

336
00:13:59,090 --> 00:14:03,500
tried that yet<font color="#E5E5E5"> but it</font><font color="#CCCCCC"> should be</font><font color="#E5E5E5"> possible</font>

337
00:14:01,180 --> 00:14:05,989
<font color="#E5E5E5">it's the G line it is a very small</font>

338
00:14:03,500 --> 00:14:10,280
margin<font color="#E5E5E5"> it's on his backpack so we can</font>

339
00:14:05,990 --> 00:14:12,680
show you yeah so now we boot our custom

340
00:14:10,280 --> 00:14:14,030
kernel and<font color="#E5E5E5"> it's a newer version we're</font>

341
00:14:12,680 --> 00:14:22,849
currently building<font color="#E5E5E5"> a custom kernel but</font>

342
00:14:14,030 --> 00:14:25,550
it is a<font color="#E5E5E5"> little bit more tricky so we're</font>

343
00:14:22,850 --> 00:14:28,400
actually we're back we're downloading

344
00:14:25,550 --> 00:14:31,339
<font color="#E5E5E5">we're using</font><font color="#CCCCCC"> TFTP to get a modify it</font><font color="#E5E5E5"> a</font>

345
00:14:28,400 --> 00:14:34,310
kernel but like the<font color="#E5E5E5"> actual file system</font>

346
00:14:31,340 --> 00:14:36,020
is the same because<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> just say like</font>

347
00:14:34,310 --> 00:14:38,000
yeah<font color="#E5E5E5"> the kernel is this one</font><font color="#CCCCCC"> different</font>

348
00:14:36,020 --> 00:14:40,550
one but<font color="#E5E5E5"> like you do everything else</font><font color="#CCCCCC"> just</font>

349
00:14:38,000 --> 00:14:42,170
like you do like regularly<font color="#E5E5E5"> the custom</font>

350
00:14:40,550 --> 00:14:43,609
kernel<font color="#E5E5E5"> and the custom kernel can make</font>

351
00:14:42,170 --> 00:14:45,920
changes to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> filesystem</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> is later</font>

352
00:14:43,610 --> 00:14:47,690
mounted by<font color="#E5E5E5"> the regular one so yeah we</font>

353
00:14:45,920 --> 00:14:48,349
can<font color="#E5E5E5"> put like Linux kernel modules put</font><font color="#CCCCCC"> a</font>

354
00:14:47,690 --> 00:14:50,450
<font color="#E5E5E5">cpio</font>

355
00:14:48,350 --> 00:14:52,820
and like you just<font color="#CCCCCC"> like is tracked</font><font color="#E5E5E5"> and</font>

356
00:14:50,450 --> 00:14:54,560
load<font color="#CCCCCC"> that before mounting everything so</font>

357
00:14:52,820 --> 00:15:01,450
yeah it's a different<font color="#CCCCCC"> kernel so we can</font>

358
00:14:54,560 --> 00:15:04,969
do everything<font color="#E5E5E5"> we</font><font color="#CCCCCC"> want exactly exactly</font>

359
00:15:01,450 --> 00:15:06,590
yeah<font color="#CCCCCC"> by having</font><font color="#E5E5E5"> control the kernel we can</font>

360
00:15:04,970 --> 00:15:08,570
load the existing file system<font color="#E5E5E5"> and make</font>

361
00:15:06,590 --> 00:15:11,360
changes to the normal file system so we

362
00:15:08,570 --> 00:15:11,720
<font color="#CCCCCC">can be persistent</font><font color="#E5E5E5"> yeah on a new next</font>

363
00:15:11,360 --> 00:15:13,670
level

364
00:15:11,720 --> 00:15:15,800
so yeah you boot has a password

365
00:15:13,670 --> 00:15:17,420
<font color="#E5E5E5">protection when you go</font><font color="#CCCCCC"> google a you boot</font>

366
00:15:15,800 --> 00:15:19,040
password the first<font color="#CCCCCC"> thing that will come</font>

367
00:15:17,420 --> 00:15:21,380
up<font color="#E5E5E5"> is the end stop string we're using</font>

368
00:15:19,040 --> 00:15:22,640
<font color="#E5E5E5">here it is not a password protection and</font>

369
00:15:21,380 --> 00:15:23,329
it should not be<font color="#CCCCCC"> used</font><font color="#E5E5E5"> as a passive</font>

370
00:15:22,640 --> 00:15:24,470
protection

371
00:15:23,329 --> 00:15:25,910
because you can<font color="#E5E5E5"> just download the</font>

372
00:15:24,470 --> 00:15:28,189
firmware<font color="#E5E5E5"> run strings on it and you'll</font>

373
00:15:25,910 --> 00:15:31,639
see<font color="#CCCCCC"> the password so never use it as a</font>

374
00:15:28,189 --> 00:15:33,079
password<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> lots of vendors use it as</font>

375
00:15:31,639 --> 00:15:34,850
a password<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> also really</font>

376
00:15:33,079 --> 00:15:36,258
easily by pairs by glitching which we

377
00:15:34,850 --> 00:15:41,089
are going<font color="#E5E5E5"> to show you right</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> if I can</font>

378
00:15:36,259 --> 00:15:42,589
<font color="#E5E5E5">get my mouse yeah so what we do now</font>

379
00:15:41,089 --> 00:15:45,949
we're pressing<font color="#CCCCCC"> R we're gonna</font><font color="#E5E5E5"> wipe the</font>

380
00:15:42,589 --> 00:15:47,509
<font color="#CCCCCC">device first so what</font><font color="#E5E5E5"> we did is we we</font>

381
00:15:45,949 --> 00:15:49,099
<font color="#CCCCCC">created this</font><font color="#E5E5E5"> top string but we've made</font>

382
00:15:47,509 --> 00:15:51,139
<font color="#CCCCCC">some changes</font><font color="#E5E5E5"> to the code</font><font color="#CCCCCC"> that way if you</font>

383
00:15:49,100 --> 00:15:52,999
press an incorrect key or you<font color="#E5E5E5"> press it</font>

384
00:15:51,139 --> 00:15:54,649
you<font color="#E5E5E5"> try an incorrect password</font><font color="#CCCCCC"> it will</font>

385
00:15:52,999 --> 00:15:56,209
<font color="#E5E5E5">wipe the device so you cannot use</font><font color="#CCCCCC"> the</font>

386
00:15:54,649 --> 00:15:57,470
device<font color="#CCCCCC"> so if you have like</font><font color="#E5E5E5"> an incident</font>

387
00:15:56,209 --> 00:16:01,540
response<font color="#CCCCCC"> team that wants to take</font><font color="#E5E5E5"> a look</font>

388
00:15:57,470 --> 00:16:01,540
at our malware yeah we don't<font color="#E5E5E5"> want</font><font color="#CCCCCC"> that</font>

389
00:16:19,540 --> 00:16:36,829
<font color="#CCCCCC">now we're gonna wipe the device so first</font>

390
00:16:30,139 --> 00:16:38,929
we're putting it in a regular<font color="#CCCCCC"> way and</font>

391
00:16:36,829 --> 00:16:41,138
then we will reboot it and<font color="#CCCCCC"> Percy invalid</font>

392
00:16:38,929 --> 00:16:41,139
<font color="#CCCCCC">key</font>

393
00:16:48,949 --> 00:16:53,868
it's also important<font color="#CCCCCC"> to mention</font><font color="#E5E5E5"> that like</font>

394
00:16:51,100 --> 00:16:56,269
you only see all those information if

395
00:16:53,869 --> 00:16:58,549
<font color="#CCCCCC">you're connected to a serial</font><font color="#E5E5E5"> if you're</font>

396
00:16:56,269 --> 00:17:00,319
using<font color="#E5E5E5"> like a serial connector USB so now</font>

397
00:16:58,549 --> 00:17:04,549
we're rebooting<font color="#E5E5E5"> trying to press the key</font>

398
00:17:00,319 --> 00:17:07,549
<font color="#CCCCCC">and says now</font><font color="#E5E5E5"> and so and we can just like</font>

399
00:17:04,549 --> 00:17:09,589
<font color="#CCCCCC">DD we can just like put zeros and we can</font>

400
00:17:07,549 --> 00:17:11,779
do everything<font color="#CCCCCC"> so you boot has a native</font>

401
00:17:09,589 --> 00:17:14,359
<font color="#E5E5E5">erase command we</font><font color="#CCCCCC"> can use but</font><font color="#E5E5E5"> we can also</font>

402
00:17:11,779 --> 00:17:16,519
write zeros<font color="#E5E5E5"> is like write memory to the</font>

403
00:17:14,359 --> 00:17:18,948
actual partition and<font color="#CCCCCC"> we can even</font><font color="#E5E5E5"> write</font>

404
00:17:16,519 --> 00:17:20,569
<font color="#E5E5E5">to the variables that</font><font color="#CCCCCC"> are you know the</font>

405
00:17:18,949 --> 00:17:22,399
clock speed<font color="#CCCCCC"> so we could even</font><font color="#E5E5E5"> overclock</font>

406
00:17:20,569 --> 00:17:27,619
the<font color="#E5E5E5"> device and</font><font color="#CCCCCC"> fried a device so you can</font>

407
00:17:22,398 --> 00:17:29,449
<font color="#E5E5E5">never use it's really great so we hide</font>

408
00:17:27,619 --> 00:17:31,010
<font color="#CCCCCC">from strings because</font><font color="#E5E5E5"> I play some</font><font color="#CCCCCC"> CTS</font>

409
00:17:29,450 --> 00:17:33,169
where<font color="#CCCCCC"> I</font><font color="#E5E5E5"> just run strings and you see the</font>

410
00:17:31,010 --> 00:17:35,269
secret<font color="#E5E5E5"> token</font><font color="#CCCCCC"> so we use</font><font color="#E5E5E5"> a little</font><font color="#CCCCCC"> trick</font>

411
00:17:33,169 --> 00:17:39,230
and the trick<font color="#E5E5E5"> is to make a byte array</font>

412
00:17:35,269 --> 00:17:41,120
<font color="#E5E5E5">and then we use string copy to copy the</font>

413
00:17:39,230 --> 00:17:42,559
byte array into the string and then when

414
00:17:41,120 --> 00:17:44,090
you run strings on it<font color="#CCCCCC"> you won't see</font>

415
00:17:42,559 --> 00:17:46,158
anything<font color="#CCCCCC"> and when you put it in ER this</font>

416
00:17:44,090 --> 00:17:47,600
is like<font color="#E5E5E5"> an x86 is an example of what's</font>

417
00:17:46,159 --> 00:17:49,549
<font color="#CCCCCC">going to</font><font color="#E5E5E5"> happen it's going</font><font color="#CCCCCC"> to move the</font>

418
00:17:47,600 --> 00:17:52,010
individual bytes<font color="#E5E5E5"> into a string and</font><font color="#CCCCCC"> then</font>

419
00:17:49,549 --> 00:17:54,470
compares the string so<font color="#E5E5E5"> you need to look</font>

420
00:17:52,010 --> 00:18:05,750
a<font color="#CCCCCC"> bit harder into the source</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> but</font>

421
00:17:54,470 --> 00:18:07,519
you<font color="#CCCCCC"> can easily bypass this</font><font color="#E5E5E5"> so we</font><font color="#CCCCCC"> had we</font>

422
00:18:05,750 --> 00:18:11,120
had<font color="#E5E5E5"> some wires that</font><font color="#CCCCCC"> are connected</font><font color="#E5E5E5"> to the</font>

423
00:18:07,519 --> 00:18:13,010
data out pin and so we load the

424
00:18:11,120 --> 00:18:14,989
bootloader<font color="#E5E5E5"> into memory and</font><font color="#CCCCCC"> then the</font>

425
00:18:13,010 --> 00:18:18,320
moment<font color="#E5E5E5"> you want to load the kernel you</font>

426
00:18:14,990 --> 00:18:19,940
just short<font color="#CCCCCC"> two data out pin and then it</font>

427
00:18:18,320 --> 00:18:21,860
will fall back<font color="#CCCCCC"> to the bootloader so you</font>

428
00:18:19,940 --> 00:18:26,059
have<font color="#E5E5E5"> access</font><font color="#CCCCCC"> to the bootloader</font><font color="#E5E5E5"> that's</font>

429
00:18:21,860 --> 00:18:27,110
what we're gonna do right<font color="#CCCCCC"> now thank well</font>

430
00:18:26,059 --> 00:18:29,539
and there you go

431
00:18:27,110 --> 00:18:31,629
bypass special protection<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> really</font>

432
00:18:29,539 --> 00:18:31,629
<font color="#E5E5E5">easy</font>

433
00:18:34,669 --> 00:18:41,149
so what can you<font color="#E5E5E5"> as a</font><font color="#CCCCCC"> defender do to like</font>

434
00:18:38,899 --> 00:18:42,969
detect boot<font color="#CCCCCC"> kits or to do stuff so you</font>

435
00:18:41,149 --> 00:18:45,768
<font color="#CCCCCC">Buddha has this thing called</font>

436
00:18:42,970 --> 00:18:49,070
<font color="#E5E5E5">reproducible boots which means that I</font>

437
00:18:45,769 --> 00:18:52,190
can compile your boot<font color="#E5E5E5"> and I can hard</font>

438
00:18:49,070 --> 00:18:54,439
code a<font color="#CCCCCC"> time stamp</font><font color="#E5E5E5"> and if like I compiled</font>

439
00:18:52,190 --> 00:18:56,659
today and someone compiles tomorrow<font color="#CCCCCC"> and</font>

440
00:18:54,440 --> 00:18:59,359
or if someone compiles using a different

441
00:18:56,659 --> 00:19:01,220
system<font color="#E5E5E5"> it's all like the data partition</font>

442
00:18:59,359 --> 00:19:04,210
the code partition is always going<font color="#E5E5E5"> to</font>

443
00:19:01,220 --> 00:19:07,820
have the same hash so there's like<font color="#E5E5E5"> this</font>

444
00:19:04,210 --> 00:19:09,980
<font color="#E5E5E5">source date epoch variable so you can</font>

445
00:19:07,820 --> 00:19:12,168
already<font color="#E5E5E5"> do that</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example Debian is</font>

446
00:19:09,980 --> 00:19:15,019
using reproducible builds for the audio

447
00:19:12,169 --> 00:19:16,850
package<font color="#CCCCCC"> there dpkg so you can also</font><font color="#E5E5E5"> you</font>

448
00:19:15,019 --> 00:19:18,889
<font color="#E5E5E5">can actually check if the source code</font>

449
00:19:16,850 --> 00:19:20,539
<font color="#E5E5E5">and everything is they actually one you</font>

450
00:19:18,889 --> 00:19:23,149
download so it's something<font color="#E5E5E5"> really</font><font color="#CCCCCC"> useful</font>

451
00:19:20,539 --> 00:19:25,220
<font color="#E5E5E5">so Debian was back good by the CIA ones</font>

452
00:19:23,149 --> 00:19:26,449
<font color="#E5E5E5">and they were entirely</font><font color="#CCCCCC"> compromised in</font>

453
00:19:25,220 --> 00:19:29,539
<font color="#CCCCCC">this story too</font>

454
00:19:26,450 --> 00:19:29,539
[Music]

455
00:19:29,799 --> 00:19:36,950
<font color="#CCCCCC">so</font><font color="#E5E5E5"> there is also this project from Intel</font>

456
00:19:33,739 --> 00:19:38,929
<font color="#CCCCCC">I think called</font><font color="#E5E5E5"> chip sack</font><font color="#CCCCCC"> and which is</font>

457
00:19:36,950 --> 00:19:41,690
basically a framework where you can use

458
00:19:38,929 --> 00:19:46,549
to parse read the content from like

459
00:19:41,690 --> 00:19:48,739
<font color="#CCCCCC">Beals UEFI</font><font color="#E5E5E5"> it's not more it's not</font><font color="#CCCCCC"> very</font>

460
00:19:46,549 --> 00:19:51,230
<font color="#E5E5E5">focused on like you boot and all those</font>

461
00:19:48,739 --> 00:19:53,600
stuff but yeah we<font color="#CCCCCC"> can</font><font color="#E5E5E5"> always like write</font>

462
00:19:51,230 --> 00:19:55,369
patches or you know submits and pull

463
00:19:53,600 --> 00:19:56,988
<font color="#E5E5E5">requests and</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> and there's also</font>

464
00:19:55,369 --> 00:20:01,039
this<font color="#CCCCCC"> really interesting</font><font color="#E5E5E5"> project called</font>

465
00:19:56,989 --> 00:20:03,470
<font color="#CCCCCC">known UEFI exec tables so it's also from</font>

466
00:20:01,039 --> 00:20:08,090
<font color="#E5E5E5">Intel which is just like a</font><font color="#CCCCCC"> github</font>

467
00:20:03,470 --> 00:20:10,039
repository<font color="#CCCCCC"> with no UEFI images with and</font>

468
00:20:08,090 --> 00:20:12,049
so<font color="#E5E5E5"> you can just like hashes from all</font>

469
00:20:10,039 --> 00:20:14,299
different vendors so it's just like<font color="#E5E5E5"> a</font>

470
00:20:12,049 --> 00:20:16,249
big repository<font color="#CCCCCC"> so you can just</font><font color="#E5E5E5"> query and</font>

471
00:20:14,299 --> 00:20:20,470
look up and to<font color="#CCCCCC"> make sure</font><font color="#E5E5E5"> like you're</font>

472
00:20:16,249 --> 00:20:23,119
running an actual like valid or known

473
00:20:20,470 --> 00:20:25,820
<font color="#E5E5E5">femur or if it's</font><font color="#CCCCCC"> someone temperature or</font>

474
00:20:23,119 --> 00:20:27,350
modify<font color="#E5E5E5"> it and this is</font><font color="#CCCCCC"> like the output</font>

475
00:20:25,820 --> 00:20:30,759
<font color="#E5E5E5">from</font><font color="#CCCCCC"> ships axe so you can for example</font>

476
00:20:27,350 --> 00:20:33,889
<font color="#CCCCCC">run it on a</font><font color="#E5E5E5"> MacBook and check if someone</font>

477
00:20:30,759 --> 00:20:37,549
<font color="#E5E5E5">tampered with the</font><font color="#CCCCCC"> bios or if someone</font>

478
00:20:33,889 --> 00:20:40,399
<font color="#E5E5E5">like</font><font color="#CCCCCC"> disable their write</font><font color="#E5E5E5"> read write flag</font>

479
00:20:37,549 --> 00:20:42,619
you<font color="#E5E5E5"> know so it's not read-only anymore</font>

480
00:20:40,399 --> 00:20:44,599
<font color="#E5E5E5">so you can do lots</font><font color="#CCCCCC"> of stuff</font><font color="#E5E5E5"> so basically</font>

481
00:20:42,619 --> 00:20:46,309
chip sack it<font color="#E5E5E5"> strips away the variables</font>

482
00:20:44,599 --> 00:20:47,658
that are<font color="#E5E5E5"> custom</font><font color="#CCCCCC"> to your device and just</font>

483
00:20:46,309 --> 00:20:48,210
looks at<font color="#E5E5E5"> the code</font><font color="#CCCCCC"> that devices have in</font>

484
00:20:47,659 --> 00:20:50,009
common

485
00:20:48,210 --> 00:20:51,509
so when you place<font color="#CCCCCC"> a</font><font color="#E5E5E5"> back door one of the</font>

486
00:20:50,009 --> 00:20:54,539
common<font color="#E5E5E5"> cold segments will be different</font>

487
00:20:51,509 --> 00:20:55,889
<font color="#E5E5E5">and chips I quit</font><font color="#CCCCCC"> attack that so there's</font>

488
00:20:54,539 --> 00:20:57,690
this presentation<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> Google</font>

489
00:20:55,889 --> 00:21:00,330
<font color="#CCCCCC">security team so very few companies</font>

490
00:20:57,690 --> 00:21:02,210
nowadays<font color="#E5E5E5"> they're good enough to find you</font>

491
00:21:00,330 --> 00:21:04,080
know in<font color="#CCCCCC"> Hardware implants or</font>

492
00:21:02,210 --> 00:21:07,230
modifications inside<font color="#CCCCCC"> their</font><font color="#E5E5E5"> their</font>

493
00:21:04,080 --> 00:21:09,809
femur so Google I think<font color="#CCCCCC"> it was during</font>

494
00:21:07,230 --> 00:21:10,799
<font color="#CCCCCC">ruts cone</font><font color="#E5E5E5"> in Australia so they expect</font>

495
00:21:09,809 --> 00:21:13,769
<font color="#E5E5E5">they explain it</font>

496
00:21:10,799 --> 00:21:16,080
what<font color="#E5E5E5"> are how did like</font><font color="#CCCCCC"> Technic how</font>

497
00:21:13,769 --> 00:21:17,789
<font color="#CCCCCC">they're dealing with that and like they</font>

498
00:21:16,080 --> 00:21:19,769
have this tool called Google rapid

499
00:21:17,789 --> 00:21:21,480
response<font color="#E5E5E5"> and they were explaining how</font>

500
00:21:19,769 --> 00:21:23,789
they're integrating chip sack - they're

501
00:21:21,480 --> 00:21:27,570
like incident response and<font color="#E5E5E5"> like the</font>

502
00:21:23,789 --> 00:21:29,580
agents and also like<font color="#CCCCCC"> it's why is it so</font>

503
00:21:27,570 --> 00:21:31,710
difficult<font color="#E5E5E5"> so it's just like we</font><font color="#CCCCCC"> explained</font>

504
00:21:29,580 --> 00:21:33,600
it on the<font color="#E5E5E5"> u-boot case you have a code</font>

505
00:21:31,710 --> 00:21:35,759
area and you<font color="#E5E5E5"> have like a variable</font><font color="#CCCCCC"> area</font>

506
00:21:33,600 --> 00:21:37,469
<font color="#CCCCCC">if I'm just comparing hashes it's not</font>

507
00:21:35,759 --> 00:21:40,679
gonna match so I need to be able to

508
00:21:37,470 --> 00:21:43,559
parse that unpack and like for every

509
00:21:40,679 --> 00:21:45,749
<font color="#E5E5E5">different vendors or things like that so</font>

510
00:21:43,559 --> 00:21:48,690
trusted computing is something<font color="#E5E5E5"> like very</font>

511
00:21:45,749 --> 00:21:50,999
<font color="#E5E5E5">important so there's like this</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> it so</font>

512
00:21:48,690 --> 00:21:54,629
and<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> it's basically</font><font color="#E5E5E5"> saying like</font>

513
00:21:50,999 --> 00:21:56,999
if<font color="#E5E5E5"> you</font><font color="#CCCCCC"> AF I</font><font color="#E5E5E5"> secure boot suddenly started</font>

514
00:21:54,629 --> 00:21:58,709
booting<font color="#CCCCCC"> unsigned images how many</font>

515
00:21:56,999 --> 00:22:01,230
companies how<font color="#CCCCCC"> many people would just</font>

516
00:21:58,710 --> 00:22:03,840
like could find that it's<font color="#E5E5E5"> something</font><font color="#CCCCCC"> very</font>

517
00:22:01,230 --> 00:22:06,059
difficult<font color="#CCCCCC"> so in</font><font color="#E5E5E5"> spec above systems this</font>

518
00:22:03,840 --> 00:22:09,809
<font color="#E5E5E5">is something like</font><font color="#CCCCCC"> that we need nowadays</font>

519
00:22:06,059 --> 00:22:12,178
<font color="#E5E5E5">and this example here so also liquid on</font>

520
00:22:09,809 --> 00:22:14,340
the Snowden documents showing that NSA

521
00:22:12,179 --> 00:22:17,309
was basically intercepting packets<font color="#E5E5E5"> this</font>

522
00:22:14,340 --> 00:22:19,459
is like a Cisco device<font color="#CCCCCC"> and reflashing</font>

523
00:22:17,309 --> 00:22:22,230
the femur with a<font color="#E5E5E5"> backdoored femur and</font>

524
00:22:19,460 --> 00:22:24,749
then you know as<font color="#E5E5E5"> soon as it</font><font color="#CCCCCC"> arrives</font><font color="#E5E5E5"> on</font>

525
00:22:22,230 --> 00:22:26,940
the<font color="#E5E5E5"> guy on</font><font color="#CCCCCC"> the other</font><font color="#E5E5E5"> side they</font><font color="#CCCCCC"> just have</font>

526
00:22:24,749 --> 00:22:29,669
they<font color="#CCCCCC"> can collect</font><font color="#E5E5E5"> data they can like</font>

527
00:22:26,940 --> 00:22:31,769
access that so<font color="#E5E5E5"> very few companies would</font>

528
00:22:29,669 --> 00:22:34,679
know if they device that arrived<font color="#E5E5E5"> there</font>

529
00:22:31,769 --> 00:22:39,210
is the<font color="#E5E5E5"> actual device that supported the</font>

530
00:22:34,679 --> 00:22:41,730
vendor Center<font color="#E5E5E5"> so some companies are</font>

531
00:22:39,210 --> 00:22:42,899
<font color="#E5E5E5">starting</font><font color="#CCCCCC"> to use secure boot</font><font color="#E5E5E5"> so there's</font>

532
00:22:41,730 --> 00:22:45,570
this company<font color="#CCCCCC"> called</font>

533
00:22:42,899 --> 00:22:47,729
open mesh they they<font color="#CCCCCC"> also their</font><font color="#E5E5E5"> devices</font>

534
00:22:45,570 --> 00:22:49,230
is just like the device we showed here

535
00:22:47,730 --> 00:22:52,440
it's<font color="#CCCCCC"> they quite similar</font>

536
00:22:49,230 --> 00:22:55,289
it's an AP<font color="#E5E5E5"> wireless repeaters and</font><font color="#CCCCCC"> all</font>

537
00:22:52,440 --> 00:22:57,419
those things<font color="#CCCCCC"> so they're using secure</font>

538
00:22:55,289 --> 00:23:00,419
boot<font color="#E5E5E5"> so they're also using your boot and</font>

539
00:22:57,419 --> 00:23:01,920
<font color="#E5E5E5">they have sign</font><font color="#CCCCCC"> ID images so the</font>

540
00:23:00,419 --> 00:23:05,070
bootloader<font color="#E5E5E5"> is sign</font>

541
00:23:01,920 --> 00:23:07,050
using an RSA key<font color="#E5E5E5"> so the RS see the</font>

542
00:23:05,070 --> 00:23:11,159
problem<font color="#E5E5E5"> here is that the RSA key is</font>

543
00:23:07,050 --> 00:23:13,919
inside<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> femur flesh flesh</font><font color="#E5E5E5"> so the</font>

544
00:23:11,160 --> 00:23:16,230
same blob<font color="#E5E5E5"> so you have like all</font><font color="#CCCCCC"> your data</font>

545
00:23:13,920 --> 00:23:18,420
and you have<font color="#E5E5E5"> somewhere there where it's</font>

546
00:23:16,230 --> 00:23:20,040
there's the signature<font color="#E5E5E5"> so if the</font>

547
00:23:18,420 --> 00:23:22,080
signature doesn't match if I'm trying<font color="#E5E5E5"> to</font>

548
00:23:20,040 --> 00:23:26,070
put a modified bootloader<font color="#E5E5E5"> it would just</font>

549
00:23:22,080 --> 00:23:28,320
don't boot<font color="#E5E5E5"> so what happens is because</font>

550
00:23:26,070 --> 00:23:30,450
<font color="#E5E5E5">you boot is gplv2</font>

551
00:23:28,320 --> 00:23:32,280
<font color="#E5E5E5">some guys they</font><font color="#CCCCCC"> just ask at the source</font>

552
00:23:30,450 --> 00:23:35,820
code<font color="#E5E5E5"> they code reviewed and they found</font>

553
00:23:32,280 --> 00:23:38,190
<font color="#CCCCCC">out that</font><font color="#E5E5E5"> if you erase so this is just</font>

554
00:23:35,820 --> 00:23:41,010
like some<font color="#CCCCCC"> a series of DD commands so if</font>

555
00:23:38,190 --> 00:23:43,020
you just erase the signature from<font color="#CCCCCC"> the</font>

556
00:23:41,010 --> 00:23:48,150
flash<font color="#CCCCCC"> it's not going to check and it's</font>

557
00:23:43,020 --> 00:23:53,160
<font color="#E5E5E5">gonna bypass it so yes</font><font color="#CCCCCC"> there's also a</font>

558
00:23:48,150 --> 00:23:56,910
stack overflow<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> u-boot</font><font color="#CCCCCC"> TFTP</font><font color="#E5E5E5"> boot</font>

559
00:23:53,160 --> 00:23:59,040
<font color="#E5E5E5">so on our case we use</font><font color="#CCCCCC"> TFTP boot to</font>

560
00:23:56,910 --> 00:24:02,190
download an<font color="#E5E5E5"> image from the</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> but</font>

561
00:23:59,040 --> 00:24:04,260
<font color="#E5E5E5">there's also a stack overflow</font><font color="#CCCCCC"> on that</font>

562
00:24:02,190 --> 00:24:07,860
component<font color="#E5E5E5"> so you could</font><font color="#CCCCCC"> just like</font>

563
00:24:04,260 --> 00:24:10,860
download a<font color="#E5E5E5"> really big image like causing</font>

564
00:24:07,860 --> 00:24:12,689
an overflow and then you could just<font color="#CCCCCC"> jump</font>

565
00:24:10,860 --> 00:24:13,830
to the<font color="#CCCCCC"> bootloader itself then you</font><font color="#E5E5E5"> could</font>

566
00:24:12,690 --> 00:24:15,120
do whatever you want<font color="#CCCCCC"> which is really</font>

567
00:24:13,830 --> 00:24:16,919
<font color="#CCCCCC">hard and</font><font color="#E5E5E5"> you probably need</font><font color="#CCCCCC"> a JTAG</font>

568
00:24:15,120 --> 00:24:20,000
debugger but it's yeah something really

569
00:24:16,920 --> 00:24:22,500
cool and it's a feature not a bug<font color="#E5E5E5"> yeah</font>

570
00:24:20,000 --> 00:24:24,420
so<font color="#E5E5E5"> bypassing secure boot there's like</font>

571
00:24:22,500 --> 00:24:25,980
some talks from<font color="#CCCCCC"> Rhys</font><font color="#E5E5E5"> cool guys it's</font>

572
00:24:24,420 --> 00:24:28,110
really interesting<font color="#E5E5E5"> like using glitching</font>

573
00:24:25,980 --> 00:24:30,240
and<font color="#CCCCCC"> all those stuff</font><font color="#E5E5E5"> so the gate we did</font>

574
00:24:28,110 --> 00:24:31,830
like the poor<font color="#CCCCCC"> men poor</font><font color="#E5E5E5"> man's glitching</font>

575
00:24:30,240 --> 00:24:33,810
it's just like a simple<font color="#E5E5E5"> way</font><font color="#CCCCCC"> but you can</font>

576
00:24:31,830 --> 00:24:35,580
<font color="#CCCCCC">always</font><font color="#E5E5E5"> use like</font><font color="#CCCCCC"> specialized</font><font color="#E5E5E5"> in hardware</font>

577
00:24:33,810 --> 00:24:37,740
or<font color="#CCCCCC"> things different</font><font color="#E5E5E5"> things to bypass</font>

578
00:24:35,580 --> 00:24:39,270
secure boot<font color="#E5E5E5"> there's also this a left</font>

579
00:24:37,740 --> 00:24:41,700
research so it's a really<font color="#E5E5E5"> interesting</font>

580
00:24:39,270 --> 00:24:44,460
<font color="#E5E5E5">they</font><font color="#CCCCCC"> have all kinds</font><font color="#E5E5E5"> of bypass for mostly</font>

581
00:24:41,700 --> 00:24:47,580
boot<font color="#E5E5E5"> mostly for mobile boot loaders like</font>

582
00:24:44,460 --> 00:24:49,320
<font color="#E5E5E5">cell phones and all those things and yes</font>

583
00:24:47,580 --> 00:24:52,439
<font color="#CCCCCC">the conclusion is that like secure boot</font>

584
00:24:49,320 --> 00:24:54,899
is important so we have to like to start

585
00:24:52,440 --> 00:24:56,880
thinking about<font color="#E5E5E5"> that</font><font color="#CCCCCC"> also for embedded</font>

586
00:24:54,900 --> 00:24:59,340
devices<font color="#E5E5E5"> for small routers and also thing</font>

587
00:24:56,880 --> 00:25:00,960
and<font color="#E5E5E5"> we need to reduce femur opacity</font>

588
00:24:59,340 --> 00:25:03,419
which means that transparency<font color="#CCCCCC"> is</font>

589
00:25:00,960 --> 00:25:05,730
important so vendors nowadays they worry

590
00:25:03,420 --> 00:25:07,740
too much about<font color="#E5E5E5"> temper proofing so</font>

591
00:25:05,730 --> 00:25:09,120
there's all like smart cards and all

592
00:25:07,740 --> 00:25:10,980
those stuff they don't want you<font color="#CCCCCC"> to</font>

593
00:25:09,120 --> 00:25:12,959
<font color="#CCCCCC">tamper with that</font><font color="#E5E5E5"> but they don't</font><font color="#CCCCCC"> offer</font>

594
00:25:10,980 --> 00:25:14,520
any good way for you to<font color="#E5E5E5"> know if the</font>

595
00:25:12,960 --> 00:25:15,720
<font color="#E5E5E5">hardware that you got there is the</font>

596
00:25:14,520 --> 00:25:19,379
<font color="#E5E5E5">actual like</font>

597
00:25:15,720 --> 00:25:21,779
legit hardware<font color="#E5E5E5"> so Intel Emmy which if</font>

598
00:25:19,379 --> 00:25:23,610
you<font color="#E5E5E5"> guys like to look about it</font><font color="#CCCCCC"> they had</font>

599
00:25:21,779 --> 00:25:25,649
like this<font color="#CCCCCC"> backdoor and it's very</font>

600
00:25:23,610 --> 00:25:28,229
difficult<font color="#CCCCCC"> for the operating</font><font color="#E5E5E5"> the actual</font>

601
00:25:25,649 --> 00:25:30,870
CPU to know what what it's doing or what

602
00:25:28,230 --> 00:25:32,159
it's doing not<font color="#E5E5E5"> doing and</font><font color="#CCCCCC"> Meakin controls</font>

603
00:25:30,870 --> 00:25:33,779
<font color="#E5E5E5">parts of the CPU so you could do</font>

604
00:25:32,159 --> 00:25:36,539
basically<font color="#E5E5E5"> anything</font><font color="#CCCCCC"> so it's really</font>

605
00:25:33,779 --> 00:25:38,370
important<font color="#CCCCCC"> that we develop tools and get</font>

606
00:25:36,539 --> 00:25:40,529
a hold of tools create tools<font color="#E5E5E5"> and so we</font>

607
00:25:38,370 --> 00:25:42,178
can have a look at our<font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> and what</font>

608
00:25:40,529 --> 00:25:43,590
runs on a hardware because<font color="#E5E5E5"> if we don't</font>

609
00:25:42,179 --> 00:25:45,330
know what's<font color="#E5E5E5"> running on our hardware</font><font color="#CCCCCC"> how</font>

610
00:25:43,590 --> 00:25:47,100
can we trust our software because the

611
00:25:45,330 --> 00:25:49,620
hardware<font color="#CCCCCC"> eventually controls the</font><font color="#E5E5E5"> system</font>

612
00:25:47,100 --> 00:25:51,809
and<font color="#E5E5E5"> people older</font><font color="#CCCCCC"> people here</font><font color="#E5E5E5"> I'm not</font>

613
00:25:49,620 --> 00:25:53,908
<font color="#E5E5E5">sure</font><font color="#CCCCCC"> if you had like autos</font><font color="#E5E5E5"> odd mod</font>

614
00:25:51,809 --> 00:25:56,059
motherboards<font color="#E5E5E5"> and there was like this</font>

615
00:25:53,909 --> 00:25:58,970
jumper<font color="#E5E5E5"> that you had to actually use</font>

616
00:25:56,059 --> 00:26:02,519
because it's a physical<font color="#E5E5E5"> impediment so</font>

617
00:25:58,970 --> 00:26:04,529
<font color="#CCCCCC">the the bio to be BIOS is read-only if</font>

618
00:26:02,519 --> 00:26:06,090
you remove it then you can write it<font color="#CCCCCC"> so</font>

619
00:26:04,529 --> 00:26:07,769
it's a simple<font color="#CCCCCC"> thing it's so it's a</font>

620
00:26:06,090 --> 00:26:09,629
physical<font color="#CCCCCC"> impediment</font><font color="#E5E5E5"> so if you can have</font>

621
00:26:07,769 --> 00:26:11,370
<font color="#CCCCCC">that you have like it's more secure</font>

622
00:26:09,629 --> 00:26:14,009
<font color="#E5E5E5">suppose you need you want to update your</font>

623
00:26:11,370 --> 00:26:15,899
<font color="#CCCCCC">like roam home router you can</font><font color="#E5E5E5"> just</font>

624
00:26:14,009 --> 00:26:17,460
switch<font color="#CCCCCC"> it or just remove a jumper so</font>

625
00:26:15,899 --> 00:26:22,379
it's simple things<font color="#CCCCCC"> that</font><font color="#E5E5E5"> people are not</font>

626
00:26:17,460 --> 00:26:24,539
using<font color="#E5E5E5"> anymore so also we need</font><font color="#CCCCCC"> also</font>

627
00:26:22,379 --> 00:26:26,370
better documentation reverse engineering

628
00:26:24,539 --> 00:26:28,230
scripts and<font color="#E5E5E5"> you know and we</font><font color="#CCCCCC"> need like</font>

629
00:26:26,370 --> 00:26:30,000
better<font color="#E5E5E5"> parsers for</font><font color="#CCCCCC"> boot loaders it's</font>

630
00:26:28,230 --> 00:26:31,470
something that we need<font color="#CCCCCC"> to understand so</font>

631
00:26:30,000 --> 00:26:36,649
we can respond accordingly

632
00:26:31,470 --> 00:26:36,649
<font color="#E5E5E5">and questions questions</font>

633
00:26:36,890 --> 00:26:46,869
[Applause]

634
00:27:18,620 --> 00:27:29,070
<font color="#E5E5E5">the</font><font color="#CCCCCC"> real question yeah</font><font color="#E5E5E5"> so I think it's</font>

635
00:27:26,669 --> 00:27:31,649
<font color="#E5E5E5">interesting for us to show ways for you</font>

636
00:27:29,070 --> 00:27:33,990
<font color="#CCCCCC">to attack devices</font><font color="#E5E5E5"> so people would start</font>

637
00:27:31,649 --> 00:27:36,379
like better protecting them<font color="#CCCCCC"> so I think</font>

638
00:27:33,990 --> 00:27:39,419
<font color="#E5E5E5">for</font><font color="#CCCCCC"> example there's</font><font color="#E5E5E5"> no like no no Mauer</font>

639
00:27:36,380 --> 00:27:41,520
<font color="#E5E5E5">targeting</font><font color="#CCCCCC"> boot kids nowadays so I think</font>

640
00:27:39,419 --> 00:27:43,049
why we found it's interesting<font color="#E5E5E5"> for</font><font color="#CCCCCC"> us to</font>

641
00:27:41,520 --> 00:27:44,850
<font color="#E5E5E5">like give a talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> that it's</font>

642
00:27:43,049 --> 00:27:47,429
something<font color="#E5E5E5"> like not that complex</font><font color="#CCCCCC"> but</font>

643
00:27:44,850 --> 00:27:48,990
<font color="#CCCCCC">because it's so easy for</font><font color="#E5E5E5"> you to</font><font color="#CCCCCC"> hack in</font>

644
00:27:47,429 --> 00:27:51,240
<font color="#CCCCCC">and buy the device and</font><font color="#E5E5E5"> like me</font><font color="#CCCCCC"> right me</font>

645
00:27:48,990 --> 00:27:53,760
right<font color="#E5E5E5"> doesn't care</font><font color="#CCCCCC"> so if the it infects</font>

646
00:27:51,240 --> 00:27:55,890
the device it's gonna if it's someone

647
00:27:53,760 --> 00:27:57,450
<font color="#E5E5E5">turn turns off</font><font color="#CCCCCC"> its even in a</font><font color="#E5E5E5"> couple</font><font color="#CCCCCC"> of</font>

648
00:27:55,890 --> 00:27:59,700
minutes two minutes<font color="#CCCCCC"> four minutes five</font>

649
00:27:57,450 --> 00:28:01,860
<font color="#E5E5E5">minutes it's gonna hack it again so I</font>

650
00:27:59,700 --> 00:28:03,870
think people<font color="#CCCCCC"> should like to start</font><font color="#E5E5E5"> like</font>

651
00:28:01,860 --> 00:28:12,389
showing<font color="#E5E5E5"> proof of concepts you know and</font>

652
00:28:03,870 --> 00:28:15,120
trying<font color="#E5E5E5"> to reach</font><font color="#CCCCCC"> okay yeah and yet</font>

653
00:28:12,390 --> 00:28:17,970
basically<font color="#E5E5E5"> so I think we should</font><font color="#CCCCCC"> like have</font>

654
00:28:15,120 --> 00:28:19,889
pops<font color="#E5E5E5"> proof of concepts you know so like</font>

655
00:28:17,970 --> 00:28:23,990
ways for you<font color="#CCCCCC"> to attack device and so</font>

656
00:28:19,890 --> 00:28:23,990
<font color="#CCCCCC">people can understand the threat yeah</font>

657
00:28:37,000 --> 00:28:42,590
so the device is<font color="#CCCCCC"> well-documented it's</font>

658
00:28:40,220 --> 00:28:44,570
<font color="#CCCCCC">open-source but for a lot of</font><font color="#E5E5E5"> the first</font>

659
00:28:42,590 --> 00:28:46,039
<font color="#CCCCCC">phase of disassembling a device like</font>

660
00:28:44,570 --> 00:28:47,899
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is like reconnaissance phase right</font>

661
00:28:46,039 --> 00:28:48,980
like like right up in<font color="#E5E5E5"> a kill chain we're</font>

662
00:28:47,899 --> 00:28:50,330
gonna have a look at the chips<font color="#E5E5E5"> that are</font>

663
00:28:48,980 --> 00:28:51,799
<font color="#E5E5E5">on</font><font color="#CCCCCC"> it we're gonna</font><font color="#E5E5E5"> Google the chips in</font>

664
00:28:50,330 --> 00:28:54,590
the moment you find a<font color="#E5E5E5"> datasheet</font>

665
00:28:51,799 --> 00:28:56,809
<font color="#E5E5E5">it explains everything so</font><font color="#CCCCCC"> yeah it's</font><font color="#E5E5E5"> very</font>

666
00:28:54,590 --> 00:28:58,730
easy<font color="#CCCCCC"> for you if you can</font><font color="#E5E5E5"> just look the</font>

667
00:28:56,809 --> 00:29:00,710
device you<font color="#E5E5E5"> can google the and find the</font>

668
00:28:58,730 --> 00:29:03,409
datasheet<font color="#E5E5E5"> and it explains like this is</font>

669
00:29:00,710 --> 00:29:05,299
the<font color="#CCCCCC"> DI</font><font color="#E5E5E5"> this is the data in this is data</font>

670
00:29:03,409 --> 00:29:07,130
<font color="#E5E5E5">out this is the ground so you just</font>

671
00:29:05,299 --> 00:29:08,929
connect it accordingly<font color="#E5E5E5"> and there's like</font>

672
00:29:07,130 --> 00:29:11,000
flashers there's like<font color="#E5E5E5"> Hardware flashers</font>

673
00:29:08,929 --> 00:29:12,769
you can just plug plug and and them or

674
00:29:11,000 --> 00:29:15,440
if you have for<font color="#E5E5E5"> example a Raspberry Pi</font>

675
00:29:12,769 --> 00:29:16,940
<font color="#CCCCCC">or</font><font color="#E5E5E5"> a BeagleBone black for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> they</font>

676
00:29:15,440 --> 00:29:19,130
have all those<font color="#E5E5E5"> connections</font><font color="#CCCCCC"> for</font>

677
00:29:16,940 --> 00:29:21,169
interfacing with<font color="#E5E5E5"> SPI so you just need to</font>

678
00:29:19,130 --> 00:29:23,809
connect the correct wires<font color="#E5E5E5"> and you can</font>

679
00:29:21,169 --> 00:29:25,669
just reflash it so the way we<font color="#CCCCCC"> did</font><font color="#E5E5E5"> I</font>

680
00:29:23,809 --> 00:29:28,250
think<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can show them the device but</font>

681
00:29:25,669 --> 00:29:31,100
what we did we got the<font color="#E5E5E5"> device we</font>

682
00:29:28,250 --> 00:29:33,470
<font color="#CCCCCC">disordered the SPI flash</font><font color="#E5E5E5"> and we</font>

683
00:29:31,100 --> 00:29:36,080
connected<font color="#E5E5E5"> those wires okay</font><font color="#CCCCCC"> so it's not</font>

684
00:29:33,470 --> 00:29:38,419
here yeah we can show<font color="#CCCCCC"> you but yeah so we</font>

685
00:29:36,080 --> 00:29:40,250
disordered it and yeah and<font color="#E5E5E5"> then it's</font>

686
00:29:38,419 --> 00:29:42,320
very<font color="#CCCCCC"> easy for</font><font color="#E5E5E5"> us to use</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> hardware or</font>

687
00:29:40,250 --> 00:29:43,639
just like Raspberry Pi or<font color="#E5E5E5"> anything like</font>

688
00:29:42,320 --> 00:29:44,960
<font color="#E5E5E5">that</font><font color="#CCCCCC"> and if the chip you</font><font color="#E5E5E5"> can't find</font>

689
00:29:43,639 --> 00:29:51,949
<font color="#E5E5E5">anything on the chip then you need to go</font>

690
00:29:44,960 --> 00:30:26,899
<font color="#E5E5E5">with a logic analyzer no no</font><font color="#CCCCCC"> but there's</font>

691
00:29:51,950 --> 00:30:28,850
<font color="#E5E5E5">going to be a lot harder</font><font color="#CCCCCC"> so what happens</font>

692
00:30:26,899 --> 00:30:31,850
is<font color="#E5E5E5"> mostly most devices are going to use</font>

693
00:30:28,850 --> 00:30:36,709
some<font color="#E5E5E5"> kind of RSA signatures so it's most</font>

694
00:30:31,850 --> 00:30:38,928
of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> time is</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> 2 K 2 K so 2048 bits so</font>

695
00:30:36,710 --> 00:30:40,700
it is like it's good enough<font color="#E5E5E5"> so you can</font>

696
00:30:38,929 --> 00:30:42,710
<font color="#E5E5E5">just like hard code the public key on</font>

697
00:30:40,700 --> 00:30:45,019
<font color="#E5E5E5">our case we just erased the public key</font>

698
00:30:42,710 --> 00:30:47,269
and<font color="#E5E5E5"> only as the person who has the</font>

699
00:30:45,019 --> 00:30:48,050
private key can sign a new bootloader

700
00:30:47,269 --> 00:30:51,770
<font color="#CCCCCC">can</font>

701
00:30:48,050 --> 00:30:53,810
new<font color="#CCCCCC"> firmware</font><font color="#E5E5E5"> and can like update the</font>

702
00:30:51,770 --> 00:30:55,970
<font color="#CCCCCC">framework</font><font color="#E5E5E5"> so but what we need nowadays</font>

703
00:30:53,810 --> 00:30:58,550
we need also<font color="#CCCCCC"> Hardware protections like</font>

704
00:30:55,970 --> 00:31:01,210
TPM<font color="#E5E5E5"> like in smart cards and</font><font color="#CCCCCC"> all those</font>

705
00:30:58,550 --> 00:31:04,700
<font color="#CCCCCC">from</font><font color="#E5E5E5"> module</font><font color="#CCCCCC"> yeah trusted platform so</font>

706
00:31:01,210 --> 00:31:08,990
just by<font color="#CCCCCC"> using software based solutions</font>

707
00:31:04,700 --> 00:31:09,620
<font color="#E5E5E5">it's you can always bypass it's good but</font>

708
00:31:08,990 --> 00:31:11,180
<font color="#E5E5E5">not good enough</font>

709
00:31:09,620 --> 00:31:13,219
I think say<font color="#E5E5E5"> these six devices we</font><font color="#CCCCCC"> are</font>

710
00:31:11,180 --> 00:31:14,870
very mature right now<font color="#E5E5E5"> so like Microsoft</font>

711
00:31:13,220 --> 00:31:16,850
<font color="#E5E5E5">is</font><font color="#CCCCCC"> supported TPM thingy</font><font color="#E5E5E5"> Linux nowadays</font>

712
00:31:14,870 --> 00:31:18,320
yet<font color="#CCCCCC"> Canada secure boot so every single</font>

713
00:31:16,850 --> 00:31:21,129
part<font color="#E5E5E5"> of the boot process is analyzed</font>

714
00:31:18,320 --> 00:31:23,899
<font color="#CCCCCC">hash and you can basically trust it and</font>

715
00:31:21,130 --> 00:31:25,910
<font color="#E5E5E5">there are devices there's nothing yet</font>

716
00:31:23,900 --> 00:31:31,400
mostly<font color="#E5E5E5"> because they're cheap and</font><font color="#CCCCCC"> people</font>

717
00:31:25,910 --> 00:31:33,790
<font color="#CCCCCC">don't spend</font><font color="#E5E5E5"> money on that</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> charger from</font>

718
00:31:31,400 --> 00:31:33,790
China<font color="#E5E5E5"> it's</font>

719
00:31:42,490 --> 00:31:44,550
you

