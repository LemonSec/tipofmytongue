1
00:00:03,200 --> 00:00:09,210
okay hi the morning and so this is made

2
00:00:07,049 --> 00:00:10,709
to set and for spirit here there's going

3
00:00:09,210 --> 00:00:14,430
to be a lot of references in this one

4
00:00:10,709 --> 00:00:16,470
and let's just get on with it who I I

5
00:00:14,430 --> 00:00:18,660
I'm old enough to be grumpy at new

6
00:00:16,470 --> 00:00:20,700
technology and I hated containers I kind

7
00:00:18,660 --> 00:00:22,800
of still dislike them I worked at Red

8
00:00:20,700 --> 00:00:26,160
Hat and that means everything's

9
00:00:22,800 --> 00:00:28,680
containers and for the last I was a

10
00:00:26,160 --> 00:00:30,330
developer in a years ago and then when I

11
00:00:28,680 --> 00:00:32,519
switched into database engineering I had

12
00:00:30,330 --> 00:00:32,969
to start working in copper and working

13
00:00:32,520 --> 00:00:35,820
with docker

14
00:00:32,969 --> 00:00:37,950
meant I had to go into what I didn't

15
00:00:35,820 --> 00:00:40,590
like ended up working at Red Hat now

16
00:00:37,950 --> 00:00:42,600
where everything is container based and

17
00:00:40,590 --> 00:00:44,570
we have a desktop edition of this

18
00:00:42,600 --> 00:00:47,550
container if you have Optimas servers

19
00:00:44,570 --> 00:00:52,800
container based so I had to eventually

20
00:00:47,550 --> 00:00:55,790
get into that what I'd like to for you

21
00:00:52,800 --> 00:00:58,379
to get from this talk is to go through

22
00:00:55,790 --> 00:01:02,339
this demographic I do not use containers

23
00:00:58,380 --> 00:01:04,259
which is 46% on make 85,000 responses on

24
00:01:02,340 --> 00:01:07,350
stack overflow developer survey just

25
00:01:04,259 --> 00:01:10,049
recently and I'd like you to go into

26
00:01:07,350 --> 00:01:11,908
this tin graphic where do you try it for

27
00:01:10,049 --> 00:01:15,659
development test in production no just

28
00:01:11,909 --> 00:01:18,899
outside of work at least your tried it

29
00:01:15,659 --> 00:01:22,679
and have an educated opinion whether you

30
00:01:18,899 --> 00:01:24,090
like it or not and why am I here my

31
00:01:22,679 --> 00:01:26,939
boyfriend really wanted to go to this

32
00:01:24,090 --> 00:01:28,799
conference and then it might be go out

33
00:01:26,939 --> 00:01:30,958
of spite I put into the talk and got

34
00:01:28,799 --> 00:01:33,749
accepted this is why I did this is new

35
00:01:30,959 --> 00:01:38,039
by the way it's very tight little

36
00:01:33,749 --> 00:01:39,439
discount is very nice yes and where am I

37
00:01:38,039 --> 00:01:41,759
going with this

38
00:01:39,439 --> 00:01:45,300
we're gonna talk about containers and

39
00:01:41,759 --> 00:01:46,700
honking vulnerabilities an exploration

40
00:01:45,300 --> 00:01:49,979
[Music]

41
00:01:46,700 --> 00:01:52,049
anyway container Compton or actually a

42
00:01:49,979 --> 00:01:54,419
container is just a sophisticated use of

43
00:01:52,049 --> 00:01:57,419
namespaces which is something in the

44
00:01:54,419 --> 00:01:59,669
Linux kernel and it did to isolate

45
00:01:57,419 --> 00:02:03,359
processes so basically you have a

46
00:01:59,669 --> 00:02:06,298
certain set of container kernel teachers

47
00:02:03,359 --> 00:02:09,149
and those are isolated they don't talk

48
00:02:06,299 --> 00:02:10,740
to each other or shouldn't cam but they

49
00:02:09,149 --> 00:02:13,800
are isolated you can isolate them and

50
00:02:10,740 --> 00:02:15,990
the container is basically just depth so

51
00:02:13,800 --> 00:02:17,670
if you want to after this talk

52
00:02:15,990 --> 00:02:19,770
eventually start with containers and you

53
00:02:17,670 --> 00:02:21,660
don't want to talk a little compartment

54
00:02:19,770 --> 00:02:23,430
or any other runtimes you want to just

55
00:02:21,660 --> 00:02:24,960
start from scratch there are many many

56
00:02:23,430 --> 00:02:27,300
tutorials on the internet that you can

57
00:02:24,960 --> 00:02:28,950
just contain us from scratch and several

58
00:02:27,300 --> 00:02:32,700
really good ones there you can just have

59
00:02:28,950 --> 00:02:34,260
a few command line commands and you'll

60
00:02:32,700 --> 00:02:35,820
end up having your own containers

61
00:02:34,260 --> 00:02:37,980
obviously this is multiplied for

62
00:02:35,820 --> 00:02:40,799
production cgroups is an uncapped

63
00:02:37,980 --> 00:02:42,630
namespace and allocates resources so and

64
00:02:40,800 --> 00:02:46,110
then of course the PI system people make

65
00:02:42,630 --> 00:02:48,780
up a container containing content the 15

66
00:02:46,110 --> 00:02:50,520
containers got info or no this is

67
00:02:48,780 --> 00:02:51,540
actually important a stop to get to

68
00:02:50,520 --> 00:02:54,450
their did site that explaining

69
00:02:51,540 --> 00:02:56,160
containers and abilities and and here

70
00:02:54,450 --> 00:02:58,380
you have on the top you have see groups

71
00:02:56,160 --> 00:02:59,910
and on the bottom there namespaces and

72
00:02:58,380 --> 00:03:01,920
how they work together they're

73
00:02:59,910 --> 00:03:04,140
controlled by process speed let's escape

74
00:03:01,920 --> 00:03:06,480
the clear container completely inside of

75
00:03:04,140 --> 00:03:08,279
it it's not very complicated when you

76
00:03:06,480 --> 00:03:09,869
get into it it's very easy if you've

77
00:03:08,280 --> 00:03:11,970
been a suicide man it's just a bunch of

78
00:03:09,870 --> 00:03:16,560
commands to create an isolated process

79
00:03:11,970 --> 00:03:19,620
that can run stuff in it so and then

80
00:03:16,560 --> 00:03:21,150
there's container run times so you don't

81
00:03:19,620 --> 00:03:24,690
have to create problem scratch those are

82
00:03:21,150 --> 00:03:26,220
for example dr. and Padma but you can

83
00:03:24,690 --> 00:03:28,950
create them from scratch you can put you

84
00:03:26,220 --> 00:03:32,730
to do every time you use if you use the

85
00:03:28,950 --> 00:03:33,899
cloud you probably better advise to at

86
00:03:32,730 --> 00:03:36,060
some point have done system

87
00:03:33,900 --> 00:03:37,980
administration on your local server if

88
00:03:36,060 --> 00:03:40,440
then you know what's happening otherwise

89
00:03:37,980 --> 00:03:41,970
if you start doing cloud stuff it's just

90
00:03:40,440 --> 00:03:43,590
the same if you suddenly start using

91
00:03:41,970 --> 00:03:46,460
each there and have never use JavaScript

92
00:03:43,590 --> 00:03:48,630
alone okay let's go streaking

93
00:03:46,460 --> 00:03:53,580
scalability who knows about the February

94
00:03:48,630 --> 00:03:55,200
vulnerability and containers okay who

95
00:03:53,580 --> 00:03:58,770
works with containers actually who has

96
00:03:55,200 --> 00:04:01,290
tried them okay

97
00:03:58,770 --> 00:04:05,040
and you add one to the means raise their

98
00:04:01,290 --> 00:04:06,090
hands and someone just say this talk is

99
00:04:05,040 --> 00:04:11,420
it interesting for you because they

100
00:04:06,090 --> 00:04:13,170
develop and or do you just want to see

101
00:04:11,420 --> 00:04:17,370
because you do want to go to day

102
00:04:13,170 --> 00:04:19,560
problems okay good okay so the PVD is

103
00:04:17,370 --> 00:04:22,710
e1c contain a breakout yeah it was

104
00:04:19,560 --> 00:04:26,250
discovered in February and it allows you

105
00:04:22,710 --> 00:04:28,560
to execute malicious code in containers

106
00:04:26,250 --> 00:04:29,230
it allows you to escape the container

107
00:04:28,560 --> 00:04:30,940
and

108
00:04:29,230 --> 00:04:33,610
I has access to the whole squad system

109
00:04:30,940 --> 00:04:36,250
how that happens here's from the

110
00:04:33,610 --> 00:04:39,580
Bugzilla comm you can find other sources

111
00:04:36,250 --> 00:04:41,620
as well but that is a good security team

112
00:04:39,580 --> 00:04:43,650
and obviously a tinted agenda structure

113
00:04:41,620 --> 00:04:44,860
and it will have a lot about the

114
00:04:43,650 --> 00:04:46,390
vulnerabilities

115
00:04:44,860 --> 00:04:48,190
it says a blog was found in the way

116
00:04:46,390 --> 00:04:49,960
Ramsey handled system proud scriptures

117
00:04:48,190 --> 00:04:51,130
and running containers a malicious

118
00:04:49,960 --> 00:04:53,080
container could used to scroll to

119
00:04:51,130 --> 00:04:56,080
override content of run of the run see

120
00:04:53,080 --> 00:04:57,310
binary secondly indifferently run

121
00:04:56,080 --> 00:04:58,990
arbitrary commands in the container

122
00:04:57,310 --> 00:05:02,170
whole system how does happen is you have

123
00:04:58,990 --> 00:05:04,780
to download a it's basically says that

124
00:05:02,170 --> 00:05:06,340
it needs minimal user interaction that

125
00:05:04,780 --> 00:05:08,469
minimum user interactions just you

126
00:05:06,340 --> 00:05:10,659
download a public container image which

127
00:05:08,470 --> 00:05:14,890
has malicious code in it otherwise you

128
00:05:10,660 --> 00:05:19,290
can column and use some X sub from the

129
00:05:14,890 --> 00:05:23,740
actual article on depth internet that

130
00:05:19,290 --> 00:05:25,990
come and it says why you should run exit

131
00:05:23,740 --> 00:05:28,060
in it it's set on by default in the Red

132
00:05:25,990 --> 00:05:30,220
Hat manage the admins don't run it to

133
00:05:28,060 --> 00:05:33,790
have difficulty maintained and it really

134
00:05:30,220 --> 00:05:35,770
is but once you get to once you realize

135
00:05:33,790 --> 00:05:37,720
how it's done it's not as hard it's just

136
00:05:35,770 --> 00:05:41,409
like a bit like doing a zone file

137
00:05:37,720 --> 00:05:43,870
somewhere on your DNS service it's once

138
00:05:41,410 --> 00:05:45,940
you learn how to do it you know how to

139
00:05:43,870 --> 00:05:49,780
do it's not hard after you after

140
00:05:45,940 --> 00:05:51,340
learning and the container vulnerability

141
00:05:49,780 --> 00:05:54,070
it blocked through correct use of

142
00:05:51,340 --> 00:05:55,799
username spaces I'll get into what that

143
00:05:54,070 --> 00:05:58,840
means in a bit

144
00:05:55,800 --> 00:06:00,520
although the docker package when certain

145
00:05:58,840 --> 00:06:02,020
people take orders to their the open

146
00:06:00,520 --> 00:06:05,500
source where I am which is Moby engine

147
00:06:02,020 --> 00:06:08,140
and there's doctor doctor doctor itself

148
00:06:05,500 --> 00:06:09,850
it depends on how you set the namespaces

149
00:06:08,140 --> 00:06:13,150
or whether you're go level at all and

150
00:06:09,850 --> 00:06:15,490
also if you put a seven it's an

151
00:06:13,150 --> 00:06:17,710
important mode it's not a problem at all

152
00:06:15,490 --> 00:06:19,990
so while they've typed up this

153
00:06:17,710 --> 00:06:22,000
vulnerability it wasn't actually one it

154
00:06:19,990 --> 00:06:26,410
depends on which which operating system

155
00:06:22,000 --> 00:06:28,180
use and which which run time in terms of

156
00:06:26,410 --> 00:06:30,430
how the permissions were set but it

157
00:06:28,180 --> 00:06:32,140
wasn't just from see you can use REM pod

158
00:06:30,430 --> 00:06:34,390
men that were affected at all the lxd

159
00:06:32,140 --> 00:06:36,719
and it apache needs us so basically

160
00:06:34,390 --> 00:06:39,520
everything that panel runs containers a

161
00:06:36,720 --> 00:06:41,740
check this were before everything that

162
00:06:39,520 --> 00:06:43,900
attach due to the right game spaces

163
00:06:41,740 --> 00:06:47,080
you executed code and then you can

164
00:06:43,900 --> 00:06:48,729
escape this it's hard to do and I have a

165
00:06:47,080 --> 00:06:50,669
link to a demo where you can try it

166
00:06:48,730 --> 00:06:54,010
yourself at the very end

167
00:06:50,670 --> 00:06:55,630
okay so this is what the road looks like

168
00:06:54,010 --> 00:06:58,390
a flawless family meeting empty-handed

169
00:06:55,630 --> 00:07:00,400
system party scripters decision to see

170
00:06:58,390 --> 00:07:02,890
how the actual renewability state

171
00:07:00,400 --> 00:07:04,060
reported and write it down this is just

172
00:07:02,890 --> 00:07:05,349
a screenshot at the top of the website

173
00:07:04,060 --> 00:07:07,060
if you get there done in about the

174
00:07:05,350 --> 00:07:10,060
comment it's really interesting so if

175
00:07:07,060 --> 00:07:13,240
you are into security these are really

176
00:07:10,060 --> 00:07:15,100
valuable thing the trying to figure out

177
00:07:13,240 --> 00:07:17,920
how it works it done infrastructure to

178
00:07:15,100 --> 00:07:20,500
allow doing forensics or other in this

179
00:07:17,920 --> 00:07:22,870
again investigative types and using more

180
00:07:20,500 --> 00:07:26,050
infrastructure distance and it ready to

181
00:07:22,870 --> 00:07:28,930
start so in one of those commenter says

182
00:07:26,050 --> 00:07:32,470
this memorable is mitigated if SAS is

183
00:07:28,930 --> 00:07:34,210
enforcing mode and even person mode is

184
00:07:32,470 --> 00:07:35,890
for example a prerequisite will open

185
00:07:34,210 --> 00:07:38,489
should contain a platform or for the

186
00:07:35,890 --> 00:07:42,039
platforms that use container station

187
00:07:38,490 --> 00:07:44,050
then further down you see that atomic

188
00:07:42,040 --> 00:07:47,740
host for example is not affected by this

189
00:07:44,050 --> 00:07:49,390
does anyone know atomic oh okay so it's

190
00:07:47,740 --> 00:07:51,580
an immutable operating system which

191
00:07:49,390 --> 00:07:53,890
means most of the operating system is

192
00:07:51,580 --> 00:07:55,539
actually immutable which means you

193
00:07:53,890 --> 00:07:57,969
cannot write to it it's a read-only

194
00:07:55,540 --> 00:08:01,210
operating system we're only in this case

195
00:07:57,970 --> 00:08:03,820
only flash home and /var are writable

196
00:08:01,210 --> 00:08:06,640
which means even in ki-joon have

197
00:08:03,820 --> 00:08:08,500
malicious code it's likely to not be

198
00:08:06,640 --> 00:08:10,180
able to do anything with it it depends

199
00:08:08,500 --> 00:08:13,900
on what exactly the malicious code is

200
00:08:10,180 --> 00:08:15,760
doing but in most cases the musical

201
00:08:13,900 --> 00:08:20,609
opportunity can save you from security

202
00:08:15,760 --> 00:08:23,409
coverage I'll explain so the terminology

203
00:08:20,610 --> 00:08:24,670
which is just names people made up and

204
00:08:23,410 --> 00:08:27,400
you have to learn it by heart and then

205
00:08:24,670 --> 00:08:29,530
pretend they're smart but people do just

206
00:08:27,400 --> 00:08:33,270
come up with things and then we learning

207
00:08:29,530 --> 00:08:36,130
them so none of this is none of this is

208
00:08:33,270 --> 00:08:38,049
something you know you just learn the

209
00:08:36,130 --> 00:08:41,140
concepts you learned its terms and then

210
00:08:38,049 --> 00:08:43,059
suddenly you know thing this is what I

211
00:08:41,140 --> 00:08:45,130
was always annoyed at when people start

212
00:08:43,059 --> 00:08:48,550
throwing around abbreviations and things

213
00:08:45,130 --> 00:08:50,710
the names and then you know it's it's

214
00:08:48,550 --> 00:08:54,380
better to explain thank you sir

215
00:08:50,710 --> 00:08:56,210
so run see is just a thing it's a seal

216
00:08:54,380 --> 00:08:58,820
to peruse it on the command line it

217
00:08:56,210 --> 00:09:01,040
spawns and round OCI container OCI is

218
00:08:58,820 --> 00:09:02,810
open container initiative and physically

219
00:09:01,040 --> 00:09:05,300
are standard it's done by the lunar

220
00:09:02,810 --> 00:09:07,939
foundation it's a standard for creating

221
00:09:05,300 --> 00:09:10,339
containers and how image specification

222
00:09:07,940 --> 00:09:12,230
build specifications are basically now

223
00:09:10,340 --> 00:09:14,330
you can properly to use Padma and they

224
00:09:12,230 --> 00:09:15,890
all work with each other you can for

225
00:09:14,330 --> 00:09:19,340
example use Codman which is a container

226
00:09:15,890 --> 00:09:21,650
runtime without a daemon and you can use

227
00:09:19,340 --> 00:09:24,070
it a block requires to create and to

228
00:09:21,650 --> 00:09:27,110
manage containers which is really nice

229
00:09:24,070 --> 00:09:30,800
so yes thunders are important in this

230
00:09:27,110 --> 00:09:33,830
case especially so from this

231
00:09:30,800 --> 00:09:35,750
vulnerability head run see to see your

232
00:09:33,830 --> 00:09:39,710
item is pumped in here you have X Ln X

233
00:09:35,750 --> 00:09:43,600
as the limit is it's an additional

234
00:09:39,710 --> 00:09:48,020
security control it helps you isolate

235
00:09:43,600 --> 00:09:52,540
the processes basically deploy

236
00:09:48,020 --> 00:09:53,750
containers in the host and you you set

237
00:09:52,540 --> 00:09:55,370
labels

238
00:09:53,750 --> 00:09:57,170
it's a labeling system more or less and

239
00:09:55,370 --> 00:10:00,380
it has policy so you start the label

240
00:09:57,170 --> 00:10:02,750
you'll say container underscore t and

241
00:10:00,380 --> 00:10:05,480
then this sets a label that's this can

242
00:10:02,750 --> 00:10:10,190
be called by cantina underscore runtime

243
00:10:05,480 --> 00:10:12,080
underscore t and otherwise container

244
00:10:10,190 --> 00:10:13,610
engines you only have access to them so

245
00:10:12,080 --> 00:10:15,530
there are policies which define which

246
00:10:13,610 --> 00:10:17,330
label has access to what and you have

247
00:10:15,530 --> 00:10:19,250
labels that basically what the FC Linux

248
00:10:17,330 --> 00:10:21,530
is it's just very complicated because

249
00:10:19,250 --> 00:10:25,730
you define it for every process so in

250
00:10:21,530 --> 00:10:27,860
Apache that have HTTP HTTP underscore T

251
00:10:25,730 --> 00:10:29,870
and then the the runtime and you use

252
00:10:27,860 --> 00:10:32,540
escape so you have the kernel namespace

253
00:10:29,870 --> 00:10:34,370
and you have to use a namespace and the

254
00:10:32,540 --> 00:10:37,040
problem with a lot of vulnerabilities if

255
00:10:34,370 --> 00:10:39,320
things are allowed to get from the using

256
00:10:37,040 --> 00:10:42,680
namespace into the kernel memory that's

257
00:10:39,320 --> 00:10:45,710
where you get into trouble and so the

258
00:10:42,680 --> 00:10:47,930
way to enforce experiments on your

259
00:10:45,710 --> 00:10:51,710
system if you use Linux is to do second

260
00:10:47,930 --> 00:10:53,839
post one to check whether it is

261
00:10:51,710 --> 00:10:58,790
important you'll type get enforce one

262
00:10:53,840 --> 00:11:00,770
just getting both and whereas Jesus will

263
00:10:58,790 --> 00:11:02,170
show you two states up here and the

264
00:11:00,770 --> 00:11:04,689
Linux

265
00:11:02,170 --> 00:11:06,579
and we also have our active in its

266
00:11:04,690 --> 00:11:09,339
coloring book you can download it from

267
00:11:06,579 --> 00:11:12,939
the link below or just search engine it

268
00:11:09,339 --> 00:11:16,000
and it very nice and it explained I said

269
00:11:12,940 --> 00:11:17,350
it's in a very good level but Hannity

270
00:11:16,000 --> 00:11:18,910
does conferences on push it they don't

271
00:11:17,350 --> 00:11:21,010
have anymore

272
00:11:18,910 --> 00:11:23,439
but yeah you can you just downloaded

273
00:11:21,010 --> 00:11:24,850
some if you have these for container

274
00:11:23,440 --> 00:11:27,190
commandos as well so they are three

275
00:11:24,850 --> 00:11:28,870
different types of coloring books just

276
00:11:27,190 --> 00:11:31,930
to learn container to learn a silliness

277
00:11:28,870 --> 00:11:35,980
and yeah okay

278
00:11:31,930 --> 00:11:39,069
so terminology wise anti Linux was the

279
00:11:35,980 --> 00:11:41,740
security control layer and we had rumty

280
00:11:39,070 --> 00:11:43,750
next is atomic host which is just one of

281
00:11:41,740 --> 00:11:45,610
the many mutable operating systems out

282
00:11:43,750 --> 00:11:47,769
there as you know right head has

283
00:11:45,610 --> 00:11:49,930
acquired porous for Isis contain early

284
00:11:47,769 --> 00:11:51,700
enough speak of mutable and he also had

285
00:11:49,930 --> 00:11:53,140
a comic book and cake immutable now

286
00:11:51,700 --> 00:11:56,620
we're going to have the door for us and

287
00:11:53,140 --> 00:11:59,380
we also have relatively close real close

288
00:11:56,620 --> 00:12:03,269
so and then there's others there's for

289
00:11:59,380 --> 00:12:06,100
example endless OS which are targeting

290
00:12:03,269 --> 00:12:08,800
developing countries and they're helping

291
00:12:06,100 --> 00:12:11,380
them to give easy to make laptops with

292
00:12:08,800 --> 00:12:13,149
their own operating system which is NSS

293
00:12:11,380 --> 00:12:17,380
and then they help developing countries

294
00:12:13,149 --> 00:12:19,630
by making the laptop available and when

295
00:12:17,380 --> 00:12:21,250
you really don't have Wi-Fi for example

296
00:12:19,630 --> 00:12:23,079
or just internet in general you have

297
00:12:21,250 --> 00:12:24,820
your snapshot of your system and then

298
00:12:23,079 --> 00:12:27,459
whenever you get to an internet you can

299
00:12:24,820 --> 00:12:29,860
just update easily and the way atomic

300
00:12:27,459 --> 00:12:33,189
host worked with it use RPM ice-cream

301
00:12:29,860 --> 00:12:36,579
and illiberal h3 is kind of like gifts

302
00:12:33,190 --> 00:12:39,730
for operating systems you can rebase to

303
00:12:36,579 --> 00:12:41,380
a new snapshot and redeploy and if

304
00:12:39,730 --> 00:12:44,620
something about working in the updates

305
00:12:41,380 --> 00:12:46,810
you just fall back so you go back and

306
00:12:44,620 --> 00:12:48,910
after you go back you can then when you

307
00:12:46,810 --> 00:12:53,920
know the update prepared go back in kit

308
00:12:48,910 --> 00:12:57,219
it's just like it's and branches okay so

309
00:12:53,920 --> 00:12:59,170
user name spaces I've tried to explain

310
00:12:57,220 --> 00:13:00,790
that a little bit of game spaces you

311
00:12:59,170 --> 00:13:04,660
have the tournament it's not even

312
00:13:00,790 --> 00:13:06,760
amazing and you basically make sure that

313
00:13:04,660 --> 00:13:11,620
access is only granted where it's

314
00:13:06,760 --> 00:13:14,110
necessary okay you take the waste for

315
00:13:11,620 --> 00:13:15,760
the container vulnerability this for

316
00:13:14,110 --> 00:13:17,589
security in blonde in general

317
00:13:15,760 --> 00:13:20,019
read the manual always read the manual

318
00:13:17,589 --> 00:13:22,630
and simply use a cloud if you for

319
00:13:20,019 --> 00:13:25,420
example when I used to set up redshift

320
00:13:22,630 --> 00:13:28,540
which is a database data warehouse on

321
00:13:25,420 --> 00:13:30,849
AWS we always read to all the venue you

322
00:13:28,540 --> 00:13:31,689
just set it up and then given that this

323
00:13:30,850 --> 00:13:33,370
is the same where all the

324
00:13:31,690 --> 00:13:34,990
vulnerabilities with default passwords

325
00:13:33,370 --> 00:13:36,730
come from if you just set up them

326
00:13:34,990 --> 00:13:38,709
something called a tutorial and they

327
00:13:36,730 --> 00:13:40,779
actually deployed in production so

328
00:13:38,709 --> 00:13:42,609
always read the manual always make sure

329
00:13:40,779 --> 00:13:45,699
that the security policies are intense

330
00:13:42,610 --> 00:13:48,790
and that it is law from the table

331
00:13:45,699 --> 00:13:50,410
without them talking and don't forget to

332
00:13:48,790 --> 00:13:52,719
update your system regularly it's really

333
00:13:50,410 --> 00:13:54,459
important and if you have an immutable

334
00:13:52,720 --> 00:13:56,709
system then it is if you will practice

335
00:13:54,459 --> 00:13:59,319
something wrong that's that's one bonus

336
00:13:56,709 --> 00:14:03,069
if you don't update there was another

337
00:13:59,320 --> 00:14:05,589
vulnerability which was in communities

338
00:14:03,070 --> 00:14:09,190
in November 2018 so just recently it

339
00:14:05,589 --> 00:14:11,589
well who knows about this one okay oh

340
00:14:09,190 --> 00:14:13,329
you can easily be viewed by malicious

341
00:14:11,589 --> 00:14:17,410
attacks and you don't even know about

342
00:14:13,329 --> 00:14:19,359
them so this this special vulnerability

343
00:14:17,410 --> 00:14:20,699
for example you can't believe you

344
00:14:19,360 --> 00:14:23,560
forensics on it

345
00:14:20,699 --> 00:14:26,649
this is from the actual issue on github

346
00:14:23,560 --> 00:14:28,300
link on the bottom right there is no

347
00:14:26,649 --> 00:14:30,639
simple way to detect whether it is

348
00:14:28,300 --> 00:14:33,130
vulnerability has been used so basically

349
00:14:30,639 --> 00:14:36,120
they have access to the API can be an

350
00:14:33,130 --> 00:14:40,029
anonymous user because you did guys and

351
00:14:36,120 --> 00:14:44,110
you cannot distinguish the authorized

352
00:14:40,029 --> 00:14:47,019
and and correct fests from the malicious

353
00:14:44,110 --> 00:14:49,510
ones because it's just not it's just not

354
00:14:47,019 --> 00:14:53,319
in the logs because it's a valid it's a

355
00:14:49,510 --> 00:14:54,990
valid thing so what happened is there

356
00:14:53,319 --> 00:14:57,370
were the privilege escalation so you

357
00:14:54,990 --> 00:14:59,829
call the API and it did get to do

358
00:14:57,370 --> 00:15:02,470
another API in another API and then you

359
00:14:59,829 --> 00:15:04,779
can compromise quads who are running

360
00:15:02,470 --> 00:15:07,630
co-located on and it won't host because

361
00:15:04,779 --> 00:15:09,250
usually you have a machine and it has

362
00:15:07,630 --> 00:15:10,959
several pods several groups of

363
00:15:09,250 --> 00:15:12,550
containers running and then if you

364
00:15:10,959 --> 00:15:14,050
escape wrong container you have access

365
00:15:12,550 --> 00:15:16,209
to everything and that's where you can

366
00:15:14,050 --> 00:15:18,670
also explode environmental variables

367
00:15:16,209 --> 00:15:21,638
secrets secrets of educators password

368
00:15:18,670 --> 00:15:25,589
system it's rotated project or

369
00:15:21,639 --> 00:15:27,360
containment of the environments

370
00:15:25,590 --> 00:15:29,970
so this was a very bad winner ability

371
00:15:27,360 --> 00:15:32,820
and yeah it's fixed now and kubernetes

372
00:15:29,970 --> 00:15:34,280
but you know you never know what's not

373
00:15:32,820 --> 00:15:36,540
fixed okay

374
00:15:34,280 --> 00:15:38,040
exploration rights so we're gonna pit it

375
00:15:36,540 --> 00:15:40,140
to continue constant and we've done a

376
00:15:38,040 --> 00:15:42,740
bit of the vulnerabilities at least in

377
00:15:40,140 --> 00:15:45,780
terms of understanding it's going on

378
00:15:42,740 --> 00:15:47,880
let's go into exploration core platforms

379
00:15:45,780 --> 00:15:49,860
which is what to use or what you develop

380
00:15:47,880 --> 00:15:51,630
or we have then contains from scratch

381
00:15:49,860 --> 00:15:53,070
and their container runtimes and contain

382
00:15:51,630 --> 00:15:54,420
an Orchestrator those are the things

383
00:15:53,070 --> 00:15:57,180
that are basically use both in

384
00:15:54,420 --> 00:15:59,130
infrastructure economic platform wide on

385
00:15:57,180 --> 00:16:02,670
that same Stack Overflow survey we had

386
00:15:59,130 --> 00:16:06,390
over 67,000 actually yeah 67,000

387
00:16:02,670 --> 00:16:08,250
responses and so people more than half

388
00:16:06,390 --> 00:16:11,520
of the people develop professionally for

389
00:16:08,250 --> 00:16:14,010
the core Linux after that Windows and

390
00:16:11,520 --> 00:16:16,650
then within those two although Phil

391
00:16:14,010 --> 00:16:20,490
topper in AWS so those are the four main

392
00:16:16,650 --> 00:16:24,480
things people develop in and forth when

393
00:16:20,490 --> 00:16:27,270
they use their own laptops this is what

394
00:16:24,480 --> 00:16:29,400
is most like Windows and then kind of

395
00:16:27,270 --> 00:16:32,810
evenly distributed between Mac press

396
00:16:29,400 --> 00:16:35,010
infinite space so they are not working

397
00:16:32,810 --> 00:16:39,300
mostly on the thing they're developing

398
00:16:35,010 --> 00:16:42,060
for let's go to the most loved ones so

399
00:16:39,300 --> 00:16:43,380
Linux is very loved it is nice and then

400
00:16:42,060 --> 00:16:45,420
we have doctor I don't know where that

401
00:16:43,380 --> 00:16:47,220
flub but it's there and component is

402
00:16:45,420 --> 00:16:50,219
they are good to use they're easy to use

403
00:16:47,220 --> 00:16:52,230
and once you it's just that it's a bit

404
00:16:50,220 --> 00:16:55,290
of a learning curve that you would start

405
00:16:52,230 --> 00:16:56,190
and and then we have the wanted one so

406
00:16:55,290 --> 00:16:58,890
people want talker

407
00:16:56,190 --> 00:17:00,990
people want AWS and energen divinity

408
00:16:58,890 --> 00:17:04,349
people just want to developer that but

409
00:17:00,990 --> 00:17:05,730
most of the people are just like if you

410
00:17:04,349 --> 00:17:07,349
if you're a JavaScript developer

411
00:17:05,730 --> 00:17:08,069
starting out people will tell you to use

412
00:17:07,349 --> 00:17:09,869
jQuery

413
00:17:08,069 --> 00:17:11,909
then this is the same thing you have to

414
00:17:09,869 --> 00:17:14,760
understand the details and really know

415
00:17:11,910 --> 00:17:16,350
what's going on do you really need

416
00:17:14,760 --> 00:17:17,730
containers I talk to a lot of people who

417
00:17:16,349 --> 00:17:20,369
don't like containers don't think you

418
00:17:17,730 --> 00:17:22,530
need them so let's let's take a quick

419
00:17:20,369 --> 00:17:27,329
intro into do you actually need

420
00:17:22,530 --> 00:17:29,070
containers know if you're working alone

421
00:17:27,329 --> 00:17:31,409
so if you're developing on your own you

422
00:17:29,070 --> 00:17:34,590
don't need containers it's nice because

423
00:17:31,410 --> 00:17:37,210
if you download stuff and you can just

424
00:17:34,590 --> 00:17:40,560
download the container image for example

425
00:17:37,210 --> 00:17:42,970
than work on that but you don't need it

426
00:17:40,560 --> 00:17:44,350
if it seems really small and the

427
00:17:42,970 --> 00:17:45,910
machines are all set up for the same

428
00:17:44,350 --> 00:17:49,540
development you know you have all the

429
00:17:45,910 --> 00:17:51,280
things tools you also don't here and if

430
00:17:49,540 --> 00:17:52,990
you what you go out into the scale to

431
00:17:51,280 --> 00:17:54,940
just about in participant booth company

432
00:17:52,990 --> 00:17:56,710
that dermatologists internally for their

433
00:17:54,940 --> 00:17:59,220
accounting or something you also know

434
00:17:56,710 --> 00:18:01,870
you're not likely to need containers and

435
00:17:59,220 --> 00:18:03,910
and also you need some time for

436
00:18:01,870 --> 00:18:06,280
retraining and proper training which

437
00:18:03,910 --> 00:18:07,630
means if you suddenly usually

438
00:18:06,280 --> 00:18:10,510
technologies you will need to learn the

439
00:18:07,630 --> 00:18:12,460
bottle you can just go one of one of the

440
00:18:10,510 --> 00:18:13,960
chimp and spa and learn about it and at

441
00:18:12,460 --> 00:18:17,230
the point is no one else knows about how

442
00:18:13,960 --> 00:18:20,470
to use it and what we did for example in

443
00:18:17,230 --> 00:18:22,090
some companies view all the hats people

444
00:18:20,470 --> 00:18:26,050
developing in containers and then

445
00:18:22,090 --> 00:18:27,699
pushing that code into a non container

446
00:18:26,050 --> 00:18:29,020
iPad from which all the words if you're

447
00:18:27,700 --> 00:18:31,780
comfortable around containers on their

448
00:18:29,020 --> 00:18:33,639
own then you can think a cue that and

449
00:18:31,780 --> 00:18:36,399
even if your company doesn't use you can

450
00:18:33,640 --> 00:18:37,930
change maybe if you're working alone

451
00:18:36,400 --> 00:18:41,920
want it on your skills you want to be

452
00:18:37,930 --> 00:18:44,620
enjoyable fast you'll just put any

453
00:18:41,920 --> 00:18:46,060
container on time on your resume if your

454
00:18:44,620 --> 00:18:49,209
team likely to get bigger at all the

455
00:18:46,060 --> 00:18:53,080
very useful so and the first team we use

456
00:18:49,210 --> 00:18:55,810
vagrant and dr. which was very annoying

457
00:18:53,080 --> 00:18:58,389
to set up and stop all this didn't work

458
00:18:55,810 --> 00:19:00,909
out nowadays things are really easy and

459
00:18:58,390 --> 00:19:03,610
then nowadays we just have a readme on

460
00:19:00,910 --> 00:19:04,900
github we explain the exact steps to set

461
00:19:03,610 --> 00:19:07,240
things up and you know you'll have the

462
00:19:04,900 --> 00:19:08,770
exact same system as the person within

463
00:19:07,240 --> 00:19:10,600
there for five years and then you can

464
00:19:08,770 --> 00:19:13,900
just really focus in the code instead of

465
00:19:10,600 --> 00:19:15,669
on the setup and if you also can deal

466
00:19:13,900 --> 00:19:17,640
with the added complexity and retraining

467
00:19:15,670 --> 00:19:19,930
skills then maybe it's for you

468
00:19:17,640 --> 00:19:21,970
unless it is Perl native which is

469
00:19:19,930 --> 00:19:24,670
another common term that we use a lot

470
00:19:21,970 --> 00:19:26,440
right now the cloud native means you

471
00:19:24,670 --> 00:19:28,930
have all the people who are already

472
00:19:26,440 --> 00:19:30,850
trained or using the cloud and you're

473
00:19:28,930 --> 00:19:33,580
using the cloud for long it means you're

474
00:19:30,850 --> 00:19:35,469
either in a public cloud like e ie WS or

475
00:19:33,580 --> 00:19:41,560
you have your private cloud set up or

476
00:19:35,470 --> 00:19:43,360
you have a bit of both so I posed when

477
00:19:41,560 --> 00:19:45,100
you really need containers which should

478
00:19:43,360 --> 00:19:46,419
think about getting them is if you work

479
00:19:45,100 --> 00:19:49,179
in a large team or across different

480
00:19:46,420 --> 00:19:49,830
teams but for example we have desktop

481
00:19:49,180 --> 00:19:52,440
team

482
00:19:49,830 --> 00:19:56,580
you have so many teams that all work on

483
00:19:52,440 --> 00:19:58,500
some specific part and then you will eat

484
00:19:56,580 --> 00:20:00,960
containers it makes things so much

485
00:19:58,500 --> 00:20:02,630
easier and obviously if you're using

486
00:20:00,960 --> 00:20:04,890
cloud is making whole lot of sense

487
00:20:02,630 --> 00:20:06,659
because you have more control over what

488
00:20:04,890 --> 00:20:08,909
you do they'll be pushing rather than

489
00:20:06,659 --> 00:20:11,880
having to focus on what image you're

490
00:20:08,909 --> 00:20:13,559
actually using in the cloud if you're in

491
00:20:11,880 --> 00:20:16,230
testing it's super useful you can just

492
00:20:13,559 --> 00:20:18,178
have your database run up quickly tap

493
00:20:16,230 --> 00:20:20,220
against the database and then shut down

494
00:20:18,179 --> 00:20:22,200
the container so it's very useful for a

495
00:20:20,220 --> 00:20:24,240
from scratch database that you want to

496
00:20:22,200 --> 00:20:26,370
keep using although for a stateful one

497
00:20:24,240 --> 00:20:28,769
you can keep to continue running tests

498
00:20:26,370 --> 00:20:30,689
against the database and then purge it

499
00:20:28,769 --> 00:20:33,000
all or leave it on depending on what you

500
00:20:30,690 --> 00:20:34,559
can see it's very useful also if your

501
00:20:33,000 --> 00:20:36,630
application needs to scale and you know

502
00:20:34,559 --> 00:20:39,330
that you have this one container then

503
00:20:36,630 --> 00:20:42,960
you just use your platforms suddenly

504
00:20:39,330 --> 00:20:44,850
you'll have twenty hundred thousand

505
00:20:42,960 --> 00:20:47,039
machines it easy because you don't have

506
00:20:44,850 --> 00:20:48,539
to take care of that you just develop

507
00:20:47,039 --> 00:20:51,059
against this one container and push it

508
00:20:48,539 --> 00:20:52,740
it's done this is very useful if you

509
00:20:51,059 --> 00:20:54,779
want to clean system up to trying out

510
00:20:52,740 --> 00:20:58,500
new things so I for example your desktop

511
00:20:54,779 --> 00:21:01,260
and you have to install Python 2003 go

512
00:20:58,500 --> 00:21:04,139
and run and you really don't want these

513
00:21:01,260 --> 00:21:06,210
to be on your system and because it is

514
00:21:04,139 --> 00:21:08,879
low tier then you can also use

515
00:21:06,210 --> 00:21:11,669
containers which is nice okay

516
00:21:08,880 --> 00:21:13,980
common workflows the way the way a lot

517
00:21:11,669 --> 00:21:16,169
of people at red head work who are

518
00:21:13,980 --> 00:21:19,590
directly developing for kubernetes or

519
00:21:16,169 --> 00:21:21,299
for the immutable hosts and these are

520
00:21:19,590 --> 00:21:24,209
direct quotes I got two until my

521
00:21:21,299 --> 00:21:26,370
colleagues one worked inside docker

522
00:21:24,210 --> 00:21:29,340
containers and says his local

523
00:21:26,370 --> 00:21:31,260
environment he just basically uses your

524
00:21:29,340 --> 00:21:33,000
local environment the settings and file

525
00:21:31,260 --> 00:21:37,289
system pipes turns into a docker

526
00:21:33,000 --> 00:21:39,779
container which is easy commands it is

527
00:21:37,289 --> 00:21:42,510
to look up how to type those via docker

528
00:21:39,779 --> 00:21:44,909
run parameters and then they'll happen

529
00:21:42,510 --> 00:21:45,990
your system inside a container you can

530
00:21:44,909 --> 00:21:49,470
play around with it but you're not

531
00:21:45,990 --> 00:21:52,470
infecting your own post and some of us

532
00:21:49,470 --> 00:21:54,149
are using all effects for example and so

533
00:21:52,470 --> 00:21:55,769
yeah you can use coconut anomalous you

534
00:21:54,149 --> 00:21:58,168
can still do all the stuff you

535
00:21:55,769 --> 00:22:01,500
configured in assistance another

536
00:21:58,169 --> 00:22:04,049
interesting workflow is

537
00:22:01,500 --> 00:22:05,970
so someone wanted to use hot men inside

538
00:22:04,049 --> 00:22:07,379
odd men problem to continue rent and

539
00:22:05,970 --> 00:22:10,440
this is the same as a few Joker inside

540
00:22:07,380 --> 00:22:13,590
proper the way a doctor and odd men very

541
00:22:10,440 --> 00:22:17,039
so I contain a runtime if the wrapper

542
00:22:13,590 --> 00:22:18,780
around these big container on pops right

543
00:22:17,039 --> 00:22:21,000
it's a wrapper that already developed

544
00:22:18,780 --> 00:22:22,080
for you you can do it yourself but it's

545
00:22:21,000 --> 00:22:24,900
just going to take a long time and

546
00:22:22,080 --> 00:22:27,928
obviously then a one-person show running

547
00:22:24,900 --> 00:22:29,669
before pin if you use an established run

548
00:22:27,929 --> 00:22:33,570
term like doctor apartment for example

549
00:22:29,669 --> 00:22:35,580
then you will have to you learn those

550
00:22:33,570 --> 00:22:39,570
commands like doctor run hot man run

551
00:22:35,580 --> 00:22:42,449
some people so even alias so you have

552
00:22:39,570 --> 00:22:45,059
alias doctor pub men and then they will

553
00:22:42,450 --> 00:22:47,190
use they will just continue using docker

554
00:22:45,059 --> 00:22:51,360
run but in the algorithm PubMed behind

555
00:22:47,190 --> 00:22:53,340
it the the thing about that is so most

556
00:22:51,360 --> 00:22:56,219
tutorials are for doctor opera fee

557
00:22:53,340 --> 00:22:58,049
because it's the more comping and but it

558
00:22:56,220 --> 00:23:00,059
has a daemon running so it's a single

559
00:22:58,049 --> 00:23:02,070
point of failure if you use the doctor

560
00:23:00,059 --> 00:23:05,280
Damon that you need to run in order to

561
00:23:02,070 --> 00:23:06,870
run docker containers you cannot it's a

562
00:23:05,280 --> 00:23:09,210
single point of failure and it's big

563
00:23:06,870 --> 00:23:10,168
whereas in part Minh portman does not

564
00:23:09,210 --> 00:23:12,480
need to Damon

565
00:23:10,169 --> 00:23:13,830
both can be run root without root now so

566
00:23:12,480 --> 00:23:16,980
I'm privileged which is really nice

567
00:23:13,830 --> 00:23:20,120
which means if you use root inside the

568
00:23:16,980 --> 00:23:23,370
container you are bound against your

569
00:23:20,120 --> 00:23:24,870
user link space inside your container so

570
00:23:23,370 --> 00:23:27,360
when you use root inside the container

571
00:23:24,870 --> 00:23:30,689
in reality you're not using verge on the

572
00:23:27,360 --> 00:23:32,250
whole system which means you avoid a lot

573
00:23:30,690 --> 00:23:33,870
of the security problems you'd have even

574
00:23:32,250 --> 00:23:36,780
if you run malicious code inside you

575
00:23:33,870 --> 00:23:39,449
continue so definitely if a tutorial

576
00:23:36,780 --> 00:23:42,178
tells you to run anything contain the

577
00:23:39,450 --> 00:23:43,860
runtime privilege don't do it and if you

578
00:23:42,179 --> 00:23:45,210
have a specific case like you want to

579
00:23:43,860 --> 00:23:48,240
run docker into a doctor and you need to

580
00:23:45,210 --> 00:23:52,140
write privilege you can test it but

581
00:23:48,240 --> 00:23:54,480
don't use it in production and so this

582
00:23:52,140 --> 00:23:56,580
person specifically for example month of

583
00:23:54,480 --> 00:23:59,850
use cloud men inside pod men so we have

584
00:23:56,580 --> 00:24:03,178
silver blue which is a desktop operating

585
00:23:59,850 --> 00:24:06,889
system and it uses a fedora toolbox

586
00:24:03,179 --> 00:24:10,110
which is basically at the mutable

587
00:24:06,890 --> 00:24:12,690
operating system and it has

588
00:24:10,110 --> 00:24:15,120
a fedora tin box which is a pod man

589
00:24:12,690 --> 00:24:16,830
container and in that container you have

590
00:24:15,120 --> 00:24:19,709
your own operating system that you can

591
00:24:16,830 --> 00:24:22,399
develop against if you want to use odd

592
00:24:19,710 --> 00:24:25,799
man inside the pod man it's only worth

593
00:24:22,399 --> 00:24:27,479
so one workaround is to replace user bin

594
00:24:25,799 --> 00:24:30,120
pod men which is what happens when you

595
00:24:27,480 --> 00:24:33,179
type admin and just replace that the

596
00:24:30,120 --> 00:24:35,549
flat-pack spawn host pseudopod man and

597
00:24:33,179 --> 00:24:40,860
then type the argument into it which

598
00:24:35,549 --> 00:24:43,320
then creates type X pawn creates pod man

599
00:24:40,860 --> 00:24:46,019
container so it runs the process for

600
00:24:43,320 --> 00:24:48,389
admin on the root on the host system so

601
00:24:46,019 --> 00:24:50,669
basically you just pipe it onto the host

602
00:24:48,389 --> 00:24:52,830
and from there create one or can

603
00:24:50,669 --> 00:24:54,090
continue working in your total but it's

604
00:24:52,830 --> 00:24:56,399
a little complicated when you've never

605
00:24:54,090 --> 00:24:57,840
done it it's bound to be complicated but

606
00:24:56,399 --> 00:25:00,959
once you get into it it's easy just like

607
00:24:57,840 --> 00:25:05,610
everything else or it is yeah it's easy

608
00:25:00,960 --> 00:25:08,429
need not simple one way we call the

609
00:25:05,610 --> 00:25:11,908
desktop in workflow usage is pet

610
00:25:08,429 --> 00:25:14,130
containers so when you work inside your

611
00:25:11,909 --> 00:25:17,100
development you'll say pet container so

612
00:25:14,130 --> 00:25:20,190
my pet is or I develop this in my pet

613
00:25:17,100 --> 00:25:21,809
where is the server thing is cattle so

614
00:25:20,190 --> 00:25:24,860
it might not be that is very the

615
00:25:21,809 --> 00:25:29,460
deuterium to use this these phrases but

616
00:25:24,860 --> 00:25:32,539
capital is how you would call containers

617
00:25:29,460 --> 00:25:35,909
that run at scale and reggae auto scale

618
00:25:32,539 --> 00:25:38,669
whereas your pet is your personal thing

619
00:25:35,909 --> 00:25:40,049
that you use on your own load weather

620
00:25:38,669 --> 00:25:44,639
obsessed approach server and then

621
00:25:40,049 --> 00:25:47,429
develop against t1 types of comments and

622
00:25:44,639 --> 00:25:50,279
security you do not use container images

623
00:25:47,429 --> 00:25:52,710
from untrusted sources if people tell

624
00:25:50,279 --> 00:25:54,480
you to download it it's cool for your

625
00:25:52,710 --> 00:25:56,429
own planets good for your own testing

626
00:25:54,480 --> 00:26:00,029
but as we've seen there are

627
00:25:56,429 --> 00:26:03,860
vulnerabilities hard word to say so

628
00:26:00,029 --> 00:26:06,720
there are vulnerabilities and we need to

629
00:26:03,860 --> 00:26:07,740
understand that if we just download

630
00:26:06,720 --> 00:26:11,279
something from the internet

631
00:26:07,740 --> 00:26:13,789
I mean you will probably know but if you

632
00:26:11,279 --> 00:26:16,440
just go to any developer who is not very

633
00:26:13,789 --> 00:26:18,230
into security and a lot of them are not

634
00:26:16,440 --> 00:26:19,309
and

635
00:26:18,230 --> 00:26:20,570
you just tell them you have to create

636
00:26:19,309 --> 00:26:22,940
your own container because you can

637
00:26:20,570 --> 00:26:23,990
address the source they will usually be

638
00:26:22,940 --> 00:26:27,470
very angry with you

639
00:26:23,990 --> 00:26:28,730
I charge em yeah so make sure your on

640
00:26:27,470 --> 00:26:30,980
your containers I'm privileged

641
00:26:28,730 --> 00:26:33,140
so no new taxes do not run them as

642
00:26:30,980 --> 00:26:36,169
routes very important and certain first

643
00:26:33,140 --> 00:26:39,500
one if you use a different system

644
00:26:36,169 --> 00:26:41,780
there's a armor armor for Ubuntu in

645
00:26:39,500 --> 00:26:44,690
Libya and I think it's up but yeah at

646
00:26:41,780 --> 00:26:46,940
Fedora we use Esther the nips and I

647
00:26:44,690 --> 00:26:49,309
think a lot of other disparities in

648
00:26:46,940 --> 00:26:51,040
Selenas as well and make things you need

649
00:26:49,309 --> 00:26:52,730
to go get possible so if you can use

650
00:26:51,040 --> 00:26:56,570
operating systems that are immutable

651
00:26:52,730 --> 00:26:58,130
that's also scary good obviously because

652
00:26:56,570 --> 00:27:01,309
if you have malicious code and hand

653
00:26:58,130 --> 00:27:04,490
write to anything then it's just plain

654
00:27:01,309 --> 00:27:06,410
and definitely set limits and alerts on

655
00:27:04,490 --> 00:27:08,210
CPU consumption because there are also

656
00:27:06,410 --> 00:27:10,690
it's not just about your own data and

657
00:27:08,210 --> 00:27:13,730
about your own system there are also um

658
00:27:10,690 --> 00:27:15,590
crypto currency miners that are

659
00:27:13,730 --> 00:27:18,410
basically inserted into you contain

660
00:27:15,590 --> 00:27:21,230
images and they will just use your

661
00:27:18,410 --> 00:27:23,929
hardware to mine from the container on

662
00:27:21,230 --> 00:27:27,320
your hardware so and you've won now

663
00:27:23,929 --> 00:27:30,530
there's there's it's hard it's very hard

664
00:27:27,320 --> 00:27:32,780
to do digital forensics on the omni on

665
00:27:30,530 --> 00:27:34,010
this type of stuff especially as we've

666
00:27:32,780 --> 00:27:36,649
seen is to put youtuber new similar

667
00:27:34,010 --> 00:27:38,570
ability from november so definitely set

668
00:27:36,650 --> 00:27:41,360
the limits and alerts which if you use

669
00:27:38,570 --> 00:27:44,570
the cloud you can easily do in just 17

670
00:27:41,360 --> 00:27:46,870
degree that's 50 years and if you have

671
00:27:44,570 --> 00:27:49,010
your own long premise other and

672
00:27:46,870 --> 00:27:50,479
definitely check your mobs regularly

673
00:27:49,010 --> 00:27:52,250
even if some things won't show up

674
00:27:50,480 --> 00:27:53,480
because some will know those inside like

675
00:27:52,250 --> 00:27:55,010
that you have to check your locks

676
00:27:53,480 --> 00:27:57,490
regular if you suspicious activity that

677
00:27:55,010 --> 00:28:01,129
you knew that if you're a suburban or

678
00:27:57,490 --> 00:28:05,090
have done anything similar to that okay

679
00:28:01,130 --> 00:28:07,820
let's go to the future outlook just in

680
00:28:05,090 --> 00:28:10,189
terms of what technology is where it's

681
00:28:07,820 --> 00:28:11,629
having so we have the immutable on the

682
00:28:10,190 --> 00:28:16,490
vinyl purchases and some problematic

683
00:28:11,630 --> 00:28:18,410
updates and that's exactly what currents

684
00:28:16,490 --> 00:28:19,820
and potato limit states and that's what

685
00:28:18,410 --> 00:28:24,710
the time we posted and that's where

686
00:28:19,820 --> 00:28:26,870
endless lies is so a lot of the a lot of

687
00:28:24,710 --> 00:28:29,360
the infrastructure developers aren't

688
00:28:26,870 --> 00:28:30,129
heading poet immutable which it also

689
00:28:29,360 --> 00:28:31,899
means that

690
00:28:30,130 --> 00:28:35,470
they can provide security opportunity

691
00:28:31,900 --> 00:28:37,180
fast because they know that the system

692
00:28:35,470 --> 00:28:39,190
cannot be different than this it's

693
00:28:37,180 --> 00:28:41,290
easier to develop a security update you

694
00:28:39,190 --> 00:28:42,700
don't have to wait as much you just push

695
00:28:41,290 --> 00:28:44,740
the security update and you know it's

696
00:28:42,700 --> 00:28:47,110
fine and it's gonna run in thousand

697
00:28:44,740 --> 00:28:47,710
easier on sysadmin they know nothing can

698
00:28:47,110 --> 00:28:49,479
go wrong

699
00:28:47,710 --> 00:28:51,310
crafter can go wrong and inside the

700
00:28:49,480 --> 00:28:53,230
containers but that is contained and

701
00:28:51,310 --> 00:28:55,899
it's also not affected by the updates

702
00:28:53,230 --> 00:28:58,120
for example you can have on your system

703
00:28:55,900 --> 00:29:00,700
on your host it in half Pattinson and

704
00:28:58,120 --> 00:29:02,100
then and then and and you've got in the

705
00:29:00,700 --> 00:29:04,330
containers you have packing thing and

706
00:29:02,100 --> 00:29:04,540
they both don't talk to each other it's

707
00:29:04,330 --> 00:29:06,780
fine

708
00:29:04,540 --> 00:29:09,909
so when you update it's really easy so

709
00:29:06,780 --> 00:29:12,760
get into the immutable operating systems

710
00:29:09,910 --> 00:29:14,890
check them out and our guest up we have

711
00:29:12,760 --> 00:29:17,680
less individual security issues more

712
00:29:14,890 --> 00:29:19,480
like big bangs this rug Gnostic where we

713
00:29:17,680 --> 00:29:22,930
have this Latino vulnerability where it

714
00:29:19,480 --> 00:29:26,290
just effective form of everything but

715
00:29:22,930 --> 00:29:28,960
only to use containers in route and if

716
00:29:26,290 --> 00:29:30,879
you didn't have linux enabled there are

717
00:29:28,960 --> 00:29:33,150
so many is that you have to do to

718
00:29:30,880 --> 00:29:35,380
actually get to this attainable mobility

719
00:29:33,150 --> 00:29:39,250
this is also anywhere there's news about

720
00:29:35,380 --> 00:29:43,030
some vulnerability we probably know that

721
00:29:39,250 --> 00:29:45,850
it's not that I effect a very low

722
00:29:43,030 --> 00:29:49,030
percentage and just like Todd before and

723
00:29:45,850 --> 00:29:50,980
in the keynote said that you know if we

724
00:29:49,030 --> 00:29:53,500
have the proper procedures the stop

725
00:29:50,980 --> 00:29:55,540
first it is very unlikely to happen and

726
00:29:53,500 --> 00:29:58,420
if it happens you have to proceed you to

727
00:29:55,540 --> 00:30:02,740
resolve it quickly or it is presently

728
00:29:58,420 --> 00:30:04,930
not be pretty much on disturber he have

729
00:30:02,740 --> 00:30:07,060
one hump it to the mall so that pumpkins

730
00:30:04,930 --> 00:30:10,050
are outlook that we're gonna preserve in

731
00:30:07,060 --> 00:30:12,790
having in general the infrastructure is

732
00:30:10,050 --> 00:30:14,860
for example were currently working on

733
00:30:12,790 --> 00:30:17,740
the machine kinetic operator where you

734
00:30:14,860 --> 00:30:19,300
just define some basics and there's also

735
00:30:17,740 --> 00:30:21,610
ignitions and container limits which we

736
00:30:19,300 --> 00:30:24,159
also continue using or you just define

737
00:30:21,610 --> 00:30:26,709
all the all the things and then this

738
00:30:24,160 --> 00:30:28,570
Auto scale it creates the MS and just

739
00:30:26,710 --> 00:30:30,250
Auto scale creates creates creates and

740
00:30:28,570 --> 00:30:31,990
is all with the same configuration you

741
00:30:30,250 --> 00:30:37,390
type it out once and you have your

742
00:30:31,990 --> 00:30:39,940
pepper on okay and now this is playtime

743
00:30:37,390 --> 00:30:41,890
if you have a lot of good view you can

744
00:30:39,940 --> 00:30:42,940
test this out already or when you get

745
00:30:41,890 --> 00:30:45,910
home this is

746
00:30:42,940 --> 00:30:47,830
actually really fun and you can

747
00:30:45,910 --> 00:30:51,160
basically test what happens if a

748
00:30:47,830 --> 00:30:52,780
container was to escape confinement so

749
00:30:51,160 --> 00:30:55,510
this is what this uses Codman

750
00:30:52,780 --> 00:30:56,920
and yeah if you just want to test out

751
00:30:55,510 --> 00:31:00,070
this vulnerability can happen in

752
00:30:56,920 --> 00:31:03,400
February it is a code you can do with so

753
00:31:00,070 --> 00:31:04,540
so it's just convincing peculiar and we

754
00:31:03,400 --> 00:31:06,370
also have beefed up the pump such

755
00:31:04,540 --> 00:31:10,000
containers where you'll find Padma and

756
00:31:06,370 --> 00:31:13,060
bilder and some demos and got seen so

757
00:31:10,000 --> 00:31:15,250
they become such containers is Rights

758
00:31:13,060 --> 00:31:19,899
Act in that in that regard

759
00:31:15,250 --> 00:31:46,410
yeah this is yeah this is my ending side

760
00:31:19,900 --> 00:31:49,930
and then are there any question yes so

761
00:31:46,410 --> 00:31:52,450
the key areas for a developer who's one

762
00:31:49,930 --> 00:31:55,000
familiar with containerization what

763
00:31:52,450 --> 00:31:57,310
would be the top key things for them to

764
00:31:55,000 --> 00:32:00,310
learn to move into developing in this

765
00:31:57,310 --> 00:32:02,710
type of space it depends in that sense

766
00:32:00,310 --> 00:32:06,210
that when I started doing c7 I really

767
00:32:02,710 --> 00:32:09,310
went deep into it and spends 40 hours I

768
00:32:06,210 --> 00:32:10,690
think probably 40 hours to tonight dude

769
00:32:09,310 --> 00:32:13,179
and just learned everything on the

770
00:32:10,690 --> 00:32:15,070
Linode library but like deep down stop

771
00:32:13,180 --> 00:32:17,860
so it depends on what kind of learner

772
00:32:15,070 --> 00:32:19,870
they are if you just want to type it's

773
00:32:17,860 --> 00:32:23,020
just straight go straight into acting

774
00:32:19,870 --> 00:32:25,870
they will publish use tutorials which

775
00:32:23,020 --> 00:32:27,490
are a double-edged sword because they

776
00:32:25,870 --> 00:32:29,290
tell you to just download this image and

777
00:32:27,490 --> 00:32:31,900
then work on this and then you get into

778
00:32:29,290 --> 00:32:35,590
the habit of three map then yeah

779
00:32:31,900 --> 00:32:37,930
probably not useful so it's hard if

780
00:32:35,590 --> 00:32:39,179
normally you just say use the tutorials

781
00:32:37,930 --> 00:32:41,710
that are out there and there are so many

782
00:32:39,180 --> 00:32:44,980
it's a pain validity on use of our

783
00:32:41,710 --> 00:32:46,600
plugin I'd say Putman just because you

784
00:32:44,980 --> 00:32:50,400
know we're working on it and it doesn't

785
00:32:46,600 --> 00:32:52,709
have a big Damon so it's it's yeah

786
00:32:50,400 --> 00:32:54,480
it's it doesn't have a single indicator

787
00:32:52,710 --> 00:32:56,610
in it then but the French this is fine

788
00:32:54,480 --> 00:32:58,710
it's just it's containers if you use

789
00:32:56,610 --> 00:33:03,299
continue to you have an easier book

790
00:32:58,710 --> 00:33:05,130
though once you learned it I probably

791
00:33:03,299 --> 00:33:07,289
just really do to start containers from

792
00:33:05,130 --> 00:33:09,830
scratch thing if I if I was to advise

793
00:33:07,289 --> 00:33:13,850
someone and learning containers I'd say

794
00:33:09,830 --> 00:33:16,529
go to your search engine Google board

795
00:33:13,850 --> 00:33:20,399
you know containers from scratch there's

796
00:33:16,529 --> 00:33:23,130
a one Eric something and here's a very

797
00:33:20,400 --> 00:33:24,600
good post on using communications class

798
00:33:23,130 --> 00:33:26,370
there's also lists rice with several

799
00:33:24,600 --> 00:33:28,830
videos on it but the Eric closest the

800
00:33:26,370 --> 00:33:30,479
best on the continuum scratch and I just

801
00:33:28,830 --> 00:33:31,980
done that for example and from other

802
00:33:30,480 --> 00:33:33,539
tutorials for containers from scratch

803
00:33:31,980 --> 00:33:35,490
it's super easy it's actually really fun

804
00:33:33,539 --> 00:33:37,470
and that's how you really learn it but

805
00:33:35,490 --> 00:33:39,960
if you first I need to learn limits

806
00:33:37,470 --> 00:33:42,029
because containers are limits go they

807
00:33:39,960 --> 00:33:44,130
need to learn Linux and if they don't

808
00:33:42,029 --> 00:33:46,620
know limit and getting into all the

809
00:33:44,130 --> 00:33:49,080
thing is hard but you have the practical

810
00:33:46,620 --> 00:33:51,479
scenario to the no limits okay

811
00:33:49,080 --> 00:33:53,970
the Danish instruction and then after

812
00:33:51,480 --> 00:33:56,760
that any tutorials with the added

813
00:33:53,970 --> 00:33:58,600
knowledge of security this is important

814
00:33:56,760 --> 00:34:01,740
and the other questions there was one

815
00:33:58,600 --> 00:34:01,740
[Music]

816
00:34:02,029 --> 00:34:07,500
okay yeah I mean really just a tutorial

817
00:34:05,309 --> 00:34:09,570
on the main page or whatever one you're

818
00:34:07,500 --> 00:34:11,520
using or talks

819
00:34:09,570 --> 00:34:14,490
there are several talks out there on

820
00:34:11,520 --> 00:34:16,770
YouTube the chicken just or personally I

821
00:34:14,489 --> 00:34:20,009
just like a good blog post that explains

822
00:34:16,770 --> 00:34:22,230
everything to me and then just go ahead

823
00:34:20,010 --> 00:34:23,730
and usually found this on that and once

824
00:34:22,230 --> 00:34:28,469
you know that it's easier for you to get

825
00:34:23,730 --> 00:34:30,449
into it yeah so I know like in a crowd

826
00:34:28,469 --> 00:34:32,580
like this we're all going to be like yes

827
00:34:30,449 --> 00:34:36,259
build containers from scratch is great

828
00:34:32,580 --> 00:34:38,759
fun but most developers and things are

829
00:34:36,260 --> 00:34:40,230
most likely going to be using kind of

830
00:34:38,760 --> 00:34:42,480
pre-built containers and things like

831
00:34:40,230 --> 00:34:45,599
that is there do you think there's any

832
00:34:42,480 --> 00:34:48,060
way to kind of make developers and not

833
00:34:45,599 --> 00:34:49,770
do that and just encourage them to be

834
00:34:48,060 --> 00:34:51,389
more active in learning but well there

835
00:34:49,770 --> 00:34:54,239
are your own registries right if you're

836
00:34:51,389 --> 00:34:57,200
if you're talking as your own person or

837
00:34:54,239 --> 00:35:01,310
if you're talking as your company if you

838
00:34:57,200 --> 00:35:03,109
and your company whoever is promoting

839
00:35:01,310 --> 00:35:05,270
the container thing if it's not already

840
00:35:03,109 --> 00:35:08,210
a thing need to know about registries in

841
00:35:05,270 --> 00:35:10,250
humans registries where you as a company

842
00:35:08,210 --> 00:35:11,839
build your own images and then you tell

843
00:35:10,250 --> 00:35:12,920
new developers or existing development

844
00:35:11,839 --> 00:35:15,410
you just download that image and you

845
00:35:12,920 --> 00:35:16,970
know it's safe so that's that basically

846
00:35:15,410 --> 00:35:19,520
the most important image registers

847
00:35:16,970 --> 00:35:21,230
there's several out there and that you

848
00:35:19,520 --> 00:35:24,410
can also hold on premise so you don't

849
00:35:21,230 --> 00:35:26,470
need to go to some websites third party

850
00:35:24,410 --> 00:35:41,720
you can just hold everything on premise

851
00:35:26,470 --> 00:35:44,569
first yeah yeah so I'm not a developer

852
00:35:41,720 --> 00:35:45,919
or anything like that but in the

853
00:35:44,570 --> 00:35:47,720
organization that I work for one of the

854
00:35:45,920 --> 00:35:50,210
things that concerns we slightly about

855
00:35:47,720 --> 00:35:51,770
containers is about managing secrets and

856
00:35:50,210 --> 00:35:53,900
I was just wondering what you think

857
00:35:51,770 --> 00:35:56,180
which is is the best way of managing

858
00:35:53,900 --> 00:35:59,060
secrets between containers is it using

859
00:35:56,180 --> 00:36:01,640
something like docker secrets or sort of

860
00:35:59,060 --> 00:36:04,190
send yourself up something yourself like

861
00:36:01,640 --> 00:36:05,509
a shock or faults or using something

862
00:36:04,190 --> 00:36:10,970
like open shifts what would you

863
00:36:05,510 --> 00:36:13,339
recommend a little to you but but you

864
00:36:10,970 --> 00:36:15,560
know every everything has their secret

865
00:36:13,339 --> 00:36:17,810
management and for whatever you're using

866
00:36:15,560 --> 00:36:19,970
there is going to be a best way to do

867
00:36:17,810 --> 00:36:22,369
superb management and if you use

868
00:36:19,970 --> 00:36:24,649
something like ignition or whatever you

869
00:36:22,369 --> 00:36:27,380
will have your content files pointed at

870
00:36:24,650 --> 00:36:30,140
to somewhere just have to make sure that

871
00:36:27,380 --> 00:36:33,290
which has happened many times on github

872
00:36:30,140 --> 00:36:35,359
for example companies poster things on

873
00:36:33,290 --> 00:36:39,259
it up and then they also upload their

874
00:36:35,359 --> 00:36:41,328
secrets so that have happens and this is

875
00:36:39,260 --> 00:36:43,280
bad so obviously your core secret

876
00:36:41,329 --> 00:36:45,859
management make sure it's if you host

877
00:36:43,280 --> 00:36:48,530
the total code in a private repository

878
00:36:45,859 --> 00:36:51,348
but it's out there make sure it's safe

879
00:36:48,530 --> 00:36:52,760
encrypted or something so in the code if

880
00:36:51,349 --> 00:36:54,380
you are a developer you will have a

881
00:36:52,760 --> 00:36:56,560
complete file of all the threads inside

882
00:36:54,380 --> 00:36:58,840
make sure it's encrypted in secret

883
00:36:56,560 --> 00:37:00,220
inside or something like that or but

884
00:36:58,840 --> 00:37:02,620
that's also that from scratch approach

885
00:37:00,220 --> 00:37:04,779
you should actually just use secret

886
00:37:02,620 --> 00:37:07,410
management from the plasma means if that

887
00:37:04,780 --> 00:37:10,330
openshift would have a way if that's

888
00:37:07,410 --> 00:37:12,310
talking there's the opposite so there's

889
00:37:10,330 --> 00:37:15,190
just forever platforming

890
00:37:12,310 --> 00:37:18,880
you won't use dr. secrets with you know

891
00:37:15,190 --> 00:37:21,130
like another runtime and and Python

892
00:37:18,880 --> 00:37:23,380
movies and so that doesn't really answer

893
00:37:21,130 --> 00:37:27,510
to your question because it depends on

894
00:37:23,380 --> 00:37:33,190
what platform even yeah sorry

895
00:37:27,510 --> 00:37:35,950
any other questions or but anything

896
00:37:33,190 --> 00:37:42,430
containers or a prescription stuff or

897
00:37:35,950 --> 00:37:44,790
cloud no okay on thank you and have a

898
00:37:42,430 --> 00:37:44,790
great day

