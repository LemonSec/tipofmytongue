1
00:00:24,840 --> 00:00:32,409
how's everybody doing good join the

2
00:00:29,740 --> 00:00:34,809
conference so far and I know it like

3
00:00:32,409 --> 00:00:35,860
right about now this time of day at a

4
00:00:34,809 --> 00:00:38,379
conference is usually when I get really

5
00:00:35,860 --> 00:00:43,300
sleepy like two o'clock after lunch just

6
00:00:38,380 --> 00:00:47,710
saw a talk sitting still too long so so

7
00:00:43,300 --> 00:00:49,089
if you're not off that's okay or if you

8
00:00:47,710 --> 00:00:52,350
need to get up and walk out and walk

9
00:00:49,090 --> 00:00:54,190
around a little bit stay awake I get it

10
00:00:52,350 --> 00:00:56,020
so there's a couple questions like the

11
00:00:54,190 --> 00:00:57,460
start every talk I give with how many

12
00:00:56,020 --> 00:01:01,930
people in the room identify as being a

13
00:00:57,460 --> 00:01:04,330
software developer all right awesome so

14
00:01:01,930 --> 00:01:05,470
of those of you how many of you like

15
00:01:04,330 --> 00:01:06,580
working on something that you've

16
00:01:05,470 --> 00:01:25,720
inherited from somebody else

17
00:01:06,580 --> 00:01:27,850
I wasn't specific whose it is okay hmm

18
00:01:25,720 --> 00:01:34,350
all right all right so a lot of caveats

19
00:01:27,850 --> 00:01:36,939
about about how that work would go so I

20
00:01:34,350 --> 00:01:40,210
for one absolutely loved working on that

21
00:01:36,939 --> 00:01:43,899
kind of those kinds of projects my name

22
00:01:40,210 --> 00:01:45,789
is Scott forward and picking up were

23
00:01:43,900 --> 00:01:49,210
someone else left off is something I I

24
00:01:45,790 --> 00:01:52,930
find a lot of fun a lot of fun so much

25
00:01:49,210 --> 00:01:56,919
so that I decided to try to you know

26
00:01:52,930 --> 00:01:59,170
build a company around that idea and so

27
00:01:56,920 --> 00:02:01,720
what we've built is a team of people who

28
00:01:59,170 --> 00:02:03,970
absolutely love working on older

29
00:02:01,720 --> 00:02:05,710
projects we like to call this work

30
00:02:03,970 --> 00:02:08,530
mending to kind of contrast it with the

31
00:02:05,710 --> 00:02:10,090
idea of making so where a lot of people

32
00:02:08,530 --> 00:02:12,549
get really jazzed and excited about like

33
00:02:10,090 --> 00:02:14,290
taking something that didn't exist and

34
00:02:12,549 --> 00:02:15,760
bring it bring it into life we like to

35
00:02:14,290 --> 00:02:17,078
take things that already exists and make

36
00:02:15,760 --> 00:02:18,518
them even better or take something

37
00:02:17,079 --> 00:02:21,190
that's old and breathe new life into it

38
00:02:18,519 --> 00:02:22,660
or take to things that are old and smash

39
00:02:21,190 --> 00:02:24,400
them together to make something new or

40
00:02:22,660 --> 00:02:25,810
take something new and something old and

41
00:02:24,400 --> 00:02:31,510
smash those together to make something

42
00:02:25,810 --> 00:02:34,000
something new and yeah we don't build

43
00:02:31,510 --> 00:02:36,840
any any systems from scratch we add new

44
00:02:34,000 --> 00:02:39,390
features to things we improve

45
00:02:36,840 --> 00:02:43,410
the way things work you know that's what

46
00:02:39,390 --> 00:02:45,630
gets us excited so today I'm gonna tell

47
00:02:43,410 --> 00:02:46,890
you about a story you know tell a story

48
00:02:45,630 --> 00:02:49,650
about a time that my team was tasked

49
00:02:46,890 --> 00:02:52,559
with building a bridge to a legacy

50
00:02:49,650 --> 00:02:53,940
application and I'm gonna talk about the

51
00:02:52,560 --> 00:02:57,200
challenges that we encountered along the

52
00:02:53,940 --> 00:02:59,690
way some of the things we tried and

53
00:02:57,200 --> 00:03:03,899
spoiler it doesn't have the best ending

54
00:02:59,690 --> 00:03:06,329
but I think it's it's still Scylla story

55
00:03:03,900 --> 00:03:09,690
that we learned a lot from and I think

56
00:03:06,330 --> 00:03:11,760
and can teach others favorite too so the

57
00:03:09,690 --> 00:03:13,260
story starts with me getting call from a

58
00:03:11,760 --> 00:03:14,190
friend of mine and for the purpose of

59
00:03:13,260 --> 00:03:17,370
this story I'm just going to call him

60
00:03:14,190 --> 00:03:18,600
Jeff his name is not Jeff and in fact

61
00:03:17,370 --> 00:03:20,010
I'm gonna be essentially vague about a

62
00:03:18,600 --> 00:03:22,349
lot of details I'm gonna be vague about

63
00:03:20,010 --> 00:03:23,730
the industry that we're working in and

64
00:03:22,349 --> 00:03:27,060
I'm not gonna mention the name of Jeff's

65
00:03:23,730 --> 00:03:28,829
company this is you know in part because

66
00:03:27,060 --> 00:03:30,209
I'm not exactly sure that details of the

67
00:03:28,830 --> 00:03:32,580
NDA that I signed and whether or not I

68
00:03:30,209 --> 00:03:34,260
can disclose those things so just be on

69
00:03:32,580 --> 00:03:39,660
the safe side will be very very

70
00:03:34,260 --> 00:03:43,170
nonspecific so Jeff's company was

71
00:03:39,660 --> 00:03:46,980
building an API across a very fragmented

72
00:03:43,170 --> 00:03:48,510
industry and the idea was to take a

73
00:03:46,980 --> 00:03:50,790
landscape where there were tons and tons

74
00:03:48,510 --> 00:03:53,390
of vendors that had very inconsistent

75
00:03:50,790 --> 00:03:55,920
ways of your providing communication

76
00:03:53,390 --> 00:03:57,268
with their platforms and providing a

77
00:03:55,920 --> 00:03:59,970
very consistent way to communicate

78
00:03:57,269 --> 00:04:02,400
across all these unders so that anyone

79
00:03:59,970 --> 00:04:03,780
who was interested in you know building

80
00:04:02,400 --> 00:04:07,079
an extension on top of these vendor

81
00:04:03,780 --> 00:04:10,019
platforms they could they could build an

82
00:04:07,079 --> 00:04:11,010
integration with Jeff's API and then

83
00:04:10,019 --> 00:04:12,510
that gives them the later to the

84
00:04:11,010 --> 00:04:14,489
flexibility to perhaps even switch

85
00:04:12,510 --> 00:04:17,459
vendors if they wanted to so kind of a

86
00:04:14,489 --> 00:04:19,590
route to organizations who are like

87
00:04:17,459 --> 00:04:20,820
locked into one particular vendor you

88
00:04:19,589 --> 00:04:24,450
know being able to potentially break

89
00:04:20,820 --> 00:04:26,099
that vendor lock and eventually we had

90
00:04:24,450 --> 00:04:28,680
done some work with Jeff's company in

91
00:04:26,100 --> 00:04:30,900
the past we had helped him build out a

92
00:04:28,680 --> 00:04:32,190
test suite to qualify that some of the

93
00:04:30,900 --> 00:04:35,010
integrations that he'd built were

94
00:04:32,190 --> 00:04:36,060
implemented correctly you know tons and

95
00:04:35,010 --> 00:04:38,520
tons of vendors that they integrated

96
00:04:36,060 --> 00:04:40,590
with some of the vendors had had

97
00:04:38,520 --> 00:04:42,030
different systems that had you know

98
00:04:40,590 --> 00:04:44,099
different different capabilities and

99
00:04:42,030 --> 00:04:45,270
qualifications that they integrated with

100
00:04:44,100 --> 00:04:47,070
and so there lots of small little

101
00:04:45,270 --> 00:04:48,690
details for these integrations and so

102
00:04:47,070 --> 00:04:50,400
having like one single test suite that

103
00:04:48,690 --> 00:04:53,219
they could click and like okay

104
00:04:50,400 --> 00:04:55,469
this integration is behaving the way the

105
00:04:53,220 --> 00:05:00,030
rest of the system will expect it does

106
00:04:55,470 --> 00:05:01,380
was really valuable to him so he knew

107
00:05:00,030 --> 00:05:02,250
from working with me in the past and he

108
00:05:01,380 --> 00:05:03,330
knew from working with us on that

109
00:05:02,250 --> 00:05:04,919
project that we really loved the

110
00:05:03,330 --> 00:05:10,320
challenge and he was convinced that he

111
00:05:04,919 --> 00:05:12,090
had won for us so before we get into

112
00:05:10,320 --> 00:05:14,159
some lower details a little more

113
00:05:12,090 --> 00:05:15,169
background on how his integrations

114
00:05:14,160 --> 00:05:18,600
typically worked

115
00:05:15,169 --> 00:05:21,150
so his API would talk to what they would

116
00:05:18,600 --> 00:05:22,560
his team called a connector and one of

117
00:05:21,150 --> 00:05:25,500
these connector services would usually

118
00:05:22,560 --> 00:05:28,320
run on the same system where the vendor

119
00:05:25,500 --> 00:05:30,510
system is installed some of these vendor

120
00:05:28,320 --> 00:05:32,280
systems would be you know Linux boxes or

121
00:05:30,510 --> 00:05:34,979
UNIX boxes some of them would be like

122
00:05:32,280 --> 00:05:36,630
Windows Windows desktops sometimes or

123
00:05:34,979 --> 00:05:39,840
one of the servers a very very wide

124
00:05:36,630 --> 00:05:42,150
variety of technologies that they were

125
00:05:39,840 --> 00:05:43,739
needing to need to talk with so this

126
00:05:42,150 --> 00:05:46,169
connector would you know communicate in

127
00:05:43,740 --> 00:05:49,350
a none protocol and kind of build the

128
00:05:46,169 --> 00:05:51,840
bridge between the API and then the

129
00:05:49,350 --> 00:05:54,630
vendors SDK and most vendors had had

130
00:05:51,840 --> 00:05:56,099
anis some form of SDK and the vendors

131
00:05:54,630 --> 00:05:57,030
that they were looking to looking to

132
00:05:56,100 --> 00:06:00,750
integrate with we're usually pretty

133
00:05:57,030 --> 00:06:02,520
happy to provide that SDK because Jeff's

134
00:06:00,750 --> 00:06:04,380
company's API was providing capabilities

135
00:06:02,520 --> 00:06:06,419
to their customers that they had been

136
00:06:04,380 --> 00:06:08,490
wanting to provide and so they kind of

137
00:06:06,419 --> 00:06:11,969
saw this as a you know a benefit to both

138
00:06:08,490 --> 00:06:13,919
companies you know the vendors customers

139
00:06:11,970 --> 00:06:16,560
were were getting extra capabilities at

140
00:06:13,919 --> 00:06:18,120
their locations and and Jeff's companies

141
00:06:16,560 --> 00:06:21,419
was was getting a little bit a little

142
00:06:18,120 --> 00:06:23,460
bit of revenue and an API was being

143
00:06:21,419 --> 00:06:26,010
built for the vendors platform without

144
00:06:23,460 --> 00:06:27,810
them really having to do anything so

145
00:06:26,010 --> 00:06:32,219
most companies were pretty excited about

146
00:06:27,810 --> 00:06:33,750
it but then Jeff encountered a really

147
00:06:32,220 --> 00:06:34,860
really big client who was using a vendor

148
00:06:33,750 --> 00:06:38,580
that he hadn't integrated with before

149
00:06:34,860 --> 00:06:39,810
and this vendor was really reluctant to

150
00:06:38,580 --> 00:06:41,609
share any details about the inner

151
00:06:39,810 --> 00:06:43,410
workings their platform they claimed

152
00:06:41,610 --> 00:06:46,470
there's no SDK they claimed there's no

153
00:06:43,410 --> 00:06:47,700
way to integrate with it they claimed

154
00:06:46,470 --> 00:06:50,280
that they were building their own API

155
00:06:47,700 --> 00:06:51,630
and we're trying to you know Stonewall

156
00:06:50,280 --> 00:06:53,039
the client and say that they shouldn't

157
00:06:51,630 --> 00:06:58,530
reach out the Jeff's company and work

158
00:06:53,039 --> 00:07:00,229
with him so the this potential client

159
00:06:58,530 --> 00:07:02,929
that there was courting Jeff's company

160
00:07:00,229 --> 00:07:04,880
wanted to see proof of concept

161
00:07:02,930 --> 00:07:06,940
for both organizations so they told the

162
00:07:04,880 --> 00:07:09,080
vendor you build a proof of concept and

163
00:07:06,940 --> 00:07:13,639
Jeff's company you build a proof of

164
00:07:09,080 --> 00:07:16,460
concept and so Jeff hired us to try to

165
00:07:13,639 --> 00:07:18,440
tackle a problem of some way somehow

166
00:07:16,460 --> 00:07:20,810
getting the data out of this vendor

167
00:07:18,440 --> 00:07:25,280
system in order to be able to in order

168
00:07:20,810 --> 00:07:26,479
to be able integrate with it through

169
00:07:25,280 --> 00:07:28,070
there through Jeff's team's

170
00:07:26,479 --> 00:07:30,590
investigations they discovered some

171
00:07:28,070 --> 00:07:31,840
details about the vendors platform there

172
00:07:30,590 --> 00:07:34,849
were several components to it

173
00:07:31,840 --> 00:07:37,549
there was an on premise premises client

174
00:07:34,850 --> 00:07:39,320
UI that wasn't like an ax customer

175
00:07:37,550 --> 00:07:41,240
setting and facing so like in a retail

176
00:07:39,320 --> 00:07:44,180
location or you know where somebody

177
00:07:41,240 --> 00:07:46,310
would come to the door and and work on

178
00:07:44,180 --> 00:07:49,669
you know provide some kind of input on

179
00:07:46,310 --> 00:07:52,070
the system and then that's talked to a

180
00:07:49,669 --> 00:07:55,520
centralized service that stored its data

181
00:07:52,070 --> 00:07:58,389
somewhere not entirely sure where and

182
00:07:55,520 --> 00:08:01,849
then there was an admin UI that would

183
00:07:58,389 --> 00:08:04,570
you know allow administrators to set up

184
00:08:01,849 --> 00:08:06,919
the look and feel of the the client UI

185
00:08:04,570 --> 00:08:08,300
to set up you know different

186
00:08:06,919 --> 00:08:08,919
configuration options things of that

187
00:08:08,300 --> 00:08:12,800
sort

188
00:08:08,919 --> 00:08:13,940
it ran on the Windows 7 desktop which I

189
00:08:12,800 --> 00:08:16,280
thought was an interesting interesting

190
00:08:13,940 --> 00:08:18,199
choice but it was evidently unable to

191
00:08:16,280 --> 00:08:19,520
run on newer versions of Windows which

192
00:08:18,199 --> 00:08:24,050
kind of gave us a hint at how old the

193
00:08:19,520 --> 00:08:25,760
technology was and again you know there

194
00:08:24,050 --> 00:08:27,620
was some data details in the

195
00:08:25,760 --> 00:08:30,110
documentation that there was a database

196
00:08:27,620 --> 00:08:32,089
but there's no information on like you

197
00:08:30,110 --> 00:08:34,700
know what what who the database vendor

198
00:08:32,089 --> 00:08:36,409
was was their very database vendor it

199
00:08:34,700 --> 00:08:39,580
was at flat files like what was the

200
00:08:36,409 --> 00:08:39,580
storage mechanism I really had no idea

201
00:08:40,630 --> 00:08:45,110
so we came up with a couple ideas for

202
00:08:43,370 --> 00:08:47,060
like how we how we could how we get a

203
00:08:45,110 --> 00:08:48,110
you know pretty much attack the system

204
00:08:47,060 --> 00:08:49,279
because we're trying to get it they're

205
00:08:48,110 --> 00:08:52,160
trying to get at its information that

206
00:08:49,279 --> 00:08:53,870
it's hiding below its user interface so

207
00:08:52,160 --> 00:08:56,060
one idea we had is well perhaps there's

208
00:08:53,870 --> 00:08:57,640
an undocumented SDK that's already on

209
00:08:56,060 --> 00:09:00,589
that's already installed on the system

210
00:08:57,640 --> 00:09:02,300
you know the client UI is communicating

211
00:09:00,589 --> 00:09:04,940
with a server somehow perhaps we can

212
00:09:02,300 --> 00:09:06,680
find that mechanism and then and then

213
00:09:04,940 --> 00:09:10,580
take advantage of it and become a client

214
00:09:06,680 --> 00:09:12,199
ourselves another idea was to try to try

215
00:09:10,580 --> 00:09:13,880
to find libraries that are doing the

216
00:09:12,200 --> 00:09:16,130
database communication and go with the

217
00:09:13,880 --> 00:09:16,520
data in the database directly so kind of

218
00:09:16,130 --> 00:09:17,750
you know

219
00:09:16,520 --> 00:09:20,420
bypass any normal application

220
00:09:17,750 --> 00:09:23,840
communication and just target the

221
00:09:20,420 --> 00:09:25,300
database directly another idea we had

222
00:09:23,840 --> 00:09:28,460
was to actually screen scrape the UI

223
00:09:25,300 --> 00:09:30,290
which I saw some gags in the audience

224
00:09:28,460 --> 00:09:33,470
like yeah that's was kind of our

225
00:09:30,290 --> 00:09:37,089
reaction and you know if we needed to we

226
00:09:33,470 --> 00:09:37,090
we could we could certainly try that

227
00:09:37,900 --> 00:09:41,630
so that was one option the other one was

228
00:09:40,520 --> 00:09:43,400
the one that we're really excited about

229
00:09:41,630 --> 00:09:46,370
we really wanted to try was to reverse

230
00:09:43,400 --> 00:09:47,780
engineer the database file format and

231
00:09:46,370 --> 00:09:49,040
this was like we were getting really

232
00:09:47,780 --> 00:09:50,180
excited about it people in my team were

233
00:09:49,040 --> 00:09:52,520
fighting over who's gonna work on the

234
00:09:50,180 --> 00:09:53,780
project because so many of us who really

235
00:09:52,520 --> 00:09:59,060
wanted it like digging and tackle this

236
00:09:53,780 --> 00:10:01,010
challenge so we did a little bit

237
00:09:59,060 --> 00:10:02,719
research we wanted to figure out like

238
00:10:01,010 --> 00:10:04,910
ways to like quickly eliminate options

239
00:10:02,720 --> 00:10:06,590
and so while we're doing our research we

240
00:10:04,910 --> 00:10:09,560
dug in and we took a peek at the screen

241
00:10:06,590 --> 00:10:11,180
scraping possibility and we noticed that

242
00:10:09,560 --> 00:10:12,530
there were some severe limitations in

243
00:10:11,180 --> 00:10:16,130
the way the UI was built that was going

244
00:10:12,530 --> 00:10:19,910
to really cause us some problems the

245
00:10:16,130 --> 00:10:22,180
admin UI was built on top of 132 so we

246
00:10:19,910 --> 00:10:28,160
were able to get we could have used

247
00:10:22,180 --> 00:10:29,630
tools like win32 api messages to to get

248
00:10:28,160 --> 00:10:31,250
at all the details we would need that's

249
00:10:29,630 --> 00:10:32,450
on the screen so we could have like a

250
00:10:31,250 --> 00:10:34,760
remotely controlled the application

251
00:10:32,450 --> 00:10:36,770
gotten values out of text boxes gotten

252
00:10:34,760 --> 00:10:38,930
values that have labels on the screen it

253
00:10:36,770 --> 00:10:40,069
could have worked but it wouldn't you

254
00:10:38,930 --> 00:10:42,680
know would likely would've been pretty

255
00:10:40,070 --> 00:10:44,480
difficult when we looked in the client

256
00:10:42,680 --> 00:10:45,560
UI what we noticed there is that a lot

257
00:10:44,480 --> 00:10:47,840
of the information on the screen was

258
00:10:45,560 --> 00:10:50,660
actually drawn there directly so what we

259
00:10:47,840 --> 00:10:52,790
would have had to do instead is you know

260
00:10:50,660 --> 00:10:54,230
somehow captured bitmaps and then OCR

261
00:10:52,790 --> 00:10:56,150
the contents and then that's where we

262
00:10:54,230 --> 00:10:59,300
decided like that's not that's not going

263
00:10:56,150 --> 00:11:01,819
to work so we we scrapped that we

264
00:10:59,300 --> 00:11:04,370
scrapped that idea pretty quickly so

265
00:11:01,820 --> 00:11:06,590
that left us with with three options one

266
00:11:04,370 --> 00:11:09,020
of which we really we really wanted to

267
00:11:06,590 --> 00:11:10,400
do and we thought you know we would be

268
00:11:09,020 --> 00:11:12,770
able to do and when you would work if we

269
00:11:10,400 --> 00:11:14,780
could actually crack it but if there's

270
00:11:12,770 --> 00:11:16,640
it's also the one way that's probably

271
00:11:14,780 --> 00:11:18,860
the hardest and we feel really really

272
00:11:16,640 --> 00:11:20,630
stupid and really really silly if along

273
00:11:18,860 --> 00:11:22,190
the way reverse engineering the database

274
00:11:20,630 --> 00:11:24,890
we discover that there's an easier way

275
00:11:22,190 --> 00:11:26,480
to get at the data so we decided to

276
00:11:24,890 --> 00:11:27,220
attack these problems in order so first

277
00:11:26,480 --> 00:11:31,000
we just

278
00:11:27,220 --> 00:11:32,290
to hunt for an undocumented SDK and then

279
00:11:31,000 --> 00:11:33,459
hunt for libraries that let us

280
00:11:32,290 --> 00:11:35,620
communicate with a database

281
00:11:33,459 --> 00:11:38,949
and then if those two failed then we

282
00:11:35,620 --> 00:11:40,089
would actually dive in and try to

283
00:11:38,949 --> 00:11:50,680
reverse-engineer the database file

284
00:11:40,089 --> 00:11:54,850
format yeah they told us there was no

285
00:11:50,680 --> 00:11:56,649
SDK documented or otherwise so and so we

286
00:11:54,850 --> 00:11:59,379
thought you know perhaps it's something

287
00:11:56,649 --> 00:12:00,670
you know you perhaps it's not something

288
00:11:59,379 --> 00:12:02,110
that they've documented for external

289
00:12:00,670 --> 00:12:04,870
consumption but it's perhaps something

290
00:12:02,110 --> 00:12:08,470
they use internally and so if we could

291
00:12:04,870 --> 00:12:10,300
find breadcrumbs for that it's there

292
00:12:08,470 --> 00:12:13,899
that maybe we could you figure out a way

293
00:12:10,300 --> 00:12:15,758
to access it so that was actually the

294
00:12:13,899 --> 00:12:17,470
first thing we tackled is like well

295
00:12:15,759 --> 00:12:21,129
maybe there is an sdk hidden somewhere

296
00:12:17,470 --> 00:12:23,050
here so we did a quick hunt for it

297
00:12:21,129 --> 00:12:25,300
we skimmed through the directory

298
00:12:23,050 --> 00:12:27,430
structure where the application was

299
00:12:25,300 --> 00:12:30,670
installed and just looked at looked at

300
00:12:27,430 --> 00:12:31,930
file names and you know tried to see is

301
00:12:30,670 --> 00:12:33,519
there anything in here that looks like

302
00:12:31,930 --> 00:12:36,099
it might be named like what we would

303
00:12:33,519 --> 00:12:37,569
expect an SDK to be named we did find

304
00:12:36,100 --> 00:12:39,399
evidence that like this is a really

305
00:12:37,569 --> 00:12:42,069
really old application then granted this

306
00:12:39,399 --> 00:12:46,259
story is only like two years old so I

307
00:12:42,069 --> 00:12:46,259
don't does anybody recognize that icon

308
00:12:46,500 --> 00:12:53,980
yeah I remember correctly that's like so

309
00:12:51,939 --> 00:12:56,800
forever okay that's like visual visual

310
00:12:53,980 --> 00:12:58,149
steals Plus around like 3 2 or 3 was

311
00:12:56,800 --> 00:13:00,699
like that was the default executable

312
00:12:58,149 --> 00:13:04,750
icon most of the executables in that

313
00:13:00,699 --> 00:13:05,769
directory had this icon so so when you

314
00:13:04,750 --> 00:13:09,699
were working with something that was

315
00:13:05,769 --> 00:13:10,959
like you know late 90s early 2000s in

316
00:13:09,699 --> 00:13:14,500
terms of like at least when the project

317
00:13:10,959 --> 00:13:17,128
was started so so definitely like an

318
00:13:14,500 --> 00:13:20,769
indication of how how old the system was

319
00:13:17,129 --> 00:13:24,189
we used a utility on Windows called

320
00:13:20,769 --> 00:13:26,500
dumpin which comes used to come with the

321
00:13:24,189 --> 00:13:27,969
win32 SDK I think it's ship so the

322
00:13:26,500 --> 00:13:30,399
Windows platform SDK if you were to go

323
00:13:27,970 --> 00:13:32,319
try to find it now and what this does is

324
00:13:30,399 --> 00:13:35,050
it will take a DLL or an executable and

325
00:13:32,319 --> 00:13:37,500
it will just dump a whole bunch of

326
00:13:35,050 --> 00:13:39,849
information like so any function names

327
00:13:37,500 --> 00:13:43,269
any other symbols that happens to find

328
00:13:39,850 --> 00:13:46,509
and any strings type names things of

329
00:13:43,269 --> 00:13:48,579
that sort there were a lot of dll's

330
00:13:46,509 --> 00:13:50,680
there's a lot to sift through it

331
00:13:48,579 --> 00:13:53,680
produced really long text documents so

332
00:13:50,680 --> 00:13:55,930
you know you'll probably you know

333
00:13:53,680 --> 00:13:58,149
upwards of a thousand lines per DLL that

334
00:13:55,930 --> 00:13:59,649
we had we had to you know kind of skim

335
00:13:58,149 --> 00:14:01,199
through and a lot of it was gibberish

336
00:13:59,649 --> 00:14:03,610
because it looked like there was some

337
00:14:01,199 --> 00:14:05,349
ossification that was going on there

338
00:14:03,610 --> 00:14:06,810
they were taking advantage of so a lot

339
00:14:05,350 --> 00:14:10,149
of the function names that we could see

340
00:14:06,810 --> 00:14:11,439
they were you know just gibberish we we

341
00:14:10,149 --> 00:14:13,449
could tell it was a function we could

342
00:14:11,440 --> 00:14:16,180
tell it took three parameters that's

343
00:14:13,449 --> 00:14:21,279
about all we could tell so not a whole

344
00:14:16,180 --> 00:14:23,709
lot of help there so then our next

345
00:14:21,279 --> 00:14:25,269
question was well that's okay let's go

346
00:14:23,709 --> 00:14:27,040
ahead and try to get at the state of

347
00:14:25,269 --> 00:14:28,269
correct directly and and maybe we'll get

348
00:14:27,040 --> 00:14:30,639
lucky and they're using an off-the-shelf

349
00:14:28,269 --> 00:14:34,690
database that we can find external

350
00:14:30,639 --> 00:14:36,370
libraries for so if that was the case we

351
00:14:34,690 --> 00:14:39,759
thought we would find like some database

352
00:14:36,370 --> 00:14:41,050
access to us or some indication of like

353
00:14:39,759 --> 00:14:43,930
a known file format or something like

354
00:14:41,050 --> 00:14:46,180
that so we looked for evidence of a

355
00:14:43,930 --> 00:14:47,888
commercially available database if you

356
00:14:46,180 --> 00:14:55,079
name it we looked we looked debase

357
00:14:47,889 --> 00:14:57,459
foxpro access Postgres MySQL sequel Lite

358
00:14:55,079 --> 00:14:59,050
we you know every everything we could

359
00:14:57,459 --> 00:15:00,369
think of we did a really exhaustive

360
00:14:59,050 --> 00:15:03,089
search for any evidence of any of those

361
00:15:00,370 --> 00:15:05,860
spa formats and we saw nothing

362
00:15:03,089 --> 00:15:08,800
so then we went back through the dump in

363
00:15:05,860 --> 00:15:13,389
output and we looked again this time not

364
00:15:08,800 --> 00:15:14,829
looking for like you know not looking

365
00:15:13,389 --> 00:15:16,630
for functions that would tell us like

366
00:15:14,829 --> 00:15:18,189
you'll give us some indication of like

367
00:15:16,630 --> 00:15:19,509
how to get particular data elements that

368
00:15:18,189 --> 00:15:22,599
we were looking to get but instead like

369
00:15:19,509 --> 00:15:25,449
you know maybe functions that would let

370
00:15:22,600 --> 00:15:28,810
us read read from a table or execute a

371
00:15:25,449 --> 00:15:31,329
sequel query or you know see a data

372
00:15:28,810 --> 00:15:32,739
value that's in a column or you know

373
00:15:31,329 --> 00:15:35,469
anything that might might be data

374
00:15:32,740 --> 00:15:38,920
related we didn't we didn't find

375
00:15:35,470 --> 00:15:42,310
anything we did find a few dotnet dll's

376
00:15:38,920 --> 00:15:44,500
that were there we D compiled them and

377
00:15:42,310 --> 00:15:46,149
they were they were also obfuscated they

378
00:15:44,500 --> 00:15:48,490
were office gated to the point that they

379
00:15:46,149 --> 00:15:50,440
crashed the the reverse engineering

380
00:15:48,490 --> 00:15:51,880
program they were losing

381
00:15:50,440 --> 00:15:53,170
and we tried several of those as well

382
00:15:51,880 --> 00:15:54,730
and it crashed most of them so it was a

383
00:15:53,170 --> 00:15:55,990
very well obvious kata that definitely

384
00:15:54,730 --> 00:15:58,209
this company definitely invested well

385
00:15:55,990 --> 00:16:02,410
and trying to make sure that people

386
00:15:58,209 --> 00:16:05,050
couldn't do what we were trying to do so

387
00:16:02,410 --> 00:16:07,899
nothing obvious found so we got really

388
00:16:05,050 --> 00:16:10,149
excited because we got to do what we

389
00:16:07,899 --> 00:16:12,610
really hope we did you which is like you

390
00:16:10,149 --> 00:16:14,350
know crack open crack open some some

391
00:16:12,610 --> 00:16:15,579
binary files and and start reverse

392
00:16:14,350 --> 00:16:18,940
engineering that they do that's inside

393
00:16:15,579 --> 00:16:22,300
them but first we had to find those

394
00:16:18,940 --> 00:16:24,610
files so this isn't the the tactic that

395
00:16:22,300 --> 00:16:28,319
we chose for this was to open up the

396
00:16:24,610 --> 00:16:31,269
admin user interface made some edits

397
00:16:28,320 --> 00:16:32,890
close the admin user interface and then

398
00:16:31,269 --> 00:16:34,300
just look for something in the file

399
00:16:32,890 --> 00:16:39,209
system with the date/time stamp that it

400
00:16:34,300 --> 00:16:41,680
was very recent and we we got lucky we

401
00:16:39,209 --> 00:16:42,760
we found one file and I remember the

402
00:16:41,680 --> 00:16:46,750
exact extension but was something

403
00:16:42,760 --> 00:16:51,189
religion Erik Like dot Ben and so again

404
00:16:46,750 --> 00:16:52,120
like you know that was a that I was

405
00:16:51,190 --> 00:16:54,610
worried there was gonna be like

406
00:16:52,120 --> 00:16:57,370
thousands of files and and but it turned

407
00:16:54,610 --> 00:16:59,769
out it was only one which is good so

408
00:16:57,370 --> 00:17:01,269
then we turned to my favorite hex headed

409
00:16:59,769 --> 00:17:04,990
area which is called Sena lies it

410
00:17:01,269 --> 00:17:07,059
there's um its Mac only but there are as

411
00:17:04,990 --> 00:17:11,380
a Windows and Linux version called hex

412
00:17:07,059 --> 00:17:12,849
inator if you've ever worked to go for

413
00:17:11,380 --> 00:17:15,400
it is really neat one of the things you

414
00:17:12,849 --> 00:17:17,980
can do with it is kind of investigate

415
00:17:15,400 --> 00:17:20,079
unknown file formats and as you're

416
00:17:17,980 --> 00:17:22,599
investigating them you can build a a

417
00:17:20,079 --> 00:17:25,030
grammar that defines this file format

418
00:17:22,599 --> 00:17:27,099
and it's able to generate code for

419
00:17:25,030 --> 00:17:28,780
reading that grammar and your some

420
00:17:27,099 --> 00:17:31,570
languages I think it can generate C code

421
00:17:28,780 --> 00:17:33,220
for you it can you I think there are

422
00:17:31,570 --> 00:17:35,678
plugins that will generate reading code

423
00:17:33,220 --> 00:17:38,440
for some other languages as well you can

424
00:17:35,679 --> 00:17:41,410
map out the structure of the the actual

425
00:17:38,440 --> 00:17:43,720
raw binary file format and it has like

426
00:17:41,410 --> 00:17:46,110
color highlighting which is a little

427
00:17:43,720 --> 00:17:49,150
hard to see in this picture but up here

428
00:17:46,110 --> 00:17:51,159
there's like some some pink the if the

429
00:17:49,150 --> 00:17:53,140
grammar kind of defines the color

430
00:17:51,160 --> 00:17:54,580
highlighting it can be there this

431
00:17:53,140 --> 00:17:57,520
screenshot is one that I took this is a

432
00:17:54,580 --> 00:17:58,759
just a random debase database file that

433
00:17:57,520 --> 00:18:00,440
I found on the Internet

434
00:17:58,759 --> 00:18:03,519
and debase is one of the built-in

435
00:18:00,440 --> 00:18:06,919
grammars that cinemas has support for

436
00:18:03,519 --> 00:18:08,240
you can open up a JPEG file and you know

437
00:18:06,919 --> 00:18:11,330
it's there's a grammar defined for that

438
00:18:08,240 --> 00:18:14,629
so it's a really handy tool especially

439
00:18:11,330 --> 00:18:18,769
built for purposes another thing we're

440
00:18:14,629 --> 00:18:24,769
able to do is we could select any blocks

441
00:18:18,769 --> 00:18:30,019
inside of the inside of the airplay

442
00:18:24,769 --> 00:18:33,110
passcode you know it is not part of the

443
00:18:30,019 --> 00:18:34,879
present you have a really good straight

444
00:18:33,110 --> 00:18:35,240
face by the way this could you had me

445
00:18:34,879 --> 00:18:49,029
there

446
00:18:35,240 --> 00:18:49,029
how do I switch back to okay

447
00:18:57,220 --> 00:19:01,740
that's definitely about the one it says

448
00:18:58,840 --> 00:19:01,740
Apple TV right

449
00:19:04,210 --> 00:19:11,909
so whoever was trying to stream earlier

450
00:19:08,289 --> 00:19:14,440
you're disappointed okay we're back

451
00:19:11,909 --> 00:19:17,460
don't know maybe I stood still for too

452
00:19:14,440 --> 00:19:17,460
long thank you

453
00:19:18,940 --> 00:19:24,129
another thing that's really nice about

454
00:19:19,960 --> 00:19:26,980
cinema is it is you can highlight you

455
00:19:24,129 --> 00:19:29,559
can highlight a block of data and you

456
00:19:26,980 --> 00:19:31,090
can tell it to attempt to parse that

457
00:19:29,559 --> 00:19:33,580
data in tons of different formats you

458
00:19:31,090 --> 00:19:35,168
could say like you know interpret this

459
00:19:33,580 --> 00:19:36,999
as a float for me you interpret this as

460
00:19:35,169 --> 00:19:41,619
an integer for me interpret this as a

461
00:19:36,999 --> 00:19:42,549
utf-8 string or a ucs-2 string and

462
00:19:41,619 --> 00:19:45,070
there's so there's lots of different

463
00:19:42,549 --> 00:19:47,230
ways that you can like you look at look

464
00:19:45,070 --> 00:19:48,730
at different pieces of data and try to

465
00:19:47,230 --> 00:19:53,379
get a sense of what it is and then it

466
00:19:48,730 --> 00:19:55,509
also has good support for different byte

467
00:19:53,379 --> 00:19:57,340
and word ordering so you can see like

468
00:19:55,509 --> 00:19:59,740
big endian versus little and indian for

469
00:19:57,340 --> 00:20:02,168
for byte ordering so definitely a really

470
00:19:59,740 --> 00:20:05,619
good well-thought-out tool for for

471
00:20:02,169 --> 00:20:08,499
reverse engineering a file format if hex

472
00:20:05,619 --> 00:20:11,439
inator it's it's built by the same

473
00:20:08,499 --> 00:20:14,619
company both both tools and hex inator

474
00:20:11,440 --> 00:20:17,470
is billed as like a freemium version of

475
00:20:14,619 --> 00:20:20,230
sanitizer so the the Mac users get to

476
00:20:17,470 --> 00:20:29,590
pay for it but the when does the linux

477
00:20:20,230 --> 00:20:32,259
people get it for free so so so we we

478
00:20:29,590 --> 00:20:36,399
have we have the database open and a hex

479
00:20:32,259 --> 00:20:38,080
editor we hunt around for Strings we

480
00:20:36,399 --> 00:20:39,489
found a list of what looks like table

481
00:20:38,080 --> 00:20:42,789
names we found that one of the tables

482
00:20:39,490 --> 00:20:45,580
was named a b-tree anybody here with a

483
00:20:42,789 --> 00:20:49,389
computer science background okay so yeah

484
00:20:45,580 --> 00:20:52,600
so Beach so b-tree is a way to build a

485
00:20:49,389 --> 00:20:54,490
binary search tree based index with like

486
00:20:52,600 --> 00:20:57,009
with that levels itself that's it's what

487
00:20:54,490 --> 00:20:59,169
most modern databases use to to build on

488
00:20:57,009 --> 00:21:00,580
an index so that told me that not only

489
00:20:59,169 --> 00:21:01,779
are we looking at a custom database but

490
00:21:00,580 --> 00:21:04,918
we're looking at a team that built their

491
00:21:01,779 --> 00:21:09,399
own index for a custom database engine

492
00:21:04,919 --> 00:21:10,899
so and you know it was likely built this

493
00:21:09,399 --> 00:21:13,658
this database system was likely built

494
00:21:10,899 --> 00:21:16,739
sometime in the 90s and between then and

495
00:21:13,659 --> 00:21:18,900
2000s you know seventeen the team does

496
00:21:16,740 --> 00:21:20,370
and never once decided to actually

497
00:21:18,900 --> 00:21:22,520
replace it with something off the shelf

498
00:21:20,370 --> 00:21:24,899
and more modern so it was definitely

499
00:21:22,520 --> 00:21:30,960
fascinating from that perspective almost

500
00:21:24,900 --> 00:21:32,340
like an archaeological perspective so

501
00:21:30,960 --> 00:21:33,840
what you know while we were looking at

502
00:21:32,340 --> 00:21:36,030
the data in cinah lies that we're also

503
00:21:33,840 --> 00:21:39,449
looking for patterns so when we found

504
00:21:36,030 --> 00:21:42,389
the areas with the database table names

505
00:21:39,450 --> 00:21:45,870
we also we found that like the next like

506
00:21:42,390 --> 00:21:47,309
six bytes were were blank where had some

507
00:21:45,870 --> 00:21:50,790
numbers in it until we got to the next

508
00:21:47,309 --> 00:21:52,590
column name and when we looked that

509
00:21:50,790 --> 00:21:54,990
looked at those bytes we discovered that

510
00:21:52,590 --> 00:21:56,610
some of them some of them were offsets

511
00:21:54,990 --> 00:21:57,900
to other locations in the file where

512
00:21:56,610 --> 00:22:00,750
we'd find other information about that

513
00:21:57,900 --> 00:22:02,100
table so one particular value was an

514
00:22:00,750 --> 00:22:04,110
offset to where we would find column

515
00:22:02,100 --> 00:22:07,678
names and next each column were some

516
00:22:04,110 --> 00:22:10,110
metadata about you know the type that

517
00:22:07,679 --> 00:22:12,330
that column contained and how many how

518
00:22:10,110 --> 00:22:16,080
many bytes wide it was so if it was like

519
00:22:12,330 --> 00:22:18,990
a string or a car you know how much

520
00:22:16,080 --> 00:22:22,220
space it was going to take up and then

521
00:22:18,990 --> 00:22:25,470
also back in the the tabled metadata

522
00:22:22,220 --> 00:22:27,000
there was another location that we

523
00:22:25,470 --> 00:22:27,929
discover is also location to file but

524
00:22:27,000 --> 00:22:30,450
that's where the actual world data

525
00:22:27,929 --> 00:22:33,300
started so by combining the metadata

526
00:22:30,450 --> 00:22:36,809
about the table the columns the data

527
00:22:33,300 --> 00:22:38,850
types we're able to like actually start

528
00:22:36,809 --> 00:22:41,928
to piece together what data is stored

529
00:22:38,850 --> 00:22:45,659
here are these integers or these floats

530
00:22:41,929 --> 00:22:47,160
and then to validate our assumptions we

531
00:22:45,660 --> 00:22:48,960
kind of ground through and for every

532
00:22:47,160 --> 00:22:51,690
piece of information that we wanted to

533
00:22:48,960 --> 00:22:54,600
get out we went to the UI we made a

534
00:22:51,690 --> 00:22:56,730
change and we did it before and after

535
00:22:54,600 --> 00:22:59,730
diff and sanitized it has a defeater

536
00:22:56,730 --> 00:23:02,790
where you can do a getter before and

537
00:22:59,730 --> 00:23:06,179
after view so we were able to like you

538
00:23:02,790 --> 00:23:08,610
know save a copy of the database make

539
00:23:06,179 --> 00:23:10,200
our change do a before and after diff

540
00:23:08,610 --> 00:23:12,240
and validate yes those four bytes really

541
00:23:10,200 --> 00:23:14,820
are and yes they did change from 15 to

542
00:23:12,240 --> 00:23:16,679
16 you know we're good and we can like

543
00:23:14,820 --> 00:23:18,300
we could do other tests to validate that

544
00:23:16,679 --> 00:23:19,980
the the byte ordering was what we

545
00:23:18,300 --> 00:23:21,090
expected by picking values that are big

546
00:23:19,980 --> 00:23:23,910
enough to actually make the byte

547
00:23:21,090 --> 00:23:26,428
ordering matter so these were lots of

548
00:23:23,910 --> 00:23:28,080
assumptions we had to validate and you

549
00:23:26,429 --> 00:23:30,400
know we marked all our assumptions

550
00:23:28,080 --> 00:23:32,409
analyzed it and we repeated over

551
00:23:30,400 --> 00:23:33,550
over and over and over again for every

552
00:23:32,410 --> 00:23:37,210
field that we needed to get out and this

553
00:23:33,550 --> 00:23:39,129
took weeks this was you know the you

554
00:23:37,210 --> 00:23:41,650
know the big bulk of our investigative

555
00:23:39,130 --> 00:23:44,410
effort but we really felt like we were

556
00:23:41,650 --> 00:23:45,820
making progress and to simplify things

557
00:23:44,410 --> 00:23:47,380
we really only focused on the data we

558
00:23:45,820 --> 00:23:50,350
needed we could have tried to map out

559
00:23:47,380 --> 00:23:51,400
this entire this entire binary file and

560
00:23:50,350 --> 00:23:52,990
like produced this really awesome

561
00:23:51,400 --> 00:23:55,120
documentation for everything that was in

562
00:23:52,990 --> 00:23:56,140
there but at the end of the day we

563
00:23:55,120 --> 00:23:57,010
didn't really know if everything in

564
00:23:56,140 --> 00:23:59,350
there was been used by the application

565
00:23:57,010 --> 00:24:02,920
there's a good chance the given how old

566
00:23:59,350 --> 00:24:04,419
how will this application was that a lot

567
00:24:02,920 --> 00:24:06,730
of the information in this database file

568
00:24:04,420 --> 00:24:10,720
just is dead right like it perhaps will

569
00:24:06,730 --> 00:24:12,340
always be 0 or even if we did find a

570
00:24:10,720 --> 00:24:14,400
column perhaps it's neo never updated

571
00:24:12,340 --> 00:24:16,959
you know you have things of that sort

572
00:24:14,400 --> 00:24:18,580
things I see all the time in more modern

573
00:24:16,960 --> 00:24:20,470
applications with more modern databases

574
00:24:18,580 --> 00:24:22,149
you'll have people leave tables and

575
00:24:20,470 --> 00:24:23,440
columns around just because it's you

576
00:24:22,150 --> 00:24:25,480
know it's easier to do that than it is

577
00:24:23,440 --> 00:24:27,550
to delete them so how do assume that

578
00:24:25,480 --> 00:24:31,120
something similar was taking place on

579
00:24:27,550 --> 00:24:32,919
this application so next task was

580
00:24:31,120 --> 00:24:35,020
actually you know now that we know a lot

581
00:24:32,920 --> 00:24:36,340
about the database we and we've

582
00:24:35,020 --> 00:24:38,110
collected enough information through

583
00:24:36,340 --> 00:24:39,070
reverse engineering you know changing

584
00:24:38,110 --> 00:24:40,540
the field values finding out where

585
00:24:39,070 --> 00:24:41,590
things are we now have enough

586
00:24:40,540 --> 00:24:42,730
information that we needed to actually

587
00:24:41,590 --> 00:24:47,439
start building out and building out a

588
00:24:42,730 --> 00:24:49,179
connector and one of the things we were

589
00:24:47,440 --> 00:24:50,559
instructed to do for this demo was it

590
00:24:49,179 --> 00:24:52,420
only needed to be read-only so we didn't

591
00:24:50,559 --> 00:24:53,830
have to worry about you know writing

592
00:24:52,420 --> 00:24:57,030
back to the database at the same time

593
00:24:53,830 --> 00:25:00,340
that the system is trying to write to it

594
00:24:57,030 --> 00:25:02,889
we we did start to come up with some

595
00:25:00,340 --> 00:25:04,240
back of the napkin ideas for how you

596
00:25:02,890 --> 00:25:05,980
know how to go about doing that like

597
00:25:04,240 --> 00:25:07,750
moving that moving the file off to

598
00:25:05,980 --> 00:25:09,370
another location making our rights to it

599
00:25:07,750 --> 00:25:12,429
they're looking to see if it had changed

600
00:25:09,370 --> 00:25:15,729
swapping it back really quickly you know

601
00:25:12,429 --> 00:25:18,040
all risky stuff you know kit you know

602
00:25:15,730 --> 00:25:19,990
trying to kill it you know trying to put

603
00:25:18,040 --> 00:25:21,428
an OS level lock on the file so that we

604
00:25:19,990 --> 00:25:23,860
were loving ones who had had right

605
00:25:21,429 --> 00:25:26,140
access to it you know a lot of different

606
00:25:23,860 --> 00:25:27,939
ideas there we had played around with

607
00:25:26,140 --> 00:25:30,040
for trying to make sure that we wouldn't

608
00:25:27,940 --> 00:25:31,030
corrupt the data if we did try to write

609
00:25:30,040 --> 00:25:34,270
to it because I was definitely concerned

610
00:25:31,030 --> 00:25:36,160
that we had so what we ended up with is

611
00:25:34,270 --> 00:25:39,460
now we have a connector and we've

612
00:25:36,160 --> 00:25:41,440
basically built our own custom SDK and

613
00:25:39,460 --> 00:25:43,400
so now we're ready to go demo to the

614
00:25:41,440 --> 00:25:45,500
client

615
00:25:43,400 --> 00:25:48,230
and the demo kind of went something like

616
00:25:45,500 --> 00:25:51,920
us I wasn't at the demo so what I'm

617
00:25:48,230 --> 00:25:53,510
hearing was all kind of second hand but

618
00:25:51,920 --> 00:25:55,280
the way it was told to me is that the

619
00:25:53,510 --> 00:25:58,550
CTO of the vendor was present at the

620
00:25:55,280 --> 00:26:03,560
demo and they were really alarmed that

621
00:25:58,550 --> 00:26:08,659
we were successful because it turns out

622
00:26:03,560 --> 00:26:10,659
there was an SDK and when they found out

623
00:26:08,660 --> 00:26:22,760
that we had plans for a rewrite support

624
00:26:10,660 --> 00:26:28,970
they decided to hand it over so and no

625
00:26:22,760 --> 00:26:30,980
no there so my team was like man because

626
00:26:28,970 --> 00:26:32,870
we're really excited about this like we

627
00:26:30,980 --> 00:26:34,160
we were having a lot of fun we were

628
00:26:32,870 --> 00:26:37,580
looking forward to the rewrite version

629
00:26:34,160 --> 00:26:38,360
it was like there is a lot initial

630
00:26:37,580 --> 00:26:39,949
initially there was a lot of

631
00:26:38,360 --> 00:26:41,750
disappointment so I tried to spend

632
00:26:39,950 --> 00:26:43,520
things around and say okay okay not not

633
00:26:41,750 --> 00:26:45,860
so fast we learned a lot through this

634
00:26:43,520 --> 00:26:46,970
process one we liked we thought we could

635
00:26:45,860 --> 00:26:50,240
do something like this but now we know

636
00:26:46,970 --> 00:26:53,330
we can do something like this it was a

637
00:26:50,240 --> 00:26:55,460
lot of fun like hopefully the how much

638
00:26:53,330 --> 00:26:57,500
fun I had is being conveyed I know a lot

639
00:26:55,460 --> 00:26:59,300
of you're like cringing at the thought

640
00:26:57,500 --> 00:27:00,800
of some of what we put ourselves through

641
00:26:59,300 --> 00:27:04,100
but we've really enjoyed it like we

642
00:27:00,800 --> 00:27:05,210
really enjoyed this kind of work and one

643
00:27:04,100 --> 00:27:07,219
thing that I think is a really good

644
00:27:05,210 --> 00:27:08,660
positive is like because we did what we

645
00:27:07,220 --> 00:27:11,150
did it ended up with the best solution

646
00:27:08,660 --> 00:27:12,920
for everybody right like the safest way

647
00:27:11,150 --> 00:27:15,320
to integrate with this system is through

648
00:27:12,920 --> 00:27:17,030
an SDK that's approve of the vendor like

649
00:27:15,320 --> 00:27:18,710
that's hep so that's the absolute safest

650
00:27:17,030 --> 00:27:21,110
way to go about doing it so the fact

651
00:27:18,710 --> 00:27:22,850
that like you know even if it was like

652
00:27:21,110 --> 00:27:24,320
you know the perhaps some like really

653
00:27:22,850 --> 00:27:25,429
ugly business to business politics

654
00:27:24,320 --> 00:27:27,409
taking place or maybe even

655
00:27:25,430 --> 00:27:29,840
interdepartmental politics at the vendor

656
00:27:27,410 --> 00:27:32,270
level who knows but for some reason the

657
00:27:29,840 --> 00:27:36,500
CTO is like withholding an SDK and then

658
00:27:32,270 --> 00:27:37,879
provided one there and that's because

659
00:27:36,500 --> 00:27:39,380
the readwrite implementation would have

660
00:27:37,880 --> 00:27:42,530
been incredibly risky for us to

661
00:27:39,380 --> 00:27:44,420
implement you know we would have tried

662
00:27:42,530 --> 00:27:45,830
it we would have found lots of bugs we

663
00:27:44,420 --> 00:27:48,230
would over done our best to make them

664
00:27:45,830 --> 00:27:51,199
work but it would have an expensive for

665
00:27:48,230 --> 00:27:52,550
Jeff's company you know it you know

666
00:27:51,200 --> 00:27:53,370
would have started to give in the realm

667
00:27:52,550 --> 00:27:56,280
of frustration

668
00:27:53,370 --> 00:27:57,360
and discouraging for us and it likely

669
00:27:56,280 --> 00:27:59,250
would have drawn the attention of the

670
00:27:57,360 --> 00:28:00,600
vendor in a very negative way because we

671
00:27:59,250 --> 00:28:04,080
would be we would have been corrupting

672
00:28:00,600 --> 00:28:05,879
their data you know that to say like you

673
00:28:04,080 --> 00:28:07,439
know the probability was incredibly high

674
00:28:05,880 --> 00:28:08,400
that we would actually corrupt data once

675
00:28:07,440 --> 00:28:14,309
we tried to do the readwrite

676
00:28:08,400 --> 00:28:15,840
implementation so as I almost always do

677
00:28:14,309 --> 00:28:17,550
no matter how hard I try when I give a

678
00:28:15,840 --> 00:28:20,129
talk I priest and relator go very

679
00:28:17,550 --> 00:28:22,350
quickly but I do love facilitating

680
00:28:20,130 --> 00:28:28,500
discussion so if any of you have any

681
00:28:22,350 --> 00:28:32,639
questions I'd love to hear them yeah so

682
00:28:28,500 --> 00:28:36,000
Jeff's company was anything but like 15

683
00:28:32,640 --> 00:28:39,000
to 20 engineers you know most of them

684
00:28:36,000 --> 00:28:41,640
were focused on building and maintaining

685
00:28:39,000 --> 00:28:43,679
the API proper with a few people who

686
00:28:41,640 --> 00:28:47,490
were focused on kind of owning each

687
00:28:43,679 --> 00:28:49,280
individual vendor integration so you

688
00:28:47,490 --> 00:28:52,050
know and they so they'd have like small

689
00:28:49,280 --> 00:28:54,360
two maybe three person teams kind of

690
00:28:52,050 --> 00:28:57,210
focused on a particular vendor but the

691
00:28:54,360 --> 00:29:00,240
bulk of the team was focused on kind of

692
00:28:57,210 --> 00:29:01,980
making the API platform work selling

693
00:29:00,240 --> 00:29:04,220
access in the platform you know things

694
00:29:01,980 --> 00:29:04,220
of that sort

695
00:29:10,160 --> 00:29:19,260
exactly so so the yeah so Jeff's company

696
00:29:15,990 --> 00:29:21,390
has customers right and their customers

697
00:29:19,260 --> 00:29:23,280
have this vendor software installed at

698
00:29:21,390 --> 00:29:24,840
their location right and they're they're

699
00:29:23,280 --> 00:29:26,250
looking for Ana capability out of it

700
00:29:24,840 --> 00:29:27,540
that they're not able to get and so

701
00:29:26,250 --> 00:29:29,820
that's where Jeff's company comes in and

702
00:29:27,540 --> 00:29:32,940
says hey we can do this for you you know

703
00:29:29,820 --> 00:29:35,280
you know you want to build out you know

704
00:29:32,940 --> 00:29:37,740
some cool feature that involves cell

705
00:29:35,280 --> 00:29:38,820
phones and your vendor you know your

706
00:29:37,740 --> 00:29:41,490
vendor system was built before

707
00:29:38,820 --> 00:29:44,070
cellphones were in existence or the idea

708
00:29:41,490 --> 00:29:46,710
of a smart phone was even thought of and

709
00:29:44,070 --> 00:29:48,330
so like you know hey we can we can be a

710
00:29:46,710 --> 00:29:50,400
shim and provide you provide you that

711
00:29:48,330 --> 00:29:54,010
capability so that's kind of that was

712
00:29:50,400 --> 00:29:57,610
kind of a sales pitch yeah

713
00:29:54,010 --> 00:30:00,669
I don't know I I wish I knew why they

714
00:29:57,610 --> 00:30:04,000
wouldn't give us the SDK I mean I I can

715
00:30:00,669 --> 00:30:06,309
like I can conjecture that you know

716
00:30:04,000 --> 00:30:07,840
maybe it was a case where the marketing

717
00:30:06,309 --> 00:30:09,070
department at this vendor or the

718
00:30:07,840 --> 00:30:11,230
marketing sales department of the vendor

719
00:30:09,070 --> 00:30:12,159
was really excited about you know then

720
00:30:11,230 --> 00:30:14,500
be able to gain this new capability

721
00:30:12,160 --> 00:30:15,790
without having to not you know

722
00:30:14,500 --> 00:30:18,370
necessarily having to spend any money to

723
00:30:15,790 --> 00:30:19,960
get it but then maybe in the the IT

724
00:30:18,370 --> 00:30:24,070
organization felt threatened by that

725
00:30:19,960 --> 00:30:25,720
right so like but again that's just a

726
00:30:24,070 --> 00:30:27,580
speculation I don't know I've seen

727
00:30:25,720 --> 00:30:29,470
similar similar things played out at

728
00:30:27,580 --> 00:30:31,030
other companies where you know one

729
00:30:29,470 --> 00:30:34,960
department kind of feels under threat by

730
00:30:31,030 --> 00:30:36,600
by an outside organization and when your

731
00:30:34,960 --> 00:30:40,690
livelihood is threatened you sometimes

732
00:30:36,600 --> 00:30:55,830
make some hard decisions but yeah I

733
00:30:40,690 --> 00:30:58,510
think yeah yeah not sure yeah like

734
00:30:55,830 --> 00:31:02,549
looking back I'm not sure what we could

735
00:30:58,510 --> 00:31:02,549
have done differently to find the SDK

736
00:31:03,929 --> 00:31:14,049
yeah yes like like yeah we could

737
00:31:12,669 --> 00:31:16,320
certainly say like we've done this once

738
00:31:14,049 --> 00:31:19,120
before like you know if you're if you're

739
00:31:16,320 --> 00:31:21,790
if your IT organization is is

740
00:31:19,120 --> 00:31:23,770
withholding there's holding something

741
00:31:21,790 --> 00:31:28,080
you know we'll get at the information

742
00:31:23,770 --> 00:31:28,080
like we can we can get at it so

743
00:31:46,610 --> 00:31:50,969
you mean still like 10% of the database

744
00:31:49,019 --> 00:31:54,179
table columns things like yeah it was

745
00:31:50,970 --> 00:31:56,100
probably um you know around 20% that we

746
00:31:54,179 --> 00:31:58,500
need up actually using a lot of what was

747
00:31:56,100 --> 00:32:01,529
in the database was configuration

748
00:31:58,500 --> 00:32:03,720
information for like you know that the

749
00:32:01,529 --> 00:32:07,950
way the client UI was displayed and

750
00:32:03,720 --> 00:32:10,259
things of that sort or like different

751
00:32:07,950 --> 00:32:13,289
minimum and maximum values for like

752
00:32:10,259 --> 00:32:14,700
enforce different business rules so

753
00:32:13,289 --> 00:32:16,408
those were all those are all details

754
00:32:14,700 --> 00:32:18,480
that like we're definitely important to

755
00:32:16,409 --> 00:32:22,100
the vendor but for our integration they

756
00:32:18,480 --> 00:32:22,100
weren't what is big an issue

757
00:32:34,669 --> 00:32:39,450
yeah so the landscape for for the these

758
00:32:37,740 --> 00:32:40,860
vendors and it's like this is the reason

759
00:32:39,450 --> 00:32:42,480
why I'm not I'm being very nonspecific

760
00:32:40,860 --> 00:32:46,979
about the industry but in the specific

761
00:32:42,480 --> 00:32:49,289
industry there are you know it's it's an

762
00:32:46,980 --> 00:32:50,759
application it's a you know hardware and

763
00:32:49,289 --> 00:32:54,090
software that's installed at a physical

764
00:32:50,759 --> 00:32:56,789
location and it's often for large chains

765
00:32:54,090 --> 00:32:57,899
that have thousands or you know

766
00:32:56,789 --> 00:33:00,690
sometimes hundreds of thousands of

767
00:32:57,899 --> 00:33:02,518
locations so switching vendors is

768
00:33:00,690 --> 00:33:10,019
incredibly costly and the vendors know

769
00:33:02,519 --> 00:33:11,429
that yeah exactly yeah so something you

770
00:33:10,019 --> 00:33:14,490
know something you know if but if it was

771
00:33:11,429 --> 00:33:15,960
like a coffee shop right like the

772
00:33:14,490 --> 00:33:18,179
switching cost for them is a lot less

773
00:33:15,960 --> 00:33:23,600
than it was say like on the scale like a

774
00:33:18,179 --> 00:33:23,600
Walmart or something like that so yeah

775
00:33:56,350 --> 00:34:02,649
I think you know one of the lessons is

776
00:33:58,000 --> 00:34:06,280
that you know it it's gonna be a lot of

777
00:34:02,650 --> 00:34:09,460
work and it's it's often worth it so

778
00:34:06,280 --> 00:34:11,800
like I think you know even even if all

779
00:34:09,460 --> 00:34:12,429
we even if we had only had to stop and

780
00:34:11,800 --> 00:34:14,110
read only

781
00:34:12,429 --> 00:34:18,370
that would've been read-only capability

782
00:34:14,110 --> 00:34:19,480
that didn't exist for that system so I

783
00:34:18,370 --> 00:34:22,719
think you know it's one of those things

784
00:34:19,480 --> 00:34:24,639
where you know if the system is still

785
00:34:22,719 --> 00:34:27,189
providing value you know and if it's

786
00:34:24,639 --> 00:34:28,659
been around for 50 years it's it's still

787
00:34:27,190 --> 00:34:31,720
provided it's still providing value

788
00:34:28,659 --> 00:34:32,859
nobody's decided to turn it off so it's

789
00:34:31,719 --> 00:34:35,020
more of those one of those things of

790
00:34:32,860 --> 00:34:36,669
like I think instead of trying to just

791
00:34:35,020 --> 00:34:37,989
outright replace it embrace it figure

792
00:34:36,668 --> 00:34:44,639
out figure out a way to kind of you know

793
00:34:37,989 --> 00:34:47,859
modernize it at the edges yeah right

794
00:34:44,639 --> 00:34:49,449
yeah so yeah so I think you know the

795
00:34:47,860 --> 00:34:51,220
proliferation of lots of small devices

796
00:34:49,449 --> 00:34:55,810
is gonna mean that you know some of

797
00:34:51,219 --> 00:34:58,259
these older systems with yeah yeah

798
00:34:55,810 --> 00:34:58,259
exactly

799
00:35:00,730 --> 00:35:27,680
any other questions or discussion points

800
00:35:03,349 --> 00:35:35,450
yeah oh I love this audience because I

801
00:35:27,680 --> 00:35:40,399
didn't notice that ya know I typed

802
00:35:35,450 --> 00:35:46,990
Dvorak and that's not - for yeah it's

803
00:35:40,400 --> 00:35:49,010
like yeah I don't know that's a I I

804
00:35:46,990 --> 00:35:53,180
leave that as an exercise for the

805
00:35:49,010 --> 00:35:54,619
audience maybe this is a different type

806
00:35:53,180 --> 00:35:56,680
writing vendor who really likes Caesar

807
00:35:54,619 --> 00:36:14,240
or any Caesars name of the typewriter

808
00:35:56,680 --> 00:36:16,250
who knows yeah yeah yeah yeah well we'll

809
00:36:14,240 --> 00:36:17,899
post this and see if anybody if anybody

810
00:36:16,250 --> 00:36:26,000
the internet knows the origins of this

811
00:36:17,900 --> 00:36:33,680
layout somebody's already found a layout

812
00:36:26,000 --> 00:36:37,190
it's the layout of each Caesar like the

813
00:36:33,680 --> 00:36:42,640
Turk yeah yeah Portuguese okay there you

814
00:36:37,190 --> 00:36:42,640
go right here yeah it's got a little age

815
00:36:44,410 --> 00:36:48,670
says oh okay there you go

816
00:36:50,500 --> 00:36:59,300
okay I see this is an awesome audience

817
00:36:56,980 --> 00:37:00,890
if I give this talk again I'm leaving it

818
00:36:59,300 --> 00:37:09,770
in there and if people don't notice I'm

819
00:37:00,890 --> 00:37:19,150
gonna call them out on it yes great so

820
00:37:09,770 --> 00:37:21,620
if you if so if if stories of this sort

821
00:37:19,150 --> 00:37:23,510
fascinate you at all you know I

822
00:37:21,620 --> 00:37:25,549
encourage you to check out like we have

823
00:37:23,510 --> 00:37:29,060
a community that we we manage called

824
00:37:25,550 --> 00:37:30,710
like c-code rocks we have a podcast of

825
00:37:29,060 --> 00:37:32,450
the same name legacy good rocks we've

826
00:37:30,710 --> 00:37:34,940
actually the other engineer on my team

827
00:37:32,450 --> 00:37:36,710
who who worked on this project with me

828
00:37:34,940 --> 00:37:39,110
we interviewed her on one of our early

829
00:37:36,710 --> 00:37:40,760
episodes so if you want to hear how

830
00:37:39,110 --> 00:37:43,670
excited and happy she was to work on it

831
00:37:40,760 --> 00:37:45,440
I think she went through like 90% of the

832
00:37:43,670 --> 00:37:47,480
grind or 100 or so the grind

833
00:37:45,440 --> 00:37:54,410
so she's the she's the one who really

834
00:37:47,480 --> 00:38:03,490
deserves all the credit for this so dot

835
00:37:54,410 --> 00:38:05,810
rocks is a top-level domain yeah yeah so

836
00:38:03,490 --> 00:38:07,879
yeah so if you if you go there we have

837
00:38:05,810 --> 00:38:09,560
we have a slack team that you can join a

838
00:38:07,880 --> 00:38:10,430
chat with other people who enjoy working

839
00:38:09,560 --> 00:38:12,620
on legacy code

840
00:38:10,430 --> 00:38:13,730
I guess people here could go heckle them

841
00:38:12,620 --> 00:38:16,580
I don't know I didn't see a lot of

842
00:38:13,730 --> 00:38:19,970
takers we also have a weekly mastermind

843
00:38:16,580 --> 00:38:23,420
where we talk and commiserate about you

844
00:38:19,970 --> 00:38:25,819
know working with older systems so yeah

845
00:38:23,420 --> 00:38:28,040
I appreciate everybody's time and thanks

846
00:38:25,820 --> 00:38:31,920
for the great questions and noticing the

847
00:38:28,040 --> 00:38:40,949
keyboard layout that's awesome thank you

848
00:38:31,920 --> 00:38:40,949
[Applause]

